{
  "article_text": [
    "video chat is now commonplace for a significant proportion of internet users , via popular , user - friendly software such as skype , windows live messenger , yahoo ! messenger , aol instant messenger ( aim ) , and google chat .",
    "skype alone reported an average of over 120  million connected users every month in their 2010 ipo filing , and 40% of skype - to - skype chat minutes employ video  @xcite . video chat is likely to undergo a further substantial leap in popularity with the increasing availability of video calls on cell phones and tablets .",
    "this report advocates and analyzes another dimension for the expansion of video chat : the use of multiple cameras .",
    "figure  [ fig : usage - scenarios - intro ] demonstrates some of the possibilities enabled by the multicam software package described later . in each case",
    ", a laptop running skype has two or more usb webcams connected , and the chat participants at _ both _ ends of the conversation are able to switch at will between individual views of each camera or a tiled view of all simultaneously .",
    "the primary goals of this report are to analyze the utility and feasibility of such multi - camera video chats , and to discuss some important trade - offs inherent in designing multi - camera software .    @ > c @ > c @   &   ( a ) two forward - facing cameras & ( b ) forward- and rear - facing cameras   &   ( c ) wide shot , headshot , and close - up & ( d ) two cameras for whiteboard discussion   &   ( e ) remote tiled view of ( c ) & ( f ) remote tiled view of ( d )      the predominant paradigm for video chat employs a single webcam at each end of the conversation . for many purposes , this is perfectly adequate . in some cases , the communication taking place is equivalent to a traditional audio telephone call enhanced by the exchange of facial expressions and hand gestures .",
    "but the single - camera scenario also offers the opportunity for forms of communication much further removed from a traditional phone call .",
    "for example , small objects can be displayed and demonstrated by holding them up to the camera ( `` how do you like this water bottle i bought yesterday ? '' ) .",
    "an accurate impression of larger objects can be conveyed by carrying the camera  typically , while it is attached to a laptop , which is also carried  around the objects of interest ( `` this is what the outdoor furniture looks like when it s on the back patio '' ) .",
    "the same method of carrying camera and laptop can be used to convey an impression of an indoor or outdoor space ( `` the apartment we re staying in has this small kitchen , but as you walk into the living room you can see this great view of the downtown through those windows '' ) .",
    "another usage pattern is to follow a moving object such as a pet or child , again by physically moving the camera ( `` watch this  if i walk towards her , the cat will run up the stairs and jump into the cupboard @xmath0 there '' ) .",
    "it is important to note that in many of these usage patterns , a participant in the chat makes use of a _ local view window _ on the screen , which shows the video being sent from the local camera .",
    "this is how a participant verifies that the remote participant can see the objects or activities currently being discussed .",
    "the local view window is typically provided as a small subwindow in the main video chat window .    despite the wide range of possible usage patterns ,",
    "the single - camera paradigm for video chat is unnecessarily restrictive and burdensome .",
    "it is _ restrictive _ because only a single view is available from the single camera at any one time .",
    "it is _ burdensome _ because the the onus is on the person with the camera to point it at the part of the scene that is currently of interest .",
    "an underlying reason for these problems with the single - camera paradigm is that the paradigm inverts one of the basic relationships in human communication .",
    "some new terminology will help explain this . at any particular instant in a conversation between two individuals , the person who is speaking , explaining , or demonstrating an activity or object",
    "will be referred to as the _ speaker _ ; the person listening and watching the speaker will be referred to as the _",
    "_ listener__. in a face - to - face conversation , the speaker is free to interact with the environment in whatever manner provides the most effective communication .",
    "meanwhile , the listener is free to determine which part of the scene will command his or her attention .",
    "the conventional video chat , on the other hand , reverses these two freedoms .",
    "the speaker loses the freedom to interact with the environment , and is instead required either to move objects into the view of the camera , or move the camera . and",
    "in both cases , the speaker it is often required to constantly monitor the local view window and adjust the listener s view by moving camera or object .",
    "the listener also loses freedom in conventional video chat : specifically , the freedom to choose which part of the scene is being watched .",
    "the listener is restricted to see only what is available from the speaker s single camera .",
    "of course , the freedoms described here are not absolute .",
    "for example , even in a face - to - face conversation , the speaker encounters plenty of constraints , such as the social convention to face the listener most of the time , and the necessity of holding any objects where they can be seen . and on the other hand , even in a standard video chat , the listener does have some freedom to choose which part of the transmitted image will be watched most closely .",
    "but in both cases , there is a substantial difference between the amounts of freedom in a face - to - face conversation and a video chat .    as a concrete example of these restrictions ,",
    "consider the following scenario , which the author has experienced frequently .",
    "a parent and young child are attempting a video chat with a friend or relative using a webcam mounted on a laptop .",
    "for concreteness , let s say the chat is with a grandparent .",
    "the parent would like to converse with the grandparent while also demonstrating the child s activities , which may include crawling , climbing , running , and determined attempts to interfere with the laptop .",
    "this typically degenerates into 100% of the parent s attention being devoted to moving the laptop and camera around , constantly checking the local view window to ensure that the child can be seen by the grandparent .",
    "it is very difficult to have a satisfactory conversation under these circumstances . indeed , in the author s own experience",
    ", the only viable solution for the parent is to recruit a third person to act as full - time cameraman .",
    "this liberates the speaker ( i.e.  parent ) , but does not really free the listener ( i.e.  grandparent ) much .",
    "for example , we can imagine that the grandparent might wish to view the parent at certain times in this conversation , and the child at other times",
    ". an ideal solution would give the grandparent freedom to switch between these views with ease .",
    "it may prove impossible for technology to completely restore these face - to - face freedoms under the constraint of video chats .",
    "but there are three obvious avenues to explore in seeking to partially restore these freedoms :    1 .",
    "[ item : multiplecameras ] employ _ multiple cameras _ simultaneously , each showing a different view of the scene ( thus reducing ",
    "but probably not eliminating  the need for the speaker to move cameras or objects , and monitor the local view window ) .",
    "[ item : listener - control ] permit _ listener control _ : allow the listener to adjust and choose between the views offered by the speaker .",
    "this includes switching between cameras , viewing all cameras simultaneously , and could also incorporate more fine - grained control such as ( digital or actual ) pan / tilt / zoom .",
    "[ item : heterogeneous - devices ] use _ heterogeneous devices _ to provide the listener with maximum choice .",
    "this could include standard webcams , wide - angle cameras , 3d cameras , wireless cameras , and panoramic cameras .",
    "this report investigates some aspects of items  [ item : multiplecameras ] and  [ item : listener - control ] ( multiple cameras and listener control ) , but does not address item  [ item : heterogeneous - devices ] , except for a brief discussion in section  [ sec : related - work ] . and",
    "even within items  [ item : multiplecameras ] and  [ item : listener - control ] , the report examines only a small subset of the possible approaches .",
    "the primary objective is to demonstrate the utility and the feasibility of multi - camera video chat in general , and especially the utility of listener control .",
    "it is not the objective of the report to exhaustively assess the possibilities for multiple cameras or listener control , nor to recommend an optimum set of features .",
    "in fact , the report is limited to considering standard webcams only , with listener control limited to switching between a small fixed number ( 24 ) of views from these webcams .",
    "although this barely scratches the surface of the potential for multi - camera chat , we will see that the report nevertheless provides several important contributions ( see section  [ sec : contribution ] ) .",
    "another restriction of the scope of the report is that it specifically addresses _ consumer _ video chat .",
    "possibilities for commercial - grade videoconferencing and professional webcasts are not directly considered , although some of the conclusions may transfer to those arenas .",
    "the emphasis on consumer video chat means we seek solutions that are widely applicable and easily used by nonexperts .",
    "therefore , the emphasis will be on solutions that : ( i )  involve inexpensive , standard hardware ; ( ii )  have moderate computational costs ( i.e.  the software runs on a modest device without adversely affecting a video chat ) ; and ( iii )  require only extremely simple inputs from the user .",
    "a final caveat is that the report does not seek to quantify the benefits of multi - camera video chat , when compared to the single - camera approach .",
    "as already stated above , it seems clear that the single - camera paradigm is perfectly adequate for many video chats . on the other hand ,",
    "it is equally obvious that some scenarios can benefit from multiple cameras .",
    "any attempt to quantify these benefits suffers from a severe chicken - and - egg problem . to see this ,",
    "suppose that a hypothetical experiment reached the following conclusion : `` 5% of single - camera video chats would be significantly enhanced by using multiple cameras , where ` significantly enhanced ' means an increase in measured user satisfaction of at least 30% . ''",
    "this hypothetical conclusion might seem disappointing , since only 5% of chats benefit significantly .",
    "but of course , the experiment would be conducted within the present ecosystem of single - camera chats .",
    "so the population of chats sampled by the experiment would be heavily biased towards setups constructed with the single - camera paradigm in mind .",
    "it is possible that if multi - camera tools were widely available and easily used , the video chat ecosystem would be altered significantly and a much larger proportion of video chats could benefit .",
    "hence , the approach of the present report is to demonstrate that compelling multi - camera scenarios exist ( see next paragraph ) , without addressing the question of whether such scenarios comprise a substantial fraction of video chats  according to the chicken - and - egg argument above , this question is irrelevant .",
    "let us immediately discuss the existence of compelling multi - camera scenarios for consumer video chat .",
    "there are four types of evidence here .",
    "first , the report explicitly describes two scenarios that are difficult or impossible without multiple cameras : the `` children in the background '' scenario of section  [ sec : typical - usage ] , and the `` whiteboard lecture '' scenario of section  [ sec : user - study ] .",
    "second , there are several existing systems that offer multi - camera consumer video chat ( see section  [ sec : related - work ] for details ) .",
    "i am not aware of any published statistics on the usage of such systems , but the mere existence of these systems does suggest there is demand for them .",
    "third , i do have download statistics for the multicam software package introduced in this report : despite being a relatively immature research prototype with no publicity beyond a posting to some skype forums , multicam is being downloaded dozens of times per month at the time of writing .",
    "fourth , some commercial videoconferencing systems offer certain multi - camera capabilities ( see section  [ sec : related - work ] for examples ) , although not in the chat - friendly format suggested here , as far as i am aware .",
    "presumably , consumers would also like these capabilities if they were available at little or no cost .",
    "the experiments described later employ a software package , called multicam , written by the author specifically for this research .",
    "the multicam software itself is not a primary contribution of the report , although it does have some limited novelty , as described in section  [ sec : related - work ] .",
    "nevertheless , it will be useful to understand multicam s functionality before discussing related work ( section  [ sec : related - work ] ) and the new results of this report ( sections  [ sec : user - study ] and  [ sec : benchmarks ] ) .",
    "therefore , this section gives an overview of multicam from the point of view of a _",
    "user_. the design of multicam , from the point of view of a _ programmer _ ,",
    "is discussed separately , in section  [ sec : multicam - design ] .",
    "multicam is free and open source , and is available for microsoft windows only ( more precisely , windows  7 and later ) . the local camera - switching functionality of multicam works , in principle , with any video chat software .",
    "remote camera - switching , on the other hand , works only with skype , since it relies on skype s so - called _",
    "desktop api_. for concreteness , the remainder of the report focuses on running multicam with skype only .",
    "multicam consists of two components : the multicam application , and the multicam virtual camera .",
    "the multicam application , shown in figure  [ fig : multicam - app - screenshot ] , is a stand - alone gui application that allows the user to adjust settings and to perform camera - switching functions during a video chat .",
    "the multicam virtual camera appears , to the operating system , to be a standard video camera device .",
    "video chat software such as skype therefore offers `` multicam '' as one of the options when a user selects a video input device , as shown in figure  [ fig : multicam - select ] . in reality , of course , the multicam virtual camera is not a physical camera .",
    "instead , it multiplexes the machine s physical cameras : it passes video data from one or more of the physical cameras to the video chat software , possibly after transforming the data in some way .        to be more specific ,",
    "multicam has two high - level modes : _ tiled _ , and _ non - tiled_these are shown in figure  [ fig : tiled ] .",
    "the tiled mode places subsampled versions of the input from each physical camera into a single output image .",
    "when in non - tiled mode , one of the physical cameras is designated by the user as the _",
    "primary camera_. the input from the primary camera is transferred unaltered to the output image , but some small subsampled versions of the other ( non - primary ) physical cameras are overlaid at the bottom left of this output .",
    "the identity of the primary camera is not fixed .",
    "indeed , the multicam application permits users to switch the identity of the primary , and to switch between tiled and non - tiled modes , with a single keystroke or mouse click ( see figure  [ fig : multicam - app - screenshot ] ) .    [ cols=\"^,^ \" , ]     this brings us to the most important design decision for the multicam ui : how should the user switch cameras ? clearly , it is desirable that the user can switch cameras quickly and easily , preferably with a single keystroke or mouse click . on the other hand , some early experimentation demonstrated that control of multi - camera chats can be bewildering .",
    "recall that there may several ( say , up to four ) cameras at each end of the conversation , and each user can control the camera - switching at both ends . so a user may be faced with as many as eight possibilities when switching views . to reduce the possible confusion to an absolute minimum",
    ", multicam adopts an extremely limited interface .",
    "there are only two actions a user can perform : _ advance _ the local camera , or _ advance _ the remote camera .",
    "the word `` advance '' here has a specific technical meaning , defined as follows .",
    "the @xmath1 cameras connected to any one machine have a natural ordering , determined by the order in which the operating system enumerates them .",
    "so they can be the assigned numerical ids @xmath2 .",
    "if the system is in non - tiled mode when the user advances the camera , the i d of the primary camera is incremented by one  so we literally `` advance '' to the next camera s view .",
    "of course , there is an exception if the primary camera i d is already equal to @xmath1 : in this case , the system switches into tiled mode .",
    "finally , if the system is currently in tiled mode , it switches to non - tiled with primary camera i d equal to  1 .",
    "thus , the user cycles through the @xmath3 possible views in a fixed order .",
    "there is no way to jump directly to a particular desired view .",
    "the advantage of this is that control by keystroke remains feasible  and this is especially important when we consider that the user may want to maximize the video chat window , leaving the multicam application window invisible . in the current implementation ,",
    "for example , the user hits the enter key to advance the local camera , and the spacebar to advance the remote camera . even for unpracticed users , memorizing these two keystrokes is easily achievable . on the other hand , there is some evidence from the user study ( section  [ sec : user - study ] ) that users would prefer to have a method of jumping directly to the desired view .",
    "investigation of this is left for future work , primarily because of the difficulty of integrating any sensible solution with existing video chat software .",
    "for example , one plausible possibility would be for a user to switch views by clicking on the thumbnail of the desired new primary camera ( or a suitable overlaid icon for tiled mode ) .",
    "but this would require multicam to capture mouse clicks from the video chat window , which is not directly supported by existing video chat software . in any case , this solution is still unsatisfactory for chats with multiple cameras at both ends , since the number of thumbnails on the screen may be overwhelming for the user .",
    "there are some very interesting possibilities for future work here , discussed in section  [ sec : discussion ] .",
    "naturally , the keystroke - switching feature can be disabled , so the user can employ the keyboard for some other purpose while chatting , if desired . when not using keystrokes , a user can still switch cameras by clicking on the `` switch local camera '' or `` switch remote camera '' buttons in the multicam application window .",
    "multicam permits one additional method of switching cameras .",
    "when the multicam application is running , any skype instant message received advances the local camera setting .",
    "clearly , this is an abuse of the intended functionality for skype instant messages , but there is a good reason for incorporating this instant message ( i m ) hack . to understand this reason , suppose user",
    "@xmath4 is video skyping with user @xmath5 .",
    "suppose further that @xmath4 has multiple cameras and is running the multicam application , whereas @xmath5 is not running multicam . without the i m hack",
    ", @xmath5 would have no method of advancing @xmath4 s camera in this situation .",
    "the key point is that i m is an integral part of all skype clients and is guaranteed to be available to any user , whereas an application such as multicam ( or even a more tightly - bound plugin ) requires a separate installation procedure before a user can enjoy the benefits of remote camera switching .",
    "the ability to switch cameras via i m is especially crucial for mac and linux users , since the multicam application is windows - only at the time of writing . as with switch - by - keystroke , the switch - by - im feature can be disabled , which is obviously necessary if the chat participants wish to use i m for its intended purpose .",
    "finally , note that multicam offers a small thumbnail of all non - primary views when in non - tiled mode .",
    "an example of this can be seen in the right - hand panel of figure  [ fig : tiled ] : in the bottom left of the panel , we see thumbnails of three other views .",
    "early experience with multicam suggested these thumbnails are helpful , but they also add clutter .",
    "these thumbnails might even overload the user with information .",
    "this is especially true given that typical video chat software also displays yet another thumbnail , showing the remote participant s view of the local scene .",
    "to make this concrete , consider a specific example , in which users @xmath4 and @xmath5 are chatting via skype and multicam .",
    "suppose user @xmath4 has two cameras , denoted @xmath6 , and user @xmath5 has three cameras , denoted @xmath7 .",
    "suppose further that @xmath4 has selected non - tiled mode with @xmath8 as primary , and @xmath5 has selected non - tiled mode with @xmath9 as primary .",
    "then with default skype and multicam settings , @xmath4 s view consists of a large view of @xmath8 , overlaid with small thumbnails of @xmath10 and @xmath11 in the bottom left , and a medium - sized thumbnail ( showing @xmath5 s view ) of @xmath9 in the bottom right , but this latter thumbnail has an additional sub - thumbnail of @xmath12 overlaid in its own bottom left . clearly , this could be a case of too much information for the user , and future work should investigate cleaner ways of conveying it .",
    "in this section , we survey two strands of related work : ( i ) multi - camera video chat , and ( ii ) more immersive telepresence projects .",
    "it is claimed that this report occupies a vacant niche in the literature , because academic projects and publications have focused on ( ii ) , whereas this report focuses on the simpler ideas in ( i ) .",
    "more specifically , software for ( i ) has been available for at least a decade , but the utility and feasibility of such software  especially the possibility of listener - controlled camera - switching  has not been rigorously analyzed .",
    "this report provides that analysis .",
    "several existing software products offer convenient ways for the speaker to switch between cameras during video chat .",
    "these include manycam and webcammax .",
    "in addition to easy switching , both these products permit a picture - in - picture mode , in which one camera s output can be overlaid on the others  this is a similar to multicam s tiled mode . neither offers simultaneous viewing of more than two cameras , nor do they permit listener - controlled switching . to the best of my knowledge , the design of these tools is not discussed in any publicly - disclosed documents . but both are marketed primarily as webcam effects software : that is , as a tool for altering the output of a single , primary camera .",
    "manycam is also prominently marketed for simultaneously using a single webcam in multiple applications , in contrast to multicam s primary goal of using multiple webcams in a single application .",
    "the differing emphases of multicam and these existing software products will be important during the discussion of multicam s design in section  [ sec : design - overview ] .",
    "another existing alternative is vh multicam studio ( vhms ) .",
    "vhms permits tiling of an arbitrary number of cameras , and even allows listener - controlled switching in skype via a variant of the i m hack described in section  [ sec : multicam - overview ] , but the interface relies on saving a number of preset configurations and would be challenging for novice users .",
    "the three products just mentioned are closed - source .",
    "it is worth noting that even with the present version of skype  ( 5.5 ) , it is possible to use multiple cameras without resorting to virtual camera software such as manycam .",
    "one approach is to launch separate instances of skype on the same machine , log in with different identifiers on these instances , assign different cameras to the instances , and start a multiparty chat .",
    "obviously , this involves some inconvenience , and consumes more bandwidth than necessary .",
    "alternatively , one can use a single instance of skype and use the existing ui to switch between cameras during a chat .",
    "this method requires several clicks , and generally involves several seconds of latency after the new camera has been selected , but is by no means unusable .",
    "a relatively recent development is the emergence of mobile devices and tablets with two cameras ( e.g.  apple s ipad  2 , htc s droid incredible  2 ) .",
    "these devices have one camera on the front , intended primarily for video chat ; and one on the back , intended primarily for capturing photos and video .",
    "but of course it is possible to use both cameras during video chat , and some chat clients already support this at the time of writing ( e.g.  google talk , skype mobile ) .",
    "these clients support convenient , intuitive speaker - controlled switching between the two cameras .",
    "however , they do not support simultaneous views of both cameras , nor do they support listener - controlled switching .",
    "although this report focuses on two - way video chat , some of the multi - camera discussion also applies to the scenario of _ webcasting_a type of one - way communication in which the speaker broadcasts to multiple listeners , who may or may not be watching in real time .",
    "webcasting involves two separate tasks : content creation ( typically done using specialized webcasting software such as camtwist studio , webcam studio , or webcaster ) , and content delivery ( typically via online platforms such as ustream or livestream ) . only the former concerns us here . webcasting software focuses on fusing multiple types of media such as screenshots , webcams , presentation slides , and prerecorded video clips  but the software often also permits multiple webcams as inputs . and because webcasting software is typically implemented via the same virtual camera technique used in multi - camera video chat software",
    ", one can therefore use it for a multi - camera video chat .",
    "this may even be the most effective choice for a well - practiced user who wishes to use the sophisticated features of webcasting software .",
    "but this is less than ideal for the simple camera - switching envisaged in the current report . moreover , to the best of my knowledge , no webcasting software permits listener - controlled switching between cameras .",
    "an obvious alternative to switching between multiple cameras is to arrange for a single camera to move via pan / tilt / zoom ( ptz ) .",
    "there are many interesting possibilities here , including the use of motion detection  ( e.g.  @xcite ) or a physical sensor located on the target of interest ( e.g. swivl ) .",
    "these approaches are complementary to the focus of this report . of more direct relevance",
    "are the possibilities for remote ( i.e.  listener ) control of ptz cameras . at the time of writing , ip cameras with remote control functionality",
    "are available for under $ 100 , which comes close to our goal of being usable for consumer video chat .",
    "unfortunately , present ip cameras are typically designed for surveillance applications ; their image quality tends to be inadequate for enjoyable video chat , and the remote control interfaces can be clunky . in any case ,",
    "such cameras can still be regarded as complementary to this report s proposals .",
    "even if low - cost , high - quality , remote - controlled ptz cameras with slick interfaces were available , we can still imagine enhancing the video chat further by using several such cameras simultaneously with a multicam - like camera - switching interface layered on top .",
    "although outside the scope of this report , it s important to realize that multi - camera video chat could be enhanced by non - standard cameras .",
    "one simple but liberating possibility is the use of wireless cameras .",
    "surprisingly , at the time of writing ( march 2012 ) , there is no bluetooth camera suitable for consumer video chat available for windows systems , and only one such camera for apple systems ( ecamm s bt-1 ) .",
    "wireless ip cameras are another option , in principle , but appear to be designed primarily for surveillance purposes and the consumer - grade versions typically have poor image quality .",
    "smartphone cameras can be converted into wireless webcams via apps such as droidcam and smartcam .",
    "this is a very promising approach ; the only disadvantage is that the user must either own an adjustable smartphone tripod , or manually hold the smartphone in position .",
    "presumably , the ecosystem of consumer - friendly wireless webcams will expand significantly in the near future .",
    "panoramic cameras represent another alternative for enhancing video chat .",
    "these have been previously explored in academic research projects such as flycam  @xcite , and are now available as relatively inexpensive consumer products such as the gopano micro .",
    "it would be very interesting to combine this product with listener control and multi - camera switching .",
    "in contrast to all the above alternatives , the multicam software presented in this report offers single - keystroke ( or mouse - click ) switching by both speaker and listener , between an arbitrary number of cameras , and including a tiled mode .",
    "hence , there is a small amount of novelty in the software itself , especially given that multicam is open source .",
    "but the minutiae of features offered by such software are fairly unimportant , given that these features are all easy to add .",
    "video chat software makers such as skype , for instance , could easily incorporate all of multicam s functionality directly into their products with an insignificant investment of perhaps one or two programmer - months .",
    "indeed , i hope that after reading this report , video chat software makers will include these features , taking account of the findings described in later sections .",
    "the goal of this report is related to , but separate from , the goal of immersive telepresence . in this report",
    ", we seek to enhance the listener s experience by providing multiple views of the speaker s location , and by giving the listener control over switching between those views .",
    "in contrast , immersive telepresence seeks to enhance the listener s experience by creating the impression that the listener is immersed in the speaker s location ( or perhaps a virtual location instead ) . for example",
    ", the goal of the bireality system  @xcite is `` to recreate to the greatest extent practical , @xmath0 the sensory experience relevant for face - to - face interactions , '' by immersing a physical robot in a remote location .",
    "the 3dpresence project  @xcite recreates some of the important 3d and perspective effects in a physical conference - room setting , surpassing the immersiveness of existing commercial telepresence systems such as cisco telepresence and hp halo .",
    "numerous other projects , such as viewcast  @xcite and coliseum  @xcite , place all participants into a virtual environment .",
    "a survey by otto _",
    "et al . _",
    "@xcite gives further examples focused on collaboration by geographically dispersed users .",
    "implicit in all these projects is the assumption that the quality of the listener s experience will increase with the extent and fidelity of the immersiveness .",
    "this assumption may be true in general  and is particularly apt for certain facets of communication such as gaze and gesture awareness  @xcite  but it does not preclude improving the listener s experience through other , simpler means .",
    "the goal of this report is to do just that : without seeking immersiveness , we can give the listener more options and more control via the much simpler strategy of employing multiple views .",
    "the two primary contributions of the report are :    * it demonstrates the _ utility and feasibility of multi - camera video chat _ for certain applications .",
    "* it analyzes the desirability of _ remote control over the camera view_.    to the best of the author s knowledge , no previous publication has addressed these points in detail .",
    "the secondary contributions of the report are :    * it describes the design trade - offs inherent in building virtual camera software to multiplex several cameras simultaneously , and offers an open - source solution to this problem . *",
    "it makes recommendations for a standardized protocol that could be used by future multi - camera software modules to interact with video chat software . *",
    "it identifies several areas in which webcam manufacturers and video chat software developers could enhance their support of multi - camera use .",
    "again , to the best of the author s knowledge , the existing literature does not address any of these contributions in detail .",
    "section  [ sec : multicam - overview ] described the design of multicam from the point of view of a user . in this section",
    ", we look under the hood , discussing design decisions taken by the programmer .",
    "we will concentrate on design issues with direct relevance to the user study ( section  [ sec : user - study ] ) and benchmark experiments ( section  [ sec : benchmarks ] ) , relegating other details to appendix  [ sec : mult - design - deta ] .",
    "as already discussed , the multicam software consists of two largely independent modules : the multicam _ application _ ( ` multicam.exe ` ) and the multicam _ virtual camera _ ( ` multicamfilter.dll ` ) . for reasons that will become clear",
    "shortly , the multicam virtual camera is more accurately termed the multicam _ filter _ , and we use the latter term for the remainder of this section .",
    "figure  [ fig : communication ] gives an overview of how the two components communicate with each other and with skype .",
    "as we see in the figure , four different types of communication are used : standard windows interprocess communication ( ipc ) , api calls from the windows directshow framework  @xcite , the publicly - available _ skype desktop api",
    "_  @xcite , and the proprietary skype protocol .",
    "each of these is described in more detail below . as a concrete example ,",
    "the red arrow in figure  [ fig : communication ] shows the chain of communication that occurs when a user clicks on `` advance remote camera '' in the multicam application ; this too is discussed in more detail below .",
    "we previously saw , in section  [ sec : multicam - overview ] , that the multicam application is a stand - alone gui application that allows the user to adjust settings and to perform camera - switching functions during a video chat ( see figure  [ fig : multicam - app - screenshot ] ) .",
    "but the multicam application has a second crucial role : it monitors the state of other components in the system and takes actions based on its observations .",
    "more specifically , the components monitored by the multicam application are : the local instance of skype , the local multicam filter , and the remote multicam filter . each of these components may be present or absent , active or inactive , and has certain additional state .",
    "the multicam filter is a dynamic link library ( dll ) , and we have already seen that it acts as a virtual camera , multiplexing the machine s physical cameras .",
    "the multicam filter is implemented in the windows directshow framework  @xcite , which is a microsoft framework for multimedia programming . in this framework ,",
    "modules that create , consume , or transform multimedia data are known as _ filters _ ; hence the choice of the terminology `` multicam filter . ''",
    "the chief abstraction in directshow is a directed graph known as a _ filter graph_. the edges on the graph represent paths along which video and audio data can flow , and vertices of the graph represent filters . in directshow , filters are implemented as c@xmath13classes derived from a base filter class .",
    "the standard directshow library provides numerous more specialized filter types ; of particular interest to us are the _ source filter _ and the _ transform filter_. a source filter has no inputs : it creates and outputs its own multimedia data . a webcam ( or , more accurately , its device driver ) is one example of a source filter . in contrast , a transform filter ingests multimedia data from one or more inputs , combines or alters those inputs in some way , then outputs the result .",
    "common transform filters include those that convert between color spaces or alter the aspect ratio of a video stream .",
    "of course , implementors can write their own filters , and they are free to blur the boundaries between filters in the standard library .",
    "this is exactly what the multicam filter does .",
    "specifically , the multicam filter is implemented so that it appears , from the point of view of any video chat software , to be a source filter .",
    "the video chat software can insert the multicam filter into a directshow filter graph , and begin extracting video frames from the filter when it is ready to do so . in reality , the multicam filter is not a source filter but a transform filter .",
    "when the multicam filter detects that it has been added to a directshow filter graph , it immediately creates some new vertices in the graph ",
    "one for each physical camera in the system  and creates connections from the new vertices to itself .",
    "thus , the multicam filter has access to the latest image frame from each physical camera .",
    "it is a simple matter to reassemble these into the desired output .",
    "recall from section  [ sec : multicam - overview ] that the current filter state is specified by the i d of the primary camera , and value of the tiled / non - tiled flag .",
    "thus , the output is assembled by subsampling and shifting the inputs if necessary , then placing them in the filter s output buffer , producing frames such as those shown in figure  [ fig : tiled ] .",
    "multicam instances on different machines communicate with each other via the so - called _ skype desktop api _  @xcite .",
    "this is a publicly - documented protocol which third - party applications can use to communicate with skype instances .",
    "the protocol features dozens of message types . to give just two simple examples",
    ", the protocol enables an application to determine the user name of the currently logged in skype user , and to be notified whenever a skype call begins or ends .    of particular interest for multicam",
    "is the set of message types designated as `` application to application '' ( ap2ap ) messages .",
    "these message types enable a third - party application communicating with one instance of skype to exchange arbitrary strings of bytes with an application communicating with another instance of skype on a remote computer .",
    "we employ this ap2ap feature to enable two instances of multicam to communicate .",
    "in particular , a local instance of multicam can instruct a remote instance to advance its camera setting , during a skype call . as figure  [ fig : communication ] shows",
    ", the path taken by such a request is rather circuitous , requiring four hops between the various local and remote modules , and employing three different protocols en route .",
    "the precise set of ap2ap message types employed for communication between multicam instances is described in appendix  [ sec : multicam - ap2ap ] .",
    "the choice of mechanism for switching cameras is perhaps the chief design decision for a multi - camera virtual camera .",
    "let us initially ignore the possibility of tiled mode and concentrate on switching the current primary camera between two or more physical cameras .",
    "there are at least two obvious alternatives , which we will call _ one - at - a - time _ and _ all - at - once_.    the one - at - a - time approach uses exactly one camera at any instant : the directshow graph consists of the current primary camera as a source filter , connecting to the virtual camera filter , which probably does nothing but pass the physical camera s frames untouched to the downstream filter . in this approach ,",
    "the software needs to perform surgery on the directshow graph whenever the input camera is switched .",
    "specifically , the software performs a ` stop ` operation on the graph , replaces the source filter with a filter whose source is the newly - requested camera , then performs a ` start ` operation on the graph . as we will see in section  [ sec : experiment3-camera - switching - latency ] , there is evidence this can impose additional latency of 400700  ms , compared with the all - at - once approach described next .    the all - at - once approach connects source filters from all desired physical cameras to the virtual camera filter when the directshow graph is first created .",
    "video data is continuously streamed from all cameras simultaneously , and the job of the virtual camera filter is to pass on the frames of the current primary camera while dropping data from the other cameras on the floor . clearly , this is extremely wasteful in terms of computational resources .",
    "however , it has the benefit of rapid camera switching , as the costly graph surgery operation is eliminated ( see figure  [ fig : camera - switch - latency ] in section  [ sec : experiment3-camera - switching - latency ] ) .",
    "note that the all - at - once approach also permits arbitrary combinations of the input images , such as a tiled view of all cameras , or small overlay views of the other cameras placed on top of the primary camera view .",
    "perhaps it is possible to implement a hybrid approach that retains most of the benefits of all - at - once and one - at - a - time .",
    "for example , it may be possible to construct a graph in which source filters for all cameras are present and connected , and the cameras are activated and ready to transmit data .",
    "but we arrange for data to be transmitted only on request , so that only one camera is streaming data to the virtual camera filter at any one time .",
    "it is conceivable that such an approach would consume little or no more resources than the one - at - a - time approach , while requiring only a small additional latency for switching .",
    "investigation of this possibility is left for future work .",
    "do cameras even support the notion of being ready to transmit , without actually transmitting ? if not , this is a feature that camera manufacturers and developers of frameworks such as directshow might consider implementing in future .",
    "yet another possibility is for the non - primary cameras to continuously transmit , but at a very low resolution suitable for thumbnail images .",
    "this would consume fewer resources while still providing everything the multicam filter needs while in non - tiled mode .",
    "but switching might be slow with this approach , since multiple cameras would need to change resolution on every switch .",
    "note that , in principle , both the all - at - once and one - at - a - time approaches permit the virtual camera filter to be a so - called _ in - place _ transform .",
    "this means that the video data is not copied : it remains in a buffer and a pointer to this buffer is passed to the downstream filter .",
    "obviously , the advantage of an in - place transform , compared to a more general transform that copies the data into a separate buffer , is that it avoids the computational expense of copying .",
    "the filter could even add overlay windows ( e.g.  small views from other cameras ) without sacrificing the in - place property .",
    "however , the multicam design does not use an in - place transform .",
    "there are two reasons for this .",
    "first , in - place transforms are not appropriate for tiled mode ( discussed next ) .",
    "second , if we are using the all - at - once approach , and the cameras do not all support exactly the same resolution , it is impossible to switch between cameras without performing directshow graph surgery ( see section  [ sec : resolution ] ) .",
    "the design choices become murkier when we wish to support tiled mode , or other similar notions such as picture - in - picture .",
    "if we are displaying video data from all cameras simultaneously , we must take the all - at - once approach .",
    "moreover , as mentioned above , tiling the frames requires that they are subsampled and moved to the correct subrectangle in the downstream image , which removes the possibility of using an in - place transform .",
    "one can imagine designs in which the system switches between all - at - once ( or at least some - at - once ) when multiple inputs are required , but falls back to one - at - a - time at other times .",
    "it is not clear that the complexity of the solution would be justified by its benefits .",
    "motivated chiefly by the goal of low - latency camera - switching , but also the desire for a tiled mode , multicam uses the all - at - once approach .",
    "indirect evidence ( especially the switching latency measured in section  [ sec : experiment3-camera - switching - latency ] ) suggests that the other virtual camera tools analyzed in this report all use the one - at - a - time approach .",
    "this is not surprising : as discussed in section  [ sec : related - work ] , low - latency camera - switching is not a primary goal of these tools .",
    "thus , we now understand the reasoning behind the following two important design decisions : ( i ) multicam copies data rather than using an in - place transform , and ( ii ) multicam uses the all - at - once approach for switching between cameras .      what is the resolution of a virtual camera filter ?",
    "a simple answer is : the same resolution as the physical camera currently being used as input .",
    "this makes good sense in the one - at - a - time model , but is problematic for the all - at - once approach , where the set of cameras may be heterogeneous and offer different resolutions and aspect ratios .",
    "a brief discussion of webcam capabilities is needed before we continue . for our purposes ,",
    "a _ capability _ of a webcam is a tuple expressing a resolution and aspect ratio ( e.g.  @xmath14 ) , a compression scheme ( e.g.  none , or h.264 ) , a color format ( e.g. rgb or yuv ) , and a frame rate ( e.g. 30  fps ) .",
    "webcams typically offer many capabilities ( one or two dozen is not uncommon ) .",
    "software employing a webcam can designate which of the available capabilities should be used before any video data is obtained .",
    "only one capability at a time is active .",
    "hence , in the one - at - a - time model , the virtual camera software can enumerate the capabilities of the ( unique ) primary camera , select a capability whose resolution is closest to some target resolution ( possibly using additional criteria such as the compression scheme ) , and plug the resulting source filter directly into the directshow graph . because the graph is stopped before changing source filters , any change in resolution  or the remaining capability dimensions ",
    "is handled gracefully .",
    "the all - at - once model does not have this luxury .",
    "the graph is not stopped during a camera - switch , so it is preferable that the virtual camera filter maintains a fixed output resolution , even when its input resolution changes . multicam uses a simple approach to deal with these problems .",
    "it has a fixed ( but configurable ) target image height , which is 640  pixels in all experiments reported in this report . at startup ,",
    "each camera s capabilities are enumerated and a capability with the largest height that fits within the target height is selected .",
    "multicam requests uncompressed rgb data at 30  fps if it is available .",
    "the motivation for this is that we need to choose some fixed output format for the multicam filter , and uncompressed , 30-fps rgb is a simple , uncontroversial choice likely to be supported by many webcams . if this format is not available , multicam requests the first available alternative at the previously - selected resolution . in this case ,",
    "directshow automatically inserts a suitable transform filter between the source and multicam filter , which increases overhead but is not otherwise problematic . when preparing a camera frame for output , if the frame does not fill the target resolution , multicam shifts it appropriately so the output is centered and has a black border .",
    "a similar process occurs for creating a tiled view , but images are also subsampled to fit within a designated tile .",
    "multicam takes no explicit steps to address issues of timing and frame rate .",
    "it relies on default directshow behavior to manage the flow of data within the graph , which may include dropping frames if a given filter is operating faster than a downstream filter .",
    "multicam incorporates or adapts several modules of code not written by the author .",
    "first and foremost , multicam relies heavily on the microsoft example code that ships with directshow .",
    "of particular note here are the generic source filter , transform filter , and transform - in - place filter examples .",
    "techniques specific to virtual cameras were adapted from the publicly - available sample code known as `` vcam . ''",
    "multicam s techniques for capturing global mouse and keyboard events rely on an online article and code by george mamaladze  @xcite . finally , multicam interacts with the skype desktop api via an altered version of a library written by gabriel szabo  @xcite .",
    "the multicam filter is implemented in approximately 9000  lines of c@xmath13 ; the multicam application is implemented in approximately 4000  lines of c # ; the grand total is therefore about 13,000  lines of code for the entire package .",
    "( lines of code are measured by the unix utility ` wc ` , which includes comments and blank lines in the count . ) as remarked above , much of the multicam code consists of imported libraries or example code , some of which was substantially altered .",
    "a rough estimate suggests that just under half of the multicam code was imported with little or no alteration .",
    "this implies the total amount of code written , or substantially edited , for multicam is approximately 6500 lines of code .",
    "additional design details are discussed in appendix  [ sec : mult - design - deta ] .",
    "at the time of writing , multicam has been employed for a genuine skype chat approximately once per week by the author , over a period of five months .",
    "here , `` genuine '' means that the chat was not part of a deliberate experiment , and its primary purpose was communication with friends or family . in every case , the reason for using multiple cameras was that one or more additional family members were present and i wanted to include them in the video stream .",
    "obviously , the impressions gained from this experience have little scientific rigor : there was no methodical data collection , and my subjective impressions are probably biased by a desire for multicam to appear useful .",
    "the results of a careful user study are reported in section  [ sec : user - study ] , but that study focuses on one very specific scenario , whereas my own use of multicam has been much more varied .",
    "therefore , this section reports briefly on some aspects of my experience .    with rare exceptions , the remote participants showed little interest in controlling the cameras . in general ,",
    "therefore , i was not relieved of the burden of camera - switching .",
    "on the other hand , i felt the total effort of camera management was significantly reduced in most cases . rather than constantly having to adjust a single camera to show the current region of interest , i was frequently able to leave the cameras in a fixed position for long periods and simply switch between them .",
    "my enjoyment of the conversations was thus increased .",
    "remote participants also gave a strong impression of having increased enjoyment , compared to single - camera conversations in the past .",
    "( but recall that these participants comprised friends and family , so their reactions probably have a positive bias . )    figure  [ fig : usage - scenarios - intro](a)(c ) shows the three camera setups that proved most useful in these conversations . in figure  [",
    "fig : usage - scenarios - intro](a ) we see a two - camera scenario in which one camera is perched on a laptop for a headshot of the main skyper , and another camera is on the table beside it trained on a child in the background .",
    "figure  [ fig : usage - scenarios - intro](b ) shows another two - camera scenario , again with one camera capturing the standard skyper headshot .",
    "the other camera is also perched on the laptop , but faces the opposite direction .",
    "this mimics the setup of dual - camera smartphones and tablets , but with more flexibility , since the exact direction of the cameras can be adjusted individually . in this scenario ,",
    "i often pick up the outward - facing camera and direct it manually for a period of time before placing it back on the laptop .",
    "figure  [ fig : usage - scenarios - intro](c ) shows a three - camera scenario .",
    "skype is still being run from a laptop , but using a living room tv as a display .",
    "the remote participant s tiled mode view of this scenario is shown in figure  [ fig : usage - scenarios - intro](e ) .",
    "one camera is mounted on top of the tv , showing a wide view of the entire scene .",
    "another camera is perched as usual on the laptop for a headshot of the main skyper .",
    "a third camera is available to be moved around as needed , capturing the activity of a small child on the floor ; at this particular instant , the third camera is behind the skyper on the arm of a sofa .",
    "this setup has been particularly successful for group events , such as opening presents , in which attention naturally focuses on different people at different times .",
    "a user study was conducted to examine some of the benefits and drawbacks of using multiple cameras with video chat , focusing especially on a comparison between speaker - controlled and listener - controlled camera - switching .",
    "a group of 23 individuals was recruited to participate in the study .",
    "participants were all acquaintances of the author who voluntarily responded to email requests or similar ; the resulting participant pool comprised friends , family , colleagues , and one student .",
    "participants ages ranged from 20 to 70 ( median 40 ) .",
    "two participants were new to skype ; the remainder had frequently used skype for single - camera video chat .",
    "two participants had used the multicam camera - switching functionality previously ; of the remainder , four had some knowledge of the multicam project , and the remaining 17 participants had no knowledge of it .",
    "nine of the participants could reasonably be described as technically savvy ( i.e.  work in a computer - related profession , or maintain an active amateur interest in technology ) ; the remainder had no particular skills or affinity with computer technology .",
    "geographically , there was a three - way split between participants : five in the same north american town as the author , eight in other north american locations , and ten outside north america ( all either europe or oceania ) .",
    "approximately 70% of participants employed laptop monitors , with the remainder using larger desktop monitors .",
    "fourteen users employed a single webcam at their own end of the conversation ; nine used no camera at all ; none used multiple cameras .",
    "hence , although the sample is relatively small and was not selected via random sampling , it contains a good cross - section of video chat users .",
    "the user study employed the two - camera setup shown in figure  [ fig : usage - scenarios - intro](d ) , in which a person ( the speaker ) can sit on a sofa and communicate with the study participant ( the listener ) , using a whiteboard adjacent to the sofa when desired .",
    "we will refer to this video chat scenario as the _ whiteboard lecture scenario_. one camera , positioned on top of the laptop , presents a head - and - shoulders view of the speaker sitting on the sofa .",
    "the other camera , positioned on the desk , displays the whiteboard .",
    "thus , exactly 3 views were available to study participants : the speaker , or the whiteboard , or a tiled view of both .",
    "( the tiled view is shown in figure  [ fig : usage - scenarios - intro](f ) . )",
    "the whiteboard is positioned such that , on a typical monitor and under typical skyping video quality , writing on the whiteboard can be read reasonably easily when the whiteboard camera is the primary camera , but is not very legible in the tiled view .",
    "this is important because it provides an incentive to switch between views ; otherwise , it would probably be optimal to remain in tiled view at all times , and this would reveal no useful information comparing local and remote camera control .    as will be described in more detail shortly , participants needed the ability to switch between the three camera views in this study . as explained in section  [ sec : multicam - overview ] , the only camera - switching method guaranteed to be available to all users is the switch - by - im method . for consistency , therefore , all participants used the i m method for switching cameras in this study .",
    "each user in the study participated in a skype session with the author , lasting about 10 minutes .",
    "the core of the session involved two three - minute lectures , delivered by the author using the whiteboard and a handheld prop .",
    "the most important feature of the session was that in one of the three - minute lectures , the speaker had exclusive control of the camera - switching , and in the other lecture , the listener had exclusive control .",
    "the ordering all these two camera - control options was alternated for each participant , so the first lecture was speaker - controlled in exactly half of the sessions .",
    "the following script describes the content of each session in more detail :    1 .",
    "introduce the physical environment , and demonstrate the three possible views ( person , whiteboard , tiled ) .",
    "2 .   explain to the listener how to switch between the three views using skype instant messages , and allow the listener sufficient practice at switching views until they claim to be comfortable with it ( typically 3060  seconds ) .",
    "3 .   explain that the listener will now receive two three - minute mini - lectures about a particular topic in computer science ( data compression ) , and the speaker will control the cameras in one lecture , whereas the listener will control the cameras in the other lecture . announce who will be controlling the cameras first .",
    "( as already mentioned , this alternated with each participant . ) 4 .",
    "deliver first lecture , on run - length encoding .",
    "state clearly that responsibility for camera control is now switching from speaker to listener or vice versa .",
    "deliver second lecture , on lz77 compression .",
    "7 .   verbally administer the questionnaire .",
    "both mini - lectures involved the same routine of alternately talking directly at the camera while sitting on the sofa , and writing on the whiteboard .",
    "the specific set of states for each lecture was : sofa , whiteboard , sofa , whiteboard , sofa . the middle `` sofa '' segment involved , for both mini - lectures , the use of a handheld prop ( actually a paperback book that was opened to show some example data that we might wish to compress ) .",
    "hence , even listeners who might have been happy to stare at a whiteboard while listening to a disembodied voice had an incentive to switch back to the sofa view during the middle segment .",
    "precise details of the questionnaire administered at the end of each session are given in appendix  [ sec : user - study - questionnaire ] .",
    "the most important questions gauged whether the users preferred speaker - controlled cameras , listener - controlled cameras , or neither . the strength of this preference was coded using likert - type categories ( e.g.  `` mildly disagree '' ) .",
    "other questions asked users to list any aspects of the experience they liked or disliked during the speaker - controlled and listener - controlled segments .",
    "users were also asked how much they used the tiled view , and a final open - ended question asked for any further comments or feelings about the experience .",
    "it is important to note that it is definitely not the goal of the study to evaluate the raw efficacy of the whiteboard lecture scenario for distance learning or collaborative web conferencing .",
    "the scenario is contrived solely to provide an easily - controlled , replicable situation in which remote and local control of camera - switching can be compared while keeping other factors constant . indeed , numerous software products targeted at distance learning and web conferencing are available , and multicam is not envisaged as a direct competitor these products .",
    "in fact , they are complementary : any such product receives input from a webcam , and can therefore be enhanced by using multicam - style virtual camera software to provide simultaneous multiple - camera functionality if desired .",
    "figure  [ fig : user - study - agreement ] shows the strength of participants preferences between speaker - controlled and listener - controlled camera - switching . for simplicity",
    ", the graph shows results coded with likert - type categories ( i.e.  the level of agreement / disagreement ) applied to the statement `` when the speaker controlled the camera , the overall experience was more satisfactory . ''",
    "however , to eliminate acquiescence bias , the data was obtained in a different way , resulting in perfect symmetry between preferences for listener control and speaker control .",
    "participants were first asked whether they preferred speaker control , listener control , or neither .",
    "those expressing a preference were then asked to follow up by selecting from `` strongly agree , '' `` agree , '' or `` mildly agree '' in reaction to the statement `` when the [ speaker / listener ] controlled the camera , the overall experience was more satisfactory . ''",
    "of course , the word `` speaker '' or `` listener '' in this statement was selected according to the participant s previously - stated preference .",
    "a glance at figure  [ fig : user - study - agreement ] gives the strong impression that users preferred speaker - controlled camera - switching , and this impression is confirmed by statistical analysis .",
    "the median response is `` agree''the second - highest response on the 7-point scale . to check our intuition that this median differs by a statistically significant amount from the `` neutral '' response",
    ", we can perform a chi - squared test of the null hypothesis that the population median is `` neutral . '' to do this , restrict attention to the 19  participants who expressed a preference : 4  for listener control and 15  for speaker control .",
    "if the null hypothesis held , we would expect @xmath15  in each category .",
    "computing a chi - squared statistic in the usual way , we find @xmath16 on 1  degree of freedom , which yields a @xmath17-value of 0.012 .",
    "hence , we can reject the null hypothesis at , say , the 2% level of significance , and conclude that there was a statistically significant preference for speaker control .",
    "on the other hand , we also see that the results were not a complete landslide for speaker - controlled camera - switching : 15  participants expressed a preference for speaker control , and 8  did not .",
    "so 35% of respondents are either neutral or prefer listener control .",
    "applying the usual formula for standard error @xmath18 of a population proportion gives @xmath19 .",
    "the 95% confidence interval of @xmath20 is therefore @xmath21 $ ] .",
    "in fact , the sample size is too small for this simple approach to be rigorous , but it seems adequate for the qualitative discussion given here .",
    "we only wish to conclude that a significant minority ( perhaps a quarter to a half ) of the population does _ not _ prefer speaker control .    combining the conclusions of the previous two paragraphs , we see that for the particular whiteboard lecture scenario tested , an ideal multi - camera system would function primarily by speaker - controlled switching , to satisfy the statistically - significant preference of the population for speaker control .",
    "however , the ideal system would also permit control by the listener ( to whatever extent desired ) , which is especially important for the significant minority of listeners who prefer to be in control . obviously , we should be extremely careful when extrapolating this conclusion beyond the particular version of the whiteboard lecture scenario tested .",
    "we expand on this point in section  [ sec : gener - concl - from ] , after presenting the remaining user study results .",
    "figure  [ fig : theme - analysis ] lists all the important themes to emerge from the questions asking participants to list any likes or dislikes of the two camera - switching options ( speaker control and listener control ) . note that these were open - ended questions , so participants had no cues as to possible responses .",
    "the figure shows any theme that was mentioned by at least two participants .",
    "classification of responses was done by the author , and is of course subjective . nevertheless , several clear points emerge .",
    "advantages of speaker control :     about switching cameras ) & @xmath229 + lecturer can anticipate the need for a switch and thus switches at the right time & @xmath228 +    advantages of listener control :     had the ability to go back to the whiteboard when desired & @xmath225 + concentrated better because had to pay attention & @xmath222 +    disadvantages of listener control :     @xmath228 + harder to concentrate / distracting to switch cameras & @xmath225 + switching delay was annoying & @xmath224 + lose a few seconds of attention at every switch & @xmath223 +    the strongest reason for liking speaker control was that it was easier to concentrate on the content of the lecture ",
    "these participants considered camera control a burden , and devoting thought to camera control detracted from the attention that could be paid to the lecture itself .",
    "for example , one participant stated : `` i can concentrate on the speaker , not on the technology . ''",
    "a related but separate point is that the speaker knows in advance when a switch will be required , and thus is able to time the switches appropriately .",
    "in contrast , the listener realizes a switch is required only _ after _ the speaker performs whatever action triggers the need for a switch .",
    "thus , even for a user who does not find camera - switching burdensome , listener control has the disadvantage that most camera switches occur late .",
    "one participant spoke of losing `` a few seconds '' of relevant viewing at every such switch .    no themes for disliking speaker control emerged ; the only comment in this category was from a single participant , who noted that he or she `` could nt check something on the whiteboard . ''",
    "the strongest reason for liking listener control was the somewhat tautological notion of being `` in control . ''",
    "some participants perceived explicit educational value in being able to time their own switches , especially for lingering on , or extra glances at , the whiteboard .",
    "in fact , four of the five users who mentioned the ability to go back to the whiteboard as an advantage of listener control actually preferred speaker control in general . this is important , as it demonstrates that even users who prefer speaker control can benefit from the ability to seize control occasionally .",
    "a more subtle and surprising effect was also apparent : some users derive intrinsic satisfaction from being in control , without necessarily perceiving a causal link to an educational outcome .",
    "comments along these lines include : `` it was kind of fun to be the one in charge , '' and `` the part of me that likes to flip through the channels liked it . ''",
    "two participants preferred listener control for another surprising reason : they found the requirement to be alert and ready to switch cameras when necessary forced them to pay more attention to the lecture , resulting in a more satisfactory outcome .",
    "this reasoning directly contradicts the 10 users who found camera - control detrimental to concentration  more evidence that the user base has diverse preferences and multi - camera video chat should try to account for them .",
    "the main stated disadvantage of listener control was the poor interface for switching cameras .",
    "there were two aspects to this .",
    "as remarked above , remote camera - switching was performed via the i m hack , which requires a minimum of two keystrokes and , more importantly , is not at all intuitive .",
    "it is not surprising that users disliked this .",
    "however , six users were also frustrated by having to cycle through the three view settings in a fixed order .",
    "this calls into question one of the hypotheses on which the multicam interface was based : namely , that switching between multiple views , including a tiled view , is excessively complex and that the simplest possible interface ( a single advance - to - next - view operation ) is therefore preferable .",
    "it seems this hypothesis is not correct for a significant fraction of users .",
    "thus , alternative interfaces should be explored in future multi - camera chat systems .",
    "another important dislike of listener control was the delay between requesting a switch and receiving it .",
    "average round - trip times were not recorded during the user study chat sessions , so it is not known if these complaints correlate with large network latencies .",
    "( two of the four who mentioned this problem were in oceania , but the other two were in north america  the same continent as the lecturer . ) in any case , it is interesting that delay was perceived as a disadvantage specific to _ listener _ control .",
    "speaker - initiated switches would have suffered delays of similar magnitude ( although perhaps up to 50% less , depending on the root cause ) , but were not perceived as problematic .",
    "there is one other factor that was notable for its absence in the user comments : when the listener controls the cameras , the speaker is freed from this concern , and ( at least in principle ) can devote more effort to delivering a smooth and clear presentation .",
    "of course , in this case , the lecturer was extremely well - practiced in using multicam and was able to use the convenient camera - switching interface provided by the multicam application .",
    "so it is quite possible there was little or no discernible difference between the clarity of the two mini - lectures .",
    "it is natural to wonder whether multi - camera video chat systems should provide a tiled mode : is it a beneficial feature , or does it just clutter the interface and confuse the users ?",
    "the user study was not specifically designed to answer this question , and the utility of tiled mode clearly depends on the application .",
    "nevertheless , we can glean a little insight from the participants responses .",
    "two participants chose to use tiled mode most of the time during the listener - controlled mini - lecture .",
    "a further nine participants used tiled mode at least once .",
    "the remaining 12 participants did not use tiled mode .",
    "hence , it seems that for this application at least , tiled mode is attractive to a significant fraction of users .      the nutshell conclusion of the user study is : for the whiteboard lecture scenario , a majority of users prefer speaker - controlled camera - switching to listener - control , but a significant minority do not .",
    "note , however , that care is needed when extrapolating this conclusion beyond the particular version of the whiteboard lecture scenario tested . indeed , even if we restrict consideration to the whiteboard lecture scenario , it seems clear that generalization is problematic .",
    "this is because certain aspects of the scenario could be varied in such a way as to produce preferences tilted strongly towards speaker or listener control .",
    "for example , the speaker could have deliberately `` forgotten '' to switch cameras several times during the speaker - controlled test .",
    "this would be immensely frustrating to the listeners , and could be made as extreme as desired , resulting in virtually 100% of participants expressing a preference for listener control .",
    "on the other hand , the speaker could have made listener control difficult and frustrating by frequently moving on and off the whiteboard , picking up props for only one or two seconds , and making very brief references back to the whiteboard , all without verbally telegraphing any intentions .",
    "these thought experiments demonstrate that preference for listener- or speaker - control is highly application - dependent .",
    "and there are two other factors that may have influenced the results : ( i ) the use of the non - intuitive i m hack for switching cameras ; and ( ii ) the fact that the vast majority of participants had never used multicam before , and had only a brief 3060-second practice session to gain familiarity with switching cameras",
    ". both of these factors would tilt the results towards a preference for speaker control .",
    "but the application - dependence and other sources of variability do not render our conclusions from the user study irrelevant  they simply mean we must be careful in making generalizations .",
    "for example , it would be wrong to conclude that a majority of users prefer speaker - control to listener - control for multi - camera video chat in general .",
    "on the other hand , it does seem reasonable to infer the following conclusions :    * for any given multi - camera video chat scenario , there can be both a significant proportion of users who prefer local control of camera - switching , and a significant proportion of users who prefer remote control .",
    "* even users who have a preference for not controlling the camera - switching in a given scenario can derive benefits from seizing control occasionally . *",
    "a significant fraction of unpracticed users find that controlling the cameras detracts from their ability to concentrate on the video chat ( but this may not be true of users with substantial practice , especially if a more convenient interface than the i m hack were provided ) .",
    "* significant delays between a switch request and its execution can be a source of frustration .",
    "if , as this report suggests , end - users can benefit from the use of multiple cameras while video chatting , it is important to verify that simultaneous use of multiple cameras does not consume excessive resources on a consumer - grade computer .",
    "this section describes an experiment to investigate this , together with additional experiments that examine some multicam design choices and compare the performance of multicam to two other multi - camera systems .",
    "the experiments employ four different usb webcams : a logitech quickcam chat , a logitech quickcam easy / cool , a microsoft lifecam vx-3000 , and a microsoft lifecam hd-3000 .",
    "these are all low - cost cameras : at the time of writing , they could be purchased from amazon at costs of $ 19 , $ 21 , $ 25 , and $ 29 respectively .",
    "we deliberately use low - cost cameras , as we are targeting consumers who have no desire to purchase professional - grade equipment .",
    "the selection of cameras is heterogeneous for two reasons : ( i )  it allows us to investigate the amount of variability in resource usage and performance between these cameras , and ( ii )  it is perhaps more representative of a consumer whose collection of webcams has grown piecemeal over time .",
    "experiments were conducted on two different machines : a relatively recent ( 2011 ) standard office desktop with four cores , and an older ( 2007 ) laptop with two cores .",
    "the motivation behind the choice of machines is that the desktop represents a typical consumer setup at the time of writing , whereas the laptop could be considered an impoverished setup .",
    "if we are prepared to ignore feebler devices such as smartphones , tablets , and even older single - core machines , our laptop is a reasonable worst - case scenario .",
    "figure  [ fig : hardware - details ] tabulates the some details of the chosen machines hardware and software . before looking at empirical results ,",
    "let us consider the theoretical impact of each of these specs .",
    "the cpu speed and number of cores have a direct impact on the cpu utilization measurements , as we will see shortly .",
    "a nave calculation accounting for only the number and clock frequency of the cores suggests the desktop will be @xmath23 times as fast as the laptop for tasks with plenty of parallelism .",
    "the amount of memory is irrelevant for these experiments , as long as there is ample memory to accommodate the maximum of 240  mb consumed by the most resource - hungry experiment ( simultaneously running multicam.exe and skype.exe during a 4-camera video chat ) .",
    "the memory frequency ( being directly proportional to the bandwidth between main memory and cpu ) also turns out to be irrelevant : memory bandwidth proves not to be a bottleneck for either machine , as the following worst - case calculation shows .",
    "a camera operating at 30  frames per second ( fps ) , with resolution can be considered a `` worst - case '' resolution .",
    "clearly , we can imagine video chats employing much higher resolutions than this .",
    "nevertheless , at the time of writing , @xmath24 is a generous resolution for typical video chat scenarios , and appears to be the default skype resolution for many webcams . ]",
    "@xmath24 , and transmitting its data in uncompressed 24-bit rgb format , consumes a bandwidth of 26  mb / s .",
    "so four cameras consume about 105  mb / s , which is far less than the 3102  mb / s memory bandwidth measured on the low - spec laptop , let alone the 6894  mb / s for the standard desktop machine .",
    "the number of usb ports can also impact experiments of this type .",
    "each usb 2.0 port has a theoretical maximum bandwidth of 60  mb / s , assuming each has an independent controller ( this assumption is not true , as we shall see later ) .",
    "so the worst case camera bandwidth of 26  mb / s is less than half of the 60  mb / s usb 2.0 bandwidth .",
    "thus , provided there are at least as many ports as cameras , there is , in principle , ample bandwidth for the data from each camera to traverse the usb ports . note that the laptop had only three usb ports , and therefore required two of the cameras to be multiplexed through a usb hub for our four - camera experiments . again assuming the worst - case camera bandwidth of 26  mb / s , we see that , in principle , even two - way multiplexing of cameras through a usb 2.0 hub should not produce a bottleneck . in practice , of course , there may be more subtle limitations on simultaneously streaming data from many usb ports .",
    "some of the variability in the frame rate and cpu utilization results ( look ahead to figure  [ fig : cameras - cpu ] , which is discussed in detail below ) may arise from this .",
    "the objective of the first experiment is to measure the resource usage of multicam with up to four cameras , both in isolation and as part of a video chat . which resources are of interest for this experiment ?",
    "note that network resources are irrelevant , because during a video chat , the chat software using the multicam filter consumes exactly the same network bandwidth as it would with a single camera , regardless of the number of physical cameras connected to the multicam filter .",
    "in fact , the two primary resources consumed by the cameras are ( i )  cpu , and ( ii )  bandwidth of various internal buses , especially usb buses . in this experiment we report cpu utilization directly , whereas the effects of bus saturation are demonstrated indirectly , by measuring the video frame rate of the multicam filter .",
    "there was a separate run of the experiment for each nonempty subset of the four cameras , resulting in a total of 15  camera combinations .",
    "as already mentioned , the experiment was repeated on two different machines ( desktop and laptop ) .",
    "furthermore , each machine / camera possibility was tested in two different ways : a _ raw run _ and a _ skype run _",
    "( described in more detail below ) .",
    "this results in a total of @xmath25 runs . in each run , two main data points were collected : cpu utilization , and video frame rate .",
    "a _ raw run _ consisted of executing a simple benchmark program that displays a multicam video stream on the monitor in tiled mode .",
    "specifically , this was a lightly - altered version of the playcap example code in directshow . note that the raw runs therefore did not involve any video chat software ",
    "the objective was to measure the bare - bones resource consumption of the cameras connected to the multicam filter , without any additional overhead for video chat .    a _ skype run _ consisted of a skype video chat between the two experiment machines described above . only one end of the chat transmitted video in each run , and audio was disabled ( although the impact of this is small ) .",
    "let us call the machine transmitting video the _ source _ of the chat , and the machine receiving video the _ destination_. cpu utilization and video frame rate were both measured at the source , and frame rate was measured via skype s `` call technical info '' menu option .",
    "for all skype runs , the laptop was connected to a residential broadband service via 802.11 g wireless , and the desktop employed a wired connection to a university campus network .",
    "the physical distance between the two machines was about 0.5  miles , and skype reported the vast majority of round - trip times in the range 5060  ms .    in each run , the average cpu utilization was recorded over a period of 90 seconds , using windows performance counters .",
    "cpu utilization figures are reported as a percentage of all cpu resources on the machine ( e.g.  50% utilization on a four - core machine is equivalent to 100% utilization of two of the cores . )",
    "frame rates were averaged over 250 frames .",
    "naturally , all reasonable steps were taken to prevent other processes consuming resources during measurement periods .",
    "in addition , each run had a burn - in period of about 10 seconds to allow the video stream to initialize satisfactorily before measurements began .",
    "as discussed in section  [ sec : design - details ] , cameras are always requested to deliver data at @xmath26 resolution with 30  fpsit turns out that one of the cameras ( the vx-3000 ) can only support up to 15  fps at this resolution . ] , in 8-bit rgb format , and are subsequently subsampled by the multicam filter if necessary for display in tiled mode .      figure  [ fig : cameras - cpu ] shows the results of the raw runs .",
    "the top panel shows how cpu utilization varied for the 15 different camera combinations .",
    "there are several interesting features of these results .",
    "first , the cpu utilization of the laptop is roughly three times higher than the desktop , as we would expect from the discussion in section  [ sec : hardw - used - exper ] ( although there is considerable variation from the @xmath27 multiplier ) .",
    "second , cpu consumption by the cameras is approximately additive : the cost of any set of cameras is roughly the sum of the cost of each camera used individually ( but again with considerable variation , and at least one significant exception discussed below ) .",
    "c     + [ 3 mm ]   + [ 3 mm ]     third , there can be great variation in the cost of any given camera . in this case ,",
    "three of the cameras consume about 5% of the desktop cpu , but the remaining camera consumes about 15%three times as much !",
    "the outlier camera is the lifecam hd-3000 .",
    "no specific efforts were made to investigate the discrepancy , but it may be due to the higher native resolution of this camera compared to the others . to further complicate matters , it turns out that the hd-3000 consumes only half as much cpu ( about 8% ) when plugged into a usb port on the back of the machine , rather than one of the front ports that happened to be used for this particular experiment .",
    "this also explains the two data points in the 4-camera desktop category , in all three panels of figure  [ fig : cameras - cpu ] : in each case , the hd-3000 was swapped from the front to the back to produce a second 4-camera data point .",
    "this leads to the fourth observation : there can be very significant variations in resource usage by cameras , and the variation can be for obscure reasons that would certainly be inexplicable to typical end - users . the @xmath28 change by moving from a rear to front usb port just mentioned is one example of this .",
    "another peculiarity is the fact that two of the 3-camera sets on the laptop consume significantly more cpu than the 4-camera set .",
    "this suspicious result was confirmed in repeated tests , but was not investigated further .",
    "the fifth and final observation is the most obvious but also most important : the total cpu consumption on our typical ( i.e.  desktop ) setup is only a small fraction of the available resources , and even on the impoverished ( i.e.  laptop ) setup , the most cpu - intensive runs still leave some room for other tasks to use the cpu . hence we can conclude that multi - camera video chat is comfortably feasible on consumer pc hardware .    the middle panel of figure  [ fig : cameras - cpu ] shows the video frame rate achieved by multicam for the same camera sets as the cpu tests . on this metric , the desktop and laptop have very similar performance for the majority of camera sets .",
    "but there are notable exceptions , including the surprisingly low frame rates of two cameras ( the two quickcams ) in single - camera mode on the laptop . as with the cpu results , we see some counterintuitive trends . for example , the two quickcams , which each achieve fewer than 10  fps when used alone on the laptop , are even worse when used together ( 6  fps ) , but can improve dramatically when combined with one of the other cameras ( e.g.  30  fps with the hd-3000 ) . such mysterious results might lead one to suspect a performance bug in multicam , such as misuse or abuse of the directshow apis . but as we will see shortly ( figure  [ fig : cameras - cpu - skype ] , middle panel ) , skype obtains similarly poor frame rates from one of the quickcams when using it directly ( i.e.  without multicam ) on the laptop .",
    "this suggests that the poor single - camera performance  and presumably the mysteriously - good multi - camera performance too  is not specific to multicam , and may instead derive from some combination of the camera drivers , the usb controllers , and the directshow framework .",
    "the bottom panel of figure  [ fig : cameras - cpu ] shows the same data as the two upper panels , combined on a single graph so that any relationship between frame rate and cpu utilization can be observed . for clarity ,",
    "only results for the desktop machine are shown .",
    "the surprising result is that the relationship is rather weak ( @xmath29 for @xmath30 cameras respectively ) .",
    "this once again demonstrates that camera performance and resource usage is unpredictable , and appears to depend on subtle interactions between several hardware and software modules .",
    "the high - level conclusion to be drawn from figure  [ fig : cameras - cpu ] is twofold .",
    "first , video chat with several cameras simultaneously consumes only a fraction of the resources on a typical consumer machine and is therefore feasible .",
    "second , the performance ( in terms of both cpu and frame rate ) of heterogeneous sets of cameras working together is unpredictable .",
    "camera manufacturers and video chat software developers probably need to devote considerable effort to reducing this unpredictability if end - users are to experience consistently satisfying multi - camera video chats .",
    "the good news is that this experiment did uncover some sweet spots : in the bottom panel of figure  [ fig : cameras - cpu ] , for example , we see that one set of three cameras can operate at 30  fps for less than 25%  cpu , and all four cameras can operate at 15  fps for less than 20%  cpu , provided that we are lucky enough to choose the right usb ports .",
    "figure  [ fig : cameras - cpu - skype ] shows the same information as figure  [ fig : cameras - cpu ] , but for the skype runs rather than the raw runs . comparing the top panels of figures  [ fig : cameras - cpu ] and  [ fig : cameras - cpu - skype ] , we see that skype adds significant cpu overhead to the local display benchmark . presumably , this overhead is primarily due to skype s proprietary compression and encryption , which have been analyzed in several prior works ( e.g. @xcite ) .",
    "interestingly , the @xmath27 multiplier between desktop and laptop ( which is expected based on cpu specs , and held roughly true for the local display benchmark ) is no longer even approximately correct ; the average multiplier is in fact only 1.8 . but",
    "this discrepancy can be explained by the lower average frame rate from the laptop : on average , the laptop frame rate was 1.6 times lower than the desktop , and since @xmath31 , we recover the expected ratio of cpu utilization .    c     + [ 3 mm ]   + [ 3 mm ]     this brings us to the middle panel of figure  [ fig : cameras - cpu - skype ] . comparing with figure  [ fig : cameras - cpu ] , we see the desktop machine fared well with the imposition of skype . in fact , 14  of the 15  camera combinations had the same or similar frame rate ( @xmath32  fps ) .",
    "but as already mentioned , the laptop suffered : six camera combinations remained within @xmath32  fps , but six others suffered double - digit decreases . also apparent from the middle panel of figure  [ fig : cameras - cpu - skype ] is the lower frame rate achieved for skype runs by the laptop , compared with the desktop ( this contrasts with the raw runs ) .",
    "most likely , this is due to the lower upload bandwidth of the laptop s location ( recall that it employed residential broadband ) .",
    "a 2012 study  @xcite , which used skype version  5.2 , has shown that skype monitors the available bandwidth and congestion ( probably via packet loss rate ) , and adjusts its video codec as appropriate .",
    "one of the codec s main adjustable parameters is the frame rate , and it appears to target the discrete values 5 , 10 , 15 , and 30  fps  although as we see in the figure , this may not always be achievable .",
    "it remains an open question as to whether skype also moderates its codec to account for excessive cpu usage .",
    "finally , this middle panel provides a sanity check , showing data for using skype with a single camera natively ( i.e.  without multicam ) .",
    "the same frame rate was achieved for three of the four cameras , providing reasonable evidence that multicam itself is not unduly hindering performance .",
    "the bottom panel in figure  [ fig : cameras - cpu - skype ] shows the same data as the previous two panels , but including only the desktop skype runs for clarity . as with the raw runs",
    ", we see a weak correlation between frame rate and cpu usage .",
    "the high - level message for the skype runs ( figure  [ fig : cameras - cpu - skype ] ) is the same as for the raw runs ( figure  [ fig : cameras - cpu ] ) : chatting with multiple cameras simultaneously is feasible with a fraction of a typical machine s resources , but performance can vary widely and sometimes mysteriously . on the positive side , we again find ( see the bottom panel ) that one combination of three cameras achieves 30  fps with modest cpu ( 30% in this case ) . on the negative side , one camera used in isolation languished at 5  fps on the desktop machine , and certain other combinations of multiple cameras were almost as bad ( see middle panel ) .",
    "even worse , some of the laptop results were dreadful , with frame rates as low as 23  fps .",
    "it is natural to wonder if the resource consumption of multicam is commensurate with other multi - camera software .",
    "experiment  2 addresses this by measuring the cpu utilization of multicam and two other multi - camera systems : manycam , and vhms ( see section  [ sec : related - work ] for descriptions of these systems ) . figure  [ fig : cpu - competitors ] shows the results of running playcap ( the same local display benchmark as in experiment  1 ) on the same 15  camera combinations , for each of the three systems .",
    "manycam supports at most two cameras , so this system has no data points for the 3- and 4-camera combinations .",
    "in addition , the benchmark was run for each single camera without any virtual camera software ; these are the points labeled `` native '' in figure  [ fig : cpu - competitors ] .",
    "the high - level conclusion from this experiment is that multicam is reasonable in its cpu consumption .",
    "it is a little more expensive ( perhaps 5% of cpu for three or four cameras ) than vhms , a little more expensive ( 13% of cpu ) for a single camera than the camera natively , and a little less expensive than manycam ( about 5% of cpu ) .",
    "as we already saw in the results of the user study ( section  [ sec : user - study ] ) , low latency of the camera - switch operation is important for positive user experiences .",
    "two of the design decisions for multicam ( simultaneous data retrieval from all cameras , and fixed output resolution  discussed in sections  [ sec : switching - implementation ] and  [ sec : resolution ] respectively ) were made with the explicit goal of low - latency camera - switching .",
    "experiment  3 investigates whether multicam is successful in reducing camera - switching latency below that of existing multi - camera software .",
    "the experiment deliberately eliminates network latency from consideration .",
    "although it is an important component of the user s experienced latency , network latency is the same for all systems , so would only add unnecessary noise to a comparison of camera - switching latency .",
    "therefore , we measure camera - switching latency on playcap , the same local display benchmark employed in the previous two experiments . specifically , we measure the time between the user s request to switch cameras ( issued via a mouse click in all cases considered here ) and the resulting switch of views in the display window .",
    "a screen capture tool was used to record both the mouse click and the playcap output window in a single movie .",
    "latencies were computed by manually single - stepping through these screen - capture movies to find the frames in which the relevant events occurred .",
    "the screen - capture movies had a temporal resolution of about 22  ms , so the uncertainty in any single measurement is @xmath33  ms .",
    "the latency figures are derived from the difference of two such measurements , so the uncertainty in the latencies is @xmath34 , or approximately @xmath35  ms .",
    "the experiment employed the same 2  cameras ( the two lifecams ) in each test , with the user switching from a primary view of the vx-3000 to the hd-3000 .",
    "figure  [ fig : camera - switch - latency ] shows the results for the same systems compared in experiment  2 : this report s multicam , vhms , and manycam .",
    "it is clear that multicam enjoys a significant advantage here , being 23  times faster than the other systems .",
    "but note that the true camera - switching latency experienced by a remote user will be the sum of the amounts from figure  [ fig : camera - switch - latency ] and the network latency , which may itself be hundreds of milliseconds .",
    "hence , the difference between the three systems observed by a remote user would be less dramatic than this 23@xmath36 factor .",
    "nevertheless , in order for the total switching latency to be tolerable on a connection with non - negligible delay , it is clearly important for the camera - switch itself to have low latency , and it seems multicam has succeeded in achieving this .",
    "the relatively large latency for the other two systems ( more than one second in the case of vhms ) suggests that these systems switch cameras by stopping the running directshow graph , performing surgery on it , then restarting the graph .",
    "multicam s alternative approach of keeping all cameras running and feeding only the relevant bits downstream appears to save at least several hundred milliseconds , at a modest cost in cpu , as we saw in experiment  2 .",
    "it has been shown that for audio calls , skype users satisfaction is much more strongly influenced by the transmitted signal s bitrate and jitter than by its latency  @xcite .",
    "but there do not appear to be any similar results for video chat , so it seems desirable to understand whether or not the simultaneous use of multiple cameras affects video latency .",
    "experiment  4 investigates this . as with experiment  3 ,",
    "network latency is eliminated  not because it is unimportant , but because it is a constant added to any delay due to multiple - camera use .",
    "therefore , we again consider latency for the playcap local display benchmark .",
    "the experimental method uses a type of recursion , inspired by the method of vdelay  @xcite , but significantly simplified since we are measuring local rather than remote display latency .",
    "the webcam whose latency is to be estimated is pointed at the monitor where its own output is being displayed in the playcap window .",
    "meanwhile , immediately adjacent to this window , a visible event takes place at regular intervals  a counter incrementing once per second was used in this case . as in experiment  3 ,",
    "a screen capture tool is used , this time to capture the counter and any relevant portion of the playcap window .",
    "figure  [ fig : latency - movie - still ] shows the technique . by positioning the camera at the right angle",
    ", we can ensure that the captured image of the counter is displayed immediately adjacent to the counter itself ( in this particular case , the original counter is on the far right , and its image is immediately to the left ) . the captured image of the image of the counter is also captured by the camera , and displayed adjacent to the previous image .",
    "this process can be continued indefinitely , but the image quality degrades with each trip through the camera , and in practice the degradation was too severe to permit analysis after the third iteration .        by single - stepping through the resulting screen - capture movie , we can determine the frame in which the rightmost and leftmost counters increment .",
    "the difference in the capture times of these frames is equal to the camera s capture - to - display latency multiplied by the number of iterations ( which , as already mentioned , was three in most cases ) .",
    "the main advantage of using the feedback loop to measure latency is accuracy . as with experiment  3 , the time resolution of the screen capture is about 22  ms , but this uncertainty is reduced by a factor of three when using the triple feedback loop . for each camera and scenario  described shortly  measurements",
    "were taken for about 10  separate events , and averaged to further reduce uncertainty .",
    "measurements were made for each of the four webcams used in the previous experiments .",
    "more specifically , each camera s latency was measured in two scenarios : ( i ) the given camera is the only one connected to the multicam filter ( the others might as well be disconnected ; they have no effect on the system ) , and ( ii ) all four cameras are connected to the multicam filter and are simultaneously displayed in tiled mode , but we measure the particular tile whose content comes from the camera being measured . the feedback system for reducing uncertainty",
    "is not directly applicable to the tiled mode scenario , so measurements of the tiled scenario were based off only a single camera latency and have a correspondingly higher uncertainty .",
    "figure  [ fig : display - latency ] shows mean and standard deviation for each camera and scenario . for any given camera , we see a relatively small difference between the single - camera and four - camera scenario ; two of these differences are increases and two are decreases . hence , it seems safe to conclude that simultaneous use of up to four webcams does not significantly alter the latency of video observed by video chat users .",
    "we can also see the dramatic differences in latencies between different cameras  as much as a factor of 3 , ranging from 100 to 300  ms .",
    "this is yet another example of the `` chat user beware '' maxim emerging from these experiments .",
    "if video latency is an important component of user satisfaction , then camera manufacturers and video chat software developers should probably provide better tools to help users choose appropriate technology .",
    "the prospect of the listener controlling the view of the speaker s location raises the question of whether the speaker s privacy might be violated by such systems . as an extreme thought experiment ,",
    "suppose the speaker is in a room ( such as an office or bedroom ) , and employs a 360  panoramic , high - definition camera stationed in the center of the room .",
    "further suppose the listener can zoom in on any portion of the camera s panorama , and the resolution is sufficiently good that the listener could read the visible text of any papers or books in view .",
    "( note that there is no consumer - grade technology that achieves this at the time of writing ; we are simply using the scenario as an extreme case of potential privacy violation .",
    "more realistically , we might imagine three or four cameras showing different views of the room , with the listener switching between and zooming in on just those available views . )",
    "described in this way , the scenario feels somewhat creepy , and one is tempted to immediately categorize it as a clear violation of privacy .",
    "but this conclusion does not withstand more careful scrutiny . recall that our underlying objective is to restore to the video chat participants the same freedoms they would have in a face - to - face conversation .",
    "therefore , the privacy properties of the system should be assessed by comparing with the privacy properties of a face - to - face meeting in the same location as the multi - camera system .",
    "so , our thought experiment with a high - def panoramic camera in the speaker s office or bedroom is only valid if that speaker would have been comfortable having a face - to - face meeting with the listener in the same office or bedroom .",
    "obviously , if you would nt invite your acquaintance fred into your bedroom for a face - to - face meeting , then you should nt chat with fred via an immersive video system based in your bedroom either . on the other hand ,",
    "if you are comfortable with the idea of fred wandering around your bedroom or office , reading the titles of books on the wall and glancing at the receipts on your desk , there is no rational reason to avoid immersive video chat with fred in that same location .    it might be argued that when fred is physically present and looking at your books or receipts , you get immediate feedback on his actions and can take steps to prevent privacy violations ( e.g.  put the receipts in a drawer as fred walks over towards the desk ) .",
    "in contrast , it could be argued that a remote listener has more chance to snoop on arbitrary parts of the environment without the speaker being aware .",
    "there is some truth to this claim , especially given that the video stream can be recorded and analyzed later , perhaps even using super - resolution techniques  @xcite .",
    "the obvious response is that the speaker should know the capabilities of the camera and remove any private material from view before the video chat starts . and the situation is further ameliorated by the fact that the speaker can always monitor the listener s view via the local view window ( so if you see fred is zooming in on the receipts , put them away ) .",
    "indeed , this is an important reason that chat software should always provide a local view window option .",
    "overall , then , it is reasonable to conclude that immersive video chat creates no privacy violations beyond the face - to - face conversations it seeks to emulate .",
    "but one of the fundamental points of this report is that we can and should put an even more positive spin on the situation .",
    "provided the speaker has chosen a suitable location for the video chat , it is actually a good thing that the listener can , for example , examine books and pictures on the wall , see what kind of cell phone the speaker has , and see the titles of some documents the speaker happens to be reading .",
    "these are exactly the kind of serendipitous observations that lead to interesting and varied conversations , and which are completely absent from today s video chat paradigm .",
    "the most obvious opportunity for future work is to incorporate non - standard imaging devices , such as panoramic cameras , into the mix of cameras .",
    "improving the ui for camera - switching should be a priority , perhaps using image stitching  @xcite to combine views , or navigation between views inspired by the photo tourism of snavely _ et al . _",
    "@xcite .",
    "this report has also highlighted some areas in which webcam manufacturers and video chat software developers could improve the multi - camera chat experience .",
    "these include    * addressing the unpredictable cpu usage , frame rate , and latency of cameras identified by the benchmark experiments ( section  [ sec : benchmarks ] ) * standardizing a protocol for remote camera switching ( appendix  [ sec : multicam - ap2ap ] provides specific suggestions ) * providing cameras with a `` ready '' mode , whereby they can begin transmitting video data upon request , essentially instantaneously * providing features to distinguish between physical and virtual cameras ( as discussed in appendix  [ sec : distinguishing - virtual ] ) * ensuring the current camera device is released before a newly - selected device is activated ( see appendix  [ sec : difficulty - switching ] )",
    "multi - camera video chat seems to be a promising and underutilized tool in the multimedia milieu .",
    "this report has demonstrated the feasibility of multi - camera chat on standard consumer hardware , and suggested scenarios in which multiple cameras improve the chat experience .",
    "a user study provided strong empirical findings on the advantages and disadvantages of listener - controlled switching between camera views .",
    "some design trade - offs inherent in multi - camera chat software were discussed , and the report also presented multicam , an open - source package providing multi - camera chat .",
    "perhaps researchers , software developers , and hardware designers can build on these ideas to provide rich , easily - controlled , multi - view video chat experiences in the future .",
    "this appendix fills in a variety of technical details relating to the design of multicam .",
    "directshow filters are c@xmath13  objects .",
    "( more precisely , they are microsoft com objects , but the distinction will not be important in what follows . )",
    "an important consequence of this is that video chat software creates a given directshow filter when it is needed for a video chat , uses it for the duration of the chat , then destroys the filter at the chat s conclusion .",
    "so our design can not assume that a multicam filter exists on the system at any particular time .",
    "this fact is particularly important for communication between the multicam application and the multicam filter .",
    "webcam capabilities are enumerated via the ` iamstreamconfig::getstreamcaps ( ) ` directshow method for filter pins .",
    "this method may be called on a pin whose filter is not currently connected to a graph .",
    "in fact , skype does exactly this on startup : before creating any directshow graphs , all cameras on the system are asked to enumerate their capabilities .",
    "multicam faces a chicken - and - egg problem here , since it does not know its capabilities until it has been connected to its upstream filters ( the physical cameras ) .",
    "the reasons for this are a little technical , and rely on details that were swept under the rug in the earlier discussion of selecting webcam capabilities ( section  [ sec : resolution ] ) .",
    "directshow has a facility termed `` intelligent connect , '' whereby filters mutually negotiate a suitable media type when they are connected , based on various preferences and requirements defined within the filters .",
    "multicam takes advantage of this .",
    "specifically , multicam relies on intelligent connect to determine the media type of the connection to the physical camera that happens to occur first in the operating system s enumeration of cameras .",
    "this media type is used as the output media type , with some fields changed to take account of the resolution selected by the method of section  [ sec : resolution ] .",
    "the advantage of doing this is that the multicam filter s output media type is identical ( in almost all fields ) to at least one of the physical cameras . and",
    "if the physical cameras all happen to be identical , all connections will use exactly the same media type and no unnecessary conversions are performed .",
    "the disadvantage is that it is impossible to enumerate the multicam filter s capabilities without first connecting the filter to its upstream cameras . to work around this",
    ", the multicam code creates a temporary directshow graph if it is needed at capability enumeration time , and destroys this graph as soon as the enumeration is done .",
    "multicam is targeted at consumers , and should ideally require no configuration . in particular , users should not be required to specify the exact set of physical cameras to be used within multicam ",
    "although advanced users should of course have the option to specify the cameras if desired . hence , the default behavior , when a multicam filter is instantiated , is for all physical cameras connected to the system to be employed as inputs to the multicam filter .",
    "unfortunately , this ideal behavior does not appear to be achievable in all cases .",
    "the problem is that there is no reliable way of distinguishing a physical camera from a virtual camera .",
    "suppose , for example , that manycam and multicam are both installed on a given system , which also has two physical webcams connected .",
    "when a multicam filter is instantiated , the webcam drivers and the manycam driver appear to be the same category of device .",
    "for details .",
    "] so without using additional heuristics , multicam would employ all three `` cameras '' as inputs .",
    "this can have dire results .",
    "for example , if the user had previously specified multicam as an input to manycam , we would have a directed cycle in the directshow graph , meaning it ca nt run successfully .",
    "undirected cycles can also cause problems , as the following example shows .",
    "suppose the user had previously specified one of the webcams  let s call it webcam  @xmath4as the input to manycam .",
    "when a multicam filter is instantiated , both multicam and manycam attempt connections to webcam  @xmath4 , but only one can succeed .",
    "note that an undirected cycle does not always lead to an unrunnable graph .",
    "in fact , one of the chief features marketed for manycam is that it can be used simultaneously as the input to multiple applications .",
    "but physical cameras do not have this ability .    at present",
    ", multicam solves this problem as best it can using heuristics .",
    "all common virtual camera filters are automatically excluded from the enumeration of camera devices .",
    "devices are also excluded if they refuse to enumerate their capabilities or can not be connected to the graph in a timely fashion .",
    "finally , advanced users can specify the exact set of devices to be used as inputs via a configuration file .",
    "this is useful in several situations : ( i ) working round situations where the heuristics fail ; ( ii ) using a subset of the physical cameras connected ; ( iii ) deliberate use of a virtual camera such as manycam as one of the inputs ( which could be desirable for an advanced user who has taken care not to create any cycles in the directshow graph ) .",
    "although this problem is not severe , it s worth noting that programs like multicam could be made more user - friendly if operating systems could definitively distinguish between physical and virtual cameras .",
    "this is a feature that could be included in future multimedia frameworks .",
    "the present design of multicam has a subtle flaw that should be acknowledged . to explain this ,",
    "suppose that a user is running skype and has previously selected a physical camera as the video input device .",
    "the user decides to switch to multicam as the input device , and selects multicam in the skype ui .",
    "unfortunately , it turns out that skype does not release the old device before activating the new one .",
    "this prevents multicam from starting properly , since ( as described above ) multicam needs to activate each physical camera itself before it can report its own capabilities .",
    "there are , no doubt , relatively simple fixes for this problem , but they have not yet been investigated . indeed , manycam does not exhibit this symptom , which proves that it is possible for a virtual camera to interact satisfactorily with this part of the skype ui . on the other hand",
    ", the existing design of multicam has no problems with yahoo messenger ; in that program , users can switch directly between multicam and a physical camera .",
    "hence , it seems worth mentioning this issue so that skype developers can address it if desired .",
    "the current workaround for selecting multicam as the video input in skype is ugly but acceptable . when multicam is installed , a separate virtual camera , named _",
    "vcam _ , is also installed .",
    "vcam is a pure virtual camera : it does not use any physical cameras as input , instead generating random colors at every pixel in its output .",
    "hence , skype is perfectly happy for users to switch between a physical camera and vcam , and between vcam and multicam .",
    "so the workaround is for users to temporarily select vcam as the input device whenever switching between a single physical camera and multicam .",
    "to the best of my knowledge , there is no officially - published standard for enumerating the devices suitable for video chat on a windows box .",
    "however , directshow filters may be registered as belonging to a particular _ category _ of filters ( identified by a guid ) , and a widely - accepted de facto requirement is that video devices should be registered in the ` clsid_videoinputdevicecategory`filter category . for brevity",
    ", we will refer to this as the _ videoinputdevice _ category .",
    "note that membership of the videoinputdevice category is a necessary , but not sufficient , condition for a device to be usable in video chat .",
    "for example , the filter for a tv tuner is likely to be registered in this category , but it may not be desirable to offer the tv signal as an input to video chat .    thus , merely registering a filter as a videoinputdevice is not sufficient .",
    "the filter must also behave sufficiently like a physical camera , in the sense that it gives a sensible response to any directshow api method call made by the video chat software .",
    "again , there appears to be no published standard for this required behavior .",
    "presumably , every video chat application defines its own standard implicitly , by running a battery of tests on each videoinputdevice to determine its suitability .",
    "i am not aware of any video chat application that documents these tests , and in the case of proprietary software such as skype , we can not examine the source code to check what the requirements might be .",
    "therefore , the following rather tedious , but effective , approach was adopted in reverse engineering the behavior required of a virtual camera suitable for skype .",
    "( the approach is described here in case it is of use to other implementers of similar systems . ) first , we start with the example code for the source filter ` csource ` provided by microsoft .",
    "as already discussed , ensure that the filter will be registered as a videoinputdevice .",
    "next , alter and add to this code by implementing every virtual function in the class hierarchy above , and including , ` csource ` .",
    "each function should log the fact that it was called and perhaps additional information about its parameters and return values . now run the video chat software , choosing this new filter as the video source . by examining the log , we can determine which methods were called and make sensible guesses as to the desired behavior .",
    "there is a further complication which has been ignored up until this point . in directshow",
    ", filters are connected via software abstractions called _ pins _ , which are implemented as c@xmath13  classes derived from a suitable base class .",
    "a filter s pins determine much of its behavior , so the technique described above for reverse engineering the behavior of the virtual camera s filter must also be applied to the virtual camera s output pin .",
    "that is , derive a new class from ` cbaseoutputpin ` , implement all virtual functions in the class hierarchy , add suitable logging for every function , and test with skype .      here",
    "we briefly present the results of the reverse engineering approach just described .",
    "of course , these results depend on undocumented behavior of skype , and this behavior could change with future versions of skype .",
    "nevertheless , a quick summary of the results ( obtained for skype version 5.5 ) may be a useful guide for others implementing similar systems .",
    "we assume the videoinputdevice filter is derived from ` ctransformfilter ` , and the filter s output pin is derived from ` ctransformoutputpin `",
    ". moreover , it is essential that the output pin implement the ` ikspropertyset ` and ` iamstreamconfig ` interfaces .    on startup and/or",
    "when the user is altering video settings , skype causes the following directshow methods to be called on the videoinputdevice filter :    * ` cbasefilter::getpincount ( ) ` * ` cbasefilter::getpin ( ) ` * ` cbasefilter::joinfiltergraph ( ) ` * ` ctransformfilter::decidebuffersize ( ) ` * ` ctransformfilter::checkinputtype ( ) ` * ` ctransformfilter::checktransform ( ) `    similarly , the skype startup or video settings code causes the following calls of directshow methods on the videoinputdevice filter s output pin :    * ` ikspropertyset::get ( ) ` ( when the property ` amproperty_pin_category ` is requested , this should return ` pin_category_capture ` ) * ` iamstreamconfig::getformat ( ) ` * ` iamstreamconfig::getnumberofcapabilities ( ) ` * ` iamstreamconfig::getstreamcaps ( ) ` * ` iamstreamconfig::setformat ( ) ` * ` cbasepin::getmediatype ( ) ` * ` cbasepin::connect ( ) ` * ` cbasepin::checkmediatype ( ) `    hence , all of the above methods must be implemented and return sensible results in order for a virtual camera to masquerade as a physical camera for use in skype .",
    "as discussed in section  [ sec : design - overview ] , two instances of the multicam application communicate using skype s ap2ap facility , which is part of the skype desktop api .",
    "the ap2ap facility allows multicam instances to exchange arbitrary utf-8-encoded strings . here",
    ", we describe the strings actually used .",
    "this collection of commands is termed the _",
    "multicam ap2ap protocol_. the protocol consists of four types of requests , three of which require responses .",
    "hence , there are five commands in the protocol : ping , pong , asknumcams , replynumcams , askversion , replyversion and advancecamera .",
    "these are described in detail below , but let us first establish some notation .",
    "if the protocol specifies that the string `` ` foo ` '' should be sent , this means that `` ` foo ` '' should be first appended to an appropriate command in the skype desktop api .",
    "a typical example of a string actually sent to skype would be :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ` alter application multicam write skypeusername:1 foo ` _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    this example assumes that an ap2ap connection named ` multicam ` has already been established with a communication stream named ` skypeusername:1 `",
    ". please see the documentation of the skype desktop api  @xcite for details of how to achieve this .",
    "the existing implementation of multicam assumes an ap2ap connection named ` multicam ` is used ( as in the example above ) , but it is possible to envisage the same multicam ap2ap protocol being used by other third - party applications using different ap2ap connection names , so this requirement is not part of the protocol specification .      a ping request consists of the string ` ap2ap_ping ` .",
    "on receiving this request , multicam should respond with the string ` ap2ap_pong ` .",
    "these commands are obviously useful for debugging , but they are also used in the implementation to check for the presence of a remote multicam instance .",
    "an asknumcams request consists of the string ` ap2ap_ask_numcams ` . on receiving this request",
    ", multicam should respond with a replynumcams response .",
    "the response consists of the string of the form    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ` ap2ap_reply_numcamsn ` _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    where ` ' represents a space character , and @xmath37 is the number of physical cameras currently detected by the multicam filter ( or 0 if the filter is unavailable ) .",
    "the number @xmath37 should be formatted as the standard utf-8 text representation of an integer .",
    "the replynumcams response may also be sent at any other time ( i.e.without necessarily waiting for an asknumcams request ) .",
    "for example , the current implementation sends replynumcams when the multicam ap2ap connection is first achieved .      an askversion request consists of the string ` ap2ap_ask_version ` . on receiving this request",
    ", multicam should respond with a replyversion response .",
    "the response consists of a string of the form    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ` ap2ap_reply_versiond.d d.d.d.d ` _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    where ` ' represents a space character , and each @xmath38 is a digit .",
    "the first set of digits ( `` ` d.d ` '' ) is the version number of the multicam ap2ap protocol ( 1.1 , at the time of writing ) .",
    "the second set of digits ( `` ` d.d.d.d ` '' ) is the version number of the multicam application program ( 0.1.0.8 , at the time of writing ) .",
    "an advancecamera request consists of the string ` ap2ap_advance_camera ` .",
    "there is no response . on receiving this request ,",
    "the multicam application should send an advancecamera message to the multicam filter on the local machine ( or , if the filter is not available , do nothing ) . as described in appendix",
    "[ sec : advancecamera - ap2filt ] , this message will have the effect of either switching the multicam filter between tiled and non - tiled mode , or advancing the primary camera within non - tiled mode .",
    "the multicam application and multicam filter communicate with each other via the _ multicam ap2filt protocol _ , described in this section .",
    "ap2filt messages are transmitted using the standard microsoft windows messaging functionality , via win32 api functions such as ` sendmessage ( ) ` and ` sendmessagetimeout ( ) ` .",
    "the multicam application and multicam filter each create a hidden window whose sole purpose is to send and receive these messages .",
    "there are seven message types : discover , attach , kick , ping , pong , advancecamera , and reset .",
    "each employs a different message i d ( where _ message i d _ is defined as the second parameter in the win32 ` sendmessage ( ) ` function ) .",
    "the message ids themselves are not fixed in advance , but are determined each time the protocol is instantiated , using the win32 ` registerwindowmessage ( ) ` function .",
    "the parameters needed by ` registerwindowmessage ( ) ` are    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ` multicamdiscover4ad2e57a - af70 - 42ae-9a64-bc88f995b9c8 ` + ` multicamattach4ad2e57a - af70 - 42ae-9a64-bc88f995b9c8 ` + ` multicamadvance4ad2e57a - af70 - 42ae-9a64-bc88f995b9c8 ` + ` multicamkick4ad2e57a - af70 - 42ae-9a64-bc88f995b9c8 ` + ` multicamping4ad2e57a - af70 - 42ae-9a64-bc88f995b9c8 ` + ` multicampong4ad2e57a - af70 - 42ae-9a64-bc88f995b9c8 ` + ` multicamreset4ad2e57a - af70 - 42ae-9a64-bc88f995b9c8 ` _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    respectively , for each of the seven message types .",
    "the family of win32 messaging functions such as ` sendmessage ( ) ` all employ similar parameters , including the ` hwnd ` , ` wparam ` , and ` lparam ` parameters which are referenced in the discussion below . for more information about the data types and usage of these parameters ,",
    "see the win32 api documentation  @xcite .",
    "the discover message is broadcast by the multicam filter whenever an instance of the filter is created . here",
    ", `` broadcast '' means that the ` hwnd ` parameter is ` hwnd_broadcast ` .",
    "the ` wparam ` parameter is set to the handle of the filter s hidden window , and the ` lparam ` parameter is set to the number of physical cameras connected to the filter .",
    "if there is no multicam application present when the discover message is broadcast , the message has no effect .",
    "if a multicam application is present , it should attach itself to the filter .",
    "specifically , the multicam application sends an attach message directly to the filter s hidden window ( it can do this as it has just received that window s handle ) , setting the ` wparam ` parameter to the handle of its own hidden window . on receiving the attach message , the multicam filter stores",
    "the application s hidden window s handle for later use .",
    "the kick message is used by the multicam application in order to kickstart the discover - attach sequence just described .",
    "this is needed because sometimes a user will start the multicam application only after the multicam filter has already been created by the video chat software .",
    "a kick can also be used to restart communication after an unexpected breakdown .",
    "the usage of kick is entirely straightforward : the multicam application broadcasts the message ( i.e.  ` hwnd ` is set to ` hwnd_broadcast ` ) , setting the ` wparam ` and ` lparam ` parameters to arbitrary values since they will be ignored . on receiving a kick",
    ", the multicam filter sends a discover message as described above .",
    "ping and pong messages are used for debugging and for periodically checking the connection between the multicam application and filter .",
    "specifically , the multicam application sends a ping to the multicam filter whenever it chooses ( the ` wparam ` and ` lparam ` parameter values are irrelevant ) . on receiving a ping , the multicam filter sends a pong message back to the multicam application ( again , the ` wparam ` and ` lparam ` parameter values are irrelevant ) .",
    "the advancecamera message is sent from the multicam application to the multicam filter .",
    "its purpose is to either switch to a new primary camera ( in non - tiled mode ) or to switch between tiled and non - tiled modes .",
    "the ` wparam ` and ` lparam ` parameter values are not used in this message .",
    "note that the physical cameras connected to the multicam filter have a particular ordering which is established when the filter first uses the directshow api to enumerate the cameras . this enables us to define the behavior of the multicam filter when it receives an advancecamera message as follows .",
    "if the filter is currently in non - tiled mode , and the primary camera is not the last camera , the filter remains in non - tiled mode and new primary camera is the successor of the old primary camera .",
    "if the filter is in non - tiled mode , and the primary camera _ is _ the last camera , the filter switches to tiled mode .",
    "if the filter is in tiled mode , it switches to non - tiled mode and sets the primary camera to be the first camera .",
    "the reset message is sent from the multicam application to the multicam filter .",
    "its purpose is to force a reinitialization of the multicam filter",
    ". this may be useful if an unexpected error is encountered , or if an unhandled change in the hardware configuration ( such as the addition or removal of a physical camera ) has occurred .",
    "the ` wparam ` and ` lparam ` parameter values are not used in this message .",
    "the precise behavior of the multicam filter on receiving a reset message is not specified here .",
    "note that the current implementation does not implement this feature , but it is anticipated that future versions of multicam may benefit from it .",
    "the following survey was administered verbally to each participant in the user study described in section  [ sec : user - study ] .    1",
    ".   overall , which do you feel gave you a more satisfactory experience : you , the listener , controlling the cameras ; or me , the speaker , controlling the cameras ? if you have no preference , that is also a valid answer .",
    "2 .   @xmath39skip this question if no preference is expressed on the previous question.@xmath40 $ ] this question asks how strongly you feel about your answer to the previous question .",
    "i will read a statement summarizing your answer to the previous question , and then ask you to tell me whether you ( i ) strongly agree , ( ii ) agree , or ( iii ) mildly agree with the statement .",
    "`` when the listener / speaker controlled the camera , the overall experience was more satisfactory . ''",
    "@xmath39choose `` listener '' or `` speaker '' in this statement according to the answer to the previous question.@xmath40 $ ] please tell me whether you strongly agree , agree , or mildly agree with that statement .",
    "when i , the speaker , was controlling the camera , was there anything that you liked or disliked about that experience ?",
    "list as many things as you wish .",
    "when you , the listener , were controlling the camera , was there anything that you liked or disliked about that experience ?",
    "list as many things as you wish .",
    "5 .   when you were controlling the camera ,",
    "did you use the simultaneous view of both cameras much , if at all ? 6 .",
    "please tell me any other thoughts or feelings you have about your experience using this system .",
    "h.  harlyn baker , nina bhatti , donald tanguay , irwin sobel , dan gelb , michael  e. goss , john maccormick , kei yuasa , w.  bruce culbertson , and thomas malzbender . computation and performance issues in coliseum : an immersive videoconferencing system . in _ proc .",
    "acm multimedia _ , pages 470479 , 2003 .",
    "oscar divorra , jaume civit , fei zuo , harm belt , ingo feldmann , oliver chreer , einat yellin , wijnand ijsselsteijn , rob van eijk , david espinola , pierre hagendorf , wolfgang waizenneger , and ralph braspenning . towards 3d - aware telepresence : working on technologies behind the scene . in _ proc .",
    "acm cscw : new frontiers in telepresence _ , 2010 .",
    "yu - wen huang , bing - yu hsieh , shao - yi chien , and liang - gee chen .",
    "simple and effective algorithm for automatic tracking of a single object using a pan - tilt - zoom camera . in _ proc .",
    "icme _ , volume  1 , pages 789792 , 2002 .",
    "john  d. mccalpin .",
    "stream : sustainable memory bandwidth in high performance computers .",
    "technical report , university of virginia , charlottesville , virginia , 1991 - 2007 . a continually updated technical report .",
    "http://www.cs.virginia.edu / stream/.      oliver otto , dave roberts , and robin wolff . a review on effective closely - coupled collaboration using immersive cve s . in _ proc .",
    "acm int .",
    "conf .  virtual reality continuum and its applications _ , pages 145154 , new york , ny , usa , 2006 .",
    "acm .",
    "zhenyu yang , wanmin wu , klara nahrstedt , gregorij kurillo , and ruzena bajcsy . : view dissemination and management for multi - party 3d tele - immersive environments . in _ proc .",
    "acm multimedia _ , pages 882891 , 2007 ."
  ],
  "abstract_text": [
    "<S> the dominant paradigm for video chat employs a single camera at each end of the conversation , but some conversations can be greatly enhanced by using multiple cameras at one or both ends . </S>",
    "<S> this paper provides the first rigorous investigation of multi - camera video chat , concentrating especially on the ability of users to switch between views at either end of the conversation . </S>",
    "<S> a user study of 23 individuals analyzes the advantages and disadvantages of permitting a user to switch between views at a remote location . </S>",
    "<S> benchmark experiments employing up to four webcams simultaneously demonstrate that multi - camera video chat is feasible on consumer hardware . </S>",
    "<S> the paper also presents the design of multicam , a software package permitting multi - camera video chat . </S>",
    "<S> some important trade - offs in the design of multicam are discussed , and typical usage scenarios are analyzed . </S>"
  ]
}
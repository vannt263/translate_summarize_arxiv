{
  "article_text": [
    "when preferences of agents are aggregated to identify a desirable social outcome , pareto optimality is a minimal requirement .",
    "pareto optimality stipulates that there should not be another outcome that is at least as good for all agents and better for at least one agent .",
    "we take pareto optimality as a central concern and consider a richer version of the classic assignment problem where the twist is that agents may express uncertainty in their preferences .",
    "the assignment problem is a fundamental setting in which @xmath0 agents express preferences over @xmath0 items and each agent is to be allocated one item .",
    "the setting is a classical one in discrete allocation .",
    "its axiomatic and computational aspects have been well - studied  @xcite .",
    "our motivation for studying assignment with uncertain preferences is that agents preferences may not be completely known because of a lack of information or communication .",
    "our work is inspired by the recent work of @xcite who examined the stable marriage problem under uncertain preferences .",
    "uncertainty in preferences has already been studied in voting  @xcite .",
    "similarly , in auction theory , it is standard to examine bayesian settings in which there is probability distribution over the types of the agents .",
    "although computational aspects of pareto optimal outcomes have been intensely studied in various settings such as assignment , matching , housing markets , and committee voting  @xcite , there has not been much work on pareto optimal under uncertain preferences .",
    "when agents have uncertain preferences , one can relax the goal of computing a pareto optimal outcome and focus on computing outcomes that have the _ highest probability _ of being pareto optimal .",
    "we will abbreviate pareto optimal as po .",
    "if an assignment is pareto optimal with probability one , we will call it certainly po .",
    "we consider the following uncertainty models :    * * lottery model * : for each agent , we are given a probability distribution over linear preferences . * * joint probability model * : a probability distribution over linear preference profiles is specified .",
    "note that both the lottery model and the joint probability model representation can be exponential in the number of agents but if the support of the probability distributions is small , then the representation is compact . also note that the product of the independent uncertain preferences in the lottery model results in a probability distribution over preference profiles and hence can be represented in the joint probability model .",
    "however , the change in representation can result in a blowup .",
    "thus whereas the joint probability model is more general than the lottery model , it is not as compact . in view of this , complexity results for one model do not directly carry over to results for the other model .",
    "the most natural computational problems that we will consider are as follows .    * po - probability : what is the probability that a given assignment is po ?",
    "* assignmentwithhighestpo - probability : compute an assignment with the highest probability of being po .",
    "we also consider simpler problems than po - probability :    * ispo - probabilitynon - zero : for a given assignment , is the probability of being po non - zero ? * ispo - probabilityone : for a given assignment , is the probability of being po one ?",
    "we also consider a problem connected to assignmentwithhighestpo - probability : existscertainlypo - assignment asks whether there exists an assignment that has probability one for being po .",
    "note that existspossiblypo - assignment  the problem of checking whether there exists some po assignment with non - zero probability  is trivial for all uncertainty models in which the induced ` certainly preferred ' relation is acyclic .",
    "the reason why it is trivial is because the certainly preferred relation can be completed in a way so that it is transitive and then for the completed deterministic preferences , there exists at least one po assignment .",
    "we say that a given uncertainty model is _ independent _ if any uncertain preference profile @xmath1 under the model can be written as a product of uncertain preferences @xmath2 for all agents @xmath3 , where all @xmath2 s are independent  @xcite .",
    "note that the lottery model is independent but the joint probability model is not .    [ [ results ] ] results + + + + + + +    we show that for both the lottery model and the joint probability model , existscertainlypo - assignment is np - complete .",
    "we also prove that assignmentwithhighestpo - probability is np - hard for both models . in view of the results",
    ", we see that as we move from deterministic preferences to uncertain preferences , the complexity of computing pareto optimal assignments jumps significantly . on the other hand , we show that for a general class of uncertainty models called independent uncertainty models , both problems ispo - probabilitynon - zero and ispo - probabilityone can be solved in linear time . whereas po - probability is polynomial - time solvable for the joint probability model , we prove that the problem # p - complete for the lottery model . even for the lottery model ,",
    "the problem becomes polynomial - time solvable if there is a constant number of uncertain agents .",
    "our results are summarized in table  [ table : summary : uncertainpo ] .",
    "[ table : summary : uncertainpo ]",
    "the setting we consider is the _ assignment problem _ which is a triple @xmath4 where @xmath5 is the set of @xmath0 agents @xmath6 , @xmath7 is the set of items , and @xmath8 specifies complete , asymmetric , and transitive preferences @xmath9 of each agent @xmath10 over @xmath11 .",
    "we will denote by @xmath12 as the set of all complete and transitive relations over the set of items @xmath11 .",
    "we will denote by @xmath13 as the preference profile of agents from set @xmath14 .",
    "an _ assignment _ is an allocation of items to agents , represented as an @xmath15 matrix @xmath16_{\\substack{1\\leq i\\leq n , 1\\leq j\\leq n}}$ ] such that for all @xmath17 , and @xmath18 , @xmath19 ; and for all @xmath20 , @xmath21 .",
    "an agent @xmath10 gets item @xmath22 if and only if @xmath23 .",
    "each row @xmath24 represents the _ allocation _ of agent @xmath10 .",
    "an assignment @xmath25 is _ pareto optimal _ if there does not exist another assignment @xmath26 such that @xmath27 for all @xmath17 and @xmath28 for some @xmath17 .",
    "we first note a couple of well - known characterisations of pareto optimal assignments .",
    "an assignment @xmath25 admits a _ trading cycle _ @xmath29 in which @xmath30 for all @xmath31 , @xmath32 for all @xmath31 .",
    "[ fact : sdeff ] an assignment is pareto optimal if and only if it does not admit a trading cycle .    we will also use the following characterization of pareto optimal discrete assignments  @xcite that is defined with respect to outcomes of serial dictatorship .",
    "serial dictatorship is an assignment mechanism that is specified with respect to a permutation @xmath33 over @xmath5 : agents in the permutation are given the most preferred item that is still not allocated .",
    "we will denote by @xmath34 the outcome of applying serial dictatorship with respect to permutation @xmath33 over assignment problem @xmath4 .",
    "[ fact : abso ] an assignment is pareto optimal if and only if it is an outcome of serial dictatorship .    fact  [ fact : abso ] also follows from proposition 1 by @xcite .",
    "the facts above show that when preferences are deterministic , a pareto optimal assignment can be computed or verified easily .",
    "we will now focus on similar problems but with the feature that agents have uncertain preferences .",
    "@xmath35    consider the assignment @xmath36 in which @xmath37 gets @xmath3 , @xmath38 gets @xmath39 , and @xmath40 gets @xmath41 .",
    "the probability of the assignment being pareto optimal is 1 . on the other hand ,",
    "the assignment @xmath42 has 0.4 probability of being pareto optimal .",
    "we first observe that the po - probability can be solved easily for the joint probability model .",
    "[ thm : joint - poprobability - poly ] for the joint probability model , po - probability can be solved in polynomial time .",
    "the probability that a given assignment is po is equivalent to the probability weight of the preference profiles for which the assignment is po .",
    "this can be checked as follows .",
    "we check the preference profiles for which the given assignment is po ( for one profile , this can be checked in linear time ) .",
    "then we add the probabilities of those profiles for which the assignment is po .",
    "the sum of the probabilities is the probability that the assignment is po .",
    "[ cor:1jointprobab ] for the joint probability model , ispo - probabilitynon - zero and ispo - probabilityone can be solved in polynomial time .    what about existscertainlypo - assignment ?",
    "this problem is equivalent to checking whether the sets of po assignments have a non - empty intersection .",
    "we show that this problem is np - complete even when the probability distribution is over two linear preference profiles .",
    "we reduce from the np - complete problem serialdictatorshipfeasibility  check whether there exists a permutation of agents for which serial dictatorship gives a particular item @xmath43 to an agent @xmath10  @xcite .",
    "0.98 serialdictatorshipfeasibility +    [ cols= \" < , < \" , ]     let @xmath44 be a monotone 2cnf formula with clauses @xmath45 and variables @xmath46 .",
    "we construct an instance of po - probability as follows .",
    "consider agents @xmath47 and items @xmath48 , and take the assignment @xmath49 that gives each agent i item @xmath50 .",
    "we construct the preferences of the agents as follows .",
    "take an arbitrary agent @xmath10 .",
    "consider the set @xmath51 of indices @xmath52 such that the clause @xmath53 occurs in @xmath44 .",
    "( without loss of generality , this set @xmath51 is non - empty . )",
    "suppose that  @xmath54 , in order to fix an ( arbitrary ) order over these indices .",
    "with probability @xmath55 , agent @xmath10 has @xmath50 at the top of his preference list , followed by the rest of the items in arbitrary order .",
    "with probability @xmath55 , agent @xmath10 has the following preference : @xmath56 , where the remaining items appear in arbitrary order after @xmath50 .",
    "this way , the possible preference profiles correspond one - to - one to the possible truth assignments over @xmath57 .",
    "namely , taking the preference @xmath58 for agent @xmath10 corresponds to setting @xmath59 to 1 , and taking the other preference for agent @xmath10 corresponds to setting @xmath59 to 0 .",
    "moreover , each possible preference profile occurs with probability @xmath60 .",
    "we show that the number of satisfying assignments for @xmath44 is equal to the number of preference profiles under which @xmath49 is pareto optimal . in particular , we show that @xmath49 is po under a preference profile if and only if the corresponding truth assignment t satisfies @xmath44 .",
    "( @xmath61 ) take a possible preference profile @xmath62 under which @xmath49 is po and suppose , for a contradiction , that the corresponding truth assignment t does not satisfy @xmath44 .",
    "that is , there is some clause @xmath63 that is not satisfied , implying that in t both @xmath59 and @xmath64 are set to 0 .",
    "then we know that agent @xmath10 prefers @xmath22 to @xmath50 and agent @xmath52 prefers @xmath50 to @xmath22 , hence they are willing to swap their assigned items .",
    "therefore @xmath49 is not pareto optimal under @xmath62 , a contradiction .",
    "( @xmath65 ) take a possible preference profile @xmath62 and suppose that the corresponding truth assignment t satisfies @xmath44 .",
    "we show that we can not find a pareto improvement of @xmath49 , implying that @xmath49 is po .",
    "take an arbitrary agent @xmath10 .",
    "first suppose that t sets @xmath59 to 1 .",
    "this means that agent @xmath10 prefers @xmath50 to all other items , and so he is not willing to exchange it with another item . now",
    ", suppose that t sets @xmath59 to 0 .",
    "take the set @xmath51 of indices such that the clause @xmath53 occurs in @xmath44 .",
    "as @xmath59 is set to 0 , this means that @xmath10 prefers @xmath66 to @xmath50 and is willing to exchange @xmath50 with either of these items ( but no other item ) . because t satisfies @xmath44 , we know that t sets @xmath67 to 1 , and consequently , agents @xmath68 prefer items @xmath66 over all other items ( respectively ) .",
    "so neither of these agents is willing to exchange their assigned item with @xmath50 .",
    "therefore , as no pareto improvement exists , @xmath49 is pareto optimal .",
    "the number of satisfying truth assignments of @xmath44 is then exactly equal to @xmath69 times the probability that assignment @xmath49 is pareto optimal .",
    "thus , po - probability is # p - hard , even when restricted to the case where each agent has at most two possible preferences .",
    "next , we argue that po - probability is in # p. technically speaking , the class # p consists of counting problems , which are functions  @xmath70 .",
    "we can consider po - probability as such a function producing natural numbers in the following way . without loss of generality ,",
    "suppose that the probabilities in the input are all given as rational numbers with the same denominator  @xmath71 .",
    "( we can transform the input in polynomial time to an equivalent input that satisfies this property . )",
    "then the probability that the given assignment is pareto optimal is  @xmath72 for some positive integer  @xmath73 .",
    "we then consider the problem po - probability as the function that returns  @xmath73 , rather than the rational  @xmath72 .",
    "we argue membership in # p by describing a nondeterministic turing machine  @xmath74 that has the property that for each input , the number of accepting paths of  @xmath74 for this input equals the number  @xmath73 that corresponds to the probability that the given matching is pareto optimal .",
    "the existence of such a turing machine implies membership in # p  @xcite .",
    "the machine  @xmath74 operates as follows . for each agent  @xmath75",
    ", it uses nondeterminism to generate  @xmath71 different ( partial ) computation paths .",
    "these partial computation paths are concatenated , resulting in  @xmath76 total computation paths .",
    "suppose that the input specifies  @xmath77 possible preference orders for agent  @xmath75 , occurring with probabilities  @xmath78 , respectively .",
    "then the first  @xmath79 partial computation paths generated for  @xmath75 correspond to the first preference order , the next  @xmath80 correspond to the second order , and so on . as a result",
    ", each total computation path corresponds to some preference profile . at the end of each computation path , the machine  @xmath74 checks ( in deterministic polynomial time ) whether the assignment is pareto optimal for the corresponding preference profile , and accepts if and only if this is the case .",
    "it is straightforward to verify that the number of accepting computation paths of  @xmath74 is exactly the number  @xmath73 such that the probability that the assignment is pareto optimal is  @xmath72 .",
    "therefore , we know that po - probability is in # p.    we showed that when there are only a constant number of uncertain agents , we can compute the po probability in polynomial time for the lottery model ( theorem  [ thm : lottery - poprobability - poly ] ) .",
    "however , the order of the polynomial that upper bounds the running time of our proposed algorithm grows with the number of uncertain agents . in particular , when  @xmath81 is the number of uncertain agents , and  @xmath77 is the maximum number of possible preference orders for these uncertain agents , the running time of the algorithm outlined in the proof of theorem  [ thm : lottery - poprobability - poly ] is  @xmath82 .",
    "we improve on this result by showing that there exists a fixed - parameter tractable algorithm that computes the po probability for the lottery model that is , an algorithm running in time  @xmath83 for some computable function  @xmath84 and some fixed constant  @xmath41 independent of  @xmath81 , where  @xmath0 denotes the input size .",
    "in other words , we show that the parameterized problem @xmath81-po - probability , where the parameter is the number of uncertain agents , is fixed - parameter tractable for the lottery model .    for the lottery model , @xmath81-po - probability can be solved in fixed - parameter tractable time .",
    "take an arbitrary instance of the problem @xmath81-po - probability , consisting of agents  @xmath85 , objects  @xmath86 , and an assignment @xmath49 .",
    "without loss of generality , assume that the assignment gives each agent  @xmath10 the object  @xmath50 , and that the uncertain agents are agents  @xmath87 . for each uncertain agent  @xmath10 ,",
    "let  @xmath88 denote the different possible preferences for agent  @xmath10",
    ".    additionally , assume without loss of generality that for each of the uncertain agents  @xmath87 , each of the possible preferences for these agents occurs with probability  @xmath89 , where the numerator  @xmath77 can vary between different agents and different possible preferences , but where the denominator  @xmath71 is common among all agents and all possible preferences . in other words ,",
    "all probabilities mentioned in the instance are rational numbers that share a common denominator  @xmath71 .",
    "if this were not the case , we could straightforwardly transform the instance in polynomial time to an equivalent instance that does satisfy this property .",
    "also , assume without loss of generality that there exists no trading cycle that involves only the agents  @xmath90 . if this were the case , the assignment is pareto optimal with probability zero , and we can filter out such trivial instances using a polynomial - time preprocessing procedure .",
    "we now how to compute the probability that the given assignment is pareto optimal in fixed - parameter tractable time .",
    "our computation will proceed in three stages :    * we construct a directed graph  @xmath91 with  @xmath92 vertices , where the edges are weighted . here",
    "@xmath93 denotes the maximum number of possible preferences for any uncertain agent .",
    "* we count the number of homomorphisms  @xmath84 of a directed path  @xmath94 of length  @xmath95 to this graph  @xmath91 , where each homomorphism is counted multiple times according to ( the product of ) the weights on the edges in  @xmath96 .",
    "this counting can be done in polynomial time using an extension of a known algorithm @xcite .",
    "* we divide the weighted total number of homomorphisms of  @xmath94 to  @xmath91 by the number  @xmath97 to obtain the probability that the given assignment is pareto optimal .",
    "we begin with phase  ( 1 ) , and we construct the weighted , directed graph  @xmath91 .",
    "let  @xmath98 be the set of all possible pairs  @xmath99 of objects among  @xmath100 .",
    "we define the set  @xmath101 of vertices of  @xmath91 as follows .",
    "first , we define an auxiliary set  @xmath102 : @xmath103 , j \\in [ u_i ] \\}.\\ ] ] then , we define the set  @xmath101 of vertices as follows : @xmath104 that is , the graph  @xmath91 has vertices  @xmath105 and  @xmath106 , and  @xmath107 copies of each element in  @xmath102 ( one for each  @xmath108 ) . intuitively , the vertices  @xmath105 and  @xmath106 will act as source and target for each homomorphism of  @xmath94 to  @xmath91 .    the sets  @xmath108 will intuitively be used to memorize the ` trading paths ' ( i.e. , paths in the trading cycle graph ) that result from particular choices of the preference orders  @xmath109 chosen for the agents  @xmath87 .",
    "that is , each  @xmath110 corresponds to a path from  @xmath50 to  @xmath22 in the directed graph with vertices  @xmath86 where there is an edge from  @xmath111 to  @xmath112 if and only if agent  @xmath113 prefers object  @xmath112 to object  @xmath111 .",
    "we construct the set  @xmath114 of ( weighted and directed ) edges as follows .",
    "* we add an edge with weight  @xmath37 from  @xmath105 to  @xmath115 .",
    "* for each  @xmath116 $ ] , each  @xmath117 $ ] , and each  @xmath108 , we add an edge from  @xmath118 to  @xmath119 .",
    "this edge has weight  @xmath77 , where the possible preference order  @xmath109 for agent  @xmath10 occurs with probability  @xmath89 .",
    "* for each  @xmath116 $ ] , each  @xmath117 $ ] , and each  @xmath108 , we add an edge with weight  @xmath37 from  @xmath119 to the vertex  @xmath120 , for some  @xmath121 .",
    "the choice of  @xmath122 is determined as follows .",
    "consider the following graph  @xmath123 .",
    "the vertices of this graph are  @xmath86 . for each pair  @xmath124 of vertices among  @xmath125",
    ", there is an edge from  @xmath111 to  @xmath112 if and only if agent  @xmath52 prefers object  @xmath112 to object  @xmath111 .",
    "moreover , for each  @xmath126 , we add an edge from  @xmath111 to  @xmath112 . finally , for each agent  @xmath111 among  @xmath125 , we add an edge from  @xmath50 to  @xmath111 if and only if  @xmath127 .",
    "we then let  @xmath128 be the set of all pairs  @xmath124 such that there is a path from  @xmath111 to  @xmath112 in  @xmath123 .",
    "clearly ,  @xmath129 .",
    "* for each  @xmath108 such that  @xmath130 for all  @xmath10 among  @xmath87 , we add an edge with weight  @xmath37 from  @xmath131 to  @xmath106 .",
    "clearly , any homomorphism  @xmath84 from the directed path  @xmath94 of length  @xmath95 to  @xmath91 must map the first vertex of the path to  @xmath105 and the last vertex of the path to  @xmath106 .",
    "each such homomorphism must map the @xmath132-th vertex of the path to some vertex  @xmath118 and the @xmath133-th vertex of the path to some vertex  @xmath119 .",
    "also , the @xmath134-th vertex of the path must be mapped to some vertex  @xmath131 where  @xmath135 contains no pair  @xmath136 .",
    "these observations follows directly from the construction of  @xmath91 .",
    "moreover , each homomorphism  @xmath137 from the directed path  @xmath138 of length  @xmath139 to  @xmath91 that maps the first vertex of the path to  @xmath105 is uniquely determined by some series of choices  @xmath140 for the possible preferences of the uncertain agents  @xmath87 .",
    "we argue that such a homomorphism  @xmath137 can be extended to a homomorphism  @xmath84 from  @xmath94 to  @xmath91 if and only if the corresponding preferences  @xmath140 lead to a trading cycle . the homomorphism  @xmath137 maps the @xmath134-th vertex of the path to some pair  @xmath131 . here",
    "@xmath135 is the set of pairs  @xmath141 such that the preferences  @xmath140 lead to a trading path from  @xmath50 to  @xmath22 . by our assumption that there exists no trading cycle that involves only the agents  @xmath90 , we know that the set  @xmath135 contains some pair  @xmath136 if and only if there exists a trading cycle",
    "therefore , by construction of the edges between  @xmath131 and  @xmath106 , we know that the choices  @xmath140 of preferences for the agents  @xmath87 that make the assignment pareto optimal are in one - to - one correspondence with the homomorphisms  @xmath84 from  @xmath94 to  @xmath91 .",
    "we count each such homomorphism  @xmath84 in a weighted fashion as follows this is phase  ( 2 ) .",
    "take a homomorphism  @xmath84 from  @xmath94 to  @xmath91 .",
    "its weight in the grand total is the product of the weights for each edge in  @xmath96 .",
    "the only edges in  @xmath96 that have weigth  @xmath142 are edges from  @xmath118 to  @xmath119 .",
    "such an edge has weight  @xmath77 , where the probability that  @xmath109 occurs is  @xmath89 . from this",
    ", it is straightforward to verify that the total weighted sum of all homomorphisms is equal to  @xmath143 , where  @xmath25 is the probability that the given assignment is pareto optimal .",
    "therefore , in order to compute  @xmath25 , we only need to take the weighted sum of all homomorphisms , and divide it by  @xmath144 this is phase  ( 3 ) of the algorithm .",
    "all that remains is to show how we can compute the weighted sum of all homomorphisms  @xmath84 from  @xmath94 to  @xmath91 in polynomial time .",
    "we can do this by extending a known polynomial - time algorithm to count the number of homomorphisms of a graph whose treewidth is bounded by a fixed constant into another graph ( * ? ? ?",
    "* theorem  14.7 ) . since paths have treewidth  @xmath37 , counting the number of homomorphisms from a path to another graph can be done in polynomial time using this algorithm .",
    "this algorithm uses a dynamic programming approach to count the number of homomorphisms .",
    "this dynamic programming technique can straightforwardly be extended to take into account the weights of the homomorphisms .",
    "( we omit a detailed description of the extended algorithm . )",
    "this concludes our proof that @xmath81-po - probability can be solved in fixed - parameter tractable time for the lottery model .",
    "computing pareto optimal outcomes is an active line of research in economics and computer science . in this paper",
    ", we examined the problem for an assignment setting where the preferences of the agents are uncertain .",
    "our central technical results are computational hardness results .",
    "we see that as we move from deterministic preferences to uncertain preferences , the complexity of computing pareto optimal outcomes jumps significantly .",
    "the computational hardness results carry over to more complex models in which there may be more items than agents , agents may have capacities , and items may have copies . for future work , we are also starting to consider other uncertainty models  @xcite . if we consider the compact indifference model  @xcite which is an independent uncertainty model , then the results in section  [ sec : uncertain ] apply to it .",
    "if we allow for intransitive preferences , even a possibly pareto optimal assignment may not exist and the problem of checking whether a possible pareto optimal assignment exists becomes interesting .",
    "an orthogonal but equally interesting direction will be to consider other fairness , stability , or efficiency desiderata  @xcite .",
    "abraham , d.  j. , cechlrov , k. , manlove , d. , mehlhorn , k. , 2005 .",
    "pareto optimality in house allocation problems . in : proceedings of the 16th international symposium on algorithms and computation ( isaac ) .",
    "3341 of lecture notes in computer science ( lncs ) .",
    "11631175 .",
    "aziz , h. , biro , p. , gaspers , s. , de  haan , r. , mattei , n. , rastegari , b. , 2016 .",
    "stable matching with uncertain linear preferences . in : proceedings of the 9th international symposium on algorithmic game theory ( sagt ) .",
    "aziz , h. , biro , p. , lang , j. , lesca , j. , monnot . ,",
    "j. , 2016 .",
    "optimal reallocation under additive and ordinal preferences . in : proceedings of the 15th international conference on autonomous agents and multi - agent systems ( aamas ) .",
    "aziz , h. , mackenzie , s. , xia , l. , ye , c. , 2015 .",
    "ex post efficiency of random assignments . in : proceedings of the 14th international conference on autonomous agents and multi - agent systems ( aamas ) .",
    "16391640 .",
    "krysta , p. , manlove , d. , rastegari , b. , zhang , j. , 2014 .",
    "size versus truthfulness in the house allocation problem. in : proceedings of the 15th acm conference on economics and computation ( acm - ec ) .",
    "acm press , pp .",
    "453470 .",
    "saban , d. , sethuraman , j. , 2013 .",
    "house allocation with indifferences : a generalization and a unified view . in : proceedings of the 14th acm conference on electronic commerce ( acm - ec ) .",
    "acm press , pp ."
  ],
  "abstract_text": [
    "<S> the assignment problem is one of the most well - studied settings in social choice , matching , and discrete allocation . </S>",
    "<S> we consider the problem with the additional feature that agents preferences involve uncertainty . </S>",
    "<S> the setting with uncertainty leads to a number of interesting questions including the following ones . how to compute an assignment with the highest probability of being pareto optimal </S>",
    "<S> what is the complexity of computing the probability that a given assignment is pareto optimal ? does there exist an assignment that is pareto optimal with probability one ? </S>",
    "<S> we consider these problems under two natural uncertainty models : ( 1 ) the lottery model in which each agent has an independent probability distribution over linear orders and ( 2 ) the joint probability model that involves a joint probability distribution over preference profiles . </S>",
    "<S> for both of the models , we present a number of algorithmic and complexity results highlighting the difference and similarities in the complexity of the two models .    </S>",
    "<S> assignment problem , resource allocation , pareto optimality , uncertain preferences . </S>",
    "<S> _ jel _ : c62 , c63 , and c78 </S>"
  ]
}
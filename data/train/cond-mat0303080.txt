{
  "article_text": [
    "improving and developing new numerical algorithms lies at the heart of computational physics . amongst others ,",
    "monte carlo ( mc ) methods are often seen as the best choice for the study of phase transitions taking place in classical or quantum models . for the study of spin models for example , cluster algorithms , either in the classical  @xcite or quantum  @xcite case , perform non - local moves in phase space , allowing for the treatment of systems much larger than with traditional local update methods ( single spin - flip algorithms ) .",
    "these types of algorithms have almost completely solved the problem of critical slowing down arising near phase transitions .",
    "the class of systems for which cluster methods are known to exist is limited , and it is therefore of great interest to search for new algorithms possessing the same efficient features for other models . in this context , we have proposed recently a non - local  worm  algorithm for the study of quantum link - current models  @xcite .",
    "these models arise from a phase approximation of bosonic hubbard models , but are also relevant in the context of quantum electrodynamics  @xcite .",
    "previous mc simulations of the quantum link - current ( quantum rotor ) model used a local algorithm suffering from critical slowing down . in the new algorithm",
    "@xcite updates are made by reptating a  worm  through the lattice  @xcite .",
    "since the movement of the worm only depends on a few probabilities determined locally with respect to the current position of the  head \" of the worm , we call this type of algorithm a geometrical worm algorithm as opposed to other recently developed worm algorithms based on high - temperature series expansions  @xcite .",
    "the geometrical worm algorithm gives rise to very small autocorrelation times and by directing the algorithm these autocorrelation times can be even further reduced .    in this paper",
    ", we briefly recall the principles of the geometrical worm algorithm  @xcite . during the construction of a worm a new part",
    "is added to the worm by moving the worm through one of the @xmath2 nearest neighbor links .",
    "usually the associated @xmath2 probabilities , @xmath3 , are chosen in an un - biased geometrical way and there is therefore a significant probability that the new part of the worm will back - track in its own path , thereby erasing the immediately preceding part . in many cases",
    "this back - tracking ( or bounce ) probability is the dominant probability among the @xmath2 probabilities and using these un - biased probabilities is therefore clearly rather wasteful .",
    "here we describe an improvement of this geometric worm algorithm , which we call the directed worm algorithm , as a reference to recently developed directed loop methods for quantum monte carlo simulations of spin systems  @xcite .",
    "this directed geometrical worm algorithm is identical to its un - directed counterpart except for the fact that the probabilities @xmath3 are now chosen in a biased way , using knowledge of the immediately preceding step in the construction of the worm .",
    "these biased probabilities can all be tabulated at the start of the simulation and the additional computational effort stems solely from the significantly wider distribution of the directed worms .",
    "the directed algorithm gives rise to even better results , as will be shown in the following part of this paper , where we present results on autocorrelation times for both directed and `` undirected '' worm algorithms .",
    "the procedure for choosing the  biased \" probabilities leading to the directed algorithm is quite general and should be applicable to other algorithms that depend on local probabilities .",
    "furthermore , we show how green functions @xmath4 of the original quantum model can be measured efficiently during the construction of the worm by calculating the probability that the worm reaches a given site @xmath5 away from its starting point , independently of whether a directed or un - directed algorithm is used .",
    "for both the derivation of the directed algorithm and the measurements of correlation functions , analytical proofs of the validity of the algorithms are presented .",
    "the outline of the paper is as follows : in the next section , we present the quantum rotor model and introduce some useful notation . then , a brief description of the  undirected  worm algorithm is given in section  [ sec : undirected ] , before proceeding to the main contents of this paper , a description of the directed geometrical worm algorithm ( section  [ sec : directed ] ) . a simple procedure for numerically determining the biased probabilities for the worm moves is presented .",
    "in addition , we derive a proof of detailed balance for the directed worm algorithm . in order to compare our algorithms to related ones ,",
    "we present in section  [ sec : classical ] another recent approach due to prokofev and svistunov  @xcite , originally based on high temperature series expansion for classical statistical models , which we therefore will refer to as `` classical worms '' throughout this paper . in section  [ sec : auto ] , we estimate the efficiency of the algorithms by calculating auto - correlation times in the mc simulation , and compare to both undirected and classical algorithms .",
    "we then discuss the measurements of correlation functions within the worm algorithm in section  [ sec : cfunc ] and show some results at a specific point of the phase diagram .",
    "we conclude with a discussion of the features of the directed algorithm .",
    "many magnetic systems , josephson junction arrays and several other systems can be described by a quantum rotor model  @xcite : @xmath6 here , @xmath7 is the phase of the quantum rotor , @xmath8 the renormalized coupling strength and @xmath9 an effective chemical potential .",
    "if @xmath10 it can be shown that this model displays the same critical behavior as the @xmath11 dimensional @xmath12-model . however , when @xmath13 this model is not amenable to direct numerical treatment in this representation due to the resulting imaginary term .",
    "it is therefore very noteworthy that an equivalent _ completely real _ representation in terms of link - currents exists even for non - zero @xmath9 .",
    "this link - current ( villain ) representation is a classical ( 2 + 1)d equivalent hamiltonian that is usually written in the following manner  @xcite : @xmath14 .",
    "\\label{eq : hv}\\ ] ] the sum is taken over all divergenceless current configurations @xmath15 .",
    "the degrees of freedom are `` currents '' @xmath16 living on the links of the lattice .",
    "these link variables @xmath17 are integers .",
    "@xmath18 is the effective temperature , varying like @xmath19 in the quantum rotor model .",
    "we refer to ref .",
    "@xcite for a precise derivation of this model and for a description of its physical implications .",
    "another incentive for studying the critical behavior of the quantum rotor model comes from the close relation between this model and bosonic systems .",
    "bosonic systems with strong correlations are often described in terms of the ( disordered ) boson hubbard model : @xmath20 the correlations are here described by @xmath21 the on - site repulsion .",
    "the hopping strength is given by @xmath22 and @xmath9 the chemical potential varying uniformly in space between @xmath23 .",
    "@xmath24 is the number operator .",
    "if we set @xmath25 and integrate out amplitude fluctuations , it can be shown that @xmath26 is equivalent to the quantum rotor model  @xcite . for systems",
    "where amplitude fluctuations can be neglected at the critical point , such as granular superconductors and josephson junctions arrays , the quantum rotor model should therefore correctly describe the underlying quantum critical phenomena .    in the following we only discuss the quantum rotor model in @xmath27 dimensions corresponding to the @xmath28 dimensional link - current model .",
    "in general a non - zero @xmath29 will introduce separate dynamics for the time and space directions from which a dynamical critical exponent , @xmath30 can be defined .",
    "if the divergence of the spatial correlation length close to criticality is characterized by the exponent @xmath31 , @xmath30 is defined by requiring that the correlation length in the time direction diverges with the exponent @xmath32 . for what we will be discussing here @xmath33 and @xmath34 .",
    "the quantum rotor model has been extensively studied in the link - current representation using conventional monte carlo technique using local updates  @xcite .",
    "conventional monte carlo updates on the model  ( [ eq : hv ] ) consists of updating simultaneously four link variables as shown in the left part of fig .",
    "[ fig : moves ] ( a ) . to ensure ergodicity",
    ", one also has to use global moves , updating a whole line of link variables ( b in fig .",
    "[ fig : moves ] ) .",
    "the acceptance ratio for these global moves becomes exponentially small with the system size for large systems .",
    "many interesting quantities such as the stiffness , necessary for the determination of the critical point , and current - current correlations , necessary for the calculation of transport properties such as the resistivity and the compressibility , are _ only _ non - zero when these global moves are successful . an effective monte carlo sampling of these global moves is therefore imperative and it is easy to understand that the performance of the local algorithm is rather poor , especially near a phase transition : critical slowing down in the monte carlo simulations prohibits the study of large system sizes .    in order to be able to correctly describe the directed geometrical worm algorithm we have to review the geometrical worm - cluster algorithm introduced in reference  @xcite in some detail .",
    "this algorithm allows for non - local moves as the ones depicted on the right part of fig .",
    "[ fig : moves ] ( c ) .",
    "the performances of this algorithm have been reported in the previous work  @xcite .",
    "this algorithm is closely related to other cluster algorithms  @xcite and especially to  worm  algorithms  @xcite , from which we have borrowed the name .",
    "we stress that this algorithm is different from the  classical  worm algorithm presented in ref .",
    "@xcite in the sense that it is geometrical : link variables are not  flipped \" with a thermodynamic probability , instead , a new part of the worm is added by selecting a direction according to @xmath2 locally determined probabilities @xmath35 . since these probabilities only depend on the local environment we call them  _ geometrical _ \" probabilities . secondly ,",
    "even though the local probabilities @xmath35 do depend on the effective temperature , @xmath18 , we always have @xmath36 ( per definition ) and the only effect of the temperature is therefore to preferentially move the worm in one direction as opposed to another one . in some sense",
    "this is very similar to the n - fold way  @xcite of performing monte carlo simulations .",
    "we now describe the contents of the geometrical algorithm : we update the configurations by moving a `` worm '' through the lattice of links .",
    "the links through which the worm pass are updated _ during _ its construction .",
    "the configurations generated during the construction (  reptation \" ) of the worm are not valid ( the divergenceless of @xmath37 is not fulfilled ) but at the end of its path , when the worm forms a closed loop , this condition is verified and the final configuration is valid .",
    "we first define a convention for the orientation of the lattice . around each site with",
    "coordinates @xmath38 , there are six links on which the integer currents @xmath39 are defined with @xmath40 .",
    "the change in @xmath39 that the worm will perform during its course depends on whether @xmath2 is an incoming or outgoing link : here our convention is to consider positive @xmath41 as outgoing directions and @xmath42 as incoming ( see left lower part of fig .",
    "[ fig : moves ] ) .",
    "if the worm is leaving the site @xmath43 passing through an outgoing link @xmath44 , then @xmath45 if it is leaving through an incoming link @xmath46 , we have @xmath47    graphically , the convention means that the update in @xmath48 is @xmath49 ( @xmath50 ) if the worm goes in the same ( opposite ) direction as the arrows denoted in the left lower part of figure [ fig : moves ] .",
    "the construction ( `` reptation '' ) of the worm can be described the following way : first , we start the worm at a random site @xmath51 of the lattice ( black dot in figure [ fig : moves ] ) . from this site",
    ", the worm has the possibility to go to one of its six neighboring sites . to choose which direction to take",
    ", a weight @xmath52 is calculated for the six directions @xmath53 . for @xmath52",
    ", we use a metropolis - like weight : @xmath54 where @xmath55 is the local energy carried by the link @xmath2 and @xmath56 is the local energy on the link @xmath2 _ if the worm passes through this link_. the plus or minus sign depends on the incoming or outcoming nature of the link ( see above ) . please note that there are other possible choices for @xmath57  @xcite .",
    "once the @xmath57 s are calculated , one computes the probabilities @xmath3 by normalizing the weights @xmath57 : @xmath58 where @xmath59 is the normalization . a random number uniformly distributed in @xmath60 $ ]",
    "is generated and a direction @xmath2 chosen according to equation  ( [ eq : prob ] ) . once a direction is chosen , the corresponding link variable @xmath61 is updated by @xmath62 and the worm moved to the next lattice site in this direction .",
    "from there , we apply the same procedure to choose another site , modify the link variable , move the worm until the worm eventually reaches its starting point and forms a closed loop .",
    "this is then the end of this non - local move .    to satisfy the detailed balance condition ,",
    "this worm move must either be accepted or rejected . to check this , one has to store the initial and final normalizations @xmath63 and @xmath64 ( calculated as in eq .  [ eq : prob ] ) of the weights at the site @xmath65 .",
    "@xmath63 is the initial normalization _ before _ the worm is inserted and @xmath66 the final normalization _ after _ the worm reaches the initial point .",
    "the worm move is then accepted with probability @xmath67 .",
    "if the move is rejected , we have to cancel all changes of the link - currents made during the construction of the worm . during a typical simulation",
    "the rejection probability is usually very small .",
    "as already mentioned , the link configurations generated during the worm move do not satisfy the divergenceless constraint , but it is easy to see that the final configuration does .",
    "it is important to note that the worm may pass many times though the same link and that at each step , it can bounce back ( back - track ) to the previous lattice site in its path .    a proof of detailed balance for this algorithm is obtained by considering the moves of the worm and of an anti - worm , going exactly in the opposite direction  @xcite .",
    "this worm algorithm satisfies ergodicity since the worm can make local loops and line moves as in the local algorithm , which is ergodic .",
    "all in all , the geometrical un - directed worm algorithm can be summarized using the following pseudo - algorithm :    1 .",
    "choose a random initial site @xmath65 in the space - time lattice .",
    "2 .   for each of the directions @xmath68 , calculate the weights @xmath69 with @xmath70 @xmath71 @xmath72[uloop ] 3 .   calculate the normalization @xmath73 and the associated probabilities @xmath74 4 .   according to the probabilities , @xmath75 ,",
    "choose a direction @xmath2 .",
    "update the @xmath76 for the direction chosen and move the worm to the new lattice site @xmath77 .",
    "if @xmath78 goto [ uloop ] .",
    ".   calculate the normalizations @xmath79 and @xmath80 of the initial site , @xmath81 , with and without the worm present .",
    "erase the worm with probability @xmath82 .",
    "the above algorithm for geometrical worms is not optimal since the worm quite often will choose to erase itself by returning to the previous site .",
    "while it is in general not possible to always set this back - tracking ( or bounce ) probability to zero it is quite straightforward to choose the probabilities @xmath75 such that the bounce or back - tracking probability will be eliminated in almost all cases and in general will be as small as possible .",
    "the procedure for doing this amounts to solving a simple linear programming optimizing problem .",
    "if we consider models with disorder this has to be done at each site , but the correctly optimized ( biased ) probabilities @xmath75 can still be tabulated at the start of the calculation .    in order to see how we can minimize the back - tracking probability",
    "let us define the @xmath83 matrix @xmath84 of probabilities where the element @xmath85 of the matrix @xmath84 is given by the conditional probability @xmath86 for going in the direction @xmath87 at the site @xmath88 if the worm is coming from the direction @xmath89 .",
    "the back - tracking probabilities at the site @xmath88 now correspond to the _ diagonal _ elements of the matrix @xmath84 . for the algorithm described in the previous section @xmath86",
    "was simply chosen as @xmath90 independent of @xmath89 .",
    "thus all the columns of @xmath84 were the same and @xmath84 had in general rather large diagonal elements .",
    "however , as we shall see below , the matrix @xmath84 only needs to satisfy the following two conditions in order to define a working geometrical worm algorithm .",
    "these conditions are : @xmath91 these conditions are not very restrictive and will in most cases allow us to define a matrix @xmath84 with all the diagonal elements ( back - tracking probabilities ) equal to zero .",
    "the conventional geometrical worm algorithm , discussed in the previous section , corresponds to @xmath92 .",
    "if we define a function @xmath93 as the sum of the diagonal elements of @xmath84 , @xmath94 , we can reformulate the search for a matrix @xmath84 with minimal diagonal elements as a standard linear programming problem .",
    "writing @xmath95 we should minimize @xmath93 subject to the constraints @xmath96 .",
    "the minimum can be found using standard techniques of linear programming  @xcite and corresponds in almost all cases to @xmath97 .",
    "the matrix @xmath84 depends on the value of all the 6 link - currents @xmath76 . during the construction of the worm",
    "only sites where @xmath98 , @xmath99 occur . since in general @xmath100 will almost never exceed a certain value @xmath101 it is easy to construct a lookup table for the matrices @xmath84 at the beginning of the simulation and only calculate @xmath102 during the simulation if for some @xmath2 @xmath103 .",
    "this idea of minimizing the bounce processes is also at the heart of quantum monte carlo directed loop methods  @xcite .",
    "the previous restrictions on the matrix @xmath104 and the way to solve them numerically are indeed very general , and constitute a simple framework for how one can construct a directed algorithm out of a  standard  non - local loop , worm or cluster algorithm .",
    "we can now define a _ directed _ geometrical worm algorithm with minimal back - tracking probability . using a pseudo - code notation",
    "we have :    1 .   choose a random initial site @xmath65 in the space - time lattice .",
    "if * @xmath105 * then : * for each of the directions @xmath68 , calculate the weights @xmath69 with @xmath106 @xmath107 .",
    "calculate the normalization @xmath73 and the associated probabilities @xmath108 * else : * according to the incoming direction , @xmath89 , set @xmath75 equal to the @xmath109th column of @xmath84 .",
    "[ loop ] 3 .   according to the probabilities , @xmath75 ,",
    "choose a direction @xmath2 .",
    "4 .   update @xmath76 for the direction chosen and move the worm to the new lattice site @xmath77 .",
    "5 .   if @xmath78 goto [ loop ] .",
    "calculate the normalizations @xmath79 , of the site @xmath81 with the worm present , and @xmath80 , without the worm .",
    "erase the worm with probability @xmath110/@xmath79 ) .",
    "now we turn to the proof of detailed balance for the directed algorithm .",
    "let us consider the case where the worm , @xmath111 , visits the sites @xmath112 where @xmath81 is the initial site .",
    "the worm then goes through the corresponding link variables @xmath113 , with @xmath114 connecting @xmath115 and @xmath77 .",
    "note that @xmath116 is the last site visited before the worm reaches @xmath81 .",
    "hence , @xmath116 and @xmath81 are connected by the link @xmath117 . the total probability for constructing the worm @xmath111",
    "is then given by : @xmath118 the index @xmath2 denotes the direction needed to go from @xmath81 to @xmath119 , @xmath120 is the probability for choosing site @xmath81 as the starting point and @xmath121 is the probability for erasing the worm @xmath111 after construction .",
    "@xmath122 is the conditional probability for continuing to site @xmath77 , at site @xmath88 , given that the worm is coming from @xmath123 .",
    "if the worm @xmath111 has been accepted we have to consider the probability for reversing the move .",
    "that is , we consider the probability for constructing an anti - worm @xmath124 annihilating the worm @xmath111 .",
    "we have : @xmath125 here , the index @xmath2 denotes the direction needed to go from @xmath81 to @xmath126 , note that , in this case the sites are visited in the opposite order , @xmath127 . from eq .",
    "( [ eq : balance ] ) we have that @xmath128 .",
    "since , @xmath129 and since @xmath130 , we find : @xmath131 where @xmath132 is the total energy difference between a configuration with and without the worm @xmath111 present . with our definition of @xmath133",
    "we see that @xmath134 and it follows that : @xmath135 for a worm of length @xmath136 there are @xmath136 starting sites that will yield the same final configuration .",
    "the above proof shows that for each of the starting sites there exists an anti - worm , @xmath124 , such that @xmath137 .",
    "hence , if we by @xmath29 denote the configuration without the worm and @xmath31 the configuration with the worm and furthermore let @xmath138 denote the probability of building the worm @xmath111 starting from site @xmath88 , we see that : @xmath139 ergodicity is proved the same way as for the undirected algorithm as the worm can perform local loops and wind around the lattice in any direction , as in the conventional algorithm .",
    "prokofev and svistunov  @xcite have proposed a very elegant way of performing monte carlo simulations on the high temperature expansion of classical statistical mechanical models using worm algorithms . in order to distinguish between the algorithms we call this algorithm the classical worm algorithm . in a recent study  @xcite",
    "these authors have performed simulations on the quantum rotor model in the link - current representation , eq .",
    "( [ eq : hv ] ) . due to the divergenceless constraint ,",
    "the classical worm algorithm is in this case quite close to the geometrical worm algorithm proposed previously in ref .   and",
    "not directly related to the high temperature expansion of this model .",
    "recasting their algorithm in the same framework used above we outline our understanding of their algorithm below for comparison :    1 .   choose a random initial site @xmath65 in the space - time lattice .",
    "2 .   for each of the directions @xmath68 , calculate the probabilities @xmath69 with @xmath106 @xmath107.[iter5 ] 3 .   with uniform probability",
    "choose a direction @xmath2 .",
    "[ loop5 ] 4 .   with probability @xmath69 accept to go in the direction @xmath2 , and with probability @xmath140 go to [ loop5 ] .",
    "update @xmath76 for the direction chosen and move the worm to the new lattice site @xmath77",
    ". 6 .   if @xmath78 go to [ iter5 ] . 7 .",
    "if @xmath141 go to 1 with probability @xmath142 and to [ loop5 ] with probability @xmath143 ( @xmath144 and usually @xmath145 ) .",
    "we use @xmath145 in the following .",
    "one advantage of this algorithm is its simplicity and the fact that a constructed worm is always accepted , on the other hand this algorithm is not directed and steps 3 - 4 above are quite wasteful since in many cases the worm is not moved .",
    "this is avoided in the geometrical worm algorithm at the price of occasionally having to reject a complete worm .",
    "the geometrical worm algorithm , as described in the preceding sections , should be straightforwardly applicable to the high temperature expansion as it was done in ref .",
    "@xcite using the classical worm algorithm .",
    "we expect that this would enhance the efficiency of the monte carlo sampling .",
    "here we present results on autocorrelation times obtained with both directed and undirected algorithms . for the sake of brevity , we restrict ourselves to the case @xmath33 , where the critical point is known with high precision , and where results on autocorrelations for the undirected worm algorithm have already been published  @xcite .",
    "all the results presented in this section correspond to runs on cubic lattices of @xmath146-@xmath147 monte carlo worms for a value of @xmath148 , extremely close to the critical point ( estimated as @xmath149 in ref .",
    "@xcite ) . in principle",
    ", simulations should be performed on lattices of size @xmath150 , but here since the dynamical exponent @xmath34 at @xmath33 , we can set @xmath151 .",
    "we focus here on calculations of the energy @xmath152 and the stiffness @xmath153 defined as @xmath154 where @xmath155 is the linear size of the lattice .    for the simulations with directed worms , we restrict ourselves to @xmath156 for the tabulation of probabilities .",
    "probabilities involving higher values of @xmath157 were calculated during the construction of the worm .",
    "such configurations were found to be exceedingly rare .    for the case at hand , only @xmath158 of the  scattering  matrices @xmath84 contained diagonal elements corresponding to a non - zero back - tracking probability .",
    "moreover , these back - tracking ( bounce ) processes were found to occur for very unlikely configurations .",
    "the acceptance rate , @xmath159 , is very high for both algorithms at @xmath160 ( around @xmath161 for undirected worms and @xmath162 for directed worms for all lattice sizes ) . for the classical worms ,",
    "all worms are accepted due to the nature of the algorithm .",
    "however , we found that many proposed attempts at changing one link were refused ( more than @xmath163 in our simulations ) .     at @xmath148 for directed ( circle ) ,",
    "undirected ( dotted line ) and classical ( solid line ) algorithms.,width=302 ]    in figure  [ fig : auto.function ] , we present the autocorrelation function of stiffness for a lattice size @xmath164 , for directed , undirected and classical worms .",
    "the autocorrelation function @xmath165 of an observable @xmath166 is defined in the standard way : @xmath167 where @xmath168 denotes statistical average and @xmath8 is the mc time , measured in the number of constructed worms ( accepted or not ) .",
    "we clearly see in figure  [ fig : auto.function ] that the directed worm algorithm is more efficient at decorrelating the data than undirected and classical worms , the latter having the longest autocorrelation times .",
    "now we define the autocorrelation time @xmath169 of an observable @xmath170 . in ref .",
    "@xcite , @xmath169 was defined as the greater time of a double - exponential fit of the autocorrelation function .",
    "here we use a much simpler definition , independent of any fitting procedure : @xmath169 is defined as the time where the normalized autocorrelation function decrease below a threshold @xmath171 .",
    "we can use different thresholds for different observables @xmath172 . since for small lattices and especially for directed worms , autocorrelation times are small , and since @xmath165 is known only for discrete values of @xmath8 , @xmath169 is determined by a simple linear interpolation between the two times surrounding the threshold .",
    "it is important to note that the values of the autocorrelation time depends on the threshold @xmath171 , but the dependence on lattice size of these autocorrelation times should not change as long as @xmath171 is small enough .",
    "error bars on @xmath171 have been estimated by slightly changing the threshold , by an amount in between @xmath173 and @xmath174 in this work .    , for directed ,",
    "undirected and classical algorithms versus lattice size l. shown are the raw auto - correlations times , _ before _ rescaling to take into account the computational effort expended.,width=302 ]     for the three algorithms versus lattice size l. shown are the raw auto - correlations times , _ before _ rescaling to take into account the corresponding computational effort expended.,width=302 ]    using the above mentioned determination of autocorrelation times , we extract autocorrelation times of the stiffness @xmath175 and the energy @xmath176 for directed , undirected and classical worms . the threshold was set the same for all algorithms when comparing the same quantity : we used through this work @xmath177 for the stiffness and @xmath178 for the energy .",
    "scaling of these times with the lattice size is shown in figure  [ fig : auto.time.stiff ] for stiffness and in figure  [ fig : auto.time.en ] for energy .",
    "it can be seen that whereas autocorrelation times grow approximatively linearly with lattice size for all algorithms , the slope is significantly smaller for the directed worm algorithm .",
    "it is clear from these results that the directed algorithm significantly reduces the autocorrelation times .",
    "however , the average size of the directed worms could be larger , and hence on average consume more computational time . for all algorithms the computational effort is linearly proportional to the length of the worm . to make an honest comparison",
    ", we therefore have to multiply the autocorrelation times by the number of attempted changes per link , which we define as @xmath179 , where @xmath180 is the mean worm size ( the mean number of links the worm has attempted to visit ) , @xmath155 the lattice size preceded by an irrelevant factor indicating that there are @xmath181 links per site . for the classical worms , the mean worm size @xmath182 is defined as the _ total _ number of proposed attempts ( step 4 in the pseudo - code presentation in section  [ sec : classical ] ) . in order to make an un - biased comparison of the three algorithms it is here necessary to include the updates refused during the construction of the classical worms in the definition of @xmath180 .",
    "divided by @xmath183 versus lattice size @xmath155 for directed , undirected and classical worms.,width=302 ]    as mentioned , the computational effort ( the cpu time ) is linear in @xmath182 for all algorithms .",
    "an equivalent rescaling was used in ref .",
    "@xcite in order to make a fair comparison with the local algorithm . in fig .",
    "[ fig : worm.size ] is shown the mean worm size @xmath180 ( divided by @xmath183 ) for the three algorithms versus lattice size , corresponding to the average fraction of the total number of links occupied by the worm . in both cases , we see that this fraction decreases with @xmath155 .",
    "we also note that the classical worms are longer than in the other proposed algorithms , which will result in larger autocorrelation times . directed and undirected worms are almost of the same size , with very slightly larger directed worms . the corresponding effect on the value of rescaled effort ( presented in the next paragraph )",
    "will be small when comparing autocorrelation times for those algorithms , however we wish to keep it present for a more fair analysis .     and",
    "energy @xmath176 for the three presented algorithms versus lattice size l. these auto - correlations times",
    "are _ rescaled _ auto - correlation times where the computational effort is taken into account.,width=302 ]    having discussed the behavior of @xmath184 we now take into account the computational effort used to construct the worm by rescaling the auto - correlation times by @xmath179 .",
    "we show in figure  [ fig : auto.time2 ] the rescaled auto - correlation times for the three algorithms .",
    "we find that the auto - correlation times per link stay reasonably small for all algorithms , but the directed algorithm clearly gives better results , with auto - correlation times smaller by a factor around @xmath185 ( @xmath186 ) for the stiffness ( energy ) with respect to the undirected algorithm , and a factor around @xmath187 ( @xmath185 ) with respect to the classical worm for the largest sizes .",
    "the fact that both algorithms are more efficient at decorrelating the stiffness than the energy seems to indicate that the worms couple more effectively to `` winding modes '' , from which the stiffness is uniquely determined , than to simple local modes which determine the energy . with the same argument",
    ", we can see that directed worms are more efficient at updating winding modes than undirected or classical worms .",
    "the actual distribution of the size of the worms generated , @xmath188 is also of interest . in fig .",
    "[ fig : wsize ] we show results for the probability density , @xmath188 for generating a worm occupying a fraction of @xmath189 of the lattice , as a function of @xmath189 for the directed and un - directed algorithms .",
    "the classical worm algorithm has a distribution identical to the one shown for the un - directed algorithm .",
    "clearly , the directed worms have a somewhat broader distribution but for both algorithms the distribution follows a power - law form @xmath190 with @xmath191 .",
    "the power - law behavior is to be expected since the simulations were performed at the critical point .",
    "away from the critical point we have verified that the initial power - law form crosses over to an exponential behavior at large arguments .",
    "to summarize , we find that in all cases , rescaled auto - correlation times stay almost constant with the lattice size , but could also be fitted with a very small power - law or logarithm , showing an almost complete elimination of critical slowing down . all in all , the main result of this section is that directed worms produce less correlated data ( smaller autocorrelation times ) , even if the scaling is good for all the three ( directed , undirected and classical ) algorithms .",
    "we also note that the geometrical worm algorithms perform better than the classical worm algorithm .",
    "the fact that both directed and undirected algorithms have almost the same scaling of the rescaled autocorrelation time with @xmath155 , seems also to be observed for the directed loop quantum monte carlo cluster algorithms  @xcite .     for generating a worm occupying a fraction of @xmath189 of the lattice , as a function of @xmath189 for the directed and un - directed algorithms . shown are results for a lattice of linear size @xmath164 at @xmath192 .",
    "the solid lines indicate power - law fits to the data.,width=302 ]",
    "for the quantum rotor model , the correlation functions of interest have the following form  @xcite : @xmath193 where the @xmath194 s are operators for the phase of the bosons , and @xmath195 .",
    "due to translational invariance , @xmath196 .",
    "physically this corresponds to creating a particle at @xmath43 and destroying it at @xmath197 .",
    "when this correlation function is mapped onto the link - current representation the creation and destruction of the particle is interpreted as a particle current going from @xmath43 to @xmath197 . as is evident from the definition of the correlation function in eq .",
    "( [ eq : thetacor ] ) the value of the correlation function can not depend on the specific path taken from @xmath43 to @xmath197 as long as we take into account the fact that going in the @xmath41 increases the local current , whereas going in the @xmath42 direction decreases the local current . in the link current representation",
    "this correlation function can be written  @xcite in the following way : @xmath198 where `` path '' is any path on the space - lattice connecting two points a distance @xmath43 apart and @xmath199 is the direction needed to go from @xmath200 to @xmath201 , @xmath202 .",
    "when going in the direction @xmath203 we propagate a _ particle _ and the correlation function corresponds to _ incrementing _ the corresponding link - variable by one .",
    "when going in the direction @xmath204 we propagate a _ hole _ in the @xmath205 direction and the correlation function corresponds to _ decrementing _ the corresponding link - variable by one .",
    "this is indicated in the expression eq .",
    "( [ eq : cr ] ) by @xmath206 .",
    "furthermore , we only get a contribution from @xmath207 whenever we go in the @xmath208direction and we take this into account by @xmath209 . if we define @xmath210 with analogous definitions for the other directions we see that by incrementing and decrementing the link - current variables in the above manor @xmath211 at all the sites between @xmath200 and @xmath201 .",
    "the current is divergenceless at all the intermediary sites .",
    "the sites @xmath200 and @xmath201 will have non - zero divergence with @xmath212 corresponding to a site where a particle is created ( or a hole destroyed ) .",
    "a site with @xmath213 is a site where a hole is created ( or a particle destroyed ) . in fig .",
    "[ fig : corr ] we show two possible paths @xmath214 and @xmath215 for the evaluation of the correlation function @xmath4 .     and @xmath215 , for the evaluation of @xmath4 .",
    "when the path is going in the @xmath41 direction a _ particle _ is propagated in the forward direction corresponding to an _ increment _ in the current .",
    "when the path is going in @xmath42 direction we propagate a _ hole _ in the forward direction corresponding to a _",
    "decrement _ in the current .",
    "the solid circles correspond to sites where a _",
    "particle is created or destroyed . , width=302 ]    as usual , @xmath216 but @xmath4 is in general not equal to @xmath217 .",
    "previous work  @xcite have attempted to calculate the correlation function by evaluating the thermal expectation value in eq .",
    "( [ eq : cr ] ) along a straight path from @xmath43 to @xmath197 .",
    "although formally correct , this method fails for large arguments of the correlation function due to the fact that for a given configuration of the link - variables roughly only _",
    "one _ specific path between @xmath43 and @xmath197 will yield a contribution of order 1 .",
    "the geometrical worm algorithm allows for a much more efficient way of evaluating the correlation functions .",
    "in essence , before the worm returns to the starting site , the path of the worm corresponds precisely to the creation of a particle at site @xmath81 and the destruction at the current site @xmath88 with a current going between the two sites .",
    "this is precisely the greens function that we want to calculate .",
    "more precisely we extend eq .",
    "( [ eq : cr ] ) to include a summation over all possible paths : @xmath218 here @xmath219 is a path for the correlation function and @xmath220 is the number of paths included in the sum . since the geometrical worm algorithm generates paths between @xmath43 and @xmath221 with the correct exponential factor ( except for a multiplicative constant ) it is now easy to calculate the correlation functions .",
    "suppose that we , by using either the directed or undirected worm algorithm , have reached the equilibrium configuration @xmath29 .",
    "the probability for , during the construction of a worm starting at site @xmath65 , creating a current @xmath222 that reaches @xmath223 is given by : @xmath224 for the undirected algorithm .",
    "for the directed algorithm we have : @xmath225",
    "if we call the resulting state @xmath226 we can calculate the probability for , starting from @xmath226 , creating an anti - current , @xmath227 , going from @xmath228 to @xmath81 .",
    "we find for the undirected algorithm : @xmath229 and for the directed algorithm : @xmath230 in both cases we see that @xmath231 hence , we see that for both algorithms the intermediate states generated during the construction of the worm follows precisely the distribution needed apart from the factor @xmath232 .",
    "it follows that whenever a worm reaches a point a distance @xmath43 away from the initial point it contributes a factor of @xmath233 to the correlation function of argument @xmath43 .",
    "note that it follows from the above proof that _ all _ worms , even the ones that are finally rejected , have to be included in the calculation of the greens functions . per definition @xmath234 .",
    "the above procedure is straight forward to implement .",
    "suppose we want to calculate the greens functions for a @xmath28 dimensional system with @xmath27 .",
    "since the two space directions are equivalent by symmetry it is only necessary to calculate @xmath235 .",
    "this is easily done by keeping track of the position of the worm during construction .",
    "if the relative position of the worm with respect to its starting point @xmath81 , is denoted by @xmath236 , when the worm has reached site @xmath228 , we add @xmath233 to @xmath237 .",
    "this can be done with very little computational effort and since an enormous amount of worms are generated during the simulation extremely good statistics can be obtained for @xmath237 by averaging over the worms ( which can not be achieved with the local algorithm ) .",
    "as mentioned , in order not to bias the calculation , even worms that are eventually rejected should be included for a correct calculation of the greens functions .",
    "for a system of size @xmath238 at @xmath239 , @xmath33 , as a function of @xmath240 .",
    "the solid line indicates a power - law fit of the form @xmath241,width=302 ]    in figure  [ fig : cx ] we show results for the greens function as a function of @xmath240 for a system of size @xmath238 . for this simulation",
    "the directed algorithm was used with a total number of worms equal to @xmath242 .",
    "it is easy to obtain extremely small error bars on the greens functions even for very large system sizes . for the results shown in fig  [ fig : cx ]",
    "@xmath33 and by symmetry @xmath243 is identical to @xmath244 . from scaling relations  @xcite @xmath245",
    "is expected to decay as @xmath246 where @xmath30 is the dynamical critical exponent . with @xmath33 , @xmath34",
    "we find @xmath247 .",
    "fitting to this form we find @xmath248 .",
    "the obtained critical exponents are in excellent agreement with previous work  @xcite and more recent high - precision estimates for the critical exponents of the 3d @xmath12 model  @xcite .",
    "it would be of much interest to calculate @xmath4 for @xmath249 using this method .",
    "such calculations are currently in progress  @xcite .",
    "we have proposed a directed worm algorithm for the quantum rotor model .",
    "this algorithm is an improvement of the  undirected  algorithm presented in  @xcite .",
    "it has been shown that by adjusting the degrees of freedom left in the detailed balance condition , one can construct a more efficient algorithm by minimizing the back - tracking ( bounce ) probability for the worm to erase itself .",
    "the minimal probabilities can be found by solving a linear programming problem subject to a few well - defined constraints .",
    "a proof of detailed balance for the directed case has also been presented .",
    "the directed and un - directed algorithms are identical except for the fact that appropriately defined local probabilities @xmath3 for moving the worm through the lattice are chosen in an optimal manner for the directed algorithm .",
    "hence , only a very limited amount of additional programming has to be done to implement the directed algorithm .",
    "these central ideas for this directed algorithm can be straightforwardly applied to directed qmc loop algorithms  @xcite and one can avoid an analytical calculation for each new model where one wants to implement a directed algorithm .",
    "more generally speaking , we believe that the framework presented here could be useful for constructing new algorithms for other models , for example classical spin models  @xcite .    we have shown the superiority of the directed algorithm as compared to the undirected one and to the approach ( `` classical worms '' ) proposed in  @xcite by calculating autocorrelation times of different observables near a critical point . whereas the computational gain is not as drastic as when passing from a local update algorithm to a worm algorithm  @xcite",
    ", we showed that one gains a factor ranging from @xmath250 to @xmath187 ( depending on the quantity and on the comparison ) for the simulations considered here .",
    "we did not try to estimate autocorrelation exponent @xmath30 for the algorithms , because in all cases , it is small ( as can be seen in figure  [ fig : auto.time2 ] ) and it would be hard to determine with high precision .",
    "looking at the data , it is likely that values of @xmath30 for all algorithms are the same or quite close .",
    "a logarithmic dependence of @xmath251 on @xmath155 , indicating @xmath252 , can not also be excluded .    in this paper , we have also derived an efficient way of measuring correlation functions during the worm constructions .",
    "this feature is similar to other worm algorithms  @xcite , but here we show , including analytical arguments , that it also works for directed worms .",
    "the situation for directed qmc loop algorithms  @xcite is less certain , even if some results were recently presented in  ref.@xcite .",
    "the directed worm algorithm could be specially useful to study the transition for a non - commensurate value of the chemical potential in the pure quantum rotor model or for the disordered case , where very strong finite size effects have been identified  @xcite .",
    "we thank m.  troyer for useful discussions and j.  asikainen for a careful reading of the manuscript .",
    "this work is supported by the nserc of canada , the sharcnet computational initiative and by the swiss national science foundation .",
    "t.  banks , r.  myerson , j.  kogut , nucl .",
    "* b129 * , 493 , ( 1977 ) ; p.  r.  thomas , m.  stone , nucl .",
    "b114 , 513 ( 1978 ) ; m.  e.  peskin , ann .",
    "phys .   * 113 * , 122 ( 1978 ) ; r.  savit , rev .",
    "phys . * 52 * , 453 ( 1980 ) .",
    "o. f. syljusen and a. w. sandvik , phys .",
    "e * 66 * , 046701 ( 2002 ) ; k. harada and n. kawashima , _ ibid _ * 66 * 056705 ( 2002 ) ; o. f. syljusen , phys . rev .",
    "e * 67 * , 046701 ( 2003 ) ; j. smakov , k. harada and n. kawashima , e - print cond - mat/0301416 ; f. alet , s. wessel and m. troyer , ( unpublished ) ."
  ],
  "abstract_text": [
    "<S> we discuss the implementation of a directed geometrical worm algorithm for the study of quantum link - current models . in this </S>",
    "<S> algorithm monte carlo updates are made through the biased reptation of a worm through the lattice . </S>",
    "<S> a directed algorithm is an algorithm where , during the construction of the worm , the probability for erasing the immediately preceding part of the worm , when adding a new part , is minimal . </S>",
    "<S> we introduce a simple numerical procedure for minimizing this probability . </S>",
    "<S> the procedure only depends on appropriately defined local probabilities and should be generally applicable . furthermore we show how correlation functions , @xmath0 can be straightforwardly obtained from the probability of a worm to reach a site @xmath1 away from its starting point independent of whether or not a directed version of the algorithm is used </S>",
    "<S> . detailed analytical proofs of the validity of the monte carlo algorithms are presented for both the directed and un - directed geometrical worm algorithms . </S>",
    "<S> results for auto - correlation times and green functions are presented for the quantum rotor model . </S>"
  ]
}
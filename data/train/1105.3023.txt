{
  "article_text": [
    "the growing popularity of appliances and consumer devices embedding a wifi interface has led to the proliferation of access points ( aps ) in public areas and private homes alike . in the latter case",
    ", however , the deployment usually occurs in an uncoordinated fashion , leading to overlapping coverage and spectrum conflicts .",
    "additionally , aps in private homes are usually underloaded and are left on around the clock , both a power waste and an unnecessary increase in electromagnetic pollution .",
    "federated homes , i.e. , neighborhoods where network resources are shared and networked devices belonging to different users cooperate , have the potential to solve the above problems by incorporating aps in smart gateways that handle all inward and outward network traffic .",
    "gateways are advanced home devices capable of offering wireless internet access , storage , and multimedia services including audio and video real - time streaming .    in order to optimize the usage of the wireless medium , neighboring , federated gateways with overlapping coverages",
    "should identify and optimally relocate the wireless stations ( wss ) among themselves , and , possibly , turn themselves off if a subset of gateways can adequately support the current load requested by the wss .",
    "also , an underloaded ( or temporarily switched off ) gateway should be called upon for help by gateways that experience a congested wireless medium , and associate some of their wss .",
    "such operations require that gateways have self - load assessment capabilities and run inter - gateway procedures for ws relocation .",
    "load estimation techniques can be classified as passive or active .",
    "the latter ones require to inject probing packets into the network and estimate the traffic load based on the delay experienced by such packets .",
    "probing packets , however , yield additional overhead , and could have a negative impact on data flows , especially in case of real - time traffic @xcite .",
    "we will therefore focus on passive techniques , which aim at estimating the traffic load by observing some meaningful metrics .",
    "however , existing passive estimation techniques are not mature to fully support multi - rate wlans with variable traffic patterns .",
    "metrics based either on the number of associated wss  @xcite , the channel busy ( or , equivalently , idle ) time  @xcite , or the aggregated bss throughput  @xcite , are affected by the payload size and the data rate of the transmitted packets .",
    "it follows that such metrics may indicate the availability of bandwidth when the saturation throughput has been already reached , or , conversely , they may detect saturation in presence of available bandwidth .",
    "other techniques , e.g. ,  @xcite , either apply only to self estimation of the downlink bandwidth availability or require changes in the wss .    as for solutions enabling gateways to switch themselves off ,",
    "centralized schemes have been proposed in @xcite .",
    "these solutions , however , are suitable for coverages resulting from controlled placement of the gateways , as is the case of big enterprises and college campuses , but they are hardly fitting for a residential scenario where each gateway is independently placed within a household . other solutions to overcome capacity limitations of single aps have suggested the use of tdma techniques to let wss access multiple aps at a time  @xcite , requiring , however , modification in the wss .    in this paper , we address the above issues by defining a solution that applies to a multirate network and to generic traffic scenarios .",
    "in particular , we introduce : ( i ) a metric and a procedure that allow the gateways a self - evaluation of their load status ; ( ii ) a metric and a procedure that let a gateway gauge the impact of the association of one or more wss relocated from a neighboring gateway ; ( iii ) a distributed protocol for inter - gateway communication and ws relocation that refrains from non - standard operations at the wss , as well as non - standard signalling between gateway and wss .",
    "* system scenario .",
    "* we consider @xmath0 residential units ( e.g. , houses or apartments ) , each of them equipped with a gateway ( @xmath1 ) that offers wireless internet access through the 802.11 technology .",
    "adjacent gateways use different channel frequencies and each gateway is equipped with two radio interfaces : one for communicating with the wss in the bss controlled by the gateway , the other for listening to different frequency channels whenever needed .",
    "the gateways are federated , i.e. , they can communicate and coordinate with each other using an out - of - band channel , which is their backhaul internet connection . note that we do not assume the presence of any central network controller that manages wss association to the gateways .",
    "the wss that operate within the generic bss can be sources or destinations of elastic or inelastic traffic flows , i.e , flows that use either tcp or udp at the transport layer . at the mac layer , the gateway and the wss may transmit frames with different payload size and their data rate may vary according to the experienced channel propagation conditions .    depending on the traffic load and on the number of associated wss within the bss they control",
    ", gateways are said to be in light , heavy or regular status .",
    "the light status corresponds to an underloaded bss : if its wss could be relocated to other bsss , the gateway could switch itself off and save energy .",
    "the heavy status , instead , characterizes an overloaded bss , where some wss should associate to other bsss so as to let the users receive the desired throughput . a gateway in regular status",
    "neither can switch itself off nor does it need to give some of its wss away , while it might accommodate relocated wss within its bss . in order to let the gateways assess their status , we assume they carry out traffic measurements as described below",
    ".    * assumptions .",
    "* a gateway can access the `` protocol type '' field in the ip packets , and collect statistics on elastic and inelastic traffic within its bss .",
    "the gateway carries out such measurements over time intervals , named _",
    "cycles_. a cycle is defined as the minimum between a time @xmath2 and the period needed to let ( 1 ) each active ws successfully send at least one data frame carrying inelastic traffic , and ( 2 ) the gateway successfully transmit at least one data frame carrying inelastic traffic to every ws for which it has data to send .",
    "the gateway considers a ws to be active in cycle @xmath3 if it successfully receives from the ws at least one data frame within the time @xmath2 since the current cycle starting time .",
    "likewise , the gateway is active in cycle @xmath3 if it has sent at least one frame within the cycle . in the following ,",
    "we denote by @xmath4 the duration of cycle @xmath3 , by @xmath5 the set of nodes ( wss and gateway ) that were active in the cycle , and by @xmath6 the cardinality of @xmath5 .",
    "then , like the mechanism we described in @xcite , at each cycle @xmath3 and for each active ws @xmath7 , the gateway computes a running average of the uplink throughput for elastic and inelastic traffic of @xmath7 , denoted by @xmath8 and @xmath9 , respectively .",
    "likewise , the gateway computes a running average of its own downlink throughput for both elastic and inelastic traffic , denoted by @xmath10 and @xmath11 , respectively .",
    "in addition , for each frame successfully transmitted by a ws or by the gateway itself , the gateway observes the payload size for elastic / inelastic traffic and the used data rates , and it computes the corresponding running averages : @xmath12 , @xmath13 , and @xmath14 ( @xmath15 )",
    ". we will refer to all the above measurements the gateway performs for a ws as the ws s traffic profile .",
    "furthermore , the gateway computes the running average of the data rate , @xmath16 , and of the payload size , @xmath17 , over all data frames , carrying either elastic or inelastic traffic , that it successfully sends or receives .",
    "we then introduce a fundamental quantity for our bandwidth monitoring algorithm .",
    "let us consider cycle @xmath3 .",
    "at the end of the cycle , the gateway computes the ( aggregate ) saturation throughput @xmath18 , as defined in  @xcite , which extends the original bianchi s model  @xcite in presence of errors due to channel propagation conditions : @xmath19^{n(j)-1 } p(j ) ( 1-p_e(j))}{e[t(j)]}. \\label{eq : s}\\ ] ] in ( [ eq : s ] ) , @xmath20 is the probability that a node ( either a ws or the gateway ) accesses the medium at a generic time slot in cycle @xmath3 , @xmath21 is the filtered average packet error rate , and @xmath22 $ ] is the average duration of a time interval in which an event occurs ( namely , an empty slot , a successful transmission , a transmission failed due to channel errors , or a collision ) .",
    "the expressions of @xmath20 and @xmath22 $ ] can be derived following  @xcite and are reported in the appendix for completeness , while @xmath21 can be estimated by the gateway based on the modulations used for the transmissions in the @xmath3-th cycle , their associated signal - to - noise ratio , and assuming independent bit errors on the channel . using ( [ eq : s ] )",
    ", the gateway computes the average per - node throughput under saturation conditions , as @xmath23 .",
    "note that @xmath24 represents the saturation throughput for a node with average behavior , i.e. , a node using a payload size @xmath17 and a data rate @xmath16 .",
    "here , we first present the algorithm that lets a gateway assess its load status . then , we describe how a gateway can reliably evaluate the impact on its bss of associating additional stations that other gateways would like to relocate . finally , we present simulation results showing the effectiveness of our bandwidth monitoring approach .",
    "consider a generic gateway that at the end of the current cycle , say @xmath3 , wants to gauge the traffic load within the bss it controls .",
    "to do so , it follows alg .",
    "[ algo : ace_mon ] .",
    "@xmath5 , @xmath18 , @xmath24 , @xmath8 , @xmath9 gateway status @xmath25 @xmath26 @xmath27\\frac{r(j)}{r_k(j)}\\bigg\\}$ ] gateway in light status gateway in heavy status gateway in regular status    the idea at the basis of the algorithm is that , due to the per - packet fairness provided by the 802.11a / b / g distributed access scheme , any node @xmath15 , such that @xmath28 , can transmit all its uplink traffic , both elastic and inelastic ( line 3 ) , while the others reach @xmath24 and then share the remaining bandwidth , if any ( line 4 ) . as @xmath24 refers to the average node behavior ,",
    "we weigh the bandwidth in excess of @xmath24 used by node @xmath7 with @xmath29 , thus accounting for the actual node data rate ( line 4 ) .",
    "we also stress that , for each node , only inelastic traffic exceeding the saturation share is considered ; elastic traffic above saturation is instead neglected , since it can adapt to bandwidth availability . at the end of the procedure , we compare the bandwidth available for inelastic traffic normalized to the saturation throughput , @xmath30 , against two different thresholds , as follows .",
    "we consider the gateway to be in light status if @xmath31 and the number of wss associated to it is smaller than @xmath32 , and in heavy status if @xmath33 .",
    "the gateway is in regular status otherwise .",
    "next , we want a gateway to assess if it can associate one or more stations that other gateways are trying to relocate , without harming the existing wss .",
    "to do so , a gateway computes the bandwidth available for inelastic traffic within its bss , as if the relocated wss were actually associated ; we name such a quantity b - metric .",
    "again , we focus on inelastic traffic only . for simplicity , the b - metric computation will be outlined in the case where a single ws has to be relocated .",
    "the extension to the case of multiple wss is straightforward .",
    "let @xmath34 be the gateway that evaluates the bandwidth available for inelastic traffic within its bss , @xmath3 identifies the last cycle and @xmath35 is the ws that another gateway tries to relocate . through signaling exchange between gateways",
    ", @xmath34 may acquire the uplink throughput of @xmath35 for inelastic and elastic traffic , as well as the downlink throughput that @xmath35 would like to receive .",
    "if this is not possible , the gateway takes a conservative approach and assigns to the ws a traffic demand equal to the value of saturation throughput .",
    "also , @xmath34 updates the set @xmath5 by adding @xmath35 .    in order to evaluate the throughput",
    "that @xmath35 would achieve and its impact on the performance of inelastic flows involving other nodes , we have to estimate the throughput that each active node can obtain with respect to the value it has experienced in cycle @xmath3 . to do so",
    ", we adopt the procedure reported in alg .",
    "[ algo : ace ] .",
    "@xmath5 , @xmath18 , @xmath24 , @xmath16 , @xmath8 , @xmath9 , @xmath12 , @xmath13 , @xmath14 @xmath36 @xmath37 @xmath38 @xmath39 @xmath40 @xmath41 @xmath42 sort@xmath43 @xmath44 @xmath45 @xmath46 @xmath47 @xmath48 @xmath49 @xmath46 @xmath50 association of @xmath35 is possible association of @xmath35 is rejected    according to the proposed algorithm , the gateway first computes the remaining bandwidth @xmath51 as the difference between the saturation throughput @xmath18 and the sum of the shares consumed by the active nodes ( line 3 ) . again , due to the per - packet fairness provided by the access scheme , each node share is given by the minimum between @xmath24 and its total ( elastic and inelastic ) throughput , as measured by the gateway in cycle @xmath3 .",
    "then , lines 45 report the amount of inelastic and elastic node throughput that can be accommodated within the @xmath24 share .",
    "we identify the set of nodes @xmath41 whose total ( elastic and inelastic ) throughput exceeds @xmath24 ( line 7 ) .",
    "considering one of these nodes at a time , we assume that it will get a fraction of the remaining bandwidth so as to transmit one additional packet of average size . while doing this , the node will give priority to inelastic traffic .",
    "this occurs while ( i ) @xmath52 and ( ii ) there is at least one node for which the throughput experienced in cycle @xmath3 has not been reached yet ( lines 924 ) .",
    "as @xmath24 has been computed considering the average node behavior , we weigh the bandwidth consumed by node @xmath7 to transmit a packet by @xmath29 , thus accounting for the actual data rate used by the node ( lines 12 and 17 ) . also , we consider the worst case in which nodes with the lowest data rate @xmath14 seize the channel first . indeed , the lower the data rate , the larger the consumed bandwidth ( line 7 ) .",
    "the b - metric , @xmath36 , is initialized to @xmath51 ( line 8) and decreased by the estimated inelastic share of each active node that exceeds @xmath24 ( line 15 ) .",
    "it thus corresponds to the bandwidth that is still available for inelastic traffic within the bss .",
    "finally , the association of ws @xmath35 is considered as possible only if @xmath53 , where @xmath54 is a given threshold .",
    "note that , a gateway always accepts association requests coming from wss freshly joining the federated network , without computing the b - metric .",
    "we implemented the algorithm for evaluating the available bandwidth @xmath55 , the b - metric , as well as the automatic data rate adaptation scheme aarf @xcite in the omnet++  v4.1 simulator .",
    "to represent the propagation conditions over the wireless channel , we resort to a refinement of the itu indoor channel model , obtained using the experimental measurements presented in  @xcite . as for the algorithm parameters",
    ", we set @xmath56  s.    for clarity of presentation , here we consider only one ieee 802.11 g bss , including a gateway and a varying number of wss .",
    "all nodes can initially transmit at 54  mbps and both elastic ( tcp ) and inelastic ( udp ) traffic flows are present . also ,",
    "since the available bandwidth @xmath55 and the b - metric are strongly linked to each other , we show the effectiveness of our approach in predicting the first metric only .",
    "inelastic traffic is modeled as cbr flow with an offered load of 8  mbps .",
    "we fix the payload size to 1500  bytes and , for clarity of presentation we limit our study to 3 wss .",
    "also , the depicted throughput is computed at the mac layer and , for tcp traffic , it includes both data and tcp ack packets .",
    "we first consider that ws  1 starts a tcp connection at @xmath57  s and , subsequently , a udp flow at @xmath58  s. the other two stations , ws  2 and ws  3 , start a udp flow at @xmath59  s and @xmath60  s , respectively .",
    "[ fig:1tcpudp_2udp ] shows the temporal evolution of the bss aggregate throughput and @xmath55 , as well as the throughput achieved by each ws . in spite of the saturation condition caused by the tcp session started by ws  1 at @xmath57  s",
    ", @xmath55 correctly reflects that some bandwidth is available for the newly originated flow .",
    "as the udp stream starts at 6  s , tcp adjusts its throughput and lets udp take the desired bandwidth .",
    "interestingly , we note that @xmath55 is not significantly affected by this new condition .",
    "this is due to two reasons : ( i ) the udp stream is originated by the same ws that started the tcp flow and ( ii ) the udp demand is less than the estimated remaining bandwidth .",
    "the slight change that we observe in @xmath55 results from the smaller number of tcp acks within the cycle , hence from a greater observed average payload size .",
    "conversely , when the udp flow of ws  2 becomes active at @xmath59  s , @xmath55 drops to 8  mbps .",
    "the available bandwidth , though , is enough to accommodate the flow by ws  3 , which starts at @xmath60  s and brings the system to saturation , hence @xmath55 drops to 0 .",
    "also , as expected , the tcp flow almost dies out after @xmath60  s. we then assume that all wss originate one udp and one tcp flow each , and that ws  1 , ws  2 and ws  3 become active at @xmath57 , 6 and 9  s , respectively . due to the competition between elastic and inelastic traffic within the same ws",
    ", we expect that all tcp flows will die out as the udp streams accommodate their demand .",
    "[ fig : alltcpalludp ] confirms such a guess showing that the time evolution of the aggregate tcp throughput matches that of the bandwidth available for inelastic traffic ; again , the @xmath55 reflects such a behavior very closely .    at last ,",
    "we consider the same settings but for the tcp flows direction : all wss are now destinations of the tcp traffic . fig .",
    "[ fig : alltcp_dw_plusudp_up ] shows that in this case the udp throughput equals the value of offered traffic only for @xmath61 $ ]  s , i.e. , when only ws 1 and the gateway are active . in this time interval , @xmath55 correctly detects enough bandwidth to accommodate an 8  mbps - traffic flow .",
    "then , by looking at fig .",
    "[ fig : alltcp_dw_plusudp_up - single ] , we note that , after @xmath59  s , both ws  1 and ws  2 suffer a loss with respect to their demand , due to the new udp flow started by ws  3 .",
    "consistently , @xmath55 in fig .",
    "[ fig : alltcp_dw_plusudp_up - tot ] indicates that no bandwidth was available for inelastic traffic .",
    "we point out that the throughput share of the gateway , which is used for tcp traffic , erodes some of the resources available for the wss , due to the per - packet fairness provided by the dcf scheme .",
    "in this section , we describe our resource sharing protocol and show its performance in a residential scenario .",
    "we now introduce the protocol that lets federated gateways share their radio resources .",
    "we remark that the presence of a central controller is not required , and the implementation of the proposed protocol implies changes only at the gateways , not in the wss .",
    "as already mentioned , our objective is twofold : ( i ) to minimize the number of switched - on gateways , and ( ii ) to avoid overloading traffic conditions for the `` on '' gateways . to achieve these goals",
    ", a gateway periodically measures the load of its bss and assesses its status , as described in sec .",
    "[ sec : algo ] .",
    "if in light or heavy status , the gateway carries out an offload procedure , which is summarized in fig .",
    "[ fig : flow_chart ] .",
    "the procedure aims at relocating one or more wss at other gateways .",
    "the federated gateways estimate which wss they could associate , based on the value of their b - metric , and reply accordingly . upon finding a valid ws relocation ,",
    "the gateway that started the procedure can turn itself off if it was in light status , while it experiences a load decrease if it was in heavy status .",
    "the procedure for a gateway in light or heavy status is detailed below .    , width=321 ]    * light status . *",
    "consider a gateway @xmath62 that finds itself in light status .",
    "then , @xmath62 starts an offload procedure by multicasting an offload_request message to the federated gateways .",
    "this message includes the status of the requesting gateway , the frequency channel currently used in the bss , a hash of the association i d ( aid ) , the mac address and the measured traffic profile of each ws in the bss .",
    "after the offload_request is issued , @xmath62 sets a timer to the timeout value @xmath63 .",
    "an offload_request is processed only by federated gateways that are currently on and not in heavy status . since the request comes from a gateway in light status",
    ", the federated gateways first check if their b - metric is greater than the value advertized by @xmath62 .",
    "if so , they discard the request since they are less loaded than @xmath62 . otherwise , they need to evaluate which of the wss are in their radio range and which data rate they could use to communicate with the wss . to do so , we let the gateways tune one of their radio interfaces to the channel used by @xmath62 for a time @xmath64 ; then , we let @xmath62 probe each ws in its bss with an rts message .",
    "as the probed ws will reply with a cts , the gateways monitoring the frequency channel will be able to estimate the signal - to - noise ratio ( snr ) , hence the data rate they could use to communicate with the ws .",
    "note that @xmath62 will set the rts duration field so that the corresponding field in the cts will be the hash function of the ws s aid plus the ack duration so that probe cts can not be mistaken with regular cts . ] .",
    "such a procedure allows a gateway that is not in radio proximity of @xmath62 ( i.e. , unable to hear the rts ) to identify the ws sending the cts .",
    "clearly , it introduces some overhead , but , since @xmath62 is underloaded , we expect the number of wss in its bss to be small .",
    "each federated gateway then considers the wss from which is has heard a cts within the time @xmath64 . to verify which wss ( if any ) could be associated to its bss , the gateway evaluates through alg .",
    "[ algo : ace ] the b - metric for the possible combinations of candidate wss .",
    "finally , it unicasts an offload_response message to @xmath62 , including the combinations with a positive outcome ( i.e. , @xmath65 ) , as well as the corresponding value of the b - metric and the data rates that could be used to communicate with the candidate wss .    upon the expiration of the timeout @xmath63",
    ", @xmath62 evaluates all received replies . among the feasible solutions , the allocation maximizing the average data rate of the wss is selected . to solve possible ties",
    ", preference is given to the allocation that minimizes the average b - metric .",
    "the rational is that , firstly , wss should be handed over to the gateways that will be able to communicate with them at the highest data rate , so as to guarantee an efficient traffic transfer .",
    "secondly , we want as many wss as possible to associate to gateways that have already a high traffic load and leave out those that are likely to reach a light status , hence to switch themselves off .",
    "if a valid allocation is found , @xmath62 unicasts to each selected gateway an allocation_request , including the mac address of the wss assigned to it and the current b - metric value of @xmath62 .",
    "a gateway receiving the allocation_request evaluates again the b - metric taking the assigned wss into account .",
    "if the result of the evaluation is still positive and its b - metric is less than the value advertized by @xmath62 , the gateway replies with a positive allocation_response ; otherwise , it sends a negative allocation_response .",
    "@xmath62 will end the offload procedure by multicasting to all gateways a handover_command if it receives all positive allocation_responses , or an abort message otherwise . upon the reception of a handover_command ,",
    "each selected gateway will include the assigned ws(s ) in its authorized stations list , so that , when @xmath62 switches itself off , each ws will necessarily associate with the right gateway .    * heavy status .",
    "* when a gateway , @xmath66 , finds itself in heavy status , it starts an offload procedure similar to the one described above . a few differences , however , exist",
    "firstly , @xmath66 tries to hand over only one ws at a time , till its status changes into regular .",
    "specifically , it lists the wss in decreasing order according to their offered load weighted by the inverse of their data rate , and attempt to relocate the top ws first .",
    "thus , the handover of each ws results in a different offload procedure . secondly , upon receiving an offload_request from @xmath66 , an `` on '' gateway not in heavy status",
    "will always reply , provided that its b - metric computed through alg .  [ algo : ace ] is greater than 0 .",
    "however , if no viable relocation is found , @xmath66 will resend the offload_request with a flag set .",
    "this message will be processed also by `` off '' gateways , with a given probability ( low - power circuits @xcite can be used to wake up gateways upon the reception of the message with the flag set ) . in this way , we let `` off '' gateways turn themselves on if needed , while limiting the number of gateways that wake up .",
    "we remark that , upon receiving an offload_request , a gateway wishing to start an offload procedure defers its request till it receives a handover_command or an abort , and then backoff .",
    "this ensures that in the federated network there is only one active offload procedure at the time .",
    "we implemented our protocol in the omnet++  v4.1 simulator and evaluated its performance in a realistic scenario referring to a neighborhood located in the suburbs of chicago , il .",
    "the scenario , depicted in figure  [ fig : scenario ] , includes 10 federated detached houses , each equipped with an ieee 802.11 g gateway .",
    "as previously mentioned , channel propagation conditions are modeled through the model defined in  @xcite .",
    "also , the average fraction of gateways in radio visibility of a ws , when a data rate of 1  mbps is used , is 0.8 . as for the algorithm parameters",
    ", we have @xmath67 , @xmath68 , @xmath69 , @xmath70 , @xmath56  s , @xmath71  s , and @xmath72  s , while we set to 0.5 the probability that an `` off '' gateway turns itself on upon receiving a flagged offload_request from a neighboring gateway in heavy status .    for reasons of space",
    ", we limit the set of results to a scenario featuring only uplink udp traffic . consequently , we set the offload procedure to be quite reactive ( a few seconds in light / heavy status are sufficient to trigger it ) .",
    "additional hysteresis ( i.e. , heavier smoothing when computing running averages of throughput ) is needed to cope with the periodic fluctuations of tcp flows .",
    ", width=226 ]    in order to evaluate the behavior of our scheme in light and heavy status , we consider a dynamic traffic scenario .",
    "initially , all gateways are `` on '' and they have 3 associated wss each . at time @xmath73=0  s , every ws starts generating an uplink udp stream at 1  mbps ( see fig .",
    "[ fig : throughput_din_1 ] ) ; since the per - gateway load is 3  mbps , all gateways are in light status .",
    "then , between 60 and 68  s , every ws doubles its offered load ( see fig .",
    "[ fig : throughput_din_2 ] ) , driving the `` on '' gateways into heavy status .",
    "the temporal evolution of the gateways throughput , when all gateways are initially in light status , is shown in fig .",
    "[ fig : throughput_din_1 ] , where different marker / color combinations are used to represent the behavior of single gateways .",
    "the gateways that successfully carry out an offload procedure and become `` off '' correspond to downward curves , while gateways that associate relocated wss see their throughput grow .",
    "a sample of a successful offload can be observed in the interval @xmath74 $ ]  s where a gateway , upon switching itself off , relocates its three wss to two other gateways whose throughput therefore increases .",
    "eventually ( at @xmath73=8.5  s ) , the federated network settles at 3 `` on '' gateways out of 10 .",
    "each `` on '' gateway serves 10 wss ( see fig .  [",
    "fig : ws_distr ] ) and is in regular status .",
    "then , fig .",
    "[ fig : throughput_din_2 ] shows the temporal evolution of the gateways throughput when a sudden traffic increase drives the three `` on '' gateways into heavy status .",
    "as the wss progressively double their offered load ( between 60 and 68  s ) , two additional gateways turn themselves on and come to the aid of the overloaded ones .",
    "we remark that the proposed algorithm always tries to minimize the number of `` on '' gateways , thus the second one is switched on only when the first can no longer associate wss without moving into heavy status itself . when all gateways are in regular status ( @xmath73=73  s ) , no further relocations occur and the network stabilizes at 5 `` on '' gateways .",
    "the three gateways that were `` on '' at the end of the period depicted in fig .",
    "[ fig : throughput_din_1 ] now have 7 associated wss , while the first and the second gateway that came in aid accepted 6 and 3 wss , respectively , as shown in fig .",
    "[ fig : ws_distr ] .    , width=321 ]    next , we consider a different traffic scenario where initially all 10 gateways serve the same number of wss ( namely , 2 , 4 , 6 ) .",
    "each ws generates a udp flow with the same offered load , which is a varying parameter in different test runs .",
    "[ fig : swipe ] shows the percentage of `` off '' gateways , as well as the average number of wss associated to a gateway , upon reaching steady state .",
    "as expected , the number of switched off gateways decreases as both the offered load and the number of wss in the federated network increase .",
    "these results suggest that , for widely different load conditions , the configuration yielded by our solution well adapts to the system dynamics .",
    "we designed a set of procedures aimed at managing underload and overload conditions in wireless gateways of federated households . after outlining some methodologies for throughput monitoring in presence of uplink / downlink elastic and inelastic traffic",
    ", we introduced the offload procedures that allow ( i ) an underloaded gateway to relocate all of its wss and thus switch off ; ( ii ) an overloaded gateway to relocate some of its wss and alleviate its status . by simulation , we then showed the effectiveness of the procedures in a simple , yet realistic federated neighborhood scenario .",
    "further developments will address a wider evaluation of federated scenarios in presence of tcp traffic , prompt management of `` off '' gateways , as well as power saving benchmarks comparing our solution with an always - on gateway setting .",
    "the implementation of our solution in real devices will follow , along with experimental measurements .    9    n. cranley , m. davis , `` the effects of background traffic on the end - to - end delay for video streaming applications over ieee 802.11b wlan networks , '' _ ieee pimrc _ ,",
    "pp.1 , 2006 .",
    "n. blefari melazzi , d. di sorte , m. femminella , g. reali , `` toward an autonomic control of wireless access networks , '' _ globecom _ , pp.954959 , 2005 .",
    "a. p. jardosh , k. n. ramachandran , k. c. almeroth , e. m. belding - royer , `` understanding congestion in ieee 802.11b wireless networks , '' _ sigcomm _ , pp.25 , 2005 .",
    "g. sawma , g. ben - el - kezadri , r. aib , i. pujolle , `` autonomic management for capacity improvement in wireless networks , '' _ ieee ccnc _ ,",
    "pp.1 , 2009 .",
    "h. velayos , v. aleo , g. karlsson , `` load balancing in overlapping wireless lan cells , '' _ icc _ , pp . 38333836 , 2004 .",
    "s.vasudevan , k. papagiannaki , c. diot , j. kurose , d. towsley , `` facilitating access point selection in ieee 802.11 , '' _ sigcomm _ , pp.293298 , aug .",
    "a. jardosh , k. papagiannaki , e. belding , k. almeroth , g. iannaccone , b. vinnakota , `` green wlans : on - demand wlan infrastructure , '' _ mobile networks and applications _ , vol.14 , no.6 , pp.798814 , 2009 .",
    "a. jardosh , g. iannaccone , k. papagiannaki , b. vinnakota , `` towards an energy - star wlan infrastructure , '' _ hotmobile _ , pp.8590 , 2007 .",
    "d. giustiniano , e. goma , a. lopez toledo , p. rodriguez , `` wiswitcher : an efficient client for managing multiple aps , '' _ presto _ , pp.4348 , 2009 . c. rossi , c. casetti , c",
    "chiasserini , g.rondini , `` a new metric for admission control in multi - rate 802.11 wlans , '' _ wons _ , pp.150153 , 2011 .",
    "p. chatzimisios , a. c. boucouvalas , v. vistas , `` performance analysis of the ieee 802.11 dcf in presence of transmission errors , '' _ icc _ , pp.38543858 , 2004",
    ". g. bianchi , `` performance analysis of the ieee 802.11 distributed coordination function , '' _ ieee jsac _ ,",
    "vol.18 , no.3 , pp.535547 , 2000 .",
    "m. lacage , h. manshaei , t. turletti , `` ieee 802.11 rate adaptation : a practical approach , '' _",
    "acm mswim04 _ ,",
    "pp.126134 , 2004 .",
    "t. chrysikos , g. georgopoulos , s. kotsopoulos , `` site - specific validation of itu indoor path loss model at 2.4  ghz , '' _ wowmom09 _ , pp.16 , 2009 .",
    "p. le - huy , s. roy , `` low - power wake - up radio for wireless sensor networks , '' _ mobile networks and applications _ , vol.15 , no.2 , pp.226236 , 2010 .",
    "the average time duration of a possible event taking place on the channel is given by : @xmath75 = ( 1-\\tau(j))^{n(j)}~\\sigma + \\\\ [ n(j ) \\tau(j)(1-\\tau(j))^{n(j)-1}(1-p_e(j ) ) ] t_s(j ) + \\\\ [ 1-(1-\\tau(j))^{n(j)}-n(j)\\tau(j)(1-\\tau(j))^{n(j)-1 } ] t_c(j ) + \\\\ [ n(j ) \\tau(j)(1-\\tau(j))^{n(j)-1}p_e(j ) ] t_e(j ) \\label{eq : t } \\end{split}\\ ] ] where @xmath76 is the slot time duration .",
    "the average duration of a successful transmission , @xmath77 , and of an erroneous transmission , @xmath78 , are derived as follows : @xmath79 in ( [ eq : te ] ) , @xmath80 is the length of the physical header for the data and the ack frames ( assumed to be transmitted at the basic rate @xmath81 ) , @xmath82 is the length of the mac header , ack is the length of the acknowledgment mac fields and @xmath83 is the retransmission timeout , which we set equal to sifs plus the ack duration . as for the exact computation of the average collision duration , the gateway should be aware of the number of nodes that are hidden with respect to each other .",
    "the works in  @xcite do not account for hidden wss and the approaches proposed in the literature are not viable in our set up , as we do not require the gateway to have knowledge of the users distribution within its coverage area .",
    "thus , we approximate the average collision duration by making the following worst - case assumption : each collision in cycle @xmath3 involves a packet of maximum size @xmath84 ; then @xmath85 clearly , the above expression may lead to overestimating the average collision time in absence of hidden terminals , hence to underestimating the theoretical saturation throughput ; this , however , is acceptable for our purposes , as also proved by the simulation results presented in sec .",
    "[ subsec : bevaluation ] .",
    "we also observe that the gateway can easily compute @xmath20 using the following equation@xcite : @xmath86 \\\\ \\tau(j ) & = & 1 + \\bigg[\\frac{p(j)-1}{1-p_e(j)}\\bigg]^{\\frac{1}{(n(j)-1)}}\\end{aligned}\\ ] ] where @xmath87 is the the conditional probability that a transmitted packet encounters a collision or is received in error in saturation conditions .",
    "note that @xmath87 and @xmath20 have to be obtained through numerical methods , as described in @xcite ."
  ],
  "abstract_text": [
    "<S> the proliferation of overlapping , always - on ieee 802.11 access points ( aps ) in urban areas can cause spectrum sharing conflicts , inefficient bandwidth usage and power waste . </S>",
    "<S> cooperation among aps could address these problems ( i ) by allowing under - used devices to hand over their clients to nearby aps and temporarily switch off , ( ii ) by balancing the load of clients among aps and thus offloading congested aps . </S>",
    "<S> the federated houses model provides an appealing backdrop to implement cooperation among aps . in this paper , we outline a framework that , assuming the presence of a multipurpose gateway with ap capabilities in every household , allows such cooperation through the monitoring of local wireless resources and the triggering of offloading requests toward other federated gateways . </S>",
    "<S> we then present simulation results in realistic settings that provide some insight on the capabilities of our framework . </S>"
  ]
}
{
  "article_text": [
    "the relative convex hull ( rch ) , also called geodesic convex hull , recently has received increasing attention in computational geometry @xcite , in particular related to shortest path problems which appear in a variety of applications as in robotics , industrial manufacturing , networking , or processing of geographical data @xcite,@xcite .",
    "it was earlier defined in the context of digital geometry and topology and their applications in digital image analysis , where the rch and related structures based on geodesic metrics have been proposed as approximations of digital curves and surfaces and for multi - grid convergent estimations of curve length or surface area @xcite,@xcite,@xcite,@xcite,@xcite,@xcite,@xcite,@xcite , @xcite,@xcite,@xcite,@xcite .",
    "the convex hull of a set @xmath2 in the euclidean space is obtained by filling up @xmath2 with all points lying on straight line segments having end points in @xmath2 . if @xmath2 is contained in another set @xmath3 , to construct the rch of @xmath2 with respect to @xmath3 , points lying on straight line segments with end points in @xmath2 are added whenever these segments already belong to @xmath1 .    in the euclidean plane and for sets",
    "@xmath4 , the rch of @xmath2 with respect to @xmath3 , denoted by @xmath5 , is obtained by allocating a tight thread around @xmath0 but within @xmath1 , see figure [ fig:1]a ) . in this paper",
    "we study the rch for simple polygons @xmath2,@xmath3 . in @xcite ,",
    "the rch was considered for the more general situation where @xmath2 is a finite point set and @xmath3 is a polygonal domain .",
    "a distinct definition of rch applies to disjoint simple polygons @xmath6 , then @xmath5 is the weakly simple polygon formed by the shortest closed polygonal path without self - crossings which circumscribes @xmath2 but excludes @xmath3 @xcite , see figure [ fig:1]b ) .    under special conditions for the polygons @xmath2 , @xmath3 , @xmath4 ,",
    "the rch coincides with the minimum perimeter polygon ( mpp ) of @xmath2 with respect to @xmath3 , also called the minimum length polygon ( mlp ) , whose frontier is the shortest jordan curve among all jordan curves which circumscribe @xmath2 but are contained in @xmath3 @xcite,@xcite,@xcite .",
    "the mpp was first defined for polygons @xmath6 which are point set unions of cell complexes within plane mosaics modelling the digital plane where the pixels are identified with convex not necessarily uniform tiles @xcite,@xcite,@xcite,@xcite , see figure [ fig:1]c ) .",
    "these polygons @xmath6 are constructed as the inner and outer jordan digitization of a subset of the euclidean plane which is the interior of a given jordan curve @xmath7 . for the digital plane modeled by the standard quadratic complex where all pixels are grid squares of the same size , @xmath6 are isothetic simple polygons and",
    "@xmath8 is a union of grid squares called grid continuum , see figure [ fig:1]d ) . in this case , the length of the frontier of the rch is a multi - grid convergent estimator of the length of the jordan curve @xmath7 @xcite,@xcite,@xcite .",
    "several efficient mlp algorithms are known , for example the corrected version of @xcite in @xcite , and @xcite , but these can be applied only to digital continua or polyominoes .        in this paper",
    "we propose a novel algorithm for the determination of the ordered list of all vertices of the rch , for the general situation of given simple plane polygons @xmath0 , @xmath1 such that @xmath9 .",
    "the algorithm does not use previous triangulation or similar decompositions .",
    "each input polygon is given as ordered set of its vertices .",
    "our algorithm adopts some basic ideas of the algorithm published in @xcite but presents essential corrections and improvements .",
    "a preliminary version of our algorithm was developed in @xcite .",
    "recall that a non - empty set @xmath10 is _ convex _ if for any @xmath11 , the straight line segment @xmath12 is contained in @xmath2 , where @xmath12 is the set of all points @xmath13 such that @xmath14 , @xmath15 , @xmath16 .",
    "the _ convex hull _ of @xmath2 denoted by @xmath17 , is the intersection of all convex sets which contain @xmath2 .",
    "equivalently , @xmath17 is the set of all points which belong to straight line segments with end points in @xmath2 . for basic topological notions we refer to @xcite",
    ", we will denote the ( topological ) interior of @xmath2 by @xmath18 and its frontier by @xmath19 .",
    "a non - convex set is distinct from its convex hull via the presence of holes or cavities : any bounded connected component of @xmath20 is a _ hole _ of @xmath2 .",
    "the closure of any connected component of @xmath21 which is not a hole of @xmath2 , is a _ cavity _ of @xmath2 .",
    "is a hole of @xmath2 , the cavities @xmath22 are distinct although they share the point @xmath23 .",
    "the straight line segment @xmath24 is not a cover of the cavity @xmath0 although it belongs to @xmath25 , @xmath26 is the cover of @xmath0 .",
    "b ) a polyline and its convex hull given by the vertex sequence @xmath27 .",
    "c ) right and left halfplanes determined by @xmath28 .",
    "d ) points 1,2,5,6,7,9 are examples of convex vertices ( right turns ) , points 8 and 12 are concave vertices ( left turns ) of the closed polyline traced in clockwise sense.,height=105 ]    a _ curve _ @xmath29 \\ } $ ] ( @xmath30\\rightarrow \\mathbb{r}^2 $ ] continuous ) , is closed if @xmath31 , simple if for any @xmath32 $ ] such that @xmath33 it follows @xmath34 ; @xmath7 is a _ jordan curve _ if it is simple and closed .",
    "a jordan curve @xmath7 separates the plane into two uniquely defined open disjoint regions : the _ interior of the jordan curve _ is bounded and encircled by @xmath7 , and the exterior of the jordan curve is not bounded @xcite .",
    "a curve is named _ polyline _ if there exists a finite sequence of points @xmath35 , with @xmath36 such that all curve segments @xmath37 ( @xmath38 ) are straight line segments .",
    "the points @xmath35 are named vertices whenever no three consecutive points are collinear . a polyline is uniquely determined by the sequence of its vertices .",
    "a closed polyline corresponds to a closed curve , a simple polyline is a simple curve .",
    "a vertex @xmath23 of a polyline @xmath7 is called _ extreme vertex _ if its @xmath39-coordinate is extreme ( that is , maximal or minimal ) among the @xmath39-coordinates of all vertices of @xmath7 or , if its @xmath40-coordinate is extreme among all @xmath40-coordinates of vertices of @xmath7 .",
    "any extreme vertex of a polyline @xmath7 is a vertex of the convex hull @xmath41 .",
    "simple polygon _ is defined as any non - empty bounded closed set @xmath42 whose frontier forms a simple closed polyline .",
    "hence the frontier of a simple polygon is a jordan curve and can be represented by the finite cyclic sequence of its vertices .",
    "the convex hull of a simple polygon coincides with the convex hull of the finite set of its vertices . a simple",
    "polygon does not have holes , therefore it is non - convex if and only if it has at least one cavity . for any non - convex simple polygon @xmath2 in the plane and any cavity @xmath43 of @xmath2 , define the * cover * of @xmath43 as straight line segment of maximal length belonging to @xmath44 .",
    "the requirement of maximal length guarantees that the cover for each cavity @xmath43 is unique , see figure [ fig:2]a ) . for any",
    "ordered triple of points @xmath45 ,",
    "@xmath46 , @xmath47 in the plane , its orientation is characterized by the sign of the determinant @xmath48 .",
    "the oriented line segment @xmath49 defines an oriented line which separates @xmath50 into a right halfplane @xmath51 and a left halfplane @xmath52 , see figure [ fig:2]c ) .",
    "@xmath53 forms a _",
    "right turn _",
    "if @xmath54 , @xmath53 forms a _ left turn _ if @xmath55 . using the standard cartesian coordinate system in the plane , for a closed ( simple ) polyline @xmath56 traced in clockwise sense ,",
    "see figure [ fig:2]d ) , for any three consecutive vertices @xmath57 of @xmath56 we have the following : @xmath58 forms a right turn if and only if @xmath59 ; then @xmath60 is called a _ convex vertex _ ; @xmath58 forms a left turn if and only if @xmath61 , then @xmath60 is called a _",
    "concave vertex_. @xmath57 are collinear points if and only if @xmath62 .",
    "[ def : rch ] let @xmath63 be non - empty sets such that @xmath64 . then @xmath0 is called * @xmath1-convex * if any straight line segment lying in @xmath1 whose both end points belong to @xmath0 , is contained in @xmath0 .",
    "the * relative convex hull of @xmath0 with respect to @xmath1 * , denoted by @xmath65 , is defined as the intersection of all @xmath1-convex sets which contain @xmath0 .",
    "it is evident that each set @xmath0 is @xmath0-convex , and that if @xmath0 is convex and @xmath9 then @xmath0 also is @xmath1-convex .",
    "the following properties can be derived from the definitions of @xmath66 and @xmath65 :    [ lemma : rchproperties ] ( i ) @xmath67 , @xmath1 is the largest @xmath1-convex set which contains @xmath0 whereas @xmath65 is the smallest such set .",
    "\\(ii ) @xmath68 .",
    "\\(iii ) @xmath0 is convex if and only if @xmath69 .",
    "\\(iv ) @xmath70 if and only if @xmath71 .",
    "\\(v ) if @xmath1 is convex then @xmath71 .",
    "the definitions and constructions of @xmath66 and @xmath65 imply ( i ) and ( ii ) ; ( iii ) follows from ( ii ) and since @xmath0 is convex if and only if @xmath72 .",
    "\\(iv ) suppose @xmath70 .",
    "because of ( ii ) , only @xmath73 remains to be proved .",
    "let @xmath74 and @xmath75 be any @xmath1-convex set containing @xmath0 .",
    "we have to prove that @xmath76 . for @xmath77",
    "this is trivial , so assume @xmath78 .",
    "since @xmath66 is the set of all straight line segments having end points in @xmath0 , @xmath23 belongs to some straight line segment with end points @xmath79 .",
    "but then @xmath80 belong also to @xmath75 .",
    "the segment @xmath81 is contained in @xmath66 and hence , by the hypothesis , to @xmath1 . since @xmath43 es @xmath1-convex , @xmath82 which completes the proof of @xmath71 . on the other hand ,",
    "@xmath71 means in particular that @xmath66 is contained in each @xmath1-convex set which contains @xmath0 , but @xmath1 is such a set , implying @xmath70 .",
    "\\(v ) @xmath9 with @xmath1 convex implies @xmath83 , then ( iii ) gives the result .    as a corollary",
    ", it can be proved that a necessary condition for @xmath84 is that some concave vertex of @xmath1 lies in the interior of a cavity of @xmath0 . in this paper",
    "we study the rch only for simple polygons @xmath0 and @xmath1 in the plane , @xmath85 .",
    "the following properties are important for the determination of the rch :    [ theorem : rch vertex candidates ] let @xmath0 , @xmath1 be simple polygons such that @xmath86 .",
    "\\(i ) @xmath65 exists and is a uniquely defined simple polygon .",
    "\\(ii ) the frontier of the polygon @xmath65 is the jordan curve which among all jordan curves circumscribing @xmath0 and lying in @xmath1 , has the shortest length .",
    "\\(iii ) each convex vertex of @xmath65 is a convex vertex of @xmath0 , and each concave vertex of @xmath65 is a concave vertex of @xmath1 .",
    "this was given by theorem 3 from @xcite and theorem 4.6 from @xcite .",
    "when the condition is weakened to @xmath9 then the polygon @xmath65 is simple or weakly simple , that means , its frontier can touch itself but does not cross itself , and the other properties are still valid @xcite .",
    "[ theorem : all - vertices - ch(a ) ] for simple polygons @xmath0 , @xmath1 such that @xmath9 , all vertices of @xmath66 are vertices of @xmath65 .",
    "any vertex of @xmath66 belongs to @xmath87 . to prove that any vertex of @xmath66 is a vertex of @xmath65 , we apply lemma [ lemma : rchproperties](i ) and the well - known fact that any convex simple polygon is a finite intersection of halfplanes which are determined by the straight lines generated by the polygon edges .",
    "the convex simple polygon @xmath66 has @xmath88 vertices @xmath89 , where no three consecutive points are collinear , and @xmath90 edges @xmath91 , @xmath92 , @xmath93 , @xmath94 . supposing a clockwise tracing of the jordan curve @xmath95 , let @xmath96 be the right halfplane of the oriented straight line generated by the line segment @xmath97 for @xmath98 , and @xmath99 be the right halfplane of @xmath100",
    ". then @xmath101 , and all these halfplanes are pairwise distinct . for any vertex @xmath102 of @xmath66 ,",
    "@xmath103 belong to @xmath104 .",
    "this implies that @xmath105 and that @xmath65 can not contain elements of the straight line generated by the segment @xmath106 but lying outside this segment . in consequence ,",
    "in particular @xmath102 is a vertex of @xmath65 .",
    "note that the argument of our proof is independent of a discussion weather @xmath106 belongs to @xmath1 or not .",
    "the last theorem was briefly mentioned on p.126 of @xcite without proof , and it was stated in @xcite with a wrong proof .",
    "g. toussaint proposed in @xcite,@xcite to transform the problem of determining @xmath65 into the problem of finding the shortest path between two vertices of a new simple polygon which first is triangulated .",
    "that algorithm has linear time complexity in terms of the total number @xmath90 of vertices of @xmath0 and @xmath1 , but it makes essential use of the triangulation of @xmath43 which can be achieved by a complicated process in @xmath107 time . in @xcite and @xcite several ideas for algorithms to determine the rch were suggested , which are based on decompositions of the polygons such as trapezoidation or partition into pseudomonotone polygons . in the context of digital curve analysis ,",
    "some algorithms not based on triangulations for calculating the mpp or mlp are known , for example @xcite,@xcite,@xcite,@xcite,@xcite,@xcite , but these algorithms solve the rch problem only for special difference sets @xmath108 such as grid continua or polyominoes or special cell complexes .",
    "the algorithm published in @xcite,@xcite,@xcite,@xcite starts with calculating the convex hulls of @xmath0 and @xmath1 .",
    "the list of vertices of @xmath66 is completed by inserting vertices from cavities of @xmath1 until the output list of all vertices of @xmath65 is obtained .",
    "the construction of the output list follows a recursive process which searches for intersections of cavities of @xmath0 and @xmath1 .",
    "whenever such intersection is detected , a new outer polygon @xmath109 and a new inner polygon @xmath110 are formed , and the problem of finding @xmath111 is treated to obtain missing rch vertices of @xmath65 .",
    "subsequently , the recursive process works in each step with smaller newly generated outer and inner polygons and calculates their convex hulls .",
    "the author affirms that after sufficiently many recursion steps , the base case of the recursion is achieved where the new inner polygon is a triangle .",
    "the idea of such a recursive process was first suggested by two theorems on the shortest path between two vertices of a polygon and a series of drawings on p.122 - 124 in @xcite where the explanation was not detailed at all . in certain situations ,",
    "the algorithm from @xcite does not produce the correct result of all vertices of @xmath65 .",
    "the reason for this lies in the geometric nature of the rch problem for general simple polygons @xmath112 which was oversimplified in @xcite ; its recursion is theoretically not justified .",
    "the new polygon @xmath110 sometimes is not contained in @xmath109 or is not a simple polygon . for finding the missing vertices ,",
    "additional regions have to be investigated in each step .",
    "it is also possible that the process stops when @xmath110 becomes convex but is not a triangle .",
    "the new algorithm will be explained with the help of the example shown in figure [ fig : examplepolygons ] .",
    "the input data consist of two simple polygons @xmath0 , @xmath1 satisfying @xmath9 , given as ordered sequence of vertices : @xmath113 , @xmath114 representing the frontier of each polygon due to the clockwise tracing . we suppose @xmath115 as an extreme vertex of @xmath0 , @xmath116 extreme for @xmath1 which can be achieved by a simple pre - processing of both lists .",
    "hence @xmath115 is a vertex of @xmath66 and hence of @xmath65 , by theorem [ theorem : all - vertices - ch(a ) ] .",
    "the algorithm produces an ordered list of all vertices of @xmath65 as output data , starting with @xmath115 and corresponding to a clockwise tracing of the frontier of @xmath65 .     and an outer polygon @xmath1 .",
    "right : the sides of @xmath65 are marked by heavy red lines.,height=151 ]    our algorithm starts with determining all vertices of the convex hulls of both @xmath22 which are stored in the vertex lists @xmath117 , respecting the clockwise tracing .",
    "this can be done for example by the efficient melkman - algorithm @xcite . as a particularity of this algorithm",
    ", the last vertex which was confirmed as vertex of the convex hull and hence appears at the end of the output list , is repeated in that list as first point , we eliminate this first point from the list .",
    "so we obtain the vertex list @xmath66 starting with @xmath115 and containing a selection of points from the list @xmath0 whose original ordering and internal indices are preserved , similarly for @xmath118 starting with @xmath116 .",
    "the vertex list @xmath66 is considered as initial output list of the vertices of the rch . by subsequent steps of our algorithm ,",
    "all other rch vertices are found and inserted into this list @xmath66 at appropriate positions .",
    "therefore , the format of a double ended queue owned by the vertex list @xmath66 as output of the melkman - algorithm , can not be preserved during subsequent steps of our method .",
    "we apply later again the melkman - algorithm @xcite which produces the vertex list of the convex hull for any input vertex list of a polyline not necessarily closed or forming a simple polygon , and it always respects the order in the input vertex list .    in each vertex list @xmath0 , @xmath1 , @xmath66 , @xmath118 , we copy its first point as added at the list end but having a new index .",
    "this permits to study all sides of each polygon , including the line segment connecting the last vertex with the first one , without producing errors in the indices when performing our algorithm .",
    "for our example , this produces @xmath119 , @xmath120 .    since each point of the vertex list @xmath66 , besides having an @xmath66-index @xmath121 , also preserves its original index from the vertex list @xmath0 , a cavity of the polygon @xmath0 is easily detected during tracing the list @xmath66 : when consecutive vertices have a difference strictly mayor than @xmath122 between their own indices , @xmath123 , @xmath124 , and @xmath125 , then @xmath0 has a cavity whose cover is given by the line segment @xmath126 .",
    "cavities of @xmath1 can be detected in the same manner from the list @xmath118 .",
    "this idea was adopted from @xcite . in our example",
    ", @xmath127 indicates that @xmath128 is the cover of a first cavity of @xmath0 .      as in @xcite ,",
    "whenever a cavity of @xmath0 is found , it is considered as a _ new polygon @xmath109 _ determined by its vertices @xmath129 @xmath130 for some @xmath131 which always is a simple closed polyline in counterclockwise order . for our example , @xmath127 , @xmath132 .",
    "the next step is to construct a _",
    "new polyline @xmath110 _ whose convex hull , if it has at least three vertices , provides vertices of @xmath1 which are vertices of the rch and should be inserted in the list @xmath66 between @xmath133 and @xmath134 .",
    "let @xmath110 be the sequence starting with @xmath134 , @xmath135 and then containing all vertices from @xmath1 , in the same order as in @xmath1 , which belong to the set @xmath136 which is the polygon @xmath109 with exception of its cover @xmath137 .",
    "only in the case that all those vertices selected from @xmath1 are vertices of the same cavity of @xmath1 , our definition of @xmath110 coincides with that of @xcite . for our example , @xmath138 represents a closed polyline in counter - clockwise sense , but it does not form a simple polygon , and the curve is not completely contained in @xmath109 .",
    "all points @xmath139 of @xmath110 with exception of @xmath140 belong to the same cavity of @xmath1 .",
    "the melkman - algorithm @xcite is applied to determine the convex hull of @xmath110 . in our example , this produces the output @xmath141 . after eliminating the first point which is repeated and the end points of the cover which already belong to @xmath66 , we obtain the following new vertices which will be inserted into the list @xmath66 : @xmath142 , @xmath143 , @xmath144 , @xmath140 .",
    "the updated list @xmath66 then contains vertices both from @xmath0 , @xmath1 : @xmath145 .",
    "this current list @xmath66 represents two special line segments , each one connecting a vertex from @xmath0 with a vertex from @xmath1 : @xmath146 and @xmath147 .",
    "we will use these segments to form polylines whose convex hulls will provide eventually missing vertices of the rch .",
    "these polylines were not defined or used in the algorithm of @xcite .",
    "let @xmath148 be the vertices of @xmath149 which were inserted into @xmath66 at the index @xmath121 due to the procedure described above in order to generate the current list @xmath150 define a * starting @xmath109-polygon * @xmath151 by the vertex sequence starting with @xmath133 , @xmath134 and then containing all vertices which in the vertex list @xmath1 are previous to @xmath152 , copying them in reversed order , until the first vertex which lies outside @xmath109 .",
    "let @xmath153 be the polyline starting with @xmath134 , @xmath133 and then containing all vertices from the vertex list @xmath0 , copying their ordering , which belong to @xmath154 .",
    "similarly , define an * ending @xmath109-polygon * @xmath155 by the vertex sequence starting with @xmath156 , @xmath157 and then containing all vertices which in the vertex list @xmath1 are subsequent to @xmath157 , copying their ordering , until the first vertex which lies outside @xmath109 .",
    "let @xmath158 be the polyline starting with @xmath156 , @xmath157 and then containing all vertices from the vertex list @xmath0 , copying their ordering , which belong to @xmath159 .    by this definition ,",
    "@xmath151 is generated in counter - clockwise sense whereas @xmath153 , @xmath155 and @xmath158 are polylines traced in clockwise sense .",
    "all vertices of @xmath149 , @xmath160 , @xmath161 are vertices of @xmath65 .",
    "_ idea of proof : _ let @xmath109 be a cavity of @xmath0 with cover @xmath12 and at least one vertex of @xmath1 inside @xmath162 .",
    "@xmath109 is a simple polygon .",
    "due to theorem [ theorem : rch vertex candidates](ii ) , all vertices of @xmath65 belonging to @xmath163 are vertices of the shortest polygonal jordan path which circumscribes @xmath0 but lies in @xmath1 . as consequence ,",
    "the polygonal subpath from @xmath23 to @xmath164 is the shortest path between @xmath165 as vertices of the weakly simply polygon @xmath166 . by theorem 4.4 of @xcite",
    "( whose validity has to be generalized from a simple to a weakly simple polygon ) , this subpath is contained in @xmath149 .",
    "together with the fact that all vertices and edges of @xmath65 can not intersect @xmath167 , it can be proved that each vertex of @xmath149 is a vertex of @xmath65 .",
    "the polygons @xmath151 , @xmath155 , @xmath153 , @xmath158 are simple and @xmath168 , @xmath169 .",
    "the subpath of @xmath170 from @xmath133 to @xmath171 passing through certain vertices of @xmath0 ( if any ) , is the shortest path between these vertices of the simple polygon @xmath172 , it also belongs to @xmath173 . by theorem [ theorem : all - vertices - ch(a ) ] , all vertices of @xmath160 are vertices of @xmath65 ; similarly for @xmath158 . _ ( end of idea of proof ) _",
    "the melkman - algorithm @xcite is applied for calculating the lists @xmath160 , @xmath161 , which after eliminating the points which are repeated or already belonging to the list @xmath66 , have to be inserted into the list @xmath66 : new points provided by @xmath160 are inserted between @xmath133 and @xmath152 , new points from @xmath161 are inserted between @xmath157 and @xmath156 . in our example , @xmath127 , @xmath174 , @xmath175 , @xmath176 , @xmath177 , @xmath178 , @xmath179 , @xmath180 is convex and provides the new point @xmath181 to be inserted between @xmath60 and @xmath182 .",
    "@xmath183 , @xmath184 is convex , so that only @xmath185 has to be inserted between @xmath140 and @xmath186 .",
    "the new list is @xmath187 .",
    "this completes to process the cavity of @xmath0 starting at the vertex with @xmath66-index @xmath121 .",
    "note that during the whole procedure just described , this starting index @xmath121 is not changed and points are inserted only after that index . comparing the current list @xmath66 with figure [ fig : examplepolygons ]",
    "we see that within the actual cavity , more rch vertices have to been detected , but the list @xmath66 will guide us naturally to discover these missing points .",
    "the algorithm continues tracing the vertex list @xmath66 which has been updated by processing the cavity previously detected , increasing the @xmath66-index @xmath121 and looking for consecutive vertices whose own indices have a difference more than @xmath122 .",
    "this test is done only for consecutive vertices which both are from @xmath0 , or both from @xmath1 .",
    "when two points are consecutive in @xmath66 but one is from @xmath0 and the other from @xmath1 , then the point from @xmath1 was inserted as result of the treatment of the special polygons @xmath151 or @xmath155 , and no more vertices of the rch are missing between these two points .    whenever in the list @xmath66 two consecutive points of @xmath0 , @xmath123 and @xmath124 , such that @xmath125 , are found , then @xmath188 covers some kind of  cavity \" of @xmath0 and the whole  processing of one cavity \" described in the previous section , is performed .",
    "this includes the analysis of the polygons and polylines @xmath109 , @xmath110 , @xmath151 , @xmath153 , @xmath155 , @xmath158 , resulting in an updated vertex list @xmath66 .",
    "the same is done when such two consecutive points of @xmath1 , @xmath189 and @xmath190 , are detected , but then the  processing of one cavity \" is applied with the roles of @xmath0 and @xmath1 interchanged ( points @xmath191 instead of @xmath192 and vice versa ) .    in our example , the next such situation is found for @xmath193 and points of @xmath1 : @xmath194 . following faithfully the procedure with roles of @xmath0 and @xmath1 interchanged , we obtain @xmath195 which is a cavity of a cavity of @xmath1 with one vertex of @xmath0 inside , giving @xmath196 .",
    "@xmath110 is convex and provides only the new point @xmath197 .",
    "the special segments @xmath198 and @xmath199 generate @xmath200 and @xmath201 which both do not contain vertices of @xmath1 , hence @xmath202 and @xmath203 are degenerated to line segments and do not provide more points to be inserted into the vertex list .",
    "we obtain as current list @xmath204 .",
    "the next jump in the indices is found at @xmath205 again with points from @xmath1 : @xmath206 .",
    "we should be careful using geometrical concepts , the segment @xmath207 covers some part of @xmath1 which is neither a cavity nor a cavity of a cavity of @xmath1 .",
    "we obtain @xmath208 , @xmath209 which is convex and provides only the new point @xmath210 .",
    "@xmath211 are not interesting since @xmath212 degenerate to line segments and do not provide more points : @xmath213 . the next pair of points to be treated is found as @xmath214 , where the polylines @xmath215 provide the new rch vertices @xmath216 and @xmath217 , and then we need @xmath218 to discover @xmath219 and also @xmath220 to detect the last rch vertex @xmath221 which completes the correct determination of the rch shown in figure [ fig : examplepolygons ] .",
    "figure [ bsp : hugo ] shows an example where the rch was calculated by our algorithm implemented in matlab r2012a .",
    "the example was designed in @xcite to contain several interesting situations , such as a convex cavity of @xmath0 with vertices of @xmath1 inside , a non - convex cavity of @xmath0 with vertices of @xmath1 inside , vertices of @xmath0 inside interesting parts of @xmath1 , a part of @xmath222 collinear with the frontier of a cavity of @xmath0 . in the left part of each figure , both polygons @xmath112",
    "are isothetic and the difference set @xmath223 looks like a grid continuum , such that in this part we apply our algorithm to solve the mlp problem .",
    "the figure shows that the rch problem , even for the mlp case , can not be solved by the recursion of @xcite .",
    "figures [ codemain ] , [ codeprocedure ] present a pseudocode of our algorithm which is not yet optimized . to estimate the time complexity of our method ,",
    "suppose that the input polygons @xmath0 and @xmath1 have @xmath224 and @xmath225 vertices , respectively . not only the melkman - algorithm is applied and computes the convex hull of any polyline given as ordered sequence of @xmath90 vertices in linear time @xmath226 . in several steps , our method needs to decide whether a point belongs to the right or left halfplane of a straight line segment , where the determinant described in section [ sect : preliminaries ] is used .",
    "also it has to be determined whether a point lies inside or outside a simple polygon given by its vertex list .",
    "when this list corresponds to a clockwise order tracing , then a point is inside the polygon if it belongs to the right halfplanes of all polygon edges .",
    "such verifications are needed in our algorithm for polygons given by small subsets of vertices of @xmath112 , so that their time complexity can be considered as linear in dependance of @xmath227 .",
    "up to three distinct convex hulls have to be computed for each  cavity \" intersection of @xmath0 and @xmath1 .",
    "@xmath0 has a maximum number of @xmath228 cavities .",
    "each such cavity of @xmath0 could have vertices of @xmath1 inside .",
    "these vertices belong to the set of concave vertices of @xmath1 which could have almost @xmath225 elements .",
    "this gives a quadratic time complexity in the worst case .",
    "another problem is the possible existence of interleaved and interlaced cavities within other cavities .",
    "although our algorithm is not recursive but iterative , each cavity lying inside another cavity , when not treated immediately , is detected later when tracing the updated vertex list @xmath66 and then treated .",
    "so , as also observed in @xcite , only in cases when the  deepness \" of such  stacked cavities \" is bounded by some constant and the cavities in general are ",
    "well distributed \" then our algorithm can present a nearly linear time complexity behaviour .",
    "this paper proposes an algorithm for the determination of the list of all vertices of the relative convex hull , for the general situation of given simple plane polygons @xmath22 such that @xmath9 .",
    "this algorithm does not use triangulation or similar decompositions of the difference set between @xmath1 and @xmath0 as preprocessing .",
    "the ordered input vertex sequences of @xmath0 and @xmath1 are processed going forward to generate the output list of vertices of @xmath65 by inserting points iteratively into the list of vertices of the convex hull of @xmath0 .    near future work previews to complete the formal proof of correctedness of our algorithm and the solution of some pendent details such as the insertion of the new vertices found from the convex hull of the polyline @xmath110 into the current vertex list @xmath66 in the ",
    "correct \" order , or the treatment of the presence of collinear ( non - consecutive ) vertices of @xmath0 or @xmath1 , a situation which interestingly is forbidden for algorithms based on triangulation @xcite .        0.2 cm *",
    "acknowledgement : * the first author gratefully acknowledges support for this research from sep and conacyt mexico , grant no .",
    "cb-2011 - 01 - 166223 .",
    "the authors would like to thank very much to the reviewers for their careful study of the work , and for their constructive criticism and helpful comments which were important to improve the presentation of the paper .",
    "form the polyline @xmath110 by @xmath134 , @xmath135 , and all vertices of @xmath237 inside @xmath109 or collinear with its frontier with exception of the cover @xmath238 .",
    "@xmath110 has @xmath239 vertices .",
    "form the polygon @xmath153 by @xmath240 , @xmath241 and all vertices of @xmath242 inside @xmath151 or collinear with its frontier ( with exception of the line segment @xmath243 ) .",
    "@xmath153 has @xmath244 vertices .",
    "form the polygon @xmath158 by @xmath245 , @xmath246 and all vertices of @xmath242 inside @xmath155 or collinear with its frontier ( with exception of the line segment @xmath247 ) .",
    "@xmath158 has @xmath248 vertices .",
    "klette , g. : a recursive algorithm for calculating the relative convex hull .",
    "proc . of 25th int .",
    "conf . on image and vision computing ( new zealand , 2010 ) , doi : 10.1109/ivcnz.2010.6148857 , 17 , ieee comp.soc .",
    "978 - 1 - 4244 - 9631 - 0/10 ( 2010 )                            reyes becerril , h. : versin revisada de un algortmo que determina la cubierta convexa relativa de polgonos simples en el plano , master thesis . dept . of automatic control , cinvestav - ipn , mexico city ( sept . 2013 )                sloboda , f. , zatco , b. , stoer , j. : on approximation of planar one - dimensional continua . in : klette , r. , rosenfeld , a. , sloboda , f. ( eds . ) ,",
    "advances in digital and computational geometry , 113160 , springer , singapore ( 1998 )    toussaint , g.t . :",
    "an optimal algorithm for computing the relative convex hull of a set of points in a polygon . in : proc . of eurasip ,",
    "signal processing iii : theories and applications , part 2 , 853856 .",
    "north - holland ( 1986 )        wiederhold , p. , villafuerte , m. : triangulation of cross - sectional digital straights segments and minimum length polygons for surface area estimation , in : wiederhold , p. , barneva , r.p .",
    "( eds . ) , progress in combinatorial image analysis , 7992 .",
    "research publishing services , singapore ( 2009 )"
  ],
  "abstract_text": [
    "<S> a new algorithm for the determination of the relative convex hull in the plane of a simple polygon @xmath0 with respect to another simple polygon @xmath1 which contains @xmath0 , is proposed . </S>",
    "<S> the relative convex hull is also known as geodesic convex hull , and the problem of its determination in the plane is equivalent to find the shortest curve among all jordan curves lying in the difference set of @xmath1 and @xmath0 and encircling @xmath0 . </S>",
    "<S> algorithms solving this problem known from computational geometry are based on the triangulation or similar decomposition of that difference set . </S>",
    "<S> the algorithm presented here does not use such decomposition , but it supposes that @xmath0 and @xmath1 are given as ordered sequences of vertices . </S>",
    "<S> the algorithm is based on convex hull calculations of @xmath0 and @xmath1 and of smaller polygons and polylines , it produces the output list of vertices of the relative convex hull from the sequence of vertices of the convex hull of @xmath0 . </S>",
    "<S> +   + * keywords : * relative convex hull , geodesic convex hull , shortest jordan curve , shortest path , minimal length polygon , minimal perimeter polygon </S>"
  ]
}
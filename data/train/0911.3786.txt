{
  "article_text": [
    "graph transformation @xcite extends string rewriting @xcite and term rewriting @xcite in several respects . in the literature , there are many ways to define graphs and graph rewriting .",
    "the proposed approaches can be gathered in two main streams  : ( i ) the algorithmic approaches , which define a graph rewrite step by means of the algorithms involved in the implementation of graph transformation ( see e.g. @xcite ) ; this stream is out of the scope of the present paper ; ( ii ) the second stream consists of the algebraic approaches , first proposed in the seminal paper @xcite , and which uses categorical constructs to define graph transformation in an abstract way .",
    "the most popular algebraic approaches are the double pushout ( dpo ) and the single pushout ( spo ) approaches , which can be illustrated as follows  :    @xmath4_{m } & k \\ar[l]_{l } \\ar[d]^{d }   \\ar[r]^{r } & r \\ar[d]^{m ' } \\\\",
    "g & d \\ar[l]_{l ' } \\ar[r]^{r ' } & h \\\\     } &   \\hspace{10 mm } &     \\xymatrix@c=4pc@r=1.5pc {    l \\ar[d]_{m } \\ar[r]_{l } & r   \\ar[d]^{m ' }   \\\\     g   \\ar[r]_{l ' } & h   \\\\     } \\\\",
    "\\mbox{double pushout : a rewrite step } & &     \\mbox{single pushout : a rewrite step } \\\\",
    "\\end{array}\\ ] ] in the dpo approach @xcite , a rule is defined as a span , i.e. , as a pair of graph morphisms @xmath5 .",
    "a graph @xmath6 rewrites into a graph @xmath7 ( @xmath8 ) if and only if there exists a morphism ( a matching ) @xmath9 , a graph @xmath10 and graph morphisms @xmath11 such that the left and the right squares in the diagram above for a dpo step are pushouts . in general",
    ", @xmath10 is not unique , and sufficient conditions may be given in order to ensure its existence , such as dangling and identification conditions . since graph morphisms",
    "are completely defined , the dpo approach is easy to grasp , but in general this approach fails to specify rules with deletion of nodes , as witnessed by the following example",
    ". let us consider the reduction of the term @xmath12 by means of the rule @xmath13 .",
    "this rule can be translated into a span @xmath14 for some graph @xmath15 . when applied to @xmath12 , because of the pushout properties , the constant @xmath16 must appear in @xmath10 , hence in @xmath7 , although @xmath17 is the only desired result for @xmath7 .    in the spo approach @xcite ,",
    "a rule is a _ partial _ graph morphism @xmath18 . when a ( total ) graph morphism @xmath9 exists , @xmath6 rewrites into @xmath7 ( @xmath19 ) if and only if the square in the diagram above for a spo step is a pushout .",
    "this approach is appropriate to specify deletion of nodes thanks to partial morphisms .",
    "deletion of a node causes automatically the deletion of all its incident edges .    in this paper",
    "we are interested in graph transformation with an additional feature , namely _ cloning _ of nodes .",
    "informally , by cloning a node , say @xmath20 , we mean making zero , one or more copies of the node @xmath20 ; each copy can be made either with all incident edges of the cloned node @xmath20 , with only its outgoing edges , with only its incoming edges , or making a clone of @xmath20 without any of its incident edges .",
    "cloning a substructure is very common in the setting of term rewriting systems . consider the rule @xmath21 .",
    "this rule copies twice the instance of @xmath22 when applied over first - order terms . in the area of graph transformation , the considered rule can be intuitively written as @xmath23 where @xmath22 is not copied twice but shared ( see e.g. , @xcite ) .",
    "if this kind of sharing , which is one of the main features of graph transformation , can be of great interest in several areas such as efficient implementations of declarative programming languages @xcite , cloning of substructures is another important feature which may ease graph transformation in many real - life applications .",
    "unfortunately , this feature has not attracted yet the attention it deserves .",
    "the classical dpo and spo approaches of graph transformation are clearly not well suited to perform cloning of nodes .",
    "as far as we are aware of , there are two algebraic attempts to deal with cloning @xcite . in @xcite ,",
    "corradini at al .",
    "propose the sesqui - pushout approach where a rewrite rule is a span @xmath24 as in the dpo approach , and a rewrite step @xmath25 is obtained as in the dpo approach , but the left square is a final pullback complement of the matching @xmath26 .",
    "the sesqui - pushout approach has the ability to clone nodes with all their incident edges .    in this paper",
    ", we propose a new algebraic approach to graph transformation with cloning abilities which generalizes the heterogeneous pushout approach ( hpo ) we have presented in @xcite . in the hpo approach",
    ", a rewrite rule is defined as a tuple @xmath27 such that the left - hand side @xmath28 and the right - hand side @xmath1 are termgraphs ( a termgraph is a first - order term with possible sharing and cycles ) , @xmath29 is a mapping from the nodes of @xmath28 to the nodes of @xmath1 ( @xmath29 needs not be a graph morphism ) and @xmath30 is a partial function from the nodes of @xmath1 to the nodes of @xmath28 . roughly speaking",
    ", @xmath31 indicates that incoming edges of @xmath32 are to be redirected towards @xmath20 and @xmath33 indicates that node @xmath20 should be instantiated as @xmath32 ( parameter passing or cloning ) .",
    "a rewrite rule can be depicted as follows    @xmath34_{\\tau } & r \\ar@{--_{>}}@/_2ex/@<-1ex>[l]_{\\sigma } \\\\ } \\ ] ]    and a rewrite step in the hpo approach can be illustrated as    @xmath35_{\\tau } \\ar[d]_{m } &         r \\ar[d]^{d } \\ar@{--_{>}}@/_2ex/@<-1ex>[l]_{\\sigma } \\\\",
    "g \\ar@{-->}[r]_{\\tau_1 } &         h \\ar@{--_{>}}@/_2ex/@<-1ex>[l]_{\\sigma_1 } \\\\ } \\ ] ]    where the graph @xmath6 is rewritten into @xmath7 ( @xmath36 ) and @xmath7 is such that the above diagram is a heterogeneous pushout @xcite . in this approach a node",
    "may be cloned with all its outgoing edges ( and not with all its incident edges as in the sesqui - pushout approach ) . in the present work , we are generalizing functions @xmath29 and @xmath30 to spans ( relations over the nodes of @xmath28 and @xmath1 ) and consider multigraph transformation rather than termgraphs .",
    "therefore the rules we are investigating in this paper are of the following shape    @xmath37    where @xmath2 and @xmath3 are polarized multigraphs , @xmath1 is a multigraph , @xmath38 is a morphism of polarized mutltigraphs and @xmath39 is a homomorphism of multigraphs .",
    "a polarized multigraph @xmath40 is a multigraph @xmath41 such that each node , @xmath20 , can be annotated or not by the signs @xmath42 such as , @xmath43 , @xmath44 , @xmath45 or @xmath20 .",
    "intuitively , the annotation @xmath46 in @xmath43 means that the node @xmath20 can be cloned together with all its outgoing edges , while @xmath44 means that the node @xmath20 can be cloned together with all its incoming edges .",
    "@xmath45 means that the node @xmath20 can be cloned together with all its incident edges .",
    "finally , the node @xmath20 without any annotation means that the node @xmath20 can be cloned without its incident edges .",
    "thus , polarization of nodes provides more flexible ways in cloning nodes if compared to sesqui - pushout and hpo approaches .",
    "a rewrite step in this new approach has the following shape    @xmath47^{m } & { \\mathbb{k } } \\ar[l]_{l } \\ar[r]^{r } \\ar[d]^{d } & r \\ar[d]^{m'}\\\\     { \\mathbb{g } } & { \\mathbb{d } } \\ar[l]_{l ' } \\ar[r]^{r ' } & h \\\\     } \\ ] ]    the right square is a pushout of graphs as in the dpo approach while the left square is a pushback in the category of polarized graphs .    if we consider again the rewrite rule @xmath48 .",
    "this rule can be translated to the following span @xmath0 where the morphisms @xmath38 and @xmath39 are define as @xmath49 and @xmath50 . roughly speaking , the negative ( respectively , positive ) polarization of @xmath51 ( respectively , of @xmath52 ) in @xmath3 indicates that all incoming edges of node @xmath51 should be redirected to point at node @xmath53 ( respectively , all outgoing edges of @xmath22 , should be copied twice and plugged to @xmath52 and @xmath54 in @xmath1 ( see example  [ exo : ruleintro ] ) .    [ cols=\"^,^,^\",options=\"header \" , ]     @xmath55 matched by the left - hand side above through the matching @xmath56 rewrites to the following graph @xmath57 :    now , the successive applications of this rule lead to the graph :    the subgraph reachable from node map@xmath58 is no longer reachable from the rest of the graph and has to be deleted by garbage collection .",
    "we proposed a new way to perfom graph transformation which offers different possiblities to clone nodes and their incident edges , in addition to classical graph transformation ( addition and deletion of nodes and edges ) .",
    "this work has been obtained as a generalization of @xcite where an algebraic approach , based on heterogeneous pushouts ( hpo ) , of termgraph transformation has been proposed . there , a rule is defined as a tuple @xmath59 such that @xmath28 and @xmath1 are termgraphs representing the left - hand and the right - hand sides of the rule , @xmath29 is a mapping from the nodes of @xmath28 to those of @xmath1 and @xmath30 is a partial function from nodes of @xmath1 to nodes of @xmath28 .",
    "the mapping @xmath29 describes how incoming edges of the nodes in @xmath28 are connected in @xmath1 ( i.e. , global redirection of incoming pointers ) , @xmath29 is not required to be a graph morphism as in classical algebraic approaches of graph transformation .",
    "the role of @xmath30 is to indicate the parts of @xmath28 to be cloned .",
    "these two functions @xmath29 and @xmath30 have been generalized in our present framework to a span @xmath0 where graphs @xmath2 and @xmath3 are annotated with cloning indications .",
    "handling termgraphs as in @xcite requires some care to ensure the preservation of the arity ( the number of outgoing edges ) of a node during a transformation process .",
    "this requirement prevents from deletion of nodes and their incident edges in general . to ensure preservation of node arities",
    ", the function @xmath29 is required to be total .",
    "the problem of arity preserving does not appear in multigraphs .",
    "thus , in our context , a node , @xmath20 in @xmath2 , can actually be deleted ( zero clone ) with all its incident edges if , for instance , @xmath20 has no antecedent in @xmath3 . with respect to cloning abilities",
    ", the hpo approach offers the possibility to make one or more copies of a node together with its outgoing edges .",
    "therefore , this way of cloning nodes is limited to the outgoing edges only and contrasts with the flexible possibilities of cloning edges proposed in the present paper .",
    "in fact , whenever a graph @xmath6 rewrites into @xmath7 according to the hpo approach by using a rule @xmath59 , the graph @xmath6 can also be rewritten into @xmath7 according to a rule @xmath0 where morphisms @xmath38 and @xmath39 encode the functions @xmath29 and @xmath30 as described below .",
    "[ prohpo ] let @xmath60 be an hpo rule @xmath59 .",
    "then @xmath28 and @xmath1 are multigraphs , @xmath61 is a total function and @xmath62 is partial function .",
    "let @xmath63 denote the domain of @xmath30 , seen as a graph without edges .",
    "let us assume that every node in @xmath63 has no outgoing edges ( they are kind of variables ) .",
    "let @xmath32 be the rule @xmath0 defined as follows    * @xmath15 is a graph without edges and @xmath64 , * let @xmath20 in @xmath65 , then @xmath66 and @xmath67 , * let @xmath20 in @xmath68 , then @xmath69 and @xmath70 , * @xmath71 and @xmath72 : nodes in @xmath63 are dedicated to make clones with outgoing edges only .",
    "* @xmath73 and @xmath72 : this reflects the fact that the nodes of @xmath28 undergo global redirection of incoming pointers .",
    "* @xmath74 is empty .",
    "then , for an injective matching @xmath75 , @xmath76 implies @xmath77 .",
    "cloning is also one of the features of the sesqui - pushout approach to graph transformation @xcite . in this approach ,",
    "a rule is a span @xmath78 of multigraphs and the application of a rule to a graph @xmath6 can be illustrated by the same figure as for a dpo step ( as in the introduction ) , where the right - hand side is a pushout as in the dpo approach but the left - hand side is a pullback , and moreover it is a final pullback complement .",
    "the sesqui - pushout approach and ours mainly differ in the way of handling cloning . in @xcite , the cloning of a node",
    "is performed by copying all incident edges ( incoming and outgoing edges ) of the cloned node .",
    "this is a particular case of our way of cloning nodes .",
    "the use of polarized multigraphs helped us to specify for every clone , the way incident edges can be copied .",
    "therefore , a sesqui - pushout rewriting step can be simulated by a rewriting step with polarized rules , but the converse does not hold in general .",
    "[ prpsqpo ] let @xmath60 be the rewrite rule @xmath78 .",
    "let @xmath79 be the rule @xmath0 such that    * @xmath80 , @xmath81 , * @xmath82 , @xmath83 ,    then , for an injective matching @xmath75 , @xmath84 implies @xmath85 .    in @xcite ,",
    "the sesqui - pushout approach has been compared to the classical double pushout and single pushout approaches .",
    "corradini et al .",
    "showed that the sesqui - pushout and the dpo approaches coincide under some conditions ( see ( * ? ? ? * proposition  12 ) ) .",
    "they also showed how the sesqui - pushout approach can be simulated by the spo approach and gave conditions under which a spo derivation can be simulated by a sesqui - pushout ( see ( * ? ? ? * proposition  13 ) ) .",
    "so , according to proposition  [ prpsqpo ] , which shows how to simulate a sesqui - pushout step in our setting , we can infer the same comparisons with respect to dpo and spo for our graph rewriting definition .",
    "cloning has also been subject of interest in @xcite .",
    "the authors considered rewrite rules of the form @xmath86 where @xmath87 is a star , i.e. , @xmath87 is a ( nonterminal ) node surrounded by its adjacent nodes together with the edges that connect them .",
    "rewrite rules which perform the cloning of a node have been given in ( * ? ? ?",
    "* def .  6 ) .",
    "these rules show how a star can be removed , kept identical to itself or copied ( cloned ) more than once . here again , unlike our framework , the cloning does not care about the arity of the nodes and , as in the case of the sesqui - pushout approach , a node is copied together with all its incoming and outgoing edges .",
    "10    f.  baader and t.  nipkow . .",
    "cambridge university press , 1998 .",
    "michael barr and charles wells .",
    "3rd edition .",
    "les publications crm , montreal ( 1999 ) .",
    "h.  barendregt , m.  van eekelen , j.  glauert , r.  kenneway , m.  j. plasmeijer , and m.  sleep .",
    "term graph rewriting . in _",
    "parle87 _ , pages 141158 .",
    "springer verlag lncs 259 , 1987 .",
    "r.  v. book and f.  otto . .",
    "springer - verlag , 1993 .",
    "a.  corradini , t.  heindel , f.  hermann , and b.  knig . sesqui - pushout rewriting . in",
    "_ third international conference on graph transformations ( icgt 06 ) _ , volume 4178 of _ lecture notes in computer science _ ,",
    "pages 3045 .",
    "springer , 2006 .",
    "a.  corradini , u.  montanari , f.  rossi , h.  ehrig , r.  heckel , and m.  lwe .",
    "algebraic approaches to graph transformation - part i : basic concepts and double pushout approach . in _ handbook of graph grammars _ , pages 163246 , 1997 .",
    "f.  drewes , b.  hoffmann , d.  janssens , m.  minas , and n.  v. eetvelde . adaptive star grammars . in _",
    "third international conference on graph transformations ( icgt 06 ) _ , volume 4178 of _ lecture notes in computer science _ , pages 7791 .",
    "springer , 2006 .",
    "d.  duval , r.  echahed , and f.  prost . a heterogeneous pushout approach to term - graph transformation . in _",
    "20th international conference on rewriting techniques and applications , rta 2009 _ , pages 194208 , 2009 .",
    "r.  echahed .",
    "inductively sequential term - graph rewrite systems . in _",
    "4th international conference on graph transformations , icgt _ , volume 5214 of _ lecture notes in computer science _ , pages 8498 .",
    "springer , 2008 .",
    "r.  echahed and j.  c. janodet .",
    "admissible graph rewriting and narrowing . in _ proc .  of joint international conference and symposium on logic programming ( jicslp98 ) _ , pages 325340 .",
    "mit press , june 1998 .",
    "h.  ehrig , g.  engels , h .- j .",
    "kreowski , and g.  rozenberg , editors . .",
    "world scientific , 1999 .",
    "h.  ehrig , r.  heckel , m.  korff , m.  lwe , l.  ribeiro , a.  wagner , and a.  corradini .",
    "algebraic approaches to graph transformation - part ii : single pushout approach and comparison with double pushout approach . in _ handbook of graph grammars _ , pages 247312 , 1997 .",
    "h.  ehrig , h .- j .",
    "kreowski , u.  montanari , and g.  rozenberg , editors . .",
    "world scientific , 1999 .",
    "h.  ehrig , m.  pfender , and h.  j. schneider .",
    "graph - grammars : an algebraic approach . in _ 14th annual symposium on foundations of computer science ( focs ) , 15 - 17 october 1973 , the university of iowa , usa _ , pages 167180 .",
    "ieee , 1973 .",
    "r.  kennaway . on `` on graph rewritings '' . , 52:3758 , 1987 .",
    ". algebraic approach to single - pushout graph transformation .",
    ", 109(1&2):181224 , 1993 .",
    "saunders mac lane .",
    "_ categories for the working mathematician .",
    "2nd edition .",
    "graduate texts in mathematics 5 , springer - verlag ( 1997 ) .",
    "_    r.  plasmeijer and m.  van eekelen . .",
    "addison - wesley , 1993 .",
    "d.  plump .",
    "term graph rewriting . in h.",
    "ehrig , g.  engels , h.  j. kreowski , and g.  rozenberg , editors , _ handbook of graph grammars and computing by graph transformation _ ,",
    "volume  2 , pages 361 .",
    "world scientific , 1999 .",
    "j.  c. raoult . on graph rewriting .",
    ", 32:124 , 1984 .",
    "g.  rozenberg , editor . .",
    "world scientific , 1997 .",
    "pushouts and pullbacks are basic notions of category theory , mutually dual ( see for instance @xcite ) ; the following notations will be used throughout the appendix . in a category , `` the '' _ pushout _ of @xmath88 is @xmath89 such that @xmath90 and for every @xmath91 such that @xmath92 there is a unique @xmath93 such that @xmath94 and @xmath95 . then @xmath96 is called a _ pushout complement _ of @xmath97 .",
    "dually , `` the '' _ pullback _ of @xmath98 is @xmath99 such that @xmath100 and for every @xmath101 such that @xmath102 there is a unique @xmath103 such that @xmath104 and @xmath105 . then @xmath106 is called a _ pullback complement _ of @xmath107 . due to their universality property ,",
    "the pushout of @xmath88 and the pullback of @xmath98 are unique up to isomorphism , but there may be several non - isomorphic pushout complements of @xmath97 and several non - isomorphic pullback complements of @xmath108 .",
    "pushouts and pullbacks are depicted as usual : @xmath109_{d } \\ar[r]^{r } & r \\ar[d]^{h } \\\\     d \\ar[r]^{r_1 } & h        \\ar@{-}[]+l+<-6pt,+1pt>;[]+lu+<-6pt,+6pt >       \\ar@{-}[]+u+<-1pt,+6pt>;[]+lu+<-6pt,+6pt >    \\\\     }",
    "\\qquad\\qquad     \\xymatrix@c=4pc {     l \\ar[d]_{m } & k \\ar[l]_{l } \\ar[d]^{d }        \\ar@{-}[]+l+<-6pt,-1pt>;[]+ld+<-6pt,-6pt >       \\ar@{-}[]+d+<-1pt,-6pt>;[]+ld+<-6pt,-6pt >      \\\\",
    "g & d \\ar[l]_{l_1 } \\\\     } \\ ] ] final pullback complements appeared as a fundamental tool for graph rewriting in @xcite .",
    "pushback _ of @xmath107 is its final pullback complement , when it exists .",
    "this means that the pushback of @xmath107 is a pullback complement @xmath106 of @xmath107 such that for every pullback complement @xmath110 of @xmath107 there is a unique @xmath111 such that @xmath112 and @xmath113 .",
    "because of its terminality property , the pushback of @xmath107 is unique up to isomorphism . in order to insist on this terminality property ,",
    "pushbacks will be depicted as follows : @xmath114_{m } & k \\ar[l]_{l } \\ar[d]^{d } \\\\",
    "g & d \\ar[l]_{l_1 }        \\ar@{-}[]+l+<-6pt,+1pt>;[]+lu+<-6pt,+6pt >       \\ar@{-}[]+l+<-8pt,+1pt>;[]+lu+<-8pt,+8pt >       \\ar@{-}[]+u+<-1pt,+6pt>;[]+lu+<-6pt,+6pt >",
    "\\ar@{-}[]+u+<-1pt,+8pt>;[]+lu+<-8pt,+8pt >      \\\\     } \\ ] ]    as mentioned in the main text , the propositions are made of explicit constructions , they can be proved by `` simple '' verifications . in this appendix",
    "we do write the proofs as simple verifications for the constructions on sets .",
    "but for the constructions on graphs and polarized graphs we use well - known results about pointwise construction of limits and colimits .",
    "all the constructions are performed up to isomorphism .",
    "[ app - prop : set - po ] let @xmath115 be a function and @xmath116 an inclusion , so that up to bijection @xmath117 and @xmath118 is the canonical inclusion .",
    "the pushout of @xmath118 and @xmath39 in @xmath119 is the following square , where @xmath120 is the canonical inclusion : @xmath121^{d } \\ar[r]^{r } & r \\ar[d]^{h } \\\\",
    "d = k+{\\overline}{k } \\ar[r]_{r_1=r+{\\mathrm{id}}_{{\\overline}{k } } } & h = r+{\\overline}{k }        \\ar@{-}[]+l+<-6pt,+1pt>;[]+lu+<-6pt,+6pt >       \\ar@{-}[]+u+<-1pt,+6pt>;[]+lu+<-6pt,+6pt >    \\\\     } \\ ] ]    given a commutative square @xmath121^{d } \\ar[r]^{r } & r \\ar[d]^{h ' } \\\\     d = k+{\\overline}{k } \\ar[r]_{r'_1 } & h '   \\\\     } \\ ] ] let us check that there is a unique function @xmath93 such that @xmath122 and @xmath123 .",
    "if such a @xmath124 exists , then its restriction to @xmath1 is @xmath125 and its restriction to @xmath126 is the restriction of @xmath127 to @xmath126 .",
    "these two properties determine a function @xmath93 which satisfies @xmath122 and @xmath128 for each @xmath129 .",
    "we have to check that @xmath128 for each @xmath130 .",
    "this follows from the equalities @xmath131 .",
    "[ app - prop : set - pb ] let @xmath132 be a function and @xmath133 an inclusion , so that up to bijection @xmath134 and @xmath26 is the canonical inclusion .",
    "the pullback complements of @xmath38 and @xmath26 in @xmath119 are the following squares , where @xmath10 is any set containing @xmath15 ( so that @xmath117 ) , @xmath118 is the canonical inclusion and @xmath135 is any function : @xmath136^{m } & k \\ar[l]_{l } \\ar[d]^{d }        \\ar@{-}[]+l+<-6pt,-1pt>;[]+ld+<-6pt,-6pt >       \\ar@{-}[]+d+<-1pt,-6pt>;[]+ld+<-6pt,-6pt >      \\\\",
    "g = l+{\\overline}{l } & d = k+{\\overline}{k } \\ar[l]^{l_1=l+{\\overline}{l } } \\\\     } \\ ] ]    first , let us prove that the square in the proposition is a pullback square .",
    "clearly it is commutative . given a commutative square @xmath136^{m } & k ' \\ar[l]_{l ' } \\ar[d]^{d ' }     \\\\     g = l+{\\overline}{l } & d = k+{\\overline}{k } \\ar[l]^{l_1=l+{\\overline}{l } } \\\\     } \\ ] ] let us check that there is a unique function @xmath103 such that @xmath137 and @xmath138 .",
    "if such a @xmath139 exists , since @xmath118 is the canonical inclusion , the image of @xmath140 is in @xmath15 and @xmath141 for each @xmath142 .",
    "this determines a function @xmath103 which satisfies @xmath138 .",
    "we have to check that @xmath137 , or equivalently , since @xmath26 is an inclusion , that @xmath143 .",
    "this follows from the equalities @xmath144 .",
    "now , let us check that every pullback complement of @xmath38 and @xmath26 has this form . given a pullback square @xmath136^{m } & k \\ar[l]_{l } \\ar[d]^{d ' }        \\ar@{-}[]+l+<-6pt,-1pt>;[]+ld+<-6pt,-6pt >       \\ar@{-}[]+d+<-1pt,-6pt>;[]+ld+<-6pt,-6pt >      \\\\",
    "g = l+{\\overline}{l } & d ' \\ar[l]^{l'_1 } \\\\     } \\ ] ] let us check that it has the same form as in the proposition . since monomorphisms are stable under pullbacks @xcite , the function @xmath140 is a monomorphism , so that up to isomorphism we may assume that @xmath140 is the canonical inclusion of @xmath15 in @xmath145 , where @xmath146 is the complement of @xmath15 in @xmath147 .",
    "since the square is commutative , the restriction of @xmath148 to @xmath15 is @xmath38 .",
    "finally , let us check that @xmath148 maps @xmath146 to @xmath149 : otherwise , there is some @xmath150 such that @xmath151 for some @xmath152 , then we get a commutative square @xmath136^{m } & \\{*\\ } \\ar[l]_{*\\mapsto x } \\ar[d]^{*\\mapsto x ' }     \\\\     g = l+{\\overline}{l } & d ' \\ar[l]^{l'_1 } \\\\     } \\ ] ] but there is no @xmath153 such that @xmath154 , which contradicts the pullback complement property of @xmath147 .",
    "[ app - prop : set - pc ] let @xmath132 be a function and @xmath133 an inclusion , so that up to bijection @xmath134 and @xmath26 is the canonical inclusion .",
    "the pushback of @xmath38 and @xmath26 is the following square : @xmath136^{m } & k \\ar[l]_{l } \\ar[d]^{d } \\\\",
    "g = l+{\\overline}{l } & d = k+{\\overline}{l } \\ar[l]^{l_1=l+{\\mathrm{id}}_{{\\overline}{l } } }        \\ar@{-}[]+l+<-6pt,+1pt>;[]+lu+<-6pt,+6pt >       \\ar@{-}[]+l+<-8pt,+1pt>;[]+lu+<-8pt,+8pt >       \\ar@{-}[]+u+<-1pt,+6pt>;[]+lu+<-6pt,+6pt >       \\ar@{-}[]+u+<-1pt,+8pt>;[]+lu+<-8pt,+8pt >      \\\\     } \\ ] ]    clearly from proposition  [ app - prop : set - pb ] , this square is a pullback . in order to prove that it is final",
    ", using proposition  [ app - prop : set - pb ] , we have to prove that for every @xmath145 and @xmath155 there is unique @xmath111 such that @xmath156 is the identity on @xmath15 and @xmath157 on @xmath158 .",
    "it is easy to check that @xmath159 is the unique function which satisfies these properties . @xmath160^{m } & k \\ar[l]_{l } \\ar[d]^{d } \\ar@/^3ex/[ddr]^{d ' } &   \\\\",
    "g = l+{\\overline}{l } & d = k+{\\overline}{l } \\ar[l]_{l_1=l+{\\mathrm{id}}_{{\\overline}{l } } } & \\\\     & & d'=k+{\\overline}{k ' } \\ar@<1ex>@/^3ex/[llu]^{l'_1=l+{\\overline}{l ' } }       \\ar@<.5ex>[lu]_(.6){\\;\\delta={\\mathrm{id}}_k+{\\overline}{l'}}\\\\     } \\ ] ]      as in the main text , for each graph @xmath161 the set of edges from @xmath20 to @xmath32 in @xmath161 is denoted @xmath162 .",
    "in addition for every morphism of graphs @xmath163 , for every @xmath164 and @xmath165 the restrictions of @xmath51 are denoted : @xmath166    a graph @xmath161 may be represented informally as follows , where @xmath167 and @xmath168 represent the source and target functions : @xmath169^{{\\mathtt{src}}_x } \\ar@/_/[r]_{{\\mathtt{tgt}}_x } & { |x| } \\\\   } \\ ] ] let @xmath170 denote the following category ( the identity arrows @xmath171 and @xmath172 are omitted in this representation ) : @xmath173^{{\\mathtt{src } } } \\ar@/_/[r]_{{\\mathtt{tgt } } } & n \\\\   } \\ ] ] then , a graph may be identified to a functor from @xmath170 to @xmath119 , where @xmath119 is the category of sets .",
    "more precisely , the category of graphs @xmath174 may be identified to the category of functors from @xmath170 to @xmath119 .",
    "it follows that limits and colimits of graphs may be computed pointwise @xcite .    as in the main text ,",
    "a _ matching _ of graphs is a monomorphism of graphs ( this is often called an `` injective matching '' ) . and a matching of graphs @xmath163 gives rise ( up to isomorphism ) to a decomposition @xmath175 .",
    "the edges in @xmath176 are called the _ linking edges _ for @xmath51 .",
    "[ app - prop : gra - po ] let @xmath115 be a morphism and @xmath116 a matching of graphs , so that up to isomorphism @xmath177 and @xmath118 is the canonical inclusion .",
    "the pushout of @xmath118 and @xmath39 in @xmath174 is the following square , where @xmath120 is the canonical inclusion and where @xmath178 and @xmath179 are defined as follows . on nodes , @xmath180 and @xmath181 . on edges , @xmath178 has one edge @xmath182 for each edge @xmath183 in @xmath184 such that @xmath185 and @xmath186 , and @xmath179 maps @xmath187 to @xmath188 .",
    "@xmath121^{d } \\ar[r]^{r } & r \\ar[d]^{h } \\\\",
    "d=(k+{\\overline}{k})+_e{\\widetilde}{k } \\ar[r]_{r_1=(r+{\\mathrm{id}}_{{\\overline}{k}})+_e{\\widetilde}{r } } &       h=(r+{\\overline}{k})+_e{\\widetilde}{r }           \\ar@{-}[]+l+<-6pt,+1pt>;[]+lu+<-6pt,+6pt >",
    "\\ar@{-}[]+u+<-1pt,+6pt>;[]+lu+<-6pt,+6pt >     \\\\     } \\ ] ]      since @xmath177 , we have @xmath192 and @xmath193 .",
    "since a pushout of graphs can be computed pointwise , let us use proposition  [ app - prop : set - po ] . on nodes ,",
    "we get @xmath194 with @xmath120 the canonical inclusion and @xmath195 . on edges ,",
    "we get @xmath196 where @xmath197 , with @xmath120 the canonical inclusion and @xmath198 .",
    "the source and target functions for @xmath7 coincide with the source and target functions for @xmath1 and for @xmath126 on the subgraphs @xmath1 and @xmath126 , respectively . for every edge @xmath183 in @xmath184 , its image in @xmath7",
    "is @xmath199 in @xmath178 , this is the edge denoted @xmath188 in the proposition .",
    "[ app - prop : gra - pb ] let @xmath132 be a morphism and @xmath133 a matching of graphs , so that up to isomorphism @xmath200 and @xmath26 is the canonical inclusion .",
    "the pullback complements of @xmath38 and @xmath26 in @xmath174 are the following squares , where @xmath10 is any graph containing @xmath15 ( so that @xmath177 ) , @xmath118 is the canonical inclusion , @xmath135 is any morphism of graphs and @xmath201 is any morphism of graphs which coincides with @xmath202 on the nodes . @xmath136^{m } & k \\ar[l]_{l } \\ar[d]^{d }         \\ar@{-}[]+l+<-6pt,-1pt>;[]+ld+<-6pt,-6pt >       \\ar@{-}[]+d+<-1pt,-6pt>;[]+ld+<-6pt,-6pt >      \\\\",
    "g=(l+{\\overline}{l})+_e{\\widetilde}{l } & d=(k+{\\overline}{k})+_e{\\widetilde}{k } \\ar[l]^{l_1=(l+{\\overline}{l})+_e{\\widetilde}{l } } \\\\     } \\ ] ]    since @xmath200 , we have @xmath203 and @xmath204 . since monomorphisms are stable under pullback , the pullback complements of @xmath38 and @xmath26 are such that @xmath116 is a monomorphism . hence ,",
    "up to isomorphism , @xmath177 , so that @xmath192 and @xmath193 , and @xmath118 is the canonical inclusion .",
    "we still have to prove that @xmath205 .",
    "since a pullback of graphs can be computed pointwise , proposition  [ app - prop : set - pb ] tells us that on nodes @xmath206 for any function @xmath207 and that on edges @xmath208 for any function @xmath209 .",
    "in addition , an edge @xmath183 in @xmath210 is in @xmath211 if and only if both @xmath212 and @xmath213 are in @xmath214 , and similarly an edge @xmath215 in @xmath216 is in @xmath217 if and only if both @xmath218 and @xmath219 are in @xmath220 . since @xmath206 on nodes",
    ", it follows that @xmath221 with @xmath222 and @xmath223 .",
    "[ app - prop : gra - pc ] let @xmath132 be a morphism and @xmath133 a matching of graphs , so that up to isomorphism @xmath200 and @xmath26 is the canonical inclusion .",
    "the pushback of @xmath38 and @xmath26 is the following square , where @xmath184 is made of one edge @xmath224 for each @xmath225 in @xmath226 and @xmath227 maps each @xmath228 to @xmath229 .",
    "@xmath136^{m } & k \\ar[l]_{l } \\ar[d]^{d } \\\\",
    "g=(l+{\\overline}{l})+_e{\\widetilde}{l } & d=(k+{\\overline}{l})+_e{\\widetilde}{k } \\ar[l]^{l_1=(l+{\\mathrm{id}}_{{\\overline}{l}})+_e{\\widetilde}{l } }         \\ar@{-}[]+l+<-6pt,+1pt>;[]+lu+<-6pt,+6pt >       \\ar@{-}[]+l+<-8pt,+1pt>;[]+lu+<-8pt,+8pt >       \\ar@{-}[]+u+<-1pt,+6pt>;[]+lu+<-6pt,+6pt >",
    "\\ar@{-}[]+u+<-1pt,+8pt>;[]+lu+<-8pt,+8pt >     \\\\     } \\ ] ]      this proof generalizes the proof of proposition  [ app - prop : set - pc ] . clearly from proposition  [ app - prop : gra - pb ] , this square is a pullback . in order to prove that it is final ,",
    "using proposition  [ app - prop : gra - pb ] , we have to prove that for every @xmath232 and @xmath233 there is a unique @xmath111 such that @xmath156 is the identity on @xmath15 and @xmath157 .",
    "since @xmath234 and @xmath235 , this means that @xmath236 with @xmath237 .",
    "so , @xmath156 is uniquely determined on @xmath158 , hence on the nodes of @xmath147 , and we still have to check that the equality @xmath238 determines a unique @xmath239 .",
    "the equality @xmath238 is equivalent to the family of equalities @xmath240 for all nodes @xmath241 and @xmath242 in @xmath147 , with @xmath243 and @xmath244 in @xmath10 .",
    "since @xmath245 is a bijection , this is equivalent to @xmath246 : @xmath247^{{{{\\widetilde}{l } } _ { n_d\\rightarrowp_d}}^{-1 } } &       { \\widetilde}{k } \\ar[l]^{{{{\\widetilde}{l } } _ { n_d\\rightarrowp_d } } } & \\\\     & & { \\widetilde}{k ' } \\ar@<1ex>@/^3ex/[llu]^{{{{\\widetilde}{l ' } } _ { n_{d'}\\rightarrowp_{d ' } } } }       \\ar@<.5ex>[lu]_(.6){\\;{{{\\widetilde}{\\delta } } _ { n_{d'}\\rightarrowp_{d ' } } } } \\\\     } \\ ] ] this determines the morphism @xmath248 , hence @xmath156 .",
    "this proof is summarized by the diagram below : @xmath160^{m } & k \\ar[l]_{l } \\ar[d]^{d } \\ar@/^3ex/[ddr]^{d ' } &   \\\\",
    "g=(l+{\\overline}{l})+_e{\\widetilde}{l } & d=(k+{\\overline}{l})+_e{\\widetilde}{k } \\ar[l]_{l_1=(l+{\\mathrm{id}}_{{\\overline}{l}})+_e{\\widetilde}{l } } & \\\\     & & d'=(k+{\\overline}{k'})+_e{\\widetilde}{k ' } \\ar@<1ex>@/^3ex/[llu]^{l'_1=(l+{\\overline}{l'})+_e{\\widetilde}{l ' } }       \\ar@<.5ex>[lu]_(.6){\\;\\delta=({\\mathrm{id}}_k+{\\overline}{l'})+_e{\\widetilde}{\\delta}}\\\\     } \\ ] ]      a polarized graph @xmath249 may be represented informally as follows , where @xmath167 and @xmath168 represent the source and target functions , @xmath250 and @xmath251 represent the restrictions of @xmath167 and @xmath168 , respectively , and the upward arrows represent the inclusions : @xmath252^{{\\mathtt{src}}_x } \\ar@/_/[rrrrr]_{{\\mathtt{tgt}}_x } & & & & & { |x| } & \\\\      { { x}_{\\rightarrow}}^\\star \\ar@/^/[rrrr]^{{\\mathtt{src}}_x^+ } \\ar@/_3ex/[rrrrrr]_{{\\mathtt{tgt}}_x^- } \\ar[u ] & & & &        { |x|}^+ \\ar[ur ] & & { |x|}^- \\ar[ul ]   \\\\   } \\ ] ] let @xmath253 denote the following limit sketch , where the arrows `` @xmath254 '' stand for monomorphisms and where @xmath255 and @xmath256 ( an introduction to sketches can be found in @xcite ) : @xmath257^{{\\mathtt{src } } } \\ar@/_/[rrrrr]_{{\\mathtt{tgt } } } & & & & & n & \\\\      e^\\star \\ar@/^/[rrrr]^{{\\mathtt{src}}^+ } \\ar@/_3ex/[rrrrrr]_{{\\mathtt{tgt}}^- } \\ar@{>->}[u]^{i^\\star } & & & &        n^+ \\ar@{>->}[ur]^{i^+ } & & n^- \\ar@{>->}[ul]_{i^- }   \\\\   } \\ ] ] then , a polarized graph may be identified to a set - valued model of @xmath253 .",
    "more precisely , the category of polarized graphs @xmath258 may be identified to the category of set - valued models of @xmath253 .",
    "it follows that limits of polarized graphs may be computed pointwise .    as in the main text ,",
    "a _ matching _ of polarized graphs is a monomorphism @xmath259 such that @xmath260 ( i.e. , @xmath51 strictly preserves the polarization ) . and a matching of polarized graphs @xmath259 gives rise ( up to isomorphism ) to a decomposition @xmath261 .",
    "the edges in @xmath262 are called the _ linking edges _ for @xmath51 .",
    "[ app - prop : pol - pb ] let @xmath263 be a morphism and @xmath264 a matching of polarized graphs , so that up to isomorphism @xmath265 and @xmath26 is the canonical inclusion .",
    "the pullback complements of @xmath38 and @xmath26 in @xmath258 are the following squares , where @xmath266 is any matching of polarized graphs ( so that @xmath267 ) , @xmath118 is the canonical inclusion , @xmath268 is any morphism of polarized graphs and @xmath269 is any morphism of polarized graphs which coincides with @xmath202 on nodes . @xmath270^{m } & { \\mathbb{k } } \\ar[l]_{l } \\ar[d]^{d }         \\ar@{-}[]+l+<-6pt,-1pt>;[]+ld+<-6pt,-6pt >",
    "\\ar@{-}[]+d+<-1pt,-6pt>;[]+ld+<-6pt,-6pt >      \\\\    { \\mathbb{g}}=({\\mathbb{l}}+{\\overline}{{\\mathbb{l}}})+_e{\\widetilde}{{\\mathbb{l } } } &        { \\mathbb{d}}=({\\mathbb{k}}+{\\overline}{{\\mathbb{k}}})+_e{\\widetilde}{{\\mathbb{k } } } \\ar[l]^{l_1=(l+{\\overline}{l})+_e{\\widetilde}{l } } \\\\     } \\ ] ]    this proof generalizes the proof of proposition  [ app - prop : gra - pb ] .",
    "since monomorphisms are stable under pullback , the pullback complements of @xmath38 and @xmath26 are such that @xmath271 is a monomorphism .",
    "let us prove that @xmath118 is a matching of polarized graphs : let @xmath272 be a node in @xmath15 , with @xmath273 in @xmath28 , such that @xmath274 is polarized as @xmath275 in @xmath10 , then @xmath276 is polarized as @xmath277 in @xmath6 , and since @xmath26 is a matching @xmath278 is also polarized as @xmath279 in @xmath28 , which implies that @xmath272 is polarized as @xmath280 in @xmath15 because the square is a pullback .",
    "a similar result holds for nodes with negative polarization and for polarized edges .",
    "so , @xmath118 is a matching , from which it follows that , up to isomorphism , @xmath267 and @xmath118 is the canonical inclusion . we still have to prove that @xmath205 .",
    "since a pullback of polarized graphs can be computed pointwise , this part of the proof runs as in the proof of proposition  [ app - prop : gra - pb ] .    in a pullback square as in proposition  [ app - prop : pol - pb ] , it may happen that every linking edge for @xmath26 is polarized while this does not hold for @xmath118 ; for example , with the notations as in the main text : @xmath281^{\\star } \\\\",
    "p^\\pm \\\\ } & \\xymatrix@r=1pc@c=1pc{n_1^+ & n_2 ^ - \\ar[d ] \\\\",
    "& p^\\pm \\\\ } \\\\   \\hline \\end{array}\\ ] ]    [ app - defi : pol - pol ] with the notations of proposition  [ app - prop : pol - pb ] , a pullback is called _ polarized _ when every linking edge for @xmath26 is polarized , as well as every linking edge for @xmath118 . when every linking edge for @xmath26 is polarized , the _ polarized _ pushback of @xmath38 and @xmath26 is the terminal polarized pullback complement , when it exists .",
    "[ app - prop : pol - pc ] let @xmath263 be a morphism and @xmath264 a matching of polarized graphs , so that up to isomorphism @xmath265 and @xmath26 is the canonical inclusion .",
    "in addition , let us assume that every linking edge for @xmath26 is polarized .",
    "the polarized pushback of @xmath38 and @xmath26 is the following square , where @xmath282 is made of one edge @xmath224 for each @xmath283 , @xmath284 and @xmath225 in @xmath285 and where @xmath227 maps each @xmath286 to @xmath287 : @xmath270^{m } & { \\mathbb{k } } \\ar[l]_{l } \\ar[d]^{d }   \\\\     { \\mathbb{g}}=({\\mathbb{l}}+{\\overline}{{\\mathbb{l}}})+_e{\\widetilde}{{\\mathbb{l } } } &        { \\mathbb{d}}=({\\mathbb{k}}+{\\overline}{{\\mathbb{l}}})+_e{\\widetilde}{{\\mathbb{k } } } \\ar[l]^{l_1=(l+{\\mathrm{id}}_{{\\overline}{{\\mathbb{l}}}})+_e{\\widetilde}{l } }         \\ar@{-}[]+l+<-6pt,+1pt>;[]+lu+<-6pt,+6pt >       \\ar@{-}[]+l+<-8pt,+1pt>;[]+lu+<-8pt,+8pt >       \\ar@{-}[]+u+<-1pt,+6pt>;[]+lu+<-6pt,+6pt >",
    "\\ar@{-}[]+u+<-1pt,+8pt>;[]+lu+<-8pt,+8pt >     \\\\    } \\ ] ]    since every linking edge for @xmath26 and for @xmath118 is polarized , @xmath288 and @xmath289 . on the linking edges ,",
    "the morphism @xmath227 induces a bijection , for all @xmath290 and @xmath291 : @xmath292 if @xmath293 or @xmath294 , then @xmath295 is empty , but it may happen that @xmath296 and @xmath297 and that @xmath298 is not empty .",
    "for example : @xmath281^{\\star } \\\\",
    "p^\\pm \\\\ } & \\xymatrix@r=1pc@c=1pc{n_1^+ \\ar[d]^{\\star } & n_2 ^ - \\\\ p^\\pm & \\\\ } \\\\   \\hline \\end{array}\\ ] ]    this proof is similar to the proof of proposition  [ app - prop : gra - pc ] . using proposition  [ app - prop : pol - pb ]",
    ", we have to prove that for every @xmath299 and @xmath300 such that all edges in @xmath301 are polarized , there is a unique @xmath302 such that @xmath156 is the identity on @xmath3 and @xmath157 .",
    "this means that @xmath303 with @xmath237 .",
    "so , @xmath156 is uniquely determined on @xmath304 , hence on the nodes of @xmath305 , and we still have to check that the equality @xmath238 determines a unique @xmath239 . the equality @xmath238 is equivalent to the family of equalities @xmath240 for all nodes @xmath241 and @xmath242 in @xmath305 , with @xmath243 and @xmath244 in @xmath306 .    *",
    "if @xmath307 and @xmath308 then @xmath290 and @xmath291 so that @xmath245 is a bijection",
    ". then @xmath309 is uniquely determined by @xmath310 . * otherwise , @xmath311 is empty , because all edges in @xmath301 are polarized .",
    "then @xmath312 is uniquely determined .",
    "this yields the morphism @xmath248 , hence @xmath156 .",
    "this proof is summarized by the diagram below : @xmath313^{m } & k \\ar[l]_{l } \\ar[d]^{d } \\ar@/^3ex/[ddr]^{d ' } &   \\\\     { \\mathbb{g}}=({\\mathbb{l}}+{\\overline}{{\\mathbb{l}}})+_e{\\widetilde}{{\\mathbb{l } } } &       { \\mathbb{d}}=({\\mathbb{k}}+{\\overline}{{\\mathbb{l}}})+_e{\\widetilde}{{\\mathbb{k } } }               \\ar[l]_{l_1=(l+{\\mathrm{id}}_{{\\overline}{{\\mathbb{l}}}})+_e{\\widetilde}{l } } & \\\\     & & { \\mathbb{d'}}=({\\mathbb{k}}+{\\overline}{{\\mathbb{k'}}})+_e{\\widetilde}{{\\mathbb{k ' } } }      \\ar@<1ex>@/^3ex/[llu]^{l'_1=(l+{\\overline}{l'})+_e{\\widetilde}{l ' } }       \\ar@<.5ex>[lu]_(.6){\\;\\delta=({\\mathrm{id}}_{\\mathbb{k}}+{\\overline}{l'})+_e{\\widetilde}{\\delta}}\\\\     } \\ ] ]"
  ],
  "abstract_text": [
    "<S> we tackle the problem of graph transformation with a particular focus on _ node cloning_. we propose a graph rewriting framework where nodes can be cloned zero , one or more times . </S>",
    "<S> a node can be cloned together with all its incident edges , with only the outgoing edges , with only the incoming edges or without any of the incident edges . </S>",
    "<S> we thus subsume previous works such as the sesqui - pushout , the heterogeneous pushout and the adaptive star grammars approaches . </S>",
    "<S> a rule is defined as a span @xmath0 where the right - hand side @xmath1 is a multigraph , the left - hand side @xmath2 and the interface @xmath3 are polarized multigraphs . </S>",
    "<S> a polarized multigraph is a multigraph endowed with some cloning annotations on nodes and edges . </S>",
    "<S> we introduce the notion of polarized multigraphs and define a rewriting step as pushback followed by a pushout in the same way as in the sesqui - pushout approach . </S>"
  ]
}
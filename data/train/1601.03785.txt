{
  "article_text": [
    "image processing has great applicability in several areas . in medicine , for example",
    ", they can be applied to : identify tumors @xcite ; support techniques in advancing dental treatments @xcite , etc .",
    "such images are not always obtained with a suitable quality , and to detect the desired information , various methods have been developed in order to eliminate most of the noise contained in these images .",
    "another problem addressed in image processing is the decrease of resolution , usually aiming the reduction of memory consumption required for its storage @xcite .",
    "there are several techniques for image reduction in the literature , more recently paternain _ et .",
    "@xcite constructed reduction operators using weighted averaging aggregation functions .",
    "the proposed method consists of : ( 1 ) to reduce a given image by using a reduction operator ; ( 2 ) to build a new image from the reduced one , and ( 3 ) to analyze the quality of the last image by using the measures _ psnr _ and _ msim _ @xcite .    in this work",
    "we introduce a class of aggregation functions called : * dynamic ordered weighted averaging function * - * ( dyowa)*. they generalize the @xmath0 function introduced by yager @xcite and in particular the operators : _ arithmetic mean _ , _ median _ , _ maximum _ , _ minimum _ and @xmath1 .",
    "we provide a range of their properties such as : idempotence , symmetry and homogeneity as well two methods:31 software in a 64 bits ms windows machine . ] * ( 1 ) * for image reduction and * ( 2 ) * for noise treatment .",
    "this paper is structured in the following way : section 2 provides some basics of aggregation functions theory .",
    "section 3 introduces dynamic ordered weighted averaging functions , shows some examples and properties , and introduces a particular @xmath2 function , called @xmath3 , which will be fundamental for this work . in section 4 we provide an application of @xmath2 s to image reduction and in section 5 , we show that @xmath2 functions are able to treat images with noise , aiming to improve the reduction method used in section 4 . finally , section section 6 gives the final remarks of this work .",
    "aggregation functions are important mathematical tools for applications in several fields : information fuzzy @xcite ; decision making @xcite ; image processing @xcite and engineering @xcite . in this section",
    "we introduce them together with examples and properties .",
    "we also present a special family of aggregation functions called _ ordered weighted averaging _ - * owa * and show some of its features .",
    "aggregation functions associate each entry @xmath4 with @xmath5 arguments in the closed interval @xmath6 $ ] an output value also in the interval @xmath6 $ ] ; formally we have :    an @xmath5-ary aggregation function is a mapping @xmath7^n\\rightarrow[0,1]$ ] , which associates each @xmath5-dimensional vector @xmath4 to a single value @xmath8 in the interval @xmath6 $ ] such that :    1 .",
    "@xmath9 and @xmath10 ; 2 .",
    "if @xmath11 , i.e. , @xmath12 , for all @xmath13 , then @xmath14 .    1 .",
    "arithmetic mean : @xmath15 2 .",
    "minimum : @xmath16 ; 3 .",
    "maximum : @xmath17 ; 4 .   harmonic mean : @xmath18 ;    from now on we will use the short term  aggregation \" instead of ",
    "@xmath5-ary aggregation function \" .",
    "aggregations can be divided into four distinct classes : _ averaging , conjunctive , disjunctive _ and _ mixed_. since this paper focus on averaging aggregations , we will define only this class .",
    "a wider approach in aggregation can be found in @xcite .",
    "an aggregation is called * _ averaging _ * , if for all @xmath19^n$ ] we have : @xmath20    the _ arithmetic mean _ , the _ maximum _ and the _ minimum _ are averaging aggregation functions .",
    "an aggregation function @xmath21 :    1 .   is * idempotent * if , and only if , @xmath22 for all @xmath23 $ ] .",
    "2 .   is * homogeneous * of order @xmath24 if , and only if , for all @xmath25 $ ] and @xmath26^{n}$ ] , @xmath27 .",
    "when @xmath21 is homogeneous of order @xmath28 we simply say that @xmath21 is homogeneous .",
    "3 .   is * shift - invariant * if , and only if , @xmath29 , for all @xmath30 $ ] , @xmath31^{n}$ ] such that @xmath32^n$ ] and @xmath33 $ ] .",
    "4 .   is * monotonic * if , and only if , @xmath11 implies @xmath14 .",
    "5 .   is * strictly monotone * if , and only if , @xmath34 whenever @xmath35 , i.e. @xmath11 and @xmath36 .",
    "6 .   has a * neutral element * @xmath37 $ ] , if for all @xmath38 $ ] at any coordinate input vector @xmath4 , it has to be : @xmath39 7 .",
    "@xmath21 is * symmetric * if , and only if , its value is not changed under the permutations of the coordinates of @xmath4 , i.e , we have : @xmath40 for all @xmath41 and any permutation @xmath42 .",
    "an * absorbing element * * ( _ annihilator _ ) * of an aggregation function @xmath21 , is an element @xmath43 $ ] such that : @xmath44 9 .",
    "a * zero divisor * of an aggregation function is an element @xmath450,1[$ ] , such that , there is some vector @xmath4 with @xmath46 , for all @xmath47 , and @xmath48 . 10 .",
    "a * one divisor * of an aggregation function @xmath21 is an element @xmath490 , 1[$ ] such that , there is some vector @xmath4 with @xmath50 , for all @xmath47 , and @xmath51 .",
    "11 . if @xmath52 \\rightarrow [ 0,1]$ ] is a strong negation\\rightarrow [ 0,1]$ ] such that @xmath53 for all @xmath54 $ ] . ] and @xmath55^{n } \\rightarrow [ 0,1]$ ] is an aggregation function , then the * dual aggregation function * of @xmath21 is : @xmath56 which is also an aggregation function .    1 .   the functions : @xmath57 and @xmath58 are examples of idempotent , homogeneous , shift - invariant , monotonic and symmetric functions",
    "@xmath59 and @xmath58 have @xmath60 and @xmath28 elements as annihilator , respectively , but @xmath61 does not have annihiladors .",
    "@xmath59 , @xmath58 and @xmath61 do not have zero divisors and one divisors .",
    "the dual of @xmath58 with respect to negation @xmath62 is the @xmath59 function .",
    "in the field of aggregation functions there is a very important subclass in which the elements are parametric ; they are called : _ * ordered weighted averaging * _ or simply * owa * @xcite .",
    "an @xmath0 is an aggregation function which associates weights to all components @xmath63 of an input vector * x*. to achieve that observe the following definition .",
    "let be an input vector @xmath64^n$ ] and a vector of weights @xmath65 , such that @xmath66 . assuming the permutation : @xmath67 such that @xmath68 , i.e. , @xmath69 , the ordered weighted averaging ( _ owa _ )",
    "function with respect to @xmath70 , is the function @xmath71^n\\rightarrow [ 0,1]$ ] such that : @xmath72    in what follows we remove @xmath70 from @xmath73 .",
    "the main properties of such functions are :    1 .   for any vector of weights @xmath70 ,",
    "the function @xmath74 is idempotent and monotonic .",
    "moreover , @xmath74 is strictly increasing if all weights @xmath70 are positive ; 2 .",
    "the dual of a @xmath75 is denoted by @xmath76 , with the vector of weights dually ordered , i.e. @xmath77 , where @xmath78 .",
    "3 .   @xmath0 are continuous , symmetric and shift - invariant functions ; 4 .",
    "they do not have neutral or absorption elements , except in the special case of functions @xmath0 of @xmath58 and @xmath59",
    ".      1 .   if all weight vector components are equal to @xmath79 , then @xmath80 .",
    "2 .   if @xmath81 , then @xmath82 .",
    "3 .   if @xmath83 , then @xmath84 .",
    "4 .   if @xmath85 , for all @xmath86 , with the exception of a _ k_-th member , i.e , @xmath87 , then this @xmath0 is called * static * and @xmath88 5 .   given a vector @xmath4 and its ordered permutation @xmath89 , the _ median _",
    "function @xmath90 is an @xmath0 function in which the vector of weights is defined by : * if @xmath5 is odd , then @xmath91 for all @xmath92 and @xmath93 .",
    "* if @xmath5 is even , then @xmath91 for all @xmath94 and @xmath95 , and @xmath96 .",
    "the @xmath5-dimensional @xmath1 function @xcite is the @xmath0 operator , with weighted vector defined by :    * if @xmath5 is even , then @xmath97 , for @xmath98 , and @xmath99 , for @xmath100 . * if @xmath5 is odd , then @xmath97 , for @xmath101 , @xmath99 , for @xmath100 , and @xmath102 .",
    "the @xmath0 functions are defined in terms of a predetermined vector of weights . in the next section",
    "we propose the generalization of the concept of @xmath0 in order to relax the vector of weights . to achieve that we replace the vector of weights by a family of functions .",
    "the resulting functions are called * dynamic ordered weighted avegaring functions * or in short : * * dyowa**s .",
    "before defining the notion of @xmath2 functions , we need to establish the notion of _ weight - function_.    a finite family of functions @xmath103^n\\rightarrow [ 0,1]\\ |\\ 1\\le i\\le n\\}$ ] such that : @xmath104 is called family of * weight - function * ( fwf ) .    a *",
    "dynamic ordered weighted averaging * function or simply * dyowa * associated to a fwf @xmath105 is a function of the form : @xmath106    below we show some examples of @xmath2 operators with their respective weight - functions .    let",
    "be @xmath107 .",
    "the @xmath2 operator associated to @xmath105 , @xmath108 , is @xmath109 .",
    "the function _",
    "minimum _ can be obtained from @xmath110 , where @xmath111 and @xmath112 , for all @xmath19^n$ ] .",
    "similarly , the function _",
    "maximum _ is also of type @xmath2 with @xmath105 dually defined .    for any vector of weights @xmath113 ,",
    "a function @xmath73 is a @xmath2 in which the weight - functions are given by : @xmath114 , where @xmath115 is the permutation , such that @xmath116 with @xmath117 .",
    "for example : if @xmath118 , then for @xmath119 we have @xmath120 and @xmath121 .",
    "thus , @xmath122 , @xmath123 , and @xmath124    example 8 shows that the functions @xmath0 , introduced by yager , are special cases of @xmath2 functions .",
    "there are , however , some @xmath2 functions which are not @xmath0 .",
    "let @xmath125 .",
    "the respective @xmath2 function is @xmath126 , which is not an @xmath0 function .",
    "the next theorem characterizes the @xmath2 functions which are also aggregations .",
    "let @xmath127 be a fwf .",
    "a @xmath128 is an aggregation function if , and only if , it is monotonic .    obviously , if @xmath128 is an aggregation , then it is monotonic function .",
    "conversely , if @xmath128 is monotonic , then for it to become an aggregation , enough to show that @xmath129 this follows from the definition of @xmath2 .",
    "a @xmath2 is an aggregation function if , and only if , it is an a aggregation of type averaging .",
    "for all @xmath130 have to @xmath131 so , @xmath132 but as @xmath133 , it follows that @xmath134    all functions of the type @xmath2 presented in examples , , , and are averaging aggregation functions .    just see that those functions are monotonic .    for every @xmath105",
    ", @xmath128 is idempotent .    if @xmath135 with @xmath136 $ ] , then : @xmath137    this property is important because it tells us that every @xmath2 is idempotent , regardless it is an aggregation or not .    if @xmath105 is invariant under translations , i.e , @xmath138 for any @xmath19^n$ ] , for @xmath139 and @xmath140 $ ] , then @xmath128 is shift - invariant .",
    "let @xmath141^n$ ] and @xmath140 $ ] such that @xmath142^n$ ] .",
    "then , @xmath143    if @xmath105 is homogeneous of order @xmath24 ( i.e. , if @xmath144 is homogeneus of order @xmath24 , for each @xmath145 ) , then @xmath108 is homogeneous of order @xmath146 .",
    "of course that , if @xmath147 , then @xmath148 ) .",
    "now , to @xmath149 we have : @xmath150    let @xmath105 be defined by @xmath151 then , @xmath152 this @xmath128 is idempotent , homogeneous and shift - invariant .",
    "however , @xmath128 is not monotonic , since @xmath153 and @xmath154 .",
    "the next definition provides a special fwf , which will be used to build a @xmath155 whose properties are very important for this paper .",
    "consider the family @xmath105 of functions @xmath156 then , @xmath105 is a fwf , i.e. @xmath157 , for all @xmath19^n$ ] .",
    "let @xmath3 be the associated @xmath2 .",
    "the computation of @xmath3 can be performed using the following expressions : @xmath158    let be @xmath159 .",
    "so , for @xmath160 we have @xmath161    the weight - functions defined in are such that : @xmath162 and @xmath163 , for any @xmath164 .    writing @xmath165 , then @xmath166 .",
    "clearly , @xmath167 .",
    "thus , for @xmath168 we have : @xmath169 therefore , @xmath170 . the case",
    "in which @xmath171 is immediate .    to check the second property , make @xmath172 ,",
    "note that @xmath173 and for @xmath174 @xmath175 therefore , @xmath176 .",
    "the case in which @xmath171 is also immediately    @xmath3 is shift - invariant and homogeneous .",
    "straightforward for propositions and .",
    "the function @xmath177 is of great importance to this work , since this function , as well as some @xmath2 s already mentioned will provide us tools able : ( 1 ) to reduce the size of images and ( 2 ) to deal with noise reduction .    now , we present some other properties of function @xmath3 .",
    "in addition to idempotency , homogeneity and shift - invariance @xmath3 has the following proprerties .",
    "@xmath3 has no neutral element .",
    "suppose @xmath3 has a neutral element @xmath178 , find the vector of weight for @xmath179 .",
    "note that if @xmath180 , then @xmath181 and therefore , @xmath182 therefore , @xmath183 i.e. , @xmath184 and @xmath185 but since @xmath178 is a neutral element of @xmath3 , @xmath186 .",
    "absurd , since we can always take @xmath187 .    for @xmath188 , we have @xmath189 , where @xmath190 or @xmath191 . in both cases",
    "it is not difficult to show that @xmath192 and @xmath193 .",
    "thus , taking @xmath187 , again we have @xmath194 .",
    "@xmath3 has no absorbing elements .    to @xmath188",
    ", we have @xmath195 , which has no absorbing elements . now for @xmath180 we have to @xmath196 with @xmath197 therefore , @xmath198 therefore , @xmath199 but to @xmath200 we have to @xmath201 . furthermore , @xmath202 and @xmath203 therefore , @xmath204 with this we prove that @xmath3 does note have annihiladors .",
    "@xmath3 has no zero divisors .",
    "let @xmath450,1[$ ] and consider @xmath2050,1]^n$ ] .",
    "in order to have @xmath206 we have @xmath207 for all @xmath13 .",
    "but as @xmath208 and we can always take @xmath209 also different from zero , then for each @xmath13 there remains only the possibility of terms : @xmath210 this is absurd , for @xmath211 $ ] e @xmath133 . like this",
    ", @xmath3 has no zero divisors .",
    "@xmath3 does not have one divisors    just to see that @xmath450,1[$ ] , we have to @xmath212 .",
    "@xmath3 is symmetric .",
    "let @xmath42 be a permutation .",
    "so we can easily see that @xmath213 for all @xmath214^n$ ] .",
    "we also have to @xmath215 .",
    "thus , it suffices to consider the case where @xmath216 .",
    "but @xmath216 we have to : @xmath217    therefore , @xmath3 satisfies the following properties :    * idempotence * homogeneity * shift - invariance * symmetry . *",
    "@xmath3 has no neutral element * @xmath3 has no absorbing elements * @xmath3 has no zero divisors * @xmath3 does not have one divisors    unfortunately we do not prove here the monotonicity of @xmath3 , due to its complexity , but we suspect that it is true .",
    "this demonstration will be relegated to a future work .",
    "the next two sections show the suitability of @xmath2",
    ". they will provide applications for image and noise reduction .",
    "in this part of our work we use the functions @xmath2 studied in examples , , , and , and definition to build image reduction operators , the resulting images will be compared with the reduced image obtained from the operator function @xmath3 .    an image is a matrix @xmath218 , @xmath219 , where each @xmath220 represents a pixel . in essence , a reduction operator reduces a given image @xmath218 to another @xmath221 , such that @xmath222 and @xmath223 .",
    "for example , @xmath224\\longmapsto \\left[\\begin{tabular}{cc } 0.1 & 0\\\\ 1 & 0.6\\\\ \\end{tabular}\\right]\\ ] ]    in grayscale images the value of pixels belong to the set @xmath225 $ ] , which can be normalized by dividing them by @xmath226 , so that we can think of pixels as values in the range @xmath6 $ ] .",
    "there are several possible ways to reduce a given image , as shown in the following example :    the image @xmath227,\\ ] ] can be reduced to another @xmath228 by partitioning @xmath229 in blocks @xmath230 : @xmath231= , @xmath231 and applying to each block , for example , the function @xmath232 : we obtain , the \\ ] ] applying @xmath233 we would obtain : @xmath234\\ ] ]    in fact , if we apply any other function , we get a new image ( usually different from the previous one ) , but what is the best ?    one possible answer to",
    "this question involves a method called * magnification * or * extension * ( see @xcite ) , which is a method which magnifies the reduced image to another with the same size of the original one . the magnified image",
    "is then compared with the original input image .    from @xmath235 and @xmath236 , we get images @xmath237 , @xmath238 and @xmath239 , simply cloning each pixel ,",
    "@xmath240      \\longmapsto      \\left[\\begin{tabular}{cc }      x & x\\\\      x & x\\\\      \\end{tabular}\\right]\\ ] ] we obtain , new images @xmath241\\ ] ] and @xmath242\\ ] ]    since @xmath243 e @xmath244 have the same size as the original image @xmath229 , we can now measure what is the best reduction .",
    "this can be done by comparing the initial image @xmath229 with each of the resulting images , @xmath243 and @xmath244 .",
    "but , how do we compare ?",
    "one of the possibilities to compare the images @xmath243 and @xmath244 with the original image @xmath229 is to use the mensure psnr @xcite , calculated as follows : @xmath245 where @xmath246 and @xmath247 are two images , @xmath248^n$ ] and @xmath249 is the maximum possible pixel value of pixel . observe that the closer the image the smaller the value of mse and the larger the value of psnr .    in what follows , we use @xmath2 operators : @xmath250 and @xmath61 to reduce size of images in grayscale .",
    "we apply the following method :    ' '' ''    * method 1 *    ' '' ''    1 .",
    "reduce the input images using the @xmath3 , @xmath1 , _ arithmetic mean _ and _ median _ ; 2 .",
    "magnify the reduced image to the size of the original image using the method described in ; 3 .",
    "compare the last image with the original one using the measure @xmath251 .    ' '' ''",
    "this general method can be applied to any kind of image . in this work we applied it to the 10 images in grayscale of size @xmath252 ( figure [ figorigimg ] ) .",
    "blocks and @xmath253 blocks . ]",
    "+     +     +     +        in the tables i and ii we present the psnr values between the input images and the output provided by method 1 .",
    "table 1 provides results for operators using blocks @xmath230 and table ii for blocks @xmath253 .",
    ".@xmath251 values after a reduction using the @xmath2s operators using blocks @xmath230 [ cols=\"^,^,^,^,^\",options=\"header \" , ]     since the output of convolution using @xmath3 is closer to the original input image , the tables v and vi show that the process of reduction using @xmath3 is more efficient .",
    "in this paper we propose a generalized form of ordered weighted averaging function , called * dynamic ordered weighted averaging * function or simply * dyowa*. this functions are defined by weights , which are obtained dynamically from of each input vector @xmath19^n$ ] .",
    "we demonstrate , among other results , that @xmath0 functions are instances of @xmath2s , and , hence , functions like : _ arithmetic mean _ , _ median _ , _ maximum _ , _ minimum _ and @xmath1 are also examples of @xmath2 .    in the second part of this work we present a particular @xmath2 , called of @xmath3 , and",
    "show that it is idempotent , symmetric , homogeneous , shift - invariant , and moreover , it has no zero divisors and one divisors , and also does not have neutral elements .",
    "since aggregation functions which satisfy these properties are extensively used in image processing , we tested its usefulness to : ( 1 ) reduce the size of images and ( 2 ) deal with noise in images .",
    "in terms of image reduction , method 1 showed a weakness , since it adds noise during the process of magnification .",
    "however , the treatment of noise with function * h * improved the magnification step providing an evidence that the function * h * is more efficient to perform the image reduction process .",
    "zhou , f. chiclana , r. i. john , j. m. garibaldi , type - 1 owa operators for aggregating uncertain information with uncertain weight sinduced by type -2 linguistic quantifiers , fuzzy sets syst .",
    "159 ( 2008 ) 3281 - 3296 .",
    "h. bustince , m. galar , b. c. bedregal , a. kolesrov , r. mesiar : a new approach to interval - valued choquet integrals and the problem of ordering in interval - valued fuzzy set applications . ieee t. fuzzy systems 21(6 ) : 1150 - 1162 ( 2013 ) .",
    "j. yang , j. wright , t. s. huang , y. ma , image super - revolution as sparse representation of raw image patches , computer vision and pattern recoginition , 2008 .",
    "cvpr 2008 .",
    "ieee conference , ieee , 2008 , 1 - 8 ."
  ],
  "abstract_text": [
    "<S> in this paper we propose a special type of aggregation function which generalizes the notion of ordered weighted averaging function - @xmath0 . </S>",
    "<S> the resulting functions are called * dynamic ordered weighted averaging functions *  * * dyowa**s . </S>",
    "<S> this generalization will be developed in such way that the weight vectors are variables depending on the input vector . </S>",
    "<S> particularly , this operators generalize the aggregation functions : _ minimum _ , _ maximum _ , _ arithmetic mean _ </S>",
    "<S> , _ median _ etc , which are extensively used in image processing . in this field of research </S>",
    "<S> two problems are considered : the determination of methods to reduce images and the construction of techniques which provide noise reduction . </S>",
    "<S> the operators described here are able to be used in both cases . in terms of image reduction </S>",
    "<S> we apply the methodology provided in @xcite . </S>",
    "<S> we use the noise reduction operators obtained here to treat the images obtained in the first part of the paper , thus obtaining images with better quality .    </S>",
    "<S> [ [ keywords ] ] keywords : + + + + + + + + +    aggregation functions , @xmath0 functions , image reduction , noise reduction . </S>"
  ]
}
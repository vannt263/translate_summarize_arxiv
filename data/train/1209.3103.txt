{
  "article_text": [
    "[ sec : intro ] we are interested in the numerical approximation of solutions to kinetic equations set in a complex geometry with different type of boundary conditions . unfortunately ,",
    "classical structured or unstructured meshes are not appropriate due to the high dimensional property of kinetic problem . in contrast",
    ", the cartesian mesh makes the numerical method efficient and easy to implement .",
    "the difficulty is that obviously grid points are usually not located on the physical boundary when using a cartesian mesh , thus a suitable numerical method to capture the boundary condition on the complex geometry is required .",
    "several numerical methods based on cartesian mesh have been developed in computational fluid dynamics in last decade . among these methods ,",
    "the immersed boundary method ( ibm ) , first introduced by peskin  @xcite for the study of biological fluid mechanics problems , has attracted considerable attention because of its use of regular cartesian grid and great simplification of tedious grid generation task .",
    "the basic idea of immersed boundary method is that the effect of the immersed boundary on the surrounding fluid is represented through the introduction of forcing terms in the momentum equations . in conservation laws ,",
    "two major classes immersed boundary like methods can be distinguished on different discretization types .",
    "the first class is cartesian cut - cell method  @xcite , which is based on a finite volume method .",
    "this conceptually simple approach `` cuts '' solid bodies out of a background cartesian mesh .",
    "thus we have several polygons ( cut - cells ) along the boundary .",
    "then the numerical flux at the boundary of these cut - cells are imposed by using the real boundary conditions .",
    "this method satisfies well the conservation laws , however to determine the polygons is still a delicate issue .",
    "the second class is based on finite difference method . to achieve a high order interior scheme , several ghost points behind the boundary are added .",
    "for instance for solving hyperbolic conservations laws , an inverse lax - wendroff type procedure is used to impose some artificial values on the ghost points  @xcite .",
    "the idea of the inverse lax - wendroff procedure ( ilw ) is to use successively the partial differential equation to write the normal derivatives at the inflow boundary in terms of the tangential and time derivatives of given boundary conditions . from these normal derivatives ,",
    "we can obtain accurate values of ghost points using a taylor expansion of the solution from a point located on the boundary .",
    "the goal of this paper is to extend the inverse lax - wendroff procedure to kinetic equations together with an efficient time discretization technique @xcite for problems where boundary conditions play a significant role in the long time asymptotic behavior of the solution . in particular , for low speed and low knudsen flows for which dsmc methods are unsuitable .",
    "therefore , the main issue relies on that the inflow is no longer a given function , while it is determined by the outflow . for this",
    ", we proceed in three steps : we first compute the outflow at the ghost points . to maintain high order accuracy and to prevent oscillations caused by shocks , we use a weighted essentially non - oscillatory ( weno ) type extrapolation to approximate the ghost points by using the values of interior mesh points . in the same time",
    ", we can extrapolate the outflow located at the boundary associated with ghost points .",
    "then , we compute the inflow at the boundary by using the outflow obtained in the first step and maxwell s boundary conditions . finally , we perform the inverse lax - wendroff procedure to approximate the inflow on the ghost points , where the key point is to replace the normal derivatives by a reformulation of the original kinetic equation .    for simplicity ,",
    "we only consider simple collision operator as we adapt the ellipsoidal statistics bgk or es - bgk model introduced by holway  @xcite .",
    "this model gives the correct transport coefficients for navier - stokes approximation , so that boltzmann or es - bgk simulations are expected to give the same results for dense gases .",
    "let us emphasize that direct simulation monte - carlo methods ( dsmc ) have been performed to the es - bgk model in complex geometry .",
    "however dsmc approach is not computationally efficient for nonstationary or low mach number flows due to the requirement to perform large amounts of data simpling in order to reduce the statistical noise .",
    "in contrast , f. filbet & s. jin recently proposed a deterministic asymptotic preserving scheme for the es - bgk model , where the entire equation can be solved explicitly and it can capture the macroscopic fluid dynamic limit even if the small scale determined by the knudsen number is not numerically resolved @xcite .",
    "we will use this scheme to solve es - bgk model while on the boundary the inverse lax - wendroff procedure will be applied .",
    "the outline of the paper is as follows . in section  [ sec : ilw ]",
    "we describe precisely the inverse lax - wendroff procedure to maxwell s boundary condition in 1d and 2d space dimension .",
    "then in section  [ sec : esbgk ] we present the es - bgk model and the application of inverse lax - wendroff procedure to this model .",
    "in section  [ sec : num ] a various numerical examples are provided in @xmath0 and @xmath1 to demonstrate the interest and the efficiency of our method in term of accuracy and complexity . finally a conclusion and some perspectives are given in section  [ sec : conc ] .",
    "the fundamental kinetic equation for rarefied gas is the boltzmann equation @xmath2 which governs the evolution of the density @xmath3 of monoatomic particles in the phase , where @xmath4 .",
    "the collision operator is either given by the full boltzmann operator    @xmath5    or by a simplified model as the bgk or es - bkg operator ( see the next section ) .",
    "boltzmann s type collision operator has the fundamental properties of conserving mass , momentum and energy : at the formal level @xmath6 moreover , the equilibrium is the local maxwellian distribution namely : @xmath7(t,\\mathbf{x},\\mathbf{v})=\\frac{\\rho(t,\\mathbf{x})}{(2\\pi \\,t(t,\\mathbf{x}))^{3/2}}\\exp\\left(-\\frac{|\\mathbf{u}(t,\\mathbf{x})-\\mathbf{v}|^2}{2\\,t(t,\\mathbf{x})}\\right),\\ ] ] where @xmath8 , @xmath9 , @xmath10 are the density , macroscopic velocity and the temperature of the gas , defined by @xmath11    in order to define completely the mathematical problem , suitable boundary conditions on @xmath12 should be appled . here",
    "we consider wall type boundary conditions introduced by maxwell  @xcite , which is assumed that the fraction @xmath13 of the emerging particles has been reflected elastically at the wall , whereas the remaining fraction @xmath14 is thermalized and leaves the wall in a maxwellian distribution .",
    "the parameter @xmath14 is called accommodation coefficient  @xcite .",
    "more precisely , for @xmath15 the smooth boundary @xmath12 is assumed to have a unit inward normal @xmath16 and for @xmath17 , we assume that at the solid boundary a fraction @xmath14 of particles is absorbed by the wall and then re - emitted with the velocities corresponding to those in a still gas at the temperature of the solid wall , while the remaining portion @xmath13 is perfectly reflected .",
    "this is equivalent to impose for the ingoing velocities @xmath18\\,+\\,\\alpha\\,\\mathcal{m}[f(t,\\mathbf{x},\\mathbf{v})],\\,\\,\\,\\mathbf{x}\\in\\partial\\omega_{\\mathbf{x}},\\,\\,\\,\\mathbf{v}\\cdot\\mathbf{n}(\\mathbf{x})\\geq0 , \\label{eq : bcingoing}\\ ] ] with @xmath19 and @xmath20 & = & f(t,\\mathbf{x},\\mathbf{v}-2(\\mathbf{v}\\cdot\\mathbf{n}(\\mathbf{x}))\\mathbf{n}(\\mathbf{x})),\\\\[3 mm ]      \\mathcal{m}[f(t,\\mathbf{x},\\mathbf{v})]&=&\\mu(t,\\mathbf{x})\\,f_{w}(\\mathbf{v } ) .",
    "\\end{array }    \\right.\\ ] ] by denoting @xmath21 the temperature of the solid boundary , @xmath22 is given by @xmath23 and the value of @xmath24 is determined by mass conservation at the surface of the wall for any @xmath25 and @xmath15 @xmath26 this boundary condition   guarantees the global conservation of mass  @xcite .",
    "in this paper we only apply a second order finite difference method to discretize the transport term of   but higher order schemes @xcite may be applied . then to keep the order of accuracy of the method , two ghost points should be added in each spatial direction . to impose @xmath27 at the ghost points",
    ", we will apply the inverse lax - wendroff procedure proposed in  @xcite for conservation laws .",
    "suppose that the distribution function @xmath27 at time level @xmath28 for all interior points are already known , we now construct @xmath27 at the ghost points .",
    "we start with spatially one - dimensional problem , that is @xmath29 . in this case",
    "the boltzmann equation reads : @xmath30\\times\\mathbb{r}^{3 } ,      \\end{array } \\label{eq:1d}\\ ] ] where @xmath31 and @xmath32 are the left and right boundaries respectively , @xmath33 is the component of phase space corresponding to @xmath34-direction .",
    "for the boundary condition in spatially one - dimensional case , the inward normal on the boundary in   is @xmath35 to implement the numerical method , we assume the computational domain is a limited domain @xmath36\\times[-v , v]^{3}$ ] , where @xmath37 $ ] .",
    "the computational domain is covered by a uniform cartesian mesh @xmath38 , @xmath39 with the mesh size @xmath40 and @xmath41 for space and velocity respectively .",
    "we only consider numerical method of ghost points near the left hand side boundary , since the procedure for right hand side boundary is the same . figure  [ fig:1ddomain ] illustrates a portion of mesh near left boundary @xmath31 , which is located between @xmath42 and @xmath43 .",
    "( -5,0 ) (4,0)node[midway , right ] ; ( -5,1.5 ) (4,1.5)node[midway , right ] ; ( -5,-1.5 ) (4,-1.5)node[midway , right ] ; ( 3.5,-3 ) (3.5,3)node[midway , right ] ; ( -2,-3 ) (-2,3)node[midway , right ] ;    ( -4,-0.3 ) node@xmath44 ;    ( -2.5,-0.3 ) node@xmath42 ;    ( -1.8,0.3 ) node@xmath31 ;    ( -1,-0.3 ) node@xmath45 ;    ( 0.5,-0.3 ) node@xmath46 ; ( 2,-0.3 ) node@xmath47 ;    ( -4,1.48 ) node@xmath48 ; ( -2.5,1.48 ) node@xmath48 ; ( -2,1.5 ) node@xmath49 ; ( -1,1.5 ) node@xmath50 ; ( 0.5,1.5 ) node@xmath50 ; ( 2,1.5 ) node@xmath50 ;    ( -4,0 ) node@xmath51 ; ( -2.5,0 ) node@xmath51 ;    ( -1,0 ) node@xmath51 ;    ( 0.5,0 ) node@xmath51 ; ( 2,0 ) node@xmath51 ;    ( -4,-1.51 ) node@xmath48 ; ( -2.5,-1.51 ) node@xmath48 ; ( -2,-1.5 ) node@xmath49 ;    ( -1,-1.5 ) node@xmath50 ;    ( 0.5,-1.5 ) node@xmath50 ; ( 2,-1.5 ) node@xmath50 ;    ( 4,-0.3 ) node@xmath34 ; ( 3.2,3 ) node @xmath52 ; ( 3.2,1.3 ) node @xmath53 ; ( 3.2,-1.7 ) node @xmath54 ;    we construct @xmath27 at each ghost point in following three steps : we perform an extrapolation of @xmath27 to compute a high order approximation of the outflow .",
    "then , we compute an approximation of the distribution function at the boundary using maxwell s boundary conditions . finally , we apply the inverse lax - wendroff procedure for the inflow .      at time",
    "@xmath55 we consider the outflow near the point @xmath31 , that is @xmath56 where @xmath57 .",
    "we denote by @xmath58 an approximation of @xmath27 at @xmath59    a natural idea is to extrapolate @xmath27 at the left boundary @xmath31 or the ghost points @xmath60 and @xmath44 using the values of @xmath27 on interior points .",
    "for example from the values @xmath61 , @xmath62 and @xmath63 , we can construct a lagrange polynomial @xmath64 .",
    "then by injecting @xmath31 , @xmath42 or @xmath44 into @xmath65 , we obtain the approximations of @xmath27 at the ghost points and left boundary , _",
    "i.e. _ @xmath66 , @xmath67 and @xmath68 .",
    "however , when a shock goes out of the boundary , the high order extrapolation may lead to a severe oscillation near the shock . to prevent this",
    ", we would like have a lower order accurate but more robust extrapolation .",
    "therefore , a weno type extrapolation  @xcite will be applied and described below ( see subsection  [ sec : weno ] ) for this purpose .      in the previous step ,",
    "the outflow at the boundary is obtained by extrapolation .",
    "to compute the vlaues of @xmath27 at the inflow boundary , we apply the maxwell s boundary condition  , i.e. @xmath69\\,+\\,\\alpha\\,\\mathcal{m}[f_{l , j}].\\ ] ] on the one hand the specular reflection portion is given straightly by the outflow at the left boundary , which is @xmath70\\,=\\ , f_{l , j^\\star } , \\quad{\\rm where}\\quad j^\\star=(-j_1,j_2,\\ldots , j_{3}).\\ ] ] on the other hand the diffuse one is computed by a half maxwellian @xmath71\\,\\,=\\,\\,\\mu_l\\,\\exp\\left(-\\frac{|\\mathbf{v}_{j}|^2}{2t_l}\\right),\\ ] ] where @xmath72 is the given temperature at the left wall and @xmath73 is given by @xmath74      finally we compute the values of @xmath27 at the ghost points for the inflow boundary . here",
    "we can not approximate @xmath27 by an extrapolation , since the distribution function at interior points can not predict the inflow .",
    "then we extend the inverse lax - wendroff type procedure recently proposed in @xcite for solving kinetic equations . at the left boundary @xmath31",
    ", a first order taylor expansion gives @xmath75 hence a first order approximation of @xmath27 at ghost points is @xmath76 we already have @xmath66 in the second step , thus it remains to obtain an approximation of the first derivative . by reformulating  , we have @xmath77 now instead of approximating the first derivative @xmath78 , we compute the time derivative @xmath79 and the collision operator @xmath80 .",
    "an approximation of the time derivative can be computed by using several @xmath58 at previous time levels .",
    "different approximation are obtained either a first order approximation reads @xmath81 where @xmath82 is the time step , or one can use a weno type extrapolation to approximate the time derivative ( see subsection  [ sec : weno ] below ) .",
    "the last term @xmath80 can be computed explicitly by using @xmath66 obtained in previous two steps .",
    "clearly this procedure is independent of the values of @xmath27 at interior points .",
    "let us observe that when @xmath83 we have a pure specular reflection boundary condition .",
    "a mirror procedure can be used to approximate @xmath27 at the ghost points .",
    "more precisely , by considering the boundary as a mirror , we approximate the distribution at the ghost points @xmath84 as @xmath85 where @xmath86 is the mirror image point of @xmath87 . since @xmath88 is located in interior domain , we can approximate @xmath89 by an interpolation procedure .",
    "the previous approach can be generalized to spatially two - dimensional problem .",
    "we assume @xmath90 in equation   @xmath91 where the distribution function @xmath3 is defined in @xmath92 with @xmath93 .",
    "we consider a computational domain @xmath36\\times[y_{\\min},y_{\\max}]\\times[-v , v]^{3}$ ] , such that @xmath94\\times[y_{\\min},y_{\\max}]$ ] and @xmath95 , for all @xmath96 .",
    "the computational domain is covered by an uniform cartesian mesh @xmath97 , where @xmath98 , @xmath99 are defined similarly to .",
    "the mesh steps are respectively @xmath40 , @xmath100 and @xmath41 . in figure",
    "[ fig:2ddomain ] , we present a portion of spatial mesh near the boundary . from a ghost point",
    "@xmath101 , we can find an inward normal @xmath102 , which crosses the boundary at @xmath103 .",
    "( -1,0 ) (7,0)node[right ] @xmath34 ; ( -1,1.5 ) (7,1.5)node[midway , right ] ; ( -1,3 ) (7,3)node[midway , right ] ; ( -1,4.5 ) (7,4.5)node[midway , right ] ; ( -1,6 ) (7,6)node[midway , right ] ; ( 0,-1 ) (0,7)node[left ] @xmath104 ; ( 1.5,-1 ) (1.5,7)node[midway , right ] ; ( 3,-1 ) (3,7)node[midway , right ] ; ( 4.5,-1 ) (4.5,7)node[midway , right ] ; ( 6,-1 ) (6,7)node[midway , right ] ; ( 7,-0.3 ) (-1,4)node[midway , right ] ; ( 1.2,1 ) (4.8,7)node[right ] @xmath102 ; ( -0.33,1 ) (2,4.5)node[right ] ; ( 1.3,-0.3 ) (4,4)node[right ] ; ( 3.5,4.8 ) .. controls + ( 0.2,0.1 ) and + ( -0.1,0.2 ) .. ( 4.,4.5)node[midway , above ] @xmath105 ;    ( 1.5,0 ) node@xmath48 ; ( 3,0 ) node@xmath48 ; ( 4.5,0 ) node@xmath48 ; ( 6,0 ) node@xmath48 ; ( 6,6 ) node@xmath106 ; ( 3,6 ) node@xmath106 ; ( 4.5,6 ) node@xmath106 ; ( 0,1.5 ) node@xmath48 ; ( 1.5,1.5 ) node@xmath48 ; ( 3,1.5 ) node@xmath48 ; ( 4.5,1.5 ) node@xmath50 ; ( 6,1.5 ) node@xmath50 ; ( 1.5,4.5 ) node@xmath106 ; ( 3,4.5 ) node@xmath106 ; ( 4.5,4.5 ) node@xmath106 ; ( 1.8,1.2 ) node@xmath101 ; ( 0,3 ) node@xmath48 ; ( 1.5,3 ) node@xmath50 ; ( 3,3 ) node@xmath50 ; ( 4.5,3 ) node@xmath50 ; ( 6,3 ) node@xmath50 ; ( 1.5,3 ) node@xmath106 ; ( 3,3 ) node@xmath106 ; ( 4.5,3 ) node@xmath106 ; ( 2.1,2.05 ) node@xmath103 ; ( 0,4.5 ) node@xmath50 ; ( 1.5,4.5 ) node@xmath50 ; ( 3,4.5 ) node@xmath50 ; ( 4.5,4.5 ) node@xmath50 ; ( 6,4.5 ) node@xmath50 ;    ( 0,6 ) node@xmath50 ; ( 1.5,6 ) node@xmath50 ; ( 3,6 ) node@xmath50 ; ( 4.5,6 ) node@xmath50 ; ( 6,6 ) node@xmath50 ;    ( 2,2.4 ) node@xmath49 ;    ( 0,-1.3 ) node@xmath107 ; ( 1.5,-1.3 ) node@xmath108 ; ( 3,-1.3 ) node@xmath109 ; ( 4.5,-1.3 ) node@xmath110 ; ( 6,-1.3 ) node@xmath111 ; ( -1.5,0 ) node@xmath112 ; ( -1.5,1.5 ) node@xmath113 ; ( -1.5,3 ) node@xmath114 ; ( -1.5,4.5 ) node@xmath115 ; ( -1.5,6 ) node@xmath116 ; ( 0.95,2.95 ) node@xmath49 ; ( 2.7,2 ) node@xmath49 ;    for the 2d case in space , the numerical approximation of the distribution function @xmath27 at ghost points is similar to the one dimensional case . however , there are two major differences . first to compute @xmath117 $ ] in the second step , the corresponding outflow may not locate on phase space mesh . secondly to approximate the normal derivative in the third step , besides the time derivative and collision operator we need also the tangential derivative at @xmath103 . once again , we present the method in three steps :      let us assume that the values of the distribution function @xmath27 on the grid points in @xmath118 are given . to approximate @xmath27 at a ghost point , for instance @xmath119 ,",
    "we first construct a stencil @xmath120 composed of grid points of @xmath118 for the extrapolation .",
    "for instance as it is shown in figure  [ fig:2ddomain ] , the inward normal @xmath102 intersects the grid lines @xmath121 , @xmath122 , @xmath123 .",
    "then we choose the three nearest point of the cross point in each line , _ i.e. _ marked by a large circle . from these nine points , we can build a lagrange polynomial @xmath124 .",
    "therefore we evaluate the polynomial @xmath125 at @xmath119 or @xmath103 , and obtain an approximation of @xmath27 at the boundary and at ghost points .",
    "as for the 1d case , a weno type extrapolation can be used to prevent spurious oscillations , which will be detailed in subsection  [ sec : weno ] .      in the previous step ,",
    "we have obtained the outflow @xmath126 at the boundary @xmath103 . by using   as we did for the 1d case",
    ", we can similarly compute the distribution function @xmath27 for @xmath127 .",
    "however this time to compute the distribution function for specular reflection @xmath128\\,=\\ , f(\\mathbf{x}_p,\\mathbf{v}-2(\\mathbf{v}\\cdot\\mathbf{n})\\mathbf{n}),\\quad \\forall\\mathbf{v}\\in\\mathbf{v}_{h},\\ ] ] the vector fields @xmath129 may not be located on a grid point . therefore , we interpolate @xmath27 in phase space @xmath130 using the values computed from the outflow @xmath131 such that @xmath127 .",
    "we have obtained the values of @xmath27 at the boundary points @xmath103 for all @xmath132 in previous two steps .",
    "now we reconstruct the values of @xmath27 for the velocity grid points such that @xmath133 at the ghost point @xmath101 by a simple taylor expansion in the inward normal direction . to this end , we set up a local coordinate system at @xmath103 by @xmath134 where @xmath105 is the angle between the inward normal @xmath102 and the @xmath34-axis illustrated in figure  [ fig:2ddomain ]",
    ". thus the first order approximation of @xmath135 reads @xmath136 where @xmath137 and @xmath138 is the first order normal derivative at the boundary @xmath103 .",
    "to approximate @xmath138 , we use inverse lax - wendroff procedure .",
    "firstly , we rewrite the equation   in the local coordinate system as @xmath139 where @xmath140 , @xmath141 .",
    "then a reformulation of   yields @xmath142 finally instead of approximating @xmath138 directly , we approximate the time derivative @xmath143 , tangential derivative @xmath144 and collision operator @xmath145 . similarly as in spatially 1d case , we compute @xmath143 and @xmath145 .",
    "it remains to approximate @xmath144 .",
    "for this , some neighbor points of @xmath103 at the boundary are required ( see the empty squares in figure  [ fig:2ddomain ] ) .",
    "we then perform an essentially non - oscillatory ( eno ) procedure  @xcite for this numerical differentiation to avoid the discontinuity .",
    "a weno type extrapolation  @xcite was developed to prevent oscillations and maintain accuracy .",
    "the key point of weno type extrapolation is to define smoothness indicators , which is designed to help us choose automatically between the high order accuracy and the low order but more robust extrapolation .",
    "here we describe this method in spatially 1d and 2d cases . moreover we will give a slightly modified version of the method such that the smoothness indicators are invariant with respect to the scaling of @xmath27 .",
    "assume that we have a stencil of three points @xmath146 showed in figure  [ fig:1ddomain ] and denote the corresponding distribution function by @xmath147 , @xmath148 , @xmath149 . instead of extrapolating @xmath27 at ghost point @xmath150 by lagrange polynomial",
    ", we use following taylor expansion @xmath151 we aim to obtain a @xmath152-th order approximation of @xmath153 denoted by @xmath154 , @xmath155 .",
    "three candidate substencils are given by @xmath156 in each substencil @xmath157 , we could construct a lagrange polynomial @xmath158 @xmath159 we now look for the weno type extrapolation in the form @xmath160 where @xmath161 are the nonlinear weights depending on @xmath162 .",
    "we expect that @xmath163 has @xmath152-order accurate in the case @xmath164 is smooth in @xmath165 .",
    "the nonlinear weights are given by @xmath166 with @xmath167 where @xmath168 and @xmath169 are the new smoothness indicators determined by @xmath170 we remark that the smoothness indicators @xmath171 and @xmath172 have the factors @xmath173 , which guarantee that the indicators are invariant of the scaling of @xmath162 .",
    "the two - dimensional extrapolation is a straightforward expansion of 1d case .",
    "the substencils @xmath174 for extrapolation are chosen around the inward normal @xmath102 such that we can construct lagrange polynomial of degree @xmath175 .",
    "for instance in figure  [ fig:2ddomain ] , the three substencils are respectively @xmath176 once the substencils @xmath157 are chosen , we could easily construct the lagrange polynomials in @xmath177 @xmath178 satisfying @xmath179 then the weno extrapolation has the form @xmath180 where @xmath161 are the nonlinear weights , which are chosen to be @xmath181 with @xmath182 where @xmath168 , @xmath183 , @xmath184 , @xmath185 .",
    "@xmath169 are the smoothness indicators determined by @xmath186 where @xmath14 is a multi - index and @xmath187\\times[y_p-\\delta y/2,y_p+\\delta y/2]$ ] , @xmath188 .",
    "the boltzmann equation   governs well the evolution of density @xmath27 in kinetic regime and also in the continuum regime  @xcite . however the quadratic collision operator @xmath189 has a rather complex form such that it is very difficult to compute .",
    "hence different simpler models have been introduced .",
    "the simplest model is the so - called bgk model  @xcite , which is mainly a relaxation towards a maxwellian equilibrium state @xmath190-f ) , \\label{eq : bgkoperator}\\ ] ] where @xmath191 depends on macroscopic quantities @xmath8 and @xmath10 .",
    "although it describes the right hydrodynamical limit , the bgk model does not give the navier - stokes equation with correct transport coefficients in the chapman - enskog expansion .",
    "et al . _",
    "@xcite proposed the es - bgk model , where the maxwellian @xmath192 $ ] in the relaxation term of   is replaced by an anisotropic gaussian @xmath193 $ ] .",
    "this model has correct conservation laws , yields the navier - stokes approximation via the chapman - enskog expansion with a prandtl number less than one , and yet is endowed with the entropy condition  @xcite . in order to introduce the gaussian model , we need further notations .",
    "define the opposite of the stress tensor @xmath194 therefore the translational temperature is related to the @xmath195 .",
    "we finally introduce the corrected tensor @xmath196(t,\\mathbf{x}),\\ ] ] which can be viewed as a linear combination of the initial stress tensor @xmath197 and of the isotropic stress tensor @xmath198 developed by a maxwellian distribution , where @xmath199 is the identity matrix .",
    "the es - bgk model introduces a corrected bgk collision operator by replacing the local equilibrium maxwellian by the gaussian @xmath193 $ ] defined by @xmath200=\\frac{\\rho}{\\sqrt{\\text{det}(2\\pi\\mathcal{t})}}\\exp\\left(-\\frac{(\\mathbf{v}-\\mathbf{u})\\mathcal{t}^{-1}(\\mathbf{v}-\\mathbf{u})}{2}\\right).\\ ] ] thus , the corresponding collision operator is now @xmath201-f ) , \\label{eq : esbgkoperator}\\ ] ] where @xmath191 depends on @xmath8 and @xmath10 , the parameter @xmath202 is used to modify the value of the prandtl number through the formula @xmath203 it follows from the above definitions that @xmath204(\\mathbf{v})\\,d\\mathbf{v }   = \\rho , } & \\\\ \\ ; \\\\ \\displaystyle { \\int_{\\mathbb{r}^{3}}\\mathbf{v}\\ , f(\\mathbf{v})\\,d\\mathbf{v } = \\int_{\\mathbb{r}^{3 } } \\mathbf{v}\\,{\\mathcal{g}}[f](\\mathbf{v})\\,d\\mathbf{v }   = \\rho\\,\\mathbf{u } , } & \\\\ \\ , \\\\",
    "\\displaystyle { \\int_{\\mathbb{r}^{3 } } \\frac{|\\mathbf{v}|^2}{2}\\,f(\\mathbf{v})\\,d\\mathbf{v }   = \\int_{\\mathbb{r}^{3 } } \\frac{|\\mathbf{v}|^2}{2}\\,{\\mathcal{g}}[f](\\mathbf{v})\\,d\\mathbf{v }   = e } & \\end{array}\\right .",
    "\\label{eq : esbgkmacro}\\ ] ] and @xmath205 \\,d\\mathbf{v } \\ , = \\ , \\rho \\,\\mathcal{t}. & \\end{array}\\right.\\ ] ]",
    "this implies that this collision operator does indeed conserve mass , momentum and energy as imposed .    in this section",
    ", we will first recall the implicit - explicit ( imex ) scheme to the es - bgk equation proposed in  @xcite .",
    "then we apply our ilw procedure to treat the boundary condition for es - bgk model case .",
    "we now introduce the time discretization for the es - bgk equation  ,   @xmath206 -f ) ,       \\quad \\mathbf{x } \\in \\omega\\subset\\mathbb{r}^{d_{\\mathbf{x}}},\\ , \\mathbf{v}\\in \\mathbb{r}^{3 } , }     \\\\    \\ ,    \\\\",
    "f(0,\\mathbf{x},\\mathbf{v } )   \\,=\\ , f_{0}(\\mathbf{x},\\mathbf{v } ) , \\quad \\mathbf{x}\\in\\omega,\\,\\mathbf{v}\\in\\mathbb{r}^{3 } ,   \\end{array}\\right.\\ ] ] where @xmath191 depends on @xmath8 , @xmath9 and @xmath10 .",
    "the time discretization is an imex scheme .",
    "since the convection term in ( [ eq : deb ] ) is not stiff , we will treat it explicitly .",
    "the source terms on the right hand side of ( [ eq : deb ] ) will be handled using an implicit solver .",
    "we simply apply a first order imex scheme , @xmath207-f^{n+1 } ) , }    \\\\    \\ ,    \\\\",
    "f^0(\\mathbf{x},\\mathbf{v } )   = f_{0}(\\mathbf{x},\\mathbf{v})\\ , .",
    "\\end{array}\\right.\\ ] ] this can be written as @xmath208 \\,+\\ , \\frac{\\tau^{n+1 } \\delta t}{\\varepsilon+\\tau^{n+1 } \\delta t}\\,\\mathcal{g}[f^{n+1 } ] ,   \\end{aligned}\\ ] ] where @xmath209 is the anisotropic maxwellian distribution computed from @xmath210 .",
    "although ( [ ap-1 ] ) appears nonlinearly implicit , since the computation of @xmath210 requires the knowledge of @xmath211 $ ] , it can be solved explicitly . specifically , upon multiplying ( [ ap-1 ] ) by @xmath212 defined by @xmath213 and use the conservation properties of @xmath214 and the definition of @xmath193 $ ] in  , we define the macroscopic quantity @xmath215 by @xmath216 computed from @xmath27 and get @xmath217(\\mathbf{v})\\,d\\mathbf{v},\\ ] ] or simply @xmath218 thus @xmath219 can be obtained explicitly .",
    "this gives @xmath220 and @xmath221 .",
    "unfortunately , it is not enough to define @xmath211 $ ] for which we need @xmath222",
    ". therefore , we define the tensor @xmath223 by @xmath224 and multiply the scheme ( [ ap-1 ] ) by @xmath225 . using the fact that @xmath226(\\mathbf{v})\\,d\\mathbf{v } =   \\rho\\ , \\left(\\mathcal{t}\\,+\\ , \\mathbf{u } \\otimes \\mathbf{u}\\right),\\ ] ] and ( [ sigm ] ) , we get that @xmath227 now @xmath211 $ ] can be obtained explicitly from @xmath219 and @xmath228 and then @xmath210 from ( [ ap-1 ] ) .",
    "finally the scheme reads @xmath229 \\,+\\ , \\frac{\\tau^{n+1 } \\delta t}{\\varepsilon+\\tau^{n+1 } \\delta t}\\,\\mathcal{g}[f^{n+1 } ] } ,     \\end{array}\\right.\\ ] ]    the scheme   is an ap scheme for  . on the one hand , although   is nonlinearly implicit , is can be solved explicitly . on the other hand",
    ", the scheme   preserves the correct asymptotic  @xcite , which means when holding the mesh size and time step fixed and letting the knudsen number go to zero , the scheme becomes a suitable scheme for the limiting hydrodynamic models .",
    "we have described the numerical method for boundary condition to general kinetic equations in spatially 1d and 2d case . to implement this method , it remains to replace the collision operator @xmath189 in   or   by the es - bgk operator  .",
    "assume that the approximation to the distribution function at the boundary @xmath131 is known for all @xmath230 .",
    "then , the macroscopic quantities @xmath8 , @xmath9 and @xmath231 at the boundary point @xmath103 can be obtained using   and  . therefore , substituting these macroscopic quantities in  , we compute the stress tensor @xmath197 at the boundary point @xmath103 , such that the corrected tensor @xmath232 .",
    "thus @xmath193 $ ] is computed for all points @xmath233 , where @xmath230 .",
    "in this section , we present a large variety of test cases in @xmath234 and @xmath235 in space and three dimensional in velocity space showing the effectiveness of our method to get an accurate solution of boltzmann type equations set in a complex geometry with different boundary conditions .",
    "we first give an example on a flow generated by gradients of temperature , which has already been treated by dsmc or other various methods @xcite .    finally , we present some numerical results in @xmath235 .",
    "we consider the es - bgk equation ( [ eq : boltzmann])-([eq : esbgkoperator ] ) @xmath236 with an initial datum @xmath237 which is a perturbation of the constant state in space and a maxwellian distribution function in velocity , that is , @xmath238 with a density @xmath239 .",
    "we consider purely diffusive boundary conditions with a wall temperature @xmath240 .",
    "the solution is expected to be smooth for short time and then may develop a discontinuity at the boundary , which may propagate in the physical domain .",
    "we perform several numerical simulations on a time interval @xmath241 $ ] with @xmath242 , a computational domain in space @xmath243 $ ] such that @xmath244 and a domain in velocity @xmath245 ^ 3 $ ] .",
    "then , we choose a grid in space for @xmath246 constituted of @xmath247 points and a grid @xmath248 for the velocity space with @xmath249 points for each direction with respectively @xmath250 , @xmath251 , ... , @xmath252 .",
    "let us emphasize that the boundary points @xmath253 and @xmath254 are not exactly located on a grid point . since we do nt know an exact solution of the problem , we compute relative errors . more precisely , an estimation of the relative error in @xmath255 norm at time @xmath10 is given by @xmath256 where @xmath257 represents the approximation computed from a mesh of size @xmath258 .",
    "the numerical scheme is said to be @xmath259-th order if @xmath260 , for all @xmath261 .    in table",
    "[ table1 ] we compute the order of convergence in @xmath255 norm of our numerical methods .",
    "we can clearly see the expected second order convergence .",
    "moreover , we verify experimentally that our scheme is also second - order accurate at the boundary since the discontinuity occuring at @xmath262 is perfectly located .",
    ".smooth solutions : _ experimental order of convergence in @xmath255 norm .",
    "_ [ cols=\"^,^,^,^,^\",options=\"header \" , ]      in this section , we desire to simulate high - speed airflow around a half airfoil ( see figure  [ fig : wing ] ) .",
    "the boundary is separated by four parts @xmath263 on the right and left hand sides @xmath264 , @xmath265 , we use the same incoming flux  ,  . on the top part @xmath266 ,",
    "the incoming flow is given by the initial value @xmath267 finally at the bottom @xmath268 , we use a purely specular reflection boundary condition .",
    "the parameters @xmath269 , @xmath270 , @xmath271 , @xmath272 , @xmath273 have the same values as in the previous test .",
    "we use again   as the initial solution .",
    "( 0,0 ) node ; ( -3,0 ) node@xmath265 ; ( 3.5,0 ) node@xmath264 ; ( 0.5,2.0 ) node@xmath266 ; ( 0.5,-1.7 ) node@xmath274 ;    we note that on the profile of airfoil we can not use the neighbor points to approximate the tangential derivative @xmath144 in  .",
    "it is because these neighbor points are not on the same straight .",
    "here we approximate the tangential derivative by using the distribution function of interior domain .    in the following tests , we consider only the situations in hydrodynamic regime , _",
    "i.e. _ @xmath275 , for comparing the ones in literature  @xcite .",
    "a @xmath276 mesh is used in domain @xmath277 .",
    "we use a limit velocity domain @xmath278 ^ 3 $ ] with mesh size @xmath279 .",
    "two different tests of transonic airflow around this half airfoil are considered : @xmath280 and @xmath281 .",
    "we choose first @xmath282 .",
    "so we observe in figures  [ fig : density_wing_m1][fig : mach_wing_m1 ] that the flow field around the object includes both sub- ( @xmath283 ) and supersonic ( @xmath284 ) parts .",
    "the transonic ( @xmath285 ) period begins when first zones of @xmath286 flow appear around the object .",
    "supersonic flow can decelerate back to subsonic before the trailing edge . in the case",
    "@xmath287 ( see in figures  [ fig : density_wing_m2][fig : mach_wing_m2 ] ) , the zone of @xmath286 flow increases towards both leading and trailing edges .",
    "there is a normal shock created at trailing edge .",
    "the flow decelerates over the shock , but remains supersonic .",
    "moreover a normal shock is created ahead of the object , and the only subsonic zone in the flow field is a small area around the object s leading edge .",
    "in this paper we present an accurate method based on cartesian mesh to deal with complex geometry boundary for kinetic models set in a complex geometry .",
    "we desire to reconstruct the distribution function @xmath27 on some ghost points for computing transport operator . for this",
    "we proceed in three steps : first we extrapolate the distribution function @xmath27 on ghost points for outflow .",
    "then we use the boundary conditions to compute the inflow at the boundary .",
    "finally we implement an inverse lax - wendroff procedure to give an accurate approximation of @xmath27 for inflow on the ghost points .",
    "a spatially one - dimensional example is given to show that this method has second order accuracy in @xmath288 norm .",
    "moreover some @xmath0 and @xmath1 illustrate that our method can reproduce the similar results as the ones in literature .                      , _ kinetic theory of shock structure using an ellipsoidal distribution function _",
    ", in rarefied gas dynamics , vol .",
    "i ( proc . fourth internat .",
    "toronto , 1964 ) , pages 193 - 215 . academic press , new york , 1966 ."
  ],
  "abstract_text": [
    "<S> in this paper we present a new algorithm based on a cartesian mesh for the numerical approximation of kinetic models on complex geometry boundary . due to the high dimensional property , numerical algorithms based on unstructured meshes for a complex geometry are not appropriate . here </S>",
    "<S> we propose to develop an inverse lax - wendroff procedure , which was recently introduced for conservation laws @xcite , to the kinetic equations . </S>",
    "<S> applications in @xmath0 and @xmath1 of this algorithm for boltzmann type operators ( bgk , es - bgk models ) are then presented and numerical results illustrate the accuracy properties of this algorithm </S>",
    "<S> .        keywords . </S>",
    "<S> inverse lax - wendroff procedure , weno , boltzmann type models </S>"
  ]
}
{
  "article_text": [
    "the broadcast nature of wireless medium allows one sender to simultaneously serve multiple receivers who are interested in the same data .",
    "we consider a block - based wireless broadcast system where a sender wishes to deliver a block of data packets to a set of receivers , with the channels between the sender and the receivers are subject to independent random packet erasures .",
    "a traditional approach is to send the data packets unaltered under a receiver feedback mechanism , such as automatic - repeat - request ( arq ) @xcite .",
    "this approach , though simple , is inefficient in terms of throughput , as the transmitted packets are non - innovative to the receivers who have already received them .",
    "the advent of network coding @xcite starts a new era for high throughput network coded wireless communications @xcite . by linearly adding all data packets together with randomly chosen coefficients from a sufficiently large finite field , random linear network coding ( rlnc ) can almost surely achieve the optimal block completion time in block - based wireless broadcast @xcite , which is defined as the number of transmissions it takes to complete the broadcast , and is a fundamental measure of throughput due to their inverse relation under a fixed block size .",
    "compared to other optimal codes such as fountain codes @xcite , rlnc is preferred due to its ease of implementation at the sender and extension to more complex networks and traffic settings .",
    "however , with rlnc , data packets are block - decoded by solving a set of linear equations , which only takes place after a sufficient number of coded packets have been received .",
    "rlnc thus may suffer from heavy computational load @xcite and packet decoding delay @xcite , which is measured by the average time it takes for a receiver to decode a data packet .",
    "the first issue can , for example , hinder the application of rlnc for mobile receivers with limited computational capability @xcite .",
    "meanwhile , a large packet decoding delay can be unacceptable for delay - sensitive applications such as video streaming @xcite .",
    "to mitigate these issues , instantly decodable network coding ( idnc ) techniques @xcite have been introduced . with idnc ,",
    "the sender first broadcasts the data packets uncoded once .",
    "it then makes online coding decisions based on receivers feedback about their packet reception state , under the restriction that coding / decoding is over binary field .",
    "a simple packet reception state is demonstrated in table [ tab : simple_sfm ] .",
    "there are two data packets , @xmath0 and @xmath1 , and three receivers , @xmath2 to @xmath3 , where each has a subset of @xmath4 and wants the rest .",
    "consider a coded packet of @xmath5 , where @xmath6 denotes binary xor .",
    "it has three different effects on different receivers : 1 ) it is instantly decodable to @xmath7 , because @xmath7 can decode @xmath1 by performing @xmath8 ; 2 ) it is non - instantly decodable to @xmath9 , because @xmath9 has neither @xmath0 nor @xmath1 ; and 3 ) it is non - innovative to @xmath3 , because @xmath3 already has both @xmath0 and @xmath1 .",
    "there are two main types of idnc techniques .",
    "the first one , called strict idnc ( s - idnc ) @xcite , prohibits the transmissions of non - instantly decodable packets to any receiver .",
    "effectively , each coded packet can include at most one wanted data packet of every receiver .",
    "the second one , called general idnc ( g - idnc ) , removes this restriction to generate more coding opportunities .",
    "there is a large body of research on g - idnc , focusing on its throughput and decoding delay performance , coding algorithms , and transmission schemes .",
    "early models and heuristics related to g - idnc were proposed for index coding @xcite .",
    "then g - idnc was introduced for wireless broadcast and was graphically modeled in @xcite . although its best performance remains unidentified , powerful heuristic algorithms have been developed to improve its throughput and/or decoding delay @xcite , or to strike a balance between the two @xcite .",
    "g - idnc transmission schemes under full / intermittent receiver feedback have been developed @xcite .",
    "g - idnc has also been adopted in wireless broadcast applications with hard decoding deadlines @xcite or with receiver cooperation @xcite .",
    ".a simple packet reception state for idnc coding [ cols=\"^,^,^\",options=\"header \" , ]     [ tab : delay_sfm ]    in the presence of packet erasures , the sender needs to adopt a _",
    "coded transmission phase_. in each coded transmission , it selects and broadcasts a coding set through erasure - prone wireless channels .",
    "we denote by @xmath10 the block completion time of this phase , and by @xmath11 the apdd of this phase , calculated as in . @xmath10 and @xmath11 measure the throughput and decoding delay performance of this phase , respectively .",
    "they vary according to the idnc solutions , transmission schemes , and erasure patterns .",
    "but it always holds that @xmath12 and @xmath13 if s - idnc is applied .",
    "therefore , @xmath14 and @xmath15 reflect the performance limits of s - idnc .",
    "hence , we will first study these limits in the next section , and then design s - idnc transmission schemes and coding algorithms in sections [ sec : schemes ] and [ sec : algorithms ] , respectively .",
    "in this section , we study performance limits and properties of s - idnc and compare it with g - idnc .",
    "we first study the throughput limit of s - idnc , measured by the absolute minimum block completion time @xmath16 .",
    "it has been proved that @xmath16 is equal to the size of the minimum clique partition solution is the minimum set of disjoint cliques of @xmath17 that together cover all the vertices .",
    "] of @xmath18 @xcite , denoted by @xmath19 .",
    "this equivalence holds because of the following property :    [ prpt : vertex_remove ] removing any vertex from the s - idnc graph does not change the connectivity of the remaining vertices .",
    "this property holds because vertices in @xmath18 represent different data packets .",
    "thus , to remove all vertices from @xmath18 ( i.e. , to complete the broadcast ) , at least @xmath20 cliques must be removed , which yields @xmath21 .    according to graph theory",
    ", @xmath20 is equal to the chromatic number is the minimum number of colors to color the vertices so that any two connected vertices have different colors . ]",
    "@xmath22 ) of the complementary graph @xmath23 , which has the same vertex set as @xmath18 , but has opposite vertex connectivity .",
    "we thus have @xmath24 .",
    "this equality enables us to answer two important questions about @xmath16 : 1 ) how to find the @xmath16 of a given s - idnc graph ?",
    "2 ) what are the statistical characteristics of @xmath16 under random packet erasures ?      the chromatic number of a graph ( and thus @xmath16 ) has been proven to be np - hard to find and axp - hard to approximate @xcite .",
    "but there are heuristic algorithms and bounds for it",
    ". we will develop algorithms dedicated to s - idnc in section [ sec : algorithms ] , and focus on the bounds in this subsection .",
    "tight bounds on @xmath25 exist , but are also np - hard to find .",
    "one such example is a tight lower bound @xmath26 @xcite , the size of the largest clique of @xmath23 .",
    "there are also loose bounds .",
    "for example :    all s - idnc graphs with @xmath27 vertices and @xmath28 edges have : @xmath29 where @xmath30 outputs the smallest integer greater than @xmath31 .",
    "this bound is due to geller @xcite and its proof is omitted here .",
    "this bound is useful because it identifies the smallest _ achievable _ @xmath16 of all the s - idnc graphs with @xmath27 vertices and @xmath28 edges .",
    "an existing upper bound on @xmath25 is @xmath32 @xcite , where @xmath33 is the largest number of edges incident to any single vertex in @xmath23 .",
    "however , with given @xmath27 and @xmath28 , this bound is not always achievable . to see this ,",
    "assume @xmath23 has @xmath34 edges .",
    "connecting these edges to the same vertex yields an upper bound of @xmath35 .",
    "but no matter how we allocate these edges , there are always unconnected vertices in @xmath23 , which indicates that @xmath36 .",
    "hence , the upper bound is not achievable here .",
    "we are thus motivated to derive an achievable upper bound of @xmath16 as a function of @xmath27 and @xmath28 .",
    "we first note that a set of pairwise unconnected vertices ( a.k.a . an independent set ) of @xmath18 , denoted by @xmath37 ,",
    "must be transmitted separately because their corresponding packets all conflict with each other .",
    "the size of @xmath37 is @xmath27 when there is no edge in @xmath18 , indicating that @xmath38 .",
    "then , whenever a new edge is added to the graph , we can maximize @xmath16 by maximizing @xmath39 , which means that the edge should not connect two vertices in @xmath37 whenever possible .",
    "explicitly , our upper bound on @xmath16 is derived iteratively :    * when there is no edge in the graph , we have @xmath40 ; * when there are @xmath41 $ ] edges , we can use them to connect @xmath42 with @xmath43 .",
    "since @xmath43 are independent , we have @xmath44 ; * when there are up to @xmath45 additional edges , i.e , when @xmath46 $ ] , we can use these additional edges to connect @xmath47 with @xmath48 .",
    "since @xmath48 are independent , we have @xmath49 ; * the iterations will terminate when the graph is complete , i.e. , when @xmath50 and @xmath51 .",
    "it can be easily proved that any reallocation of edges will reduce the @xmath16 derived above to a smaller value .",
    "our upper bound on @xmath16 has the following stair - case profile :    all s - idnc graphs with @xmath27 vertices and @xmath28 edges have : @xmath52\\\\ k-2,&m_0=[k,2k-3]\\\\ \\cdots,&\\cdots\\\\ 1,&m_0=k(k-1)/2 \\end{cases}\\ ] ]      in addition to finding @xmath16 for a given s - idnc graph , we are also interested in the statistical characteristics of @xmath16 , for which we assume that @xmath53 ( and thus @xmath18 ) is obtained as a consequence of random packet erasures in the systematic transmission phase .    for wireless broadcast , a common assumption on random packet erasures",
    "is that they are i.i.d .",
    "random variables with a probability of @xmath54 . under this assumption ,",
    "a similar question has already been introduced and answered for the rlnc technique .",
    "it has been shown in @xcite that the block completion time of rlnc scales as @xmath55 when @xmath27 is a constant .",
    "consequently , the throughput of rlnc vanishes with increasing number of receivers @xmath56 . to prevent zero throughput ,",
    "it has been proved in @xcite that @xmath27 should scale faster than @xmath57 .",
    "since the throughput of rlnc is optimal , it can not be exceeded by the throughput of s - idnc .",
    "hence , we can infer that the throughput of s - idnc should also follow a vanishing behavior with increasing @xmath56 .",
    "however , its rate and specific dependence on system parameters have not been fully characterized in the literature . in this subsection",
    ", we answer this question through the following theorem :    [ theo : us ] the mean of the absolute minimum block completion time @xmath16 is a function of the block size @xmath27 , the number of receivers @xmath56 , and packet erasure probability @xmath54 as follows : @xmath58&=\\left[-k\\left(\\frac{1}{2}+o(1)\\right)\\log_k(1-p_e^2)\\right]\\cdot n\\label{eq : u_parameters}\\\\ & = c(k , p_e)\\cdot n\\end{aligned}\\ ] ] where @xmath59 is a small term that approaches zero with increasing @xmath27 .",
    "our approach is to model the complementary s - idnc graph @xmath23 as a random graph with i.i.d .",
    "edge generating probability .",
    "recall that two vertices in @xmath23 are connected if the two data packets conflict , i.e. , if at least one receiver has missed both packets .",
    "therefore , the edge generating probability , denoted by @xmath60 , is calculated as : @xmath61    then , the key is to prove that different edges are generated independently .",
    "we first consider the independency between two adjacent edges , say @xmath62 and @xmath63 , which share @xmath42 .",
    "the information carried by @xmath64 ( resp .",
    "@xmath65 ) is that there is at least one receiver who wants both @xmath0 and @xmath1 ( resp . @xmath0 and @xmath66 ) .",
    "hence , the mutual information between @xmath64 and @xmath65 is that @xmath0 is wanted by at least one receiver , which happens with a probability of @xmath67 .",
    "thus : @xmath68 the inequality holds because other edges incident to @xmath0 also contribute to @xmath69 .",
    "it is clear that @xmath70 quickly converges to zero with increasing @xmath56 , indicating that @xmath62 and @xmath63 are asymptotically independent of each other .",
    "we note that two disjoint edges in @xmath23 share no mutual information , and thus are mutually independent .",
    "therefore , we can assume that edges in @xmath23 are independently generated .",
    "consequently , @xmath23 can be modeled as an erds - rnyi random graph @xcite , which has @xmath27 vertices and i.i.d .",
    "edge generating probability of @xmath60 .",
    "fig.[fig : m0 ] compares the mean number of edges ( with a value of @xmath71 ) of our proposed random graph model and the simulated average number of edges in @xmath23 .",
    "our model shows virtually no deviation under all considered values of @xmath56 and @xmath27 .     when @xmath72 and @xmath73 $ ] .",
    "]    from graph theory , given @xmath27 and @xmath60 , almost every random graph @xmath23 has a chromatic number of : @xmath74 since @xmath24 , the above value is the mean of @xmath16 . by substituting into",
    "we obtain .",
    "theorem [ theo : us ] has the following important corollary :    [ cor : u_linear_n ] the mean of the absolute minimum block completion time , @xmath75 $ ] , of s - idnc increases linearly with the number of receivers in wireless broadcast with i.i.d .",
    "random packet erasures .",
    "then , by noting that the mean block completion time of the coded transmission phase is lower bounded by @xmath75 $ ] , we conclude that the throughput of s - idnc is significantly affected by the number of receivers .",
    "s - idnc may not be a good choice when the number of receivers is large .",
    "we note that the above theorem and corollary are not directly applicable to g - idnc , because the edge generating probability in g - idnc is quite different .",
    "interested readers are referred to @xcite for more information .      unlike @xmath16 , to the best of our knowledge",
    "there is no existing hardness result on finding @xmath76 . in this subsection , we address it through the following theorem and then propose an upper bound on @xmath76 .",
    "[ theo : d_hard ] it is np - hard to find the absolute minimum apdd @xmath76 of s - idnc .",
    "in order to prove it , we introduce the concept of _ perfect s - idnc solution _ :    an s - idnc solution is perfect and is denoted by @xmath77 if every receiver @xmath78 can decode one of its @xmath79 wanted data packets from each of the first @xmath79 coding sets in @xmath77 .",
    "this definition implies that @xmath77 , if it exists , offers the perfect packet decoding . hence",
    ", its minimum apdd @xmath80 is not only the absolute minimum apdd @xmath76 of s - idnc , but also a lower bound @xmath81 of the minimum apdd of all other linear network coding techniques .",
    "moreover , it can be easily shown that this lower bound can only be achieved by @xmath77 .",
    "it has been proved in @xcite that it is np - hard to determine the achievability of @xmath81 .",
    "hence , it is np - hard to determine the existence of @xmath77 .",
    "then by contradiction , if it is not np - hard to find @xmath76 , we can easily determine the existence of @xmath77 by comparing @xmath76 with @xmath80 .",
    "therefore , it is np - hard to find @xmath76 .    besides the np - hardness",
    ", @xmath76 has the following property :    the absolute minimum apdd @xmath76 is upper bounded by @xmath16 as @xmath82 [ propt : d_bound ]    given an s - idnc solution @xmath83 , let @xmath84 be the number of receivers who can decode a data packet from @xmath85 .",
    "the minimum apdd of @xmath86 is thus : @xmath87 which is maximized when @xmath88 . in this case ,",
    "@xmath89 . applying this result to an s - idnc solution with absolute minimum block completion time @xmath90",
    ", we obtain the result .",
    "our proof indicates that , although it is np - hard to achieve @xmath76 , we can still effectively reduce apdd by reducing the s - idnc solution size .",
    "before we further explore this result to implement s - idnc , we would like to compare the performance limits of s - idnc that we have just derived with g - idnc .      in this subsection",
    ", we address the question of _ how does s - idnc compare with g - idnc ? _    we first note that the np - hardness of finding @xmath76 also holds for @xmath91 .",
    "this is because the perfect s - idnc solution @xmath77 is also the best possible g - idnc solution . for the throughput ,",
    "we first present a relation between s- and g - idnc graphs ( proved in the appendix ) :    [ theo : equal_solutions ] the minimum clique partition solutions of s - idnc and g - idnc graphs have the same size .",
    "in other words , @xmath92 .    however , the above theorem does not imply @xmath93 .",
    "this is because g - idnc does not have property [ prpt : vertex_remove ] .",
    "explicitly , by removing a vertex from @xmath94 , more edges and larger cliques may be generated , and thus the absolute minimum block completion time @xmath95 can be smaller than @xmath96 of the original g - idnc graph @xmath94 @xcite .",
    "we thus have @xmath97 .",
    "we note , however , that a systematic way of finding @xmath95 other than brute - force search remains widely open",
    ".    therefore , when there are no packet erasures , the throughput of g - idnc is at least as good as s - idnc . but is this still true in more realistic erasure - prone scenarios ? in the next section , we will design s - idnc transmission schemes under packet erasures and compare them with g - idnc .",
    "we will apply the above theorem to show that g - idnc can not outperform s - idnc under certain circumstances .",
    "in this section , we design s - idnc transmission schemes to compensate for packet erasures in the coded transmission phase , which are i.i.d . with a probability of @xmath54 . to this end",
    ", the sender has to regularly collect feedback from the receivers about their packet reception state to make online coding decisions .",
    "we consider two common types of feedback frequency , namely :    1 .",
    "fully - online feedback : feedback is collected after every coded transmission",
    ". however , this could be costly in wireless communications .",
    "we thus also consider a reduced feedback frequency next ; 2 .   semi - online feedback : feedback is only collected after several ( to be quantified later ) coded transmissions ;    to be able to design s - idnc transmission schemes , two questions need to be answered first :    1 .   what is the optimization objective for throughput and decoding delay improvement ?",
    "2 .   what does the sender need to send to achieve it ?    before addressing these questions , we first highlight some challenges :    [ remark : tractable_matrics ] under random packet erasures , a reasonable measure of throughput is the mean block completion time @xmath98 $ ] of the coded transmission phase . however , it is intractable to minimize @xmath98 $ ] . to see this ,",
    "let us consider the stochastic shortest path ( ssp ) method @xcite .",
    "in ssp method , the state space comprises the current sfm and its successors , and thus has a prohibitively large size with a value of @xmath99 , where @xmath100 is the number of `` 1 ' 's in @xmath53 .",
    "the action space for each state comprises all cliques / coding sets , which is np - hard to find @xcite .",
    "then , @xmath98 $ ] is recursively minimized by examining all the states and the associated actions .",
    "such examination is necessary , because the packet erasures can take any pattern and are not predictable .",
    "but it makes @xmath98 $ ] intractable to minimize . to overcome this difficulty",
    ", we will turn to optimization objectives that are heuristic , but still based on ssp optimization principles .",
    "[ remark : u_prior ] it is intractable to minimize the apdd @xmath11 of the coded transmission phase due to the np - hardness of finding @xmath76 , because otherwise by setting @xmath101 , the minimum @xmath11 is equal to @xmath76 . to overcome this difficulty",
    ", we will give higher priority to the minimization of block completion time .",
    "in other words , we first minimize the block completion time .",
    "then among the resultant coding decisions , we choose the one that minimizes the decoding delay .",
    "our prioritization reflects the motivation of using network coding , that is , to achieve better throughput performance .",
    "it also provides bounded decoding delay performance as we have shown in .",
    "this will also be confirmed by our simulations , which show that @xmath11 generally decreases with decreasing @xmath10 .      with fully - online feedback frequency ,",
    "the sender only transmits one coded packet before collecting feedback . under the ssp method",
    ", the current state is the current sfm @xmath53 , the absorbing state is the all - zero sfm and is denoted by @xmath102 .",
    "the action space comprises all the s - idnc coding sets of @xmath53 .",
    "the cost of each action is one , for it consumes one transmission .",
    "the block completion time @xmath10 is thus equal to the number of transitions ( a.k.a .",
    "path length or distance ) between @xmath53 and @xmath102 .",
    "according to remark  1 , it is intractable to choose an action / coded packet that minimizes the expected path length ( and thus @xmath98 $ ] ) . as a heuristic alternative ,",
    "we propose to choose an action / coded packet that belongs to the shortest path from @xmath53 to @xmath102 , which has a length of @xmath16 .",
    "this choice guarantees that , upon the reception of the coded packet at all interested receivers , the shortest distance between the updated state @xmath103 and @xmath102 is minimized to @xmath104 . to this end",
    ", the coded packet must belong to a minimum clique partition solution @xmath19 . otherwise , the shortest distance between @xmath103 and @xmath102 is still @xmath16 .",
    "we then reduce apdd by forcing the coded packet to be maximal ( and thus serving the maximal number of receivers ) .",
    "however , cliques in a minimum clique partition solution are not necessarily maximal .",
    "hence , we further require the coded packet to belong to a set of @xmath16 maximal cliques that together cover all the data packets .",
    "this set is also an s - idnc solution and is denoted by @xmath105 .    in conclusion ,",
    "we propose the following coded packet @xmath106 for fully - online transmission scheme :    _ given an sfm instance , the preferred coded packet @xmath106 is the most wanted coded packet in @xmath105 , where @xmath105 is an s - idnc solution that contains @xmath16 maximal cliques . _      the fully - online transmission scheme is costly , not only in collecting feedback , but also in computational load , as it has to find @xmath105 in every time slot .",
    "these problems can be mitigated by partitioning the coded transmission phase into rounds . in each round",
    ", the sender transmits a complete s - idnc solution and only collects feedback at the end of each round .",
    "we call this scheme the semi - online scheme .    under the ssp method ,",
    "the action space is the set of all s - idnc solutions @xmath107 , and the cost of each action is the solution size @xmath108 , which is equal to the length of a semi - online transmission round .",
    "the total cost is thus equal to the block completion time .",
    "according to remark 1 , it is intractable to minimize the expected total cost ( and thus @xmath98 $ ] ) . as a heuristic alternative , we propose to minimize the expected cost of the shortest path between @xmath53 and @xmath102 .",
    "the shortest path has a length of one , representing the event that every coded packet of the chosen solution @xmath86 is received by all the interested receivers after only one semi - online round .",
    "denote the probability of this event by @xmath109 .",
    "then the expected cost is @xmath110 , where @xmath109 is calculated as : @xmath111 here @xmath112 is called the packet diversity and is defined below .",
    "the diversity @xmath112 of data packet @xmath113 is the number of coding sets in @xmath86 that comprise @xmath113 .",
    "we note that the minimum clique partition solution @xmath19 is not a preferred semi - online s - idnc solution .",
    "although @xmath19 offers the smallest solution size ( @xmath114 ) , it does not maximize @xmath109 because every data packet has a diversity of only one due to disjoint cliques in @xmath19 .",
    "instead , the @xmath105 we have proposed for the fully - online case can offer a higher @xmath109 than @xmath19 due to possibly overlapping maximal cliques , while also offering the smallest solution size .",
    "we still wish to answer the following question before choosing @xmath105 as our preferred semi - online s - idnc solution : _ is there a solution that , though large in its size , provides higher packet diversities , so that @xmath109 is maximized ? _",
    "an explicit answer to this question is difficult to obtain , because it requires the examination of all the solutions of size greater than @xmath16 .",
    "such search is costly and does not provide any insight into this question . moreover , a solution with a larger block completion time is unlikely to provide higher packet diversities due to the following property of s - idnc solutions :    every coding set in an s - idnc solution comprises at least one data packet with a diversity of one .",
    "this property holds because if every data packet in a coding set has a diversity of greater than one , then this coding set can be removed from the solution without affecting the completeness of the solution . due to the above property",
    ", an s - idnc solution @xmath86 has at least @xmath108 data packets with a diversity of only one . according to ,",
    "these unit - diversity data packets reduce @xmath109 the most .",
    "therefore , we choose @xmath105 for throughput improvement .",
    "then , by taking into account our secondary optimization objective , i.e. , the apdd , we define our preferred semi - online s - idnc solution as follows :    _ given an sfm instance , the proposed semi - online s - idnc solution is @xmath105 , which comprises a set of @xmath16 maximal cliques .",
    "the cliques are sorted for transmission in the descending order of their numbers of targeted receivers to minimize the apdd . _        a flow - chart of the proposed two transmission schemes",
    "are presented in fig.[fig : flow ] .",
    "both the fully- and semi - online idnc schemes require finding @xmath105 .",
    "since packet diversity is not a concern in graph theory , there is no algorithms to find @xmath105 in the graph theory literature .",
    "hence , we will design algorithms dedicated for s - idnc in the next section . before doing so ,",
    "however , we briefly compare s - idnc and g - idnc under the above two transmission schemes .      with fully - online feedback , the sender can update the g - idnc graph and add new edges representing coding opportunities after every transmission .",
    "the throughput of g - idnc is thus better than s - idnc .",
    "but the price is high computational load , because g - idnc graph is much larger than s - idnc graph ( @xmath115 v.s .",
    "@xmath27 ) . however ,",
    "during a semi - online transmission round , the sender can not update sfm due to the absence of receiver feedback .",
    "consequently , it does not update the g - idnc graph @xmath94 @xcite , and only sends the minimum clique partition solution of @xmath94 , which , according to theorem [ theo : equal_solutions ] , has the same size as the minimum clique partition solution of s - idnc .",
    "we thus have the following corollary :    g - idnc can not reduce the length of a semi - online transmission round compared to s - idnc .",
    "the two transmission schemes we proposed in the last section require finding @xmath105 , an s - idnc solution that contains @xmath16 maximal coding sets . in this section",
    ", we develop its optimal and heuristic algorithms .",
    "our optimal s - idnc coding algorithm finds @xmath105 in two steps :    1 .",
    "_ find all the maximal coding sets ( maximal cliques ) : _ this problem is np - hard in graph theory .",
    "we apply an exponential algorithm , called bron - kerbosch ( b - k ) algorithm @xcite .",
    "the group of all maximal cliques is denoted by @xmath116 .",
    "2 .   _ find @xmath105 from @xmath116 : _ we propose a branching algorithm in algorithm [ algorithm : branch ] .",
    "the intuition behind this algorithm is that , if a data packet @xmath113 belongs to @xmath112 maximal coding sets in @xmath116 , then one of these @xmath112 maximal coding sets must be included in @xmath105 for the completeness of @xmath105 . in the extreme case where @xmath117 , the sole maximal coding set that contains @xmath113",
    "must be included in @xmath105 .",
    "below is an example of algorithm [ algorithm : branch ] .",
    "consider the graph model in fig.[fig : min_collection ] .",
    "in step-1 , we find all the maximal cliques : @xmath118 , @xmath119 , @xmath120 , @xmath121 , @xmath122 . then in step-2",
    "initially , @xmath123 , @xmath124 , and the set of data packets not included in @xmath125 is @xmath126 .",
    "since @xmath0 is only included in @xmath127 and @xmath1 is only included in @xmath119 , these two coding sets must be added to @xmath125 . hence , @xmath128 after the first two iterations ; 2 .",
    "the set of data packets not included in @xmath125 is @xmath129 , and the remaining maximal coding sets are @xmath130=@xmath131 , @xmath121 , @xmath132 .",
    "since @xmath133 has a diversity of 2 under @xmath134 due to @xmath120 and @xmath121 , we branch @xmath125 into two successors : @xmath135,@xmath119,@xmath136 and @xmath137,@xmath119,@xmath138 . since @xmath139 contains all data packets and there are no other branching opportunities , the algorithm stops and outputs @xmath139 as @xmath105 .",
    "* input : * the group of all maximal coding sets , @xmath116 ; * initialization : * a set @xmath140 of solutions , @xmath140 only contains an empty solution @xmath123 . a counter @xmath141 ; denote this solution by @xmath142 .",
    "denote the data packets included in @xmath125 by @xmath143 and all data packets not included in @xmath125 by @xmath144 .",
    "also denote the maximal coding sets not included in @xmath125 by @xmath130 ; pick from @xmath145 the data packet @xmath146 that has the smallest diversity @xmath147 under @xmath134 .",
    "denote the @xmath147 coding sets which contain @xmath146 by @xmath148 ; branch @xmath125 into @xmath147 new solutions , @xmath149 . then , add @xmath148 to these solutions , respectively .",
    "the sizes of the new solutions are @xmath150 ; @xmath151 ; output the solutions in @xmath140 that contain all data packets .",
    "b - k algorithm and algorithm 1 constitute our optimal s - idnc coding algorithm .",
    "it produces all the valid @xmath105 . among these solutions",
    ", we can choose the one that optimizes a secondary criteria , such as the one offering the smallest @xmath152 , or the largest @xmath153 , calculated using .",
    "algorithm [ algorithm : branch ] is memory demanding , because the number of candidate solutions grows exponentially with branching .",
    "thus , we propose a heuristic alternative to it .",
    "the idea is to iteratively maximize the number of data packets included in @xmath105 .",
    "the algorithm is given in algorithm 2 .",
    "* input : * the group of all maximal coding sets , @xmath116 ; * initialization : * an empty solution @xmath123 , a counter @xmath141 , packet set @xmath154 ; find the coding set @xmath155 in @xmath116 that contains the largest number of data packets in @xmath156 ; add @xmath155 to @xmath125 and remove data packets in @xmath155 from @xmath156 ; @xmath151 ; output the solution @xmath125 .",
    "b - k algorithm and algorithm 2 constitute our hybrid s - idnc coding algorithm .",
    "it produces only one s - idnc solution , with no guarantee on the solution size .",
    "it is still computational expensive due to b - k algorithm .",
    "thus , we develop a polynomial time heuristic s - idnc coding algorithm next .",
    "algorithm [ algorithm : clique ] is a simple algorithm that heuristically finds the maximum ( the largest maximal ) clique of a graph .",
    "the intuition behind this algorithm is that , a vertex is very likely to be in the maximum clique if it is incident by the largest number of edges .",
    "variations of this algorithm have been developed in the literature @xcite .",
    "but this algorithm has not been applied to finding a complete s - idnc solution , and its computational complexity has not been identified yet .",
    "* input * : graph @xmath157 ; * initialization * : an empty vertex set @xmath158 ; add to @xmath158 the vertex @xmath159 which has the largest number of edges incident to it ; update @xmath17 by deleting @xmath159 and all the vertices not connected to @xmath159 ( _ these vertices can be ignored because they can not be part of the target clique , which contains @xmath159 _ ) ; vertices in @xmath158 are pair - wise connected , and no other vertices can be added to them . hence , @xmath158 is a maximal clique .",
    "the computational complexity of algorithm 3 is polynomial in the number of data packets @xmath27 .",
    "the highest computational cost occurs when the input graph is complete , i.e. , when all vertices are connected to each other . in this case",
    ", only one vertex will be removed in each iteration .",
    "thus , the number of remaining vertices in iteration-@xmath160 will be @xmath161 , @xmath162 $ ] . then , to find the vertex with the largest number of incident edges , we need @xmath161 comparisons .",
    "the total computational cost is thus in the order of @xmath163 .",
    "hence , the computational complexity of algorithm 3 is at most @xmath164 .",
    "we apply algorithm 3 to iteratively find @xmath105 in algorithm [ algorithm : encoding ] . in each iteration",
    ", we find a clique using algorithm 3 , maximize it by adding more vertices to it whenever possible , and then remove it from the s - idnc graph .",
    "this will increase the diversities of the added vertices / packets .",
    "below is an example :    consider the graph @xmath18 in fig.[fig : sg_example ] . in the first two iterations , the algorithm will choose @xmath165 and @xmath166 , respectively . in the third iteration , @xmath167 and the algorithm can only choose @xmath168 .",
    "among all the data packets in @xmath169 , @xmath1 can be added to @xmath170 . thus @xmath171 .",
    "the algorithm then stops and outputs @xmath172 .",
    "* input * : a graph @xmath157 ; * initialization * : an empty vertex set @xmath173 , a working graph @xmath174 , and a counter @xmath175 ; find the maximum clique in @xmath176 using algorithm [ algorithm : clique ] .",
    "denote it by @xmath177 ; find the vertices in @xmath173 which are connected to @xmath177 .",
    "denote their set by @xmath178 ( _ they are the candidate vertices that could be added to @xmath177_. ) ; generate a subgraph of @xmath17 whose vertex set is @xmath178 .",
    "denoted this subgraph by @xmath179 ; find the maximum clique in @xmath180 using algorithm 1 , denoted it by @xmath181 ( _ all vertices in @xmath181 are connected to each other and thus can all be added to @xmath177 . _ ) ; update @xmath173 by adding vertices in @xmath177 into it ; update @xmath176 by removing @xmath177 from it ; update @xmath177 as @xmath182 ( _ the new clique is at least as large as the old one , and thus provides higher packet diversity _ ) ; @xmath183 ;    in conclusion , we proposed an optimal algorithm that finds @xmath105 , as well as its hybrid and heuristic alternatives .",
    "the output @xmath105 is used as the s - idnc solution for the semi - online transmission scheme .",
    "if fully - online transmission scheme is applied , the transmitted coding set @xmath106 is chosen from @xmath105 .",
    "in this section , we present the simulated throughput and decoding delay performance of s - idnc ( abbreviated as s- in the figures ) under different scenarios , including under full- and semi - online transmission schemes , and under the use of optimal , hybrid , and heuristic coding algorithms ( abbreviated in the figures as opt . ,",
    "hybr . , and heur . ,",
    "respectively ) .",
    "the packet block size is @xmath184 .",
    "the number of receivers @xmath56 is chosen between 5 and 40 .",
    "the packet erasures are i.i.d . among the channels between the sender and the receivers probability with a probability of @xmath72 .",
    "we also compare s - idnc with rlnc and g - idnc . for rlnc , we assume a sufficiently large finite field , so that its throughput is almost surely optimal and serves as a benchmark . for g - idnc , although its best performance is at least as good as s - idnc ( as we have explained in section [ sec : sg_comp_erasure_free ] )",
    ", this advantage will not necessarily be reflected in our simulation results .",
    "this is because there has not been any optimal g - idnc algorithm .",
    "instead , we apply a heuristic algorithm ( abbreviated as heur .",
    "g- in the figures ) proposed in @xcite , which aims at minimizing the block completion time .",
    "this aim coincides with our optimization priorities for s - idnc in remark [ remark : u_prior ] , namely , to minimize the block completion time first .",
    "we conduct three sets of simulations .",
    "the first set compares the performance limits of the three techniques .",
    "the results are presented in fig.[fig : ud_min ] . here for rlnc , its absolute minimum block completion time is equal to the size of the largest wants set of the receivers .",
    "this number can not be further reduced by any means , because otherwise the most demanding receivers can not decode all its wanted data packets .",
    "the second ( resp .",
    "third ) set of simulations compares the throughput and decoding delay performance under fully - online ( resp .",
    "semi - online ) transmission scheme .",
    "the results are presented in fig.[fig : ud_fully ] ( resp .",
    "fig.[fig : ud_semi ] ) .",
    "we note that the performance of rlnc is the same under both schemes , because rlnc is feedback - free .",
    "our observations on s - idnc are as follows :    * the absolute minimum block completion time of s - idnc increases almost linearly with @xmath56 .",
    "this result matches corollary [ cor : u_linear_n ] ; * the fully - online transmission scheme always provides better throughput and decoding delay performance than the semi - online one ; * the optimal coding algorithm always provides better throughput performance than its hybrid and heuristic alternatives .",
    "this result verifies our choice of @xmath105 for throughput improvement , because only the optimal coding algorithm can always produce @xmath105 , which has @xmath185 ; * however , the optimal coding algorithm does not necessarily minimize the apdd . for example , in fig.[fig :",
    "ud_fully](b ) , the hybrid algorithm provides smaller apdd than the optimal one under the fully - online transmission scheme ; * the performance gap between the optimal and hybrid algorithms is always marginal , and is much smaller than their gap with the heuristic one .",
    "hence , the hybrid algorithm strikes a good balance between performance and computational load .    a cross comparison of rlnc , s- , and g - idnc shows that :    * the throughput of rlnc is always the best .",
    "the throughput of s - idnc is very close to rlnc when the number of receivers is small .",
    "their gap increases with @xmath56 ; * in general , the apdd of both s- and g - idnc is better than rlnc .",
    "this advantage only vanishes when the block completion time of s- and g - idnc becomes much larger than rlnc , which takes place when @xmath56 is much larger than @xmath27 ; * there is no clear winner between the performance of heuristic g - idnc and optimal s - idnc .",
    "we can expect that g - idnc will outperform s - idnc if its optimal coding algorithm is developed .    in summary ,",
    "our simulations verified our theorems , propositions , and algorithms .",
    "they also demonstrated that , if we are concerned with both throughput and decoding delay performance , s - idnc is a good alternative to rlnc when the number of receivers is not too large .",
    "in this paper , we studied the throughput and decoding delay performance of s - idnc in broadcasting a block of data packets to wireless receivers under packet erasures . by using a random graph model",
    ", we showed that the throughput of s - idnc decreases linearly with increasing number of receivers . by introducing the concept of perfect s - idnc solution",
    ", we proved the np - hardness of minimizing the average packet decoding delay .",
    "we also proposed two upper bounds on the throughput and decoding delay limits of s - idnc .",
    "we considered two transmission schemes that requires fully- and semi- online feedback frequencies , respectively . by applying stochastic shortest path method",
    ", we showed that it is intractable to make optimal coding decisions in the presence of random packet erasures .",
    "we then used heuristic objective functions to determine the preferred coded packet(s ) to send .",
    "we then developed the optimal s - idnc coding algorithm and its complexity - reduced heuristics .",
    "we also compared s - idnc with g - idnc by proving the equivalence between the chromatic number of the complementary s - idnc and g - idnc graphs .",
    "we used this equivalence to show that g - idnc can outperform s - idnc when there are not packet erasures , but this is not always true when there are packet erasures .",
    "our work provides news understandings of s - idnc .",
    "it will facilitate the extension of s - idnc to applications in other network settings , such as cooperative data exchange and distributed data storage .",
    "we are also interested in designing approximation and heuristic algorithms for decoding delay minimization .",
    "theorem [ theo : equal_solutions ] requires the proof of @xmath92 .",
    "since every s - idnc solution is also a g - idnc solution , but a g - idnc solution is not necessarily an s - idnc solution , we have @xmath186 , and thus @xmath187 . hence",
    ", here we only need to prove that @xmath188 .",
    "we first introduce the concept of _ affiliated _ s - idnc graph @xmath189 of a g - idnc graph @xmath94 , which is construct as follows . given @xmath94 that involves @xmath27 data packets and @xmath56 receivers ,",
    "we generate a graph @xmath189 with @xmath27 vertices , each representing a data packet .",
    "we then connect @xmath190 and @xmath191 in @xmath189 if for every pair of @xmath192 $ ] , @xmath193 and @xmath194 are connected upon their existence in @xmath94 .",
    "in other words , we claim that @xmath195 and @xmath196 do not conflict if every vertex that represents @xmath195 in @xmath94 is connected to every vertex that represents @xmath196 in @xmath94 .    given an sfm @xmath53",
    ", we can easily show that its s - idnc graph @xmath18 is the same as the affiliated s - idnc graph @xmath189 of its g - idnc graph @xmath94 .",
    "hence , our task becomes to prove that @xmath197 , where @xmath198 .",
    "this statement is true if the following property is true :      since @xmath94 is nonempty as long as @xmath189 is nonempty , this property indicates that any clique partition solution of @xmath94 must have a size of at least @xmath200 , which will prove that @xmath197 .",
    "property 6 can be proved through induction :    1 .",
    "if @xmath199 does not contain any conflicting data packets in @xmath189 , then @xmath200 is reduced by at most one ; 2 .",
    "if @xmath199 contains one pair of conflicting data packets in @xmath189 , then @xmath25 is reduced by at most one ; 3 .   if @xmath199 already contains @xmath201 pairs of conflicting data packets in @xmath189 , then modifying @xmath199 to contain one more pair of conflicting data packets in @xmath189 can not further reduce @xmath200 .      to prove the second statement , without loss of generality we assume that the pair of conflicting data packets is @xmath202 .",
    "then the set of data packets included in @xmath199 takes a form of @xmath203 , where @xmath204 is the set of pair - wise non - conflicting data packets , and thus is a clique of @xmath189 .",
    "since @xmath0 conflicts with @xmath1 , there exists at least one pair of unconnected vertices in @xmath94 that represent @xmath0 and @xmath1 .",
    "this pair is not included in @xmath199 , and thus is kept after removing @xmath199 from @xmath94 .",
    "hence , in the updated affiliated s - idnc graph @xmath205 , @xmath42 and @xmath47 exist , and are unconnected .",
    "let the chromatic number of @xmath205 be @xmath206 , then the minimum clique partition of @xmath205 takes a form of @xmath207 , which keeps @xmath0 and @xmath1 in different coding sets . then , since @xmath204 is a clique of @xmath189 , @xmath208 is a partition of @xmath189 with a size of @xmath209 .",
    "thus , @xmath210 , implying that @xmath25 is reduced by at most one after removing @xmath199 from @xmath94 .",
    "the proof of the third statement is similar to the second one , and thus is omitted here . according to the above three statements , no matter how many conflicting data packets are included in @xmath199 , after removing @xmath199 from @xmath94 , the chromatic number of the affiliated s - idnc graph @xmath189 is reduced by at most one .",
    "therefore , @xmath211 .",
    "since @xmath189 is the same as @xmath18 , we have @xmath212 and theorem 3 is proved .",
    "d.  e. lucani , m.  mdard , and m.  stojanovic , `` broadcasting in time - division duplexing : a random linear network coding approach , '' in _ proc .",
    "4th workshop on network coding , theory , and applications ( netcod)_.1em plus 0.5em minus 0.4emieee , 2009 , pp .",
    "6267 .",
    "j.  heide , m.  v. pedersen , f.  h.  p. fitzek , and t.  larsen , `` network coding for mobile devices - systematic binary random rateless codes , '' in _ proc .",
    "communications ( icc ) workshop _ , june 2009 .",
    "p.  sadeghi , r.  shams , and d.  traskov , `` an optimal adaptive network coding scheme for minimizing decoding delay in broadcast erasure channels , '' _ eurasip j. on wireless commun . and netw .",
    "_ , pp . 114 , jan .",
    "p.  sadeghi , m.  yu , and n.  aboutorab , `` on throughput - delay tradeoff of network coding for wireless communications , '' in _ proc .",
    "information theory and its applications ( isita ) _ , 2014 , pp .",
    "689693 .",
    "x.  li , c .- c .",
    "wang , and x.  lin , `` on the capacity of immediately - decodable coding schemes for wireless stored - video broadcast with hard deadline constraints , '' _ ieee j. sel .",
    "areas commun .",
    "_ , vol .  29 , no .  5 , pp .",
    "10941105 , 2011 .",
    "l.  yang , y.  sagduyu , j.  li , and j.  zhang . adaptive network coding for scheduling real - time traffic with hard deadlines .",
    "[ online ] .",
    "available : \\url{http://arxiv.org / abs/1203.4008}[\\url\\{http://arxiv.org / abs/1203.4008 } ]            n.  aboutorab , p.  sadeghi , and s.  sorour , `` enabling a tradeoff between completion time and decoding delay in instantly decodable network coded systems , '' _ ieee trans .",
    "_ , vol .",
    "62 , no .  4 , pp .",
    "12691309 , 2014 .",
    "s.  sorour and s.  valaee , `` completion delay reduction in lossy feedback scenarios for instantly decodable network coding , '' in _ proc .",
    "symp . personal indoor and mobile radio communications ( pimrc ) _ , 2011 , pp .",
    "20252029 .",
    "n.  aboutorab , p.  sadeghi , and s.  e. tajbakhsh , `` instantly decodable network coding for delay reduction in cooperative data exchange systems , '' in _ proc .",
    "information theory ( isit ) _",
    ", 2013 , pp . 30953099 .",
    "m.  s. karim , n.  aboutorab , a.  a. nasir , and p.  sadeghi , `` decoding delay reduction in network coded cooperative systems with intermittent status update , '' in _ proc .",
    "ieee information theory workshop ( itw ) _ , 2014 , pp .",
    "391395 .",
    "m.  yu , a.  sprintson , and p.  sadeghi , `` on minimizing the average packet decoding delay in network coded wireless broadcast , '' in _ proc .",
    "symp . network coding ( netcod , submitted to ) _ , 2015 .",
    "[ online ] .",
    "available : \\url{http://arxiv.org / abs/1503.03942}[\\url\\{http://arxiv.org / abs/1503.03942 } ]"
  ],
  "abstract_text": [
    "<S> we consider broadcasting a block of packets to multiple wireless receivers under random packet erasures using instantly decodable network coding ( idnc ) . </S>",
    "<S> the sender first broadcasts each packet uncoded once , then generates coded packets according to receivers feedback about their missing packets . </S>",
    "<S> we focus on strict idnc ( s - idnc ) , where each coded packet includes at most one missing packet of every receiver . </S>",
    "<S> but we will also compare it with general idnc ( g - idnc ) , where this condition is relaxed . </S>",
    "<S> we characterize two fundamental performance limits of s - idnc : 1 ) the number of transmissions to complete the broadcast , and 2 ) the average delay for a receiver to decode a packet . </S>",
    "<S> we derive a closed - form expression for the expected minimum number of transmissions in terms of the number of packets and receivers and the erasure probability . </S>",
    "<S> we prove that it is np - hard to minimize the decoding delay of s - idnc . </S>",
    "<S> we also derive achievable upper bounds on the above two performance limits . </S>",
    "<S> we show that g - idnc can outperform s - idnc without packet erasures , but not necessarily with packet erasures . </S>",
    "<S> next , we design optimal and heuristic s - idnc transmission schemes and coding algorithms with full / intermittent receiver feedback </S>",
    "<S> . we present simulation results to corroborate the developed theory and compare with existing schemes .    </S>",
    "<S> _ index terms _ wireless broadcast , network coding , throughput , decoding delay , instantly decode . </S>"
  ]
}
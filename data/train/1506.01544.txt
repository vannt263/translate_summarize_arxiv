{
  "article_text": [
    "value transformation ( cvt ) is one of the first and foremost transformation in the field of manipulating the strings of bits and other transformations of similar nature such as extreme value transformation ( evt ) [ 2 ] , 2- variable boolean operation ( 2-vbo ) [ 4 ] , integral value transformations ( ivts ) [ 5 ] and so on came after that .",
    "all these transformations have lots of applications in the field like pattern formations [ 2 , 4 ] , solving round rabin tournament problem [ 6 ] , collatz - like functions [ 5 ] and so forth . in [ 7 ] with the help of cellular automata , cvt has been used for efficient hardware design of some basic arithmetic operations .",
    "as cvt is one of the important transformations in this area of study so further properties of cvt should have been thoroughly developed for some of its other future scope .    in the field of data structure for the organization of non - linear data",
    "we have seen many tree structures like binary tree , avl tree , b tree , b+ tree etc . and many of their applications .",
    "in this paper , we have designed a new tree structure named as cvt - xor tree in the domain of cvt and xor . for this tree",
    "two fundamental logics of cvt and xor from [ 3 ] are used : ( 1 ) in [ 3 ] it is proved that addition of any two non - negative integers expressed as binary numbers is same as addition of their cvt and their xor values .",
    "this result is also shown to be true for any base of the number system .",
    "( 2 ) it has also been proved that in a successive addition of cvt and xor of any two non - negative integers , the maximum number of iterations required to get either cvt=0 or xor=0 is equal to the length of the bigger integer expressed as a binary string .",
    "organization of this paper is as follows : in section 2 some preliminaries of cvt and xor along with a recursive algorithm for addition of two numbers are discussed .",
    "section 3 deals with the fundamentals of cvt - xor tree and two approaches for the construction of cvt - xor tree .",
    "first part in section 4 discusses the different properties of cvt - xor tree and in second part some other significant properties of cvt - xor tree from the p , d and f matrices are enumerated .",
    "section 5 deals with the conclusion of this paper along with some future research direction .",
    "cvt and xor are two transformations defined on a pair of non - negative integers expressed in binary .",
    "interested reader can refer [ 1 , 2 , 3 ] for the definition of cvt which we are omitting for shortening the paper size . some of the properties which we will be using in this paper are enumerated as follows :    a ) : :    cvt is always an even number and length is ( n+1 ) bits .",
    "b ) : :    it has been proved in [ ] that addition of two non - negative integers x    and y is equal to the sum of their cvt and xor values i.e. x+y = cvt(x ,    y ) + xor(x , y ) and also the recurrence scheme always converges to ( 0 ,    x+y ) in at most ( n+1 ) iterations where n is the maximum number of bits    required to represent the bigger number .    * _ algorithm 1 : _ * recursive algorithm for addition of two non - negative integers :    @xmath0 @xmath1 @xmath2 x @xmath3 @xmath4 @xmath5    as at the time of execution every recursive algorithm forms an activation record in a tree form so we are motivated to construct the tree for the above recurrence algorithm named as cvt - xor tree and analyzed some of its significant features .",
    "if we start from a pair of numbers as root node of the form ( 0 , n ) and back tracking from it using the iterative process x+y",
    "= cvt(x , y)+xor(x , y ) [ ] we come across many intermediate nodes of the form ( cvt , xor ) pair then we will get an m - ary tree . for a given number n",
    ", each node in the tree is represented by a pair or co - ordinate of the form ( x , y ) such that x+y = n .",
    "first co - ordinate i.e. x is the resultant cvt of two numbers and second co - ordinate i.e. y is the resultant xor of two numbers whose sum is n. as ( cvt ( 0 , n ) , xor ( 0 , n ) ) = ( 0 , n ) so and this forms a self - loop at the root node . thus a cvt - xor tree is like an m - ary tree with a loop only at the root node along with several non - leaf and leaf nodes .",
    "depending of n value we have two types of tree .",
    "if n is even , then the tree is called even cvt - xor tree and if n is odd , then the tree is called odd cvt - xor tree .    *",
    "_ illustration 1 : _ * let an even integer n=40 then ( 0 , 40 ) is the root node and other leaf and non - leaf nodes in the form ( x , y ) ( such that x+y=40 ) are shown in fig 1 .",
    "as 20 is an even number , so pair ( x , y ) is in the form of either ( even , even ) or ( odd , odd ) .        * _ illustration 2 : _ * let an even integer n=25 then ( 0 , 25 ) is the root node and other leaf and non - leaf nodes in the form ( x , y ) ( such that x+y=25 ) are shown in fig 2 . as 25 is an odd number , so pair ( x , y ) is in the form of either ( even , odd ) or ( odd , even ) .        using section 2.(b )",
    "the maximum height of the tree is and is the number of significant bits required to represent n. total number of nodes in cvt - xor tree is n+1 which is discussed in section 4 .",
    "depending on the values of n either even or odd two types of trees can be analyzed named as even cvt - xor tree or odd cvt - xor tree .",
    "as cvt of two numbers is always an even number so the first co - ordinate in the node is always even for all internal nodes .",
    "therefore for these pairs , second co - ordinate should be an even number when n is even and is an odd number when n is odd .",
    "but when n is even the leaf nodes can be any pair of the form either ( even , even ) or ( odd , odd ) otherwise it is of the form ( even , odd ) or ( odd , even ) .",
    "following algorithm 2 shows whether a given node ( x , y ) is leaf node or not .    *",
    "_ algorithm 2 : _ * algorithm to check whether a given node is leaf or not    @xmath6print ( x , y ) is root node@xmath7print ( x , y ) is a leaf node in x+y cvty - xor tree @xmath8print ( x , y ) may be a leaf node or an internal node@xmath9further checking is required @xmath10 + finding the structure of the tree for a given number n two different approaches are discussed below :      the root is always of the form ( 0 , n ) this is consider in level-0 and using iterative process to find the nodes in level-1 we will search for the pair of integers x and y such that x+y = n , cvt ( x , y)=0 and xor(x , y)=n except node ( 0 , n ) .",
    "all the nodes in this process are kept in level-1 .",
    "this process is continuing until all the leaf nodes are found i.e. the nodes with no predecessor .",
    "this process starts from all the leaf nodes whose sum is n. all the leaf nodes for the number n can be found easily . for each such pairs",
    "we apply cvt and xor operation and keep those nodes such that their pair sum is equal to n. many nodes may converge towards the single node after cvt and xor operations .",
    "this process is continued until we reach to the root node from all the leaf nodes which are in the form of ( 0 ,",
    "n ) .    in the cvt - xor tree",
    "if we backtrack from the root node to the leaf node we find different paths to reach to the leaf nodes at different depths .",
    "it seems that parent child relationship in the cvt - xor tree totally depends on characterization or bit patterns of the node pairs in the path . to understand these dynamics",
    "we have analyzed some of the properties of cvt - xor tree discussed in the following section .",
    "the numbers of nodes or vertices in the cvt - xor tree is n+1 .",
    "number of non - negative pair wise integer partitions of n is n+1 of the form ( 0 , n ) , ( 1 , n-1 ) ",
    "( n , 0 ) . from section 2(b ) all these pairs must converges to ( 0 , n ) so all these n+1 number of nodes are connected and will form a single cvt - xor tree . hence the total numbers of nodes in the cvt - xor tree is n+1 .    * _ illustration 3 : _ * let an even integer n=18 , we have 19 pairs as ( 0 , 18 ) , ( 18 , 0 ) , ( 1 , 17 ) , ( 2 , 16 ) , ( 3 , 15 ) , ( 4 , 14 ) , ( 5 , 13 ) , ( 6 , 12 ) , ( 7 , 11 ) , ( 8 , 10 ) , ( 9 , 9 ) , ( 10 , 8) , ( 11 , 7 ) , ( 12 , 6 ) , ( 13 , 5 ) , ( 14 , 4 ) , ( 15 , 3 ) , ( 16 , 2 ) , ( 17 , 1 ) in cvt - xor tree shown in fig 3 .        in cvt - xor tree if the pair ( a , b ) is in depth - d , then its symmetric pair ( b , a ) is also in depth - d except the root node .",
    "let , cvt(a , b)=p and xor(a , b)=q ; where p and q are the parent node ( p , q ) for one child pair ( a , b ) . + we know that , cvt(a , b)=cvt(b , a ) and xor(a , b)=xor(b , a ) + then cvt(a , b)=cvt(b , a)=p and xor(a , b)=xor(b , a)=q + that implies both the pairs ( a , b ) and ( b , a ) are the child nodes whose parent node is ( p , q ) i.e. nodes ( a , b ) and ( b , a ) are two predecessor .",
    "+ therefore , ( a , b)@xmath11 ( p , q ) and ( b , a)@xmath12 .",
    "so they must belong to the same level i.e. in same depth . + according to the cvt properties , if the xor value is zero in @xmath13 iteration , then the cvt value is zero in @xmath14 iteration .",
    "therefore ( n , 0 ) @xmath11 ( 0 , n ) and ( 0 , n ) is the root node in cvt - xor tree paradigm , so if ( 0 , n ) is in level-0 then the node ( n , 0 ) will be always in level-1 in the cvt - xor tree .",
    "* _ illustration 4 : _ * from fig .",
    "3 , the pairs ( 2 , 16 ) and ( 16 , 2 ) are in lavel-1 similarly pairs ( 8 , 10 ) and ( 10 , 8) are in level-2 and so on .",
    "but the root node ( 0 , 18 ) and its symmetric pair ( 18 , 0 ) are in level-0 and level-1 respectively .    for any pair ( p , q ) where @xmath15 is an even number and @xmath16 is either even or odd and if @xmath17i ; @xmath18 such that @xmath19 , then the pair ( p , q ) is the leaf node or contradictory ( even , even ) pair .",
    "the theorem statement demands two binary variable @xmath20 and @xmath21 such that @xmath22 and @xmath23 for some i , which is impossible .",
    "so the such pair ( p , q ) must be a ( even , even ) leaf node .    * _ illustration 5 : _ * as per the definition of cvt , we know that cvt of any two numbers is always an even number .",
    "therefor there is no predecessor for an odd pair . but some ( even , even ) contradictory pairs are also in leaf node . fig .",
    "4 shows that pair ( 3 , 5 ) and ( 5,3 ) are ( odd , odd ) leaf nodes and ( 6 , 2 ) is a leaf node although the first co - ordinate is even because as third bit and second bit of 6 ( 110 ) and 2 ( 10 ) from lsb position are 1 and 1 respectively .",
    "so the pair ( 6 , 2 ) is a contradictory leaf node .        if the pair ( p , q ) where the cvt value @xmath15 and the xor value @xmath16 is a non - leaf node in the cvt - xor tree and if @xmath24 and @xmath25 for m such i positions where @xmath26 and @xmath27 ; then the number of successors of the ( p , q ) node=@xmath28 .",
    "these nodes can be generated by substituting m column positions either @xmath29 or @xmath30 and keeping other ( n - m ) column values fixed .",
    "as m column values has to be changed by @xmath29 or @xmath30 in 2 different ways , so using fundamental principle of counting the total successor pairs will be @xmath28 .",
    "* _ illustration 6 : _ * let an example of ( even , even ) non - leaf node ( 2 , 6 ) shown below : + @xmath31 + here two position of a and b i.e. ( * , * * ) in two columns can be filled up @xmath32 ways .",
    "so according to the theorem 4 such predecessor of ( 2 , 6 ) are ( 1 , 7)=(001,111 ) , ( 7 , 1)=(111 , 001 ) , ( 3 , 5)=(011 , 101 ) and ( 5 , 3)=(101 , 011 ) shown in fig .",
    "4 .    let ( p , q)@xmath11(m , n ) , if ( p , q ) and ( m , n ) are two odd - odd pair ( i.e. leaf node ) and immediate even - even pair respectively , then the second last lsb bit of m must be always 1 i.e. @xmath33 and @xmath34 @xmath35 where @xmath36 and @xmath37 .",
    "* + 1st part : * as binary representation of two odd numbers must leading to last lsb bit 1(for both p & q ) , therefore according to cvt definition second last lsb bit of m must be 1 as m = cvt(p , q ) .",
    "+ * 2nd part : * we will proof this part through the principle of method of induction .",
    "+ for n=1 , m=4 - 2=2 , binary representation of 2 is 10 i.e. second last lsb bit is 1 .",
    "so formula is true for n=1 .",
    "+ let the formula be true for n i.e. @xmath38 we have to prove that this is true for m = n+1 i.e. @xmath39 + @xmath40 + so the formula is also be true for m = n+1 . therefor the formula is true for all values greater than equal 1",
    "now we are ready to write the algorithm to check whether a given input node ( x , y ) is a leaf node or not .",
    "algorithm 2 is now modified using theorem 3 & 4 by which a given node whether belong to the leaf or non - leaf can be verified easily is as follows :    * _ algorithm 2 : _ * algorithm to verify whether a given node is leaf or not    @xmath41and @xmath42where x+y = n is an even number@xmath43print ( x , y ) is root node@xmath44print ( x , y ) is a ( odd , odd ) and ( even , even ) leaf node @xmath9respectively @xmath8print ( x , y ) is a non - leaf node @xmath45    any even integer ( e ) in the form of @xmath46 will be always a cvt value 2 for all possible ( odd , odd ) pairs ( say ( x , y ) ) of e ; where e = x+y .    notes the two facts as following :    1 .   for every pair ( x , y ) of e such that if e is an n bits number then the maximum number of bit for x and y will be n-1 .",
    "every number in the form m= ( 2k -1 ) is always the addition result of two complementary numbers ( say p and q ) where one of them will be even and another one is odd .",
    "we can represent e as : @xmath47 + so to get e we have to add only 1 ( or binary 1 ) to p ( if p is even ) or q ( if q is even ) such that p+q = x+y .",
    "+ now we get two odd numbers @xmath48 and @xmath49 such that e = m+1= @xmath50 having both lsb position are binary1 others bits position are complementary . therefore according to the cvt definition there",
    "cvt value must be 2 .",
    "now question can be asked that what is the total number of leaf nodes and internal nodes in cvt - xor tree whose is root is ( 0 , n ) ? for answering this and other similar questions",
    "we have defined three different matrices namely cvt - xor depth matrix , cvt - xor parent matrix , and cvt - xor frequency matrix to store depth information , parent information and frequency information respectively .                  1 .",
    "the diagonal from ( n , 0 ) to ( 0 , n ) in the cvt - xor depth matrix gives the following information regarding the cvt - xor tree whose root is the ( 0 , n ) ) 1 .",
    "if dm ( i , j)=h then ( i , j ) vertex is in depth - h in the cvt - xor tree .",
    "2 .   no . of nodes in depth - h = no .",
    "of times h present on the diagonal of the cvt - xor depth matrix ( frequency of the occurrence of h ) 3 .",
    "average height of the tree= ( sum of all the diagonal value)/n+1 4 .",
    "if the binary pits pattern of n such that only the lsb bit is 0 i.e. number is in the form ( 0 , 2k-2 ) then for such even integer n=2 , 6 , 14 , 32,  ,2k-2 ) , the maximum value through the diagonal from ( n , 0 ) to ( n , 0 ) is 2 this implies the maximum height of the tree is always 3 . 5 .   if the binary pits pattern of n such all bits are 0 i.e. number is in the form ( 0 , 2k-1 ) then for such odd integers n= 3 , 7 , 15 , 31  2k-1 ) , the maximum value through the diagonal from ( n , 0 ) to ( n , 0 ) is 1 this implies the maximum height of the tree is always 2 .   once we will find the number of nodes in different depth , link information ( ) among the nodes in cvt - xor tree can be found form the cvt - xor parent matrix .",
    "the diagonal from ( n , 0 ) to ( 0 , n ) in the cvt - xor parent matrix gives the following information regarding the cvt - xor tree whose root is the ( 0 ,",
    "n ) ) 1 .   if pm ( i , j)=(p , q ) this implies ( p , q ) is the parent of node ( i , j ) .",
    "if ( p , q ) is repeats m times in the pm matrix then there is m such similar ( i , j ) whose parent is ( 0 , n ) 3 .",
    "the frequency matrix ( fm ) help us to find the following : let , fm ( i , j ) = m , where m indicate the number of predecessor or child nodes of the node ( i , j ) .",
    "if i is odd then the corresponding value of m is 0 , this indicate if the first co - ordinate of the node is odd and the node has no child or predecessor i.e. the node is leaf node .",
    "2 .   through the diagonal value we can find what the leaf nodes are for a given n.      below in fig . 8 shown the cvt value for all ( odd , odd ) pairs . according to the theorem 5",
    ", cvt value for all ( odd , odd ) pairs in this figure contains all the numbers from the set s. where 2 is the smallest number and the difference between two consecutive number is 4 i.e. @xmath51 .",
    "it is also showing the beautiful fractal studying in [ 1 ] .        if we traverse through a diagonal path from ( k , 10 ) ( where k is any odd number and gradually decreasing k ) , ( k-2 , 3 ) , ... , ( 1 , k ) figure ( fig .",
    "9 ) like palindrome triangle is obtained .",
    "this figure demonstrate that for any arbitrary given positive integer all the possible cvt values where bold cvt values refer to the prime pair solution .",
    "this paper shows a new tree structure called cvt - xor tree along with two different approaches for the construction of the tree .",
    "we also have seen different properties of the tree like number of nodes in any depth , characterization of child , parent , internal and leaf nodes .",
    "some other significant properties also can be obtained easily from the three different matrices along with an easy construction process of cvt - xor tree from the matrices . in future",
    "this work will help us in further studies in the domain of cvt - xor to characterize the pattern formation by different cvt - xor trees where it is conjectured that there exists always a path from root(zero , even integer ) to leaf ( prime pair ) signifying the goldach conjecture - the unfinished work remaining , how to distinguish this kind of paths from the rest .",
    "we can further explore the tree structure by considering three numbers combination such that x+y+z = n and to study the different properties of such trees .",
    "the authors would like to thank ...    1 s. pal , s. shaoo and b.  k. nayak , _ properties of carry value transformation_,international journal of mathematics and mathematical sciences volume 2012 , article i d 174372 , 10 pages http://dx.doi.org/10.1155/2012/174372 , 2012    p. pal choudhury , sk .",
    "s. hassan , s. shaoo and b.  k. nayak , _ act of cvt and evt in the formation of number theoretic fractals_,international journal of computational cognition ( http://www.ijcc.us ) , vol .",
    "1 , march 2011 .",
    "p. pal choudhury , s. shaoo and b.  k. nayak , _ theory of carry value transformation and its application in fractal formation _",
    ", ieee international advance computing conference , doi : 10.1109/iadcc.2009.4809146 , 2009 .",
    "p. pal choudhury , hassan sk .",
    "s.,sahoo s. and b.  k. nayak , _ theory of rule 6 and its application to round robin tournament _ , arxiv 0906.5450v1 , cs.dm , cs.gt , int .",
    "journal of computational cognition , vol . 8 , no .",
    "33 - 37 , sep . 2010 .",
    "p. pal choudhury , s. shaoo and m. chakraborty , _ implementation of basic arithmetic operations using cellular automata _ ,",
    "ieee computer society , isbn:978 - 0 - 7695 - 3513 - 5,http://doi.ieeecomputersociety.org/10.1109/icit.2008.18 pp : 79 - 80,dec .",
    "17 , 2008 to dec . 20 , 2008"
  ],
  "abstract_text": [
    "<S> cvt and xor are two binary operations together used to calculate the sum of two non - negative integers on using a recursive mechanism . in this present </S>",
    "<S> study the convergence behaviors of this recursive mechanism has been captured through a tree like structure named as cvt - xor tree . we have analyzed how to identify the parent nodes , leaf nodes and internal nodes in the cvt - xor tree . </S>",
    "<S> we also provide the parent information , depth information and the number of children of a node in different cvt - xor trees on defining three different matrices . </S>",
    "<S> lastly , one observation is made towards very old mathematical problem of goldbach conjecture .    </S>",
    "<S> carry value transformation ( cvt ) , exclusive or ( xor ) , cvt - xor tree , fractal , goldbach conjecture . </S>"
  ]
}
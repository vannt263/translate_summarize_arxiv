{
  "article_text": [
    "energy is a precious resource of the current industrial economy . for energy conservation and sustainability ,",
    "it is necessary to achieve energy efficiency , which we may take to mean minimization of the energy consumed to do a given amount of work .",
    "this requires ways to achieve greater energy efficiencies by proper scheduling of jobs over machines , in addition to making each machine individually more energy efficient .",
    "scheduling theory is an important field of study that has received attention from researchers for decades , but most work on scheduling till now has only looked at makespan and other time - related objectives .",
    "energy being such a limited resource and directly related to cost , it can in certain instances be considered more important than time , i.e. , it may be better to complete jobs using minimum energy , rather than completing them quickly .",
    "clearly , scheduling jobs in such a way that the total energy consumption of the system is minimal , or at least low , is of the essence .",
    "we present a generalized theory for energy - efficient offline scheduling in this paper , which does not go into domain - specific issues or technologies .",
    "our work is applicable to systems whose machines are similar in their capabilities but can have different working and idle power consumptions . the speeds at which machines can execute tasks can be different from one another , but are not time - varying , i.e. , each machine operates at the same speed whenever working .",
    "all machines are connected to one another , so that a job from one machine can be transferred to any other machine .",
    "there is no set limit to the number of machines in a system .",
    "machines and jobs to be executed are independent , and hence any job can be executed in any order on any machine .",
    "each machine is characterized by a fixed working power ( the power consumed by it when under load ) and a fixed idle power ( the power consumed by it when running idle ) , as seen in previous work  @xcite .",
    "given a set of interconnected machines and independent jobs , our results specify the allocation of jobs on the machines so that the total power consumption of the system is minimized .",
    "however , unlike that previous work , we focus on exact results rather than using heuristics for scheduling .",
    "considering a system of machines cooperatively running similar loads , we classify the problems of energy - minimal offline scheduling with non - identical interconnected machines and independent jobs as follows :    1 .   _ identical speeds , divisible loads _ : + this class of problem is discussed in section  [ subsub : id_div ] , where we derive results to prove that energy - minimal scheduling under this type of system can be solved in linear time ; we also give an algorithm for the same .",
    "2 .   _ identical speeds , non - divisible loads _ : + this turns out to be np - hard , as shown in section  [ subsub : id_nd ] .",
    "we also give a linear - time approximation algorithm which gives a solution within a bound of @xmath0 .",
    "3 .   _ different speeds , divisible loads _ : + in section  [ subsub : diff_div ] we give results for energy - minimal scheduling on such a system and also a linear - time algorithm to find the minimum - energy schedule .",
    "4 .   _ different speeds , non - divisible loads _ : + as with the case of identical speed machines , this class of problems is also np - hard .",
    "we give a linear - time approximation algorithm for this class in section  [ subsub : diff_nd ] which gives a result within the bound of @xmath1 times the optimal .",
    "we first introduce a generic system model which abstracts the relevant aspects of energy - efficient scheduling .",
    "we then give a classification of the problems of energy - efficient scheduling on different types of systems , and study their complexities .",
    "this makes possible analyses giving results which govern the relative distribution of work among machines for maximum energy efficiency , given the energy specifications of the machines . using these results we design scheduling algorithms for different classes of systems . for problem classes in which scheduling is np - hard , we give approximation algorithms along with their bounds .",
    "we deliberately do not give specific units for energy ( which is typically measured in joules , ergs , kilowatt - hours , etc . ) , power ( often measured in watts , etc . ) , work ( generally specified in the same units as energy ) , or speed ( work done per unit time ) ; we likewise do not find it necessary to be precise about types of energy or energy sources .",
    "this is so to remain agnostic towards particular system technologies and instantiations , and to avoid domain - specific biases in our analyses .",
    "there is a lot of work done for makespan scheduling , and other time - related objectives .",
    "but solving for time - related objectives does not guarantee minimum energy .",
    "the novelty of this work is in considering energy specifically with completely generic machine specifications .",
    "no other theoretical work until now has considered energy consumption of machines while idle , which is known to be significant from real life ; e.g. , in data centers  @xcite .",
    "our system model also shows the absolute bounds of energy - minimal scheduling for specific types of systems .",
    "we derive results ( for divisible jobs ) which serve as an upper - bound to maximum achievable efficiency  because a system with divisible jobs can always have higher efficiency as compared to system with non - divisible jobs  @xcite .",
    "a part of this theoretical framework , seen here in section  [ subsec : i_sp ] , has been presented in our workshop paper  @xcite , which introduces the classification of energy - minimal scheduling problems and gives results on the class of systems which have identical speed machines and divisible loads .",
    "it also gives results for a special case of system with different speed machines and divisible loads in which idle power consumption of machines was considered to be zero .",
    "it can be seen as the beginning of the work presented in the current paper which comprehensively covers most types of energy - minimal scheduling problems with completely interconnected machines and independent jobs .    in the present paper we deal with theoretical aspects of energy - minimal scheduling , deriving results which can guide the design of scheduling algorithms for systems . on any given schedule ,",
    "if the conditions indicated in the results are satisfied , then that schedule will be energy - minimal .",
    "likewise , the results can also indicate when a system of machines would be inherently wasteful of energy , and can thus guide more energy - efficient system designs .",
    "it is easy to see ( even a back - of - the - envelope calculation can suffice ) that there are many cases where it is not appropriate to run all machines , if one s goal is to complete a set of jobs with minimal energy consumption .",
    "the question that arises is : given a set of jobs to complete , which machines should one use , and which not ? our results and analyses address this point .",
    "machines not in use are not assumed to be switched off , but do consume power ( what we call idle power ) .",
    "we have deliberately allowed that machines do not get switched off when not in use , given the reality of machines in many domains ( after all , the on - off cycle time for an industrial furnace , or even a personal computer , is not small ) .",
    "the situation where a machine does get switched off is merely a special case where the idle power of that machine is zero .",
    "for the class of system in which machines have identical speeds with different power ratings , and when the jobs are divisible , we first determine the precedence of the machines ( the order in which they should be assigned work ) .",
    "we then derive the optimal number of machines which should be working so that the energy consumption is minimum .",
    "based on this we derive what should be the optimal allocation of work among the machines chosen to run .",
    "we give an @xmath2 ( where , @xmath3 is the number of machines ) algorithm which instantiates the theoretical results , to derive the energy - minimal schedule given the specifications of the machines and jobs .",
    "the slightly harder problem of finding the minimum - energy schedule for divisible jobs over machines with different speeds and power ratings can also be solved in @xmath2 time .",
    "we give an exact algorithm for this class too .",
    "for the classes of problems with non - divisible jobs , we see that the problems are np - hard .",
    "hence we give @xmath2 approximation algorithms for both cases : systems with identical- and different - speed machines .",
    "the remainder of the paper is organized as follows .",
    "related work is mentioned in section  [ sec : rw ] .",
    "the system model along with the notation used in defining the energy - minimal scheduling problem and the motivation is presented in section  [ sec : pf ] .",
    "section  [ sec : method ] discusses about the precedence of machines for both identical speed and different speed machine case .",
    "the proposed algorithms along with their bounds are given in section  [ sec : anc ] .",
    "finally , section  [ sec : im ] describes the two types of measures commonly used for energy efficiency in systems , and shows that these are incompatible .",
    "in energy - minimal scheduling , as opposed to classical makespan scheduling , there are additional parameters ( energy specifications ) which come into picture and hence it is inherently more complex than makespan scheduling .",
    "@xcite show that energy - efficient scheduling is strictly harder than makespan scheduling , and present a generic model for scheduling which takes into consideration both the working power and the idle power of each machine .",
    "they propose three heuristic algorithms for energy - aware scheduling in a system where jobs have precedence constraints .",
    "though there have been a lot of work done in the field of scheduling , the prime focus of general works on scheduling  @xcite has been to optimize on objectives related to time  such as makespan , earliness , and avoidance of tardiness .    existing literature dealing with scheduling for energy reduction generally focuses on specific domains , such as communication networks , embedded systems , and high - performance computing .",
    "these works invariably rely on specific features and technologies of those domains .",
    "for instance ,  @xcite address parallel task scheduling for reducing energy consumption for high - end computing using the dvfs ( dynamic voltage and frequency scheduling ) technique with some heuristics .",
    "more recently ,  @xcite also base their approach on dvfs to minimize energy consumption ( as do many others ) . @xcite",
    "propose energy - aware task allocation using simulated annealing with timing adjustment for network - on - chip based heterogeneous multiprocessor systems .",
    "@xcite survey existing scheduling algorithms and software for reducing energy dissipation in performing tasks on different platforms including single processors , multicore processors , and distributed systems .",
    "this survey is quite comprehensive and discusses the architectural , software , and algorithmic issues for energy - aware scheduling of computing devices . @xcite",
    "give a heuristic for energy priority scheduling for variable voltage processors .",
    "@xcite use the combination of offline - dvfs and online - dpm ( dynamic power management ) techniques to reduce energy consumption in embedded systems .",
    "some recent anthologies  @xcite deal with energy efficiency in computing systems at various scales ( processors to data centers ) .",
    "however , while they are rich in pragmatic approaches and domain - specific ideas for energy efficiency , they do not present a theory of energy - efficient scheduling _",
    "per se _ , and only basic algorithms ( e.g. , greedy - min , greedy - max ) are considered on occasion .",
    "it is patently obvious that even though there are works on application - specific energy - efficient scheduling , a generalized theory is yet far from developed .    in the domain of microprocessor power management and energy saving ,",
    "much of the prior work uses speed scaling and power - down techniques  @xcite .",
    "@xcite suggests optimal power - down strategies with more than one low - power state .",
    "when a device is idle , their algorithm turns the device in low - power sleep state .",
    "@xcite use the other technique called speed scaling . @xcite",
    "have given a tighter bound for the yds algorithm given by  @xcite and proved that their bkp algorithm is cooling - oblivious .",
    "@xcite consider an arbitrary power function of speed , for speed scaling .",
    "there are some studies of scheduling whose theoretical developments can help in energy - efficient scheduling too .",
    "one such is divisible load theory , which studies methodologies involving the continuous and linear modeling of partition - able communication and computation loads for parallel processing  @xcite .",
    "another such field is multi - objective scheduling , in which machine cost is considered as one of the objectives .",
    "( in general , machine cost includes any cost which incurs because of usage of the machines of the system . )",
    "there is some prior work concerning scheduling for multiple criteria .",
    "for instance ,  @xcite consider two objectives for scheduling : one is time - related such as makespan ( as the customer s objective ) , and the other is total machine cost ( as the service provider s objective ) .",
    "they form different final objectives by combining these two objectives in various ways and analyze the complexity of the scheduling problem for each of these various combinations .",
    "@xcite propose a heuristic for bi - criteria scheduling with machine assignment costs with worst - case performance bounds .",
    "@xcite also work on multi - objective scheduling .",
    "other than makespan , they also minimize the total congestion and completion time , the maximum and total tardiness , and the number of tardy jobs .",
    "they give a coordination mechanisms for parallel machine scheduling .",
    "@xcite formulate an assignment scheme for the divisible load theory for sensing workload allocations .",
    "@xcite give a method of visualizing the relationships between computation and energy consumption ( in supercomputing and hpc applications ) as two - dimensional maps similar to isotherms .",
    "though the objectives considered in these and other such works can be seen as marginally relevant to minimizing energy ( setting energy consumed by a running machine as a machine cost ) , they have not considered the idle power consumptions of machines , which is needed for realistic analyses . in many papers that consider multiple scheduling objectives , all objectives are concerned with time only , and",
    "do not make sense for energy - minimal scheduling .",
    "the theoretical framework and classification of energy - minimal scheduling problems is not discussed in or derivable from any of these papers .    clearly then",
    ", there is a need of a theoretical framework , as presented here , which realistically models systems of machines considering both idle power and running power , and also allows us to classify the various types of problems involved in energy - minimal scheduling and understand their complexities .",
    "this theory can of course also be extended for further fine - grained analyses ( e.g. , for machines with multiple performance levels ) .",
    "the theoretical framework proposed is thus a necessary addition to existing and ongoing work focusing on heuristic approaches to energy - efficient scheduling , and also complements technology - specific approaches to energy reduction such as dvfs  @xcite .",
    "in this section we formally introduce our system model and define the energy - minimal scheduling problem in the most general sense .",
    "as any other scheduling problem , we have a set of interconnected machines and a set of jobs that are to be executed using the machines .",
    "we presume that all machines are connected in such a way that a job can be transfered from any machine to any other machine without any energy dissipation .",
    "jobs are independent and hence can be executed in any order and on any machine .    we consider two types of jobs , divisible and non - divisible",
    ". there can be two types of systems as well , based on the speeds of the machines in the system : one in which all machines run at the same speed ( even though their power ratings may be different ) , and the other class in which machines run at different speeds .",
    "thus , based on the type of job and the type of system , we have four classes of scheduling problems .",
    "let the set of @xmath3 machines in a system be denoted by @xmath4 , where @xmath5 and @xmath6 denotes the machine @xmath7 of the set @xmath4 .",
    "we discuss the precedence of machines later in this paper .",
    "@xmath8 denotes the working set of machines .",
    "the working power of machine @xmath6 is denoted as @xmath9 , and the idle power as @xmath10 .",
    "the sum of the idle power of all the machines is given by @xmath11 .",
    "the speed of machine @xmath6 is denoted as @xmath12 .",
    "the speed ( throughput of work per unit time ) of a machine is fixed throughout its working tenure .",
    "all machines in a system work in parallel , and the maximum working time of a system to execute a given set @xmath13 of @xmath14 jobs @xmath15 to @xmath16 is @xmath17 , which is the makespan of the system for that set of jobs .",
    "if machine @xmath6 works only for time @xmath18 , then the idle time of that machine @xmath6 is given by @xmath19 .",
    "the amount of work done by machine @xmath6 is represented by @xmath20 , where @xmath21    the weight ( processing time ) of job @xmath22 is denoted by @xmath23 and the sum of the weights of all jobs is given by @xmath24 . also , the sum of work done by all machines is equal to the total work to be done , i.e. , @xmath25 .",
    "when @xmath26 , then we say that the machines are identical in their working capacities or speed , implying that they can execute and complete any job given to them in equal time . also , in this case @xmath27 .",
    "and if in the present case all jobs are executed sequentially on one machine , then that time taken is equal to @xmath28 , the total amount of work to be done .",
    "the energy consumed by a machine can be calculated given the power consumption by the machine in working state and the duration for which the machine works .",
    "since the power rating of a machine is energy consumed per unit time , it is in principle possible to calculate the energy consumed by any machine over a given time duration by integrating the power consumption over time  @xcite .",
    "if the power consumed is constant over time , the energy is given by the product of power with time .",
    "in many systems like data centers , it is not a simple matter to shut off machines , even when they are not given any load .",
    "thus , if no machine is not switched off until the total work is over , even such an idle machine consumes some power though not producing any work . considering the energy consumption in idle state too , the total energy consumed by a machine is the sum of the energy consumed in the working state and that consumed in the idle state .",
    "the energy consumed by machine @xmath6 in the working state is given by @xmath29 , and the energy consumed in the idle state by @xmath30 .",
    "so the total energy consumption by a machine @xmath6 is given by @xmath31 .",
    "with this , the expression for the energy consumed in a system can be given as the sum of the energies consumed by all @xmath3 machines :    @xmath32 \\label{label : energyk}\\ ] ]    putting the value of @xmath33 , in  , @xmath34 \\label{label : energy}\\ ] ] the general energy equation can be formed by replacing @xmath18 with @xmath35 ( from  ) in  . @xmath36\\ ] ] after simplification , @xmath37 \\label{label : evarspeed}\\ ] ] where @xmath38 .",
    "the notation used is indicated in table  [ tab : notations ] .",
    "( though some terms are defined later in the paper , we list them here for quick reference . )",
    "> m0.27>m0.64 * symbol * & * meaning * + @xmath39 & total energy consumption of system with @xmath3 machines and jobs distributed to @xmath40 machines + @xmath17 & makespan of the system + @xmath4 & set of machines @xmath41",
    "+ @xmath8 & working set of machines + @xmath40 & number of machines on which jobs are distributed + @xmath9 & power consumption in working state by machine @xmath6 + @xmath10 & power consumption in idle state by machine @xmath6 + @xmath12 & speed of machine @xmath6 + @xmath18 & time spent in working state by machine @xmath6 + @xmath42 & time spent in idle state by machine @xmath6 + @xmath20 & amount of work given to machine @xmath6 + @xmath13 & set of jobs",
    "@xmath43 + @xmath23 & weight of job @xmath22 + @xmath28 & total working time of all the jobs +    we assume the following in our system :    1 .",
    "all jobs are independent , i.e. , there are no precedence constraints between jobs .",
    "it means a job need not wait for completion of any to start its execution .",
    "hence , there is no idle time ( gap ) for a machine in between the execution of two jobs .",
    "this implies that @xmath44 2 .   in the class",
    "where jobs are divisible , the divisibility of jobs means , jobs can be arbitrarily divided and assigned to any machine .",
    "all machines stay on for the duration of the makespan of the whole set of jobs ; no machine is switched off while others continue to run . at any instant",
    "while the jobs are being executed , each machine @xmath6 either consumes its working power @xmath9 if working , or its idle power @xmath10 if not .",
    "( the situation where a machine gets switched off to consume zero power while not executing a job , can of course be trivially handled by setting @xmath10 to 0 . )",
    "[ assum : order]for the model in which the speed of all machines is the same , all machines are indexed in increasing order of the differences of their working power and idle power , i.e. , @xmath45 where @xmath46 . for the model where machines can have different speeds , the machines are indexed in an order such that the first machine is the one with smallest @xmath47 and afterwards machines are indexed in non - decreasing order of @xmath48 , where @xmath49 .",
    "5 .   for the model",
    "in which the speed of all machines is the same , one unit of work takes one unit of time for execution , irrespective of the machine on which it is executed .    the problem of energy - minimal scheduling refers to finding schedules for a set of jobs which would require minimum total energy when executed on a given system :    1 .",
    "_ identical speed machines _ :",
    "+ the machines in the system have different working and idle power consumptions , but have equal speeds in execution of jobs .",
    "the aim for this type of system is to minimize @xmath50 given by  .",
    "2 .   _ different speed machines _ :",
    "+ machines can have different power consumptions as well as different speeds .",
    "the aim for this type of system is to minimize @xmath50 given by  .    for each of these classes we have two sub - classes , with divisible jobs and non - divisible jobs .",
    "in any of these classes , the aim is to schedule a set of jobs on the given set of machines such that the energy consumption of the system @xmath50 given by   and   is minimized .",
    "the minimum makespan scheduling does not guarantee minimal energy schedules , and that in fact makespan scheduling is a special case of energy - minimal scheduling , where the working power of machines is equal to their idle power . putting @xmath51 in  ,",
    "we get ,    @xmath52\\\\          & = & \\sum_{i = 1}^{m } \\mu(c_i)t\\end{aligned}\\ ] ]    this means that energy is directly proportional to makespan , and hence energy can be minimized by minimizing makespan if the working power is equal to idle power .",
    "consider an arguably more practical setting where idle power is less than the working power , @xmath53 , where @xmath54 : @xmath52\\\\      & = & \\sum_{i = 1}^{m } [ \\mu(c_i)\\tau(c_i ) + z_i\\mu(c_i)(t-\\tau(c_i))]\\\\          & = & \\sum_{i = 1}^{m } \\mu(c_i)[\\tau(c_i ) + z_it - z_i\\tau(c_i)]\\end{aligned}\\ ] ]    then , the equation of energy can be written as : @xmath55   \\label{label : powerratio}\\ ] ]    hence , from   we can see that energy can not be minimized by just minimizing makespan , though the energy consumption of an individual machine does depend upon its working time .",
    "hence energy minimization is a more generic problem than makespan minimization .    in this section",
    "we have introduced the system model and the assumptions of the scheduling problem we have considered .",
    "we have also indicated the objective function which we will be looking to minimize .",
    "we now proceed to solve scheduling problems in the following section .",
    "in this section we first find the precedence of machines , i.e. , the order in which they should be assigned work .",
    "this precedence helps in determining which machines should be alloted work and how much , to reduce the overall energy consumption of the system .    with differing power specifications of machines , it stands to reason that it may be advantageous to prefer some machines over others in doing jobs .",
    "we investigate the properties of the system to determine the precedence of machines so that the energy consumed in their execution is minimized .",
    "the problem of finding relative distribution of work among machines can be broken into two parts :    * given the set of @xmath3 machines , which subset of machines should be allowed to work and which should remain idle for all times during the makespan ? * what should be the distribution of work among the working machines ?    there are no restrictions on the jobs except that the total load is considered to be @xmath28 .",
    "this means that the results derived in this section are applicable to all type of systems .",
    "we first derive results for the case where machines have identical speeds and then for the case where they can have different speeds .      in this subsection",
    "we consider the relative work distribution among machines with identical speeds such that energy consumption is minimized .",
    "as indicated previously , we assume that all machines are indexed in the non - decreasing order of the differences between their working and idle power .",
    "we claim that when the machines are indexed in such an order , then the loading of machines should be such that the working times of these machines are in non - increasing order .",
    "given @xmath56 , then for energy optimality of the system , @xmath57 , where @xmath58 .",
    "[ lem1 ]    we prove this by contradiction . given @xmath59 , then let us say that for minimal energy consumption , @xmath60 .    with a little rearrangement of",
    "we get , @xmath61 \\label{label : energy1}\\ ] ]    this in turn gives : @xmath62        + [ ( \\mu(c_k)-\\gamma(c_k))\\tau(c_i ) + \\gamma(c_k)t ] \\\\      + & \\sum_{i = k+1}^{l-1 } [ ( \\mu(c_i)-\\gamma(c_i))\\tau(c_i ) + \\gamma(c_i)t ]        +   [ ( \\mu(c_l)-\\gamma(c_l))\\tau(c_i ) + \\gamma(c_l)t ] \\\\      + & \\sum_{i = l+1}^{m } [ ( \\mu(c_i)-\\gamma(c_i))\\tau(c_i ) + \\gamma(c_i)t ]   \\end{split } \\label{label : ensp}\\ ] ]    the two possible cases can be : when @xmath63 , and when @xmath64 .",
    "we derive the energy equations for both cases and then compare them . by comparing the energy equations in both , we arrive at a condition under which the energy consumed in one case is less , and find a contradiction .",
    "case 1 : @xmath63 . take @xmath65 and @xmath66 , where @xmath67 .",
    "putting these values in   we get , @xmath62      + [ ( \\mu(c_k)-\\gamma(c_k))(t + \\epsilon_1 ) \\\\      + & \\gamma(c_k)t ]       + \\sum_{i = k+1}^{l-1 } [ ( \\mu(c_i)-\\gamma(c_i))\\tau(c_i ) + \\gamma(c_i)t ]      + \\sum_{i = l+1}^{m } [ ( \\mu(c_i)\\\\      -&\\gamma(c_i))\\tau(c_i ) + \\gamma(c_i)t ]       + [ ( \\mu(c_l)-\\gamma(c_l))(t -\\epsilon_1 ) + \\gamma(c_l)t ]   \\end{split } \\label{label : ensp1}\\ ] ]    case 2 : @xmath64 .",
    "take @xmath68 and @xmath69 , where @xmath70 .",
    "putting these values in   we get , @xmath71      + [ ( \\mu(c_k)-\\gamma(c_k))(t -\\epsilon_2 ) \\\\      + & \\gamma(c_k)t ]      + \\sum_{i = k+1}^{l-1 } [ ( \\mu(c_i)-\\gamma(c_i))\\tau(c_i ) + \\gamma(c_i)t ]      + [ ( \\mu(c_l)\\\\      -&\\gamma(c_l))(t + \\epsilon_2 ) + \\gamma(c_l)t ]      + \\sum_{i = l+1}^{m } [ ( \\mu(c_i)-\\gamma(c_i))\\tau(c_i ) + \\gamma(c_i)t ]   \\end{split } \\label{label : ensp2}\\ ] ]    subtracting   from   to compare energies in both the cases , we get , @xmath72\\\\      & - [ ( \\mu(c_k)-\\gamma(c_k))(t -\\epsilon_2 ) + \\gamma(c_k)t ] \\\\       & + [ ( \\mu(c_l)-\\gamma(c_l))(t -\\epsilon_1 ) + \\gamma(c_l)t ] \\\\       & - [ ( \\mu(c_l)-\\gamma(c_l))(t + \\epsilon_2 ) + \\gamma(c_l)t ] \\end{split } \\label{label : enspdif}\\ ] ]    simplifying  , we get ,    @xmath73 \\ ] ]    if we say that in case 2 the energy consumed is less , this means @xmath74 >   0\\\\\\end{aligned}\\ ] ] @xmath75    is in contradiction to our assumption .",
    "we show which machines should be given comparatively more work then others .",
    "there is a special case in which the idle power of a machine is proportional to its working power .",
    "the following corollary covers machine precedence in such a case .",
    "when the ratio between the working power consumption ( @xmath9 ) and idle power consumption ( @xmath10 ) of the machine is some constant @xmath76 , then @xmath77 is proportional to @xmath9 , so we need to index the machines in the order of @xmath9 .    for energy optimality it may well be suitable to give work to only some of the machines while letting others run completely idle .",
    "we now state the condition showing which machines should be used when using only a subset of all the machines is beneficial .",
    "[ lem2 ] if we give work to only some @xmath40 machines , where @xmath78 , then , for reduced energy consumption , these are the @xmath40 machines that form the set @xmath79 given our index order .    for the @xmath40 machines working , @xmath80 , and for the other @xmath81 machines @xmath82 .",
    "if @xmath83 then there must be any @xmath18 from the set @xmath84 which is equal to @xmath85 .",
    "but by lemma  [ lem1 ] , @xmath86 since @xmath83 .",
    "these two statements are contradictory and so it is not possible that @xmath83 .",
    "hence it stands proved that for energy optimality , if we give work to only some @xmath40 machines where @xmath78 , then these @xmath40 machines are of the set @xmath79 .    using lemma  [ lem2 ] , given some number of machines to be used , we can find which machines",
    "should be assigned jobs .",
    "we now state and prove the condition which decides how many machines should be used so that energy consumption of the system is minimal .    let the energy consumption of a system of @xmath3 machines , when jobs are distributed to @xmath40 machines , be given by @xmath39 . if we add one more machine to the working set of machines , then we take some amount of work from previously working machine(s ) and give that amount of work to the new machine .",
    "@xmath87 represents the amount of work taken away from machine @xmath6 and given to other machine(s ) .",
    "when @xmath88 machines are working , for machine @xmath89 to be given work ( i.e. , @xmath90 ) and result in reduced energy consumption , the following must hold .",
    "@xmath91 +   s(c_1)\\sum_{i = 1}^{m } \\gamma(c_i ) > 0 \\label{label : th}\\ ] ] [ th4 ]    we prove this by construction . if only @xmath40 of the @xmath3 machines are used and the rest remain idle all the time , can be re - written as follows , where the energy is expressed by @xmath39 : @xmath92   \\\\ & + \\mu(c_r)\\tau(c_r ) + \\gamma(c_r)(t-\\tau(c_r ) ) + \\sum_{i = r+1}^{m } \\gamma(c_i)t   \\end{split}\\ ] ]    putting @xmath93 , [ by  , lemma  [ lem1 ] and lemma  [ lem2 ] ] @xmath94 \\\\ & + \\mu(c_r)\\tau(c_r ) + \\gamma(c_r)(\\tau(c_1)-\\tau(c_r ) ) + \\sum_{i = r+1}^{m }",
    "\\gamma(c_i)\\tau(c_1 )     \\end{split }   \\label{eq : ere}\\ ] ] re - arranging  , @xmath95    also , we know that , @xmath96    taking out the term @xmath40 from  ,",
    "@xmath97    @xmath98    putting the value of @xmath99 from   in  , we get , @xmath100    re - arranging  , @xmath101 \\\\   & + ( \\mu(c_r)-\\gamma(c_r))w   + \\tau(c_1)\\sum_{i = 1}^{m}\\gamma(c_i ) \\end{split }   \\label{label : enf}\\ ] ]    this is a general equation for the energy of a system with @xmath3 machines , where jobs are given to @xmath40 machines , where @xmath78 and @xmath28 is the total working time to complete all jobs .",
    "if we give jobs to @xmath88 machines in a @xmath3 machine system , its energy can be derived by putting @xmath102 in  .",
    "also the @xmath18s are changed to @xmath103s as in the following : @xmath104\\tau(c_i ) ' \\\\&+ ( \\mu(c_{r-1 } ) - \\gamma(c_{r-1}))w    + \\tau(c_1)'\\sum_{i = 1}^{m } \\gamma(c_i ) \\label{label : enf1 } \\end{split}\\ ] ]    it is better that we give work to more machines only when the energy consumption by doing so is lowered .",
    "hence , if @xmath105 , then only we should give work to @xmath40 machines , else we give to @xmath88 machines only . thus the condition for using @xmath40 machines can be written as : @xmath106    using   and  , @xmath107\\\\ & + ( \\tau(c_1)'-\\tau(c_1))\\sum_{i = 1}^{m } \\gamma(c_i ) \\end{split }    \\label{label : n16}\\ ] ]    taking @xmath108 , we get , @xmath109   + s(c_1)\\sum_{i = 1}^{m } \\gamma(c_i )    \\label{label : n17}\\ ] ] here , @xmath87 informally signifies the amount of work taken away from machine @xmath6 , to facilitate giving work to the machine @xmath89 .    to give the jobs to @xmath40 machines @xmath110 . @xmath111",
    "+ s(c_1)\\sum_{i = 1}^{m } \\gamma(c_i ) > 0   \\label{label : th4e}\\ ] ] qed .    having derived the condition describing which machines to use for doing jobs , we now find out the amount of work to be given to each of these machines .",
    "if we give jobs to @xmath112 machines , then for minimum energy consumption , the distribution of jobs on all @xmath40 machines should be equal and given by @xmath113 .",
    "+ [ th5 ]    we prove this by contradiction . consider two cases , one in which the distribution of work among the machines , which qualify to work according to theorem  [ th4 ] is equal , and the other in which the work distribution is unequal .",
    "we claim , to show the contradiction , that in the case in which the distribution is equal , the energy consumption is greater as compared to the other , and that such is hence a non - optimal distribution .",
    "case 1 : equal distribution , @xmath114 , i.e. , @xmath115 .",
    "case 2 : unequal distribution , @xmath116 , @xmath117 and @xmath118 .    here",
    "we assign more work to machine 1 compared to that required by equal distribution of work among @xmath40 machines ( by lemma  [ lem1 ] , a bias has to favor smaller - numbered machines , and therefore machine 1 most of all ) .",
    "the amount of extra work given to machine 1 is @xmath119 and this amount of work is withdrawn from machine @xmath89 .",
    "we chose only to alter the work distributions of machines 1 and @xmath40 to keep the proof simple .",
    "we could have chosen any machine @xmath120 for doing extra work and any machine @xmath121 for doing lesser work , where @xmath122 . but for allotting extra work @xmath119 to machine @xmath120",
    ", we have to increase the amount of work assigned to all machines in the set @xmath123 by at least @xmath119 , so that lemma  [ lem1 ] is satisfied .",
    "similarly for reducing the work of machine @xmath121 by @xmath119 , we have to reduce the amount of work assigned to all machines in the set @xmath124 by at least @xmath119 so that lemma  [ lem1 ] is satisfied .",
    "hence if we want to alter the amount of work of just two machines ( to keep the proof simple ) from an equal distribution , then we have alter it for machine @xmath125 and @xmath89 .",
    "it may be noted that our proof is generalizable for imbalances involving any numbers of machines .",
    "let the energy in case 1 be denoted by @xmath126 and the energy in case 2 be @xmath127 .",
    "then according to our proposition : @xmath128 @xmath129 rewriting   after expanding , we get @xmath130\\\\ & + ( \\mu(c_r ) - \\gamma(c_r))w + \\tau(c_1)\\sum_{i = 1}^{m}\\gamma(c_i )   \\end{split } \\label{label : enfull}\\ ] ] putting the respective values of @xmath18 s in   to derive @xmath126 , @xmath131\\\\   & + ( \\mu(c_r ) - \\gamma(c_r))w + \\left(\\frac{w}{r}\\right)\\sum_{i =   1}^{m}\\gamma(c_i )   \\end{split }   \\label{label : enfull1}\\ ] ] similarly , we may derive @xmath127 as : @xmath132\\\\   & + ( \\mu(c_r ) - \\gamma(c_r))w + \\left(\\frac{w}{r}+ \\epsilon\\right)\\sum_{i =   1}^{m}\\gamma(c_i )    \\end{split }    \\label{label : enfull2}\\ ] ] subtracting   from  , we get @xmath133 \\label{label : enfulld}\\ ] ] using   and  , we get @xmath134 now from theorem  [ th4 ] , @xmath91 +   s(c_1)\\sum_{i = 1}^{m }",
    "\\gamma(c_i ) > 0 \\ ] ] re - writing the above equation , we get , @xmath135 + s(c_1)\\sum_{i = 1}^{m }",
    "\\gamma(c_i )   > 0 \\end{split }   \\label{label : th4ea}\\ ] ]    now @xmath136 and according to our assumption  [ assum : order ] in section  [ sec : pf ] , @xmath137 .",
    "hence the first and the second term of   are negative , and the third term is positive .",
    "so for the condition in   to hold , the following is necessary : @xmath138    this means , @xmath139    but   is in contradiction with  .",
    "hence , @xmath140 is false , which means , @xmath141 .",
    "hence it stands proved that we should give equal fractions of jobs to all the machines to get minimum energy .",
    "thus , for energy - minimal scheduling in this setting , work has to be divided equally among @xmath40 machines , where @xmath40 is chosen to satisfy  .",
    "using these results we may give a more general statement .",
    "[ cor : equal_time ] when a given set of machines are chosen for work , then all those machines should be in working state for an equal length of time for energy - minimal scheduling .    in the next subsection , we analyze the case when the speeds of machines are also different .",
    "that case is more general and includes the current case of identical speeds , but the results for the identical speed case help develop theorems for variable speed system .      in the previous subsection we gained insight on",
    "how a subset of machines can prove to be more advantageous for working for the entire duration of the makespan , while the rest of the machines are better left idle at all times . in this subsection",
    "we use the results of previous subsection to develop a theory for systems in which machines can have different speeds .    from corollary",
    "[ cor : equal_time ] , we know that even when the speeds of machines are different , all the machines of the working set should be active for the complete makespan .",
    "this means that if only a working set @xmath8 of machines is assigned work , then , @xmath142    @xmath143    hence , if work is assigned to the subset @xmath8 of @xmath3 machines , where @xmath144 , the energy consumption can be found using   and   in  , we get , @xmath145 t \\label{eq : eqg}\\end{aligned}\\ ] ] putting the value of @xmath146 in   @xmath147 t \\label{eq : evartemp}\\ ] ]    using  , the makespan of the system can be found as , @xmath148    since our aim is to find out relative distribution of work , without any loss of generality , we can assume that the total work is one unit to make the representation simpler , hence   can be re - written as :    @xmath149    using   in   we get , @xmath150    we now find out the set @xmath8 for which @xmath39 of   is minimum . for the ease of representation , let @xmath151 and @xmath152 hence   can be written as @xmath153 we now find out that if all the work has to be assigned to only one machine , then which will that machine be .",
    "we present the answer in our first lemma of this section .",
    "if all the work is assigned to one machine @xmath6 , i.e. , @xmath154 and @xmath155 , then for energy minimality this should be the machine with minimum @xmath47 .",
    "[ lemm1 ]    substituting @xmath155 in  , we get , @xmath156 hence to minimize energy consumption @xmath157 , we need to choose @xmath6 for which @xmath47 is minimum .",
    "as mentioned in assumption  [ assum : order ] in section  [ sec : pf ] , we order the machines such that the first machine is with minimum @xmath47 . hence here @xmath158 , and the first machine is given work in this case .",
    "now , if we want to give job to two machines then we will only give if the energy consumed by two machines is less than the energy consumption of one machine .",
    "the same principle applies whenever we want to expand the working set of machines .",
    "the new expanded set must have lesser energy consumption than the previous set . in the next theorem",
    ", we specify the conditions under which a set can be expanded .    if a machine @xmath159 has to be included in the working set of machines @xmath8 , then the following condition must be satisfied @xmath160 [ thm2 ]    re - writing our condition  , using   and   @xmath161 multiplying the denominators both sides , @xmath162 adding @xmath163 both sides , @xmath164 back substituting @xmath165 and @xmath166 , we get @xmath167 let @xmath168 be the new set formed for including @xmath159 in @xmath8 .",
    "@xmath169 the left hand side of   gives the energy consumption by working set @xmath8 .",
    "the right hand side of  , gives the energy consumption when machine @xmath159 is included in the original working set .",
    "hence the energy consumption of the new set is lesser when the condition   is satisfied .",
    "the previous theorem gives the condition in which a machine could be included in the working set to reduce the energy consumption of the system .",
    "but there can be many machines which satisfy this condition .",
    "we need to find out the machine which reduces the energy consumption by largest amount and hence make the system energy minimal .",
    "our next theorem specifies which machine should be given preference for inclusion in working set .",
    "[ thm : varspeed2 ] given any two machines @xmath159 and @xmath120 which qualify to be included in working set @xmath8 according to theorem  [ thm2 ] , i.e. , @xmath170 and @xmath171 for minimal energy consumption , machine @xmath159 shall be chosen over @xmath120 if @xmath172 [ thmm3 ]    given the condition  , we would like to derive energy equations from it . multiplying the denominators both sides in  , we get , @xmath173    by adding and subtracting @xmath174 in equation  , we get , @xmath175 from   and  .",
    "we get , @xmath176    @xmath177    @xmath178    @xmath179    adding   and  , we get , @xmath180    now adding and subtracting @xmath181 in  , we get , @xmath182 in  , left hand side gives the energy consumption of the system when machine @xmath159 is included in the working set @xmath8 , while the right hand side gives the energy consumption of the system when machine @xmath120 is included .",
    "the energy consumption is lesser with machine @xmath159 in comparison to machine @xmath120 and hence machine @xmath159 would be given preference to be included in working set .",
    "when we put lemma  [ lemm1 ] and theorem  [ thm : varspeed2 ] together , we get the order in which machines will get preference to be alloted work .",
    "this order is same as mentioned in assumption  [ assum : order ] in section  [ sec : pf ] . combining lemma  [ lemm1 ] , theorem  [ thm : varspeed2 ] and assumption  [ assum : order ]",
    ", we can state a corollary .    if the machines are indexed in an order such that the first machine is the one with smallest @xmath47 and afterwards in increasing order of @xmath48 , and if the working set contains @xmath40 machines , then for minimal energy consumption @xmath183 , where each machine in this set is working for an equal amount of time .    using this corollary ,",
    "can be re - written as , @xmath184 \\label{eq : evartemp5}\\ ] ] which gives the energy consumption of a system with total work @xmath28 .    from",
    ", energy is dependent on work @xmath28 , but from   and theorems  [ thm2 ] and  [ thm : varspeed2 ] we know that finding the number of working machines ( value of @xmath40 ) from the given set @xmath4 of machines is independent of work @xmath28 .",
    "we see that  ,   and   are independent of @xmath28 , showing that the machines used and the scheduling decisions do not depend upon the quantum of the work given to the system .",
    "this in turn means that , some systems can be inherently wasteful and energy inefficient .",
    "these results can be used in configuring the system , that which machines we want in system model . in some cases",
    "we do not want certain machines in the system .",
    "when initially we have certain machines ( set @xmath4 ) , and we have to design the system , then using our results we can choose which machines we want in our system .    [ cor : indw ]",
    "given a set @xmath4 of machines , we use @xmath185 in our system and leave @xmath186 machines out of system .",
    "our results are independent of the work to be done . from results we know that , to minimize the energy of the system some machines should always idle .",
    "so these results ( which guide which machines should be used ) , will help in designing of the system . so that we can shut - off some machines which are always kept idle .    in this section",
    ", we found the precedence amongst machines for allotting work based on their energy and speed specifications .",
    "the results derived in this section are applicable for handling any class of jobs , which means that the precedence of machines will remain same irrespective of whether the jobs are divisible , non - divisible or whether they have precedence constraints . in the next sections we consider different classes of systems based on type of jobs .",
    "depending upon the jobs to be executed the systems can be classified into many categories .",
    "we have already mentioned those categories in section  [ sec : pf ] . in the current section",
    "we analyze the complexity of scheduling problem for these various types of systems and give scheduling algorithms for the same .",
    "we first analyze systems with identical speed machines and then move ahead to systems with different speeds .      in section  [ subsec : i_sp ]",
    ", we gave results which govern the scheduling of systems with identical speed machines .",
    "given the total amount of work and energy specifications of machines , we can find the number of machines which have to be assigned work using results of section  [ subsec : i_sp ] .",
    "algorithm  [ algo1 ] is an implementation of those results .",
    "sort @xmath187 @xmath188 , @xmath189 @xmath190 return @xmath17    algorithm  [ algo1 ] takes the number of machines , the working power and idle power of the machines , and the total work to be done as input , and gives the value of @xmath40 , i.e. , the number of working machines , as output .",
    "the machines are indexed in the precedence order given by assumption  [ assum : order ] in section  [ sec : pf ] .",
    "now , we apply binary search to find the value of @xmath40 , such that we get minimal energy value of the system .",
    "the algorithm is based on the previously given results .",
    "the computation complexity of algorithm  [ algo1 ] is @xmath2 .",
    "we now find the complexity of scheduling problems and give algorithms for divisible and non - divisible jobs .",
    "in this case we are given a set @xmath13 of jobs , where jobs can be arbitrarily broken into any number of smaller jobs and these smaller jobs can be executed parallely on different machines .",
    "we consider the energy consumption overhead due to division / breaking of jobs overhead to be null .",
    "since the jobs are divisible , they can be trivially distributed over @xmath40 machines with makespan @xmath17 , where @xmath40 and @xmath17 are given by algorithm  [ algo1 ] .",
    "hence the energy of system with divisible loads can be calculated using following equation .",
    "@xmath191   \\label{eq : eqe}\\ ] ]    using algorithm  [ algo1 ] and   we can find the energy of the system .",
    "energy - minimal scheduling of divisible jobs on identical speed machines can be done in linear time .",
    "we now analyze the complexity of scheduling of non - divisible loads .",
    "given the set @xmath13 of non - divisible jobs , and time required to execute job @xmath22 on a machine with unit speed @xmath23 ; our aim is to distribute the set @xmath13 of jobs among the given set @xmath4 of machines such that energy consumption is minimum . from corollary  [ cor : equal_time ]",
    "it is evident that whichever machines are chosen to work , they should be working for an equal amount of time to achieve energy minimality .",
    "but it is not straightforward of sometimes even possible to distribute work in such a way when jobs are non - divisible .",
    "we prove that it is an np - hard problem to calculate the minimal - energy schedule for the current case .",
    "[ thmnpidentical ] in a system where machines have identical speeds and jobs are non - divisible , computing the energy - minimal schedule is an np - hard problem .",
    "let @xmath40 denote the number of machines which are given work and @xmath17 is the makespan according to algorithm  [ algo1 ] .",
    "since all the machines have identical speed , the scheduling problem is to make exclusive subsets @xmath192 from set @xmath13 such that the sum of work in set @xmath7 is @xmath17 , i.e. , @xmath193 given a finite set of positive numbers and another positive number called the goal , to find the subset whose sum is closest to the goal is well known as the classical _ subset - sum problem _",
    "@xcite . in the current scenario ,",
    "the set of positive numbers @xmath194 has to be distributed in subsets @xmath192 such that sum of each subset is the positive number @xmath17 . for each subset ( @xmath192 ; @xmath195 ) , this problem of finding the exclusive subsets @xmath192 can be seen as the classical _ subset - sum problem_. since the subset - sum problem is np - hard  @xcite , and our problem is reduced to subset - sum problem ; energy - minimal scheduling of jobs in a system where jobs are non - divisible is np - hard .",
    "since finding the energy - minimal schedule is np - hard , we develop an approximation algorithm to find energy efficient schedules . though we strive to achieve the makespan given by algorithm  [ algo1 ] , in a system with non - divisible loads it is not always possible to achieve it .",
    "we state the theorem which specifies the ideal makespan @xmath196 and working set of machines @xmath197 for energy minimality of system with non - divisible jobs .    given a system with identical speed machines and a set @xmath13 of jobs with longest job of length @xmath198 , the makespan is given by @xmath199 and the working set of machines @xmath200 , where @xmath201    it is not possible to have makespan lesser than @xmath198 since jobs can not be divided .",
    "also , if we take @xmath196 lesser than @xmath17 , then we can not have a energy - minimal schedule . hence for energy minimality , @xmath202 from corollary  [ cor : equal_time ] , it is evident that work should be distributed equally if possible to the working machines . hence with a possibly increased makespan , the number of working machines might get decreased and given by  . also from lemma  [ lem2 ] ,",
    "it is evident that the working set of machines is given by : @xmath203    it is not always possible to keep each machine working till time @xmath196 . some machines might work for more than @xmath196 and some might get less than that because of non - divisibility of jobs . from lemma  [ lem1 ] , we know that the amount of work should be in decreasing order by the machine s indices .",
    "with all this information , the approximation algorithm for energy - minimal scheduling of non - divisible jobs can be given as follows .",
    "@xmath204 sort @xmath205 @xmath206 reverse - sort @xmath207 @xmath208 @xmath209 @xmath210@xmath211 return @xmath17 @xmath212 return @xmath50    in algorithm  [ algo3 ] , we index the machines in non - decreasing order of the difference of their working power and idle power .",
    "jobs are indexed in non - increasing order of their weight .",
    "initially we create @xmath40 empty buckets for jobs to be filled in .",
    "first @xmath40 jobs are chosen and given to each @xmath40 bucket , such that each bucket has one element .",
    "now , to distribute remaining @xmath213 jobs to the buckets we follow a sequential process .",
    "the weighted sum of jobs of each bucket is calculated and the next job is included in the bucket in which the value is least .",
    "the same process is repeated until all jobs are included in one or other bucket or sets .",
    "now we index the buckets in non - decreasing order of their total weights .",
    "we assign the jobs of set @xmath7 to machine @xmath7 . now the working time of all the machines is calculated .",
    "hence we can calculate the makespan , which is the maximum working time of all the machines .",
    "this approximation algorithm is inspired by graham s algorithm  @xcite which arranges a set of independent non - divisible jobs on identical speed machines such that the makespan is minimum .",
    "we made some changes in the algorithm to mould it for different power specification of machines .",
    "we now calculate the bound on deviation from ideal energy consumption due to approximation .",
    "the maximum possible ratio of energy consumption using algorithm  [ algo3 ] and ideal energy consumption is given by : @xmath214    from  , if all the @xmath215 machines are working for an equal amount of time @xmath196 , then energy consumption is given by : @xmath216 \\label{eq : idealen}\\ ] ] from algorithm  [ algo3 ] , the energy consumed is given by : @xmath217 assume that the algorithm gave such @xmath218 that all the machines other than @xmath159 and @xmath120 are allotted work equal to @xmath196 .",
    "mathematically , @xmath219 where @xmath220 . and @xmath221 since @xmath222 , according to our algorithm @xmath223 and so @xmath224 . using these values from   and in  , we get , @xmath225 simplifying above , @xmath226 now since @xmath222 , we have @xmath227 . to compute the bound we are looking for the case where @xmath228 is maximum . that will occur when",
    "@xmath229 using   in  , we get , @xmath230 now according to  @xcite , the bound on makespan is given by : @xmath231 using this bound in  , we get @xmath232 simplifying above @xmath233 @xmath234 substituting the values , we get , @xmath235 ) + t_o \\gamma(\\frac{4}{3}-\\frac{1}{3r_o } - 1)}{t_o[\\sum_{i = 1}^{r_o }   ( \\mu(c_i ) - \\gamma(c_i ) ) + \\gamma ] } \\label{eq : ib1}\\ ] ] @xmath236    in the worst case , the values of working power and idle power are equal , i.e .",
    "@xmath237 , so the bound is given by , @xmath238 if @xmath215 is very large , i.e .",
    "when @xmath239 , then , @xmath240    gives the lower bound of inefficiency of our algorithm and   gives the upper bound .",
    "we now move ahead to analyze the class of scheduling problems in which machines can have different working speeds .      in this section ,",
    "along with power specifications of machines we also consider the speeds of machines to be different and give algorithms for both divisible jobs and non - divisible jobs . in section  [ subsec :",
    "var_sp ] , we proved various lemmas and theorems which govern the scheduling of systems with different speed machines .",
    "using these results algorithm  [ algo2 ] finds the set of machines which should be assigned work for the energy - minimal scheduling when the machines of the system have different speeds .",
    "@xmath241 sort @xmath187 @xmath190 return @xmath17 @xmath242 return @xmath20    algorithm  [ algo2 ] takes the number of machines , the working power , idle power and speeds of the machines , and the total work to be done as input , and gives the value of @xmath40 , i.e. , the number of working machines , as output . in the algorithm ,",
    "we first index the machines in their precedence order , as given in assumption  [ assum : order ] in section  [ sec : pf ] . then to calculate the value of @xmath40",
    ", we check the condition in   from theorem  [ thm2 ] . then from the given values of total work to be done and the computed value of number of machines , we calculate the makespan .",
    "the algorithm also computes the amount of work that has to be given to respective machines .",
    "the complexity of algorithm  [ algo2 ] is @xmath2 .",
    "we now find the complexity of scheduling problems and give algorithms for divisible and non - divisible jobs .      in this case , jobs can be arbitrarily broken into any number of smaller jobs and these smaller jobs can be executed parallely on different machines .",
    "also we consider the energy consumption overhead due to division / breaking of jobs overhead to be nil . in this scenario",
    "the jobs can be trivially distributed over @xmath40 machines such that machine @xmath6 gets @xmath20 amount of work(as specified by algorithm  [ algo2 ] ) .",
    "the energy consumption of system with divisible load can be given by : @xmath243 \\label{eq : en_diff_div}\\ ] ]    clearly the scheduling of divisible jobs can be done by using algorithm  [ algo2 ] which is a linear time algorithm .",
    "energy - minimal scheduling of divisible jobs on a system of machines running at different speeds can be done in linear time .",
    "many might argue that many systems do not have the luxury to divide loads arbitrarily , but it must be noted that efficiency in a system with divisible loads can be seen as upper bound to the achievable efficiency .",
    "we proceed to analyze the case in which jobs are non - divisible in the next section .      in this section",
    "we first prove that scheduling non - divisible jobs for energy optimality on a system with machines having different speeds is an np - hard problem .",
    "we then give an approximation algorithm for the same .    in a system where machines have different speeds and jobs are non - divisible ; computing energy - minimal schedule in that case is an np - hard problem .    the amount of work @xmath20 that has to be assigned to machine @xmath6 is given by algorithm  [ algo2 ] .",
    "now we need to make exclusive subsets @xmath192 from set @xmath13 such that the sum of work in set @xmath192 is @xmath20 , i.e. , @xmath244 as also discussed with theorem  [ thmnpidentical ] , this is in the form of the subset - sum problem which is np - hard  @xcite .",
    "since finding the energy - minimal schedule is np - hard , we develop an approximation algorithm to find energy efficient schedules .",
    "the approximation algorithm tries to distribute jobs such that the ideal makespan specified by algorithm  [ algo2 ] is achieved .    given a system of machines with different speed and a set @xmath13 of jobs with longest job of length @xmath198 and the speed of the fastest machine",
    "is given by @xmath245 , the best possible achievable makespan is given by : @xmath246 where @xmath17 is given by algorithm  [ algo2 ] .",
    "if there is a job which can not be completed within @xmath17 , irrespective of the arrangement of jobs , then we increase the best achievable makespan @xmath196 to accommodate that biggest job .",
    "the biggest job can not be completed any earlier than @xmath247 . also , since any schedule with makespan lesser than @xmath17 should be suboptimal .",
    "hence , @xmath248    if the makespan is increased then there can be possible reduction in number of working machines .",
    "the ideal number of working machines @xmath215 is given by the minimum number of machines which satisfy , @xmath249    using this @xmath215 as input , we present an approximation algorithm which tries to distribute jobs amongst machines with different speed such that the machines would work for an equal amount of time .",
    "sort @xmath250 in non - decreasing order sort @xmath251 in non - increasing order @xmath252 @xmath210 return @xmath17 @xmath253 $ ] return @xmath50    in algorithm  [ algo4 ] , we first index the machines in decreasing order of the speed of the machines .",
    "we also index the jobs in non - increasing order of their weights .",
    "now , we take a job at a time and find that on which machine it will finish first , based on the speed of the machine .",
    "then we assign that job to that particular machine .",
    "similarly the process is repeated till all the jobs are assigned to some machines .",
    "now , the working time of all machines is calculated , and the maximum working time of all machines is the makespan .    the approximation algorithm may not achieve the exact @xmath196 , but it is within certain bounds .",
    "the bound for the makespan given by  @xcite of such an lpt ( largest processing time ) schedule is @xmath254    given this bound on makespan , we derive the bound on energy consumption of our algorithm .    when the speeds as well as the power specifications of the machines are different , and when jobs are non - divisible , then a bound on the energy consumption using algorithm  [ algo4 ] and ideal energy consumption is given by : @xmath255    the energy consumption for ideal schedule is given by : @xmath256 since we do not know which machines are are working for time more than @xmath196 and which ones lesser than @xmath196 , for the upper bound we assume that all machines are working for @xmath257 .",
    "hence , @xmath258 clearly , @xmath259 @xmath260 by  ( * ? ? ?",
    "* theorem 4.1 ) , @xmath261 from   and  , we get , @xmath262    as the bound on energy depends on makespan in our algorithm , the worst case bound for our algorithm is also @xmath1 .",
    "there can be two measures for assessing the energy efficiency of a system of machines : one , to consider the total energy consumed by the system to complete some work ; and the second , to consider the fraction of the energy consumed by machines in the system to do work over the total energy consumed in the system .",
    "the first measure gives a sense of the energy required by the system per unit work produced , and the second measure indicates how much of the energy consumed by the system goes into work , and how much is idle ( non - working ) consumption by the system .",
    "we hold that the first measure , energy per unit work , is the more meaningful one ( as it can lead to lowered overall energy consumption while completing some amount of work ) .",
    "our analysis clearly indicates that these two measures of energy efficiency are incompatible , in the sense that they can not be simultaneously optimized for arbitrary systems . to see why",
    ", we may consider   for the total energy of the system . in  , if we put @xmath263 , then the working energy is given by : @xmath264 \\label{label : we}\\ ] ]        considering shows that the ratio of the working energy to total energy can only be optimized by increasing the value of @xmath40 , i.e. , when @xmath267 , but this violates theorem  [ th4 ] which tells us that for minimum total energy consumption , the value of @xmath40 may not be necessarily be equal to @xmath3 .",
    "thus , a system running in such a way as to consume the least possible energy while completing some work will not always be most efficient in terms of the second measure , as the energy consumption by the idle machines can be significant .",
    "conversely , if we seek to optimize the system performance by the second measure and reduce the idle consumption of machines , then the overall energy consumption to do the work is not always minimized .",
    "the data center energy efficiency metric called power usage effectiveness ( pue )  @xcite , an industry standard recommended by the u.s .",
    "environmental protection agency under its energy star program , is an energy efficiency measure of the second kind , as it considers only the ratio of the total energy to the working energy .",
    "it is thus not a surprise that the pue comes with its share of controversy and criticisms  @xcite .",
    "bambagini , m. , m.  bertogna , m.  marinoni , and g.  buttazzo2013 .",
    "an energy - aware algorithm exploiting limited preemptive scheduling under fixed priorities . in _",
    "8th ieee international symposium on industrial embedded systems ( sies 2013 ) _ , pp .",
    "bansal , n. , h .-",
    "chan , and k.  pruhs2009 .",
    "speed scaling with an arbitrary power function . in _ proceedings of the twentieth annual acm - siam symposium on discrete algorithms _ , pp .",
    "society for industrial and applied mathematics .",
    "berral , j.  l. , i.  goiri , r.  nou , f.  juli , j.  guitart , r.  gavald , and j.  torres2010 . towards energy - aware scheduling in data centers using machine learning .",
    "in _ e - energy 10 : proceedings of the 1st international conference on energy - efficient computing and networking _ , pp .",
    "215224 .",
    "hirofuchi , t. , h.  nakada , h.  ogawa , s.  itoh , and s.  sekiguchi2010 . eliminating datacenter idle power with dynamic and intelligent vm relocation . in _ distributed computing and artificial intelligence _ ,",
    "volume  79 of _ advances in intelligent and soft computing _ , pp .",
    "springer berlin heidelberg .",
    "huang , j. , c.  buckl , a.  raabe , and a.  knoll 2011 .",
    "energy - aware task allocation for network - on - chip based heterogeneous multiprocessor systems . in _",
    "19th euromicro international conference on parallel , distributed and network - based processing ( pdp 2011 ) _ , pp .   447454 , cyprus .        ,",
    "e. and g.  heiser2010 .",
    "dynamic voltage and frequency scaling : the laws of diminishing returns . in _",
    "hotpower 10 : proceedings of the 2010 international conference on power aware computing and systems _ , vancouver , canada .",
    "wang , y. and m.  saksena1999 .",
    "scheduling fixed - priority tasks with preemption threshold . in _",
    "sixth international conference on real - time computing systems and applications ( rtcsa 99 ) _ , pp .",
    "328335 , hong kong , china ."
  ],
  "abstract_text": [
    "<S> the problem of attaining energy efficiency in distributed systems is of importance , but a general , non - domain - specific theory of energy - minimal scheduling is far from developed . in this paper , we classify the problems of energy - minimal scheduling and present theoretical foundations of the same . </S>",
    "<S> we derive results concerning energy - minimal scheduling of independent jobs in a distributed system with functionally similar machines with different working and idle power ratings . </S>",
    "<S> the machines considered in our system can have identical as well as different speeds . </S>",
    "<S> if the jobs can be divided into arbitrary parts , we show that the minimum - energy schedule can be generated in linear time and give exact scheduling algorithms . for the cases where jobs are non - divisible , we prove that the scheduling problems are np - hard and also give approximation algorithms for the same along with their bounds .    </S>",
    "<S> * keywords * : scheduling , energy efficiency , distributed systems , computational complexity </S>"
  ]
}
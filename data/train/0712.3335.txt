{
  "article_text": [
    "let @xmath7 be an undirected graph on the vertex set @xmath8 . a _",
    "vertex cover _ of @xmath9 is a subset @xmath10 of @xmath11 such that each edge of @xmath9 has at least one endpoint in @xmath10 .",
    "the _ vertex cover problem _ ( vcp ) is to compute a vertex cover of smallest cardinality in @xmath9 .",
    "vcp is a classical np - hard problem .",
    "it is well known that an optimal vertex cover of a graph can be approximated within a factor of 2 in polynomial time by taking all the vertices of a maximal ( not necessarily maximum ) matching in the graph or rounding the lp relaxation solution of an integer programming formulation  @xcite .",
    "there has been considerable work ( see e.g. survey paper @xcite ) on the problem over the past 30 years on finding a polynomial - time approximation algorithm with an improved performance guarantee .",
    "it is known that computing a @xmath12-approximate solution in polynomial time for vcp is np - hard for any @xmath13  @xcite , which improved the previously known non - approximability bound of @xmath14 in @xcite .",
    "in fact , no polynomial - time @xmath15-approximation algorithm is known for vcp for any constant @xmath16 . under the assumption of unique game conjecture  @xcite",
    "many researchers believe that a polynomial time @xmath17 approximation algorithm is not possible for vcp .",
    "the current best known bound on the performance ratio of a polynomial time approximation algorithm for vcp is @xmath18  @xcite , which improved the previously known ratio of @xmath19 @xcite .",
    "halperin @xcite showed that an approximation ratio of @xmath20 can be obtained with the semidefinite programming ( sdp ) relaxation of vcp where @xmath21 is the maximum degree of @xmath9 .",
    "other sdp - relaxations of the vcp were studied in @xcite . on four colorable graphs ,",
    "a @xmath0-approximate solution can be identified in polynomial time .",
    "recently asgeirsson and stein  @xcite reported extensive experimental results using a heuristic algorithm which obtained no worse than @xmath0-approximate solutions for all the test problems they considered . a natural integer programming formulation of vcp can be described as follows : + @xmath22 let @xmath23 be an optimal solution to ( [ vc ] ) .",
    "then @xmath24 is an optimal vertex cover of graph @xmath9 .",
    "the linear programming relaxation of the above integer program , denoted by lp , is given by relaxing the integrality constraints to @xmath25 .",
    "any vertex cover must contain at least @xmath26 vertices of an odd cycle of length @xmath27 .",
    "this motivates the following extended linear programming ( elp ) relaxation of the vcp : @xmath28 where @xmath29 denotes the set of all odd - cycles of @xmath9 and @xmath30 contains @xmath31 vertices for some integer @xmath32 .",
    "note that even if there are an exponential number of odd - cycles in @xmath9 , we know that the set of odd cycle inequalities has a polynomial - time separation scheme and hence the elp is polynomially solvable .",
    "further , it is possible to compute an optimal basic feasible solution ( bfs ) of elp in polynomial time .",
    "arora , bollob@xmath33s and lov@xmath33sz @xcite studied the effect of adding odd - cycle inequalities to the lp relaxation of the vcp .",
    "they proposed that the integrality gap of the lp with all the odd - cycle inequalities is basically 2 in @xcite .    by solving a series of elp relaxations on appropriately defined graphs ,",
    "we show that a @xmath34-approximation algorithm for vcp can be obtained in polynomial time for a large class @xmath35 of graphs . for all graphs @xmath36",
    "the integrality gap is @xmath0 .",
    "further , for an arbitrary graph , we develop a polynomial time approximation algorithm for vcp that guarantees a solution @xmath1 such that @xmath37 where @xmath3 is an optimal solution and @xmath38 is an error bound output by the algorithm .",
    "so far , we could not compute an explicit example of reasonable size where @xmath39    for any graph @xmath9 , we sometimes use the notation @xmath40 to represent its vertex set and @xmath41 to represent its edge set .",
    "we first introduce some notations and definitions . an odd cycle @xmath42 _ dominates _ another odd cycle @xmath43 ( denoted by @xmath44 if all vertices of @xmath42 are contained in @xmath43 . in this case",
    "we also use the terminology @xmath43 is _ dominated by _ @xmath42 . note that an odd cycle @xmath45 is not dominated by any other odd cycle in @xmath9 if and only if @xmath45 is cordless . if @xmath46 then the odd cycle constraint in elp corresponding to @xmath42 implies the odd cycle inequality corresponding to @xmath43 .",
    "two odd cycles are _ equivalent _ if they have the same vertex set .",
    "note that the number of cordless odd - cycles in graph @xmath9 is no more than that of triangles in the complete graph with the same number @xmath47 of vertices .",
    "thus the number of cordless odd cycles in a graph on @xmath47 vertices is @xmath48 .",
    "our approximation algorithm performs a series of graph reduction operations .",
    "let us first discuss these reductions and their inherent properties .",
    "* 3-cycle reduction : * this reduction was considered earlier by many researchers including most recently by asgeirsson and stein  @xcite .",
    "its properties associated with the elp relaxation and its power when used in conjunction with our other reductions resulted in superior outcomes .",
    "suppose @xmath9 be a graph containing a 3-cycle .",
    "without loss of generality assume there is a 3-cycle on vertices @xmath49 .",
    "let @xmath50 .",
    "let @xmath51 be an optimal basic feasible solution ( bfs ) for the elp on @xmath9 with objective function value @xmath52 and @xmath53 be an optimal bfs for the elp on @xmath54 with optimal objective function value @xmath55 .",
    "[ 3c1]@xmath56 .",
    "note that @xmath57 defined by @xmath58 for @xmath59 is a feasible solution to elp on @xmath54 .",
    "thus its objective function value @xmath60 satisfies @xmath61 . but",
    "@xmath62 since @xmath63 and the result follows .",
    "* active edge reduction : * this reduction technique is very powerful with some interesting properties .",
    "let @xmath64 be an optimal bfs for the elp on @xmath9 and let @xmath65 be an _ active edge _ in @xmath9 with respect to the solution @xmath64 , i.e. , @xmath66 .",
    "let @xmath67 .",
    "construct the new graph @xmath68 from @xmath9 as follows . in graph",
    "@xmath69 connect each vertex @xmath70 to each vertex @xmath71 whenever such an edge is not already present and delete vertices @xmath72 and",
    "@xmath73 with all the incident edges . the operation of constructing @xmath68 from @xmath9 is called _ active edge reduction_.    [ ll1 ] if an active edge @xmath65 is contained in an odd cycle , say @xmath74 in @xmath9 then @xmath75 where @xmath76 is the vertex set @xmath77    the proof of this lemma is straightforward .",
    "the lemma shows that if an odd cycle has an active edge , there is an implicit sub - odd - cycle for the odd cycle where the solution @xmath64 satisfies this smaller implicit odd cycle constraint .",
    "let @xmath78 be the optimal objective function value of elp on @xmath68 .",
    "the following lemma provides a somewhat surprising property of the active edge reduction .",
    "[ a1 ] if @xmath9 does not contain 3-cycles using arc @xmath65 , @xmath79 .",
    "since @xmath9 does not contain 3-cycles using arc @xmath65 , we have @xmath80 .",
    "we now show that @xmath81 is a feasible solution to elp on @xmath82 note that @xmath83 for all @xmath70 and @xmath84 for all @xmath71 are edges of @xmath9 .",
    "thus @xmath85 since @xmath65 is an active edge @xmath66 . adding ( [ e1 ] ) and ( [ e2 ] ) we get @xmath86 for all @xmath70 and @xmath71 .",
    "thus @xmath87 satisfies all edge inequalities in the elp on @xmath82 the addition of the new edges @xmath88 for @xmath70 and @xmath71 probably created new odd cycles in @xmath68 .",
    "any such odd cycle must be one of the following four types :    * uses exactly one new edge @xmath89 where @xmath90 ; * uses exactly two new edges of the form @xmath91 where @xmath92 and @xmath93 ; * uses exactly two new edges of the form @xmath94 where @xmath95 and @xmath96 ; * must contain a sub odd cycle which is of type 1,2 , or 3 above .",
    "let @xmath42 be a type 1 odd cycle in @xmath68",
    ". then @xmath97 must be an odd cycle in @xmath9 .",
    "then by lemma  [ ll1 ] @xmath87 must satisfy the odd cycle inequality corresponding to @xmath42 .",
    "let @xmath98 be a type 2 odd cycle in @xmath82 then it is of the form @xmath99 where @xmath100 is a path in both @xmath68 and @xmath101 then @xmath102 must be an odd cycle in @xmath9 . from ( [ e1 ] ) , ( [ e2 ] ) and @xmath66",
    ", we have @xmath103 thus , since @xmath64 satisfy the odd cycle inequality corresponding to @xmath104 , in view of ( [ e3 ] ) @xmath87 must satisfy the odd cycle inequality corresponding to @xmath98 .",
    "the case of type 3 odd cycles is similar to type 2 odd cycles and it can be verified that @xmath87 satisfies these odd cycle inequalities as well . since @xmath87 satisfies all edge inequalities in @xmath68 and also satisfies all odd cycle inequalities corresponding to odd cycles of the form type 1 , type 2 , type 3 , and those does not use any new edge of @xmath68 , by dominance property , it must satisfy all type 4 odd cycle inequalities . thus @xmath87 is a feasible solution to the elp on @xmath82",
    "let @xmath105 be the objective function of @xmath87 .",
    "then @xmath106 . but @xmath107 and the result follows .    0.7 cm    if @xmath108 is a vertex cover of @xmath68 then @xmath109is a vertex cover of @xmath9 .    if @xmath110 then all arcs in @xmath9 incident on @xmath111 except possibly @xmath112 is covered by @xmath108",
    "then @xmath113 covers all arcs incident on @xmath73 , including @xmath65 and hence @xmath114 is a vertex cover in @xmath9 .",
    "if at least one vertex of @xmath115 is not in @xmath108 , then all vertices in @xmath116 must be in @xmath108 by construction of @xmath68 .",
    "thus @xmath117 must be a vertex cover of @xmath9 .    * over - active edge reduction : * an edge @xmath118 is over active with respect to an elp optimal bfs @xmath64 if @xmath119 .",
    "let @xmath120 , and @xmath121 be an optimal bfs for the elp on @xmath122 with objective function value @xmath55 .",
    "[ z0 ] @xmath123    * @xmath124-reduction : * let @xmath125 and @xmath126 consider the graph @xmath127 let @xmath128 be an optimal bfs for the elp on @xmath129 with objective function value @xmath130",
    ".    [ z1 ] if @xmath108 is a vertex cover of @xmath129 then @xmath131 is a vertex cover of @xmath9 .",
    "further , @xmath132    we skip the proof of lemma [ z0 ] and [ z1 ] , which is easy to obtain .",
    "the active edge hypothesis discussed below is the assumption we make in the algorithm .",
    "the algorithm guarantees a @xmath0-approximate solution when this hypothesis is valid .",
    "+ * active edge hypothesis : *    let us now discuss our approximation algorithm .",
    "the algorithm guarantees a @xmath0-approximate solutions when the intermediate graphs used in the algorithm satisfies the active edge hypothesis .",
    "the basic idea of the algorithm is very simple .",
    "we apply 3-cycle , active edge , over active edge and @xmath124 reductions repeatedly until the underlying elp solution is integer , in which case the algorithm goes to a back tracking step .",
    "active edge hypothesis guarantees this termination criterion for all graphs for which it is valid .",
    "if we encounter a graph that violates the active edge hypothesis , the algorithm is terminated .",
    "we record the vertices in the active edge reductions step but do not determine which one to be included in the vertex cover . in the back track step we choose exactly one of these two vertices to form part of the vertex cover we construct .",
    "active edge reduction may create new odd cycles in the graph under consideration which in turn could result in additional 3-cycles at later stages of the reduction steps and then 3-cycle and @xmath124 reduction steps are applied again and the whole process is continued until we reach the back tracking step . in this step , the algorithm computes a vertex cover for @xmath9 using the integer solution obtained in the last reduction step together with all vertices removed in 3-cycle and over active edge reductions , vertices with value 1 removed in the @xmath124 reduction steps , and the selected vertices in the backtrack step from the active edges recorded during the active edge reduction steps . a formal description of the elp - algorithm is given below .    * * the elp - algorithm * * \\ { * } @xmath133 . * solve the elp relaxation of vcp on graph @xmath134 .",
    "let @xmath135 be the resulting optimal bfs with optimal objective function value @xmath136 .",
    "* \\ { * }  @xmath137 , @xmath138 @xmath139 , @xmath140 . 1 .   \\ { * } let @xmath141 and @xmath142 .",
    "* if * @xmath143 * goto * step 4 * else * @xmath144 * endif * 2 .   \\ { * } * if * @xmath134 has 3-cycles * then * + choose a 3-cycle @xmath145 . set @xmath146 ; @xmath147 * goto * step 2 * endif * 3 .",
    "* if * @xmath134 has neither active edges nor over - active edges * then * k = k+1 and * goto * step 2 * endif * 4 .   \\ { * }  * if * @xmath134 has active edges * then * choose an active edge @xmath65 .",
    "let @xmath148 where @xmath149 is the graph obtained from @xmath134 using active edge reduction operation .",
    "let @xmath150 ; @xmath151 * goto * step 2 * endif * 5 .",
    "\\ { * }  * if * @xmath134 has over - active edges * then * + choose an over - active edge @xmath118 .",
    "set @xmath152 , and @xmath153 ; @xmath147 * goto * step 2 * endif * * l = k .",
    "let @xmath154 .",
    "* if * @xmath155 * then * output @xmath1 and stop * endif * * \\ { * } + let @xmath156 , + * if * @xmath157 * then * @xmath158 * endif * + * if * @xmath159 * then * @xmath160 , where @xmath161 @xmath162 and @xmath163 * endif * + * if * @xmath164 * then * @xmath165 * endif * + @xmath166 , + * if * @xmath167 * then * * goto * beginning of step 5 * else * output @xmath1 and stop * endif *    [ conclusion ] under the active edge hypothesis on @xmath134 for @xmath168 , the elp algorithm correctly identifies a @xmath34-approximate solution @xmath1 for the vertex cover problem on @xmath9 in polynomial time .    note that if @xmath169 at any iteration @xmath170 , then by the active edge hypothesis , @xmath134 must contain an active edge or an over - active edge , or it must contain a 3-cycle .",
    "thus in each execution of step 2 , at least one node is removed .",
    "thus the algorithm executes step 2 @xmath171 times and the backtrack step takes at most @xmath47 iterations where @xmath172 .",
    "the complexity of step 2 is polynomial since the lp can be solved in polynomial time .",
    "thus it can be verified that the complexity of the algorithm is polynomial .    to establish the validity of the algorithm ,",
    "note that @xmath173 is a vertex cover for graph @xmath134 for @xmath174 .",
    "in particular , @xmath1 is a vertex cover for the graph @xmath9 .",
    "let @xmath136 be the objective function value at the lp solution identified in step 2 at the kth execution of the step .",
    "then @xmath175 further , from lemma  [ 3c1 ] , [ a1 ] , [ z0 ] and [ z1 ] , @xmath176 where @xmath177 adding inequality ( [ objective ] ) for @xmath155 to @xmath178 , we get that @xmath179 note that @xmath180 is the number of vertices added to the vertex cover constructed for @xmath181 to obtain the vertex cover constructed for @xmath182 in the @xmath170th iteration of the backtrack step . note that @xmath183 if 3-cycle reduction is used to construct @xmath181 from @xmath182 , @xmath184 if active edge reduction is used to construct @xmath181 from @xmath182 , @xmath185 if over - active edge reduction is used to construct @xmath181 from @xmath182 , and @xmath186 if only @xmath124-reduction is used to construct @xmath181 from @xmath134 .",
    "thus we have @xmath187 for @xmath188 now , @xmath189 where @xmath3 is an optimal vertex cover of @xmath9 .",
    "let us now consider a class of graphs where the active edge hypothesis is true .",
    "let @xmath190 be a cycle in @xmath9 .",
    "the incidence vector of @xmath190 is the @xmath47-vector @xmath191 @xmath192 where @xmath193 note that equivalent cycles have the same incidence vector .",
    "a collection @xmath194 of odd cycles in @xmath9 is said to be linearly independent if their incidence vectors are linearly independent .",
    "let @xmath9 be a graph containing triangles or has less than @xmath195 independent cordless odd cycles , then @xmath9 satisfies the active edge hypothesis .",
    "left graph in figure 1 below gives an example of @xmath54 on 11 nodes with more than 11 cordless odd cycles but only 7 of them are independent .",
    "active edge hypothesis is true on this graph or any subgraph of it or a super graph of it obtained by adding 3-cycles .",
    "however , it is possible to construct graphs with @xmath47 nodes and @xmath47 independent odd cycles and have no 3-cycles .",
    "right graph in figure 1 below gives such a graph on 25 nodes with no 3-cycles and 25 independent 5-cycles .",
    "the vector with @xmath196 for @xmath197 is an optimal bfs of the elp on this graph .",
    "if we encounter this bfs on this graph in the elp reduction algorithm , we terminate with the flag that `` active edge hypothesis failed '' .",
    "it may be noted that there are alternative optimal bfs to this elp relaxation which is integer .",
    "in fact solving this elp using lindo generated integer optimal solution \\{@xmath198 , if @xmath199 , otherwise } and not the fractional optimal solution we constructed above .",
    "thus even if we encounter a situation where the active edge hypothesis is not satisfied in the algorithm , one may look for an active edge in an alternative optimal solution .",
    "such a solution can be explored by forcing one of edge inequalities to be equality in the elp and solving this modified elp for each edge . at any stage , if the objective function value is not increased , then we have an alternative elp solution with an active edge and the active edge reduction can be carried out .",
    "let us now discuss various techniques to handle the situation where the active edge hypothesis fails .",
    "these techniques provides minor improvements on the performance of the algorithm .",
    "* random edge reduction : * remove an edge @xmath65 from @xmath9 along with its two incident nodes .    without loss of generality",
    "assume @xmath200 and let @xmath201 let @xmath202 be an optimal bfs for the elp on @xmath9 with objective function value @xmath52 and @xmath203 be an optimal bfs for the elp on @xmath54 with optimal objective function value @xmath55 .",
    "[ 3c5]@xmath204 .",
    "reduction operations in algorithm elp can easily be modified to incorporate the random edge reduction step . unlike the active edge reduction , which chooses exactly one node from an active edge",
    ", the random edge reduction takes both nodes of the edge selected randomly .",
    "but the optimal vertex cover does not necessarily contain both these nodes and may contain only one of them .",
    "this is a 2-approximation .",
    "the active edge reduction and @xmath124-reduction however preserve optimality . thus for each node selected in a @xmath124-reduction step or an active edge reduction step , we can perform one random edge reduction in the algorithm and still preserve the @xmath0-approximation guarantee . to improve the probability of a @xmath0-approximation guarantee ,",
    "we want to make sure the total number of nodes collected in active edge reduction step and @xmath124-reduction step to be as large as possible .",
    "so it is better to perform an active edge reduction step in the elp reduction algorithm before the three cycle reduction . to achieve this we want to make sure @xmath65 is not part of a 3-cycle in @xmath134 , otherwise lemma [ a1 ] is not valid .",
    "fortunately , this is true since if @xmath65 is active and is part of a 3-cycle , the third node will have a value 1 in the elp optimal solution and the @xmath124 reduction step would have removed this node .",
    "consider the enhanced elp algorithm where step 3 is replaced by : +    * \\ { * }  @xmath137 , @xmath138 @xmath139 , @xmath140 , @xmath205 . 1 .",
    "let @xmath206 , + * if * @xmath207 or @xmath134 has an active edge , * goto * step 3 ( 3 ) * endif * 2 .",
    "\\ { * } @xmath208 , t=0 , + * while * @xmath209 * do * choose an edge @xmath210 .",
    "solve the elp on @xmath134 with the edge inequality corresponding to @xmath65 replaced by an equality .",
    "let @xmath211 be the optimal bfs obtained with the objective function value @xmath212 . +",
    "* if * @xmath213 * then * @xmath214 and * goto * step 3(3 ) * else * @xmath215 * endif * + * endwhile * + * if * t=0 , * goto * step 3(5 ) * endif * 3 .   \\ { * } @xmath142 .",
    "+ * if * @xmath143 , * goto * step 4 , * else * @xmath144 * endif * 4 .   \\ { * }  * if * @xmath134 has active edges * then * choose an active edge @xmath65 .",
    "let @xmath148 where @xmath149 is the graph obtained from @xmath134 using active edge reduction operation .",
    "let @xmath150 ; @xmath151 * goto * step 2 * endif * 5 .   \\ { * } * if * @xmath134 has 3-cycles * then * + choose a 3-cycle @xmath145 . set @xmath146 ; @xmath147 * goto * step 2 * endif * 6 .   \\ { * }  * if * @xmath134 has over - active edges * then * + choose an over - active edge @xmath118 . set @xmath152 , and @xmath153 ; @xmath147 * goto * step 2 * endif * 7 .",
    "\\ { * }  * if * the active edge hypothesis does not hold for @xmath134 * then * choose any edge @xmath65 .",
    "let @xmath152 , and @xmath216 ; @xmath151 * goto * step 2 * endif *    let @xmath217 and @xmath218 be the number of active - edge reductions , random - edge reductions , 3-cycle reductions and over - active edge reductions , respectively , performed in the enhanced elp algorithm .",
    "let @xmath219 , @xmath220 and @xmath221 .",
    "the enhanced elp computes a vertex cover @xmath1 on @xmath9 in polynomial time such that @xmath222 , where @xmath3 is an optimal vertex cover on @xmath9 .",
    "further , @xmath223 the enhanced elp algorithm computes a @xmath0-approximate solution .",
    "when @xmath224 the enhanced elp algorithm computes an optimal solution . recall that @xmath225 is the optimal objective function value of elp on @xmath9 .",
    "note that @xmath1 has at most @xmath226 extra nodes compared to an optimal vertex cover . thus if @xmath227 then , @xmath228 .",
    "the enhanced elp algorithm computes a vertex cover @xmath1 on @xmath9 in polynomial time such that @xmath37 , where @xmath3 is an optimal vertex cover on @xmath9 .",
    "in this paper , we presented a polynomial time approximation algorithm that computes a vertex cover @xmath1 such that @xmath37 , where @xmath3 is an optimal vertex cover and @xmath4 is an error factor identified by the algorithm .",
    "in all the examples we constructed @xmath4 turned out to be zero . it would be interesting to compute explicit examples where @xmath229 .",
    "it seems that the elp algorithm may not guarantee a @xmath230-approximate solution for vcp on all graphs , since it is based on the optimal objective function value of the elp relaxation and the integrality gap of the elp is basically 2 @xcite .",
    "the proof in  @xcite is probabilistic in nature and establishes existence of a graph for which integrality gap is 2 .",
    "no constructive proof of this is known .",
    "the operation of active edge reduction is crucial to our algorithm .",
    "let @xmath64 be an optimal solution to the elp problem , an edge @xmath118 is said to be a _ small edge _ with respect to @xmath64 if @xmath231 .",
    "if an active edge exists in @xmath9 with respect to @xmath64 , then it will be a small edge .",
    "if @xmath9 has no 3-cycles and @xmath65 is a small edge , one may be tempted to conjecture that there exists an optimal vertex cover @xmath232 of @xmath9 containing only one of the nodes in @xmath233 .",
    "it turns out that this is true for a large class of graphs .",
    "if it is true in general , then it leads to a polynomial time @xmath34-approximation algorithm for vcp on any graph @xmath9 .        however , we have a very interesting counter example ( see figure [ fig2 ] ) for this establishing that such a claim is not necessarily true . there are five different optimal vertex covers for the graph given in figure [ fig2 ] which are listed below : @xmath234    the unique optimal solution @xmath235 to elp is given by @xmath236 for all  @xmath72 . thus any edge is a small edge . if the small edge is selected as any of the following : @xmath237 , @xmath238 , both of their incident nodes are in all optimal vertex covers .",
    "note that this graph is maximal without 3-cycles on 25 nodes , in the sense of that any additional edge will result in a 3-cycle in the graph .",
    "the graph discussed above does not satisfy active edge hypothesis .",
    "nevertheless , the elp algorithm with extensions discussed in section 3 guarantees a @xmath230-approximate solution for this graph , since only two random edge reductions are needed by following appropriate general rules that selects @xmath239 for the operation of random edge reduction . +",
    "this work was partially supported by an nserc discovery grant awarded to abraham p. punnen .",
    "the first author would be very grateful to dr .",
    "jiawei zhang and dr .",
    "donglei du for several helpful discussions .",
    "d. s. hochbaum , approximating covering and packing problems : set cover , independent set , and related problems , in _ approximation algorithms for np - hard problems _ , 94 - 143 , edited by d. s. hochbaum , pws publishing company , 1997 ."
  ],
  "abstract_text": [
    "<S> we develop a polynomial time @xmath0-approximation algorithm to solve the vertex cover problem on a class of graphs satisfying a property called `` active edge hypothesis '' . </S>",
    "<S> the algorithm also guarantees an optimal solution on specially structured graphs . </S>",
    "<S> further , we give an extended algorithm which guarantees a vertex cover @xmath1 on an arbitrary graph such that @xmath2 where @xmath3 is an optimal vertex cover and @xmath4 is an error bound identified by the algorithm . </S>",
    "<S> we obtained @xmath5 for all the test problems we have considered which include specially constructed instances that were expected to be hard . </S>",
    "<S> so far we could not construct a graph that gives @xmath6 .    </S>",
    "<S> * keywords : * vertex cover problem , approximation algorithm , lp - relaxation , odd - cycle , np - complete problems </S>"
  ]
}
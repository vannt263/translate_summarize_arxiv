{
  "article_text": [
    "this paper describes a regulation technique for a class of dynamical systems , designed for output tracking of a given setpoint reference .",
    "the regulator consists of an integral control with a variable gain , computed on - line so as to enhance the closed - loop system s stability margins and yield effective tracking .",
    "the gain - adjustment algorithm is based on the derivative of the plant s output with respect to its input control , and therefore the regulation technique is suitable for systems where such derivatives are readily computable in real time .",
    "this includes a class of stochastic timed discrete event dynamic systems ( deds ) and hybrid systems ( hd ) where the derivative is computable by the infinitesimal perturbation analysis ( ipa ) sample - gradient technique .",
    "our motivation is derived from the problem of regulating instructions throughput in multicore computer processors , and following an initial study of that problem in ref .",
    "@xcite we extend the technique to a general class of deds and hs .",
    "the need for regulating instruction throughput at the hardware level in modern computer processors stems from real - time applications where constant throughput facilitates effective real - time task and thread ( subprogram ) scheduling , as well as from multimedia applications where a fixed frame rate must be maintained to avoid choppy video or audio .",
    "the design of effective regulators is challenging because of the lack of predictive analytical or prescriptive models , and unpredictable high - rate fluctuations of instructions - related switching activity factors at the cores .",
    "for this reason , we believe , most of the published control techniques are ad hoc ( see the survey in ref .",
    "a systematic control - theoretic approach has been pursued in refs .",
    "@xcite which applied a pid controller and analyzed the effects of proportional controls with fixed gains .",
    "concerned with the unpredictability and rapid changes in the thread - related activity factors , ref .",
    "@xcite sought a controller with adaptive gain .",
    "furthermore , it considered scenarios where measurements and computations in the control loop must be performed as quickly as possible , even at the expense of accuracy . to this end",
    "it considered controlling the instruction throughput by a core s clock rate , and applied an integral controller whose real - time gain - adaptation algorithm is designed for stabilizing the closed - loop system and yielding effective tracking convergence .",
    "the gain - adaptation algorithm is based on ipa as described in the sequel .",
    "an abstract , discrete - time configuration of the closed - loop system is shown in figure 1 , where @xmath0 denotes the time - counter , @xmath1 is the setpoint reference , @xmath2 is the control input to the plant , @xmath3 is the resulting output , and @xmath4 is the error signal . the system is single - input - single - output so that all the quantities @xmath2 , @xmath3 , @xmath5 and @xmath1 are scalar .",
    "let @xmath6 represent a performance function of the plant with respect to its input @xmath7 , and assume that the function @xmath8 is differentiable .",
    "given the @xmath9 input variable @xmath2 , suppose that the the plant s output @xmath3 provides an estimation of @xmath10 .",
    "the controller that we consider has the form @xmath11 and we recognize this as the discrete - time version of an integrator ( summer ) with a variable gain .",
    "as mentioned earlier , the gain sequence @xmath12 is designed to enhance the stability margins of the closed - loop system and reduce oscillations of the tracking algorithm while speeding up its convergence . as we shall see , one way to achieve that is to have @xmath13 be defined as @xmath14 with `` prime '' denoting derivative with respect to @xmath7 .",
    "however , it may not be possible to compute the derivative term @xmath15 , and approximations have to be used . denoting the approximation error by @xmath16 , the computed gain @xmath17",
    "is defined as @xmath18    in the systems considered in this paper the plant represents average measurements taken from a physical system or a cyber system over contiguous time - intervals called _ control cycles_. for example , suppose that the physical system is a continuous - time dynamical system with input @xmath19 and output @xmath20 , @xmath21 ; its state variable is immaterial for the purpose of this discussion . divide the time axis into contiguous control cycles @xmath22 , @xmath23 , suppose that the control input is fixed during @xmath24 to a value @xmath25 @xmath26 , and define @xmath3 by @xmath27 where @xmath28 is the duration of @xmath22 . alternatively , @xmath3 can represent average measurements taken from the output of a discrete - time or discrete - event system .",
    "generally we impose no restriction on the way the control cycles are defined , they can be fixed a priori or determined by counting events in a deds ; we only require that the input @xmath2 remains unchanged during @xmath24 and can be modified only when the next control cycle begins .",
    "observe that eq .",
    "( 3 ) suggests that the computation of @xmath13 takes place during the control cycle @xmath29 .",
    "in fact , we assume that the implementation of the control law takes place in the following temporal framework .",
    "suppose that the quantities @xmath30 , and @xmath31 , @xmath32 , and @xmath13 have been computed or measured by the starting time of @xmath24 .",
    "then @xmath33 is computed from eq .",
    "( 1 ) at the start of @xmath24 and we assume that this computation is immediate . during @xmath24 ,",
    "the plant produces @xmath34 from the applied input @xmath33 while @xmath35 is computed from eq .",
    "( 3 ) , with the index @xmath36 instead of @xmath0 . finally ,",
    "@xmath37 is computed at the end of @xmath24 from the equation @xmath38 and we assume that this computation is immediate .",
    "the plant s actions yielding @xmath34 from @xmath2 during @xmath22 may represent a physical or cyber process or measurements thereof , and the computation of @xmath35 is assumed to be carried out concurrently .",
    "of a particular interest to us is the case where @xmath10 is an expected - value performance function of a deds or hs , @xmath34 is an approximation thereof computed from a sample path of the system , and the term @xmath39 in the right - hand side ( rhs ) of eq .",
    "( 3 ) ( with @xmath36 ) is computable by ipa .",
    "one of the main appealing features of ipa is the simplicity of its gradient ( derivative ) algorithms and efficiency of their computation .",
    "this , however , comes at the expense of accuracy .",
    "in particular , in its principal application area of queueing systems during its earlier development , ipa often yielded statistically biased gradient estimators ( see refs .",
    "@xcite ) . to ameliorate this problem , stochastic flow models ( sfm ) consisting of fluid queues ( see refs .",
    "@xcite ) and later extended to more general stochastic hs in refs .",
    "@xcite , offer an alternative framework to queueing networks for the application of ipa ; in their setting the ipa gradients typically are simpler and more accurate .",
    "still approximations must be made either in the ipa algorithms or in the system s model when a stochastic hs is used as a modeling abstraction for a deds . however , our overriding concern regarding the regulation s control law is that of simplicity and computational efficiency even if they come at the expense of accuracy .",
    "this is justified by sensitivity - analysis results , derived below , showing that asymptotic tracking of the regulation scheme holds under substantial relative errors in the gradient estimation .",
    "the objective of this paper is to investigate the performance of our proposed tracking technique on a number of deds and hs by using the ipa method for computing the integrator s adaptive gain in the loop . in this we leverage on the simplicity and low computational efforts required for the ipa derivatives .",
    "furthermore , simulation experiments suggest that the regulation algorithm works well despite substantial errors in the gradient estimation , thus allowing us to tilt the balance between precision and low computing times towards fast computation at the expense of accuracy .",
    "it may be asked why we use an integral control and not a pi or pid controller , and it is pointed out that we have tested via simulation ( not reported here ) the addition of a proportional element to the integral control , and found no improvement .",
    "this is not surprising since , as indicated by the analysis in section 2 , the particular gain - adaptation of the integral controller stabilizes the system for a class of plant functions @xmath8 . in summary , the contributions of this paper are : 1 ) .",
    "it proposes the first general - purpose , systematic performance - regulation technique for a class of timed deds and hs .",
    "2 ) . to - date",
    ", the main use of ipa has been in optimization , while this paper pursues a new kind of application , namely performance regulation .",
    "it moves away from the traditional pursuit of unbiased ipa gradients , and instead searches for low - complexity approximations perhaps at the expense of accuracy or unbiasedness .",
    "we believe that these three points of novelty may open up a new dimension in the research and applications of ipa .",
    "the rest of the paper is organized as follows .",
    "section 2 describes the regulation technique in an abstract setting .",
    "the following three sections present simulation results on three types of systems , and highlight the tradeoffs between simplicity and accuracy .",
    "section 3 concerns a queue , section 4 considers a fluid petri net production - control model , and section 5 discusses a deds model of throughput in computer processors .",
    "finally , section 6 concludes the paper .",
    "the rationale behind the choice of @xmath13 in eq .",
    "( 2 ) ( if its rhs can be computed exactly ) can be seen by considering the simple case where the plant consists of a deterministic , time - invariant , memoryless nonlinearity , and hence the @xmath2  -  to  -  @xmath3 relation has the form @xmath40 suppose that the function @xmath8 is differentiable , and denote its derivative by @xmath41 .",
    "an application of the newton - raphson method for solving the equation @xmath42 results in the recursive equation @xmath43 where @xmath44 is defined by ( 2 ) .",
    "this yields eq .",
    "( 1 ) , and we discern that the control law , comprised of repeated recursive applications of eqs .",
    "@xmath45 , amounts to an implementation of the newton - raphson method .",
    "an application of this control technique to a class of dynamic , time - varying systems is one of the main objectives of the present paper .",
    "its convergence is underscored by established results on the sensitivity of the newton ",
    "raphson method with respect to variations in function and gradient - evaluations @xcite .",
    "therefore , the analysis of the paper next will be presented in an abstract setting of the newton - raphson method , and then related to the control configuration of figure 1 .",
    "let @xmath46 be a continuously - differentiable function , and consider the problem of finding a root of the equation @xmath47 , @xmath48 .",
    "the basic step of the newton - raphson method is @xmath49 and the algorithm is comprised of running this equation recursively for @xmath23 starting from an initial guess @xmath50 .",
    "convergence of the algorithm can be characterized by the equation @xmath51 which implies that every accumulation point of the sequence @xmath52 , @xmath53 , satisfies the equation @xmath54 .",
    "convergence of the newton - raphson method is well known under broad assumptions ( see , e.g. , ref .",
    "@xcite ) . ref .",
    "@xcite investigated the case where the derivative term @xmath55 in eq .",
    "( 8) is approximated rather than evaluated exactly , and showed that convergence is maintained under suitable bounds on the errors .",
    "taking it a step further , we consider the case where errors arise in the function evaluations @xmath56 as well .",
    "( 9 ) no longer can be expected , but ( see @xcite ) the limit @xmath57 is bounded from above by a term that depends on the magnitude of the errors in a suitable sense . specifically , let @xmath58 and @xmath16 denote additive error terms in the computations of the function @xmath56 and its derivative @xmath55 , respectively , so that eq .",
    "( 8) is transformed into @xmath59 define the relative errors @xmath60 and @xmath61 .",
    "the following results , lemma 2.2 and proposition 2.3 , are proved under the following assumption .",
    "the function @xmath62 is continuously differentiable .",
    "given a closed interval @xmath63\\subset r$ ] , define @xmath64 , and @xmath65 .",
    "consider the algorithm comprised of recursive runs of eq .",
    "( 10 ) . for every @xmath66 ,",
    "define @xmath67 in other words , if @xmath68 then @xmath69 is the next integer @xmath70 such that @xmath71 , and if @xmath72 then @xmath69 is the next integer @xmath70 such that @xmath73 .    for",
    "every @xmath74 and @xmath75 there exist @xmath76 and @xmath77 such that , for every closed interval @xmath78 where the function @xmath79 has the following three properties : ( i ) @xmath62 is either monotone nondecreasing throughout @xmath78 or monotone non - increasing throughout @xmath78 ; ( ii ) @xmath62 is either convex throughout @xmath78 or concave throughout @xmath78 ; and ( iii ) @xmath80 , the following holds : if , for some @xmath66 , ( a ) for every @xmath81 , @xmath82 ; ( b ) for every @xmath83 , @xmath84 ; and ( c ) for every @xmath83 , @xmath85 , then @xmath86    @xmath87    the proof , tedious but based on standard arguments from convex analysis , is relegated to the appendix .",
    "a few remarks are due .    1 .   in situations where @xmath79 is the expected - value performance function of a deds or hs",
    ", it may be impossible to verify some of the assumptions underscoring lemma 2.2 , such as the continuous differentiability of @xmath79 , bounds on the relative errors @xmath88 and @xmath89 , or bounds on the terms @xmath90 and @xmath91 .",
    "we point out that analysis techniques for their verifications have been developed in the literature on ipa , mainly for convex sample performance functions ( see , e.g. , @xcite ) .",
    "however , in other situations these assumptions may have to be stipulated or justified by empirical evidence derived , for instance , from simulation .",
    "2 .   suppose that the variable @xmath7 has to be constrained to a closed interval @xmath92 $ ] satisfying the conditions of lemma 2.2 . to ensure that @xmath33 , @xmath66 are contained in @xmath78 , it is possible to modify eq .",
    "( 10 ) by following it with a projection onto @xmath78 .",
    "define the projection function @xmath93 by @xmath94 and change eq .",
    "( 10 ) to the following equation , @xmath95 if @xmath78 contains a point @xmath53 such that @xmath54 , in addition to satisfying the conditions of the lemma , then it is readily seen that using eq . ( 12 ) instead of ( 10 ) does not weaken the statement of the lemma .    for every @xmath96 , @xmath74 , and @xmath97 there exist @xmath76 and @xmath98 such that , for every closed , finite - length interval @xmath78 such that ( i ) throughout @xmath78 the function @xmath62 is either monotone increasing or monotone decreasing , and either convex or concave , ( ii ) the set @xmath99 is nonempty , and ( iii ) @xmath100 and @xmath80 ; and for every sequence @xmath101 computed by a recursive application of eq .",
    "( 10 ) such that , for every @xmath23 , ( a ) @xmath102 , ( b ) @xmath103 , and ( c ) @xmath104 , the following two inequalities are in force : @xmath105 and @xmath106    @xmath87    remarks :    1 .",
    "consider the case where @xmath79 is computed exactly and the errors are only in its derivative .",
    "then every interval @xmath78 and a sequence @xmath107 satisfying the conditions of the proposition also satisfy all the condition of lemma 2.2 , and hence , eq .",
    "( 11 ) for all @xmath66 implies ( 9 ) .",
    "2 .   notice that the conditions assumed in the proposition s statement include upper bounds on the _ absolute _ error of the function s estimation , @xmath108 , and on the _ relative _ error in the derivative , @xmath109 .",
    "the reason for this discrepancy will be made clear in the proof of proposition 2.3 , where it will be shown that eqs .",
    "( 13 ) and ( 14 ) are due to such upper bounds .",
    "3 .   in light of remark 2 following lemma 2.2 , if an interval @xmath78 satisfying the conditions of proposition 2.3 is a constraint set for the sequence @xmath107 , then replacing eq .",
    "10 ) by ( 12 ) will not alter the assertions of the proposition expressed by eqs .",
    "( 13 ) and ( 14 ) .",
    "consider the case where @xmath79 is an expected - value performance function on a stochastic dynamical system , and suppose that eq .",
    "( 10 ) is run recursively in order to solve the equation @xmath47 .",
    "suppose moreover that at the @xmath9 iteration the function @xmath56 and its derivative @xmath55 are estimated by sample averages over a control cycle @xmath29 . generally , even under conditions of stochastic stability and arbitrarily long control cycles , it is not true that @xmath110 and @xmath111 _ for all _ @xmath66 , as stipulated in the statement of proposition 2.3",
    ". however practically , by the inequality in eq . ( 11 ) , with suitably - long control cycles we expect the sequence @xmath112 to decline towards 0 as in ( 13 ) except for sporadic jumps away from zero , and this will be evident from the simulation results described in the next section .",
    "this is due to lemma 2.2 , while proposition 2.3 provides a unified result under more ideal conditions .    in the context of the aforementioned control system",
    ", we note that the error in the derivative estimation is reflected by eq .",
    "( 3 ) rather than ( 2 ) , and to account for the error in function evaluations , eq . ( 5 ) is replaced by @xmath113 now the control loop is defined by a recursive application of eqs .",
    "@xmath114 . to translate the algorithm defined by eq .",
    "( 1 ) into this control setting we define @xmath115",
    ". we can also apply it to time - varying systems of the form @xmath116 , where convergence in the sense of eqs .",
    "( 13 ) -(14 ) is expected if the systems vary slowly .",
    "finally , we mention that from a practical standpoint the algorithm s convergence is ascertained from eq .",
    "( 14 ) rather than ( 13 ) , since the observed quantity is @xmath117 rather than @xmath10 .",
    "the next section presents simulation examples of various deds and hybrid systems .",
    "they include two noteworthy situations concerning queueing systems where ipa is biased .",
    "the error term @xmath16 is due in one case to the use of sfm as a basis for the ipa formula , and in the other case , to a direct use of the deds - based ipa in spite of its bias . in both cases",
    "the regulation algorithm is shown to converge .",
    "while situations of the first case have stimulated an interest in sfm as a means to circumvent the bias inherent in ipa , the example of the second case demonstrates that ipa can be successfully used even when it is biased .",
    "this section illustrates the aforementioned regulation framework by applying it to two examples concerning , respectively , delay and loss rate in an m / d/1 queue .",
    "both delay and loss are controlled by the service times . in the first example",
    "the ipa derivative is unbiased and hence we use it to adjust the integrator s gain . in contrast , in the second example the ipa derivative is biased and hence we apply a formula which is derived from an sfm ( fluid - queue ) approximation to the sample paths obtained from the discrete queue .",
    "while this yields estimation errors due to modeling discrepancies , it guarantees the unbiasedness of ipa for the sfm and results in convergence of the regulation algorithm as applied to the discrete queue .",
    "consider an m / d/1/@xmath118 queue with a given arrival rate @xmath119 and service times of @xmath120 time - units .",
    "given positive integers @xmath121 and @xmath122 , a control cycle consists of @xmath121 jobs , and the regulation process is run for @xmath122 cycles .",
    "we set the queue to empty at the start of each control cycle . in the notation established in section 1 , we define @xmath123 ; for @xmath124 , @xmath24 is the @xmath9 control cycle ; and @xmath34 is the average delay of jobs arriving during @xmath24 . note that @xmath3 is not an expected - value function but rather a random function of @xmath7 whose realization depends of the samples drawn during @xmath24 .",
    "let @xmath8 denote the expected - value delay according to the stationary distribution .",
    "it is known that @xmath3 is a strongly - consistent estimator of @xmath10 in the following sense ( see @xcite ) : for a given @xmath23 , @xmath125 where @xmath121 is the length of the control cycle .",
    "consequently the estimation error @xmath126 can be made smaller by choosing longer control cycles .",
    "the ipa derivative , @xmath127 , is known to have the following form ( see @xcite ) . for every @xmath128 ,",
    "let @xmath129 denote the index ( counter ) of the job that started the busy period containing job @xmath130 during @xmath24 .",
    "then , @xmath131 in other words , the ipa derivative of the delay of job @xmath130 as a function of @xmath2 is the position of that job in its busy period , namely @xmath132 .",
    "this ipa is unbiased and strongly consistent ; see refs .",
    "@xcite . furthermore , by the pollaczek - khinchin formula , @xmath8 is a continuously - differentiable function of @xmath7 .",
    "it is obviously monotone increasing , and also convex on @xmath133 since , by eq .",
    "( 17 ) , @xmath41 is monotone increasing as well",
    ". therefore the conditions for proposition 2.3 are satisfied on any closed interval contained in @xmath133 , and we expect the simulation experiments to yield fast convergence of the output @xmath3 to an @xmath134-band around the target value @xmath1 ( in the sense of eq .",
    "( 13 ) ) , where @xmath134 can be made smaller by choosing longer control cycles .    in the first simulation experiment we set the arrival rate to @xmath135 , and the target reference delay to @xmath136 .",
    "the control cycles consist of @xmath137 jobs each , and we ran the control algorithm for @xmath138 cycles starting from the initial guess of @xmath139 .",
    "the results , shown in figure 2 , indicate an approach of @xmath3 to about a steady value in about 5 iterations .",
    "thereafter we notice fluctuations of @xmath34 , and a closer view of the results , obtained in figure 3 by focusing the graph on the range @xmath140 , shows them to be in the range of @xmath141 except for a single exception at @xmath142 .",
    "these fluctuations do not seem to abate at larger @xmath0 , and they likely are due to the variances of @xmath34 and its ipa derivative @xmath127 .",
    "we point out that the average value of @xmath34 , obtained over the range @xmath140 , is 3.031 ( recall that the target value is 3.0 ) .",
    "correspondingly , the graph of the service times @xmath2 , @xmath143 , is shown in figure 4 , and their mean over @xmath140 is 0.913 .     queue - delay .",
    "@xmath137 , @xmath143.,scaledwidth=65.0% ]     queue - delay , @xmath144 .",
    "@xmath137 , @xmath145.,scaledwidth=65.0% ]     queue - service times .",
    "@xmath137 , @xmath143.,scaledwidth=65.0% ]    lesser variance of @xmath146 can be obtained from increasing the cycle length @xmath121 or reducing the reference target @xmath147 . in the first case , where we set @xmath148 while keeping @xmath147 at 3.00 , @xmath3,@xmath149 , fluctuated between 2.85 and 3.2 except for two values of @xmath0 , and their mean was 3.008 . in the second case , with @xmath150 and @xmath151 , @xmath34 fluctuated mostly in the @xmath152$]-range with two exceptions , and its mean over @xmath140 was 1.505 .",
    "in all three cases the regulation algorithm converged in about 5 iterations independently of the variances of the delays and their ipa derivatives ; those seem to affect mostly the magnitude of the output fluctuations .    in order to test the effects of changing the target reference during an experiment , we ran the regulation algorithm for 120 cycles starting with @xmath139 ; in the first 40 cycles @xmath153 , in the next 40 cycles @xmath154 , and in the last 40 cycles , @xmath155 .",
    "the results are shown in figure 5 , and they indicate convergence to each value of @xmath147 in about 5 iterations . furthermore , it is evident that the variations are larger for larger @xmath147 , and the reason is that the service times converge to larger values and hence the queue has larger traffic intensities .",
    "for @xmath153 the mean of @xmath34 over @xmath156 is 3.052 , for @xmath154 the mean of @xmath34 over @xmath157 is 4.653 , and for @xmath155 the mean of @xmath34 over @xmath158 is 1.504 .",
    "the corresponding average gains @xmath17 obtained from the simulation were 0.063 , 0.030 , and 0.198 .",
    "the respective average service times were 0.918 , 0.977 , and 0.745 .",
    "these values correspond to traffic intensities ( product of @xmath119 and the service time ) of 0.826 , 0.879 , and 0.671 , which explain the noticeable differences in variability .",
    "when we took @xmath148 the variability declined ( as expected ) and the obtained means are 3.041 , 4.515 , and 1.501 , respectively .",
    "queue - delay , variable setpoint .",
    "@xmath137 , @xmath159.,scaledwidth=65.0% ]",
    "lastly , we demonstrate the advantage of using the variable - gain controller over fixed - gain integral controls . to this end",
    "we simulated the system described in the last paragraph with two fixed gains , and compared the results to those obtained earlier from the variable - gain control .",
    "the constant gains are 0.030 and 0.198 which , as reported above , are the average gains driven by the variable - gain controller for the respective extreme setpoint references of 4.5 and 1.5 .",
    "figure 6 depicts the graph of @xmath3 , @xmath160 , obtained from an application of the smaller fixed gain of 0.030 ( the dashed curve ) , while the analogous graph obtained from the variable - gain controller ( the solid curve ) is shown for the sake of comparison .",
    "we discern slower response of the fixed - gain controller to changes in the setpoint , and this is not surprising since the variable - gain controller has larger gains for the setpoints of 3.0 and 1.5 . for the larger fixed gain of 0.198",
    ", the graph of @xmath3 is shown in figure 7 .. ] the controller performs well for the setpoint of 1.5 , but it exhibits large oscillations suggesting instability for the setpoint of 4.5 , where the obtained gains of the variable - gain controller are smaller .",
    "these results are not surprising since , generally , tracking controllers with too - small gains may result in slow adjustment to variations in the target setpoint , while overly - large gains may result in oscillations and even instability .",
    "the variable - gain controller in this example seems to adjust well to changes in the setpoint and thus perform better than the considered fixed - gain controls .",
    "consider an m / d/1/k queue with a finite buffer , where jobs arriving at a full queue are being discarded .",
    "given an arrival rate , a buffer size , and a horizon period ( cycle time ) , we aim at controlling ( regulating ) the mean loss rate to a given reference by adjusting the service times .",
    "accordingly , we denote the arrival rate by @xmath119 , the service times by @xmath120 , the buffer size ( including the holding place at the server ) by @xmath161 , and the horizon period by @xmath162 .",
    "let us divide the time - axis into consecutive control cycles , @xmath24 , each of duration @xmath162 seconds .",
    "the control parameter is the service time , namely @xmath123 , and during @xmath24 its value is denoted by @xmath33 .",
    "the performance function of interest , @xmath8 , is the mean loss rate per control cycle .",
    "we approximate @xmath10 by @xmath3 , defined as the number of jobs discarded during @xmath24 divided by @xmath162 .",
    "it is readily seen that the function @xmath163 is piecewise constant and almost surely no arrival would occur at the same time when another job enters or exits the server , and therefore , the ipa derivative along a sample path is @xmath164 .",
    "this does not provide an adequate approximation to @xmath165 , and hence an alternative approach to the estimation of @xmath165 is needed . to this end",
    "we use a fluid - queue sfm as described in the next paragraph .    consider a fluid queue with a finite buffer , a time - varying inflow rate , and a constant service rate .",
    "suppose that the queue operates in a given time - interval @xmath166 $ ] , where its instantaneous arrival rate , denoted by @xmath167 , is a random process .",
    "denote its service rate by @xmath168 .",
    "let @xmath169 be the control variable , and let @xmath170 denote the instantaneous overflow ( spillover ) rate due to the limited buffer .",
    "let @xmath171 denote the sample - based average loss rate per cycle as a function of the input service rate @xmath7 , defined as @xmath172 observe that @xmath171 provides an approximation to @xmath8 to the extent that the fluid queue serves to approximate the discrete queue .",
    "the main difference between @xmath8 and @xmath171 is that @xmath8 is the mean loss rate of the discrete queue , while @xmath171 is the sample time - average loss rate per cycle of the continuous queue .",
    "reference @xcite showed that the ipa derivative @xmath173 is unbiased , and it is computable by a simple , model - free formula ( listed below ) that can act on the sample paths of the discrete queue .",
    "furthermore , it can serve as an approximation to @xmath41 .",
    "therefore we implement the regulation algorithm in the following way . during cycle @xmath29 , the service time is @xmath30 , @xmath31 is the resulting sample - average loss rate of the discrete queue , and @xmath174 .",
    "the ipa derivative @xmath175 , specified below , is the sample derivative of the average loss rate of the continuous queue as defined by eq . (",
    "18 ) , and @xmath176 .",
    "( 3 ) becomes @xmath177 in this we apply the ipa derivative - formula , obtained from an analysis of the sfm , to the sample path of the discrete queue during @xmath29 .",
    "in contrast , the plant s",
    "output @xmath31 that is used in the control loop via eq .",
    "( 1 ) with @xmath178 corresponds to the discrete queue since it represents the `` real '' system .",
    "the effectiveness of the resulting regulation algorithm is related to the quality of the approximation of @xmath10 and @xmath165 by @xmath3 and @xmath179 , respectively .",
    "@xcite showed that the function @xmath171 is lipschitz continuous in @xmath7 , w.p.1 .",
    "furthermore , by eq .",
    "( 20 ) , below , @xmath180 , and @xmath171 and @xmath173 are monotone increasing and hence the function @xmath171 is convex w.p.1 . therefore we believe that @xmath8 is convex as well although we do not know of a proof , and in this case the assumptions of lemma 2.2 and proposition 2.3 are in force . in any event , the effectiveness of the regulation algorithm will be tested by simulation .",
    "the ipa derivative @xmath173 has the following form ( see @xcite ) .",
    "suppose that there are @xmath181 lossy busy periods during the horizon interval @xmath166 $ ] , indexed by @xmath182 in increasing order ( a busy period is _ lossy _ if any positive amount of overflow is incurred throughout its duration ) .",
    "for the @xmath183 lossy busy period , let @xmath184 be the first time loss occurs during it , and let @xmath185 be its end point ; in other words , @xmath184 is the first time in that busy period when the buffer becomes full , and @xmath185 is the next time the buffer becomes empty . then , under mild assumptions @xcite , @xmath186    with @xmath13 defined by ( 19 ) , we ran a simulation with the following parameters : @xmath187 , @xmath188 , @xmath189 , @xmath135 , the initial parameter - value was @xmath190 , and the number of cycles was @xmath138 .",
    "the resulting graph of @xmath34 , @xmath143 is shown in figure 8 , where we notice convergence of the tracking algorithm in 3 iterations , to a band around the target value of 0.1 . within",
    "this band @xmath34 fluctuates between 0.08 and 0.125 , except for a single value of @xmath0 where @xmath191 .",
    "the mean of @xmath34 in the range @xmath145 was 0.1005 . to reduce the variability we ran the simulation for @xmath192 , and the results , shown in figure 9 , exhibit an equally - fast convergence of the regulation algorithm with fluctuations in the range of @xmath193 $ ] , and with mean ( over @xmath145 ) of 0.1000 .",
    ", @xmath143.,scaledwidth=65.0% ]    , @xmath143.,scaledwidth=65.0% ]",
    "the ipa technique recently has been extended from fluid queueing networks to a class of continuous petri nets @xcite .",
    "references @xcite applied the results to an optimization example of balancing part - inventories with product backorders in a single - stage manufacturing system , and tested the application of ipa in conjunction with a stochastic approximation algorithm .",
    "this section uses the same example to test our approach to regulation .",
    "the considered manufacturing system consists of a machine that produces a sequence of single - type products .",
    "the production schedule is driven by products orders while parts inventories are maintained as safety stocks . to make a product ,",
    "the system must have an available part and a product order ; parts without orders accumulate in the form of inventories , while orders without parts result in cumulative backorders .",
    "naturally both excessive inventories and backorders are undesirable , and references @xcite devise an ipa - based algorithm for optimally balancing them . the underlying model for the algorithm",
    "is comprised of the continuous ( fluid ) petri net ( event graph ) shown in figure 10 .",
    "continuous petri nets are hybrid petri nets where the flow of fluid tokens through transitions is represented by piecewise - continuous rate processes ; see , e.g. , @xcite for comprehensive presentations .",
    "with regard to our system shown in figure 10 , transitions @xmath194 , @xmath195 , and @xmath196 represent , respectively , the processes of product - orders , parts arrivals , and the machine s operation . each transition @xmath197 , @xmath198 , is characterized by a maximum fluid - flow rate @xmath199 , which acts as an upper bound on its actual flow rate , denoted by @xmath200 . the places @xmath201 and @xmath202 are used for holding fluid , and at time @xmath203 the amount of stored fluid is denoted by @xmath204 and @xmath205 , respectively .",
    "the processes @xmath206 , @xmath207 ( @xmath198 ) and @xmath208 ( @xmath209 ) can be viewed as random processes defined over a common probability space @xmath210 .",
    "the dynamics of the system are described by the following three equations relating the above processes : for @xmath211 , @xmath212 for @xmath213 , define @xmath214 ; then @xmath215 as for @xmath216 , @xmath209 , we have that @xmath217 in the forthcoming discussion we assume that the system evolves in a given time - interval @xmath166 $ ] with given initial conditions @xmath218 and @xmath219 .    in the typical case",
    "where the three processes @xmath206 are exogenous , the other network processes , @xmath207 and @xmath208 , are defined in their terms via eqs .",
    "( 21)-(23 ) .",
    "in other situations some of the processes @xmath206 are exogenous while others are controlled , and in this case the equations describing the controls together with ( 21)-(23 ) define all of the network processes . in the example considered in @xcite the processes @xmath220 and @xmath221 are exogenous while @xmath222 is controlled .",
    "specifically , product orders are assumed to arrive in batches , and hence @xmath223 where @xmath224 is the dirac delta function , @xmath225 , @xmath226 , are the arrival times , and @xmath227 represent the quantities of the orders .",
    "the machine is assumed to have deterministic service times , and hence @xmath228 for a given @xmath229 .",
    "the parts arrival rates are controlled by the backorders via a threshold in the following fashion : @xmath230 has a given low value if the backorder levels are below the threshold , and a given higher value if the backorder levels are above the threshold .",
    "formally , given a threshold @xmath231 , and given constants @xmath232 and @xmath233 , @xmath230 is defined via @xmath234 we assumed that @xmath235 . it is obvious that equations ( 21)-(23 ) and ( 25 ) have a unique joint solution for every set of initial conditions .",
    "now let us consider the threshold @xmath236 as the control parameter and hence denote it by @xmath237 .",
    "then the processes @xmath222 , @xmath207 , @xmath238 , and @xmath208 , @xmath209 are functions of @xmath7 as well , and hence are denoted by @xmath239 , @xmath240 , and @xmath241 , respectively .",
    "assume that a particular value of @xmath7 remains fixed throughout the evolution of the system in a given interval @xmath166 $ ] .",
    "consider the sample performance function @xmath171 defined as @xmath242 for a given distribution of the initial conditions @xmath243 , @xmath209 , and let @xmath244 denote its expected value .",
    "references @xcite considered the problem of minimizing a weighted sum of @xmath8 and the expected - value of the average workload at @xmath201 . here",
    "we use the same system except that we perform regulation of @xmath171 rather than optimization .    to put it all in the setting",
    "described in section 1 , we define a control cycle to consist of @xmath245 time units , @xmath2 denotes the input during the @xmath9 control cycle @xmath22 , and @xmath246 as defined by eq . ( 26 ) . therefore , for every @xmath66",
    ", @xmath247 as @xmath248 w.p.1",
    ". moreover , refs .",
    "prove that the ipa derivative @xmath173 is unbiased , hence @xmath249 w.p.1 .",
    "consequently , the error terms @xmath250 and @xmath251 can be reduced by taking longer cycle times @xmath245 . regarding monotonicity and convexity of @xmath8 , larger threshold @xmath7 results in smaller inventories and",
    "hence @xmath8 is monotone non - increasing .",
    "however , we have no way of proving convexity or concavity of @xmath8 , hence we put the regulation algorithm to the test by simulation .    in the considered example , @xmath252 , @xmath253 , and @xmath254 ;",
    "these numbers are taken from @xcite .",
    "the product - orders process @xmath220 , defined by ( 24 ) , consists of equally - spaced arrivals every 50 seconds ( deterministic ) , and each arrival brings in an amount of fluid that is uniformly distributed in the @xmath255$]-range . the reference value to be tracked is @xmath256 , and it is the computed value of @xmath257 obtained for the aforementioned optimization problem in @xcite . the ipa derivative @xmath258 is computable via a recursive algorithm constructed according to the event - calculus framework defined in @xcite ; a detailed presentation thereof can be found in @xcite .",
    "we ran the regulation algorithm for 100 control cycles with @xmath259 .",
    "the results of two typical runs are shown in figure 11 for two respective values of the initial control parameter , @xmath260 and @xmath261 .",
    "the corresponding graphs of @xmath262 are plotted by the dashed curve and solid curve , and both indicate convergence to a band around @xmath263 after 3 iterations .",
    "this band has a maximum range of 47.17 , and the averages of the outputs @xmath34 , taken over @xmath264 , are 758.55 for the dashed plot , and 758.73 for the solid plot .",
    "although these results indicate convergence of the outputs average to @xmath265 , variations in the output values are discernable . these variations , as well as those in the ipa derivatives , yield fluctuations in the values of @xmath33 , @xmath23 , as can be seen in figure 12 .",
    "we believe that the major cause of these variations is in the variance of @xmath171 and not inherent in the regulation algorithm . to test this point",
    ", we ran 100 independent simulations of the system at the fixed value of @xmath266 , which is close to the average of @xmath33 , @xmath264 obtained by the regulation algorithm .",
    "the results , @xmath267 , shown in figure 13 , indicate a persistent variation with a maximum range of 42 , which is comparable to the range obtained from figure 11 .    to further test the convergence rate of the regulation algorithm we chose more extreme starting values of the control parameter , namely @xmath268 and @xmath269 .",
    "the corresponding values of @xmath270 are 635 and 883 , which are more extreme than those obtained in figure 11 , but nonetheless the regulation algorithm converged to a similar band around @xmath265 in 3 iterations .    , @xmath143,scaledwidth=65.0% ]    , @xmath143,scaledwidth=65.0% ]    : 100 independent simulations , scaledwidth=65.0% ]",
    "the problem of maintaining stable instruction execution rates in computer processors arises in several application areas .",
    "for instance , in real - time applications , guaranteeing a constant instruction execution rate simplifies otherwise complex real - time scheduling tasks by enabling tighter bounds on deadlines to be met @xcite .",
    "variable rate instruction execution often leads to a reliance on worst case execution - time estimates that far exceed the average execution times , resulting in a poorer processor utilization than is necessary .",
    "a second application concerns a tradeoff between instruction execution rate and power dissipation .",
    "dynamic voltage frequency scaling ( dvfs ) can be used to navigate this tradeoff to arrive at an instruction rate that is the most power - efficient  @xcite@xcite .",
    "this approach , described in the introduction , was followed by  @xcite for throughput regulation in processor cores . in this section",
    "we pursue a similar approach but use a more - precise system - model for the throughput simulation and hence obtain better results , including far - faster convergence , as described in the sequel .",
    "we consider a multiprogrammed multi - core processor where programs are assigned for execution to the cores by the operating system .",
    "each core is assigned an instruction - execution rate setpoint by a supervisory controller , and has to control ( regulate ) its instruction rate to that level . in this paper",
    "we are not concerned with the way these setpoint levels are assigned , and consider them as given and fixed .",
    "furthermore , we assume that each core is in a separate clock domain and can independently control its own clock rate .",
    "each core exploits instruction - level parallelism ( ilp ) utilizing an out - of - order ( ooo ) technology whereby instructions may complete execution in an order different from program order ( i.e. , out of order ) .",
    "ooo execution enables instruction execution to be limited only by data dependencies rather than the order in which they appear in the program thereby serving as the primary means for exploiting ilp in modern processors .",
    "a high - level functional and logical description of programs execution in an ooo core is depicted in figure 14 .",
    "instructions are fetched sequentially from memory and placed in the instruction queue . there",
    "they are processed by functional units which can be thought of as servers in the queueing parlance .",
    "it is often the case that there are enough functional units available for concurrent execution of all of the instructions in the queue .",
    "what holds up the execution of an instruction is its dependency on data that would become available from the execution of another instruction .",
    "for example , the instruction of adding two variables , @xmath271 and @xmath272 , requires that both variables have numerical values .",
    "@xmath271 may be obtained from another numerical instruction , while @xmath272 may be fetched from memory .",
    "thus , it is evident that the addition of @xmath271 and @xmath272 can not commence before the instructions of computing @xmath271 and fetching @xmath272 are completed .",
    "instructions can be classified as _ data dependent _ vs. _ data independent _ according to whether they depend on data provided by the execution of other instructions .",
    "if an instruction is data dependent then its execution can commence as soon as all such data and a functional unit become available . if the instruction is data independent then its execution can start as soon as a functional unit is available",
    ".    memory instructions can take one - to - two orders of magnitude more time to execute than computational instructions .",
    "therefore most architectures make use of a hierarchical memory arrangement where on - chip cache access takes less time than external memory such as dram",
    ". first the cache is searched , and if the variable is found there then it is fetched and the instruction is completed .",
    "if the variable is not stored in cache then a cache miss occurs and a cache line ( containing the variable ) is fetched from external memory ( typically dram ) and placed in the cache .",
    "the variable is then accessed and the instruction is completed .",
    "we can think of all external - memory ( non - cache ) accesses as placed in a first - in - first - out queue designated by the _ memory _ box in the figure .",
    "furthermore , this queue has a finite buffer , and when it becomes full the entire memory access , including from the cache , is stalled .    during its processing the instruction",
    "is still stored in the instruction queue , where it has been placed since its arrival at the start of the aforementioned process .",
    "although it may be executed concurrently with other instructions subject to data - dependency constraints , it may not be released from the queue upon completion of its execution ; in fact , its release time is the later of its completion time and the release time of the previous instruction .",
    "however , the variables it computes become available to other instructions upon its completion and not release .",
    "we point out that the term _ release _ used here is called _ commitment _ in the parlance of computer architectures .",
    "it is this quantity that is used to compute the instruction s throughput , as will be made clear in the sequel .",
    "a high - level description of the hardware of an ooo core is depicted in figure 15 ( see  @xcite for a more detailed description ) .",
    "the acronyms in the various blocks indicate the following entities : iq - instruction queue ; rob - reorder buffer ; rs - reservation station ; fu - functional unit ; rf - register file ; l / s  q - load / store queue ; mshr - miss status handling register ; and mem - memory other than cache , typically dram . during a program s execution , the instruction unit of the processor fetches program instructions sequentially from memory and places them in the instruction queue ( iq ) .",
    "instructions are issued from the iq to a reservation station waiting for access to the corresponding functional unit .",
    "an instruction is granted access ( starts processing ) after ( i ) all its operands are available , for example , the result from preceding instructions , and ( ii ) the functional unit is available .",
    "when an instruction is issued to an rs , it is also allocated an entry in the rob in the original program order .",
    "instructions in the rs are issued to the functional units when their operands are available ( note that this issue order may be different from program order hence the ooo designation ) .",
    "while the instruction is waiting for its operands , it is said to be _",
    "stalled_. instruction execution results are broadcast to all reservation stations and the rob - they are stored along with the instruction s entry in the rob .",
    "when an instruction reaches the head of the rob and it has completed execution , its result is placed in the rf .",
    "this process is called _ instruction committment ( ic)_. the _ ic _ stage basically signifies the termination of the instruction processing .",
    "note that while instructions may complete execution out of order , they are committed in program order . for the purpose of this discussion and its related model , we can view the iq and rob as a single block where instructions are buffered in order according to their issue ( arrival ) order from the instruction fetch unit of the processor .",
    "_ memory _ instructions such as load and store instructions are directed to the load / store queue ( l / sq ) shown in figure 15 .",
    "consider the execution of a load instruction .",
    "first an attempt is made to access the data from the data cache .",
    "if that is successful ( cache hit ) , the data is read from the cache line and sent to the corresponding instruction entry in rob .",
    "if the requested data is not in the cache ( cache miss ) it has to be fetched from the next level of the memory hierarchy , for example main memory , typically dram . in that case a request is sent to the miss status handling register ( mshr ) , which serves as a finite - buffer queue for buffering outstanding non - cache memory access requests . when the mshr is full all new instructions that generate memory - accesses are stalled . upon completion of the memory access",
    ", the data is sent to the rob and the instruction clears the mshr . note that the mshr is a finite - buffer queue that holds only non - cache memory instructions .",
    "however , when it becomes full , it halts all new memory access requests , and thus comprises a fairly nonstandard queueing model . to quantify all of this",
    "( see also @xcite ) , consider a control cycle comprised of instructions @xmath273 , @xmath274 for a given @xmath275 .",
    "let us set the time to @xmath276 at the moment the first instruction is issued . in the framework of the closed - loop system defined by the regulation algorithm , the control variable @xmath7 will be the clock frequency ( rate ) of the core , but it is easier to carry out the ipa computations in terms of the clock cycle , @xmath277 .    for instruction @xmath273 , define @xmath278 to be its issue time in terms of clock cycles ( counting from the issue time of @xmath279 ) ; @xmath280 - its execution starting time ( in seconds ) , and @xmath281 - its completion time ( in seconds ) , not to be confused with its commit time which may occur later .",
    "note that we use two kinds of timing variables , namely in units of clock cycles or seconds .",
    "the former can be measured in real time for the purpose of the control law , while the latter are used only in the analysis .",
    "consider first the case where @xmath273 is not a memory instruction ; memory instructions will be handled later .",
    "the issue time of @xmath273 ( in seconds ) is @xmath282 , and we assume that there are available resources in the rob and rs so that the instruction is forwarded there at the same time , @xmath282 .",
    "if @xmath273 is data dependent , denote by @xmath283 the index ( counter ) of the instruction which is the last to provide a variable to @xmath273 .",
    "then , we have that @xmath284 as for the completion time , let @xmath285 denote the execution time of @xmath273 in terms of clock cycles .",
    "then , @xmath286 consider next the case where @xmath273 is a memory instruction . upon its issuance at time",
    "@xmath282 it is directed to the l / sq where a cache attempt is made .",
    "let us regard the starting time of the cache attempt as the starting time of the instruction s execution at the memory stage , and denote it by @xmath280 .",
    "if the mshr is full at time @xmath282 , let @xmath287 denote the index of the instruction at the head of the mshr .",
    "then , @xmath288 let @xmath289 denote the time ( in units of clock cycles ) it takes the l / sq to process @xmath273 including the cache attempt .",
    "if the cache attempt result is successful ( cache hit ) , then @xmath290 on the other hand , in case of a cache miss , the instruction is directed to the mshr for non - cache memory access .",
    "let @xmath291 denote the processing time of the instruction in the mshr in units of clock cycles , and let @xmath292 be the time it takes to access the memory .",
    "note that dram access is not governed by the core s clock and hence it is not a function of @xmath293 .",
    "let @xmath294 denote the index of the instruction prior to @xmath273 in the mshr .",
    "then , the completion time of @xmath273 is given by @xmath295 finally , the commit ( departure ) times of instructions @xmath273 , @xmath296 , denoted by @xmath297 , are given by the following recursive equation , @xmath298    now recall that the control cycle consists of @xmath121 instructions , and define the average throughput by @xmath299 with @xmath300 , its ipa derivative is @xmath301 where we assume that the throughput @xmath302 can be computed from the system .",
    "the ipa term @xmath303 is computable in a recursive manner as follows . by equations ( 27)(32 ) , for every @xmath274 : if @xmath273 is not a memory instruction , then @xmath304 and @xmath305 on the other hand , if @xmath273 is a memory instruction , then @xmath306 as for @xmath307 , if @xmath273 results in a cache hit , then @xmath308 and in the event of a cache miss , @xmath309 it is reasonable to assume that the quantities @xmath278 , @xmath285 , @xmath289 , and @xmath291 can be read from the system in real time during instruction execution , and hence the computation of @xmath307 , @xmath310 can be performed in real time in a recursive fashion via equations ( 35)-(39 ) . finally , by ( 32 ) , @xmath311 this yields @xmath303 , and hence @xmath173 via equation ( 34 ) .",
    "we point out that this ipa derivative is biased due to the fact that the dram and other non - cache memory accesses are not controlled by the core s clock - the memory system is in a different clock domain .",
    "we note that the time required for such memory access typically is one order of magnitude longer than a cache - access time and can be two orders of magnitude longer than computing instructions .",
    "therefore we expect the regulation technique to perform better when applied to computation - intensive programs rather than to memory - intensive programs .",
    "this is evident from the simulation results which will be presented in the following paragraphs .",
    "we implemented the control algorithm using manifold , a cycle - level , full system discrete event simulation platform for multi - core architectures  @xcite . a manifold model boots",
    "a linux operating system and executes stock 32-bit x86 binaries .",
    "our experiments were applied to two programs from the splash-2 suite of benchmark programs  @xcite , _ barnes _ and _ radiosity_. barnes is compute intensive while radiosity is memory intensive . for both cases",
    "the manifold processor model used is similar to the intel nehalem micro - architecture comprised of four cores , each having its own l1 cache and sharing an l2 cache @xcite .",
    "each core is in a separate clock domain that is independently controlled . at the start of the simulation the application",
    "is emulated for a million instructions ( out of an order of @xmath312 instructions ) in order to warm up the architecture state .",
    "at this point , cycle - level timing simulation is begun over program regions of interest .",
    "the control cycle for each core consists of @xmath137 instructions .",
    "thus , for a given core , the control variable during the @xmath9 cycle is @xmath2 , and @xmath3 is the instruction throughput computed at the end of the cycle via eq .",
    "( 33 ) ( with the index @xmath0 added ) .",
    "the ipa derivative is computed via eq .",
    "it is not unbiased since the sample - performance function @xmath171 is not necessarily continuous .",
    "this is largely due to the possibility of instruction stalls when the mshr queue becomes full ; see @xcite for the relation between discontinuous sample performance functions and the biasedness of ipa .",
    "however , we believe that the error introduced by the bias generally is not large enough to prevent convergence of the regulation algorithm . therefore , in contrast with the case of the finite - buffer queue discussed in section 3.2 , we do not resort to a fluid queueing model but rather compute the ipa derivatives directly from the discrete model according to eqs .",
    "( 34 )  -  ( 40 ) .    in the simulation experiments we took the target instruction rates ( setpoints ) for cores 0 - 3 to be 1.0 giga instruction per second ( gips ) , 1.5 @xmath313 , 2.0 @xmath313 , and 2.5 @xmath313 , respectively .",
    "figure 16 shows simulation results for the benchmark _ barnes _ executing at all four cores , and they indicate convergence - times of the algorithm between 0.02 @xmath314 ( core 3 ) and 0.08 @xmath314 ( core 2 ) . the apparent oscillations after convergence are due to variations in the programs instruction loads , and their magnitudes",
    "are within 10% of the respective target values",
    ". however , the average instruction rates from time 0.1 ms to the final time ( 0.25 ms ) are 0.9998 , 1.5025 , 1.9997 , and 2.4985 , which are within 0.2 % of the respective target values .",
    "[ fig : fig12 ]    for the radiosity benchmark we set the target instruction rates for cores 0 - 3 to 1.0 @xmath313 , 1.3 @xmath313 , 1.5 @xmath313 , and 1.7 @xmath313 , respectively .",
    "typical results are shown in figure 17 , where we discern convergence times between 0.12 @xmath314 to 0.14 @xmath314 , with subsequent oscillations below 15% of the respective target values .",
    "the slower convergence as compared to barnes is due to the fact that radiosity is more memory intensive .",
    "[ fig : fig13 ]    one way to reduce the oscillations is to scale the integrator s gain in equation ( 1 ) by a constant @xmath315 , thereby replacing ( 1 ) by the following equation , @xmath316 after some experimentation we chose @xmath317 .",
    "this resulted in reductions in the oscilations magnitudes from 10% to 5% for barnes , and from 15% to 10% for radiosity .",
    "the results are shown in figures 18 and 19 , respectively .",
    "[ fig : fig14 ]        [ fig : fig15 ]",
    "this paper describes an ipa - based approach to performance regulation in stochastic timed discrete event dynamic systems .",
    "the considered problem is to control the output of the system so as to have it track ( asymptotically ) a given performance reference in the face of variations in the system s characteristics .",
    "the proposed approach is based on an integrator with adaptive gain .",
    "the system s plant is represented via a discrete - event or hybrid model , and the controller s gain is inverse proportional to the ipa derivative of its plant function with respect to the control parameter .",
    "the paper summarizes the regulation technique and presents several examples , which highlight the fact that it can work well despite errors in estimating the ipa gradient .",
    "the examples include delay and loss in a single queue , inventory control in a petri - net model of a production system , and throughput regulation in a computer core .",
    "extensions and future investigations will focus on emerging problems in various application areas .",
    "this section provides proofs to lemma 2.2 and proposition 2.3 .",
    "+   + * proof of lemma 2.2 . *",
    "consider a closed , finite - length interval @xmath78 where @xmath62 is monotone - nondecreasing and convex throughout @xmath78 .",
    "we next prove the assertion of the lemma for this case , while the situations where @xmath62 is monotone - non - increasing or concave can be analyzed by similar arguments and hence their proofs are omitted .    by the monotonicity of @xmath62 we have that @xmath318 , and we will use this fact throughout the forthcoming analysis . by convexity of @xmath62 we have the following inequalities for every @xmath319 and @xmath320 such that @xmath321 : @xmath322 given @xmath323 , @xmath324 , and @xmath76 , suppose that , for some @xmath325 , @xmath326 , @xmath327 , and @xmath328 .",
    "we next derive upper bounds on the ratio @xmath329 ( for the case where @xmath330 ) in terms of @xmath121 , @xmath168 , and @xmath331 .",
    "the analysis concerns four separate cases : ( i ) @xmath332 and @xmath333 ; ( ii ) @xmath332 and @xmath334 ; ( iii ) @xmath335 and @xmath333 ; and ( iv ) @xmath335 and @xmath334 .",
    "the results , to be derived in the following paragraph , are :        _ case ( i ) : @xmath332 and @xmath333_. the left inequality of eq .",
    "( 42 ) means that @xmath343 and with a straightforward algebra , @xmath344 by definition of @xmath345 and @xmath346 , @xmath347 and @xmath348 ; and by assumption , @xmath349 and @xmath350 ; hence , and by ( 48 ) and the assumption that @xmath332 , we have that @xmath351 by the assumption that @xmath352 , eq . ( 43 ) follows .    _ case ( ii ) : @xmath332 and @xmath334_. the right inequality of ( 42 ) means that @xmath353 and multiplying and dividing the rhs of ( 50 ) by @xmath354 and @xmath355 we obtain that @xmath356 by definition of @xmath345 and @xmath346 , @xmath347 and @xmath348 ; and by assumption , @xmath349 , @xmath350 , and @xmath357 ; hence , and by ( 51 ) and the assumption that @xmath332 , we have that @xmath358 since by assumption @xmath332 and @xmath334 , eq . ( 44 ) follows .        fix @xmath74 and @xmath75 .",
    "consider @xmath76 , and @xmath66 , and suppose that all of the conditions specified in the assertion of the lemma are satisfied .",
    "we next prove that eq .",
    "( 11 ) is satisfied for an @xmath362 and a corresponding @xmath77 .",
    "there are two scenarios to consider : ( a ) @xmath363 , and ( b ) @xmath364 .",
    "scenario ( a ) means that @xmath365 and arises when either case ( i ) or case ( iv ) occur . in case ( i ) , eq .",
    "( 43 ) is in force , and since @xmath366 , it follows that there exists @xmath367 and @xmath368 such that , for every @xmath369 , eq .",
    "( 11 ) is satisfied with @xmath370 in lieu of @xmath371 .",
    "similarly in case ( iv ) and eq .",
    "( 46 ) ; since @xmath372 , there exists @xmath373 and @xmath374 such that , for every @xmath375 , eq .",
    "( 11 ) is satisfied with @xmath376 in lieu of @xmath371 .",
    "scenario ( b ) corresponds to either case ( ii ) or case ( iii ) . in case ( iii ) , where @xmath377 while @xmath72 , eq .",
    "( 45 ) is satisfied .",
    "note that @xmath378 , and therefore , there exists @xmath379 and @xmath380 such that , if @xmath381 , then @xmath382 in case ( ii ) , where @xmath383 while @xmath68 , eq .",
    "( 44 ) holds , but unlike the other three cases , it is not true that @xmath384 . a different argument is needed .",
    "suppose first that case ( ii ) holds at @xmath30 , case ( iii ) will be considered later . by definition of @xmath69 , case ( iii ) holds at @xmath385 while case ( iv ) is satisfied for all @xmath386 . by equations ( 44)-(46 ) , @xmath387 the above analysis of case ( iv ) showed that if @xmath388 then @xmath389 , and therefore , @xmath390 but @xmath391 , where the last two inequalities are due to the assumption that @xmath392 .",
    "therefore , there exist @xmath393 and @xmath394 such that , if @xmath395 , eq . ( 11 ) is satisfied with @xmath396 in lieu of @xmath371 .",
    "now by defining @xmath397 , eq .",
    "( 11 ) is satisfied with @xmath398 .",
    "this completes the proof .",
    "@xmath87 +   + * proof of proposition 2.3 . * given @xmath96 , @xmath74 , and @xmath97 .",
    "fix @xmath75 .",
    "choose @xmath76 and @xmath77 according to lemma 2.2 .",
    "in particular , as in the proof of lemma 2.2 we can assume , by reducing @xmath331 is necessary , that @xmath399 consider a closed , finite - length interval @xmath78 and a sequence of points @xmath400 satisfying the conditions of the proposition .",
    "suppose , without loss of generality , that @xmath62 is monotone nondecreasing and convex on @xmath78 .",
    "since @xmath401 for every @xmath319 , it follows by eq . ( 10 ) that there exists @xmath402 ( independent of @xmath78 or the sequence @xmath107 ) such that , for every @xmath66 , @xmath403 fix @xmath404 such that @xmath405 fix @xmath98 such that @xmath406 by assumption @xmath103 and @xmath104 for all @xmath407 . as a result of the inequality @xmath104 , and by eq .",
    "( 61 ) , if @xmath408 then @xmath409 .",
    "thus , if @xmath410 then eqs . ( 43)-(46 ) hold with @xmath36 in lieu of @xmath411 , and if @xmath409 then @xmath412    now consider a point @xmath33 such that @xmath410 and hence @xmath413 .",
    "consider the four cases ( i ) - ( iv ) in the proof of lemma 2.2 . in case ( i ) and case ( iv ) , @xmath363 , and eq .",
    "( 11 ) implies that @xmath414 . in case ( iii ) , eq .",
    "( 55 ) implies the same inequality , namely @xmath414 . only in case",
    "( ii ) the reverse inequality is possible , namely that @xmath415 .",
    "suppose that case ( ii ) holds at @xmath33 .",
    "then ( by definition of case ( ii ) ) @xmath72 , @xmath334 @xmath416 , and @xmath417 . moreover , for every @xmath418 , either case ( iii ) or ( iv ) holds , and therefore , either @xmath419 if @xmath420 , or @xmath421 if @xmath422 .",
    "consequently , and by eq .",
    "( 62 ) , we have that @xmath423 as a result we have the following situation : if @xmath424 for some @xmath83 , then @xmath425 . on the other hand , if @xmath426 for every @xmath83 , then ( by lemma 2.2 ) , eq . ( 11 ) is in force . this , in conjunction with eq .",
    "( 61 ) , implies that @xmath427 hence the inequality in eq .",
    "( 13 ) .",
    "almoosa , n. , song , w. , wardi , y. , and yalamanchili , s. ( 2012a ) .",
    "throughput regulation in multicore processors via ipa .",
    "51 ieee conference on decision and control ( cdc ) _ , maui , hawaii , december 10 - 13 .",
    "bauer , m. , pacher , m. , and brinkschulte , u. ( 2010 ) . a chip - size evaluation of a multi - threaded processor enhanced with a pid controller .",
    "8th ifip workshop on software technologies for future embedded and ubiquitous systems ( seus 2010 ) _ , waidhofen , austria , october 13 - 15 , 2010 .",
    "brinkschulte , u. , and pacher , m. a theoretical examination of a self - adaptation approach to improve the real - time capabilities in multi - threaded microprocessors . _ proc .",
    "2009 third ieee international conference on self - adaptive and self - organizing systems _ , san francisco , california , september 14 - 18 , 2009 .",
    "cassandras , c.g . , wardi , y. , melamed , b. , sun , g. , and panayiotou , c.g .",
    "perturbation analysis for on - line control and optimization of stochastic fluid models .",
    "_ ieee transactions on automatic control _ , vol .",
    "47 , no . 8 ,",
    "1234 - 1248 .",
    "cassandras , c.g .",
    "stochastic flow systems : modeling and sensitivity analysis . in _",
    "stochastic hybrid systems : recent developments and research trends , _ eds .",
    "cassandras and j. lygeros , crc press , new york , new york , pp .",
    "137165 .",
    "chen , x. , xiao , h. , wardi , y. , and yalamanchili , s. ( 2015 ) .",
    "throughput regulation in shared memory multicore prtocessors .",
    "22nd ieee intl .",
    "conference on high performance computing ( hipc ) _ , bengaluru , india , december 16 - 19 .",
    "howard , j. , dighe , s. , vangal , s.r .",
    ", ruhl , g. , borkar , n. , jain , s. , erraguntla , v. , konow , m. ripen , m. gries , m. , droege , g. , lund - larsen , t. , steibl , s. borkar , s. , de , v.k . , and van det wijngaart , r. a. ( 2011 ) .",
    "48-core ia-32 processor in 45 nm cmos using on - die message passing and dvfs for performance and power scaling . _ j. solid state circuits _ ,",
    "173 - 183 .",
    "kim , w. , gupta , m.s .",
    ", wei , g .- y . , and brooks , d. ( 2008 ) . system level analysis of fast , per - core dvfs using on - chip switching regulators .",
    "ieee intl .",
    "symposium on high performance of computer architectures_.      lohn , d. , pacher , m. , and brinkschulte , u. a generalized model to control the throughput in a processor for real - time applications .",
    "_ 2011 14th ieee international symposium on object / component / service - oriented real - time distributed computing _",
    ", newport beach , california , march 28 - 31 , 2011 .",
    "panayiotou , c.g .",
    ", and cassandras , c.g .",
    "infinitesimal perturbation analysis and optimization for make - to - stock manufacturing systems based on stochastic fluid models .",
    "_ discrete event dynamic systems : theory and applications , _ vol .",
    "109 - 142 .",
    "seatzu , c. , and wardi , y. ( 2013 ) . on the use of ipa in performance optimization of continuous marked graphs : a case study .",
    "ieee conf . on emerging technologies and factory automation ( etfa13 ) _ , cagliari , italy , september 10 - 13 .",
    "seatzu , c. , and wardi , y. ( 2014 ) .",
    "performance regulation via integral control in a class of stochastic discrete event dynamic systems .",
    "12th ifac - ieee international workshop on discrete event systems ( wodes14 ) _ , paris , france , may 14 - 16 .        sun , g. , cassandras , c.g . , wardi , y. , panayiotou , c.g . , and riley , g. ( 2004 ) .",
    "perturbation analysis and optimization of stochastic flow networks .",
    "_ ieee transactions on automatic control _ , vol .",
    "2143 - 2159 .",
    "wardi , y. , adams , r. , and melamed , b. ( 2010 ) .",
    "a unified approach to infinitesimal perturbation analysis in stochastic flow models : the single - stage case .",
    "_ ieee transactions on automatic control _ , vol .",
    "ac-55 , no .",
    "89 - 103 .",
    "wardi , y. , and cassandras , c.g .",
    "perturbation analysis of discrete event systems . in _ encyclopedia on systems and control",
    "t. samad and j. baillieul , section on discrete event systems , ed .",
    "c.g . cassandras .",
    "woo , s.c . ,",
    "oharat , m. , torriet , e. , et al .",
    "the splash-2 programs : characterization and methodological considerations .",
    "_ isca 95 proceedings of the 22nd annual international symposium on computer architectures _ , pp ."
  ],
  "abstract_text": [
    "<S> this paper presents a performance - regulation method for a class of stochastic timed event - driven systems aimed at output tracking of a given reference setpoint . </S>",
    "<S> the systems are either discrete event dynamic systems ( deds ) such as queueing networks or petri nets , or hybrid systems ( hs ) with time - driven dynamics and event - driven dynamics , like fluid queues and hybrid petri nets . the regulator , designed for simplicity and speed of computation , is comprised of a single integrator having a variable gain to ensure effective tracking under time - varying plants . </S>",
    "<S> the gain s computation is based on the infinitesimal perturbation analysis ( ipa ) gradient of the plant function with respect to the control variable , and the resultant tracking can be quite robust with respect to modeling inaccuracies and gradient - estimation errors . </S>",
    "<S> the proposed technique is tested on examples taken from various application areas and modeled with different formalisms , including queueing models , petri - net model of a production - inventory control system , and a stochastic deds model of a multicore chip control . </S>",
    "<S> simulation results are presented in support of the proposed approach .    infinitesimal perturbation analysis , timed deds , stochastic hybrid systems , performance regulation . </S>"
  ]
}
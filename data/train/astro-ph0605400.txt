{
  "article_text": [
    "most planetary nebulae are not spherically symmetric",
    ". therefore 3d photoionization codes are very welcome .",
    "the problem with truly 3d codes ( such as mocassin , @xcite ) is their large computing time , which makes it difficult to explore a large parameter space .",
    "morisset et al .",
    "( 2005 ) have developed a pseudo-3d code based on the 1d photoionization code nebu @xcite .",
    "some applications are discussed in @xcite and @xcite .",
    "the advantages and limitations of pseudo-3d codes are discussed in those papers as well .    using the same approach as for nebu_3d",
    ", we developed cloudy-3d , a pseudo-3d code based on the widely used 1d code cloudy @xcite .",
    "here we describe the use of cloudy_3d and give information on how to install the software .",
    "in the following we describe the various steps needed to compute a 3d model .    *",
    "* definition of the morphology * define all the parameters that change with the angle using angular law , ( e.g. the inner radius is defined as an ellipsoidal , the hydrogen density is proportional to 1/r@xmath0 ) .",
    "* * prepare_cloudy_in * generate of the n input files for cloudy , according to the morphology and the definition of fixed parameters ( e.g. the ionizing flux description , kept constant for each direction ) + - inputs : description of the constant and varying parameters ( angular law ) + - outputs : a set of n cloudy input files * * cloudy_driver * run n times cloudy , manage the output naming .",
    "+ - inputs : a set of n cloudy input files + - outputs : a set of n cloudy outputs files ( physical parameters , line emissivities , etc ) . *",
    "* cloudy_3d * read the n outputs of cloudy and interpolate into a 3d coordinates cube .",
    "+ - inputs : a set of n cloudy outputs files ; the geometrical size of the coordinate cube ( can be 2d for testing , can be a close - up on one part of the nebula ) + - outputs : the 3d cube containing the ne , te , the emissivities of selected lines and the ionic fractional abundances in each cell . *",
    "* velneb_3d ( optional ) * compute the line profiles given a velocity field .",
    "+ - inputs : the description of the velocity field ; the cube of emissivities and te ( could come from another 3d code ) + - outputs : the emission line profile in each cell of the 3d cube . * * visneb_3d * turn the nebula , generate the outputs like the emission maps ( 3 colors ) , pv - diagrams , etc .",
    "+ - inputs : the cube of emissivities and physical parameters ( could come from another 3d code ) ; rotations to apply to the 3d data ; optionally : cube of emission line profiles ; position and size of apertures , seeing , instrumental resolution + - outputs : surface brightness maps ; diagnostic line ratios maps ; emission line profiles through apertures , pv - diagrams .",
    "* cloudy ( ! ) , from g. ferland * idl ( rsi ) * subversion ( svn ) , used to download the package and to keep it synchronized with the ultimate repository version . *",
    "e_mail me ( morisset@astroscu.unam.mx ) to ask for an account to download the package .",
    "the website dedicated to cloudy_3d is in its very beta version , you can register at http://132.248.1.102/cloudy_3d",
    "* the catalogue of emission line profile ( see morisset & stasinska , this conference ) . *",
    "the present version of cloudy_3d is asymmetrical ( no longitude dependence ) , the next step of the development if to have a full 3d code . *",
    "interfacing cloudy_3d with shape ( w. steffen , this conference ) will give the possibility to explore quickly the morphological parameter space .",
    "* implementation of cloudy_3d into a virtual observatory to allow users to run 3d models from the web and to access a database of the previously run models ."
  ],
  "abstract_text": [
    "<S> we developed a new quick pseudo-3d photoionization code based on cloudy @xcite and idl ( rsi ) tools . </S>",
    "<S> the code is running the 1d photoionization code cloudy various times , changing at each run the input parameters ( e.g. inner radius , density law ) according to an angular law describing the morphology of the object . </S>",
    "<S> then a cube is generated by interpolating the outputs of cloudy . </S>",
    "<S> in each cell of the cube , the physical conditions ( electron temperature and density , ionic fractions ) and the emissivities of lines are determined . </S>",
    "<S> associated tools ( visneb and velneb_3d ) are used to rotate the nebula and to compute surface brightness maps and emission line profiles , given a velocity law and taking into account the effect of the thermal broadening and eventually the turbulence . </S>",
    "<S> integrated emission line profiles are computed , given aperture shapes and positions ( seeing and instrumental width effects are included ) . </S>",
    "<S> the main advantage of this tool is the short time needed to compute a model ( a few tens minutes ) . </S>"
  ]
}
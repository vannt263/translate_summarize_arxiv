{
  "article_text": [
    "the real additive bss ram s considered here present a class of random access machines ( ram s ) where each storage location can hold a real number .",
    "we want to investigate questions of decidability and undecidability for this model of computation and we hope that this research can also help to provide answers to questions such as the following .    first , the additive bss ram is a special variant of a model of computation over an algebraic structure .",
    "we are convinced that the investigation of models of computation on a high algebraic level can help to understand the reasons for the non - computability or undecidability of certain algorithmic problems and to realize whether the model of computation , the algebraic structure of the underlying data type , or the used intuitive algorithm is the cause of special undesired phenomena . using the additive machines , we are able to demonstrate the possibility to transfer and extend numerous results from the classical theory to the theory of computation over arbitrary structures . we believe that such transfers can contribute to a better understanding of the universality of several methods and techniques developed for characterizing the classical notion of computation and , thus , that this study will contribute to answer questions such as the following ( cf .",
    "@xcite , p.582 ) :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ `` what becomes of the concepts and results of elementary recursion theory if , instead of considering only computations on natural numbers , we consider computations on data objects from any relational structure ? ''",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    second , for describing the practical efficiency of algorithms in theoretical terms , a higher level of abstraction can be useful in order to more adequately reflect the high - level programming languages .",
    "for that reason the use of real ram s was proposed in @xcite , and today areas as the computational geometry can not be imagined without various different types of such machines . depending on the problem , suitable operations of a real ram ( like addition , multiplication ,",
    "the @xmath0-roots and so on ) are chosen and are assumed as primitive operations that are available at unit cost .",
    "the first used models of this kind were additive or linear real ram s that are able to execute additions and subtractions .",
    "they were introduced by d.dobkin and r.j.lipton , explicitly described in @xcite , and are often used for determining better upper and lower bounds for the time that is necessary to solve a problem by a certain algorithm in the worst case and giving the asymptotic worst - case complexity of problems . however , the calculated bounds of complexity of the problems result , in most cases , from the algebraic structure of the underlying data type so that , for an intuitively given algorithm , one can find different upper and lower bounds of complexity for different models ( cf.@xcite , p.29 ) . to address the question regarding the difference between several models ,",
    "it is important to give a characterization of the individual models and to present typical features in detail .",
    "since questions on the complexity of problems can be closely related to the decidability of decision problems ( cf.@xcite ) , it appears reasonable , also , to study the decidability and the reducibility of problems in the context of each single model .",
    "third , there is no doubt that it is possible to realize the addition of real numbers in special situations exactly .",
    "only the comparison of two real quantities will remains a difficult problem .",
    "however , regardless of the current possibilities to solve problems over the reals exactly , we want to consider some questions : which kind of problems and in which time such problems are exactly solvable if we had a machine being able to execute the addition and the subtraction of reals and to evaluate every order test in a finite ( or in a fixed ) time ?    these issues also motivated us to deal with a question raised in @xcite and to define a hierarchy of semi - decidable problems above the set of rational numbers and below the halting problem for additive bss machines over @xmath1 . here , we want to continue the study of semi - decidable problems over the reals in the framework of additive bss ram s that fit best with the general model of computation considered e.g. in @xcite .",
    "in particular , we want to explore the following question : is it possible to extend this hierarchy below the halting problem for additive machines over @xmath2 ?    whereas turing machines only process a finite number of symbols and yield a uniform complexity theory , most register machines operate on a fixed number of integers or real numbers and provide non - uniform complexity classes . in proving a lower complexity bound for a problem , the size of the considered inputs is often an arbitrary fixed number , and in such cases the results are relevant for the uniform and the non - uniform complexity of the investigated problem . on the other hand , for determining the uniform complexity of an algorithm solving a simple problem such as the real knapsack problem by means of the addition on real numbers we need a uniform model , for instance , an additive bss model .",
    "the suitability of these machines follows from the fact that an input procedure yields the size of the input .",
    "it is typical for bss machines that they can use this value in order to recognize the last input value in the infinite sequence of registers .",
    "precisely this tiny extension implies that the bss machines over @xmath3 can do the same as turing machines , and more than most classical ram s over @xmath3 .",
    "thus , a combination of properties of these models can lead to abstract machine models of computation over algebraic structures ( bss ram s over algebraic structures ) including the uniform bss model of computation over the reals . in the setting of real bss ram s",
    "( whose definition has been inspired by classical random access machines and whose power agrees with one of the bss machines ) , any real number can be considered as an algebraic object which can be stored in one register ; the permitted basic operations on the real numbers can be carried out within a fixed time unit ; and moreover uniform algorithms that desire to process each number of real input values can be executed by a single machine . with regard to ability and efficiency , the additive bss ram s present a class of machines involving , for inputs over @xmath4 , the bss machines over @xmath4 and they are weaker than the bss machines over the ring of reals ( cf .",
    "moreover , the additive real bss ram s differ , like most ram s , not only from the machines over @xmath4 , but also from the classical ram s over the integers ( considered e.g.in @xcite ) .",
    "however , we will see that classical techniques can be used also to characterize the power of bss ram s .",
    "although all reducibility notions as for instance many - one reductions , truth table reductions or weak truth table reductions defined for turing machines and studied in the classical recursion theory ( cf .",
    "@xcite , @xcite ) have an analogue in the theory of computation dealing with ( additive ) bss ram s over the real numbers , we will only consider the turing reduction , i.e. the weakest of the mentioned reduction notions .",
    "this implies that non - reducibility results like the following are very general statements and remain valid for the other mentioned reduction notions , too .",
    "however , for structures over the reals it is useful to distinguish between a _ weak _ turing reduction produced by oracle machines with real machine constants and a _",
    "strong _ turing reduction computed by means of the only constant 1 . for both types of reduction we can consider the corresponding equivalence relation and the resulting partition of decision problems over the reals into equivalence classes that we call the _ weak _ _ turing degrees _ and the _ strong _ _ turing degrees _",
    ", respectively .",
    "it is not difficult to see that the partition into strong turing degrees is a finer refinement of the partition created by the weak turing reduction . also because of these properties",
    ", the strong turing reduction will be the main subject in the following .",
    "the papers @xcite , @xcite , and @xcite present some hierarchies of semi - decidable problems below the halting problems for several types of bss machines where most of the non - reducibility results follow from the algebraic properties of the real numbers . we want to continue and deepen the study by investigating the strong reductions without arbitrary real parameters in order to even better understand the degrees of undecidability of decision problems over the reals",
    "for additive machines over @xmath2 we will extend an infinite hierarchy constructed by means of semi - decidable sets of tuples in @xmath5 ( @xmath6 ) , whose components satisfy a certain kind of linear dependence , in @xcite .",
    "for this purpose , we give the most important definitions in section 2 .",
    "in section 3 we present a construction that is based on the enumerability of machines without irrational constants and their halting sets . under these assumptions it is possible to transfer results from the classical recursion theory and use logical proof techniques .",
    "we will apply diagonalization techniques including the injury priority method that was used by friedberg ( in @xcite ) and muchnik in order to show that there are degrees between the turing degrees @xmath7 and @xmath8 of decidable and complete semi - decidable problems .",
    "section 3 offers a further subhierarchy between the halting problems for the additive machines using only the equality tests and using the order tests , respectively . in this construction",
    "we will again use algebraic and topological properties of the real numbers . in section 4",
    "we give a summary .",
    "the uniform bss model of computation was introduced in @xcite and the additive bss machines were considered , for instance , in @xcite , @xcite , and @xcite .",
    "we will give a short definition of an additive machine in accordance with a model suitable for the computation over an arbitrary algebraic structure ( cf . also @xcite ) . the considered underlying algebraic structure over the real numbers",
    "will be the structure with addition and subtraction as basic operations and order as relation .",
    "analogously to the general case where it is useful to distinguish between addresses of the registers and the individuals of the underlying structure and as introduced in @xcite , every machine @xmath9 is equipped with an infinite number of registers @xmath10 for the real numbers and a finite number of index registers @xmath11 .",
    "the latter registers serve the uniform implementation of algorithms over arbitrary structures since they make it possible to process inputs of any length .",
    "first , they are used in copy instructions in analogy with those classical ram s that are equipped with an accumulator ( cf .",
    "@xcite , @xcite ) .",
    "second , they obtain the size of every input tuple by an input procedure in analogy with the bss model and they can be used in order to determine the length of the output .",
    "third , they allow to copy values without using individuals of the underlying structure as indices or addresses in copy instructions and  in contrast to the model in @xcite  to calculate all addresses without the help of the operations of the underlying structure .",
    "the additive bss ram s can perform labeled instructions of the form @xmath12 , @xmath13 , @xmath14 , _ if @xmath15 then goto @xmath16 else goto @xmath17 _ , _ if @xmath18 then goto @xmath16 else goto @xmath17 _",
    ", @xmath19 , @xmath20 , @xmath21 , and _ if @xmath22 then goto @xmath16 else goto @xmath17_. each assignment of an input @xmath23 to the registers of a machine @xmath9 can be realized by @xmath24 .",
    "we denote the class of all additive bss machines by @xmath25 .",
    "a problem @xmath26 is @xmath25-_semi - decidable _ if its partial characteristic function is computable by a machine in @xmath25 , and a set is @xmath25-_decidable _ if its characteristic function is computable by a machine in @xmath25 .",
    "thus the _ halting sets _ of machines in @xmath25 are @xmath25-semi - decidable , and a set is @xmath25-decidable if and only if the set itself and its complement are @xmath25-semi - decidable .",
    "a set @xmath27 is _ recursively _ ( or _ effectively _ ) _ enumerable by a machine in @xmath25 _ ( or _ @xmath25-enumerable _ ) if a surjective function @xmath28 is computable by an @xmath25-machine .",
    "note that this definition of the notion _ effectively enumerable set",
    "_ differs from the definition of recursively enumerable sets given in @xcite .",
    "a significant difference between the turing model and the bss ( ram ) model becomes clear by considering the relation between semi - decidability and enumerability . in the classical theory of recursive functions and in the theory of recursive reducibility",
    ", we mainly speak about recursive and recursively enumerable sets .",
    "the _ recursive sets _",
    "@xmath29 are decidable by turing machines and the _ recursively enumerable _ problems @xmath29 are the sets for which a bijective function @xmath28 is computable by a turing machine .",
    "the sets semi - decidable by turing machines are the halting sets of turing machines  and consequently reducible to the halting problem for turing machines with respect to many - one reducibility  and they are recursively enumerable by turing machines .",
    "thus , a set of positive integers is decidable by a turing machine if and only if the set itself and its complement are effectively enumerable .",
    "the halting sets of machines in @xmath25 can also be reduced to the halting problem for machines in @xmath25 . however , there are halting sets @xmath30 ( e.g. @xmath31 ) which are not effectively @xmath25-enumerable .",
    "let @xmath32 and @xmath33 be the classes of the additive bss machines over @xmath34 and @xmath2 , respectively , using only the constants 0 and 1 in instructions of the form @xmath14 and only the equality tests and order tests , respectively .",
    "let notions such as _ @xmath32-decidable _ be defined analogously to the definitions given above .",
    "the subsets of @xmath35 semi - decidable or decidable by additive machines are easy to characterize ( cf.proposition 1 in @xcite , where the authors call all halting sets _ recursively enumerable _ ) since , for any input @xmath36 , at any time of the computation the content of any register of an additive machine using only constants 1 and 0 can be described by a term @xmath37 with @xmath38 and , according to this , tests along a computation path correspond to questions of the form _",
    "@xmath39 ? _ and",
    "_ @xmath40 ? _ , respectively . the class of @xmath41-semi - decidable problems @xmath42 contains countable sets @xmath43 and the co - finite sets @xmath44 with @xmath45 , the class of @xmath41-decidable problems @xmath42 contains the finite sets @xmath43 and the co - finite sets @xmath44 with @xmath45 , the problems @xmath42 semi - decidable by a machine in @xmath46 are countable unions of intervals , and , for any @xmath46-decidable problem @xmath42 , the sets @xmath47 and @xmath48 are countable unions of disjoint intervals with end points in @xmath49 .",
    "the latter holds since any set @xmath44 of inputs for which an additive machine in @xmath46 follows a computation path is convex and , consequently , an interval if @xmath50 .",
    "if the machine decides a problem , then each of these computation paths is finite and , thus , there are only a countable number of paths . in case of machines over @xmath2 and inputs from @xmath35 , we can order the paths such that a path @xmath51 is  left  from another path @xmath52 if and only if the inputs for which a machine goes through @xmath51 are less than the inputs for which the machine goes through @xmath52 . because we assume that any computation path is either an accepting or a rejecting path",
    ", any path corresponds to an interval of accepted inputs or to one of rejected inputs .",
    "the @xmath46-semi - decidable subsets of @xmath35 are countable unions of disjoint intervals with limits of computable increasing or decreasing sequences as end points .    by analogy with the classical turing reduction , we want to consider reductions by means of oracle machines that possess an oracle @xmath53 and are able to make tests whether a given tuple @xmath54 belongs to @xmath55 or not . to realize the evaluation of queries of the form _",
    "@xmath56 ? _ we allow to use oracle instructions of the form@xmath57 where the length of any tuple in a query is determined by the content of the index register @xmath58 .",
    "note that we prefer to use this form of oracle instructions explicitly introduced in @xcite in order to take into account the possibility to use the same form also in a general model of computation over arbitrary structures .",
    "accordingly , let @xmath59 be the class of the additive machines over @xmath60 which can additionally execute instructions of the form ( [ oracleinstruction ] ) . like in @xcite",
    ", we say that a problem @xmath61 is _ easier than _ a problem @xmath62 ( denoted by @xmath63 ) if @xmath64 is decidable by a machine in @xmath65 . if @xmath64 is easier than @xmath66 , then @xmath66 is _ harder than _ @xmath64 .",
    "the problem @xmath64 is _ strictly easier than _ @xmath66 ( denoted by @xmath67 ) if @xmath63 holds and @xmath66 can not be decided by a machine in @xmath68 .",
    "we say that @xmath64 can be _ turing reduced to @xmath66 by a machine in @xmath69 _  or we could also say that @xmath64 can be _ bss reduced to @xmath66 by a machine in @xmath69 _  if @xmath64 is easier than @xmath66 .",
    "let @xmath70 if and only if @xmath71 and @xmath72 .",
    "thus , for all decision problems @xmath73 and @xmath74 , we have @xmath75 , @xmath76 , and if @xmath64 and @xmath66 are disjoint and @xmath69-semi - decidable , then we have @xmath77 . @xmath78 and @xmath79 can similarly be defined . to simplify matters , we will write @xmath80 , @xmath81 , and @xmath82 for and only for @xmath83 , @xmath67 , and @xmath70 , respectively .    for the classes @xmath84 , @xmath85 , and",
    "@xmath86 we will now consider the halting problems defined by @xmath87 } = \\bigcup_{n\\geq 1 } \\{(n\\,.\\,\\vec x\\,.\\,{\\rm code } ( { \\mathcal m}))\\mid { \\vec x}\\in { \\mathbb{r}}^n \\,\\,\\&\\,\\ , { \\mathcal m}\\in{\\sf m}_{\\rm add}^{[1[,= ] ] } \\,\\,\\&\\,\\ , { \\mathcal m}(\\vec x)\\downarrow \\}\\ ] ] where we write @xmath88 instead of @xmath89 if @xmath90 and @xmath91 .",
    "@xmath92 and @xmath93 will be used to express the facts that @xmath9 halts on @xmath94 or not .",
    "the codes @xmath95 of the machines @xmath96 are sequences of the codes of the single symbols of their programs ( in analogy with @xcite , p. 34 ) and , for some @xmath0 , each of the single symbols is encoded by @xmath0 symbols in @xmath4 unambiguously ( in analogy with the classical setting where turing machines are considered ) . for every other bss machine @xmath97 , let @xmath95 be the usual code of its program where any real constant is encoded by itself and the other single symbols are encoded by @xmath0 zeros and ones ( for some @xmath0 ) .",
    "consequently , it is easy to see that we have @xmath98 the latter is valid since @xmath99 is semi - decidable by a machine in @xmath33",
    ".    since @xmath100 is effectively enumerable by a machine in @xmath32 , @xmath101 and @xmath102 are @xmath69-decidable and @xmath32-semi - decidable .",
    "therefore , with respect to the machines in @xmath32 , we have @xmath103 which means that @xmath101 and @xmath104 are decidable by machines in @xmath105 . if an input @xmath94 is in @xmath106 , then a machine in @xmath32 can determine the binary representation of @xmath94 and simulate a given turing machine .",
    "on the other hand , any addition of integers and , for any @xmath107 , the test @xmath108 _ ? _ can be simulated by turing machines .",
    "therefore , the halting problem for turing machines is @xmath32-semi - decidable and @xmath109 is semi - decidable by a turing machine .",
    "moreover , every problem @xmath110 is semi - decidable by a turing machine if and only if it is @xmath32-semi - decidable and the problem is decidable by a turing machine if and only if it is @xmath69-decidable .",
    "we have also the following .",
    "[ turingred ] for all @xmath111 , @xmath47 is decidable by an oracle turing machine using the halting problem for turing machines as oracle if and only if @xmath112 and if and only if @xmath113 .",
    "we have @xmath114 .    for any problem @xmath115 below the halting problem for turing machines ,",
    "there is no guarantee that @xmath116 holds .",
    "for this reason we restrict the following statement to the relation @xmath117 .    for all @xmath118 , @xmath47 is decidable by an oracle turing machine using @xmath119 as oracle if and only if @xmath120 .",
    "that means that the classical turing degrees form a substructure of the structure of the degrees with respect to the machines in @xmath69 .",
    "however , no classical degree is equal to the corresponding degree with respect to @xmath117 . among others",
    ", we have , for instance , @xmath121 for any @xmath122 .",
    "moreover , we are able to show that @xmath123 holds for any @xmath122 and any undecidable @xmath111 .",
    "the latter means that there are further degrees .",
    "the class of all turing degrees resulting from the classical turing reduction represent a proper subclass of turing degrees defined by the relation @xmath124 .    since additive machines are able to evaluate several properties of rational as well as irrational inputs , there are further real turing degrees such as the degrees represented by @xmath125 in ( [ erstehierarchie ] ) .",
    "the answer of the question about the decidability of these problems is dependent on the algebraic properties of the underlying structure and we will show that the @xmath69-semi - decidable problems @xmath126 and @xmath125 are incomparable with respect to the relation @xmath127 . in @xcite we showed @xmath128 where @xmath129 and @xmath130 are subsets of @xmath131 whose elements can be described by certain linear equations .",
    "and a closer look reveals that @xmath132 is even easier than @xmath133 .",
    "consequently , this raises the question whether @xmath133 and @xmath134 define the same turing degree with respect to @xmath124 , and so on .",
    "therefore , we shall now extend our results to a refinement of this hierarchy by presenting a subhierarchy between @xmath133 and @xmath134 and constructing decision problems that are easier than @xmath133 and harder the @xmath132 .",
    "by properties which we recalled above and classical results there are various semi - decidable problems @xmath42 and among them some halting problems @xmath110 that are all not decidable by an additive machine without irrational constants . here , we construct an @xmath32-semi - decidable problem @xmath135 below @xmath133 by means of a priority method often used in the classical recursion theory for constructing recursively enumerable sets ( cf .",
    "@xcite , @xcite , and @xcite ) and then we extend the results .",
    "this construction serves two goals . on one hand , we want to contribute to a classification of the @xmath69-semi - decidable problems , and on the other hand we want to take the question into account whether it is possible to transfer results of elementary recursion theory .",
    "we will show that the transfer of ideas is possible if the proofs are carefully analyzed and semantic and syntactic techniques that are usually combined become clearly separated . in particular , semantic techniques can , in our experience , be successfully applied to discuss fundamental questions on the power of random access machines for several underlying structures .",
    "this is also confirmed by the following application of the priority method that provides a general way of constructing semi - decidable problems below the halting problem over several structures of finite signature .",
    "constructions such as the following are also possible in cases where all problems that are semi - decidable with respect to turing machines are decidable by machines over the considered algebraic structure ( see also the remark after proposition [ anichtaufk ] ) .",
    "we want to define the set @xmath136 recursively such that @xmath136 has the following properties .    1 .",
    "@xmath136 is @xmath32-enumerable and thus @xmath32-semi - decidable .",
    "@xmath137 is infinite .",
    "the intersection of @xmath136 and each infinite @xmath32-enumerable subset of @xmath101 is not empty .",
    "the halting problem @xmath133 can not be reduced to @xmath136 by a machine in @xmath138}$ ] .",
    "thus , by ( 2 ) and ( 3 ) , @xmath136 is not decidable by a machine in @xmath32 .",
    "moreover , we will see that this statement also remains true if , for deciding @xmath136 , we allow all additive oracle machines in @xmath139 for which the problem @xmath140 is @xmath33-decidable .",
    "the reason is that , for inputs in @xmath141 , the oracle queries @xmath142 _ ? _ have no benefit since they can be simulated by machines in @xmath33 without oracle queries .",
    "that means that we will , in such a situation , get @xmath143",
    ".    provided that a structure of finite signature such as @xmath144 contains a set @xmath145 that is decidable and effectively enumerable over this structure , then it is possible to construct a set @xmath146 with properties corresponding to ( 1 ) ,  , ( 4 ) .",
    "other algebraic properties of the underlying structure are irrelevant . from this point of view , semi - decidable sets such as @xmath147 are very simple in the double sense of the word . by analogy with the classical theory of computation",
    "we also want to say that a set is _ simple _ ( _ with respect to the underlying structure _ )",
    "if it is effectively enumerable and its complement related to @xmath148 is infinite and contains no infinite effectively enumerable set , over this structure . in this context , the simplicity of a set that follows , for @xmath136 , from ( 1 ) , ( 2 ) , and ( 3 ) implies its undecidability .",
    "the property ( 4 ) follows from the lowness of @xmath136 where we say that an effectively enumerable set @xmath44 is _ low _ ( _ with respect to the underlying structure _ ) if @xmath149 holds for special halting problems @xmath150 and @xmath151 that we want to define now .",
    "the fact that the codes of the machines in @xmath152 as well as in @xmath32 can be effectively enumerated by additive machines in @xmath32 and the next lemma will be of particular importance in the following .",
    "_ the intersection of the halting set of any machine in @xmath153 and @xmath101 is effectively enumerable and , consequently , it is also a halting set of a machine in @xmath153 .",
    "_    let @xmath154 be the halting set of a machine @xmath155 .",
    "then , a machine in @xmath32 can enumerate all pairs @xmath156 @xmath157 for which @xmath9 halts on @xmath158 after exactly @xmath159 steps .",
    "thus , there is also an enumeration machine @xmath160 @xmath161 computing , for the input @xmath162 , the first pair @xmath163 from 1 and each further pair @xmath164 step - by - step from its enumerated predecessor @xmath165 for all @xmath166 , and outputting the integer @xmath167 .",
    "consequently , @xmath168 is semi - decidable by a machine in @xmath32 using the program of @xmath160 as subprogram .    for any @xmath169 ,",
    "let @xmath170 , where @xmath171 is the integer whose binary code matches essentially ( apart from leading zeros ) with @xmath172 ( that means , more precisely , that @xmath173 if @xmath174 and @xmath175 ) and let @xmath176 . if a number @xmath177 is not in @xmath178 , then let the corresponding machine @xmath179 be a simple machine that halts in any case .",
    "in this way , for any @xmath180 , we get a list of all additive oracle machines by @xmath181 .",
    "let @xmath182 be a list of all additive machines in @xmath32 and let @xmath183 enumerate the set @xmath184 of all positive integers @xmath185 that belong to the halting set of @xmath186 .",
    "for any oracle set @xmath187 we will use the following special halting problem . @xmath188 then , both following relations are trivial since , on integers , each order test can be simulated by means of equality tests .",
    "@xmath189 and @xmath190 .    by using the ideas of the proof of proposition 6 in @xcite we get the following .",
    "@xmath191 .    by proposition [ turingred ] ,",
    "the following corollary states that the power of @xmath151 in the class of decision problems @xmath192 with respect to the relation @xmath193 ( that means to @xmath194 ) corresponds to one of the halting problem for turing machines within the classical theory .",
    "this is easy to show since @xmath101 is @xmath69-decidable and , consequently , we can use the relationship @xmath195 .",
    "but , with respect to the relation @xmath196 the power of @xmath151 is weaker ; we have , for any @xmath197 , @xmath198 .",
    "the latter can be shown as follows .",
    "since @xmath199 is not @xmath69-decidable ( cf.lemma [ unentorakelm ] ) , @xmath200 is not finite .",
    "that means that any oracle machine in @xmath201 goes , for all irrational inputs and for an infinite number of positive integers , through the finite computation path that results from answering nontrivial tests _",
    "@xmath39 ? _ ( where @xmath202 ) and queries _ @xmath203 ? _ in the negative .",
    "[ reduktaequv ] for any @xmath110 , @xmath204 if and only if @xmath205 and if and only if @xmath206 .    in analogy with the classical setting , we have also the following .",
    "[ unentorakelm ] for any oracle set @xmath187 , we have @xmath207 .",
    "now , the set @xmath208 will be defined in stages where , for any machine @xmath9 and any input @xmath94 , @xmath209 means that @xmath9 halts on @xmath94 within @xmath210 steps and @xmath211 means that @xmath9 does not halt on @xmath94 within @xmath210 steps .",
    "let @xmath212 .",
    "assume that , for @xmath213 , @xmath214 is already defined .",
    "then , for any @xmath215 , let @xmath216 be defined as follows .",
    "if @xmath217 , then let @xmath216 be the greatest integer which is used in a query by @xmath218 on input @xmath162 within the first @xmath219 steps , and if @xmath220 , then let @xmath216 be 0 .",
    "moreover , let @xmath221 be the set of the positive integers enumerated by @xmath222 for the input @xmath219 within the first @xmath219 steps and let @xmath223 where @xmath224 .",
    "if @xmath225 , then let @xmath226 be the _ active index _ for extending @xmath214 by @xmath227 .",
    "finally let @xmath228    [ ersteeigenschaft ] @xmath136 is effectively enumerable by an additive machine in @xmath32 .    for @xmath213 ,",
    "let us assume that @xmath214 is @xmath32-enumerable and let us consider @xmath229 where @xmath230 .",
    "then , for any @xmath231 and @xmath232 , the inequalities @xmath233 can be checked by an additive machine in @xmath32 since each @xmath218 computes only integers on input @xmath162 and , for all integers @xmath234 , any query @xmath235 _ ? _ and any test @xmath236 _ ? _",
    "are decidable by a machine in @xmath32 .",
    "if we have the inequalities @xmath237 for some @xmath238 with @xmath239 , then @xmath240 and we can fix @xmath241 and enumerate the next @xmath242 . note that , in the following steps , the index @xmath243 will not be considered further since we have @xmath244 .",
    "[ zweiteeigenschaft ] @xmath137 is infinite .    by definition of @xmath136",
    ", there is a sequence of active indices @xmath245 such that @xmath246 and @xmath247 for all @xmath248 .",
    "therefore , we have @xmath249 and thus @xmath250 for all @xmath251 .    in the following",
    "we will need that the intersection of @xmath136 and any infinite halting set @xmath252 is not empty .",
    "let us show it in two stages by proving the conditions for lowness and simplicity for @xmath136 .    for all @xmath253",
    ", @xmath254 holds .",
    "( @xmath255 ) if @xmath256 for infinitely many @xmath210 , then @xmath257 .",
    "let us assume that , for an @xmath258 , there is an infinite sequence @xmath259 such that @xmath260 let @xmath219 be great enough such that , for each @xmath261 , either @xmath262 . the existence of @xmath219 is ensured since the active indices form a sequence @xmath263 without repetition .",
    "it follows from ( [ folge00 ] ) that there is at least one @xmath264 such that @xmath265 .",
    "consequently , for any @xmath266 for which @xmath267 and @xmath268 is defined , we have @xmath269 and @xmath270 since the set @xmath271 contains , by definition , no elements appearing in a query of @xmath272 on @xmath162 if @xmath273 .",
    "therefore , the computation of @xmath274 on @xmath162 proceeds in exactly the same manner as one of @xmath275 , @xmath276 , receives the same answer to its oracle queries , and halts with the same output in the same number ( @xmath277 ) of steps .",
    "[ conditionssimplicity ]    for all @xmath253 , @xmath278 holds .",
    "if @xmath279 is infinite , then @xmath280 .",
    "let us assume that @xmath278 does not hold for an @xmath253 .",
    "then , let @xmath177 be the smallest index such that the property @xmath281 fails .",
    "consequently , @xmath184 is infinite and @xmath282 .",
    "moreover , for any @xmath283 , let @xmath284 be a positive integer satisfying @xmath285 if @xmath286  regardless of whether @xmath287 is a finite or an infinite set .",
    "moreover , let @xmath288 be a positive integer with @xmath289 .",
    "then , by definition of @xmath136 and because of @xmath290 , there is some @xmath291 such that for any @xmath292 and any @xmath293 with @xmath294 , there is some @xmath295 such that @xmath296 .",
    "consequently , there is an element @xmath0 in the subset @xmath297 of the finite set @xmath298 such that @xmath299 holds for infinitely many @xmath292 and @xmath300 hold for an infinite sequence @xmath301 with increasing maxima @xmath302 .",
    "the maxima of @xmath303 in ( [ folge1 ] ) are greater than 0 ( because of @xmath304 ) , and therefore it follows from the definition of @xmath305 that the @xmath306-th oracle machine on input @xmath306 halts for an infinite number of subsets of @xmath136 .",
    "the reason is that we have @xmath307 , @xmath308 .",
    "by @xmath309 this means that @xmath310 and , consequently , @xmath311 for some @xmath210 .",
    "this implies that there is a @xmath312 such that any query of @xmath313 on @xmath306 does not refer to @xmath314 and thus we have @xmath315 .",
    "moreover , @xmath316 , and @xmath317 perform the same computation on input @xmath0 .",
    "in this way we get @xmath318 and @xmath319 is therefore finite .",
    "thus , there is an @xmath320 such that @xmath321 since @xmath302 is properly increasing .",
    "but , this contradicts ( [ folge1 ] ) and , thus , our assumption is wrong and we must have @xmath322 .",
    "thus , @xmath136 has the usual properties of a low and a simple set .",
    "since the intersection of @xmath136 and any infinite halting set @xmath252 is not empty and the intersection of the complement @xmath323 and @xmath101 is an infinite set ( with @xmath324 ) , @xmath325 is not @xmath326-semi - decidable .",
    "@xmath325 and @xmath327 are not semi - decidable by a machine in @xmath326 .",
    "@xmath136 is not decidable by a machine in @xmath326 .",
    "although , in analogy with the classical setting , we could syntactically prove the following lemma , we will give a semantic proof that shows in detail the possibility to transfer the construction idea to machines over an arbitrary structure of finite signature if there is an effectively enumerable and decidable set @xmath145 of elements of the structure like @xmath101 .",
    "[ diedritteeig ] @xmath328 .",
    "since @xmath101 is @xmath69-decidable , it is enough to show that @xmath329 and @xmath330 are semi - decidable by a machine in @xmath331 . to simplify matters",
    ", we will give corresponding algorithms for inputs @xmath332 in a short form where at the beginning the machines enumerate all positive integers and compare any enumerated number with the input @xmath0 .",
    "if the input @xmath0 is not a positive integer , then the enumeration of integers will not be stopped .",
    "\\a ) @xmath329 is semi - decidable by :    * input : @xmath332 . *",
    "put @xmath333 .",
    "* repeat @xmath334 until @xmath335 . * for @xmath122 , simulate @xmath336 on @xmath0 where the simulation of the queries whether @xmath337 is done as follows : + compute @xmath338 for the following @xmath339 and ask whether @xmath340 .",
    "+ @xmath341 : :    enumerate the elements of @xmath136 until an    enumerated element is equal to @xmath234 .",
    "\\b ) by condition @xmath342 we know that @xmath343 holds if for every @xmath177 there is a @xmath344 such that @xmath345 .",
    "moreover , as shown in the proof of lemma [ conditionssimplicity ] , @xmath343 holds only if there is an @xmath219 such that @xmath345 holds for all @xmath346 .",
    "consequently , @xmath347 holds if and only if there is an @xmath177 such that the following machine @xmath348 does not halt and thus @xmath349 .",
    "@xmath350 : :    input : @xmath36 .",
    "+    put @xmath351 .",
    "+    repeat ( 1 ) , ( 2 ) , and ( 3 ) until an output instruction is simulated    +    ( that means until    @xmath345 for    some @xmath352 ) .",
    "+    \\(1 ) compute the elements @xmath353 of    the set @xmath136 .",
    "+    \\(2 ) increment @xmath162 by 1 .",
    "+    \\(3 ) simulate @xmath162 steps of the execution of    @xmath354 on @xmath0 .",
    "@xmath348 halts if and only if @xmath345 for some @xmath344 .",
    "this means that there is an @xmath177 for that @xmath350 does not halt and thus @xmath349 holds if and only if @xmath347 and , thus , @xmath355 are valid .    consequently , @xmath330 is semi - decidable by :    * input : @xmath332 . *",
    "put @xmath333 .",
    "* repeat @xmath334 until @xmath335 . * for @xmath356 , enumerate the positive integers @xmath177 , compute , for every @xmath177 , @xmath357 and ask whether @xmath358 . halt if the answer is no .",
    "consequently , we get the following .",
    "[ anichtaufk ] @xmath359 .",
    "@xmath360 follows from corollary [ reduktaequv ] and lemma [ ersteeigenschaft ] .",
    "let us assume @xmath361 .",
    "then , we would have @xmath362 by lemma [ diedritteeig ] and the halting problem @xmath363 would be decidable by a machine in @xmath364 in contradiction to lemma [ unentorakelm ] .",
    "let us remark that the algorithms given in the proof of lemma [ diedritteeig ] are sufficient to show @xmath365 ( @xmath366 holds since @xmath367 and @xmath368 follows from @xmath369 ) , but they are not sufficient to show @xmath370 ( since @xmath371 ) .",
    "moreover , the construction of @xmath136 and the proofs show clearly that a similar construction can be done for the bss ram s over an arbitrary algebraic structure of finite signature if there is an infinite set that is enumerable and decidable over this structure like the set @xmath101 .",
    "the restriction to a finite number of operations , constants , and relations allows the enumeration and the simulation of all bss ram s over such a structure by a universal machine and the definition of undecidable semi - decidable problems below the corresponding halting problem in the same way as above . as the following example shows , the transfer is also possible , even if @xmath372 and , consequently , the halting problem for turing machines are decidable over the considered structure .",
    "let us consider the bss ram s over @xmath373 where the digits @xmath374 of the real number @xmath375 are defined by @xmath376 if @xmath377 and by @xmath378 otherwise .",
    "then , on one hand , @xmath379 is decidable by means of @xmath380 and , on the other hand , @xmath381 allows to apply the priority method for constructing new semi - decidable sets since it is a structure of finite signature containing @xmath101 .",
    "in order to extend the hierarchy ( [ erstehierarchie ] ) , we want to use that , for all inputs in @xmath141 , problems such as @xmath382 are decidable in the classical sense . more precisely , the decidability of @xmath383 for inputs in @xmath141 means that @xmath384 is @xmath69-decidable and , thus , the oracle @xmath132 has no benefit for the computation of additive machines in @xmath385 on the input space @xmath141 .",
    "this implies that the next lemma allows to transfer and generalize several results from the recursion theory and to show the incomparability of certain problems .",
    "let @xmath386 be @xmath69-decidable for all inputs in @xmath141 and @xmath110 .",
    "then , we have @xmath387 if @xmath388 is not semi - decidable by a machine in @xmath32 .",
    "let us assume that @xmath47 is decidable by a machine in @xmath389 .",
    "consequently , @xmath48 is semi - decidable by a machine @xmath390 .",
    "let us modify @xmath391 such that at the beginning the machine @xmath391 enumerates all non - negative integers and compares any enumerated number with the input .",
    "if the input is a non - negative integer , then the further instructions of @xmath9 can be simulated by a machine in @xmath85 since each order test can be simulated by means of few equality tests and all queries of @xmath9 can be replaced by a decision procedure .",
    "thus @xmath392 is semi - decidable by a machine in @xmath32 .",
    "consequently , if @xmath388 is not semi - decidable by a machine in @xmath32 , then the assumption is wrong .",
    "[ uebertr ] let @xmath386 be decidable for all inputs in @xmath141 and @xmath110 .",
    "then , we have @xmath387 if @xmath47 or @xmath388 is not semi - decidable by a machine in @xmath32 .    therefore , we can extend the hierarchy ( [ erstehierarchie ] ) since we have @xmath393 for any @xmath110 satisfying the conditions in accordance with proposition [ uebertr ] and , moreover , we have @xmath394 for any @xmath110 .",
    "the latter holds since @xmath395 can be shown in analogy with @xmath396 ( cf .",
    "@xcite ) and , furthermore , @xmath397 can be shown in a similar way by proving that , for any machine @xmath398 that decides a problem , there is a rational number @xmath399 such that @xmath400 goes through the same computation path for both inputs @xmath399 and @xmath401 .",
    "( for more information about this kind of proofs see also the proof of lemma [ lll9 ] . )    hence , for any problem @xmath110 that is @xmath32-semi - decidable , @xmath402 is incomparable with @xmath47 if @xmath388 is not semi - decidable by a machine in @xmath32 .",
    "under consideration of proposition [ turingred ] and corollary [ reduktaequv ] we get the following .",
    "[ akunvergll ] @xmath402 is incomparable with the halting problem for turing machines and the problems @xmath151 and @xmath136 with respect to the strong turing reduction @xmath127 .",
    "@xmath403 and @xmath404 .",
    "since the positive integers can be unary encoded , for any @xmath110 we also want to consider the decision problem @xmath405 then , we have @xmath406 and @xmath407 . on the other hand , for any @xmath408",
    ", @xmath409 is decidable by an additive oracle machine using the oracle set @xmath410 if @xmath411 is infinite , @xmath32-semi - decidable , and thus @xmath32-enumerable .",
    "this implies the following by proposition [ anichtaufk ] and proposition [ akunvergll ] .",
    "we have    @xmath412 .",
    "the aim of this section is to show @xmath413 and to define an infinite hierarchy between @xmath133 and @xmath134 by using the properties of prime numbers and their square roots and the fact that the set @xmath414 is semi - decidable by a machine in @xmath69 if @xmath415 is turing computable .",
    "that means , we can use that , for every prime number @xmath416 , the set @xmath417 is @xmath69-semi - decidable . on the other hand",
    ", @xmath417 is not @xmath69-decidable and we can even show that @xmath417 can not be bss reduced to @xmath133 with respect to @xmath127 . before we start the construction of a hierarchy between @xmath133 and @xmath134 , let us mention that the latter fact implies also that the sets @xmath417 and @xmath133 define incomparable strong turing degrees since @xmath418 can also be shown in analogy with @xmath396 .",
    "let @xmath419 be an enumeration of the prime numbers and let @xmath420 be an additive machine in @xmath69 that semi - decides @xmath421 by checking , for any input @xmath422 , the condition ( @xmath423 and @xmath424 ) or ( @xmath425 and @xmath426 ) for all enumerated @xmath427 until the condition is satisfied .",
    "note , that the machine @xmath420 can compute the prime number @xmath428 from @xmath162 by executing instructions realizing the algorithm @xmath429 ; @xmath430 ; while @xmath431 \\{@xmath432 ; if @xmath433 then @xmath434;}. therefore , we get @xmath435 for @xmath436 and , for the halting problems @xmath437 ( including @xmath438 ) , the following hierarchy .    @xmath439 .    the following lemmas are useful for giving further incomparable turing degrees with respect to @xmath127 .",
    "[ l9 ] for any @xmath440 , @xmath441 .",
    "let us give , for the oracle @xmath442 , a machine @xmath443 in @xmath444 that outputs 1 if and only if the input is @xmath445 and otherwise 0 . at the beginning",
    "@xmath443 queries the oracle @xmath446 whether the input @xmath234 belongs to this oracle and outputs 0 if the answer is in the negative . otherwise , @xmath234 is in @xmath447 and there is an index @xmath448 for which we have @xmath449 . in this case , the index @xmath450 is searched by means of comparisons of @xmath451 with the squares of the elements of @xmath446 and a procedure of excluding members from the set @xmath452 as follows .",
    "let @xmath453 be the set of the indices of the first @xmath177 prime numbers and let @xmath443 simulate the machine @xmath454 for the inputs @xmath455 simultaneously . for all enumerated @xmath456 , @xmath443 checks @xmath457 and @xmath458 as well as @xmath425 and @xmath459 for any @xmath460 .",
    "if one of both conditions is satisfied for some @xmath162 and , consequently , @xmath461 , then @xmath162 is deleted in @xmath462 by putting @xmath463 . if @xmath464 , then the machine halts and the output is 0 . otherwise , the machine continues its operations .",
    "if @xmath462 contains only one element , then this member of @xmath462 can be only the index @xmath465 and should not be deleted , and in this case the output is 1 .",
    "since relationships as @xmath466 are characteristic for the turing reducibility relation and @xmath467 is also easy to see , we even have the following .",
    "[ mengenprimzahlen ] for any @xmath436 , @xmath468 .",
    "@xmath469 holds since @xmath470 is satisfied if and only if @xmath471 holds .",
    "2 . for any input @xmath472 with @xmath473",
    ", we can check whether @xmath474 by using the oracle @xmath475 . by lemma [ l9 ]",
    "@xmath475 can be reduced to @xmath476 .",
    "thus , we also obtain @xmath477 .",
    "therefore , the decidability of the set @xmath478 implies also the following .",
    "[ ll9 ] let @xmath436 and @xmath479",
    ". if @xmath480 is decidable by an oracle machine in @xmath481 , then the problems @xmath482 and @xmath483 are also decidable by some machines in @xmath481 .    together with lemma [ l9 ]",
    "this means that the problem @xmath484 as well as the problem @xmath485 would be decidable by machines in @xmath486 if @xmath487 would be decidable by a machine in @xmath486 . in the following",
    "we will use it .",
    "[ zusammenh ] for any @xmath488 , if @xmath489 , then @xmath490 .",
    "first , let us consider the machines in @xmath491 and in this context , in particular , queries for inputs in @xmath35 .",
    "recall that , for inputs @xmath36 , at any time of the computation the content of a register of these machines can be described by a term @xmath37 with integers @xmath0 and @xmath492 that have the following features . @xmath0 and @xmath492 are integers that result only from the execution of the computation instructions along the traversed path , and , for any fixed computation path , @xmath0 and @xmath492 are independent of the input values . in the following , we will consider only this type of terms and we will use that , for any fixed computation path and inputs @xmath36 , any oracle query coincides with a question of the form @xmath493 where @xmath494 ( @xmath495 ) are independent of the input values in the described sense .",
    "moreover , we use that , in case of @xmath202 , we have @xmath496 if and only if @xmath497 .",
    "[ orakelwurzundpi ] let @xmath400 be a machine in @xmath491 .    \\1 . for all inputs",
    "@xmath36 , the oracle queries @xmath498 of @xmath499 which are not of the form @xmath500 for some @xmath501 and @xmath502 are always answered in the negative .",
    "if , for some input @xmath503 , an oracle query of the form ( [ orakelanfr0 ] ) coincides with @xmath504 for some @xmath501 and @xmath505 , then this oracle query has the same form ( [ orakelanfr ] ) ( with the same @xmath494 ) for all inputs @xmath36 for which @xmath400 goes through the same computation path as for @xmath506 until this query is executed .",
    "let @xmath507 be the computation path traversed by @xmath400 on @xmath503 .",
    "then , for inputs @xmath36 , any query of @xmath507 has the general form @xmath508 let us assume that a query @xmath119 of the form ( [ queryforx ] ) corresponds , for the input @xmath506 , to ( [ queryforx0 ] ) .",
    "then , we have @xmath509 and there is a machine @xmath502 such that @xmath510 is its code @xmath511 .",
    "since @xmath506 satisfies equations of the form @xmath512 , @xmath513 , and @xmath514 only if @xmath515 holds , the number @xmath162 and @xmath516 are determined by constant functions @xmath517 , @xmath518 , and @xmath519 and",
    "thus , for all @xmath520 for which @xmath400 goes through the computation path @xmath507 , the query @xmath119 has the same form ( [ orakelanfr ] ) .",
    "let @xmath521 be a machine deciding a problem @xmath50 .",
    "then , there are @xmath522 such that @xmath9 rejects the inputs @xmath523 and @xmath524 or @xmath9 accepts both inputs .    by lemma [ orakelwurzundpi ] , for any computation path @xmath525 of an @xmath521",
    ", there is a system @xmath526 of conditions of the form @xmath527 ( @xmath494 , @xmath528 ) that is satisfied by an input @xmath497 if and only if this path @xmath525 is traversed by @xmath9 on @xmath234 .",
    "moreover , every computation path of a machine @xmath529 in @xmath85 on an input of the form @xmath530 can be described by equations and inequalities of the form @xmath531 since , for any @xmath522 , @xmath524 and @xmath523 satisfy the same equations of the form @xmath532 , every @xmath533 halts on @xmath534 if and only if it halts on @xmath535 . moreover , since the computation path @xmath536 of @xmath400 on input @xmath523 is finite , the system @xmath537 contains only a finite number of inequalities of the form ( [ system1 ] ) and , thus , these inequalities can be described by some @xmath538 where @xmath539 and @xmath540 are finite sets . from this it follows that there is a real number @xmath541 with @xmath542 for all @xmath543 .",
    "moreover , we also have integers @xmath544 with @xmath545 for @xmath546 such that @xmath547 and , consequently , @xmath548 and @xmath549 hold for all @xmath543 .",
    "that means that @xmath550 and @xmath523 satisfy the same system @xmath551 and @xmath536 is traversed by @xmath400 for both inputs @xmath523 and @xmath550 .",
    "thus , we get the following corollaries .",
    "the problem @xmath552 is not decidable by a machine in @xmath553 .",
    "@xmath554 .",
    "our next goal is to show that @xmath555 is strictly easier than @xmath487 for any @xmath436 by using corollary [ zusammenh ] .",
    "[ wurzeltest ] let @xmath556 be a machine deciding a problem @xmath50 .",
    "then , there are @xmath522 such that @xmath9 rejects @xmath557 and @xmath524 or @xmath9 accepts the both inputs .    in analogy with the proof of lemma [ lll9 ] , we can show that for any finite system of conditions of the form ( [ system1 ] ) , ( [ system2 ] ) , and ( [ system3 ] ) , there are @xmath522 such that both @xmath557 and @xmath524 satisfy this system .",
    "moreover , we have @xmath558 and @xmath559 for any @xmath560 , @xmath473 , and @xmath561 . hence , for all @xmath473",
    ", questions of the form @xmath562 and @xmath563 are answered in the positive .    from this lemma",
    "we deduce that @xmath564 is not decidable by a machine in @xmath565 .    for any @xmath436 , @xmath566 .    moreover , the proof of lemma [ wurzeltest ] is also suitable for showing that @xmath564 is not decidable by machines using only @xmath567 as oracle .",
    "thus , by lemma [ mengenprimzahlen ] we get the following .    for any @xmath436 , @xmath568 and @xmath569 .    since these results are independent of the order of the prime numbers , we get incomparable turing degrees with respect to @xmath127 .",
    "for any @xmath570 where @xmath571 , we have @xmath572 and @xmath573 .",
    "moreover , for @xmath436 , we have @xmath574 and thus @xmath575 for any @xmath576 .",
    "therefore , for @xmath577 and @xmath578 , the problems @xmath579 and @xmath47 are incomparable by proposition [ uebertr ] and , since @xmath580 is easy to show , @xmath579 and @xmath581 as well as @xmath579 and @xmath133 are incomparable .    by corollary [ zusammenh ]",
    "we get the following relation .    for any @xmath488 , @xmath582",
    ".    consequently , we have the following .    let @xmath583 .",
    "we have defined a number of problems that are not decidable by additive bss machines without irrational numbers in order to give an initial characterization of the strong turing reduction by additive machines and some resulting turing degrees below the halting problem @xmath585 .",
    "[ halteprzusammenf ] @xmath586    in figure [ zusammenfassung ] we summarize the results of this paper .",
    "the arrow @xmath587 stands for the relation @xmath588 ( that means for @xmath589 ) and @xmath590 stands for the equivalence relation @xmath591 .",
    "the picture is complete up to transitivity .",
    "two problems are incomparable with respect to @xmath592 if there is no directed sequence of arrows from one problem to the other .",
    "i would like to thank the anonymous referees for their valuable comments and suggestions to improve the paper .",
    "moreover , my thanks go to the participants of the meeting  real computation and bss complexity  in greifswald for the discussion . in particular",
    ", i would like to thank paul grieger and arno pauly for very useful hints .",
    "12 aho , a.v .",
    "hopcroft , and j.d .",
    "ullman : \" the design and analysis of computer algorithms  ; addison - wesley ( 1974 ) . , f. cucker , m. shub , and s. smale :  complexity and real computation  ; springer - verlag ( 1998 ) .",
    ", m. shub , and s. smale : \" on a theory of computation and complexity over the real numbers : np - completeness , recursive functions and universal machines  ; bulletin of the amer .",
    "soc . 21 ( 1989 ) , 146 .      calvert , w. , k. kramer , and r. miller : `` noncomputable functions in the blum - shub - smale model ",
    "; special issue for the ' ' seventh international conference on computability and complexity in analysis ( cca 2010 ) \" ; logical methods in computer science 7 ( 2:15 ) ( 2011 ) , 120 .",
    "doi : 10.2168/lmcs-7(2:15)2011"
  ],
  "abstract_text": [
    "<S> for the additive real bss machines using only constants 0 and 1 and order tests we consider the corresponding turing reducibility and characterize some semi - decidable decision problems over the reals . in order to refine , step - by - step , a linear hierarchy of turing degrees with respect to this model , we define several halting problems for classes of additive machines with different abilities and construct further suitable decision problems . in the construction </S>",
    "<S> we use methods of the classical recursion theory as well as techniques for proving bounds resulting from algebraic properties . in this way </S>",
    "<S> we extend a known hierarchy of problems below the halting problem for the additive machines using only equality tests and we present a further subhierarchy of semi - decidable problems between the halting problems for the additive machines using only equality tests and using order tests , respectively . </S>"
  ]
}
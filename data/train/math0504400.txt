{
  "article_text": [
    "in a remarkable paper emily norwood studied the number of  compact codes \" @xcite .",
    "a compact code can be thought of as the sorted sequence of level numbers of the leaves of an extended binary tree .",
    "she provided a recurrence relation and table of the number of trees classified according to their height and their number of leaves .",
    "we will prove that if the outline of this table is considered as an increasing sequence of integers , then one of the  meta - fibonacci \" numbers arises , namely the one that satisfies the recurrence relation @xmath0 with @xmath1 and @xmath2 .",
    "sequences satisfying this recurrence , but with different linear functions for @xmath3 and @xmath4 have been investigated by several authors in recent years , but the general behavior of these sequences remains rather mysterious .",
    "perhaps the most well - behaved sequences in the family occur when @xmath5 and @xmath6 .",
    "for a given parameter @xmath7 , we will show that the sequences with @xmath8 are almost as well - behaved .",
    "in particular , we will show that they occur in a natural combinatorial setting , that they satisfy a recurrence relation of the form @xmath9 , and that they have a fairly simple ordinary generating function .",
    "the case of @xmath10 was studied before by tanny @xcite . the case of @xmath11",
    "was considered before by conolly @xcite .",
    "our attempt here is to simplify , unify , generalize , and combinatorialize their results .",
    "figure [ fig : f0 ] shows part of an infinite ordered binary tree @xmath12 .",
    "the forest of labelled trees in @xmath12 consists of a succession of complete binary trees of sizes @xmath13 .",
    "we refer to the subtree with @xmath14 nodes as _",
    "subtree @xmath15_. the nodes of these trees are labelled in preorder .",
    "now adjoin to @xmath12 an infinite path that connects the trees from left - to - right as shown in figure [ fig : f1 ] .",
    "we will think of this path as being parameterized by a value @xmath16 that gives the delay between the preorder counts of successive trees .",
    "alternatively , we can think of the nodes along the path as being super - nodes , where each super - node contains @xmath16 ordinary nodes .",
    "this infinite tree is denoted @xmath17 , with our initial tree @xmath18 . the trees @xmath19 , @xmath20 , @xmath21 are shown in figures [ fig : f0 ] , [ fig : f1 ] , [ fig : f2 ] , respectively .    .",
    "]    . ]    . ]    denote by @xmath22 the tree induced by the first @xmath23 nodes of the infinite tree @xmath17 . define @xmath24 to be the number of nodes at the bottom level in @xmath22 . also define @xmath25 to be 1 if the @xmath23-th node is a leaf and to be 0 if the @xmath23-th node is an internal node . finally , define @xmath26 to be the positions occupied by the 1 s in the @xmath27 sequences .",
    "table [ table : numbers ] gives the values of @xmath24 , @xmath25 , and @xmath26 for @xmath28 and @xmath29 .",
    "the values of four of these table entries appear in oeis , namely @xmath30 , @xmath31 , @xmath32 , and @xmath33 . for fixed @xmath16",
    "these numbers are related as follows .",
    "@xmath34    .the values of @xmath24 and @xmath25 for @xmath28 and @xmath29 . [ cols=\"^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^\",options=\"header \" , ]     the @xmath24 numbers satisfy the meta - fibonacci recurrence relation stated in theorem 1 below .    if @xmath35 , then @xmath36 . if @xmath37 then @xmath38 . if @xmath39 , then @xmath40    first observe that if all the leaves at the last level are removed from @xmath17 , then the same structure remains , except that the leftmost super - node needs to be made into an ordinary node ( by subtracting @xmath41 )",
    ". we will refer to this process as _ chopping _ the last level .",
    "we split the proof into two broad cases depending on whether @xmath23 is a leaf or not ; i.e. , whether @xmath42 ( case 1 ) or @xmath43 ( case 2 ) .    * case 1a : * if @xmath44 then @xmath23 and @xmath45 are sibling leaves and @xmath24 is even .",
    "for example , node 28 in figure [ fig : f2 ] . the trees @xmath46 and @xmath47 have the same number of nodes , @xmath48 , at the penultimate level as does @xmath22 .",
    "thus by chopping the last level from @xmath46 and @xmath47 , we see that @xmath49 .    * case 1b : * if @xmath42 and @xmath50 then @xmath23 is a left child of its parent @xmath45 and @xmath24 is odd . for example ,",
    "node 27 in figure [ fig : f2 ] .",
    "the tree @xmath46 has @xmath51 nodes at the penultimate level and the tree @xmath47 has @xmath52 nodes at the penultimate level .",
    "thus by chopping the last level from @xmath46 and @xmath47 , we see that @xmath53 and @xmath54 .",
    "* case 2a : * if @xmath43 and @xmath55 , then @xmath24 is even .",
    "for example , node 26 or node 29 in figure [ fig : f2 ] .",
    "the trees @xmath46 and @xmath47 have the same number of nodes , @xmath48 , at the penultimate level .",
    "node @xmath23 may have been at the penultimate level in @xmath22 , but it is removed in @xmath46 and @xmath47 .",
    "thus by chopping the last level from @xmath46 and @xmath47 , we see that @xmath49 .",
    "* case 2b : * if @xmath43 and @xmath50 , then @xmath24 is even .",
    "for example , node 22 or node 30 in figure [ fig : f2 ] .",
    "the trees @xmath46 and @xmath47 have the same number of nodes , @xmath48 , at the penultimate level .",
    "node @xmath23 may have been at the penultimate level in @xmath22 , but it is removed in @xmath46 and @xmath47 .",
    "thus by chopping the last level from @xmath46 and @xmath47 , we see that @xmath49 .",
    "define @xmath56 to be the infinite string @xmath57 .",
    "let @xmath58 be the finite string defined by @xmath59 and @xmath60 .",
    "let @xmath61 be the finite string defined by @xmath62 and @xmath63 .",
    "@xmath64    [ lemma : einfty ]    the first equality in ( [ eq : d0 ] ) is implied immediately by the definition of @xmath19 ; i.e. , in @xmath65 the 0 is from the root ( which is listed first in preorder ) and @xmath66 is from the left and right subtrees . by the definitions , @xmath67 , where the superscript @xmath68 denotes reversal of the string .",
    "thus @xmath69 since @xmath61 is a prefix of @xmath70 by definition , the expression @xmath71 is well - defined .",
    "hence @xmath72 .    the sequence @xmath61 has been considered before by allouche , betrema , and shallit @xcite in a different context .",
    "it is interesting to note that the sequence @xmath73 is the limit of the morphism @xmath74 and @xmath75 ( also discussed in @xcite , pg .",
    "the following corollary is equation ( 6 ; pg .",
    "132 ) in @xcite .",
    "the numbers @xmath76 satisfy the following recurrence relation for @xmath77 .",
    "@xmath78    since @xmath79 and @xmath80 , the value of @xmath81 for @xmath82 .",
    "since we defined @xmath83 it also holds when @xmath84 .",
    "the number of 1 s in @xmath85 is @xmath86 .",
    "thus @xmath87    @xmath88 [ lemma : s0recurrence ]    the labels on the nodes in subtree @xmath15 in @xmath17 are exactly the values of @xmath23 lying in the first range above .",
    "this is true since there are @xmath89 nodes in the subtrees to the left of subtree @xmath15 , and @xmath90 super - nodes .",
    "thus the lowest label of a node in subtree @xmath15 is @xmath91 , and the highest label is @xmath92 .",
    "the difference between the labels on corresponding nodes in @xmath17 and @xmath19 is @xmath90 if the nodes are in subtree @xmath15 ; thus @xmath93 .    in the second range",
    "the nodes are super - nodes lying between subtrees @xmath94 and @xmath15 and therefore having @xmath95 leaves in their left - subtree .",
    "@xmath96    taking @xmath97 in lemma [ lemma : s0recurrence ] we obtain @xmath98 in the range @xmath99 . in that range @xmath100 .",
    "we need only check what happens when @xmath101 . by the lemma @xmath102 .",
    "however , in @xmath19 the node @xmath103 is the rightmost node in subtree @xmath15 and thus @xmath104 .",
    "the case @xmath97 of the theorem below is roughly equivalent to equations ( 2.2 ) and ( 2.3 ) in tanny @xcite .    if @xmath105 , then @xmath106 if @xmath105 , then @xmath107 if @xmath108 , then @xmath109 .",
    "let the node @xmath23 be in the subtree @xmath15 or the super - node , call it @xmath110 , that is the parent of subtree @xmath15 .",
    "let @xmath111 be the root of that subtree and denote the left and right subtrees of @xmath111 by @xmath112 and @xmath113 .",
    "we will prove the following recurrence relation .",
    "@xmath114 let @xmath115 be the subtree whose root is the right child of the left child of @xmath110 .",
    "in the first two cases above we are mappping the subtree @xmath112 or @xmath113 to @xmath115 , which has the same structure . in the case of @xmath113",
    "we skip over @xmath95 leaves and @xmath116 nodes . in the case of @xmath112",
    "we skip over @xmath117 leaves and @xmath118 nodes . clearly , if @xmath119 or @xmath120 , then @xmath109 .    from the proof of the previous lemma we know that @xmath121 and thus that the root of @xmath113 is @xmath122 and the root of @xmath112 is @xmath123 .",
    "thus we know the exact range of @xmath23 in each of the subtrees and the theorem statement is another way of writing ( [ eq : treecases ] ) .",
    "let @xmath124 be the transition sequence of the binary reflected gray code ; this sequence is also known as the  ruler function \" ( a001511 ) .",
    "if the alternating 0 s are removed from the sequence @xmath125 then the ruler function is again obtained .",
    "this implies that the generating function of the ruler function is @xmath126    @xmath127    [ lemma : dd0 ]    the ruler sequence is @xmath128 where @xmath129 and @xmath130 .",
    "since @xmath131 , we have @xmath132 for @xmath133 and @xmath134",
    ". we will show that @xmath135 which will finish the proof of the first equality since @xmath72 . by induction @xmath136 as required .",
    "the second equality follows from the well - known property of the ruler sequence that @xmath137 .",
    "we can extend some of the previous results about @xmath138 to @xmath56 .",
    "for proposition @xmath139 the notation @xmath140 means 1 if @xmath139 is true and 0 if @xmath139 is false .",
    "let @xmath141 .",
    "@xmath142 @xmath143 [ lemma : druler ]    the proof is similar to those used in lemmata [ lemma : dd0 ] and [ lemma : einfty ] and is omitted .",
    "since the @xmath26 numbers give the positions of the 1 s in @xmath56 the following corollary is true .    for all @xmath144 , @xmath145 [ corr : pdiff ]",
    "if @xmath146 is a string then we use @xmath147 to denote the ordinary generating function @xmath148 .",
    "let @xmath149 and @xmath150 denote the ordinary generating functions of the @xmath24 and @xmath25 sequences , respectively . directly from the definitions we get the equation shown below : @xmath151 since @xmath149 is determined by @xmath150 and @xmath150 is easier to treat , we first concentrate our attention on @xmath150 .",
    "@xmath152 @xmath153    from the recurrence relation @xmath59 and @xmath60 we obtain @xmath154 and @xmath155 similarly @xmath156 and @xmath157 .",
    "the result now follows by induction .",
    "@xmath158 [ corr : d0(z ) ]    follows at once from the the preceding lemma and the equation @xmath72 from lemma [ lemma : einfty ] .    the generating function @xmath150 is equal to @xmath159(1+z^{s+2 ^ 2}[1+z^{2 ^ 2 - 1}](1+z^{s+2 ^",
    "3}[1+z^{2 ^ 3 - 1}](1 +   \\cdots \\label{eq : ds(z)}\\ ] ]    we need to translate the string @xmath160 from lemma [ lemma : druler ] into its generating function .",
    "since @xmath161 we can write @xmath162 let @xmath163 , so that @xmath164 .",
    "we can rewrite ( [ eq : ds(z ) ] ) as @xmath165 the coefficient of @xmath166 is @xmath167 raised to the power @xmath168 by the sum given in ( [ eq : dslength ] ) .",
    "if @xmath169 , then @xmath170 [ thm : dsz ]    call the expression on the right @xmath171 and let @xmath172 .",
    "multiply @xmath171 by @xmath173 , expand , and collect terms by increasing powers of @xmath110 to obtain    @xmath174    note that this last expression is equal to @xmath150 by ( [ eq : dsz ] ) .",
    "jon perry @xcite has observed experimentally that @xmath175 counts the number of compositions of @xmath23 such that , for some @xmath176 , @xmath177 he uses the notation @xmath178+[1,4]+[1,8]+ \\cdots $ ] to denote the set of such compositions and notes that many other combinatorial objects are in one - to - one correspondence with similar composition rules @xcite .",
    "we call these rules _",
    "specifications_.    for @xmath169 ,",
    "the number of compositions of @xmath23 with specification @xmath179 + [ s,2+s-1 ] + [ s,4+s-1 ] + [ s,8+s-1 ] + \\cdots\\ ] ] is @xmath24 .",
    "this is clear from the generating function for @xmath149 given in theorem [ thm : dsz ] once @xmath180 is written as @xmath181 .",
    "as an example , for @xmath182 and @xmath183 , the specification is @xmath184 + [ 2,3 ] + [ 2,5 ] + [ 2,9 ] + \\cdots$ ] and the @xmath185 compositions are @xmath186    to finish this section we also develop a generating function for the @xmath26 sequences .    for all @xmath7 , @xmath187    let @xmath188 denote the ordinary generating function of the numbers @xmath26",
    ". then @xmath189 by corollary [ corr : pdiff ] this expression is equal to @xmath190 where the equality follows from ( [ eq : rulergf ] ) .",
    "solving for @xmath188 finishes the proof .",
    "a binary compact code can be represented by an extended binary tree .",
    "we use the term extended binary tree in the sense of knuth @xcite : every node has either no children ( a leaf ) or two children ( an internal node ) . since no other types of codes are considered here , we shorten  binary compact code \" to  code \" .",
    "a code of order @xmath23 can be represented by a tree with @xmath23 leaves in which the level numbers @xmath191 of the leaves are non - increasing .",
    "we will identify a compact binary code by the sequence of level numbers @xmath192 .",
    "for example , the codes for @xmath193 are @xmath194 , @xmath195 , and @xmath196 .",
    "every code of order @xmath23 corresponds to a unique partition of 1 into the @xmath23 powers of @xmath197 given by @xmath198 .",
    "thus @xmath194 corresponds to the partition @xmath199 .",
    "the height @xmath15 of a tree is the length of the longest path from the root to any leaf . for a given height @xmath15 and integer @xmath23 ,",
    "we consider here the problem of finding the maximum number of leaves at the largest level @xmath15 among all trees with @xmath23 leaves , which we denote by @xmath200 .",
    "clearly @xmath201 if @xmath202 . a tree @xmath115 with @xmath23 vertices and height @xmath15 that has @xmath200 leaf pairs at the largest level",
    "is said to be an _",
    "optimal tree_. we will show that our first two meta - fibonacci sequences can be realized by certain families of optimal trees .",
    "this will be done via a `` greedy '' algorithm for constructing a sequence of optimal tree / codes for successive values of @xmath23 and a fixed value @xmath15 .",
    "we denote these trees @xmath203 for natural numbers @xmath23 and @xmath15 and call them _",
    "greedy trees_. here is the greedy algorithm for constructing @xmath203 .    * if @xmath204 , then there is only one tree / code , namely @xmath205 . *",
    "given @xmath203 the code @xmath203 is obtained by replacing the leftmost level @xmath206 for which @xmath207 by the two levels @xmath208 .",
    "we will also consider the trees @xmath209 .",
    "they may be constructed greedily as follows .    *",
    "if @xmath210 , then the tree is a leaf . * if @xmath101 , then @xmath211 is a complete binary tree ( all leaves are at level @xmath15 ) .",
    "tree @xmath212 is the tree of height @xmath213 whose left subtree is @xmath211 and whose right subtree is a single leaf . *",
    "if @xmath23 is not a power of 2 , then expand the leftmost leaf which is not at the largest level , as described above .",
    "it is also interesting to consider the inverse process of obtaining @xmath211 from @xmath212 .",
    "the inverse rule is very simple : replace the rightmost equal pair @xmath214 by @xmath215 .",
    "we could also have defined a code by the number of internal nodes at each level in the corresponding tree .",
    "given a code of height @xmath15 , let @xmath216 $ ] be the sequence in which @xmath217 is the number of internal nodes at level @xmath15 . for our example codes given earlier , the corresponding level counts are @xmath218 , [ 1,2,1 ] , [ 1,1,1,1]$ ] .",
    "these counts clearly must satisfy @xmath219 @xmath220 subject to these two constraints @xmath200 is the largest value that @xmath221 can attain .",
    "let @xmath176 be the largest level for which @xmath222 .",
    "the greedy algorithm simply replaces @xmath223 by @xmath224 .",
    "let @xmath225 be the number of vertices at each level for the tree @xmath203 and suppose that @xmath226 are the vertex numbers by level for any other tree @xmath115 with @xmath23 leaves and height @xmath15 .",
    "for any @xmath227 , @xmath228    for any @xmath15 , the result is true for @xmath229 since there is only one tree with @xmath213 leaves and height @xmath15 .",
    "similarly it is true for @xmath101 .",
    "assume the result is true for all trees with @xmath23 ( for some @xmath230 ) leaves and height @xmath15 .",
    "let @xmath231 be the vertex numbers by level for @xmath232 .",
    "note that for some @xmath233 , we have @xmath234 and @xmath235 for all @xmath236 . by the greedy algorithm @xmath237 , but @xmath222 .",
    "let @xmath238 be any tree with @xmath239 leaves and height @xmath15 and suppose that @xmath115 is the tree with @xmath23 leaves and height @xmath15 formed by removing from @xmath238 the rightmost pair of leaves at level @xmath15 .",
    "suppose that @xmath240 are the vertex numbers by level for @xmath115 .",
    "by induction , we assume that @xmath241 for all @xmath227 . let @xmath242 be the vertex numbers by level for for @xmath238 .",
    "note that @xmath243 and @xmath244 for all @xmath245 . for all @xmath246",
    ", we see that @xmath247 .",
    "suppose @xmath248 for some @xmath249 .",
    "let @xmath250 be the smallest index such that @xmath251 .",
    "since @xmath252 we have @xmath253 . since @xmath254 was chosen to be smallest @xmath255 . putting these inequalities together we have @xmath256 which is a contradiction .",
    "thus @xmath247 for all @xmath257 and the result is true by induction .",
    "the greedy algorithm produces optimal trees .",
    "let @xmath258 be the number of internal nodes in some code with @xmath23 leaves and height @xmath15 .",
    "the previous lemma tells us that @xmath259 , where @xmath221 is the number of internal nodes at level @xmath94 in @xmath203 .",
    "the largest number of 1 s in a partition of @xmath260 into powers of 2 consisting of @xmath23 parts is @xmath200 .",
    "multiply the partition of 1 described above by @xmath260 to obtain a partition of @xmath260 .    define @xmath261 to be the maximum number of leaf pairs at the largest level , taken over all binary trees with @xmath23 leaves .",
    "in other words , @xmath262 .    for any @xmath23 , we have @xmath263 .",
    "for any @xmath264 construct a optimal tree of height @xmath176 with @xmath23 leaves using the greedy algorithm .",
    "the tree @xmath265 has a subtree attached to an interior vertex at level @xmath266 which is ismorphic to @xmath267 .",
    "clearly @xmath268 and thus @xmath269 .",
    "the tree @xmath270 from section 2 which defines the sequence @xmath175 has @xmath239 leaves ( since it has @xmath23 interior vertices ) and is equal to the greedy tree for @xmath271 .",
    "only the order in which the vertices are added is different since we add the vertices from the bottom in constructing @xmath270 .",
    "similarly define @xmath272 by the equation @xmath273 for @xmath274 .",
    "the sequence @xmath275 is well - defined and @xmath276 .    for a given @xmath23 , let @xmath15 be the smallest height such that @xmath277 . for any larger height @xmath278 construct a optimal tree of height @xmath176 with @xmath279 leaves using the greedy algorithm .",
    "the tree @xmath280 has a subtree attached to an interior vertex at level @xmath266 which is equal to @xmath281 . thus @xmath282 .",
    "if @xmath15 is the height of the @xmath23th subtree @xmath211 which defines the sequence @xmath283 , we see inductively that @xmath211 has @xmath284 internal nodes and thus @xmath285 leaves .",
    "as before we see that @xmath286 is equal to the greedy tree for @xmath287 .",
    "thus @xmath211 has @xmath272 leaf pairs at the largest level @xmath15 , and we see that @xmath276 .",
    "thus we have shown that the first 2 meta - fibonacci sequences in our family of sequences have concrete realizations as the solutions of optimization problems involving binary compact codes / trees .",
    "we wish to thank don knuth , jon perry , jeff shallit , and herb wilf for helpful comments related to this research .",
    "m. khosravifard , m. esmaeili , h. saidi , and t.a .",
    "gulliver , _ a tree based algorithm for generating all possible binary compact codes with @xmath288 codewords _",
    ", ieice transactions on fundamentals of electronics , communications and computer sciences , vol .",
    "e86-a ( 2003 ) 25102516 ."
  ],
  "abstract_text": [
    "<S> we look at a family of meta - fibonacci sequences which arise in studying the number of leaves at the largest level in certain infinite sequences of binary trees , restricted compositions of an integer , and binary compact codes . for this family of meta - fibonacci sequences and two families of related sequences </S>",
    "<S> we derive ordinary generating functions and recurrence relations . </S>",
    "<S> included in these families of sequences are several well - known sequences in the online encyclopedia of integer sequences ( oeis ) . </S>"
  ]
}
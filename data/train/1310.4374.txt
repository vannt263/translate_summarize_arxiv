{
  "article_text": [
    "many problems in physics , chemistry and materials science lead to a free - space finite `` particle '' sum of @xmath0 functions , @xmath1 , centered at locations @xmath2 @xmath3 , where @xmath4 is a rectangular box @xmath5 centered at the origin of the reference frame @xmath6 for evaluation at @xmath0 locations @xmath7 , this sum has a quadratic cost",
    ". there are efficient and arbitrarily accurate approximation algorithms for this summation ( e.g. , the fast multipole method , fmm @xcite ) .",
    "often , an extension to this sum for @xmath8 must be computed in which periodic boundary conditions are enforced on box boundaries , resulting in the potential @xmath9 .",
    "this can be evaluated by replacing the sum ( [ r2 ] ) with the infinite sum @xmath10 for some functions @xmath1 , such as those representing the field of an electrostatic charge , this infinite sum may be divergent or conditionally convergent . in this case certain side conditions may be needed to compute a physically relevant sum .",
    "usually such infinite sums are performed using fourier - transform based ewald summation @xcite , which is accelerated via the fft .",
    "this method is described briefly in appendix d. accounting for all pairwise interactions the method can achieve @xmath11 complexity , for @xmath0 particles in the box @xmath12 which is periodically replicated over the full space @xcite . because of the technique used for grid - to - particle interpolation these methods are usually low - order .",
    "a high - order accurate gaussian interpolation based ewald summation algorithm was recently presented in @xcite .",
    "another scalable algorithm , which can be employed for computation of periodic sums ( [ 2 ] ) is the fmm .",
    "a criticism of fmm algorithms has been that they are relatively harder to implement , combining the need for efficient data structures , careful analysis and computation of special functions , and mixed memory access patterns .",
    "nevertheless , several open - source and commercial packages implementing the fmm for standard kernels in free space have become available .",
    "the fmm is used less often in practice to compute periodic sums , even though several methods to handle periodic boundary conditions using extensions to the basic fmm have been proposed , starting from the first publication of the algorithm @xcite . some authors ( e.g. @xcite )",
    "claim that the overhead in the fmm for computation of periodic sums can be negligibly small .",
    "this is true under a few conditions , but not in others .",
    "this is discussed in detail in a section entitled discussion .",
    "analysis of the fmm and its plane - wave variant , which is better - suited tor large @xmath0 and parallel architectures than the smooth particle mesh ewald algorithm , is presented in @xcite .",
    "however , all these methods require constructing a new and different algorithm  a periodic variant , for which optimized implementations are not in general available . furthermore , some of these algorithms may not extend easily to non - cubic domains .",
    "it can be mentioned in this context that any fmm has a so - called break - even point , @xmath13 , such that at @xmath14 brute force summation ( [ r2 ] ) is faster than the fmm computation .",
    "the value of @xmath13 depends on the method used , implementation , required accuracy ( the fmm is an approximate algorithm ) , and hardware .",
    "it may vary in a range @xmath15 , which is of the order of @xmath0 for some practical problems ( e.g. for some molecular dynamics simulations ) . in such cases ,",
    "the use of periodic fmm just for the purpose of computing of infinite sums ( [ 2 ] ) even if the overhead for periodization will be zero is questionable if some other periodization method , which can use finite brute force summation algorithms is available .",
    "special purpose hardware such as graphics processors or heterogeneous cpu / gpu architectures also allow the fast computation of finite sums , either via brute force summation @xcite , or via the mapping of the fmm onto these architectures @xcite .",
    "yokota et al . @xcite",
    "favorably compare a large scale fmm - based vortex element computations with a direct numerical simulation via periodic pseudospectral methods .",
    "their simulations could have been faster and more accurate ",
    "the fmm was executed on a finite system composed of 3@xmath16 images , which while not being truly periodic also makes using the fmm significantly more expensive .",
    "the problem this paper seeks to address is : _ given a black - box fast summation algorithm ( fsa ) for computing finite sums with a given kernel _",
    "@xmath17 that is available to the user , _ is it possible to compute the same sum with periodic boundary conditions without any modification of the fsa ? _",
    "we provide a positive answer to this question .",
    "our algorithm has the same cost as the fsa , and can be computed to any user specified accuracy @xmath18 , and does not use the fft .",
    "the basic idea of the method is to divide the sum ( [ 2 ] ) in to two parts .",
    "one part computes a finite sum of particles that lie within a sphere centered at the box .",
    "this is computed using the available fsa .",
    "the other part , is an approximation of the field within the box due to all particles outside the sphere .",
    "the field due to these sources can be represented within the box in terms of local expansions .",
    "such local expansions have also been proposed in other attempts to extend the fmm to periodic systems , but are there derived by explicit translation of multipole expansions from outside the box of interest into it . in our method , we propose to determine the coefficients directly from the periodicity conditions on the potential , which results in solution of a relatively small overdetermined function - fitting problem , easily solved via standard algorithms ",
    "e.g. , rank - revealing @xmath19 decomposition .",
    "this step is in the spirit of the `` kernel - independent '' fmm methods @xcite . in this context",
    "we should mention ref .",
    "even though it is dedicated to the helmholtz equation in two dimensions , a method for `` periodization '' of free - space solutions similar in spirit to that presented here was proposed and tested . moreover",
    ", the cited paper contains an additional `` periodization '' method based on boundary integrals , which can be tried for different kernels and space dimensionality ( also see @xcite , where periodization along one dimension is performed ) .",
    "we present this `` periodization '' approach in a general setting , but focus computational examples on the evaluation of the electrostatic potential @xmath20 and its gradient @xmath21 at @xmath22 evaluation points @xmath23 @xmath24 due to @xmath0 charged particles of charge @xmath25 placed in @xmath26 , and subject to periodic boundary conditions on @xmath27 .",
    "this reduces to computing the infinite , conditionally convergent , sum ( [ r2 ] ) , with kernel function @xmath1 : @xmath28 and the net charge in each box being zero . of course",
    ", in practical applications , such as in molecular dynamics , there will be other computations beyond the sum necessary to stabilize the overall computations .",
    "this paper does not consider these , focusing on the electrostatic sum at a single time step .",
    "the periodization method could be easily applied to other kernels for which a `` fast summation algorithm '' ( fsa ) is available .",
    "as long as the periodic sum makes sense , and the kernel @xmath1 can be expanded over some local basis , the proposed method should work .",
    "conditions similar to the charge neutrality in ( [ 1 ] ) may be necessary .",
    "the proposed method can also be applied for 2d problems , though we present it in 3d .",
    "also , the periodic extension of the computational domain ( box ) may be performed only along one or two coordinates , for which ewald summation may have problems .",
    "the box on which the periodic sum is to be computed is denoted @xmath12 .",
    "let @xmath29 be a ball of radius @xmath30 centered at the center of the box @xmath4 and containing it .",
    "let @xmath31 be another ball with the same center and radius @xmath32 ( see fig .",
    "[ fig1 ] ) .",
    "we denote as @xmath33 a finite region which includes the ball @xmath34 ( the minimal @xmath35 is the ball @xmath34 ) .",
    "we decompose the infinite sum as @xmath36 where @xmath37 is to be computed using the fsa ( assumed to be the fmm in the sequel ) to the specified accuracy @xmath38 while @xmath39 is computed by some other method at least to the same accuracy .",
    "the sources in the infinite domain are indexed as @xmath40 , @xmath41 for appropriate vectors @xmath42 @xmath43 ( see eq .",
    "( [ 2 ] ) ) .    to apply the fmm to the kernel function @xmath44 it should be possible to approximate it via a convergent series over a set of local basis functions @xmath45 .",
    "this means that for any source point @xmath46 we have the factorization @xmath47 where @xmath48 is the number of terms retained in the infinite series , @xmath49 are the expansion coefficients , and @xmath50 is the truncation error depending on @xmath51 and @xmath52 .",
    "the basis functions can be some standard choices , or , as in the kernel independent fmm @xcite , can be taken to be a collection of kernel functions , centered outside the region of approximation @xmath53 where @xmath54 are a collection of sources located outside ball @xmath31 .",
    "this method has the flavor of `` equivalent - source '' methods .",
    "since the function @xmath1 depends only on the distance between its argument , it is a `` radial basis function '' , or rbf @xcite . while any approximation scheme may be used , the use of kernel @xmath1 as rbf is dictated by the fact that this kernel satisfies the underlying equation ( e.g. the laplace equation ) , so the approximation to the field via the sum of such rbfs also satisfies the equation ( if it is linear and space invariant ) . substituting eq .",
    "( [ 4 ] ) into the expression for @xmath55 from eq .",
    "( [ 3 ] ) , we obtain @xmath56 a necessary condition for our method is convergence of both infinite sums @xmath57 and @xmath58 . the problem of computation of @xmath59 has been reduced to that of determination of @xmath48 fitting coefficients @xmath60 . these can be determined via least - squares collocation as follows .",
    "consider a set of @xmath61 check points , @xmath62 .",
    "a point @xmath63 has two properties : first,@xmath64 , and , second , that there exists @xmath65 such that point @xmath66 ( see fig . [ fig1 ] ) .",
    "this means that @xmath67 in terms of decomposition ( [ 3 ] ) and representation of the far field ( [ 6 ] ) this system can be rewritten as @xmath68 where @xmath69 we have @xmath70 linear equations in @xmath48 unknowns @xmath71 .",
    "as we are not constrained with the size of the set of the set points , @xmath61 can be selected to provide a substantial oversampling , so minimization of functional @xmath72 should take care about the `` noise '' introduced into the approximation due to @xmath73 .",
    "the least square minimization procedure is well known and formally it results in solution @xmath74 where @xmath75 and @xmath76 are organized as column vectors of size @xmath48 and @xmath70 , respectively and @xmath77 is the @xmath78 matrix , which is the pseudoinverse of @xmath79 , and superscript @xmath80 denotes transposition .",
    "note that this notation is formal , and is not the way the least - squares problem is solved in practice .",
    "rather a stable algorithm such as the rank - revealing qr decomposition @xcite is used , while it is strongly recommended to precompute and store matrix decompositions in the `` set '' part of the algorithm to reduce the cost of the `` get '' part .",
    "the known coefficients @xmath81 allow computation of @xmath55 and can be added to the @xmath82 obtained via the fsa . however , some technical details need to be specified . in the next section",
    "we provide analysis and details for the important case of the coulombic kernel ( [ 2 ] ) .",
    "a similar collocation of kernel based rbf expansions at a relatively small amount of the check points is also used in the `` kernel independent '' fmm @xcite with basis functions ( [ 5 ] ) . there , the collocation is at the level of the boxes in the fmm octree data structure , and fitting takes the place of expansions and translations .",
    "here , we collocate the differences of the overall solution at a set of check points @xmath83 and at their periodic images @xmath84 , at the level of the overall domain to determine the expansion coefficients for @xmath85 .      selection of an optimal set of check points @xmath86 is not trivial .",
    "a good check point set should yield a well conditioned solution , and sample the solution well spatially .",
    "a simple way which does not yield such a well conditioned set is to select the points @xmath87 on the boundary of box @xmath4 .",
    "this is because the corresponding periodic point @xmath88 will then also be located on the box boundary on the face opposite to @xmath89 . in this case",
    "the distances from the box center to @xmath89 and to @xmath90 will be the same , so both points will be located on a sphere of radius @xmath91 .",
    "if the basis is based on spherical functions , then several of these will take the same value for symmetrical points on the sphere , and the fitting equations may be rank deficient .    to avoid this degeneracy ,",
    "the set @xmath92 was chosen from points on the surface of ball @xmath93 .",
    "three distributions were tried ( see fig .",
    "( [ checkpoints ] ) : i ) random uniformly distributed points , ii ) gaussian nodes ( zeros of the legendre polynomial along @xmath94 , @xmath95 , see @xcite ) and equispaced with respect to @xmath96 ) , and , iii ) the almost uniform distribution of points over the sphere obtained by solving the so - called thomson problem of the equilibrium position of mutually repelling electrons constrained to be on the surface of the sphere @xcite , see @xcite . methods",
    "ii ) and iii ) show better results than the random distribution , as shown in section 3 .",
    "further , we fond that using the thomson points for the interpolation in eq . [ 5 ] provides good accuracy .",
    "the algorithm has two parts . in a first preliminary set - up step ,",
    "denoted `` set '' , the check points are determined , and the matrix decompositions necessary to compute the least squares fit with the matrix @xmath79 in eq .",
    "( [ 10 ] ) are precomputed . in simulations",
    "where the domain @xmath12 is fixed and the particles move , as in molecular dynamics , this matrix does not change , and the cost of the `` set '' step is amortized over the entire simulation .",
    "the second part of the algorithm , denoted `` get , '' computes the right hand side and solution of the fitting equations via an inexpensive step such as backsubstitution .",
    "the accuracy depends on the choice of basis functions , and the parameters @xmath48,@xmath70 , and @xmath97 . in the next section we provide",
    "both a theoretical and an empirical study for the case of the coulombic kernel ( green s function of laplace s equation ) .      1 .   set the circumsphere radius @xmath98 .",
    "based on the required accuracy determine @xmath99 , @xmath48 , and @xmath100 .",
    "2 .   generate @xmath70 check points distributed over the surface of the ball @xmath101 , @xmath102 , @xmath103 denote this point set as @xmath104 .",
    "3 .   for each point",
    "@xmath105 @xmath106 find a point @xmath107 , such that two cartesian coordinates of @xmath84 are the same as those of the respective coordinates of @xmath89 , while the other coordinate , @xmath108 is shifted by @xmath109 with respect to @xmath110 .",
    "denote @xmath111 @xmath112 4 .",
    "form the @xmath113 fitting matrix @xmath114 , @xmath115 , @xmath106 @xmath116 where @xmath117 are the basis functions at the checkpoints .",
    "compute matrix decomposition of @xmath79 necessary to solve the least squares problem .",
    "( optional ) precompute other parameters which do not depend on the source distribution .",
    "if the summation needs certain auxiliary computations to ensure convergence , do those steps . for the coulomb kernels this may involve computation of the integrals of the basis functions over the box @xmath4 .      1 .   periodically extend the source box @xmath12 to cover the ball @xmath118 of radius @xmath97 .",
    "the newly generated sources and charges will have coordinates @xmath119 for the values of the periodization vector @xmath120 from set @xmath43 ( see eq .",
    "( [ 2 ] ) ) and charges @xmath121 denote the set of all sources as @xmath122 .",
    "these constitute @xmath123 .",
    "2 .   find the set of @xmath13 sources @xmath124 by removing sources from the set @xmath125 that are outside the sphere @xmath34 , and satisfy @xmath126 @xmath127 3 .",
    "using the fsa compute @xmath82 for a given set of evaluation points @xmath128 residing in @xmath129 and belonging to sets @xmath104 and @xmath111 , i.e. for points from the set @xmath130 if gradient computations are needed , compute @xmath131 at @xmath132 4 .",
    "form the right hand side of the periodization equation @xmath133 @xmath134 @xmath135 , @xmath136 organized in a column vector .",
    "5 .   using the matrix decompositions in the `` set '' step solve the fitting equations for the @xmath48 expansion coefficients @xmath137 this step can formally be written as @xmath138 @xmath139 6 .",
    "( optional ) compute the constant shift or other modification of the far field potential , if needed .",
    "evaluate @xmath140 , and if gradient computation is needed , @xmath141 , at @xmath142 .",
    "get the periodized solution of the problem , @xmath143 @xmath144 and if gradient computation is needed , @xmath145 @xmath146 @xmath147 @xmath142 .    in molecular dynamics and other n - body simulations",
    "the source and evaluation points are the same , so @xmath148    in step 5 for the laplacian kernel and spherical basis functions @xmath149 . in this case",
    "optional step 6 provides @xmath150 ( see eqs ( [ pfx1])-([pfx4 ] ) ) .",
    "otherwise set @xmath151 .",
    "step 2 reduces @xmath152 to the ball @xmath34 , which is not necessary , but is efficient .",
    "evaluation of the kernel at a single point requires @xmath153 operations .",
    "so , @xmath154 operations are needed to evaluate all basis functions .",
    "the complexity , @xmath155 , is also achieved when basis functions at a point can be computed recursively ( as for the spherical basis functions ) . with @xmath156",
    "we can estimate the complexity of the `` set '' part of the algorithm as @xmath157 = o\\left ( p^{3}\\right ) ,   \\label{c1}\\ ] ] where we assumed that computation of the matrix decomposition ( e.g. , via qr ) @xmath158 operations , as @xmath159 .",
    "the term in the square brackets is the cost of the optional step for the laplace kernel and spherical basis functions , using the method presented in appendix b.    for the `` get '' part of the algorithm , assuming that @xmath160 and @xmath161 we have @xmath162 + o\\left ( pn\\right ) + o(n)=o\\left ( pn\\right ) + c^{(fsa ) } , \\label{c2}\\ ] ] where @xmath163 is the cost of the finite summation algorithm and the cost of the optional step of the algorithm is put in the square brackets ( see appendix c for this step for the laplacian kernel ) .",
    "this cost for the brute force summation is @xmath164 , while if the fmm is used as the fsa it can be estimated as follows .    in the fmm ,",
    "generation of the data structure for @xmath165 points is @xmath166 which for deep trees , @xmath167 , results in formal @xmath11 complexity .",
    "however , in practice the depth of the trees in three dimensions is relatively small ( e.g. @xmath168 ) for sizes @xmath169 and even at larger @xmath170 this cost is much smaller than the cost of the run part of the fmm .",
    "moreover , the translation time in the fmm usually dominates over the time of generation and evaluation of expansions of complexity @xmath171 , where @xmath172 is the size of the expansions in the fmm . for optimal @xmath170 the fmm using @xmath173 methods for translations in three dimensions scale as @xmath174 or @xmath175 , where @xmath176 for well studied kernels such as those for the laplace and helmholtz equations ( in the latter case additional @xmath177 , @xmath178 factors appear in the algorithm complexity , which we drop in the present estimate ) .",
    "optimized kernel independent fmm has complexity @xmath171 .",
    "this can be summarized as @xmath179    note that for the laplacian kernel in three dimensions truncation numbers @xmath180 and @xmath181 should increase as @xmath182 for a fixed absolute @xmath183-norm error ( see error bounds below ) , while they are constant for the relative @xmath184-norm errors .",
    "a fundamental feature of the laplace equation that any constant is a solution .",
    "thus , one of the basis functions is a constant ( say , @xmath185 ) .",
    "moreover , any constant satisfies periodic boundary conditions , and so this part of the solution can not be determined , as @xmath186 belongs to the null - space of the laplacian operator . system ( [ 8 ] ) also shows that @xmath187 for any @xmath188 , so for any @xmath100 the rank of matrix @xmath79 can not exceed @xmath189 , in which case the coefficient @xmath190 can be arbitrary . to remove this rank deficiency of @xmath79 we can simply remove the constant basis function from consideration , formulate the problem as the problem of determination of coefficients @xmath60 for @xmath191 and then add an arbitrary constant @xmath192 to the solution .",
    "indeed , in many cases the value of the potential is not important , as only differences and gradients determine physical quantities such as the electric field , velocities , forces , etc . for comparison with the fft - based poisson equation solutions however , it is desirable to obtain @xmath192 , in which case an additional condition , zero period average , needs to be imposed .",
    "these will be discussed in a separate subsection .",
    "here we just mention that many other equations have the same problem ( e.g. the biharmonic equation ) and the null - space of some equations , such as the helmholtz equation , may have larger dimension , and an analysis similar to the one for the laplace equation presented here would be needed .      while the basis functions can be simply selected according to eq .",
    "( [ 5 ] ) , we instead consider the closely related polynomial basis , in which case we can establish error bounds . in",
    "spherical coordinates ( @xmath193 ) related to the cartesian coordinates via @xmath194 the local and multipole solutions of the laplace equation in 3d can be represented as @xmath195 here @xmath196 are the regular ( local ) spherical basis functions and @xmath197 the singular ( or multipole ) spherical basis functions ; @xmath198 and @xmath199 are normalization constants which can be selected by convenience , and @xmath200 are the orthonormal spherical harmonics : @xmath201 where @xmath202 are the associated legendre functions @xcite .",
    "we will use the definition of the associated legendre function @xmath203 that is consistent with the value on the cut @xmath204 of the hypergeometric function @xmath205 ( see abramowitz & stegun , @xcite ) .",
    "these functions can be obtained from the legendre polynomials @xmath206 via the rodrigues formula @xmath207 straightforward computation of these basis functions involves several relatively costly operations with special functions and use of spherical coordinates .",
    "further , as defined above , these functions are complex , which is an unnecessary expense for real valued computations . in @xcite real basis functions",
    "were defined as @xmath208 with @xmath209 and @xmath210 defined via eq .",
    "( [ 1.1 ] ) are @xmath211 only local basis functions are needed here , and can be computed via an efficient recursive process , without spherical coordinates , @xmath212    while this basis is good for the fmm , the matrix @xmath79 for fitting @xmath85 was found to be poorly conditioned , because the functions decay strongly .",
    "we fix this problem using the following renormalized basis @xmath213 this basis can be obtained in the same manner as @xmath214 was from the complex basis @xmath209 , where @xmath215 @xmath216 .",
    "complex basis functions @xmath209 with a similar normalization @xmath198 ( without the factor @xmath217 ) were used in @xcite . note",
    "further that the @xmath218-truncated expansion of a harmonic function @xmath219 over the basis ( [ 1.7 ] ) can be written as @xmath220 the latter form of the sum , where stacking of coefficients is used , is consistent with ( [ 6 ] ) .",
    "the gradient of the potential is needed to compute the force .",
    "this can be computed as @xmath221 where @xmath222 are vectors in @xmath223 . in @xcite one can find relations between the coefficients of the potential and the gradient .      for the laplacian kernel @xmath1 , eq .",
    "( [ 2 ] ) , @xmath218-truncated expansions ( [ 4 ] ) over the basis @xmath224 , eq . (",
    "[ 1.1 ] ) , have a well - known error bound @xmath225 the expansion error ( [ 6 ] ) due to all sources located in @xmath226 then can be bounded as @xmath227 here we introduced the the number density @xmath228 , which for integral estimates can be replaced with a constant density @xmath229 , where @xmath230 is the volume of box @xmath12 , @xmath231 . in this case",
    "the integral can be evaluated as @xmath232 hence , we have an approximate error bound @xmath233 for a cubic domain we have @xmath234 @xmath235 @xmath236 , and we get @xmath237 the actual error achieved in practice is expected to be much smaller than this estimate since it neglects cancellation effects due to the total charge neutrality .",
    "also in the above equation one can set @xmath238 to obtain a non - dimensional measure of the absolute error ( since the laplace equation is scale - independent ) .",
    "there are three free parameters , @xmath218 , @xmath239 , and @xmath240 , which can be selected to optimize algorithm performance . assuming that the number of charges , their intensities and distribution as well as the domain @xmath26 are fixed , and computations performed with some prescribed tolerance , @xmath18",
    ", the optimization problem can be formulated as @xmath241 where @xmath242 and @xmath243 are the error bounds for the periodization and the fmm respectively , while @xmath244 is the cost of the `` get '' step . in practice , these performance dependences should be determined experimentally , using the qualitative theoretical estimates provided below for guidance .",
    "our tests show that the cost of the fmm is the major contributor to the overall cost of the algorithm .",
    "we set the parameter @xmath239 by the prescribed accuracy @xmath18 , and approximate @xmath245 as @xmath246 where @xmath247 is some constant .",
    "the number of evaluation points is @xmath248 , while the number of sources to be summed is @xmath249 , where @xmath250 is a geometric factor , @xmath251 for a perfectly optimized fmm the complexity estimate is provided in appendix a , eq .",
    "( [ f4 ] ) , where the ratio of the domains occupied by the sources and evaluation points is @xmath252 , where @xmath253 @xmath254 and @xmath255 tends to 1 and @xmath250 at relatively low and high levels of subdivision , @xmath256 , respectively .",
    "this is due to the fact that the check point set is distributed over the surface of a sphere , and they should provide a negligible contribution to the overall complexity at large @xmath170 . assuming @xmath257 the cost can be estimated as @xmath258 it is seen that the complexity is a sum of the decreasing and increasing functions , a minimum at some @xmath259  is expected .",
    "it is not difficult to find it for the case when @xmath240 is close to @xmath260 and @xmath261 indeed , introducing @xmath262 we have from eq .",
    "( [ o2 ] ) @xmath263 and expanding eq .",
    "( [ o3 ] ) at small @xmath264 and @xmath265 we obtain @xmath266 .",
    "\\label{o4}\\ ] ] this function has a minimum at @xmath267 ^{1/3}.   \\label{o5}\\ ] ] which shows that at large @xmath0 optimal @xmath240 should be shifted towards the limit @xmath268 also this shows that at large @xmath0 we have @xmath269 , which justifies the above asymptotic solution , and shows that the part of the overall cost depending on @xmath240 in eq .",
    "( [ o4 ] ) tends to zero .",
    "several methods can be proposed to determine coefficient @xmath192 if it is needed . in particular because we choose to compare our results with the ewald summation method , we need it .",
    "of course , the simplest case is that when the potential value , @xmath270 , is prescribed or known at some point @xmath271 , in which case @xmath272    note then that the fourier based methods for periodization of green s function produce solution with some mean of the potential @xmath273 ( since the zero mode of the fourier transform is zeroed ) .",
    "this particular solution corresponds to @xmath274 in this case for consistency we should set @xmath275 as shown in appendix d , the ewald summation produces @xmath276 , and we do the same for our method .",
    "integrals @xmath277 can be computed relatively easy , since @xmath117 are polynomials in the cartesian coordinates of @xmath7 of degree which does not exceed @xmath278 , for which case exact quadratures exist .",
    "in fact , for a given box size ratio ( e.g. for cube ) these can be precomputed , scaled and used independently of particular source distribution ( see appendix b ) .",
    "the first integral can be represented as a sum @xmath279 in appendix c we provide analytical expressions for functions @xmath280 . despite their unwieldiness ,",
    "their computation for a given @xmath281 is @xmath153 .",
    "overall it is a @xmath282 procedure to compute the sum and constant @xmath192 , which is consistent with the overall complexity of the method .",
    "there also exist symmetries for periodic location of sources , which can be used to accelerate these computations , if this becomes an issue .",
    "note also that results of appendix c can be applied for computation of integrals representing the far field ( [ pfx3 ] ) in the case when the rbf , eq .",
    "( [ 5 ] ) , is used .",
    "to check the accuracy and performance of the method we conducted several numerical tests .",
    "there are very few known analytical solutions , so for comparison we also implemented and tested a simple version of the ewald summation method as an alternative method ( see appendix d ) .      as validation",
    ", we performed tests with different number of sources in the box . first , we conducted a small size test , with a cubic domain @xmath12 and eight sources of charges @xmath283 located at the vertices , so that neighboring sources have opposite charges and the infinite domain forms a regular equispaced grid . physically this corresponds to crystal structures , such as formed by molecules nacl@xmath284 as the reference for accuracy tests we computed the madelung constant for this crystal @xcite , @xmath285 where @xmath286 is the location of na atom and @xmath287 is the distance between the closest neighbor atoms ( in the tests we used @xmath288 , in which case @xmath289 ) .",
    "we also computed this constant using the ewald summation and compared spatial distributions of the potential .",
    "as the measures of the relative errors we used @xmath290 where @xmath291 are the receivers located on the grid used for the ewald summation .    for the high accuracy test , we selected a @xmath292 grid , @xmath293 , and the sampling neighborhood for each source @xmath294 for the ewald method ( see appendix d ) .",
    "this setting provides @xmath295 ( i.e. 14 digits of the madelung constant ) .",
    "high accuracy test for the present method was performed with @xmath296 @xmath297 @xmath298 , which resullts in errors @xmath299 and @xmath300 . for the middle accuracy test we used @xmath301 grid , @xmath302 , and the sampling neighborhood for each source @xmath303 , in which case the ewald method results in @xmath304 . in our method",
    "we used @xmath305 @xmath297 , which produced errors @xmath306 and @xmath307 .",
    "these tests show that errors @xmath308 and @xmath309 are related and the former one approximately one order of magnitude smaller than the latter .",
    "so in the following accuracy tests we measured only @xmath308 for our method , which is independent of the ewald summation routine .",
    "these computations were performed for the check points @xmath89 distributed on the gauss spherical grid .",
    "figure [ figerrmadelung ] shows the dependence of @xmath308 computed for 651 values of parameters @xmath310 and @xmath218 controlling the accuracy .",
    "the chart on the right shows that the computational errors are consistent with theoretical error bound @xmath311 .",
    "for very small values of @xmath312 the computational errors are affected by the double precision roundoff errors .",
    "this shows that the parameters can be set to achieve the required accuracy .    .error",
    "@xmath313 for different check point distributions at @xmath314 [ cols=\"<,<,<,<,<,<,<\",options=\"header \" , ]     finally we note that it is not an easy task to compare the absolute performance of the present methods with the smooth particle mesh ewald ( spme ) and other algorithms for periodic summation due to a difference in implementation , accuracy , what is actually computed ( potential and gradient ) , hardware , etc .",
    "however , some comparison with that approaches can be done using published data @xcite comparing performance of the spme and fmm - type pwa implementation for clusters , for relatively small size problems ( @xmath315 and @xmath316 ) .",
    "the absolute figures indicate that the wall clock time of the present algorithm for these sizes is of the same order as the reported times for those methods , while we are able to perform computations with larger problem sizes on relatively modest hardware .",
    "gpus are often used to accelerate molecular dynamics simulations where periodization may be required .",
    "we implemented the `` get '' part of the algorithm completely on the gpu .",
    "using `` brute - force '' summation on the gpu and on a multicore cpu as the fsa , we did the same performance tests as for the fmm , see fig .",
    "[ performance ] .",
    "the  set ",
    "part can be executed on cpu and transferred to the gpu .",
    "all parts of the algorithm are highly parallelizable and so while the scaling of the algorithm is quadratic , it is up to two orders of magnitude faster than the multicore cpu version .",
    "our tests reveal that at large truncation numbers @xmath218 ( typically @xmath317 ) single precision gpu computations can not be used for spherical basis function evaluation due to loss of precision in least - squares solution .",
    "double - precision computations provide accurate results with @xmath184-norm relative errors of the order @xmath318 in potential and gradient computations compared to the double precision cpu computations .",
    "accordingly fig .",
    "[ performance ] , only shows double precision times .",
    "high performance implementation of the brute - force summation is described in @xcite and was used in the present tests with single and double precision , and run on a single nvidia tesla c2050 card .",
    "the cpu wall clock times used for comparisons were measured for algorithm parallelized for 4 core pc described before .",
    "[ performance ] shows the results of tests .",
    "it is seen that despite the asymptotic quadratic scaling of the algorithm the gpu implementation can be faster or comparable in speed with the fmm running on cpu at @xmath319 for problems of size @xmath320 . the ratio of times for solution of periodic and non - periodic problems for brute force computations at large @xmath0 tends to theoretical limit @xmath321 , which for @xmath322 used for illustrations is about 6 times .",
    "of course , this ratio can be reduced by decreasing @xmath323 . however , in the range @xmath320 reduction of @xmath240 below 1.1 does not benefit the overall performance due to increase of the size of the expansion and reduction of the performance of evaluation of the far field on the gpu , where the local memory is substantially smaller than the cpu cache .",
    "one of the advantages of brute force double precision gpu computing for problems of relatively small size ( @xmath320 ) is that besides the roundoff errors the accuracy is controlled only by parameters @xmath218 and @xmath240 , while for the fsa = fmm the error is controlled also by @xmath324 . for efficient fmm implementations on gpu",
    "this number is usually small @xcite while the efficiency of the fmm on gpu for high accuracy simulations is a subject for a separate study .",
    "by proposing a method for computation of periodic sums we do not mind to compete with or diminish the role of the existing methods , such as based on ewald summation or the fmm for periodic functions for well - studied kernels .",
    "we realize that a variety of problems with periodic boundary conditions and practical concerns of researchers may require some solutions different from the existing approaches , as any of them , including the present one has some advantages and disadvantages .",
    "such problems are not limited with laplacian kernels .",
    "however , development of specialized approaches which usually are more efficient than generic approaches ( kernel - independent fmm is an example ) , also have some cost and availablity of a method which turns an available fsa to its periodic version without any intervention to the basic fsa algorith , in our opinion , is useful .",
    "the `` cons '' and `` pros '' of the fft vs fmm were discussed in the literature , including performance and scaling at large @xmath0 ( e.g. @xcite ) and application to solution of molecular dynamics problems ( e.g. @xcite ) .",
    "particularly , some difficulties for the use of the fmm for the md simulations were reported as a long term energy drift was observed in some computations using four or six term expansion in the fmm @xcite ( perhaps , @xmath325 or @xmath326 , which provides @xmath327 and 36 terms of expansion , respectively)@xmath328 of course , the number of terms should be evaluated carefully and the fmm and other errors should be consistent with the integration schemes used ( particularly , the fmm errors in gradients are higher than in the potential @xcite ) . in this context , we can mention that in the present algorithm one can enforce some conditions ( such as setting the mean of the potential to zero , similarly to the ewald scheme ) , which is normally is not controlled in the fmm - based algorithms .",
    "it can be more stable or not in terms of the energy drift if applied to the md simulations , but this requires an additional study , which , certainly , goes beyond the scope of the present work , where not only the md applications are envisioned .",
    "another advantage of not requiring the fft may arise for very large problems , which have to be implemented on distributed architectures , where the communication costs of the fmm are smaller than the fft .",
    "as far as comparing the present approach with an fmm algorithm implemented using periodic kernel functions is considered , we perform this comparison on three sizes of problems : with small @xmath329(say , @xmath330 ) , moderate @xmath0 ( say , @xmath331 ) and large @xmath0 ( say , @xmath332 ) . the first class may not require the fmm at all , as direct sums may be done faster and be more accurate , and the present algorithm can work efficiently and accurately ( choosing proper @xmath218 ) with direct sums .",
    "the second and the third types of the problems require a fast summation algorithm such as the fmm . in this case",
    "some authors claim that the overheads for solution of periodic problems are negligibly small compared to solution of the non - periodic problem . for example ,",
    "@xcite claims that periodization of requires only 0.1% of the total computational time .",
    "this statement _ does not mean _ that the periodic version of the sum is 1.001 times slower than the solution of the non - periodic sum , as was remarked on an early draft of this paper .",
    "indeed , in @xcite ( page 1084 and table v ) it is stated `` _ the time spent on dealing with periodicity ranged from about 0.3 to 2.6 times of that of the free boundary computations , depending on the values of @xmath218 and @xmath70 and the type of the fmm . _ '' ( here @xmath333 in our notation ) .",
    "this shows that actual measured time ratios , such as reported in fig .",
    "[ timeratio ] , were in the range 1.3 to 3.6 .",
    "the overhead comes from the fact that the periodic fmm is the fmm executed in the extended domain , which is not the original cell @xmath12 , but in @xmath12 with its 26 neighbors , which is @xmath334 in our notation , see fig .",
    "the difference between the present and periodic fmms is that , first , the periodic fmm saves on generation of multipole expansions and multipole - to - multipole translations for the replicated domains , which is not implemented in the present algorithm , and , second , that for the present fmm some relatively small amount of receivers ( `` check points '' ) are added .",
    "discussions of the fmm costs and simplifications in appendix a and around eqs ( [ o3 ] ) and ( [ lt1 ] ) show that asymptotically as @xmath335 the second modification brings a negligible overhead , while the overhead due to the first modification is non - zero , and in practice can be several percents for cubic @xmath12 to tens of percents for non - cubic @xmath12 ( due to the geometric factor @xmath250 ) , which is the price of use of the fmm as a black box fsa .    at @xmath336",
    "the costs of the periodic and non - periodic fmms are the same .",
    "the difference in costs of periodic and non - periodic fmms comes from two factors  the difference in the multipole - to - local translations and direct summations for the boxes near the boundaries of @xmath4 , due to the difference in the neighborhoods .",
    "we carefully counted these numbers accounting for the boundary effects , and found that for levels @xmath337 and @xmath338 ( midsize problems ) used in @xcite , the ratios of numbers of translations in periodic and non - periodic fmms is 1.96 and 1.38 , while the ratios of the numbers of direct summations is 1.30 and 1.14 , respectively . at levels @xmath339 and",
    "@xmath326 one can expect time ratios in a range 1.05 - 1.20 .",
    "one of the features of the present algorithm , which may be of practical interest , is the capability to obtain periodic solutions for non - cubic domains easily , which can be an issue for some other algorithms .",
    "these were illustrated in table [ table5 ] .",
    "performance for moderate box aspect ratio is comparable to the cubic case . for high aspect ratios , the algorithm works , but some issues , which could be the subject of future study",
    "must be noted .",
    "there is a substantial increase in the amount of sources added because of the enclosure of the whole domain in a sphere .",
    "because of this , both the memory needed and the computational time are relatively large , while still scaled as expected .",
    "possible ways to address this would be to devise more check point sets located not on a sphere , but on surface that are more conformal to the boundaries , and also a reduction of the size of domain @xmath12 .",
    "the latter can be achieved in a few ways including distribution of rbf centers not too far from the boundaries of @xmath4 or to use basis functions , which are better suited for boxes of high aspect ratios than the spherical basis functions .",
    "we have presented a kernel - independent method for the periodization of finite sums .",
    "the technique was presented in a general setting , and then applied to the particular case of the laplacian kernel using different expansion bases .",
    "tests showed that the method can be tuned to compute periodic sums with arbitrary prescribed accuracy . in the case of use of the fmm as the fast summation algorithm",
    "the complexity of the method at large @xmath0 is the same as the fmm .",
    "the computational time for large @xmath0 ( in tests up to @xmath340 ) is about twice that for the finite box sum using the fmm .",
    "similar results are seen for gpu based fsa , though here the scaling is quadratic , and the largest problem size that can be reasonably treated is about @xmath341 .",
    "the ease of implementation of the periodization method , its performance , and capability to `` retrofit '' any available black box fsa without any modification makes it practical .",
    "this method may also be valuable on distributed architectures on which communication costs of an algorithm are as important as computational complexity .",
    "fmm - based approaches are known to be much more communication efficient than fft - based approaches for solution of the same large problems on distributed architectures .",
    "additional speedups of the method can be achieved by specialization of the fmm ",
    "these were specifically avoided in this paper to demonstrate the ability to use a blackbox sum algorithm , and should be investigated if the method is to be used in a `` production '' environment .",
    "application to other kernels should be straightforward , though details will have to be worked out for them .",
    "99 p. ewald , die berechnung optischer und elektrostatischer gitterpotentiale , ann .",
    "phys . 369 ( 1921 ) 253 - 287 .",
    "t. darden , d. york , and l. pedersen , particle mesh ewald - an nlog(n ) method for ewald sums in large systems , j. chem .",
    "98 ( 1993 ) 10089 - 10092 .",
    "u. essmann , l. perera , m.l .",
    "berkowitz , t. darden , h. lee , and l.g .",
    "pedersen , a smooth particle mesh ewald method , j. chem .",
    "103 ( 1995 ) 8577 - 8593 .",
    "d. lindbo and a .- k .",
    "tornberg , spectrally accurate fast summation for periodic stokes potentials , j. comput .",
    "( 2010 ) 8994 - 9010 .",
    "d. lindbo and a .- k .",
    "tornberg , spectral accuracy in fast ewald - based method for particle simulations , j. comput .",
    "( 2011 ) 8744 - 8761 .",
    "l. greengard and v. rokhlin , a fast algorithm for particle simulations , j. comput .",
    "73 ( 1987 ) 325 - 348 .",
    "schmidt and m.a .",
    "lee , implementing the fast multipole method in three dimensions , j. stat .",
    "63 ( 1991 ) 1223 - 1235 .",
    "d. christiansen , j.w .",
    "perram , and h.g .",
    "petersen , on the fast multipole method for computing the energy of periodic assemblies of charged and dipolar particles , j. comput .",
    "107 ( 1993 ) 403 - 405 .",
    "hamilton and g. majda , on the rokhlin - greengard method with vortex blobs for problems posed in all space or periodic in one direction , j. comput .",
    "phys 121 ( 1995 ) 29 - 50 .    c.g .",
    "lambert , t.a .",
    "darden , and j.a .",
    "board , jr .",
    ", a multipole - based algorithm for efficient calculation of forces and potentials in macroscopic periodic assemblies of particles , j. comput . phys . 126 ( 1996 ) 274 - 285 .",
    "f. figueirido , r.m .",
    "levy , r. zhou , and b.j .",
    "berne , large scale simulation of macromolecules in solution : combining the periodic fast multipole method with multiple step integrators , j. chem .",
    "106 ( 1997 ) 9835 - 9849 .",
    "t. amisaki , precise and efficient ewald summation for periodic fast multipole method , j. comput .",
    "chemistry 21 ( 2000 ) 1075 - 1087 .",
    "y. otani and n. nishimura , a fast multipole boundary integral equation method for periodic boundary value problems in three - dimensional elastostatics and its application to homogenization , int .",
    "j. multiscale computational eng . 4 ( 2006 ) 487 - 500 .",
    "y. otani and n. nishimura , a periodic fmm for maxwell s equations in 3d and its application to problems related to photonic crystals , j. comput .",
    "phys . 227 ( 2008 ) 4630 - 4652 .",
    "a. barnett and l. greengard , a new integral representation for quasi - periodic fields and its application to two - dimensional band structure calculations , j. comput .",
    "phys 229 ( 2010 ) 6898 - 6914 .",
    "langston , l. greengard , and d. zorin , a free - space adaptive fmm - based pde solver in three dimensions , comm .",
    "appl math and comput .",
    "6 ( 2011 ) 79 - 122 .",
    "a. kia , d. kim , and e. darve , fast electrostatic force calculation on parallel computer clusters , j. comput .",
    "phys 227 ( 2008 ) 8551 - 8567 .",
    "stone , j.c .",
    "phillips , p.l .",
    "freddolino , d.j .",
    "hardy , l.g .",
    "trabuco , and k. schulten . accelerating molecular modeling applications with graphics processors .",
    "j. comput .",
    "chem . , 28 ( 2007 ) 2618 - 2640 .",
    "gumerov and r. duraiswami , fast multipole methods on graphics processors , j. comput . phys . 227",
    "( 2008 ) 8290 - 8313 .",
    "t. hamada , r. yakota , k. nitadori , t. narumi , k. yasuoka , and m. taiji , 42 tflops hierarchical n - body simulations on gpus with applications in both astrophysics and turbulence , proceedings of international conference for high performance computing , networking , storage , and analysis , ser . sc09 . new york ,",
    "ny : acm , 2009 , article no .",
    "62 .    q. hu , n.a .",
    "gumerov , and r. duraiswami , scalable fast multipole methods on distributed heterogeneous architectures , proceedings of international conference for high performance computing , networking , storage , and analysis , ser . sc11 .",
    "new york , ny : acm , 2011 , pp .",
    "36:136:12 .",
    "r. yokota , l.a .",
    "barba , t. narumi , and k. yasuoka , petascale turbulence simulation using a highly parallel fast multipole method on gpus , computer phys .",
    "communications 184 ( 2013 ) 445 - 455 .",
    "gumerov and r. duraiswami , fast multipole method for the biharmonic equation in three dimensions , j. comput .",
    "215 ( 2006 ) 363 - 383 .",
    "m. buhmann , radial basis functions : theory and implementations , cambridge , 2003 .    z. gimbutas and v. rokhlin , a generalized fast multipole method for nonoscillatory kernels , siam j. sci . comput . 24",
    "( 2003 ) 796 - 817 .",
    "l. ying , g. biros , and d. zorin , a kernel - independent adaptive fast multipole algorithm in two and three dimensions , j. comput .",
    "196 ( 2004 ) 591 - 626 .",
    "l. ying , a kernel independent fast multipole algorithm for radial basis functions , j. comput .",
    "213 ( 2006 ) 451 - 457 .",
    "a. barnett and l. greengard , a new integral representation for quasi - periodic scattering problems in two dimensions , bit numer .",
    "51 ( 2011 ) 67 - 90 .",
    "w. fong and e. darve , the black - box fast multipole method , j. comput .",
    "( 2009 ) 8712 - 9725 .",
    "b. zhang , j. huang , n.p .",
    "pitsianis , and x. sun , a fourier - series - based kernel independent fast multipole method , j. comput .",
    "( 2011 ) 5807 - 5821 .",
    "m. messner , m. schanz , and e. darve , fast directional multilevel summation for oscillatory kernels based on chebyshev interpolation , j. comput .",
    "( 2012 ) 1175 - 1196 .",
    "golub and c.f .",
    "van loan , matrix computations , 3rd edition , john hopkins university press , baltimore , 1996 .    m. abramowitz and i.a .",
    "stegun , handbook of mathematical functions , national bureau of standards , washington , d.c . , 1964 .",
    "j. j. thomson , on the structure of the atom : an investigation of the stability and periods of oscillation of a number of corpuscles arranged at equal intervals around the circumference of a circle ; with application of the results to the theory of atomic structure , phil . mag . 7",
    "( 1904 ) , 237 - 265 .",
    "j. fliege and u. maier , the distribution of points on the sphere and corresponding cubature formulae , i m a j. numer .",
    "analysis 19 ( 1999 ) 317 - 334 ( data available at http://www.personal.soton.ac.uk/jf1w07/nodes/nodes.html ) .",
    "gumerov and r. duraiswami , fast multipole methods for the helmholtz equation in three dimensions , elsevier , oxford , 2005 .",
    "epton and b. dembart , multipole translation theory for the three - dimensional laplace and helmholtz equations , siam j. sci .",
    "16 ( 1995 ) 865 - 897",
    ".    e. madelung , das elektrische feld in systemen von regelmig angeordneten punktladungen .",
    "zs , , xix ( 1918 ) 524 - 533 .    n.a .",
    "gumerov and r. duraiswami , efficient fmm accelerated vortex methods in three dimensions via the lamb - helmholtz decomposition , j. comput .",
    "( 2013 ) 310 - 328 .",
    "gumerov and r. duraiswami , comparison of the efficiency of translation operators used in the fast multipole method for the 3d laplace equation , technical report cs - tr 4701 and umiacs - tr 2005 - 09 , university of maryland department of computer science and institute for advanced computer studies , college park , november 2005 .",
    "skeel , fast n - body methods : why , what , and which , proceedings of international conference on numerical analysis and applied mathematics , icnaam , cp1281 , i , ( 2010 ) ( aip conference proceedings 1281 , 27 ( 2010 ) ; doi : 10.1063/1.3498450 ) .",
    "t.c.bishop , r.d .",
    "skeel , and k. schulten , difficulties with multiple time stepping and fast multipole algorithm in molecular dynamics , j. comput .",
    "( 1997 ) 1785 - 1791 .",
    "there are many papers evaluating complexity of the fmm in basic settings ( mostly for the cases when the sources and receivers are the same and uniformly occupy all computational domain , which can be thougth as a unit cubic box , e.g. @xcite ) . here",
    ", we consider the fmm for laplace - like kernels and modify the problem by assuming that @xmath13 sources are located in the domain @xmath334 of volume @xmath342 and @xmath22 receivers are distributed inside the domain @xmath343 of volume @xmath344 let now @xmath345 be a minimal cube which includes @xmath334 and presents the zero level of the octree .",
    "the cube is partitioned via the octree down to level @xmath170 , in which case the maximum number of sources in a box is @xmath346 . assuming more or less uniform source point distribution in @xmath334 and that any box in @xmath347 contains at least one receiver point",
    ", we can determine the number of source and receiver boxes at this level as @xmath348 and @xmath349 , respectively .",
    "the latter estimate comes from the observation that for large enough @xmath170 the ratio of the numbers of source and receiver boxes is approximately the same as the ratio of volumes of the domains occupied by the sources and receivers . in a standard fmm in three dimensions",
    "the number of multipole - to - local translations to each receiver box located far enough from the boundary of @xmath334 is @xmath350 ( this number can be reduced , e.g. as in @xcite ,",
    "but anyway , @xmath351 ) . when counting the total number of translations @xmath1 should be increased to account for one local - to - local transaltion per receiver box and 1 multipole - to - multipole translation per source box . it can be noted then that the amount of translations at the @xmath188th level of the octree increases geometrically with the level ( 8 times in three dimensions ) , so the total number of translations , @xmath352 , will have factor @xmath353 compared to the number of translations at level @xmath170 and we have @xmath354 here the latter approximate equality holds when @xmath355 .",
    "the number of direct summations per receiver is 27@xmath346 , if we assume that the neighborhood of the receiever box consists of 27 boxes , which yields the total number of direct summations , @xmath356 hence , denoting @xmath357 the cost of a single translation and @xmath358 the cost of a single direct evaluation , we obtain the part of the total cost , which depends on @xmath346 in the form @xmath359 this function can be minimized with respect to @xmath346 , and the minimum cost denoted as , @xmath360 , at @xmath361 , where from @xmath362 , we have @xmath363 to get the total cost of the fmm , we need to add here the cost of generation of multipole expansions , @xmath364 and the cost of evaluation of local expansions , @xmath365 , where @xmath366 and @xmath367 are the costs of generation and evaluation of single expansions , which does not depend on @xmath346 , or the depth of hte octree @xmath170 . hence , the total cost of the fmm used in the present algorithm , which neglects the cost of generation of data structure is @xmath368 here the last estimate comes from the fact that usually translations and direct summations are the major contributors to the overall cost of the fmm ( e.g. see profiling of the algorithm @xcite ) . also note the dependence of the fmm cost on the number of terms in the multipole and local expansions used in the fmm , @xmath172 .",
    "we have @xmath369 , @xmath370 and @xmath371 where @xmath372 is some number ( e.g. for @xmath373 translation methods , @xmath374 ) .",
    "basis functions @xmath375 are homogeneous polynomials of degree @xmath376 ( sums of monomials @xmath377 @xmath378 ) .",
    "we can compute the integrals as @xmath379 where @xmath380 and @xmath381 are the standard weights and abscissas of the gauss quadrature of order @xmath382 @xcite . since this integration is exact for polynomials of degree @xmath383 and the maximum degree of the polynomials in the sum",
    "is @xmath384 the choice @xmath385 + 1,\\quad p = p^{1/2 } ,   \\label{a2}\\ ] ] provides an exact result . for evaluation of all @xmath48 required coefficients",
    "@xmath386 the computational cost of this procedure is @xmath387 note that faster methods may be proposed for computation of this step .",
    "however , this is not crucial , as this integration is performed in the `` set '' part of the algorithm , which overall cost is @xmath388 , and this cost is amortized over the rest of the algorithm .",
    "to compute the integral ( [ pfx4 ] ) for the kernel ( [ 2 ] ) , we first apply the gauss divergence theorem to reduce the volume integral to a surface integral : @xmath389 where @xmath390 is the outward normal to @xmath391 this result is valid for an arbitrary point @xmath281 including when @xmath281 is located in @xmath12 or on its boundary @xmath392 .",
    "this can be checked by consideration of @xmath18-vicinities of singularities , which are integrable .",
    "the surface integral can be decomposed into integrals over the box faces , @xmath393 , @xmath394@xmath395 where @xmath396 and @xmath397 are the normal and the center of the @xmath398th face , while @xmath399 and @xmath400 are coordinates in the reference frame with the origin at the @xmath398th face center .",
    "the surface integral then can be reduced to the contour integral using , e.g. the gauss divergence theorem in the plane of a particular face .",
    "indeed , consider function @xmath401 the 2d divergence of this function in the plane of the @xmath398th face is @xmath402 .",
    "so @xmath403 where @xmath404 is the outer normal to the contour @xmath405 .",
    "this integral can be decomposed into four integrals over the face edges .",
    "so @xmath406 the latter integrals can be found analytically .",
    "indeed , consider for the @xmath407th edge a local right hand oriented reference frame centered at its endpoint @xmath408 from which integration starts , and unit basis vectors @xmath409 directed along the integration path , @xmath410 and @xmath411 denoting coordinates of @xmath281 in this reference frame as @xmath412 we obtain @xmath413 where @xmath414 , @xmath415 is the length of edge @xmath416 , and @xmath417 is the primitive , @xmath418 which can be computed analytically as @xmath419 the integration constant @xmath420 can be selected arbitrarily to eliminate possible singularities . particularly for @xmath421 @xmath422",
    "one can set @xmath423 .",
    "the above formulae are sufficient for numerical implementation , which in the simplest form can program the primitive ( [ b9 ] ) and implement the above decompositions .",
    "there exist some box symmetries ( e.g. all local coordinates are nothing but permuted and shifted original cartesian coordinates ) , which can be exploited to achieve better performance .",
    "the ewald summation method is based on decomposition of kernel ( [ 2 ] ) @xmath424 which is exact for any value of parameter @xmath264 , since by definition of the error function , erf@xmath425 , and the complimentary error function , erfc@xmath425 , we have erf@xmath426erfc@xmath427 and the value of @xmath428 is set due to by definition @xmath429 so for the total potential ( [ 2 ] ) we have @xmath430 both functions @xmath431 and @xmath432 are periodic .    due to fast decay of erfc@xmath425 computation of @xmath433 for @xmath434 can be done only using the sources in some neighborhood of  @xmath12 , namely in @xmath435 such that the minimum distance , @xmath436 , between the points on the boundaries @xmath392 and @xmath437 is much larger than @xmath438 .",
    "hence , this can be computed directly by evaluation of a finite sum with a controllable error as @xmath439 for computation of @xmath440 one can notice that @xmath441 is a solution of the poisson equation @xmath442 where @xmath443 is a compactly supported function , which turns to the dirac delta - function as @xmath444",
    ". periodic solution of the poisson equation can be obtained via the fft . for this purpose , we grid the domain @xmath12 and select @xmath264 in a way that @xmath445 , and @xmath446 ( an optimal setting can be found from analysis of the error bounds ) , where @xmath447 is the minimum spatial step of the grid .",
    "this enables sampling of @xmath443 for source @xmath448 at several grid points around @xmath449 .",
    "the number of these grid points determines the accuracy of the method ( at optimal settings ) , so we introduce additional parameter @xmath450 , so @xmath451 is sampled in a box @xmath452 .",
    "we also take care about the points @xmath449 located near the boundary of @xmath4 by periodization ( so we construct a periodic function @xmath453 ) .",
    "further , we apply the forward 3d fft to @xmath454 and zero the harmonic of the fourier image @xmath455 corresponding to the wavenumber @xmath456 the inverse 3d fft of @xmath457 , produces the required solution @xmath458 with zero mean at grid points .",
    "note then that solution obtained in this way has the following mean @xmath459 the zero mean here is due to the compact support of the kernel @xmath460 and charge neutrality .",
    "this mean can be computed using decomposition @xmath461 , where the integral with the first kernel can be computed analytically ( see appendix c ) , while the integral with the second kernel is regular and can be computed using , say , the trapezoidal rule ( in the fft - based method the space is gridded ) . to avoid interpolation errors , in the numerical tests where we compared our method for accuracy with the ewald summation method",
    ", we used only cases when the source and evaluation points are located at the grid nodes ."
  ],
  "abstract_text": [
    "<S> in a number of problems in computational physics , a finite sum of kernel functions centered at @xmath0 particle locations located in a box in three dimensions must be extended by imposing periodic boundary conditions on box boundaries . even though the finite sum can be efficiently computed via fast summation algorithms , such as the fast multipole method ( fmm ) </S>",
    "<S> , the periodized extension is usually treated via a different algorithm , ewald summation , accelerated via the fast fourier transform ( fft ) . a different approach to compute this periodized sum just using a blackbox finite fast summation algorithm </S>",
    "<S> is presented in this paper . </S>",
    "<S> the method splits the periodized sum in to two parts . </S>",
    "<S> the first , comprising the contribution of all points outside a large sphere enclosing the box , and some of its neighbors , is approximated inside the box by a collection of kernel functions ( `` sources '' ) placed on the surface of the sphere or using an expansion in terms of spectrally convergent local basis functions . the second part , comprising the part inside the sphere , and including the box and its immediate neighborhood , is treated via available summation algorithms . </S>",
    "<S> the coefficients of the sources are determined by least squares collocation of the periodicity condition of the total potential , imposed on a circumspherical surface for the box . </S>",
    "<S> while the method is presented in general , details are worked out for the case of evaluating electrostatic potentials and forces . </S>",
    "<S> results show that when used with the fmm , the periodized sum can be computed to any specified accuracy , at an additional cost of the order of the free - space fmm . </S>",
    "<S> several technical details and efficient algorithms for auxiliary computations are provided , as are numerical comparisons .      </S>",
    "<S> periodic sums ; fast multipole method ; ewald summation ; gpu computing ; kernel independent methods ; molecular dynamics ; long - range interactions      work partially supported by the following sources : afosr under muri grant w911nf0410176 ( pi prof .  </S>",
    "<S> j.  g. leishman , monitor dr .  </S>",
    "<S> d. smith ) ; by nsf award 1250187 ( pi : prof .  </S>",
    "<S> b.  balachandran ) ; by grant g34.31.0040 ( pi : prof .  </S>",
    "<S> i.  akhatov ) of the russian ministry of education & science . ; and by fantalgo , llc . </S>"
  ]
}
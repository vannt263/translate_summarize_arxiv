{
  "article_text": [
    "with the increase in the capacity of backbone networks , the failure of a single link or node can result in the loss of enormous amounts of information , which may lead to catastrophes , or at least loss of revenue .",
    "network connections are therefore provisioned such that they can survive such failures .",
    "several techniques to provide network survivability have been introduced in the literature .",
    "such techniques either add extra resources , or reserve some of the available network resources as backup circuits , just for the sake of recovery from failures . recovery from failures is also required to be agile in order to minimize the network outage time .",
    "this recovery usually involves two steps : fault diagnosis and location , and rerouting connections .",
    "hence , the optimal network survivability problem is a multi - objective problem in terms of resource efficiency , operation cost , and agility  @xcite .",
    "network coding allows the intermediate nodes not only to forward packets using network scheduling algorithms , but also encode / decode them using algebraic primitive operations , see  @xcite and the references therein . as an application of network coding , data loss because of failures in communication links can be detected and recovered if the sources are allowed to perform network coding operations  @xcite .    in network survivability , the four different types of failures that might affect network operations are@xcite :    link failure ,    node failure ,    shared risk link group ( srlg ) failure , and    network control system failure .",
    "henceforth , one needs to design network protection strategies against these types of failures . although the common frequent failures are link failures , node failures sometimes happen due to burned swritch / router , fire , or any other hardware damage .",
    "in addition , the failure might be due to network maintenance .",
    "however , node failure is more damaging than link or system failures since multiple connections may be affected by the failure of a single node .",
    "recently , the authors have proposed employing the network coding technique in order to protect against single and multiple link failures @xcite , in a manner that achieves both agility and resource efficiency .",
    "the idea is to form linear combinations of data packets transmitted on the working circuits , and transmit these combinations simultaneously on a shared protection circuit .",
    "the protection circuit can take the form of an additional p - cycle  @xcite , a path or a general tree network  @xcite . in the case of failures ,",
    "the linear combinations can be used by the end nodes of the connection(s ) affected by the failure(s ) to recover the lost data packets .",
    "these network protection strategies against link failures using network coding have been extended to use reduced capacities instead of reserving , or even adding separate protection circuits  @xcite .",
    "the advantages of using network coding - based protection are twofold : first , one set of protection circuits is shared between a number of connections , hence leading to reduced protection cost ; and second , copies of data packets are transmitted on the shared protection circuit after being linearly combined , hence leading to fast recovery of lost data since failure detection and data rerouting are not needed .    in this paper , we consider the problem of providing protection against node failures by the means of network coding and the reduced capacity techniques . as a byproduct of this protection strategy , protection against any single link failure",
    "is also guaranteed .",
    "this is based on representing the node failure by the failure of multiple links",
    ". however , the failed links are not any arbitrary links .",
    "since working paths used by the connections that are protected together are link disjoint , the links that need to be protected are used by different connections .",
    "the following points highlight the network model and main considerations .     with a set of nodes @xmath1 and a set of edges @xmath2 .",
    "the nodes @xmath1 consist of sources @xmath3 , receivers @xmath4 , and relay nodes @xmath5 .",
    "the node @xmath6 represents a failed node with 3 working connections that must be protected at the failure incidence . ]",
    "* let @xmath7 be a network represented by an abstract graph @xmath8 , where @xmath1 is the set of nodes and @xmath2 be set of undirected edges .",
    "let @xmath3 and @xmath4 be sets of independent sources and destinations , respectively .",
    "the set @xmath9 contains the relay nodes , sources , and destinations , respectively , as show in fig .",
    "[ fig : relaynet ] . assume for simplicity that @xmath10 , hence the set of sources is equal to the set of receivers .",
    "* a path ( connection ) is a set of edges connected together with a starting node ( sender ) and an ending node ( receiver ) .",
    "@xmath11 where @xmath12 , @xmath13 , and + ve integer m. * the node can be a router , switch , or an end terminal depending on the network model @xmath7 and the transmission layer , see fig .",
    "[ fig : npaths ] .",
    "* l is a set of paths @xmath14 carrying the data from the sources to receivers .",
    "connection paths are link disjoint and provisioned in the network between senders and receivers .",
    "all connections have the same bandwidth , otherwise a connection with a high bandwidth can be divided into multiple connections , each of which has the unit capacity .",
    "there are exactly @xmath0 connections .",
    "a sender with a high capacity can divide its capacity into multiple unit capacities .",
    "* we consider the case that the failures happen in the relay nodes .",
    "the failures in the relay nodes might happen due to a failed switch , router , or any connecting point as shown in fig .",
    "[ fig : relaynet ] .",
    "we assume that the failures are independent of each other .",
    "[ def : nodedegree ] let @xmath15 be an arbitrary node in @xmath16 , which relays the traffic between source and terminal nodes .",
    "the number of connections passing through this node is called the _ node relay degree _ , and is referred to as @xmath17 . put differently :",
    "note that the above definition is different from the graph theoretic definition of the node degrees ; input and output degrees .",
    "however , the node degree must not be less than the node relay degree . furthermore , the node relay degree of a node @xmath15 is @xmath19 , where @xmath20 is the degree of a node u in an undirected graph .",
    "we can define the network capacity from the min - cut max - flow information theoretic view  @xcite .",
    "it can be described as follows .",
    "[ def : capacitylink ] the unit capacity of a connecting path @xmath21 between @xmath22 and @xmath23 is defined by @xmath24 the total capacity of @xmath7 is given by the summation of all path capacities .",
    "what we mean by an _",
    "active _ path is that the receiver is able to receive and process packets throughout this path , see for further details  @xcite .    clearly , if all paths are active then the total capacity of all connections is @xmath0 and the normalized capacity is @xmath25 .",
    "if we assume there are n disjoint paths , then , in general , the normalized capacity of the network for the active and failed paths is computed by @xmath26    the _ working paths _ on a network with @xmath0 connection paths carry traffic under normal operations , see fig .",
    "[ fig : npaths ] .",
    "the _ protection paths _ provide an alternate backup path to carry the traffic in case of failures .",
    "a protection scheme ensures that data sent from the sources will reach the receivers in case of failure incidences on the working paths  @xcite .",
    "in this section we demonstrate a model for network protection against a single node failure ( snf ) using network coding .",
    "previous work focused on network protection against single and multiple link failures using rerouting and sending packets throughout different links .",
    "we use network coding and reduced capacity on the paths carrying data from the sources to destinations .",
    "the idea has been developed for the purpose of link and path failures in  @xcite .",
    "we present a protection strategy denoted by nps - t . under nps - t",
    ", the normalized network capacity is based on the max - flow between sources and destinations , and its given by @xmath27 , where @xmath28 is the maximum number of connections traversing any node in the network , i.e. in other words , it is the max node degree .",
    "we develop the design methodology of this strategy .",
    "in addition we derive bounds on the field size and encoding operations .",
    "assume we have the same definitions as shown in the previous section .",
    "let @xmath29 be the relay node degree of a node @xmath15 in @xmath5 .",
    "we define @xmath30 to be the @xmath31 over all node s relay degrees in the network @xmath7 .",
    "@xmath32 note that @xmath33 is the degree representing the max links that can fail , in other words it is the number of working paths that might fail due to the failure of a relay node .",
    "let @xmath34 be the node with relay degree @xmath30 , and assume @xmath34 to be the failed node .",
    "our goal is to protect the network @xmath7 against this node failure .",
    "in fact @xmath30 represents a set of failed connections caused by a failure of the node @xmath34 in the network @xmath7 .",
    "although the failure of @xmath34 is represented by the failure of @xmath35 links , each incoming link at @xmath34 has a corresponding outgoing link , and if either , or both of these two links fail , the effect on the connection is the same .",
    "therefore , our protection strategy is based on representing the node failure by the failure of @xmath30 connections , and we therefore need to protect against @xmath30 failed connections .",
    "primary paths carries encoded data . the black points represent various other relay nodes , width=264,height=151 ]      assume the sender @xmath22 sends a message to the receiver @xmath23 via the path @xmath21 .",
    "also , assume without loss of generality that @xmath28 disjoint working paths have failed due to the failure of a single node .",
    "then , we describe protection code as shown in scheme ( [ eq : tfailures1 ] ) . under this protection scheme , @xmath37 of the working paths will carry plain data units denoted by @xmath38 s , i.e. the data unit transmitted on working path @xmath39 in round @xmath40 .",
    "the remaining @xmath28 paths will carry linear combinations , which are denoted by @xmath41 s .",
    "they will be used to recover from data unit losses due to the failure .",
    "@xmath42    in general , @xmath43 is given by @xmath44    we consider that the coefficients @xmath45 s are taken from a finite field with @xmath46 alphabets . later in this section , we will show how to perform the encoding and decoding operations for the purpose of recovery from failures .",
    "in addition , we will derive bounds on the field size in the next section .",
    "the following theorem gives the normalized capacity of nps - t strategy .",
    "let @xmath0 be the total number of disjoint connections from sources to receivers .",
    "the capacity of nps - t strategy against @xmath28 path failures as a result of a single node failure is given by @xmath47    in nps - t , there are t paths that will carry encoded data in each round time in a particular session . without loss of generality , consider the case in which @xmath48 is an integer is not an integer can be accommodated by running the strategy for @xmath49 rounds , where @xmath50 is the smallest integer such that @xmath51 . ] or assume that @xmath52 .",
    "therefore , there exists @xmath53 rounds , in which the capacity is @xmath54 in each round . also , the capacity in the first round is @xmath37 .",
    "hence , we have @xmath55    the advantages of nps - t strategy described in scheme ( [ eq : tfailures1 ] ) are that :    * the data is encoded and decoded online , and it will be sent and received in different rounds . once the receivers detect failures , they are able to obtain a copy of the lost data without delay by querying the neighboring nodes with unbroken working paths . * the approach is suitable for applications that do not tolerate packet delay such as real - time applications , e.g. , multimedia and tv transmissions .",
    "* @xmath56 recovery against any single node failure is guaranteed .",
    "in addition , up to @xmath28 disjoint path failures can be recovered from . * using this strategy , no extra paths are needed .",
    "this will make this approach more suitable for applications , in which adding extra paths , or reserving links or paths just for protection , may not be feasible .",
    "* the encoding and decoding operations are linear , and the coefficients of the variables @xmath57 s are taken from a finite field with @xmath58 elements .",
    "assume that each connection path @xmath21 ( l ) has a unit capacity from a source @xmath22 ( s ) to a receiver @xmath23 ( r ) .",
    "the data sent from the sources s to the receivers r is transmitted in rounds . under nps - t , in every round @xmath37 paths are used to carry plain data ( @xmath57 ) , and @xmath28 paths are used to carry protected data units .",
    "there are @xmath28 protection paths .",
    "therefore , to treat all connections fairly , there will be @xmath52 rounds , and in each round the capacity is given by n - t .",
    "we consider the case in which all symbols @xmath57 s belong to the same round .",
    "the first t sources transmit the first encoded data units @xmath59 , and in the second round , the next @xmath28 sources transmit @xmath60 , and so on .",
    "all sources s and receiver r must keep track of the round numbers .",
    "let @xmath61 and @xmath62 be the i d and data initiated by the source @xmath22 .",
    "assume the round time @xmath39 in session @xmath63 is given by @xmath64 .",
    "then the source @xmath22 will send @xmath65 on the working path @xmath21 which includes @xmath66    also , the source @xmath67 , that transmits on the protection path , will send a packet @xmath68 : @xmath69 where @xmath70 is defined in  ( [ eq : y_nps - t ] ) . hence the protection paths are used to protect the data transmitted in round @xmath71 , which are included in the @xmath72 data units .",
    "the encoded data @xmath70 is computed in a simple way where source @xmath67 , for example , will collect all sources data units , and using proper coefficients , will compute the @xmath70 data units defined in scheme  ( [ eq : y_nps - t ] ) . in this case every data unit @xmath73 is multiplied by a unique coefficient @xmath74 .",
    "this will differentiate the encoded data @xmath75 .",
    "so , we have a system of @xmath28 independent equations at each round time that will be used to recover at most @xmath28 unknown variables .",
    "one way to select the coefficients @xmath76 s in each round such that we have a system of @xmath28 linearly independent equations is by using the matrix @xmath77 shown in  ( [ bch : parity ] ) .",
    "let @xmath78 be the order of a finite field , and @xmath79 be the root of unity in @xmath80 .",
    "then we can use this matrix to define the coefficients of the senders as : @xmath81.\\end{aligned}\\ ] ]    we have the following assumptions about the encoding operations as shown in scheme  ( [ scheme : encoding ] ) .",
    "clearly if we have one failure @xmath82 , then all coefficients will be one .",
    "the first sender will always choose the unit value in the first row .",
    "if we assume @xmath36 , then the @xmath83 equations in the first round are written as : @xmath84 @xmath85    therefore , the scheme that describes the encoding operations in the first round for @xmath28 link failures can be described as    @xmath86    this scheme gives the general theme to choose the coefficients at any particular round in any session . however , the encoded data @xmath41 s are defined as shown in equation  ( [ eq : tcofficients ] ) . in other words , for the first round in session one , the coefficients of the plain data @xmath87 are set to zero .",
    "the scheme can be extended directly to any encoded data @xmath70 .",
    "we know that the coefficients @xmath88 are elements of a finite field , @xmath80 , hence the inverses of these elements exist and they are unique .",
    "once a node fails which causes @xmath28 data units to be lost , and once the receivers receive @xmath28 linearly independent equations , they can linearly solve these equations to obtain the @xmath28 unknown data units .",
    "at one particular session j , we have three cases for the failures :    all @xmath28 link failures happened in the working paths , i.e. the working paths have failed to convey the messages @xmath89 in round @xmath71 . in this case ,",
    "@xmath37 equations will be received , @xmath28 of which are linear combinations of @xmath37 data units , and the remaining @xmath90 are explicit @xmath91 data units , for a total of @xmath37 equations in @xmath37 data units . in this case",
    "any @xmath28 equations ( packets ) of the @xmath28 encoded packets can be used to recover the lost data .",
    "all @xmath28 link failures happened in the protection paths at the failed node . in this case , the exact remaining @xmath37 packets are working paths and they do not experience any failures . therefore , no recovery operations are needed .",
    "the third case is that the failure might happen in some working and protection paths simultaneously in one particular round in a session .",
    "the recover can be done using any @xmath28 protection paths as shown in case i.",
    "in this section we derive lower and upper bounds on the alphabet size required for the encoding and decoding operations . in the proposed schemes we assume that unidirectional connections exist between the senders and receivers , which the information can be exchanged with little cost .",
    "the first result shows that the alphabet size required must be greater than the number of connections that carry unencoded data .",
    "let @xmath0 be the number of disjoint connections in the network model @xmath7 .",
    "then the receivers are able to decode the encoded messages over @xmath80 and will recover from @xmath92 path failures passing through if @xmath93 also , if @xmath94 , then @xmath95 .",
    "the binary field is sufficient in case of a single path failure .",
    "we will prove the lower bound by construction .",
    "assume a nps - t at one particular time @xmath96 in the round @xmath71 in a certain session @xmath63 .",
    "the protection code of nps - t against t path failures is given as @xmath97\\end{aligned}\\ ] ]    without loss of generality , the interpretation of equation  ( [ eq : protectioncode1 ] ) is as follows :    the columns correspond to the senders @xmath3 and rows correspond to t encoded data @xmath83 .",
    "the first row corresponds to @xmath98 if we assume the first round in session one .",
    "furthermore , every row represents the coefficients of every senders at a particular round .",
    "the column @xmath40 represents the coefficients of the sender @xmath22 through all protection paths @xmath99 .",
    "any element @xmath100 appears once in a column and row , except in the first column and first row , where all elements are one s .",
    "all columns ( rows ) are linearly independent",
    ".    due to the fact that the @xmath28 failures might occur at any @xmath28 working paths of @xmath101 , then we can not predict the @xmath28 protection paths as well .",
    "this means that @xmath28 out of the @xmath0 columns do not participate in the encoding coefficients , because @xmath28 paths will carry encoded data .",
    "we notice that removing any @xmath28 out of the @xmath0 columns in equation  ( [ eq : protectioncode1 ] ) will result in @xmath37 different coefficients in each column .",
    "furthermore any @xmath28 columns will give a @xmath102 square sub - matrix that has a full - rank , this will be proved in our extended work .",
    "therefore the smallest finite field that satisfies this condition must have @xmath103 elements .",
    "the upper bound comes from the case of no failures , hence @xmath104 .",
    "assume q is a prime , then the result follows .",
    "if @xmath105 , then in general the previous bound can be stated as @xmath106    we defined the feasible solution for the encoding and decoding operations of nps - t as the solution that has integer reachable upper bounds .",
    "the protection code  ( [ eq : protectioncode1 ] ) always gives a feasible solution .",
    "protection against node and link failures are extensional in all communication networks . in this paper",
    ", we presented a model for network protection against a single node failure , which is equivalent to protection against @xmath28 link failures , and can therefore be used to protect against @xmath28 link failures .",
    "we demonstrated an implementation strategy for the proposed network protection scheme .",
    "the network capacity is estimated , and bounds on the network resources are established",
    ". our future work will include approaches for deploying the proposed protection strategy .",
    "this research was supported in part by grants cns-0626741 and cns-0721453 from the national science foundation , and a gift from cisco systems ."
  ],
  "abstract_text": [
    "<S> the enormous increase in the usage of communication networks has made protection against node and link failures essential in the deployment of reliable networks . to prevent loss of data due to node failures </S>",
    "<S> , a network protection strategy is proposed that aims to withstand such failures . </S>",
    "<S> particularly , a protection strategy against any single node failure is designed for a given network with a set of @xmath0 disjoint paths between senders and receivers . </S>",
    "<S> network coding and reduced capacity are deployed in this strategy without adding extra working paths to the readily available connection paths . </S>",
    "<S> this strategy is based on protection against node failures as protection against multiple link failures . </S>",
    "<S> in addition , the encoding and decoding operational aspects of the premeditated protection strategy are demonstrated . </S>"
  ]
}
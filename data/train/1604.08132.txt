{
  "article_text": [
    "in an instance of the _ directed steiner tree _ ( dst ) problem , we are given a directed graph @xmath2 , non - negative costs @xmath3 for all @xmath4 , _ terminal _",
    "nodes @xmath5 , and a root @xmath6 .",
    "the remaining nodes in @xmath7 are the _",
    "steiner nodes_. the goal is to find the cheapest collection of edges @xmath8 such that for every terminal @xmath9 there is an @xmath10-path using only edges in @xmath11 . throughout , we let @xmath12 denote @xmath13 and @xmath1 denote @xmath14 .",
    "if @xmath15 , then the problem is simply the _ minimum - cost arborescence _ problem which can be solved efficiently  @xcite .",
    "however , the general case is well - known to be np - hard .",
    "in fact , the problem can be seen to generalize the _ set - cover _ and _ group steiner tree _ problems .",
    "the latter can not be approximated within @xmath16 for any constant @xmath17 unless @xmath18 @xcite .    for a dst instance @xmath19 ,",
    "let @xmath20 denote the value of the optimum solution for this instance say that an instance @xmath2 of dst with terminals @xmath21 is _ @xmath22-layered _ if @xmath23 can be partitioned as @xmath24 where @xmath25 and every edge @xmath26 has @xmath27 and @xmath28 for some @xmath29 .",
    "zelikovsky showed for any dst instance @xmath19 and integer @xmath30 that we can compute an @xmath22-layered dst instance @xmath31 in poly@xmath32 time such that @xmath33 and that a dst solution in @xmath31 can be efficiently mapped to a dst solution in @xmath19 with the same cost  @xcite .",
    "charikar et al .",
    "@xcite exploited this fact and presented an @xmath34-approximation with running time @xmath35 for any integer @xmath30 .",
    "in particular , this can be used to obtain an @xmath36-approximation in quasi - polynomial time and a polynomial - time @xmath37-approximation for any constant @xmath17 . finding a polynomial - time polylogarithmic approximation remains an important open problem .    for a set of nodes",
    "@xmath38 , we let @xmath39 be the set of edges entering @xmath38 . the following is a natural linear programming ( lp ) relaxation for directed steiner tree . @xmath40",
    "this lp is called a _ relaxation _ because of the natural correspondence between feasible solutions to a dst instance @xmath19 and feasible @xmath41-integer solutions to the corresponding lp ( [ lp : primal ] ) .",
    "thus , if we let @xmath42 denote the value of an optimum ( possibly fractional ) solution to lp ( [ lp : primal ] ) then we have @xmath43 . for a particular instance @xmath19",
    "we say the _ integrality gap _ is @xmath44 ; we are interested in placing the smallest possible upper bound on this quantity .",
    "interestingly , if @xmath45 ( the shortest path problem ) or @xmath15 ( the minimum - cost arborescence problem ) , the extreme points of are integral so the integrality gap is 1 ( @xcite and @xcite , respectively ) .",
    "however , in the general case zosin and khuller showed that is not useful for finding @xmath46-approximation algorithms for dst  @xcite .",
    "the authors showed that the integrality gap of relaxation can , unfortunately , be as bad as @xmath47 , even in instances where @xmath19 is a 4-layered graph . in their examples ,",
    "the number of nodes @xmath12 is exponential in @xmath1 so the integrality gap may still be @xmath48 for some constant @xmath49 .",
    "on the other hand , rothvoss recently showed that applying @xmath50 rounds of the semidefinite programming lasserre hierarchy to ( the flow - based extended formulation of ) yields an sdp with integrality gap @xmath51 for @xmath22-layered instances  @xcite .",
    "subsequently , friggstad et al .",
    "@xcite showed similar results for the weaker sherali - adams and lovsz - schrijver linear programming hierarchies .",
    "in this paper we consider the class of _ quasi - bipartite _ dst instances .",
    "an instance of dst is quasi - bipartite if the steiner nodes @xmath52 form an independent set ( i.e. , no directed edge has both endpoints in @xmath52 ) .",
    "such instances still capture the set cover problem , and thus do not admit an @xmath53-approximation for any constant @xmath17 unless @xmath54  @xcite .",
    "furthermore , it is straightforward to adapt known integrality gap constructions for set cover ( e.g.  @xcite ) to show that the integrality gap of can be as bad as @xmath55 in some instances .",
    "hibi and fujito  @xcite give an @xmath0-approximation for quasi - bipartite instances of dst , but do not provide any integrality gap bounds .",
    "quasi - bipartite instances have been well - studied in the context of _ undirected _ steiner trees .",
    "the class of graphs was first introduced by rajagopalan and vazirani  @xcite who studied the integrality gap of for the _ bidirected _ map of the given undirected steiner tree instances .",
    "currently , the best approximation for quasi - bipartite instances of undirected steiner tree is @xmath56 by goemans et al .",
    "@xcite who also bound the integrality gap of the bidirected cut relaxation by the same quantity .",
    "this is the same lp relaxation as ( [ lp : primal ] ) , applied to the directed graph obtained by replacing each undirected edge @xmath57 with the two directed edges @xmath58 and @xmath59 .",
    "this is a slight improvement over a prior @xmath60-approximation for any constant @xmath17 by byrka et al .",
    "@xcite .",
    "the best approximation for general instances of undirected steiner tree is @xmath61 for any constant @xmath17 @xcite .",
    "however , the best known upper bound on the integrality gap of the bidirected cut relaxation for non - quasi - bipartite instances is only 2 ; it is an open problem to determine if this integrality gap is a constant - factor better than 2 .",
    "our main result is the following .",
    "let @xmath62 be the @xmath12th harmonic number .",
    "[ thm : qbt - gap ] the integrality gap of lp ( [ lp : primal ] ) is at most @xmath63 in quasi - bipartite graphs with @xmath1 terminals .",
    "furthermore , a steiner tree with cost at most @xmath64 can be constructed in polynomial time .    as noted above , theorem [ thm : qbt - gap ]",
    "is asymptotically tight since any of the well - known @xmath65 integrality gap constructions for set cover instances with @xmath1 items translate directly to an integrality gap lower bound for ( [ lp : primal ] ) , using the usual reduction from set cover to 2-layered quasi - bipartite instances of directed steiner tree .",
    "this integrality gap bound asymptotically matches the approximation guarantee proven by hibi and fujito for quasi - bipartite dst instaces  @xcite .",
    "we remark that their approach is unlikely to give any integrality gap bounds for ( [ lp : primal ] ) because they iteratively choose _ low - density full steiner trees _ in the same spirit as  @xcite and give an @xmath66-approximation for finding the optimum dst solution @xmath67 that does not contain a path with @xmath68 steiner nodes @xmath52 .",
    "in particular , their approach will also find an @xmath0-approximation to the optimum dst solution in 4-layered graphs and we know the integrality gap in some 4-layered instances is @xmath47  @xcite .",
    "we prove theorem [ thm : qbt - gap ] by constructing a directed steiner tree in an iterative manner .",
    "an iteration starts with a _ partial _ steiner tree ( see definition [ def : partial ] below ) , which consists of multiple directed components containing the terminals in @xmath21 .",
    "then a set of arcs are purchased to _ augment _ this partial solution to one with fewer directed components .",
    "these arcs are discovered through a primal - dual moat growing procedure ; a feasible solution for the dual is constructed and the cost of the purchased arcs can be bounded using this dual solution .",
    "while the primal - dual technique has been very successful for _ undirected _ network design problems ( e.g. , see @xcite ) , far fewer success stories are known in _ directed _ domains .",
    "examples include a primal - dual interpretation of dijkstra s shortest path algorithm ( e.g. , see chapter 5.4 of @xcite ) , and edmonds  @xcite algorithm for minimum - cost arborescences . in both cases ,",
    "the special structure of the problem is instrumental in the primal - dual construction .",
    "one issue arising in the implementation of primal - dual approaches for directed network design problems appears to be a certain _ overlap _ in the _ moat _ structure maintained by these algorithms .",
    "we are able to handle this difficulty here by exploiting the quasi - bipartite nature of our instances .",
    "we now present an algorithmic proof of theorem [ thm : qbt - gap ] . as we will follow a primal - dual strategy , we first present the lp dual of .",
    "@xmath69    in ( [ lp : dual ] ) , the sums range only over sets of nodes @xmath38 such that @xmath70 and @xmath71 .",
    "our algorithm builds up partial solutions , which are defined as follows .",
    "[ def : partial ] a _ partial steiner tree _ is a tuple @xmath72 where , for each @xmath73 , @xmath74 is a subset of nodes , @xmath75 , and @xmath76 is a subset of edges with endpoints only in @xmath74 such that the following hold .    * the sets @xmath77 form a partition @xmath23 . *",
    "@xmath78 ( i.e. @xmath79 is a subset of steiner nodes ) .",
    "* @xmath80 and @xmath81 for each @xmath82 . * for every @xmath73 and every @xmath83 , @xmath76 contains an @xmath84-path .",
    "we say that @xmath79 is the set of _ free steiner nodes _ in @xmath85 and that @xmath86 is the _ head _ of @xmath74 for each @xmath73 .",
    "the edges of @xmath85 , denoted by @xmath87 , are simply @xmath88 .",
    "we say that @xmath89 are the",
    "_ components _ of @xmath85 where @xmath90 is the _ root component _ and @xmath91 are the _ non - root components_.    figure [ fig : partial ] illustrates a partial steiner tree .",
    "note that if @xmath85 is a partial steiner tree with @xmath92 non - root components , then @xmath87 is in fact a feasible dst solution .",
    "finally , for a subset of edges @xmath11 we let @xmath93 .",
    "non - root components ( the root is pictured at the top ) .",
    "the only edges shown are those in some @xmath76 .",
    "the white circles are the heads of the various sets @xmath74 and the black circles are terminals that are not heads of any components .",
    "the squares outside of the components are the free steiner nodes @xmath79 .",
    "note , in particular , that each head can reach every node in its respective component .",
    "we do not require each @xmath76 to be a minimal set of edges with this property . ]",
    "our algorithm builds up partial steiner trees in an iterative manner while ensuring that the cost does not increase by a significant amount between iterations .",
    "specifically , we prove the following lemma in section [ sec : growing ] . recall that @xmath42 refers to the optimum solution value for ( [ lp : primal ] ) .",
    "[ lem : grow ] given a partial steiner tree @xmath85 with @xmath30 non - root components , there is a polynomial - time algorithm that finds a partial steiner tree @xmath94 with @xmath95 non - root components such that @xmath96    theorem [ thm : qbt - gap ] follows from lemma [ lem : grow ] in a standard way .",
    "initialize a partial steiner tree @xmath97 with @xmath1 non - root components as follows .",
    "let @xmath79 be the set of all steiner nodes , @xmath98 , and @xmath99 .",
    "furthermore , label the terminals as @xmath100 and for each @xmath101 let @xmath102 and @xmath103 .",
    "note that @xmath104 .",
    "iterate lemma [ lem : grow ] to obtain a sequence of partial steiner trees @xmath105 where @xmath106 has @xmath107 non - root components such that @xmath108 and @xmath109 for each @xmath110 .",
    "return @xmath111 as the final steiner tree .",
    "that @xmath112 can be found efficiently follows simply because we are iterating the efficient algorithm from lemma [ lem : grow ] at most @xmath1 times .",
    "the cost of this steiner tree can be bounded as follows .",
    "@xmath113    the idea presented above resembles one proposed by guha et al .",
    "@xcite for bounding the integrality gap of a natural relaxation for _ undirected _ node - weighted steiner tree by @xmath0  @xcite . like our approach , guha et al .  also build a solution incrementally . in each _ phase _ of the algorithm , the authors reduce the number of connected components of a partial solution by adding vertices whose cost is charged carefully to the value of a dual lp solution that the algorithm constructs simultaneously .",
    "consider a given partial steiner tree @xmath72 with @xmath30 non - root components .",
    "lemma [ lem : grow ] promises a partial steiner tree @xmath94 with @xmath95 non - root components with @xmath114 . in this section",
    "we will present an algorithm that _ augments _ forest @xmath85 in the sense that it computes a set of edges to _ add _ to @xmath85 .",
    "the proof presented here is constructive : we will design a _ primal - dual _ algorithm that maintains a feasible dual solution for , and uses the structure of this solution to guide the process of adding edges to @xmath85 .",
    "for any two nodes",
    "@xmath115 , let @xmath116 be the cost of the cheapest @xmath117-path in @xmath19 .",
    "more generally , for a subset @xmath118 and a node @xmath119 we let @xmath120 .",
    "we will assume that for every @xmath73 and @xmath121 that @xmath122 as otherwise , we could merge @xmath74 and @xmath123 by adding the @xmath124-cost @xmath125-path to @xmath85 .",
    "the usual conventions of primal - dual algorithms will be adopted .",
    "we think of such an algorithm as a continuous process that increases the value of some dual variables over time . at time",
    "@xmath126 , all dual variables are initialized to a value of @xmath124 . at any point in time , exactly @xmath22 dual variables will be raised at a rate of one unit per time unit .",
    "we will use @xmath127 for the time at which the algorithm terminates .",
    "as is customary , we will say that an edge @xmath128 _ goes tight _ if the dual constraint for @xmath128 becomes tight as the dual variables are being increased .",
    "when an edge goes tight , we will perform some updates to the various sets being maintained by the algorithm . again",
    ", the standard convention applies that if multiple edges go tight at the same time , then we process them in any order .",
    "algorithm [ alg : grow ] describes the main subroutine that augments the partial steiner tree @xmath85 to one with fewer components .",
    "it maintains a collection of _ moats _ @xmath129 and edges @xmath130 for each @xmath82 , while ensuring that the dual solution @xmath131 it grows remains feasible .",
    "mainly to aid notation , our algorithm will maintain a so called _ virtual body _",
    "@xmath132 for all @xmath73 such that @xmath133 .",
    "we will ensure that each @xmath134 has a _ mate _",
    "@xmath135 such that the edge @xmath58 has cost no more than @xmath127 .",
    "for notational convenience , we will let @xmath136 be the virtual body of the root component .",
    "the algorithm will not grow a moat around the root since dual variables do not exist for sets containing the root .",
    "our algorithm will ensure that moats are pairwise _ terminal - disjoint_. in fact , we ensure that any two moats may only intersect in @xmath79 .",
    "terminal - disjointness together with the quasi - bipartite structure of the input graph will allow us to charge the cost of arcs added in the augmentation process to the duals grown .",
    "an intuitive overview of our process is the following . at any time @xmath137 ,",
    "the moats @xmath138 will consist of all nodes @xmath139 with @xmath140 .",
    "the moats @xmath138 will be grown until , at some time @xmath127 , for at least one pair @xmath141 with @xmath142 , there is a tight path connecting @xmath143 to @xmath86 . at this point",
    "the algorithm stops , and adds a carefully chosen collection of tight arcs to the partial steiner tree that merges @xmath123 and @xmath74 ( and potentially other components ) .",
    "crucially , the cost of the added arcs will be _ charged _ to the value of the dual solution grown around the merged components .",
    "due the structure of quasi - bipartite graphs , we are able to ensure that in each step of the algorithm the active moats pay for at most one arc that is ultimately bought to form @xmath94 . also , if @xmath94 has @xmath95 non - root components then each arc was paid for by moats around at most @xmath144 different heads .",
    "so , the total cost of all purchased arcs is at most @xmath145 .",
    "finally , the total dual grown is @xmath146 , which is @xmath147 due to feasibility , so the cost of the edges bought can be bounded by @xmath148 .",
    "now we will be more precise .",
    "the primal - dual procedure is presented in algorithm [ alg : grow ] .",
    "the following invariants will be maintained at any time @xmath149 during the execution of algorithm [ alg : grow ] .    1 .   for each @xmath82 , @xmath150 and @xmath151 (",
    "so there is a variable @xmath152 in the dual ) .",
    "2 .   for each @xmath82 , @xmath153 where @xmath154 .",
    "3 .   @xmath155 and both @xmath156 for distinct @xmath157 .",
    "for each @xmath82 we have @xmath133 .",
    "furthermore , for each each @xmath158 there is a _ mate _",
    "@xmath135 such that @xmath26 and @xmath159 .",
    "@xmath131 is feasible for lp ( [ lp : dual ] ) with value exactly @xmath160 .",
    "these concepts are illustrated in figure [ fig : pd_process ] .",
    "( in particular , @xmath139 is the only lying in both moats ) .",
    "also , @xmath161 lies in the virtual body for the left partial steiner tree and the dashed arc entering @xmath161 is coming from its mate .",
    "the edges @xmath76 from the original partial steiner trees are not shown . observe that if any edge entering @xmath139 goes tight then it must be from either @xmath162 or some terminal ( because @xmath19 is quasi - bipartite ) .",
    "this would allow us to merge at least one partial steiner tree into the body of another .",
    "[ fig : pd_process ] ]    @xmath163 @xmath164 for @xmath73 @xmath165    raise @xmath166 uniformly for each moat @xmath167 until some edge @xmath58 goes tight [ step : grow ]    [ step : bunch ] the partial steiner tree @xmath94 described in lemma [ lem : augment ] .",
    "[ step : stop ] let @xmath138 be the unique moat with @xmath168 c.f . proposition [ prop : unique ] [ step : unique ] @xmath169 [ step : upa ] @xmath170 [ step : upb ] step      [ lem : invariants ] invariants 1 - 5 are maintained by algorithm [ alg : grow ] until the condition in the * if * statement in step is true .",
    "furthermore , the algorithm terminates in @xmath171 iterations",
    ".    clearly the invariants are true after the initialization steps ( at time @xmath172 ) , given that @xmath122 for any @xmath173 . to see why algorithm [ alg : grow ] terminates in a polynomial number of iterations , note that each iteration increases the size some moat by 1 and does not decrease the size of any moats .",
    "so after at most @xmath174 iterations some moat will grow to include the virtual body of another moat , at which point the algorithm stops .",
    "assume now that the invariants are true at some point just before step is executed and that the condition in step is false after step finishes .",
    "we will show that the invariants continue to hold just before the next iteration starts .",
    "we let @xmath58 denote the edge that went tight that is considered in step .",
    "we also let @xmath175 denote the total time the algorithm has executed ( i.e. grown moats ) up to this point .    before proceeding with our proof , we exhibit the following useful fact . in",
    "what follows , let @xmath176 be the moat around @xmath177 at any time @xmath178 during the algorithm .",
    "this proposition demonstrates how we control the overlap of the moats by exploiting the quasi - bipartite structure .",
    "[ prop : unique ] if @xmath168 , then @xmath179 for any @xmath180 , and for any @xmath178 .",
    "suppose , for the sake of contradiction , that @xmath181 for some @xmath180 and @xmath178 .",
    "since @xmath176 is a subset of @xmath182 , the moat containing @xmath177 at time @xmath175 , we must have @xmath183 .",
    "invariant 3 now implies that @xmath184 . since @xmath19 is quasi - bipartite , then @xmath185 .",
    "therefore @xmath186 for some @xmath187 .",
    "since @xmath188 or @xmath189 , then the terminating condition in step would have been satisfied as @xmath190 . a contradiction .",
    "following proposition [ prop : unique ] , we let @xmath191 be the unique index such that @xmath168 as in step .",
    "* invariant 1 * + first note that @xmath138 never loses vertices during the algorithm s execution , and it therefore always contains head vertex @xmath86 . also , vertex @xmath161 is not part of @xmath90 as otherwise the algorithm would have terminated in step .",
    "hence @xmath192 also does not contain the root node @xmath162 .",
    "* invariant 2 * + this is just a reinterpretation of dijkstra s algorithm in the primal - dual framework ( e.g. chapter 5.4 of @xcite ) , coupled with the fact that no edge considered in step in some iteration crosses more than one moat at any given time ( proposition [ prop : unique ] ) .",
    "* invariant 3 * + suppose @xmath193 for some @xmath173 .",
    "this implies @xmath194 , and hence @xmath195 .",
    "thus , the termination condition in step was satisfied and the algorithm should have terminated ; contradiction .",
    "if @xmath139 is not added to @xmath132 , and thus @xmath132 remains unchanged , @xmath196 continues to hold for @xmath180 .",
    "we also must have that @xmath197 for @xmath173 , as otherwise @xmath198 and this would violate the termination condition in step .",
    "now suppose that @xmath139 is added to @xmath132 .",
    "then for @xmath180 we still have @xmath199 as otherwise @xmath200 which contradicts @xmath201 and the fact that invariant 3 holds at the start of this iteration .",
    "we also have that @xmath202 as otherwise @xmath203 . but",
    "this would mean that @xmath204 as well by proposition [ prop : unique ] .",
    "we established above that @xmath205 .",
    "however , @xmath206 contradicts the fact that @xmath19 is quasi - bipartite .",
    "* invariant 4 * + that @xmath207 is clear simply because we only add nodes to the sets @xmath132 .",
    "suppose now that @xmath139 is added to @xmath132 . in this case",
    ", @xmath208 as @xmath207 from the start .",
    "we claim that @xmath139 can also not be part of @xmath123 for some @xmath180 , since otherwise @xmath209 , contradicting invariant 3 .",
    "hence @xmath184 .",
    "note that the quasi - bipartiteness of @xmath19 implies that @xmath185 , and hence @xmath135 .",
    "proposition [ prop : unique ] finally implies that only the moats crossed by @xmath58 are moats around @xmath191 , so since the algorithm only grows one moat around @xmath191 at any time we have @xmath159 , and this completes the proof of invariant 4 .",
    "* invariant 5 * + the step stops the first time a constraint becomes tight , so feasibility is maintained . in each step",
    ", the algorithm grows precisely @xmath22 moats simultaneously . because the objective function of is simply the sum of the dual variables , then the value of the dual is just @xmath22 times the total time spent growing dual variables .      to complete the final detail in the description of the algorithm",
    ", we now show how to construct the partial steiner tree after step has been reached .",
    "lemma [ lem : invariants ] shows that invariants 1 through 5 hold just before step in the final iteration .",
    "say the final iteration executes for @xmath210 time units and that @xmath58 is the edge that goes tight and was considered in step .",
    "[ lem : augment ] when step is reached in algorithm [ alg : grow ] , we can efficiently find a partial steiner tree @xmath94 with @xmath95 non - root components such that @xmath211 .    let @xmath212 be the unique index such that @xmath198 at time @xmath127 .",
    "there is exactly one such @xmath212 because @xmath213 for @xmath173 is ensured by the invariants .",
    "next , let @xmath214 and note that @xmath215 consists of all indices @xmath216 ( except , perhaps , @xmath212 ) such that @xmath217 . by the termination condition , @xmath218 .",
    "vertex @xmath161 lies in @xmath143 by definition .",
    "if @xmath219 then we let @xmath220 be the mate of @xmath161 as defined in invariant 4 .",
    "otherwise , if @xmath221 , we let @xmath222 .    for notational convenience ,",
    "we let @xmath223 be the path consisting of the single edge @xmath224 ( or just the trivial path with no edges if @xmath225 ) . in either case , say cost of @xmath223 is @xmath226 where @xmath227 ( c.f .",
    "invariant 4 ) . for each @xmath228 , let @xmath229 be a shortest @xmath230-path .",
    "invariant 2 implies that @xmath231 for some @xmath232 .",
    "observe also that the tightness of @xmath58 at time @xmath127 and the definition of @xmath215 imply that @xmath233 in fact , precisely a @xmath234-value of the dual variables for @xmath235 contribute to @xmath236 ; the contribution of @xmath212 s variables to @xmath236 is at most @xmath234 .    construct a partial steiner tree @xmath94 obtained from @xmath85 and algorithm [ alg : grow ] as follows .",
    "* the sets @xmath237 and head @xmath238 are unchanged for all @xmath239 .",
    "* replace the components @xmath240 with a component @xmath241 having head @xmath242 .",
    "the edges of this component in @xmath94 are @xmath243 . * the free steiner nodes @xmath244 of @xmath94 are the steiner nodes not contained in any of these components .",
    "namely , @xmath244 consists of those nodes in @xmath79 that are not contained on any path @xmath245 .",
    "we show that steiner tree @xmath94 as constructed above satisfies the conditions stated in lemma [ lem : grow ] .",
    "we first verify that @xmath94 as constructed above is indeed a valid partial steiner tree .",
    "clearly the new sets @xmath246 and @xmath247 partition @xmath23 and @xmath244 is a subset of steiner nodes .    note that if @xmath248 in the above construction , then @xmath249 because no moat contains @xmath162 .",
    "thus , if @xmath90 is replaced when @xmath247 is constructed , then @xmath162 is the head of this new component .",
    "next , consider any @xmath250 .",
    "if @xmath251 then there is an @xmath252-path in @xmath253 .",
    "if @xmath254 then it can be reached from @xmath177 in @xmath255 as follows .",
    "follow the @xmath256-path in @xmath257 , then the @xmath258 path @xmath223 , cross the edge @xmath58 , follow @xmath229 to reach @xmath259 , and finally follow the @xmath260-path in @xmath261 . finally , if @xmath262 for any @xmath263 then @xmath264 lies on some path @xmath229 , in which case it can be reached in a similar way .",
    "it is also clear that @xmath265 and that the number of non - root components in @xmath94 is @xmath266 . also , @xmath267 is at most the cost of the the paths @xmath268 plus @xmath236 .",
    "it now easily follows from and that @xmath269 the last bound follows because the feasible dual we have grown has value @xmath270 .",
    "let @xmath271 be the number of nonroot components in @xmath94 .",
    "conclude by observing @xmath272 .    to wrap things up",
    ", executing algorithm [ alg : grow ] and constructing the partial steiner tree as in lemma [ lem : augment ] yields the partial steiner tree that is promised by lemma [ lem : grow ] .",
    "we have shown that the integrality gap of lp relaxation ( [ lp : primal ] ) is @xmath0 in quasi - bipartite instances of directed steiner tree .",
    "the gap is known to be @xmath47 in 4-layered instances @xcite and @xmath0 in 3-layered instances @xcite . since",
    "quasi - bipartite graphs are a generalization 2-layered instances , it is natural to ask if there is a generalization of 3-layered instances which has an @xmath0 or even @xmath273 integrality gap .",
    "one possible generalization of 3-layered graphs would be when the subgraph of @xmath19 induced by the steiner nodes does not have a node with both positive indegree and positive outdegree .",
    "none of the known results on directed steiner tree suggest such instances have a bad gap .",
    "even when restricted to 3-layered graphs , a straightforward adaptation of our algorithm that grow moats around the partial steiner tree heads until some partial steiner trees absorbs another fails to grow a sufficiently large dual to pay for the augmentation within any reasonable factor .",
    "a new idea is needed ."
  ],
  "abstract_text": [
    "<S> we demonstrate that the integrality gap of the natural cut - based lp relaxation for the directed steiner tree problem is @xmath0 in quasi - bipartite graphs with @xmath1 terminals . </S>",
    "<S> such instances can be seen to generalize set cover , so the integrality gap analysis is tight up to a constant factor . </S>",
    "<S> a novel aspect of our approach is that we use the primal - dual method ; a technique that is rarely used in designing approximation algorithms for network design problems in directed graphs . </S>"
  ]
}
{
  "article_text": [
    "signal correlation is one of the most computationally demanding and communication intensive tasks in the signal processing flow of a radio telescope array . it has been traditionally processed using field programmable gate arrays ( fpgas ) to achieve excellent power efficiency .",
    "however , high development challenges and lack of portability make it an expensive task either to design a system from scratch , to scale an existing one or to introduce new functionalities . with the fast development of general purpose hardware platforms ,",
    "it is likely that at some point the relatively low development cost and high flexibility of software correlators make them a viable option .",
    "there have been a growing number of software correlator projects over the last decade . the most widely used cpu cluster based vlbi correlator difx designed by deller et al .",
    "@xcite implemented a time division multiplexed system , in which the inter - node synchronization is less critical and hence it achieves excellent performance even given unbalanced computing resources or non - ideal network conditions .",
    "recent research by dodson et al .",
    "@xcite showed that difx can be efficiently implemented on supercomputers with infiniband networks as well as on the intel mic architecture , and it scales linearly up to 50 nodes after which network bottlenecks cut in .",
    "another well - known software correlator was designed for the low frequency array ( lofar ) .",
    "being one of the first new generation telescopes intensively using interferometry techniques , lofar was also one of the first real world projects to use a dedicated software correlator .",
    "a blue gene / l supercomputer is used in the lofar system for correlation and post - correlation processing by romein et al .",
    "computationally intensive jobs in the lofar software system are optimized using assembly language and as a result , it has achieved 98% of the peak floating - point capability of the hardware architecture .    while the cpu - based software correlators proved",
    "the capability , gpus ( graphic processing unit ) appear to be increasingly applicable for this type of work . in a comparison of correlation on different hardware architectures by nieuwpoort et al .",
    "@xcite , nvidia gpus showed the best absolute performance and the second best power efficiency , which revealed the feasibility of building a powerful gpu - based correlation system .",
    "gpus were first used for correlation a decade ago by schaaf et al .",
    "@xcite , when graphic programming techniques such as the cg language had to be heavily involved to get a general computing problem solved on a gpu .    over the last few years",
    "there have been several gpu - based software correlators .",
    "these took advantage of nvidia s compute unified device architecture ( cuda ) , in which gpus can be treated as generic computing devices in addition to graphic chips .",
    "this significantly reduced the programming challenge , and hence more efforts could be put into the optimization , rather than making algorithms compatible with the hardware .",
    "the first cuda - based gpu correlator designed by harris et al .",
    "@xcite took advantage of the cufft library for its f - engine and implemented a series of x - engines in different parallel fashions , which achieved a considerable performance gain compared with cpu correlators . another project conducted by wayth et al .",
    "@xcite implemented similar parallel approaches to those presented by harris et al . @xcite and constructed a real - time correlator for the prototype of the murchison widefield array ( mwa ) .",
    "the most recent work by clark et al .",
    "@xcite presented a highly optimized implementation on nvidia s gtx480 gpu and achieved 79% of the peak single precision capacity of the hardware architecture .",
    "the world s largest radio telescope , the square kilometer array ( ska ) , is also considering a correlation system based on gpu clusters as described by daddario @xcite .",
    "however , previous research has focused on single - gpu approaches with very little consideration given to data distribution across multiple gpus .",
    "the data distribution pattern used in cpu cluster correlators are yet to be verified with gpu clusters given the number of distinctive features of gpu correlator engines .",
    "this paper presents a software correlator for heterogeneous high performance computing clusters , especially gpu clusters , mainly focusing on data distribution models .",
    "two space - division network models are proposed in this paper and are compared with a re - implemented time - division model which was first introduced by deller et al . @xcite .",
    "the correlator engines presented by harris et al .",
    "@xcite are adopted and re - implemented in the open computing language ( opencl ) for compatibility with different computing devices .",
    "the scope of this work is to investigate possible solutions for solving large - scale correlation problems such as those ska would face .",
    "there are two main approaches to radio astronomy signal correlation .",
    "the first , a lag or xf correlator , correlates signals in the time domain , before transformation to the frequency domain via the fourier transform .",
    "this method is often used in hardware implementations where the initial correlation can be performed at lower bit precision . the second , an fx correlator ,",
    "instead transforms the signals using the fourier transform , and then performs the correlation via conjugate multiplication .",
    "this method is predominantly used in software correlators , as it requires fewer total operations . in both methods",
    "the results are usually then accumulated . as this work will utilize the fx correlator , a brief mathematical introduction follows .    for a discrete time signal",
    "@xmath0 $ ] of n samples , with @xmath1 $ ] , the discrete fourier transform is first applied to obtain the spectra @xmath2 $ ] for frequencies @xmath3 $ ] as shown in equation [ eq : dft ] :    @xmath4 = \\sum_{n=0}^{n-1 } s[n ] e^{-j ( 2 \\pi / n ) k n}\\ ] ]    then for @xmath5 $ ] and @xmath6 $ ] , where @xmath7 is the index of the spectra over time , @xmath8 and @xmath9 are the index of each signal in the pair , the complex visibilities @xmath10 $ ] are obtained using equation [ eq : dft_corr ] :    @xmath11=\\sum_{a=0}^{a-1}s_{a , i}^\\ast[k ] s_{a , j}[k]\\ ] ]    in an fx correlator implementation , the two steps are usually named the f - engine and the x - engine .",
    "this work takes advantage of the apple opencl fft to implement the f - engine . for the x - engine , the 1xgxg model used by harris et al .",
    "@xcite is adopted and re - implemented in opencl with modifications to fit cluster models .",
    "the time - division pattern for correlation , which was used by deller et al .",
    "@xcite , is the first data distribution model we implemented in this work .",
    "as shown in figure [ fig : timedivision ] , input data streams on streaming nodes are divided into time slices and distributed to correlation nodes .",
    "each correlation node is responsible for some of the time slices across all input streams .",
    "an input stream here refers to the sampled digital data from an antenna , which does not include the case where the data is channelized into sub - bands or where multiple polarizations are present per stream .",
    "the time - division model is highly efficient in terms of data transfers as all input data chunks are transferred only once .",
    "moreover , every correlation node processes independent data , and as a result , synchronization between correlation nodes becomes less important .",
    "however , as the time - division model was originally proposed for a cpu cluster correlator , simply replacing the fx engines with gpu implementations could potentially cause problems . based on our preliminary testing ,",
    "when the number of input data streams becomes very large , the efficiency of the fx engines drops dramatically . in this case",
    "the time - division model is not necessarily optimal on a gpu cluster even though it is highly efficient in terms of data transfers .",
    "furthermore , the time - division model processes all baselines on a single node , thus when it comes to a point where the number of data streams is so large that the gpu memory is not able to hold all baseline data at a minimum length of a single fft , the model would fail .",
    "thus it is relevant to consider other data distribution models for gpu cluster correlators .",
    "an alternative approach is to implement data distribution models based on division in space rather than time . shown in figure [ fig : group ] are correlation jobs divided into groups based on the space - division pattern . instead of processing all correlation pairs inside a single node and assigning different nodes with different time slices ,",
    "a space - division model divides correlation pairs into groups , and each node assigned with a certain group is responsible for all time slices .",
    "thus , given the total number of input streams , the number that a single node needs to process is reduced , which would improve the gpu x - engine performance for cases with a large number of streams .",
    "the exact number of streams per node would still be dependent on the total number of correlation nodes required to achieve real - time processing .",
    "ultimately , to completely control the number of streams per node , a hybrid system would need to be used , but this is left for future investigations .     and @xmath9 .",
    "groups labeled using numbers in the larger font correspond to correlation nodes.,scaledwidth=55.0% ]    space - division models involve necessary modifications to the x - engine , since x - engines designed for single gpu correlators process all input data streams at once in a triangle pattern for all non - redundant pairs , while some of the nodes in the space - division model need to process two parts of the input streams in a rectangle pattern for cross - correlations only .",
    "moreover , it involves redundant data transfers as correlation nodes in the same row or column require the same input data .",
    "it is then of significant importance to design network topologies intelligent enough to handle the huge data efficiently . in this paper , we propose two network topologies to investigate the performance of the space - division model .",
    "the first space - division based network topology we designed is the broadcasting model shown in figure [ fig : broadcasting ] , which uses streaming nodes to broadcast the data across correlation nodes .",
    "equation [ eq : oc_os ] shows how the number of streaming nodes , @xmath12 , varies with the number of correlation nodes , @xmath13 .",
    "@xmath14    given the data distributing pattern , there are two methods for the data transfer .",
    "one of them is to use a native broadcast routine , which could be either at the mpi level , or a hardware multicast , while the other is to send and receive data in loops using basic point - to - point communications .",
    "figure [ fig : bdcdiagram ] shows the diagrams of both methods based on the instance given in figure [ fig : broadcasting ] with 10 correlation nodes and 4 streaming nodes .",
    "an important fact revealed by figure [ fig : bdcdiagram ] is that a native broadcast routine , or even a hardware multicast , would not help improve the overall data transfer efficiency for our models if it is implemented with blocking collective calls .",
    "this is because blocking broadcasts for each stream can not occur concurrently , due to the overlaps between destinations of streaming nodes doing broadcast . in this case , streaming nodes have to broadcast in sequence as shown in figure [ fig : bdcdiagram1 ] , and this results in the same cost , if not more , as basic point - to - point communications in [ fig : bdcdiagram2 ] .",
    "moreover , non - blocking point - to - point communications do not help either , as there is a limitation of bandwidth rather than latency .",
    "however , if a non - blocking multicast routine is available , all broadcasts in figure [ fig : bdcdiagram1 ] can occur in two relative time units in principle , since there are at most two listening events overlapped on every correlation node .    to examine the timing in more detail , we first assume that all communications are blocking , every correlation node is assigned with constant correlation tasks , and every streaming node deals with data in a constant size .",
    "we also consider @xmath15 the time taken by a single data transfer , which could be either a send and receive pair or a broadcast .",
    "given @xmath16 is the time taken by an execution of the fx engines , @xmath12 is the number of streaming nodes , then the time taken by an entire processing cycle , @xmath17 , can be obtained using equation [ eq : bdcb ] for both cases show in figure [ fig : bdcdiagram ] .",
    "@xmath18    this indicates that by using blocking communications , the larger the number of streaming nodes , the more significant influence data transfers have on the overall performance , which leads to bad scalability . on the other hand ,",
    "if non - blocking point - to - point communications and double buffering are both applied , then    @xmath19    improvements are seen in this case but when @xmath12 is so large that @xmath20 , the data transfer would still become a bottleneck , and the scalability problem still exists . however , if non - blocking multicasts are used in this model , then    @xmath21    hence non - blocking multicasts can largely improve the efficiency , and in this case the time taken by a processing cycle is independent of the cluster size , which results in an excellent scalability as well .    in practice , collective broadcasts usually mean more overhead and synchronization cost .",
    "hence the actual performance would never reach the ideal situation , especially when using blocking routines . the broadcast routine used by openmpi as presented by fagg et al .",
    "@xcite utilize a variety of software algorithms .",
    "however , the performance of these routines would be less than a true hardware multicast . in this work we only used the openmpi broadcast routine due to the limitation of the developing platform .",
    "we also completed another implementation based on basic point - to - point communications to verify our analysis above .          in order to avoid the scalability problem while making it suitable for generic environments without requiring a specific non - blocking multicast support , we proposed the passing network topology as our second space - division model .",
    "as shown in figure [ fig : passing ] , in this model the input data is passed between neighbor nodes . since all correlation nodes take part in data streaming , dedicated streaming nodes are no longer necessary , which improves the node efficiency as a whole .",
    "figure [ fig : psdiagram ] illustrates the diagram of the passing model working with 10 correlation nodes , from which we can see that in this model each correlation node deals with four data transfers at most , being two sends and two receives , per processing cycle . with the same definitions as in equation [ eq : bdcb ] ,",
    "the time taken by a processing cycle can be obtained by equation [ eq : psb ] .",
    "@xmath22    similarly , if non - blocking communications and double buffering are applied , then    @xmath23    thus the data transfer to execution ratio is independent of the cluster scale , which means a better theoretical scalability than the broadcasting model with blocking communication calls .",
    "additionally , by starting data flows from the auto - correlation nodes , it is ensured that every cross - correlation node has an identical distance from the two data sources it claims . as a result , for a cross - correlation node",
    ", the two chunks of input data from two different sources arrive at the same time , which saves any extra synchronization cost for input .",
    "it is noticeable from figure [ fig : psdiagram ] that correlation nodes are working asynchronously .",
    "more specifically , correlation nodes farther away from data sources have longer delays over time , although a processing cycle on different nodes still costs the same . taking this into account , given @xmath12 is the number of data sources , which is equal to the number of auto - correlation nodes lying on the hypotenuse of the triangle , and @xmath24 is the number of processing cycles in total , equation [ eq : psb ] should be re - written as    @xmath25    when @xmath26 , we have    @xmath27    hence the average amount of time taken by a processing cycle is not affected by the delay given the number of processing cycles is sufficiently large .",
    "however , the delay of a correlation node , @xmath28 , increases with the distance from the node to data sources , @xmath29 , as given by equation [ eq : delay ] , and this could have some negative effects on latency - critical systems .",
    "@xmath30    since the passing model proves to have an excellent scalability in principle , we implemented it in both blocking and non - blocking styles for comparison and analysis .",
    "double buffering is also applied in the non - blocking routine to make all data transfers happen concurrently .",
    "testing was carried out on the fornax supercomputer , which was designed for data intensive research , especially radio astronomy related data processing .",
    "fornax consists of 96 nodes , each having two intel xeon x5650 cpus , a nvidia tesla c2075 gpu and 72 gigabytes of system memory .",
    "the intel 5520 chipset is used in the compute node architecture , which enables the nvidia tesla c2075 gpu to work on an x16 pci - e slot and two 40gbps qlogic infiniband iba 7322 qdr cards on two x8 pci - e slots .",
    "the main storage of fornax is a 500 tb lustre - based shared file system .",
    "one of the two infiniband networks is dedicated to the communication between compute nodes and the lustre cluster .    in terms of the software environment",
    ", fornax runs centos 6.2 with 2.6.32-131.21.1.el6.x86_64 linux kernel .",
    "the openmpi version adopted in this work is 1.6.0 .",
    "default configurations are applied for all communication stacks since our preliminary testing showed that the data transfers almost achieved the theoretical limit of the infiniband network by doing so .",
    "cuda 4.1.28 library with opencl 1.1 support was used for gpu computing .",
    "the fft implementation used for the f - engine was apple opencl fft 1.6 .",
    "all models presented were tested with the apple opencl fft for the f - engine and the modified 1xgxg model proposed by harris et al .",
    "@xcite for the x - engine .",
    "as the main purpose of this paper is to compare different data distribution models , the f - engine does not include station - based functions other than the fft , such as fringe rotation .",
    "furthermore , this paper is essentially looking at ska - scale arrays consisting of 300 to 3000 antennas , and in this case the x engine is more critical as its computational demand scales quadratically with the number of data streams while the f engine scales linearly .",
    "the metric flops used in all testing results is in single - precision and refers to the actual mathematical operations that are necessary for an fx correlator , which does not include indexing and redundant calculations for optimizing either the gpu memory access or the data transfers .",
    "this is a fair method to compare the performance between implementations on different hardware architectures , as the cost of indexing and redundant calculations could vary by several times in order to optimize algorithms for different hardware architectures or different network patterns , while that of the ultimate mathematical operations needed by the correlation algorithm does not change . in our tests",
    "all input data is packed in 8-bit integers .",
    "testing first investigated how the performance in tera - flops scales with the number of correlation nodes across all network models .",
    "as shown in figure [ fig : t ] , testing is conducted in four schemes , with the number of input data streams varying from 128 to 3072 .",
    "the six configurations used are the broadcasting model with the mpi_bcast routine and point - to - point data transfers , the passing model with single buffering and double buffering , and the time - division model with 4 and 8 streaming nodes .",
    "when the number of streams reaches 3072 , the time - division model is no longer available since a single gpu does not have enough memory to process all the streams .",
    "this is not an issue for the space - division models , as they subdivide the problem between gpus .",
    "the number of correlation nodes , which is also the number of gpus executing the fx engines , excluding streaming nodes , varies from 6 to the maximum configuration obtainable on fornax for each method .",
    "an fft length of 256 is used across all tests , as our preliminary tests showed that the throughput of the apple opencl fft does not significantly vary with the fft length in the range from 128 to 2048 , and the x stage performance is invariant with respect to fft length as long as there is sufficient data to feed the massively parallel model of gpu computing .    shown in figure",
    "[ fig : pn ] is the overall performance averaged over the total number of correlation nodes .",
    "this demonstrates the node efficiency across all network models .",
    "based on our preliminary testing , the peak performance that the fx engines achieved on a single gpu is approximately 105 gflops .",
    "thus results shown in figure [ fig : pn ] also reveal how the overall performance is affected by the network transport involved for the cluster model .",
    "testing then investigated the sampling rate of input data achieved using our models with different configurations .",
    "as shown in figure [ fig : band ] , the number of data streams scales from 64 to 3072 .",
    "the lower limit was chosen as below it the streams are too few to feed the space - division models , while the upper limit was chosen as it is the largest number of data streams likely to be used in the foreseeable future .",
    "the time - division model was only tested with up to 2048 data streams due to the limit of the model suitability for the gpu hardware architecture .",
    "the output visibilities were not collected for the performance tests presented above . for correctness tests",
    ", we used the adaptive io system ( adios ) devised by jin et al .",
    "@xcite to write visibility files for up to 300 input data streams . by using adios on the lustre file system",
    ", data chunks for different subsets can be filled into a global data space asynchronously , and this enables each correlation node to write visibility data independently while keeping the data in a globally correct order .",
    "taking advantage of the buffering technique and the non - blocking io mechanism provided by adios , the performance loss caused by io was too little for us to measure for the testing schemes presented above working with up to 300 input data streams .",
    "testing results revealed that on current hardware architectures the time - division multiplex model is still the best choice for a gpu cluster correlator when the number of data streams is less than 1024 , as shown in figure [ fig : band ] . in the range between 1024 and 2048 ,",
    "space - division models start to overtake .",
    "most applications in the foreseeable future will be dealing with less than 1024 streams for which the time - division model is optimal .",
    "the only exception we are aware of so far is the ska mid phase 2 which is likely to have 3000 antennas forming a single beam .",
    "however , this is not to say space - division models will be the only way to deal with such large - scale correlation tasks . rather than the network itself ,",
    "the gpu architecture is one of the most significant factors leading to the performance turnover between 1024 and 2048 streams . due to the fact that the output data rate scales quadratically with the number of input streams , the larger the number of input streams is , the bigger proportion of gpu memory the output buffer takes .",
    "as the number of input streams increases , at a certain point the output buffer takes so much gpu memory that the input buffer is no longer large enough to hold data that can feed the massively parallel model of gpu computing , which is the major cause of the performance drop . if future gpus integrate more gpu memory , then it is possible to extend the optimum range of the time - division model .",
    "moreover , the turnover point might shift with a wide range of factors from both hardware and software aspects .",
    "this includes but is not limited to the hardware platform and configuration , the optimization of fx engines and the involvement of other correlator functionalities .",
    "another implication of the gpu memory limitation is that varying the fft length would not significantly affect the performance , as long as the gpu memory is enough for both input and output buffers .",
    "as the two buffers are both proportional to the fft length , increasing it does not change the proportion of gpu memory that the input buffer takes , and hence it does not negatively affect the parallel scale of the x - engine . the f - engine might be slightly affected depending on fft implementations .",
    "the performance of the apple opencl fft we used in this work does not vary significantly for the fft length up to 4k .",
    "however , the fft length does affect the maximum number of input streams that a single gpu is able to process , as both the input and output buffers need to be at least large enough to hold all intended data at the length of a single fft .",
    "moreover , this work did not investigate extra - long ffts beyond 8k , which potentially have some significant impacts on performance .",
    "the overall throughput that the time - division model can provide depends on the number of streaming nodes . as shown in figure [ fig : t ] , the model achieved better scalability when it was given 8 streaming nodes instead of 4 .",
    "furthermore , for real - time ska - scale correlation , 8 streaming nodes are still far from sufficient , otherwise each streaming node needs to handle more than hundreds of gigabytes of data per second , which is orders of magnitude beyond what the current technology can provide . however , unless the throughput is being limited by the streaming nodes , then adding more streaming nodes does not improve performance .",
    "therefore , we did not test the time - division model with more than 8 streaming nodes since this was sufficient in most cases across our testing schemes .",
    "the time - division model is likely to have excellent scalability even on larger clusters than our testing platform because firstly , based on our testing results shown in figure [ fig : t ] , the time - division model achieves a more linear scalability than space - division models , and secondly , the scalability is only limited by the number of streaming nodes rather than the network topology and a series of factors for space - division models .",
    "it seems from figure [ fig : t ] that the broadcasting model achieves better performance than the passing model on the same number of gpus when the number of data streams is large .",
    "however , this is based on the prerequisite that a considerable number of extra nodes are allocated as streaming nodes , as given by equation [ eq : oc_os ] .",
    "the passing model is promising in solving large scale correlation problems in the future .",
    "an obvious advantage is that it does not need any dedicated streaming nodes to re - organize and distribute data , for the auto - correlation nodes are the only nodes that receive input from external sources , and are able to receive streaming data in its original form .",
    "the topology also prevents network bottlenecks to a large extent , as the number of data transfers that each node deals with does not scale . in principle",
    ", the performance would scale linearly .",
    "our passing model testing results showed a near linear trend in which the performance falls behind the broadcasting model when large datasets are applied because the passing model does not perfectly suit the switch - based topology applied on fornax .",
    "it is likely to scale better on supercomputers with multi - dimensional torus topology , in which neighbor nodes have dedicated communication channels , as well as clusters with custom networks built - in to match our model .      for the space - division models , it is debatable whether or not to process fft and cmac coherently on the same node .",
    "redundant ffts are introduced if they are on the same node , as correlation nodes in the same row or column claim the same input data streams . on the other hand ,",
    "if they are processed on separate nodes , the network load would increase by several times , as the data for a sample is usually packed in a small number of bits before fft and is expanded to the complex floating - point format in 64 bits afterward .",
    "thus it is ultimately a trade - off between compute and network . from figure",
    "[ fig : pn ] we can see that even using our optimum network model under its favorable configuration , the performance per node is still reduced by approximately 30% when the number of total correlation nodes scales up to 90 , compared with the peak single gpu performance which is 105 gflops .",
    "this indicates that for large - scale correlation problems , the network is where bottlenecks would mostly appear , rather than compute .",
    "additionally , in large - scale correlation systems , the fft only takes a small proportion of the entire fx correlator in terms of execution time , due to the fact that the computational demands of the fft scales linearly with the number of data streams while that of the cmac scales quadratically . in this case ,",
    "redundant ffts introducing minor performance loss are more desirable than increasing the network load by potentially an order of magnitude .",
    "the gpu fx engines used in this work achieved approximately 10% of the capacity of c2075 gpus by using the metric that counts only the mathematical operations . to include",
    "the indexing and redundant calculations , a factor ranging from approximately 2 to 4 , depending on the fft length , the accumulation size and the network model , needs to be multiplied .",
    "the optimization techniques in gpu computing change significantly with hardware architectures , while the fx engines used in this work was designed several generations ago in terms of the gpu architecture .",
    "it is likely that fx engines optimized for newer gpu architectures can largely improve the performance of the gpu cluster correlator .",
    "the network models presented in this paper are applicable to such newer gpu fx engines , and also can be integrated in systems based on other hardware architectures such as cpus and fpgas .      in our tests ,",
    "the output visibility data was only written to files on the lustre file system for up to 300 input streams for correctness verification .",
    "there are two reasons behind this , firstly for next - generation telescopes which generate enormous amount of data , the visibility data is not likely to be stored on hard disks , but rather being streamed directly to post - processing stages . in this case",
    ", the visibility data resulted from our models would need to be re - ordered in time - stamped sub - bands or potentially other patterns .",
    "this re - formatting process can occur concurrently with the gpu x - engine , and be fully parallelized and completed on each correlation node independently for the time - division model , where every correlation node processes all baselines .    for the space - division models ,",
    "visibility data containing a subset of the baselines on each correlation node can be first split into sub - bands locally , and then gathered on post - processing nodes for all baselines .",
    "each post - processing node deals with a sub - band , so that the corner turning and imaging algorithms can be applied concurrently on each node without gathering all data onto a single node . there needs to be a streaming many - to - many network connecting correlation nodes and post - processing nodes , which is similar to what we implemented in our models to send input data from streaming nodes to correlation nodes .",
    "secondly , the output data rate is usually less critical than the input . shown in table [ tab : ratio ]",
    "are calculated input and output data rates for the ska phase 1 correlator from ford et al .",
    "as seen in these figures , the output data rates are much lower than the input .",
    "hence in immediate future the actual problem we are likely to face is still an input - limited correlation system rather than output - limited .",
    "correlators for the full scale ska might be output - limited . however , while trying to meet science requirements , the final design will also largely depend on how relevant technologies develop in the next decade and how the cost can be controlled in a reasonable range . taking these into account the implementation of the output network",
    "is left to future work .",
    "c|cc case & ska 1 low & ska 1 mid + total input data rate & 18.24 tb / s & 750 gb / s + total output data rate & 2.405 tb / s & 136.7 gb / s +      next - generation telescopes are likely to have an entirely streaming work flow in order to reduce the expense of storing intermediate data .",
    "this requires all correlation data to be processed in real time .",
    "however , being limited by current technology , when the problem size approaches the ska scale , the sampling rate of input signals achieved in our testing , as shown in figure [ fig : band ] , falls far behind what is required .",
    "this situation can be changed in three aspects in the future .",
    "firstly , new generation gpus are likely to double the performance every other year , and by the time ska - scale telescopes come into reality , the newest gpus would be at least an order of magnitude faster than what we used in our testing .",
    "secondly , as the gpu computing industry grows and more developer resources become available , optimizing the gpu fx engines would become easier .",
    "the hardware architecture and compiler would also evolve towards a direction that provides simpler ways to utilize more of the gpu capacity .",
    "while the gpu fx engines used in this work still have considerable space to optimize on current gpu architecture , evolving with new technology becomes even more important .",
    "thirdly , for ska - scale real - time correlation , it would eventually be necessary to scale our models on much larger clusters .",
    "this could be at the level of 10 to 100 times as large as our testing platform .",
    "in this case the network would become increasingly critical , and implementing our passing model on a cluster with multi - dimensional torus network would be a promising solution . the time - division model is another choice if future gpu architectures allow a single gpu to process all baselines of the telescope array .",
    "this work has investigated several ways to scale a single gpu based software correlator to clusters .",
    "we have investigated two major strategies , which are the time - division and space - division multiplex systems , and compared the performance over a range that is large enough to meet the requirements in the foreseeable future .",
    "our testing results have shown that for numbers of data streams smaller than 1024 , the time - division model is more efficient , while the passing topology of the space - division model showed advantages for large numbers of streams due to the more efficient use of the gpu memory .",
    "as it is difficult to predict the development of technology in the next decade , it is still too early to make statements as to how achievable it is to build a real - time gpu cluster correlator for a 3000-antenna telescope such as the ska mid phase 2 .",
    "meanwhile there is still considerable space for our models to be optimized .",
    "future work will therefore firstly focus on replacing the gpu fx engines with newer and more optimized implementations , the xgpu developed by clark et al .",
    "@xcite for instance , and optimizing models for real world projects .    in terms of the network patterns",
    ", there is a possibility of designing a hybrid model combining advantages of both space - division and time - division models .",
    "orthogonal correlation triangles separating frequency channels prior to the cmac stage is another promising direction to investigate , which can generate output visibilities in a more friendly pattern for post - processing but involves the design of a complex communication network between fft and cmac .",
    "some non - performance - critical functionalities such as the delay compensation are also to be added to make a fully integrated system , as this work only investigates the compute intensive stages of an fx correlator . with the high flexibility of a software correlator , it is also sensible to integrate other functional techniques into the correlation flow , such as a coherent fast transient detector proposed by law et al .",
    "@xcite which needs to be placed between conjugate multiplications and accumulations within the x - engine .",
    "a.  t.  deller , s.  j.  tingay , m.  bailes and c.  west .",
    ": difx : a software correlator for very long baseline interferometry using multiprocessor computing environments .",
    "publications of the astronomical society of the pacific , 119 , 318336 ( 2007 ) .",
    "a. t. deller , w. f. brisken , c. j. phillips , j. morgan , w. alef , r. cappallo , e. middelberg , j. romney , h. rottmann , s. j. tingay and r. wayth .",
    ": difx2 : a more flexible , efficient , robust and powerful software correlator .",
    "publications of the astronomical society of the pacific , 123 , 275287 ( 2011 ) .",
    "j.  w. romein , p.  c. broekema , e.  meijeren , k.  schaaf , and w.  h. zwart .",
    ": astronomical real - time streaming signal processing on a blue gene / l supercomputer .",
    "proceedings of the eighteenth annual acm symposium on parallelism in algorithms and architectures , 5966 ( 2006 ) .",
    "j. w. romein , p. c. broekema , j. d. mol and r. v. nieuwpoort . : the lofar correlator : implementation and performance analysis .",
    "proceedings of the 15th acm sigplan symposium on principles and practice of parallel programming , 169178 ( 2010 ) .",
    "r.  b. wayth , l.  j. greenhill , and f.  h. briggs . : a gpu based real - time software correlation system for the murchison widefield array prototype .",
    "publications of the astronomical society of the pacific , 121(882 ) , 857865 ( 2009 ) ."
  ],
  "abstract_text": [
    "<S> next generation radio telescopes will require orders of magnitude more computing power to provide a view of the universe with greater sensitivity . in the initial stages of the signal processing flow of a radio telescope , </S>",
    "<S> signal correlation is one of the largest challenges in terms of handling huge data throughput and intensive computations . </S>",
    "<S> we implemented a gpu cluster based software correlator with various data distribution models and give a systematic comparison based on testing results obtained using the fornax supercomputer . by analyzing the scalability and throughput of each model , </S>",
    "<S> optimal approaches are identified across a wide range of problem sizes , covering the scale of next generation telescopes . </S>"
  ]
}
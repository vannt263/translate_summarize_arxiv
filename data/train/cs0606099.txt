{
  "article_text": [
    "in the multi - user scenarios , multiple transmitters / receivers share a common communication medium , and therefore , there is an inherent competition in accessing the channel .",
    "information theoretic results for such systems imply that in order to achieve a high spectral efficiency , the users with stronger channel should have a higher portion of the resources .",
    "the drawback to this is the loss of the fairness among the users . providing fairness , while achieving high - spectral efficiency ,",
    "is thus a challenging problem .",
    "a lot of research has addressed this problem and suggested different criteria to design a fair system .",
    "one of the first criteria is known as _ max - min _ measure . in this method ,",
    "the main effort is to maximize the minimum rate of the users , by giving the highest priority to the user with the worst channel . in other words ,",
    "this method penalizes the users with better channel and sacrifices overall efficiency .    by relaxing the strict condition on fairness",
    ", the spectral efficiency can be increased . by compromising between fairness and throughput ,",
    "proportional fairness is proposed in  @xcite .",
    "based on this criterion , the rates of users with a stronger channel can be increased with the cost of decreasing the rates of users with a weaker channel .",
    "any change in the rates is acceptable if the total proportional increase in the rates of some users is larger than the total proportional decrease in the rates of the rest .",
    "in fact , by relaxing the strict condition on fairness , the spectral efficiency increases . in  @xcite , a criterion based on nash bargaining solution in the context of game theory is proposed .",
    "this method generalizes the proportional fairness and increases the efficiency of the system .",
    "all of the aforementioned methods deal with a general multi - user system .",
    "however , for a wide class of multi - user systems , the capacity region has a special structure that we can exploit to provide fairness . particularly in some multiuser systems ,",
    "the boundary of the capacity region includes a facet on which the sum - rate is maximum ( sum - capacity facet ) . in such systems",
    ", one can benefit from the available degrees of freedom , and determine the fairest rate - vector on the sum - capacity facet .    as a special case",
    ", we consider a class of multi - user systems , in which the whole or a subset of the capacity region which includes the corner points and the sum - capacity facet forms a structure known as polymatroid .",
    "for this class of multi - user systems , the sum - capacity facet has @xmath0 corner points , where @xmath1 is the number of users with non - zero power ( active users ) .",
    "the sum - capacity facet is the convex hull of these corner points .",
    "this means that the interior points of the sum - capacity facet can be attained by time - sharing among such corner points . as an example of such systems",
    ", it is shown that the capacity region of multiaccess channels ( mac ) with fixed and independent input distributions forms a polymatroid  @xcite . in mac , the sum - capacity is achieved by successive decoding . applying different orders for the users in successive decoding results in different rate - vectors , all with the sum - rate equal to the sum - capacity .",
    "the resulting rate - vectors correspond to the corner points of the sum - capacity facet .",
    "any point in the convex hull of these corner points is on the boundary . in  @xcite",
    ", it is proven that the marton inner bound ( see  @xcite ) for capacity region of the broadcast channel under fixed joint probability of the auxiliary and input variables , with some conditions , has a polymatroid structure . as another example",
    ", we will show that a subset of the capacity region for multiple - input multiple - output ( mimo ) broadcast channel which includes the corner points forms a polymatroid .    in  @xcite , the optimal dynamic power allocation strategy for time - varying single - antenna multiple - access channel is established . to this end",
    ", the polymatroid properties of the capacity region for time - invariant multiple - access channel with fixed input distributions have been exploited . in  @xcite",
    ", the polymatroid properties have been used to find a fair power allocation strategy .",
    "this problem is formulated by representing a point on the face of the contra - polymatroid ( see  @xcite ) as a convex combination of its extreme points .",
    "this article aims at finding a point on the sum - capacity facet which satisfies a notion of fairness among active users by exploiting the properties of polymatroids . in order to provide fairness , the minimum rate among all users",
    "is maximized ( max - min rate ) . in the case",
    "that the rate of some users can not increase further ( attain the max - min value ) , the algorithm recursively maximizes the minimum rate among the rest of the users .",
    "since this rate - vector is in the face of the polymatroid , it can be achieved by time sharing among the corner points .",
    "it is shown that the problem of deriving the time - sharing coefficients to attain this point can be decomposed to some lower - dimensional subproblems . an alternative approach to attain an interior point for multiple access channels",
    "is _ rate splitting _  @xcite .",
    "this method is based on splitting all input sources except one into two parts and treating each spilt input as two virtual inputs ( or two virtual users ) . by splitting the sources appropriately and successive decoding of virtual users in a suitable order , any point on the sum - capacity facet",
    "can be attained  @xcite .",
    "similar to the time - sharing procedure , we show that the problem of rate - splitting can be decomposed to some lower dimensional subproblems",
    ".    there are cases that the complexity of achieving interior points is not feasible .",
    "this motivates us to compute the corner point for which the minimum rate of the active users is maximized ( max - min corner point ) .",
    "a simple greedy algorithm is introduced to find the max - min corner point .",
    "the rest of the paper is organized as follows . in section [ secii ] ,",
    "the structure of the polymatroid is presented .",
    "in addition , the relationship between the capacity region of some channels and the polymatroid structure is described .",
    "section [ seciii ] discusses the case in which the optimal fair corner point is computed . in section [ seciv ] , the optimal fair rate - vector on the sum - capacity facet is computed by exploiting polymatroid structures .",
    "in addition , it is shown that the problem of deriving the time - sharing coefficients and rate - splitting can be solved by decomposing the problem into some lower - dimensional subproblems .    _",
    "notation : _ all boldface letters indicate vectors ( lower case ) or matrices ( upper case ) . @xmath2 and @xmath3 denote the determinant and the transpose conjugate of the matrix @xmath4 , respectively .",
    "@xmath5 represents that the matrix @xmath6 is positive semi - definite .",
    "@xmath7 represents an @xmath8 dimensional vector with all entries equal to one .",
    "@xmath9 is a set of integers @xmath10 , where @xmath11 denotes the cardinality of the set @xmath9 .",
    "the set function @xmath12 is a mapping from all subsets of @xmath9 ( there are a total of @xmath13 subsets ) to the positive real numbers .",
    "a permutation of the set @xmath9 is denoted by @xmath14 and @xmath15 , @xmath16 , represents the element of the set @xmath9 located in the @xmath17 position after the permutation . for an @xmath1-dimensional vector @xmath18 and @xmath19 , @xmath20 denotes @xmath21 .",
    "also , for a set of positive semi - definite matrices @xmath22 , @xmath23 represents @xmath24 .",
    "_ definition _  ( * ? ? ?",
    "* ch . 18 ) : let @xmath25 and @xmath26 be a set function .",
    "the polyhedron @xmath27 is a polymatroid , if the set function @xmath28 satisfies @xmath29 any function @xmath28 that satisfies the above properties is termed as _",
    "rank function_. note that ( [ ine : poly ] ) imposes @xmath13 constraints on any given vector @xmath30 .",
    "corresponding to each permutation @xmath14 of the set @xmath9 , the polymatroid @xmath31 has a corner point @xmath32 which is equal to : @xmath33 consequently , the polymatroid @xmath31 has @xmath0 corner points corresponding to different permutations of the set @xmath9 .",
    "all the corner points are on the facet @xmath34 . in addition",
    ", any point in the polymatroid on the facet @xmath34 is in the convex hull of these corner points .",
    "the hyperplane @xmath34 is called as dominant face , or simply face of the polymatroid . in this paper",
    ", we use the term _ sum - capacity facet _ to denote the face of the polymatroid .      for a wide class of multi - user systems ,",
    "the whole or a subset of the capacity region forms a polymatroid structure . as the first example ,",
    "consider a multiaccess system with @xmath1 users , where the distribution of inputs are independent and equal to @xmath35 .",
    "then , the capacity region of such a system is characterized by  @xcite @xmath36 where @xmath37 is the received signal , @xmath38 represents rate vector , @xmath39 denotes the mutual information , and @xmath40 is equal to @xmath41 .",
    "it has been shown that the above polyhedron forms a polymatroid  @xcite .",
    "as the second example , we consider the capacity region of a multiple - antenna broadcast system . in the sequel",
    ", we show that a subset of the capacity region which includes the corner points and sum - capacity facet forms a polymatroid .",
    "consider a mimo broadcast channel ( mimo - bc ) with @xmath42 transmit antennas and @xmath43 users , where the @xmath44 user is equipped with @xmath45 receive antennas . in a flat fading environment , the baseband model of this system",
    "is given by @xmath46 where @xmath47 denotes the channel matrix from the base station to user @xmath48 , @xmath49 represents the transmitted vector , and @xmath50 signifies the received vector by user @xmath48 .",
    "the vector @xmath51 is a white gaussian noise with zero - mean and identity - matrix covariance .",
    "consider an order of the users @xmath52 . by assuming that user @xmath15 knows the codewords selected for the users @xmath53 , @xmath54 , the interference of the users @xmath53 , @xmath55 , over user @xmath15 can be effectively canceled based on dirty - paper - coding theorem  @xcite .",
    "therefore , the rate of user @xmath56 is equal to @xmath57 where @xmath58 is the covariance of the signal vector to user @xmath53 .",
    "the capacity region is characterized as the convex hull of the union of such rate - vectors over all permutations @xmath52 and over all positive semi - definite covariance matrices @xmath59 , @xmath60 such that @xmath61 , where @xmath62 denotes the total transmit power  @xcite . in  @xcite , a duality between the mimo - bc and the mimo - mac is established . in the dual mimo - mac ,",
    "the channel between user @xmath48 and the base station is @xmath63 and the covariance of the power allocated to user @xmath48 is @xmath64 . the relationship between @xmath65 and @xmath66 , @xmath67 , has been derived  @xcite . the duality is used to characterize the sum - capacity of the mimo - bc as follows @xmath68 the above optimization problem determines the power allocated to each user in the dual mimo - mac , and consequently , the power of each user in the mimo - bc .",
    "note that only a subset of users is active and the power allocated to the rest is zero .",
    "equation ( [ eq : sum ] ) determines the so - called sum - capacity facet .",
    "if the cardinality of the set of active users is @xmath1 , i.e. @xmath69 , the sum - capacity facet has @xmath0 corner points corresponding to different permutations of the active users .",
    "note that the rates of the non - active users remain zero regardless of the permutation .",
    "the corner point corresponding to a permutation can be computed using ( [ rate : bc ] ) . assuming the active users are indexed by @xmath70 , we define @xmath71 where @xmath72 , @xmath73 , correspond to optimizing matrices in ( [ eq : sum ] ) . it is shown that the corner point in ( [ rate : bc ] ) can be reformulated as  @xcite @xmath74 which is the corner point of the dual mac .    regarding the polymatroid structure of the multiaccess channels and considering the duality of the mimo - mac and mimo - bc",
    ", we can observe the polymatroid structure of a subset of mimo - bc capacity region which includes the sum - capacity facet .",
    "however , to provide a better insight about the problem , we introduce a special polymatroid and establish its relationship with the capacity region of the mimo - bc .",
    "for a set of positive semi - definite matrices @xmath22 , we define the set function @xmath75 as , @xmath76    given @xmath77 defined in ( [ eq : gs ] ) , the polyhedron @xmath78 defined as follows is a polymatroid .",
    "@xmath79    clearly , @xmath80 .",
    "assume @xmath81 and @xmath82 are two hermitian matrices .",
    "if @xmath83 , then @xmath84 ( * ? ? ?",
    "* proposition i.2 ) .",
    "furthermore , if @xmath85 , then ( * ? ? ?",
    "* proposition i.3 ) @xmath86 using above properties , it is straight - forward to prove ( [ poly : inc ] ) and ( [ poly : subm ] ) for the set function @xmath87 .    in the set function @xmath77 , define @xmath88 as defined in ( [ eq : di ] ) .",
    "it is easy to verify that the polymatroid @xmath78 is a subset of the capacity region of the mimo - bc .",
    "the hyperplane @xmath89 and its corner points ( [ rate : mac ] ) are the same as the sum - capacity facet and its corner points . due to this property",
    ", we focus on the polymatroid @xmath78 ( see fig . [ capacity ] ) .",
    "as mentioned , in some cases , the complexity of computing and implementing an appropriate time - sharing or rate - splitting algorithm is not feasible .",
    "this motivates us to compute the corner point for which the minimum rate of the active users is maximized ( max - min corner point ) . in the following , we present a simple greedy algorithm to find the max - min corner point of a general polymatroid @xmath90 .",
    "* algorithm i *    1 .   set @xmath91 , @xmath92 .",
    "2 .   set @xmath93 as @xmath94 3 .",
    "if @xmath95 , then @xmath96 , @xmath97 , and go to step 2 ; otherwise stop .",
    "the following theorem proves the optimality of the above algorithm .",
    "[ thm : max - min ] let the vector @xmath98 be the corner point of the polymatroid @xmath90 corresponding to the permutation @xmath99 . for any other permutation @xmath100 , @xmath101    assume that in the permutation @xmath102 , the user @xmath103 which is located in position @xmath104 in the permutation @xmath102 ( i.e. @xmath105 ) has the minimum rate @xmath106 let us define two sets :    * the set of users located before @xmath107 in @xmath108 : @xmath109 . * the set of users located after @xmath107 in @xmath102 : @xmath110 .    using ( [ eq : v_pi ] ) , we have @xmath111 in the following , we consider different scenarios which generate new permutations and prove that in all cases , ( [ ineq : max_min ] ) is valid .    * case 1 . * _ permutation in @xmath112 and @xmath113 : _ by considering ( [ eq : rate_pil ] ) , it is apparent that any permutation of the users in @xmath112 and @xmath113 does not change the rate of the user @xmath107 ( see fig .",
    "[ fig : case1 ] ) .     and @xmath113 .",
    "]    * case 2 . * _ moving a set of users from @xmath113 to the set @xmath112 : _ assume a set @xmath114 of users , @xmath115 , is moved from @xmath113 to the set @xmath112 to generate a new permutation @xmath14 ( see fig .",
    "[ fig : case2 ] ) .",
    "the rate of the user @xmath103 in the new permutation is equal to : @xmath116 from ( [ poly : subm ] ) , we can show that @xmath117 using ( [ eq : rate_pil ] ) , ( [ eq : rate_teta2 ] ) , and ( [ ineq : pi_pib1 ] ) , we conclude that @xmath118 , and therefore , @xmath119 .     to the set @xmath112 . ]    * case 3 . * _ moving one or more users from the set @xmath112 to the set @xmath113 ( with or without moving some users from the set @xmath113 to the set @xmath112 ) : _ assume that one or more users move from @xmath112 to @xmath113 ( with or without moving some users from the set @xmath113 to the set @xmath112 ) to generate the new permutation @xmath14 . as depicted in fig .",
    "[ fig : case3 ] , assume that the user @xmath120 is positioned last in the permutation @xmath14 among the users moved from @xmath112 to @xmath113 ( user @xmath121 is positioned first and user @xmath122 is positioned last in the permutation @xmath14 ) .     to the set @xmath113 ( with or without moving some users from the set @xmath113 to the set @xmath112 ) . ]",
    "let @xmath123 be the set of users located before the user @xmath120 in the permutation @xmath14 . using ( [ eq : v_pi ] )",
    ", we have , @xmath124 it is clear that , @xmath125 using ( [ poly : subm ] ) with @xmath126 and @xmath127 , and regarding ( [ eq:3 ] ) , we have , @xmath128 on the other hand , the user @xmath120 is in the set @xmath112 in permutation @xmath102 .",
    "it means that in step 2 of the algorithm , this user has been compared with other users in the set @xmath129 to be located in the position @xmath104 , but the user @xmath130 has been chosen for the position , i.e. @xmath131 , therefore , @xmath132    using ( [ eq : rate_pil ] ) , ( [ eq : rate_vnu ] ) , ( [ ineq : subm2 ] ) , and ( [ ineq:4 ] ) , we conclude that @xmath133 , and therefore , we have @xmath134 . note that the permutation of users located before ( or after ) the user @xmath120 in the permutation @xmath14 does not increase @xmath135 .",
    "* remark * : for multiple access channels , the above algorithm suggests that to attain the fairest corner point with successive decoding , at each step , one should decode the strongest user ( the user with the highest rate , while the signals of the remaining users are considered as interference ) .",
    "note that in mac , the corner point corresponding to the specific permutation @xmath14 is obtained by the successive decoding in the reverse order of the permutation .",
    "it is worth mentioning that by using a similar algorithm , one can find the corner point for which the maximum rate is minimum .",
    "the algorithm is as follows :    * algorithm ii *    1 .",
    "set @xmath136 , @xmath92 .",
    "2 .   set @xmath93 as @xmath137 3 .",
    "if @xmath138 , then @xmath96 , @xmath139 , and go to step 2 ; otherwise stop .",
    "the optimality of the above algorithm can be proven by a similar method as used to prove theorem [ thm : max - min ] .",
    "in the following , the polymatroid properties are exploited to locate an optimal fair point on the sum - capacity facet . for an optimal fair point ,",
    "the minimum rate among all the users should be maximized ( max - min rate ) . for a sum - capacity of @xmath140",
    ", a fair rate allocation would ideally achieve an equal rate of @xmath141 for the @xmath1 active users .",
    "although this rate - vector is feasible for some special cases ( see fig .",
    "[ poly31 ] ) , it is not attainable in the general case ( see fig . [ poly32 ] ) . the maximum possible value for the minimum entry of a vector @xmath142 , where @xmath143 , can be computed using the following lemma .",
    "[ lem : max_min ] in the polymatroid @xmath31 , define @xmath144 then , @xmath145    consider @xmath146 , and let @xmath147 .",
    "therefore , @xmath148 noting @xmath149 and using the above inequality , we have @xmath150 consequently , @xmath151 .",
    "therefore , @xmath152 provides an upper bound on @xmath153 . by selecting @xmath154 , where @xmath155 , the upper bound is achieved , and the proof is completed .    in minimization ( [ eq : delta ] ) , if the minimizer is not the set @xmath9 , then @xmath156 ( the optimal max - min value ) is less than @xmath157 ( @xmath158 is the sum - capacity ) , and therefore , the ideal fairness is not feasible .",
    "for example , in the polymatroid depicted in fig [ poly32 ] , the minimizing set in ( [ eq : delta ] ) is the set @xmath159 , and therefore @xmath160 .    in the following ,",
    "a recursive algorithm is proposed to locate a rate vector @xmath161 on the sum - capacity facet which not only attains the optimal max - min value @xmath156 , but also provides fairness among the users which have the rates higher than @xmath156 .",
    "the proposed algorithm partitions the set of active users into @xmath162 disjoint subsets , @xmath163 , such that in the @xmath164th subset the rate of all users is equal to @xmath165 , where @xmath166 . starting from @xmath167 ,",
    "the algorithm maximizes @xmath168 , @xmath169 , given that @xmath170 s , @xmath171 , are already at their maximum possible values . to simplify this procedure ,",
    "we establish a chain of nested polymatroids , @xmath172 , @xmath173 , where @xmath174    in this algorithm , we use the result of the following lemma .",
    "[ lem : red_f ] let @xmath175 and @xmath176 , @xmath177 .",
    "if the set function @xmath178 is a rank function , then @xmath179 , defined as @xmath180 is a rank function .    by direct verification .",
    "using the following algorithm , one can compute the rate - vector @xmath161 .",
    "* algorithm iii *    1 .",
    "initialize the iteration index @xmath181 , @xmath182 , and @xmath183 .",
    "2 .   find @xmath184 , where @xmath185 set @xmath186 equal to the optimizing subset .",
    "3 .   for all",
    "@xmath187 , set @xmath188 .",
    "4 .   define the polymatroid @xmath189 , where @xmath190 and @xmath191 , @xmath192 5 .",
    "if @xmath193 , set @xmath194 and move to step 2 , otherwise stop .",
    "this algorithm computes the optimization sets @xmath186 , @xmath195 and their corresponding @xmath184 , where @xmath196 and @xmath197 .    to provide better insight about the algorithm ,",
    "let us apply it over the polymatroids depicted in figures [ poly31 ] and [ poly32 ] . for the polymatroid in fig .",
    "[ poly31 ] , the algorithm results in @xmath198 where @xmath199 . for the polymatroid shown in fig [ poly32 ] ,",
    "the resulting point is @xmath200 , where @xmath201 and @xmath202 ( see fig .",
    "[ poly33 ] ) .     on the sum - rate facet of the polymatroid ]    in the following , we prove some properties of the vector @xmath161 .",
    "[ thm : prop ] assume that the algorithm iii is applied over the polymatroid @xmath31 , then    1 .",
    "@xmath203 and is located on the sum - capacity facet @xmath204 .",
    "2 .   the minimum entry of the vector @xmath161 attains the optimum value determined by lemma [ lem : max_min ] and @xmath205    * part ( i ) : * we show that @xmath206 . according to the algorithm , we have @xmath207 , where @xmath208 is the minimizing set . in addition , @xmath209 for all @xmath210 .",
    "it is straight - forward to check that the assigned values for @xmath211 , do not violate the constraints of the polymatroid @xmath31 , expressed in ( [ ine : poly ] ) . by substituting the assigned values for @xmath212 , in the constraints of the polymatroid @xmath31 , the constraints over the coordinate @xmath213 ,",
    "are updated as follows : from the definition of the polymatroid , we have a set of constraints on @xmath214 , @xmath215 , which has the following format : @xmath216 since @xmath217 , then @xmath218 .",
    "consequently , from ( [ eq : n_con ] ) , we have , @xmath219 consequently , @xmath220 , @xmath221 we claim that @xmath222 is equal to @xmath223 .",
    "the proof is as follows : @xmath224 the first inequality relies on the fact that @xmath225 .",
    "the second inequality is proven by using ( [ poly : subm ] ) and the fact that @xmath226 and @xmath227 .",
    "it is easy to check that the above inequalities change to equalities for @xmath228 .    regarding the above statements , for the non - allocated entries of @xmath142 , we have the following set of constraints , @xmath229    let us define @xmath230 , @xmath231 , @xmath232 . by using lemma [ lem : red_f ] , the set of constraints ( [ set : cond ] ) on @xmath233 defines the polymatroid @xmath234 , which is a subset of @xmath90",
    "now , we use the same procedure that is applied for @xmath235 over @xmath236 , and continue recursively . therefore , in iteration indexed by @xmath237 , @xmath173 ,",
    "the rates of a subset of coordinates are determined such that the constraints of the polymatroid @xmath238 are not violated . since @xmath239 , then @xmath240 .",
    "direct verification proves that @xmath241 .    *",
    "part ( ii ) : * we must show that the smallest entries of @xmath161 is equal to @xmath242 . according to the algorithm , for all @xmath243",
    ", we have @xmath244 .",
    "furthermore , @xmath245 .    from the algorithm",
    ", we have @xmath246 therefore , @xmath247 where ( [ l3 ] ) relies on lhs of ( [ l0 ] ) .",
    "consequently , @xmath248 and the proof is complete .    the remaining issue in algorithm iii is how to compute @xmath249 .",
    "these types of problems are known as geometric minimizations . in order to find the minimizer ,",
    "the smallest value of @xmath250 is desirable such that there is a set @xmath251 with @xmath252 .",
    "for the special case of single antenna gaussian multiaccess channels , computing such @xmath250 is very simple .",
    "for the general case , @xmath250 can be computed by dinkelbach s discrete newton method as follows @xcite .",
    "the algorithm is initialized by setting @xmath250 equal to @xmath253 , which is an upper bound for optimum @xmath250 . then",
    ", a minimizer @xmath254 of @xmath255 is calculated , as will be explained later . since @xmath256 , then @xmath257 . if @xmath258 , the current @xmath250 is optimum . if @xmath259 , then we update @xmath260 , which provides an improved upper bound . by repeating this operation",
    ", the optimal value of @xmath250 will eventually be calculated  @xcite .",
    "it is shown that the number of @xmath250 visited by the algorithm is at most @xmath11 @xcite .    using this approach , the minimization problem @xmath261 is changed to @xmath262 . by direct verification of ( [ poly : subm ] ) , it is easy to see that @xmath263 is a submodular function .",
    "there have been a lot of research on submodular minimization problems @xcite . in @xcite , the first combinatorial polynomial - time algorithms for solving submodular minimization problems",
    "are developed .",
    "these algorithms design a strongly polynomial combinatorial algorithm for testing membership in polymatroid polyhedra .      in the following , we take advantage of the special properties of @xmath161 and polymatroids to break down the time - sharing problem to some lower dimensional subproblems . in the previous subsection ,",
    "a chain of nested polymatroids @xmath172 , @xmath173 , is introduced , where @xmath264 for @xmath265 . since @xmath266 for @xmath267 and regarding",
    "the definition of polymatroid , @xmath268 , @xmath269 , is a polymatroid , which is defined on the dimensions @xmath270 . according to the proof of theorem [ thm : prop ] , the vector @xmath271 is on the hyperplane @xmath272 .",
    "let @xmath273 be the set of all permutations of the set @xmath270 , and @xmath274 be the corner point corresponding to the permutation @xmath275 in the polymatroid @xmath268 .",
    "then , there exist the coefficients @xmath276 , @xmath277 , such that @xmath278 where @xmath279 note that @xmath280 .",
    "consider a permutation @xmath275 as one of the total @xmath281 permutations of @xmath270 , for @xmath282 , then the permutation @xmath14 formed by concatenating these permutations , i.e. @xmath283 , is a permutation on the set @xmath9 .    consider the permutation @xmath284 of the set @xmath9 .",
    "* the corner point corresponding to the permutation @xmath14 in the polymatroid @xmath31 is @xmath285 where @xmath274 is the corner point of the polymatroid @xmath268 corresponding to the permutation @xmath275 , and @xmath286 denotes the value of @xmath274 over the dimension @xmath164 , @xmath287 . * the vector @xmath161 is in the convex hull of the set of corner points corresponding to the following set of permutations @xmath288 where the coefficient of the corner point corresponding to the permutation @xmath289 is equal to @xmath290 , i.e. @xmath291    * part ( i ) * from recursive equation ( [ eq : rec_fa ] ) , we can show that @xmath292 consider the permutation @xmath293 .",
    "set @xmath294 . by using ( [ eq : v_pi ] ) and",
    "( [ eq : f_expand ] ) , for @xmath295 , @xmath296 is equal to @xmath297 according to definition of polymatroid and its corner points , the rhs of ( [ eq : rhs ] ) is the value of @xmath298 in the corresponding corner point of the polymatroid @xmath268 .    * part ( ii ) * since @xmath299 and by using ( [ eq : part_time ] ) and part ( i ) of the theorem , it is easy to verify that the @xmath17 , @xmath300 , entry of @xmath301 is equal to @xmath167 .",
    "similarly , the entry @xmath164 , @xmath302 , of @xmath303 is equal to @xmath304 , while the entry @xmath164 , @xmath210 , remains @xmath167 . by continuing this procedure , part ( ii ) of the algorithm",
    "is proven .    regarding the above statements , the problem of finding time - sharing coefficients is decomposed to some lower dimensional subproblems .",
    "in each sub - problem , the objective is to find the coefficients of the time - sharing among the corner points of the polymatroid @xmath268 , @xmath305 , to attain @xmath306 . in this part",
    ", we present an algorithm which finds the coefficients of the time - sharing over the corner points of a general polymatroid @xmath31 to attain a vector @xmath142 located on the face of the polymatroid .",
    "* algorithm iv *    1 .",
    "initialize @xmath307 , @xmath308 ( the fairest corner point obtained by algorithm i ) .",
    "2 .   solve the linear optimization problem @xmath309 let @xmath310 , @xmath311 be the optimizing coefficients .",
    "3 .   if @xmath312 , stop .",
    "4 .   @xmath313 . set @xmath314 and determine the permutation @xmath14 for which @xmath315 .",
    "set @xmath316 and move to step 2 .",
    "the idea behind the algorithm is as follows . in each step",
    ", the time - sharing among some corner points is performed .",
    "if the resulting vector is equal to @xmath142 , the answer is obtained ; otherwise a permutation @xmath14 is determined such that @xmath317 , where the error vector @xmath318 represents the difference between the vector @xmath142 and resulting vector from time - sharing .",
    "we can compensate the error vector @xmath318 by including an appropriate corner point in the set of corner points participating in time - sharing . clearly , the best one to be included is the one which has the highest possible rate for user @xmath121 and lowest possible rate for user @xmath319 .",
    "apparently , this corner point is @xmath320 , computed by algorithm iv .",
    "note that algorithm iv can be applied over the sub - polymatroids @xmath268 , @xmath305 , to attain @xmath306 or directly applied over the original polymatroid to attain @xmath161 . if @xmath1 and @xmath321 are relatively small numbers , the decomposition method has less complexity , otherwise applying algorithm iv over the original problem is less complex .      as mentioned , an alternative approach to achieve any rate - vector on the sum - capacity facet of mac is",
    "rate splitting _  @xcite .",
    "this method is based on splitting all input sources except one into two parts , and treating each spilt input as two virtual inputs ( or two virtual users ) .",
    "thus , there are at most @xmath322 virtual users .",
    "it is proven that by splitting the sources appropriately and successively decoding virtual users in a suitable order , any point on the sum - capacity facet can be attained .",
    "similar to the time - sharing part , we prove that to attain the rate vector @xmath161 , the rate - splitting procedure can be decomposed into some lower dimensional subproblems . consider a mac , where the capacity region is represented by polymatroid @xmath31 and the vector @xmath161 , derived in algorithm iii , is on its face .",
    "assume that the users in the set @xmath270 are decoded before the set of users in @xmath323 and after the users in the set @xmath324 .therefore , by similar discussion used in ( [ eq : n_con ] ) to ( [ set : cond ] ) , we conclude that the rate of the users in the set @xmath270 is characterized by the polymatroid @xmath268 , where the rate - vector @xmath325 is on its face . regarding the results presented in  @xcite",
    ", we can attain the rate - vector @xmath326 by properly splitting the sources of all inputs , except for one , in the set @xmath270 to form @xmath327 virtual users and by choosing the proper order of the decoding of the virtual users .",
    "consequently , using algorithm v ( below ) , we achieve the rate - vector @xmath161 in the original polymatroid .",
    "* algorithm v *    1 .   apply rate - splitting approach to attain the rate - vector @xmath325 on the face of the polymatroid @xmath268 , for @xmath305 .",
    "therefore , for each @xmath328 , @xmath329 , at most @xmath327 virtual users are specified with a specific order of decoding .",
    "2 .   starting from @xmath330 , decode the virtual users in the set @xmath270 in the order found in step 1 .",
    "set @xmath331 .",
    "follow the procedure until @xmath332 .",
    "we considered the problem of fairness for a class of systems for which a subset of the capacity region forms a polymatroid structure .",
    "the main purpose is to find a point on the sum - capacity facet which satisfies a notion of fairness among active users .",
    "this problem is addressed in cases where the complexity of achieving interior points is not feasible , and where the complexity of achieving interior points is feasible .",
    "for the first case , the corner point for which the minimum rate of the active users is maximized ( max - min corner point ) is desired for signaling .",
    "a simple greedy algorithm is introduced to find the optimum max - min corner point . for the second case ,",
    "the polymatroid properties are exploited to locate a rate - vector on the sum - capacity facet which is optimally fair in the sense that the minimum rate among all users is maximized ( max - min rate ) . in the case that the rate of some users can not increase further ( attain the max - min value ) , the algorithm recursively maximizes the minimum rate among the rest of the users .",
    "it is shown that the problems of deriving the time - sharing coefficients and rate - spitting scheme can be solved by decomposing the problem to some lower - dimensional subproblems .",
    "in addition , a fast algorithm to compute the time - sharing coefficients to attain a general point on the sum - capacity facet is proposed .",
    "the authors would like to thank mr .",
    "mohammad h. baligh and mr .",
    "shahab oveis gharan for helpful discussions ."
  ],
  "abstract_text": [
    "<S> for a wide class of multi - user systems , a subset of capacity region which includes the corner points and the sum - capacity facet has a special structure known as polymatroid . </S>",
    "<S> multiaccess channels with fixed input distributions and multiple - antenna broadcast channels are examples of such systems . </S>",
    "<S> any interior point of the sum - capacity facet can be achieved by time - sharing among corner points or by an alternative method known as _ rate - splitting_. the main purpose of this paper is to find a point on the sum - capacity facet which satisfies a notion of fairness among active users . </S>",
    "<S> this problem is addressed in two cases : ( i ) where the complexity of achieving interior points is not feasible , and ( ii ) where the complexity of achieving interior points is feasible . for the first case , the corner point for which the minimum rate of the active users is maximized ( max - min corner point ) </S>",
    "<S> is desired for signaling . </S>",
    "<S> a simple greedy algorithm is introduced to find the optimum max - min corner point . for the second case , </S>",
    "<S> the polymatroid properties are exploited to locate a rate - vector on the sum - capacity facet which is optimally fair in the sense that the minimum rate among all users is maximized ( max - min rate ) . in the case that the rate of some users can not increase further ( attain the max - min value ) , the algorithm recursively maximizes the minimum rate among the rest of the users . </S>",
    "<S> it is shown that the problems of deriving the time - sharing coefficients or rate - spitting scheme can be solved by decomposing the problem to some lower - dimensional subproblems . </S>",
    "<S> in addition , a fast algorithm to compute the time - sharing coefficients to attain a general point on the sum - capacity facet is proposed .    </S>",
    "<S> polymatroid structure , multiuser systems , multiaccess channels , broadcast channels , fairness , successive decoding , time - sharing , rate - splitting . </S>"
  ]
}
{
  "article_text": [
    "propositional linear time temporal logic , ltl , is important for hardware and software verification@xcite .",
    "ltl satisfiability checking ( ltlsat ) is receiving renewed interest with advances computing power , several industry ready tools , some new theoretical techniques , studies of the relative merits of different approaches , implementation competitions , and benchmarking : @xcite .",
    "common techniques include automata - based approaches @xcite and resolution @xcite as well as tableaux @xcite .",
    "each type of approach has its own advantages and disadvantages and each can be competitive at the industrial scale ( albeit within the limits of what may be achieved with pspace complexity ) .",
    "the state of the art in tableau reasoners for ltl satisfiability testing is the technique from @xcite which is used in portfolio reasoners such as @xcite .",
    "many ltl tableau approaches produce a very untraditional - looking graph , as opposed to a tree , and need the whole graph to be present before a second phase of discarding takes place . within the stable of tableau - based approaches to ltlsat",
    ", the system of @xcite stands out in in being tree - shaped ( not a more general graph ) , and in being one - pass , not relying on a two - phase building and pruning process .",
    "it also stands out in speed @xcite . however , there are still elements of communication between separate branches and a slightly complicated annotation of nodes with depth measures that needs to be managed as it feeds in to the tableau rules .",
    "so it is not in the traditional style of classical tableaux @xcite .",
    "this paper presents a new simpler tableau for ltl .",
    "it builds on ideas from @xcite and is influenced by ltl tableaux by @xcite and @xcite .",
    "it also uses some ideas from a ctl * tableau approach in @xcite where uselessly long branches are curtailed .",
    "the general shape of the tableau and its construction rules are mostly unsurprising but the two novel prune rules are perhaps a surprisingly simple way to curtail repetitive branch extension and may be applicable in other contexts .",
    "the tableau search allows completely independent searching down separate branches and so lends itself to parallel computing .",
    "in fact this approach is `` embarrassingly parallel '' @xcite .",
    "thus there is also potential for quantum implementations .",
    "furthermore , only formula set labels need to be recorded down a branch , and checked back up the one branch , and so there is great potential for very fast implementations .    the soundness , completeness and termination of the tableau search is proved .",
    "the proofs are mostly straightforward . however , the completeness proof with the prune rules has some interesting reasoning .",
    "we provide a simple demonstration prototype reasoning tool to allow readers to explore the tableau search process . the tool is not optimised for speed in any way but we report on a small range of experiments on standard benchmarks which demonstrate that the new tableau will be competitive with the current state of the art @xcite .",
    "in this paper we give some context in section  [ sec : other ] , before we briefly confirm our standard version of the well - known syntax and semantics for ltl in section  [ sec : synsem ] , describe our tableau approach is general terms section  [ sec : tab ] , present the rules section  [ sec : rules ] , make some comments and provide some motivation for our approach section  [ sec : motiv ] , prove soundness in section  [ sec : sound ] , prove completeness in section  [ sec : complete ] , and briefly discuss complexity and implementation issues section  [ sec : complex ] , and detailed comparisons with the schwendimann approach in section  [ sec : compare ] , before a conclusion section  [ sec : concl ] .",
    "the latest version of this long report can be found at http://www.csse.uwa.edu.au/~mark/research/online/ltlsattab.html with links to a java implementation of the tool and full details of experiments .",
    "ltl is an important logic and there has been sustained development of techniques and tools for working with it over more than half a century .",
    "many similar ideas appear as parts of different theoretical tools and it is hard for a researcher to be across all the threads .",
    "thus it is worth putting the ideas here in some sort of context .",
    "we will define structures and formulas more carefully in the next section but a structure is essentially a way of definitively and unambiguously describing an infinite sequence of states and an ltl formula may or may not apply to the sequence : the sequence may or may not be a model of the formula .",
    "see section 3 or @xcite for details .",
    "we are addressing a computational task called _ satisfiability checking_. that is , given an ltl formula , decide whether or not there exists any structure at all which is a model of that formula .",
    "input is the ltl formula , output is yes or no .",
    "the procedure or algorithm must terminate with the correct answer .",
    "this problem is pspace complete in the size of formula @xcite .",
    "there is a related but separate task called _ model checking_. model checking is the task of working out whether a given structure is a model or not of a given formula .",
    "input is the ltl formula and a description of a system , output is yes or no , whether or not there is a behaviour generated by the system which is a model of the formula ( or some variant on that ) .",
    "model checking may seem to be more computationally demanding in that there is a formula and system to process . on the other hand ,",
    "as described in @xcite and outlined below , it is possible to use model checking algorithms to do satisfiability checking efficiently ( in pspace ) .",
    "model - checking itself , with a given formula on a given structure , is also pspace - complete @xcite , but in @xcite we can find an algorithm that is exponential in the size of the formula and linear in the size of the model .",
    "the thorough experimental comparison in @xcite finds that across a wide range of carefully chosen benchmarks , none of the usual three approaches to ltl satisfiability testing dominates .",
    "here we briefly introduce tableaux and distinguish the automata - based model - checking approach .",
    "resolution is a very different technique and we refer the reader elsewhere , for example to @xcite .",
    "tableau approaches trace their origins to the semantic tableaux , or truth trees , for classical logics as developed by beth @xcite and smullyan @xcite .",
    "the traditional tree style remains for many modal logics @xcite but , as we will outline below , this is not so for the ltl logic .",
    "the tableau itself is ( typically ) a set of nodes , labelled by single formulas or sets of formulas , with a successor relation between nodes .",
    "the tree tableau has a root and the successor relation gives each node @xmath0 , @xmath1 or @xmath2 children .",
    "the tableau is typically depicted with the root at the top and the children below their parent : thus giving an upside tree - shape .",
    "building a tableau constitutes a decision procedure for the logic when it is governed by rules for labelling children nodes , for counting a node as the leaf of a successful branch and for counting a node as the leaf of a failed branch .",
    "finding one successful branch typically means that the original formula is satisfiable while finding all branches failing means it is not satisfiable .",
    "there are efficiently implemented tableau - based ltl satisfiability reasoning tools , which are easily available , such as pltl @xcite and lwb @xcite .",
    "we describe the approach and its variations in more detail in the next subsection .",
    "the other main approach to ltl satisfiability checking is based on a reduction of the task to a model - checking question , which itself is often implemented via automata - based techniques . the traditional automata approach to model checking",
    "seen , for example in @xcite , is to compose the model with an automaton that recognizes the negation of the property of interest and check for emptiness of the composed structure .",
    "recently there has been some serious development of satisfiability checking on top of automata - based model - checking that ends up having some tableau - like aspects .",
    "the automata approach via model - checking as described in @xcite shows that if you can do model checking you can do satisfiability checking .",
    "one can construct an automaton which will represent a universal system allowing all possible traces from the propositions .",
    "a given formula is satisfiable iff the universal system contains a model of the formula . by not actually building the universal system",
    "entirely the overall task can be accomplished in pspace in the size of formula . some fast and effective approaches to satisfiability checking",
    "can then be developed by reasoning about the model checking using symbolic ( bounded ) sat or bdd - based reasoners such as cadencesmv and nusmv @xcite .",
    "alternatively , _",
    "explicit _ automata - based model - checkers such as spin @xcite could be used for the model checking but @xcite shows these to not be competitive .",
    "an important part of the symbolic approach is the construction of a symbolic automaton from the formula and this involves a tableau - like construction with sets of subformulas determining states .",
    "the symbolic automaton or tableau presented as part of the model - checking procedure in @xcite has been commonly used but this has been extended in @xcite to a portfolio of translators . also an ltl",
    "to tableau tool used in @xcite is available via the first author s website .",
    "we discuss these sorts of tableaux again briefly below .",
    "the model - checking approach to ltl satisfiability checking is further developed in @xcite where a novel , on - the - fly process combines the automata - construction and emptiness check .",
    "the tool out - performs previously existing tools for ltlsat which use model - checking .",
    "comprehensive experimental comparisons with approaches to ltlsat beyond automata - theoretic model - checking based ones is left as future work .      in some modal logics , and in temporal logics in particular , variations on the traditional tableau idea have been prevalent and the pure tree - shape is left behind as a more complicated graph of nodes is constructed . as we will see , this may happen in these variant tableaux , when the successor relation is allowed to have _ up - links _ from descendants to ancestors , _ cross - links _ from nodes to nodes on other branches , or where there is just an arbitrary directed graph of nodes .",
    "such a _ graph - shaped _ approach results if , for example , we give a _ declarative _ definition of a node and the successor relation determined by the labels on the node at each end .",
    "typically , the node is identified with its label .",
    "certain sets of formulas are allowed to exist as nodes and we have at most one node with a given label . examples of this sort include the tableaux in @xcite and ( the symbolic automaton of ) @xcite .",
    "alternatively , the tableau may have a traditional form that is essentially _ tree - shped _ with a root and branches of nodes descending and branching out below that",
    ". usually a limited form of up - link is allowed back from a node ( leaf or otherwise ) to one of its ancestors",
    ". there may be tableaux which contain several different nodes with the same label .",
    "examples , include @xcite and the new one .",
    "the new style tableau even allows multiple nodes down the same branch with the same labels while this is not permitted in @xcite .    the tableau construction may be _ incremental _ , where only reachable states are constructed , versus _ declarative _ , when we just define what labels are present in the tableau and which pairs of labels are joined by a directed edge .",
    "a tableau is said to be _ one - pass _ if the construction process only build legitimate nodes as it proceeds . on the other hand ,",
    "it is _ multi - pass _ if there is an initial construction phase followed by a culling phase in which some of the nodes ( or labels ) which were constructed are removed as not being legitimate .",
    "a construction of a tableau , or a search through a tableau , will often proceed in a _ depth - first _ manner starting at a chosen node and then moving successively to successors .",
    "an alternative is via some sort of _ parallel _ implementation in which branches are explored concurrently .",
    "search algorithms may make use of heuristics in guessing a good branch to proceed on .",
    "undertaking a depth - first search in a graph - shaped label - determined tableau may seem to be similar to building a tree - shaped tableau but it is likely that the algorithm will behave differently when it visits a label that has been seen before down an earlier branch . in a tree - shaped tableau",
    "this may not need to be recorded .    which is faster ?",
    "trees @xcite may have 2exptime worst case complexity .",
    "graphs re - use labels and make many possible branches at one time : in general exptime .",
    "however , @xcite demonstrated that the tree - shaped approach of @xcite ( consistently and sometimes drastically ) outperformed the graph - shaped approach of @xcite .",
    "wolper s @xcite was the first ltl tableau .",
    "it is a multi - pass , graph - shaped tableau .",
    "the nodes are labelled with sets of formulas ( from the closure set ) with a minimal amount of extra notation attached to record which formulas already have been decomposed .",
    "one builds the graph starting at @xmath3 and using the standard sorts of decomposition rules and the transition rule .",
    "the tableau may start off looking like a tree but there must not be repeated labels so edges generally end up heading upwards and/or crossing branches .",
    "after the construction phase there is iterated elimination of nodes according to rules about successors and eventualities .",
    "( this approach was later extended to cover the inclusion of past - time operators in @xcite ) .",
    "there was a similar but slightly quicker proposal for a multi - pass , graph - shaped tableau for ltl in @xcite .",
    "the similar tableau in @xcite is incremental but multi - pass as it builds a graph from initial states , then looks for strongly connected components ( to satisfy eventualities ) . other graph - like tableaux include those in @xcite .",
    "a graph - shaped tableau for ltl also forms part of the model - checking approach suggested in @xcite . here",
    "the need to check fulfilment of eventualities is handed over to some ctl fairness constraint checking on a structure formed from the product of the tableau and the model to be checked .",
    "the symbolic model checker smv is used to check the property subject to those fairness constraints . in @xcite ,",
    "the ` symbolic automaton ' approach based on the tableau from @xcite was adapted to tackle ltl satisfiability checking .",
    "figure  [ fig : cgh97tab ] shows a typical graph - style tableau from @xcite .",
    "schwendimann s tableau @xcite is close to being purely tree - shaped ( not a more general graph ) .",
    "it is also one - pass , not relying on a two - phase building and pruning process .",
    "however , there are still elements of communication between separate branches and a slightly complicated annotation of nodes with depth measures that needs to be managed as it feeds in to the tableau rules . in general , to decide on success or not for a tableau we need to work back up the tree towards the root , combining information from both branches if there are children .",
    "thus , after some construction downwards , there is an iterative process moving from children to parents which may need to wait for both children to return their data .",
    "this can be done by tackling one branch at a time or in theory , in parallel .",
    "the data passed up consists in an index number and a set of formulas ( unfulfilled eventualities ) .",
    "we describe this approach in more detail in section  [ sec : compare ] .",
    "figure  [ fig : schwetab ] shows a typical tree - style tableau from @xcite .",
    "the main available tools for ltl satisfiability checking are listed and described in @xcite .",
    "these included pltl which ( along with another tableau option ) implements schwendiammn s approach .",
    "we should also mention @xcite here .",
    "the tool uses a novel , on - the - fly approach to ltlsat via model - checking and out performs previously existing tools for ltlsat which use the model - checking approach .",
    "there is an open source ltl to tableau translator available from rozier s website used for the @xcite approach .",
    "also , a more limited implementation was released open - source following the publication of @xcite : it is called ltl2smv and distributed with the nusmv model checker .",
    "there is a brief comparison of the tableau approaches of schwendimann and wolper in @xcite and in @xcite there is a comparison symbolic model - checking approaches .",
    "however , the most thorough benchmarking exercise is as follows .",
    "most known implemented tools for deciding satisfiability in ltl are compared in @xcite .",
    "the best tools from three classes are chosen and compared : automata - based reduction to model - checking , tableau and resolution . a large range of benchmark patterns are collected or newly proposed .",
    "they find that no solver , no one of the three approaches , dominates the others .",
    "the tableau tool `` pltl '' based on schwendimann s approach is the best of the tableaux and the best overall on various classes of pattern .",
    "a portfolio solver is suggested and also evaluated .",
    "the benchmark formulas , rendered in a selection of different formats , is available from schuppan s webpage .",
    "the two prune rules are novel .",
    "they force construction of branches to be terminated in certain circumstances .",
    "they depend only on the labels at the node and the labels of its ancestors . in general they may allow a label to be repeated some number of times before the termination condition is met .",
    "the overall tableau shape is novel .",
    "although tableaux are traditionally tree - shaped , no other tableau system for ltl builds graphs that are tree shaped .",
    "most tableaux for ltl are more complicated graphs .",
    "the schwendimann approach is close to being tree - shaped but there are still up - links from non - leaves .",
    "the labels on the tableau are just sets of formulas from the closure set of the original formula ( that is , subformulas and a few others ) . other approaches ( such as schwendimann s ) require other annotations on nodes .    overall tableau : one that is in completely traditional style ( labels are sets of formulas ) , tree shaped tableau construction , no extraneous recording of calculated values , just looking at the labels .",
    "completely parallel development of branches .",
    "no communication between different branches .",
    "this promises interesting and useful parallel implementations .",
    "the reasoning speed seems to be ( capable of being ) uniquely fast on some important benchmarks .",
    "we assume a countable set @xmath4 of propositional atoms , or atomic propositions .    a ( transition ) structure is a triple @xmath5 with @xmath6 a finite set of states , @xmath7 a binary relation called the transition relation and labelling @xmath8 tells us which atoms are true at each state : for each @xmath9 , @xmath10 .",
    "furthermore , @xmath11 is assumed to be total : every state has at least one successor @xmath12    given a structure @xmath5 an @xmath13-sequence of states @xmath14 from @xmath6 is a _ fullpath _ ( through @xmath5 ) iff for each @xmath15 , @xmath16 . if @xmath17 is a fullpath then we write @xmath18 , @xmath19 ( also a fullpath ) .",
    "the ( well formed ) formulas of ltl include the atoms and if @xmath20 and @xmath21 are formulas then so are @xmath22 , @xmath23 , @xmath24 , and @xmath25 .",
    "we will also include some formulas built using other connectives that are often presented as abbreviations instead .",
    "however , before detailing them we present the semantic clauses .",
    "semantics defines truth of formulas on a fullpath through a structure .",
    "write @xmath26 iff the formula @xmath20 is true of the fullpath @xmath27 in the structure @xmath28 defined recursively by : +    [ cols= \" < , < , < \" , ]     we use benchmark formulas from the various series described in @xcite .",
    "the only new series we add is @xmath29 as follows : for all @xmath30 , @xmath31 originally , the @xmath29 series was invented by the author to obtain an idea experimentally how much longer it might take the new tableau compared to schwendimann s on testing examples but the experiments show the opposite outcome .",
    "in this section we give a detailed comparison of the new tableau s operation compared to that of the schwendimann s tableau .      from @xcite .",
    "the tableau is a labelled tree .",
    "suppose we are to decide the satisfiability or not of @xmath32 .",
    "labels are of the form @xmath33 where @xmath34 is a set of formulas ( subformulas of @xmath32 ) , @xmath35 is a pair ( described shortly ) and @xmath11 is a pair of the form @xmath36 where @xmath37 and @xmath38 .    the @xmath34 part of a node label @xmath33 is a set of subformulas of @xmath32 serving a similar purpose to our node labels .",
    "the second component @xmath35 is a pair where @xmath39 is a set of formulas , and @xmath40 is a list of pairs each of the form @xmath41 .",
    "the set @xmath39 records the eventualities cured at the current state .",
    "the list @xmath42 is a record of useful information from the state ancestors of the current node along the current branch .",
    "each @xmath43 records the poised label @xmath44 of the @xmath15th state down the branch and the set @xmath45 of eventualities fulfilled there .",
    "the second component @xmath6 essentially contains information about the labels on the current branch of the tree and so is just a different way of managing the same sort of `` historical '' recording that we manage in our new tableau .",
    "we manage the historical records by having the branch ancestor labels directly available for checking .",
    "the third component @xmath36 , a pair consisting of a number and a set of formulas , is specific to the schwendimann tableau process and has no analogous component in our new tableau .",
    "the number @xmath46 records the highest index of ancestor state in the current branch that can be reached directly by an up - link from a descendent node of the current node .",
    "the set @xmath47 contains the eventualities which are in the current node label but which are not cured by the time of the end of the branch below .",
    "the elements of the third component are not known as the tableau is constructed until all descendants on all branches below the current node are expanded .",
    "then the values can be filled in using some straightforward but slightly lengthy rules about how to compute them from children to parent nodes .",
    "the rules for working out these components are slightly complicated in the case of disjunctive rules , including expansion of @xmath48 formulas .",
    "the third component helps assess when a branch and the whole tableau can be finished .",
    "apart from having to deal with the second and third components of the labels , the rules are largely similar to the rules for the new tableau . however , there are no prune rules",
    ". the schwendimann tableau does not continue a branch if there is a node with the same label as one of its proper ancestors .",
    "the branch stops there .",
    "the other main difference to note is that the schwendimann tableau construction rules for disjunctive formulas do in general need to combine information from both children s branches to compute the label on the parent .",
    "consider the example @xmath49    technically schwendimann tableau assumes all formulas ( the input formula and its subformulas ) are in _ negation normal form _ which involves some rewriting so that negations only appear before atomic propositions .",
    "however , we can make a minor modification and assume the static rules are the same as our new ones .",
    "we start a tableau with the label @xmath50 with @xmath51 , @xmath52 and @xmath53 with both @xmath46 and @xmath47 unknown as yet .",
    "tableau rules decompose @xmath54 and subsequent subformulas in a similar way to in our new tableau .",
    "neither @xmath6 nor @xmath11 change while we do not apply a step rule ( known as @xmath55 rule ) .",
    "the conjunctions and @xmath56 rules are just as in our new tableau .",
    "thus the tableau construction soon reaches a node with the label @xmath50 as follows : @xmath52 , @xmath53 with both @xmath46 and @xmath47 unknown as yet and @xmath57    there are six choices causing branches within this state caused by the disjuncts and the @xmath58 formulas .",
    "this could lead to 64 different branches before we complete the state but many of these choices lead immediately to contradictions .",
    "the details depend on the order of choice of decomposing formulas .",
    "a typical expansion leads to a branch with a node labelled by the state @xmath50 as follows : @xmath52 , @xmath53 with both @xmath46 and @xmath47 unknown as yet and    @xmath59    notice that the first component of @xmath6 is still empty as , in this case , none of the eventualities , @xmath60 nor @xmath61 , is fulfilled here .",
    "the next rule to use in such a situation is the transition rule , which is very similar to that in our new tableau , except that the second component part of the label is updated as well .",
    "we find @xmath62 , @xmath53 with both @xmath46 and @xmath47 unknown as yet and @xmath63    a further series of expansions and choices leads us to the following new state , @xmath64 , @xmath53 with both @xmath46 and @xmath47 unknown as yet and @xmath65 applying the step rule here gives us the following : @xmath66 , @xmath53 with both @xmath46 and @xmath47 unknown as yet and @xmath67    when this is branch is expanded further then we find ourselves at @xmath68 with @xmath66 and @xmath53 with both @xmath46 and @xmath47 unknown as yet .",
    "notice the main first part of the label has ended up being @xmath69 again .",
    "thus we have a situation for the loop rule .",
    "the loop rule uses the facts that the state repeated has the index @xmath1 in the branch above and that the eventuality @xmath61 has not been fulfilled in this branch .",
    "thus we can fill in @xmath70 and @xmath71 at all the intervening pre - states which have been left unknown so far .",
    "these values do not as yet transfer up to the top state as yet as there are still other undeveloped branches from within that state .",
    "the other two states that we find are a minor variation on @xmath72 , @xmath73 and a mirror image of @xmath72 when @xmath74 is true instead of @xmath75 : @xmath76 then all eventualities are fulfilled and the tableau succeeds after 3933 steps .",
    "the overall picture of states ( poised labels ) is as follows ( with @xmath1 standing for @xmath72 etc ) .",
    "@xmath77      by comparison , the new tableau visits the same states but takes only 3087 steps to proceed as follows :    @xmath78      the new tableau can always decide on the basis of a single branch , working downwards .",
    "schwendimann s needs communication up and between branches , and will generally require full development of several branches .",
    "the new tableau just needs to store formula labels down current branch .",
    "however , if doing depth - first search , also needs information about choices made to enable backtracking .",
    "schwendimann s tableau needs to pass extra sets of unfulfilled eventualities back up branches also keeping track of indices while backtracking .",
    "it also needs to store information about choices made to enable backtracking .",
    "we have introduced novel tableau construction rules which support a new tree - shaped , one - pass tableau system for ltlsat .",
    "it is traditional in style , simple in all aspects with no extra notations on nodes , neat to introduce to students , amenable to manual use and promises efficient and fast automation .    in searching or constructing the tableau",
    "one can explore down branches completely independently and further break up the search down individual branches into separate independent processes .",
    "thus it is particularly suited to parallel implementations .",
    "experiments show that , even in a standard depth - first search implementation , it is also competitive with the current state of the art in tableau - based approaches to ltl satisfiability checking .",
    "this is good reason to believe that very efficient implementations can be achieved as the step by step construction task is particularly simple and requires on minimal storage and testing .",
    "because of the simplicity , it also seems to be a good base for more intelligent and sophisticated algorithms : including heuristics for choosing amongst branches and ways of managing sequences of label sets .",
    "valentin goranko , angelo kyrilov , and dmitry shkatov .",
    "tableau tool for testing satisfiability in ltl : implementation and experimental analysis .",
    ", 262(0):113  125 , 2010 .",
    "proceedings of the 6th workshop on methods for modalities ( m4m-6 2009 ) .",
    "yonit kesten , zohar manna , hugh mcguire , and amir pnueli .",
    "a decision algorithm for full propositional temporal logic . in costas courcoubetis ,",
    "editor , _ cav _ , volume 697 of _ lecture notes in computer science _ , pages 97109 .",
    "springer , 1993 .",
    "kristin  y. rozier and moshe  y. vardi .",
    "ltl satisfiability checking . in dragan bosnacki and stefan",
    "edelkamp , editors , _ spin _ , volume 4595 of _ lecture notes in computer science _ , pages 149167 .",
    "springer , 2007 .",
    "k.  y. rozier and m.  y. vardi .",
    "a multi - encoding approach for ltl symbolic satisfiability checking . in _",
    "17th international symposium on formal methods ( fm2011 ) _ , volume 6664 of _ lncs _ , pages 417431 .",
    "springer verlag , 2011 .",
    "s.  schwendimann . a new one - pass tableau calculus for pltl . in harrie c.  m. de  swart , editor , _ proceedings of international conference , tableaux 1998 , oisterwijk _ , lnai 1397 , pages 277291 .",
    "springer , 1998 .",
    "viktor schuppan and luthfi darmawan .",
    "evaluating ltl satisfiability solvers . in tevfik bultan and pao - ann",
    "hsiung , editors , _",
    "atva11 _ ,",
    "volume 6996 of _ lecture notes in computer science _ , pages 397413 .",
    "springer , 2011 ."
  ],
  "abstract_text": [
    "<S> propositional linear time temporal logic ( ltl ) is the standard temporal logic for computing applications and many reasoning techniques and tools have been developed for it . </S>",
    "<S> tableaux for deciding satisfiability have existed since the 1980s . however , the tableaux for this logic do not look like traditional tree - shaped tableau systems and their processing is often quite complicated . </S>",
    "<S> we present a new simple traditional - style tree - shaped tableau for ltl and prove that it is sound and complete . as well as being simple to understand , to introduce to students and to use manually , it also seems simple to implement and promises to be competitive in its automation . </S>",
    "<S> it is particularly suitable for parallel implementations .    </S>",
    "<S> note : the latest version of this report can be found via http://www.csse.uwa.edu.au/~mark/research/online/ltlsattab.html . </S>"
  ]
}
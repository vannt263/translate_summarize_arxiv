{
  "article_text": [
    "a classical problem in linear elasticity concerns the computation of the displacement , stress and strain due to force and dislocation sources with suitable boundary conditions imposed on a half - space .",
    "the case of zero normal stress is of particular importance in geophysical applications , for which the exact solution was derived by mindlin @xcite .",
    "we will concentrate here on the question of accelerating the evaluation of the field due to a collection of such force and dislocation vectors .",
    "more precisely , we will describe two new analytic representations for the image structure in mindlin s solution that can be incorporated into a fast multipole method ( fmm ) .",
    "with @xmath0 sources and @xmath1 sensor / target locations , the fmm reduces the cost of evaluating the fields from @xmath2 to @xmath3 .",
    "the fmm can also be used to accelerate integral - equation based methods for elastostatic boundary value problems on surfaces embedded in the half - space , avoiding the ill - conditioning associated with finite element and finite difference discretizations of the underlying partial differential equations .",
    "we will begin with a discussion of the mathematical foundations for the new scheme , followed by a brief description of the full fmm implementation . for readers unfamiliar with fast multipole methods",
    ", we suggest the papers @xcite to gain some familiarity , although the mathematical treatment here is largely self - contained .    in section [ sec : numerical ]",
    ", we present numerical experiments both for collections of singular sources and for the evaluation of layer potentials using the quadrature method of @xcite .",
    "to fix notation , let us first consider the displacement at an observation point @xmath4 due to a force vector @xmath5 acting at the source point @xmath6 in free - space .",
    "the solution is given by the well - known kelvin solution : @xmath7 where @xmath8 @xmath9 , @xmath10 , and @xmath11 are the lam coefficients .",
    "( in the preceding expressions , and throughout the paper , we will generally make use of the standard summation convention . on occasion",
    "we will write out the formulas explicitly when it makes the analysis clearer . )",
    "formulas for the strain @xmath12 and stress @xmath13 tensors can be obtained from partial derivatives of the preceding formulas for displacement with respect to each component @xmath14 : @xmath15 @xmath16    a number of fast methods for the kelvin solution have been developed , based either on the fft or the fmm @xcite .    in a half - space ,",
    "the solution is more complicated , involving several image sources .",
    "we assume that the @xmath17-axis points up and that sources @xmath18 and targets @xmath19 are in the lower half - space ( @xmath20 ) . with a slight modification of okada s notation @xcite ,",
    "we let @xmath21 corresponding to the usual cartesian components of the vector from the image source @xmath22 to the target , with the sign flipped in the @xmath23 component .",
    "note that @xmath24 .",
    "we denote the distance from the image to the target point by @xmath25    mindlin showed that the exact solution to the half - space problem with zero normal stress can be written in the form @xmath26 , where @xmath27 with @xmath28 \\right\\ } \\ , , \\label{uijbc } \\\\",
    "{ c_i^j } = &   \\frac{1}{4 \\pi \\mu }   ( 1- 2\\delta_{i3 } ) \\left\\ { ( 2-\\alpha ) \\frac{r_i \\delta_{j3 } - r_j \\delta_{i3}}{r^3 } + \\right .",
    "\\nonumber \\\\ & \\left .",
    "\\quad \\alpha \\xi_3 \\left [ \\frac{\\delta_{ij}}{r^3 } - \\frac{3r_ir_j}{r^5 } \\right ] \\right\\}.\\end{aligned}\\ ] ]    we will refer to @xmath29 as the single - layer kernel in a half - space .    the first contribution to @xmath30 in formula ( [ mindlinfull ] ) is the  direct arrival \" from the source in a uniform infinite medium , given by the kelvin formula ( [ slpkernel ] ) .",
    "the second piece @xmath31 has the same form , but with the roles of @xmath32 and @xmath33 reversed . since @xmath34 , this is the arrival at  target \" @xmath35 from a source at @xmath6 with modified lam coefficients .",
    "thus , interactions governed by both the @xmath36 and @xmath37 contributions can be computed using the  free - space \" single - layer kernel .",
    "@xmath38 and @xmath39 are quite different and their analysis is the principal contribution of this paper .",
    "a simple algebraic trick permits the computation of the @xmath37 contributions .",
    "namely , we set @xmath40 and @xmath41 .",
    "it is easy to check that @xmath42 thus , @xmath43(x_1,x_2,-x_3 ) \\",
    ", , \\ ] ] where @xmath44 $ ] denotes the kelvin formula with the dependence on the lam coefficients made explicit .",
    "[ rmk_slp_signflip ] note that the argument @xmath17 has been replaced by @xmath45 , so that some care is required when evaluating terms such as @xmath46 which appear in the stress and strain tensors .",
    "the double - layer kernel in a half - space is given by @xmath47 \\nu_k .",
    "\\label{dlpkernel}\\ ] ] this kernel describes the displacement field due to a dislocation vector @xmath48 across a surface @xmath49 with orientation vector @xmath50 : @xmath51 ( typically , the orientation vector is normal to the surface @xmath49 . )",
    "the dislocation vector @xmath52 is sometimes called a _",
    "double - force vector_.    to compute @xmath53 , we note first that @xmath54 where @xcite @xmath55 @xmath56 \\frac { \\delta_{3k}r^2 + r_k ( 2r+r_3)}{r^3(r+r_3)^2 }    \\label{bijk } \\\\ & \\qquad    +    \\left [ \\frac{r_i \\delta_{jk } + r_j \\delta_{ik}}{r(r+r_3)^2 }   -   \\right .",
    "\\nonumber \\\\ & \\qquad \\qquad \\left .",
    "\\left . r_ir_j \\frac{2 \\delta_{3k}r^2 + r_k ( 3r+r_3)}{r^3(r+r_3)^3 } \\right ] ( 1-\\delta_{i3})(1-\\delta_{j3 } ) \\right ] \\right\\ } , \\nonumber \\end{aligned}\\ ] ] @xmath57    + \\alpha \\left [ \\frac{\\delta_{ij}}{r^3 } - \\frac{3 r_i r_j}{r^5 } \\right ] \\delta_{3k } + \\label{cijk } \\\\ &",
    "\\qquad\\qquad \\left .",
    "3 \\alpha \\xi_3 \\left [ \\frac{r_i\\delta_{jk } + r_j \\delta_{ik } + r_k \\delta_{ij}}{r^5 } -   \\frac{5r_ir_jr_k}{r^7 } \\right ] \\right\\}. \\nonumber\\end{aligned}\\ ] ]    as for the single - layer kernel , @xmath58(x_1,x_2,-x_3 ) \\ , .\\ ] ]    we need to compute the contribution of @xmath37 to the double - layer kernel @xmath53 according to ( [ dlpkernel ] ) : @xmath59 \\nu_k d_j \\ , .\\ ] ] suppose that we invoke the _ free - space _ double - layer kernel with @xmath60 and dislocation vector @xmath61 , so that we actually compute @xmath62 \\nu_k d_j   \\\\   & = \\left [ - \\tlambda \\delta_{jk }    \\frac{\\partial { a_i^n}}{\\partial \\xi_n } + \\mu   \\left ( \\frac{\\partial { a_i^j}}{\\partial \\xi_k } +   \\frac{\\partial { a_i^k}}{\\partial \\xi_j } \\right ) \\right ] \\nu_k d_j \\ , .\\end{aligned}\\ ] ] fortunately , the difference is a simple harmonic function : @xmath63 \\nu_k d_j   \\nonumber \\\\ & = ( \\tlambda+ \\lambda )    \\frac{\\partial { a_i^n}}{\\partial \\xi_n }   ( { \\bf \\nub \\cdot { d } } ) \\nonumber   \\\\ & = \\frac{1}{8\\pi\\mu } ( 2\\lambda + 4\\mu ) ( { \\bf \\nub \\cdot { d } } ) \\left\\ {   \\alpha \\frac{r_i}{r^3 }   - ( 2- \\alpha )",
    "\\frac{3r_i   + r_i } { r^3 } + 3 ( 2-\\alpha ) \\frac{r_i r^2}{r^5 }   \\right\\ }   \\nonumber \\\\ & = \\frac{1}{8\\pi\\mu } ( 2\\lambda + 4\\mu ) ( { \\bf \\nub \\cdot { d } } ) ( 2\\alpha-2 ) \\frac{r_i}{r^3 }   \\nonumber \\\\ & = \\frac{1}{2\\pi } ( { \\bf \\nub \\cdot { d } } ) \\frac{-r_i}{r^3 } =    \\frac{1}{2\\pi } ( { \\bf \\nub \\cdot { d } } )   \\frac{\\partial}{\\partial x_i } \\frac{1}{r } \\ , .   \\label{diffcomp}\\end{aligned}\\ ] ]    this difference can be computed using a single call to the fmm for the laplace equation , since the result is simply the gradient of the field due to a point source with strength @xmath64 .    for those keeping careful track of indices , note that , using the okada notation , it is indeed the gradient that is required .",
    "we have moved @xmath17 to @xmath45 in the free space call .",
    "thus , @xmath65 justifying the last equality in ( [ diffcomp ] ) .    the difficulty in developing a fast algorithm for the mindlin solution , however , lies not in handling the free space kernel @xmath36 or the simple image @xmath37 .",
    "rather , it lies in the kernels @xmath66 and @xmath67 .",
    "ignoring the scaling factor @xmath69 , the components of displacement induced by the @xmath68 image can be written in the form :    @xmath70    without entering into a detailed derivation , mindlin s basic observation was that the @xmath68 image could be derived from a consideration of all second derivatives of a scalar potential .",
    "more precisely , we have the following lemma .    [ l3.1 ]",
    "let @xmath71 denote the scalar potential given by @xmath72 . then @xmath73 @xmath74 where the subscript denotes differentiation with respect to the corresponding variable @xmath75 .",
    "it follows that the contribution to the displacement induced by the @xmath68 image in the single - layer kernel is given by @xmath76 \\",
    ", , \\ ] ] where @xmath77 denotes the gradient with respect to the target location and @xmath78 denotes the gradient with respect to the image source location at @xmath22 .",
    "[ slprmk ] note that if @xmath79 were the potential due to a simple charge source , then @xmath80 would be the gradient of the potential induced by a dipole with orientation and strength given by @xmath81 .",
    "a straightforward but tedious calculation yields    [ l3.2 ] let @xmath72 .",
    "then the contribution to the displacement induced by the @xmath68 image in the double - layer kernel is given by @xmath82 where @xmath83   \\nonumber \\\\ & \\qquad - 2\\lambda ( { \\bf \\nub \\cdot { f } } ) \\bs_{\\xi_3\\xi_3}. \\label{bdlp}\\end{aligned}\\ ] ]    [ dlprmk ] note that the formula for @xmath84 in lemma [ l3.2 ] is , in essence , a quadrupole field of a @xmath79-type source with specific second derivative contributions defined in ( [ bdlp ] ) .",
    "it is easy to verify that @xmath79 is a scalar harmonic function in the lower half - space .",
    "it is also clear , however , that it can not describe the field due to a bounded collection of charges , since @xmath79 is growing as @xmath85 . in this section ,",
    "we describe some new far field representations that are somewhat involved , but permit much more efficient computation .",
    "@xmath86    we begin by considering the @xmath79-type sources contained in the boxes @xmath87 and @xmath88 in fig .",
    "[ downlist ] .",
    "they are separated from the target boxes @xmath89 and @xmath90 by at least one box length , so that far field and/or local expansions should be rapidly convergent . from above , the displacement in the lower half - space due to the image sources in , say ,",
    "@xmath87 is given by @xmath91 , where the scalar @xmath92 is given by @xmath93 where @xmath0 denotes the number of image sources in @xmath87 and @xmath94 denotes the vector from the @xmath95th image source to the target point @xmath96 .    within the box @xmath89 ,",
    "however , the field @xmath92 is smooth and harmonic , and can be written in the form of a local expansion :    @xmath97    with @xmath98 the spherical coordinates of @xmath99 with respect to the box center of @xmath89 . here",
    ", @xmath100 is the usual spherical harmonic of degree @xmath95 and order @xmath101 @xmath102 where the associated legendre functions @xmath103 are defined by the rodrigues formula @xmath104 and @xmath105 is the legendre polynomial of degree @xmath95 .",
    "the coefficients of the local expansion can be computed by projection onto the spherical harmonic basis ( integrating over the surface of a sphere enclosing the box @xmath89 and centered at the box center ) .",
    "that is , @xmath106 this can be carried out in @xmath107 work , where @xmath108 is the order of the expansion in ( [ local ] ) by using a tensor product grid with @xmath109 gauss - legendre nodes in the @xmath110 variable and @xmath109 equispaced nodes in the @xmath111 variable .    in order to develop a more efficient fast algorithm , however , we would like to have outgoing representations from the source box @xmath87 that can make use of the full framework of the fmm @xcite .",
    "one such representation is based on the plane wave formula ( @xcite , p. 1256 ) for the potential at a target @xmath4 due to a simple charge source at @xmath22 : @xmath112 valid for @xmath113 .",
    "the following theorem provides an expression for the displacement induced by single and double - layer sources in terms of plane waves ( that is , complex exponentials of the components @xmath4 ) .",
    "[ t3.1 ] let @xmath114 denote the displacement induced by a single - layer force vector @xmath81 located at the image source @xmath22 that lies in a source box @xmath115 centered at @xmath116 .",
    "then @xmath117 where @xmath118 and @xmath119    theorem [ t3.1 ] can be proven by fourier analysis and contour deformation , as in the derivation of the representation ( [ exprep ] ) in @xcite .",
    "[ r3.3 ] alternatively , we recall that @xmath120",
    ". we may write this relation in the form @xmath121 it is straightforward to check that constants of integration can be ignored since they would only permit linear functions of @xmath122 , @xmath123 , and @xmath17 to appear in @xmath79 and these are annihilated by the second derivative operators which arise in computing the displacement , according to lemma [ l3.1 ] .",
    "note now that the operator @xmath124 corresponds in ( [ exprep ] ) to division by @xmath125 .",
    "this results in a divergent integral , but using lemma [ l3.1 ] again , the displacement clearly corresponds to multiplication by a factor of either @xmath126 , @xmath127 , or @xmath128 ( the signatures of @xmath129 , @xmath130 , and @xmath131 , respectively ) .",
    "this argument , of course , is not entirely rigorous , but can be made so .    by superposition",
    ", we obtain a plane wave expansion for the field due to a set of sources , summarized in the following lemma .",
    "[ l3.3 ] let @xmath114 denote the displacement induced by a collection of single - layer force vectors @xmath132 at image source locations @xmath133 lying in a source box @xmath115 centered at @xmath116 .",
    "then the components of displacement are given by the plane wave representation of theorem [ t3.1 ] , with @xmath134    a plane wave expansion can be obtained for the double - layer kernel as well .",
    "the proof is analogous .",
    "[ t3.2 ] let @xmath114 denote the displacement induced by a double - layer force vector @xmath48 with orientation vector @xmath50 , located at the image source @xmath22 that lies in a source box @xmath115 centered at @xmath116 .",
    "then , @xmath135 where @xmath136 - 2 \\lambda ( { \\bf \\nub } \\cdot { \\bf d } )   ) , \\end{aligned}\\ ] ] and the @xmath137 are defined in ( [ sdef ] ) .",
    "[ l3.4 ] let @xmath114 denote the displacement induced by a collection of double - layer force vectors @xmath138 at image source locations @xmath139 with orientation vectors @xmath140 lying in a source box @xmath115 centered at @xmath116 .",
    "then the components of displacement are given by the plane wave representation of theorem [ t3.2 ] , with @xmath141 - 2 \\lambda ( { \\nub^n } \\cdot { \\bf d}^n )   ) .\\end{aligned}\\ ] ]    quadratures have been developed for these plane wave formulas in @xcite , valid so long as the source and target boxes are separated in the @xmath17-direction by at least one intervening box length . referring to fig .",
    "[ downlist ] , @xmath87 and @xmath88 are well separated from @xmath89 but only @xmath88 is well separated from @xmath90 . it is demonstrated in @xcite that 3 digits of accuracy can be achieved with about 100 plane waves , 6 digits can be achieved with about 560 plane waves , and 10 digits can be achieved with about 1800 plane waves .    more concretely , suppose we wish to enforce a maximum error of @xmath142 .",
    "given a well - separated image source @xmath143 and target @xmath19 , we have @xmath144 } ,   \\label{disc18}\\ ] ] where @xmath145 , and the weights @xmath146 , nodes @xmath147 and values @xmath148 are given in table [ tab2 ] .",
    "( the total number of exponentials required is @xmath149 . )",
    "the weights and nodes @xmath150 correspond to a discretization of the outer integral in ( [ exprep ] ) .",
    "the inner integral in ( [ exprep ] ) is discretized using the trapezoidal rule with @xmath151 nodes .",
    "the quadratures are designed under the assumption that @xmath152 and @xmath153 .",
    "this corresponds to their usage in the fast multipole method , where by convention , boxes at every level of the fmm hierarchy are rescaled to have unit size @xcite .",
    ".columns 1 and 2 contain the eighteen weights and nodes for discretization of the outer integral in ( [ exprep ] ) at six digit accuracy .",
    "column 3 contains the number of discretization points needed in the inner integral , denoted by @xmath151 ( from @xcite ) .",
    "[ tab2 ] [ cols=\">,>,>\",options=\"header \" , ]",
    "in this paper , we have presented a fast multipole method for elastostatic interactions using mindlin s solution  the green s function that satisfies the condition of zero normal stress in a half - space .",
    "we hope that the algorithm will prove useful in geophysical modeling .",
    "we thank shidong jiang , michael minion , michael barall , terry tullis , jim dieterich , and keith richards - dinger for useful conversations .",
    "this work was supported by the national science foundation under grant dms-0934733 and by the department of energy under contract defg0288er25053 .",
    "x. wang , j. kanpka , w. ye , n.r .",
    "aluru , j. white , algorithms in fast stokes and its application to micromachined device simulation , ieee trans .",
    "comput . aided des .",
    ". syst . * 25 * , 248257 ( 2006 ) ."
  ],
  "abstract_text": [
    "<S> in this paper , we present a fast multipole method ( fmm ) for the half - space green s function in a homogeneous elastic half - space subject to zero normal stress , for which an explicit solution was given by mindlin ( 1936 ) . </S>",
    "<S> the image structure of this green s function is unbounded , so that standard outgoing representations are not easily available . </S>",
    "<S> we introduce two such representations here , one involving an expansion in plane waves and one involving a modified multipole expansion . </S>",
    "<S> both play a role in the fmm implementation .    </S>",
    "<S> * key words . </S>",
    "<S> * fast multipole method ; linear elasticity ; mindlin s solution . </S>"
  ]
}
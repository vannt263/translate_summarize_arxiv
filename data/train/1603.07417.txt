{
  "article_text": [
    "load disaggregation or non - intrusive load monitoring ( nilm ) is the process of finding out how much each appliance within a household is consuming when only the aggregate current or power reading is available  @xcite .",
    "such readings are now available through smart meters , which have been , or are being , installed by most power utilities .",
    "in addition to determining appliance consumption patterns , nilm could help balance different loads within a power network  @xcite by predicting demand without the use of additional sensors .",
    "recent disaggregation methods make use of machine learning approaches such as clustering  @xcite , fuzzy systems  @xcite , and hidden markov models  @xcite .",
    "such methods might lead to practical solutions when large and sufficiently representative datasets become available for training , which is still not the case .",
    "the ultimate goal for nilm is to enable disaggregation without the need for supervised learning .",
    "there has been some recent progress in this area  @xcite , although the accuracy of such methods is still low .",
    "alternative approaches such as combinatorial optimization or integer programming ( ip ) have been much less explored .",
    "two notable earlier works on ip - based disaggregation include egarter  _ et  al . _",
    "@xcite and suzuki  _ et  al .",
    "_  @xcite .",
    "egarter  _ et  al . _",
    "formulated disaggregation as a modified knapsack problem and proposed a solution using an evolutionary algorithm . from a practical standpoint ,",
    "the drawback here is that evolutionary algorithms potentially have a long execution time , and their stochastic nature may lead to different solutions in different runs , even on the same data .",
    "our goal here is to develop a simpler and more principled approach that gives repeatable results .",
    "the other ip - based disaggregation proposal was by suzuki  _ et  al . _",
    "@xcite in 2008 using high - frequency sampled current readings .",
    "we extract the ip portion of  @xcite ( without the load signature part ) and enhance it in multiple ways to improve disaggregation accuracy .",
    "the enhancements include additional constraints , correction based on a state diagram , median filtering , and linear programming - based refinement.our method works on low - frequency data , which is a more realistic solution for current smart meters that usually report power readings at intervals of 815 seconds .",
    "the remainder of the paper is organized as follows .",
    "we mathematically define the problem of load disaggregation as a mixed - integer linear ip problem in  section  [ sec : sec2 ] .",
    "we propose several enhancements to ip - based disaggregation in  section  [ sec : sec4 ] , which is our main contribution .",
    "a number of experimental results with a comparison to previous works are reported in  section  [ sec : sec5 ] , followed by conclusions in  section  [ sec : sec6 ] .",
    "consider a household with @xmath0 appliances , where the @xmath1-th appliance ( @xmath2 ) has @xmath3 non - off states .",
    "for example , a conventional light bulb would have one non - off state .",
    "vector @xmath4 contains the voltampere ( va ) ratings of the @xmath3 non - off states of the @xmath1-th appliance .",
    "let @xmath5 . with this we construct vector @xmath6 $ ] that contains all va ( or watt ) ratings of all @xmath0 appliances .",
    "for the @xmath7-th time instant , the indicator of each non - off state is stored in a vector @xmath8 as @xmath9\\in\\{1,\\ 0\\ }   \\mathrm{\\ for\\ } i=1,2,\\ldots , m,\\ ] ] with @xmath10 denoting that the particular state is active and @xmath11 denoting the state is inactive .    at the @xmath7-th time instant , the smart meter yields the total va reading @xmath12 , which is the sum of all power drawn by @xmath0 appliances at that time .",
    "this can be expressed as @xmath13 where @xmath14\\in\\mathbb{r}^{n}$ ] and vector @xmath15 contains va draws of each appliance that is turned on .",
    "the binary matrix @xmath16 in ( [ eqn : eqn2 ] ) is a block diagonal matrix given as @xmath17 where @xmath18 is a unity vector for @xmath19 .",
    "the objective of load disaggregation is to find which appliance states are active at the @xmath7-th time instant . specifically , the goal is to find @xmath8 in ( [ eqn : eqn2 ] ) by using the known quantities @xmath12 , @xmath20 , and @xmath21 .",
    "similarly to  @xcite , load disaggregation can be formulated as an integer programming ( ip ) problem @xmath22 like any ip , this problem can be solved by exhaustive search over all possibilities for @xmath8 , however this approach can be prohibitive even for a moderate number of appliances .",
    "the alternative is to explore more efficient ip solvers  @xcite .    before proceeding to enhancements , we reformulate  ( [ eqn : eqn4 ] ) as a mixed - integer linear ip .",
    "let @xmath23 .",
    "since any appliance must be in exactly one state at any given time and vector @xmath8 is an indicator for non - off states , we can formulate this constraint as @xmath24+\\mathbf{b}_k[q_j+2]+\\cdots+\\mathbf{b}_k[q_j+l_j]\\le 1\\ ] ] for @xmath25 .",
    "let @xmath26 where @xmath27 denotes the element - wise product .",
    "further , let @xmath28 @xmath29 @xmath30 $ ] , @xmath31 @xmath29 @xmath32 $ ] , @xmath33 $ ] , and @xmath34 $ ] , where @xmath35 is an auxiliary real variable",
    ". we can now rewrite the quadratic ip in  ( [ eqn : eqn4 ] ) as a mixed - integer _ linear _",
    "ip @xmath36 subject to @xmath37&\\in&\\{1 , 0\\ } \\textrm{\\ for\\ } i=2,3,\\ldots , m+1\\end{aligned}\\ ] ] where matrix @xmath38 and vector @xmath39 in ( [ eqn : eqn10 ] ) are given by @xmath40 @xmath29 @xmath41 @xmath42 @xmath43 $ ] and @xmath39 @xmath29 @xmath44 @xmath45 @xmath46 $ ] and the rows of the binary matrix @xmath47 are copies of the rows of matrix @xmath20 that have more than one nonzero element .",
    "the solution of ( [ eqn : eqn9])([eqn : eqn11 ] ) leads to correct disaggregation only if the elements in @xmath21 are not binary combinations ( linear combinations with coefficients @xmath11 or @xmath10 ) of each other , and the deviations from the steady - state power / current draw during transients do not overlap with the steady - state draws of other appliances , or their combinations . in practice , these criteria are rarely met , so disaggregation based on ( [ eqn : eqn9])([eqn : eqn11 ] ) would yield unsatisfactory results .",
    "this can also be true for an appliance with an infrequently occurring state with a high rating , since an undetected state with high rating would significantly reduce the accuracy score ( section  [ sec : sec5 ] ) . in the next section",
    "we introduce several enhancements that are meant to overcome the aforementioned limitations of the above ip disaggregation .",
    "the proposed aided linear ip ( alip ) for load disaggregation incorporates several enhancements to the ip given in ( [ eqn : eqn9])([eqn : eqn11 ] ) , each of which is discussed next .",
    "the first enhancement involves additional constraints that help resolve ambiguities related to the possible non - uniqueness of the solution to the ip .",
    "first , consider appliances like refrigerator , surveillance camera , smoke detector , heat pump , etc .",
    ", that happen to switch between the `` sleep mode '' and one or more higher - power states . in other words , these appliances always draw some power",
    ". we can incorporate this additional information as an equality constraint to be added to ( [ eqn : eqn9])([eqn : eqn11 ] ) , @xmath48 where each row in the binary matrix @xmath49 has unity elements only in those positions that correspond to the states of those appliances in vector @xmath50 that remain turned on at all time .",
    "next , consider the scenario where the rating of a given state of an appliance is equal to the sum of the ratings of some of the states of other appliances .",
    "for example , an appliance h1 could have a va rating @xmath51 in one of its states , and appliances h2 and h3 could have va ratings of @xmath52 and @xmath53 , respectively , in some of their states .",
    "then a reading @xmath54 could be interpreted in two ways - either h1 is on , or h2 and h3 are simultaneously on . to break such ties , we assume the minimum number of appliances is on at any given time - a heuristic that does not always hold , but turns out to be surprisingly good based on empirical evidence in existing datasets . this can be incorporated into the ip by using an additional row in the binary @xmath38 and an additional @xmath10 in @xmath39 in ( [ eqn : eqn10 ] ) . the additional row in @xmath38 would have unity elements only in those positions that correspond to the states where the ratings become binary combinations of each other .    finally , consider the scenario where the rating of a given appliance ( say h1 ) is equal to the amount by which the steady - state rating of another appliance ( say h2 ) differs from its transient va measurement .",
    "the transient reading may cause the ip solver to declare both h1 and h2 as on , even though only h2 is in the on transient .",
    "such situation can also be avoided by using an additional row in the binary matrix @xmath38 and an additional @xmath10 in @xmath39 in ( [ eqn : eqn10 ] ) , where the additional row in @xmath38 has unity elements only in those positions that correspond to the states whose combinations produce a transient rating of another appliance .",
    "many appliances operate as finite state machines and their possible state transitions can be described by a state transition diagram ( std ) .",
    "for example , the fridge ( frg ) appliance from the dataset in  @xcite has the std shown in fig .",
    "[ fig : fig1 ] .",
    "this offers the possibility to correct the output of an ip solver if it happens to violate the std .",
    "for example , if frg was in state @xmath55 at time @xmath56 , then at time @xmath7 it can only be in @xmath55 or @xmath57 .",
    "if the ip solver output suggests otherwise , we know there must be an error , and can therefore select either @xmath55 or @xmath57 , depending on which of the two options yields lower cost @xmath58 in  ( [ eqn : eqn9 ] ) .",
    "the same type of correction can also be applied backwards ( for example , the only way to get to @xmath59 is either from @xmath57 or @xmath59 ) , although we did not incorporate such processing in our experiments .",
    "median filtering can help filter out implausible events such as frequent switching between states , which may occur in the ip solver output if the ratings of a particular appliance are much smaller than the total reading @xmath12 .",
    "consider the appliance b1e from  @xcite , which has a fully - connected 2-state diagram ( fig .",
    "[ fig : fig1 ] with states @xmath59 and @xmath60 deleted ) .",
    "although any transition between these two states is possible , it is implausible that the appliance changes state at each sampling instant ; we expect it to stay in a state for at least a few sampling instants . to enforce this , we apply the correction rule @xmath61 for @xmath62 in the solution obtained by the ip solver . in other words ,",
    "the state estimate at time @xmath63 ( i.e. , @xmath64 ) is corrected based on the current state estimate @xmath65 and the corrected state does not affect the subsequent median filter outputs .",
    "analogous corrections are applied to all states of all appliances .              as mentioned before",
    ", vector @xmath21 contains steady - state appliance ratings , which could be obtained from appliance data sheets or measurements .",
    "however , va ( or watt ) values for transients between states are usually much more difficult to obtain , and even if this were possible , incorporating transient state ratings into the model would tremendously increase the model size ( i.e. , number of states ) @xmath66 . yet ,",
    "if the sampling instance happens to catch a transient of one or more appliances , it could lead to incorrect solution of the ip .",
    "for this reason , we develop a method to refine the ip solution using only the minimum and maximum transient rating of each appliance , which is easier to obtain , either from the data sheet or measurement .",
    "let @xmath67 and @xmath68 be the vectors of the same size as @xmath21 that contain , respectively , the minimum and maximum transient ratings for each state of each appliance .",
    "let vector @xmath69 contain indices of @xmath21 for which @xmath70 @xmath29",
    "@xmath71 @xmath29 @xmath72 .",
    "such states do not exhibit transient behavior .",
    "let the vector @xmath73 contain the indices of other , potentially transient , states , that have been declared active by the ip solver ( i.e. , the corresponding value in @xmath8 is @xmath10 ) .",
    "if @xmath73 is non - empty , then the current measurement may contain transient states and the solution given by the ip solver needs to be refined .",
    "let @xmath74 @xmath29 @xmath75 and @xmath76 . to refine the solution",
    ", we solve the following problem @xmath77 subject to @xmath78 constraints ( [ eqn : eqn19])([eqn : eqn20 ] ) force the non - transient states to match the steady - state ratings in @xmath21 while requiring potentially transient states to be between the corresponding minimum and maximum",
    ".    the cost function can be simplified by subtracting out the steady - state portion of the measurement , @xmath79",
    "@xmath29 @xmath12 @xmath80 @xmath81 , and focusing on the transient portion of @xmath82 , i.e. , @xmath83 . then , applying a similar procedure as in section  [ sec : sec2 ] , the problem can be converted to a linear programming problem . with @xmath84 $ ] , @xmath85 @xmath29 @xmath86 $ ] , @xmath31 @xmath29 @xmath32 $ ] , and @xmath33 $ ] , the problem becomes @xmath87 subject to @xmath88 where matrix @xmath38 and vector @xmath39 in ( [ eqn : eqn24 ] ) are given by @xmath40 @xmath29 @xmath89 @xmath90 @xmath91 @xmath92;$ ] @xmath93 @xmath94 $ ] and @xmath95 respectively .",
    "the flowchart of alip is shown in fig .",
    "[ fig : fig2 ] .",
    "further steps such as time - of - day probabilities can be incorporated in order to further improve disaggregation accuracy .",
    "we compare the performance of our alip method with the ip - based disaggregation from  @xcite in terms of two accuracy measures  @xcite : per appliance accuracy @xmath96|}\\ ] ] and overall accuracy @xmath97|}\\ ] ] where @xmath98 $ ] is the ground - truth rating of the @xmath1-th appliance at time index @xmath7 from the dataset and @xmath99 $ ] is its estimate obtained by disaggregation . in all experiments , the steady - state ratings of each appliance",
    "were determined empirically from the datasets from the power consumption of each appliance separately . the maximum and minimum transient va or watt values for the alip disaggregator",
    "were also determined empirically .",
    "the aggregate va or watt totals for the appliances used in the experiments were computed from aggregated individual appliance readings . for alip",
    ", the enhancements were applied in the order depicted in the flowchart in fig .",
    "[ fig : fig2 ] .",
    "all ratings and parameters used in the experiments can be found in the matlab code , which can be used to reproduce all the results .    in experiment 1",
    "we used @xmath100 appliances ( cde , frg , hpe , and b1e ) from the dataset in  @xcite .",
    "the number of states considered for the cde , frg , hpe , and b1e appliances were @xmath101 , @xmath102 , @xmath102 , and @xmath103 , respectively .",
    "the total number of samples considered was @xmath104 , which we partitioned into 72 blocks of data each containing @xmath105 samples .",
    "this number of samples covers @xmath106 months worth of readings .",
    "we computed ac and acc for each block .",
    "the ac curves obtained by using the ip and proposed alip disaggregators for cde , frg , and b1e appliances are illustrated in fig .",
    "[ fig : fig3 ] , along with the acc curves .",
    "we have not illustrated ac curves for hpe , since both disaggregators produced very similar curves for this appliance .",
    "it is seen from the ac , cde plots ( top - left in fig .",
    "[ fig : fig3 ] ) that alip performs better than ip consistently in all blocks . the same is true for b1e ( bottom - left in fig .",
    "[ fig : fig3 ] ) . from the ac , frg plots it is seen that the alip performs considerably better than ip in many blocks , while ip performs marginally better in some blocks .",
    "this is because frg has occasional impulsive va readings which get filtered out by alip but not by ip .",
    "overall , however , alip disaggregates frg better than ip . from the acc plots ( bottom - right of fig .  [",
    "fig : fig3 ] ) , it can be seen the alip disaggregator is overall more accurate than the ip disaggregator - usually by 58% , and in some cases by up to 20% .",
    "the ac values obtained over the whole 9 months worth of data are given in table  [ tbl : allres ] , while the overall acc measure for this and other experiments is given in table  [ tbl : overallres ] .",
    "as seen in these tables , alip outperforms ip on each appliance , as well as overall .",
    ".results for exp .",
    "17 [ cols=\"<,<,^,<,>,>\",options=\"header \" , ]     [ tbl : exetime ]    in experiment 6 we used @xmath107 appliances ( mic , lte , ukn , sbp , hea , and dif ) from house 5 in  @xcite , with @xmath108 states .",
    "the data were downsampled by a factor 10 to obtain the samples at 30-second intervals . here",
    ", alip outperforms ip on all appliances , as well as in overall accuracy , as seen in tables  [ tbl : allres ] and  [ tbl : overallres ] , respectively .",
    "finally , in experiment 7 we used @xmath109 appliances ( ele , bth , frg , ukn , lte , arc , and dif ) from house 6 in  @xcite , with @xmath110 states .",
    "the data were downsampled by a factor 10 to obtain the samples at 30-second intervals . again",
    ", alip outperforms ip consistently on all appliances , as well as in overall accuracy , as seen in tables  [ tbl : allres ] and  [ tbl : overallres ] , respectively .    in table",
    "[ tbl : overallres ] we also include the published acc results of two state - of - the - art machine learning - based disaggregation approaches ,  @xcite and  @xcite , on the redd dataset .",
    "note that  @xcite and  @xcite did not report the results for all the houses .",
    "although these methods used different downsampling rates and there is some uncertainty about the processing of data prior to testing , the comparison gives us a feeling for how the proposed alip would compare against machine learning - based disaggregation .",
    "we note that against  @xcite , alip scores on average 0.32 better . against  @xcite",
    ", it scores on average 0.03 better on houses 3 and 6 , and on average 0.04 lower on houses 1 and 2 .",
    "based on these results , we conclude that the proposed alip is competitive in terms of accuracy with the state - of - the - art machine learning - based disaggregation approaches .    a final word on complexity .",
    "the proposed alip approach incorporates several additional processing steps compared to the conventional ip - based disaggregation .",
    "hence , its computational complexity is slightly higher . in table",
    "[ tbl : exetime ] we list the average execution time ( in milliseconds ) per sample of ip and alip disaggregators for experiments  17 , which were obtained in matlab 2015a using ` intlinprog ` and ` linprog ` ( with default settings ) on an intel(r ) core(tm ) i7 - 4770 cpu@3.40 ghz processor with 16 gb ram .",
    "as seen in the table , alip is only slightly slower than ip , and both disaggregators take less than 20  ms per data sample .",
    "integer programming ( ip ) provides a natural way to solve the load disaggregation problem , by trying to determine which appliance states are active at any given time .",
    "however , previous ip - based disaggregation is shown to run into problems on real data due to issues related to transient readings and in cases when some states are binary combinations of other states .",
    "we proposed an aided linear ip ( alip ) approach for disaggregation that overcomes many of the shortcomings of the previous ip - based approach .",
    "experimental results demonstrate significant accuracy advantage of alip over the previous ip - based disaggregation method , as well as competitive performance against two state - of - the art machine learning - based disaggregation approaches .",
    "v.  zdraveski , m.  todorovski , d.  trajanov , and l.  kocarev , `` dynamic load balancing and reactive power compensation switch embedded in power meters , '' _ ieee transactions on circuits and systems ii : express briefs _ , 2016 .",
    "ducange , f.  marcelloni , and m.  antonelli , `` a novel approach based on finite - state machines with fuzzy transitions for nonintrusive home appliance monitoring , '' _ ieee trans .",
    "_ , vol .  10 , pp .",
    "11851197 , may 2014 .",
    "s.  makonin , f.  popowich , i.  v. baji , b.  gill , and l.  bartram , `` exploiting hmm sparsity to perform online real - time nonintrusive load monitoring , '' _ ieee trans . smart grid _ ,",
    "pp , no .",
    "99 , pp .  111 , 2015 .",
    "d.  egarter and w.  elmenreich , `` autonomous load disaggregation approach based on active power measurements , '' in _ pervasive computing and communication workshops ( percom workshops ) , 2015 ieee international conference on _ , pp .  293298 , ieee , 2015 .",
    "d.  egarter , a.  sobe , and w.  elmenreich , `` evolving non - intrusive load monitoring , '' in _ proc .",
    "16th european conference on applications of evolutionary computation : evoapplications13 _ , ( vienna , austria ) , pp .  182191 , apr .",
    "2013 .",
    "s.  makonin , b.  ellert , i.  v. baji , and f.  popowich , `` electricity , water , and natural gas consumption of a residential house in canada from 2012 to 2014 , '' _ scientific data _ , vol .  3 , no .",
    "160037 , pp .  112 , 2016 ."
  ],
  "abstract_text": [
    "<S> load disaggregation based on aided linear integer programming ( alip ) is proposed . </S>",
    "<S> we start with a conventional linear integer programming ( ip ) based disaggregation and enhance it in several ways . </S>",
    "<S> the enhancements include additional constraints , correction based on a state diagram , median filtering , and linear programming - based refinement . with the aid of these enhancements , </S>",
    "<S> the performance of ip - based disaggregation is significantly improved . </S>",
    "<S> the proposed alip system relies only on the instantaneous load samples instead of waveform signatures , and hence works well on low - frequency data . </S>",
    "<S> experimental results show that the proposed alip system performs better than conventional ip - based load disaggregation .    </S>",
    "<S> integer programming , combinatorial optimization , linear programming , load disaggregation , nilm </S>"
  ]
}
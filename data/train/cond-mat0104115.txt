{
  "article_text": [
    "decisional problems are essentially divided into two great classes : p or _ easy _ problems , which can be solved in polynomial time by deterministic algorithms , and np or _",
    "difficult _ problems whose worst instances ca nt be solved in polynomial time , unless you have a non - deterministic computer .",
    "of course p @xmath0 np but the question if p@xmath1 np is still open . among the np problems ,",
    "the so called np - complete are particularly important because they are the most difficult in np ; in fact all np problems can be converted into a np - complete problem in polynomial time . if just one np - complete problem could be shown to be in p , that would imply p = np .",
    "till now , no polynomial algorithm for any np - complete problem is known ; however , recently , a polynomial observable has been found in the k - sat problem@xcite , which is np - complete@xcite , suggesting that also other np - complete problems can display computationally easy observables .",
    "+ another relevant feature of np - complete problems ( but not only of them ) was found about twenty years ago : they exhibit phase transitions .",
    "important results were obtained for k - sat@xcite , number partitioning@xcite and graph partitioning@xcite .",
    "+ in this work the graph partitioning problem ( gpp ) was applied to random graphs ; two correlated p observables were found in it : the number of redbonds@xcite and the number of redgraphs ; moreover , the number of redgraphs could be put in relation to the phase transition of the problem .",
    "+ in the next section a review of gpp is sketched , while in section @xmath2 we describe our polynomial algorithm and discuss the numerical results .",
    "a graph @xmath3 is assigned by giving a set @xmath4 of @xmath5 points called _ vertices _ , and a set @xmath6 of @xmath7 _ edges _ which specify which pairs of vertices are adjacent in @xmath3 : each edge connects two distinct vertices .",
    "the graph is a _ random graph _ if each edge exists with some probability @xmath8 .",
    "the _ mean connectivity _",
    "@xmath9 is defined as the average number of edges per vertex .",
    "having @xmath5 vertices and @xmath7 edges , the total number of possible edges is @xmath10 so @xmath11 and @xmath9 is simply @xmath12 . + in general , given a graph @xmath3 , the graph partitioning problem consists in finding the partition of set @xmath4 into two disjoint and equally sized subsets @xmath13 and @xmath14 such that the number @xmath15 of edges having one vertex in @xmath13 and the other in @xmath14 ( bonds ) is minimized ; if we find a partition with no bonds at all , we will say that the graph is _",
    "partitionable_. in decisional form one can simply ask if , given a graph @xmath3 and a number @xmath15 , there is a partition such that the number of bonds is lower than or equal to @xmath15 . + we know that a large ( giant ) cluster appears in random graphs at @xmath16 , the so called _ percolation threshold _ , but the giant cluster s size becomes @xmath17 only at @xmath18@xcite and here gpp shows a phase transition@xcite : when @xmath19 random graphs are partitionable , but they become suddenly unpartitionable for @xmath20 and the number of bonds grows up with @xmath9 ( for fixed values of @xmath5)@xcite .",
    "it s reasonable to suppose that partitions with only one bond , the so called redbond partition , lie only in a small region around @xmath21 .",
    "+ a random graph which has at least one redbond will be called redgraph and the mean number of redbonds per redgraphs at fixed values of @xmath9 and @xmath5 represents the entropy ( that is the number of solutions ) of the gpp with @xmath22 .",
    "+ why redbond ?",
    "this name originated from an electronics problem which is a practical application of gpp@xcite : the design of an efficient component made of @xmath5 circuits equally divided over two chips and connected by @xmath7 wires .",
    "one would like to minimize the time required by informations to propagate through the entire machinery , and it is known that wires connecting circuits on different chips ( the bonds ) slow down remarkably the propagation : so one has to look for a circuits placement which minimizes the number of bonds between the two chips . on the other hand ,",
    "another effect might come into play ; if there were just one link , the whole information would go through it overloading the bond : in a little while the entire component would break down because the bond burns , after turning red . +",
    "it s worthwhile to note at the end of this section that , like in electronics , infinite range percolation models can be used to cope with problems in a huge variety of different subjects , for example : the origin of life@xcite , fluctuations in the stock market@xcite and the breakdown of the internet@xcite",
    "in order to find a redbond , after having broken the entire random graph into clusters ( connected subgraphs ) using the hoshen - kopelman algorithm@xcite , the first step is to find the giant cluster and to calculate its size , namely the number of its vertices .",
    "if the giant cluster s size is lower than or equal to @xmath17 , the istance is partitionable and it has no sense to look for a redbond ; otherwise , if the size is greater than @xmath17 , the graph could be a redgraph . as a second step , remove one edge from the giant cluster : if this edge is a redbond , the stripped giant cluster separates into two subclusters , the size of the biggest one being lower than or equal to @xmath17 .",
    "putting the just obtained biggest cluster in @xmath13 and the other subclusters in @xmath14 , and completing the partition by inserting into @xmath13 and @xmath14 all other clusters of the original graph , one obtains a partition with a redbond .",
    "+ therefore , to calculate the number of redbonds , this procedure is applied recursively to each edge of the giant cluster : one checks whether the removal of each one leads to a biggest subcluster with size lower than or equal to @xmath17 . using again the hoshen - kopelman algorithm , the breaking of the giant cluster requires at most @xmath23 steps ; since the number of the giant cluster s edges is obviously @xmath23 , the complexity time of the algorithm is @xmath24 , so that the number of redbonds is a polynomial observable of gpp .",
    "+ if we have a statistical ensemble of @xmath25 random graphs and want to know how many graphs are red , we have only to repeat the above process @xmath25 times .",
    "therefore , regarding the number of redgraphs as an observable of the problem , we see that it can be calculated in @xmath26 steps , so that it is also polynomial .",
    "+ actually these observables would be better called _ probable redbonds _ and _ probable redgraphs _ , because , in searching for true redbonds , also the structure of the non - giant clusters should be taken into account in detail . however , as @xmath5 increases , the probability to meet a real redbond with our algorithm grows up .",
    "we performed simulations over random graphs with @xmath27 , @xmath28 , @xmath29 , @xmath30 , @xmath31 , and @xmath32 , in order to calculate the number of redgraphs .",
    "the range of @xmath9 depended on @xmath5 and varied , for example , from @xmath33 to @xmath34 for @xmath27 and from @xmath35 to @xmath36 for @xmath37 .",
    "for each couple of values of @xmath5 and @xmath9 the program crunched @xmath38 samples .",
    "the outcome is that redgraphs do exist , as expected , only in a small region around @xmath21 , while the probability to find a redgraph shows a peak close to @xmath21 , which becomes smaller and more narrow as @xmath5 increases .",
    "this behaviour might be interpreted as the signal of the known phase transition , in analogy to what happens in some physical systems ( think of the magnetic susceptivity @xmath39 versus temperature in a ferromagnetic system ) .",
    "( fig.[fig1 ] ) .    in order to estimate the entropy , we limited ourselves only to the cases @xmath27 and @xmath40 , taking care to average our results over 10000 samples , in order to reduce the statistical errors .",
    "we verified that entropy does nt vanish abruptly at @xmath21 , as problem s solutions are found above this point . for @xmath27 entropy goes to zero slowly whereas the fall for @xmath40 is much faster .",
    "this behaviour is a clear finite - size effect , quite similar to the one found in the k - sat problem@xcite(fig.[fig2 ] ) .",
    "in this paper we have studied the gpp applied to random graphs and we have shown that two tightly correlated p observables are present in this np - complete problem : the number of redbonds and the number of redgraphs .",
    "we have also characterized in a new way the phase transition in partitionability of the gpp through the peaked behaviour of the number of redgraphs near @xmath21 .",
    "i want to thank g. ponzano and m. caselle for their help in doing this work ."
  ],
  "abstract_text": [
    "<S> although np - complete problems are the most difficult decisional problems , it s possible to discover in them polynomial ( or easy ) observables . </S>",
    "<S> we study the graph partitioning problem showing that it s possible to recognize in it two correlated polynomial observables . </S>",
    "<S> the particular behaviour of one of them with respect to the connectivity of the graph suggests the presence of a phase transition in partitionability .    </S>",
    "<S> keywords : time complexity ; np - complete ; redgraph ; redbonds . </S>"
  ]
}
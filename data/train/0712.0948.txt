{
  "article_text": [
    "starting with the seminal paper on strong equivalence between logic programs by lifschitz , pearce , and valverde , a new research direction in logic programming under the answer - set semantics has been established .",
    "this is due to fact that strong equivalence between programs @xmath0 and @xmath1 , which holds iff @xmath0 can faithfully be replaced by @xmath1 in any program , is a different concept than deciding whether @xmath0 and @xmath1 have the same answer sets , i.e. ,  whether ( ordinary ) equivalence between @xmath0 and @xmath1 holds .",
    "formally , @xmath0 and @xmath1 are strongly equivalent iff , for each further so - called context program @xmath2 , @xmath4 and @xmath5 possess the same answer sets .",
    "that difference between strong and ordinary equivalence motivated investigations of equivalence notions in between ( see @xcite for an overview ) .",
    "such equivalence notions were obtained in two basic ways , viz .  to bound the actually allowed context programs @xmath2 by ( i ) restricting their syntax ; or ( ii ) restricting their alphabet .    for case  ( i ) , it turned out that any `` reasonable '' ( i.e. ,  where the restriction is defined rule - wise , for instance only allowing context programs with horn rules ) attempt coincides with either ordinary , strong , or uniform equivalence ( see , e.g. , @xcite ) . the later notion , uniform equivalence ,",
    "was originally introduced by sagiv   as an approximation for datalog equivalence and has been adapted to answer - set programming by eiter and fink  .",
    "uniform equivalence tests whether , for each set @xmath6 of facts , @xmath7 and @xmath8 possess the same answer sets . case",
    "( ii ) , where the atoms allowed to occur in @xmath2 are from a given alphabet @xmath3 yields in general different concepts for different @xmath3 and thus is known as strong equivalence relative to @xmath3  @xcite .",
    "a combination of both approaches leads to the concept of uniform equivalence relative to @xmath3  @xcite . and",
    "@xmath5 are compared .",
    "this kind of _ projection _ was investigated in  @xcite , but is beyond the scope of this work . ]    in this paper , we propose a framework to define more fine - grained notions of equivalence , such that the aforementioned restrictions are captured simultaneously .",
    "this is accomplished by parameterizing , on the one hand , the atoms which are allowed to occur in the rule heads of the context programs and , on the other hand , the atoms which are allowed to occur in the rule bodies of the context programs .",
    "more formally , the problem we study is as follows , and we will refer to it as @xmath9-equivalencegiven programs @xmath0 , @xmath1 , and alphabets @xmath10 , @xmath11 , decide whether the answer sets of @xmath4 and @xmath5 coincide for each program @xmath2 , where each rule in @xmath2 has its head atoms from @xmath10 and its body atoms from @xmathas we will show , for all such kinds of equivalence it is safe to consider only unary rules ( that are simple rules of the form @xmath12 or @xmath13 ) in context programs @xmath2 .",
    "therefore , instances of @xmath9-equivalence include all previously mentioned equivalence notions . in particular , for @xmath14 , i.e. ,  disallowing any atom to occur in bodies , our notion amounts to uniform equivalence relative to @xmath10 .",
    "moreover , the parameterization @xmath15 amounts to relativized strong equivalence . as a consequence ,",
    "we obtain ( unrelativized ) strong equivalence if @xmath16 , where @xmath17 is the universe of atoms , and ( unrelativized ) uniform equivalence if @xmath18 and @xmath14 .",
    "the main contribution of the paper is to provide a general and uniform semantic characterization for the newly introduced framework .",
    "moreover , we show that our characterization includes as special cases prominent ones for strong and uniform equivalence , namely the so - called se - models due to turner  , and respectively , the so - called ue - models due to eiter and fink  , and thus clarifies the differences which have been observed between these known characterizations . as well , the relativized variants of se - models and ue - models @xcite will be shown to be special cases of our new characterization .",
    "finally , we address the computational complexity of the decision problems for the introduced equivalence notions .",
    "the complexity results suggest to implement tests for @xmath9-equivalence via existing dedicated systems for checking ordinary equivalence .",
    "we briefly sketch such a method at the end of the paper .",
    "the benefits of the introduced framework are twofold . on the one hand",
    ", we provide a unified method to decide different notions of equivalence by the same concept .",
    "so far , such methods were conceptually different for strong and uniform equivalence , and thus our results shed new light on the origin of these differences . on the other hand , the introduced equivalence notion allows to precisely specify in which scenarios a program @xmath0 can be replaced by a potential simplification @xmath1 .",
    "for instance , suppose a program @xmath0 is given over atoms @xmath17 and provides an output over atoms @xmath19 .",
    "these output atoms are only used in rule bodies of potential extensions of @xmath0 , whereas all other atoms can be used arbitrarily in such extension . in such a scenario , @xmath1",
    "can faithfully be used as a simplification of @xmath0 , in case @xmath9-equivalence between @xmath0 and @xmath1 with parameters @xmath20 and @xmath21 holds .",
    "throughout the paper we assume an arbitrary finite but fixed universe @xmath17 of atoms .",
    "subsets of the universe are either called interpretations or alphabets : we use the latter term to restrict the syntax of programs , while the former is used in the context of semantics for programs . for an interpretation @xmath22 and an alphabet @xmath3",
    ", we write @xmath23 instead of @xmath24 .    a propositional disjunctive logic program ( or simply , a program )",
    "is a finite set of rules of the form @xmath25 ( @xmath26 , @xmath27 ) , and where all @xmath28 are propositional atoms from @xmath17 and @xmath29 denotes default negation ; for @xmath30 , we usually identify the rule ( [ eq : r ] ) with the atom @xmath31 , and call it a _",
    "fact_. a rule of the form ( [ eq : r ] ) is called a _ constraint _ if @xmath32 ; _ positive _ if @xmath33 ; _ normal _ if @xmath34 ; and _ unary _ if it is either a fact or of the form @xmath13 .",
    "a program is positive ( resp . ,",
    "normal , unary ) iff all its rules are positive ( resp . ,",
    "normal , unary ) .",
    "if all atoms occurring in a program @xmath0 are from a given alphabet @xmath35 of atoms , we say that @xmath0 is a program _ over _ ( alphabet ) @xmath3 . the class of all logic programs ( over the fixed universe @xmath17 ) is denoted by @xmath36 .    for a rule @xmath37 of the form ( [ eq : r ] ) , we identify its head by @xmath38 and its body via @xmath39 and @xmath40",
    ". we shall write rules of the form ( [ eq : r ] ) also as @xmath41 . moreover , we use @xmath42 . finally , for a program @xmath0 and @xmath43 , let @xmath44 .",
    "the relation @xmath45 between an interpretation @xmath22 and a program @xmath37 is defined as usual , i.e. , @xmath45 iff @xmath46 , whenever jointly @xmath47 and @xmath48 hold ; for a program @xmath0 , @xmath49 holds iff for each @xmath50 , @xmath45 .",
    "if @xmath49 holds , @xmath22 is called a _ model _ of @xmath0 . following gelfond and lifschitz",
    ", an interpretation  @xmath22 is an _ answer set _ of a program @xmath0 iff it is a minimal ( w.r.t .  set inclusion ) model of the _ reduct _ @xmath51 of @xmath0 w.r.t .",
    "the set of all answer sets of a program @xmath0 is denoted by @xmath52 .",
    "next , we review some prominent notions of equivalence , which have been studied under the answer - set semantics : programs @xmath53 are _ strongly equivalent _  @xcite , iff , for any program @xmath54 , @xmath55 ; @xmath0 and @xmath1 are _ uniformly equivalent _  @xcite , iff , for any set @xmath56 of facts , @xmath57 .",
    "relativizations of these notions are as follows  @xcite : for a given alphabet @xmath35 , we call programs @xmath53 _ strongly equivalent relative to _ @xmath3 , iff , for any program @xmath2 over @xmath3 , it holds that @xmath55 ; @xmath58 are _ uniformly equivalent relative to _ @xmath3 , iff , for any set @xmath59 of facts , @xmath57 . finally ,",
    "if @xmath60 , we obtain _ ordinary equivalence _",
    ", i.e. ,  @xmath61 for both strong and uniform equivalence relative to @xmath3 .    in case of strong equivalence",
    "( also in the relativized case ) , it was shown  @xcite that the syntactic class of _ counterexamples _ ,",
    "i.e. ,  programs @xmath2 , such that @xmath62 , can always be restricted to the class of unary programs .",
    "hence , the next result comes without surprise , but additionally provides insight with respect to the alphabets in the rules heads and bodies .",
    "[ lemma:1 ] for any programs @xmath0 , @xmath63 and any interpretation @xmath22 , there exists a positive program @xmath64 such that @xmath65 , @xmath66 , and @xmath67 iff @xmath68 .",
    "recall that @xmath49 iff @xmath69 holds .",
    "moreover , @xmath70 is clear .",
    "thus , @xmath67 iff @xmath71 is obvious . by definition @xmath72",
    "is positive and satisfies @xmath73 , @xmath74 .",
    "thus the claim follows using @xmath75 .",
    "as we will see later , lemma  [ lemma:1 ] can even be strengthened to a unary program @xmath64 . in terms of equivalence checking",
    ", lemma  [ lemma:1 ] has some interesting consequences .",
    "first , observe that if two programs @xmath0 , @xmath1 do not have the same answer sets , the _ common _ rules @xmath2 from @xmath0 and @xmath1 can be significantly simplified , without changing the witnessing answer set @xmath22 .",
    "second , in terms of strong equivalence , the result shows that whenever a counterexample @xmath2 for a strong equivalence problem between @xmath0 and @xmath1 exists , i.e. ,  @xmath76 does not hold , then we can find a simpler , in particular , a positive counterexample @xmath64 , which is given over the same alphabets ( as @xmath2 ) for heads , and respectively , bodies . in other words , for deriving proper different equivalence notions , it turns out that the alphabets of the atoms allowed to occur in rule heads , and respectively , ( positive ) rule bodies of the context programs are the crucial parameters .",
    "we now formally ground these considerations and start by introducing the following classes of logic programs .",
    "[ def : class ] for any alphabets @xmath77 , the class @xmath78 of programs is defined as @xmath79 .    with this concept of program classes at hand , we define equivalence notions which are more fine - grained than the ones previously discussed .",
    "let @xmath77 be alphabets , and @xmath53 be programs .",
    "the _ @xmath9-equivalence problem _ between @xmath0 and @xmath1 , in symbols @xmath80 , is to decide whether , for each @xmath81 , @xmath55 .",
    "if @xmath80 holds , we say that @xmath0 and @xmath1 are _",
    "@xmath9-equivalent_.    the class @xmath78",
    "is also called the _ context _ of an @xmath9-equivalence problem , and a program @xmath82 , such that @xmath83 does not hold , is called a _ counterexample _ to the @xmath9-equivalence problem between @xmath0 and @xmath1 .",
    "[ ex:1 ] consider programs @xmath84 it is known that these programs are not strongly equivalent , since adding any @xmath2 which closes the cycle between @xmath85 and @xmath86 yields @xmath62 .",
    "in particular , for @xmath87 , we get @xmath88 , while @xmath89 . however , @xmath0 and @xmath1 are uniformly equivalent . in terms of @xmath9-equivalence",
    "we are able to `` approximate '' equivalence notions which hold between @xmath0 and @xmath1 .",
    "it can be shown that , for instance , @xmath90 or @xmath91 holds ( basically since @xmath92 does not occur in any program in @xmath93 , or @xmath94 ) . on the other hand , @xmath95 , and",
    "likewise , @xmath96 , since @xmath97 is contained in the context @xmath98 , resp .",
    ", in @xmath99 .",
    "@xmath100    observe that the concept of @xmath9-equivalence captures other equivalence notions as follows : @xmath101-equivalence coincides with strong equivalence relative to @xmath3 ; and , in particular , @xmath102-equivalence coincides with strong equivalence .",
    "we will show that @xmath103-equivalence amounts to uniform equivalence relative to @xmath3 ; and , in particular , @xmath104-equivalence amounts to uniform equivalence .- equivalence with respect to those special cases , see figure  [ fig:1 ] in the conclusion . ]",
    "note that the relation to uniform equivalence is not immediate since @xmath103-equivalence deals with a context containing sets of _ disjunctive _ facts , i.e. ,  rules of the form @xmath105 , rather than sets of ( simple ) facts , i.e. ,  rules of the form @xmath12 .",
    "a central aspect in equivalence checking is the quest for semantical characterizations which are assigned to a _",
    "single _ program .",
    "in particular , this is vital if a program is compared to numerous other programs , which , for instance , are considered as possible candidates for optimizations .",
    "[ def : sc ] a _ semantical characterization _ for an @xmath9-equivalence problem is understood as a function @xmath106 mapping each program to a set of pairs of interpretation , such that , for any @xmath53 , @xmath80 holds iff @xmath107 .",
    "since we are interested in a uniform characterization of @xmath9-equivalence problems , we in fact provide a single function @xmath108 , such that for any programs @xmath53 and any alphabets @xmath109 , @xmath80 holds iff @xmath110 .",
    "however , for the sake of uniformity we will use @xmath111 and @xmath112 interchangeably .",
    "we will review known semantical characterizations for special cases ( as , for instance , se - models  @xcite and ue - models  @xcite for strong , and respectively , uniform equivalence ) later .",
    "finally , we introduce containment problems .",
    "let @xmath113 be alphabets , and @xmath53 be programs .",
    "the _ @xmath9-containment problem _ for @xmath0 in @xmath1 , in symbols @xmath114 , is to decide whether , for each @xmath81 , @xmath115 .",
    "a counterexample to @xmath114 , is any program @xmath82 , such that @xmath116 .",
    "containment and equivalence problem are closely related by definition :    [ prop : eqcont ] for any programs @xmath53 and any alphabets @xmath109 , @xmath80 holds iff @xmath114 and @xmath117 jointly hold .",
    "towards the semantical characterization for @xmath9-equivalence problems , we first introduce the notion of a witness , which is assigned to @xmath9-containment problems taking both compared programs into account .",
    "afterwards , we will derive the desired semantical characterization of @xmath9-models which are assigned to single programs along the lines of definition  [ def : sc ] .    before that , we need some further technical concepts and results .    given alphabets @xmath77 , we define the relation @xmath118 between interpretations as follows : @xmath119 iff @xmath120 and @xmath121 .",
    "observe that if @xmath119 holds , then either @xmath122 holds , or at least one out of @xmath123 and @xmath124 holds .",
    "we write @xmath125 , in case @xmath119 and @xmath126 .",
    "observe that @xmath125 thus holds iff @xmath119 and @xmath127 jointly hold .",
    "[ lemma:2 ] let @xmath77 be alphabets , @xmath0 a positive program with @xmath128 , @xmath129 , and @xmath130 interpretations .",
    "then , @xmath131 and @xmath119 imply @xmath132 .",
    "suppose @xmath133 and @xmath119 , i.e. ,  @xmath120 and @xmath134 hold .",
    "we show @xmath135 . if @xmath133 , then there exists a rule @xmath50 , such that @xmath136 and @xmath137 .",
    "since @xmath138 , we get from @xmath120 , that @xmath139 .",
    "moreover , since @xmath140 , we have @xmath141 , and thus @xmath142 .",
    "hence @xmath143 which yields @xmath135 .",
    "we also need the concept of an @xmath10-total model .    given @xmath144 , an interpretation @xmath22 is an _",
    "@xmath10-total model _ for a program @xmath145 iff @xmath49 and , for all @xmath146 , @xmath147 implies @xmath148 .",
    "@xmath10-total models of a program @xmath0 are the only ones which can be turned into an answer set by adding a program @xmath81 to @xmath0 .",
    "[ lemma : htotal ] let @xmath145 be a program , @xmath22 be an interpretation and @xmath77 be alphabets .",
    "then , there exists a program @xmath82 , such that @xmath149 only if @xmath22 is an @xmath10-total model of @xmath0 .    if there exists a program @xmath82 , such that @xmath149 then , by lemma  [ lemma:1 ] there is also a positive program @xmath150 , such that @xmath68 .",
    "hence , @xmath151 holds . from @xmath152 , we get for all @xmath153 with @xmath154 , @xmath155 .",
    "this includes in particular all @xmath146 with @xmath156 .",
    "hence , for each such @xmath153 , @xmath157 has to hold , otherwise @xmath68 would not hold .",
    "but then , @xmath22 is an @xmath10-total model of @xmath0 by definition .      in order to find a counterexample for an @xmath9-inclusion problem @xmath114",
    ", we thus need on the one hand an @xmath10-total model of @xmath0 but in addition we need to take further conditions for @xmath1 into account .",
    "this is captured by the following concept .",
    "[ def : witness ] a _ witness _ against a containment problem @xmath114 is a pair of interpretations @xmath158 with @xmath159 , such that    * @xmath22 is an @xmath10-total model of @xmath0 ; and * if @xmath160 then @xmath161 , @xmath162 , and for each @xmath163 with @xmath164 , @xmath165 .",
    "we prove that the existence of witnesses against a containment problem @xmath114 shows that @xmath114 does not hold . as a by - product",
    "we obtain that there are always counterexamples to @xmath114 of a simple syntactic form .",
    "[ lemma : witness ] the following propositions are equivalent for any @xmath53 and any @xmath77 :    * @xmath114 does not hold ; * there exists a unary program @xmath81 , such that @xmath166 ; * there exists a witness against @xmath114 .",
    "we show that ( 1 ) implies ( 3 ) and ( 3 ) implies ( 2 ) .",
    "( 2 ) implies ( 1 ) obviously holds by definition of @xmath9-containment problems .",
    "\\(1 ) implies ( 3 ) : if @xmath114 does not hold , there exists a program @xmath2 , and an interpretation @xmath22 , such that @xmath149 and @xmath167 . by lemma  [ lemma : htotal ]",
    ", @xmath22 has to be an @xmath10-total of @xmath0 .",
    "it remains to establish property  ( ii ) in definition  [ def : witness ] . from @xmath167 , we either get @xmath168 or existence of an @xmath161 such that @xmath169 . recall that by lemma  [ lemma:1 ] , we can w.l.o.g .",
    "assume that @xmath2 is positive ; thus , @xmath170 we already know that @xmath171 ( otherwise @xmath149 can not hold ) . hence , in the former case , i.e. ,  @xmath168 , we get @xmath172 .",
    "then , for any @xmath173 , @xmath158 is a witness against @xmath114 , and we are done . for the remaining case , where @xmath162 and @xmath174 , we suppose towards a contradiction , that there exists an @xmath175 , such that @xmath176 and @xmath177 hold .",
    "the latter together with @xmath174 yields @xmath178 , following lemma  [ lemma:2 ] . together with @xmath176 , we thus get @xmath179 . since @xmath175",
    "this is in contradiction to @xmath149 .",
    "thus @xmath158 is a witness against @xmath114 .",
    "\\(3 ) implies ( 2 ) : let @xmath158 be a witness against @xmath114 .",
    "we use the unary program @xmath180 and show @xmath181 .",
    "note that @xmath2 is contained in class @xmath81 , since the set @xmath182 of facts uses only atoms from @xmath10 , and all further rules @xmath13 in @xmath2 satisfy @xmath183 and @xmath184 by definition .",
    "we first show @xmath149 . since @xmath158 is a witness against @xmath114 , we know @xmath49 . @xmath171 is easily checked and thus @xmath185 .",
    "it remains to show that no @xmath146 satisfies @xmath186 . towards a contradiction",
    "suppose such a @xmath153 exists .",
    "hence , @xmath147 and @xmath155 . from @xmath155",
    ", we get that @xmath187 has to hold . since @xmath158 is a witness against @xmath114 , @xmath188 holds , since @xmath22 has to an @xmath10-total model of @xmath0 , following definition  [ def : witness ] .",
    "hence , @xmath189 holds .",
    "we have @xmath161 and , moreover , get @xmath190 from property  ( ii ) in definition  [ def : witness ] , since @xmath147 and @xmath187 already hold .",
    "now , @xmath191 follows from our assumption @xmath146 , hence there exists an atom @xmath192 contained in @xmath153 .",
    "we already know that @xmath189 has to hold .",
    "hence , there exists at least one @xmath193 , not contained in @xmath153 .",
    "but then , we derive that @xmath194 .",
    "since @xmath195 , this is a contradiction to @xmath155 .    it remains to show @xmath167 .",
    "if @xmath172 , we are done .",
    "so let @xmath160 . since @xmath158 is a witness against @xmath114 , we get @xmath162 and @xmath161 .",
    "it is easy to see that @xmath174 holds .",
    "thus @xmath196 , and @xmath167 follows .",
    "we illustrate how to obtain witnesses on some examples .",
    "[ ex:2 ] we already have mentioned in example  [ ex:1 ] that @xmath197 are not @xmath9-equivalent for @xmath198 and @xmath199 .",
    "we show that there exists a witness against @xmath114 .",
    "we start with the models ( over @xmath200 ) of @xmath0 , which are @xmath201 both are also @xmath10-total models of @xmath0 , and moreover , @xmath10-total models of @xmath1 .",
    "for @xmath202 this is the case since @xmath203 and @xmath204 .",
    "for @xmath205 we have @xmath206 and @xmath207 .",
    "now , in order to find a witness against @xmath114 we need to find for some @xmath208 an interpretation @xmath209 , such that @xmath210 and for each @xmath163 with @xmath211 , @xmath212 .",
    "let us use @xmath213 .",
    "the models of @xmath214 which are a proper subset of @xmath202 are @xmath215 and @xmath216 .",
    "let @xmath217 .",
    "it remains to check that for each @xmath163 with @xmath218 , @xmath219 .",
    "since @xmath199 @xmath220 implies that @xmath221 , i.e. ,  @xmath222 has to hold .",
    "hence , the only @xmath163 ( over @xmath200 ) satisfying @xmath220 is @xmath223 itself . since @xmath224",
    ", we have @xmath225 and thus @xmath226 is a witness against @xmath114 .",
    "one can check that this is in fact the only witness ( over @xmath200 ) against @xmath114 .",
    "we also have mentioned in example  [ ex:1 ] that @xmath0 and @xmath1 are not @xmath227-equivalent for @xmath228 and @xmath229 .",
    "let us again find a witness against the containment problem @xmath230 . again",
    "@xmath202 and @xmath205 as above are @xmath231-total models ( which is here easy to see , since @xmath231 is now the universe @xmath200 ) .",
    "let us check whether @xmath226 with @xmath217 is now also a witness against @xmath230 .",
    "the argumentation is slightly different , for @xmath229 : in fact , we now have two candidates for @xmath163 to satisfy @xmath232 , viz .  @xmath233 and @xmath234 .",
    "however neither of them is a model of @xmath224 thus @xmath226 is also a witness against @xmath230 .",
    "@xmath100    as an immediate consequence of lemma  [ lemma : witness ] and proposition  [ prop : eqcont ] , we get that @xmath9-equivalence problems which do not hold always possess simple counterexamples . as a special case",
    "we obtain the already mentioned fact that @xmath235-equivalence amounts to uniform equivalence relative to @xmath10 , and , in particular , @xmath236-equivalence coincides with the notion of uniform equivalence . in other words ,",
    "proper disjunctive facts are not of relevance for deciding @xmath235-equivalence problems .",
    "[ cor : unary ] for any alphabets @xmath237 and any programs @xmath53 , @xmath80 does not hold iff there exists a unary program @xmath81 , such that @xmath62 ; if @xmath14 , then @xmath80 does not hold iff there exists a set @xmath238 of facts , such that @xmath239 .",
    "next , we present the desired semantical characterization for @xmath9-equivalence , which we call @xmath9-models .",
    "we need a further formal concept first .",
    "[ def : max ] given @xmath77 , a pair @xmath158 of interpretations is called @xmath240-maximal for @xmath0 iff @xmath241 and , for each @xmath163 with @xmath242 , @xmath243 .",
    "observe that being @xmath240-maximal refers to being maximal ( w.r.t .",
    "subset inclusion ) in the atoms from @xmath10 and simultaneously minimal ( w.r.t .",
    "subset inclusion ) in the atoms from @xmath11 .",
    "[ def : model ] given @xmath77 , and interpretations @xmath159 , a pair @xmath158 is an _",
    "@xmath9-model _ of a program @xmath145 iff @xmath22 is an @xmath10-total model for @xmath0 and , if @xmath161 , there exists an @xmath175 with @xmath244 , such that @xmath245 is @xmath240-maximal for @xmath0 .",
    "the set of all @xmath9-models of a program @xmath0 is denoted by @xmath246 .",
    "moreover , let us call a pair @xmath158 _ total _ if @xmath247 , otherwise it is called _ non - total_. observe that each non - total @xmath9-model @xmath158 satisfies @xmath248 and @xmath249 .",
    "the latter comes from the fact that @xmath22 is @xmath10-total , while the former holds in view of the conditions @xmath250 and @xmath161 in the definition .",
    "the reason for that different realization of the two interpretations in a non - total @xmath9-model @xmath158 of a program @xmath0 can be briefly explained as follows : first , the standard interpretation @xmath22 refers to a potential answer set candidate , i.e. , an interpretation which can be turned into an answer set by adding a program from @xmath78 to @xmath0 ( see also lemma  [ lemma : htotal ] ) .",
    "second , the restriction for @xmath251 to be a subset of @xmath252 is due to the fact of the restricted `` power '' of the programs in @xmath78 .",
    "in fact , suppose we have different models @xmath163 , @xmath253 of the reduct @xmath254 such that @xmath255 .",
    "then , no matter which @xmath81 is chosen to be added to @xmath0 , we either have that both @xmath163 and @xmath253 are models of @xmath256 or neither of them .",
    "therefore two such models are collected into the single @xmath9-model @xmath158 .    before stating our main theorem ,",
    "we require one further lemma .",
    "[ thm : central ] for any programs @xmath53 and any alphabets @xmath109 , @xmath257 holds iff @xmath258 .",
    "if - direction : suppose that either @xmath259 or @xmath260 does not hold .",
    "let us w.l.o.g.assume @xmath259 does not hold ( the other case is symmetric ) .",
    "by lemma  [ lemma : witness ] , then a witness @xmath158 against @xmath259 exists . by definition of a witness , @xmath22 is then an @xmath10-total model of @xmath0 and we have @xmath261 . in case @xmath262 we are already done .",
    "so suppose @xmath263 .",
    "then , @xmath22 has to be @xmath10-total for @xmath1 as well , and we obtain that @xmath249 , @xmath162 , and for each @xmath163 with @xmath264 , @xmath243 hold .",
    "consider now a pair @xmath265 of interpretations with @xmath146 which is @xmath240-maximal for @xmath1 .",
    "then @xmath266 has to hold and we obtain @xmath267 . on that other hand",
    ", we have @xmath268 .",
    "this is a consequence of the observation that for each @xmath163 with @xmath264 , @xmath243 , ( since @xmath158 is a witness against @xmath259 ) , and by the fact that @xmath266 .",
    "only - if direction : w.l.o.g .",
    "assume @xmath269 ; again , the other case is symmetric . from @xmath270",
    ", @xmath261 follows by definition  [ def : model ] .",
    "first consider , @xmath262 .",
    "then either @xmath172 or there exists an interpretation @xmath271 with @xmath272 , such that @xmath273 . in the former case @xmath274 is a witness against @xmath259 and in the latter case @xmath275 is . by lemma  [ lemma : witness ]",
    ", @xmath259 does not hold and , consequently , @xmath257 does not hold as well . thus , let @xmath161 and @xmath263 .",
    "we distinguish between two cases :    first suppose there exists an @xmath163 with @xmath276 , such that @xmath277 .",
    "since @xmath278 , by definition of @xmath9-models , @xmath279 has to hold , and there exists a @xmath146 with @xmath280 , such that @xmath281 .",
    "note that @xmath282 then also holds .",
    "we show that @xmath265 is a witness against @xmath114 .",
    "we already know that @xmath22 is @xmath10-total for @xmath0 . moreover , we know @xmath281 , and since @xmath270 , we get by definition of @xmath9-models , that , for each @xmath253 with @xmath283 , @xmath284 . now since @xmath282 , property ( ii ) in definition  [ def : witness ] holds for @xmath265 .",
    "this shows that @xmath265 is a witness against @xmath114 .",
    "so suppose , for each @xmath163 with @xmath276 , @xmath285 holds .",
    "we have @xmath270 , thus there exists a @xmath146 , with @xmath286 , such that @xmath147 .",
    "we show that @xmath265 is a witness against the reverse problem , @xmath117 . from @xmath263",
    ", we get that @xmath22 is an @xmath10-total model of @xmath1 .",
    "moreover , we have @xmath147 .",
    "it remains to show that , for each @xmath253 with @xmath287 , @xmath288 .",
    "this holds by the assumption , that for each @xmath163 with @xmath276 , @xmath285 , together with the fact that @xmath286 .",
    "hence , both cases yield a witness , either against @xmath114 or against @xmath117 . by lemma  [ lemma : witness ] and",
    "proposition  [ prop : eqcont ] , @xmath80 does not hold .",
    "[ ex:3 ] in example  [ ex:1 ] , we already mentioned that @xmath197 are @xmath289-equivalent .",
    "hence , fix @xmath290 , @xmath291 , and let us compute the @xmath9-models of @xmath0 , and resp . , @xmath1 .",
    "in example  [ ex:2 ] we already have seen that @xmath292 and @xmath293 are the models of both @xmath0 and @xmath1 . since @xmath290 , both are @xmath10-total models for @xmath0 and @xmath1 .",
    "so , @xmath294 and @xmath295 are the total @xmath9-models of both programs .",
    "it remains to check whether the non - total @xmath9-models of @xmath0 and @xmath1 coincide .",
    "first observe that @xmath296 is a @xmath9-model of both @xmath0 and @xmath1 , as well .",
    "the interesting candidate is @xmath297 since @xmath215 is model of @xmath214 but not of @xmath298 .",
    "hence , @xmath297 can not be @xmath9-model of @xmath0 .",
    "but @xmath297 is also not @xmath9-model of @xmath1 , since there exists an interpretation @xmath163 satisfying @xmath214 , such that @xmath299 .",
    "take @xmath300 .",
    "then , @xmath301 and @xmath302 hold , which shows that @xmath163 satisfies @xmath303 . as another example , consider @xmath304 and @xmath305 . as we have seen in example  [ ex:1 ] , @xmath306 holds , as well .",
    "one can show that @xmath295 is the only @xmath227-model ( over @xmath200 ) of @xmath0 as well as of @xmath1 .",
    "this holds in particular , since @xmath202 is neither an @xmath231-total model of @xmath0 nor of @xmath1 in this setting .",
    "let us also consider the parameterizations where @xmath9-equivalence between @xmath0 and @xmath1 does not hold .",
    "for instance , this the case for @xmath198 , @xmath199 ( see example  [ ex:1 ] and  [ ex:2 ] ) . we show that for @xmath307 and @xmath308 , @xmath158 is an @xmath9-model of @xmath1 but not of @xmath0 . from example",
    "[ ex:2 ] we know that @xmath22 is an @xmath10-total model of @xmath0 as well as of @xmath1 .",
    "moreover , @xmath162 and @xmath158 is @xmath240-maximal for @xmath1 .",
    "this is seen by the fact that the only @xmath163 , such that @xmath242 holds , is @xmath251 itself . on the other hand , @xmath309 , which is sufficient to see that @xmath158 is not an @xmath9-model of @xmath0 .",
    "also for @xmath228 , @xmath229 , we got @xmath310 . again",
    "it can be shown that @xmath158 with @xmath308 and @xmath311 is an @xmath227-model of @xmath1 but not of @xmath0 .",
    "now @xmath229 , so in order to make @xmath158 @xmath312-maximal for @xmath1 , we also have to check that @xmath313 , for @xmath314 .",
    "in fact , this is the case and thus @xmath158 is an @xmath227-model of @xmath1 . by the same observations as before , one shows that @xmath158 , in turn , is not @xmath227-model of @xmath0 .",
    "hence , the two cases where equivalence between @xmath0 and @xmath1 does not hold , @xmath0 and @xmath1 differ in their respective characterizations . @xmath100",
    "in this section , we analyze the behavior of @xmath315-models on special instantiations for @xmath10 and @xmath11 .",
    "we first consider the case where either @xmath18 or @xmath21 .",
    "we call the former scenario _ body - relativized _ and the latter _ head - relativized_. then , we sketch more general settings where the only restriction is that either @xmath316 or @xmath317 holds .",
    "the combination of the latter two is of particular interest since it amounts to strong equivalence relative to @xmath15 .",
    "first , we consider @xmath318-equivalence problems , in which @xmath17 is fixed to be the universe , but @xmath11 can be arbitrarily chosen .",
    "note that @xmath318-equivalence ranges from strong ( setting @xmath21 ) to uniform equivalence ( setting @xmath14 and cf.corollary  [ cor : unary ] ) and thus provides a common view on these two important problems , as well as on problems `` in between '' them .",
    "second , head - relativized equivalence problems , @xmath319 , have as special cases once more strong equivalence ( now by setting @xmath18 ) but also the case where @xmath320 is of interest , since it amounts to check whether @xmath0 and @xmath1 possess the same answer sets under any addition of constraints .",
    "it is quite obvious that this holds iff @xmath0 and @xmath1 are ordinarily equivalent , since constraints can only `` rule out '' answer sets .",
    "that observation is also reflected in corollary  [ cor : unary ] , since the only unary program in @xmath321 is the empty program .",
    "the following result simplifies the definition of @xmath322 within these settings .    for interpretations @xmath323 and an alphabet @xmath35",
    ", it holds that ( i )  @xmath324 iff @xmath325 and @xmath326 ; and ( ii ) @xmath327 iff @xmath328 and @xmath326 .",
    "thus , maximizing w.r.t.@xmath240 turns in the case of @xmath18 into a form of @xmath329-maximization ; and in the case of @xmath21 into a form of @xmath329-minimization .",
    "obviously , both neutralize themselves for @xmath330 , i.e. ,  in the strong equivalence setting , where , by definition , @xmath331 iff @xmath332 .    for body - relativized equivalence",
    ", our characterization now simplifies as follows .",
    "[ cor : seue ] a pair @xmath158 of interpretations is an @xmath333-model of @xmath334 iff @xmath173 , @xmath49 , @xmath241 , and for all @xmath163 with @xmath335 and @xmath336 , @xmath243 .    observe that for the notions in between strong and uniform equivalence the maximality test , i.e. ,  checking if each @xmath163 with @xmath335 and @xmath336 yields @xmath165 , gets more localized the more atoms are contained in @xmath11 . in particular , for @xmath21 it disappears and we end up with a very simple condition for @xmath337-models which exactly matches the definition of se - models by turner  : a pair @xmath158 of interpretations is an se - model of a program @xmath0 iff @xmath173 , @xmath49 , and @xmath241 .    for @xmath14 , on the other hand , we observe that @xmath336 always holds for @xmath14 .",
    "thus , a pair @xmath158 is a @xmath236-model of a program @xmath0 , if @xmath173 , @xmath49 , @xmath241 , and for all @xmath163 with @xmath335 , @xmath243 .",
    "these conditions are exactly the ones given for ue - models in  @xcite .",
    "hence , corollary  [ cor : seue ] provides a common view on the characterizations of uniform and strong equivalence .    for head - relativized equivalence notions , simplifications are as follows .",
    "[ cor : he ] a pair @xmath158 of interpretations is an @xmath338-model of @xmath145 iff @xmath173 , @xmath22 is an @xmath10-total model for @xmath0 , @xmath241 , and , for each @xmath339 with @xmath340 , @xmath243 .    in the case of @xmath18",
    ", @xmath338-models again reduce to se - models .",
    "the other special case is @xmath320 .",
    "recall that @xmath341-equivalence amounts to ordinary equivalence .",
    "@xmath341-models thus characterize answer sets as follows : first , observe that all @xmath341-models have to be total .",
    "moreover , @xmath274 is an @xmath215-total model for @xmath0 , iff no @xmath161 satisfies @xmath241 , i.e. ,  iff @xmath22 is an answer set of @xmath0 .",
    "so there is a one - to - one correspondence between the @xmath341-models and the answer sets of a program .",
    "we just highlight a few results here , in order to establish a connection between @xmath9-models and relativized se- and ue - models , as defined by woltran  .",
    "[ prop : subset ] for interpretations @xmath343 and alphabets @xmath109 with @xmath317 ( resp . , @xmath316 ) , @xmath119 iff @xmath120 and @xmath344 ( resp .",
    ", iff @xmath121 and @xmath345 ) . moreover , if @xmath346 , @xmath119 iff @xmath347 .    observe that @xmath348-maximality ( in the sense of definition  [ def : max ] ) of a pair @xmath158 for @xmath0 reduces to test @xmath241 .",
    "thus , to make @xmath349 an @xmath350-model of @xmath0 , we just additionally need @xmath3-totality of @xmath22 . in other words ,",
    "we obtain the following criteria .",
    "[ cor : bsubh ] given @xmath351 , a pair @xmath158 of interpretations is an @xmath350-model of a program @xmath145 , iff ( 1 ) @xmath247 or @xmath352 , ( 2 ) @xmath49 and for each @xmath271 , @xmath353 implies @xmath354 ; and ( 3 ) if @xmath161 then there exists an @xmath355 with @xmath356 , such that @xmath176 .",
    "this exactly matches the definition of @xmath3-se - models  @xcite . finally , if we switch from @xmath350-equivalence to @xmath357-equivalence ( i.e. ,  from relativized strong to relativized uniform equivalence ) we obtain the following result for @xmath357-models which can be shown to coincide with the explicit definition of @xmath3-ue - models  @xcite .",
    "[ cor : h ] given @xmath351 , a pair @xmath158 of interpretations is an @xmath357-model of @xmath145 , iff ( 1 ) and ( 2 ) from corollary  [ cor : bsubh ] hold , and if @xmath161 then there exists @xmath355 such that @xmath356 , @xmath176 , and for each @xmath358 with @xmath359 , @xmath284 .",
    "thus , the concept of @xmath9-models captures known characterizations from the literature , in particular , @xmath3-se - models and @xmath3-ue - models  @xcite , which themselves include the prominent characterizations of se - models  @xcite and ue - models  @xcite as a special case .",
    "in this section we first consider the case of positive programs , and show how the characterization for @xmath9-equivalence simplifies for such programs .",
    "moreover , we address the computational complexity of checking @xmath9-equivalence . finally , we informally discuss a method for implementing a decision procedure for @xmath9-equivalence .",
    "when comparing positive programs with respect to @xmath9-equivalence , it turns out that the actual parameterization for @xmath11 is immaterial .",
    "[ thm : pos ] for any positive programs @xmath53 and alphabets @xmath77 , we have @xmath360 iff @xmath0 and @xmath1 possess the same @xmath10-total models .",
    "the only - if direction is obvious , since if w.l.o.g .",
    "@xmath22 is an @xmath10-total model of @xmath0 but not of @xmath1 , we obtain immediately , @xmath361 and thus by theorem  [ thm : central ] , @xmath362 .    for the only if - direction we get from @xmath362 that the @xmath9-models of @xmath0 and @xmath1 differ , again using theorem  [ thm : central ] .",
    "w.l.o.g .",
    "assume a pair @xmath158 such that @xmath363 .",
    "if @xmath247 the @xmath10-total models of @xmath0 and @xmath1 differ by definition .",
    "so suppose @xmath0 and @xmath1 have the same total @xmath9-models .",
    "i.e. ,  @xmath161 holds .",
    "hence , we have @xmath261 ( otherwise @xmath270 would not hold ) and also @xmath263 . by the latter",
    ", we have two reasons remaining for @xmath278 : ( i ) no @xmath163 with @xmath175 and @xmath364 satisfies @xmath365 ; ( ii ) there exists an @xmath163 with @xmath242 , such that @xmath366 . also recall that since @xmath270 , there exists an @xmath175 with @xmath364 , such that @xmath245 is @xmath240-maximal for @xmath0 . for case ( ii )",
    "we thus get that there exists an @xmath9-model @xmath367 of @xmath1 , such that @xmath368 .",
    "but @xmath367 can not be an @xmath9-model of @xmath0 , since @xmath245 is already @xmath240-maximal for @xmath0 .",
    "hence , we have the same situation as case  ( i ) with @xmath0 and @xmath1 exchanged .",
    "so it remains to discuss case ( i ) .",
    "let @xmath245 be @xmath240-maximal for @xmath0 as above , and let us w.l.o.g .",
    "select the subset - minimal interpretation @xmath163 with @xmath364 which is @xmath240-maximal for @xmath0 .",
    "clearly , @xmath369 and we show that @xmath163 is an @xmath10-total model of @xmath0 . towards a contradiction",
    "suppose this is not the case , i.e. ,  there exists an @xmath370 with @xmath371 , such that @xmath372 .",
    "observe that @xmath373 can not be the case , since we selected @xmath163 as the minimal interpretation which satisfies @xmath0 such that @xmath364 holds .",
    "hence , @xmath374 has to hold , but then , by definition @xmath375 would hold and thus @xmath245 would not be @xmath240-maximal for @xmath0 , as assumed . on the other hand , @xmath163 can not be an @xmath10-total model of @xmath1 , since @xmath163 is not even a model of @xmath1 in view of the assumption for case  ( i ) .",
    "we proceed by providing complexity results of the decision problem for @xmath9-equivalence .    given program @xmath53 and alphabets @xmath109 ,",
    "deciding @xmath360 is @xmath376-complete ; @xmath376-hardness holds even for positive programs .",
    "deciding @xmath360 is @xmath377-complete if @xmath0 and @xmath1 are normal programs .",
    "former results on relativized strong equivalence  @xcite show that the problem is @xmath376-hard even for positive disjunctive logic programs , and @xmath377-hard for normal logic programs .",
    "since relativized strong equivalence is a special case of @xmath9-equivalence , these lower bounds hold for @xmath9-equivalence , as well .",
    "the corresponding membership results hold in view of corollary  [ cor : unary ] .",
    "in particular , one can guess an interpretation @xmath22 and a unary program @xmath378 , and then check whether @xmath22 is contained in either @xmath379 or @xmath380 , but not in both .",
    "answer - set checking is in @xmath377 in general , and in @xmath381 for normal logic programs . since one can safely restrict @xmath22 and @xmath2 to contain only atoms which also occur in @xmath0 or @xmath1 , this algorithm for disproving @xmath9-equivalence runs in nondeterministic polynomial time for normal programs , resp .   in nondeterministic polynomial time with access to an @xmath382-oracle for the general case of disjunctive programs .",
    "thus , that problem is in @xmath382 ( resp .",
    ", in @xmath383 ) , and consequently @xmath9-equivalence is in @xmath377 for normal programs and in @xmath376 , in general .",
    "the complexity results we obtained show that @xmath9-equivalence can be efficiently reduced , for instance , to ordinary equivalence , such that the class of programs is retained .",
    "we briefly discuss an approach which makes use of corollary  [ cor : unary ] in a similar manner as in above membership proof and compiles @xmath9-equivalence into ordinary equivalence for which a dedicated system exists  @xcite ; a similar method was also discussed in  @xcite .",
    "the idea hereby is to incorporate the guess of the unary context programs over the specified alphabets in both programs accordingly . to this end ,",
    "let , for an @xmath9-equivalence problem between programs @xmath0 and @xmath1 , @xmath384 as well as @xmath385 and @xmath386 for each @xmath183 , @xmath387 , be new distinct atoms , not occurring in @xmath388 . moreover , let @xmath389 which is used to guess a context program .",
    "in fact , the role of atoms @xmath390 is to guess a set of facts @xmath238 , while atoms @xmath385 with @xmath391 guess a subset of unary rules @xmath13 with @xmath392 and @xmath393 .",
    "then , @xmath394 holds iff @xmath395 and @xmath396 are ordinarily equivalent ; showing this correspondence is rather straightforward , in particular by application of the splitting theorem  @xcite .",
    "note that @xmath395 and @xmath396 are positive whenever @xmath0 and @xmath1 are positive .",
    "moreover , we can replace in @xmath397 each disjunctive facts @xmath398 by two corresponding normal rules @xmath399 and @xmath400 .",
    "hence , if we want to decide @xmath9-equivalence between two normal programs , our method results in an ordinary equivalence problem between normal programs , as well .",
    "the aim of this work is to provide a general and uniform characterization for different equivalence problems , which have been handled by inherently different concepts , so far . to this end",
    ", we have introduced an equivalence notion parameterized by two alphabets to restrict the atoms allowed to occur in the heads , and respectively , bodies of the context programs .",
    "we showed that our approach captures the most important equivalence notions studied , including strong and uniform equivalence as well as relativized notions thereof .",
    "figure  [ fig:1 ] gives an overview of @xmath9-equivalence and its special cases , i.e. ,   relativized uniform equivalence ( rue ) , relativized strong equivalence ( rse ) , body - relativized equivalence ( bre ) , and head - relativized equivalence ( hre ) .",
    "on the bottom line we have ordinary equivalence , while the top - left corner amounts to uniform equivalence ( ue ) and the top - right corner to strong equivalence ( se ) .",
    "future work includes the study of further properties of @xmath9-equivalence , as well as potential applications , which include relations to open logic programs @xcite and new concepts for program simplification  @xcite .",
    "an extension of @xmath9-equivalence from disjunctive logic programs to theories is a further aspect to be considered . in particular , this requires a reformulation of the concept of @xmath9-models in terms of the logic of here - and - there ( which was used in @xcite to characterize strong equivalence between theories under equilibrium logic , a generalization of the answer - set semantics ) .",
    "we expect that such a generalization of our results can be accomplished in similar manner as this was done for relativized strong and uniform equivalence  @xcite .",
    "also an extension of the framework in the sense of  @xcite , where a further alphabet for answer - set projection is used to specify the atoms which have to coincide in comparing the answer sets is of interest . while eiter et al .",
    "provide a characterization for relativized _ strong _ equivalence with projection , recent work @xcite addresses the problem of relativized _ uniform _ equivalence with projection .",
    "our results may be a basis to provide a common view on these two concepts of program correspondence , as well .",
    "in _ proceedings of the 6th international conference on logic programming and nonmonotonic reasoning ( lpnmr01 ) _ , t.  eiter , w.  faber , and m.  truszczynski , eds .",
    "lncs , vol .",
    "springer , 147159 .      ,",
    "fink , m. , tompits , h. , and woltran , s. 2004 . .",
    "in _ proceedings of the 7th international conference on logic programming and nonmonotonic reasoning ( lpnmr04 ) _ ,",
    "v.  lifschitz and i.  niemel , eds .",
    "lncs , vol .",
    "springer , 8799 .      , tompits , h. , and woltran , s. 2005 . .",
    "in _ proceedings of the 19th international joint conference on artificial intelligence ( ijcai05 ) _ , l.  p. kaelbling and a.  saffiotti , eds . professional book center , 97102 .                ,",
    "tompits , h. , and woltran , s. 2007 . .",
    "in _ proceedings of the 1st workshop correspondence and equivalence for nonmonotonic theories ( cent07 ) _ , d.  pearce , a.  polleres , a.  valverde , and s.  woltran , eds .",
    "ceur workshop proceedings , vol . 265 .",
    "ceur-ws.org , 3748 ."
  ],
  "abstract_text": [
    "<S> logic programming under the answer - set semantics nowadays deals with numerous different notions of program equivalence . </S>",
    "<S> this is due to the fact that equivalence for substitution ( known as strong equivalence ) and ordinary equivalence are different concepts . </S>",
    "<S> the former holds , given programs @xmath0 and @xmath1 , iff @xmath0 can be faithfully replaced by @xmath1 within any context @xmath2 , while the latter holds iff @xmath0 and @xmath1 provide the same output , that is , they have the same answer sets . notions in between strong and ordinary equivalence have been introduced as theoretical tools to compare incomplete programs and are defined by either restricting the syntactic structure of the considered context programs @xmath2 or by bounding the set @xmath3 of atoms allowed to occur in @xmath2 ( relativized equivalence ) . for the latter approach , different @xmath3 yield properly different equivalence notions , in general . for the former approach , however , it turned out that any `` reasonable '' syntactic restriction to @xmath2 coincides with either ordinary , strong , or uniform equivalence ( for uniform equivalence , the context ranges over arbitrary sets of facts , rather than program rules ) . in this paper </S>",
    "<S> , we propose a parameterization for equivalence notions which takes care of both such kinds of restrictions simultaneously by bounding , on the one hand , the atoms which are allowed to occur in the rule heads of the context and , on the other hand , the atoms which are allowed to occur in the rule bodies of the context . </S>",
    "<S> we introduce a general semantical characterization which includes known ones as se - models ( for strong equivalence ) or ue - models ( for uniform equivalence ) as special cases . </S>",
    "<S> moreover , we provide complexity bounds for the problem in question and sketch a possible implementation method making use of dedicated systems for checking ordinary equivalence .    </S>",
    "<S> answer - set programming , strong equivalence , relativized equivalence . </S>"
  ]
}
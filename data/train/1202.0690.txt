{
  "article_text": [
    "energy harvesting communication systems involve transmitters being powered by environmental sources such as solar , vibration , and thermal effects , either alone or as supplement to the power drawn from a grid .",
    "the ability to supply the energy storage units from environmental sources can be very useful in distributed systems such as wireless sensor networks , and m2 m networks .",
    "recent developments in ambient energy harvesting technologies have already resulted in the practical implementation of such systems  @xcite .",
    "dependence on a variable energy source ( as opposed to a constant supply of power ) poses interesting new challenges for the transmission of information .",
    "optimal adaptation of transmission rate has been analyzed under various problem formulations  @xcite-@xcite . in  @xcite ,",
    "the transmission time mimimization problem on an awgn channel of data packets arriving at arbitrary but known time instants , using energy harvests occuring again at arbitrary , known time instants was formulated and solved . in  @xcite and  @xcite ,",
    "the formulation was extended to a broadcast channel with a static data pool .",
    "this was extended to cover the case of new data arriving during transmission in  @xcite . in  @xcite ,",
    "@xcite bounds on the capacity of an energy harvesting awgn channel were obtained .",
    "the results were extended to a fading channel in  @xcite .",
    "the solution of the transmission completion time minimization problem on a fading channel with a static data pool and known harvest times and channel states was reported in  @xcite .",
    "this paper extends the formulation of  @xcite by relaxing the static data pool assumption , and its main contribution is to develop an offline solution for the time minimizing packet scheduling problem with a rechargeable transmitter under fading conditions . the solution needs to adjust its transmission power and rate over the course of transmission with respect to packet arrivals , as well as channel state and energy harvests .",
    "this will sometimes correspond to lowering rate ( therefore the energy per bit ) , to work energy efficiently and prevent premature data queue idleness ; and at other times , increasing the rate to take advantage of a good channel state , especially when energy is abundant .",
    "the problem statement is made precise in the next section .",
    "after making the problem statement precise , we show the uniqueness of its solution through equivalence to a related throughput maximization problem .",
    "the solution is first obtained for the equivalent convex problem by unconstrained sequential minimization technique ( sumt ) and the optimal allocation of the completion time minimization problem is shown to be achievable through iterative runs of sumt .",
    "we begin with the problem statement in the next section .",
    "consider point - to - point communication over a fading channel , where transmission is supplied by the harvested energy , arriving at arbitrary instants . following the _ offline _ formulation in  @xcite",
    ", we assume that the transmitter has knowledge of the energy harvests as well as channel states before transmission starts .",
    "in contrast to  @xcite , data packets are allowed to arrive at arbitrary ( known ) times during the course of transmission .",
    "the harvested energy is stored in an ( ideal ) battery and immediately becomes available for use by the transmitter .",
    "data packets are stored in a data buffer ( of infinite capacity . )",
    "an example sequence of energy and packet arrivals , as well as channel gain changes is illustrated in fig .",
    "[ fig : sm ] . starting from time @xmath0 ,",
    "the amounts of energy and data have become available by time @xmath1 are denoted by @xmath2 and @xmath3 , respectively .",
    "any arrival of energy or data or a change in the channel state is called an _ event_. the duration between any two consequent events is called an epoch .",
    "the length of @xmath4 epoch is @xmath5 .",
    "given an average power constraint @xmath6 and channel gain level @xmath7 during the @xmath4 epoch , we assume rate level of @xmath8 is achievable for a certain tolerable error probability . equivalently the power level used to transmit a codeword at rate @xmath9 is given by : @xmath10 .",
    "accordingly , in discrete - time , the received signal is @xmath11 , where @xmath12 and @xmath13 are the input symbol and channel gain , and @xmath14 is zero - mean unit variance gaussian noise . given an average power constraint @xmath15 , capacity of the channel is given by @xmath16 .",
    ", @xmath17 are event times ( energy harvests marked as @xmath18 , channel state changes , @xmath19 , or data arrivals @xmath20 ) .",
    "the @xmath21 denote inter - event epoch durations . ]",
    "we consider packets arriving in a certain time window of size @xmath22 .",
    "the problem is to find an allocation of power and rate across time that minimizes the total duration of transmission for all of these packets .",
    "an optimal policy should respect causality constraints ( at any time , only the resources available up to that point can be used ) .",
    "it immediately follows from the concavity of the rate function that rate ( and power ) should not change within an epoch .",
    "so , the search for an optimal schedule can be limited to schedules that keep a constant power level and rate within each epoch .",
    "hence , the optimization problem can be written in terms of rates assigned to epochs .",
    "note that in the problem formulation below , the solution space is further limited ( w.l.o.g . ) to schedules spanning no more than some @xmath23 epochs .",
    "the value of @xmath23 can be set as the number of epochs used by any arbitrary feasible schedule .",
    "[ pr : fadeschedulingtmin ] * transmission time minimization of packets on an energy harvesting fading channel : * @xmath24    in pr .",
    "[ pr : fadeschedulingtmin ] , @xmath25 denotes the last epoch used in an optimal schedule .",
    "state the ( energy and data ) causality constraints , while   ensures transmission completion of all data .",
    "following  @xcite , we will exhibit the equivalence of pr .",
    "[ pr : fadeschedulingtmin ] to a convex problem , namely problem  [ pr : fadeschedulingdmax ] .",
    "problem  [ pr : fadeschedulingdmax ] aims to find a schedule which minimizes total energy consumption to transmit a given sequence of packets within a given deadline constraint @xmath26 , using the energy harvested during this time .",
    "[ pr : fadeschedulingdmax ] * energy consumption minimization of packets on an energy harvesting fading channel : *",
    "@xmath27    [ lmm : convexproblem ] problem  [ pr : fadeschedulingdmax ] is a convex optimization problem .",
    "_ firstly , note that @xmath28 is a strictly convex , monotonically increasing function .",
    "furthermore , the constraint set of the problem is defined by non - negative weighted sums of either @xmath28 s and @xmath9 s , each constraint being either convex or linear , respectively .",
    "it easily follows ( please see  @xcite for details ) that the set of feasible allocations form a convex region .",
    "finally , as the objective function of the minimization problem is also a non - negative weighted sum of increasing convex functions , we conclude that pr .",
    "[ pr : fadeschedulingdmax ] is convex  @xcite .",
    "[ lmm : equivalence ] suppose @xmath26 is the minimum completion time ( obtained by solving pr .",
    "[ pr : fadeschedulingtmin ] ) for the sequence of packets arriving by time @xmath29 , @xmath30 .",
    "then , for this sequence of events , any solution of pr .  [ pr : fadeschedulingdmax ] with deadline constraint specified as @xmath26 provides a solution to pr .",
    "[ pr : fadeschedulingtmin ] .    _ proof .",
    "_ let schedules @xmath31 and @xmath32 be optimal solutions of pr .",
    "[ pr : fadeschedulingtmin ] , and pr .",
    "[ pr : fadeschedulingdmax ] , defined with the deadline @xmath26 , respectively",
    ". the energy consumption of both schedules must be the same since the opposite claim would contradict the optimality of the schedules : @xmath32 has used no more energy by @xmath26 than @xmath31 , by definition .",
    "suppose it used less energy , than this means that @xmath31 has used some extra energy to transmit the same packets as @xmath32 .",
    "but then , it could use this extra energy in the last epoch to reduce the completion time by a nonzero amount , which would contradict optimality .",
    "hence , we have 2 schedules completing the transmission of the same amount of data at the same time by consuming same amount of energy . thus , @xmath31 and @xmath32 are both solutions to problems  [ pr : fadeschedulingtmin ] and  [ pr : fadeschedulingdmax ] .",
    "but by convexity , pr .",
    "[ pr : fadeschedulingdmax ] has a unique solution , hence @xmath31 and @xmath32 must be the same .    ' '' ''     + _ proof . _",
    "consider a schedule @xmath31 , which is a solution of pr .",
    "[ pr : fadeschedulingtmin ] , and a schedule @xmath32 , which provides an optimal solution to pr .",
    "[ pr : fadeschedulingdmax ] , defined with the deadline @xmath26 , respectively",
    ". the energy consumption of both schedules must be the same since the opposite claim will contradict the optimality of each allocation .",
    "now we have 2 schedules completing the transmission of the same amount of data at the same time by consuming same amount of energy .",
    "thus , @xmath31 and @xmath32 are both solutions to problems  [ pr : fadeschedulingtmin ] and  [ pr : fadeschedulingdmax ] .",
    "but by convexity , pr .",
    "[ pr : fadeschedulingdmax ] has a unique solution , hence @xmath31 and @xmath32 are the same .    ' '' ''     + _ proof .",
    "_ consider two schedules @xmath31 and @xmath32 , which respectively provide optimal solutions to problems  [ pr : fadeschedulingtmin ] and  [ pr : fadeschedulingdmax ] , respectively .",
    "let @xmath33 be the completion time of @xmath31 , and the deadline constraint of @xmath32 . by time @xmath33 the energy consumption of both schedules must be the same since the opposite claim will contradict the optimality each allocation .",
    "now we have 2 schedules completing the transmission of the same amount of data at the same time by consuming same amount of energy .",
    "thus , @xmath31 and @xmath32 are both solutions to problems  [ pr : fadeschedulingtmin ] and  [ pr : fadeschedulingdmax ] .",
    "but by convexity , pr .",
    "[ pr : fadeschedulingdmax ] has a unique solution , hence @xmath31 and @xmath32 are the same .    ' '' ''     +    [ corollary : uniqueness ] solution of pr .",
    "[ pr : fadeschedulingtmin ] is unique .",
    "_ as any solution of pr .",
    "[ pr : fadeschedulingtmin ] provides a solution to pr .",
    "[ pr : fadeschedulingdmax ] , in order for pr .",
    "[ pr : fadeschedulingdmax ] to have a unique solution ( which is true by convexity ) pr .",
    "[ pr : fadeschedulingtmin ] must have a unique solution .    ' '' ''     +      the _ sequential unconstrained minimization technique ( sumt ) _ is a convenient method  @xcite for iteratively converging to the optimal of a constrained problem by solving a sequence of unconstrained optimization problems .",
    "the unconstrained problems are formed by adding to the objective of the original problem penalty terms corresponding to constraint violations .",
    "correspondingly in our case , we obtain pr .",
    "[ pr : unconstrained_minimization ] as follows :    [ pr : unconstrained_minimization ] * unconstrained minimization problem : * @xmath34    @xmath35    due to constraints  , and  , penalty terms  ,  ,   and   have been added to the objective function .",
    "starting from a point in the exterior of the feasible region for an initial value of the penalty coefficient @xmath36 , we reach the next point by solving the corresponding unconstrained minimization problem . at each sumt iteration ,",
    "initial point is moved to the previously computed result . by iterating the penalty coefficient such that after iteration @xmath14 , @xmath37 for some growth parameter @xmath38 , we solve a sequence of unconstrained problems with monotonically increasing values of the penalty coefficient .",
    "intuitively , this drives the points toward the feasible region . as",
    "the penalty is zero inside the feasible region , this means that the point the algorithm stops at will be the first feasible point.it is proved in  @xcite that in the case of a convex objective and penalty terms as defined above , the algorithm converges to the optimum of the original constrained problem as @xmath39 goes to infinity .",
    "in practice , the iterations are stopped when an arbitrary stopping criterion @xmath40 is satisfied .    in our problem",
    ", sumt is initialized with an infeasible allocation ( i.e. , at a point in the exterior of the constraint region ) , specifically , transmitting all data at constant rate within the given deadline @xmath26 , disregarding causality constraints . to ensure fast convergence ( see  @xcite ) @xmath39",
    "is initialized such that the values of the objective and penalty terms are commensurate , and the penalty terms corresponding to each constraint are scaled such that no constraint dominates . at each iteration of sumt",
    ", the corresponding unconstrained problem is solved by _",
    "newton s method_. it is quite standard to apply newton s method in the inner iterations of sumt . after the @xmath41 newton step in an inner iteration , rate allocation vector is updated as : @xmath42^{-1 } \\nabla f(\\textbf{r}^l)$ ] .",
    "the _ newton decrement _ , @xmath43^{-1 } \\nabla f(\\textbf{r}^l)\\right)^{\\frac{1}{2}}$ ] , becoming smaller than a predefined accuracy parameter @xmath44 is the stopping criterion for each inner iteration . by reducing @xmath44 ,",
    "the inner optimizations can be made arbitrarily accurate  @xcite .",
    "the convergence rate of these iterations will be discussed in the following sections .      from lemma 2 , using the optimal value of completion time , @xmath45 , as a parameter in pr.2 would give us an optimal schedule for pr.1 .",
    "of course , @xmath45 is not known before solving pr.1 .",
    "the method we will use is to iteratively approach @xmath45 by solving pr . 2 for different values of @xmath26 and checking the resulting amount of energy consumption .",
    "the bisection method will be used to monotonically narrow down the interval in which the optimal completion time @xmath46 of pr .",
    "[ pr : fadeschedulingtmin ] must lie in . since @xmath47 is a monotonically decreasing and continuous function of @xmath26  @xcite , any feasible value of @xmath26 provides an upper bound on @xmath46 . in search of upper and lower bounds",
    ", @xmath26 is initialized as the end of last data arrival epoch , and sumt is run as detailed in section a. if the resulting optimal energy that sumt returns is too high , it means that transmission can not be completed within this deadline , hence the current value of @xmath26 provides a lower bound .",
    "@xmath26 is then is extended by the next epoch length .",
    "this procedure is repeated until the total consumed energy returned by sumt goes below the energy harvested by @xmath26 .",
    "that value of @xmath26 provides an upper bound .",
    "the next deadline is chosen as the average of the upper and lower bounds , and sumt is run again .",
    "if the deadline is feasible , it becomes the new upper bound , if not , it becomes the new lower bound , and so on .",
    "the iterations are stopped when the difference between the upper and lower bounds goes below @xmath48 , which , provided that the inner optimizations of sumt are also done with sufficient accuracy , sandwiches @xmath46 in an interval of size @xmath48 .",
    "the computational complexity is largely imposed by the stopping criteria of newton , sumt and bisection iterations . to compute the overall complexity of proposed scheme ,",
    "let us first consider the number of bisections .",
    "when bisection iterations begin , the difference between upper and lower bounds on completion time becomes the last epoch length of the most current schedule returned by sumt . in each iteration this interval is halved , so at most @xmath49 bisections are to be performed .",
    "for each bisection , sumt makes @xmath50 iterations to converge with a desired accuracy of @xmath51  @xcite .",
    "the number of newton steps to achieve an accuracy of @xmath44 in the inner newton iterations per each iteration of sumt is upper bounded by @xmath52 , where @xmath53 is the minimum decrement amount of @xmath54 and @xmath55 is the value at the optimal point  @xcite .",
    "this bound follows from the different nature of convergence of newton s iterations for different operating points .",
    "it has been shown in  @xcite that , once the operation point gets sufficiently close to the optimum , convergence rate is quadratic , while it is approximately linear until then . finally , the computational requirements imposed by each newton step , due to the construction and the inversion of a @xmath56 hessian ( where @xmath57 is the number of epochs in the problem ) , is polynomial ( with complexity @xmath58 or as low as @xmath59 with ultimately efficient implementation . )",
    "as an example , we consider the event sequence depicted in fig .",
    "[ fig : numex ] . the final schedule returned by the proposed algorithm",
    "is also shown in the figure .",
    "the penalty parameter @xmath39 is initialized as @xmath60 , the growth parameter @xmath61 is set to @xmath62 .",
    "the threshold values for newton s method , sumt and bisection are @xmath63 , @xmath64 and @xmath65 , respectively .",
    "the algorithm repeats @xmath66 sumt iterations , within which at most 6 newton s steps are repeated , for each of @xmath67 bisection repetitions and terminates within @xmath68 seconds in matlab running on a macbook pro rev .",
    "when the newton s and bisection thresholds are raised to @xmath65 and @xmath69 , respectively , the run time reduces to @xmath70 seconds .",
    "we believe that optimizing the code over an efficient programming platform can reduce this time significantly .",
    "epoch is @xmath19 , the bandwidth is @xmath71 khz , energy harvest amounts and arriving data are marked as @xmath18 and @xmath20 , respectively .",
    "( b ) final schedule returned by completion time minimization algorithm . ]",
    "a method for solving the offline minimum completion time packet scheduling problem on an energy harvesting fading channel has been developed and demonstrated .",
    "the key to the method is exhibiting equivalence to an energy minimization problem which is a convex program . in certain realistic scenarios ,",
    "the harvest profile and data arrivals may be known in advance . in that case",
    ", the offline solution would apply for a static channel . on a fading channel with an ergodic channel state process ,",
    "an online algorithm such as waterfilling could run on top of the offline adaptation .",
    "when the data and/or harvest arrivals are also unknown , the offline solution here may be combined with a prediction or learning scheme or a simple look - ahead policy .",
    "bib k. lin , j. hsu , s. zahedi , d. lee , j. friedman , a. kansal , v. raghunathan , m. srivastava ,  heliomote : enabling long - lived sensor networks through solar energy harvesting , \" in _ proceedings of the 3rd international conference on embedded networked sensor systems ( sensys ) _ , san diego , ca , usa , p. 309",
    ", 2005 .",
    "j. yang and s. ulukus ,  optimal packet scheduling in an energy harvesting communication system , \" _ ieee trans . on communications _",
    ", 60(1):220 - 230 , january 2012 .",
    "m. a. antepli , e. uysal - biyikoglu , and h. erkal ,  optimal packet scheduling on an energy harvesting broadcast link , \" to appear on _ ieee journal on selected areas in communications ( jsac ) , special issue on energy - efficient wireless communications _ , 2011 .",
    "j. yang , o. ozel and s. ulukus ,  broadcasting with an energy harvesting rechargeable transmitter , \" _ ieee trans . on wireless communications _ , vol.pp , no.99 , pp.1 - 13 , dec .",
    "f. m. ozcelik , h. erkal and e. uysal - biyikoglu ,  optimal offline packet scheduling on an energy harvesting broadcast link , \" _ 2011 ieee int .",
    "symposium on information theory _ ,",
    "st.petersburg , aug .",
    "h. erkal , f. m. ozcelik and e. uysal - biyikoglu ,  optimal offline packet scheduling on an energy harvesting broadcast link,\"arxiv:1111.6502v1 , 2011    o. ozel and s. ulukus ,  information - theoretic analysis of an energy harvesting communication system , \" in _ ieee pimrc workshops _ , 2010 .",
    "r. rajesh , v. sharma , and p. viswanath ,  information capacity of energy harvesting sensor nodes , \" _ 2011 ieee int .",
    "symposium on information theory _ ,",
    "st.petersburg , aug .",
    "r. rajesh , v. sharma and p. viswanath ,  capacity of fading gaussian channel with an energy harvesting sensor node , \" in _ ieee globecom11 , houston _ , texas , dec .",
    "o. ozel , k. tutuncuoglu , j. yang , s. ulukus and a. yener ,  transmission with energy harvesting nodes in fading wireless channels : optimal policies , \" _ ieee jour . on",
    "selected areas in communications , 29(8):1732 - 1743 _ , september 2011 .",
    "h. erkal , _ optimization of energy harvesting wireless communication systems _ , m.sc .",
    "thesis , middle east technical university , dept . of electrical and electronics engineering , ankara , turkey , dec .",
    "2011 , available at http://www.eee.metu.edu.tr/~cng/.    f. m. ozcelik , _ optimal and implementable transmission schemes for energy harvesting networks _ , m.sc .",
    "thesis , metu , ankara , turkey , expected 2012 , working copy available at http://www.eee.metu.edu.tr/~cng/ , last updated on june 2012 .",
    "s. boyd and l. vandenberghe , _ convex optimization _ , cambridge university press , 2004 .",
    "d. g. luenberger and y. ye , _ linear and nonlinear programming _ , new york : springer , 2008 .",
    "p.a.jensen and j.f .",
    "bard , _ algorithms for constrained optimization _ , 2003 , available at http://www.me.utexas.edu/~jensen/ormm/supplements/units/nlp_methods/const_opt.pdf .",
    "consider two feasible allocation vectors @xmath72 and @xmath73 and let @xmath74 be a linear combination of these .",
    "we will show that rate allocation vector @xmath75 is also feasible and consumes an amount of energy less than @xmath76 .",
    "first , let us compute the energy consumption of @xmath74 .",
    "@xmath77 follows from the strict convexity of @xmath78 function and equality holds only if @xmath79 or @xmath80 . with this inequality ,",
    "@xmath74 allocation consumes less than @xmath76 .",
    "we are now ready to check feasibility of the allocation and begin with the energy causality constraint ,  .",
    "@xmath81 states the satisfaction of energy causality constraint .",
    "similarly , @xmath74 also respects data causality ,  .",
    "as @xmath72 and @xmath73 are two feasible schedules ,   implies that @xmath74 satisfies data causality constraint .",
    "in addition , we have the following when the transmission ends : @xmath83 shows the satisfaction of  .",
    "so , we have shown that feasible allocations form a convex region , , any linear combination of two feasible schedules is also feasible . combining this result with",
    ", we conclude that pr .",
    "[ pr : fadeschedulingdmax ] is a convex optimization problem ."
  ],
  "abstract_text": [
    "<S> the offline problem of transmission completion time minimization for an energy harvesting transmitter under fading is extended to allow packet arrivals during transmission . </S>",
    "<S> a method for computing an optimal power and rate allocation ( i.e. , an optimal offline schedule ) is developed and studied .    </S>",
    "<S> transmission of packets over a fading channel under energy harvesting    energy harvesting , completion time , offline schedule , packet scheduling , causality constraints , energy constraint , unconstrained problem , sumt , sequential optimization , complexity . </S>"
  ]
}
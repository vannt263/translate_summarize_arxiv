{
  "article_text": [
    "formcalc @xcite is a package for the calculation of feynman amplitudes based on mathematica and form @xcite .",
    "amplitudes generated by feynarts @xcite are first simplified analytically and then converted to a self - contained fortran code for the computation of the squared matrix element .",
    "currently , diagrams up to one loop can be simplified , and kinematics are supplied for @xmath0 , @xmath1 , and @xmath2 processes .",
    "the present article describes the features added or enhanced in version 4.1 .",
    "they fall into several categories :    * weyl  van der waerden ( wvdw ) spinor formalism for external fermion lines , * multidimensional phase - space integration with cuba 1.2 , * public functions for writing out mathematica expressions as optimized fortran code , * feynhiggs interface , * non - minimal flavour violation ( nmfv ) for the mssm , * various useful scripts , * the hadcalc frontend , by m.  rauch , for hadronic calculations .",
    "amplitudes involving external fermions have the form @xmath3 , where the @xmath4 are ( products of ) fermion chains .",
    "the textbook recipe is to compute probabilities , such as @xmath5 , and evaluate the @xmath6 by standard trace techniques : @xmath7 .",
    "the problem with this approach is that instead of @xmath8 of the @xmath4 one needs to compute @xmath9 of the @xmath6 . since essentially @xmath10 ,",
    "this quickly becomes a limiting factor in problems involving many vectors , e.g.  in multi - particle final states or polarization effects .",
    "the solution is of course to compute the amplitude @xmath11 directly and this is done most conveniently in the wvdw formalism @xcite .",
    "the implementation of this technique in an automated program has been outlined in @xcite .",
    "the ` fermionchains ` option of ` calcfeynamp ` determines how fermion chains are returned : ` weyl ` , the default , selects weyl chains .",
    "` chiral ` and ` va ` select dirac chains in the chiral ( @xmath12 ) and vector / axial - vector ( @xmath13 ) decomposition , respectively .",
    "the weyl chains do not need to be further evaluated with ` helicityme ` , which applies the trace technique .",
    "the wvdw method has other advantages , too : polarization does not ` cost ' extra in terms of cpu time , that is , one gets the spin physics for free .",
    "whereas with the trace technique the formulas become significantly more bloated when polarization is taken into account , in the wvdw formalism one actually needs to sum up the polarized amplitudes to get the unpolarized result .",
    "there is also better numerical stability because components of @xmath14 are arranged as ` large ' and ` small ' matrix entries , viz .",
    "@xmath15 cancellations of the form @xmath16 for @xmath17 can be avoided ( e.g.  by observing that @xmath18 for on - shell @xmath19 ) and hence mass effects are treated more accurately .",
    "formcalc uses the cuba library @xcite for numerical integration of multidimensional phase - spaces .",
    "cuba provides four integration routines : vegas , suave , divonne , and cuhre .",
    "all four have a very similar invocation and can thus be interchanged easily , e.g.  for comparison .",
    "the flexibility of a general - purpose method is particularly useful in the setting of automatically generated code .",
    "the following table gives an overview of the features of the cuba routines ; specific details on the implementation and the actual usage of the cuba routines are provided in @xcite and shall not be repeated here .",
    "[ cols=\"<,<,<,<,<,<,<,<\",options=\"header \" , ]     apart from some important bug - fixes , cuba version 1.2 includes the following new features :    * pseudo - random sampling using the mersenne twister generator has been added to all monte carlo algorithms .",
    "this is useful not only for comparison , but also because in high dimensions the numerator in the convergence rate for quasi - random samples , @xmath20 , becomes noticeable .",
    "* vegas can memorize its internal grid for subsequent invocations , to speed up integration on similar integrands .",
    "* vegas can save its internal state in a file such that the calculation can be resumed e.g.  after a crash .",
    "* there exists a one - stop invocation for the cuba routines , + ` subroutine cuba(ndim , integrand , result , error ) ` + with which the number of parameters that need to be passed is reduced to a minimum .",
    "( note that this particularly simple form is special to formcalc , and that cuba s original definition is slightly more involved . )",
    "* a partition viewer has been added .",
    "it allows to view the partitioning of the integration region performed by suave , divonne , and cuhre ( vegas does not tessellate the integration region ) . to use the partition viewer ,",
    "set the verbosity level to 3 and pipe the output of your program through the ` partview ` program , as in + ` myprogram | partview 1 2 1 3 ` + each pair of numbers on the command - line refers to a hyperplane to display , i.e.  in the above example the 12 and 13 hyperplanes are shown .",
    "see fig .",
    "[ fig : partview ] for a screenshot .",
    "a screenshot of the cuba partition viewer . ]",
    "cuba possesses also a mathematica interface .",
    "the mathlink executables are loaded e.g.  with ` install[vegas ] ` and make the cuba routines available in a way almost like ` nintegrate ` .",
    "( 300,90 ) ( 50,85)[b]mathematica ( 0,0)(100,80)redpastelred ( 50,65)[]vegas[@xmath21 , @xmath22 ( 50,20)[]integrand @xmath21    ( 200,0 ) ( 50,85)[b]c ( 0,0)(100,80)bluepastelblue ( 50,65)[]void vegas(@xmath23 ) ( 50,20)[]request samples    ( 0,0 ) ( 50,55)(50,31 ) ( 33.5,39.5)(66.5,49)blackpastelred ( 50,44)[]compile    ( 150,0 ) ( -40,65)(40,65 ) ( 0,70)[b]mathlink    ( 0,28)[b]@xmath24 ( 40,25)(-40,25 ) ( -40,15)(40,15 ) ( 0,12)[t]@xmath25    the integrand stays in mathematica at all times ( see figure above ) , which means that one can integrate functions which are not simple to implement in c or fortran , e.g.  ` cuhre[zeta[x y ] , x,.2,.3 , y,.4,.5 ] ` .",
    "formcalc s code - generation functions , hitherto used only internally , have been reorganized for greater user - friendliness and are now publicly available .",
    "they can be used to write out an arbitrary mathematica expression as optimized fortran code .",
    "the basic procedure is very simple :    1 .",
    "= openfortran[``_file.f _ '' ] + opens _",
    "file.f _ as a fortran file for writing , 2 .",
    "writeexpr[_handle _ , _ var _ - > _ expr _ ,  ] + writes out fortran code to calculate _",
    "expr _ and store the result in _ var _ , 3 .",
    "close[_handle _ ] + closes the file again .",
    "the code generation is fairly sophisticated and goes well beyond merely applying mathematica s ` fortranform ` .",
    "the generated code is optimized , e.g.  common subexpressions are pulled out and computed in temporary variables .",
    "expressions too large for fortran are split into parts , as in    ....       var = part1       var = var + part2       ... ....    if the expression is too large even to be sensibly evaluated in one file , the ` filesplit ` function can distribute it on several files and optionally write out a master subroutine which calls the individual parts .    to further automate the code generation , such that the resulting code needs few or no changes by hand , many ancillary functions are available , e.g.  ` commondecl ` writes out common - block declarations for a given list of variables .",
    "formcalc s initialization code for the mssm , ` mssmini.f ` , now contains an interface to feynhiggs @xcite for the computation of the higgs masses .",
    "since in particular the light higgs - boson mass receives significant radiative corrections , its precise determination is phenomenologically important . from the user perspective",
    ", a preprocessor flag governs the choice of higgs masses :    * ` # define higgsmasses tree ` + use the tree - level higgs masses , * ` # define higgsmasses simple ` + use a simple one - loop formula , * ` # define higgsmasses feynhiggs ` + invoke feynhiggs 2.2 @xcite  this is the most precise determination , * ` higgsmasses ` undefined + use the feynhiggsfast approximation @xcite  quite precise , but valid only for real susy parameters .    also for the mssm , non - minimal flavour violation ( nmfv )",
    "can be enabled . in the usual , minimal , setup , there is no flavour - violation beyond the standard model s ckm effects , i.e.  left ",
    "right mixing is independent for each squark flavour .",
    "in contrast , nmfv means full @xmath26 mixing among both up - type squarks @xmath27 and down - type squarks @xmath28 , see e.g.   @xcite .    on the technical side ,",
    "the diagrams have to be generated using the ` fvmssm.mod ` model file in feynarts , and in the numerical evaluation the preprocessor flag ` flavourviolation ` has to be defined .",
    "once this flag is enabled , the @xmath26 mass matrix is accessible as ` lambdasf ` and in addition to the usual squark masses and mixing matrices , ` msf ` and ` usf ` , there exist ` masf ` and ` uasf ` containing the corresponding nmfv quantities .",
    "formcalc 4.1 includes a few useful shell scripts :    * ` sfx ` packs all source files in the directory it is invoked in into a mail - safe self - extracting archive .",
    "the archived code in particular does not need formcalc to compile or run .",
    "* ` turnoff ` switches off ( and on ) the evaluation of certain parts of the amplitude , which is a handy thing for testing .",
    "for example , `` ` turnoff box ` '' turns off the boxes ( actually , all parts of the amplitude with ` box ' in their name ) .",
    "` turnoff ` without arguments then restores all modules . * ` pnuglot ` produces a high - quality plot in encapsulated postscript format from a data file in just one line . * ` submit ` automatically distributes a parameter scan on a cluster .",
    "the available machines first have to be declared in a file ` .submitrc ` , e.g.   + ....      # optional : ` nice ' to start jobs with      nice 10      # pentium 4      pcl301      pcl305      # dual xeon      pcl247b    2      pcl319a    2      ... .... + after that the command line , typically something like `` ` run uuuu 500,1000 ` '' , simply has to be prefixed by ` submit ` , i.e.  `` ` submit run uuuu 500,1000 ` '' .",
    "hadcalc is a new frontend for formcalc , i.e.  it uses the generated fortran code with a custom set of driver programs .",
    "it was written by michael rauch who also maintains it independently from formcalc .",
    "hadcalc automates the calculation of hadronic cross - sections .",
    "it automatically performs the convolution with pdfs and allows various cuts to be applied .",
    "cross - sections can be computed either fully integrated or differential in invariant mass , rapidity , or transverse momentum .",
    "hadcalc operates either in batch mode , like formcalc , or interactively , which allows the user e.g.  to play with parameters .",
    "the program is not ( yet ) public .",
    "it can currently be obtained on request from @xmath29mrauch@mppmu.mpg.de@xmath30 .",
    "formcalc 4.1 is the current release of the formcalc package .",
    "it has many new features enhancing performance and user - friendliness .",
    "the new public fortran code - generation functions should be interesting also to people who do not use formcalc to compute feynman amplitudes .",
    "the package is available as open source and stands under the gnu lesser general public license ( lgpl ) .",
    "it can be obtained from the web site ` http://www.feynarts.de/formcalc ` ."
  ],
  "abstract_text": [
    "<S> formcalc is a matrix - element generator that turns feynarts amplitudes up to one loop into a fortran code for computing the squared matrix element . </S>",
    "<S> the generated code can be run with formcalc s own driver programs or used with other ` frontends ' , e.g.  monte carlos . </S>",
    "<S> major new or enhanced features in version 4.1 are : treatment of external fermions , phase - space integration , code - generation functions , extensions for the mssm , the hadcalc frontend . </S>"
  ]
}
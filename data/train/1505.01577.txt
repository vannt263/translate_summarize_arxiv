{
  "article_text": [
    "in mathematical knowledge management ( mkm ) , expanding of the fields covered by formal methods has led to the rapid growth of formal mathematical libraries .",
    "for instance , the mizar mathematical library ( mml)@xcite has grown to more than 2.7 million lines in 2015 , and it has been increasing by approximately 0.1 million lines per year .    the development of formal mathematical libraries facilitates the reuse of mathematical symbols and theorems , thereby improving the efficiency of writing formal proofs .",
    "however , the increased volume of the libraries makes it difficult for users to grasp what and where symbols and theorems are defined . in recent years",
    ", developers of formal proofs have spent considerable time on search tasks in large - scale libraries , thereby decreasing the productivity of formal verification .",
    "therefore , searching and browsing efficiency in large - scale libraries has been a crucial issue in mkm .",
    "we analyze some existing tools for searching and browsing the mizar library .",
    "the html - ized mizar library@xcite is one of the most successful documentation tools for formal mathematical libraries .",
    "the html - linked mml was first developed in the late 1990s for the former `` journal of formalized mathematics ''",
    "and then re - implemented by dr .",
    "josef urban using the xml / xslt technology .",
    "this new html - ization was also used in the mathwiki project .",
    "the system is capable of intuitive and rapid browsing as a result of hyperlinks being embedded into symbols , enabling users to jump from symbol occurrences to their definitions by clicking them .",
    "the system has been widely used by mizar users because of its effectiveness and user - friendly design . however , because this system does not have retrieval functions , users are frequently obliged to grep symbols in the mml using text editors . moreover , although the hyperlinks allow users to jump to their definitions , it is still difficult to , inversely , enumerate the symbols that include a particular symbol in their definitions .",
    "mml query@xcite is the most flexible and sophisticated search system for the mml .",
    "this system has its own query language , and users can input more detailed information regarding search objects than is possible using grep .",
    "however , users must learn and master the query language , thus this is a burden for beginners .",
    "conversely , in software development , most widely used programming languages have several types of api documentation generators , and almost all of the widely used libraries have their own online api documentation systems . those api reference systems have common features , such as incremental search and a list of symbols that is automatically created by api documentation generators during library updates .",
    "many documentation generators , such as doxygen and rdoc , have contributed to the acceleration of software development .",
    "we apply the software development approach to developing a documentation generator that works on the mml in order to overcome the drawback of existing search and browsing systems .",
    "using the programming language python , we developed a documentation generator that comprises the following three steps :    1 .",
    "parse the html - ized mml and collect symbols and their mutual relationships .",
    "2 .   clean and arrange those data .",
    "output reference documents in html format .",
    "each file corresponds to one symbol .",
    "these steps take only a few minutes in total .",
    "the latest reference system produced by the generator is available at a website .",
    "[ fig : screenshot ] shows a screenshot of the system .",
    "the reference system offers the following helpful features :    * symbol list : * there are nearly 9,000 symbols ( predicate , mode , structure , functor , and attribute ) in the mml , all of which are listed in the left pane of the system .",
    "the type of each symbol can be distinguished by the icon next to the symbol . clicking a symbol in the list",
    "causes the corresponding page to be loaded into the main frame in left pane .",
    "* incremental search : * an incremental search function is located at the top of the left pane .",
    "when several search words separated by blanks are input , the system combines the symbol list into symbols that contain all of the indicated words .",
    "as the system has an original search table , the function returns search results immediately .",
    "users can quickly look up symbols defined in the mml , even without knowing the correct spelling .",
    "* source code : * the symbol definition source code is imported from the html - ized mml .",
    "symbols in bold font are hyperlinked to their definitions .",
    "internal links pointing to their definitions in this reference system are in blue .",
    "external links pointing to their definitions in the original html - ized mml are in red .",
    "* referrer list : * although the html - ized mml enables users to jump from symbol occurrences to their definitions by clicking them , it does not have a function to enumerate symbols that are used in the definitions of particular symbols .",
    "the new system organizes the list of referrers for each symbol , and users can check them easily .",
    "we utilized the api documentation technique from the field of software development to develop a new documentation generator that works on the mml .",
    "this system enables users to retrieve symbols quickly and intuitively using an incremental search function .",
    "furthermore , users can easily check the types of symbols allowed to be used together by referrer lists .",
    "these functions have contributed considerably to improving the efficiency of formal proof development , and the system has gained a good reputation among the mizar community . additionally , the approach of the system is not specific to mizar and the mml , thus all formal libraries would benefit from such a system .",
    "therefore , the future versions of the system should support other formal languages and libraries .",
    "we mention three remaining issues regarding the system :    * reimplementation with the xml - ized mml : * the current documentation generator parses the html - ized mml instead of the xml - ized mizar@xcite .",
    "this is because the former represents relationships between symbols and their definitions as embedded hyperlinks , whereas it is difficult to collect these relationships from the latter .",
    "however , the extra process required to generate the html - ized mml takes considerable time .",
    "therefore , we would like to change the system to work with the xml - ized mml in the future .",
    "* theorem search : * a theorem search system requires semantic analysis , and machine learning would be a promising approach . because this research is underway for automated reasoning@xcite , we would like to apply the technique to an interactive search engine .",
    "* tagged comments : * in software development , most documentation generators collect tagged comments , such as authors , purposes , and usages , and reflect them in api documents , whereas the current mizar library does not have any tagged comments .",
    "although mizar is a comparatively readable formal language , it is sometimes difficult to discern a writer s intention from a source code .",
    "consequently , such a function would work beneficially , if it were implemented .",
    "furthermore , there is no standard for tagged comments in formal libraries , such a format should be developed in future work and then adopted by all formal libraries .",
    "we also suggest a possible application of the system :    * code completion : * other major proof assistants have developed graphical interfaces , such as the jedit plugins for coq and isabelle @xcite .",
    "although the mizar system provides an emacs plugin@xcite , some users hope that a newer one will be offered on a modern integrated development environment ( ide ) .",
    "the incremental function of the system would assist in implementation of code completion for those ide systems .",
    "the authors wish to thank the members of the mathwiki project for their preceding work .",
    "our research is deeply dependent on their product .",
    "we especially express our gratitude to dr . josef urban , who is well known as a member of the mathwiki project , for giving us some beneficial advice for the study .",
    "we would also like to thank to dr .",
    "adam naumowicz for helping us improve our paper .",
    "jesse alama , michael kohlhase , lionel mamane , adam naumowicz , piotr rudnicki , and josef urban : licensing the mizar mathematical library .",
    "calculemus / mkm 2011 .",
    "lncs , vol . 6824 , pp .",
    "springer ( 2011 ) .",
    "josef urban , jesse alama , piotr rudnicki , and herman geuvers : a wiki for mizar : motivation , considerations , and initial prototype .",
    "aisc / mkm / calculemus 2010 .",
    "lncs , vol . 6167 , pp .",
    "455469 . springer ( 2010 ) ."
  ],
  "abstract_text": [
    "<S> the purpose of this project is to collect symbol information in the mizar mathematical library and manipulate it into practical and organized documentation . </S>",
    "<S> inspired by the mathwiki project and api reference systems for computer programs , we developed a documentation generator focusing on symbols for the html - ized mizar library . </S>",
    "<S> the system has several helpful features , including a symbol list , incremental search , and a referrer list . </S>",
    "<S> it targets those who use proof assistance systems , the volume of whose libraries has been rapidly increasing year by year . </S>"
  ]
}
{
  "article_text": [
    "in micromagnetic simulations one is interested in either finding _ magnetization configurations _ of minimal magnetic energy or the time evolution of the magnetization under influence of internal and external fields @xcite . in both cases the effective field , which consists of _ stray field _ , _ anisotropy , exchange , external _ and possibly _ thermal field _ and _ spin transfer torque interaction _ ( influence of external currents ) , has to be computed in each step of an iterative procedure @xcite . among them",
    "the stray field part is the most time consuming .",
    "+ since we are interested in developing a new method for the computation of the latter one , we briefly state here the interface problem which defines the scalar potential of the stray field and give an overview of some existing numerical methods which address it .",
    "+ the micromagnetic _ stray field _",
    "is given as @xmath3 , where the _ scalar potential _",
    "@xmath4 for a given magnetization @xmath5 , is the space of @xmath6 times continuously differentiable functions defined on @xmath7 ; @xmath8 means closure of @xmath9 ( bounded and open ) and @xmath10 stands for complement . ]",
    "@xmath9 bounded and open , fulfills the interface problem @xcite @xmath11 & \\ , = 0 & \\text{on } \\,\\ , \\partial \\omega , \\\\",
    "\\left[\\frac{\\partial \\phi}{\\partial \\boldsymbol{n}}\\right ] & \\ , = - \\boldsymbol{m } \\cdot \\boldsymbol{n } & \\text{on } \\,\\ , \\partial \\omega , \\notag\\\\ \\phi(\\boldsymbol{x } ) & \\ , = \\mathcal{o}(\\tfrac{1}{\\left\\| \\boldsymbol{x } \\right\\| } ) \\quad \\text{as } \\,\\ , \\left\\| \\boldsymbol{x } \\right\\| \\rightarrow \\infty,&\\notag\\end{aligned}\\ ] ] where @xmath12 $ ] stands for the jump at the boundary .",
    "the classical solution of has to be determined in whole space and is at least two times continuously differentiable in @xmath7 and the exterior region @xmath13 .",
    "+ since we aim to compute a _ weak solution _ we further assume that @xmath7 is a lipschitz domain with polyhedral boundary @xmath14 . one reformulates the set of equations , @xcite : + for given @xmath15 the _ micromagnetic scalar potential _",
    "@xmath16 is the solution to , where @xmath17 and @xmath18 holds in a variational sense .",
    "hereby , @xmath19 denotes the usual _ sobolev space _ , i.e. @xmath20 and @xmath21 .",
    "the jump @xmath12 $ ] is determined by taking the corresponding trace operators . within this setting the existence of a unique solution to has been proved .",
    "for details we refer the reader to @xcite and references therein . + for comparing different algorithms we mention the important fact that in micromagnetic methods it is possible to precompute certain quantities that do not depend on the magnetization , e.g. only rely on the geometry of the problem , see for instance @xcite .",
    "thus , in our asymptotic operation counts , we neglect the effort for computing these steps and refer to as _ precomputation _ or _",
    "setup phase_. + several methods address the approximation of the solution to .",
    "integral methods with a regular discretization of the domain @xmath7 aim to directly compute the integral representation of the solution inside the magnetic body @xmath7 @xcite , i.e. @xmath22 discretization on an equispaced grid built of rectangular computational cells allows applying fast fourier transform ( fft ) techniques , making this methods quasi - optimal , i.e. the costs are @xmath23 for @xmath1 grid points @xcite .",
    "also the _ fast multipole method _ and combination with fft was applied to compute the magnetostatic field and energy @xcite , as well as a nonuniform grid ( ng ) algorithm @xcite . within the framework of integral approaches",
    "also tensor grid methods were developed , which make further assumptions on the representation of the magnetization field through tensor formats , but then gain even sub - linear complexity @xcite . +",
    "a precorrected - fft method was introduced in the context of electromagnetic boundary integral equations @xcite . in the relevant literature , to the authors best knowledge , this method has not been adapted to the corresponding micromagnetic equations , but so - called non - uniform fft could be considered as a related approach . +",
    "a method using non - uniform fft from @xcite on the quadrature approximation of the integral representation discretized on unstructured @xmath24-dimensional fe grids was reported in @xcite .",
    "this method scales @xmath25 in the general case of @xmath26 dimensions for @xmath27 quadrature points in total , where @xmath6 quadrature points are used for each of the @xmath28 computational domains ( tetrahedrons for volume and triangles for surface integrals ) , @xmath1 mesh - nodes and an auxiliary parameter @xmath29 , which comes from the fft and is of the same order as in our forthcoming proposed method , see @xcite for more details .",
    "we stress that our method leads to the same complexity for a prescribed accuracy but requires only a pre - factor @xmath30 .",
    "this is achieved by performing the integration in a setup phase . + moreover , _",
    "shell transformation techniques _ on a finite element mesh containing @xmath7 were applied to address unbounded problems like , @xcite .",
    "the discrete formulation of translates to only one sparse linear system , which , however , tends to be very ill - conditioned due to the transformation .",
    "algebraic multigrid preconditioners were successfully applied to address this issue @xcite .",
    "+ on the other hand , the well - known hybrid fem - bem coupling by the _ ansatz of fredkin and koehler _ @xcite aims to solve by the splitting @xmath31 , where @xmath32 is determined by a poisson equation with neumann boundary conditions and @xmath33 by a laplace equation where the dirichlet data are computed by the values of @xmath32 through a boundary integral representation of the potential @xmath33 .",
    "hereby , the calculation of the boundary values of @xmath33 leads to a dense matrix - vector product which scales @xmath34 for @xmath35 boundary nodes .",
    "compression techniques were introduced to reduce this complexity and storage requirements @xcite .",
    "+ in this work we present a first order polynomial ( p@xmath36 ) finite element method that solves by the _ ansatz of garca - cervera and roma _",
    "@xcite , where we develop a fast evaluation technique for the single layer potential .",
    "approximation of a smoothed version of the newtonian kernel @xmath37 by a fourier series will lead us to a computational scheme which is similar to the convolution theorem used e.g. in integral methods mentioned above . based on fft for non - equispaced data ( non - uniform fft , nfft ) @xcite and linearly scaling near - field correction , we are able to efficiently compute the single layer potential .",
    "we then combine this solution with the finite element solution of a dirichlet problem , yielding , in total , a complexity of @xmath38 for @xmath1 nodes and @xmath2 surface triangles .",
    "+ in the following section we discuss the _ ansatz of garca - cervera and roma _ , which will be the basis for our method .",
    "in the following we will describe a quasi - linearly scaling method for the _ ansatz of garca - cervera and roma _ @xcite .",
    "we split the potential into @xmath31 and get for @xmath39 @xmath40 and set @xmath41 in @xmath13 .",
    "hence , we have @xmath42 = - \\frac{\\partial \\phi_1^{int}}{\\partial \\boldsymbol{n } } $ ] . + the second part @xmath43 consequently fulfills @xmath44 & \\ , = 0 & \\text{on } \\,\\ , \\partial \\omega,\\\\ \\left[\\frac{\\partial \\phi_2}{\\partial \\boldsymbol{n}}\\right ] & \\ , = - \\boldsymbol{m } \\cdot \\boldsymbol{n } + \\frac{\\partial \\phi_1^{int}}{\\partial \\boldsymbol{n } } & \\text{on } \\,\\ , \\partial \\omega , \\notag\\\\ \\phi_2^{ext}(\\boldsymbol{x } ) & \\ , = \\mathcal{o}(\\tfrac{1}{\\left\\| \\boldsymbol{x } \\right\\| } ) \\quad \\text{as } \\,\\ , \\left\\| \\boldsymbol{x } \\right\\| \\rightarrow \\infty,&\\notag\\end{aligned}\\ ] ] with solution given by the _ single layer potential _",
    "@xmath45 with the _ newtonian potential _ @xmath46 and @xmath47 .",
    "+ the advantage of this ansatz is twofold . eqn .   is a _ poisson equation _ with _ dirichlet data _ and , therefore , its _ galerkin system _ after fe discretization is symmetric , positive definite and sparse , and only has to be solved for _ free nodes _ , i.e. _ non - boundary nodes _ , see sec.[dirichlet ] . + as pointed out in @xcite , the single layer potential in eqn .",
    "is continuous towards the boundary and less singular than the _",
    "double layer potential _ which arises in the _ ansatz of fredkin - koehler _ and hence can be handled numerically more easily , also see sec .",
    "[ near_field ] .",
    "+ the potential might be evaluated at boundary nodes , which provides the dirichlet data for the laplace equation in .",
    "hence , an approximation of the solution @xmath48 to can be determined by evaluation of the single layer potential at boundary nodes and subsequently solving a dirichlet problem @xmath49 . in this",
    "connection , direct evaluation of the single layer potential at boundary nodes scales quadratically in the number of boundary nodes .",
    "+ our intention , however , is to evaluate on all nodes of a tetrahedral finite element ( fe ) mesh within a @xmath50 finite element method by a _ non - uniform fourier _ approach , which yields the complexity @xmath51 , i.e. linear in the number of boundary elements and nodes of the mesh , respectively .",
    "+ without any restrictions , our fast evaluation scheme could also be applied for the above mentioned calculation of the dirichlet data for , followed by solving the arising dirichlet galerkin system to obtain an approximation of @xmath33 at the free nodes .",
    "+ we further stress , that our approach can also be adapted for the ansatz of fredkin and koehler , which , however , will not be further discussed in this work .      for the sake of completeness , we briefly describe here the fem for dirichlet problems like . + the variational formulation of reads : + find the potential @xmath32 in the sobolev space with zero - boundary conditions , i.e. @xmath52 , such that @xmath53 we discretize on a tetrahedral mesh @xmath54 with elements @xmath55 and nodes @xmath56 and use affine basis functions @xmath57 in each tetrahedron .",
    "the usual assembly process by local stiffness matrices and load vectors leads to a linear system of size @xmath58 , i.e. @xmath59 . the _ stiffness matrix _",
    "@xmath60 then has the entries @xmath61 , where @xmath62 is the _ nodal basis _ ( hat functions ) of the space of @xmath54-piecewise affine , globally continuous functions ( a @xmath1-dimensional subspace of the sobolev space @xmath19 ) .",
    "similar , the load vector has the entries @xmath63 , where @xmath64 itself is assumed to be a @xmath54-piecewise affine nodal interpolation .",
    "+ note that due to the known values of the solution at the boundary nodes , in our case of @xmath32 already equal zero , every dirichlet system can always be rewritten to a system with homogeneous boundary conditions .",
    "the nodal basis functions corresponding to free nodes ( non - boundary nodes ) form a basis of the space of @xmath54-piecewise affine , globally continuous functions that are zero at the boundary [ a finite dimensional subspace of the sobolev space @xmath65 .",
    "hence , we only have to solve a _ subsystem _ , i.e. @xmath66 where _ fn _ and _ bn _ denote the @xmath67 and @xmath35 indices of _ free nodes _ and _ boundary nodes _ , respectively . the vector @xmath68 is understood as the vector of dirichlet data ( in the case here discussed equal to zero , thus @xmath69 ) extended to length @xmath1 by zero - padding for indices of free nodes .",
    "+ for an easily readable matlab implementation in the @xmath24-dimensional case we refer to @xcite .",
    "+ the resulting system is reduced to the size @xmath70 and is symmetric , positive definite and sparse .",
    "the solution gives the weights of the nodal basis functions at free nodes . in our numerical tests",
    "we solve it by using an ilu - preconditioned conjugate gradient ( cg ) method , but _",
    "algebraic multigrid preconditioned cg _ or ( onetime ) _ lu decomposition _ with backward substitution and exploiting the sparsity , could be used , which makes the complexity for linear in @xmath67 .",
    "while @xmath32 is determined in linear time by an ordinary fem for dirichlet problems , the direct evaluation of the single - layer potential , i.e. @xmath71 at boundary nodes or all nodes of a fe mesh would cost @xmath34 or @xmath72 respectively , where @xmath35 is the number of nodes on the boundary and @xmath1 the total number of nodes in the discretized domain @xmath7 .",
    "+ in the following we will introduce an efficient evaluation technique of based on fourier approximation of the newton kernel on an auxiliary tensor grid .",
    "+ before we go into detail , we briefly state the main idea .",
    "+ note that in our @xmath50 fe ansatz the first term of the function @xmath73 is piecewise affine , where the second one is constant for each surface triangle .",
    "for @xmath74 we take the @xmath75-orthogonal projection onto the space of element - wise constant functions by taking the integral mean over surface triangles , i.e. @xmath76 . thus eqn . in its discretized form",
    "reads @xmath77 where the @xmath78 denote the @xmath2 surface triangles .",
    "+ following the idea in @xcite , we split the kernel @xmath79 in a _",
    "singular _ and _ smooth part _ respectively , i.e. @xmath80 where @xmath81 is some approximation of @xmath82 on an interval @xmath83,\\ , \\beta > \\epsilon > 0 $ ] ( see sec .  [ kernel_appr ] ) , which is defined on the whole real axis and entirely smooth .",
    "@xmath84 , on the other hand , is a _",
    "field correction_. we denote the corresponding multivariate functions by @xmath85 and @xmath86 , respectively .",
    "+ our approximation scheme gets the form @xmath87 the near field part @xmath88 only has to be computed for elements that have less or equal distance than @xmath89 to the target point @xmath90 , i.e. @xmath91 has small support . for the ( weakly ) singular cases , i.e. @xmath92 , we will use a simple integral transformation , see sec .",
    "[ near_field ] .",
    "+ the fast computation of the part @xmath93 is achieved by approximation of the smooth kernel @xmath94 by a fourier series : + for the sake of simpler notation , we assume a scaled domain , i.e. @xmath95 , such that the arguments of @xmath96 lie in @xmath97 .",
    "+ we approximate the smooth kernel @xmath94 by its _ fourier series _ on @xmath98 , where @xmath99 means component - wise @xmath100 , i.e. @xmath101 where @xmath102 and the _ fourier coefficients _",
    "@xmath103 inserting into @xmath93 in and exchanging summation order yields @xmath104 the latter sum is a _ non - uniform discrete fourier transform _ ( ndft ) , which can be computed efficiently using fft in @xmath105 operations by so - called _ non - uniform fast fourier transform _ ( nfft ) , @xcite .",
    "+ the efficient computation of the tensor @xmath106 will be discussed in the next section .",
    "+ overall , the approximation scheme for @xmath93 has a similar form as the well known _",
    "convolution theorem _ for equispaced data , i.e. @xmath107    where @xmath108 denotes element - wise multiplication and @xmath109 is some generalization of an _ adjoint non - uniform discrete fourier transform _",
    "@xcite to an integrated fourier basis , i.e. @xmath110 .",
    "+ we started from the splitting @xmath111 , where , due to the fourier series approximation of @xmath94 , i.e. @xmath112 , the splitting of @xmath96 reads now @xmath113 we only take the approximation @xmath114 , introducing the error @xmath115 , which , however , can be controlled by the size of the tensor grid , i.e. @xmath116 , and the near field @xmath89 , cf . definition of @xmath91 in .",
    "nevertheless , analysis of the error in connection with our choice for approximating @xmath96 by a smooth function @xmath94 in the far field region , see sec .",
    "[ kernel_appr ] , will be given elsewhere .",
    "for the computation of the tensor @xmath109 with entries @xmath117 we go similar lines as for the efficient computation of the adjoint non - uniform discrete fourier transform ( ndft@xmath118 ) @xcite .",
    "+ the essential step is a _ gridding procedure _ of the data @xmath119 and fft of the resulting tensor containing the smeared source strengths . hereby , gridding is done by convoluting the data with localized functions , whereas this is undone in fourier space .",
    "the result is a generalization of the discrete fourier transform to non - equispaced data @xcite .",
    "+ first we introduce a well - localized univariate _ window function _ @xmath120 , e.g. a gaussian function or kaiser - bessel function , see sec .",
    "[ window_fct ] for more details , with a uniformly convergent fourier series of its @xmath121periodic extension , i.e. @xmath122 for @xmath123 dimensions we simply take the _",
    "tensor product _ of the univariate functions to obtain a multivariate window function , i.e. @xmath124 for ease of computation , we further introduce the truncated version of @xmath125 with some _ cut - off parameter _ @xmath126 , i.e. @xmath127}(x^{(q)}),\\end{aligned}\\ ] ] where @xmath128 is the indicator function.}(x ) = 1 $ ] for @xmath129 in @xmath130 $ ] and @xmath131 else . ] + we then compute an auxiliary tensor @xmath132 , where @xmath133 is an _ over - sampling factor _ ,",
    "i.e. @xmath134 where @xmath108 denotes element - wise multiplication and @xmath135 is meant component - wise and corresponds to the mesh size of the auxiliary tensor grid , see fig .",
    "+ formula can be seen as _ gridding _ of the source strengths @xmath136 on an auxiliary tensor grid of size @xmath137 .",
    "the desired tensor @xmath138 in can be computed by the fourier transform of @xmath139 .",
    "more precisely , we define a function @xmath140 according to the definition of @xmath139 by @xmath141 by expressing the fourier coefficients of @xmath140 in two different ways , we will end up with a simple formula for computing the tensor @xmath109 .",
    "+ first we approximate the fourier coefficients of @xmath140 ( cf .  ) by the trapezoidal rule for @xmath142 and @xmath125 by the truncated version @xmath143 in , i.e. @xmath144 which can be computed by a multivariate fft of the tensor @xmath139 .",
    "+ on the other hand , we also obtain an approximation of @xmath145 by inserting the truncated fourier series of @xmath125 , i.e. @xmath146 into the expression for the function @xmath140 , i.e. @xmath147   & \\ , = \\sum_{\\boldsymbol{l } \\in i_{\\boldsymbol{n } } } \\,\\big ( c_{\\boldsymbol{l}}(\\widetilde{\\upsilon } ) \\ , \\underbrace{\\sum_{j=1}^m   g_{j}\\,\\int_{s_j } \\,e^{-2\\pi \\mathrm{i } \\boldsymbol{y } \\cdot \\boldsymbol{l } } \\ , \\text{d}\\sigma(\\boldsymbol{y } ) } _ { = b_{\\boldsymbol{l } } } \\big)\\ , e^{2\\pi \\mathrm{i } \\boldsymbol{x } \\cdot \\boldsymbol{l}}.\\end{aligned}\\ ] ] thus , we have the relation ( @xmath142 ) @xmath148 overall the computation of @xmath109 consists of computing the coefficients @xmath145 in by a multivariate fft of the gridding tensor @xmath139 , followed by element - wise division by the precomputed coefficients @xmath149 .",
    "+ we therefore conclude that these two steps together scale @xmath150 .",
    "as will be shown in the next section , the computation of the gridding tensor @xmath139 can be done linearly in the number of surface elements , i.e. @xmath151 .",
    "hence , in total , computing @xmath109 scales @xmath152 .",
    "+ we stress that , alternatively to the above procedure for computing the tensor @xmath109 , we also could have directly transformed the expression into a discrete sum by using quadrature , i.e @xmath153 where @xmath154 is a long index , e.g. @xmath155 . eqn .",
    "could then be computed by a standard adjoint nfft @xcite in @xmath156 operations , also compare with @xcite . since the number of quadrature points @xmath157 might be very large , this approach is rather impractical .",
    "for that reason , we use eqn .   for the computation of the coefficients @xmath158 , where we can precompute the integrals in a setup phase of a micromagnetic simulation , compare with alg .",
    "[ alg_tot ] .",
    "+ however , at least it gives us a direct analogy to the standard adjoint nfft .",
    "in particular , the choice of window functions can be justified , since basically the same error estimates with respect to the cut - off parameter @xmath159 and over - sampling factor @xmath160 hold for our method , see sec .",
    "[ window_fct ] .",
    "we take a closer look at the computation of the tensor @xmath139 ( compare with ) , i.e. @xmath161 the aim is to compute through sparse summation by exploiting the locality of the function @xmath143 .",
    "+ we further assume the domain scaled into the hypercube @xmath162 , hence we also have @xmath163 .",
    "+ a triangle of the surface mesh is given as @xmath164 where @xmath165 where @xmath166 denotes the unit triangle in @xmath24d .",
    "+ in order to achieve linear complexity in @xmath2 we define a subset of @xmath167 for each surface element @xmath78 that ensures that @xmath168 in lies in the hypercube @xmath169 $ ] , i.e. @xmath170 & \\ , = \\{\\boldsymbol{l } \\in i_{\\alpha\\,\\boldsymbol{n } } \\mid \\boldsymbol{y } \\odot \\alpha\\,\\boldsymbol{n } - m\\boldsymbol{1 } \\leq_c \\boldsymbol{l } \\leq_c \\boldsymbol{y } \\odot \\alpha\\,\\boldsymbol{n } + m\\boldsymbol{1},\\ , \\boldsymbol{y } \\in s_j \\}. \\end{aligned}\\ ] ] we denote the @xmath171th component of by @xmath172 , where we take the @xmath171th components of the vector expressions in the definition .",
    "+ for the sake of computation we rewrite @xmath173 from it is easily seen that for the expressions @xmath174 and @xmath175 in simply holds @xmath176 y_{\\text{max}}^{(q),j } & \\ , = \\max_{k=0,1,2 } y_k^{(q),j}. \\end{aligned}\\ ] ] due to our assumption @xmath163 , we have @xmath177 and @xmath178 . fig .",
    "[ indx ] shows the index set @xmath179 .",
    "+    the tensor @xmath139 in is now computed by only using the index sets @xmath180 in @xmath181 operations :    * initialize @xmath139 with zeros * for @xmath182 calculate the vector @xmath183 of length at most @xmath184 and add the corresponding components to @xmath139 .    here , the integrals are precomputed , since they only depend on the given mesh .",
    "we may store the sparse matrix @xmath185 nevertheless , since the integrals of are smooth functions in the parameter @xmath186 , we can think of tensor compression for the rows , i.e. @xmath187 , reducing the storage to @xmath188 for @xmath189 depending on the tensor format and the accuracy .",
    "[ tab1 ] shows examples for compression rates using tensor train ( tt ) approximation @xcite .",
    ".compression of @xmath190 from surface mesh of a sphere by the tensor train format with accuracy @xmath36e-@xmath191 measured in the relative frobenius norm",
    ". @xmath192 . [ cols=\"^,^,^,^\",options=\"header \" , ]     tab .",
    "[ tab4 ] shows the errors of the stray field energy and corresponding timings for flower - like magnetization in the unit cube ( scaled into the @xmath193-box ) with respect to several different parameters .",
    "the approximation is compared to the exact reference value @xmath194e-@xmath195 , which is taken from @xcite . in both non - uniform fft directions",
    "the cut - off @xmath196 was used .",
    "remember that the approximation for the single layer potential is split into a near field correction and a smooth part , i.e. @xmath197 the scheme for the smooth part written in a compact form reads @xmath198 as pointed out in section  [ bem - nfft ] and also numerically tested in section  [ window_fct ] , the error that arises from approximating the tensor @xmath109 with entries @xmath199 , i.e. @xmath200 behaves like that for the standard nfft .",
    "the error bound in section  [ window_fct ] shows that this error decays exponentially with increasing cut - off parameter @xmath159 and is independent of the tensor grid size @xmath201 .",
    "+ in order to be able to analyze the error dependence on @xmath202 of the whole scheme one has to look at the kernel splitting in more detail , i.e. @xmath203 in the scheme with for the smooth part , the contribution of @xmath115 is neglected .",
    "thus , the error occurring from the approximation of the smooth kernel approximation @xmath94 by its fourier series approximation @xmath112 has to be analyzed .",
    "moreover , in order to get linear complexity in the near field correction , @xmath204 is assumed for @xmath205 . due to the approximation by exponential sums , compare with section  [ kernel_appr ] , this yields a ( uniform ) error in the interval @xmath206 $ ] , which is denoted as @xmath207 in the following estimate .",
    "overall , for the essential error arising in the summation in holds @xmath208 denotes the computed values and @xmath209 .",
    "+ due to the tensor product structure of the fourier coefficients of @xmath94 ( compare with section  [ kernel_appr ] ) , also the fourier series approximation has this structure , i.e. @xmath210 it follows @xmath211   & \\,\\leq \\sum_{k=1}^{s^\\prime } c_k\\,|\\omega_k|",
    "\\sum_{q=1}^3 \\max_{\\left\\|\\boldsymbol{x}\\right\\| < \\tfrac{1}{2}}| n_s^{(k)}(x_q ) - \\mathcal{f}n_s^{(k)}(x_q ) | , \\end{aligned}\\ ] ] where an telescoping sum like @xmath212 was used and @xmath213 is an upper bound for the products @xmath214 and @xmath215 .",
    "+ adapting the proof of th .  @xmath216 in @xcite for the univariate case , the error @xmath217 for @xmath218 can be estimated by @xmath219 where @xmath220 and @xmath221 and @xmath222 .",
    "+ the consequences of are twofold .",
    "first , for small @xmath223 the term @xmath224 only gets small for large @xmath225 , whereas for large @xmath223 this term is negligible . in the first case ( small @xmath223 ) one can use boundary regularization or further scaling the domain @xmath7 into , e.g. , @xmath193 .",
    "this reduces the error @xmath226 in general , @xcite .",
    "+ on the other hand suggests to choose @xmath225 in the order of @xmath227 , i.e. @xmath228 , such that @xmath229 and thus @xmath230 is small . + in order to get the relation between the tensor gird size @xmath201 and @xmath89 , . ] linear fitting of the quantities @xmath231 and @xmath232 , both , as functions of @xmath233 , is used .",
    "this gives , for several precomputed lists from @xcite , the relation @xmath234 now , linear complexity of the near field computation requires that @xmath235 is much smaller than the total number of nodes , i.e. @xmath1 , cf . section  [ near_field ] .",
    "assuming that the nodes near the boundary are reasonably uniformly distributed , means that the @xmath236balls @xmath237 contain about the same number of nodes , namely @xmath238 . if the even more idealistic assumption is made that the whole mesh is roughly uniform , then the volume of an @xmath89-ball is proportional to the ratio @xmath239 , i.e. there should hold approximately @xmath240 . + together with this combines to @xmath241 since the complexity of the proposed scheme for is @xmath242 , the assumption of a roughly uniform mesh , together with the error investigation above , gives rise to the scaling @xmath243 concerning the storage requirements of the method , one has to collect all pieces in the setup of alg .",
    "[ alg_tot ] .",
    "the storage of the lu decomposition of the stiffness matrix can be of quadratic order in the number of mesh nodes @xmath1 .",
    "nevertheless , a preconditioned iterative procedure would need linear storage in @xmath1 . + as indicated in sec .",
    "[ gridding ] , the storage for the sparse matrix @xmath190 is @xmath244 , where @xmath2 is the number of surface elements and @xmath184 is of the order of @xmath245 , the cubed cut - off parameter .",
    "tensor train compression can reduce the constant @xmath184 .",
    "+ due to the approximation with exponential sums , the fourier coefficients of the multivariate function @xmath94 only require @xmath246 complex numbers , instead of @xmath247 , if one can not rely on a separable structure , cf .",
    "[ kernel_appr ] .",
    "similar , the fourier coefficients of the window functions ( tensor product of univariate functions ) is only stored for the one - dimensional case , yielding a storage requirement of @xmath248 .",
    "finally , the near field integrals have to be stored , which is at most @xmath249 numbers .",
    "overall , the storage requirements are @xmath250 which is linear in @xmath251 and the @xmath225 s .",
    "we introduced a p@xmath36 finite element method for the computation of the micromagnetic scalar potential based on the ansatz of garca - cervera and roma .",
    "the potential is computed by a splitting @xmath31 , where @xmath32 is solved by a poisson equation with zero dirichlet boundary conditions and @xmath33 by evaluation of the single layer potential .",
    "our contribution is the development of a method to compute the single layer potential at all nodes of a tetrahedral mesh in linear time by means of fourier approximation of a smoothed kernel and near field correction .",
    "+ the discretized integral operator splits into a part with smooth and singular kernel .",
    "the latter one has small support and therefore allows a computation by sparse summation , while for the smooth part fourier techniques can be applied . due to the unstructured fe - mesh ,",
    "generalizations of discrete fourier transforms arise , where we developed efficient implementations .",
    "+ overall the method scales quasi linearly in the number of nodes and linearly in the number of surface elements .",
    "similar , the storage requirements are linear in the number of surface elements , where we further introduced tensor train compression to reduce the constant in the storage estimate for the gridding procedure .",
    "+ we used exponential sums to obtain an entirely smooth and separable approximation of the fourier coefficients of the newtonian potential . as a consequence of the above mentioned splitting , which includes a near field correction , the only essential error of our method ( within the p@xmath36 fem framework ) is due to this approximation , cf .",
    "nevertheless , numerical experiments for test cases with known analytical solutions show accurate approximations .",
    "+ future work might include detailed mathematical analysis of this error , as well as possible extension to higher order finite element and boundary element methods .",
    "+ finally , we stress that our approach could be seen as a generalization to general geometries of the fft techniques used in finite difference based micromagnetic methods for cuboid and equispaced computational domains , since our scheme shows some analogy to the convolution theorem which is used there , cf .",
    "the first author wants to thank stefan schnabl and michael srb for helpful discussions on this topic .",
    "+ financial support by the austrian science fund ( fwf ) sfb vicom ( f4112-n13 ) is gratefully acknowledged .",
    "32 natexlab#1#1[2]#2 , , ( ) .",
    ", , , ( ) . , ( ) .",
    ", , , , , .",
    ", , , , , , ( ) . , , ( ) .",
    ", , , , , ( ) . , , ( ) .",
    ", , , , ( ) . , , , ( ) .",
    ", , , , ( ) . , , , , ( ) .",
    ", , , , ( ) . , , , , , , ( ) .",
    ", , , , , , ( ) . , , , ( ) .",
    ", , , ( ) . , , , , , ( ) . , , , , , , , ( ) . , , ( ) . , , , ( )",
    ", , , , , , ( ) . , , ( ) .",
    ", , ( ) . ,",
    "( ) . , , , in : , , , pp . . , , ( ) . , ,",
    ", ( ) . , , ( ) . , , in : , ( eds . ) , , , pp . . , , . , , in : , , , pp . . .",
    ", , , ( ) ."
  ],
  "abstract_text": [
    "<S> we present a quasi - linearly scaling , first order polynomial finite element method for the solution of the magnetostatic open boundary problem by splitting the magnetic scalar potential . </S>",
    "<S> the potential is determined by solving a dirichlet problem and evaluation of the single layer potential by a fast approximation technique based on fourier approximation of the kernel function . </S>",
    "<S> the latter approximation leads to a generalization of the well - known convolution theorem used in finite difference methods . we address it by a non - uniform fft approach . </S>",
    "<S> overall , our method scales @xmath0 for @xmath1 nodes and @xmath2 surface triangles . </S>",
    "<S> we confirm our approach by several numerical tests .    </S>",
    "<S> _ keywords _ : micromagnetics , scalar potential , stray field , non - uniform fast fourier transform , finite - element method </S>"
  ]
}
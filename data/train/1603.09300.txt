{
  "article_text": [
    "the _ international obfuscated c code contest _ ( see the wikipedia entry ) was a programming contest for the most creatively obfuscated c code , held annually between 1984 and 1996 , and thereafter in 1998 , 2000 , 2001 , 2004 , and 2006 .",
    "in many cases , the winning programmer did something simple in such an obscure but succinct way that it was hard for other ( human ) programmers to see how his / her code actually worked .    by _ contrast",
    "_ , our first interest herein is in programs which are , _ in a sense _ , _ easily _ seen to be correct , but which can__not _ _ be proved correct in pre - assigned , computably axiomatized , powerful , true theories * t*. a point is that , then , _ _",
    "un__verifiable programs need _ not _ be obfuscated !    our first theorem ( theorem  [ thm : exists - g - w - domain - two ] in section  [ main - result ] below ) entails : for _ any _ deterministic , multi - tape turing machine ( tm ) program @xmath0 , there will be an _",
    "easily seen equivalent _ such tm program @xmath1 _ almost ( i.e. , within small , linear factors ) as fast and succinct as @xmath0 _ , but this equivalence will _ not _ be provable in * t*.    a point of the just mentioned , small , linear factors is that the _ _",
    "un__provability is _ not _ based on some huge ( or at least non - linear ) growth in run - time and/or program size in passing from @xmath0 to @xmath1 .",
    "in fact we ll see in the proof of the first theorem that @xmath1 will be like @xmath0 except that @xmath1 , in effect , encapsulates @xmath0 in a top - level if - then - else with : 1 .",
    "@xmath0 being the else - part and 2 .",
    "the succinct , linear - time testable if - condition being easily seen never to come true ( but with this never coming true being _ _ un__provable in @xmath2 ) .    a motivated , concrete , special case , based on a remark in putnam @xcite , will be presented ( also in section  [ main - result ] below ) .",
    "as will be seen , the first theorem and its proof have some non - constructivity , and , with theorem  [ thm : no - g - for - phi ] in section  [ constructivity ] below , some of this non - constructivity is seen to be inherent .    considered next , in section  [ subtleties ] , is whether the just mentioned non - constructivity goes away for some acceptable programmming systems ( numberings ) . the answer ( theorem  [ thm : exists - a - g ] ) is affirmative , but for pleasantly _ subtle _ reasons spelled out in the section .",
    "this latter theorem has a number of corollaries ( corollaries  [ cor : t - not - prove - psi - eq - phi ] ,  [ cor : not - krt - and - u ] , and  [ cor : t - not - prove - eps ] ) regarding its acceptable programming system , and they provide some surprises and subtleties about proving its program properties , including in corollary  [ cor : not - krt - and - u ] , about universality and the presence of the composition control structure .",
    "section  [ subtleties ] makes up most of the paper . also within it ( in sections  [ univ ] and  [ comp ] )",
    "are presented a number of positive and negative surprises regarding verification of true program properties .    in section  [ univ ]",
    "theorems  [ thm : t - prove - one - u ] and  [ thm : t - not - prove - u - in - theta ] provide respective acceptable systems with contrasting surprises regarding proving universality in them .",
    "of course any acceptable system has infinitely many universal programs , but theorem  [ thm : t - prove - one - u ] provides an acceptable system in which exactly one of these universal programs is provably so .",
    "by contrast , theorem  [ thm : t - not - prove - u - in - theta ] provides a different acceptable system with _ no _ program which is _ provably _ universal .",
    "finally , in section  [ comp ] , the next and last theorem ( theorem  [ thm : t - prove - composition - not - equality ] ) , which is the most difficult to prove in the paper , also provides an acceptable system with some positive and negative surprises regarding verification of its true program properties : for this acceptable system , the existence of the control structure composition is provable for it , but anything about true i / o - program equivalence for syntactically unequal programs is not provable .",
    "let @xmath3 be the _ efficiently _ laid out and gdel - numbered acceptable programming system ( numbering ) from ( * ? ? ?",
    "* chapter  3 &  errata ) and which is based on deterministic _ multi - tape turing machines _",
    "( with base  two i / o).-argument partial computable functions : @xmath4 which are inter - compilable with the natural system @xmath3 .",
    "rogers @xcite characterized the acceptable systems as those with universality and for which kleene s s - m - n holds .",
    "this latter is more than enough to get ( not necessarily efficient ) recursion theorems in acceptable systems . ]",
    "its programs are named by all the numbers in @xmath5 .",
    "@xmath6 is the partial computable function @xmath4 computed by @xmath3-program ( number ) @xmath0 .",
    "the numerical naming just mentioned does _ not _ feature prime powers and factorization , but , instead , is a _ linear - time computable and invertible coding_. let @xmath7 be the corresponding step - counting blum complexity measure @xcite .",
    "@xmath8 is a _ base",
    "_ model for deterministic run time costs .",
    "s superscript is awkward when @xmath3 is employed in subscripts , so , from this point on , we will write @xmath3 as simply @xmath9 .    herein , we will use the linear - time computable and invertible pairing function @xmath10 from @xcite : the binary representation of @xmath11 is ( by definition ) an interleaving of the binary representations of @xmath12 and @xmath13 where we alternate @xmath12 s and @xmath13 s digits and start on the right with the least most significant @xmath13 digit .",
    "for example , @xmath14  since @xmath15 ( binary ) , @xmath16 ( binary ) , and @xmath17 ( binary ) .",
    "this function , clearly then , maps all the _ pairs _ of elements of @xmath18 1 - 1 , onto @xmath18 .",
    "we also employ this notation , based on iterating , @xmath10 , as in @xcite , to code also triples , quadruples ,  of elements of @xmath18 1 - 1 , onto @xmath18 : for all @xmath19 , and all @xmath20 .",
    "these functions also clearly satisfy the following    [ lem - pairing ]     1 .",
    "@xmath21 is odd implies @xmath22 is odd ; 2 .",
    "@xmath23 is monotonically increasing in each of its arguments ; and , 3 .   for all @xmath24 .",
    "for example , in the proof of theorem  [ thm : t - prove - composition - not - equality ] below , the just above lemma will see explicit and implicit application .",
    "@xmath25 is the class of functions : @xmath4 each computable by some @xmath9-program running within a @xmath7-time bound linear in the _ length _ of its base - two expressed argument .",
    "of course by means of the iterated @xmath10 function defined just above , we can and sometimes will speak of multi - argument functions as being ( or not being ) in @xmath25 .    for @xmath26",
    ", @xmath27 could be a numerically named program of @xmath9 or just a datum .",
    "we let @xmath28 the _ length _ of @xmath27 , where @xmath27 is written _ in binary_. we can write this length as @xmath29 , _ where _ @xmath30 turns @xmath31 into @xmath32 ; else , leaves unchanged.[multiblock footnote omitted ]    rogers @xcite uses the terms ` converges ' for computations which halt and provide output and ` diverges ' for those that do not .",
    "herein we use the respective notations ( due to albert meyer ) @xmath33 and @xmath34 in place of those terms of rogers .    from ( * ?",
    "? ? * lemma  3.14 ) , there are small positive @xmath35 and function @xmath36 such that , for all",
    "@xmath37 , @xmath38 and @xmath39    essentially from ( the @xmath40 case of ) ( * ? ? ?",
    "* theorem  4.8 ) , we have the following constructive , _ efficient _ , and _ parametrized _ version of _ kleene s _ 2nd ( not rogers ) recursion theorem ( * ? ? ?",
    "* page  214 ) .",
    "+ there are small positive @xmath41 and function @xmath42 such that , for all _ parameter values @xmath0 , tasks @xmath43 , inputs @xmath12 _ @xmath44 : @xmath45 and @xmath46 intuitively , above in  ( [ krt ] ) , on the left - hand side , the @xmath9-program _ @xmath47 has @xmath48 stored inside _ , and , on @xmath12 , it : _ makes a self - copy _ ( in linear - time ) , _ forms @xmath49 _ ( in linear - time ) , and _ runs task @xmath43 on this @xmath13_. from  ( [ complexity - task ] ) just above , for each @xmath48 , any super - linear cost of running @xmath9-program @xmath47 on its input is from the running of @xmath9-task @xmath43 on its linear - time producible input .",
    "let @xmath50 be a _",
    "computably axiomatized _ first order ( fo ) theory extending fo peano arithmetic @xmath51 @xcite  _ but with numerals represented in base  two to avoid size blow up from unary representation _ ( see ( * ? ? ?",
    "* page  29))[multiblock footnote omitted ]  _ and which does not prove ( standard model for @xmath52 @xcite ) falsehoods expressible in f.o .",
    "arithmetic_.    * t * could be , _ for example _ : fo peano arithmetic @xmath51 itself , the two - sorted fo peano arithmetic permitting quantifiers over numbers and sets of numbers @xcite ( a second order arithmetic ) , zermelo frankel set theory with choice ( * zfc * ) @xcite , * zfc * @xmath53 ones favorite large cardinal axiom @xcite , etc .",
    "if @xmath54 is an expression such as ` the partial function computed by @xmath9-program number @xmath0 is total ' and which is expressible in @xmath52 and where @xmath0 is a particular element of @xmath18 , we shall write @xmath55 to denote a typically _ naturally _ corresponding , fixed standard cwff ( closed well - formed formula ) of @xmath2 which ( semantically ) expresses @xmath54  and where @xmath0 is expressed as the corresponding numeral in base  two ( as indicated above ) . we have thatif @xmath56 is obtained from @xmath54 by substituting a numerical value @xmath27 , then @xmath57 can be algorithmically obtained from @xmath55 in linear - time in @xmath58 . _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    by ( * ? ? ?",
    "* theorem  3.6 & corollary  3.7 ) and their proofs , the running of a _ carefully crafted , time - bounded , @xmath9-universal simulation _ up through time @xmath59 takes time a little worse than exponential in @xmath60 .",
    "early complexity theory , e.g. , @xcite , provided delaying tricks to achieve polynomial time . from ( * ? ? ?",
    "* theorem  3.20 ) and its proof , the above mentioned carefully crafted , time - bounded universal simulation of any @xmath9-program can be _ uniformly delayed _ by a @xmath61 factor on the time - bound to run _ in @xmath25_.    the theorems of * t * form a _",
    "computably enumerable _ set , so we can / do fix a predicate logic complete automatic theorem prover ( such as resolution ) for * t*. this theorem prover can be time - bounded universally simulated  but , as in the just prior paragraph , that simulation can be _ delayed _ by a @xmath61 factor on the time - bound to , then , run _ in @xmath25_. let @xmath62 _ mean _ that _ a delayed by such a @xmath61 factor , linear - time computable , time - bounded universal simulation _ of the fixed automatic theorem prover proves @xmath55 from * t * _ within _ @xmath12 steps  that s _ linear - time in _ @xmath63 .",
    "let @xmath64 be the finite set @xmath65 with canonical index @xmath12 ( see , e.g. , @xcite ) .",
    "@xmath12 codes , for example , _ both _ how to list @xmath64 _ and _ how to know when the listing is done .",
    "herein , we can and do restrict our canonical indexing of finite sets to those of sets cardinality @xmath66 .",
    "we do that in linear - time thus .",
    "let @xmath31 be the code of @xmath67 , and , for set @xmath68 , let the code be @xmath69 .",
    "this coding ( suggested by a referee to replace our original one ) is linear - time codable / decodable ( and is 1 - 1 , and , unlike our original , is onto ) .",
    "[ thm : exists - g - w - domain - two ] there _ exists _ @xmath70 and _ small _ positive @xmath71 such that , for _ any _ @xmath0 , @xmath72 and _ there is _ a @xmath73 for which : @xmath74 for all @xmath75 , @xmath76 @xmath77 yet @xmath78    our proof below of theorem  [ thm : exists - g - w - domain - two ] , as will be seen , makes it _ easily transparent _ that @xmath79 .",
    "hence , @xmath1 is _ not obfuscated _ , yet its correctness ( at computing @xmath80 ) , as will also be seen , is unprovable in * t*. from the _ time and program size complexity _ content of the theorem , @xmath1 is nicely _ only slightly , linearly _ more complex than @xmath0 .",
    "furthermore , our proof is what is called in ( * ? ? ?",
    "* page  131 ) _ a rubber wall argument _ : we set up a rubber wall , i.e. , a _ potential _",
    "contradiction off of which to bounce , so that , were the resultant construction to veer into satisfaction of an undesired condition ( undesired here is the failure of  ( [ unprovable ] ) above ) , it bounces off the rubber wall ( i.e. , contradiction ) toward our goal , here  ( [ unprovable ] ) , instead .    _",
    "proof of theorem  [ thm : exists - g - w - domain - two ] . _    by _ two _ applications of _ linear - time _ : krt , if - then - else ( these from section  [ complexity - bounded ] above ) , and @xmath81 ( this from section  [ applied - logics ] above ) , from _ any _ @xmath9-program @xmath0 ,",
    "one _ can algorithmically find _ in linear - time ( in @xmath82 ) , programs @xmath83 and @xmath84 behaving as follows .",
    "for each @xmath12 , @xmath85 and @xmath86    let @xmath70 be such that , for each @xmath0 , @xmath87 .",
    "we consider cases regarding @xmath0 for the choice of the associated @xmath73 .",
    "case  ( 1 ) .",
    "domain@xmath88 is infinite .",
    "suppose for contradiction , for some @xmath12 , @xmath89 .",
    "since , by assumption , @xmath2 _ does not prove false such sentences _ , @xmath90 , and by  ( [ eqn : e1 ] ) above , for all @xmath91 , @xmath92 _ also _ @xmath93 , but , since domain@xmath88 is infinite , we have a contradiction",
    ". choose @xmath94 .",
    "then , trivially , again by  ( [ eqn : e1 ] ) , @xmath95 , but @xmath2 does not prove it",
    ".    case  ( 2 ) .",
    "domain@xmath88 is finite .",
    "suppose for contradiction , for some @xmath12 , @xmath96 .",
    "since , by assumption , @xmath2 _ does not prove false such sentences _ , @xmath97 , and by  ( [ eqn : e2 ] ) above , for all @xmath98 , @xmath99 also @xmath100 , making domain@xmath101 infinite , and , hence , domain@xmath88 is infinite , a contradiction .",
    "choose @xmath102 .",
    "then , trivially , again by  ( [ eqn : e2 ] ) , @xmath95 , but @xmath2 does not prove it .",
    "in each case , by @xmath103 and @xmath104 being linear - time ( hence , at most linear growth ) functions , @xmath105 , and by the complexity upper bounds  ( [ condefficienttoo ] ) and  ( [ complexity - task ] ) ( in section  [ complexity - bounded ] above ) as well as the assertion ( in section  [ applied - logics ] above ) of the linear - time ( and , hence , linear size ) cost of substituting numerals into formulas of @xmath52 , we have small positive @xmath106 such that the theorem s time complexity bound  ( [ one ] ) and it s program size bound  ( [ two ] ) above each hold .",
    "50 1em@xmath107theorem  [ thm : exists - g - w - domain - two ] = 0    next is the promised , motivated , concrete example .",
    "putnam @xcite notes that the typical inductive definitions of grammaticality ( i.e. , well - formedness ) for propositional logic formulas parallel the typical definitions of truth ( under any truth - value assignment to the propositional variables ) for such formulas , and that the first kind of inductive definition provides a _ short and feasible _ decision program for grammaticality .",
    "he goes on to say , though , that the other ways of providing _ short and feasible _ inductive definitions of such grammaticality which also parallel an inductive definition of truth are so similar as to constitute _ intrinsic _ grammars ( and semantics ) .",
    "let @xmath0 be one of these _ typical _ short and fast decision procedures for propositional calculus grammaticality expressed naturally and directly as a @xmath9-program .",
    "then by theorem  [ thm : exists - g - w - domain - two ] above and its proof also above , there is an obviously semantically equivalent @xmath9-program @xmath1 only slightly linearly more complex than @xmath0 in size and run time ( so it too is short and feasible ) ; @xmath1 also provides the same inductive definition of grammaticality as @xmath0 which , then , parallels the truth definition like @xmath0 does ( after all the else part of @xmath1 _ is _ @xmath0 and the if - part of @xmath1 never comes true ) ; but the unprovability ( in pre - assigned @xmath2 ) of the semantic equivalence of @xmath1 with @xmath0 makes @xmath1 a bit peculiar as an _ intrinsic _ grammar for propositional logic , providing a basis to doubt putnam s assertion .",
    "however , we do note that _ intensionally _",
    "@xcite @xmath1 is a bit unlike @xmath0  since it performs an always false ( quick ) test @xmath0 does nt .",
    "it s interesting to ask : can the condition @xmath72 in theorem  [ thm : exists - g - w - domain - two ] be improved to @xmath108 ?",
    "if so , it makes sense to replace a singleton set , @xmath109 , by just @xmath1 and use @xmath110 ( not the code of @xmath109 ) .",
    "anyhow , the answer to the question is , no ( see theorem  [ thm : no - g - for - phi ] below ) .",
    "before we present and prove this theorem , it is useful to have for its proof the unsurprising lemma ( lemma  [ lemma : pa - proves - re ] ) just below .",
    "[ lemma : pa - proves - re ] if @xmath111 , then @xmath112    _ proof of lemma  [ lemma : pa - proves - re ] . _",
    "the relation , in @xmath113 , that holds iff @xmath114 , where the steps are measured by the natural @xmath7 , is trivially computable ( a.k.a .",
    "recursive ) @xcite .",
    "suppose @xmath111 .",
    "then there is some @xmath59 such that @xmath115 . by gdel s lemma @xcite that recursive relations are numeralwise provably - representable in , e.g. , @xmath52 , @xmath116 . by existential generalization _ inside _",
    "@xmath52 , we have @xmath117 \\gg}}$ ] .",
    "hence , @xmath118 .",
    "50 1em@xmath107lemma  [ lemma : pa - proves - re ] = 0    the next theorem implies that , in theorem  [ thm : exists - g - w - domain - two ] above , the condition @xmath72 can_not _ be improved to @xmath108 ( or equivalent as discussed above ) .",
    "the proof of this next theorem ( theorem  [ thm : no - g - for - phi ] ) provides positive cases regarding proving true program properties in @xmath52 .",
    "[ thm : no - g - for - phi ] it is _ not _ the case that there exists computable @xmath119 such that , for any @xmath0 , for @xmath120 , @xmath121    _ proof of theorem  [ thm : no - g - for - phi ] .",
    "_ suppose for contradiction otherwise .",
    "suppose @xmath122 is a @xmath9-program for @xmath119 , i.e. , suppose @xmath123 .",
    "of course @xmath124 $ ] is partially computable , and , importantly , this is provable in @xmath52 .",
    "we sketch how we know the provability in @xmath52 .",
    "for example , one step in showing the provability is to explicitly construct a @xmath9 universal program @xmath125 so that its detailed correctness is ( trivially , albeit tediously ) provable in @xmath52 . in particular , @xmath126   \\gg}}.\\ ] ] for @xmath9 , the construction of a relatively efficient , but _ time - bounded variant _ of such a @xmath125 is outlined in the proof of ( * ? ? ? * theorem  3.6 ) .",
    "this construction can be altered to remove the time - boundedness and just get a suitable @xmath125 .",
    "another step would be to spell out a @xmath9-program @xmath127 for a computable function comp@xmath128 for computing a @xmath9-program for the composition of the partial functions computed by its @xmath9-program arguments as in the @xmath129 case of ( * ? ? ?",
    "* lemma  3.10 ) in that lemma  3.10 , we have , in effect , for the arbitrary @xmath130 case , for all @xmath131 , @xmath132 ] and its proof  where , again , @xmath52 proves correctness ( including comp@xmath133 is total ) .",
    "relevance of @xmath125 and @xmath127 : clearly we have , @xmath134 and the right - hand side of  ( [ u ] ) just above is a relevant composition and , then , can be further expanded employing @xmath127 .",
    ", we ll consider , among other things , some programming systems with provability subtleties regarding universality and/or composition .",
    "_ this _ composition , though , we be as in the @xmath135 case of ( * ? ? ?",
    "* lemma  3.10 ) ( see footnote  [ fn - compm ] just above ) . ] with @xmath125 and @xmath127 , then , we can explicitly compute a @xmath9-program for @xmath124 $ ] and prove it correct in @xmath52 .",
    "so , then , by the constructive kleene s second recursion theorem _ but without the parameter @xmath0 as above in section  [ complexity - bounded ] above _ , we have a ( self - referential ) @xmath136 such that , for any @xmath12 , @xmath137 below we ll refer to this parameter - free version of the above constructive kleene theorem as @xmath138 .",
    "then we have a @xmath9-program @xmath27 for the above function @xmath104 _ again with parameter @xmath0 completely omitted _ , and , with this @xmath27 representing in the language of @xmath52 this modified version of the function @xmath104 , @xmath138 is completely provable in @xmath52 .",
    "hence , by our remarks above about computing and proving correct a program for @xmath124 $ ] , we can explicitly compute a @xmath136 as in  ( [ eqn - fp ] ) and prove it correct in @xmath52 ; we have in particular , @xmath139    however , we do nt know enough about @xmath119 ( and @xmath122 ) to know whether we can prove @xmath119 s totality in @xmath52  including by representing @xmath119 as @xmath140 ; fortunately , we wo nt need that .",
    "we do know ( at least outside @xmath52 ) that @xmath119 is total ( since it s a consequence of @xmath119 s assumed computability ) .",
    "hence , we know ( at least outside @xmath52 ) that @xmath141 .",
    "since , from above , @xmath122 is a @xmath9-program for @xmath119 , we have that @xmath142 to some explicit numerical value @xmath143 .",
    "therefore , from lemma  [ lemma : pa - proves - re ] above , @xmath144 hence , by substitution of equals for equals and reflexivity of equals _ inside _ @xmath52 ,  ( [ pa - eqn - fp ] ) , and  ( [ eqn : converges ] ) , @xmath145 a contradiction to our beginning assumption  since @xmath2 extends @xmath52 .",
    "50 1em@xmath107theorem  [ thm : no - g - for - phi ] = 0      so far we have considered the natural , deterministic complexity theory relevant , acceptable system , @xmath9 . after we obtained theorem  [ thm : no - g - for - phi ] just above",
    " which shows a condition in theorem  [ thm : exists - g - w - domain - two ] further above ( in section  [ main - result ] ) could nt be improved , we wondered if there were some ( possibly not quite so natural but , perhaps , still acceptable ) systems @xmath146 for which we do nt have the just above theorem  [ thm : no - g - for - phi ] .",
    "we initially obtained the first part of the next theorem ( theorem  [ thm : exists - a - g ] ) which provides such a @xmath146 , _ but _ we did nt , then , know whether our @xmath146 was acceptable .",
    "we subsequently obtained theorem  [ thm : exists - a - g ] s furthermore clause providing our @xmath146 s acceptability _ together with a surprise we did nt expect_. we explain the surprise after the statement of theorem  [ thm : exists - a - g ] and before its proof .",
    "[ thm : exists - a - g ] there is a programming system @xmath146 and a computable @xmath119 such that , for all @xmath0 , @xmath147 , yet , for @xmath120 , @xmath148 .",
    "furthermore , @xmath146 is acceptable , and , surprisingly , @xmath149.\\ ] ]    how can  ( [ surprise ] ) be true  in the light of the rest of the just above theorem ( theorem  [ thm : exists - a - g ] ) ?",
    "it seems to contradict theorem  [ thm : no - g - for - phi ] further above .",
    "the answer is that , in the proof just below of the just above theorem ( theorem  [ thm : exists - a - g ] ) , the needed @xmath146 is , in effect , _ defined by _ an unusual @xmath9-program @xmath150 in  ( [ eqn : obfuc - e - psi ] , [ eqn : obfuc - e ] ) below , and , _ in the language of _",
    "@xmath52 , for formulating ( un)provability _ about _ @xmath146 in @xmath2 , @xmath146 is , of course , _ represented by its defining _  @xmath150 . )",
    "is @xcite . ]",
    "@xmath9 itself , on the other hand , can be and is understood to be naturally ( not unusually ) represented in the language of @xmath52 . in section  [ applied - logics ] above , where , in effect , the particular example @xmath151 is employed . ]    to aid us in some proofs below , including that of the above theorem  [ thm : exists - a - g ] , we present the following lemma ( lemma  [ lemma : constructive - padding ] ) , where the recursion theorem part of its proof is from h.  friedman  @xcite .    [ lemma : constructive - padding ] suppose @xmath152 is any acceptable programming system such that @xmath2 proves @xmath152 s acceptability .    then , there is a total computable function @xmath119 such that for any @xmath0 , @xmath153 , but @xmath154 .    furthermore , this padding - once result is , then , expressible and provable in @xmath2 .",
    "_ proof of lemma  [ lemma : constructive - padding ] .",
    "_ assume the hypothesis , i.e. , that @xmath2 proves @xmath152 s acceptability .",
    "then @xmath2 proves kleene s s - m - n theorem , so we obtain that @xmath2 proves the parameterized second kleene recursion theorem ( as above in section  [ complexity - bounded ] , but with witnessing functions not necessarily in @xmath25 ) .    then , from this kleene theorem , we have a computable function @xmath155 such that , for each @xmath156 , @xmath157 then , let @xmath119 be defined as follows .",
    "@xmath158 we consider two cases .",
    "case one : :    @xmath159 .",
    "then , from  ( [ eqn : padding - f ] ) ,    @xmath160 , and , from  ( [ eqn : padding - g ] ) ,    @xmath161 .",
    "case two : :    @xmath162 .",
    "then , from  ( [ eqn : padding - f ] ) ,    @xmath163 , which , by case  two ,    @xmath164 .",
    "from  ( [ eqn : padding - g ] ) ,    @xmath165 .    by this case - analysis",
    ", @xmath119 satisfies padding - once .",
    "the above is so simple as to be provable in @xmath2  as needed .    50 1em@xmath107lemma  [ lemma : constructive - padding ] = 0    _ proof of theorem  [ thm : exists - a - g ] .",
    "_ by kleene s second recursion theorem ( again without parameter ) , there is a ( self - referential ) @xmath9-program @xmath150 and an associated @xmath146 both such that , for each @xmath156 , @xmath166 @xmath167\\gg;\\cr      { \\varphi}_{p}(x ) , & \\mbox{otherwise}. \\end{cases}\\ ] ] n.b .",
    "the mentions of @xmath146 in  ( [ eqn : obfuc - e ] ) just above with variable subscripts @xmath168 should be understood , employing @xmath146 s definition  ( [ eqn : obfuc - e - psi ] ) above , to be @xmath169 , respectively .",
    "[ claim : t - not - prove - eq ] @xmath170\\gg$ ] .",
    "_ proof of claim  [ claim : t - not - prove - eq ] . _",
    "suppose for contradiction otherwise .",
    "then there exists an @xmath171 such that @xmath172\\gg$ ] .",
    "however , then , by  ( [ eqn : obfuc - e - psi ] , [ eqn : obfuc - e ] ) above , we have @xmath173 $ ] , and thus @xmath174 $ ] ; therefore , @xmath2 has proven a sentence of first order arithmetic which is false in the standard model , a contradiction .    50 1em@xmath107claim  [ claim : t - not - prove - eq ] = 0    [ claim : psi - eq - phi ] @xmath175 $ ] ; hence , @xmath146 is acceptable .",
    "_ proof of claim  [ claim : psi - eq - phi ] .",
    "_ by claim  [ claim : t - not - prove - eq ] , the first clause in ( [ eqn : obfuc - e ] ) above is false for each @xmath156 .",
    "therefore , by  ( [ eqn : obfuc - e - psi ] , [ eqn : obfuc - e ] ) above , @xmath176 $ ] ; hence , @xmath175 $ ]  making @xmath146 acceptable too .",
    "50 1em@xmath107claim  [ claim : psi - eq - phi ] = 0    [ claim : comp - g - exists ] there is a computable @xmath119 such that , for all @xmath0 , @xmath153 , @xmath147 , and , for @xmath177 , @xmath178    _ proof of claim  [ claim : comp - g - exists ] . _",
    "the acceptability of @xmath9 is provable in @xmath52 , hence , in @xmath2 . by lemma  [ lemma : constructive - padding ]",
    ", there exists a computable @xmath119 such that @xmath179 $ ] . by claim  [ claim : psi - eq - phi ] , @xmath180 ; thus , for this _ same _ @xmath119 , @xmath181 $ ] .",
    "suppose arbitrary @xmath0 is given .",
    "let @xmath120 .",
    "suppose for contradiction @xmath182 . clearly by gdel s lemma ( employed in the proof of lemma  [ lemma : pa - proves - re ] above ) ,",
    "@xmath183 . then , by this and existential generalization in @xmath2 , @xmath184\\gg$ ] , a contradiction to claim  [ claim : t - not - prove - eq ] above .",
    "50 1em@xmath107claim  [ claim : comp - g - exists ] = 0    50 1em@xmath107theorem  [ thm : exists - a - g ] = 0    for the next three corollaries ( corollaries  [ cor : t - not - prove - psi - eq - phi ] ,  [ cor : not - krt - and - u ] , and  [ cor : t - not - prove - eps ] ) , the mentioned @xmath146 is that from theorem  [ thm : exists - a - g ] and its proof , including  ( [ eqn : obfuc - e - psi ] , [ eqn : obfuc - e ] ) above .",
    "[ cor : t - not - prove - psi - eq - phi ] @xmath180 , but @xmath185 .",
    "_ proof of corollary  [ cor : t - not - prove - psi - eq - phi ] .",
    "_ @xmath180 is from theorem  [ thm : exists - a - g ] above .",
    "suppose for contradiction @xmath186 .",
    "then , from this and the proof of theorem  [ thm : no - g - for - phi ] above , one obtains a theorem  [ thm : no - g - for - phi ] _ but _ with @xmath146 replacing @xmath9 .",
    "this contradicts theorem  [ thm : exists - a - g ] above ( which is also about @xmath146 ) .",
    "50 1em@xmath107corollary  [ cor : t - not - prove - psi - eq - phi ] = 0    to understand the corollary ( corollary  [ cor : not - krt - and - u ] ) and its proof just below , it may be useful to review the roles of @xmath9-programs @xmath187 in the proof of theorem  [ thm : no - g - for - phi ] above .",
    "this corollary says there can be _ no _ analog of _ all three _ of these programs for @xmath146 ( in place of @xmath9 ) .",
    "[ cor : not - krt - and - u ] there are _ no _ @xmath187 such that _ simultaneously : _ @xmath188 @xmath189{roy - cas : b:94 } ( see footnote~\\ref{fn - compm } further above ) . } , \\mbox{\\&}\\ ] ] @xmath190    _ proof of corollary  [ cor : not - krt - and - u ] .",
    "_ suppose for contradiction otherwise .",
    "then , enough is provable in @xmath2 _ about _",
    "@xmath146 to make theorem  [ thm : no - g - for - phi ] above _ also _ provable for @xmath146  in place of @xmath9 .",
    "this contradicts theorem  [ thm : exists - a - g ] about @xmath146 .",
    "50 1em@xmath107corollary  [ cor : not - krt - and - u ] = 0    regarding corollary  [ cor : not - krt - and - u ] just above , it is well known that , from @xcite , kleene s s - m - n can be constructed out of a program @xmath127 for composition and , then , kleene s proof of @xmath138 can be done from s - m - n ; so , it might appear that  ( [ third - one ] ) just above could be eliminated .",
    "this is actually open .",
    "the reason is that , while each of these just mentioned constructions requires some easily existing auxiliary @xmath146-programs , for corollary  [ cor : not - krt - and - u ] we d ostensibly also need these auxiliary @xmath146-programs to be @xmath2-provably correct .-",
    "programs @xmath191 such that @xmath192 marcoux s more efficient solution @xcite employs three such auxiliary @xmath146-programs . ]",
    "the @xmath2-provable correctness is the hard part .",
    "[ cor : t - not - prove - eps ] @xmath193 is acceptable@xmath194 .",
    "_ proof of corollary  [ cor : t - not - prove - eps ] . _ assume for contradiction otherwise .",
    "then , by lemma  [ lemma : constructive - padding ] above , @xmath195\\gg$ ] .    from this we have , @xmath196\\gg$ ] , a contradiction to claim  [ claim : t - not - prove - eq ] above .    50 1em@xmath107corollary  [ cor : t - not - prove - eps ] = 0      the next two theorems herein ( theorems  [ thm : t - prove - one - u ] and  [ thm : t - not - prove - u - in - theta ] ) provide two more acceptable programming systems , @xmath197 , respectively , each defined ( as was @xmath146 above ) by respective , unusual @xmath9-programs .",
    "the first of these theorems ( theorem  [ thm : t - prove - one - u ] ) provides a surprise , part positive , part negative , regarding proving _ in _ @xmath2 that _ universality _ holds for @xmath198 .",
    "the contrast between these last two theorems is also interesting . of course ,",
    "since each of @xmath197 is acceptable , universality holds for each of them ( at least outside @xmath2 ) .",
    "below , for partial functions @xmath199 , @xmath200 denotes the _ range _ of @xmath199 .",
    "[ thm : t - prove - one - u ] there exists an acceptable programming system @xmath198 and an @xmath150 such that @xmath201 is universal for @xmath202 , yet , surprisingly , for each @xmath0 , @xmath203 of course , in @xmath198 , there are infinitely many universal programs , but _",
    "exactly one _ provably so in @xmath2 .",
    "furthermore , @xmath198 turns out to be @xmath9 .",
    "_ proof of theorem  [ thm : t - prove - one - u ] . _",
    "the kleene second recursion theorem provides a @xmath9-program @xmath150 and an associated @xmath198 both such that , for each @xmath156 , @xmath204 @xmath205\\gg];\\cr { \\varphi}_p(x ) , & \\mbox{otherwise}. \\end{cases}\\ ] ]    of course , since @xmath138 for @xmath9 is constructively provable in @xmath52 , we can get the numeral for @xmath150 inside @xmath52 as well as the universally quantified equation just above for the value of @xmath206 by cases .",
    "[ claim : t - not - prove - for - eta]@xmath207 \\gg$ ] .",
    "_ proof of claim  [ claim : t - not - prove - for - eta ] . _ assume for contradiction that @xmath208 \\gg}}.\\ ] ] let @xmath171 be the minimum number of steps in any such proof . since @xmath2 does not prove false sentences of @xmath52 and ( [ not - false ] ) , we have @xmath209.\\ ] ] then , for @xmath210 , @xmath211 .",
    "clearly , @xmath212 , and @xmath213 has infinite range .",
    "furthermore , @xmath214 $ ] ; therefore , @xmath215 has finite range@xmath216 $ ] , and , thus , there is no @xmath198-program whose code number is not @xmath150 whose computed partial function is equal to @xmath213 . furthermore , @xmath217 $ ] , thus there are no two distinct programs that compute the same partial function , a contradiction to  ( [ eqn : true ] ) .",
    "50 1em@xmath107claim  [ claim : t - not - prove - for - eta ] = 0    [ claim : eta - eq - phi-2 ] @xmath218 $ ] ; hence , @xmath198 is acceptable .",
    "_ proof of claim  [ claim : eta - eq - phi-2 ] .",
    "_ by claim  [ claim : t - not - prove - for - eta ] , the if clause of  ( [ eqn : obfuc - e - prime ] ) is always false , hence , by  ( [ eqn : obfuc - e - eta ] , [ eqn : obfuc - e - prime ] ) , @xmath219 $ ] .",
    "50 1em@xmath107claim  [ claim : eta - eq - phi-2 ] = 0    [ claim : t - not - prove - equiv - in - eta-2 ] there does not exist @xmath220 such that @xmath221 , and @xmath222 .",
    "_ proof of claim  [ claim : t - not - prove - equiv - in - eta-2 ] .",
    "_ suppose for contradiction otherwise .",
    "then , by gdel s lemma followed by existential generalization , the latter in @xmath2 , we obtain a contradiction to claim  [ claim : t - not - prove - for - eta ] .",
    "50 1em@xmath107claim  [ claim : t - not - prove - equiv - in - eta-2 ] = 0    [ claim : t - prove - e - u - in - eta ] @xmath201 is universal for @xmath202 .",
    "_ proof of claim  [ claim : t - prove - e - u - in - eta ] .",
    "_ we need _ not _ prove in @xmath52 that @xmath198 is a programming system for the 1-argument partial computable functions .",
    "instead , it suffices for us to argue only that @xmath223 \\gg}}.\\ ] ] then , from  ( [ eqn : obfuc - e - eta ] ) above , the definition of @xmath198 by @xmath150 in the @xmath9-system , applied to each side of  ( [ eqn : eta.univ ] ) , it , then , suffices to show that @xmath224 \\gg}}.\\ ] ] by the otherwise clause of  ( [ eqn : obfuc - e - eta ] , [ eqn : obfuc - e - prime ] ) above , applied to @xmath225 , where @xmath156 are variables ( not numerals ) , we get its provable in @xmath52 value to be @xmath226  again with @xmath156 variables .",
    "this together with universal generalization _ inside _",
    "@xmath52 on the variables @xmath156 , verifies _ in _ @xmath52 the sufficient  ( [ eqn : phitm.univ ] ) just above .    50 1em@xmath107claim  [ claim : t - prove - e - u - in - eta ] = 0    [ claim : t - prove - one - u ] for all @xmath227 , @xmath228 is universal in @xmath202 .",
    "_ proof of claim  [ claim : t - prove - one - u ] . _ immediate from claims [ claim : t - not - prove - equiv - in - eta-2 ] and [ claim : t - prove - e - u - in - eta ] .",
    "50 1em@xmath107claim  [ claim : t - prove - one - u ] = 0    50 1em@xmath107theorem  [ thm : t - prove - one - u ] = 0    [ thm : t - not - prove - u - in - theta ] there exists an acceptable programming system @xmath229 such that , for each @xmath125 , @xmath230 of course , in @xmath229 , there are infinitely many universal programs , but _",
    "none _ are provably so in @xmath2 .",
    "furthermore , @xmath229 turns out to be @xmath9 .",
    "_ proof of theorem  [ thm : t - not - prove - u - in - theta ] .",
    "_ kleene s recursion theorem provides a @xmath9-program @xmath150 and an associated @xmath229 both such that , for each @xmath156 , @xmath231 @xmath232\\gg ; \\cr { \\varphi}_p(x ) ,     & \\mbox{otherwise}. \\end{cases}\\ ] ] assume for contradiction that @xmath233 is universal in @xmath234\\gg$ ] .",
    "then , since @xmath2 does not prove false things of this sort , universality holds in @xmath229 .",
    "let @xmath171 be the smallest number of steps in any proof as is assumed just above to exist .    then , since @xmath235 $ ] , we have , @xmath236 $ ] . by contrast , @xmath237 .",
    "then there is no @xmath0 such that @xmath238 ; therefore , there can not be any universal programs for @xmath229 , a contradiction .",
    "therefore , @xmath239 is universal in @xmath240\\gg$ ] , and , thus , @xmath241 $ ] .",
    "this makes @xmath229 acceptable .",
    "furthermore , it is not the case that @xmath242 is universal in @xmath243 $ ] , since , if @xmath2 proved such a thing , it would immediately follow from existential generalization _ in _ @xmath2 that @xmath244 is universal in @xmath234\\gg$ ] is provable in @xmath2 , which has already been shown not to be provable by @xmath2 .",
    "50 1em@xmath107theorem  [ thm : t - not - prove - u - in - theta ] = 0    we expect that analogs of theorems  [ thm : t - prove - one - u ] and  [ thm : t - not - prove - u - in - theta ] just above can be obtained for other properties besides universality . in the next section",
    "we have an analog for composition .      the main result of this section ( theorem  [ thm : t - prove - composition - not - equality ] below )",
    ": there is an acceptable programming system ( equivalent to @xmath9 ) such that @xmath2 can prove there exists a specific program which witnesses composition in that system , but @xmath2 is _ still _ unable to prove that there exist two distinct , equivalent programs in that system .",
    "it is the last and hardest to prove result in the present paper .    in the proof of this theorem , we require provable in @xmath52 _ infinite _ padding for just the @xmath9-system  a stronger form of padding than provided by lemma  [ lemma : constructive - padding ] , though this _",
    "infinite _ padding function is only valid for @xmath9 , and thus would not have been usable for corollary  [ cor : t - not - prove - eps ] . as such ,",
    "we introduce the following function @xmath245 , which uses the concepts from ( * ? ? ?",
    "* chapter  3 but as modified in the associated errata ) of normal and abnormal code numbers of @xmath9-programs .",
    "herein we briefly discuss these concepts .",
    "a program in the @xmath9-system is defined as a _",
    "non_-empty sequence of instructions for a @xmath27-tape turing machine , where all these instructions have the same @xmath27 .",
    "if a given number is not directly the code for such a sequence , it is defined to be an _",
    "abnormal _ code ; otherwise , it is a _",
    "normal _ code .",
    "the process of checking a given number to see if it is normal or abnormal is computable . by convention ,",
    "abnormal codes are treated as each encoding the same turing machine , and thus all compute the same function .",
    "it is a consequence of the encoding used for the @xmath9-system that all normal codes are divisible by eight ; thus , there are infinitely many even abnormal codes  for instance , anything divisible by two but not eight is an even abnormal code .",
    "@xmath246    [ claim : pad - works ] for any input @xmath0 , the output of @xmath247 is the code number of an even program @xmath1 such that @xmath248 , @xmath79 , and @xmath52 proves this .",
    "_ proof of claim  [ claim : pad - works ] .",
    "_ as above , determining whether a given number is a normal code is algorithmic .",
    "furthermore , as there are infinitely many even abnormal codes , finding the next such is straightforward .",
    "thus , the first clause in the definition of @xmath245 is computably checkable and , if true , @xmath245 outputs an even number greater than the input , such that both are abnormal codes . as noted above , each abnormal code",
    "is defined ( for the @xmath9-system ) to compute the same function as each other abnormal code , and , hence , the part of the claim not about @xmath52 holds for such @xmath0 .",
    "if the second clause holds , then converting @xmath0 into a coded sequence of instructions is simple , repeating the last instruction is also simple , and converting that sequence back into a code number is once again simple . by @xcite ,",
    "when there are multiple instructions that apply in a given state , the _ first _ one is the one that applies , thus repeating an instruction can have no impact on the ( possibly partial ) function computed by a @xmath9 program ; thus , @xmath249 in this case .",
    "furthermore , as noted above , all normal instruction codes _ must _ be even ; thus , @xmath247 is even in this case as well .",
    "therefore , the part of the claim not about @xmath52 holds .",
    "the proof so far is so simple that it can be carried out in @xmath52 straightforwardly albeit tediously .",
    "50 1em@xmath107claim  [ claim : pad - works ] = 0    in our proof of the next theorem ( theorem  [ thm : t - prove - composition - not - equality ] ) it is convenient to employ the following lemma ( lemma  [ mixed - rt ] ) , a new recursion theorem which mixes an @xmath250-ary ( non - parameter ) version of the original kleene recursion theorem ( * ? ?",
    "* page  214 ) with the delayed recursion theorem ( * ? ? ?",
    "* theorem  1 ) .",
    "[ mixed - rt ] suppose @xmath251 .",
    "suppose @xmath252 are partial computable .    then there are @xmath253 such that @xmath254 is total , and , for each @xmath255 with @xmath256 , for all @xmath257 , @xmath258 and @xmath259    in lemma  [ mixed - rt ] just above , ( [ nkrt - part ] ) expresses the @xmath250-ary kleene recursion theorem part , and ( [ delayed - part ] ) expresses the delayed recursion theorem part .",
    "[ thm : t - prove - composition - not - equality ] there is an acceptable programming system @xmath260 and a @xmath261 such that @xmath262 is a witness to composition in @xmath263 , yet @xmath264\\gg$ ] .",
    "furthermore , @xmath260 turns out to be @xmath9 .",
    "_ proof of theorem  [ thm : t - prove - composition - not - equality ] .",
    "_ we apply the @xmath265 case of lemma  [ mixed - rt ] just above to obtain programs @xmath266 behaving as below in ( [ eqn : obfuc - comp - psi ] , [ eqn : obfuc - comp - c ] , [ eqn : obfuc - comp - w ] , [ eqn : obfuc - comp - w ] ) , respectively . here",
    "does not and does not need to make full use of all the self / other reference available in this lemma . ] the @xmath260 we need for the theorem is defined in terms of this @xmath150 thus . for each @xmath156 ,",
    "@xmath267 for convenience below , in describing the behavior of @xmath266 , in many places we ll write this @xmath260 instead of @xmath268 .    in the following formula we let @xmath269 be the @xmath250th prime , where @xmath270 , @xmath271 , @xmath272  .",
    "importantly to the combinatorics of the diagonalization below in this proof , any odd prime raised to a power is odd , and we noted before the statement of the present theorem being proved ( theorem  [ thm : t - prove - composition - not - equality ] ) that our particular infinite padding function @xmath245 always outputs even numbers .    for each @xmath156 , @xmath273 { \\ \\vee \\ } \\cr & { \\hspace*{1em}}{\\mbox{{\\bf t}}}\\not{\\vdash}_x \\ \\ll ( \\exists r , t \\not= r)[\\zeta_r = \\zeta_t]\\gg;\\cr { { \\rm prime } } ( p+1)^x , & \\mbox{if } p \\not= w { \\ \\wedge \\ } ( \\forall y",
    "< p)[{\\varphi}_w(y){\\mathclose{\\hbox{$\\downarrow$}}}\\not= p ] { \\ \\wedge \\ } \\cr & { \\hspace*{1em}}{\\mbox{{\\bf t}}}{\\vdash}_x \\ \\ll ( \\exists r , t \\not= r)[\\zeta_r = \\zeta_t]\\gg;\\cr { \\mathclose{\\hbox{$\\uparrow$ } } } , & \\mbox{otherwise}. \\end{cases}\\ ] ] @xmath9-program @xmath127 , spelled out just below , outputs a @xmath9-program which computes the composition of two input @xmath260-programs .",
    "it is employed by @xmath9-program @xmath274 further below .    for each @xmath275 , @xmath276 @xmath9-program @xmath274 , spelled out next , rewrites each output of @xmath9-program @xmath127 above so that the output of @xmath274 computes the same partial function as this output of @xmath127 , but has combinatorially useful numeric properties regarding evenness .    for each @xmath275 ,",
    "@xmath277 $ , $ \\cr{\\hspace*{1em}}[$if $ { \\langle p , q \\rangle } > 0 $ , then $ v > { \\varphi}_{w'}({\\langle p , q \\rangle}-1 ) \\mbox { which } { \\mathclose{\\hbox{$\\downarrow$}}}]$ , $ \\cr { \\hspace*{1em}}$and , for $ { \\langle r , s \\rangle } = v , \\cr   { \\hspace*{1em}}(\\neg\\exists x <",
    "{ \\langle p , q \\rangle})[{\\varphi}_{w'}(x ) = r { \\ \\vee \\ } { \\varphi}_{w'}(x ) = s];\\cr { \\mathclose{\\hbox{$\\uparrow$ } } } , \\mbox{if no such $ v$ exists.}\\cr \\end{cases}\\ ] ]    as we ll see , @xmath9-program @xmath261 , spelled out next , is such that @xmath278  ( claim  [ claim : psi_w_is_phitm_w ] below ) , _ and _ it computes the @xmath135 case control structure of composition from ( * ? ? ?",
    "* lemma  3.10 ) ( see footnote  [ fn - compm ] above )  but for the @xmath260-system  ( claim  [ claim : pa - proves - c - witness - composition ] ) . this @xmath261 rewrites the output of @xmath274 above so that the resultant @xmath260-system composition will have strong associativity properties _ at the @xmath260-program code number level _ :",
    "let @xmath279 ; then for all @xmath260-programs @xmath280 , the @xmath260-program number @xmath281 _ will be the same @xmath260-program number as _ @xmath282 .",
    "this strong property is , in effect , further developed in claims  [ claim : psi_chain_x_is_psi_x ] through  [ claim : partial - unchain - is - ok ] , these claims put limits on the nature of _ _",
    "un__equal @xmath260-program numbers _ in _",
    "@xmath283  so they can not interfere with the unprovability part of theorem  [ thm : t - prove - composition - not - equality ] , and , then , they are used in proving the difficult to prove claim  [ claim : t - proves - equality - implies - infinitely - not - equal ] .",
    "this latter claim provides most of the desired unprovability  with claim  [ claim : t - not - proves - equality ] finishing it off .    for each @xmath275 , @xmath284",
    "{ \\ \\wedge \\ } \\cr & { \\hspace*{1em } } ( \\exists { \\langle r , s \\rangle } < q)[{\\varphi}_w({\\langle r , s \\rangle } ) = q],\\cr & { \\hspace*{1em } } \\mbox{then select minimum such $ s$}\\cr & { \\hspace*{1em}}\\mbox{and , then , select the minimum $ r$}\\cr & { \\hspace*{1em}}\\mbox{corresponding to this $ s$};\\cr { \\varphi}_{w'}({\\langle p , q \\rangle } ) , & \\mbox{if } ( \\forall { \\langle r , s \\rangle } < q)[{\\varphi}_w({\\langle r , s",
    "\\rangle}){\\mathclose{\\hbox{$\\downarrow$}}}\\not= q];\\cr { \\mathclose{\\hbox{$\\uparrow$ } } } , & \\mbox{otherwise}.\\cr \\end{cases}\\ ] ]    [ claim : c - total ] @xmath52 proves @xmath285 is total@xmath286 .",
    "_ proof of claim  [ claim : c - total ] . _ in general proofs of recursion theorems , especially including lemma [ mixed - rt ] above , are so simple that their proofs can be carried out in @xmath52 ( albeit tediously ) .",
    "50 1em@xmath107claim  [ claim : c - total ] = 0    [ claim : w-mono - increasing ] for all @xmath287 , if @xmath288 , then @xmath289 .",
    "_ proof of claim  [ claim : w-mono - increasing ] .",
    "_ this follows directly from ( [ eqn : obfuc - comp - w ] ) .",
    "50 1em@xmath107claim  [ claim : w-mono - increasing ] = 0    [ claim : w-total ] @xmath290 is total , and @xmath52 proves that .",
    "_ proof of claim  [ claim : w-total ] .",
    "_ assume for induction that for arbitrarily - fixed @xmath291 , for all @xmath292 , we have @xmath293 . by claim  [ claim : c - total ] , @xmath294 .",
    "by claim  [ claim : pad - works ] the output of @xmath245 is always even and greater than the input .",
    "thus , repeatedly applying @xmath245 to @xmath295 will result in @xmath296 having an even value , @xmath297 , @xmath298 , @xmath299 , and @xmath300 .",
    "furthermore , by the induction assumption , [ if @xmath301 , then @xmath302 , and padding @xmath303 until @xmath304 is certainly possible .",
    "lastly , by the induction assumption , checking whether for @xmath305 there does or does not @xmath306 $ ] is algorithmically testable .",
    "thus , by induction , @xmath290 is total .",
    "the above inductive proof is accessible to @xmath52 , thus @xmath52 proves it .",
    "50 1em@xmath107claim  [ claim : w-total ] = 0    [ claim : range - w - subset - range - w ] @xmath307 .",
    "furthermore , @xmath52 proves this .",
    "_ proof of claim  [ claim : range - w - subset - range - w ] .",
    "_ for each input @xmath12 , exactly one of the three clauses of ( [ eqn : obfuc - comp - w ] ) must hold .",
    "if the first clause holds , then whatever value @xmath308 has must be a value that was in the range of @xmath309 on some other input ; by implicit application of lemma  [ lem - pairing ] , this recursion must bottom out at some value , and that value must come from some other clause .",
    "if the second clause holds , then @xmath310 , and thus is a value in the range of @xmath290 .",
    "lastly , if the third clause holds , then @xmath311 , and no value is added to the range of @xmath309 .",
    "thus , all values in the range of @xmath309 have some @xmath12 such that the second clause of ( [ eqn : obfuc - comp - w ] ) holds for @xmath308 , and therefore , the range of @xmath309 is a ( potentially proper ) subset of the range of @xmath290 .",
    "@xmath52 can handle the preceding argument .",
    "50 1em@xmath107claim  [ claim : range - w - subset - range - w ] = 0    [ claim : range - w - checkable - below - q - is - enough ] if @xmath312 , then @xmath313 $ ] .",
    "furthermore , @xmath52 proves this .",
    "_ proof of claim  [ claim : range - w - checkable - below - q - is - enough ] . _",
    "fix arbitrary q , assume that @xmath312 . per the _ proof _ of claim  [ claim : range - w - subset - range - w ] and",
    "the second clause of ( [ eqn : obfuc - comp - w ] ) , there then exists @xmath12 such that @xmath314 . by claims  [ claim : w-mono - increasing ] and  [ claim : w-total ] , for @xmath12 such that @xmath315",
    ", it must be the case that @xmath316 . by  ( [ eqn : obfuc - comp - w ] ) ,",
    "thus , @xmath318 $ ] ; as this follows from the assumption that @xmath312 , it therefore follows that if @xmath319 , @xmath318 $ ] .",
    "this proves the claim except for the part about @xmath52 .",
    "lastly , @xmath52 can handle the just prior reasoning .",
    "50 1em@xmath107claim  [ claim : range - w - checkable - below - q - is - enough ] = 0    [ claim : s_not_in_range_phitm_w ] for all @xmath0 , if @xmath320 $ ] , then the minimum such @xmath321 is _ not _ in the range of @xmath309 .",
    "_ proof of claim  [ claim : s_not_in_range_phitm_w ] . _",
    "assume by way of contradiction otherwise .",
    "fix the least counterexample @xmath0 to the claim , and fix the minimum @xmath321 corresponding to that @xmath0 . by the assumption by way of contradiction ,",
    "@xmath322 $ ] .",
    "fix the minimum such @xmath323 and the corresponding @xmath324 such that @xmath325 is minimum . by claim  [ claim : range - w - checkable - below - q - is - enough ] , @xmath326 . by the first clause of ( [ eqn : obfuc - comp - w ] ) , @xmath327 .",
    "since @xmath321 is minimum as indicated above and @xmath328 ( by lemma  [ lem - pairing ] ) , it follows that @xmath329 .",
    "case one : :    the first clause of ( [ eqn : obfuc - comp - w ] ) holds for input    @xmath330 .",
    "then @xmath323 is also a counterexample to    claim  [ claim : s_not_in_range_phitm_w ] , which , since    @xmath331 , contradicts @xmath0 s minimality .",
    "case two : :    the second clause of ( [ eqn : obfuc - comp - w ] ) holds for input    @xmath330 .",
    "then    @xmath332    then , by ( [ eqn : obfuc - comp - w ] ) , it follows that    @xmath333 and thus , by substitution , it follows    that @xmath334 ; this contradicts    @xmath335 case three : :    the third clause of ( [ eqn : obfuc - comp - w ] ) holds for input    @xmath330 ;    this contradicts    @xmath336 .",
    "all cases lead to a contradiction ; therefore , the claim holds .",
    "50 1em@xmath107claim  [ claim : s_not_in_range_phitm_w ] = 0    [ claim : w - total ] @xmath309 is total ; furthermore , @xmath52 proves this .",
    "_ proof of claim  [ claim : w - total ] .",
    "_ assume for induction that for arbitrarily - fixed @xmath291 , for all @xmath292 , @xmath337 .",
    "it follows from inequalities about pairing ( lemma  [ lem - pairing ] ) and the induction assumption that @xmath338 $ ] .",
    "thus , for input @xmath291 , the first clause of ( [ eqn : obfuc - comp - w ] ) holds if @xmath339 $ ] and the second clause of ( [ eqn : obfuc - comp - w ] ) holds if @xmath340 $ ] ; thus , the third clause of ( [ eqn : obfuc - comp - w ] ) does not hold for input @xmath291 .    if the second clause of ( [ eqn : obfuc - comp - w ] ) holds for input @xmath291 , then by claim  [ claim : w-total ] , @xmath341 .    if the first clause of ( [ eqn : obfuc - comp - w ] ) holds for input @xmath291 , then @xmath342 where @xmath343 , @xmath344 , @xmath321 is minimum such that that is the case , and @xmath43 is minimum corresponding to @xmath321 .",
    "it follows that both @xmath345 and @xmath346 . from the fact that @xmath345 , it follows that @xmath347 by the inductive assumption . as @xmath346 , and @xmath348 ( by claim  [ claim : s_not_in_range_phitm_w ] )",
    ", it then follows from the induction hypothesis that @xmath349 $ ] ; thus , the second clause of ( [ eqn : obfuc - comp - w ] ) holds for @xmath350 , which is therefore defined by claim  [ claim : w-total ] .    from the inductive assumption , then , @xmath351 . by induction",
    ", @xmath309 is total .",
    "@xmath52 can prove this as well .",
    "50 1em@xmath107claim  [ claim : w - total ] = 0    [ claim : psi_w_is_phitm_w ] @xmath352 , and @xmath52 proves this .",
    "_ proof of claim  [ claim : psi_w_is_phitm_w ] . _",
    "the equality follows immediately from the first disjunct of the disjunction in the first clause of ( [ eqn : obfuc - comp - psi ] ) ; @xmath52 can prove this as well .",
    "50 1em@xmath107claim  [ claim : psi_w_is_phitm_w ] = 0    [ claim : phitm_phitm_w_p_q_equals_psi_p_psi_q ] @xmath353 $ ] ; furthermore , @xmath52 proves this .",
    "_ proof of claim  [ claim : phitm_phitm_w_p_q_equals_psi_p_psi_q ] .",
    "_ the claim follows from ( [ eqn : obfuc - comp - w ] , [ eqn : obfuc - comp - c ] ) and claim  [ claim : w-total ] above .",
    "50 1em@xmath107claim  [ claim : phitm_phitm_w_p_q_equals_psi_p_psi_q ] = 0    [ claim : w_equivalent_w ] @xmath354 $ ] ; furthermore , @xmath52 proves this .",
    "_ proof of claim  [ claim : w_equivalent_w ] .",
    "_ assume for induction that for arbitrary @xmath220 , for all @xmath355 , for all @xmath356 , @xmath357 .",
    "case one : the first clause of ( [ eqn : obfuc - comp - w ] ) holds for @xmath291 .",
    "then , there exists @xmath358 $ ] ; fix @xmath43 and @xmath321 in accordance with that clause . then fix @xmath43 and @xmath321 in accordance with that clause ; thus , @xmath359 .",
    "it follows that @xmath360 .",
    "since @xmath361 , it follows by lemma  [ lem - pairing ] that @xmath345 and @xmath346 ; thus , by the induction assumption , @xmath362 and @xmath363 . by claim  [ claim : phitm_phitm_w_p_q_equals_psi_p_psi_q ] , @xmath364 , and @xmath365 . by claim  [ claim : range - w - checkable - below - q - is - enough ] and the second disjunct of the first clause of ( [ eqn : obfuc - comp - psi ] ) , @xmath366 . by repeated substitutions",
    ", it follows that @xmath367 .",
    "it follows from claim  [ claim : phitm_phitm_w_p_q_equals_psi_p_psi_q ] that @xmath368 . as @xmath369 and",
    "is thus in @xmath370 , it follows from ( [ eqn : obfuc - comp - psi ] ) that @xmath371 , and by substitution it follows that @xmath372 . from the induction assumption , it follows that @xmath373 , and then from claim  [ claim : phitm_phitm_w_p_q_equals_psi_p_psi_q ] it follows that @xmath374 ; and thus it follows that @xmath375 .",
    "it then immediately follows that @xmath376 .",
    "case two : the second clause of ( [ eqn : obfuc - comp - w ] ) holds for @xmath291 .",
    "then , it immediately follows from that clause that @xmath376 .",
    "case three : the third clause of ( [ eqn : obfuc - comp - w ] ) holds for @xmath291 . by claim  [ claim : w - total ]",
    ", this case is impossible .    in all possible cases , @xmath377",
    "; therefore , by induction , @xmath378.\\ ] ] @xmath52 can handle the above reasoning , and thus the claim follows .",
    "50 1em@xmath107claim  [ claim : w_equivalent_w ] = 0    [ claim : pa - proves - c - witness - composition ] @xmath379 is a witness to composition in @xmath263 .",
    "_ proof of claim  [ claim : pa - proves - c - witness - composition ] .",
    "_ this claim follows directly from claims  [ claim : w - total ] , [ claim : psi_w_is_phitm_w ] , [ claim : phitm_phitm_w_p_q_equals_psi_p_psi_q ] , and  [ claim : w_equivalent_w ] .",
    "50 1em@xmath107claim  [ claim : pa - proves - c - witness - composition ] = 0    [ claim : range - w - even ] all values in the range of @xmath309 are even .",
    "_ proof of claim  [ claim : range - w - even ] .",
    "_ by ( [ eqn : obfuc - comp - w ] ) , the range of @xmath290 consists of only even numbers .",
    "the claim follows from that fact and claim  [ claim : range - w - subset - range - w ] .",
    "50 1em@xmath107claim  [ claim : range - w - even ] = 0    in the remainder of this proof , we will need the ability to treat programs in the range of @xmath309  which are now known to be compositions of other programs  as a sequence of such compositions .",
    "furthermore , we need the ability to take potentially - long such sequences and pull off a single element from the front or back , and recompose the rest of the sequence to get another @xmath260-program . in order to do this , we introduce @xmath380 and @xmath381 ; @xmath380 takes the code number of a @xmath260-program and outputs a _ sequence _ of @xmath260-programs such that if the sequence is composed in order , the computed partial function is equivalent to the partial function computed by the input @xmath260-program ; while @xmath381 takes a non - empty sequence of @xmath260-programs and outputs a single @xmath260-program which is equivalent to composing the sequence in order .",
    "@xmath382 ,           \\cr & { \\hspace*{1em } } \\mbox{then select the minimum such $ s$}\\cr & { \\hspace*{1em}}\\mbox{and , then , select the minimum such $ r$}\\cr & { \\hspace*{1em}}\\mbox{corresponding to this selected s;}\\cr p , & \\mbox{otherwise.}\\cr \\end{cases}\\ ] ]    when @xmath383 is a sequence of more than one element , the terminology employed just below , all - but - last@xmath384 and last@xmath384 , is self - explanatory .",
    "[ claim : psi_chain_x_is_psi_x ] for @xmath386 , @xmath387 .",
    "_ proof of claim  [ claim : psi_chain_x_is_psi_x ] .",
    "_ let @xmath12 be an arbitrary value , and assume for induction that for all @xmath388 , the claim holds for @xmath389 .",
    "case one : :    @xmath390 .",
    "it immediately follows that the    claim holds for @xmath391 in this case .",
    "case two : :    @xmath392 .",
    "then    @xmath393 ,    @xmath394 , and @xmath395 .",
    "+    then @xmath0 and @xmath1 are such that the second    clause of ( [ eqn : obfuc - comp - w ] ) holds on input    @xmath291 , per    claim  [ claim : s_not_in_range_phitm_w ] .",
    "then @xmath396 , from which it follows that    @xmath397 .",
    "furthermore , since    @xmath12 is in the range of @xmath309 ,    @xmath398 by the second disjunct of the    first clause of ( [ eqn : obfuc - comp - psi ] ) . from the just previous    reasoning and the induction assumption",
    ", the claim also holds for    @xmath391 in this case .    by the induction",
    ", the claim holds for all @xmath12 .",
    "50 1em@xmath107claim  [ claim : psi_chain_x_is_psi_x ] = 0    [ claim : elems - of - chain - are - not - range - w ] for any @xmath0 , none of the elements of @xmath399 are in @xmath370 .",
    "_ proof of claim  [ claim : elems - of - chain - are - not - range - w ] . _",
    "assume by induction that for all @xmath400 , the elements of @xmath401 are each not in @xmath370 .",
    "case one : :    the first clause of ( [ eqn : obfuc - comp - chain ] ) holds for    @xmath0 .",
    "let @xmath402 be per that clause ; by    lemma  [ lem - pairing ] , it follows that @xmath403 .",
    "therefore ,    by the induction assumption , the elements of    @xmath404 are each not in    @xmath370 . by    claim  [ claim : s_not_in_range_phitm_w ]",
    ", @xmath321 is also not in    @xmath370 ; thus , each element of    @xmath399 is not in    @xmath370 .",
    "case two : :    the second clause of ( [ eqn : obfuc - comp - chain ] ) holds for    @xmath0 . by claim  [ claim :",
    "range - w - checkable - below - q - is - enough ] ,    if @xmath0 is in the range of @xmath309 , then    @xmath405 $ ] ;    thus , @xmath406 , and the only element of    @xmath399 is not in    @xmath370 .    by induction",
    ", the claim holds for all @xmath0 .",
    "50 1em@xmath107claim  [ claim : elems - of - chain - are - not - range - w ] = 0    [ claim : unchain_chain_x_is_x ] for all @xmath12 , @xmath407 .",
    "_ proof of claim  [ claim : unchain_chain_x_is_x ] .",
    "_ if @xmath391 is a sequence of one element , @xmath408 is just @xmath12 per the first clause of ( [ eqn : obfuc - comp - unchain ] ) .",
    "let @xmath250 be some number greater than @xmath32 .",
    "assume for induction that for all @xmath12 such that @xmath391 is a sequence of length no more than @xmath409 , @xmath410 .",
    "then let @xmath12 be such that @xmath391 is a sequence of length n. that sequence , for some @xmath402 , dependent on @xmath12 , is @xmath411 .",
    "furthermore , by the first clause of ( [ eqn : obfuc - comp - chain ] ) , @xmath412 .",
    "in such a sequence , for @xmath413 , the second clause of ( [ eqn : obfuc - comp - unchain ] ) holds , and outputs the result of @xmath414  by inductive assumption , it follows that @xmath415 is s , from which it follows that the output of @xmath408 is @xmath416  which is already known to be @xmath12 .",
    "thus , the claim follows by induction on the length of @xmath391 .",
    "50 1em@xmath107claim  [ claim : unchain_chain_x_is_x ] = 0    [ claim : partial - unchain - is - ok ] for any sequence @xmath417 of length at least two such that there exists @xmath0 such that @xmath418 , @xmath419 .",
    "_ proof of claim  [ claim : partial - unchain - is - ok ] .",
    "_ let @xmath420 . by ( [ eqn : obfuc - comp - chain ] , [ eqn : obfuc - comp - unchain ] ) above and by claim  [ claim : elems - of - chain - are - not - range - w ] , it follows that @xmath421 .",
    "therefore , by claim  [ claim : psi_chain_x_is_psi_x ] , @xmath422 .",
    "thus , @xmath423 ; by claim  [ claim : psi_chain_x_is_psi_x ] , this is exactly @xmath424 .    50 1em@xmath107claim  [ claim : partial - unchain - is - ok ] = 0    [ claim : w - increases - many - inputs ] for all @xmath12 such that @xmath425 is odd _ or _ @xmath12 in @xmath426 $ ] , @xmath427 , and , if @xmath12 is in @xmath370 , then there does not exist @xmath428 such that @xmath429 .    _",
    "proof of claim  [ claim : w - increases - many - inputs ] .",
    "_ suppose @xmath12 is odd . for @xmath430 , @xmath1 must be odd  per lemma  [ lem - pairing ] .",
    "as such , because @xmath309 only outputs even values , @xmath1 can not be in the range of @xmath309 , and thus @xmath310 by ( [ eqn : obfuc - comp - w ] ) . by ( [ eqn : obfuc - comp - w ] ) ,",
    "@xmath431 . by claim  [ claim : psi_w_is_phitm_w ] , @xmath352 , and thus @xmath427 .",
    "suppose @xmath432 . for @xmath430 , by lemma  [ lem - pairing ] , @xmath433 and @xmath434 . by ( [ eqn : obfuc - comp - w ] ) and",
    "claim  [ claim : w-total ] , there does not exist @xmath435 such that @xmath436 either @xmath0 or @xmath1 . by  ( [ eqn : obfuc - comp - w ] ) and",
    "claim  [ claim : w-total ] , @xmath437 ; from this and claims  [ claim : w-mono - increasing ] and  [ claim : w-total ] , it follows that there does not exist @xmath13 such that @xmath438 either @xmath0 or @xmath1 .",
    "therefore , by claim  [ claim : range - w - subset - range - w ] , @xmath439 , from which it follows , by ( [ eqn : obfuc - comp - w ] ) , @xmath310 . as @xmath440 and thus @xmath441",
    ", it follows by pairing being 1 - 1 that there does not exist any @xmath442 such that @xmath443 .",
    "therefore , there exists no @xmath13 such that both the first clause of ( [ eqn : obfuc - comp - w ] ) holds on input @xmath13 and @xmath444 . by claims [ claim : w-mono - increasing ] and [ claim : w-total ] , there exists no @xmath428 such that @xmath445 ; from this and the fact that @xmath310 , it follows that for @xmath428 , if the second clause of ( [ eqn : obfuc - comp - w ] ) holds on input @xmath13 , @xmath446 .",
    "therefore , there does not exist @xmath428 such that @xmath447 $ ] .",
    "furthermore , from ( [ eqn : obfuc - comp - w ] ) and the fact that @xmath448 , it follows that @xmath449 .    thus , the claim follows .",
    "50 1em@xmath107claim  [ claim : w - increases - many - inputs ] = 0    [ claim : t - proves - equality - implies - p - increasing ] if , for some @xmath171 , @xmath450\\gg$ ] , then @xmath451 is odd @xmath452 odd @xmath453 { \\ \\wedge \\ } \\zeta_p(x ) > x]$ ] .",
    "_ proof of claim  [ claim : t - proves - equality - implies - p - increasing ] . _ assume by way of contradiction that the claim does not hold .",
    "fix least @xmath0 and least corresponding @xmath454 such that @xmath425 is odd @xmath455 $ ] so that either @xmath456 , or @xmath457 even and not in the range of @xmath309 , or @xmath458 .",
    "case one : :    @xmath0 is @xmath261 .",
    "then , by claims  [ claim : w - total ] ,    [ claim : w - increases - many - inputs ] and  [ claim : psi_w_is_phitm_w ] , a    contradiction follows immediately .",
    "case two : :    @xmath0 is not @xmath261 and not in    @xmath370 .",
    "then , by ( [ eqn : obfuc - comp - psi ] ) ,    @xmath459 , which is an odd    value greater than @xmath12 . a contradiction follows    immediately .",
    "case three : :    @xmath0 is in @xmath370 .",
    "let    @xmath460 be @xmath399 and    let    @xmath461 . ) , for all @xmath12 in the range of    @xmath309 , the length of    @xmath462 .",
    "] by    claim  [ claim : elems - of - chain - are - not - range - w ] , @xmath463 . by claim  [ claim : unchain_chain_x_is_x ] and",
    "( [ eqn : obfuc - comp - chain ] ) ,    @xmath464 . from    ( [ eqn : obfuc - comp - chain ] ) we have that    @xmath465 . then by    claims  [ claim : phitm_phitm_w_p_q_equals_psi_p_psi_q ]    and  [ claim : w_equivalent_w ] and ( [ eqn : obfuc - comp - psi ] ) , it follows    that @xmath466 . by the second clause of    ( [ eqn : obfuc - comp - w ] ) ,    @xmath467 , thus @xmath468    by ( [ eqn : obfuc - comp - w ] ) .",
subcase one : @xmath469 is not @xmath261 .",
    "then ,    @xmath470 , which is both odd and greater than    @xmath12 ; thus , by the assumption that @xmath0 is the    least value such that the claim does not hold ,    @xmath471 is greater than    @xmath472 , which is greater than    @xmath12 .",
    "@xmath471 is    also either odd or in @xmath370 ; as    @xmath457 is that value , contradiction follows    immediately .",
subcase two : @xmath469 is @xmath261 .",
    "then , by    ( [ eqn : obfuc - comp - psi ] ) , @xmath473 is in the range    of @xmath309 , moreover , by    claim  [ claim : w - increases - many - inputs ] , it is @xmath474 . by the    assumption that @xmath0 is the least value such that the claim    does not hold , @xmath475 is greater    than @xmath473 , which , as previously shown , is    greater than @xmath12 .",
    "@xmath475    is also either odd or in @xmath370 ; as that    value is equal to @xmath457  a contradiction follows    immediately .",
in all cases , a contradiction follows ; thus , the claim holds .    50 1em@xmath107claim  [ claim : t - proves - equality - implies - p - increasing ] = 0    [ claim : t - proves - equality - implies - infinitely - not - equal ] if , for some @xmath171 , @xmath450\\gg$ ] , then @xmath476 $ ] .",
    "_ proof of claim  [ claim : t - proves - equality - implies - infinitely - not - equal ] . _ assume by way of contradiction otherwise . then by the assumption that @xmath2 does not prove false things , @xmath477 $ ] .",
    "thus , @xmath478 $ ] .",
    "let @xmath0 be the least number such that @xmath399 is of minimum length so that there are @xmath1 and @xmath479 with @xmath480 and @xmath479 so that @xmath481 $ ] ; then let @xmath1 be the least corresponding @xmath1 .",
    "let @xmath171 be the least number such that @xmath482\\gg$ ] .",
    "let @xmath483 be the least value such that each of the following hold : @xmath483 is in the range of @xmath309 , @xmath484 , and @xmath485 . by claim  [ claim : w - increases - many - inputs ]",
    ", there is a value in the range of @xmath309 greater than any fixed odd number , and thus such an @xmath483 must exist .",
    "case 1 : :    @xmath486 .",
    "+    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    subcase 1.1 : @xmath487 .",
    "this immediately contradicts our    assumption that @xmath221 .    _",
subcase 1.2 : @xmath488 and    @xmath489 .",
    "then , by    ( [ eqn : obfuc - comp - psi ] ) ,    @xmath490 , which is an odd    value , and by claim  [ claim : range - w - even ] , @xmath491 is    even ; a contradiction follows immediately .",
subcase 1.3 : @xmath312 .",
    "let    @xmath492 . by claim  [ claim : elems - of - chain - are - not - range - w ] ,    @xmath143 is not in @xmath370 .",
    "let    @xmath493 .",
    "by    claim  [ claim : partial - unchain - is - ok ] ,    @xmath494 . by claim  [ claim :",
    "t - proves - equality - implies - p - increasing ] ,    @xmath495 and @xmath496 is    either odd or in the range of @xmath309 .    _",
sub - subcase 1.3.1 : @xmath497 . then by    ( [ eqn : obfuc - comp - psi ] ) ,    @xmath498 , which is an odd value ,    while , by claim  [ claim : range - w - even ] , @xmath491 is    even ; therefore , @xmath499 ; a    contradictionsub - subcase 1.3.2 : @xmath500 . therefore , since    @xmath501 ,    @xmath502 ,    and @xmath503",
    ", it follows that    @xmath504 .",
    "however ,    @xmath495 , and by    claim  [ claim : w - increases - many - inputs ] , it follows from the fact that    @xmath505 that    @xmath506  a contradiction .    _",
case 2 : :    @xmath507 and @xmath441 .",
    "+    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    subcase 2.1 : @xmath487 . the same argument holds as for    case  1.2 , interchanging @xmath0 and @xmath1 .",
subcase 2.2 : @xmath488 and    @xmath489 .",
    "then by    ( [ eqn : obfuc - comp - psi ] ) ,    @xmath508 and    @xmath490 , thus    @xmath509 , which implies that @xmath510 , a    contradictionsubcase 2.3 : @xmath312 .",
    "let    @xmath492 ; then let    @xmath493 . by    claim  [ claim : partial - unchain - is - ok ] ,    @xmath494 . by claim  [ claim :",
    "t - proves - equality - implies - p - increasing ] ,    for all @xmath511 , @xmath512 is    greater than @xmath483 and either odd or in the range of    @xmath309 . by    claim  [ claim : elems - of - chain - are - not - range - w ] ,    @xmath513 .    _",
sub - subcase 2.3.1 : @xmath500",
    ". then    @xmath514 , which is even per    claim  [ claim : range - w - even ] . by the second clause of    ( [ eqn : obfuc - comp - psi ] ) ,",
    "@xmath515 is odd ; a    contradiction to @xmath516 follows .    _",
sub - subcase 2.3.2 : @xmath517 .",
    "then , as    @xmath518 , it follows that    @xmath519 .",
    "likewise ,    @xmath520",
    ". therefore ,    @xmath521 , which is a contradiction to    claim  [ claim : t - proves - equality - implies - p - increasing ] .",
sub - subcase 2.3.3 : @xmath497 and    @xmath522 . then , by ( [ eqn : obfuc - comp - psi ] ) and the    fact that @xmath523 , @xmath524 is a power of    @xmath525 and @xmath515 is    @xmath526 ; thus    @xmath527 , a contradiction .",
case 3 : :    @xmath528 .",
    "+    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    subcase 3.1 : @xmath487 . the same argument holds as for    case  1.3 , interchanging @xmath0 and @xmath1 .",
subcase 3.2 : @xmath488 and    @xmath489 .",
    "the same argument holds as    for case two subcase three , interchanging @xmath0 and    @xmath1 .",
subcase 3.3 : @xmath312 .",
    "let    @xmath529 , let    @xmath530 .",
    "let    @xmath531 and    @xmath532 .",
    "by    claim  [ claim : partial - unchain - is - ok ] , @xmath533 , and    @xmath534 . by claim  [ claim : t - proves - equality - implies - p - increasing ] ,    for all @xmath535 , @xmath512 and @xmath536",
    "are both greater than @xmath483 and either odd or in the range    of @xmath309 .",
sub - subcase 3.3.1 : @xmath537 .",
    "then , by    ( [ eqn : obfuc - comp - psi ] ) , for each @xmath511 ,    @xmath538",
    ". thus , for each    @xmath511 , for each @xmath539 ,    @xmath540 . as it is the case    that for all @xmath511 , @xmath512 and    @xmath536 are both greater than @xmath483 , it    then follows from the previous equalities and inequalities about    @xmath136 and @xmath143 , as well as the facts that    @xmath494 , and    @xmath541 , that    @xmath542 $ ] .",
    "but since    @xmath401 is shorter than    @xmath399 , this contradicts our assumption that    @xmath0 had the shortest @xmath380 such    that there exists @xmath480 and @xmath479 so    that @xmath543 $ ] .",
sub - subcase 3.3.2 : @xmath544 .",
    "by    claim  [ claim : w - increases - many - inputs ] and the fact that for all    @xmath545 , @xmath512 and @xmath536 are    both greater than @xmath483 and either odd or in the range of    @xmath309 , it follows from reasoning similar to that    of sub - subcase 3.3.1 , that for all @xmath511 ,    @xmath546 , which again contradicts our assumption that    @xmath0 had the shortest @xmath380 such    that there exists @xmath480 and @xmath479 so    that @xmath543 $ ] .    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _      --    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    +    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    --    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    sub - subcase 3.3.3 : @xmath547 , and neither    @xmath136 nor @xmath143 is @xmath261 .",
    "then , by    ( [ eqn : obfuc - comp - psi ] ) and the facts that @xmath548 and    @xmath494 , it follows that @xmath515 is a power of    @xmath549 , and @xmath524 is    a power of @xmath525 ; thus ,    @xmath550 , a contradictionsub - subcase 3.3.4 : @xmath547 , and    @xmath551 .",
    "then , by claim  [ claim : range - w - even ] and the    fact that @xmath552 , it follows that @xmath515 is even .",
    "by    claim  [ claim : elems - of - chain - are - not - range - w ] , @xmath553 and @xmath497 ; thus by    ( [ eqn : obfuc - comp - psi ] ) , the fact that @xmath533 , and the fact that    @xmath554 , it follows that @xmath524 is odd ; a    contradiction to the assumption that    @xmathsub - subcase 3.3.5 : @xmath547 , and    @xmath500 .",
    "the same reasoning holds as for sub - subcase    3.3.4 , with p and q interchanged .",
every case leads to a contradiction ; thus the assumption is false , and the claim follows .    50 1em@xmath107claim  [ claim : t - proves - equality - implies - infinitely - not - equal ] = 0    [ claim : t - not - proves - equality ] @xmath555\\gg$ ] .",
    "_ proof of claim  [ claim : t - not - proves - equality ] .",
    "_ by claim  [ claim : t - proves - equality - implies - infinitely - not - equal ] , if @xmath556\\gg$ ] , then @xmath557 $ ] .",
    "thus , there does not exist @xmath558 such that @xmath559 .",
    "since @xmath2 does not prove false things , the claim follows .",
    "50 1em@xmath107claim  [ claim : t - not - proves - equality ] = 0    [ claim : is_acceptable ] @xmath260 is acceptable .",
    "_ proof of claim  [ claim : is_acceptable ] .",
    "_ by claim  [ claim : t - not - proves - equality ] , the third disjunct of the first clause of ( [ eqn : obfuc - comp - psi ] ) is true for all @xmath12 .",
    "thus , for all @xmath0 and @xmath12 , @xmath560 ; that is , @xmath561 , which is known to be acceptable .",
    "50 1em@xmath107claim  [ claim : is_acceptable ] = 0    the theorem follows immediately from claims  [ claim : pa - proves - c - witness - composition ] , [ claim : t - not - proves - equality ] , and  [ claim : is_acceptable ]    50 1em@xmath107theorem  [ thm : t - prove - composition - not - equality ] = 0",
    "we are very grateful for the anonymous referees hard work , helpful suggestions , and corrections .                  j.  case and t.  ktzing . difficulties in forcing fairness of polynomial time inductive inference . in _",
    "20th international conference on algorithmic learning theory ( alt09 ) _ , volume 5809 of _ lecture notes in artificial intelligence _ , pages 263277 , 2009 .",
    "h.  putnam . what is innate and why : comments on the debate .",
    "in m.  piattelli - palmarini , editor , _ language and learning : the debate between jean piaget and noam chomsky _ ,",
    "pages 287309 .",
    "harvard university press , cambridge , ma , 1980 ."
  ],
  "abstract_text": [
    "<S> the _ international obfuscated c code contest _ was a programming contest for the most creatively obfuscated yet succinct c code . by _ contrast _ , an interest herein is in programs which are , _ in a sense _ , _ easily _ seen to be correct , but which can__not _ _ be proved correct in pre - assigned , computably axiomatized , powerful , true theories * t*. a point made by our first theorem , then , is that , then , _ _ </S>",
    "<S> un__verifiable programs need _ not _ be obfuscated !    the first theorem and its proof is followed by a motivated , concrete example based on a remark of hilary putnam .    </S>",
    "<S> the first theorem has some non - constructivity in its statement and proof , and the second theorem implies some of the non - constructivity is inherent . </S>",
    "<S> that result , then , brings up the question of whether there is an acceptable programming system ( numbering ) for which some non - constructivity of the first theorem disappears . </S>",
    "<S> the third theorem shows this is the case , but for a subtle reason explained in the text . </S>",
    "<S> this latter theorem has a number of corollaries , regarding its acceptable programming system , and providing some surprises and subtleties about proving its program properties ( including universality , and the presence of the composition control structure ) . </S>",
    "<S> the next two theorems provide acceptable systems with contrasting surprises regarding proving universality in them . </S>",
    "<S> finally the next and last theorem ( the most difficult to prove in the paper ) provides an acceptable system with some positive and negative surprises regarding verification of its true program properties : the existence of the control structure composition is provable for it , but anything about true i / o - program equivalence for syntactically unequal programs is not provable . </S>"
  ]
}
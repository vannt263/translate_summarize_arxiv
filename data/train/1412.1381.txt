{
  "article_text": [
    "in this paper we present novel results and properties of two special models of the multitype galton - watson trees , that we call _ full binary trees _ and _ full binary trees with survivals_. in particular we present interesting relations between these kind of trees and the narayana numbers and the two - dimensional decompositions of integers .    the random trees are recently used for statistical mechanics and mathematical physics models , for instance in @xcite , @xcite a ferromagnetic model is studied on locally tree - like random graphs . for more details on the random graphs see @xcite . in @xcite and @xcite",
    "are studied broadcasting problems on random trees and there are found relations with some relevant mathematical physics topics . regarding the multitype galton - watson trees ,",
    "they have been used to achieve the dawson - watanabe superprocesses , that are called more simply superprocesses ( see for more details @xcite ) .",
    "a multitype galton - watson tree is characterized in law by the offspring distribution @xmath0 and it is characterized in realization by the _ contour process _ , @xmath1 ( see for instance @xcite ) .",
    "particular importance is given to these two characteristics in this paper .",
    "recall that the period of @xmath1 is equal to @xmath2 , where @xmath3 is the number of edges of @xmath4 .",
    "one important tool to be considered is the moment - generating function of the period of the contour process . in a multitype galton - watson tree",
    "starting witha type @xmath5 vertex , for every @xmath6 , we have proved that the moment - generating function @xmath7 of @xmath8 is given by the following @xmath9=\\sum_{\\bm{\\alpha}\\in\\mathbb{n}^{r}}\\big(\\mu^{(i)}(\\bm{\\alpha})\\cdot e^{2s|\\bm{\\alpha}|}\\cdot\\prod_{k=1}^{r}f_{k}(s)^{\\alpha_{k}}\\big),\\ ] ] where @xmath10 is the number of the types of the particles and @xmath11 .",
    "moreover , we have introduced two classes of models for @xmath12 .",
    "when each vertex may produce no children or one child of both types , the model is called full binary tree . in addition , if we allow to each vertex to produce one child of the same own type then the model is called full binary tree with survivals .",
    "in the study of the likelihood of the multitype galton - watson trees concerning @xmath0 , we show a relation with the _ narayana numbers _",
    "@xmath13 ( see for more details @xcite ) , @xmath14 the narayana numbers are a sort of generalization of the _ catalan numbers _ ( see @xcite ) , and from them we have obtained , in a non linear way , the likelihood of the number of the type 1 ( @xmath15 ) and type 2 ( @xmath16 ) vertices having exactly two children , @xmath17 where the paramters @xmath18 depend only on the offspring distribution @xmath19 of the tree . moreover , through the narayana numbers , we have outlined an interesting rappresentation of the _ full binary trees _ as two - dimensional decompositions of the integers ( see for more details @xcite ) .    in section 1",
    "we give the basical definitions of the two - dimensional decompositions of integers and the narayana numbers and , in a particular case , we prove a connection between them .",
    "the full binary trees are briefly defined in section 2 , and we outline a relation between them and the narayana numbers . in section 1",
    "we prove the characterization of full binary trees as particular two - dimensional decompositions of integers .",
    "then the preliminaries on multitype galton - watson trees are given in section 3 .",
    "we illustrate in this section a characterization of the moment - generating function of the period of the contour function of the trees .",
    "eventually , in section 4 we give the rigorous definitions of full binary trees and the full binary trees with survivals and we prove a sufficient condition for the period of the contour process to be finite .",
    "we show the likelihood as final result .",
    "at first we give the basical definitions of the narayana numbers ( see ( * ? ? ?",
    "* abstract and section 1.1 ) ) and the two - dimensional decompositions of integers ( see ( * ? ? ?",
    "* vol.2 , section ix , chapter ii , paragraph 429 ) , then , in a particular case , we prove a relation between them .",
    "[ def : narayana_numbers ] the narayana numbers @xmath20 , @xmath21 and @xmath22 are defined in the followinf way @xmath23 and they are usefull for counting problems .",
    "for example from ( * ? ? ?",
    "* section 1.1 ) , it is known that the narayana number @xmath20 is the number of expressions containing @xmath15 pairs of parentheses which are correctly matched and which contain @xmath24 distinct nestings . for instance , @xmath25 counts all the following expressions with @xmath26 pairs of parentheses , which each contains three times the sub - pattern ( ) , @xmath27    [ def : decomposizione_numeri_interi ] let @xmath28 , @xmath29 , @xmath30 and @xmath31 be integers .",
    "consider a matrix @xmath32 with elements limited in magnitude to @xmath33 ( zero being included ) and in descending order in each row and column , and such that the sum of all the elements is exactly @xmath34 ( see figure [ fig : esempio_matrice_di_decomposizione ] ) .",
    "then , each of these matrices is called a _ two - dimensional decomposition _ of @xmath34 with parameters @xmath35 .",
    "@xmath36{270}{$\\geq$ } } } } & & { \\mathrel{\\reflectbox{\\rotatebox[origin = c]{270}{$\\geq$ } } } } & & { \\mathrel{\\reflectbox{\\rotatebox[origin = c]{270}{$\\geq$}}}}\\\\ \\cdots & & \\cdots & & \\cdots \\\\ { \\mathrel{\\reflectbox{\\rotatebox[origin = c]{270}{$\\geq$ } } } } & & { \\mathrel{\\reflectbox{\\rotatebox[origin = c]{270}{$\\geq$ } } } } & & { \\mathrel{\\reflectbox{\\rotatebox[origin = c]{270}{$\\geq$}}}}\\\\ a_{b,1 } & \\geq & \\cdots & \\geq & a_{b , d } \\end{bmatrix},\\ ] ] with @xmath37 and @xmath38    thus , consider the following result about the narayana numbers and the two - dimensional decompositions of integers .",
    "[ lem : relazione_narayana_numeri_e_decomposizioni_interi ] in accordance to definition [ def : decomposizione_numeri_interi ] , let @xmath39 and @xmath31 be integers .",
    "then @xmath40 where @xmath41 is the number of the two - dimensional decompositions of @xmath34 .    from @xcite",
    ", we have that given the following function @xmath42 the number of two - dimensional decomposition of @xmath34 is the coefficient @xmath41 of @xmath43 in @xmath44 , written in the power series form .",
    "note that we can only represent integers in the set @xmath45 , and so we have that @xmath46 and moreover , using the equality @xmath47 the function becomes @xmath48 now , we compute for @xmath49 and get @xmath50 in this way we can include the particular case of decompositions with @xmath51 , indeed it is sufficient to fix @xmath52 .",
    "in this section we show an important relation between the full binary trees and two dimensional decompositions of integers .",
    "a full binary tree , the rigorous definition of which is given in section [ sec : fulbintee_withsur ] , represents a two - type system particles in which every type @xmath5 particle may produce no particles or exactly two particles ( i.e.  fathers , see section [ sec : distributione_padri_alberi_bin_con_sopr ] ) , one of type 1 and the other one of type 2 , for every @xmath53 . in this section",
    "we consider the special case of finite full binary trees , the condition of a.s .",
    "finiteness is proved in the lemma [ lem : critical_discussion_binary_model ] in section [ sec : distributione_padri_alberi_bin_con_sopr ] . in accordance to the defintion [ def : nostro_ordine_tipi_figli ] in section [ sec : preliminaries_on_trees ] we assume that the left children are considered as vertices of type 1 and the right children are considered as vertices of type 2 . by the definition of the full binary trees and since the root is assume to be a type 1 vertex , it is easy to check that if @xmath15 and @xmath16 are the numbers of left and right fathers respectively , then the numbers of the left and right leaves are equal to @xmath54 and @xmath15 respectively .",
    "we give the ",
    "( ) \" encoding of the trees , i.e.  the  lr \" encoding presented by r.p .",
    "grimaldi in ( * ? ? ?",
    "* chapter 24 , example 24.3 ) in which we substitute each l with an open parenthesis ( , and each r with close one ): if we are in a vertex with children we at first visit the left one , if we are in a left leaf we visit its right brother and if we are in a right leaf we visit the older not visited right vertex having the youngest last ancestor in common , and we write l or r for each left or right vertex visited .",
    "note that each couple of consecutive parentheses  ( ) \" represents a left leaf .",
    "thus , the total number of ( or ) , is the number of the fathers and the number of couple  ( ) \" is equal to @xmath54 .",
    "[ oss : unicita_lr_parentesi_codifica ] note that each full binary tree has an unique  ( ) \" encoding .",
    "( na)[label=0:@xmath55 child node ( nb ) [ label=180:l , ( ] child node ( nd ) [ label=0:l , ( ] child node ( ni ) [ label=270:l , ( ] child node ( nj ) [ label=270:r , ) ] child node ( ne ) [ label=0:r , ) ] child node ( naa ) [ label=180:l , ( ] child node ( nbb ) [ label=180:r , ) ] child node ( ncc ) [ label=180:l , ( ] child node ( ndd ) [ label=180:r , ) ] child node ( nc ) [ label=0:r , ) ] child node ( nf ) [ label=0:l , ( ] child node ( nk ) [ label=0:l , ( ] child node ( nl ) [ label=0:r , ) ] child node ( nee ) [ label=0:l , ( ] child node ( ngg ) [ label=270:l , ( ] child node ( nhh ) [ label=270:r , ) ] child node ( nff ) [ label=0:r , ) ] child node ( ng ) [ label=0:r , ) ] ;    let us consider the full binary tree , with a type 1 root , in figure [ fig : l_r_encoding ] .",
    "it has @xmath56 left fathers ( including the root ) and @xmath26 right fathers .",
    "( ) \" encoding is ( ( ( ) ) ( ) ( ) ) ( ( ) ( ( ) ) ) .",
    "thus , we have the following result    [ lem : problema_conteggio_padri_con_parentesi ] let @xmath57 and @xmath58 .",
    "then the number of the full binary trees with exactly @xmath15 left fathers vertices ( included the root ) and @xmath16 right fathers vertices is the narayana number @xmath59    it is sufficient to apply the property of the narayana numbers in defintion [ def : narayana_numbers ] in section [ sec : relazione_decomposizizoni_narayana ] to the  ( ) \" encoding of the full binary trees seen above .",
    "it is obvious that for every @xmath60 and @xmath61 , the narayana number @xmath62 counts the number of full binary trees with exactly @xmath63 left fathers vertices and @xmath64 right fathers vertices . from we have an important relation between the full binary trees and the two - dimensional decompositions , i.e.  fixed @xmath65 and @xmath30 , let be @xmath44 the function in and @xmath41 the number of the two - dimensional decompositions of the integer @xmath66 then , from , we have @xmath67    = number of full binary trees with @xmath68 left fathers ( included the root ) and @xmath69 right fathers .    moreover , extending the result expressed by , we are also able to pass from a full binary tree to a two - dimensional decompostion and vice versa .",
    "let @xmath28 , @xmath30 . denote with @xmath70 and @xmath71 the set of the two - dimensional decompositions with parameters @xmath72 of integers @xmath73 and the set of the full binary trees with @xmath74 left fathers ( including the root ) and @xmath69 right fathers , respectively .",
    "+ then , exists an unique representation for each element of @xmath70 in @xmath71 and vice versa .    to pass from a full binary tree with @xmath74 left fathers and @xmath69 right fathers to its related two - dimensional decomposition we have to compute the  lr \" and",
    "the  parentheses `` '' encodings of the tree ( see section [ sec : distributione_padri_alberi_bin_con_sopr ] ) , i.e.  a string of @xmath75 couples of parentheses ( , ) with exactly @xmath76 distinct nestings ( ) . therefore there are @xmath33 separated couples ( , ) in the string .",
    "then we consider the following defintions : @xmath77 is the number of ) of the separated couples ( , ) that stay after the @xmath78-@xmath79 nesting ( ) , for every @xmath80 . if @xmath81 then the remaining @xmath82 ) are all between the first and second nesting ( ) .",
    "similarly , the element @xmath83 is the number of ( between the separated couples ( , ) that stay after the @xmath5-@xmath79 nesting ( ) , for every @xmath80 and if @xmath84 then the remaining @xmath85 ( are all before the first nesting ( ) .",
    "so , according to the defintions of @xmath86 , the two - dimensional decomposition related to the tree is @xmath36{270}{$\\geq$ } } } } & & { \\mathrel{\\reflectbox{\\rotatebox[origin = c]{270}{$\\geq$ } } } } & & { \\mathrel{\\reflectbox{\\rotatebox[origin = c]{270}{$\\geq$}}}}\\\\ a_{2,1 } & \\geq & \\cdots & \\geq & a_{2,d } \\end{bmatrix}.\\ ] ] note that the descending order of the rows is verified from the definitions of elements @xmath86 and , because the number of the open parentheses ( can not be greater than the closed one , even the descending order of the columns is also verified .",
    "+ to pass from a two dimensional decomposition with parameters @xmath69 and @xmath33 to its related full binary tree with @xmath74 left fathers ( including the root ) and @xmath69 right fathers it is enough to consider the definitions of the elements @xmath86 given above and write the related string of parentheses which encode a full binary tree with @xmath74 left fathers and @xmath69 right fathers .",
    "the uniqueness of the representations is given respectively by the definitions of the elements of the decompositions and the uniqueness of the  lr \" encoding of the trees ( see remark [ oss : unicita_lr_parentesi_codifica ] ) .",
    "[ es : esempio_alberi_matrici ] let @xmath87 , so by we have that @xmath88    .representations of finite full binary trees with @xmath89 left fathers ( including the root ) and @xmath89 right fathers as two - dimensional decompositions of integers . [ cols=\"^,^,^\",options=\"header \" , ]     in table [ tab : seconda_parte_esempio_rappresentazione_alberi_come_decomposizione ] you can see the rappresentations of all the 6 full binary trees with 2 left fathers and 2 right fathers , in accordance with the algorithm seen above . for each tree is shown the ",
    "lr \" encoding , the related  parentheses \" encoding and the two - dimensional decompostion related and moreover the integer @xmath34 rappresented in such decomposition .",
    "we refer to g. miermont ( * ? ? ? * sec .",
    "1.3 , 1.4 ) for the notions of the multitype trees and the multitype galton - watson trees .      for @xmath90 ,",
    "let @xmath91 be the infinite - regular tree @xmath92 where if @xmath93 , then @xmath94 . we use the convention @xmath95 throughout . for @xmath96 , we let @xmath97 be their concatenation and @xmath98 their length ( with the convention @xmath99 ) .",
    "let @xmath93 and @xmath100 , we let @xmath101 , and say that * _ u _ * is a _ prefix _ of * _ w _ * if @xmath102 , and we write @xmath103 .",
    "+ now we give the definition of a _",
    "planar tree _",
    "a planar tree is a finite subset @xmath4 of @xmath91 such that    * @xmath104 , and it is called the _ root _ of @xmath4 , * @xmath105 and @xmath106 , if @xmath107 , and @xmath108 for every @xmath109 .",
    "moreover , an element @xmath110 is called a _ vertex _ of @xmath4 , and @xmath3 is the number of edges of the tree @xmath4 .",
    "we let @xmath111 be the set of all planar trees , which we refer to as _ trees _ in the sequel .",
    "now we give some important definitions about trees .",
    "let @xmath112 and * _ u _ * , * _ v _ * @xmath113 then    * the number @xmath114 is the number of children of * _ u _ * , * the set of the _ leaves _ of @xmath4 is defined as @xmath115 , * * _ u _ * is an _ ancestor _ of * _ v _ * if @xmath116 .",
    "any tree @xmath112 is endowed with the _ depth - first order _",
    ",    let @xmath112 and @xmath117 , then @xmath118    [ ese : esempio_grafico_albero_planar ] the tree @xmath112 in figure [ fig : esempio_funz_contorno ] can be written according to the depth - first order in the following way @xmath119 @xmath120 .",
    "( na ) [ label=0:@xmath55 child node ( nb ) [ label=90:@xmath121 child node ( nc ) [ label=0:@xmath122 child node ( nd ) [ label=0:@xmath123 child node ( ne ) [ label=0:@xmath89 ] child node ( nf ) [ label=0:@xmath125 child node ( ng ) [ label=0:@xmath126 child node ( nh ) [ label=0:@xmath127 child node ( ni ) [ label=0:@xmath128 child node ( nl ) [ label=0:@xmath129 ;        now we are able to introduce the @xmath10-type planar trees , or simply the @xmath10-type trees .",
    "let @xmath130 , then a @xmath10-type planar tree is a pair @xmath131 , where    1 .",
    "@xmath112 , 2 .",
    "@xmath132 , i.e. @xmath133 is called the type of the vertex @xmath134 .",
    "moreover , let @xmath135 be the set of @xmath10-type trees and we let @xmath136    now the purpose is to count the children of a vertex , according to the type . to do this , at first we define the _ counter map_.    [ def : counter_map ]",
    "let @xmath130 and @xmath137 be the set of finite , possibly empty , @xmath138-valued sequences , then the counter map , @xmath139 , is such that @xmath140 where @xmath141 is the number of @xmath5 in @xmath142 , @xmath143 .",
    "so , @xmath144 and @xmath145 we can define the following vector , @xmath146 and then @xmath147 is the vector of the number of children of @xmath134 for each type .",
    "[ oss : funz_contorno_alberi_multi ] note that the graphical representation of a multitype tree is the same of a one - type planar tree .",
    "indeed , neglecting the type of the particles , it may be considered as one - type tree .",
    "moreover , the set of the vertices of a multitype tree is ordered according to the first - depth order .      in this section",
    "we treat the multitype planar trees where each vertex has a number of children of certain type according to the offspring distribution .",
    "[ def : offspring : distribution ] let @xmath130 and @xmath148 be a family of probabilities on the @xmath149-algebra @xmath150 .",
    "we say that the family of probabilities @xmath0 on the @xmath149-algebra @xmath151 is an offspring distribution , where @xmath152 is the counter map defined in definition [ def : counter_map ] and @xmath153    now , we build a distribution on @xmath154 , such that    1 .",
    "different vertices have indipendent offspring 2 .",
    "type @xmath155 vertices have a set of children with types given by a sequence @xmath156 with probability @xmath157 .    to do this , @xmath105 , let @xmath158 be the vector of the types of the children of @xmath134 .",
    "@xmath159 is a family of independet vectors and such that @xmath160 has law @xmath161 .",
    "now , recursively , we construct a subset @xmath162 and a mark - map @xmath163 in the following way    1 .",
    "@xmath164 2 .",
    "@xmath165 3 .",
    "if @xmath110 , @xmath166 , then , with probability @xmath167 , @xmath168 if and only if @xmath169 and then @xmath170 .    a pair @xmath171 equipped with @xmath0 , for every @xmath130 and @xmath172 , is called @xmath0-_gw tree_.    [ oss : processogw_da_albero ] it is easy to check that the subset @xmath162 has the properties of a planar tree ( it might be infinite ) . moreover , from the construction we have that @xmath173 is a multitype galton - watson process ( with discrete time ) with offspring distribution @xmath174 .",
    "let @xmath171 a planar tree and consider the following order for the offspring of a vertex , according to the type .",
    "[ def : nostro_ordine_tipi_figli ] let @xmath171 .",
    "then @xmath175 where @xmath176 is the counter map given in definition [ def : counter_map ] and @xmath110 .",
    "note that if @xmath177 for some @xmath178 , then @xmath179 .    from now on ,",
    "a @xmath0-gw tree is equipped with the type - ordering offspring .",
    "we can derive the _ contour process _",
    "@xmath180\\longrightarrow\\mathbb{n}\\ ] ] of @xmath171 ( see figure [ fig : esempio_funz_contorno ] ) and ( * ? ? ?",
    "1.1 ) for details .",
    "the value @xmath181 at the time @xmath15 is the generation of the vertex visited at the step @xmath15 in this evolution .",
    "note that @xmath3 is a non negative - integer - valued random variable .",
    "[ def : numero_edges_nuova_notazione ] let @xmath182 be a @xmath0-gw tree .",
    "we define @xmath183 the number of edges in the tree @xmath4 from the vertex @xmath134 of type @xmath155 .",
    "with this definition we have @xmath184 where @xmath4 is a @xmath0-gw tree rooted in a type @xmath155 vertex .",
    "recall that @xmath160 is the vector of the types of the children of @xmath134 and @xmath152 is the counter map seen in defintion [ def : counter_map ] , and denote @xmath185 .",
    "each component @xmath186 is the number of chidren of @xmath134 of type @xmath24 .",
    "the following theorem show some properties of @xmath187 .",
    "[ teo : number_of_edges ] let @xmath182 be a @xmath0-gw tree .",
    "then , for every @xmath110 , we have    1 .   for every @xmath188 with @xmath189 , @xmath190 are independent for every @xmath191 and @xmath192 , 2 .   for every @xmath172 ,",
    "@xmath193 are i.i.d .  and @xmath194 for every @xmath191 , 3 .   for every @xmath178 and @xmath110 , the following recursive formula holds @xmath195    note that , in accordance with the literature of the galton - watson processes , 1 and 2 are verified .",
    "in other words , it represents the property that different particles have independent offspring in the galton - watson prodesses .",
    "3 can be proved for recursion on the vertices and on the vertices type .",
    "as consequence of theorem 3.1 we can get the characterization of the moment - generating function of the period of @xmath196 , @xmath197 .",
    "[ teo : caratterizzazione_funz_gen_momenti_durata ] let @xmath182 , and @xmath198 $ ] be the moment - generating function of @xmath197 , @xmath199 .",
    "then @xmath200    let @xmath201 $ ] .",
    "for the law of total probability we have , @xmath202\\cdot \\mu^{(i)}(\\bm{\\alpha } ) \\\\ \\stackrel{\\eqref{eq : definizione_ricorsiva_numero_edges}}{= } &   \\sum_{\\bm{\\alpha}\\in\\mathbb{n}^{r}}\\mathbb{e}\\big[\\exp\\big(s\\cdot \\sum_{k=1}^{r}(\\alpha_{k}+\\sum_{l=1}^{\\alpha_{k}}x_{l , k})\\big)\\big]\\cdot \\mu^{(i)}(\\bm{\\alpha } ) \\\\ = & \\sum_{\\bm{\\alpha}\\in\\mathbb{n}^{r}}\\mu^{(i)}(\\bm{\\alpha})\\cdot \\mathbb{e}\\big[\\prod_{k=1}^{r}\\exp\\big(s\\cdot ( \\alpha_{k}+\\sum_{l=1}^{\\alpha_{k}}x_{l , k})\\big)\\big ] \\intertext{and using 1 and 2 of theorem \\ref{teo : number_of_edges } we get } f_{i}(s ) = & \\sum_{\\bm{\\alpha}\\in\\mathbb{n}^{r}}\\mu^{(i)}(\\bm{\\alpha})\\cdot \\prod_{k=1}^{r}\\big(\\exp(s\\cdot\\alpha_{k})\\mathbb{e}\\big[\\prod_{l=1}^{\\alpha_{k}}\\exp(s\\cdot x_{l , k})\\big]\\big ) \\\\ = & \\sum_{\\bm{\\alpha}\\in\\mathbb{n}^{r}}\\big(\\mu^{(i)}(\\bm{\\alpha})\\cdot e^{s|\\bm{\\alpha}|}\\cdot\\prod_{k=1}^{r}f_{k}(s)^{\\alpha_{k}}\\big),and \\intertext{and hence } f_{i}(2s)= & f_{i}(s)=\\sum_{\\bm{\\alpha}\\in\\mathbb{n}^{r}}\\big(\\mu^{(i)}(\\bm{\\alpha})\\cdot e^{2s|\\bm{\\alpha}|}\\cdot\\prod_{k=1}^{r}f_{k}(s)^{\\alpha_{k}}\\big ) .",
    "\\qedhere\\end{aligned}\\ ] ]    as in the classical case , theorem [ teo : caratterizzazione_funz_gen_momenti_durata ] provides a property of the moment - generating function @xmath203 .",
    "[ cor : valore_funz_generatrice_momenti_in_zero_meno ] define @xmath204 , @xmath205 , then @xmath206    let @xmath172 and @xmath207 be the distribution of probability of @xmath197 , that is @xmath208 and @xmath209 , with @xmath210 .",
    "then @xmath211=p^{\\left(i\\right)}_{\\infty}\\cdot e^{s\\cdot\\infty}+\\sum_{n\\geq0}p^{\\left(i\\right)}_{2n}\\cdot e^{2sn},\\ s\\in\\mathbb{r}.\\ ] ] so , @xmath212 we have @xmath213 and @xmath214 @xmath215 then , from the dominated convergence theorem , we obtain @xmath216 another consequence is a connection between @xmath203 , and the extinction probability of the multitype galton - watson processes .",
    "[ cor : legame_funz_generatrice_mom_prob_estinzione ] denote @xmath217 , then @xmath218 where @xmath219 is the multitype generating function related to the offspring distribution @xmath0 ( see ( * ? ? ?",
    "* chapter v ) ) .",
    "moreover , @xmath220 .",
    "note that @xmath221 and from we have that @xmath222 and so @xmath223 thus , from the theorem [ teo : caratterizzazione_funz_gen_momenti_durata ] and the theorem of dominated convergnce , we have that @xmath224 and so @xmath225 . to proof the second part of the corollary it s enough to note that @xmath205,@xmath226 where @xmath171 is a @xmath0-gw tree , and @xmath227 is the galton - watson process related to the tree .",
    "then , by corollary [ cor : valore_funz_generatrice_momenti_in_zero_meno ] and the defintion of the extinction probability @xmath228 , we get @xmath229 and so @xmath220 .",
    "we now characterize the offspring distribution of the the full binary trees with survivals .",
    "a _ full binary tree with survivals _ is a @xmath0-gw tree @xmath230 , equipped with the type - ordering offspring ( see definition [ def : nostro_ordine_tipi_figli ] ) , and such that the offspring distribution @xmath0 is the following @xmath231 where @xmath232 and @xmath233 .",
    "the vertices which produce only one vertex is called the _ survivals _ and the vertices which produced two vertices are called _ fathers_. + when @xmath234 no survivals are expressed in the trees and the model is called _ full binary trees without survivals _ , or , simply _ full binary trees_.    [ oss : ordinamento_figli_albero_binarrio_con_nostro_ordine ] note that , according to the type - ordering offspring defined in in section 2 , when a vertex of type @xmath5 produces two vertices then the first one ( the left one ) is a type 1 vertex and the second one ( the right one ) is a type 2 vertex .",
    "this holds both for the full binary trees and for the full binary trees with survivals .",
    "[ oss : root_destra_o_sinistro ] from now on , if a full binary tree with survivals ( or without survivals ) starts with a type @xmath155 vertex , then the root is considered a left vertex or a right vertex respectively if @xmath235 or @xmath236 .",
    "morevoer , in the following sections we consider trees starting with a type 1 vertex ( the same arguments are verified with a type 2 root ) .",
    "now , we consider the full binary trees with survivals .",
    "every particles may live for an unit time interval ( with probabilities @xmath237 , @xmath238 ) and then it may _ die _ ( with probabilities @xmath239 , @xmath240 ) or live for another unit time interval ( @xmath237 , @xmath238 ) after producing a new particle of the other type ( with probabilities @xmath241 , @xmath242 ) .",
    "so , at the extinction we can only count how many particles of each type have been produced .",
    "our purpose is to find the likelihood of the number of type 1 and type 2 fathers , conditioning to the a.s .",
    "finiteness of the tree . in the next corollary",
    "we give the condition for the finiteness of full binary trees with survivals .",
    "* if @xmath251 then @xmath252 \\displaystyle\\frac{q_{0}\\left(p_{0}+p_{2}\\right)}{p_{2}\\left(q_{0}+q_{2}\\right)}\\geq \\frac{p_{2}q_{2}+q_{0}p_{2}}{p_{2}\\left(q_{0}+q_{2}\\right)}=1 , \\end{cases}\\ ] ] and , by corollary [ cor : valore_funz_generatrice_momenti_in_zero_meno ] , we have that @xmath253 * if @xmath254 then from the corollary [ cor : legame_funz_generatrice_mom_prob_estinzione ] ; we can use ( * ? ? ?",
    "* theorem  2 , pag .",
    "186 ) obtaining that @xmath255          * @xmath261 is number of type 1 fathers in @xmath4 ; * @xmath262 is number of type 2 fathers in @xmath4 ; * @xmath263 is number of type 1 survivals in @xmath4 ; * @xmath264 is number of type 2 survivals in @xmath4 .    at first",
    ", we want to compute the joint distribution of the number of fathers and survivals for each type , @xmath265 where @xmath57 and @xmath266 .",
    "+ the case @xmath267 is not included , see remark [ oss : root_destra_o_sinistro ] . to compute the probability",
    ", we note that the type 1 leaves is equal to @xmath54 and the number of the type 2 leaves is equal to @xmath15 . from the  ( ) \" encoding and lemma [ lem : problema_conteggio_padri_con_parentesi ] in section [ sec : sezione_2 ] , the number of full binary trees having @xmath15 left fathers and @xmath16 right fathers is @xmath268 .",
    "now we insert the survivals , i.e.  @xmath269 .",
    "we can choose the @xmath270 survivals type 1 vertices among @xmath271 type 1 vertices of the tree , excluded the last one that is certainly a leaf .",
    "for the same reason , @xmath272 can be chosen among @xmath273 vertices .",
    "thus , the probability becomes @xmath274 where @xmath275 and @xmath276 .",
    "the negative binomial distribution implies that + @xmath277 and @xmath278 .",
    "hence @xmath279 if we denote @xmath280 we get the likelihood of the fathers of the full binary trees ( with survivals ) .",
    "let @xmath281 be a full binary tree with survivals such that @xmath260 .",
    "it @xmath4 has @xmath15 left fathers and @xmath16 right fathers , with @xmath57 and @xmath58 , then the likelihood reads @xmath282 where parameters @xmath18 and depending only from the offspring distribution @xmath0 of the tree .    as a consequence , from the theory of the likelihood estimators ( see for instance @xcite ) ,",
    "the estimators of the parameters @xmath283 , @xmath284 are @xmath285 \\displaystyle \\widetilde{q}=\\frac{n}{m+n } \\end{cases},\\text { where } \\tilde{p},\\tilde{q}\\in\\left(0,1\\right),\\ ] ] and hence @xmath286      _ invariance principles for spatial multitype galton - watson trees _ , gregory miermont , annales de linstitut henri poincar -probabilities et statistiques , 2008 , vol.44 , no.6 , 1128 - 1161 .",
    "_ random trees and spatial branching processes _ , jean - francois le gall , from a dea course at paris 6 in 2000 and a course given at maphysto in 2000 ( pdf , 80 pages ) .",
    "_ branching processes _ , k.b.athreya and p.e.ney , springer - verlag , 1972 .",
    "_ narayana numbers and schur - szego composition _ , v.p .",
    "kostov , a.m .-",
    "finkelshtein , b.z .",
    "shapiro , journal of approximation theory 161 ( 2009 ) 464 - 476 .",
    "_ fibonacci and catalan numbers _ , ralph p. grimaldi , wiley , 2012 .",
    "_ combinatory analysis : volumes 1,2 bound in one volume _ , percy a. macmahon , 3 ed . , new york",
    ": chelsea publishing company , 1984 .",
    "_ likelihood ( expanded edition ) _ ,",
    "a.  w.  f.  edwards , cambridge university press , 1972 . _ ising critical exponents on random trees and graphs _ , s.  dommers , c.  giardin and r.  van der hofstad , commun .",
    "328 , 355 - 395 ( 2014 ) . _ the weak limit of ising models on locally tree - like graphs _ , a.  montanari , e.  mossel and a.  sly , probab .",
    "theory relat .",
    "fields , 152:31 - 51 , 2012 .",
    "_ random graphs and complex networks , vol .",
    "i _ , lecture notes in preparation , r.  van der hofstad , july 11 2014 .",
    "_ reconstruction on trees and spin glass transition _ , m.  mzard and a.  montanari , journal of statistical physics , vol .",
    "124 , no .",
    "6 , september 2006 .",
    "_ broadcasting on trees and the ising model _ , w.  evans , c.  kenyon , y.  peres and l.j .",
    "schulman , the annals of applied probability , vol .",
    "10 , no .  2 , 410 - 433 , 2000 .",
    "_ an introduction to superprocesses _ , alison m. etheridge , university lecture series , vol.20 , american mathematical society ."
  ],
  "abstract_text": [
    "<S> we present two models of multitype galton - watson trees , that we call _ full binary trees _ and _ full binary trees with survivals_. we show relevant relations between these trees and the _ narayana numbers _ and the _ two - dimensional decompositions of integers_. we prove further statistical results on our models concerning the related _ contour processes _ and _ offspring distributions_. </S>"
  ]
}
{
  "article_text": [
    "in the classical traveling salesman problem ( tsp ) , we are given a ( weighted ) graph @xmath0 and the task to find a shortest roundtrip that visits every vertex precisely once .",
    "this reflects the situation where a salesman has to visit a set of customers and return to his initial position .",
    "however , a salesman may be confronted with competitors who are eager to sign up the same clientele  giving a new twist to the old motto `` first come , first serve '' .",
    "this situation motivates the _ `` competitive salesmen problem '' _ ( csp ) :    we are given a ( directed or undirected ) road system , i.e. , a graph @xmath0 and the locations of the customers , i.e. , a subset @xmath1 of the vertices .",
    "there are two players , i and ii , with starting positions @xmath5 and @xmath6 , and an initial score of zero .",
    "starting with i , both players take turns moving by changing from the current location to an adjacent vertex . depending on the scenario , players may or may not be allowed to pass . at any given time , both players know of their own and their opponent s position as well as about all the remaining vertices with customers .",
    "if a player reaches a vertex with a customer , his score is increased by one , and the vertex is removed from the set @xmath2 of still available customers , but not removed from @xmath7 . the game ends when no further customers can be captured , i.e. , when @xmath8 or when no player has a path to an uncaptured customer .",
    "whoever has a higher score at the end of the play , wins .",
    "if both players end up with the same score , the game is tied .",
    "an immediate generalization is to consider two competing teams of salesmen ; in the csp@xmath9 , a move of player i consists of moving one of his @xmath10 pieces , while player ii has the choice between one of his @xmath11 pieces .",
    "the csp is a _",
    "combinatorial game_. see  @xcite for classical references on this well - studied area , and  @xcite for other related papers .",
    "here we just note an important distinction for the outcome of games that are not won by either player :    a game that is won neither by i nor by ii is called    * _ tied _ , if it ends with both players having the same score , * _ drawn _ , if it does not end .    throughout this paper ,",
    "we mostly concentrate on the case of an undirected graph .",
    "some of the results include the directed case , but we do point out some additional difficulties in one interesting case . throughout the paper ,",
    "there are a number of illustrations ; in these figures , the set @xmath1 is indicated by circled dots . without loss of generality ,",
    "we assume that a start vertex never belongs to @xmath2 ; in several cases , a start vertex is indicated by a hexagon .",
    "the rest of this paper is organized as follows . in section  [",
    "se : complexity ] , we show that the csp is pspace - complete , even for the case of bipartite undirected graphs , with both players starting at distance 2 from each other . in section  [ se : common ] , we discuss the situation in which both players start from the same vertex .",
    "we show that even in this case , player i may not be able to avoid a loss , and that there may be draws .",
    "we also show that in the case of bipartite graphs , player i can avoid a loss .",
    "we also show that this result does not apply to directed graphs . in section  [ se : trees ] , we give some results and open problems for the special case of trees , and section  [ se : stars ] considers the further restriction to trees with only one vertex of degree higher than two .",
    "while the tsp on directed or undirected graphs is merely np - complete , the two - player competitive game csp turns out to be pspace - complete .",
    "[ th : pspace ] the decision problem whether player  i can win in csp@xmath12 is pspace - complete , even for the special case of bipartite graphs , with both players starting at distance 2 from each other .",
    "a _ position _ in csp@xmath9 is a quintuple @xmath13 , where @xmath14 indicates whether player  i or player  ii moves from the position , @xmath0 is the ( di-)graph on which the game is played , @xmath15 is the current set of uncaptured customers ; and @xmath16 and @xmath17 are the vertices on which player  i and player  ii reside .",
    "a draw can be declared after a position is repeated , that is , when a new position is encountered which is identical to a previous one .",
    "identical positions can be detected by sequentially storing all the positions from the position at which @xmath15 was last diminished until it decreases again , beginning with the original @xmath2 .",
    "if there are @xmath10 and @xmath11 salesmen for the two sides , at most @xmath18 positions have to be stored between any two consecutive changes of @xmath15 , where @xmath19 . if @xmath10 and @xmath11 are fixed , this is of polynomial size in the input size , in particular , if @xmath20 .",
    "therefore , for fixed @xmath10 and @xmath11 , csp@xmath21 pspace .    to see that csp@xmath12 is pspace - hard , we describe a reduction from quantified 3sat ( q3sat ) , where the boolean formula @xmath22 , containing @xmath23 clauses and @xmath4 variables , is in conjunctive normal form with 3 literals per clause .    for technical reasons , and without loss of generality , we shall make the following assumptions .    *  the number @xmath4 of variables is even ; because otherwise we may postfix @xmath22 with @xmath24 .",
    "*  there is a clause which contains a true literal and a false literal for every truth assignment of the variables ; because if such a clause does not exist , then we can postfix @xmath22 with @xmath25 .    from a given instance of q3sat",
    ", we construct an instance of csp@xmath12 by specifying the graph @xmath0 on which it is played . for simplicity and clearer drawings ,",
    "we first construct a graph that contains some odd cycles in the subgraphs representing the clauses .",
    "it is straightforward to turn this graph into a bipartite one , by subdividing all the original edges , in effect doubling all distances .",
    "we proceed to describe @xmath26 by listing all vertices and edges of the construction . in the following , we use @xmath27 for simpler notation .",
    "different parts of the construction are shown in figure  [ fi : variables ] for the variable gadget , in figure  [ fi : clause ] for the @xmath23 clause gadgets , and in figure  [ fi : cache ] for a cache gadget .",
    "@xmath28    we single out the subset of @xmath7 on which customers reside : @xmath29    = .80     = .80     = .80     the initial vertices for player  i and player  ii are @xmath30 and @xmath6 , respectively .",
    "note that @xmath31 , @xmath32 .",
    "the construction is clearly polynomial .",
    "an example with @xmath33 is depicted in figure  [ fi : variables ] .",
    "( note that this yields @xmath34 . )",
    "a clause gadget is shown in figure  [ fi : clause ] . to avoid cluttering the figure , some of the edges connecting the _ diamonds _ (",
    "the subgraphs induced by @xmath35 ) with other parts of the construction are only shown symbolically .",
    "figure  [ fi : cache ] shows the structure of the remaining part .",
    "the vertices @xmath36 induce a collection of _ feedback paths _ that connect the _ triangles _",
    "@xmath37 in the gadget representing clause @xmath38 to the variable representations of the literals @xmath39 , @xmath40 , and @xmath41 .",
    "it will be useful to designate the subgraph of @xmath26 induced by @xmath42 , @xmath43 as the _ cache part _ @xmath44 of @xmath26 , and the subgraph of @xmath26 induced by @xmath45 as the _",
    "main part _ @xmath46 .",
    "* remarks*.    *  we have @xmath47 , @xmath48 , and a player wins by collecting at least @xmath49 customers . *  moving from the main part to the cache part takes longer than visiting all vertices of the main part . *  in the proof we shall see that in every play on @xmath26 , all the customers are captured . only after capturing at least @xmath50 customers in the main part",
    "can a player win by moving to the cache part .",
    "for by ( a ) , @xmath51 .",
    "thus , a player who captured precisely @xmath50 customers in the main part and then goes for the cache part before the opponent starts to do so wins by at least one customer .",
    "here is the `` regular '' play on @xmath26 .",
    "we shall see later that `` small '' deviations are compatible with regular play , but `` large '' deviations lead to the defeat of the deviator .",
    "the players move down their respective sides of the `` ladders '' formed by the @xmath52 , and traverse the diamonds according to their chosen truth assignments in the given instance of q3sat , i.e. , traversing @xmath53 if @xmath54 , otherwise traversing @xmath55 . in this manner , player i gets to assign the `` odd '' , i.e. existentially quantified , variables , while ii gets to assign the `` even '' , i.e. , all - quantified , variables . after this stage ,",
    "i makes the move @xmath56 .",
    "player  ii now selects a clause @xmath57 by moving from @xmath58 to @xmath59 .",
    "this is matched by the move @xmath60 of i. while ii traverses @xmath61 , player  i selects the literal within @xmath57 to which ii should move .",
    "player  i enforces this by capturing the other two of the customers in the triangle @xmath62 .",
    "then ii captures the remaining @xmath63 . following the feedback path incident to @xmath64 , i takes @xmath65 moves to get to a suitable literal , say @xmath66 , on one of the diamonds , and ii takes the same number of moves from @xmath63 along its feedback path to a literal , say @xmath67 , on a diamond .    at this stage",
    "each of the players has captured @xmath68 customers along the ladders , and @xmath69 customers on the diamonds ; i has also captured two customers on the triangle @xmath70 , and possibly a customer on @xmath66 .",
    "thus i has captured @xmath71 plus 2 or plus 3 customers .",
    "player  ii has captured two customers on @xmath72 and one on @xmath70 , possibly also one on @xmath67 .",
    "thus ii has now captured @xmath73 plus 3 or plus 4 customers .",
    "suppose first that ii can win in the given instance of q3sat .",
    "this means that for any truth assignment of the variables of player  i , player  ii can assign truth values so that at least one clause @xmath57 is false , i.e , all the literals in @xmath57 have value 0 . in terms of regular play",
    ", this means that ii captured a customer on @xmath67 .",
    "thus ii captured @xmath71 plus 4 customers , at least one more than player  i. at this point i moves next .",
    "if i chooses to move straight to the cache part , player i will capture a total of at most @xmath74 . by restricting himself to the main part",
    ", ii can capture all the rest , namely @xmath49 , so ii wins by precisely one customer .",
    "therefore player  i will make some other move , e.g. , the move @xmath75",
    ". then ii responds by moving to the cache part . by remark  ( c )",
    ", ii thus wins in the constructed instance of csp@xmath12 by precisely one customer .",
    "secondly , suppose that player  i can win in the given instance of q3sat .",
    "this implies that player  i can assign truth values such that for any truth assignment of ii , every clause contains at least one true literal . in terms of regular play on the constructed instance of csp@xmath12 , this means that player  i can arrange that @xmath67 will already have been captured during the initial diamond traversal , so ii will have captured only @xmath76 customers up to and including the feedback edge traversal .",
    "we consider two cases .    *",
    "the clause @xmath57 selected by ii contains a false literal , say @xmath77 .",
    "then i continues according to regular play , playing in the triangle @xmath70 such that ii is `` forced '' to move to @xmath78 , and i himself moves to @xmath77 .",
    "then player  i will have captured @xmath76 customers , the same as ii .",
    "it is now the turn of i. as above it is seen that if i moves immediately to the cache part , he loses by one customer .",
    "a better move for i is @xmath79 .",
    "now ii can not afford to let i take the cache , so ii has to move @xmath80 .",
    "this allows i to take a remaining customer on a literal vertex , maintaining a distance of @xmath81 to the cache .",
    "ii still has to guard the cache by limiting his distance from @xmath82 to at most @xmath83 , and is thus forced to move @xmath84 .",
    "eventually , i picks up all remaining literal customers by going via @xmath85 . in a similar manner",
    ", i can collect all remaining customers in the main part : first i picks up all remaining customers at vertices @xmath86 , which have distance @xmath87 from the cache .",
    "this is possible without exceeding this distance ; at the same time , ii can not afford to move to the same distance from the cache , as this would leave the cache unguarded .",
    "next , i can move on to collecting the vertices @xmath88 ( which have distance @xmath89 from the cache ) one by one , and finally collect the vertices @xmath59 , which have distance @xmath90 . at this point",
    ", i has won the game .",
    "*  the clause @xmath57 selected by ii contains no false literal .",
    "then i deviates slightly from regular play , by moving to a clause , say @xmath91 , which does contain a false literal @xmath92 .",
    "such a clause exists by assumption  ( 3 ) above .",
    "after i captures two customers in @xmath93 , i moves to @xmath92 , having thus far captured @xmath94 customers .",
    "then player  i continues as in the case ( i ) , winning .",
    "note that the 3 paths leading out from @xmath57 to the diamonds all end in literals whose customers have already been captured , and that i wins independently of whether ii captures one , two or three customers in @xmath70 .",
    "we have shown that if the players stick to regular play , then player  i can win in q3sat if and only if player  i can win in csp@xmath12 .",
    "it remains to check nonregular play .",
    "first of all , not proceeding down a ladder ( say , to collect a customer at @xmath85 or at an additional literal vertex ) takes at least two moves per additional customer .",
    "this lets the other player change over to the deviator s side of the ladder , continue in a zig - zagging fashion back and forth between both sides of and down the ladder , and thus continue to collect one customer per move .",
    "therefore , the violator loses in the balance , compared to regular play .",
    "furthermore , remark ( c ) above implies that if either player goes for the cache part at any point during the diamond traversal before having traversed a feedback edge , then that player loses , since a minimum of @xmath50 captures have to be made by a winning player in the main part prior collecting the cache .",
    "if ii loses in csp@xmath12 , ii can possibly use a feedback edge leading back to a literal @xmath77 whose customer has not been captured during the diamond traversal , by using a vertex of @xmath70 whose customer was already captured by i. but then the balance of customers captured by ii up to the capture at @xmath77 is unchanged , and i still wins .",
    "conversely , if ii wins in csp@xmath12 , player  i might traverse a feedback edge after having captured only one customer on a triangle @xmath95 ( possibly @xmath96 ) , hoping to capture enough customers during a second traversal of the diamonds , before ii will have captured enough .",
    "an easy accounting argument , left to the reader , shows that player  i can not muster a sufficient supply of customers with this maneuver .",
    "@xmath97    it is not hard to see that the above construction can be modified to establish a proof of the pspace - completeness of the csp on bipartite directed graphs without antiparallel edges .",
    "furthermore , it can be modified to cover the scenario in which both players move simultaeneously : after scaling edge lengths by a factor of two , give player i a headstart of one move .",
    "the result in the previous section shows that deciding the outcome of a csp instance is quite difficult , even when both players start very close to each other , and the graph is bipartite . in this section ,",
    "we concentrate on the natural special case in which both players start from the _ same _ vertex . as it turns out , this scenario is quite different .",
    "[ th : bipartite ] for the csp on bipartite graphs with both players starting at the same point , player i can avoid a loss .    by way of contradiction , suppose player ii has a winning strategy , and both players start from vertex @xmath98 .",
    "now suppose i moves to vertex @xmath99 , and ii can counter this move by @xmath100 .",
    "in the following , let i visit any sequence of vertices @xmath101 by assumption , ii has a winning strategy , so there is a sequence of moves @xmath102 that ends with ii capturing an absolute majority of customers .",
    "note that each @xmath103 is determined by the sequence @xmath104 ; by induction , we can write @xmath105 to indicate that i s move to @xmath106 was successfully countered by ii by moving to @xmath103 .",
    "now consider , for any sequence @xmath107 of moves by ii , the following sequence of moves for i : @xmath108 this means that player i gives up two moves by moving to any neighbor @xmath109 and back to @xmath98 , thereby giving player ii a head start of 1 1/2 moves .",
    "then i plays against a `` phantom player '' ii that is one move lagging behind the real player ii , i.e. , precisely 1/2 move ahead of i , which allows i to `` steal '' the assumed second player s strategy against such a player .    by assumption , the above is a well - defined sequence of moves for i. therefore , player i wins more than half of the customers against ii , but ii wins more than half of the customers against i. hence , there must be a customer ( say , at vertex @xmath110 ) that i reaches before ii , but that ii reaches before i. therefore , i must be moving to vertex @xmath110 when ii is already there , and just before ii gets there .    this is a contradiction to the bipartiteness of @xmath26 : after a move of i , both players must always occupy vertices of opposite color , so @xmath111 can not reach @xmath110 with ii positioned on that vertex .    therefore , ii can not have a winning strategy , proving the claim .    @xmath97    note that the theorem remains valid for directed graphs , if there is a single pair of anti - parallel edges that allows i to leave and return to @xmath98 in just two moves .",
    "the following example ( courtesy of david wood ) shows that the possibility of moving back to @xmath98 is crucial for the proof : in the absence of an undirected edge at @xmath98 , player i may be limited to winning a single customer .",
    "[ th : wheel ] there is a family of instances of csp on directed graphs in which i can not win more than 1 out of @xmath4 customers .",
    "= .44     consider the graph shown in figure  [ fi : wheel ] .",
    "the initial vertex for both players is denoted by @xmath98 , the vertex set @xmath2 is indicated by the circled vertices .",
    "suppose i starts by moving to vertex @xmath112 ; then ii responds by moving to vertex @xmath113 . now",
    "the rest of the game is determined , and i only wins the customer at @xmath112 .",
    "@xmath97    for non - bipartite graphs , i may lose , even on undirected graphs , provided passing is not allowed .",
    "[ th : q.wins ] there are instances where i can not avoid a loss , even if both players start from the same vertex .",
    "consider the graph shown in figure  [ fig : q.wins ] .",
    "the initial vertex for both players is denoted by @xmath98 , the vertex set @xmath2 is indicated by the three circled vertices .",
    "= .44     player i is in a zugzwang situation : suppose i starts by moving to vertex @xmath114 ; then ii moves to vertex @xmath115 .",
    "if then i moves back to @xmath98 , ii moves on to @xmath116 ; it is straightforward to check that now ii will force a win by taking the customer at @xmath117 and at least one of @xmath118 and @xmath119",
    ". hence we can assume that i s second move is to @xmath118 .",
    "however , this is answered by ii by moving to @xmath116 , and i can not prevent ii from taking both @xmath117 and @xmath119 .    therefore consider the case where i starts by moving to @xmath115 ; ii responds by moving to @xmath114 . as in the previous case",
    ", ii wins by moving to @xmath118 if i moves back to @xmath98 .",
    "hence we can assume that i s second move is to @xmath116 , followed by ii moving to @xmath118 , securing the first customer .",
    "regardless of i s next move , ii can again force a win by taking at least one of the remaining two customers .",
    "this concludes the proof .",
    "@xmath97    an immediate consequence is the following :    [ th : draw ] there are instances where optimal play from both i and ii forces a draw , even if both players start from the same vertex .",
    "consider the graph shown in figure  [ fig : draw ] .",
    "the initial vertex for both players is denoted by @xmath98 , the vertex set @xmath2 is indicated by the three circled vertices .",
    "= .44     suppose player @xmath120 is the first to move to one of the vertices in @xmath121 , while the other player @xmath122 has not left the vertex set @xmath123 .",
    "then the analysis of theorem  [ th : q.wins ] shows that player @xmath122 can force a win by moving to the other vertex in @xmath124 .",
    "therefore , neither of the players is willing to leave the set @xmath123 , resulting in a draw .",
    "our proof of theorem  [ th : bipartite ] is purely existential .",
    "furthermore , there is still no proof that player i can not just avoid a loss , but also avoid a draw , and end the game with a win or a tie .",
    "[ co : force ] for the csp on trees , one of the players can force a win or a tie .    in particular , this implies that for the case of identical starting point and an odd number of customers , player i always wins the game .",
    "we have a pretty good idea how to tackle this problem ; a constructive argument may use bookkeeping on subsets of customers , and the number of moves necessary to collect them and return to a previous position .",
    "( this means generalizing the idea of playing against a phantom player , and arguing that on trees it can only be an advantage to have extra moves to spare . ) we hope to finish this argument at a later time . but",
    "even if this works out , the resulting construction is exponential in size and rather awkward .",
    "it would be a lot more satisfying to have a simple strategy that guarantees a win for player i.    however , there are a number of difficulties that are indicated by the following observations .",
    "[ th : vorsprung ] there are instances of csp on trees , with both players starting from the same vertex @xmath98 , the number of customers being @xmath125 , and the only way for player i to win allows ii to potentially collect @xmath11 customers before i reaches even a single customer .",
    "consider the graph shown in figure  [ fi : vorsprung ] .",
    "it has @xmath11 customers at an intermediate distance from the starting vertex @xmath98 , and at twice that distance from each other .",
    "furthermore , there is a cluster of @xmath126 customers at a large distance from @xmath98 , but at a small distance from each other .",
    "= .21     if i starts by taking one of the nearer customers , ii collects all the distant customers and wins . on the other hand",
    ", ii may take all the near customers before i takes one of the distant ones .",
    "@xmath97    [ apriori ] consider instances of csp on trees , where both players start on the same vertex @xmath98 . in general , player i can not avoid a loss by adapting an a - priori strategy , i.e. , by prioritizing the customers in an appropriate way , and always trying to collect the customer with the highest priority .",
    "consider the graph shown in figure  [ fi : apriori ] .",
    "it consists of a symmetric tree with nine customers at the leaves , grouped into three triples .",
    "= .75     without loss of generality , assume that @xmath114 is the first customer on i s list ; furthermore , assume that @xmath116 is the first customer on the list that is none of @xmath114 , @xmath115 , @xmath118 .",
    "then it is straightforward to check that ii can collect the customers @xmath127 , @xmath117 , @xmath128 , @xmath119 , @xmath129 without any interference from i , thus winning the game : in order to win , i would be forced to visit customers from all three different clusters , which takes longer than ii needs to collect all five customers .",
    "@xmath97    finally , player ii can limit his losses in a natural special case . a rather involved argument for the following",
    "can be found in the fourth author s thesis .",
    "we omit this proof , as we believe that there should be a relatively simple argument ; in particular , a proof of conjecture  [ co : force ] as described should do the trick .",
    "[ q.tree ] consider an instance of the csp where the graph @xmath26 is a tree @xmath3 and both players start at the same vertex @xmath98 .",
    "suppose all customers are positioned at leaves of the tree",
    ". then player ii can avoid a loss by more than one customer .",
    "in particular , ii can avoid a loss when the number of customers is even .",
    "it may be easier to come up with a strategy for the class of csp instances in which the graph @xmath26 is a star , i.e. , a tree @xmath3 with at most one vertex of degree higher than two .",
    "again , we consider both players starting from the same vertex . if customers are only contained in leaves , it is not hard to see that there is a simple optimal strategy for both players , by always choosing the nearest free customer when returning to the central node .",
    "= .44     however , it is straightforward to see that the example in figure  [ fi : star ] can not be won using this approach : if i collects all five customers along the longest ray , ii gets all customers along the other two rays .",
    "similarly , it follows that i loses when trying to pick up all the customers along a single ray .",
    "we leave it to the reader as an exercise to work out a winning strategy for this instance .",
    "in this paper we have introduced the competing salesman problem .",
    "many open problems remain . besides the ones mentioned directly or indirectly throughout the paper , there are many more .",
    "one of the more interesting scenarios may be a continuous geometric version , in which customers are points in some space of fixed dimension , and the players move continuously or in discrete portions along arbitrary paths .",
    "clearly , this introduces additional difficulties .",
    "as there are innumerable variants of the tsp , due to many different practical constraints , requirements , or objective functions , it is quite conceivable that there are many more related games .",
    "one such variant ( called the freeze tag problem , ftp ) has been considered in  @xcite , where a set of cooperating players have to awake each other , and any awake player can awake a sleeping player by moving next to him . in the original game of freeze tag ,",
    "there are two competing teams , and one wins if it can freeze all opposing players , while the second one tries to avoid this permanently .",
    "some of this work was stimulated and motivated by the dagstuhl seminar on algorithmic combinatorial game theory , 1722 february , 2002 , organized by erik demaine , rudolf fleischer , aviezri fraenkel , and richard nowakowski .",
    "we thank all participants for contributing to the fruitful atmosphere of this workshop , in particular david wood for pointing out the example in theorem  [ th : wheel ] .",
    "earlier parts of this work originated from work on the fourth author s diploma thesis  @xcite ; other parts of this paper were written during a stay at the department of computer science and software engineering , university of newcastle , nsw , australia , where sndor fekete was supported by a visiting researcher grant .",
    "rudolf fleischer s work described in this paper was partially supported by a grant from the research grants council of the hong kong special administrative region , china ( project no .",
    "hkust6010/01e ) .      e.  m.  arkin , m.  bender , s.  p.  fekete , j.  s.  b.  mitchell , m.  skutella .",
    "the freeze - tag problem : how to wake up a swarm of robots .",
    "13th acm - siam symposium on discrete algorithms _ , 2002 , pp ."
  ],
  "abstract_text": [
    "<S> we propose the `` competing salesmen problem '' ( csp ) , a 2-player competitive version of the classical traveling salesman problem . </S>",
    "<S> this problem arises when considering two competing salesmen instead of just one . </S>",
    "<S> the concern for a shortest tour is replaced by the necessity to reach any of the customers before the opponent does .    </S>",
    "<S> in particular , we consider the situation where players take turns , moving along one edge at a time within a graph @xmath0 . </S>",
    "<S> the set of customers is given by a subset @xmath1 of the vertices . </S>",
    "<S> at any given time , both players know of their opponent s position . </S>",
    "<S> a player wins if he is able to reach a majority of the vertices in @xmath2 before the opponent does .    </S>",
    "<S> we prove that the csp is pspace - complete , even if the graph is bipartite , and both players start at distance 2 from each other . furthermore , we show that the starting player may not be able to avoid losing the game , even if both players start from the same vertex . </S>",
    "<S> however , for the case of bipartite graphs , we show that the starting player always can avoid a loss . on the other hand , we show that the second player can avoid to lose by more than one customer , when play takes place on a graph that is a tree @xmath3 , and @xmath2 consists of leaves of @xmath3 . </S>",
    "<S> it is unclear whether a polynomial strategy exists for any of the two players to force this outcome . for the case where @xmath3 is a star ( i.e. , a tree with only one vertex of degree higher than two ) and @xmath2 consists of @xmath4 leaves of @xmath3 </S>",
    "<S> , we give a simple and fast strategy which is optimal for both players . </S>",
    "<S> if @xmath2 consists not only of leaves , we point out that the situation is more involved .    </S>",
    "<S> [ section ] [ theo]conjecture    combinatorial games , complexity , pspace - completeness , strategy stealing , traveling salesman problem ( tsp ) , competing salesmen problem ( csp ) .    68q25 , 90d43 , 90d46 </S>"
  ]
}
{
  "article_text": [
    "certain wave problems exhibit the property that behind the wave front travelling at a finite speed there exists a smooth tail .",
    "the simplest examples of this phenomenon are the scalar wave equation in even dimensions or damped wave equation in any dimension .",
    "recently the interest in the numerical solution of scalar and vector linear wave equations by means of time - domain boundary integral equations has risen sharply @xcite .",
    "two main approaches to the discretization are time - space galerkin methods @xcite and convolution quadrature ( cq ) @xcite .",
    "the difficulty that arises in applying time - domain boundary integral methods to dissipative or two - dimensional wave equation can best be appreciated by comparing the free space green s functions for the two and three dimensional acoustic wave equation @xmath0 where @xmath1 is the heaviside function and @xmath2 is the dirac delta . here",
    "we see that whereas in three dimensions the support of the green s function is on the time - cone @xmath3 , in two dimensions the green s function is non - zero for all @xmath4 and the decay in @xmath5 is slow .",
    "this infinite tail forces an infinite memory on time - domain boundary integral equation based methods that results in expensive long - time computations .",
    "this will affect any numerical method based on time - domain integral equations  in particular both time - space galerkin and convolution quadrature .",
    "the smoothness of this tail has been used in @xcite and @xcite to speed up computations and more importantly for the current work , in @xcite it was noticed that this tail is due to an operator of parabolic type ; the precise meaning of this is explained in the next section .",
    "this fact was used in @xcite for purely theoretical purposes whereas in this paper it will be used to develop a fast algorithm with reduced memory requirements . our new algorithm",
    "applied to the tail of the linear hyperbolic problems has essentially the same properties as the algorithms developed in @xcite for parabolic problems . to be more precise ,",
    "let @xmath6 where @xmath7 is the time - step and @xmath8 is the scatterer ; in other words @xmath9 for all @xmath10 in the above .",
    "fast cq algorithms for hyperbolic problems , see  @xcite , can compute the first @xmath11 steps in @xmath12 or @xmath13 time and @xmath14 memory and history . denoting by @xmath15 the number of time - step after @xmath11 , in the following",
    "we discuss the additional cost required for a target accuracy @xmath16 .    *",
    "the computational complexity is @xmath17 . *",
    "the number of evaluations of the transfer operator @xmath18 is reduced from @xmath19 to @xmath20 . *",
    "the memory requirements are reduced from @xmath19 to @xmath21 .",
    "the structure of the paper is as follows . in the next section we consider an abstract setting that covers the motivating application described above .",
    "next , runge - kutta based convolution quadrature is introduced . in the main part of the paper ,",
    "the description and analysis of an efficient scheme to compute the convolution weights is described .",
    "the paper concludes with a more detailed description of the time - domain boundary integral method and with the results of numerical experiments .",
    "let @xmath22 be analytic as a function of @xmath23 in the sector @xmath24 and for some @xmath25 bounded as @xmath26 note that this in turn implies the standard bound for hyperbolic operators @xmath27 we are interested in computing convolutions @xmath28 where @xmath29 is the inverse laplace transform of @xmath30 .",
    "if @xmath31 , @xmath29 as a function of @xmath5 is continuous and the above convolution is a well - defined continuous function for integrable @xmath32 . for @xmath33 ,",
    "the convolution is defined directly via the inverse laplace transform @xmath34 where @xmath35 and @xmath36 denotes the laplace transform . for data @xmath32",
    "such that its laplace transform decays sufficiently fast , the inverse laplace transform above defines a continuous function , see @xcite .",
    "our aim is to describe an efficient algorithm for the computation of ( [ eq : conv ] ) .",
    "an important aspect of the algorithm is that it should be effective for a range of @xmath37 where @xmath38 is given .",
    "so far in the literature , fast algorithms have been considered in the non - sectorial , hyperbolic , case , i.e. , kernels satisfying ( [ eq : bound_nsect ] ) , @xcite . in the sectorial , parabolic , case ,",
    "i.e. , kernels bounded as @xmath39 fast algorithms which further allow huge memory savings are available @xcite .",
    "our kernel is strictly speaking non - sectorial , but after multiplication with @xmath40 becomes sectorial ; this is what was meant by tail being due to a parabolic operator .",
    "naturally , this special class of operators requires its own fast algorithms .",
    "time discertization methods used in this paper , are based on @xmath41-stable runge - kutta methods @xcite .",
    "we employ standard notation for an @xmath42-stage runge - kutta discretization based on the butcher tableau described by the matrix @xmath43 and the vectors @xmath44 and @xmath45^s$ ] .",
    "the corresponding stability function is given by @xmath46 where @xmath47 note that @xmath41-stability is equivalent to the condition @xmath48 for @xmath49 . in the following",
    "we collect all the assumptions on the runge - kutta method .",
    "these are satisfied by , for example , radau iia and lobatto iiic families of runge - kutta methods .",
    "[ as : rk ]    a.   [ as : rk - a ] the runge - kutta method is @xmath41-stable with ( classical ) order @xmath50 and stage order @xmath51 .",
    "b.   [ as : rk - b ] the stability function satisfies @xmath52 for all real @xmath53 . c.   [ as : rk - c ] [ strongly - a - stable ] @xmath54 d.   [ as : rk - d ] the runge - kutta coefficient matrix @xmath41 is invertible .    since @xmath55 is a rational function ,",
    "the above assumptions imply that @xmath56    we define the weight matrices @xmath57 corresponding to the operator @xmath18 by @xmath58 where @xmath59 denoting by @xmath60 the last row of @xmath57 , the approximation to the convolution integral at time @xmath61 is given by @xmath62 with the column vector @xmath63 .",
    "the convergence order of this approximation has been investigated in @xcite for parabolic problems , i.e. , for sectorial @xmath64 , and in @xcite and @xcite for hyperbolic problems , i.e. , for non - sectorial operators .    with the row vector @xmath65 defined as the last row of the @xmath66 matrix @xmath67 given by @xmath68",
    "we obtain an integral formula for the weights @xmath69 this resepresentation follows from cauchy s formula and the definition of the weights in , with the integration contour @xmath70 chosen so that it and surrounds the poles of @xmath71 .",
    "an explicit expressing for @xmath72 is is given by @xmath73 with the row vector @xmath74 ; cf .",
    "* lemma  2.4 ) .",
    "the @xmath41-stability assumption implies that the poles of @xmath55 are all in the right - half plane .",
    "further , due to the decay of the rational function @xmath55 , see , for @xmath75 , the contour @xmath70 can be deformed into the imaginary axis .    for the weight",
    "matrices it holds @xmath76 by ( * ? ? ?",
    "* lemma  2.4 ) , for @xmath77 , @xmath67 is the rank-1 matrix given by @xmath78 the runge - kutta approximation of the inhomogeneous linear problem @xmath79 at time @xmath80 is given by @xmath81 and thus the approximation of the convolution integral in   can be rewritten as  ( * ? ? ?",
    "* proposition  2.4 ) @xmath82 in the next section we discuss how to approximate the integral in   by an efficient quadrature rule .",
    "it turns out that there exists @xmath83 such that for @xmath84 for an offset @xmath11 proportional to @xmath85 the quadrature error decays exponentially in the number of quadrature nodes .",
    "the convergence rate depends on @xmath86 , but is independent of @xmath42 .",
    "this is the key observation for the fast algorithm explained in section  [ sec : fastalg ] , where we split the sum in   and use contour quadrature to approximate  .",
    "if @xmath64 is a sectorial operator , in @xcite it is shown that the contour in the integral formula for the weights @xmath87 in can be chosen as the left branch of a hyperbola with center at the origin and foci on the real axis . in @xcite both hyperbolas and talbot contours are tested and shown to work in practice . in the case of kernels considered here",
    ", the contour must not have a real part extending to @xmath88 .",
    "proposition  [ propn : trunc_error ] shows that cutting the hyperbola at a finite real part , commits a small error . for the proof we will require the following technical lemma .",
    "[ lemma : gamma ] let @xmath89    then @xmath90 $ ] for @xmath91 , it monotonically increases as @xmath92 and @xmath93 for all @xmath94 in the strip @xmath95 .",
    "further , there exists @xmath96 such that @xmath97 for all @xmath94 in the strip @xmath98 .    by assumption @xmath99 for all @xmath100 and @xmath101 , hence @xmath102 .",
    "further , @xmath103 can not be greater than @xmath104 , since this would contradict the approximation property @xmath105 the bound on @xmath55 is clear by the definition of @xmath103 .",
    "the remaining statement can be proved similarly , making sure that @xmath106 is less than the real part of any singularity of @xmath55 ; for a similar statement see lemma  1 in @xcite .",
    "some numerically obtained values of @xmath107 are given in table  [ tab : gamma ] .",
    "for backward euler @xmath103 is given explicitly by @xmath108 in order to reduce the number of constants in the estimates , we have chosen not to be as precise about the bound for the case @xmath109 .",
    "the optimality of the estimates has nevertheless not been significantly affected .",
    ".numerically obtained values of @xmath103 from lemma  [ lemma : gamma ] for different values of @xmath110 . [ cols=\"^,^,^,^\",options=\"header \" , ]     with this",
    "we have that the integrand in can be bounded as @xmath111 and thus it decreases exponentially with @xmath112 as long as @xmath113 and @xmath114 .",
    "this suggests replacing contour @xmath70 in with a finite section of a hyperbola : @xmath115 ) , \\qquad \\varphi(x ) = 1-\\sin(\\alpha-\\mi x ) , \\quad \\nu > 0.\\ ] ] we want the endpoint of the finite hyperbola to be in the left - half complex plane , i.e. , @xmath116 the right - most point on the hyperbola is given by @xmath117 } { \\operatorname*{re}}\\varphi(x ) = \\nu \\varphi(0 ) = \\nu(1-\\sin\\alpha ) < \\nu.\\ ] ]    the error commited in replacing @xmath70 with @xmath118 is investigated next .",
    "[ propn : trunc_error ] let @xmath119 and @xmath120 be given such that @xmath30 satisfies and let @xmath121 and @xmath122 be given such that @xmath123 . then for @xmath7 , @xmath124 , @xmath125 , @xmath126 and @xmath127 with @xmath128 , @xmath129 where @xmath130 , with @xmath131 in .",
    "let us choose the contour in as @xmath132 , where @xmath118 is defined by , @xmath133 and @xmath134 , where @xmath135 ; see figure  [ fig : contours ] .    to prove the required result we need to bound @xmath136",
    "is depicted by the solid line and @xmath137 and @xmath138 by the dashed lines .",
    "[ fig : contours ] ]    from the definition of @xmath139 , , property of @xmath64 and the fact that @xmath140 it follows that for @xmath141 @xmath142    hence @xmath143 finishes the proof .",
    "the next step is to define a quadrature on the interval @xmath144 $ ] and hence on the contour @xmath118 .",
    "since the integrand is small at the edges of the interval , trapezoidal quadrature is a good choice and the following result gives the quadrature error .",
    "[ propn : quad_error ] let @xmath119 and @xmath120 be given such that @xmath30 satisfies .",
    "let @xmath122 and @xmath145 be such that @xmath123 and @xmath146 .",
    "assume that @xmath7 and @xmath124 are small enough so that @xmath147 with @xmath106 as in lemma  [ lemma : gamma ] .",
    "for @xmath148 and @xmath149 let @xmath150}|{\\operatorname*{re}}\\varphi(a+\\tau/2+\\mi y)|   = -h \\nu_0 ( 1-\\sin(\\alpha+b)\\cosh ( a+\\tau/2)).\\ ] ] then for @xmath151 and @xmath152 where @xmath153 , and any @xmath154 it holds that @xmath155 for @xmath156 the smallest integer with @xmath125 , and @xmath157    let us first suppose that @xmath158 is analytic and bounded as @xmath159 for @xmath160 , @xmath161 .",
    "then it follows from lemma  [ lemma : trapez ] in the appendix that @xmath162}\\lvert\\mathbf{f}(a+\\tau/2+\\mi y)-\\mathbf{f}(-a-\\tau/2+\\mi y)\\rvert.\\ ] ] to finish the proof we need to first bound @xmath158 in the rectangles @xmath163 and @xmath164 , in a similar fashion as in @xcite .    by the assumptions on @xmath18 , for @xmath165 such that @xmath166 , the integrand is analytic in the rectangle @xmath163 .",
    "for any @xmath167 @xmath168 @xmath169    thus , if @xmath170 in , by using the second part of lemma  [ lemma : gamma ] we can bound the integrand for @xmath171 ( and thus the constant @xmath172 in ) as @xmath173 using now that @xmath174 we can estimate as in proposition  [ propn : trunc_error ] , with @xmath175 , @xmath176    for @xmath177 , we obtain instead @xmath178 and @xmath179 this finishes the proof .",
    "combining the two propositions gives the following theorem .",
    "[ thm : main ] under the conditions of proposition  [ propn : quad_error ] and with the same definition of @xmath180 @xmath181 with @xmath182 and @xmath157      we will first show that a good choice of the parameters exists resulting in an efficient algorithm . the optimal choice of parameters is discussed later .    to set the stage",
    "let us deal with the first term in the error estimate of theorem  4.5 in a way that is standard for oblivious quadrature algorithms . here",
    "time is split into ever increasing intervals .",
    "a novelty is is that we require the first interval to start at some @xmath183 .",
    "therefore , let @xmath184 $ ] , @xmath185 , and denote by @xmath186 the right - end point of this interval , i.e. , @xmath187 choose @xmath188 and @xmath189 for some constants @xmath190 , @xmath191 , @xmath192 .",
    "for @xmath193 small enough ,",
    "i.e. , @xmath194 big enough , the first term can be made arbitrarily small .",
    "in fact for the first term to be smaller than @xmath195 we need @xmath196    to simplify the details of the analysis of the second term , let us assume @xmath197 in theorem  4.5 and let @xmath110 be given by the formula @xmath198 where in the last step we used @xmath199 and @xmath200 .",
    "in fact @xmath110 is given by a somewhat more complicated formula , but the inclusion of all the details would not change the asymptotic results we give here ; for an optimal choice of parameters these details are of importance .",
    "we can thus write the second term in the estimate of theorem  4.5 as @xmath201 therefore as @xmath202 is increased we expect the error to decrease exponentially fast until it reaches @xmath203 ; see figure  [ fig : convergenceconttw ] .",
    "note that if we make @xmath11 large enough , this error can also be controlled . for later intervals ,",
    "i.e. , for larger @xmath204 , the second term quickly becomes insignificantly small .",
    "the algorithm here is similar to the fast and oblivious algorithm described in  @xcite , but with a shift by @xmath205 as explained above .    for @xmath206 the smallest integer such that @xmath207 the convolution   is split into @xmath206 sums @xmath208 where for suitable @xmath209 given below @xmath210 in view of the discussion in section  [ sec : parameter_choice1 ] the @xmath209",
    "are chosen such that for @xmath211 we have @xmath212 $ ] , where @xmath11 is a fixed integer offset with @xmath213 . inserting and using we obtain @xmath214 with @xmath215 , similar to , the runge - kutta approximation to at time @xmath216 with initial value @xmath217 .",
    "the contour integral @xmath218 is approximated by the @xmath204-dependent approximation given in proposition [ propn : quad_error ] . instead of keeping all the history , i.e.  @xmath219 for @xmath220 in memory , for evaluating the convolution",
    "the algorithm requires only three copies of the runge - kutta solution @xmath221 for @xmath222 and each @xmath223 , which are calculated step by step .",
    "details can be found in  @xcite . as @xmath206 is proportional to @xmath224 ,",
    "the memory requirement thus grows like @xmath225 and the operation count as @xmath226 .",
    "the computation of @xmath227 is done with standard cq algorithms with the number of evaluations of the kernel and memory requirements proportional to @xmath11 .",
    "we begin with a corollary of theorem  [ thm : main ] .",
    "[ coro : para ] assume that @xmath228 $ ] , for given @xmath229 and @xmath230 , and that there exists @xmath231 such that @xmath232 .",
    "then for every @xmath233 , the following choice of parameters @xmath234 with @xmath235 yields the uniform error estimate @xmath236 where @xmath237 includes all non exponentially growing terms in the bound .",
    "the above choice of parameters is independent of @xmath7 .    the stated choice for @xmath193 and @xmath238 guarantees that exponents in the bound with @xmath239 in place of @xmath240 are equal and negative , with @xmath241 and @xmath242    notice that @xmath103 and @xmath243 are nonlinearly related via . in our experiments we have opted to fix the value of @xmath244 and then use the error estimate in corollary  [ coro : para ] to compute @xmath245 , @xmath243 and @xmath246 .",
    "this strategy may lead to an underestimation of the stability function according to lemma  [ lemma : gamma ] .",
    "still , our numerical results show that reasonable values of @xmath107 and good choices for the rest of parameters are easy to find for prescribed accuracies .",
    "these parameters depend on @xmath247 and @xmath240 in but not on the particular application of our method .",
    "results for different values of @xmath103 are displayed in figures  [ fig : evolutionerror ] and [ fig : convergencecont ] , for a particular example .",
    "the effect of round - off errors can be included in the analysis in the same way as in @xcite , leading to a minimization problem for the choice of @xmath245 . in the simplest case of analysis in @xcite ,",
    "the propagation of the errors in the evaluation of @xmath18 , that we denote by @xmath248 , is governed by the exponentially growing term @xmath249 then from corollary  [ coro : para ] we deduce that the total error estimate is of the form @xmath250 the choice @xmath251 above guarantees the boundedness of the term in @xmath248 and the control of the error propagation , giving a convergence rate like @xmath252 .",
    "a better choice of @xmath245 can be obtained by minimizing for given @xmath202 , @xmath253 , @xmath165 , and @xmath254 .",
    "we illustrate theorem  [ thm : main ] and corollary  [ coro : para ] by considering in the generating function @xmath255 where @xmath256 is a modified bessel function @xcite .",
    "this function satisfies the bounds ( [ eq : bound_nsect ] ) and ( [ eq : bound_sect ] ) with @xmath257 as proved in @xcite . in figures  [ fig : scalar_dbig ] and [ fig : scalar_dsmall ]",
    "we show the error in the approximation of the convolution weights in along approximation intervals of the form @xmath258 $ ] , with @xmath259 and @xmath260 and for two different values of the distance parameter @xmath240 , namely @xmath261 ( fig .",
    "[ fig : scalar_dbig ] ) and @xmath262 ( fig .",
    "[ fig : scalar_dsmall ] ) .",
    "the lower row of error curves corresponds to the case @xmath259 , where we take @xmath263 quadrature nodes on the hyperbola and consider seven approximation intervals , i.e. @xmath264 .",
    "the upper row of error curves , with the larger error corresponds to @xmath260 , @xmath265 and @xmath266 .",
    "the other parameters that determine the hyperbola are as follows @xmath267 , @xmath268 , @xmath269 and @xmath270 .",
    "for the 3 stage radau iia method of order 5 for @xmath271 , number of quadrature points @xmath272 and basis @xmath273 ( top row ) and @xmath263 and @xmath259 ( bottom row ) .",
    ", title=\"fig : \" ]   for the 3 stage radau iia method of order 5 for @xmath271 , number of quadrature points @xmath272 and basis @xmath273 ( top row ) and @xmath263 and @xmath259 ( bottom row ) . ,",
    "title=\"fig : \" ]     for the 3 stage radau iia method of order 5 for @xmath274 , number of quadrature points @xmath272 and basis @xmath273 ( top row ) and @xmath263 and @xmath259 ( bottom row).,title=\"fig : \" ]   for the 3 stage radau",
    "iia method of order 5 for @xmath274 , number of quadrature points @xmath272 and basis @xmath273 ( top row ) and @xmath263 and @xmath259 ( bottom row).,title=\"fig : \" ]",
    "as explained in the introduction , the initial motivation for investigating operators satisfying ( [ eq : bound_sect ] ) comes from the application of time - domain boundary integral operators for wave propagation in cases where the strong huygens principle does not hold .",
    "most common examples of the latter are propagation of acoustic waves in two dimensions or in a dissipative medium and propagation of viscoelastic waves . here",
    ", we will give a brief introduction to time - domain boundary integral equations  for more background information see @xcite .",
    "let @xmath275 , @xmath276 , be a bounded lipschitz domain with boundary @xmath277 and let @xmath278 be its complement .",
    "let @xmath279 be a causal solution of the dissipative wave equation in @xmath280 @xmath281 , x \\in \\mathbb{r}^d \\setminus \\gamma \\\\ u(t , x ) & = g(t , x ) , & t & \\in [ 0,t ] , x \\in \\gamma \\\\",
    "u(0,x ) = \\partial_t u(0,x ) & = 0 , &   x & \\in \\mathbb{r}^d \\setminus \\gamma , \\end{aligned}\\ ] ] where @xmath282 is a constant and @xmath283 is a given boundary data . the solution of ( [ eq : wave_eqn ] ) can be represented as a _ single layer potential _",
    "@xmath284 where the boundary density @xmath285 is the unique solution of the boundary integral equation , see @xcite : find @xmath285 such that @xmath286 \\times \\gamma.\\ ] ]    explicit formulas for the kernel function are complicated , see @xcite , and even unavailable in the literature for two dimensions and @xmath287 .",
    "nevertheless , the laplace transform of the kernel function @xmath288 the so - called transfer function , is easily written down explicitly : @xmath289 where @xmath256 is a modified bessel function .",
    "the transfer function satisfies the bounds ( [ eq : bound_nsect ] ) and ( [ eq : bound_sect ] ) as first noticed in @xcite .",
    "[ lemma : wave_kern ] for a fixed @xmath290 , the function @xmath291 given in ( [ eq : ks_wave ] ) satisfies ( [ eq : bound_sect ] ) with @xmath292    the bound ( [ eq : bound_sect ] ) is obvious in the 3d case and for the two dimensional case follows from the asymptotic expansions for large arguments of @xmath293 , see @xcite . in (",
    "* lemma  3.2 ) the proof of the result is given for the two dimensional case and @xmath294 and for three dimensional case and general @xmath282 .",
    "the remaining case is a consequence of these results as shown next @xmath295    this now allows us to discretize the time convolution in ( [ eq : slp_eq ] ) using convolution quadrature : @xmath296 where the weights @xmath297 are determined from the kernel function @xmath298 and a choice of linear multistep or runge - kutta method in the same way as in the previous sections . to simplify the description of the method",
    ", we will confine ourselves to single stage rk methods , i.e. , the backward euler method .",
    "numerical results will be for multistage rk based discretization , details of implementing these can be found in @xcite .",
    "note that we have used the notation @xmath299 ( and @xmath300 ) above ; in the case of multistage method these would be vectors of size @xmath42 as before .",
    "the convergence of such an approximation of the integral operators has been first analyzed in @xcite for linear multistep methods and then in @xcite for runge - kutta methods .    to obtain a fully discrete system we need to discretize ( [ eq : slp_eq_cq ] ) in space as well . here",
    "we will make use of a standard galerkin boundary element method . in order to do this ,",
    "let @xmath301 with @xmath302 be a boundary element mesh and let @xmath303 be a subspace of @xmath304 , in particular let it be the space of piece - wise constant functions with the basis defined by @xmath305 writing ( [ eq : slp_eq_cq ] ) in a variational form and discretizing by the galerkin method we obtain the fully discrete system : find @xmath306 such that @xmath307 @xmath308 .",
    "it will be convenient for the later discussion to rewrite this system in a matrix notation @xmath309    the simplest way of applying the techniques developed in this paper would be to apply oblivious quadrature for times @xmath310 . a more efficient approach would be to split the matrices @xmath311 into distance classes .",
    "for example given a positive constant @xmath312 we could split each matrix into two as follows @xmath313 then the above sum could be split as @xmath314 and the new method applied to the first sum for @xmath315 and to the second for @xmath316 , i.e. , this way we can obtain savings earlier for the computation of the first sum .",
    "in this example it is important that the quadrature used to compute the weights @xmath317 or @xmath318 is valid for a range of distances @xmath240 . to compute the relevant parameters we proceed as explained in section  [ sec : quad ] taking @xmath319 or @xmath320 .",
    "as shown in corollary  [ coro : para ] , these parameters are then valid also for any @xmath321 .    with this the stage",
    "is set for applying the oblivious quadrature techniques of the previous section to the setting of time - domain boundary integral equations described above .",
    "the algorithm is adapted to solve convolution integrals such as the one in in the same way as explained in ( * ? ? ?",
    "* section 4.2 ) . from we",
    "see that the scheme is implicit in the vector of stages @xmath322 .",
    "the fast and oblivious algorithm is then applied to deal with the evaluation of the history term in the right hand side of the linear system @xmath323 results of numerical experiments are given in the next section .",
    "let @xmath324 be a disk with radius one .",
    "we solve   with @xmath325 and @xmath326 .",
    "we integrate from @xmath327 to @xmath328 with step - size @xmath329 , i.e. @xmath330 , and discretize in space with equally large patches of size @xmath331 , i.e. @xmath332 . because of the symmetries of the circle , see @xcite , the solution is space independent .",
    "it is shown in figure  [ fig : solbem ] on the time interval @xmath333 $ ] .    , @xmath334.,width=384 ]    the splitting of the weights into two distance classes is done by setting the parameter @xmath335 in equation  , such that the entries of @xmath336 are divided into two equally large distance classes . in all experiments we chose the basis @xmath337 , which defines the splitting in   together with the offset @xmath338 , where @xmath240 depends on the distance class and is either @xmath339 or @xmath340 .",
    "the evolution of the error for contour parameters @xmath341 and @xmath342 for different @xmath202 and @xmath103 is shown in figure  [ fig : evolutionerror ] . increasing @xmath202 and decreasing @xmath103 yields more accurate results .",
    "the error is measured against a reference solution calculated with a standard cq algorithm described in @xcite .     with fixed @xmath343 ( top ) and for different @xmath103 and",
    "fixed @xmath344 ( bottom).,title=\"fig:\",width=384 ]   with fixed @xmath343 ( top ) and for different @xmath103 and fixed @xmath344 ( bottom).,title=\"fig:\",width=384 ]    convergence in the number of quadrature nodes @xmath202 for different @xmath103 is shown in figure  [ fig : convergencecont ] .",
    "the error here is measured in the sup norm . only if @xmath103 is small enough increasing @xmath202 improves the result . in this case",
    "we observe exponential convergence in @xmath202 in agreement with theorem  [ thm : main ] .",
    "the choice of @xmath253 and @xmath165 is done experimentally",
    ".    a better choice of parameters might be feasible including the angle @xmath253 in the optimization process and eliminating @xmath165 , as it is done in @xcite for the numerical inversion of the laplace transform . in our example",
    "we have tested the parameters from @xcite on a purely experimental basis and the convergence rates are actually better",
    ". however we point out that the theory in @xcite does not apply to our situation .",
    "another issue with the parameters from @xcite is that the propagation of the errors in the evaluations of the laplace transform @xmath18 is not under control , as can be observed in figure  [ fig : convergenceconttw ] when the error curves reach the accuracy of the reference solution , about @xmath345",
    ". a further study of the optimal parameters in the context of 2d and damped wave equations might be the topic of future research .     by using the parameters in @xcite , width=384 ]",
    "we modify the proof given in @xcite to show the following result .",
    "[ lemma : trapez ] let @xmath346 be analytic and bounded as @xmath347 for @xmath348 , @xmath161 and some @xmath349 .",
    "further , let @xmath350 where @xmath153 , @xmath351 and @xmath352",
    ". then @xmath353}|g_{\\tau/2}(y)|,\\ ] ] where @xmath354 .",
    "let @xmath70 be the boundary of the rectangle @xmath355 with @xmath138 the top and bottom sides and @xmath356 the left and right sides of the rectangle . using residue calculus @xmath357 whereas using the analyticity of @xmath346 @xmath358 where @xmath359 combining these two formulas we have @xmath360 where @xmath361 or when simplified @xmath362 we now split the error into two terms @xmath363 corresponding to @xmath138 and @xmath356 .",
    "the first term is easily bounded to give the first term in the above error estimate . noticing that @xmath364 we see that @xmath365}|g_{\\tau/2}(y)|\\int_{-\\infty}^{\\infty}|s(\\tau/2+\\mi y)| dy = \\tfrac{\\log 2}{\\pi } \\tau \\sup_{y \\in [ -b , b]}|g_{\\tau/2}(y)| , \\end{split}\\ ] ] where we have used @xmath366 and similarly @xmath367 .",
    "j.  a.  m. carrer , w.  l.  a. pereira , and w.  j. mansur",
    ". two - dimensional elastodynamics by the time - domain boundary element method : lagrange interpolation strategy in time integration .",
    ", 36(7):11641172 , 2012 ."
  ],
  "abstract_text": [
    "<S> the use of time - domain boundary integral equations has proved very effective and efficient for three dimensional acoustic and electromagnetic wave equations . in even dimensions and when some dissipation is present , time - domain boundary equations contain an infinite memory tail . </S>",
    "<S> due to this , computation for longer times becomes exceedingly expensive . in this paper </S>",
    "<S> we show how oblivious quadrature , initially designed for parabolic problems , can be used to significantly reduce both the cost and the memory requirements of computing this tail . </S>",
    "<S> we analyse runge - kutta based quadrature and conclude the paper with numerical experiments .    fast and oblivious algorithms , convolution quadrature , wave equations , boundary integral equations , retarded potentials , contour integral methods .    65r20 , 65l06 , 65m15 , 65m38 </S>"
  ]
}
{
  "article_text": [
    "the first universal turing machine was constructed by turing @xcite . in turing s words :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  a single special machine of that type can be made to do the work of all .",
    "it could in fact be made to work as a model of any other machine .",
    "the special machine may be called the universal machine . _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    shannon @xcite proved that two symbols were sufficient for constructing a universal turing machine providing enough states can be used . according to margenstern  @xcite : `` claude shannon raised the problem of what is now called the _ descriptional complexity _ of turing machines : how many states and letters are needed in order to get universal machines ? ''",
    "notable universal turing machines include the machines constructed by minsky ( 7-state 4-symbol ) @xcite , rogozhin ( 4-state 6-symbol ) @xcite , neary  woods ( 5-state 5-symbol ) @xcite .",
    "herken s book @xcite celebrates the first 50 years of universality .",
    "woods and neary presents a survey in @xcite ; margenstern s paper  @xcite presents also a time line of the main results .    roughly speaking ,",
    "a universal machine is a machine capable of simulating any other machine .",
    "there are a few definitions of universality , the most important being _ universality in turing s sense _ and _ programmable universality _ in the sense of algorithmic information theory  @xcite .    in the following",
    "we denote by @xmath1 the set of positive integers @xmath2 , and @xmath3 .",
    "the cardinality of a set @xmath0 is denoted by @xmath4 .",
    "the domain of a partial function @xmath5 is @xmath6 .",
    "we assume familiarity with the basics of computability theory  @xcite .",
    "we define now universality for unary functions .    a partially computable function @xmath7 is called _",
    "( turing ) universal _ if there exists a computable function @xmath8 such that for any partially computable function @xmath9 there exists an integer @xmath10 ( called a _ gdel number _ of @xmath11 for @xmath12 ) such that for all @xmath13 we have : @xmath14 .",
    "following @xcite we say that a partially computable function @xmath7 is _ programmable universal _",
    "if for every partially computable function @xmath9 there exists a constant @xmath15 such that for every @xmath16 there exists @xmath17 with @xmath18    [ mainprogramuniv ] a partially computable function @xmath7 is programmable universal iff there exists a partially computable function @xmath19 such that for any partially computable function @xmath9 there exist two integers @xmath20 such that for all @xmath13 we have @xmath21 and @xmath22    first we construct a partially computable function @xmath23 and a partially computable function @xmath24 such that for every partially computable function @xmath11 , ( [ suniv1 ] ) and ( [ suniv2 ] ) are satisfied .",
    "indeed , the classical enumeration theorem  @xcite shows the existence of a partial computable function @xmath25 such that for every partial computable function @xmath5 there exists @xmath26 such that @xmath27 , for all @xmath28 . consider the computable function @xmath29 such that the binary expansion of @xmath30 is obtained by prefixing the binary expansion of @xmath31 with the binary expansion of @xmath32 .",
    "then @xmath33 is injective because if @xmath34 and @xmath35 are the binary expansions of @xmath36 and @xmath31 , respectively , then @xmath37 is the binary expansion of @xmath38 from which we can uniquely recover @xmath36 and @xmath31 .",
    "if @xmath39 are computable partial inverses of @xmath40 , i.e.  @xmath41 , for all @xmath42 , then the function @xmath43 has ( [ suniv1 ] ) and ( [ suniv2 ] ) for @xmath44 .",
    "may be taken to be computable . ]",
    "let @xmath12 be programmable universal , that is , for every partially computable function @xmath9 there exists a constant @xmath15 such that for every @xmath16 there exists @xmath17 with @xmath18 we shall use @xmath45 to prove that @xmath12 satisfies the condition in the statement of the theorem .",
    "let @xmath46 be a computable bijection and @xmath47 the components of its inverse .",
    "we define the partially computable function @xmath48 as follows .",
    "we consider first the set @xmath49 and then we define @xmath50 to be the first element of @xmath51 according to some computable enumeration of @xmath52 .",
    "formally , let @xmath53 be a computable one - one enumeration of @xmath52 and define    @xmath54    we now prove that @xmath12 satisfies the condition in the statement of the theorem via @xmath48 .",
    "to this aim let @xmath11 be a partially computable function and let @xmath55 be the constants associated to @xmath45 and @xmath11 .",
    "+ put @xmath56 and @xmath57 .",
    "+ we have : @xmath58 and @xmath59 .",
    "01 we have : @xmath60 and @xmath59 .",
    "conversely , if @xmath45 satisfies ( [ suniv1 ] ) and ( [ suniv2 ] ) with the partially computable function @xmath61 , then @xmath45 is programmable universal : given a partially computable function @xmath11 and @xmath16 , @xmath62 and @xmath63 .",
    "universal and programmable universal functions exist and can be effectively constructed .",
    "every programmable universal function is universal , but the converse implication is false .",
    "interesting classes of turing machines have decidable halting sets : for example , turing machines with two letters and two states  @xcite . in contrast , the most ( in)famous result in computability theory is that _ the halting set @xmath64 of a universal function @xmath12 is undecidable .",
    "_    however , the halting set @xmath65 is computably enumerable ( see  @xcite ) .",
    "how `` undecidable '' is @xmath65 ? to answer this question we formalise the following notion : a set @xmath0 is `` almost decidable '' if there exists a `` large '' decidable set whose intersection with @xmath0 is also decidable . in other words ,",
    "the undecidability of @xmath0 can be located to a `` small '' set .",
    "to define `` large '' sets we can employ measure theoretical or topological tools adapted to the set of positive integers ( see @xcite ) . in what follows",
    "we will work with the _ ( natural ) density _ on @xmath66 .",
    "its motivation is the following .",
    "if a positive integer is `` randomly '' selected from the set @xmath67 , then the probability that it belongs to a given set @xmath68 is    @xmath69    if @xmath70 exists , then the set @xmath71 has _ density _ :",
    "@xmath72    a set is _ generic _ if it has density one ; a set of density zero is called _",
    "negligible_. a set @xmath73 is _ almost decidable _ if there exists a generic decidable set @xmath74 such that @xmath75 is decidable .",
    "every decidable set is almost decidable , but , as we shall see below , there exist almost decidable sets which are not decidable .",
    "a set which is not almost decidable contains no generic decidable subset ; of course , this result is non - trivial if the set itself is generic .",
    "[ hautm ] there exists a universal turing machine whose halting set is negligible and almost decidable ( in polynomial time ) .    a single semi - infinite tape , single halt state , binary alphabet universal turing machine satisfies theorem  [ hautm ] ; other examples are provided in @xcite .",
    "negligibility reduces to some extent the power of almost decidability in theorem  [ hautm ] .",
    "this deficiency is overcome in the next result : the price paid is in the redundancy of the universal function .",
    "[ genericnad]there exist infinitely many universal functions whose halting sets are generic and almost decidable ( in polynomial time ) .",
    "let @xmath45 be a universal function and define @xmath12 by the formula : @xmath76 clearly , @xmath12 is universal , @xmath65 is generic , the set @xmath77 is generic and decidable ( in polynomial time ) and @xmath78 is generic and decidable ( in polynomial time ) .",
    "there exist infinitely many almost decidable but not decidable sets .",
    "does there exist a universal function @xmath12 whose halting set is not almost decidable ?",
    "this problem was left open in @xcite : here we answer it in the affirmative .",
    "[ notalmostdecid ] there exist infinitely many universal functions whose halting sets are not negligible and not almost decidable .",
    "we start with an arbitrary universal function @xmath45 and construct a new universal function @xmath12 whose halting set @xmath65 is not almost decidable .",
    "+ first we define the computable function @xmath79 by @xmath80 01 here are the first values of @xmath81 :    [ cols=\"^,^,^,^,^,^,^,^,^,^,^\",options=\"header \" , ]     the function @xmath81 has the following properties : +    1 .",
    "@xmath82 , for every @xmath83 , so @xmath81 outputs every positive integer infinitely many times .",
    "2 .   @xmath84 .",
    "3 .   @xmath85 , for all @xmath86 .",
    "4 .   if @xmath87 and @xmath88 , then for every @xmath89 , @xmath90 .",
    "+    for ( d ) we note that if @xmath91 , then @xmath92 , a contradiction .",
    "next we define @xmath93 and prove that @xmath12 is universal .",
    "we consider the partially computable function @xmath94 and note that : 1 ) by ( a ) , @xmath95 , and 2 ) @xmath96 , for all @xmath97 .",
    "consequently , for every partially computable function @xmath9 we have @xmath98 , so @xmath99 .",
    "let us assume by absurdity that there exists a generic decidable set @xmath100 such that @xmath78 is decidable .",
    "define the partial function @xmath101 by @xmath102    as @xmath0 is decidable , @xmath103 is partially computable ; by ( a ) ( @xmath81 is surjective ) and by ( d ) ( as @xmath88 , for all @xmath86 , @xmath104 ) it follows that @xmath103 is computable .",
    "furthermore , the computable function @xmath103 has the following two properties : for all @xmath86 , @xmath105 and @xmath106 .",
    "we next prove that for all @xmath86 ,    @xmath107    indeed , @xmath108    from ( [ hequiv ] ) it follows that @xmath109 is decidable because @xmath78 is decidable , a contradiction .",
    "finally , @xmath110 because @xmath111 .    by varying the universal function",
    "@xmath45 we get infinitely many examples of universal functions @xmath12 .",
    "there exist infinitely many universal functions @xmath12 such that for any generic computably enumerable set @xmath112 , @xmath113 is not decidable .",
    "assume @xmath0 is computable enumerable and @xmath88 . if replace the computable function @xmath103 with the computable function @xmath114 , where @xmath115 is a computable injective function such that @xmath116 ( @xmath0 is infinite ) in the proof of theorem  [ notalmostdecid ] , then we prove that @xmath117 is not decidable .",
    "there are six possible relations between the notions of negligible , generic and almost decidable sets .",
    "the above results looked at three of them : here we show that the remaining three possibilities can be realised too .",
    "first , it is clear that there exist non - negligible and decidable sets , hence non - negligible and almost decidable sets .",
    "the next result is a stronger form of theorem  [ notalmostdecid ] : its proof depends on a set @xmath118 and works for other interesting sets as well .",
    "[ gnad ] there exist infinitely many universal functions whose halting sets are generic and not almost decidable .",
    "we use a computably enumerable generic set @xmath118 which has no generic decidable subset ( see theorem  2.22 in @xcite ) to construct a universal function as in the statement above .",
    "assume @xmath119 for some partially computable function @xmath11 .",
    "let @xmath45 be an arbitrary universal function and define @xmath12 by :    @xmath120    clearly @xmath65 is universal and generic .    for the sake of a contradiction assume that @xmath65 is almost decidable by @xmath0 ,",
    "i.e.  @xmath0 is a generic decidable set such that @xmath121 is decidable .",
    "we now prove that @xmath122 is almost decidable by @xmath123 , where @xmath124 is the set of square positive integers ( note that @xmath124 is decidable and negligible ) and @xmath125 is the complement of @xmath124 .",
    "it is clear that @xmath126 is generic and decidable , so we need only to show that @xmath127 is decidable .",
    "we note that @xmath65 is a disjoint union of the sets @xmath128 and @xmath129 , and the first set is a subset of @xmath124 . to test whether @xmath31 is in @xmath130",
    "we proceed as follows : a ) if @xmath131 , then @xmath132 , b ) if @xmath133 , then @xmath134 iff @xmath135 .",
    "hence , @xmath136 is decidable because @xmath121 is decidable , so @xmath65 is almost decidable .",
    "we have obtained a contradiction because @xmath136 is a generic decidable subset of @xmath118 , hence @xmath65 is not almost decidable .",
    "let @xmath137 $ ] .",
    "we say that a set @xmath73 is _",
    "@xmath138-decidable _ if there exists a decidable set @xmath74 such that @xmath139 and @xmath75 is decidable ; a set @xmath73 is _ weakly decidable _ if @xmath0 is @xmath138-decidable for some @xmath140 . with this terminology ,",
    "generic sets coincide with @xmath141-decidable sets .",
    "theorem 3.18 of @xcite states that there is a computably enumerable generic set that has no decidable subset of density in @xmath142 . using this set in the proof of theorem  [ gnad ]",
    "we get the following stronger result :    there exist infinitely many universal functions whose halting sets are generic and not weakly decidable .",
    "a simple set is a co - infinite computably enumerable set whose complement has no decidable subset ; the existence of a negligible simple set is shown in the proof of proposition 2.15 in @xcite .",
    "if in the proof of theorem  [ gnad ] we use a negligible simple set instead of the computably enumerable generic set which has no generic decidable subset we obtain the following result :    there exist infinitely many universal functions whose halting sets are negligible and not almost decidable .",
    "universality is one of the most important concepts in computability theory .",
    "however , not all universal machines are made equal .",
    "the most popular criterion for distinguishing between universal turing machines is the number of states / symbols .",
    "other three other criteria of simplicity for universal prefix - free turing machines have been studied in @xcite .",
    "the property of almost decidability is another criterion of simplicity for universal functions .",
    "the universal function @xmath12 constructed in the proof of theorem  [ notalmostdecid ] is _ not _ programmable universal .",
    "theorems 2 and 8 in @xcite show that the halting sets of programmable universal string functions ( plain or prefix - free ) are never negligible .",
    "_ are there programmable universal functions not almost decidable ? _    the notion of almost decidability suggests the possibility of an approximate ( probabilistic ) solution for the halting problem ( see also @xcite ) .",
    "assume that the halting set is @xmath65 is almost decidable via the generic decidable set @xmath0 and we wish to test whether an arbitrary @xmath16 is in @xmath65 .",
    "if @xmath143 , then @xmath144 iff @xmath145 .",
    "if @xmath146 , then we do nt know whether @xmath144 or @xmath147 ( the undecidability is located in @xmath148 ) .",
    "should we conclude that @xmath144 or @xmath147 ?",
    "density does not help because @xmath149 .",
    "it is an open problem to find a solution .",
    "the notion of almost decidability can be refined in different ways , e.g.  by looking at the computational complexity of the decidable sets appearing in theorem  [ notalmostdecid ] .",
    "also , it will be interesting to study the property of _ almost decidability _ topologically or for other densities .",
    "the authors have been supported in part by the quantum computing research initiatives at lockheed martin .",
    "we thank laurent bienvenu , ludwig staiger , mike stay and declan thompson for interesting discussions on the topic of this paper .",
    "we also thank the anonymous referees for comments which improved the paper ."
  ],
  "abstract_text": [
    "<S> we present and study new definitions of universal and programmable universal unary functions and consider a new simplicity criterion : almost decidability of the halting set . </S>",
    "<S> a set of positive integers @xmath0 is almost decidable if there exists a decidable and generic ( i.e.  a set of natural density one ) set whose intersection with @xmath0 is decidable . </S>",
    "<S> every decidable set is almost decidable , but the converse implication is false . </S>",
    "<S> we prove the existence of infinitely many universal functions whose halting sets are generic ( negligible , i.e.   have density zero ) and ( not ) almost decidable . </S>",
    "<S> one result  </S>",
    "<S> namely , the existence of infinitely many universal functions whose halting sets are generic ( negligible ) and not almost decidable  solves an open problem in @xcite . </S>",
    "<S> we conclude with some open problems .    </S>",
    "<S> universal function , halting set , density , generic and negligible sets , almost decidable set </S>"
  ]
}
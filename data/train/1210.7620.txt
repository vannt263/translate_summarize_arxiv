{
  "article_text": [
    "the problem of determining the appearance of a fixed _ pattern _ in long sequences of observation is relevant in many scientific problems .",
    "for example , in the area of computer network security , the detection of intrusions , which become increasingly frequent , is very important .",
    "intrusion detection is primarily concerned with the detection of illegal activities and acquisitions of privileges that can not be detected by information flow and access control models .",
    "there are several approaches to intrusion detection , but recently this subject has been studied in relation to pattern matching ( see @xcite ) .",
    "this leads to the study of the construction of particular words avoiding a given pattern in an alphabet @xmath2 .",
    "the present paper aims to be a contribution in this direction .",
    "let @xmath3 be the set of binary words @xmath4 such that @xmath5 , for any @xmath6 , @xmath7 and @xmath8 corresponding to the number of 0 s and 1 s in the word @xmath4 , respectively .",
    "in this paper we study the construction of the subset @xmath9 } \\subset f$ ] of binary words excluding a given pattern @xmath10 , that is a word @xmath11}$ ] if and only if it does not contain a sequence of consecutive indices @xmath12 such that @xmath13 .    if we consider the set of binary words without any restriction , the defined language is regular and we can refer to using classical results ( see , e.g. , @xcite ) .",
    "when the restriction to words with no more 0 s than 1 s is valid , the language @xmath14}$ ] is not a regular one and it becomes more difficult to deal with .",
    "for example , in order to generate the language @xmath14}$ ] for each forbidden pattern @xmath15 an `` ad hoc '' grammar should be defined .",
    "our aim is to determine a constructive algorithm suggesting a more unified approach which makes it possible to generate all binary words in the class @xmath14}$ ] .    in this paper",
    "we show how to obtain all binary words belonging to @xmath16 and avoiding the pattern @xmath17 , for any fixed @xmath1 .",
    "we @xcite introduced an algorithm for the construction of all binary words in @xmath16 having a fixed number of 1 s and excluding those containing the forbidden pattern @xmath18 , for any fixed @xmath19 .",
    "that algorithm generates all the words in @xmath16 then eliminates those containing the forbidden pattern . basically , the construction marks in an appropriate way the forbidden patterns in the words and generates @xmath20 copies of each word having @xmath21 forbidden patterns such that the @xmath22 instances containing an odd number of marked forbidden pattern are annihilated by the other @xmath22 instances containing an even number of marked forbidden patterns .",
    "for example , the words @xmath23 and @xmath24 , containing two copies of the forbidden pattern @xmath25 , ( the marked forbidden patterns are over - lined ) are eliminated by the words @xmath26 and @xmath27 , respectively .",
    "this is possible since no prefix of @xmath28 is also a suffix of @xmath15 , that is the forbidden patterns do not overlap and so they are univocally identified inside the words .",
    "then , the algorithm in @xcite can not be used to generate the words in @xmath14}$ ] when @xmath17 since the forbidden patterns may overlap inside the words . for example , in @xmath29 there are two overlapping copies of the forbidden pattern @xmath30 .",
    "so , we propose a new algorithm that generates right the words in @xmath16 avoiding the forbidden pattern @xmath17 , for any fixed @xmath19 .",
    "the paper is organized as follows . in section  [ sec :",
    "basic ] we give some basic definitions and notation . in particular , we recall how every binary word can be represented as a path on the cartesian plane .    in section  [ sec : algo ]",
    "we give a construction , according to the number of 1 s , for the set of binary words excluding the pattern @xmath17 , for any fixed @xmath19 , and such that the number of 0 s in each word is inferior to or the same as the number of 1 s .    in section  [ sec :",
    "proof ] we prove that the construction given in section  [ sec : algo ] allows us to obtain an exhaustive and univocal generation of such binary words having @xmath31 1 s .",
    "let @xmath3 be the set of binary words @xmath4 such that @xmath5 , for any @xmath6 , @xmath7 and @xmath8 corresponding to the number of 0 s and 1 s in the word @xmath4 , respectively .",
    "in this paper we study the construction of the subset @xmath9 } \\subset f$ ] of binary words excluding a given pattern @xmath32 , for any fixed @xmath19 .    given @xmath33 the _ length _ of @xmath6 , we denote by @xmath34 , ( @xmath35 ) , the word with length @xmath36 obtained by linking @xmath4 to itself @xmath37 times , that is @xmath38 and @xmath39 , @xmath40 being the empty word .",
    "each word @xmath6 can be naturally represented as a path on the cartesian plane by associating a _",
    "rise _ ( or _ up _ ) _ step _ , defined by ( 1,1 ) and indicated by @xmath41 , with each bit 1 in @xmath4 and a _ fall _ ( or _ down _ ) _ step _ , defined by ( 1,-1 ) and indicated by @xmath42 , with each bit 0 in @xmath4 . for example , the word @xmath43 is represented by the path @xmath44 ( see figure  [ fig : path ] ) .",
    "an _ up - down _ step is the sequence @xmath45 .    from now on , we refer interchangeably to words or their graphical representation on the cartesian plane , that is paths .",
    "so by @xmath9}$ ] we denote both the set of pattern @xmath15 avoiding binary words and the set of corresponding paths .",
    "in the rest of this paper , a path is defined as :    * _ primitive _ if it begins and ends at ordinate 0 and remains strictly above the @xmath41-axis , * _ positive _ if it begins at ordinate 0 and remains above or on the @xmath41-axis , * _ negative _ if it begins and ends at ordinate 0 and remains below or on the @xmath41-axis ( remark that a negative path in @xmath16 necessarily ends at ordinate 0 ) , * _ strongly negative _ if it begins and ends at ordinate -1 and remains below or on the line @xmath46 , * _ underground _ if it ends with a negative suffix .",
    "the _ complement _ of a path @xmath47 is the path @xmath48 obtained from @xmath47 by switching rise and fall steps .",
    "in this section we show the constructive algorithm to generate the set @xmath9}$ ] , @xmath49 for any fixed @xmath1 , according to the number of rise steps , or equivalently to the number of 1 s . given a path @xmath11}$ ] with @xmath31 rise steps ,",
    "we generate a given number of paths in @xmath9}$ ] with @xmath50 rise steps , @xmath51 , by means of constructive rules .",
    "the number and the shape of the generated paths depend on the ordinate @xmath52 of the endpoint of @xmath4 and on its suffix . with regard to @xmath52 , we can point out three cases : @xmath53 , @xmath54 and @xmath55 , while as for the suffix we consider whether it is equal to @xmath56 or not .",
    "when @xmath53 , we must pay attention also to the case in which @xmath4 is an underground path ending with the pattern @xmath57 .    as we will show further on , for each @xmath11}$ ] such that @xmath53 or @xmath55 , the generating algorithm produces two or more positive paths and one underground path with @xmath50 rise steps , @xmath51 , while , when @xmath54 , it produces only one positive path with @xmath50 rise steps .",
    "let us denote by @xmath58 a path with endpoint at ordinate @xmath52 .",
    "the generating algorithm of the class @xmath9}$ ] with @xmath59 , for any fixed @xmath19 , is described in the following sections .",
    "the constructive rules related to the special cases in which the suffix of @xmath4 is @xmath56 or @xmath57 are described in sections [ sec : positivesuffix ] and [ sec : negativesuffix ] , respectively , while in section [ sec : simplecase ] we examine all the other simple cases .    the starting point of the algorithm is the empty word @xmath40 .      in this section",
    "we describe the constructive rules to be applied when the suffix of @xmath4 is neither @xmath56 nor @xmath57 .",
    "we point out three cases for the ordinate @xmath52 of the endpoint of @xmath4 : @xmath53 , @xmath54 and @xmath55 .",
    ": :    a path @xmath11}$ ] , with    @xmath31 rise steps and such that its endpoint has ordinate 0 ,    generates , for any @xmath37 , @xmath51 ,    three paths with @xmath50 rise steps : a path ending at    ordinate 1 by adding to @xmath4 a rise step and a    sequence of @xmath60 up - down steps ; a path ending at ordinate    0 by adding to @xmath4 a rise step , a sequence of    @xmath60 up - down steps and a fall step , and an underground    path obtained by the one generated in the previous step and mirroring    on @xmath41-axis its rightmost primitive suffix",
    ".    +    figure  [ fig : zero1 ] shows the above described operations ; the number    above the right arrow corresponds to the value of @xmath37 .    both in this figure and in the following ones we consider    @xmath61 , that is    @xmath62",
    ".    +    therefore @xmath63 @xmath54 .",
    ": :    a path @xmath11}$ ] , with    @xmath31 rise steps and such that its endpoint has ordinate 1 ,    generates , for any @xmath37 , a path with @xmath50 rise    steps with endpoint at ordinate 2 obtained by adding to    @xmath4 a rise step and a sequence of @xmath60    up - down steps ( see figure  [ fig : uno1 ] ) .    +    therefore @xmath64 @xmath55 .",
    ": :    a path @xmath11}$ ] , with    @xmath31 rise steps and such that its endpoint has ordinate    @xmath52 , @xmath55 , generates , for any    @xmath37 , @xmath65 paths with @xmath50 rise    steps : a path ending at ordinate @xmath66 by adding to    @xmath4 a rise step and a sequence of @xmath60    up - down steps ; @xmath67 paths ending at ordinate    @xmath68 , respectively , by adding to    @xmath4 a rise step , a sequence of @xmath69 ,    @xmath70 , fall steps and a sequence of    @xmath60 up - down steps ; a path ending at ordinate 0 by adding    to @xmath4 a rise step , a sequence of @xmath52    fall steps , a sequence of @xmath60 up - down steps and a fall    step , and an underground path which will be described in    section  [ sec : under ] .",
    "figure  [ fig : due1 ] shows the above described    operations .",
    "+    therefore    +    @xmath71    at this point it is clear that :    1 .",
    "when the path @xmath4 ends with the suffix @xmath56 the paths obtained by means of the constructions ( [ alfa ] ) , ( [ beta ] ) and ( [ gamma ] ) contain the forbidden pattern @xmath72 .",
    "so , we will act as described in section  [ sec : positivesuffix ] ; 2 .   when @xmath4 is an underground path ending with the pattern @xmath57 , some paths generated by means of the above constructions might contain the forbidden pattern @xmath72 .",
    "so , we will follow a different procedure described in section  [ sec : negativesuffix ] .",
    "even when the path @xmath4 ends with the suffix @xmath56 , the number and the shape of the generated paths depend on the ordinate @xmath52 of the endpoint of @xmath4 .",
    "let @xmath73 be the suffix of @xmath4 .",
    ": :    a path @xmath11}$ ] , with    @xmath31 rise steps and such that its endpoint has ordinate 0 ,    generates , for any @xmath37 , @xmath74 ,    three paths with @xmath50 rise steps ( see    figure  [ fig : zero2 ] ) : a path ending at ordinate 1 , by inserting a    sequence of @xmath60 up - down steps and a rise step on the    left of @xmath75 ; a path ending at ordinate 0 , by    inserting a sequence of @xmath60 up - down steps and a rise    step on the left of @xmath75 and adding a fall step at    the end of @xmath4 , and an underground path , obtained by    mirroring on @xmath41-axis the rightmost primitive suffix of    the path generated at the previous step . therefore    +    @xmath76 @xmath54 .",
    ": :    a path @xmath11}$ ] , with    @xmath31 rise steps and such that its endpoint has ordinate 1 ,    generates , for any @xmath37 , a path with @xmath50 rise    steps with endpoint at ordinate 2 , obtained by inserting a sequence of    @xmath60 up - down steps and a rise step on the left of the    suffix @xmath75 ( see figure  [ fig : uno2 ] )",
    ". therefore    +    @xmath77 @xmath55 .",
    ": :    a path @xmath11}$ ] , with    @xmath31 rise steps and such that its endpoint has ordinate    @xmath52 , @xmath55 , generates , for any    @xmath37 , @xmath65 paths with @xmath50 rise    steps ( see figure  [ fig : due2 ] ) : a path ending at ordinate    @xmath66 , by inserting a sequence of @xmath60    up - down steps and a rise step on the left of the suffix    @xmath75 ; @xmath67 paths ending at ordinate    @xmath68 , respectively , by inserting a    sequence of @xmath60 up - down steps , a rise step and a    sequence of @xmath69 , @xmath78 , fall steps on the left of @xmath75 ; a path    ending at ordinate 0 , by inserting a sequence of @xmath60    up - down steps , a rise step and a sequence of @xmath52 fall    steps on the left of @xmath75 , and then adding a fall    step at the end of @xmath4 , and an underground path which    will be described in section  [ sec : under ] .",
    "therefore    +    @xmath79      the paths @xmath80}$ ] ending on the @xmath41-axis with the sequence @xmath57 have the following shape @xmath81 where @xmath82 is a path ending on the @xmath41-axis and @xmath83 is either the empty path @xmath40 or is a strongly negative path .",
    "the constructions applied to paths ending at ordinate 0 described in ( [ alfa ] ) ( see figure  [ fig : zero1 ] ) can be used even for the paths ending with the sequence @xmath57 , when @xmath84 , or to generate the paths ending at ordinate 1 or on the @xmath41-axis with a positive suffix , when @xmath85 . nevertheless , when @xmath85 , by applying the construction , we obtain an underground path which contains the forbidden pattern @xmath86 .    therefore if the path ends with the sequence @xmath57 and @xmath85 , in order to generate the underground path we proceed as follows .",
    "two cases must be taken into consideration .",
    "1 ) @xmath82 does not end with a peak @xmath45 .",
    ": :    the underground path generated from    @xmath87    is obtained by adding the path @xmath88 to    @xmath89 , mirroring on @xmath41-axis the    rightmost suffix @xmath90 of    @xmath91 and shifting the sequence    @xmath56 between @xmath82 and the    sub - path @xmath92 .",
    "+    so the path    @xmath87    generates the underground path    @xmath93 ( see    figure  [ fig : casoa ] ) .",
    "it should be noticed that this construction    applies to @xmath4 even if    @xmath94 .",
    "2 ) @xmath82 ends with a peak @xmath45 . : :    when the path @xmath82 ends with a peak    @xmath45 , that is @xmath95 ,    the insertion of the sequence @xmath56 between    @xmath82 and the sequence @xmath96    produces the forbidden pattern    @xmath86 .",
    "let us consider the    following subcases : @xmath97 and @xmath98 .",
    "+    2.1 ) @xmath99 . ; ;      the underground path is obtained by performing on      @xmath100      the following operations : shifting the rightmost peak      @xmath45 of @xmath82 to the right of the      sub - path @xmath92 , mirroring on      @xmath41-axis the sequence @xmath101      and adding to such path the steps @xmath102 .",
    "+      so , when @xmath85 , the underground path with negative      suffix generated by      @xmath103 is      @xmath104 ( see figure  [ fig : casob1 ] ) .",
    "2.2 ) @xmath105 .",
    "; ;      in this case , the underground path obtained by means of the      construction described in 2.1 ) is      @xmath106      and it contains the forbidden pattern      @xmath86 if @xmath107      ends with the sequence @xmath90 or with the      sequence @xmath108 , where @xmath109 is a not      empty strongly negative path .",
    "let us take the longest suffix of      @xmath110      into account so that      @xmath111 ,      where @xmath112 and @xmath113      is the empty path or is a strongly negative path .",
    "every sequence      @xmath114 , @xmath115 , will be changed      into @xmath116 in the following way :      +      2.2.1 ) : :        if @xmath47 is a path that does not end with a peak        @xmath117 , then @xmath118 and the        underground path generated by @xmath89 is        @xmath119 ( see        figure  [ fig : casob2i ] ) ;      2.2.2 ) : :        if @xmath47 ends with a peak        @xmath45 , that is        @xmath120 , then        @xmath121 and the        underground path generated by @xmath89 is        @xmath122 ( see        figure  [ fig : casob2ii ] ) .",
    "now let us describe how to obtain the underground path generated by @xmath123 .",
    "for any @xmath37 , @xmath51 , let @xmath124 be the path obtained from @xmath58 and ending on the @xmath41-axis with a positive suffix , @xmath47 is the rightmost suffix in @xmath125 which is primitive .    if the path @xmath48 does not contain the forbidden pattern @xmath15 , the underground path generated by @xmath58 is @xmath126 .",
    "if the path @xmath48 contains the forbidden pattern @xmath15 , we must apply a _ swap _",
    "operation @xmath127 in order to obtain a path @xmath128 avoiding the forbidden pattern .",
    "the underground path generated by @xmath58 is @xmath129 .    before describing the @xmath127 operation on @xmath48 ,",
    "let us consider the following proposition .",
    "[ prop1]let @xmath130}$ ] a primitive path ; @xmath131 contains the forbidden pattern @xmath86 if and only if @xmath82 contains the pattern @xmath132 .    from proposition  [ prop1 ]",
    "it follows that , if @xmath48 contains the forbidden pattern @xmath15 , then it is preceded and followed by at least a rise step .",
    "operation @xmath127 must generate a path @xmath133 avoiding the forbidden pattern @xmath86 and such that @xmath134}$ ] ; in this way @xmath133 is not the complement of any path in @xmath9}$ ] .",
    "the path @xmath135 is obtained in the following way :    * consider the straight line @xmath136 from the beginning of the pattern @xmath137 and let @xmath138 be the rightmost point in which @xmath136 intersects @xmath48 on the left of @xmath15 such that @xmath138 is preceded by at least two fall steps ; * let @xmath139 , @xmath140 , the subsequence on the right of @xmath138 , followed by at least a fall step ; * _ swap _ the initial subsequence @xmath141 of @xmath15 and @xmath142 .",
    "let us remark that @xmath142 can not be equal to @xmath56 as @xmath47 does not contain the forbidden pattern @xmath72 ( see figure  [ fig : swap].a ) ) .",
    "when @xmath143 , that is @xmath142 is the empty word , we simply insert @xmath144 into @xmath138 ( see figure  [ fig : swap].b ) ) .",
    "operation @xmath127 is applied to each forbidden pattern in @xmath48 .",
    "[ prop2 ] let @xmath145 , then @xmath146}$ ] .",
    "* proof . *",
    "the @xmath127 operation transforms the subsequence @xmath147 , ( @xmath148 ) , of @xmath48 into the subsequence @xmath149 of @xmath133 .",
    "the complement of @xmath150 is @xmath151 so @xmath152 contains the forbidden pattern @xmath72 . @xmath153",
    "[ prop3 ] let @xmath154}$ ] a primitive path such that @xmath155}$ ] .",
    "then there exists a path @xmath156}$ ] such that @xmath157 .    * proof . *",
    "if @xmath154}$ ] and @xmath155}$ ] then @xmath131 contains the pattern @xmath158 ; we apply to @xmath131 the following operation @xmath159 :    * consider the straight line @xmath136 from the end of the pattern @xmath56 and let @xmath160 be the leftmost point where @xmath136 intersects @xmath131 on the right of @xmath56 such that @xmath160 is followed by at least two rise steps ; * let @xmath139 , @xmath140 , the subsequence on the left of @xmath160 , preceded by at least a rise step ; * swap the subsequence @xmath56 and @xmath142 .",
    "when @xmath143 , that is @xmath142 is the empty word , we simply insert @xmath56 into @xmath160 .",
    "@xmath153    figure  [ fig : tree ] shows the initial steps of the generating algorithm of the paths corresponding to words in @xmath9}$ ] , @xmath161 .",
    "let us remark that , following the above constructions , given a path @xmath4 , the number of generated paths depends only on the ordinate of endpoint of @xmath4 .",
    "so , the complete generating algorithm can be briefly described by the succession rule ( [ one ] ) ( for more details on succession rules see @xcite ) @xmath162    where each number corresponds to the ordinate of the endpoint of a path .",
    "the zero in the first line in ( [ one ] ) is associated with the empty path . the second line in ( [ one ] )",
    "is associated with operations @xmath163 and @xmath164 , the third line is associated with operations @xmath165 and @xmath166 , and the last line describes the construction when the endpoint has ordinate @xmath167 , underground path included .",
    "in this section we prove that the construction described in section 3 allows to generate the class @xmath9}$ ] exhaustively for any fixed forbidden pattern @xmath17 , @xmath19 , in the sense that all the words in @xmath9}$ ] with @xmath31 1 s , @xmath168 , can be generated .",
    "[ teo : uno ] given a fixed forbidden pattern @xmath17 , @xmath169 , the construction described in section  [ sec : algo ] generates all the paths with @xmath31 , @xmath168 , rise steps representing the binary words in @xmath9}$ ] with @xmath31 1 s .",
    "let @xmath11}$ ] , then @xmath170 that is , @xmath4 is made of @xmath171 sub - paths such that :    * @xmath172 is the empty path @xmath40 , * @xmath173 , @xmath174 is a path in @xmath9}$ ] beginning from and ending on the @xmath41-axis , * @xmath175 is a path in @xmath9}$ ] beginning from the @xmath41-axis with endpoint at ordinate @xmath176 .    the proof of theorem  [ teo : uno ] is obtained by induction on the number of sub - paths .    * proof . *",
    "the empty path @xmath40 is generated as the starting point of the algorithm .",
    "let us assume that all the possible sub - paths @xmath177 of @xmath4 are generated .",
    "we prove that the algorithm generates the sub - path @xmath178 for any path @xmath179}$ ] .",
    "let @xmath173 be a path that does not end with the pattern @xmath56 . in this case",
    "the path @xmath180 may be either positive or negative .    if @xmath180 is a positive path we have to prove that all the positive paths are generated and this will be demonstrated in section  [ sec : positive ] . in the case of a negative path , denoting @xmath181 the largest value of its absolute ordinate , let us remark that :    * the negative paths with @xmath182 are @xmath183 , @xmath184 , and they are generated by iterating the construction ( [ alfa ] ) ; * negative paths with @xmath185 are @xmath186 , @xmath187 , and they are generated by means of ( [ alfa ] ) when @xmath188 , or by means of ( [ alfa1 ] ) when @xmath189 ; * let @xmath190 be a negative path with @xmath191 ; if @xmath192}$ ] then @xmath190 is the underground path generated by a positive path with endpoint at ordinate @xmath55 , ( see section  [ sec : under ] ) , otherwise @xmath193 for a positive path @xmath83 in @xmath9}$ ] with endpoint at ordinate @xmath194 ( see proposition  [ prop3 ] ) .",
    "note that when @xmath195 and @xmath173 ends with the pattern @xmath88 , the only possible negative path @xmath180 with @xmath185 is @xmath196 and it is generated by applying the construction ( [ alfa1 ] ) to the path @xmath197 .    when the suffix of @xmath173 is the pattern @xmath56 , @xmath180 must be a negative path and the path @xmath198 is the underground path obtained by means of the construction described in case 1 ) in section  [ sec : negativesuffix ] ( see figure  [ fig : casoa ] ) .    in the same way , when the sub - path @xmath199 is of type @xmath200 or @xmath201 where @xmath113 is",
    "the empty path @xmath40 or is a strongly negative path , then it is generated by the constructions described in case 2 ) in section  [ sec : negativesuffix ] ( see figures  [ fig : casob1 ] , [ fig : casob2i ] and [ fig : casob2ii ] ) .",
    "then , if we show that all the possible positive paths are generated , then we can claim that theorem  [ teo : uno ] is proved .",
    "moreover , we observe that for each path @xmath4 in @xmath9}$ ] with @xmath31 rise steps there exists one and only one path @xmath125 in @xmath9}$ ] with @xmath202 rise steps , @xmath51 , such that @xmath4 is obtained from @xmath125 by means of the construction described in section  [ sec : algo ] .",
    "this assertion is a direct consequence of the construction , since the actions described are univocally determined .",
    "@xmath153      in this section we prove that all the positive paths with @xmath31 rise steps are generated by means of the construction described in section  [ sec : algo ] . in the sequel of this section",
    "we analyze only _ positive _ paths .",
    "the proof is obtained by induction on @xmath31 .",
    "there are only two paths with @xmath203 rise step , that is @xmath41 and @xmath45 , and they are generated by means of construction ( [ alfa ] ) applied to the empty path @xmath40 .",
    "let us assume that all the paths with @xmath204 rise steps are generated ; we will prove that all the paths with @xmath31 rise steps are generated .",
    "note that , following the construction given in @xcite , a path with @xmath31 rise steps can be obtained from a dyck path @xmath4 with @xmath205 rise step by inserting one rise step in each point at ordinate @xmath206 of its last descent followed by @xmath207 fall steps , @xmath208 .",
    "we will prove that all the paths obtained so are also generated following the constructions given in the above sections .",
    "let us denote by @xmath209 a paths ending with @xmath207 fall steps .",
    "let @xmath69 be the number of fall steps in the last descent of @xmath4 .",
    "first of all , we note that for any value of @xmath69 the paths obtained by inserting a rise step in the point at ordinate 0 are generated by means of the constructions ( [ alfa ] ) or ( [ alfa1 ] ) applied to the path @xmath4 . here",
    "we give the proof for the case with @xmath210 , distinguishing three cases : @xmath211 , @xmath212 and @xmath213 .",
    "the analogous and simple cases @xmath214 and @xmath215 are left to the reader .",
    "* @xmath216 .",
    "let @xmath217 .",
    "the insertion of a rise step in the point at ordinate 1 gives three paths : * * @xmath218 , which is generated by means of ( [ beta ] ) applied to the prefix @xmath219 of @xmath4 , * * @xmath220 and @xmath221 , which are the paths with endpoints at ordinate 1 and 0 , respectively .",
    "if @xmath222 , then @xmath223 and @xmath224 are generated by the construction ( [ gamma ] ) , where @xmath225 , applied to the path @xmath226 with @xmath227 , otherwise , if @xmath195 , they are generated by means of ( [ gamma1 ] ) with @xmath225 and @xmath85 applied to the path @xmath228 . *",
    "the insertion of a rise step in the point at ordinate @xmath206 gives @xmath230 paths @xmath209 ,",
    "@xmath231 . the paths @xmath209 with @xmath232 are all the positive paths generated by means of ( [ gamma ] ) with @xmath233 and @xmath85 applied to the prefix of @xmath4 of length @xmath234 .",
    "the path @xmath235 is the path with endpoint at ordinate @xmath206 .",
    "when @xmath236 , @xmath223 is generated by means of construction ( [ gamma ] ) with @xmath225 and @xmath227 applied to the path @xmath226 , while , when @xmath195 , it is generated by means of ( [ gamma1 ] ) , with @xmath225 and @xmath85 , applied to the path @xmath228 .",
    "* @xmath213 .",
    "the insertion of a rise step in the point at ordinate @xmath237 generates @xmath238 paths @xmath209 ,",
    "@xmath239 . the paths @xmath209 with @xmath232 are all the positive paths generated by means of ( [ gamma ] ) with @xmath225 and @xmath85 applied to the prefix of @xmath4 of length @xmath240 .",
    "as far as the generation of @xmath223 is concerned , we have to distinguish three cases : 1 .",
    "if @xmath241 , @xmath242 , then @xmath243 . if @xmath244 , then @xmath223 is the path with endpoint at ordinate @xmath66 generated by means of ( [ gamma ] ) with @xmath245 and @xmath246 , applied to the path @xmath247 .",
    "if @xmath248 , then @xmath223 is the path with endpoint at ordinate @xmath66 generated by means of ( [ gamma1 ] ) with @xmath245 and @xmath85 applied to the path @xmath249 .",
    "note that , when @xmath250 , the endpoint of the prefix @xmath247 has ordinate 1 , and the path @xmath223 is obtained applying the construction ( [ beta ] ) ( or ( [ beta1 ] ) ) instead of ( [ gamma ] ) ( or ( [ gamma1 ] ) ) .",
    "if @xmath251 , @xmath252 and @xmath253 , then @xmath254 . if @xmath244 , then @xmath223 is the path with endpoint at ordinate @xmath255 generated by means of ( [ gamma ] ) with @xmath256 and @xmath257 applied to the path @xmath258 .",
    "if @xmath248 , then @xmath223 is generated by means of ( [ gamma1 ] ) with @xmath256 and @xmath85 applied to the path @xmath259 .",
    "if @xmath260 , @xmath261 and @xmath252 , then @xmath262 . if @xmath244 , then @xmath223 is the path with endpoint at ordinate @xmath66 generated by means of ( [ gamma ] ) , with @xmath245 and @xmath257 applied to the path @xmath263 . if @xmath248 , then @xmath223 is generated by means of ( [ gamma1 ] ) , with @xmath245 and @xmath264 applied to the path @xmath265 .",
    "in this paper we propose an algorithm for the construction of particular binary words , according to the number of 1 s , excluding a fixed pattern @xmath266 , @xmath19 .",
    "moreover , it would be interesting to study words avoiding patterns which have a different shape , that is not only patterns consisting of a sequence of rise and fall steps",
    ". this could be the first step in the study of a possible universal generating algorithm for pattern avoiding words .",
    "another interesting field of study is to determine a sort of invariant class of avoiding patterns that is the paths @xmath267 such that @xmath268}|=|f^{[{\\mathfrak{p } } _",
    "2]}|= \\dots = |f^{[{\\mathfrak{p } } _ l]}|$ ] with consequent bijective problems .",
    "one could also consider a forbidden pattern on an arbitrary alphabet and investigate words avoiding that pattern , or study words avoiding more than one pattern and the related combinatorial objects , considering various parameters .",
    "s. bilotta , d. merlini , e. pergola , r. pinzani , binary words avoiding a pattern and marked succession rule , _ lattice path combinatorics and applicatons , siena , july 4 - 7 , 2010 _ ( available on line arxiv:1103.5689 ) , ( 2010 ) ."
  ],
  "abstract_text": [
    "<S> in this paper we propose an algorithm to generate binary words with no more 0 s than 1 s having a fixed number of 1 s and avoiding the pattern @xmath0 for any fixed @xmath1 . </S>",
    "<S> we will prove that this generation is exhaustive , that is , all such binary words are generated .    </S>",
    "<S> * keywords : * binary words , pattern avoiding , exhaustive generation . </S>"
  ]
}
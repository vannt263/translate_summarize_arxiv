{
  "article_text": [
    "prepositional phrase ( pp ) attachment disambiguation is an important problem in nlp , for it often gives rise to incorrect parse trees . statistical parsers often predict incorrect attachment for prepositional phrases . for applications like machine translation , incorrect",
    "pp - attachment leads to serious errors in translation .",
    "several approaches have been proposed to solve this problem .",
    "we attempt to tackle this problem for english .",
    "english is a syntactically ambiguous language with respect to pp attachments .",
    "for example , consider the following sentence where the prepositional phrase _ with pockets _ may attach either to the verb _ washed _ or to the noun _",
    "jeans_.    * sentence@xmath0 : * i washed the jeans with pockets . below is the correct dependency parse tree ( for sentence @xmath1 ) where the prepositional phrase _ with pockets _ is attached to the noun _",
    "jeans_.    ( 0,0 ) node[circle , inner sep=0.8pt , fill = black , label = below:@xmath2 ( a ) ; ( 1,0 ) node[circle , inner sep=0.8pt , fill = black , label = below:@xmath3 ( b ) ; ( 2.3,0 ) node[circle , inner sep=0.8pt , fill = black , label = below:@xmath4 ( c ) ; ( 3.3,0 ) node[circle , inner sep=0.8pt , fill = black , label = below:@xmath5 ( d ) ; ( 4.5,0 ) node[circle , inner sep=0.8pt , fill = black , label = below:@xmath6 ( e ) ; ( 5.8,0 ) node[circle , inner sep=0.8pt , fill = black , label = below:@xmath7 ( f ) ;    \\(a ) to [ bend left=45 ] ( b ) ; ( b ) to [ bend left=45 ] ( d ) ; ( c ) to [ bend left=45 ] ( d ) ; ( d ) to [ bend left=45 ] ( e ) ; ( e ) to [ bend left=45 ] ( f ) ; [ dep - parse1 ]    another possible parse tree for the same sentence could be as shown in figure [ fig : m2 ] :    ( 0,0 ) node[circle , inner sep=0.8pt , fill = black , label = below:@xmath2 ( a ) ; ( 1,0 ) node[circle , inner sep=0.8pt , fill = black , label = below:@xmath3 ( b ) ; ( 2.3,0 ) node[circle , inner sep=0.8pt , fill = black , label = below:@xmath4 ( c ) ; ( 3.3,0 ) node[circle , inner sep=0.8pt , fill = black , label = below:@xmath5 ( d ) ; ( 4.5,0 ) node[circle , inner sep=0.8pt , fill = black , label = below:@xmath6 ( e ) ; ( 5.8,0 ) node[circle , inner sep=0.8pt , fill = black , label = below:@xmath7 ( f ) ;    \\(a ) to [ bend left=45 ] ( b ) ; ( b ) to [ bend left=45 ] ( d ) ; ( c ) to [ bend left=45 ] ( d ) ; ( b ) to [ bend left=45 ] ( e ) ; ( e ) to [ bend left=45 ] ( f ) ;    a statistical parser often predicts the pp - attachment incorrectly , and may lead to incorrect parse trees .",
    "let us now look at another sentence .",
    "* sentence@xmath8 : * i washed the jeans with soap .",
    "the correct dependency tree for sentence @xmath9 $ ] is the following ( figure [ fig : m3 ] ) , where the prepositional phrase _ with soap _ attaches to the verb _ washed_.    ( 0,0 ) node[circle , inner sep=0.8pt , fill = black , label = below:@xmath2 ( a ) ; ( 1,0 ) node[circle , inner sep=0.8pt , fill = black , label = below:@xmath3 ( b ) ; ( 2.3,0 ) node[circle , inner sep=0.8pt , fill = black , label = below:@xmath4 ( c ) ; ( 3.3,0 ) node[circle , inner sep=0.8pt , fill = black , label = below:@xmath5 ( d ) ; ( 4.5,0 ) node[circle , inner sep=0.8pt , fill = black , label = below:@xmath6 ( e ) ; ( 5.8,0 ) node[circle , inner sep=0.8pt , fill = black , label = below:@xmath10 ( f ) ;    \\(a ) to [ bend left=45 ] ( b ) ; ( b ) to [ bend left=45 ] ( d ) ; ( c ) to [ bend left=45 ] ( d ) ; ( b ) to [ bend left=45 ] ( e ) ; ( e ) to [ bend left=45 ] ( f ) ;    clearly , there is a case of ambiguity that can be resolved only if the semantics are known . in this case , the fact that _ soap _ is an aid to the verb _ washed _ disambiguates its attachment to the verb rather than the noun _",
    "jeans_. for correctly translating such an english sentence to another language , the attachments need to be marked correctly .    in this work",
    ", we propose a dual decomposition ( dd ) based algorithm for solving the pp attachment problem .",
    "we try to disambiguate the pp attachments for english using the corresponding parallel hindi corpora .",
    "hindi is a syntactically rich language and in most cases exhibits no attachment ambiguities .",
    "the use of case markers and the inherent construction of sentences in hindi make cases of ambiguity rarer .",
    "let us examine how sentences 1 and 2 would look like in hindi , and if there is a case for ambiguity .",
    "sentence ( 3 ) and sentence ( 4 ) are the respective hindi translations of sentence ( 1 ) and ( 2 ) ) .",
    "* sentence @xmath11 : * mn jb valf jf06ws doyf @xmath12    * sentence @xmath13 : * mn san s jf06ws doyf @xmath12    in sentence ( 3 ) , the prepositional phrase _ jeb waali _ attaches to the noun _ jeans _ as shown in the figure [ fig : m4 ] .    ( 0,0 ) node[circle , inner sep=0.8pt , fill = black , label = below : mn ] ( a ) ; ( 0,-0.5 ) node[circle , inner sep=0.8pt , label = below:_maine _ ] ( p ) ;    ( 1,0 ) node[circle , inner sep=0.8pt , fill = black , label = below : jb ] ( b ) ; ( 1,-0.5 ) node[circle , inner sep=0.8pt , label = below:_jeb _ ] ( q ) ;    ( 2.3,0 ) node[circle , inner sep=0.8pt , fill = black , label = below : valf ] ( c ) ; ( 2.3,-0.5 ) node[circle , inner sep=0.8pt , label = below:_waali _ ] ( r ) ;    ( 3.6,0 ) node[circle , inner sep=0.8pt , fill = black , label = below : jf06ws ] ( d ) ; ( 3.6,-0.5 ) node[circle , inner sep=0.8pt , label = below:_jeans _ ] ( s ) ;    ( 4.9,0 ) node[circle , inner sep=0.8pt , fill = black , label = below : doyf ] ( e ) ; ( 4.9,-0.5 ) node[circle , inner sep=0.8pt , label = below:_dhoyee _ ] ( f ) ;    \\(b ) to [ bend left=45 ] ( c ) ; ( a ) to [ bend left=45 ] ( e ) ; ( b ) to [ bend left=45 ] ( d ) ; ( d ) to [ bend left=45 ] ( e ) ;    the parse tree for sentence ( 4 ) is shown in figure [ fig : m5 ] , where the prepositional phrase _",
    "saabun se _",
    "attaches to the verb _",
    "dhoyee_.    ( 0,0 ) node[circle , inner sep=0.8pt , fill = black , label = below : mn ] ( a ) ; ( 0,-0.5 ) node[circle , inner sep=0.8pt , label = below:_maine _ ] ( p ) ;    ( 1.3,0 ) node[circle , inner sep=0.8pt , fill = black , label = below : san ] ( b ) ; ( 1.3,-0.5 ) node[circle , inner sep=0.8pt , label = below : saabun ] ( q ) ;    ( 2.3,0 ) node[circle , inner sep=0.8pt , fill = black , label = below : s ] ( c ) ; ( 2.3,-0.5 ) node[circle , inner sep=0.8pt , label = below:_se _ ] ( r ) ;    ( 3.6,0 ) node[circle , inner sep=0.8pt , fill = black , label = below : jf06ws ] ( d ) ; ( 3.6,-0.5 ) node[circle , inner sep=0.8pt , label = below:_jeans _ ] ( s ) ;    ( 4.9,0 ) node[circle , inner sep=0.8pt , fill = black , label = below : doyf ] ( e ) ; ( 4.9,-0.5 ) node[circle , inner sep=0.8pt , label = below:_dhoyee _ ] ( f ) ;    \\(b ) to [ bend left=45 ] ( c ) ; ( a ) to [ bend left=45 ] ( e ) ; ( d ) to [ bend left=45 ] ( e ) ; ( b ) to [ bend left=45 ] ( e ) ;    the case markers _ waali _ and _ se _ in the two sentences in hindi make the pp - atttachment clear . in our approach , we make use of the parallel hindi sentences to disambiguate the pp attachments for english sentences .",
    "the roadmap of the paper is as follows : we discuss the literature and related work for solving the pp - attachment problem in section [ [ rel - work ] ] .",
    "section [ [ our - approach ] ] describes our approach , and the dual decomposition algorithm in detail .",
    "the setup , data , and experiments are covered in section [ [ exp ] ] . with section [ [ conclusion ] ]",
    ", we conclude our work and discuss scope for future work .",
    "a number of supervised and unsupervised approaches for solving the pp - attachment problem have been proposed in the literature .",
    "use a maximum entropy model for solving the pp - attachment decision . propose an unsupervised approach for solving pp attachment using multilingual aligned data .",
    "they transform the data into high - level linguistic representations and use it make reattachment decisions .",
    "the intuition is similar to our work , but the approach is entirely different .",
    "discuss a transformation - based rule derivation method for pp - attachment disambiguation .",
    "it is a simple learning algorithm which derives a set of transformation rules from training corpus , which are then used for solving the pp - attachment problem .",
    "make use of the semantic dictionary to solve the problem of disambiguating pp attachments .",
    "their work describes use of word sense disambiguation ( wsd ) for both supervised and unsupervised techniques .",
    "agirre and medimi have used wsd - based strategies in different capacities to solve the problem of pp - attachment .",
    "have attempted to solve the pp - attachment problem as a classification problem of attachment either to the preceding verb or the noun , and have used support vector machines ( svms ) that use complex syntactic and semantic features .",
    "we propose a dual decomposition based inference algorithm to look at the problem of pp - attachment disambiguation . dual decomposition , or more generally , lagrangian relaxation , is a classical method for combinatorial optimization and has been applied to several inference problems in nlp @xcite .",
    "we train two separate parser models for english and hindi each , using the mstparser , and make use of these models in the inferencing step .",
    "the input to the algorithm is a parallel english - hindi sentence pair , with its word alignments given .",
    "we first obtain the predicted parse trees for the english and hindi sentences from the respective trained parser models as an initialsiation step .",
    "the dd algorithm then tries to enforce agreement between the two parse trees subject to the given alignments .",
    "let us take a closer look at what we mean by agreement between the two parse trees .",
    "essentially , if we have two words in the english sentence denoted by _ i _ and _ i _ , aligned to words _",
    "j _ and _ j _ in the parallel hindi sentence respectively , we can expect a dependency edge between _",
    "i _ and _ i _ in the english parse tree to correspond to an edge between _ j _ and _ j _ in the hindi parse tree , and vice versa .",
    "also , in order to accommodate structural diversity in languages @xcite , we can expect an edge in the parse tree in one language to correspond to more than one edge , or rather , a path , in the other language parse tree .",
    "this has been captured in the examples in figures [ fig : pipeline](a ) and [ fig : pipeline](b ) . for an edge in the english parse tree , we term the corresponding edge or path in the hindi parse tree as the _ projection _ or _ projected path _ of the english edge on the hindi parse tree , and",
    "similarly there are projected paths from hindi to english . for matters of simplicity",
    ", we ignore the direction of the edges in the parse trees .",
    "the dual decomposition inference algorithm tries to bring the parse trees in the two languages through its constraints .",
    "the problem is formulated as below :    = [ rectangle , draw , thick , fill = blue!0 , text centered , minimum height=10em ] ;    in the above formulation , @xmath14 and @xmath15 represent a english and hindi sentence respectively . @xmath16 and @xmath17 are the corresponding parse trees . @xmath18 and @xmath19 are the model parameters for the edge - factored parser models trained for english and hindi respectively .",
    "@xmath20 represents an edge in the english parse tree @xmath16 .",
    "@xmath21 is a projected path in hindi parse tree @xmath22 for a given english edge @xmath20 . the term @xmath23 stands for the score of a projected path in hindi parse tree @xmath22 for a given english edge @xmath20 .",
    "the score of the projected path is calculated as the sum of scores of all edges in the path .",
    "let @xmath24 denote the projected path on sentence _",
    "h _ in hindi for the edge @xmath20 in the english parse tree .",
    "we assume @xmath25 where @xmath26 is the score of edge _ a _ in the projected path @xmath24 . in the other direction ,",
    "@xmath27 and @xmath28 is similarly defined .    to solve this maximization problem in figure [ objective function ] , we assume one tree to be given and maximize the other and the score of its projected path . the algorithm is described in detail in section [ dd - algo ] .",
    "we use an iterative _ coordinate descent _ algorithm ( algorithm 1 ) which calls the _ project algorithm _ until convergence .",
    "the trees @xmath16 and @xmath17 are initialized by the previously trained parser models for the respective languages .",
    "initialize @xmath29 and @xmath30 from the mstparser models * for * @xmath31 to @xmath32 @xmath33 @xmath34 * if * @xmath35 or @xmath36 * break * * else * @xmath37 @xmath38 * end for *    for @xmath32 iterations , the _ project _ function returns a parse tree for english which maximizes the agreement between the english and hindi parse tree when the hindi parse tree is fixed , and likewise for the hindi parse tree . the algorithm converges when the trees no longer change ,    let us now look at the _ project _ algorithm ( algorithm 2 ) in detail .",
    "it predicts the tree for a sentence in the target language , given the parse tree in the source language , and the word alignments between the parallel sentence .",
    "a parse tree t ( hindi ) and sentence s ( english ) initialize @xmath39 @xmath40 = 0 * for * @xmath31 to @xmath32 @xmath41 \\big ) $ ] * for * @xmath42 @xmath43 + @xmath44 $ ] * end for * * if * @xmath45 then return @xmath46 * else * @xmath47 @xmath48 * end for *    the lagrangian multipliers are initialized to zero .",
    "the best tree in the target language is predicted by the argmax computation in step 4 .",
    "this maximization involves the parser model parameters @xmath49 and the score of the best projected path in the source tree for all edges .",
    "@xmath50 denotes the score of the projected path of the edge @xmath51 on the source tree t. in steps 6 and 7 , the best projected path for every edge of the source tree is predicted on the target tree using the classifiers described in section [ projected path prediction ] .",
    "the constraints here are that the edges in the projected paths from the classifiers and the predicted trees are in agreement .      in order to predict the projected path in one language for an edge in the other language",
    ", we use a set of two classifiers in a pipeline .",
    "let us recall that we have two nodes in one language with an edge between them , and we are trying to predict the path of the corresponding aligned nodes in the other language . the first classifier predicts the length of the projected path , and the second predicts the predicted path itself , given the path length from the first classifier .",
    "let us look at these classifiers separately .",
    "the classifier for path length prediction is a set of five binary classifiers , which predict the path length to be 1 , 2 , 3 , 4 or 5 .",
    "we assume projected path lengths to be no greater than 5 .",
    "these classifiers are _ perceptrons _ trained on separate annotated data .",
    "the features used were the words and pos tags of the four nodes in the pair of alignments under consideration .",
    "the classifier for path prediction is a set of four _ structured perceptron",
    "_ classifiers .",
    "we train four classifiers to predict the paths of length 2 , 3 , 4 and 5 .",
    "these set of classifiers were trained on separate annotated data , and the features used were the same as in the set of classifiers for path length prediction .",
    "a parser model was trained for hindi using the mstparser @xcite by a part of the the hindi dependency treebank data ( 18708 sentences ) from iiit - hyderabad @xcite .",
    "a part of the penn treebank ( 28188 sentences ) was used for training an english parser @xcite .",
    "the treebanks were converted to mstparser format from conll format for training .",
    "a part of the ilci english - hindi tourism parallel corpus ( 1500 sentences ) was used for training the classifiers .",
    "this corpus was pos - tagged using the stanford pos tagger @xcite for english and using the hindi pos tagger @xcite from iiit - hyderabad for hindi .",
    "it was then automatically annotated with dependency parse trees by the parsers we had trained before english and hindi .    for testing , we created a corpus of 100 parallel sentences and their word alignments from the hindi - english tourism parallel corpus .",
    "we manually annotated the instances of pp - attachment ambiguity .",
    "we examine the prediction for attachment of only these cases .",
    "the baseline system used is the attachment predicted by the parser models trained using the mstparser .",
    "we ran experiments on the test set for iterations 10 to 60 , in steps of 10 .",
    "the outputs from the mstparser trained model and the dd algorithm were compared against the gold data for english .",
    "our observations have been tabulated in table [ results ] .",
    "the mstparser model was able to correctly disambiguate 54 number of pp - attachments .",
    "our algorithm , however , performed better and marked 64 number of attachments correctly , in the best case .",
    "the baseline accuracy for pp attachment was 54% . with our approach",
    ", we were able to achieve an improvement of 10% over the baseline .",
    "[ results ]        * *    .test results for english - hindi [ cols=\"^ \" , ]     & 54 & 64 + accuracy ( % ) & 54 & 64 +    we also experimented with the number of iterations to see if the attachment predictions got any better .",
    "the observations have been plotted in the graph in figure [ itr ] .",
    "our algorithm performed best at 30 iterations .        in the event of lack of gold standard data for our experiments ,",
    "we have used statistical pos taggers for pos tagging the data .",
    "also , for getting word alignments , we have used giza++ @xcite , which again has scope for errors . these kind of errors may cascade and cause our system to underperform .",
    "we were able to achieve an accuracy of 10% over the baseline using our approach .",
    "however , in terms of overall dependency parsing and not just with respect to pp - attachment , our system is unable to beat the mstparser model .",
    "however , we need to test our approach on a larger dataset , and across other domains besides tourism . besides hindi",
    ", there is also scope for exploring other languages as an aid for pp - attachment disambiguation in english .",
    "our approach could also be used for wh - clause attachment . since incorrect",
    "pp - attachment has a direct consequence on machine translation , one interesting analysis could be to use pp - attachments from our system and check for improvement in the quality of translation ."
  ],
  "abstract_text": [
    "<S> in this paper , we attempt to solve the problem of prepositional phrase ( pp ) attachments in english . </S>",
    "<S> the motivation for the work comes from nlp applications like machine translation , for which , getting the correct attachment of prepositions is very crucial . </S>",
    "<S> the idea is to correct the pp - attachments for a sentence with the help of alignments from parallel data in another language . </S>",
    "<S> the novelty of our work lies in the formulation of the problem into a dual decomposition based algorithm that enforces agreement between the parse trees from two languages as a constraint . </S>",
    "<S> experiments were performed on the english - hindi language pair and the performance improved by 10% over the baseline , where the baseline is the attachment predicted by the mstparser model trained for english . </S>"
  ]
}
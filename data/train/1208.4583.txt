{
  "article_text": [
    "with the advent of grid computing , the classical science of scheduling theory has gained a new sphere of applications .",
    "methods which were originally developed for decision making around limited resources in manufacturing and service industries have been adopted in the areas of computer science , telecommunication and other computationally intensive disciplines such as computational biology , chemistry and finance @xcite .",
    "specifically , in the area of computational finance , where this paper sources its motivation , the problems of portfolio selection , pricing and hedging of complex financial instruments requires an enormous amount of computational resources whose optimal usage is of utmost importance to investment banks .",
    "the prices and risk sensitivity measures of complex portfolios need to be reevaluated daily , for which an overnight batch of calculations is scheduled and performed for millions of financial transactions , utilizing thousands of computing nodes .",
    "each job has a well - defined priority and required completion time for availability of the resulting figures to the trading desk , risk managers and regulators .",
    "the jobs can generally be stopped and resumed at a later point on a different machine which is referred to as _ preemption _ in scheduling theory . for simplicity of modeling the problem ,",
    "machines are generally assumed to be _ identical _ and there is a known , constant number of machines available .",
    "the problem of finding optimal schedules for jobs running on identical machines has been extensively studied over the last three decades .",
    "sahni @xcite presents an @xmath0 algorithm to construct a _ feasible _",
    "schedule , one that meets all deadlines , if one exists , for @xmath1 jobs and @xmath2 machines .",
    "the basic idea of the algorithm is to schedule jobs with earliest due dates first , but fill up machines with smaller jobs if possible .",
    "note that this method allows the development of an algorithm to compute the minimal amount of unit capacity for which a feasible schedule exists .",
    "this result has been extended to machines with identical functionality but different processing speed , termed _ uniform machines _ , and jobs with both starting times and deadlines @xcite .",
    "however , the scheduling task becomes more difficult when a feasible schedule does not exist and the goal is to minimize some measure of delinquency , often termed _",
    "tardiness_. tardiness of an individual job under a given schedule is defined as the amount of time by which the job finishes after its prescribed deadline , and is considered to be zero if the job finishes on or before the deadline .    in case of minimizing the maximum tardiness across all jobs",
    ", lawler @xcite shows that the problem is solvable in polynomial time , even with some precedence constraints .",
    "martel @xcite also used his construction to create a polynomial time algorithm to find the schedule which minimizes maximum lateness .",
    "however , if our measure concerns the total tardiness instead of the maximal one , then even the single machine , total tardiness problem ( without weights ) was proven to be np - hard by du et al @xcite . a pseudopolynomial algorithm has been developed by lawler @xcite for this problem , using dynamic programming , but this is for the 1-machine problem and does not have good practical runtime characteristics .    in practical applications ,",
    "jobs often have relative priorities associated with them , represented by positive real _ weights _ and the objective becomes minimizing the total weighted tardiness ( twt ) .",
    "once the np - hardness of the twt problem was established , most of the research work on the problem concerned the development of fast , heuristic algorithms .",
    "dogramaci et al .",
    "@xcite propose a simple heuristic for the total ( non - weighted ) tardiness problem without preemption .",
    "rachamadugu et al .",
    "@xcite then studied the identical machine , total weighted tardiness problem without preemption .",
    "they proposed a myopic heuristic and compared this to earliest due date ( edd ) , weighted shortest processing time ( wspt ) and montagne s rule on small problem sizes ( 2 or 5 jobs in total ) .",
    "azizoglu et al .",
    "@xcite worked on an algorithm to find optimal schedule for the unweighted total tardiness problem without preemption , but their branch and bound exponential algorithm is too slow , in practice , for problems with more than 15 jobs .",
    "armentano et al .",
    "@xcite examined the non - weighted problem without preemption , and starting from the kpm heuristic of koulamas @xcite improved upon it , using tabu search .",
    "guinet @xcite applies simulated annealing to solve the problem with uniform and identical machines and a lower bound is presented in order to evaluate the performance of the proposed method .",
    "more recently , sen et al . @xcite surveyed the existing heuristic algorithms for the single - machine total tardiness and total weighted tardiness problems while biskup et al .",
    "@xcite did this for the identical machines total tardiness problem and also proposed a new heuristic .",
    "akyol et al .",
    "@xcite provide an excellent recent review of artificial neural network based approaches to scheduling problems and proposes a coupled gradient network to solve the weighted earliness plus tardiness problem on multiple machines .",
    "the feasibility of the method is illustrated on a single 8-job scheduling problem .",
    "we suggest a novel heuristic for the twt problem , based on the hopfield neural network approach which is shown to perform better than existing simple heuristics and has desirable scaling characteristics .",
    "maheswaran et al .",
    "@xcite applied a similar approach to the single machine twt problem and their results were encouraging for a specific 10-job problem .    in this paper , we first map the problem into quadratic optimization and then the hopfield net is used to provide fast polynomial time , heuristic solution .",
    "the topics are organized as follows : in section 2 , we present the problem formulation and the model used , in section 3 existing heuristics are defined and explained , in section 4 our novel hnn approach is introduced , in section 5 numerical results are presented and finally in section 6 some conclusions are drawn and directions for future research are outlined .",
    "in this section , we give a formal presentation for the problem of optimally scheduling jobs on finite number of identical processors under constraints on the completion times .",
    "the basic formalism is the following :    * given @xmath3 jobs with sizes @xmath4 .",
    "the processing of the jobs can be stopped and resumed at any time , so the processing time units of each job need not be contiguous . in the literature",
    "this condition is known as preemption and also assumes a task started on one machine can continue on another @xcite .",
    "* for each job a cutoff time is prescribed by @xmath5 .",
    "this constraint defines the time within which the job is to be completed . * the constant number of processors , the capacity of the system",
    "is denoted by @xmath6 .",
    "* we are also given a vector @xmath7 denoting the relative priority ( or weight ) of each job , which can be used in the definition of the objective function .",
    "a schedule is represented by a binary matrix @xmath8 where @xmath9 if job @xmath10 is being processed at time slot @xmath11 , and @xmath12 denotes the length of the schedule .",
    "an example is given in ( [ eq : e21 ] ) where the parameters are the following : @xmath13 , @xmath14 , @xmath15 , @xmath16 .",
    "@xmath17 the first row in ( [ eq : e21 ] ) denotes the fact that under this schedule @xmath18 , the first job is processed in time steps @xmath19 and @xmath20 ( note that preemption is used as the processing of this job is not continuous ) and therefore the prescribed size @xmath21 of this job completes within the prescribed cutoff time of time step @xmath20 .",
    "similarly , the @xmath20 units of the second job complete within the cutoff time of @xmath20 and the third job is completed ahead of the cutoff time on time step @xmath21 .",
    "summing the columns of matrix @xmath18 , we see that the maximal capacity of @xmath22 is fully utilized on each time step .    in order to evaluate the effectiveness of a given schedule @xmath18",
    ", we define tardiness of a job as follows : @xmath23 where @xmath24 is the actual finish time of job @xmath10 under schedule @xmath18 : @xmath25 ( the position of the last @xmath19 in the @xmath10th row in scheduling matrix @xmath18 . )    the problem can now be stated formally as follows : @xmath26 under the following constraints :    * the sizes of the scheduled jobs in the scheduling matrix are equal to the predefined amounts : @xmath27 * the number of scheduled jobs at any given time instant does not exceed the capacity of the system : @xmath28    we revisit our previous example with a minor change : @xmath13 , @xmath14 , @xmath29 , @xmath16 and a weight vector @xmath30 .",
    "it can be observed that there is no solution , in which all jobs are completed before their cutoff times .",
    "a minimal weighted tardiness solution is the following : @xmath31",
    "given the np - hardness of the scheduling task as shown by du et al .",
    "@xcite , and therefore the amount of time it would take to find the exact , optimal solution , in most real - world settings the pragmatic approach of finding a fast , sub - optimal , but good solution is followed .",
    "as outlined in the introduction , this has been a very active field of research , and most studies use the earliest due date ( edd ) and weighted shortest process time ( wspt ) heuristics as benchmarks for evaluating the proposed algorithms .",
    "in addition to these , we also outline the recently developed load balancing scheduling ( lbs ) heuristic and a newly proposed largest weighted process first ( lwpf ) heuristic .",
    "furthermore , we also outline a random processing method which is used as a low benchmark for our testing results .      the edd heuristic orders the sequence of jobs to be executed from the job with the earliest due date to the job with the latest due date .",
    "using the notation of section 2 , we relabel the job indices so that the following inequality holds : @xmath32 once this ordering is determined , the jobs are allocated to the machines in this order , always utilizing the maximum available capacity .",
    "once a job finishes and capacity is freed up , the next job using the above ordering is scheduled on the freed up machine .",
    "it has been shown in @xcite that edd finds the optimal schedule when one wants to minimize the maximum tardiness on a single machine .",
    "however , we note that when the objective function includes the relative priorities of jobs , edd is at a severe disadvantage , as it does not include consideration of the weights .",
    "the wspt method is analogous to the edd method in that it orders the jobs according to well - defined criteria and then schedules the jobs according to this ordering , utilizing the maximum available capacity available .",
    "once a job finishes and capacity is freed up , the next job using the ordering is scheduled . using the notation of section 2 ,",
    "the jobs are ordered such that the below holds : @xmath33      this heuristic is analogous to the edd and the wspt heuristics with the jobs ordered according to the following inequality : @xmath34 this is a simple heuristic which allows us get a sense of the importance of considering the weights versus the cutoff times . we have not seen this simple heuristic mentioned anywhere in the literature , but it turns out to have quite good empirical characteristics which is one of the many contributions of this paper .",
    "laszlo et al @xcite suggest a novel deterministic , polynomial time algorithm for scheduling jobs with cutoff times , in the context of load balancing for wireless sensor networks .",
    "the basic idea of the algorithm is to start scheduling the jobs backwards from the maximal cutoff time , in order of decreasing cutoff times , always ensuring full capacity is utilized . for a more formal definition of the algorithm",
    ", please see @xcite .",
    "we note that whilst the algorithm has proven to be extremely successful for load balancing , it does not take into account the weights of the jobs and therefore will suffer from the same shortcomings in our setting as edd .      in this method ,",
    "the jobs are ordered randomly and are scheduled in such a way as to always fully utilize the maximum available capacity .",
    "this unsophisticated heuristic is useful as a low benchmark by repeating it a number of times and taking the best solution over the multiple repeats .",
    "since the number of possible binary matrices grows exponentially with the number of nodes and the length of the schedule , exhaustive search with complexity @xmath35 is generally computationally infeasible to solve the optimization problem at hand .",
    "thus , our goal is to develop a polynomial time approximate solution by mapping the problem to an analogous quadratic optimization problem , similar to the approach of levendovszky et al @xcite and treplan et al @xcite .",
    "we first review the methods available for optimizing equations in quadratic form .",
    "let us assume that matrix @xmath36 is a symmetric matrix of size @xmath37 and vector @xmath38 is of length @xmath1 .",
    "we seek the optimal @xmath1 dimensional vector @xmath39 which minimizes the following quadratic function @xcite : @xmath40 subject to one or more constraints of the form of @xmath41 if the problem at hand contains only linear constraints then it can be solved as presented by murty et al @xcite . in other cases ,",
    "if the matrix @xmath36 is positive definite , then the function @xmath42 is convex and the problem can be solved with the ellipsoid method presented by zhi - quan et al @xcite .",
    "when @xmath43 is indefinite , the problem is np - hard ( for details see @xcite ) .    a frequently used powerful , heuristic algorithm to solve quadratic optimization problems is the hopfield neural network ( hnn ) .",
    "this neural network is described by the following state transition rule :    @xmath44 where @xmath45 using the lyapunov method , hopfield @xcite proved that the hnn converges to its fixed - point , as a consequence the hnn minimizes a quadratic lyapunov function : @xmath46 thus , the hnn is able to solve combinatorial optimization problems in polynomial time under special conditions as it has been demonstrated by mandziuk @xcite . using this method in practice we have to handle the following problem : in some cases the hnn method may get stuck in local minimal point of its lyapunov function .",
    "these methods motivate us to map the existing optimization problem into quadratic form .",
    "first the binary scheduling matrix @xmath47 is mapped into a binary column vector @xmath48 as follows : @xmath49 @xmath50 the original objective function ( [ eq : e23 ] ) is elaborated as follows : @xmath51 this objective is equivalent to : @xmath52 the minimization problem is thus equivalent to : @xmath53 therefore the mapping required is : @xmath54 the solution is the following : @xmath55 @xmath56 where @xmath57 having transformed the objective function to a quadratic form , we now turn our attention to doing the same with the two constraints outlined in ( [ eq : e24 ] ) and ( [ eq : e25 ] ) .    the constraints in ( [ eq : e24 ] ) can be rewritten as follows : @xmath58 this will lead to the following equation : @xmath59 the solution of equation ( [ eq : e416 ] ) is : @xmath60 @xmath61 another constraint ensures that the scheduling does not overload the processing units , described in ( [ eq : e25 ] ) .",
    "the required transformation is as follows : @xmath62 please note the technicality that this constraint may not be relevant for the last few columns where only the remaining jobs have to be scheduled and schedule matrices not exhausting the full capacity should not be penalized .",
    "the total length of scheduling can be written as follows : @xmath63 @xmath64 the number of columns where capacity @xmath65 needs to be fully utilized is the following : @xmath66 taking into consideration ( [ eq : e421 ] ) the mapping of ( [ eq : e419 ] ) can be described by the following equation : @xmath67 the solution of this equation is the following : @xmath68 , \\ ] ] @xmath69 where @xmath70 we can combine these mappings into the form of equation ( [ eq : e41 ] ) as follows : @xmath71 and @xmath72 note that the objectives can be controlled with heuristic constants @xmath73 and @xmath74 in order to strike an appropriate balance between the weights of different requirements . having this quadratic form at hand , we can apply the hnn to provide an approximate solution to the optimization problem in polynomial time .",
    "in this section , the performance of the hnn approach is investigated and is compared to the performance of other heuristics .      each method outlined in section 3 and",
    "the hnn method outlined in section 4 has been tested by simulation on a large and diverse set of input parameters with the aim to characterize the algorithms empirically on scheduling problems of different size of jobs .",
    "the algorithms were implemented in matlab and tests were run in this simulation environment with randomly generated parameters such as size of jobs , cutoff times , and weights .",
    "the size of each job and its cutoff time and corresponding weight are generated as follows : @xmath75 \\right ) ,    \\label{eq : e511}\\ ] ] @xmath76 \\right ) ,    \\label{eq : e512}\\ ] ] @xmath77 \\right ) ,    \\label{eq : e513}\\ ] ] where @xmath78 produces a uniformly distributed random integer value in range @xmath79 . in our simulations",
    "the constant @xmath80 equals @xmath81 and @xmath82 equals @xmath83 .",
    "the number of processors ( @xmath65 ) is determined as follows : @xmath84 the problem is expected to be solved without tardiness when the capacity is @xmath85 . therefore ( [ eq : e514 ] ) ensures that there is a high likelihood of tardiness associated with the generated problem .    for each problem size",
    ", @xmath86 different problems were generated randomly , using ( [ eq : e511])-([eq : e514 ] ) and the results the methods were compared in each case .",
    "the random method was repeated @xmath87 times for each problem and the best solution was used .",
    "furthermore , the hnn method was repeated @xmath87 times for each problem with different random starting points and the best solution was used .",
    "in addition , the heuristical parameters @xmath73 and @xmath74 were adjusted between the simulations in order to provide a good balance between optimizing the objective function , but also meeting the required constraints to produce a valid scheduling matrix . to adjust the heuristical parameters we used algorithm [ alg : a1 ] .",
    "@xmath88 @xmath89 @xmath90 @xmath91 @xmath92 @xmath93 @xmath94 @xmath95 @xmath96    @xmath97 remove @xmath19 from row @xmath11 , where @xmath11 is the row in column @xmath98 with minimal weight that has @xmath99 remove @xmath19 from row @xmath98 from the column @xmath100 , where @xmath100 is the righternmost column in row @xmath98 such that @xmath101 add @xmath19 to row @xmath98 in column @xmath100 where @xmath100 is the lefternmost column where @xmath19 can be added without violating the capacity constraint @xmath65 . @xmath47",
    "even so , in some cases the hnn is unable to provide a valid solution , because the prescribed constraints on job sizes and capacity are violated .",
    "therefore , we introduced an error correction function ( see algorithm [ alg : a2 ] ) in order to cut and replace the unnecessary 1-s in the scheduling matrix . in our simulations",
    "parameter @xmath102 equals @xmath83 .",
    "all of the results presented in the following sections concern valid schedules meeting the required constraints .",
    "the first simulation compares the average total weighted tardiness provided by the algorithms for different problem sizes .",
    "figure [ fig:1 ] demonstrates that the best solution achieved by the hnn produces better average twt for all problem sizes than any of the other heuristics .",
    "the performances of the edd , lbs and random methods are , on average , worse than the wspt and lwpf heuristics and the hnn for all problem sizes .",
    "this shows that consideration of the weights in the optimization problem is critical to reach near - optimal twt schedules .",
    "it is also clearly visible that the hnn consistently outperforms all other methods for all problem sizes .",
    "note also that the simple lwpf heuristic , proposed by us , outperforms the wspt heuristic widely used as a benchmark in the literature .      in this section ,",
    "we quantify how much better the solution provided by the hnn is , in comparison to the edd , wspt and lwpf algorithms .",
    "figure [ fig:2 ] depicts the ratio of average twt produced by the hnn method versus the other heuristics .",
    "we conclude that , on average , the best solution of the hnn heavily outperforms the traditional solutions : the total weighted tardiness of the best hnn solution is @xmath103 of the edd , @xmath104 of the wspt , and @xmath105 of the lwpf .",
    "as the problem size increases , the wspt and lwpf heuristics produce solutions which are closer to the hnn .        in order to verify that the hnn consistently outperforms the other heuristics on a wide spectrum of problems , not just on a few selected problems for each given problem size , we ran a more detailed experiment . in this case",
    ", we investigated @xmath106 randomly generated problems for each problem size and computed the percentage of times the hnn produced a better solution than lwpf , the next best method .",
    "table [ tab:1 ] shows the result which quite convincingly proves the general applicability of the hnn to different problem types . across the spectrum of problem domain ,",
    "the ratio is higher than @xmath107 for all investigated job sizes .",
    ".percentage of problems in which the hnn provides an improved solution over the next best heuristic , lwpf [ cols=\"<,^,^,^,^,^,^,^,^,^ \" , ]     note that this table shows the theoretical runtime for a single run of the specified algorithm , whilst we need to run a constant number of the hnn and random iterations . on the other hand",
    ", these independent runs can be executed in parallel on several computers , multicore machines or even gpu - based architectures , so the overall runtime should not be significantly different due to the need to run multiple iterations .",
    "figure [ fig:3 ] depicts the empirical runtime comparison of the different heuristics which confirm the theoretical limits .",
    "although the hnn is the slowest method of the investigated heuristics , in practice we see that near optimal solution of a @xmath86 job problem takes only around 6 seconds / iteration ( including the iterative adjustment of the heuristic parameters as per algorithm [ alg : a1 ] ) on core i7@3ghz processor , running non - optimized matlab code , which is very promising as far as its practical applicability in real life applications is concerned . with further optimization and parallelization on multicore machines or gpgpu technology , the hnn method provides better quality solutions than the other heuristics within acceptable runtimes .",
    "in this paper , we studied the np - hard problem of scheduling jobs with given relative priorities ( weights ) and deadlines on identical machines , minimizing the twt measure .",
    "we developed a novel heuristic approach , utilizing quadratic programming and the hopfield neural network and we showed that , in general , it outperforms the edd and wspt methods .",
    "furthermore , we have shown that our approach can be applied in real - time settings for small problem sizes and possesses scalability features which are acceptable for real world applications .",
    "more formal methods for the selection of alpha , beta and gamma parameters could be investigated in the future to further improve performance .",
    "another idea to explore is whether a more intelligent selection of the initial point for the hnn algorithm ( eg . the result of the lwpf or wspt heuristics ) would improve the algorithms performance over the random starting point which was used in our tests .",
    "finally , the performance of the hnn algorithm needs to be compared to more complex heuristic methods .",
    "d. e. http://www.deu.edu.tr/deuweb/english/icerik/icerik.php?kod=6933[akyol ] , g. m. http://kisi.deu.edu.tr/mirac.bayhan/[bayhan ] , multi - machine earliness and http://www.springerlink.com/content/j42666764q57j768/fulltext.pdf[tardiness scheduling problem ] : an interconnected neural network approach .",
    "j. of   http://www.ingentaconnect.com/content/klu/170;jsessionid=e2q15a1aanbi.alice[adv .",
    "manuf . technol . ]",
    "_ , * 37 * ( 2008 ) 576588",
    ".    v. a. http://www.densis.fee.unicamp.br/~vinicius/[armentano ] , d. s. yamashita , http://www.springerlink.com/content/p130j57823581544/fulltext.pdf[taboo search ] for scheduling on identical parallel machines to minimize mean tardiness .",
    "_ j. of   http://www.springerlink.com/content/0956-5515/[intell .",
    "_ , * 11 * ( 2000 ) 453460 .",
    "m. http://www.ie.metu.edu.tr/~meral/[azizoglu ] , o. http://www.eng.metu.edu.tr/pages/roster/ie/okirca.html[kirca ] , http://pdn.sciencedirect.com/science?_ob=miamiimageurl&_cid=271692&_user=303407&_pii=s0925527398000346&_check=y&_origin=article&_zone=toolbar&_coverdate=01-jul-1998&view=c&origincontentfamily=serial&wchp=dglzvlt-zskwb&md5=02b6599b4fce34cb16af86e5fab52fa6/1-s2.0-s0925527398000346-main.pdf[tardiness minimization ] on parallel machines .",
    "j. of http://www.journals.elsevier.com/international-journal-of-production-economics/[production econ . ]",
    "_ , * 55 * ( 1998 ) 163168 .",
    "d. biskup , j. herrman , j. n. d. http://cba.uah.edu/is/gupta[gupta ] , scheduling http://pdn.sciencedirect.com/science?_ob=miamiimageurl&_cid=271692&_user=303407&_pii=s0925527308001515&_check=y&_origin=article&_zone=toolbar&_coverdate=30-sep-2008&view=c&origincontentfamily=serial&wchp=dglbvlv-zskwz&md5=7b8fbf6e6ed22800adf81b749691e1d0/1-s2.0-s0925527308001515-main.pdf[identical parallel machines ] to minimize total tardiness .",
    "j. of link : www.elsevier.com / locate / ijpe[production econ . ]",
    "_ , * 115 * ( 2008 ) 134142",
    ".      a. http://www.provost.bilkent.edu.tr/rector/dogramac.htm[dogramaci ] , j. surkis , evaluation of a heuristic for http://www.jstor.org/stable/pdfplus/2630795.pdf?accepttc=true[scheduling independent jobs ] on parallel identical processors .",
    "sci . _ ] , * 25 * , 12 ( 1979 ) 12081216 .",
    "j. du , j. y. t. http://web.njit.edu/~leung/[leung ] , http://www.jstor.org/stable/pdfplus/3689992.pdf[minimizing total tardiness ] on one machine is np - hard .",
    "res . _ ] , * 15 * , 3 ( 1990 ) 483495 .",
    "a. guinet , scheduling independent jobs on uniform parallel machines to minimize tardiness criteria .",
    "_ j. of http://www.springer.com/business+%26+management/production/journal/10845[intell .",
    "manuf . ] _ , * 6 * ( 1995 ) 95103 .      j. j. http://www.cirs.net/researchers/researchers.php?id=567[hopfield ] , neural networks and physical systems with http://bi.snu.ac.kr/courses/g-ai09-2/hopfield82.pdf[emergent collective computational ] abilities . in : _",
    "* 79 * ( 1982 ) 25542558 .    c. p. http://www.isi.gr/en/profile/koulamas_christos.html[koulamas ] , the http://www.jstor.org/stable/pdfplus/171984.pdf[total tardiness problem ] : review and extensions .",
    "res . _ ] , * 42 * ( 1994 ) 10251041 .",
    "e. laszlo , k. http://users.itk.ppke.hu/~kami[tornai ] , g. treplan , j. http://neural.hit.bme.hu/levendov/[levendovszky ] , novel http://www.thinkmind.org/index.php?view=article&articleid=ctrq_2011_3_20_10067[load balancing scheduling ] algorithms for wireless sensor networks . in : _",
    "the fourth int . conf . on communication theory , reliability , and quality of service _ ,",
    "budapest , 2011 , pp .",
    "5449 .",
    "e. l. lawler , preemptive scheduling of precedence - constrained jobs on parallel machines , deterministic and stochastic scheduling .",
    "nato advanced study and research institute on theoretical approaches to scheduling problems _ , 1981 , pp .",
    "101123 .",
    "j. http://neural.hit.bme.hu/levendov/[levendovszky ] , a. olah , k. http://users.itk.ppke.hu/~kami[tornai ] , g. treplan , novel load balancing algorithms ensuring uniform packet loss probabilities for wsn , _",
    "ieee 73rd vehicular technology conf . ,",
    ", 2011 .",
    "r. maheswaran , s. g. ponnambalam , s. d. nithin , a. s. ramkumar , hopfield neural network approach for http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1460699[single machine scheduling problem ] . in : _ proc .",
    "2004 ieee conf . on http://ieeexplore.ieee.org/xpl/mostrecentissue.jsp?punumber=9872[cybernetics and intelligent systems ] _ , 2004 , pp .",
    "850854 .",
    "j. http://www.mini.pw.edu.pl/~mandziuk/[mandziuk ] , solving the http://www.mini.pw.edu.pl/~mandziuk/prace/tsp_dm.pdf[travelling salesman problem ] with a hopfield  type neural network .",
    "http://demmath.mini.pw.edu.pl/index.php[_demonstratio math .",
    "_ ] , * 29 * , 1 ( 1996 ) 219231",
    ".    j. http://www.mini.pw.edu.pl/~mandziuk/[mandziuk ] , b. http://www.mini.pw.edu.pl/~macukow/eng/glowna_eng.html[macukow ] , a neural network designed to solve the http://www.mini.pw.edu.pl/~mandziuk/prace/bc92.pdf[n-queens problem ] .",
    "_ ] , * 66 * , 4 ( 1992 ) 375379 .    c. http://www.cs.ucdavis.edu/people/faculty/martel.html[martel ] , http://delivery.acm.org/10.1145/330000/322337/p812-martel.pdf?ip=152.66.248.85&acc=active%20service&cfid=68630571&cftoken=15114997&__acm__=1330646036_26f07c187a5ca39c42f2a5dec722e65d [ preemptive scheduling ] with release times , deadlines , and due times _ j. of the http://jacm.acm.org/[acm]_ , * 29 * , 3 ( 1982 ) 812829 .",
    "k. g. http://www-personal.umich.edu/~murty/[murty ] , linear complementarity , http://ioe.engin.umich.edu/people/fac/books/murty/linear_complementarity_webbook/[_linear and nonlinear programming _ ] .",
    "springer - verlag ] , 1988 .",
    "r. m. v. rachamadugu , t. e. morton , _ myopic heuristics for the http://www.ri.cmu.edu/pub_files/pub3/rachamadugu_ram_mohan_v_1983_1/rachamadugu_ram_mohan_v_1983_1.pdf[weighted tardiness problem ] on identical parallel machines_. tech .",
    "rep . , ( cmu - ri - tr-83 - 17 ) carnegie - melon university , the robotics institute , 1983",
    ".    s. http://www.cise.ufl.edu/~sahni/[sahni ] , http://www.cise.ufl.edu/~sahni/papers/computationallyrelatedproblems.pdf[computationally related problems ] .",
    "j. on comp .",
    "_ ] * 3 * ( 1974 ) 262279 .",
    "s. http://www.cise.ufl.edu/~sahni/[sahni ] , http://www.cise.ufl.edu/~sahni/papers/preduedates.pdf[preemptive scheduling ] with due dates .",
    "res . _ ] , * 27 * , 5 ( 1979 ) 925934 .",
    "t. sen , j. m. http://70.84.139.130/~sbencat/faculty/index.php?ncat=profile&id=207&depid=2[sulek ] , p. http://www.utc.edu/academic/business/profile_dileepan.php[dileepan ] , http://pdn.sciencedirect.com/science?_ob=miamiimageurl&_cid=271692&_user=303407&_pii=s0925527302002657&_check=y&_origin=article&_zone=toolbar&_coverdate=25-jan-2003&view=c&origincontentfamily=serial&wchp=dglbvlk-zskwa&md5=db4f9a0973601183eb1183d05487bf66/1-s2.0-s0925527302002657-main.pdf[static scheduling research ] to minimize weighted and unweighted tardiness : a state - of - the - art survey .",
    "j. of http://www.journals.elsevier.com/international-journal-of-production-economics/[production econ . ]",
    "_ , * 83 * ( 2003 ) 112",
    ".    g. treplan , k. http://users.itk.ppke.hu/~kami[tornai ] , j. http://neural.hit.bme.hu/levendov/[levendovszky ] , http://www.hindawi.com/journals/ijdsn/2011/107062/cta/[quadratic programming ] for tdma scheduling in wireless sensor networks , _ int . j. of distrib . sen .",
    "netws . _ , 2011 .",
    "17 p.    l. http://www.ece.umn.edu/~luozq/[zhi-quan ] , m. wing - kin , m. c. s. anthony , y. yinyu , z. shuzhong , semidefinite relaxation of http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5447068[quadratic optimization ] problems .",
    "http://ieeexplore.ieee.org/xpl/recentissue.jsp?punumber=79[_signal process . mag .",
    "_ ] , ieee * 27 * , 3 ( 2010 ) 2034 ."
  ],
  "abstract_text": [
    "<S> this paper explores fast , polynomial time heuristic approximate solutions to the np - hard problem of scheduling jobs on n identical machines . </S>",
    "<S> the jobs are independent and are allowed to be stopped and restarted on another machine at a later time . </S>",
    "<S> they have well - defined deadlines , and relative priorities quantified by non - negative real weights . </S>",
    "<S> the objective is to find schedules which minimize the total weighted tardiness ( twt ) of all jobs . </S>",
    "<S> we show how this problem can be mapped into quadratic form and present a polynomial time heuristic solution based on the hopfield neural network ( hnn ) approach . </S>",
    "<S> it is demonstrated , through the results of extensive numerical simulations , that this solution outperforms other popular heuristic methods . </S>",
    "<S> the proposed heuristic is both theoretically and empirically shown to be scalable to large problem sizes ( over 100 jobs to be scheduled ) , which makes it applicable to grid computing scheduling , arising in fields such as computational biology , chemistry and finance . </S>"
  ]
}
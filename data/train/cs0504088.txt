{
  "article_text": [
    "computer power has roughly doubled every 18 months for the last half - century ( moore s law ) .",
    "this increase in power is due primarily to the continuing miniaturization of the elements of which computers are made , resulting in more and more elementary gates per unit area with higher and higher clock frequency , accompanied by less and less energy dissipation per elementary computing event .",
    "roughly , a linear increase in clock speed is accompanied by a square increase in elements per unit area ",
    "so if all elements compute all of the time , then the dissipated energy per time unit rises cubicly ( linear times square ) in absence of energy decrease per elementary event .",
    "the continuing dramatic decrease in dissipated energy per elementary event is what has made moore s law possible .",
    "but there is a foreseeable end to this : there is a minimum quantum of energy dissipation associated with elementary events .",
    "this puts a fundamental limit on how far we can go with miniaturization , or does it ?",
    "r. landauer  @xcite has demonstrated that it is only the ` logically irreversible ' operations in a physical computer that necessarily dissipate energy by generating a corresponding amount of entropy for every bit of information that gets irreversibly erased ; the logically reversible operations can in principle be performed dissipation - free .",
    "one should sharply distinguish between the issue of logical reversibility and the issue of energy dissipation freeness .",
    "if a computer operates in a logically reversible manner , then it still may dissipate heat .",
    "for such a computer we know that the laws of physics do not preclude that one can invent a technology in which to implement a logically similar computer to operate physically in a dissipationless manner .",
    "computers built from reversible circuits , or the reversible turing machine , @xcite , implemented with current technology will presumably dissipate energy but may conceivably be implemented by future technology in an adiabatic fashion .",
    "but for logically irreversible computers adiabatic implementation is widely considered impossible .",
    "thought experiments can exhibit a computer that is both logically and physically perfectly reversible and hence perfectly dissipationless .",
    "an example is the billiard ball computer , @xcite , and similarly the possibility of a coherent quantum computer , @xcite .",
    "our purpose is to determine the theoretical ultimate limits to which the irreversible actions in an otherwise reversible computation can be reduced .",
    "currently , computations are commonly irreversible , even though the physical devices that execute them are fundamentally reversible . at the basic level , however , matter is governed by classical mechanics and quantum mechanics , which are reversible .",
    "this contrast is only possible at the cost of efficiency loss by generating thermal entropy into the environment . with computational device technology rapidly approaching the elementary particle level",
    "it has been argued many times that this effect gains in significance to the extent that efficient operation ( or operation at all ) of future computers requires them to be reversible , @xcite .",
    "the mismatch of computing organization and reality will express itself in friction : computers will dissipate a lot of heat unless their mode of operation becomes reversible , possibly quantum mechanical . since 1940 the dissipated energy per bit operation in a computing device has  with remarkable regularity  decreased at the inverse rate of moore s law @xcite ( making moore s law possible ) .",
    "extrapolation of current trends shows that the energy dissipation per binary logic operation needs to be reduced below @xmath0 ( thermal noise ) within 20 years . here",
    "@xmath1 is boltzmann s constant and @xmath2 the absolute temperature in degrees kelvin , so that @xmath3 joule at room temperature .",
    "even at @xmath0 level , a future device containing 1 trillion ( @xmath4 ) gates operating at 1 terahertz ( @xmath4 ) switching all gates all of the time dissipates about 3000 watts .",
    "consequently , in contemporary computer and chip architecture design the issue of power consumption has moved from a background worry to a major problem .",
    "theoretical advances in reversible computing are scarce and far between ; many serious ones are listed in the references . for this review",
    "we have drawn primarily on the results and summarized material in @xcite .",
    "it is a tell - tale sign of the difficulty of this area , that no further advances have been made in this important topic since that time .",
    "there is a decisive difference between reversible circuits and reversible special purpose computers @xcite on the one hand , and reversible universal computers on the other hand @xcite .",
    "while one can design a special - purpose reversible version for every particular irreversible circuit using reversible universal gates , such a method does not yield an irreversible - to - reversible compiler that can execute any irreversible program on a fixed universal reversible computer architecture as we are interested in here .    in the standard model of a turing machine",
    "the elementary operations are rules in quadruple format @xmath5 meaning that if the finite control is in state @xmath6 and the machine scans tape symbol @xmath7 , then the machine performs action @xmath8 and subsequently the finite control enters state @xmath9 .",
    "such an action @xmath8 consists of either printing a symbol @xmath10 in the tape square scanned , or moving the scanning head one tape square left or right .",
    "quadruples are said to _ overlap in domain _ if they cause the machine in the same state and scanning the same symbol to perform different actions . a _",
    "deterministic turing machine _ is defined as a turing machine with quadruples no two of which overlap in domain .",
    "now consider the special format ( deterministic ) turing machines using quadruples of two types : _ read / write _ quadruples and _ move _ quadruples .",
    "a read / write quadruple @xmath11 causes the machine in state @xmath6 scanning tape symbol @xmath8 to write symbol @xmath12 and enter state @xmath9 .",
    "a move quadruple @xmath13 causes the machine in state @xmath6 to move its tape head by @xmath14 squares and enter state @xmath9 , oblivious to the particular symbol in the currently scanned tape square .",
    "( here ` @xmath15 ' means ` one square left ' , and ` @xmath16 ' means ` one square right ' . )",
    "quadruples are said to _ overlap in range _ if they cause the machine to enter the same state and either both write the same symbol or ( at least ) one of them moves the head .",
    "said differently , quadruples that enter the same state overlap in range unless they write different symbols .",
    "reversible turing machine _ is a deterministic turing machine with quadruples no two of which overlap in range .",
    "a @xmath1-tape reversible turing machine uses @xmath17 tuples which , for every tape separately , select a read / write or move on that tape . moreover , any two tuples can be restricted to some single tape where they do nt overlap in range .",
    "simulation of irreversible turing machines by reversible ones goes back to lecerf  @xcite in 1963 , a paper that was little noticed and only recently rediscovered , and independently bennett  @xcite in 1973 , which paper commonly gets all the credit . to show that every partial recursive function can be computed by a reversible turing machine",
    "one can proceed as follows @xcite .",
    "take the standard irreversible turing machine computing that function .",
    "we modify it by adding an auxiliary storage tape called the ` history tape ' .",
    "the quadruple rules are extended to 6-tuples to additionally manipulate the history tape . to be able to reversibly undo ( retrace ) the computation deterministically , the new 6-tuple rules have the effect that the machine keeps a record on the auxiliary history tape consisting of the sequence of quadruples executed on the original tape .",
    "reversibly undoing a computation entails also erasing the record of its execution from the history tape .",
    "this notion of reversible computation means that only @xmath18 recursive functions can be computed . to reversibly simulate an irreversible computation from @xmath19 to @xmath20 one reversibly computes from input @xmath19 to output @xmath21 .",
    "reversible turing machines or other reversible computers will require special reversible programs .",
    "one feature of such programs is that they should be executable when read from bottom to top as well as when read from top to bottom .",
    "examples are the programs in the later sections . in general",
    ", writing reversible programs will be difficult .",
    "however , given a general reversible simulation of irreversible computation , one can simply write an oldfashioned irreversible program in an irreversible programming language , and subsequently simulate it reversibly .",
    "this leads to the following :    an _ irreversible - to - reversible compiler _ receives an irreversible program as input and compiles it to a reversible program .",
    "all computations can be performed logically reversibly , @xcite , at the cost of eventually filling up the memory with unwanted garbage information .",
    "this means that reversible computers with bounded memories require in the long run irreversible bit operations , for example , to erase records irreversibly to create free memory space .",
    "the minimal possible number of irreversibly erased bits to do so is believed to determine the ultimate limit of heat dissipation of the computation by landauer s principle , @xcite . in reference @xcite we and others developed a mathematical theory for the unavoidable number of irreversible bit operations in an otherwise reversible computation .",
    "methods to implement ( almost ) reversible and dissipationless computation using conventional technologies are often designated by the catch phrase ` adiabatic switching ' .",
    "many currently proposed physical schemes implementing adiabatic computation reduce irreversibility by using longer switching times .",
    "this is done typically by switching over equal voltage gates after voltage has been equalized slowly .",
    "this type of switching does not dissipate energy , the only energy dissipation is incurred by pulling voltage up and down : the slower it goes the less energy is dissipated .",
    "if the computation goes infinitely slow , zero energy is dissipated . clearly , this counteracts the purpose of low energy dissipation which is faster computation .",
    "in @xcite it is demonstrated that even if adiabatic computation technology advances to switching with no time loss , a similar phenomenon arises when we try to approach the ultimate limits of minimal irreversibility of an otherwise reversible computation , and hence minimal energy dissipation .",
    "this time the effect is due to the logical method of reducing the number of irreversible bit erasures in the computation irrespective of individual switching times . by computing longer and longer ( in the sense of using more computation steps ) , the amount of dissipated energy gets closer to ultimate limits . moreover , one can trade - off time ( number of steps ) for energy : there is a new time - irreversibility ( time - energy ) trade - off hierarchy .",
    "the bounds we derive are also relevant for quantum computations which are reversible except for the irreversible observation steps , @xcite .      around 1940",
    "a computing device dissipated about @xmath22 joule per bit operation at room temperature . since that time",
    "the dissipated energy per bit operation has roughly decreased by one order of magnitude ( tenfold ) every five years .",
    "currently , a bit operation dissipates about @xmath23 joule .",
    "considerations of thermodynamics of computing started in the early fifties .",
    "j. von neumann reputedly thought that a computer operating at temperature @xmath2 must dissipate at least @xmath24 joule per elementary bit operation ( about @xmath25 j at room temperature ) .",
    "around 1960 , r. landauer  @xcite more thoroughly analyzed this question and concluded that it is only ` logically irreversible ' operations that dissipate energy .",
    "an operation is _ logically reversible _ if its inputs can always be deduced from the outputs .",
    "erasure of information in a way such that it can not be retrieved is not reversible . erasing each bit costs @xmath24 energy , when computer operates at temperature @xmath2 .",
    "the ultimate limits of energy dissipation by computation will be expressed in number of irreversibly erased bits .",
    "hence we consider compactification of records .",
    "in analogy of garbage collection by a garbage truck , the cost is less if we compact the garbage before we throw it away .",
    "the ultimate compactification which can be effectively exploited is expressed in terms of kolmogorov complexity .    technically ,",
    "the _ kolmogorov complexity _ of @xmath19 given @xmath26 is the length of the shortest binary program , for the reference universal prefix turing machine , that on input @xmath26 outputs @xmath19 ; it is denoted as @xmath27 . for precise definitions , theory and applications ,",
    "see @xcite .",
    "the kolmogorov complexity of @xmath19 is the length of the shortest binary program with no input that outputs @xmath19 ; it is denoted as @xmath28 where @xmath29 denotes the empty input . essentially , the kolmogorov complexity of a file is the length of the ultimate compressed version of the file .",
    "let @xmath30 be a standard enumeration of reversible turing machines , @xcite .",
    "we define @xmath31 as in @xcite ( where it is denoted as @xmath32 ) .",
    "the _ irreversibility cost _ @xmath33 of computing @xmath26 from @xmath19 by a reversible turing machine @xmath34 is is @xmath35 we denote the class of all such cost functions by @xmath36 .",
    "we call an element @xmath37 of @xmath36 a _ universal irreversibility cost function _ ,",
    "if @xmath38 , and for all @xmath34 in * r * @xmath39 for all @xmath19 and @xmath26 , where @xmath40 is a constant which depends on @xmath34 but not on @xmath19 or @xmath26 .",
    "standard arguments from the theory of turing machines show the following .",
    "there is a universal irreversibility cost function in @xmath36 .",
    "denote it by @xmath41 .    in @xcite a universal reversible turing machine @xmath42",
    "is constructed which satisfies the optimality requirement .",
    "two such universal ( or optimal ) machines @xmath42 and @xmath43 will assign the same irreversibility cost to a computation apart from an additive constant term @xmath44 which is _ independent _ of @xmath19 and @xmath26 ( but does depend on @xmath42 and @xmath43 ) .",
    "we select a reference universal function @xmath42 and define the _ irreversibility cost _ @xmath45 of computing @xmath26 from @xmath19 as @xmath46 because of the expression for @xmath45 in theorem  [ thermo.distance ] below it is called the _ sum cost _ measure in @xcite .    in physical terms",
    "this cost is in units of @xmath47 , where @xmath1 is boltzmann s constant , @xmath2 is the absolute temperature in degrees kelvin , and @xmath48 is the natural logarithm .",
    "because the computation is reversible , this definition is _ symmetric _ : we have @xmath49 .    in our definitions",
    "we have pushed all bits to be irreversibly provided to the start of the computation and all bits to be erased to the end of the computation .",
    "it is easy to see that this is no restriction .",
    "if we have a computation where irreversible acts happen throughout the computation , then we can always mark the bits to be erased , waiting with actual erasure until the end of the computation .",
    "similarly , the bits to be provided can be provided ( marked ) at the start of the computation while the actual reading of them ( simultaneously unmarking them ) takes place throughout the computation ) .",
    "now let us consider a general computation which outputs string @xmath26 from input string @xmath19 .",
    "we want to know the minimum irreversibility cost for such computation .",
    "this leads to the following theorem , for two different proofs see @xcite .",
    "[ thermo.distance ] up to an additive logarithmic term @xmath50    erasing a record @xmath19 is actually a computation from @xmath19 to the empty string @xmath51 .",
    "hence its irreversibility cost is @xmath52 .",
    "[ energy.coro ] up to a logarithmic additive term , the irreversibility cost of erasure is @xmath53 .      because now the time bounds are important we consider the universal turing machine @xmath54 to be the machine with two work tapes which can simulate @xmath55 steps of a multitape turing machine @xmath2 in @xmath56 steps ( the hennie - stearns simulation ) .",
    "if some multitape turing machine @xmath2 computes @xmath19 in time @xmath55 from a program @xmath6 , then @xmath54 computes @xmath19 in time @xmath56 from @xmath6 plus a description of @xmath2 .",
    "let @xmath57 be the _ minimal length _ of binary program ( not necessarily reversibly ) for the two work tape universal turing machine @xmath54 computing @xmath19 given @xmath26 ( for free ) _ in time _ @xmath55 .",
    "formally , @xmath58 @xmath57 is called the @xmath55-_time - limited conditional kolmogorov complexity _ of @xmath19 given @xmath26 .",
    "the unconditional version is defined as @xmath59 . a program @xmath6 such that @xmath60 in @xmath61 steps and @xmath62 is denoted as @xmath63 .",
    "note that with @xmath64 the conditional @xmath55-time - limited kolmogorov complexity with respect to turing machine @xmath2 , for all @xmath65 , @xmath66 , where @xmath67 and @xmath68 is a constant depending on @xmath2 but not on @xmath19 and @xmath26 .",
    "this @xmath69 is the standard definition of time - limited kolmogorov complexity , @xcite .",
    "however , in the remainder of the paper we always need to use reversible computations .",
    "fortunately , in @xcite it is shown that for any @xmath70 , ordinary multitape turing machines using @xmath2 time and @xmath71 space can be simulated by reversible ones using time @xmath72 and space @xmath73 .    to do effective erasure of compacted information",
    ", we must at the start of the computation provide a time bound @xmath55 .",
    "typically , @xmath55 is a recursive function and the complexity of its description is small , say @xmath74 .",
    "however , in theorem  [ time.1 ] we allow for very large running times in order to obtain smaller @xmath69 values .    [ time.1 ] if @xmath75 is a time bound which is provided at the start of the computation , then erasing an @xmath76 bit record @xmath19 by an otherwise reversible computation can be done in time ( number of steps ) @xmath77 at irreversibility cost ( hence also thermodynamic cost ) @xmath78 bits .",
    "( typically we consider @xmath55 as some standard explicit time bound and the last two terms adding up to @xmath74 . )",
    "initially we have in memory input @xmath19 and a program @xmath6 of length @xmath79 to compute reversibly @xmath55 from @xmath19 .",
    "to separate binary @xmath19 and binary @xmath6 we need to encode a delimiter in at most @xmath80 bits .    1",
    ".   use @xmath19 and @xmath6 to reversibly compute @xmath55 .",
    "copy @xmath55 and reverse the computation .",
    "now we have @xmath19 , @xmath6 and @xmath55 .",
    "2 .   use @xmath55 to reversibly dovetail the running of all programs of length less than @xmath19 to find the shortest one halting in time @xmath55 with output @xmath19 .",
    "this is @xmath63 .",
    "the computation has produced garbage bits @xmath81 .",
    "copy @xmath63 , and reverse the computation to obtain @xmath19 erasing all garbage bits @xmath81 .",
    "now we have @xmath82 in memory .",
    "reversibly compute @xmath55 from @xmath19 by @xmath6 , cancel one copy of @xmath55 , and reverse the computation .",
    "now we have @xmath83 in memory .",
    "reversibly cancel @xmath19 using @xmath63 by the standard method , and then erase @xmath63 and @xmath6 irreversibly .",
    "[ cor.kt ] @xmath84 , and by theorem  [ thermo.distance ] up to an additional logarithmic term , @xmath85 .",
    "essentially , by spending more time we can reduce the thermodynamic cost of erasure of @xmath63 to its absolute minimum . in the limit we spend the optimal value @xmath86 by erasing @xmath87 , since @xmath88 .",
    "this suggests the existence of a trade - off hierarchy between time and energy .",
    "the longer one reversibly computes to perform final irreversible erasures , the less bits are erased and energy is dissipated .",
    "this intuitive assertion will be formally stated and rigourously proved below .",
    "let @xmath42 be the reversible version of the two worktape universal turing machine , simulating the latter in linear time by bennett s result mentioned above .",
    "let @xmath89 be the _",
    "minimum irreversibility cost _ of an otherwise reversible computation from @xmath19 to @xmath26 _ in time _ @xmath55 .",
    "formally , @xmath90    because of the similarity with corollary  [ cor.kt ] ( @xmath91 is about @xmath86 ) one is erroneously led to believe that @xmath92 up to a log additive term .",
    "however , the time - bounds introduce many differences . to reversibly",
    "compute @xmath63 we may require ( because of the halting problem ) at least @xmath93 steps after having decoded @xmath55 , as indeed is the case in the proof of theorem  [ time.1 ] .",
    "in contrast , @xmath94 is about the number of bits erased in an otherwise reversible computation which uses at most @xmath55 steps .",
    "therefore , as far as we know possibly @xmath95 implies @xmath96 .",
    "more concretely , it is easy to see that for each @xmath19 and @xmath75 , @xmath97 with @xmath98 .",
    "theorem  [ time.1 ] can be restated in terms of @xmath99 as @xmath100 with @xmath101 . comparing this to the righthand inequality of equation  [ eq.ce ]",
    "we have improved the upper bound on erasure cost at the expense of increasing erasure time . however ,",
    "these bounds only suggest but do not actually prove that we can exchange irreversibility for time .",
    "the following result definitely establishes the existence of a trade - off , @xcite .",
    "[ theorem.hierarchy ] for each large enough @xmath76 there is a string @xmath19 of length @xmath76 and a sequence of @xmath102 time functions @xmath103 , such that @xmath104    in the cost measures like @xmath105 we have counted both the irreversibly provided and the irreversibly erased bits . but landauer s principle only charges energy dissipation costs for irreversibly erased bits .",
    "it is conceivable that the above results would not hold if one considers as the cost of erasure of a record only the irreversibly erased bits .",
    "however , we have show that theorem  [ theorem.hierarchy ] also holds for landauer s dissipation measure , @xcite , in exactly the same form and by almost the same proof .",
    "currently , almost no algorithms and other programs are designed according to reversible principles ( and in fact , most tasks like computing boolean functions are inherently irreversible ) .",
    "to write reversible programs by hand is unnatural and difficult .",
    "the natural way is to compile irreversible programs to reversible ones .",
    "this raises the question about efficiency of general reversible simulation of irreversible computation .",
    "let us briefly summarize the research reviewed in the next sections .",
    "suppose the irreversible computation to be simulated uses @xmath2 time and @xmath71 space .",
    "a first efficient method was proposed by bennett @xcite , but it is space hungry and uses time for every @xmath70 at the cost of introducing a multiplicative constant depending on @xmath106 .",
    "the complexity analysis of @xcite was completed in @xcite . ]",
    "time @xmath107 and space @xmath108 .",
    "if @xmath2 is maximal , that is , exponential in @xmath71 , then the space use is @xmath109 .",
    "this method can be modeled by a reversible pebble game .",
    "reference @xcite demonstrated that bennett s method is optimal for reversible pebble games and that simulation space can be traded off against limited erasing .",
    "in @xcite it was shown that using a method by sipser @xcite one can reversibly simulate using only @xmath110 extra space but at the cost of using exponential time . in @xcite a relativized separation of reversible and irreversible space - time complexity classes",
    "is given .",
    "these previous results seem to suggest that a reversible simulation is stuck with either quadratic space use or exponential time use .",
    "this impression turns out to be false @xcite :    there is a tradeoff between time and space which has the exponential time simulation and the quadratic space simulation as extremes and for the first time gives a range of simulations using simultaneously subexponential ( @xmath111 is subexponential if @xmath112 ) time and subquadratic space .",
    "the idea is to use bennett s pebbling game where the pebble steps are intervals of the simulated computation that are bridged by using the exponential simulation method .",
    "( it should be noted that embedding bennett s pebbling game in the exponential method gives no gain , and neither does any other iteration of embeddings of simulation methods . )",
    "careful analysis shows that the simulation using @xmath1 pebbles takes @xmath113 time and @xmath114 space , and in some cases the upper bounds are tight .",
    "for @xmath115 we have the exponential time simulation method and for @xmath116 we have bennett s method .",
    "interesting values arise for say    \\(a ) @xmath117 which yields @xmath118 and",
    "@xmath119 ;    \\(b ) for @xmath120 we have @xmath121 and @xmath122 @xmath123 .",
    "\\(c ) let @xmath124 be as above .",
    "eliminating the unknown @xmath1 shows the tradeoff between simulation time @xmath125 and extra simulation space @xmath126 : @xmath127 .",
    "\\(d ) let @xmath124 be as above and let the irreversible computation be halting and compute a function from inputs of @xmath76 bits to outputs . for general reversible simulation by a reversible turing machine using a binary tape alphabet and a single tape , @xmath128 and @xmath129 .",
    "this lower bound is optimal in the sense that it can be achieved by simulations at the cost of using time exponential in @xmath71 .    *",
    "main open problem : * the ultimate question is whether one can do better , and obtain improved upper and lower bounds on the tradeoff between time and space of reversible simulation , and in particular whether one can have almost linear time and almost linear space simultaneously .",
    "reversible turing machines or other reversible computers will require special reversible programs .",
    "one feature of such programs is that they should be executable when read from bottom to top as well as when read from top to bottom .",
    "examples are the programs we show in the later sections . in general",
    ", writing reversible programs will be difficult .",
    "however , given a general reversible simulation of irreversible computation , one can simply write an oldfashioned irreversible program in an irreversible programming language , and subsequently simulate it reversibly .",
    "this leads to the following :    an _ irreversible - to - reversible compiler _ receives an irreversible program as input and reversibly compiles it to a reversible program .",
    "subsequently , the reversible program can be executed reversibly .",
    "note that there is a decisive difference between reversible circuits and reversible special purpose computers on the one hand , and reversible universal computers on the other hand .",
    "while one can design a special - purpose reversible version for every particular irreversible circuit using reversible universal gates , such a method does not yield an irreversible - to - reversible compiler that can execute any irreversible program on a fixed universal reversible computer architecture as we are interested in here .",
    "the reversible simulation in @xcite of @xmath2 steps of an irreversible computation from @xmath19 to @xmath20 reversibly computes from input @xmath19 to output @xmath21 in @xmath130 time .",
    "however , since this reversible simulation at some time instant has to record the entire history of the irreversible computation , its space use increases linearly with the number of simulated steps @xmath2 .",
    "that is , if the simulated irreversible computation uses @xmath71 space , then for some constant @xmath131 the simulation uses @xmath132 time and @xmath133 space .",
    "this can be an unacceptable amount of space for many practically useful computations .    in @xcite",
    "another elegant simulation technique is devised reducing the auxiliary storage space .",
    "this simulation does not save the entire history of the irreversible computation but it breaks up the simulated computation into segments of about @xmath71 steps and saves in a hierarchical manner _ checkpoints _ consisting of complete instantaneous descriptions of the simulated machine ( entire tape contents , tape heads positions , state of the finite control ) .",
    "after a later checkpoint is reached and saved , the simulating machine reversibly undoes its intermediate computation , reversibly erasing the intermediate history and reversibly canceling the previously saved checkpoint .",
    "subsequently , the computation is resumed from the new checkpoint onwards .",
    "it turns out that this can be done using limited time @xmath134 and space @xmath108 .",
    "fine - tuning the method goes as follows : the reversible computation simulates @xmath135 segments of length @xmath136 of irreversible computation in @xmath137 segments of length @xmath138 of reversible computation using @xmath139 checkpoint registers using @xmath138 space each , for every @xmath140 .",
    "this way it is established that there are various tradeoffs possible in time - space in between @xmath141 and @xmath142 at one extreme ( @xmath143 ) and ( with the corrections of @xcite ) @xmath144 and @xmath145 with @xmath146 for every @xmath147 , using always the same simulation method but with different parameters @xmath148 where @xmath149 and @xmath150 .",
    "typically , for @xmath151 we have @xmath152 .",
    "since for @xmath153 the machine goes into a computational loop , we always have @xmath154 .",
    "therefore , every irreversible turing machine using space @xmath71 can be simulated by a reversible machine using space @xmath109 in polynomial time .",
    "let us note that it is possible to improve the situation by reversibly simulating _ only the irreversible _ steps .",
    "call a quadruple of a turing machine _ irreversible _ if its range overlaps with the range of another quadruple .",
    "a step of the computation is _ irreversible _ if it uses an irreversible quadruple .",
    "let the number of irreversible steps in a @xmath2 step computation be denoted by @xmath155 . clearly , @xmath156 .",
    "the simulation results hold with @xmath2 in the auxiliary space use replaced by @xmath155 .",
    "in particular , @xmath157 . in many computations , @xmath155 may be much smaller than @xmath2 .",
    "there arises the problem of estimating the number of irreversible steps in a computation .",
    "( more complicatedly , one could extend the notion of irreversible step to those steps which can be reversed on local information alone . in some cases this is possible even when the used quadruple itself was irreversible . )",
    "we at some point conjectured that _ all _ reversible simulations of an irreversible computation can essentially be represented as the pebble game defined below , and that consequently the lower bound of corollary  [ lem.pebble ] applies to all reversible simulations of irreversible computations .",
    "this conjecture was refuted in @xcite using a technique due to @xcite to show that there exists a general reversible simulation of an irreversible computation using only order @xmath71 space at the cost of using a thoroughly unrealistic simulation time exponential in @xmath71 .",
    "in retrospect the conjecture was phrased too general : it should be restricted to _ useful _ simulations  using linear or slightly superlinear time and space _",
    "simultaneously_. the real question is whether there is a compiler that takes as input any irreversible algorithm @xmath158 using @xmath71 space and @xmath2 time and produces a reversible algorithm @xmath159 such that @xmath160 for all input @xmath19 and using @xmath161 time and @xmath162 space . in the extreme cases of time and space use this is possible : if @xmath163 then the simulation in @xcite does the trick , and if @xmath164 then the simulation of @xcite works . for all other cases",
    "the pebble game analysis below has been used in @xcite to show that any such simulation , if it exists , can not relativize to oracles , or work in cases where the space bound is much less than the input length .",
    "( this is a standard method of giving evidence that the aimed - for result  here : simulation does nt exist  is likely to be true in case the result itself is too hard to obtain . )",
    "let @xmath165 be a linear list of nodes @xmath166 .",
    "we define a _ pebble game _ on @xmath165 as follows .",
    "the game proceeds in a discrete sequence of steps of a single _ player_. there are @xmath76 pebbles which can be put on nodes of @xmath165 . at any time the set of pebbles is divided in pebbles on nodes of @xmath165 and the remaining pebbles which are called _ free _ pebbles . at every step either an existing free pebble can be put on a node of @xmath165 ( and is thus removed from the free pebble pool ) or be removed from a node of @xmath165 ( and is added to the free pebble pool ) .",
    "initially @xmath165 is unpebbled and there is a pool of free pebbles .",
    "the game is played according to the following rule :    reversible pebble rule : : :    if node @xmath167 is occupied by a pebble , then one may either    place a free pebble on node @xmath168 ( if it was not occupied    before ) , or remove the pebble from node @xmath168 .",
    "we assume an extra initial node @xmath169 permanently occupied by an extra , fixed pebble , so that node @xmath170 may be ( un)pebbled at will .",
    "this pebble game is inspired by the method of simulating irreversible turing machines on reversible ones in a space efficient manner .",
    "the placement of a pebble corresponds to checkpointing the next state of the irreversible computation , while the removal of a pebble corresponds to reversibly erasing a checkpoint .",
    "our main interest is in determining the number of pebbles @xmath1 needed to pebble a given node @xmath167 .",
    "the maximum number @xmath76 of pebbles which are simultaneously on @xmath165 at any one time in the game gives the space complexity @xmath171 of the simulation .",
    "if one deletes a pebble not following the above rules , then this means a block of bits of size @xmath71 is erased irreversibly .",
    "this pebble game is inspired by the method of simulating irreversible turing machines on reversible ones in a space efficient manner .",
    "the placement of a pebble corresponds to checkpointing the current state of the irreversible computation , while the removal of a pebble corresponds to reversibly erasing a checkpoint .",
    "our main interest is in determining the number of pebbles @xmath1 needed to pebble a given node @xmath167 .",
    "the maximum number @xmath76 of pebbles which are simultaneously on @xmath165 at any one time in the game gives the space complexity @xmath171 of the simulation .",
    "if one deletes a pebble not following the above rules , then this means a block of bits of size @xmath71 is erased irreversibly .",
    "the limitation to bennett s simulation is in fact space , rather than time .",
    "when space is limited , we may not have enough place to store garbage , and these garbage bits will have to be irreversibly erased .",
    "we establish a tight lower bound for _ any _ strategy for the pebble game in order to obtain a space - irreversibility tradeoff .",
    "we describe the idea of bennett s simulation @xcite .",
    "this simulation is optimal @xcite among all reversible pebble games , and we will show the proof below . the total computation of @xmath2 steps is broken into @xmath172 segments of length @xmath173 .",
    "every @xmath136th point of the computation is a node in the pebbling game ; node @xmath167 corresponding to @xmath174 steps of computation .    for each pebble a section of tape",
    "is reserved long enough to store the whole configuration of the simulated machine . by enlarging the tape alphabet ,",
    "each pebble will require space only @xmath175 .",
    "both the pebbling and unpebbling of a pebble @xmath55 on some node , given that the previous node has a pebble @xmath7 on it , will be achieved by a single reversible procedure bridge(@xmath176 ) .",
    "this looks up the configuration at section @xmath7 , simulates @xmath136 steps of computation in a manner described in section  [ bridge ] , and exclusive - or s the result into section @xmath55 .",
    "if @xmath55 was a free pebble , meaning that its tape section is all zeroes , the result is that pebble @xmath55 occupies the next node .",
    "if @xmath55 already pebbled that node then it will be zeroed as a result .",
    "the essence of bennett s simulation is a recursive subdivision of a computation path into 2 halves , which are traversed in 3 stages ; the first stage gets the midpoint pebbled , the second gets the endpoint pebbled , and the 3rd recovers the midpoint pebble .",
    "the following recursive procedure implements this scheme ; pebble(@xmath177 ) uses free pebbles @xmath178 to compute the @xmath179th node after the one pebbled by @xmath7 , and exclusive - or s that node with pebble @xmath55 ( either putting @xmath55 on the node or taking it off ) .",
    "its correctness follows by straightforward induction .",
    "note that it is its own reverse ; executing it twice will produce no net change .",
    "the pebble parameters @xmath7 and @xmath55 are simply numbers in the range @xmath180 .",
    "pebble -1 is permanently on node 0 , pebble @xmath1 gets to pebble the final node , and pebble @xmath167 , for @xmath181 pebbles nodes that are odd multiples of @xmath182 .",
    "the entire simulation is carried out with a call pebble(@xmath183 ) .",
    "pebble(@xmath177 ) + \\ { + if ( @xmath184 ) + bridge(@xmath176 ) ; + fi ( @xmath184 ) + if ( @xmath185 ) + let @xmath186 + pebble(@xmath187 ) ; + pebble(@xmath188 ) ; + pebble(@xmath187 ) + fi ( @xmath185 ) + }    as noted by bennett , both branches and merges must be labeled with mutually exclusive conditions to ensure reversibility .",
    "recursion can be easily implemented reversibly by introducing an extra stack tape , which will hold at most @xmath76 stack frames of size @xmath189 each , for a total of @xmath190 .",
    "this pebbling method is optimal in that no more than @xmath191 steps can be bridged with @xmath76 pebbles @xcite .",
    "it is easy to see that the method achieves this ; the difficult part is showing that no reversible pebbling method can do better .",
    "it turns out that characterizing the maximum node that can be pebbled with a given number of pebbles is best done by completely characterizing what pebble configurations are realizable .",
    "first we need to introduce some helpful notions .    in a given pebble configuration with @xmath192 free pebbles ,",
    "a placed pebble is called _ available _ if there is another pebble at most @xmath193 positions to its left ( @xmath169 being the leftmost node ) . according to the above procedures ,",
    "an available pebble can be removed with the use of the free pebbles . for convenience",
    "we imagine this as a single big step in our game .",
    "call a pebble configuration _ weakly solvable _ if there is a way of repeatedly removing an available pebble until all are free .",
    "note that such configurations are necessarily realizable , since the removal process can be run in reverse to recreate the original configuration .",
    "call a pebble configuration _ strongly solvable _ if all ways of repeatedly removing an available pebble lead to all being free .",
    "obviously any strongly solvable configuration is also weakly solvable .",
    "the starting configuration is obviously both weakly and strongly solvable .",
    "how does the single rule of the game affect solvability ? clearly , adding a pebble to a weakly solvable configuation yields another weakly solvable configuation , while removing a pebble from a strongly solvable configuation yields another strongly solvable configuation .",
    "it is not clear if removing a pebble from a weakly solvable configuation yields another one .",
    "if such is the case then we may conclude that all realizable configurations are weakly solvable and hence the two classes coincide .",
    "this is exactly what the next theorem shows .",
    "every weakly solvable configuration is strongly solvable .",
    "let @xmath192 be the number of free pebbles in a weakly solvable configuration .",
    "number the placed pebbles @xmath194 according to their order of removal .",
    "it is given that , for all @xmath167 , pebble @xmath167 has a higher - numbered pebble at most @xmath182 positions to its left ( number the fixed pebble at @xmath169 infinity ) .",
    "we know that pebble @xmath192 is available .",
    "suppose a pebble @xmath195 with @xmath196 is also available  so there must be a pebble at most @xmath193 positions to its left .",
    "it suffices to show that if pebble @xmath195 is removed first , then pebbles @xmath197 are still available when their turn comes .",
    "suppose pebble @xmath198 finds pebble @xmath195 at most @xmath199 places to its left ( otherwise @xmath198 will still be available after @xmath195 s removal for sure ) .",
    "then after removal of pebbles @xmath200 , it will still find a higher - numbered pebble at most @xmath201 places to its left , thus making it available given the extra now free pebble @xmath195 .",
    "a configuration with @xmath192 free pebbles is realizable if and only if its placed pebbles can be numbered @xmath194 such that pebble @xmath167 has a higher - numbered pebble at most @xmath182 positions to its left .",
    "[ lem.bennett][lem.pebble ] the maximum reachable node with @xmath76 pebbles is @xmath202 .",
    "moreover , if pebble(@xmath203 ) takes @xmath204 steps we find @xmath205 and @xmath206 .",
    "that is , the number of steps @xmath207 of a winning play of a pebble game of size @xmath208 is @xmath209 , that is , @xmath210 .",
    "the simulation above follows the rules of the pebble game of length @xmath211 with @xmath76 pebbles above .",
    "a winning strategy for a game of length @xmath212 using @xmath76 pebbles corresponds with reversibly simulating @xmath212 segments of @xmath71 steps of an irreversible computation using @xmath71 space such that the reversible simulator uses @xmath213 steps and total space @xmath214 .",
    "the space @xmath126 corresponds to the maximal number of pebbles on @xmath165 at any time during the game .",
    "the placement or removal of a pebble in the game corresponds to the reversible copying or reversible cancelation of a ` checkpoint ' consisting of the entire instantaneous description of size @xmath71 ( work tape contents , location of heads , state of finite control ) of the simulated irreversible machine .",
    "the total time @xmath215 used by the irreversible computation is broken up in segments of size @xmath71 so that the reversible copying and canceling of a checkpoints takes about the same number of steps as the computation segments in between checkpoints .",
    ", we get that the simulation uses @xmath216 pebbles for a pebble game with @xmath76 pebbles of length @xmath217 .",
    "the simulation uses @xmath218 pebbles for a simulated number of @xmath219 steps of the irreversible computation . ]",
    "we can now formulate a tradeoff between space used by a polynomial time reversible computation and irreversible erasures as proposed in @xcite .",
    "first we show that allowing a limited amount of erasure in an otherwise reversible computation means that we can get by with less work space .",
    "therefore , we define an _ @xmath136-erasure _",
    "pebble game as the pebble game above but with the additional rule    * in at most @xmath136 steps the player can remove a pebble from any node @xmath220 without node @xmath221 being pebbled at the time .",
    "an @xmath136-erasure pebble game corresponds with an otherwise reversible computation using @xmath222 irreversible bit erasures , where @xmath71 is the space used by the irreversible computation being simulated .",
    "[ lem.erasure ] there is a winning strategy with @xmath223 pebbles and @xmath224 erasures for pebble games @xmath165 with @xmath225 , for all @xmath226 .",
    "the strategy is to use 2 pebbles as springboards that are alternately placed @xmath179 in front of each other using the remaining @xmath76 pebbles to bridge the distance .",
    "the most backward springboard can be erased from its old position once all @xmath76 pebbles are cleared from the space between it and the front springboard .",
    "the simulation time @xmath227 is @xmath228 for @xmath229 .",
    "[ theo.si ] ( i ) pebble games @xmath165 of size @xmath230 can be won using @xmath76 pebbles but not using @xmath231 pebbles .",
    "\\(ii ) if @xmath165 is a pebble game with a winning strategy using @xmath76 pebbles without erasures , then there is also a winning strategy for @xmath165 using @xmath232 erasures and @xmath233 pebbles ( for @xmath232 is an odd integer at least 1 ) .",
    "\\(i ) by corollory  [ lem.bennett ] .",
    "\\(ii ) by ( i ) , @xmath211 is the maximum length of a pebble game @xmath165 for which there is a winning strategy using @xmath76 pebbles and no erasures . by lemma  [ lem.erasure ] ,",
    "we can pebble a game @xmath165 of length @xmath234 using @xmath235 pebbles and @xmath236 erasures .",
    "we analyze the consequences of theorem  [ theo.si ] .",
    "it is convenient to consider the special sequence of values @xmath237 for @xmath238 .",
    "let @xmath165 be bennett s pebble game of lemma  [ lem.bennett ] of length @xmath239 .",
    "it can be won using @xmath76 pebbles without erasures , or using @xmath240 pebbles plus @xmath241 erasures ( which gives a gain over not erasing as in lemma  [ lem.bennett ] only for @xmath242 ) , but not using @xmath231 pebbles .",
    "therefore , we can exchange space use for irreversible erasures .",
    "such a tradeoff can be used to reduce the space requirements of the reversible simulation .",
    "the correspondence between the erasure pebble game and the otherwise reversible computations using irreversible erasures is that if the pebble game uses @xmath243 pebbles and @xmath244 erasures , then the otherwise reversible computation uses @xmath245 space and erases @xmath246 bits irreversibly .    therefore , a reversible simulation according to the pebble game of every irreversible computation of length @xmath247 can be done using @xmath171 space using @xmath248 time , but is impossible using @xmath249 space .",
    "it can also be performed using @xmath245 space , @xmath246 irreversible bit erasures and @xmath250 time . in the extreme case",
    "we use no space to store the history and erase about @xmath251 bits .",
    "this corresponds to the fact that an irreversible computation may overwrite its scanned symbol irreversibly at each step .",
    "consider a simulation according to the pebble game using @xmath126 storage space and @xmath125 time which reversibly computes @xmath252 from @xmath19 in order to simulate an irreversible computation using @xmath71 storage space and @xmath2 time which computes @xmath20 from @xmath19 .",
    "the _ irreversible simulation cost _ @xmath253 of the simulation is the number of irreversibly erased bits in the simulation ( with the parameters @xmath254 understood ) .    if the irreversible simulated computation from @xmath19 to @xmath20 uses @xmath2 steps , then for @xmath255 and @xmath256 we have above treated the most space parsimonious simulation which yields @xmath257 , with @xmath258 .    simulating a @xmath259 step irreversible computation from @xmath19 to @xmath20 using @xmath71 space by a computation from @xmath19 to @xmath252 , the irreversible simulation cost satisfies :    \\(i ) @xmath260 , for @xmath261 .",
    "\\(ii ) @xmath262 , for @xmath263 .    for the most space parsimonious simulation with @xmath264",
    "this means that @xmath265",
    "lange , mckenzie and tapp , @xcite , devised a reversible simulation , _ lmt - simulation _ for short , that does nt use extra space , at the cost of using exponential time .",
    "their main idea of reversibly simulating a machine without using more space is by reversibly cycling through the configuration tree of the machine ( more precisely the connected component containing the input configuration ) .",
    "this configuration tree is a tree whose nodes are the machine configurations and where two nodes are connected by an edge if the machine moves in one step from one configuration to the other .",
    "we consider each edge to consist of two _ half - edges _",
    ", each adjacent to one configuration .",
    "the configuration tree can be traversed by alternating two permutations on half - edges : a swapping permutation which swaps the two half - edges constituting each edge , and a rotation permutation whose orbits are all the half - edges adjacent to one configuration .",
    "both permutations can be implemented in a constant number of steps .",
    "for simplicity one assumes the simulated machine strictly alternates moving and writing transitions . to prevent the simulation from exceeding the available space @xmath71 , each pebble section",
    "is marked with special left and right markers @xmath266 , which we assume the simulated machine not to cross .",
    "since this only prevents crossings in the forward simulation , we furthermore , with the head on the left ( right ) marker , only consider previous moving transitions from the right ( left ) .",
    "a call pebble(@xmath177 ) results in @xmath267 calls to bridge(@xmath268,@xmath268 ) .",
    "bennett chose the number of pebbles large enough ( @xmath269 ) so that @xmath136 becomes small , on the order of the space @xmath71 used by the simulated machine . in that case",
    "bridge(@xmath176 ) is easily implemented with the help of an additional _ history _ tape of size @xmath136 which records the sequence of transitions .",
    "instead , @xcite showed how to allow an arbitrary choice of @xmath76 and resort to the space efficient simulation of @xcite to bridge the pebbled checkpoints .",
    "a similar solution was arrived at later and independently in the unpublished manuscript @xcite .",
    "to adapt the lmt simulation to our needs , we equip our simulating machine with one extra tape to hold the simulated configuration and another extra tape counting the difference between forward and backward steps simulated .",
    "@xmath270 steps of computation can be bridged with a @xmath271 bits binary counter , incremented with each simulated forward step , and decremented with each simulated backward step .",
    "having obtained the configuration @xmath136 steps beyond that of pebble @xmath7 , it is exclusive - ord into section @xmath55 and then the lmt simulation is reversed to end up with a zero counter and a copy of section @xmath7 , which is blanked by an exclusive - or from the original .",
    "brdge(@xmath176 ) + \\ { + copy section @xmath7 onto ( blanked ) simulation tape + setup : goto enter ; + loop1 : come from endloop1 ; + simulate step with swap&rotate and adjust counter + if ( counter=0 ) + rotate back ; + if ( simulation tape = section @xmath7 ) + enter : come from start ; + fi ( simulation tape = section @xmath7 ) + fi ( counter=0 ) + endloop1 : if ( counter!=@xmath136 ) goto loop1 ; + exclusive - or simulation tape into section @xmath55 + if ( counter!=@xmath136 ) + loop2 : come from endloop2 ; + reverse - simulate step with anti - rotate&swap and adjust counter + if ( counter=0 ) + rotate back ; + if ( simulation tape = section @xmath7 ) goto exit ; + fi ( counter=0 ) + endloop2 : goto loop2 ; + exit : clear simulation tape using section @xmath7 + }      let us analyze the time and space used by this simulation .    an irreversible computation using time @xmath2 and space @xmath71 can be simulated reversibly in time @xmath272 and space @xmath273 , where @xmath1 is a parameter that can be chosen freely @xmath274 to obtain the required tradeoff between reversible time @xmath125 and space @xmath126 .",
    "( sketch ) every invocation of the bridge ( ) procedure takes time @xmath275 .",
    "that is , every configuration has at most @xmath74 predecessor configurations where it can have come from ( constant number of states , constant alphabet size and choice of direction ) .",
    "hence there are @xmath276 configurations to be searched and about as many potential start configurations leading in @xmath136 moves to the goal configuration , and every tape section comparison takes time @xmath110 .",
    "the pebbling game over @xmath172 nodes takes @xmath277 ( un)pebbling steps each of which is an invocation of bridge ( ) . filling in @xmath278 gives the claimed time bound .",
    "each of the @xmath279 pebbles takes space @xmath110 , as does the simulation tape and the counter , giving the claimed total space .",
    "it is easy to verify that for some simulations the upper bound is tight . the boundary cases , @xmath115 gives the lmt - simulation using exponential time and no extra space , and @xmath116 gives bennett s simulation using at most square space and subquadratic time .",
    "taking intermediate values of @xmath1 we can choose to reduce time at the cost of an increase of space use and vice versa .",
    "in particular , special values @xmath117 and @xmath280 give the results using simultaneously subexponential time and subquadratic space exhibited in the introduction . eliminating @xmath1",
    "we obtain :    let @xmath124 be as above .",
    "then there is a reversible simulation that has the following tradeoff between simulation time @xmath125 and extra simulation space @xmath126 : @xmath281      suppose we have an otherwise reversible computation containing local irreversible actions",
    ". then we need to reversibly simulate only the subsequence of irreversible steps , leaving the connecting reversible computation segments unchanged .",
    "that is , an irreversiblity parsimonious computation is much cheaper to reversibly simulate than an irreversibility hungry one .",
    "in the previous analysis we have tacitly assumed that the reversible simulator knows in advance the number of steps @xmath2 taken by the irreversible computation to be simulated . in this context",
    "one can distinguish on - line computations and off - line computations to be simulated . on",
    "- line computations are computations which interact with the outside environment and in principle keep running forever .",
    "an example is the operating system of a computer . off",
    "- line computations are computations which compute a definite function from an input ( argument ) to an output ( value ) .",
    "for example , given as input a positive integer number , compute as output all its prime factors . for every input such an algorithm will have a definite running time .    there is a well - known simple device to remove this dependency for batch computations without increasing the simulation time ( and space ) too much @xcite .",
    "suppose we want to simulate a computation with unknown computation time @xmath2 .",
    "then we simulate @xmath55 steps of the computation with @xmath55 running through the sequence of values @xmath282 for every value @xmath55 takes on we reversibly simulate the first @xmath55 steps of the irreversible computation . if @xmath283 then the computation is not finished at the end of this simulation .",
    "subsequently we reversibly undo the computation until the initial state is reached again , set @xmath284 and reversibly simulate again .",
    "this way we continue until @xmath285 at which bound the computation finishes .",
    "the total time spent in this simulation is @xmath286",
    "it is not difficult to show a simple lower bound @xcite on the extra storage space required for general reversible simulation .",
    "we consider only irreversible computations that are halting computations performing a mapping from an input to an output . for convenience",
    "we assume that the turing machine has a single binary work tape delemited by markers @xmath266 that are placed @xmath71 positions apart . initially",
    "the binary input of length @xmath76 is written left adjusted on the work tape . at the end of the computation",
    "the output is written left adjusted on the work tape .",
    "the markers are never moved .",
    "such a machine clearly can perform every computation as long as @xmath71 is large enough with respect to @xmath76 .",
    "assume that the reversible simulator is a similar model albeit reversible .",
    "the average number of steps in the computation is the uniform average over all equally likely inputs of @xmath76 bits .",
    "[ theo.lb ] to generally simulate an irreversible halting computation of a turing machine as above using storage space @xmath71 and @xmath2 steps on average , on inputs of length @xmath76 , by a general reversible computation using @xmath126 storage space and @xmath125 steps on average , the reversible simulator turing machine having @xmath287 states , requires trivially @xmath129 and @xmath288 up to a logarithmic additive term",
    ".    there are @xmath179 possible inputs to the irreversible computation , the computation on every input using on average @xmath2 steps .",
    "a general simulation of this machine can not use the semantics of the function being simulated but must simulate every step of the simulated machine . hence @xmath129 .",
    "the simulator being reversible requires different configurations for every step of everyone of the simulated computations that is , at least @xmath289 configurations .",
    "the simulating machine has not more than @xmath290 distinct configurations@xmath291 distinct values on the work tape , @xmath287 states , and @xmath126 head positions for the combination of input tape and work tape .",
    "therefore , @xmath292 .",
    "that is , @xmath293 which shows that @xmath294",
    ".        thus , in some cases the lmt - algorithm is required to use extra space if we deal with halting computations computing a function from input to output . in the final version of the paper @xcite",
    "the authors have added that their simulation uses some extra space for counting ( essentially @xmath110 ) in case we require halting computations from input to output , matching the lower bound above for @xmath295 since their simulation uses on average @xmath125 steps exponential in @xmath71 .",
    "* optimality and tradeoffs : * the lower bound of theorem  [ theo.lb ] is optimal in the following sense .",
    "as one extreme , the lmt - algorithm of @xcite discussed above uses @xmath299 space for simulating irreversible computations of total functions on inputs of @xmath76 bits , but at the cost of using @xmath300 simulation time . as the other extreme , bennett s simple algorithm in @xcite uses @xmath130 reversible simulation time , but at the cost of using @xmath301 additional storage space .",
    "this implies that improvements in determining the complexity of reversible simulation must consider time - space tradeoffs ."
  ],
  "abstract_text": [
    "<S> we survey results of a quarter century of work on computation by reversible general - purpose computers ( in this setting turing machines ) , and general reversible simulation of irreversible computations , with respect to energy- , time- and space requirements .    </S>",
    "<S> * categories and subject descriptors * : f.2 [ algorithms ] , f.1.3 [ performance ]    * general terms * : algorithms , performance    * keywords * : reversible computing , reversible simulation , adiabatic computing , low - energy computing , computational complexity , time complexity , space complexity , energy dissipation complexity , tradeoffs . </S>"
  ]
}
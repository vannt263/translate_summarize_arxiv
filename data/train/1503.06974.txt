{
  "article_text": [
    "exascale computing  @xcite is expected to revolutionize computational science and engineering by providing 1000x the capabilities of currently available computing systems , while having a similar power footprint .",
    "the total performance of the 500 systems in the 44th top500 list ( 18 nov 2014 , http://top500.org/ ) is about 0.3 exaflops .",
    "the hpc community  @xcite is now working towards the development of the first exaflop computer , expected around 2020 , after reaching the petaflop milestone in 2008 .",
    "however , only a few hpc applications are so far able to fully exploit the capabilities of petaflop systems  @xcite .",
    "examples of typical scalability for commonly used hpc applications in our organizations are provided in table [ tab : hpcapps ] . as the existing hpc applications are the major hpc asset , it is important and challenging to increase their scalability and lifetime by making them exascale - ready before 2020 .",
    "[ cols=\"<,<,<,>\",options=\"header \" , ]     [ tab : hpcapps ]    the major challenge for preparing hpc applications for exascale is that there is no exascale system available yet .",
    "currently all we have are assumptions about exascale systems .",
    "therefore the commonly used measurement - based approaches for reasoning about performance issues are not applicable .",
    "pre - exascale systems ( known as _",
    "summit _ and _ sierra _ ) that ibm  @xcite is developing for the u.s .",
    "department of energy will exceed 100 petaflops and may provide hints about the extreme - scale architectures of the future .",
    "this paper argues that efforts for preparing hpc applications for exascale should start before such systems become available .",
    "we identify challenges that need to be addressed and recommend solutions in areas that are relevant for porting hpc application to future exascale computing systems , including formal modeling , static analysis and optimization , runtime analysis and optimization , and autonomic computing .",
    "we suggest that porting of hpc applications should be made by successive , stepwise improvements based on the currently available assumptions and data about exascale systems .",
    "this approach should support application improvement each time new information about future exascale systems becomes available , including the time when the application is actually deployed and runs on a concrete exascale system . a high - level application representation that captures key functional and non - functional properties in conjunction with the abstract machine model will enable programmers and tools to reason about and perform application improvements , and will serve as input to runtime systems to handle performance and energy optimizations and self - aware fault management .",
    "a tunable abstract machine model encapsulates current assumptions for future exascale systems and enables a priori application improvement before the concrete execution platform is known . at runtime ,",
    "the model is a posteriori tuned to support activities such as feedback - oriented code improvement or dynamic optimization .",
    "major contributions of this paper include ,    * identification of challenges and recommendation of solutions in formal modeling ( section  [ subsec : modeling ] ) , static analysis and optimization ( section  [ subsec : static ] ) , runtime analysis and optimization ( section  [ subsec : runtime ] ) , autonomic computing ( section  [ subsec : autonomic ] ) ; * a conceptual framework for preparing hpc applications for exascale that supports _ a priori _ application improvements before the concrete execution platform is known as well as _",
    "a posteriori _ optimization at runtime ( section  [ sec : approach ] ) ; * a discussion of the related work ( section  [ sec : related - work ] ) .",
    "in this section we identify challenges and recommend solutions in formal modeling , static analysis and optimization , runtime analysis and optimization , and autonomic computing .",
    "our goal is to adapt hpc application code to exascale execution platforms to achieve good utilization of resources . for this , we need to address questions such as :    1 .   what would happen if we change application or hardware layout ?",
    "2 .   what would happen if we change some parameters of the execution platform ? 3 .   what would happen if we use a different execution platform ?    unfortunately , answering these questions can not be done experimentally at the concrete level because such platforms do not yet exist .",
    "an alternative is to address these questions at an abstract level , focusing only on _ relevant information _ without actually executing the program .",
    "we believe that relevant information in this context is not what the code aims to achieve ( the result of the computation ) but its corresponding _ resource footprints _ , that is , how computational tasks communicate and synchronize , the amount of resources ( such as memory and computing time ) these tasks require , and how they access and move data .    in order to adapt the hpc code to a particular architecture",
    "we need to capture such resource footprints of software modules at different levels of granularity ( e.g. , program statements , blocks in procedure bodies and whole procedures ) , and be able to compare different task compositions .",
    "consequently , the modeling language must feature massively parallel operators over such task - level resource footprints  @xcite .",
    "a similar notion of resource footprints and composition can be used to express the properties of the architecture in a machine model to capture the resources that the architecture can make available to the code .",
    "working with resource footprints can be supported by an abstract behavioral specification language  @xcite , in which models describe both tasks and deployments .",
    "these models can be used to predict the non - functional behavior of code before it is deployed , and to compare deployments using formal methods .",
    "this requires a formal semantics for the specification language that can be used to devise static analysis techniques .",
    "when developing code from scratch using a model - based approach , the resource footprints can be specified in tandem with the standard model in a model - driven development  @xcite . however , when building such models from existing hpc code , monitoring profiles of low- and medium - scale systems can be used to extract resource footprints that approximate the resource consumption in terms of probabilistic distributions .",
    "the application of formal methods to parallel programs for analyzing functional properties , such as safety and liveness , has a long tradition . for _ non - functional properties _ , such as execution time and energy consumption , most performance analysis approaches use _ monitoring _ and present statistical information to the user .",
    "these approaches are helpful to improve hpc application code , but they also have some shortcomings :    1 .",
    "due to non - determinism , different program executions might lead to different observations . as a consequence , these methods are not able to provide reliable probabilistic information about average or worst - case execution times .",
    "they are based on execution on a real platform , thus they can not be used to predict performance on exascale computers , which are not available yet .",
    "3 .   these methods can be used to identify execution bottlenecks , but they can not explain the reasons for these bottlenecks , and thus they do not offer any concrete support for code improvement .    we expect that _ formal methods _ can address these limitations to provide performance analysis tools that considerably go beyond the state - of - the - art",
    ". a major step in this direction will be the usage of resource footprints which describe both hpc applications and execution platforms as abstract probabilistic models .",
    "formal analyses can be applied to these models to predict their probabilistic behavior .",
    "while a range of techniques are available for non - probabilistic programs , the analysis of parallel probabilistic programs still need development effort . to achieve a reasonable balance between scalability and precision for challenging hpc applications",
    ", it seems fundamental to use _ hybrid approaches _  @xcite that combine techniques such as static analysis , dynamic analysis , simulation , ( parametric ) model checking  @xcite , counterexample - guided abstraction refinement  @xcite , deductive approaches , etc .    to deliver the envisaged performance analysis tools , we face the following challenges : ( 1 ) determining the computation of cost properties that are given by means of probabilistic distributions ; ( 2 ) the inference of average cost in addition to the traditional worst - case cost ; ( 3 ) take into account the underlying platform through a set of probabilistic parameters ; ( 4 ) deal with massive and heterogeneous parallelism  @xcite which is challenging for program analysis in general ; and ( 5 ) develop multi - objective resource usage analyses and optimizations .",
    "formal modeling and static analysis should be enhanced with analysis of measurements at runtime .",
    "plenty of tools ( for instance , http://www.vi-hps.org ) have been developed for performance measurement and analysis of hpc applications at runtime .",
    "however , these tools will experience several issues when applied to exascale .",
    "the collection rates and the overall volume of monitoring data in an exascale computing environment will exceed the scalability of present performance tools .",
    "therefore , throttling the data volume will have to be applied online in order to store as less data as possible and as much as necessary for later _ post mortem _ analysis",
    ". however , simple profiling will not be sufficient due to loss of temporal information , thus a hybrid approach will have to be applied that performs on - the - fly trace analysis in order to discard irrelevant data , while retaining the same amount of information .",
    "the metric classification should be based on the formal model ( see section  [ subsec : modeling ] ) .",
    "such an approach will provide a generic insight into the performance of an hpc application that can be used for detecting performance bottlenecks .",
    "the instrumentation and hardware counter monitoring should follow a similar procedure where source code probing should be applied automatically by using tools such as opari @xcite . while many tools for collecting metrics of computing performance have been developed , very few analysis tools exist for energy consumption metrics in adequate accuracy and time resolution necessary for the runtime performance analysis @xcite .",
    "currently , common approaches ( see for example prace best practices @xcite ) for optimizing hpc applications require per - case inspection of runtime performance measurement data , such as profiling and tracing data .",
    "after the critical region has been determined , diverse heuristic approaches , such as `` _ _ trial and error _ _ '' , `` _ _ educated guess _ _ '' or `` _ _ rule of thumb _ _ '' , are applied to make changes in the affected source code sections .",
    "the most significant limitation of these heuristics and knowledge - based approaches is that ,    1 .",
    "all changes are made directly and manually in the source code , and 2 .",
    "the effect of the changes does not always lead to an improved performance which makes necessary the repeating of all steps several times .",
    "moreover , exascale computers pose a multi - objective optimization problem , weighing out the effects of several sometimes incongruent requirements .",
    "therefore , a systematic and automatic approach for the optimization problem is essential to find the optimal solution .",
    "another problem is that the critical section in an application typically changes with the optimization iterations and/or with upscaling , due to the law of diminishing returns , which makes the manual analysis and source code changes even more laborious and inefficient , even if done by an experienced hpc developer .",
    "thus instrumentation , collection / measurement and analysis steps should be automated , for example based on high - level scalable tools @xcite , and integrated into a feedback loop ( see section  [ subsec : autonomic ] ) .      during the execution of an application",
    ", failures may occur or the application performance may be below the expectation .",
    "these issues are addressed typically by programmers in a `` _ _ trial and error _ _ '' manner , i.e.  by manually changing and adapting their code to handle the failures and improve the performance .",
    "our proposed framework ( section [ sec : approach ] ) provides means for model - based failure handling or performance improvement based on _",
    "autonomic computing_. autonomic computing addresses self - managing characteristics of distributed computing resources with the facilities to adapting to unpredictable changes while hiding management complexity to operators and users @xcite . among the explored categories , _ advanced - control based methods _ and more specifically _ distributed controllers _ are the first candidates to realize autonomic computing in exascale systems .",
    "we propose to devise methodologies to efficiently collect runtime information balancing the amount and cost for storage of monitoring data with the quality of monitored data necessary to make deductions about the application behavior ( e.g.  trace analysis ) .",
    "the goal is thereby to define methodologies to scale current monitoring tools to exascale , balancing between quality and volume of monitoring data .    combining the information from both static code analysis and runtime analysis , as outlined above",
    ", we will iteratively apply objective - oriented transformations to legacy application code at a formal level based on the exascale dsl model ( see section  [ subsec : modeling ] ) . to this end",
    ", we will automate the analysis , optimization and transformation processes by implementing a generic feedback loop independent of the concrete programming language , algorithms used and target hardware architecture .",
    "a feedback loop driver enables to link the static analysis tool , the runtime analysis tool , the knowledge database and multi - parameter multi - objective optimization . as output , a set of rules ( policies )",
    "is generated which is then applied to transform the formal application model and to adapt the runtime environment parameters ( cf .",
    "figure  [ fig : diagram ] ) .",
    "after the transformations a new application executable is built and started in the adapted runtime environment .",
    "this described loop is iterated until convergence of the optimization .",
    "in this section we propose a conceptual framework for porting hpc applications to exascale computing systems .",
    "furthermore , we highlight benefits of our conceptual framework in the context of exascale computing .          our proposed approach for preparing hpc applications for exascale is depicted in figure  [ fig : diagram ] .",
    "the usage of a _ domain - specific exascale language ( dsel ) _ facilitates the programmer to express non - functional aspects ( like required time to solution , resilience or energy - efficiency ) of the execution of scalable parallel hpc codes .",
    "dsel has a formal operational semantics that enables the formal analysis of the code .",
    "the aim of the _ scalable model - based analyzer ( sma ) _ is to address non - functional properties of hpc codes , with a particular focus on scalability while complying with the crucial dimensions of resource consumption for exascale computing : time , energy , and resilience .",
    "the sma is responsible for analyzing resource consumption in terms of time , energy , and resilience , based on developed dsels .",
    "the _ exascale runtime data collector ( erdc ) _ is responsible for scalable monitoring to _ extract important monitoring data _ through the utilization of various techniques like _ filtering _ , _ streaming _ , or _ data mining_. the runtime information is used to verify or to tune the model of the code via the _ autonomous feedback loop ( afl)_. to endow the system with self - adaption , control - theoretical concepts are incorporated in autonomic computing paradigm .",
    "based on the autonomic technology for application optimization , programmers will be less dependent on the currently used `` _ _ trial - and - error _ _ '' approach .",
    "our approach considers optimization opportunities during the application life cycle comprising improvements based on static code analysis , deployment - time optimization , and run - time optimization .",
    "the developed models are used to identify the potential for improvement of the scalability for hpc applications under study and suggest application modifications that may lead to better scalability .",
    "exascale computing is not simply the continuation of a computational capability trend that has been proven true for the last five decades .",
    "first , while clock rate scaling is limited , complex multicore architectures and parallel computing still follow moore s law .",
    "second , exascale computing capability will finally allow complex real - life simulations and data analytics .",
    "the latter will greatly expand the horizons of scientific discovery and enable the new data - driven economy to become a reality .",
    "however , the exascale promise faces a series of obstacles , with the most difficult being energy , scalability , reliability and programmability .",
    "our proposal is to develop a holistic , unifying and mathematically founded framework to systematically attack the roots of these problems .",
    "that is , instead of attacking these problems separately , we propose a holistic approach to study them as a multi - parametric problem which will allow us to deeply understand their interplay and thus make the right decisions to navigate in this complex landscape .",
    "the benefits are targeting the full spectrum of actors and beneficiaries .",
    "system developers will have a much better path to design , while end users and application developers will benefit from increased scalability , performance , reliability and programmability .",
    "hpc centers will see a great increase in overall system usability and an energy budget that is affordable .",
    "this in turn has the potential to greatly limit and contain the overall impact of high end hpc to the environment .",
    "in a prospective analysis of issues with extreme scale systems @xcite , the importance of concurrency , energy efficiency and resilience of software , as well as software  hardware co - design has been elucidated .",
    "focusing on energy - aware hpc numerical applications , the exa2green project ( http://exa2green-project.eu ) has developed energy - aware performance metrics @xcite , as well as energy - aware basic algorithm motifs such as linear solvers @xcite .",
    "further work will strongly benefit from these results .",
    "different power measurement interfaces available on current architecture generations have been evaluated and the role of the sampling rate has been discussed @xcite .    the autotune approach @xcite employs the periscope tuning framework @xcite to automate performance analysis and tuning of hpc applications with the goal to improve performance and energy efficiency .",
    "therein , both performance analysis and tuning are performed automatically during a single run of the application .    the deep project @xcite has developed a novel exascale - enabling supercomputing architecture with a matching software stack and a set of optimized grand - challenge simulation applications .",
    "the goal of the deep architecture is to enable unprecedented scalability and with an extrapolation to millions of cores to take the deep concept to an exascale level .",
    "the follow - up deeper project ( http://www.deep-er.eu ) is mainly focusing on i / o and resiliency aspects .    the cresta project ( http://www.cresta-project.eu ) has adopted a co - design strategy for exascale , including all aspects of hardware architectures , system and application software . a major asset from the cresta project",
    "is the score - p measurement system @xcite on which an integration and automation of performance analysis tools ( cf .",
    "section  [ subsec : runtime ] ) can be based .",
    "in addition , efforts have been made on developing a domain - specific language for expressing parallel auto - tuning specifications and an adaptive runtime support framework .",
    "exascale computing will revolutionize high - performance computing , but the first exascale systems are not expected to appear before 2020 . in this paper we have argued that the effort for preparing hpc applications for exascale should start now .",
    "we have proposed that porting of hpc applications should be made by successive , stepwise improvements based on the currently available assumptions and data about exascale systems .",
    "this approach should support application improvement each time new information about future exascale systems becomes available , including the time when the application is actually deployed and runs on a concrete exascale system .",
    "we have identified challenges that need to be addressed and recommended solutions in key areas of interest for our approach including : formal modeling , static analysis and optimization , runtime analysis and optimization , and autonomic computing .",
    "our future research will address the development of a framework that supports the conceptual framework presented in this paper .",
    "e.  dhollander , j.  dongarra , i.  foster , l.  grandinetti , and g.  joubert , eds . , _ transition of hpc towards exascale computing _ , ser .",
    "advances in parallel computing.1em plus 0.5em minus 0.4emios press , 2013 , vol .",
    "24 .",
    "department of energy selects ibm `` data centric '' systems to advance research and tackle big data challenges , '' 2014 .",
    "[ online ] .",
    "available : http://www-03.ibm.com/press/us/en/pressrelease/45387.wss    s.  pllana , i.  brandic , and s.  benkner , `` a survey of the state of the art in performance modeling and prediction of parallel and distributed computing systems , '' _ international journal of computational intelligence research ( ijcir ) _ , vol .  4 , no .  1 ,",
    "pp . 1726 , january 2008 .",
    "e.  b. johnsen , r.  hhnle , j.  schfer , r.  schlatte , and m.  steffen , `` abs : a core language for abstract behavioral specification , '' in _",
    "9th international symposium on formal methods for components and objects ( fmco10 ) _ , ser .",
    "lecture notes in computer science , vol .",
    "6957.1em plus 0.5em minus 0.4emspringer , 2011 , pp",
    ". 142164 .",
    "e.  arkin , b.  tekinerdogan , and k.  m. imre , `` model - driven approach for supporting the mapping of parallel algorithms to parallel computing platforms , '' in _ model - driven engineering languages and systems _ ,",
    "lecture notes in computer science.1em plus 0.5em minus 0.4em springer , 2013 , vol . 8107 , pp .",
    "757773 .",
    "s.  pllana and t.  fahringer , `` on customizing the uml for modeling performance - oriented applications , '' in _ uml _ , ser .",
    "lecture notes in computer science , vol .",
    "2460.1em plus 0.5em minus 0.4emspringer , 2002 , pp .",
    "259274 .",
    "s.  pllana , s.  benkner , e.  mehofer , l.  natvig , and f.  xhafa , `` towards an intelligent environment for programming multi - core computing systems , '' in _ euro - par 2008 workshops - parallel processing _ ,",
    "lecture notes in computer science , vol .",
    "5415.1em plus 0.5em minus 0.4emspringer , 2008 , pp",
    ". 141151 .",
    "t.  fahringer , s.  pllana , and j.  testori , `` teuta : tool support for performance modeling of distributed and parallel applications , '' in _ computational science - iccs 2004 _ , ser .",
    "lecture notes in computer science.1em plus 0.5em minus 0.4emspringer berlin heidelberg , 2004 , vol . 3038 , pp .",
    "456463 .",
    "s.  pllana , s.  benkner , f.  xhafa , and l.  barolli , `` hybrid performance modeling and prediction of large - scale parallel systems , '' in _",
    "parallel programming , models and applications in grid and p2p systems _ , ser .",
    "advances in parallel computing.1em plus 0.5em minus 0.4emios press , 2009 , vol .",
    "17 , pp . 5482 .",
    "n.  jansen , f.  corzilius , m.  volk , r.  wimmer , e.  brahm , j .-",
    "katoen , and b.  becker , `` accelerating parametric probabilistic verification , '' in _ quantitative evaluation of systems ( qest14 ) _ , ser .",
    "lecture notes in computer science , vol .",
    "8657.1em plus 0.5em minus 0.4emspringer , 2014 , pp",
    ". 404420 .    c.  dehnert , n.  jansen , r.  wimmer , e.  brahm , and j .-",
    "katoen , `` fast debugging of prism models , '' in _ international symposium on automated technology for verification and analysis ( atva14 ) _ , ser .",
    "lecture notes in computer science , vol .",
    "8837.1em plus 0.5em minus 0.4emspringer , 2014 , pp . 146162 .",
    "s.  benkner , s.  pllana , j.  traff , p.  tsigas , u.  dolinsky , c.  augonnet , b.  bachmayer , c.  kessler , d.  moloney , and v.  osipov , `` peppher : efficient and productive usage of hybrid computing systems , '' _ micro , ieee _ , vol .",
    ".  5 , pp . 2841 , sept 2011 .",
    "c.  kessler , u.  dastgeer , s.  thibault , r.  namyst , a.  richards , u.  dolinsky , s.  benkner , j.  traff , and s.  pllana , `` programmability and performance portability aspects of heterogeneous multi-/manycore systems , '' in _ design , automation test in europe conference exhibition ( date ) , 2012 _ , march 2012 , pp .",
    "14031408 .",
    "m.  sandrieser , s.  benkner , and s.  pllana , `` using explicit platform descriptions to support programming of heterogeneous many - core systems , '' _ parallel computing _ , vol .",
    "38 , no . 1 - 2 , pp .",
    "5256 , january 2012 .",
    "j.  dokulil , e.  bajrovic , s.  benkner , s.  pllana , m.  sandrieser , and b.  bachmayer , `` efficient hybrid execution of c++ applications using intel(r ) xeon phi(tm ) coprocessor , '' _ corr _ , vol .",
    "abs/1211.5530 , 2012 .",
    "[ online ] .",
    "available : http://arxiv.org/abs/1211.5530      p.  alonso , r.  badia , j.  labarta , m.  barreda , m.  dolz , r.  mayo , e.  quintana - orti , and r.  reyes , `` tools for power - energy modelling and analysis of parallel scientific applications , '' in _",
    "2012 41st international conference on parallel processing ( icpp12)_.1em plus 0.5em minus 0.4emieee , 2012 , pp .",
    "420 429 .",
    "a.  bohra and v.  chaudhary , `` vmeter : power modelling for virtualized clouds , '' in _ 2010 ieee international symposium on parallel distributed processing , workshops and phd forum ( ipdpsw10)_.1em plus 0.5em minus 0.4emieee , 2010 , pp . 1 8 .",
    "m.  geimer , f.  wolf , b.  wylie , and b.  mohr , `` scalable parallel trace - based performance analysis , '' in _ recent advances in parallel virtual machine and message passing interface _ ,",
    "lecture notes in computer science .",
    "1em plus 0.5em minus 0.4emspringer , 2006 , vol . 4192 , pp .",
    "303312 .",
    "b.  mohr and f.  wolf , `` kojak : a tool set for automatic performance analysis of parallel programs , '' in _ euro - par 2003 parallel processing _ , ser .",
    "lecture notes in computer science.1em plus 0.5em minus 0.4em springer , 2003 , vol .",
    "2790 , pp .",
    "13011304 .",
    "f.  wolf and b.  mohr , `` automatic performance analysis of hybrid mpi / openmp applications , '' in _ eleventh euromicro conference on parallel , distributed and network - based processing_.1em plus 0.5em minus 0.4emieee , 2003 , pp .",
    "1322 .        c.  bekas and a.  curioni , `` a new energy aware performance metric , '' _ computer science - research and development _ ,",
    "vol .  25 , no . 3 - 4 , pp . 187195 , 2010 .",
    "[ online ] .",
    "available : http://dx.doi.org/10.1007/s00450-010-0119-z    p.  klavk , a.  c.  i. malossi , c.  bekas , and a.  curioni , `` changing computing paradigms towards power efficiency , '' _ philosophical transactions of the royal society a _ , vol . 372 , no .",
    "2018 , 2014 .",
    "[ online ] .",
    "available : http://dx.doi.org/10.1098/rsta.2013.0278    m.  e.  m. diouri , m.  f. dolz , o.  glck , l.  lefvre , p.  alonso , s.  cataln , r.  mayo , and e.  s. quintana - ort , `` assessing power monitoring approaches for energy and power analysis of computers , '' _ sustainable computing : informatics and systems _ , vol .  4 , no .  2 , pp . 68  82 , 2014",
    "r.  miceli , g.  civario , a.  sikora , e.  csar , m.  gerndt , h.  haitof , c.  navarrete , s.  benkner , m.  sandrieser , l.  morin , and f.  bodin , `` autotune : a plugin - driven approach to the automatic tuning of parallel applications , '' in _ applied parallel and scientific computing _ , ser .",
    "lecture notes in computer science.1em plus 0.5em minus 0.4emspringer , 2013 , vol . 7782 , pp .",
    "328342 .",
    "s.  benedict , v.  petkov , and m.  gerndt , `` periscope : an online - based distributed performance analysis tool , '' in _ tools for high performance computing 2009_.1em plus 0.5em minus 0.4emspringer , 2010 , pp .",
    "n.  eicker , t.  lippert , t.  moschny , and e.  suarez , `` the deep project - pursuing cluster - computing in the many - core era , '' in _ 2013 42nd international conference on parallel processing ( icpp13 ) _ , 2013 , pp . 885892 .",
    "[ online ] .",
    "available : http://dx.doi.org/10.1109/icpp.2013.105    x.  aguilar , j.  doleschal , a.  gray , a.  hart , d.  henty , t.  hilbrich , d.  lecomber , s.  markidis , h.  richardson , and m.  schliephake , `` the exascale development environment : state of the art and gap analysis ( cresta white paper ) , '' 2013 , accessed 2015 - 02 - 04 .",
    "[ online ] .",
    "available : http://cresta-project.eu/"
  ],
  "abstract_text": [
    "<S> while the hpc community is working towards the development of the first exaflop computer ( expected around 2020 ) , after reaching the petaflop milestone in 2008 still only few hpc applications are able to fully exploit the capabilities of petaflop systems . in this paper </S>",
    "<S> we argue that efforts for preparing hpc applications for exascale should start before such systems become available . </S>",
    "<S> we identify challenges that need to be addressed and recommend solutions in key areas of interest , including formal modeling , static analysis and optimization , runtime analysis and optimization , and autonomic computing . </S>",
    "<S> furthermore , we outline a conceptual framework for porting hpc applications to future exascale computing systems and propose steps for its implementation . </S>"
  ]
}
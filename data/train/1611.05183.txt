{
  "article_text": [
    "the theory of coalgebras  @xcite is a framework of choice to model and study state - based systems at a high level of generality .",
    "coalgebraic methods have been rather successful in modeling branching time behaviour of various kinds of transition systems , with a general notion of bisimulation and final semantics as the main contributions .",
    "but in a wide range of settings , from automata theory to verification and model checking , one is interested in the linear time behaviour of systems , such as trace semantics of transition systems or language semantics of automata .",
    "indeed , coalgebraic modeling of linear time behaviour has also attracted significant attention .",
    "however , the emerging picture is considerably more complex : several approaches have been developed whose scopes and connections are not yet fully understood .",
    "here we suggest a new approach which , contrary to previously considered coalgebraic ideas , crucially and explicitly defines trace semantics not by coinduction but by induction , based on techniques from modal logic .",
    "this provides a transparent framework that covers new examples such as weighted tree automata , allows us to naturally relate trace semantics to determinization constructions , and , in certain well - behaved cases , provides canonical determinization and minimization procedures .    to study trace semantics coalgebraically",
    ", one usually considers systems whose behaviour type is a composite functor of the form @xmath0 or @xmath1 , where @xmath2 represents a branching aspect of behaviour that trace semantics is supposed to `` resolve '' , and @xmath3 represents the transition aspect that should be recorded in system traces .",
    "typically it is assumed that @xmath2 is a monad , and its multiplication structure is used to resolve branching . for example , in  @xcite , a distributive law of @xmath3 over @xmath2 is used to lift @xmath3 to the kleisli category of @xmath2 , and trace semantics is obtained as final semantics for the lifted functor .",
    "additional assumptions on @xmath2 are needed for this , so this approach does not work for coalgebras such as weighted automata . on the other hand , in  @xcite a distributive law of @xmath2 over @xmath3",
    "is used to lift @xmath3 to the eilenberg - moore category of @xmath2 , with trace semantics again obtained as final semantics for the lifted functor .",
    "this can be seen as a coalgebraic generalization of the powerset determinization procedure for non - deterministic automata .",
    "while it applies to many examples , that approach does not work for systems that do not determinize , such as tree automata .",
    "a detailed comparison of these two approaches is in  @xcite .    in this paper , we study trace semantics in terms of modal logic .",
    "the basic idea is very simple : we view traces as formulas in suitable modal logics , and trace semantics of a state arises from all formulas that hold for it .",
    "a coalgebraic approach to modal logic based on dual adjunctions is by now well developed  @xcite , and we apply it to speak of traces generally",
    ". obviously not every logic counts as a trace logic : assuming a behaviour type of the form @xmath1 or @xmath0 , we construct logics from arbitrary ( but usually expressive ) logics for @xmath3 and special logics for @xmath2 whose purpose is to resolve branching .",
    "we call such logics _ forgetful_.    our approach differs from previous studies in a few ways :    * trace semantics is obtained not as final semantics of coalgebras , but by initial semantics of algebras . fundamentally , we view trace semantics as an inductive concept and not a coinductive one akin to bisimulation , although in some well - behaved cases the inductive and coinductive views coincide .",
    "* we do not assume that @xmath2 is a monad , unless we want to relate our logical approach to ones that do , in particular to determinization constructions .",
    "* instead of using monad multiplication @xmath4 to resolve branching , we use a natural transformation @xmath5 , where @xmath6 is a contravariant functor that provides the basic infrastructure of logics . in case of nondeterministic systems",
    ", @xmath2 is the covariant powerset functor and @xmath6 the contravariant powerset , so @xmath7 and @xmath8 act the same on objects , but they carry significantly different intuitions . *",
    "thanks to the flexibility of modal logics , we are able to cover examples such as the language semantics of weighted tree automata , that does not quite fit into previously studied approaches , or alternating automata .    * example . * consider weighted automata over a semiring @xmath9 .",
    "every state of such an automaton , given an input letter , has a linear combination of successor states , with coefficients in @xmath9 .",
    "the semantics of a weighted automaton with state space @xmath10 is a function @xmath11 , mapping every state to a weighted language . in our framework , the actual map @xmath12 is computed as the transpose of a certain map @xmath13 , which arises by induction on words .",
    "this computation is determined by a certain ( rather simplistic ) _ forgetful logic _ ; the formulas of this logic are just the words in @xmath14 . in this example , it is crucial to distinguish between the branching structure of automata , modeled by linear combinations of states , and the functor @xmath15 that allows arbitrary assignments of weights to words and states .",
    "this distinction is an instance of a general distinction between a covariant functor ( or a monad ) @xmath2 and a contravariant functor @xmath6 , which will be a recurring theme in this paper .",
    "applying the term _ logic _ to our framework is admittedly a bit of an exaggeration .",
    "we do not consider syntactic aspects usually connected with logical systems , such as deduction relations .",
    "we merely study ways to interpret certain terms ( formulas ) on models ( coalgebras ) in an inductive fashion . one might call it a testing framework , as in  @xcite , but similar systems are often called logics in coalgebraic literature , and we reluctantly stick to this custom .",
    "the idea of using modal logics for coalgebraic trace semantics is not new ; it is visible already in  @xcite . in",
    "@xcite it is related to behavioural equivalence , and applied to non - deterministic systems .",
    "a generalized notion of relation lifting is used in  @xcite to obtain infinite trace semantics , and applied in  @xcite to get canonical linear time logics . in  @xcite",
    ", coalgebraic modal logic is combined with the idea of lifting behaviours to eilenberg - moore categories , with trace semantics in mind . in  @xcite",
    ", a connection to modal logics is sketched from the perspective of coalgebraic determinization procedures . in a sense",
    ", this paper describes the same connection from the perspective of logic . in  @xcite ,",
    "the framework of  @xcite is rephrased in terms of coalgebraic modal logic .",
    "the result is rather similar to the one we considered , with forgetful modalities to resolve branching .",
    "unlike our approach ,  @xcite relies on @xmath2 being a monad , and under some more assumptions it studies canonical forgetful modalities that give rise to particularly well - behaved logics . in  @xcite , monads feature even more prominently , with the entire behaviour functor embedded in a so - called graded monad . in  @xcite , it is embedded in a more complex functor with a so - called observer .",
    "our main new contribution is the notion of forgetful logic and its ramifications .",
    "basic definitions are provided in section  [ sec : forgetful ] and some illustrative examples in section  [ sec : examples ] .",
    "we introduce a systematic way of relating trace semantics to determinization , by giving sufficient conditions for a given determinization procedure , understood in a slightly more general way than in  @xcite , to be correct with respect to a given forgetful logic ( section  [ sec : determinization ] ) . for instance",
    ", this allows showing in a coalgebraic setting that the determinization of alternating automata into non - deterministic automata preserves language semantics .",
    "a correct determinization procedure may not exist in general .",
    "in section  [ sec : isomates ] we study a situation where a canonical correct determinization procedure exists .",
    "it turns out that even in the simple case of non - deterministic automata that procedure is not the classical powerset construction ; instead , it relies on a double application of contravariant powerset construction .",
    "interestingly , this is what also happens in brzozowski s algorithm for automata minimization  @xcite , so as a by - product , we get a new perspective on that algorithm which has recently attracted much attention in the coalgebraic community  @xcite .",
    "although we do not assume the branching functor @xmath2 to be a monad , a forgetful logic for @xmath2 is equivalent to a transformation from @xmath2 to a certain monad which , in the case of sets , is the double contravariant powerset monad ( a special case of the continuation monad ) .",
    "one might say that the continuation monad is rich enough to handle all types of branching that can be `` forgotten '' within our framework .",
    "this paper is an extended version of  @xcite , adding full proofs and a treatment of the trace semantics of probabilistic systems as a non - trivial instance of the framework .",
    "_ acknowledgments _ we thank marcello bonsangue , helle hvid hansen , ichiro hasuo , bart jacobs and jan rutten for discussions .",
    "joost winter spotted a serious mistake in a previous version of example  [ ex : alt - correct ] .",
    "we are very grateful to the anonymous reviewer who pointed out lemma  [ lem : monadmap ] and whose many insightful comments let us significantly improve the paper .",
    "we assume familiarity with basic notions of category theory ( see , e.g. ,  @xcite ) .",
    "a coalgebra for a functor @xmath16 consists of an object @xmath10 and a map @xmath17 .",
    "a homomorphism from @xmath17 to @xmath18 is a map @xmath19 such that @xmath20 .",
    "the category of @xmath3-coalgebras is denoted by @xmath21 .",
    "algebras for a functor @xmath22 are defined dually ; the category of @xmath22-algebras and homomorphisms is denoted by @xmath23 .",
    "we list a few examples where @xmath24 , the category of sets and functions .",
    "consider the functor @xmath25 , where @xmath26 is the finite powerset functor and @xmath27 is a fixed set .",
    "a coalgebra @xmath28 is a finitely branching labelled transition system : it maps every state to a finite set of next states .",
    "coalgebras for the functor @xmath29 are image - finite labelled transition systems , i.e. , the set of next states for every label is finite . when @xmath27 is finite the two notions coincide .",
    "a coalgebra @xmath30 , where @xmath31 is a singleton , is a non - deterministic automaton ; a state @xmath32 is accepting whenever @xmath33 .",
    "consider the functor @xmath34 , where 2 is a two - element set of truth values .",
    "a coalgebra @xmath35 is a deterministic automaton ; a state @xmath32 is accepting if @xmath36 , and @xmath37 is the transition function .",
    "the composition @xmath38 yields non - deterministic automata , presented in a different way than above .",
    "we shall also consider @xmath39-coalgebras , which represent a general version of alternating automata .",
    "let @xmath9 be a semiring .",
    "define @xmath40 where @xmath41 , and @xmath42 .",
    "a _ weighted automaton _ is a coalgebra for the functor @xmath43 .",
    "let @xmath44 be a polynomial functor corresponding to an algebraic signature .",
    "a _ top - down weighted tree automaton _ is a coalgebra for the functor @xmath45 . for @xmath9 the boolean semiring these are _ non - deterministic tree automata_. similar to non - deterministic automata above , one can present weighted automata as coalgebras for @xmath46 .",
    "we note that @xmath26 is a monad , by taking the unit @xmath47 and the multiplication @xmath48 to be set union .",
    "more generally , the functor @xmath49 extends to a monad , by taking @xmath50 .",
    "the case of @xmath26 is obtained by taking the boolean semiring .",
    "notice that the finite support condition is required for @xmath48 to be well - defined .",
    "the basic framework of coalgebraic logic is formed of two categories @xmath51 , @xmath52 connected by functors @xmath53 and @xmath54 that form an adjunction @xmath55 .",
    "for example , one may take @xmath56 and @xmath57 , for @xmath58 a two - element set of logical values .",
    "the intuition is that objects of @xmath51 are collections of processes , or states , and objects of @xmath52 are logical theories .    to avoid cluttering the presentation with too much of the @xmath59 notation",
    ", we opt to treat @xmath60 and @xmath6 as _ contravariant functors _ ,",
    "i.e. , ones that reverse the direction of all arrows ( maps ) , between @xmath51 and @xmath52 .",
    "the adjunction then becomes a contravariant adjunction `` on the right '' , meaning that there is a natural bijection @xmath61 slightly abusing the notation , we shall denote both sides of this bijection by @xmath62 . applying the bijection to a map",
    "is referred to as transposing the map .",
    "in such an adjunction , @xmath63 is a monad on @xmath51 , whose unit we denote by @xmath64 , and @xmath65 is a monad on @xmath52 , with unit the denoted by @xmath66 . as usual , multiplication of the monad @xmath63",
    "is @xmath67 , and multiplication of @xmath65 is @xmath68 .",
    "the counit - unit equations for adjunctions amount to : @xmath69 ^ -{\\epsilon f}\\ar@{=}[rd ] & fgf\\ar@{=>}[d]^{f\\iota } \\\\ & f } } \\qquad\\qquad \\vcenter{\\xymatrix { g\\ar@{=>}[r]^-{\\iota g}\\ar@{=}[rd ] & gfg\\ar@{=>}[d]^{g\\epsilon } \\\\ & g } } \\ ] ] both @xmath60 and @xmath6 map colimits to limits , by standard preservation results for adjoint functors .    in",
    "what follows , the reader need only remember that @xmath60 and @xmath6 are contravariant , i.e. , they reverse maps and natural transformations .",
    "all other functors , except a few that lift @xmath60 and @xmath6 to other categories , are standard covariant functors .",
    "we recall an approach to coalgebraic modal logic based on contravariant adjunctions , see , e.g. ,  @xcite .",
    "consider categories @xmath51 , @xmath52 and functors @xmath60 , @xmath6 as in section  [ sec : contr - adj ]",
    ". given an endofunctor @xmath70 , a _",
    "coalgebraic logic _ to be interpreted on @xmath3-coalgebras is built of _ syntax _",
    ", i.e. , an endofunctor @xmath71 , and _ semantics _ , a natural transformation @xmath72 .",
    "we will usually refer to @xmath73 simply as a logic .",
    "if an initial @xmath22-algebra @xmath74 exists then , for any @xmath3-coalgebra @xmath75 , the _ logical semantics _ of @xmath73 on @xmath76 is a map @xmath77 obtained by transposing the map defined by initiality of @xmath78 .",
    "@xmath79_a\\ar[r]^{ls } & lfx\\ar[d]^{\\rho_x}\\\\      & fbx\\ar[d]^{fh } \\\\",
    "\\phi\\ar[r]_s & fx } } \\ ] ] the mapping of a @xmath3-coalgebra @xmath75 to an @xmath22-algebra @xmath80 determines a contravariant functor @xmath81 that lifts @xmath60 , i.e. , acts as @xmath60 on carriers .",
    "@xmath82 \\ar[r]^-{\\hat f } & { \\mathsf{alg}(l ) } \\ar[d ] \\\\",
    "{ \\mathcal{c}}\\ar[r]_f & { \\mathcal{d}}}}\\ ] ] the functor @xmath81 has no ( contravariant ) adjoint in general ; later in section  [ sec : isomates ] we shall study well - behaved situations when it does .",
    "notice that @xmath81 maps coalgebra homomorphisms to algebra homomorphisms , and indeed the logical semantics factors through coalgebra homomorphisms , i.e. , behavioural equivalence implies logical equivalence .",
    "the converse holds if @xmath73 is _ expressive _ , meaning that the logical semantics decomposes as a coalgebra homomorphism followed by a mono .",
    "[ ex : logic - da ] let @xmath83 , @xmath84 , @xmath85 and @xmath86 .",
    "the initial algebra of @xmath22 is the set @xmath14 of words over @xmath27 .",
    "we define a logic @xmath87 as follows : @xmath88 and @xmath89 . for a coalgebra @xmath90 the logical semantics",
    "is a map @xmath91 , yielding the usual language semantics of the automaton : @xmath92 for the empty word @xmath93 , and @xmath94 for any @xmath95 .",
    "note that logical equivalences , understood as kernel relations of logical semantics , are conceptually different from behavioural equivalences typically considered in coalgebra theory , in that they do not arise from finality of coalgebras , but rather from initiality of algebras ( albeit in a different category ) .",
    "fundamentally , logical semantics for coalgebras is defined by induction rather than coinduction . in some particularly well - behaved cases",
    "the inductive and coinductive views coincide ; we shall study such situations in section  [ sec : isomates ] .",
    "a logic @xmath72 gives rise to its _ mate _",
    "@xmath96 , defined by @xmath97 ^ -{\\iota bg }   & gfbg\\ar@{=>}[r]^{g\\rho g } & glfg\\ar@{=>}[r]^-{gl\\epsilon } & gl , } \\ ] ] where @xmath98 and @xmath99 are as in section  [ sec : contr - adj ] .",
    "a routine calculation shows that @xmath73 in turn is the mate of @xmath100 ( with the roles of @xmath60 , @xmath6 , @xmath98 and @xmath99 swapped ) , giving a bijective correspondence between logics and their mates .",
    "some important properties of logics are conveniently stated in terms of their mates ; e.g. , under mild additional assumptions ( see  @xcite ) , if the mate is pointwise monic then the logic is expressive .",
    "two simple but useful diagrams show how logics relate to their mates along the basic adjunction :    [ lem : useful ] for any logic @xmath101 , the following diagrams commute : @xmath102 ^ -{\\iota b}\\ar@{=>}[d]_{b\\iota } & gfb\\ar@{=>}[d]^{g\\rho } \\\\",
    "bgf\\ar@{=>}[r]_-{\\rho^{\\flat}f } & glf } \\qquad\\qquad \\xymatrix {      l\\ar@{=>}[r]^-{\\epsilon l}\\ar@{=>}[d]_{l\\epsilon } & fgl\\ar@{=>}[d]^{f\\rho^{\\flat } } \\\\",
    "lfg\\ar@{=>}[r]_-{\\rho g } & fbg . }",
    "\\ ] ]    for the first diagram , chase : @xmath103^{\\iota b}\\ar@{=>}[d]_{b\\iota } & & & gfb\\ar@{=>}[lld]_{gfb\\iota}\\ar@{=>}[d]^{g\\rho }",
    "\\\\      bgf\\ar@{=>}[r]^-{\\iota bgf}\\ar@{=>}@/_1pc/[rrrd]_{\\rho^{\\flat}f } & gfbgf\\ar@{=>}[r]_-{g\\rho gf } & glfgf\\ar@{=>}[rd]_-{gl\\epsilon f } & glf\\ar@{=}[d]\\ar@{=>}[l]_-{glf\\iota } \\\\      & & & glf } \\ ] ] where everything commutes , clockwise starting from top - left : by naturality of @xmath98 , by naturality of @xmath73 , by   above , and by definition of @xmath104 .",
    "the other diagram is similar .",
    "there is a direct characterization of logical semantic maps in terms of mates , first formulated in  @xcite . indeed , by transposing   it is easy to check that the logical semantics @xmath77 on a coalgebra @xmath105 is a unique map that makes the following `` twisted coalgebra morphism '' diagram commute",
    ". @xmath106^{bs^{\\flat } } & bg\\phi\\ar[d]^{\\rho^{\\flat}_{\\phi } } \\\\      & gl\\phi \\\\",
    "x\\ar[uu]^h\\ar[r]_{s^{\\flat } } & g\\phi\\ar[u]_{ga}. } } \\ ] ]      given logics @xmath87 and @xmath107 , a _ morphism _ from @xmath108 to @xmath73 consists of a pair of natural transformations @xmath109 and @xmath110 such that the following diagram commutes : @xmath111^{\\theta }   \\ar@{=>}[d]_{\\tau f }          & fk \\ar@{=>}[d]^{f\\kappa } \\\\",
    "lf \\ar@{=>}[r]_{\\rho }           & fb   } } \\qquad \\text{or , equivalently , } \\qquad \\vcenter { \\xymatrix {      bg \\ar@{=>}[r]^{\\rho^\\flat }   \\ar@{=>}[d]_{\\kappa g }          & gl \\ar@{=>}[d]^{g\\tau } \\\\",
    "kg \\ar@{=>}[r]_{\\theta^\\flat }           & gm . } } \\ ] ] natural transformations @xmath112 and @xmath113 as above induce functors @xmath114^{{- \\circ \\tau } } & { \\mathsf{alg}(m ) } } \\qquad \\text { and } \\qquad \\xymatrix {      { \\mathsf{coalg}(b ) } \\ar[r]^{{\\kappa \\circ - } } & { \\mathsf{coalg}(k ) } } \\ ] ] defined by composition .",
    "[ lm : logic - morph ] suppose @xmath115 is morphism from @xmath107 to @xmath87 .",
    "then the following diagram commutes : @xmath116^{{\\kappa \\circ - } } \\ar[d]_{\\bar{f}_\\rho }          & { \\mathsf{coalg}(k ) } \\ar[d]^{\\bar{f}_\\theta } \\\\          { \\mathsf{alg}(l ) } \\ar[r]_{{- \\circ \\tau } } & { \\mathsf{alg}(m ) }      } \\ ] ] where @xmath117 and @xmath118 are the liftings of @xmath60 induced by @xmath73 and @xmath108 respectively , as in  .",
    "let @xmath17 be a coalgebra , and consider : @xmath119^{\\theta_x } \\ar@{=}[d ]              & fkx \\ar[r]^{f\\kappa_x }               & fbx \\ar[r]^{ff } \\ar@{=}[d ]              & fx   \\ar@{=}[d ] \\\\          mfx \\ar[r]_{\\tau_{fx } }               & lfx \\ar[r]_{\\rho_x }               & fbx \\ar[r]_{ff }               & fx      } \\ ] ] the upper path is @xmath120 , and the lower path is @xmath121 .",
    "the diagram commutes since @xmath122 is a morphism of logics .",
    "morphisms of logics apppear in  @xcite , where the category of logics and morphisms between them is studied .",
    "the examples in  @xcite involve a translation of syntax determined by @xmath112 .",
    "our main interest in morphisms of logics is cases where @xmath123 .",
    "then , it is a direct consequence of lemma  [ lm : logic - morph ] that the logical semantics of @xmath73 on a coalgebra @xmath17 coincides with the logical semantics of @xmath108 on @xmath124 . in the sequel , in a situation where @xmath125 we simply say that @xmath113 is a morphism of logics .",
    "in most abstract approaches to coalgebraic trace semantics , the behaviour functor under consideration is a composition @xmath0 or @xmath1 , where @xmath2 is the branching aspect and @xmath3 is the type of observations of interest .",
    "our approach is to capture trace semantics as the logical semantics of a suitable logic for @xmath0 or @xmath1 .",
    "the logics that we consider are defined as the composition of a logic for @xmath3 and a special kind of logic for @xmath2 which has trivial syntax . this special logic for @xmath2",
    "specifies how the branching behaviour should be `` forgotten '' in the resulting logical theory .",
    "logics for composite functors can often be obtained from logics of their components .",
    "consider functors @xmath126 and logics for them @xmath72 and @xmath127 , for some functors @xmath128 .",
    "one can then define logics for the functors @xmath0 and @xmath1 : @xmath129 it is easy to see that taking the mate of a logic respects this composition operator , i.e. , that @xmath130",
    ". such compositions of logics appear in  @xcite and were studied in a slightly more concrete setting in  @xcite . in  (",
    "* lemma 3.12 ) , it is shown how to ( horizontally ) compose morphisms of logics , turning @xmath131 into a bifunctor .",
    "we shall be interested in the case where the logic for @xmath2 has a trivial syntax ; in other words , where @xmath132 .",
    "intuitively speaking , we require a logic for @xmath2 that consists of a single unary operator , which could therefore be elided in a syntactic presentation of logical formulas .",
    "the semantics of such an operator is defined by a natural transformation @xmath133 or equivalently by its mate @xmath134 . intuitively , the composite logics @xmath135 and @xmath136 , when interpreted on @xmath0- and @xmath1-coalgebras respectively disregard , or forget , the aspect of their behaviour related to the functor @xmath2 , in a manner prescribed by @xmath137 .",
    "we call logics obtained in this fashion _ forgetful logics_.    transformations @xmath133 ( and their mates @xmath138 ) are also in bijective correspondence with natural transformations @xmath139 .",
    "indeed , define @xmath140 and recover @xmath141 in what is easily seen to be mutually inverse operations .",
    "this means that , intuitively , a forgetful logic for @xmath2 is equivalent to an _ encoding _ of @xmath2 into the monad @xmath63 . in all examples considered in the next section @xmath142",
    "is ( pointwise ) monic , which justifies the name `` encoding '' , but we do not use the monicity for anything and we do not have an understanding of its significance .    as long as we do not assume @xmath2 to be a monad , it makes no sense to ask e.g.  whether @xmath142 is a monad morphism .",
    "however , composing forgetful logics for multiple behaviour functors does agree with the multiplication structure of @xmath63 . specifically , for @xmath143 and @xmath144 , one may consider the composite @xmath145 .",
    "the corresponding encoding @xmath146 is then equal to : @xmath147 ^ -{\\alpha^\\dagger\\beta^\\dagger } & gfgf\\ar@{=>}[r]^-{g\\epsilon f } & gf . } \\ ] ] encodings @xmath142 will be technically useful in section  [ sec : det - preproc ] .",
    "[ sec : examples ]    we instantiate the setting of section  [ sec : forgetful ] and use forgetful logics to obtain trace semantics for several concrete types of coalgebras : non - deterministic automata , transition systems , alternating automata , weighted tree automata and probabilistic systems . in the first few examples we let",
    "@xmath83 and @xmath84 , and consider @xmath0 or @xmath1-coalgebras , where @xmath148 is the finite powerset functor .",
    "our examples involve the logic @xmath149 defined by : @xmath150 this choice of @xmath60 and @xmath6 has been studied thoroughly in the field of coalgebraic logic , and our @xmath137 is an example of the standard notion of predicate lifting  @xcite corresponding to the so - called diamond modality .",
    "its mate @xmath151 and the corresponding encoding @xmath152 are as follows : @xmath153 here and in all examples below , @xmath26 could be replaced by the full powerset @xmath154 without any problems .",
    "[ ex : nda ] we define a forgetful logic @xmath155 for the functor @xmath156 whose coalgebras are non - deterministic automata , so that the logical semantics is the usual language semantics . to this end , we let :    * @xmath83 , @xmath57 ; * @xmath148 , @xmath157 ; * @xmath137 be as in  , and * @xmath73 be defined by its mate @xmath158 as follows : @xmath159 for any set @xmath160 .",
    "the choice of @xmath22 is motivated by the fact that the initial algebra of @xmath161 is @xmath14 , hence the logical semantics will be a map from states to languages ( elements of @xmath162 ) . now the logical semantics of the logic @xmath155 on an automaton @xmath163 is the map @xmath12 from  , i.e. , the unique map that makes the following diagram commute : @xmath164_f \\ar[rrr]^{{{s^\\flat } } } & & & 2^{a^ * } \\ar[d ] \\\\      { { { \\mathcal{p}}_\\omega}}(a \\times x + 1 ) \\ar[r]_-{{{{\\mathcal{p}}_\\omega}}b { { s^\\flat } } }       & { { { \\mathcal{p}}_\\omega}}(a \\times 2^{a^ * } + 1 ) \\ar[r]_-{{{{\\mathcal{p}}_\\omega}}\\rho^\\flat_{a^ * } }           & { { { \\mathcal{p}}_\\omega}}(2^{a \\times a^ * + 1 } ) \\ar[r]_-{\\alpha^\\flat_{la^ * } }          & 2^{a \\times a^ * + 1 } } \\ ] ] it is easy to calculate ( see appendix  [ sec : details - examples ] ) that for any @xmath165 : @xmath166 for @xmath93 the empty word , and for all @xmath167 and @xmath168 .",
    "note that the logic @xmath73 in the above example is expressive .",
    "one may expect that given a different expressive logic @xmath108 involving the same functors , the forgetful logics @xmath155 and @xmath169 yield the same logical equivalences , but this is not the case .",
    "for instance , define @xmath170 as @xmath171 for all @xmath172 , and @xmath173 .",
    "this logic is expressive as well ( since @xmath174 is componentwise monic ) but in the semantics of the forgetful logic @xmath169 , information on final states is discarded .",
    "the initial algebra of the functor @xmath22 defined by @xmath175 is @xmath176 , the set of natural numbers .",
    "define a logic for @xmath177 by its mate @xmath178 as follows : @xmath179 note that this logic is not expressive . with the above @xmath137 ( equation  [ eq : alpha ] )",
    ", we have a logic @xmath155 , and given any @xmath30 , this yields the following map @xmath180 : @xmath181 thus , @xmath182 is the binary sequence which is @xmath183 at position @xmath184 iff the automaton @xmath185 accepts a word of length @xmath184 , starting in state @xmath32 .",
    "[ ex : log : lts ] in this example we consider the finite traces of labelled transition systems of the form @xmath186 , i.e. , @xmath1-coalgebras where @xmath187 and @xmath188 . to this end , let @xmath189 .",
    "define @xmath190 as follows : @xmath191 then the logical semantics @xmath91 of @xmath192 on a transition system @xmath186 is given by @xmath193 and @xmath194 iff @xmath195 for some @xmath196 .",
    "[ ex : nda - bt ] consider the functor @xmath34 .",
    "let @xmath189 , let @xmath197 be the mate of the logic @xmath73 given in example  [ ex : logic - da ] ; explicitly , it is the obvious isomorphism given by manipulating exponents : @xmath198 the logical semantics @xmath91 of @xmath192 on a coalgebra @xmath199 is the usual language semantics , i.e. , for any @xmath165 we have : @xmath200 non - determinism can be resolved differently : in contrast to  , consider @xmath201 , and the corresponding @xmath202 and @xmath203 , given by @xmath204 similarly to  , @xmath205 is a predicate lifting that corresponds to the so - called box modality .",
    "the semantics @xmath12 induced by the forgetful logic @xmath206 accepts a word if _ all _ paths end in an accepting state : @xmath207 , and @xmath194 iff @xmath195 for all @xmath196 .",
    "we call this the conjunctive semantics . in automata - theoretic terms",
    ", this is the language semantics for ( @xmath208-coalgebras understood as ) co - nondeterministic automata , i.e. , alternating automata with only universal states .",
    "_ some non - examples .",
    "_ it is not clear how to use forgetful logics to give a conjunctive semantics to coalgebras for @xmath209 ; simply using @xmath205 together with @xmath73 from example  [ ex : nda ] does not yield the expected logical semantics .",
    "also , transition systems as @xmath25-coalgebras do not work well ; with @xmath137 as in   the logical semantics of a state with no successors is always empty , while it should contain the empty trace .",
    "[ ex : alt - aut ] consider @xmath39-coalgebras with @xmath85 . we give a forgetful logic by combining @xmath73 , @xmath137 , and @xmath205 from the previous example (",
    "more precisely , the logic is @xmath210 ) ; recall that @xmath137 and @xmath205 resolve the non - determinism by disjunction and conjunction respectively .",
    "the logical semantics on a coalgebra @xmath211 then is the map @xmath12 in the following diagram ( see  ): @xmath212_{\\langle o , f \\rangle } \\ar[rrrr]^{{{s^\\flat } } } & & & & 2^{a^ * } \\ar[d ] \\\\      b { { { \\mathcal{p}}_\\omega}}{{{\\mathcal{p}}_\\omega}}x \\ar[r]_-{b { { { \\mathcal{p}}_\\omega}}{{{\\mathcal{p}}_\\omega}}{{s^\\flat } } }       & b { { { \\mathcal{p}}_\\omega}}{{{\\mathcal{p}}_\\omega}}2^{a^ * } \\ar[r]_-{b { { { \\mathcal{p}}_\\omega}}\\beta^\\flat_{a^ * } }      & b { { { \\mathcal{p}}_\\omega}}2^{a^ * } \\ar[r]_-{b \\alpha^\\flat_{a^ * } }       & b 2^{a^ * } \\ar[r]_-{\\rho^\\flat_{a^ * } }            & 2^{la^ * } } } \\ ] ] spelling out the details for a coalgebra @xmath213 yields , for any @xmath165 : @xmath207 and for any @xmath167 and @xmath168 : @xmath214 iff there is @xmath215 such that @xmath216 for all @xmath217 ( see appendix  [ sec : details - examples ] ) .    [ ex : wta ] in this example we let @xmath83 and @xmath218 for a semiring @xmath9 .",
    "we consider coalgebras for @xmath45 ( section  [ sec : prelim ] ) , where @xmath44 is a polynomial functor corresponding to a signature .",
    "the initial algebra of @xmath44 is carried by the set of finite @xmath44-trees , denoted by @xmath219 .",
    "define @xmath220 by cases on the operators @xmath221 in the signature : @xmath222 where @xmath184 is the arity of @xmath221 .",
    "define @xmath223 by its mate : @xmath224 .",
    "notice that @xmath137 and @xmath73 generalize the logics of example  [ ex : nda ] .",
    "the logical semantics of @xmath155 on a weighted tree automaton @xmath225 is the unique map @xmath226 making the following diagram commute : @xmath227_f \\ar[rrr]^{{{s^\\flat } } } & & & { \\mathbb{s}}^{\\sigma^ * \\emptyset } \\ar[d ] \\\\      { \\mathcal{m}}\\sigma x \\ar[r]_-{{\\mathcal{m}}\\sigma { { s^\\flat } } }       & { \\mathcal{m}}\\sigma { \\mathbb{s}}^{\\sigma^ * \\emptyset } \\ar[r]_-{{\\mathcal{m}}\\rho^\\flat_{\\sigma^*\\emptyset } }           & { \\mathcal{m}}{\\mathbb{s}}^{\\sigma \\sigma^ * \\emptyset } \\ar[r]_-{\\alpha^\\flat_{\\sigma \\sigma^*\\emptyset } }          & { \\mathbb{s}}^{\\sigma \\sigma^ * \\emptyset } } \\ ] ] this means that for any tree @xmath228 and any @xmath165 we have ( see appendix  [ sec : details - examples ] ) : @xmath229 as a special case , we obtain for any _ weighted automaton _ @xmath230 a unique map @xmath231 so that for any @xmath165 , @xmath167 and @xmath168 : @xmath232 and @xmath233 . for @xmath9 the boolean semiring we get the usual semantics of tree automata : @xmath234 iff there are @xmath235 such that @xmath236 and for all @xmath237 .",
    "the @xmath44-algebra @xmath238 ( see  ) is a _",
    "deterministic bottom - up tree automaton_. it corresponds to the top - down automaton @xmath185 , in the sense that the semantics @xmath12 of @xmath185 is the transpose of the unique homomorphism @xmath239 arising by initiality ; the latter is the usual semantics of bottom - up tree automata .",
    "[ ex : probsys ] consider generative probabilistic transition systems  @xcite with explicit termination , modeled as coalgebras @xmath240 , where @xmath241 is the finitely supported probability distribution functor on @xmath242 . one would like to interpret sequences of labels from @xmath27 as _ completed _ traces for such coalgebras , i.e. , ones ending with a transition to the unique element of @xmath243 , and assign probabilities to them .",
    "although probability distributions on a set @xmath10 can be seen as functions from @xmath10 to the interval @xmath244 $ ] , techniques of example  [ ex : wta ] are not directly applicable , since @xmath244 $ ] is not a semiring in the expected sense : addition is not a total operation .",
    "one could replace @xmath244 $ ] with the semiring of nonnegative real numbers and proceed as in example  [ ex : wta ] , but the resulting trace semantics would obscure an important property of probabilistic traces : every trace has probability at most @xmath243 . actually , in the example considered here , an even stronger property holds : for every process , probabilities of all complete traces generated from it form a subprobability distribution .",
    "we wish to design a forgetful logic framework that would make this property apparent .    to this end , put @xmath245 and @xmath246 , the category of partial commutative monoids ( see  @xcite for details ) .",
    "a partial commutative monoid is a set @xmath10 together with a unit @xmath247 and a partial binary addition function @xmath248 on @xmath10 that is commutative and associative whenever defined .",
    "a morphism of such monoids is a function that preserves units and addition , whenever defined .",
    "a paradigmatic example of a partial commutative monoid is the interval @xmath244 $ ] with @xmath249 as unit and addition defined whenever the result is at most @xmath243 .",
    "the obvious forgetful functor @xmath250 has a left adjoint @xmath251 that assigns to every set @xmath10 the partial monoid @xmath252 with @xmath253 as the unit , and addition defined by @xmath254 and undefined otherwise .",
    "the category @xmath255 is symmetric monoidal closed  @xcite with the internal hom - functor @xmath256 with the constant function @xmath257 as the unit , and addition defined by @xmath258 if the addition on the right is defined for every @xmath259 , and @xmath260 undefined otherwise .",
    "the symmetric monoidal closed structure implies that the functor @xmath261 is contravariant self - adjoint for any partial commutative monoid @xmath262 .",
    "define contravariant functors @xmath263       \\qquad \\mbox{and } \\qquad      g\\phi = \\hom_{{\\mathsf{pcm}}}(\\phi,[0,1]).\\ ] ] they form a contravariant adjunction : a composition of the adjunction @xmath264 with the contravariant self - adjunction of @xmath265 $ ] .",
    "in other words , there is a bijection @xmath266 ) \\cong \\hom_{{\\mathsf{pcm}}}(\\phi , x_{\\bot}\\multimap[0,1])\\ ] ] natural in @xmath267 and @xmath268 .",
    "define @xmath269 by its mate @xmath270 : @xmath271 this takes values in @xmath244 $ ] , since @xmath272    @xmath255 has products , defined as expected as cartesian products on carriers .",
    "define a functor @xmath22 on @xmath255 by @xmath273 where @xmath274 , for the set @xmath27 of transition labels , is the @xmath27-fold product of @xmath160 restricted to those tuples that have the unit @xmath275 on all but finitely many components . if @xmath27 is finite then",
    "this is simply the @xmath27-fold product of @xmath160 .",
    "elements of @xmath276 are @xmath27-indexed families of elements of @xmath160 that are @xmath275 almost everywhere , with an additional component that is either @xmath277 or @xmath253 , with addition defined componentwise ( note that @xmath278 is undefined ) .",
    "consider the set @xmath279 of all finite sets of @xmath27-traces , considered as a partial commutative monoid with @xmath280 as the unit , and set union as addition , but defined only for disjoint sets .",
    "this partial monoid carries an @xmath22-algebra structure @xmath281 defined by : @xmath282 for any @xmath283 .",
    "it is easy check that @xmath76 is a bijection and a morphism in @xmath255 .",
    "in particular , @xmath76 takes values in finite sets thanks to the restriction of @xmath274 to tuples that are @xmath280 almost everywhere .",
    "moreover , @xmath76 is an initial @xmath22-algebra . to see this ,",
    "consider any algebra @xmath284 .",
    "the unique algebra map @xmath285 from @xmath76 to @xmath286 is defined by induction on the length of the longest trace in elements of @xmath287 : @xmath288 where @xmath289 , for @xmath290 and @xmath291 .",
    "this is a well - formed inductive definition since each @xmath292 only contains traces strictly shorter than the longest trace in @xmath2 .",
    "it is also a partial monoid morphism , since if @xmath2 and @xmath293 are disjoint sets of traces then @xmath292 and @xmath294 are disjoint for each @xmath295 , and at most one of @xmath2 and @xmath293 contains the empty word @xmath99 .",
    "the fact that @xmath185 is an algebra morphism follows directly from its definition , and its uniqueness follows by routine induction .    a logic @xmath72 , where @xmath296 , can be defined by its mate @xmath297 : @xmath298)+1\\to \\hom_{{\\mathsf{pcm}}}(\\phi^a\\times\\{\\top\\}_{\\bot},[0,1 ] ) \\\\      \\rho^{\\flat}_{\\phi}(a , h)(\\phi_a,\\phi_b,\\ldots , x ) & = h(\\phi_a ) \\qquad \\mbox{for } x\\in\\{\\top,\\bot\\ } \\\\      \\rho^{\\flat}_{\\phi}(\\ast)(\\phi_a,\\phi_b,\\ldots , x ) & =           \\left\\{\\begin{array}{l }              0 \\quad \\mbox{if } x=\\bot \\\\              1 \\quad \\mbox{if } x=\\top          \\end{array}\\right . \\end{aligned}\\ ] ] where @xmath299 is the unique element of @xmath243 . both @xmath137 and @xmath73",
    "are easily seen to be natural , so this completes an instance of the framework of forgetful logics .    as a result , for any probabilistic transition system @xmath240 we obtain a map @xmath300)$ ] that assigns , to every state @xmath301 , a map from finite sets of @xmath27-traces to the interval @xmath244 $ ] that is additive as far as disjoint sets of traces are concerned .",
    "such a map gives ( indeed , is equivalent to ) a subprobability distribution @xmath302 on the set of all @xmath27-traces .",
    "indeed , put @xmath303 ; then @xmath304    note that the partial monoid homomorphism @xmath305)$ ] does _ not _ map traces to any distributions of states .    in  (",
    "7.2 ) , where another coalgebraic approach to generative probabilistic systems was developed , the subprobability distribution monad had to be used instead of @xmath241 .",
    "the reason for that was that even though a state in a generative probabilistic system determines a full probability distribution on successors ( including immediate termination , i.e.  the empty trace , as a degenerate successor ) , the finite complete traces of a state do not form a probability distribution , but only a subprobability distribution , due to possibility of infinite traces . in the forgetful logic approach",
    "the branching type functor @xmath241 is distinguished from the functor @xmath6 used to collect a structure of traces , so the distribution monad can be used . note that although the subdistribution monad is naturally isomorphic to the functor @xmath306 that is present in our behaviour functor , the @xmath307 component here is not a part of the branching structure : it models trace termination and it is very much a part of the trace behaviour structure . in  @xcite , the subdistribution monad is used on top of that , with an additional @xmath307 component necessary to handle global _",
    "non_termination .",
    "the technique developed in this example does not work for _ reactive _ probabilistic transition systems modeled as coalgebras @xmath308\\times ( \\delta x)^a$ ] .",
    "technically , it is not clear how to find a functor @xmath22 on @xmath255 with a natural transformation @xmath72 for @xmath309\\times x^a$ ] , that would model trace semantics as expected .",
    "this is not surprising , as under a standard probabilistic semantics of reactive systems , traces accepted from a fixed state do not form a ( sub)probability distribution .",
    "in most coalgebraic attempts to trace semantics  @xcite , the functor @xmath2 , which models the branching aspect of system behaviour , is assumed to be a monad . the basic definition of a forgetful logic is more relaxed in that it allows an arbitrary functor @xmath2 but one may notice that in all examples in section  [ sec : examples ] , @xmath2 is a monad .    in coalgebraic approaches cited above , the structure of @xmath2 is resolved using monad multiplication @xmath4 .",
    "forgetful logics use transformations @xmath310 with their mates @xmath134 for the same purpose .",
    "if @xmath2 is a monad , it will be useful to assume a few basic axioms analogous to those of monad multiplication :    [ def : action ] let @xmath311 be a monad .",
    "a natural transformation @xmath312 is a _",
    "( @xmath2)-action _ ( on @xmath6 ) if the following diagram commutes : @xmath313_{\\mu",
    "g } \\ar@{=>}[r]^{t\\alpha^\\flat } & tg \\ar@{=>}[d]_-{\\alpha^\\flat } & g \\ar@{=>}[l]_-{\\eta g } \\ar@{=}[dl]\\\\      tg \\ar@{=>}[r]_{\\alpha^\\flat } & g & } \\ ] ] i.e. , if each component of @xmath138 is an eilenberg - moore algebra for @xmath2 .",
    "monad actions on functors are to monads as monoid actions on sets are to monoids .",
    "logics @xmath137 whose mates are monad actions have a characterization in terms of their corresponding encodings @xmath314 defined as in section  [ sec : forgetful ] :    [ lem : monadmap ] for any @xmath143 , the mate @xmath315 is a monad action if and only if @xmath139 is a monad morphism .",
    "this is a special case of  ( * ? ? ?",
    "ii.1.4 ) , but see appendix  [ app : sec5 ] for a self - contained proof .",
    "this means that a forgetful logic for @xmath2 whose mate is a monad action , is equivalent to an encoding of the monad structure of @xmath2 ( which is used for resolving branching in  @xcite ) into the monad @xmath63 .",
    "we shall use this connection in section  [ sec : determinization ] to relate forgetful logics to the determinization constructions of  @xcite .",
    "it is easy to check by hand that in all examples in section  [ sec : examples ] , @xmath316 is an action , but it also follows from the following considerations .    in some well - structured cases , one can search for a suitable @xmath137 by looking at @xmath2-algebras in @xmath51 .",
    "we mention it only briefly and not explain the details , as it will not be directly used in the following .    if @xmath51 has products , then for any object @xmath317 there is a contravariant adjunction as in section  [ sec : contr - adj ] , where : @xmath318 , @xmath319 and @xmath320 , where @xmath321 denotes the @xmath10-fold product of @xmath322 in @xmath51 .",
    "( this adjunction was studied in  @xcite for the purpose of combining distributive laws . ) by the yoneda lemma , natural transformations @xmath133 are in bijective correspondence with algebras @xmath323 .",
    "routine calculation shows that the mate @xmath138 is a @xmath2-action if and only if the corresponding @xmath324 is an eilenberg - moore algebra for @xmath2 .",
    "alternatively , one may assume that @xmath325 is a symmetric monoidal closed category and @xmath326 is the internal hom - functor based on an object @xmath327 .",
    "( this adjunction was studied in  @xcite in the context of coalgebraic modal logic . )",
    "if , additionally , the functor @xmath2 is strong , then every algebra @xmath323 gives rise to @xmath143 , whose components @xmath328 are given by transposing : @xmath329^{\\textrm{strength } } & & t(x\\otimes v^x)\\ar[rr]^-{t(\\textrm{application } ) } & & tv\\ar[r]^g & v } \\ ] ] if @xmath2 is a strong monad and @xmath324 is an eilenberg - moore algebra for @xmath2 then @xmath138 is a @xmath2-action .    in an enriched setting ,",
    "if @xmath52 is enriched over @xmath51 , both these constructions are instances of a more general one based on the existence of suitable powers .    if @xmath56 then both constructions apply ( and coincide ) . in this situation",
    "more can be said  @xcite : the resulting contravariant adjunction can be factored through the category of eilenberg - moore algebras for @xmath2 .",
    "the classical powerset construction turns a non - deterministic automaton into a deterministic one , with states of the former interpreted as singleton states in the latter .",
    "more generally , a determinization procedure of coalgebras involves a change of state space .",
    "we define it as follows .",
    "[ def : det ] let @xmath330 be endofunctors . a @xmath331-_determinization procedure _ of @xmath332-coalgebras consists of a natural transformation @xmath333 , a functor @xmath334 and a lifting of @xmath2 : @xmath335 \\ar[r]^{\\bar{t } } & { \\mathsf{coalg}(k ) } \\ar[d ] \\\\ { \\mathcal{c}}\\ar[r]_t & { \\mathcal{c}}}\\ ] ]    we will mostly focus on cases where @xmath336 or @xmath337 , but in section  [ sec : isomates ] we will consider situations where @xmath2 is not directly related to @xmath332 .",
    "the classical powerset construction is _ correct _ , in the sense that the language semantics of a state @xmath32 in a non - deterministic automaton coincides with the final semantics ( the accepted language ) of the singleton of @xmath32 in the determinized automaton . at the coalgebraic level , we capture trace semantics by a forgetful logic . then , a determinization procedure is correct if logical equivalence on the original system coincides with behavioural equivalence on the determinized system along @xmath338 , formally captured as follows .",
    "[ def : correct ] a @xmath2-determinization procedure @xmath339 of @xmath332-coalgebras is _ correct _ wrt .  a logic for @xmath332 if , for any @xmath332-coalgebra @xmath340 with logical semantics",
    "@xmath12 :    1 .   @xmath12 factors through @xmath341 , for any @xmath342-coalgebra homomorphism @xmath76 from @xmath343 .",
    "there exists a @xmath342-coalgebra homomorphism @xmath76 from @xmath343 and a mono @xmath344 so that @xmath345 .    the first condition states that behavioural equivalence on the determinized system implies logical equivalence on the original system ;",
    "the second condition states the converse .",
    "it is standard to define a lifting @xmath346 of @xmath2 from a natural transformation @xmath347 , as follows : @xmath348 for any @xmath332-coalgebra @xmath340 and coalgebra morphism @xmath76 .",
    "all of the ( liftings in ) determinization constructions considered in this paper arise from such natural transformations .    in  @xcite a more specific kind of determinization for @xmath0-coalgebras",
    "was studied , arising from a natural transformation @xmath349 and a monad @xmath311 .",
    "this construction is an instance of  , by setting @xmath350 and @xmath351 .",
    "we denote the lifting of @xmath2 arising in this way by @xmath352 . spelling out the details , for any @xmath0-coalgebra @xmath340 we have : @xmath353 ^ -{tf } & ttbx \\ar[r]^-{\\mu_{bx } } & tbx \\ar[r]^-{\\kappa_x } & ktx)}.\\ ] ] for examples see , e.g. ,  @xcite and the end of this section .",
    "the same type of natural transformation can be used to determinize @xmath1-coalgebras .",
    "this is again an instance of  , where @xmath354 and @xmath355 .",
    "we denote the lifting of @xmath2 arising in this way by @xmath356 .",
    "spelling out the details , for any @xmath1-coalgebra @xmath340 we have : @xmath357 ^ -{tf } & tbtx \\ar[r]^-{\\kappa_{tx } } & kttx \\ar[r]^-{k\\mu_{x } } & ktx)}.\\ ] ] this is considered in  @xcite for the case where @xmath358 and @xmath113 is a distributive law of monad over functor .    in theorem  [ thm : det - translate ]",
    "below , we give a sufficient condition for the logical semantics on @xmath0 or @xmath1-coalgebras to coincide with a logical semantics on determinized @xmath342-coalgebras , for the determinization constructions @xmath352 and @xmath356 .",
    "the same condition was recently studied in  ( * ? ? ?",
    "* lemma 5.11 ) , where it ( more precisely , its mate ) was proved to hold , under some additional assumptions , if @xmath137 arises from the algebra @xmath359 as described in section  [ sec : monads ] . first , we prove a general result , in the setting of  , which relates the logical semantics of an @xmath332-coalgebra to a logical semantics for the @xmath342-coalgebra obtained by applying the lifting @xmath360 .",
    "[ lm : log - sem - determinize ] assume natural transformations @xmath347 , @xmath361 , @xmath362 and @xmath363 such that @xmath364 is a morphism of logics from @xmath365 to @xmath366 .",
    "let @xmath367 be the logical semantics of @xmath302 on a coalgebra @xmath368 .",
    "then @xmath369 is the logical semantics of @xmath108 on the coalgebra @xmath370 .",
    "consider the following diagram : @xmath371^{ts^\\flat } \\ar[d]_{tf }              &               & tg\\phi \\ar[d]^{tga } \\ar[r]^{\\alpha^\\flat_\\phi }              & g\\phi \\ar[d]^{ga } \\\\          thx \\ar[d]_{\\lambda_x } \\ar[r]^{ths^\\flat }               & thg\\phi \\ar[d]^{\\lambda_{g\\phi } } \\ar[r]^{t\\delta^\\flat_\\phi }              & tgl\\phi \\ar[r]^{\\alpha^\\flat_{l\\phi } }              & gl\\phi \\ar@{=}[d ] \\\\          ktx \\ar[r]_{kts^\\flat }              & ktg\\phi \\ar[r]_{k\\alpha^\\flat_\\phi }              & kg\\phi \\ar[r]_{\\theta^\\flat_\\phi }              & gl\\phi      } \\ ] ] which commutes , clockwise starting from the top left : by definition of the logical semantics @xmath367 , naturality of @xmath138 , the assumption that @xmath364 is a morphism of logics , and naturality of @xmath364 .",
    "commutativity of the outside of the diagram means that @xmath369 is indeed the logical semantics of @xmath108 on @xmath370 .",
    "[ thm : det - translate ] assume :    * a monad @xmath311 ; * a forgetful logic @xmath363 , @xmath87 , such that @xmath138 is a @xmath2-action on @xmath6 ( definition  [ def : action ] ) ; * a natural transformation @xmath349 , and * another logic @xmath372 ,    such that @xmath113 is a morphism of logics from @xmath365 to @xmath155 , i.e. , the following diagram commutes : @xmath373^{t\\rho^\\flat } \\ar@{=>}[d]_{\\kappa g }          & tgl \\ar@{=>}[r]^{\\alpha^\\flat l }           & gl \\ar@{=}[d]\\\\      ktg \\ar@{=>}[r]_{k\\alpha^\\flat } & kg \\ar@{=>}[r]_{\\theta^\\flat }       & gl . } \\ ] ] let @xmath12 be the semantics of @xmath155 on a coalgebra @xmath374 , and let @xmath375 be the semantics of @xmath108 on @xmath376 ( see  )",
    ". then @xmath377 .",
    "the same holds for the determinization procedure @xmath356 ( see  ) for @xmath1-coalgebras and the logic @xmath192 .",
    "we first consider @xmath0-coalgebras .",
    "our aim is to use lemma  [ lm : log - sem - determinize ] , instantiated to @xmath336 , @xmath378 and @xmath379 . to this end",
    ", we must show that @xmath364 is a morphism of logics from @xmath380 to @xmath381 , i.e. , the outside of the following diagram should commute : @xmath382^{tt\\rho^\\flat } \\ar@{=>}[d]_-{\\mu bg }              & ttgl \\ar@{=>}[d]^-{\\mu{gl } } \\ar@{=>}[r]^{t\\alpha^\\flat l }              & tgl \\ar@{=>}[d]^-{\\alpha^\\flat l } \\\\",
    "tbg \\ar@{=>}[d]_{\\kappa g } \\ar@{=>}[r]^{t\\rho^\\flat }               & tgl \\ar@{=>}[r]^{\\alpha^\\flat l }              & gl \\ar@{=}[d ] \\\\          ktg \\ar@{=>}[r]_{k\\alpha^\\flat }               & kg \\ar@{=>}[r]_{\\theta^\\flat }               & gl      } \\ ] ] indeed , the diagram commutes , clockwise starting from the top left : by naturality of @xmath48 , by the assumption that @xmath138 is a @xmath2-action , and by the assumption that @xmath113 is a morphism of logics from @xmath365 to @xmath155 ( in fact , since @xmath138 is a @xmath2-action , @xmath48 is a morphism of logics from @xmath137 to @xmath383 , hence @xmath384 is a morphism from @xmath155 to @xmath381 , and the above diagram is obtained by composing this morphism with @xmath113 ) .",
    "by lemma  [ lm : log - sem - determinize ] , for any @xmath0-coalgebra @xmath340 we obtain @xmath385 where @xmath367 is the logical semantics of @xmath155 on @xmath340 and @xmath386 is the logical semantics of @xmath108 on @xmath387 .",
    "hence @xmath388 where the second equality holds by naturality of @xmath338 , and the third since @xmath138 is a @xmath2-action .    for @xmath1-coalgebras ,",
    "we instantiate lemma  [ lm : log - sem - determinize ] to @xmath337 , @xmath389 and @xmath390 .",
    "we prove that @xmath364 is a morphism of logics : @xmath391^{tb\\alpha^\\flat } \\ar@{=>}[d]_{\\kappa tg }              & tbg\\ar@{=>}[d]^{\\kappa g } \\ar@{=>}[r]^{t\\rho^\\flat }              & tgl \\ar@{=>}[dd]^{\\alpha^\\flat l } \\\\          kttg \\ar@{=>}[d]_{k \\mu g } \\ar@{=>}[r]^{k t \\alpha^\\flat }              & ktg \\ar@{=>}[d]^{k\\alpha^\\flat }              & \\\\          ktg \\ar@{=>}[r]_{k \\alpha^\\flat }              & kg \\ar@{=>}[r]_{\\theta^\\flat }              & gl      } \\ ] ] the diagram commutes , clockwise starting from the top left : by naturality of @xmath113 , the assumption that by @xmath113 is a morphism of logics and by the assumption that @xmath138 is a @xmath2-action ( again , the above diagram amounts to a composition of the logic morphisms @xmath48 and @xmath113 ) . by lemma  [ lm : log - sem - determinize ] , for any @xmath1-coalgebra @xmath340 we obtain @xmath392 where @xmath367 is the logical semantics of @xmath192 on @xmath340 and @xmath386 is the logical semantics of @xmath108 on @xmath393 .",
    "the conclusion of the proof is analogous to the above case of @xmath0-coalgebras .",
    "we apply theorem  [ thm : det - translate ] to obtain a sufficient condition for a determinization construction to be correct with respect to a trace semantics given by a forgetful logic .",
    "the main idea is to choose @xmath108 to be an expressive logic for @xmath342 , so that logical equivalence coincides with behavioural equivalence .",
    "[ cor : correctness ] let @xmath311 , @xmath137 , @xmath73 , @xmath108 and @xmath113 be as in theorem  [ thm : det - translate ] , and suppose that @xmath108 is an expressive logic .",
    "then the determinization procedure @xmath352 of @xmath0-coalgebras is correct with respect to @xmath155 , and the determinization procedure @xmath356 of @xmath1-coalgebras is correct with respect to @xmath192 .",
    "let @xmath360 be either @xmath352 or @xmath356 , let @xmath340 be a @xmath0-coalgebra or a @xmath1-coalgebra respectively , and @xmath12 the semantics of the forgetful logic on @xmath185 .",
    "under the above assumptions , by theorem  [ thm : det - translate ] we have @xmath377 , where @xmath375 is the logical semantics of @xmath108 on @xmath343 . since @xmath375 is a logical semantics it factors through any coalgebra homomorphism , yielding condition ( 1 ) of correctness , and since it is expressive it decomposes as a coalgebra homomorphism followed by a mono , yielding condition ( 2 ) .    to illustrate all this ,",
    "we show that the determinization of weighted automata as given in  @xcite is correct with respect to weighted language equivalence .",
    "( there is no such result for tree automata , as they do not determinize . )",
    "[ ex : wa - correct ] fix a semiring @xmath9 , let @xmath394 and @xmath395 .",
    "consider @xmath396 defined as follows  @xcite : @xmath397 .",
    "this induces a determinization procedure @xmath398 as in  , for weighted automata .",
    "let @xmath155 be the forgetful logic for weighted automata introduced in example  [ ex : wta ] , and recall that the logical semantics on a weighted automaton is the usual notion of acceptance of weighted languages .",
    "we use corollary  [ cor : correctness ] to prove that the determinization procedure @xmath398 is correct with respect to @xmath155 . to this end , consider the logic @xmath399 given by the isomorphism , similar to the logic in example  [ ex : nda - bt ] . since @xmath174 is componentwise injective , @xmath108 is expressive .",
    "moreover , @xmath138 is an action ( see section  [ sec : monads ] ) .",
    "the only remaining condition is commutativity of the diagram in theorem  [ thm : det - translate ] , which is a straightforward calculation .",
    "this proves correctness of the determinization @xmath398 with respect to the semantics of @xmath155 .",
    "[ ex : nda - correct ] in  @xcite it is shown how to determinize non - deterministic automata of the form @xmath208 , where @xmath34 , based on @xmath400 ( note that @xmath358 in this example ) where @xmath401 iff @xmath402 , and @xmath403 for some @xmath404 . in example",
    "[ ex : nda - bt ] we have seen an expressive logic @xmath73 and an @xmath137 so that the logical semantics of @xmath192 yields the usual language semantics .",
    "it is now straightforward to check that the determinization @xmath113 together with the logics @xmath73 , @xmath137 above satisfies the condition of theorem  [ thm : det - translate ] , where @xmath405 . by corollary  [ cor : correctness ]",
    "this shows the expected result that determinization of non - deterministic automata is correct with respect to language semantics .    moreover ,",
    "recall that the logic @xmath206 , where @xmath205 is as defined in example  [ ex : nda - bt ] , yields a conjunctive semantics .",
    "take the natural transformation @xmath406 of the same type as @xmath113 , where @xmath407 iff @xmath408 for every @xmath409 , and @xmath410 . using corollary  [ cor : correctness ]",
    "we can verify that this determinization procedure is correct .",
    "one can also get the finite trace semantics of transition systems ( example  [ ex : nda - bt ] ) by turning them into non - deterministic automata ( then , @xmath3 and @xmath342 are different ) .",
    "[ ex : alt - correct ] alternating automata ( see example  [ ex : alt - aut ] ) can be determinized into non - deterministic automata in a process that preserves the language semantics .",
    "we shall now see how this arises as an application of theorem  [ thm : det - translate ] without a reference to final semantics of coalgebras .",
    "this problem is more subtle than it may look , and our solution from a previous version of this paper  @xcite suffered from a serious mistake .",
    "we therefore present a corrected solution a little more elaborately .",
    "let @xmath34 as before .",
    "we wish to determinize @xmath411-coalgebras where , according to example  [ ex : alt - aut ] , the outer @xmath26 is interpreted disjunctively ( as in nondeterministic automata ) , and the inner @xmath26 is interpreted conjunctively ( as in co - nondeterministic automata ) .",
    "the result should be a nondeterministic automaton , i.e. , a @xmath208-coalgebra with the @xmath26 interpreted disjunctively .",
    "if the original alternating automaton had a carrier @xmath10 , then the nondeterministic automaton should have a carrier @xmath412 , interpreted conjunctively .    to model all this",
    ", we should instantiate theorem  [ thm : det - translate ] so that @xmath413 , the functors @xmath3 and @xmath342 from the theorem are both @xmath414 , the logic @xmath137 from the theorem is instantiated to @xmath205 from example  [ ex : alt - aut ] and the logics @xmath73 and @xmath108 from the theorem are both instantiated to @xmath192 from example  [ ex : alt - aut ] .",
    "we then need to provide an appropriate natural transformation @xmath415 that would model the intended determinization procedure .",
    "it is natural to define it as a composition of two steps : @xmath416 where @xmath417 is defined as at the end of example  [ ex : nda - correct ] . as argued there , this distributes @xmath3 over @xmath26 according to the conjunctive interpretation modeled by the logic @xmath205 .",
    "the question remains how to define @xmath418 so that it distributes the `` conjunctive '' powerset over the `` disjunctive '' one as intended .",
    "one may attempt ( as we did in  @xcite ) : @xmath419 which , given a family of sets @xmath420 , returns all possible sets obtained by choosing a single element from each set in @xmath420 .",
    "unfortunately this is _ not _ a natural transformation .",
    "the following counterexample is due to joost winter : consider @xmath421 and calculate : @xmath422 therefore the naturality square for @xmath423 on @xmath424 does not commute for the argument @xmath425 .",
    "this mistake has occured in the literature before . in  @xcite ,",
    "was claimed to be a distributive law of the powerset monad over itself , and a monad structure on the double ( covariant ) powerset was derived from that claim in the standard way .",
    "the above counterexample applies there , and the structure defined in  @xcite is not , in fact , a monad .",
    "the mistake can be traced back to  @xcite , where the same purported monad structure is defined via a kleisli triple which , in fact , fails to satisfy one of the axioms of kleisli triples .    to avoid these problems , we choose another definition of @xmath423 : given a finite family @xmath420 of finite sets , it returns all sets that :    * are contained in the union of @xmath420 ( and are therefore finite , and there are finitely many of them ) , and * intersect with every set in @xmath420 .",
    "formally : @xmath426 this turns out to be a natural transformation ( see appendix  [ app : sec6 ] ) . as a side remark ,",
    "note that @xmath423 is _ not _ a distributive law of the monad @xmath26 over itself ; it does not even satisfy the unit axioms .",
    "now the composition @xmath427 yields a determinization procedure . to show that the diagram in theorem  [ thm : det - translate ] commutes , a key ingredient is the fact that @xmath423 correctly distributes conjunction over disjunction or , more formally , that the diagram @xmath428 ^ -{{{{\\mathcal{p}}_\\omega}}\\alpha^\\flat}\\ar@{=>}[d]_-{\\chi g } & { { { \\mathcal{p}}_\\omega}}g\\ar@{=>}[rd]^-{\\beta^\\flat } \\\\      { { { \\mathcal{p}}_\\omega}}{{{\\mathcal{p}}_\\omega}}g\\ar@{=>}[r]_{{{{\\mathcal{p}}_\\omega}}\\beta^\\flat } & { { { \\mathcal{p}}_\\omega}}g\\ar@{=>}[r]_{\\alpha^\\flat } & g } } \\ ] ] commutes , where @xmath137 and @xmath205 are as in example  [ ex : alt - aut ] .",
    "( see appendix  [ app : sec6 ] for details . )    by theorem  [ thm : det - translate ] we conclude that for any alternating automaton : @xmath429 where @xmath10 is the set of states , @xmath12 is the language semantics of the alternating automaton as in example  [ ex : alt - aut ] , and @xmath430 is the usual language semantics ( as in example  [ ex : nda - bt ] ) of the non - deterministic automaton obtained by determinization .    the determinization procedure formalized by our @xmath423 ( and therefore @xmath113 ) is slightly different from the standard procedure for transforming alternating automata into nondeterministic ones .",
    "it still returns an automaton where states are sets of states of the original alternating automaton , but the family of successors of each such state is larger than in the standard procedure ( in particular , it is closed under taking set - theoretic unions ) .",
    "this does not change the language semantics ( additional successor states , being supersets of some successor states in the standard nondeterministic automaton , do not accept any additional words ) , but the reachable part of the nondeterministic automaton may be larger than the one obtained by the standard procedure . as a result , although our determinization is correct , it may be less efficient than the standard one .",
    "this is the price we paid to salvage the naturality of @xmath423 .",
    "we do not know how to model precisely the standard transformation of alternating automata into nondeterministic ones in our framework .",
    "corollary  [ cor : correctness ] provides a sufficient condition for a given determinization procedure to be correct with respect to a forgetful logic .",
    "however , in general there is no guarantee that a correct determinization procedure for a given logic exists",
    ". indeed it would be quite surprising if it did : the language semantics of ( weighted ) tree automata ( see example  [ ex : wta ] ) is an example of a forgetful logic , and such automata are well known not to determinize in a classical setting .",
    "in this section we provide a sufficient condition for a correct determinization procedure to exist .",
    "specifically , for an endofunctor @xmath3 , we assume a logic @xmath73 whose mate @xmath431 is a natural isomorphism .",
    "this condition holds , for instance , for @xmath73 in example  [ ex : nda - bt ] and for @xmath108 in example  [ ex : wa - correct ] .",
    "it has been studied before in the context of determinization constructions  @xcite .",
    "its important consequence is that the logical semantics @xmath12 in   from section  [ sec : forgetful ] can be seen as a @xmath3-coalgebra morphism : @xmath432^{bs^{\\flat } } & bg\\phi \\\\      & gl\\phi\\ar[u]_{(\\rho^{\\flat}_{\\phi})^{-1 } } \\\\",
    "x\\ar[uu]^h\\ar[r]_{s^{\\flat } } & g\\phi\\ar[u]_{ga } } } \\ ] ] moreover , as shown in  ( * ? ? ?",
    "* lemma 6 ) ( see also  @xcite ) , the construction mapping @xmath433 ^ -g & a } \\qquad \\text { to } \\qquad \\xymatrix{ga \\ar[r]^-{gg } & gla \\ar[r]^-{(\\rho^{\\flat}_a)^{-1 } } & bga}\\ ] ] defines a functor @xmath434 , which is a contravariant adjoint to @xmath435 ( see   in section  [ sec : forgetful ] ) . as a result ,",
    "@xmath436 maps initial objects to final ones , hence @xmath437 is a final @xmath3-coalgebra .",
    "therefore , @xmath12 is a final coalgebra morphism from @xmath438 .",
    "the setting of a forgetful logic @xmath439 where the mate of @xmath73 is a natural isomorphism gives rise to the following diagrams : @xmath440 ^ -{\\tilde{f } } \\ar[d ]       & { \\mathsf{alg}(l ) } \\ar@/^5px/[r]^{\\hat{g } } \\ar[d ]       & { \\mathsf{coalg}(b ) } \\ar[d ] \\ar@/^5px/[l]^{\\hat{f } } \\\\",
    "{ \\mathcal{c}}\\ar[r]_f      & { \\mathcal{d}}\\ar@/^5px/[r]^g      & { \\mathcal{c}}\\ar@/^5px/[l]^f } \\qquad   \\xymatrix {      { \\mathsf{coalg}(bt ) } \\ar[r]^-{\\tilde{f } ' } \\ar[d ]       & { \\mathsf{alg}(l ) } \\ar@/^5px/[r]^{\\hat{g } } \\ar[d ]       & { \\mathsf{coalg}(b ) } \\ar[d ] \\ar@/^5px/[l]^{\\hat{f } } \\\\",
    "{ \\mathcal{c}}\\ar[r]_f      & { \\mathcal{d}}\\ar@/^5px/[r]^g      & { \\mathcal{c}}\\ar@/^5px/[l]^f } \\end{gathered}\\ ] ] the functor @xmath441 arises from the logic @xmath155 , the functor @xmath442 arises from @xmath192 , the functor @xmath435 arises from @xmath73 and its contravariant adjoint @xmath436 from the fact that @xmath100 is iso . note that we make no assumptions on @xmath137 ; in particular , @xmath138 need not be an action .",
    "the composition @xmath443 is a determinization procedure , turning a coalgebra @xmath374 into a @xmath3-coalgebra with carrier @xmath444 .",
    "explicitly , @xmath445 is @xmath446 ^ -{gff }       & gftbx \\ar[r]^-{g \\alpha_{bx } }      & gfbx \\ar[r]^-{g \\rho_x }      & glfx \\ar[r]^-{(\\rho^\\flat)^{-1}_{fx } }      & bgfx \\ , . } \\ ] ] similarly , the composition @xmath447 is a determinization procedure , mapping a coalgebra @xmath448 to @xmath449 ^ -{gfg }      & gfbtx \\ar[r]^-{g\\rho_{tx } }      & glftx \\ar[r]^-{gl\\alpha_{x } }      & glfx \\ar[r]^-{(\\rho^\\flat)^{-1}_{fx } }      & bgfx \\ , . } \\ ] ] these determinization procedures are correct with respect to the logics @xmath135 and @xmath192 respectively , in the following sense , much stronger than required by definition  [ def : correct ] .",
    "[ thm : detcorr ] for any @xmath0-coalgebra @xmath340 , the logical semantics @xmath12 of @xmath155 on @xmath340 coincides with the final semantics of the @xmath3-coalgebra @xmath445 precomposed with the unit @xmath450 .",
    "the same holds for @xmath1-coalgebras and @xmath192 .",
    "let @xmath340 be a @xmath0-coalgebra ( the case of @xmath1-coalgebras is analogous ) .",
    "the logical semantics @xmath12 is defined by @xmath451 , where @xmath452 is the unique algebra morphism arising by initiality .",
    "hence , we only need to show that @xmath453 is the final semantics of @xmath445 .",
    "to see this , apply @xmath436 to @xmath454 to get a coalgebra morphism @xmath455 but @xmath456 is a final coalgebra , so we are done",
    ".      strictly speaking , the above constructions @xmath443 and @xmath447 are not examples of determinization procedures as understood in  @xcite : the functors @xmath457 and @xmath458 lift @xmath63 rather than @xmath2 , and the liftings do not arise from a natural transformation as described in section  [ sec : determinization ] .",
    "however , they are _ almost _ examples : after an encoding of @xmath0-coalgebras as @xmath459-coalgebras and of @xmath1-coalgebras as @xmath460-coalgebras , they arise from a distributive law @xmath461 .    indeed ,",
    "recall from section  [ sec : forgetful ] that @xmath143 uniquely determines a natural transformation @xmath139 .",
    "furthermore , this induces functors @xmath462 and @xmath463 , by simple composition .",
    "now , define a canonical logic for @xmath63 by @xmath464 ( note that @xmath465 is _ always _ a @xmath63-action on @xmath6 . )",
    "given a logic @xmath73 for @xmath3 this gives rise to forgetful logics @xmath466 and @xmath467 , for @xmath459-coalgebras and @xmath460-coalgebras respectively .",
    "note that these logics do not depend on @xmath137 anymore .",
    "[ lem : preprocessing ] for any @xmath87 and @xmath363 , the natural transformation @xmath468 is a morphism of logics ( with @xmath469 as the translation of syntax ) from @xmath467 to @xmath155 , and @xmath470 is a morphism from @xmath466 to @xmath192 .",
    "it suffices to prove that @xmath142 is a morphism of logics from @xmath93 to @xmath137 .",
    "this , recalling the definition of @xmath142 from section  [ sec : forgetful ] , means that the outside of the following diagram should commute : @xmath471   \\ar@{=>}[d]_{t\\iota g }          & tg \\ar@{=>}[d]^{\\alpha^\\flat } \\\\",
    "tgfg \\ar@{=>}[d]_{\\alpha^\\flat fg }   \\ar@{=>}[ur]_{tg\\epsilon }          & g \\\\",
    "gfg \\ar@{=>}[ur]_{g \\epsilon }           &   } \\ ] ] which follows from naturality of @xmath138 and from  .    as a consequence of lemma  [ lm : logic - morph ] and the above",
    ", we have commuting diagrams @xmath472_{\\bar{f } } \\ar[rr]^{{\\alpha^\\dagger b \\circ - } }           & & { \\mathsf{coalg}(gfb ) } \\ar[dl]^{\\bar{f}_{\\varepsilon } } \\\\      & { \\mathsf{alg}(l ) } & } \\qquad   \\xymatrix@c=0.2 cm {      { \\mathsf{coalg}(bt ) } \\ar[dr]_{\\bar{f } ' } \\ar[rr]^{{b \\alpha^\\dagger \\circ - } }           & & { \\mathsf{coalg}(bgf ) } \\ar[dl]^{\\bar{f}'_{\\varepsilon } } \\\\      & { \\mathsf{alg}(l ) } & } \\end{gathered}\\ ] ] where @xmath473 is the functor defined by @xmath474 as in  , and @xmath475 the functor defined by @xmath466 .",
    "hence , encoding @xmath0-coalgebras as @xmath459-coalgebras does not change their logical semantics .",
    "more precisely , for any @xmath476 , the map from @xmath10 to @xmath477 defined as the logical semantics of @xmath474 on @xmath478 , coincides with semantics of @xmath135 on @xmath185 .",
    "a similar result holds for @xmath1-coalgebras .",
    "thanks to the mate @xmath297 being an isomorphism , the functor @xmath63 has a distributive law over @xmath3 , denoted @xmath479 and defined by : @xmath480^{g\\rho } & glf\\ar@{=>}[r]^-{(\\rho^{\\flat})^{-1}f } & bgf . } \\ ] ]    the same construction is used in  @xcite to prove that a functor lifting to the category of eilenberg - moore algebras for a monad induces a distributive law .",
    "there , the right adjoint @xmath6 is the ( covariant ) forgetful functor ; having",
    "a lifting of @xmath3 then means having a functor @xmath22 with the equality @xmath481 .    using @xmath113",
    "we can apply the determinization construction from  @xcite as described in section  [ sec : determinization ] , putting @xmath482 , and taking the monad on @xmath63 arising from the adjunction .",
    "[ lem:2ndstep ] the determinization procedure @xmath483 defined as in   is correct with respect to @xmath474 .",
    "the determinization procedure @xmath484 is correct with respect to @xmath466 .",
    "we use corollary  [ cor : correctness ] , where we put @xmath485 , @xmath486 defined above , @xmath482 , and @xmath487 .",
    "obviously then @xmath108 is expressive , and it is easy to check that @xmath488 is an action .",
    "the only remaining condition is that @xmath113 is a morphism of logics as in theorem  [ thm : det - translate ] , which is the outer shape of : @xmath489 ^ -{gf\\rho^\\flat}\\ar@{=>}[d]_{g\\rho g } & gfgl\\ar@{=>}[d]^{g\\epsilon l } \\\\",
    "glfg\\ar@{=>}[d]_{(\\rho^\\flat)^{-1}fg}\\ar@{=>}[r]^-{gl\\epsilon } & gl\\ar@{=>}[d]_{(\\rho^{\\flat})^{-1}}\\ar@{=}[rd]^{{\\mathsf{id } } } \\\\",
    "bgfg\\ar@{=>}[r]_{bg\\epsilon } & bg\\ar@{=>}[r]_{\\rho^\\flat } & gl . }",
    "\\ ] ] here , the top square commutes by lemma  [ lem : useful ] and the bottom square by naturality of @xmath490 .",
    "altogether , the following two - step determinization procedures arise : @xmath491 \\ar[r]^-{{\\alpha^\\dagger b \\circ - } } & { \\mathsf{coalg}(gfb ) } \\ar[d ] \\ar[r]^-{(gf)^\\kappa }   & { \\mathsf{coalg}(b ) } \\ar[d]\\\\ { \\mathcal{c}}\\ar[r]^{{\\mathsf{id } } } & { \\mathcal{c}}\\ar[r]^{gf } & { \\mathcal{c } } } \\xymatrix@c=0.65 cm { { \\mathsf{coalg}(bt ) } \\ar[d ] \\ar[r]^-{{b \\alpha^\\dagger \\circ - } } & { \\mathsf{coalg}(bgf ) } \\ar[d ] \\ar[r]^-{(gf)_\\kappa }   & { \\mathsf{coalg}(b ) } \\ar[d]\\\\ { \\mathcal{c}}\\ar[r]^{{\\mathsf{id } } } & { \\mathcal{c}}\\ar[r]^{gf } & { \\mathcal{c}}}\\ ] ] and they are correct with respect to @xmath135 and @xmath192 respectively .",
    "correctness can also be proved without corollary  [ cor : correctness ] , using theorem  [ thm : detcorr ] , since the procedures coincide with the constructions from   and  :    [ lem:2dets ] the following diagrams commute : @xmath492 ^ -{{\\alpha^\\dagger",
    "b \\circ - } } \\ar[d]_-{\\tilde{f } } & { \\mathsf{coalg}(gfb ) } \\ar[d]^-{(gf)^\\kappa } \\\\      { \\mathsf{alg}(l ) } \\ar[r]_-{\\hat{g } } & { \\mathsf{coalg}(b ) } } \\qquad \\xymatrix {      { \\mathsf{coalg}(bt ) } \\ar[r]^-{{b\\alpha^\\dagger \\circ - } } \\ar[d]_-{\\tilde{f } ' } & { \\mathsf{coalg}(bgf ) } \\ar[d]^-{(gf)_\\kappa } \\\\      { \\mathsf{alg}(l ) } \\ar[r]_-{\\hat{g } } & { \\mathsf{coalg}(b)}. } \\ ] ] with @xmath441 and @xmath442 and @xmath436 defined as in  .    by lemma  [",
    "lem : preprocessing ] , @xmath468 and @xmath493 are morphisms of logics , which means that the diagrams in   commute .",
    "hence , we only need to check commutativity of : @xmath494 ^ -{(gf)^\\kappa } \\ar[dl]_{\\bar{f}_{\\varepsilon}}\\\\      { \\mathsf{alg}(l ) } \\ar[r]_-{\\hat{g } } & { \\mathsf{coalg}(b ) } } \\qquad \\xymatrix {      & { \\mathsf{coalg}(bgf ) } \\ar[d]^-{(gf)_\\kappa }   \\ar[dl]_{\\bar{f}'_{\\varepsilon}}\\\\      { \\mathsf{alg}(l ) } \\ar[r]_-{\\hat{g } } & { \\mathsf{coalg}(b)}. } \\ ] ] for the left triangle , notice that @xmath473 maps any @xmath495 to @xmath496 ^ -{\\rho_x }    & fbx \\ar[r]^-{\\epsilon_{fbx } }    & fgfbx \\ar[r]^-{ff }   & fx } \\ ] ] and applying @xmath436 yields @xmath497 ^ -{gff }   & gfgfbx \\ar[r]^-{g\\epsilon_{fbx } }    & gfbx \\ar[r]^-{g\\rho_{x } }    & glfx \\ar[r]^-{(\\rho^\\flat)^{-1}_{fx } }   & bgfx } \\ ] ] which coincides with @xmath498 .",
    "note that @xmath499 is the multiplication of the monad @xmath63 .",
    "for the right triangle , we compute @xmath500 : @xmath496 ^ -{l\\epsilon_{fx } }    & lfgfx \\ar[r]^-{\\rho_{gfx } }    & fbgfx \\ar[r]^-{fg }   & fx } \\ ] ] and apply @xmath436 , yielding : @xmath501 ^ -{gfg }   & gfbgfx \\ar[r]^-{g\\rho_{gfx } }    & glfgfx \\ar[r]^-{gl\\epsilon_{fx } }   & glfx \\ar[r]^-{(\\rho^\\flat)^{-1}_{fx } }   & bgfx . } \\ ] ] further , @xmath502 is : @xmath503 ^ -{gfg }      & gfbgfx \\ar[r]^-{g\\rho_{gfx } }      & glfgfx \\ar[r]^-{(\\rho^\\flat)^{-1}_{fgfx } }      & bgfgfx \\ar[r]^-{bg\\epsilon_{fx } }      & bgfx } \\ ] ] which coincides with   by naturality of @xmath490 .",
    "call a @xmath3-coalgebra _ observable _ if the morphism into a final coalgebra ( assuming it exists ) is mono  @xcite . for @xmath318",
    ", the above canonical determinization procedure can be adapted to construct , for any @xmath0-coalgebra , an observable @xmath3-coalgebra whose final semantics coincides with the logical semantics on the original one",
    ".    indeed , recall that @xmath242 has an ( epi , mono)-factorization system and @xmath22 ( as every endofunctor on @xmath242 ) preserves epimorphisms . from this",
    "it follows that every @xmath22-algebra homomorphism decomposes as a surjective homomorphism followed by an injective one .",
    "given a coalgebra @xmath374 , apply this to decompose the algebra homomorphism @xmath504 as @xmath505 , where @xmath344 and @xmath506 are injective and surjective respectively ; call the @xmath22-algebra in the middle @xmath507 .",
    "recall that @xmath453 is a coalgebra homomorphism into the final coalgebra . in the present situation it decomposes as follows : @xmath508_{gm } \\ar@(ur , ul)[rr]^{gs }      & \\hat{g}(r , r ) \\ar[r]_{ge }       & \\hat{g}(\\phi , a ) } \\ ] ] and recall that @xmath509 is a final coalgebra .",
    "because @xmath6 is a right adjoint , it maps epis to monos , therefore @xmath510 is injective and @xmath511 is observable .",
    "moreover , thanks to theorem  [ thm : detcorr ] we have @xmath512 , hence the final semantics @xmath510 of @xmath511 coincides with the logical semantics on @xmath340 along the mapping @xmath513 .",
    "note that the construction of @xmath511 from @xmath340 is not a determinization procedure itself according to definition  [ def : det ] , as it does not lift any functor on @xmath51 .",
    "the above refers to @xmath0-coalgebras , but as everything else in this section , analogous reasoning works also for @xmath1-coalgebras . for @xmath514 and @xmath85 on @xmath245 , that ( almost ) corresponds to brzozowski s algorithm for minimization of deterministic automata  @xcite . applying @xmath441 to",
    "the given automaton corresponds to reversing transitions and turning final states into initial ones .",
    "epi - mono factorization corresponds to taking the _ reachable _ part of this automaton .",
    "then , applying @xmath436 reverses transitions again , and turns initial states into final ones .",
    "our abstract approach stops here ; the original algorithm concludes by taking the reachable part again , which ensures minimality .    for a more detailed coalgebraic presentation of the full brzozowski minimization algorithm in several concrete examples ,",
    "see  @xcite .",
    "another approach , based on duality theory , is presented in  @xcite .",
    "the main idea there is similar , in the sense that contravariant adjunctions are lifted to adjunctions between categories of coalgebras and algebras .",
    "however , it differs from the above development in that the adjunctions used in  @xcite are assumed to be dual equivalences , and the lifting of the duality is proved concretely for each example , rather than that a general condition is given .",
    "another coalgebraic approach to minimization , based on partition refinement , is in  @xcite .",
    "it is mentioned in the conclusion that part of brzozowski s algorithm appears as an instance of the abstract construction introduced there , but the precise connection remains to be understood .",
    "notice that we only assume the mate of @xmath73 to be iso ; there are no requirements on @xmath137 .",
    "the mate of @xmath73 is iso for the logic from example  [ ex : nda - bt ] .",
    "thus , we can instantiate @xmath137 to obtain observable deterministic automata from non - deterministic automata or even alternating automata ( by taking @xmath515 and , for @xmath137 , the composition of @xmath137 and @xmath205 from example  [ ex : alt - aut ] ) .",
    "the logic @xmath108 from example  [ ex : wa - correct ] is covered as well , so one can treat moore automata and weighted automata . however , the abstract construction of an observable automaton does not necessarily yield a concrete algorithm , as discussed for the case of weighted automata in  @xcite .",
    "10    j.  admek , f.  bonchi , m.  hlsbusch , b.  knig , s.  milius , and a.  silva . a coalgebraic perspective on minimization and determinization . in _ procs .",
    "fossacs 2012 _ , volume 7213 of _ lncs _ , pages 5873 , 2012 .",
    "n.  bezhanishvili , c.  kupke , and p.  panangaden .",
    "minimization via duality . in _ procs .",
    "wollic 2012 _ , volume 7456 of _ lncs _ , pages 191205 , 2012 .",
    "f.  bonchi , m.  m. bonsangue , h.  h. hansen , p.  panangaden , j.  j. m.  m. rutten , and a.  silva .",
    "algebra - coalgebra duality in brzozowski s minimization algorithm .",
    ", 15(1):3 , 2014 .",
    "j.  brzozowski .",
    "canonical regular expressions and minimal state graphs for definite events . , 12:529561 , 1962 .",
    "chen and a.  jung . on a categorical framework for coalgebraic modal logic .",
    ", 308:109128 , 2014 .    c.  crstea .",
    "from branching to linear time , coalgebraically . in _ procs .",
    "fics 2013 _ , volume 126 of _ eptcs _ , pages 1127 , 2013 .    c.  crstea . a coalgebraic approach to linear - time logics . in _ procs .",
    "fossacs 2014 _ , volume 8412 of _ lncs _ , pages 426440 , 2014 .    c.  cirstea . .",
    "in _ procs .",
    "calco 2015 _ , volume  35 of _ leibniz international proceedings in informatics ( lipics ) _ , pages 6685 , 2015 .    c.  crstea and d.  pattinson .",
    "modular construction of modal logics . in _ procs .",
    "concur 2004 _ , volume 3170 of _ lncs _ , pages 258275 , 2004 .",
    "e.  j. dubuc . .",
    "lecture notes in mathematics .",
    "springer , 1970 .",
    "s.  goncharov .",
    "trace semantics via generic observations . in _ procs .",
    "calco 2013 _ , volume 8089 of _ lncs _ , pages 158174 , 2013 .",
    "i.  hasuo , b.  jacobs , and a.  sokolova .",
    "generic trace semantics via coinduction . , 3(4 ) , 2007 .",
    "c.  hermida and b.  jacobs . structural induction and coinduction in a fibrational setting . , 145:107152 , 1997 .",
    "b.  jacobs .",
    "introduction to coalgebra . towards mathematics of states and observations , 2014 . draft .",
    "b.  jacobs and j.  mandemaker .",
    "coreflections in algebraic quantum logic . , 42(7):932958 , 2012 .    b.  jacobs , a.  silva , and a.  sokolova .",
    "trace semantics via determinization .",
    ", 81(5):859879 , 2015 .",
    "b.  jacobs and a.  sokolova .",
    "exemplaric expressivity of modal logics .",
    ", 20(5):10411068 , 2010 .",
    "p.  johnstone .",
    "adjoint lifting theorems for categories of algebras . ,",
    "7:294297 , 1975 .    c.  kissig and a.  kurz .",
    "generic trace logics . , abs/1103.3239 , 2011 .",
    "b.  klin .",
    "coalgebraic modal logic beyond sets .",
    ", 173:177201 , 2007 .",
    "b.  klin and j.  rot .",
    "coalgebraic trace semantics via forgetful logics . in _",
    "fossacs 2015 .",
    "proceedings _ , pages 151166 , 2015 .    c.  kupke and d.  pattinson .",
    "coalgebraic semantics of modal logics : an overview .",
    ", 412(38):50705094 , 2011 .",
    "a.  kurz , s.  milius , d.  pattinson , and l.  schrder .",
    "simplified coalgebraic trace equivalence . in",
    "software , services , and systems - essays dedicated to martin wirsing on the occasion of his retirement from the chair of programming and software engineering _ , pages 7590 , 2015 .",
    "s.  mac lane . , volume  5 .",
    "springer , 1998 .",
    "m.  lenisa , j.  power , and h.  watanabe .",
    "category theory for operational semantics .",
    ", 327(1 - 2):135154 , 2004 .",
    "e.  manes .",
    "monads of sets . , 3:67153 , 2003 .",
    "e.  manes and p.  mulry .",
    "monad compositions i : general constructions and recursive distributive laws . , 18(7):172208 , 2007 .",
    "s.  milius , d.  pattinson , and l.  schrder . . in _ procs",
    "calco 2015 _ , volume  35 of _ leibniz international proceedings in informatics ( lipics ) _ , pages 253269 , 2015 .",
    "d.  pavlovic , m.  mislove , and j.  worrell .",
    "testing semantics : connecting processes and process logics . in _",
    "amast 2006 _ , volume 4019 of _ lncs _ , pages 308322 , 2006 .",
    "j.  power and d.  turi . a coalgebraic foundation for linear time semantics .",
    ", 29:259274 , 1999 .",
    "j.  j. m.  m. rutten .",
    "universal coalgebra : a theory of systems . , 249(1):380 , 2000 .",
    "l.  schrder and d.  pattinson . modular algorithms for heterogeneous modal logics via multi - sorted coalgebra .",
    ", 21(2):235266 , 2011 .",
    "a.  silva , f.  bonchi , m.  m. bonsangue , and j.  j. m.  m. rutten .",
    "generalizing determinization from automata to coalgebras . , 9(1 ) , 2013 .",
    "van glabbeek , s.a .",
    "smolka , and b.  steffen .",
    "reactive , generative , and stratified models of probabilistic processes . , 121(1):59  80 , 1995 .",
    "in this section we expand on some of the examples considered in section  [ sec : examples ] .",
    "[ [ exampleexnda . ] ] example  [ ex : nda ] .",
    "+ + + + + + + + + + + + + + + + +    we spell out the details of the semantics of the logic @xmath155 on an automaton @xmath163 : @xmath516 where @xmath93 is the empty word , and for all @xmath167 and @xmath168 : @xmath517    [ [ exampleexalt - aut . ] ] example  [ ex : alt - aut ] .",
    "+ + + + + + + + + + + + + + + + + + + + +    spelling out @xmath12 yields @xmath207 , and @xmath518    [ [ exampleexwta . ] ] example  [ ex : wta ] .",
    "+ + + + + + + + + + + + + + + + +    in order to understand the semantics @xmath12 of the forgetful logic on a tree automaton , we first compute the composite logic @xmath519 : @xmath520 the next step is to instantiate this to @xmath521 and precompose with @xmath522 : @xmath523 it follows that the diagram   commutes if and only if for all @xmath524 and all @xmath165 : @xmath229 which is the semantics presented in example  [ ex : wta ] .",
    "the map @xmath12 is computed by induction ; this is done by turning a weighted tree automaton @xmath185 into the @xmath44-algebra @xmath525 , which can be viewed as a _ deterministic weighted bottom - up tree automaton_. we spell out the details . given a coalgebra @xmath225 the computed @xmath44-algebra looks as follows : @xmath526 ^ -{\\rho_x }           & { \\mathbb{s}}^{\\sigma x } \\ar[r]^-{\\alpha_{\\sigma x } }           & { \\mathbb{s}}^{{\\mathcal{m}}\\sigma x } \\ar[r]^-{{\\mathbb{s}}^{f } }           & { \\mathbb{s}}^x } \\ ] ] we have @xmath527 and @xmath528 : @xmath529 the algebra is as follows : @xmath530",
    "recall the definitions : @xmath531 first let us assume that @xmath315 is a monad action , and check the axioms of monad morphisms for @xmath142 .",
    "the unit axiom is the outer shape of : @xmath532 ^ -\\iota\\ar@{=>}[d]_\\eta & gf\\ar@{=}[rd]\\ar@{=>}[d]_{\\eta gf } \\\\",
    "t\\ar@{=>}[r]_-{t\\iota } & tgf\\ar@{=>}[r]_{\\alpha^\\flat f } & gf } \\ ] ] where the square commutes by naturality of @xmath338 , and the triangle by a monad action axiom .",
    "the multiplication axiom is the outer shape of : @xmath533 ^ -{tt\\iota}\\ar@{=>}[dd]_\\mu & ttgf\\ar@{=>}[r]^{t\\alpha^\\flat f}\\ar@{=>}[dd]_{\\mu gf } & tgf\\ar@{=>}[r]^-{t\\iota gf}\\ar@{=}[rd ] & tgfgf\\ar@{=>}[r]^-{\\alpha^\\flat fgf}\\ar@{=>}[d]^{tg\\epsilon f } & gfgf\\ar@{=>}[dd]^{g\\epsilon f } \\\\      & & & tgf\\ar@{=>}[rd]^{\\alpha^\\flat f } \\\\",
    "t\\ar@{=>}[r]_-{t\\iota } & tgf\\ar@{=>}[rrr]_{\\alpha^\\flat f } & & & gf } \\ ] ] where everything commutes , from left to right : by naturality of @xmath48 , by a monad action axiom , by   and by naturality of @xmath138 .",
    "now assume that @xmath139 is a monad morphism , and check the axioms of monad actions for @xmath138 .",
    "the unit axiom is the outer shape of : @xmath534_{\\eta g}\\ar@{=>}[d]^{\\iota g}\\ar@{=}[rd ] \\\\",
    "tg\\ar@{=>}[r]_-{\\alpha^\\dagger g } & gfg\\ar@{=>}[r]_-{g\\epsilon } & g } \\ ] ] where the left triangle is the unit axiom of a monad morphism , and the right triangle is  .",
    "the multiplication axiom is the outer shape of : @xmath535 ^ -{t\\alpha^\\dagger g}\\ar@{=>}[dd]_{\\mu g } & tgfg\\ar@{=>}[r]^{tg\\epsilon}\\ar@{=>}[d]_{\\alpha^\\dagger gfg } & tg\\ar@{=>}[d]^{\\alpha^\\dagger g } \\\\ &",
    "gfgfg\\ar@{=>}[r]_-{gfg\\epsilon}\\ar@{=>}[d]_{g\\epsilon fg } & gfg\\ar@{=>}[d]^{g\\epsilon } \\\\",
    "tg\\ar@{=>}[r]_-{\\alpha^\\dagger g } & gfg\\ar@{=>}[r]_{g\\epsilon } & g } \\ ] ] where the leftmost shape is the multiplication axiom of a monad morphism , and the two smaller squares commute by naturality of @xmath142 and @xmath99 .",
    "[ [ exampleexwa - correct . ] ] example  [ ex : wa - correct ] .",
    "+ + + + + + + + + + + + + + + + + + + + + + + +    the condition from theorem  [ thm : det - translate ] is commutativity of the following diagram : @xmath536 ^ -{{\\mathcal{m}}\\rho^\\flat } \\ar@{=>}[d]^{\\kappa_{{\\mathbb{s}}^- } }           & { \\mathcal{m}}({\\mathbb{s}}^{a \\times - + 1 } ) \\ar@{=>}[r]^-{\\alpha^\\flat_{a \\times - + 1 } }           & { \\mathbb{s}}^{a \\times - + 1 } \\ar@{=}[d ] \\\\      { \\mathbb{s}}\\times ( { \\mathcal{m}}{\\mathbb{s}}^-)^a \\ar@{=>}[r]^-{{\\mathsf{id}}\\times ( \\alpha^\\flat)^a }           & { \\mathbb{s}}\\times ( { \\mathbb{s}}^-)^a \\ar@{=>}[r]^-{\\theta^\\flat }           & { \\mathbb{s}}^{a \\times - + 1 } } \\ ] ] indeed , we have @xmath537 and thus @xmath538 which coincides with @xmath539 as computed ( in a more general setting ) in appendix  [ sec : details - examples ] .",
    "we treat the determinization @xmath540 described in the example .",
    "the relevant condition of theorem  [ thm : det - translate ] instantiates to commutativity of : @xmath541 ^ -{{{{\\mathcal{p}}_\\omega}}\\rho^\\flat } \\ar@{=>}[d]^-{\\langle \\tau^o_{2 ^ - } , \\tau^t_{2 ^ - } \\rangle }           & { { { \\mathcal{p}}_\\omega}}(2^{a \\times - + 1 } ) \\ar@{=>}[r]^-{\\beta^\\flat l }           & 2^{a \\times - + 1 } \\ar@{=}[d ] \\\\      2 \\times ( { { { \\mathcal{p}}_\\omega}}(2 ^ -))^a \\ar@{=>}[r]^-{{\\mathsf{id}}\\times ( \\beta^\\flat)^a }           & 2 \\times ( 2 ^ -)^a \\ar@{=>}[r]^-{\\rho^\\flat }          & 2^{a \\times - + 1 } } \\ ] ] we have , for any set @xmath160 : @xmath542 and for any @xmath167 , @xmath543 : @xmath544 which proves commutativity of the diagram .",
    "first , we check that @xmath423 defined by   is a natural transformation . to this end , for any function @xmath424 , and a family @xmath545 , we need to check that @xmath546 for any @xmath547 , calculate : @xmath548 for the second equivalence in  , notice that @xmath549 for any @xmath424 and @xmath550 , since direct images preserve unions .      for the implication from   to  , put @xmath552 then @xmath553 . indeed , for the left - to - right containment , pick any @xmath554 .",
    "then , since @xmath555 , there is some @xmath556 such that @xmath557 .",
    "obviously then @xmath558 , hence @xmath559 and @xmath560 .",
    "the right - to - left containment is equivalent to @xmath561 , which follows directly from the definition of @xmath322 .      for the implication from   to  ,",
    "take a @xmath568 that exists by  , and calculate : @xmath569 furthermore , for any @xmath562 , by   we have @xmath567 . then calculate : @xmath570",
    "we thus conclude that @xmath571 is a natural transformation .",
    "we now prove that the diagram   commutes .",
    "recall that , for any set @xmath10 and any @xmath572 , @xmath573 and @xmath301 : @xmath574 \\alpha^\\flat_{x}(u)(x)={\\mathsf{tt}}&\\iff & \\exists\\phi\\in s.\\ \\phi(x)={\\mathsf{tt}}\\\\[1ex ] \\beta^\\flat_{x}(u)(x)={\\mathsf{tt}}&\\iff & \\forall\\phi\\in s.\\ \\phi(x)={\\mathsf{tt}}\\end{array}\\ ] ] then calculate , for any @xmath572 and @xmath301 : @xmath575 conditions   and   are easily equivalent , therefore   commutes .    finally , the condition of theorem  [ thm : det - translate ] in this case is that the following commutes : @xmath576 ^ -{{{{\\mathcal{p}}_\\omega}}b\\alpha^\\flat } \\ar@{=>}[d]^-{\\tau { { { { \\mathcal{p}}_\\omega}}g } }                   & { { { \\mathcal{p}}_\\omega}}bg \\ar@{=>}[r]^-{{{{\\mathcal{p}}_\\omega}}\\rho^\\flat } \\ar@{=>}[d]^-{\\tau g }                  & { { { \\mathcal{p}}_\\omega}}gl \\ar@{=>}[r]^-{\\beta^\\flat l }                  & gl \\\\              b{{{\\mathcal{p}}_\\omega}}{{{\\mathcal{p}}_\\omega}}g \\ar@{=>}[r]^-{b{{{\\mathcal{p}}_\\omega}}\\alpha^\\flat } \\ar@{=>}[d]^-{b\\chi g }                  & b{{{\\mathcal{p}}_\\omega}}g \\ar@{=>}[r]^-{b\\beta^\\flat }                   & bg \\ar@{=>}[ur]^-{\\rho^\\flat } & \\\\              b{{{\\mathcal{p}}_\\omega}}{{{\\mathcal{p}}_\\omega}}g \\ar@{=>}[r]^-{b{{{\\mathcal{p}}_\\omega}}\\beta^\\flat }                   & b{{{\\mathcal{p}}_\\omega}}g \\ar@{=>}[ru]^-{b\\alpha^\\flat }                  & &                   } \\ ] ] the square commutes by naturality of @xmath138 , and the upper right shape is the diagram for proving correctness of the determinization procedure @xmath112 considered in example  [ ex : nda - correct ] .",
    "the lower shape is   mapped by @xmath3 ."
  ],
  "abstract_text": [
    "<S> we use modal logic as a framework for coalgebraic trace semantics , and show the flexibility of the approach with concrete examples such as the language semantics of weighted , alternating and tree automata , and the trace semantics of generative probabilistic systems . </S>",
    "<S> we provide a sufficient condition under which a logical semantics coincides with the trace semantics obtained via a given determinization construction . </S>",
    "<S> finally , we consider a condition that guarantees the existence of a canonical determinization procedure that is correct with respect to a given logical semantics . </S>",
    "<S> that procedure is closely related to brzozowski s minimization algorithm . </S>"
  ]
}
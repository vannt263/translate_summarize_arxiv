{
  "article_text": [
    "electricity demand in the residential sector can be decomposed into a combination of individual appliances aggregated by individual households .",
    "these appliances are tied together through different activities performed by users throughout a day and each of these activities may involve one or more of these power consuming devices .",
    "these appliances are conventionally managed by each user according to his / her preferences , e.g. one may decide to wash clothes early in the morning before he leaves for work , and washing clothes is an activity or task which involves the use of washing machine , dryer etc .",
    "different users can perform this task at different hours of the day according to their convenience . and many of such acvitives / task are flexible and can be performed at any time during a day . on the other hand , there may be certain activities which can be regarded as essential and which needs to be performed daily at exactly specified time slots e.g. after sunset from 7 pm till mid night one has to turn on the lights . such activities and the devices involved in these activities then contribute towards electricity load which is essential and which has strict scheduling requirements .    in a traditional grid , the dominant setup has been to serve the preferences of the users as the priority need and match electricity supply to the instantaneous demand .",
    "this however requires constant manipulation of electricity production levels . as a consequence power generating plants",
    "suffer large deviations from their steady operating points which impose additional costs to the overall system .",
    "all this is changing as the grid is becoming smart @xcite-@xcite .",
    "a smart grid can help the operator in shaping the demand ( e.g. schedule the washing machine at a later time slot when there is less demand ) so as to reduce the overall societal cost for them , this can be done through the flattening of the demand curve @xcite . to achieve a flatter demand curve",
    ", it can propose incentives ( e.g. discount ) to users to change their preference levels for different activities .",
    "users can then allow the grid to manage and schedule certain appliances to enjoy these benefits at the expense of suffering some level of inconvenience .    in this paper , we attempt to quantify the inconvenience levels , by varying the number of appliances that participate through deviation from their preferred scheduling time slots and also by varying the number of time slots each activity deviates .",
    "we can thus identify a compromise between the grid operator objectives and user convenience levels .",
    "we believe such understanding is beneficial for the grid to design effective incentive to achieve load balancing in a smart grid .",
    "there are some recent studies on this problem . in @xcite authors design incentives and propose scheduling algorithms considering strictly convex functions of costs .",
    "users are given incentives to move to off peak hours and these incentives are proposed using game theoretic analysis .",
    "however they do not consider or quantify the inconvenience levels of the users . in",
    "@xcite authors propose pricing scheme for users in order to achieve a perfectly flat demand curve .",
    "they show that finding an optimum schedule is np - hard problem .",
    "they propose centralized and distributed algorithms depending on the degree of knowledge of the state of the network .",
    "the authors in @xcite propose a strategy to achieve a uniform power consumption over time .",
    "their algorithm schedules the devices in such a way that a target power level is not exceeded in each time slot .",
    "however again the authors do not take into account the inconvenience level of users while designing these algorithms .",
    "in @xcite the authors use convex optimization tools and solve a cooperative scheduling problem in a smart grid .",
    "the authors in @xcite use a water - filling based scheduling algorithm to obtain a flat demand curve .",
    "the proposed algorithm does not require any communication between scheduling nodes .",
    "the authors also study the possible errors in demand forecast and incentives for customer participations .",
    "it should be noted that the objective of all these studies is to achieve flat demand curve for the grid .",
    "however in this paper we study the compromise between the grid objective of flat demand vis - a - vis the user inconvenience levels , as the acceptance from the users is the key to have smart grid to be succeed .",
    "the rest of the paper is organized as follows . in section",
    "ii we describe the load model , our approach and problem formulation .",
    "proposed solution , algorithms and metric for comparing various schedules are described in section iii .",
    "simulation results are presented in section iv while the paper is concluded in section v.",
    "in this paper we consider two types of loads in the grid i.e. essential and flexible .",
    "essential load is due to essential activities and the devices involved in these activities have fixed scheduling needs .",
    "flexible load is due to flexible activities and the devices involved in these activities can have flexible scheduling requirements .",
    "there is a preferred scheduling time slot for these flexible activities and user feels most convenient if these activities are performed according to their preferences .",
    "however we assume a generalized framework that if some activity or task is declared as flexible then it can be scheduled in time slots either before or after the preferred time slot for this activity .",
    "for example , pre - cooling a room is an activity that can be scheduled before the preferred time slot , while cloth washing is an activity that can be scheduled after the preferred time slot .",
    "we understand that there is no activity that can be scheduled both before and after the preferred time slot , but in this study , we just assume a generic load with such flexibility to facilitate the problem formulation .",
    "the level of inconvenience is measured by the deviation of an activity from its specified time slot .",
    "the more an activity is scheduled beyond its specified preferred time slot ( either to the left or to the right of it ) the more inconvenience a user faces . in the rest of the paper ,",
    "the terms , devices , activities and tasks are used interchangeably .",
    "similarly the terms , flexible and shiftable are also used interchangeably .    given a set of tasks and their energy consumptions , we propose two extreme schedules to serve as bounds .",
    "the first schedule is optimal for the grid in terms of load balancing and the second schedule is best for the user in terms of its preference for non - essential tasks :    * * grid convenient ( gc ) schedule * : for the given set of essential and shiftable loads , this represents the best schedule from the perspective of the grid .",
    "this schedule does not care about the user preferences in scheduling essential as well as non - essential tasks .",
    "instead the objective of this schedule is to achieve maximum load balancing across various time slots .",
    "we can obtain this schedule by equally dividing all the load in each time slot . * * user convenient ( uc ) schedule * : this schedule is the best schedule from the customer s perspective .",
    "this is another extreme schedule which does not take into account the load balancing preferences of the grid .",
    "instead it schedules all the non - essential tasks at the most preferred time slots specified by the users .",
    "this schedule is most convenient for the users .    any other schedule for the given set of loads will lie between these two extremes .",
    "for a given set of essential and shiftable loads , the gc schedule is practically impossible to achieve because there is in reality , not much flexibility in shifting the essential loads . since we assume that we can only shift the non - essential loads , we study the region between these two extreme schedules through the following parameters :    * we change the allowable time slot deviation of non - essential devices from their preferred time slots , serving as a proxy to changing the convenience levels of users .",
    "it allows for us to schedule a device within a flexible number of time slots either to the left or to the right of its preferred time slot .",
    "* we vary the number of non - essential devices willing to be flexible . all the devices which declare themselves as non - flexible",
    "will then be treated as essential loads and will start exactly at their preferred time slots .    through this study , results can influence the stakeholders involved in this system .",
    "the grid can define incentives by measuring the deviation of a given schedule from the perfectly flat demand profile while also keeping in view the gc schedule for given load conditions .",
    "similarly a customer can through feedback from its deviation of a given schedule from the uc schedule , readjust its preference conditions .",
    "let @xmath0 denote the set of all essential tasks .",
    "we assume that the electricity consumption data of these essential tasks on an hourly basis are known .",
    "let @xmath1 denote the consumption of electricity by all the essential tasks to be performed during the @xmath2 time slot ( maybe hour or half hour etc ) .",
    "let @xmath3 denote the set of all @xmath4 non - essential tasks .",
    "the electricity consumption of these non - essential tasks is also assumed to be known .",
    "for a non - essential task @xmath5 , let @xmath6 denote its total energy consumption .",
    "let @xmath7 denote the total time required to complete non - essential task @xmath8 .",
    "we allow for non - essential tasks to require several time slots to complete , and once the we decide to carry out this task at time @xmath9 then we can not stop it until it is completed .",
    "let @xmath10 denotes the best operating time for task @xmath8 . since we have to finish all the non - essential tasks within @xmath11 time slots",
    ", therefore we assume that @xmath12 ( to allow task @xmath8 to finish by time @xmath11 ) .",
    "let @xmath13 denote the portion of non - essential load @xmath8 scheduled at time @xmath9 .",
    "similarly , let @xmath14 contain the per time slot load of non - essential device @xmath8 .",
    "it should be noted that if device @xmath8 is schedule in time slot @xmath15 then , @xmath16        the objective of this schedule is to achieve perfect load balancing for the grid .",
    "this schedule re - distributes the essential as well as flexible load equally in all time slots .",
    "let us denote the perfectly flat schedule by @xmath17 .",
    "it can be obtained as follows : @xmath18 once again note that this schedule is not a practical schedule for the given set of essential and shiftable loads .",
    "however this schedule represents the ideal situation for the grid , and merely serve as benchmark purposes .",
    "the objective of this schedule is to carry out all the essential and non - essential tasks at their specified best time slots .",
    "this schedule can be determined by treating the non - essential tasks like essential load at the specified time slots .",
    "e.g. if for task @xmath8 the best time slot is @xmath19 and @xmath20 then , @xmath21 let us denote this schedule by @xmath22 .",
    "we determine @xmath23 and then the total scheduled load during time slot @xmath9 is given as , @xmath24 this is a practical schedule , representing the current status quo and the most convenience for the users .",
    "we can obtain a range of schedules between the above two extreme schedules by changing the number of devices declaring themself as flexible and also by defining the number of time slot deviations they are willing to tolerate .",
    "if all the devices declare them as non - flexible then we will obtain schedule @xmath22 ( uc schedule ) . on the other hand if all the all non essential devices declare them as flexible and are willing to tolerate maximum possible time slot deviation then such a schedule , though not perfectly flat ( due to the presence of essential loads in each time slot ) will be the best schedule for the grid for a given set of loads .",
    "let @xmath25 denote the set of devices which declare themselves as flexible .",
    "similarly let @xmath26 denote the time slot deviation that device @xmath27 is willing to tolerate .",
    "it means that we aim to schedule non - essential task @xmath8 within @xmath26 time slots of its preferred start time @xmath10 .",
    "this deviation can either be to the left or to the right of the preferred time slot .",
    "we assume here that in terms of inconvenience , the scheduling of a device @xmath26 time slots before its preferred time slot is equivalent to the inconvenience caused by scheduling the same device @xmath26 time slots after its preferred time slot .",
    "since @xmath28 $ ] , therefore if e.g. @xmath29 then we can only perform task @xmath8 ahead of @xmath10 and schedule it in interval @xmath30 $ ] . similarly if @xmath31 then we can only perform task @xmath8 before @xmath10 and",
    "schedule it in interval @xmath32 $ ] .",
    "thus any non - essential task @xmath27 willing to tolerate @xmath33-time slot deviation can be scheduled in the interval @xmath34 $ ] where @xmath35 and @xmath36 .",
    "all the non - essential devices @xmath37 have @xmath38 and they have to be scheduled exactly at time slot @xmath10 and completed after @xmath39 time slots .",
    "we then treat all such devices @xmath37 as essential load , determine @xmath40 ( as explained in the description of the uc schedule ) and then update the essential load accordingly i.e. @xmath41 we can now formulate the scheduling problem as follows ( we refer this problem as @xmath42 ) , @xmath43 subject to , @xmath44 @xmath45 \\label{sch1_const2}\\ ] ] eq ( [ sch1_const1 ] ) indicates that the total energy consumed by all the non - essential tasks should be equal to their total required energy . eq ( [ sch1_const2 ] ) says that if non - essential task @xmath27 starts at time @xmath9 then it should be finished at time @xmath46 without interruption .",
    "the start time of flexible devices can lie in the interval @xmath47 $ ] .",
    "we can then discuss some special cases of the above general problem .",
    "if all the devices are flexible then @xmath48 and if all the devices are 100% flexible then @xmath49 and @xmath50 ( this value of @xmath51 will allow non - essential task to finish within @xmath11 time slots ) .",
    "the solution of this * 100% flexible problem * is the best possible practical schedule for the grid and achieves maximum flatness for given set of essential and non - essential tasks .",
    "similarly , if all the devices declare themselves as flexible but allow only @xmath33-time slot deviation ( we assume the same @xmath33 for all the devices ) then we call this special problem as * @xmath33-time slot deviation problem*. if @xmath52 , devices declare them as 100% flexible then we call this special problem as * @xmath53-device flexible problem*. a * 100% flexibile device * can be scheduled at any time @xmath54 $ ] .",
    "in this section we discuss the solution of the above scheduling problems and design practical scheduling algorithms .",
    "the optimal solution of the above problem ( including all the special cases ) in general depends on the sequence or order in which we consider non - essential loads .",
    "we illustrate this fact by following simple example .",
    "+ * example : * consider @xmath55 time slots .",
    "the essential load is given as @xmath56 .",
    "there are two 100% shiftable loads with demands per time slot given as @xmath57 and @xmath58 .",
    "there are two possible permutations , load 1 followed by load 2 or load 2 followed by load 1 . in the first case , the final load per time slot is , \\{4,3,5 } with a peak load of 5 in third time slot . for the second case when load 2 is scheduled before load 1",
    "we obtain two possible schedules , \\{7,3,2 } or \\{2,3,7 } both of which are optimal for this order and give a peak load of 7 in both schedules .",
    "thus , in order to reduce the peak , we should schedule load 1 before scheduling load 2 . therefore the sequence in which we consider non - essential loads can not be ignored .",
    "we now prove that the above problem @xmath42 is np hard problem .",
    "[ np ] the defined problem @xmath42 is np - hard .",
    "we consider the special case of the defined problem , where we restrict that @xmath59 , and @xmath60 .",
    "we then prove that the special case is np - hard by a induction from the multi - processor scheduling problem , which is a well - know np - hard problem in the strong sense .",
    "multi - processor scheduling problem : we are given @xmath61 identical machines in @xmath62 and @xmath63 jobs in @xmath64 .",
    "job @xmath65 has a processing time @xmath66 .",
    "the objective of multi - processor scheduling problem is to assign jobs to the machines so as to minimize the maximum load of the machines .",
    "given an instance of multi - processor scheduling problem , we can construct an instance of the decision version of the above special case of the defined problem in polynomial time as follows .",
    "let there be @xmath67 time slots that can be scheduled for tasks , there be @xmath68 shiftable tasks , and @xmath69 be the power consumed for the @xmath8-th task .",
    "then , the load of the tasks scheduled at time @xmath9 is equal to the load of the jobs assigned at the @xmath9-th machine . in other words ,",
    "the objective of minimizing the maximum load at each time is is to minimize the maximum working load assigned at each machine .",
    "thus , the instance of multi - processor scheduling problem is equivalent to an instance of the special case of the defined load balancing problem .",
    "thus , by induction , the defined load balancing problem is np - hard .",
    "despite the fact that the problems are np hard we can still design an algorithm to find the optimal schedules .",
    "however the complexity of the optimal algorithm is exponential which makes it infeasible when the number of flexible devices is large .",
    "we give the optimal algorithm for problem @xmath42 below .",
    "let @xmath70 hold the total power consumption , required completion time and lower and upper limits of scheduling interval ( calculated based on specified @xmath26-time slot deviations ) for non - essential tasks willing to be flexible .",
    "note that @xmath71 and @xmath72 .",
    "let @xmath73 denote all possible permutations of this set @xmath74 i.e. all possible ways of arranging the shiftable tasks in this set .",
    "the total number of permutations is @xmath75 .",
    "let @xmath76 denote the total load scheduled in time slot @xmath9 .",
    "update essential load according to eq ( [ ess_update ] ) for all @xmath37 .",
    "+ 2 . for all @xmath77 + 3 .",
    "initialize : @xmath78 .",
    "+ 4 . for all @xmath79 do , + 5",
    "for all @xmath47 $ ] + 6 . for @xmath80 + 7 .",
    "@xmath81 + 8 .",
    "end for + 9 .",
    "end for + 10 .",
    "@xmath82 + 11 .",
    "@xmath83 + 12 .",
    "end for + 13 .",
    "end for + 14 .",
    "@xmath84 + 15 .",
    "@xmath85 +   + in the first line we update the essential load if there are some non - essential devices which declare them as non - flexible . for each permutation",
    "@xmath61 task @xmath8 can be scheduled any time between @xmath34 $ ] . if task @xmath8 starts at time",
    "@xmath9 then it will be complete at @xmath86 .",
    "we obtain all the schedules with all possible start times in lines 5 - 9 for task @xmath8 . from all possible schedules we select the one which gives the minimum peak in line 10 and select this best schedule . in line 11",
    "we update the total load and repeat for the next task @xmath8 . finally in line 14",
    "we select the best order @xmath87 in which we should consider the shiftable tasks .",
    "the final schedule is @xmath76 given in line 15 .",
    "this is the optimal algorithm .",
    "however , the complexity of this algorithm is exponential which may not be feasible when @xmath88 .",
    "we discuss a special case of the above problem when all non - essential tasks have the same power consumption @xmath89",
    "i.e. @xmath90 the required number of time slots to complete each task however are different i.e. @xmath91 . in this case",
    "the sequence in which we pick the tasks for scheduling becomes irrelevant .",
    "based on this observation we now develop a low complexity sub - optimal algorithm",
    ". +   + 1 .",
    "initialize : @xmath92 and @xmath93 .",
    "+ 2 . for all @xmath94 do , + 3",
    "for all @xmath47 $ ] + 4 . for @xmath80 + 5",
    "@xmath95 + 6 .",
    "end for + 7 .",
    "end for + 8 .",
    "@xmath82 + 9 .",
    "@xmath96 + 10 .",
    "end for + 11 . for all @xmath8 + 12 . for @xmath97 + 13 .",
    "@xmath98 + 14 .",
    "end for + 15 .",
    "end for    in this algorithm we initially assume that all the shiftable loads have same power consumption @xmath99 per time slot where @xmath99 is taken as the maximum power consumption across all the non - shiftable devices willing to tolerate @xmath26-time slot deviation . in lines 2 - 10 , we arbitrarily pick the tasks one after another and find the best scheduling time @xmath100 for each shiftable task @xmath8 in their scheduling interval @xmath47 $ ] .",
    "once we obtain the schedule then in lines 11 - 15 we restore the loads to their actual power consumption levels .",
    "we can measure the difference between any two schedules @xmath101 and @xmath102 where @xmath103 denotes the load at time slot @xmath9 by measuring their mean square error i.e. @xmath104 let @xmath105 denote any arbitrary schedule . as defined before",
    "let @xmath17 denote the gc schedule while @xmath22 denote the uc schedule . then we define , @xmath106 @xmath107 where @xmath108 measures the deviation of any arbitrary schedule @xmath109 for the given set of load conditions from the gc schedule @xmath17 ; while @xmath110 measures the deviation of any arbitrary schedule @xmath109 from the uc schedule @xmath22 .",
    "the smaller the value of @xmath108 means that schedule is more flat ; while a small value of @xmath110 means that schedule is more close to the uc schedule .",
    "we consider a generalised simulation setup of residential household appliances where electricity consumption is assumed to be constant over the consumption duration and represented in kwh .",
    "we generate essential loads in each time slot as discrete uniform integer random variables , taking values between 1kwh and 5kwh .",
    "each time slot represents one hour . in addtion",
    ", we assume that there are 100 generalized devices which can be shifted .",
    "the total power consumption of each shiftable device is generated as a discrete uniformly distributed random variable taking values between 1kwh and 5kwh .",
    "the total duration of each shiftable task is generated as a discrete uniform random integer variable taking values between 1 and 5 time slots .",
    "we also assume that each shiftable device has a preferred time slot . again",
    "this preferred time slot is generated as a discrete uniform random integer variable .    in fig .",
    "[ fig0:fig ] we compare the optimal algorithm with the sub - optimal algorithm .",
    "we assume that all the non - essential devices are 100% flexible i.e. they can be scheduled at any time @xmath111 $ ] .",
    "for comparison we measure the mean square difference of both the schedules from a perfectly flat schedule ( gc schedule ) .",
    "since the complexity of the optimal algorithm is exponential , we restrict ourself to only 7 non - essential devices .",
    "we can see that although there is a small difference between the performance of both the schedules , the complexity reduction between the two algorithms is significant , and we will use only the sub - optimal algorithm in the following simulations .    )",
    "vs number of 100% shiftable devices ]    in fig .",
    "[ fig1:fig ] and fig .",
    "[ fig2:fig ] we vary the number of devices which are willing to be 100% flexible .",
    "all other devices which are not willing to be flexible are then treated as essential load and their power consumption is added to the essential load at their preferred time slots .",
    "we plot @xmath108 , the deviation of our proposed sub - optimal schedule from the gc schedule in fig .",
    "[ fig1:fig ] .",
    "it is obvious that as more devices become flexible this deviation decreases .",
    "however , we can observe that after 40 devices the value of @xmath108 does not decrease much which means that there is not much gain for the grid if more devices become flexible .",
    "the flatness level achieved by 40 devices is comparable to the flatness level achieved by 100 devices . in fig .",
    "[ fig2:fig ] we plot @xmath110 , the deviation of our proposed sub - optimal algorithm from the uc schedule . as more devices become flexible their scheduling is not performed at their most convenient time slots and thus users suffer more inconvenience .",
    "the level of inconvenience keeps on increasing as more devices become flexible .",
    "when 40 devices are 100% flexible the value of @xmath110 is 517 and the corresponding value of @xmath108 is 206 .",
    "similarly when all the devices are 100% flexible the value of @xmath110 is 1375 and that of @xmath108 is 154 . if we define relative inconvenience level as , @xmath112 and relative flatness level as @xmath113 .",
    "then for 40 devices @xmath114% and @xmath115% while for 100 devices we have @xmath116% and @xmath117% .",
    "thus if a user only allows 40 devices to become 100% flexible he can reduce relative inconviniec level by @xmath118% while the non - flatness will only increase by @xmath119% .",
    "* this results shows that there is a minimum level of customer participation in the smart grid that the grid should aim for that would maximize the gain to the operator while at the same time imposing minimal inconvenience .",
    "based on this observation , the inconvenience to the customer will not be too significant .",
    "although these results may not be representative of the system , but it does indicate a great research opportunity to reduce system wide costs at relatively small individual inconvenience . *    )",
    "vs number of 100% shiftable devices , width=170,height=170 ]    ) vs number of 100% shiftable devices , width=170,height=158 ]    in fig .",
    "[ fig5:fig ] and fig .",
    "[ fig6:fig ] , we obtain various curves by varying the number of flexible devices . in these simulations",
    "we assume that the total number of available flexible devices can be up to 50 .",
    "when the devices declare themselves as flexible we can schedule them according to their described x - time slot deviation levels .",
    "the load of devices declaring them as non - flexible is then added to the essential load .",
    "e.g. if 10 devices declare themselves as flexible then the load of remaining 40 devices is added to the essential load .",
    "therefore the total load in all these curves is same .",
    "as more devices become flexible , we can achieve more flatness as evident in fig .",
    "[ fig5:fig ] .",
    "however the gains in flatness diminish and are not very significant as the number of flexible devices are increased from 30 to 50 . *",
    "again , this could represent large system savings at minimal individual costs .",
    "* similarly the gains in flatness also does not increase much as the x - time slot deviation increases beyond 10 time slots . on the other hand in fig .",
    "[ fig6:fig ] we can see that increasing the number of flexible devices significantly increases the inconvenience levels of users .",
    "when 50 devices are flexible users experience much more inconvenience compared to 30 flexible devices . also increasing x - time slot deviation also increases user inconvenience . * hence , much further research is required to quantify the trade - off between benefit versus the users participation and inconvenience caused . * from these observations , in our test case , we can conclude that significant gains in flatness can be achieved by declaring a small number of devices as flexible and keeping x - time slot deviation up to 10 time slots .",
    "how this translates to larger more representative systems need further examination .    ) vs x - time slot deviation ]    ) vs x - time slot deviation ]",
    "in this paper we study the problem of load balancing in smart grids . we proposed algorithms to obtain schedules by varying the number of flexible devices and inconvenience levels",
    ". then we identify the level of compromise between the grid objective of load balancing and user convenience levels .",
    "we show that by allowing only a small portion of the activities to become flexible , users can contribute significantly towards load balancing due to aggregating effect .",
    "similarly by letting the scheduling of activities deviate just a few hours from their preferred time slots can also significantly impact load balancing for the grid . more practical system and load models",
    "will be used in the future work to quantify these results .",
    "it is also interesting to investigate what kind of incentives that can be provided by the grid to encourage the users to have their load be flexible .",
    "this research is partly supported by sutd - zju / res/02/2011 , international design center , eirp , sse - lums via faculty research startup grant , and fundamental research funds ( no .",
    "2012hgbz0640 ) .",
    "mohsenian - rad , v. w.s .",
    "wong , j. jatskevich , r. schober ,  optimal and autonomous incentive - based energy consumption scheduling algorithm for smart grid , \" in proc .",
    "_ ieee pes conference on innovative smart grid technologies _ , jan",
    ". 2010 .",
    "s. caron and g. kesidis ,  incentive - based energy consumption scheduling algorithms for the smart grid , \" in proc . _ 1st ieee international conference on smart grid communications ( smartgridcomm ) _ , pp .",
    "391396 2010 .",
    "s. huang , j. xiao , j. f. pekny , g. v. reklaitis , and a. l. liu , `` quantifying system - level benefits from distributed solar and energy storage , '' _ journal of energy engineering _ , vol .",
    "138 , issue .",
    "2 , jun 2012 ."
  ],
  "abstract_text": [
    "<S> the purpose of this paper is to study conflicting objectives between the grid operator and consumers in a future smart grid . </S>",
    "<S> traditionally , customers in electricity grids have different demand profiles and it is generally assumed that the grid has to match and satisfy the demand profiles of all its users </S>",
    "<S> . however , for system operators and electricity producers , it is usually most desirable , convenient and cost effective to keep electricity production at a constant rate . the temporal variability of electricity demand forces power generators , especially load following and peaking plants to constantly manipulate electricity production away from a steady operating point . </S>",
    "<S> these deviations from the steady operating point usually impose additional costs to the system . in this work , we assume that the grid may propose certain incentives to customers who are willing to be flexible with their demand profiles which can aid in the allowance of generating plant to operate at a steady state . in this paper </S>",
    "<S> we aim to compare the tradeoffs that may occur between these two stakeholders . from the customers perspectives , adhering to the proposed scheduling scheme </S>",
    "<S> might lead to some inconvenience . </S>",
    "<S> we thus quantify the customers inconvenience versus the deviations from an optimal set by the grid . </S>",
    "<S> finally we try to investigate the trade - off between a grid load balancing objective and the customers preferences . </S>"
  ]
}
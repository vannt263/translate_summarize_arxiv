{
  "article_text": [
    "in the theory of computation , researchers have been thinking about impossible problems , difficult problems , and easy problems in the context of computational complexity @xcite .",
    "one of the major areas of interest has been a special type of problem @xcite , as a problem may be difficult to solve in general , but with the right choice , becomes easy to solve .",
    "there have been a lot of efforts in the computational science community to show whether these special types of hard problems , known as np problems ( or nondeterministic in polynomial time ) , are in fact easy ones , known as p problems ( or deterministic in polynomial time ) , but the answer has remained elusive @xcite .    as stated in the well - known phrase information is physical@xcite , information processing is performed on a physical system .",
    "therefore , computation should be related to the limits and possibilities of underlying laws of physics that govern the physical system @xcite ( also see @xcite ) . moreover , since the known laws of physics are quantum mechanics , the computing device should be a quantum turing machine , rather than a classical turing machine @xcite . in the last few decades , people have indeed witnessed various aspects of quantum advantages that are unparalleled in classical computations .",
    "for instance , bell s inequalities revealed one of the most profound quantum aspects unseen in the classical counterpart @xcite .",
    "the quantum key distribution protocols @xcite have been shown to yield that quantumness can be strange and confusing , yet also beneficial to establishing secret keys . moreover , various quantum algorithms @xcite have been shown to be computationally more efficient compared with previous algorithms that are run on classical computational systems .",
    "therefore , it is natural to ask if such an advantage of quantum weirdness could shed light on other important problems including the p versus np problem @xcite .",
    "np computation is a theoretical model in which computing may proceed in nondeterministic ways , and chooses the acceptable path to reach the output in short time .",
    "it is noted that np computation can also be defined indirectly as a difficult problem that can be verified in polynomial time in a physical computing device which is a verifier approach .",
    "however , we wish to consider np computation in a direct way - a ( nondeterministic ) decider approach - i.e. , this theoretical computing device indeed computes in a nondeterministic way and reaches the acceptable ( i.e. , by the computing entity ) output in polynomial time , as shown in fig .",
    "[ npp ] . on the other hand , the case of deterministic computation in polynomial time , p computation , can be easily seen , since our ordinary computers follow this model of computation .    in this paper , we seek to denote np as a class of nondeterministic and p as a class of deterministic polynomial time physical processes .",
    "that is , we will follow the logic of considering computation as a physical process .",
    "in particular , we review a physical phenomenon of np that has existed as a theoretical computing model and discuss this particular self - reference physical process can not be computed by any computational devices ( i.e. , classical or quantum ) .",
    "it is noted that self - referencing has been one of the most effective tools in proving a number of important theorems in logic .",
    "this paper is organized as follows . in the second section ,",
    "we review turing machines , construct a particular nondeterministic computational model , and discuss deterministic computations that will be useful later . in the third section ,",
    "we review a physical version of the computation and discuss the nondeterministic polynomial time physical process that can not be computed by any deterministic computations .",
    "we conclude with brief remarks .",
    "in @xcite , it is discussed that computation could be defined as something that may be performed on a certain type of machine , later to be known as turing machines ( tm ) . in general , tms are defined with 5-tuple @xmath0 , where @xmath1 corresponds to a set of states , @xmath2 , an input alphabet , @xmath3 , a transition function , @xmath4 , an initial state , and @xmath5 , final states .",
    "a nondeterministic tm ( ntm ) corresponds to a tm where given an input , the output may be more than one .",
    "let us consider one particular ntm that will be useful later .",
    "suppose in this particular ntm , for a given input , @xmath6 , the output may be @xmath7 or @xmath8 where @xmath9 .",
    "that is , @xmath10 where @xmath11 and @xmath12 in 5-tuple of tm . in order to be more specific ,",
    "we wish to define the transition function @xmath3 of ntm , i.e. @xmath13 , such that , @xmath14 as defined in ntm , @xmath15 and @xmath16 are applied nondeterministic way so that @xmath6 yields either @xmath7 or @xmath8 , as defined in ( [ ntmtransition ] ) .    deterministic turing machines ( dtm )",
    "may be considered with the notion of tm 5-tuple discussed above . unlike ntms",
    ", the transition does not yield multiple processes . therefore ,",
    "if we follow the ntm s definition of transition functions , we should consider that , in dtm , the computation proceeds equally under @xmath15 and @xmath16 .",
    "this means that any dtm must have a transition rule where @xmath15 and @xmath16 yield the same computation , if we assume @xmath15 and @xmath16 are both valid transition functions .    it should be noted that np is a theoretical concept of computation that is different from probabilistic computation .",
    "the np computation is nondeterministic and may have multiple computational paths , given an input compared to the deterministic models .",
    "however , unlike the probabilistic model , which simply yields probability distribution for each output , the np computation chooses the path for the output . in the next section",
    ", we will consider a physical example based on the ntm considered above , where the nondeterministic transitions correspond to the path choices , rather than probability distribution to the output .",
    "in quantum turing machines , or quantum computation @xcite , the classical states are replaced by quantum states and the transition functions correspond to unitary operations . in particular , there are two possible ways to perform computations . the first way consists of applying unitary transition functions to the states , while the second method involves applying the elementary gates to an observable . in both cases , the result would be the same .",
    "the first method is known as the schrdinger scheme , while the latter is known as the heisenberg scheme , named after the inventors of each method about a century ago .",
    "quantum computation can be performed either by the first method @xcite or the second method @xcite .",
    "for example , an analogy can be made to the classical case , such that , when it is the tape that moves in the classical tm , it is like the schrdinger picture , and when the head that reads the tape moves to the opposite direction , it corresponds to the heisenberg picture ( see fig . [ turing ] ) .",
    "it can be easily seen that in both cases , the readout would be the same .",
    "we now wish to consider one particular ntm that we defined previously in the quantum language . in the ntm in ( [ ntmtransition ] )",
    ", we discussed that this particular machine has usual 5-tuple which can be made analogous with quantum computation .",
    "however , we also wish to define the transition function @xmath3 as follows : the @xmath15 transition function is identified with the schrdinger operation and @xmath16 transition function is identified with the heisenberg operation .",
    "these identifications are appropriate since both operations are valid as transition functions in quantum computation . on the other hand , dtm",
    "may now be defined with the case where the usual deterministic transition operations including @xmath15 and @xmath16 yield the same computational process .    to consider physical processes corresponding to ntm and dtm discussed above",
    ", we now briefly outline the result obtained in @xcite .",
    "let us assume the qubit , a unit vector in bloch sphere notation , is initially pointing at @xmath17-direction , @xmath18 , and also note the corresponding observable as @xmath19 . a unitary transformation on the system vector @xmath20",
    "is then considered with a rotation about @xmath21-axis by @xmath22 , that is , @xmath23 . the unitary operation @xmath23 transforms the input as @xmath24 , that is , the operation under the transition function @xmath15 . with @xmath16",
    ", @xmath25 transforms the vector representing the observable into @xmath26 .",
    "it can be checked that the expectation value of @xmath27 for @xmath16 is equal to the expectation value under @xmath15 , that is , @xmath28 .",
    "therefore , in the first case , both transition functions yield identical results .",
    "we now wish to employ the technique of self - referencing ; that is , when the input state to be transformed is the coordinate vector itself , i.e. , @xmath29 .",
    "since the coordinate vector is also a vector , it is certainly possible for the vector to be a system vector to be transformed . with @xmath15 ,",
    "the evolution is as follows : @xmath30 moreover , quantum theory provides a second approach where it is the coordinate vector that is rotated counter - clockwise .",
    "therefore , the same vector is transformed as @xmath31 it is noted that @xmath32 unless @xmath33 where @xmath34 is an integer .",
    "we may identify @xmath35 with the initial state @xmath6 of ntm and @xmath7 and @xmath8 in ( [ delta1 ] ) and ( [ delta2 ] ) with @xmath36 and @xmath37 then the above case corresponds to a nondeterministic computation as in ( [ ntmtransition ] ) .",
    "let us discuss to what physical processes the above description corresponds . while the first case , i.e. , where the input state is @xmath20 , is a common description of a single qubit operation , the second case is a special case of the first one , i.e. , when the input is the vector representing a coordinate , @xmath29 .",
    "the physical phenomena description of these two cases can be stated as follows : +   + * ( p1 ) * _ an observer observes the unitary evolution of @xmath20 with respect to @xmath35_. +   + * ( p2 ) * _ an observer observes the unitary evolution of @xmath35 with respect to @xmath35_. +   + it is noted that the physical process * ( p1 ) * is perfectly and sufficiently computed with a quantum computer , with input @xmath20 and the coordinate vector , or reference frame , @xmath35 as we described above where @xmath15 and @xmath16 yield the same outcome in a deterministic way .",
    "however , is * ( p2 ) * a physical process , as well ?",
    "it is certainly possible for the observer to choose @xmath36 or @xmath37 when there is no qubit to measure .",
    "this is a unique observation because the experience of choosing reference frames without surroundings is not seen in classical physics .",
    "this peculiar self - reference physical phenomenon corresponds to * ( p2)*.    therefore , the physical process of * ( p2 ) * corresponds to a nondeterministic computation as in ( [ ntmtransition ] ) . in particular , it is noted that the transition of @xmath35 into @xmath36 and @xmath37 under two transition operations , i.e. , ( [ path1 ] ) and ( [ path2 ] ) , respectively , corresponds to the decisions or choices being made by the observer in * ( p2)*. moreover , since the operations from the initial into final states is just a single rotation operation , this physical process certainly belongs to the category of the np .",
    "as discussed , any dtm should involve both @xmath15 and @xmath16 as valid transition operations . in the case of quantum computation",
    ", deterministic computation should be equivalent under both the schrdinger and the heisenberg pictures .",
    "the single - operation nondeterministic physical process * ( p2 ) * can not be computed by any quantum computer that always yields the same outcome under both schemes @xcite . it is noted that dtm can not compute either path of ( [ path1 ] ) or ( [ path2 ] ) .",
    "can classical tm compute the np proposed above ?",
    "the answer is no .",
    "the nondeterministic physical process discussed above is a quantum phenomenon that can not be observed in the classical computational models .",
    "it is clear that in the classical tm , as shown in fig .",
    "[ turing ] , there is no classical physical process , i.e. , where the head and the tape movements yield two different results .",
    "therefore , * ( p2 ) * belongs to np , a class of nondeterministic polynomial - time physical processes , but not in p , a class of deterministic polynomial time physical processes .",
    "as previously noted , np is also considered , indirectly , to be a polynomial time verifiable computation rather than the nondeterministic decider we considered above .",
    "based on this verifier description of np , it seems that the physical process described above can be verified by just two computational steps of dtm ; however , this does not work .",
    "for instance , if we consider np in * ( p2 ) * indirectly , and based on our identification of computation as a physical process , while it is difficult to know which choice is the physical path , but it is easy to verify that the path is indeed the physical process when given the choice .",
    "however , as discussed above , there are not any deterministic machines that can compute paths ( [ path1 ] ) or ( [ path2 ] ) ; therefore , the indirect np argument of hard to solve but easy to verify does not work in this case .",
    "in this paper , we have reviewed a physical phenomenon * ( p2 ) * that corresponds to np computation .",
    "that is , when the reference frame itself is also being observed , this unique phenomenon corresponds to the case of np computation where two valid transition functions yield two different path choices made by the observer . as argued ,",
    "this unique physical version of np is not present in ordinary physical processes - in this case , the deterministic computational model where the two transition functions always yield the same outcome .",
    "it is also interesting to note that even the extremely simple physical process of nondeterministic polynomial time in quantum physics , can not be computed by any deterministic computations .",
    "similar to the quantum algorithms , and quantum key distributions , quantum weirdness again yields another advantageous effect that is unseen in the classical computation system in the case of the p versus np problem .",
    "bennett and g. brassard , quantum cryptography : public key distribution and coin tossing , proceedings of ieee international conference on computers , systems and signal processing , bangalore , india , december , 175 ( 1984 ) .",
    "p. shor , algorithms for quantum computation : discrete logarithms and factoring , in proceedings of the 35th annual symposium on the foundations of computer science , edited by s. goldwasser ( ieee computer society , los alamitos , ca ) , p. 124 . ;",
    "arxiv : quant - ph/9508027 ."
  ],
  "abstract_text": [
    "<S> motivated by the fact that information is encoded and processed by physical systems , the p versus np problem is examined in terms of physical processes . in particular , we consider p as a class of deterministic , and np as nondeterministic , polynomial - time physical processes . based on these identifications , we review a self - reference physical process in quantum theory , which belongs to np but can not be contained in p. </S>"
  ]
}
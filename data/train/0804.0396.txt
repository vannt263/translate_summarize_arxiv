{
  "article_text": [
    "we are given a network modeled by a directed or undirected graph @xmath5 with nonnegative cost @xmath6 associated with every edge @xmath7 . a set of feasible solutions @xmath8 consists of some subsets of the edges of @xmath9 .",
    "it may contain , for instance , all @xmath10 paths , spanning trees , @xmath10 cuts or matchings in @xmath9 . in a classical _ deterministic network problem _ @xmath11 , i.e. the problem in which the costs @xmath6 are precisely given , we wish to find a feasible solution @xmath12 that minimizes the total cost , namely the value of @xmath13 . in this paper",
    "we assume that @xmath11 is polynomially solvable . a comprehensive review of various polynomially solvable deterministic network problems  @xmath11 can be found in  @xcite .    in practice",
    ", the costs @xmath6 in the objective may be uncertain . in",
    "_ robust approach _",
    "@xcite the uncertainty is modeled by specifying a set @xmath14 that contains all possible realizations of the edge costs .",
    "every particular realization @xmath15 is called a _ scenario _ and the value of @xmath16 denotes the cost of edge @xmath17 under scenario  @xmath18 .",
    "there are two ways of describing the set  @xmath14 . in the _ interval scenario case _",
    ", the value of every edge cost may fall within a given closed interval and  @xmath14 is the cartesian product of all the uncertainty intervals . in the _ discrete scenario case _",
    ", which is considered in this paper , the set of scenarios is defined by explicitly listing all scenarios .",
    "so , @xmath19 is finite and contains exactly @xmath4 scenarios .",
    "the cost of solution @xmath20 under scenario @xmath21 is @xmath22 .",
    "we will denote by @xmath23 the cost of an optimal solution under  @xmath18 . in the _ minmax _ version of problem  @xmath11",
    ", we seek a solution that minimizes the worst case objective value over all scenarios , that is @xmath24 in the _ minmax regret _ version of problem @xmath11 , we wish to find a solution that minimizes the _ maximal regret _",
    ", that is @xmath25 the motivation of the minmax ( regret ) approach and a deeper discussion on the two robust criteria can be found in  @xcite .",
    "unfortunately , under the discrete scenario case , the minmax ( regret ) versions of basic network problems such as shortest path , minimum spanning tree , minimum assignment and minimum s - t cut turned out to be np - hard even if  @xmath14 contains only  2 scenarios  @xcite . furthermore , if the number of scenarios is unbounded ( it is a part of the input ) , then minmax ( regret ) shortest path is strongly np - hard and not approximable within  @xmath26 and minmax ( regret ) minimum spanning tree is strongly np - hard and not approximable within  @xmath27 for any @xmath1 if p@xmath28np  @xcite . for the interval scenario case ,",
    "if @xmath11 is polynomially solvable , then minmax  @xmath11 is polynomially solvable as well . on the other hand , the minmax regret versions of shortest path ,",
    "minimum spanning tree , minimum assignment and minimum s - t cut are strongly np - hard  @xcite .",
    "it is worth pointing out that there are some interesting differences between the discrete and interval scenario representations . in",
    "@xcite a minmax regret problem has been described , which is polynomially solvable in the interval case and np - hard for two explicitly given scenarios . on the other hand ,",
    "the minmax regret linear programming problem is polynomially solvable in the discrete scenario case and becomes strongly np - hard in the interval one  @xcite .",
    "consider again the discrete scenario case .",
    "if problem  @xmath11 is polynomially solvable and the edge costs under all scenarios are nonnegative , then both minmax  @xmath11 and minmax regret  @xmath11 are approximable within @xmath4  @xcite .",
    "a  generic @xmath4-approximation algorithm proposed in  @xcite simply outputs an optimal solution to problem  @xmath11 under costs @xmath29 for all @xmath7 . in consequence ,",
    "the problems are approximable within a constant if the number of scenarios @xmath4 is assumed to be bounded ( @xmath4  is bounded by a constant ) .",
    "however , up to now the existence of an approximation algorithm with a constant performance ratio for the unbounded case has been an open question . in this paper",
    "we address this question and show that the minmax ( regret ) versions of shortest path , minimum assignment and minimum s - t cut are not approximable within @xmath0 for any @xmath1 unless np @xmath2 dtime@xmath3 . here and",
    "subsequently @xmath30 denotes the length of the input . the last inclusion is widely believed to be untrue .",
    "we also show that minmax ( regret ) minimum spanning tree is not approximable within @xmath26 for any @xmath1 unless @xmath31 .",
    "moreover , all the negative results remain true even for a class of graphs with a very simple structure .",
    "we can thus conclude that the discrete scenario representation of uncertainty leads to problems that are more complex to solve than the interval one .",
    "recall that for the interval scenario case , if  @xmath11 is polynomially solvable , then minmax regret  @xmath11 is approximable within  2  @xcite .",
    "in this section , we present the main results of this paper .",
    "namely , we give a negative answer to the question about the existence of approximation algorithms with a constant performance ratio for the minmax ( regret ) versions of shortest path , minimum assignment and minimum s - t cut , when the number of scenarios @xmath4 is unbounded .",
    "we increase the gaps obtained in  @xcite and prove that the problems of interest are hard to approximate within a ratio of @xmath0 for any @xmath1 .",
    "we first consider the minmax ( regret ) versions of shortest path . in this problem set @xmath8 consists of all paths between two distinguished nodes @xmath32 and @xmath33 of  @xmath9 .",
    "[ thm1 ] the minmax ( regret ) shortest path problem is not approximable within @xmath0 for any @xmath1 , unless np @xmath2 dtime@xmath3 even for edge series - parallel directed or undirected graphs .    consider the 3-sat problem , in which we are given a set @xmath34 of boolean variables and a collection @xmath35 of clauses , where every clause in @xmath36 has exactly three distinct literals .",
    "we ask if there is an assignment to @xmath37 that satisfies all clauses in @xmath36 .",
    "this problem is known to be strongly np - complete  @xcite .",
    "given an instance of 3-sat , we construct the corresponding instance of minmax shortest path as follows : we associate with each clause @xmath38 a digraph @xmath39 composed of  5 nodes : @xmath40 and 6 arcs : the arcs @xmath41 , @xmath42 , @xmath43 correspond to literals in @xmath44 ( _ literal arcs _ ) , the arcs @xmath45 , @xmath46 , @xmath47 have costs equal to  0 under every scenario ( _ dummy arcs _ ) ; in order to construct digraph @xmath9 , we connect all digraphs @xmath48 by dummy arcs @xmath49 for @xmath50 ; we finish the construction of @xmath9 by setting @xmath51 and @xmath52 .",
    "we now form scenario set @xmath14 as follows . for every pair of arcs of @xmath9 , @xmath53 and @xmath54 , that correspond to contradictory literals @xmath55 and @xmath56 , i.e. @xmath57 , we create scenario @xmath18 such that under this scenario the costs of the arcs @xmath53 and @xmath54 are set to 1 and the costs of all the remaining arcs are set to  0 .",
    "an example of the reduction is shown in figure  [ fig2 ] .",
    "notice that the resulting graph @xmath9 has a simple series - parallel topology ( see for instance  @xcite for a description of this class of graphs ) .",
    "it is easily verified that if the answer to 3-sat is ` yes ' , then there is a path @xmath58 in @xmath9 that does not use arcs corresponding to contradictory literals .",
    "so , @xmath59 .",
    "on the other hand , if the answer is ` no ' , then all paths in @xmath9 must use at least two arcs corresponding to contradictory literals and @xmath60 .",
    "this yields a gap of  2 and the minmax shortest path problem is not approximable within  @xmath26 for any @xmath1 unless p = np .",
    "we now show that the gap of  2 can be increased by applying an iterative construction that gradually increases the gap .",
    "a similar technique was applied to the problem of minimizing the number of unsatisfied linear equations  @xcite and to the problem of minimizing the number of nonzero variables in linear systems  @xcite .",
    "let us transform the resulting graph @xmath5 into @xmath61 by replacing every arc in @xmath9 by the whole graph @xmath9 . we now associate scenario set @xmath62 with @xmath61 as follows .",
    "initially , @xmath14 has @xmath4 scenarios . for every scenario @xmath21 in graph @xmath9",
    ", we create @xmath63 scenarios so that two values of  1 in @xmath18 are replaced by all pairs of scenarios @xmath64 and @xmath65 , @xmath66 . in other words , two values of  1 in @xmath18",
    "are replaced by two matrices @xmath67 and @xmath68 of the size @xmath69 , respectively , where the columns of matrix @xmath70 are the cartesian product @xmath71 .",
    "furthermore , every value of  0 in @xmath18 is replaced by matrix @xmath72 of the size @xmath69 with all elements equal to zero .",
    "the resulting instance is graph @xmath61 with @xmath73 edges and @xmath74 scenarios .",
    "a sample construction of @xmath62 is shown in figure  [ fig3 ] .",
    "now , if the answer to 3-sat is ` yes ' , then there is a path @xmath58 in graph @xmath61 such that @xmath75 and @xmath76 otherwise .",
    "we thus get a gap of  4 .    [ cols=\"^,^,^,^,^,^,^\",options=\"header \" , ]     we can now repeat the construction to obtain an instance with a gap of  8 .",
    "namely , we construct @xmath77 by replacing every arc in graph @xmath9 by the whole graph @xmath61",
    ". then we form scenario set @xmath78 in the following way . for every scenario @xmath21 in graph @xmath9",
    ", we create @xmath79 scenarios such that two values of  1 in @xmath18 are replaced by two matrices @xmath80 and @xmath81 of the size @xmath82 , respectively , where all columns of matrix @xmath83 are the cartesian product @xmath84 , and every value of  0 in @xmath18 is replaced by matrix @xmath85 of the size @xmath82 with all elements equal to zero ( see figure  [ fig3 ] ) . by repeating the above construction @xmath33 times , we get graph @xmath86 with @xmath87 edges together with scenario set @xmath88 containing @xmath89 scenarios that yield a total gap of @xmath90",
    ". let @xmath91 for some fixed @xmath92 , where @xmath30 is the number of variables in the instance of 3-sat .",
    "now graph @xmath86 has @xmath93 edges and @xmath94 scenarios .",
    "let @xmath95 .",
    "since @xmath96 and @xmath4 are bounded by a polynomial in @xmath30 , graph @xmath86 together with scenario set @xmath88 can be constructed in @xmath97 time .",
    "the resulting instance of minmax shortest path has a gap of @xmath98 .",
    "since @xmath95 and @xmath99 for some constant @xmath100 , we get @xmath101 .",
    "so , @xmath102 and the gap is @xmath103 .",
    "assume , on the contrary , that a polynomial time algorithm approximates the minmax shortest path problem within a factor @xmath0 for any @xmath104 .",
    "applying this algorithm to the resulting graph @xmath86 with scenario set @xmath88 containing @xmath105 scenarios , we could decide the 3-sat problem in @xmath97 time .",
    "but this would imply np @xmath2 dtime@xmath3 , a contradiction .    in order to prove the result for minmax regret shortest path , we use exactly the same graph @xmath86 with scenario set @xmath88 .",
    "a proof goes without any modifications .",
    "it follows from the fact that under every scenario @xmath106 there is a path @xmath107 in @xmath86 such that @xmath108 , and thus @xmath109 . in consequence",
    "the minmax and minmax regret criteria lead to optimal solutions with the same total costs in the resulting instances . furthermore ,",
    "if arc directions are ignored , then the results hold for the undirected graphs as well .",
    "it is worth pointing out that theorem  [ thm1 ] holds for the graphs having a very simple series - parallel structure .",
    "the class of series - parallel graphs is a subclass of various classes of graphs and its description can be found for instance in  @xcite .",
    "recall also that in the interval scenario case the minmax regret shortest path problem for edge series - parallel graphs admits a fully polynomial time approximation scheme  @xcite .    in the minimum assignment problem",
    "we assume that @xmath9 is a bipartite graph and @xmath8 consists of all perfect matchings in @xmath9 .",
    "the following corollary is a consequence of theorem  [ thm1 ] :    the minmax ( regret ) minimum assignment problem is not approximable within @xmath0 for any @xmath1 , unless np @xmath2 dtime@xmath3 .    in",
    "@xcite a cost preserving reduction from minmax ( regret ) shortest path to minmax ( regret ) minimum assignment has been proposed .",
    "therefore , we have exactly the same inapproximability results for minmax ( regret ) minimum assignment as for minmax ( regret ) shortest path .",
    "recall that in the minimum spanning tree problem @xmath8 consists of all spanning trees of  @xmath9 , that is all subsets of exactly @xmath110 edges that form acyclic subgraphs of @xmath9 .",
    "the following result is true :    [ cor1 ] the minmax ( regret ) minimum spanning tree problem is not approximable within @xmath26 for any @xmath1 , unless p = np even for edge series - parallel graphs .",
    "it is enough to observe that an optimal minmax ( regret ) path in the first graph @xmath9 from the proof of theorem  [ thm1 ] can be transformed to an optimal minmax ( regret ) spanning tree and vice versa by adding or removing a number of dummy edges .",
    "since the dummy edges have costs equal to  0 under all scenarios , this transformation is cost preserving .",
    "we get a gap of  2 and the theorem follows .",
    "notice that corollary  [ cor1 ] strengthens the results obtained in  @xcite .",
    "however , we are not able to show here that minmax ( regret ) minimum spanning tree is not approximable within a constant factor . the reduction , which is valid for the first graph @xmath9 , is not true for the subsequent graphs @xmath86 . in other words , it is not possible to transform a path in @xmath86 into a spanning tree by simply adding dummy edges .",
    "the question whether minmax ( regret ) minimum spanning tree is approximable within a constant remains open .",
    "it is also open for a more general class of minmax ( regret ) matroidal problems , where @xmath8 consists of all bases of a given matroid  @xcite .",
    "finally , let us consider the minimum s - t cut problem . in this problem",
    "we distinguish two nodes @xmath32 and @xmath33 in @xmath9 and @xmath8 consists of all @xmath10-cuts in @xmath9 , that is the subset of edges whose removal disconnects @xmath32 and @xmath33 .",
    "the minmax ( regret ) s - t cut problem is not approximable within @xmath0 for any @xmath1 , unless np @xmath2 dtime@xmath3 even for edge series - parallel graphs .",
    "as in the proof of theorem  [ thm1 ] , we use a reduction from 3-sat . for a given instance of 3-sat , we construct the corresponding instance of minmax s - t cut as follows : for each clause @xmath38 in  @xmath36 , we create three edges of the form @xmath111 , @xmath112 and @xmath113 that correspond to the literals in @xmath44 .",
    "observe that the resulting graph @xmath9 is composed of exactly @xmath114 disjoint @xmath10 paths and it has a series - parallel topology .",
    "for every pair of edges , that correspond to _ contradictory _ literals",
    "@xmath55 and @xmath56 , we form scenario @xmath18 such that under this scenario the costs of edges that correspond to @xmath55 and @xmath56 are set to  1 and the costs of all the remaining edges are set to 0 .",
    "an example of the reduction is shown in figure  [ fig4 ] .",
    "it is easy to check that the answer to 3-sat is ` yes ' if there is a cut @xmath115 in @xmath9 such that @xmath116 and @xmath117 otherwise .",
    "we thus get a gap of  2 and the minmax s - t cut problem is not approximable within  @xmath26 for any @xmath1 unless p = np .",
    "the rest of the proof is the same as the one of theorem  [ thm1 ] .",
    "in this paper , we have given a negative answer to the question about the existence of approximation algorithms with a constant performance ratio for the minmax and minmax regret versions of shortest path , minimum assignment and minimum s - t cut under discrete scenario representation of uncertainty .",
    "namely , we have shown that the considered problems are hard to approximate within a ratio of @xmath0 for any @xmath1 if the number of scenarios @xmath4 is unbounded .",
    "the question whether the performance ratio of @xmath4 is the best possible for these problems remains open and it is the subject of future research .",
    "we have also strengthen the known results for the minmax ( regret ) minimum spanning tree problem . for this problem ,",
    "however , it may be still possible to design an approximation algorithm with a constant performance ratio .",
    "h. aissi , c. bazgan , d. vanderpooten .",
    "complexity of the min - max ( regret ) versions of cut problems . in : proceedings of the 16th international symposium on algorithms and computation _",
    "isaac 2005 _ , lncs 3827 : pp . 789798 , 2005 .",
    "h. aissi , c. bazgan , d. vanderpooten . approximation complexity of min - max ( regret ) versions of shortest path , spanning tree , and knapsack . in : proceedings of the 13th annual european symposium on algorithms _ esa 2005 _ , lncs 3669 : pp .",
    "862873 , 2005 .",
    "h. aissi , c. bazgan , d. vanderpooten . approximating min - max ( regret )",
    "versions of some polynomial problems . in : proceedings of the 12th international computing and combinatorics conference _ cocoon 2006 _ , lncs 4112 : pp .",
    "428438 , 2006 .",
    "h. aissi , c. bazgan , d. vanderpooten .",
    "approximation of min - max and min - max regret versions of some combinatorial optimization problems .",
    "_ european journal of operational research _",
    "179(2 ) : 281290 , 2007 ."
  ],
  "abstract_text": [
    "<S> in this paper the minmax ( regret ) versions of some basic polynomially solvable deterministic network problems are discussed . </S>",
    "<S> it is shown that if the number of scenarios is unbounded , then the problems under consideration are not approximable within @xmath0 for any @xmath1 unless np @xmath2 dtime@xmath3 , where @xmath4 is the number of scenarios .    </S>",
    "<S> combinatorial optimization ; approximation ; minmax ; minmax regret ; </S>"
  ]
}
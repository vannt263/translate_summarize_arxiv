{
  "article_text": [
    "`` ( ... ) knowledge never hurts  what hurts is helplessness , the futility of banging your head against a brick wall without finding either proof or disproof .",
    "i have often spent weeks trying to prove a false statement  and when i learned that it is false , i felt victorious .",
    "progress was made , knowledge was acquired , one more step toward the truth was taken . ''",
    " paul r. halmos + i want to be a mathematician : an automathography ( 1985 ) p.  91 . +    logic permeates computing and provides essential tools for dealing with data structures .",
    "the curricula of discrete mathematics and logic courses emphasize a kind of verificationist approach through the teaching of techniques that focus on proving , instead of approaches that encourage also disproving , or refuting by way of counter - examples .",
    "the main afteraffect of such approach is a common misunderstanding by the students of the boundaries between a deductive framework and a semantic refutation .",
    "logic is essential , in particular , for verifying correctness of code . in checking",
    "that an iteration behaves as expected , for instance , one has to : ( i )  carefully choose an appropriate boolean condition to test , ( ii )  check whether the given initial conditions of an iteration imply the required postcondition , and usually also ( iii )  prove that the execution of the corresponding code terminates . in case",
    "the implication mentioned in step  ( ii ) is refuted , then the iteration code does not implement the desired specifications for the postcondition .",
    "conversely , if it is shown that the preconditions do imply the postcondition , then the iteration does satisfy the desired specification .",
    "the heuristic used in the analysis of this sort of situation involves basically the challenge of finding out whether certain conjectures can be proved or refuted . the fact that the two latter tasks , proving and refuting , are complementary is a very practical application of the soundness and completeness metatheorems .",
    "the aim of the present paper is to present a tool for teaching the use of logical reasoning to verify conjectures for which it has not previously been determined whether they are provable or refutable .",
    "one of the main goals of our tool is to teach how to construct a fully justified counter - example to witness the falsity of a given conjecture .",
    "this tool implements some of the teaching principles discussed in  @xcite .    in the current state - of - the - art ,",
    "an approach not unlike ours is used in bornat s",
    "@xcite , where logic ( formal deductive proof , formal semantic disproof and program specification ) is presented with the help of the proof assistant j@xmath0p@xmath1 .",
    "many other existing tools also combine the teaching of proof theory with formal semantics , e.g.  apros project , panda , tarski s world , fitch and boole . on top of those methodologies and tools ,",
    "our contribution is to track learning beyond the mere use of proof strategies . continuing the work presented by terrematte et al .",
    "@xcite , here we present an interactive tutorial to guide the student through the process of learning by trial and error : the trylogic .",
    "`` ( ... ) mathematics is not a deductive science . when you try to prove a theorem",
    ", you do not list the hypotheses , and then start to reason .",
    "what you do is trial and error , experimentation , guesswork .",
    "you want to find out what the facts are , and what you do is in that respect similar to what a laboratory technician does , but it is different in its degree of precision and information . ''",
    " paul r. halmos + i want to be a mathematician : an automathography ( 1985 ) p.  321 .",
    "+    logic courses represent a pedagogical challenge and the recorded number of failures and discontinuities in them is often high . on that track , the main goal of trylogicis to diminish the cognitive overload through a step - by - step tutorial , presenting different topics of logic related to the process of proving or refuting logical conjectures .",
    "our tool trylogicaims to :    * present a set of lessons in propositional logic that exemplify the task of proving in natural deduction ( theory  @xmath2 ) and refuting in a formal semantics ( theory sem@xmath3 ) through coq ; * organize logic in an interactive way and provide self - evaluation tasks to students ; * provide the teacher with a follow - up activity report on the lessons completed by the student at proofweb , and provide a multi - language infrastructure for human - machine interaction .    the framework is implemented by combining the following tools :    * proofweb : an open source software for teaching natural deduction which provides interaction between some proof assistants ( coq , isabelle , lego ) and a web interface  @xcite .",
    "* conjectures generator : a tool for task generation of a set of conjectural arguments ( i.e.  a set of premises with a formula that may follow or not from these premises ) .",
    "this tool was developed by our group .",
    "* tryocaml : an infrastructure consisting of an interactive tutorial for teaching and interaction with the functional programming language ocaml .",
    "* moodle : a well - known virtual learning environment ( vle ) that helps in organizing contents and educational activities . * ims basic learning tools interoperability ( ims lti ) : a specification for the implementation and integration of educational tools .",
    "[ fig : trylogic ]    the trylogicwas developed as branch of the tryocaml project , i.e. , all lessons and interaction follow the same architecture of the latter .",
    "we implemented the sem@xmath3 theory in coq and integrated the whole system with proofweb and moodle . with a goal of centralizing the use of our tools , we have used the specification ims lti , which is , according to the survey @xcite , one of the most representative alternatives to infrastructure integration between teaching platforms . using this specification , any collaborator who wishes to use trylogicin",
    "any vle can add it as an external tool .",
    "this way , it is not necessary to install trylogicnor is it necessary to obtain special access permission for the server in which it is being installed .",
    "the conjectures generator for propositional logic was implemented through a formula generator with the sat - solver limboole to evaluate propositional formulae .",
    "the conjectures generator creates conjectures in the format of individualized tasks for coq , directly in each student s area in proofweb .",
    "the students receive each task in a template for them to try and prove ( showing that @xmath4 ) in the  @xmath2 theory and another one for them to try and refute ( showing that @xmath5 ) in sem@xmath3 theory .",
    "of course , soundness and completeness connecting the two theories guarantee that only one of these tasks can be fulfilled .",
    "the conjectures generator was implemented with requirements that allow one to establish some connections of relevance between the premises and the conclusion , namely : that both the conclusion and the conjunction of the premises should be contingent , and that each formula of the premises must share at least one atom with the conclusion . other settings are available , e.g.  choosing the number of conjectures , number of premises , number of distinct atoms , selecting the connectives and a range for the complexity of the formulae ; also , the user may decide if in the generated conjectures all premises are necessary to prove the conclusion , and if the collection of generated conjectures are all provable , all refutable , or are evenly divided into provable and refutable , to be randomly assigned to the students .    through the available settings ,",
    "the conjectures generator is a useful tool for the teacher who wishes to evaluate propositional arguments through truth - tables , tableaux , natural deduction , resolution methods and even produce tasks concerning the evaluation of arguments .",
    "`` ( ... ) every genuine test of a theory is an attempt to falsify it , or refute it . ''",
    " karl raimund popper + conjectures and refutations : the growth of scientific knowledge ( 1963 ) p.  36 .    to prove a conjecture @xmath4 in propositional logic with natural deduction",
    "it is necessary to build a derivation tree to witness it .",
    "our students were taught to do this using the rules of a theory we call  @xmath2 , which is essentially the same that is natively implemented on proofweb , following the usual style of natural deduction introduced by gerhard gentzen in 1935 . as an illustration , the rules for disjunction are the following : @xmath6{{\\ensuremath{\\alpha}\\xspace}\\vee { \\ensuremath{\\beta}\\xspace}}{{\\ensuremath{\\beta}\\xspace } } \\qquad \\infer[^{(\\vee i_1)}]{{\\ensuremath{\\alpha}\\xspace}\\vee { \\ensuremath{\\beta}\\xspace}}{{\\ensuremath{\\alpha}\\xspace } } \\qquad \\infer[^{(\\vee e):m , n}]{{\\ensuremath{\\gamma}\\xspace}}{{\\ensuremath{\\alpha}\\xspace}\\vee { \\ensuremath{\\beta}\\xspace } & \\infer*{{\\ensuremath{\\gamma}\\xspace}}{\\infer[^{m}]{{\\ensuremath{\\alpha}\\xspace } } { } } & \\infer*{{\\ensuremath{\\gamma}\\xspace}}{\\infer[^{n}]{{\\ensuremath{\\beta}\\xspace}}{}}}\\ ] ]    in constrast , in an approach involving formal semantics , we build a refutation tree by using the notions of valuation and satisfaction .",
    "a valuation  @xmath7 maps formulae to truth - values .",
    "an argument is refutable ( @xmath5 ) if there is a valuation  @xmath7 that satisfies all formulae in  @xmath8 and simultaneously falsifies  @xmath9 ( @xmath10 and @xmath11 ) . to refute conjectures the students need to build refutation trees on the sem@xmath3 theory",
    ". the rules of sem@xmath3 compositionally manipulate satisfaction of formulae by a valuation  @xmath7 , and they are the following :    @xmath12{v \\vdash \\neg { \\ensuremath{\\alpha}\\xspace}}{v \\nvdash { \\ensuremath{\\alpha}\\xspace } } \\qquad \\infer[^{(\\neg~f)}]{v \\nvdash \\neg { \\ensuremath{\\alpha}\\xspace}}{v \\vdash { \\ensuremath{\\alpha}\\xspace } } \\qquad \\infer[^{(\\top)}]{v \\vdash \\top } { } \\qquad \\infer[^{(\\bot)}]{v \\nvdash \\bot}{}\\ ] ] @xmath13{v \\vdash { \\ensuremath{\\alpha}\\xspace}\\land { \\ensuremath{\\beta}\\xspace}}{v \\vdash { \\ensuremath{\\alpha}\\xspace } & v \\vdash { \\ensuremath{\\beta}\\xspace } } \\qquad \\infer[^{(\\land~f1)}]{v \\nvdash { \\ensuremath{\\alpha}\\xspace}\\land { \\ensuremath{\\beta}\\xspace}}{v \\nvdash { \\ensuremath{\\alpha}\\xspace } } \\qquad \\infer[^{(\\land~f2)}]{v \\nvdash { \\ensuremath{\\alpha}\\xspace}\\land { \\ensuremath{\\beta}\\xspace}}{v \\nvdash { \\ensuremath{\\beta}\\xspace}}\\ ] ] @xmath14{v \\vdash { \\ensuremath{\\alpha}\\xspace}\\vee { \\ensuremath{\\beta}\\xspace}}{v \\vdash { \\ensuremath{\\alpha}\\xspace } } \\qquad \\infer[^{(\\vee~t2)}]{v \\vdash { \\ensuremath{\\alpha}\\xspace}\\vee { \\ensuremath{\\beta}\\xspace}}{v \\vdash { \\ensuremath{\\beta}\\xspace } } \\qquad \\infer[^{(\\vee~f)}]{v \\nvdash { \\ensuremath{\\alpha}\\xspace}\\vee { \\ensuremath{\\beta}\\xspace}}{v \\nvdash { \\ensuremath{\\alpha}\\xspace } & v \\nvdash { \\ensuremath{\\beta}\\xspace}}\\ ] ] @xmath15{v \\vdash { \\ensuremath{\\alpha}\\xspace}\\to { \\ensuremath{\\beta}\\xspace}}{v \\nvdash { \\ensuremath{\\alpha}\\xspace } } \\qquad \\infer[^{(\\to~t2)}]{v \\vdash { \\ensuremath{\\alpha}\\xspace}\\to { \\ensuremath{\\beta}\\xspace}}{v \\vdash { \\ensuremath{\\beta}\\xspace } } \\qquad \\infer[^{(\\to~f)}]{v \\nvdash { \\ensuremath{\\alpha}\\xspace}\\to { \\ensuremath{\\beta}\\xspace}}{v \\vdash { \\ensuremath{\\alpha}\\xspace } & v \\nvdash { \\ensuremath{\\beta}\\xspace}}\\ ] ] @xmath16{v \\vdash { \\ensuremath{\\alpha}\\xspace}{\\ensuremath{\\leftrightarrow}}{\\ensuremath{\\beta}\\xspace}}{v \\vdash { \\ensuremath{\\alpha}\\xspace } & v \\vdash { \\ensuremath{\\beta}\\xspace } } \\qquad \\infer[^{({\\ensuremath{\\leftrightarrow}}~t1)}]{v \\vdash { \\ensuremath{\\alpha}\\xspace}{\\ensuremath{\\leftrightarrow}}{\\ensuremath{\\beta}\\xspace}}{v \\nvdash { \\ensuremath{\\alpha}\\xspace } & v \\nvdash { \\ensuremath{\\beta}\\xspace}}\\ ] ] @xmath17{v \\nvdash { \\ensuremath{\\alpha}\\xspace}{\\ensuremath{\\leftrightarrow}}{\\ensuremath{\\beta}\\xspace}}{v \\vdash { \\ensuremath{\\alpha}\\xspace } & v \\nvdash { \\ensuremath{\\beta}\\xspace } } \\qquad \\infer[^{({\\ensuremath{\\leftrightarrow}}~f2)}]{v \\nvdash { \\ensuremath{\\alpha}\\xspace}{\\ensuremath{\\leftrightarrow}}{\\ensuremath{\\beta}\\xspace}}{v \\nvdash { \\ensuremath{\\alpha}\\xspace } & v \\vdash { \\ensuremath{\\beta}\\xspace}}\\ ] ]    with these rules , the sem@xmath3 theory allows us to show that a given sentence is not a semantic consequence of a given set of premises . here is a full example of a refutation tree : @xmath18 { { \\textsf{q}}\\vee ( { \\textsf{r}}\\to { \\textsf{p } } ) , ( \\neg { \\textsf{p}}\\vee \\neg { \\textsf{r } } ) \\to { \\textsf{q}}\\nvdash \\neg({\\textsf{p}}{\\ensuremath{\\leftrightarrow}}{\\textsf{q } } ) \\to ( \\neg { \\textsf{r}}\\land { \\textsf{p } } ) } {    \\infer[^{(\\vee t2)}]{v \\vdash { \\textsf{q}}\\vee   ( { \\textsf{r}}\\to { \\textsf{p } } ) } {          \\infer[^{(\\to t2)}]{v \\vdash { \\textsf{r}}\\to { \\textsf{p } } } {        \\infer[^{}]{v \\vdash { \\textsf{p } } } { }      }    }    &    \\infer[^{(\\to t1)}]{v \\vdash ( \\neg{\\textsf{p}}\\vee \\neg { \\textsf{r } } ) \\to { \\textsf{q } } } {      \\infer[^{(\\vee f)}]{v \\nvdash \\neg{\\textsf{p}}\\vee \\neg { \\textsf{r } } } {        \\infer[^{(\\neg f)}]{v \\nvdash \\neg{\\textsf{p } } } {      \\infer[^{}]{v \\vdash { \\textsf{p } } } { }        }        &            \\infer[^{(\\neg f)}]{v \\nvdash \\neg{\\textsf{r } } } {      \\infer[^{}]{v \\vdash { \\textsf{r } } } { }        }      }    }    &    \\infer[^{(\\to f)}]{v \\nvdash \\neg({\\textsf{p}}{\\ensuremath{\\leftrightarrow}}{\\textsf{q } } ) \\to ( \\neg { \\textsf{r}}\\land { \\textsf{p } } ) } {      \\infer[^{(\\neg t)}]{v \\vdash \\neg({\\textsf{p}}{\\ensuremath{\\leftrightarrow}}{\\textsf{q } } ) } {      \\infer[^{({\\ensuremath{\\leftrightarrow}}f)}]{v \\nvdash { \\textsf{p}}{\\ensuremath{\\leftrightarrow}}{\\textsf{q } } } {         \\infer[^{}]{v \\vdash { \\textsf{p } } } { }         &         \\infer[^{}]{v \\nvdash { \\textsf{q } } } { }      } }      &      \\infer[^{(\\land f1)}]{v \\nvdash \\neg { \\textsf{r}}\\land { \\textsf{p } } } {         \\infer[^{(\\neg f)}]{v \\nvdash \\neg { \\textsf{r } } } {         \\infer[^{}]{v \\vdash { \\textsf{r } } } { }         }      }    } } \\ ] ] in a bottom - up reading each connective in sem@xmath3 has rules that provide a sufficient condition for a valuation @xmath7 to satisfy ( or falsify ) a given sentence . on the other hand , in a top - down reading , the application of the rules represent a semantic inference . in the branches of the refutation tree",
    "one finds statements in the form @xmath19 or @xmath11 . in the leaves",
    ", one finds statements such as @xmath20 or @xmath21 , where @xmath22 is an atomic formula .",
    "a refutation tree represents thus a fully justified counter - model to a given conjecture .",
    "note that the rules are analytical , i.e.  the premises of each rule contains statements over subformulas of the formula in the conclusion of the rule .",
    "this ultimately means that the leaves of an exhausted tree are always over atomic formulae .",
    "the general backward strategy for building a refutation tree follows these steps :    1 .",
    "assume that the conjecture is refutable , i.e.  that there is a valuation @xmath7 that satisfies its premises and falsifies its purported conclusion .",
    "2 .   exhaustively explore and justify step - by - step with the sem@xmath3 theory the consequences of the initial assumption that the conjecture is refutable .",
    "the exhaustive exploration means it may be necessary to backtrack to try other possible rules .",
    "3 .   check if the valuation consistently satisfies or falsifies each propositional atom involved , i.e.  it can not be that a valuation @xmath7 satisfies some atom @xmath22 ( @xmath20 ) and falsifies the same atom @xmath22 ( @xmath21 ) in the same refutation tree .",
    "note that the above strategy only applies to refuting contingent or contradictory formulae , and to exhibiting witnesses to invalid arguments .",
    "if one does not manage to build a refutation tree after an exhaustive exploration of the possibilities , this means that there does not exist a valuation @xmath7 such @xmath10 and @xmath23 .",
    "therefore , by the relation of semantic consequence we know that @xmath24 .",
    "thus , from the completeness theorem ( @xmath25 ) , one knows that the conjecture can be proved , i.e.  that it is possible to build a derivation tree in the @xmath2 theory .",
    "each connective rule of the sem@xmath3 theory is implemented by tacticals in coq and we extended the proofweb system to display the corresponding refutation trees , as illustrated in fig .",
    "[ fig : taticas ] .        ....    reset initial .",
    "require import semantics .",
    "parameter a b c d : prop .",
    "hypothesis f1 : ( v ||-/- a ) .",
    "hypothesis f2 : ( v ||-/- b ) .",
    "theorem sem_ex2 :    ( v ||-/- ( ( ~a->b ) /\\ ( ~a/\\~b ) ) ) . proof .",
    "apply f2 . ....",
    "&   script for refutation on proofweb , title=\"fig:\",width=234 ] + a ) script of refuting tacticals & b ) [ fig : sem - sem - ex1 ] resulting tree on trylogic / proofweb +    one of the pedagogical advantages of proofweb is its coherence with the _ modality effect _ of cognitive load theory @xcite .",
    "the idea is that two well connected sources of information reinforce the organizing process and facilitate the transfer of information to the long - term memory information store .",
    "the multiple representation is applied in fig .",
    "[ fig : taticas ] , where we can observe that without the proof script being inserted on the left - hand side ( a ) it would not be possible to check the object on the right - hand side ( b ) for the tactical sequence represents a justification for the refutation produced .",
    "the refutations are not static ( b ) , but in fact , correspond to the dynamic linear process of their construction on side ( a ) .",
    "thus , the visualization of ( b ) has didactic value as it is also useful to the communicability of the refutation structure in ( a ) .",
    "the heuristic procedure for refutation presented here might be replaced by other deductive formalisms in propositional logic , such as the sequent calculus , resolution , tableaux or even truth - tables . however",
    ", we avoid the truth - table method for its fixed exponential computational cost ( @xmath26 , where @xmath27 is the number of distinct atoms in the conjecture ) and its purely algorithmic character , which we judge not to have optimal pedagogical value .",
    "tableaux , on the other hand , are often very efficient in both tasks of proving and refuting .",
    "however , they also make the procedure fully automatic .",
    "while this might be a desirable property from a computational viewpoint , from the didactic perspective we claim that tableaux create a conceptually undesirable overlap between deductive formalism and formal semantics . as a consequence of the exclusive use of tableaux ,",
    "students are often led to build no appreciation at all for the distinction between proof theory and formal semantics . to clarify the meaning of our semantic heuristics , check the comparison between the refutation tree and the tableau method in fig .",
    "[ fig : heu - tabl ] : note in particular that in using sem@xmath3 the students are forced all the time to take decisions about which tableau branch they should want to explore . it is known that in the worst - case scenarios tableaux might be much more costly than truth - tables @xcite . a tableau is exhausted only when all the branches are fully explored , and this may depend on the ratio between the complexity of the formulae and the atoms that occur in them .",
    "therefore , if a formula has higher complexity than the number of distinct propositional atoms , then the tableau analysis may be longer than the number of rows in the truth table .",
    "in contrast , our heuristic procedure is not fully automatic and the wise choice of which path to follow may introduce exponential speed - up .",
    "ultimately , the use of sem@xmath3 simply requires the production of a sequence of formulae corresponding to an open branch of a tableau tree .",
    "@xmath28{\\nvdash ( \\neg { \\textsf{p}}\\to { \\textsf{q } } ) \\land ( \\neg{\\textsf{p}}\\land \\neg { \\textsf{q } } ) } { \\infer[^{(\\land~f1 ) } ] {   v \\nvdash ( \\neg { \\textsf{p}}\\to { \\textsf{q } } ) \\land ( \\neg{\\textsf{p}}\\land \\neg { \\textsf{q } } ) } {    \\infer[^{(\\to~f)}]{v \\nvdash \\neg { \\textsf{p}}\\to { \\textsf{q } } } {      \\infer[^{(\\neg~f)}]{v \\vdash \\neg { \\textsf{p}}}{v \\nvdash { \\textsf{p } } }      &      v \\nvdash { \\textsf{q } } } } } \\ ] ]    &     +    our goal is to improve the logical intuition of students .",
    "therefore , students are told that in cases where the semantic heuristics do not allow for a refutation , they should look for a derivation tree in @xmath2 . on the other hand ,",
    "when they are having trouble in proving , they might well try to refute the selected conjecture .",
    "we performed several experiments in the years of 2012 , 2013 and 2014 to evaluate trylogicin blended learning use .",
    "the task of proving or refuting was given to the average of 15 students per semester of computer science in the upper undergraduate course of _ logic applied to computing _ at the federal university of rio grande do norte ( dimap / ufrn ) , of which an average of 58% have actively used the system . through face - to - face classes we taught only using theoretical fundamentals , and our biggest challenge was teaching the computer - assisted task of proving or refuting exclusively through trylogic .",
    "the main task given to students was to prove or refute six to eight conjectures randomly assigned .",
    "these consisted in two conjectures per each of three or four levels of difficulty .",
    "for instance at first level ( easiest ) , the conjectures have 3 distinct propositional atoms , with 3 premises and a complexity between 2 and  4 connectives per formula .",
    "the fourth and hardest level has 6 distinct propositional atoms , with  4 premises and a complexity of  4 to  6 of connectives .",
    "the learning goals are to practice formal proof and refutation heuristics , as well as to advance the understanding of soundness and completeness metatheorems . at the end of each experiment",
    ", students answered a questionnaire about their profile , their use of the available tools , their difficulties in solving the tasks and their theoretical understanding of the tasks .",
    "some general conclusions about the experiments are :    * trylogicprovides the understanding of the deductive process in coq to students who had brief theoretical contact with the content of natural deduction . *",
    "the students consistently solved more refutable conjectures than provable ones , even if they have received in average an equal number of each kind of conjecture .",
    "for instance in spring 2013 , out of 60 solved conjectures , the students presented 43 refutations .",
    "it is possible to draw at least the following two interpretations for this phenomenon : that the search for a refutation tree is easier than the production of a natural deduction proof , or that the lessons for proving in natural deduction on trylogicneed to have an improved teaching strategy .",
    "the first interpretation is coherent with our learning goals , we aim to show that refutation is natural and necessary in logic . as for the second interpretation , we feel it important to add that some conjectures given as task are really large and difficult to prove . ] and this might explain the smaller number of produced formal proofs . *",
    "a negative conclusion drawn from the questionnaire was that the practice involved on prove or refute , does not necessary imply the theoretical understanding of the metatheorems of completeness and soundness . * using the theories",
    "@xmath2 and sem@xmath3 , implemented in coq , the student applies a heuristic for proving and refuting through justified and verified steps . this way , with trylogic",
    ", the experimental process of ` trial and error ' is taught in a guided environment .",
    "`` ( ... ) we teach mathematics to the engineers , physicists , biologists , psychologists , economists  and mathematicians  of the future .",
    "( ... ) it is not enough to teach them everything that s known ",
    "they must know also how to find out what has not yet been found . ''",
    "this paper presents an infrastructure of integrated tools for the teaching of logic with focus on : ( i )  an organized step - by - step presentation of the content of natural deduction and propositional semantics in a sequential and interactive way ; ( ii )  providing the student with interactive self - evaluation tasks ; ( iii )  the interaction with the ` conjectures generator ` and trylogicwith moodle through ims lti .",
    "it is worth noting that , since the trylogicis based on proofweb and the lessons are structured on tryocaml , our infrastructure is extensible and customizable to build lessons on any other formal theory implemented on coq or isabelle , e.g.   on modal logic , number theory , set theory , or hoare logic .",
    "our contributions to teaching logic are part of an initiative that needs to be enhanced .",
    "some opportunities for the extension of the project would include :            the authors acknowledge partial support by the marie curie project pirses - ga-2012 - 318986 , funded by eu - fp7 , and by cnpq  / brazil .",
    "the authors also want to thank all undergraduate students of computer science and computer engineering who have contributed to the project during several semesters of the course of logic applied to computing at dimap / ufrn . for the implementation of the conjectures generator",
    ", a special acknowledgement should go to elias amaral .",
    "carlos alario - hoyos and scott wilson .",
    "comparison of the main alternatives to the integration of external tools in different platforms . in _ proceedings of the international conference of education , research and innovation ,",
    "iceri _ , pages 34663476 , 2010 .",
    "maxim hendriks , cezary kaliszyk , femke van raamsdonk , and freek wiedijk . .",
    ", 3(2):3548 , 2010 .",
    "joo marcos .",
    "fail better : what formalized math can teach us about learning .",
    "4th international conference on tools for teaching logic , pages 119128 .",
    "patrick terrematte , fabrcio costa , and joo marcos .",
    "logicamente : a virtual learning environment for logic based on learning objects . in patrick blackburn ,",
    "hans ditmarsch , mara manzano , and fernando soler - toscano , editors , _ third international conference tools for teaching logic .",
    "_ , volume 6680 of _ lecture notes in artificial intelligence _ ,",
    "pages 223230 .",
    "springer - verlag , berlin , 2011 ."
  ],
  "abstract_text": [
    "<S> aiming to offer a framework for blended learning to the teaching of proof theory , the present paper describes an interactive tutorial , called trylogic , teaching how to solve logical conjectures either by proofs or refutations . </S>",
    "<S> the paper also describes the integration of our infrastructure with the virtual learning environment moodle through the ims learning tools interoperability specification , and evaluates the tool we have developed . </S>"
  ]
}
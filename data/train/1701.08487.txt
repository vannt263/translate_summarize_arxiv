{
  "article_text": [
    "tensor canonicalization is a classical topic in computer algebra .",
    "there is a myriad of softwares including this function , some of which are updating it consistently .",
    "an extensive collection of the softwares and related literature can be found in @xcite .",
    "the symmetries of the riemann tensor on a riemannian manifold of unknown dimension are one of the most complex that occur in practice , making it a challenging task to normalize general riemann tensor polynomials .",
    "we adopt the following terminology in this paper :    indicial form of the riemann tensor .",
    "it is of the form @xmath0 , where @xmath1 are _",
    "indices_.    scaled contraction of @xmath2 copies of the riemann tensor ; @xmath2 is called the _ degree _ of the r - monomial .",
    "an r - factor with _ loop _ ( two dummy indices of the same name ) .",
    "a tensor whose indicial form is the sum of r - monomials .",
    "the 4 indices of an r - factor can be written in two rows : the _ upper _ and _ lower _ ones .",
    "the following are the symmetries within an r - monomial of degree @xmath2 :    _ @xmath3-symmetry _ : the group @xmath4 upon an r - factor ; it has two generators : @xmath5 and @xmath6 .",
    "_ commutativity _ : an r - monomial of degree @xmath2 has permutation symmetry @xmath7 among its r - factors .",
    "_ renaming _ : an r - monomial is invariant under renaming of dummy indices ; it has permutation symmetry @xmath8 , where @xmath9 is the number of different dummy indices .    _ cyclic symmetry _ : bianchi identity @xmath10     @xmath3 \" and  commutativity \" form a group of size @xmath11 , while  renaming \" forms another group of size @xmath12 .",
    "the two groups are called the _ monoterm symmetry _ , while the cyclic symmetry is called the _",
    "multiterm symmetry_.    there is a symmetry on row character .",
    "two indices of the same name can always invert their row characters .",
    "this row symmetry is generally not taken into account , because a free index in any term of an r - polynomial must have the same row character , a property determined by the tensor nature .",
    "suppose an order is given among the indices . given an r - monomial @xmath13 , in the equivalence class defined by the monoterm symmetry , an r - monomial whose sequence of indices has the minimal lexicographic order",
    "is called the _ pre - normal form _ of @xmath13 , also known as the canonical form of @xmath13 under the monoterm symmetry .",
    "the canonical form of @xmath13 under all the symmetries of @xmath13 is called its _ normal form _ @xcite .",
    ".2 cm we first introduce several methods in the literature devoted solely to computing the pre - normal form .",
    "renaming preference :    when all the permutations of dummy indices inside an r - monomial are listed , then sorting the r - factors has logarithm complexity for any of the permutations .",
    "any method of this class has factorial complexity @xcite .",
    "double coset representative :    in @xcite , @xcite , a method based on strong generating set representation of the permutation group is proposed , which has exponential complexity in the worst case @xcite .",
    "the softwares ` xperm ` and ` canon ` based on this algorithm turn out to be the fastest in practice @xcite .",
    "\\3 . graph - theoretic method based on directed graph labeling :    a pair of dummy indices of a same name can be naturally taken as an edge connecting two vertices . to use the canonical form in graph theory ,",
    "a formulation of tensor algebra as an _ algebra of graphs _ is proposed in @xcite . in this thesis for master s degree , the first canonicalization algorithm based on graph theory is proposed , where a tensor is formulated as a graph by representing ( 1 ) its name as a vertex , ( 2 ) the indices as edges , ( 3 ) the row character of an index as direction of the edge , ( 4 ) the position of an index by showing it on the edge . in canonical relabeling",
    ", the adjacency matrix is used to find the best permutation for identical vertices in a graph .",
    "the algorithm should have factorial complexity .    \\4 .",
    "graph - theoretic method based on undirected graph labeling :    a different graph representation of tensors is proposed in @xcite , where ( 1 ) each index is a vertex , ( 2 ) each pair of identical dummy indices is an edge , ( 3 ) an extra vertex is constructed to connect with every free index , ( 4 ) labels are used to describe the row character and position of an index . a fast algorithm for graph isomorphism problem",
    "is used to find the canonical graph having the smallest sorted labeled edge set .",
    "the algorithm has factorial complexity in the worst case .",
    ".2 cm the following methods are oriented to computing the normal form instead of the pre - normal form only .",
    "group algebra and group representation theory :    in @xcite , @xcite , the group algebra of @xmath14 is used to reduce computing the normal form to computing the orthogonal rejection from a linear subspace in an surrounding space of dimension @xmath11 . in @xcite , young diagram and schur program",
    "are used in normalization , and are later implemented in ` cadabra ` @xcite .",
    "these methods all have factorial complexity . in @xcite , a nondeterministic method based on genetic algorithms",
    "is proposed .",
    "grbner basis :    in @xcite , it is proposed that computing the normal form of an r - monomial can be separated into two stages : first , computing the pre - normal form ; second , using the grbner basis method to deal with multiterm symmetry . to use the grbner basis method , all the permutations of dummy indices inside an r - monomial must be considered . as the tensor contraction",
    "is highly restricted when compared with polynomial multiplication , a grbner basis theory need be established properly for tensor contraction @xcite .",
    "the methods have factorial complexity .",
    "linear equation solving among pre - normal forms related to cyclic symmetry .",
    "@xcite introduces a method of normalization by solving large systems of linear equations derived by alternatively replacing every r - factor in the pre - normal form of an r - monomial with its 3-index antisymmetrization in all possible inequivalent ways .",
    "the method has exponential complexity .",
    "term rewriting by graph structure analysis :    in @xcite , a term rewriting method is proposed to normalize a special class of r - monomials of degree 3 by analyzing the structure of the graph associated with each r - monomial .    as summarized in @xcite , there are fast monoterm canonicalization algorithms , while efficient multiterm canonicalization algorithms are still missing . in some softwares a database storing the hard - to - compute normal forms of a large number of r - monomials is set up for fast visit . for example , ` mathtensor ` @xcite has an ever - growing list of ` riemannrule ` s ; ` invar ` stores one million random riemann monomial scalars and their normal forms of degree ranging from 2 up to 100 @xcite , @xcite , @xcite",
    ".    .2 cm targeting the difficulty in manipulating multiterm symmetry , in this paper :    \\i .",
    "we establish the _ extension theory of graph algebra_.    the graph algebra proposed in @xcite can not handle multiterm symmetry .",
    "we first propose a new graph algebra by representing ( 1 ) an index as a vertex , with the position in the inclusive r - factor as an intrinsic property of the vertex , ( 2 ) a pair of identical indices as an edge .",
    "then we extend grassmann s extension theory to the graph algebra , where in an extension graph a vertex is a high - dimensional vector space spanned by several vertices of the original graph .",
    "this framework makes it natural to handle cyclic symmetry and more general multiterm symmetry , where algebraic manipulations are used in stead of graph - theoretic algorithms .",
    "we propose a easy - to - understand algorithm for pre - normal form computing , which has the same worst - case complexity with the fastest algorithm @xcite in the literature .",
    "the following observation is fundamental : when a configuration of r - factors is fixed , then to get the minimal index sequence one only need fill in new dummy indices by the occurrence order of the positions held by old dummy indices . it is called the  positional order \" in @xcite , and has been implemented in software ` ttc ` .    our algorithm has no prerequisite of group theory . based on the above observation , to fix a configuration our algorithm does not need run through the whole permutation group @xmath7 .",
    "it has worst - case complexity @xmath15 .",
    "we propose a complete algorithm for normal form computing based on graph algebra extension and linear equation solving in _ rational functions field_.    there are two steps .",
    "first the pre - normal form of the extension graph is computed .",
    "then the normal form is computed by computing the rational numbers valued _ rref _ ( reduced row echelon form ) of a linear system with rational functions coefficient .",
    "the complexity of the algorithm is @xmath16 by gauss - jordan elimination .",
    "in contrast , the  brute - force \" linear equation solving method @xcite has complexity @xmath17 if by gauss - jordan elimination .    throughout this paper we set the base numbers field to be the * rational numbers @xmath18 * , and set the order among monomials / sequences to be the * lexicographic order*. this paper is organized as follows . sections 2 and 3 are on graph algebra extension theory ; sections 4 and 5 are on algorithms for pre - normal form and normal form respectively ; experiments and more examples will be reported elsewhere .",
    "a _ connection multigraph _ is an undirected multigraph where the degree of any vertex @xmath19 .",
    "obviously if the multigraph has more than one vertex , then any vertex has at most one loop .",
    "a vertex of degree @xmath20 is called a _ free vertex _ , while a vertex of degree 4 is called a _ dummy vertex_. a dummy vertex with loop is called a _ ricci vertex _ , while a dummy vertex without loop is called a _ complete vertex_.    for any vertex @xmath21 of a connection graph @xmath22 , associate with it two twin - seats : @xmath23 and @xmath24 . now @xmath21",
    "together with the two twin - seats associated with it is called a _ detailed vertex _ , denoted by @xmath25 .    for any edge @xmath26 of @xmath22 connecting two vertices @xmath27 , assign in each @xmath28 a seat @xmath29 so that @xmath26 connects the two seats @xmath30 and @xmath31 , one from each detailed vertex .",
    "if an assignment of all the edges to the seats changes @xmath22 into a graph with the seats as vertices such that the degree of any seat @xmath32 , then the new graph is called a _ detailed graph _ of @xmath22 , and @xmath22 is called the _ detail - free multigraph _ of the detailed graph .    a detailed graph @xmath33 can be formally multiplied with a scalar @xmath34 , denoted by @xmath35 , called a _ multiple detailed graph_. two multiple detailed graphs can be formally added , and if they are equal up to coefficient , they can be combined by adding up their coefficients .",
    "the @xmath18-space spanned by finitely many detailed graphs is called the _ detailed graph @xmath18-space _ they generate .    given a detailed graph @xmath33 , the set of graphs with maximal vertex degree @xmath32 and containing @xmath33 as a subgraph span a @xmath18-space , called the _ ideal _ generated by @xmath33 . for two detailed graphs",
    "@xmath36 , a third detailed graph @xmath33 is said to be a _ join _ of @xmath36 , if both @xmath36 are subgraphs of @xmath33 .",
    "two detailed graphs can have more than one join . we use",
    " @xmath37 \" to denote a fixed join of @xmath36 , and use ",
    "@xmath38 \" to denote a fixed join among @xmath39 .",
    "this formal product is commutative and associative . for detailed graphs @xmath39 ,",
    "we define the following join of @xmath40 and @xmath41 , called the _ multilinear join _ : ( _ 1 d_1+  +_k-1 d_k-1 ) ( _ k d_k ) : = ( _ 1_k ) ( d_1d_k)+  + ( _ k-1_k ) ( d_k-1d_k ) . the multilinear join can be extended by associativity and commutativity to the general case .",
    "given finitely many detailed vertices , the formal scalar multiplication , addition and multilinear join among them generate a finite dimensional @xmath18-space of detailed graphs , called the _ detailed graph @xmath18-algebra _ they generate .",
    "a general element of the algebra is called a _ combined detailed graph_.    given a detailed graph @xmath33 whose seats not connected by edges",
    "are said to be _",
    "free _ and are labeled by _ free indices _ one by one , if an order @xmath42 among its detailed vertices is given , then following the order all the seats of the detailed vertices can be lined up . along the sequence of seats",
    "@xmath43 , if we remove all the free seats , and then preserve for each edge only the first seat it connects , we get a sequence of seats @xmath44 where the serial number of each seat is called the _ dummy index _ of the edge connecting it . now label each seat of @xmath43 connected by an edge with the dummy index of the edge .",
    "the resulting labeled sequence of @xmath43 is called the _ serial index representation _ of @xmath33 associated with the order @xmath42 , also called the _ positional order _ in @xcite .    in the serial index representation ,",
    "the order among the free indices can be prescribed arbitrarily , while the order among the dummy indices follow their natural order as integers .",
    "it is always assumed that all free indices @xmath45 all dummy indices . for a detailed graph @xmath33 of @xmath2 detailed vertices",
    ", there are @xmath46 different orders among the detailed vertices , and consequently there are at most @xmath46 different serial index representations of @xmath33 . the minimal serial index representation in the lexicographic order",
    "is called the _ minimal index representation _ of @xmath33 , denoted by @xmath47 .    given detailed graphs @xmath48 , their various serial index representations span a @xmath18-linear space , called the _ serial index @xmath18-space _ they generate . for combined detailed graph @xmath49 , its _ minimal index representation _",
    "refers to @xmath50 .    given a detailed vertex @xmath25 , the following 24 detailed vertices \\{v(s_(1)s_(2 ) , s_(3)s_(4))| s_4 } span a @xmath18-space , called the _ detail - free extension _ of the detailed vertex .",
    "it can be represented by the grassmann exterior product of 24 detailed vertices taken as vectors , if the vectors are linearly independent .",
    "no matter how linearly dependent the 24 detailed vertices are , their common detail - free extension can be represented unanimously in parametric form as follows : ext(v(s_1s_2 , s_3s_4)):= _ s_4 _ v(s_(1)s_(2 ) , s_(3)s_(4 ) ) , where the @xmath51 s are free parameters .",
    "this form of representation is called the _ detailed extension _ of the detailed vertex .    given a detailed graph @xmath33 with @xmath2 detailed vertices @xmath52 , or equivalently in the notation of detailed graph @xmath18-algebra , d=_i=1^n v_i(s_i1s_i2 , s_i3s_i4 ) , the corresponding detail - free multigraph among the @xmath2 detail - free extensions of the detailed vertices can be represented as the following  detailed graph \" among the @xmath2 detailed extensions of the detailed vertices : ext(d ) & : = & _ i=1^n ( _ _ is_4 ( _ _ i v_i(s__i(1)s__i(2 ) , s__i(3)s__i(4 ) ) ) ) + & = & _ ( _ 1 ,  , _ n)(s_4)^n -.12 cm ( _ i=1^n _ _ i ) ( _ i=1^n v_i(s__i(1)s__i(2 ) , s__i(3)s__i(4 ) ) ) , [ def : ext ] called the _ detailed extension _ of @xmath33 .",
    "two detailed graphs are said to be _ multigraph - like _ , if they have the same connection multigraph .",
    "so when viewed from the @xmath18-space spanned by detailed vertices , the detail - free multigraph of a detailed graph @xmath33 with @xmath2 detailed vertices each having @xmath53-dimensional detailed extension for @xmath54 , is a multigraph whose vertices are @xmath53-dimensional linear subspaces for @xmath54 ; when viewed from the @xmath18-space spanned by detailed graphs , the detail - free multigraph is a @xmath55-dimensional linear subspace spanned by all the detailed graphs whose detailed vertices each have the same set of seats with the corresponding detailed vertex of @xmath33 .    in an r - monomial , if an r - factor has all its dummy indices removed , and all its free indices viewed as a set , then when the remainder is taken as a vertex , and every pair of identical dummy indices is taken as an edge , a multigraph is obtained , called the _",
    "multigraph _ of the r - monomial .",
    "an r - monomial is said to be _ connected _ if so is its multigraph .",
    "the multigraph of a connected r - monomial is a connection multigraph . for an r - monomial @xmath13",
    ", a connected r - submonomial @xmath56 is said to be _ maximal _ if there is no connected r - submonomial of @xmath13 containing @xmath56 properly .",
    "the multigraph of an r - monomial is the disjoint union of the connection multigraphs of all the maximal connected r - submonomials .",
    "for example , the connection multigraph of @xmath57 is @xmath58 , where each arc denotes an edge .",
    "the connection multigraph of @xmath59 is @xmath60 , while the connection multigraph of @xmath61 is @xmath62 .    in a connected r - monomial ,",
    "every r - factor is a 4-tuple of seats , each seat being occupied by an index .",
    "when every seat is taken as a vertex , and every pair of identical dummy indices is taken as an edge , a detailed graph is obtained with every r - factor as a detailed vertex , called the _ detailed graph _ of the r - monomial .",
    "the _ detailed graph _ of an r - monomial is the disjoint union of the detailed graphs of all the maximal connected r - submonomials .",
    "for example , the detailed graph of @xmath63 is @xmath64 , while the detailed graph of @xmath65 is @xmath66 .",
    "each edge is denoted by a line with two asterisk ends denoting the seats it connects .",
    "the serial index representations of the two detailed graphs are @xmath67 respectively , which are also the minimal index representations of them .",
    "let @xmath22 be a connection multigraph . denote by @xmath68 the @xmath18-space of detailed graphs having the same detail - free expansion @xmath22 .",
    "define the following equivalence relation in @xmath68 : two multiple detailed graphs @xmath69 and @xmath70 are equivalent if one of the following is satisfied :    @xmath71 , and @xmath72 and @xmath73 have only one different detailed vertex : if the detailed vertex of @xmath72 takes the form @xmath25 , then the other in @xmath73 is @xmath74 .",
    "@xmath75 , and @xmath72 and @xmath73 have only one different detailed vertex : if the detailed vertex in @xmath72 takes the form @xmath25 , then the other in @xmath73 is @xmath76 .",
    "two combined detailed graphs @xmath77 and @xmath78 are equivalent if for @xmath79 , @xmath80 and @xmath81 are equivalent .",
    "this equivalence relation is called the _ pre - r - equivalence_. the pre - r - equivalence class of a detailed vertex @xmath21 , detailed graph @xmath33 , respectively , is called a _ detailed pre - r - vertex _ , _ detailed pre - r - graph _ , and denoted by @xmath82 , @xmath83 , respectively .",
    "* sym*@xmath84 generate the symmetry group @xmath3 . from the viewpoint of graph algebra extension , depending on whether a detailed vertex @xmath21 has two loops or not , the corresponding detailed",
    "pre - r - vertex is a 4-d space or 8-d space spanned by the trajectory of group @xmath3 upon @xmath21 , called the _",
    "@xmath3-subextension _ of the detailed vertex .",
    "a detailed pre - r - graph is thus a detailed graph whose detailed vertices are @xmath3-subextensions of the corresponding detailed vertices of any detailed graph in the pre - r - equivalence class .",
    "now that the coset @xmath85 has 3 elements , the detailed extension of a loop - free detailed pre - r - vertex @xmath25 is a 3-space spanned by the following basis : v(s_1s_2 , s_3s_4 ) ,  v(s_1s_3 , s_4s_2 ) ,  v(s_1s_4 , s_2s_3 ) .",
    "[ pre:3 ] the detailed extension of a detailed pre - r - vertex with loop is a 1-space spanned by itself .    for a detailed pre - r - graph d=_i=1^n v_i(s_i1s_i2 , s_i3s_i4 ) ,   + v_i ir i > r , [ ex : loop : no ] the detailed extension @xmath86 is a @xmath87-dimensional @xmath18-space with the following parametric representation : ext(d ) & = & ( _ r _",
    "v_i(s_i1s_i2 , s_i3s_i4 ) ) ( _ i = r+1^n ( _ i2v_i(s_i1s_i2 , s_i3s_i4 ) + _ i3v_i(s_i1s_i3 , s_i4s_i2 ) + _ i4v_i(s_i1s_i4 , s_i2s_i3 ) ) ) + & = & _ i = r+1^n  _ _ ibp(1,2 ) ( _ r _ i = r+1^n sign(_i ) _",
    "i_i(2 ) ) + & & ( _ i=1^r v_i(s_i1s_i2 , s_i3s_i4 ) ) ( _ i = r+1^n v_i(s_i1s_i_i(2 ) , s_i_i(3)s_i_i(4 ) ) ) , [ pre : set ] where @xmath88 is the set of bipartitions of 2,3,4 into two subsequences of length 1,2 respectively .",
    "the basis in ( [ pre : set ] ) is the set of all detailed pre - r - graphs having the same connection multigraph with @xmath33 .    for a detailed graph @xmath89 , the minimum in the lexicographic order of all the minimal serial representations of elements in @xmath83",
    "is called the _ pre - normal form _ of @xmath33 , denoted by @xmath90 . for combined detailed graph @xmath91 in the detailed graph @xmath18-space , its _ pre - normal form _ is @xmath92 .",
    "the pre - normal form provides a unique 1-d representation of the detailed pre - r - graph .",
    "define the following equivalence relation in @xmath68 : let @xmath93 be detailed graphs , and let @xmath94 , then @xmath69 and @xmath95 are equivalent if one of the following is satisfied :    @xmath95 and @xmath69 are pre - r - equivalent .",
    "@xmath96 , and @xmath93 have only one different detailed vertex : if the detailed vertex in @xmath72 takes the form @xmath25 , then the other two in @xmath97 separately are @xmath98 , @xmath99 respectively . two combined detailed graphs @xmath77 and @xmath100 of @xmath68 are equivalent if for @xmath79 , @xmath80 and @xmath101 are equivalent .",
    "this equivalence relation is called the _",
    "r - equivalence_.    the r - equivalence class of a detailed vertex @xmath21 , detailed graph @xmath33 , respectively , is called a _ detailed r - vertex _ , _ detailed r - graph _ , respectively , and denoted by @xmath102 , @xmath103 , respectively .",
    "the r - equivalence relation naturally induces an equivalence relation among the detailed pre - r - graphs , also called the _",
    "r - equivalence _ : two detailed pre - r - graphs are equivalent if as detailed graphs they are r - equivalent .",
    "* bianchi * defines only one linear relation among the basis elements of ( [ pre:3 ] ) .",
    "the reason is as follows .",
    "if the 4 seats of a vertex are permuted , then there are as many as 24 bianchi relations : v(s_(1)s_(2 ) , s_(3)s_(4 ) ) + v(s_(1)s_(3 ) , s_(4)s_(2 ) ) + v(s_(1)s_(4 ) , s_(2)s_(3))=0 , for all @xmath104 .",
    "it is easy to see that all of them are pre - r - equivalent .",
    "so the detailed extension of a loop - free detailed r - vertex @xmath25 is a 2-space spanned by the following basis : @xmath25 , @xmath98 .",
    "for detailed r - graph ( [ ex : loop : no ] ) , @xmath86 is a @xmath105-dimensional @xmath18-space with the following basis : \\ { ( _ i=1^r v_i(s_i1s_i2 , s_i3s_i4 ) ) ( _ i = r+1^n",
    "v_i(s_i1s_i_i(2 ) , s_i_i(3)s_i4 ) ) | _ is_2 2,3 } .",
    "[ r : set ] ( [ r : set ] ) is the set of all detailed r - graphs having the same connection multigraph with @xmath33 .    for @xmath89 , the minimum in the lexicographic order of all the pre - normal forms of elements in @xmath103",
    "is called the _",
    "r - normal form _ of @xmath33 , denoted by @xmath106-@xmath107 . for combined detailed graph @xmath91 , its _ r - normal form",
    "is @xmath108 .",
    "the r - normal form provides a unique 1-d representation of the detailed r - graph @xmath103 , or equivalently the common multigraph @xmath22 .",
    "for detailed graph @xmath33 in ( [ ex : loop : no ] ) , as a detailed pre - r - graph it has a detailed extension of @xmath87 dimensions , while as a detailed r - graph its detailed extension has dimension @xmath105 .",
    "so the @xmath87 basis elements in ( [ pre : set ] ) when taken as detailed r - graphs satisfy @xmath109 linear constraints . these constraints can be selected as the following @xmath109 equations : for all @xmath110 , all @xmath111 acting upon 2,3 , and all @xmath112 acting upon 2,3,4 , \\ { ( _ sr v_s(s_s1s_s2 , s_s3s_s4 ) ) ( _ r < j <",
    "i v_j(s_j1s_j_j(2 ) , s_j_j(3)s_j4 ) ) + ( v_i(s_i1s_i2 , s_i3s_i4 ) + v_i(s_i1s_i3 , s_i4s_i2)+v_i(s_i1s_i4 , s_i2s_i3 ) ) + ( _ k >",
    "i v_k(s_k1s_k_k(2 ) , s_k_k(3)s_k_k(4 ) ) ) } = 0 .",
    "[ triangulate ] ( [ triangulate ] ) can also be obtained from the pre - normal form of the detailed extension ( [ pre : set ] ) by @xmath109 special evaluations of the @xmath51 s .",
    "( [ triangulate ] ) is a linear homogeneous system of @xmath109 equations in @xmath113 unknowns , where each unknown is a pre - normal r - monomial .",
    "denote the unknowns by @xmath114 following the lexicographic order .",
    "let @xmath115 be the * rref * ( reduced row echelon form ) of the coefficient matrix .",
    "if @xmath116 is up to coefficient a leading variable of an equality in @xmath117 , then the normal form of @xmath13 is obtained by substituting the equality into @xmath116 , else @xmath116 is the normal form of @xmath13 .",
    "for an r - monomial @xmath13 , its _ pre - normal form _ is an r - monomial @xmath118 whose index sequence is the pre - normal form of the detailed graph of @xmath13 . for an r - polynomial , its _ pre - normal form _ is the linear combination of the pre - normal forms of its terms .",
    "an r - polynomial is said to be _ pre - normal _ if it is its own pre - normal form .",
    "for example , the pre - normal form of an r - factor @xmath119 can be obtained in three steps : ( 1 ) sort @xmath120 non - decreasingly , ( 2 ) sort @xmath121 non - decreasingly , ( 3 ) sort the two sorted pairs non - decreasingly .",
    "we assume that the input r - polynomial does not contain indices named after integers , so that we can introduce integers as new dummy indices .",
    "we always assume @xmath122 before introducing the pre - normal form computing algorithm , let us check three typical examples .",
    "example 1_. let @xmath123 , where @xmath124 .",
    ".2 cm    first , change each r - factor into its pre - normal form .",
    "the result is @xmath125 , @xmath126 , @xmath127 , @xmath128 .",
    "second , the r - factors are classified into two groups : the first group @xmath129 consists of r - factors having free indices , the second group @xmath130 consists of the rest . obviously all elements of @xmath131 all elements of @xmath132 .",
    "third , @xmath133 is sorted by free indices : @xmath134 , making @xmath133 a sequence .",
    "the serial index representation of @xmath133 is then obtained by the following assignment : @xmath135 the assignment naturally branches into two options : ( 1 ) @xmath136 ; ( 2 ) @xmath137 . within sequence @xmath133 ,",
    "option ( 1 ) gives index sequence @xmath138 while option ( 2 ) gives index sequence @xmath139 . as option",
    "( 2 ) gives lower order , it becomes the single option .",
    "fourth , the corresponding old dummy indices in group @xmath132 are also renamed by the new ones . while @xmath133 is updated to @xmath140 , @xmath132 is updated to @xmath141 . obviously @xmath142 .",
    "now that all elements of @xmath133 and @xmath132 are ordered , they can merge to form a single sequence .",
    "in other words , the order among the 4 input r - monomials have been fixed .    finally , the remaining old dummy indices @xmath143 are assigned to new ones @xmath144 .",
    "no matter whether @xmath145 is renamed to 6 or 7 , the resulting r - monomial is the same : @xmath146 .",
    "it is the pre - normal form of @xmath13 .",
    ".2 cm example 1 shows that if @xmath13 has free indices , then its pre - normal form can be computed by the loop procedure of first sorting the r - factors having fixed indices , then renaming the old dummy indices in the sorted r - factor sequence by the serial index representation .",
    "the same idea applies to the case when there is no free index .",
    "[ lem:2 ] if connected r - monomial @xmath13 has no free index but has at least one ricci r - factor , then the pre - normal form of @xmath13 must be led by a ricci r - factor .    _",
    "proof_. any ricci r - factor in the first position can be renamed as @xmath147 or @xmath148 , while a non - ricci r - factor has the minimal index form @xmath149 , which is higher in order .",
    "@xmath150    .2 cm _",
    "example 2_. @xmath151 . .2 cm    the r - factors in pre - normal form are @xmath152 . by lemma [ lem:2 ] ,",
    "one of the two ricci r - factors is the first in the pre - normal form of @xmath13 .",
    "for example , if @xmath153 is the first , then @xmath154 and @xmath155 .",
    "so 4 branches are generated in assigning new indices 1,2,3 : @xmath156    in each branch , the sequence of r - monomials containing fixed indices is denoted by @xmath133 , and the other r - monomials are in the set @xmath132 : @xmath157 , & q_d=\\{r(d_1d_6,d_2d_6)\\ } ; \\\\    ( 2 ) & q_f=[-r(12 , 13 ) ,   \\phantom{-}r(23,d_1d_2 ) ] , & q_d=\\{r(d_1d_6,d_2d_6)\\ } ; \\\\    ( 3 ) & q_f= [ \\phantom{-}r(12 , 13),- r(23,34 ) ] , & q_d=\\{r(d_3d_5,d_4d_5)\\ } ; \\\\    ( 4 ) & q_f= [ \\phantom{-}r(12 , 13 ) ,   \\phantom{-}r(23,34 ) ] , & q_d=\\{r(d_3d_5,d_4d_5)\\}. \\ea\\ ] ]    in branch ( 1 ) , assignment @xmath158 generates one more branch : while option @xmath159 leads to @xmath160 , option @xmath161 leads to @xmath162 . since the two differ by coefficient , @xmath163 .",
    ".2 cm example 2 shows that depth - first strategy is preferred in generating branches .",
    "example 3_. set @xmath164 in example 1 .",
    ".2 cm the r - factors of @xmath13 are @xmath125 , @xmath126 , @xmath127 , @xmath165 .",
    "any of them may be the first in the pre - normal form of @xmath13 .",
    "for example , if @xmath125 is the first , then assignment @xmath166 has 24 options .",
    "all together the assignment of new indices 1,2,3,4 generates @xmath167 branches .",
    "once the first new indices are assigned , then similar to example 1 , more new indices can be assigned in each branch , and new branches may be generated by different options in the new assignment .",
    "each branch finally generates a serial index representation of @xmath13 , and the minimum of them gives the pre - normal form of @xmath13 . by the algorithm below , the pre - normal form is @xmath168 .",
    "an r - factor is said to be _",
    "free _ if it contains any free index , otherwise it is said to be _",
    "dummy_. a dummy r - factor is said to be _ complete _ if it is not ricci .    in the following ,",
    "@xmath169 records the number of branches generated ,    @xmath170 records the serial number of the current branch in process ,    @xmath171 - 1 $ ] records the number of different new indices introduced in the @xmath172-th branch ,    @xmath173 $ ] records the sequence of r - factors having fixed indices in the @xmath172-th branch ,    @xmath174 $ ] records the set of r - factors not in @xmath173 $ ] ,    @xmath175 $ ] records the set of fixed indices in the @xmath172-th branch .",
    "a connected r - monomial @xmath13 whose indices are not integers ; + an order where all free indices @xmath45 all integer indices @xmath45 all input dummy indices .",
    "@xmath176 , the pre - normal form of @xmath13    set @xmath177 sequence of free r - factors of @xmath13 , sorted in increasing order .",
    "+ set @xmath178 set of dummy ricci r - factors . + set @xmath179 set of complete r - factors .",
    "set @xmath180 sequence of r - factors of @xmath13 each in pre - normal form .",
    "if any element of @xmath13 is of the form @xmath181 or @xmath182 , return 0 and exit .",
    "+ if @xmath183 , return @xmath13 and exit .",
    "set @xmath184 , set @xmath185 .",
    "* switch * ( @xmath186 )    * case * @xmath187 * : *  ( case of example 1 )    .6 cm set @xmath188:=1 $ ] , set @xmath189:=$ ] set of free indices of @xmath190 .",
    ".6 cm set @xmath191:=e$ ] , set @xmath192:=l\\cup c$ ] .",
    "+ .6 cm execute procedure ` seridx ` .",
    "* case * @xmath193 * , * @xmath194 * : *  ( case of example 2 )    .6 cm * switch * ( @xmath195 ) + .6 cm * case @xmath196 : *  ( @xmath13 must be in the form @xmath197 )    1.2 cm return @xmath198 and exit .",
    ".6 cm * case @xmath199 : *    1.2 cm set @xmath200 .",
    "+ 1.2 cm * for * @xmath201 from 1 to @xmath202 , let @xmath203 $ ] be the @xmath201-th element of @xmath204 , * do *    1.8 cm let @xmath205 be the index of multiplicity 2 in @xmath203 $ ] , and @xmath206 be the other two indices .    1.8 cm set @xmath207:=$ ] pre - normal form of @xmath203 $ ] after renaming @xmath208 as @xmath209 respectively .    1.8 cm set @xmath210:=l\\cup c\\backslash \\{l[i]\\}$ ] after the above renaming",
    ".    1.8 cm set @xmath211:=$ ] pre - normal form of @xmath203 $ ] after renaming @xmath212 as @xmath209 respectively .",
    "1.8 cm set @xmath213:=l\\cup c\\backslash \\{l[i]\\}$ ] after the above renaming",
    ".    1.8 cm set @xmath214=v[2i]:=\\{1 , 2 , 3\\}$ ] , set @xmath215=i[2i]:=4 $ ] .",
    "1.2 cm * end for *    1.2 cm execute procedure ` seridx ` .",
    ".6 cm * end switch *    * default *  ( case of example 3 , @xmath216 )    .6 cm set @xmath217 .",
    ".6 cm * for * @xmath201 from 1 to @xmath218 , let the @xmath201-th element @xmath219 $ ] of @xmath220 be of the form @xmath221 , * do *    1.2 cm * for * all permutation @xmath222 , where @xmath223 , * do *    1.8 cm set @xmath224",
    ".    1.8 cm set @xmath225:=$ ] pre - normal form of @xmath219 $ ] after renaming @xmath226 as @xmath227 respectively",
    ".    1.8 cm set @xmath228:=c\\backslash \\{c[i]\\}$ ] after the above renaming",
    ".    1.8 cm set @xmath229:=\\{1 , 2 , 3 , 4\\}$ ] , set @xmath230:=5 $ ] .",
    "1.2 cm * end for *    .6 cm * end for *    .6 cm execute procedure ` seridx ` .    *",
    "end switch *",
    "@xmath176 .",
    "@xmath231 , q_f[k ] , q_d[k ] , v[k]$ ] .",
    "set @xmath232 .",
    "* for * @xmath201 from 1 to @xmath233 $ ] , let @xmath234[i]$ ] be the @xmath201-th element of @xmath234 $ ] , * do *    0.6 cm if @xmath234[i]$ ] has any index in @xmath235 $ ] , set @xmath236[i]\\}$ ] .",
    "* end for *    set @xmath237:=q_f[k]$ ] appended by the sorted @xmath238 in increasing order .    set @xmath234:=q_d[k]\\backslash w$ ] .    *",
    "if * @xmath237 $ ] has any index not in @xmath235 $ ] , let @xmath239 denote an element of @xmath235 $ ] , let @xmath240 denote an index not in @xmath235 $ ] , then    0.6 cm set @xmath241 first element of @xmath237 $ ] having index not in @xmath235 $ ] .",
    "0.6 cm * switch * @xmath242    0.6 cm * case * @xmath243 or @xmath244 * : * 1.2 cm set @xmath237:=q_f[k]$ ] after renaming @xmath205 as @xmath245 $ ] .",
    "1.2 cm set @xmath234:=q_d[k]$ ] after the same renaming .",
    "1.2 cm set @xmath235:=v[k]\\cup \\{i[k]\\}$ ] , set @xmath245:=i[k]+1 $ ] .",
    "0.6 cm * case @xmath246 : * 1.2 cm set @xmath237:=q_f[k]$ ] after renaming @xmath247 as @xmath245 , i[k]+1 $ ] respectively",
    ".    1.2 cm set @xmath234:=q_d[k]$ ] after the same renaming .",
    "1.2 cm set @xmath235:=v[k]\\cup \\{i[k ] , i[k]+1\\}$ ] , set @xmath245:=i[k]+2 $ ] .",
    "0.6 cm * case @xmath248 : * 1.2 cm execute procedure ` branch ` .",
    "0.6 cm * case @xmath249 : * 1.2 cm set @xmath237:=q_f[k]$ ] after renaming @xmath205 as @xmath245 $ ] .",
    "1.2 cm set @xmath234:=q_d[k]$ ] after the same renaming .",
    "1.2 cm set @xmath235:=v[k]\\cup \\{i[k]\\}$ ] , set @xmath245:=i[k]+1 $ ] .",
    "1.2 cm execute procedure ` branch ` .    0.6 cm * end switch *    * end if *    * if * @xmath237\\succ p$ ] then    0.6 cm set @xmath250 .",
    "* else if * either @xmath234 $ ] has any index in @xmath235 $ ] or @xmath237 $ ] has any index not in @xmath235 $ ] , then    0.6 cm execute ` seridx ` .    * else *   ( @xmath234=\\emptyset$ ] by the connectedness )    0.6 cm set @xmath237:=q_f[k]$ ] after the coefficients of its elements are multiplied .",
    "0.6 cm * if * @xmath251 , then set @xmath252 $ ] .",
    "0.6 cm * else if * @xmath253 $ ] , then set @xmath254 , and exit .    0.6 cm * else * set @xmath255)$ ] .",
    "0.6 cm * end if *    0.6 cm set @xmath250 .",
    "* end if *    if @xmath256 then execute ` seridx ` , else exit .",
    "@xmath257 , q_f[k ] , q_d[k ] , v[k]$ ] .    set @xmath258 3rd , 4th index of @xmath259 respectively .",
    "set @xmath260 r - factor in @xmath237\\cup q_d[k]$ ] other than @xmath259 that contains @xmath261 respectively .",
    "@xmath262 $ ] and @xmath263 , then    0.6 cm set @xmath237:=q_f[k]$ ] after renaming @xmath261 as @xmath245 , i[k]+1 $ ] respectively .",
    "0.6 cm set @xmath234:=q_d[k]$ ] after the same renaming .    * else if * @xmath264 $ ] and @xmath265 , then    0.6 cm set @xmath237:=q_f[k]$ ] after renaming @xmath266 as @xmath245 , i[k]+1 $ ] respectively .    0.6 cm set @xmath234:=q_d[k]$ ] after the same renaming .    * else *  ( both @xmath267 are in @xmath234 $ ] )    0.6 cm set @xmath237:=q_f[k]$ ] after renaming @xmath261 as @xmath245 , i[k]+1 $ ] respectively",
    ".    0.6 cm set @xmath234:=q_d[k]$ ] after the same renaming .    0.6 cm set @xmath268 $ ] after renaming @xmath266 as @xmath245 , i[k]+1 $ ] respectively .",
    "0.6 cm * if * @xmath269 then    1.2 cm set @xmath270 .",
    "1.2 cm set @xmath271:=w$ ] , set @xmath272:=q_d[k]$ ] after the same renaming .",
    "1.2 cm set @xmath273:=v[k]\\cup \\{i[k ] , i[k]+1\\}$ ] , set @xmath274:=i[k]+2 $ ] .",
    "0.6 cm * end if *    * end if *    set @xmath235:=v[k]\\cup \\{i[k ] , i[k]+1\\}$ ] , set @xmath245:=i[k]+2 $ ] .",
    "_ complexity analysis : _",
    "[ lem : pnom ] let @xmath275 be the total number of branches generated in ` pnom`@xmath276 , where @xmath13 is a connected r - monomial of degree @xmath2 . then @xmath277 .    _",
    "proof_. let the number of free , dummy ricci , complete , r - factors in @xmath13 be @xmath278 , respectively",
    ". then @xmath279 .",
    "the following are trivial facts :    if @xmath280 is a free r - factor , then it generates at most two branches in both ` pnom ` and ` seridx ` ; for example , this can happen when @xmath281 or @xmath249 , where the @xmath239 are fixed indices and the @xmath240 are old dummy indices .",
    "if @xmath13 has no free r - factor but has ricci ones , then in ` pnom ` , the leading ricci r - factor has @xmath282 options , while in ` seridx ` a ricci r - factor never generates any new branch .",
    "if @xmath13 has only complete r - factors , then in ` pnom ` , the leading complete r - factor has @xmath283 options , while in ` seridx ` a complete r - factor generates at most one more branch , just as a free r - factor does .    when @xmath284 , then @xmath285 .",
    "when @xmath286 but @xmath287 , then @xmath288 ; when @xmath289 , then @xmath290 .",
    "@xmath150    .2 cm in ` pnom ` , generating a complete branch takes @xmath291 operations .",
    "by lemma [ lem : pnom ] , the complexity of ` pnom ` is @xmath15 .",
    "the _ normal form _ of an r - monomial @xmath13 is an r - polynomial whose index sequence is the r - normal form of the detailed graph of @xmath13 . for an r - polynomial , its _ normal form _",
    "is the linear combination of the normal forms of its terms .",
    "the _ extension _ of @xmath13 , denoted by @xmath292 , is an r - polynomial whose detailed graph is the detailed extension of the detailed graph of @xmath13 .",
    "all the r - monomials having the same connection multigraph with @xmath13 are terms of @xmath292 up to coefficient .    to see how @xmath292 can help computing @xmath293 , let us check a well - known example @xcite .",
    "0.2 cm _ example 4 .",
    "_ let @xmath294 ; it is already in pre - normal form .",
    "first , @xmath295 in ( [ pre : set ] ) where @xmath296 , @xmath297 , and @xmath298 .",
    "so & ( ext(f ) ) + = & ( _ 0 ( _ 12 r(12,34 ) + _ 13 r(13,42 ) + _ 14 r(14,23 ) ) + & ( _ 22 r(13,24 ) + _ 23 r(12,43 ) + _ 24 r(14,32 ) ) ) + = & _ 0 ( _ 12 _ 22 + _ 12 _ 24 + _ 13 _ 23 + _ 13 _ 24 + _ 14 _ 22 + _ 14 _ 23 ) r(12,34)r(13,24 ) + & -_0(_12 _ 23 + _ 13 _ 22 + _ 14 _ 24 ) r(12,34)r(12,34 ) . [ ex4:ext ]",
    "let @xmath299 and @xmath300 .",
    "then @xmath301 in lexicographic order .",
    "setting @xmath302 in ( [ ex4:ext ] ) , we get the following bianchi relation on the first r - factor of @xmath13 : @xmath303 setting @xmath304 in ( [ ex4:ext ] ) , we get the following bianchi relation on the second r - factor of @xmath13 : @xmath305 solving the two equations in variables @xmath306 , we get the solution @xmath307 .",
    "so @xmath308 is the normal form of @xmath13 .",
    "0.2 cm    example 4 suggests the following procedure of normal form computing : let connected r - monomial @xmath13 take the form ( [ ex : loop : no ] ) where every @xmath28 represents @xmath106 , then the pre - normal form of its extension ( [ pre : set ] ) is evaluated to zero @xmath2 times under @xmath2 special evaluations of the parameters @xmath51 s : for @xmath54 , the @xmath201-th evaluation is by setting @xmath309 .",
    "denote by @xmath310 the set of parameters @xmath51 s in @xmath292 other than @xmath311 . then @xmath312 . let there be @xmath313 different pre - normal r - monomials in @xmath314 .",
    "denote them by @xmath114 following the lexicographic order . that @xmath315 under the above @xmath2 special evaluations gives @xmath2 linear equations @xmath316",
    "where @xmath317 , and @xmath318 is a matrix whose entries are in @xmath319 $ ] . solving the linear system by gauss - jordan elimination",
    ", one gets the * rref * @xmath320 : @xmath321 for @xmath322 , where @xmath323 .    in each equation of @xmath320 , divide the expression on the left side into two sub - expressions : sub - expression 1 contains the terms with coefficient in @xmath18 , and sub - expression 2 contains the rest .",
    "denote by @xmath324 the union of the sub - expression 1 s from the equations of @xmath320 , and denote by @xmath325 the union of the sub - expression 2 s .",
    "then each element of @xmath325 must be equal to zero , and we get a set of at most @xmath326 linear equations in the variables @xmath327 where @xmath328 is in a subset of @xmath329 . computing the rref of this linear system , we get @xmath330 . continuing the selection of terms with coefficient @xmath331 in @xmath332 and the computing of an rref @xmath333 of the selected new linear system",
    ", we finally get a complete rref with coefficient in @xmath18 , which is composed of the @xmath334 s in the @xmath335 s .",
    "the complete rref obtained by the above procedure is the rref of linear system ( [ triangulate ] ) .",
    "_ let @xmath336 be the complete rref obtained from @xmath337 .",
    "then any equation in @xmath338 has all the coefficients in @xmath18 , _",
    "i.e. _ , @xmath339 .",
    "since @xmath338 is obtained from @xmath340 by elementary row transformations with coefficients in @xmath341 , every equation of @xmath342 is a @xmath341-linear combination of the equations in @xmath338 .",
    "we use @xmath343 to denote this relation .",
    "similarly , @xmath344 also has all its coefficients in @xmath18 , and @xmath345 continuing this argument , we get sub_q(_1 ) , sub_(_1 ) _ q ( )  _ i=1^n sub_q(_i ) _ q ( ) . [",
    "proof : end ]    let @xmath346 be a linear system obtained from @xmath347 by @xmath348 different generic @xmath349-specifications of the parameters in @xmath310",
    ". then @xmath350 has @xmath351 rows .",
    "let @xmath352 be the linear system ( [ triangulate ] ) of @xmath353 rows .",
    "denote by @xmath354 the row space of a matrix @xmath355 .    then @xmath356 . by ( [ proof : end ] ) , @xmath357 .",
    "so @xmath358 .",
    "conversely , let @xmath115 be the rref of @xmath359 , let the equations in @xmath360 be @xmath321 for @xmath361 , where @xmath362 .",
    "then for all @xmath363 , @xmath364 and the linear dependency is represented explicitly by a row of @xmath115 .",
    "let there be an equation @xmath365 in which @xmath366 .",
    "then @xmath367 is of the form @xmath368 where + ( 1 ) @xmath369 and is linear in the @xmath327 for @xmath370 ; + ( 2 ) @xmath371 $ ] and are both linear in the @xmath327 for @xmath370 ; + ( 3 ) @xmath372 $ ] ; + ( 4 ) either @xmath163 or @xmath13 has no term in @xmath373 ; + ( 5 ) either @xmath374 or no term of @xmath118 can be divided by @xmath56 ; + ( 6 ) @xmath375 .    using the rows of @xmath115 to make elementary row transformations to @xmath367 ,",
    "it is easy to see that @xmath367 is changed into @xmath376 where + ( 1 ) @xmath377 , @xmath378 , @xmath379 ; + ( 2 ) @xmath380 ; + ( 3 ) either @xmath381 or every term of @xmath382 $ ] has degree @xmath383 ; + ( 4 ) either @xmath384 or no term of @xmath385 $ ] can be divided by @xmath56 .",
    "we prove that for all @xmath386 , @xmath387 .",
    "when @xmath365 is replaced by the corresponding @xmath388 equations @xmath389 for @xmath390 , we get @xmath388 equations _ kj ( _ k+_k|_i+)x_k=0 , [ proof : eqi ] where @xmath391 by generic specification @xmath201 , and so for the @xmath392 .",
    "these equations can all be obtained from @xmath360 by @xmath18-coefficient elementary row transformations .",
    "if for some @xmath386 , @xmath393 , then in the @xmath394-dimensional vector space with coordinates @xmath395 , hyperplane @xmath396",
    "generically does not meet hypersurface @xmath397 .",
    "this means we can choose a generic specification @xmath201 such that @xmath398 . under this generic specification , ( [ proof : eqi ] ) is a nontrivial linear relation among the @xmath327 where @xmath370 .",
    "this violates the rref property of @xmath359 that the @xmath399 are @xmath18-linearly independent .",
    "so @xmath400 is identical to zero for all @xmath386 , hence @xmath401 is identical to zero .",
    "this means @xmath402 is obtained from @xmath367 by applying some @xmath341-coefficient elementary row transformations induced by @xmath115 .    applying this argument to all equations of @xmath320",
    ", we get that all elements of @xmath324 and @xmath325 can be obtained from @xmath359 by @xmath341-coefficient elementary row transformations .",
    "continue this argument to @xmath330 , then inductively to all @xmath403 for @xmath404 , till @xmath405 .",
    "in the end , @xmath406 can be obtained from @xmath359 by @xmath341-coefficient elementary row transformations .",
    "now make @xmath388 generic specifications of @xmath310 to turn the @xmath341-coefficient elementary row transformations into @xmath349-coefficient ones .",
    "we finally get @xmath407 . @xmath150",
    ".2 cm    as a corollary , if @xmath116 is up to coefficient a leading variable @xmath408 in an equation @xmath409 of the complete rref , say @xmath410 , then the normal form of @xmath13 is @xmath411 , else @xmath116 is the normal form of @xmath13 .",
    "@xmath13 , a connected r - monomial without integer indices .    a @xmath18-linear rref in pre - normal r - monomials .",
    "set @xmath412 after like term combination .",
    "set @xmath413 sorted ascending sequence of the monic r - monomials of @xmath118 .",
    "set @xmath414 elements of @xmath56 .",
    "set @xmath415 .    * for * @xmath416 to @xmath2 * do *    .6 cm set @xmath417 after the evaluation @xmath418 .",
    ".6 cm set @xmath419 .",
    "* end for *    set @xmath420 coefficient matrix of @xmath421 in variables @xmath422\\succ \\ldots\\succ h[m]$ ] , where @xmath423 $ ] denotes the @xmath201-th element of @xmath56 .",
    "set @xmath424 , set @xmath425",
    ".    * do *    .6 cm set @xmath426 rref of @xmath421 , where rows having zero only are removed .",
    ".6 cm set @xmath427 number of rows , columns of @xmath428 respectively .",
    ".6 cm set @xmath429 column number of the first column of @xmath428 having entry @xmath331",
    ".    .6 cm * if * @xmath430 then    1.2 cm set @xmath420 matrix of zeroes with size @xmath431",
    ".    1.2 cm * for * @xmath432 to @xmath433 , * do *    1.8 cm * for * @xmath434 to @xmath435 , let @xmath436 $ ] be the @xmath437 entry of @xmath428 , * do *    2.4 cm set @xmath438 the term of @xmath436 $ ] in @xmath18 .",
    "2.4 cm set @xmath436:=w$ ] , set @xmath439:=q[i , j]-w$ ] .",
    "1.8 cm * end for *    1.2 cm * end for *    .6 cm * end if *    .6 cm set @xmath440 augmented on the left by the @xmath441 matrix of zeroes .",
    ".6 cm set @xmath442 after appending @xmath428 .",
    ".6 cm set @xmath443 .",
    "* while * @xmath430 .",
    "@xmath444 , \\ldots , h[m])^t=0 $ ] .",
    "@xmath13 , an r - polynomial without integer indices .    the normal form of @xmath13 .    set @xmath445 set of upper , lower free indices in @xmath13 respectively .",
    "( pre - normalizing maximal connected r - submonomials )    set @xmath179 maximal connected monic r - submonomials in the terms of @xmath13 .    * for * @xmath432 to @xmath446 , let @xmath219 $ ] be the @xmath201-th element of @xmath220 , * do *    0.6 cm set @xmath447:=\\texttt{pnom}(c[i])$ ]",
    ".    0.6 cm set @xmath448 after replacing @xmath219 $ ] with @xmath447 $ ] and combining like terms .",
    "* end for *    if @xmath163 then return @xmath449 and exit .",
    "( normalizing maximal connected r - submonomials )    set @xmath179 maximal monic connected r - submonomials in the terms of @xmath13 .",
    "set @xmath450 .    * do *    0.6 cm * if * @xmath451)=1 $ ] , then    1.2 cm set @xmath452=c[1]\\}$ ] , set @xmath453\\}$ ] .    0.6 cm * else *    1.2 cm set @xmath454)$ ] .    1.2 cm * for * @xmath432 to @xmath446 , * do *    1.8 cm * if * @xmath219 $ ] is a leading variable of @xmath421 , then    2.4 cm set @xmath455 $ ] after applying @xmath421 as elimination rules",
    ".    2.4 cm set @xmath456=w\\}$ ] , set @xmath457\\}$ ] .    1.8 cm * else if * @xmath219 $ ] is a variable of @xmath421 , then    2.4 cm set @xmath456=c[i]\\}$ ] , set @xmath457\\}$ ] .",
    "1.8 cm * end if *    1.2 cm * end for *    0.6 cm * end if *    * while * @xmath458 .",
    "( ordinary polynomial operations ; all terms are sorted , so are the maximal connected r - submonomials within each term )    set @xmath448 after applying @xmath33 as substitution rules , making linear expansion and combining like terms .    if @xmath163 then return @xmath449 and exit .    ( renaming integer indices in each term )    * for * @xmath432 to @xmath459 terms of @xmath13 , let @xmath460 $ ] be the @xmath201-th term , * do *    0.6 cm set @xmath179 sequence of maximal connected r - submonomials of @xmath460 $ ]",
    ".    0.6 cm * if * @xmath461 then    1.2 cm set @xmath462:=0 $ ] .    1.2 cm * for * @xmath416 to @xmath463 * do *    1.8 cm set @xmath464 : = $ ] maximal integer index in @xmath465 $ ] .",
    "1.8 cm for @xmath466 to @xmath464 $ ] , replace dummy index @xmath172 in @xmath465 $ ] with dummy index @xmath467+k$ ] .",
    "1.8 cm set @xmath464:=w[j]+w[j-1]$ ] .",
    "1.2 cm * end for *    0.6 cm * end if *    0.6 cm set @xmath460:=c$ ] .    * end for *    restore the row characters of the indices in @xmath13 : free indices are restored according to their records @xmath468 and @xmath204 ; a dummy index in its first / second occurrence of a term is set to the upper / lower row respectively .",
    "@xmath13 .",
    "_ complexity analysis _ :    let @xmath13 be a connected r - monomial of degree @xmath2",
    ". then ` normal`@xmath276 takes @xmath469 operations .",
    "_ let @xmath13 be in the form of ( [ ex : loop : no ] ) , then @xmath292 has @xmath87 terms .",
    "computing the pre - normal form of @xmath292 takes @xmath470 operations .",
    "let @xmath313 be the number of r - monomials in @xmath314 after like term combination .",
    "then @xmath471 . in ` rebe ` , computing the rref @xmath320 with coefficient field @xmath341 takes @xmath472 arithmetic operations upon multivariate rational functions .",
    "let @xmath473 , then @xmath325 when written as a matrix has the size of @xmath474 at most , so computing @xmath330 takes @xmath475 operations , which is @xmath476 when @xmath477 .",
    "going this way , computing @xmath333 takes @xmath478 operations , till @xmath479 $ ] . since _",
    "i=0^[m / n ] n^2 ( m - in ) = n^2m([m / n]+1)-n^3[m / n]([m / n]+1)/2 = o(mn(m+n ) ) , computing the complete rref takes @xmath480 operations , which is @xmath469 when @xmath481 .",
    "the overall complexity is thus @xmath469 .",
    "@xmath150    .2 cm function ` rebe ` in ` pnom ` can be replaced by other methods for computing the rref of ( [ triangulate ] ) .",
    "direct solving of ( [ triangulate ] ) by gauss - jordan elimination has complexity @xmath482 .",
    "although it is not fair to take the complexity of an arithmetic operation on rational functions as the same with that on rational numbers , function ` rebe ` reduces the equation - solving complexity to @xmath480 , which is polynomial in the case when @xmath313 is the size of a polynomial in @xmath2 .    notice that every row of ( [ triangulate ] ) has at most three nonzero entries",
    "it may be possible that the iterative methods for sparse @xmath483-linear systems be applied to the sparse @xmath18-linear system ( [ triangulate ] ) for infinitely many * accurate * @xmath18-valued solutions by solving the corresponding normal equations @xcite , so that the sparse solving has complexity @xmath484 .",
    "even so , ` rebe ` is valuable in the case when @xmath485 .",
    "in this paper we establish the graph algebra extension theory and develop an algorithm of normalizing riemann tensor polynomials based on this theory .",
    "the theory can be extended to the case involving covariant derivatives of the riemann tensor , and other types of tensor in a straightforward way .",
    "future work includes such extensions , and application to theorem proving in riemannian geometry .",
    "fulling sa , king rc , wybourne bg , and cummins cj .",
    "normal forms for tensor polynomials : i. the riemann tensor , _ class . quantum .",
    "_ , 1992 , * 9 * : 1151 - 1197 .",
    "ilyin va , and kryukov ap .",
    "symbolic simplification of tensor expressions using symmetries , dummy indices and identities , _ proc .",
    "issac91 _ : 224 - 228 .",
    "liu j , li h , and zhang l. a complete classification of canonical forms of a class of riemann tensor indexed expressions and its applications in differential geometry ( in chinese ) , _ sci . sin .",
    "_ , 2013 , * 43 * : 399 - 408",
    ".    liu j. normalization in riemann tensor polynomial ring . in : _",
    "china computer algebra conference 2016 _ , shenzhen , nov .",
    "10 - 11 , 2016 .",
    "manssur lru , portugal r , and svaiter bf .",
    "group - theoretic approach for symbolic tensor manipulation , _ internat .",
    "j. modern phys .",
    "c _ , 2002 ,",
    "* 13*(7 ) : 859 - 879 ."
  ],
  "abstract_text": [
    "<S> tensor expression simplification is an  ancient \" topic in computer algebra , a representative of which is the canonicalization of riemann tensor polynomials . </S>",
    "<S> practically fast algorithms exist for monoterm canonicalization , but not for multiterm canonicalization . targeting the multiterm difficulty , in this paper we establish the extension theory of graph algebra , and propose a canonicalization algorithm for riemann tensor polynomials based on this theory .    </S>",
    "<S> * key words : * tensor expression simplification ; riemann tensor polynomial ; multiterm canonicalization ; graph algebra ; multigraph extension . </S>"
  ]
}
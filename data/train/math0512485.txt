{
  "article_text": [
    "in this section we introduce some general notions .",
    "the rubik s cube consists of 26 smaller cubies . we divide those cubies in three sets : the edge cubies , the corner cubies and the center cubies .",
    "the edge cubies are those cubies that only have two colours and the corner cubies are those that have three colours .",
    "finally the center cubies have only one color .",
    "so observe that an edge cubie has two faces and a corner cubie three faces .",
    "+ we will work with gap .",
    "gap is a computer algebra program and has a lot of special functions that makes handling of sets , permutations and other mathematical structures very easy .",
    "a manual with all instructions can be found at @xcite . when one wants to work with the cube group in gap one has to specify its generators as permutations in cycle form .",
    "one suggestion of how this can be done is given in martin schoenerts example @xcite . here",
    "the same example is used with a different enumeration : +   + @xmath0 + the picture above is a picture of the cube and we have enumerated each corner cubie face and each edge cubie face .",
    "u stands for up , l for left , r for right , d for down , f for front , b for back .",
    "+ we use the same letters for the generators as for the faces .",
    "for example the generator u twists the face `` up '' clockwise .",
    "we define the generators by typing in gap :    looking at these permutations one sees that the edges are numerated from 1 to 24 and the corners from 25 to 48 .",
    "we generate the cube group by typing in gap :    .... gap > cube:=group(u , l , f , r , b , d ) ;   < permutation group with 6 generators > ....    now we want to let the cube act on the points 1 to 48 .",
    "and we want the orbit of this action .",
    "this is done by typing in gap :    .... gap > orbits(cube,[1 ..",
    "48],onpoints ) ; [ [ 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],[25 , 26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48 ] ] ....    the response to the last command shows that points 1 to 24(edges ) are permuted among themselves and the points 25 to 48(corners ) are permuted among themselves .",
    "this means that each group element of the cube can be uniquely written as the product of a permutation on the set 1 to 24 and a permutation on the set 25 to 48 .",
    "we will write it as @xmath1 where @xmath2 is a permutation on the set 1 to 24 and @xmath3 is a permutation on the set 25 to 48 .",
    "the edge group is the group with generators @xmath4 restricted to 1 to 24 i.e. if we write the generators as @xmath5 then the edge group is generated by @xmath6 .",
    "we denote it by @xmath7 .",
    "the corner group is defined to be the group with generators @xmath8 .",
    "the rubik cube group will be denoted by @xmath9 .",
    "note that neither the edge group or the corner group is a subgroup of the cube .",
    "actually if we for example intersect the corner group with the cube group we get a group two times smaller then corner group .",
    "the analogue holds for the edge group .",
    "this can be verified in gap .",
    "the intersection of the corner group with the cube group we will call `` the group that fixes edges '' or @xmath10 and is very important in this text .",
    "the direct product between the corner group and the edge group gives a group twice the size of rubik cube group and rubik cube group is a subgroup of index 2 of this direct product .",
    "this can be checked with gap .",
    "+ each element in a group can be written as an word where the generators of the group and the inverses of the generators are the letters .",
    "the length of an element of the group is defined as the minimal number of letters required to express it .",
    "the length of an element @xmath11 is written @xmath12 when we use notation @xmath12 we mean the length of an element in @xmath9 with respect to generators @xmath13 .",
    "and we write @xmath14 when we mean the length of an element in the group @xmath7 with respect to generators @xmath15 .",
    "define @xmath16 to be the group with generators + @xmath17 + and + @xmath18 .",
    "this group acts on the set @xmath19 by conjugation i.e. if @xmath20 and @xmath21 then @xmath22 .",
    "the action of conjugation by @xmath23 can be written as a permutation with cycles : + @xmath24 + and the action of @xmath25 : + @xmath26 . +",
    "this action can be extended from @xmath27 to the cube group .",
    "it is evident that two @xmath16 conjugate elements have the same length .",
    "more details about this group can be found in @xcite .",
    "there are two important equivalence relations that we will refer to often in this text : +    1 .",
    "two elements @xmath28 are equivalent if there @xmath29 such that @xmath30 .",
    "we refer to this relation as @xmath31 .",
    "2 .   two elements @xmath28 are equivalent if there @xmath29 such that @xmath30 or @xmath32 .",
    "we refer to this relation as @xmath33 .",
    "+ in both cases two equivalent elements have the same length .",
    "we will also use that the diameter of the cayley graph with respect to generators @xmath34 defined above is 18 .",
    "this table is presented below and was found in @xcite .",
    "the first column gives the number of elements of lengths 0 to 18 .",
    "the second column gives the number of equivalence classes under relation @xmath31 and the second column the number of equivalence classes under relation @xmath33 .    ....",
    "posted to yahoo by tom rokicki on   jan 2 , 2004   dist     positions      unique wrt m     unique wrt m+inv      0                1                 1                    1    1               12                 1                    1    2              114                 5                    5    3             1068                25                   17    4             9819               215                  128    5           89,392             1,886                  986    6          807,000            16,902                8,652    7        7,209,384           150,442               75,740    8       63,624,107         1,326,326              665,398    9      552,158,812        11,505,339            5,759,523   10    4,643,963,023        96,755,918           48,408,203   11   36,003,343,336       750,089,528          375,164,394   12 208,075,583,101     4,334,978,635        2,167,999,621   13 441,790,281,226     9,204,132,452        4,603,365,303   14 277,713,627,518     5,785,844,935        2,894,003,596   15   12,144,555,140       253,044,012          126,739,897   16           23,716               750                  677   17               30                 3                    3   18                1                 1                    1        ---------------     -------------     --------------        980,995,276,800    20,437,847,376     10,222,192,146 ....    this calculation implies that given an arbitrary element in the cube group we need to multiply it by at most 18 generators ( in other words to apply at most 18 moves to it ) to take it in @xmath10(the group that fixes edges ) .",
    "it is well known that the corner group is isomorphic to @xmath35 .",
    "this means physically that each configuration in the corner group can be described as a permutation of the cubies and an orientation of the cubies .",
    "let @xmath36 be such a isomorphism . if @xmath37 then @xmath38 can be uniquely written as @xmath39,\\phi(g)_1\\in s_8,\\phi(g)_2 \\in \\mathbb{z}_3 ^ 7 $ ] .",
    "it is obvious how to find a bijection from @xmath40 to @xmath41 $ ] . call this bijection @xmath42 .",
    "there is a simple way to define a bijective map @xmath43 $ ] .",
    "one can define a natural order relation on permutations in @xmath44 which means that given two permutations @xmath45 and @xmath46 then either @xmath47 or if @xmath48 is the biggest positive integer with the property @xmath49 then @xmath50 . we simply define @xmath51 .",
    "now simply define a bijection @xmath52 $ ] as @xmath53 .",
    "in this paper we show how to construct explicit expressions in generators of length 22 or less for each element in @xmath10(``the group that fixes edges '' ) .",
    "this group has 44089920 elements , this can be shown by typing in gap : since we need at most 18 moves to take an element to @xmath10 and at most 22 moves to take an element of @xmath10 to the identity .",
    "this means also that the diameter of the rubik s cube group is less then or equal to 40 .",
    "we need to introduce some notations . define the following function @xmath54 by @xmath55.we call this map `` projection on the first component '' .",
    "+ now for a fix @xmath56 define the set @xmath57 i.e. the set of all @xmath58 in the cube group that can be expressed as a product of at most @xmath48 generators and @xmath59 for all @xmath60 .",
    "one can easily see that @xmath61 is empty if @xmath62 .",
    "define @xmath63 .",
    "it is obvious that @xmath64 .",
    "so @xmath65 .",
    "+ following relations are helpful when trying to understand the algorithm we will describe :    1 .",
    "@xmath66 2 .",
    "3 .   @xmath68    in order to keep track on which elements we have found generator expressions for , a `` bit vector '' is used .",
    "a `` bit vector '' is a vector in which each entry can take only two values 0 or 1 .",
    "gap uses `` false '' for 0 and `` true '' for 1 .",
    "initially all entries in this `` bit vector '' are set to 1 or `` true '' .",
    "a bijection @xmath69 $ ] was defined on page 6 . when generator expressions for a given element @xmath70 have been found entry number @xmath71",
    "is set to 0 or `` false '' .",
    "when we use the expression `` element @xmath11 has been checked of '' we mean that entry @xmath71 in the `` bit vector '' has been set to `` false '' .",
    "+ we also need to collect information about how a given element can be expressed in generators . in gap",
    "we use for this a set we call `` positions '' .",
    "the algorithm we describe stores only one representative from each equivalence class under relation @xmath33 .",
    "when we write `` store generator expression '' we mean that the generator expression will be saved to the set `` positions '' .",
    "+ now we are ready to describe the main step of the algorithm : + define @xmath72 to be the set @xmath73 . fix a @xmath74 and do following steps :    1 .",
    "compute @xmath75 and generator expressions for its elements 2 .   compute @xmath76 and generator expressions for its elements 3 .",
    "compute @xmath77 and generator expressions for its elements 4 .   for each element @xmath78 in @xmath77 do following steps : 1 .   check if @xmath78 has been checked .",
    "if yes do nothing if no do the following steps 1",
    ".   store generator expression of @xmath78 2 .",
    "compute the orbit of @xmath78 under relation @xmath33 .",
    "3 .   check of every element in the orbit .",
    "5 .   compute @xmath79 and generator expressions for its elements 6 .   for each element @xmath78 in @xmath79 do following steps : 1 .",
    "check if @xmath78 has been checked .",
    "if yes do nothing if no do the following steps 1 .",
    "store generator expression of @xmath78 .",
    "2 .   compute the orbit of @xmath78 under relation @xmath33 .",
    "3 .   check of every element in the orbit .",
    "let @xmath80 be the orbit of @xmath11 under relation @xmath33 .",
    "then the above algorithm checks of every element in @xmath81 .",
    "the algorithm consists of repeating above procedure for enough elements @xmath74 which are not equivalent under relation @xmath33 .",
    "it should be noted that building @xmath82 is the most time consuming step in the algorithm .",
    "once we have @xmath82 it takes no time to build @xmath83 .",
    "that s why we do the above steps for the whole equivalence class .",
    "+ if we for example run the algorithm with @xmath11 choused as identity than 3079007 elements are checked of .",
    "as mentioned above @xmath84 can be written using following formula : @xmath85 in the above algorithm we see how to use it in order to compute each element in @xmath10 as a product of generators .",
    "obviously some elements we compute might have length that is less then 22 . to compute those we use the same algorithm with the exception that @xmath75 is replaced by @xmath86 . and",
    "@xmath87 can be written as : @xmath88 now we have all elements of length less then or equal to 20 in @xmath10 . to get only elements of length exactly 22 we must take the difference between @xmath84 and @xmath87 .",
    "we continue computing the set @xmath89 using the formula : @xmath90 + and finally we compute @xmath91 , @xmath92 , @xmath93 , @xmath94 and @xmath95 . to compute elements of length @xmath48",
    "we simply take the difference @xmath96 .",
    "the program for this calculation is not given here but we give the result on next page .",
    "observe that 22q means length 22 .    ....",
    "distance         nr of pos    unique wrt m     unique wrt m + inv     0q              1            1                1   2q              0            0                0   4q              0            0                0   6q              0            0                0   8q              240          5                3   10q             288          6                3   12q             8764         197              113   14q             116608       2475             1303   16q             840513       17620            9091   18q             9884342      206424           104523   20q             30623418     639362           323859   22q             2615746      54895            28528                  --------     -----",
    "------                  44089920     920980           467424 ....    we have also computed the length of all elements in the `` group that fixes cubies '' .",
    "this is the set of all elements in the rubik cube group such that the cubies are in their correct spot but their orientation is arbitrary .",
    "this is an abelian normal subgroup of the cube .",
    "this can be checked with gap .",
    "the order of this group is 4478976 .",
    "here is the table with lengths of each element :    .... distance         nr of pos   unique wrt m   unique wrt m + inv     0q              1           1              1   2q              0           0              0   4q              0           0              0   6q              0           0              0   8q              0           0              0   10q             0           0              0   12q             441         11             8   14q             3944        87             52   16q",
    "32110       708            396   18q             456025      9656           5009   20q             2873194     60399          30978   22q             1113236     23652          12424   24q             25          4              4                  --------    -----          ------                  4478976     94518          48872 ....    one of the positions of length 24 is the well known `` superflip '' .",
    "this position alone generates the center of the rubik cube group .",
    "the other positions up to conjugation with m are :    ....   f   r ' u   b2 u   r   d   f   u ' b   r   b2 d   b   r ' u ' f ' b   r   u2 d ' ( 24q*,21f )   f   r ' f2 r ' u   f   u   l   b2 r   b   d2 f   r ' b ' d   b   l ' d ' r ' u ' ( 24q * , 21f )   f   r   d2 b ' r ' f   r ' d2 b ' d ' l   f   l2 u   b ' u   f l2 u ' b '      ( 24q * , 20f ) ....",
    "this positions were the only ones not computable in 22q and the expressions in generators were found using michael reids solver see @xcite .",
    "take an element @xmath56 and @xmath97 ( @xmath12 is the length of @xmath11 ) in @xmath7 . then for any element",
    "@xmath98 we need at most @xmath48 moves to make it an element of the form @xmath99.and an element @xmath100 needs at most 22 moves applied on it to make it the identity .",
    "so @xmath101 in @xmath9.there is only one element @xmath102 in @xmath7 with @xmath103 in @xmath7(according to the above diagram ) .",
    "so the only elements in @xmath9 that may need 40 moves are those in the set @xmath104.if a solver solves each position in @xmath105 in less then 40 moves then one gets a new upper bound 39 . actually one only needs to solve a position from each equivalence class under relation @xmath33 which gives about 500000 positions needed to be solved .",
    "this computation has not been done here . but soon after the author posted generator expressions for elements in @xmath10 this has been done by another author .",
    "see @xcite for details .",
    "to begin with we are going to create some sets we are going to work with .",
    "the sets will be presented in gap as lists .",
    "the first one is @xmath106 . + this set",
    "is made by typing in gap :    ....   gap > s:=[u , l , f , b , r , d , u^-1,l^-1,f^-1,b^-1,r^-1,d^-1 ] ; ....    the other sets are : +      @xmath107 the set of all elements in the edge group of length 0 , 2 , 4 , 6 .",
    "+ @xmath108 the set of all elements in the edge group of length 1 , 3 , 5 .",
    "+ @xmath109 the set of all elements in the rubik cube group of length 0 , 2 , 4 , 6 .",
    "+ @xmath110 the set of all elements in the rubik cube group of length 1 , 3 , 5 .",
    "+ the elements of this sets are stored as permutations with disjoint cycles .",
    "@xmath111 contains at entry @xmath112 the same element that @xmath109 contains at entry @xmath112 but stored as products of generators . throughout this program we store a product of generators as a vector whose entries are integers between 1 and 12 .",
    "integer @xmath48 means generator @xmath113 $ ] and @xmath106 was defined above .",
    "+ @xmath114 is analogue to @xmath111 but the set @xmath109 is replaced with @xmath110 .    all the sets containing permutations with cycles are sorted with respect to the natural order relation on permutations which means that given two permutations @xmath45 and @xmath46 then either @xmath47 or if @xmath48 is the biggest positive integer with the property @xmath49 then @xmath50 .",
    "+ the elements in the set @xmath109 are ordered in following way : + @xmath115 .",
    "this is because the first component is a permutation on the set 1 to 24 while the second component a permutation on the set 25 to 48 .",
    "then the set @xmath107 is ordered in following way : + @xmath116 .",
    "note that we refer to an element of @xmath109 as an element of the form @xmath117 although it is stored as a permutation with disjoint cycles .",
    "+ we use two more vectors @xmath118 and @xmath119 where the first has the same size as @xmath108 and the second the same size as @xmath107.the vector @xmath118 contains at position @xmath112 a number that gives the position in @xmath110 where we have the first occurrence of an element of the form @xmath120 .",
    "+ finally we call the `` bit vector '' for @xmath121 which has the same length as @xmath122 ( 88179840 elements ) .",
    "when the program starts all its entries are set to true .",
    "we will predefine some functions in order to make the program code easier : + @xmath123 if n=1 then it returns set @xmath124}$ ] if n=2 returns set @xmath125}$ ] . + @xmath126 returns @xmath127}$ ] .",
    "+ @xmath128 if n=1 returns set @xmath118 if n=2 returns set @xmath119 .",
    "+ @xmath129 this function will give a set of the form @xmath130 and all its elements of length @xmath48 or less .",
    "the returned set is of the form @xmath131}$ ] where the elements of @xmath132 are expressed as the elements of @xmath109 and the elements of @xmath133 are expressed as products of generators .",
    "+ @xmath134 this is a bijective function @xmath135 $ ] .",
    "+ @xmath136 returns the set @xmath137 .",
    "+ @xmath138 for each @xmath139 does @xmath140 .",
    "+ @xmath141.partitions set @xmath132 into equivalence classes under relation @xmath33 defined above and returns a set containing a representative from each class .",
    "+ @xmath142 is a function that converts a text string to a permutation .",
    "this was done so that the attached data do nt take to much space in this paper .",
    "+ @xmath143 if for example @xmath144 $ ] then this function returns @xmath145*s[2]*s[1]*s[4]*s[11]*s[2]$ ]",
    ". + @xmath146 if for example @xmath144 $ ] then it returns @xmath147 $ ] i.e. @xmath148 .",
    "before we describe the code some gap commandos must be explained . those can also be found in the manual @xcite but we describe them here for completeness . to build a set in gap one types :    .... gap > set:= [ ] ; ....    to build a set of sets type :    .... gap > set:= [ [ ] , [ ] , [ ] , [ ] ] ; ....    the above set contains 4 empty subsets . to store the identity in the first subset type in gap :    .... gap > set[1][1]:= ( ) ;",
    "....    now the first set in the set `` set '' contains the identity .",
    "+ to build a `` bit vector '' of size 1000 with all entries set to `` true '' or 1 just type :    .... gap > vec:=blistlist([1 .. 1000],[1 .. 1000 ] ) ; ....    to build a `` bit vector '' with all entries false just type :    .... gap > vec:=blistlist([1 .. 1000 ] , [ ] ) ; ....    if we type in gap :    ....   gap > set:=[1,1 ] ; ....    then we have build a set that contains the same element on two different entries , maybe it is better to call it a list .",
    "but if we type :    ....   gap > set2:=union(set , set ) ; ....    then the set `` set2 '' will contain only element 1 .",
    "if we instead of union would have taken intersection the same thing should have happened .",
    "a union , intersection or difference of two sets will never return a set with doubles .",
    "furthermore after performing those operations the set will even be sorted .",
    "we define all generators we are going to use and the symmetry group in following file : this code will be saved to file gens.txt .",
    "this function builds the sets veven , vodd , vevenr , voddr .",
    "the function first selects generators depending on if we want to build veven , vodd or vevenr , voddr .",
    "if we want to build vevenr , voddr we type :    .... gap > a:=makesetv(1 ) ; ....    the function will return a set of sets containing the sets vevenr and voddr . in the above case a[1 ]",
    "is vevenr and a[2 ] is voddr .",
    "lets describe the algorithm that this program uses :    1 .",
    "first a set of sets is build containing 6 empty sets and a set containing the identity : + .... v:= [ [ ( ) ] , [ ] , [ ] , [ ] , [ ] , [ ] , [ ] , [ ] ] .... 2 .",
    "now take each element v[1 ] and multiply it be each generator and store the result in the next set i.e. v[2 ] .",
    "3 .   now take v[2 ] and multiply each element of it with the generators and store the result in v[3 ] .",
    "remove doubles from v[3 ] and elements contained in v[1 ] .",
    "4 .   now take the next set in v i.e. v[3 ] multiply each element by generators , store the result in v[4 ] remove doubles from v[4 ] and elements contained in v[2 ] .",
    "5 .   continue doing this procedure until v[6 ] i.e. v[6 ] is the last set of which elements will me multiplied by generators and the result stored in v[7 ] 6 .",
    "now return the set \\{union(v[1],v[3],v[5],v[7]),union(v[2],v[4],v[6 ] ) } i.e. \\{veven , vodd}.    see next page for the code of above described function :    this code will be saved to file makesetv.txt",
    ".      this function will build the sets vevenc and voddc .",
    "we remind that this sets contain the same number of elements as vevenr and voddr .",
    "we have defined a list `` s '' above as @xmath149 $ ] . to define it in gap just type :    .... gap > s:=[u , l , f , b , r , d , u^-1,l^-1,f^-1,b^-1,r^-1,d^-1 ] ; ....    we now want to store generator expressions for elements in vevenr and voddr in sets vevenc and voddc if for instance vevenc contains at position 10 generator expression [ 1,2,7 ] then vevenr should contain at position 10 element s[1]*s[2]*s[7 ] .",
    "we will describe an algorithm how to achieve this .",
    "but first we need a few preparations .",
    "gap has a function called `` tuples '' that we will use .",
    "we explain it by giving an example :    .... gap > tuples([1",
    ".. 5],2 ) ;    ....    after typing this gap will return a set containing all possible elements of form @xmath150 with @xmath151 .",
    "and we also use a function called positionset .",
    "we explain it using an example :    .... gap > positionset(veven,(1,2,3 ) ) ; ....    if ( 1,2,3 ) is contained in veven then this function will return a number @xmath48 such that veven[n]=(1,2,3 ) . if it is not contained it will just return fail .",
    "now we are ready to describe the algorithm .",
    "it is described only for vevenc since voddc is analogue :    1 .",
    "build a `` bit vector '' with same size a vevenr with all elements set to `` false '' .",
    "build the set of all tuples on elements \\{1,2,3,4,5,6,7,8,9,10,11,12 } and length 2 .",
    "call this set tu2 .",
    "3 .   take each element @xmath152 and find the position in vevenr of the element @xmath153*s[y]$ ] .",
    "call this position n. if entry number n is `` false '' in the `` bit vector '' , set it to `` true '' and put element @xmath150 in vevenc at position n. if entry number n in the `` bit vector '' is `` true '' then do nothing .",
    "repeat step 2 and 3 for tuples of length 4 and 6 on the set \\{1,2,3,4,5,6,7,8,9,10,11,12}.    the code for this function is given on next page .",
    "as described before vector y1 has the same size as vodd and vector y2 the same size as veven .",
    "we only describe how to build y1 since y2 is analogue . remember that if an element @xmath56 has position @xmath48 in veven then y[n ] contains a number @xmath154 that gives the position in vevenr of the first element who s projection on @xmath7 is @xmath11 . by projection",
    "we mean the map @xmath155",
    ". we use following algorithm to build y2 :",
    "1 .   build a vector `` vtemp '' the same size as vevenr that contains at position @xmath48 the projection of vevenr[n ] on @xmath7 .",
    "2 .   do following for each @xmath156 .",
    "1 .   find position of @xmath11 in veven call it `` pos '' 2 .",
    "find the position of the first occurrence of @xmath11 in vtemp call it `` pos2 '' .",
    "3 .   set y2[pos]=pos2    the code is described below :    this code will be saved to file makesety.txt      here is the program described in the section `` how to map a permutation on a number '' .",
    "it takes a @xmath37 and maps it on @xmath157 .",
    "lets describe how to map a permutation of @xmath44 on numbers [ 1,8 ! ] in more detail . given a @xmath158 we want to determine all elements that are less then @xmath159 with respect to the order relation that was defined on page 11 .",
    "this is a simple combinatorial problem and we give an example of how to determine the number of elements less then a given permutation and then generalize this to an arbitrary one .",
    "take for example @xmath160 .",
    "we divide the set @xmath161 of permutations less than @xmath159 in following disjoint subsets :    1 .   the subset with @xmath162",
    ". then @xmath163 can be any element in the set @xmath164 so this set has size @xmath165 2 .   the subset with @xmath166",
    ". then @xmath167 can be any element in the set @xmath164 so the size of this set is @xmath168 .",
    "the subset with @xmath169 then @xmath170 can be any element in the set @xmath171 and the size of this set is @xmath172 .",
    "4 .   the subset with @xmath173 then @xmath174 can be any element in the set @xmath175 .",
    "the size of this subset is @xmath176 .",
    "the subset with @xmath177 then @xmath178 is in the set @xmath179 .",
    "the size of this set is @xmath180 .",
    "the subset with @xmath181 and @xmath182 can be any element in the set @xmath183 .",
    "the size of this subset is 0 .",
    "the subset with @xmath184 then @xmath185 can be any element in the set @xmath186 .",
    "the size of this subset is @xmath187 .",
    "since all of this subsets are disjoint and their union is @xmath161 it follows that the size of @xmath161 is @xmath188 .",
    "this can be easily generalized for an arbitrary @xmath159 .",
    "let @xmath189 then the number of permutations less than @xmath159 is    @xmath190 the code for bijection @xmath52 $ ] can be seen on next page .",
    "this code will be saved to file permtonr.txt .",
    "+ nobody is expected to follow this code .",
    "that is why a program is given to verify that this function is a bijection and it is all that is needed for the proof :    if the program returns true then it is a surjection and consequently a bijection .",
    "this function builds @xmath75 and @xmath82 . to build @xmath75 just type :    .... gap",
    "> makeset(10,g ) ; ....    we explain the algorithm for @xmath82    1 .   build an empty set @xmath105 2 .",
    "for each element @xmath102 in veven do 1 .",
    "build the set @xmath191 and the set @xmath192 .",
    "2 .   build the set @xmath193 and put each element from this set in @xmath105 .",
    "3 .   return the set @xmath105 ( or the set @xmath194    the implementation of this function as code can be seen on next page .",
    "this code will be saved to file makeset.txt      this function returns a set that contains the image under the bijection @xmath52 $ ] of every element equivalent to @xmath195 under relation @xmath33 .",
    "the algorithm is evident and need not to be explained .",
    "this code will be saved to file eqclassrel2.txt      this function has as input a set of indices or numbers and is called by command :    .... gap > writercv(set ) ;    ....    the command above takes every @xmath196 and sets entry @xmath48 in the `` bit vector '' to `` false '' or 0 .",
    "this code will be saved to file writercv.txt      as mentioned earlier in the text the algorithm finds generator expressions for elements in @xmath10 and each time it does this we need to give it a @xmath56 .",
    "it was also mentioned that if given the algorithm a @xmath56 that is equivalent under relation @xmath33 with another @xmath197 that has been before , then this @xmath197 will not yield any new generator expressions .",
    "@xmath198 returns a set containing only one representative from each equivalence class under relation @xmath33 .",
    "the algorithm is simple and can be seen directly by looking at the code .",
    "this code will be saved to file redf.txt      part of the @xmath56 we are giving as input to the algorithm will come from the set @xmath199 . with this set we find generator expression for 43984820 elements in @xmath10 . to find expressions for the rest of 105100",
    "we need some more @xmath56 that has been extracted from a large list and are given at the end of this paper .",
    "this list took about 2 days to find on 20 computers .",
    "it consisted of representatives under relation @xmath33 of elements of the set @xmath200 and very few from @xmath201 . from the last set only 17 .",
    "those were found using a solver found at @xcite . in order to compress the space the elements have been well coded and in order to make them permutations in @xmath7 we need the function @xmath202 . if we want to convert an element of this list to a permutation we type in gap :    .... gap > chartoperm(\"acekrihownvs \" ) ; ( 4,6,5,21,23,15,7,22,8,13,10,16,12,24)(14,20 )    ....    since this is just something technical it needs no further explanation .",
    "this code will be saved to file chartoperm.txt      we write elements in generator form as a vector . for example [ 1,3,2 ] means the element @xmath203*s[2]*s[3]$ ] and @xmath204 was defined above .",
    "when we want a conversion from the form [ 1, .. ,.8 ] to a permutation with cycles we use the function multel .",
    "its code can be seen below :      this function takes an element in generator form as defined above and maps it to its inverse also given in generator form .      the algorithm for the program",
    "was explained in the beginning and here we give the implementation as gap code : this code will be saved to file mainprg2.txt",
    "to run the program we make use of all above functions and sets . to read those in memory and start the program the following code is used : this code is put in a file called start.txt . and all the files(including datav.txt at the end of the paper ) in the @xmath205gap4r4@xmath205bin catalog .",
    "the program is run under unix with command :    .... gap.sh -o 1000 m start.txt ....    the program will output :    ....   positions checked:3079007 positions left:41010913   positions checked:18604155 positions left:25485765   positions checked:19391883 positions left:24698037   positions checked:22124037 positions left:21965883   ...... ....    and a couple of hours later ...    ....   positions checked:44089776 positions left:144   positions checked:44089824 positions left:96   positions checked:44089872 positions left:48   positions checked:44089920 positions left:0   gap > ....",
    "as told in the beginning we need to compute each element in the group @xmath206 in at most 22 moves .",
    "this program does this . when the program is finished the set `` positions '' contains generator expressions of each element in @xmath10 .",
    "an element of `` positions '' has the form @xmath207 $ ] . here",
    "@xmath208 means @xmath209 , @xmath210 means @xmath211 more general @xmath48 means @xmath113 $ ]",
    ". actually not all elements of @xmath10 are contained in positions but only representatives from each equivalence class under relation @xmath33 . to make a final check that confirms that this set contains a representative from each equivalence class under relation @xmath33 the following program can be run :",
    "this program takes each element in `` positions '' converts it to a permutation with disjoint cycles ( this is the form which gap can handle best ) .",
    "then build all elements in the equivalence class under relation @xmath33 and checks them of in the bit vector .",
    "after this procedure is done the program counts the number of entries in the bit vector that has been set to `` false '' and prints them out . if it returns 44089920 then every element in @xmath10 has been checked of and we are finished .",
    "note that this final check actually proves the whole content of this paper is correct .",
    "actually this verification has already been done by bruce norskog soon after i published the results of this work on the internet .",
    "it might seem that we were lucky that all elements in @xmath10 had length 22 or less but the truth is that we had a backup plan if this would be the case .",
    "we find generator expressions for each element @xmath11 in the rubik cube group in two steps .",
    "first @xmath11 is multiplied by @xmath212 from the left and then @xmath213 and afterwards @xmath214 is multiplied by @xmath215 which takes it to the identity .",
    "@xmath216 assume that @xmath217 has length 24 .",
    "assume that the diameter of the rubik cube group is 24 .",
    "compute the set + @xmath218 .",
    "then each element of this set has length 23 or less .",
    "then @xmath219 where @xmath220 and @xmath221 is a generator .",
    "then @xmath222 where @xmath223 is some generator and @xmath224 is an element of length 17 or less .",
    "when writing @xmath225 we can choose @xmath226 and cancellation occurs giving that @xmath227 has length 40 or less .",
    "it is well known that there exists a position of length 26 so even this procedure might fail .",
    "so assume that @xmath228 has length 25 in the list above .",
    "then compute the set + @xmath229 and assume that all elements of this set have length 24 . then @xmath225 .",
    "if @xmath230 we solve this problem as before . if @xmath231 then @xmath232 .",
    "and @xmath233 has length 16 or less .",
    "again we can choose @xmath234 and the length of @xmath227 is less than or equal to 40 .",
    "finally some elements in the last set might have length 26 in which case we must carry one last step of this .",
    "obviously if there were too many elements in @xmath10 having length 24 this computation could take years .",
    "i must remark though that the elements of length 24 are very rare and very few are known . in 1995 - 1998",
    "the only known element of length 24 was the `` superflip '' and today about 150 others are known to the best of my knowledge .",
    "in this paper we have constructed a program that returns generator expressions of length 22 or less for each element in the subgroup of the cube group that fixes the edges . as discussed in the abstract",
    "this means we have given a upper bound of 40 for the cube group .",
    "i want to thank my advisor gert almkvist for his help and suggestions and my second advisor victor ufnarovski for taking the time to look through this work in detail .",
    "i further want to my father , my wife and my mother for their help and support .",
    "thanks to tomas rokicki for publishing his result for the edges analysis and bruce norskog who verified the output of this program .",
    "i also thank michael reid for sharing his optimal solver . finally",
    "thanks to the people who contributed to gap development , this program makes it very easy to test mathematical ideas .",
    "this should be placed in a file called datav.txt : +   +    datav:= [ `` aceglpmwqius '' , `` acegpkwsujqm '' , `` acejhtmoqluw '' , `` acejpkwmuqsg '' , `` acekrihownvs '' , `` acekvihqmsow '' , `` acelismhqvpw '' , `` acelismwohuq '' , `` acelismwqhou '' , `` aceliwqgonvt '' , `` aceliwqugtmo '' , `` acelqwmspgui '' , `` acepikmsqhuw '' , `` acerikmtohwv '' , `` acesikwmqhpu '' , `` acexigqkosmv '' , `` acfgkojqmvxs '' , `` acfkihmoqvtw '' , `` acfunilqshow '' , `` acgtikquwnoe '' , `` achfikmoqwvt '' , `` achliewuonqt '' , `` achmikqxosfv '' , `` achpiemsqkuw '' , `` achpikfqmsvw '' , `` achrvkmojsfx '' , `` achseuqowkni '' , `` achsikqownfv '' , `` achtikuqonwf '' , `` achuislmfxoq '' , `` achvikoqfswn '' , `` achvismoqekw '' , `` achviswlonqe '' , `` achxikmvprfs '' , `` achxikufmsor '' , `` acjfrnlxosvh '' , `` acjgnrloewsu '' , `` acjgnrlwesou '' , `` acjgrnewlsou '' , `` acjtlnhqevow '' , `` acktieqowhvn '' , `` ackxiegqmsov '' , `` ackxiequosgn '' , `` aclgniewprus '' , `` aclgniuoexrs '' , `` aclgwieqmsup '' , `` aclheipqmvws '' , `` acloniesqgwu '' , `` aclonieswguq '' , `` aclonisewgqu '' , `` aclsvhmqjeow '' , `` aclxrimohsfv '' , `` acmgeujwoktq '' , `` acmgkfjwprus '' , `` acmgkfxqjsup '' , `` acmgpkjwequs '' , `` acmgsljwqvof '' , `` acmoglqfwvjs '' , `` acmokfjsqgwu '' , `` acmokfjwqvtg '' , `` acmteojwqkug '' , `` acmxvgjoqetk '' , `` acnfikhsqpwu '' , `` acnfikhwqspu '' , `` acnfikpxqsvh '' , `` acnfikqhwspu '' , `` acnfikqxovth '' , `` acnkihvoqetw '' , `` acolihmsweuq '' , `` acoqihmewsul '' , `` acoxikmvqsge '' , `` acplietqmgux '' , `` acplismwqveh '' , `` acptieuqmkwg '' , `` acpvikmqesxh '' , `` acqgfnjwlsou '' , `` acqokfmsjgwu '' , `` acqsikuwmgoe '' , `` acruikomxsge '' , `` acsuikomgeqw '' , `` acsvrihownke '' , `` acsxikfoqngv '' , `` actfikmqvhow '' , `` actfikmuqgxp '' , `` actfkmjwqhou '' , `` actlvieqmhow '' , `` actpieuqmkgw '' , `` acugfnjwoslq '' , `` acugkfojwsmq '' , `` acuokfmswgjq '' , `` acuokfsmjgwq '' , `` acvfikmswphq '' , `` acvfqjmkpsxh '' , `` acvgpetkmjwq '' , `` acvlhjmoqftw '' , `` acvmietoqkxh '' , `` acvmikqfosxh '' , `` acvnkfxqjtgo '' , `` acvriktomewh '' , `` acvsilmoqexh '' , `` acvwikmrosge '' , `` acwtieqgokmv '' , `` acwuiemoqslh '' , `` acwuiksqmego '' , `` acxfikhmupqs '' , `` acxfikoqmsvh '' , `` acxlisumfhoq '' , `` adegmkiwpqus '' , `` adegqkmupitx '' , `` adeohkmwqius '' , `` adesukhomiwq '' , `` adeuokqsximg '' , `` adeuqkmgtiow '' , `` adewqomglius '' , `` adexikmsqoug '' , `` adfvslnohiwq '' , `` adgfqkmvxitp '' , `` adhuisrwpnle '' , `` adkgmsfwpivq '' , `` adkgqmewpius '' , `` adkgwsfqmipv '' , `` adknqgpuwifs '' , `` adksowhfuiqn '' , `` adktiomrhvfw '' , `` admfkuhxrisp '' , `` adpgikxeunqs '' , `` adpgslmwrifv '' , `` adpgslwfuirn '' , `` adptkgnwqifv '' , `` adrxsnlohifv '' , `` adsvowqlhime '' , `` advlmerwpgti '' , `` advsiemkqoxh '' , `` adxkmeuqpgti '' , `` aegoidmlqsuw '' , `` aehtikmcquwo '' , `` aehtikmvqwdo '' , `` aekgismvqwdo '' , `` aelgniwcuqso '' , `` aesoiwmvqclg '' , `` aesuqkmgpwdi '' , `` aevdikmhqwto '' , `` aexoivtgmqlc '' , `` afckiumoqgtw '' , `` afkoismvqwgc '' , `` afkrcsmxipug '' , `` aflcqhpuwims '' , `` aflcqhupmiws '' , `` afqckhjuwpms '' , `` agclnpewqjus '' , `` agcuikmoqswe '' , `` agdsiemoqluw '' , `` agdsikfqmxov '' , `` agecltqowimu '' , `` agecqkmpxius '' , `` agecskmoqiuw '' , `` ageisdmoqluw '' , `` agejckmwqpus '' , `` agejktmoqcuw '' , `` agekciurmpws '' , `` agelcjqosumw '' , `` agelcjurmspw '' , `` agelcpmrixus '' , `` agelipquwcms '' , `` ageliqmwocut '' , `` agelismoqvdx '' , `` agenckuoitwq '' , `` agenckuqitow '' , `` agenikqxocvt '' , `` agenikuwqcot '' , `` agenksrdpiuw '' , `` ageoikmdqtuw '' , `` ageoikmrxsuc '' , `` ageoikmsqwuc '' , `` ageoikmsqxud '' , `` ageoikmsxcur '' , `` ageoitmlqcuw '' , `` ageonkqcjsuw '' , `` agepltmricuw '' , `` ageqckuniswp '' , `` ageqxkmcosuj '' , `` agesckuomxri '' , `` agesikmcqwuo '' , `` agesikmrxcuo '' , `` agesldmoqiuw '' , `` agesnkuwocjq '' , `` agesqkmwcoui '' , `` agesqkpuwidm '' , `` agesqkuomidx '' , `` agesrkjomcuw '' , `` agesrkjwmcou '' , `` agesvkjwocmq '' , `` agesvkojmcqw '' , `` agesxkmoucqj '' , `` ageuckiosxmr '' , `` ageuckqoixmt '' , `` ageuikmwqsoc '' , `` agevismoqlxd '' , `` agewikmsoquc '' , `` agewikmsqvpc '' , `` agewikmvqsdo '' , `` agewikqucsmo '' , `` agewikucmsoq '' , `` agewikuqmtdo '' , `` agewmkuordsi '' , `` agewpkmjcsuq '' , `` agexikmcpsuq '' , `` agexikmcqpus '' , `` agfkvqxdmitp '' , `` agflniquoctw '' , `` agfsnivkqcpw '' , `` agjsfvmwoclq '' , `` agknwsjoqcfv '' , `` agkrcsmoivfx '' , `` agksiqfomcwv '' , `` agksiwmqecvp '' , `` agksrwmfocjv '' , `` agktipmwqcfv '' , `` agkuiwtoqcne '' , `` agkvpsfncqwi '' , `` agkvqsmoxifd '' , `` agkvsfjoqcnw '' , `` agkvwsmpqidf '' , `` agkwiomcqsfv '' , `` agkwiomrtcfv '' , `` agkwiomsqfdu '' , `` agkwismcqvfo '' , `` agkxcjmoqsfv '' , `` aglcrtmoweju '' , `` aglfixuomctq '' , `` aglovieqmscw '' , `` agloximcquse '' , `` aglrniewpcus '' , `` aglsjweoqcmu '' , `` aglwvieomqsc '' , `` agmctkjoqeuw '' , `` agmldpjwqeus '' , `` agmodejvqktw '' , `` agmsikqoecuw '' , `` agmsikqwecou '' , `` agmsikuwoceq '' , `` agmwkfjcqsuo '' , `` agnfiwquoctl '' , `` agnrsljowceu '' , `` agodikmvqswe '' , `` agplismwqcfv '' , `` agpsikfwqcmu '' , `` agqsikeomcuw '' , `` agqsikewmcou '' , `` agscikmoqeuw '' , `` agsjrkeowcmu '' , `` agswnielqcuo '' , `` agtdikmwprfv '' , `` agtovqedmikx '' , `` aguerisowcml '' , `` aguliemoqcxs '' , `` agusikewocmq '' , `` agusikfdpnwq '' , `` aguwkfjqmsoc '' , `` agvcelmoqjtw '' , `` agvcflmoqitw '' , `` agvcfpmiqktw '' , `` agvfikmcqspx '' , `` agvfkmjoqctw '' , `` agvkiemcqsxo '' , `` agvkiemwqods '' , `` agvrcemoiltw '' , `` agvrcemoitxk '' , `` agvsipmxqcle '' , `` agvwiemcqkto '' , `` agwsipmlqcue '' , `` agwvieqtocmk '' , `` agxkcetnupqi '' , `` ahecitmrkpuw '' , `` aheodirsxnul '' , `` ahesqkmowdui '' , `` ahnuieqcowlt '' , `` aidkmersowhv '' , `` aiegckqwnpus '' , `` aiegquptwcmk '' , `` aiehmutqpldx '' , `` aiekqumdpsxh '' , `` aielqspdwnvh '' , `` aielqspudhmw '' , `` aienckwguqsp '' , `` aienpkwcuqsg '' , `` aieomkugqwsc '' , `` aierckmsgwup '' , `` aierpkmscwug '' , `` aieskhmdpruw '' , `` aiesmkuwqgoc '' , `` aiespkmdgquw '' , `` aievqkpdwhms '' , `` aiexckmgqusp '' , `` aikgcsmqvpfx '' , `` aikhscqoxnfu '' , `` ailgncesqxup '' , `` aimgekupqsdw '' , `` aimgslpfdvrw '' , `` aiswceukmroh '' , `` aiurewdkmptg '' , `` aiurkfdgmwsp '' , `` aivgcewktnqp '' , `` aivrcehkmwsp '' , `` aixfmkptdhuq '' , `` ajchkfosxqnv '' , `` ajegpkuwcmsq '' , `` ajegxkqtcpmu '' , `` ajeovkmwcqsg '' , `` ajesqkpdhmuw '' , `` ajewtkucmqgo '' , `` ajkgxsmrcpfv '' , `` ajkvmsfdhqwp '' , `` ajndwepkvqtg '' , `` ajogmewcuqtk '' , `` ajsgpvqlcwme '' , `` akecqhiwmpus '' , `` akecwhirosmu '' , `` akehctmoiquw '' , `` akeoiguqmwsc '' , `` akeoiqncwshu '' , `` akerchmsixup '' , `` akeritmwphuc '' , `` akeschmriouw '' , `` akesiwugmcoq '' , `` akhpcsmwiqfv '' , `` akhtqmewpjdv '' , `` akmchfjrosuw '' , `` akmuetjcqwph '' , `` akqhcemsiwup '' , `` akvcmetiqpwh '' , `` akvncetgiqwp '' , `` akvscemriphw '' , `` akvsiehqmcow '' , `` akvtweqgpimd '' , `` akvwceitgpmr '' , `` akxoivtemqhc '' , `` akxqcemgipus '' , `` alcgifmwqous '' , `` alcoifugmqsw '' , `` alcsrfmowgju '' , `` alcsvfmojgwq '' , `` alcsvfmqjgow '' , `` alegctirwpmu '' , `` alegmtudpiwq '' , `` aleqptmjgcuw '' , `` alesdiqowgmu '' , `` alesdiuomgwq '' , `` alesixmoqcug '' , `` alesoidrnguw '' , `` alhsiemoqcuw '' , `` almehtrdpiuw '' , `` almgqsjwpdfv '' , `` almsfdjoqguw '' , `` alpscfmriguw '' , `` alsgivmwqoec '' , `` alsgrieowcmu '' , `` alsgvieomcwq '' , `` alvntfjoqcxh '' , `` alvsdemoqgxi '' , `` amcgikouwqes '' , `` amegiksqcuwo '' , `` amegikuqcwso '' , `` ameoikwruchs '' , `` amepqkwguisd '' , `` amesikgocquw '' , `` amesikocwuqg '' , `` amesikoqugwc '' , `` ameuhkscjqwo '' , `` amlgipewqcus '' , `` amrfikuhscwp '' , `` amswpvceqjlg '' , `` amugkfwcjqso '' , `` andtgvlqipfx '' , `` anegikqcwups '' , `` anigkfquwpds '' , `` anksiwqhdufo '' , `` ankwisfgqcuo '' , `` anlgriewpcus '' , `` anlpchuqiews '' , `` anlvgqepxsdi '' , `` anpuiglcqsfw '' , `` anvkjcewqpth '' , `` anvwcepqitgk '' , `` aoclrfwjugms '' , `` aocuikqswgme '' , `` aoecikquwtmh '' , `` aoecikuqmtwh '' , `` aoecktmwqguj '' , `` aoednskwqjuh '' , `` aoedqkmvhitw '' , `` aoedukwirgsm '' , `` aoegdmjwqkus '' , `` aoegikmrdvxs '' , `` aoegikqsucmw '' , `` aoegikqtvcmw '' , `` aoegikquwntc '' , `` aoegiktqucwn '' , `` aoegikuxmctq '' , `` aoegikwqmctv '' , `` aoegisukmcwq '' , `` aoegltmwqiuc '' , `` aoegnkjqucws '' , `` aoegskmqjcux '' , `` aoehskmdqiuw '' , `` aoejmkdwqgus '' , `` aoejrksuwcgm '' , `` aoelisdqmhwv '' , `` aoelismdqhxu '' , `` aoelituqmcwg '' , `` aoelnrcuwgjs '' , `` aoelqwmvhitc '' , `` aoenkgjvqctw '' , `` aoenskwjvcqh '' , `` aoerckmwigut '' , `` aoerckmwjgus '' , `` aoerckwmuhis '' , `` aoerclmwigus '' , `` aoerjkdwngus '' , `` aoerskmxicug '' , `` aoesihmwqkud '' , `` aoesihquwcml '' , `` aoesikmcquwg '' , `` aoesukwrhcim '' , `` aoetikmgqcwv '' , `` aoetikqhwcmu '' , `` aoevhkjwqcns '' , `` aofgimuwqctk '' , `` aofgksquwcni '' , `` aoflsdjwqgnv '' , `` aofriktwmcuh '' , `` aogcrnlwfius '' , `` aogmvilqecws '' , `` aogrldewnius '' , `` aohckfjwqnus '' , `` aohclsqfwimv '' , `` aohlivmwqcfs '' , `` aohlnevwqjds '' , `` aohlvemqjcws '' , `` aohlweiuqcms '' , `` aohtifmwqcul '' , `` aohtikfdmvrw '' , `` aohwikmuqcfs '' , `` aoignsquwckf '' , `` aoigrkewncus '' , `` aoilnevwqchs '' , `` aojgfnlsxruc '' , `` aojgkvcqmews '' , `` aojglrwfuctn '' , `` aojgnveqlcws '' , `` aojkngewqcus '' , `` aojtndkwqgfv '' , `` aojwfnqcguls '' , `` aojwgvsqmcke '' , `` aokdqshfwimv '' , `` aokgcsirvxmf '' , `` aokgismvwcfq '' , `` aokgiswufcmr '' , `` aokgixmuqcfs '' , `` aokgmsqwicfv '' , `` aokgrsjwmcfv '' , `` aokgvsjfqcmx '' , `` aokgxsqfucjn '' , `` aokjdemwqgus '' , `` aoknigfwqcus '' , `` aokrsgjfwcmv '' , `` aoksivmwqcfg '' , `` aokuismhqcfw '' , `` aokvishfrcmw '' , `` aokwiemgqctv '' , `` aokwismgqufd '' , `` aolcniewqtuh '' , `` aolgnvjwqces '' , `` aolgwieqncus '' , `` aolhismwqcfv '' , `` aolmeiswqcgv '' , `` aolsnihurcew '' , `` aoltiwhurcfn '' , `` aoluiqswncge '' , `` aomchvlqejws '' , `` aomckfhwqius '' , `` aomckfjwqtuh '' , `` aomedkgwqjus '' , `` aomedkjwqtuh '' , `` aomgikeuwcqs '' , `` aomgxtjlqcue '' , `` aomidfhwqlus '' , `` aomligrwecus '' , `` aomtfljwqgdv '' , `` aomtilcwqgfv '' , `` aonfikdsqhwu '' , `` aonfikqxhcvt '' , `` aonfwkqtucih '' , `` aonlisqfwgdu '' , `` aonrceiuwhtk '' , `` aonuiewckgqt '' , `` aonuisfwqcgk '' , `` aonxieqkvctg '' , `` aoqcehjuwkms '' , `` aoqgntwlucje '' , `` aoqhniesxckv '' , `` aoqhskjfwcmv '' , `` aoquismlwche '' , `` aosgrvmlwcje '' , `` aosgvxmqjcle '' , `` aotfikmdwhuq '' , `` aotliemdqhuw '' , `` aotungkwqcie '' , `` aougfrljmcws '' , `` aougriwlfcsn '' , `` aoulcfnqjgws '' , `` aounkfdqihws '' , `` aoutigqlwcme '' , `` aovcgemwqitk '' , `` aovciemwqshk '' , `` aovcikmhqsxf '' , `` aovfikmhqcwt '' , `` aovfikmwqtgd '' , `` aovgemjdqktw '' , `` aovliemtqcxg '' , `` aovrceitwhmk '' , `` aovsikmdqgxf '' , `` aovtikmgqcfx '' , `` aowckhmeujqs '' , `` aowgnielucqs '' , `` aowjkfmuqgsc '' , `` aowliemsqcgv '' , `` aowuieqtglmc '' , `` aoxcikfqmtuh '' , `` aoxgniesqcuk '' , `` aoxrceuimhtk '' , `` apegikqwsnuc '' , `` apegmkuqxisc '' , `` apejmkugxqsd '' , `` apelsdmriguw '' , `` apevckqxihms '' , `` apknisfvqcwg '' , `` apvnkfdgiwqt '' , `` aqcwikmfsogv '' , `` aqegcomixlus '' , `` aqegikmdsowv '' , `` aqegvkmcjwso '' , `` aqelismdxouh '' , `` aqencksuwpig '' , `` aqeoikmgcsuw '' , `` aqeoikutmwdg '' , `` aqesvkmwjgoc '' , `` aqevikxsmodh '' , `` aqewikucmosg '' , `` aqewvkmgjcso '' , `` aqjsfnuwlgoc '' , `` aqkgosmiwufd '' , `` aqkncgutixfo '' , `` aqlwniuoesgc '' , `` aqnfpkcjwsvh '' , `` aqtvkfjgmwdp '' , `` arcgienuwptk '' , `` aregxkumdpis '' , `` areldinuwphs '' , `` arflgsmwipdv '' , `` arhojckusxfn '' , `` arlgcinuwpes '' , `` artocvhimxle '' , `` arvwceipgtmk '' , `` asedikupmqwg '' , `` asegikwpudnr '' , `` asegipulmqwc '' , `` asegixqulcmo '' , `` asegvkmqjwco '' , `` asekigmoqcuw '' , `` asekiumgqwdp '' , `` aselcwmgipqu '' , `` aselihmoqcuw '' , `` asenckigqxuo '' , `` aseoikuqgmwc '' , `` aseoikuxmcgr '' , `` aseqikmogcuw '' , `` aseqipulmcwg '' , `` aseqpkujhmwd '' , `` aserckmviwog '' , `` aseuikqcwomg '' , `` asevikmoqchw '' , `` asewcqmlipug '' , `` asewikmogquc '' , `` ashxikfoqncu '' , `` askoigfwqunc '' , `` aslcngeiqwuo '' , `` aslorimweugc '' , `` aslqvimwgceo '' , `` aslrniegxouc '' , `` aslwipmgqeuc '' , `` aslwnieohcur '' , `` asnuiepwqcgk '' , `` asqofnlugwjc '' , `` asuwikfqmcpg '' , `` asvkiemgqwpc '' , `` asvwiemkqodg '' , `` aswvioqlgcme '' , `` asxhikmcqofv '' , `` ategikmvqowc '' , `` atelcuqhiomx '' , `` ateliwmchruo '' , `` ateqhkmociuw '' , `` aterxkigcvmo '' , `` atngceikuxqp '' , `` atnuweqkpdjh '' , `` atpgikudmqfw '' , `` atvgpeikcxmq '' , `` atvwiemkqodh '' , `` auegckqswnip '' , `` auegikmxqotc '' , `` auegiknswrdp '' , `` auejpkhwdqms '' , `` aueoikqgtxmc '' , `` aueoqkmsxdgi '' , `` aueoskigqwmc '' , `` auesikmwqocg '' , `` auesrkiwhomc '' , `` aufmriskwodh '' , `` auhtwkinqofc '' , `` aulsniqogcew '' , `` avcfikmsqwph '' , `` avegckmsiwor '' , `` avegikmcqspw '' , `` avegikmsqodw '' , `` avegikomqsdw '' , `` avegikqdswmo '' , `` aveligmoqsdx '' , `` aveoikmcqsxg '' , `` avesikmwqodg '' , `` avesqkmdpwjg '' , `` avkocgfmixqt '' , `` avkpismhqwfc '' , `` avkwismohcfr '' , `` avkwmsfdhioq '' , `` avwsiemgqcpk '' , `` awdjlhmsqofv '' , `` awedismkqouh '' , `` awedqgpukims '' , `` awedqkphvims '' , `` awegikmdqosv '' , `` awegikmuqodt '' , `` awegikomsuqc '' , `` awegikqscumo '' , `` awegmkurpcsi '' , `` awegqkmipvtd '' , `` awegskqupdmi '' , `` awejckosnqug '' , `` awekisuqmodh '' , `` awelivmhqods '' , `` awelpdmsirug '' , `` awenckvsiroh '' , `` aweoihmsqluc '' , `` awerckusmioh '' , `` awesikuomgqc '' , `` aweuikmoqsgc '' , `` aweuikmsqcgo '' , `` awgjpvmscqle '' , `` awjgfvmsqolc '' , `` awjrcesmuphk '' , `` awkoqsmduifg '' , `` awkoqsmvhifd '' , `` awmfikhvqods '' , `` awmoekjdqgus '' , `` awmokfjgqusc '' , `` awmuktrepdgi '' , `` awpfikmuqcth '' , `` awrfikdusomh '' , `` awsehvmlqcjo '' , `` awsmikgeqouc '' , `` awsoeqjmuchk '' , `` awvoremtkcjg '' , `` awvsikfqmodh '' , `` axegikusmqdo '' , `` axeoqkmsgdui '' , `` axhtikqfucpn '' , `` axksiqocfumg '' , `` axphckifsvqn '' , `` axqgemitupdk '' , `` bdmuqtlxjoeg '' , `` bfmsokjhqcuw '' , `` bkeogjmdsxuq '' , `` bwehvqkpjdnt '' , `` caljnpegqsuw '' , `` camlxfroigus '' , `` cbsgivlqmpwe '' , `` cbvfqjmwplgs '' , `` cealnigousqw '' , `` ceglibmvqwps '' , `` cejlnpawqgus '' , `` cesagjuwmqlo '' , `` ceslibmguwqo '' , `` cfsulranwoig '' , `` cfsuqjmbphxk '' , `` cgalfiuoswmq '' , `` cgaliqewosun '' , `` cgalpiuemsqw '' , `` cgalqiemuswp '' , `` cgaltiqouemw '' , `` cgaltiuomeqw '' , `` cgameiwoqslv '' , `` cgateiuqknow '' , `` cgauniswoelq '' , `` cgaurimwseol '' , `` cgbxkimoqsfv '' , `` cgeiqpmbxlus '' , `` cgelibmvprtw '' , `` cgelibqtowmv '' , `` cgelibvqmsox '' , `` cgelibwusqom '' , `` cgelmjpwbsuq '' , `` cgelniuwosaq '' , `` cgelpbujmsqw '' , `` cgelqbouismw '' , `` cgelwbiornus '' , `` cgesqamokiuw '' , `` cgetibmlovwq '' , `` cgfbniqosuxk '' , `` cgfxblniqsov '' , `` cgfxikmoqsbv '' , `` cgjlbfqwmsou '' , `` cgjlfsaoqxnv '' , `` cgkasjqowvfn '' , `` cgktibvmfqow '' , `` cgmakpjwqeus '' , `` cgmesbjoqlxu '' , `` cgmilfrotauw '' , `` cgmpbljrtwfv '' , `` cgmxufaoqkis '' , `` cgnlibfowrvs '' , `` cgnlibfqusow '' , `` cgofibqmxsvk '' , `` cgpilnfqavxs '' , `` cgplibufmsqw '' , `` cgplibuqfsmw '' , `` cgpsaeuqmixk '' , `` cgpxikfqmsub '' , `` cgrfibwuokmt '' , `` cgsfibmuqkow '' , `` cgsubfjwomlq '' , `` cgsuibqfomkw '' , `` cgtbniuoeqxk '' , `` cgulibfnqsow '' , `` cgvbiemoqlxs '' , `` cgvlbfrojnxs '' , `` cgvnafrokixt '' , `` cgvsiembqokw '' , `` cgvtibwoqkfm '' , `` cgvxniqboetl '' , `` cgwlbfqjosmu '' , `` cgwlibeqosum '' , `` cgwlibqeusom '' , `` cgwlifmoqvta '' , `` cgwtblqfjvom '' , `` cgxfnbutokjq '' , `` cgxtibmoqlfv '' , `` chelibpuwnrs '' , `` chesikunrwob '' , `` chvnqfptwbjk '' , `` chxlqemtpiub '' , `` cimalfrwpgus '' , `` cixkemugpqtb '' , `` ckafnisgquwo '' , `` ckafsiomvwgq '' , `` ckahniuseqwo '' , `` ckgbniseqwpv '' , `` ckwhibmoqvte '' , `` ckxpieuqmath '' , `` claovimgsweq '' , `` clebiomgqsuw '' , `` clergbmoisux '' , `` clewgbmrisup '' , `` clewibmogsuq '' , `` clmgbfusjwoq '' , `` clmsbfjwqgou '' , `` clqajfhuosmw '' , `` clqsbfmwjgou '' , `` cluwbfjqmsgo '' , `` cmalriseguwo '' , `` cmulbfjqgwso '' , `` cnebiqkpvgws '' , `` coafnlrwigus '' , `` coafsjmwqguk '' , `` coaheikmuxqs '' , `` coalnwiuqges '' , `` coalriesugmw '' , `` cobgilqfwsmv '' , `` coegikuamqws '' , `` coegmkuaqiws '' , `` coehibmuqxtk '' , `` coehibukrnws '' , `` coehqbkuwims '' , `` coeiahmwlqus '' , `` coelrbmsvxjg '' , `` coelsbujmgqx '' , `` coergaiuwlms '' , `` coernbtjvgwk '' , `` coesibmvqlhw '' , `` coetbgjwqlnv '' , `` coetkbxqjgnv '' , `` coglbtjqmuwe '' , `` cohtbljqmuex '' , `` cohuibfqmwtk '' , `` coifrbvwngtk '' , `` cojhenaqkvws '' , `` cokfibnqsgwv '' , `` cokithewnrbv '' , `` cokjnaquwges '' , `` cokrvbmxjgfs '' , `` coktibfhuxnq '' , `` coktibfqmxug '' , `` coljnberhsuw '' , `` comhbljfwtuq '' , `` comlfubqjgws '' , `` conbrixutgle '' , `` confaktwqiuh '' , `` confibtkquwg '' , `` confibuqwksh '' , `` conwibqfugtk '' , `` coqlbfwjmgsu '' , `` coqlfnsjwgau '' , `` coqlibesmgwu '' , `` coqlnbvwjgfs '' , `` coqlviweagms '' , `` coqtbfjukgmw '' , `` coqwbtjufgln '' , `` corlibwmfvtg '' , `` corlibwusneg '' , `` cortliawfgnv '' , `` cosfibqmwguk '' , `` cosnbfjuqgwk '' , `` cosqvnweaglj '' , `` cosubkmwqfgi '' , `` coulbfsjqgmw '' , `` coulibwmqges '' , `` covfibhwnktq '' , `` covfmbhwrkti '' , `` covfnbkwqgjt '' , `` covgnaewqski '' , `` covlrbjwegns '' , `` covwisfqmglb '' , `` coxfibumtgqk '' , `` coxknbteugqi '' , `` coxtiulqmgbe '' , `` cqaoxiemugsl '' , `` cqaxnikovgfs '' , `` cqehmbwpuisl '' , `` cqelibuspgwn '' , `` cqewihusmola '' , `` cqjbenxskoug '' , `` cqmlsbvxjofg '' , `` cqsoibmlwgue '' , `` csagniuoeqwl '' , `` csahnqelpwui '' , `` csalniouwqge '' , `` csaqnikohwfv '' , `` csawjkegqnuo '' , `` csfbnipgqwuk '' , `` csnhibeowkru '' , `` csqlubigwemo '' , `` csvfrbmxgkjo '' , `` csvmikqgwfao '' , `` ctbrgoixlnue '' , `` ctelawmiqoug '' , `` ctvgweikqbmp '' , `` cuakripswgfn '' , `` cueagsmpirxl '' , `` cuelibmgxqto '' , `` cukgibqnosfx '' , `` cunfaoiswrhk '' , `` cvbrgsmliwfp '' , `` cvksibmoqwfh '' , `` cvktfiqgmwbo '' , `` cvmpbtlqjwge '' , `` cwehbujsqkno '' , `` cwelmbusjgor '' , `` cwelqbumiosg '' , `` cwevnbikqotg '' , `` cwjlnveqaosg '' , `` cwkhbsjqmoev '' , `` cwluiomsqhae '' , `` cwpakimsqhfv '' , `` cwqpbljfsvmg '' , `` cwvhifqbkoms '' , `` cwvnbfjrpgtk '' , `` cwvnofrsjlhb '' , `` dbegikuqmows '' , `` ebmgksrwpiud '' , `` ecmlsajoqguw '' , `` ecpnbkwjusrh '' , `` ecpnbkxjusqh '' , `` ecsxbknqjvgp '' , `` edmkqbhwpius '' , `` edphknasxiqv '' , `` egloibmcqwsu '' , `` egsaidwmouql '' , `` egsvcojrbnlw '' , `` egvkbmitrpdw '' , `` ehpkqbjsxdnv '' , `` ejulmbrpgdws '' , `` ejusbkgocmwq '' , `` ejusbkndhqwp '' , `` eknscqjhbovx '' , `` ekvgbmcqwtoj '' , `` elaoidugmqsw '' , `` enkobgqvswjc '' , `` eogcxkumjaqs '' , `` eokgcsjrbxnv '' , `` eomgjkdwqaus '' , `` epksbwduihrn '' , `` epvgbmtkrdwi '' , `` erhucsblwpjm '' , `` erxgbvtidplm '' , `` esuwbkmogcjq '' , `` euigbkxsqomc '' , `` euinbkqgswdp '' , `` euinbkqtogxc '' , `` evajpdwnglqs '' , `` ewctmibvkqoh '' , `` ewmockjhbrus '' , `` fcagsqjolnuw '' , `` fhspbmdviwlr '' , `` fhvcqjwmtapk '' , `` fonaidqkwshu '' , `` gcajntuqelow '' , `` gcalitmoqeuw '' , `` gclantuoejwq '' , `` gdeaqjmswlup '' , `` gemxdaqvoljt '' , `` gfurbdjomksx '' , `` gipkecmqbtwv '' , `` gkanqdewpjus '' , `` gkcanqpuwies '' , `` gkeaspquximc '' , `` glcaxiouesmq '' , `` glebmurdpsxi '' , `` glmrdftojbux '' , `` glnfidqbwspu '' , `` glpxvcbimsfq '' , `` gnparceuwlis '' , `` gobwidkqmtfu '' , `` gockrbjwmtfv '' , `` gojsdvaqmwle '' , `` goqjnbxudles '' , `` gosurdmwelja '' , `` govlidmwqbtf '' , `` gpeiqdusmbwl '' , `` gquednaljwso '' , `` gsajvdolewqm '' , `` gseiwcqapuml '' , `` gtdkqjmwpafv '' , `` gtnuidqeolxb '' , `` guitdbqnwofl '' , `` guktidfqmbow '' , `` gwbtmjpvqdfl '' , `` gwecipquslma '' , `` gwvfidmlqsao '' , `` gxplrcnfitub '' , `` hcofibqmusxk '' , `` hrajsdfnkxov '' , `` ibfogqvxmcsk '' , `` ibhoqkmvxcft '' , `` ibpgqkfdmvxs '' , `` ibptkgnwqcfv '' , `` icbhqwmsplfv '' , `` icelqwmgosub '' , `` icvomehwrksb '' , `` idaukmsqheow '' , `` idegqkusmowb '' , `` idetqlwmbgpv '' , `` idkhbfrnxout '' , `` idsulrafpgwn '' , `` idvoqextbgml '' , `` idvtqblwpgfn '' , `` iektqbmvpwhd '' , `` iekwbvgscorn '' , `` ifvkqbmsxodh '' , `` igqnblpfdsuw '' , `` ihbksdwfvoqn '' , `` ihclnqpuwfbs '' , `` ihpbnqukedxs '' , `` iksuqemhxbdo '' , `` ilbxqdhuofms '' , `` ilvbqemdxohs '' , `` imrfwbuhsdpk '' , `` iodglbmwqtfv '' , `` iomfbutxrgdk '' , `` ipelgbusqnwc '' , `` irsbdhlvmeow '' , `` isalnqdguexo '' , `` isepqbxukdmg '' , `` iuehqbwmkdps '' , `` ivatnqhfdwko '' , `` ivbpnqewkgdt '' , `` iwtfqbmkpuhd '' , `` jnakwuqdsgpe '' , `` joqgebvwmctk '' , `` jragvkpwmces '' , `` jskwnqugecbp '' , `` jsowndegqlua '' , `` juaonetwqchk '' , `` kdjebnrohsuw '' , `` kdqgwsanpfjv '' , `` kesugdinoqaw '' , `` kgiebdmoqvtw '' , `` khmaqdjofsuw '' , `` kibtgfnqdvow '' , `` kixfqbupmcth '' , `` krmxcsjobgfv '' , `` ksmwcuafhqpj '' , `` lceoshiaqumw '' , `` lecunipaqshw '' , `` licmgovbfwtr '' , `` lnadqtejhwuo '' , `` lphvcsjrbenw '' , `` lwepchsmuria '' , `` lwjbhfrspdnv '' , `` majedvoqglws '' , `` mgarcoelisuw '' , `` mhqlvawtepjc '' , `` mjeskbuqcgow '' , `` mjpfrbukcgxs '' , `` mleapdugsqwj '' , `` mocwblvqjhte '' , `` mougkiawqces '' , `` mqoclsfjavgw '' , `` mruagfjpdlws '' , `` mrugfkwjdpbs '' , `` ngibqdxlsufo '' , `` obxngvtciqkf '' , `` ojdkxrmsgafv '' , `` olfbndquwgti '' , `` omriwdtbkvgf '' , `` pdmlwfargsju '' , `` pgbicnqxfsvk '' , `` prjncuawfkhs '' , `` psmwcfjlbgur '' , `` pvkacimgswfr '' , `` qameowucjlsg '' , `` qjecwsmgoaul '' , `` qkenixvocsha '' , `` qwvfcbmoikhs '' , `` rnoticvelxag '' , `` scegaomrixuk '' , `` sgelcbqowimu '' , `` sgwoniuqelac '' , `` tgeawdmoilur '' , `` trgiwpmbeclv '' , `` twvoiemhqadk '' , `` txkpbfdgiurn '' , `` unkgasfqiwco '' , `` utbwiemhqocl '' , `` vjtkoqmbhcex '' , `` voekbsjwqcng '' , `` wjeovkmaqcsg '' , `` wseclpmgaruj '' , `` xoahcqesniul '' , `` xsvnafjgkrdp '' ] ;    the last data have been selected from a list that would take about 2 months to generate on an usual pc but thanks to my advisor gert almkvist access to fast computers have been given and made it possible to compute in just a couple of days .",
    "99 http://www.math.rwth-aachen.de/~martin.schoenert/cube-lovers/ + dan_hoey__symmetry_and_local_maxima_(long_message).html + http://www.math.ucf.edu/~reid/rubik/optimal_solver.html + http://www-groups.dcs.st-and.ac.uk/~gap/manuals/doc/ref/manual.pdf + http://www-gap.mcs.st-and.ac.uk/doc/examples/rubik.html + http://www.cubeman.org/ + http://cubezzz.homelinux.org/drupal/ + http://www.math.rwth-aachen.de/~martin.schoenert/cube-lovers/ + http://theory.csail.mit.edu/~randall/ +"
  ],
  "abstract_text": [
    "<S> in this paper a computational method is introduced for proving that the diameter of the rubik cube group must be less then or equal to 40 in the quarter turn metric . </S>",
    "<S> recently it has been proven that when restricting the cube to edges the diameter is 18(see @xcite ) . </S>",
    "<S> now given an arbitrarily scrambled cube one can solve the edges in at most 18 moves . </S>",
    "<S> when the edges are in place there are 44089920 possibilities for the corners . </S>",
    "<S> we prove that each of these states can be solved in at most 22 moves giving a new upper bound of 18 + 22=40 . </S>",
    "<S> the program to solve this problem is made in the gap language and takes about 10 hours to verify on a standard 3ghz pc . </S>",
    "<S> later some suggestions of further improvements on the diameter are given . </S>"
  ]
}
{
  "article_text": [
    "it is well known that _ higher - order systems _ , _ i.e._systems which can pass around systems of the same kind , like the @xmath0-calculus @xcite , the calculus of higher - order communicating systems ( chocs ) @xcite , the higher - order @xmath1-calculus ( ho@xmath1 ) @xcite , hocore @xcite , , are difficult to reason about . many bisimulations and proof methods have been proposed also in recent works @xcite .",
    "this effort points out that a definition of _ abstract _ higher - order behaviour is still elusive . in this paper , we show how these abstract behaviours can be modelled as the _ final coalgebras _ of suitable _ higher - order behavioural functors_.    = -1 coalgebras are a well established framework for modelling and studying concurrent and reactive systems @xcite . in this approach , we first define a _ behavioural endofunctor _ @xmath2 over @xmath3 ( or other suitable category ) , modelling the computational aspect under scrutiny ; for @xmath4 a set of states , @xmath5 is the type of behaviours over @xmath4 .",
    "then , a system over @xmath4 corresponds to a @xmath2-coalgebra , _",
    "i.e._a map @xmath6 associating each state with its behaviour . the crucial step of this approach is defining the functor @xmath2 , as it corresponds to specify the behaviours that the systems are meant to exhibit .",
    "once we have defined a behavioural functor , many important properties and general results can be readily instantiated , such as the existence of the _ final @xmath2-coalgebra _ ( containing all abstract behaviours ) , the definition of the canonical _ coalgebraic bisimulation _ ( which is the abstract generalization of milner s strong bisimilarity ) and its coincidence with behavioural equivalence @xcite , the construction of canonical _ trace semantics _",
    "@xcite and _ weak bisimulations _",
    "@xcite , the notion of _ abstract gsos _",
    "we stress the fact that behavioural functors are `` syntax agnostic '' : they define the semantic behaviours , abstracting from any specific concrete representation of systems . in the wake of these important results , many functors have been defined for modelling a wide range of behaviours : deterministic and non - deterministic systems @xcite ; systems with i / o , with names , with resources @xcite ; systems with quantitative aspects such as probabilities @xcite ; systems with continuous states @xcite , .    despite these results ,",
    "a general coalgebraic treatment of higher - order systems is still missing .",
    "in fact , defining endofunctors for higher - order behaviours is challenging . in order to describe the problem ,",
    "let us consider first an endofunctor over @xmath7for representing the behaviour of a first - order calculus , like ccs with value passing @xcite : @xmath8 where @xmath9 is a set of channels and @xmath10 is the set of values @xcite .",
    "this functor is well - defined , and it admits a final coalgebra which we denote by @xmath11 ; the carrier of this coalgebra is the set @xmath12 containing _ all possible ( abstract ) behaviours _ , _ i.e. _ , synchronization trees labelled with nothing ( @xmath13-actions ) , input or output actions .    in a higher - order calculus like ho@xmath1 , the values that processes can communicate are processes themselves .",
    "however , actions communicating semantically equivalent ( herein , strongly bisimilar ) processes have to be considered equivalent even if the values / processes exchanged are syntactically different . in other words",
    ", this means that from the semantics perspective higher - order behaviours communicate _",
    "behaviours_. to reflect this fundamental observation in the definition we must replace the set of exchanged values @xmath10 with the set of all possible behaviours _ i.e._the carrier of the final @xmath2-coalgebra yielding the following definition : @xmath14 but this means that we are defining @xmath15 using its own final coalgebra @xmath16 , which can be defined ( if it exists ) only after @xmath15 is defined  a circularity !",
    "= -1 we think that this circularity is the gist of higher - order behaviours : any attempt to escape it would be restricting and distorting . one may be tempted to take as @xmath10 some ( syntactic ) representation of behaviours ( _ e.g. _ , processes ) , but this would fall short .",
    "first , the resulting behaviours would not be really higher - order , but rather behaviours manipulating some _",
    "ad hoc_representation of behaviours .",
    "secondly , we would need some mechanism for moving between behaviours and their representations  which would hardly be complete .",
    "third , the resulting functor would not be abstract and independent from the syntax of processes , thus hindering the possibility of reasoning about the computational aspect on its own , and comparing different models sharing the same kind of behaviour .",
    "this fundamental shift from _ term / process passing _ to _ behaviour passing _ is at the hearth of this work and introduces a distinction between syntactic and semantic higher - order .",
    "intuitively , for fully - abstract calculi this means that instead of restricting to systems unable to distinguish between bisimilar processes , we exchange collections of bisimilar processes / terms .",
    "this frees us from the hurdle of finding complete syntactic representations and canonical representatives . to some extent",
    ", this approach follows the idea of sangiorgi s _ environmental bisimulation _",
    "@xcite where bisimulation relations are indexed by approximations of the bisimilarity relation used in place of syntactic equivalence during the bisimulation game .",
    "the main contribution of this paper is a general characterisation endofunctors modelling higher - order operational behaviours in terms of solutions to certain recursive equations .",
    "we complement this result providing a categorical construction for finding solutions to these equations while dealing with the unavoidable circularity mentioned above .",
    "the key idea is to consider the definition as an instance of an endofunctor @xmath17 parameterised in the object of values @xmath10 .",
    "then , we are interested in those instances whose final coalgebra is carried by the object of values _",
    "i.e._those such that values are exactly all ( abstract ) behaviours .",
    "actually , since this parameter may occur in both covariant and contravariant position , the functor is _",
    "biparametric_. in our example , @xmath18}}}$ ] is given as : @xmath19 where @xmath20}}}$ ] denotes the category of endofunctors over @xmath7 .",
    "in general , we consider functors @xmath21}}}$ ] ( eventually @xmath22}}}$ ] ) and show how to define an initial sequence of endofunctors together with their final coalgebras such that its limit @xmath23 exists and satisfies : @xmath24 thus , @xmath2 is the requested higher - order behavioural functor .",
    "a consequence of this construction is that we can now apply standard results and techniques offered by the coalgebraic framework and _ e.g. _ , derive a canonical higher - order bisimulation as an instance of aczel - mendler s coalgebraic bisimulation .",
    "likewise , we can derive sos specifications by instantiating the bialgebraic framework thus accommodating syntactic representations ( _ e.g._processes ) in our settings .",
    "the remainder of this paper is structured as follows : [ sec : algebraic - compactness ] contains preliminaries on order - enriched categories and algebraic compactness .",
    "provides an abstract characterisation of endofunctors modelling higher - order behaviours and a construction for computing them levering algebraic compactness . refines and generalises this construction with the relevant ( albeit technical ) benefit of reducing the parts where algebraic compactness is assumed .",
    "contains some concluding remarks and directions for further work .",
    "in this section we recall preliminary notions and results relevant relevant to the constructions described in the following sections . in particular , we need a form of _ limit - colimit coincidence _",
    "@xcite developed in the field of ( categorical ) domain theory in order to guarantee the existence of ( unique dominating ) solutions to equations with unknowns occurring in both covariant and contravariant position .",
    "let @xmath25be the category whose objects are ( small ) @xmath26-complete partial orders and whose morphisms are continuous maps and let @xmath27be its subcategory whose objects have bottoms and whose morphisms are bottom - strict .    a _ @xmath25-enriched category _ ( or simply @xmath25-category ) @xmath28 is a locally small category whose hom - sets @xmath29 come equipped with an @xmath26-complete partial order @xmath30 such that composition @xmath31 is a continuous operation .",
    "a special case of @xmath25-categories are those enriched over @xmath27_i.e._any @xmath25-category @xmath28 whose hom - sets @xmath29 are additionally equipped with a bottom element @xmath32 and whose composition operation is strict .",
    "we shall drop subscripts from @xmath30 and @xmath32 when possible .",
    "we denote the category underlying a @xmath25-category @xmath28 as @xmath33 or just as @xmath28 when clear from the context .    in the following",
    "let @xmath34 stand for either @xmath25or @xmath27 .",
    "the category @xmath34 is enriched over itself . the single object category @xmath35 is trivially @xmath27-enriched .",
    "the dual of a @xmath34-category @xmath28 is the @xmath34-category @xmath36 such that @xmath37 and @xmath38 .",
    "the product of @xmath34-categories @xmath28 and @xmath39 is the @xmath34-category @xmath40 such that @xmath41 .",
    "the category of relations @xmath42 is a @xmath27-category where the order structure is defined by pointwise extension of the inclusion order created by the powerset monad  see _ e.g._@xcite for more behavioural functors of endowed with monadic structures yielding @xmath34-enriched kleisli categories .",
    "a _ @xmath34-enriched functor _",
    "@xmath43 between @xmath34-categories is a functorial mapping such that for every pair of objects @xmath4 , @xmath44 in @xmath45 the assignment @xmath46 is continuous and , in the case of @xmath27-functors , strict .",
    "unless otherwise stated , we implicitly assume that domain and codomain of an enriched functor are similarly enriched .",
    "we shall denote the functor underlying a @xmath34-functor @xmath43 as @xmath47 or simply @xmath48 , when confusion seems unlikely . for @xmath34-categories @xmath28 and @xmath39 , the functor category @xmath49 $ ] is the @xmath34-category whose objects are @xmath34-functors and such that @xmath49(x , y)$ ] is the complete partial order on the set @xmath50 of natural transformations given by pointwise extension of the order on their components .",
    "categories and functors enriched over @xmath34 form the category @xmath34-@xmath51 .",
    "a _ @xmath25-adjunction _",
    "@xmath52 is given by a natural isomorphism @xmath53 actually , the above statement defines a @xmath54-adjunction but , since the inclusion functor @xmath55 creates isomorphisms , any @xmath54-adjunction involving @xmath25-categories yields a @xmath25-adjunction .",
    "two morphisms @xmath56 and @xmath57 in a @xmath25-category @xmath28 form an _ embedding - projection pair _",
    "( written @xmath58 ) whenever @xmath59 and @xmath60 or , diagrammatically : @xmath61      \\node ( n0 ) at ( 0,1 ) { \\(x\\ ) } ;      \\node ( n1 ) at ( 1,1 ) { \\(y\\ ) } ;      \\node ( n2 ) at ( 1,0 ) { \\(x\\ ) } ;      \\node ( n3 ) at ( 2,0 ) { \\(y\\ ) } ;         \\draw[>- > ] ( n0 ) to node { \\(e\\ ) } ( n1 ) ;      \\draw[- > > ] ( n1 ) to node[swap ] { \\(p\\ ) } ( n2 ) ;      \\draw[>- > ] ( n2 ) to node[swap ] { \\(e\\ ) } ( n3 ) ;      \\draw[->,bend right ] ( n0 ) to node[swap ] { \\({i\\mspace{-2mu}d}_x\\ ) } ( n2 ) ;      \\draw[->,bend left ] ( n1 ) to node [ ] { \\({i\\mspace{-2mu}d}_y\\ ) } ( n3 ) ;           \\node[rotate=45 ] at ( $ ( n1)!.5!(n3)!.2!(n2)$ )   { \\(\\leq\\ ) } ; \\end{tikzpicture}\\ ] ] the components @xmath62 and @xmath63 are called _ embedding _ ( of @xmath4 in @xmath44 ) and _ projection _ of ( @xmath44 in @xmath4 ) , respectively , and uniquely determine each other . since complete partial orders are small categories , embedding - projection pairs are _ coreflections _ ; henceforth we use the two terms interchangeably in the context of @xmath25-categories .",
    "coreflections in a @xmath25-category @xmath28 form a sub-@xmath25-category of @xmath28 whose objects are those of @xmath28 and whose arrows are embedding - projections with the order on hom - sets given by the ordering on the embeddings ( note that @xmath64 )",
    ". we shall write @xmath65 for such category . by forgetting either the projection or embedding part of a coreflection we get the categories @xmath66 and @xmath67 ( of embeddings and projections ) , respectively , and such that @xmath68 .",
    "assume @xmath28 enriched over the category @xmath25 . for an @xmath26-chain of coreflections @xmath69 and a cone of coreflections",
    "@xmath70 for it the following are equivalent :    1 .",
    "the cocone @xmath71 is a colimit for the embeddings chain @xmath72 .",
    "2 .   the cone @xmath73 is a limit for the projections chain @xmath74 .",
    "the above is a slight reformulation of the limit - colimit coincidence result used in @xcite to solve recursive domain equations with unknowns occurring in covariant and contravariant positions like the well - known domain equation : @xmath75    in @xcite peter j.  freyd introduced the concept of _ algebraically compact _ categories as an abstract context where to address mixed variance .",
    "these categories are characterised by a limit - colimit coincidence property for initial / final sequences of endofunctors in a given class _ e.g._@xmath25-endofunctors as in the definition below .",
    "a @xmath25-category is _ @xmath25-algebraically complete _",
    "@xcite whenever every @xmath25-endofunctor on it has an initial algebra .",
    "dually , a @xmath25-category is @xmath25-coalgebraically cocomplete whenever every @xmath25-endofunctor on it has a final coalgebra . a @xmath25-category ( resp .",
    "@xmath27-category ) is _ @xmath25-algebraically compact _",
    "@xcite if every @xmath25-functor has an initial algebra and a final coalgebra and they are canonically isomorphic .",
    "[ thm : cpob - cpo - compactness ] the following hold true :    1 .",
    "@xcite a @xmath25-category with an embedding - initial object and colimits of @xmath26-chains of embeddings is @xmath25-algebraically complete .",
    "@xcite a @xmath25-algebraically complete @xmath27-enriched category is @xmath25-algebraically compact .",
    "the class of @xmath25-algebraically compact categories is closed under products and duals .",
    "[ cor : compact - product - dual ] assume @xmath28 and @xmath39 @xmath25-algebraically compact , @xmath36 and @xmath40 are @xmath25-algebraically compact .    in particular , if @xmath28 is @xmath25-algebraically compact then so is its free involutory category @xmath76 .",
    "algebraic compactness is at the core of several works on categorical domain theory , especially by marcelo fiore @xcite who refined and extended the theory .",
    "we restricted ourselves to @xmath25-algebraic compactness in order to simplify the exposition but results presented in this work can be formulated in the general setting of pseudo - algebraically compact 2-categories @xcite .",
    "in this section we present the main contribution of our paper : a coalgebraic characterisation of higher - order behaviours . in [ sec : hob - characterisation ] we review the process passing approach and discuss its shortcomings when it is applied in the context of coalgebras .",
    "this lead us to propose the behaviour passing approach which yield an abstract and syntax - agnostic notion of functors that model higher - order behaviours .",
    "we characterise these higher - order behavioural endofunctors as solutions to suitable recursive equations . in [ sec : hob - solutions ] we study the problem of finding such solutions : the key idea is to obtain them as limits of specific sequences .",
    "fundamental to this result is limit - colimit coincidence result recalled in [ sec : algebraic - compactness ] which thus prompts us to work in @xmath25-enriched settings .",
    "solutions obtained in this way define higher - order behavioural functors back in the `` non - enriched '' settings . in [ sec : hob - examples ] we discuss some illustrative examples .",
    "we abstract a family of endofunctors modelling value passing behaviours such as as a functor : @xmath77 } } }      \\text{.}\\ ] ] herein we shall refer to functors of this type as _ behaviour families _ and say that a behavioural endofunctor @xmath2 _ belongs _ to a family @xmath78 whenever @xmath79 for some @xmath80 .",
    "the above definition could ( and will ) be generalised to allow parameters to range over categories different than the category @xmath28 over which endofunctors in the family are defined . in the context",
    "this work , the case of functors of type @xmath81}}}$ ] requires some additional technical attention and therefore it will be covered separately in [ sec : hob - generalised ]    for the sake of simplicity , let us consider as a running example the functor @xmath82 over @xmath7 . a system modelled by a coalgebra for @xmath83 can , at each step , either input an element of @xmath10 or terminate producing an element of @xmath84 .",
    "fix a set @xmath85 of processes .",
    "coalgebras of type @xmath86 model systems whose inputs and outputs are processes and the corresponding notion coalgebraic bisimulation is instantiates as follows :    [ def : bisim - val ] for a pair of @xmath87-coalgebras , a relation @xmath88 between their carrier sets is a bisimulation if , and only if , @xmath89 implies that :    * if @xmath90 then @xmath91 and @xmath92 ; * if @xmath93 then @xmath94 ; * the symmetric of the above conditions .",
    "endofunctors in a @xmath78 model behaviours passing values from given sets without assuming any additional structure ( _ e.g._a semantic equivalence ) and consequently what were meant to be processes are indeed plain values in the above definition and , likewise , any coalgebraic construction instantiated on these functors . to exemplify this issue",
    "consider the coalgebra @xmath95 given by @xmath96 where @xmath97 denotes the coproduct right injection .",
    "although @xmath98 is carried by the set of processes @xmath85 , we do not require it to coincide with the dynamics assumed for the processes in @xmath85 .",
    "the coalgebra @xmath98 describes processes that promptly terminate returning themselves as their output value  a rather limited dynamics  but , since the outputs are distinct elements of @xmath85 , the greatest bisimulation is the identity relation : assume @xmath99 , if @xmath89 then @xmath100 is equal to @xmath101 and hence @xmath102 .",
    "coalgebras of type @xmath86 describe systems that can react to inputs regardless of semantics equivalence : they can distinguish processes meant to be behaviourally indistinguishable .",
    "for instance , consider a context @xmath103 $ ] such that @xmath104 \\to p$ ] for any @xmath105 , if @xmath106 then @xmath107 \\sim c[s]$ ] since @xmath108 \\to r$ ] and @xmath109 \\to s$ ] . from these examples",
    "it is clear that [ def : bisim - val ] does not capture the intuitive semantics equivalence , unless the later is the identity on @xmath85 , which is not in many higher - order calculi .",
    "approaches found in the literature revolve around two main strategies .",
    "the first is to restrict to the subclass of coalgebras that do not distinguish inputs and outputs that are meant to be semantically equivalent .",
    "unfortunately , this hinders many of the valuable results offered by the coalgebraic approach : for starters , the final coalgebra is not among them .",
    "in fact , the final coalgebra for @xmath110 is the set of all possibly unlimited @xmath9-branching trees whose leaves are labelled with elements in @xmath111 .",
    "we mention @xcite as an example of this approach .",
    "the second is to provide an _",
    "ad hoc_definition of bisimulation where values are compared using a suitable equivalence relation .",
    "this is the idea behind several process - passing calculi such as chocs @xcite or ho@xmath1 @xcite and  albeit mixed with other techniques  constitute the core of environmental bisimulation @xcite .",
    "guided by these examples , [ def : bisim - val ] can be adapted to consider values up - to some given equivalence @xmath112 as follows :    [ def : bisim - val - dimmed ] let @xmath113 be an equivalence relation .",
    "a relation @xmath88 between the carrier sets of two @xmath86-coalgebras is a @xmath112-bisimulation if , and only if , @xmath89 implies that :    * if @xmath90 and @xmath114 then @xmath115 and @xmath92 * if @xmath93 then @xmath116 and @xmath114 ; * the symmetric of the above conditions .",
    "we remark that [ def : bisim - val - dimmed ] applies to any equivalence relation over @xmath85 regardless of its coherence with respect to process semantics . to this end , we need to assume @xmath112 to be the greatest @xmath112-bisimulation for processes under the chosen dynamics . reworded , the definition of processes , their dynamics , and bisimulation depend on each other .    assuming a suitable @xmath112 exists , @xmath112-bisimulation does not coincide with coalgebraic bisimulation for @xmath86-coalgebras unless we restrict to those that can be seen as @xmath117-coalgebras _",
    "i.e._systems that `` handle bisimilar processes in bisimilar ways '' .",
    "[ thm : bisim - val - dimmed ] a relation @xmath88 is a @xmath112-bisimulation if , and only if , it is an @xmath117-bisimulation .    for brevity",
    "we consider bisimulations on single systems .",
    "let @xmath88 be a @xmath112-bisimulation for some coalgebra @xmath98 and define @xmath118 as : @xmath119_{r } ) { \\stackrel{\\vartriangle}{=}}\\begin{cases }              \\lambda [ p]_{\\approx}.[\\phi(p)]_{r } &                   \\text{if } g(x ) = { i\\mspace{-2mu}n}_l(\\phi ) \\\\              [ p]_{\\approx } & \\text{if } g(x ) = { i\\mspace{-2mu}n}_r(p )          \\end{cases }          \\text{.}\\ ] ]",
    "the coalgebra @xmath120 is well - defined for @xmath88 is an @xmath112-bisimulation .",
    "the implication in the other direction is trivial since @xmath112 is an equivalence and @xmath7has regular epimorphisms .",
    "intuitively , dimmed bisimulation @xcite compares labelled actions up - to some given equivalence relation that `` dims the light used to distinguish labels '' in order to simplify the automated verification of some properties of stochastic systems .",
    "can be seen an extension of dimmed bisimulation to systems with input and output actions .",
    "in fact , [ thm : bisim - val - dimmed ] and its proof readily translate to the setting of @xcite .    suggests that in order to use coalgebraic bisimulation we have to consider classes of processes with the same semantics instead of plain processes .",
    "further evidence supporting this intuition comes from the fact that bisimulation notions for higher - order calculi found in the literature are usually based on some sort of semantically induced quotient of the process set ( _ cf._@xcite ) and , _ mutatis mutandis _ , this holds also for approaches based on normal forms .",
    "nonetheless , a subtle issue remains unresolved : @xmath85 may not be expressive enough to describe _ all possible behaviours_. in other words , there might be systems whose behaviour is modelled by some @xmath86-coalgebra but can not be used as a value whereas higher - order systems are though as operating on systems of the same kind . under the light of these observations we propose the use of abstract behaviours instead of processes ; formally :    [ def : hob ] for @xmath121}}}$ ] , an endofunctor @xmath2 in @xmath78 is said to characterise higher - order behaviours if and only if : @xmath122    embraces the inherent circularity of higher - order capturing this defining property in the behavioural functor itself instead of imposing restrictions on the systems considered or requiring _ ad hoc_notions of bisimulation .",
    "this approach offers the following key advantages :    1 .",
    "values are canonically defined in a way that is independent from any syntactic representation of behaviours whereas in the process passing approach it is not as clear how processes and their dynamics are given .",
    "2 .   the semantic equivalence on values ( _ cf._@xmath112 ) is bisimilarity and , by strong extensionality of final coalgebras , it coincides with the identity relation which in turn allows us to apply standard coalgebraic results , like coinductive proof methods .",
    "all behaviours are represented , by definition of final semantics .",
    "note that in general there are no guarantees about the number of solutions to : there may be exactly one , more than one , or even none .",
    "for instance , all endofunctors considered in the above examples admit final coalgebras but none satisfies .      in this subsection we propose a categorical construction for finding solutions to the equation and hence for finding endofunctors modelling higher - order behaviours .",
    "in particular , solutions are obtained as fixed points of endofunctors over algebraically compact categories where compactness is due to the unknown in occurring both in covariant and contravariant positions as well .",
    "henceforth , we assume @xmath121}}}$ ] to be @xmath25-enriched .",
    "the first step towards rephrasing in the language of @xmath25-functors is to define a @xmath25-functor @xmath123 assigning endofunctors over a @xmath25-coalgebraically cocomplete category to the object carrying their final coalgebra .",
    "[ thm : cpo - final ] assume @xmath28 @xmath25-coalgebraically cocomplete .",
    "any family of assignments @xmath124}}}}$ ] extends to a @xmath25-enriched functor @xmath125 } } } \\to { \\ensuremath{\\mathbf{c}}\\xspace}$ ] .    on objects ,",
    "the functor is defined by the given assignment .",
    "each transformation @xmath126}}}(f , g)$ ] defines a @xmath127-coalgebra on the carrier of the final @xmath48-coalgebra : @xmath128 whose coinductive extension to the final @xmath127-coalgebra ( which exists by @xmath25-coalgebraic cocompleteness ) defines the action @xmath129 .",
    "it is easy to see that the assignment is functorial and continuous , ( by naturality and enrichment , respectively ) completing the proof .    for exposition sake ,",
    "let us assume a chosen assignment and thus fix @xmath123 .",
    "we remark that this mild assumption can be avoided by carrying out the constructions below in the ( more technically involved ) pseudo setting .    for a @xmath25-functor @xmath121}}}$ ] , let @xmath130 denote : @xmath131}}}{^{o\\mspace{-2mu}p}}\\times { { \\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace } ] } } }       \\xrightarrow{|\\nu-|{^{o\\mspace{-2mu}p}}\\times |\\nu-|\\ , }      { \\ensuremath{\\mathbf{c}}\\xspace}{^{o\\mspace{-2mu}p}}\\times { \\ensuremath{\\mathbf{c}}\\xspace }       \\xrightarrow{{\\mathfrak{f}}\\ , }      { { \\ensuremath{[c , c]}}}\\ ] ] which clearly corresponds to the right hand of . from @xmath130",
    "define the symmetric endofunctor @xmath132 : @xmath131}}}{^{o\\mspace{-2mu}p}}\\times { { \\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace } ] } } }       \\xrightarrow{\\langle { \\mathfrak{f}}_\\nu{^{o\\mspace{-2mu}p}}\\circ \\gamma , { \\mathfrak{f}}_\\nu\\rangle }      { { \\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace}]}}}{^{o\\mspace{-2mu}p}}\\times { { \\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace}]}}}\\ ] ] where @xmath133 denotes the involution for @xmath134}}}{^{o\\mspace{-2mu}p}}\\times { { \\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace}]}}}$ ] _ i.e._the isomorphism @xmath134}}}{^{o\\mspace{-2mu}p}}\\times { { \\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace } ] } } } \\cong { { \\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace } ] } } } \\times { { \\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace}]}}}{^{o\\mspace{-2mu}p}}$]in the following we shall omit @xmath133 when clear from the context .",
    "akin to the correspondence between @xmath130 and , @xmath132 corresponds the system : @xmath135 whose solutions are all @xmath132-invariant objects ( _ i.e._fixed points ) .",
    "algebras for symmetric endofunctors like @xmath132 are suitable pairs of algebras and coalgebras called dialgebras @xcite .",
    "whenever it exists , the initial algebra of a symmetric endofunctor determines the final coalgebra and _ vice versa_. in fact , any invariant of a symmetric endofunctor determines a specular one by symmetry ( just swap the values for the unknowns @xmath2 and @xmath111 ) .",
    "an invariant is isomorphic to its specular if , and only if , @xmath136 and these are all the solutions to as illustrated by its reformulation : @xmath137 note that initial and final invariants might not be isomorphic .",
    "algebraic compactness ensures that they are .",
    "moreover , any other invariant is _ dominated _ by the initial / final one in the sense that it factors the isomorphism between the initial and final invariants ; in the @xmath25-enriched setting this yields a coreflection from the dominating to the dominated solution .",
    "it is not known whether the class of @xmath25-algebraically compact categories is closed under exponentiation @xcite ; it remains an open question even if we restrict to the case of `` self - exponentials '' such as @xmath134}}}$ ] .",
    "we mention from _ loc .",
    "cit._that algebraic compactness is preserved when the exponential base is @xmath27or , in general , any _ algebraically super - compact _ category and refer the interested reader to @xcite for further details .    although we can not state that if @xmath28 is @xmath25-algebraically compact so is @xmath138 $ ] , a weaker result will isuffice for our aims .",
    "in fact , unlike arbitrary endofunctors over @xmath134}}}{^{o\\mspace{-2mu}p}}\\times { { \\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace}]}}}$ ] , @xmath132 factors through the @xmath25-algebraically compact category @xmath76 as : @xmath139 this observation suggests that we can equivalently look for solutions in @xmath76as formalised by [ thm : factoring - compact ] below .    for a @xmath34-category @xmath140 let @xmath141}}$ ] be the sub-@xmath34-category of @xmath142 $ ] whose objects factor through @xmath39 .",
    "the category @xmath140 is at least as algebraically compact with respect to @xmath34-functors in @xmath141}}$ ] as @xmath39 is with respect to @xmath34-endofunctors in @xmath143 $ ] .",
    "[ thm : factoring - compact ] for any @xmath25-category @xmath140 and a @xmath25-endofunctor @xmath144}}$ ] , the following hold true :    1 .",
    "if @xmath39 is @xmath25-algebraically complete then , @xmath48 has an initial algebra .",
    "if @xmath39 is @xmath25-coalgebraically cocomplete then , @xmath48 has a final coalgebra .",
    "if @xmath39 is @xmath25-algebraically compact then , @xmath48 has an initial algebra , a final coalgebra , and they are canonically isomorphic .    by hypotheses there are @xmath145 and @xmath146 such that @xmath147 . by @xmath25-algebraic completeness of @xmath39 the @xmath25-endofunctor @xmath148 admits an initial algebra @xmath149 ; therefore there is at least one @xmath48-invariant : @xmath150 . for an @xmath48-algebra @xmath151 consider the @xmath152-algebra @xmath153 and let @xmath154 be its inductive extension .",
    "the morphism @xmath155 in @xmath140 defines an @xmath48-algebra morphism from @xmath156 to @xmath157 proving that the former is weakly initial . by initiality of @xmath149",
    ", we have that @xmath158 for any algebra morphism @xmath159 going from @xmath156 to @xmath157 and hence that : @xmath160 since @xmath161 and @xmath162 are @xmath48-algebra morphisms we have : @xmath163 and hence @xmath164 is unique up - to the isomorphism @xmath156 _ i.e._the chosen initial @xmath48-algebra .",
    "dually , if @xmath39 is @xmath25-coalgebraically cocomplete then @xmath48 has a final coalgebra . if @xmath39 is @xmath25-algebraically compact then the canonical isomorphism between the initial @xmath152-algebra and the final @xmath152-coalgebra yields a canonical isomorphism between the initial @xmath48-algebra and the final @xmath48-coalgebra",
    ".    intuitively , [ thm : factoring - compact ] says that solving for the endofunctor or for its final coalgebra is essentially the same .",
    "in fact , we can define a symmetric endofunctor on @xmath76 starting from @xmath78 and @xmath123 and such that its initial algebra determines the initial algebra for @xmath132 and _ vice versa _ ,",
    "namely : @xmath165    we are now able to state the main result of this section , namely the existence of unique ( up - to iso ) dominating solutions to .",
    "[ thm : solutions ] assume @xmath28 @xmath25-algebraically compact . for any @xmath25-enriched @xmath121}}}$ ] , admits a unique ( up - to isomorphism ) dominating solution .    by [ cor : compact - product - dual ]",
    "the category @xmath76 is @xmath25-algebraically compact . by [ thm : cpo - final ]",
    ", the symmetric endofunctor @xmath132 is a @xmath25-endofunctor . since @xmath132 factors through a @xmath25-algebraically compact category it is possible to apply [ thm : factoring - compact ] and thus the initial @xmath132-algebra and the final @xmath132-coalgebra exists and are canonically isomorphic yielding , by symmetry , the required endofunctor @xmath2 over @xmath28 .",
    "finally , initiality / finality ensures that other solution necessarily factors the aforementioned canonical isomorphism and hence is dominated by @xmath2 .",
    "the 2-categorical structure embodied by the order - enrichment is purely functional to achieving algebraic compactness .",
    "indeed , any solution obtained in the settings of [ thm : solutions ] yields a ( ordinary ) endofunctor solution to where the the family of behavioural endofunctors considered is composed by any endofunctor underlying a @xmath25-endofunctor described by @xmath78 .",
    "[ cor : solutions - not - enriched ] assume @xmath28 @xmath25-algebraically compact .",
    "for any @xmath25-enriched @xmath121}}}$ ] there exists a unique ( up - to iso ) dominating solution to @xmath166 .",
    "( n-0 - 1 ) at ( 0,6 ) @xmath167 ; ( n-0 - 2 ) at ( 1,6 ) @xmath167 ; ( n-0 - 3 ) at ( 2,6 ) @xmath167 ; ( n-0 - 4 ) at ( 2.8,6 ) @xmath168 ; ( n-0 - 5 ) at ( 3.1,6 ) @xmath167 ;    ( n-1 - 1 ) at ( 0,5 ) @xmath167 ; ( n-1 - 2 ) at ( 1,5 ) @xmath169 ; ( n-1 - 3 ) at ( 2,5 ) @xmath170 ; ( n-1 - 4 ) at ( 2.8,5 ) @xmath171 ; ( n-1 - 5 ) at ( 3.1,5 ) @xmath172 ; ( n-1 - 6 ) at ( 3.2,5 ) @xmath173 ;    ( n-2 - 1 ) at ( 0,4 ) @xmath167 ; ( n-2 - 2 ) at ( 1,4 ) @xmath174 ; ( n-2 - 3 ) at ( 2,4 ) @xmath175 ; ( n-2 - 4 ) at ( 2.8,4 ) @xmath171 ; ( n-2 - 5 ) at ( 3.1,4 ) @xmath176 ; ( n-2 - 6 ) at ( 3.2,4 ) @xmath177 ;    ( n-3 - 1 ) at ( 0,3 ) @xmath167 ; ( n-3 - 2 ) at ( 1,3 ) @xmath178 ; ( n-3 - 3 ) at ( 2,3 ) @xmath179 ; ( n-3 - 4 ) at ( 2.8,3 ) @xmath171 ; ( n-3 - 5 ) at ( 3.1,3 ) @xmath180 ; ( n-3 - 6 ) at ( 3.2,3 ) @xmath181 ;    ( n-4 - 1 ) at ( 0,2 ) @xmath182 ; ( n-4 - 2 ) at ( 1,2 ) @xmath182 ; ( n-4 - 3 ) at ( 2,2 ) @xmath182 ; ( n-4 - 4 ) at ( 2.8,2 ) @xmath183 ; ( n-4 - 5 ) at ( 3.1,2 ) @xmath182 ; ( n-4 - 6 ) at ( 3.2,2 ) @xmath184 ;    ( n-5 - 1 ) at ( 0,1.5 ) @xmath167 ; ( n-5 - 2 ) at ( 1,1.5 ) @xmath185 ; ( n-5 - 3 ) at ( 2,1.5 ) @xmath186 ; ( n-5 - 4 ) at ( 2.8,1.5 ) @xmath171 ; ( n-5 - 5 ) at ( 3.1,1.5 ) @xmath187 ; ( n-5 - 6 ) at ( 3.2,1.5 ) @xmath188 ;    ( n-0 - 1 )  ( n-0 - 2 ) ; ( n-0 - 2 )  ( n-0 - 3 ) ; ( n-0 - 3 )  ( n-0 - 4 ) ;    ( n-1 - 1 )  ( n-1 - 2 ) ; ( n-1 - 2 )  ( n-1 - 3 ) ; ( n-1 - 3 )  ( n-1 - 4 ) ;    ( n-2 - 1 )  ( n-2 - 2 ) ; ( n-2 - 2 )  ( n-2 - 3 ) ; ( n-2 - 3 )  ( n-2 - 4 ) ;    ( n-3 - 1 )  ( n-3 - 2 ) ; ( n-3 - 2 )  ( n-3 - 3 ) ; ( n-3 - 3 )  ( n-3 - 4 ) ;    ( n-5 - 1 ) ",
    "( n-5 - 2 ) ; ( n-5 - 2 ) ",
    "( n-5 - 3 ) ; ( n-5 - 3 ) ",
    "( n-5 - 4 ) ;    ( n-0 - 1 )  ( n-1 - 1 ) ; ( n-1 - 1 ) ",
    "( n-0 - 1 ) ; ( n-0 - 2 ) ",
    "( n-1 - 2 ) ; ( n-1 - 2 ) ",
    "( n-0 - 2 ) ; ( n-0 - 3 ) ",
    "( n-1 - 3 ) ; ( n-1 - 3 ) ",
    "( n-0 - 3 ) ; ( n-0 - 5 ) ",
    "( n-1 - 5 ) ; ( n-1 - 5 ) ",
    "( n-0 - 5 ) ;    ( n-1 - 1 )  ( n-2 - 1 ) ; ( n-2 - 1 )  ( n-1 - 1 ) ; ( n-1 - 2 ) ",
    "( n-2 - 2 ) ; ( n-2 - 2 ) ",
    "( n-1 - 2 ) ; ( n-1 - 3 ) ",
    "( n-2 - 3 ) ; ( n-2 - 3 ) ",
    "( n-1 - 3 ) ; ( n-1 - 5 ) ",
    "( n-2 - 5 ) ; ( n-2 - 5 ) ",
    "( n-1 - 5 ) ;    ( n-2 - 1 ) ",
    "( n-3 - 1 ) ; ( n-3 - 1 )  ( n-2 - 1 ) ; ( n-2 - 2 ) ",
    "( n-3 - 2 ) ; ( n-3 - 2 ) ",
    "( n-2 - 2 ) ; ( n-2 - 3 ) ",
    "( n-3 - 3 ) ; ( n-3 - 3 ) ",
    "( n-2 - 3 ) ; ( n-2 - 5 ) ",
    "( n-3 - 5 ) ; ( n-3 - 5 ) ",
    "( n-2 - 5 ) ;    ( n-3 - 1 )  ( n-4 - 1 ) ; ( n-4 - 1 )  ( n-3 - 1 ) ; ( n-3 - 2 )  ( n-4 - 2 ) ; ( n-4 - 2 )  ( n-3 - 2 ) ; ( n-3 - 3 )  ( n-4 - 3 ) ; ( n-4 - 3 )  ( n-3 - 3 ) ; ( n-3 - 5 )  ( n-4 - 5 ) ; ( n-4 - 5 )  ( n-3 - 5 ) ;    the proof of [ thm : solutions ] is based on existence of initial and symmetric invariants for @xmath132 and , under the assumption of [ thm : cpob - cpo - compactness ] , these can be computed via initial sequences for @xmath132 . by unfolding the sequence leading to such invariants",
    "we obtain the diagram illustrated in [ fig : unfolding - thm - solution ] .",
    "horizontal arrows form final sequences which in turn determine the final coalgebras to be used for instantiating the behavioural functor of the successive iteration .",
    "vertical arrows form chains of embedding - projection pairs and hence characterise horizontal layers as approximations converging to the limiting final sequence depicted in the bottom of the diagram . from this perspective",
    ", horizontal layers can be read as _ finite - order _ behaviours approximating the higher - order solution .",
    "in fact , the first row characterises the null - order _ e.g._base values , atoms ( recall that the final object in a slice category @xmath189 is @xmath190 ) ; behaviours for @xmath191 exchange base values and hence are first - order processes and so on . in general ,",
    "behaviours for @xmath192 exchange ( abstract ) behaviours of order @xmath193 end hence belong to the order @xmath194 .",
    "this @xmath26-sequence is limited by higher - order behaviours .",
    "[ [ deterministic - higher - order - behaviours ] ] deterministic higher - order behaviours + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in [ sec : hob - characterisation ] we considered as a running example the parameterised endofunctor @xmath82 over @xmath7 . since the cardinality of the set carrying the final @xmath195-coalgebra always exceeds both @xmath196 and @xmath197 there are no solutions to .",
    "behaviours characterised by this functor are closely related to the domain equation @xmath198 : this equation can not be solved in @xmath7but admits a unique dominating solution in @xmath27 .",
    "this observation prompted us to study @xmath83 as an endofunctor over @xmath27 .",
    "let @xmath199 denote the space of continuous bottom - strict functions ordered pointwise and consider @xmath200 .",
    "for any @xmath10 and @xmath84 , the final @xmath195-coalgebra exists and determines all trees whose leaves are in @xmath84 and whose branches are indexed ( on each node ) by continuous bottom - strict functions from @xmath10 .",
    "intuitively , bottom elements can be read as unresponsive behaviours like deadlocks and hence inputs modelled by @xmath201 force a system to deadlock whenever it inputs @xmath202 .",
    "behaviours that deadlock on any input or terminate with output @xmath203 coincide for coproducts are strict .",
    "thus , @xmath195 captures eager deterministic computations .    since the functor @xmath78 is @xmath25-enriched and @xmath27is @xmath25-algebraically compact we conclude by [ thm : solutions ] that there exists an endofunctor in @xmath78 solution to [ def : hob ] and that it can be computed as the limit of the sequence depicted in [ fig : unfolding - thm - solution ] .",
    "the fixed point is reached after the first iteration for @xmath204 .",
    "indeed , @xmath167 solves @xmath205 in @xmath27 .    inspired by the intuitive correlation with domain equations ,",
    "consider @xmath206 where @xmath207 .",
    "computations are strict as before but now behaviours can terminate returning an atom from @xmath208",
    ". applies also to this family of endofunctors but ( thanks to @xmath207 ) the sequence leading to @xmath2 contains countably many iterations . intuitively , abstract behaviours described by the final @xmath2-coalgebra of are trees with atoms and abstract behaviours as leaves and children indexed by abstract behaviours provided such indexing respect continuity and strictness .",
    "the functors described above are examples of polynomial functors parameterised by @xmath209 like those generated by the following simple grammar : @xmath210 all these functors meet the hypotheses of [ thm : solutions ] .",
    "[ [ non - deterministic - higher - order - behaviours ] ] non - deterministic higher - order behaviours + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    bounded non - determinism is modelled in the context of @xmath7by means of the bounded powerset functor @xmath211 .",
    "families of behavioural endofunctors of practical interest and based on @xmath211 hardly contain endofunctors modelling higher - order behaviours .",
    "for instance , does not admit any solution when instantiated to .",
    "thus , we model non - deterministic higher - order computations in @xmath27 .",
    "let @xmath212 be the boolean lattice .",
    "for a map @xmath213 in @xmath27 , the subset @xmath214 of @xmath4 is upward closed and does not contain @xmath203 ( @xmath215 is monotone and bottom - strict ) ; these subsets of @xmath4 are equivalent to @xmath216 .",
    "likewise , @xmath217 determines all upward closed subsets of @xmath4 since a map @xmath213 in @xmath25may map @xmath218 to @xmath219 .",
    "if the order on @xmath220 is the anti - chain ordering then any subset of @xmath4 is trivially upward closed .",
    "in fact , the endofunctor @xmath221 over @xmath25yields @xmath222 by composition with the forgetful functor @xmath223 and with the insertion functor @xmath224 ( which equips each set with the anti - chain ordering ) . finally , note that @xmath225 restricts to @xmath27 .",
    "thus , @xmath221 is a good candidate for modelling non - determinism in the contexts of @xmath25and @xmath27 .",
    "both @xmath226 and @xmath221 are @xmath25-endofunctors over @xmath27 ; their final coalgebras are carried by @xmath167 and @xmath26 , respectively .",
    "this difference reflects the kind of non - deterministic behaviours captured by the two endofunctors . in the first case ,",
    "a coalgebra can either map a state to the empty set or to some upset that does not contain the bottom element for these are described by strict functions to @xmath212reworded , behaviours are either stuck or able to proceed in a non - deterministic fashion . in the second case ,",
    "a coalgebra can map a state to any upset meaning that behaviours may get stuck at any time , non - deterministically .",
    "[ [ higher - order - ccs ] ] higher - order ccs + + + + + + + + + + + + + + + +    the late semantics of the ccs with values has been shown in @xcite to be captured by the ( parameterised ) endofunctor over @xmath7 . however , there is no set of values such that the resulting endofunctor meets the condition in [ def : hob ] .",
    "akin to the previous examples , we move from @xmath7to @xmath27 in order to define endofunctors modelling non - deterministic processes that synchronously exchange values along the lines of .",
    "fix two objects @xmath10 and @xmath9 for values and channels , respectively .",
    "deterministic outputs over channels are characterised by the endofunctor @xmath227 .",
    "deterministic inputs are described by the endofunctor @xmath228 .",
    "note that the function space includes also non - strict functions meaning that receiving @xmath203 does not force a system to deadlock  we are interested in the late interpretation of value passing .",
    "the non - deterministic component of the behaviour is provided by the `` strict upset '' endofunctor @xmath229 since this choice ensures that a process is either stuck or can non - deterministically perform an output , an input , or a silent action . by combining these elements we obtain the family of endofunctors : @xmath230 by construction , @xmath78 is @xmath25-enriched and , by [ thm : solutions ] , there is an endofunctor modelling higher - order systems .",
    "by inspecting the diagram shown in [ fig : unfolding - thm - solution ] it is clear that limit - colimit coincidence is required only to ensure sequences of embedding - projection pairs are limited .",
    "reworded , only the category of parameters is required to be algebraically compact . in [ sec : hob ] parameters and behaviours are modelled in the same category but this observation suggest the possibility of considering functors of type @xmath81}}}$ ] where only @xmath231 is assumed algebraically compact .",
    "although this result may appear mainly technical , it allows us to cover a wider class of behaviours since it may often be useful , if not outright necessary , to model parameters and behaviours in different categories in order to simplify the computations of [ thm : solutions ] or to cover behaviours not expressible as functors of type @xmath232}}}$ ] .",
    "for instance , behavioural endofunctors might be defined on a ( suitably enriched ) category of spaces whereas parameters are restricted to range over its subcategory of exponentiable ones .",
    "likewise , one might consider the kleisli category for a monad and its underlying category  along the lines of @xcite",
    ".    the first challenge in characterise endofunctors in @xmath233}}}$ ] that model higher - order behaviours is that the categories where we model systems and exchanged behaviours are distinct . since higher - order behaviours are meant to operate on behaviours of the same type , we need a way to mediate between their representations in @xmath231 and @xmath45 .",
    "intuitively , this means that although systems are modelled as coalgebras for endofunctors over @xmath45 , their abstract behaviours ( _ i.e._semantics ) `` live '' in @xmath231 . to this end",
    ", we consider behavioural endofunctors with a `` counterpart '' over the category of parameters and some functor between the involved categories that `` mediates '' their behaviours .      here",
    "we assume to be given a functor @xmath234 to act as mediator for behaviours and behavioural endofunctors  the exact meaning of this intuition will be formalised shortly .",
    "an endofunctor @xmath235}}}$ ] is said to be _ lifted _ along @xmath88 if there is an endofunctor @xmath236}}}$ ] such that @xmath237 . in order to generalise this condition beyond objects in @xmath134}}}$ ] and @xmath238}}}$ ] consider the following 2-pullback : @xmath239      \\begin{scope}[xscale=1.8,yscale=1.1 ]          \\node ( n0 ) at ( 0,1 ) { \\({\\ensuremath{\\mathbf{p}}\\xspace}\\ ) } ;          \\node ( n1 ) at ( 0,0 ) { \\({{\\ensuremath{[{\\ensuremath{\\mathbf{d}}\\xspace},{\\ensuremath{\\mathbf{d}}\\xspace}]}}}\\ ) } ;          \\node ( n2 ) at ( 1,1 ) { \\({{\\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace}]}}}\\ ) } ;          \\node ( n3 ) at ( 1,0 ) { \\({\\ensuremath{[{\\ensuremath{\\mathbf{d}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace}]}}\\ ) } ;                   \\draw[- > ] ( n0 ) to node[swap ] { \\(p_1\\ ) } ( n1 ) ;          \\draw[- > ] ( n0 ) to node { \\(p_2\\ ) } ( n2 ) ;          \\draw[- > ] ( n1 ) to node[swap ] { \\((r\\circ-)\\ ) } ( n3 ) ;           \\draw[- > ] ( n2 ) to node { \\((-\\circ r)\\ ) } ( n3 ) ;                   \\node at ( .5,.5 ) { \\(\\cong\\ ) } ;      \\end{scope }      \\draw ( n0 ) + + ( 7pt,-2pt ) -- + + ( 0pt,-5pt ) -- + + ( -5pt,0pt ) ; \\end{tikzpicture}\\ ] ] then , the projection of @xmath240 on @xmath134}}}$ ] defines the category of endofunctors lifted along @xmath88 .",
    "formally , we define @xmath241 as the replete image of @xmath28 is _ replete _ if for any @xmath242 and @xmath243 in the arrow category @xmath244 , then @xmath245 or , equivalently , if the inclusion @xmath246 is an isofibration the replete image of a functor @xmath43 is the repletion the image of @xmath48 . ] of @xmath247 :",
    "@xmath248 this definition extends to the @xmath34-enriched setting as it is . in particular , for @xmath88 a @xmath34-functor , @xmath241 is the sub-@xmath249-category of @xmath134}}}$ ] formed by all    * @xmath127 s.t . for some @xmath250}}}$ ] , @xmath237 in @xmath251}}$ ] ; * @xmath252 s.t . , for some @xmath253 in @xmath238}}}$ ] , @xmath254 in @xmath251}}$ ] ( _ i.e._@xmath255 for @xmath256 and @xmath257 ) ; * @xmath258 s.t .",
    ", for some @xmath259}}}$ ] , @xmath254 and @xmath260 .",
    "in this situation @xmath88 plays the rle of a mediator between lifted and dropped endofunctors and hence between the behaviours they model .",
    "this suggests the following conservative extension of to functors of type @xmath81}}}$ ] : @xmath261 where , although the equation systems presents two unknowns , we are actually interested only in @xmath127 for its values are the endofunctors modelling the systems under scrutiny . however , does not offer any correlation between the final coalgebras of @xmath127 and @xmath262 that is strong enough for the aims of this work .",
    "in fact , for @xmath127 lifting of @xmath262 we have that the image through @xmath88 of the final @xmath262-coalgebra ( canonically ) extends to a @xmath127-coalgebra but not to the final one as illustrated by the diagram : @xmath263              \\node ( n0 ) at ( 0,1 ) { \\(|\\nu g|\\ ) } ;              \\node ( n1 ) at ( 2,1 ) { \\(g|\\nu g|\\ ) } ;              \\node ( n2 ) at ( 0,0 ) { \\(r|\\nu h|\\ ) } ;              \\node ( n3 ) at ( 1,0 ) { \\(rh|\\nu h|\\ ) } ;              \\node ( n4 ) at ( 2,0 ) { \\(gr|\\nu h|\\ ) } ;                           \\draw[- > ] ( n0 ) to                           node[above ] { \\(\\nu g\\ ) } ( n1 ) ;              \\draw[->,dashed ] ( n2 ) to                                  node[left ] { \\(\\psi\\ ) } ( n0 ) ;              \\draw[- > ] ( n2 ) to                                   node[above ] { \\(\\nu h\\ ) } ( n3 ) ;              \\draw[- > ] ( n3 ) to                                    node[above ] { \\(\\phi_{|\\nu h|}\\ ) } ( n4 ) ;              \\draw[- > ] ( n4 ) to                                   node[right ] { \\(g\\psi\\ ) }   ( n1 ) ;      \\end{tikzpicture}\\ ] ] where @xmath256 is the natural isomorphism witnessing @xmath127 as a lifting of @xmath262 . to this end",
    ", we need to assume @xmath264 from above to be an isomorphism or , equivalently , @xmath265 in @xmath45 . in such case",
    "we say that final invariants lift along the mediator @xmath88 . formally :",
    "[ def : final - invariants - lift ] for @xmath266 we say that _ final invariants lift along @xmath88 _ whenever @xmath267          \\begin{scope}[rotate=45 ]              \\begin{scope}[scale=1.2 ]              \\node ( n0 ) at ( 0.0 , 1.0 ) { \\({\\ensuremath{\\mathbf{p}}\\xspace}\\ ) } ;              \\node ( n1 ) at ( 0.0 , 0.0 ) { \\({{\\ensuremath{[{\\ensuremath{\\mathbf{d}}\\xspace},{\\ensuremath{\\mathbf{d}}\\xspace}]}}}\\ ) } ;              \\node ( n2 ) at ( 1.0 , 1.0 ) { \\({{\\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace}]}}}\\ ) } ;              \\node ( n3 ) at ( 1.0 , 0.0 ) { \\({\\ensuremath{[{\\ensuremath{\\mathbf{d}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace}]}}\\ ) } ;              \\node ( n4 ) at ( 1.4,-1.4 ) { \\({\\ensuremath{\\mathbf{d}}\\xspace}\\ ) } ;              \\node ( n5 ) at ( 2.4,-0.4 ) { \\({\\ensuremath{\\mathbf{c}}\\xspace}\\ ) } ;                           \\draw[- > ] ( n0 ) -- ( n1 ) ;              \\draw[- > ] ( n0 ) -- ( n2 ) ;              \\draw[- > ] ( n1 ) to node[pos=1,swap ] { \\((r\\circ-)\\ ) } ( n3 ) ;               \\draw[- > ] ( n2 ) to node[pos=1 ] { \\((-\\circ r)\\ ) } ( n3 ) ;                           \\draw[- > ] ( n1 ) to node[swap ] { \\(|\\nu-|\\ ) } ( n4 ) ;              \\draw[- > ] ( n2 ) to node { \\(|\\nu-|\\ ) } ( n5 ) ;              \\draw[- > ] ( n4 ) to node[swap ] { \\(r\\ ) } ( n5 ) ;                           \\node at ( .5,.5 ) { \\(\\cong\\ ) } ;              \\node at ( 1.6,-.6 ) { \\(\\cong\\ ) } ;          \\end{scope }          \\draw ( n0 ) + + ( 7pt,-2pt ) -- + + ( 0pt,-5pt ) -- + + ( -5pt,0pt ) ;          \\end{scope }      \\end{tikzpicture}\\ ] ]    under such conditions , @xmath88 mediates all abstract behaviours between lifted and dropped endofunctors thus providing the bridge between the category @xmath28 ( where systems are modelled ) and the category @xmath39 ( where parameters range ) required to capture the fact that higher - order behaviours operate on behaviours of the same kind .",
    "this is captured by extending as follows : @xmath268 then , [ def : hob ] generalises to this setting as follows :    [ def : hob - lift ] for @xmath269}}}}$ ] , @xmath270 is said to characterise higher - order behaviours in @xmath78 if , and only if , there is @xmath271 such that they are solutions to .",
    "note that coincides with under the assumption that final invariants lift along @xmath88 meaning that we can move some of the information from the equation system to the hypothesis .",
    "this simplification is crucial to our aim of obtaining solutions to as invariants of suitable endofunctors along the lines of [ sec : hob ] . henceforth , we assume @xmath88 such that final invariants lifts along it .",
    "we remark that this holds for any functor preserving final sequences and , in particular , for any right @xmath25-adjoint :    [ thm : final - invariants - lift ] final invariants lift along right @xmath25-adjoints .",
    "the statement can be proved along the lines of peter j.  freyd s `` reflective subcategory lemma '' @xcite .",
    "assume , for the argument sake , that there exists an assignment mapping each @xmath272 to a chosen @xmath273}}}$ ] lifting to @xmath127 .",
    "then , we can reformulate as follows : @xmath274 since both and impose solutions to satisfy the lifting condition we can restrict , without loss of generality , to functors of type @xmath275 .",
    "assume that above assignment extends to a functor @xmath276}}}$ ] , then we can obtain solutions to as invariants by applying the approach described in [ sec : hob - solutions ] to the functor : @xmath277 } } }      \\text{.}\\ ] ] in general , there might be no ( functorial ) assignment @xmath278 but there might be several as well . in the latter case , we remark that they are all equivalent under the assumption that final invariants lift along the mediating functor .",
    "in fact , the following holds : @xmath239      \\begin{scope}[xscale=1.8,yscale=1.1 ]          \\node ( n0 ) at ( 0,1 ) { \\({\\ensuremath{{\\ensuremath{\\mathbf{lift}}\\xspace}_{r}}}\\ ) } ;          \\node ( n1 ) at ( 0,0 ) { \\({{\\ensuremath{[{\\ensuremath{\\mathbf{d}}\\xspace},{\\ensuremath{\\mathbf{d}}\\xspace}]}}}\\ ) } ;          \\node ( n2 ) at ( 1,1 ) { \\({{\\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace}]}}}\\ ) } ;          \\node ( n3 ) at ( 1,0 ) { \\({\\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{d}}\\xspace}]}}\\ ) } ;                   \\draw[- > ] ( n0 ) to node { i } ( n2 ) ;          \\draw[- > ] ( n0 ) to node[swap ] { \\((\\overline{-})\\ ) } ( n1 ) ;          \\draw[- > ] ( n2 ) to node { \\((-\\circ r)\\ ) } ( n3 ) ;          \\draw[- > ] ( n1 ) to node[swap ] { \\((r\\circ -)\\ ) } ( n3 ) ;                   \\node at ( .5,.5 ) { \\(\\cong\\ ) } ;      \\end{scope } \\end{tikzpicture } \\implies \\begin{tikzpicture } [      auto , xscale=1.8,yscale=1.1 , font=\\footnotesize ,      baseline=(current bounding box.center ) ]      \\node ( n0 ) at ( 0,1 ) { \\({\\ensuremath{{\\ensuremath{\\mathbf{lift}}\\xspace}_{r}}}\\ ) } ;      \\node ( n1 ) at ( 0,0 ) { \\({{\\ensuremath{[{\\ensuremath{\\mathbf{d}}\\xspace},{\\ensuremath{\\mathbf{d}}\\xspace}]}}}\\ ) } ;      \\node ( n2 ) at ( 1,1 ) { \\({\\ensuremath{\\mathbf{c}}\\xspace}\\ ) } ;      \\node ( n3 ) at ( 1,0 ) { \\({\\ensuremath{\\mathbf{d}}\\xspace}\\ ) } ;           \\draw[- > ] ( n0 ) to node { \\(|\\nu-|\\ ) } ( n2 ) ;      \\draw[- > ] ( n0 ) to node[swap ] { \\((\\overline{-})\\ ) } ( n1 ) ;      \\draw[- > ] ( n1 ) to node[swap ] { \\(|\\nu-|\\ ) } ( n3 ) ;      \\draw[- > ] ( n3 ) to node[swap ] { \\(r\\ ) } ( n2 ) ;           \\node at ( .5,.5 ) { \\(\\cong\\ ) } ; \\end{tikzpicture}\\ ] ] where the inclusion @xmath279 is given by construction of @xmath280 . if @xmath88 is 2-monic in a 2-category is said to be 2-monic provided that @xmath281 .",
    "] , then any endofunctor in @xmath280 is the lifting of a unique ( up - to isomorphism ) endofunctor :    [ thm : chosen - drop ] for @xmath88 2-monic , the diagram below commutes : @xmath267          \\begin{scope}[xscale=1.8,yscale=1.1 ]              \\node ( n0 ) at ( 0,1 ) { \\({\\ensuremath{{\\ensuremath{\\mathbf{lift}}\\xspace}_{r}}}\\ ) } ;              \\node ( n1 ) at ( 1,1 ) { \\({{\\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace}]}}}\\ ) } ;              \\node ( n2 ) at ( 0,0 ) { \\({{\\ensuremath{[{\\ensuremath{\\mathbf{d}}\\xspace},{\\ensuremath{\\mathbf{d}}\\xspace}]}}}\\ ) } ;              \\node ( n3 ) at ( 1,0 ) { \\({\\ensuremath{[{\\ensuremath{\\mathbf{d}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace}]}}\\ ) } ;                           \\draw[- > ] ( n0 ) -- ( n1 ) ;              \\draw[dashed,- > ] ( n0 ) to node[swap ] { \\((\\overline{-})\\ ) } ( n2 ) ;              \\draw[- > ] ( n1 ) to node { \\((-\\circ r)\\ ) } ( n3 ) ;              \\draw[- > ] ( n2 ) to node[swap ] { \\((r\\circ-)\\ ) } ( n3 ) ;                           \\node at ( .5,.5 ) { \\(\\cong\\ ) } ;          \\end{scope }      \\end{tikzpicture}\\ ] ]    the functor @xmath282 is 2-monic since , by hypothesis , @xmath88 is so . by construction ,",
    "@xmath283}}}$ ] is 2-monic and thus @xmath240 is @xmath280 .",
    "the desired @xmath278 is @xmath284 .",
    "therefore , can be solved by applying the techniques presented in [ sec : hob ] to @xmath285}}}$ ] .",
    "[ thm : solutions - lift ] assume @xmath39 @xmath25-algebraically compact , @xmath266 2-monic in @xmath286 , and final invariants to lift along @xmath88 . for any @xmath25-functor @xmath287",
    "the equation system admits a unique dominating solution .",
    "apply [ thm : solutions ] to @xmath285}}}$ ] which exists by [ thm : chosen - drop ] .",
    "[ [ example - lazy - deterministic - behaviours ] ] example : lazy deterministic behaviours + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    let @xmath28 and @xmath39 be @xmath25and @xmath27 , respectively , and let @xmath234 be the inclusion @xmath288 whose left @xmath25-adjoint is the lifting functor @xmath289 .",
    "the endofunctor @xmath290 over @xmath27lifts to @xmath25along @xmath88 as it is .",
    "the outer lifting functor @xmath291 creates a bottom associated with the system being stuck .",
    "the function space functor @xmath292 describes lazy inputs since these functions are not strict . finally , the constant functor @xmath84 models behaviours terminating producing an output in a lazy fashion since the bottom element of @xmath84 is distinct from the one provided by @xmath291 .",
    "finally , the assignment @xmath293 determines a @xmath25-functor @xmath294 allowing us to apply [ thm : solutions - lift ] and obtain the dominating endofunctor among those in @xmath78 that model lazy deterministic higher - order behaviours .      in this section",
    "we assume the same settings of [ sec : hob - lifted ] except for @xmath88 going in the opposite direction .",
    "because the mediating functor @xmath88 is reversed , we have to consider dropped endofunctors have and `` symmetrise '' all constructions presented in [ sec : hob - lifted ] .",
    "as above , we define endofunctors modelling higher - order behaviours by a conservative extension of [ def : hob ] and show that such endofunctors exists and can be computed as limits of sequences akin to those we used so far .",
    "the category @xmath295 of endofunctors _ dropped _",
    "along @xmath296 is defined , symmetrically to @xmath280 , as the replete image of the projection @xmath297}}}$ ] from the 2-pullback : @xmath239      \\begin{scope}[xscale=1.8,yscale=1.1 ]          \\node ( n0 ) at ( 0,1 ) { \\({\\ensuremath{\\mathbf{p}}\\xspace}\\ ) } ;          \\node ( n1 ) at ( 0,0 ) { \\({{\\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace}]}}}\\ ) } ;          \\node ( n2 ) at ( 1,1 ) { \\({{\\ensuremath{[{\\ensuremath{\\mathbf{d}}\\xspace},{\\ensuremath{\\mathbf{d}}\\xspace}]}}}\\ ) } ;          \\node ( n3 ) at ( 1,0 ) { \\({\\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{d}}\\xspace}]}}\\ ) } ;                   \\draw[- > ] ( n0 ) to node[swap ] { \\(p_1\\ ) } ( n1 ) ;          \\draw[- > ] ( n0 ) to node { \\(p_2\\ ) } ( n2 ) ;          \\draw[- > ] ( n1 ) to node[swap ] { \\((r\\circ-)\\ ) } ( n3 ) ;          \\draw[- > ] ( n2 ) to node { \\((-\\circ r)\\ ) } ( n3 ) ;                   \\node at ( .5,.5 ) { \\(\\cong\\ ) } ;      \\end{scope }      \\draw ( n0 ) + + ( 7pt,-2pt ) -- + + ( 0pt,-5pt ) -- + + ( -5pt,0pt ) ; \\end{tikzpicture}\\ ] ] this definition extends to the @xmath34-enriched setting as it is .",
    "in particular , for @xmath88 a @xmath34-functor , @xmath295 is the sub-@xmath249-category of @xmath134}}}$ ] formed by all    * @xmath262 s.t .",
    "for some @xmath298}}}$ ] , @xmath237 in @xmath299}}$ ] ; * @xmath253 s.t .",
    ", for some @xmath252 in @xmath238}}}$ ] , @xmath254 in @xmath299}}$ ] ( _ i.e._@xmath255 for @xmath256 and @xmath257 ) ; * @xmath300 s.t . , for some @xmath301}}}$ ] , @xmath254 and @xmath260 .",
    "the functor @xmath88 has to mediate all abstract behaviours between lifted and dropped endofunctors in the sense that , for @xmath127 lifting of @xmath262 , the image through @xmath88 of the final @xmath127-coalgebra ( canonically ) extends to the final @xmath127-coalgebra ( see ) .",
    "formally :    [ def : final - invariants - drop ] for @xmath302 we say that _ final invariants drop along @xmath88 _ whenever @xmath239      \\begin{scope}[rotate=45 ]          \\begin{scope}[scale=1.2 ]          \\node ( n0 ) at ( 0.0 , 1.0 ) { \\({\\ensuremath{\\mathbf{p}}\\xspace}\\ ) } ;          \\node ( n1 ) at ( 0.0 , 0.0 ) { \\({{\\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace}]}}}\\ ) } ;          \\node ( n2 ) at ( 1.0 , 1.0 ) { \\({{\\ensuremath{[{\\ensuremath{\\mathbf{d}}\\xspace},{\\ensuremath{\\mathbf{d}}\\xspace}]}}}\\ ) } ;          \\node ( n3 ) at ( 1.0 , 0.0 ) { \\({\\ensuremath{[{\\ensuremath{\\mathbf{d}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace}]}}\\ ) } ;          \\node ( n4 ) at ( 1.4,-1.4 ) { \\({\\ensuremath{\\mathbf{c}}\\xspace}\\ ) } ;          \\node ( n5 ) at ( 2.4,-0.4 ) { \\({\\ensuremath{\\mathbf{d}}\\xspace}\\ ) } ;                   \\draw[- > ] ( n0 ) -- ( n1 ) ;          \\draw[- > ] ( n0 ) -- ( n2 ) ;          \\draw[- > ] ( n1 ) to node[pos=1,swap ] { \\((r\\circ-)\\ ) } ( n3 ) ;           \\draw[- > ] ( n2 ) to node[pos=1 ] { \\((-\\circ r)\\ ) } ( n3 ) ;                   \\draw[- > ] ( n1 ) to node[swap ] { \\(|\\nu-|\\ ) } ( n4 ) ;          \\draw[- > ] ( n2 ) to node { \\(|\\nu-|\\ ) } ( n5 ) ;          \\draw[- > ] ( n4 ) to node[swap ] { \\(r\\ ) } ( n5 ) ;                   \\node at ( .5,.5 ) { \\(\\cong\\ ) } ;          \\node at ( 1.6,-.6 ) { \\(\\cong\\ ) } ;      \\end{scope }      \\draw ( n0 ) + + ( 7pt,-2pt ) -- + + ( 0pt,-5pt ) -- + + ( -5pt,0pt ) ;      \\end{scope } \\end{tikzpicture}\\ ] ]    final invariants drop along functors that preserve final sequences and , in particular , along any right @xmath25-adjoint :    [ thm : final - invariants - drop ] final invariants drop along right @xmath25-adjoints .",
    "the statement can be proved along the lines of peter j.  freyd s `` reflective subcategory lemma '' @xcite .",
    "akin to , generalises to @xmath303}}}$ ] as : @xmath304 where we are actually interested only in the unknown @xmath262 for its values are the endofunctors modelling the systems under scrutiny .",
    "generalises to this setting as follows :    [ def : hob - drop ] for @xmath305 , an endofunctor is said to characterise higher - order behaviours in @xmath78 if , and only if , it is solution to .",
    "when final invariants drop along @xmath88 and ( @xmath78 restricts to @xmath295 ) , can be reformulated in the unknown @xmath262 alone yielding : @xmath306 this equation determines the functor @xmath307 } } }   \\ ] ] and , although its type is the one considered in [ sec : hob ] , we can not apply [ thm : solutions ] since here we do not assume @xmath28 @xmath25-algebraically compact . therefore , we need to capture in terms of endofunctors over @xmath231 .",
    "akin [ sec : hob - lifted ] , given a functorial assignment choosing liftings for endofunctors dropped along @xmath88 , we reformulate as : @xmath308 and , since final invariants drop along @xmath88 , as : @xmath309 which in turn provides us with the desired formulation of in terms of endofunctors over @xmath231 .",
    "solutions can be characterised as invariants of a suitable endofunctor by applying the approach described in [ sec : hob - solutions ] to the functor : @xmath310 } } }      \\text{.}\\ ] ] all considerations from [ sec : hob - lifted ] about the existence of an assignment @xmath278 apply to this setting .",
    "in particular , under the dual hypothesis of [ thm : chosen - drop ] , there is a unique functor @xmath278 :    [ thm : chosen - lift ] for @xmath88 2-epic , the diagram below commutes : @xmath267          \\begin{scope}[xscale=1.8,yscale=1.1 ]              \\node ( n0 ) at ( 0,1 ) { \\({\\ensuremath{{\\ensuremath{\\mathbf{drop}}\\xspace}_{r}}}\\ ) } ;              \\node ( n1 ) at ( 0,0 ) { \\({{\\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{c}}\\xspace}]}}}\\ ) } ;              \\node ( n2 ) at ( 1,1 ) { \\({{\\ensuremath{[{\\ensuremath{\\mathbf{d}}\\xspace},{\\ensuremath{\\mathbf{d}}\\xspace}]}}}\\ ) } ;              \\node ( n3 ) at ( 1,0 ) { \\({\\ensuremath{[{\\ensuremath{\\mathbf{c}}\\xspace},{\\ensuremath{\\mathbf{d}}\\xspace}]}}\\ ) } ;                           \\draw[- > ] ( n0 ) to ( n1 ) ;              \\draw[dashed,- > ] ( n0 ) to node { \\((\\overline{-})\\ ) } ( n2 ) ;              \\draw[- > ] ( n1 ) to node[swap ] { \\((r\\circ-)\\ ) } ( n3 ) ;              \\draw[- > ] ( n2 ) to node { \\((-\\circ r)\\ ) } ( n3 ) ;                           \\node at ( .5,.5 ) { \\(\\cong\\ ) } ;          \\end{scope }      \\end{tikzpicture}\\ ] ]    the functor @xmath311 is 2-monic since , by hypothesis , @xmath88 is 2-epic . by construction , @xmath312}}}$ ] is 2-monic and thus @xmath240 is @xmath295 .",
    "the desired @xmath278 is @xmath284 .",
    "the approach discussed so far corresponds to the upper path of the following diagram : @xmath313      \\node ( m-1 - 1 ) at ( 0,0 ) { \\({\\ensuremath{\\mathbf{d}}\\xspace}{^{o\\mspace{-2mu}p}}\\times{\\ensuremath{\\mathbf{d}}\\xspace}\\ ) } ;      \\node ( m-1 - 2 ) at ( 1,0 ) { \\({\\ensuremath{{\\ensuremath{\\mathbf{drop}}\\xspace}_{r}}}\\ ) } ;      \\node ( m-1 - 3 ) at ( 2,0 ) { \\({\\ensuremath{\\mathbf{c}}\\xspace}\\ ) } ;      \\node ( m-2 - 2 ) at ( 1,1 ) { \\({{\\ensuremath{[{\\ensuremath{\\mathbf{d}}\\xspace},{\\ensuremath{\\mathbf{d}}\\xspace}]}}}\\ ) } ;      \\node ( m-2 - 3 ) at ( 2,1 ) { \\({\\ensuremath{\\mathbf{d}}\\xspace}\\ ) } ;           \\draw[- > ] ( m-1 - 1 ) to node[swap ] { \\({\\mathfrak{f}}\\ ) } ( m-1 - 2 ) ;      \\draw[- > ] ( m-1 - 2 ) to node[swap ] { \\(|\\nu-|\\ ) } ( m-1 - 3 ) ;      \\draw[- > ] ( m-1 - 2 ) to node [ ] { \\((\\overline{-})\\ ) } ( m-2 - 2 ) ;      \\draw[- > ] ( m-1 - 3 ) to node[swap ] { \\(r\\ ) } ( m-2 - 3 ) ;      \\draw[- > ] ( m-2 - 2 ) to node { \\(|\\nu-|\\ ) } ( m-2 - 3 ) ;                \\node at ( 1.5,.5 ) { \\(\\cong\\ ) } ; \\end{tikzpicture}\\ ] ] since the diagram commutes ( final invariants drop along @xmath88 by assumption ) , any solution obtained applying [ thm : solutions ] to @xmath314 can be determined also as an invariant of the symmetric endofunctor over @xmath315 induced by the lower path .",
    "crucially , the latter does not assume the existence of @xmath278 .",
    "[ thm : solutions - drop ] assume @xmath39 @xmath25-algebraically compact and final invariants to drop along @xmath302 . for a @xmath25-functor @xmath316 ,",
    "admits a unique ( up - to iso ) dominating solution .",
    "let @xmath317 denote the symmetric @xmath25-enriched endofunctor over @xmath318 induced by @xmath319 . by [ cor : compact - product - dual ] is @xmath318 @xmath25-algebraically compact and hence both the initial @xmath317-algebra and final @xmath317-coalgebra exists and are isomorphic yielding , by symmetry @xmath320 s.t .",
    "@xmath321 is the desired dominating solution to .",
    "in this paper we have showed how to define behaviours of higher - order systems as final coalgebras of suitable behavioural functors . to this end , we had to solve an intrinsic circularity between the definition of these functors , and their own final coalgebra .",
    "we have provided a general construction for both the functors and the final coalgebra , based on a limit - colimit coincidence argument .",
    "thus , the final coalgebra of such a functor is the object of all abstract higher - order behaviours . as a direct application of the theory of coalgebras , we are now able to define a canonical higher - order coalgebraic bisimulation and show it to coincide with coalgebraic bisimulation for value - passing behaviours .",
    "this allows us to employ techniques developed for the seconds ( _ e.g._@xcite ) to the higher - order case .",
    "these results allow us to contextualize higher - order systems within the general framework of coalgebraic semantics , thus bridging the gap between the two worlds .",
    "it is interesting future work to investigate the application of results from coalgebras , to higher - order systems .",
    "in particular , we expect to be able to define general _ higher - order trace equivalences _ and _ higher - order weak bisimulations _ by applying the constructions given in @xcite .",
    "this work sheds some light on the very nature of higher - order behaviour .",
    "in fact , there is no general consensus on a _",
    "criterium_for deciding when a calculus is `` higher - order '' .",
    "we think that a calculus which is capable to `` deal '' with its own processes via some encoding should not be considered really higher - order , as much as first - order logic is not considered on a par with higher - order logic .",
    "the results presented in this paper suggest that _ a calculus has an higher - order behaviour if its behavioural functor is defined in terms of its own final coalgebra_. according to this _ criterium _ , @xmath0-calculus , chocs , ho@xmath1 , are higher - order , while ccs , @xmath1-calculus , ambient calculus are not .",
    "indeed there are encodings of higher - order calculi in first - order ones ( see _ e.g._@xcite for an encoding from @xmath0-calculus to @xmath1-calculus ) suggesting that their targets `` have higher - order semantics '' .",
    "nonetheless , these encodings do not reflect strong bisimulations but only weaker notions that hide auxiliary steps introduced by the encoding .    to our knowledge , this is the first general construction of syntax - independent functors for higher - order behaviours .",
    "many authors have studied labelled transition systems and bisimulations for higher - order calculi ( _ e.g. _ , `` applicative '' , `` environmental '' , ) ; see @xcite among others . however , these approaches are tied to the syntactic presentations of specific languages , with no abstract definition of higher - order behaviours .",
    "instead , our work achieves a clear separation between syntax and semantics , which can thus be covered within the bialgebraic theory of sos specifications @xcite .",
    "the diagram shown in [ fig : unfolding - thm - solution ] suggests that horizontal layers characterise behaviours approximating higher - order ones . from this perspective",
    ", an higher - order behaviour is uniquely defined by countable family of finite - order approximations .",
    "we plan to investigate this construction in the context of @xmath45-valued sheaves over the downward topology on the first transfinite ordinal @xmath26 .",
    "when @xmath45 is @xmath7 , this category is the well - known topos of trees @xcite . since the topology considered has a well - founded base , we would be able to work on higher - order behaviours by inductive arguments on their finite - order approximations .",
    "p.  aczel and n.  mendler . a final coalgebra theorem . in d.",
    "h. pitt , d.  e. rydeheard , p.  dybjer , a.  m. pitts , and a.  poign , editors , _ proc .",
    "ctcs _ , volume 389 of _ lecture notes in computer science _ , pages 357365 .",
    "springer , 1989 .",
    "r.  de nicola , g.  iacobelli , and m.  tribastone .",
    "dimming relations for the efficient analysis of concurrent systems via action abstraction . in _ forte _ , volume 8461 of _ lecture notes in computer science _ ,",
    "pages 216231 .",
    "springer , 2014 .",
    "algebraically complete categories . in a.",
    "carboni , m.  pedicchio , and g.  rosolini , editors , _ category theory _ , volume 1488 of _ lecture notes in mathematics _ ,",
    "pages 95104 .",
    "springer berlin heidelberg , 1991 .",
    "p.  j. freyd .",
    "remarks on algebraically compact categories . in _ applications of categories in computer science : proceedings of the london mathematical society symposium _ ,",
    "volume 177 , page  95 .",
    "cambridge university press , 1992 .",
    "j.  glimming .",
    "parametric ( co)iteration vs. primitive direcursion . in t.",
    "mossakowski , u.  montanari , and m.  haveraaen , editors , _ proc .",
    "calco _ , volume 4624 of _ lecture notes in computer science _ , pages 257278 .",
    "springer , 2007 .",
    "f.  honsell and m.  lenisa .",
    "final semantics for untyped lambda - calculus . in m.",
    "dezani - ciancaglini and g.  d. plotkin , editors , _ proc .",
    "tlca _ , volume 902 of _ lecture notes in computer science _ ,",
    "pages 249265 .",
    "springer , 1995 .",
    "m.  miculan and m.  peressotti . for non - deterministic processes with quantitative aspects . in n.  bertrand and l.",
    "bortolussi , editors , _ proc .",
    "qapl _ , volume 154 of _ electronic proceedings in theoretical computer science _ , pages 1733 .",
    "open publishing association , 2014 ."
  ],
  "abstract_text": [
    "<S> in this paper we show how the abstract behaviours of higher - order systems can be modelled as _ final coalgebras _ of suitable _ </S>",
    "<S> behavioural functors_. these functors have the challenging peculiarity to be circularly defined with their own final coalgebra . </S>",
    "<S> our main contribution is a general construction for defining these functors , solving this circularity which is the essence of higher - order behaviours . </S>",
    "<S> this characterisation is _ </S>",
    "<S> syntax agnostic_. to achieve this property , we shift from term passing to _ </S>",
    "<S> behaviour passing _ : in the former higher - order is expressed by passing around syntactic objects  such as terms or processes  as representations of behaviours whereas the former ditches the syntactic encoding altogether and works directly with behaviours _ </S>",
    "<S> i.e._semantic objects . from this perspective , the former can be seen as syntactic higher - order whereas the latter as _ semantic higher - order_. </S>"
  ]
}
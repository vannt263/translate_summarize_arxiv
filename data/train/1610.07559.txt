{
  "article_text": [
    "the international energy agency reported in 2009 that power consumption has dramatically increased over the last 25 years @xcite .",
    "importantly , buildings account for about 40% of the total energy consumption @xcite .",
    "consequently , smart and sustainable solutions need to optimize power consumption and minimize electricity loads .",
    "smart grids combine advanced monitoring and communication technologies to provide energy in a smart , efficient , and user friendly manner @xcite . according to a.j .",
    "conejo , j.m .",
    "morales , and l. baringo @xcite , the concept of the smart grid refers to electrical networks with additional technology to provide easy interaction for all the consumers connected to it .",
    "also , one of the key characteristics of the smart grid is the provision of two - way communication between the energy provider and the different types of energy consumers .    with a smart grid , energy providers could use dynamic pricing to optimize objectives , such as minimizing the peak demand and matching time - varying demand to time - varying supply  @xcite . in dynamic pricing ,",
    "the price of electricity is varied over time to encourage consumers to alter their behavior .",
    "however , to do so effectively , energy providers must understand consumer behavior , including their demands and flexibility  @xcite , since strategic consumers are likely to shift consumption to periods with low prices  @xcite . when energy providers know or can effectively estimate the algorithms ( and parameters ) used by consumers to make decisions , they can potentially set prices to effectively influence collective consumer behavior .    in this work ,",
    "we consider two optimization problems in the smart grid : minimizing peak demand and matching time - varying demand to time - varying supply . in both problems",
    ", we consider a composition of consumers in a power system that use a threshold policy to determine when to consume electricity .",
    "the composition includes the number of arrivals , their demands , and their consumption deadlines , at different time periods .",
    "we assume that the consumer has a single amount of demand to be consumed at a time period between her arrival and deadline . for both problems , we consider scenarios in which the consumers composition is both known and unknown beforehand .",
    "this model gives rise to optimization problems that are computationally ( np-)hard to solve in general . to overcome this intrinsic difficulty , we first propose and evaluate two generic heuristics for providing an approximate solution for the two problems . while we are not able to theoretically analyze in general how close to optimal the solutions produced by these heuristics , we provide theoretical analysis of the approximation gap in the case when _ uniform pricing _ is applied to minimize peak demand .",
    "moreover , we propose _ optimal _ pricing algorithms that can be used when the maximum deadline period of the power jobs is relatively small .",
    "finally , we conduct several experiments to evaluate the performance of the proposed algorithms , which are validated by the use of real appliances data available on pecan street s dataport website @xcite .",
    "we begin by reviewing related prior work .",
    "to effectively set prices , it is important to estimate the consumers response to the chosen prices .",
    "several models have been considered to estimate the consumers demand as a function of price @xcite , @xcite , @xcite .",
    "we focus on the model presented by m. ohannessian et al .",
    "@xcite , as we use it in this work . in this model ,",
    "consumers have demands that must be met be a certain deadline .",
    "a consumer may delay her consumption up until this deadline if prices are not satisfactory .",
    "consumers use a threshold policy to determine when to consume , in which they consume when the prices falls below the computed threshold .    given this problem formulation ,",
    "the authors presented a formula for computing the aggregate consumption as a function of the price when the arrivals and their demands are known beforehand .",
    "the authors additionally presented an averaged model that can be used when the exact knowledge about the number of arrivals and their demands is unknown .",
    "the model assumes knowledge about the arrival and demand rates , and uses them to estimate the expected consumption . when the consumers composition is unknown beforehand , the authors proposed an estimator that uses the history of the price and the total consumption to estimate the arrival and demand rates .",
    "the authors showed that , when the number of time periods in the history is sufficiently large , the proposed estimator is consistent and unbiased .",
    "c. ibars , m. navarro , and l. giupponi @xcite , proposed a distributed load - management technique for controlling the consumer load profile using dynamic pricing .",
    "the technique aims balance consumption across the different hours of the day .",
    "the problem was formulated as a congestion game that models a competition over the network , where the cost is a function of the congestion level .",
    "the game was shown to converge to a nash equilibrium , after a finite number of improvement steps .",
    "simulations showed that the proposed demand - management scheme leads to a reduction in the peak demand , compared to the unmanaged demand scheme .",
    "n. li , l. chen , and s.h .",
    "low @xcite showed that dynamic pricing can be used to manage the consumers demand to benefit both consumers and the utility .",
    "the objective of the utility company , which serves a group of consumers , is to maximize the social welfare , and the objective of the individual consumer is to maximize her net benefit .",
    "the authors prove that dynamic pricing can lead to the optimality of the social welfare as well as the individual objective , reaching a nash equilibrium .",
    "based on this result , the authors proposed a distributed algorithm in which the consumers and the utility company compute the equilibrium iteratively .",
    "simulations showed that the proposed scheme balances demand over time , and , thus , effectively reduces the peak load .",
    "ramchurn et al .",
    "@xcite argued that balancing demand and supply is achieved in today s power grid through a real - time varying of the supply to match the demand .",
    "nevertheless , the authors suggested that a more powerful balancing scheme is where the demand follows the supply , as its flattens the peak load , avoids overloading the generators , and leads to fast recovery given power failures .",
    "these authors proposed time - of - use ( tou ) pricing , which provides an expensive price during peak hours .",
    "however , it has been shown that such pricing methods result in a high peak demand during the off - peak hours @xcite .",
    "this drawback of static pricing has led many researchers to consider dynamic pricing @xcite .",
    "wijaya , k.m .",
    "larson , and k. aberer @xcite proposed a methodology in which the peak - to - average - ratio ( par ) is explicitly cut from the supply load through a par - cut algorithm , and the consumers adapt to the resulting load .",
    "the adaptation is done through a multiunit auction , which results in a redistribution of the load .",
    "the auction provides truthful bidding  a consumer has no incentive to lie about her valuation .",
    "the experimental results demonstrated a significant cost reduction when the cut percentage is above 20% .",
    "moreover , the experiments showed that the consumers can save up to approximately 20% of their electricity bill , depending on the par cut percentage and the consumers valuation .",
    "finally , the company can gain up to about 10% in additional revenue depending on the par cut .",
    "j. a. taylor et al .",
    "@xcite considered consolidated dynamic pricing .",
    "the regulation includes services that adapt in real - time to unexpected system changes .",
    "the authors proposed a regulation scheme based on optimal control - based pricing @xcite , while incentivizing a linear quadratic optimal regulation to reach a competitive equilibrium .",
    "finally , the authors utilized tools from mechanism design and convex optimization to make the approach significantly more adaptable and practical .      in our work , we utilize a simplified version of the model presented by m. ohannessian et al .",
    "@xcite to estimate consumer price response to solve the problems of peak - demand minimization and matching demand to supply using dynamic pricing .",
    "we also utilize the estimator proposed by m. ohannessian et al .",
    "@xcite to estimate the consumers composition when it is unknown .",
    "in this section , we present our mathematical formulation for the problem of peak - demand minimization , as follows .",
    "we denote the time by @xmath0 .",
    "let @xmath1 denote the number of arrivals at time @xmath2 , with deadline @xmath3 .",
    "without loss of generality , we assume that each consumer has a single amount of demand to be consumed at a time period between her arrival and deadline . therefore , we ignore the backlog demand notation used by m. ohannessian et al .",
    "consequently , the demand of consumer @xmath4 is independent of time , and denoted by @xmath5 .",
    "let @xmath6 denote the price per unit of consumption at time @xmath2 .",
    "let @xmath7 denote the threshold policy of consumers who have time to go @xmath8 , where @xmath9 .",
    "let @xmath10 denote the group of consumers at time @xmath2 , who have time to go @xmath8 , have been in the system for @xmath11 time periods , where @xmath12 , and have not yet consumed their demands .",
    "let @xmath13 denote the total power consumption at time @xmath2 when the price is @xmath14 .",
    "our objective is to set the prices at the different time periods such that the peak demand is minimized .",
    "more formally , the problem formulation is , @xmath15    constraint ( [ pdp_c1 ] ) ensures that the consumption at time @xmath2 accounts for all consumers with threshold policies that accept the chosen price at time @xmath2 .      in this section",
    ", we present our mathematical formulation for the problem of matching demand to supply .",
    "we will use the formulation presented in the previous section , with a simple modification as follows .",
    "let @xmath16 denote the power supply at time @xmath2 . recall that @xmath13 denotes the total power consumption at time @xmath2 when the price is @xmath14 .",
    "our objective is to set the price such that the mse between the total power consumption and the power supply is minimized .",
    "more formally , the problem formulation is ,    @xmath17    such that ( [ pdp_c1 ] ) is satisfied .",
    "it can be shown that this problem is np - complete ( see the appendix ) .",
    "thus , in section  [ generic ] we will consider heuristics for solving the problem .",
    "we assume that the consumers arrival follows a poisson process , which is independent for the different deadlines and the demand process , and independent and identically distributed ( i.i.d . ) across time with a mean @xmath18 , where @xmath19 .",
    "this assumption is consistent with the system model presented by m. ohannessian et al .",
    "we also assume that the maximum deadline period @xmath20 is constant .",
    "finally , we assume that the threshold policy @xmath7 is monotonically increasing with the decrease of @xmath8 , and that all threshold policies guarantee consumption by the consumers deadlines .",
    "in this section , we describe a generic greedy heuristic that can handle several pricing optimization problems , including the problems of peak - demand minimization , and matching demand to supply .",
    "in addition to the heuristic description , we provide an analysis for the time complexity of the heuristic .",
    "the pseudocode of the greedy heuristic is presented in algorithm [ greedy_heuristic ] . at each time period",
    ", the heuristic chooses a price among the threshold policies , such that the optimization objective is locally achieved . achieving the optimization objective",
    "locally is defined as optimizing the consumption at time period @xmath2 , without considering the other time periods .",
    "the chosen prices at the different time periods are finally returned as an output .",
    "the greedy heuristic can be used to solve the peak - demand minimization problem , by setting the optimization objective to ( [ pdp_o ] ) .",
    "similarly , the problem of matching demand to supply can be solved using the greedy heuristic by setting the optimization objective to ( [ obj_dsm ] ) .",
    "return @xmath14    the expected runtime of the greedy heuristic is @xmath21 .",
    "the greedy heuristic performs @xmath22 iterations to set the prices at the different time periods . in each iteration , the heuristic loops over @xmath20 threshold policies to select the optimal one . for each threshold policy",
    ", the heuristic accumulates the consumers demand that would result when setting the price to that threshold policy . to identify the number of consumers whose demands to be accumulated at each time period , we recall the notation @xmath10 , which denotes the group of consumers at time @xmath2 , who have time to go @xmath8 , and",
    "have been in the system for @xmath11 time periods .",
    "based on our early assumptions , it is obvious that the expected number of consumers in @xmath10 is @xmath23 . therefore , the expected number of consumers at each time period is no more than @xmath24 .",
    "consequently , the expected runtime of the greedy heuristic is @xmath21 .      in this section ,",
    "we describe another generic heuristic called sliding - window , which can be used to solve the two formulated problems . as in the previous section ,",
    "we additionally analyze the time complexity of the sliding - window heuristic .",
    "further , we discuss the potential improvement in the approximation ratio of the sliding - window over the greedy heuristic .      the pseudocode of the sliding - window heuristic is presented in algorithm [ sliding - window_heuristic ] .",
    "in addition to the optimization objective , the heuristic receives a constant window size @xmath25 as an input . at each time period @xmath2 ,",
    "the heuristic finds the locally optimal sequence of prices in the time interval [ @xmath2 , @xmath26 , by brute force .",
    "the price found at time @xmath2 is then stored in the final solution .",
    "the sliding - window heuristic can be used to solve the peak - demand minimization problem , by simply setting the optimization objective to ( [ pdp_o ] ) .",
    "similarly , the problem of matching demand to supply can be solved using the sliding - window heuristic by setting the optimization objective to ( [ obj_dsm ] ) .",
    "@xmath27 ; @xmath28    return @xmath14    the expected runtime of the sliding - window heuristic is @xmath29 .",
    "the sliding - window heuristic performs @xmath30 iterations to set the prices at the different time periods . at each time period @xmath2 , where @xmath31 , the heuristic finds the optimal sequence of prices in the window between the time periods @xmath2 , and @xmath32 , by brute force",
    "this is done by iterating over all the possible sequence of prices in the window , which are in total @xmath33 sequences .",
    "in addition , for each sequence of prices , the heuristic accumulates the demand response to these prices in the window which is of size @xmath25 .",
    "the expected number of operations to accumulate the demands at each time period is no more than @xmath24 , as mentioned earlier .",
    "therefore , the expected runtime of the heuristic is @xmath29 .",
    "the look - ahead feature of the sliding - window while setting the price at each time period , is expected to provide an improvement in terms of the approximation ratio over the greedy heuristic , which does not take the future time periods into account .",
    "the improvement in the approximation ratio is subject to the window size @xmath25 .",
    "the increase in the window size should naturally reduce the approximation ratio of the heuristic .",
    "this is due to the fact that larger window size means larger number of look - ahead time periods to be considered , leading to a larger optimization coverage .",
    "however , increasing the window size comes with the drawback of reducing the heuristic efficiency in terms of runtime , since the work done on the window increases exponentially with the increase of the window size .",
    "therefore , the choice of the window size should consider a trade - off between the efficiency and the approximation to the optimal solution .",
    "finally , it is worth mentioning that the greedy heuristic is a special case of the sliding - window heuristic , where @xmath25=1 . also , when @xmath34 , the sliding - window heuristic is obviously optimal .",
    "in this section , we study the uniform pricing approach for solving the problem of peak - demand minimization .",
    "the approach fixes the price @xmath14 to a threshold policy @xmath7 during all time periods .",
    "we provide theoretical analysis to show that in the typical configuration of the system , where @xmath22 is fixed , the approximation ratio of the uniform pricing approach on the average case is constant .",
    "we note that our analysis assumes homogeneous demands , in the sense that all consumers in the system have the same amount of demand , denoted by @xmath35 .",
    "[ l1 ] the peak demand of uniform pricing is no more than @xmath36 if demand is homogeneous .    at each time period @xmath2 , where @xmath37 , the algorithm sets the price to a threshold policy @xmath7 , causing the consumers in @xmath38 to consume their demands , and the consumers in @xmath39 , to delay their consumption , as mentioned earlier .",
    "this accumulates a total consumption of @xmath40 , given that the demand is @xmath35 for all consumers .",
    "in addition , there are other groups of consumers who could be present at time period @xmath2 , proceeding from the previous time periods .",
    "we note that among these consumers , no consumer is present with time to go @xmath41 , where @xmath42 , since she would have consumed her demand at an earlier time period , when her time to go was equal to @xmath8 .",
    "also , among the consumers proceeding from the previous time periods , the consumers with time to go @xmath43 , where @xmath44 , will obviously delay their consumption , since @xmath45 .",
    "we are left with the groups of consumers who have time to go @xmath8 , proceeding from the previous time periods .",
    "we denote these groups by a third set , namely @xmath46 .",
    "since the threshold policy of these groups is @xmath7 , the consumers in these groups will consume their demands at time period @xmath2 .",
    "this accumulates an additional consumption of @xmath47 .",
    "hence , the total consumption @xmath48 , where @xmath37 , is @xmath49 . note that for all other time periods @xmath50 , where @xmath51 , or @xmath52 , the number of groups with time to go @xmath8 , proceeding from the previous time periods , are obviously less than those at time period @xmath2 .",
    "therefore , neither @xmath48 , nor @xmath53 can exceed the term @xmath54 .",
    "[ l2 ] the peak demand of the optimal algorithm is no less than @xmath55 if demand is homogeneous .",
    "we prove this lemma by contradiction as follows .",
    "assume that the peak demand is less than @xmath55 .",
    "then , at time period @xmath20 , there is a set of groups of consumers , namely @xmath56 , who will not consume their demands by their deadline , which is the current time period @xmath20 .",
    "this is true , since if they ever consumed their demands , then the peak demand should be at least @xmath55 , given that the threshold policy is monotonically increasing with time . to prove this argument , we know that the group @xmath57 have arrived at time period 1 , with a total demand of @xmath58 . if this group have consumed their demands at time period 1 , then @xmath59",
    "therefore , the group @xmath57 would proceed to time period 2 , when the group @xmath60 arrives with a total demand of @xmath61 .",
    "since both @xmath57 , and @xmath60 have time to go @xmath62 at time period 2 , if any of them consumed at time period 2 , then @xmath63 .",
    "one can obviously proceed with this argument until time period @xmath20 , where none of the groups in @xmath64 would have or will consume their demands . having groups of consumers not consuming their demands by their deadline , contradicts with our early assumption that the threshold policies guarantee the consumption of all consumers by their deadline .",
    "next , we provide an average case analysis for the approximation ratio of the uniform pricing approach . more specifically , we are interested in computing the ratio of the expected upper bound provided in lemma [ l1 ] , over the expected lower bound provided in lemma [ l2 ] .",
    "more formally , we aim to study the value of the following term ,    @xmath65}{e[d\\sum_{n=1}^{n}\\min\\limits_{1\\le k \\le k}\\{a_{n}(k)\\}]}\\end{aligned}\\ ] ]    let @xmath66 , and @xmath67 , we consider the following simplification for @xmath68 ,    @xmath69}{d\\sum_{n=1}^{n}e[a_{min}^n ] } \\le \\max\\limits_{1\\le n \\le n}\\left\\ { \\frac{e[a_{max}^n]}{e[a_{min}^n]}\\right\\}\\end{aligned}\\ ] ]    consequently , we obtain the following theorem ,    the ratio of the expected peak demand of the uniform pricing approach over the expected peak demand of the optimal algorithm is no more than @xmath70}{e[a_{min}^n]}\\}$ ] , when the demand is homogeneous .    according to @xcite and @xcite ,    @xmath71 & = \\sum^\\infty_{x = 0}\\left[1-\\left(\\sum_{i=0}^x   e^{-\\alpha_{n}}\\frac{(\\alpha_{n})^{i}}{i!}\\right)^k\\right]\\\\ e[a_{min}^n ] & = \\sum_{x=1}^\\infty \\left(\\sum_{i = x}^\\infty e^{-\\alpha_{n}}\\frac{(\\alpha_{n})^i}{i!}\\right)^k\\end{aligned}\\ ] ]    next , we provide empirical analysis for the values of @xmath72 $ ] and @xmath73 $ ] , to show that in the typical configuration of the system , where @xmath22 is fixed , the ratio @xmath68 is constant . fig . [ amaxamin ] illustrates the values of @xmath72 $ ] and @xmath73 $ ] for various values of @xmath18 , and a fixed value of @xmath22 , where @xmath74 .",
    "[ r ] illustrates the value of the ratio ( @xmath72/e[a_{min}^n]$ ] ) for various values of @xmath18 , when @xmath74 .",
    "it can be observed in fig .",
    "[ r ] that the ratio is a constant less than 2 , and decreases with the increase of @xmath18 .",
    "further , we observe that the decrease in the ratio becomes slower with the increase of @xmath18 .",
    "therefore , we conclude that in the typical configuration of the system , the ratio @xmath68 is constant .",
    "finally , it is worth mentioning that the greedy heuristic described earlier is a special case of the uniform pricing approach , where @xmath75 , and hence would have the same theoretical guarantee as above",
    ".    0.25 $ ] and @xmath73 $ ] for various @xmath18 .",
    "( b ) @xmath72/e[a_{min}^n]$ ] for various@xmath18 .",
    "@xmath74.,title=\"fig:\",height=134 ]       0.25 $ ] and @xmath73 $ ] for various @xmath18 .",
    "( b ) @xmath72/e[a_{min}^n]$ ] for various@xmath18 .",
    "in this section , we propose an optimal algorithm that can be used when @xmath20 is relatively small , to solve the peak - demand minimization problem .",
    "prioir to describing the algorithm , we present a graph representation of the problem .",
    "then , the algorithm is described , which is a modification of dijkstra s shortest path ( sp ) algorithm .",
    "in addition , we provide a proof of correctness for the proposed algorithm , and analyze its runtime .",
    "further , we discuss the algorithm s drawbacks , compared to the heuristics presented earlier .",
    "we represent the problem as a directed graph @xmath76 : @xmath77 , where @xmath78 is the set of vertices , and @xmath79 is the set of edges with positive weights .",
    "the graph representation is depicted in fig .",
    "[ pdp_graph ] .",
    "the vertices are divided into layers , where each layer consists of vertices labeled with all the possible combinations of @xmath62 threshold policies .",
    "in addition , a source and destination vertices are added with empty labels .",
    "the edges connect every two consecutive layers as the following .",
    "the connection is between each two vertices , where the last @xmath80 prices in the label of the first vertex equals the first @xmath80 prices in the label of the second vertex .",
    "more formally , every vertex in layer @xmath81 , where @xmath82 , with the label @xmath83 is connected to every vertex in layer @xmath84 with the label @xmath85 , where @xmath86 and @xmath87 .",
    "the weight of the edge is the total consumption at time period @xmath88 , when the prices in the time interval @xmath89 $ ] is set to the threshold policy sequence @xmath90 .",
    "in addition , the source vertex is connected to all vertices in layer @xmath91 , with a weight equal to the maximum consumption in the time interval @xmath92 $ ] , when the prices in that time interval are set to the prices in the label of the adjacent vertex .",
    "finally , the vertices in the last layer are connected to the destination vertex , with a weight that equals 0 .      using the graph model ,",
    "the problem of peak - demand minimization is equivalent to the minimax path problem , which has been well studied in the literature @xcite,@xcite , and can be solved by modifying the relaxation condition of dijkstra s sp algorithm .",
    "the modification is as follows .",
    "let @xmath93 denote the cost of the vertex @xmath41 , and @xmath94 denote the weight of the edge connecting the vertices @xmath95 and @xmath41 .",
    "the relaxation condition in dijkstra s algorithm is ,    the modification for the relaxation condition is ,    after running dijkstra s algorithm with the above modification , the solution will be stored in the destination vertex , which is a path from the source vertex to the destination vertex .",
    "the vertices along this path contains the sequence of prices that minimizes the peak demand , while excluding the repeated prices .",
    "the repeated prices are the first @xmath80 prices in the label of the vertices that belong to a stage @xmath96 1 .",
    "the modified dijkstra s algorithm returns the correct and optimal solution of the peak - demand minimization problem , with an expected runtime of @xmath97    first , we prove the correctness and the optimality of the algorithm as follows .",
    "the consumption at any time period @xmath8 can be completely determined by the prices chosen in the time interval @xmath98 $ ] , since no consumer arriving at a time period @xmath99 can contribute any demand in period @xmath8 , as her deadline would expire earlier .",
    "this fact is the reason behind labeling the vertices with a sequence of @xmath62 prices .",
    "the combined prices of two adjacent vertices , defined as the prices in the label of the first vertex followed by the last price in the label of the second vertex , are in total @xmath20 prices that can determine the consumption of the time period that corresponds to the @xmath20-th price .",
    "this proves that any edge connecting stage @xmath81 to stage @xmath84 can be weighted with the correct consumption at time period @xmath88 , given only the prices of the two adjacent vertices .",
    "in addition , recall that the edges connecting the source node to stage @xmath91 are weighted with the maximum consumption in the time interval @xmath92 $ ] . this weighting is due to the fact that only the maximum consumption ( peak demand ) is what matters along the optimal path .",
    "additionally , this weighting can be obviously determined given the @xmath62 prices in stage @xmath91 . to show that a total of @xmath100 stages is needed in the graph , recall that the vertices in stage @xmath91 hold @xmath62 prices that correspond to the first @xmath62 time periods .",
    "the remaining @xmath101 time periods are represented by the remaining stages .",
    "since each of these stages adds one price that corresponds to one time period , the total number of the remaining stages is @xmath101 .",
    "adding the first stage to these stages , the total number of stages in the graph is indeed @xmath100 .",
    "this fact also justifies the 0 weighting of the edges between the last stage and the destination vertex , since no more consumption is to be determined .",
    "given the above proof , it is obvious that the paths in the graph between the source and destination vertices represent all the possible sequences of prices and their consequent consumption , in the time interval @xmath102 $ ] .",
    "we are interested in the sequence of prices that minimizes the peak demand . in other words ,",
    "the problem is to find a path from the source vertex to the destination vertex such that the maximum weight along the path is minimized . to show that the modified dijkstra s algorithm solves this problem optimally , we refer to the work presented by a. blum @xcite , who proved that our described algorithm is optimal .",
    "next , we prove that the algorithm has an expected runtime of @xmath97 as follows .",
    "the total number of combinations of @xmath62 threshold policies is @xmath103 , since there are @xmath20 threshold policies , and the size of each combination is @xmath62 .",
    "therefore , the algorithm creates @xmath103 vertices at each layer .",
    "the total number of layers is @xmath100 layers .",
    "in addition , the algorithm creates a source and destination vertices .",
    "therefore , the total number of vertices to be created is @xmath104 .",
    "in addition to the vertices , the algorithm connects the source vertex to every vertex in layer @xmath91 , which is a total of @xmath103 vertices .",
    "also , every vertex in layer @xmath81 , where @xmath82 , is connected to @xmath20 vertices in layer @xmath84 , resulting in a total of @xmath105 total of edges for each layer @xmath81 .",
    "moreover , every vertex in layer @xmath100 is connected to the distention vertex , resulting in @xmath103 additional edges .",
    "therefore , the total number of edges to be created is @xmath106 edges .",
    "furthermore , the weighting of each edge ( while ignoring the edges to the destination vertex ) requires the accumulation of demands in @xmath20 time periods that correspond to the prices in the adjacent vertices .",
    "we recall that the expected number of operations to accumulate the demands at each time period is no more than @xmath24 .",
    "therefore , the expected number of operations to weight each edge is no more than @xmath107 . based on the above analysis , and assuming that @xmath20 is constant , it follows that the expected number of operations required for constructing the graph is @xmath108 .",
    "so far , we calculated the expected runtime required for constructing the graph .",
    "once the graph is constructed , the modified dijkstra s algorithm is run on the graph .",
    "according to @xcite , the most efficient dijkstra s algorithm on a directed graph with positive weight edges , is the one where the priority queue is a fibonacci heap , and has a time complexity of @xmath109 . by substituting our early calculations , and assuming that @xmath20 is constant , the time complexity of the modified dijkstra s algorithm is @xmath110 .",
    "consequently , it follows that the overall expected runtime required for constructing the graph and running the modified dijkstra s algorithm is @xmath97 .",
    "one of the main drawbacks of the modified dijkstra s algorithm is the high memory requirement .",
    "it can bee seen that the total number of required vertices to be stored is @xmath104 .",
    "in addition , the total number of edges in the graph is @xmath106 .",
    "since both of these values are exponential in @xmath20 , we expect a fast growth in the memory requirement , when @xmath20 increases .",
    "sp_table ] illustrates the memory requirement for a fixed time horizon @xmath111 , and various values of @xmath20 .",
    "the memory requirement reaches @xmath112 total of vertices and edges , when @xmath113 .",
    "we note that no such memory requirement is needed in the heuristics and the uniform pricing approach described earlier , since they do not construct a graph to solve the problem .",
    "| c1 cm | c2 cm | c2 cm | c2 cm |    * n * & @xmath114 & @xmath115 & @xmath116 + * 3 * & 209 & 612 & 821 + * 6 * & 155522 & 902016 & 1057538 + * 9 * & 7.32@xmath117 & 6.28@xmath118 & 7.02@xmath118 +",
    "* 12 * & 1.04@xmath119 & 1.17@xmath120 & 1.28@xmath120 + * 15 * & 3.21@xmath121 & 4.44@xmath122 & 4.76@xmath122 +    another drawback of the modified dijkstra s algorithm is related to its runtime .",
    "although the expected runtime of the algorithm is @xmath97 ( assuming @xmath20 is constant ) , the total number of operations performed by the algorithm is exponential in @xmath20 .",
    "this causes the algorithm to become rapidly slow , with the increase of @xmath20 . unlike the modified dijkstra s algorithm , the exponential term @xmath25 in the runtime of the sliding - window heuristic",
    "can be toned to avoid slowing down the heuristic .",
    "in addition , the greedy heuristic and the uniform pricing approach do not perform exponential number of operations , based on our early analysis . therefore , the methods presented earlier are obviously faster than the modified dijkstra s algorithm .",
    "it follows from the drawbacks discussed in this section that the modified dijkstra s algorithm achieves the optimality on the expense of a high memory requirement and runtime . on the other hand",
    ", the heuristics presented earlier sacrifice optimality for the memory and speed .",
    "consequently , we conclude that the modified dijkstra s algorithm is suitable in practice , when the parameter @xmath20 is relatively small .",
    "in this section , we propose an optimal algorithm , which is similar to the modified dijkstra s algorithm presented in the previous section , and can be used when @xmath20 is relatively small , to solve the problem of matching demand to supply .",
    "we initially present a modification for the graph representation presented in the previous section .",
    "then , the algorithm is described , which is the standard dijkstra s sp algorithm .",
    "in addition , we provide a proof of correctness for the proposed algorithm , and analyze its runtime and drawbacks .",
    "in this section , we present a modification for the directed graph presented in the previous section , fig .",
    "[ pdp_graph ] , to represent the problem of matching demand to supply .",
    "the modification is in the weighting of the edges as follows .",
    "let @xmath123}$ ] denotes the mse in the time interval @xmath124 $ ] .",
    "an edge connecting a vertex in stage @xmath81 to a vertex in stage @xmath84 is weighted with @xmath125}$ ] , when the prices in the time interval @xmath89 $ ] is set to the combined prices of the adjacent vertices .",
    "in addition , the source vertex is connected to all vertices in stage @xmath91 , with a weight equals @xmath126}$ ] , when the prices in the time interval @xmath92 $ ] is set to the prices in the label of the adjacent vertex .",
    "the rest of the graph representation remains unchanged .",
    "using the graph model , the problem of matching demand to supply can be solved using the standard dijkstra s sp algorithm . after running dijkstra s algorithm ,",
    "the solution will be stored in the destination vertex , which is a path from the source vertex to the destination vertex .",
    "the vertices along this path contains the sequence of prices that matches demand to supply , while excluding the repeated prices .",
    "we recall that the repeated prices are the first @xmath80 prices in the label of the vertices that belong to a stage @xmath96 1 .",
    "dijkstra s shortest path algorithm returns the correct and optimal solution of the problem of matching demand to supply .",
    "recall that the consumption at any time period @xmath8 can be completely determined by the prices chosen in the time interval @xmath98 $ ] .",
    "therefore , the combined prices of two adjacent vertices , are in total @xmath20 prices that can determine the consumption of the time period that corresponds to the @xmath20-th price .",
    "this proves that any edge connecting stage @xmath81 to stage @xmath84 can be weighted with the correct value of @xmath125}$ ] , given only the prices of the two adjacent vertices .",
    "in addition , recall that the edges connecting the source vertex to stage @xmath91 are weighted with @xmath126}$ ] .",
    "this weighting can be obviously determined given the @xmath62 prices in stage @xmath91 . to show that a total of @xmath100 stages is needed , and justify the 0 weighting of the edges connected to the destination vertex",
    ", we refer to the proof of correctness provided in the previous section .    given the above proof",
    ", it is obvious that the paths in the graph between the source and destination vertices represent all the possible sequences of prices and their consequent mse , in the time interval @xmath102 $ ] .",
    "we are interested in the sequence of prices that minimizes mse . in other words ,",
    "the problem is to find the shortest path from the source vertex to the destination vertex . to show that dijkstra s sp algorithm solves this problem optimally",
    ", we refer to the work presented by a. blum @xcite , who proved that dijkstra s algorithm is optimal .",
    "the only differences between the modified dijkstra s algorithm ( previous section ) and the dijkstra s sp algorithm presented in this section are in the weighting of the edges and in the relaxation condition . for both algorithms",
    ", the weighting of the edges requires the same number of operations to accumulate the consumers demand . also , the number of operations required in the relaxation condition of the edges is constant for both algorithms .",
    "therefore , the sp algorithm has the same expected runtime as the modified dijkstra s algorithm . also , it is obvious that both algorithms have the same memory requirements .",
    "recall that the drawbacks of the modified dijkstra s algorithm are the high memory requirement and its runtime .",
    "since the sp algorithm has the same expected runtime and memory requirements as the modified dijkstra s algorithm , we conclude the same drawbacks for the sp algorithm .",
    "consequently , the sp algorithm is only suitable when the parameter @xmath20 is relatively small .",
    "this claim is supported by the experimental results present in the next section .",
    "in this section , we present our experimental work for the proposed algorithms .",
    "we compare the approximation ratio of the proposed heuristics for the problems of peak - demand minimization and matching demand to supply .",
    "in addition , we compare the runtime of dijkstra s algorithm with that of the proposed heuristics . throughout the experiments , we vary the parameters @xmath22 and @xmath20 while recording the average of 30 experiments for each parameter value .",
    "we implemented our heuristics using java along with the cplex api to compute the heuristics approximation ratio .",
    "we also implemented dijkstra s algorithm in java , with a fibonacci heap data structure as the priority queue .",
    "for some of the experiments ( when @xmath20 is small ) , we used our implementation for dijkstra s algorithm to verify the heuristics approximation ratio computed by cplex .",
    "we used real appliances data available on pecan street s dataport website @xcite .",
    "the used data consists of the power demand of 64 appliances jobs during 100 time periods . using this data",
    "while randomly generating the deadline of the jobs , we evaluated the performance of the proposed algorithms in terms of approximation ratio and runtime .",
    "we now describe the experiments and results in detail .",
    "we conducted separate experiments for when the consumers composition was both known and unknown a priori .",
    "we used a constant value of @xmath127 . in each experiment , we considered three versions of the sliding - window heuristic .",
    "these versions use window sizes of @xmath20 , @xmath128 , and @xmath129 , respectively .",
    "we ran our simulations for time horizons in the range @xmath130 $ ] . for each time horizon , we recorded the average approximation ratio of each heuristic .",
    "we examined the heuristics performances when the number of arrivals and their demands are known at all times .",
    "as mentioned earlier , we ran the experiment for various time horizons , and recorded the average approximation ratio of the heuristics .      in this condition , we examined the performance of the heuristics when the number of future arrivals and their demands were unknown , meaning the number of arrivals and their demands were known only when the consumers arrive .",
    "we ran the greedy heuristic and the uniform - pricing approach for the case when no estimation for the future arrivals and demands was made , as they optimize each time period without considering the future demands .",
    "then , we used the estimator proposed by m. ohannessian et al .",
    "@xcite to estimate the future arrival and demand rates .",
    "these rates were then used by the sliding - window heuristic for future time periods .",
    "the results of experiment 1 and 2 are illustrated in fig .",
    "[ pdp_homo_offline ] and [ pdp_homo_online ] , correspondingly . for both experiments ,",
    "the sliding - window heuristic outperformed the greedy heuristic and the uniform pricing approach .",
    "in the first experiment , the sliding - window heuristic recorded an overall average approximation ratio of 1.13 when using a window size of @xmath20 , 1.04 when using a window size of @xmath128 , and 1.01 when using a window size of @xmath129 . in the second experiment , the sliding - window heuristic recorded an overall average approximation ratio of 1.14 when using a window size of @xmath20 , 1.06 when using a window size of @xmath128 , and 1.02 when using a window size of @xmath129 . on the other hand , the greedy heuristic had an overall average approximation ratio of 1.2 , and the uniform pricing approach had an overall average approximation ratio of 1.15 , in both experiments .",
    "it follows that with the increase of the window size , the approximation ratio of the sliding - window heuristic is approaching 1.0 .",
    "this is consistent with our early predictions that a larger window size means larger optimization coverage , which consequently leads to a lower approximation ratio",
    ". nevertheless , with the heterogeneity of demands , the estimator performance drops as highlighted by m. ohannessian et al .",
    "@xcite , which explains the slight increase in the approximation ratio of the sliding - window heuristic in the second experiment .    0.25        0.25        0.25        0.25       in this section , we examine the performance of the the two generic heuristics proposed earlier , for solving the problem of matching demand to supply . as in the previous section , we conducted two different experiments based on whether the consumers composition is known beforehand",
    ". also , we used the same values for the parameters @xmath22,@xmath20 , and @xmath25 , and recorded the average approximation ratio of each heuristic .",
    "the results of the two experiments are illustrated in fig .",
    "[ dsm_homo_offline ] and [ dsm_homo_online ] . for both experiments ,",
    "the sliding - window heuristic outperformed the greedy heuristic .",
    "in the first experiment , the sliding - window heuristic recorded an overall average approximation ratio of 1.08 when using a window size of @xmath20 , 1.01 when using a window size of @xmath128 , and 1.001 when using a window size of @xmath129 . in the second experiment , the sliding - window heuristic recorded an overall average approximation ratio of 1.17 when using a window size of @xmath20 , 1.19 when using a window size of @xmath128 , and 1.21 when using a window size of @xmath129 . on the other hand ,",
    "the greedy heuristic had an overall average approximation ratio of 1.42 in both experiments .",
    "these results are consistent with the results of the previous section , as they show that with the increase of the window size , the approximation ratio of the sliding - window heuristic approaches 1.0 . yet",
    ", when the consumers composition includes heterogeneous demands and is estimated , the estimator s performance drops .",
    "this leads to an increase in the approximation ratio of the sliding - window heuristic .    0.25        0.25        0.25        0.25",
    "in this section , we examine the runtime of the modified dijkstra s algorithm compared to the heuristics proposed earlier , for solving the problem of peak - demand minimization .",
    "in addition to the runtime of the heuristics , we keep track of the heuristics approximation ratio , to show the heuristics gaining of the speed on the expense of losing optimality .",
    "we conducted an experiment , where we recorded the average runtime of the algorithms and the average approximation ratio of the heuristics for various values of @xmath20 in the range @xmath131 $ ] . throughout the experiment , we fixed the value of @xmath22 to 24 time periods .",
    "in addition , we used the sliding - window heuristic with a window size @xmath132 .",
    "the experimental results are illustrated in fig .",
    "[ pdp_homo_time ] and [ pdp_homo_ratio ] .",
    "[ pdp_homo_time ] shows the fast growth in the runtime of the modified dijkstra s algorithm , reaching an average of 7.9 seconds when @xmath133 .",
    "this is caused by the exponential term @xmath20 in the number of operations performed by the algorithm .",
    "the greedy and sliding - window heuristics had significantly lower runtimes than the modified dijkstra s algorithm .",
    "the sliding - window heuristic had a higher overall average runtime than the greedy heuristic , which was 109 milliseconds .",
    "at the same time , the sliding - window heuristic had a lower overall average approximation ratio than the greedy heuristic , which was 1.2 .",
    "the greedy heuristic had an overall average runtime of 0.5 milliseconds , and an overall average approximation ratio of 1.28 .",
    "these results are consistent with our early analysis that the heuristics sacrifice optimality for the speed . additionally , based on the above results ,",
    "the modified dijkstra s algorithm is only suitable , when @xmath20 is relatively small .      in this section ,",
    "we examine the runtime of the dijkstra s sp algorithm compared to the heuristics proposed earlier for matching demand to supply . as in the previous section",
    ", we measure the heuristics approximation ratios , and use the same values of @xmath22 , @xmath20 , and @xmath25 .",
    "the experimental results are illustrated in fig .",
    "[ dsm_homo_time ] and [ dsm_homo_ratio ] . fig .",
    "[ dsm_homo_time ] illustrates the fast growth in the runtime of the dijkstra s sp algorithm , reaching an average of 6.8 seconds when @xmath133 . as in the previous section , this result can be justified by the exponential term @xmath20 in the number of operations performed by the algorithm . on the other hand",
    ", the greedy and sliding - window heuristics had a significantly lower runtime than the dijkstra s sp algorithm .",
    "the sliding - window heuristic had an overall average runtime of 117 milliseconds , while the greedy heuristic had an overall average runtime of 2 milliseconds .",
    "at the same time , the sliding - window heuristic had an overall average approximation ratio of 1.18 , while the greedy heuristic had an overall average approximation ratio of 1.75 .",
    "these results show that the heuristics obviously sacrifice optimality for the speed , and the dijkstra s sp algorithm is only suitable when @xmath20 is relatively small .",
    "in this paper , we studied the problems of peak - demand minimization , and matching demand to supply in the smart grid , using dynamic pricing .",
    "first , we proposed generic heuristics to minimize the peak load , and match demand to supply .",
    "in addition , we provided theoretical analysis for the uniform pricing approach in the context of peak - demand minimization .",
    "our theoretical analysis provide a guarantee that in the typical configuration of the system , the approximation ratio of the uniform pricing approach on the average case is constant .",
    "furthermore , we proposed an optimal algorithm for each of the dynamic pricing problems , which can be used when the maximum deadline period of the power jobs is relatively small .",
    "our experimental results showed that the heuristics and the uniform pricing approach perform generally well , with an approximation ratio below 2 for all the experiments .",
    "also , the experiments demonstrated an obvious trade - off between optimality and speed .",
    "consequently , we conclude that the optimal algorithms are only suitable when the maximum deadline period of the power jobs is relatively small .    10    w.  y.  al awadi .",
    "reducing of the energy consumption in the federal buildings in uae using lighting and control technologies .",
    "f.  hammad and b.  abu - hijleh .",
    "the energy savings potential of using dynamic external louvers in an office building .",
    ", 42(10):18881895 , 2010 .",
    "t.  logenthiran , d.  srinivasan , and t.  z. shun .",
    "demand side management in smart grid using heuristic optimization .",
    ", 3(3):12441252 , 2012 .    c.  borgs , o.  candogan , j.  chayes , i.  lobel , and h.  nazerzadeh",
    ". optimal multiperiod pricing with service guarantees .",
    ", 60(7):17921811 , 2014 .",
    "m.  roozbehani , m.  a. dahleh , and s.  k. mitter .",
    "volatility of power grids under real - time pricing .",
    ", 27(4):19261940 , 2012 .",
    "m.  ohannessian , m.  roozbehani , d.  materassi , m.  dahleh , et  al .",
    "dynamic estimation of the price - response of deadline - constrained electric loads under threshold policies . in _ american control conference ( acc ) , 2014 _ , pages 27982803 , 2014 .",
    "https://dataport.pecanstreet.org/.    a.  j. conejo , j.  m. morales , and l.  baringo . real - time demand response model .",
    ", 1(3):236242 , 2010 .",
    "h.  ahn , m.  gms , and p.  kaminsky .",
    "pricing and manufacturing decisions when demand is a function of prices in multiple periods .",
    ", 55(6):10391057 , 2007 .    c.  ibars , m.  navarro , and l.  giupponi . distributed demand management in smart grid with a congestion game . in",
    "smart grid communications , ieee international conference on _ , pages 495500 , 2010 .",
    "n.  li , l.  chen , and s.  h. low .",
    "optimal demand response based on utility maximization in power networks . in _ ieee power and energy society general meeting _ , pages 18 , 2011 .",
    "s.  d. ramchurn , p.  vytelingum , a.  rogers , and n.  r. jennings .",
    "putting thesmarts into the smart grid : a grand challenge for artificial intelligence .",
    ", 55(4):8697 , 2012 .",
    "g.  strbac .",
    "demand side management : benefits and challenges .",
    ", 36(12):44194426 , 2008 .",
    "t.  k. wijaya , k.  m. larson , and k.  aberer . matching demand with supply in the smart grid using agent - based multiunit auction . in _",
    "communication systems and networks , ieee international conference on _ , pages 16 , 2013 .",
    "j.  a. taylor , a.  nayyar , d.  s. callaway , and k.  poolla .",
    "consolidated dynamic pricing of power system regulation .",
    ", 28(4):46924700 , 2013 .",
    "a.  w. berger and f.  c. schweppe .",
    "real time pricing to assist in load frequency control .",
    ", 4(3):920926 , 1989 .",
    ". http://math.stackexchange.com/questions/868299/expected-maximum-of-a-sequence-of-i-i-d-poissons .    .",
    "http://math.stackexchange.com/questions/713414/minimum-of-identical-independent-poisson-random-variables .",
    "a.  blum . .",
    "carnegie mellon university , 2011 .",
    ". the minimax path in a search for a circle in a plane . , 8(4):357360 , 1961 .",
    "michael  l fredman and robert  endre tarjan .",
    "fibonacci heaps and their uses in improved network optimization algorithms . , 34(3):596615 , 1987 .",
    "mse minimization : : given : : :    the number of periods @xmath134 , @xmath135    consumers with demand @xmath136 for    @xmath137,k\\in[m[$ ] ; threshold policies    @xmath138 ; supplies    @xmath139 $ ] ; and a number    @xmath140 .",
    "question : : :    is there a price vector    @xmath141 such that    @xmath142}(u(k,\\lambda_k)-s_k)^2 $ ]    greater than or equal to @xmath8 ?",
    "the problem mse minimization is in np since given a price vector @xmath143 , one can check in polynomial time if @xmath144 .",
    "to prove the hardness part , we use a reduction from subset - sum problem : given a set of positive integer numbers @xmath145 , and a positive integer @xmath146 , the question is of whether or not there is a subset @xmath78 of @xmath147 such that @xmath148 ?",
    "let @xmath149 be an instance of subset - sum .",
    "we assume without loss of generality that @xmath150 .",
    "we construct a corresponding instance @xmath151 of the mse minimization problem with @xmath22 consumers @xmath152 and @xmath153 periods .",
    "consumer @xmath154 arrives at period @xmath81 and departures at period @xmath153 , for all @xmath155 $ ] .",
    "the demand of the consumer @xmath154 at the period @xmath2 is @xmath156 iff @xmath157 , and @xmath158 if @xmath159 , for all @xmath155 $ ] and @xmath160 $ ] .",
    "since the consumers time - to - go are different from each other , their threshold policies are different as well .",
    "define the threshold policy of the consumer @xmath154 as @xmath161 for all @xmath155 $ ] in an arbitrarily way as long as @xmath162 . ] .",
    "note that @xmath163 .",
    "the targeted power supply of the period @xmath2 , denoted by @xmath16 , is @xmath164 for @xmath165 $ ] , and the supply of the last period is @xmath166 . let @xmath167 be the optimal price vector that minimizes @xmath168}(u(k,\\lambda_k)-s(k))^2 $ ] , where @xmath169 denotes the total power consumption at the period @xmath2 , given the price @xmath170 .",
    "let @xmath171 .",
    "we call @xmath151 a yes - instance of consumption minimization if and only if there is a price vector @xmath172 such that the value of @xmath173 is at most @xmath174 .",
    "it is not hard to see that it does not matter how the price at the period @xmath175 $ ] , is placed , the squared difference between the power consumed @xmath169 and the supply @xmath16 at this period is at least @xmath176 .",
    "indeed , let s consider an arbitrary period @xmath165 $ ] .",
    "the claim is obviously clear if @xmath177 does consume her power at this period .",
    "now assume that @xmath177 shifts the demand @xmath178 to the next periods .",
    "the first case when no one consumes power at this period , the different between the supply and demand is still @xmath164 . in the second case",
    ", there is some consumer , say @xmath179 , @xmath180 , moves her demand @xmath181 to the period @xmath2 , it follows that @xmath182 as @xmath183 for any @xmath184 .",
    "now , suppose that @xmath149 be a yes - instance of subset - sum .",
    "we can place a price vector @xmath143 , that matches the demand and supply at the last period , i.e. , @xmath185 , while ensures that all the consumers will either consume their power right at the first period they arrive , or shift their demand to the last period . in fact , the square error @xmath173 will be shown to be equals to @xmath186 .",
    "indeed , let @xmath78 be a subset of @xmath147 such that @xmath148 .",
    "we place a price for each of periods ( from the first to the last one ) using the following rule : for @xmath165 $ ] , we set @xmath187 if @xmath188 , and set @xmath189 ( here we define @xmath190 ) , otherwise ; and for the last period @xmath153 , we set @xmath191 .",
    "this price setting guarantees that every consumer @xmath154 will consume the power @xmath192 right at the period @xmath81 if @xmath193 , and shift the demand to the last period , otherwise , for all @xmath194 $ ] .",
    "furthermore , those consumers , who did not consume the power at their first period , will do it only at the last period , where the price provided is lower than their threshold policies .",
    "it follows that @xmath185 .",
    "hence , we have @xmath195 .",
    "conversely , if @xmath149 be a no - instance of subset - sum , there is no subset of @xmath196 for which the sum of its elements is exactly @xmath146 .",
    "hence , for any price vector @xmath143 , any shifting of the consumers demands from the first @xmath22 periods to the last period @xmath153 will not get rid of the different between the total power consumption and the targeted power supply at the last period . moreover , as we argued earlier , @xmath197 is at least @xmath198 , for every period @xmath199 $ ] .",
    "therefore , it must hold that @xmath200 ."
  ],
  "abstract_text": [
    "<S> minimizing the peak power consumption and matching demand to supply , under fixed threshold polices , are two key requirements for the success of the future electricity market . in this work , we consider dynamic pricing methods to minimize the peak load and match demand to supply in the smart grid . as these optimization problems are computationally hard to solve in general , we propose generic heuristics for approximating their solutions . </S>",
    "<S> further , we provide theoretical analysis of uniform pricing in peak - demand minimization . </S>",
    "<S> moreover , we propose optimal - pricing algorithms for scenarios in which the time - period in which tasks must be executed is relatively small . </S>",
    "<S> finally , we conduct several experiments to evaluate the various algorithms on real data . </S>"
  ]
}
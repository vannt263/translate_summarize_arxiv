{
  "article_text": [
    "let @xmath0 be an nxn symmetric invertible matrix , spectral theorem states that the matrix can be diagonalised as follows : @xmath1 where @xmath2 is a matrix with eigenvalues along the diagonals and @xmath3 $ ] is a matrix with corresponding eigenvectors @xmath4 .",
    "qr algorithm is an iterative algorithm based on qr decomposition to find the eigenvalues and eigenvectors simultaneously and is as follows : @xmath5 further , @xmath6 , @xmath7 , and @xmath8 .    for ease of analysis , we require in equation ( [ eqn : qr2 ] ) that upper - triangular matrix @xmath9 of qr factorization to contain positive values along the diagonal",
    "this can be easily arranged by multiplying the row containing the negative value by ` -1 ' and compensating the matrix @xmath10 .",
    "such upper - triangular matrix @xmath9 can be shown to be the upper - triangular cholesky factor of the matrix @xmath11 .",
    "for an introduction to the qr algorithm and a proof for convergence , and for modified algorithms : qr algorithm based on hessenberg form and qr algorithm with shifts , refer @xcite or @xcite .      a closely related algorithm to qr algorithm is cholesky iterations based on cholesky decomposition , given as follows :    @xmath12    the sets @xmath13 and @xmath14 are equivalent sets , and @xmath15 is the principal square root of the matrix @xmath16 .",
    "this relation can be used to study the convergence properties of qr algorithm through cholesky iteration which is more tractable for analysis ; for e.g. see @xcite .",
    "a permutation matrix @xmath17 is a matrix containing a single ` 1 ' in every row and column , and zeroes elsewhere .",
    "let @xmath18 be the set of such matrices of order n , then the cardinality of set @xmath18 is @xmath19    a symmetric permutation @xmath20 on matrix @xmath0 defined above , maintains the symmetry of the matrix .",
    "it can be easily verified that the permuted matrix has the same eigenvalues as the original matrix , and the eigenvectors are @xmath21 .",
    "the following special functions are used in this paper :    * @xmath22 takes a real vector of order n as input , and returns a vector with the elements of input sorted in descending order . *",
    "@xmath23 takes a symmetric matrix of order n as input , and returns a vector containing the diagonal elements of the matrix in the order along the main diagonal .",
    "* @xmath24 takes a real vector of order n as input , and returns a real matrix containing the elements of the input vector along the main diagonal , and zeroes elsewhere .    in the following section",
    ", we present the qr algorithm with permutations along with a theoretical bound on performance . in section [ sec : pm ] we discuss computation of the permutation matrices , in section [ sec : ssetup ] we describe the simulation setup used to verify the performance of the algorithms . in section [ sec : results ] we discuss the performance results for simulation runs involving positive - definite and symmetric matrices , followed by concluding remarks in section [ sec : con ] .",
    "applying a permutation @xmath17 on equations ( [ eqn : qr1 ] , [ eqn : qr2 ] , [ eqn : qr3 ] ) yields an iteration of qr algorithm as follows : @xmath25 showing that a permutation on the matrix @xmath0 has an additional factor @xmath26 in the applied orthonormal matrix .",
    "the effect of applying a permutation matrix on convergence can be intuitively understood when the qr algorithm is viewed as power iteration algorithm with a complete set of orthonormal basis - vectors instead of a single vector .",
    "let n - th column of the matrix @xmath27 be @xmath28 , the convergence rate of the n - th eigenvalue @xmath29 depends upon @xmath30 . with some luck",
    ", permutation changes the values @xmath31 , such that it offers a better convergence compared to the original matrix .",
    "assume that @xmath17 is a permutation matrix that can ensure an optimum arrangement of the basis - vectors of @xmath10 , then the permutation causes the maximum convergence in that qr algorithm s iteration .",
    "this optimal arrangement can also aid the convergence of repeated eigenvalues or eigenvalues close to each other .",
    "however , this convergence is only speeded up by a linear factor !",
    "let @xmath0 be an nxn symmetric invertible matrix as defined above , the qr algorithm with permutations with a permutation matrix @xmath32 at each iteration is given as follows : @xmath33 further , @xmath6 , @xmath7 , and @xmath34    in general , in the k - th iteration , the estimates of eigenvalue matrix @xmath35 , eigenvector matrix @xmath36 can be given as follows : @xmath37    the error in eigenvalue estimation @xmath38 for any algorithm can be given as follows : @xmath39    qr algorithm with permutations requires the following additional computation compared to the classical qr algorithm : 1 ) computation of the permutation matrix , 2 ) symmetric permutation of matrix @xmath15 before qr decomposition , 3 ) permutation of the matrix @xmath27 before multiplication , if eigenvectors are desired .",
    "the performance of the algorithm depends on the selection of the permutation matrices , i.e. @xmath40 .    a simple bound for @xmath38 can be given by requiring the best instantaneous convergence at every iteration .",
    "therefore , the selection criterion for selecting the permutation matrix in the k - th iteration becomes : @xmath41 that is , the permutation matrix @xmath32 of the available permutation matrices of order n , which when used in the k - th iteration , causes the least error in eigenvalue estimation @xmath38 .",
    "computing the permutation matrix @xmath32 is non - trivial . in this section we present two simple methods for computing the permutation matrices which compute them without iterating through the set @xmath18 .",
    "other methods for computing @xmath32 may be established easily , and their choice is a trade - off between convergence rate and computational complexity .      in this method , we choose the permutation matrix @xmath32 which orders the diagonal elements matrix @xmath15 in descending order of magnitude ( absolute value ) .",
    "the matlab compatible pseudo - code to determine this permutation matrix is as follows :    .... function p = diord(a )   n = size(a,1 ) ; d = abs(real(diag(a ) ) ) ; [ s , i ] = sort(d , ' descend ' ) ; p = zeros(n , n ) ; p((0:n-1)'*n+i ) = 1 ; p = p ' ; ....      in this method , we choose the permutation matrix @xmath32 which orders the diagonal elements matrix @xmath42 in descending order .",
    "such ordering also orders the columns of the matrix @xmath15 in descending order of their norm value .",
    "this permutation matrix can be computed with a computational cost of @xmath43 for computing the n norm values of the columns of @xmath15 .",
    "the matlab compatible pseudo - code to determine this permutation matrix is .    both diagonal ordering and column ordering methods",
    "do not preserve the shape of the matrix in subsequent qr iterations .",
    "therefore , computational complexity reduction due to conversion to hessenberg form can not be applied with these two methods .",
    "in order to compare the performance of various algorithms , we use matlab based simulations .",
    "matlab compatible source code of the simulation is available from @xcite .",
    "the average eigenvalue estimation error @xmath44 equation ( [ eqn : ek ] ) for 4x4 symmetric invertible matrices , each with 50 iterations are plotted . the first figure ( [ fig : result]a ) uses a random subset of size 10,000 of the set of symmetric matrices which includes positive - definite , negative - definite , and indefinite matrices . the second figure ( [ fig : result]b ) uses a random subset of size 25,000 of the set of positive - definite symmetric matrices .",
    "label ` qr ' is the error plot for the classical qr algorithm , ` qrh ' first converts the given matrix into hessenberg ( tri - diagonal ) form and then performs the classical qr algorithm , ` qrs ' uses the qrh algorithm ( @xmath0 is in hessenberg form ) with shifts as given below ( @xmath45 ) : @xmath46 here the notation @xmath47 refers to the ( n , n)-th element of the matrix @xmath48 .",
    "label ` do ' refers to the qr algorithm with permutations which uses diagonal ordering method for computing the permutation matrix at each iteration . `",
    "co ' uses the column ordering method .",
    "label ` bic ' refers to the best instantaneous convergence bound as described in equation ( [ eqn : bic ] ) .",
    "from figure ( [ fig : result]a ) , we observe that permutations increase the convergence rate on an average for symmetric and positive definite matrices .",
    "the best instantaneous convergence ( bic ) bound shows the highest rate of convergence , showing that permutation has an effect of speeding up the convergence of qr algorithm .",
    "however , meeting this bound using the definition is not feasible as it requires prior knowledge of eigenvalues .",
    "qr algorithm with permutations with diagonal ordering ( do ) shows good convergence rate for positive - definite matrices , but saturates after the first few iterations on an average , for symmetric matrices in general . do performs better than classical qr algorithm and variations for positive - definite matrices",
    ".    qr algorithm with permutations with column ordering ( co ) shows good convergence rate for positive - definite matrices and in general for symmetric matrices .",
    "co performs better than classical qr algorithm and variations for positive - definite matrices and in general for symmetric matrices .    therefore , for positive - definite matrices , do provides the best convergence rate , and for symmetric matrices in general",
    ", co provides the best convergence at low complexity for calculation of permutation matrices , both providing a 2x convergence speedup .",
    "in this paper , we presented the qr algorithm with permutations that shows a significantly improved convergence rate compared to classical qr algorithm and variations .",
    "we determined a bound for performance based on best instantaneous convergence , and developed two low complexity methods for computing the permutation matrices at every iteration .",
    "we used simulations to verify that the performance bound is significantly improved upon using permutations , and compared the performance of qr algorithm with permutations using the two methods for computing permutation matrices .",
    "we find that a 2x convergence speedup is obtained by using qr algorithm with permutations .",
    "further , we find that the diagonal ordering provides the best trade - off for positive - definite matrices , and column ordering provides best trade - off for symmetric matrices in general .",
    "9 golub , g. h. ; loan , c. f. v , matrix computations , third edition , the johns hopkins university press , 1996 .",
    "horn , r. a. ; johnson , c. r. , matrix analysis , cambridge univ . press , 1985 .",
    "olver , p. j. , orthogonal bases and the qr algorithm , university of minnesota , 2008 .",
    "schatzman , m. , a simple proof of convergence of the qr algorithm for normal matrices without shifts , i m a preprint series # 720 , university of minnesota , 1990 .",
    "arbenz , p. ; golub , g.h .",
    ", matrix shapes invariant under the symmetric qr algorithm , numerical analysis project , sep 1992 .",
    "watkins , d. s. ; elsner l. , convergence of algorithms of decomposition type for the eigenvalue problem , nov 1995 .",
    "krishnamoorthy a. , symmetric qr algorithm with permutations , matlab central file exchange , http://www.mathworks.de/matlabcentral/fileexchange ."
  ],
  "abstract_text": [
    "<S> in this paper , we present the qr algorithm with permutations that shows an improved convergence rate compared to the classical qr algorithm . </S>",
    "<S> we determine a bound for performance based on best instantaneous convergence , and develop low complexity methods for computing the permutation matrices at every iteration . </S>",
    "<S> we use simulations to verify the improvement , and to compare the performance of proposed algorithms to the classical qr algorithm . </S>"
  ]
}
{
  "article_text": [
    "data stream mining has been the subject of extensive research over the last decade or so",
    ". one of the major issues with data stream mining is dealing with concept drift that causes models built by classifiers to degrade in accuracy over a period of time .    while data steam environments require that models are updated to reflect current concepts , the capture and storage of recurrent concepts allows a classifier to use an older version of the model that provides a better fit with newly arriving data in place of the current model .",
    "this approach removes the need to explicitly re - learn the model , thus improving both accuracy and computational cost .",
    "a number of methods have been proposed that deal with the capture and exploitation of recurring concepts @xcite , @xcite , @xcite , @xcite and @xcite .",
    "although achieving higher accuracy as expected during phases of concept recurrence in the stream , a major issue with existing approaches is the setting of user defined parameters to determine whether a current concept matches with one from the past .",
    "such parameters are difficult to set , particularly due to the drifting nature of real world data streams .",
    "our approach avoids this problem by applying the discrete fourier transform ( dft ) as a meta learner .",
    "the dft , when applied on a concept ( decision tree model ) results in a spectral representation that captures the classification power of the original models .",
    "one very attractive property of the fourier representation of decision tree is that most of the energy and classification power is contained within the low order coefficients @xcite .",
    "the implication of this is that that when a concept c recurs as concept c * with relatively small differences caused by noise or concept drift , then such differences are likely to manifest in the high order coefficients of spectra s and s * ( derived from c and c * respectively ) , thus increasing the likelihood of c * being recognized as a recurrence of c. the dft , apart from its use in meta learning , has a number of other desirable properties that make it attractive for mining high speed data streams .",
    "this includes the ability to classify directly from the spectra generated , thus eliminating the need for expensive traversal of a tree structure .",
    "our experimental results in section 5 clearly show the accuracy , processing speed and memory advantages of applying the dft as opposed to the meta learning approach proposed by gama and kosina in @xcite .",
    "the rest of the paper is as follows . in section 2",
    "we review work done in the area of capturing recurrences .",
    "we describe the basics of applying the dft to decision trees in section 3 . in section 4",
    "we discuss a novel approach to optimizing the computation of the fourier spectrum from a decision tree .",
    "our experimental results are presented in section 5 and we conclude the paper in section 6 where we draw conclusions on the research and discuss some directions for future research .",
    "while a vast literature on concept drift detection exists @xcite only a small body of work exists so far on exploitation of recurrent concepts .",
    "the methods that exist fall into two broad categories .",
    "firstly , methods that store past concepts as models and then use a meta learning mechanism to find the best match when a concept drift is triggered @xcite , @xcite . secondly , methods that store past concepts as an ensemble of classifiers .",
    "lazarescu in @xcite proposes an evidence forgetting mechanism for data instances based on a multiple window approach and a prediction module to adapt classifiers based on an estimation of the future rate of change .",
    "whenever the difference between the observed and estimated rates of change are above a user defined threshold a classifier that best represents the current concept is stored in a repository .",
    "experimentation on the stagger dataset showed that the proposed approach outperformed the flora method on classification accuracy with re - emergence of previous concepts in the stream .",
    "ramamurthy and bhatnagar @xcite use an ensemble approach based on a set of classifiers in a global set g. an ensemble of classifiers is built dynamically from a collection of classifiers in g if none of the existing individual classifiers are able to meet a minimum accuracy threshold based on a user defined acceptance factor .",
    "whenever the ensemble accuracy falls below the accuracy threshold , then the global set g is updated with a new classifier trained on the current chunk of data .",
    "another ensemble based approach by katakis et al .",
    "is proposed in @xcite .",
    "a mapping function is applied on data stream instances to form conceptual vectors which are then grouped together into a set of clusters .",
    "a classifier is incrementally built on each cluster and an ensemble is formed based on the set of classifiers .",
    "experimentation on the usenet dataset showed that the ensemble approach produced better accuracy than a simple incremental version of the naive bayes classifier .",
    "gomes et al @xcite used a two layer approach with the first layer consisting of a set of classifiers trained on the current concept while the second contains classifiers created from past concepts .",
    "a concept drift detector is used to flag changes in concept and when a warning state is triggered incoming data instances are buffered in a window to prepare a new classifier .",
    "if the number of instances in the warning window is below a user defined threshold then the classifier in layer 1 is used instead of re - using classifiers in layer 2 .",
    "one major issue with this method is validity of the assumption that explicit contextual information is available in the data stream .",
    "gama and kosina also proposed a two layered system in @xcite designed for delayed labeling , similar in some respects to the gomes et al .",
    "@xcite approach . in their approach",
    "gama and kosina pair a base classifier in the first layer with a referee in second layer .",
    "referees learn regions of feature space which its corresponding base classifier predicts accurately and is thus able to express a level of confidence on its base classifier with respect to a newly generated concept .",
    "the base classifier which receives the highest confidence score is selected , provided that it is above a user defined hit ratio parameter ; if not , a new classifier is learned .",
    "the discrete fourier transform ( dft ) has a vast area of application in very diverse domains such as time series analysis , signal processing , image processing and so on .",
    "it turns out as park @xcite and kargupta @xcite show that the dft is very effective in terms of classification when applied on a decision tree model .",
    "kargupta and park in @xcite explored the use of the dft in a distributed environment but did not explore its usage in a data stream environment as this research sets out to do .",
    "r0.2     kargupta and park in @xcite showed that the fourier spectrum consisting of a set of fourier coefficients fully captures a decision tree in algebraic form , meaning that the fourier representation preserves the same classification power as the original decision tree .",
    "a decision tree can be represented in compact algebraic form by applying the dft to the paths of the tree .",
    "we illustrate the process by considering a binary tree for simplicity but in practice the dft can be applied to non binary trees as well @xcite . for trees with a total of d binary valued features the @xmath0 fourier coefficient @xmath1 is given by : @xmath2 where @xmath3 is the classification outcome of path vector x and @xmath4 , the fourier basis function is given by : @xmath5 figure 1 shows a simple example with 3 binary valued features @xmath6 , @xmath7 and @xmath8 , out of which only @xmath6 and @xmath8 are actually used in the classification .    as shown in @xcite only coefficients for paths that are defined by attributes that actually appear in the tree need to be computed as all other coefficients are guaranteed to be zero in value .",
    "thus any coefficient of the form @xmath9 will be zero since attribute @xmath7 does not appear in the tree .    with the wild card operator * in place we can use equations ( 1 ) and ( 2 ) to calculate non zero coefficients .",
    "thus for example we can compute : @xmath10 and so on .",
    "in addition to the properties discussed above , the fourier spectrum of a given decision tree has two very useful properties that make it attractive as a tree compression technique @xcite :    1 .",
    "all coefficients corresponding to partitions not defined in the tree are zero",
    "the magnitudes of the fourier coefficients decrease exponentially with their order , where the order is taken as the number of defining attributes in the partition .    taken together these properties mean that the spectrum of a decision tree can be approximated by computing only a small number of low order coefficients , thus reducing storage overhead . with a suitable thresholding scheme in place ,",
    "the fourier spectrum consisting of the set of low order coefficients is thus an ideal mechanism for capturing past concepts .",
    "furthermore , classification of unlabeled data instances can be done directly in the fourier domain as it is well known that the inverse of the dft defined in expression ( 3 ) can be used to recover the classification vector , instead of the use of a tree traversal which can be expensive in the case of deep trees .",
    "expression 3 uses the complex conjugate @xmath11 function for the inverse operation in place of the original basis function of @xmath4 .",
    "@xmath12 due to thresholding and loss of some high order coefficient values the classification value @xmath3 for a given data instance x may need to be rounded to the nearest integer in order to assign the class value . for example , with binary classes a value for f is rounded up to 1 if it is in the range @xmath13 and rounded down to 0 in the range @xmath14 .",
    "we first present the basic algorithm used in section 5.1 and then go on to discuss an optimization that we used for energy thresholding in section 5.2 .",
    "we use cbdt @xcite as the base algorithm which maintains a forest of trees .",
    "this forest of trees is dynamic in the sense that it can adapt to changing concepts at drift detection points .",
    "we thus define the memory consumed by this forest as _",
    "active_.    we integrate the basic cbdt algorithm with the adwin @xcite drift detector to signal concept drift . at the first concept drift point the best performing tree ( in terms of accuracy ) is identified and the dft is applied after energy thresholding after which the resulting spectrum is stored in the repository for future use if the current concept recurs .",
    "the spectra stored in the repository are fixed in nature as the intention is to capture past concepts . at each subsequent drift point a winner model is chosen by polling both the active memory and the repository . if the winner emerges from the active memory , two checks are made before the dft is applied .",
    "first of all , we check whether the difference in accuracy between the winner tree in active memory ( t ) and the best performing model in the repository is greater than a tie threshold @xmath15 .",
    "if this check is passed then the dft is applied to t and a further check is made to ensure that its fourier representation is not already in the repository .",
    "if the winner model at a drift point emerges from an already existing spectrum in the repository then no fourier conversion is applied on any of the trees in active memory .",
    "whichever model is chosen as the winner it is applied to classify all unlabeled data instances until a new winner emerges at a subsequent drift point .",
    "the least performing model m having the lowest weighted accuracy function is deleted if the repository has no room for new models.the weighted accuracy of m is defined by : @xmath16 , where @xmath17 is the number of times that m was declared a winner since it was inserted into the repository .    [",
    "fct [ cbdt ] read an instance i from the data stream +   + if best model m is in repository call classify to classify i + append 0 to adwin s window for m if classification is correct , else append 1 +   + identify best performing model f in repository +   + apply dft on model m to produce f * using energy threshold _ @xmath18 _ +   + insert f * into repository + identify best performing model m by polling active memory and repository + goto 1    [ h ! ]    classify [ classifyusingfourierspectrum ]   +   + if @xmath3 is greater than 0.5 , return class1 , otherwise class2      in order to avoid unnecessary computation of higher order coefficients which yield increasingly low returns on classification accuracy , energy threshold is highly desirable . to threshold on energy a subset s of the ( lower order ) coefficients needs to be determined such that @xmath19 , where @xmath20 denotes the total energy across the spectrum and @xmath21 is the desired energy threshold value . in our optimized thresholding ,",
    "we first compute the cumulative energy @xmath22 at order i given by : @xmath23 .",
    "given an order i , an upper bound estimate for the cumulative energy across the rest of the spectrum is given by : @xmath24 , as the exponential decay property ensures that the energy at each of the orders @xmath25 , @xmath26 , @xmath27 , @xmath28 is less than energy @xmath29 at order i , where d is number of attributes in the dataset .",
    "thus a lower bound estimate for the fraction of the cumulative energy @xmath30 at order i to the total energy across all orders can then be expressed as : @xmath31 where @xmath29 is actual ( computed ) energy at order i. the lower bound estimate allows the specification of a threshold @xmath21 based on the energy captured by a given order i which is more meaningful to set rather than an arbitrary threshold .",
    "the scheme expressed by equation ( [ equ : estimatedcumulativeenergy ] ) enables the thresholding process to be done algorithmically . if the cumulative energy @xmath32 , then we can guarantee that the actual energy captured is at least @xmath21 , since @xmath30 is a lower bound estimate . on the other hand",
    "if @xmath33 , then @xmath34 can be expressed as : @xmath35    thus equation ( [ euqation2 ] ) enables the cumulative fraction to be easily updated incrementally for the next higher order ( i+1 ) by simply computing the energy at that order while exploiting the exponential decay property of fourier spectrum .",
    "the thresholding method guarantees that no early termination will take place .",
    "this is because @xmath30 is a lower bound estimate and hence the order that it returns will never be less than the true order that captures a given fraction @xmath21 of the total actual energy in the spectrum .",
    "this section elaborates on our empirical study involving the following learning systems : cbdt , fct ( fourier concept trees ) and metact .",
    "the fct incorporates the fourier compressed trees in a repository in addition to the forest of trees that standard cbdt maintains .",
    "we implement gama s meta learning approach with cbdt as the base learner , namely metact .",
    "the main focus of the study is to assess the extent to which recurrences are recognized using old models preserved in classifier pools .",
    "all experimentation was done with the following parameter values :    * hoeffding tree parameters the desired probability of choosing the correct split attribute=0.99 , tie threshold=0.01 , growth check interval=32 * tree forest parameters maximum node count=5000 , maximum number of fourier trees=50 , accuracy tie threshold @xmath15=0.01 * adwin parameters drift significance value=0.01 , warning significance value=0.3 ( metact only )    all experiments were done on the same software with c # .net runtime and hardware with intel i5 cpu and 8 gb ram , clearning the memory in each run to have a fair comparison .",
    "we experimented with data generated from 3 data generators commonly used in drift detection and recurrent concept mining , namely sea concept @xcite , rbf and rotating hyperplane generators .",
    "in addition we used 2 real - world datasets , _ spam _ and the _ nsw electricity _ which have also been commonly used in previous research .",
    "for the synthetic datasets , each of the 4 concepts spanned 5,000 instances and reappeared 25 times in a data set , yielding a total of 500,000 instances with 100 true concept drift points .    in order to challenge the concept recognition process , we added a 10% noise level for all synthetic data sets to ensure that concepts recur in similar , but not exact form .",
    "we used moa @xcite as the tool to generate these datasets .    1 .",
    "* sea : * the concepts are defined by the function @xmath36 .",
    "we ordered the concepts as concept1 , concept2 , concept3 and concept4 generated using threshold values 8,7,9 and 9.5 respectively on the first data segment of size 20,000 .",
    "we generated 96 recurrences of a modified form of these concepts by using different seed values in moa for each sequence of recurrence .",
    "thus , our version of this dataset differed from the one used by gama and kosina @xcite .",
    "who simply used 3 concepts with the third being an exact copy of the first . 2 .",
    "* rbf : * the number of centroids parameter was adjusted to generate different concepts for the rbf dataset .",
    "concept1 , concept2 , concept3 and concept4 were produced with the number of centroids set to 5,15 , 25 and 35 respectively .",
    "similar to the sea dataset , the seed parameter helped in producing similar concepts for a given centroid count value .",
    "this dataset had 10 attributes .",
    "3 .   * rotating hyperplane : * the number of drifting attributes was adjusted to 2,4,6 , and 8 in a 10 dimensional data set to create the four concepts .",
    "the concept ordering , generation of similar concepts and concatenation were exactly the same as in the other data sets mentioned above .      1 .",
    "_ spam data set : _ the spam dataset was used in it original form which encapsulates an evolution of spam messages .",
    "there are 9,324 instances and 499 informative attributes , which was different from the one version used by gama that had 850 attributes .",
    "electricity data set : _ nsw electricity dataset is also used in its original form .",
    "there are two classes _ up _ and _ down _ that indicate the change of price with respect to the moving average of the prices in last 24 hours .      in our preliminary experiments",
    ", we found optimal values for the two parameters , _ delay _ in receiving labels for the instances in short term memory , and _ hit percentage threshold value _ as 200 and 80% , respectively .",
    "the latter parameter reflects the estimated similarity of the current concept with one from the past and thus controls the degree of usage of classifiers from the pool .",
    "our focus in this series of experiments was to assess the models in terms of accuracy , memory consumption and processing times .",
    "none of the previous studies reported in the recurrent concept mining literature undertook a comparative study against other approaches and so we believe our empirical study to be the first such effort .",
    "furthermore , all of the previous studies focused exclusively on accuracy without tracking memory and execution time overheads and so this study would also be the first of its kind .",
    "a delay period of 200 was used with all three approaches in order to perform a fair comparison .",
    "figure 2 clearly shows that overall , fct significantly outperforms its two rivals with respect to classification accuracy .",
    "the major reason for fct s superior performance was its ability to re - use previous classifiers as shown in the segment 20k-25k on the rbf dataset where the concept is similar to concept1 that occurred in interval 1 - 5k .",
    "this is in contrast to metact which was unable to recognize the recurrence of concept1 .",
    "a similar situation occurs in the interval 25k-35k where the concept is similar to the previously occurring concepts , which are concept2 and 3 .",
    "as expected cbdt , operating on its own without support for concept recurrence had a relatively flat trajectory throughout the stream segment .",
    "a similar trend to the rbf dataset was observed in rotating hyperplane and sea datasets as well .",
    "it can be clearly seen that fct was successful in reusing the models learned before on data segments from 20k to 25k and from 30k to 35k . though a preserved model was reused on the data segment from 25k to 30k ( corresponding to concept3 ) , the accuracy was not as high as in the above two segments . on the segment from 35k to 40k ,",
    "concept recurrence was not picked up by either fct or metact resulting in a new classifier being used .",
    "we omit the figure for the sea dataset due to space constraints . in summary , fct outperformed metact over 90 recurring concepts whereas metact did better in 6 occurrences , thus maintaining the same trend as with the other 2 synthetic datasets that we experimented with .",
    "the next experiment was on the nsw electricity data set .",
    "figure [ accuracycurves ] shows that overall , fct was the winner here as well , outperforming metact at 25 segments out of 35 that we tracked . sudden fall in accuracy of metact is occational but due to incorrect selection of winner which was a decision stump .",
    "our experimentation on accuracy has revealed , especially in the case of fct , the key role that concept capture and re - use has played in improving accuracy .",
    "the question is , what price has to be paid in terms of memory overhead in storing these recurrent concepts ?",
    "table1 clearly shows that the fourier transformed trees consume a small fraction of the memory used by the pool of trees kept in fct s active memory , despite the fact that collectively these models outperform their decision tree counterparts at a greater number of points in the stream progression .",
    "r0.7        comparison of overall memory consumption across fct and metact is complicated by the fact that the latter tended to have immature trees in its classifier pool that under fits concepts . despite this",
    ", table 1 reveals that fct s memory consumption is competitive to that of metact . the only case where metact had a substantially lower consumption was with the spam dataset with a lower overhead for active memory .",
    "fct and metact have two very contrasting methods of classification .",
    "the former routes each unlabeled instance to a single tree , which is the best performing tree selected at the last concept drift point .",
    "in contrast metact classifies by routing an unlabeled instance to all referees to obtain their assessment of their corresponding models and in general will have more processing overhead on a per instance basis .",
    "however , fct has potentially more overhead at concept drift points if the winner tree is one that is selected from the active forest as this tree needs to be converted into its fourier representation .",
    "thus it is interesting to contrast the run time performances of the two approaches .",
    "[ tab : overheadcomparison ]    .average memory consumption ( in kbs ) and processing speed instances per second ) comparison [ cols= \" < , < , < , < , < ,",
    "< , < \" , ]     table 1 shows that in general fct has a higher processing speed ( measured in instances processed per second ) ; the only exception was with the electricity dataset where metact was faster .",
    "the electricity data contains a relatively larger number of drift points in comparison to the other datasets and this in turn required a greater number of dft operations to be performed , thus slowing down the processing . in our future research",
    "we will investigate methods of optimizing the dft process .    finally , we close this section with two general observations on fct which hold across all experiments reported above .",
    "firstly , we note that the discrete fourier transform ( dft ) , as expected , was able to capture the _ essence _ of a concept to the extent that when it reappeared in a modified form in the presence of noise it was still recognizable and was able to classify it accurately . secondly , not only was the dft robust to noise , it actually performed better than the original decision trees at concept recurrence points due to its better generalization capability .",
    "having established the superiority of fct we were interested in exploring the sensitivity of fct s accuracy on two key factors .",
    "r0.5       fct s energy threshold parameter controls the extent to which it captures recurring contexts .",
    "we ran experiments with all datasets we experimented with and tracked accuracy across four different thresholds : 95% , 80% , 40% and 20% .",
    "the trends observed for all datasets were very similar and hence we display results for the sea concepts dataset due to space constraints .",
    "figure [ energyaccuracy ] clearly shows that very little difference in accuracy exists between the trajectories for 40% and 95% , showing the resilience of the dft in capturing the classification power of concepts at low energy levels such as 40% .",
    "thus the low order fourier coefficients that survive the 40% threshold hold almost the same classification power of spectra at the 80% or 90% levels which contain more coefficients .",
    "such higher energy spectra would represent larger decision trees in which some of the decision nodes would be split into leaf nodes , thus enabling them to reach a slightly higher level of accuracy .",
    "in section 5.4 we observed that fct outperformed metact by recognizing concepts from the past even though the concepts did not recur exactly in their original form due partly to noise and partly due to different data instances being produced as a result of re - seeding of the concept generation functions . in this experiment we explicitly test the resilience of fct to noise level by subjecting it to three different levels of noise - 10% , 20% and 30% . for reasons of completeness we also included metact in he experimentation to aid in the interpretation of results .",
    "figure 4 reveals three interesting pieces of information .",
    "firstly , fct is still able to recognize recurring concepts at the 20% noise level even though the models it re - uses do not have quite the same classification power ( when compared to the 10% noise level ) on the current concept due to data instances being corrupted by a relatively higher level of noise .",
    "secondly , fct s concept recurrence recognition is essentially disabled at the 30% noise level as shown by its flat trajectory , thus essentially performing at the level of the base cbdt system .",
    "it is able to avoid drops in accuracy on account of the forest of trees that is maintained and is able to switch quickly and seamlessly from one tree to another when concepts change occurs .",
    "thirdly , although metact is not the focus of this experiment we see that metact s ability to recognize recurring concepts is disabled at the 20% level , showing once gain the resilience of the dft to noise . at the 30% level",
    "its accuracy drops quite sharply at certain points in the stream.this is due to the fact that it learns a single new classifier and relies on it to classify instances in the current concept .",
    "in contrast , fct exploits the entire forest of trees and switches from one tree to another tree in its active forest in response to drift .",
    "[ accuracynoise ]",
    "in this research we proposed a novel mechanism for mining data streams by capturing and exploiting recurring concepts .",
    "our experimentation showed that the discrete fourier transform when applied on decision trees captures concepts very effectively , both in terms of information content and conciseness .",
    "the fourier transformed trees were robust to noise and were thus able to recognize concepts that reappeared in modified form , thus contributing significantly to improving accuracy .",
    "overall our proposed approach significantly outperformed the meta learning approach by gama and kosina @xcite in terms of classification accuracy while being competitive in terms of memory and processing speed .",
    "we were able to optimize the derivation of the fourier spectrum by an efficient thresholding process but there is further scope for optimization in the computation of low order coefficients in streams exhibiting frequent drifts , as our experimentation with the nsw electricity dataset reveals .",
    "our future work will concentrate on two areas .",
    "firstly we plan to investigate the use of multi - threading on a parallel processor platform to optimize the dft operation .",
    "allocating the dft process to a thread while another thread processes the incoming stream will greatly speed up processing for fct as the two processes are independent of each other and can be executed in parallel .",
    "secondly , the computation of the fourier basis function that requires a vector dot product computation can be optimized by using patterns in the two vectors involved .",
    "[ dawak ] alippi , c. , boracchi , g. , & roveri , m. ( 2013 ) . just - in - time",
    "classifiers for recurrent concepts .",
    "ieee transactions on neural networks and learning systems , 24(4 ) , 620 - 634 .",
    "doi:10.1109/tnnls.2013.2239309    bifet , a. , & gavald , r. ( 2007 ) .",
    "learning from time - changing data with adaptive windowing symposium conducted at the meeting of the 2007 siam international conference on data mining ( sdm07 ) , minneapolis , minnesota .",
    "hoeglinger , s. , pears , r. , & koh , y. ( 2009 ) .",
    "cbdt : a concept based approach to data stream mining . in t. theeramunkong , b. kijsirikul , n. cercone , & t .- b .",
    "ho ( eds . ) , advances in knowledge discovery and data mining ( vol . 5476 , pp .",
    "1006 - 1012 ) : springer berlin / heidelberg.doi:10.1007/978-3-642-01307-2_107        kargupta , h. , & park , b .- h .",
    "( 2004 ) . a fourier spectrum - based approach to represent decision trees for mining data streams in mobile environments .",
    "ieee trans . on knowl . and data eng .",
    ", 16(2 ) , 216 - 229 .",
    "doi:10.1109/tkde.2004.1269599              ramamurthy , s. , & bhatnagar , r. ( 2007 ) .",
    "tracking recurrent concept drift in streaming data using ensemble classifiers .",
    "symposium conducted at the meeting of the sixth international conference on machine learning and applications , 2007 .",
    "street , w. n. , & kim , y. ( 2001 . a streaming ensemble algorithm ( sea ) for large - scale classification .",
    "presented at the meeting of the proceedings of the seventh acm sigkdd international conference on knowledge discovery and data mining , san francisco , california ."
  ],
  "abstract_text": [
    "<S> in this research we address the problem of capturing recurring concepts in a data stream environment . </S>",
    "<S> recurrence capture enables the re - use of previously learned classifiers without the need for re - learning while providing for better accuracy during the concept recurrence interval . </S>",
    "<S> we capture concepts by applying the discrete fourier transform ( dft ) to decision tree classifiers to obtain highly compressed versions of the trees at concept drift points in the stream and store such trees in a repository for future use . </S>",
    "<S> our empirical results on real world and synthetic data exhibiting varying degrees of recurrence show that the fourier compressed trees are more robust to noise and are able to capture recurring concepts with higher precision than a meta learning approach that chooses to re - use classifiers in their originally occurring form . </S>"
  ]
}
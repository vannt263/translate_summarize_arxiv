{
  "article_text": [
    "quantum computation has attracted much attention since shor s celebrated quantum algorithm for factoring large integers  @xcite and grover s quantum search algorithm  @xcite .",
    "one of the central issues in this research field has been the _ quantum query complexity _",
    ", where we are interested in both upper and lower bounds of a necessary number of oracle calls to solve certain problems  @xcite . in these studies ,",
    "oracles are assumed to be _ perfect _ , i.e. , they return the correct value with certainty .    in the classical case",
    ", there have been many studies ( e.g. ,  @xcite ) that discuss the case of when oracles are _ imperfect _ ( or often called _ noisy _ ) , i.e. , they may return incorrect answers . in the quantum setting , hyer et al .",
    "@xcite proposed an excellent quantum algorithm , which we call the _ robust quantum search algorithm _ hereafter , to compute the or function of @xmath2 values , each of which can be accessed through a quantum `` imperfect '' oracle .",
    "their quantum `` imperfect '' oracle can be described as follows : when the content of the query register is @xmath5 ( @xmath6 ) , the oracle returns a quantum pure state from which we can measure the correct value of @xmath7 with a constant probability .",
    "this noise model naturally fits into quantum subroutines with errors .",
    "( note that most existing quantum algorithms have some errors . )",
    "more precisely , their algorithm robustly computes @xmath2-bit or functions with @xmath8 queries to an imperfect oracle , which is only a constant factor worse than the perfect oracle case .",
    "thus , they claim that their algorithm does not need a serious overhead to cope with the imperfectness of the oracles .",
    "their method has been extended to a robust quantum algorithm to output all the @xmath2 bits by using @xmath9 queries  @xcite by buhrman et  al .",
    "this obviously implies that @xmath9 queries are enough to compute the parity of the @xmath2 bits , which contrasts with the classical @xmath10 lower bound given in  @xcite .",
    "it should be noted that , in the classical setting , we do not need an overhead to compute or functions with imperfect oracles either , i.e. , @xmath9 queries are enough to compute @xmath2-bit or functions even if an oracle is imperfect @xcite .",
    "nevertheless , the robust quantum search algorithm by hyer et al .",
    "@xcite implies that we can still enjoy the quadratic speed - up of the quantum search when computing or functions , even in the imperfect oracle case , i.e. , @xmath8 vs. @xmath9 .",
    "however , this is not true when we consider the probability of getting the correct value from the imperfect oracles _ explicitly _ by using the following model : when the query register is @xmath5 , the oracle returns a quantum pure state from which we can measure the correct value of @xmath7 with probability @xmath11 , where we assume @xmath12 for any @xmath5 and we know the value of @xmath0 . in this paper",
    ", we call this imperfect quantum oracle _ an @xmath13-biased oracle _ ( or a biased oracle for short ) by following the paper  @xcite .",
    "then , the precise query complexity of the above robust quantum search algorithm to compute or functions with an @xmath13-biased oracle can be rewritten as @xmath4 , which can also be found in  @xcite .",
    "for the same problem , we need @xmath14 queries in the classical setting since @xmath15 instances of majority voting of the output of an @xmath13-biased oracle is enough to boost the success probability to some constant value .",
    "this means that the above robust quantum search algorithm does not achieve the quadratic speed - up anymore if we consider the error probability explicitly .",
    "adcock et al .",
    "@xcite first considered the error probability explicitly in the quantum oracles , then iwama et al .",
    "@xcite continued to study @xmath13-biased oracles : they show the lower bound of computing or is @xmath16 and the matching upper bound when @xmath17 are the same for all @xmath5 .",
    "unfortunately , this restriction to oracles obviously can not be applied in general .",
    "therefore , for the general biased oracles , there have been a gap between the lower and upper bounds although the paper  @xcite conjectures that they should match at @xmath18 .    * our contribution .  * in this paper , we show that the robust quantum search can be done with @xmath3 queries .",
    "thus , we answer the conjecture raised by the paper  @xcite affirmatively , meaning that we can still enjoy the quantum quadratic speed - up to compute or functions even when we consider the error probability explicitly .",
    "the overhead factor of @xmath19 in the complexity of the original robust quantum search ( i.e. , @xmath4 ) essentially comes from the classical majority voting in their recursive algorithm .",
    "thus , our basic strategy is to utilize _ quantum amplitude amplification and estimation _",
    "@xcite instead of majority voting to boost the success probability to some constant value .",
    "this overall strategy is an extension of the idea in the paper  @xcite , but we carefully perform the quantum amplitude amplification and estimation in quantum parallelism with appropriate accuracy to avoid the above - mentioned restriction to oracles assumed in  @xcite .    in most existing ( classical and quantum ) algorithms with imperfect oracles , it is implicitly assumed that we know the value of @xmath0 .",
    "otherwise , it seems impossible to know when we can stop the trial of majority voting with a guarantee of a more than constant success probability of the whole algorithm .",
    "however , we show that , in the quantum setting , we can construct a robust algorithm even when @xmath0 is unknown .",
    "more precisely , we can estimate unknown @xmath0 with appropriate accuracy , which then can be used to construct robust quantum algorithms .",
    "our estimation algorithm also utilizes quantum amplitude estimation , thus it can be considered as an interesting application of quantum amplitude amplification , which seems to be impossible in the classical setting .",
    "in this section , we introduce the quantum computing and the query complexity . we also define quantum biased oracles .",
    "a state of @xmath20-_qubit _ quantum register @xmath21 is a superposition of @xmath22 classical strings with length @xmath20 , i.e. , @xmath23 where @xmath24 and the _ _",
    "@xmath25 are complex numbers consistent with the normalization condition : @xmath26 .",
    "if we _ measure _",
    "the state @xmath21 with respect to the standard basis , we observe @xmath27 with probability @xmath28 and after the measurement the state @xmath21 collapses into @xmath27 .    without measurements ,",
    "a quantum system can evolve satisfying the normalization condition .",
    "these evolutions are represented by unitary transformations .",
    "the following _ fourier transform _ is a famous example that acts on several qubits .    for any integer @xmath29 ,",
    "a quantum fourier transform @xmath30 is defined by @xmath31    in this paper , unitary transformations controlled by other registers are often used .",
    "for example , one of them acts as some unitary transformation if the control qubit is @xmath32 , otherwise it acts as identity .",
    "the following operator @xmath33 is also one of their applications .    for any integer @xmath29 and any unitary operator @xmath34 , the operator @xmath35 is defined by @xmath36 @xmath33 is controlled by the first register @xmath37 in this case .",
    "@xmath35 uses @xmath34 for @xmath38 times .",
    "it is also known that quantum transformations can compute all classical functions .",
    "let @xmath39 be any classically computable function with @xmath40 input and @xmath41 output bits .",
    "then , there exists a unitary transformation @xmath42 corresponding to the computation of @xmath39 : for any @xmath43 and @xmath44 , @xmath42 maps @xmath45 to @xmath46 , where @xmath47 denotes the bitwise exclusive - or .      in this paper , we are interested in the query complexity , which is discussed in the following model .",
    "suppose we want to compute some function @xmath48 with an @xmath2-bit input and we can access each bit only through a given oracle @xmath49 .",
    "the query complexity is the number of queries to the oracle .",
    "a quantum algorithm with @xmath50 queries is a sequence of unitary transformations : @xmath51 where @xmath52 denotes the unitary transformation corresponding to the @xmath53-th query to the oracle @xmath49 , and @xmath54 denotes an arbitrary unitary transformation independent of the oracle .",
    "our natural goal is to find an algorithm to compute @xmath48 with sufficiently large probability and with the smallest number of oracle calls .",
    "the most natural quantum oracles are quantum perfect oracles @xmath55 that map @xmath56 to @xmath57 for any @xmath58 $ ] . here",
    ", @xmath59 is a work register that is always cleared before and after querying oracles . on the other hand , quantum biased oracles , which we deal with in this paper ,",
    "are defined as follows .",
    "[ def : biased_oracle ] a quantum oracle of a boolean function @xmath60 with bias @xmath0 is a unitary transformation @xmath61 or its inverse @xmath62 such that @xmath63 where @xmath64 for any @xmath65 $ ] . let also @xmath66 .",
    "note that @xmath67 for any @xmath5 . in practice",
    ", @xmath0 is usually given in some way and @xmath68 or @xmath69 may be unknown .",
    "unless otherwise stated , we discuss the query complexity with a given biased oracle @xmath70 in the rest of the paper .",
    "we can also consider phase flip oracles instead of the above - defined bit flip oracles .",
    "a ( perfect ) phase flip oracle is defined as a map : @xmath71 , which is equivalent to the corresponding bit flip oracle @xmath55 in the perfect case , since either oracle can be easily simulated by the other oracle with a pair of hadmard gates . in a biased case , however , the two oracles can not always be converted to each other .",
    "we need to take care of interference of the work registers , i.e. , @xmath72 and @xmath73 , which are dealt with carefully in our algorithm .",
    "we briefly introduce a few known quantum algorithms often used in the following sections . in @xcite ,",
    "brassard et al . presented amplitude amplification as follows .",
    "[ th : amplification ] let @xmath74 be any quantum algorithm that uses no measurements and @xmath75 be any boolean function that distinguishes between success or fail ( good or bad ) .",
    "there exists a quantum algorithm that given the initial success probability @xmath76 of @xmath74 , finds a good solution with certainty using a number of applications of @xmath74 and @xmath77 , which is in @xmath78 in the worst case .    in the amplitude amplification ,",
    "a unitary operator @xmath79 is used .",
    "here , @xmath80 denotes an operator to flip the sign of amplitude of the state @xmath81 , and @xmath82 denotes an operator to flip the signs of amplitudes of all the good states . applying @xmath83 to the state @xmath84 for @xmath85 times , we have @xmath86 where @xmath87 has all the good states , and @xmath88 and @xmath87 is orthogonal to @xmath89 . after applying @xmath83 for about @xmath90 times",
    ", we can measure a good solution with probability close to @xmath91 .",
    "note that we need to know information about the value of @xmath92 in some way to do so .",
    "see @xcite for more details .",
    "brassard et al . also presented amplitude estimation in  @xcite .",
    "we rewrite it in terms of phase estimation as follows .",
    "[ th : estimation ] let @xmath93 and @xmath92 be as in theorem  [ th : amplification ] and @xmath94 such that @xmath95 .",
    "there exists a quantum algorithm @xmath96 that outputs @xmath97 such that @xmath98 , with probability at least @xmath99 .",
    "it uses exactly @xmath38 invocations of @xmath74 and @xmath100 , respectively . if @xmath101 then @xmath102 with certainty , and if @xmath103 and @xmath38 is even , then @xmath104 with certainty .",
    "in this section , we assume that we have information about bias rate of the given biased oracle : a value of @xmath0 such that @xmath105 . under this assumption , in theorem [ th : or ] we show that @xmath2-bit or functions can be computed by using @xmath106 queries to the given oracle @xmath70 . moreover , when we know @xmath68 , we can present an optimal algorithm to compute or with @xmath70 . before describing the main theorem , we present the following key lemma .    [ le : main ] there exists a quantum algorithm that simulates a single query to an oracle @xmath107 by using @xmath108 queries to @xmath109 if we know @xmath0 .",
    "to prove the lemma , we replace the given oracle  @xmath61 with a new oracle  @xmath110 for our convenience .",
    "the next lemma describes the oracle  @xmath110 and how to construct it from @xmath109 .",
    "there exists a quantum oracle @xmath110 that consists of one @xmath109 and one @xmath111 such that for any @xmath65 $ ] @xmath112 where @xmath113 is orthogonal to @xmath114 and its norm is @xmath115 .",
    "we can show the construction of @xmath110 in a similar way in lemma  1 in  @xcite .",
    "now , we describe our approach to lemma  [ le : main ] .",
    "the oracle @xmath116 is simulated by the given oracle @xmath61 based on the following idea . according to @xcite ,",
    "if the query register @xmath27 is not in a superposition , phase flip oracles can be simulated with sufficiently large probability : by using amplitude estimation through @xmath117 , we can estimate the value of @xmath118 , then by using the estimated value and applying amplitude amplification to the state in ( [ eq : oracle ] ) , we can obtain the state @xmath119 with high probability . in lemma",
    "[ le : main ] , we essentially simulate the phase flip oracle by using the above algorithm in a superposition of @xmath27 .",
    "note that we convert the phase flip oracle into the bit flip version in the lemma .",
    "we will present the proof of lemma  [ le : main ] after the following lemma , which shows that amplitude estimation can work in quantum parallelism . @xmath120 in theorem  [ th : estimation ] is straightforwardly extended to @xmath121 in lemma  [ le : pestimation ] , whose proof can be found in the appendix .    [",
    "le : pestimation ] let @xmath122 be any boolean function , and let @xmath123 be any quantum oracle that uses no measurements such that @xmath124 where a state @xmath125 is divided into a good state @xmath126 and a bad state @xmath127 by @xmath100 .",
    "let @xmath128 be the success probability of @xmath129 where @xmath130 .",
    "there exists a quantum algorithm @xmath131 that changes states as follows : @xmath132 where @xmath133 for any @xmath5 , and @xmath134 and @xmath135 are mutually orthonormal vectors for any @xmath136 .",
    "it uses @xmath137 and its inverse for @xmath138 times .",
    "( of lemma  [ le : main ] )    we will show a quantum algorithm that changes states as follows : @xmath139 where @xmath140 for any @xmath5 , using @xmath108 queries to @xmath109 .",
    "the algorithm performs amplitude amplification following amplitude estimation in a superposition of @xmath27 .    at first",
    ", we use amplitude estimation in parallel to estimate @xmath118 or to know how many times the following amplitude amplification procedures should be repeated .",
    "let @xmath141 and @xmath142 such that @xmath143 .",
    "note that @xmath144 since @xmath145 when @xmath146 .",
    "let also @xmath147 and @xmath100 be a boolean function that divides a state in ( [ eq : oracle ] ) into a good state @xmath148 and a bad state @xmath149 .",
    "the function @xmath100 checks only whether the state is @xmath150 or not ; therefore , it is implemented easily . by lemma  [ le : pestimation ]",
    ", @xmath151,@xmath100,@xmath152 maps @xmath153 where @xmath154 for any @xmath5 , and @xmath134 and @xmath135 are mutually orthonormal vectors for any @xmath136 .",
    "this state has the good estimations of @xmath155 in the third register with high probability .",
    "the fourth register @xmath81 remains large enough to perform the following steps .",
    "the remaining steps basically perform amplitude amplification by using the estimated values @xmath156 , which can realize a phase flip oracle .",
    "note that in the following steps a pair of hadmard transformations are used to convert the phase flip oracle into our targeted oracle .",
    "based on the de - randomization idea as in  @xcite , we calculate @xmath157 , @xmath158 , @xmath159 and @xmath160 in the superposition , and apply an hadmard transformation to the last qubit .",
    "thus we have @xmath161 next , let @xmath162 be a rotation and let @xmath163 be a new oracle .",
    "we apply @xmath164 followed by @xmath165 , where @xmath166 and @xmath167 ; @xmath80 and @xmath82 are defined appropriately .",
    "@xmath168 is controlled by the register @xmath169 , and @xmath83 is applied to the registers @xmath27 and @xmath170 if the last qubit is @xmath32 .",
    "let @xmath171 denote the unitary operator such that @xmath172 .",
    "then we have the state ( from here , we write only the last three registers . )",
    "@xmath173 where @xmath174 and @xmath175 for any @xmath176 .",
    "we will show that the phase flip oracle is simulated if the third register @xmath177 has the good estimation of @xmath155 and the last register has @xmath32 .",
    "equation  ( [ eq : flip ] ) can be rewritten as @xmath178 where @xmath179 is orthogonal to @xmath180 and its norm is @xmath181 .",
    "suppose that the third register has @xmath177 such that @xmath182 .",
    "it can be seen that @xmath183 if @xmath182 .",
    "therefore , @xmath184 is applied for @xmath185 times , i.e. , the number specified by the fourth register . like the analysis of lemma  2 in @xcite",
    ", it is shown that @xmath186 .",
    "finally , applying an hadmard transformation to the last qubit again , we have the state @xmath187 if we measure the last qubit , we have with probability @xmath188 thus , the final quantum state can be rewritten as @xmath189 , where @xmath140 for any @xmath5 .",
    "the query complexity of this algorithm is the cost of amplitude estimation @xmath190 and amplitude amplification @xmath191 , thus a total number of queries is @xmath192 .",
    "therefore , we can simulate a single query to @xmath193 using @xmath194 queries to @xmath195 .",
    "now , we describe the main theorem to compute or functions with quantum biased oracles .    [",
    "th : or ] there exists a quantum algorithm to compute @xmath2-bit or with probability at least @xmath196 using @xmath197 queries to a given oracle @xmath109 if we know @xmath0 . moreover , if we know @xmath68 , the algorithm uses @xmath198 queries .",
    "the upper bound @xmath197 is obtained by lemma  [ le : main ] and @xcite . in  @xcite , we can see an algorithm to compute or with probability at least @xmath196 using @xmath8 queries to an oracle @xmath116 .",
    "when an oracle @xmath61 and a value of @xmath0 are given , we can simulate one query to an oracle @xmath116 using @xmath108 queries to @xmath61 by lemma  [ le : main ] .",
    "therefore , we can compute or using @xmath197 queries to an oracle @xmath61 .",
    "the lower bound @xmath199 is also obtained by theorem  6 in @xcite .",
    "the theorem states that for any problem , if the lower bound @xmath200 can be shown by ambainis method in the noiseless case , then the lower bound @xmath201 can also be shown in the noisy case . for computing @xmath2-bit or functions ,",
    "@xmath202 can be shown by ambainis method ; therefore , we can derive @xmath199 in the quantum biased setting .",
    "in sect.[se : known ] , we described algorithms by using a given oracle @xmath109 when we know @xmath0 . in this section , we assume that there is no prior knowledge of @xmath0 .",
    "our overall approach is to estimate @xmath0 with appropriate accuracy ( in precise @xmath68 ) in advance , which then can be used in the simulating algorithm in lemma  [ le : main ] . in the following ,",
    "we first describe an overview of our strategy to estimate @xmath68 rather informally , followed by rigorous and detailed descriptions .",
    "first , let us consider estimating @xmath69 in the same way as lemma  [ le : main ] in quantum parallelism .",
    "then , let @xmath203 denote the number of required oracle calls to achieve a _ good _ estimation of @xmath69 for any @xmath5 .",
    "_ means accurate enough to perform effective amplitude amplification in lemma  [ le : main ] . )",
    "note that @xmath204 , and if we know the value of @xmath0 , we can set @xmath205 as @xmath203 . however , now @xmath0 is unknown , we estimate @xmath203 as follows .",
    "first we will construct an algorithm , @xmath206 , which receives an input @xmath38 and decides whether @xmath38 is the number of oracle calls to obtain a good estimation of @xmath118 .",
    "more precisely , @xmath206 uses @xmath138 queries and returns @xmath207 if the input @xmath38 is large enough to estimate @xmath118 , otherwise it returns @xmath91 with a more than constant probability , say , @xmath208 .",
    "then , by using @xmath206 in a superposition of @xmath27 as in lemma  [ le : zestimation ] , we can obtain the state @xmath209 .",
    "when @xmath38 is small , the condition @xmath210 holds , which means there exists @xmath5 such that the estimation of @xmath118 may be bad . on the other hand ,",
    "when @xmath38 is sufficiently large , the condition @xmath211 holds , which means the estimation is good for any @xmath5 .",
    "our remaining essential task , then , is to know an input value of @xmath38 at the verge of the above two cases .",
    "note that the value is @xmath212 , which can be used as @xmath203 .",
    "next , we consider an algorithm , @xmath213 , which can distinguish the above two cases with @xmath214 oracle queries with a constant probability .",
    "then , @xmath203 can be estimated by @xmath215 queries by the following search technique and majority voting : we can find @xmath203 by trying @xmath216 along with exponentially increasing the input value @xmath38 until @xmath216 succeeds . note that a @xmath217 factor is needed to boost the success probability of @xmath216 to close to 1 .",
    "it should be noted that we can not use robust quantum search algorithm  @xcite as @xmath216 , since there may exist @xmath5 such that @xmath218 , which can not be dealt with by their algorithm .",
    "instead , in lemma  [ le : check ] , we will describe the algorithm @xmath216 , which can distinguish the above two cases by using amplitude estimation querying for @xmath219 times .",
    "then , the whole algorithm requires @xmath220 queries . in lemma",
    "[ le : zestimation ] , we present an algorithm @xmath221 that acts as @xmath206 in a superposition of @xmath27 , and in lemma  [ le : check ] , we describe the algorithm @xmath222 as @xmath216 .",
    "finally , the whole algorithm to estimate @xmath203 is presented in theorem  [ th : eminestimation ] .",
    "[ le : zestimation ] let @xmath123 be any quantum algorithm that uses no measurements such that @xmath223 let @xmath122 be a boolean function that divides a state @xmath125 into a good state @xmath126 and a bad state @xmath127 such that @xmath128 for any @xmath5 @xmath224 .",
    "there exists a quantum algorithm @xmath225 that changes states as follows : @xmath226 where @xmath227 for any @xmath5 .",
    "it uses @xmath137 and its inverse for @xmath138 times .",
    "the algorithm @xmath225 acts as @xmath131 from step  [ init_state ] to step  [ finverse ] , and applies a unitary transformation corresponding to the following function @xmath228 instead of @xmath229 at step  [ laststep ] , @xmath230 then , like ( [ estimatedstate ] ) we have the state @xmath231 where @xmath232 such that @xmath233 and @xmath234 for any @xmath176 .",
    "( precisely speaking , @xmath235 when @xmath236 . however , @xmath237 since @xmath238 in this case . )",
    "note that @xmath239 and @xmath240 are mutually orthogonal and @xmath241 .",
    "therefore , for any @xmath5 the last qubit has @xmath32 with probability @xmath242 @xmath225 requires @xmath138 queries to @xmath123 .",
    "they are used when the algorithm is working as @xmath131 .",
    "[ le : check ] let @xmath123 be any quantum oracle such that @xmath243 .",
    "there exists a quantum algorithm @xmath244 that outputs @xmath245 such that @xmath246 with probability at least @xmath247 using @xmath248 queries to @xmath137 .    using @xmath249 applications of @xmath137 and majority voting",
    ", we have a new oracle @xmath250 such that @xmath251 where @xmath252 if @xmath253 , and @xmath254 if @xmath255 .",
    "note that work bits @xmath73 and @xmath256 are likely larger than @xmath257 and @xmath258 .",
    "now , let @xmath74 be a quantum algorithm that makes the uniform superposition @xmath259 by the fourier transform @xmath260 and applies the oracle @xmath261 . we consider ( success ) probability @xmath92 that the last qubit in the final state @xmath84 has @xmath32 .",
    "if the given oracle @xmath137 satisfies @xmath262 ( we call case @xmath91 ) , the probability @xmath92 is at least @xmath263 . on the other hand , if @xmath137 satisfies @xmath264 ( we call case @xmath265 ) , then the probability @xmath266 .",
    "we can distinguish the two cases by amplitude estimation as follows .",
    "let @xmath97 denote the output of the amplitude estimation @xmath120@xmath267 .",
    "the whole algorithm @xmath222@xmath268 performs @xmath269 and outputs whether @xmath270 is greater than @xmath271 or not .",
    "we will show that it is possible to distinguish the above two cases by the value of @xmath97 .",
    "let @xmath94 such that @xmath95 .",
    "note that @xmath272 if @xmath273 .",
    "theorem  [ th : estimation ] says that in case @xmath91 , the @xmath120 outputs @xmath97 such that @xmath274 with probability at least @xmath247 . similarly in case @xmath265 , the inequality @xmath275 is obtained .",
    "@xmath222@xmath268 uses @xmath137 for @xmath219 times since @xmath222@xmath268 calls the algorithm @xmath74 for @xmath276 times and @xmath74 uses @xmath249 queries to the given oracle @xmath137 .",
    "[ th : eminestimation ] given a quantum biased oracle @xmath109 , there exists a quantum algorithm @xmath277 that outputs @xmath278 such that @xmath279 with probability at least @xmath196 .",
    "the query complexity of the algorithm is expected to be @xmath280    let @xmath281 and @xmath282 such that @xmath283 .",
    "let @xmath100 also be a boolean function that divides the state in ( [ eq : oracle ] ) into a good state @xmath148 and a bad state @xmath149 .",
    "thus @xmath284 in lemma  [ le : zestimation ] makes the state @xmath285 such that @xmath286 . as stated below ,",
    "if @xmath287 , then @xmath288 .",
    "we can use @xmath222 to check whether there exists @xmath5 such that @xmath288 .",
    "based on these facts , we present the whole algorithm @xmath277 .    @xmath277    1",
    ".   start with @xmath289 .",
    "2 .   [ inc ] increase @xmath290 by @xmath91 .",
    "[ branch ] run @xmath291 for @xmath292 times and use majority voting .",
    "if `` @xmath91 '' is output as the result of the majority voting , then return to step  [ inc ] .",
    "4 .   output @xmath293 .",
    "now , we will show that the algorithm almost keeps running until @xmath294 .",
    "we assume @xmath295 . under this assumption ,",
    "a proposition @xmath296 holds since the equation @xmath297 guarantees that there exists some @xmath5 such that @xmath298 and @xmath299 when @xmath300 .",
    "therefore , a single @xmath222 run returns `` @xmath91 '' with probability at least @xmath247 . by @xmath292 repetitions and majority voting , the probability that we obtain `` @xmath91 '' increases to at least @xmath301 .",
    "consequently , the overall probability that we return from step  [ branch ] to step  [ inc ] for any @xmath290 such that @xmath295 is at least @xmath302 this inequality can be obtained by considering an infinite product expansion of @xmath303 , i.e. , @xmath304 at @xmath305 .",
    "thus the algorithm keeps running until @xmath294 , i.e. , outputs @xmath278 such that @xmath306 , with probability at least @xmath196",
    ".    we can also show that the algorithm almost stops in @xmath307 .",
    "since @xmath308 when @xmath309 , @xmath310 for any @xmath5 if @xmath311 .",
    "therefore , in step  [ branch ] , `` @xmath207 '' is returned with probability at least @xmath99 when @xmath312 .",
    "the algorithm , thus , outputs @xmath313 with probability at least @xmath99 .",
    "let @xmath314 satisfy @xmath315 . if the algorithm runs until @xmath316 , its query complexity is @xmath317 since @xmath318 .",
    "* remark .",
    "* as mentioned above , we have some way to deal with quantum biased oracles even if we have no knowledge about the given oracle s bias rate .",
    "on the other hand , in the classical biased setting , there seems to be no way if the value of @xmath0 is unknown : suppose that classical biased oracles return a correct value with probability at least @xmath319 for each query .",
    "it is known that by using @xmath320 queries and majority voting , the probability that oracles answer queries correctly increases to @xmath196 . however",
    ", this algorithm works effectively when we know @xmath0 .",
    "in other words , unless we know @xmath0 , it is likely impossible to determine an appropriate number of majority voting to achieve at least a constant success probability of the whole algorithm .",
    "in this paper , we have shown that @xmath3 queries are enough to compute @xmath2-bit or with an @xmath13-biased oracle .",
    "this matches the known lower bound while affirmatively answering the conjecture raised by the paper  @xcite .",
    "the result in this paper implies other matching bounds such as computing parity with @xmath321 queries .",
    "we also show a quantum algorithm that estimates unknown value of @xmath13 with an @xmath13-biased oracle .",
    "then , by using the estimated value , we can construct a robust algorithm even when @xmath0 is unknown .",
    "this contrasts with the corresponding classical case where no good estimation method seems to exist . until now ,",
    "unfortunately , we have had essentially only one quantum algorithm , i.e. , the robust quantum search algorithm  @xcite , to cope with imperfect oracles .",
    "( note that other algorithms , including our own algorithm in theorem  [ th : or ] , are all based on the robust quantum search algorithm  @xcite . )",
    "thus , it should be interesting to seek another _ essentially different _ quantum algorithm with imperfect oracles .",
    "if we find a new quantum algorithm that uses @xmath214 queries to imperfect oracles with constant probability , then we can have a quantum algorithm that uses @xmath322 queries to imperfect oracles with an @xmath13-biased oracle based on our method .",
    "this is different from the classical case where we need an overhead factor of @xmath15 by majority voting .",
    "10    s.  aaronson and a.  ambainis . .",
    "in _ proceedings of 35th acm symposium on theory of computing _ , pages 200209 , 2003 .",
    "m.  adcock and r.  cleve . .",
    "in _ stacs _ , pages 323334 , 2002 .    a.  ambainis . .",
    ", 64(4):750767 , 2002 .",
    "a.  ambainis . .",
    "in _ proc .",
    "45th annual ieee symposium on foudations of computer science _ , pages 2231 , 2004 .",
    "r.  beals , h.  buhrman , r.  cleve , m.  mosca , and r  de  wolf . .",
    "in _ proc .",
    "39th annual ieee symposium on foudations of computer science _ , pages 352361 , 1998 .",
    "m.  boyer , g.  brassard , p.  hyer , and a.  tapp . . , 1996 .",
    "lanl preprint , http://xxx.lanl.gov/archive/quant-ph/9605034 .",
    "g.  brassard , p.  hyer , m.  mosca , and a.  tapp . .",
    "in _ quantum computation @xmath323 information _ , volume 305 of _ ams contemporary mathematics series millenium volume _ ,",
    "pages 5374 , 2002 .",
    "h.  buhrman , c.  durr , m.  heiligman , p.  hoyer , f.  magniez , m.  santha , and r.  wolf . .",
    "in _ proceedings of 16th ieee conference on computational complexity _ , pages 131137 , 2001 .",
    "h.  buhrman , i.  newman , h.  rhrig , and r.  de  wolf . .",
    "in _ stacs _ , pages 593604 , 2005 .",
    "u.  feige , p.  raghavan , d.  peleg , and e.  upfal . .",
    ", 23(5):10011018 , 1994 .",
    "l.  k. grover . .",
    "in _ stoc _ , pages 212219 , 1996 .",
    "p.  hyer , m.  mosca , and r.  de  wolf . .",
    "in _ icalp _ , pages 291299 , 2003 .",
    "k.  iwama , r.  raymond , and s.  yamashita . .",
    ", 46(10):12341243 , 2005 .",
    "y.  shi . .",
    "in _ proc .",
    "43th annual ieee symposium on foudations of computer science _ , pages 513519 , 2002 .",
    "p.  w. shor . .",
    "in _ proc .",
    "35th annual ieee symposium on foudations of computer science _ , pages 124134 , 1994 .",
    "here , we describe the algorithm and the proof of lemma  [ le : pestimation ] after providing a few definitions . the algorithm @xmath131 is based on the amplitude estimation algorithm in @xcite .",
    "we refer interested readers to @xcite .            1 .   [ init_state ]",
    "start with the state @xmath332 .",
    "[ 1query ] apply @xmath137 to the first and the second registers .",
    "[ est_init]apply @xmath30 to the third register .",
    "[ est_lambda ] apply @xmath333 controlled by the third register , where @xmath334 .",
    "@xmath83 is applied to the first and the second registers .",
    "[ finverse ] apply @xmath335 to the third register .",
    "[ laststep ] apply the unitary transformation @xmath336 to the third and the fourth registers , where @xmath336 maps @xmath337 to @xmath338 .",
    "when @xmath339 , the analysis can be performed almost like the following ; therefore , we assume @xmath340 for any @xmath5 . focusing on the subspace where the first register has a basis state @xmath27 ,",
    "the transformation @xmath341 is applied to the second register , where @xmath342 and @xmath85 is the number designated by the third register .",
    "since this situation is the same as in theorem 12 in @xcite , the analysis can be done similarly .",
    "let @xmath343 note that @xmath239 and @xmath240 are orthonormal eigenvectors of @xmath184 .",
    "after step  [ laststep ] , we can obtain the state @xmath344 where @xmath345 such that @xmath233 and @xmath234 for any @xmath176 .",
    "( precisely speaking , @xmath235 when @xmath236 .",
    "this condition means that @xmath346 or @xmath347 is an integer . )",
    "this follows theorem 11 in @xcite .",
    "we will show that the last register has the good estimations of @xmath155 with high probability in the final state .",
    "now , let @xmath348 and @xmath349 .",
    "@xmath350 means @xmath351 , thus @xmath352 holds .",
    "we can prove @xmath353 and @xmath354 like theorem 11 in @xcite .",
    "similarly , let @xmath355 and @xmath356 .",
    "@xmath350 means @xmath357 , thus @xmath358 holds .",
    "( this holds when @xmath359 .",
    "when @xmath360 , we consider @xmath361 , then the following sentences will hold . ) we can also prove @xmath362 and @xmath363 .",
    "thus the probability that the last register has an estimated value @xmath364 such that @xmath365 is @xmath366 therefore , the well - estimated values of @xmath155 lie in the last register with probability at least @xmath99 ."
  ],
  "abstract_text": [
    "<S> this paper considers the quantum query complexity of _ @xmath0-biased oracles _ that return the correct value with probability only @xmath1 . </S>",
    "<S> in particular , we show a quantum algorithm to compute @xmath2-bit or functions with @xmath3 queries to @xmath0-biased oracles . </S>",
    "<S> this improves the known upper bound of @xmath4 and matches the known lower bound ; we answer the conjecture raised by the paper  @xcite affirmatively . </S>",
    "<S> we also show a quantum algorithm to cope with the situation in which we have no knowledge about the value of @xmath0 . </S>",
    "<S> this contrasts with the corresponding classical situation , where it is almost hopeless to achieve more than a constant success probability without knowing the value of @xmath0 . </S>"
  ]
}
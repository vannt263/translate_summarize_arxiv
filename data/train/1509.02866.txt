{
  "article_text": [
    "generative models have become ubiquitous in machine learning and statistics and are now widely used in fields such as bioinformatics , computer vision , or natural language processing .",
    "these models benefit from being highly interpretable and easily extended .",
    "unfortunately , inference and learning with generative models is often intractable , especially for models that employ continuous latent variables , and so fast approximate methods are needed .",
    "variational bayesian ( vb ) methods @xcite deal with this problem by approximating the true posterior that has a tractable parametric form and then identifying the set of parameters that maximize a variational lower bound on the marginal likelihood .",
    "that is , vb methods turn an inference problem into an optimization problem that can be solved , for example , by gradient ascent .    indeed , efficient stochastic gradient variational bayesian ( sgvb ) estimators have been developed for auto - encoder models @xcite and a number of papers have followed up on this approach @xcite .",
    "recently , @xcite provided a complementary perspective by using stochastic backpropagation that is equivalent to sgvb and applied it to deep latent gaussian models .",
    "stochastic backpropagation overcomes many limitations of traditional inference methods such as the mean - field or wake - sleep algorithms @xcite due to the existence of efficient computations of an unbiased estimate of the gradient of the variational lower bound .",
    "the resulting gradients can be used for parameter estimation via stochastic optimization methods such as stochastic gradient decent(sgd ) or adaptive version ( adagrad ) @xcite .",
    "unfortunately , methods such as sgd or adagrad converge slowly for some difficult - to - train models , such as untied - weights auto - encoders or recurrent neural networks .",
    "the common experience is that gradient decent always gets stuck near saddle points or local extrema .",
    "meanwhile the learning rate is difficult to tune .",
    "@xcite gave a clear explanation on why newton s method is preferred over gradient decent , which often encounters under - fitting problem if the optimizing function manifests pathological curvature .",
    "newton s method is invariant to affine transformations so it can take advantage of curvature information , but has higher computational cost due to its reliance on the inverse of the hessian matrix .",
    "this issue was partially addressed in @xcite where the authors introduced hessian free ( hf ) optimization and demonstrated its suitability for problems in machine learning .    in this paper , we continue this line of research into @xmath0 order variational inference algorithms .",
    "inspired by the property of location scale families @xcite , we show how to reduce the computational cost of the hessian or hessian - vector product , thus allowing for a @xmath0 order stochastic optimization scheme for variational inference under gaussian approximation . in conjunction with the hf optimization",
    ", we propose an efficient and scalable @xmath0 order stochastic gaussian backpropagation for variational inference called hfsgvi .",
    "alternately , l - bfgs @xcite version , a quasi - newton method merely using the gradient information , is a natural generalization of @xmath1 order variational inference .",
    "the most immediate application would be to look at obtaining better optimization algorithms for variational inference .",
    "as to our knowledge , the model currently applying @xmath0 order information is lda @xcite , where the hessian is easy to compute @xcite . in general , for non - linear factor models like non - linear factor analysis or the deep latent gaussian models this is not the case .",
    "indeed , to our knowledge , there has not been any systematic investigation into the properties of various optimization algorithms and how they might impact the solutions to optimization problem arising from variational approximations .",
    "the main contributions of this paper are to fill such gap for variational inference by introducing a novel @xmath0 order optimization scheme .",
    "first , we describe a clever approach to obtain curvature information with low computational cost , thus making the newton s method both scalable and efficient .",
    "second , we show that the variance of the lower bound estimator can be bounded by a dimension - free constant , extending the work of @xcite that discussed a specific bound for univariate function .",
    "third , we demonstrate the performance of our method for bayesian logistic regression and the vae model in comparison to commonly used algorithms .",
    "convergence rate is shown to be competitive or faster .",
    "in this section , we extend the bonnet and price theorem @xcite to develop @xmath0 order gaussian backpropagation .",
    "specifically , we consider how to optimize an expectation of the form @xmath2 $ ] , where @xmath3 and @xmath4 refer to latent variables and observed variables respectively , and expectation is taken w.r.t distribution @xmath5 and @xmath6 is some smooth loss function ( e.g. it can be derived from a standard variational lower bound @xcite ) .",
    "sometimes we abuse notation and refer to @xmath7 by omitting @xmath4 when no ambiguity exists . to optimize such expectation ,",
    "gradient decent methods require the @xmath1 derivatives , while newton s methods require both the gradients and hessian involving @xmath0 order derivatives .",
    "if the distribution @xmath8 is a @xmath9-dimensional gaussian @xmath10 , the required partial derivative is easily computed with a lower algorithmic cost @xmath11 @xcite . by using the property of gaussian distribution ( proof in supplementary )",
    ", we can compute the @xmath0 order partial derivative of @xmath12 $ ] as follows : @xmath13 & = & \\mathbb{e}_{\\mathcal{n } ( \\mathbf{z } | \\bm\\mu , \\mathbf{c } ) } [ \\nabla^2 _ { z_i , z_j } f(\\mathbf{z } ) ] = 2\\nabla _ { c_{ij } } \\mathbb{e}_{\\mathcal{n } ( \\mathbf{z } | \\bm\\mu , \\mathbf{c } ) } [ f(\\mathbf{z } ) ] , \\label{eq : mumu } \\\\",
    "\\nabla _ { c_{i , j } , c_{k , l } } ^2 \\mathbb{e}_{\\mathcal{n } ( \\mathbf{z } | \\bm\\mu , \\mathbf{c } ) } [ f(\\mathbf{z } ) ] & = & \\frac{1}{4 } \\mathbb{e}_{\\mathcal{n } ( \\mathbf{z } | \\bm\\mu , \\mathbf{c } ) } [ \\nabla^4 _ { z_i , z_j , z_k , z_l } f(\\mathbf{z } ) ] , \\label{eq : cc}\\\\   \\nabla_{\\mu_i , c_{k , l}}^2 \\mathbb{e}_{\\mathcal{n}(\\mathbf{z}|\\bm\\mu , \\mathbf{c } ) } [ f(\\mathbf{z } ) ] & = & \\frac{1}{2 } \\mathbb{e}_{\\mathcal{n}(\\mathbf{z}|\\bm\\mu , \\mathbf{c } ) } \\left [ \\nabla _ { z_i , z_k , z_l}^3 f(\\mathbf{z } ) \\right ] . \\label{eq : muc}\\end{aligned}\\ ] ] eq .",
    "( [ eq : mumu ] ) , ( [ eq : cc ] ) , ( [ eq : muc ] ) have the nice property that a limited number of samples from @xmath8 are sufficient to obtain unbiased gradient estimates",
    ". however , note that eq .",
    "( [ eq : cc ] ) , ( [ eq : muc ] ) needs to calculate the third and fourth derivatives of @xmath7 , which is highly computationally inefficient . to avoid the calculation of high order derivatives",
    ", we use a co - ordinate transformation .      by constructing the linear transformation ( a.k.a .",
    "reparameterization ) @xmath14 , where @xmath15 , we can generate samples from any gaussian distribution @xmath16 by simulating data from a standard normal distribution , provided the decomposition @xmath17 holds .",
    "this fact allows us to derive the following theorem indicating that the computation of @xmath0 order derivatives can be scalable and programmed to run in parallel .",
    "[ thm : gaussback ] if @xmath6 is a twice differentiable function and @xmath3 follows gaussian distribution @xmath16 , @xmath17 , where both the mean @xmath18 and @xmath19 depend on a @xmath20-dimensional parameter @xmath21 , i.e. @xmath22 , we have @xmath23 = \\mathbb{e } _ { \\bm\\epsilon\\sim\\mathcal{n}(0 , \\mathbf{i}_{d_z } ) } [ \\bm\\epsilon^\\top\\otimes\\mathbf{h}]$ ] , and @xmath24   =   \\mathbb{e } _ { \\bm\\epsilon\\sim\\mathcal{n}(0 , \\mathbf{i}_{d_z } ) } [ ( \\bm\\epsilon\\bm\\epsilon^t)\\otimes\\mathbf{h}]$ ] .",
    "this then implies @xmath25 & = & \\mathbb{e } _ { \\bm\\epsilon\\sim\\mathcal{n}(0 , \\mathbf{i } ) } \\left [ \\mathbf{g}^\\top \\frac { \\partial ( \\bm\\mu + \\mathbf{r}\\bm\\epsilon ) } { \\partial\\theta_l } \\right ] , \\label{eq : grad } \\\\ \\nabla_{\\theta_{l_1}\\theta_{l_2}}^2 \\mathbb{e } _ { \\mathcal{n}(\\bm\\mu , \\mathbf{c } _ ) } [ f(\\mathbf{z } ) ] & = & \\mathbb{e } _ { \\bm\\epsilon\\sim\\mathcal{n}(0 , \\mathbf{i } ) } \\left [ \\frac { \\partial ( \\bm\\mu + \\mathbf{r}\\bm\\epsilon ) } { \\partial\\theta_{l_1 } } ^\\top \\mathbf{h }   \\frac{\\partial ( \\bm\\mu + \\mathbf{r}\\bm\\epsilon)}{\\partial\\theta_{l_2 } } + \\mathbf{g}^\\top \\frac { \\partial^2 ( \\bm\\mu + \\mathbf{r}\\bm\\epsilon ) } { \\partial\\theta_{l_1}\\partial_{l_2 } } \\right ] ,   \\label{eq : hess}\\end{aligned}\\ ] ] where @xmath26 is kronecker product , and gradient @xmath27 , hessian @xmath28 are evaluated at @xmath29 in terms of @xmath7 .",
    "if we consider the mean and covariance matrix as the variational parameters in variational inference , the first two results w.r.t @xmath30 make parallelization possible , and reduce computational cost of the hessian - vector multiplication due to the fact that @xmath31 .",
    "if the model has few parameters or a large resource budget ( e.g. gpu ) is allowed , theorem [ thm : gaussback ] launches the foundation for exact @xmath0 order derivative computation in parallel .",
    "in addition , note that the @xmath0 order gradient computation on model parameter @xmath32 only involves matrix - vector or vector - vector multiplication , thus leading to an algorithmic complexity that is @xmath11 for @xmath0 order derivative of @xmath32 , which is the same as @xmath1 order gradient @xcite .",
    "the derivative computation at function @xmath6 is up to @xmath0 order , avoiding to calculate @xmath33 or @xmath34 order derivatives .",
    "one practical parametrization assumes a diagonal covariance matrix @xmath35 .",
    "this reduces the actual computational cost compared with theorem [ thm : gaussback ] , albeit the same order of the complexity ( @xmath11 ) ( see supplementary material ) .",
    "theorem [ thm : gaussback ] holds for a large class of distributions in addition to gaussian distributions , such as student @xmath36-distribution .",
    "if the dimensionality @xmath20 of embedded parameter @xmath32 is large , computation of the gradient @xmath37 and hessian @xmath38 ( differ from @xmath27 , @xmath28 above ) will be linear and quadratic w.r.t @xmath20 , which may be unacceptable .",
    "therefore , in the next section we attempt to reduce the computational complexity w.r.t @xmath20 .      in standard newton s method , we need to compute the hessian matrix and its inverse , which is intractable for limited computing resources .",
    "@xcite applied hessian - free ( hf ) optimization method in deep learning effectively and efficiently .",
    "this work largely relied on the technique of fast hessian matrix - vector multiplication @xcite .",
    "we combine reparameterization trick with hessian - free or quasi - newton to circumvent matrix inverse problem .",
    "* hessian - free * unlike quasi - newton methods hf does nt make any approximation on the hessian .",
    "hf needs to compute @xmath39 , where @xmath40 is any vector that has the matched dimension to @xmath38 , and then uses conjugate gradient algorithm to solve the linear system @xmath41 , for any objective function @xmath42 .",
    "@xcite gives a reasonable explanation for hessian free optimization .",
    "in short , unlike a pre - training method that places the parameters in a search region to regularize@xcite , hf solves issues of pathological curvature in the objective by taking the advantage of rescaling property of newton s method . by definition @xmath43 indicating that @xmath39 can be numerically computed by using finite differences at @xmath44 .",
    "however , this numerical method is unstable for small @xmath44 .    in this section ,",
    "we focus on the calculation of @xmath39 by leveraging a reparameterization trick .",
    "specifically , we apply an @xmath45-operator technique @xcite for computing the product @xmath39 exactly .",
    "let @xmath46 $ ] and reparametrize @xmath3 again as sec .",
    "[ sec : repara ] , we do variable substitution @xmath47 after gradient eq .",
    "( [ eq : grad ] ) is obtained , and then take derivative on @xmath44 .",
    "thus we have the following analytical expression for hessian - vector multiplication : @xmath48 \\right|_{\\gamma = 0 } \\nonumber \\\\ & = &   \\left .",
    "\\mathbb{e}_{\\mathcal{n}(0 , \\mathbf{i } ) } \\left [ \\frac{\\partial}{\\partial \\gamma } \\left ( \\mathbf{g}^\\top   \\left . \\frac { \\partial \\left ( \\bm\\mu(\\bm\\theta ) + \\mathbf{r}(\\bm\\theta)\\bm\\epsilon \\right ) } { \\partial\\bm\\theta } \\right|_{\\bm\\theta\\leftarrow \\bm\\theta+ \\gamma\\mathbf{v } } \\right)\\right ] \\right|_{\\gamma = 0 } .\\end{aligned}\\ ] ] eq .",
    "( [ eq : hv ] ) is appealing since it does not need to store the dense matrix and provides an unbiased @xmath39 estimator with a small sample size . in order to conduct the @xmath0 order optimization for variational inference , if the computation of the gradient for variational lower bound is completed , we only need to add one extra step for gradient evaluation via eq .",
    "( [ eq : hv ] ) which has the same computational complexity as eq .",
    "( [ eq : grad ] ) .",
    "this leads to a hessian - free variational inference method described in algorithm [ alg : secondorder ] .",
    "for the worst case of hf , the conjugate gradient ( cg ) algorithm requires at most @xmath20 iterations to terminate , meaning that it requires @xmath20 evaluations of @xmath39 product .",
    "however , the good news is that cg leads to good convergence after a reasonable number of iterations . in practice we found that it may not necessary to wait cg to converge .",
    "in other words , even if we set the maximum iteration @xmath49 in cg to a small fixed number ( e.g. , 10 in our experiments , though with thousands of parameters ) , the performance does not deteriorate .",
    "the early stoping strategy may have the similar effect of wolfe condition to avoid excessive step size in newton s method .",
    "therefore we successfully reduce the complexity of each iteration to @xmath50 , whereas @xmath51 is for one sgd iteration .",
    "* l - bfgs * limited memory bfgs utilizes the information gleaned from the gradient vector to approximate the hessian matrix without explicit computation , and we can readily utilize it within our framework .",
    "the basic idea of bfgs approximates hessian by an iterative algorithm @xmath52 , where @xmath53 and @xmath54 . by eq .",
    "( [ eq : grad ] ) , the gradient @xmath55 at each iteration can be obtained without any difficulty . however , even if this low rank approximation to the hessian is easy to invert analytically due to the sherman - morrison formula , we still need to store the matrix .",
    "l - bfgs will further implicitly approximate this dense @xmath56 or @xmath57 by tracking only a few gradient vectors and a short history of parameters and therefore has a linear memory requirement .",
    "in general , l - bfgs can perform a sequence of inner products with the @xmath49 most recent @xmath58 and @xmath59 , where @xmath49 is a predefined constant ( 10 or 15 in our experiments ) . due to the space limitations , we omit the details here but none - the - less will present this algorithm in experiments section .",
    "minibatch size @xmath60 ,  number of samples to estimate the expectation @xmath61 ( @xmath62 as default ) , +    observation @xmath63 ( and @xmath64 if required ) , lower bound function @xmath65 $ ] parameter @xmath32 after having converged .",
    "@xmath66 randomly draw @xmath60 datapoints from full data set @xmath63 ; @xmath67 sample @xmath61 times from @xmath68 for each @xmath69 ; define gradient @xmath70 , @xmath71 ; define function @xmath72 , where @xmath40 is a @xmath20-dimensional vector ; using conjugate gradient algorithm to solve linear system : @xmath73 ; @xmath74 ;      the framework of stochastic backpropagation @xcite extensively uses the mean of very few samples ( often just one ) to approximate the expectation .",
    "similarly we approximate the left side of eq .",
    "( [ eq : grad ] ) , ( [ eq : hess ] ) , ( [ eq : hv ] ) by sampling few points from the standard normal distribution .",
    "however , the magnitude of the variance of such an estimator is not seriously discussed .",
    "@xcite simply explored the variance quantitatively for separable functions.@xcite merely borrowed the variance reduction technique from reinforcement learning by centering the learning signal in expectation and performing variance normalization . here",
    ", we will generalize the treatment of variance to a broader family , lipschitz continuous function .",
    "[ thm : var ] if @xmath6 is an @xmath75-lipschitz differentiable function and @xmath76 , then @xmath77)^2 ] \\leq \\frac{l^2\\pi^2}{4 } .$ ]    the proof of theorem [ thm : var ] ( see supplementary ) employs the properties of sub - gaussian distributions and the duplication trick that are commonly used in learning theory .",
    "significantly , the result implies a variance bound independent of the dimensionality of gaussian variable .",
    "note that from the proof , we can only obtain the @xmath78)}\\right]\\leq e^{l^2\\lambda^2\\pi^2/8}$ ] for @xmath79 .",
    "though this result is enough to illustrate the variance independence of @xmath9 , we can in fact tighten it to a sharper upper bound by a constant scalar , i.e. @xmath80 , thus leading to the result of theorem [ thm : var ] with @xmath81 .",
    "if all the results above hold for smooth ( twice continuous and differentiable ) functions with lipschitz constant @xmath75 then it holds for all lipschitz functions by a standard approximation argument .",
    "this means the condition can be relaxed to lipschitz continuous function .",
    "it is also worth mentioning a significant corollary ( see supplementary ) of theorem [ thm : var ] is probabilistic inequality @xmath82\\right|\\geq t\\right)\\leq",
    "2e^{-\\frac{2mt^2}{\\pi^2l^2}}$ ] .",
    "this tail bound , together with variance bound , provides the theoretical guarantee for stochastic backpropagation on gaussian variables and provides an explanation for why a unique realization ( @xmath83 ) is enough in practice . by reparametrization ,",
    "( [ eq : grad ] ) , ( [ eq : hess ] , ( [ eq : hv ] ) can be formulated as the expectation w.r.t the isotropic gaussian distribution with identity covariance matrix leading to algorithm [ alg : secondorder ] .",
    "thus we can rein in the number of samples for monte carlo integration regardless dimensionality of latent variables @xmath3 .",
    "this seems counter - intuitive .",
    "however , we notice that larger @xmath75 may require more samples , and lipschitz constants of different models vary greatly .",
    "note that our method is model free .",
    "if the loss function has the form of the expectation of a function w.r.t latent gaussian variables , we can directly use algorithm [ alg : secondorder ] . in this section",
    ", we put the emphasis on a standard framework vae model @xcite that has been intensively researched .",
    "suppose we have @xmath84 i.i.d .",
    "observations @xmath85 , where @xmath86 is a data vector that can take either continuous or discrete values .",
    "in contrast to a standard auto - encoder model constructed by a neural network with a bottleneck structure , vae describes the embedding process from the prospective of a gaussian latent variable model .",
    "specifically , each data point @xmath4 follows a generative model @xmath87 , where this process is actually a decoder that is usually constructed by a non - linear transformation with unknown parameters @xmath88 and a prior distribution @xmath89 .",
    "the encoder or recognition model @xmath90 is used to approximate the true posterior @xmath91 , where @xmath92 is similar to the parameter of variational distribution . as suggested in @xcite , multi - layered perceptron ( mlp )",
    "is commonly considered as both the probabilistic encoder and decoder .",
    "we will later see that this construction is equivalent to a variant deep neural networks under the constrain of unique realization for @xmath3 . for this model and each datapoint ,",
    "the variational lower bound on the marginal likelihood is , @xmath93 - d_{kl } ( q_{\\bm\\phi}(\\mathbf{z}|\\mathbf{x}^{(i ) } ) \\| p_{\\bm\\psi}(\\mathbf{z } ) ) = \\mathcal{l}(\\mathbf{x}^{(i ) } ) .\\end{aligned}\\ ] ]    we can actually write the kl divergence into the expectation term and denote @xmath94 as @xmath32 . by the previous discussion",
    ", this means that our objective is to solve the optimization problem @xmath95 of full dataset variational lower bound .",
    "thus l - bfgs or hf sgvi algorithm can be implemented straightforwardly to estimate the parameters of both generative and recognition models . since the first term of reconstruction error appears in eq .",
    "( [ eq : lb ] ) with an expectation form on latent variable , @xcite used a small finite number @xmath61 samples as monte carlo integration with reparametrization trick to reduce the variance .",
    "this is , in fact , drawing samples from the standard normal distribution .",
    "in addition , the second term is the kl divergence between the variational distribution and the prior distribution , which acts as a regularizer .      in the experiments , setting @xmath83",
    "can not only achieve excellent performance but also speed up the program . in this special case",
    ", we discuss the relationship between vae and traditional deep auto - encoder . for binary inputs , denote the output as @xmath96 , we have @xmath97 , which is exactly the negative cross - entropy .",
    "it is also apparent that @xmath98 is equivalent to negative squared error loss for continuous data .",
    "this means that maximizing the lower bound is roughly equal to minimizing the loss function of a deep neural network ( see figure 1 in supplementary ) , except for different regularizers . in other words , the prior in vae only imposes a regularizer in encoder or generative model , while @xmath99 penalty for all parameters is always considered in deep neural nets .",
    "from the perspective of deep neural networks with hybrid hidden nodes , the model consists of two bernoulli layers and one gaussian layer .",
    "the gradient computation can simply follow a variant of backpropagation layer by layer ( derivation given in supplementary ) . to further see the rationale of setting @xmath83",
    ", we will investigate the upper bound of the lipschitz constant under various activation functions in the next lemma .",
    "as theorem [ thm : var ] implies , the variance of approximate expectation by finite samples mainly relies on the lipschitz constant , rather than dimensionality .",
    "according to lemma [ lem : lc ] , imposing a prior or regularization to the parameter can control both the model complexity and function smoothness .",
    "lemma [ lem : lc ] also implies that we can get the upper bound of the lipschitz constant for the designed estimators in our algorithm .",
    "[ lem : lc ] for a sigmoid activation function @xmath100 in deep neural networks with one gaussian layer @xmath3 , @xmath101 .",
    "let @xmath102 , then the lipschitz constant of @xmath103 is bounded by @xmath104 , where @xmath105 is @xmath106th row of weight matrix and @xmath107 is the @xmath106th element bias . similarly , for hyperbolic tangent or softplus function , the lipschitz constant is bounded by @xmath108 .",
    "we apply our @xmath0 order stochastic variational inference to two different non - conjugate models .",
    "first , we consider a simple but widely used bayesian logistic regression model , and compare with the most recent @xmath1 order algorithm , doubly stochastic variational inference ( dsvi ) @xcite , designed for sparse variable selection with logistic regression .",
    "then , we compare the vae model with our algorithms .",
    "all the experiments are conducted on a 3.2ghz cpu computer with x - intel 32 g ram . for fair comparison , the algorithms and datasets we referred to as the baseline remain the same as in the previously cited work and software was downloaded from the website of relevant papers .      given a dataset @xmath109 , where each instance @xmath110 includes",
    "the default feature 1 and @xmath111 is the binary label , the bayesian logistic regression models the probability of outputs conditional on features and the coefficients @xmath112 with an imposed prior .",
    "the likelihood and the prior can usually take the form as @xmath113 and @xmath114 respectively , where @xmath100 is sigmoid function and @xmath115 is a diagonal covariance matrix for simplicity .",
    "we can propose a variational gaussian distribution @xmath116 to approximate the posterior of regression parameter . if we further assume a diagonal @xmath117 , a factorized form @xmath118 is both efficient and practical for inference .",
    "unlike iteratively optimizing @xmath115 and @xmath119 as in variational em , @xcite noticed that the calculation of the gradient w.r.t the lower bound indicates the updates of @xmath115 can be analytically worked out by variational parameters , thus resulting a new objective function for the representation of lower bound that only relies on @xmath119 ( details refer to @xcite ) .",
    "we apply our algorithm to this variational logistic regression on three appropriate datasets : ` dukebreast ` and ` leukemia ` are small size but high - dimensional for sparse logistic regression , and ` a9a ` which is large .",
    "see table [ tab : error ] for additional dataset descriptions .",
    "[ fig : logreg ] shows the convergence of gaussian variational lower bound for bayesian logistic regression in terms of running time .",
    "it is worth mentioning that the lower bound of hfsgvi converges within 3 iterations on the small datasets ` dukebreast ` and ` leukemia ` .",
    "this is because all data points are fed to all algorithms and the hfsgvi uses a better approximation of the hessian matrix to proceed @xmath0 order optimization .",
    "l - bfgs - sgvi also take less time to converge and yield slightly larger lower bound than dsvi . in addition , as an sgd - based algorithm , it is clearly seen that dsvi is less stable for small datasets and fluctuates strongly even at the later optimized stage .",
    "for the large ` a9a ` , we observe that hfsgvi also needs 1000 iterations to reach a good lower bound and becomes less stable than the other two algorithms .",
    "however , l - bfgs - sgvi performs the best both in terms of convergence rate and the final lower bound . the misclassification report in table [ tab : error ]",
    "reflects the similar advantages of our approach , indicating a competitive predication ability on various datasets .",
    "finally , it is worth mentioning that all three algorithms learn a set of very sparse regression coefficients on the three datasets ( see supplement for additional visualizations ) .",
    ".comparison on misclassification [ cols=\"^,^,^,^,^,^,^ \" , ]     [ tab : error ]    [ fig : logreg ]      we also apply the @xmath0 order stochastic variational inference to train a vae model ( setting @xmath83 for monte carlo integration to estimate expectation ) or the equivalent deep neural networks with hybrid hidden layers .",
    "the datasets we used are images from the frey face , olivetti face and mnist .",
    "we mainly learned three tasks by maximizing the variational lower bound : parameter estimation , images reconstruction and images generation .",
    "meanwhile , we compared the convergence rate ( running time ) of three algorithms , where in this section the compared sgd is the ada version @xcite that is recommended for vae model in @xcite .",
    "the experimental setting is as follows .",
    "the initial weights are randomly drawn from @xmath120 or @xmath121 , while all bias terms are initialized as 0 .",
    "the variational lower bound only introduces the regularization on the encoder parameters , so we add an @xmath99 regularizer on decoder parameters with a shrinkage parameter @xmath122 or @xmath123 .",
    "the number of hidden nodes for encoder and decoder is the same for all auto - encoder model , which is reasonable and convenient to construct a symmetric structure . the number is always tuned from 200 to 800 with 100 increment .",
    "the mini - batch size is 100 for l - bfgs and ada , while larger mini - batch is recommended for hf , meaning it should vary according to the training size .",
    "the detailed results are shown in fig .",
    "[ fig : freyface ] and [ fig : other ] . both hessian - free and l - bfgs converge faster than ada in terms of running time .",
    "hfsgvi also performs competitively with respet to generalization on testing data .",
    "ada takes at least four times as long to achieve similar lower bound .",
    "theoretically , newton s method has a quadratic convergence rate in terms of iteration , but with a cubic algorithmic complexity at each iteration .",
    "however , we manage to lower the computation in each iteration to linear complexity . thus considering the number of evaluated training data points ,",
    "the @xmath0 order algorithm needs much fewer step than @xmath1 order gradient descent ( see visualization in supplementary on mnist ) .",
    "the hessian matrix also replaces manually tuned learning rates , and the affine invariant property allows for automatic learning rate adjustment .",
    "technically , if the program can run in parallel with gpu , the speed advantages of @xmath0 order algorithm should be more obvious @xcite .",
    "[ fig : freyface](b ) and fig .",
    "[ fig : other](b ) are reconstruction results of input images .",
    "from the perspective of deep neural network , the only difference is the gaussian distributed latent variables @xmath3 . by corollary of theorem [ thm : var ]",
    ", we can roughly tell the mean @xmath18 is able to represent the quantity of @xmath3 , meaning this layer is actually a linear transformation with noise , which looks like dropout training @xcite .",
    "specifically , olivetti includes 64@xmath12464 pixels faces of various persons , which means more complicated models or preprocessing @xcite ( e.g. nearest neighbor interpolation , patch sampling ) is needed .",
    "however , even when simply learning a very bottlenecked auto - encoder , our approach can achieve acceptable results . note that although we have tuned the hyperparameters of ada by cross - validation , the best result is still a bunch of mean faces .",
    "for manifold learning , fig .",
    "[ fig : freyface](c ) represents how the learned generative model can simulate the images by hfsgvi . to visualize the results , we choose the 2d latent variable @xmath3 in @xmath87 , where the parameter @xmath88 is estimated by the algorithm .",
    "the two coordinates of @xmath3 take values that were transformed through the inverse cdf of the gaussian distribution from equal distance grid ( 10@xmath12410 or 20@xmath12420 ) on the unit square .",
    "then we merely use the generative model to simulate the images . besides these learning tasks , denoising , imputation @xcite and even generalizing to semi - supervised learning @xcite are possible application of our approach .",
    "[ fig : freyface ]    [ fig : other ]",
    "in this paper we proposed a scalable @xmath0 order stochastic variational method for generative models with continuous latent variables . by developing gaussian backpropagation through reparametrization we introduced an efficient unbiased estimator for higher order gradients information . combining with the efficient technique for computing hessian - vector multiplication , we derived an efficient inference algorithm ( hfsgvi ) that allows for joint optimization of all parameters .",
    "the algorithmic complexity of each parameter update is quadratic w.r.t the dimension of latent variables for both @xmath1 and @xmath0 derivatives .",
    "furthermore , the overall computational complexity of our @xmath0 order sgvi is linear w.r.t the number of parameters in real applications just like sgd or ada .",
    "however , hfsgvi may not behave as fast as ada in some situations , e.g. , when the pixel values of images are sparse .",
    "future research will focus on some difficult deep models such as lstm @xcite or rnns @xcite . because our experiments had higher training variational lower bounds",
    ", we infer that our @xmath0 order algorithms may be capable of addressing the under - fitting problem in stochastic rnn@xcite .",
    "another possible area of future research will be reinforcement learning ( rl ) @xcite .",
    "many rl problems can be reduced to how to compute gradients of expectations ( e.g. , in policy gradient methods ) and there has been series of exploration in this area for natural gradients .",
    "however , we would suggest that it might be interesting to consider where stochastic backpropagation fits in our framework and how @xmath0 order computations can help ."
  ],
  "abstract_text": [
    "<S> we propose a second - order ( hessian or hessian - free ) based optimization method for variational inference inspired by gaussian backpropagation , and argue that quasi - newton optimization can be developed as well . </S>",
    "<S> this is accomplished by generalizing the gradient computation in stochastic backpropagation via a reparametrization trick with lower complexity . as an illustrative example </S>",
    "<S> , we apply this approach to the problems of bayesian logistic regression and variational auto - encoder ( vae ) . </S>",
    "<S> additionally , we compute bounds on the estimator variance of intractable expectations for the family of lipschitz continuous function . our method is practical , scalable and model free . </S>",
    "<S> we demonstrate our method on several real - world datasets and provide comparisons with other stochastic gradient methods to show substantial enhancement in convergence rates . </S>"
  ]
}
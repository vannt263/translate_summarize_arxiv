{
  "article_text": [
    "the general relativity theory defines the physical spacetime as a differentiable pseudo - riemmanian 4-dimensional manifold ( hawking & ellis , 1973 ) .",
    "the spacetime is seen through the _ intrinsic _ geometry .",
    "however , many interesting results have shown that the _ extrinsic _ geometry gives sometimes a better understanding of the physical structure of the spacetime .",
    "as an example of its growing interest we can cite the recent studies of gravity theories in more than four dimensions and the study of the geometry of extended objects as in string and membrane theories .",
    "in contrast to general relativity , where the metric uniquely specifies the geometry , to describe a spacetime locally and isometrically embedded in a pseudo - euclidean manifold with dimension @xmath2 , two new quantities have to be considered : the _ second fundamental form _ and the _ torsion _ vector ( or the third fundamental form ) .",
    "these two quantities are well known in the study of differentiable manifolds ( eisenhart , 1946 ) and come out from the gauss - codazzi - ricci equations , which are the integrability conditions for the existence of the embedding ( maia , 1986 ) .",
    "rigorously it is not necessary to know the embedding to obtain the second fundamental form and the torsion vector . both can be obtained directly through the field equations ( maia & roque , 1989 ) which are highly non - linear parcial differential equations in the 4 spacetime coordinates . however , if we know the embedding _ a priori _ , to determine these two quantities we need to get first the set of vectors normal to the spacetime v@xmath0 .    in this paper",
    "we will be concerned with the discussion of an algorithm which helps to determine these vectors from the embedding coordinates and then to find out the second fundamental form and the torsion vector .",
    "the following section sets up the main equations that rule the embedding theory . in section 3 the algorithm for determining the vectors normal to the spacetime v@xmath0 is described .",
    "this algorithm has been implemented in the algebraic computing system reduce and its application is done in section 4 for the case of schwarzchild embedding . some comments and remarks on an extension of this algorithm to select and determine the rank of any @xmath3 matrix",
    "are left to section 5 of the paper .",
    "a local embedding of a spacetime v@xmath0 in a pseudo - euclidean m@xmath1 manifold is done when a set of cartesian coordinates @xmath4 is specified as functions of the spacetime coordinates @xmath5 ( greek indices run from 1 to @xmath6 , lowercase latin letters run from 1 to 4 and capital latin letters run from 5 to @xmath6 ) . at any point of the manifold we can find a set of n vector fields @xmath7 orthogonal to v@xmath0 and to themselves .",
    "thus if @xmath8 denotes the cartesian components of the metric of m@xmath1 , then the following set of equations are valid to to to    where @xmath9 is the spacetime metric , @xmath10 , @xmath11 , depending on the signature of @xmath12 , @xmath13 are the components of the tangent vectors to v@xmath0 ( partial derivatives with respect to spacetime coordinates are indicated by a comma , as usual ) and @xmath14 is a constant .",
    "the second fundamental form and the torsion vector are given , respectively , by to to    in a matricial form the set of equations ( 1.b ) can be written as @xmath15 where * s * is the @xmath16 matrix formed by the components of the tangent vectors to v@xmath0 multiplied by the metric components of m@xmath1 and * y*@xmath17 is the column matrix @xmath18 formed by the components of the vectors @xmath7 .",
    "the homogeneous system described by equation ( 3 ) can be solved ( for the non - trivial solution ) by taking into account pure algebraic considerations : we need to find a square submatrix of * s * of order @xmath19 that is invertible .",
    "that is always possible as the rows of the matrix * s * are exactly the components of the vectors that generates the tangent space of the spacetime .",
    "thus , they are linearly independent . therefore from linear algebra we know that there exist a submatrix @xmath20 of * s * that is non - singular .",
    "let * p * be a @xmath19 submatrix of * s * that is invertible and * q * the matrix formed from * s * taking out the elements of * p*. * q * is a @xmath21 matrix .",
    "the system ( 3 ) can be written in the equivalent form @xmath22 where @xmath23 are the components of @xmath24 associated to the invertible submatrix and @xmath25 the components of @xmath26 associated to the remaining columns .",
    "thus , from ( 4 ) we have that @xmath27 which allows us to write , @xmath28    taking into account the above definitions we write in the following section an algorithm to determine these quantities explicitly .",
    "algorithm a    given the set of @xmath6 cartesian coordinates @xmath29 as a @xmath30 column matrix and the metric tensor @xmath31 as a @xmath32 square matrix , compute the * s * matrix as @xmath33 .    using the algorithm b , decompose * s * and @xmath26 matrices in submatrices * p * , * q * , @xmath23 and @xmath34 such that @xmath35 and such that @xmath23 contains the components of @xmath7 corresponding to * p * and @xmath36 those corresponding to * q*.    substitute * p * , * q * , @xmath23 and @xmath36 in @xmath37 , obtaining a system of four linear equations in those components of @xmath7 corresponding to * p*.    solve that system of equations for the four components of each @xmath7 in @xmath23 in terms of the @xmath38 others .    * for * @xmath39 * do * * for * @xmath40 * do *    substitute the expressions for @xmath7 in @xmath41 obtaining a non - linear equation in the components of @xmath7 corresponding to * q*.    solve this equation for one of the remaining components of @xmath7 in terms of the others .",
    "return this solution to the next equation generated in step a5a . at the end of loop",
    "@xmath42 components of @xmath7 will remaing arbitrary . *",
    "endfor *    compute the second fundamental form and the torsion vector from eqns .",
    "( 2.a ) and ( 2.b ) .",
    "* stop *    algorithm b    ( inicialization ) @xmath43 ( @xmath44 points to a candidate to be the first column of * p * ( or @xmath45 ) ) .    *",
    "while * @xmath46 * and * @xmath47 can result an expression that can be zero or not depending of physical informations unavaliable to reduce . in this case , if it is not immediatly zero , the actual program could ask the user if it should be taken as zero by use of the internal ( symbolic ) procedure yesp . ] * do *    * begin * @xmath48 ( @xmath49 points to a candidate to be the second column of * p * ( or @xmath45 ) .    * while * @xmath50 * and * @xmath47 * do *    * begin * @xmath51 ( @xmath52 points to a candidate to be the third column of * p * ( or @xmath45 ) .    * while * @xmath53 * and * @xmath47 * do *    * begin * @xmath54 ( @xmath55 points to a candidate to be the fourth column of * p * ( or @xmath45 ) .    * while * @xmath56 * and * @xmath47 * do *    * begin * @xmath57 , @xmath58 ( @xmath59 points to a column of * s * ( or * y * ) , @xmath14 to a column of * q * ( or @xmath60 ) ) .    * repeat *    * begin * * if * @xmath61 * then * store the column of * s * pointed by @xmath59 as the first column of @xmath62 , the one of * y * as the first of @xmath45 * else *    * if * @xmath63 * then * store the column of * s * pointed by @xmath59 as the second column of @xmath62 , the one of * y * as the second of @xmath45 * else *    * if * @xmath64 * then * store the column of * s * pointed by @xmath59 as the third column of @xmath62 , the one of * y * as the third of @xmath45 * else *    * if * @xmath65 * then * store the column of * s * pointed by @xmath59 as the fourth column of @xmath62 , the one of * y * as the fourth of @xmath45 * else *    store the column of * s * pointed by @xmath59 as the @xmath14-th column of @xmath66 , the one of * y * as the @xmath14-th column of @xmath60 and @xmath67 * endif*.    @xmath68 * end *    * until * @xmath69 * endrepeat*.    @xmath70 * endwhile *    @xmath71 * endwhile *    @xmath72 * endwhile *    @xmath73 * endwhile*.    * return * @xmath62 , @xmath66 , @xmath45 , and @xmath60",
    ".    the termination of the algorithm at step b3 is guaranteed by the existence of the non - singular submatrix *",
    "p*.    the algorithm above has been implemented in the algebraic computing system reduce ( hearn , 1986 ; rayna , 1987 ; stauffer et .",
    "al . , 1988 ) making use of its matrix facilities ( see davenport et .",
    "al . , ( 1988 ) , for a good introduction to matrix representation in computer algebra ) .",
    "however , for shortage of space , we left the program out of the paper .",
    "in the specific case of schwarzchild spacetime the embedding ( rosen , 1965 ) is done in a 6-dimensional pseudo - euclidean manifold ( @xmath74 ) with metric @xmath75 .",
    "the schwarzchild embedding is given by the coordinates , @xmath76 where @xmath77 , @xmath78 is a well defined function of @xmath79 , and @xmath79 , @xmath80 , @xmath81 , and @xmath82 denote the spacetime coordinates . the four vectors tangent to v@xmath0",
    "are determined taking the derivative of the coordinates @xmath4 with respect to each one of the spacetime coordinates .",
    "we denote by @xmath83 , @xmath84 the components of the normal vectors with @xmath85 , respectively . to determine these vectors the following conditions have to be considered : i ) the orthogonality of the normal vectors with respect to the tangent vectors ( eq .",
    "1.b ) ( from this we obtain a set of 8 equations ) and ii ) orthonormality of the normal vectors ( eq .",
    "1.c)(from this we get 3 equations ) .    out of a total of 11 equations we have now to determine the 6 components of the two vectors @xmath86 e @xmath87 .",
    "we have a set of 11 equations for 12 unknowns .",
    "notice that our unknowns are functions of the spacetime coordinates .    according to the algorithm ( and program ) developed in the previous section",
    ", we just need to set @xmath74 and ask reduce to calculate the matrix * s * ( step a1 ) . after some algebraic manipulation we obtain for the schwarzchild spacetime embedding the normal vectors , @xmath88 where @xmath89 , @xmath90 and @xmath91 .",
    "it is easy now to calculate with reduce ( but tedious by hand ) the _ second fundamental form _ and the _ torsion _ vector , from the eqs.(2.a and 2.b - step a6 ) : @xmath92,@xmath93 , @xmath94 , @xmath95 , @xmath96 , @xmath97 , @xmath98 .",
    "the geometrical and physical analysis of these quantities are not the main concern of this paper .",
    "however it is important to point out that geometrically the second fundamental form and the torsion vector are fundamental quantities as they determine , together with the metric , the structure of the embedding manifold and physically if general relativity has to be considered as part of a more general theory of embedded manifolds then , besides the metric which represents the classical gravitation , these two quantities have also to be considered : the second fundamental form may be interpreted as the source of the matter fields and the torsion vector may represent a yang - mills gauge field ( see maia , 1986 , for details ) .",
    "the calculations were initially done in interactive form with the version 3.2 of reduce running in an ibm pc - xt and later on ( by demand ) in a microvax running vms .",
    "finally we coded a fairly general program for the 3.3 version of reduce requiring only as input the number of extra dimensions @xmath38 , the set of cartesian coordinates @xmath4 , and the metric @xmath99 of the embedding manifold @xmath12 .    the available physical memory of the pc ( 640 kb , but less",
    "when the system is loaded ) is a great limiting factor for the execution of calculus with more general functions and/or higher dimensions ( this would involve matrices with order greater then @xmath100 ) . to circumvent the very often problem of free storage cell explosion in the pc , we had to make the trick of using the output of the results as input for the following steps .",
    "though this initial limitation at the pc , the problem above would have been far more difficult to solve with paper and pencil than with the interactive use of reduce .",
    "the algorithm developed here can be extended to determine all non - singular submatrices of a given matrix determining , in addition , its rank matrix , the number of submatrices of order @xmath101 of * a * is given by @xmath102 , where @xmath103 and @xmath104 . ] .",
    "thus it can also be used to establish the existence and type of solution of a system of linear equations by the simple analysis of its coefficients matrix and extended matrix ranks , for either symbolic ( functions ) or numeric matrix entries , as the manipulation is purely algebraic .",
    "w.l.roque is grateful to the cnpq for financial support through a research grant .",
    "davenport , j. h. , siret , y. , tournier , e. ( 1988 ) .",
    "_ computer algebra : systems and algorithms for algebraic computation_. academic press ."
  ],
  "abstract_text": [
    "<S> in this paper we describe an algorithm to determine the vectors normal to a space - time v@xmath0 embedded in a pseudo - euclidean manifold m@xmath1 . </S>",
    "<S> an application of this algorithm is given considering the schwarzchild spacetime geometry embedded in a 6 dimensional pseudo - euclidean manifold , using the algebraic computing system reduce . </S>"
  ]
}
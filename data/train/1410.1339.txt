{
  "article_text": [
    "in static timing analysis , hold and setup time violations have to be validated . for a combinational circuit ,",
    "setup time of the flip - flop puts the constraint on upper limit of the delay while hold time puts a constraint on lower limit .",
    "this makes accurate estimation of data - path delay necessary .",
    "there are various ways to estimate this data - path delay but lut based delay estimation is fastest one .",
    "an lut holds delay values of a circuit at various corners of input rise time(@xmath3 ) is input rise time from 20% to 80% of transition and @xmath3 is with respect to 0 to 100% of transition . ] and output load ( @xmath4 ) . for different type of standard gate like nand , nor ,",
    "not a different luts are characterized and this process is replicated at various process , supply voltage and temperature ( pvt ) corners . .",
    "these @xmath3 and @xmath4 points are chosen arbitrarily or at uniform intervals .",
    "each point requires an spice simulation .",
    "if multiplied for all values of @xmath3 and @xmath4 , it takes a huge amount of time .",
    "bulusu et al.[[bulusu ] ] used the fact that delay varies linearly up to some extent with @xmath3 and @xmath4 and could reduce the number of required simulations greatly .",
    "they exploited this linear variation by choosing simulation points of @xmath3 and @xmath4 only in non - linear region . thereby getting away with only two simulations point in linear region .    in this paper",
    ", we will summarize the linear delay model in section ii . in section iii",
    ", we will calculate @xmath1 for various @xmath4 , supply voltage ( @xmath5 ) , temperature and in section iv will verify these calculations using hspice simulation . finally in section",
    "v , we will give a model for @xmath1 that will enable us to extract out linear region at various voltage and temperature corners .",
    "this in turn will reduce number of required simulations at any pvt corner .",
    "for the not gate shown in the figure [ cmos_not ] delay ( between 50% input to 50% output ) can be written as        @xmath6    here we assume that when input reaches @xmath5 , @xmath7 drops a little and keeps nmos in saturation .",
    "nmos is also in saturation for time @xmath3 to @xmath8 .",
    "nmos falls into linear region from @xmath8 to @xmath9 .",
    "@xmath10 can be calculated by charge discharged during time @xmath11 to @xmath3 .",
    "@xmath12    @xmath13    where @xmath14    @xmath15\\ ] ]    @xmath16    where @xmath17\\ ] ]    @xmath18    @xmath19}{c_l+c_p}\\ ] ]    @xmath20 can be calculated by same method , but in this current will remain constant as @xmath21 is constant and is equal to @xmath5 .",
    "@xmath22 ( c_l+c_p ) = \\int^{t_r+\\delta{}t_1}_{t_r}i_{const}.dt\\ ] ]    where @xmath23    since i is constant , integration simplifies as @xmath24 ( c_l+c_p ) \\nonumber \\\\   = 0.5 \\mu_nc_{ox}\\frac{w}{l}(v_{dd}-v_{th})^2 \\delta{}t_1\\end{aligned}\\ ] ]    @xmath25    similarly we can calculate @xmath26 , when nmos is in linear region @xmath27    using equation [ delay_def ] , [ delta_t1 ] , [ delta_t2 ] we can write delay as    @xmath28    where    @xmath29}{0.5 \\mu_nc_{ox}\\frac{w}{l}(v_{dd}-v_{th})^2}]\\ ] ]    @xmath30\\ ] ]    @xmath31\\ ] ]    our initial assumption was of nmos being in saturation till time @xmath3 .",
    "for this assumption to be valid , @xmath10 should be greater than @xmath32 i.e.    @xmath33    @xmath34    @xmath35}\\ ] ]    @xmath36}\\ ] ]",
    "in this section we will mathematically analyze the behavior of @xmath1 with @xmath4 .",
    "@xmath36}\\ ] ]    @xmath1 is directly proportional to @xmath4 , so we can write @xmath1 as @xmath37    where @xmath38}\\ ] ]    and @xmath39}\\ ] ]    now to model the exact behavior of @xmath1 , we need to know the behavior of constants @xmath40 and @xmath41 with supply voltage @xmath5 and with chip temperature .      on simplifying equation [ m_1 ] and [ m_2 ] ,",
    "we get    @xmath42}\\ ] ]    that can be further approximated . since @xmath43",
    ", @xmath40 can be written as @xmath44}\\ ] ]    on further simplification @xmath45    so @xmath40 is inversely proportional to @xmath46 .    similarly @xmath41 can be characterized , as @xmath47      in the formula of @xmath40 in equation [ m_1 ] , parameters which are varying with temperature are mobility ( @xmath48 ) and threshold voltage ( @xmath49 ) .    for silicon , mobility of electrons",
    "@xmath48 varies with tempereture as follows [ [ mobility_wiki ] ] .",
    "@xmath50    similarly @xmath49 varies as -3mv/@xmath51c [ [ vth_wiki ] ] @xmath52    where @xmath53    combining equation [ [ m1_vdd ] , [ mob_temp ] , [ vth_temp ] ] , we see intuitively that while mobility increase @xmath40 and @xmath41 by a factor of @xmath54 , @xmath49 reduces it to some extent .",
    "so we can roughly write it as @xmath55",
    "we simulated cmos not gate of figure [ cmos_not ] using hspice at 45 nm technology node .",
    "we collected values of delay ( from 50% input to 50% output ) by varying input rise time ( @xmath3 ) from 1ps to 500ps at various load capacitances .",
    "figure [ delay_cl ] shows delay of not gate with respect to @xmath3 for various values of @xmath4 .     at various @xmath4 and their linear regions , width=307 ]    figure [ delay_cl ] verifies",
    "that delay varies linearly up to certain extent .",
    "we captured this extent ( @xmath1 ) and plot it with various values of @xmath4 .",
    "vs @xmath4 and a linear fit on it , width=307 ]    figure [ trb_cl ] verify our claims of equation [ trb_linear_cl ] where we predicated @xmath1 to vary linearly with @xmath4.we also plotted variations of @xmath1 with supply voltage ( @xmath5 ) .",
    "vs @xmath5 and a power function fit on it , width=307 ]    since @xmath40 [ eq . [ m1_vdd ] ] and @xmath41 [ eq . [ m2_vdd ] ] both were inversely proportional to @xmath46 , @xmath1 is also inversely proportional to @xmath46 . when we plotted simulation results of @xmath1 vs @xmath5 shown in figure [ trb_vdd ] , we observed that it is varying in the predicated way . by fitting power function",
    "we observed that it varies as @xmath56 , which is approximately equal to -2 .    in equation [ m1_temp ] , we proved that both @xmath40 and @xmath41 are proportional to @xmath57 . which implies same with @xmath1 .",
    "by plotting @xmath1 with temperature ( @xmath58 ) shown in figure [ trb_temp ] , we observed that @xmath1 varies almost similar to the mathematical prove with @xmath59 .",
    "vs @xmath60 and a power function fit on it , width=240 ]",
    "for not gate we have seen the behavior of @xmath1 with widths , temperature , supply voltage and load capacitance .      from equation [ m_1 ] , [ m_2 ]",
    "it is clear that slope of @xmath1 curve varies inversely with temperature while its intercept is constant . to model this",
    ", we will calculate two reference values of @xmath1 at cl1 and cl2 and then we will model these for different widths .",
    "@xmath62    @xmath63    @xmath64    @xmath65    so @xmath1 at any width can be written as    @xmath66      from equation [ m1_temp ] , it is clear that both slope and intercept varies in accordance with square of temperature .",
    "so @xmath1 can be generalize as follow .",
    "@xmath67      from equation [ m1_vdd ] , it is clear that both slope and intercept varies in accordance with inverse square of supply voltage .",
    "so @xmath1 can be generalize as follow .",
    "@xmath68 \\end{aligned}\\ ] ]      from equation [ m1_vdd ] , it is clear that both slope and intercept varies linearly with technology node .",
    "so @xmath1 can be generalize as follow .",
    "@xmath69\\end{aligned}\\ ] ]",
    "in previous sections we captured how @xmath1 behaves with output load @xmath4 , supply voltage @xmath5 and on chip temperature variations . this formula tells that if we have @xmath1 value at one corner , we can calculate its value at other node very easily .",
    "this approach will help us in determining linear region of delay curve at any @xmath4 , @xmath5 and temperature value .",
    "for lut characterization , we will store the value of @xmath1 for two different corners and will calculate subsequent @xmath1 using @xmath1 model developed in previous sections . to get a feel of this , we can consider characterization of a look up table for not gate between @xmath3 range 1ps to 100ps and @xmath4 range 1ff to 10ff .",
    "if we use traditional lut characterization methods , we will divide this range into equal intervals .",
    "we will divide @xmath3 range into 20 points each of 5ps interval and @xmath4 range into 10 point each of 1ff interval , it will require 20x10 i.e .",
    "200 spice simulations . with this new approach",
    ", we will calculate @xmath1 values from our model at various @xmath4 , which turns out as in figure [ trb_table ] .     at various values of @xmath4,width=288 ]",
    "figure [ trb_table ] tells that we need only 2 simulations for @xmath4 having values 2ff to 10ff as whole region is linear , where as we will need 2 + 8 = 10 simulations for @xmath4 of value 1ff as 60% of region is linear .",
    "this in turn requires a total of only 28 ( 10 + 2x9=28 ) simulations .",
    "thus we could save around 86% of simulations .",
    "spice simulation at any particular corner has many advantage .",
    "apart from giving delay it also gives power . in linear region",
    "we can do our lut characterization without the need of simulations .",
    "but we will not have any idea about power consumption .",
    "so if power consumed is not our concern , demarcation of delay curve into two different region viz linear and non - linear helps us in fastening the process of lut characterization . in future",
    "we can investigate similar kind of linear behavior in power consumption also which will obviate the need of spice simulation in linear region completely .",
    "[ bulusu ] s. miryala , b. kaur , b. anand and s. manhas , \" efficient nanoscale vlsi standard cell library characterization using a novel delay model ,  _ quality electronic design ( isqed ) , 2011 _ , 12th international symposium on , vol.,no .",
    ", pp.1 - 6 , 14 - 16 march 2011 ."
  ],
  "abstract_text": [
    "<S> in vlsi chip design flow , static timing analysis ( sta ) is used for fast and accurate analysis of data - path delay . </S>",
    "<S> this process is fast because delay is picked from look up tables ( lut ) rather than conventional spice simulations . but </S>",
    "<S> accuracy of this method depends upon the underlying delay model with which lut was characterized . non linear delay model ( nldm ) </S>",
    "<S> based luts are quite common in industries[[nldm ] ] . </S>",
    "<S> these lut requires huge amount to time during characterization because of huge number of spice simulations done at arbitrary points . to improve this people proposed various other delay models like alpha - power[[alpha - model ] ] and piecewise[[piecewise - model ] ] linear delay models . </S>",
    "<S> bulusu et . </S>",
    "<S> al.[[bulusu ] ] proposed linear delay model(ldm ) which reduces lut generation time to 50 percent . </S>",
    "<S> ldm divides delay curve w.r.t input rise time(@xmath0 ) into two different region one is linear and other is non - linear . </S>",
    "<S> this boundary point between linear and non - linear region was called break point ( @xmath1 ) . </S>",
    "<S> linear region will be done if we simulate at only two points . </S>",
    "<S> this advantage will be possible by having knowledge of this break point at various pvt corners . in this paper </S>",
    "<S> , we will analyze this break point and will give a formula to find out this at various pvt corners . </S>",
    "<S> knowledge about @xmath2 will restrict lut simulations only in non - linear region and will help us in saving huge amount of time during lut characterization .      </S>",
    "<S> static timing analysis , look up table characterization , data path delay estimation , linear delay model </S>"
  ]
}
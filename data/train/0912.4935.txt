{
  "article_text": [
    "in comparative genomic , the first step of sequence analysis is usually to decompose two or more genomes into syntenic blocks that are segments of homologous chromosomes . for the reliable recovery of syntenic blocks , noise and ambiguities in the genomic maps",
    "need to be removed first .",
    "a genomic map is a sequence of gene markers .",
    "a gene marker appears in a genomic map in either positive or negative orientation . given @xmath0 genomic maps , _ maximal strip recovery _ ( ) is the problem of finding @xmath0 subsequences , one subsequence of each genomic map , such that the total length of strips of these subsequences is maximized  @xcite . here",
    "a _ strip _ is a maximal string of at least two markers such that either the string itself or its signed reversal appears contiguously as a substring in each of the @xmath0 subsequences in the solution . without loss of generality , we can assume that all markers appear in positive orientation in the first genomic map .",
    "for example , the two genomic maps ( the markers in negative orientation are underlined ) @xmath4 have two subsequences @xmath5 of the maximum total strip length @xmath6 .",
    "the strip @xmath7 is positive and forward in both subsequences ; the other two strips @xmath8 and @xmath9 are positive and forward in the first subsequence , but are negative and backward in the second subsequence . intuitively , the strips are syntenic blocks , and the deleted markers not in the strips are noise and ambiguities in the genomic maps .",
    "the problem was introduced by zheng , zhu , and sankoff  @xcite , and was later generalized to for any @xmath1 by chen , fu , jiang , and zhu  @xcite . for , zheng et  al .",
    "@xcite presented a potentially exponential - time heuristic that solves a subproblem of maximum - weight clique . for , chen et  al .",
    "@xcite presented a @xmath2-approximation based on bar - yehuda et  al.s fractional local - ratio algorithm for maximum - weight independent set in @xmath0-interval graphs  @xcite ; the running time of this @xmath2-approximation algorithm is polynomial if @xmath0 is a constant .    on the complexity side , chen et  al .",
    "@xcite showed that several close variants of the problem are intractable .",
    "in particular , they showed that ( i ) is np - complete if duplicate markers are allowed in each genomic map , and that ( ii ) is np - complete even if the markers in each genomic map are distinct .",
    "the complexity of with no duplicates , however , was left as an open problem .    in the biological context",
    ", a genomic map may contain duplicate markers as a paralogy set  @xcite , but such maps are relatively rare .",
    "thus without duplicates is the most useful version of in practice .",
    "theoretically , without duplicates is the most basic and hence the most interesting version of . also , the previous np - hardness proofs of both ( i ) with duplicates and ( ii ) without duplicates  @xcite rely on the fact that a marker may appear in a genomic map in either positive or negative orientation .",
    "a natural question is whether there is any version of that remains np - hard even if all markers in the genomic maps are in positive orientation .",
    "we give a precise formulation of _ the most basic version _ of the problem as follows :    instance : given @xmath0 sequences @xmath10 , @xmath11 , where each sequence is a permutation of @xmath12 .",
    "question : find a subsequence @xmath13 of each sequence @xmath10 , @xmath11 , and find a set of strips @xmath14 , where each strip is a sequence of length at least two over the alphabet @xmath15 , such that each subsequence @xmath13 is the concatenation of the strips @xmath14 in some order , and the total length of the strips @xmath14 is maximized .",
    "the main result of this paper is the following theorem that settles the computational complexity of the most basic version of maximal strip recovery , and moreover provides the first explicit lower bounds on approximating for all @xmath1 :    [ thm : msrd ] for any @xmath1 is apx - hard .",
    "moreover , , , , and are np - hard to approximate within @xmath16 , @xmath17 , @xmath18 , and @xmath3 , respectively , even if all markers are distinct and appear in positive orientation in each genomic map .",
    "recall that for any constant @xmath1 , admits a polynomial - time @xmath2-approximation algorithm  @xcite .",
    "thus for any constant @xmath1 is apx - complete .",
    "our following theorem gives a polynomial - time @xmath2-approximation algorithm for even if the number @xmath0 of genomic maps is not a constant but is part of the input :    [ thm:2d ] for any @xmath1 , there is a polynomial - time @xmath2-approximation algorithm for if all markers are distinct in each genomic map .",
    "this holds even if @xmath0 is not a constant but is part of the input .",
    "compare the upper bound of @xmath2 in theorem  [ thm:2d ] and the asymptotic lower bound of @xmath3 in theorem  [ thm : msrd ] .",
    "maximal strip recovery  @xcite is a maximization problem .",
    "wang and zhu  @xcite introduced complement maximal strip recovery as a minimization problem .",
    "given @xmath0 genomic maps as input , the problem is the same as the problem except that the objective is minimizing the number of deleted markers not in the strips , instead of maximizing the number of markers in the strips .",
    "a natural question is whether a polynomial - time approximation scheme may be obtained for this problem .",
    "our following theorem shows that unless np  @xmath19  p , can not be approximated arbitrarily well :    [ thm : cmsrd ] for any @xmath1 is apx - hard .",
    "moreover , , , , and for any @xmath20 are np - hard to approximate within @xmath21 , @xmath22 , @xmath23 , and @xmath24 , respectively , even if all markers are distinct and appear in positive orientation in each genomic map",
    ". if the number @xmath0 of genomic maps is not a constant but is part of the input , then is np - hard to approximate within any constant less than @xmath25 , even if all markers are distinct and appear in positive orientation in each genomic map .",
    "note the similarity between theorem  [ thm : msrd ] and theorem  [ thm : cmsrd ] .",
    "in fact , our proof of theorem  [ thm : cmsrd ] uses exactly the same constructions as our proof of theorem  [ thm : msrd ] .",
    "the only difference is in the analysis of the approximation lower bounds .",
    "bulteau , fertin , and rusu  @xcite recently proposed a restricted variant of maximal strip recovery called @xmath26-gap - msr , which is with the additional constraint that at most @xmath26 markers may be deleted between any two adjacent markers of a strip in each genomic map .",
    "we now define and as the restricted variants of the two problems and , respectively , with the additional @xmath26-gap constraint .",
    "bulteau et  al .",
    "@xcite proved that is apx - hard for any @xmath27 , and is np - hard for @xmath28 .",
    "we extend our proofs of theorem  [ thm : msrd ] and theorem  [ thm : cmsrd ] to obtain the following theorem on and for any @xmath27 :    [ thm : gap ] let @xmath27",
    ". then    1 .   for any @xmath1 is apx - hard .",
    "moreover , , , , and are np - hard to approximate within @xmath16 , @xmath17 , @xmath18 , and @xmath29 , respectively , even if all markers are distinct and appear in positive orientation in each genomic map .",
    "2 .   for any @xmath1 is apx - hard .",
    "moreover , , , , and for any @xmath20 are np - hard to approximate within @xmath21 , @xmath22 , @xmath23 , and @xmath24 , respectively , even if all markers are distinct and appear in positive orientation in each genomic map .",
    "if the number @xmath0 of genomic maps is not a constant but is part of the input , then is np - hard to approximate within any constant less than @xmath25 , even if all markers are distinct and appear in positive orientation in each genomic map .",
    "we refer to  @xcite for some related results .",
    "maximal strip recovery is a typical combinatorial problem in biological sequence analysis , in particular , genome rearrangement .",
    "the earliest inapproximability result for genome rearrangement problems is due to berman and karpinski  @xcite , who proved that sorting by reversals is np - hard to approximate within any constant less than @xmath30 .",
    "more recently , zhu and wang  @xcite proved that translocation distance is np - hard to approximate within any constant less than @xmath31 .",
    "similar inapproximability results have also been obtained for other important problems in bioinformatics .",
    "for example , nagashima and yamazaki  @xcite proved that non - overlapping local alignment is np - hard to approximate within any constant less than @xmath32 , and manthey  @xcite proved that multiple sequence alignment with weighted sum - of - pairs score is apx - hard for arbitrary metric scoring functions over the binary alphabet .    the rest of this paper is organized as follows .",
    "we first review some preliminaries in section  [ sec : pre ] .",
    "then , in sections [ sec : msr4 ] , [ sec : msr3 ] , [ sec : msr2 ] , and [ sec : msrd ] , we show that for any @xmath1 is apx - hard , and prove explicit approximation lower bounds .",
    "( for any two constants @xmath0 and @xmath33 such that @xmath34 , the problem is a special case of the problem with @xmath35 redundant genomic maps .",
    "thus the apx - hardness of implies the apx - hardness of for all constants @xmath1 . to present the ideas progressively , however ,",
    "we show that , , and are apx - hard by three different l - reductions of increasing sophistication . ) in section  [ sec:2d ] , we present a @xmath2-approximation algorithm for that runs in polynomial time even if the number @xmath0 of genomic maps is not a constant but is part of the input . in section",
    "[ sec : more ] , we present inapproximability results for , , and .",
    "we conclude with remarks in section  [ sec : remarks ] .",
    "[ [ l - reduction . ] ] l - reduction .",
    "+ + + + + + + + + + + +    given two optimization problems x and y , an _",
    "l - reduction _",
    "@xcite from x to y consists of two polynomial - time functions @xmath36 and @xmath37 and two positive constants @xmath38 and @xmath39 satisfying the following two properties :    1 .   for every instance @xmath40 of x , @xmath41 is an instance of y such that @xmath42 2 .   for every feasible solution @xmath43 to @xmath41 , @xmath44 is a feasible solution to @xmath40 such that @xmath45 denotes the value of the optimal solution to an instance @xmath40 , and @xmath46 denotes the value of a solution @xmath43 .",
    "the two properties of l - reduction imply the following inequality on the relative errors of approximation : @xmath47    a relative error of @xmath48 corresponds to an approximation factor of @xmath49 for a minimization problem , and corresponds to an approximation factor of @xmath50 for a maximization problem .",
    "thus we have the following propositions :    1 .   for a minimization problem x and a minimization problem y , if x is np - hard to approximate within @xmath51 , then y is np - hard to approximate within @xmath49 .",
    "2 .   for a maximization problem x and a maximization problem y , if x is np - hard to approximate within @xmath52 , then y is np - hard to approximate within @xmath50 .",
    "3 .   for a minimization problem x and a maximization problem y , if x is np - hard to approximate within @xmath51 , then y is np - hard to approximate within @xmath50 .",
    "4 .   for a maximization problem x and a minimization problem y , if x is np - hard to approximate within @xmath52 , then y is np - hard to approximate within @xmath49 .",
    "[ [ apx - hard - optimization - problems . ] ] apx - hard optimization problems .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we review the complexities of some apx - hard optimization problems that will be used in our reductions .",
    "* is the problem maximum independent set in graphs of maximum degree @xmath53 .",
    "is apx - hard ; see  @xcite .",
    "moreover , chlebk and chlebkov  @xcite showed that and are np - hard to approximate within @xmath18 and @xmath54 , respectively .",
    "trevisan  @xcite showed that is np - hard to approximate within @xmath55 .",
    "* is the problem minimum vertex cover in graphs of maximum degree @xmath53 .",
    "is apx - hard ; see  @xcite .",
    "moreover , chlebk and chlebkov  @xcite showed that and are np - hard to approximate within @xmath22 and @xmath23 , respectively , and , for any @xmath56 , is np - hard to approximate within @xmath57 .",
    "dinur and safra  @xcite showed that minimum vertex cover is np - hard to approximate within any constant less than @xmath25 . *",
    "given a set @xmath58 of @xmath59 variables and a set @xmath60 of @xmath61 clauses , where each variable has exactly @xmath62 literals ( in @xmath62 different clauses ) and each clause is the disjunction of exactly @xmath63 literals ( of @xmath63 different variables ) , is the problem of finding an assignment of @xmath58 that satisfies the maximum number of clauses in @xmath60 .",
    "note that @xmath64 .",
    "berman and karpinski  @xcite showed that is np - hard to approximate within any constant less than @xmath65 . * given @xmath0 disjoint sets @xmath66 of vertices , @xmath11 , and given a set @xmath67 of hyper - edges , is the problem of finding a maximum - cardinality subset @xmath68 of pairwise - disjoint hyper - edges .",
    "hazan , safra , and schwartz  @xcite showed that is np - hard to approximate within @xmath3 .",
    "[ [ linear - forest - and - linear - arboricity . ] ] linear forest and linear arboricity .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    a _ linear forest _ is a graph in which every connected component is a path .",
    "the _ linear arboricity _ of a graph is the minimum number of linear forests into which the edges of the graph can be decomposed .",
    "akiyama , exoo , and harary  @xcite conjectured that the linear arboricity of every graph @xmath69 of maximum degree @xmath53 satisfies @xmath70 .",
    "this conjecture has been confirmed for graphs of small constant degrees , and has been shown to be asymptotically correct as @xmath71  @xcite .",
    "in particular , the proof of the conjecture for @xmath72 and @xmath73 are constructive  @xcite and lead to polynomial - time algorithms for decomposing any graph of maximum degree @xmath72 and @xmath73 into at most @xmath74 and @xmath75 linear forests , respectively .",
    "also , the proof of the first upper bound on linear arboricity by akiyama , exoo , and harary  @xcite implies a simple polynomial - time algorithm for decomposing any graph of maximum degree @xmath53 into at most @xmath76 linear forests .",
    "define @xmath77 where @xmath69 ranges over all graphs of maximum degree @xmath53 , and @xmath78 denotes the number of linear forests that akiyama , exoo , and harary s algorithm  @xcite decomposes @xmath69 into",
    ". then @xmath79",
    "in this section , we prove that is apx - hard by a simple l - reduction from . before we present the l - reduction , we first show that is np - hard by a reduction in the classical style , which is perhaps more familiar to most readers . throughout this paper",
    ", we follow this progressive format of presentation .",
    "let @xmath69 be a graph of maximum degree @xmath75 .",
    "let @xmath59 be the number of vertices in @xmath69 .",
    "partition the edges of @xmath69 into two linear forests @xmath80 and @xmath81 .",
    "let @xmath82 and @xmath83 be the vertices of @xmath69 that are _ not _ incident to any edges in @xmath80 and in @xmath81 , respectively .",
    "we construct four genomic maps @xmath84 , @xmath85 , @xmath86 , and @xmath87 , where each map is a permutation of the following @xmath88 distinct markers all in positive orientation :    * @xmath59 pairs of vertex markers @xmath89 and @xmath90 , @xmath91 .",
    "@xmath84 and @xmath85 are concatenations of the @xmath59 pairs of vertex markers with ascending and descending indices , respectively : @xmath92 @xmath86 and @xmath87 are represented schematically as follows : @xmath93    @xmath94 and @xmath95 consist of vertex markers of the vertices incident to the edges in @xmath80 and @xmath81 , respectively .",
    "the markers of the vertices in each path @xmath96 are grouped together in an interleaving pattern : for @xmath97 , the left marker of @xmath98 , the right marker of @xmath99 ( if @xmath100 ) , the left marker of @xmath101 ( if @xmath102 ) , and the right marker of @xmath98 are consecutive .",
    "@xmath103 and @xmath104 consist of vertex markers of the vertices in @xmath82 and @xmath83 , respectively . the left marker and the right marker of each pair",
    "are consecutive .",
    "this completes the construction .",
    "we refer to figure  [ fig : msr4 ] ( a ) and ( b ) for an example .",
    ": @xmath80 is a single solid path @xmath105 , @xmath81 consists of two dotted paths @xmath106 and @xmath107 , @xmath108 , @xmath109 .",
    "( b ) the four genomic maps @xmath110 .",
    "( c ) the four subsequences of the genomic maps corresponding to the independent set @xmath111 in the graph.,title=\"fig : \" ] + ( a )    @xmath112 ( b )    @xmath113 ( c )    two pairs of markers _ intersect _ in a genomic map if a marker of one pair appears between the two markers of the other pair .",
    "the following property of our construction is obvious :    [ prp : msr4 ] two vertices are adjacent in the graph @xmath69 if and only if the corresponding two pairs of vertex markers intersect in one of the two genomic maps @xmath114 .",
    "we say that four subsequences of the four genomic maps @xmath110 are _ canonical _ if each strip of the subsequences is a pair of vertex markers .",
    "we have the following lemma on canonical subsequences :    [ lem : canon4 ] in any four subsequences of the four genomic maps @xmath110 , respectively , each strip must be a pair of vertex markers .    by construction ,",
    "a strip can not include two vertex markers of different indices because they appear in different orders in @xmath84 and in @xmath85 .",
    "the following lemma establishes the np - hardness of :    [ lem : iff4 ] the graph @xmath69 has an independent set of at least @xmath115 vertices if and only if the four genomic maps @xmath110 have four subsequences whose total strip length @xmath116 is at least @xmath117 .",
    "we first prove the `` only if '' direction .",
    "suppose that the graph @xmath69 has an independent set of at least @xmath115 vertices .",
    "we will show that the four genomic maps @xmath110 have four subsequences of total strip length at least @xmath117 . by proposition",
    "[ prp : msr4 ] , the @xmath115 vertices in the independent set correspond to @xmath115 pairs of vertex markers that do not intersect each other in the genomic maps .",
    "these @xmath115 pairs of vertex markers induce a subsequence of length @xmath117 in each genomic map . in each subsequence ,",
    "the left marker and the right marker of each pair appear consecutively and compose a strip .",
    "thus the total strip length is at least @xmath117 .",
    "we refer to figure  [ fig : msr4](c ) for an example .",
    "we next prove the `` if '' direction .",
    "suppose that the four genomic maps @xmath110 have four subsequences of total strip length at least @xmath117 .",
    "we will show that the graph @xmath69 has an independent set of at least @xmath115 vertices . by lemma  [ lem : canon4 ]",
    ", each strip of the subsequences must be a pair of vertex markers .",
    "thus we obtain at least @xmath115 pairs of vertex markers that do not intersect each other in the genomic maps .",
    "then , by proposition  [ prp : msr4 ] , the corresponding set of at least @xmath115 vertices in the graph @xmath69 form an independent set .",
    "we present an l - reduction @xmath118 from to as follows .",
    "the function @xmath36 , given a graph @xmath69 of maximum degree @xmath75 , constructs the four genomic maps @xmath110 as in the np - hardness reduction .",
    "let @xmath119 be the number of vertices in a maximum independent set in @xmath69 , and let @xmath120 be the maximum total strip length of any four subsequences of @xmath110 , respectively . by lemma  [ lem : iff4 ] , we have @xmath121 choose @xmath122 , then property   of l - reduction is satisfied .",
    "the function @xmath37 , given four subsequences of the four genomic maps @xmath110 , respectively , returns an independent set of vertices in the graph @xmath69 corresponding to the pairs of vertex markers that are strips of the subsequences .",
    "let @xmath116 be the total strip length of the subsequences , and let @xmath115 be the number of vertices in the independent set returned by the function @xmath37 . then @xmath123 .",
    "it follows that @xmath124 choose @xmath125 , then property   of l - reduction is also satisfied .",
    "we have obtained an l - reduction from to with @xmath126 .",
    "chlebk and chlebkov  @xcite showed that is np - hard to approximate within @xmath18 .",
    "it follows that is also np - hard to approximate within @xmath18 .",
    "the lower bound extends to for all constants @xmath127 .",
    "the l - reduction from to can be obviously generalized :    [ lem : mis ] let @xmath128 and @xmath127 .",
    "if there is a polynomial - time algorithm for decomposing any graph of maximum degree @xmath53 into @xmath129 linear forests , then there is an l - reduction from to with constants @xmath130 and @xmath131 .      in this section",
    ", we prove that is apx - hard by a slightly more sophisticated l - reduction again from",
    ".      let @xmath69 be a graph of maximum degree @xmath75 .",
    "let @xmath59 be the number of vertices in @xmath69 .",
    "partition the edges of @xmath69 into two linear forests @xmath80 and @xmath81 .",
    "let @xmath82 and @xmath83 be the vertices of @xmath69 that are _ not _ incident to any edges in @xmath80 and @xmath81 , respectively .",
    "we construct three genomic maps @xmath132 , @xmath86 , and @xmath87 , where each map is a permutation of the following @xmath133 distinct markers all in positive orientation :    * @xmath59 pairs of vertex markers @xmath89 and @xmath90 , @xmath91 ; * @xmath59 pairs of dummy markers @xmath134 and @xmath135 , @xmath91",
    ".    @xmath132 consists of the @xmath88 pairs of vertex and dummy markers in an alternating pattern : @xmath136 @xmath86 and @xmath87 are represented schematically as follows : @xmath137    @xmath94 and @xmath95 consist of vertex markers of the vertices incident to the edges in @xmath80 and @xmath81 , respectively .",
    "the markers of the vertices in each path @xmath96 are grouped together in an interleaving pattern : for @xmath97 , the left marker of @xmath98 , the right marker of @xmath99 ( if @xmath100 ) , the left marker of @xmath101 ( if @xmath102 ) , and the right marker of @xmath98 are consecutive .",
    "@xmath103 and @xmath104 consist of vertex markers of the vertices in @xmath82 and @xmath83 , respectively . the left marker and the right marker of each pair",
    "are consecutive .",
    "@xmath138 is the reverse permutation of the @xmath59 pairs of dummy markers :    @xmath139    this completes the construction .",
    "we refer to figure  [ fig : msr3 ] ( a ) and ( b ) for an example .",
    ": @xmath80 is a single ( solid ) path @xmath105 , @xmath81 consists of two ( dotted ) paths @xmath106 and @xmath107 , @xmath108 , @xmath109 .",
    "( b ) the three genomic maps @xmath140 .",
    "( c ) the three subsequences of the genomic maps corresponding to the independent set @xmath111 in the graph.,title=\"fig : \" ] + ( a )    @xmath141 ( b )    @xmath142 ( c )    it is clear that proposition  [ prp : msr4 ] still holds .",
    "the following lemma on canonical subsequences is analogous to lemma  [ lem : canon4 ] :    [ lem : canon3 ] if the three genomic maps @xmath140 have three subsequences of total strip length @xmath116 , then they must have three subsequences of total strip length at least @xmath116 such that each strip is either a pair of vertex markers or a pair of dummy markers , and each pair of dummy markers is a strip .",
    "we present an algorithm that transforms the subsequences into canonical form without reducing the total strip length . by construction",
    ", a strip can not include both a dummy marker and a vertex marker because they appear in different orders in @xmath86 and in @xmath87 , and a strip can not include two dummy markers of different indices because they appear in different orders in @xmath132 and in @xmath86 and @xmath87 .",
    "suppose that a strip @xmath143 consists of vertex markers of two or more different indices .",
    "then there must be two vertex markers @xmath144 and @xmath145 of different indices @xmath146 and @xmath147 that are consecutive in @xmath143 . since the vertex markers and the dummy markers appear in @xmath132 in an alternating pattern with ascending indices , we must have @xmath148 .",
    "moreover , the pair of dummy markers of index @xmath146 , which appears between @xmath144 and @xmath145 in @xmath132 , must be missing from the subsequences .",
    "now cut the strip @xmath143 into @xmath149 and @xmath150 between @xmath144 and @xmath145 .",
    "if @xmath149 ( resp .",
    "@xmath150 ) consists of only one marker @xmath144 ( resp .",
    "@xmath145 ) , delete the lone marker from the subsequences ( recall that a strip must include at least two markers ) .",
    "this decreases the total strip length by at most two .",
    "next insert the pair of dummy markers of index @xmath146 to the subsequences as a new strip .",
    "this increases the total strip length by exactly two .",
    "repeat this operation whenever a strip contains two vertex markers of different indices and whenever a pair of dummy markers is missing from the subsequences , then in @xmath151 steps we obtain three subsequences of total strip length at least @xmath116 in canonical form .",
    "the following lemma , analogous to lemma  [ lem : iff4 ] , establishes the np - hardness of :    [ lem : iff3 ] the graph @xmath69 has an independent set of at least @xmath115 vertices if and only if the three genomic maps @xmath140 have three subsequences whose total strip length @xmath116 is at least @xmath152 .",
    "we first prove the `` only if '' direction .",
    "suppose that the graph @xmath69 has an independent set of at least @xmath115 vertices .",
    "we will show that the three genomic maps @xmath140 have three subsequences of total strip length at least @xmath152 . by proposition  [ prp : msr4 ] , the @xmath115 vertices in the independent set correspond to @xmath115 pairs of vertex markers that do not intersect each other in the genomic maps .",
    "these @xmath115 pairs of vertex markers together with the @xmath59 pairs of dummy markers induce a subsequence of length @xmath152 in each genomic map . in each subsequence",
    ", the left marker and the right marker of each pair appear consecutively and compose a strip .",
    "thus the total strip length is at least @xmath152 .",
    "we refer to figure  [ fig : msr3](c ) for an example .",
    "we next prove the `` if '' direction .",
    "suppose that the three genomic maps @xmath140 have three subsequences of total strip length at least @xmath152 .",
    "we will show that the graph @xmath69 has an independent set of at least @xmath115 vertices . by lemma  [ lem : canon3 ] , the three genomic maps have three subsequences of total strip length at least @xmath152 such that each strip is a pair of markers . excluding the @xmath59 pairs of dummy markers , we obtain at least @xmath115 pairs of vertex markers that do not intersect each other in the genomic maps .",
    "then , by proposition  [ prp : msr4 ] , the corresponding set of at least @xmath115 vertices in the graph @xmath69 form an independent set .",
    "we present an l - reduction @xmath118 from to as follows .",
    "the function @xmath36 , given a graph @xmath69 of maximum degree @xmath75 , constructs the three genomic maps @xmath140 as in the np - hardness reduction .",
    "let @xmath119 be the number of vertices in a maximum independent set in @xmath69 , and let @xmath120 be the maximum total strip length of any three subsequences of @xmath140 , respectively .",
    "since a simple greedy algorithm ( which repeatedly selects a vertex not adjacent to the previously selected vertices ) finds an independent set of at least @xmath153 vertices in the graph @xmath69 of maximum degree @xmath75 , we have @xmath154 . by lemma  [ lem : iff3 ] , we have @xmath155 .",
    "it follows that @xmath156 choose @xmath157 , then property   of l - reduction is satisfied .",
    "the function @xmath37 , given three subsequences of the three genomic maps @xmath140 , respectively , transforms the subsequences into canonical form as in the proof of lemma  [ lem : canon3 ] , then returns an independent set of vertices in the graph @xmath69 corresponding to the pairs of vertex markers that are strips of the subsequences .",
    "let @xmath116 be the total strip length of the subsequences , and let @xmath115 be the number of vertices in the independent set returned by the function @xmath37 .",
    "then @xmath158 .",
    "it follows that @xmath159 choose @xmath125 , then property   of l - reduction is also satisfied .",
    "we have obtained an l - reduction from to with @xmath160 .",
    "chlebk and chlebkov  @xcite showed that is np - hard to approximate within @xmath161 .",
    "it follows that is np - hard to approximate within @xmath162 .      in this section , we prove that is apx - hard by an l - reduction from with @xmath163 and @xmath164 .",
    "let @xmath165 be an instance of , where @xmath58 is a set of @xmath59 variables @xmath166 , @xmath91 , and @xmath60 is a set of @xmath61 clauses @xmath167 , @xmath168 .",
    "without loss of generality , assume that the @xmath62 literals of each variable are neither all positive nor all negative .",
    "since @xmath163 , it follows that each variable has either @xmath169 positive and @xmath170 negative literals , or @xmath170 positive and @xmath169 negative literals .",
    "we construct two genomic maps @xmath86 and @xmath87 , each map a permutation of @xmath171 distinct markers all in positive orientation :    * @xmath170 pair of variable markers @xmath172 for each variable @xmath166 , @xmath91 ; * @xmath169 pairs of true markers @xmath173 and @xmath174 for each variable @xmath166 , @xmath91 ; * @xmath169 pairs of false markers @xmath175 and @xmath176 for each variable @xmath166 , @xmath91 ; * @xmath170 pair of clause markers @xmath177 for each clause @xmath167 , @xmath168 ; * @xmath63 pairs of literal markers @xmath178 , @xmath179 , for each clause @xmath167 , @xmath168 ; * @xmath169 pairs of dummy markers @xmath180 and @xmath181",
    ".    the construction is done in two steps : first arrange the variable markers , the true / false markers , the clause markers , and the dummy markers into two sequences @xmath182 and @xmath183 , next insert the literal markers at appropriate positions in the two sequences to obtain the two genomic maps @xmath86 and @xmath87 .",
    "the two sequences @xmath182 and @xmath183 are represented schematically as follows : @xmath184 for each variable @xmath166 , @xmath185 consists of the corresponding four pairs of true / false markers @xmath173 @xmath174 @xmath175 @xmath176 in @xmath182 and @xmath183 , and in addition the pair of variable markers @xmath172 in @xmath183 .",
    "these markers are arranged in the two sequences in a special pattern as follows ( the indices @xmath146 are omitted for simpler notations ) : @xmath186    now insert the literal markers to the two sequences @xmath182 and @xmath183 to obtain the two genomic maps @xmath86 and @xmath87 .",
    "first , @xmath187 . for each positive",
    "literal ( resp .",
    "negative literal ) of a variable @xmath166 that occurs in a clause @xmath167 , place a pair of literal markers @xmath178 , @xmath179 , around a false marker @xmath188 ( resp .  true marker @xmath189 ) , @xmath190 .",
    "the four possible positions of the three pairs of literal markers of each variable @xmath166 are as follows : @xmath191    next , @xmath192 . without loss of generality ,",
    "assume that the @xmath63 pairs of literal markers of each clause @xmath167 appear in @xmath86 with ascending indices : @xmath193 insert the @xmath63 pairs of literal markers in @xmath87 immediately after the pair of clause markers @xmath177 , in an interleaving pattern : @xmath194 this completes the construction .",
    "we refer to figure  [ fig : msr2 ] ( a ) and ( b ) for an example of the two steps .",
    "+ ( a )     + ( b )     + ( c )     + ( d )    we say that two subsequences of the two genomic maps @xmath86 and @xmath87 are _ canonical _ if each strip of the two subsequences is a pair of markers .",
    "we refer to figure  [ fig : msr2 ] ( c ) and ( d ) for two examples of canonical subsequences .",
    "the following lemma on canonical subsequences is analogous to lemma  [ lem : canon4 ] and lemma  [ lem : canon3 ] :    [ lem : canon2 ] if the two genomic maps @xmath86 and @xmath87 have two subsequences of total strip length @xmath116 , then they must have two subsequences of total strip length at least @xmath116 such that each strip is a pair of markers and , moreover , the two pairs of dummy markers are two strips , the @xmath61 pairs of clause markers and the @xmath59 pairs of variable markers are @xmath195 strips , at most one pair of literal markers of each clause is a strip , either both pairs of true markers or both pairs of false markers of each variable are two strips .",
    "we present an algorithm that transforms the subsequences into canonical form without reducing the total strip length .",
    "the algorithm performs incremental operations on the subsequences such that the following eight conditions are satisfied progressively :    * _ 1 .",
    "each strip that includes a dummy marker is a pair of dummy markers .",
    "_ * a strip can not include two dummy markers of different indices because they appear in different orders in @xmath86 and in @xmath87 .",
    "note that in @xmath87 the dummy markers appear after the other markers .",
    "suppose that a strip @xmath143 includes both a dummy marker and a non - dummy marker",
    ". then there must be a non - dummy marker @xmath144 and a dummy marker @xmath145 consecutive in @xmath143 . since the two pairs of dummy markers appear consecutively but in different orders in @xmath86 and in @xmath87 , one of the two pairs must appear between @xmath144 and @xmath145 either in @xmath86 or in @xmath87 .",
    "this pair is hence missing from the subsequences .",
    "now cut the strip @xmath143 into @xmath149 and @xmath150 between @xmath144 and @xmath145 . if @xmath149 ( resp .",
    "@xmath150 ) consists of only one marker @xmath144 ( resp .",
    "@xmath145 ) , delete the lone marker from the subsequences ( recall that a strip must include at least two markers ) .",
    "this decreases the total strip length by at most two .",
    "next insert the missing pair of dummy markers to the subsequences .",
    "this pair of dummy markers becomes either a new strip by itself , or part of a longer strip ( recall that a strip must be maximal ) . in any case",
    ", the insertion increases the total strip length by exactly two .",
    "overall , this _ cut - delete - insert _ operation ( also used in lemma  [ lem : canon3 ] ) does not reduce the total strip length .",
    "after the first operation , a second operation may be necessary .",
    "but since each operation here deletes only lone markers ( in @xmath149 and @xmath150 ) and inserts always a pair of markers , the pair inserted by one operation is never deleted by a subsequent operation .",
    "thus at most two operations are sufficient to transform the subsequences until each strip that includes a dummy marker is indeed a pair of dummy markers .    *",
    "the two pairs of dummy markers are two strips . _",
    "* suppose that the subsequences do not have both pairs of dummy markers as strips .",
    "then , by condition  1 , we must have either both pairs of dummy markers missing from the subsequences , or one pair missing and the other pair forming a strip .",
    "note that in @xmath86 the dummy markers separate the true / false and literal markers on the left from the clause and variable markers on the right , and that in @xmath87 the dummy markers appear after the other markers .",
    "if the missing dummy markers do not disrupt any existing strips in @xmath86 , then simply insert each missing pair to the subsequences as a new strip .",
    "otherwise , there must be a true / false or literal marker @xmath144 and a clause or variable marker @xmath145 consecutive in a strip @xmath143 , such that both pairs of dummy markers appear in @xmath86 between @xmath144 and @xmath145 and hence are missing from the subsequences .",
    "cut the strip @xmath143 between @xmath144 and @xmath145 , delete any lone markers if necessary , then insert the two pairs of dummy markers to the subsequences as two new strips .",
    "each strip that includes a clause or variable marker is a pair of clause markers or a pair of variable markers . _ * note that in @xmath86 the clause and variable markers are separated by the dummy markers from the other markers .",
    "thus , by condition  2 , a strip that includes a clause or variable marker can not include any markers of the other types .",
    "also , a strip can not include two clause markers of different clauses , or two variable markers of different variables , or a clause marker and a variable marker , because these combinations appear in different orders in @xmath86 and in @xmath87 .",
    "thus this condition is automatically satisfied after conditions 1 and 2 .",
    "the @xmath61 pairs of clause markers and the @xmath59 pairs of variable markers are @xmath195 strips . _",
    "* suppose that the subsequences do not have all @xmath195 pairs of clause and variable markers as @xmath195 strips . by condition  3",
    ", the clause and variable markers in the subsequences must be in pairs , each pair forming a strip .",
    "then the clause and variable markers missing from the subsequences must be in pairs too . for each missing pair of clause or variable markers ,",
    "if the pair does not disrupt any existing strips in @xmath87 , then simply insert it to the subsequences as a new strip .",
    "otherwise , there must be two true / false or literal markers @xmath144 and @xmath145 consecutive in a strip @xmath143 , such that the missing pair appears in @xmath87 between @xmath144 and @xmath145 .",
    "cut the strip @xmath143 between @xmath144 and @xmath145 , delete any lone markers if necessary , then insert each missing pair of clause markers between @xmath144 and @xmath145 to the subsequences as a new strip .    *",
    "each strip that includes a literal marker is a pair of literal markers . _ * note that in @xmath87 the dummy and clause markers separate the literals markers from the other markers , and separate the literal markers of different clauses from each other .",
    "thus , by conditions 2 and 4 , a strip can not include both a literal marker and a non - literal marker , or two literal markers of different clauses .",
    "suppose that a strip @xmath143 includes two literal markers @xmath144 and @xmath145 of the same clause @xmath167 but of different indices @xmath196 and @xmath197 .",
    "assume without loss of generality that @xmath144 and @xmath145 are consecutive in @xmath143 .",
    "recall the orders of the literal markers of each clause in the two genomic maps :    @xmath198    since in @xmath86 the pairs of literal markers appear with ascending indices , the index @xmath199 of the marker @xmath144 must be less than the index @xmath200 of the marker @xmath145 . then , since in @xmath87 the left markers appear with descending indices before the right markers also with descending indices , @xmath144 must be a left marker , and @xmath145 must be a right marker .",
    "that is , @xmath201 .",
    "all markers between @xmath144 and @xmath145 in @xmath86 must be missing from the subsequences . among these missing markers , those that are literal markers of @xmath167",
    "appear in @xmath87 either consecutively before @xmath144 or consecutively after @xmath145 .",
    "replace either @xmath144 or @xmath145 by a missing literal marker of @xmath167 , that is , either @xmath202 by @xmath203 , or @xmath204 by @xmath205 , then @xmath144 and @xmath145 become a pair .",
    "denote this _ shift _ operation by @xmath206 the strip @xmath143 can not include any other literal markers of the clause @xmath167 besides @xmath144 and @xmath145 because ( i ) the markers before @xmath202 in @xmath86 appear after @xmath202 in @xmath87 , and ( ii ) the markers after @xmath204 in @xmath86 appear before @xmath204 in @xmath87 .",
    "* _ 6 . at most one pair of literal markers of each clause is a strip .",
    "_ * note that the @xmath63 pairs of literal markers of each clause appear in @xmath87 in an interleaving pattern .",
    "it follows by condition  5 that at most one of the @xmath63 pairs can be a strip .",
    "each strip that includes a true / false marker is a pair of true markers or a pair of false markers . _ * by conditions 1 , 3 , and 5 , it follows that each strip that includes a true / false marker must include true / false markers only .",
    "a strip can not include two true / false markers of different variables because they appear in different orders in @xmath86 and in @xmath87 .",
    "suppose that a strip @xmath143 includes two true / false markers @xmath144 and @xmath145 of the same variable @xmath166 such that @xmath144 and @xmath145 are not a pair .",
    "recall the orders of the four pairs of true / false markers of each variable @xmath166 in @xmath86 and @xmath87 , the four possible positions of the three pairs of literal markers in @xmath86 , and the position of the variable marker in @xmath87 :    @xmath191    note that the pair of variable markers in @xmath87 forbids a strip from including two true / false markers of different indices .",
    "thus the strip @xmath143 must consist of true / false markers of both the same variable and the same index .",
    "assume without loss of generality that @xmath144 appears before @xmath145 in @xmath143 .",
    "it is easy to check that there are only two such combinations of @xmath144 and @xmath145 : either @xmath207 or @xmath208 .",
    "moreover , the strip @xmath143 must include only the two markers @xmath144 and @xmath145 .",
    "for either combination of @xmath144 and @xmath145 , use a shift operation to make @xmath144 and @xmath145 a pair : @xmath209    * _ 8 .",
    "either both pairs of true markers or both pairs of false markers of each variable are two strips .",
    "_ * consider the conflict graph of the four pairs of true / false markers and the three pairs of literal markers of each variable @xmath166 in figure  [ fig:7 ] .",
    "the graph has one vertex for each pair , and has an edge between two vertices if and only if the corresponding pairs intersect in either @xmath86 or @xmath87 . by conditions 1 , 3 , 5 , and 7 ,",
    "the strips of the subsequences from the seven pairs correspond to an independent set in the conflict graph of seven vertices .",
    "-cycle are thick . in this example",
    "the strip @xmath143 is first deleted then inserted back . ]",
    "note that the four vertices corresponding to the four pairs of true / false markers induce a @xmath73-cycle in the conflict graph .",
    "suppose that neither both pairs of true markers nor both pairs of false markers are strips .",
    "then at most one of the four pairs , say @xmath143 , is a strip .",
    "delete @xmath143 from the subsequences .",
    "recall that each variable has either @xmath169 positive and @xmath170 negative literals , or @xmath170 positive and @xmath169 negative literals .",
    "let @xmath210 be the pair of literal markers whose sign is opposite to the sign of the other two pairs of literal markers . also delete @xmath210 from the subsequences if it is there .",
    "next insert two pairs of true / false markers to the subsequences : if @xmath210 is positive , both pairs of false markers @xmath175 and @xmath176 ; if @xmath210 is negative , both pairs of true markers @xmath173 and @xmath174 .    when all eight conditions are satisfied , the subsequences are in the desired canonical form .",
    "the following lemma , analogous to lemma  [ lem : iff4 ] and lemma  [ lem : iff3 ] , establishes the np - hardness of :    [ lem : iff2 ] the variables in @xmath58 have an assignment that satisfies at least @xmath115 clauses in @xmath60 if and only if the two genomic maps @xmath86 and @xmath87 have two subsequences whose total strip length @xmath116 is at least @xmath211 .",
    "we first prove the `` only if '' direction .",
    "suppose that the variables in @xmath58 have an assignment that satisfies at least @xmath115 clauses in @xmath60 .",
    "we will show that the two genomic maps @xmath86 and @xmath87 have two subsequences of total strip length at least @xmath211 . for each variable @xmath166",
    ", choose the two pairs of true markers if the variable is assigned true , or the two pairs of false markers if the variable is assigned false . for each satisfied clause @xmath167",
    ", choose one pair of literal markers corresponding to a true literal ( when there are two or more true literals , choose any one ) . also choose all @xmath195 pairs of clause and variable markers and both pairs of dummy markers .",
    "the chosen markers induce two subsequences of the two genomic maps .",
    "it is easy to check that , by construction , the two subsequences have at least @xmath212 strips , each strip forming a pair .",
    "thus the total strip length is at least @xmath211 .",
    "we refer to figure  [ fig : msr2 ] ( c ) and ( d ) for two examples .",
    "we next prove the `` if '' direction .",
    "suppose that the two genomic maps @xmath86 and @xmath87 have two subsequences of total strip length at least @xmath211",
    ". we will show that the variables in @xmath58 have an assignment that satisfies at least @xmath115 clauses in @xmath60 . by lemma  [ lem : canon2 ] , the two genomic maps have two subsequences of total strip length at least @xmath211 such that each strip is a pair and , moreover , the two pairs of dummy markers , the @xmath195 pairs of clause and variable markers , at most one pair of literal markers of each clause , and either both pairs of true markers or both pairs of false markers of each variable are strips .",
    "thus at least @xmath115 strips are pairs of literal markers , each pair of a different clause .",
    "again it is easy to check that , by construction , the assignment of the variables in @xmath58 to either true or false ( corresponding to the choices of either both pairs of true markers or both pairs of false markers ) satisfies at least @xmath115 clauses in @xmath60 ( corresponding to the at least @xmath115 pairs of literal markers that are strips ) .",
    "we present an l - reduction @xmath118 from to as follows .",
    "the function @xmath36 , given the instance @xmath165 , constructs the two genomic maps @xmath86 and @xmath87 as in the np - hardness reduction .",
    "let @xmath119 be the maximum number of clauses in @xmath60 that can be satisfied by an assignment of @xmath58 , and let @xmath120 be the maximum total strip length of any two subsequences of @xmath86 and @xmath87 , respectively .",
    "since a random assignment of each variable independently to either true or false with equal probability @xmath213 satisfies each disjunctive clause of @xmath63 literals with probability @xmath214 , we have @xmath215 . by lemma  [ lem : iff2 ]",
    ", we have @xmath216 .",
    "recall that @xmath64 .",
    "it follows that @xmath217    the function @xmath37 , given two subsequences of the two genomic maps @xmath86 and @xmath87 , respectively , transforms the subsequences into canonical form as in the proof of lemma  [ lem : canon2 ] , then returns an assignment of @xmath58 corresponding to the choices of true or false markers .",
    "let @xmath116 be the total strip length of the subsequences , and let @xmath115 be the number of clauses in @xmath60 that are satisfied by this assignment . then @xmath218 .",
    "it follows that @xmath219    let @xmath220 be an arbitrary small constant .",
    "note that by brute force we can check whether @xmath221 and , in the affirmative case , compute an optimal assignment of @xmath58 that satisfies the maximum number of clauses in @xmath60 , all in @xmath222 time , which is polynomial in @xmath61 for a constant @xmath48 . therefore we can assume without loss of generality that @xmath223",
    ". then , with the two constants @xmath224 and @xmath125 , both properties and of l - reduction are satisfied .",
    "in particular , for @xmath163 and @xmath225 , @xmath226    berman and karpinski  @xcite showed that is np - hard to approximate within any constant less than @xmath227 .",
    "thus is np - hard to approximate within any constant less than @xmath228",
    "in this section , we derive an asymptotic lower bound for approximating by an l - reduction from to .",
    "let @xmath67 be a set of @xmath59 hyper - edges over @xmath0 disjoint sets @xmath66 of vertices , @xmath11 .",
    "we construct two genomic maps @xmath84 and @xmath85 , and @xmath0 genomic maps @xmath10 , @xmath11 , where each map is a permutation of the following @xmath88 distinct markers all in positive orientation :    * @xmath59 pairs of edge markers @xmath89 and @xmath90 , @xmath91 .    the two genomic maps @xmath84 and @xmath85 are concatenations of the @xmath59 pairs of edge markers with ascending and descending indices , respectively :    @xmath92    each genomic map @xmath10 corresponds to a vertex set @xmath229 , @xmath11 , and is represented schematically as follows : @xmath230 here each @xmath231 consists of the edge markers of hyper - edges containing the vertex @xmath232 , grouped together such that the left markers appear with ascending indices before the right markers also with ascending indices .",
    "this completes the construction .",
    "we refer to figure  [ fig : msrd](a ) for an example .",
    "@xmath233 ( a )    @xmath234 ( b )    the following property of our construction is obvious :    [ prp : msrd ] two hyper - edges in @xmath235 intersect",
    "if and only if the corresponding two pairs of edge markers intersect in one of the @xmath0 genomic maps @xmath10 , @xmath11 .",
    "the following lemma is analogous to lemma  [ lem : canon4 ] :    [ lem : canond ] in any @xmath236 subsequences of the @xmath236 genomic maps @xmath237 , respectively , each strip must be a pair of edge markers .    by construction ,",
    "a strip can not include two edge markers of different indices because they appear in different orders in @xmath84 and in @xmath85 .",
    "the following lemma , analogous to lemma  [ lem : iff4 ] , lemma  [ lem : iff3 ] , and lemma  [ lem : iff2 ] , establishes the np - hardness of :    [ lem : iffd ] the set @xmath235 has a subset of @xmath115 pairwise - disjoint hyper - edges if and only if the @xmath236 genomic maps @xmath237 have @xmath236 subsequences whose total strip length @xmath116 is at least @xmath117 .",
    "we first prove the `` only if '' direction .",
    "suppose that the set @xmath235 has a subset of at least @xmath115 pairwise - disjoint hyper - edges .",
    "we will show that the @xmath236 genomic maps @xmath237 have @xmath236 subsequences of total strip length at least @xmath117 . by proposition",
    "[ prp : msrd ] , the @xmath115 pairwise - disjoint hyper - edges correspond to @xmath115 pairs of edge markers that do not intersect each other in the genomic maps .",
    "these @xmath115 pairs of edge markers induce a subsequence of length @xmath117 in each genomic map . in each subsequence ,",
    "the left marker and the right marker of each pair appear consecutively and compose a strip .",
    "thus the total strip length is at least @xmath117 .",
    "we refer to figure  [ fig : msrd](b ) for an example .",
    "we next prove the `` if '' direction .",
    "suppose that the @xmath236 genomic maps @xmath237 have @xmath236 subsequences of total strip length at least @xmath117 .",
    "we will show that the set @xmath235 has a subset of at least @xmath115 pairwise - disjoint hyper - edges . by lemma  [ lem : canon4 ]",
    ", each strip of the subsequences must be a pair of edge markers .",
    "thus we obtain at least @xmath115 pairs of edge markers that do not intersect each other in the genomic maps . then , by proposition  [ prp : msrd ] , the corresponding set of at least @xmath115 hyper - edges in @xmath235 are pairwise - disjoint .",
    "we present an l - reduction @xmath118 from to as follows .",
    "the function @xmath36 , given a set @xmath67 of hyper - edges , constructs the @xmath236 genomic maps @xmath237 as in the np - hardness reduction .",
    "let @xmath119 be the maximum number of pairwise - disjoint hyper - edges in @xmath235 , and let @xmath120 be the maximum total strip length of any @xmath236 subsequences of @xmath237 , respectively . by lemma  [ lem : iffd ] , we have @xmath121 choose @xmath122 , then property   of l - reduction is satisfied .",
    "the function @xmath37 , given @xmath236 subsequences of the @xmath236 genomic maps @xmath237 , respectively , returns a subset of pairwise - disjoint hyper - edges in @xmath235 corresponding to the pairs of edge markers that are strips of the subsequences .",
    "let @xmath116 be the total strip length of the subsequences , and let @xmath115 be the number of pairwise - disjoint hyper - edges returned by the function @xmath37 . then @xmath123 .",
    "it follows that @xmath238 choose @xmath125 , then property   of l - reduction is also satisfied .",
    "we have obtained an l - reduction from to with @xmath126 .",
    "hazan , safra , and schwartz  @xcite showed that is np - hard to approximate within @xmath3 .",
    "it follows that is also np - hard to approximate within @xmath3 .",
    "this completes the proof of theorem  [ thm : msrd ] .",
    "in this section we prove theorem  [ thm:2d ] .",
    "we briefly review the two previous algorithms  @xcite for this problem .",
    "the first algorithm for is a simple heuristic due to zheng , zhu , and sankoff  @xcite :    1 .",
    "extract a set of pre - strips from the two genomic maps ; 2 .",
    "compute an independent set of strips from the pre - strips .",
    "this algorithm is inefficient because the number of pre - strips could be exponential in the sequence length , and furthermore the problem maximum - weight independent set in general graphs is np - hard .",
    "chen , fu , jiang , and zhu  @xcite presented a @xmath2-approximation algorithm for . for any @xmath1 , a _",
    "@xmath0-interval _ is the union of @xmath0 disjoint intervals in the real line , and a _ @xmath0-interval graph _ is the intersection graph of a set of @xmath0-intervals , with a vertex for each @xmath0-interval , and with an edge between two vertices if and only the corresponding @xmath0-intervals overlap .",
    "the @xmath2-approximation algorithm  @xcite works as follows :    1 .",
    "compose a set of @xmath0-intervals , one for each combination of @xmath0 substrings of the @xmath0 genomic maps , respectively .",
    "assign each @xmath0-interval a weight equal to the length of a longest common subsequence ( which may be reversed and negated ) in the corresponding @xmath0 substrings .",
    "2 .   compute a @xmath2-approximation for maximum - weight independent set in the resulting @xmath0-interval graph using bar - yehuda et  al.s fractional local - ratio algorithm  @xcite .",
    "let @xmath59 be the number of markers in each genomic map .",
    "then the number of @xmath0-intervals composed by this algorithm is @xmath239 because each of the @xmath0 genomic maps has @xmath240 substrings .",
    "consequently the running time of this algorithm can be exponential if the number @xmath0 of genomic maps is not a constant but is part of the input . in the following ,",
    "we show that if all markers are distinct in each genomic map ( as discussed earlier , this is a reasonable assumption in application ) , then the running time of the @xmath2-approximation algorithm can be improved to polynomial for all @xmath1 .",
    "this improvement is achieved by composing a smaller set of candidate @xmath0-intervals in step  1 of the algorithm .",
    "the idea is actually quite simple and has been used many times previously  @xcite .",
    "note that any strip of length @xmath241 is a concatenation of shorter strips of lengths @xmath169 and @xmath75 , for example , @xmath242 , @xmath243 , etc .",
    "since the objective is to maximize the total strip length , it suffices to consider only short strips of lengths @xmath169 and @xmath75 in the genomic maps , and to enumerate only candidate @xmath0-intervals that correspond to these strips .",
    "when each genomic map is a signed permutation of the same @xmath59 distinct markers , there are at most @xmath244 strips of lengths @xmath169 and @xmath75 , and for each strip there is a unique shortest substring of each genomic map that contains all markers in the strip .",
    "thus we compose only @xmath245 @xmath0-intervals , and improve the running time of the @xmath2-approximation algorithm to polynomial for all @xmath1 .",
    "this completes the proof of theorem  [ thm:2d ] .",
    "in this section we prove theorem  [ thm : cmsrd ] and theorem  [ thm : gap ] .    [ [ and - are - apx - hard . ] ]   and are apx - hard . + + + + + + + + + + + + + + + + + +    for any @xmath0 , the decision problems of and are equivalent .",
    "thus the np - hardness of @xmath246 implies the np - hardness of @xmath247 , although the apx - hardness of @xmath246 does not necessarily imply the apx - hardness of @xmath247 .",
    "note that the two problems and complement each other just as the two problems and complement each other .",
    "thus our np - hardness reduction from to in section  [ sec : msr3 ] can be immediately turned into an np - hardness reduction from to .",
    "we present an l - reduction @xmath118 from 3 to 3 as follows .",
    "the function @xmath36 , given a graph @xmath69 of maximum degree @xmath75 , constructs the three genomic maps @xmath140 as in the np - hardness reduction in section  [ sec : msr3 ] .",
    "let @xmath119 be the number of vertices in a maximum independent set in @xmath69 , and let @xmath120 be the maximum total strip length of any three subsequences of @xmath140 , respectively .",
    "also let @xmath248 be the number of vertices in a minimum vertex cover in @xmath69 , and let @xmath249 be the minimum number of markers that must be deleted to transform the three genomic maps @xmath140 into strip - concatenated subsequences",
    ". then @xmath250 and @xmath251 . by lemma  [ lem : iff3 ]",
    ", we have @xmath252 .",
    "it follows that @xmath253 choose @xmath122 , then property   of l - reduction is satisfied .",
    "the function @xmath37 , given three subsequences of the three genomic maps @xmath140 , respectively , transforms the subsequences into canonical form as in the proof of lemma  [ lem : canon3 ] , then returns a vertex cover in the graph @xmath69 corresponding to the deleted pairs of vertex markers .",
    "let @xmath40 be the number of deleted vertex markers , and let @xmath254 be the number of vertices in the vertex cover returned by the function @xmath37 . then @xmath255 .",
    "it follows that @xmath256 choose @xmath125 , then property   of l - reduction is also satisfied .",
    "the l - reduction from to can be obviously generalized :    [ lem : mvc ] let @xmath128 and @xmath257 .",
    "if there is a polynomial - time algorithm for decomposing any graph of maximum degree @xmath53 into @xmath258 linear forests , then there is an l - reduction from to with constants @xmath130 and @xmath131 .",
    "recall that there exist polynomial - time algorithms for decomposing a graph of maximum degree @xmath75 and @xmath73 into at most @xmath169 and @xmath75 linear forests , respectively  @xcite .",
    "thus we have an l - reduction from to and an l - reduction from to , with the same parameters @xmath130 , @xmath131 , and @xmath126 .",
    "chlebk and chlebkov  @xcite showed that and are np - hard to approximate within @xmath22 and @xmath23 , respectively .",
    "it follows that and are np - hard to approximate within @xmath22 and @xmath23 , respectively , too .",
    "the lower bound for extends to for all @xmath127 .",
    "note that we could use an l - reduction from to similar to the l - reduction from to in section  [ sec : msr4 ] , but that only gives us a weaker lower bound of @xmath22 for .",
    "[ [ is - apx - hard . ] ]   is apx - hard .",
    "+ + + + + + + + + + + + +    let @xmath163 and @xmath164 .",
    "we present an l - reduction @xmath118 from to as follows .",
    "the function @xmath36 , given the instance @xmath165 , constructs the two genomic maps @xmath86 and @xmath87 as in our np - hardness reduction in section  [ sec : msr2 ] . as before , let @xmath119 be the maximum number of clauses in @xmath60 that can be satisfied by an assignment of @xmath58 , and let @xmath120 be the maximum total strip length of any two subsequences of @xmath86 and @xmath87 , respectively .",
    "also let @xmath249 be the minimum number of deleted markers .",
    "then @xmath259 is exactly the number of markers in each genomic map , that is , @xmath171 . by lemma  [ lem : iff2 ]",
    ", we have @xmath216 .",
    "thus @xmath260 .",
    "since a random assignment of each variable independently to either true or false with equal probability @xmath213 satisfies each disjunctive clause of @xmath63 literals with probability @xmath214 , we have @xmath215 .",
    "recall that @xmath64 .",
    "it follows that @xmath261 for @xmath163 and @xmath225 , we can choose @xmath262 .",
    "then property   of l - reduction is satisfied .",
    "the function @xmath37 , given two subsequences of the two genomic maps @xmath86 and @xmath87 , transforms the subsequences into canonical form as in the proof of lemma  [ lem : canon2 ] , then returns an assignment of @xmath58 corresponding to the choices of true or false markers .",
    "let @xmath116 be the total strip length of the subsequences , and let @xmath40 be the number of deleted markers .",
    "let @xmath115 be the number of clauses in @xmath60 that are satisfied by this assignment",
    ". then @xmath263 choose @xmath125 .",
    "then property   of l - reduction is satisfied .",
    "berman and karpinski  @xcite showed that is np - hard to approximate within any constant less than @xmath227 . since @xmath264 , is np - hard to approximate within any constant less than @xmath265    [ [ an - asymptotic - lower - bound - for - and - a - lower - bound - for - with - unbounded - d . ] ] an asymptotic lower bound for and a lower bound for with unbounded @xmath0 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    chlebk and chlebkov  @xcite showed that for any @xmath56 , is np - hard to approximate within @xmath57 . by the second inequality in  , it follows that if @xmath266 , then @xmath267 . consequently , if @xmath268 , then @xmath56 .",
    "by lemma  [ lem : mvc ] , there is an l - reduction from to with @xmath122 and @xmath125 .",
    "therefore , for any @xmath20 , is np - hard to approximate within @xmath24 .",
    "the maximum degree @xmath53 of a graph of @xmath59 vertices is at most @xmath269 .",
    "again by the second inequality in  , we have @xmath270 .",
    "thus @xmath271 is bounded by a polynomial in @xmath59 . if @xmath0 is not a constant but is part of the input , then a straightforward generalization of the l - reduction from to as in lemma  [ lem : mvc ] gives an l - reduction from minimum vertex cover to with @xmath122 and @xmath125 .",
    "dinur and safra  @xcite showed that minimum vertex cover is np - hard to approximate within any constant less than @xmath25 .",
    "it follows that if @xmath0 is not a constant but is part of the input , then is np - hard to approximate within any constant less than @xmath25 .",
    "this completes the proof of theorem  [ thm : cmsrd ] .",
    "[ [ inapproximability - of - and- . ] ] inapproximability of and .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + +    it is easy to check that all instances of and in our constructions for theorem  [ thm : msrd ] and theorem  [ thm : cmsrd ] admit optimal solutions in canonical form with maximum gap @xmath169 , except for the following two cases :    1 .   in the l - reduction from to and ,",
    "a strip that is a pair of literal markers has a gap of @xmath272 , which is larger than @xmath169 for @xmath273 .",
    "2 .   in the l - reduction from to ,",
    "a strip that is a pair of edge markers may have an arbitrarily large gap if it corresponds to one of many hyper - edges that share a single vertex .",
    "to extend our results in theorem  [ thm : msrd ] and theorem  [ thm : cmsrd ] to the corresponding results in theorem  [ thm : gap ] , the first case does not matter because we set the parameter @xmath63 to @xmath169 when deriving the lower bounds for and from the lower bound for .",
    "the second case is more problematic , and we have to use a different l - reduction to obtain a slightly weaker asymptotic lower bound for .",
    "trevisan  @xcite showed that is np - hard to approximate within @xmath55 .",
    "by lemma  [ lem : mis ] , there is an l - reduction from to with @xmath126 . by the two inequalities in",
    ", we have @xmath274 . thus is np - hard to approximate within @xmath29 .",
    "this completes the proof of theorem  [ thm : gap ] .",
    "a strip of length @xmath116 has @xmath275 _ adjacencies _ between consecutive markers . in general , @xmath115 strips of total length @xmath116 have @xmath276 adjacencies .",
    "besides the total strip length , the total number of adjacencies in the strips is also a natural objective function of  @xcite .",
    "it can be checked that our l - reductions for and still work even if the objective function is changed from the total strip length to the total number of adjacencies in the strips .",
    "the only effect of this change is that the constant @xmath38 is halved and correspondingly the constant @xmath39 is doubled ( from @xmath277 to @xmath170 ) .",
    "since the product @xmath278 is unaffected , theorem  [ thm : msrd ] and the second part of theorem  [ thm : gap ] remain valid . for theorem  [ thm:2d ] , we can adapt the @xmath2-approximation algorithm for maximizing the total strip length to a @xmath279-approximation algorithm for maximizing the total number of adjacencies in strips , for any constant @xmath220 .",
    "the only change in the algorithm is to enumerate all @xmath0-intervals of strip lengths at most @xmath280 , instead of @xmath169 and @xmath75 .",
    "we note that the small difference between the two objective functions , total length versus total number of adjacencies , has led to difference in the complexities of two other bioinformatics problems  @xcite : for rna secondary structure prediction , the problem maximum stacking base pairs ( msbp ) maximizes the total length of helices , and the problem maximum base pair stackings ( mbps ) maximizes the total number of adjacencies in helices . on implicit input of base pairs determined by pair types ,",
    "msbp is polynomially solvable , but mbps is np - hard and admits a polynomial - time approximation scheme  @xcite ; on explicit input of base pairs , msbp and mbps are both np - hard , and admit constant approximations with factors @xmath281 and @xmath282 , respectively  @xcite .    in our theorem",
    "[ thm : msrd ] and theorem  [ thm : cmsrd ] , we have chosen to display explicit lower bounds for and , despite the fact that they are rather small and unimpressive . as commented by m. karpinski after the author s isaac presentation , it may be possible to improve the lower bound for by an l - reduction from another problem .",
    "for example , berman and karpinski  @xcite proved that is apx - hard to approximate within any constant less than @xmath65 by an l - reduction from e@xmath0-occ - e@xmath115-lin-@xmath169 , and proved that e@xmath0-occ - e@xmath115-lin-@xmath169 is np - hard to approximate within some other constant by an l - reduction from yet another problem , and so on . by constructing an l - reduction directly from e@xmath0-occ - e@xmath115-lin-@xmath169 to , say",
    ", we might obtain a better lower bound .",
    "we were not engaged in such pursuits in this paper . since",
    "satisfiability problems are well - known , we chose an l - reduction from to for the sake of a gentle presentation , and we made no effort in optimizing the constants .",
    "we proved theorem  [ thm : gap ] by extending our proofs of theorem  [ thm : msrd ] and theorem  [ thm : cmsrd ] with minimal modifications .",
    "we note that the @xmath26-gap constraint actually makes it easier to prove the apx - hardness of and than to prove the apx - hardness of and .",
    "for example , our constructions for and can be much simplified to obtain better approximation lower bounds for and .",
    "we omit the details and refer to  @xcite for more results on these restricted variants . on the other hand , the correctness of our reductions does require gaps of at least @xmath169 markers .",
    "thus our proofs do not imply the apx - hardness of or .",
    "consistent with our results , bulteau , fertin , and rusu  @xcite proved that is apx - hard for all @xmath27 and is np - hard for @xmath28 .",
    "a curious concept called _ paired approximation _ was recently introduced by eppstein  @xcite . for certain problems on the same input ,",
    "say clique and independent set on the same graph , sometimes we would be happy to find a good approximation to either one , if not both .",
    "inapproximability results for pairs of problems are often _ incompatible _ : the hard instances for one problem are disjoint from the hard instances for the other problem . as a result ,",
    "an approximation algorithm may find a solution to one or the other of two problems on the same input that is better than the known inapproximablity bounds for either individual problem .",
    "note that our inapproximability results for and are compatible because they are obtained from the same reduction from . thus even as a paired approximation problem , ( , )",
    "is still apx - hard .",
    "this is the first inapproximability result for a paired approximation problem in bioinformatics .",
    "the apx hardness results for and in theorem  [ thm : msrd ] was obtained in december 2008 .",
    "the author was later informed by binhai zhu in january 2009 that lusheng wang and he had independently and almost simultaneously proved a weaker result that is np - hard  @xcite .",
    "berman and m. karpinski : on some tighter inapproximability results , in _ proceedings of the 26th international colloquium on automata , languages and programming ( icalp99 ) _ , 1999 , lncs  1644 , pp .",
    "200209 .",
    "l. bulteau , g. fertin , and i. rusu : maximal strip recovery problem with gaps : hardness and approximation algorithms , in _ proceedings of the 20th international symposium on algorithms and computation ( isaac09 ) _ , 2009 , lncs  5878 , pp .",
    "710719 .",
    "v. choi , c. zheng , q. zhu , and d. sankoff : algorithms for the extraction of synteny blocks from comparative maps , in _ proceedings of the 7th international workshop on algorithms in bioinformatics ( wabi07 ) _ , 2007 , pp .",
    "277288 .",
    "m. jiang : on the parameterized complexity of some optimization problems related to multiple - interval graphs , in _ proceedings of the 21st annual symposium on combinatorial pattern matching ( cpm10 ) _ , 2010 , lncs  6129 , pp .",
    "125137 .",
    "l. wang and b. zhu : on the tractability of maximal strip recovery , in _ proceedings of the 6th annual conference on theory and applications of models of computation ( tamc09 ) _ , 2009 , lncs  5532 , pp .",
    "400409 .    c. zheng , q. zhu , and d. sankoff",
    ": removing noise and ambiguities from comparative maps in rearrangement analysis , _ ieee / acm transactions on computational biology and bioinformatics _ , * 4 * ( 2007 ) , 515522 ."
  ],
  "abstract_text": [
    "<S> in comparative genomic , the first step of sequence analysis is usually to decompose two or more genomes into syntenic blocks that are segments of homologous chromosomes . for the reliable recovery of syntenic blocks , noise and ambiguities in the genomic maps </S>",
    "<S> need to be removed first . </S>",
    "<S> maximal strip recovery ( msr ) is an optimization problem proposed by zheng , zhu , and sankoff for reliably recovering syntenic blocks from genomic maps in the midst of noise and ambiguities . </S>",
    "<S> given @xmath0 genomic maps as sequences of gene markers , the objective of is to find @xmath0 subsequences , one subsequence of each genomic map , such that the total length of syntenic blocks in these subsequences is maximized . </S>",
    "<S> for any constant @xmath1 , a polynomial - time @xmath2-approximation for was previously known . in this paper </S>",
    "<S> , we show that for any @xmath1 , is apx - hard , even for the most basic version of the problem in which all gene markers are distinct and appear in positive orientation in each genomic map . </S>",
    "<S> moreover , we provide the first explicit lower bounds on approximating for all @xmath1 . </S>",
    "<S> in particular , we show that is np - hard to approximate within @xmath3 . from the other direction , we show that the previous @xmath2-approximation for can be optimized into a polynomial - time algorithm even if @xmath0 is not a constant but is part of the input . </S>",
    "<S> we then extend our inapproximability results to several related problems including , , and .    </S>",
    "<S> * keywords : * computational complexity , bioinformatics , sequence analysis , genome rearrangement . </S>"
  ]
}
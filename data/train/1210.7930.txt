{
  "article_text": [
    "the graphics processing unit ( gpu ) has been an essential part of personal computers for decades .",
    "their role became much more important in the 90s when the era of 3d graphics in gaming started .",
    "one of the hallmarks of this is the violent first - person shooting game doom by the i d software company , released in 1993 . wandering around the halls of slaughter",
    ", it was hard to imagine these games leading to any respectable science .",
    "however , twenty years after the release of doom , the gaming industry of today is enormous , and the continuous need for more realistic visualizations has led to a situation where modern gpus have tremendous computational power . in terms of theoretical peak performance",
    ", they have far surpassed the central processing units ( cpu ) .",
    "the games started to have real 3d models and hardware acceleration in the mid 90s , but an important turning point for the scientific use of gpus for computing was around the first years of this millennium @xcite , when the widespread programmability of gpus was introduced .",
    "combined with the continued increase in computational power as shown in fig .",
    "[ fig : flops ] , the gpus are nowadays a serious platform for general purpose computing . also , the memory bandwidth in gpus is very impressive .",
    "the three main vendors for gpus , intel , nvidia , and ati / amd , are all actively developing computing on gpus . at the moment",
    ", none of the technologies listed above dominate the field , but nvidia with its cuda programming environment is perhaps the current market leader .          at this point",
    ", we have hopefully convinced the reader that gpus feature a powerful architecture also for general computing , but what makes gpus different from the current multi - core cpus ? to understand this , we can start with traditional graphics processing , where hardware vendors have tried to maximize the speed at which the pixels on the screen are calculated .",
    "these pixels are independent primitives that can be processed in parallel , and the number of pixels on computer displays has increased over the years from the original doom resolution of @xmath0 , corresponding to 64000 pixels , to millions . the most efficient way to process these primitives is to have a very large number of arithmetic logical units ( alus ) that are able to perform a high number of operations for each video frame .",
    "the processing is very data - parallel , and one can view this as performing the same arithmetic operation in parallel for each primitive . furthermore , as the operation is the same for each primitive , there is no need for very sophisticated flow control in the gpu and more transistors can be used for arithmetics , resulting in an enormously efficient hardware for performing parallel computing that can be classified as `` single instruction , multiple data '' ( simd ) .",
    "now , for general computing on the gpu , the primitives are no longer the pixels on the video stream , but can range from matrix elements in linear algebra to physics related cases where the primitives can be particle coordinates in classical molecular dynamics or quantum field values .",
    "traditional graphics processing teaches us that the computation would be efficient when we have a situation where the same calculation needs to be performed for each member of a large data set .",
    "it is clear that not all problems or algorithms have this structure , but there are luckily many cases where this applies , and the list of successful examples is long .",
    "however , there are also limitations on gpu computing . first of all , when porting a cpu solution of a given problem to the gpu , one might need to change the algorithm to suit the simd approach .",
    "secondly , the communication from the host part of the computer to the gpu part is limited by the speed of the pcie bus coupling the gpu and the host . in practice",
    ", this means that one needs to perform a serious amount of computing on the gpu between the data transfers before the gpu can actually speed up the overall computation .",
    "of course , there are also cases where the computation as a whole is done on gpu , but these cases suffer from the somewhat slower serial processing speed of the gpu .",
    "additional challenges in gpu computing include the often substantial programming effort to get a working and optimized code .",
    "while writing efficient gpu code has become easier due to libraries and programmer friendly hardware features , it still requires some specialized thinking .",
    "for example , the programmer has to be familiar with the different kinds of memory on the gpu to know how and when to use them .",
    "further , things like occupancy of the multiprocessors ( essentially , how full the gpu is ) and memory access patterns of the threads are something one has to consider to reach optimal performance . fortunately , each generation of gpus has alleviated the trouble of utilizing their full potential .",
    "for example , a badly aligned memory access in the first cuda capable gpus from nvidia could cripple the performance by drastically reducing the memory bandwidth , while in the fermi generation gpus the requirements for memory access coalescing are much more forgiving .",
    "particle dynamics simulation , often simply called molecular dynamics ( md ) , refers to the type of simulation where the behaviour of a complex system is calculated by integrating the equation of motion of its components within a given model , and its goal is to observe how some ensemble - averaged properties of the system originate from the detailed configuration of its constituent particles ( fig .",
    "[ fig : md1 ] ) .        in its classical formulation ,",
    "the dynamics of a system of particles is described by their newtonian equations : @xmath1 where @xmath2 is the particle s mass , @xmath3 its position , and @xmath4 is the interaction between the @xmath5-th and @xmath6-th particles as provided by the model chosen for the system under study .",
    "these second order differential equations are then discretised in the time domain , and integrated step by step until a convergence criterion is satisfied .",
    "the principles behind md are so simple and general that since its first appearance in the 70s , it has been applied to a wide range of systems , at very different scales . for example , md is the dominant theoretical tool of investigation in the field of biophysics , where structural changes in proteins @xcite and lipid bilayers @xcite interacting with drugs can be studied , ultimately providing a better understanding of drug delivery mechanisms .    at larger scales , one of the most famous examples",
    "is known as the _ millenium simulation _",
    ", where the dynamics of the mass distribution of the universe at the age of 380000 years was simulated up to the present day @xcite , giving an estimate of the age of cosmic objects such as galaxies , black holes and quasars , greatly improving our understanding of cosmological models and providing a theoretical comparison to satellite measurements .",
    "despite the simplicity and elegance of its formulation , md is not a computationally easy task and often requires special infrastructure .",
    "the main issue is usually the evaluation of all the interactions @xmath4 , which is the most time consuming procedure of any md calculation for large systems .",
    "moreover , the processes under study might have long characteristic time scales , requiring longer simulation time and larger data storage ; classical dynamics is chaotic , i.e. the outcome is affected by the initial conditions , and since these are in principle unknown and chosen at random , some particular processes of interest might not occur just because of the specific choice , and the simulation should be repeated several times . for these reasons ,",
    "it is important to optimise the evaluation of the forces as much as possible .",
    "an early attempt to implement md on the gpu was proposed in 2004 @xcite and showed promising performance ; at that time , general purpose gpu computing was not yet a well established framework and the n - body problem had to be formulated as a rendering task : a _ shader _ program computed each pair interaction @xmath4 and stored them as the pixel color values ( rbg ) in an @xmath7 texture .",
    "then , another shader would simply sum these values row - wise to obtain the total force on each particle and finally integrate their velocities and positions .",
    "the method is called all - pairs calculation , and as the name might suggest , it is quite expensive as it requires @xmath8 force evaluations .",
    "the proposed implementation was in no way optimal since the measured performance was about a tenth of the nominal value of the device , and it immediately revealed one of the main issues of the architecture that still persists nowadays : gpus can have a processing power exceeding the teraflop , but , at the same time , they are extremely slow at handling the data to process since a memory read can require hundreds of clock cycles .",
    "the reason for the bad performance was in fact the large amount of memory read instructions compared to the amount of computation effectively performed on the fetched data , but despite this limitation , the code still outperformed a cpu by a factor of 8 because every interaction was computed concurrently . a wide overview of optimisation strategies to get around the memory latency issues can be found in ref .",
    "@xcite , while , for the less eager to get their hands dirty , a review of available md software packages is included in ref .",
    "@xcite .    in the current gpu programming model",
    ", the computation is distributed in different threads , grouped together as blocks in a grid fashion , and they are allowed to share data and synchronise throughout the same block ; the hardware also offers one or two levels of cache to enhance data reuse , thus reducing the amount of memory accesses , without harassing the programmer with manual pre - fetching .",
    "a more recent implementation of the all - pair calculation @xcite exploiting the full power of the gpu can achieve a performance close to the nominal values , comparable to several cpu nodes .",
    "the present and more mature gpgpu framework allows for more elaborate kernels to fit in the device , enabling the implementation of computational tricks developed during the early days of md @xcite that make it possible to integrate n - body dynamics accurately with much better scaling than @xmath8 .",
    "for example , in many cases the inter - particle forces are short range , and it would be unnecessary to evaluate every single interaction @xmath4 since quite many of them would be close to zero and just be neglected .",
    "it is good practice to build lists of neighbours for each particle in order to speed up the calculation of forces : this also takes an @xmath8 operation , although the list is usually only recalculated every 100 - 1000 timesteps , depending on the average mobility of the particles .",
    "the optimal way to build neighbour lists is to divide the simulation box in voxels and search for a partcle s neighbours only within the adjacent voxels ( fig .",
    "[ fig : partition]a ) , as this procedure requires only @xmath9 instructions .",
    "performance can be further improved by sorting particles depending on the index of the voxel they belong , making neighbouring particles in space , to a degree , close in memory , thus increasing coalescence and cache hit rate on gpu systems ; such a task can be done with radix count sort @xcite in @xmath9 with excellent performance , and it was shown to be the winning strategy @xcite . unfortunately , most often the inter - particle interactions are not exclusively short range and can be significant even at larger distances ( electrostatic and gravitational forces ) . therefore , introducing an interaction cut - off leads to the wrong dynamics . for dense systems , such as bulk crystals or liquids ,",
    "the electrostatic interaction length largely exceeds the size of the simulation space , and in principle one would have to include the contributions from several periodic images of the system , although their sum is not always convergent .",
    "the preferred approach consists of calculating the electrostatic potential @xmath10 generated by the distribution of point charges @xmath11 from poisson s equation : @xmath12 the electrostatic potential can be calculated by discretising the charge distribution on a grid , and solving eq .",
    "[ eq : poisson ] with a fast fourier transform ( fft ) , which has @xmath13 complexity ( where @xmath14 is the amount of grid points ) : this approach is called particle - mesh ewald ( pme ) . despite being heavily non - local",
    ", much work has been done to improve the fft algorithm and make it cache efficient @xcite , so it is possible to achieve a 20-fold speed up over the standard cpu fftw or a 5-fold speedup when compared to a highly optimised mkl implementation . the more recent multilevel summation method ( msm )",
    "@xcite uses nested interpolations of progressive smoothing of the electrostatic potential on lattices with different resolutions , offering a good approximation of the electrostatic @xmath8 problem in just @xmath9 operations .",
    "the advantage of this approach is the simplicity of its parallel implementation , since it requires less memory communication among the nodes , which leads to a better scaling than the fft calculation in pme .",
    "the gpu implementation of this method gave a 25-fold speedup over the single cpu @xcite .",
    "equation [ eq : poisson ] can also be translated into a linear algebra problem using finite differences , and solved iteratively on multi - grids @xcite in theoretically @xmath15 operations .",
    "even though the method initially requires several iterations to converge , the solution does not change much in one md step and can be used as a starting point in the following step , which in turn will take much fewer iterations .    on the other hand , for sparse systems such as stars in cosmological simulations , decomposing the computational domain in regular boxes can be quite harmful because most of the voxels will be empty and some computing power and memory is wasted there . the optimal way to deal with such",
    "a situation is to subdivide the space hierarchically with an octree @xcite ( fig .",
    "[ fig : partition]b ) , where only the subregions containing particles are further divided and stored . finding neighbouring particles can be done via a traversal of the tree in @xmath16 operations .",
    "octrees are conventionally implemented on the cpu as dynamical data structures where every node contains reference pointers to its parent and children , and possibly information regarding its position and content .",
    "this method is not particularly gpu friendly since the data is scattered in memory as well as in the simulation space . in gpu implementations ,",
    "the non - empty nodes are stored as consecutive elements in an array or texture , and they include the indices of the children nodes @xcite .",
    "they were proved to give a good acceleration in solving the n - body problem @xcite .",
    "long range interactions are then calculated explicitly for the near neighbours , while the fast multipole method ( fmm ) @xcite can be used to evaluate contributions from distant particles .",
    "the advantage of representing the system with an octree becomes now more evident : there exists a tree node containing a collection of distant particles , which can be treated as a single multipole leading to an overall complexity @xmath9 .",
    "although the mathematics required by fmm is quite intensive to evaluate , the algorithms involved have been developed and extensively optimised for the gpu architecture @xcite , achieving excellent parallel performance even on large clusters @xcite .",
    "in all the examples shown here , the gpu implementation of the method outperformed its cpu counterpart : in many cases the speedup is only 4 - 5 fold when compared to a highly optimised cpu code , which seems , in a way , a discouraging result , because implementing an efficient gpu algorithm is quite a difficult task , requiring knowledge of the target hardware , and the programming model is not as intuitive as for a regular cpu .",
    "to a degree , the very same is true for cpu programming , where taking into account cache size , network layout , and details of shared / distributed memory of the target machine when designing a code leads to higher performance . these implementation difficulties could be eased by developing better compilers , that check how memory is effectively accessed and provide higher levels of gpu optimisation on older cpu codes automatically , hiding the complexity of the hardware specification from the programmer . in some cases , up to 100 fold speedups were measured , suggesting that the gpu is far superior . these cases might be unrealistic since the nominal peak performance of a gpu is around 5 times bigger than that of a cpu .",
    "therefore , it is possible that the benchmark is done against a poorly optimised cpu code , and the speedup is exaggerated . on the other hand ,",
    "gpus were also proven to give good scaling in mpi parallel calculations , as shown in refs . @xcite and @xcite .",
    "in particular , the amber code was extensively benchmarked in ref .",
    "@xcite , and it was shown how just a few gpus ( and even just one ) can outperform the same code running on 1024 cpu cores : the weight of the communication between nodes exceeds the benefit of having additional cpu cores , while the few gpus do not suffer from this latency and can deliver better performance , although the size of the computable system becomes limited by the available gpu memory .",
    "it has to be noted how gpu solutions , even offering a modest 4 - 5 fold speedup , do so at a lower hardware and running cost than the equivalent in cpus , and this will surely make them more appealing in the future . from the wide range of examples in computational physics ,",
    "it is clear that the gpu architecture is well suited for a defined group of problems , such as certain procedures required in md , while it fails for others .",
    "this point is quite similar to the everlasting dispute between raytracing and raster graphics : the former can explicitly calculate photorealistic images in complex scenes , taking its time ( cpu ) , while the latter resorts to every trick in the book to get a visually `` alright '' result as fast as possible ( gpu )",
    ". it would be best to use both methods to calculate what they are good for , and this sets a clear view of the future hardware required for scientific computing , where both simple vector - like processors and larger cpu cores could access the same memory resources , avoiding data transfer .",
    "density functional theory ( dft ) is a popular method for _ ab - initio _ electronic structure calculations in material physics and quantum chemistry . in the most commonly used dft formulation by kohn and sham @xcite",
    ", the problem of @xmath17 interacting electrons is mapped to one with @xmath17 non - interacting electrons moving in an effective potential so that the total electron density is the same as in the original many - body case @xcite . to be more specific ,",
    "the single - particle kohn - sham orbitals @xmath18 are solutions to the equation @xmath19 where the effective hamiltonian in atomic units is @xmath20 .",
    "the three last terms in the hamiltonian define the effective potential , consisting of the hartree potential @xmath21 defined by the poisson equation @xmath22 , the external ionic potential @xmath23 , and the exchange - correlation potential @xmath24 that contains all the complicated many - body physics the kohn - sham formulation partially hides . in practice ,",
    "the @xmath24 part needs to be approximated .",
    "the electronic charge density @xmath25 is determined by the kohn - sham orbitals as @xmath26 , where the @xmath27:s are the orbital occupation numbers .",
    "there are several numerical approaches and approximations for solving the kohn - sham equations .",
    "they relate usually to the discretization of the equations and the treatment of the core electrons ( pseudo - potential and all electron methods ) .",
    "the most common discretization methods in solid state physics are plane waves , localized orbitals , real space grids and finite elements .",
    "normally , an iterative procedure called self - consistent field ( scf ) calculation is used to find the solution to the eigenproblem starting from an initial guess for the charge density @xcite .",
    "porting an existing dft code to gpus generally includes profiling or discovering with some other method the computationally most expensive parts of the scf loop and reimplementing them with gpus .",
    "depending on the discretization methods , the known numerical bottlenecks are vector operations , matrix products , fast fourier transforms ( ffts ) and stencil operations .",
    "there are gpu versions of many of the standard computational libraries ( like cublas for blas and cufft for fftw ) .",
    "however , porting a dft application is not as simple as replacing the calls to standard libraries with gpu equivalents since the resulting intermediate data usually gets reused by non standard and less computationally intensive routines .",
    "attaining high performance on a gpu and minimizing the slow transfers between the host and the device requires writing custom kernels and also porting a lot of the non - intensive routines to the gpu .",
    "gaussian basis functions are a popular choice in quantum chemistry to investigate electronic structures and their properties .",
    "they are used in both dft and hartree - fock calculations .",
    "the known computational bottlenecks are the evaluation of the two - electron repulsion integrals ( eris ) and the calculation of the exchange - correlation potential .",
    "yasuda was the first to use gpus in the calculation of the exchange - correlation term @xcite and in the evaluation of the coulomb potential @xcite .",
    "the most complete work in this area was done by ufimtsev _",
    "et al._. they have used gpus in eris @xcite , in complete scf calculations @xcite and in energy gradients @xcite . compared to the mature gamess quantum chemistry package running on cpus , they were able to achieve speedups of more than 100 using mixed precision arithmetic in hf scf calculations .",
    "et al._. have also done an eri implementation on gpus using the uncontracted rys quadrature algorithm @xcite .",
    "the first complete dft code on gpus for solid state physics was presented by genovese _ et al._.",
    "they used double precision arithmetic and a daubechies wavelet based code called bigdft @xcite .",
    "the basic 3d operations for a wavelet based code are based on convolutions .",
    "they achieved speedups of factor 20 for some of these operations on a gpu , and a factor of 6 for the whole hybrid code using nvidia tesla s1070 cards .",
    "these results were obtained on a 12-node hybrid machine .    for solid state physics ,",
    "plane wave basis sets are the most common choice .",
    "the computational schemes rely heavily on linear algebra operations and fast fourier transforms .",
    "the vienna ab initio simulation package ( vasp ) @xcite is a popular code combining plane waves with the projector augmented wave method .",
    "the most time consuming part of optimizing the wave functions given the trial wave functions and related routines have been ported to gpus .",
    "speedups of a factor between 3 and 8 for the blocked davinson scheme @xcite and for the rmm - diis algorithm @xcite were achieved in real - world examples with fermi c2070 cards .",
    "parallel scalability with 16 gpus was similar to 16 cpus .",
    "additionally , hutchinson _",
    "et al . _ have done an implementation of exact - exchange calculations on gpus for vasp @xcite .",
    "quantum espresso @xcite is a electronic structure code based on plane wave basis sets and pseudo - potentials ( pp ) . for the gpu version @xcite , the most computationally expensive parts of the scf cycle were gradually transferred to run on gpus .",
    "ffts were accelerated by cufft , lapack by magma and other routines were replaced by cuda kernels .",
    "gemm operations were replaced by the parallel hybrid phigemm @xcite library .",
    "for single node test systems , running with nvidia tesla c2050 , speedups between 5.5 and 7.8 were achieved and for a 32 node parallel system speedups between 2.5 and 3.5 were observed .",
    "wand et al .",
    "@xcite and jia _",
    "et al._. @xcite have done an implementation for gpu clusters of a plane wave pseudo - potential code called petot .",
    "they were able to achieve speedups of 13 to 22 and parallel scalability up to 256 cpu - gpu computing units .",
    "gpaw @xcite is a density - functional theory ( dft ) electronic structure program package based on the real space grid based projector augmented wave method .",
    "we have used gpus to speed up most of the computationally intensive parts of the code : solving the poisson equation , iterative refinement of the eigenvectors , subspace diagonalization and orthonormalization of the wave functions .",
    "overall , we have achieved speedups of up to 15 on large systems and a good parallel scalability with up to 200 gpus using nvidia tesla m2070 cards @xcite .",
    "octopus @xcite is a dft code with an emphasis on the time - dependent density - functional theory ( tddft ) using real space grids and pseudo - potentials .",
    "their gpu version uses blocks of kohn - sham orbitals as basic data units .",
    "octopus uses gpus to accelerate both time - propagation and ground state calculations .",
    "finally , we would like to mention the linear response tamm - dancoff tddft implementation @xcite done for the gpu - based terachem code .",
    "quantum field theories are currently our best models for fundamental interactions of the natural world ( for a brief introduction to quantum field theories  or qfts  see for example @xcite or @xcite and references therein ) .",
    "common computational techniques include perturbation theory , which works well in quantum field theories as long as the couplings are small enough to be considered as perturbations to the free theory .",
    "therefore , perturbation theory is the primary tool used in pure qed , weak nuclear force and high momentum - transfer qcd phenomena , but it breaks up when the coupling constant of the theory ( the measure of the interaction strength ) becomes large , such as in low - energy qcd .    formulating the quantum field theory on a space - time lattice provides an opportunity to study the model non - perturbatively and use computer simulations to get results for a wide range of phenomena  it enables , for example , one to compute the hadronic spectrum of qcd ( see @xcite and references therein ) from first principles and provides solutions for many vital gaps left by the perturbation theory , such as structure functions of composite particles @xcite , form - factors @xcite and decay - constants @xcite",
    ". it also enables one to study and test models for new physics , such as technicolor theories @xcite and quantum field theories at finite temperature @xcite , @xcite or @xcite . for an introduction to lattice qft ,",
    "see for example @xcite , @xcite or @xcite .    simulating quantum field theories using gpus is not a completely new idea and early adopters even used opengl ( graphics processing library ) to program the gpus to solve lattice qcd @xcite .",
    "the early gpgpu programmers needed to set up a program that draws two triangles that fill the output texture of desired size by running a `` shader program '' that does the actual computation for each output pixel . in this program ,",
    "the input data could be then accessed by fetching pixels input texture(s ) using the texture units of the gpu . in lattice qft , where one typically needs to fetch the nearest neighbor lattice site values",
    ", this actually results in good performance as the texture caches and layouts of the gpus have been optimized for local access patterns for filtering purposes .",
    "the idea behind lattice qft is based on the discretization of the path integral solution to expectation values of time - ordered operators in quantum field theories .",
    "first , one divides spacetime into discrete boxes , called the lattice , and places the fields onto the lattice sites and onto the links between the sites , as shown in fig .",
    "[ fig : lattice ] .",
    "then , one can simulate nature by creating a set of multiple field configurations , called an _ ensemble _ , and calculate the values of physical observables by computing ensemble averages over these states .",
    "live on lattice sites , whereas the gauge fields @xmath28 live on the links connecting the sites .",
    "also depicted are the staples connecting to a single link variable that are needed in the computation of the gauge field forces . ]",
    "the set of states is normally produced with the help of a markov chain and in the most widely studied qft , the lattice qcd , the chain is produced by combining a _ molecular dynamics _",
    "algorithm together with a _ metropolis _ acceptance test .",
    "therefore , the typical computational tasks in lattice qfts are :    1 .   refresh generalized momentum variables from a heat bath ( gaussian distribution ) once per _ trajectory_. 2 .",
    "compute generalized forces for fields for each step 3 .   integrate classical equations of motion for the fields at each step 4 .",
    "perform a metropolis acceptance test at the end of the trajectory in order to achieve the correct limiting distribution .    in order to reach satisfying statistics ,",
    "normally thousands of these trajectories need to be generated and each trajectory is typically composed of 10 to 100 steps .",
    "the force calculation normally involves a matrix inversion , where the matrix indices run over the entire lattice and it is therefore the heaviest part of the computation .",
    "the matrix arises in simulations with dynamical fermions ( normal propagating matter particles ) and the simplest form for the fermion matrix is @xmath29_{x , y } \\qquad \\textrm{where } \\quad\\ ] ] @xmath30 here , @xmath31 is a constant related to the mass(es ) of the quark(s ) , @xmath32 is the _ kronecker delta function _",
    "( unit matrix elements ) , the sum goes over the spacetime dimensions @xmath33 , @xmath34 are 4-by-4 constant matrices and @xmath28 are the link variable matrices that carry the force ( gluons for example ) from one lattice site to the neighbouring one . in normal qcd",
    "they are 3-by-3 complex matrices .",
    "the matrix @xmath35 in the equation @xmath36 , where one solves for the vector @xmath37 with a given @xmath38 , is an almost diagonal sparse matrix with a _ predefined sparsity pattern_. this fact makes lattice qcd ideal for parallelization , as the amount work done by each site is constant .",
    "the actual algorithm used in the matrix inversion is normally some variant of the conjugate gradient algorithm , and therefore one needs fast code to handle the multiplication of a fermion vector by the fermion matrix .",
    "this procedure is the generation of the lattice configurations which form the ensemble .",
    "once the set of configurations @xmath39 $ ] has been generated with the statistical weight @xmath40}$ ] , where @xmath41 $ ] is the _",
    "euclidean action _",
    "( action in imaginary time formulation ) , the expectation value of an operator @xmath42 $ ] can be computed simply as @xmath43\\rangle \\approx         \\frac{1}{n}\\sum_{i=1}^n f[u_i],\\ ] ]    as lattice qfts are normally easily parallelizable , they fit well into the gpu programming paradigm , which can be characterized as parallel throughput computation .",
    "the conjugate gradient methods perform many fermion matrix vector multiplications whose arithmetic intensity ( ratio of floating point operations done per byte of memory fetched ) is quite low , making memory bandwidth the normal bottleneck within a single processor .",
    "parallelization between processors is done by standard mpi domain decomposition techniques .",
    "the conventional wisdom that this helps due to higher local volume to communication surface area ratio is actually flawed , as typically the gpu can handle a larger volume in the same amount of time , hence requiring the mpi - implementation to also take care of a larger surface area in the same time as with a cpu . in our experience ,",
    "gpu adoption is still in some sense in its infancy , as the network implementation seems to quickly become the bottleneck in the computation and the mpi implementations of running systems seem to have been tailored to meet the needs of the cpus of the system .",
    "another aspect of this is that normally the gpus are coupled with highly powered cpus in order to cater for the situation where the users use the gpus in just a small part of the program and need a lot of sequential performance in order to try to keep the serial part of the program up with the parallel part .",
    "the gpu also needs a lot of concurrent threads ( in the order of thousands ) to be filled completely with work and therefore good performance is only achievable with relatively large local lattice sizes .",
    "typical implementations assign one gpu thread per site , which makes parallelization easy and gives the compiler quite a lot of room to find instruction level parallelism , but in our experience this can result in a relatively high register pressure : the quantum fields living on the sites have many indices ( normally color and dirac indices ) and are therefore vectors or matrices with up to 12 complex numbers per field per site in the case of quark fields in normal qcd .",
    "higher parallelization can be achieved by taking advantage of the vector - like parallelism inside a single lattice site , but this may be challenging to implement in those loops where the threads within a site have to collaborate to produce a result , especially because gpus impose restrictions on the memory layout of the fields ( consecutive threads have to read consecutive memory locations in order to reach optimal performance @xcite ) . in a recent paper @xcite , the authors solve the _ gauge fixing _ problem by using overrelaxation techniques and they report an increase in performance by using multiple threads per site , although in this case the register pressure problem is even more pronounced and the effects of register spilling to the l1 cache were not studied .",
    "the lattice qcd community has a history of taking advantage of computing solutions outside the mainstream : the qcdsp @xcite computer was a custom machine that used digital signal processors to solve qcd with an order of one teraflop of performance .",
    "qcdoc @xcite used a custom imb powerpc - based asic and a multidimensional torus network , which later on evolved into the first version of the blue gene supercomputers @xcite .",
    "the ape collaboration has a long history of custom solutions for lattice qcd and is building custom network solutions for lattice qcd @xcite .",
    "for example , qcdpax @xcite was a very early parallel architecture used to study lattice qcd without dynamical fermions .",
    "currently , there are various groups using gpus to do lattice qft simulations .",
    "the first results using gpus were produced as early as 2006 in a study that determined the transition temperature of qcd @xcite .",
    "standardization efforts for high precision lattice qcd libraries are underway and the quda library @xcite scales to hundreds of gpus by using a local schwarz preconditioning technique , effectively eliminating all the gpu - based mpi communications for a significant portion of the calculation .",
    "they employ various optimization techniques , such as _ mixed - precision _ solvers , where parts of the inversion process of the fermion matrix is done at lower precision of floating point arithmetic and using reduced representations of the su3 matrices . scaling to multiple gpus",
    "can also be improved algorithmically : already a simple ( almost standard ) _ clover improvement _ @xcite term in the fermion action leads to better locality and of course improves the action of the model as well , taking the lattice formulation closer to the continuum limit . domain decomposition and taking advantage of restricted additive schwarz ( ras ) preconditioning using gpus",
    "was already studied in 2010 in @xcite , where the authors get the best performance on a @xmath44 lattice with vanishing overlap between the preconditioning domains and three complete ras iterations each containing just five iterations to solve the local system of @xmath45 sites .",
    "it should be noted though that the hardware they used is already old , so optimal parameters with up - to - date components could slightly differ .    very soon after starting to work with gpus on lattice qfts , one notices the effects of amdahl s law which just points out the fact that there is an upper bound for the whole program performance improvement related to optimizing just a portion of the program .",
    "it is quite possible that the fermion matrix inversion takes up 90% of the total computing time , but making this portion of the code run 10 times faster reveals something odd : now we are spending half of our time computing forces and doing auxiliary computations and if we optimize this portion of the code as well , we improve our performance by a factor of almost two again  therefore optimizing only the matrix inversion gives us a mere fivefold performance improvement instead of the promised order of magnitude improvement .",
    "authors of @xcite implemented practically the entire hmc trajectory on the gpu to fight amdahl s law and recent work @xcite on the qdp++ library implements _ just - in - time _ compilation to create gpu kernels on the fly to accommodate any non - performance critical operation over the entire lattice .",
    "work outside of standard lattice qcd using gpus includes the implementation of the neuberger - dirac overlap operator @xcite , which provides _ chiral symmetry _ at the expense of a non - local action .",
    "another group uses the arnoldi algorithm on a multi - gpu cluster to solve the overlap operator @xcite and shows scaling up to 32 gpus .",
    "quenched su2 @xcite and later quenched su2 , su3 and generic su(@xmath46 ) simulations using gpus are described in @xcite and even compact u(1 ) polyakov loops using gpus are studied in @xcite .",
    "scalar field theory  the so - called @xmath47 model  using amd gpus is studied in @xcite .",
    "the twqcd collaboration has also implemented almost the entire hmc trajectory computation with dynamical optimal domain wall fermions , which improve the chiral symmetry of the action @xcite .    while most of the groups use exclusively nvidia s cuda - implementation @xcite , which offers good reliability , flexibility and stability , there are also some groups using the opencl standard @xcite . a recent study @xcite showed better performance on amd gpus than on nvidia ones using opencl , although it should be noted that the nvidia gpus were consumer variants with reduced double precision throughput and that optimization was done for amd gpus .",
    "the authors of @xcite have implemented both cuda and opencl versions of their staggered fermions code and they report a slightly higher performance for cuda and for nvidia cards .",
    "all in all , lattice qft using gpus is turning from being a promising technology to a very viable alternative to traditional cpu - based computing . when reaching for the very best strong scaling performance  meaning best performance for small lattices ",
    "single threaded performance does matter if we assume that the rest of the system scales to remove other bottlenecks ( communication , memory bandwith . ) in these cases , it seems that currently the best performance is achievable through high - end supercomputers , such as the ibm blue gene / q @xcite , where the microprocessor architecture is actually starting to resemble more a gpu than a traditional cpu : the powerpc a2 chip has 16 in - order cores , each supporting 4 relatively light weight threads and a crossbar on - chip network .",
    "a 17th core runs the os functions and an 18th core is a spare to improve yields or take place of a damaged core .",
    "this design gives the powerpc a2 chip similar performance to power ratio as an nvidia tesla 2090 gpu , making blue gene / q computers very efficient .",
    "one of the main advantages of using gpus ( or gpu - like architectures ) over traditional serial processors is the increased performance per watt and the possibility to perform simulations on commodity hardware .",
    "the stochastic techniques based on markov chains and the metropolis algorithm showed great success in the field theory examples above .",
    "there are also many - body wave function methods that use the wave function as the central variable and use stochastic techniques for the actual numerical work .",
    "these quantum monte carlo ( qmc ) techniques have shown to be very powerful tools for studying electronic structures beyond the mean - field level of for example the density functional theory .",
    "a general overview of qmc can be found from @xcite .",
    "the simplest form of the qmc algorithms is the variational qmc , where a trial wave function with free parameters is constructed and the parameters are optimized , for example , to minimize the total energy @xcite .",
    "this simple strategy works rather well for various different systems , even for strongly interacting particles in an external magnetic field @xcite .",
    "there have been some works porting qmc methods to gpus . in the early work by amos g. anderson _",
    "@xcite , the overall speedup compared to the cpu was rather modest , from three to six , even if the individual kernels were up to 30 times faster .",
    "more recently , kenneth p. esler _ et al .",
    "_ @xcite have ported the qmcpack simulation code to the nvidia cuda gpu platform .",
    "their full application speedups are typically around 10 to 15 compared to a quad - core xeon cpu .",
    "this speedup is very promising and demonstrates the great potential gpu computing has for the qmc methods that are perhaps the computational technologies that are the mainstream in future electronic structure calculations .",
    "there are also many - body wave function methods that are very close to the quantum chemical methods .",
    "one example of these is the full configuration interaction method in chemistry that is termed exact diagonalization ( ed ) in physics .",
    "the activities in porting the quantum chemistry approaches to gpu are reviewed in @xcite , and we try to remain on the physics side of this unclear borderline .",
    "we omit , for example , works on the coupled cluster method on the gpu @xcite .",
    "furthermore , quantum mechanical transport problems are also not discussed here @xcite .",
    "lattice models @xcite are important for providing a general understanding of many central physical concepts like magnetism .",
    "furthermore , realistic materials can be cast to a lattice model @xcite .",
    "few - site models can be calculated exactly using the ed method .",
    "the ed method turns out to be very efficient on the gpu @xcite . in the simplest form of ed ,",
    "the first step is to construct the many - body basis and the hamiltonian matrix in it . then follows the most time - consuming part , namely the actual diagonalization of the hamiltonian matrix . in many cases ,",
    "one is mainly interested in the lowest eigenstate and possibly a few of the lowest excited states . for these",
    ", the lanczos algorithm turns out to be very suitable @xcite .",
    "the basic idea of the lanczos scheme is to map the huge but sparse hamiltonian matrix to a smaller and tridiagonal form in the so - called krylov space that is defined by the spanning vectors obtained from a starting vector @xmath48 by acting with the hamiltonian as @xmath49 .",
    "now , as the gpu is very powerful for the matrix - vector product , it is not surprising that high speedups compared to cpus can be found@xcite .",
    "the gpu has made a definite entry into the world of computational physics .",
    "preliminary studies using emerging technologies will always be done , but the true litmus test of a new technology is whether studies emerge where the new technology is actually used to advance science .",
    "the increasing frequency of studies that mention gpus is a clear indicator of this .    from the point of view of high performance computing in computational physics ,",
    "the biggest challenge facing gpus at the moment is scaling : in the strong scaling case , as many levels of parallelism as possible inherent in the problem should be exploited in order to reach the best performance with small local subsystems .",
    "the basic variables of the model are almost always vectors of some sort , making them an ideal candidate for simd type parallelism .",
    "this is often achieved with cpus with a simple compiler flag , which instructs the compiler to look for opportunities to combine independent instructions into vector operations .",
    "furthermore , large and therefore interesting problems from a hpc point of view are typically composed of a large number of similar variables , be it particles , field values , cells or just entries in an array of numbers , which hints at another , higher level of parallelism of the problem that traditionally has been exploited using mpi , but is a prime candidate for a data parallel algorithm .",
    "also , algorithmic changes may be necessary to reach the best possible performance : it may very well be that the best algorithm for cpus is no longer the best one for gpus",
    ". a classic example could be the question whether to use lookup tables of certain variables or recompute them on - the - fly .",
    "typically , on the gpu the flops are cheap making the recomputation an attractive choice whereas the large caches of the cpu may make the lookup table a better option .    on the other hand",
    ", mpi communication latencies should be minimized and bandwidth increased to accommodate the faster local solve to help with both weak and strong scaling . as far as we know",
    ", there are very few , if any , groups taking advantage of gpudirect v.2 for nvidia gpus @xcite , which allows direct gpu - to - gpu communications ( the upcoming gpudirect support for rdma will allow direct communications across network nodes ) reducing overhead and cpu synchronization needs .",
    "even gpudirect v.1 helps , as then one can share the _ pinned memory",
    "_ buffers between infiniband and gpu cards , removing the need to do extra local copies of data .",
    "the mpi implementations should also be scaled to fit the needs of the gpus connected to the node : currently the network bandwidth between nodes seems to be typically about two orders of magnitude lower than the memory bandwidth from the gpu to the gpu memory , which poses a challenge to strong scaling , limiting gpu applicability to situations with relatively large local problem sizes .",
    "another , perhaps an even greater challenge , facing gpus and similar systems is the ecosystem : currently a large portion of the developers and system administrators like to think of gpus and similar solutions as _ accelerators _  an accelerator is a component , which is attached to the main processor and used to speed up certain portions of the code , but as these `` accelerators '' become more and more agile with wider support for standard algorithms , the term becomes more and more irrelevant as a major part of the entire computation can be done on the `` accelerator '' and the original `` brains '' of the machine , the cpu , is mainly left there to take care of administrative functions , such as disk io , common os services and control flow of the program .",
    "as single threaded performance has reached a local limit , all types of processors are seeking more performance out of parallelism : more cores are added and vector units are broadened .",
    "this trend , fueled by the fact that transistor feature sizes keep on shrinking , hints at some type of convergence in the near future , but exactly what it will look like is anyone s best guess .",
    "at least in computational physics , it has been shown already that the scientists are willing to take extra effort in porting their code to take advantage of massively parallel architectures , which should allow them to do the same work with less energy and do more science with the resources allocated to them",
    ".    the initial programming effort does raise a concern for productivity : how much time and effort is one willing to spend to gain a certain amount of added performance ? obviously , the answer depends on the problem itself , but perhaps even more on the assumed direction of the industry  a wrong choice may result in wasted effort if the chosen solution simply does not exist in five years time .",
    "fortunately , what seems to be clear at the moment , is the overall direction of the industry towards higher parallelism , which means that a large portion of the work needed to parallelize a code for a certain parallel architecture will most probably be applicable to another parallel architecture as well , reducing the risk of parallelization beyond the typical mpi level .",
    "the answer to what kind of parallel architectures will prevail the current turmoil in the industry may depend strongly on consumer behavior , since a large part of the development costs of these machines are actually subsidized by the development of the consumer variants of the products .",
    "designing a processor only for the hpc market is too expensive and a successful product will need a sister or at least a cousin in the consumer market .",
    "this brings us back to doom and other performance - hungry games : it may very well be that the technology developed for the gamers of today , will be the programming platform for the scientists of tomorrow",
    ".      we would like to thank kari rummukainen , adam foster , risto nieminen , martti puska , and ville havu for all their support .",
    "topi siro acknowledges the financial support from the finnish doctoral programme in computational sciences fics .",
    "this research has been partly supported by the academy of finland through its centres of excellence program ( project no .",
    "251748 ) and by the academy of finland project no . 1134018 .",
    "springel , v. , white , s.d.m . , jenkins , a. , frenk , c.s . , yoshida , n. , gao , l. , navarro , j. , thacker , r. , croton , d. , helly , j. , peacock , j.a .",
    ", cole , s. , thomas , p. , couchman , h. , evrard , a. , colberg , j. , pearce , f. : simulations of the formation , evolution and clustering of galaxies and quasars .",
    "435*(7042 ) ( 2005 ) 629636              kipfer , p. , segal , m. , westermann , r. : uberflow : a gpu - based particle engine . in : proceedings of the acm siggraph / eurographics conference on graphics hardware .",
    "hwws 04 , new york , ny , usa , acm ( 2004 ) 115122        anderson , j.a . ,",
    "lorenz , c.d .",
    ", travesset , a. : general purpose molecular dynamics simulations fully implemented on graphics processing units .",
    "journal of computational physics *",
    "227*(10 ) ( 2008 ) 5342  5359    moreland , k. , angel , e. : the fft on a gpu .",
    "in : proceedings of the acm siggraph / eurographics conference on graphics hardware .",
    "hwws 03 , aire - la - ville , switzerland , switzerland , eurographics association ( 2003 ) 112119      gu , l. , li , x. , siegel , j. : an empirically tuned 2d and 3d fft library on cuda gpu . in : proceedings of the 24th acm international conference on supercomputing .",
    "ics 10 , new york , ny , usa , acm ( 2010 ) 305314      ahmed , m. , haridy , o. : a comparative benchmarking of the fft on fermi and evergreen gpus . in : performance analysis of systems and software ( ispass ) , 2011 ieee international symposium on . ( 2011 ) 127 128        goodnight , n. , woolley , c. , lewin , g. , luebke , d. , humphreys , g. : a multigrid solver for boundary value problems using programmable graphics hardware . in : acm siggraph 2005 courses .",
    "siggraph 05 , new york , ny , usa , acm ( 2005 )    mcadams , a. , sifakis , e. , teran , j. : a parallel multigrid poisson solver for fluids simulation on large grids . in : proceedings of the 2010 acm siggraph",
    "/ eurographics symposium on computer animation .",
    "sca 10 , aire - la - ville , switzerland , switzerland , eurographics association ( 2010 ) 6574    meagher , d. : octree encoding : a new technique for the representation , manipulation and display of arbitrary 3-d objects by computer .",
    "rensselaer polytechnic institute .",
    "image processing laboratory ( 1980 )        hamada , t. , narumi , t. , yokota , r. , yasuoka , k. , nitadori , k. , taiji , m. : 42 tflops hierarchical n - body simulations on gpus with applications in both astrophysics and turbulence . in : proceedings of the conference on high performance computing networking , storage and analysis .",
    "sc 09 , new york , ny , usa , acm ( 2009 ) 62:162:12            takahashi , t. , cecka , c. , fong , w. , darve , e. : optimizing the multipole - to - local operator in the fast multipole method for graphical processing units . international journal for numerical methods in engineering * 89*(1 ) ( 2012 ) 105133      gtz , a.w . , williamson , m.j .",
    ", xu , d. , poole , d. , le  grand , s. , walker , r.c .",
    ": routine microsecond molecular dynamics simulations with amber on gpus .",
    "1 . generalized born .",
    "journal of chemical theory and computation * 8*(5 ) ( 2012 ) 15421555        payne , m.c . ,",
    "teter , m.p . ,",
    "allan , d.c . , arias , t.a . ,",
    "joannopoulos , j.d .",
    ": iterative minimization techniques for _ ab initio _ total - energy calculations : molecular dynamics and conjugate gradients .",
    "* 64 * ( oct 1992 ) 10451097            luehr , n. , ufimtsev , i.s . ,",
    "martinez , t.j .",
    ": dynamic precision for electron repulsion integral evaluation on graphical processing units ( gpus ) .",
    "journal of chemical theory and computation * 7*(4 ) ( 2011 ) 949954      ufimtsev , i.s . ,",
    "martinez , t.j .",
    ": quantum chemistry on graphical processing units .",
    "analytical energy gradients , geometry optimization , and first principles molecular dynamics .",
    "journal of chemical theory and computation * 5*(10 ) ( 2009 ) 26192628    asadchev , a. , allada , v. , felder , j. , bode , b.m . ,",
    "gordon , m.s . ,",
    "windus , t.l . : uncontracted rys quadrature implementation of up to g functions on graphical processing units .",
    "journal of chemical theory and computation * 6*(3 ) ( 2010 ) 696704    genovese , l. , ospici , m. , deutsch , t. , mhaut , j.f . ,",
    "neelov , a. , goedecker , s. : density functional theory calculation on many - cores hybrid central processing unit - graphic processing unit architectures .",
    "the journal of chemical physics * 131*(3 ) ( 2009 ) 034103    genovese , l. , neelov , a. , goedecker , s. , deutsch , t. , ghasemi , s.a . ,",
    "willand , a. , caliste , d. , zilberberg , o. , rayson , m. , bergman , a. , schneider , r. : daubechies wavelets as a basis set for density functional pseudopotential calculations .",
    "the journal of chemical physics * 129*(1 ) ( 2008 ) 014109        hacene , m. , anciaux - sedrakian , a. , rozanska , x. , klahr , d. , guignon , t. , fleurat - lessard , p. : accelerating vasp electronic structure calculations using graphic processing units .",
    "journal of computational chemistry ( 2012 ) n / a  n / a      giannozzi , p. , baroni , s. , bonini , n. , calandra , m. , car , r. , cavazzoni , c. , ceresoli , d. , chiarotti , g.l .",
    ", cococcioni , m. , dabo , i. , corso , a.d . , de  gironcoli , s. , fabris , s. , fratesi , g. , gebauer , r. , gerstmann , u. , gougoussis , c. , kokalj , a. , lazzeri , m. , martin - samos , l. , marzari , n. , mauri , f. , mazzarello , r. , paolini , s. , pasquarello , a. , paulatto , l. , sbraccia , c. , scandolo , s. , sclauzero , g. , seitsonen , a.p . , smogunov , a. , umari , p. , wentzcovitch , r.m . :",
    "quantum espresso : a modular and open - source software project for quantum simulations of materials .",
    "journal of physics : condensed matter * 21*(39 ) ( 2009 ) 395502      spiga , f. , girotto , i. : : a cpu - gpu library for porting quantum espresso on hybrid systems . in : parallel , distributed and network - based processing ( pdp ) , 2012",
    "20th euromicro international conference on .",
    "2012 ) 368 375    wang , l. , wu , y. , jia , w. , gao , w. , chi , x. , wang , l.w . : large scale plane wave pseudopotential density functional theory calculations on gpu clusters . in : proceedings of 2011 international conference for high performance computing , networking , storage and analysis . sc 11 , new york , ny , usa , acm ( 2011 ) 71:171:10    jia , w. , cao , z. , wang , l. , fu , j. , chi , x. , gao , w. , wang , l.w .",
    ": the analysis of a plane wave pseudopotential density functional theory code on a gpu machine .",
    "computer physics communications * 184*(1 ) ( 2013 ) 9  18    enkovaara , j. , rostgaard , c. , mortensen , j.j . , chen , j. , duak , m. , ferrighi , l. , gavnholt , j. , glinsvad , c. , haikola , v. , hansen , h.a . , kristoffersen , h.h . ,",
    "kuisma , m. , larsen , a.h . ,",
    "lehtovaara , l. , ljungberg , m. , lopez - acevedo , o. , moses , p.g . ,",
    "ojanen , j. , olsen , t. , petzold , v. , romero , n.a .",
    ", stausholm - mller , j. , strange , m. , tritsaris , g.a . ,",
    "vanin , m. , walter , m. , hammer , b. , hkkinen , h. , madsen , g.k.h . ,",
    "nieminen , r.m . , nrskov , j.k . ,",
    "puska , m. , rantala , t.t . ,",
    "schitz , j. , thygesen , k.s . , jacobsen , k.w .",
    ": electronic structure calculations with gpaw : a real - space implementation of the projector augmented - wave method .",
    "journal of physics : condensed matter * 22*(25 ) ( 2010 ) 253202    hakala , s. , havu , v. , enkovaara , j. , nieminen , r.m . : parallel electronic structure calculations using multiple graphics processing units ( gpus ) . in : lecture notes in computer science .",
    "para 2012 , springer - verlag ( 2013 )    castro , a. , appel , h. , oliveira , m. , rozzi , c.a . , andrade , x. , lorenzen , f. , marques , m.a.l . , gross , e.k.u . , rubio , a. : : a tool for the application of time - dependent density functional theory .",
    "physica status solidi ( b ) * 243*(11 ) ( 2006 ) 24652488    andrade , x. , alberdi - rodriguez , j. , strubbe , d.a . ,",
    "oliveira , m.j.t . , nogueira , f. , castro , a. , muguerza , j. , arruabarrena , a. , louie , s.g . , aspuru - guzik , a. , rubio , a. , marques , m.a.l . : time - dependent density - functional theory in massively parallel computer architectures : the octopus project .",
    "journal of physics : condensed matter * 24*(23 ) ( 2012 ) 233202    isborn , c.m . ,",
    "luehr , n. , ufimtsev , i.s . ,",
    "martinez , t.j .",
    ": excited - state electronic structure with configuration interaction singles and and tamm - dancoff time - dependent density functional theory on graphical processing units .",
    "journal of chemical theory and computation * 7*(6 ) ( 2011 ) 18141823            alexandrou , c. , brinet , m. , carbonell , j. , constantinou , m. , guichon , p. , et  al . : . in : proceedings of the xxist international europhysics conference on high energy physics .",
    "july 21 - 27 2011 .",
    "grenoble , rhones alpes france .",
    "volume eps - hep2011 .",
    "( 2011 ) 308                          , d. , christ , n.h . , cristian , c. , dong , z. , gara , a. , garg , k. , joo , b. , kim , c. , levkova , l. , liao , x. , mawhinney , r.d . ,",
    "ohta , s. , wettig , t. : .",
    "nuclear physics b proceedings supplements * 94 * ( march 2001 ) 825832      , r. , biagioni , a. , frezza , o. , lo cicero , f. , lonardo , a. , paolucci , p.s . , petronzio , r. , rossetti , d. , salamon , a. , salina , g. , simula , f. , tantalo , n. , tosoratto , l. , vicini , p. : . in : proceedings of the xxviii international symposium on lattice field theory .",
    "june 14 - 19,2010 .",
    "villasimius , sardinia italy .",
    "( 2010 )    shirakawa , t. , hoshino , t. , oyanagi , y. , iwasaki , y. , yoshie , t. : qcdpax - an mimd array of vector processors for the numerical simulation of quantum chromodynamics . in : proceedings of the 1989 acm / ieee conference on supercomputing .",
    "supercomputing 89 , new york , ny , usa , acm ( 1989 ) 495504      babich , r. , clark , m.a . , jo , b. , shi , g. , brower , r.c . , gottlieb , s. : scaling lattice qcd beyond 100 gpus . in : proceedings of 2011 international conference for high performance computing , networking , storage and analysis .",
    "sc 11 , new york , ny , usa , acm ( 2011 ) 70:170:11                                          , a.w.g . , walker , r.c .",
    ": chapter 2 - quantum chemistry on graphics processing units . in wheeler ,",
    "r.a . , ed . :",
    "annual reports in computational chemistry .",
    "volume  6 of annual reports in computational chemistry .",
    "elsevier ( 2010 ) 21  35            meredith , j.s . ,",
    "alvarez , g. , maier , t.a . ,",
    "schulthess , t.c . ,",
    "vetter , j.s . :",
    "accuracy and performance of graphics processors : a quantum monte carlo application case study .",
    "parallel computing * 35*(3 ) ( 2009 ) 151  163"
  ],
  "abstract_text": [
    "<S> the use of graphics processing units for scientific computations is an emerging strategy that can significantly speed up various algorithms . in this review , we discuss advances made in the field of computational physics , focusing on classical molecular dynamics and quantum simulations for electronic structure calculations using the density functional theory , wave function techniques and quantum field theory . </S>"
  ]
}
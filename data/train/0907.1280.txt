{
  "article_text": [
    "an instance of the _ terrain guarding problem _ contains a terrain @xmath2 that is an @xmath1-monotone polygonal chain .",
    "an @xmath1-monotone chain in @xmath3 is a chain that intersects any vertical line at most once .",
    "the terrain is given by its set of vertices @xmath4 , where @xmath5 .",
    "the vertices are ordered such that @xmath6 .",
    "there is an edge connecting each @xmath7 pair where @xmath8 .",
    "we say a point @xmath9 on the terrain _ sees _ another point @xmath10 on the terrain if the line segment @xmath11 is never strictly below the terrain @xmath2 .",
    "a set @xmath0 of points on the terrain is called a _ guarding set _ if every point on the terrain is seen by some point in @xmath0 .",
    "the optimization version of the terrain guarding problem is the problem of finding a minimum guarding set for a given terrain .",
    "there are two standard versions of the terrain guarding problem : a discrete version and a continuous version .",
    "the discrete version allows us to place guards only at the vertices of the terrain .",
    "the continuous version , which we have defined above , allows guards to be placed anywhere on the terrain . in other versions",
    "a subset of points on the terrain to guard is given with the input .",
    "motivation for guarding terrains comes from scenarios that include covering a road with street lights or security cameras .",
    "other applications include finding a configuration for line - of - sight transmission networks for radio broadcasting , cellular telephony and other communication technologies @xcite .",
    "the complexity of terrain guarding has been an open problem of interest since 1995 , when an np - completeness proof was proposed but never completed by chen _",
    "_ @xcite . with the problem s hardness",
    "strongly suspected but not known , a series of approximation algorithms have been developed over the last decade .",
    "the first constant factor approximation for the terrain guarding problem was shown by ben - moshe _ et al .",
    "_ in @xcite .",
    "clarkson and varadarajan also give a constant factor approximation in @xcite .",
    "a 4-approximation was proposed by king in @xcite but further analysis increased the approximation factor to 5 .",
    "a 4-approximation was given by elbassioni _",
    "_ in @xcite .",
    "recently a ptas was given by gibson _",
    "et al . _ in @xcite . with the knowledge that the problem is not apx - complete , it is of even greater interest",
    "whether or not it is np - complete , and this has been reiterated with each approximation algorithm developed .    the terrain guarding problem is closely related to the _ art gallery problem _ that involves guarding the interior of a polygon .",
    "the basic version of the art gallery problem is that of _ vertex guarding _ a simple polygon , where we are given a simple polygon and we wish to find the smallest subset of the vertices that see the entire polygon .",
    "the _ point guarding _ version allows guards to be placed anywhere inside the polygon .",
    "the art gallery problem was shown to be np - complete by lee and lin in @xcite .",
    "along with being np - complete , the art gallery problem was shown to be apx - hard in @xcite .",
    "this means that there exists a constant @xmath12 such that no polynomial time algorithm can guarantee an approximation ratio of @xmath13 unless @xmath14 .",
    "ghosh provides a @xmath15-approximation for the problem of vertex guarding an @xmath16-vertex simple polygon @xcite .",
    "the point guarding problem seems to be much harder than the vertex guarding problem and precious little is known about it @xcite .",
    "a restricted version of the point guarding problem where the polygon is @xmath1-monotone has been shown to have an @xmath17-approximation by nilsson in @xcite . based on his result nilsson also provides a @xmath18 approximation for rectilinear polygons .",
    "straightforward attempts to show np - hardness for the terrain guarding problem run up against the large amount of restriction in the complexity of terrains . by far",
    "the most significant restriction is given by the following claim first noted by ben - moshe _ et al .",
    "_ @xcite :    let @xmath19 be four points on the terrain in increasing order of @xmath1-coordinates . if @xmath20 sees @xmath21 and @xmath22 sees @xmath23 , then @xmath20 sees @xmath23 .",
    "the order claim is crucially exploited by all approximation algorithms for the problem . in this paper",
    "we develop a construction that overcomes the order claim obstacle and shows that the terrain guarding problem is np - hard .",
    "therefore , an exact polynomial time algorithm is not possible unless @xmath24 .",
    "the np - hardness result is shown for the standard discrete and continuous variants of the problem .",
    "according to demaine and orourke @xcite , the complexity of the terrain guarding problem was posed by ben - moshe .",
    "we quote from @xcitewhat is the complexity of computing the guard set of minimum size for a given x - monotone chain in the plane ? according to the poser , ``",
    "most tenured professors think the problem is np - hard . ''",
    "this problem in fact goes back to 1995 , when chen _ et al . _",
    "@xcite claimed an np - hardness result , but `` the proof , whose details were omitted , was never completed successfully '' @xcite . _",
the remainder of the paper is organized as follows .",
    "our reduction is from planar 3sat and is overviewed in section 2 .",
    "section 3 describes the gadgets used in the reduction and section 4 provides a conclusion and future work .",
    "the interested reader can see an example of a full reduction in appendix c.",
    "the initial reduction will be for the discrete terrain guarding problem where both the set of guards and the set of points to be guarded are a finite subset of the terrain .",
    "we give a reduction from the planar 3sat problem .",
    "this problem was shown to be np - complete in @xcite .",
    "planar 3sat is defined as follows : let @xmath25 be an instance of 3sat , with variable set @xmath26 and clauses @xmath27 such that each clause consists of exactly three distinct literals . define a _ formula graph _",
    "@xmath28 with vertex set @xmath29 and edges @xmath30 where @xmath31 , and @xmath32 .",
    "a 3sat formula @xmath33 is called _ planar _ if the corresponding formula graph @xmath34 is planar .",
    "the edge set @xmath35 defines a cycle on the vertices @xmath36 , and thus divides the plane into exactly 2 faces .",
    "each node @xmath37 lies in exactly one of those two faces .",
    "we have to determine whether there exists an assignment of truth values to the variables in @xmath36 that satisfies all the clauses in the @xmath38 .",
    "it is easy to see that the clauses inside the variable cycle can be generated by performing a sequence @xmath39 of steps starting with @xmath40 where at each step we do one of the following until @xmath41 becomes empty :    1 .",
    "delete a variable from sequence @xmath41 and call the resulting variable sequence @xmath41 .",
    "2 .   generate a clause using three consecutive variables in @xmath41 and delete the middle variable from @xmath41 .",
    "call the resulting variable sequence @xmath41 .",
    "similarly there is a different sequence @xmath42 of steps starting from @xmath43 that generates all clauses outside the variable cycle .",
    "the interested reader can see appendix c for an illustration of this sequence .",
    "the terrain @xmath2 constructed by our reduction is shaped like a valley .",
    "a coarse view of the terrain can be seen in figure [ fig : overview ] .",
    "we identify disjoint pieces of the terrain called _ chunks_. even indexed chunks , @xmath44 @xmath45 , are on the left side of the terrain and odd indexed chunks , @xmath46 , are on the right side of the terrain .",
    "chunks @xmath47 are used to `` implement '' the sequence @xmath39 .",
    "chunks @xmath48 are used to `` implement '' the sequence @xmath42 .",
    "recall that we are considering the discrete terrain guarding problem ; we have a finite set of guards .",
    "chunks contain _ distinguished points _ which are the points to be guarded in our reduction .",
    "chunks also contain a set of potential guard locations .",
    "distinguished points and the set of potential guard locations will be defined in section 3 .",
    "corresponding to each even chunk , @xmath49 is a subsequence @xmath50 of the sequence of variables @xmath51 .",
    "there will be @xmath52 guard locations , one for each of the @xmath52 literals corresponding to the variables in @xmath50 literals .",
    "most chunks have 2 literals corresponding to 1 variable ; certain chunks may have 4 literals corresponding to 1 variable . ]",
    ". we will refer to these guard locations by the corresponding literal names .",
    "location @xmath1 and @xmath53 corresponding to a variable @xmath1 are consecutive on the chunk but either may be to the left or right of the other .",
    "the left to right ordering of literals in a chunk @xmath49 corresponding to different variables is according to @xmath50 if @xmath54 is even .",
    "if @xmath54 is odd , the right to left ordering of the literals corresponding to different variables is according to @xmath50 .    associated with each chunk @xmath49 will be a number @xmath55 . _ in the reduction , @xmath55 guards will be needed within chunk @xmath49 to see distinguished points in @xmath49 .",
    "if less than @xmath55 guards are placed in chunk @xmath49 , no matter how many guards are placed elsewhere , certain distinguished points in chunk @xmath49 will go unseen .",
    "_ for @xmath56 , @xmath57 , the literal locations are @xmath58 and @xmath59 . to guard @xmath56 using @xmath60 guards",
    ", we will have to place exactly @xmath16 guards at exactly @xmath16 of the literal locations , with one guard for each variable or its complement .",
    "note that such a placement of guards specifies an assignment to the variables .",
    "@xmath61 are used to implement the sequence @xmath39 , as we now describe .",
    "suppose that we have added chunks @xmath62 to implement steps @xmath63 of @xmath39 .",
    "let @xmath64 refer to the sequence @xmath41 after step @xmath65 .",
    "by construction , chunk @xmath49 will have @xmath66 .",
    "suppose @xmath67 is a step in which we delete variable @xmath1 from @xmath64 .",
    "chunk @xmath68 will have @xmath69 .",
    "we will have @xmath70 , and @xmath71 .",
    "the relationship between @xmath49 and @xmath68 will be what we call a _ deletion _ , which has the following property : to guard @xmath49 and @xmath68 using @xmath72 guards , it is necessary that we have :    1 .",
    "exactly @xmath73 guards at the literals within @xmath68 , one for each variable so that this corresponds to an assignment to the variables in @xmath74 ; 2 .",
    "exactly @xmath75 guards at the literals within @xmath49 , one for each variable so that this corresponds to an assignment to the variables in @xmath50 ; 3 .",
    "the location of the guards must be consistent for all variables except @xmath1 : there is a guard at literal @xmath76 in @xmath49 if and only if there is a guard at literal @xmath76 in @xmath68 .",
    "suppose that @xmath67 is a clause step involving the variables @xmath77 and @xmath78 .",
    "this requires up to two applications of an _ inversion gadget _ followed by a _",
    "clause gadget_. an inversion involving a variable @xmath1 uses three chunks @xmath49 , @xmath68 , and @xmath79 .",
    "its purpose is to change the left to right ordering of literals @xmath1 and @xmath53 in @xmath79 to be opposite of that in @xmath49 .",
    "if the relationship between @xmath80 and @xmath79 is an inversion corresponding to @xmath1 , then @xmath81 is the same as @xmath50 .",
    "we have @xmath75 , @xmath82 , and @xmath83 .",
    "to guard @xmath80 and @xmath79 using @xmath84 guards , it is necessary that we have :    1 .",
    "@xmath83 guards for @xmath79 , one for each variable , as above ; 2 .",
    "@xmath85 guards for @xmath68 ; 3 .",
    "@xmath75 guards for @xmath49 , one for each variable ; 4 .",
    "the location of the guards must be consistent for all variables : there is a guard at literal @xmath76 in @xmath49 if and only if there is a guard at literal @xmath76 in @xmath79 .",
    "suppose that @xmath67 is a clause step involving @xmath86 .",
    "the variables @xmath77 and @xmath78 must occur consecutively in either left to right or right to left order in @xmath49 ; it must also be the case that the literal @xmath53 , the two literals corresponding to @xmath76 and the literal @xmath87 occur consecutively in either left to right or right to left order in @xmath49 , see figure [ fig : clauseex ] .",
    "recall that @xmath67 also deletes the middle variable @xmath76 . by construction ,",
    "chunk @xmath49 will have @xmath66 .",
    "chunk @xmath68 will have @xmath88 .",
    "we have @xmath75 and @xmath73 .",
    "the relationship between @xmath49 and @xmath68 will be what we call a _ clause gadget _",
    ", which has the following property : to guard @xmath49 and @xmath68 using @xmath72 guards , it is necessary that we have :    1 .",
    "@xmath73 guards for @xmath68 , one for each variable ; 2 .",
    "@xmath75 guards for @xmath49 , one for each variable ; 3 .",
    "the location of the guards must must be consistent for all variables except @xmath76 : there is a guard at literal @xmath20 in @xmath49 if and only if there is a guard at literal @xmath20 in @xmath68 ; 4 .",
    "there is a guard in @xmath49 at one of @xmath53 , @xmath76 , or @xmath87 .",
    "similar actions are done to build the chunks @xmath89 for the @xmath42 sequence .",
    "our discussion implies that chunks @xmath90 can be guarded with @xmath91 guards if and only if we have a satisfying assignment to the planar 3sat formula @xmath33 .",
    "the location of the guards in chunk @xmath56 will tell us the truth value for each variable",
    ". our construction will be such that if @xmath33 is satisfiable , then @xmath91 guards are _ sufficient _ for seeing all distinguished points .",
    "this will establish np - hardness .",
    "the following subsections describe the gadgets introduced in section 2 . in section 3.1 , we begin by describing the shape of a chunk and the location of the literals corresponding to a variable . in section 3.2 , we describe the basic gadget relating two chunks called the _",
    "mirror gadget_. subsequently , we modify the mirror gadget to obtain the deletion gadget , the inversion gadget , and the clause gadget",
    ". we will refer to the construction of chunks @xmath92 as `` going down '' from @xmath56 , and the construction of chunks @xmath93 as `` going up '' from @xmath56 .",
    "take an arbitrary variable @xmath1 in an even chunk @xmath49 .",
    "guard locations in @xmath49 to the right of @xmath1 will be considered `` below '' @xmath1 and guard locations in @xmath49 placed to the left of @xmath1 will be considered `` above '' @xmath1 . with odd chunks , guard locations to the left",
    "are considered below and guard locations to the right are considered above . for example , in figure [ fig : clauseex ] , @xmath94 is above @xmath1 ; @xmath76 is below @xmath1 .",
    "the first gadget we will describe is the _",
    "variable gadget_. an example of a variable gadget for @xmath20 in chunk @xmath49 is shown in figure [ fig : var ] .",
    "the variable gadget has a _",
    "variable distinguished point _",
    ", @xmath23 , _ that can be seen from only two vertices : the literals @xmath20 and @xmath95 vertices_. the following is what we will refer to as the _ uniqueness claim _",
    ":    no guard can see more than 1 variable distinguished point .    because of the _ uniqueness claim _ , the total number of variable distinguished points provides a lower bound on the number of guards that are necessary to guard all of the distinguished points .    to see how multiple variables are placed ,",
    "assume a chunk @xmath49 has @xmath96 .",
    "figure [ fig : clauseex ] shows how variable gadgets corresponding to each variable are placed within the chunk .",
    "chunk @xmath56 has @xmath16 such variable gadgets , 1 for each variable . in figure",
    "[ fig : clauseex ] , @xmath97 guards are required to guard the @xmath97 variable distinguished points because of the _ uniqueness claim_.    [ [ local - summary - of - variable - gadgets ] ] local summary of variable gadgets : + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    to guard the variable distinguished point @xmath23 for a variable @xmath20 in chunk @xmath49 , at least @xmath98 guard must be placed at the literal @xmath20 or @xmath95 location in @xmath49 .",
    "going down , chunks @xmath49 and @xmath68 can form what we call a mirror gadget . here",
    ", we will have @xmath70 , @xmath99 , and @xmath71 .",
    "the relationship between @xmath49 and @xmath68 will be what we call a _ mirroring _ , which has the following property : to guard @xmath49 and @xmath68 using @xmath72 guards , it is necessary that we have :    1 .",
    "exactly @xmath100 guards at the literals within @xmath68 , one for each variable so that this corresponds to an assignment to the variables in @xmath74 ; 2 .",
    "exactly @xmath101 guards at the literals within @xmath49 , one for each variable so that this corresponds to an assignment to the variables in @xmath50 ; 3 .",
    "the location of the guards must be consistent for all variables : there is a guard at literal @xmath76 in @xmath49 if and only if there is a guard at literal @xmath76 in @xmath68 .    to describe the mirroring for @xmath98 variable , let us first focus on a variable gadget corresponding to a variable @xmath22 in chunks @xmath49 and @xmath68 , see figure [ fig : mirrorup ] .",
    "we introduce the notion of _ mirrored distinguished points _ corresponding to @xmath22 in @xmath68 . in figure [",
    "fig : mirrorup ] , mirrored distinguished points are @xmath1 and @xmath102 .",
    "@xmath103 is the literal @xmath22 in chunk @xmath49 . @xmath104 and @xmath103 both see our mirrored distinguished point @xmath102 but neither see @xmath1 .",
    "@xmath105 and @xmath106 both see @xmath1 but neither see @xmath102 .",
    "this leads us to the following lemma :    [ lemmamirrorup ] for two guards to see the variable distinguished points in @xmath49 and @xmath68 corresponding to a variable @xmath22 and the mirrored distinguished points corresponding to variable @xmath22 in @xmath68 , it is necessary and sufficient to place guards at the literal @xmath22 locations in both chunks or guards at the literal @xmath107 locations in both chunks .",
    "since we have two variable gadgets for @xmath22 , the _ uniqueness claim _ states that two guards are necessary to guard the variable distinguished points for @xmath22 in @xmath49 and @xmath68 .",
    "we claim two guards are sufficient to guard the mirrored and variable distinguished points in @xmath68 and variable distinguished points in @xmath49 .",
    "we must choose one guard from @xmath108 and one guard from @xmath109 .",
    "if we place a guard at @xmath103 , @xmath1 is not seen .",
    "since @xmath104 does not see @xmath1 , we must place a guard at @xmath105 .",
    "similar arguments can be made if we choose @xmath106 first .    mirroring up uses a similar proof .",
    "if a guard is placed at @xmath105 , a guard must be placed at @xmath103 so that @xmath102 is seen . similarly with @xmath104 and @xmath106 .",
    "we see in figure [ fig : interfere ] how variable gadgets are constructed to ensure a guard placed in one variable gadget does not see the distinguished points of a different variable gadget .",
    "let us say that @xmath110 and @xmath103 belong to chunk @xmath49 .",
    "@xmath111 and @xmath105 belong to chunk @xmath68 . to ensure that guards placed at a literal for one variable does not affect the mirroring of another variable , in other words @xmath10",
    "should be seen by only @xmath112 and @xmath110 and by no other guards in @xmath49 and @xmath68 , similarly @xmath113 should be seen by only @xmath111 and @xmath114 and by no other guards in @xmath49 and @xmath68 , the following are also true .",
    "the line defined by @xmath10 and @xmath115 hits the terrain at point @xmath110 .",
    "since we know @xmath114 does not see @xmath10 , a guard placed at @xmath110 or @xmath114 in chunk @xmath49 will not see any of @xmath22 s distinguished points in @xmath49 or @xmath68 .",
    "in other words , @xmath115 blocks @xmath110 from seeing below variable gadget @xmath20 in @xmath49 and @xmath68 . in general , a guard placed at either literal for @xmath116 will not see any of the mirrored or variable distinguished points of different variables below ( to the right of ) the variable gadget for @xmath116 and also below ( to the left of ) the variable gadget for @xmath117 .    neither @xmath103 nor @xmath106 can see @xmath10 or @xmath113 ensuring @xmath22 in @xmath49 does not affect any of @xmath20 s distinguished points in @xmath68 .",
    "the line defined by @xmath113 and @xmath111 passes just above @xmath110 and hits the terrain just below @xmath114 . because of this no guard placed below this line can see @xmath113 .",
    "the line defined by @xmath10 and @xmath115 hits the terrain at point @xmath110 . in figure 5 ,",
    "the terrain coming out of @xmath10 to the left of @xmath10 is drawn on this line .",
    "therefore no guard below this line can see @xmath10 .",
    "in general , no guard below ( to the right of ) the variable gadget for @xmath116 can see @xmath10 or @xmath113 nor can any guard below ( to the left of ) the variable gadget for @xmath117 see @xmath10 or @xmath113 .",
    "note that the visibilities do not disrupt the order claim .",
    "[ [ local - summary - of - mirroring - gadget - c_ic_i1-going - down ] ] local summary of mirroring gadget @xmath49@xmath68 going down : + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    to guard the variable distinguished points and mirrored distinguished points of @xmath68 and the variable distinguished points of @xmath49 with @xmath72 guards , it is necessary and sufficient to place @xmath55 guards at literals in @xmath49 and @xmath85 guards at literals in @xmath68 in a consistent way .    for mirroring up",
    ", the picture is exactly the same as above , but we proceed in the opposite direction .",
    "note that lemma [ lemmamirrorup ] says that if we have a guard at @xmath111 , the second guard is forced to be at @xmath110 .",
    "similarly for @xmath112 and @xmath114 .",
    "[ [ local - summary - of - mirroring - gadget - c_i1c_i - going - up ] ] local summary of mirroring gadget @xmath68@xmath118 going up : + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    to guard the variable distinguished points and mirrored distinguished points of @xmath68 and the variable distinguished points of @xmath49 with @xmath72 guards , it is necessary and sufficient to place @xmath55 guards at literals in @xmath49 and @xmath85 guards at literals in @xmath68 in a consistent way .",
    "a deletion of a variable @xmath1 going down from chunk @xmath49 to chunk @xmath68 involves flattening out the terrain in chunk @xmath68 where the variable gadget for @xmath1 would have been placed .",
    "the interested reader can read a full description of deletion in appendix a.    [ [ local - summary - of - deletion - gadget - c_ic_i1-going - down ] ] local summary of deletion gadget @xmath49@xmath68 going down : + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    to guard the variable distinguished points and mirrored distinguished points of @xmath68 and the variable distinguished points of @xmath49 with @xmath72 guards , it is necessary and sufficient to place @xmath55 guards at literals in @xmath49 and @xmath85 guards at literals in @xmath68 in a consistent way .",
    "[ [ local - summary - of - deletion - gadget - c_i1c_ic_i-1-going - up ] ] local summary of deletion gadget @xmath68@xmath49@xmath119 going up : + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    to guard the variable distinguished points and mirrored distinguished points of @xmath68 and @xmath49 , and the variable distinguished points of @xmath119 with @xmath120 guards , it is necessary and sufficient to place @xmath85 guards at literals in @xmath68 and @xmath55 guards at literals in @xmath49 , and @xmath121 guards at literals in @xmath119 in a consistent way .",
    "let us say the clause we are constructing is @xmath122 , see figure [ fig : clausedown ] .",
    "we will have @xmath123 , @xmath124 .",
    "the total number of guards needed within @xmath49 and @xmath68 will be @xmath72 .",
    "we will replace the middle variable gadget @xmath22 in @xmath68 with our clause gadget . in chunk @xmath49 , the left to right ordering of literals if @xmath54 is even ( right to left if @xmath54 is odd ) must be exactly @xmath125",
    ". we will assume the ordering is correct when placing a clause gadget .",
    "section 3.6 will show how to make a change if the ordering is incorrect . in figure",
    "[ fig : clausedown ] , @xmath94 is our _ clause distinguished point_. we can manipulate the @xmath22 variable gadget in @xmath49 so that @xmath22 or @xmath107 is blocked from seeing @xmath94 . in this case , @xmath22 is moved further down so it does not see @xmath94 .",
    "the original use of the @xmath115 point was to block a potential guard placed at the @xmath116 guard location from seeing mirrored distinguished points below ( to the left of ) the @xmath20 variable gadget in @xmath68 . in this case however , we want @xmath116 to see @xmath126 .",
    "we move our @xmath115 point towards the mirrored distinguished point of @xmath116 so that the guard location for @xmath116 sees @xmath126 .",
    "it should be noted that our mirroring of @xmath20 is not disrupted with this modification .",
    "this modification now allows @xmath116 to see @xmath126 , which then allows @xmath20 to see @xmath94 .",
    "note that the visibilities do not disrupt the order claim .",
    "we also note that @xmath127 does not see @xmath94 .",
    "we then adjust the @xmath128 line segment by moving @xmath94 slightly upwards so that @xmath94 sees @xmath129 . a ray shot from @xmath94 through @xmath126 will hit the terrain in chunk @xmath49 at point @xmath130 so that @xmath21 in @xmath49 does not see @xmath94 .",
    "it should be noted that the mirroring down of @xmath20 and @xmath21 are still intact ; we are still able to mirror the values of @xmath20 and @xmath21 down the terrain .",
    "if neither @xmath116 nor @xmath131 nor @xmath129 is chosen as a guard location , we require an extra guard to see @xmath94 .",
    "however if one of these literals is chosen to be a guard , our clause distinguished point @xmath94 is guarded and no extra guard is needed .",
    "we also note that @xmath22 will no longer be used in any future clauses going downward .",
    "the reduction from planar 3sat allows us to order the clauses in a certain way to ensure that the middle variable will no longer be used in future clauses going down the terrain . for detailed information on how the clauses are ordered",
    ", the interested reader can see appendix c. because of this ordering , we can safely replace the @xmath22 variable gadget in @xmath68 with a clause gadget .    [ [ local - summary - of - clause - gadget - c_ic_i1-going - down ] ] local summary of clause gadget @xmath49@xmath68 going down : + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    to guard the variable distinguished points , clause distinguished point and mirrored distinguished points of @xmath68 and the variable distinguished points of @xmath49 with @xmath72 guards , it is necessary and sufficient to place @xmath55 guards at literals in @xmath49 and @xmath85 guards at literals in @xmath68 in a consistent way .",
    "note that if a guard is placed at @xmath20 or @xmath107 or @xmath130 in chunk @xmath49 , our clause distinguished point is seen and no additional guard is required .      the upward clause gadget uses similar arguments as the downward clause gadget .",
    "the interested reader can read a full description of the upward clause gadget in appendix b.    [ [ local - summary - of - clause - gadget - c_ic_i-1c_i-2-going - up ] ] local summary of clause gadget @xmath49@xmath119@xmath132 going up : + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    to guard the variable distinguished points , clause distinguished point and mirrored distinguished points of @xmath119 , the variable distinguished points of @xmath132 and the variable and mirrored distinguished points of @xmath49 with @xmath133 guards , it is necessary and sufficient to place @xmath55 guards at literals in @xmath49 and @xmath121 guards at literals in @xmath119 and @xmath134 guards at literals in @xmath132 in a consistent way .",
    "note that if a guard is placed at @xmath20 in @xmath132 or @xmath107 in @xmath119 or @xmath130 in @xmath132 , our clause distinguished point is seen and no additional guard is required .",
    "the left to right ( right to left ) ordering of literals becomes important when placing a clause gadget and it is possible that the literals are `` out of order . '' in a regular mirroring of variable @xmath20 , the left to right order of @xmath20 and @xmath95 will be the same in all even chunks , similarly with all odd chunks . to switch the order , we make use of an inversion gadget .",
    "let us consider chunks @xmath135 when an inversion gadget is being placed to invert a variable , see figure [ fig : invert ] .",
    "we will have @xmath136 , @xmath137 , @xmath138 and @xmath139 .",
    "the total number of guards needed will be @xmath133 . the @xmath20 literal in @xmath132 is to the right of @xmath95 in @xmath132 . using the inversion gadget in @xmath119",
    ", we can swap the left to right ordering of the @xmath20 and @xmath95 literal so that @xmath20 in @xmath49 is to the left of @xmath95 in @xmath49 .      in figure",
    "[ fig : invert ] , the variable gadget for @xmath20 in chunk @xmath119 is replaced with an inversion gadget .",
    "the inversion gadget adds two literal locations for variable @xmath20 in @xmath119 , namely @xmath140 and @xmath141 .",
    "the variable and mirrored distinguished points of @xmath142 are being replaced with five inversion distinguished points .",
    "these five _ inversion distinguished points _ are : @xmath143 . @xmath144 and @xmath145",
    "should be thought of as `` mirrored distinguished points '' since they are seen by guards inside chunk @xmath119 and by the @xmath20 and @xmath95 literal guard locations in chunk @xmath132 .",
    "@xmath146 and @xmath147 are the replacement `` variable distinguished points . ''",
    "they are replacement variable distinguished points in the sense that no guard outside of the inversion gadget for @xmath20 in @xmath119 can see them .",
    "more importantly , @xmath146 and @xmath147 are considered replacement `` variable distinguished points '' because they obey the _ uniqueness claim_.",
    "@xmath146 is only seen by @xmath142 and @xmath148 .",
    "@xmath147 is only seen by @xmath149 and @xmath150 .",
    "the @xmath1 point is the special inversion distinguished point that allows the inversion to take place .",
    "the important visibilities are given here : @xmath142 sees @xmath146 and @xmath126 ; @xmath148 sees @xmath146 , @xmath144 and @xmath1 ; @xmath150 sees @xmath1 , @xmath145 and @xmath147 ; @xmath149 sees @xmath147 and @xmath151 ; @xmath152 sees @xmath144 ; and @xmath153 sees @xmath145 . although not entirely obvious from the figure , it s important to note a ray shot from @xmath149 through @xmath142 hits the terrain to the left of @xmath154 .",
    "these visibilities do not disrupt the order claim .",
    "because of the _ uniqueness claim _ , it is necessary that we place @xmath97 guards to see the variable distinguished points of @xmath155 and @xmath132 .",
    "if we place the @xmath97 guards in a consistent manner , the mirrored distinguished points of @xmath49 and the inversion distinguished points of @xmath119 will also be seen .",
    "we will only concern ourselves with the inversion of @xmath20 and ignore the other variables being mirrored .",
    "the other variables are being mirrored without consequence .",
    "we will assume we already have a guard at @xmath152 or @xmath153 .",
    "because of the _ uniqueness claim _ , it is necessary that we place @xmath156 guards to see the remaining `` variable distinguished points '' of @xmath146 and @xmath147 and also the variable distinguished point of @xmath116 .",
    "if we place the remaining @xmath156 guards in a consistent manner , the remaining distinguished points of @xmath157 and @xmath151 will also be seen .",
    "we note that we need to place one guard at @xmath116 or @xmath127 to see the variable distinguished point for @xmath116 .",
    "this leaves two guards to be placed to see the remaining `` variable distinguished points '' of @xmath146 and @xmath147 .    using the example in figure [ fig : invert ]",
    ", let us say @xmath152 was chosen to be a guard .",
    "we know at least @xmath98 guard must be placed at @xmath116 or @xmath127 to see the variable distinguished point of @xmath20 in @xmath49 leaving @xmath158 guards to see the unguarded inversion distinguished points : @xmath159 and @xmath147 .",
    "let us first consider who can guard @xmath145 .",
    "the only 2 guards that see @xmath145 are @xmath150 and @xmath153 .",
    "if we place a guard at @xmath153 , one of the `` variable distinguished points '' of @xmath146 or @xmath147 will go unseen .",
    "therefore we must choose to place our guard at @xmath150 .",
    "we have one guard left to place in the inversion gadget that must see @xmath146 . in order to see both @xmath126 and @xmath151",
    ", we must place our guard at @xmath142 .",
    "the only other choice is @xmath148 but this guard does not see @xmath126 or @xmath151",
    ". placing a guard at @xmath142 leaves @xmath151 and the variable distinguished point of @xmath116 unguarded .",
    "@xmath116 is chosen to be a guard and the inversion is complete .",
    "similar arguments are made showing that if @xmath153 is chosen , then @xmath148 , @xmath149 and @xmath149 must be chosen .",
    "[ [ local - summary - of - inversion - gadget - c_i-2c_i-1c_i - going - down ] ] local summary of inversion gadget @xmath132@xmath119@xmath49 going down : + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    to guard the variable distinguished points and mirrored distinguished points of @xmath49 , the variable , mirrored and inversion distinguished points of @xmath119 and the variable distinguished points of @xmath132 with @xmath133 guards , it is necessary and sufficient to place @xmath55 guards at literals in @xmath49 , @xmath121 guards in @xmath119 , and @xmath134 guards at literals in @xmath132 in a consistent way .",
    "if variable @xmath20 is being inverted , the left to right ordering of the literals @xmath20 and @xmath95 in @xmath132 are opposite of that in @xmath49 .",
    "similar arguments are used to show the inversion going up .",
    "we will have @xmath160 , @xmath161 , @xmath138 and @xmath139 .",
    "the total number of guards needed will be @xmath133 .",
    "[ [ local - summary - of - inversion - gadget - c_ic_i-1c_i-2-going - down ] ] local summary of inversion gadget @xmath49@xmath119@xmath132 going down : + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    to guard the variable distinguished points and mirrored distinguished points of @xmath49 , the variable , mirrored and inversion distinguished points of @xmath119 and the variable distinguished points of @xmath132 with @xmath133 guards , it is necessary and sufficient to place @xmath55 guards at literals in @xmath49 , @xmath121 guards in @xmath119 , and @xmath134 guards at literals in @xmath132 in a consistent way .",
    "if variable @xmath20 is being inverted , the left to right ordering of the literals @xmath20 and @xmath95 in @xmath132 are opposite of that in @xmath49 .",
    "having completed the construction , we see that for every chunk @xmath49 we need @xmath55 points placed within the chunk just to guard the variable distinguished points within the chunk .",
    "this is given by the _",
    "uniqueness claim_. we now observe that the local summary of any gadget holds good in a global sense , that is , it is independent of how guards are placed in chunks outside this gadget .",
    "we illustrate this by summarizing a mirror gadget using chunks @xmath49 and @xmath68 going down . the reader may find it useful to compare with the local summary in section 3.2 .",
    "[ [ global - summary - of - mirroring - gadget - c_ic_i1-going - down ] ] global summary of mirroring gadget @xmath49@xmath68 going down : + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    to guard the variable distinguished points and mirrored distinguished points of @xmath68 and the variable distinguished points of @xmath49 with @xmath55 guards in @xmath49 and @xmath85 guards in @xmath68 , it is necessary to place @xmath55 guards at literals in @xmath49 and @xmath85 guards at literals in @xmath68 in a consistent way .",
    "this necessity holds good for _ any _ placement of guards in locations outside @xmath49 and @xmath68 .",
    "the local sufficiency condition obviously holds good for any placement of guards outside @xmath49 and @xmath68 .",
    "what this stronger condition means , in the context of figure [ fig : interfere ] , is that @xmath112 and @xmath110 are the only guard locations that see @xmath10 among _ all possible _ guard locations on the terrain . similarly for points",
    "@xmath162 and @xmath163 . the argument for why this holds is the same as the one made for guard locations within @xmath49 and @xmath68 .",
    "having completed the entire construction , we are only now in a position to state this global property .",
    "the `` necessary '' parts of each of the gadgets are similarly modified to hold in a global sense .",
    "each chunk @xmath49 in our construction needs @xmath55 guards within it .",
    "because of the _ uniqueness claim _ , the terrain we construct needs at least @xmath91 guards just to see all of the variable distinguished points .",
    "our construction ensures that if the distinguished points can be seen by @xmath91 guards , then the input formula must be satisfiable .",
    "in particular , the assignment for the variables chosen by the @xmath60 points in chunk @xmath56 must be consistently mirrored to all chunks and the clause distinguished points must be seen . if the input formula is satisfiable , picking a satisfying assignment and propagating it through our gadgets in the natural way results in a set of @xmath91 guards that see all of the distinguished points .",
    "thus the proof of np - hardness is thus completed .",
    "discrete terrain guarding is np - hard .      using the same construction",
    ", it can be shown that the continuous version of the terrain guarding problem is also np - hard .",
    "we argue that the entire terrain can be seen by @xmath91 guards if and only if the input formula is satisfiable .",
    "the _ uniqueness claim _ holds true despite guards being able to be placed anywhere on the terrain ; since there are @xmath55 variable distinguished points in chunk @xmath54 , it follows that @xmath91 are necessary for seeing the entire terrain .",
    "we now argue that if @xmath91 see the entire terrain , they can be assumed to be in guard locations from the earlier reduction . from this",
    ", it follows that the formula is satisfiable .",
    "referring to figure [ fig : var ] , the only potential guards that see @xmath23 are points on a line segment @xmath164 and points on a line segment @xmath165 .",
    "let s say we pick a guard @xmath166 on the line segment @xmath164 .",
    "@xmath95 will see every point that @xmath166 does .",
    "if we choose @xmath166 as our guard , we can simply move our guard to @xmath95 without any loss of visibility .",
    "similar arguments can be said about @xmath20 and the line segment @xmath165 .",
    "therefore , we assume that any guard placed in the sub - terrain @xmath167 is either at @xmath20 or @xmath95 . in particular",
    ", the only potential guards for @xmath23 are @xmath20 and @xmath95 .",
    "simiarly arguments are made for the `` variable distinguished points '' in the inversion gadget .",
    "therefore the _ uniqueness claim _ holds true in the continuous version ; in other words the lower bound on the number of guards necessary to guard the variable distinguished points is the same in the continuous version as in the discrete version .",
    "if the formula is satisfiable , @xmath91 guards will see the entire terrain if the guards are placed in satisfying locations . clearly the distinguished points are all seen .",
    "it can be shown that the terrain within the chunks is seen .",
    "the `` empty space '' outside of the chunks is also seen . for any 2 chunks @xmath49 and @xmath132 where @xmath168 , any guard in chunk @xmath119 will see the `` empty space '' between @xmath49 and @xmath132 because of the order claim .",
    "the `` empty space '' above chunk @xmath169 is seen by the guard placed at the literal for the last deleted variable in chunk @xmath170 .",
    "the `` top '' of the terrain is drawn in such a way that a guard placed for the last variable being deleted while `` going up '' will see the highest part of the terrain in chunk @xmath170 . as for the `` bottom '' of the terrain , the terrain can be slightly modified between chunk @xmath171 to @xmath172 so that the terrain connecting those two chunks is seen by the only two remaining literals in chunk @xmath171 .",
    "the entire terrain is thus seen .",
    "we have shown that terrain guarding is np - hard . with the ptas for terrain guarding given by gibson et al .",
    "@xcite , this essentially resolves the approximability of the problem .",
    "the biggest remaining question regarding the complexity of terrain guarding is whether or not it is fixed - parameter tractable .",
    "we would like to thank kasturi varadarajan and bengt nilsson for their valuable comments , discussions and suggestions .",
    "99 b. ben - moshe , m. katz , and j. mitchell . _ a constant - factor approximation algorithm for optimal 1.5d terrain guarding_. siam journal on computing , 36(6 ) : 16311647 , 2007 .",
    "d. z. chen , v. estivill - castro , and j. urrutia .",
    "_ optimal guarding of polygons and monotone chains_. canadian conference on computational geometry , 1995 .",
    "clarkson , k. varadarajan .",
    "_ improved approximation algorithms for geometric set cover_. proc .",
    "21st acm symposium on computational geometry , 2005 .",
    "e. d. demaine and j. orourke .",
    "_ open problems : open problems from cccg 2005_. proceedings of the 18th canadian conference on computational geometry , pages 75 - 80 , 2006 .",
    "a. deshpande , t. kim , e. d. demaine , and s. e. sarma .",
    "_ a pseudopolynomial time @xmath15-approximation algorithm for art gallery problems_. wads , 2007 .",
    "s. eidenbenz . _ inapproximability results for guarding polygons without holes_. lecture notes in computer science , vol .",
    "1533 ( isaac98 ) , 427 - 436 , 1998 .",
    "k. elbassioni , e. krohn , d. matijevic , j. mestre , d. severdija _ improved approximations for guarding 1.5-dimensional terrains_. symposium on theoretical aspects of computer science , 2009 .",
    "_ approximation algorithms for art gallery problems_. proc .",
    "canadian information processing society congress , 1987 .",
    "m. gibson , g. kanade , e. krohn , k. varadarajan _ an approximation scheme for terrain guarding_. approx , 2009 .",
    "_ a 4-approximation algorithm for guarding 1.5-dimensional terrains_. lecture notes in computer science ( 3887 ) , 629 - 640 , 2006 .",
    "d. lee and a. lin .",
    "_ computational complexity of art gallery problems_. ieee trans .",
    "theory , vol .",
    "32 , 276 - 282 , 1986 .",
    "d. lichtenstein .",
    "_ planar formulae and their uses _ , siam journal on computing , 11(2 ) : 329 - 343 , 1981 .",
    "b. nilsson .",
    "_ approximate guarding of monotone and rectilinear polygons_. proceedings of icalp 2005 , 1362 - 1373 , 2005 .",
    "let us consider chunks @xmath49 and @xmath68 going down when a deletion gadget is being placed to delete variable @xmath1 .",
    "the total number of guards needed will be @xmath72 where @xmath70 and @xmath71 . the list of variables in @xmath68 , @xmath173 .",
    "we replace the variable gadget for @xmath1 in @xmath68 with a flat surface as seen in figure [ fig : delete ] .    going up ,",
    "we need three chunks @xmath68 , @xmath174 and @xmath119 to construct a deletion gadget for deleting variable @xmath1 .",
    "we will have @xmath175 , @xmath176 , @xmath177 and @xmath178 .",
    "the total number of guards needed will be @xmath120 .",
    "we flatten out the mirrored distinguished points of variable gadget @xmath1 in @xmath49 as seen in figure [ fig : deleteup ] .",
    "the mirrored distinguished points were there to help us mirror @xmath1 up the terrain .",
    "however , @xmath1 is no longer needed so the mirrored distinguished points can go away as shown .",
    "the clause gadget going up is done similarly to mirroring variables upward with a few small changes .",
    "we will have @xmath179 , @xmath180 and @xmath181 .",
    "the total number of guards needed will be @xmath133 .",
    "we replace the highest ( in this case leftmost ) mirroring distinguished point of @xmath182 with a clause distinguished point @xmath94 .",
    "we flatten out the other mirroring distinguished point for @xmath182 similar to the deletion gadget .",
    "the original purpose of our @xmath183 point was to ensure that @xmath153 did not affect variables below ( to the right of ) @xmath142 .",
    "however , we want @xmath153 to see @xmath94 so @xmath183 is adjusted accordingly for this .",
    "it should be noted that @xmath152 does not see @xmath94 .",
    "we also allow @xmath184 to see @xmath94 .",
    "the original reason to not allow this was so @xmath21 would not affect the mirroring of @xmath22 .",
    "this is no longer the case so we allow @xmath184 to see @xmath94 .",
    "@xmath94 is adjusted accordingly so that a ray shot from @xmath94 through @xmath185 sees @xmath184 .",
    "we now have only three variables that can see @xmath94 : @xmath186 , @xmath153 , and @xmath184 .",
    "we note that @xmath22 can safely disappear as it will not be needed in any other clauses going upwards because of the ordering of the clauses .",
    "see appendix @xmath38 for a detailed explanation of why @xmath22 can be removed .",
    "the reduction from planar 3sat is done in the following way .",
    "the reduction given in this section combines several steps when visibility is not affected in an effort to minimize the number of figures needed .",
    "for example , several variables might be deleted in one chunk where the specification calls for only one deletion per chunk .    in figure [ fig : planarnew ] we have an instance of planar 3sat .",
    "there are clauses outside the variable cycle and clauses inside the variable cycle .",
    "a clause @xmath187 is connected to 3 distinct variables .",
    "for example , @xmath188 .",
    "we arbitrarily pick a variable to be the lowest indexed variable and work clockwise around the variable cycle in increasing order . in the example in figure [ fig : planarnew ] we choose @xmath20 to be the lowest index variable .",
    "our ordering of variables is @xmath189 .",
    "this indexing of variables also gives us the ordering of variable gadgets in chunks . in even chunks",
    ", @xmath20 will be the leftmost variable gadget , @xmath22 will be the next leftmost , followed by @xmath21 and so on .",
    "in odd chunks , @xmath20 will be the rightmost variable gadget , @xmath22 will be the next rightmost , followed by @xmath21 and so on .",
    "chunk @xmath56 is shown in figure [ fig : ex1 ] .",
    "the @xmath190 of a clause @xmath187 is denoted @xmath191 .",
    "the interval of a clause is defined as the span from the lowest index variable in @xmath187 to the highest indexed variable in @xmath187 . from the example , @xmath192 .",
    "we will focus on clauses outside of the variable cycle .",
    "we assume that each clause has @xmath156 distinct variables .",
    "because of this and because our graph is planar , every clause outside the variable cycle has a unique interval .",
    "take two clauses outside the cycle @xmath187 and @xmath193 .",
    "we know the intervals are distinct . because of planarity",
    ", either the intervals @xmath191 and @xmath194 have disjoint interiors or one of the intervals is properly contained in the other . if @xmath191 is properly contained within @xmath194 , we say that clause @xmath195 .",
    "we therefore have a partial ordering of the clauses . with this partial",
    "ordering we construct a valid total ordering of all of the clauses both inside the variable cycle and outside the variable cycle .",
    "the ordering of clauses outside the cycle are used when placing clauses going up the terrain .",
    "similarly , intervals @xmath191 and @xmath194 for clauses inside the variable ring either have disjoint interiors or @xmath191 is properly contained within @xmath194 .",
    "let us consider the ordering of clauses outside of the cycle , call this ordering @xmath196 .",
    "it is because of this ordering that we can delete the `` middle '' variable from the terrain when we place our clause gadget .",
    "the middle variable is defined as the variable that is not an endpoint of the interval .",
    "for example , if @xmath197 and @xmath198 , our middle variable is @xmath183 .",
    "let us take the first clause in @xmath196 , call this clause @xmath187 .",
    "we know that for every other clause @xmath199 . since we are placing the smallest @xmath191 first , based on our partial ordering , we know there are no clauses less than @xmath187 .",
    "since intervals do not overlap because of planarity , no other clause @xmath200 will use the middle variable of @xmath187 . before we can place a clause gadget for @xmath187",
    ", there may be unused variables in the span of @xmath191 .",
    "we must first delete these unused variables before generating a clause gadget for @xmath187 .    as an example , consider figure [ fig : planarnew ] .",
    "we have three clauses on the outside of the cycle and three clauses on the inside of the cycle . @xmath201 .",
    "the intervals of each of the clauses are @xmath202 .",
    "a partial ordering of the clauses outside the cycle is @xmath203 and @xmath204 and @xmath205 . a possible",
    "total ordering for clauses outside the ring is then @xmath206 .",
    "a partial ordering of clauses inside the cycle is @xmath207 and @xmath208 .",
    "a possible total ordering for clauses inside the ring is @xmath209 or @xmath210 .",
    "an overview of the entire terrain is shown in figure [ fig : ex ] . in each subsequent figure",
    ", we will show the specific part of the terrain we are describing along with a smaller version of the entire terrain to give reference to where we are on the terrain .",
    "figure [ fig : ex1 ] shows the details of chunk @xmath56 .",
    "starting at chunk @xmath56 we will work our way downward .",
    "the figures place small rectangles for literals chosen as guard locations . in our example , we have chosen to place guards at the literal locations @xmath212 and @xmath213 .",
    "we choose clause @xmath214 as the first clause placed on the terrain going downward from our total ordering obtained before .    before we can place a gadget for clause @xmath214 on the terrain",
    ", we must delete the @xmath22 variable since @xmath215 and we only use the @xmath216 and @xmath23 variables .",
    "this deletion is done in chunk @xmath217 as shown in figure [ fig : ex2 ] . in this figure ,",
    "the location where the @xmath22 variable gadget would be in @xmath217 is replaced by a flat surface .",
    "we are now ready to place a clause gadget and this is shown in figure [ fig : ex3 ] . in this figure , the @xmath21 variable gadget , as seen in the left in figure [ fig : ex3 ] , is replaced with a clause gadget for clause @xmath214 , as seen in the right in figure [ fig : ex3 ] .",
    "if we were only doing a mirroring , a ray shot from the @xmath130 mirrored distinguished point in chunk @xmath218 through @xmath16 would hit the @xmath130 literal location in chunk @xmath217 .",
    "however , since we are replacing the @xmath21 variable gadget with a clause gadget , we want two other literals to see into @xmath21 s variable region , which now contains the @xmath214 distinguished point .",
    "those literal locations being @xmath219 in @xmath217 and @xmath20 in @xmath217 .",
    "the @xmath214 distinguished point is adjusted upward accordingly so that a ray shot from @xmath214 s distinguished point through @xmath16 would hit the guard location for @xmath220 . referring back to figure [ fig : ex2 ] ,",
    "we move the @xmath115 towards @xmath9 so that @xmath221 sees @xmath214 s distinguished point in chunk @xmath218 .",
    "recall that @xmath115 was originally there to keep @xmath20 from seeing into variable gadgets to the right of @xmath20 in chunk @xmath218 .",
    "we also move @xmath222 down so that it does not see @xmath214 s distinguished point .",
    "there are now 3 literal locations that can see @xmath214 s distinguished point , namely @xmath223 and @xmath220 .",
    "if any of these literals have a guard at their location , @xmath214 s distinguished point is seen , in other words , @xmath214 is satisfied .",
    "it is also important to note that none of these modifications affect the mirroring of variables @xmath20 and @xmath23 or any other variable .",
    "the next clause that is placed is @xmath224 .",
    "literals @xmath95 and @xmath213 are in the correct location in chunk @xmath218 but @xmath219 is not .",
    "therefore , the @xmath23 variable must be inverted before we can place the next clause gadget .",
    "we invert @xmath23 in chunk @xmath225 as shown in figure [ fig : ex4 ] .",
    "after the inversion gadget is placed in chunk @xmath225 , the ordering of the @xmath23 and @xmath219 literals in chunk @xmath226 is correct .",
    "this is shown in figure [ fig : ex5 ] .",
    "once the literals are in the correct order , we can place our clause gadget for @xmath227 .",
    "this is done in chunk @xmath228 as shown in figure [ fig : ex6 ] . in this figure ,",
    "the @xmath23 variable gadget is replaced with a clause gadget for clause @xmath227 .",
    "the purpose of the @xmath16 point in figure [ fig : ex6 ] was to ensure variable gadgets below @xmath23 in chunk @xmath226 did not see into @xmath23 s variable gadget . in this case , we want 1 other literal to see into @xmath23 s variable region , which is now our @xmath227 distinguished point , that point being @xmath229 .",
    "the @xmath227 distinguished point is adjusted up accordingly .",
    "the literal @xmath230 is also adjusted down accordingly . referring back to figure [ fig : ex5 ]",
    ", we adjust the @xmath115 point so that @xmath231 sees @xmath227 s distinguished point . recall that @xmath115 was originally there to keep @xmath20 from seeing into different variable gadgets in chunk @xmath228 .",
    "there are now 3 literal locations that can see @xmath227 s distinguished point , namely @xmath232 and @xmath229 .",
    "if any of these literals have a guard at their location , @xmath227 s distinguished point is seen and the clause is satisfied .    as said in the beginning of this section , we are combining several deletions in chunk @xmath228 to save space .",
    "we show the deletion of the @xmath20 and @xmath213 variable in figure [ fig : ex6 ] .",
    "the variable gadgets are simply replaced with flat surfaces .",
    "this ends our reduction going downward and we count how many guards are necessary going downward .",
    "we see that each variable gadget requires a guard to be placed at one of the literal points for that particular variable gadget .",
    "no other point on the terrain sees these variable distinguished points so a guard is required to be placed at a literal location for each variable gadget .",
    "we also add 1 extra guard for each inversion gadget that was placed .",
    "recall that an inversion requires 1 extra guard because the inversion gadget has 2 `` variable distinguished points '' .",
    "we count the number of variable gadgets in each chunk @xmath233 and @xmath228 and end up with @xmath234 .",
    "we now consider placing gadgets going `` up '' the terrain .",
    "we wish to place a gadget for clause @xmath235 on our terrain but we must invert variable @xmath23 first .",
    "figure [ fig : ex7 ] shows chunk @xmath236 and the inversion of @xmath23 .",
    "we can now place a clause gadget for @xmath237 .",
    "we place this gadget in chunk @xmath238 as shown in figure [ fig : ex8 ] . the mirrored distinguished point for @xmath21",
    "is replaced with @xmath235 s distinguished point .",
    "since we are deleting @xmath21 in this chunk , we flatten out the other mirrored distinguished point for @xmath21 .",
    "we move @xmath235 s distinguished point accordingly so that it sees the @xmath23 guard location in chunk @xmath239 .",
    "the changes for the clause gadget are continued in chunk @xmath239 as shown in figure [ fig : ex9 ] .",
    "the change we must make is adjusting the @xmath115 point as seen before . the original purpose of @xmath115 was to ensure @xmath240 did not see other variables mirrored distinguished points to the right of @xmath241 .",
    "however , this changes because we want @xmath240 to see @xmath235 s distinguished point .",
    "the only guard locations that see @xmath235 s distinguished point are @xmath242 , @xmath240 and @xmath243 .",
    "we also delete the @xmath213 variable in chunk @xmath239 to save space .",
    "to delete @xmath213 , the mirrored distinguished points for @xmath244 are flattened out .",
    "chunk @xmath245 is shown in figure [ fig : ex10 ] . in this chunk",
    "we place the clause gadget for @xmath246 .",
    "we replace variable gadget @xmath247 with a clause gadget for @xmath246 .",
    "@xmath246 s distinguished point is adjusted accordingly so that it sees the @xmath23 literal guard location in chunk @xmath248 .",
    "since this is the last clause to be placed and to save space , the @xmath20 and @xmath23 variables are deleted in chunk @xmath248 as shown in figure [ fig : ex11 ] .",
    "adjustments to the terrain in chunk @xmath248 are made similarly as before so that @xmath20 sees @xmath246 s distinguished point .",
    "the only guard locations that see @xmath246 s distinguished point are @xmath247 , @xmath249 and @xmath250 .",
    "this ends our reduction going upward and we count how many guards are necessary going upward .",
    "we note that each variable gadget requires a guard to be placed at one of the literal points for that particular variable gadget because of the _ uniqueness claim_. no other point on the terrain sees these variable distinguished points so a guard is required to be placed at a literal location for each variable gadget .",
    "we also add 1 extra guard for each inversion gadget that was placed .",
    "recall that an inversion requires 1 extra guard .",
    "we count the number of variable gadgets in each chunk @xmath251 and @xmath248 and end up with @xmath252 .",
    "the entire terrain needs at least @xmath253 guards .",
    "however @xmath253 guards are sufficient if the planar 3sat instance is satisfiable .",
    "assuming correct choices were made in mirroring , no extra guards are required to see the mirrored distinguished points . if the planar 3sat instance is satisfiable , the entire terrain can be guarded with @xmath253 guards because the clause distinguished points will also be seen .",
    "if more than @xmath253 guards are required to see the entire terrain , the planar 3sat instance is not satisfiable ."
  ],
  "abstract_text": [
    "<S> a set @xmath0 of points on a 1.5-dimensional terrain , also known as an @xmath1-monotone polygonal chain , is said to guard the terrain if any point on the terrain is ` seen ' by a point in @xmath0 . </S>",
    "<S> two points on the terrain see each other if and only if the line segment between them is never strictly below the terrain . </S>",
    "<S> the minimum terrain guarding problem asks for a minimum guarding set for the given input terrain . </S>",
    "<S> we prove that the decision version of this problem is np - hard . </S>",
    "<S> this solves a significant open problem and complements recent positive approximability results for the optimization problem .    </S>",
    "<S> our proof uses a reduction from planar 3-sat . </S>",
    "<S> we build gadgets capable of ` mirroring ' a consistent variable assignment back and forth across a main valley . </S>",
    "<S> the structural simplicity of 1.5-dimensional terrains makes it difficult to build general clause gadgets that do not destroy this assignment when they are evaluated . </S>",
    "<S> however , we exploit the structure in instances of planar 3-sat to find very specific operations involving only ` adjacent ' variables . for these restricted operations </S>",
    "<S> we can construct gadgets that allow a full reduction to work . </S>"
  ]
}
{
  "article_text": [
    "a _ real polynomial system _ in variables @xmath0 is a formula@xmath1 where @xmath2 $ ] , and each @xmath3 is one of @xmath4 or @xmath5 .",
    "a subset of @xmath6 is _ semialgebraic _ if it is a solution set of a real polynomial system .",
    "every semialgebraic set can be represented as a finite union of disjoint _ cells _ ( see @xcite ) , defined recursively as follows .",
    "* a cell in @xmath7 is a point or an open interval .",
    "* a cell in @xmath8 has one of the two forms@xmath9 where @xmath10 is a cell in @xmath11 , @xmath12 is a continuous algebraic function , and @xmath13 and @xmath14 are continuous algebraic functions , @xmath15 , or @xmath16 , and @xmath17 on @xmath10 .    the cylindrical algebraic decomposition ( cad ) algorithm @xcite can be used to compute a cell decomposition of any semialgebraic set presented by a real polynomial system .",
    "an alternative method of computing cell decompositions is given in @xcite .",
    "cell decompositions computed by the cad algorithm can be represented directly @xcite as cylindrical algebraic formulas ( caf ; a precise definition is given in section [ cafsec ] ) .",
    "the following formula @xmath18 is a caf representation of a cell decomposition of the closed unit ball.@xmath19 where @xmath20    the caf representation of a semialgebraic set @xmath21 can be used to decide whether @xmath21 is nonempty , to find the minimal and maximal values of the first coordinate of elements of @xmath21 , to generate an arbitrary element of @xmath21 , to find a graphical representation of @xmath21 , to compute the volume of @xmath21 or to compute multidimensional integrals over @xmath21 ( see @xcite ) .    in our issac conference paper @xcite we presented an algorithm , _ cafcombine _ , computing boolean operations on cylindrical algebraic formulas .",
    "in this extended version of the paper we investigate how _ cafcombine _ can be used to construct a divide - and - conquer algorithm for computing a cylindrical algebraic decomposition .",
    "the divide - and - conquer algorithm depends on the algorithm _",
    "subdivide_. given _ _ a real polynomial system _",
    "@xmath22 _ ,",
    "_ subdivide _ finds a boolean formula @xmath23 and real polynomial systems @xmath24 such that @xmath25    ( divideandconquercad ) + input : _ a real polynomial system _ @xmath22 .",
    "use _ subdivide _ to find @xmath23 and @xmath24 such that @xmath26 2 .",
    "if @xmath27 and @xmath28 then return @xmath29 .",
    "3 .   for @xmath30 ,",
    "compute@xmath31 4 .",
    "use _ cafcombine _ to compute a caf 5 .",
    "return    the practical usefulness of _ divideandconquercad _ depends on the choice of the algorithm _",
    "subdivide_. our experiments suggest that _ divideandconquercad _ is likely to be faster than a direct cad computation if @xmath23 is a disjunction and , for any for @xmath32 , @xmath33 and @xmath34 contain few polynomials in common .",
    "we propose an algorithm _ subdivide _ for polynomial systems @xmath35 given in disjunctive normal form .",
    "the algorithm is based on the connectivity structure of a graph whose vertices are the disjunction terms of @xmath35 and whose edges depend on polynomials shared between the disjunction terms of @xmath35 .",
    "let @xmath36 be the result of eliminating the quantifier from@xmath37 using the virtual term substitution algorithm ( @xcite , _ mathematica _ command @xmath38 $ ] ) .",
    "@xmath36 is a disjunction of @xmath39 conjunctions of polynomial equations and inequalities .",
    "+ _ problem : _ find a cell decomposition for the solution set of @xmath36 .",
    "_ _ + _ method 1 _ : a direct application of the cad algorithm .",
    "the computation takes @xmath40 seconds .",
    "+ _ method 2 : _ _ divideandconquercad _ with _ subdivide _ which represents @xmath36 as a disjunction of @xmath39 subformulas , each subformula equal to one of the conjunctions in @xmath36 .",
    "the computation takes @xmath41 seconds .",
    "+ _ method 3 _ : _ divideandconquercad _ with graph - based _ subdivide _ which represents @xmath36 as a disjunction of @xmath42 subformulas .",
    "the subformulas are disjunctions of , respectively , @xmath43 , @xmath44 @xmath45 , @xmath46 , and @xmath46 of the conjunctions in @xmath36 .",
    "the computation takes @xmath47 seconds .",
    "the paper is organized as follows .",
    "section [ cafsec ] defines cylindrical algebraic formulas .",
    "the algorithms _ cafcombine _ and _ subdivide _ are presented in sections [ cafcombinesec ] and [ subdividesec ] .",
    "the last section contains experimental data comparing the performance of _ divideandconquercad _ and of direct cad computation .",
    "a _ real algebraic function _ given by _ defining polynomial _ @xmath48 $ ] and _ root number _",
    "@xmath49 is the function@xmath50 where @xmath51 is the @xmath52-th real root of @xmath53 treated as a univariate polynomial in @xmath54 .",
    "the function is defined for those values of @xmath0 for which @xmath55 has at least @xmath52 real roots .",
    "the real roots are ordered by the increasing value , counting multiplicities .",
    "a real algebraic number @xmath56 given by _ defining polynomial _",
    "@xmath57 $ ] and _ root number _",
    "@xmath52 is the @xmath52-th real root of @xmath53 .",
    "let @xmath58 be the set of real algebraic numbers and for @xmath59 let @xmath60 denote the set of all algebraic functions defined and continuous on @xmath61 .",
    "( see @xcite for more details on how algebraic numbers and functions can be implemented in a computer algebra system . )    a set @xmath62 $ ] is _ delineable _ over @xmath59 iff    1 .",
    "2 .   for any @xmath64 and @xmath65",
    ", @xmath66 is a continuous function on @xmath61 .",
    "@xmath67    [ csac]a _ cylindrical system of algebraic constraints _ in variables @xmath0 is a sequence @xmath68 satisfying the following conditions .    1 .   for @xmath69",
    ", @xmath70 is a set of formulas@xmath71 2 .   for each @xmath72",
    ", @xmath73 is @xmath74 or @xmath75 where @xmath76 , or @xmath77 where @xmath78 , @xmath79 and @xmath17 . moreover , if @xmath80 , @xmath81 appears in @xmath82 , @xmath83 appears in @xmath84 and @xmath85 then @xmath86 .",
    "3 .   let @xmath87 , @xmath88 and let @xmath89 be the solution set of@xmath90 1 .   for each @xmath91",
    ", @xmath92 is @xmath74 or@xmath93 and @xmath94 , or@xmath95 where @xmath96 , @xmath97 and @xmath17 on @xmath98 .",
    "2 .   if @xmath99 , @xmath81 appears in @xmath100 @xmath83 appears in @xmath101 and @xmath85 then @xmath86 on @xmath98 .",
    "3 .   let @xmath102 $ ] be the set of defining polynomials of all real algebraic functions that appear in formulas @xmath103 for @xmath104 , @xmath91 .",
    "then @xmath105 is _ _ delineable _ _ over @xmath98 .",
    "[ caf]let @xmath21 be a cylindrical system of algebraic constraints in variables @xmath0 .",
    "define    @xmath106    for @xmath107 , _ level @xmath108 cylindrical algebraic subformulas _ given by @xmath21 are the formulas@xmath109 the _ support cell _ of @xmath110 is the solution set @xmath111 of @xmath112 _ the cylindrical algebraic formula ( caf ) _ given by @xmath21 is the formula@xmath113    let @xmath114 be a caf given by a cylindrical system of algebraic constraints @xmath21 . then    1 .   for @xmath69 , sets @xmath115 are cells in @xmath11 .",
    "2 .   cells@xmath116 form a decomposition of the solution set @xmath117 of @xmath118 , i.e. they are disjoint and their union is equal to @xmath117 .",
    "both parts of the remark follow from the definitions of @xmath21 and @xmath118 .    given a real polynomial system",
    "@xmath22 a version of the cad algorithm can be used to find a caf @xmath114 equivalent to @xmath22 .",
    "the version of cad described in @xcite returns a caf equivalent to the input system .",
    "in this section we describe the algorithm _",
    "cafcombine_. the algorithm is a modified version of the cad algorithm . we describe only the modification . for details of the cad algorithm",
    "see @xcite .",
    "our implementation is based on the version of cad described in @xcite .",
    "let @xmath119 $ ] be a finite set of polynomials and let @xmath120 be the set of irreducible factors of elements of @xmath121 .",
    "@xmath122 is a _ projection sequence _ for @xmath121 iff    1 .",
    "_ projection sets",
    "_ @xmath123 are finite sets of irreducible polynomials .",
    "2 .   for @xmath69 , @xmath124\\setminus\\mathbb{r}[x_{1},\\ldots , x_{k-1}])\\subseteq w_{k}\\subseteq\\mathbb{r}[x_{1},\\ldots , x_{k}]\\setminus\\mathbb{r}[x_{1},\\ldots , x_{k-1}]$ ] .",
    "if @xmath87 and all polynomials of @xmath125 have constant signs on a cell @xmath126 , then all polynomials of @xmath127 that are not identically zero on @xmath128 are delineable over @xmath61 .    for an arbitrary finite set @xmath119 $ ] a projection sequence can be computed using hong s projection operator @xcite .",
    "mccallum s projection operator @xcite gives smaller projection sets for well - oriented sets @xmath121 .    if @xmath129 $ ] and @xmath130 is a projection sequence for @xmath131 then @xmath130 is a projection sequence for @xmath121 .",
    "for a caf @xmath118 , let @xmath132 denote the set of defining polynomials of all algebraic numbers and functions that appear in @xmath118 .",
    "first let us prove the following rather technical effective lemmas that will be used in the algorithm .",
    "we use notation of definition [ caf ] .",
    "[ lem1]let @xmath113 be a caf and let @xmath133 be such that all real roots of elements of @xmath134 $ ] are among @xmath135 .",
    "let @xmath136 be either @xmath137 for some @xmath138 , or @xmath139 for some @xmath140 , and let @xmath141 be the solution set of @xmath142",
    ". then @xmath143 and one of the following two statements is true    1 .",
    "there exist @xmath72 such that @xmath144 and @xmath145 .",
    "2 .   for all @xmath72 , @xmath146 and @xmath147    moreover , given @xmath118 and @xmath142 , @xmath148 can be found algorithmically .",
    "let @xmath12 be an algebraic number that appears in @xmath149 .",
    "then @xmath150 for some @xmath151 .",
    "hence , @xmath152 for some @xmath153 and the value of @xmath154 can be determined algorithmically .",
    "if @xmath142 is @xmath137 , then @xmath155 iff @xmath149 is either @xmath137 or @xmath156 with @xmath157 . in both cases",
    ". if @xmath142 is @xmath158 , then @xmath155 iff @xmath149 is @xmath156 with @xmath159 and @xmath160 . in this case also @xmath144 .",
    "equivalence ( [ eqv01 ] ) follows from the statements ( 1 ) and ( 2 ) .",
    "[ lem2]let @xmath107 , let@xmath161 be a level _ @xmath108 _ cylindrical algebraic subformula of a caf @xmath118 , let _ @xmath122 _ be a projection sequence for @xmath132 .",
    "let @xmath162 be a cell such that all polynomials of @xmath163 have constant signs on @xmath61 and let @xmath164 and let @xmath165 be all real roots of @xmath166 .",
    "for @xmath138 , let @xmath167 , where @xmath168 and @xmath169 is the @xmath52-th root of @xmath170 .",
    "let @xmath171 be either @xmath172 for some @xmath138 , or @xmath158 for some @xmath140 , where @xmath173 and @xmath174 and let@xmath175 then @xmath176 and one of the following two statements is true    1 .",
    "there exist @xmath177 such that @xmath178 and @xmath179 2 .   for all @xmath177 @xmath180 and @xmath181    moreover , given @xmath110 , @xmath142 , @xmath182 , @xmath183 and the multiplicity of @xmath169 as a root of @xmath53 , for all @xmath138 and @xmath168 ,",
    "@xmath148 can be found algorithmically .",
    "let @xmath12 be an algebraic function that appears in @xmath184 .",
    "then @xmath185 for some @xmath151 . by definition [ csac ]",
    ", @xmath12 is defined and continuous on @xmath61 .",
    "since @xmath130 is a projection sequence for @xmath132 , all factors of @xmath53 that depend on @xmath186 are elements of @xmath125 . hence , @xmath187 for some @xmath153 .",
    "since @xmath188 is the @xmath52-th of real roots of factors of @xmath53 , multiplicities counted , if the multiplicity of @xmath169 as a root of @xmath53 is known for all @xmath138 and @xmath168 , the value of @xmath154 can be determined algorithmically .",
    "since all polynomials of @xmath163 have constant signs on @xmath61 , all elements of @xmath125 that are not identically zero on @xmath61 are delineable over @xmath61",
    ". therefore , @xmath152 and @xmath189 on @xmath61 .",
    "if @xmath142 is @xmath172 , then @xmath190 iff @xmath184 is either @xmath172 or @xmath191 with @xmath157 . in both cases @xmath192 . if @xmath142 is @xmath158 , then @xmath190 iff @xmath184 is @xmath191 with @xmath159 and @xmath160 . in this case also @xmath192 .",
    "equivalence ( [ eqv1 ] ) follows from the statements ( 1 ) and ( 2 ) .",
    "let us now describe two subalgorithms used in _",
    "cafcombine_. the first , recursive , subalgorithm requires its input to satisfy the following conditions .    1 .",
    "@xmath122 _ is a projection sequence for @xmath193 , where _ @xmath194 _ are cylindrical algebraic formulas .",
    "2 .   @xmath164 , _",
    "@xmath107 _ and @xmath162 is a cell such that all polynomials of @xmath163 have constant signs on @xmath61 .",
    "each @xmath195 is a _",
    "_ level @xmath108 cylindrical algebraic formula _ _ of @xmath196 or @xmath197 .",
    "@xmath61 is contained in the intersection of support cells of all @xmath195 that are not @xmath197 .",
    "@xmath198 is a boolean formula .",
    "( lift ) + input : _",
    "@xmath199 , @xmath130 , _ + _ level @xmath108 cylindrical algebraic subformula _    1 .",
    "let @xmath165 be all real roots of @xmath200 2 .   for @xmath201 ,",
    "let @xmath202 , where @xmath168 and @xmath203 is the @xmath52-th root of @xmath170 .",
    "3 .   for @xmath168 ,",
    "if @xmath203 is a root of @xmath170 , let @xmath204 be its multiplicity , otherwise @xmath205 .",
    "4 .   for @xmath201 , set @xmath206 and @xmath207 .",
    "5 .   for @xmath208",
    "set @xmath209 where @xmath173 and @xmath174 , and pick @xmath210 , where @xmath211 and @xmath212",
    ". 6 .   for @xmath213 1 .   for @xmath214 ,",
    "if @xmath215 , set @xmath216 , otherwise let @xmath217 be the formula @xmath148 found using lemma [ lem2 ] applied to @xmath195 , @xmath218 , @xmath182 , + @xmath183 and @xmath219 .",
    "2 .   let @xmath220 .",
    "if @xmath221 is @xmath74 or @xmath197 , set @xmath222 .",
    "3 .   otherwise set @xmath223 to@xmath224 7 .",
    "return @xmath225    the second subalgorithm requires its input to satisfy the following conditions .    1 .",
    "either @xmath226 , where @xmath76 , or @xmath227 , where @xmath228 and @xmath229 .",
    "2 .   for @xmath214",
    ", @xmath195 is a _",
    "_ level @xmath230 cylindrical algebraic subformula _ _ of a caf@xmath231 3 .",
    "@xmath198 is a boolean formula .",
    "( combinestacks ) + input : _ @xmath142 , _ +    1 .",
    "let @xmath232 be a projection sequence for @xmath193 .",
    "2 .   if @xmath226 then set @xmath233 , @xmath234 , and @xmath235 .",
    "3 .   if @xmath227 then 1 .   let @xmath189 be all real roots of elements of @xmath236 in @xmath237 .",
    "2 .   for @xmath238 set @xmath239 and @xmath240 .",
    "3 .   for @xmath208 set @xmath241 and pick @xmath242 , where @xmath243 and @xmath244 .",
    "4 .   for @xmath213",
    "set@xmath245 5 .",
    "return @xmath246    we can now describe the algorithm _ cadcombine _ ( cf .",
    "@xcite , algorithm 17 ) .",
    "( cafcombine ) + input : _ cylindrical algebraic formulas _ +    1 .",
    "let @xmath189 be all real roots of @xmath247 $ ] .",
    "2 .   for @xmath238 set @xmath239 and for @xmath208 set @xmath241 , where @xmath173 and @xmath174 .",
    "3 .   for @xmath213 1 .   for @xmath214 ,",
    "let @xmath217 be the formula @xmath148 found using lemma [ lem1 ] applied to @xmath196 and @xmath218 .",
    "2 .   let @xmath248 be all @xmath214 for which @xmath217 is neither @xmath74 nor @xmath197 .",
    "3 .   let @xmath249 be the formula obtained from @xmath23 by replacing @xmath250 with @xmath217 for all @xmath251 for which @xmath217 is @xmath74 or @xmath197 .",
    "4 .   if @xmath221 is @xmath74 or @xmath197 , set @xmath252 . 5 .   otherwise set @xmath253 to @xmath254 4 .",
    "return @xmath255 .",
    "( correctness of the algorithms ) to show correctness of _ combinestacks _ , let us first show that inputs to _ lift _ satisfy the required conditions . condition ( 1 ) follows from step 1 of _",
    "combinestacks_. if @xmath256 , the cell @xmath61 is defined as a root or the open interval between two subsequent roots of polynomials of @xmath236 . for @xmath257 , the cell @xmath61 is defined as a graph of a root or the set between graphs of two subsequent roots of polynomials of @xmath163 over a cell on which @xmath163 is delineable .",
    "this proves condition ( 2 ) .",
    "conditions ( 3 ) and ( 4 ) are guaranteed by lemmas [ lem1 ] and [ lem2 ] . finally , ( 5 ) is satisfied , because @xmath23 is always the same formula , given as input to _",
    "combinestacks_.    to complete the proof we need to show the equivalences ( [ equiv1 ] ) and ( [ equiv2 ] ) . equivalence ( [ equiv2 ] ) follows from lemma [ lem2 ] and the fact that the sets @xmath258 are disjoint and their union is equal to @xmath128 .",
    "equivalence ( [ equiv1 ] ) follows from lemma [ lem1 ] and the fact that the sets @xmath259 are disjoint and their union is equal to @xmath7 .",
    "correctness of _ cafcombine _ follows from lemma [ lem1 ] , correctness of _ combinestacks , _ and the fact that the sets @xmath259 are disjoint and their union is equal to @xmath7 .    let@xmath260 and let @xmath261 the following cafs represent cell decompositions of @xmath262 and @xmath263.@xmath264 where@xmath265 compute a caf representation of @xmath266 ( figure 1 ) using _",
    "cafcombine_.    the input consists of @xmath267 , @xmath268 and @xmath269 .",
    "the roots computed in step ( 1 ) are @xmath13 , @xmath14 , @xmath270 , @xmath271 , @xmath272 and @xmath273 . in step",
    "( 3 ) , for all @xmath274 , either @xmath275 or @xmath276 is @xmath197 , and hence @xmath277 . for @xmath278",
    "the algorithm computes _",
    "@xmath279 , _ where @xmath280 the projection sequence computed in step ( 1 ) of _ combinestacks _ is @xmath281 the only root of @xmath236 in @xmath282 is @xmath283 .",
    "the returned cell decomposition of @xmath266 consists of three cells constructed by _",
    "lift _ over cells @xmath284 ,",
    "@xmath285 , and @xmath286 .",
    "@xmath287 note that the computation did not require including @xmath288 and @xmath289 in the projection set .     and @xmath263 ]",
    "in this section we propose an algorithm for subdividing polynomial systems @xmath22 given in disjunctive normal form . from experimenting with various subdivision methods we deduced the following rules for designing a subdivision heuristic .    *",
    "do not subdivide conjunctions . * group terms of the disjunction so that different groups have as few common polynomials as possible .",
    "* common polynomials that contain @xmath291 matter much more than polynomials that do not contain @xmath291 . * common polynomials with higher degrees in @xmath291 matter more than polynomials with lower degrees in @xmath291 .",
    "this led us to the following subdivision algorithm .",
    "the algorithm depends on a parameter @xmath292 to be determined experimentally .",
    "let @xmath22 and @xmath293 be real polynomial systems .",
    "let @xmath294 denote the sum of degrees in @xmath291 of all distinct polynomials that appear in @xmath35 , and let @xmath295 denote the sum of degrees in @xmath291 of all distinct polynomials that appear both in @xmath35 and in @xmath296 .",
    "[ algsubdivide](subdivide ) + input : _ a real polynomial system _ @xmath22 .",
    "+ boolean formula @xmath23 and real polynomial systems @xmath24 such that @xmath25    1 .   if @xmath35 is not a disjunction return @xmath297 and @xmath298 .",
    "2 .   let @xmath299 .",
    "construct a graph @xmath148 as follows",
    "the vertices of @xmath148 are @xmath300 .",
    "2 .   there is an edge connecting @xmath301 and @xmath302 if @xmath303 and @xmath304 3 .",
    "compute the connected components @xmath305 of @xmath148 .",
    "4 .   for @xmath214",
    "set @xmath306 .",
    "5 .   set @xmath307 6 .",
    "return @xmath23 and @xmath24 .",
    "in this section we compare performance of _ divideandconquercad _ and of direct cad computation . as benchmark problems we chose formulas obtained by application of virtual term substitution methods to quantifier elimination problems , because such formulas are `` naturally occurring '' cad inputs that are disjunctions of many terms .",
    "we ran four variants of _ divideandconquercad , _ corresponding to different choices of the parameter @xmath52 in _ subdivide .",
    "_ we used @xmath308 , @xmath309 , @xmath310 , and @xmath311 .",
    "the algorithms have been implemented in c , as a part of the kernel of _",
    "mathematica_. for direct cad computation the algorithms use the _ mathematica _ implementation of the version of cad described in @xcite .",
    "the experiments have been conducted on a linux virtual machine with a @xmath312 ghz intel core i7 processor and @xmath45 gb of ram available .",
    "each computation was given a time limit of @xmath313 seconds .",
    "in @xcite there are 56 examples obtained by application of virtual term substitution methods to quantifier elimination problems . here",
    "we used 28 of the examples , 7 from applications and 21 randomly generated , for which there were between 2 and 4 free variables . in 22 of the 28 examples at least one method finished within the time limit and the difference between the slowest and the fastest timing was at least @xmath314 . in 10 of",
    "the 22 examples the input systems were subdivided only for @xmath311 , and _ divideandconquercad _ with @xmath311 was slower than direct cad computation .",
    "timings for the remaining 12 examples are shown in figure [ fig1 ] ( note the logarithmic scale ) . in 9 of the 12 examples",
    "_ divideandconquercad _ with @xmath310 is faster than direct cad computation , in 3 examples it is slower . in the 12 examples",
    "_ divideandconquercad _ with @xmath310 is the fastest method on average , @xmath315 times faster than direct cad computation .",
    "we generated 16 random examples with 2 or 3 variables .",
    "the examples were obtained by elimination of up to three quantifiers using virtual term substitution ( with intermediate formula simplification ) .",
    "the initial quantified systems were randomly generated quantified conjunctions of 2 - 4 polynomial equations or inequalities .",
    "the polynomials were linear in all quantified variables except for the first one and quadratic in the remaining variables .",
    "the quadratic term in the first quantifier variable did not contain other quantifier variables .",
    "the results of quantifier elimination were put in disjunctive normal form and only disjunctions of at least 10 terms were selected . in 2 examples",
    "all timings were the same .",
    "timings for the remaining 14 examples are shown in figure [ fig2 ] ( note the logarithmic scale ) . in 12 of the 14 examples",
    "_ divideandconquercad _ with @xmath310 is faster than direct cad computation , in one example it is slower . in the 14 examples",
    "_ divideandconquercad _ with @xmath310 is the fastest method on average , at least @xmath316 times faster than direct cad computation ( in two examples direct cad computation did not finish in @xmath313 seconds and _ divideandconquercad _ with @xmath310 did ) .",
    "the experiments show that _ divideandconquercad _ with graph - based _ subdivide _ is often , but not always , faster than direct cad computation__. _ _ on average , the best performance was obtained by choosing the parameter value @xmath310 in _ subdivide_.            c. w. brown , a. strzebonski , black - box / white - box simplification and applications to quantifier elimination , proceedings of the international symposium on symbolic and algebraic computation , issac 2010 , 69 - 76 , munich , germany , july 25 - 28 , 2010 .",
    "acm , stephen m. watt , ed .",
    "g. e. collins , `` quantifier elimination by cylindrical algebraic decomposition - twenty years of progress '' , , in b. caviness , j. johnson ( eds . ) , quantifier elimination and cylindrical algebraic decomposition , springer - verlag 1998 , 8 - 23 .",
    "s. mccallum , an improved projection for cylindrical algebraic decomposition , in b. caviness , j. johnson ( eds . ) , quantifier elimination and cylindrical algebraic decomposition , springer - verlag 1998 , 242 - 268 .",
    "s. mccallum , `` on projection in cad - based quantifier elimination with equational constraint '' , in proceedings of the 1999 international symposium on symbolic and algebraic computation , acm press 1999 , 145 - 149 .",
    "s. mccallum , `` on propagation of equational constraints in cad - based quantifier elimination '' , in proceedings of the 2001 international symposium on symbolic and algebraic computation , acm press 2001 , 223 - 230 ."
  ],
  "abstract_text": [
    "<S> we present a divide - and - conquer version of the cylindrical algebraic decomposition ( cad ) algorithm . </S>",
    "<S> the algorithm represents the input as a boolean combination of subformulas , computes cylindrical algebraic decompositions of solution sets of the subformulas , and combines the results using the algorithm first introduced in @xcite . </S>",
    "<S> we propose a graph - based heuristic to find a suitable partitioning of the input and present empirical comparison with direct cad computation . </S>"
  ]
}
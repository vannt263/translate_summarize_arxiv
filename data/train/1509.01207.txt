{
  "article_text": [
    "percolation on graphs offers a simple theoretical framework to model and investigate the behavior of many complex systems ; noteworthy examples being the growth and the robustness of their structure @xcite , their observability @xcite , as well as the effect of their structure on the propagation of emerging infectious agents @xcite . on the analytical front",
    ", recent progress has been mainly achieved within the configuration model ( cm ) paradigm @xcite , which , in the limit of large graphs , allows an exact and simple analytical treatment with the use of probability generating functions ( pgf ) @xcite .",
    "the versatility of the pgf method has triggered the development of many variants of the cm reproducing , to some extent , correlations and clustering found in real complex systems @xcite .",
    "to move beyond what has been done thus far , we introduce a very general and comprehensive class of random graphs that increases significantly the nontrivial correlations and clustering patterns that can be handled analytically .",
    "correlations and clustering are incorporated into the graphs through the use of types of vertices and types of stubs ( i.e. , half - edge stemming from vertices ) .",
    "hence , by explicitly controlling _ who is connected to whom _ and _ through what kind of connection _ , our approach reproduces any correlations as long as they can be mapped unto this multitype framework .",
    "for instance , the type of the vertices can correspond to their degree ( the number of neighbors ) @xcite , to their intrinsic properties such as age or ethnicity @xcite , or to their position in the k - core structure of the graph @xcite .",
    "furthermore the use of types of stubs explicitly accounts for different categories of connections . on the one hand",
    ", these differences may be of a _ conceptual _ nature @xcite .",
    "for instance in _ multilayer _ or _ multiplex _ graphs the type of an edge refers to the layer of interaction to which it belongs ( e.g. , family ties and acquaintances in social networks ) . on the other hand",
    ", the different types of stubs can describe different _ topological _ functions .",
    "since some edges may be undirected or directed , different types of stubs can be used to identify _ in - degrees _ , _ out - degrees _ or _ undirected degrees _ @xcite .",
    "more importantly perhaps , stubs can be matched in groups of more than two vertices to form _ motifs _ , also called _ hyperedges _",
    "@xcite , permitting the inclusion of clustering in a very general and natural fashion .",
    "these motifs can take a wide variety of forms : simple triangles , cliques of several hundreds of vertices , or arbitrary graphs with directed and multiple edges [ see fig .  [",
    "fig : omnibus_allard_fig_1 ] ] . additionally , these motifs can have a quenched ( i.e. , fixed ) or a random structure ( e.g. , multitype erds - rnyi graphs ) .",
    "we have developed a mathematical framework that solves the site _ and _ bond percolation ( hereafter _ hybrid _ percolation ) on this general class of random graphs .",
    "we build upon the well - known pgf - based formalism and obtain the analytical expression for the size of the extensive `` giant '' component , the percolation threshold , as well as the distribution of the size of the `` small '' components in the limit of large graph size . however , the pgf approach _ de facto _ assumes locally tree - like graphs forbidding closed loops and therefore any clustering whatsoever . to circumvent this limitation",
    ", we present a set of iterative equations that exactly solves the size distribution of components in finite - size arbitrary , or quenched , graphs .",
    "these equations map the possible outcomes of hybrid percolation on any motifs ( i.e. , the size distribution of the components ) unto a distribution of branching trees , and thereby reconcile the presence of motifs with the tree - like requirement of the pgf approach .",
    "the general nature of our model acts as a _ theoretical laboratory _ where the effect of a wide selection of structural features on the outcomes of hybrid percolation can be investigated on a common ground . to facilitate understanding and to provide support for our claims ,",
    "several examples accompany the analysis and illustrate its practical implementation .",
    "moreover , our model encompasses most variants of the cm published to date , we provide several examples supporting this claim as well .",
    "finally , we show how our approach can be adapted to model interdependent graphs  in which the extensive component emerges via a discontinuous transition instead of a continuous one @xcite through a suitable change in the definition of what constitutes an extensive component ( i.e. , the order parameter ) .",
    "this adaptation show that a graph can successively undergo a continuous then a discontinuous phase transition , and provide a quantitative measure of the effect of clustering on the emergence of the extensive component .",
    "the paper is organized as follows . in sec .",
    "[ sec : omnibus_small_graphs ] , we introduce the set of iterative equations that exactly solves the size distribution of components in finite - size arbitrary graphs . in sec .  [",
    "sec : omnibus_pgf_formalism ] , we formally define the general graph ensemble discussed above and obtain its exact structural properties under hybrid percolation ( i.e. , the size and composition of the components and the position of the percolation threshold ) .",
    "we then illustrate the workings of our formalism with several examples and special cases in sec .  [",
    "sec : omnibus_applications ] .",
    "we finally show how our approach can be adapted to model interdependent graphs in sec .",
    "[ sec : omnibus_discontinuous ] .",
    "conclusions and final remarks are collected in sec .",
    "[ sec : omnibus_conclusion ] .",
    "to reconcile the tree - like assumption of the pgf approach with the presence of motifs in graphs , the outcomes of percolation on these motifs  the distribution of the number of vertices that can be reached from a given vertex  must be obtained beforehand .",
    "these distributions can be computed by hand by enumerating each possible configuration where vertices and edges exist with given probabilities @xcite .",
    "however , this procedure becomes rapidly unwieldly for motifs of more than a handful of vertices .",
    "instead , we generalize the equations presented in ref .  @xcite to obtain a set of iterative equations that solve the outcome of hybrid percolation on small arbitrary graphs .",
    "+    let us first consider multitype random graphs as a generalization of the @xmath0 model ( i.e. , erds - rnyi random graphs ) in which @xmath1 vertices are linked by edges that exist individually and independently with a probability @xmath2 @xcite .",
    "we generalize this model by labeling vertices using types ; the set of types is noted @xmath3 , and there are a total of @xmath4 types of vertices .",
    "a directed edge from a vertex of type @xmath5 towards a vertex of type @xmath6 ( noted @xmath7 ) exists with a probability @xmath8 independently of other potential edges .",
    "vertex and a type @xmath6 vertex ( noted @xmath9 ) therefore occurs with a probability @xmath10 .",
    "the symmetric case where @xmath11 for all @xmath5 and @xmath6 is statistically equivalent to the situation where all edges are undirected .",
    "] for the sake of conciseness , we will refer to a graph composed of @xmath12 vertices of type @xmath5 ( with @xmath13 ) with the vector @xmath14 .",
    "we will use a similar notation for other quantities throughout this paper , unless specified otherwise .",
    "since edges may be directed , we define a component as the vertices that are reachable from a given initial vertex , including itself ( i.e. , the out - component rooted to this given vertex ) .",
    "this initial vertex is identified solely by its type since vertices of a given type are indistinguishable .",
    "we define @xmath15 as the probability that @xmath16 vertices can be reached from an initial vertex of type @xmath5 in a graph containing @xmath17 vertices .",
    "the calculation of @xmath15 begins with the initial condition @xmath18 , where @xmath19 is the vector of kronecker deltas @xmath20 and corresponds to a single vertex of type @xmath5 .",
    "this initial condition simply states that the probability of finding a component of one vertex of type @xmath5 in a graph containing one vertex of type @xmath5 is 1 .",
    "now suppose that there are other vertices in the graph and that it contains @xmath17 vertices instead .",
    "the probability of finding a component of only one vertex of type @xmath5 in this graph , @xmath21 , is equal to the probability that there is a component containing @xmath19 vertex , @xmath22 , ( which in this case is equal to one ) multiplied with the probability that none of the potential edges from the vertex in the component ( i.e. , the vertex of type @xmath5 ) towards the other vertices of the graph of size @xmath17 exist @xmath23 let us now consider a component made of 2 vertices of type @xmath5 , that we note @xmath24 . by definition of the multitype random graphs , we know that @xmath25 since the component exists only if there is a directed edge from the initial vertex to the other vertex of type @xmath5 . following the steps leading to eq .",
    ", the probability of finding a component of size @xmath24 from an initial vertex of type @xmath5 in a graph containing @xmath17 vertices ( we assume that @xmath26 ) is @xmath27 where the extra factor @xmath28 accounts for the number of ways to choose the second vertex among the @xmath29 available vertices of type @xmath5 in the graph , and @xmath30 is the number of potential edges from the two vertices of type @xmath5 towards the @xmath31 vertices of type @xmath32 . repeating this exercise for larger components , we obtain the following general form for a generic component of size @xmath33    [ eq : omnibus_gnp ] @xmath34 where @xmath35 is the probability that @xmath33 vertices form a component considering an initial vertex of type @xmath5 . in this last equation , the binomial coefficients count the number of ways the other @xmath36 vertices in the component can be chosen from the @xmath37 vertices available in the graph , and the other terms correspond to the probability that no other vertices can be reached from the @xmath33 vertices in the component .    the only missing information in eq .",
    "is the probability @xmath35 . as seen in the two simple examples above , it is possible to compute the probability @xmath35 by hand , but this calculation becomes rapidly tedious as the size of the component increases . fortunately , we can use eq .   to circumvent this difficulty .",
    "for example , from @xmath18 ,",
    "eq .   yields @xmath38 . since the probabilities must sum to 1 for a given graph size",
    ", we conclude that @xmath39 .",
    "hence it is possible to build upon the probabilities computed for smaller graph size to obtain the missing probability @xmath35 by simply asking for normalization . in general terms , @xmath40 where the probabilities @xmath41 are obtained with eq .  , and where the sum covers every possible instances of @xmath42 such that @xmath43 for all @xmath6 but excludes the case in which all elements of the two vectors are equal ( i.e. , @xmath44 for every @xmath6 ) .",
    "in short , eqs .",
    "( [ eq : omnibus_gnp_1])([eq : omnibus_gnp_2 ] ) are mutually dependent : the left - hand side of one feeds the right - hand side of the other . thus , from a graph consisting of a single vertex ( the initial condition ) , eqs .",
    "( [ eq : omnibus_gnp_1])([eq : omnibus_gnp_2 ] ) extend the graph to the desired size @xmath17 , and keep track of the component size distribution along the way to build the final distribution @xmath45 .",
    "a mass of information is produced during the iteration of eqs .",
    "( [ eq : omnibus_gnp_1])([eq : omnibus_gnp_2 ] ) : the probability of finding every possible components @xmath33 in each intermediate graph whose size is smaller than @xmath17 .",
    "when interested in bond percolation solely ( as in ref .",
    "@xcite ) , the only probabilities of interest are the ones related to the graph of maximum size @xmath17 .",
    "this ultimately leaves most of the calculated probabilities unused .",
    "however , if interested in hybrid percolation , that is when edges _ and _ vertices exist with given probabilities , all the calculated probabilities can be put to contribution . the probability for a graph of original size @xmath17 to be left with @xmath46 vertices after each of its vertices has been independently _ kept _ with probabilities @xmath47 ( i.e. , a vertex of type @xmath6 is kept with probability @xmath48 ) is @xmath49 where we assume that the initial vertex of type @xmath5 exists .",
    "hence , from a starting vertex of type @xmath5 , the probability to find a component of size @xmath33 in a graph of original size @xmath17 when vertices and edges exist with given probabilities , @xmath50 , is @xmath51    where the sum covers every possible instances of @xmath46 such that @xmath52 for every @xmath53 .",
    "thus , by slightly increasing the computational effort , it is possible to incorporate site percolation into the systematic method introduced in ref .",
    "@xcite for bond percolation .",
    "our framework can also be used to predict the outcomes of hybrid percolation on small arbitrary graphs . by small arbitrary graphs ,",
    "we mean graphs of finite size with a fixed structure , in which edges may be directed and/or multiple , and whose vertices may belong to types .",
    "we use the _ adjacency _ matrix @xmath54 , whose element @xmath55 is the number of edges leaving vertex @xmath5 towards vertex @xmath6 , to specify the structure .",
    "figure  [ fig : omnibus_allard_fig_1 ] depicts an example of such an arbitrary graph . in such graphs",
    ", percolation corresponds to the random removal of edges and vertices according to some given probabilities which may depend on the type of the vertices involved . predicting the outcome of percolation then consists in predicting the probability that a component of size @xmath33 can be reached from a given initial vertex in a graph of size @xmath17 .    for eqs .",
    " to be applicable , we need to map arbitrary graphs unto multitype random graphs .",
    "this mapping is achieved by assigning to each vertex its own type ( @xmath4 equals the number of vertices ) , and by setting the probabilities @xmath56 to mimic the structure of the original arbitrary graph . to account for the fact that more than one edge may exist between two vertices in the original graph , we set @xmath57 , where @xmath58 is the probability that an individual edge from vertex @xmath5 to vertex @xmath6 remains after the random removal of edges in the arbitrary graph . note that @xmath58 may depend on the original types of vertices @xmath5 and @xmath6 in the graph [ e.g. , there are two types of vertices in fig .",
    "[ fig : omnibus_allard_fig_1 ] ] . the same applies for the existence probabilities of vertices ( i.e. , @xmath59 must be equal to @xmath60 ) .",
    "an example is given in the caption of fig .",
    "[ fig : omnibus_allard_fig_1 ] . using this",
    "mapping , eqs .",
    " offer a systematic procedure to compute the outcomes of hybrid percolation on small arbitrary graphs .",
    "figure  [ fig : omnibus_allard_fig_1 ] compares the predictions of eqs .",
    " with the results of numerical simulations for the arbitrary graph shown in fig .",
    "[ fig : omnibus_allard_fig_1 ] . as expected , a perfect agreement is observed .",
    "we now turn our attention to the generalized version of the cm briefly described in the introduction .",
    "we provide a formal definition of the model , and analytically solve percolation for this general ensemble of random graphs .",
    "+    the cm defines an ensemble of graphs that are random in all respects except for the _ degree _ of their vertices ( the number of neighbors ) which is prescribed by a given distribution @xmath61 .",
    "more precisely , to generate graphs of this ensemble we start with @xmath62 vertices and assign a degree to each one by drawing an integer from @xmath61 .",
    "we then build a list of stubs ( half - edges ) in which a vertex whose degree is @xmath32 appears @xmath32 times .",
    "we shuffle the list and pair stubs according to this randomized list to create edges . up to corrections of order @xmath63",
    ", this procedure uniformly samples the ensemble of graphs with a given degree distribution @xcite .",
    "moreover , as closed loops also occur with a probability proportional to @xmath64 , this procedure generates graphs that are locally tree - like in the limit @xmath65 .",
    "we generalize this scheme to account for types of vertices and types of stubs . in our model ,",
    "each of the @xmath62 vertices belongs to a type and we note @xmath3 the set of vertex types , as in the last section .",
    "we also note @xmath66 the fraction of vertices whose type is @xmath5 . as in the cm , vertices are assigned a number of stubs , but now these stubs are identified with types as well .",
    "we say that a vertex has @xmath67 stubs of type @xmath68 , and we note @xmath69 the set of stub types . unless specified otherwise , greek and latin letters refer to types of edges and vertices , respectively .",
    "the number of stubs of each type belonging to a vertex of type @xmath5 is prescribed by the joint degree distribution @xmath70 .",
    "hence , when generating graphs from this ensemble , each of the @xmath62 vertices is assigned a type according to @xmath71 and then assigned a number of stubs of each type according to the corresponding joint degree distribution .    to generate graphs from this sequence of vertices ,",
    "we build a list of stubs for each pair @xmath72 where @xmath73 and @xmath74 .",
    "for example , a vertex of type @xmath5 that has @xmath67 stubs of type @xmath68 and @xmath75 stubs of type @xmath76 appears @xmath67 times in the list @xmath72 and @xmath75 times in the list @xmath77 .",
    "stubs are then randomly matched according to a set of rules  noted @xmath78to generate graphs .",
    "the information encoded in these rules is twofold . on the one hand",
    ", they prescribe from _ which _ lists should stubs be picked during the matching step .",
    "mathematically , this is encoded in the distribution @xmath79 where @xmath17 is a matrix whose elements , @xmath80 ( for every @xmath73 and @xmath74 ) , give the number of stubs from each list involved in the edge ( or _ hyperedge _ , if more than two stubs are involved ) .",
    "the probability that an hyperedge contains @xmath17 stubs is then @xmath81 . on the other hand ,",
    "the rules @xmath78 prescribe _ how _ the vertices are connected to one another within the hyperedge .",
    "for example , stubs from the list @xmath72 and @xmath82 could be paired to create undirected edges between layers @xmath5 and @xmath6 of _ multilayer _ graphs .",
    "similarly , stubs from the lists @xmath77 and @xmath83 could be paired to create directed edges between vertices of a same type ( the two types of stubs corresponding respectively to the _ _ in-__degree and _ _ out-__degree ) . moreover ,",
    "three stubs from a same list could be matched to create triangles , or @xmath84 stubs of type @xmath85 stemming from different types of vertices could be matched to form a multitype erds - rnyi motif where edges exist with probability @xmath2 ( see sec .",
    "[ sec : omnibus_small_graphs_multitype ] ) .",
    "in fact , the hyperedges can take any imaginable form and composition as long as they can be mapped unto the multitype random graphs defined in sec .",
    "[ sec : omnibus_small_graphs ] .",
    "note that only one stub is required to be part of an hyperedge , even if this hyperedge contributes to more than one to the degree of vertices .",
    "for instance , if stubs of type @xmath86 correspond to triangles , a vertex with @xmath87 will belong to two triangles .",
    "an illustration of the stub matching scheme is given in fig .",
    "[ fig : omnibus_example ] .    for this graph ensemble to be consistent , the distributions @xmath88 and @xmath79 must obey certain constraints in the limit @xmath65 .",
    "namely @xmath89 for each @xmath90 and @xmath91 , where @xmath92 represents the average of @xmath93 according to the distribution @xmath94 .",
    "these constraints simply require that the ratio of the average number of elements in each list ( left ) equals the relative proportion in which pairs appear in hyperedges ( right ) .    as for the cm ,",
    "this _ stub matching _",
    "scheme uniformly samples  up to corrections of order @xmath63a maximally random ensemble of graphs defined by the distributions @xmath71 and @xmath95 , and by the rules @xmath78 .",
    "since stubs are matched randomly , the graphs of that ensemble have an underlying tree - like structure in the limit @xmath65 except within clustered hyperedges .",
    "+    to solve percolation on this general ensemble of random graphs , we adapt the well - known pgf approach @xcite to account for vertex and stub types .",
    "as mentioned above , this approach assumes that the structure of the graphs is locally tree - like , an assumption that is not valid whenever an hyperedge contains a loop ( e.g. , a triangle ) .",
    "however , by solving the component size distribution on each hyperedge beforehand , it is possible to consider that the hyperedge has an _ effective _ tree - like structure : the probability that there is an _ effective _ edge from vertex a to vertex b is simply the probability that vertex b can be reached from vertex a either directly or through the other vertices in the hyperedge .",
    "figures  [ fig : omnibus_pgf] illustrate the idea behind the effective tree - like structure .",
    "this slight change of perspective allows the use of the pgf approach even though the tree - like structure assumption is not valid in the original graph ensemble .",
    "the effective tree - like structure of hyperedges is unveiled with eqs .  ,",
    "where a vertex is now identified by the pair @xmath72 instead of by its vertex type solely . in other words , we keep track of the type of the vertices but also the type of the stubs through which they are involved in the hyperedge . as a result",
    ", bold variables like @xmath17 and @xmath33 now contain @xmath96 elements instead of the @xmath4 elements as in sec .",
    "[ sec : omnibus_small_graphs ] .",
    "the quantity @xmath97 therefore corresponds to the probability that a pair @xmath72 leads to @xmath33 pairs ",
    ", @xmath98 pairs @xmath99 , for each @xmath100 and @xmath53in an hyperedge containing @xmath17 pairs . a dependency on the rules @xmath78 has been added in @xmath97 to explicitly mark that the inner structure of the hyperedges ( e.g. , quenched or random nature , probabilities of existence of vertices or edges ) is prescribed by these rules . while having different nature or different rules of connection . in such case , the probabilities @xmath97 should represent the appropriate weighted average of the probabilities computed with eqs .   for each hyperedge .",
    "it is however strongly encouraged to use different types of stubs  hence different compositions  for each different categories of hyperedges to keep the analysis as clear as possible . ]",
    "the pgf that generates the distribution of the number of pairs that can be reached from an initial pair @xmath72 in an hyperedge containing @xmath17 pairs is @xmath101 where the sum covers every possible instances of @xmath33 such that @xmath102 for every @xmath103 and @xmath104 ( `` @xmath105 '' denotes the entrywise product ) .",
    "these two deltas of kronecker account for the fact that there is at least one pair @xmath72 in the hyperedge .",
    "similarly , the two others deltas of kronecker @xmath106 appearing in eq .",
    "remove the initial pair  by definition included in @xmath33from the count of reachable pairs . because we are ultimately interested in the number of pairs that can be reached from a given initial pair regardless of the specifics of the hyperedge",
    ", we must remove the dependency of eqs .   on the composition @xmath17 . to do so , we average this pgf over the probabilities that the initial pair @xmath72 belongs to an hyperedge whose composition is @xmath17 . since stubs are matched randomly , a vertex identified by the pair @xmath72 is ten times more likely to belong to an hyperedge containing ten pairs @xmath72 than to belong to an hyperedge that contains only one pair @xmath72 .",
    "consequently the probabilities @xmath81 must be weighted by the number of pairs @xmath72 that each composition contains , i.e. , averaged over @xmath107 , where the normalizing factor , @xmath108 , is the average value of @xmath80 with respect to the distribution @xmath81 .",
    "doing so yields the pgf generating the distribution of the number of pairs of each types that can be reached from a pair @xmath72 @xmath109 where the sum over @xmath17 covers all hyperedge compositions such that @xmath110 .",
    "computed for each initial pair @xmath72 , @xmath111 provides the projection of the outcomes of percolation on the hyperedges unto an effective branching tree and therefore permits the use of the pgf approach .",
    "to solve percolation on the graphs defined in the previous subsection , we first need to compute the distribution of the composition of the neighborhood of vertices .",
    "the neighborhood of a vertex is the set of _ reachable _ vertices with which it shares an hyperedge . in other words ,",
    "vertex b is a neighbor of vertex a if there exists an effective edge from vertex a to vertex b. the pgf @xmath111 generates the distribution of neighbors that a vertex of type @xmath5 has through one of its stubs of type @xmath68 . in the limit @xmath65 ,",
    "the tree - like structure of the graphs ensures that the neighboring vertices reachable through two different stubs do not overlap .",
    "hence , the composition of the neighborhood of a vertex of type @xmath5 that has @xmath67 and @xmath75 stubs of type @xmath68 and @xmath76 is generated by @xmath112^{k_\\alpha } \\cdot \\big[\\theta_{\\beta i}(\\bm{x})\\big]^{k_\\beta}$ ] , which corresponds to the convolution of the distributions .",
    "since the number of stubs belonging to vertices of type @xmath5 is distributed according to @xmath88 , we obtain that the distribution of the composition of the neighborhood of vertices of type @xmath5 is generated by @xmath113^{k_\\alpha } \\ , \\end{aligned}\\ ] ] where the sum covers all cases where @xmath114 . as in @xmath111 ,",
    "this pgf keeps track of the type of the stubs from which the neighboring vertices have been reached through the subscripts of the variables @xmath115 . in other words , @xmath116 generates the number of pairs that are in the neighborhood of a vertex of type @xmath5 .",
    "this pgf is analogous to the function @xmath117 generating the degree distribution in the cm @xcite .",
    "the complete solution to the percolation problem requires the distribution of possible neighborhood compositions for vertices reached through one of their stubs . as discussed for @xmath111 , the probability for a stub of type @xmath118 to be attached to a vertex with a total of @xmath119 stubs ( i.e. , @xmath67 stubs of type @xmath68 for every @xmath73 )",
    "is weighted by the number of stubs of type @xmath118 that this vertex has .",
    "hence , given that a vertex of type @xmath5 has been reached through one of its stubs of type @xmath118 [ i.e. , a pair @xmath120 , the composition of the neighborhood accessible from its _ other _ stubs is generated by @xmath121^{k_\\alpha - \\delta_{\\alpha\\mu } } \\ , \\end{aligned}\\ ] ] where the delta @xmath122 has been added to exclude from the count the stub of type @xmath118 from which the vertex has been reached , and where @xmath123 is the average number of stubs of type @xmath118 that vertices of type @xmath5 have .",
    "the distributions generated by @xmath124 are analogous to the _ excess _ degree distribution generated by @xmath125 in the cm @xcite .",
    "figure  [ fig : omnibus_pgf ] illustrates the information encoded in the pgfs @xmath124 .",
    "having defined the pgfs @xmath116 and @xmath124 , the behavior of the extensive `` giant '' component can be predicted in the limit @xmath65 using simple self - consistency arguments .",
    "we define @xmath126 as the probability that a vertex of type @xmath5 reached via one of its stubs of type @xmath118 does _ not _ lead to the giant component .",
    "self - consistency then requires that if this pair does not lead to the giant component , then neither should the pairs that are reachable from it . since the distribution of the number of pairs reachable from a given pair @xmath127 is generated by eq .",
    ", this self - consistency requirement can be rewritten as @xmath128 for every @xmath129 and @xmath74 . because the coefficients of @xmath124 are normalized ( they form a probability distribution ) , the point @xmath130 ( every @xmath126 equals 1 ) is always a solution of eqs .  . however , as the density of edges and/or vertices increases with increasing @xmath47 and/or @xmath131 , another solution where at least one element of @xmath132 is smaller than 1 appears .",
    "this new solution marks the emergence of an extensive component .",
    "because their coefficients are all positives , the pgfs @xmath124 are all convex and monotonic increasing in @xmath133^{|\\mathcal{e}|\\times|\\mathcal{n}|}$ ] .",
    "hence when @xmath130 is the only solution of eqs .   in @xmath133^{|\\mathcal{e}|\\times|\\mathcal{n}|}$ ] , it is the stable fixed point of ( with @xmath134 ) @xmath135 for any initial condition @xmath136 in @xmath133^{|\\mathcal{e}|\\times|\\mathcal{n}|}$ ] , and where the map @xmath137 consists of every @xmath124 .",
    "this fixed point becomes unstable through a transcritical bifurcation as soon as another solution in @xmath133^{|\\mathcal{e}|\\times|\\mathcal{n}|}$ ] appears .",
    "the shape of @xmath137 in @xmath133^{|\\mathcal{e}|\\times|\\mathcal{n}|}$ ] and the fact that @xmath138 implies that this other solution is unique in the interval of interest , that it is a stable fixed point of eq .  , and that the transition is continuous . analyzing",
    "the stability of @xmath137 around the fixed point @xmath130 leads to the criterion for the emergence of the giant component @xmath139 where @xmath140 is the jacobian matrix of @xmath137 around @xmath141 , and @xmath142 is the identity matrix .",
    "put differently , an extensive component exists whenever the largest eigenvalue of @xmath140 , @xmath143 , is greater than one .",
    "are all positives , @xmath140 is a non - negative matrix and the perron - frobenius theorem ensures that its largest eigenvalue is real , positive and non - degenerate .",
    "]    having solved eqs .  , the probability that a vertex of type @xmath5 leads to the giant component through at least one of its neighbors is given by @xmath144 .",
    "consequently , the probability that a randomly chosen vertex does lead to the giant component is @xmath145 where @xmath146 is the probability that a vertex of type @xmath5 exists .    as shown in sec .",
    "[ sec : omnibus_small_graphs ] , hyperedges may include directed edges , or edges that are more likely to exist in one direction than the other [ i.e. , @xmath147 in eqs .  ] .",
    "this implies that while vertex b is in the neighborhood of vertex a , vertex a may not be in the neighborhood of vertex b. from such local asymmetries , a global asymmetry arises between the probability that a vertex leads to the giant component , @xmath148 , and the relative size @xmath149 of the giant component . in such case",
    ", the extensive component has a `` bow - tie '' structure @xcite meaning that the vertices involved in the extensive component belong to one of the three non - overlapping sets @xmath150 , @xmath151 and @xmath152 .",
    "the set @xmath150 includes vertices that lead to the giant component but that can not be reached from it ; these vertices are somehow `` hidden '' behind directed edges .",
    "the set @xmath152 contains vertices that can not lead to the giant component but that can be reached from it ; they are positioned downstream of directed edges .",
    "the set @xmath151 contains vertices that lead to the giant component and that can be reached from it . from this , we conclude @xmath153 and @xmath154 .",
    "this perspective offers a direct and intuitive way to calculate @xmath149 : it is the probability that a vertex does not lead to the extensive component when the direction of every edges is reversed .",
    "this edge reversal is fully encoded in @xmath155 computed with eqs .",
    "with incoming directed edges swapped into outgoing ones ( and vice versa ) , and with edges that were more likely to exist in a given direction now more likely to exist in the opposite direction ( i.e. , @xmath8 becomes @xmath156 ) . from these probabilities , we define the pgfs @xmath157 , @xmath158 and @xmath159 which are analogous to the ones previously defined [ @xmath160 and @xmath81 remain unchanged ] . defining @xmath161 as the probability that a vertex of type @xmath5 reached by one of its stubs of type @xmath118 does not lead to the giant component in the _ reversed",
    "_ graph ensemble , self - consistency now requires @xmath162 for every @xmath129 and @xmath74 . as for eqs .  , the solution of this set of equations correspond to the fixed point of the corresponding map and",
    "can therefore be obtained by successive iterations of any initial condition in @xmath133^{|\\mathcal{e}|\\times|\\mathcal{n}|}$ ] .",
    "the elements of the jacobian matrix of both eqs .   and are the average number of pairs , say @xmath82 , that are in the neighborhood of a pair , say @xmath127 , in their respective graph ensemble . since both systems , eqs .   and , correspond to different perspectives of the same graph ensemble , the two jacobian matrices are linked by a similarity transformation , and therefore have the same eigenvalues .",
    "hence the transcritical bifurcation occurs simultaneously in both systems .    having obtained @xmath163 from eqs .",
    ", the probability for a vertex of type @xmath5 to be part of the giant component is @xmath164 , and the relative size of the giant component is @xmath165 clearly , when all hyperedges are symmetric ( i.e. , @xmath11 for every @xmath90 ) there is no global asymmetry in the graph ensemble , and @xmath166 .",
    "also , whenever eqs .  ",
    "are used in the context of site percolation  where vertices exist or are activated with a given set of probabilities  the value of @xmath148 and @xmath149 is relative to the number of vertices that exist .",
    "in other words , @xmath148 is the probability that an existing vertex leads to an extensive component , and @xmath149 is the probability that an existing vertex is part of it .      substituting @xmath167 by @xmath168 for every @xmath53 and @xmath100 in eq .",
    "yields a pgf that generates the number of vertices of each type that are _ directly accessible _ from a vertex of type @xmath5 ( i.e. , vertices that are in its neighborhood ) .",
    "in other words , the information concerning the types of stubs is lost . using self - consistency arguments similar to the one used in the previous subsection , it is possible to obtain a pgf that generates the distribution of the number of vertices of each type that will be _ eventually reached _ from a vertex of type @xmath5 ; the _ reach _ of this new pgf is no longer limited to the immediate neighborhood .",
    "in fact this new pgf allows to investigate the composition and the sizes of the components that contain a finite number of vertices .",
    "let this new pgf be denoted @xmath169 .",
    "to compute @xmath169 , we first consider the pgf @xmath170 that generates the distribution of the number of all pairs of each type that will _ eventually _ be reached ( i.e. , not limited to the first neighbors ) from a vertex of type @xmath5 given that this vertex has been reached from one of its stubs of type @xmath68 . in other words , this function generates the distribution of the number of the vertices that are eventually reached from a pair @xmath72 . note that @xmath170 is a function of @xmath171 so that it keeps track of the type of the stubs from which each vertex has been reached .",
    "besides yielding a tree - like structure , the _ stub matching _",
    "scheme used to generate graphs implies that the pgfs @xmath172 are invariant under translations on the graphs in the limit @xmath65 . in other words , while navigating on a graph from this ensemble , the number and the type of the vertices downstream from any given vertex does not depend on the types of the vertices ( or the types of the stubs ) previously encountered ; navigating on graphs from this ensemble is a stationary markov process ( i.e. , it only depends on the _ current position _ on the graph ) .",
    "consequently , a vertex of type @xmath5 reached from one of its stubs of type @xmath68 and a pair @xmath72 present in its neighborhood should both lead to a finite tree whose size and composition are identically distributed ; this distribution is generated by @xmath170 . considering every combination @xmath72 , this self - consistency requirement can be mathematically formulated as @xmath173 where the extra @xmath174 accounts for the vertex of type @xmath5 that has been reached through one of its stubs of type @xmath68 .",
    "analogously to the set of probabilities @xmath175 , the pgfs @xmath176 are the fixed point of ( with @xmath134 ) @xmath177 where `` @xmath105 '' denotes the entrywise product , and where @xmath178 is the same map as in eq .  .",
    "it is in fact straightforward to show that the extra @xmath171 guarantees that the distributions generated by @xmath179 can be obtained for components of @xmath1 vertices or less in @xmath180 iterations of eq .   from the initial condition @xmath181 [ i.e. , @xmath182 for every @xmath74 and @xmath73 ] .",
    "having obtained @xmath179 up to a sufficient size of components , @xmath1 , the number of vertices of each type that can be reached in a finite component from a randomly chosen vertex of type @xmath5 is generated by @xmath184 .",
    "the pgf generating the number of vertices of each type that are accessible in a small component from a randomly chosen ( existing ) vertex is @xmath185 it is worth mentioning that the distributions generated by @xmath169 and @xmath186 are not normalized in the presence of an extensive component as there is a non - zero probability that a pair @xmath72 leads to the giant component .",
    "in fact , comparing eqs .   and leads to the conclusion that @xmath187 and that @xmath188 .",
    "to demonstrate the versatility and the flexibility of the formalism , we present a series of representative examples .",
    "this will also clarify the conceptual and numerical steps necessary to implement such a general approach .",
    "semi - directed random graphs are composed of indistinguishable vertices connected via undirected and directed edges .",
    "they were used in ref .",
    "@xcite to study the impact of non - reciprocal connections in contact networks on the propagation of an emerging infectious disease .",
    "these non - reciprocal connections accounted for the susceptibility of health - care workers to get infected from infectious individuals seeking treatments in hospitals .",
    "semi - directed are also a good first example for they have the well - known undirected graphs and directed graphs as special cases .",
    "every vertices in these graphs belong to the same type ( @xmath189 , type 1 , @xmath190=1 ) , and there are @xmath191 types of stubs : stubs of type a are paired together to form undirected edges , and stubs of type b ( outgoing ) and c ( incoming ) are paired to form a directed edge .",
    "the joint degree distribution @xmath192 corresponds to the distribution of _ undirected _ degree , _",
    "out_-degree and _ in_-degree . in this scenario ,",
    "the conditions given by eq .   imply that there must be as much incoming stubs as there are outgoing stubs , @xmath193 , and they fix the values of @xmath194 in terms of the average degrees , @xmath195 . assuming that edges exist with probability @xmath196 and vertices exist with probability @xmath197",
    ", we find from eqs .   and    [ eq : omnibus_theta_semidirected ] @xmath198    from which we define the pgfs @xmath199 , @xmath200 and @xmath201 from eqs .   and .",
    "note that @xmath202 does not exist as vertices can not be reached by an outgoing stub .",
    "similarly , when reversing the direction of edges ( directed edges now run from c stubs to b stubs ) , we obtain    [ eq : omnibus_bartheta_semidirected ] @xmath203    which yield the pgfs @xmath204 , @xmath205 and @xmath206 [ @xmath207 is non - defined ] . using eqs .   and in eqs .  ",
    "with @xmath208 yields the results obtained in ref .",
    "@xcite , and to the ones obtained for purely directed @xcite or purely undirected random graphs @xcite in the appropriate limits .",
    "other interesting special cases of our model are correlated random graphs : graphs where vertices are more likely to be connected with vertices having specific intrinsic properties ( e.g. , degree , centrality , ethnicity , age group , gender ) . in such cases , there are @xmath4 types of vertices , one for each intrinsic property , and there are as many types of stubs : each type of stubs corresponds to the type of the vertex that is at the other end of the edge . to simplify the notation ,",
    "types of stubs will be identified by the type of the vertex toward which they point ( i.e. , @xmath209 ) .",
    "hence the joint degree distribution @xmath160 prescribes the number of vertices of each type that vertices of type @xmath5 are connected to .",
    "the conditions ask that there are as many stubs stemming from vertices of type @xmath5 toward vertices of type @xmath6 as in the reverse direction , @xmath210 .",
    "these constraints also prescribe the distribution @xmath211 where @xmath212 is simply the normalization factor . assuming that vertices of type @xmath5 exist with probability @xmath146 , and that edges going from a vertex of type @xmath5 to a vertex of type @xmath6 exist with probability @xmath8 ( i.e. , edges may be more likely to exist in one direction that in the other ) , we get from eqs .   and    [ eq : omnibus_theta_correlated ] @xmath213    for @xmath90 .",
    "using eqs .   in eqs .",
    " and setting every @xmath214 yields the results obtained in ref .",
    "@xcite for _ multitype _ graphs , which are themselves a generalization of several other formalisms @xcite .",
    "we have also used this approach in ref .",
    "@xcite to study the observability of random graphs , and in ref .",
    "@xcite to define an ensemble of graphs with an arbitrary k - core structure .",
    "an important category of correlations is the one based on the degree of vertices @xcite .",
    "these correlations are encoded in the conditional probability @xmath215 corresponding to the probability that the neighbor of a vertex with a degree @xmath216 has a degree equal to @xmath217 .",
    "this can be reproduced with our formalism by considering that every vertex with the same degree are of the same type ( i.e. , a vertex of type @xmath5 has @xmath5 neighbors , and consequently @xmath218 corresponds to the degree distribution ) , and by using the following type - specific joint degree distribution @xmath219^{k_j } \\ .\\end{aligned}\\ ] ] from eq .",
    ", we obtain @xmath220^i \\ , \\end{aligned}\\ ] ] where @xmath221 is given by eq .  , and eq .   yields @xmath222^{i-1 } \\ , \\end{aligned}\\ ] ] which is independent of the type of the vertex / stub , namely @xmath223 , from which the vertex has been reached .",
    "this is a direct consequence of the multinomial distribution in eq .   and",
    "shows that our approach , through the joint distribution @xmath160 , can include more detailed correlations in the degree of the neighbors of vertices",
    ".    it may be useful at this point to illustrate the precise connection with previous works .",
    "consider the quantity @xmath224 $ ] which under successive application of eqs .  , and becomes the self - consistent expression @xmath225\\end{aligned}\\ ] ] for every @xmath226 . setting every @xmath227 , with @xmath228 , in this last equation yields eqs .",
    "( 5 ) and ( 13 ) of ref.@xcite , while eq .",
    "( 8) of ref .",
    "@xcite is obtained by setting @xmath229 .",
    "similarly , replacing @xmath230 by @xmath231 and assuming every @xmath232 in eq .",
    "yields the results of ref .",
    "more precisely , setting every @xmath233 allows to retrieve their eq .",
    "( 15 ) , and their eq .",
    "( 8) is obtained by setting every @xmath234 , with @xmath235 .",
    "expressions for the size of the extensive component derived in refs .",
    "@xcite can be obtained from our formalism similarly .",
    "we now show how many variants of the cm containing clustered hyperedges ( i.e. , hyperedges that contain loops ) are special cases of the approach presented in this paper .",
    "since the clustering property is related to the number of triangles found in graphs  hence capturing the idea that _ the friend of my friend is also my friend_it is natural to introduce clustering in graphs through the use of triangles ( i.e. , three vertices all connected together ) @xcite .",
    "the simplest clustered graph ensemble then has @xmath189 types of vertices ( type 1 , @xmath236 ) , and @xmath237 types of stubs : two stubs of type a are paired to form undirected edges and three stubs of type b are matched to create triangles .",
    "note that only one stub of type b is required to belong to a triangle even though its contribution amounts to two to the degree of the vertex ; stubs can be seen as a membership to an hyperedge .",
    "the constraints given by eq .",
    "de facto set the values of @xmath238 since @xmath239 . assuming that vertices and edges exist with probabilities @xmath197 and @xmath196",
    ", we obtain from eqs .   and",
    "@xmath240x_{b1 } \\nonumber \\\\                        & + r_1 ^ 2p_{11}^2[3 - 2p_{11}]x_{b1}^2 \\ .\\end{aligned}\\ ] ]    using these two functions in eqs .",
    " leads directly to the results obtained in ref .",
    "similarly , the results of ref .",
    "@xcite can be obtained with three types of vertices , @xmath241 , and one type of stubs , @xmath242 , where all hyperedges are triangles containing one vertex of each type [ @xmath243 and @xmath244 .    besides triangles , clustering  or any digression from a perfect tree - like structure  has been introduced in random graphs through the inclusion of various categories of hyperedges that involve more than three vertices .",
    "for instance , in ref .",
    "@xcite clustering is incorporated through fully connected hyperedges , or _ cliques _ , where vertices or edges exist with given probabilities ( i.e. , erds - rnyi graphs ) . in all cases , there is only one type of vertices .",
    "we retrieve the model of ref .",
    "@xcite by using one type of stubs ; @xmath245 prescribes the number of cliques to which vertices belong , and @xmath246 prescribes the size of cliques ( respectively the distributions @xmath247 and @xmath248 in ref .",
    "@xcite ) . in the model considered in refs .",
    "@xcite , vertices belong to only one clique , but can have many single edges . since the number of single edges and the size of the clique can be correlated in the original model ,",
    "there is one type of stubs for each clique size and an additional type for single edges ; cliques of size @xmath84 are formed by matching @xmath84 stubs of the type assigned to cliques of size @xmath84 .",
    "hence the structure of the graphs is fully prescribed by @xmath249 whose argument indicates the number of single edges and the size of the clique .",
    "the constraints then yield @xmath250 where @xmath251 is the normalization constant . using these distributions and quantities",
    ", our model reproduces the ones presented in refs .",
    "also , we have used a version of our model that is similar to the one introduced in ref .",
    "@xcite to uncover a transition in the effectiveness of immunization strategies @xcite .    finally , two of the most versatile models published to date are also special cases of our model .",
    "reference  @xcite is a previous version of the model presented in this paper .",
    "the two main differences are that the previous version did not handle site percolation , and that only stubs of same type could be matched to create hyperedges ( e.g. , forbidding directed edge between vertices of a same type ) .",
    "the model introduced in ref .",
    "@xcite can be retrieved from our model with one type of vertices ( @xmath189 ) and with one type of stubs for each _ role _ that a vertex can play in hyperedges . however , this approach lacks the systematic method offered by eqs .",
    "to solve percolation on each hyperedge beforehand , thereby limiting the number of hyperedges that can effectively be handled analytically .",
    "+    we now use our model to test a conjecture regarding the effect of clustering ( e.g. , triangles ) on bond percolation .",
    "references  @xcite proposed that clustering has opposite effects on the bond percolation threshold and on the size of giant component depending of the density of triangles in a graph . this density is measured through the degree dependent clustering coefficient @xmath252 : the probability that two neighbors of a vertex of degree @xmath32 are also neighbors ( i.e. , they complete the triangle ) .",
    "the conjecture states that the _ weak _ clustering regime @xmath253 leads to a higher percolation threshold and to a smaller giant component than in an equivalent unclustered graph .",
    "contrariwise , _ strong _ clustering , defined as @xmath254 , leads to a lower percolation threshold and to a larger giant component than in an equivalent unclustered graph .",
    "let us consider the following graph ensemble in which there are two types of vertices @xmath255 and three types of edges @xmath256 .",
    "every vertex of type 1 has one stub of type a and one stub of type b , while each vertex of type 2 has one stub of type b and one stub of type c. in other words , we set @xmath257 as @xmath258 .",
    "hyperedges are formed by matching either 4 stubs of type a , 4 stubs of type b ( two stemming from vertices of type 1 and two from vertices of type 2 ) , or 8 stubs of type c ; vertices are all connected to one another in every hyperedges .",
    "the constraints given by eq .   imply that @xmath259 and that @xmath260 follows the relation @xmath261 .",
    "vertices of type 1 all have a degree equal to 6 , and vertices of type 2 all have a degree equal to 10 .",
    "consequently , we see that @xmath262 and @xmath263 , which implies that this graph ensemble qualifies for the strong regime .    to isolate the effect of clustering on bond percolation , we compare the results obtained for the graph ensemble described above with the ones obtained with an equivalent unclustered version @xcite .",
    "this equivalent graph ensemble possesses identical correlations , but hyperedges are broken into individual independent edges instead ( e.g. , each vertex in an hyperedge containing @xmath1 vertices now have @xmath264 independent edges ) .",
    "the behavior of its giant component is obtained as in sec .",
    "[ sec : omnibus_example_correlated ] with @xmath265",
    ".    figure  [ fig : omnibus_clustering ] compares the behavior of the giant component in both ensembles when edges exist with probability @xmath196 .",
    "we conclude that although the clustered graph ensemble qualifies for the strong regime , the behavior observed is the one of the weak regime : higher percolation threshold and smaller giant component than for the equivalent unclustered graph .",
    "this behavior can be understood in terms of branching factors .",
    "the unclustered graphs have a tree - like structure and therefore maximize the number of _ new _ vertices encountered while navigating the graph : every edge leads to a new vertex . the redundancy caused by clustering means that not all edges lead to a new vertex in the clustered graphs , which reduces the average number of vertices that can be reached from",
    "any given vertex .",
    "hence a larger number of edges must be present for a giant component to appear ( e.g. , larger threshold ) , and this component will be smaller as many edges will be _ wasted _ by leading to vertices previously reached .",
    "this counterexample suggests that the criterion on @xmath252 could be a necessary condition for a strong clustering regime but that it is not a sufficient one .",
    "the explanation in terms of branching factors alongside the results in refs .",
    "@xcite point toward the conclusion that the effect of clustering on random graphs with an _ underlying _ tree - like structure is best described by the weak clustering regime . indeed ,",
    "@xcite has recently shown that strong clustering may induce a double continuous phase transition which conciliates the conjectured antagonistic effects of weak and strong clustering , and whose effects are in line with our conclusion .      from eqs .  , we see that the elements of the jacobian matrix @xmath140 used to determine the point at which the giant component appears have the general form @xmath266 for every @xmath90 and @xmath267 .",
    "these terms are in fact branching factors : each element is the average number of pairs @xmath99 that are present in the neighborhood of a pair @xmath127 .",
    "more precisely , the first term corresponds to the average number of stubs of type @xmath68 that a vertex of type @xmath5 has if it has been reached from one of its stubs of type @xmath118 ( this stub is excluded from the count if @xmath268 ) .",
    "the second term is the average number of pairs @xmath99 that can be reached in hyperedges accessed via a stub of type @xmath68 of a vertex of type @xmath5 .",
    "the value of these latter terms depends on the structure of hyperedges ( i.e. , rules @xmath78 ) and on the probabilities for vertices and edges to exist ( i.e. , @xmath47 and @xmath131 ) .",
    "let us assume that all hyperedges have the same structure ; vertices of different types may be involved in a nontrivial manner as long as all hyperedges have the same shape ( e.g. , they all are triangles ) .",
    "we also suppose that vertices and edges exist with probabilities that are independent of their type , that is @xmath269 and @xmath270 for all @xmath90 . in such case ,",
    "every nonzero elements of the jacobian matrix , @xmath271 , is a polynomial in @xmath272 and @xmath2 , @xmath273 , and is independent of @xmath5 , @xmath6 , @xmath68 and @xmath274 .",
    "consequently the dependency in @xmath272 and @xmath2 can be factored out of the jacobian matrix @xmath275 since the giant component appears when @xmath276 , the points @xmath277 at which the phase transition occurs all belong to the critical surface @xmath278 whenever the jacobian matrix can be written like in eq .  ,",
    "any given point @xmath279 at which a graph ensemble is known to percolate can be related to any other critical point @xmath280 through @xmath281 .",
    "for instance , this relation leads to a direct bijection between the thresholds of pure site percolation @xmath282 and pure bond percolation @xmath283 through @xmath284 . additionally , @xmath285 for unclustered correlated random graphs , and the fact that @xmath272 and @xmath2 only appear as @xmath286 in eqs .",
    "implies that site and bond percolation are equivalent for this random graph ensemble .",
    "in this last section , we briefly show how our approach can be adapted to model interdependent graphs through a redefinition of eqs .",
    " , and use the resulting formalism to investigate the emergence of an extensive component on interdependent clustered random graphs .    to lighten the description , we consider the case of two interdependent graphs , graph a and graph b , without loss of generality ( guidelines for a straightforward generalization to an arbitrary number of graphs are given in ref .",
    "we assume that every edge in each graph is undirected such that there is no global asymmetry : the probability that a randomly chosen vertex leads to the extensive component is equal to the relative size of the extensive component ( i.e. , @xmath166 ) .",
    "furthermore , we consider that the pgfs @xmath116 and @xmath124 and all other related quantities defined in the previous sections ( i.e. , @xmath218 , @xmath78 , @xmath3 , @xmath59 ,  ) are known for both graphs and are identified with the superscript a or b. both graphs contain the same number of vertices which tends to infinity : @xmath287 .",
    "the change in the nature of the transition ( i.e. , from continuous to discontinuous ) originates from the existence of _ dependencies _ between vertices of the two graphs .",
    "again , to lighten the description , we consider the case in which each vertex has either one _ twin vertex _ on which it depends , or none . to specify the dependencies between vertices",
    ", we define @xmath288 as the probability that a vertex of type @xmath5 in graph a has a twin vertex of type @xmath289 in graph b. note that allowing graphs to be partially dependent  not all vertices have a twin vertex  implies that @xmath290 for each @xmath291 , and where the sum is over the types of the vertices in graph b. therefore , a fraction @xmath292 of the vertices of type @xmath5 in graph a do not have a twin vertex in graph b. a similar set of probabilities , @xmath293 with @xmath294 and @xmath295 , is defined to specify the dependencies of vertices in graph b. moreover , we add the constraint that the dependency between two vertices must be reciprocal unless a vertex s twin has no dependency whatsoever . in other words , if vertex @xmath296 in graph a depends on vertex @xmath297 in graph b , then either vertex @xmath297 depends on vertex @xmath296 as well or it depends on no vertex at all . in the latter case , vertex @xmath296 is the only vertex in graph a that can depend on vertex @xmath297 .",
    "this constrains the two probability sets , @xmath298 and @xmath293 , as there must be enough `` independent '' vertices in graph a ( graph b ) to account for the vertices in graph b ( graph a ) whose dependency is not reciprocal .",
    "mathematically , these conditions can be written as @xmath299 for each @xmath295 and @xmath300 . a similar expression in which the superscripts a and b are swapped",
    "must also hold . in the expression above",
    ", @xmath301 corresponds to the number of vertices of type @xmath5 in graph a that depend on a vertex of type @xmath289 in graph b , and @xmath302 is the number of vertices of type @xmath289 in graph b that have no dependency .",
    "a discontinuous phase transition is associated with the emergence of an extensive _ functional _ component : an extensive component composed solely of vertices with no dependency or whose twin vertex is part of the extensive functional component in its respective graph . to compute the size of the extensive functional component",
    ", we define @xmath303 as the probability that a vertex of type @xmath5 reached from one of its stubs of type @xmath118 in graph a _ does not _",
    "lead to the functional extensive component in graph a. similar probabilities are defined for the other types of vertices and stubs in graph a and in graph b. following the locally tree - like structure argument of sec .",
    "[ sec : omnibus_extensive_component ] , we now derive a set of self - consistent equations similar to eqs .   for these probabilities .",
    "let us consider the case of a vertex of type @xmath5 in graph a reached via one of its stubs of type @xmath118 . by definition , this vertex belongs to the extensive functional component in graph a with probability @xmath304 .",
    "only two scenarios can lead to this situation .",
    "the first one consists in the vertex being part of the extensive functional component in graph a and having no twin vertex .",
    "this happens with probability @xmath305 \\bar{q}_i^{ab}$ ] .",
    "the second scenario consists in the vertex being part of the extensive functional component in graph a and having a twin vertex that is part of the extensive functional component in its own graph .",
    "this scenario happens with probability @xmath306 \\sum_{v\\in\\mathcal{n}^b}q_{iv}^{ab}r_v^b\\big[1-g_v^b(\\bm{a^b})\\big ] \\ , \\end{aligned}\\ ] ] where @xmath288 is the probability that the twin vertex is of type @xmath289 , @xmath307 is the probability that it exists ( i.e. , it has not been removed ) , and @xmath308 is the probability that it belongs to the extensive functional component in graph b. summing these two scenarios yields @xmath309 \\big [ \\bar{q}_i^{ab } \\\\",
    "+ \\sum_{v\\in\\mathcal{n}^b}q_{iv}^{ab}r_v^b\\big[1-g_v^b(\\bm{a^b})\\big ] \\big ] \\ , \\end{gathered}\\]]which must hold for every @xmath291 and @xmath310 , as well as for graph b ( i.e. , simply swap the superscripts a and b in the last expression ) . having solved eqs",
    ".   for the probabilities @xmath311 and @xmath312 , the probability that a randomly chosen vertex of type @xmath5 in graph a belongs to the functional component is @xmath313 \\big [ \\bar{q}_i^{ab } \\\\",
    "+ \\sum_{v\\in\\mathcal{n}^b}q_{iv}^{ab}r_v^b\\big[1-g_v^b(\\bm{a^b})\\big ] \\big ] \\ , \\end{gathered}\\ ] ] which is similar to the calculation of @xmath314 in sec .",
    "[ sec : omnibus_extensive_component ] , but in this case the probability that a vertex of type @xmath5 belongs to the functional extensive component , @xmath315 , is weighted by the probability that its twin vertex , if any , belongs to the extensive functional component as well . averaging over the fraction of existing vertices of each type ( e.g.",
    ", a fraction @xmath316 of vertices in graph a corresponds to vertices of type @xmath5 that have not been removed ) , we finally obtain the size of the extensive functional component in graph a @xmath317 similar equations for vertices in graph b are obtained by swapping the superscripts a and b in the last two expressions . as for the quantities @xmath148 and @xmath149 defined previously , the fraction @xmath318 ( and @xmath319 ) is relative to the number of existing vertices ( i.e. , vertices that have not been removed ) .",
    "note also that eqs .",
    "are retrieved from eqs .   if there are no dependencies",
    ". however , contrariwise to eqs .   and eqs .",
    ", the right - hand side of eqs .   does not necessarily correspond to monotonously increasing functions ( some coefficients in the polynomials are negative ) .",
    "this implies that , although the point @xmath320 is still a solution , another solution in the hypercube @xmath133^{|\\mathcal{n}^a|\\times|\\mathcal{e}^a|+|\\mathcal{n}^b|\\times|\\mathcal{e}^b|}$ ] corresponding to the presence of an extensive functional component may not appear continuously from @xmath320 through a transcritical bifurcation as in sec .",
    "[ sec : omnibus_extensive_component ] .",
    "hence the values of @xmath318 and @xmath319 _ jump _ abruptly from zero to a finite value in [ 0,1 ] which corresponds to a discontinuous phase transition .    to illustrate this behavior",
    ", we investigate the emergence of extensive components on interdependent clustered random graphs .",
    "to do so , we consider the edge - triangle clustered graph ensemble presented in sec .",
    "[ sec : omnibus_example_clustered ] with the joint degree distribution @xmath321 and @xmath322 .",
    "notice that this joint degree distribution forces assortative mixing since high and low degree vertices tend to be segregated .",
    "the size of the extensive component in this isolated random graph ensemble is given as a function of the vertex existence probability @xmath197 in fig .",
    "[ fig : omnibus_discontinuous ] ( black curve labeled @xmath323 ) .    to illustrate the impact of interdependence on the phase transition",
    ", we consider the case of two identical partially dependent edge - triangle clustered graphs with @xmath324 and @xmath325 . in other words , only 60% of the vertices in graph a depend on a vertex in graph b whereas every vertex in graph b has a twin vertex .",
    "the green curves labeled @xmath326 and @xmath327 in fig .  [",
    "fig : omnibus_discontinuous ] show the size of the extensive functional component in graph a and graph b as a function of @xmath197 .",
    "we see that the extensive functional components indeed emerge through a discontinuous phase transition , unlike the extensive component in the isolated clustered graphs that emerges continuously .",
    "we also see that the extensive functional component in graph a is always bigger than the one on graph b since vertices with no dependency are more likely to be in the extensive functional component than vertices with a dependency .",
    "indeed , a vertex in graph a that has no dependency belongs to the extensive functional component with probability @xmath328 $ ] which is clearly greater than @xmath328r_1^b[1-g_1^b(\\bm{a^b})]$ ] for a vertex with a dependency since @xmath329 \\leq 1 $ ] ( the second equality holds only when there is no extensive component and @xmath330 ) .",
    "figure  [ fig : omnibus_discontinuous ] also shows that the size of the extensive functional component in the interdependent graphs is bounded by the size of the giant component in the corresponding isolated graphs .",
    "again , this is expected since being part of the extensive component is a _ sine qua non _ condition for being part of the extensive functional component .     +    as in sec .",
    "[ sec : omnibus_example_clustering ] , we consider the unclustered version of the edge - triangle random graph ensemble  in which triangles are broken into two independent single edges  to isolate the impact of clustering . in order to preserve the correlations present in the clustered dependent graph ensemble ,",
    "two types of stubs are used to distinguish the original single edges from the single edges due to the broken triangles .",
    "as expected , the extensive component in this isolated unclustered graph ensemble appears at a lower value of @xmath197 ( red curve labeled @xmath331 in fig .",
    "[ fig : omnibus_discontinuous ] ) than for the isolated clustered random graph ensemble ( see sec .",
    "[ sec : omnibus_example_clustering ] ) .",
    "the same conclusion holds for the extensive functional component in the unclustered version of the two partially dependent graphs described in the last paragraph ( blue curves labeled @xmath332 and @xmath333 in fig .",
    "[ fig : omnibus_discontinuous ] ) . comparing the size of the extensive functional component in the clustered and unclustered versions of these interdependent graphs also suggests that clustering increases the jump size at the transition .    one interesting observation from fig .",
    "[ fig : omnibus_discontinuous ] is that graph a in the interdependent unclustered graph ensemble ( curve labeled @xmath332 ) successively undergoes two phase transitions : a continuous then a discontinuous one .",
    "while the discontinuous transition is caused by the interdependency with graph b , the continuous one is due to the fact that the 40% of vertices in graph a that have no dependency are able to form an extensive component before the discontinuous phase transition occurs . from fig .",
    "[ fig : omnibus_discontinuous ] , we see that the continuous phase transition happens at @xmath334 in the isolated unclustered graph ensemble , while the phase transitions occur at @xmath335 ( continuous ) and at @xmath336 ( discontinuous ) in the interdependent unclustered graph ensemble . below @xmath336 ,",
    "the vertices in graph a that depend on a vertex in graph b can be effectively considered as removed since there is no extensive functional component in graph b ( i.e. , they can not be part of an extensive component ) .",
    "hence we expect graph a to behave as its isolated graph ensemble counterpart in which an effective fraction @xmath337 of its vertices have been removed .",
    "this is indeed confirmed in the inset of fig .",
    "[ fig : omnibus_discontinuous ] .",
    "in fact , successive phase transitions should occur whenever independent vertices are able to form an extensive component _ before _ the extensive functional component emerges .",
    "in other words , we observe a double phase transition whenever the rescaled value at which the continuous phase transition happens in the isolated graph ensemble is below the value at which the discontinuous phase transition occurs in the interdependent graph ensemble .",
    "building upon our previous works @xcite , we have presented a unifying conceptual framework that offers a comprehensive mathematical description of a wide variety of structural properties found in graphs extracted from real complex systems ( e.g. , correlations , segregation , clustering of various forms ) . the generality of the formalism resides on a multitype perspective for a precise prescription on how vertices are connected to one another , and on a set of iterative equations for the solution of the distribution of the size of components in small arbitrary graphs .",
    "interestingly , these iterative equations are by themselves a valuable addition to graph theoretical methodology .",
    "in fact , besides being a cornerstone of our formalism , allowing a mapping of hyperedges unto an effective tree - like structure , they also have potential applications in the theoretical description of fragmentation processes and of percolation on lattices @xcite ( see ref .",
    "@xcite for further details ) .",
    "our approach leads to the definition of a very general random graph ensemble for which site and/or bond percolation can be solved exactly using probability generating functions in the infinite size limit ( e.g. , size of the giant component , percolation threshold , distribution of the size of small components ) .",
    "we have shown that this random graph ensemble encompasses most random graph models published until now and can incorporate structural properties not yet included in a theoretical framework .",
    "this versatility makes it a perfect theoretical laboratory to investigate the role of specific local structural properties on the global connectivity of the graphs .",
    "we have illustrated this point by implementing our method to provide a counterexample to a conjecture @xcite on the effect of clustering on the size of the giant component and on the percolation threshold .",
    "our formalism is also naturally equipped for the modeling of interdependent graphs whose most striking feature is the emergence of the extensive component via a discontinuous phase transition . we have provided a specific implementation for this application that demonstrates how a graph can successively undergo a continuous then a discontinuous phase transition , and how clustering increases the amplitude of discontinuity at the transition .    by offering one of the most comprehensive mathematical description of percolation on random graphs , we believe that the present work will contribute to a better understanding of the interplay between local structural properties and the global connectivity of graphs . moreover",
    ", our approach can easily accommodate other types of dynamics for which the pgf technique has already proven to be useful @xcite .",
    "we are hopeful that several extensions ( different dynamics and/or percolation models ) will shed further light on the role of structure in the behavior of complex systems .",
    "we put forward that some of the tools to perform these studies are now available .",
    "we acknowledge support from the instituts de recherche en sant du canada , the conseil de recherches en sciences naturelles et en gnie du canada and the fonds de recherche du qubec  nature et technologies .",
    "54ifxundefined [ 1 ] ifx#1 ifnum [ 1 ] # 1firstoftwo secondoftwo ifx [ 1 ] # 1firstoftwo secondoftwo `` `` # 1''''@noop [ 0]secondoftwosanitize@url [ 0 ]",
    " + 12$12  & 12#1212_12%12@startlink[1]@endlink[0]@bib@innerbibempty @noop _",
    "( ,  ) link:\\doibase    10.1103/revmodphys.80.1275 [ * * ,   ( ) ] link:\\doibase 10.1103/physreve.89.022801 [ * * ,   ( ) ] link:\\doibase 10.1103/physrevlett.109.258701 [ * * , ( ) ] link:\\doibase 10.1038/srep02171 [ * * ,   ( ) ] link:\\doibase 10.1090/s0273 - 0979 - 06 - 01148 - 7 [ * * ,   ( ) ] @noop _ _  ( , ) link:\\doibase    10.1103/physrevlett.85.5468 [ * * ,   ( ) ] link:\\doibase 10.1103/physreve.64.026118 [ * * ,   ( ) ] link:\\doibase 10.1088/1751 - 8113/45/40/405005 [ * * ,   ( ) ] link:\\doibase 10.1103/physreve.79.036113 [ * * ,   ( ) ] link:\\doibase 10.1103/physrevlett.102.138701 [ * * ,   ( ) ] link:\\doibase 10.1103/physreve.79.066118 [ * * ,   ( ) ] link:\\doibase    10.1103/physreve.80.036107 [ * * ,   ( ) ] @noop * * ,   ( ) link:\\doibase    10.1103/physreve.88.062820 [ * * ,   ( ) ] link:\\doibase    10.1103/physreve.82.066118 [ * * ,   ( ) ] link:\\doibase    10.1103/physreve.76.036113 [ * * ,   ( ) ] @noop ( ) link:\\doibase    10.1016/j.jtbi.2005.10.004 [ * * ,   ( ) ] link:\\doibase    10.1103/physreve.80.020901 [ * * ,   ( ) ] link:\\doibase    10.1103/physrevlett.89.208701 [ * * ,   ( ) ] link:\\doibase    10.1103/physreve.67.026126 [ * * ,   ( ) ] link:\\doibase    10.1103/physreve.68.026121 [ * * ,   ( ) ] link:\\doibase    10.1103/physrevlett.103.058701 [ * * ,   ( ) ] link:\\doibase    10.1103/physreve.79.026101 [ * * ,   ( ) ] link:\\doibase 10.1103/physrevlett.97.088701 [ * * , ( ) ] link:\\doibase 10.1016/j.physa.2006.11.072 [ * * , ( ) ] link:\\doibase 10.1103/physreve.74.066114 [ * * ,   ( ) ] link:\\doibase    10.1103/physreve.67.015101 [ * * ,   ( ) ] link:\\doibase    10.1209/0295 - 5075/97/28005 [ * * ,   ( ) ] \\doibase    doi:10.1093/comnet / cnu016 [ * * ,   ( ) ] link:\\doibase 10.1038/nature08932 [ * * ,   ( ) ] link:\\doibase    10.1103/physrevlett.105.048701 [ * * ,   ( ) ] link:\\doibase    10.1209/0295 - 5075/98/16001 [ * * ,   ( ) ] @noop * * ,   ( ) link:\\doibase    10.1103/physreve.66.016128 [ * * ,   ( ) ] link:\\doibase 10.1103/physreve.74.056115 [ * * ,   ( ) ] link:\\doibase    10.1103/physreve.81.066114 [ * * ,   ( ) ] link:\\doibase    10.1103/physreve.78.048101 [ * * ,   ( ) ] link:\\doibase 10.1103/physrevx.4.041020 [ * * ,   ( ) ] link:\\doibase 10.1209/0295 - 5075/97/16006 [ * * ,   ( ) ] link:\\doibase 10.1016/j.physletb.2011.03.023 [ * * ,   ( ) ] link:\\doibase 10.1088/1742 - 6596/410/1/012058 [ * * ,   ( ) ] link:\\doibase    10.1103/physrevb.21.1223 [ * * ,   ( ) ] link:\\doibase    10.1103/physrevlett.100.185701 [ * * ,   ( ) ] link:\\doibase 10.1103/physreve.83.056107 [ * * ,   ( ) ] link:\\doibase    10.1073/pnas.082090499 [ * * ,   ( ) ] link:\\doibase 10.1103/physreve.89.062814 [ * * ,   ( ) ] link:\\doibase 10.1209/0295 - 5075/107/48001 [ * * , ( ) ]"
  ],
  "abstract_text": [
    "<S> we present a comprehensive and versatile theoretical framework to study site and bond percolation on clustered and correlated random graphs . </S>",
    "<S> our contribution can be summarized in three main points . </S>",
    "<S> ( i ) we introduce a set of iterative equations that solve the exact distribution of the size and composition of components in finite size quenched or random multitype graphs . </S>",
    "<S> ( ii ) we define a very general random graph ensemble that encompasses most of the models published to this day , and also that permits to model structural properties not yet included in a theoretical framework . site and bond percolation on this ensemble is solved exactly in the infinite size limit using probability generating functions [ i.e. , the percolation threshold , the size and the composition of the giant ( extensive ) and small components ] . </S>",
    "<S> several examples and applications are also provided . </S>",
    "<S> ( iii ) our approach can be adapted to model interdependent graphs  </S>",
    "<S> whose most striking feature is the emergence of an extensive component via a discontinuous phase transition  in an equally general fashion . </S>",
    "<S> we show how a graph can successively undergo a continuous then a discontinuous phase transition , and preliminary results suggest that clustering increases the amplitude of the discontinuity at the transition . </S>"
  ]
}
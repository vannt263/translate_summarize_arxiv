{
  "article_text": [
    "the principal purpose of this paper is to describe several numerical algorithms associated with bandlimited functions . while these algorithms are quite simple and efficient in practice , the analysis is somewhat involved , and will be published separately ( currently the proofs and additional details can be found in @xcite , @xcite , @xcite , @xcite ) .",
    "a function @xmath8 is said to be bandlimited with band limit @xmath9 if there exists a function @xmath10 $ ] such that @xmath11 in other words , the fourier transform of a bandlimited function is compactly supported .",
    "while defines @xmath12 for all real @xmath13 , one is often interested in bandlimited functions whose argument is confined to an interval , e.g. @xmath14 .",
    "such functions are encountered in physics ( wave phenomena , fluid dynamics ) , engineering ( signal processing ) , etc .",
    "( see e.g. @xcite , @xcite , @xcite ) .",
    "about 50 years ago it was observed that the eigenfunctions of the integral operator @xmath15 \\to l^2\\left[-1,1\\right]$ ] , defined via the formula @xmath16 \\left(x\\right ) = \\int_{-1}^1 \\varphi(t ) e^{icxt } \\ ; dt , \\label{eq_intro_fc}\\end{aligned}\\ ] ] provide a natural tool for dealing with bandlimited functions defined on the interval @xmath17 $ ] .",
    "moreover , it was observed ( see @xcite , @xcite , @xcite ) that the eigenfunctions of @xmath18 are precisely the prolate spheroidal wave functions ( pswfs ) , well known from the mathematical physics ( see , for example , @xcite , @xcite ) .",
    "obviously , to use pswfs as a computational tool , one needs fast and accurate numerical algorithms for the evaluation of pswfs and related quantities , as well as for the construction of quadratures , interpolation formulas , etc . for the last 15 years",
    ", substantial progress has been made in the design of such algorithms - see , for example , @xcite ( see also @xcite , @xcite , @xcite , @xcite for some classical results ) .    the complexity of many of the existing algorithms , however , is at least quadratic in the band limit @xmath0 .",
    "for example , the evaluation of the @xmath1th eigenvalue of the prolate integral operator requires @xmath19 operations ( see e.g. @xcite ) ; also , the construction of accurate quadrature rules for the integration ( and associated interpolation ) of bandlimited functions with band limit @xmath0 requires @xmath3 operations ( see e.g. @xcite ) .",
    "therefore , while the existing algorithms are satisfactory for moderate values of @xmath0 ( e.g. @xmath4 ) , they tend to be relatively slow when @xmath0 is large ( e.g. @xmath5 ) .    in this paper , we describe several numerical algorithms for the evaluation of pswfs and related quantities , and design a class of pswf - based quadratures for the integration of bandlimited functions .",
    "while the analysis is somewhat involved and will be published separately ( currently , it can be found in @xcite , @xcite ) , the resulting numerical algorithms are quite simple and efficient in practice .",
    "for example , the evaluation of the @xmath1th eigenvalue of the prolate integral operator requires @xmath20 operations ; also , the construction of accurate quadrature rules for the integration of bandlimited functions with band limit @xmath0 requires @xmath7 operations .",
    "in addition , the evaluation of the @xmath1th pswf is done in two steps .",
    "first , we carry out a certain precomputation , that requires @xmath20 operations .",
    "then , each subsequent evaluation of this pswf at a point in @xmath21 $ ] requires @xmath22 operations .",
    "this paper is organized as follows .",
    "section  [ sec_overview ] contains a brief overview .",
    "section  [ sec_prel ] contains mathematical and numerical preliminaries to be used in the rest of the paper .",
    "section  [ sec_quad ] contains the summary of the principal analytical results of the paper .",
    "section  [ sec_num_algo ] contains the description and analysis of the numerical algorithms for the evaluation of the quadrature rules and some related quantities . in section  [ sec_num_res ] , we report some numerical results . in section  [ sec_num_ill ] , we illustrate the analysis via several numerical experiments .",
    "in this section , we provide an overview of the paper .",
    "more specifically , section  [ sec_outline_pswf ] is dedicated to the numerical evaluation of pswfs and related quantities . in section  [ sec_outline_quad ] ,",
    "we discuss several existing quadrature rules for the integration of bandlimited functions . in section  [ sec_intuition ]",
    ", we introduce a new class of pswfs - based quadrature rules and describe the underlying ideas . in section  [ sec_overview_analysis ] ,",
    "we outline the analysis ( further details can be found in @xcite , @xcite ) .      for any real @xmath9 and integer @xmath23",
    ", the corresponding pswf @xmath24 can be expanded into an infinite series of legendre polynomials ( see section  [ sec_legendre ] ) .",
    "the coefficients of such expansions decay superalgebraically ( see e.g @xcite ) ; in particular , relatively few terms of the legendre series are required to evaluate @xmath25 to essentially the machine precision , for any @xmath14 .",
    "the use of this observation for the numerical evaluation of pswfs goes back at least to the classical bouwkamp algorithm @xcite ( see also section  [ sec_legendre ] , in particular theorem  [ thm_tridiagonal ] and remark  [ rem_tridiagonal ] , and @xcite for more details ) .    thus , the evaluation of pswfs reduces to the evaluation of the corresponding legendre coefficients . for any integer @xmath23 ,",
    "the legendre coefficients of _ all _ the first @xmath1 pswfs @xmath26 can be obtained via the solution of a certain symmetric tridiagonal eigenproblem roughly of order @xmath27 ( see theorem  [ thm_tridiagonal ] and remark  [ rem_tridiagonal ] in section  [ sec_legendre ] , and also @xcite for more details about this algorithm ) .",
    "the corresponding eigenvalues @xmath28 of the prolate differential operator ( see theorem  [ thm_prolate_ode ] in section  [ sec_pswf ] ) are obtained as a by - product of this procedure . on the other hand ,",
    "additional computations are required to evaluate the corresponding eigenvalues @xmath29 of the integral operator @xmath18 ( see in section  [ sec_intro ] ) . in practice , it is sometimes desirable to evaluate extremely small @xmath30 s ( e.g. @xmath31 ) , which presents a numerical challenge ( see section  [ sec_pswf ] ) . to overcome this obstacle , the algorithm of @xcite evaluates @xmath29 by computing the ratios @xmath32 , which turns out to be a well - conditioned numerical procedure ( see @xcite for more details ) .",
    "suppose , on the other hand , that one is interested in a single pswf @xmath24 only ( as opposed to all the first @xmath1 pswfs ) .",
    "obviously , one can use the algorithm of @xcite ; however , its cost is at least @xmath33 operations ( see remark  [ rem_tridiagonal ] ) .",
    "moreover , the cost of evaluating the corresponding eigenvalue @xmath34 of the prolate integral operator @xmath18 ( see ) via the algorithm of @xcite is at least @xmath33 operations , with a large proportionality constant .    in this paper",
    ", we describe more efficient algorithms for the numerical evaluation of @xmath24 and associated quantities .",
    "in particular , the cost of the evaluation of the legendre coefficients of @xmath24 via this algorithm is @xmath20 operations ( see section  [ sec_evaluate_beta ] ) .",
    "in addition , the cost of the evaluation of the eigenvalue @xmath34 is also @xmath20 operations ( see section  [ sec_evaluate_lambda ] ) . on the other hand , this algorithm has the same accuracy as that of @xcite ; in other words , all of the quantities are evaluated to essentially the machine precision ( see section  [ sec_num_algo ] for more details ) . since @xmath34 can be extremely small , the fact that it can be evaluated to high _ relative _ accuracy ( without computing the preceding @xmath30 s ) is , perhaps , surprising ( the related analysis is somewhat subtle , and will be published separately ; see @xcite , @xcite for some preliminary results ) .",
    "one of principal goals of this paper is a class of quadrature rules designed for the integration of bandlimited functions with a specified band limit @xmath35 over the interval @xmath21 $ ] .",
    "suppose that @xmath36 is an integer ; a quadrature rule of order @xmath1 is a pair @xmath37 of finite sequences of length @xmath1 , where @xmath38 are referred to as `` the quadrature nodes '' , and @xmath39 are referred to as `` the quadrature weights '' .",
    "if @xmath40 \\to \\rc$ ] is a bandlimited function ( see in section  [ sec_intro ] ) , we use the quadrature rule to approximate the integral of @xmath12 over the interval @xmath21 $ ] by a finite sum ; more specifically , @xmath41 the pswfs constitute a natural basis for the bandlimited functions with band limit @xmath9 over the interval @xmath21 $ ] ( see section  [ sec_intro ] above ) . therefore , when designing a quadrature rule for the integration of such functions , it is reasonable to require that this quadrature rule integrate several first pswfs with band limit @xmath0 to high accuracy . to describe this property in a more precise manner , we introduce the following definition .",
    "suppose that @xmath9 is a real number , and that @xmath42 is an integer .",
    "suppose also that a quadrature rule for the integration of bandlimited functions with band limit @xmath0 over @xmath21 $ ] is specified via its @xmath1 nodes and weights , as in , .",
    "suppose furthermore that @xmath43 is a real number , and that this quadrature rule integrates the first @xmath1 pswfs of band limit @xmath0 to precision @xmath44 , in other words , @xmath45 for every integer @xmath46 , where @xmath47\\to\\rc$ ] is the @xmath48th pswf corresponding to band limit @xmath0 .",
    "we refer to such quadrature rules as `` quadrature rules of order @xmath1 to precision @xmath44 ( corresponding to band limit @xmath0 ) '' .",
    "we omit the reference to @xmath0 whenever the band limit is clear from the context .",
    "[ def_quad_n_eps ]    obviously , if @xmath44 is the machine precision ( e.g. @xmath49 in double precision calculations ) , then quadrature rules of order @xmath1 to precision @xmath44 ( in the sense of definition  [ def_quad_n_eps ] ) integrate the first @xmath1 pswfs exactly , for all practical purposes . [ rem_quad_n_eps ]    in practice , for a quadrature rule of order @xmath1 to precision @xmath44 to be of any use for the integration of bandlimited functions with band limit @xmath0 , not only @xmath44 should be `` small '' , but also @xmath1 has to be at least equal to @xmath50 .",
    "see section  [ sec_pswf ] and @xcite for more details .",
    "[ rem_useful ]    quadrature rules for the integration of bandlimited functions have already been discussed in the literature , for example :    _ * generalized gaussian quadrature rules . * _ suppose that @xmath42 is an integer , and that @xmath51 are @xmath52 linearly independent functions defined on an interval .",
    "under very mild conditions on @xmath53 , there exists a quadrature rule of order @xmath1 that integrates these @xmath52 functions exactly ; moreover , its weights are usually positive .",
    "such quadrature rules are referred to as `` generalized gaussian quadrature rules '' , and their existence was first observed more than 100 years ago ( see , for example , @xcite , @xcite , @xcite , @xcite ) . perhaps surprisingly , numerical algorithms for the design of generalized gaussian quadrature rules were constructed only recently ( see , for example , @xcite , @xcite , @xcite ) .",
    "these algorithms tend to be rather expensive ( they require @xmath54 operations with a large proportionality constant ) .",
    "thus , the evaluation of the nodes and weights of a pswf - based generalized gaussian quadrature rule for accurate integration of bandlimited functions with band limit @xmath0 requires @xmath3 operations ( see remark  [ rem_useful ] above , and also @xcite for more details ) .",
    "we observe that a pswf - based generalized gaussian quadrature rule of order @xmath1 integrates the first @xmath52 pswfs exactly ; in other words , holds for every integer @xmath48 between @xmath55 and @xmath56 with @xmath57 .",
    "[ rem_gauss ]    _ * quadrature rules from @xcite . *",
    "_ suppose now that @xmath42 is an integer , and that @xmath24 is the @xmath1th pswf corresponding to band limit @xmath0 .",
    "suppose also that @xmath58 are the roots of @xmath24 in the interval @xmath59 ( see theorem  [ thm_pswf_main ] in section  [ sec_pswf ] ) .",
    "suppose furthermore that @xmath60 are real numbers , and that @xmath61 for every @xmath62 .",
    "obviously , due to , the quadrature rule with nodes @xmath58 and weights @xmath60 integrates the first @xmath1 pswfs exactly ( i.e. holds for every @xmath62 with @xmath57 ) .",
    "while this quadrature rule is clearly `` sub - optimal '' compared to the generalized gaussian quadrature rule of order @xmath1 ( the latter integrates the first @xmath52 pswfs exactly ) , it is somewhat less expensive to evaluate .",
    "more specifically , the cost of evaluating the roots @xmath63 of @xmath24 in @xmath59 and the weights @xmath64 , defined via , is dominated by the cost of solving the dense @xmath1 by @xmath1 linear system for the unknowns @xmath64 ( see @xcite for more details about the numerical aspects of this procedure ) .",
    "thus , due to remark  [ rem_useful ] above , the cost of evaluating the nodes and weights of this quadrature rule for accurate integration of bandlimited functions with band limit @xmath0 requires @xmath3 operations .",
    "the cost of the evaluation of the quadrature rule , defined via , is @xmath3 operations .",
    "the cost of the evaluation of the generalized gaussian quadrature rule is also @xmath3 operations , but tends to have a larger proportionality constant .",
    "[ rem_same_cost ]    the quadrature rule defined via is based on the pswfs corresponding to band limit @xmath0 .",
    "it turns out , however , that this quadrature rule will also integrate bandlimited functions with band limit @xmath65 to high accuracy .",
    "the reason for this is that the classical euclid algorithm for polynomial division can be generalized to the pswfs ; the reader is referred to @xcite for further details .",
    "[ rem_euclid ]    in this paper , we describe another class of quadrature rules whose nodes are the @xmath1 roots of @xmath24 in @xmath66 . however , their weights differ slightly from those defined via . in particular , strictly speaking",
    ", these quadrature rules do not integrate the first @xmath1 pswfs exactly , as opposed to the generalized gaussian quadrature rules and those defined via above . nevertheless , for any @xmath43",
    ", they _ do _ integrate the first @xmath1 pswfs to precision @xmath44 , provided that @xmath67 ( see theorem  [ thm_quad_eps_large ] from section  [ sec_main_result ] and conjectures  [ conj_quad_error ] , [ conj_n1 ] from section  [ sec_num_ill ] for more precise statements , and experiment 3 in section  [ sec_exp14 ] for some numerical results ) .",
    "thus , provided that @xmath44 is the machine precision and that holds , the quadrature rules of this paper are , for all practical purposes , as accurate as those defined via above .",
    "also , their nodes and weights can be used as starting points for an iterative scheme that computes the generalized gaussian quadrature rule ( see , for example , @xcite , @xcite , @xcite for more details ) .",
    "last but not least , the quadrature rules of this paper are much faster to evaluate than those described above : @xmath7 operations are required ( see sections  [ sec_evaluate_nodes ] , [ sec_evaluate_weights ] ) .      in this section ,",
    "we describe the quadrature rules of this paper , and discuss the intuition behind them .",
    "we start with a classical interpolation problem .",
    "suppose that @xmath58 are @xmath1 distinct points on the interval @xmath59 .",
    "we need to find the real numbers @xmath60 such that @xmath68 for all polynomials @xmath69 of degree at most @xmath70 . in other words ,",
    "the quadrature rule with nodes @xmath63 and weights @xmath64 integrates all polynomials of degree up to @xmath70 exactly ( see , , ) .    to this end ,",
    "one constructs @xmath1 polynomials @xmath71 of degree @xmath70 with the property @xmath72 for every integer @xmath73 ( see , for example , @xcite ) .",
    "it is easy to verify that , for every @xmath74 , the polynomial @xmath75 is defined via the formula @xmath76 for all real @xmath77 , where @xmath78 is defined via the formula @xmath79 for all real @xmath77 ( in other words , @xmath78 is the polynomial of degree @xmath1 whose roots are precisely @xmath58 ) .",
    "the weights @xmath60 are defined via the formula @xmath80 for every integer @xmath81 . in our case , the basis functions are the pswfs rather than polynomials .",
    "we will consider the quadrature rule @xmath82 , with @xmath58 the roots of @xmath24 on the interval @xmath59 , and @xmath60 to be determined .",
    "if we choose the weights @xmath64 such that the resulting quadrature rule integrates the first @xmath1 pswfs exactly , this will lead to the linear system from section  [ sec_outline_quad ] ( and hence to the corresponding quadrature rule ) .",
    "instead , we define the weights using @xmath24 in the same way we used @xmath78 in . more specifically , for every integer @xmath83 , we define the function @xmath84 \\to \\rc$ ] via the formula @xmath85 with @xmath24 the obvious analogue of @xmath78 in .",
    "we observe that , for every integer @xmath73 , @xmath86 analogous to . viewed as a function on the whole real line , each @xmath87 is bandlimited with the same band limit @xmath0 ( see , for example , @xcite , @xcite , or theorem 19.3 in @xcite ) .",
    "we define the weights @xmath60 via the formula @xmath88 for every @xmath89 ( note the analogy with ) .",
    "the weights @xmath60 , defined via , are different from the solution of the linear system .",
    "nevertheless , the resulting quadrature rule turns out to satisfy , provided that @xmath44 is of order @xmath90 ( see theorem  [ thm_quad_simple ] in section  [ sec_quad_error ] for a more precise statement ) .",
    "the analysis of this issue is somewhat long and involved ; the reader is referred to @xcite , @xcite for details and proofs .",
    "on the other hand , the underlying ideas are relatively simple : section  [ sec_overview_analysis ] below contains a short overview of this analysis .",
    "the following observation lies at the heart of the analysis : for any band limit @xmath9 and any integer @xmath36 , the reciprocal of @xmath24 can be approximated by a rational function with @xmath1 poles in @xmath59 up to an error of order @xmath90 , where @xmath34 is the @xmath1th eigenvalue of the integral operator @xmath18 ( see in section  [ sec_intro ] ) . in other words ,",
    "the reciprocal of @xmath24 resembles the reciprocal of a polynomial of order @xmath1 , in the following sense .",
    "if @xmath91 is a polynomial with @xmath1 simple roots @xmath92 in @xmath66 , then the function @xmath93 is meromorphic in the complex plane ; moreover , @xmath94 for all complex @xmath95 different from @xmath92 ( this is a special case of the well known cauchy s integral formula : see , for example , @xcite ) . similarly , the function @xmath96 is meromorphic ; however , it has infinitely many poles , all of which are real and simple ( see remark  [ rem_continuation ] in section  [ sec_pswf ] ) , and exactly @xmath1 of which lie in @xmath66 ( see theorem  [ thm_pswf_main ] in section  [ sec_pswf ] ) .",
    "suppose that the roots of @xmath24 in @xmath59 are denoted by @xmath97 .",
    "it turns out that @xmath98 for all real @xmath77 ( note the similarity between and ) .",
    "in other words , means that the reciprocal of @xmath24 differs from a certain rational function with @xmath1 poles by a function whose magnitude in the interval @xmath21 $ ] is of order @xmath90 .",
    "a rigorous version of is provided by theorem  [ thm_complex ] in section  [ sec_pswf ] ( its proof is somewhat involved ; see @xcite , @xcite for details ) .",
    "more specifically , according to this theorem , @xmath99 for all real @xmath77 , where @xmath100 is the @xmath1th eigenvalue of the prolate differential operator ( see theorem  [ thm_prolate_ode ] in section  [ sec_pswf ] ) .",
    "the identity is related to the quadrature , discussed in section  [ sec_intuition ] above , in the following way . multiplying both sides of by @xmath101 and using",
    ", we obtain @xmath102 in other words , @xmath103 constitute a partition of unity on the interval @xmath21 $ ] , up to an error of order @xmath90 . we integrate both sides of over @xmath21 $ ] and use theorem  [ thm_pswf_main ] in section  [ sec_pswf ] and in section  [ sec_intuition ] to obtain @xmath104 where @xmath64 are the weights of the quadrature rule ( see section  [ sec_weights ] for more details ) .",
    "suppose now that @xmath105 is an integer .",
    "we multiply both sides of by @xmath106 to obtain @xmath107 a detailed analysis of a combination of and leads to the conclusion that , for all integer @xmath108 , @xmath109 ( see theorem  [ thm_quad_simple ] in section  [ sec_quad_error ] , and also @xcite , @xcite for more details ) .    according to , the quadrature rule of order @xmath1",
    "integrates the first @xmath1 pswfs to precision of order @xmath90 ( see also in section  [ sec_outline_quad ] ) .",
    "it remains to establish for what values of @xmath1 this error is smaller than a predetermined @xmath43 .",
    "theorem  [ thm_quad_eps_simple ] from section  [ sec_main_result ] provides an answer to this question : namely , if @xmath110 then @xmath111 for all integer @xmath108 .",
    "numerical experiments seem to indicate that the situation is even better in practice : namely , to achieve the accuracy @xmath44 it suffices to pick the minimal @xmath1 such that @xmath112 , which occurs for @xmath113 ( see section  [ sec_num_ill ] , in particular , conjectures  [ conj_quad_error ] , [ conj_n1 ] and experiment 3 in section  [ sec_exp14 ] ) .",
    "in this section , we introduce notation and summarize several facts to be used in the rest of the paper .      in this subsection",
    ", we summarize several facts about the pswfs . unless stated otherwise , all these facts can be found in @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite .    given a real number @xmath35",
    ", we define the operator @xmath114 \\to l^2\\left[-1 , 1\\right]$ ] via the formula @xmath16 ( x ) = \\int_{-1}^1 \\varphi(t ) e^{icxt } \\ ; dt .",
    "\\label{eq_pswf_fc}\\end{aligned}\\ ] ] obviously , @xmath18 is compact .",
    "we denote its eigenvalues by @xmath115 and assume that they are ordered such that @xmath116 for all natural @xmath23 .",
    "we denote by @xmath24 the eigenfunction corresponding to @xmath34 . in other words , @xmath117 for all integer @xmath23 and all real @xmath14 .",
    "we adopt the convention that @xmath118 } = 1 $ ] .",
    "the following theorem describes the eigenvalues and eigenfunctions of @xmath18 .",
    "suppose that @xmath9 is a real number , and that the operator @xmath18 is defined via above .",
    "then , the eigenfunctions @xmath119 of @xmath18 are purely real , are orthonormal and are complete in @xmath120 $ ] .",
    "the even - numbered functions are even , the odd - numbered ones are odd .",
    "each function @xmath24 has exactly @xmath1 simple roots in @xmath66 .",
    "all eigenvalues @xmath34 of @xmath18 are non - zero and simple ; the even - numbered ones are purely real and the odd - numbered ones are purely imaginary ; in particular , @xmath121 , for every integer @xmath23 . [ thm_pswf_main ]    we define the self - adjoint operator @xmath122 \\to l^2\\left[-1 , 1\\right]$ ] via the formula @xmath123 ( x ) = \\frac{1}{\\pi } \\int_{-1}^1   \\frac { \\sin \\left(c\\left(x - t\\right)\\right ) } { x - t } \\ ; \\varphi(t ) \\ ; dt . \\label{eq_pswf_qc}\\end{aligned}\\ ] ] clearly , @xmath123 ( x ) =   \\chi_{\\left[-1,1\\right]}(x ) \\cdot { \\mathcal{f}}^{-1 } \\left [     \\chi_{\\left[-c , c\\right]}(\\xi ) \\cdot { \\mathcal{f}}\\left[\\varphi\\right](\\xi )",
    "\\right](x ) , \\label{eq_pswf_fourier}\\end{aligned}\\ ] ] where @xmath124 is the fourier transform , and @xmath125 } : \\rc \\to \\rc$ ] is the characteristic function of the interval @xmath126 $ ] , defined via the formula @xmath127}(x ) =   \\begin{cases } 1 & -a \\leq x \\leq a , \\\\ 0 & \\text{otherwise } , \\end{cases } \\label{eq_char_function}\\end{aligned}\\ ] ] for all real @xmath13 . in other words",
    ", @xmath128 represents low - passing followed by time - limiting .",
    "@xmath128 relates to @xmath18 , defined via , by @xmath129 and the eigenvalues @xmath130 of @xmath131 satisfy the identity @xmath132 for all integer @xmath23 .",
    "obviously , @xmath133 for all integer @xmath23 , due to .",
    "moreover , @xmath128 has the same eigenfunctions @xmath24 as @xmath18 . in other words , @xmath134 for all integer @xmath23 and all @xmath14 .",
    "also , @xmath128 is closely related to the operator @xmath135 , defined via the formula @xmath136 ( x ) = \\frac{1}{\\pi } \\int_{-\\infty}^{\\infty } \\frac { \\sin \\left(c\\left(x - t\\right)\\right ) } { x - t } \\ ; \\varphi(t ) \\ ; dt , \\label{eq_pswf_pc}\\end{aligned}\\ ] ] which is a widely known orthogonal projection onto the space of functions of band limit @xmath35 on the real line @xmath137 .",
    "the following theorem can be traced back to @xcite :    suppose that @xmath9 and @xmath138 are positive real numbers , and that the operator @xmath139 \\to l^2\\left[-1,1\\right]$ ] is defined via above .",
    "suppose also that the integer @xmath140 is the number of the eigenvalues @xmath130 of @xmath128 that are greater than @xmath141 . in other words , @xmath142 then , @xmath143 [ thm_mu_spectrum ]    according to , there are about @xmath50 eigenvalues whose absolute value is close to one , order @xmath144 eigenvalues that decay rapidly , and the rest of them are very close to zero .",
    "the eigenfunctions @xmath24 of @xmath128 turn out to be the pswfs , well known from classical mathematical physics @xcite .",
    "the following theorem , proved in a more general form in @xcite , formalizes this statement .    for any @xmath35",
    ", there exists a strictly increasing unbounded sequence of positive numbers @xmath145 such that , for each integer @xmath23 , the differential equation @xmath146 has a solution that is continuous on @xmath147 $ ] .",
    "moreover , all such solutions are constant multiples of the eigenfunction @xmath24 of @xmath18 , defined via above .",
    "[ thm_prolate_ode ]    [ rem_continuation ] for all real @xmath35 and all integer @xmath23 , defines an analytic continuation of @xmath24 onto the entire complex plane .",
    "all the roots of @xmath24 are simple , real , and symmetric about the origin .",
    "moreover , @xmath24 has infinitely many roots in @xmath148 .",
    "in addition , the ode is satisfied for all complex @xmath13 .    many properties of the pswf @xmath24 depend on whether the eigenvalue @xmath100 of the ode is greater than or less than @xmath149 . in the following theorem from @xcite , @xcite",
    ", we describe a simple relationship between @xmath150 and @xmath100 .",
    "suppose that @xmath151 is a non - negative integer .",
    "* if @xmath152 , then @xmath153 . *",
    "if @xmath154 , then @xmath155 .",
    "* if @xmath156 , then either inequality is possible .",
    "[ thm_n_and_khi ]    in the following theorem , upper and lower bounds on @xmath100 in terms of @xmath0 and @xmath1 are provided .",
    "suppose that @xmath35 is a real number , and @xmath23 is an integer .",
    "then , @xmath157 [ thm_khi_crude ]    it turns out that , for the purposes of this paper , the inequality is insufficiently sharp .",
    "tighter bounds on @xmath100 are described in the following theorem ( see @xcite , @xcite ) .",
    "suppose that @xmath151 is an integer , and that @xmath155 .",
    "then , @xmath158 [ thm_n_khi_simple ]    in the following theorem from @xcite , @xcite , we provide an upper bound on @xmath90 in terms of @xmath1 and @xmath0 .",
    "suppose that @xmath9 is a real number , and that @xmath159 suppose also that @xmath160 is a real number , and that @xmath161 suppose , in addition , that @xmath1 is a positive integer , and that @xmath162 suppose furthermore that the real number @xmath163 is defined via the formula @xmath164 .",
    "\\label{eq_xi_n_c}\\end{aligned}\\ ] ] then , @xmath165 [ thm_crude_inequality ]    in the following theorem , we provide a recurrence relation between the derivatives of @xmath24 of arbitrary order ( see lemma 9.1 in @xcite ) .",
    "suppose that @xmath9 is a real number , and that @xmath23 is an integer .",
    "then , @xmath166 for all real @xmath167 .",
    "moreover , for all integer @xmath168 and all real @xmath167 , @xmath169 [ thm_dpsi_reck ]    the following theorem asserts that , on the interval @xmath21 $ ] , the difference between the reciprocal of @xmath24 and a certain rational function with @xmath1 poles is of order @xmath90 .",
    "its proof can be found in @xcite , @xcite .",
    "suppose that @xmath170 is a real number , that @xmath1 is a positive integer , and that @xmath171 suppose furthermore that @xmath172 are the roots of @xmath24 in @xmath59 , and that the function @xmath173 \\to \\rc$ ] is defined via the formula @xmath174 for all real @xmath77 .",
    "then , @xmath175 for all real @xmath77 .",
    "[ thm_complex ]    suppose that the function @xmath173 \\to \\rc$ ] is defined via .",
    "if @xmath1 is even , then @xmath176 is an even function .",
    "if @xmath1 is odd , then @xmath176 is an odd function .",
    "[ rem_i_parity ]      in this subsection , we list several well known facts about legendre polynomials and the relationship between legendre polynomials and pswfs .",
    "all of these facts can be found , for example , in @xcite , @xcite , @xcite .",
    "the legendre polynomials @xmath177 are defined via the formulae @xmath178 and the recurrence relation @xmath179 for all @xmath180 .",
    "even legendre polynomials are even functions , and odd legendre polynomials are odd .",
    "the legendre polynomials @xmath181 constitute a complete orthogonal system in @xmath120 $ ] .",
    "the normalized legendre polynomials are defined via the formula @xmath182 for all @xmath183 .",
    "the @xmath184$]-norm of each normalized legendre polynomial equals to one , i.e. @xmath185 therefore , the normalized legendre polynomials constitute an orthonormal basis for @xmath120 $ ] . in particular , for every real @xmath9 and every integer @xmath23 , the prolate spheroidal wave function @xmath24 , corresponding to the band limit @xmath0 , can be expanded into the series @xmath186 for all @xmath14 , where @xmath187 are defined via the formula @xmath188 and @xmath189 are defined via the formula @xmath190 for all @xmath191 . due to the combination of theorem  [ thm_pswf_main ] in section  [ sec_pswf ] with , , , @xmath192 for any integer @xmath23",
    ", the sequence @xmath187 satisfies the recurrence relation @xmath193 for all @xmath194 , where @xmath195 , @xmath196 , @xmath197 are defined via the formulae @xmath198 for all @xmath183 .",
    "in other words , the infinite vector @xmath199 satisfies the identity @xmath200 where @xmath201 is the infinite identity matrix , and the non - zero entries of the infinite symmetric matrix @xmath202 are given via .",
    "the matrix @xmath202 naturally splits into two infinite symmetric tridiagonal matrices , @xmath203 and @xmath204 , the former consisting of the elements of @xmath202 with even - indexed rows and columns , and the latter consisting of the elements of @xmath202 with odd - indexed rows and columns .",
    "moreover , for every pair of integers @xmath205 , @xmath206 due to the combination of theorem  [ thm_pswf_main ] in section  [ sec_pswf ] and . in the following theorem ( that appears in @xcite in a slightly different form )",
    ", we summarize certain implications of these observations , that lead to numerical algorithms for the evaluation of pswfs .",
    "suppose that @xmath9 is a real number , and that the infinite tridiagonal symmetric matrices @xmath203 and @xmath204 are defined , respectively , via @xmath207 and @xmath208 where the entries @xmath209 are defined via .",
    "suppose also that the infinite vectors @xmath210 and @xmath211 are defined , respectively , via the formulae @xmath212 where @xmath213 are defined via .",
    "if @xmath1 is even , then @xmath214 if @xmath1 is odd , then @xmath215 [ thm_tridiagonal ]    we define the infinite vector @xmath216 to be equal to @xmath217 , if @xmath1 is even , or to @xmath218 , if @xmath1 is odd . in this notation ,",
    "@xmath219 are the eigenvectors of @xmath203 , and @xmath220 are the eigenvectors of @xmath204 .",
    "[ rem_n_even_odd ]    while the matrices @xmath203 and @xmath204 are infinite , and their entries do not decay with increasing row or column number , the coordinates of each eigenvector @xmath221 decay superexponentially fast ( see e.g. @xcite for estimates of this decay ) .",
    "in particular , suppose that we need to evaluate the first @xmath222 eigenvalues @xmath223 and the corresponding eigenvectors @xmath224 numerically .",
    "then , we can replace the matrices @xmath225 in , , respectively , with their @xmath226 upper left square submatrices , where @xmath227 is of order @xmath27 , and solve the resulting symmetric tridiagonal eigenproblem by any standard technique ( see , for example , @xcite , @xcite ; see also @xcite for more details about this numerical algorithm ) .",
    "the cpu cost of this procedure is @xmath33 operations .",
    "[ rem_tridiagonal ]    the legendre functions of the second kind @xmath228 are defined via the formulae @xmath229 and the recurrence relation @xmath230 for all @xmath180 .",
    "we observe that the recurrence relation is the same as the recurrence relation , satisfied by the legendre polynomials .",
    "in addition , for every integer @xmath231 , the @xmath232th legendre polynomial @xmath233 and the @xmath232th legendre function of the second kind @xmath234 are two independent solutions of the second order differential equation @xmath235    suppose that @xmath14 is a real number , and that @xmath23 is an integer .",
    "combining , , , gives a numerical procedure for the evaluation of @xmath236 and @xmath237 to high precision .",
    "this procedure is stable , and requires @xmath238 operations ( see , for example , @xcite for more details ) .",
    "[ rem_legendre_evaluate ]      the classical prfer transformation of a second - order ode is a well known analytical tool for the study of the oscillatory properties of its solutions ( see , for example , @xcite,@xcite ) .",
    "recently , a minor modification of prfer transformation was demonstrated to be also a convenient numerical tool ( see @xcite ) . in the following theorem",
    ", we summarize several properties of this transformation , applied to the prolate ode ( see @xcite , @xcite , @xcite for details ) .",
    "suppose that @xmath151 is an integer , and that @xmath155 .",
    "suppose also that the functions @xmath239 are defined , respectively , via the formulae @xmath240 and @xmath241 for all real @xmath242 .",
    "suppose furthermore that @xmath243 is the minimal root of @xmath24 in @xmath59 , and that the function @xmath244 is the solution of the differential equation @xmath245 with the initial condition @xmath246 then , @xmath247 has the following properties :    * @xmath247 extends continuously to the interval @xmath17 $ ] , and , moreover , @xmath248 * for any real @xmath249 such that @xmath250 , @xmath251 where @xmath252 is the number of the roots of @xmath24 in the interval @xmath253 . * for each integer @xmath254 , @xmath255 where @xmath63 are the roots of @xmath24 in @xmath59 .",
    "* for all real @xmath249 , @xmath256 in other words , @xmath247 is monotonically increasing .",
    "[ thm_prufer_old ]    the following theorem is closely related to theorem  [ thm_prufer_old ] ( see @xcite , @xcite for more details ) .",
    "suppose that the function @xmath257 \\to \\rc$ ] that of theorem  [ thm_prufer_old ] .",
    "suppose also that the function @xmath258 \\to \\left[t_1,t_n\\right]$ ] is the inverse of @xmath247 .",
    "then , @xmath259 is well defined , monotonically increasing and continuously differentiable . moreover , for all real @xmath260 , @xmath261 where the functions @xmath262 are defined , respectively , via , . in addition , for every integer @xmath263 , @xmath264 and also @xmath265 [ thm_prufer_inverse ]      in this subsection , we summarize several numerical techniques to be used in this paper .",
    "newton s method solves the equation @xmath266 iteratively given an initial approximation @xmath267 to the root @xmath268 .",
    "the @xmath1th iteration is defined by @xmath269 the convergence is quadratic provided that @xmath268 is a simple root and @xmath267 is sufficiently close to @xmath268 . more details can be found e.g. in @xcite .",
    "the taylor series method for the solution of a linear second order differential equation is based on the taylor formula @xmath270 this method evaluates @xmath271 and @xmath272 by using and depends on the ability to compute @xmath273 for @xmath274 .",
    "when the latter satisfy a simple recurrence relation such as and hence can be computed in @xmath275 operations , this method is particularly useful .",
    "the reader is referred to @xcite for further details .",
    "a standard second order runge - kutta method ( see , for example , @xcite ) solves the initial value problem @xmath276 on the interval @xmath277 via the formulae @xmath278 with @xmath279 , where @xmath280 and @xmath281 are defined via the formulae @xmath282 this procedure requires exactly @xmath222 evaluations of @xmath12 .",
    "the global truncation error is @xmath283 .",
    "suppose that @xmath23 is an integer , and that @xmath202 is an @xmath1 by @xmath1 real symmetric matrix .",
    "suppose also that @xmath284 are the eigenvalues of @xmath202 . the shifted inverse power method iteratively finds the eigenvalue @xmath285 and the corresponding eigenvector @xmath286 , provided that an approximation @xmath287 to @xmath285 is given , and that @xmath288 each shifted inverse power iteration solves the linear system @xmath289 in the unknown @xmath290 , where @xmath30 and @xmath291 are the approximations to @xmath285 and @xmath292 , respectively , after @xmath293 iterations ; the number @xmath30 is usually referred to as `` shift '' . the approximations @xmath294 and @xmath295 ( to @xmath285 and @xmath292 ,",
    "respectively ) are evaluated from @xmath13 via the formulae @xmath296 ( see , for example , @xcite , @xcite for more details ) .",
    "[ rem_power ] for symmetric matrices , the shifted inverse power method converges cubically in the vicinity of the solution .",
    "in particular , if the matrix @xmath202 is tridiagonal , and the initial approximation @xmath287 is sufficiently close to @xmath285 , the shifted inverse power method evaluates @xmath285 and @xmath292 essentially to machine precision @xmath44 in @xmath297 iterations , and each iteration requires @xmath238 operations ( see e.g @xcite , @xcite ) .      in this subsection , we describe a well known algorithm for the evaluation of a single eigenvalue of a real symmetric tridiagonal matrix .",
    "this algorithm is based on the following theorem that can be found , for example , in @xcite , @xcite .",
    "suppose that @xmath42 is an integer , that @xmath298 is an @xmath1 by @xmath1 symmetric tridiagonal matrix , and that none of numbers @xmath299 is equal to zero .",
    "suppose also that the polynomials @xmath300 are defined via the formulae @xmath301 and @xmath302 for all real @xmath13 and every integer @xmath303 .",
    "suppose furthermore that @xmath304 is a real number , and that the integer @xmath305 is defined as the number of positive elements in the finite sequence @xmath306 then , the number of eigenvalues of @xmath307 that are strictly larger than @xmath304 is precisely @xmath305 .",
    "[ thm_sturm ]    suppose now that @xmath42 is an integer , and @xmath307 is an @xmath308 real symmetric tridiagonal matrix , such as .",
    "theorem  [ thm_sturm ] yields a numerical scheme for the evaluation of the @xmath232th smallest eigenvalue @xmath285 of @xmath307 .",
    "this scheme is known in the literature as `` sturm bisection '' .",
    "provided that two real numbers @xmath267 and @xmath309 are given such that @xmath310 sturm bisection requires @xmath311 operations to evaluate @xmath285 to machine precision ( see , for example , @xcite , @xcite for more details ) .",
    "[ rem_sturm ]",
    "the purpose of this section is to provide the analytical apparatus to be used in the rest of the paper .",
    "more specifically , we define a pswf - based quadrature rule and list several of its properties .",
    "the principal result of this section is theorem  [ thm_quad_eps_simple ] .",
    "the reader is referred to @xcite , @xcite for the detailed analysis of all the tools listed in this section .    throughout this section ,",
    "the band limit @xmath35 is assumed to be a positive real number . also ,",
    "for any integer @xmath23 , we denote by @xmath24 the @xmath1th pswf corresponding to the band limit @xmath0 ( see section  [ sec_pswf ] ) .",
    "suppose that @xmath36 is an integer , and that @xmath312 are the roots of @xmath24 in the interval @xmath66 .",
    "for each integer @xmath83 , we define the function @xmath313 \\to \\rc$ ] via the formula @xmath314 in addition , for each integer @xmath74 , we define the real number @xmath315 via the formula @xmath316 we refer to the pair of finite sequences @xmath317 as the `` pswf - based quadrature rule of order @xmath1 '' .",
    "the points @xmath63 are referred to as the quadrature nodes , and the numbers @xmath64 are referred to as the quadrature weights ( see , in section  [ sec_outline_quad ] ) .",
    "we use @xmath318 to approximate the integral of a bandlimited function @xmath12 over the interval @xmath17 $ ] by a finite sum ; more specifically , @xmath319 we refer to the number @xmath320 defined via the formula @xmath321 as the `` quadrature error '' .",
    "[ def_quad ]      suppose now that @xmath1 is a positive integer , and that @xmath40 \\to \\cc$ ] is an arbitrary bandlimited function ( with band limit @xmath0 ) .",
    "suppose also that @xmath318 is the pswf - based quadrature rule of order @xmath1 ( see in definition  [ def_quad ] ) .",
    "one of the principal goals of this paper is to investigate the quadrature error @xmath320 defined via .",
    "the reader is referred to section  [ sec_num_ill ] for the results of several related numerical experiments .",
    "the following theorem , illustrated in table  [ t : test90 ] , provides an upper bound on @xmath322 , for any integer @xmath62 .",
    "this theorem is illustrated in table  [ t : test91 ] and in figure  [ fig : test92 ] ( see experiment 2 in section  [ sec_exp12 ] ) ; see also conjecture  [ conj_quad_error ] and remark  [ rem_conj ] in section  [ sec_exp12 ] .",
    "suppose that @xmath0 is a positive real number , and that @xmath323 suppose also that @xmath42 and @xmath324 are integers , and that @xmath325 suppose further that @xmath322 is defined via .",
    "then , @xmath326 where @xmath327 are those of , in section  [ sec_pswf ] , respectively .",
    "[ thm_quad_simple ]      in theorem  [ thm_quad_simple ] , we established an upper bound on the quadrature error @xmath322 ( see and in theorem  [ thm_quad_simple ] ) .",
    "however , this bound depends on @xmath100 and @xmath34 . in particular",
    ", it is not obvious how large @xmath1 should be to make sure that the quadrature error does not exceed a prescribed @xmath328 . in this subsection",
    ", we eliminate this inconvenience .",
    "the following theorem is illustrated in table  [ t : test178 ] ( see experiment 3 in section  [ sec_exp14 ] ) .",
    "suppose that @xmath329 are positive real numbers such that @xmath330 and @xmath331 suppose also that the real numbers @xmath332 are defined via the formulae @xmath333 and @xmath334 respectively .",
    "suppose furthermore that @xmath42 and @xmath324 are integers such that @xmath335 and that @xmath322 is defined via .",
    "then , @xmath336 [ thm_quad_eps_large ]    the following theorem is a direct consequence of theorem  [ thm_quad_eps_large ] .",
    "this theorem is one of the principal results of the paper .",
    "it is illustrated in table  [ t : test178 ] ( see experiment 3 in section  [ sec_exp14 ] ) .",
    "see also conjecture  [ conj_quad_error ] in section  [ sec_exp12 ] .",
    "suppose that @xmath337 are positive real numbers such that @xmath338 and @xmath339 suppose also that @xmath42 and @xmath108 are integers , and that @xmath340 suppose furthermore that @xmath322 is defined via in definition  [ def_quad ] .",
    "then , @xmath341 [ thm_quad_eps_simple ]      in this subsection , we analyze the weights of the quadrature rule @xmath318 ( see , in section  [ sec_quad ] ) .",
    "this analysis has two principal purposes . on the one hand",
    ", it provides the basis for a fast algorithm for the evaluation of the weights . on the other hand",
    ", it provides an explanation of some empirically observed properties of the weights .",
    "the results of this subsection are illustrated in table  [ t : test96 ] and in figure  [ fig : test96 ] ( see experiment 4 in section  [ sec_exp15 ] ) .",
    "the following theorem is instrumental for the evaluation of the quadrature weights @xmath64 ( see in definition  [ def_quad ] ) .",
    "suppose that @xmath23 is an integer , and that the function @xmath342 is defined via the formula @xmath343 where @xmath344 and @xmath345 are defined , respectively , via , and in section  [ sec_legendre ] ( compare to in section  [ sec_legendre ] ) .",
    "then , for every integer @xmath74 , @xmath346 where @xmath63 and @xmath64 are , respectively , the nodes and weights of the quadrature rule @xmath318 in definition  [ def_quad ]",
    ". [ thm_tilde_phi ]    theorem  [ thm_tilde_phi ] is illustrated in table  [ t : test96 ] .",
    "we observe that theorem  [ thm_tilde_phi ] describes a connection between the weights @xmath60 and the values of @xmath347 at @xmath58 , where the function @xmath347 is defined via .",
    "the following theorem states that @xmath347 satisfies a certain second - order non - homogeneous ode , closely related to the prolate ode in section  [ sec_pswf ] .",
    "in particular , a recurrence relation between the derivatives of @xmath347 of arbitrary order is established ( compare to theorem  [ thm_dpsi_reck ] in section  [ sec_pswf ] ) .",
    "suppose that @xmath23 is an integer , and that the function @xmath348 is defined via .",
    "suppose also that the real numbers @xmath349 are defined via in section  [ sec_legendre ] .",
    "then , @xmath350 for all real @xmath249 .",
    "also , @xmath351 for all real @xmath249 .",
    "finally , @xmath352 for every integer @xmath168 and all real @xmath249 ( compare to in section  [ sec_pswf ] ) .",
    "[ lem_tilde_phi_ode ]    in the following theorem , we establish the positivity of the weights of the quadrature rule @xmath318 in definition  [ def_quad ] .",
    "suppose that @xmath0 is a positive real number , and that @xmath353 suppose also that @xmath1 is a positive integer , and that @xmath354 suppose further that @xmath60 are defined via .",
    "then , for all integer @xmath74 , @xmath355 [ thm_positive_w ]    extensive numerical experiments ( see e.g. table  [ t : test96 ] and figure  [ fig : test96 ] ) seem to indicate that the assumption is unnecessary . in other words ,",
    "the weights @xmath60 are always positive , even for small values of @xmath1 ( at the present time we do not have the proof of this fact ) .",
    "[ rem_w_always_pos ]    it was observed in @xcite , @xcite that , if @xmath356 are integers , then @xmath357 ( see also experiment 4 in section  [ sec_exp15 ] ) .",
    "we observe that as @xmath358 the quadrature rule in definition  [ def_quad ] converges to the well known gaussian quadrature rule , whose nodes are the roots @xmath63 of the legendre polynomial @xmath359 ( see section  [ sec_legendre ] ) , and whose weights are defined via the formula @xmath360 for every @xmath74 ( see e.g. @xcite , section 25.4 ) .",
    "thus , is not surprising .",
    "[ rem_w_approx ]",
    "in this section , we describe several numerical algorithms for the evaluation of the pswfs , certain related quantities , and the quadrature rules defined in section  [ sec_quad ] . throughout this section ,",
    "the band limit @xmath35 is a real number , and the prolate index @xmath23 is a non - negative integer .",
    "the use of the expansion of @xmath24 into a legendre series ( see in section  [ sec_legendre ] ) for the evaluation of @xmath24 in the interval @xmath21 $ ] goes back at least to the classical bouwkamp algorithm ( see @xcite ) .",
    "more specifically , the coefficients @xmath187 of the legendre expansion are precomputed first ( see , in section  [ sec_legendre ] ) . these coefficients decay superalgebraically ; in particular , relatively few terms of the infinite sum are required to evaluate @xmath24 to essentially machine precision ( see section  [ sec_legendre ] , in particular theorem  [ thm_tridiagonal ] and remark  [ rem_tridiagonal ] , and also @xcite for more details ) .",
    "suppose now that @xmath23 , and one is interested in evaluating the coefficients @xmath362 in , for every integer @xmath363 .",
    "this can be achieved by solving two @xmath226 symmetric tridiagonal eigenproblems , where @xmath227 is of order @xmath1 ( see theorem  [ thm_tridiagonal ] and remark  [ rem_tridiagonal ] in section  [ sec_legendre ] , and also @xcite for more details about this algorithm ) .",
    "in addition , this algorithm evaluates @xmath364 .",
    "once this precomputation is done , for every integer @xmath363 and for every real @xmath14 one can evaluate @xmath365 in @xmath238 operations , by computing the sum ( see , however , remark  [ rem_o1_interpolation ] below ) .",
    "suppose , on the other hand , that we are interested in a single pswf only ( as opposed to all the first @xmath1 pswfs ) .",
    "obviously , we can use the algorithm above ; however , its cost is @xmath33 operations ( see remark  [ rem_tridiagonal ] in section  [ sec_legendre ] ) . in the rest of this subsection",
    ", we describe a procedure for the evaluation of @xmath187 and @xmath100 , whose cost is @xmath366 operations .",
    "this algorithm is also based on theorem  [ thm_tridiagonal ] in section  [ sec_legendre ] .",
    "it consists of two principal steps .",
    "first , we compute a low - accuracy approximation @xmath367 of @xmath100 , by means of sturm bisection ( see section  [ sec_sturm ] , , and remark  [ rem_tridiagonal ] in section  [ sec_legendre ] , and also @xcite ) .",
    "second , we compute @xmath100 and @xmath221 ( see and remark  [ rem_n_even_odd ] in section  [ sec_legendre ] ) by means of the shifted inverse power method ( see section  [ sec_power ] , and also @xcite , @xcite ) .",
    "the shifted inverse power method requires an initial approximation to the eigenvalue ; for this purpose we use @xmath367 .",
    "below is a more detailed description of these two steps .",
    "[ [ step-1-initial - approximation - tildechi_n - of - chi_n . ] ] step 1 ( initial approximation @xmath367 of @xmath100 ) .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    suppose that the infinite symmetric tridiagonal matrices @xmath203 and @xmath204 are defined , respectively , via , in section  [ sec_legendre ] .",
    "suppose also that @xmath368 is the @xmath226 upper left square submatrix of @xmath203 , if @xmath1 is even , or of @xmath204 , if @xmath1 is odd .",
    "+ * comment .",
    "* @xmath227 is an integer of order @xmath1 ( see remark  [ rem_tridiagonal ] in section  [ sec_legendre ] ) .",
    "the choice @xmath369 is sufficient for all practical purposes .",
    "* use theorems  [ thm_n_and_khi ] , [ thm_khi_crude ] and [ thm_n_khi_simple ] in section  [ sec_pswf ] to choose real numbers @xmath370 such that @xmath371 * comment . * for a more detailed discussion of lower and upper bounds on @xmath100 , see , for example , @xcite , @xcite .",
    "see also remark  [ rem_sturm_cost ] below . * use sturm bisection ( see section  [ sec_sturm ] ) with initial values @xmath372 to compute @xmath367 . on each step of sturm bisection ,",
    "the sturm sequence ( see in theorem  [ thm_sturm ] ) is computed based on the matrix @xmath368 ( see above ) . + * comment . * in principle , sturm bisection can be used to evaluate @xmath100 to machine precision . however , the convergence rate of sturm bisection is linear , and each iteration requires order @xmath1 operations ( see remark  [ rem_sturm ] in section  [ sec_sturm ] ) . on the other hand ,",
    "the convergence rate of the shifted inverse power method is cubic in the vicinity of the solution , while each iteration requires also order @xmath1 operations ( see remark  [ rem_power ] in section  [ sec_power ] ) .",
    "thus , we use sturm bisection to compute a low - order approximation @xmath373 to @xmath100 , and then refine it by the shifted inverse power method to obtain @xmath100 to machine precision .",
    "the use of sturm bisection as a tool to compute the eigenvalues of a symmetric tridiagonal matrix goes back at least to @xcite ; in the context of pswfs , it appears in @xcite .",
    "[ rem_sturm_first ]    the cost analysis of step 1 relies on the following observation based on theorems  [ thm_prolate_ode ] , [ thm_n_and_khi ] , [ thm_khi_crude ] , [ thm_n_khi_simple ] in section  [ sec_pswf ] .",
    "* observation 1 . *",
    "suppose that @xmath23 is an integer .    if @xmath374 , then @xmath375    if @xmath376 , then @xmath377    due to theorems  [ thm_n_and_khi ] , [ thm_khi_crude ] in section  [ sec_pswf ] , the inequality @xmath378 holds for any real @xmath9 and all integer @xmath374 . in this case , step 1 requires @xmath379 operations , due to the combination of , and remark  [ rem_sturm ] in section  [ sec_sturm ] . on the other hand , if @xmath376 , then the cost of step 1 is @xmath238 operations , due to the combination of theorems  [ thm_n_and_khi ] , [ thm_n_khi_simple ] , remark  [ rem_sturm ] in section  [ sec_sturm ] and .",
    "[ rem_sturm_cost ]    [ [ step-2-evaluation - of - chi_n - and - betan . ] ] step 2 ( evaluation of @xmath100 and @xmath221 ) .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    suppose now that @xmath367 is an approximation to @xmath100 evaluated in step 1 .",
    "suppose also that the integer @xmath227 is defined via above ( see also remark  [ rem_tridiagonal ] in section  [ sec_legendre ] ) .",
    "* generate a pseudorandom vector @xmath380 of unit length .",
    "+ * comment .",
    "* we use @xmath367 and @xmath381 as initial approximations to the eigenvalue @xmath100 and the corresponding eigenvector , respectively , for the shifted inverse power method ( see section  [ sec_power ] ) .",
    "* conduct shifted inverse power method iterations until @xmath100 is evaluated to machine precision .",
    "the corresponding eigenvector of unit length is denoted by @xmath382 . +",
    "* comment .",
    "* each shifted inverse power iteration costs @xmath383 operations , and essentially @xmath22 iterations are required ( see remark  [ rem_power ] in section  [ sec_power ] for more details ) . in practice , in double precision calculations the number of iterations is usually between three and five .    clearly , the cost of step 2 is @xmath238 operations ( see remark  [ rem_tridiagonal ] in section  [ sec_legendre ] and remark  [ rem_power ] in section  [ sec_power ] ) .",
    "[ rem_inverse_cost ]    suppose that the coordinates of the vector @xmath384 are defined via ( see also remark  [ rem_n_even_odd ] in section  [ sec_legendre ] ) .",
    "then , @xmath382 ( evaluated in step 2 above ) approximates @xmath221 to essentially machine precision ( this is a well known property of the inverse power method ; see section  [ sec_power ] , and also @xcite , @xcite for more details ) .",
    "in other words , @xmath385 where @xmath44 is the machine accuracy ( e.g. @xmath49 for double precision calculations ) .",
    "in addition , the eigenvalue @xmath100 is also evaluated to relative accuracy @xmath44 .",
    "[ rem_beta_absolute ]      suppose now that @xmath100 and the coefficients @xmath213 defined via have already been evaluated .",
    "suppose also that the integer @xmath227 is defined via above .    for any real @xmath14",
    ", we evaluate @xmath25 via the formula @xmath387 ( compare to in section  [ sec_legendre ] ) .",
    "also , we evaluate @xmath361 via the formula @xmath388    due to the combination of remark  [ rem_tridiagonal ] in section  [ sec_legendre ] and remark  [ rem_beta_absolute ] above , both @xmath25 and @xmath361 are evaluated via , essentially to machine precision , for any real @xmath14 ( also see @xcite for more details ) .",
    "[ rem_psi_accuracy ]    due to remarks  [ rem_sturm_cost ] , [ rem_inverse_cost ] above , the cost of the evaluation of @xmath100 and @xmath213 via steps 1,2 is @xmath389 operations . once this precomputation has been performed , the cost of each subsequent evaluation of @xmath25 , @xmath361 , for any real @xmath14 , is @xmath238 operations , according to , and remark  [ rem_legendre_evaluate ] in section  [ sec_legendre ] .",
    "[ rem_total_cost ]    once @xmath100 and @xmath213 have been evaluated , one does not have to use , , to compute @xmath25 , @xmath361 at an arbitrary point @xmath13 in @xmath21 $ ] .",
    "instead , the cost of evaluating , say , @xmath25 can be brought down from @xmath238 to @xmath22 ( see remark  [ rem_newton_interpolation ] in section  [ sec_evaluate_nodes ] ) .",
    "[ rem_o1_interpolation ]      suppose now that @xmath23 is an integer , and that one needs to evaluate the eigenvalue @xmath34 of the integral operator @xmath18 ( see in section  [ sec_pswf ] ) .",
    "due to the combination of and theorem  [ thm_pswf_main ] in section  [ sec_pswf ] , if @xmath1 is even , then @xmath390 , and @xmath391 for odd @xmath1 , @xmath392 the formulae and provide an obvious way to calculate @xmath34 for even and odd @xmath1 , respectively , via numerical integration .",
    "in fact , when @xmath90 is relatively large , such procedure is quite satisfactory .",
    "more specifically , if @xmath393 , then @xmath394 , and @xmath34 can be calculated via , to high relative precision ( see theorems  [ thm_mu_spectrum ] , [ thm_crude_inequality ] in section  [ sec_pswf ] and remark  [ rem_psi_accuracy ] in section  [ sec_evaluate_beta ] ; see also @xcite for more details ) .",
    "on the other hand , we observe that @xmath395 } = 1 $ ] , due to theorem  [ thm_pswf_main ] in section  [ sec_pswf ] . as a result , when @xmath90 is small , the formulae , are unsuitable for the evaluation of @xmath34 via numerical integration , due to catastrophic cancellation . for example , if @xmath396 , where @xmath44 is the machine precision , the formulae , produce no correct digits at all .    the standard way to overcome this obstacle for numerical evaluation of small @xmath397s is to calculate all the ratios @xmath398 ( see , for example , @xcite , @xcite , @xcite ) ; this turns out to be a well - conditioned numerical procedure ( see @xcite for more details ) .",
    "then , @xmath399 is evaluated via above , and the eigenvalues @xmath400 are evaluated via the formula @xmath401 for every integer @xmath402 .",
    "suppose , on the other hand , that one is interested in a single @xmath34 only ( as opposed to all the first @xmath1 eigenvalues ) . obviously , @xmath34 can be evaluated via from the ratios @xmath403 , as described above",
    "; however , it requires at least @xmath33 operations ( see @xcite ) .",
    "unexpectedly , it turns out that @xmath34 can be obtained to high relative accuracy in @xmath22 operations as a by - product of the algorithm described in section  [ sec_evaluate_beta ] . more specifically ,",
    "suppose that the coefficients @xmath187 are defined via .",
    "we combine , above with , , , , to make the following observation .    * observation 1 . * if @xmath1 is even , then @xmath390 , and @xmath404    if @xmath1 is odd , then @xmath405 , and @xmath406    obviously , the cost of evaluating @xmath34 from @xmath407 via ( for even @xmath1 ) or from @xmath408 via ( for odd @xmath1 ) is @xmath22 operations .",
    "[ rem_lambda_cost ]    due to remarks  [ rem_total_cost ] , [ rem_lambda_cost ] and , , a single @xmath34 can be evaluated as a by - product of the procedure described in section  [ sec_evaluate_beta ] , at the total cost of @xmath409 operations .",
    "[ rem_lambda_cost_alone ]    remarks  [ rem_lambda_cost ] , [ rem_lambda_cost_alone ] describe the _ cost _ of the evaluation of @xmath34 via , . to describe the _ accuracy _ of this procedure , we start with the following observation .",
    "* observation 2 . * due to remark  [ rem_psi_accuracy ] , @xmath34 is evaluated to the same relative accuracy as @xmath410 ( for even @xmath1 ) or as @xmath411 ( for odd @xmath1 ) . according to in remark  [ rem_beta_absolute ] ,",
    "the algorithm of section  [ sec_evaluate_beta ] evaluates the vector @xmath221 to relative accuracy @xmath44 , where @xmath44 is the machine precision .",
    "however , this means that a single * coordinate * of @xmath221 is only guaranteed to be evaluated to * absolute * accuracy @xmath44 .",
    "more specifically , the inequality @xmath412 holds for every integer @xmath413 , where @xmath227 is defined via in section  [ sec_evaluate_beta ] , and @xmath414 is the numerical approximation to @xmath415 . in general , the inequality can be rather tight ; as a result , if , for example , @xmath416 , then , apriori , we can not expect @xmath417 to approximate @xmath410 to any digit at all !    in practical computations ,",
    "it is sometimes desirable to evaluate extremely small @xmath34 s ( e.g. @xmath418 ) . observation 2 seems to suggest that , in such cases , the evaluation of @xmath34 via the procedure described above is futile due to disastrous loss of accuracy .",
    "fortunately , it turns out that the algorithm described in section  [ sec_evaluate_beta ] * always * evaluates @xmath419 to high relative accuracy , regardless of how small they are .",
    "this is a consequence of a more general ( and somewhat surprising ! ) phenomenon studied in detail in @xcite , @xcite .",
    "we summarize the corresponding results in the following theorem .    for a certain class of real symmetric tridiagonal matrices ,",
    "the coordinates of their eigenvectors are defined to high relative precision .",
    "moreover , the matrices @xmath225 defined , respectively , via , in section  [ sec_legendre ] , belong to this class . [ thm_phenomenon ]    in the following theorem , we summarize implications of theorem  [ thm_phenomenon ] for the evaluation of @xmath420 via the algorithm in section  [ sec_evaluate_beta ] ( the proof of a slightly modified version of this theorem appears in @xcite , @xcite ) .",
    "suppose that @xmath9 is a real number , that @xmath23 is an integer , and that @xmath419 are defined via in section  [ sec_legendre ] .",
    "then , the algorithm described in section  [ sec_evaluate_beta ] evaluates @xmath419 to high relative accuracy .",
    "more specifically , @xmath421 for even @xmath1 , and @xmath422 for odd @xmath1 , where @xmath423 are the numerical approximation to @xmath419 , respectively , and @xmath44 is the machine accuracy ( e.g. @xmath49 for double precision calculations ) .",
    "[ thm_beta01 ]    the algorithm described in section  [ sec_evaluate_beta ] evaluates the eigenvectors @xmath221 by the shifted inverse power method ( see section  [ sec_power ] ) .",
    "it turns out that the choice of method is important in this situation : if , for example , these eigenvectors are evaluated via the standard and well known jacobi rotations ( rather than inverse power ) , the small coordinates exhibit the loss of accuracy expected from ( see @xcite , @xcite for more details about this and related issues ) .",
    "[ rem_method ]    due to the combination of remark  [ rem_psi_accuracy ] in section  [ sec_evaluate_beta ] , observation 2 above and theorem  [ thm_beta01 ] , the algorithm of this section evaluates @xmath34 to high relative accuracy .",
    "more specifically , at most @xmath424 decimal digits are lost in the evaluation of @xmath34 .",
    "[ rem_lambda_acc ]      suppose that @xmath36 is an integer , and that the quadrature rule @xmath318 is defined via in section  [ sec_quad ] . according to , the nodes of @xmath318 are precisely the @xmath1 roots @xmath63 of @xmath24 in the interval @xmath59 . in this section ,",
    "we describe a numerical procedure for the evaluation of these quadrature nodes .",
    "this procedure is based on the fast algorithm for the calculation of the roots of special functions described in @xcite .",
    "it combines prfer s transformation ( see section  [ sec_prufer ] ) , runge - kutta method ( see section  [ sec_runge_kutta ] ) and taylor s method ( see section  [ sec_taylor ] ) .",
    "this algorithm also evaluates @xmath425 .",
    "it requires @xmath238 operations to compute all roots of @xmath24 in @xmath59 as well as the derivative of @xmath24 at these roots .",
    "a short outline of the principal steps of the algorithm is provided below . for a more detailed description of the algorithm and its properties ,",
    "the reader is referred to @xcite .",
    "suppose that @xmath426 is the minimal root of @xmath24 in @xmath427 .",
    "[ [ step-1-evaluation - of - t_min . ] ] step 1 ( evaluation of @xmath426 ) .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    if @xmath1 is odd , then @xmath428 due to theorem  [ thm_pswf_main ] in section  [ sec_pswf ] .",
    "on the other hand , if @xmath1 is even , then @xmath429 to compute @xmath426 in the case of even @xmath1 , we numerically solve the ode with the initial condition in the interval @xmath430 $ ] , by using 20 steps of runge - kutta method described in section  [ sec_runge_kutta ] .",
    "the rightmost value @xmath431 of the solution is a low - order approximation of @xmath432 ( see , ) .",
    "then , we evaluate @xmath426 to machine precision via newton s method ( see section  [ sec_newton ] ) , using @xmath431 as an initial approximation to @xmath426 . on each newton iteration , we evaluate @xmath24 and @xmath433 by using the algorithm of section  [ sec_evaluate_beta ] ( see , )",
    ".    * observation 1 . *",
    "the point @xmath431 approximates @xmath426 to at least three decimal digits ( see section  [ sec_runge_kutta ] ) .",
    "since newton s method converges quadratically in the vicinity of the solution , only several newton iterations are required to obtain @xmath426 from @xmath431 to essentially machine precision ( see @xcite for more details ) . in our experience ,",
    "the number of newton iterations in this step never exceeds four in double precision calculations ( and never exceeds six in extended precision calculations ) .",
    "we combine this observation with remark  [ rem_total_cost ] in section  [ sec_evaluate_beta ] to conclude that the total cost of step 1 is @xmath238 operations .",
    "[ [ step-2-evaluation - of - psi_nt_min . ] ] step 2 ( evaluation of @xmath434 ) .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we evaluate @xmath434 to machine precision via in section  [ sec_evaluate_beta ] .",
    "* observation 2 . * due to remark  [ rem_total_cost ] in section  [ sec_evaluate_beta ] , the cost of step 2 is @xmath238 operations .",
    "the remaining roots of @xmath24 in @xmath435 are computed one by one , as follows .",
    "suppose that @xmath436 is an integer , and both @xmath437 and @xmath438 have already been evaluated .",
    "[ [ step-3-evaluation - of - t_j1-and - psi_nt_j1-given - t_j - and - psi_nt_j . ] ] step 3 ( evaluation of @xmath439 and @xmath440 , given @xmath437 and @xmath438 ) .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    * evaluate @xmath441 via the recurrence relation in section  [ sec_pswf ] ( in double precision calculations , @xmath442 ; in extended precision calculations , @xmath443 ) .",
    "* use 20 steps of runge - kutta method ( see section  [ sec_runge_kutta ] ) , to solve the ode with the initial condition @xmath444 in the interval @xmath445 $ ] ( see ) .",
    "the rightmost value @xmath446 of the solution is a low - order approximation of @xmath439 . *",
    "compute @xmath439 via newton s method ( see section  [ sec_newton ] ) , using @xmath446 as the initial approximation to @xmath439 . on each newton iteration",
    ", we evaluate @xmath24 and @xmath433 via taylor s method ( see section  [ sec_taylor ] ) .",
    "the taylor expansion of appropriate order @xmath447 about @xmath437 is used , i.e. @xmath448 * evaluate @xmath440 via taylor s method . the taylor expansion of order @xmath449",
    "is used , i.e. @xmath450 in both and , we set @xmath442 for double precision calculations , and @xmath443 for extended precision calculations .",
    "* observation 3 . *",
    "the point @xmath446 approximates @xmath439 to at least three decimal digits ( see section  [ sec_runge_kutta ] ) .",
    "subsequently , only several newton iterations are required to obtain @xmath439 to essentially machine precision ( see observation 1 above , and also @xcite for more details ) .",
    "thus the cost of step 3 is @xmath22 operations , for every integer @xmath436 .",
    "obviously , on each newton iteration one can evaluate @xmath24 and @xmath433 via , in section  [ sec_evaluate_beta ] rather than via , . however , this would increase the cost of each such evaluation from @xmath22 to @xmath238 , and the total cost of the procedure from @xmath238 to @xmath33 ( see remark  [ rem_total_cost ] in section  [ sec_evaluate_beta ] ) .",
    "[ rem_newton ]    [ [ step-4-evaluation - of - t_j - and - psi_nt_j - for - all - j - leq - n2 . ] ] step 4 ( evaluation of @xmath437 and @xmath438 for all @xmath451 ) .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    step 3 is repeated for every integer @xmath436 . to evaluate @xmath437 and @xmath438 for @xmath452",
    ", we use the symmetry of @xmath24 about zero ( see theorem  [ thm_pswf_main ] in section  [ sec_pswf ] ) . more specifically , for every integer @xmath453 , we compute @xmath437 and @xmath438 , respectively , via the formulae @xmath454 and @xmath455    [ [ summary - evaluation - of - t_j - and - psi_nt_j - for - all - j1dotsn . ] ] summary ( evaluation of @xmath437 and @xmath438 , for all @xmath74 ) . + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    to summarize , the procedure for the evaluation of all roots of @xmath24 in @xmath59 ( as well as the derivative of @xmath24 at these roots ) is as follows :    * evaluate @xmath426 defined via , ( see step 1 ) .",
    "cost : @xmath238 operations . *",
    "evaluate @xmath434 ( see step 2 ) .",
    "cost : @xmath238 operations . * for every integer @xmath436 , evaluate @xmath439 and @xmath440 ( see step 3 ) .",
    "cost : @xmath238 operations .",
    "* for every integer @xmath453 , evaluate @xmath437 and @xmath438 ( see step 4 ) .",
    "cost : @xmath238 operations .",
    "we observe that the algorithm described in this section not only computes the roots @xmath58 of @xmath24 in @xmath59 , but also evaluates @xmath433 at all these roots .",
    "the total cost of this algorithm is @xmath238 operations , and all the quantities are evaluated essentially to machine precision ( see observations 1,2,3 above ) .",
    "[ rem_evaluate_nodes ]    the algorithm described in this section uses the quantities @xmath100 and @xmath213 computed via the procedure of section  [ sec_evaluate_beta ] . if @xmath393 , then these quantities are obtained at the cost of @xmath366 operations ; if @xmath376 , then these quantities are obtained at the cost of @xmath238 operations ( see remarks  [ rem_sturm_cost ] , [ rem_total_cost ] in section  [ sec_evaluate_beta ] ) .",
    "[ rem_evaluate_nodes2 ]    as a by - product of the algorithm described in this section , we obtain a table of all the derivatives of @xmath24 up to order @xmath447 at all roots of @xmath24 in @xmath59 ( here @xmath442 in double precision calculation , and @xmath443 in extended precision calculations ) .",
    "in other words , @xmath456 are calculated for every @xmath457 and every @xmath74 ( see step 3 above ) .",
    "this table can be used to evaluate @xmath458 at an arbitrary point @xmath459 to essentially machine precision in @xmath22 operations via interpolation , using the formulae , ( see also remark  [ rem_o1_interpolation ] in section  [ sec_evaluate_beta ] ) .",
    "[ rem_newton_interpolation ]      suppose now that @xmath36 is an integer , and that the quadrature rule @xmath318 is defined via in section  [ sec_quad ] . in this subsection",
    ", we describe an algorithm for the evaluation of the weights @xmath64 of this quadrature rule ( see in section  [ sec_quad ] ) .",
    "the results of this subsection are illustrated in table  [ t : test96 ] and in figure  [ fig : test96 ] ( see experiment 4 in section  [ sec_exp15 ] ) .    in the description of the algorithms",
    "below , we assume that the coefficients @xmath213 ( defined via in section  [ sec_legendre ] ) have already been evaluated ( for example , by the algorithm in section  [ sec_evaluate_beta ] ) .",
    "in addition , we assume that the quadrature nodes @xmath58 as well as @xmath425 have also been computed ( for example , by the algorithm of section  [ sec_evaluate_nodes ] ) .    an obvious way to compute @xmath60 is to evaluate numerically . however , due to , the integrand @xmath87 in has @xmath70 roots in @xmath59 , for every @xmath74 .",
    "in particular , such approach is unlikely to require less that @xmath33 operations . rather than computing directly ,",
    "we evaluate @xmath64 by using the results of section  [ sec_weights ] . in the rest of this subsection , we describe two such algorithms ; both evaluate @xmath64 essentially to machine precision .",
    "one of these algorithms ( based on theorem  [ thm_tilde_phi ] ) is fairly straightforward ; however , its cost is @xmath33 operations . the other algorithm ( based on theorem  [ lem_tilde_phi_ode ] ) , while still rather simple , is also computationally efficient : its cost is @xmath238 operations .    [",
    "[ algorithm-1-evaluation - of - w_1-dots - w_n - in - on2-operations . ] ] algorithm 1 : evaluation of @xmath60 in @xmath33 operations .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    suppose that the integer @xmath227 is defined via in section  [ sec_evaluate_beta ] . for every integer @xmath74 , we compute an approximation @xmath460 to @xmath315 via the formula @xmath461 where @xmath344 and @xmath345 are defined , respectively , via , and in section  [ sec_legendre ] .",
    "we observe that is obtained from the identity in theorem  [ thm_tilde_phi ] in section  [ sec_weights ] by truncating the infinite series at @xmath462 terms .    due to the combination of remarks  [ rem_tridiagonal ] , [ rem_legendre_evaluate ] in section  [ sec_legendre ] , remark  [ rem_beta_absolute ] in section  [ sec_evaluate_beta ] , and theorem  [ thm_tilde_phi ] , each weight @xmath315 is evaluated via essentially to machine precision ( see also experiment 4 in section  [ sec_exp15 ] ) .",
    "[ rem_algorithm1_acc ]    due to the combination of remark  [ rem_legendre_evaluate ] in section  [ sec_legendre ] and in section  [ sec_evaluate_beta ] , the overall cost of computing @xmath64 via is @xmath33 operations .",
    "[ rem_algorithm1_cost ]    [ [ algorithm-2-evaluation - of - w_1-dots - w_n - in - on - operations . ] ] algorithm 2 : evaluation of @xmath60 in @xmath238 operations .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    this algorithm is somewhat similar to the procedure for the evaluation of the roots of @xmath24 in @xmath59 described in section  [ sec_evaluate_nodes ] .",
    "suppose first that @xmath426 is the minimal root of @xmath24 in @xmath427 .",
    "in other words , @xmath463 ( see , in section  [ sec_evaluate_nodes ] ) .",
    "suppose also that the function @xmath342 is defined via in theorem  [ thm_tilde_phi ] in section  [ sec_weights ] .",
    "[ [ step-1-evaluation - of - tildephi_nt_min - and - tildephi_nt_min . ] ] step 1 ( evaluation of @xmath464 and @xmath465 ) . + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we evaluate @xmath464 and @xmath466 via the formulae @xmath467 and @xmath468 respectively ( see in the description of algorithm 1 above ) .",
    "observe that , are obtained from the infinite expansion in theorem  [ thm_tilde_phi ] by truncation .",
    "due to remarks  [ rem_algorithm1_acc ] , [ rem_algorithm1_cost ] , the cost of step 1 is @xmath238 operations ; moreover , @xmath464 and @xmath465 are evaluated via , essentially to machine precision .",
    "[ rem_phi_tmin ]    we evaluate @xmath347 at all but the last four remaining roots of @xmath24 in @xmath427 as follows .",
    "suppose that @xmath436 is an integer , and both @xmath469 and @xmath470 have already been evaluated .",
    "[ [ step-2-evaluation - of - tildephi_nt_j1-and - tildephi_nt_j1-given - tildephi_nt_j - and - tildephi_nt_j . ] ] step 2 ( evaluation of @xmath471 and @xmath472 , given @xmath469 and @xmath470 ) .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    * use the recurrence relation , ( see theorem  [ lem_tilde_phi_ode ] in section  [ sec_weights ] ) to evaluate @xmath473 ( here @xmath443 in double precision calculations , and @xmath474 in extended precision calculations ) . *",
    "evaluate @xmath471 via taylor s method ( see section  [ sec_taylor ] ) .",
    "the taylor expansion of appropriate order @xmath447 is used , i.e. @xmath475 ( compare to in section  [ sec_evaluate_nodes ] ) .",
    "* evaluate @xmath476 via taylor s method .",
    "the taylor expansion of order @xmath449 is used , i.e. @xmath477 ( compare to in section  [ sec_evaluate_nodes ] ) . in both and",
    ", we set @xmath443 for double precision calculations and @xmath474 for extended precision calculations .    for each @xmath293 ,",
    "the cost of step 2 is @xmath22 operations ( i.e. does not depend on @xmath1 ) . also , it turns out that @xmath469 and @xmath470 are evaluated via , respectively , essentially to machine precision ( compare to , in section  [ sec_evaluate_nodes ] ) . for a detailed discussion of the accuracy and stability of this step ,",
    "the reader is referred to @xcite .",
    "[ rem_algorithm2_step2 ]    [ [ step-3-evaluation - of - tildephi_nt_j - for - n-3-leq - j - leq - n . ] ] step 3 ( evaluation of @xmath469 for @xmath478 ) .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    for @xmath479 , we evaluate @xmath469 via the formula @xmath480 ( as in in step 1 ; see also in the description of algorithm 1 above ) .",
    "we compute @xmath347 at the last four nodes via rather than , since the accuracy of the latter deteriorates when @xmath437 is too close to @xmath481 ( interestingly , the evaluation of @xmath482 via in section  [ sec_evaluate_nodes ] for any @xmath74 does not have this unpleasant feature ) . since this approach works in practice ,",
    "is cheap in terms of the number of operations and eliminates the accuracy problem , there was no need in a detailed analysis of the issue ( see , however , @xcite for more details ) .",
    "[ rem_last_weights ]    [ [ step-4-evaluation - of - tildephi_nt_j - for-1-leq - j - leq - n2 . ] ] step 4 ( evaluation of @xmath469 for @xmath453 ) .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    due to the combination of theorem  [ thm_tilde_phi ] in section  [ sec_weights ] and in section  [ sec_legendre ] , the function @xmath347 is symmetric about the origin .",
    "we use this observation to evaluate @xmath469 via the formula @xmath483 for every @xmath484 .",
    "[ [ step-5-evaluation - of - w_1-dots - w_n . ] ] step 5 ( evaluation of @xmath60 ) .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    for every @xmath74 , we compute an approximation @xmath485 to @xmath315 from @xmath469 and @xmath438 via the formula @xmath486 ( see in theorem  [ thm_tilde_phi ] in section  [ sec_weights ] ) .    due to the combination of remarks  [ rem_phi_tmin ] , [ rem_algorithm2_step2 ] , [ rem_last_weights ] , algorithm 2 evaluates all @xmath64 essentially to machine precision .",
    "this algorithms requires @xmath238 operations ( compare to remark  [ rem_algorithm1_cost ] ) .",
    "[ rem_weights_cost ]    algorithm 2 described in this section uses some of the quantities evaluated by the procedures of sections  [ sec_evaluate_beta ] , [ sec_evaluate_nodes ] .",
    "if @xmath487 , then the cost of obtaining these quantities is @xmath409 operations ; if @xmath488 , then the cost of obtaining these quantities is @xmath238 operations ( see remarks  [ rem_evaluate_nodes ] , [ rem_evaluate_nodes2 ] in section  [ sec_evaluate_nodes ] ) .",
    "[ rem_weights_cost2 ]",
    "in this section , we demonstrate the performance of the quadrature rules from section  [ sec_quad ] .",
    "all the calculations were implemented in fortran ( the lahey 95 linux version ) , and carried out in double precision . extended precision calculations were used for comparison and verification ( in extended precision , the floating point numbers are 128 bits long , as opposed to 64 bits in double precision ) .",
    "[ [ exp_0 ] ] experiment 1 .",
    "+ + + + + + + + + + + + +    [ htbp ]    , with @xmath489 and @xmath490 . here",
    "@xmath491.__,width=434 ]    [ htbp ]    , with @xmath489 and @xmath490 .",
    "here @xmath491.__,width=434 ]    [ htbp ]     vs @xmath90 , with @xmath489 .",
    "_ , width=434 ]    [ htbp ]     vs @xmath90 , with @xmath489 .",
    "_ , width=434 ]    here we demonstrate the performance of the quadrature rule @xmath318 ( see in section  [ sec_quad ] ) on exponential functions .",
    "we proceed as follows .",
    "we choose , more or less arbitrarily , the band limit @xmath0 and the prolate index @xmath1 .",
    "next , we evaluate the quadrature nodes @xmath58 and the quadrature weights @xmath64 via the algorithms of sections  [ sec_evaluate_nodes ] ,  [ sec_evaluate_weights ] , respectively . also , we evaluate @xmath90 via the algorithm in section  [ sec_evaluate_lambda ] .",
    "then , we choose a real number @xmath492 , and evaluate the integral of @xmath493 over @xmath14 via the formula @xmath494 also , we use @xmath318 to approximate via the formula @xmath495 ( see in section  [ sec_quad ] ) . finally , we evaluate the quadrature error @xmath496 via the formula @xmath497 ( see in section  [ sec_quad ] ) .    in figure",
    "[ fig : test253a ] , we display the results of this experiment .",
    "the band limit and the prolate index were chosen to be , respectively , @xmath489 and @xmath490 . for this choice of parameters , @xmath498 -.60352e-15 . in this figure",
    ", we plot the quadrature error as a function of the real parameter @xmath499 , for @xmath492 , on the logarithmic scale .",
    "the calculations are carried out in double precision .",
    "we make the following observations from figure  [ fig : test253a ] .",
    "the quadrature error is essentially zero up to machine precision @xmath44 , for all real @xmath492 . in other words , for this choice of parameters , the quadrature rule @xmath318 integrates the functions of the form @xmath500 with @xmath501 exactly , for all practical purposes .",
    "it is perhaps surprising , however , that such functions are integrated exactly via @xmath318 even when @xmath502 .",
    "in other words , the quadrature rule @xmath318 ( corresponding to band limit @xmath0 and @xmath503 ) integrates exactly the exponential functions with the band limit up to @xmath65 .    to get a clearer picture",
    ", we repeat this experiment in extended precision . in figure  [ fig : test253b ] , we plot the quadrature error as a function of the real parameter @xmath499 , for @xmath492 , on the logarithmic scale . in other words ,",
    "figure  [ fig : test253b ] is a version of figure  [ fig : test253a ] in extended precision .",
    "we make the following observations from figure  [ fig : test253b ] .",
    "if @xmath501 , then the quadrature rule @xmath318 integrates the functions of the form @xmath500 up to the error of order @xmath504 ( in figure  [ fig : test253a ] we used double precision calculations and thus did not have enough digits to see this phenomenon ) . on the other hand , for @xmath502 the quadrature rule @xmath318 integrates such functions up to the error roughly @xmath90 . in other words , the quadrature rule @xmath318 ( corresponding to band limit @xmath0 and @xmath503 ) integrates the functions of band limit up to @xmath0 up to @xmath505 ( rather than @xmath44 ) ; on the other hand , the functions of band limit between @xmath0 and @xmath65 are integrated up to @xmath44",
    ". * explanation . *",
    "these observations admit the following ( somewhat imprecise ) explanation ( see @xcite , @xcite for more details ) .",
    "suppose that @xmath506 is a real number .",
    "due to and theorem  [ thm_pswf_main ] in section  [ sec_pswf ] , @xmath507 for all real @xmath14 .",
    "moreover , @xmath508 we combine , , to obtain @xmath509 obviously , the quadrature error @xmath322 ( see ) is zero for odd @xmath48 .",
    "also , @xmath322 rapidly increases as a function of even @xmath108 ; moreover , @xmath322 is of order @xmath90 when @xmath510 is an even integer close to @xmath1 ( see conjectures  [ conj_deltan_psim ] ,  [ conj_quad_error ] in section  [ sec_quad_err_num ] and theorem  [ thm_quad_simple ] in section  [ sec_quad_error ] ) .",
    "therefore , roughly speaking , @xmath511 on the other hand , due to the fast decay of @xmath512 ( see theorems  [ thm_mu_spectrum ] , [ thm_crude_inequality ] in section  [ sec_pswf ] ) , @xmath513 finally , the following approximate formula appears in @xcite , @xcite , in a slightly different form : suppose that @xmath42 is an integer , that @xmath155 , and that @xmath492 is a real number .",
    "then , @xmath514 it follows from the combination of , , that the quadrature error is expected to be of the order @xmath515 , if @xmath501 . on the other hand",
    ", the quadrature error is expected to be of the order @xmath90 , if @xmath502 .",
    "figures  [ fig : test253a ] , [ fig : test253b ] , [ fig : test254a ] , [ fig : test254b ] support these somewhat vague conclusions .",
    "we summarize this crude analysis , supported by the observations above , in the following conjecture about the quadrature error for @xmath492 .",
    "suppose that @xmath9 and @xmath506 are real numbers , and that @xmath488 is an integer .",
    "suppose also that @xmath516 is defined via in definition  [ def_quad ] in section  [ sec_quad ] . if @xmath501 , then @xmath517 where @xmath34 is that of in section  [ sec_pswf ] . if , on the other hand , @xmath502 , then @xmath518 [ conj_exp ]    we repeat the above experiment with various values of @xmath1 , and plot the results in figure  [ fig : test254a ] .",
    "this figure also corresponds to band limit @xmath489 .",
    "we plot the following three quantities as functions of the prolate index @xmath1 that varies between @xmath519 and @xmath520 .",
    "first , we plot @xmath90 .",
    "second , we plot the maximal quadrature error @xmath521 defined via the formula @xmath522 where @xmath523 and @xmath524 are , respectively , the notes and weights of the quadrature rule @xmath318 ( see in section  [ sec_quad ] ) . finally , we plot the maximal quadrature error @xmath525 defined via the formula @xmath526 we observe that in the parameter @xmath499 varies between @xmath55 and @xmath481 , and in the parameter @xmath499 varies between @xmath481 and @xmath527 . in other words , @xmath521 is the maximal quadrature errors of @xmath318 for the exponential functions of band limits up to @xmath0 , and @xmath525 is the maximal quadrature error of @xmath318 for the exponential functions of band limit between @xmath0 and @xmath65 .",
    "we make the following observations from figure  [ fig : test254a ] .",
    "as long as @xmath90 is less than roughly @xmath528 ( with @xmath44 the machine precision ) , @xmath521 is roughly equal to @xmath504 . on the other hand",
    ", @xmath521 is zero up to machine precision once @xmath529 .",
    "these observations are in agreement with conjecture  [ conj_exp ] above .",
    "we also observe that @xmath525 is roughly of order @xmath90 , as long as @xmath530 . on the other hand , when @xmath34 is zero to machine precision , so is @xmath525 ( see conjecture  [ conj_exp ] ) .",
    "we repeat this experiment in extended precision , and plot the results in figure  [ fig : test254b ] . in other words ,",
    "figure  [ fig : test254b ] is a version of figure  [ fig : test254a ] in extended precision .",
    "we observe the same phenomenon : @xmath521 is of order @xmath504 , and @xmath525 is of order @xmath90 ( as long as we do not run out of digits to see it ; if , for example , @xmath90 is below the machine zero so are both @xmath521 and @xmath525 ) . in other words ,",
    "the quadrature error of @xmath318 for exponential functions with band limit up to @xmath0 is of order @xmath504 , and the quadrature error of @xmath318 for exponential functions with band limit between @xmath0 and @xmath65 is of order @xmath90 , which supports conjecture  [ conj_exp ] .",
    "in this section , we illustrate the analytical results from section  [ sec_quad ] and the performance of the algorithms described in section  [ sec_num_algo ] . all the calculations were implemented in fortran ( the lahey 95 linux version ) , and carried out in double precision .",
    "extended precision calculations were used for comparison and verification ( in extended precision , the floating point numbers are 128 bits long , as opposed to 64 bits in double precision ) .            in this experiment , we choose , more or less arbitrarily , band limit @xmath0 and prolate index @xmath1 .",
    "then , we compute @xmath58 ( see ) and @xmath425 via the algorithm of section  [ sec_evaluate_nodes ] .",
    "also , we evaluate @xmath534 via the algorithm of section  [ sec_evaluate_beta ] .",
    "next , compute approximations @xmath535 to @xmath64 via algorithm 1 in section  [ sec_evaluate_weights ] ( in particular , @xmath460 is evaluated via for every @xmath74 ) . also , we compute approximations @xmath536 to @xmath64 via algorithm 2 in section  [ sec_evaluate_weights ] .",
    "all the calculations are carried out in double precision .",
    "we display the results of this experiment in table  [ t : test96 ] .",
    "the data in this table correspond to @xmath537 and @xmath538 .",
    "table  [ t : test96 ] has the following structure .",
    "the first column contains the weight index @xmath293 , that varies between 1 and @xmath539 .",
    "the second column contains @xmath485 ( an approximation to @xmath315 evaluated by algorithm 2 in section  [ sec_evaluate_weights ] ) .",
    "the third column contains the difference between @xmath485 and @xmath460 ( evaluated via by algorithm 1 ) .",
    "the last column contains the difference @xmath540 ( see in remark  [ rem_w_approx ] ) .",
    "we make the following observations from table  [ t : test96 ] .",
    "first , due to the combination of theorems  [ thm_tilde_phi ] , [ lem_tilde_phi_ode ] in section  [ sec_weights ] , the value in the third column would be zero in exact arithmetic .",
    "we observe that , indeed , this value is zero up to the machine precision , which confirms remarks  [ rem_algorithm1_acc ] , [ rem_weights_cost ] in section  [ sec_evaluate_weights ] .",
    "( we note that , for @xmath541 and @xmath542 , both @xmath485 and @xmath460 are evaluated via , and hence the value in the corresponding rows is exactly zero ) .",
    "in particular , either of the two approximations @xmath543 can be used to evaluate @xmath315 to essentially machine precision .",
    "we also observe that all of the weights @xmath60 are positive ( see theorem  [ thm_positive_w ] and remark  [ rem_w_always_pos ] ) .",
    "moreover , @xmath315 grow monotonically as @xmath293 increases to @xmath544 .",
    "finally , we observe that , for all @xmath74 , the value in the last column is of the order @xmath90 ( see remark  [ rem_w_approx ] ) ."
  ],
  "abstract_text": [
    "<S> as demonstrated by slepian et . </S>",
    "<S> al . in a sequence of classical papers ( see @xcite , @xcite , @xcite , @xcite , @xcite ) , prolate spheroidal wave functions ( pswfs ) provide a natural and efficient tool for computing with bandlimited functions defined on an interval . </S>",
    "<S> recently , pswfs have been becoming increasingly popular in various areas in which such functions occur - this includes physics ( e.g. wave phenomena , fluid dynamics ) , engineering ( signal processing , filter design ) , etc .    to use pswfs as a computational tool , one needs fast and accurate numerical algorithms for the evaluation of pswfs and related quantities , as well as for the construction of corresponding quadrature rules , interpolation formulas , etc . during the last 15 years </S>",
    "<S> , substantial progress has been made in the design of such algorithms - see , for example , @xcite ( see also @xcite , @xcite , @xcite , @xcite for some classical results ) .    </S>",
    "<S> the complexity of many of the existing algorithms , however , is at least quadratic in the band limit @xmath0 . </S>",
    "<S> for example , the evaluation of the @xmath1th eigenvalue of the prolate integral operator requires at least @xmath2 operations ( see e.g. @xcite ) ; the construction of accurate quadrature rules for the integration ( and associated interpolation ) of bandlimited functions with band limit @xmath0 requires @xmath3 operations ( see e.g. @xcite ) . </S>",
    "<S> therefore , while the existing algorithms are satisfactory for moderate values of @xmath0 ( e.g. @xmath4 ) , they tend to be relatively slow when @xmath0 is large ( e.g. @xmath5 ) .    in this paper , we describe several numerical algorithms for the evaluation of pswfs and related quantities , and design a class of pswf - based quadratures for the integration of bandlimited functions . </S>",
    "<S> while the analysis is somewhat involved and will be published separately ( currently , it can be found in @xcite , @xcite ) , the resulting numerical algorithms are quite simple and efficient in practice . </S>",
    "<S> for example , the evaluation of the @xmath1th eigenvalue of the prolate integral operator requires @xmath6 operations ; the construction of accurate quadrature rules for the integration ( and associated interpolation ) of bandlimited functions with band limit @xmath0 requires @xmath7 operations . </S>",
    "<S> all algorithms described in this paper produce results essentially to machine precision . </S>",
    "<S> our results are illustrated via several numerical experiments .    </S>",
    "<S> * keywords : * bandlimited functions , prolate spheroidal wave functions , quadratures , interpolation    * math subject classification : * 33e10 , 34l15 , 35s30 , 42c10 , 45c05 , 54p05 , 65d05 , 65d15 , 65d30 , 65d32 </S>"
  ]
}
{
  "article_text": [
    "[ sec : defi ] the issue of this work is to introduce and to study the computational model of quantum finite state transducers .",
    "these can be understood as finite automata with the addition of an output tape which compute a relation between strings , instead of a decision ( which we read as a binary valued function ) .",
    "after the necessary definitions , the relation to quantum finite automata is clarified ( section  [ sec : qfa : qfst ] ) , then decidability questions are addressed ( section  [ sec : empty ] ) : it is shown that emptiness of the computed relation is undecidable both for quantum and probabilistic transducers .",
    "however , the membership problem for a specific output is decidable .",
    "next , the relation between deterministic and probabilistic transducers is explored ( section  [ sec : det : prob ] ) , and in section  [ sec : qfst ] quantum and probabilistic transducers are compared .",
    "we feel our extension of quantum automata studies to this new model justified by the following quote from d. scott  @xcite` the author ( along with many other people ) has come recently to the conclusion that the functions computed by the various machines are more important  or at least more basic  than the sets accepted by these devices .",
    "( ... ) in fact by putting the functions first , the relationship between various classes of sets becomes much clearer ' .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    we start be reviewing the concept of probabilistic finite state transducer . for a finite set @xmath0",
    "we denote by @xmath1 the set of all finite strings formed from @xmath0 , the empty string is denoted @xmath2 .",
    "[ defi : pfst ] a _ probabilistic finite state transducer ( pfst ) _ is a tuple @xmath3 , where @xmath4 is a finite set of states , @xmath5 is the input / output alphabet , @xmath6 is the initial state , and @xmath7 are ( disjoint ) sets of accepting and rejecting states , respectively .",
    "( the other states , forming set @xmath8 , are called non  halting ) . the transition function @xmath9",
    "is such that for all @xmath10 the matrix @xmath11 is stochastic , and @xmath12 is the output function .",
    "if all matrix entries are either @xmath13 or @xmath14 the machine is called a _ deterministic finite state transducer (",
    "dfst)_.    the meaning of this definition is that , being in state @xmath15 , and reading input symbol @xmath16 , the transducer prints @xmath17 on the output tape , and changes to state @xmath18 with probability @xmath11 , moving input and output head to the right .",
    "after each such step , if the machine is found in a halting state , the computation stops , accepting or rejecting the input , respectively .    to capture this formally ,",
    "we introduce the _ total state _ of the machine , which is an element @xmath19 with the natural norm @xmath20 at the beginning , the total state is @xmath21 ( where we identify an element of @xmath22 with its characteristic function ) .",
    "the computation is represented by the ( linear extensions of the ) transformations @xmath23 of the total state , for @xmath10 , with @xmath24 and @xmath25 .    for a string",
    "@xmath26 the map @xmath27 is just the concatenation of the @xmath28 . observe that all the @xmath29 conserve the probability .",
    "implicitely , we add initial and end marker symbols ( @xmath30 ) at the input , with additional stochastic matrices @xmath31 and @xmath32 , executed only at the very beginning , and at the very end .",
    "we assume that @xmath32 puts no probability outside @xmath33 .",
    "by virtue of the computation , to each input string @xmath34 there corresponds a probability distribution @xmath35 on the set @xmath36 : @xmath37\\ ] ] is the probability to reject the input @xmath38 , whereas @xmath39\\ ] ] is the probability to accept , after having produced the output @xmath40 .",
    "[ defi : compute ] let @xmath41 .    for @xmath42",
    "we say that @xmath43 _ computes the relation @xmath44 with probability @xmath45 _ if for all @xmath38 , whenever @xmath46 , then @xmath47 , and whenever @xmath48 , then @xmath49    for @xmath50 we say that @xmath43 _ computes the relation @xmath44 with isolated cutpoint @xmath45 _ if there exists @xmath51 such that for all @xmath38 , whenever @xmath46 , then @xmath52 , but whenever @xmath48 , then @xmath53 .",
    "the following definition is modelled after the ones for pfst for quantum finite state automata  @xcite :    [ defi : qfst ] a _ quantum finite state transducer ( qfst ) _ is a tuple @xmath54 , where @xmath4 is a finite set of states , @xmath5 is the input / output alphabet , @xmath6 is the initial state , and @xmath7 are ( disjoint ) sets of accepting and rejecting states , respectively .",
    "the transition function @xmath9 is such that for all @xmath10 the matrix @xmath11 is unitary , and @xmath12 is the output function .",
    "like before , implicitely matrices @xmath31 and @xmath32 are assumed , @xmath32 carrying no amplitude from @xmath8 to outside @xmath33 . the computation proceeds as follows : being in state @xmath15 , and reading @xmath16 , the machine prints @xmath17 on the output tape , and moves to the superposition @xmath55 of internal states .",
    "then a measurement of the orthogonal decomposition @xmath56 ( with the subspaces @xmath57 , which we identify with their respective projections ) is performed , stopping the computation with accepting the input on the second outcome ( while observing the output ) , with rejecting it on the third .    here ,",
    "too , we define total states : these are elements @xmath58 with norm @xmath59 at the beginning the total state is @xmath60 , the total state transformations , for @xmath61 are ( for @xmath10 ) @xmath62 where @xmath63 , and @xmath64 observe that the @xmath29 do not exactly preserve the norm , but that there is a constant @xmath65 such that @xmath66 for any total state @xmath0 . quite straightforwardly , the distributions @xmath35 are defined , and so are the concepts of computation with probability @xmath45 or with isolated cutpoint @xmath45 .",
    "observe also that we defined our model in closest possible analogy to quantum finite automata  @xcite .",
    "this is of course to be able to compare qfst to the latter . in principle",
    "however other definitions are conceivable , e.g. a mixed state computation where the @xmath29 are any completely positive , trace preserving , linear maps ( the same of course applies to quantum finite automata ! ) .",
    "we defer the study of such a model to another occasion .",
    "notice the physical benefits of having the output tape : whereas for finite automata a superposition of states means that the amplitudes of the various transitions are to be added , this is no longer true for transducers if we face a superposition of states _ with different output tape content_. i.e. the entanglement of the internal state with the output may prohibit certain interferences .",
    "this will be a crucial feature in some of our later constructions .",
    "the definition of qfst is taylored in such a way that by excluding the output tape and the output function , we get a quantum finite automaton .",
    "one , however , with distinct acceptance and rejection properties , as compared to the qfst .",
    "nevertheless , the decision capabilities of qfst equal those of quantum finite automata :    [ thm : qfa - c - qfst ] a language @xmath67 is accepted by a 1way quantum finite automaton with probability bounded away from 1/2 if and only if the relation @xmath68 is computed with isolated cutpoint .",
    "_ proof _ : first observe that for finite automata ( probabilistic and quantum ) , recognizability with an isolated cutpoint is equivalent to recognizability with probability bounded away from @xmath69 ( by `` shifting the cutpoint '' : just add in the @xmath70step possibilities to accept or reject right away with certain probabilities ) .",
    "we have to exhibit two constructions :    let there be given a quantum finite automaton .",
    "we may assume that it is such that @xmath32 is a permutation on @xmath4 .",
    "this can be forced by duplicating each @xmath71 by a new state @xmath72 , and modifying the transition function as follows : denote by @xmath73 the map interchanging @xmath15 with @xmath72 for @xmath74 , and being the identity on @xmath75 for @xmath76 .",
    "define a unitary @xmath77 such that for @xmath76 @xmath78 and @xmath79 for @xmath71 .",
    "now let @xmath80 it is easily checked that this automaton behaves exactly like the initial one .",
    "construct a qfst as follows : its states are @xmath81 , with @xmath82 being the accepting states , and no rejecting states .",
    "let the transition function be @xmath83 with @xmath84 since @xmath32 is the permutation @xmath73 on @xmath4 , we may define @xmath85 finally , let the output function be ( for @xmath86 ) @xmath87 and @xmath2 in all other cases .",
    "it can be checked that it behaves in the desired way .",
    "given a qfst , construct a quantum finite automaton as follows : its states are @xmath88 , where the second component represents the tape content up to @xmath89 many symbols .",
    "initial state is @xmath90 . observe that by definition of the @xmath29 amplitude that once is shifted onto output tapes of length larger than @xmath14 is never recovered for smaller lengths .",
    "hence we may as well cut such branches by immediate rejection : the states in @xmath91 are all rejecting , and so are @xmath92 .",
    "the accepting states are @xmath93 .    the transition function is partially defined by @xmath94 ( for @xmath95 this is followed by mapping @xmath96 to a rejecting state , while leaving the other halting states alone ) , i.e. the automaton performs like the qfst on the elements of @xmath4 , and uses the second component to simulate the output tape .",
    "we think of @xmath97 being extended in an arbitary way to a unitary map .",
    "one can check that this construction behaves in the desired way .",
    "as is well known , the emptiness problem for the language accepted by a deterministic ( or nondeterministic ) finite automaton is decidable .",
    "since the languages accepted by probabilistic and quantum finite automata with bounded error are regular  @xcite , these problems are decidable , too .    for finite state transducers",
    "the situation is more complicated : in  @xcite it is shown that the emptiness problem for deterministic and nondeterministic fst is decidable .",
    "in contrast we have    [ thm : empty1 ] the emptiness problem for pfst computing a relation with probability @xmath98 is undecidable .",
    "likewise , the emptiness problem for qfst computing a relation with probability @xmath98 is undecidable .",
    "_ proof _ : by reduction to the post correspondence problem : let an instance @xmath99 , @xmath100 of pcp be given ( i.e. @xmath101 ) .",
    "it is to be decided whether there exists a sequence @xmath102 ( @xmath103 ) such that @xmath104 construct the following qfst with input alphabet @xmath105 : it has states @xmath106 , and @xmath107 .",
    "the initial transformation produces a superposition of @xmath108 , each with amplitude @xmath109 .",
    "the unitaries @xmath110 are all identity , but the output function is defined as @xmath111 , for @xmath112 .",
    "the endmarker maps @xmath113 to accepting states .",
    "it is clear that @xmath102 is a solution iff @xmath114 is in the relation computed with probability @xmath98 ( the automaton is easily modified so that it rejects when the input was the empty word , in this way we force @xmath103 ) .    by replacing the unitaries by stochastic matrices ( with entries the squared moduli of the corresponding amplitudes )",
    "the same applies to pfst .    since it is well known that pcp is undecidable",
    ", it follows that there can be no decision procedure for emptiness of the relation computed by the constructed pfst , or qfst , respectively .",
    "undecidable questions for quantum finite automata were noted first for `` @xmath115way '' automata , i.e. ones which move only to the right on their input , but may also keep their position on the tape . in",
    "@xcite it is shown that the equivalence problem for these is undecidable .",
    "the same was proved for 1way2tape quantum finite automata in  @xcite .",
    "[ conj : decidable ] the emptiness problem for probabilistic and quantum fst computing a relation with probability @xmath116 is decidable .",
    "the emptiness problem for probabilistic and quantum fst computing a relation with a single  letter input alphabet , with probability @xmath117 is decidable .    to prove this",
    ", we would like to apply a packing argument in the space of all total states , equipped with the above metric .",
    "however , this fails because of the infinite volume of this space ( for finite automata it is finite , see  @xcite and  @xcite ) . in any case",
    ", a proof must involve the size of the gap between the upper and the lower probability point , as the above theorem shows that it can not possibly work with gap @xmath118 .",
    "still , we can prove :    if the relation @xmath44 is computed by a pfst or a qfst with an isolated cutpoint , then @xmath119 is a recursive set ( so , for each specific output , it is decidable if it is ever produced above the threshold probability ) .",
    "_ proof _ : let the cutpoint be @xmath45 , with isolation radius @xmath120 , and let @xmath121 .",
    "define @xmath122 , the set of prefixes of @xmath123 .",
    "consider the _ output@xmath123truncated total state _",
    ", which is an element @xmath124 it is obtained from @xmath125  with @xmath126  by defining @xmath127 let us denote this transformation by @xmath128",
    ". now observe that in the total state evolution of the qfst probability once put outside @xmath129 never returns , and likewise , amplitude once put outside @xmath130 never returns ( compare proof of theorem  [ thm : qfa - c - qfst ] ) .",
    "formally , this is reflected in the relation @xmath131 hence , if we want to know if @xmath132 for some @xmath133 , we may concentrate on the space of output@xmath123truncated total states , which is finite dimensional , and its transformation functions @xmath134",
    ".    it is easily seen that there is a constant @xmath65 such that for all truncated total states @xmath135 and all @xmath136 @xmath137 hence , for @xmath138 , if @xmath139 then @xmath140 because of the cutpoint isolation we find that either both or none of @xmath141 , @xmath142 is in @xmath44 .",
    "now , because of compactness of the set of truncated total states reachable from the starting state , it follows that there is a constant @xmath143 such that for all @xmath144 of length @xmath145 one can write @xmath146 , with @xmath147 , such that @xmath148 hence @xmath149 and thus , if @xmath133 had produced @xmath123 with probability at least @xmath150 , so had the shorter string @xmath151 .",
    "this means that we only have to consider input strings of length up to @xmath152 to decide whether @xmath153 .",
    "obviously , this reasoning applies to pfst , too .",
    "unlike the situation for finite automata , pfst are strictly more powerful than their deterministic counterparts :    [ thm : mmm ] for arbitrary @xmath51 the relation @xmath154 can be computed by a pfst with probability @xmath155 .",
    "it can not be computed by a dfst .",
    "_ proof _ : the idea is essentially from  @xcite : for a natural number @xmath156 choose initially an alternative @xmath157 , uniformly .",
    "then do the following : repeatedly read @xmath156 @xmath13 s , and output @xmath158 @xmath159 s , until the @xmath14 s start ( remember the remainder modulo @xmath156 ) , then repeatedly read @xmath156 @xmath14 s , and output @xmath160 @xmath159 s .",
    "compare the remainder modulo @xmath156 with what you remembered : if the two are equal , output this number of @xmath159 s and accept , otherwise reject .",
    "it is immediate that on input @xmath161 this machine outputs @xmath162 with certainty .",
    "however , on input @xmath163 each @xmath164 receives probability at most @xmath165 .    that this can not be done deterministically is straightforward : assume that a dfst has produced @xmath166 @xmath159 s after having read @xmath167 @xmath13 s . because of finiteness there are @xmath168 such that after reading @xmath156 @xmath14 s ( while @xmath169 @xmath159 s were output ) the internal state is the same as after reading @xmath170 further @xmath14 s ( while @xmath171 @xmath159 s are output ) .",
    "so , the output for input @xmath172 is @xmath173 , and these pairs are either all accepted or all rejected . hence they are all rejected , contradicting acceptance for @xmath174 .    by observing that the random choice at the beginning can be mimicked quantumly , and that all intermediate computations are in fact reversible , we immediately get    [ thm : mmm : q ] for arbitrary @xmath51 the relation @xmath175 can be computed by a qfst with probability @xmath155 .",
    "note that this puts qfst in contrast to quantum finite automata : in  @xcite it was shown that if a language is recognized with probability strictly exceeding @xmath176 then it is possible to accept it with probability @xmath14 , i.e. reversibly deterministically .",
    "the relation @xmath177 can be computed by a pfst and by a qfst with probability @xmath98 .",
    "_ proof _ : we do this only for qfst ( the pfst is obtained by replacing the unitaries involved by the stochastic matrices obtained by computing the squared moduli of the entries ) : let the input be @xmath178 ( other forms are rejected ) .",
    "with amplitude @xmath109 each go to one of three ` subprograms ' : either copy @xmath133 to the output , or @xmath123 ( and accept ) , or reject without output .",
    "this works by the same reasoning as the proof of theorem  [ thm : empty1 ]",
    "after seeing a few examples one might wonder if everything that can be done by a qfst can be done by a pfst .",
    "that this is not so is shown as follows :    [ thm : mnk : q ] the relation @xmath179 can be computed by a qfst with probability @xmath180 , for arbitrary @xmath51 .",
    "[ thm : mnk ] the relation @xmath181 can not be computed by a pfst with probability bounded away from @xmath69 . in fact , not even with an isolated cutpoint .    _ proof ( of theorem  [ thm : mnk : q ] ) _ : for a natural number @xmath170 construct the following transducer : from @xmath182 go to one of the states @xmath183 , @xmath184 ( @xmath185 , @xmath186 ) , with amplitude @xmath187 for @xmath183 and with amplitude @xmath188 each , for the others .",
    "then proceed as follows ( we assume the form of the input to be @xmath189 , others are rejected ) : for @xmath183 output one @xmath190 for each @xmath13 , and finally accept .",
    "for @xmath184 repeatedly read @xmath170 @xmath13 s and output @xmath158 @xmath190 s ( remember the remainder @xmath191 ) .",
    "then repeatedly read @xmath170 @xmath192 s and output @xmath193 @xmath190 s ( output nothing on the @xmath194 s ) .",
    "compare the remainder with the one remembered , and reject if they are unequal , otherwise output this number of @xmath190 s .",
    "reading @xmath195 perform the following unitary on the subspace spanned by the @xmath184 and duplicte states @xmath196 : @xmath197 accepting are all @xmath198 , rejecting are all @xmath199 .",
    "now assume that the input does not occur as the left member in the relation : this means either @xmath200 and @xmath201 , or @xmath202 . in the first case all the outputs in each of the @xmath192branches of the program are of different length , so",
    "get amplitude @xmath188 .",
    "the final step combines at most two of them , so any output is accepted with probability at most @xmath203 .",
    "the second case is more interesting : in all branches the amplitude is concentrated on the output @xmath204 .",
    "the rotation @xmath32 however is made such that the amplitude on @xmath198 cancels out , so we end up in a rejecting state @xmath199 . in total , any output is accepted with probability at most @xmath205 .    on the other hand , if the input occurs as the left member in the relation , exactly one of the two @xmath192branches of the program concentrates all amplitude on output @xmath204 , whereas the other spreads it to @xmath170 different lengths .",
    "this means that the output @xmath204 is accepted with probability at least @xmath206 , and others are accepted with probability at most @xmath207 each . in total , the output @xmath204 is accepted with probability at least @xmath180 , all others are accepted with probability at most @xmath205 .",
    "_ proof ( of theorem  [ thm : mnk ] ) _ : by contradiction .",
    "suppose @xmath181 is computed by a pfst @xmath43 with isolated cutpoint @xmath45 .",
    "the following construction computes it with probability bounded away from @xmath69 : assuming @xmath208 ( the other case is similar ) , let @xmath209 .",
    "run one of the following subprograms probabilistically : with probability @xmath18 output one @xmath190 for each @xmath13 , and ignore the other symbols ( we may assume that the input has the form @xmath189 ) , with probability @xmath210 run @xmath43 on the input .",
    "it is easily seen that this new pfst computes the same relation with probability bounded away from @xmath69 .",
    "hence , we may assume that @xmath43 computes @xmath44 with probability @xmath211 , from this we shall derive a contradiction .",
    "the state set @xmath4 together with any of the stochastic matrices @xmath212 is a markov chain .",
    "we shall use the classification of states for finite markov chains ( see  @xcite ) : for @xmath213 @xmath4 is partitioned into the set @xmath214 of _ transient _ states ( i.e. the probability to find the process in @xmath214 tends to @xmath13 ) and a number of sets @xmath215 of _ ergodic _ states ( i.e. once in @xmath215 the process does not leave this set , and all states inside can be reached from each other , though maybe only by a number of steps ) .",
    "each @xmath215 is divided further into its _",
    "classes @xmath216 ( @xmath217 ) , @xmath213 mapping @xmath216 into @xmath218 .",
    "by considering sufficiently high powers @xmath219 ( e.g. product of all the periods @xmath220 ) as transition matrices , all these cyclic sets become ergodic , in fact , @xmath219 restricted to each is _",
    "regular_.    using only these powers amounts to concentrating on input of the form @xmath221 , with @xmath222 , which we will do from now on .",
    "relabelling , the ergodic sets of @xmath223 will be denoted @xmath215 .",
    "each has its unique equilibrium distribution , to which every initial one converges : denote it by @xmath224 .",
    "furthermore , there are limit probabilities @xmath225 to find the process @xmath226 in @xmath227 after long time , starting from @xmath182 . likewise , there are limit probabilities @xmath228 to find the process @xmath229 in @xmath230 after long time , starting from @xmath231 , and similarly @xmath232 .",
    "so , by the law of large numbers , for large enough @xmath233 the probability that @xmath226 has passed into @xmath227 after @xmath234 steps , after which @xmath229 has passed into @xmath230 after @xmath235 steps , after which @xmath236 has passed into @xmath237 after @xmath238 steps , is arbitrarily close to @xmath239 .",
    "( note that these probabilities sum to one ) .    as a consequence of the ergodic theorem ( or law of large numbers ) , see  @xcite ,  ch .",
    "4.2 , in each of these events @xmath240 the probable number of @xmath190 s written after the final @xmath195 , is linear in @xmath233 : @xmath241 }                                  |{\\bf 0}^m{\\bf 1}^n{\\bf 2}^k , j)\\rightarrow 1,\\ ] ] as @xmath242 , with @xmath243 and non  negative constants @xmath244 .",
    "since we require that for @xmath245 @xmath246 it is necessary that for a set @xmath247 of events @xmath240 @xmath248 in fact , as for @xmath249 @xmath250 for certain sequences @xmath251 , we even have @xmath252    for @xmath253 it is obvious that the transducer outputs _ no more _ @xmath190 s , once in @xmath237 . but",
    "this implies that for @xmath254 large enough , @xmath255 is arbitrarily close to @xmath256 , hence @xmath257 which implies that @xmath258 contradicting @xmath259 .    in general however , computing with isolated cutpoint",
    "is strictly weaker than with probability bounded away from @xmath69 ( observe that for finite automata , probabilistic and quantum , recognizability with an isolated cutpoint is equivalent to recognizability with probability bounded away from @xmath69 , see theorem  [ thm : qfa - c - qfst ] ) :    [ thm : cutpoint ] the relation @xmath260 can be computed by a pfst and by a qfst with an isolated cutpoint ( in fact , one arbitrarily close to @xmath69 ) , but not with a probability bounded away from @xmath69 .",
    "_ proof _ : first the construction ( again , only for qfst ) : initially branch into two possibilities @xmath261 , each with amplitude @xmath262 .",
    "assume that the input is of the correct form ( otherwise reject ) , and in state @xmath263 output one @xmath264 for each @xmath265 , ignoring the @xmath266 s .",
    "then , if @xmath267 , accept , if @xmath268 , reject .",
    "it is easily seen that @xmath269 is accepted with probability @xmath69 if @xmath270 , and with probability @xmath13 otherwise .    that this can not be done with probability above @xmath69",
    "is clear intuitively : the machine has to produce some output ( because of memory limitations ) , but whether to output @xmath271 or @xmath272 it can not decide until seeing the last symbol .",
    "formally , assume that @xmath273 , with @xmath274 .",
    "if @xmath275=                                    t(4^m|0^m1^n2)\\geq 1/2+\\delta,\\ ] ] necessarily @xmath276 +      t_{\\ddag 0^m1^n}((q_0,\\epsilon),{\\bf 0},0)[q_{\\rm non}\\times 4^{[m-2t , m+2 t ] } ]                                                  \\geq 1/2+\\delta.\\ ] ] but this implies @xmath277 +      t_{\\ddag 0^m1^n}((q_0,\\epsilon),{\\bf 0},0)[q_{\\rm non}\\times 4^{[n-2t , n+2 t ] } ]                                                  \\leq 1/2-\\delta,\\ ] ] hence @xmath278=                                    t(4^n|0^m1^n3)\\leq 1/2-\\delta,\\ ] ] contradicting @xmath279 .    to conclude from these examples , however , that quantum is even better than probabilistic ,",
    "would be premature :    [ thm : lastsymbol ] the relation @xmath280 can not be computed by a qfst with an isolated cutpoint .",
    "( obviously it is computed by a pfst with probability @xmath14 , i.e. a dfst ) .",
    "_ proof _ : the construction of a dfst computing the relation is straightforward . to show that no qfst doing this job exists , we recall from  @xcite that @xmath281 is not recognized by a @xmath14way quantum finite automaton with probability bounded away from @xmath69 , and use theorem  [ thm : qfa - c - qfst ] for this language .",
    "we introduced quantum finite state transducers , and showed some of their unique properties : undecidability of the emptiness problem , as opposed to deterministic finite state transducers and finite automata , and incomparability of their power to that of probabilistic and deterministic finite state transducers .",
    "as open questions we would like to point out primarily our conjecture  [ conj : decidable ] .",
    "another interesting question is whether a relation computed by a qfst with probability _ sufficiently close to @xmath14 _ can be computed by a pfst .",
    "this would be the closest possible analog to the `` @xmath176theorem '' from  @xcite .",
    "research of rf supported by contract ist199911234 ( qaip ) from the european commission , and grant no .",
    "96.0282 from the latvian council of science .",
    "this work was carried out during rf s stay at bielefeld university in october 2000 . at this time aw",
    "was at fakultt fr mathematik , universitt bielefeld , germany , and was supported by sfb 343 `` diskrete strukturen in der mathematik '' of the deutsche forschungsgemeinschaft .",
    "r. bonner , r. freivalds , r. gailis , `` undecidability of 2tape quantum finite automata '' , in proceedings of _ quantum computation and learning .",
    "sundbyholms slott , sweden , 2729 may , 2000 _",
    ", r. bonner and r. freivalds ( eds . ) , malardalen university , 2000 , pp . 93100 ."
  ],
  "abstract_text": [
    "<S> we introduce _ quantum finite state transducers ( qfst ) _ , and study the class of relations which they compute . </S>",
    "<S> it turns out that they share many features with probabilistic finite state transducers , especially regarding undecidability of emptiness ( at least for low probability of success ) . </S>",
    "<S> however , like their ` little brothers ' , the quantum finite automata , the power of qfst is incomparable to that of their probabilistic counterpart . </S>",
    "<S> this we show by discussing a number of characteristic examples . </S>"
  ]
}
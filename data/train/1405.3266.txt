{
  "article_text": [
    "shape optimization problems arise frequently in technological processes , which are modeled in the form of partial differential equations as in @xcite . in many practical circumstances ,",
    "the shape under investigation is parameterized by finitely many parameters , which on the one hand allows the application of standard optimization approaches , but on the other hand limits the space of reachable shapes unnecessarily",
    ". shape calculus , which has been the subject of several monographs @xcite presents a way out of that dilemma .",
    "however , so far it is mainly applied in the form of gradient descent methods , which can be shown to converge .",
    "the major difference between shape optimization and the standard pde constrained optimization framework is the lack of the linear space structure in shape spaces .",
    "if one can not use a linear space structure , then the next best structure is the riemannian manifold structure as discussed for shape spaces in @xcite .",
    "the publication @xcite makes a link between shape calculus and shape manifolds and thus enables the usage of optimization techniques on manifolds in the context of shape optimization .",
    "pde constrained shape optimization however , is confronted with function spaces defined on varying domains .",
    "the current paper presents a vector bundle framework based on the riemannian framework established in @xcite , which enables the discussion of lagrange  newton methods within the shape calculus framework for pde constrained shape optimization .",
    "the paper first presents the novel riemannian vector bundle framework on section [ sec2 ] , discusses this approach for a specific academic example in section [ sec3 ] and presents numerical results in section [ sec4 ] .",
    "the typical set - up of an equality constrained optimization problem is @xmath0 where @xmath1 are linear spaces and @xmath2 sufficiently smooth nonlinear functions @xcite . in some situations",
    "the constraint @xmath3 allows to apply the implicit function theorem in order the define a unique control to state mapping @xmath4 and thus the constrained problem maybe reduced to an unconstrained one of the form @xmath5 however , the constrained formulation is often computationally advantageous , because it allows the usage of pre  existing solver technology for the constraint and it is geared towards an efficient sand ( simultaneous analysis and design ) or one  shot approach based on linear kkt systems .",
    "so far , shape optimization methods based on the shape calculus , have been mainly considered with the reduced black  box framework above via the implicit function theorem  mainly because the set of all admissible shapes is typically not a linear space  unlike the space @xmath6 above .",
    "the publication @xcite has developed a riemannian framework for shape optimization in the reduced unconstrained paradigm , which enables newton  like iteration techniques and convergence results .",
    "this publication aims at generalizing those results to the constrained perspective  in particular for the case that the constraint is of the form of a set of partial differential equations ( pde ) .    within that framework ,",
    "the space @xmath7 for the state variable is a linear ( function ) space depending explicitly on @xmath8 , e.g. , @xmath9 , where @xmath10 is the interior of a shape @xmath11 .",
    "this line of thinking leads to vector bundles of function spaces as discussed in detail in @xcite .",
    "thus , we now consider a riemannian manifold @xmath12 of class @xmath13 ( @xmath14 ) , where @xmath15 is a smooth mapping assigning any point @xmath16 an inner product @xmath17 on the tangential bundle @xmath18 . for each @xmath19 ,",
    "there is given a hilbert space @xmath20 such that the set @xmath21 is the total space of a vector bundle @xmath22 .",
    "in particular , there is a bundle ",
    "projection @xmath23 and for an open covering @xmath24 of @xmath25 a local @xmath13 isomorphism @xmath26 where @xmath27 is a hilbert space .",
    "in particular , we have an isomorphism on each fiber @xmath28 and for @xmath29 , the mapping @xmath30 is a linear isomorphism .",
    "the total space @xmath31 of the vector bundle @xmath22 is by itself a riemannian manifold , where the tangential bundle @xmath32 satisfies @xmath33    in riemannian geometry , tangential vectors are considered as first order differential operators acting on germs of scalar valued functions ( e.g. @xcite ) .",
    "such a differential operator will be notated by @xmath34 , if @xmath35 is a differentiable function and @xmath36 .",
    "we will have to deal with derivatives , where we will always use directional derivatives of scalar valued functions only , but notate them in the usual fashion .",
    "let the derivative of @xmath37 at @xmath38 in direction @xmath39 be denoted by @xmath40 .",
    "then , we define in this setting @xmath41 in particular , we denote @xmath42 where @xmath43 and @xmath44 , if @xmath45 .",
    "we consider now the following constrained optimization problem @xmath46 where @xmath47 is a bilinear form and @xmath48 a linear form defined on the fiber @xmath49 which are @xmath13 with respect to @xmath11 .",
    "the scalar valued function @xmath37 is assumed to be @xmath13 .",
    "intentionally , the weak formulation of the pde is chosen for ease of presentation .",
    "now , it will be necessary to define the lagrangian @xmath50 in order to formulate the adjoint and design equation to the constrained optimization problem ( [ vb - opt1][vb - opt2 ] ) .",
    "[ lagrangian ] we define the lagrangian in the setting above for @xmath51 as @xmath52 where @xmath53 with @xmath54 .",
    "let @xmath55 solves the optimization problem ( [ vb - opt1][vb - opt2 ] ) .",
    "then , the ( adjoint ) variational problem which we get by differentiating @xmath50 with respect to @xmath56 is given by @xmath57 and the design problem which we get by differentiating @xmath50 with respect to @xmath11 is given by @xmath58w=0\\ , , \\",
    "\\forall w\\in t_{\\hat{u}}\\cn\\ ] ] where @xmath59 solves ( [ adjoint ] ) .",
    "if we differentiate @xmath50 with respect to @xmath60 , we get the state equation ( [ vb - opt2 ] ) . these ( kkt ) conditions ( [ vb - opt2][design ] )",
    "could be collected in the following condition : @xmath61    in a vector space setting , the existence of a solution @xmath62 of the ( adjoint ) variational problem ( [ adjoint ] ) is typically guaranteed by so  called constraint qualifications . from this point of view , here , the existence itself can be interpreted as formulation of a constraint qualification .    by using a riemannian metric @xmath15 on @xmath18 and a smoothly varying scalar product @xmath63 on the hilbert space @xmath20 , we can envision @xmath64 as a hilbert space with a canonical scalar product @xmath65 and thus also @xmath66 as riemannian manifold .",
    "this scalar product can be used to apply the riesz representation theorem in order to define the gradient of the lagrangian @xmath67 by the condition @xmath68 now , similar to standard nonlinear programming we can solve the problem of finding @xmath51 with @xmath69 as a means to find solutions to the optimization problem ( [ vb - opt1][vb - opt2 ] ) .",
    "the nonlinear problem ( [ newton - problem ] ) has exactly the form of the root finding problems discussed in @xcite . exploiting the riemannian structure on @xmath70",
    ", we can formulate a newton iteration involving the riemannian hessian which is based on the resulting riemannian connection :    this iteration will be detailed out below .",
    "however , before that , we have to specify the scalar product on the hilbert space involved .",
    "since we will use the exponential map based on the riemannian metric on @xmath71 , we would like to choose a metric that is in the hilbert space parts as simple as possible .",
    "therefore we use the metric defined on the hilbert space @xmath72 and transfer that canonically to the hilbert spaces @xmath20 .",
    "thus , we assume now that in the sequel we only have to deal with one particular chart @xmath73 from the covering @xmath74 and define there @xmath75 now , geodesics in the hilbert space parts of @xmath71 are represented just by straight lines in @xmath27 and the exponential map can be expressed in the form @xmath76 where @xmath77 denotes the exponential map on the manifold @xmath25 .    within iteration ( [ newton ] ) ,",
    "the hessian has to be discussed .",
    "it is based on the riemannian connection @xmath78 on @xmath71 at @xmath19 .",
    "the expression @xmath79 may denote the riemannian covariant derivative on @xmath80 .",
    "since the scalar product in @xmath49 is completely independent from the location @xmath19 , we observe that mixed covariant derivatives of vectors from @xmath49 with respect to tangential vectors in @xmath18 are reduced to simple directional derivatives  which is the case for derivatives in linear spaces anyway .",
    "thus : @xmath81+\\frac{\\partial}{\\partial u}z[h_u]+\\frac{\\partial}{\\partial p}z[h_p]\\\\ \\frac{\\partial}{\\partial y}w[h_y]+\\nabla^{\\cn}_{u}w[h_u]+\\frac{\\partial}{\\partial p}w[h_p]\\\\ \\frac{\\partial}{\\partial y}q[h_y]+\\frac{\\partial}{\\partial u}q[h_u]+\\frac{\\partial}{\\partial p}q[h_p ] \\end{array}\\right ) } } \\end{array}\\ ] ] from the definition of the hessian as @xmath82:=\\nabla_h\\grad{{\\mathscr{l}}}$ ] we conlude the following block structure of the hessian : @xmath83    from a practical point of view , it may be advantageous to solve equation ( [ newton ] ) in a weak formulation as @xmath84 i.e. , in detail , the following equations have to be satisfied for all @xmath85 : @xmath86{\\bar{w}}\\\\ \\label{weak - kkt.3 } h_{31}(z,{\\bar{q}})+h_{32}(w,{\\bar{q}})+h_{33}(q,{\\bar{q}})&=-a_{u}(y,{\\bar{q}})+b_{u}({\\bar{q}})\\end{aligned}\\ ] ] where @xmath87 w\\\\ h_{13}(q,{\\bar{z}})&=a_u({\\bar{z}},q)\\\\ h_{21}(z,{\\bar{w}})&=\\frac{\\partial}{\\partial y}\\frac{\\partial}{\\partial u}\\left(\\left[j(y , u)+a_{u}(y , p)\\right]{\\bar{w}}\\right)z\\\\ h_{22}(w,{\\bar{w}})&=g\\left(\\hess{}^{\\cn}\\left(j(y , u)+a_{u}(y , p)-b_{u}(p)\\right)w,{\\bar{w}}\\right)\\\\ h_{23}(q,{\\bar{w}})&=\\frac{\\partial}{\\partial u}\\left[a_{u}(y , q)-b_{u}(q)\\right]{\\bar{w}}\\\\ h_{31}(z,{\\bar{q}})&=a_{u}(z,{\\bar{q}})\\\\ h_{32}(w,{\\bar{q}})&=\\frac{\\partial}{\\partial u}\\left[a_{u}(y,{\\bar{q}})-b_{u}({\\bar{q}})\\right]w\\\\ h_{33}(q,{\\bar{q}})&=0\\end{aligned}\\ ] ] one should note that the covariant derivative @xmath78 reveals natural symmetry properties and thus obvious symmetries can be observed in the components above not involving second shape derivatives .",
    "a key observation in @xcite is that even the expression @xmath88 is symmetric in the solution of the shape optimization problem .",
    "this motivates a shape  sqp method as outlined below , where away from the solution only expressions in @xmath88 are used which are nonzero at the solution .",
    "its basis is the following observation :    if the term @xmath88 is replaced by an approximation @xmath89 , which omits all terms in @xmath88 , which are zero at the solution and if the reduced hessian of ( [ hessian ] ) built with this approximation is coercive , equation ( [ weak - form ] ) is equivalent to the linear - quadratic problem @xmath90w =- a_u(y,\\bar{q})+b_u(\\bar{q})\\ , , \\",
    "\\forall \\bar{q}\\in h(u)\\end{aligned}\\ ] ] where the adjoint variable to the constraint ( [ qp.2 ] ) is just @xmath91 . in the next sections ,",
    "we also omit terms in @xmath92 and @xmath93 , which are zero , when evaluated at the solution of the optimization problems .",
    "nevertheless , quadratic convergence of the resulting sqp method is to be expected and indeed observed in section [ sec4 ] .",
    "in this section , we apply the theoretical discussion of section [ sec2 ] to a pde constrained shape optimization problem , which is inspired by the standard tracking  type elliptic optimal control problem and motivated by electrical impedance tomography .",
    "it is very close to the model problem of example 2 in @xcite and the inverse interface problem in @xcite .",
    "let the domain @xmath94 split into the two subdomains @xmath95 such that @xmath96 and @xmath97 .",
    "the interface @xmath98 is replaced by @xmath11 and an element of the following manifold @xmath99,{{\\mathbbm{r}}}^2):=\\mbox{emb}^0([0,1],{{\\mathbbm{r}}}^2)/\\mbox{diff}^0([0,1])\\ ] ] i.e. , an element of the set of all equivalence classes of the set of embeddings @xmath100,{{\\mathbbm{r}}}^2):= \\{\\phi\\in c^\\infty([0,1],{{\\mathbbm{r}}}^2)\\ , |\\ , & \\phi(0)=(0.5,0),\\phi(1)=(0.5,1),\\\\   & \\phi \\mbox { injective immersion}\\}\\end{aligned}\\ ] ] where the equivalence relation is defined by the set of all @xmath101 re  parameterizations , i.e. , by the set of all diffeomorphisms @xmath102,{{\\mathbbm{r}}}^2):= \\{\\phi\\colon [ 0,1]\\to[0,1]\\ , |\\ , & \\phi(0)=(0.5,0),\\phi(1)=(0.5,1),\\\\   & \\phi \\mbox { diffeomorphism}\\}.\\end{aligned}\\ ] ] in figure [ fig_omega ] the construction of the domain @xmath103 from the interface @xmath104,{{\\mathbbm{r}}}^2)$ ] is illustrated .",
    "now , we consider @xmath103 dependent on @xmath11 .",
    "therefore , we denote it by @xmath105 .",
    "[ fig_omega ]    interface ( 70,80)@xmath106 ( 10,80)@xmath107 ( 43,13)@xmath108    the manifold @xmath109,{{\\mathbbm{r}}}^2)$ ] is constructed in analogy to the manifold @xmath110 in @xcite as a set of equivalence classes in a set of embeddings with respect to a equivalence relation which is given by a set of diffeomorphisms",
    ". moreover , a particular point on the manifold @xmath109,{{\\mathbbm{r}}}^2)$ ] is represented by a curve @xmath111\\to{{\\mathbbm{r}}}^2\\text { , } \\theta\\mapsto c(\\theta)$ ] .",
    "because of the equivalence relation @xmath112)$ ] , the tangent space is isomorphic to the set of all smooth vector fields along @xmath3 , i.e. , @xmath113,{{\\mathbbm{r}}}^2)\\cong\\{h\\ , |\\,h=\\alpha n , \\alpha\\in c^\\infty \\left([0,1],{{\\mathbbm{r}}}\\right)\\}\\ ] ] where n is the unit outer normal to @xmath107 at @xmath11 .",
    "thus , all considerations of @xcite carry easily over to our manifold @xmath109,{{\\mathbbm{r}}}^2)$ ] .",
    "the pde constrained shape optimization problem is given in strong form by @xmath114 where @xmath115 the perimeter regularization with @xmath116 in the objective ( [ oc1 ] ) is a frequently used means to overcome ill  posedness of the optimization problem ( e.g.  @xcite ) .",
    "let @xmath117 be the unit outer normal to @xmath107 at @xmath11 .",
    "we observe that the unit outer normal to @xmath118 at @xmath11 is equal to @xmath119 , which enables us to use only one normal n for the subsequent discussions .",
    "furthermore , we have interface conditions at the interface @xmath11 .",
    "we formulate explicitly the continuity of the state and of the flux at the boundary @xmath11 as @xmath120 where the jump symbol @xmath121 denotes the discontinuity across the interface @xmath11 and is defined by @xmath122 where @xmath123{.1mm}{4mm}_{\\hspace{.6mm}\\omega_1}$ ] and @xmath124{.1mm}{4mm}_{\\hspace{.6mm}\\omega_2}$ ] .",
    "the boundary value problem ( [ oc2]-[n ] ) is written in weak form as @xmath125 where @xmath126    now , @xmath71 from definition [ lagrangian ] takes the specific form @xmath127,{{\\mathbbm{r}}}^2)\\right\\}.\\ ] ] the metric in the vector space parts is constructed by employing a `` mesh deformation '' .",
    "mesh deformations are often used to deform a computational mesh smoothly in accordance with a deformation of the boundary of the computational domain . here",
    ", we use this in the form of a deformation of the computational domain rather than of the mesh only and assume that there is a bijective @xmath101mapping @xmath128 ^ 2\\to \\omega(u),\\ ] ] e.g. , @xmath129 is the deformation given by the solution of a linear elasticity problem .",
    "thus , we can construct the necessary bijective identification @xmath130    we have to detail the expressions in equation ( [ newton ] ) or respectively ( [ weak - form ] ) .",
    "first , the lagrangian is defined for @xmath51 as @xmath131 where @xmath132 is defined in ( [ oc1 ] ) and @xmath133 are defined in ( [ sweak.1 ] , [ sweak.2 ] ) .",
    "now , we focus on the shape derivative of @xmath50 in direction of a continuous vector field @xmath134 . it is defined by @xmath135:= \\lim\\limits_{t\\to 0^+}\\frac{{{\\mathscr{l}}}(y , u_t , p)-{{\\mathscr{l}}}(y , u , p)}{t}\\ ] ] if for all directions @xmath134 this limit exists and the mapping @xmath136 $ ] is linear and continuous .",
    "the perturbed boundaries @xmath137 in ( [ def_shape_der ] ) are defined by @xmath138 where @xmath139 denotes the perturbation of identity and @xmath140 $ ] with @xmath141 .",
    "one should note that we get perturbed domains @xmath142 given by @xmath143 due to the perturbed boundaries @xmath137 .",
    "the perturbation of @xmath11 or respectively @xmath10 could also be described by the velocity method , i.e. , as the flow @xmath144 determined by the initial value problem @xmath145 instead of the perturbation of identity .",
    "we first consider the objective @xmath37 in ( [ oc1 ] ) without perimeter regularization .",
    "then the shape derivative @xmath146 $ ] can be expressed as an integral over the domain @xmath10 as well as an integral over the interface @xmath11 which is better suited for a finite element implementation as already mentioned for example in ( * ? ? ?",
    "* remark 2.3 , p. 531 ) . an important point to note here",
    "is that the shape derivative of our @xmath50 evaluated in its saddle  point is equal to the one of @xmath37 due to the theorem of correa and seeger ( * ? ? ?",
    "* theorem 2.1 ) .",
    "such a saddle  point is given by @xmath147 which leads to the adjoint equation @xmath148 and to the state equation @xmath149 like in @xcite we first deduce a representation of the shape derivative expressed as a domain integral which will later allow us to calculate the boundary expression of the shape derivative by means of integration by parts on the interface @xmath11 .",
    "one should note however , that by the hadamard structure theorem ( * ? ? ? * theorem 2.27 ) only the normal part of the continuous vector field has an impact on its value . applying the following common rule for differentiating domain integrals @xmath150{.1mm}{9mm}_{\\hspace{1mm}t=0}=\\int_{\\omega}\\left(d_m\\eta+\\mathrm{div}(v)\\eta\\right)\\ ] ] which was proved in (",
    "* lemma 3.3 ) yields @xmath151 & = \\lim\\limits_{t\\to 0^+}\\frac{{{\\mathscr{l}}}(y , u_t , p)-{{\\mathscr{l}}}(y , u , p)}{t}=\\frac{d^+}{dt}{{\\mathscr{l}}}(y , u_t , p)\\,\\rule[-3mm]{.1mm}{6mm}_{\\hspace{.5mm}t=0}\\\\ & = \\int_{\\omega(u)}d_m\\left(\\frac{1}{2}(y-\\overline{y})^2\\right)+d_m\\left(\\nabla y^t\\nabla p\\right)-d_m(fp)\\\\ & \\hspace*{13mm}+\\mathrm{div}(v)\\left(\\frac{1}{2}(y-\\overline{y})^2+\\nabla y^t\\nabla p - fp\\right)\\hspace{.7mm}dx\\\\ & \\hspace*{4mm}-\\int_u d_m\\left ( \\left\\llbracket \\frac{\\partial",
    "y}{\\partial n } p\\right\\rrbracket\\right ) + \\mathrm{div}_u(v)\\left\\llbracket \\frac{\\partial",
    "y}{\\partial n } p\\right\\rrbracket\\hspace{.7mm}ds \\end{split}\\ ] ] where @xmath152 denotes the material derivative with respect to @xmath153 which is defined by @xmath154{.1mm}{6mm}_{\\hspace{1mm}t=0}\\ ] ] for a generic function @xmath155 . for the material derivative the product rule holds .",
    "moreover , the following equality was proved in @xcite @xmath156 combining ( [ shape_der_1 ] ) , the product rule and ( [ material_grad ] ) we obtain @xmath157 & = \\int_{\\omega(u)}(y-\\overline{y})d_m\\left(y\\right)+\\nabla\\hspace{-.5 mm } \\left(d_m(y)\\right)^t\\nabla p+\\nabla y^t\\nabla\\hspace{-.5 mm } \\left(d_m\\left(p\\right)\\right)\\\\ & \\hspace*{13mm}-\\nabla y^t \\left(\\nabla v + \\nabla v^t\\right)\\nabla p - d_m(f)p - fd_m(p)\\\\ & \\hspace*{13mm}+\\mathrm{div}(v)\\left(\\frac{1}{2}(y-\\overline{y})^2+\\nabla y^t\\nabla p - fp\\right)\\hspace{.7mm}dx\\\\ & \\hspace*{4mm}-\\int_u   \\left\\llbracket d_m\\left(\\frac{\\partial y}{\\partial n}\\right ) p+\\frac{\\partial y}{\\partial n}d_m(p)\\right\\rrbracket + \\mathrm{div}_u(v)\\left\\llbracket \\frac{\\partial y}{\\partial",
    "n } p\\right\\rrbracket\\hspace{.7mm}ds . \\end{split}\\ ] ] from this we get @xmath158 & = \\int_{\\omega(u)}\\left((y-\\overline{y})-\\triangle p\\right)d_m\\left(y\\right)+\\left(-\\triangle y - f\\right)d_m\\left(p\\right)\\\\ & \\hspace*{13mm}-\\nabla y^t \\left(\\nabla v + \\nabla v^t\\right)\\nabla p - d_m(f)p\\\\ & \\hspace*{13mm}+\\mathrm{div}(v)\\left(\\frac{1}{2}(y-\\overline{y})^2+\\nabla y^t\\nabla p - fp\\right)\\hspace{.7mm}dx\\\\ & \\hspace*{4mm}+\\int_u   \\left\\llbracket\\frac{\\partial p}{\\partial n}d_m(y ) -d_m\\left(\\frac{\\partial y}{\\partial n}\\right ) p\\right\\rrbracket + \\mathrm{div}_u(v)\\left\\llbracket \\frac{\\partial y}{\\partial n } p\\right\\rrbracket\\hspace{.7mm}ds . \\end{split}\\ ] ] to deal with the term @xmath159 , we note that the shape derivative of a generic function @xmath155 with respect to the vector field @xmath134 is given by @xmath160:=d_mj - v^tj.\\ ] ] therefore @xmath159 is equal to @xmath161 in the both subdomains @xmath107 , @xmath118 . due to",
    "the continuity of the state and of the flux ( [ n ] ) their material derivative is continuous .",
    "thus , we get @xmath162 that @xmath163 follows from ( [ n ] ) , ( [ adjoint4 ] ) and the identity @xmath164 which implies @xmath165 by combining ( [ adjoint1 ] ) , ( [ designe ] ) and ( [ shape_der_3][pbe ] ) , we obtain @xmath166=\\int_{\\omega(u)}&-\\nabla y^t \\left(\\nabla v + \\nabla v^t\\right)\\nabla p - pv^t\\nabla f\\\\ & + \\mathrm{div}(v)\\left(\\frac{1}{2}(y-\\overline{y})^2+\\nabla y^t\\nabla p - fp\\right)\\hspace{.7mm}dx \\end{split } } \\ ] ] i.e. , the shape derivative of @xmath50 expressed as domain integral which is equal to the one of @xmath37 due to the theorem of correa and seeger .",
    "now , we convert this domain integral into a boundary integral as mentioned above .",
    "integration by parts in ( [ boundary_expression ] ) yields @xmath167 since the outer boundary @xmath168 is not variable , we can choose the deformation vector field @xmath134 equals zero in small neighbourhoods of @xmath169 .",
    "therefore , the outer integral in ( [ int_by_parts1 ] ) disappears .",
    "combining ( [ boundary_expression ] ) , ( [ int_by_parts1 ] ) and the vector calculus identity @xmath170 which was proved in @xcite gives @xmath171=&\\int_{\\omega(u)}-\\nabla p^t\\nabla\\left(v^t\\nabla y\\right)-\\nabla y^t \\nabla\\left(v^t\\nabla p\\right)\\\\ & \\hspace*{9mm}-(y-\\overline{y})v^t\\nabla y+fv^t\\nabla p \\hspace{.7mm}dx\\\\ & + \\int_{u } \\left\\llbracket\\left(\\frac{1}{2}(y-\\overline{y})^2+\\nabla",
    "y^t\\nabla p - fp\\right)\\left < v , n\\right>\\right\\rrbracket ds . \\label{sg1 } \\end{split}\\ ] ] then , applying integration by parts in ( [ sg1 ] ) we get @xmath172 and analogously @xmath173 like in ( [ int_by_parts1 ] ) the outer integral in ( [ int_by_parts2 ] ) as well as in ( [ int_by_parts3 ] ) vanishes due to the fixed outer boundary @xmath169 .",
    "thus , it follows that @xmath171=&\\int_{\\omega(u)}v^t\\nabla p\\left(\\triangle y+f\\right)+v^t\\nabla y\\left(\\triangle p -(y-\\overline{y})\\right)\\hspace{.7mm}dx\\\\ & + \\int_u \\left\\llbracket\\left(\\frac{1}{2}(y-\\overline{y})^2+\\nabla y^t\\nabla p - fp\\right)\\left < v , n\\right>\\right\\rrbracket\\\\ & \\hspace*{9mm}-\\left\\llbracket \\frac{\\partial y}{\\partial n}v^t\\nabla p \\hspace{.3mm}\\right\\rrbracket-\\left\\llbracket \\frac{\\partial p}{\\partial n}v^t\\nabla y \\hspace{.3mm}\\right\\rrbracket\\hspace{.7mm}ds.\\label{sg2 } \\end{split}\\ ] ] the domain integral in ( [ sg2 ] ) vanishes due to ( [ adjoint1 ] ) and ( [ designe ] ) .",
    "moreover , the term @xmath174 disappears because of ( [ n ] ) and the term @xmath175 because of the continuity of @xmath176 and @xmath177 .",
    "that @xmath178 follows from ( [ n ] ) , ( [ adjoint3 ] ) and ( [ bracket0 ] ) .",
    "thus , we obtain the shape derivative of @xmath50 expressed as interface integral : @xmath179=-\\int_u \\left\\llbracket f\\right\\rrbracket p\\left < v , n\\right > ds } \\ ] ] now , we consider the objective @xmath37 in ( [ oc1 ] ) with perimeter regularization . combining ( [ shape_der_interface ] ) with proposition 5.1 in @xcite we get @xmath180=\\int_u \\left(-\\left\\llbracket f\\right\\rrbracket p+\\mu\\kappa\\right)\\left < v , n\\right > ds } \\ ] ] where @xmath181 denotes the curvature corresponding to the normal @xmath117 .",
    "note that ( [ shape_der_interface ] ) is equal to @xmath182 $ ] without perimeter regularization and ( [ shape_derivative_interface_reg ] ) is equal to @xmath182 $ ] with perimeter regularization due to the theorem of correa and seeger as mentioned above .",
    "we focus now on the weak formulation ( [ weak - kkt.1]-[weak - kkt.3 ] ) and observe the following for the right hand sides in the case of ( [ oc1][oc3 ] ) : @xmath183{\\bar{w}}=&\\int_u \\left(\\left\\llbracket f\\right\\rrbracket p-\\mu\\kappa\\right)\\left<{\\bar{w}},n\\right > ds\\label{no2}\\\\ -a_{u}(y,{\\bar{q}})+b_{u}({\\bar{q } } ) = & \\int_{\\omega(u)}-\\nabla y^t\\nabla { \\bar{q}}+f{\\bar{q}}\\hspace{.7mm}dx\\label{diri.state}\\end{aligned}\\ ] ] these expressions are set to zero , in order to define the necessary conditions of optimality .",
    "now , we discuss more details about the hessian operators in the left hand sides of ( [ weak - kkt.1][weak - kkt.3 ] ) .",
    "we first consider them without the term @xmath184 which requires special care .",
    "these are at the solution @xmath185 of the optimization problem ( [ oc1][oc3 ] ) for all @xmath85 as follows : @xmath186 w=0\\\\ h_{13}(q,{\\bar{z}})&=a_u({\\bar{z}},q)=\\int_{\\omega(u)}\\nabla { \\bar{z}}^t \\nabla q dx\\\\ h_{21}(z,{\\bar{w}})&=\\frac{\\partial}{\\partial y}\\frac{\\partial}{\\partial u}(\\left[j(y , u)+a_{u}(y , p)\\right]{\\bar{w}})z=0\\\\ h_{23}(q,{\\bar{w}})&=\\frac{\\partial}{\\partial u}\\left[a_{u}(y , q)-b_{u}(q)\\right]{\\bar{w}}=-\\int_u\\left\\llbracket f\\right\\rrbracket q\\left<{\\bar{w}},n\\right > ds\\\\",
    "h_{31}(z,{\\bar{q}})&=a_{u}(z,{\\bar{q}})=\\int_{\\omega(u)}\\nabla z^t \\nabla { \\bar{q}}dx\\\\ h_{32}(w,{\\bar{q}})&=\\frac{\\partial}{\\partial u}\\left[a_{u}(y,{\\bar{q}})-b_{u}({\\bar{q}})\\right]w=-\\int_u\\left\\llbracket f\\right\\rrbracket { \\bar{q}}\\left < w , n\\right > ds\\\\ h_{33}(q,{\\bar{q}})&=0\\end{aligned}\\ ] ] we compute now the term @xmath184",
    ". it will be evaluated at the solution of the optimization problem which means that it consists only of the second shape derivative . in section [ sec4 ] this solution will be a straight line connection of the points @xmath187 and @xmath188 , i.e. , the curvature is equal to zero . combining proposition 5.1 in @xcite with the following rule for differentiating boundary integrals @xmath189{.1mm}{9mm}_{\\hspace{1mm}t=0}=\\int_{\\gamma } \\left(d\\eta[v]+\\left(\\frac{\\partial\\eta}{\\partial n}+\\eta\\kappa\\right)\\left < v , n\\right>\\right)\\ ] ] which was proved in @xcite yields @xmath190\\left < w , n\\right>-\\left\\llbracket f\\right\\rrbracket\\left(\\kappa p+\\frac{\\partial p}{\\partial n}\\right)\\left<{\\bar{w}},n\\right>\\left",
    "< w , n\\right>\\\\ & \\hspace*{8mm}+\\mu\\frac{\\partial w}{\\partial \\tau}\\frac{\\partial \\bar{w}}{\\partial \\tau}\\left<{\\bar{w}},n\\right>\\left < w , n\\right > ds \\end{split}\\ ] ] where @xmath191 denotes the derivative tangential to @xmath11 .",
    "we have to evaluate the shape derivative @xmath192 $ ] in ( [ h22_1 ] ) .",
    "we observe in our special case @xmath193 because of the necessary optimality condition ( [ no2 ] ) .",
    "thus , it holds that @xmath194=-{\\bar{w}}^t\\nabla p=-{\\bar{w}}^t\\frac{\\partial p}{\\partial n}n\\quad\\text{on } u \\ ] ] due to ( [ shape_material_der ] ) . applying the product rule for shape derivatives yields @xmath195 & = \\left\\llbracket df[{\\bar{w}}]\\hspace{.7mm}p\\right\\rrbracket + \\left\\llbracket f dp[{\\bar{w}}]\\right\\rrbracket\\stackrel{(\\ref{n})}=\\left\\llbracket df[{\\bar{w}}]\\right\\rrbracket p+\\left\\llbracket f \\right\\rrbracket dp[{\\bar{w}}]\\\\ & \\hspace*{-1.8mm}\\underset{(\\ref{dp})}{\\stackrel{(\\ref{p0})}=}-\\left\\llbracket f \\right\\rrbracket \\frac{\\partial p}{\\partial n}\\left<{\\bar{w}},n\\right>\\quad\\text{on } u. \\end{split}\\ ] ] thus , the hessian operator @xmath184 reduces to @xmath196    by using the expressions above , we can formulate the qp ( [ qp.1 ] , [ qp.2 ] ) at the solution in the following form :    @xmath197    where the objective function @xmath71 is given by @xmath198 this qp in weak formulation can be rewritten in the more intelligible strong form of an optimal control problem :    @xmath199    the adjoint problem to this optimal control problem is the boundary value problem : @xmath200 the resulting design equation for the optimal control problem ( [ qps.1][qps.6 ] ) is @xmath201",
    "in this section , we use the qp ( [ qp.p1 ] , [ qp.p2 ] ) away from the optimal solution as a means to determine the step in the shape normal direction and thus create an iterative solution technique very similar to sqp techniques known from linear spaces .",
    "we solve the optimal control problem ( [ qps.1][qps.6 ] ) by employing a cg ",
    "iteration for the reduced problem ( [ oc.design ] ) .",
    "i.e. , we iterate over the variable @xmath202 and each time the cg  iteration needs a residual of equation ( [ oc.design ] ) from @xmath203 , we compute the state variable @xmath204 from ( [ qps.2][qps.6 ] ) and then the adjoint variable @xmath205 from ( [ ocad.1 ] , [ ocad.2 ] ) , which enables the evaluation of the residual @xmath206 the particular values for the parameters are chosen as @xmath207 , @xmath208 and @xmath209 .",
    "the data @xmath210 are generated from a solution of the state equation ( [ oc2 ] , [ oc2 ] ) with @xmath11 being the straight line connection of the points @xmath187 and @xmath188 .",
    "the starting point of our iterations is described by a b  spline defined by the two control points @xmath211 and @xmath212 .",
    "we build a coarse unstructured tetrahedral grid @xmath213 with roughly 6000 triangles as shown in the leftmost picture of figure [ fig - iterations ] .",
    "we also perform computations on uniformly refined grids @xmath214 with roughly 24000 and 98000 triangles . in figure [ fig - iterations ] are also shown the next two iterations on the coarsest grid , where table [ fig - iterations ] gives the distances of each shape to the solution approximated by @xmath215 where @xmath216 denotes the solution shape and @xmath217 is the first unit vector .",
    "similar to @xcite , the retraction chosen for the shape is just the addition of the @xmath218 to the current shape . in each iteration , the volume mesh is deformed according to the elasticity equation .",
    "table @xcite demonstrates that indeed quadratic convergence can be observed on the finest mesh , but also that the mesh resolution has a strong influence on the convergence properties revealed .",
    "the major advantage of the newton method over a standard shape calculus steepest method based on the ( reduced ) shape derivative @xmath219=-\\int_u \\left(\\left\\llbracket f\\right\\rrbracket p-\\mu\\kappa\\right)\\langle v , n\\rangle ds\\ ] ] is the natural scaling of the step , which is just 1 near to the solution .",
    "when first experimenting with a steepest descent method , we found by trial and error , that one needs a scaling around 10 000 in order to obtain sufficient progress .",
    "[ fig - iterations ]    ( 12,4 ) ( 0,0),title=\"fig : \" ] ( 4.4,0),title=\"fig : \" ] ( 8.8,0),title=\"fig : \" ]    .performance of shape lagrange ",
    "newton algorithms : distances @xmath220 from the optimal solution on meshes with varying refinement .",
    "quadratic convergence on the finest grid can be observed .",
    "[ cols=\">,^,^,^\",options=\"header \" , ]",
    "this paper presents a generalization of the riemannian shape calculus framework in @xcite to lagrange  newton approaches for pde constrained shape optimization problems .",
    "it is based on the idea that riemannian shape hessians do not differ from classical shape hessians in the solution of a shape optimization problem and that newton methods still converge locally quadratically , if hessian terms are neglected which are zero at the solution anyway .",
    "it is shown that this approach is viable and leads to computational methods with superior convergence properties , when compared to only linearly converging standard steepest descent methods .",
    "nevertheless , several issues have to be addressed in future investigations , like :    * more refined retractions have to be developed for large shape deformations . *",
    "as observed during the computations , the shape deformation sometimes leads to shapes , where normal vectors can no longer be reliably evaluated .",
    "provisions for those cases have be developed * full lagrange  newton methods may turn out being not very computationally efficient . however , this paper lays the foundation for the construction of appropriate preconditoners for the reduced optimization problem in many practical cases . * the riemannian shape space properties including quadratic convergence of the lagrange ",
    "newton approach seem to materialize only on very fine grids .",
    "a logical next development is then to use locally adapted meshes near the shape front to be optimized .",
    "this research has been partly funded by the dfg within the collaborative project exasolvers as part of the dfg priority program spp 1648 sppexa .",
    "furthermore , the authors are very grateful to an unknown referee for insightful comments , which helped significantly to improve the paper from an earlier version .            e.  arian and v.  n.  vatsa . a preconditioning method for shape optimization governed by the euler equations .",
    "technical report 9814 , institute for computer applications in science and engineering ( icase ) , 1998 .",
    "m. berggren .",
    "a unified discrete  continuous sensitivity analysis method for shape optimization . in w. fitzgibbon et al . ,",
    "editor , _ applied and numerical partial differential equations _ ,",
    "volume 15 of _ computational methods in applied sciences _ ,",
    "pages 2539 .",
    "springer , 2010 .",
    "n.  gauger , c.  ilic , s.  schmidt , and v.  h.  schulz .",
    "non  parametric aerodynamic shape optimization . in g.",
    "leugering , s.  engell , a.  griewank , m.  hinzea , r.  rannacher , v.  h.  schulz , m.  ulbrich , and s.  ulbrich , editors , _ constrained optimization and optimal control for partial differential equations _ ,",
    "volume 160 , pages 289300 .",
    "birkhuser , basel , boston , berlin , 2012 ."
  ],
  "abstract_text": [
    "<S> the novel riemannian view on shape optimization developed in @xcite is extended to a lagrange  newton approach for pde constrained shape optimization problems . </S>",
    "<S> the extension is based on optimization on riemannian vector space bundles and exemplified for a simple numerical example . </S>"
  ]
}
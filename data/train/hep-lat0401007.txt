{
  "article_text": [
    "the usage of smeared or fat links improves flavor symmetry for staggered fermions  @xcite .",
    "since the smearing contains a projection onto @xmath0 , the hypercubic smeared link ( hyp ) action is not bilinear in the original thin link variables .",
    "therefore , the explicit form of the fermion force is rather complicated making the hybrid monte - carlo ( hmc ) and other molecular dynamics based algorithms with the hyp action practically unusable .",
    "an update method based on a stochastic estimator @xcite can avoid this problem .",
    "the algorithm using improved stochastic estimators @xcite requires polynomial approximation of functions of type @xmath1 , where @xmath2 and @xmath3 is a low order polynomial .",
    "when the calculations are made at the small physical quark masses the order of these polynomials have to be in the range of the thousands .",
    "we introduce a numerical method to generate these high order polynomials and investigate the stability , optimal weight function and optimal type of discretization for the algorithm .",
    "in contrast to exact methods our procedure is very fast , stable up to thousands of orders and can be applied practically to functions of any type .",
    "the rest of the paper is organized as follows . in the next section",
    "we summerize the properties of the hyp action . in sect .",
    "[ sec : poly ] we describe the process of generating the approximating polynomials .",
    "we conclude in sect .",
    "[ sec : conc ] .",
    "the construction of the hypercubic smeared link ( hyp ) action goes as follows @xcite .",
    "first , the original thin links @xmath4 are used to construct the set of decorated fat links , @xmath5 with a modified projected ape blocking step @xmath6 .",
    "\\label{eqn : step1}\\ ] ] the indices @xmath7 and @xmath8 indicate that the fat link @xmath5 in direction @xmath9 is not decorated with staples extending in directions @xmath7 and @xmath8 .",
    "the projection to @xmath0 can be defined in two different ways .",
    "@xmath10 is the _",
    "deterministic _ projection of @xmath11 , @xmath12 whereas the _ probabilistic _ projection @xmath13 of @xmath11 is chosen according to the probability distribution @xmath14 .",
    "\\label{eqn : pprojsu3}\\ ] ] in the second step the decorated links @xmath15 are constructed using the fat links @xmath5 obtained in the first step as @xmath16 .",
    "\\label{eqn : step2}\\ ] ] in the final step the blocked links @xmath17 are constructed as @xmath18 .",
    "\\label{eqn : step3}\\ ] ] the smeared link obtained using the above construction containes thin links only from hypercubes attached to the original thin link .",
    "the hyp action is of the form @xmath19 where @xmath20 is the plaquette gauge action @xmath21 depending on the thin links @xmath22 and @xmath23 is the gauge action depending on the smeared links @xmath24 @xcite .",
    "the main role of @xmath23 is to increase the acceptance rate in the accept - reject step .",
    "the simplest choice is the smeared plaquette @xmath25 , where @xmath26 can be tuned to maximize the acceptance rate .",
    "the fermions are coupled to the smeared links , thus , the staggered fermionic matrix is of the form @xmath27 the matrix @xmath28 is block diagonal on even and odd lattice sites .",
    "let @xmath29 denote the even block @xmath30 then the fermionic action @xmath31 describing @xmath32 flavors is of the form @xmath33    since the dependence of the smeared links @xmath24 on the thin links @xmath22 is nonlinear due to the projections to @xmath0 , the explicit form of the fermionic force , which is needed for molecular dynamics simulations , is very complicated .",
    "this fact makes the hmc and r algorithms virtually unusable . a two step algorithm ,",
    "the partial global stochastic metropolis update is used instead . in the first step a subset of the thin links @xmath22 is updated such that the detailed balance condition with the thin link gauge action @xmath20 is satisfied .",
    "this can be done using either heatbath or overrelaxation . in the second step",
    "the new smeared links @xmath34 are computed and the newly obtained configuration is accepted with the probability @xmath35 \\frac{\\det \\omega(v')}{\\det \\omega(v ) } \\right\\}.\\ ] ] instead of calculating the ratio of the determinants a stochastic estimator is used . the ratio can be expressed as an expectation value @xmath36 \\xi\\right)\\right>_{\\xi^*\\xi}.\\end{aligned}\\ ] ] only one random source @xmath37 is used on every gauge configuration pair @xmath22 and @xmath38 to estimate the determinant ratio .",
    "the expectation value is taken together with the configuration ensemble average .",
    "then the stochastic acceptance probability becomes @xmath39 \\xi\\right)\\right\\}.\\ ] ]    if the stochastic estimator has large fluctuations then the acceptance rate can be very small even if the old and new fermionic determinants are almost the same .",
    "the standard deviation of the stochastic estimation @xmath40 \\xi \\right ) \\right>_{\\xi^*\\xi}\\ ] ] can be written in the form @xmath41 \\xi\\right ) \\right>_{\\xi^*\\xi } - \\left < \\exp\\left(-\\xi^*\\left[a-1\\right ] \\xi\\right ) \\right>_{\\xi^*\\xi}^2 \\nonumber \\\\ & = & \\det\\left(2a-1\\right)^{-1}-\\det(a)^{-2 } , \\label{eqn : std}\\end{aligned}\\ ] ] where @xmath42 , @xmath43 and @xmath44 .",
    "as suggested in @xcite , instead of @xmath29 and @xmath45 we introduce the reduced matrices @xmath46 where @xmath47 is a polynomial chosen such that the function @xmath48 is close to 1 in the interval where the eigenvalues of the matrix @xmath29 can be found .",
    "then the ratio of the determinants can be rewritten as @xmath49\\right ) \\nonumber \\\\ & = & \\left < \\exp \\left ( -\\xi^*\\left[\\omega_r'^{-1}\\omega_r - 1\\right ] \\xi \\right ) \\right>_{\\xi^*\\xi } \\exp\\left ( 2 { \\mathop \\mathrm{tr}}\\left[f(\\omega')-f(\\omega)\\right]\\right).\\end{aligned}\\ ] ] since the second factor can be evaluated exactly only the first factor has to be evaluated stochastically . due to the special choice of @xmath47 , @xmath50 , so the fluctuations of the stochastic estimator are minimized , improving the acceptance rate .    equation ( [ eqn : std ] ) is valid for the standard deviation of the stochastic estimator only if the matrix @xmath51 is positive definite , that is , all eigenvalues of @xmath11 are greater than @xmath52",
    ". this is , however , very unlikely if the updating method changes a large number of links of the configuration . in order to avoid this problem",
    "the reduced fermionic determinant ratio can be written in the form @xmath53 \\xi_j\\right ) \\right>_{\\xi_j^*\\xi_j},\\ ] ] where @xmath54 is an arbitrary positive integer and @xmath55 are @xmath54 independent random vectors .",
    "then the standard deviation becomes @xmath56 this is valid only if all the eigenvalues of @xmath57 are greater than @xmath58 .",
    "if @xmath54 is chosen large enough this condition can always be fulfilled .",
    "since the determinant of a matrix product is independent of the order of the matrices , the @xmath54th root of @xmath57 can be written as @xmath59 the factors can be approximated by polynomials as @xmath60 here @xmath61 and @xmath62 are @xmath63 and @xmath64 order polynomials of the fermionic matrices @xmath29 and @xmath45 , respectively .",
    "then all the terms of the exponent of ( [ eqn : detar ] ) can be written in the form @xmath65\\xi = \\xi^ * p_l^{(2n)}(\\omega ' ) q_k^{(n)}(\\omega ) p_l^{(2n)}(\\omega ' ) \\xi - \\xi^ * p_l^{(2n)}(\\omega ' ) q_k^{(n)}(\\omega ' ) p_l^{(2n)}(\\omega')\\xi.\\ ] ] the polynomial orders @xmath63 and @xmath64 required for a reasonable approximation depend on the used quark mass .",
    "the polynomials should be optimized for the interval spanned by the eigenvalues of @xmath29 .",
    "the smallest possible eigenvalue is @xmath66 , so if smaller and smaller quark masses are used then higher order polynomials are required .",
    "the polynomials have to be generated only once before each simulation using the method described in the following section .",
    "our aim is to approximate the function @xmath47 in the interval @xmath67 $ ] using an @xmath54th order polynomial @xmath68 .",
    "we choose a weight function @xmath69 and define the deviation of @xmath68 from @xmath47 using the distance in the hilbert space @xmath70\\right)}}$ ] as @xmath71 here @xmath72 and @xmath73 denote the inner product @xmath74 and the norm @xmath75 in the hilbert space @xmath70\\right)}}$ ] , respectively . for the best choice of @xmath69 see section [ sec : stab ] . in order to minimize @xmath76",
    "we take a basis of orthogonal polynomials @xmath77 , @xmath78 where @xmath77 ( @xmath79 ) is a @xmath9th order polynomial with norm @xmath80 this basis of polynomials is generated using the gram - schmidt orthogonalization process from the simple polynomials @xmath81 , @xmath82 , @xmath83 ,  : @xmath84 using this basis @xmath47 can be written as @xmath85 where @xmath86 the @xmath54th order polynomial @xmath87 for which @xmath76 is minimal can be obtained by taking only the first @xmath54 terms of the sum in ( [ eqn : f= ] ) .",
    "@xmath88    in order to obtain the polynomials @xmath77 a second order recursion formula @xcite can be used instead of the numerically unstable gram - schmidt orthogonalization process ( [ eqn : gram - schmidt ] ) .",
    "the recursion goes as follows .",
    "the first two polynomials are obtained identically according to ( [ eqn : gram - schmidt ] ) @xmath89 let @xmath90 and @xmath91 then the rest of the polynomials can be obtained as @xmath92      one proper method of proceeding with the algorithm is to calculate the integrals ( [ eqn : q1 ] ) , ( [ eqn : b ] ) and ( [ eqn : p ] ) exactly .",
    "this method is followed in ref .",
    "these calculations require a precision of several hundreds or thousands of digits which can be carried out using multiprecision arithmetics libraries .",
    "since the integrals are carried out exactly the indefinite integrals of the integrands have to be known . as a consequence only special types of functions @xmath47 can be approximated and the weight function @xmath93 also has to be carefully chosen .",
    "the method we use is to calculate the integrals numerically .",
    "the interval @xmath67 $ ] is divided into n subintervals ( n+1 discretization points ) logarithmically ( see section [ sec : stab ] ) . since",
    "all the integrals are calculated using simpson s rule , n has to be even .",
    "the values of the function @xmath47 , polynomials @xmath77 and the weight function @xmath94 are calculated and stored only at the discretization points .",
    "first @xmath95 and @xmath96 are determined with the integrals in ( [ eqn : phi01 ] ) carried out numerically . in the @xmath9th step @xmath97 and @xmath98",
    "are calculated first using ( [ eqn : q1 ] ) and ( [ eqn : p ] ) , then @xmath99 and @xmath100 using ( [ eqn : betagamma ] )",
    ". then @xmath101 is determined at each discretization point from @xmath77 and @xmath102 using ( [ eqn : rek ] )",
    ". then @xmath103 and @xmath104 are calculated using ( [ eqn : b ] ) .",
    "finally , @xmath105 is added to the actual value of @xmath87 .",
    "this method has three major advantages .",
    "firstly , we have a second order recursion formula ( [ eqn : rek ] ) .",
    "therefore , at each step only the last two orthogonal polynomials have to be stored in memory .",
    "that is , the memory required for the calculations depends only on the number of discretization points @xmath106 but is independent of the order of approximation .",
    "secondly , no multiprecision arithmetics is needed .",
    "all the calculations can be carried out using the built in 10 byte floating point type . finally , since the integrals are evaluated numerically , the indefinite integrals of the integrands are not needed .",
    "therefore , there are no restrictions on the form of the function @xmath47 and the weight function @xmath93 .      in order to describe the numerical stability of the recursion formula ( [ eqn : rek ] ) and to find the optimal weight function @xmath93 and the optimal type of discretization we need to refer to @xmath107\\right)}}$ ] , the hilbert space of @xmath67 \\to \\mathbb{c}\\,$ ] square - integrable functions with the inner product @xmath108 . if the weight function @xmath93 is such that @xmath109,\\ ] ] then the equivalence classes in @xmath107\\right)}}$ ] consist of the same functions as in @xmath70\\right)}}$ ] and @xmath107\\right)}}$ ] consist of the same equivalence classes as @xmath70\\right)}}$ ] .",
    "that is , @xmath70\\right)}}$ ] and @xmath107\\right)}}$ ] are identical as linear spaces .",
    "both @xmath110 and @xmath111 form orthonormal bases in @xmath107\\right)}}$ ] , where @xmath112 , \\quad\\quad n=\\dots,-2,-1,0,1,2,\\dots\\ ] ] and @xmath113 , \\quad\\quad n=1,2,3,\\dots\\nonumber \\\\ c_n(x)&=&\\sqrt{\\frac{2}{b - a } } \\cos\\left [ \\frac{2\\pi n}{b - a } \\left ( x- \\frac{a+b}{2 } \\right)\\right ] , \\quad\\quad n=1,2,3,\\dots \\\\ c_0(x)&=&\\frac{1}{\\sqrt{b - a}}=e_0(x ) .",
    "\\nonumber\\end{aligned}\\ ] ]    using these basis vectors the linear map @xmath114 can be defined , which is bounded and self - adjoint in @xmath107\\right)}}$ ] .",
    "let @xmath115 and @xmath116 then @xmath117 if @xmath47 is real , then @xmath118 that is , @xmath119 and @xmath120 can be naturally identified as the _ amplitude _ and _ phase _ of the real function @xmath47 at point @xmath121 , respectively .",
    "if @xmath122 is differentiable then we can define @xmath123 if @xmath47 is a polynomial without multiple zeros ( which is the case when dealing with orthogonal polynomials ) then @xmath122 is strictly increasing and @xmath124 . in this case if @xmath125 for some @xmath126 , then @xmath47 has exactly @xmath64 zeros in both @xmath127 and @xmath128x_1,x_2\\right]$ ] .",
    "thus , @xmath129 can be identified as the _ density _ or _ root density _ of polynomial @xmath47 . graphically speaking",
    ", @xmath119 describes the amplitude of the polynomial @xmath47 at point @xmath121 and @xmath130 describes the rate at which the polynomial @xmath47 oscillates near @xmath121 ( figure [ fig : amp ] ) . if @xmath131 and @xmath132 are polynomials without multiple zeros such that @xmath131 and @xmath132 have no common zeros , then the number of roots of @xmath133 in every @xmath134 \\subset \\left[a , b\\right]$ ] is equal to the sum of the number of roots of @xmath131 and @xmath132 in that interval .",
    "therefore , the root density of such a product is approximately the sum of the root density of the factors .",
    "let @xmath77 and @xmath135 denote the @xmath9th orthogonal polynomials in @xmath70\\right)}}$ ] and @xmath107\\right)}}$ ] , respectively .",
    "if @xmath136 and @xmath137 then the polynomials @xmath135 are equal to the legendre polynomials . using the formulae for the asymptotic behaviour of the legendre polynomials @xcite the formula @xmath138",
    "{ \\left ( \\frac{b - a}{2 } \\right)^2 - \\left(x- \\frac{a+b}{2 } \\right)^2 } } + o(\\mu^{-3/2})\\ ] ] can be obtained for the amplitude @xmath139 of the polynomials @xmath135 for large @xmath9s .",
    "if @xmath93 satisfies condition ( [ eqn : w ] ) , then @xmath140 for large @xmath9s , that is , for large @xmath9s the amplitude of @xmath77 can be well approximated by @xmath141 where the constant is independent of @xmath121 and is near @xmath142 ( figure [ fig : amp2 ] ) . combining equations ( [ eqn : amp1 ] ) and ( [ eqn : amp2 ] ) the amplitude of the @xmath9th orthogonal polynomial @xmath77",
    "can be approximately given by the formula @xmath143 { \\left ( \\frac{b - a}{2 } \\right)^2 - \\left(x- \\frac{a+b}{2 } \\right)^2 } } = : a_w(x).\\ ] ]    for large @xmath9s the root density of the polynomials can be approximated by @xmath144 where @xmath145 depends on the weight function @xmath93 . in all cases @xmath145 is close to 1 and @xmath146 ( figure [ fig : rho ] ) .    with @xmath147 and using equations ( [ eqn : freal ] ) , ( [ eqn : amp ] ) and ( [ eqn : ro ] ) we can conclude at @xmath148 \\right\\}=:f_{w,\\mu}(x),\\ ] ] an approximate formula for the @xmath9th orthogonal polynomial with respect to the weight fuction @xmath93 ( figure [ fig : approx ] ) .",
    "we use simpson s rule in order to calculate the integrals ( [ eqn : q1 ] ) , ( [ eqn : b ] ) and ( [ eqn : p ] ) numerically .",
    "the numerical integral of the function @xmath149 taken over the discretization interval @xmath150 $ ] is @xmath151h.\\ ] ] assume that @xmath149 is analytic in @xmath152 with radius of convergence at @xmath153 greater then @xmath154 , that is , @xmath155 the exact integral and the numerical integral of @xmath149 then becomes @xmath156 and @xmath157h= \\nonumber\\\\ & = & \\left [ \\frac23 \\sum_{k=0}^{\\infty}\\frac{g^{(2k)}(z)}{(2k)!}\\,h^{2k } + \\frac43 g(z ) \\right]h,\\end{aligned}\\ ] ] respectively .",
    "then the error of integration over the interval @xmath152 , that is , the difference of the exact and the numerical integrals becomes @xmath158 if @xmath154 is small enough and @xmath9 is large enough such that @xmath77 oscillates much faster than @xmath93 and @xmath47 the integrand of ( [ eqn : b ] ) can be approximated on @xmath152 by @xmath159 where @xmath160 .",
    "@xmath161 thus , the error of integrating @xmath162 numerically over @xmath152 can be estimated as @xmath163 \\nonumber \\\\ & \\approx & \\frac{1}{36}h\\left|b(z)\\right| \\left(\\pi\\,\\mu\\,\\varrho(z ) \\,h\\right)^4 \\cdot \\left [ 1 + o\\left(\\left(\\pi\\,\\mu\\,\\varrho(z ) \\,h\\right)^2\\right ) \\right ] .",
    "\\label{eqn : deltaf2}\\end{aligned}\\ ] ] @xmath164 shows the number of discretization points between two consecutive zeros of @xmath77 near @xmath153 .",
    "the density of discretization has to be chosen such that the relative error @xmath165 of the numerical integration is in the same order of magnitude in each discretization interval and is equal to the desired relative error of the numerical integration over @xmath67 $ ] .",
    "since @xmath166 and the integrands in ( [ eqn : q1 ] ) and ( [ eqn : p ] ) contain the square of @xmath77 , they can be treated as a constant plus a cosine of double frequency in every discretization interval .",
    "the error of the numerical integration can be estimated similarly , leading us to the same conclusion .",
    "if @xmath47 is not continuous on @xmath67 $ ] , then the convergence in ( [ eqn : f= ] ) is not uniform but an almost everywhere convergence .",
    "assume that @xmath47 has an @xmath167 type ( @xmath168 ) singularity near @xmath169 , that is , @xmath170 .",
    "then the closer we get to @xmath169 the slower the convergence becomes .",
    "thus , by taking into account only a finite number of terms in ( [ eqn : f= ] ) we can get a reasonable approximation for @xmath47 only in @xmath171 $ ] with a suitably chosen @xmath172 .",
    "the procedure in this case should be as follows .",
    "we need to determine the size @xmath172 of the neighborhood of @xmath169 in which the approximation of @xmath47 is not needed .",
    "then we generate the orthogonal polynomials using ( [ eqn : rek ] ) in the interval @xmath173 $ ] and calculate the approximating polynomial @xmath87 with the desired degree of approximation @xmath54 .    if @xmath47 does not have singularities and is continuous on @xmath67 $ ] then the weight function @xmath93 can be chosen to be an arbitrary continuous function . if @xmath47 has singularities , for example an @xmath167 type singularity near @xmath169 , then the best choice for @xmath93 is as follows",
    "@xmath93 should have an @xmath174 type behaviour near @xmath169 and should be a smooth function otherwise . if @xmath47 is such that @xmath175 a , b \\right]$ ] then the best choice is @xmath176 .",
    "choosing @xmath93 in such a way has the following advantages .",
    "1 .  according to ( [ eqn : amp2 ] ) the amplitude of the polynomials @xmath77 will gain approximately the same type of singularity as @xmath47 has , therefore , the relative deviation of @xmath47 and @xmath87 is decreasing uniformly .",
    "2 .  in the integrand of equation ( [ eqn : b ] ) the singularity of @xmath47",
    "is cancelled out by one of the two @xmath93 s , while the other @xmath93 deals with @xmath77 according to ( [ eqn : amp2 ] ) .    in order to find the optimal type of discretization of interval",
    "@xmath177 $ ] we need to consider both the singularities and the densities of the integrands ( [ eqn : q1 ] ) , ( [ eqn : p ] ) and ( [ eqn : b ] ) . taking ( [ eqn : amp1 ] ) and ( [ eqn : amp2 ] ) into account",
    "we can conclude that @xmath178 of ( [ eqn : q1 ] ) and ( [ eqn : p ] ) ( see ( [ eqn : deltaf2 ] ) ) has singularities near @xmath169 and @xmath179 of type @xmath180 and @xmath181 , respectively , and ( [ eqn : b ] ) has singularities of type @xmath182{x - a}$ ] and @xmath182{b - x}$ ] .",
    "the densities of all three integrands are of type @xmath183 . as a consequence",
    ", the optimal discretization should contain the discretization points with density proportional to @xmath184 $ ] .",
    "this would require infinitely many discretization points , thus , we choose a small @xmath172 and discretize the interval @xmath185= \\left[a+\\epsilon , b-\\epsilon \\right]$ ] with the above density .",
    "if we use @xmath106 discretization points , then the discretization interval @xmath186 $ ] at @xmath153 has the length @xmath187 \\quad\\quad\\text{if } \\quad a+\\epsilon \\le z \\le \\frac{a+b}{2 } \\\\   { \\displaystyle}(b - z)\\left [ \\left ( \\frac{b - a}{2\\epsilon } \\right)^{4/n}-1 \\right ]   \\quad\\quad \\text{if } \\quad\\frac{a+b}{2 } \\le z \\le b-\\epsilon .",
    "\\\\ \\end{matrix } \\right.\\ ] ] the length of the longest and shortest intervals of this logarithmic discretization is @xmath188 $ ] and @xmath189 $ ] , respectively .    in the usual fermionic calculations @xmath190 and the functions of the fermionic matrix that have to be evaluated have singularities of type @xmath191 ( @xmath2 ) at @xmath192 .",
    "we use the above polynomial expansion to approximate these singular functions .",
    "@xmath172 should be chosen such that all eigenvalues of the fermionic matrix are greater then @xmath172 .",
    "the smallest eigenvalue of the fermionic matrix is proportional to the square of the quark mass .",
    "since our aim is to use quark masses as low as the physical @xmath193 quark masses , which are approximately @xmath194 in lattice mass units , @xmath172 should be in the order of magnitude of @xmath195 . in order to be able to well approximate the functions of the fermionic matrix so close to their singularities",
    "the required order of polynomial approximation is in the thousands .",
    "using this logarithmic type of discretization the order @xmath54 up to which the algorithm ( [ eqn : rek ] ) is stable can be tested .",
    "the coefficients @xmath104 and the deviations @xmath196 can be seen in figure [ fig : coeff ] , when the approximated function is chosen to be @xmath197 , @xmath190 , @xmath198 and @xmath199 .",
    "it can be verified that the algorithm is stable approximately up to the orders @xmath200 , @xmath201 and @xmath202 if the numbers of discretization points are @xmath203 , @xmath204 and @xmath205 , respectively . since no multiprecision arithmetics",
    "is required for the algorithm , its cpu time and memory requirements are considerably low . generating the polynomials up to the order of @xmath202 in the case of @xmath205 takes approx .  2.5 minutes of cpu time on a @xmath206 amd athlon processor and requires approx .",
    "@xmath207 of ram .",
    "we have introduced an alternate numerical method for generating the approximating polynomials used in fermionic calculations with smeared link actions .",
    "this algorithm was based on the idea of calculating all the integrals numerically and calculating and storing all the functions and polynomials only at finitely many discretization points .",
    "the advantages of this algorithm include memory usage independent of the order of approximation , unnecessarity of multiprecision arithmetics libraries and the absence of restrictions for the form of the approximated and the weight functions .",
    "we investigated the stability of the algorithm and based on the asymptotic behaviour of the orthogonal polynomial base appearing in the method we determined the optimal weight function and the optimal type of discretization .",
    "as a result the achievable order of polynomial approximation reached several thousands which is essential for fermionic calculations near the small physical quark masses .",
    "we thank ferenc csikor , zoltn fodor and istvn montvay for useful discussions and careful reading of the manuscript . this work was partially supported by hungarian scientific grants , otka - t37615/t34980 .",
    "g.  p.  lepage , phys .",
    "d * 59 * , 074502 ( 1999 ) [ arxiv : hep - lat/9809157 ] .",
    "k.  orginos , d.  toussaint and r.  l.  sugar [ milc collaboration ] , phys .",
    "d * 60 * , 054503 ( 1999 ) [ arxiv : hep - lat/9903032 ] .",
    "a.  hasenfratz and f.  knechtli , phys",
    ".  rev .",
    "d * 64 * , 034504 ( 2001 ) [ arxiv : hep - lat/0103029 ] .",
    "w.  kamleh , d.  b.  leinweber and a.  g.  williams , arxiv : hep - lat/0309154 .",
    "j.  m.  zanotti _ et al . _ [ cssm lattice collaboration ] , phys .  rev .",
    "d * 65 * ( 2002 ) 074507 [ arxiv : hep - lat/0110216 ] . c.  morningstar and m.  j.  peardon , arxiv : hep - lat/0311018 .",
    "f.  knechtli and a.  hasenfratz , phys .",
    "d * 63 * , 114502 ( 2001 ) [ arxiv : hep - lat/0012022 ] .",
    "a.  hasenfratz and f.  knechtli , comput .",
    "commun .   * 148 * , 81 ( 2002 ) [ arxiv : hep - lat/0203010 ] .",
    "a.  hasenfratz and a.  alexandru , phys",
    ".  rev .",
    "d * 65 * , 114506 ( 2002 ) [ arxiv : hep - lat/0203026 ] . m.  hasenbusch , phys .",
    "d * 59 * , 054505 ( 1999 ) [ arxiv : hep - lat/9807031 ] .",
    "de forcrand , nucl .",
    "* 73 * ( 1999 ) 822 [ arxiv : hep - lat/9809145 ] .",
    "i.  montvay , arxiv : hep - lat/9903029 .",
    "i.  montvay , arxiv : hep - lat/9911014 . c.  gebert and i.  montvay , arxiv : hep - lat/0302025 .",
    "gabor szeg : _ orthogonal polynomials _ , american mathematical society colloquium publications , vol 23 , 4th ed , providence , ri , 1975"
  ],
  "abstract_text": [
    "<S> we introduce a numerical method for generating the approximating polynomials used in fermionic calculations with smeared link actions . </S>",
    "<S> we investigate the stability of the algorithm and determine the optimal weight function and the optimal type of discretization . </S>",
    "<S> the achievable order of polynomial approximation reaches several thousands allowing fermionic calculations using the hypercubic smeared link action even with physical quark masses . </S>"
  ]
}
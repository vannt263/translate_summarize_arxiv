{
  "article_text": [
    "as the computational power continuously increases , molecular dynamics ( md ) method has become a more and more common tool in the studies of polymeric and biological systems  @xcite .",
    "however , some bottlenecks of atomistic md simulations have restricted their applications on solving the problems related to mesoscopic time and length scales .",
    "recently , many new simulation techniques such as coarse - graining  @xcite and enhanced sampling  @xcite were proposed to accelerate simulations and meanwhile maintain the computational accuracy .",
    "nevertheless , developing highly - optimized and parallelized md programs is also essential to access larger spatial and longer temporal scales .",
    "for example , the namd  @xcite program allowed ten - microsecond all - atom md simulations of protein folding  @xcite or the simulations of a complete satellite tobacco mosaic virus with up to 1 million atoms  @xcite .",
    "recently , graphics processing units ( gpus ) that are originally developed for rendering images or real - time effects in computer games , have been optimized for intensive computational tasks , certainly including md simulations .",
    "for example , the processor chip of latest generation of nvidia gpus , tesla k20x ( 1 kepler gk110 ) based on kepler computing architecture provides a theoretical peak 3.95 teraflops of single precision compution throughput  @xcite . due to the tremendous computational performance at a fraction of the cost and power consumption as compared with cpus , gpus are more and more taken as main processors in md simulations and supported by popular md packages , such as dl - poly  @xcite , amber  @xcite , lammps  @xcite , namd  @xcite , and gromacs  @xcite .",
    "the programming model supplied by compute unified device architecture ( cuda ) provides an easier way to harness the computational power of gpus . for an md algorithm to be executed efficiently on the gpu",
    ", it must be casted into a data - parallel form with extremely massive independent threads of execution in simd ( single - instruction - multiple - data ) .",
    "the number of threads in a kernel function is scalable and depends on specific algorithm . due to the different architecture of the gpu from cpu ,",
    "an existed cpu algorithm of md has to be redesigned and optimized for the implementation on the gpu .",
    "in addition , there are very few of highly optimized gpu - based md packages designed for simulating polymeric systems efficiently .",
    "thereby , we develop this versatile toolkit , the galamost ( gpu - accelerated large - scale molecular simulation toolkit ) , for facilitating the studies of various polymeric systems .",
    "compared with complex biomolecules , polymers with repeated units can be easily modeled in coarse - grained md simulations , usually without considering long - range electrostatic interactions .",
    "the coarse - grained md has become a powerful tool , accounting for the problems related to self - assembly , phase separation , and other phenomena of polymeric systems . in this paper",
    ", we introduce some lately developed coarse - grained simulation methods especially for the studies of polymers , and their optimized algorithms implemented on the gpu . these methods are included in galamost that is highly optimized to run on gpus with cuda .",
    "galamost takes a similar strategy of hoomd - blue  @xcite that is to optimize algorithms for running very efficiently on a single gpu .",
    "we have learnt a few techniques from hoomd - blue and employed them in our package , such as , the sfcpack  @xcite sorting method which rearranges the order of data of particles stored in host and device memories to increase the probability of cache hit at memory reading .",
    "different from hoomd - blue , galamost is purely designed for gpus and can not be run on cpus independently .",
    "the gpu code of galamost can be compiled in single precision or in double precision , but all benchmarks in this work are associated with single precision .",
    "the main programming languages are c++ and cuda c. the compiling configurations and processes are controlled by a shell script and a makefile in linux operating system , respectively .",
    "the choices for general force field functions in galamost will be listed in the following sections .",
    "in addition , a hybrid particle - field molecular dynamics technique ( md - scf )  @xcite for calculating intermolecular interactions has been incorporated in galamost .",
    "this technique is similar to molecular dynamics the single - chain in - mean - field scheme developed by mller and co - workers  @xcite . in this technique ,",
    "the most computational time - consuming parts in md , i.e. , the intermolecular pair interactions , are replaced by interactions of particles with density fields .",
    "it will largely speed up some slowly evolving collective processes in md simulations , such as micro - phase separation and self - assembly of polymeric systems .",
    "in addition to the character of intrinsic speed - up of intermolecular interactions , the algorithms of md - scf are very suitable to be parallelized , not only on multi - cpus , but also on gpus .",
    "in addition to analytical potentials , numerical potential can be used in galamost by reading the potential table derived from iterative boltzmann inversion ( ibi ) method  @xcite or other structure - based coarse - graining methods  @xcite . the ibi method developed by mller - plathe and coworkers",
    "can successfully generate the coarse - grained numerical potentials in a simpler way  @xcite .",
    "it derives the coarse - grained potentials by mapping the structural distributions onto the ones obtained either from atomistic simulations or from experiments . with this bottom - up coarse - graining scheme",
    ", the derived coarse - grained numerical potentials can be applied in larger systems under the same thermodynamic conditions .",
    "therefore , a framework of multiscale modeling of polymeric systems can be constructed . by further utilizing the computational power of gpus ,",
    "the temporal and spatial scales in the simulations of polymers are greatly enlarged again .      besides some basic functions of general md , such as coarse - grained md ( cgmd )  @xcite , brownian dynamics ( bd )  @xcite , and dissipative particle dynamics ( dpd )  @xcite , galamost also includes two tailor - made modules :",
    "a soft anisotropic particle model has been incorporated for modeling some kinds of anisotropic particles , and a stochastic chain - growth polymerization reaction model has been developed specially for the studies related to polymerization . by employing these advanced simulation techniques on the gpu , galamost enriches the routes for researchers to investigate polymeric systems via computer simulations .",
    "more information about these models is introduced in the following .    to simulate hierarchically self - assembled superstructures of anisotropic particles",
    ", a novel anisotropic particle model was proposed by li et al .",
    "@xcite . to be specific ,",
    "the packing and the self - assembly of disk - like , rod - like , janus , and triblock janus particles can be studied by using different anisotropic potentials  @xcite . due to the unique feature of being noncentrosymmetric ,",
    "the self - assembly patterns of anisotropic particles show great diversity  @xcite . compared with popular methods which collect a set of spherical particles to be an anisotropic rigid body and",
    "keep the rigid body by shake algorithm or quaternion scheme  @xcite , this single - site anisotropic particle model has great superiority on computational efficiency as a result of its simplicity . with the formidable computational power of gpus , it has great potential in the future studies of plentiful self - assembled superstructures and other properties of anisotropic particles .    to study the phenomena related to polymerization ,",
    "a stochastic chain - growth polymerization model coupled with cgmd was proposed recently by liu et al .",
    "this model has its applications in , for example , polymerization - induced phase separation , surface - initiated polymerization , and so on  @xcite .",
    "surface - initiated polymerization is not trivial since it is of great relevance with the performance of the designed materials of polymer brushes  @xcite .",
    "the properties of polymer brushes fabricated via surface - initiated polymerization are synergistically controlled by excluded volume effect , diffusion of monomers , and polymerization  @xcite .",
    "the implementation of the stochastic chain - growth polymerization model in galamost supplies a powerful tool to deal with these types of problems  @xcite .",
    "to make the operations in the code of galamost clear enough , the device memory reads and writes are denoted by @xmath0 and @xmath1 in pseudocodes , respectively .",
    "the @xmath2 denotes the operations from local register to local register .",
    "in addition , the value in [ ] is used to denote an index of array and ( ) denotes a specified calculation . to cater to the data - parallel calculation mode of gpu , the neighbor list ( nl ) array which records the tags of all neighboring particles of each particle and the cell list ( cl ) array which records",
    "the information ( i.e. , tag , type , and coordinate vector ) of the particles in each cell , are stored in device memory in table - like form , as illustrated in fig .",
    "[ fig : fig1 ] .",
    "the neighbor number ( nn ) array records the number of the neighboring particles of each particle in neighbor list . the cell particle number ( cn ) array records the number of particles in each cell . the bond list ( bl ) array in device memory which records the tags of the bond - connected particles for each particle takes the same storage form as nl , as illustrated in fig .",
    "[ fig : fig2 ] . the bond number ( bn ) array records the number of the bonds of each particle .",
    "since one dimensional array in device memory is the most convenient to be allocated , copied , and used , we transform the multi - dimensional array into one - dimensional array form enhancing the computational efficiency .",
    "for example , in the operation of reading neighboring particle tag @xmath3@xmath0nl[@xmath4 in algorithm 2 , the @xmath5 denotes the transformation ( @xmath6 ) of an index of nl array where np is the total number of particles in the system , @xmath7 is the particle tag which also denotes the horizontal index of the table of nl , and @xmath8 is the vertical index of the table .",
    "this operation means reading the tag of the @xmath8-th neighboring particle of particle @xmath7 from nl . besides the coordinate vector array @xmath9 , velocity vector array @xmath10 , force vector array @xmath11 , and type of particles array t , other arrays and variables are defined in each algorithm .",
    "the description of each method and its optimized algorithm implemented on the gpu are introduced in the following .      in polymer systems , the net non - bonded force of each particle is produced by summing all the non - bonded forces of neighboring particles .",
    "the standard algorithm is to employ an nl that lists the interacting particles for each particle , built beforehand .",
    "because of the independence of parallel cuda threads , a pair of interacting particles is inevitably included independently in nl in the mode that one thread calculates and sums all non - bonded forces of a particle .",
    "the employed gpu algorithm of nl that is built after binning all particles to cl is similar to the practice  @xcite .",
    "the processes of building cl and nl are both achieved by gpu calculations . in the kernel function of building cl",
    ", a thread corresponds to a particle , and then this thread calculates the index of the cell in which the particle resides and adds its tag together with its coordinate vector into the cell list .",
    "its algorithm is almost the same as kernel 1 in algorithm 1 , except that the tag instead of the type is combined with the coordinate vector .",
    "based on the cl that has been built , the nl for each particle can be easily built by searching neighboring particles from the surrounding 27 cells ( including the cell that the target particle resides in ) .",
    "the nl records all neighboring particles of each particle within a distance that is the sum of the cutoff of non - bonded interactions , @xmath12 , and the buffer distance , @xmath13 .",
    "the nl only needs to be updated when any particle has moved a distance more than half of the buffer distance .",
    "the non - bonded forces for each particle can be calculated and summed by a corresponding thread on the gpu by searching the particles within @xmath12 from nl .",
    "the common non - bonded potential energy functions are included in galamost , which are lennard - jones ( lj ) : @xmath14,\\end{aligned}\\ ] ] where @xmath15 is the depth of the potential well , @xmath16 is the finite distance at which the interparticle potential is zero , and @xmath17 is the distance between the particles ; + harmonic repulsion : @xmath18 where @xmath19 and @xmath12 set the maximum energy penalty and maximum interaction distance , respectively ; + gaussian repulsion : @xmath20,\\end{aligned}\\ ] ] where @xmath21 and @xmath16 determine the energy and length scales , respectively .      in the framework of scf theory ,",
    "a molecule is regarded to be interacting with the surrounding molecules not directly but through a density field .",
    "the interactions on particles derived from the minimization of the free energy of density fields efficiently push forward the evolution of the configuration of the system .",
    "however , all intramolecular interaction terms ( bond , angle and other possible intramolecular interactions ) are usually considered as the regular forms in md .",
    "the different scales of interactions can be mitigated by treating the stiff intramolecular interactions by propagating the system configuration via a small time step , but treating soft intermolecular interactions by updating the density field derived from the coordinates of particles only after many of these small time steps .    according to the spirit of scf theory , the main issue is to derive the partition function of a single molecule in an external potential @xmath22 and further to obtain a suitable expression of the @xmath22 and its derivatives .",
    "starting from the partition function , the functional form of the interaction term and using the saddle point approximation , the external potential has the form :  @xcite @xmath23 where each component is specified by an index @xmath24 , @xmath25 is the compressibility , @xmath26 represents the mean field parameter which is related to the flory@xmath27huggins parameter , and @xmath28 is the density distribution . in the case of a mixture of two components",
    "a and b , the mean field potential acting on a particle of type a at position @xmath29 is given by @xmath30+\\frac{1}{\\kappa}(\\phi_{a}(\\mathbf{r})+\\phi_{b}(\\mathbf{r})-1).\\end{aligned}\\ ] ] then the force acting on particle a at position @xmath29 imposed by the interaction with the density field is @xmath31    the algorithm on the gpu about the calculation of the forces acting on particles from density fields is different from that on the cpu in many places .",
    "for example , assigning and adding the density fractions of each particle to the eight vertices of the cell in which the particle resides , are implemented simply one by one in serial cpu code .",
    "however , in gpus , one thread will take charge of one particle in kernel function and assign the density fractions of corresponding particle to the eight vertices of the cell in which the particle resides . in this process , atomic function from cuda is inevitably employed to compel more than one thread to queue , so that these threads will add density fractions to the same vertex sequentially in order to avoid interference with each other . in practice , we employ another algorithm illustrated in part 1 of algorithm 1 which seems a little complex , but more efficient .",
    "first , we build a cl which records the coordinate vectors and types of the particles in each cell . and",
    "then , one thread takes charge of one vertex and collects the density fractions of the particles from the eight cells near this vertex .    the algorithms for the update of density gradients ( density derivatives ) from density distributions and the calculation of the forces from density gradients",
    "are explained in two kernels in part 2 of algorithm 1 .",
    "in addition , a trick has been employed to accelerate the most time - consuming function kernel 4 .",
    "a composition list which records the types of the components with non - zero density derivatives is used .",
    "it can reduce the ` for ` loops significantly in kernel 4 for multi - component systems .",
    "this trick works well especially for self - assembly systems in dilute solution .",
    "the speed - up by this trick depends on the number of components in the system .",
    "normally we have 5%-40% speed - up of overall performance for multi - component systems .",
    "the bonded forces generally include the bond , angle , and torsion forces . because of the execution mode of simd in gpu , it is efficient that a thread calculates and sums the bond , angle , and torsion forces of a particle in the kernel functions .",
    "thus , how to store the topological information of the molecules is of great relevance . as illustrated in fig .",
    "[ fig : fig2 ] , we need two arrays , bl and bn to record all bonds .",
    "the tags in a column of bl table indicate the particles which are bonded to the target particle , and correspond to the horizontal index of the bl table .",
    "therefore , we can employ the thread whose number is equal to the number of particle to calculate the bond forces of each particle independently . for angles and torsions ,",
    "we store them with the same form as bonds , except that the position ( side or middle ) of the target particle in an angle or a dihedral needs to be indicated .",
    "although the force of a bond will be computed twice ( three times for an angle and four times for a torsion ) on device according to the form of the storage , it casts the computation well into parallel mode for separated threads of gpus and is efficient for data copy between host and device memories .",
    "the common bonded potential energy functions in galamost are @xmath32 in which @xmath17 is the instantaneous length of the bond , @xmath33 is the equilibrium length of the bond , and @xmath34 is the spring constant ; @xmath35 or alternatively @xmath36 in which @xmath37 is the angle in radians between vectors @xmath38 and @xmath39 , @xmath40 is the equilibrium angle , and @xmath41 is the angle force constant ; @xmath42,\\end{aligned}\\ ] ] in which @xmath43 is the angle in radians between the planes @xmath44 and @xmath45 , the integer constant @xmath46 indicates the periodicity , @xmath47 is the phase shift angle , and @xmath48 is the multiplicative constant .",
    "the numerical non - bonded , bond , angle , and torsion potentials can be derived from ibi  @xcite or reverse monte carlo method  @xcite . with ibi method ,",
    "the procedure starts with the potentials of mean force as guessed potentials and then optimizes the potentials iteratively by mapping the structural distributions ( i.e. , radial distribution function , rdf ) onto the ones obtained either from atomistic simulations or from experiments .",
    "the resulting numerical potentials usually take the form as a table in which the potential values at discrete grid points of distance are given . in the treatment of tabulated potentials ,",
    "the initial input potential tables on grid points of @xmath49 are transformed to the tables ( arrays ) on grid points of @xmath50 . with this trick ,",
    "the @xmath51 in the inner loop of force calculation is avoided , and the force is then calculated by @xmath52 within each interval between the grid points , potentials are fitted to a cubic spline function  @xcite , more specifically , for each @xmath53 , let @xmath54 , @xmath55 is represented by : @xmath56 where @xmath57 corresponds to @xmath58 , @xmath59 , and @xmath60 for particle - particle distance square , bending angle , and torsion angle , respectively .",
    "@xmath7 is the index of the grid point and @xmath61 is the starting potential value of each grid point .",
    "other parameters @xmath62 , @xmath63 , and @xmath64 are chosen to make the values of the first derivative and the second derivative at both ends of interval @xmath65 and @xmath66 equal to the correct values of function @xmath67 . in this way ,",
    "the potential is continuous up to second order through the whole interaction range .",
    "the implementation of this numerical potential method in galamost is illustrated by the example of numerical non - bonded force calculation in algorithm 2 .",
    "the texture cache is used in line 11 of algorithm 2 in the case of numerical potential for random memory access of the parameters @xmath68 ( including @xmath61 , @xmath62 , @xmath63 , and @xmath64 ) from the global memory in device , since the number of grid points is always several thousands and the maximum share memory with 48 kb is not enough to store the array of @xmath68 .",
    "in addition , the judgement for whether or not the distance between a pair of particles exceeds the cutoff is done in line 10 of algorithm 2 by checking if the index of grid point exceeds the maximum value .      in galamost , we use velocity - verlet algorithm  @xcite for the integration of the equations of motion for cgmd and bd .",
    "three thermodynamic ensembles can be chosen in galamost , i.e. , the microcanonical ensemble ( nve ) , the canonical ensemble ( nvt ) , and isothermal - isobaric ensemble ( npt ) .",
    "the constant temperature can be controlled via nos - hoover thermostat  @xcite or andersen thermostat  @xcite , and the constant pressure can be controlled via andersen barostat  @xcite .",
    "particles can be placed in a cubic or cuboid box with periodic boundary conditions  @xcite .    in addition , a modified velocity - verlet algorithm suggested by groot and warren ( gw - vv )  @xcite is used for integrating the equations of motion in dpd . a half - step leapfrog algorithm",
    "together with berendsen thermostat is used for the soft anisotropic particle model  @xcite .",
    "because of the independence of the integration of each particle , a thread takes charge of the motion of a particle , and updates its coordinate and velocity vectors in kernel functions in all integration methods .",
    "by adding two degrees of freedom of rotation , our one - site anisotropic particle model can be used to describe disk - like , rod - like , diblock and triblock janus particles .",
    "we have successfully examined the packing and the self - assembly of anisotropic particles with this model  @xcite .    in the simulations of disk - like and rod - like particles ,",
    "we adopt a soft anisotropic potential on the basis of the conservative potential in dpd .",
    "it can be expressed as @xmath69 where the magnitude of @xmath70 controls the strength of repulsion , @xmath71 controls the shape of the particles , and @xmath72 controls the angular width of repulsion . the disk - like or rod - like particle can be described by different expressions of anisotropic factor @xmath73 . in disk - like particle model  @xcite ,",
    "the anisotropic factor is @xmath74 where @xmath75 and @xmath76 are unit vectors assigning the orientations to particles @xmath7 and @xmath3 , respectively .",
    "@xmath77 is the interparticle vector . in rod - like particle model  @xcite ,",
    "the anisotropic factor is @xmath78 where @xmath79 is the angle between @xmath75 and the interparticle vector @xmath80 , @xmath81 is the angle between @xmath76 and @xmath82 . for diblock and triblock janus particles , we take an anisotropic potential with attractive tail , @xmath83 where the magnitude of @xmath84 controls the strength of repulsion , @xmath85 controls the strength of attraction , and @xmath72 controls the angular width of attraction . in janus particle model  @xcite , the anisotropic factor is @xmath86 the size of the attractive patches is described by the janus balance @xmath87 . in triblock janus particle model  @xcite ,",
    "the anisotropic factor is @xmath88 where @xmath89 , and @xmath90 .",
    "the structures of these four kinds anisotropic particles are illustrated in fig .",
    "[ fig : fig3 ] .",
    "the translational displacements of anisotropic particles follow newton s equations of motion .",
    "the equations of rotational motion can be written as @xmath91 @xmath92 where @xmath93 is the moment of inertia .",
    "@xmath94 is defined as the time derivative of the orientation @xmath75 .",
    "the quantity @xmath95 can be taken as a lagrange multiplier .",
    "physically , @xmath96 corresponds to the perpendicular component of torque , responsible for the rotation of the particle .",
    "the optimized algorithms implemented on the gpu for these four types of anisotropic particles have been included in galamost .",
    "we illustrate the overall algorithm in algorithm 3 .",
    "the expressions of calculation ( @xmath97,@xmath98,@xmath99,@xmath100 ) in kernel 2 for translational force and torque are dependent on specific anisotropic potential ( details can be found in refs .",
    "the equations of both translational and rotational motion are integrated via a half - step leapfrog algorithm .",
    "with implementation on gpus , this one - site anisotropic particle model supplies a powerful tool to study the ordered packing and self - assembly of noncentrosymmetric particles .      in this model",
    ", we consider free radical linear chain - growth polymerization , i.e. , @xmath101 for monomer a. polymerization probability @xmath102 is set to determine whether a monomer will react with an active end or not in a reaction step and is coupled to the real reaction rate @xmath103 by @xmath104}{dt}=\\frac{[p^{*}]p_{r}}{\\tau},\\end{aligned}\\ ] ] where @xmath105 $ ] is the free monomer concentration , @xmath106 $ ] is the concentration of growth centers , and @xmath107 is the reaction time interval  @xcite . in a time interval",
    ", if a polymerization reaction event takes place between a monomer and an active end , a bond connection should be added between them and then the active end should be transferred to the new end .",
    "therefore , how the bond connection relationship is stored in device memory is of great relevance , as illustrated in fig .",
    "[ fig : fig2 ] .",
    "we have designed a chain - growth polymerization algorithm on the gpu and illustrate it by pseudocode in algorithm 4 .",
    "it should be emphasized that the atomic function atomicmax ( ) in line 12 of algorithm 4 is employed to handle the situation that more than one active end reacts with the same monomer simultaneously .",
    "it will avoid the conflicted operations on the same variable by two or more threads in kernel function .",
    "an explanation may be needed for the operation @xmath3@xmath1bl[(@xmath7 , num@xmath108 ) ] in line 17 of algorithm 4 .",
    "( @xmath7 , num@xmath108 ) represents the calculation ( num@xmath108@xmath109np + @xmath7 ) which gives an index of bl array to record the tag of newly connected particle , where @xmath7 and @xmath3 are the particle tags , num@xmath108 is the number of the stored particles in the column of particle @xmath7 in bl , and also is the vertical index of the table to record the newly connected particle tag @xmath3 .",
    "in most cases , the nl method for short range non - bonded interactions is the most time - consuming part .",
    "but nl normally does not require updating every step , thus equal share of costing time to each step is acceptable and comparable to non - bonded force calculation .",
    "the large buffer distance can reduce the frequency of the update of nl .",
    "however , the number of the particles recorded in nl for each particle will be increased proportionally to ( @xmath12+@xmath13)@xmath110 , which will result in more costing time of non - bonded force calculation by searching non - bonded interacting particles from a larger range .",
    "thereby , a proper buffer distance exists in each simulated system .",
    "when any particle has moved a distance more than half of the buffer distance , the nl needs to be rebuilt .",
    "thereby the `` softness '' of the particles and the magnitude of integration step , which are related to the speed of migration of particles , influence the performance of galamost greatly .",
    "we make benchmarks for galamost by simulating lj particles and soft dpd particles on gpus , respectively , and compare the results with hoomd - blue 0.10.0 at the same conditions of simulations .",
    "steeper interaction profiles request a necessarily smaller integration step , while lower updating frequency of nl yields a higher performance of galamost .",
    "we can draw this conclusion from fig .",
    "[ fig : fig4 ] , which shows the results for the lj liquid systems with a packing fraction of 0.2 at an integration step of 0.001 with @xmath12=3.0 , and the dpd liquid systems with a reduce number density of 3.0 at an integration step of 0.04 with @xmath12=1.0 . because the efficient o(n ) nl method has been employed ,",
    "the average costing time per each step is proportional to the system size n ( the number of particles ) . according to the comparisons ,",
    "the performance of galamost is about 10% slower than hoomd - blue in lj liquid simulations .",
    "however , the performance of galamost which also employs the saru  @xcite pseudo - random number generator ( prng ) in dpd to generate the stochastic force for each pair of interacting particles is about 30% faster than hoomd - blue in dpd liquid simulations .    in galamost ,",
    "we especially focus on saving the valuable device memory by allocating the only - used arrays in device memory .",
    "thereby , up to 2.2 million lj liquid particles or 3.0 million dpd liquid particles can be simulated by galamost on gtx 580 with 1.5 gigabytes global device memory .",
    "as compared with galamost , at most 1.0 millon lj liquid particles or 1.5 millon dpd particles can be simulated by hoomd - blue on the same device at the same simulation conditions .",
    "the simulated system size is proportional to the volume of device memory .",
    "accordingly , the tesla k20x with 6 gigabytes global device memory should effectively enlarge the maximum particle number four folds of the simulated systems by gtx 580 .",
    "the memory sorting by sfcpack  @xcite algorithm which can significantly reduce the costing time of non - bonded force calculation is redesigned in galamost to cope with the systems with fast - moving particles .",
    "only the coordinates of the particles are sorted in galamost .",
    "this brings a good performance of galamost on simulating soft particle systems which usually need a high frequency of particle data sorting , such as dpd liquid .",
    "the coarse - grained models for phospholipids and water had been built in the framework of md - scf in previous works by milano et al  @xcite . here ,",
    "we compare the performance of galamost with parallel cpu code occam  @xcite about the md - scf method by simulating the phospholipids in water .",
    "specifically , the phospholipid dipalmitoylphosphatidylcholine ( dppc ) molecule model is used in this benchmark work . to verify the correctness of galamost , we have checked the density profiles of different components . for example ,",
    "the comparison of electron density distributions along the normal direction of lamellar phase of a system with 208 dppc and 1600 water molecules at 325 k between galamost on the gpu and occam on the cpu has been done , as illustrated in fig .",
    "[ fig : fig5 ] .",
    "the distributions are measured in single precision on the gpu and in double precision on the cpu .",
    "the difference between them can be regarded in the range of fluctuation . to further validate galamost",
    ", we simulate the self - assembled structures of four dppc and water systems at different water / dppc ratios .",
    "the snapshots of equilibrium structures are shown in fig .",
    "[ fig : fig6 ] .",
    "the comparison of performances between occam and galamost is given by testing two systems , i.e. , a smaller lipid and water ( lw ) system , lw1 , and a larger one , lw2 .",
    "the results ar shown in fig .",
    "[ fig : fig7 ] .",
    "as we can see , the performance of galamost in single precision running on a single gpu is far beyond the performance of occam in double precision running on 96 parallel cpus .",
    "the significant speed - up is not only attributed to the powerful computational capability of gpus , but also benefits from the optimization of the algorithms on the gpu .",
    "the numerical potential method in galamost is mathematically similar to that in ibisco  @xcite .",
    "we validate the gpu code by comparing the bond and angle distributions of polystyrene melt  @xcite simulated by galamost with that of the same system simulated by ibisco .",
    "the chain length of polystyrene is 50 monomers ( 50 particles in cg model ) long .",
    "the distributions have been measured in single precision on the gpu and in double precision on the cpu .",
    "the comparisons of the results are shown in fig .",
    "[ fig : fig8 ] . the bond and angle distributions dn",
    "/ n@xmath111 are calculated at the space of 0.01 nm and 1 degree , respectively . as we can see , the differences between the curves of cpu and gpu simulations are very tiny and the two lines in each subfigure can be regarded as overlapping with each other .",
    "furthermore , we have checked the time - dependent property , i.e. the diffusion coefficient of polystyrene chain , obtained in cpu and gpu simulations .",
    "there is also no noticeable difference .",
    "we further compare the performance of galamost in single precision running on a single gpu with that of ibisco in double precision running on 8 parallel cpus by simulating polystyrene melt with various system sizes . to guide the eyes , we multiply the time steps per second ( tps ) of 8 parallel cpus by 10 and then compare it with the tps of a single gpu , as shown in fig .",
    "[ fig : fig9 ] .",
    "it is clear that more particles are simulated , the advantage of gpus is more obvious .",
    "the parallel cpu codes for one - site anisotropic particle model had been well established before  @xcite . by porting the algorithms from cpu code to galamost ,",
    "the performance of this anisotropic particle model has been promoted greatly .",
    "we have verified the correctness of galamost by comparing many simulated quantities with the corresponding cpu code , including transitional and rotational energies , momenta , and temperatures , as well as self - assembled structures .",
    "the simulations in ref .",
    "@xcite that had been accomplished by galamost can further show the validation . from disk - like particle model",
    "to triblock janus particle model , the anisotropic potential forms become more and more complex . as a result",
    ", the computational efficiency will be lowered by more sophisticated force and torque calculations .",
    "thereby , we select the most computational time - consuming triblock janus particles as the benchmark system to present the performance .",
    "the model details about the triblock janus particles were introduced in ref .",
    "we have simulated these triblock particles with different numbers and show detailed performances in table  [ triblockjanus ] .",
    "the parameters of all the tested systems are set the same as @xmath112=396 , @xmath113=132 , @xmath87=65 and @xmath72 = 0.5 .      in the gpu code for the stochastic chain - growth polymerization model , some places of the algorithms have been tuned to fit the computational mode of the gpu , such as handling the situation that more than one active end reacts with the same monomer simultaneously .",
    "we have validated galamost by reproducing the same polymer brush structure at certain initiator density and polymerization rate for surface initiated polymerization on a flat surface .",
    "the simulations in ref .",
    "@xcite which have been done by galamost can further give the validation of our gpu code .",
    "here , we further apply this chain - growth polymerization model to simulate the surface - initiated polymerization from the outer surface of a ball to test the performance .",
    "the snapshot of the ball with grafted chains after a period of polymerization is given in fig .",
    "[ fig : fig10 ] . in this system ,",
    "the particles that compose the surface of the ball are frozen : they do not move in the simulations , but have interactions with surrounding particles .",
    "the initiators that can induce the polymerization with free monomers are distributed uniformly on the surface of the ball .",
    "the specific performances of galamost on the gpu for this system with different number of particles are listed in table  [ polymerization ] .",
    "the performance data are all recorded after 1 million time steps when the chains are densely grafted to the surfaces by polymerization . in addition , we employ the cuda profiler to profile the program for polymerization simulation .",
    "the costing times of some time - consuming kernel functions and polymerization kernel function are all given in fig .",
    "[ fig : fig11 ] .",
    "as we can see , polymerization function only costs a small fraction of simulation time , which can be neglected by comparing to neighbor list construction or non - bonded force computation .",
    "the early versions of nvidia gpus did not support double precision ( dp ) floating - point format since single precision ( sp ) was enough for graphics rendering .",
    "however , scientific algorithms typically require dp format and high standard of floating - point operations . now",
    "the tesla series of gpu cards from nvidia can provide a good performance for dp operations : the dp to sp performance ratio is about 1/2 and thus equivalent to that in cpus .",
    "however , the much cheaper gaming cards ( such as geforce ) still only support dp operations at a fraction of the speed of sp operations .    to gain highest performance at lowest cost",
    ", we have optimized galamost for sp operations .",
    "but galamost also supports cgmd simulations in dp format .",
    "we have carefully conducted precision tests and calculated round - off errors in md simulations with gpu dp , gpu sp , cpu dp and cpu sp operations .",
    "the numerical stability of an md simulation can be reflected by its ability to conserve the total energy in microcanonical ensemble .",
    "we therefore focus on a standard benchmark system of lj liquid with reduced @xmath114 and @xmath115 in a cubic simulation box with side length @xmath116 .",
    "the relative root mean square ( rms ) deviations of total energy of lj liquid in microcanonical ensemble with different integration time steps @xmath117 and cutoff distances  @xcite are calculated by using galamost in gpu dp and sp formats , and by using gromacs in cpu dp and sp formats , respectively . all the lj liquid systems are first equilibrated in canonical ensemble with @xmath118 for 5000 time units .",
    "then in microcanonical ensemble simulations , the total energy data are recorded every 0.1 time unit for each trajectory with 1000 time units long .",
    "we obtain the average total energy @xmath119 by averaging these @xmath120 energy data and then calculate their rms deviations using @xmath121 .",
    "the results are shown in fig .",
    "[ fig : fig12 ] .",
    "as we can see , the integration time step @xmath117 , the cutoff distance , and the numerical precision are all influencing the numerical stability of the md simulations .",
    "in general , the simulation results obtained with either gpu or cpu codes with the same numerical precision are quite similar . for md simulations with @xmath122 , the rms deviations of total energy are overall larger than the results with a larger cutoff distance , @xmath123 .",
    "this can be attributed to the cutoff noise , i.e. , the lj forces are not continuous at the cutoff distance , which will induce impulses in the simulations .",
    "apparently , increasing the cutoff distance will reduce the noise and then enhance the stability of the md simulations .",
    "the integration time step also has a substantial influence on rms deviations of total energy . for md simulations with @xmath122",
    ", there is no apparent difference in the curves showing the dependence of rms deviations of total energy on @xmath117 : for @xmath124 , the rms deviations of total energy are all smaller than @xmath125 , while for @xmath126 , @xmath127 increases with increasing @xmath117 .",
    "thus for simulations with comparatively short cutoff distance , there is no systematic difference between galamost with gpu dp and gpu sp and gromacs with cpu dp and cpu sp operations , because the disturbance of numerical precision on md is not obvious under the large cutoff noise of lj forces . for md simulations with @xmath123 , the rms deviations of total energy in simulations with gpu sp and cpu sp operations are several times larger than those with gpu dp and cpu dp operations when @xmath128 .",
    "but for @xmath126 , there is no apparent difference in the curves of @xmath129 with different numerical treatments due to that @xmath117 has a dominant influence on relative energy rms deviations in this range .",
    "since in cgmd simulations , the cutoff distance is normally quite small ( for example @xmath130 ) , and the integration time step is comparatively large ( for example @xmath131 ) , the disturbance of numerical precision on md course possesses a comparatively small weight .",
    "thereby , there should be no any advantage of dp over sp in this type of simulation .",
    "however , we provide the gpu dp format of galamost to cater to the need of high precision computation . due to different optimization strategies ,",
    "the performances of galamost with gpu dp operations for each model are different .",
    "we list the overall dp to sp performance ratios tested on a tesla c2050 card in table  [ performancedp ] for typical functions of galamost .",
    "this paper introduces the well - organized md package galamost with the incorporated force fields and characteristic models running on a single gpu . except for common force fields ,",
    "the md - scf method which can replace the intermolecular pair forces by the forces on particles interacting with density fields has been included in galamost . for coarse - grained simulations of polymeric systems ,",
    "a coarse - grained numerical potential method has also been incorporated in galamost .",
    "the coarse - grained numerical potentials , including non - bonded , bond , angle , and torsion potentials , can be derived from ibi by fitting the reference structural distributions ( such as rdf ) to those from atomistic simulations or experiments .    besides these force fields ,",
    "two characteristic models have been incorporated in galamost .",
    "the model details and the algorithms of the soft anisotropic particle model which aims to simulate the self - assembled superstructures and other properties of anisotropic particles have been described . by developing new anisotropic potentials , novel anisotropic particles can be described by this model .",
    "in addition , we have introduced a chain - growth polymerization model and its implementation algorithm on the gpu .",
    "many problems related to polymerization process can be studied by this model .",
    "the galamost allows us to simulate larger polymeric systems over longer time .",
    "the highly - optimized algorithm for each method guarantees the efficiency of the implementation on the gpu .",
    "the characteristics of galamost are embodied by the comparison of the performances for lj liquid and dpd liquid with hoomd - blue package .",
    "specific performance of each characteristic method in galamost has also been presented by benchmark comparisons with respect to corresponding cpu codes .",
    "the newly designed package galamost with these lately developed md techniques is dedicated to facilitate the studies of various polymeric systems ."
  ],
  "abstract_text": [
    "<S> galamost ( gpu - accelerated large - scale molecular simulation toolkit ) is a molecular simulation package designed to utilize the computational power of graphics processing units ( gpus ) . besides the common features of molecular dynamics packages </S>",
    "<S> , it is developed specially for the studies of self - assembly , phase transition , and other properties of polymeric systems at mesoscopic scale by employing some lately developed simulation techniques . to accelerate the simulations </S>",
    "<S> , galamost contains a hybrid particle - field molecular dynamics technique where particle - particle interactions are replaced by interactions of particles with density fields . </S>",
    "<S> moreover , the numerical potential obtained by bottom - up coarse - graining methods can be implemented in simulations with galamost . by combining these force fields and particle - density coupling method in galamost </S>",
    "<S> , the simulations for polymers can be performed with very large system sizes over long simulation time . </S>",
    "<S> in addition , galamost encompasses two specific models , i.e. , a soft anisotropic particle model and a chain - growth polymerization model , by which the hierarchical self - assembly of soft anisotropic particles and the problems related to polymerization can be studied , respectively . </S>",
    "<S> the optimized algorithms implemented on the gpu , package characteristics , and benchmarks of galamost are reported in detail .    </S>",
    "<S> polymers , molecular dynamics , gpu , anisotropic particles , polymerization . </S>"
  ]
}
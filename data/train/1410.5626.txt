{
  "article_text": [
    "distributed ip routing protocols , like ospf or is - is , have worked consistently and predictably in the current internet and have proven their reliable operation over time .",
    "software defined networking ( sdn ) , on the other hand , is a new networking paradigm based on a logically centralized and programmable control plane , that has gained a lot of attention recently .",
    "in fact , most network equipment vendors have announced the intention to build devices that support the openflow protocol , the de facto sdn messaging standard , or have already released openflow - capable products  @xcite .",
    "migrating to a fully sdn - enabled operation is however not without issues and new costly investments .",
    "in fact , isps are still reluctant regarding the change of the control plane paradigm in their networks from _ distributed _ to _ centralized _ , as distributed routing protocols operate consistently and predictably over years , efficiently control real life conditions , and reliably recover from network failures . a migration to sdn ,",
    "on the other hand , requires new hardware , new tools , and new expertise for network administrators , while sdn still fights with some hard - to - kill scalability preconceptions  @xcite .",
    "it is therefore no surprise that a lot of work has recognized the importance of the so - called sdn / ospf hybrid networking paradigm  @xcite and many openflow devices support a hybrid mode . in the current approaches ,",
    "the sdn nodes build their regular forwarding tables from ospf , while the sdn controller can insert higher priority rules ( also with more sophisticated matching parameters ) .        in this paper",
    ", we propose a new method for sdn / ospf hybrid networking .",
    "our method is fundamentally different from any previous work as we _ partition _ the initial ospf domain with sdn nodes into sub - domains , such that routing protocol updates for inter - sub - domain paths can be overridden at sdn border nodes by the sdn controller , e.g. , for traffic engineering purposes .",
    "this requires that neighboring sub - domains are connected _ only _ via sdn nodes and do not have any direct links otherwise .",
    "the advantage of our idea over other hybrid approaches is that our partitioning method can be implemented into an operational ospf network by operating the sdn nodes initially ( i.e. , during the migration ) in plain ospf mode .",
    "it follows that the sdn nodes in our scheme belong to _ all _ sub - domains to which they are connected .",
    "figure  [ partitioning ] illustrates the idea . when all sub - domain border nodes are replaced with sdn - enabled devices and an optimized routing has been determined",
    ", the sdn nodes start the update process in the individual sub - domains by flooding routing updates that are individually tuned per sub - domain .",
    "our method capitalizes on the advantages of distributed routing protocols by letting the routing _ inside _ each sub - domain be based on ospf solely so that it remains unchanged and stable at all times . at the same time",
    ", inter - sub - domain routes can be optimized by determining the routes in each traversed sub - domain .",
    "as the majority of traffic in non - trivial topologies has to traverse multiple sub - domains , our simulation results confirm that a few sdn nodes allow traffic engineering up to a degree that renders the full sdn deployment unnecessary .",
    "the rest of the paper is organized as follows : section  [ rel - work - section ] discusses the related work and section  [ arch - section ] presents the network architecture . the mathematical model of the traffic engineering logic is presented in section  [ math - section ] .",
    "section  [ performance - section ] presents the performance study and section  [ conclusion - section ] the conclusions .",
    "our method appears similar to the partitioning of an ospf domain into so - called ospf areas  @xcite , however the use is different , as ospf areas are used to simplify the administration of large topologies and to reduce the amount of protocol traffic .",
    "our intention is also different , as we partition the ospf domain to allow sdn - based traffic engineering by controlling the routes of inter - sub - domain traffic .",
    "the sdn / ospf hybrid networking paradigm has been previously analyzed and explained to a great deal in  @xcite .",
    "for the capability of the sdn controller to insert higher priority rules into the forwarding tables , this has also been coined as `` policy based routing on steroids ''  @xcite . the `` topology - based hybrid sdn model '' by vissicchio et al . in  @xcite",
    "differs from the other approaches in this respect , and is interesting to us , as it partitions the network into _ zones _ , whereby each node belongs to one zone only .",
    "however , the zone approach is different from our concept of sub - domains , as a zone is defined as a set of interconnected nodes controlled by the same paradigm ( i.e. , sdn _ or _",
    "ospf ) . in contrary ,",
    "a sub - domain in our approach is a subgraph of ospf routers , while the sdn nodes participate in the ospf .",
    "there are other architectural solutions for traffic engineering ( te ) , most prominently mpls .",
    "however , we argue that unlike our method , mpls requires a full deployment in the entire topology and it adds another architectural layer to the network ( including its overhead in the data plane ) . only a full migration to sdn would actually provide equal performance in terms of te .",
    "both solutions however , i.e. , mpls and sdn , assume the previously mentioned change to the _ centralized _ control plane paradigm .",
    "in contrast to these solutions , our method relies mainly on ospf , while optimized routes are _ injected _ into the regular protocol operation by individually tuned routing protocol updates .",
    "our results also show that our method requires relatively few sdn nodes to achieve the same traffic engineering capability to the one with the full mpls or sdn deployment .",
    "finally , an intuitively similar approach would be to partition the initial ospf domain and connect the sub - domains with bgp , while bgp can then be used for load balancing , like shown in  @xcite .",
    "the degree of freedom here regarding routing optimizations are in fact similar to what our method can offer .",
    "however , our method does not require the partitioning of the initial routing domain into multiple _",
    "autonomous systems _ and provides a clean separation from the bgp setup that operative wans have already in place .",
    "we propose an sdn / ospf hybrid network management subsystem , with a te scheme applicable to a single ospf routing domain . a routing update is referred to as link state advertisement",
    "( lsa ) and an ospf router participating in the protocol distributes all its topological information by flooding lsas throughout the entire network .",
    "figure  [ architecturefigure ] depicts the assumed layer  3 network management architecture .",
    "as it can be seen , the actual network includes both ospf and sdn routers .",
    "the sdn nodes are connected to the sdn controller and the proposed network management subsystem , referred to as _ hybrid network manager _ ( hnm ) , uses the controller s northbound api . as our partitioning - based method requires some sort of all - knowing centralized control intelligence , we consider the implementation as a sort of network application on top of the sdn controller .",
    "because the ospf protocol advertisements are essential here , the used sdn controller must be configurable to simply forward ( without any processing ) all lsas received by the sdn nodes to the hnm , as well as to simply forward the lsas generated by the hnm to the sdn nodes .      to gather all the data relevant to traffic engineering ( i.e. , topology , sdn node placement , traffic , and routing ) , we assume that the hnm implements a _ network information access interface _ that has comprehensive access to various functions and data in the openflow controller , and preprocesses and does the re - formating of this data for the te engine , as well as it extracts the routing information from the received lsas .",
    "the _ traffic engineering engine _ ( depicted as `` te engine '' block in figure  [ architecturefigure ] ) is our main module inside the hnm , which is used to determine the optimum routing based on the provided data .",
    "this module is aware of the ospf topology partitioning , optimizes the inter - sub - domain routing for load balancing , and computes the according ( tuned ) ospf link metrics that will be flooded as lsas into the individual sub - domains .",
    "the te engine then passes on the computed routes to the sdn controller s _ controller platform _",
    "( shown inside the openflow controller ) and forwards the lsas to the corresponding sdn routers .",
    "let us assume a single domain and single area ospf network .",
    "assuming that a few ospf routers have been replaced by the sdn - enabled devices , the first step for integration into an ospf networks is to configure the sdn nodes to operate autonomously in the ospf mode .",
    "when the proposed control and management architecture is fully deployed ( i.e. , the hnm is operating on top of the sdn controller ) , the sub - domain border nodes can be switched over to sdn mode . from this time on , the sdn nodes send the _ authentic _",
    "lsas ( depicted as the black packets marked with an _ a _ ) received from their ospf neighbors to the hnm , where they are processed . during the following initialization phase , the hnm is not altering any routing and replies with lsas according to regular ospf operation .",
    "this phase is used by the hnm to gather all required topology and routing information from the sdn controller and the lsas received from the ospf routers .",
    "this also involves the logical partitioning of the single ospf domain into sub - domains depending on the sdn node placement .",
    "when the initialization phase is completed ( i.e. , when the hnm has all data available ) , the hnm switches over to the load balancing ( or , te ) phase , in which it computes the optimum routes that are then translated into link metrics for the _ tuned _ lsas ( depicted as the red packets marked with a _ t _ ) .",
    "the hnm computes lsas for load balancing individually depending on the sub - domain and the advertising border node .",
    "it then forwards these lsas via the openflow channel to the corresponding sdn nodes , which distribute them in the corresponding sub - domain via flooding .      to enable the separation of the ospf domain into distinct sub - domains",
    ", a few sdn - enabled routers must be placed in strategic positions in the network , such that their removal partitions the topology into disconnected components .",
    "obviously , the way the network is clustered into sub - domains is determined solely by the operator s choice of nodes that will be exchanged with sdn nodes , i.e. , the sub - domains are determined only once in the beginning and can be changed only by adding new or changing the position of existing sdn nodes . in graph theory parlance",
    ", this means that the sdn - enabled routers must constitute one or multiple vertex separators .",
    "an example of how to partition a topology is shown in figure  [ partitioning ] , where it can be seen that the removal of any two sdn nodes separates the topology into two disconnected subgraphs . evidently , the sdn - enabled nodes have to be placed at the _ weak points _ of the topology from a network reliability perspective .",
    "however , it is one of the strengths of our hybrid scheme that in case of a failing sub - domain border node , ospf takes care of finding alternative paths via other border nodes .",
    "we control the routing of inter - sub - domain flows only by determining which border node is _ preferred _ over the others ( by the advertised link metrics ) , and in case that preferred node fails , the next least cost route via a different border node is automatically used .",
    "it should be noted that the partitioning we use in this paper is rather simplistic : for a given number of sdn - enabled routers , we chose those nodes to be replaced that result in the partitioning with the maximum number of inter - sub - domain flows in the network .",
    "better partitioning strategies are in fact likely to yield better results ( outside the scope here ) .",
    "the partitioning of the ospf area allows to advertise routing updates customized per sub - domain , which in turn enables to control the routing of traffic flows between the sub - domains .",
    "it should be noted that the ospf routing of sub - domain - internal traffic is not affected at all .",
    "figure  [ lsa ] depicts how lsa altering can be used to change the routing : the first sub - figure shows the original ospf network and how the two sdn - enabled nodes @xmath0 and @xmath1 are used to partition the domain into two distinct sub - domains ( containing the nodes @xmath2 in the here considered sub - domain , in which we observe the routing changes , and nodes @xmath3 in the other sub - domain respectively ) .",
    "the second sub - figure shows how paths can be controlled , when only the sub - domain - external link metrics are altered ( e.g. , by changing them to the red numbers ) before lsas are flooded into the considered sub - domain .",
    "the third sub - figure shows the more powerful control method , where even the advertised topology is altered ( i.e. , new _",
    "logical _ links can be advertised or existing links can be hidden ) .",
    "the corresponding routing paths for inter - sub - domain flows are shown in table  [ flowrouting ] , grouped in blocks according to the used lsa modification .",
    "it can be seen in table  [ flowrouting ] that by altering the link metrics in the lsas before being flooded to nodes @xmath4 and @xmath5 according to the way depicted in second sub - figure of figure  [ lsa ] , flows @xmath6 and @xmath7 change their routes so that the link between @xmath4 and @xmath5 is relieved and the load on the link between @xmath8 and @xmath9 increases instead .",
    "this poses just a slight modification , which might come in handy when link @xmath10 is overloaded while link @xmath11 provides enough spare capacity .",
    "the third sub - figure of figure  [ lsa ] shows the possible routing changes , when even topology information is altered in the flooded lsas : by advertising the non - existing links @xmath12 and @xmath13 , both with low link metrics , all traffic for @xmath8 exits the upper sub - domain via node @xmath1 and all traffic for @xmath9 exits via @xmath0 ( like shown in the third block in table  [ flowrouting ] ) , which would nt be possible only by altering link metrics of existing links .",
    ".routing of inter - sub - domain flows in figure  [ lsa ] depending on the advertised routing information [ cols=\"^,^,^\",options=\"header \" , ]",
    "in this paper , we proposed a new architecture for a hybrid sdn / ospf operation , in which a few sdn nodes are used to partition the ospf domain into multiple sub - domains .",
    "we have explained the requirements and assumptions regarding the corresponding network architecture , which suggested that our proposed method can be implemented with ease into common ospf networks .",
    "we showed how ospf link state advertisements can be tuned to optimize the routing .",
    "finally , we illustrated the idea with analysis and numerical results and showed that very few sdn routers are required to achieve results close to the optimum .",
    "the low number of required sdn routers also allows that a relatively high number of nodes can remain in the _ configure - once - never - touch - again _ operation , which is a known and desired feature from ospf .",
    "the results also suggest that the performance depends on the number of sub - domains in which the original topology can be partitioned into .",
    "the proposed hybrid management framework can be easily integrated into the ongoing architectural frameworks , such as ietf abno and opendaylight .",
    "the idea is promising and future work will extend the analysis to a wider range of topologies .",
    "we are also interested in more suitable and effective partitioning algorithms , especially in larger topologies .",
    "m. campanella , l. prete , p.l .",
    "ventre , m. gerola , e. salvadori , m. santuari , s. salsano , g. siracusano , _ `` bridging openflow / sdn with ip / mpls , '' _ poster presentation at terena networking conference , may 2014 , dublin , ireland"
  ],
  "abstract_text": [
    "<S> software defined networking ( sdn ) is an emerging network control paradigm focused on logical centralization and programmability . at the same time , distributed routing protocols , most notably ospf and is - is , are still prevalent in ip networks , as they provide shortest path routing , fast topological convergence after network failures , and , perhaps most importantly , the confidence based on decades of reliable operation . </S>",
    "<S> therefore , a hybrid sdn / ospf operation remains a desirable proposition . in this paper </S>",
    "<S> , we propose a new method of hybrid sdn / ospf operation . </S>",
    "<S> our method is different from other hybrid approaches , as it uses sdn nodes to _ partition _ an ospf domain into _ sub - domains _ thereby achieving the traffic engineering capabilities comparable to full sdn operation . </S>",
    "<S> we place sdn - enabled routers as sub - domain border nodes , while the operation of the ospf protocol continues unaffected . in this way </S>",
    "<S> , the sdn controller can tune routing protocol updates for traffic engineering purposes before they are flooded into sub - domains . </S>",
    "<S> while local routing inside sub - domains remains stable at all times , inter - sub - domain routes can be optimized by determining the routes in each traversed sub - domain . as the majority of traffic in non - trivial topologies has to traverse multiple sub - domains , </S>",
    "<S> our simulation results confirm that a few sdn nodes allow traffic engineering up to a degree that renders full sdn deployment unnecessary . </S>"
  ]
}
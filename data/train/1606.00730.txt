{
  "article_text": [
    "a network emerged from a complex , real - life problem can be considered known if one can determine its fundamental parameters .",
    "one way to ascertain that the chosen parameter set fully determines the important properties of the network is the following : one can randomly generate ensembles of synthetic networks compatible with the parameter set , then evaluate the similarities and differences among the original network and the generated ones .",
    "one important prerequisite for this procedure is to check the feasibility of the actual values of the given parameter set .    for graphs",
    "the most simple parameter is the degree sequence .",
    "there are myriad results and algorithms dealing with degree sequences : for example petersen , 1892 ; senior , 1950 ; tutte , 1954 ; gale , 1957 ; ryser , 1957 ; havel , 1957 ; erds and gallai , 1960 ; hakimi , 1962 ; fulkerson , 1964 ; edmonds , 1965 ; berge , 1981 ; just to name some .",
    "interestingly enough all those problems provide computationally easy algorithms .",
    "already the first few network applications pointed out fast , that the degree sequences can not differentiate efficiently among different type of real - life networks : gene regulatory networks and social networks with shared degree sequence tend to be scale - free , however , they have very different assortativity properties . in regulatory networks ,",
    "the large degree vertices are typically connected to small degree vertices , while in social networks , the large degree vertices are connected with large degree vertices . to cope with this phenomena ,",
    "new graph construction problems have been introduced , the _ joint degree matrix _ ( jdm ) and the _ partition adjacency matrix _ ( pam ) problems .",
    "( see papers @xcite and @xcite . )",
    "these problems are easy in the same way .",
    "mahadevan _ et al .",
    "_ introduced the @xmath9 series of graphs that subsumes all the basic degree - based characteristics of networks of increasing detail ( see @xcite ) .",
    "it is defined as a collection of distributions of @xmath1 s subgraphs of size @xmath10 , in which nodes are labelled by their degrees in @xmath1 .",
    "namely , the @xmath11-distribution is the degree sequence , the @xmath12-distribution is the joint degree distribution .",
    "thus , this approach naturally extends the degree sequence and the jdm problems and it is natural to consider the problem to construct a graph with prescribed @xmath11 , @xmath12 , @xmath13 , etc .",
    "distribution , and also natural to ask the computational complexity of these problems .    the problem of _ np_-completeness for graph construction in general was first suggested to us by z. toroczkai ( @xcite ) , which was posed later in @xcite .",
    "toroczkai also conjectured that the @xmath9 series problem becomes @xmath14-complete fast .",
    "intuitively its reason is simple : very fast we have too many constrains for the variables .",
    "it is an interesting question : how complicated must a degree sequence be to be computationally hard .    in this paper",
    "we show that the degree sequence construction may get _ np_-complete with much less constraints , namely the number of the first and ( exactly ) second neighbors of every vertex already constitutes such computationally hard problem .",
    "our proposed problem is also related to a problem on privacy issues of recommendation systems , see @xcite .",
    "assume that a bipartite graph is given with its adjacency matrix @xmath15 .",
    "the rows are the costumers , the columns are the items . while @xmath15 is unknown for privacy reasons , we know the expressions @xmath16 and @xmath17 . in other words , for any vertex pair in the same vertex class ( both for costumers and items ) the number of their common neighbors is known ( including for any vertex with itself , so the degree of this vertex is also given ) .",
    "the question is whether @xmath15 can be reconstructed from this data .",
    "the number of vertices @xmath18 for which the number of common neighbors is not zero gives the second order degree of @xmath0 .",
    "so we have all the data given in the second order degree sequence problem .",
    "however here we also have some extra data beyond the first and second order degrees .",
    "the complexity of deciding the graphicality of such matrix data is unknown to date .",
    "below we survey briefly what is known about the complexity of degree sequence problems .",
    "let @xmath1 be a simple , undirected graph , and let @xmath19 be its * degree sequence * denoted as @xmath20 it is well - known that it can be decided in polynomial time whether a given sequence @xmath21 is * graphical * with the greedy algorithm of havel and hakimi ( see @xcite ) .",
    "their algorithm can be easily extended to directed degree sequences and bipartite degree sequences .",
    "the joint degree sequence problem can still be solved with a greedy algorithm in polynomial time , see @xcite , @xcite , @xcite and @xcite .",
    "it is interesting to mention that tutte s @xmath22-factor theorem ( @xcite ) can be used directly to solve the degree sequence problem ( see @xcite ) , but not for the joint degree sequence problem .",
    "when more constraints are introduced , there are not known greedy algorithms to solve those degree sequence problems .",
    "however , tutte s @xmath22-factor theorem and edmonds famous blossom algorithm ( @xcite ) can be applied to solve such degree sequence problems efficiently .",
    "for example they can be used to find tripartite realizations of degree sequences with fixed vertex partitions , while no `` direct '' solution is known for these problems .",
    "another example is graph realizations with a given number of edges crossing a given bipartition ( see erds _ et .",
    "@xcite ) . here",
    "the vertex set @xmath23 is equipped with a degree sequence @xmath24 and a bipartition @xmath25 is given together with a natural number @xmath26 .",
    "we are looking for a graphical realization of @xmath24 where the number of _ crossing _ edges between @xmath27 and @xmath28 is exactly @xmath29 there is not known greedy type algorithm to solve this problem , but edmonds algorithm and some further considerations provide a polynomial time solution for it .    generally speaking ,",
    "the analogous hypergraph degree sequence problems are much harder .",
    "for example , there is no known good necessary and sufficient condition for the graphicality of a hypergraph degree sequence .",
    "the common thinking says that the majority of these problems should be _",
    "chvtal has already found a _",
    "np_-complete problem similar to hypergraph degree sequence questions in 1980 ( see @xcite ) : the _ intersection pattern _ of a hypergraph with @xmath30 hyper - edges is @xmath31 numbers , which give for all edge pairs the cardinality their intersection .",
    "he proved that the obviously defined intersection pattern problem is _ np_-complete even for 3-uniform hypergraphs .    in case of 3-uniform",
    "_ linear _ hypergraphs ( no two edges have two points in common ) the same problem becomes polynomially solvable ( see jacobson _",
    "however , for general 3-uniform hypergraphs , if we are given the edge pairs with two points intersection , then the corresponding decision problem becomes _",
    "np_-complete again ( see jacobson _ et . al . _",
    "@xcite ) .",
    "other known _ np_-complete hypergraph degree sequence problems are due to colburn , kocay and stinson ( @xcite ) : for a @xmath26-uniform hypergraph @xmath32 and vertex @xmath33 consider the @xmath34-uniform hypergraph @xmath35 consists of @xmath36 .",
    "we say that @xmath37 * subsumes * all the @xmath34-uniform hypergraph @xmath35 for each @xmath38 the paper proved that the following two problems are _ np_-complete :    1 .   given @xmath39 graphs ( i.e. 2-hypergraphs ) @xmath40 is there a 3-uniform hypergraph @xmath37 such that the subsumed graphs @xmath41 are @xmath42 ?",
    "given the degree sequences of @xmath39 graphs @xmath40 is there a 3-uniform hypergraph @xmath37 whose subsumed graphs @xmath41 have the same degree sequences ?",
    "the main purpose of this note is to find `` simple '' looking but _",
    "np_-complete degree sequence type problems . for this end",
    ", we are looking modest restriction sets for the classical degree sequence condition .    one particular restriction set was introduced at latest in @xcite ( alavi _ et.al._ ) : let @xmath0 be a vertex in the graph @xmath1 .",
    "the value @xmath43 is defined as the number of vertices at distance @xmath26 from @xmath0 .",
    "then @xmath4 denotes the usual degree of vertex @xmath5 denote @xmath44 @xmath45 @xmath46 or @xmath47 the * second order degree sequence * of the graph @xmath1 .",
    "[ def : sod ] the * second order degree sequence * problem is to decide whether a sequence of pairs of natural numbers @xmath8 is a second order degree sequence of a simple undirected graph @xmath1 .",
    "recently this problem was revived .",
    "for example , araujo - pardo and her colleagues studied the possible relations among the sizes of @xmath4 and @xmath48 ( @xcite ) .",
    "naturally one can study similar problems for second order degree sequences as for the more conservative ones .",
    "for example , saifullina and her colleagues developed several heuristic algorithms to build and sample simple graphs from their second order degree sequences ( @xcite ) .",
    "as it turns out , the heuristic approach here is adequate , since as we will show , the graphicality problem for the second order degree sequences is _ strongly _",
    "np_-complete_.    our main result is the following :    [ th : np ] the second order degree sequence problem in general is strongly _ np_-complete .",
    "it is clear that the problem is a member of the class _ np _ , since one can check in polynomial time whether a graph second order degree sequence is identical with the given double - sequence . in the next section",
    "we will demonstrate that it is _",
    "np_-complete indeed ; we will show some known _ np_-complete problems can be reduced to it .",
    "the following is a similar problem : denote @xmath49 the sum of the degrees of the neighbors of @xmath0 in the simple graph @xmath1 .",
    "this value is always larger than @xmath48 since , on one hand , @xmath0 itself occurs in @xmath50 times , on the other hand the neighbors neighbors may be overlapping . the problem to decide whether a pair @xmath51 is graphical will be called the * * problem",
    ". we will show in theorem [ th : d2 ] that this problem is strongly _",
    "first , we are going to construct a new _ np_-complete problem , called , then we will show how to reduce this problem to an instance of second order degree sequence problem .    for that end",
    ", assume that we are given @xmath39 items with @xmath52 positive integer weights such that the sum of the weights is @xmath53 we also have @xmath26 baskets with capacity @xmath54 with the properties that @xmath55    [ def : bf ] the  problem with parameters @xmath56 and @xmath57 is to find an ordered partition @xmath58 of the items , such that for @xmath59 we have @xmath60    it is clear that we can assume that each @xmath61 ( if this is not the case then we find a suitable filling for that basket , and forget the basket and its filler . )",
    "[ th : bf ] the   problem is strongly _",
    "np_-complete .",
    "we show that the so called p  problem can be reduced in polynomial time to the  problem .",
    "let @xmath28 and @xmath62 be positive integers with @xmath63 for each @xmath64 furthermore let @xmath65 the p  problem is to decide whether the numbers @xmath66 can be partitioned into @xmath67 classes of integers can be partitioned into triples that all have the same sum @xmath68 due to the numerical conditions , in a successful partition all partition classes have exactly 3 elements .",
    "this problem is known to be strongly _ np_-complete .",
    "( garey and johnson ( * ? ? ?",
    "* page 96 ) )    the polynomial reduction here is obvious : each basket has the parameter set @xmath69 a solution of this instance of the  problem is a solution of the p  problem .",
    "we are going to give two slightly different reduction processes .",
    "the general instance of the  problem will be reduced to a general second order  problem , while the p  problem will be reduced to a bipartite second order  problem .    to proceed with",
    "the proof of theorem [ th : np ] assume we are given a  problem with the parameters described in definition [ def : bf ] .",
    "we are going to construct an instance of the second order degree sequence problem corresponding to our  problem .    in the graph there are four different types of vertices : @xmath70 .    1 .   for all @xmath71 we have @xmath72 labeled * atoms * @xmath73 @xmath74 .",
    "altogether we have @xmath75 atoms . 2 .",
    "we have @xmath39 labeled * weight * vertices @xmath76 .",
    "we have @xmath26 labeled * basket * vertices @xmath77 4",
    ".   finally we have one * master * point @xmath78 .",
    "first we assume that @xmath79 and @xmath80 the second order degree sequence @xmath81 is defined as follows :    1 .   for any fix @xmath71",
    "each atom @xmath73 has the second order degree sequence @xmath82 2 .",
    "for each weight point @xmath83 its second order degree sequence is @xmath84 .",
    "3 .   for each basket",
    "vertex @xmath85 its second order degree sequence is @xmath86 .",
    "finally the master point @xmath78 has second order degree sequence @xmath87    now assume that a graph @xmath1 is a realization of this particular bf - problem . by conditions ( [ eq : cond1 ] ) and ( i ) any atom @xmath73 must be adjacent to a weight point of degree @xmath88 since the weight points with the same degree can not be distinguished therefore we just showed that @xmath73 is connected to @xmath89 by condition ( b ) we have @xmath90 therefore the @xmath91 as it required .",
    "since we determined the neighbors of all atoms , the master point must be adjacent to all other points , so to all weight points and all basket vertices .",
    "therefore @xmath78 has @xmath92 neighbors , and its second order degree is @xmath93 , as required .",
    "we state that no two weight points are adjacent .",
    "indeed , assume the opposite : if @xmath83 and @xmath94 are adjacent then @xmath95 since @xmath96 it is a contradiction .",
    "there are no two adjacent weight points , therefore each weight point is adjacent with exactly one basket vertex .",
    "since each basket point is adjacent with the master vertex therefore by conditions ( c ) and ( 1 ) there are no two adjacent basket vertices .",
    "finally that means that the adjacency relations between weight points and basket points in the graph @xmath1 provides a solution of our basket filling problem .",
    "the remaining point is to handle the cases when conditions ( [ eq : cond1 ] ) or ( [ eq : cond2 ] ) do not hold .",
    "as already mentioned we can assume that all @xmath97 then we increase the parameters @xmath72 and @xmath98 slightly ( that is polynomially ) as follows : we multiply all @xmath72 and @xmath99 with the value @xmath100 for this new instance conditions ( [ eq : cond1 ] ) or ( [ eq : cond2 ] ) hold automatically and any solution of the new problem provides a solution to the original problem as well .",
    "this finishes the proof of theorem [ th : np ] .",
    "@xmath101    ( 0,8 ) circle ( 1.5pt ) ; ( 0,7.7 ) circle ( 1.5pt ) ; ( 0,7.4 ) circle ( 1.5pt ) ; at ( 0,7.0 ) @xmath102 ; at ( 0,5.5 ) @xmath103 ; at ( 0,5 ) @xmath103 ; ( 0,4 ) circle ( 1.5pt ) ; ( 0,3.7 ) circle ( 1.5pt ) ; ( 0,3.4 ) circle ( 1.5pt ) ; ( 0,3.1 ) circle ( 1.5pt ) ; at ( 0,2.5 ) @xmath104 ; at ( 0,1.5 ) @xmath103 ; ( 0,0 ) circle ( 1.5pt ) ; ( 0,-.3 ) circle ( 1.5pt ) ; ( 0,-.6 ) circle ( 1.5pt ) ; ( 0,-.9 ) circle ( 1.5pt ) ; ( w_1 ) at ( 2,7.7 ) [ circle , draw ] @xmath105 ; at ( 2,8.3 ) @xmath106 ; ( 0,8 )  ( w_1 ) ; ( 0,7.7 )  ( w_1 ) ; ( 0,7.4 )  ( w_1 ) ; at ( 2,5.5 ) @xmath103 ; ( w_i ) at ( 2,3.5 ) [ circle , draw ] @xmath107 ; ( 0,4 )  ( w_i ) ; ( 0,3.7 )  ( w_i ) ; ( 0,3.4 )  ( w_i ) ; ( 0,3.1 )  ( w_i ) ; at ( 2,1.5 ) @xmath103 ; ( w_n ) at ( 2,-.5 ) [ circle , draw ] @xmath108 ; ( 0,0 )  ( w_n ) ; ( 0,-.3 )  ( w_n ) ; ( 0,-.6 )  ( w_n ) ; ( 0,-.9 )  ( w_n ) ; ( o ) at ( 5,3.5 ) [ circle , draw ] @xmath109 ; at ( 5.2,2.9 ) @xmath110 ; ( o )  ( w_1 ) ; ( o )  ( w_i ) ; ( o )  ( w_n ) ; ( b_1 ) at ( 9,7.5 ) [ circle , draw ] @xmath111 ; ( b_l ) at ( 9,4.5 ) [ circle , draw ] @xmath112 ; ( b_k ) at ( 9,1.5 ) [ circle , draw ] @xmath113 ; ( o )  ( b_1 ) ; ( o )  ( b_l ) ; ( o )  ( b_k ) ; ( w_1 )  ( b_1 ) ; ( 2,6.5 )  ( b_1 ) ; ( w_i ) .. controls ( 5,4.8 ) .. ( b_l ) ; ( 2,6 )  ( b_l ) ; ( 2,1 )  ( b_l ) ; ( w_n )  ( b_k ) ; ( 2,.7 )  ( b_k ) ; at ( 10,3.7 ) @xmath114 ;    now we present the second reduction process what shows that    [ th : bi ] the second order degree sequence problem on bipartite graphs is also strongly _ np_-complete",
    ".    we will show that any p  problem can be polynomially reduced to a second order degree sequence problem on bipartite graphs .",
    "so we are given a multiset @xmath115 of @xmath116 positive integers @xmath66 with @xmath117 and we want to decide whether @xmath115 can be partitioned into @xmath67 triplets @xmath118 such that the sum of the numbers in each subset is equal to @xmath28 . in a successful solution",
    "each partition class consists of three numbers .",
    "we will assume that @xmath119    the construction of the bipartite second order degree sequence problem is very similar to the previous one .",
    "but we have a good use of the fact , that all baskets have the same weight capacity ( @xmath120 ) , and the same @xmath121 capacity , so we can get rid of the master point :    we will represent our partition problem with a bipartite graph what consists of @xmath122 * atoms * , @xmath123 * weight * points finally @xmath67 * basket * points . in the graphical representation of a solution of the p  problem",
    "each weight point will be connected to the necessary number of atoms and connected to exactly one basket point .",
    "finally each basket point is adjacent with three weight points . by these conditions ,",
    "the graph is automatically a bipartite one : one class contains all the atoms and basket points , while the other one consists of all the weight points .",
    "the second order degree sequence is as follows :",
    "each atom belonging to weight point representing @xmath66 has second order degree sequence @xmath124 ( the first neighbor is the weight point , the second neighbors are the other atoms , connected to the weight point , and one basket point . ) 2 .",
    "the weight point representing the number @xmath66 has second order degree @xmath125 ( the first neighbors are the atoms and one basket point , the second neighbors are the other two weight points connected to the basket point . ) 3 .",
    "a basket point has second order degree sequence @xmath126 ( the neighbors are weight points , and the second neighbors are atoms . )    now assume that one can find a solution to the defined second order degree sequence problem .",
    "then :    1 .",
    "no atom can be connected to another atom ( otherwise the second order degree is 0 ) .",
    "no atom can be connected to a basket point ( otherwise the second order degree is @xmath127 ) .",
    "no weight point can be connected to another weight point ( otherwise the second order degree is @xmath128 ) .",
    "3 .   all basket points must be used against weight points .",
    "in recent years there has been a large ( and growing ) interest in real - life social and biological networks .",
    "one important distinction between these two network types lies in their overall structure : the first type typically have a few very high degree vertices and many low degree vertices with high _ assortativity _ ( where a vertex is likely to be adjacent to vertices of similar degree ) , while the second kind is generally _ disassortative _ ( in which low degree vertices tend to attach to those of high degree ) .",
    "it is well known , the _ degree sequence _",
    "alone can not capture these differences .",
    "there are several approaches to address this problem .",
    "one way to ease this problem is the jdm model ( @xcite ) :    let @xmath129 be an @xmath39-vertex graph with _ degree sequence _",
    "@xmath130 @xmath131 .",
    "we denote the maximum degree by @xmath132 , and for @xmath133 , the set of all vertices of degree @xmath3 is @xmath134 . the _ degree spectrum _",
    "@xmath135 is a vector with @xmath132 components , where @xmath136 gives the number of vertices of degree @xmath3 adjacent to @xmath0 in the graph @xmath1 .",
    "( this notion was originally introduced in @xcite . ) while in _ graphical realizations _ of a degree sequence @xmath137 the degree of any particular vertex @xmath0 is prescribed , its degree spectrum may vary .",
    "[ def ] the _ joint degree matrix _ ( jdm ) @xmath138 $ ] of the graph @xmath1 is a @xmath139 matrix where @xmath140 .",
    "if , for a @xmath141 matrix @xmath15 there exists a graph @xmath1 such that @xmath142 , then @xmath15 is called a _",
    "graphical jdm_.          another way to measure the distance from `` good '' assortativity can be the following formulation ( actually , similar parameters were suggested earlier ) . in the simple graph",
    "@xmath1 denote @xmath49 the * * of vertex",
    "@xmath150 @xmath151 this is of course greater than @xmath48 since @xmath0 is counted @xmath50 times in it , furthermore there may be a lot of `` overlapping '' second neighbors .",
    "now a graph should have high assortativity , if @xmath49 is roughly @xmath152 possible questions :    1 .",
    "it is given @xmath153 and @xmath49 but @xmath19 is unknown .",
    "is it graphical ? 2 .",
    "it is given @xmath153 and for all @xmath3 the values @xmath154 are known .",
    "is it graphical ? 3 .",
    "the sequences @xmath155 are given .",
    "is it graphical ? 4 .",
    "the jdm matrix @xmath143 and @xmath156 are given .",
    "is it graphical ? 5 .",
    "we know @xmath19 and for each @xmath3 we know @xmath157 is it graphical ?",
    "we will describe an instance of the p  problem with a similar graph gadget what was used in the proof of theorem [ th : bi ] : we have @xmath122 atoms , @xmath123 weight points and @xmath67 basket vertices , where each weight point has weight satisfying @xmath159 .    for the atoms : @xmath160 and @xmath161",
    "( there is only one neighbor , and it has degree @xmath162 ) then for the weight point @xmath83 we have : @xmath163 ( the extra degree is the basket vertex ) and @xmath164 ( each atom next to @xmath83 has degree 1 , and the neighboring basket vertex has three neighbors . ) finally for the basket vertex @xmath165 we have @xmath166 and @xmath167 since each weight point also incident with the basket vertex itself .",
    "assume that @xmath1 is a realization of this problem .",
    "then the atom @xmath168 must be adjacent to a weight point of weight @xmath169 then each weight point has just one free degree .",
    "two weight points can not be connected because then its @xmath170 would be much greater then @xmath171 so each basket vertex must be connected to three weight points .",
    "we believe that problem ( e ) is also _ np_-complete . for that end we can set up the following integer feasibility region and we think that this special integer feasibility problem is _ np_-complete .",
    "more precisely :        for degree @xmath3 we have to find @xmath175 integers with @xmath176 with sum @xmath177 such that the defined joint degree matrix is graphical .",
    "so we are looking for the unknown matrix @xmath178 $ ] with dimensions @xmath179 such that : @xmath180 the first two equalities describe the partition problem s constrain , the third one shows the symmetry of the jdm , while the last one ensures that the given jdm is graphical .",
    ", _ generation of graphs with prespecified sequences of degrees of order two and the isomorphism detection problem _ , ( in russian ) , stochastic optimization in informatics , univ .",
    "saint petersburg , 10 ( 1 ) ( 2014 ) , 2436 .",
    "issn 1992 - 2922        , _ on some algorithms for the recovery of a graph by its vector of second - order degrees _",
    "heuristic algorithms and distributed computing ; samara state university 1 ( 2 ) ( 2014 ) , 4354 ."
  ],
  "abstract_text": [
    "<S> degree sequence ( ) problems are around for at least hundred twenty years , and with the advent of network science , more and more complicated , structured  problems were invented . </S>",
    "<S> interestingly enough all those problems so far are computationally easy . </S>",
    "<S> it is clear , however , that we will find soon computationally hard   problems . in this paper </S>",
    "<S> we want to find such hard  problems with relatively simple definition .    for a vertex @xmath0 in the simple graph </S>",
    "<S> @xmath1 denote @xmath2 the number of vertices at distance exactly @xmath3 from @xmath0 . </S>",
    "<S> then @xmath4 is the usual degree of vertex @xmath5 the vector @xmath6 @xmath7 is the * second order degree sequence * of the graph @xmath1 . in this note </S>",
    "<S> we show that the problem to decide whether a sequence of natural numbers @xmath8 is a second order degree sequence of a simple undirected graph @xmath1 is strongly _ </S>",
    "<S> np_-complete . </S>",
    "<S> then we will discuss some further _ </S>",
    "<S> np_-complete  problems .    </S>",
    "<S> degree sequences of simple graphs ; second order degree sequences ; * basket filling * problem ; * * </S>"
  ]
}
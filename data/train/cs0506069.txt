{
  "article_text": [
    "many efforts have been devoted to the study of the performances of the davis - putnam - loveland - logemann ( dpll ) procedure @xcite , and more generally , resolution proof complexity for combinatorial problems with randomly generated instances .",
    "two examples are random @xmath3-satisfiability ( @xmath3-sat ) , where an instance @xmath4 is a uniformly and randomly chosen set of @xmath5 disjunctions of @xmath3 literals built from @xmath1 boolean variables and their negations ( with no repetition and no complementary literals ) , and random graph @xmath3-coloring ( @xmath3-col ) , where an instance @xmath4 is an erds - rnyi random graph from @xmath6 _ i.e. _ with average vertex degree @xmath7 .    originally , efforts were concentrated on the random width distribution for @xmath3-sat , where each literal appear with a fixed probability .",
    "franco , purdom and collaborators showed that simplified versions of dpll had polynomial average - case complexity in this case , see @xcite for reviews .",
    "it was then recognized that the fixed clause length ensemble might provide harder instances for dpll @xcite .",
    "chvtal and szemerdi indeed showed that dpll proof size is w.h.p .",
    "exponentially large ( in @xmath1 at fixed ratio @xmath8 ) for an unsatisfiable instance @xcite .",
    "later on , beame _ et al . _",
    "@xcite showed that the proof size was w.h.p .",
    "bounded from above by @xmath9 ( for some constant @xmath7 ) , a decreasing function of @xmath8 .",
    "as for the satisfiable case , frieze and suen showed that backtracking is irrelevant at small enough ratios @xmath8 ( @xmath10 with the generalized unit clause heuristic , to be defined below ) @xcite , allowing dpll to find satisfying assignment in polynomial ( linear ) time .",
    "achlioptas , beame and molloy proved that , conversely , at ratios smaller than the generally accepted satisfiability threshold , dpll takes w.h.p . exponential time to find a satisfying assignment @xcite .",
    "altogether these results provide explanations for the ` easy - hard - easy ' ( or , more precisely , ` easy - hard - less hard ' ) pattern of complexity experimentally observed when running dpll on random 3-sat instances @xcite .",
    "a precise calculation of the average size of the search space explored by dpll ( and # dpll , a version of the procedure solving the enumeration problems # sat and # col ) as a function of the parameters @xmath1 and @xmath8 or @xmath7 is difficult due to the statistical correlations between branches in the search tree resulting from backtracking .",
    "heuristic derivations were nevertheless proposed by cocco and monasson based on a ` dynamic annealing ' assumption @xcite .",
    "hereafter , using the linearity of expectation , we show that ` dynamic annealing ' turns not to be an assumption at all when the expected tree size is concerned .",
    "we first illustrate the approach , based on the use of recurrence relations for the generating functions of the number of nodes at a given height in the tree , on the random @xmath3-sat problem and the simple unit clause ( uc ) branching heuristic where unset variables are chosen uniformly at random and assigned to true or false uniformly at random @xcite .",
    "consider the following counting algorithm .3 cm    procedure # dpll - uc[@xmath4,a , s ]    call @xmath11 what is left from instance @xmath4 given partial variable assignment @xmath12 ;    \\1 .",
    "if @xmath11 is empty , @xmath13 , return ; _ ( solution leaf )",
    "if there is an empty clause in @xmath11 , return ; _ ( contradiction leaf ) _",
    "\\3 . if there is no empty clause in @xmath11 , let @xmath141-clauses@xmath15 ,    .6 cm if @xmath16 , pick any 1-clause , say , @xmath17 , and call dpll[@xmath4,a@xmath18 ; _ ( unit - propagation ) _",
    ".6 cm if @xmath19 , pick up an unset literal uniformly at random , say , @xmath17 , and call    2.1 cm dpll[@xmath4,a@xmath18 , then dpll[@xmath4,a@xmath20 ; _ ( variable splitting ) _    end ;    # dpll - uc , called with @xmath21 and @xmath22 , returns the number @xmath23 of solutions of the instance @xmath4 ; the history of the search can be summarized as a search tree with leaves marked with solution or contradiction labels . as the instance to be treated and",
    "the sequence of operations done by # dpll - uc are stochastic , so are the numbers @xmath24 and @xmath25 of solution and contradiction leaves respectively .",
    "let @xmath26 and @xmath27 .",
    "the expectations of the numbers of solution and contradiction leaves in the # dpll - uc search tree of random @xmath3-sat instances with @xmath1 variables and @xmath28 clauses are , respectively , @xmath29 with @xmath30 and @xmath31}\\omega ( t,\\alpha , k ) } $ ] .",
    "an immediate consequence of theorem 1 is that the expectation value of the total number of leaves , @xmath32 , is @xmath33 .",
    "this result was first found by mjean , morel and reynaud in the particular case @xmath34 and for ratios @xmath35 @xcite .",
    "our approach not only provides a much shorter proof , but can also be easily extended to other problems and more sophisticated heuristics , see theorems 2 and 3 below .",
    "in addition , theorem 1 provides us with some information about the expected search tree size of the decision procedure dpll - uc , corresponding to # dpll - uc with line 1 replaced with : if @xmath11 is empty , output satisfiable ; halt .",
    "let @xmath36 , the root of @xmath37 e.g. @xmath38 . the average size of dpll - uc search trees for random @xmath3-sat instances with @xmath1 variables and @xmath28 clauses equals @xmath39 .",
    "functions @xmath40 are shown in figure 1 in the @xmath41 case .",
    "they coincide and are equal to @xmath42 for @xmath43 , while @xmath44 for @xmath45 .",
    "in other words , for @xmath46 , most leaves in # dpll - uc trees are contradiction leaves , while for @xmath47 , both contradiction and solution leaf numbers are ( to exponential order in @xmath1 ) of the same order . as for dpll - uc trees , notice that @xmath48 .",
    "this behaviour agrees with beame et al.s result ( @xmath49 ) for the average resolution proof complexity of unsatisfiable instances @xcite .",
    "corollary 1 shows that the expected dpll tree size can be estimated for a whole range of @xmath8 ; we conjecture that the above expression holds for ratios smaller than @xmath50 _ i.e. _ down to @xmath51 roughly . for generic @xmath26",
    ", we have @xmath52 ; the decrease of @xmath53 with @xmath8 is therefore slower and slower as @xmath3 increases .",
    "so far , no expression for @xmath2 has been obtained for more sophisticated heuristics than uc .",
    "we consider the generalized unit clause ( guc ) heuristic @xcite where the shortest clauses are preferentially satisfied .",
    "the associated decision procedure , dpll - guc , corresponds to dpll - uc with line 3 replaced with : pick a clause uniformly at random among the shortest clauses , and a literal , say , @xmath17 , in the clause ; call dpll[@xmath4,a@xmath18 , then dpll[@xmath4,a@xmath20 .",
    "define @xmath54 , @xmath55 the solution of the ordinary differential equation @xmath56 such that @xmath57 , and @xmath58 \\quad .\\ ] ] let @xmath59 , the root of @xmath60 .",
    "the expected size of dpll - guc search tree for random 3-sat instances with @xmath1 variables and @xmath28 clauses is @xmath61 .",
    "notice that , at large @xmath8 , @xmath62 ^ 2 \\frac 1\\alpha = \\frac { 0.29154 ... }\\alpha   } $ ] in agreement with the @xmath63 scaling established in @xcite .",
    "furthermore , the multiplicative factor is smaller than the one for uc , showing that dpll - guc is more efficient than dpll - uc in proving unsatisfiability .",
    ".3 cm a third application is the analysis of the counterpart of guc for the random 3-col problem .",
    "the version of dpll we have analyzed operates as follows @xcite .",
    "initially , each vertex is assigned a list of 3 available colors . in the course of the procedure ,",
    "a vertex , say , @xmath64 , with the smallest number of available colors , say , @xmath65 , is chosen at random and uniformly .",
    "dpll - guc then removes @xmath64 , and successively branches to the @xmath65 color assignments corresponding to removal of one of the @xmath65 colors of @xmath64 from the lists of the neighbors of @xmath64 .",
    "the procedure backtracks when a vertex with no color left is created ( contradiction ) , or no vertex is left ( a proper coloring is found ) .",
    "define @xmath66 } $ ] .",
    "let @xmath67 , the root of @xmath68 .",
    "the expected size of dpll - guc search tree for deciding 3-col on random graphs from @xmath69 with @xmath1 vertices is @xmath70 .",
    "asymptotically , @xmath71 in agreement with beame et al.s scaling ( @xmath72 ) @xcite .",
    "an extension of theorem 3 to higher values of the number @xmath3 of colors gives @xmath73 ^{1/(k-2 ) } c^{-(k-1)/(k-2)}}$ ] .",
    "this result is compatible with the bounds derived in @xcite , and suggests that the @xmath74 dependence could hold w.h.p .",
    "( and not only in expectation ) .",
    "let @xmath4 be an instance of the 3-sat problem defined over a set of @xmath1 boolean variables @xmath75 .",
    "a partial assignment @xmath12 of length @xmath76 is the specification of the truth values of @xmath77 variables in @xmath75 .",
    "we denote by @xmath11 the residual instance given @xmath12 .",
    "a clause @xmath78 is said to be a @xmath17-clause with @xmath79 if the number of false literals in @xmath7 is equal to @xmath80 .",
    "we denote by @xmath81 the number of @xmath17-clauses in @xmath11 . the instance @xmath4 is said to be satisfied under @xmath12 if @xmath82 for @xmath83 , unsatisfied ( or violated ) under @xmath12 if @xmath84 , undetermined under @xmath12 otherwise .",
    "the clause vector of an undetermined or satisfied residual instance @xmath11 is the three - dimensional vector @xmath85 with components @xmath86 .",
    "the search tree associated to an instance @xmath4 and a run of # dpll is the tree whose nodes carry the residual assignments @xmath12 considered in the course of the search .",
    "the height @xmath77 of a node is the length of the attached assignment .",
    ".3 cm    it was shown by chao and franco @xcite that , during the first descent in the search tree _",
    "i.e. _ prior to any backtracking , the distribution of residual instances remains uniformly random conditioned on the numbers of @xmath17-clauses .",
    "this statement remains correct for heuristics more sophisticated than uc _",
    "e.g. _ guc , sc@xmath87 @xcite , and was recently extended to splitting heuristics based on variable occurrences by kaporis , kirousis and lalas @xcite . clearly , in this context , uniformity is lost after backtracking enters into play ( with the exception of suen and frieze s analysis of a limited version of backtracking @xcite ) . though this limitation appears to forbid ( and",
    "has forbidden so far ) the extension of average - case studies of backtrack - free dpll to full dpll with backtracking , we point out here that it is not as severe as it looks .",
    "indeed , let us forget about how # dpll or dpll search tree is built and consider its final state .",
    "we refer to a branch ( of the search tree ) as the shortest path from the root node ( empty assignment ) to a leaf .",
    "the two key remarks underlying the present work can be informally stated as follows .",
    "first , the expected size of a # dpll search tree can be calculated from the knolwedge of the statistical distribution of ( residual instances on ) a single branch ; no characterization of the correlations between distinct branches in the tree is necessary .",
    "secondly , the statistical distribution of ( residual instances on ) a single branch is simple since , along a branch , uniformity is preserved ( as in the absence of backtracking ) .",
    "more precisely ,    [ from chao & franco @xcite ] let @xmath11 be a residual instance attached to a node @xmath12 at height @xmath77 in a # dpll - uc search tree produced from an instance @xmath4 drawn from the random 3-sat distribution .",
    "then the set of @xmath17-clauses in @xmath11 is uniformly random conditioned on its size @xmath88 and the number @xmath89 of unassigned variables for each @xmath79 .",
    "the above lemma is an immediate application of lemma 3 in achlioptas card game framework which establishes uniformity for algorithms ( _ a _ ) ` pointing to a particular card ( clause ) ' , or ( _ b _ ) naming a variable that has not yet been assigned a value ( section 2.1 in ref .",
    "the operation of # dpll - uc along a branch precisely amounts to these two operations : unit - propagation relies on action ( _ a _ ) , and variable splitting on ( _ b _ ) .",
    "lemma 1 does not address the question of uniformity among different branches .",
    "residual instances attached to two ( or more ) nodes on distinct branches in the search tree are correlated .",
    "however , these correlations can be safely ignored in calculating the average number of residual instances , in much the same way as the average value of the sum of correlated random variables is simply the sum of their average values .",
    "let @xmath90 be the expectation of the number of undetermined residual instances with clause vector @xmath85 at height @xmath77 in # dpll - uc search tree , and @xmath91 its generating function .",
    "then , for @xmath92 , -.4 cm @xmath93 where @xmath94 stand for the functions @xmath95 , @xmath96 , @xmath97 , and @xmath98",
    ". the generating function @xmath99 is entirely defined from recurrence relation ( [ eqev ] ) and the initial condition @xmath100 .",
    "let @xmath101 denote the kronecker function ( @xmath102 if @xmath103 , @xmath104 otherwise ) , @xmath105 the binomial distribution .",
    "let @xmath12 be a node at height @xmath77 , and @xmath11 the attached residual instance .",
    "call @xmath85 the clause vector of @xmath11 .",
    "assume first that @xmath106 .",
    "pick up one 1-clause , say , @xmath17 . call",
    "@xmath107 the number of @xmath65-clauses that contain @xmath108 or @xmath17 ( for @xmath109 ) . from lemma 1 ,",
    "the @xmath110 s are binomial variables with parameter @xmath111 among @xmath112 ( the 1-clause that is satisfied through unit - propagation is removed ) . among the @xmath107 clauses",
    ", @xmath113 contained @xmath108 and are reduced to @xmath114-clauses , while the remaining @xmath115 contained @xmath17 and are satisfied and removed . from lemma 1",
    "again , @xmath113 is a binomial variable with parameter @xmath116 among @xmath107 .",
    "the probability that the instance produced has no empty clause ( @xmath117 ) is @xmath118 .",
    "thus , setting @xmath119 , @xmath120 = \\sum _ { z_3=0 } ^{c_3 } b_{z_3}^ { c_3,3\\mu } \\sum _ { w_2=0}^{z_3 }   b_{w_2}^{z_3,\\frac 12 } \\sum_{z_2=0}^{c_2 } b_{z_2}^ { c_2,2\\mu }   \\sum _ { w_1=0}^{z_2 } b_{w_1}^{z_2,\\frac 12 } \\nonumber \\\\ & &   \\times\\ \\sum _",
    "{ z_1=0}^{c_1 - 1 } b_{z_1}^{c_1 - 1,\\mu }   \\frac 1{2^{z_1 } } \\ , \\delta _ { c'_3 - ( c_3 - z_3 ) } \\delta _ { c'_2- ( c_2 -z_2+w_2 ) } \\delta _ { c ' _ 1- ( c_1 - 1 -z_1+w_1 ) } \\nonumber\\end{aligned}\\ ] ] expresses the probability that a residual instance at height @xmath77 with clause vector @xmath85 gives rise to a ( non - violated ) residual instance with clause vector @xmath121 at height @xmath122 through unit - propagation .",
    "assume now @xmath123 .",
    "then , a yet unset variable is chosen and set to true or false uniformly at random .",
    "the calculation of the new vector @xmath121 is identical to the unit - propagation case above , except that : @xmath124 ( absence of 1-clauses ) , and two nodes are produced ( instead of one ) .",
    "hence , @xmath125 & = & 2\\sum _ { z_3=0 } ^{c_3 } b_{z_3}^ { c_3,3\\mu } \\sum _ { w_2=0}^{z_3 } b_{w_2 } ^{z_3,\\frac 12 }   \\sum_{z_2=0}^{c_2 }",
    "b_{z_2}^ { c_2,2\\mu }   \\sum _ { w_1=0}^{z_2 } b_{w_1}^{z_2,\\frac 12 } \\nonumber \\\\ & & \\times\\ \\delta _ { c'_3 - ( c_3 - z_3 ) } \\delta _ { c'_2- ( c_2 -z_2+w_2 ) } \\delta _ { c ' _ 1- w_1 }   \\nonumber \\end{aligned}\\ ] ] expresses the expected number of residual instances at height @xmath122 and with clause vector @xmath121 produced from a residual instance at height @xmath77 and with clause vector @xmath85 through uc branching .    now , consider all the nodes @xmath126 at height @xmath77 , with @xmath127 .",
    "let @xmath128 be the operation done by # dpll - uc on @xmath126 .",
    "@xmath128 represents either unit - propagation ( literal @xmath129 set to true ) or variable splitting ( literals @xmath130 set to t and f on the descendent nodes respectively ) .",
    "denoting by @xmath131 the expectation value of a quantity @xmath75 over variable @xmath132 , @xmath133 \\right ) } $ ] where @xmath134 is the number ( 0 , 1 or 2 ) of residual instances with clause vector @xmath121 produced from @xmath126 after # dpll - uc has carried out operation @xmath128 . using the linearity of expectation ,",
    "@xmath135 \\big)\\right ) = \\mathbf{e}_{{\\cal l } } \\left ( \\sum _ { i=1}^{\\cal l }   m[\\vec c',\\vec c_i ; t ] \\right ) } $ ]    where @xmath136 is the clause vector of the residual instance attached to @xmath126 , and @xmath137 = \\big ( 1-\\delta_{c_1 } \\big )     \\ , m _",
    "{ p } [ \\vec c',\\vec c ; t ]   + \\delta _ { c_1}\\ ,   m_{uc } [ \\vec c',\\vec c ; t]$ ] .",
    "gathering assignments with identical clause vectors gives the reccurence relation @xmath138 @xmath139    \\",
    "l ( \\vec c , t)}$ ] .",
    "recurrence relation ( [ eqev ] ) for the generating function is an immediate consequence .",
    "the initial condition over @xmath99 stems from the fact that the instance is originally drawn from the random 3-sat distribution , @xmath140 .",
    "the asymptotic analysis of @xmath99 relies on the following technical lemma :    let @xmath141 , with @xmath1420;1[$ ] and @xmath143 .",
    "define @xmath144 . then , in the large @xmath1 limit , @xmath145 ) \\le 2^{n ( t + \\alpha \\log _ 2 \\gamma(0,0,t ) ) + o(n)}}$ ] and @xmath146\\big ) =    \\displaystyle{2^{n(t + \\alpha \\log _ 2 \\gamma(x_2,x_3,t ) ) + o(n)}}$ ] .    due to space limitations",
    ", we give here only some elements of the proof .",
    "the first step in the proof is inspired by knuth s kernel method @xcite : when @xmath147 , @xmath148 and recurrence relation ( [ eqev ] ) simplifies and is easier to handle .",
    "iterating this equation then allows us to relate the value of @xmath99 at height @xmath77 and coordinates @xmath149 to the ( known ) value of @xmath99 at height 0 and coordinates @xmath150 which are functions of @xmath151 , and @xmath8 .",
    "the function @xmath152 is the value of @xmath153 when @xmath154 are sent to infinity at fixed ratio @xmath155 .",
    "the asymptotic statement about @xmath156 comes from the previous result and the fact that the dominant terms in the sum defining @xmath157 are the ones with @xmath158 close to @xmath77 .",
    "let @xmath159 be the expected number of contradiction leaves of height @xmath77 in the # dpll - uc resolution tree of random 3-sat instances with @xmath1 variables and @xmath28 clauses , and @xmath160 . then , for @xmath161 $ ] and @xmath162 , @xmath163,\\alpha ) + o(1 ) \\le \\max _ { h\\in[\\epsilon , ; t ] }    \\omega ( h,\\alpha,3 )   } $ ] where @xmath164 is defined in theorem 1 .",
    "observe that a contradiction may appear with a positive ( and non  exponentially small in @xmath1 ) probability as soon as two 1-clauses are present .",
    "these 1-clauses will be present as a result of 2-clause reduction when the residual instances include a large number ( @xmath165 ) of 2-clauses .",
    "as this is the case for a finite fraction of residual instances , @xmath166 is not exponentially larger than @xmath167 .",
    "use of the monotonicity of @xmath99 with respect to @xmath168 and lemma 2 gives the announced lower bound ( recognize that @xmath169 ) . to derive the upper bound , remark that contradictions leaves can not be more numerous than the number of branches created through splittings ; hence @xmath167 is bounded from above by the number of splittings at smaller heights @xmath158 , that is , @xmath170 .",
    "once more , we use the monotonicity of @xmath99 with respect to @xmath168 and lemma 2 to obtain the upper bound .",
    "the complete proof will be given in the full version .    _",
    "( theorem 1 ) _ by definition , a solution leaf is a node in the search tree where no clauses are left ; the average number @xmath24 of solution leaves is thus given by @xmath171 .",
    "a straightforward albeit useful upper bound on @xmath24 is obtained from @xmath172 . by definition of the algorithm # dpll",
    ", @xmath173 is the average number of solutions of an instance with @xmath28 clauses over @xmath1 variables drawn from the random 3-sat distribution , @xmath174 @xcite .",
    "this upper bound is indeed tight ( to within terms that are subexponential in @xmath1 ) , as most solution leaves have heights equal , or close to @xmath1 . to show this ,",
    "consider @xmath160 , and write @xmath175\\ ] ] with @xmath176 . from lemma 2 ,",
    "@xmath177 with @xmath178 for small enough @xmath179 ( but @xmath180 with respect to @xmath1 ) .",
    "we conclude that @xmath12 is exponential small in @xmath1 , and @xmath181 .",
    "choosing arbitrarily small @xmath179 allows us to establish the statement about the asymptotic behaviour of @xmath24 in theorem  1 .",
    "proposition 2 , with arbitrarily small @xmath179 , immediately leads to theorem 1 for @xmath41 , for the average number of contradiction leaves , @xmath25 , equals the sum over all heights @xmath182 ( with @xmath183 ) of @xmath159 , and the sum is bounded from below by its largest term and , from above , by @xmath1 times this largest term .",
    "the statement on the number of leaves following theorem 1 comes from the observation that the expected total number of leaves is @xmath32 , and @xmath184 } \\omega ( t,\\alpha,3 ) = \\omega _ c(\\alpha,3 ) } $ ] .",
    "( _ corollary 1 _ ) let @xmath185 be the probability that a random 3-sat instance with @xmath1 variables and @xmath28 clauses is satisfiable . define @xmath186 and @xmath187 ( respectively , @xmath188 and @xmath189 ) the expected numbers of leaves in # dpll - uc ( resp .",
    "dpll - uc ) search trees for satisfiable and unsatisfiable instances respectively .",
    "all these quantities depend on @xmath8 and @xmath1 . as the operations of # dpll and dpll coincide for unsatifiable instances , we have @xmath190 .",
    "conversely , @xmath191 since dpll halts after having encountered the first solution leaf .",
    "therefore , the difference between the average sizes # l and l of # dpll - uc and dpll - uc search trees satisfies @xmath192 .",
    "hence , @xmath193 . using @xmath194 , @xmath195 from the first moment theorem and the asymptotic scaling for @xmath196 given in theorem 1",
    ", we see that the left hand side of the previous inequality tends to 1 when @xmath197 and @xmath198 .",
    "proofs for higher values of @xmath3 are identical , and will be given in the full version .",
    "the above analysis of the dpll - uc search tree can be extended to the guc heuristic @xcite , where literals are preferentially chosen to satisfy 2-clauses ( if any ) .",
    "the outlines of the proofs of theorems 2 and 3 are given below ; details will be found in the full version .",
    "* 3-sat*. the main difference with respect to the uc case is that the two branches issued from the split are not statistically identical .",
    "in fact , the literal @xmath17 chosen by guc satisfies at least one clause , while this clause is reduced to a shorter clause when @xmath17 is set to false . the cases @xmath199 and @xmath200 have also to be considered separately . with @xmath94 defined in the same way as in the uc case , we obtain @xmath201 the asymptotic analysis of @xmath99 follows the lines of section 3 .",
    "choosing @xmath202 _ i.e. _ @xmath203 allows us to cancel the second term on the r.h.s . of ( [ eqevg ] ) .",
    "iterating relation ( [ eqevg ] ) , we establish the counterpart of lemma 2 for guc : the value of @xmath99 at height @xmath204 $ ] and argument @xmath205 is equal to its ( known ) value at height 0 and argument @xmath206 times the product of factors @xmath207 , up to an additive term , @xmath12 , including iterates of the third and fourth terms on the right hand side of ( [ eqevg ] ) .",
    "@xmath206 are the values at time @xmath208 of the solutions of the ordinary differential equations ( ode ) @xmath209 , @xmath210 with initial condition @xmath211 , @xmath212 ( recall that function @xmath213 is defined in theorem 2 ) . eliminating time between @xmath214",
    "leads to the ode in theorem 2 .",
    "the first term on the r.h.s . in the expression of @xmath215 ( [ refiuy ] ) corresponds to the logarithm of the product of factors @xmath207 between heights @xmath216 and @xmath77 .",
    "the maximum over @xmath217 in expression ( [ refiuy ] ) for @xmath218 is equivalent to the maximum over the reduced height @xmath155 appearing in @xmath219 in theorem 1 ( see also proposition  2 ) .",
    "finally , choosing @xmath220 ensures that , from the one hand , the additive term @xmath12 mentioned above is asymptotically negligible and , from the other hand , the ratio of the expected sizes of # dpll - guc and dpll - guc is asymptotically equal to unity ( see proof of corollary 1 ) .    * 3-col*. the uniformity expressed by lemma 1 holds : the subgraph resulting from the coloring of @xmath77 vertices is still erds - rnyi - like with edge probability @xmath221 , conditioned to the numbers @xmath222 of vertices with @xmath65 available colors @xcite . the generating function",
    "@xmath99 of the average number of residual asignments equals @xmath223 at height @xmath224 and obeys the reccurence relation , for @xmath225 , @xmath226 with @xmath227 , @xmath228 , @xmath229 , and @xmath230 .",
    "choosing @xmath231 _ i.e. _ @xmath232 allows us to cancel the second term on the r.h.s . of ( [ eqevgc ] ) .",
    "iterating relation ( [ eqevg ] ) , we establish the counterpart of lemma 2 for guc : the value of @xmath99 at height @xmath204 $ ] and argument @xmath205 is equal to its ( known ) value at height 0 and argument @xmath206 respectively , times the product of factors @xmath207 , up to an additive term , @xmath12 , including iterates of the last term in ( [ eqevgc ] ) .",
    "an explicit calculation leads to @xmath233)=e^{n \\gamma^h(x_2,x_3,t)+o(n ) } + a$ ] for @xmath143 , where @xmath234 $ ] . as in proposition 2",
    ", we bound from below ( respectively , above ) the number of contradiction leaves in # dpll - guc tree by the exponential of ( @xmath1 times ) the value of function @xmath235 in @xmath236 at reduced height @xmath155 ( respectively , lower than @xmath155 ) .",
    "the maximum over @xmath155 in theorem 3 is equivalent to the maximum over the reduced height @xmath155 appearing in @xmath219 in theorem 1 ( see also proposition 2 ) .",
    "finally , we choose @xmath237 to make the additive term @xmath12 negligible . following the notations of corollary 1 , we use @xmath238 , and @xmath239 , the expected number of 3-colorings for random graphs from @xmath69 .",
    "we emphasize that the average # dpll tree size can be calculated for even more complex heuristics e.g. making decisions based on literal degrees @xcite .",
    "this task requires , in practice , that one is able : first , to find the correct conditioning ensuring uniformity along a branch ( as in the study of dpll in the absence of backtracking ) ; secondly , to determine the asymptotic behaviour of the associated generating function @xmath99 from the recurrence relation for @xmath99 .    to some extent",
    ", the present work is an analytical implementation of an idea put forward by knuth thirty years ago @xcite .",
    "knuth indeed proposed to estimate the average computational effort required by a backtracking procedure through successive runs of the non ",
    "backtracking counterpart , each weighted in an appropriate way @xcite .",
    "this weight is , in the language of section ii.b , simply the probability of a branch ( given the heuristic under consideration ) in # dpll search tree times @xmath240 where @xmath23 is the number of splits @xcite .    since the amount of backtracking seems to have a heavy tail @xcite , the expectation is often not a good predictor in practice .",
    "knowledge of the second moment of the search tree size would be very precious ; its calculation , currently under way , requires us to treat the correlations between nodes attached to distinct branches .",
    "calculating the second moment is a step towards the distant goal of finding the expectation of the logarithm , which probably requires a deep understanding of correlations as in the replica theory of statistical mechanics .",
    "last of all , # dpll is a complete procedure for enumeration . understanding its average - case operation",
    "will , hopefully , provide us with valuable information not only on the algorithm itself but also on random decision problems e.g. new bounds on the sat / unsat or col / uncol thresholds , or insights on the statistical properties of solutions .",
    "* acknowledgments : * the present analysis is the outcome of a work started four years ago with s. cocco to which i am deeply indebted @xcite .",
    "i am grateful to c. moore for numerous and illuminating discussions , as well as for a critical reading of the manuscript .",
    "i thank j. franco for his interest and support , and the referee for pointing out ref .",
    "@xcite , the results of which agree with the @xmath241 asymptotic scaling of @xmath2 found here .",
    "beame , p. , karp , r. , pitassi , t. and saks , m. on the complexity of unsatisfiability of random @xmath3-cnf formulas . in _ proceedings of the thirtieth annual acm symposium on theory of computing ( stoc98 ) _ , p. 561571 ,",
    "dallas , tx ( 1998 ) .",
    "jia , h. and moore , c. how much backtracking does it take to color random graphs ? rigorous results on heavy tails . in _ proc .",
    "10th international conference on principles and practice of constraint programming _ ( cp 04 ) ( 2004 ) .",
    "mitchell , d. , selman , b. and levesque , h. hard and easy distributions of sat problems , _ proc .  of the tenth natl .",
    "conf .  on artificial intelligence ( aaai-92 )",
    "_ , 440 - 446 , the aaai press / mit press , cambridge , ma ( 1992 ) ."
  ],
  "abstract_text": [
    "<S> a method to calculate the average size of davis - putnam - loveland - logemann ( dpll ) search trees for random computational problems is introduced , and applied to the satisfiability of random cnf formulas ( sat ) and the coloring of random graph ( col ) problems . </S>",
    "<S> we establish recursion relations for the generating functions of the average numbers of ( variable or color ) assignments at a given height in the search tree , which allow us to derive the asymptotics of the expected dpll tree size , @xmath0 , where @xmath1 is the instance size . </S>",
    "<S> @xmath2 is calculated as a function of the input distribution parameters ( ratio of clauses per variable for sat , average vertex degree for col ) , and the branching heuristics . </S>"
  ]
}
{
  "article_text": [
    "let @xmath8 \\times { \\mathbf r}\\to { \\mathbf r}$ ] be continuous and consider the differential equation @xmath9 , \\end{aligned}\\ ] ] where @xmath10 denotes the derivative of @xmath0 .",
    "how complex can the solution  @xmath0 be , assuming that @xmath3 is polynomial - time computable ? here , polynomial - time computability and other notions of complexity are from the field of _ computable analysis _ @xcite and measure how hard it is to approximate real functions with specified precision ( section  [ section : preliminaries ] ) .    if we make no assumption on @xmath3 other than being polynomial - time computable , the solution  @xmath0 ( which is not unique in general ) can be non - computable .",
    "table  [ table : related ] summarizes known results about the complexity of @xmath0 under various assumptions ( that get stronger as we go down the table ) . in particular , as the third row says , if @xmath3 is ( globally ) lipschitz continuous , then the ( unique ) solution @xmath0 is known to be polynomial - space computable but still can be @xmath4-hard @xcite . in this paper , we study the complexity of @xmath0 when we put stronger assumptions about the smoothness of @xmath3 .",
    ".complexity of the solution @xmath0 of assuming @xmath3 is polynomial - time computable [ cols= \" < , < , < \" , ]     in numerical analysis , knowledge about smoothness of the input function ( such as being differentiable enough times ) often helps to apply certain algorithms or simplify their analysis",
    ". however , to our knowledge , this casual understanding that smoothness is good has not been rigorously substantiated in terms of computational complexity theory .",
    "this motivates us to ask whether , for our differential equation , smoothness really reduces the complexity of the solution .    at one extreme",
    "is the case where @xmath3 is analytic : @xmath0 is then polynomial - time computable ( the last row of the table ) by an argument based on taylor series , since we can efficiently compute the taylor sequence of @xmath0 from that of @xmath3 . ] ( this does not necessarily mean that computing the values of @xmath0 from those of @xmath3 is easy ; see the last paragraph of section  [ section : constructive ] ) .",
    "thus our interest is in the cases between lipschitz and analytic ( the fourth and fifth rows ) .",
    "we say that @xmath3 is of class @xmath11 if the partial derivative @xmath12 ( often also denoted @xmath13 ) exists and is continuous for all @xmath14 and @xmath15 ; is of class @xmath7 if it is of class @xmath16 for all @xmath17 , @xmath18 with @xmath19 .",
    "] it is said to be of class @xmath20 if it is of class @xmath11 for all @xmath21 .",
    "we will show that adding continuous differentiability does not break the @xmath4-completeness that we knew from @xcite for the lipschitz continuous case :    [ differentiableispspace ] there exists a polynomial - time computable function @xmath8 \\times [ -1,1 ] \\to { \\mathbf r}$ ] of class @xmath22 such that the equation has a @xmath4-hard solution @xmath23 \\to { \\mathbf r}$ ] .    the complexity notions ( computability and hardness ) in this and the following theorems will be explained in section  [ section : preliminaries ] .",
    "when @xmath3 is more than once differentiable , we did not quite succeed in proving that @xmath0 is @xmath4-hard in the same sense , but we will prove it @xmath24-hard , where @xmath25 is the counting hierarchy ( see section  [ section : counting hierarchy ] ) :    [ ktimesisch ] let @xmath26 be a positive integer .",
    "there is a polynomial - time computable function @xmath8 \\times [ -1,1 ] \\to { \\mathbf r}$ ] of class @xmath27 such that the equation has a @xmath24-hard solution @xmath23 \\to { \\mathbf r}$ ] .    in theorems [ differentiableispspace ] and [ ktimesisch ] ,",
    "we said @xmath8 \\times [ -1 , 1 ] \\to { \\mathbf r}$ ] instead of @xmath8 \\times { \\mathbf r}\\to { \\mathbf r}$ ] , because the notion of polynomial - time computability of real functions in this paper is defined only when the domain is a bounded closed region",
    ". do not hold as they are , because polynomial - time compubable functions @xmath3 , such as @xmath28 , could yield functions  @xmath0 , such as @xmath29 , that grow too fast to be polynomial - time ( or even polynomial - space ) computable .",
    "bournez , graa and pouly  ( * ? ? ?",
    "* theorem  2 ) report that the statement about the analytic case holds true if we restrict the growth of @xmath0 appropriately .",
    "] this makes the equation   ill - defined in case @xmath0 ever takes a value outside @xmath30 $ ] . by saying that @xmath0 is a solution in theorem  [ differentiableispspace ]",
    ", we are also claiming that @xmath31 $ ] for all @xmath32 $ ] .",
    "this is no essential restriction , because any pair of functions @xmath8 \\times { \\mathbf r}\\to { \\mathbf r}$ ] and @xmath23 \\to { \\mathbf r}$ ] satisfying the equation could be scaled down in an appropriate way ( without affecting the computational complexity ) to make @xmath0 stay in @xmath30 $ ] . in any case , since we are making stronger assumptions on @xmath3 than lipschitz continuity , the solution @xmath0 , if it exists , is unique .    whether smoothness of the input function reduces",
    "the complexity of the output has been studied for operators other than solving differential equations , and the following negative results are known .",
    "the integral of a polynomial - time computable real function can be @xmath33-hard , and this does not change by restricting the input to @xmath34 ( infinitely differentiable ) functions ( * ? ? ?",
    "* theorem  5.33 ) .",
    "similarly , the function obtained by maximization from a polynomial - time computable real function can be @xmath35-hard , and this is still so even if the input function is restricted to @xmath34 ( * ? ? ?",
    "* theorem  3.7 ) needs to be replaced by , e.g. , @xmath36 ] .",
    "( restricting to analytic inputs renders the output polynomial - time computable , again by the argument based on taylor series . ) in contrast , for the differential equation we only have theorem  [ ktimesisch ] for each @xmath26 , and do not have any hardness result when @xmath3 is assumed to be infinitely differentiable .",
    "theorems [ differentiableispspace ] and [ ktimesisch ] are about the complexity of each solution @xmath0 .",
    "we will also discuss the complexity of the final value @xmath37 and the complexity of the operator that maps @xmath3 to @xmath0 ; see sections [ section : final value ] and [ section : constructive ] .",
    "[ [ notation ] ] notation + + + + + + + +    let @xmath38 , @xmath39 , @xmath40 , @xmath41 denote the set of natural numbers , integers , rational numbers and real numbers , respectively .",
    "we assume that any polynomial is increasing , since it does not change the meaning of polynomial - time computable or polynomial - space computable .",
    "let @xmath42 and @xmath43 be bounded closed intervals in @xmath41 .",
    "we write @xmath44 for @xmath45 .",
    "a function @xmath45 is of _ class @xmath46 _ ( or _ @xmath17-times continuously differentiable _ ) if all the derivatives @xmath47 exist and are continuous .    for a function @xmath3 of two variables , we write @xmath48 and @xmath49 for the derivatives of @xmath3 with respect to the first and the second variable , respectively , when they exist .",
    "a function @xmath50 is of _ class @xmath11 _ if for each @xmath51 and @xmath52 , the derivative @xmath53 exists and is continuous .",
    "this derivative @xmath53 is then written @xmath54 ( and is known to equal @xmath55 for any sequence @xmath56 of @xmath57 @xmath58s and @xmath59 @xmath60s ) .",
    "a function @xmath3 is of _ class @xmath20 _ if it is of class @xmath11 for all @xmath21 .",
    "we assume that the reader is familiar with the basics of complexity theory , such as the classes @xmath61 and @xmath4 and the notions of reduction and hardness @xcite .",
    "we briefly review the class  @xmath24 .",
    "the counting hierarchy @xmath24 is defined analogously to the polynomial - time hierarchy @xmath62 ( * ? ? ?",
    "* kapitel  10.4 ) using oracle machines corresponding to the class @xmath63 ( * ? ? ?",
    "* kapitel  3.3 ) instead of @xmath35 : thus , @xmath64 , where each level @xmath65 is defined inductively by @xmath66 and @xmath67 .",
    "we leave the details of this definition to the original papers  @xcite .",
    "all we need for our purpose is the fact ( lemma  [ lemma : cnp - complete ] below ) that @xmath65 is characterized by the following complete problem @xmath68 : given @xmath59 lists @xmath69 ,  , @xmath70 of propositional variables , a propositional formula @xmath71 with all free variables listed , and numbers @xmath72 ,  , @xmath73 in binary , determine whether @xmath74 is true . here",
    ", @xmath75 is the _ counting quantifier _ : for every formula @xmath76 with the list @xmath77 of @xmath78 free variables , we write @xmath79 where formula @xmath80 is identified with the function @xmath81 such that @xmath82 when @xmath76 is true .    [ lemma : cnp - complete ] for every @xmath83 , the problem @xmath68 is @xmath84-complete .    by this",
    ", we mean that any problem @xmath42 in @xmath65 reduces to @xmath68 via some polynomial - time function @xmath85 in the sense that @xmath86 if and only if @xmath87 .    note",
    "that this is analogous to the polynomial hierarchy @xmath62 , whose @xmath59th level @xmath88 has the complete problem that asks for the value of a formula of the form @xmath89 with @xmath59 alternations of universal and existential quentifiers . note also that the counting quantifier generalizes the universal and existential quentifiers , and hence @xmath90  in fact , it is known  @xcite that @xmath62 is contained already in @xmath91 and thus in the second level of the counting hierarchy .",
    "we review some complexity notions from computable analysis  @xcite .",
    "we start by fixing an encoding of real numbers by string functions .",
    "a function @xmath92 is a _ name _ of a real number @xmath93 if for all @xmath94 , @xmath95 is the binary representation of @xmath96 or @xmath97 , where @xmath98 and @xmath99 mean rounding down and up to the nearest integer .    in effect , a name of a real number @xmath93 takes each string @xmath100 to an approximation of @xmath93 with precision @xmath101 .",
    "we use _ oracle turing machines _",
    "( henceforth just _ machines _ ) to work on these names ( fig .",
    "[ fig : model - of - function ] ) .",
    "let @xmath102 be a machine and @xmath80 be a function from strings to strings .",
    "we write @xmath103 for the output string when @xmath102 is given @xmath80 as oracle and string @xmath104 as input .",
    "thus we also regard @xmath105 as a function from strings to strings .     computing a real function @xmath106",
    "let @xmath42 be a bounded closed interval of @xmath41 .",
    "a machine @xmath102 _ computes _ a real function @xmath45 if for any @xmath107 and any name @xmath108 of it , @xmath109 is a name of @xmath110 .",
    "computation of a function @xmath45 on a two - dimensional bounded closed region @xmath111 is defined similarly using machines with two oracles .",
    "a real function is ( _ polynomial - time _ ) _ computable _ if there exists some machine that computes it ( in polynomial time ) .",
    "polynomial - time computability of a real function @xmath112 means that for any @xmath94 , an approximation of @xmath110 with error bound @xmath113 is computable in time polynomial in @xmath59 independent of the real number @xmath93 .    by the time the machine outputs the approximation of @xmath114 of precision  @xmath101 , it knows @xmath93 only with some precision @xmath115",
    "this implies that all computable real functions are continuous .",
    "if the machine runs in polynomial time , this @xmath57 is bounded polynomially in @xmath59 .",
    "this implies in the following lemma , which characterizes polynomial - time real functions by the usual polynomial - time computability of string functions without using oracle machines .",
    "[ lem : type1representation ] a real function is polynomial - time computable if and only if there exist a polynomial - time computable function @xmath116 ) \\times \\{0 , 1\\ } ^ * \\to { \\mathbf q}$ ] and polynomial @xmath117 such that for all @xmath118 $ ] and @xmath94 , @xmath119 and for all @xmath120 $ ] , @xmath94 , @xmath121 where each rational number is written as a fraction whose numerator and denominator are integers in binary .    to speak about hardness of a real function ,",
    "we define the notion of a language to it .",
    "a language @xmath122 is identified with the function @xmath123 such that @xmath124 when @xmath125 .",
    "[ definition : reduction ] a language @xmath126 _ reduces _ to a function @xmath127 \\to { \\mathbf r}$ ] if there exist a polynomial - time function @xmath128 and a polynomial - time oracle turing machine @xmath102 ( fig .  [ fig : reduction ] ) such that for any string @xmath129 ,    1 .",
    "@xmath130 is a name of a real number @xmath131 , and 2 .   for any name @xmath80 of @xmath132",
    ", we have that @xmath133 accepts if and only if @xmath125 .",
    "this reduction may superficially look stronger ( and hence the reducibility weaker ) than the one in kawamura  @xcite in that @xmath102 can make multiple queries adaptively , but it is not hard to see that this makes no difference .    for a complexity class  @xmath134 ,",
    "a function @xmath112 is _",
    "@xmath134-hard _ if all languages in @xmath134 reduce to @xmath112 .",
    "to a function @xmath135 \\to { \\mathbf r}$ ] ]",
    "the proofs of theorems [ differentiableispspace ] and [ ktimesisch ] proceed as follows . in section  [ section : divp ]",
    ", we define _ difference equations _ , a discrete version of the differential equations .",
    "we show that these equations with certain restrictions are @xmath4- and @xmath24-hard . in section  [",
    "subsection : ode family ] , we show that these classes of difference equations can be simulated by families of differential equations satisfying certain uniform bounds on higher - order derivatives . in section  [",
    "subsection : proof of theorems ] , we prove theorems [ differentiableispspace ] and [ ktimesisch ] by putting these families of functions together to obtain one differential equation with the desired smoothness ( @xmath22 and @xmath27 ) .",
    "the idea of simulating a discrete system with limited feedback by differential equations was essentially already present in the proof of the lipschitz version of these results @xcite .",
    "we look more closely at this limitation on feedback , and express it as a restriction on the _ height _ of the difference equation .",
    "we show that a stronger height restriction allows the difference equation to be simulated by smoother differential equations ( see the proof of lemma  [ ktimesfamily ] and the discussion after it ) , leading to the @xmath24-hardness for @xmath27 functions .      in this section ,",
    "we define difference equations , which are a discrete version of differential equations .",
    "then we show the @xmath4- and @xmath24-hardness of families of difference equations with different height restrictions .",
    "let @xmath136 $ ] denote @xmath137 .",
    "let @xmath138 \\times [ q ] \\times [ r ] \\to \\{-1 , 0 , 1\\}$ ] and @xmath139 \\times [ q+1 ] \\to [ r]$ ] .",
    "we say that @xmath140 is the solution of the _ difference equation _ given by @xmath141 if for all @xmath142 $ ] and @xmath143 $ ] ( fig .",
    "[ fig : divp ] ) , @xmath144 we call @xmath145 , @xmath146 and @xmath147 the _ height _ , _ width _ and _ cell size _ of the difference equation . the equations and are similar to the initial condition @xmath148 and the equation @xmath149 in , respectively . in section  [",
    "subsection : ode family ] , we will use this similarity to simulate difference equations by differential equations .     of the difference equation given by @xmath141 ]",
    "we view a family of difference equations as a computing system by regarding the value of the bottom right cell ( the gray cell in fig .",
    "[ fig : divp ] ) as the output .",
    "a family @xmath151 of functions @xmath152 \\times [ q_u ] \\times [ r_u ] \\to \\{-1 , 0 , 1\\}$ ] _ recognizes _ a language @xmath126 if for each @xmath129 , the difference equation given by @xmath153 has a solution @xmath154 and @xmath155 .",
    "a family @xmath151 is _ uniform _ if the height , width and cell size of @xmath153 are polynomial - time computable from @xmath129 ( in particular , they must be bounded by @xmath156 , for some polynomial  @xmath157 ) and @xmath158 is polynomial - time computable from @xmath159 .",
    "a family @xmath151 has _ polynomial height _ ( and _ logarithmic height _ , respectively ) if the height @xmath160 is bounded by @xmath161 ( and by @xmath162 , respectively ) . with this terminology , the key lemma in ( * ?",
    "* lemma 4.7 ) can be written as follows :    [ divppolyispspacehard ] there exists a @xmath4-hard language @xmath126 that is recognized by some uniform family of functions with polynomial height .",
    "is in @xmath4 , because a uniform family with polynomial height can be simulated in polynomial space . ]",
    "kawamura  @xcite obtained the hardness result in the third row of table [ table : related ] by simulating the difference equations of lemma  [ divppolyispspacehard ] by lipschitz continuous differential equations .",
    "likewise , theorem  [ differentiableispspace ] follows from lemma  [ divppolyispspacehard ] by a modified construction that keeps the function in class @xmath22 ( sections [ subsection : ode family ] and [ subsection : proof of theorems ] ) .",
    "we show further that difference equations restricted to logarithmic height can be simulated by @xmath27 functions for each @xmath26 ( sections [ subsection : ode family ] and [ subsection : proof of theorems ] ) .",
    "theorem  [ ktimesisch ] follows from this simulation and the following lemma .",
    "[ divplogischhard ] there exists a @xmath24-hard language @xmath126 that is recognized by some uniform family of functions with logarithmic height .",
    "we define the desired language  @xmath126 by @xmath163 using the @xmath65-hard language @xmath68 from lemma  [ lemma : cnp - complete ] .",
    "then @xmath126 is obviously @xmath24-hard .",
    "we construct a logarithmic - height uniform function family @xmath151 recognizing @xmath126 .",
    "we will describe how to construct @xmath164 for a string  @xmath129 of the form @xmath165 , where @xmath80 is a formula , and @xmath69 , ",
    ", @xmath70 are lists of variables with lengths @xmath72 ,  , @xmath73 , respectively .",
    "we write @xmath166 and @xmath167 . for each @xmath168 and @xmath169 , we write @xmath170 for the truth value ( @xmath58 or @xmath171 ) of @xmath172 .",
    "note that @xmath173 , @xmath174 , and the relation between @xmath175 and @xmath176 is given by @xmath177 where we define @xmath178 by @xmath179 for @xmath180 , we write @xmath181 for the @xmath17th digit of @xmath182 written in binary ( @xmath183 being the least significant digit ) , and @xmath184}$ ] for the string @xmath185 .    for each @xmath186 \\times [ 2^{s_n}+1 ] \\times [ 2^{|u|}]$ ] , we define @xmath187 as follows .",
    "the first row is given by @xmath188 } , t_{[s_1 + 1,s_2 ] } ,      \\dots , t_{[s_{n-1}+1,s_n]}),\\ ] ] and for @xmath189 , we define @xmath190 } = 10 \\cdots 0 , \\\\      0 & \\text{otherwise}.     \\end{cases }      \\label{eq : def - gu : case - nonzero}\\ ] ] this family @xmath151 is clearly uniform , and its height @xmath191 is logarithmic in @xmath192 .",
    "let @xmath154 be the solution ( as defined in and ) of the difference equation given by @xmath153 .",
    "we prove by induction on @xmath17 that @xmath193 $ ] for all @xmath182 , and that @xmath194 } , \\dots , v_{[s_{n-1}+1 , s_n]})\\ ] ] if @xmath195 } = 10 \\cdots 0 $ ] ( otherwise it is immediate from the definition that @xmath196 ) . for @xmath197 , the claims follow from .",
    "for @xmath198 , suppose that the induction hypothesis @xmath199 } , \\dots , v _ { [ s_{n-1}+1 , s_n]})\\ ] ] holds . since @xmath200 is the solution of the difference equation given by @xmath164 , we have @xmath201 since the assumption implies that flipping the bit @xmath202 of any @xmath203 reverses the sign of @xmath204 , most of the summands in cancel out .",
    "the only nonzero terms that can survive are the ones corresponding to those @xmath203 that satisfy @xmath205 } = 10 \\cdots 0 $ ] and lie between the numbers whose binary representations are @xmath206 and @xmath207",
    ". there are at most @xmath208 such terms , and each of them is @xmath171 or @xmath58 , so @xmath209 $ ] . in particular ,",
    "if @xmath210 } = 10 \\cdots 0 $ ] , we have @xmath211 } , \\dots , v_{[s_{n-1}+1 , s_n]}).\\ ] ] by this and , we have @xmath212 } , \\dots , v_{[s_{n-1}+1 , s_n]}).\\ ] ] by this and , we have , completing the induction step .    by substituting @xmath59 for @xmath17 and @xmath213 for @xmath203 in , we get @xmath214 .",
    "hence @xmath215 .",
    "note that for @xmath24-hardness , we could have defined @xmath126 using a faster growing function than @xmath216 in .",
    "this would allow the difference equation in lemma  [ divplogischhard ] to have height smaller than logarithmic .",
    "we stated lemma  [ divplogischhard ] with logarithmic height , simply because this was the highest possible difference equations that we were able to simulate by @xmath27 functions ( in the proof of lemma  [ ktimesfamily ] below ) .",
    "we show that certain families of smooth differential equations can simulate @xmath4- and @xmath24-hard difference equations from the previous section .    before stating lemmas  [ ktimesfamily ] and [ differentiablefamily ]",
    ", we extend the definition of polynomial - time computability of real functions to that of _ families _ of real functions .",
    "a machine @xmath102 _ computes _ a family @xmath217 of functions @xmath218 indexed by strings @xmath129 if for any @xmath107 and any name @xmath108 of @xmath93 , the function taking @xmath219 to @xmath220 is a name of @xmath221 .",
    "we say a family of real functions @xmath217 is polynomial - time if there is a polynomial - time machine computing @xmath217 .",
    "[ ktimesfamily ] there exist a @xmath24-hard language @xmath126 and a polynomial @xmath222 , such that for any @xmath223 and polynomial @xmath224 , there are a polynomial @xmath225 and families @xmath226 , @xmath227 of real functions such that @xmath226 is polynomial - time computable and for any string @xmath129 :    1 .",
    "[ enum : kf : start ] @xmath228 \\times [ -1,1]\\to { \\mathbf r}$ ] , @xmath229 \\to [ -1,1]$ ] ; 2 .",
    "[ enum : equation ] @xmath230 and @xmath231 for all @xmath232 $ ] ; 3 .",
    "[ enum : differentiability ] @xmath233 is of class @xmath27 ; 4 .",
    "[ enum : boundary ] @xmath234 for all @xmath21 and @xmath235 $ ] ; 5 .",
    "[ enum : smooth ] @xmath236 for all @xmath21 and @xmath237 ; 6 .",
    "[ enum : kf : end ] @xmath238 .",
    "[ differentiablefamily ] there exist a @xmath4-hard language @xmath126 and a polynomial @xmath222 , such that for any polynomial @xmath224 , there are a polynomial @xmath225 and families @xmath226 ,",
    "@xmath227 of real functions such that @xmath226 is polynomial - time computable and for any string @xmath129 satisfying ( [ enum : kf : start])([enum : kf : end ] ) of lemma  [ ktimesfamily ] with @xmath239 .    in lemmas  [ ktimesfamily ] and [ differentiablefamily ] , we have the new conditions ( [ enum : differentiability])([enum : smooth ] ) about the smoothness and the derivatives of @xmath233 that were not present in ( * ? ? ?",
    "* lemma 4.1 ) . to satisfy these conditions , we construct @xmath233 using the smooth function @xmath112 in following lemma .",
    "[ smoothfunction ] there exist a polynomial - time function @xmath127 \\to { \\mathbf r}$ ] of class @xmath34 and a polynomial @xmath240 such that    * @xmath241 and @xmath242 ; * @xmath243 for all @xmath83 ; * @xmath112 is strictly increasing ; * @xmath244 is polynomial - time computable for all @xmath83 ; * @xmath245 for all @xmath83 .",
    "although the existence of the polynomial  @xmath240 was not explicitly stated in ( * ? ? ?",
    "* lemma 3.6 ) , it can be proved easily .",
    "we will prove lemma  [ ktimesfamily ] using lemma  [ divplogischhard ] as follows .",
    "let @xmath151 be a family of functions obtained by lemma  [ divplogischhard ] , and let @xmath246 be the family of the solutions of the difference equations given by @xmath151 .",
    "we construct @xmath247 and @xmath233 from @xmath154 and @xmath153 so that @xmath248 for each @xmath249 ,  , @xmath250 and @xmath231 .",
    "the polynomial - time computability of @xmath226 follows from that of @xmath151 .",
    "we omit the analogous and easier proof of lemma  [ differentiablefamily ] .",
    "let @xmath126 and @xmath151 be as in lemma  [ divplogischhard ] , and let @xmath154 be the solutions of the difference equations given by @xmath153 .",
    "let @xmath112 and @xmath240 be as in lemma  [ smoothfunction ] .",
    "we may assume that @xmath251 \\times [ 2^{q(|u| ) } ] \\times [ 2^{r(|u| ) } ] \\to \\{-1 , 0 , 1\\}$ ] for some @xmath157 , @xmath252 , @xmath253 , where @xmath157 has logarithmic growth and @xmath252 and @xmath254 are polynomials .",
    "we may also assume , similarly to the beginning of the proof of ( * ? ? ?",
    "* lemma 4.1 ) , that @xmath255 for some @xmath256 \\to [ p ( \\lvert u \\rvert ) ] $ ] .",
    "we construct families of real functions @xmath226 and @xmath227 that simulate @xmath164 and @xmath200 in the sense that @xmath257 , where the constant @xmath43 and the ( increasing ) function @xmath258 \\to { \\mathbf n}$ ] are defined by @xmath259 where @xmath260 is a polynomial satisfying @xmath261 ( which exists because @xmath157 is logarithmic ) .",
    "thus , the value @xmath262 $ ] will be stored in the @xmath263th digit of the base-@xmath43 expansion of the real number @xmath264 .",
    "this exponential spacing described by @xmath265 will be needed when we bound the derivative @xmath266 in below .    for each @xmath267 \\times [ -1 , 1]$ ] , there exist unique @xmath268 , @xmath269 , @xmath270 and @xmath271 such that @xmath272 and @xmath273 . using @xmath112 and a polynomial @xmath240 of lemma  [ smoothfunction ]",
    ", we define @xmath274 \\to { \\mathbf r}$ ] , @xmath275 \\times [ -1 , 1 ] \\to { \\mathbf r}$ ] and @xmath276 \\to [ -1 , 1 ] $ ] by @xmath277    we will verify that @xmath226 and @xmath227 defined above satisfy all the conditions stated in lemma  [ ktimesfamily ] .",
    "polynomial - time computability of @xmath226 can be verified using lemma  [ lem : type1representation ] .",
    "the condition  ( [ enum : kf : start ] ) is immediate , and ( [ enum : equation ] ) follows from the relation between @xmath164 and @xmath200 ( by a similar argument to ( * ? ? ?",
    "* lemma 4.1 ) ) .",
    "since @xmath278 is constructed by interpolating between the ( finitely many ) values of @xmath164 using a @xmath279 function  @xmath112 , it is of class @xmath279 and thus satisfies ( [ enum : differentiability ] ) . calculating from",
    ", we have @xmath280 for each @xmath21 . by this and",
    ", we have @xmath281 for each @xmath21 and @xmath282 for each @xmath21 and @xmath283 . substituting @xmath284 ( @xmath285 ) into ,",
    "we get @xmath286 , as required in ( [ enum : boundary ] ) .",
    "we show that ( [ enum : smooth ] ) holds with @xmath287 .",
    "note that @xmath222 is a polynomial independent of @xmath26 and @xmath224 , and that @xmath288 by .",
    "hence , @xmath289 by , and our choice of @xmath43 .",
    "we have ( [ enum : kf : end ] ) with @xmath290 , because @xmath291    we used the exponential positioning function @xmath265 defined at , so that we have @xmath292 for the second inequality of for @xmath6 . because of this , we had to restrict @xmath157 to be logarithmic , because otherwise the function @xmath260 in would have to be superpolynomial and so would @xmath225 in .",
    "the proof of lemma  [ differentiablefamily ] is analogous , starting with the @xmath126 and @xmath151 of lemma  [ divppolyispspacehard ] .",
    "the only difference is that @xmath157 is now a polynomial and therefore we use @xmath293 in ( and @xmath294 in ) .      using the function families @xmath226 and @xmath227 obtained from lemmas [ ktimesfamily ] or [ differentiablefamily ]",
    ", we construct the functions @xmath3 and @xmath0 in theorems [ differentiableispspace ] and [ ktimesisch ] as follows .",
    "divide @xmath295 into infinitely many subintervals @xmath296 $ ] , with midpoints @xmath297 .",
    "we construct @xmath0 by putting a scaled copy of @xmath247 onto @xmath298 $ ] and putting a horizontally reversed scaled copy of @xmath247 onto @xmath299 $ ] so that @xmath300 , @xmath301 and @xmath302 where @xmath303 is a polynomial . in the same way",
    ", @xmath3 is constructed from @xmath226 so that @xmath3 and @xmath0 satisfy .",
    "we give the details of the proof of theorem  [ ktimesisch ] from lemma  [ ktimesfamily ] , and omit the analogous proof of theorem  [ differentiableispspace ] from lemma  [ differentiablefamily ] .",
    "let @xmath126 and @xmath222 be as lemma  [ ktimesfamily ] .",
    "define @xmath304 , @xmath305 and for each @xmath129 let @xmath306 , @xmath307 , @xmath308 , where @xmath309 is the number represented by @xmath129 in binary notation .",
    "let @xmath225 , @xmath226 , @xmath227 be as in lemma  [ ktimesfamily ] corresponding to the above @xmath224 .",
    "we define @xmath310 for each string @xmath129 and @xmath311 , @xmath312 $ ] .",
    "let @xmath313 and @xmath314 for any @xmath235 $ ] .",
    "it can be shown similarly to the lipschitz version ( * ? ? ?",
    "* theorem 3.2 ) that @xmath3 and @xmath0 satisfy and @xmath3 is polynomial - time computable .",
    "here we only prove that @xmath3 is of class @xmath27 .",
    "we claim that for each @xmath21 and @xmath237 , the derivative @xmath315 is given by @xmath316 for each @xmath317 and @xmath318 $ ] , and by @xmath319 .",
    "this is verified by induction on @xmath320 .",
    "the equation follows from calculation ( note that this means verifying that follows from the definition of @xmath3 when @xmath321 ; from the induction hypothesis about @xmath322 when @xmath197 and @xmath323 ; and from the induction hypothesis about @xmath324 when @xmath198 ) . that @xmath319 is immediate from the induction hypothesis if @xmath197 .",
    "if @xmath198 , the derivative @xmath325 is by definition the limit @xmath326 this can be shown to exist and equal @xmath171 , by observing that the first term in the numerator is @xmath171 and the second term is bounded , when @xmath327 $ ] , by @xmath328 where the second inequality is from lemma  [ ktimesfamily ] ( [ enum : smooth ] ) and the fourth inequality holds for sufficiently large @xmath329 by our choice of @xmath224 .",
    "the continuity of @xmath315 on @xmath330 $ ] follows from and lemma  [ ktimesfamily ] ( [ enum : boundary ] ) . the continuity on @xmath331 $ ] is verified by estimating @xmath332 similarly to .",
    "in the previous section , we considered the complexity of the solution  @xmath0 of the ode as a real function . here",
    "we discuss the complexity of the final value @xmath333 and relate it to tally languages ( subsets of @xmath334 ) , as did ko  @xcite and kawamura  ( * ? ? ?",
    "* theorem  5.1 ) for the lipschitz continuous case .",
    "we say that a language  @xmath126 _ reduces to _ a real number @xmath93 if there is a polynomial - time oracle turing machine @xmath102 such that @xmath105 accepts @xmath126 for any name @xmath80 of @xmath93 .",
    "note that this is the same as the reduction in definition  [ definition : reduction ] to a constant function with value  @xmath93 .",
    "[ theorem : final value of once ] for any tally language @xmath335 , there are a polynomial - time computable function @xmath8 \\times [ -1,1 ] \\to { \\mathbf r}$ ] of class @xmath22 and a function @xmath336 \\to { \\mathbf r}$ ] satisfying such that @xmath126 reduces to @xmath37 .    [ theorem : final value of fixed ] let @xmath26 be a positive integer . for any tally language @xmath337 , there are a polynomial - time computable function @xmath8 \\times [ -1,1 ] \\to { \\mathbf r}$ ] of class @xmath27 and a function @xmath336 \\to { \\mathbf r}$ ] satisfying such that @xmath126 reduces to @xmath37",
    ".    we can prove theorem  [ theorem : final value of fixed ] from lemma  [ ktimesfamily ] in the same way as the proof of ( * ? ? ? * theorem  5.1 ) .",
    "we skip the proof of theorem  [ theorem : final value of once ] since it is similar .",
    "let @xmath182 be any tally language in @xmath24 and @xmath26 be any positive integer , and let @xmath126 and @xmath222 be as lemma  [ ktimesfamily ] .",
    "define @xmath338 , @xmath339 and let @xmath225 , @xmath226 , @xmath227 be as in lemma  [ ktimesfamily ] corresponding to the @xmath224 . since @xmath126 is @xmath24-hard , there are a polynomial - time function @xmath85 such that @xmath340 for all @xmath17 .",
    "let @xmath341 and @xmath342 .",
    "define @xmath3 and @xmath0 as follows : when the first variable is in @xmath295 , let @xmath343 for each @xmath94 , @xmath232 $ ] , @xmath312 $ ] and @xmath344 ; when the first variable is @xmath58 , let @xmath345 it can be proved similarly to the proof of theorem  [ ktimesisch ] that @xmath3 is polynomial - time computable and of class @xmath27 and that @xmath3 and @xmath0 satisfy .",
    "the equation implies that @xmath182 reduces to @xmath37 .",
    "both theorems [ differentiableispspace ] and [ ktimesisch ] state the complexity of the solution @xmath0 under the assumption that @xmath3 is polynomial - time computable . but",
    "how hard is it to `` solve '' differential equations , i.e. , how complex is the operator that takes @xmath3 to @xmath0 ? to make this question precise , we need to define the complexity of operators taking real functions to real functions .",
    "recall that , in order to discuss complexity of real functions , we used string functions as names of elements in @xmath41 .",
    "such an encoding is called a _ representation _ of @xmath41 .",
    "likewise , we now want to encode real functions by string functions to discuss complexity of real operators . in other words , we need to define representations of the class @xmath346}$ ] of continuous functions @xmath336 \\to { \\mathbf r}$ ] and class @xmath347 \\times [ -1 , 1]}$ ] of lipschitz continuous functions @xmath348 \\times [ -1 , 1 ] \\to { \\mathbf r}$ ] .",
    "the notions of computability and complexity depend on these representations .",
    "following @xcite , we use @xmath349 and @xmath350 as the representations of @xmath351}$ ] and @xmath347 \\times [ -1 , 1]}$ ] , respectively .",
    "it is known that @xmath349 is the canonical representation of @xmath346}$ ] in a certain sense @xcite , and @xmath350 is the representation defined by adding to @xmath349 the information on the lipschitz constant .",
    "since these representations use string functions whose values have variable lengths , we use _ second order polynomials _ to bound the amount of resources ( time and space ) of machines @xcite , and this leads to the definitions of second - order complexity classes ( e.g. @xmath352 , polynomial - space computable ) , reductions ( e.g. @xmath353 , polynomial - time weihrauch reduction ) , and hardness . combining them with the representations of real functions mentioned above",
    ", we can restate our theorems in the constructive form as follows .",
    "let @xmath354 be the operator mapping a real function @xmath355 \\times [ -1 , 1]}$ ] to the solution @xmath356}$ ] of .",
    "the operator @xmath354 is a partial function from @xmath347 \\times [ -1 , 1]}$ ] to @xmath346}$ ] ( it is partial because the trajectory may fall out of the interval @xmath30 $ ] , see the paragraph following theorem  [ ktimesisch ] ) . in (",
    "* theorem 4.9 ) , the @xmath357-@xmath352-@xmath353-completeness of @xmath354 was proved by modifying the proof of the results in the third row of table  [ table : related ] .",
    "theorem  [ differentiableispspace ] can be rewritten in a similar way .",
    "that is , let @xmath358 be the operator @xmath354 restricted to class @xmath22 .",
    "then we have :      to show this theorem , we need to verify that the information used to construct functions in the proof of theorem  [ differentiableispspace ] can be obtained easily from the inputs .",
    "we omit the proof since it does not require any new technique .",
    "theorem  [ theorem : c1 constructive ] automatically implies theorem  [ differentiableispspace ] because of ( * ? ? ?",
    "* lemmas 4.7 and 4.8 ) and the @xmath353 versions of ( * ? ? ?",
    "* lemmas 3.11 and 3.12 ) .",
    "in contrast , the polynomial - time computability in the analytic case ( the last row of table  [ table : related ] ) is _ not _ a consequence of a statement based on @xmath349 .",
    "it is based on the calculation of the taylor coefficients , and hence we only know how to convert the taylor sequence of @xmath3 at a point to that of @xmath0 . in other words ,",
    "the operator @xmath354 restricted to the analytic functions is not @xmath357-@xmath359-computable , but @xmath360-@xmath359-computable , where @xmath361 is the representation that encodes an analytic function using its taylor coefficients at a point in a suitable way .",
    "more discussion on representations of analytic functions and the complexity of operators on them can be found in @xcite .",
    "o. bournez , d. graa , and a. pouly . solving analytic differential equations in polynomial time over unbounded domains . in _ proceedings of the 36th international symposium on mathematical foundations of computer science _",
    "( mfcs ) , lncs 6907 , 170181 , 2011 .",
    "a.  kawamura .",
    "on function spaces and polynomial - time computability .",
    "dagstuhl seminar 11411 : computing with infinite data , 2011 .",
    "a.  kawamura and s.  cook . complexity theory for operators in analysis . _",
    "acm transactions on computation theory _ , 4(2 ) , article 5 , 2012 .",
    "a. kawamura , n. mller , c. rsnick , and m. ziegler .",
    "parameterized uniform complexity in numerics : from smooth to analytic , from np - hard to polytime .",
    "a.  kawamura , h.  ota , c. rsnick , and m. ziegler .",
    "computational complexity of smooth differential equations . in",
    "_ proceedings of the 37th international symposium on mathematical foundations of computer science _ ( mfcs ) , lncs 7464 , 578589 , 2012 .",
    "i.  wegener .",
    "_ komplexittstheorie : grenzen der effizienz von algorithmen_. springer , 2003 . in german .",
    "english translation by r.  pruim : _ complexity theory : exploring the limits of efficient algorithms _ , springer , 2005 .",
    "( h.  ota , a.  kawamura , m. ziegler , and c. rsnick .",
    "complexity of smooth ordinary differential equations .",
    "presented at the tenth eatcs / la workshop on theoretical computer science , kyoto , 2012 . ) in japanese ."
  ],
  "abstract_text": [
    "<S> the computational complexity of the solution  @xmath0 to the ordinary differential equation @xmath1 , @xmath2 under various assumptions on the function @xmath3 has been investigated . </S>",
    "<S> kawamura showed in 2010 that the solution  @xmath0 can be @xmath4-hard even if @xmath3 is assumed to be lipschitz continuous and polynomial - time computable . </S>",
    "<S> we place further requirements on the smoothness of @xmath3 and obtain the following results : the solution  @xmath0 can still be @xmath4-hard if @xmath3 is assumed to be of class @xmath5 ; for each @xmath6 , the solution  @xmath0 can be hard for the counting hierarchy even if @xmath3 is of class @xmath7 . </S>"
  ]
}
{
  "article_text": [
    "deterministic and stochastic optimal control problems arise naturally in most engineering disciplines and in fields as diverse as economics , geometric optics , robotic navigation , and computational geometry .",
    "dynamic programming @xcite is the key technique for solving such problems by formulating equations satisfied by the corresponding _",
    "value function_. fast algorithms for recovering the value function are thus of interest to many practitioners , but the efficiency challenges in building such methods can be quite different depending on the exact type of optimal control problems . one basic taxonomy is based on the time - horizon of optimization in the problem . is the process stopped at some explicitly specified terminal time ( _ finite - horizon problems _ ) or continues forever ( _ infinite - horizon problems _ ) ? if the terminal time is not specified , but the process eventually stops , does this happen upon entering some pre - specified set ( _ exit - time problems _ ) , or at any point when the controller chooses to do so ( _ optimal - stopping problems _ ) ? for finite - horizon problems , the time - dependence of the value function results in availability of simple and non - iterative ( time - marching ) numerical methods .",
    "in contrast , all other scenarios typically yield large systems of coupled non - linear equations , and finding suitable non - iterative methods for them can be challenging .",
    "the above problem types are classical and the resulting equations are well understood ( for readers convenience we review them in  [ ss : graph_problem_types ] and  [ ss : contin_problem_types ] for discrete and continuous problems respectively ) . in this paper",
    "we are interested in a less studied class of _ randomly - terminated _ or _ `` uncertain - horizon '' _ problems , where the termination is assumed to be the result of a poisson random process .",
    "as we show here , such problems inherit some properties of both finite - horizon and optimal - stopping cases .",
    "efficient numerical methods for them are not as simple as time - marching , but we show that generalizations of non - iterative algorithms previously derived for exit - time problems are applicable .    another natural classification approach is to draw a distinction between deterministic and stochastic control processes . not surprisingly , the former are usually simpler and can be treated by more efficient numerical methods .",
    "this observation holds for dynamic programming equations both in discrete and continuous settings .    in the discrete cases , the deterministic shortest path ( sp ) problems on graphs",
    "are often solved using fast - iterative ( _ label - correcting _ ) and non - iterative ( _ label - setting _ ) methods , including the well - known dijkstra s method @xcite and its parallelizable dial s variant @xcite .",
    "we refer the readers to @xcite for a detailed discussion of these efficient methods on graphs .",
    "the more general stochastic shortest path ( ssp ) problems typically require iterative methods ; a good discussion of ssps can be found in @xcite . except for a few structurally simple examples ,",
    "the exact ( a priori verifiable ) conditions under which non - iterative algorithms are applicable to ssps are still not known .",
    "the second author has previously derived such sufficient conditions for a narrower class of _ multimode _ ssps @xcite , but the problems considered in the current paper lie outside of this class .    in the case of continuous state spaces ,",
    "the deterministic problems lead to first - order non - linear hamilton - jacobi - bellman partial differential equations ; a comprehensive description can be found in @xcite . for exit - time problems ,",
    "the resulting pde is typically static since the starting time does not affect the optimality of any given control .",
    "efficient numerical methods for such static pdes formed an active area of research in the last fifteen years .",
    "for example , dijkstra - like non - iterative numerical methods for isotropic problems were independently introduced by tsitsiklis @xcite and sethian @xcite .",
    "later generalizations lead to ordered upwind methods @xcite applicable to anisotropic problems .",
    "all these methods rely on a careful use of lagrangian information to efficiently solve the eulerian discretized equations , yielding _ space - marching _ algorithms , in which the numerical solution is marched on the grid inward from the boundary of the domain .",
    "on the other hand , most commonly considered stochastic control problems on continuous state space assume that the controlled dynamics is affected by some time - continuous stochastic process ( usually , by a scaled brownian motion ) .",
    "this yields second - order semi - linear pdes and , in the static case , non - iterative numerical methods are not applicable .",
    "the stochasticity considered in this paper is of a different kind ",
    "the process dynamics and the running cost are assumed to be fully deterministic up to the time of termination , but that terminal time is itself a random variable .",
    "such uncertain - horizon problems have applications in production / maintenance planning @xcite , economic growth & global climate change modeling @xcite , and multi - generational games @xcite .",
    "we first show that the optimal control of randomly - terminated problem can be always re - stated as a _ time - discounted infinite - horizon _",
    "problem on the same state space .",
    "( in the continuous case , this reformulation is well - known ; e.g. , @xcite ) .",
    "we then prove that efficient non - iterative methods are applicable for a wide subclass of such problems .",
    "our exact technical assumptions are specified in sections [ ss : graph_uncertain_horizon ] and [ ss : contin_value_func ] , but this class generally includes all problems where maintaining the `` status quo '' is always possible and incurs a smaller immediate cost than any attempt to change the system state .",
    "that assumption allows re - stating this as a deterministic _ optimal stopping _ problem .",
    "we define a _",
    "motionless set _ @xmath0 of all states , starting from which the optimal behavior is to remain in place ( awaiting the termination ) .",
    "unfortunately , the set @xmath0 is not a priori known , which presents a challenge in using label - setting methods , since @xmath1 forms a _ free boundary _ of this problem , from which the numerical solution should be marched into the rest of the domain .",
    "our exposition proceeds on two parallel tracks : the discrete and continuous settings are handled in sections [ s : general_graph ] and [ s : contin_space ] respectively .",
    "some of the technical results are included in the appendixes . throughout the paper",
    "the letters @xmath2 and @xmath3 are reserved for the value functions of randomly - terminated problems , while letters @xmath4 and @xmath5 are used for all other optimal control examples .",
    "we will also use the expressions `` deterministic randomly - terminated processes '' and `` uncertain - horizon processes '' interchangeably . in ",
    "[ ss : v_properties ] and  [ ss : contin_value_func ] we prove the properties of value functions and motionless sets , including their asymptotic behavior depending on the probability distribution for the terminal time .",
    "we review the label - setting for the fully deterministic problems on graphs in ",
    "[ sss : dijkstra_sp ] and then prove the applicability of a dijkstra - like method to uncertain - horizon problems in  [ sss : dijkstra_uncertain ] .",
    "the corresponding generalization of the fast marching method is developed in ",
    "[ ss : fmm_modified ] .",
    "numerical experiments illustrating the properties of the latter are included in ",
    "[ s : examples ] ; several possible generalizations are discussed in  [ s : conclusions ] .",
    "optimal control problems on a finite state space are usually presented as problems of finding optimal paths in a finite directed graph . the notion of `` optimality '' here depends not only on edge costs , but also on termination conditions for the process .",
    "we begin by briefly reviewing several common types of such problems to put uncertain - horizon optimization in context .",
    "we will assume that all paths are considered on a directed graph with @xmath6 nodes @xmath7 .",
    "let @xmath8 denote the set of nodes to which a direct transition from @xmath9 is possible , and assume that @xmath10 is an upper bound on the outdegrees of all nodes ( i.e. , @xmath11 for @xmath12 ) .",
    "suppose @xmath13 is the position after @xmath14 steps .",
    "a sequence @xmath15 is a _ path _ on this graph if @xmath16 for each @xmath17 .",
    "each transition from @xmath9 to @xmath18 incurs a cost @xmath19 ( assumed to be @xmath20 if @xmath21 ) . if the termination occurs at @xmath18 , this results in an additional terminal - penalty @xmath22    * _ finite - horizon problems : _ + the process runs for exactly @xmath23 steps ( where @xmath23 is a constant specified as a part of problem description ) .",
    "the total cost of a path @xmath24 is @xmath25 the central idea of _ dynamic programming _ is to define the _ value function _ @xmath26 as the minimum cost to spend starting from @xmath9 with @xmath27 steps remaining .",
    "bellman s optimality principle @xcite allows to derive equations for @xmath28 using the values in @xmath29 only .",
    "in particular , @xmath30 it is easy to generalize this to use time - dependent @xmath31 and the system ( [ eq : dp_finite_horizon ] ) can be efficiently solved in a single backward - sweep ( from @xmath32 to @xmath33 ) , regardless of the sign of transition cost @xmath34 . * _ exit - time a.k.a .",
    "shortest path ( sp ) problems : _ + here",
    "the termination occurs immediately upon reaching the exit - set @xmath35 ; i.e. , @xmath36 . as a result , @xmath37 ( the min - cost - to - exit - starting - from-@xmath9 ) no longer depends on the number of steps already used to reach @xmath9 .",
    "the value function is defined only in the absence of `` negative cost cycles '' and , by optimality principle , must satisfy @xmath38 this is a system of @xmath6 coupled non - linear equations , and , unless the graph is acyclic , this system might be expensive to solve iteratively .",
    "if all @xmath39 s are non - negative , label - setting methods ( further discussed in section [ sss : dijkstra_sp ] ) provide an efficient way of solving it . * _ infinite - horizon time - discounted problems : _ + here the process never terminates  the paths are infinite , but the cost of each subsequent step is discounted , i.e. , @xmath40 where @xmath41 is the discounting factor .",
    "the value function @xmath37 is well - defined for all nodes regardless of sign of @xmath39 s and satisfies @xmath42 unlike the sp , in this case optimal paths might include cycles . *",
    "_ optimal stopping problems : _ + same as the infinite - horizon problem , but with an option of deciding to terminate the process at any node @xmath43 by paying an exit time - penalty @xmath44 .",
    "the value function then satisfies @xmath45 we note that , unlike the previous case , the value function is well - defined even with @xmath46 ( i.e. , without time - discounting ) .      in this paper",
    "we concentrate on _ uncertain - horizon problems _ , where the process does not terminate deterministically after a pre - specified number of steps nor upon reaching some special exit set @xmath47 , but instead might terminate with probability @xmath48 after each transition dependent on the current state or even on the last transition ) can be handled very similarly ; in this section we use the same constant @xmath49 at all nodes for the sake of notational simplicity . ] .",
    "two simple examples of such randomly - terminated problems are provided in figure [ fig : discrete_examples ] .",
    "we will use @xmath50 to denote the set of all infinite paths on @xmath51 and @xmath52 for the set of all paths starting from @xmath43 .",
    "if the termination occurs after @xmath23 steps , the total cost of the path is the same as in ( [ eq : finite_path_cost ] ) .",
    "the a priori probability of termination after exactly @xmath53 steps is clearly @xmath54 .",
    "the cost of an infinite path @xmath55 is now a random variable whose expected value is @xmath56 = \\sum_{t=1}^{\\infty } \\hat{p}_t \\ , cost(y_0 , \\dots , y_t).\\ ] ] since the graph is finite , functions @xmath34 and @xmath57 are bounded , the above series is absolutely convergent , and @xmath58 is uniformly bounded for all @xmath59 .",
    "+ starting the process from any node @xmath60 , the goal is to minimize the expected total cost up to the termination .",
    "the value function @xmath61 can be defined as @xmath62 where the existence of a minimizer follows from the compactness of @xmath63 and continuity of @xmath64 ; see lemma [ lm : min_attained ] in the appendix a.    we will say that @xmath65 is a _ simple path _ if @xmath66 implies @xmath67 . a _ simple loop _ is a periodic simple path .",
    "since the set @xmath51 is finite , any simple path leads to a simple loop within the first @xmath6 steps .",
    "we will use @xmath68 to denote the set of all simple paths and @xmath69 for the set of all such paths starting from @xmath43 .",
    "theorem [ thm : stationary ] in the appendix a proves the existence of a _ minimizing simple path _ for every @xmath60 .",
    "we note that on any path at least one transition happens before the termination with probability one . as a result we can rewrite @xmath70",
    "this yields the optimality principle : @xmath71    [ rem : relation_to_infinite_horizon ] this problem can also be restated as an infinite - horizon deterministic control by setting the costs of transition @xmath72 and the discounting factor @xmath73 .",
    "indeed , the expected cost of any uncertain - horizon path can be re - written as @xmath74 & = & \\sum_{k=0}^{\\infty } k(y_k , y_{k+1 } ) \\left ( \\sum_{t = k+1}^{\\infty } \\hat{p}_t \\right ) \\ ; + \\ ; \\sum_{t=1}^{\\infty } q(y_t ) \\hat{p}_t \\ ; = \\ ; \\sum_{k=0}^{\\infty } k(y_k , y_{k+1 } ) ( 1-p)^k \\ ; + \\ ; \\sum_{t=1}^{\\infty } q(y_t ) \\hat{p}_t\\\\ & = & \\sum_{k=0}^{\\infty } \\left ( k(y_k , y_{k+1 } ) + p q(y_{k+1 } ) \\right ) ( 1-p)^k \\ ; = \\ ; \\sum_{k=0}^{\\infty } \\alpha^k \\tilde{k}(y_k , y_{k+1 } ) .",
    "\\label{eq : infinite_horizon}\\end{aligned}\\ ] ]    conversely , consider an infinite - horizon deterministic control problem on a graph specified by a matrix of @xmath75 s and by a discounting factor @xmath41 .",
    "assume that self - transitions are allowed at every node , i.e. , @xmath76 ( whenever we need to refer to all _ other _ transitions possible from @xmath9 , we will use the set @xmath77 . ) subject to assumption * ( a1 ) * , each infinite - horizon problem can also be restated as a randomly - terminated problem by setting : @xmath78    [ rem : free_self_transition ] similarly , if the assumption * ( a1 ) * holds in an uncertain - horizon problem , we can always assume that self - transitions incur zero cost by setting @xmath79 thus , for the rest of this paper we will assume without loss of generality that @xmath80    we will also make an additional assumption , the computational consequences of which will become clear in section [ sss : dijkstra_uncertain ] : @xmath81    more generally , we can similarly treat any randomly - terminated problem , where a transition from another node costs at least as much as staying in place .",
    "( indeed , if * ( a1 ) * holds and @xmath82 for all @xmath83 and @xmath84 , then the procedure described in remark [ rem : free_self_transition ] will ensure that @xmath85 will satisfy * ( a2 ) * and * ( a3)*. )    in view of , if a constant is added to all @xmath86 s , then the same constant is added to all @xmath87 s . as a result , we can also assume without loss of generality that @xmath88 for @xmath89      figure [ fig : discrete_examples]a shows a simple example , where every optimal path is a loop .",
    "as we ll see later , such loops make it impossible to solve the system efficiently .",
    "fortunately , conditions * ( a1 ) * - * ( a3 ) * preclude this scenario and also yield useful bounds on @xmath3 .",
    "we will refer to a path @xmath90 as _ eventually motionless _",
    "( or _ e.m .",
    "_ ) if there exists some @xmath91 such that @xmath66 for all @xmath92 .",
    "we note that for any such e.m .",
    "path the formula can be rewritten as @xmath93 we will refer to a node @xmath60 as _ motionless _ if @xmath94 is a valid path and @xmath95 . we will also use @xmath96 to denote a set of all such motionless nodes . to illustrate , in the example of figure [ fig : discrete_examples]a @xmath97 regardless of @xmath49 . in the example of figure [ fig : discrete_examples]b , @xmath98 , but @xmath99 only if @xmath100 .",
    "suppose an uncertain - horizon problem is such that * ( a1 ) * , * ( a2 ) * , and * ( a3 ) * hold",
    ". then    1 .",
    "@xmath101 for all @xmath102 .",
    "if @xmath103 is optimal and @xmath104 then @xmath105 .",
    "3 .   if a loop @xmath106 is an optimal path , then @xmath107 for all @xmath108 4 .   for every @xmath60",
    "there exists an e.m .",
    "optimal path @xmath109 .",
    "5 .   if an e.m .",
    "optimal path from @xmath43 leads through @xmath110 , then there exists an e.m .",
    "optimal path from @xmath110 avoiding @xmath43 .",
    "[ thm : causality ]    1 .",
    "assumption * ( a2 ) * and ( [ eq : dp_uncertain ] ) yield @xmath111 2 .",
    "first , suppose @xmath112 ; i.e. , @xmath113 is a minimizer in ( [ eq : dp_uncertain ] ) .",
    "then , using the above , @xmath114 . applying this argument recursively yields @xmath105 .",
    "an optimal path is optimal for every node on it .",
    "suppose @xmath115 for @xmath116 .",
    "then @xmath117 : given * ( a3 ) * , the path @xmath118 is at least as good for @xmath110 as the original loop @xmath119 .",
    "also @xmath120 .",
    "the equality @xmath121 is only possible if @xmath122 and @xmath123 for @xmath116 . as a result ,",
    "every @xmath124 and @xmath125 .",
    "( this also shows that a non - trivial loop can not be optimal if @xmath126 . )",
    "theorem [ thm : stationary ] shows the existence of an optimal simple path @xmath119 ( eventually leading to a simple loop ) .",
    "the above also shows that the entry point of that simple loop @xmath127 is a motionless node .",
    "thus , the loop can be replaced by @xmath128 without changing the cost of @xmath119 .",
    "5 .   for @xmath129",
    "this is obvious ( if an optimal path from @xmath43 passes from @xmath110 , then @xmath130 .",
    "if @xmath131 , then combining segments of both optimal paths we can form an optimal loop passing through both @xmath43 and @xmath110 . as shown above , this implies that @xmath110 is a motionless node .    in the rest of this subsection we will use superscripts to indicate the dependence on @xmath49 of the expected path - cost @xmath132 , the value function @xmath133 and the motionless set @xmath134 .",
    "wherever this superscript is omitted , the properties hold for any fixed @xmath48 . to address two extreme cases , we introduce @xmath135 and @xmath136 as respective solutions of two systems : @xmath137    we see that is a variant of with @xmath46 . in other words , @xmath135 is the value function for a deterministic optimal stopping problem with no time - discounting . as a result ,",
    "the label - setting methods of section [ sss : dijkstra_sp ] are applicable , and for every starting node @xmath43 there exists some optimal finite path @xmath138 ; i.e. , @xmath139 and @xmath140 . in the framework of randomly - terminated problems",
    ", @xmath135 can be intuitively interpreted as the limiting case , in which the termination is so unlikely that we are guaranteed to reach any node of our choice before it occurs .",
    "( this interpretation is justified in theorem [ thm : asymptotics_v ] below ) .",
    "@xmath136 corresponds to the opposite case , where the termination always happens after the very first transition .",
    "we note that since @xmath141 , we have @xmath142 for all @xmath143 by the above definition , if @xmath144 , we have @xmath145 for all @xmath146 .",
    "an important subset is obtained when the self - transition is _ the only _ optimal strategy : @xmath147 below we show that @xmath148 .",
    "however the example in figure [ fig : subtle_motionless ] shows that some nodes in @xmath149 might become motionless only in the limit ( as @xmath150 ) . on the other hand ,",
    "every node in @xmath151 is already motionless for some @xmath152 .    to simplify the notation",
    ", we will refer to a path @xmath153 as _ @xmath49-optimal _ if @xmath154 .",
    "suppose an uncertain - horizon problem is such that * ( a1 ) * , * ( a2 ) * , and * ( a3 ) * hold",
    ". then    1 .",
    "suppose @xmath155 is a @xmath49-optimal e.m .",
    "path leading from @xmath156 to @xmath157 .",
    "define the cost of each finite subpath as in .",
    "then @xmath158 and @xmath159 for all @xmath160 ( and the second inequality becomes strict if @xmath161 ) .",
    "2 .   @xmath162 $ ] for all @xmath48 and all @xmath60 .",
    "3 .   @xmath163 4 .",
    "@xmath164 for all @xmath102 as @xmath150 .",
    "@xmath165 for all @xmath102 as @xmath166",
    ". 6 .   if @xmath167 , then @xmath168 in particular , @xmath169 for @xmath170 7 .   for every @xmath171 ,",
    "there exists a sufficiently large @xmath152 , such that @xmath172 .",
    "8 .   for every @xmath173 ,",
    "there exists a sufficiently small @xmath174 , such that @xmath175 .",
    "define the sets of local and global minima of @xmath57 : @xmath176 then @xmath177    [ thm : asymptotics_v ]    1 .",
    "let @xmath178 and define @xmath179 .",
    "if @xmath180 , then the formula implies that @xmath181 , which contradicts the @xmath49-optimality of @xmath119 .",
    "( we emphasize that the above argument _ does not _ imply that @xmath182 is monotone non - increasing in @xmath183 along every @xmath49-optimal path ; see figure [ fig : discrete_examples]b for a counter - example . )",
    "we note that @xmath184 where the second inequality uses * ( a3 ) * and becomes strict if @xmath126 .",
    "thus , @xmath159 .",
    "2 .   let @xmath155 be a @xmath49-optimal e.m .",
    "path leading from @xmath43 to @xmath157 .",
    "note that defines @xmath132 as a weighted average of @xmath182 terms .",
    "then , from the previous part , @xmath185 . on the other hand , @xmath136 can also be defined as @xmath186 , minimizing over all `` infinite '' paths @xmath109 of the form @xmath187 ; hence , @xmath188 .",
    "3 .   fixing @xmath189 , we define @xmath190 to be the minimum number of transitions before reaching the motionless node along the @xmath189-optimal paths from @xmath43 .",
    "( e.g. , @xmath191 . )",
    "we prove this statement by induction on @xmath190 .",
    "first , for @xmath192 , we have @xmath193 .",
    "now suppose the statement is true for all @xmath18 such that @xmath194 and consider @xmath9 such that @xmath195 then there exists @xmath196 , a minimizer in formula such that @xmath197 . as a result , @xmath198 4 .",
    "for any @xmath153 , formulas and can be combined to show that , @xmath199 \\ ,",
    ", \\sum_{t=2}^{\\infty } ( 1-p)^{t-1 } p \\ , cost(y_0 , \\dots , y_t ) \\ ; \\to   \\ ; \\left[k(y_0,y_1 ) + q(y_1 ) \\right ] \\text { as } p \\to 1.\\ ] ] 5 .   for any e.m .",
    "@xmath200 , the formula implies that @xmath201 as @xmath202 if the finite path @xmath203 is optimal for @xmath204 , then @xmath205 , implying @xmath206 6 .   if @xmath207 , then @xmath208 .",
    "thus , @xmath209 7 .   since @xmath171 , we can define @xmath210 as a result , for any simple path @xmath103 involving at least one non - trivial transition ( i.e. , with @xmath211 ) , we have @xmath212 \\geq q_i . \\ ; $ ] thus , @xmath213 8 .",
    "part 5 of this theorem implies @xmath214 .",
    "thus , for sufficiently small @xmath49 , @xmath215 , and @xmath216 9 .   if @xmath217 , then for any path @xmath138 starting from @xmath218 , we have @xmath219 if @xmath220 , then @xmath221 for all @xmath222 + if @xmath223 , the definitions of @xmath224 and @xmath225 coincide . in this case",
    "every @xmath49-optimal trajectory becomes motionless at some local minimum of @xmath57 .",
    "for the general infinite - horizon and/or optimal stopping problems reviewed in ",
    "[ ss : graph_problem_types ] , the cost of any trajectory is obviously a non - decreasing function of the discounting factor @xmath226 .",
    "we note that part 3 of the above theorem does not contradict this monotonicity , since the procedure described in remark [ rem : relation_to_infinite_horizon ] also makes @xmath75 s dependent on @xmath49 .",
    "the optimality principle ( [ eq : dp_uncertain ] ) yields a system of @xmath6 coupled non - linear equations , which can be challenging to solve efficiently .",
    "an operator @xmath227 can be defined on @xmath228 component - wise by applying the right hand side of equation ( [ eq : dp_uncertain ] ) ; i.e. , for any @xmath229 , @xmath230 clearly , @xmath231 $ ] is a fixed point of @xmath227 and one hopes to recover @xmath3 by _ value iteration _ :",
    "@xmath232    the value iterations will converge ( i.e. , @xmath233 ) for any initial guess @xmath234 @xcite , but this approach is not very efficient .",
    "it is generally possible that the value iterations will not converge in a finite number of steps ( e.g. , see the example in figure [ fig : discrete_examples]a ) .",
    "if the problem is such that the convergence is attained in finitely many steps for every @xmath234 , it is easy to show that @xmath235 ( i.e. , at most @xmath6 value iterations will be needed ) .",
    "since the computational cost of each value iteration is @xmath236 , this results in the overall cost of @xmath237 . a standard gauss - seidel relaxation can be used to speed up the convergence , but then the efficiency becomes strongly dependent on the chosen node - ordering and the worst case computational cost remains @xmath237 .",
    "label - setting methods provide an attractive alternative to value iterations for problems with intrinsic _",
    "causality_. these methods reorder the iterations over the nodes to guarantee that each @xmath87 is recomputed at most @xmath10 times .",
    "this can also be interpreted as finding the optimal gauss - seidel ordering _ dynamically _  based on the value function already correctly computed on a part of the graph .      for reader s convenience ,",
    "we first provide a brief overview of standard label - setting methods for deterministic shortest path problems ( [ eq : dp_classic_sp ] ) .",
    "if we assume @xmath238 then @xmath239 implies @xmath240 .",
    "this induces a causal ordering : each @xmath241 depends only on the smaller values in the adjacent nodes .",
    "i.e. , if @xmath113 and @xmath242 then replacing @xmath243 with @xmath20 will not change the value of @xmath241 as computed by formula ( [ eq : dp_classic_sp ] ) .",
    "this is the basis of dijkstra s classic method @xcite .",
    "the method subdivides @xmath51 into three classes : @xmath244 ( or `` permanently labeled '' ) nodes , @xmath245 ( or `` tentatively labeled '' ) nodes that have @xmath244 nodes among their neighbors , and @xmath246 ( or `` unlabeled '' ) nodes .",
    "the values for @xmath245 @xmath9 s are successively re - evaluated using only the previously @xmath244 adjacent values : @xmath247 where @xmath248 .",
    "the algorithm is initialized by designating all exit - nodes as @xmath245 ( with tentative labels @xmath249 for all @xmath250 ) and all other nodes as @xmath246 ( with tentative labels @xmath251 for all @xmath252 ) . at each stage",
    "the algorithm chooses the smallest of tentative labels @xmath253 , designates @xmath254 as @xmath244 ( making this label permanent and removing @xmath254 from the list of @xmath245 ) , and re - evaluates @xmath241 for each not - yet-@xmath244 @xmath9 such that @xmath255 since @xmath254 is the only new element in @xmath256 , that re - evaluation can be more efficiently performed by setting @xmath257 in addition , all previously @xmath246 @xmath9 s updated at this step are designated @xmath245 . + the algorithm terminates once the list of @xmath245 nodes is empty , at which point the vector @xmath258 satisfies the system of equations ( [ eq : dp_classic_sp ] ) .",
    "the necessity to sort all tentative labels suggests the use of heap - sort data structures for @xmath245 nodes @xcite , resulting in the overall computational complexity of @xmath259 .    if @xmath126 , then dial s label - setting method is also applicable @xcite",
    "the idea is to avoid sorting @xmath245 nodes and instead place them into `` buckets '' of width @xmath260 based on their tentative values . if @xmath253 is the `` smallest '' of tentative labels and @xmath261 is currently in the same bucket , then even after @xmath254 is permanently labeled , it can not affect @xmath261 since @xmath262 thus , a typical stage of dial s method consists of @xmath263 everything in the current bucket , recomputing all not - yet-@xmath244 nodes adjacent to those newly @xmath244 , switching them to other buckets if warranted by the new tentative labels , and then moving on to the next bucket . since inserting to and deleting from a bucket can be performed in @xmath264 time , the overall computational complexity of dial s method becomes @xmath236 .",
    "in addition , while dijkstra s approach is inherently sequential , dial s method is naturally parallelizable .",
    "however , in practice , dial s method is often less efficient then dijkstra s because the constant factor hidden in the former s @xmath236 asymptotic complexity depends on @xmath260 and on average @xmath39 values encountered along optimal paths .",
    "many other enhancements of the above label - setting methods are available in the literature ( e.g. , see @xcite , @xcite and references therein ) .",
    "we now show that a variation of dijkstra s method is applicable in the uncertain - horizon case provided * ( a1)*-*(a3 ) * hold .",
    "part 2 of theorem [ thm : causality ] shows the causality necessary for a variant of dijkstra s method to correctly compute the value function .",
    "some modifications are needed , however .",
    "first of all , the tentative labels should be initially set to @xmath265 .",
    "secondly , the update formula ( [ eq : temp_labels_local_determ ] ) has to be replaced by @xmath266 thirdly , there is a question of which nodes should be initially placed on the @xmath245 list .",
    "( since this list is maintained using a heap - sort data structure , this decision will directly impact the efficiency of the method . ) the only way for dijkstra s to produce a wrong result is to have some node @xmath254 @xmath244 before its optimal neighbor @xmath267 .",
    "suppose @xmath119 is @xmath254 s optimal path becoming motionless at some node @xmath110 ; i.e. , @xmath268 , where @xmath269 , @xmath270 , and @xmath271 .",
    "by part 2 of theorem [ thm : causality ] , @xmath272 . as long as",
    ", @xmath157 is initially marked as @xmath245 , it is easy to show that @xmath254 will not be @xmath244 prematurely .",
    "so , it is sufficient to initially mark as @xmath245 all motionless nodes . unfortunately , the set @xmath0 is not known in advance , but part 6 of theorem [ thm : asymptotics_v ] can be used to over - estimate it with @xmath273 however , the following lemma shows why it is already sufficient to mark as @xmath245 a smaller set @xmath225 :    for every @xmath274 there exists a path @xmath275 such that + @xmath276 , @xmath269 , and , for all @xmath277 , + either @xmath127 is a motionless node and @xmath278 ; + or @xmath279 is an optimal transition from @xmath127 + ( i.e. , @xmath280 ) .",
    "[ lm : causal_chain ]    start with an optimal e.m . path for @xmath254 leading to some motionless node @xmath110 .",
    "if @xmath281 , then there exists @xmath282 such that @xmath283 .",
    "now concatenate the @xmath43 s optimal e.m .",
    "path and repeat the process until reaching @xmath225 .    using concatenated paths described in lemma [ lm : causal_chain ] , it is easy to prove by induction that , starting with @xmath225 marked as @xmath245 , the order of acceptance will be also causal ( i.e.",
    ", @xmath284 will be @xmath244 before @xmath254 ) .",
    "we summarize the resulting dijkstra - like method for uncertain - horizon processes on graphs in algorithm [ alg : d_modified ] ( allowing for edge - dependent probabilities of termination @xmath285 s ) .",
    "start with all nodes marked as @xmath246 ; + set @xmath286 for all @xmath287 ; + mark all local minima of @xmath57 as @xmath245 ;    while ( @xmath245 list is not empty ) \\ { + let @xmath288 be the smallest @xmath245 value ; + mark @xmath289 @xmath244 ; + for each not - yet-@xmath244 @xmath290 such that @xmath291 \\ { + set @xmath292 + if @xmath290 is @xmath246 , mark it @xmath245 ; + } + }    the direct procedure of identifying all local minima takes @xmath293 operations and may or may not be advantageous ( after all , the algorithm will also work if the entire @xmath51 is initially labeled as @xmath245 ) .",
    "however , this pre - processing becomes clearly worthwhile if several different uncertain - horizon problems are to be solved on the same graph ( with the same terminal cost function @xmath294 ) but with different transition cost functions @xmath295 .",
    "finally , we note that if @xmath126 , then a similarly modified dial s method will also be applicable with buckets of width @xmath260 .      as a sample application for uncertain - horizon processes , we consider the task of optimally using the idle - time to minimize the expected waiting time of the first client .",
    "we model arrival of client requests as a poisson process with @xmath296 requests arriving on average per unit time ; i.e. , if @xmath297 is the time of the first request , then @xmath298 and @xmath299 \\right ) = \\lambda e^{-\\lambda t } \\ , dt$ ] . if @xmath102 is the current state of the system when the first request arrives , then @xmath300 is the expected time for completing that request . at every stage of the process",
    "we can either decide to stay in the current state or start a transition to any state @xmath113 .",
    "such a transition will take some time @xmath301 and the system will not be capable of responding to any incoming requests until that transition is completed .",
    "thus , even if @xmath302 , this has to be balanced against the expected additional waiting time @xmath303 provided @xmath304 , i.e. , @xmath305 if @xmath306 is the minimal expected wait time starting from the state @xmath9 , then @xmath307 where @xmath308 .",
    "this system clearly satisfies the assumptions * ( a1 ) * , * ( a2 ) * , and * ( a3 ) * and the label - setting methods of section [ sss : dijkstra_uncertain ] are therefore applicable .",
    "one interesting application of this problem is to minimize the expected wait time of the first emergency caller by moving an ambulance during the idle - time . in that case",
    ", @xmath43 is the current position of an ambulance and @xmath44 is the expected travel time from @xmath43 to the caller s location .",
    "suppose @xmath309 is the minimum travel time through the graph from @xmath43 to @xmath110 and @xmath310 is the probability that the next call originates from @xmath110 .",
    "then @xmath311 if @xmath312 is non - zero for a small fraction of nodes in @xmath51 only , then the distances @xmath309 are best evaluated through a repeated application of the standard dijkstra s method .",
    "otherwise , floyd - warshall algorithm will likely be more efficient @xcite .",
    "any global minimum of @xmath57 is obviously the optimal location to `` park '' an ambulance ( or to build an ambulance depot ) .",
    "but if the ambulance starts at any other location @xmath9 , the optimal strategy for moving it while expecting the call is recovered by using the minimizer in formula .",
    "[ rem : approx_dynaprog ] after this paper was already submitted , we have found a somewhat different single - ambulance model introduced in a recent technical report @xcite , which also contains an independently developed label - setting algorithm for the `` no running cost '' subcase ( i.e. , all @xmath313 ) .    of course , realistic dynamic fleet management problems require efficient control of multiple vehicles simultaneously .",
    "the expected response time would then depend on the current position and status of all vehicles , resulting in the exponential growth of the state space .",
    "this curse of dimensionality typically precludes the direct use of the above approach , but a computationally feasible alternative is provided by the methods of _ approximate dynamic programming _ @xcite .",
    "a recent example of the latter applied to the ambulance redeployment problem can be found in @xcite .",
    "non - iterative algorithms for approximate dynamic programming would be clearly very useful , but , to the best of our knowledge , no such methods are currently available .",
    "we now derive the results parallel to those in section [ s : general_graph ] but in continuous state - space .",
    "we start with the taxonomy of `` common '' deterministic optimal control problems on @xmath314 .",
    "we then show the relationship between the uncertain - horizon problems and time - discounted optimal - stopping problems . a modified version of fast marching method is then developed for the latter and illustrated by a number of numerical examples in section [ s : examples ] .",
    "we will assume that @xmath315 is an open bounded subset of @xmath316 .",
    "suppose @xmath317 is a compact set of control values , and the set of admissible controls @xmath318 consists of all measurable functions @xmath319 .",
    "the dynamics of the system is defined by @xmath320 where @xmath321 is the system state at the time @xmath322 , @xmath323 is the initial system state , and @xmath324 is the velocity .",
    "we will also assume that the running cost @xmath325 $ ] and the discount rate @xmath326 are known .",
    "( the case @xmath327 corresponds to no discounting . )",
    "we note that the partial differential equations derived for problems in this subsection typically do not have classical ( smooth ) solutions on the entire domain and the weak solutions are generally not unique .",
    "the theory of _ viscosity solutions _ introduced by crandall and lions @xcite is used to overcome this difficulty , picking out the unique weak solution coinciding with the value function of the corresponding control problem .",
    "here we only provide a formal derivation and classification of pdes ; rigorous proofs and many relevant references can be found in @xcite .    * _ finite - horizon problems : _",
    "+ suppose the process runs until the specified time @xmath328 .",
    "this allows us to define the total cost of using a control @xmath329 starting from @xmath323 with @xmath330 seconds left before the termination : @xmath331 where @xmath23 is the starting time and @xmath332 is the terminal cost .",
    "the value function @xmath333 $ ] can be defined as usual : @xmath334 where the @xmath335 is taken over @xmath336 \\right\\}.\\ ] ] the optimality condition shows that , for any @xmath337 , @xmath338 assuming that @xmath339 , taylor - expanding and letting @xmath340 , it is easy to show that @xmath4 is a solution of a hamilton - jacobi - bellman pde : @xmath341 here @xmath342 is the derivative with respect to time , and @xmath343 is a vector of spatial derivatives .",
    "this is a _",
    "terminal value problem _ for a hyperbolic non - linear pde .",
    "the optimal trajectories coincide with the characteristics of this equation .",
    "since it is time - dependent , the numerical approximation can be computed very efficiently by _ time - marching _ ( from @xmath344 into the past ) . *",
    "_ undiscounted exit - time problems : _",
    "+ here , @xmath345 and the process terminates upon exiting from @xmath346 ; i.e. , @xmath347 and the terminal cost is defined only on the boundary ( @xmath348 ) .",
    "since both the cost and dynamics are not directly dependent on time , the value function does not depend on @xmath23 either and @xmath349 is defined by taking @xmath335 over @xmath318 .",
    "similar formal reasoning shows that @xmath349 must satisfy a static hamilton - jacobi - bellman pde with dirichlet boundary conditions",
    "@xmath350 if we assume @xmath351 , this guarantees that wherever @xmath352 , all optimal paths lead to @xmath353 in finite time .",
    "thus , all characteristics originate from @xmath353 and @xmath351 implies the monotone growth of @xmath4 along each characteristic .",
    "this gives one reasons to hope for causal ( label - setting ) numerical methods after the pde is discretized on a grid .",
    "such efficient methods were , indeed , constructed for a number of special cases . in the fully _ isotropic _",
    "case , @xmath354 , @xmath355 , and @xmath356 . here",
    ", a unit vector @xmath357 is our chosen direction of motion , @xmath358 is the speed of motion , and reduces to the eikonal pde : @xmath359 two dijkstra - like methods for discretizations of this equation were introduced by tsitsiklis @xcite and sethian @xcite .",
    "the former was done in the context of semi - lagrangian discretizations for control - theoretic problems ; the latter ( the fast marching method ) was introduced for upwind finite - difference discretizations of isotropic front propagation problems .",
    "a detailed discussion of connections between these two approaches can be found in @xcite .",
    "the fast marching method was later extended by sethian and collaborators to higher order upwind discretizations on grids and unstructured meshes in @xmath316 and on manifolds .",
    "all dijkstra - like methods have the same computational complexity of @xmath259 , where @xmath6 is the number of gridpoints .",
    "another algorithm introduced by tsitsiklis on an 8-neighbor stencil mirrors the logic of dial s method and results in @xmath236 computational complexity ( see @xcite and the generalizations in @xcite ) .",
    "+ a more general anisotropic case is obtained when @xmath360 , @xmath355 , and @xmath361 ( i.e. , both the running cost and the speed can depend on the direction of motion ) .",
    "upwind discretizations of the resulting pde are generally not causal , making label setting methods inapplicable .",
    "ordered upwind methods circumvent this difficulty by dynamically extending the stencil just enough to restore the causality , resulting in dijkstra - like computational complexity , but with an additional `` anisotropy coefficient '' @xcite . *",
    "_ infinite - horizon problems : _",
    "+ here , the cost of each control is defined as before , except that @xmath362 , @xmath227 is always taken to be @xmath20 , and there is no terminal cost : @xmath363 since we are moving for an infinite time , the value function @xmath4 is no longer time - dependent .",
    "( the fact that @xmath4 is finite follows from @xmath362 and the boundedness of @xmath34 . to remain in @xmath315 , the @xmath335",
    "is taken over @xmath364 . )",
    "similar formal reasoning shows that @xmath349 must satisfy a static hamilton - jacobi - bellman pde @xmath365 we note that there is also a well - known version of this problem , where the process can also be terminated upon hitting @xmath353 ; see @xcite . in that case , @xmath4 is defined by taking @xmath335 over @xmath318 , resulting in dirichlet boundary conditions on @xmath353 interpreted _ in the viscosity sense_. however , unlike the undiscounted exit - time problems defined above , here the optimal trajectories can be periodic inside @xmath315 even if @xmath351 .",
    "this generally precludes any use of causal numerical methods . * _ optimal stopping problems : _ + same as the infinite - horizon problem , but with an option of deciding to terminate the process at any point @xmath227 : @xmath366 where , as in the finite - horizon case , @xmath332 .",
    "the value function can be defined by taking @xmath335 over all controls and all termination times : @xmath367 the direct consequence of this is the fact that @xmath368 on @xmath315 and , wherever @xmath4 is less than @xmath57 , it should be formally a solution of . in this case",
    ", @xmath4 is the viscosity solution of the following _ variational inequality of obstacle type _ : @xmath369 see @xcite for a rigorous derivation .",
    "let @xmath370 .",
    "then the pde is satisfied on @xmath371 and @xmath372 forms a _ free boundary _ for this problem .",
    "it is not hard to show that the optimal trajectories can not be periodic , provided @xmath373 for all @xmath323 and @xmath357 . in this case",
    ", all characteristics of this pde run into @xmath371 from @xmath374 and the space - marching numerical approach is feasible .",
    "however , since @xmath374 is a priori unknown , this presents an additional challenge for label - setting methods .",
    "( the equivalent properties of uncertain - horizon processes will be considered in detail in the next subsection . )",
    "+ we note that the analysis of optimal stopping problems can be reduced to that of infinite horizon problems if we extend the set of control values by adding a special `` motionless '' control @xmath375 such that @xmath376 and @xmath377 for all @xmath378 .",
    "similarly , any infinite horizon problem with a motionless control @xmath375 available in every state @xmath323 can also be viewed as an optimal stopping problem by setting @xmath379      we now consider a randomly - terminated state - restricted undiscounted problem .",
    "the dynamics is yet again restricted to @xmath346 , the state evolution is described by , where @xmath380 is lipschitz - continuous in @xmath323 and continuous in @xmath357 .",
    "we assume that both @xmath34 and @xmath57 are lower semi - continuous functions satisfying the following : + * ( b1 ) * @xmath381 is the terminal cost such that + @xmath382    * ( b2 ) * @xmath383 is the running cost such that @xmath384 + some of the properties proven below , also rely on a stronger assumption : + * ( b3 ) * the velocity @xmath385 is bounded ( i.e. , @xmath386 ) and the motion in every direction is always possible , i.e. , + @xmath387 and all @xmath388 , @xmath389 + we assume that the terminal event is a result of some poisson process and the time till termination has an exponential probability distribution ; i.e. , @xmath390 . thus , starting from @xmath323 , the cost of any individual control @xmath391 is @xmath392 \\ , dt \\\\ \\label{eq",
    ": randomt_trajcost } & = & \\int_0^{+\\infty } e^{-\\lambda s } \\left [ k ( { { \\mbox{\\boldmath${y}$}}}(s ) , { { \\mbox{\\boldmath${a}$}}}(s ) ) \\ , + \\",
    ", \\lambda q({{\\mbox{\\boldmath${y}$}}}(s ) ) \\right ] \\ , ds\\end{aligned}\\ ] ] where the second equality follows from the fubini s theorem .",
    "this shows that any randomly - terminated problem can be converted to a discounted infinite - horizon problem with @xmath393 and @xmath394 this relationship is well - known and has been previously used in @xcite to treat even more general random - termination problems ( e.g. , with @xmath395 ) .",
    "the value function can then be defined as usual @xmath396    [ rem : nonnegative_costs ] in view of , adding any constants @xmath397 and @xmath398 to functions @xmath34 and @xmath57 respectively , will result in adding @xmath399 to the value function @xmath2 .",
    "thus , the above assumptions about the non - negativity of @xmath400 and @xmath401 can be made without any loss of generality .",
    "assuming @xmath402 , @xmath34 and @xmath57 are lipschitz , the value function @xmath2 is a @xmath346-_constrained viscosity solution _",
    "@xcite of a hamilton - jacobi pde : @xmath403    before using the fact that @xmath404 is the viscosity solution of the corresponding variational inequality , we first prove a number of properties of the value function directly .",
    "a standard treatment of state - constrained infinite - horizon problems shows that , for sufficiently regular costs , dynamics , and @xmath353 , @xmath404 is bounded uniformly continuous . using an additional controllability assumption * ( b3 ) * we provide a direct proof of local lipschitz - continuity of @xmath404 .",
    "assume * ( b1)*-*(b3)*. then the value function of the randomly - terminated problem is locally lipschitz - continuous on @xmath315 with the lipschitz constant @xmath405 .",
    "[ lm : v_lip ]    suppose @xmath406 are such that the straight line segment connecting these two points lies inside @xmath315 .",
    "suppose @xmath329 is a control and @xmath407 is the corresponding trajectory such that we follow that straight line from @xmath408 to @xmath409 and then switch to the optimal control of @xmath409 : @xmath410 @xmath411 the existence of such @xmath329 and the fact that @xmath412 follow from the controllability assumption * ( b3)*. then , from the optimality principle , @xmath413 \\ , ds \\",
    ", + \\ , e^{-\\lambda \\tau } v({{\\mbox{\\boldmath${x}$}}}_2)\\\\ & \\leq & \\tau   ( k_2 + \\lambda q_2 ) + v({{\\mbox{\\boldmath${x}$}}}_2 ) \\ ; \\leq \\ ; \\frac{|{{\\mbox{\\boldmath${x}$}}}_2-{{\\mbox{\\boldmath${x}$}}}_1|}{f_1}(k_2 + \\lambda q_2 ) + v({{\\mbox{\\boldmath${x}$}}}_2 ) = |{{\\mbox{\\boldmath${x}$}}}_2-{{\\mbox{\\boldmath${x}$}}}_1| l_v   + v({{\\mbox{\\boldmath${x}$}}}_2).\\end{aligned}\\ ] ] to complete the proof , the above argument can be repeated reversing the roles of @xmath408 and @xmath409 .",
    "we note that this proof does not use any additional assumptions on the regularity of @xmath34 or @xmath57 .",
    "we now list three essential assumptions that provide a continuous equivalent of * ( a1)*-*(a3 ) * , which defined the discrete randomly - terminated problem in section [ ss : graph_uncertain_horizon ] .",
    "we assume the existence of a special control @xmath414 such that + * ( a1 ) * @xmath415 + * ( a2 ) * @xmath416 + we will also use @xmath417 for the set of all other control values . + * ( a3 ) * @xmath418    assumptions * ( a1)*-*(a3 ) * allow us to restate as an _ optimal stopping problem _ @xmath419 or , in the isotropic case ( when @xmath420 , and @xmath421 ) , @xmath422    using the notation @xmath423^{- } = \\min ( z , 0)$ ] , we can rewrite this variational inequality as follows : @xmath424^{- } , \\label{eq : general_var_ineq_1}\\ ] ] or , in the isotropic case , @xmath425^{-}. \\label{eq : eikonal_var_ineq}\\ ] ]    the pde holds ( with the @xmath426 ^ -$ ] omitted ) on the domain @xmath427 . in section [ ss : fmm_modified ]",
    "we discuss the discretized version of the isotropic variational inequality and a label - setting algorithm for solving it efficiently .",
    "we note that several properties of the value function ( e.g. , part 5 of theorem [ thm : v_causality ] ) can also be obtained directly from the characteristic odes of using stronger regularity assumptions on the dynamics and cost",
    ". however , our proofs provided below are more general .",
    "examples studied in sections [ ss : contin_idle ] and [ ss : maze ] use discontinuous @xmath428 and @xmath34 to test our numerical method ; additional examples ( using discontinuous @xmath57 ) were omitted to save space .",
    "a detailed theoretical discussion of viscosity solutions to hjb pdes with discontinuous lagrangian can be found in @xcite .",
    "the rest of this subsection is based on direct applications of the control - theoretic interpretation rather than on the theory of viscosity solutions .",
    "we will refer to a control @xmath329 as _ eventually motionless _ ( or _ e.m .",
    "_ ) if @xmath429 s.t .",
    "@xmath430 we will say that the corresponding e.m .",
    "trajectory @xmath407 becomes motionless at the point @xmath431 .",
    "given a fixed control @xmath329 , we will further use a notation @xmath432 for the deterministic cost of it if the termination happens at the time @xmath23 .",
    "we note that , for an e.m .",
    "control , formula can be rewritten as @xmath433 we will also define a `` motionless '' set @xmath434 we note that , if the value function is continuous , then the set @xmath0 is closed ( since @xmath435 is upper semi - continuous ) .    the following two theorems list a number of properties of the value function and of optimal controls / trajectories .",
    "assume * ( b1)*,*(b2 ) * , and * ( a1)*-*(a3)*. then , for all @xmath378 ,    1 .",
    "@xmath436 $ ] .",
    "2 .   @xmath437 implies @xmath438 .",
    "3 .   @xmath439 an @xmath440-suboptimal e.m .",
    "control @xmath441 4 .",
    "if @xmath442 , then every optimal control is e.m . 5 .",
    "if @xmath443 is an optimal trajectory , then @xmath444 is a monotone non - increasing function of @xmath23 ( and monotone decreasing up to its motionless point if @xmath442 ) .",
    "if * ( b3 ) * holds , @xmath442 , and @xmath443 is an optimal trajectory for @xmath445 , then @xmath446 provided the straight line from @xmath323 to @xmath443 lies within @xmath346 .",
    "let @xmath447 be the minimum distance from @xmath408 to @xmath409 ( minimized over all allowable trajectories in @xmath346 ) and @xmath448 .",
    "if * ( b3 ) * also holds , then @xmath449 .",
    "[ thm : v_causality ]     +    1 .   * ( a1 ) * , and * ( a2 ) * ensure that @xmath450 , + while * ( a3 ) * shows that for every control @xmath451 2 .",
    "in particular , if @xmath452 then @xmath453 and @xmath454 is the optimal control .",
    "3 .   suppose @xmath455 is a ( possibly non - e.m . )",
    "@xmath456-suboptimal control and @xmath457 is the corresponding trajectory starting from @xmath323 ; i.e. , @xmath458 \\ , ds   \\ ; \\leq \\ ; v({{\\mbox{\\boldmath${x}$ } } } ) + \\frac{\\varepsilon}{2}.\\ ] ] define a control @xmath459 for @xmath460 and @xmath461 after that .",
    "the corresponding trajectory @xmath462 is a truncated version of @xmath463 .",
    "@xmath464 \\ , ds + \\int_{\\tau}^{+\\infty } e^{-\\lambda s } \\lambda q({{\\mbox{\\boldmath${y}$}}}_1(\\tau ) ) \\ , ds\\\\ & = & \\int_0^{+\\infty } e^{-\\lambda s } \\left [ k ( { { \\mbox{\\boldmath${y}$}}}_1(s ) , { { \\mbox{\\boldmath${a}$}}}_1(s ) ) \\ , + \\",
    ", \\lambda q({{\\mbox{\\boldmath${y}$}}}_1(s ) ) \\right ] \\ , ds + \\int_{\\tau}^{+\\infty } e^{-\\lambda s } \\left[\\lambda q({{\\mbox{\\boldmath${y}$}}}_1(\\tau ) ) - k ( { { \\mbox{\\boldmath${y}$}}}_1(s ) , { { \\mbox{\\boldmath${a}$}}}_1(s ) ) \\ , - \\ , \\lambda q({{\\mbox{\\boldmath${y}$}}}_1(s ) ) \\right ] \\ , ds\\\\ & \\leq & { { \\cal{j}}}({{\\mbox{\\boldmath${x}$ } } } , { { \\mbox{\\boldmath${a}$}}}_1(\\cdot ) ) \\ , + \\ , \\left [ q_2 - q_1 - \\frac{k_1}{\\lambda } \\right ] e^{-\\lambda \\tau}.\\end{aligned}\\ ] ] thus , for all sufficiently large @xmath465 , @xmath466 4 .",
    "suppose @xmath467 is a non - e.m .",
    "optimal control starting from @xmath323 and @xmath443 is the corresponding trajectory .",
    "let @xmath468 then @xmath469 such that @xmath470 . then @xmath471 \\ , ds \\ ; \\geq \\ ; e^{-\\lambda \\tau } \\left [ { \\overline}{k}_1 / \\lambda \\ , + \\ , \\tilde{q}_1 \\right ] \\ ; > \\ ; e^{-\\lambda \\tau } q({{\\mbox{\\boldmath${y}$}}}^*(\\tau));\\ ] ] i.e. , making that trajectory motionless at @xmath472 would result in a lower cost , contradicting the optimality of @xmath467 .",
    "suppose @xmath473 is an optimal control starting from @xmath323 , @xmath443 is the corresponding optimal trajectory , and define @xmath474 . by the optimality principle , @xmath475 \\ , ds \\",
    ", + \\ , e^{-\\lambda t } z(t).\\ ] ] by lebesgue s differentiation theorem , @xmath476 is differentiable for almost all @xmath477 and @xmath478 \\ , + \\ , e^{-\\lambda t } z'(t ) \\ , - \\ , \\lambda e^{-\\lambda t } z(t);\\ ] ] hence , @xmath479 - k ( { { \\mbox{\\boldmath${y}$}}}^*(t ) , { { \\mbox{\\boldmath${a}$}}}^*(t))$ ] for almost all @xmath477 . since @xmath480",
    ", we have @xmath481 ; moreover , this inequality becomes strict if @xmath442 and @xmath482 .",
    "+ we note that a similar argument combined with the optimality principle shows that , even for a non - optimal control @xmath329 , the value function along the corresponding trajectory @xmath483 will satisfy @xmath484 - k ( { { \\mbox{\\boldmath${y}$}}}(t ) , { { \\mbox{\\boldmath${a}$}}}(t))$ ] for almost every @xmath477 . 6 .",
    "as shown above , @xmath485 ; so , @xmath486 . on the other hand , by lemma [ lm : v_lip ]",
    ", @xmath487 thus , @xmath488 7 .",
    "since @xmath2 is locally lipschitz by lemma [ lm : v_lip ] , this bound is obtained by following the trajectory from @xmath323 to @xmath489 .    in the rest of this subsection",
    "we will use superscripts to indicate the dependence on @xmath296 of the expected control cost @xmath490 , the value function @xmath491 and the motionless set @xmath492 .",
    "wherever this superscript is omitted , the properties hold for any fixed @xmath493 . we also introduce @xmath494 as the solution of a variational inequality : @xmath495    we see that is a variant of with @xmath345 .",
    "intuitively , @xmath494 can be interpreted as the value function for the limiting case , in which the termination is so unlikely that we are guaranteed to reach any @xmath496 of our choice before it occurs . due to * ( a2 ) * , * ( a3 ) * we can instead minimize over @xmath497 without changing @xmath494 .",
    "let @xmath498 and @xmath499 be respectively the lower dini and the lower hadamard derivatives of @xmath57 along the vector @xmath500 ; i.e. , @xmath501 if @xmath57 is differentiable , then @xmath502 . we also define two sets @xmath503 the minimum in the above definition of @xmath504 is attained since the lower hadamard derivatives are lower semi - continuous functions of the direction . moreover , it is easy to show that for every @xmath505 there exists @xmath506 and @xmath507 such that for all @xmath508 $ ] and all @xmath509 @xmath510    [ rem : inf_motionless_sets ] the set @xmath511 consists of points , starting from which it is never optimal to stay in place regardless of how high @xmath296 is .",
    "however , the points in @xmath512 may also remain outside of @xmath513 for any finite @xmath296 .",
    "e.g. , if @xmath514 and @xmath57 is smooth , then every critical point of @xmath57 will be in @xmath515 , including all strict local maxima of @xmath57 , starting from which it is clearly better to move regardless of @xmath296 , and all strict local minima of @xmath57 , which become motionless when @xmath296 is sufficiently large . below",
    "we show that all point in @xmath504 also have the latter property , at least for isotropic cost / dynamics with @xmath442 .",
    "interestingly , the isotropy and @xmath442 also imply that all strict local maxima of a smooth @xmath57 will also lie in @xmath504 .",
    "this might seem somewhat counterintuitive , but there is no contradiction : for large @xmath296 , the process will likely terminate close to the starting point , and the net decrease in @xmath57 will be insufficient to compensate for the accumulated running cost .    to simplify the notation , we will refer to a control @xmath467 ( and the corresponding trajectory @xmath443 ) as _ @xmath296-optimal _ if @xmath516    bounds and asymptotic behavior of @xmath517 and @xmath513 assuming * ( b1)*,*(b2 ) * , and * ( a1)*-*(a3)*. suppose that an e.m .",
    "@xmath296-optimal control exists for every starting location @xmath378 and @xmath518 .    1 .",
    "if @xmath443 is an optimal trajectory starting from @xmath323 and becoming motionless at some @xmath519 , then @xmath520 and @xmath521 for all @xmath522 ( and the second inequality is strict if @xmath442 ) .",
    "2 .   @xmath523 $ ] for all @xmath493 and all @xmath496 .",
    "3 .   @xmath524 4 .",
    "@xmath525 pointwise as @xmath526 .",
    "@xmath527 pointwise as @xmath528",
    ". 6 .   if @xmath529 , then @xmath530 in particular , @xmath531 for all @xmath493 . 7 .",
    "suppose the cost and dynamics are isotropic as in equation and @xmath442 .",
    "then , for every @xmath505 , there exists a sufficiently large @xmath532 , such that @xmath533 .",
    "8 .   for every @xmath534 ,",
    "there exists a sufficiently small @xmath532 , such that @xmath535 .",
    "we will denote the sets of local minima , strict local minima and global minima of @xmath57 in @xmath346 as @xmath225 , @xmath536 and @xmath537 respectively .",
    "then @xmath538 , and @xmath539 . moreover , if * ( b3 ) * also holds and @xmath540 then @xmath541    [ thm : asymptotics_v ]    1 .",
    "suppose @xmath542 } \\omega(t)$ ] and @xmath543 .",
    "if @xmath544 , then formula shows that the same trajectory but made motionless earlier ( at @xmath408 ) would have a lower cost , contradicting the optimality of @xmath545 .",
    "thus , @xmath520 for all @xmath522 . as a result ,",
    "@xmath546 where the last inequality uses * ( a3 ) * and becomes strict if @xmath442 .",
    "hence , @xmath521 .",
    "+ we emphasize that the above argument _ does not _ imply that @xmath547 is monotone decreasing along optimal trajectories .",
    "in fact , for @xmath548 , it is easy to see that any optimal trajectory starting from a local minimum of @xmath57 ( but outside @xmath0 ) would provide a counter - example .",
    "2 .   suppose that @xmath467 is a @xmath296-optimal control starting from @xmath323 and becoming motionless at the time @xmath549 .",
    "from the formula and using part 1 of the current theorem , @xmath550 where the last inequality reflects the interpretation of @xmath551 as the value function of the deterministic optimal stopping problem .",
    "3 .   suppose that @xmath552 is an e.m .",
    "@xmath553-optimal control and @xmath554 is the corresponding trajectory starting from @xmath323 .",
    "define @xmath555 and @xmath556 .",
    "since this trajectory is @xmath553-optimal , part 5 of theorem [ thm : v_causality ] shows that , for almost all @xmath23 , @xmath557 - k ( { { \\mbox{\\boldmath${y}$}}}(t ) , { { \\mbox{\\boldmath${a}$}}}(t ) ) \\ ; \\leq \\ ; \\lambda_1 \\left [ z_2(t ) - q({{\\mbox{\\boldmath${y}$}}}(t ) ) \\right ] - k ( { { \\mbox{\\boldmath${y}$}}}(t ) , { { \\mbox{\\boldmath${a}$}}}(t)),\\ ] ] where the inequality uses the fact that @xmath558 since the same trajectory is not necessarily @xmath559-optimal , we have @xmath560 - k ( { { \\mbox{\\boldmath${y}$}}}(t ) , { { \\mbox{\\boldmath${a}$}}}(t)).\\ ] ] subtracting these inequalities , and defining @xmath561 , we see that @xmath562 . on the other hand , when the trajectory becomes motionless at the time @xmath563 , we know that @xmath564 ; i.e. , @xmath565 .",
    "taken together with the above differential inequality this implies @xmath566 ; i.e. , @xmath567 .",
    "4 .   note that @xmath547 is lower semicontinuous for every control @xmath329 .",
    "since @xmath57 is lower semicontinuous , for every @xmath378 and every @xmath568 there exists @xmath569 such that @xmath570 choosing @xmath571 , we can bound from below the cost of every control @xmath572 thus , @xmath573 for all sufficiently large @xmath296 s .",
    "since this argument works for any @xmath568 , @xmath574 as @xmath526 . 5 .",
    "suppose a @xmath575-optimal control @xmath329 becomes motionless at some time @xmath227 ; i.e. , @xmath576 then , from formula , @xmath577 6 .",
    "if @xmath578 , then @xmath579 .",
    "thus , @xmath580 7 .",
    "suppose @xmath505 is fixed . to prove that @xmath323 becomes motionless for some finite @xmath296 , it is not enough to show that for every fixed control @xmath329 we can choose large enough @xmath296 to guarantee @xmath581 we need to show that some finite @xmath296 guarantees this inequality for * all * @xmath329 .",
    "for isotropic dynamics and cost , the fact that @xmath505 guarantees that @xmath582 such that @xmath583 implies @xmath584 where @xmath585 denotes the minimum time needed to reach from @xmath323 to @xmath119 . without loss of generality",
    ", we can assume that @xmath586 .",
    "let @xmath329 be an arbitrary control with the corresponding trajectory @xmath554 starting from @xmath323 .",
    "we also choose a small enough @xmath465 to ensure that @xmath587 and @xmath588 for all @xmath589 . then @xmath590 \\lambda e^ { -\\lambda s } \\ , ds.\\ ] ] using the fact that @xmath591 , we note that @xmath592 combining this with the above , @xmath593",
    "\\lambda e^ { -\\lambda s } \\ , ds & = & ( 1-e^{-\\lambda \\tau } ) q({{\\mbox{\\boldmath${x}$ } } } ) + \\frac{\\epsilon}{2 \\lambda } \\left[1 - e^{-\\lambda \\tau } - \\lambda \\tau e^{-\\lambda \\tau } \\right]\\\\ & = & q(x ) + \\frac{\\epsilon}{2 \\lambda } \\left[1 - e^{-\\lambda \\tau } - \\lambda \\tau e^{-\\lambda \\tau } - 2 \\lambda \\epsilon^{-1 } q({{\\mbox{\\boldmath${x}$ } } } ) e^{-\\lambda \\tau } \\right].\\end{aligned}\\ ] ] to complete the proof , we note that , for large enough @xmath296 , the expression in the last square brackets is strictly positive , and this inequality holds for all controls @xmath329 .",
    ".   follows from part 5 .",
    "suppose @xmath594 and @xmath329 is its @xmath575-optimal control that becomes motionless at some time @xmath227 . then @xmath595 ; hence , @xmath596 . if @xmath597 , then @xmath598 and @xmath599 finally , if @xmath514 , then * ( b3 ) * implies that all lower hadamard derivatives of @xmath57 are positive at every @xmath505 , making @xmath43 a strict minimum .",
    "we note that the conditions in theorem [ thm : asymptotics_v ] can be further relaxed by rewriting the proofs in terms of @xmath600-suboptimal e.m .",
    "trajectories ( see part 3 of theorem [ thm : v_causality ] ) .",
    "we consider a first - order upwind finite differences discretization of the isotropic variational inequality and introduce a modified version of fast marching method applicable to it .",
    "we note that ordered upwind methods @xcite can be similarly modified to handle anisotropic randomly - terminated problems .",
    "we assume that is discretized on a uniform cartesian grid ; the generalization for @xmath601 is straightforward . ] with @xmath6 gridpoints and the value function @xmath602 is approximated by a grid - function @xmath3 : @xmath603 we also define the set of neighboring gridpoints and the set of neighboring values @xmath604    our discretization uses two one - sided , first - order accurate approximations for each partial derivative ; i.e. , @xmath605 an _ upwind discretization _ of at a gridpoint @xmath606 is obtained as follows : @xmath607^{-}. \\label{eq : dp_cuhp}\\ ] ] if all the @xmath608 values are already known , has to be solved to obtain @xmath609 .",
    "the latter task is significantly simplified once we realize that the equation can be solved on a quadrant - by - quadrant basis .",
    "this procedure is described in detail in appendix b ( section [ s : appendix_b ] ) and there we also prove that the finite - difference discretization can be obtained from the kuhn - tucker optimality conditions for a suitable semi - lagrangian discretization .",
    "however , the values in @xmath608 are not a priori known and equation has to hold at every gridpoint , resulting in a system of @xmath6 coupled non - linear equations .",
    "this system can be solved iteratively , but that approach is unnecessarily inefficient .",
    "indeed , is related to the upwind scheme used by rouy and tourin @xcite for the eikonal equation , which sethian later showed to possess causal properties , yielding the non - iterative fast marching method @xcite .",
    "below we provide an extension of that method to our obstacle problem .",
    "[ rem : discretization_properties ] if @xmath3 satisfies equation , it is easy to show that + 1 .",
    "@xmath610 i.e. , the discretized version is also an obstacle problem .",
    "@xmath609 is a non - decreasing function of all values in @xmath611 ( this monotonicity , along with the consistency of the discretization can be used to show the convergence of @xmath3 to @xmath2 as @xmath612 ; see @xcite . )",
    "suppose @xmath613 .",
    "then , either @xmath614 or any increase in @xmath615 will not affect @xmath609 .",
    "in other words , the value of @xmath609 depends only on its smaller neighbors , which makes the label - setting method summarized in algorithm [ alg : fmm_modified ] applicable .",
    "+    as with dijkstra s method , the values @xmath3 at all gridpoints are at first temporary , equation is used to update these temporary values , and the values become permanent when the corresponding gridpoints are @xmath244 .",
    "due to causality of this discretization , by the time the algorithm terminates , holds at all gridpoints . as in the original fast marching method for the eikonal equation ,",
    "the computational cost of our algorithm is @xmath259 , where the @xmath616 term stems from implementing a sorted list of @xmath245 gridpoints using a heap - sort data structure .",
    "start with all gridpoints marked as @xmath246 ; + set @xmath617 for all @xmath618 ; + mark all local minima of @xmath57 as @xmath245 ;    while ( @xmath245 list is not empty ) \\ { + let @xmath619 be such that @xmath620 is the smallest @xmath245 value ; + mark @xmath619 @xmath244 ; + for each not - yet-@xmath244 @xmath621 \\ { + update @xmath622 ; + if @xmath623 is @xmath246 , mark it @xmath245 ; + } + }    a simple implementation of `` update @xmath622 '' is obtained by re - solving using all current ( possibly temporary ) values in @xmath608 . a more efficient version , using the @xmath244 subset of @xmath608 and taking advantage of the fact that only @xmath620 has recently changed , is described in remark [ rem : good_update ] in appendix b.",
    "we start by studying convergence of our method on a simple randomly - terminated continuous example , where the free boundary is trivial and the analytic formula for the solution is available .",
    "suppose @xmath624\\times[-2,2]$ ] , @xmath625 , @xmath548 , and @xmath626 .",
    "note that @xmath548 and the fact that @xmath57 has only one minimum imply that the free boundary is trivial ; i.e. , @xmath627 , the global minimum of @xmath57 .",
    "since @xmath428 , @xmath34 , and @xmath57 are radially symmetric , then so is the value function : for every @xmath628 it is optimal to move along the straight line toward the origin ; i.e. , the optimal control is @xmath629 .",
    "the expected cost of using this control ( with the specified @xmath57 and @xmath428 and with any radially symmetric @xmath34 ) is @xmath630 \\ , ds .",
    "\\label{eq : traj_to_center}\\ ] ] in particular , when @xmath548 , @xmath631 lists the numerical errors observed in this computational example for @xmath632 .",
    "the second column reports the maximum error observed on the horizontal gridline passing through the origin .",
    "( since the characteristics are straight lines in this example , this is equivalent to conducting the same experiment in 1d on the domain @xmath633 $ ] . )",
    "the remaining two columns report @xmath634 and @xmath635 errors computed on the entire @xmath346 ; the @xmath634 errors are normalized to account for the non - unit area of @xmath346 .",
    "the data clearly indicates the first order of convergence .",
    "we note that for an eikonal equation with a point source , the rate of convergence is often found to be lower due to a local non - smoothness of the viscosity solution at that point source . the techniques to recover the first order of convergence include pre - initializing the true solution in a disk of fixed radius centered at the point source as well as the more recently proposed `` singularity removal '' method @xcite . in the example",
    "considered above , we do not face similar issues simply because the leading term in the expansion of @xmath2 is @xmath636 rather than @xmath637 .",
    "a small modification of the previous example already leads to a non - trivial free boundary .",
    "we let @xmath638 and take the same @xmath428 , @xmath57 and @xmath346 as above .    as before",
    ", @xmath404 is radially symmetric , and if @xmath639 , then the optimal trajectory starting from @xmath323 is again @xmath467 , whose expected cost is evaluated from the integral in : @xmath640 the value function is @xmath641 , and , unlike in the previous example , @xmath625 is actually smaller when @xmath637 is sufficiently large .",
    "thus , for this example , @xmath642 , where @xmath643 and the radius @xmath644 is such that @xmath645 the origin is the inflow part and @xmath646 is the outflow part of @xmath374 .",
    "this example also illustrates the asymptotic behavior of @xmath374 . applying definitions of asymptotic motionless sets from section",
    "[ ss : contin_value_func ] , @xmath647    when @xmath648 , theorem [ thm : asymptotics_v ] shows that @xmath649 . on the other hand , when @xmath528 , we have @xmath650 .",
    "this is also confirmed in figure [ fig : fbradius ] obtained by solving numerically .",
    "table [ t : err_trivial ] lists the numerical errors observed in this example for two different values of @xmath296 .",
    "we now consider a continuous equivalent of the optimal idle - time processing example of section [ ss : optimal_idler ] .",
    "an all - terrain vehicle moving in @xmath651 is tasked with responding to emergency calls .",
    "we assume that the arrival of calls is a poisson process with rate @xmath296 , and our goal is to minimize the expected response time to the first caller .",
    "we are given a list of possible caller locations @xmath652 inside @xmath315 and the corresponding probabilities @xmath653 of the next call originating at each of these locations .",
    "the vehicle s dynamics is assumed to be isotropic ; i.e. , @xmath654 , where @xmath655 is the current direction of motion .",
    "we then use the fast marching method to solve @xmath644 eikonal problems : @xmath656 the resulting @xmath657 is the minimum time to reach @xmath658 for a vehicle starting from @xmath323 and constrained to move within @xmath315 . if the call is received at @xmath323 , the expected time from there to the caller is @xmath659 ( we note that thus defined @xmath660 is always lipschitz - continuous . ) + a global minimum of @xmath57 is obviously the optimal place to `` park '' the vehicle while expecting a call .",
    "but what if the current position is not a global minimum of @xmath57 ?",
    "the most intuitive approach , based on a gradient descent in @xmath57 , is far from optimal .",
    "( e.g. , it would prescribe not moving away from any local minimum of @xmath57  a clearly bad strategy when @xmath296 is small enough and there is a good chance of reaching the global minimum of @xmath57 before the next call . ) since we are trying to minimize the expected response time , it is logical to set @xmath548 , since in this continuous - time control , the vehicle starts responding instantaneously .",
    "( this is in contrast to the discrete - transitions scenario considered in section [ ss : optimal_idler ] . )",
    "we consider an example in which @xmath428 is piecewise - constant : @xmath661 in a large circular `` slow '' region in the center and @xmath626 everywhere else .",
    "we use 4 different call locations ( @xmath662 ) symmetric relative to the slow region and numbered counter - clockwise starting from the lower left ; see figures [ fig : circular_slow_lambda_small ] and [ fig : circular_slow_lambda_25 ] .",
    "we perform this experiment with several sets of parameter values .",
    "first , we set @xmath663 , @xmath664 and @xmath665 . the results in figure [ fig : circular_slow_lambda_small ] highlight the differences between @xmath57 and @xmath2 .",
    "we then set @xmath666 and repeat the experiment two more times : with equal probabilities ( @xmath667 ) in figure [ fig : circular_slow_lambda_25]a and with varying probabilities ( @xmath668 ) in figure [ fig : circular_slow_lambda_25]b . in all three cases the computations are performed on a @xmath669 grid and the level sets are selected to highlight the complex structure of the solution outside of the slow region . as the figures show , two nearby starting locations can easily produce dramatically different optimal trajectories when the locations are on different sides of the shock line ( where @xmath670 is undefined ) .",
    "we note that @xmath514 leads to @xmath0 consisting of ( a subset of ) local minima locations of @xmath57 ; these are found numerically ( and indicated by thick black dots in the corresponding figures ) . as a result ,",
    "the true shape of @xmath0 may not become apparent even on fairly refined computational grids .",
    "for example , when all caller locations are equally likely , it is relatively easy to show analytically that the minima of @xmath57 are attained at four isolated points only , while figure [ fig : circular_slow_lambda_25]a shows a larger motionless set .",
    "this , however , is due to the fact that the value function varies very slowly in this region ( e.g. , order of @xmath671 variation of @xmath57 on the numerically found @xmath0 ) .",
    "this also presents an additional challenge in recovering optimal trajectories , which for isotropic problems is done by a gradient descent in @xmath2 .",
    "the characteristic equations show that , when @xmath514 , the directional derivative of @xmath2 along the optimal trajectory becomes zero at @xmath374 . to circumvent this difficulty , our current implementation forces the trajectory to take a straight line path to @xmath374 , when the distance to it decreases below an @xmath672-dependent threshold .",
    "no such heuristic adjustments are needed when @xmath673 .",
    "the following example illustrates the effect of changing @xmath296 on the free boundary for problems with non - zero running cost @xmath34 .",
    "we assume two possible locations for emergency calls : @xmath674 and @xmath675 with the corresponding probabilities of calls @xmath676 and @xmath677 inside the domain @xmath678 \\times [ 0,10]$ ] .",
    "we further assume that the domain contains a `` maze '' with @xmath34 high / @xmath428 low within its `` walls '' and @xmath34 low / @xmath428 high everywhere else .",
    "figure [ fig : maze_setup ] shows the described @xmath428 , @xmath34 , and the resulting terminal cost function @xmath57 computed from .",
    "@xmath679{figures / maze / mazecost } & \\includegraphics[width=6cm]{figures / maze / mazespeed } & \\includegraphics[width=6cm]{figures / maze / mazeqwithm } \\end{array } $ ]    figure [ fig : maze_solutions ] shows the level curves of @xmath2 and the optimal trajectory starting from the center of the maze computed for different values of @xmath296 . the free boundary @xmath374 is also indicated by a thick line in each case .",
    "we note that the running cost matters only until the emergency call arrives .",
    "thus , for very small @xmath296 s , it is likely that the global minimum of @xmath57 ( i.e. , the point @xmath680 ) can be reached avoiding the walls before the first call arrives .",
    "when @xmath296 increases , it becomes more optimal to head toward ( and then through ) the closest wall , hoping that the call arrives before we reach it .",
    "finally , for large @xmath296 s it is optimal to stop and wait for the call at the wall boundary .",
    "@xmath681{figures / maze / mazev001 } & \\includegraphics[width=9cm]{figures / maze / mazev010}\\\\ \\lambda = 0.01 & \\lambda = 0.1\\\\ \\\\ \\includegraphics[width=9cm]{figures / maze / mazev045 } & \\includegraphics[width=9cm]{figures / maze / mazev150}\\\\ \\lambda = 0.45 & \\lambda = 1.5 \\end{array } $ ]",
    "we have considered a wide class of uncertain - horizon problems and showed that non - iterative methods can be used to compute their value functions both in discrete and continuous settings .",
    "the numerical examples in section [ s : examples ] have illustrated both the convergence properties and the asymptotic behavior of the free boundary @xmath682 .",
    "our modification of the fast marching method in section [ ss : fmm_modified ] addressed the isotropic case only , but similarly modified ordered upwind methods @xcite can be used to treat the anisotropic cost and dynamics in randomly - terminated problems .",
    "a dial - like version of the fast marching method will be similarly applicable if is discretized on an acute triangulated mesh @xcite .",
    "another fairly straightforward generalization is to treat inhomogeneous termination rates in the continuous case ; i.e. , @xmath395 ; this would require only minimal changes to the label - setting algorithms .    in this paper",
    "we have not discussed the label - correcting methods @xcite , whose asymptotic complexity is worse but practical performance is sometimes better than that of label - setting methods .",
    "their applicability to uncertain - horizon problems is clearly also of interest . in the continuous case ,",
    "we believe that fast sweeping methods ( e.g. , @xcite ) and various fast - iterative methods ( e.g. , @xcite ) should be easy to extend to randomly - terminated problems .",
    "the same is also true for hybrid two - scale methods that aim to combine the advantages of marching and sweeping @xcite .",
    "careful testing would be needed to compare the computational efficiency of these alternatives to that of dijkstra - like methods considered here .",
    "the second author has previously studied the so - called multimode ssp ( mssp ) in @xcite and derived sufficient conditions for the applicability of the label - setting methods to them .",
    "we emphasize that the uncertain - horizon problems considered here can not be cast as mssps and the results from @xcite do not apply .",
    "however , the results from both papers can be easily combined to address the randomly - terminated mssps .",
    "more generally , we believe that label - setting methods will be applicable for a broader class of _ hierarchically causal _ ssps .",
    "a natural example from this category is the `` ssp with recourse '' problem , where the transition - costs are known only probabilistically at first and their true values are learned in the process of traveling through the graph . a dijkstra - like method for such problems",
    "was previously introduced by polychronopoulos and tsitsiklis in @xcite . on the continuous side ,",
    "the randomly - terminated problems form a simple subclass of _ piecewise - deterministic _",
    "problems @xcite .",
    "the latter arise when a poisson process governs random switches between several known types of deterministic dynamics / cost , yielding a system of weakly - coupled static non - linear hjb pdes .",
    "we believe that these more general problems can also be treated by non - iterative numerical methods provided all non - deterministic transitions ( and the resulting couplings between the pdes ) are hierarchically causal .    finally , we note that in all randomly - terminated problems considered in the current paper , the only goal was to minimize the expected value of the total cost . an interesting direction for future work is to incorporate simultaneous optimization and/or constraints based on the worst case scenario .",
    "efficient algorithms for this more difficult problem can be built using the recent method for multiobjective optimal control introduced in @xcite .",
    "* acknowledgments : * the authors are grateful to anonymous reviewers for their suggestions on improving this paper .",
    "the second author would also like to thank a. dukhovny and v. protsak .",
    "this section contains the results on existence of optimal stationary policies for the general randomly - terminated processes on graphs .",
    "we note that the following proofs do not make any use of assumptions * ( a1)*-*(a3 ) * ; i.e. , both the transition penalties @xmath39 and the terminal costs @xmath683 can be positive or negative and the self - transitions need not be allowed .",
    "a function @xmath684 is a _ control mapping _ if @xmath685 for @xmath686 .",
    "policy _ is an infinite sequence of control mappings @xmath687 .",
    "starting from any @xmath60 a policy will generate a particular path @xmath688 as follows : @xmath689 , @xmath690 for @xmath691 .",
    "defining @xmath692 , we can also re - write the value function as @xmath693 if @xmath694 , the corresponding policy @xmath695 is called _ stationary_. ( we will also somewhat abuse the notation and refer to a stationary policy @xmath696 . ) since stationary policies generate only simple paths , theorem [ thm : stationary ] proves the existence of an optimal stationary policy .",
    "formula shows that for any stationary policy , @xmath697 , which implies the dynamic programming equation .",
    "[ rem : relation_to_ssp ] our problem can be easily recast as a stochastic shortest path ( ssp ) problem by adding a special absorbing terminal node @xmath698 , and considering @xmath699 to be the set of controls available at @xmath9 .",
    "a choice of the control @xmath113 then results in a transition to the node @xmath18 with probability @xmath700 and to the node @xmath701 with probability @xmath49 .",
    "the cost associated with this control is @xmath702 .",
    "the process terminates upon reaching @xmath701 . in @xcite tsitsiklis and",
    "bertsekas proved the equivalents of lemma [ lm : min_attained ] and theorem [ thm : stationary ] for a broader class of general ssps .",
    "however , in our setting , direct proofs are much simpler and exploit the special structure of this problem .",
    "we first note the following useful generalization of the recursive formula ( [ eq : path_cost_recursive ] ) .",
    "starting from ( [ eq : infinite_horizon ] ) , @xmath703 & = & \\sum_{i=0}^{k-1 } \\left ( k(y_i , y_{i+1 } ) + p q(y_{i+1 } ) \\right ) ( 1-p)^i \\ ; + \\ ; \\sum_{i = k}^{\\infty } \\left ( k(y_i , y_{i+1 } ) + p q(y_{i+1 } ) \\right ) ( 1-p)^i\\\\ & = & \\sum_{i=0}^{k-1 } \\left ( k(y_i , y_{i+1 } ) + p q(y_{i+1 } ) \\right ) ( 1-p)^i \\ ; + \\ ; ( 1-p)^k \\ , j(y_k , y_{k+1 } , \\ldots ) .",
    "\\label{eq : path_recursive_general}\\end{aligned}\\ ] ]    for every @xmath60 , there exists @xmath704 such that @xmath705 [ lm : min_attained ]    given any two paths @xmath706 , let @xmath14 be the first stage of the process where the paths become different ; i.e. , @xmath707 . a natural metric on @xmath50 is defined by @xmath708 and the induced topology makes @xmath50 totally disconnected .",
    "the compactness of @xmath50 follows from the standard diagonalization argument .",
    "@xmath63 is thus a closed subset of @xmath50 and also compact . on the other hand , based on ( [ eq : path_recursive_general ] ) ,",
    "@xmath709 is lipschitz - continuous . as a continuous function on",
    "a compact set it must attain the minimum at some @xmath704 .    we will use @xmath710 to denote the set of all such _ minimizing paths _ starting from @xmath43 .",
    "suppose @xmath711 while @xmath14 and @xmath712 are non - negative integers such that @xmath713 and @xmath66",
    ". then @xmath714 .",
    "[ lm : min_equally_good_tail ]    we show that any loop can be removed from an optimal ( not necessarily simple ) path without increasing that path s total cost . by the optimality of @xmath119 , @xmath715 on the other hand , if @xmath716 then , by formula ( [ eq : path_recursive_general ] ) , @xmath717 the latter contradicts the optimality of @xmath119 since it implies that @xmath718    suppose @xmath711 while @xmath14 and @xmath712 are non - negative integers such that @xmath713 and @xmath66 .",
    "define @xmath719 by replacing the tail @xmath720 with an infinitely repeated loop @xmath721 .",
    "then @xmath722 [ lm : min_equally_good_loop ]    first , note that proving the equality for @xmath33 combined with the formula ( [ eq : path_recursive_general ] ) yields the proof for the general case .",
    "assuming @xmath33 , @xmath723    by lemma [ lm : min_equally_good_tail ] and formula ( [ eq : path_recursive_general ] ) , @xmath724 @xmath725 which yields @xmath726    there exists a stationary policy @xmath696 such that @xmath727 .",
    "[ thm : stationary ]    by lemma [ lm : min_attained ] , there exists some optimal path @xmath728 we note that , given any path , it is easy to define a policy generating it .",
    "moreover , if the path is _ simple _ , then it can be produced by a single control mapping ( and the corresponding policy will be stationary ) .",
    "so , we simply need to prove the existence of some @xmath729 such that @xmath730 + for each non - negative integer @xmath14 and each path @xmath153 , let @xmath731 .",
    "we will define a function @xmath732 as follows : + @xmath733 if @xmath734 is not empty , then @xmath735 produced in lemma [ lm : min_equally_good_loop ] using @xmath14 and @xmath736 , + @xmath733 and @xmath737 otherwise .",
    "note , that if @xmath738 , then @xmath739 as well . defining @xmath740 and @xmath741",
    "we obtain a simple path in at most @xmath6 steps ; i.e. , @xmath742 .",
    "to simplify the discussion , we will focus on one node @xmath743 , renaming its neighbors as in figure [ fig : semi - l ] and slightly abusing the notation as follows : @xmath744 @xmath745        suppose @xmath754 is the smallest number satisfying both and @xmath755 ( for consistency with and ) .",
    "if such @xmath754 exists , we use it as an `` update '' from this first quadrant ; i.e. , @xmath756 .",
    "otherwise , we define the update similarly to as @xmath757 the updates from the other quadrants are similarly defined using @xmath758 , @xmath759 , and @xmath760 if the values in @xmath608 are fixed , it is easy to check that @xmath761 is the unique solution of .",
    "[ rem : good_update ] the modified version of the fast marching method in section [ ss : fmm_modified ] calls for updating the not - yet-@xmath244 value of @xmath609 whenever one of its neighbors is @xmath244 . in principle , the above procedure and formula may be used for that update , but a more efficient implementation can be built utilizing the quadrant - by - quadrant approach and the fact that @xmath609 depends on the smaller neighbors only .",
    "first , each quadrant - update should be considered only if at least one of the neighbors defining this quadrant is already @xmath244 ( by the causality of , the non-@xmath244 values can be replaced by @xmath20 without affecting @xmath609 ) .",
    "second , if @xmath619 is the last @xmath244 gridpoint , then only quadrants in which it participates will need to be considered ( since the updates from other quadrants have already been previously stored in @xmath609  this is similar to the idea behind the update formula for dijkstra s method ) .",
    "third , the monotonicity of guarantees that at most one quadrant is relevant .",
    "+ for definiteness sake , suppose that the recently accepted @xmath762 in the notation of figure [ fig : semi - l ] .",
    "the efficient update procedure would set @xmath763 , where @xmath764 is + 1 .",
    "computed by formula if neither @xmath409 nor @xmath765 is @xmath244 ; + 2 .",
    "equal to @xmath766 if @xmath409 is @xmath244 and @xmath765 is not ( or if both of them are @xmath244 , but @xmath767 ) ; + 3 .",
    "equal to @xmath768 if @xmath765 is @xmath244 and @xmath409 is not ( or if both of them are @xmath244 , but @xmath769 ) .",
    "the upwind finite difference discretization and its quadrant - by - quadrant version in the previous section do not appear natural from the point of view of optimal control .",
    "a more natural semi - lagrangian scheme is based on a direct discretization of the optimality principle . here",
    "we show that the former is in fact equivalent to the latter .",
    "suppose @xmath770 and @xmath771 ( i.e. , @xmath375 is not the optimal control value at @xmath323 ) .",
    "suppose @xmath428 and @xmath34 are locally constant , @xmath2 is smooth , and the optimal direction of motion from @xmath323 is @xmath655 lying in the first quadrant ; see figure [ fig : semi - l ] .",
    "we assume that the motion continues in the direction @xmath357 until crossing the segment @xmath772 at the point @xmath773 after @xmath774 units of time .",
    "the corresponding running cost is @xmath775 and the probability of termination signal received while moving from @xmath323 to @xmath773 is @xmath776 . in case of termination",
    ", we incur the terminal cost of @xmath57 ; otherwise , the motion along the approximate optimal trajectory continues ( with the expected cost of @xmath777 ) .",
    "thus , @xmath778 let @xmath779 if @xmath780 is such that @xmath781 , then @xmath782 this suggests a semi - lagrangian scheme for the grid function @xmath3 : @xmath783 given similarly defined updates from all other quadrants , we can again set @xmath784    kuhn - tucker optimality conditions can be used to relate this scheme to .",
    "a similar connection was previously demonstrated for eikonal pdes on a uniform cartesian grid by tsitsiklis @xcite , and then on triangulated meshes and for more general hamilton - jacobi - bellman pdes by sethian and vladimirsky ( * ? ? ?",
    "* appendix ) ; see also the detailed discussion of connections to mssp problems in @xcite .",
    "the following proof applies the same ideas to the variational inequality , with additional technical details due to the direct dependence of the hamiltonian on @xmath2 .",
    "we note three useful properties of the function @xmath789 : @xmath790 to simplify the notation , we will suppress the arguments  in what follows , @xmath465 and its partial derivatives are always evaluated at @xmath785 .",
    "first , note that if @xmath791 , then @xmath792 and reduces to ; a similar formula ( with @xmath793 replacing @xmath794 ) holds when @xmath795 .",
    "now suppose @xmath796 by the kuhn - tucker optimality conditions applied to @xmath797 defined in formula , there exists a lagrange multiplier @xmath696 such that @xmath798 } { ( 1 + \\lambda \\tau)^2 } = \\frac{(k + \\lambda q - \\lambda v^{12 } ) { \\frac{\\partial \\tau}{\\partial \\xi_{i } } } + v_i}{1 + \\lambda \\tau } , \\qquad \\text{for } i=1,2 .",
    "\\label{eq : l_mult1}\\ ] ] multiplying the above by @xmath799 , adding up ( for @xmath800 ) and using , we see that @xmath801 combining and , we obtain @xmath802 where the inequality follows from @xmath803 , @xmath804 , and the fact that @xmath805 by formula . this shows the causality of the semi - lagrangian discretization .",
    "k. alton & i. m. mitchell , _ an ordered upwind method with precomputed stencil and monotone node acceptance for solving static hamilton - jacobi equations _ , journal of scientific computing , 51:2 , pp .",
    "313348 , 2012 .",
    "a. kumar and a. vladimirsky , _ an efficient method for multiobjective optimal control and optimal control subject to integral constraints _ , journal of computational mathematics , 28(4 ) , pp.517551 , 2010 .",
    "maxwell , m. restrepo , s.g .",
    "henderson , & h. topaloglu , _ approximate dynamic programming for ambulance redeployment _ , informs journal on computing , 22(2 ) , pp .",
    "266 - 281 , 2010 ."
  ],
  "abstract_text": [
    "<S> we consider both discrete and continuous `` uncertain horizon '' deterministic control processes , for which the termination time is a random variable . </S>",
    "<S> we examine the dynamic programming equations for the value function of such processes , explore their connections to infinite - horizon and optimal - stopping problems , and derive sufficient conditions for the applicability of non - iterative ( label - setting ) methods . in the continuous case </S>",
    "<S> , the resulting pde has a free boundary , on which all characteristic curves originate . </S>",
    "<S> the causal properties of `` uncertain horizon '' problems can be exploited to design efficient numerical algorithms : we derive causal semi - lagrangian and eulerian discretizations for the isotropic randomly - terminated problems , and use them to build a modified version of the fast marching method . </S>",
    "<S> we illustrate our approach using numerical examples from optimal idle - time processing and expected response - time minimization . </S>"
  ]
}
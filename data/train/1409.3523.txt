{
  "article_text": [
    "numerically computed magnetohydrodynamic ( mhd ) equilibria are the starting point of a wide class of numerical solvers that are used to study mhd stability , transport , and heating and current drive in magnetic fusion devices @xcite .",
    "static mhd equilibria of toroidally axisymmetric configurations are described by the grad - shafranov ( g - s ) equation @xcite , a nonlinear , second - order elliptic partial differential equation .",
    "stationary equilibria with purely toroidal flows are determined by solving a close variant of the g - s equation @xcite , the only difference being that for the latter the pressure term does not only depend on the poloidal flux function @xmath0 , but also on the radial variable @xmath1 .",
    "numerical codes to solve the g - s equation have been developed since the early days of the magnetic fusion program @xcite . nevertheless , the development of optimized g - s codes remains a topic of active research , for three main reasons .",
    "first , g - s solvers must be able to properly resolve complex two - dimensional geometries @xcite , with boundaries that may have a corner , corresponding to a magnetic field x - point @xcite .",
    "second , g - s solvers must be fast .",
    "this criterion is particularly relevant in the context of multiphysics integrated simulations @xcite .",
    "several of these multiscale , multiphysics solvers already include , or will eventually include , in their iterative procedure a step in which the equilibrium configuration is self - consistently updated .",
    "a reasonable requirement is that the calculation of the updated equilibrium takes a negligible amount of time and computing resources as compared to the computationally intensive transport , mhd stability and plasma heating solvers .",
    "third , g - s solvers must be accurate .",
    "the solution of the g - s equation is the poloidal flux @xmath0 , but the physical quantities of interest , such as the magnetic field , the safety factor , the magnetic shear , the magnetic curvature , and the current density are all functions of partial derivatives of @xmath0 .",
    "since there always is some loss of accuracy when computing derivatives , a high level of accuracy for @xmath0 is desired .    in this article , we present the new grad - shafranov code ecom ( equilibrium solver via conformal mapping ) .",
    "ecom is a fixed boundary , direct solver written in fortran 77/90 that is based on three key elements : 1 ) the formulation of the g - s equation as a nonlinear poisson problem ; 2 ) a spectrally accurate numerical method to compute the conformal map from the smooth plasma cross section of interest to the unit disk ; 3 ) a fast , high order poisson solver on the unit disk @xcite .",
    "its main novelty lies in the last two aspects discussed in the paragraph above , namely accuracy and speed .",
    "regarding the first point , we demonstrate in this article that ecom has better convergence properties than popular g - s solvers based on finite elements @xcite . in the finite element approach the numerical error of",
    "the solution decays as a power of grid size , i.e. @xmath2 where @xmath3 is an integer and @xmath4 is the number of grid points in one direction . often , for magnetic fusion applications @xmath5 @xcite , although @xmath6 was recently demonstrated @xcite .",
    "in contrast , convergence in ecom is exponential : the error decays as @xmath7 for some real number @xmath8 .",
    "just as importantly , in ecom the rate of convergence for the derivatives of @xmath0 is the same as that of @xmath0 , whereas in the finite element approach the derivatives of @xmath0 converge more slowly than @xmath0 @xcite .",
    "remarkably , in ecom numerical accuracy is not obtained at the expense of computational complexity and speed . for a given grid size ,",
    "our solver is faster than finite element solvers and less demanding in terms of memory .",
    "we will show that a drawback of relying on conformal mapping is that ecom often requires a denser grid than fem based solvers to achieve a desired accuracy . yet despite this , we find that for tokamak geometries and medium to high number of grid points , ecom is more accurate than fem based equilibrium codes at equal run time .",
    "this article follows an earlier article @xcite , in which we gave a detailed description of our new numerical algorithm for solving the g - s equation .",
    "the focus here is different .",
    "one of the main motivations is to present extensions recently added to our g - s solver that make it a practical tool readily usable in fusion applications .",
    "the new capabilities of our equilibrium solver include the possibility of computing equilibria with arbitrary toroidal flow profiles , the possibility of specifying current and pressure profiles in various ways , as well as the evaluation of the key physical quantities that are required as inputs in stability , transport and heating codes .",
    "since ecom is a direct solver that calculates @xmath0 on a prescribed grid for the poloidal cross section @xcite , we put a particular emphasis on the accurate computation of the contours of constant flux , and of flux surface quantities such as the safety factor and the magnetic shear .",
    "a second motivation for this article is to perform detailed comparisons between the popular g - s code chease @xcite and ecom , and to assess the merits of each solver .",
    "the structure of the article is as follows . in section [ sec : gs ]",
    "we briefly review the numerical algorithm we use to solve the g - s equation @xcite . in section [ sec : post ] , we give a detailed presentation of the equilibrium quantities ecom computes during the postprocessing phase , and of the numerical methods we implemented to calculate these quantitites with high accuracy . in section [ sec : accuracy ] we evaluate the speed , accuracy , and convergence properties of our solver , and compare them to those of chease @xcite . in section [ sec : torflow ] we explain how ecom computes stationary equilibria with toroidal flows , and in section [ sec : dis ] we summarize our main findings , discuss the current limitations of ecom and future plans . appendix [ sec : miller ] presents our method to calculate the miller parametrization @xcite of a numerically computed flux contour , and appendix [ sec : namelist ] contains a table with all the important variables in ecom , along with a short description for each of them .",
    "in this section , we briefly review the numerical algorithm used in ecom to solve the g - s equation .",
    "a more detailed presentation of each of the steps described below can be found in @xcite .",
    "the grad - shafranov equation is given by @xmath9 where @xmath10 is the usual cylindrical coordinate system associated with the toroidal geometry , @xmath11 is the poloidal magnetic flux , @xmath12 is the permeability of free space , @xmath13 is the plasma pressure , and @xmath14 , with @xmath15 the toroidal component of the magnetic field . once the free functions @xmath13 and @xmath16 are given and eq .",
    "( [ gs1 ] ) is solved with appropriate boundary conditions , the magnetic field @xmath17 and the current density @xmath18 can be computed according to the following formulae @xmath19    eq .",
    "( [ gs1 ] ) is a second - order elliptic nonlinear partial differential equation for @xmath0 .",
    "ecom solves the fixed boundary problem associated with this equation .",
    "specifically , the boundary curve @xmath20 enclosing the plasma domain @xmath21 of interest is an input to the solver , and ecom solves eq .",
    "( [ gs1 ] ) with the dirichlet data @xmath22 on @xmath20 , where @xmath23 is a constant .",
    "this formulation is particularly convenient for multiphysics theoretical studies of the influence of shaping on plasma performance @xcite .",
    "two types of inputs can be used in ecom to determine the geometry of @xmath20 .",
    "one option is to give an exact representation of the plasma boundary , for example in the form of parametric equations @xcite .",
    "when such a representation is not available , one can also give the coordinates @xmath24 of discrete points on the boundary . at the moment",
    ", ecom can only treat smooth plasma boundaries , and can therefore not compute equilibria whose plasma boundary has a separatrix .",
    "the functional dependence on @xmath0 of the pressure and toroidal magnetic field profiles is either prescribed or determined from transport equations . in both cases , it is an input to ecom . in general , these profiles are such that eq .",
    "( [ gs1 ] ) is nonlinear , and for a wide class of profiles eq .",
    "( [ gs1 ] ) has to be solved as an eigenvalue problem @xcite .",
    "this means that eq .",
    "( [ gs1 ] ) has to be solved by iterating on @xmath0 @xcite . in ecom",
    ", this is done as follows . a normalized flux @xmath25 is defined by @xmath26 , where @xmath27 and @xmath28 are the poloidal flux at the magnetic axis and the last closed flux surface respectively , so that @xmath29 at the magnetic axis and @xmath30 at the last closed flux surface .",
    "the pressure and toroidal magnetic field profiles are also normalized and expressed in terms of @xmath25 according to : @xmath31 defining @xmath32 , eq .",
    "( [ gs1 ] ) then becomes @xmath33 where @xmath34 plays the role of an eigenvalue .",
    "in ecom , there are several options to specify the profiles @xmath35 and @xmath36 , with corresponding namelist parameter iptype for the pressure and iftype for the poloidal current . if iptype=1 or iftype=1 , the profiles are given by an explicit formula in terms of @xmath25 . in ecom , we often use @xmath37 , as is also done in chease @xcite , where the constants @xmath38 , @xmath39 , and @xmath40 are specified in the namelist . likewise",
    ", we often use @xmath41 .",
    "different expressions can be easily implemented , such as formulae describing a steep pressure pedestal @xcite . if iptype=2 or iftype=2 , the profiles are given by a set of data points and the corresponding values of @xmath25 or of the minor radius .",
    "the value of the namelist variable iptable determines whether the tabulated values of the profiles are in terms of @xmath25 or of the minor radius .",
    "if iptable=0 , the numerical tables of @xmath35 and @xmath42 are specified in terms of discrete values of @xmath25 .",
    "if iptable=1 , @xmath43 and @xmath44 instead of their derivatives are specified by tables in terms of @xmath25 . if iptable=2 , the numerical tables of @xmath45 and @xmath46 are specified in terms of the normalized minor radius @xmath47 . in section",
    "[ sec : post ] , we explain in detail how ecom accurately computes @xmath35 and @xmath42 starting from such tables .",
    "furthermore , ecom offers the possibility to choose between three different definitions for the minor radius @xmath47 , corresponding to three different values of the namelist variable irho . if irho=0 , the minor radius is defined by @xmath48 , where @xmath49 is the outer location of the flux surface @xmath25 at @xmath50 and @xmath51 is the location of the magnetic axis .",
    "if irho=1 , @xmath47 is defined by @xmath52 where @xmath53 is the inner location of the flux surface @xmath25 at @xmath50 .",
    "if irho=2 , @xmath47 is defined by @xmath54 .",
    "as already mentioned , eq .",
    "( [ eigen ] ) must be solved iteratively .",
    "g - s solvers usually iterate on the operator @xmath55 @xcite .",
    "one of the key ideas in ecom is to iterate on the laplacian operator @xmath56 instead .",
    "this can be done without any loss of generality , and does not incur any additional computational cost .",
    "the advantage is that at a given iteration , one now has to solve poisson s equation , and one can therefore rely on the larger body of numerical methods developed for fast high order poisson solvers in two dimensions . to solve for @xmath25 and the smallest eigenvalue @xmath34 in eq.([eigen ] ) , ecom uses a modified version of the inverse iteration method @xcite .",
    "specifically , if @xmath57 and @xmath58 are known at the iteration step @xmath59 , then @xmath60 and @xmath61 are computed according to @xmath62\\label{poisson1}\\\\ & \\psi^{(i+1)}=\\frac{\\tilde{\\psi}^{(i+1)}}{||\\tilde{\\psi}^{(i+1)}||_{\\infty}}\\label{psiup}\\\\ & \\lambda^{(i+1)}=\\frac{\\lambda_{i}}{||\\tilde{\\psi}^{(i+1)}||_{\\infty}}.\\label{lambdaup}\\end{aligned}\\ ] ] where @xmath63 is the extremum of @xmath64 in the domain @xmath21 . in ecom ,",
    "the iterative process terminates when @xmath65 for some predetermined small @xmath66 . in the numerical results presented in this article",
    ", we typically had @xmath67 . in order to keep consistency across different grid sizes ,",
    "@xmath63 is not only calculated for all values of @xmath64 on the mesh , but instead over the entire domain @xmath21 . in ecom",
    ", this is done by finding the location where @xmath68 with the newton - raphson method .",
    "it requires knowledge of the hessian matrix , whose values away from grid points are evaluated by interpolation , based on the high order fourier and chebyshev representations ecom uses for the poisson solver on the unit disk .",
    "the extremum of @xmath25 on the grid is used to provide a very good initial guess , so that in practice very few newton steps are subsequently required to find @xmath69 in @xmath21 .",
    "it is known empirically that iterative schemes such as the one above converge faster when the right - hand side of the partial differential equation is slowly varying . for better convergence",
    "we thus scale the unknown function @xmath25 as @xmath70 . replacing @xmath25 with @xmath71 , eq.([poisson1 ] )",
    "becomes @xmath72\\label{poisson2}\\ ] ]    unlike eq .",
    "( [ poisson1 ] ) , the right - hand side of eq .",
    "( [ poisson2 ] ) does not have derivatives of @xmath25 , and it is therefore smoother . note that while one solves for @xmath71 in the poisson step , the normalization steps ( [ psiup ] ) and ( [ lambdaup ] ) are still computed in terms of @xmath25 .",
    "thus far , we have explained how ecom treats the grad - shafranov equation as a nonlinear poisson problem .",
    "we now briefly describe how ecom computes the solution of the poisson equation ( [ poisson2 ] ) at each iteration , i.e. with fixed right - hand side , on a domain @xmath21 of fusion interest and with the dirichlet boundary condition @xmath73 on @xmath20 .",
    "the poisson solver in ecom is based on two elements : 1 ) a spectrally accurate numerical method to compute the conformal map from the plasma domain @xmath21 to the unit disk ; 2 ) a fast , high order poisson solver on the unit disk .",
    "conformal mapping is an effective method for solving poisson s equation because a conformal map transforms a laplacian operator into another laplacian operator , with a scale factor @xcite .",
    "consider the generic poisson equation @xmath74 the conformal map @xmath75 from @xmath21 to the unit disc @xmath76 and its inverse map @xmath77 .",
    "solving eq .",
    "( [ poisson_generic ] ) is equivalent to solving the following poisson problem in @xmath76 : @xmath78 where @xmath79 , and the functions @xmath80 and @xmath81 should be seen as the real and imaginary parts of the inverse map @xmath82 . clearly , solving eq .",
    "( [ poisson_mapped ] ) is easier than solving eq .",
    "( [ poisson_generic ] ) , provided one has a way to calculate the inverse map @xmath82 at both boundary and interior points of @xmath76 . in ecom , this is done as follows .",
    "ecom first computes the forward map @xmath83 for points on @xmath20 that are equispaced in arc length through the kerzman - stein integral equation based on the szeg kernel @xcite .",
    "using oversampling and interpolation , ecom then uses the boundary values of the forward map to calculate the inverse map @xmath80 and @xmath81 for points on the boundary of @xmath76 that are equispaced in the polar angle @xmath84 .",
    "finally , ecom computes @xmath82 for points in the interior of @xmath76 using the cauchy integral formula and the fast fourier transform @xcite .",
    "ecom relies on a somewhat naive implementation of the kerzmann - stein integral equation for the computation of @xmath83 on @xmath20 , that requires @xmath85 work , where @xmath86 is the number of discretization points on @xmath20 .",
    "there exist methods resulting in an asymptotic @xmath87 run time @xcite , but they are not currently implemented in ecom because the computation only needs to be done once , and because other steps in ecom are more expensive .",
    "the computation of the inverse map at interior points is based on the cauchy integral formula and the fast fourier transform , and results in a run time complexity of @xmath88 , where @xmath89 is the number of radial grid points and @xmath90 the number of angular grid points for the mesh that ecom uses to solve poisson s equation on @xmath76    the boundary @xmath20 can be defined in several ways , that are specified by the namelist variable ibtype in ecom . if ibtype=0 , the plasma boundary corresponds to the contour @xmath91 of a solovev equilibrium we discuss in section [ sec : solovev ] , parametrized by eqs .",
    "( [ solob1])-([solob2 ] ) . if ibtype=1 , the boundary is specified by the miller parametrization @xcite given by eqs .",
    "( [ millerb1])-([millerb2 ] ) of section [ sec : exnl ] , and the elongation @xmath92 and triangularity @xmath93 must then be specified .",
    "if ibtype=2 , the boundary is specified by a set of discrete points @xmath94 .",
    "this allows the computation of equilibria specified by experimental data and is also the method of choice to compute up - down asymmetric equilibria .",
    "the conformal mapping routine requires that the points on @xmath20 be equispaced in arc length .",
    "when ibtype=0 or ibtype=1 , these points are easily calculated from the parametric equations for the boundary .",
    "when ibtype=2 , ecom uses lagrange interpolation to compute these points .    in principle , the conformal map has to be computed only once , at the beginning of the iterative procedure corresponding to eqs .",
    "( [ psiup])-([poisson2 ] ) .",
    "however , as one might physically expect , computing flux surface quantities is much more convenient if the point that is mapped to the center of @xmath76 coincides with the magnetic axis .",
    "to facilitate the calculation of these quantities , which takes place after the g - s equation is solved , ecom recomputes the conformal map several times within the poisson iterations to adjust the center of @xmath76 to the magnetic axis .",
    "we have empirically observed that the conformal map only needs to be recomputed a few times .",
    "the riemann mapping theorem guarantees the existence and uniqueness of an analytic map between any simply connected plasma cross section @xmath21 and the unit disk .",
    "however , this does not mean that conformal mapping is a practical numerical method for any arbitrary plasma shape .",
    "the issue is that points on the boundary of @xmath76 that are equispaced in the angle @xmath84 are not necessarily mapped , under the inverse map , to points that resolve the boundary of @xmath21 in the desired fashion .",
    "it is well known , for example , that if @xmath21 is an elongated ellipse , uniformly spaced points in @xmath84 on the boundary of @xmath76 correspond to a distribution of points on the boundary of @xmath21 which is sparse on the curved parts and crowded on the flat parts of the ellipse @xcite . in the remainder of this article",
    ", we will call this phenomenon the  crowding effect \" .",
    "it has two direct implications for ecom .",
    "first , ecom can only treat in a robust manner domains that have a smooth boundary , and can therefore not be used to compute equilibria with a magnetic x - point on the plasma boundary .",
    "second , ecom is particularly efficient for plasma shapes that are not too elongated , as is the case for conventional tokamaks . as elongation is increased , the high order convergence properties are maintained for @xmath0 and its derivatives , but a higher number of grid points is required to reach a certain level of accuracy @xcite .",
    "we will go back to this point in section [ sec : dis ] .",
    "we finish this section by describing how ecom solves poisson s equation on the unit disk , @xmath95 as required in eq .",
    "( [ poisson_mapped ] ) .",
    "the solver uses separation of variables in the usual polar coordinates @xmath96 and expands @xmath97 and @xmath98 as fourier series @xmath99 substituting these expressions into poisson s equation , we get the following ordinary differential equation for each @xmath100 : @xmath101 where the boundary condition at @xmath102 is obtained by requiring the regularity of the solution at this point . for each @xmath100 , a solution of eq .",
    "( [ ode ] ) that does not satisfy the boundary condition at @xmath103 can be written in terms of convolutions with the green s function associated with eq .",
    "( [ ode ] ) that has the proper behavior at @xmath102 and @xmath104 : @xmath105 for each @xmath100 , the general solution to the homogeneous equation @xmath106 satisfying the regularity condition at @xmath102 can also be written explicitly : @xmath107 where @xmath108 is a constant to be determined from the boundary condition at @xmath103 .",
    "setting @xmath109 , we can then write the solution of eq .",
    "( [ ode ] ) satisfying the proper boundary conditions as follows : @xmath110    one of the major advantages of the green s function formulation and the formula ( [ radial_sol ] ) used in ecom is that partial derivatives of @xmath97 can be calculated explicitly from the formulae in eqs .",
    "( [ particular ] ) and ( [ homosol ] ) @xcite .",
    "numerical differentiation is never required , which is one of the main reasons why our numerical method leads to partial derivatives of @xmath25 that have the same order of convergence as @xmath25 .    in ecom ,",
    "the computation and sum of the fourier series are done with the fast fourier transform . the angular grid on the unit disk is uniformly spaced in the polar angle @xmath84 , to guarantee the spectral accuracy of the representation for smooth data .",
    "the number of grid points in the @xmath84 direction is @xmath90 . in the radial direction",
    ", ecom uses a piecewise chebyshev grid .",
    "specifically , the interval @xmath111 $ ] is divided into @xmath112 subintervals , and on each of these subintervals a chebyshev grid of order @xmath113 is constructed .",
    "the number of grid points in the radial direction is then @xmath114 .",
    "@xmath115 is the default setting in ecom .",
    "the convolutions with the green s function in eq .",
    "( [ particular ] ) are computed with a 16th order gaussian quadrature rule .",
    "reference @xcite describes ways to avoid the computational issues associated with the rapid growth and decay of the monomials @xmath116 and @xmath117 for large @xmath100 , as well as the recursive algorithm used to compute these integrals in @xmath118 work .",
    "the run time complexity of the poisson solver on the disk is @xmath88 : ecom computes @xmath118 ffts of size @xmath90 at a cost of @xmath88 and solves @xmath90 radial ordinary differential equations at a cost of @xmath119 .",
    "the flow diagram in figure [ ecomdiagram ] presents a condensed view of the iterative scheme used in ecom , as a summary of section [ sec : gs ] .",
    "the initialization step corresponds to the specification of the grid resolution and of the values of the namelist variables presented in this article .",
    "the parameters @xmath120 , @xmath121 and @xmath122 in figure [ ecomdiagram ] refer to discretizations used during postprocessing , after the g - s equation is solved , and are defined in section [ sec : post ] .",
    "the main purpose of postprocessing is to compute equilibrium quantities that play a key role in heating and current drive , stability and transport calculations , and to scale the normalized solution @xmath25 to the physical flux @xmath0 .",
    "in addition , ecom can compute the parallel current density using reduced models for the ohmic current and the bootstrap current , check the mercier criterion for each flux surface @xcite and the global troyon limit @xcite , and calculate the miller parametrization that best fits a flux surface chosen by the user .",
    "the evaluation of flux quantities requires integration along contours of constant poloidal magnetic flux @xmath25 .",
    "a flux coordinate system @xmath123 is more convenient for such integrals than the @xmath124 coordinate system used by ecom to solve the g - s equation .",
    "for postprocessing , ecom thus constructs the following flux coordinate system .",
    "@xmath125 is chosen to be the usual toroidal angle @xmath125 , with @xmath126 , while the poloidal angle @xmath127 is defined by @xmath128 if @xmath129 , @xmath130 if @xmath131 , where @xmath132 is the four - quadrant inverse tangent and @xmath133 is the position of the magnetic axis . in terms of the @xmath123",
    "coordinates , the flux surface average of a function @xmath134 @xcite , written @xmath135 , is defined by @xmath136 where @xmath137 is the jacobian of the transformation between cartesian coordinates and the @xmath123 coordinate system : @xmath138}\\left[(r - r_0)\\frac{\\partial \\psi}{\\partial r}+(z - z_0)\\frac{\\partial \\psi}{\\partial z}\\right]\\end{aligned}\\ ] ] as will soon be apparent , several physical quantities are best expressed in terms of the three functions @xmath139 , @xmath140 , and @xmath141 defined by @xmath142 rewriting eq .",
    "( [ eigen ] ) using flux coordinates , a simple relationship can be obtained that links @xmath143 , @xmath144 , and @xmath145 .",
    "indeed , eq . ( [ eigen ] ) takes the following form in flux coordinates @xcite : @xmath146 taking the flux surface average of @xmath147 eq .",
    "( [ eq : gs_flux ] ) , we obtain the desired relationship between @xmath143 , @xmath144 , and @xmath145 : @xmath148 the plasma volume inside the flux surface @xmath25 is @xmath149 and the total plasma volume is @xmath150 .",
    "the toroidal current within the flux surface @xmath25 is @xmath151 where we have used eq .",
    "( [ gsrsec3 ] ) and @xmath152 .",
    "the total toroidal current in @xmath21 is @xmath153 .",
    "the volume averaged pressure @xmath154 is given by @xmath155 where we have used integration by part , combined with @xmath156 , @xmath157 , and @xmath158 .",
    "the total beta is @xmath159 where @xmath160 is the vacuum field at the point @xmath161 , with @xmath162 .",
    "our definitions of the poloidal beta and of the internal inductance are the same as jardin s @xcite : @xmath163 the total poloidal magnetic field energy is @xmath164 finally , for each flux surface , the safety factor is defined as @xmath165}{2\\pi}\\int_0^{2\\pi } d\\theta \\frac{j}{r^2}=\\lambda\\frac{f[\\psi(\\psi)]}{2\\pi } i_c\\label{q1}.\\end{aligned}\\ ] ] the normalized radius can be used to find the differential volume @xmath166 and the differential flux @xmath167 , which are often used in transport or mhd analysis .",
    "also , the magnetic shear can be defined in terms of @xmath47 by @xmath168      to evaluate the integrals in eq .",
    "( [ int123 ] ) numerically , one needs to find the location of the desired flux contours , which in general do not coincide with the @xmath94 grid of the poisson solver , and then integrate the integrands along these contours . in ecom",
    ", this is done with the following three steps : ( i ) ecom first determines the radial location of @xmath120 flux surfaces for each angle @xmath84 in the unit disk @xmath169 ; ( ii ) ecom then evaluates the integrands at the corresponding @xmath94 points in @xmath21 , and interpolates the integrands to a grid that is equispaced in the angle @xmath127 ; ( iii ) ecom finally computes the integrals along contours of constant @xmath25 in the domain @xmath21 using the trapezoidal rule . since the numerical methods that are used for interpolation and integration in steps ( i)-(iii ) are spectrally accurate , ecom computes the location of the flux contours and the integrals in eq .",
    "( [ int123 ] ) without significant loss of accuracy , as we will demonstrate in section [ sec : accuracy ] .",
    "we now describe steps ( i ) , ( ii ) , and ( iii ) in more detail .    for a description of step ( i ) , we put ourselves in the situation in which the g - s solver has computed the values @xmath170 of the flux @xmath25 on the grid of the unit disk @xmath76 , and we imagine that we want to determine the location of the contour @xmath171 on @xmath76 .",
    "ecom does this as follows . for each angle @xmath172",
    ", ecom first finds the chebyshev subinterval of the radial grid for which @xmath173 , where @xmath174 is the index of the first chebyshev point in that radial subinterval .",
    "once the subinterval is found , ecom constructs a local continuous approximation @xmath175 of @xmath25 in the radial direction from the known values @xmath176 on the subinterval of interest and the chebyshev grid for that subinterval .",
    "specifically , @xmath177 is written as the following sum : @xmath178 where the functions @xmath179 are the chebyshev polymials associated with the chebyshev grid of the subinterval , and where the coefficients @xmath180 are given by the expression @xmath181 where @xmath182 is the kronecker delta .",
    "ecom then uses the expansion in eq .",
    "( [ eq : cheby_rep ] ) to find the radial position satisfying @xmath183 with a newton - raphson iterative method : @xmath184 this root finding process usually converges in a few iterations , typically @xmath185 , and the total cost to find the location of @xmath186 contours at @xmath90 angles is @xmath187 . finally ,",
    "after the radial position of a given contour is found , ecom uses @xmath188 and @xmath189 for @xmath190 and chebyshev representations analogous to eq .",
    "( [ eq : cheby_rep ] ) to accurately evaluate @xmath191 and @xmath192 at the location of the flux contours . at the end of step ( i )",
    "the radial position of the specified flux contours are known for each angle @xmath172 in @xmath76 , and so are the values of the integrands in eq .",
    "( [ int123 ] ) at these points . through the backward map ,",
    "all these quantities are also known in @xmath21 .    in eq .",
    "( [ int123 ] ) , one integrates quantities that are @xmath193-periodic in @xmath127 over the period @xmath194 $ ] .",
    "numerically , this can be done very accurately with a trapezoidal - rule quadrature , provided that the integrands are known on an equispaced @xmath127 grid . since the equispaced @xmath84 grid in @xmath76",
    "is not mapped to an equispaced @xmath127 grid , the goal of step ( ii ) is to interpolate the quantities computed in step ( i ) on a grid in @xmath21 that is equispaced in @xmath127 . because of the crowding effect that is inherent to the conformal mapping technique , the angular grid resulting from the inverse map underresolves certain regions of @xmath21 . for accurate",
    "interpolation , it is thus desirable to first oversample the integrands to be interpolated .",
    "the oversampling is done by refining the equispaced @xmath84 grid of @xmath76 using the fft , assuming band - limited integrands . as a result of this ,",
    "the integrands are known at @xmath195 angular grid points , where @xmath196 is the oversampling factor . in principle , these values could then be mapped back to @xmath21 , and interpolated . in practice",
    ", however , the backward mapping of the @xmath195 grid points for @xmath120 contours from @xmath169 to @xmath21 requires @xmath197 operations , and results in significant computational time when @xmath196 is as large as desired for accurate interpolation .",
    "note that the run - time complexity is not of the form @xmath198 as it was for the backward mapping of the @xmath96 grid points in @xmath76 because the calculation of the backward map for the flux contours can not be trivially accelerated by the fft .",
    "the reason for this is that the radial location of the flux contours varies as a function of @xmath84 . in order to reduce the computational cost , we only compute the backward map for @xmath121 points among the @xmath195 oversampled points , with @xmath199 , and chosen such that their mapped positions are the closest to the target grid of @xmath122 points equispaced in @xmath127 .",
    "these @xmath121 points are found by computing the backward map of a small number of points lying on the contour of interest in @xmath76 with increasing angle @xmath84 across the interval @xmath194 $ ] , and using @xmath200-th order lagrange interpolation to construct an approximation of the function @xmath201 on that contour .",
    "we usually take @xmath202 and @xmath203 .",
    "once the @xmath121 non - equispaced points are found , we use trigonometric interpolation for a periodic function @xcite to interpolate the integrands at the @xmath121 points to the @xmath122 equispaced points .",
    "this requires @xmath204 work to find the barycentric factors , and @xmath205 work to interpolate at @xmath122 points .    once step ( ii )",
    "is completed , step ( iii ) is straightforward .",
    "the contour integrals in eq .",
    "( [ int123 ] ) are computed from the integrands on the equispaced @xmath127 grid using the trapezoidal rule . since the integrands are smooth and periodic in @xmath127 , and since the @xmath127 grid is uniform , the trapezoidal rule is spectrally accurate @xcite .",
    "the required work for the trapezoidal - rule quadrature is very small , @xmath206 .      a single solution of the normalized form of the g - s equation as given in eq .",
    "( [ eigen ] ) can describe an infinite sequence of axisymmetric equilibria that have a different total toroidal current @xmath207 and a different safety factor @xmath208 at the magnetic axis . to understand these degrees of freedom , consider that ecom has just computed the eigenvector - eigenvalue solution @xmath209 of eq .",
    "( [ eigen ] ) .",
    "the normalized total toroidal current @xmath210 can be calculated from this solution according to eq .",
    "( [ torcur1 ] ) .",
    "all is then needed to obtain an equilibrium with the desired total toroidal current @xmath211 is the simple rescaling @xmath212 , which is equivalent to rescaling @xmath0 . from the definitions in eq .",
    "( [ normal_prof ] ) , it is clear that @xmath213 and @xmath36 are also scaled by @xmath34 , and must be rescaled as well : @xmath214 and @xmath215 .",
    "once @xmath34 is fixed , there still is a degree of freedom for the determination of @xmath216 , because @xmath216 depends on @xmath217 instead of @xmath218 , as can be seen in eq .",
    "( [ q1 ] ) . in ecom",
    ", this degree of freedom can be removed by specifying the value of either the poloidal current or the safety factor at a certain radial location .",
    "there are several options for the scaling of the normalized equilibrium in ecom , with corresponding namelist variable iscale .",
    "they are summarized in table [ tab : iscale ] . if iscale=0 or iscale=1 , @xmath34 is not rescaled , so that the total toroidal current is the normalized total toroidal current @xmath210 . when iscale=0 , the degree of freedom associated with @xmath216 is removed by specifying either @xmath219 or @xmath220 .",
    "for @xmath219 , the additional namelist variable ifpol needs to be set to 0 , while for @xmath220 ifpol needs to be set to 1 .",
    "when iscale=1 , @xmath221 is specified .",
    "if iscale=2 or iscale=3 , @xmath34 is rescaled so that the total toroidal current is adjusted to the desired toroidal current @xmath211 .",
    "the choices for constraining the @xmath216 profile are the same as before : when iscale=2 , either @xmath219 or @xmath220 is given , depending on the value of ifpol , and when iscale=3 , @xmath221 is given . finally , a last option to fix @xmath34 in ecom is to specify @xmath221 and either @xmath219 or @xmath220 .",
    "this option corresponds to iscale=4 .    [ cols=\"^,^,^\",options=\"header \" , ]",
    "13 natexlab#1#1bibnamefont # 1#1bibfnamefont # 1#1citenamefont # 1#1url # 1`#1`urlprefix[2]#2 [ 2][]#2    c.r .",
    "sovinec , a.h .",
    "glasser , t.a .",
    "gianakon , d.c .",
    "barnes , r.a .",
    "nebel , s.e .",
    "kruger , d.d .",
    "schnack , s.j .",
    "plimpton , a. tarditi , m.s .",
    "chu , and the nimrod team , _ journal of computational physics _ * 195 * , 355 ( 2004 )                            j.r .",
    "cary , j. candy , j. cobb , r.h .",
    "cohen , t. epperly , d.j .",
    "estep , s. krasheninnikov , a. d. malony , d.c .",
    "mccune , l. mcinnes , a. pankin , s. balay , j.a .",
    "carlsson , m.r .",
    "fahey , r.j .",
    "groebner , a.h .",
    "hakim , s.e .",
    "kruger , m. miah , a. pletzer , s. shasharina , s. vadlamani , d. wade - stein , t.d .",
    "rognlien , a. morris , s. shende , g.w .",
    "hammett , k. indireshkumar , a. yu . pigarov and h. zhang , _ journal of physics : conference series _ * 180 * , 012056 ( 2009 )    c.s .",
    "chang , s. ku , p. diamond , m. adams , r. barreto , y. chen , j. cummings , e. dazevedo , g. dif - pradalier , s. ethier , l. greengard , t.s .",
    "hahm , f. hinton , d. keyes , s. klasky , z. lin , j. lofstead , g. park , s. parker , n. podhorszki , k. schwan , a. shoshani , d. silver , m. wolf , p. worley , h. weitzner , e. yoon and d. zorin , _ journal of physics : conference series _ * 180 * , 012057 ( 2009 )    i. voitsekhovitch , b. alper , m. brix , r.v .",
    "budny , p. buratti , c.d .",
    "challis , j. ferron , c. giroud , e. joffrin , l. laborde , t.c .",
    "luce , d. mccune , j. menard , m. murakami , j.m .",
    "park , and jet - efda contributors , _ nuclear fusion _ * 49 * , 055026 ( 2009 )                                                        s.d .",
    "scott , p.h .",
    "diamond , r.j .",
    "fonck , r.j .",
    "goldston , r.b .",
    "howell , k.p .",
    "jaehnig , g. schilling , e.j .",
    "synakowski , m.c .",
    "zarnstorff , c.e .",
    "bush , e. fredrickson , k.w .",
    "hill , a.c .",
    "janos , d.k .",
    "mansfield , d.k .",
    "owens , h. park , g. pautasso , a.t .",
    "ramsey , j. schivell , g.d .",
    "tait , w.m .",
    "tang , and g. taylor , _ physical review letters _ * 64 * , 531 ( 1990 )    l.l .",
    "lao , k.h .",
    "burrell , t.s .",
    "casper , v.s .",
    "chan , m.s .",
    "chu , j.c .",
    "deboo , e.j .",
    "doyle , r.d .",
    "durst , c.b .",
    "forest , c.m .",
    "greenfield , r.j .",
    "groebner , f.l .",
    "hinton , y. kawano , e.a .",
    "lazarus , y.r .",
    "linliu , m.e .",
    "mauel , w.h .",
    "meyer , r.l .",
    "miller , g.a .",
    "navratil , t.h .",
    "osborne , q. peng , c.l .",
    "rettig , g. rewoldt , t.l .",
    "rhodes , b.w .",
    "rice , d.p .",
    "schissel , b.w .",
    "stallard , e.j .",
    "strait , w.m .",
    "tang , t.s .",
    "taylor , a.d .",
    "turnbull , r.e .",
    "waltz , and the diiid team , _ physics of plasmas _ * 3 * 1951 ( 1996 )    j.e .",
    "menard , r.e .",
    "bell , e.d .",
    "fredrickson , d.a .",
    "gates , s.m .",
    "kaye , b.p .",
    "leblanc , r. maingi , s.s .",
    "medley , w.park , s.a .",
    "sabbagh , a. sontag , d. stutman , k. tritz , w. zhu , and the nstx research team , _ nuclear fusion _ * 45 * 539 ( 2005 )"
  ],
  "abstract_text": [
    "<S> we present ecom ( equilibrium solver via conformal mapping ) , a fast and accurate fixed boundary solver for toroidally axisymmetric magnetohydrodynamic equilibria with or without a toroidal flow . </S>",
    "<S> ecom combines conformal mapping and fourier and integral equation methods on the unit disk to achieve exponential convergence for the poloidal flux function as well as its first and second partial derivatives . as a consequence of its high order accuracy , for dense grids and tokamak - like </S>",
    "<S> elongations ecom computes key quantities such as the safety factor and the magnetic shear with higher accuracy than the finite element based code chease [ h. ltjens _ et al . </S>",
    "<S> _ , computer physics communications 97 , 219 ( 1996 ) ] at equal run time . </S>",
    "<S> ecom has been developed to provide equilibrium quantities and details of the flux contour geometry as inputs to stability , wave propagation and transport codes . </S>"
  ]
}
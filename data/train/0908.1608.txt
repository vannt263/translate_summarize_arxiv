{
  "article_text": [
    "the _ classic _ way of drawing a graph @xmath6 in @xmath3 involves associating each vertex @xmath7 in @xmath8 with a unique point @xmath9 and associating with each edge @xmath10 an open jordan curve that has @xmath9 and @xmath11 as its endpoints .",
    "if the curves associated with the edges in a classic drawing of @xmath0 intersect only at their endpoints , then ( the embedding of ) @xmath0 is a _ plane graph_. graphs that admit plane graph representations are _ planar graphs _ , and there has been a voluminous amount of work on algorithms on classic drawings of planar graphs .",
    "most notably , planar graphs can be drawn with vertices assigned to integer coordinates in an @xmath12 grid , which is often a desired type of classic drawing known as a _ grid drawing_. moreover , there are planar graph drawings that use only straight line segments for edges  @xcite .",
    "the beauty of plane graph drawings is that , by avoiding edge crossings , confusion and clutter in the drawing is minimized . likewise",
    ", straight - line drawings further improve graph visualization by allowing the eye to easily follow connections between adjacent vertices .",
    "in addition , grid drawings enforce a natural separation between vertices , which further improves readability .",
    "thus , a `` gold standard '' in classic drawings is to produce planar straight - line grid drawings and , when that is not easily done , to produce planar grid drawings with edges drawn as simple polygonal chains .",
    "unfortunately , not all graphs are planar .",
    "so drawing them in the classic way requires some compromise in the gold standard for plane drawings .",
    "in particular , any classic drawing of a non - planar graph must necessarily have edge crossings , and minimizing the number of crossings is np - hard  @xcite .",
    "one point of hope for improved drawings of non - planar graphs is to draw them crossing - free on surfaces of higher genus , such as toruses , double toruses , or , in general , a surface topologically equivalent to a sphere with @xmath2 handles , that is , a _ genus-@xmath2 _ surface .",
    "such drawings are called _ cellular _ embeddings or _ @xmath13-cell _ embeddings , since they partition the genus-@xmath2 surface into a collection of cells that are topologically equivalent to disks . as in classic drawings of planar graphs ,",
    "these cells are called _ faces _ , and it is easy to see that such a drawing would avoid edge crossings .    in a fashion analogous to the case with planar graphs , cellular embeddings of graphs in a genus-@xmath2 surface can be characterized combinatorially . in particular , it is enough if we just have a rotational order of the edges incident on each vertex in a graph @xmath0 to determine a combinatorial embedding of @xmath0 on a surface ( which has that ordering of associated curves listed counterclockwise around each vertex ) .",
    "such a set of orderings is called a _ rotation system _ and , since it gives us a combinatorial description of the set of faces , @xmath14 , in the embedding , it gives us a way to determine the genus of the ( orientable ) surface that @xmath0 is embedded into by using the _ euler characteristic _ ,",
    "@xmath15 which also implies that @xmath16 is @xmath17  @xcite",
    ".    unfortunately , given a graph @xmath0 , it is np - hard to find the smallest @xmath2 such that @xmath0 has a combinatorial cellular embedding on a genus-@xmath2 surface  @xcite .",
    "this challenge need not be a deal - breaker in practice , however , for there are heuristic algorithms for producing such combinatorial embeddings ( that is , consistent rotation systems )  @xcite .",
    "moreover , higher - genus graphs often come together with combinatorial embeddings in practice , as in many computer graphics and mesh generation applications .    in this paper , we assume that we are given a combinatorial embedding of a graph @xmath0 on a genus-@xmath2 surface , @xmath1 , and are asked to produce a geometric drawing of @xmath0 that respects the given rotation system .",
    "motivated by the gold standard for planar graph drawing and by the fact that computer screens and physical printouts are still primarily two - dimensional display surfaces , the approach we take is to draw @xmath0 in the plane rather than on some embedding of @xmath1 in @xmath18 . making this choice of drawing paradigm",
    ", of course , requires that we `` cut up '' the genus-@xmath2 surface , @xmath1 , and `` unfold '' it so that the resulting sheet is topologically equivalent to a disk . the traditional method for performing such",
    "a cutting is with a _",
    "canonical polygonal schema _ , @xmath4 , which is a set of @xmath5 cycles on @xmath1 all containing a common point , @xmath19 , such that cutting @xmath1 along these cycles results in a topological disk .",
    "these cycles are _ fundamental _ in that each of them is a continuous closed curve on @xmath1 that can not be retracted continuously to a point .",
    "moreover , these fundamental cycles can be paired up into complementary sets of cycles , @xmath20 , one for each handle , so that if we orient the sides of @xmath4 , then a counterclockwise ordering of the sides of @xmath4 can be listed as @xmath21 where @xmath22 ( @xmath23 is a reversely - oriented copy of @xmath24 , so that these two sides of @xmath4 are matched in orientation on @xmath1 .",
    "thus , the canonical polygonal schema for a genus-@xmath2 surface @xmath1 has @xmath25 sides that are pairwise identified .    because we are interested in drawing the graph @xmath0 and not just the topology of @xmath1 , it would be preferable if the fundamental cycles are also cycles in @xmath0 in the graph - theoretical sense",
    ". it would be ideal if these cycles form a canonical polygonal schema with no repeated vertices other than the common one .",
    "this is not always possible  @xcite and furthermore , as we show in  @xcite , the problem of finding a set of @xmath5 fundamental cycles with vertex - disjoint interiors in a combinatorially embedded genus-@xmath2 graph is np - complete .",
    "there are two natural choices , both of which we explore in this paper :    * draw @xmath0 in a polygon @xmath26 corresponding to a canonical polygonal schema , @xmath4 , possibly with repeated vertices and edges on its boundary . * draw @xmath0 in a polygon @xmath26 corresponding to a polygonal schema , @xmath4 , that is not canonical .    in either case , the edges and vertices on the boundary of @xmath26 are repeated ( since we `` cut '' @xmath1 along these edges and vertices ) .",
    "thus , we need labels in our drawing of @xmath0 to identify the correspondences . such planar drawings of @xmath0 inside a polygonal schema @xmath4 are called _ polygonal - schema _ drawings of @xmath0 .",
    "there are three natural aesthetic criteria such drawings should satisfy :    1 .",
    "_ straight - line edges : _ all the edges in a polygonal - schema drawing should be rendered as polygonal chains , or straight - line edges , when possible .",
    "straight frame : _ each edge of the polygonal schema should be rendered as a straight line segment , with the vertices and edges of the corresponding fundamental cycle , placed along this segment .",
    "we refer to such a polygonal - schema drawing as having a _",
    "straight frame_. 3 .",
    "_ polynomial area : _ drawings should have polynomial area when they are normalized to an integer grid .",
    "it is also possible to avoid repeated vertices and instead use a classic graph drawing paradigm , by transforming the fundamental polygon rendering using polygonal - chain edges that run through `` overpasses '' and `` underpasses '' as in road networks , so as to illustrate the topological structure of @xmath0 ; see fig .",
    "[ fig - fund ] .",
    "[ [ our - contributions . ] ] our contributions .",
    "+ + + + + + + + + + + + + + + + + +    we provide several methods for producing planar polygonal - schema drawings of higher - genus graphs .",
    "in particular , we provide four algorithms , one for torodial ( @xmath27 ) graphs and three for non - toroidal ( @xmath28 ) graphs .",
    "our algorithm for toroidal graphs simultaneously achieves the three aesthetic criteria for polygonal schema drawings : it uses straight - line edges , a straight frame , and polynomial area .",
    "the three algorithms for non - toroidal graphs , _ peel - and - bend _ , _ peel - and - stretch _ , and _ peel - and - place _ , achieve two of the tree aesthetic criteria , and differ in which criteria they fail to meet .",
    "suppose we are given a graph @xmath0 together with its cellular embedding in a genus-@xmath2 surface , @xmath1 .",
    "an important first step in all of our algorithms involves our finding a polygonal schema , @xmath4 , for @xmath0 , that is , a set of cycles in @xmath0 such that cutting @xmath1 along these cycles results in a topological disk .",
    "we refer to this as the _ peel _ step , since it involves cutting the surface @xmath1 until it becomes topologically equivalent to a disk .",
    "since these cycles form the sides of the fundamental polygon we will be using as the outer face in our drawing of @xmath0 , it is desirable that these cycles be as `` nice '' as possible with respect to drawing aesthetics .",
    "unfortunately , some desirable properties are not effectively achievable . as lazarus _",
    "et al . _",
    "@xcite show , it is not always possible to have a canonical polygonal schema @xmath4 such that each fundamental cycle in @xmath4 has a distinct set of vertices in its interior ( recall that the interior of a fundamental cycle is the set of vertices distinct from the common vertex shared with its complementary fundamental cycle  with this vertex forming a corner of a polygonal schema ) .",
    "in addition , we show in  @xcite that finding a vertex - disjoint set of fundamental cycles is np - complete .",
    "so , from a practical point of view , we have two choices with respect to methods for finding polygonal schemas .    [ [ finding - a - canonical - polygonal - schema . ] ] finding a canonical polygonal schema .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    as mentioned above , a canonical polygon schema of a graph @xmath0 2-cell embedded in a surface of genus @xmath2 consists of @xmath25 sides , which correspond to @xmath5 fundamental cycles all containing a common vertex .",
    "et al . _",
    "@xcite show that one can find such a schema for @xmath0 in @xmath29 time and with total size @xmath29 , and they show that this bound is within a constant factor of optimal in the worst case , where @xmath30 is the total combinatorial complexity of @xmath0 ( vertices , edges , and faces ) , which is @xmath17 .    [ [ minimizing - the - number - of - boundary - vertices - in - a - polygonal - schema . ] ] minimizing the number of boundary vertices in a polygonal schema .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    another optimization would be to minimize the number of vertices in the boundary of a polygonal schema .",
    "erikson and har - peled  @xcite show that this problem is np - hard , but they provide an @xmath31-approximation algorithm that runs in @xmath32 time , and they give an exact algorithm that runs in @xmath33 time .    in our _ peel",
    "_ step , we assume that we use one of these two optimization criteria to find a polygonal schema , which either optimizes its number of sides to be @xmath25 , as in the canonical case , or optimizes the number of vertices on its boundary , which will be @xmath29 in the worst case either way .",
    "nevertheless , for the sake of concreteness , we often describe our algorithms assuming we are given a canonical polygonal schema .",
    "it is straight - forward to adapt these algorithms for non - canonical schemas .      in all of our algorithms the first step , _ peel _ ,",
    "constructs a polygonal schema of the input graph @xmath0 .",
    "in fact , we need a polygonal schema , @xmath4 , in which there is no chord connecting two vertices on the same side of @xmath4 . here",
    "we show how to transform any polygonal schema into a chord - free polygonal schema . in the _ peel _ step",
    ", we cut the graph @xmath0 along a canonical set of @xmath5 fundamental cycles getting two copies of the cycle in @xmath34 , the resulting planar graph .",
    "for each of the two pairs of every fundamental cycle there may be chords .",
    "if the chord connects two vertices that are in different copies of the cycle in @xmath34 then this is a chord that _ can _ be drawn with a straight - line edge and hence does not create a problem . however ,",
    "if the chord connects two vertices in the same copy of the cycle in @xmath34 , then we will not be able to place all the vertices of that cycle on a straight - line segment ; see figure  [ fig : chordfree](a ) .",
    "we show next that a new chord - free polygonal schema can be efficiently determined from the original schema .",
    "[ theorem : chordfree ] given a graph @xmath0 combinatorially embedded in a genus-@xmath2 surface and a canonical polygonal schema @xmath35 on @xmath0 with a common vertex @xmath19 , a _ chord - free polygonal schema _ @xmath36 can be found in @xmath29 time .",
    "we first use the polygonal schema to cut the embedding of @xmath0 into a topological disk ; see fig .  [",
    "fig : chordfree](a ) .",
    "notice this cutting will cause certain vertices to be split into multiple vertices .",
    "for each fundamental cycle in @xmath37 , we stitch the disk graph back together along this cycle forming a topological cylinder .",
    "the outer edges ( left and right ) of the cylinder along this stitch will have two copies of the vertex @xmath19 , say @xmath38 and @xmath39 .",
    "we perform a shortest path search from @xmath38 to @xmath39 .",
    "this path becomes our new fundamental cycle @xmath40 , ( since @xmath38 and @xmath39 are the same vertex in @xmath0 ) .",
    "observe that this cycle must be chord - free or else the path chosen was not the shortest path ; see fig .",
    "[ fig : chordfree](b ) .",
    "we then cut the cylinder along @xmath40 and proceed to @xmath41 .",
    "the resulting set , @xmath42 , is therefore a collection of chord - free fundamental cycles all sharing the common vertex @xmath19 .    ' '' ''    it should be noted that , although each cycle @xmath40 is at the time of its creation a shortest path from the two copies of @xmath19 , these cycles are _ not _ the shortest fundamental cycles possible . for example , a change in the cycle of @xmath41 could introduce a shorter possible path for @xmath40 , but not additional chords .     and @xmath43 with chord @xmath44 .",
    "the grey nodes correspond to the identical vertices above .",
    "the highlighted path represents a shortest path between the two copies of vertex 1 .",
    "( b ) the topological disk _ after _ cutting along this new fundamental cycle .",
    "the grey nodes show the old fundamental cycle .",
    ", title=\"fig:\",width=226 ]   and @xmath43 with chord @xmath44 .",
    "the grey nodes correspond to the identical vertices above .",
    "the highlighted path represents a shortest path between the two copies of vertex 1 .",
    "( b ) the topological disk _ after _ cutting along this new fundamental cycle .",
    "the grey nodes show the old fundamental cycle . ,",
    "title=\"fig:\",width=226 ] + ( a ) ( b )",
    "in this section , we describe our algorithms that construct a drawing of @xmath0 in a straight frame using polynomial area . here",
    "we are given an embedded genus-@xmath2 graph @xmath6 along with a chord - free polygonal schema , @xmath4 , for @xmath0 from the _ peel _ step .",
    "we rely on a modified version of the algorithm of de fraysseix , pach and pollack  @xcite for the drawing",
    ". sections  [ sec : embed ] and  [ sec : embedhigher ] describe the details for @xmath27 and for @xmath28 , respectively . in the latter case we introduce up to @xmath45 edges with single bends where @xmath46 is the number of vertices on the fundamental cycles .",
    "thus , we refer to the algorithm for non - toroidal graphs as the _ peel - and - bend _ algorithm .      for toroidal graphs we are able to achieve all three aesthetic criteria : straight - line edges , straight frame , and polynomial area .",
    "[ theorem : goneembed ] let @xmath34 be an embedded planar graph and @xmath47 in @xmath34 be a collection of @xmath25 paths such that each path @xmath48 is chord - free , the last vertex of each path matches the first vertex of the next path , and when treated as a single cycle , @xmath35 forms the external face of @xmath34 . if @xmath27 , we can in linear time draw @xmath34 on an @xmath49 grid with straight - line edges and no crossings in such a way that , for each path @xmath50 on the external face , the vertices on that path form a straight line .    for simplicity , we assume that every face is a triangle , except for the outer face ( extra edges can be added and later removed )",
    ". the algorithm of de fraysseix , pach and pollack ( dpp )  @xcite does not directly solve our problem because of the additional requirement for the drawing of the external face . in the case of @xmath27 ,",
    "the additional requirement is that the graph must be drawn so that the external face forms a rectangle , with @xmath51 and @xmath52 as the top and bottom horizontal boundaries and @xmath53 and @xmath54 as the right and left boundaries .",
    "recall that the dpp algorithm computes a canonical labeling of the vertices of the input graph and inserts them one at a time in that order while ensuring that when a new vertex is introduced it can `` see '' all of its already inserted neighbors .",
    "one technical difficulty lies in the proper placement of the top row of vertices . due to the nature of the canonical order",
    ", we can not force the top row of vertices to all be the last set of vertices inserted , unlike the bottom row which can be the first set inserted .",
    "consequently , we propose an approach similar to that of miura , nakano , and nishizeki  @xcite .",
    "first , we split the graph into two parts ( not necessarily of equal size ) , perform a modified embedding on both pieces , invert one of the two pieces , and stitch the two pieces together .",
    "[ lemma : splita ] given an embedded plane graph @xmath0 that is fully triangulated except for the external face and two edges @xmath55 and @xmath56 on that external face , it is possible in linear time to partition @xmath57 into two subsets @xmath58 and @xmath59 such that    1 .",
    "the subgraphs of @xmath0 induced by @xmath58 and @xmath59 , called @xmath60 and @xmath61 , are both connected subgraphs ; 2 .   for edges",
    "@xmath62 and @xmath63 , we have @xmath64 and @xmath65 ; 3 .",
    "the union @xmath66 of the set of faces in @xmath0 that are not in @xmath60 or @xmath61 forms an outerplane graph with the property that the external face of @xmath66 is a cycle with no repeated vertices .",
    "first , we compute the dual @xmath67 of @xmath0 , where each face in ( the primal graph ) @xmath0 is a node in @xmath67 and there is an arc between two nodes in @xmath67 if their corresponding primal faces share an edge in common .",
    "we ignore the external face in this step . for clarity we shall refer to vertices and edges in the primal and nodes and arcs in the dual ;",
    "see fig .",
    "[ fig : split](a ) .",
    "we further augment the dual by adding an arc between two nodes in @xmath67 if they also share a vertex in common .",
    "call this augmented dual graph @xmath68 .",
    "let the source node @xmath69 be the node corresponding to the edge @xmath55 and the sink node @xmath70 be the node corresponding to the edge @xmath56 .",
    "we then perform a breadth - first shortest - path traversal from @xmath69 to @xmath70 on @xmath68 ; see fig .",
    "[ fig : split](b ) .",
    "let @xmath71 be a shortest ( augmented ) path in @xmath68 obtained by this search .",
    "we now create a ( regular ) path @xmath19 by expanding the augmented arcs added .",
    "that is , if there is an arc @xmath72 such that @xmath73 and @xmath7 share a common vertex in @xmath0 but _ not _ a common edge in @xmath0 , i.e. they are part of a fan around the common vertex , we add back the regular arcs from @xmath73 to @xmath7 adjacent to this common vertex .",
    "the choice of going clockwise or counter - clockwise around the common vertex depends on the previous visited arc ; see fig .",
    "[ fig : split](c ) .",
    "all of the steps described above can be easily implemented in linear time .",
    "the details of the proof can be found in  @xcite .    ' '' ''    [ cols=\"^,^ \" , ]     we claim that the area of this grid is @xmath49 .",
    "first , let us analyze the width . from our discussion",
    ", we have accounted for each insertion step using shifts .",
    "since the maximum amount of shifting of 2 units is done with type @xmath74 vertices , we know that each of the two subgraphs has width at most @xmath75 .",
    "in addition , the stitching stage only required a shifting of the smaller width subgraph .",
    "therefore , the width of our drawing is at most @xmath75 .",
    "ideally , the height of our drawing would also match this bound .",
    "the stitching stage for example only adds at most @xmath76 units to the final height . after the insertion of each wall vertex",
    "we know that the height increases by at most @xmath77 .",
    "therefore , we know that the height is at most @xmath78 or @xmath79 and consequently we have a correct drawing using a grid of size @xmath49 .    ' '' ''    thus , we get a planar polygonal - schema drawing of a torodial graph @xmath0 in a rectangle , which simultaneously achieves polynomial area , a straight frame , and straight - line edges .",
    "the case for @xmath28 is similar , but involves a few alterations .",
    "first , we use @xmath80 unlike the previous sections which used @xmath81 . the main difference ,",
    "however , is that we can not embed the outer face using only horizontal and vertical walls unless the fundamental cycles are chord - free or unless edge bends are allowed .",
    "since we desire a straight - frame rendering of the polygonal schema @xmath4 in a rectangle , we must allow some edge bends in this case .",
    "the following theorem describes our resulting drawing method , which we call the _ peel - and - bend _ algorithm .",
    "[ theorem : gembed ] let @xmath34 be an embedded planar graph and @xmath47 in @xmath34 be a collection of @xmath25 paths such that each path @xmath48 is chord - free , the last vertex of each path matches the first vertex of the next path , and when treated as a single cycle , @xmath35 forms the external face of @xmath34 .",
    "let @xmath82 be the number of vertices on the external cycle .",
    "we can draw @xmath34 on an @xmath49 grid with straight - line edges and no crossings and at most @xmath83 single - bend edges in such a way that for each path @xmath50 on the external face the vertices on that path form a straight line .",
    "first , let us assume that the entire external face , represented by @xmath35 , is completely chord - free .",
    "that is , if two vertices on the external cycle share an edge then they are adjacent on the cycle . in this case",
    "we can create a new set of 4 paths , @xmath84 we can then use theorem  [ theorem : goneembed ] to prove our claim using no bends .",
    "if , however , there exist chords on the external face , embedding the graph with straight - lines becomes problematic , and in fact impossible to do using a rectangular outer face . by introducing a temporary bend vertex for each chord and retriangulating the two neighboring faces , we can make the external face chord free .",
    "clearly this addition can be done in linear time .",
    "since there are at most @xmath46 vertices on the external face and since the graph is planar , there are no more than @xmath83 such bend points to add .",
    "we then proceed as before using theorem  [ theorem : goneembed ] , subsequently replacing inserted vertices with a bend point .    ' '' ''",
    "in this section , we describe two more algorithms for producing a planar polygonal - schema drawing of a non - toroidal graph @xmath0 , which is given together with its combinatorial embedding in a genus-@xmath2 surface , @xmath1 , where @xmath28 . as mentioned above , these algorithms provide alternative trade - offs with respect to the three primary aesthetic criteria we desire for polygonal - schema drawings . for the sake of space ,",
    "we describe these algorithms at a very high level and leave their details and full analysis to the final version of this paper .",
    "[ [ the - peel - and - stretch - algorithm . ] ] the peel - and - stretch algorithm .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in the peel - and - stretch algorithm , we find a chord - free polygonal schema @xmath4 for @xmath0 and cut @xmath0 along these edges to form a planar graph @xmath34 .",
    "we then layout the sides of @xmath4 in a straight - frame manner as a regular convex polygon , with the vertices along each boundary edge spaced as evenly as possible .",
    "we then fix this as the outer face of @xmath34 and apply tutte s algorithm  @xcite to construct a straight - line drawing of the rest of @xmath34 .",
    "this algorithm therefore achieves a drawing with straight - line edges in a ( regular ) straight frame , but it may require exponential area when normalized to an integer grid , since tutte s drawing algorithm may generate vertices with coordinates that require @xmath85 bits to represent .",
    "[ [ the - peel - and - place - algorithm . ] ] the peel - and - place algorithm .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in the peel - and - place algorithm , we start by finding a polygonal schema @xmath4 for @xmath0 and cut @xmath0 along these edges to form a planar graph @xmath34 , as in all our algorithms . in this case , we then create a new triangular face , @xmath86 , and place @xmath34 in the interior of @xmath86 , and we fully triangulate this graph .",
    "we then apply the dpp algorithm  @xcite to construct a drawing of this graph in an @xmath12 integer grid with straight - line edges .",
    "finally , we remove all extra edges to produce a polygonal schema drawing of @xmath0 .",
    "the result will be a polygonal - schema drawing with straight - line edges having polynomial area , but there is no guarantee that it is a straight - frame drawing , since the dpp algorithm makes no collinear guarantees for vertices adjacent to the vertices on the bounding triangle .",
    "in this paper , we present several algorithms for polygonal - schema drawings of higher - genus graphs .",
    "our method for toroidal graphs achieves drawings that simultaneously use straight - line edges in a straight frame and polynomial area .",
    "previous algorithms for the torus were restricted to special cases or did not always produce polygonal - schema renderings  @xcite .",
    "our methods for non - toroidal graphs can achieve any two of these three criteria .",
    "it is an open problem whether it is possible to achieve all three of these aesthetic criteria for non - toroidal graphs . to the best of our knowledge ,",
    "previous algorithms for general graphs in genus-@xmath2 surfaces were restricted to those with `` nice '' polygonal schemas  @xcite ."
  ],
  "abstract_text": [
    "<S> in this paper , we give polynomial - time algorithms that can take a graph @xmath0 with a given combinatorial embedding on an orientable surface @xmath1 of genus @xmath2 and produce a planar drawing of @xmath0 in @xmath3 , with a bounding face defined by a polygonal schema @xmath4 for @xmath1 . </S>",
    "<S> our drawings are planar , but they allow for multiple copies of vertices and edges on @xmath4 s boundary , which is a common way of visualizing higher - genus graphs in the plane . </S>",
    "<S> our drawings can be defined with respect to either a canonical polygonal schema or a polygonal cutset schema , which provides an interesting tradeoff , since canonical schemas have fewer sides , and have a nice topological structure , but they can have many more repeated vertices and edges than general polygonal cutsets . as a side note , we show that it is np - complete to determine whether a given graph embedded in a genus-@xmath2 surface has a set of @xmath5 fundamental cycles with vertex - disjoint interiors , which would be desirable from a graph - drawing perspective . </S>"
  ]
}
{
  "article_text": [
    "recently there has been growing interest in large stochastic networks , such as social networks of contacts , networks of collaboration between scientists , the internet , flight connections , networks of predator - prey , and many other examples in biology , sociology , economics , even linguistics  @xcite .",
    "while the inquiry into networks begins already with eler s seminal work on graph theory , the latest interest stems from the discovery that many of the large networks encountered in everyday life seem to be _ scale - free _",
    "@xcite : the distribution of the degree of the nodes ( the number of links @xmath0 coming out of a node ) has a power - law tail , @xmath1 the scale - free degree distribution is implicated in exotic properties of the networks , such as increased resilience to random failure ( the nets maintain a connected backbone under random dilution of the nodes , when the degree exponent is @xmath2 ) and increased vulnerability to removal of the most highly connected nodes  @xcite .",
    "indeed , it has been suggested that the need to attain such attributes might have acted , in some cases , as the natural selection mechanism giving rise to the scale - free distribution in the first place .    in this communication",
    "we examine whether there is anything special about transport by diffusion in scale - free nets .",
    "diffusion is of course a very natural mode of transport , where hopping from one node to the next is unaffected by the history of the walk .",
    "( we think mainly of simple random walks , where the walker takes one time step to transit between adjacent nodes , and refer to these as diffusion . ) accordingly , diffusion on various networks has been studied extensively  @xcite we approach the question by comparing recursive scale - free nets  @xcite to other nets . to make the comparison meaningful , we require that the nets possess a well - defined average degree , @xmath3 , in the thermodynamic limit of @xmath4  @xcite . the _ recursive _ scale - free nets are studied for convenience , because they allow for exact analysis  @xcite .",
    "our hope is that stochastic scale - free nets are well represented by the examples chosen , though to which extent they do remains an open question .",
    "we do find advantages to a scale - free architecture in the form of faster transit times between existing nodes , when the network grows in size .",
    "we also observe that walks emanating from the most connected nodes are recurrent , despite the networks infinite dimension .",
    "the rest of this paper is organized as follows .",
    "diffusion and its effectiveness can be gauged in many different ways , and in section  [ measures ] we explain which aspects of diffusion we choose to focus on . as an example we examine the complete graph , thereby introducing some basic techniques used later in the study of scale - free nets . in section",
    "[ other ] we briefly survey how diffusion fares on other network architectures , including regular and fractal lattices .",
    "the main bulk of our results is given in section  [ results ] , where we analyze two recursive scale - free nets , sharing the same degree distribution , but representing two extremes in terms of the number of paths connecting any two nodes .",
    "our conclusions are summarized in section  [ discussion ] .",
    "technical details about the scale - free networks studied here , and the methods used for this purpose , are left to the appendices .",
    "diffusion along networks can be characterized in many different ways , but we find it most convenient to focus on the following :    * mean transit time , @xmath5 : this is the mean first passage time ( fpt ) between two distinct nodes @xmath6 and @xmath7 , averaged over all node pairs .",
    "* mean return time , @xmath8 : this is the mean time for returning to a node @xmath6 for the first time ( after having left it ) , averaged over all the nodes of the net . * scaling efficiency : how the various fpts increase upon growth of the net . * recurrence : diffusion from a node is recurrent if a walker starting from the node returns to the node almost surely over the course of time .",
    "when diffusion is not recurrent , we call it _ transient_. the concept is useful only in the limit @xmath4 , since all nodes are recurrent when @xmath9 , regardless of the net s architecture .    the mean transit time @xmath5 is a measure of how fast one can navigate the net randomly , through diffusion .",
    "the mean return time @xmath8 is a rough measure of _ prominence _ : how easy it is to find your way back home .",
    "the average over all @xmath10 pairs of nodes ( for @xmath5 ) , or over all nodes @xmath6 ( for @xmath8 ) is necessary in order to obtain a single figure of merit representative of the graph as a whole .",
    "we omit the commonly used angular brackets denoting average , for brevity , whenever there is no risk of confusion . in situations where the graph is highly inhomogeneous",
    "the average conceals the wide distribution found when looking at individual nodes .",
    "we shall indeed examine this distribution for the notoriously inhomogeneous case of scale - free nets .",
    "a quantity related to the mean transit time is the mean sojourn time , the fpt from node @xmath6 to node @xmath7 and back : @xmath11 . while @xmath5 is not necessarily equal to @xmath12 for a specific pair of nodes , upon taking the average over all pairs one simply has @xmath13 , so the mean sojourn time is trivially related to the mean transit time .",
    "it will be ignored in our study .",
    "note that there is no simple relation between @xmath14 and @xmath8 , and separate consideration of the latter is necessary .    in all cases",
    ", the relevant question is how the fpt scales with the size of the net , @xmath15",
    ". clearly , the various fpts increase with @xmath15 , but we ask whether there is a preferred architecture that minimizes the increase . to tackle this issue , we introduce the concept of _ scaling efficiency_. suppose that the net grows in size , from @xmath15 to @xmath16 nodes .",
    "we expect that in the thermodynamic limit of @xmath4 @xmath17 defining the scaling efficiency exponent @xmath18 .",
    "( an analogous relation for @xmath8 defines @xmath19 . )    scaling efficiency can be restricted to the nodes already present in the network _ before _ growth .",
    "let @xmath20 be the mean transit time in the augmented network , averaged over the _",
    "original _ set of nodes ( before growth ) .",
    "then we define the _ restricted _ scaling efficiency exponent , @xmath21 , thus : @xmath22 and similarly for @xmath23 .",
    "implicit in this definition is the assumption that growth occurs in a way that preserves the relevant attributes of the network ( for example , the degree distribution ) .",
    "suppose that the net in question is the internet , and that @xmath5 , representing the average number of links to be randomly followed to connect two users , is sampled at two different times .",
    "in that case @xmath21 reflects the inconvenience in increased transit time associated with growth for _ old _ users , those that were there already at the first sampling , whereas @xmath18 refers to _ all _ users , old and new .",
    "we shall see that for some scale - free architectures @xmath24 .",
    "finally , recurrence is a stricter measure of prominence than the mean return time . indeed , a finite mean return time implies recurrence , but diffusion from a node might be recurrent despite having a diverging mean return time .",
    "we will show that recurrence in scale - free nets may vary from node to node , thus we shall deem a _ node _",
    "recurrent ( or transient ) if diffusion from that particular node is recurrent ( or transient ) .",
    "a simple way to decide whether a node is recurrent is to trap all walkers that return to the node and consider the survival probability of remaining walkers in the long time asymptotic limit : the node is recurrent if the survival probability tends to zero .",
    "we now demonstrate some basic theoretical techniques for analyzing fpt , as applied to complete graphs . in a complete graph of @xmath15 nodes , k@xmath25 ,",
    "all nodes are connected to one another ( there are @xmath26 links ) .",
    "the complete graphs is maximally connected  @xcite , and serves as a useful yardstick .",
    "furthermore , the high symmetry of k@xmath25 simplifies its analysis and makes it a perfect start for pedagogical purposes .",
    "the mean transit time @xmath5 satisfies the equation @xmath27 a walker starting off from node @xmath6 faces @xmath28 equally likely choices ( corresponding to the number of links emanating from @xmath6 ) .",
    "only one of the links would lead to node @xmath7 directly , in one time step .",
    "this choice is represented by the first term on the rhs of eq .",
    "( [ ktij ] ) .",
    "the second term represents a choice leading to a different node , @xmath29 .",
    "this happens with probability @xmath30 , which accounts for the prefactor .",
    "it takes one time step to reach node @xmath29 , and then , the walker is faced with an additional mean fpt @xmath31 , to reach the target @xmath7 from node @xmath29 . however , due to the fact that in the complete graph all nodes are equivalent , @xmath31 is identical to @xmath5 , enabling one to close the equation . solving for @xmath5 we obtain",
    "@xmath32    the mean return time is analyzed in similar fashion .",
    "it satisfies the simple equation @xmath33 a walker starting off from @xmath6 must step to one of the neighboring sites , @xmath7 , taking one time step to do so .",
    "this accounts for the first term on the rhs of  ( [ ktii ] ) .",
    "once at @xmath7 , the walker needs an additional time @xmath12 for returning to @xmath6 ( second term ) .",
    "however , all sites being equivalent , @xmath34 .",
    "hence , @xmath35 eqs .",
    "( [ ktij ] ) and ( [ ktii ] ) are particular instances of the underlying backward equation ( known also as dynkin s equation )  @xcite , a general , powerful approach which is best learnt by example .",
    "see also appendix  [ matrices ] .",
    "for the simple case of the complete graph we can do better than merely deriving the mean fpt ; we can in fact obtain the whole distribution of first passage times .",
    "let @xmath36 be the probability that the fpt from @xmath6 to @xmath7 is exactly @xmath37 .",
    "it satisfies the equation @xmath38 where @xmath39 is a kronecker delta - function .",
    "a walker gets from @xmath6 to @xmath7 in one time step with probability @xmath40 ( first term on rhs ) , or it gets first to some other site ( second term ) . getting to",
    "the other site takes one time step , so to conclude in @xmath37 steps the walker needs to complete the trek in @xmath41 steps .",
    "the recursion is best solved by means of the generating function @xmath42 operating on  ( [ kp ] ) with @xmath43 yields @xmath44 or @xmath45 after taylor - expanding @xmath46 , one can read off the probabilities directly : @xmath47 the distribution of mean transit times is a simple exponential , and it is easily verified that @xmath48 , in accord with our previous finding .",
    "it immediately follows that the distribution of mean return times is exponential as well , @xmath49 the exponential tail is a generic feature in all finite graphs ( regardless of architecture ) . for @xmath50 ,",
    "one expects @xmath51 ( @xmath52 is a constant of order unity ) , and similarly for @xmath53 .",
    "differences are to be found only in the early time regime , @xmath54 .",
    "note , however that with @xmath4 this  early \" time regime can be arbitrarily large .",
    "we now turn to the question of recurrence on the complete graph . to this purpose , imagine an ensemble of walkers starting off from a node ( the  origin \" ) .",
    "the walkers get trapped whenever they return to the origin , and are taken out of circulation . because all nodes , besides the origin , are equivalent , the probability for finding a walker in any of the nodes is equal .",
    "denote the probability for finding a walker in a node ( besides the origin ) at time @xmath37 by @xmath55 .",
    "clearly , it satisfies @xmath56 for the walker leaves the node with probability one , but walkers from each of the @xmath57 neighboring nodes ( all but the origin ) step into the site with a probability proportional to @xmath40 , and also proportional to the density of walkers in the neighboring sites , @xmath55 .",
    "the solution is @xmath58 so we see that in the limit @xmath4 the survival probability is constant : the walker never returns to the origin , and diffusion on the complete graph is transient .",
    "note that to test for recurrence it is necessary to take the limit @xmath4 _ before _ considering the long time asymptotic of @xmath59 .",
    "another easy way to see that the complete graph is transient , is from the distribution of fpts .",
    "we see from eq .",
    "( [ kfii ] ) that @xmath60 as @xmath4 , for any finite @xmath37 .",
    "that is , as @xmath4 the probability of returning to the origin at any finite time is zero  @xcite .    with regards to scaling efficiency",
    ", the scaling of @xmath5 and @xmath8 with @xmath15 implies that for the complete graph @xmath61 also , since all sites are equivalent , whether one averages over the preexisting nodes or all nodes does not make any difference in this case , and @xmath62    in closing this section , we remind the reader that the complete graph is an extreme , ideal case of maximal connectivity .",
    "this ideal of connectivity comes at the cost of not being able to maintain @xmath63 constant as @xmath15 increases . to do that , most links",
    " a fraction @xmath64  need to be removed .",
    "the question is whether one can whittle down the graph in such a way so as to improve the benchmarks of diffusion considered here . on the one hand",
    ", removing links increases the average distance between nodes , thus contributing to larger fpts . on the other hand ,",
    "judicious removal of links can help a walker focus on following selected paths between the nodes , reducing the risk of getting lost in a plethora of roundabout paths .",
    "it is these two tendencies that must be balanced in designing efficient nets for transport by diffusion .",
    "let us now review how diffusion fares in some of the better known media , besides scale - free nets .",
    "our goal here is to try and understand how diffusion changes from one architecture to another , and why .",
    "regular lattices are one simple way to scale the net in size while maintaining a constant @xmath63 , since the degree of each node is fixed .",
    "diffusion on regular lattices changes in character with dimensionality .",
    "the mean fpt scales as @xmath65 in the limit of @xmath4 , the distribution of fpts ( whether from a site to itself , or from a site to another at a finite distance ) , behaves as @xmath66 note that in @xmath67 , the mean first passage time @xmath68 diverges , though diffusion is _",
    "recurrent_. in @xmath69 , the integral @xmath70 and there is a finite probability that the walker never returns to the origin : diffusion is _ transient _ ( and the mean fpt diverges as well ) .",
    "consider now fractal lattices .",
    "it is possible to construct fractal lattices such that @xmath63 is bounded .",
    "a well - known example is the sierpinski gasket , where all nodes other than the three corners have degree @xmath71 .",
    "diffusion in fractals is anomalous and scales as  @xcite @xmath72 for regular euclidean lattices the _ walk dimension _",
    "@xmath73 and diffusion is normal ( or fickian ) .",
    "when @xmath74 is larger than the fractal dimension of the underlying medium , @xmath75 , diffusion is recurrent , otherwise , if @xmath76 , diffusion is transient .",
    "the mean return time in fractals scales as @xmath77  @xcite .",
    "the mean transit time scales as @xmath78 for example , for the sierpinski gasket @xmath79 , @xmath80 . as implied by @xmath81",
    ", diffusion is recurrent , and @xmath82 .",
    "the scaling in  ( [ fractal ] ) can be understood in the following way .",
    "when diffusion is recurrent , the typical time to transit between @xmath6 and @xmath7 is @xmath83 .",
    "but the typical distance between two sites scales as @xmath84 , and  ( [ fractal ] ) follows .",
    "if diffusion is not recurrent , the target @xmath7 will likely not be reached even after the walker s displacement equals @xmath85 .",
    "instead we would typically wait until each site on the lattice is visited once , on average , before @xmath7 is reached , and that would take as many steps as there are nodes in the lattice , or @xmath86 .",
    "regular euclidean lattices may be subsumed in this description of fractals , with @xmath87 and @xmath73 .",
    "euclidean dimension @xmath88 is a marginal case where @xmath89 .",
    "diffusion turns out to be recurrent in this case .",
    "another interesting case is that of the erds - rnyi ( er ) random graph  @xcite .",
    "it consists of a complete graph k@xmath25 where only a fraction @xmath90 of the links is realized ( a fraction @xmath91 of the links is absent ) . at @xmath92",
    "the er graph undergoes a percolation phase transition : as long as @xmath93 there exists a _ giant component _ of @xmath94 nodes that forms a finite fraction of the graph , @xmath95 as @xmath4 .",
    "as @xmath90 approaches @xmath96 the giant component disappears , splintering into a multitude of smaller components .    to maintain @xmath63 constant , as @xmath4 , we must have @xmath97 , @xmath98 .",
    "( since there are @xmath99 links in k@xmath25 , this guarantees @xmath100 . ) essentially , we are looking at the giant component near the percolation threshold . in this case",
    "we know that @xmath101 , and @xmath102 this result is too related to fractals , as summarized above .",
    "it is well known that percolation in er graphs is analogous to percolation in @xmath103 dimensions . in the latter case , the incipient infinite percolation cluster ( the analogue of the giant component ) has fractal dimension @xmath104 , and diffusion on it is anomalous , with @xmath105 .",
    "the scaling of @xmath106 found in er graphs is thus consistent with @xmath107 of percolation in @xmath103 dimensions .      as a last case ,",
    "before we turn to scale - free graphs , we consider the cayley tree .",
    "the cayley tree is a regular tree graph , where each node has fixed degree , @xmath0 . while normally one considers the infinite tree , for our purpose we may imagine the tree to be finite , consisting of @xmath15 nodes",
    ". diffusion on the cayley tree can be analyzed straightforwardly , by using the underlying backward equation .",
    "one finds that both @xmath8 and @xmath5 scale linearly with @xmath15 ( for both old or new nodes ) . when @xmath4 , diffusion is transient .",
    "an easy way to see this is the following : consider a site on the cayley tree , that we shall take to be the  origin \" .",
    "the @xmath0 neighboring sites constitute shell 1 , and their neighbors ( other than the ones on shell 1 ) are shell 2 , etc . a site on shell @xmath108 has @xmath109 neighbors on shell @xmath110 , but only one neighbor on shell @xmath111 .",
    "thus , diffusion from shell to shell is biased : the walker steps from @xmath108 to @xmath110 with probability @xmath112 , as opposed to probability @xmath113 for stepping back to @xmath111 .",
    "this generates a drift away from the origin and results in transience .      in all the cases we have seen so far",
    ", it would seem that one can have fast fpts , or recurrence , but _ not _ both simultaneously .",
    "linear scaling of the fpts with @xmath15 is the best we have seen , but diffusion seems to be transient ( and ` finding your way back home ' improbable ) whenever that is achieved",
    ". when diffusion is recurrent , it comes at the expense of a poorer scaling of fpts with the size of the system : doubling the number of nodes more than doubles mean transit times .",
    "all the graphs considered above were homogeneous , at least in a statistical sense .",
    "that means that the distinction between scaling for old or new nodes ( upon growth ) , mentioned in the introduction , is irrelevant .",
    "likewise , all nodes in the networks we have seen were of only one type , either transient or recurrent",
    ". we shall now see that in scale - free nets one can achieve both fast fpts _ and _ recurrence simultaneously , at least for part of the graph .",
    "more precisely , the average fpts for _ all _ nodes in scale - free graphs scales linearly with @xmath15 , but increases _ sublinearly _ for the nodes that were already present in the net before growth .",
    "additionally , the most connected nodes in the net ( the hubs ) might be recurrent , though the rest of the net is transient .",
    "the large inhomogeneity of scale - free graphs ( manifest in the degree distribution ) is partially responsible for these trends .",
    "our discussion of diffusion in scale - free nets is limited to two examples of deterministic , recursive constructs : a scale - free tree ( ) , and a scale - free graph with loops ( )  @xcite .",
    "they share the same degree distribution , @xmath114 , with exponent @xmath115 .",
    "a full description of these graphs is given in appendix  [ graphs ] .",
    "the two cases symbolize two extremes : has no loops ( or cycles )  there is only one possible path connecting any two nodes ; but is full of cycles of all sizes , and the number of alternate routes between two nodes increases as @xmath116 as the graph grows recursively  @xcite .",
    "random scale - free graphs lie somewhere between these two extremes .",
    "consider a node @xmath6 in the @xmath117-th generation of the scale - free tree , .",
    "the fpt , for a walker in that node , to exit to _ any _ of its @xmath118 neighbors , is 1 . upon growth of the network , to generation @xmath119",
    ", the node will double its degree , from @xmath118 to @xmath120 .",
    "( all the new nodes are of degree 1 , see appendix  [ graphs ] . )",
    "we will now show that the fpt from @xmath6 to any of the _ old _ @xmath118 neighbors , in the newly grown net , is 3 .",
    "it follows that the passage time from any node @xmath121 to any node @xmath122 triples , on average , upon growth to generation @xmath119 : @xmath123 since the size of the tree triples asymptotically ( as @xmath124 ) , @xmath125 , this means that the scaling efficiency exponent for old nodes is @xmath126 .    to see the basic scaling",
    ", we refer to fig .",
    "[ tijtree ] .",
    "let the fpt for going from node @xmath6 to any of the old @xmath118 neighbors be @xmath127 .",
    "let the fpt for going from any of the new @xmath118 neighbors to one of the old @xmath118 neighbors be @xmath128 .",
    "then , the underlying backward equations are @xmath129 with solution @xmath130 , as stated .",
    "has @xmath118 neighbors in generation @xmath117 ( @xmath131 ) , and @xmath118 new neighbors in generation @xmath119 ( @xmath132 ) .",
    "the new nodes are of degree one , and are connected only to @xmath6 ( broken lines ; refer to appendix  [ graphs]).,scaledwidth=25.0% ]    consider now the return fpt to node @xmath6 , @xmath8 .",
    "let @xmath133 be the fpt for returning to node @xmath6 in .",
    "let @xmath134 be the fpt from @xmath7  an old neighbor of @xmath135  to @xmath6 , in .",
    "similarly , let @xmath8 be the fpt for returning to @xmath6 in , and @xmath12 the fpt from the same neighbor @xmath7 , to @xmath6 , in . for , we have the underlying backward equation @xmath136 while for",
    ", @xmath137 the first term on the rhs indicates the possibility that the walker steps from @xmath6 to one of the new neighbors and back , which happens with probability @xmath138 ( half of the neighbors are new ) and takes two time steps .",
    "we have already shown that @xmath139 , which enables us to eliminate @xmath140 , @xmath141 , and yields @xmath142 in other words , @xmath143 .    the scale - free graph with loops , , performs even better than that . in this case",
    "the fpt in going from node @xmath135 to node @xmath122 in the larger graph merely doubles : @xmath144 or @xmath145 ( compare to @xmath126 , for ) . to see this basic scaling",
    ", we refer to fig .",
    "[ tijloops ] and write the underlying backward equations for @xmath127 ; the fpt for exiting node @xmath135 in the graph , and @xmath128 ; the fpt for reaching @xmath6 from any of its new @xmath118 neighbors in generation @xmath119 : @xmath146 eq .",
    "( [ nu_ijloops ] ) follows from the solution , @xmath147 , found upon eliminating @xmath128 .",
    "has @xmath118 neighbors in generation @xmath117 ( @xmath131 ) , and @xmath118 new neighbors in generation @xmath119 ( @xmath132 ) .",
    "a new node @xmath148 is of degree two , and is connected to @xmath6 and to the old node @xmath7 ( broken lines ; refer to appendix  [ graphs]).,scaledwidth=25.0% ]    the equations for @xmath133 are a bit more involved than for the recursive tree , for we also need to consider @xmath149 , the fpt for getting from a new neighbor @xmath148 back to @xmath6 ( for , @xmath150 ) .",
    "we have @xmath151 again , the relation @xmath152 already found above enables one to eliminate all the unknown variables , leading to @xmath153 exactly as for .",
    "thus , for returning to the origin we find the same efficiency scaling exponent @xmath154 as for the recursive tree .",
    "we see that in the recursive scale - free nets we have analyzed , the fpt for old nodes scales more favorably , upon growth , than for all the other cases considered before . indeed , here @xmath155 for the first time , and for also @xmath156 .",
    "the question arises whether this preferred scaling does not come at the expense of a poorer scaling for the fpt between new nodes ( that constitute the largest part of the net ) .",
    "we show next that this is not the case , and that @xmath157 .",
    "consider @xmath158 , the fpt for returning to a new node @xmath159 , a neighbor of @xmath135 .",
    "let @xmath160 be the fpt from @xmath6 to @xmath148 , and let @xmath161 be the fpt for returning to @xmath6 ( starting from @xmath6 ) without ever visiting @xmath148 .",
    "we have @xmath162 the second equation here is non - standard and requires elaboration : it is based on the fact that starting from @xmath6 the walker would go to @xmath148 with probability @xmath163 ( @xmath118 being the degree of @xmath6 in ) , and taking one time step to do so . with the remaining probability the walker selects one of the other neighbors , but then takes an average time @xmath161 to return to @xmath6 , and it still needs time @xmath160 to get to @xmath148 .",
    "to close these equations we express the fpt for returning to @xmath6 as @xmath164 eliminating @xmath160 and @xmath161 , this leads to @xmath165 finally , using this equation together with the recursion relation of eq .",
    "( [ tiitree ] ) and the fact that @xmath118 doubles in each generation , we find @xmath166 curiously , the result is the same for all new nodes @xmath148 , despite the fact that they are _ not _ equivalent ( while they all have degree 1 , they are connected to nodes of varying degrees ) .",
    "we are ready to take averages over _ all _ nodes .",
    "iterating  ( [ tiitree ] ) , and ( [ tjj ] ) , we see that in there are @xmath167 nodes with @xmath168 , @xmath167 nodes with @xmath169 , @xmath170 with @xmath171 ,  , and @xmath172 with @xmath173 .",
    "we thus obtain @xmath174 which shows that @xmath175 .",
    "basically , the poorer scaling of the new nodes dominates the average .",
    "next , consider @xmath5 in , from _ any _ node @xmath6 to _ any _ other node @xmath7 .",
    "new nodes are always of degree @xmath176 , and are connected to one of the old nodes ( and nothing else ) . hence , the fpt from a new node @xmath177 ( a neighbor of the old node @xmath6 ) to node @xmath7 is only one time step longer than @xmath5 , and does not contribute to the scaling as @xmath4 . we need only worry about @xmath178 , from old node @xmath6 to new node @xmath148 ( a neighbor of old node @xmath7 ) . the underlying backward equation for this case is @xmath179 on the other hand , @xmath180 which in conjunction with  ( [ tjj ] ) yields , @xmath181 the last scaling relation follows from  ( [ tp_ij ] ) and @xmath182 . in summary , @xmath183 and also @xmath184 .    for we can not perform the analogous calculations analytically , namely because of the way new nodes are connected to _ two _ old nodes , rather than one , as in , barring us from obtaining @xmath178 in an obvious way .",
    "instead , we have written computer code for generating and solving the underlying backward equations for all the nodes in ( see appendix  [ matrices ] ) .",
    "memory and time limitations restrict this approach to modest values of @xmath117 , but it becomes quickly apparent that the scaling is similar to that of . for @xmath8 , for example , we have already seen that the scaling for old nodes is the same as for .",
    "our numerical results confirm this , and also reveal that new nodes scale in the same way as  ( [ tjj ] ) : @xmath185 the end result is that the fpts for returning to a node in are @xmath186 as large as the fpts in , and have the very same distribution ( fig .",
    "[ firstlooptime ] ) . in summary , also for , @xmath157 .",
    ", for generations @xmath187 .",
    "the endpoints of the curves represent new nodes , not present in the previous generation , and follow the scaling of eq .",
    "( [ tjjloops ] ) .",
    "the remainder of the data points scale in the more advantageous way valid for old nodes , eq .",
    "( [ tp_ii2 ] ) .",
    "the scaling of mean return times for is virtually the same.,scaledwidth=40.0% ]      the most connected nodes , both in and , are recurrent .",
    "we can see this from the following heuristic argument .",
    "consider the thermodynamic limit of @xmath4 ( or @xmath124 ) .",
    "consider a node @xmath6 in or , that has been added in in the @xmath188-th generation : in other words , the network has been iterated @xmath189 times since then . in each of these iterations ,",
    "the fpt for returning to @xmath6 follows the scaling for old nodes , eqs .",
    "( [ tp_ii ] ) and ( [ tp_ii2 ] ) , so @xmath190 . at the same time",
    ", the fpt from @xmath6 to other nodes scales at least as @xmath191 , for , or as @xmath192 , for ( the lower bound is realized for nodes @xmath7 that were already present in generation @xmath188 as well ) . in either case @xmath193 , as @xmath124 , suggesting that node @xmath6 is recurrent .    in an infinite net",
    "only a fraction zero of the nodes is recurrent .",
    "we can relax the definition , however , for finite @xmath117 and deem node @xmath6  recurrent \" if @xmath194 , or @xmath195 , ( @xmath196 for , and 2 for ) .",
    "the fraction of  recurrent \" nodes is @xmath197 .",
    "demanding @xmath198 , we get @xmath199 and @xmath200 for and , respectively .    for",
    ", we can show directly that the most connected nodes are recurrent .",
    "the most connected node in has @xmath201 neighbors , of which @xmath138 are of degree 1 , @xmath202 are of degree 2 , ",
    ", @xmath203 are of degree @xmath204 ,  , 1 is of degree @xmath205 , and 1 is of degree @xmath201 .",
    "each of these neighbors lie at the root of disconnected branches ( they are connected to one another only through the most connected node ) . using the backward equations",
    ", one can show rather easily that the mean return time to the most connected node , for a walker that steps into a neighbor of degree @xmath206 , is @xmath207 .",
    "imagine that there is a trap , or sink at the origin ( the most connected node ) .",
    "then , half of the walkers  the ones that started off to neighbors of degree 1  get trapped after @xmath208 time steps ; @xmath202 get trapped after @xmath209 time steps , on average ; etc .",
    "after time @xmath210 , only @xmath203 of the walkers survive , or @xmath211\\to0 , \\quad \\text{as } t\\to0,\\ ] ] proving that the node is recurrent .",
    "a similar argument holds for any node of degree @xmath212 , @xmath213 , @xmath124 .    before closing this section",
    ", we analyze the fpt distribution for transit between two hubs a and b in .",
    "let @xmath214 be the probability that the fpt from hub a to hub b in is @xmath37 .",
    "let @xmath215 be the probability that the fpt from hub c to hub b in is @xmath37 . these satisfy the backward equations : @xmath216 it is easier to work with the corresponding generating functions , defined as in eq .",
    "( [ gf ] ) , upon which the convolution terms result in simple products : @xmath217 considering generation @xmath218 separately , we get the boundary condition @xmath219 , or @xmath220 , leading to @xmath221 $ ] , and @xmath222 surprisingly , this is the same functional form as eq .",
    "( [ kfij ] ) for the fpt distribution between nodes in the complete graph k@xmath25 , not only in the long time asymptotic limit , which is expected , but also through the early time regime .",
    "note , however that the size of the net , @xmath15 , is here replaced by an effectively smaller size , @xmath223 , emphasizing the advantages of scale - free nets over other architectures .",
    "we have studied diffusion in large networks , under several different architectures , and have identified clear advantages of scale - free networks over other possibilities . in one extreme , the complete graph , k@xmath25 , provides for the shortest possible path between any two nodes , but offers many alternative paths between the nodes as well . as a result ,",
    "the average transit time between nodes , @xmath224 , increases only linearly with @xmath15 .",
    "the  prominence \" of a node ( the ease with which it is re - encountered by a random walker leaving it ) is mixed : the fpt for return to a node scales linearly , @xmath77 , but diffusion is transient ( there is a finite probability to never find the node again ) . in the opposite extreme , a one - dimensional chain offers only one path between any two nodes , but now the distance is large ( order @xmath15 ) .",
    "this results in long transit times , @xmath225 , but increases the prominence of nodes : @xmath77 ( as in k@xmath25 ) , and in addition diffusion is now recurrent ( a random walker departing a node will almost surely revisit it ) .",
    "other architectures reviewed in this article , besides scale - free nets , lie between these two extremes . in lattices and fractals ,",
    "where the distance between nodes is @xmath226 ( @xmath87 for euclidean lattices ) , the situation is similar to the complete graph when diffusion is transient ( @xmath76 ) , and similar to one dimension when diffusion is recurrent ( @xmath81 ) . for euclidean lattices dimension",
    "@xmath88 is a borderline case separating the two scenarios",
    ". a smaller distance between nodes ( as dimensionality increases ) has the further advantage of making any _ directed _ mode of transport , such as diffusion with drift , faster .",
    "regular trees , such as the bethe lattice or cayley tree , boast even smaller distances between nodes than euclidean lattices or fractals , of only order @xmath227 , while both @xmath5 and @xmath8 scale linearly with @xmath15 ( as good as in k@xmath25 ) , but diffusion is still transient .",
    "overall , diffusion is very similar to that in the complete graph , and the modest logarithmic increase in the distance between nodes seems a small price to pay for keeping the average degree @xmath63 constant upon network growth .",
    "the recursive scale - free lattices analyzed in this communication outperform all of the above architectures .",
    "the average fpt for _ all _ nodes is as good as in k@xmath25 ; @xmath228 , but in addition , at least for , there is an advantage for the nodes _ already present _ in the network before growth ; @xmath229 , @xmath156 .",
    "( for we find @xmath126 , but we suspect this is the exception rather than the rule , and is probably related to the complete absence of loops . )",
    "the prominence of nodes is , again , at least as good as in k@xmath25 ; @xmath230 , but is advantageous for old nodes before growth ; @xmath231 , @xmath155 ( both for and )",
    ". also , diffusion from the most connected nodes is recurrent , despite their infinite degree and the essentially infinite dimensionality of the network . finally , the average distance between nodes in scale - free nets is at least as small as in the bethe lattice ( order @xmath227 ) or better , as for random scale - free nets with degree exponent @xmath232 ( order @xmath233 ) .",
    "we have examined scale - free nets and showed that they hold some advantages for transport through diffusion , but perhaps other architectures are better still .",
    "also , our study was limited to just two cases of scale - free recursive nets : many other recursive models exist , but more importantly , how do _ random _ scale - free nets compare to our findings ?",
    "these are some of the main open questions we will be looking at next .",
    "we thank s.  redner for numerous useful discussions , and nsf grants dms0404778 ( emb ) and phy0140094 ( dba ) for partial support of this work .",
    "is constructed recursively in the following way  @xcite . the  seed \" in generation @xmath218 , ,",
    "is identical to k@xmath234 ( a triangle ) . given generation @xmath117 , one can obtain by adding to each existing link a new node of degree 2 , connected to the endpoint vertices of the link .",
    "alternatively , may be obtained by joining three copies of at the hubs ( the most connected vertices ) .",
    "the two methods and the resulting graphs are illustrated in fig .",
    "[ loops ] .",
    "the two different ways for generating may be exploited to study different properties of the graph , as dictated by convenience .",
    "for example , the fact that all new bonds are of degree @xmath235 ( method 1 ) tells us immediately that @xmath236 , while from the adjoining of three copies ( method 2 ) we obtain the recursion relation @xmath237 for the order of ( the number of nodes in the graph of generation @xmath117 ) .",
    "this recursion , coupled with @xmath238 , yields @xmath239 .",
    "method 1 also tells us that in going from generation @xmath117 to @xmath119 the degree of each existing node doubles , while method 2 says that the number of nodes of a given degree triples ( except the hubs ) .",
    "the degree distribution follows immediately from these two observations : in there are @xmath240 nodes of degree @xmath167 , @xmath241 of degree @xmath242 , @xmath243 of degree @xmath244 ,  , @xmath245 of degree @xmath205 , 3 of degree @xmath201 and 3 of @xmath246 .",
    "it follows that @xmath247 , @xmath248 .",
    "( solid line ) add a new node ( @xmath132 ) of degree 2 , connected to the endpoints of the old link ( @xmath131 ) .",
    "( b )  second method of construction : to obtain generation @xmath119 , join three copies of generation @xmath117 at the hubs ( the nodes of highest degree ) , denoted by a , b , and c in the figure .",
    "( c )   is shown for generations @xmath249.,scaledwidth=40.0% ]    is constructed in a similar way .",
    "the seed , , is identical to k@xmath250 ( a single link connecting two nodes ) . to pass from generation @xmath117 to @xmath119 one either doubles the degree of each existing node , by connecting to the node new nodes of degree 1 ( method 1 ) , or instead one joins three copies of generation @xmath117 at the hubs ( method 2 ) .",
    "the two methods of construction and the first few generations are shown in fig .",
    "[ trees ] .",
    "is very similar to : it has @xmath172 nodes of degree @xmath251 , @xmath172 of degree @xmath167 , @xmath252 of degree @xmath242 ,  ,",
    "@xmath253 of degree @xmath254 , 2 of degree @xmath205 and 2 of @xmath201 .",
    "the average degree is @xmath255 , and the degree distribution is scale - free , essentially the same as that of ; @xmath247 , @xmath248 .",
    "the most significant difference between and is that the latter is a tree  it has no loops and there is only one path connecting any two nodes .     in generation @xmath117",
    "( solid line and circles ) add @xmath0 new nodes of degree one , connected only to the old node ( broken lines and open circles ) .",
    "( b )  second method of construction : to obtain generation @xmath119 , join three copies of generation @xmath117 at the hubs ( the nodes of highest degree ) , denoted by a and b in the figure .",
    "( c )   is shown for generations @xmath256.,scaledwidth=40.0% ]",
    "in this appendix , we present a general form of dynkin s equations suitable for an arbitrary adjacency matrix .",
    "we take the adjacency matrix @xmath128 , of a graph @xmath257 with vertices @xmath258 and edges @xmath259 , to be written as usual , @xmath260 the dynkin s equations describe @xmath261 , the expected first transit time from a vertex @xmath6 to a vertex @xmath7 , and the @xmath262 vector @xmath263 records first transit times for all targets @xmath7 .",
    "we rewrite the graph laplacian @xmath264 where @xmath265 is the identity matrix , and let @xmath266 a point - source at vertex @xmath267 is represented by @xmath268 an @xmath269 matrix of all zeros , except for a @xmath251 in the @xmath270 position .",
    "it is easy to show that the general form of the dynkin s equations may be written as @xmath271{\\mathbf t}=(i-\\delta){\\mathbf w},\\ ] ] where @xmath272 is an @xmath262 matrix of all 1-entries .",
    "it is expected that this describes a nonsingular system of equations when @xmath257 has exactly one component , in which case the solution follows , @xmath273^{-1}(i-\\delta){\\mathbf w}.\\ ] ] thus , with the graph presented as an adjacency matrix , we can easily compute first transit times , and by solving eq .",
    "( [ dynkin ] ) for each @xmath274 , for each @xmath6 , we can compute the full matrix of first transit times , @xmath275 . the expected first return time from a vertex @xmath267 back to itself is easily obtained as @xmath276 the column sum of the vector @xmath263 . in this fashion , from @xmath275 we can compute the full vector of first return times , @xmath277 .",
    "in the general random graph case , an adjacency matrix can directly be computed by eq .",
    "( [ adj ] ) . for the self - similar graphs discussed in this paper ,",
    "the adjacency matrices can be generated in a neat recursive manner , through the kronecker - product , @xmath278 .",
    "consider the sequence of triangular scale - free graphs , , shown in fig .",
    "[ loops ] .",
    "notice that has the adjacency matrix , @xmath279 generally , for recursive networks of the type considered in this paper , there is always a first stage : we denote the corresponding adjacency matrix by @xmath280 .",
    "likewise , we denote the adjacency matrix of the recursive graph in generation @xmath117 by @xmath281 .",
    "these @xmath281 can be directly computed by the following algebraic recursion . given @xmath280 , let @xmath282\\cdot r_{n+1}^t.\\ ] ] the particular form and size of the matrix @xmath283 dictates how identical copies of @xmath281 will be assembled together . for example , in the case of we have @xmath284 the @xmath285 identify matrix .",
    "the @xmath286 are non - square projection matrices . for example , in the case of the @xmath287 matrix @xmath286 is the  almost diagonal \" matrix written in terms of projections of the @xmath288 identity matrix @xmath289 , @xmath290 this pastes the different copies of generation @xmath117 together , by merging at  pivot \" nodes . finally , the @xmath291 are @xmath288 permutation matrices which serve to re - order rows and columns of @xmath281 , to ensure that the right pivot nodes ( the hubs , in the case of ) are picked up for merging next .",
    "the choice of @xmath286 , @xmath283 , and @xmath291 , define the construction through the algebra of the kronecker product for a very large class of recursive graph families .",
    "furthermore , one could mix - and - match the @xmath286 , @xmath283 , and @xmath291 to be different matrices at each stage , to produce an even larger class of graphs .    in this manner",
    "it is straightforward to produce @xmath281 on a computer for any stage @xmath117 , and together with the general form of the dynkin s equations discussed in appendix  [ matrices ] one can easily compute @xmath292 and the average fpts .",
    "one may imagine that adding a new node costs some energy , money , etc .",
    ", proportional to the number of links required to connect it , and that the average rate of expenditure in building the net is constant ."
  ],
  "abstract_text": [
    "<S> we study diffusion ( random walks ) on recursive scale - free graphs , and contrast the results to similar studies in other analytically soluble media . </S>",
    "<S> this allows us to identify ways in which diffusion in scale - free graphs is special . </S>",
    "<S> most notably , scale - free architecture results in a faster transit time between existing nodes , when the network grows in size ; and walks emanating from the most connected nodes are recurrent , despite the network s infinite dimension . </S>",
    "<S> we also find that other attributes of the graph , besides its scale - free distribution , have a strong influence on the nature of diffusion . </S>"
  ]
}
{
  "article_text": [
    "the tremendous information processing capabilities of quantum mechanical systems may be attributed to the fact that the state of an  @xmath1 quantum bit ( qubit ) system is given by a unit vector in a  @xmath2 dimensional complex vector space .",
    "since  @xmath3 complex numbers are necessary to completely specify the state of  @xmath1 quantum bits , it may appear that it is possible to encode a lot of information into it .",
    "nonetheless , a fundamental result in quantum information theory  holevo s theorem  @xcite  states that no more than  @xmath1 classical bits of information can be transmitted by transferring  @xmath1 quantum bits from one party to another . in view of this result , it is tempting to conclude that the exponentially many degrees of freedom latent in the description of a quantum system must necessarily stay hidden or inaccessible .",
    "however , the situation is more subtle since in quantum mechanics , the recipient of the  @xmath1 qubits has a choice of measurements he can make to extract information about their state . in general , these measurements do not commute . thus making a particular measurement",
    "will , in general , disturb the system , thereby destroying some or all the information that would have been revealed by another possible measurement .",
    "this opens up the possibility of quantum _ random access",
    "_ encodings .",
    "say we wish to encode  @xmath0 classical bits  @xmath4 into  @xmath1 quantum bits  @xmath5 . then a quantum _ random access _ encoding with parameters",
    "@xmath6 ( or simply an  @xmath7 encoding ) consists of an encoding map from  @xmath8 to @xmath9 , together with a sequence of  @xmath0 possible measurements for the recipient .",
    "if the recipient chooses the  @xmath10th measurement and applies it to the encoding of  @xmath11 , the result of the measurement is  @xmath12 with probability at least  @xmath13 .    a  @xmath7 _ random access _",
    "encoding is a function  @xmath14 such that for every  @xmath15 , there is a measurement  @xmath16 that returns  @xmath17 or  @xmath18 and has the property that @xmath19$}}~ { \\cal o}_i { \\left|f(b , r)\\right\\rangle } = b_i ~ ) \\;\\ge\\ ; p.\\ ] ] we call  @xmath20 the _ encoding function _ , and  @xmath16 the _ decoding functions_.    notice that given the  @xmath1 qubits corresponding to a random access encoding of some  @xmath0 bits , the recipient can not simply make all  @xmath0 measurements and retrieve the encoded bits ( thus violating holevo s bound ) , since any measurement disturbs the state vector . _",
    "a priori _ , there is no reason to rule out the existence of a  @xmath21 encoding for constants @xmath22 , @xmath23 .",
    "in fact , even though  @xmath24 can accommodate only  @xmath25 mutually orthogonal unit vectors , it can accommodate  @xmath26 almost mutually orthogonal unit vectors ( i.e. vectors such that the dot product of any two has absolute value less than  @xmath27 , say ) .",
    "this might lead one to believe that such encodings exist .",
    "if such quantum random access encodings were possible , it would be possible to , for instance , encode the contents of an entire telephone directory in a few quantum bits such that the recipient of these qubits could , via a suitably chosen measurement , look up any _ single _ telephone number of his choice .",
    "the main question that we consider in this paper is : for what values of  @xmath0 ,  @xmath1 and  @xmath13 do  @xmath7 encodings exist ?",
    "for classical encodings , where we encode  @xmath0 classical bits into  @xmath1 classical bits , we know the answer .",
    "let , for  @xmath28 $ ] ,  @xmath29 denote the _ binary entropy function_. we show :    [ thm - classical ] for any  @xmath23 , there exist  @xmath7 classical encodings with  @xmath30 , and any  @xmath7 classical encoding has @xmath31 .",
    "we then show that quantum encodings are more powerful than classical encodings . on the one hand , we show that no classical encoding can encode two bits into one bit with decoding success probability greater than  @xmath32 , and on the other hand , we exhibit a  @xmath33 quantum encoding . in fact , as ike chuang  @xcite has shown , it is possible to encode  @xmath34 bits into  @xmath18 qubit with success probability  @xmath35 by taking advantage of the fact that the amplitudes in quantum states can be complex numbers .",
    "the  @xmath36-into-@xmath18 quantum encoding and the  @xmath34-into  @xmath18 encoding easily generalize to a  @xmath37 and a  @xmath38 encoding , respectively .",
    "however , the question as to whether quantum encodings can _ asymptotically _ beat the classical lower bound of theorem  [ thm - classical ] is left open .",
    "our main result about quantum encodings is that they can not be much smaller than the encoded strings .",
    "[ thm : lb : quantum ] if a  @xmath7 quantum encoding exists with  @xmath39 a constant , then  @xmath40 .",
    "thus , even though quantum random access encodings can beat classical encodings , they can not be much more succint .",
    "we finish the paper with a novel application of our bound to showing a lower bound on the size of 1-way quantum finite automata ( qfas ) .",
    "( see section  [ sec - defn - qfa ] for a precise definition of 1-way qfas . ) in  @xcite it was shown that not every language recognized by a ( classical ) deterministic finite automaton  ( dfa ) can be recognized by a 1-way qfa . on the other hand ,",
    "there are languages that can be recognized by 1-way qfas with size exponentially smaller than that of corresponding classical automata  @xcite .",
    "it remained open whether , for any language that can be recognized by a 1-way finite automaton both classically and quantum - mechanically , we can efficiently simulate the classical automaton by a 1-way qfa .",
    "our result answers this question in the negative , and demonstrates that while in some cases one is able to exploit quantum phenomena to construct highly space - efficient 1-way qfas , in others , as it will become apparent , the requirement of the unitarity  ( or , in other words , reversibility ) of evolution seriously limits their efficiency .",
    "[ thm - qfa ] let  @xmath41 be a family of languages defined by  @xmath42 .",
    "then ,    1 .   [ enu : det ] @xmath43 is recognized by a 1-way deterministic automaton of size  @xmath44 , 2 .",
    "[ enu : qu - upper ] @xmath43 is recognized by some 1-way quantum finite automaton , and , 3 .",
    "[ enu : qu - lower ] any 1-way quantum automaton recognizing   @xmath43 with some constant probability greater than  @xmath45 has  @xmath46 states .",
    "we first prove a lower bound on the number of bits required for a _ classical _ random access encoding , and then show that there are classical encodings that nearly achieve this bound .",
    "together , these yield theorem  [ thm - classical ] of the previous section .",
    "the proof of the lower bound involves the concepts of the _ shannon entropy _",
    "@xmath47 of a random variable  @xmath48 , the shannon entropy  @xmath49 of a random variable  @xmath48 _ conditioned on _ another random variable  @xmath50 , and the _ mutual information _",
    "@xmath51 of a pair of random variables  @xmath52 . for definitions and basic facts involving these concepts ,",
    "we refer the reader to a standard text ( such as  @xcite ) on information theory .",
    "let @xmath53 .",
    "for any classical  @xmath7 encoding ,  @xmath54 .",
    "suppose there is such a ( possibly probabilistic ) encoding  @xmath20 .",
    "let  @xmath55 be chosen unformly at random from  @xmath8 , and let  @xmath56 be the corresponding encoding .",
    "let  @xmath57 be the random variable with values in  @xmath8 obtained by generating the bits  @xmath58 from  @xmath50 using the  @xmath0 decoding functions .",
    "the mutual informaion of  @xmath48 and  @xmath50 is clearly bounded by the number of bits in  @xmath50 , i.e.  @xmath1 : @xmath59 we show below that it is , in fact , lower bounded by  @xmath60 , thus getting our lower bound .",
    "now , @xmath61 but , using standard properties of the entropy function , we have @xmath62 it is not difficult to see that  @xmath63 .",
    "it follows that  @xmath64 , and that  @xmath65 , as we intended to show .",
    "we now give an almost matching upper bound :    there is a classical  @xmath7 encoding with  @xmath66 for any  @xmath67 .",
    "the encoding is trivial for  @xmath68 .",
    "we describe the encoding for  @xmath69 below .",
    "we use a code  @xmath70 such that , for every  @xmath71 , there is a  @xmath72 within hamming distance  @xmath73 .",
    "it is known ( see , e.g. ,  @xcite ) that there is such a code  @xmath74 of size @xmath75 let  @xmath76 denote the codeword closest to  @xmath77 .",
    "one possibility is to encode a string  @xmath77 by  @xmath76 .",
    "this would give us an encoding of the right size .",
    "further , for every  @xmath77 , at least @xmath78 out of the  @xmath0 bits would be correct .",
    "this means that the probability ( over all bits  @xmath10 ) that  @xmath79 is at least  @xmath80 .",
    "however , for our encoding we need this probability to be at least  @xmath13 for _ every _ bit , not just on average over all bits .",
    "this can be achieved with the following modification .",
    "let  @xmath81 be an  @xmath0-bit string , and  @xmath82 be a permutation of  @xmath83 .",
    "for a string  @xmath71 , let  @xmath84 denote the string  @xmath85 .",
    "we consider encodings  @xmath86 defined by  @xmath87 .",
    "we show that if  @xmath82 and  @xmath81 are chosen uniformly at random , then for any  @xmath77 and any index  @xmath10 , the probability that the  @xmath10th bit in the encoding is different from  @xmath88 is at most  @xmath89 .",
    "first , note that if  @xmath10 is also chosen uniformly at random , then this probability is clearly bounded by  @xmath89 .",
    "so all we need to do is to show that this probability is independent of  @xmath10 .",
    "if  @xmath82 and  @xmath81 are uniformly random , then  @xmath90 is uniformly random as well .",
    "furthermore , for a fixed  @xmath91 , there is exactly one  @xmath81 corresponding to any permutation  @xmath82 that gives  @xmath91 .",
    "hence , if we condition on  @xmath92 , all  @xmath82 ( and , hence , all  @xmath93 ) are equally likely .",
    "this means that the probability that  @xmath94 ( or , equivalently , that  @xmath95 ) for random  @xmath82 and  @xmath81 is just the probability of  @xmath96 for random  @xmath97 and  @xmath98 .",
    "this is clearly independent of  @xmath10 ( and  @xmath77 ) .",
    "finally , we show that there is a small set of permuation - string pairs such that the desired property continues to hold if we choose  @xmath99 uniformly at random from _ this _ set , rather than the entire space of permutations and strings .",
    "we employ the probabilistic method to prove the existence of such a small set of permutation - string pairs .",
    "let  @xmath100 , and let the strings  @xmath101 and permutations  @xmath102 be chosen independently and uniformly at random .",
    "fix  @xmath71 and  @xmath103 $ ] .",
    "let  @xmath104 be  1 if  @xmath105 and  0 otherwise .",
    "then  @xmath106 is a sum of  @xmath107 independent bernoulli random variables , the mean of which is at most  @xmath108 .",
    "note that  @xmath109 is the probability of encoding the  @xmath10th bit of  @xmath77 erroneously when the permutation - string pair is chosen uniformly at random from the set  @xmath110 . by the chernoff bound ,",
    "the probability that the sum  @xmath111 is at least  @xmath112 ( i.e. , that the error probability  @xmath113 mentioned above is at least  @xmath114 ) is bounded by  @xmath115 .",
    "now , the union bound implies that the probability that the  @xmath10th bit of  @xmath77 is encoded erroneously with probability more than  @xmath114 for _ any _",
    "@xmath77 or  @xmath10 is at most  @xmath116 .",
    "thus , there is a combination of strings  @xmath117 and permutations  @xmath102 with the property we seek .",
    "we fix such a set of  @xmath107 strings and permutations .",
    "we can now define our random access code as follows . to encode  @xmath77 , we select  @xmath118 uniformly at random and compute  @xmath119 .",
    "this is the encoding of  @xmath77 . to decode the  @xmath10th bit , we just take  @xmath120 . for this scheme ,",
    "we need @xmath121 bits .",
    "this completes the proof of the theorem .",
    "in this section , we show , by exhibiting an encoding which has no classical counterpart , that quantum encodings give us some advantage over classical encodings .",
    "[ fig:2to1 ]    = 8 cm    there is a  @xmath33 quantum encoding .",
    "let  @xmath122 , @xmath123 , and  @xmath124 , @xmath125 .",
    "define  @xmath126 , the encoding of the string  @xmath127 to be  @xmath128 normalized ( see figure  1 ) .",
    "the decoding functions are defined as follows : for the first bit  @xmath129 , we measure the message qubit according to the  @xmath130 basis and associate  @xmath131 with  @xmath132 and  @xmath133 with  @xmath134 .",
    "similarly , for the second bit , we measure according to the  @xmath135 basis , and associate  @xmath136 with  @xmath137 and  @xmath138 with  @xmath139 .    it is easy to verify that for all four codewords , and for any  @xmath140 , the angle between the codeword and the right subspace is  @xmath141 . hence the success probability is @xmath142 .",
    "[ lem : no ] no  @xmath143 classical encoding exists for any @xmath39 .",
    "suppose there is a classical  @xmath143 encoding for some  @xmath144 . let  @xmath145 be the corresponding probabilistic encoding function and  @xmath146 the probabilistic decoding functions . if we let  @xmath120 be the random variable  @xmath147 , then for any  @xmath148 , and any @xmath149 , @xmath150$}}{r , r ' } ( y_i = x_i ) \\ge p$ ] .",
    "we first give a geometric characterization of the decoding functions .",
    "each  @xmath151 clearly depends only on the encoding , which is either  @xmath17 or  @xmath18 .",
    "define the point  @xmath152 ( for  @xmath153 ) in the unit square  @xmath154 ^ 2 $ ] as  @xmath155 , where  @xmath156$}}{r ' } ( ~v_i(j , r')=1~)$ ] .",
    "the point  @xmath157 characterizes the decoding functions when the encoding is  @xmath17 , and  @xmath158 characterizes the decoding functions when the encoding is  @xmath18 .",
    "for example ,  @xmath159 means that given the encoding  @xmath18 , the decoding functions return  @xmath160 and  @xmath161 with certainty , and  @xmath162 means that given the encoding  @xmath17 , the decoding functions return  @xmath163 and , with probability  @xmath164 , that  @xmath161 .",
    "[ fig : convex ]    = 2.4 in    any string  @xmath165 is encoded as a  @xmath17 with some probability  @xmath166 and as a  @xmath18 with some probability  @xmath167 .",
    "if we let  @xmath168 , where  @xmath169 is the probability that  @xmath170 , then  @xmath171 .",
    "thus ,  @xmath172 lies on the line connecting the two points  @xmath157 and  @xmath158 . on the other hand , for the encoding to be a valid  @xmath36-into-@xmath18 encoding , the point  @xmath172 should lie _ strictly _ inside the quarter of the unit square  @xmath154 ^ 2 $ ] closest to  @xmath173 .",
    "now , the line connecting  @xmath157 and  @xmath158 intersects the interiors of only three of the four quarters of the unit square  @xmath154 ^ 2 $ ] .",
    "for instance , if  @xmath157 and  @xmath158 are as above , then the line connecting them does not pass through the lower right quarter ( see figure  2 ) .",
    "thus , for the string  @xmath127 which is favored by that quarter ( e.g. the string  @xmath174 in the example above ) , either  @xmath175 or  @xmath176 errs with probability at least a half  which is a contradiction .",
    "we now prove  [ thm : lb : quantum ] .",
    "we first show that the success probability of the decoding process can be amplified at the cost of a small increase in the length of the random access code .",
    "[ lem : amplify ] if for a constant  @xmath177 there is an  @xmath7 encoding , then there is also an  @xmath178 encoding for any  @xmath179 .",
    "suppose there is an encoding  @xmath180 with decoding algorithms  @xmath16 ( @xmath181 ) with success probability  @xmath23 .",
    "we define a new encoding  @xmath182 as  @xmath183 .",
    "i.e. , it is the tensor product of  @xmath184 independent identical copies of the original code . the new decoding functions  @xmath185 consists of applying  @xmath16 to each of the  @xmath184 independent copies of the code , and answering according to the majority .",
    "the chernoff bound shows that the error probability decays exponentially fast in the number of trials , and is therefore at most  @xmath186 when  @xmath184 is chosen to be  @xmath187 .    by choosing  @xmath188 for some polynomial  @xmath189 , we achieve an encoding with error  @xmath186 at the cost of using an  @xmath190 factor more qubits for the encoding . now the result of any measurement can not perturb the state vector too much ( i.e.  by more than  @xmath191 ) .",
    "it might seem that this is sufficient to give us the lower bound , since we need to make only  @xmath0 measurements to recover all  @xmath0 encoded bits , and the error per measurement is only  @xmath192 .",
    "however , the situation is more subtle , since the error on subsequent measurements must take into account both the encoding error , as well as the error introduced by previous measurements .",
    "in fact , a straightforward analysis suggests that the error doubles with each measurement , thus making such a proof infeasible .",
    "instead , we prove that the errors grow linearly ( rather than exponentially ) , by first invoking the principle of safe storage ( see  @xcite ) to defer all measurements to the end of a sequence of unitary operations , and then bounding the errors in the computation via a hybrid technique from  @xcite ( which is made more explicit in  @xcite ) .    if a  @xmath193 quantum encoding with  @xmath194 exists , then  @xmath195 .",
    "we first deal with _",
    "quantum encoding , in which the encoding function  @xmath196 maps inputs to _ pure _ states .",
    "any such encoding has , for every  @xmath197 $ ] , a decoding function which takes a codeword  @xmath198 and an ancilla  @xmath199 , applies a unitary transformation  @xmath151 , and makes a measurement .",
    "thus , it resolves  @xmath9 into two subspaces  @xmath200 and  @xmath201 corresponding to the answers  @xmath17 and  @xmath18 ( for the @xmath10th bit ) , respectively . given  @xmath202 ,",
    "we can thus decompose it as  @xmath203 , where  @xmath204 and  @xmath205 .",
    "we now apply the principle of safe storage . instead of applying  @xmath151 and measuring , we use unitary transformations  @xmath206 ( @xmath181 ) that work over the codeword  @xmath198 , the ancilla  @xmath199 and  @xmath0 output bits  @xmath207 , such that  @xmath208 and  @xmath209 , where  @xmath210 is the vector  @xmath211 having a  @xmath18 entry only in the  @xmath10th place .",
    "the transformations  @xmath206 introduce some garbage at each step , and their composition  @xmath212 is quite messy . to analyse their behaviour , we first fix an input  @xmath77 , and imagine ideal unitary transformations  @xmath213 that have the property that for the codeword  @xmath214 of  @xmath77 ,  @xmath215 . since for any  @xmath216 and any  @xmath197 $ ]",
    ", the transformation  @xmath206 correctly yield the  @xmath10th bit of  @xmath77 with high probability , the reader can verify that @xmath217 we now claim that the result of applying the transformations  @xmath206 does not differ much from that of applying the ideal transformations  @xmath218 .",
    "@xmath219 .",
    "we use a hybrid argument : @xmath220    but , since the transformations  @xmath206 are unitary , we have : @xmath221 where  @xmath222 . by the definition of the transformations",
    "@xmath218 ,  @xmath223 with  @xmath224 .",
    "hence , by equation  ( [ eq : onestep ] ) , @xmath225 , and the claimed result follows .",
    "now we can extract all the bits of  @xmath77 by computing  @xmath226 and measuring the  @xmath0 answer bits  @xmath227 .",
    "the following claim says that we succeed with high probability .",
    "@xmath228 $ } } a \\ne x ) \\le 4 m \\sqrt{\\epsilon}$ ] .",
    "let  @xmath229 .",
    "from the claim above , we know that  @xmath230 .",
    "when we measure the answer bits of  @xmath231 , we get  @xmath77 with probability  1 .",
    "moreover , from the following fact , the probability of observing  @xmath77 on measuring  @xmath232 can not differ from this by very much .",
    "suppose  @xmath233 .",
    "let  @xmath234 be a measurement with possible results  @xmath235 , and  @xmath236 the classical distributions over  @xmath235 that result from applying  @xmath234 to  @xmath237",
    ". then @xmath238 .",
    "hence , the probability that  @xmath239 is at most @xmath240 .",
    "therefore , we get  @xmath77 with probability at least  @xmath241 .",
    "it then follows from holevo s theorem  @xcite that  @xmath195 .",
    "now we deal with _ probabilistic _",
    "quantum encoding , where we can encode a string  @xmath216 as a probabilistic mixture of pure states .",
    "it is well known that we can always _",
    "purify _ the system , i.e. , we can adjoin ancilla bits to the encoding , such that the result is a pure state .",
    "now , as before , we may apply the decoding transformations  @xmath206 and retrieve all the encoded bits : for every  @xmath77 , there are ideal transformations  @xmath213 that behave almost as  @xmath206 ( in the same sense as above ) and the same argument again gives us the lower bound on  @xmath1 .",
    "combining the two lemmas above , we get  [ thm : lb : quantum ] .",
    "we remark that we may extend this lower bound to general  @xmath23 , by appropriately generalizing lemma  [ lem : amplify ] above .",
    "we note that  [ thm : lb : quantum ] holds even in a slightly more general scenario , when the decoding functions are allowed to depend on the string encoded .",
    "@xmath242 _ serially encodes _  @xmath0 classical bits into  @xmath1 qubits with  @xmath13 success , if for any  @xmath243 $ ] and  @xmath244 } = b_{i+1}\\cdots b_n \\in\\{0,1\\}^{n - i } $ ] , there is a measurement  @xmath245}}$ ] that returns  @xmath17 or  @xmath18 and has the property that @xmath246 $ } } ~{\\cal o}_{i , b_{[i+1,n ] } } { \\left|f(b , r)\\right\\rangle }   ~=~b_i ~ ) \\ge p.\\ ] ]    i.e. , we allow the decoding functions to depend on the suffix  @xmath247 of the string  @xmath248 for recovering the value of the  @xmath10th bit  @xmath12 .",
    "the lower bound for quantum random access codes of the previous section also holds for serial encodings .",
    "[ thm - serial ] any quantum serial encoding of  @xmath0 bits into  @xmath1 qubits with constant success probability  @xmath177 has  @xmath40 .    on careful examination",
    ", we see that for the proof of theorem  [ thm : lb : quantum ] to work in this case as well , all we need to check is that for all  @xmath243 $ ] , @xmath249 where  @xmath250 . although the transformations  @xmath206 may now depend on the bits already decoded , the above bound is easily verified , since  @xmath251 contains the required suffix of the encoded word  @xmath77",
    "in this section , we give the details of the proof of theorem  [ thm - qfa ] .",
    "the first two parts of [ thm - qfa ] are easy .",
    "figure  3 shows a dfa with  @xmath252 states for the language  @xmath43 . also ,",
    "since each  @xmath43 is a finite language , there is a 1-way _ reversible _ finite automaton ( as defined in section  [ sec - defn - qfa ] ) , and hence a 1-way qfa that accepts it .",
    "what then remains to be shown is the lower bound on the size of a 1-way qfa accepting the language .",
    "[ fig - dfa ]    = 6.4 in    intuitively , since a 1-way qfa is allowed to read input symbols only once , a qfa for  @xmath43 necessarily `` records '' the last symbol read in its state , and since it is required to be reversible , it is forced to `` remember '' _ all _ the symbols read until it is clear whether the input is in the language or not .",
    "thus , we expect the state of the automaton after  @xmath1 input symbols to be an _ encoding _ of the  @xmath1 symbols .",
    "it is not difficult to see that in the case of a 1-way reversible automaton that accepts the language  @xmath43 , the encoding is such that all the  @xmath1 input symbols can be recovered with certainty .",
    "thus , such an automaton has at least  @xmath2 states .",
    "however , for reasons stated below , it is not clear in the case of a _ general _ 1-way qfa that the state encodes the input symbols in a `` faithful '' manner .",
    "* firstly , a 1-way qfa is allowed to make _ partial decisions _",
    "( i.e. , it is allowed to accept or reject an input with some probability before reading all its symbols ) .",
    "we show in section  [ sec - ext ] that partial decisions can be `` deferred '' for  @xmath81 steps at a cost of only an  @xmath253 factor increase in the size of the automaton .",
    "we call the resulting automaton an  @xmath81-_restricted _ qfa .",
    "since no input of length more than  @xmath254 belongs to  @xmath43 , this means that partial decisions are not very useful in building `` small '' automata for the language , and that we can limit our study to that of  @xmath1-restricted qfas . *",
    "secondly , and more seriously , the encoding defined by the automaton is such that each input symbol is accessible via a measurement only when all the symbols following it are known , and by trying to learn the later symbols we might destroy the encoding . + this problem is exactly the one  [ thm - serial ] solves .",
    "we can thus conclude that the number of qubits required to represent a state of the automaton is  @xmath255 , which gives us the lower bound stated in theorem  [ thm - qfa ] .    before presenting the formal proof for the lower bound",
    ", we define 1-way qfas precisely in the next section .",
    "we then show how a restricted qfa for the language  @xmath43 yields a serial encoding of  @xmath1 classical bits into a state of the automaton .",
    "theorem  [ thm - serial ] then immediately gives a size lower bound of  @xmath46 for restricted qfas .",
    "we then extend this lower bound to general qfas in section  [ sec - ext ] .",
    "a 1-way quantum finite automaton  ( qfa ) is a theoretical model for a quantum computer with finite memory .",
    "it has a finite set of basis states  @xmath256 , which consists of three parts : accepting states , rejecting states and non - halting states .",
    "the sets of accepting , rejecting and non - halting basis states are denoted by  @xmath257 and @xmath258 , respectively .",
    "one of the states ,  @xmath259 , is distinguished as the starting state .",
    "inputs to a qfa are words over a finite alphabet  @xmath260 .",
    "we shall also use the symbols  ` @xmath261 ' and  ` @xmath262 ' that do not belong to  @xmath260 to denote the left and the right end marker , respectively .",
    "the set  @xmath263 denotes the working alphabet of the qfa . for each symbol",
    "@xmath264 , a 1-way qfa has a corresponding unitary transformation  @xmath265 on the space  @xmath266 .",
    "a 1-way qfa is thus defined by describing  @xmath267 , and  @xmath268 for all  @xmath264 .",
    "we will often refer to 1-way qfas as simply qfas , since we do not consider any other type of qfas in this paper .    at any time , the state of a qfa is a superposition of basis states in  @xmath256 .",
    "the computation starts in the superposition  @xmath269 .",
    "then transformations corresponding to the left end marker  ` @xmath261 , ' the letters of the input word  @xmath77 and the right end marker  ` @xmath262 ' are applied in succession to the state of the automaton , unless a transformation results in acceptance or rejection of the input .",
    "a transformation corresponding to a symbol  @xmath264 consists of two steps :    1 .",
    "first , @xmath268 is applied to  @xmath232 , the current state of the automaton , to obtain the new state  @xmath231 .",
    "then , @xmath231 is measured with respect to the observable  @xmath270 , where @xmath271 , @xmath272 , @xmath273 .",
    "the probability of observing  @xmath274 is equal to the squared norm of the projection of  @xmath231 onto  @xmath274 . on measurement ,",
    "the state of the automaton `` collapses '' to the projection onto the space observed , i.e. , becomes equal to the projection , suitably normalized to a unit superposition .",
    "+ if we observe  @xmath275 ( or  @xmath276 ) , the input is accepted ( or rejected ) .",
    "otherwise , the computation continues , and the next transformation , if any , is applied .",
    "we regard these two steps together as reading the symbol  @xmath277 .",
    "a qfa  @xmath278 is said to _ accept _ ( or _ recognize _ )",
    "a language  @xmath279 with probability  @xmath67 if it accepts every word in  @xmath279 with probability at least  @xmath13 , and rejects every word not in  @xmath279 with probability at least  @xmath13 .    a _ reversible finite automaton _",
    "( rfa ) is a qfa such that , for any @xmath264 and @xmath280 , @xmath281 for some @xmath282 . in other words ,",
    "the operator  @xmath268 is a permutation over the basis states ; it maps each basis state to a basis state , not to a superposition over several states .",
    "the _ size _ of a finite automaton is defined as the number of ( basis ) states in it .",
    "the `` space used by the automaton '' refers to the number of ( qu)bits required to represent an arbitrary automaton state .",
    "define an _",
    "@xmath81-restricted _ 1-way qfa for a language  @xmath279 as a 1-way qfa that recognizes the language with probability  @xmath67 , and which halts with non - zero probability before seeing the right end marker only _",
    "after _ it has read  @xmath81 letters of the input .",
    "we first show a lower bound on the size of @xmath1-restricted 1-way qfas that accept  @xmath43 .",
    "let  @xmath278 be any @xmath1-restricted 1-way qfa accepting  @xmath43 with constant probability  @xmath177 .",
    "the following claim formalizes the intuition that the state of  @xmath278 after  @xmath1 symbols of the input have been read is an encoding of the input string .",
    "there is a serial encoding of  @xmath1 bits into  @xmath266 , and hence into  @xmath283 _ qubits _ , where  @xmath256 is the set of basis states of the qfa  @xmath278 .",
    "let  @xmath256 be the set of basis states of the qfa  @xmath278 , and let  @xmath284 and  @xmath285 be the set of accepting and rejecting states respectively .",
    "also , let  @xmath268 be the unitary operator of  @xmath278 corresponding to the symbol  @xmath286 .",
    "let  @xmath287 and  @xmath288 be defined as in section  [ sec - defn - qfa ] .",
    "we define an encoding  @xmath289 of  @xmath1-bit strings into unit superpositions over the basis states of the qfa  @xmath278 by letting  @xmath290 be the state of the automaton  @xmath278 after the input string  @xmath291 has been read .",
    "we assert that  @xmath20 is a serial encoding .    to show that  @xmath20 is indeed such an encoding , we exhibit a suitable measurement for the  @xmath10th bit of the input for every  @xmath243 $ ] .",
    "let , for  @xmath292 , @xmath293 , where  @xmath294 stands for the identity operator if  @xmath97 is the empty word , and for  @xmath295 otherwise .",
    "the  @xmath10th measurement then consists of first applying the unitary transformation  @xmath296 to  @xmath290 , and then measuring the resulting superposition with respect to  @xmath297 .",
    "( note that the measurement for the  @xmath10th bit assumes the knowledge of all the successive bits  @xmath298 of the input . ) since for words with length at most  @xmath1 , containment in  @xmath43 is decided by the last letter , and because such words are accepted or rejected by the  @xmath1-restricted qfa  @xmath278 with probability at least  @xmath13 _ only after the entire input has been read _ , the probability of observing  @xmath275 if  @xmath299 , or  @xmath276 if  @xmath300 , is at least  @xmath13 .",
    "thus ,  @xmath20 defines a serial encoding , as claimed .",
    "theorem  [ thm - serial ] now immediately implies that  @xmath301 and thus  @xmath302 , where  @xmath256 is as in the claim above .",
    "it only remains to show that the lower bound on the size of restricted qfas obtained above implies a lower bound on the size of general qfas accepting  @xmath43 .",
    "we do this by showing that we can convert _ any _ 1-way qfa to an  @xmath81-restricted 1-way qfa which is only  @xmath253 times as large as the original qfa .",
    "it follows that the  @xmath46 lower bound on number of states of  @xmath1-restricted 1-way qfas recognizing  @xmath43 continues to hold for general 1-way qfas for  @xmath43 , exactly as stated in theorem  [ thm - qfa ] .",
    "the idea behind the construction of a restricted qfa , given a general qfa , is to carry the halting parts of the superposition of the original automaton as `` distinguished '' non - halting parts of the state of the new automaton till at least  @xmath81 more symbols of the input have been read since the halting part was generated or until the right end marker is encountered , and then mapping them to accepting or rejecting subspaces appropriately .",
    "let  @xmath278 be a 1-way qfa with  @xmath74 states recognizing a language  @xmath279 with probability  @xmath13 .",
    "then there is an  @xmath81-restricted 1-way qfa  @xmath303 with  @xmath304 states that recognizes  @xmath279 with probability  @xmath13 .",
    "let  @xmath278 be a 1-way qfa with  @xmath256 as the set of basis states ,  @xmath284 as the set of accepting states ,  @xmath285 as the set of rejecting states , and  @xmath259 as the starting state .",
    "let  @xmath303 be the automaton with basis state set @xmath305 let  @xmath306 be its set of accepting states , let  @xmath307 be the set of rejecting states , and let  @xmath259 be the starting state . if , for a state  @xmath308 , there is a transition @xmath309 in  @xmath278 on symbol  @xmath277 , then in  @xmath303 , we have the following transitions . on the  ` $ ' symbol",
    ", we have the same transition , and on  @xmath310 , we have @xmath311 the transitions from the states not originally in  @xmath278 are given by the following rules .",
    "on the  ` $ ' symbol , @xmath312 and on a symbol  @xmath313 , @xmath314 the rest of the transitions may be defined arbitrarily , subject to the condition of unitarity .",
    "it is not difficult to verify that  @xmath303 is an  @xmath81-restricted 1-way qfa ( of size  @xmath304 ) accepting the same language as  @xmath278 , and with the same probability .",
    "we observe that the size  @xmath44 versus size  @xmath315 separation between dfas and 1-way qfas is the worst possible if we restrict ourselves to languages that can be accepted by 1-way qfas with probability of correctness that is high enough ( at least 7/9 ) .",
    "such languages include all _ finite _ regular languages , since these can be accepted by 1-way rfas .",
    "this follows from the result of ambainis and freivalds  @xcite that any language accepted by a qfa with high enough probability can be accepted by a 1-way rfa which is at most exponentially bigger than the minimal dfa accepting the language .",
    "however , it is not clear that this is also the largest separation in the case of languages that are accepted by 1-way qfas with smaller probability of correctness .",
    "another open problem involves the blow up in size while simulating a 1-way probabilistic finite automata  ( pfa ) by a 1-way qfa .",
    "the only known way for doing this is by simulating the pfa by a 1-way dfa and then simulating the dfa by a qfa .",
    "both simulating a pfa by a dfa  @xcite and simulating a dfa by a qfa ( this paper ) can involve exponential or nearly exponential increase in size .",
    "this means that the straightforward simulation of a probabilistic automaton by a qfa ( described above ) could result in a doubly - exponential increase in the size .",
    "however , we do not know of any examples where both transforming a pfa into a dfa and transforming a dfa into a qfa cause big increases of size .",
    "better simulations of probabilistic automata by qfas may well be possible .    in general",
    ", it is not known how to simulate a probabilistic coin - flip by a purely quantum - mechanical algorithm if space is limited .",
    "for example , the only known simulation of @xmath316-space probabilistic turing machines by @xmath316-space quantum turing machines can create quantum turing machines running in expected time of @xmath317@xcite . finding better simulations or proving that they do not exist is another interesting direction to explore .",
    "we would like to thank ike chuang for showing us the  @xmath34-into-@xmath18 quantum encoding .",
    "we also would like to thank dorit aharonov , ike chuang , michael nielsen , steven rudich and avi wigderson for many interesting discussions ."
  ],
  "abstract_text": [
    "<S> we consider the possibility of encoding  @xmath0 classical bits into much fewer  @xmath1 quantum bits so that an arbitrary bit from the original  @xmath0 bits can be recovered with a good probability , and we show that non - trivial quantum encodings exist that have no classical counterparts . on the other hand , we show that quantum encodings can not be much more succint as compared to classical encodings , and we provide a lower bound on such quantum encodings . finally , </S>",
    "<S> using this lower bound , we prove an exponential lower bound on the size of 1-way quantum finite automata for a family of languages accepted by linear sized deterministic finite automata . </S>"
  ]
}
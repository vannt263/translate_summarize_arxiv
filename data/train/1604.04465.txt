{
  "article_text": [
    "the internet has become a critical and indispensable infrastructure for many organizations . at the same time",
    ", the internet constitutes a security threat .",
    "for example , web - based services , such as email , are indispensable for communicating with others either within or outside of an organization , but introduce the risk of data exfiltration .",
    "intrusion detection systems  ( ids ) as well as intrusion prevention systems  ( ips ) are frequently used today to defend networks  ( or specific servers ) from cyber attacks  @xcite . in particular",
    ", such systems can prevent exfiltration of confidential insider information by blocking accidental or intentional leakage , e.g. , by searching for document confidentiality watermarks in the data transferred out of an enterprise network .",
    "such systems are also vital to control inbound traffic , and e.g. , to detect if packets from a compromised sender contain an attack , employ parental filtering to prevent children from accessing adult material , etc .",
    "@xcite indeed , many cyber attacks today are carried out remotely , exploiting vulnerabilities in network components or applications , or tempting naive users to download malware and install them on their pcs .    to provide such functionality ,",
    "these systems rely on traffic inspection : they allow the definition of configuration rules which define known attack patterns , indicators for attacks , or traffic anomalies , and which are matched against the packet header _ and payload_. if rules are matched , alerts are generated , and/or , in case of prevention systems or firewalls , packets are dropped .",
    "the corresponding rules can either be distributed by a local support team , by a third party  ( for instance a security research firm ) , by the network operator , or a combination thereof : third party provided rules can be complemented with organization - specific asset leakage indicators , coming from data leakage prevention  ( dlp ) systems .    while today s",
    "intrusion detection and prevention systems typically perform well for unencrypted traffic , they struggle with encrypted traffic , resulting in false negatives or poor performance . as a workaround , in practice today , the secure and encrypted channel from or to the internet is often terminated at a _ proxy _ , which essentially mounts some kind of `` man - in - the - middle - attack '' . while this solution ensures an effective detection and prevention , it comes at the price that the privacy of user traffic  ( e.g. , emails ) is undermined .",
    "in fact , even in the case where communication was already unencrypted anyway , performing deep packet inspection  ( not for the purpose of forwarding ) can be seen as privacy violation .",
    "indeed , users and clients have criticized this approach and expressed worry , e.g. , that the private logged data is given to marketers  @xcite .",
    "privacy - preserving intrusion detection may not only be desirable and relevant in the context of enterprise networks , but is also gaining in importance in the light of today s trend to outsource the network management , including security aspects , to third parties  @xcite .",
    "for example , the management of third - party networks can be a lucrative business for internet service providers  ( isps ) . at the same time , for customers running security critical businesses  ( for example banks ) , it is important that the privacy of traffic be preserved .",
    "we in this paper however observe another confidentiality issue of today s solutions : it concerns the confidentiality of the inspection logic itself .",
    "for example , the development and maintenance of effective intrusion detection rules is challenging , and especially small enterprises do not have the expertise and time to define the most effective rules and constantly follow the news .",
    "this constitutes a business opportunity for third parties : a company specialized into security research can take over the responsibility to define and maintain a good rule set .",
    "however , such a business model also introduces new requirements .",
    "in particular , a third party company may not be willing to share its rules , or more generally _ configurations _ of ( online or offline ) anomaly detection systems , with the customer : these rules and configurations are an intellectual property which constitute an essential asset of the business model .    at first sight",
    ", it may appear that the requirements are contradicting : first , it seems unavoidable that an intrusion detection or prevention system , which for efficiency and effectiveness reasons needs to inspect the traffic in an unencrypted form , may leak information about the user traffic .",
    "second , it also seems unavoidable that a system administrator operating a system based on the rules of a third party company , can see the rules .",
    "we identify the different autonomous roles involved in a traffic inspection system , including intrusion detection / prevention systems , but also more sophisticated online or offline anomaly detection systems as they may for example be required to deal with insider threats .",
    "we then explore the feasibility of providing a system which meets these requirements , respecting the autonomy of the different involved stakeholders , without introducing new threats coming , e.g. , from insiders .",
    "in particular , we present a privacy - preserving intrusion detection / prevention system , short pri(_fruit _ in hebrew ) , which decouples the different roles , and hence significantly reduces the required trust assumptions .",
    "prileverages the hardware protection of architectures like intel sgx  @xcite to defend against insiders or system administrators aiming to break the confidentiality . a distinguishing feature of priis the simple and cheap deployment : a single trusted hardware component is sufficient .",
    "on the user side , only a simple software update is required .",
    "the remainder of this paper is organized as follows . in section",
    "[ sec : model ] , we present a model which identifies the different roles / stakeholders and the resulting requirements for the traffic inspection system . after providing the necessary background  ( section  [ sec : back ] ) , based on these requirements , section  [ sec : ppi ] describes our proposed architecture priwhich meets these requirements .",
    "we discuss use cases in section  [ sec : use - cases ] and review related work in section  [ sec : discussion ] , and we conclude our contribution in section  [ sec : conclusion ] .",
    "in the following , we first present the different roles and discuss their objectives . based on this model",
    ", we then derive security goals . note that for ease of presentation , in the following , we will mostly focus on intrusion _",
    "detection_. however , our approach can easily be generalized to _ prevention _ or _ configuration - based _",
    "systems , as we will elaborate more later in this paper .",
    "we in this paper distinguish between the following roles :    * * the administrators : * the administrators are responsible for ensuring the availability and security of the network .",
    "in particular , they want to prevent the leakage of sensitive insider information , and also prevent malicious traffic entering the network from the outside . besides relying on up - to - date security rules possibly provided by an external company , administrators may also want to be able to add their own data leak prevention  ( dlp ) rules , specific to their organization . * * the users : * the term user will generally refer to the communication endpoints .",
    "in particular , we will usually assume that one endpoint is inside an enterprise  ( an _ insider _ ) while the other is outside  ( an _ outsider _ ) ; however , also traffic between two insiders can be subject to inspection .",
    "we assume that while users profit from a secure environment and the detection of undesired inbound and outbound traffic , they also desire a high communication performance as well as confidentiality of their traffic . * * the rules ( configuration ) provider : * the rules for the intrusion detection system ( or more generally the configurations for a traffic inspection system based on some open - source logic / engine ) may be provided by an external security company specialized into developing and maintaining high - quality rules .",
    "the rules provider may desire that its rules remain confidential .",
    "given our roles and their objectives , we identify the following requirements :    1 .",
    "* efficient and effective inspection : * the inspection system must ensure to the administrators that relevant events and attacks will be detected successfully and fast .",
    "* privacy - preserving traffic inspection : * we want to ensure to the users that neither the network administrator nor the rule / configuration provider should be able to see the traffic .",
    "* confidentiality of rules : * we want to ensure that the rules are kept confidential and are not leaked to the other roles .",
    "this paper is motivated by the question whether it is possible to design an architecture which meets the different goals of the different roles , maintaining their autonomy .",
    "indeed , designing such a system seems challenging :    * today s proxy solutions do not meet the requirements r2 and r3 : a proxy server can be exploited by the administrators to learn about the unencrypted traffic .",
    "rather , we want to develop a solution which does not allow the administrators to configure the inspection system in a way that allows them to learn details about the traffic which are not security relevant",
    ". * networks usually operate at very high rates : cryptographic schemes based on fully homomorphic or functional encryption  @xcite are slow and can decrease network rates by many orders of magnitude  @xcite , violating requirement r1 .    at a first glance ,",
    "the requirements seem to contradict : a system may hardly be able to efficiently and effectively inspect traffic without introducing opportunities to the administrator to see the traffic and used rules . however , as we will see in the following , there do exist solutions to satisfy these seemingly conflicting properties .",
    "before presenting our solution , we provide some background which is necessary to undertand our solution . in particular , we revisit ids systems and give an introduction to sgx .",
    "almost all cyber security breaches involve transmissions of traffic over a network .",
    "the standard approach to secure transmissions is to inspect traffic , checking whether the traffic carries the attack ( e.g. , a malware ) or its outcome  ( e.g. , a stolen digital asset ) . for this purpose ,",
    "organizations deploy packet inspection systems in their networks , configuring them with known attack indicators , in the case of intrusion detection / prevention systems  ( ids / ips ) , and with  ( possibly organization - specific ) asset leakage indicators in the case of data leakage prevention  ( dlp ) systems .",
    "all inspection systems essentially search for the configured indicators inside the traffic , where indicators can be based on exact match strings , regular expressions , statistical properties , and more .",
    "inspection of traffic in these systems usually includes the inspection of the _ packet payload _ ,",
    "i.e. , accessing the application layer data .    a simpler type of inspection that considers only the packet headers  ( up to the transport layer ) is often performed by firewalls .",
    "a firewall is a network security system that monitors and controls the incoming and outgoing network traffic and may also include ids / ips capabilities .",
    "firewalls can be considered as a barrier between a trusted , secure internal network and another outside network , such as the internet , thereby mitigating attacks in the early stage of penetration .",
    "firewalls can also be host based , operating on and defending a single machine .",
    "inspection systems are also used to detect insider threats  @xcite , for example by analyzing confidential documents in private communications , possibly enhanced with watermarking techniques  @xcite .",
    "web security today is usually realized with https , which relies on the transport layer security  ( tls ) a.k.a .",
    "secure sockets layer  ( ssl ) protocol .",
    "tls / ssl provides confidentiality , integrity and authentication of data in transit .",
    "the protocol offers encryption , hash functions or message digests , and digital signatures .",
    "encrypted traffic constitutes a great challenge to packet inspection systems as it hides the payload content from anyone but the session endpoints .",
    "there are two common solutions to this challenge .",
    "the first is to extend host based firewalls to gain access to the data _ before being encrypted _ :",
    "this can be implemented through integration with the host operating system .",
    "we will refer to this solution as the _ client - side firewall approach_. the second solution , usually deployed by large firms , is to operate a middlebox that serves as a _ proxy _ between any internal user pc and any external web server .",
    "the implementation of such a solution requires to configure  ( trick ) the user pcs to identify the proxy as the server and establish an encrypted session with it rather than with the server .",
    "however , both the distributed firewall as well as the proxy architecture expose the user data to @xmath0rd parties , namely the firewall producer , the proxy vendor or the network operator , possibly violating the user privacy .",
    "in addition , the inspection rules , which are the intellectual property of security researchers or firms , might be extracted at the host or the proxy , undermining their effectiveness and profit .",
    "intel  _ software guard extensions ( intel  sgx ) _",
    "@xcite are new cpu instructions which allow applications to manage private regions of code and data .",
    "that is , using sgx , an application can run in a protected environment , the so - called _ enclave _ , secure from malware or the inspection by the computer administrators .",
    "there is no need to encrypt the protected portion of an application for distribution . before the enclave is built",
    ", the enclave code and data is free for inspection and analysis .",
    "when the protected portion is loaded into an enclave , its code and data is measured .",
    "an application can prove its identity to a remote party ( a procedure called attestation ) and be securely provisioned with keys and credentials .",
    "the application can also request an enclave and platform specific key that it can use to protect keys and data that it wishes to store outside the enclave .",
    "in addition to the security properties , the enclave environment offers scalability and performance associated with the execution on the main cpu of a platform .",
    "this section shows that the design goals and requirements derived above can actually be met , assuming the availability of a trusted hardware .",
    "in particular , this section presents our privacy preserving inspection architecture , short pri .",
    "pri allows the inspection , and if considered harmful , possibly prevention , of encrypted traffic while guaranteeing that no information about the traffic is leaked from the inspecting device , and that inspection rules are not revealed to the operator of the device nor the traffic generator .    in a nutshell , the idea underlying priis to decouple and separate the different roles  ( e.g. , users , administrators , security company ) by defining an interface between them and supporting verification . in order to achieve this deoupling , prirelies on a single device ( such as intel sgx or arm tee ) which decrypts traffic from the users , applies the desired security rules , and when needed raises alerts or drops the traffic , without leaking information about the user traffic nor the applied rules , to the roles which are not allowed to have this information .",
    "interestingly , a single trusted box is sufficient for pri : no hardware modifications are required on the user side . moreover , an important aspect of priis that the user side agent and the enclaved system can be _ open - source _ : thus",
    ", the users and the research community can and should verify its privacy preserving property .",
    "the attestation allows the agent to verify that it communicating with the verified system code .",
    "let us first discuss the setup of pri  ( cf figure  [ fig : fig1 ] ) .",
    "we describe it for the enterprise intrusion detection scenario , but it is easy to adapt it to isp outsourcing scenarios .",
    "the prisystem consists of the user s communication device , e.g. , a personal computer  ( pc )  ( or smartphone , laptop , etc . ) and the priserver which need to be set up as follows . on the user side",
    ", we simply need to install a priagent at the encryption layer of the os or specific application  ( e.g. , web browser ) .",
    "the priagent is configured with a user key , @xmath1 , which is securely transmitted  ( through attestation ) to the enclaved prisystem .",
    "in addition the agent is installed in a way that allow it to gain the key , @xmath2 , of every encrypted session @xmath3 , that uses the encryption layer enabling it to securely send it to the prisystem .",
    "the setup also involves configuring the priserver with the rules  ( also called the policy ) that need to be checked against the traffic .",
    "rules can be configured by multiple policy issuers , each of them can connect securely to the priprocess , validating its secure execution  ( attestation ) and sending the rules . as a result , the priprocess stores the rules in the secured storage , to be used when a user traffic needs to be inspected .      once the system has been set up , the registered users traffic can be inspected .",
    "inspection is carried in the following steps , see also figure  [ fig : fig2 ] .",
    "an encrypted session is established between the applications of the user pc and an external  ( unregistered ) or internal pc .",
    "the user pc connects to the priprocess  ( at the priserver ) , and sends to it the session key encripted by the shared user key , i.e. , @xmath4_{k_u}$ ] .",
    "the session traffic is duplicated and processed by the priprocess .",
    "the session traffic is decrypted , using the session key .",
    "5 .   the session data  ( clear text )",
    "is inspected with the rules configured in the system .",
    "6 .   in case part of the data matches a rule , this part is securely stored in the pristorage and an alert  ( containing the rule identifier ) is reported the corporate security information management  ( sim ) server .",
    "note that in case of misconfiguration , or malicious activity in the user pc that results in decryption failure at the prisystem , a special alert is reported",
    ".        there exists another more subtle threat for the confidentiality of the traffic : even if the traffic can not be inspected , the reported matches over traffic leak information . in order to prevent an attacker from abusing the security rules to learn about private user data  ( e.g. , matching every possible byte or word )",
    ", the prisystem allows each user to request the parts of his or her traffic which have been matched by the inspecting device , and thus to learn about and detect the use of abnormal matching rules . to ensure this , our system uses a special viewer application which connects to the priprocess , authenticates as the user and issues the request . as a result",
    ", the priprocess retrieves the user s matches from the secured storage and sends them to the viewer app  ( cf  figure  [ fig : fig3 ] . ) .",
    "in addition , the prisystem can securely inspect static  ( e.g. , likelihood of match for common words ) and dynamic  ( e.g. , average number of hits per traffic byte ) properties of the rules , thereby detecting abnormal rule sets . also note that inferring traffic content from matches is practically difficult in the prevention operation mode of the prisystem , since the user session is automatically dropped as a response to the first match .",
    "the prisystem not only supports intrusion detection but also intrusion prevention , see figure  [ fig : fig4 ] : the main difference from detection , is that for prevention , the outcome of the inspection determines whether the session traffic is forwarded through the prisystem , or dropped  ( in case of a match ) .",
    "we started experimenting with an emulated software version of the sgx framework .",
    "however , as the market introduction of the actual secure hardware is delayed , our prototype is simple and still contains untrusted parts . nevertheless ,",
    "in the following , we report on some preliminary insights .    on the user side ,",
    "we need to extract encrypted session keys and securely transfer them to the priserver .",
    "this can be performed in multiple ways .",
    "for example , at the application level , applications can report their session keys  ( as browsers support  @xcite ) and a priagent then sends them to the priserver .",
    "alternatively , applications can be extended  ( e.g. , using a browser plugin ) to directly send their key to the priserver .",
    "a third approach is to modify encryption services offered by the operating system , to send the used keys to the priserver .",
    "cc|c|c|c|c & & & + & & * enterprise security and insiders * & * outsourced security * & * anti - terror intelligence * + & & employees & enterprise & civilians / web hosts & + & & admins & external & isps & + & & admins + external & external & governments & +    on the server side , an inspection program needs to be executed in an enclaved environment , using the reported user session keys .",
    "we argue that adjusting existing ids systems to our needs requires minor code modifications : the computations can be performed in user mode and the memory consumption can be optimized , which should make it easy to enclave them .",
    "today there exist several good open - source idss such as snort  @xcite , bro  @xcite and suricata  @xcite , which we suggest to employ .    given a selected existing open - source ids system , we propose the following high level design concepts for the priserver application : ( 1 ) the decryption of traffic can be handled by a new enclaved module that pushes the plain text outcome to the enclaved and modified ids system .",
    "( 2 ) the enclaved ids system is reduced to only handle protocols that are known to be encrypted  ( e.g. , html ) , or to inspect rules that need to be hidden , thereby reducing the memory footprint which is limited in the enclaved environment .",
    "( 3 ) in parallel to the enclaved ids , a standard  ( not enclaved ) ids is operated for non - encrypted traffic and with open - source rules , utilizing the standard less restricted environment .    in our prototype , we attend to the problem of human based data leakage , and focus on the decryption of common webmail services .",
    "we noticed that this traffic is mainly composed of ( encrypted ) http/2  @xcite traffic which uses hpack compression .",
    "this protocol is not supported by the idss we examined , and therefore requires special adapters .    in general , the code of both the client and server side of the prisystem should be fully open , allowing the research community to examine them and verify their privacy preservation properties . combining the verification of the code with the attestation of the server by the client",
    "constitutes the basis of the system trust .",
    "we believe that the ideas underlying prican be interesting in several contexts and beyond the standard enterprise network security scenario we discussed in this paper so far . in the following",
    ", three examples are discussed in more detail .",
    "a comparison is given in table  [ tab : tab2 ] .",
    "email and cloud services ( e.g. , google docs , storage , etc . ) are indispensable but introduce a risk for many organizations today .",
    "in particular , such services can be used by a malicious insider to steal intellectual property or sensitive company information .",
    "indeed , insider attacks pose some unique challenges for security administrators .",
    "in general , it can be challenging to configure an intrusion detection system and define a good rule set to detect internal attacks : different users should have access to and use many different services , servers , and systems for their work .",
    "however , over the last years , several interesting ids - based solutions have been developed to detect insider threats  @xcite , e.g. , searching for confidential documents and watermarks in private communications  @xcite .",
    "our approach is directly applicable to these systems .    even in scenarios where ids - based systems may be insufficient ,",
    "prican be attractive : priis also applicable in more general security solutions , for example systems which are based on machine learning or anomaly detection of online or offline traffic data , and which can consist of an open - source engine and a possibly confidential configuration . more concretely",
    ", advanced methods to detect insider attacks usually consider a wider context when processing network events , therefore requiring to store and query the entire event history @xcite , and include machine learning algorithms @xcite ( e.g. , anomaly detection ) .",
    "our design can be extended to support these methods , by utilizing the secure storage to save the events history and to execute the advanced inspection as an enclaved process that analyzes the history instead of the current traffic . in these cases",
    ", our extended system also allows to split the open source inspection engine from the inspection rules , e.g. , the big data queries or the machine learning parameters and filters , while supporting very general notions of privacy  @xcite .",
    "another use case arises in the context of network outsourcing : we currently witness the trend that enterprises wish to outsource their cyber security logic or even the entire network administration to an external company experienced in this field . translating this scenario to our framework",
    ", the enterprise ( or any of its employees and their pcs ) constitutes the client , executing the priagent , and the external company operates the priserver , executing the enclaved ( and open - source ) prisoftware .",
    "an interesting use case also arises in the context of governments gathering intelligence from their own citizens in order to fight terror .",
    "this use case is highly controversial today and subject to major ongoing debates  @xcite , due to the tradeoff of preserving civil liberties ( i.e. , the right for privacy ) and the government duty to save lives . with the prisystem",
    ", governments and citizens can decide and control the level of inspection and privacy infringement applied to the private data .",
    "the anti - terror intelligence use case may require some adaptations to the model .",
    "for example , the prisystem can be operated by the isps that ( as part of the prisoftware ) can correlate the traffic with client information .",
    "the rules are securely provided by the government , but some aggregated information on them can be made accessible to the public , or its representatives .",
    "the exact matches of user traffic , can not be provided immediately to the user as this might prevent the authorities to effectively react to threats , therefore the prisystem may make use of a notification delay which is defined a priori .",
    "in an age where more and more resources and services are outsourced , there is an increasing need for solutions preserving critical security aspects . over the last years",
    ", this problem has been discussed particularly intensively in the context of cloud computing : although users of cloud computing infrastructure may expect their data to remain confidential , today s clouds are built using a classical hierarchical security model that aims only to protect the privileged code  ( of the cloud provider ) from untrusted code  ( the user s virtual machine ) , and does nothing to protect user data from access by privileged code  @xcite . while for many large - scale computations today , the use of cloud computing resources is unavoidable or at least financially very attractive , users may not be willing to trust their cloud provider to keep their data confidential .",
    "in fact , the cloud user must trust not only the hardware on which her or his data is actually analyzed , but in addition also ( i ) the provider s software , including privileged software such as a hypervisor and firmware but also the provider s full stack of management software ;  ( ii ) the provider s staff , including system administrators but also those with physical access to hardware such as cleaners and security guards ;  ( iii ) the law enforcement bodies in any jurisdiction where their data may be replicated , as the snowden leaks have revealed  @xcite .",
    "cc|c|c|c|c|l & & + & & * proxy * & * client - side firewall * & * blindbox  @xcite * & * pri * + & & middlebox & no & no & no  ( enclaved ) & + & & middlebox & endpoint & middlebox & no  ( enclaved ) & + & & yes & no & no & yes & + & & any & any & exact match only & any & + & & en-&decryption & none & tokenization & encryption & decryption & + & & none & none & a stream of tokens & one packet & +    recently , researchers have started investigating whether similar approaches as proposed for cloud computing may also be applicable in the context of computer networks , which come with rather different requirements .",
    "existing systems are based on proxies and are vulnerable to a man - in - the - middle attack on ssl , installing fake certificates at the middlebox  @xcite .",
    "the middlebox can break the security of ssl and decrypt the traffic so it can perform the deep - packet inspection  ( dpi ) .",
    "the removal of the ssl end - to - end security , results in a host of issues .",
    "some proposals allow users to tunnel their traffic to a third party middlebox provider  @xcite .",
    "but these approaches allow the middlebox owner to inspect / read all traffic .",
    "an alternative today are distributed firewalls , a client - side approach to implement intrusion detection / prevention .",
    "a very interesting approach is taken by blindbox  @xcite : unlike pri , blindbox performs the deep - packet inspection directly on the _ encrypted traffic_. in a nutshell , in blindbox , the endpoint generates a tokenized version of the traffic which can be inspected in privacy preserving manner at a special server .",
    "this tokenized traffic is sent in parallel to the origin , increasing the load in the network .",
    "however , blindbox requires the user to compute hashes of traffic segments and to send them to the inspection box , thereby introducing computational overhead to the user pc , as well as traffic overhead to the network .",
    "moreover it is dependent on the cooperation of the user pc to perform its part of the scheme .",
    "in addition , blindbox only supports exact match rules and not regular expressions , that are commonly used in security policies .",
    "we believe that our approach nicely complements these works , and focuses on a relevant use case , namely traffic inspection .",
    "an sgx approach as recently suggested in the context of cloud computing , could be used to implement our secure server , and the decoupling of the various roles identified in our paper .",
    "table  [ tab : tab ] summarizes the advantages and disadvantages of the different architectures : the man - in - the - middle proxy and the client - side distributed firewalls used today , as well as blindbox and pri . among these solutions ,",
    "only blindbox and priare providing the required privacy guarantees .",
    "the main limitation of blindbox is arguably its expressive power , while the main limitation of priis its dependency on a sgx hardware  ( although a single box is sufficient ) .",
    "this paper studied the classic problem of traffic inspection from an interesting new , privacy preserving perspective .",
    "in particular , while today it is commonly believed that it is inevitable that users have to blindly trust the administrator managing the intrusion detection or prevention system , we in this paper , have questioned this assumption . in particular , we have shown that it actually is possible to reduce trust assumptions in the enterprise network , and presented an intrusion detection system which is not only privacy preserving regarding the user traffic but also regarding the rules used in the ids / ips .",
    "interestingly , the proposed prisystem requires a single secured server ; no modifications of the hardware at the users is required .      1 .",
    "it decrypts and inspects network traffic in a privacy preserving manner .",
    "it accepts new security rules from administrators and applies them to the traffic in a secure and privacy - preserving manner : the inspecting device does not leak any unnecessary information about the user traffic .",
    "it can be configured with new rules from rule providers in a secure and privacy - preserving manner : the inspecting device does not leak any unnecessary information about the user traffic .",
    "we believe that the ideas underlying prican be used in several contexts and beyond the use cases discussed in this paper .",
    "in particular , it is not limited to rule - based intrusion detection systems , but can also be useful in the context of more sophisticated and offline systems , as they may for example be required to handle advanced insider threats  @xcite .",
    "our approach raises several interesting questions for future research .",
    "obviously , the performance of our architecture needs to be evaluated in detail .",
    "moreover , it will be interesting to explore further the applications of trusted execution environments in the context of computer networking and network function virtualization .",
    "h.  abelson , r.  anderson , s.  m. bellovin , j.  benaloh , m.  blaze , w.  w. diffie , j.  gilmore , m.  green , s.  landau , p.  g. neumann , r.  l. rivest , j.  i. schiller , b.  schneier , m.  a. specter , and d.  j. weitzner .",
    "keys under doormats . , 58(10):2426 , sept . 2015 .",
    "o.  brdiczka , j.  liu , b.  price , j.  shen , a.  patil , r.  chow , e.  bart , and n.  ducheneaut . proactive insider threat detection through graph learning and psychological context . in _ security and privacy workshops ( spw ) , 2012 ieee symposium on",
    "_ , pages 142149 , may 2012 .",
    "s.  garg , c.  gentry , s.  halevi , m.  raykova , a.  sahai , and b.  waters .",
    "candidate indistinguishability obfuscation and functional encryption for all circuits . in _ proc .",
    "ieee 54th annual symposium on foundations of computer science ( focs ) _ , pages 4049 , 2013 .",
    "s.  goldwasser , y.  kalai , r.  a. popa , v.  vaikuntanathan , and n.  zeldovich .",
    "reusable garbled circuits and succinct functional encryption . in _ proc .",
    "45th annual acm symposium on theory of computing ( stoc ) _ , pages 555564 , 2013 .",
    "f.  d. mcsherry .",
    "privacy integrated queries : an extensible platform for privacy - preserving data analysis . in _ proc .",
    "acm sigmod international conference on management of data ( sigmod ) _ , pages 1930 , 2009 .",
    "j.  sherry , s.  hasan , c.  scott , a.  krishnamurthy , s.  ratnasamy , and v.  sekar . making middleboxes",
    "someone else s problem : network processing as a cloud service . in _ proc .",
    "acm sigcomm _ , pages 1324 , 2012 .",
    "g.  silowash , t.  lewellen , j.  burns , and d.  costa . detecting and preventing data exfiltration through encrypted web sessions via traffic inspection .",
    "technical report cmu / sei-2013-tn-012 , software engineering institute , carnegie mellon university , pittsburgh , pa , 2013 ."
  ],
  "abstract_text": [
    "<S> traffic inspection is a fundamental building block of many security solutions today . </S>",
    "<S> for example , to prevent the leakage or exfiltration of confidential insider information , as well as to block malicious traffic from entering the network , most enterprises today operate intrusion detection and prevention systems that inspect traffic . </S>",
    "<S> however , the state - of - the - art inspection systems do not reflect well the interests of the different involved autonomous roles . </S>",
    "<S> for example , employees in an enterprise , or a company outsourcing its network management to a specialized third party , may require that their traffic remains confidential , even from the system administrator . </S>",
    "<S> moreover , the rules used by the intrusion detection system , or more generally the configuration of an online or offline anomaly detection engine , may be provided by a third party , e.g. , a security research firm , and can hence constitute a critical business asset which should be kept confidential . </S>",
    "<S> today , it is often believed that accounting for these additional requirements is impossible , as they contradict efficiency and effectiveness . </S>",
    "<S> we in this paper explore a novel approach , called privacy preserving inspection  ( pri ) , which provides a solution to this problem , by preserving privacy of traffic inspection and confidentiality of inspection rules and configurations , and e.g. , also supports the flexible installation of additional data leak prevention  ( dlp ) rules specific to the company . </S>"
  ]
}
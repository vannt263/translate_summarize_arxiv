{
  "article_text": [
    "performance of today s general purpose processor architectures is driven by three main components : clock speed , number of computational cores and number of operations per clock cycle . since",
    "further increasing the clock speed remains very difficult or even impossible , the performance improvement over previous generations has to come from the latter two factors .",
    "in particular , hardware vendors tend to develop different ways of increasing single core performance i.e. vector processing , fused multiply and add operations and support for simultaneous processing of multiple threads . on the other hand ,",
    "the largest hpc systems nowadays are equipped with millions of cores , requiring the use of mixed process and thread based parallelism . as a result , applications that will run on future hpc systems will need to demonstrate very high thread based scalability within the compute nodes .",
    "this task is non - trivial for many complex applications performing different computational algorithms . in this paper , we describe our methodology for performance analysis and autotuning of openmp applications on multi - core and multi - threaded nodes of ibm power775 ( ih ) system .",
    "the system itself is described in section [ platform ]    our work is motivated by measurements that we have performed on ibm power 775 system with scientific applications and synthetic benchmarks which are presented in section [ motivation ] .",
    "firstly , we are very keen to know why performance of chosen algorithms can benefit from using multithreading while others do not .",
    "we believe that this problem might be addressed by detailed analysis of hardware performance counters . for instance we are analyzing hardware performance counters for the chosen algorithms from the bots benchmark .",
    "we are looking for a correlation between the ability to efficiently use the multithreading mechanism and the performance profile of the given application .",
    "such a result would lead us to better understanding of computational nature of different algorithms , but it could also be used to propose an automatic heuristic algorithm ( e.g. based on decision trees ) to decide the number of threads used by specific code fragments during execution .    secondly , many modern hpc applications use both mpi and thread parallel model ( e.g. mixed mpi + openmp ) .",
    "parallel processes executed on different computational nodes include many thread parallel regions which are executed on available computational cores",
    ". very often the number of threads in thread based parallelization is controlled by a single switch ( e.g. the omp_num_threads environment variable ) . since different algorithms and code fragments may present different scalability , it would be appropriate to choose number of threads for execution to each parallel region individually .",
    "moreover such a decision could be made automatically only with a minor information from the user .    in section [ tools ]",
    "we describe existing tools together with design and implementation of our new tool .",
    "we show the differences and describe the usage scenario .",
    "reasearch and implementation presented in this paper was carried out on the ibm power 775 ( ih ) supercomputing server - a highly scalable system with extreme parallel processing performance and dense , modular packaging .",
    "it is based on ibm power7 architecture and was designed by ibm within the us darpa s hpcs ( high productivity computing systems ) program .",
    "this unique supercomputing environment is currently available in few organisations worldwide , e.g. : icm , university of warsaw ( poland ) , met office ( uk ) , ecmwf ( uk ) and slovak academy of sciences ( slovak republic ) .",
    "the _ boreasz _",
    "system available at icm , university of warsaw is a single cabinet system with 2560 ibm power7 compute cores and peak performance of 78 tflop / s .",
    "the main purpose of the system is research carried out within the powiew project @xcite which among others includes scientific areas like large - scale cosmological simulations and numerical weather forecasting .",
    "_ boreasz _ is also part of the prace tier-1 infrastructure @xcite .",
    "our motivation for developing an autotuning tool for openmp application was based on a specific behavior of chosen applications and synthetic benchmarks on the ibm power 775 computational nodes .",
    "measurements of our investigation for chosen codes and benchmarks are presented in this section .",
    "all of the benchmarks we have executed on the system were designed to examine the impact of using the multithreading mechanism to increase codes performance .",
    "firstly , we describe the effort we have made to measure performance of applications and synthetic benchmarks with the use of different simultaneous multithreading ( smt ) modes . it should be stated that smt mechanism does not increase the maximum number of flops",
    ", however it might influence the performance of chosen algorithms and applications .",
    "this specific processor architecture feature is currently available in many petascale hpc systems available worldwide .",
    "both ibm power7 processors available in power775 ( ih ) and ibm power a2 processors available in blue gene / q are built upon 4-way simultaneous multithreaded cores .",
    "it should be also mentioned that multithreading is predicted to be one of the leading features of future exascale systems available by the end of next decade @xcite .    the first analysis of ibm power 775 smt mechanism was given in @xcite .",
    "it was shown that the performance gain from smt varies depending on the program execution and its execution model , the threading mode being used on the processor , and the resource utilization of the program .",
    "the gains from using smt modes with chosen algorithms where measured with the use of few well known benchmarks : spec cfp2006 , nas parallel benchmark class b ( openmp ) and nas parallel benchmark class c ( mpi ) .",
    "one of the conclusions of the study presented in [ 2 ] was that throughput type workloads are best suited to see gains from using higher smt modes .",
    "on the other hand high memory traffic codes will most likely not perform well when executed in smt2 or smt4 mode . through all of this paper",
    "we will extensively use the formulation that a specific application is using smt2/smt4 mode . by saying this",
    "we will refer to parallel codes which are executed with number of processes and/or threads that exceed the physical number of cores available in the system .",
    "this may be achieved by :    * executing an application with 2x or 4x more mpi processes , * executing an openmp / pthreads code with 2x or 4x more threads , * mixing those two mpi and multithread execution modes ( e.g. in the case of hybrid mpi / openmp codes ) .",
    "results presented in this section show that smt mechanism available in modern processor chips can be efficiently use to increase performance of chosen applications and algorithms .",
    "on the other hand , there is a class of algorithms and applications that does not benefit from mutithreading .",
    "in - depth investigation of the reasons of such divergence is needed and might be crucial for achieving good performance for complex computational codes .",
    "gadget2 package was developed for large scale cosmological simulations on massively parallel computers with distributed memory @xcite .",
    "it employs a variety of computational algorithms : hierarchical tree and particle mesh algorithms for gravitational computations and smoothed particle hydrodynamics ( sph ) for modeling hydrodynamic of barionic content of the universe .    the test case used in this study consisted of almost 28 million particles from which the half were gas particles .",
    "the pmgrid parameter was set to the size of 1024 .",
    "the following compiler options were used during the compilation phase on the power7 system : -q64 -qarch = pwr7 - qtune = pwr7 -o3 -qhot -qaltivec -qsimd = auto .",
    "results of the measurements are shown in figure [ gadget ] .",
    "wrf @xcite is a numerical weather prediction model used for both operational forecasting and atmospheric research in many leading meteorological institutes around the world .",
    "wrf code was prepared for execution on highly parallel computer architectures and is well known from its ability to scale using significant amount of processes and computing cores .    for the purpose of this analysis",
    "we have used wrf v.3.2 compiled in the 64-bit mode and mpi - only version ( dmpar ) .",
    "we have used january 2000 test case of wrf as a benchmark .",
    "the following compiler options were used during the compilation phase on the power7 system : -q64 o3 qarch = pwr7 qtune = pwr7 = qaltivec lmass lmassv .",
    "results of the measurements are shown in figure [ wrf ] .",
    "we have selected two popular molecular dynamics codes for our benchmark : gromacs @xcite and cpmd @xcite .",
    "gromacs is a package for performing molecular dynamics simulations with hundreds to millions of particles .",
    "it is implemented in c and fortran and uses mpi library for parallelization .",
    "the test case used in this work was a vesicles in water system consisting of more than 1 million atoms .",
    "gromacs v.4.0.7 was compiled and optimized on power7 system with the use of following compiler options : -q64 qarch = pwr7 qtune = pwr7 o3 qhot qalitvec qsimd = auto .",
    "results of the measurements are shown in figure [ gromacscpmd ] .",
    "the cpmd code is an implementation of density functional theory ( dft ) , particularly designed for ab - initio molecular dynamics .",
    "it runs on many different computer architectures including parallel systems .",
    "cpmd is parallelized with mpi and openmp .",
    "end users can choose between different versions of parallelization ( distributed memory , shared memory and mixed modes ) during the compilation phase .",
    "the test case used for performance measurements was a water system with 32 oxygen atoms and the mesh size of 128x128x128 .",
    "cpmd v.3.13.2 was compiled and optimized on power7 system in the mpi - only version with the use of following compiler options : -q64 qarch = pwr7 qtune = pwr7 o3 qhot qaltivec qsimd = auto .",
    "results of the measurements are shown in figure [ gromacscpmd ] .",
    "we have executed smt performance tests with gpaw simulation package @xcite .",
    "gpaw is a density - functional theory ( dft ) code based on the projector - augmented wave method .",
    "it was written in python and c and requires numpy and atomic simulation environment ( ase ) packages .",
    "the parallel version of the code was prepared with the use of mpi library .",
    "for the purpose of performance analysis on power7 system we have run few iterations of a ground state calculations for 256 water molecules .",
    "gpaw v.0.7.6383 was installed on the power7 system together with its all dependencies .",
    "the following options were used for c language parts of the package : -q64",
    "o3 qhot qaltivec qarch = pwr7 qtune = pwr7 .",
    "results of the measurements are shown in figure [ gpaw ] .          as it was expected the performance gain from smt",
    "varies when measured with different applications .",
    "gadget2 is an example of application which benefits from using smt mechanisms .",
    "the best walltime results are always achieved for smt4 mode regardless of number of cores in use . on the other hand in the case of wrf and gpaw codes",
    "the expected performance gain from using smt is rather small ( 10% in the case of wrf ) .",
    "the usage of smt mechanism in the case of wrf seems to be limited to smt2 .",
    "for gpaw the situation is even worst since using higher smt modes decrease the overall performance .",
    "performance results obtained for gromacs and cpmd show that those codes achieve rather good results from using smt2 mode , but not from smt4 .",
    "all test described above are also very important recommendations for users of the system since they can check which type of smt mode could be beneficial for their computations .",
    "performance analysis of applications based only on walltime of the simulation run is sometimes not sufficient . to understand and identify performance bottlenecks an in - depth analysis of basic components of the applications ( i.e. algorithms in use )",
    "is required .",
    "therefore we have decided to analyze the performance of a representative set of algorithms which prove their usefulness in many scientific disciplines .",
    "since the smt mechanism is especially interesting in the case of multithreaded applications based on openmp / pthreads model , we have decided to perform tests with bots benchmark @xcite .",
    "bots was developed as a basic set of applications that allows researchers and vendors to evaluate openmp implementations , and that can be easily ported to other programming models .",
    "an additional goal was for the openmp community to have a set of examples using the tasking model available recently in openmp programming model .",
    "+ our testing procedure consisted of following steps :    1 .   compile and execute bots benchmark on the power775 system ( _ boreasz _ ) .",
    "2 .   identify the best scalable versions ( tied / untied , for / single ) through preliminary scalability testing of bots applications on the single node of power775 system .",
    "test the performance of selected versions of bots applications against different smt modes .",
    "bots benchmark was compiled on _ boreasz _ system with the use of following compiler options : -q64 qalloca qsmp = omp o3 qarch = pwr7 qtune = pwr7 qaltivec -qthreaded .",
    "the following versions of chosen applications have been identified :    * strassen ( tied tasks , manual - 3 )  computes a matrix multiply with strassen s method , dense linear algebra algorithm * n queens ( tied tasks , manual -3 )  finds solutions of the n queens problem , search algorithm * sparselu ( tied tasks )  computes the lu factorization of a sparse matrix , sparse linear algebra algorithm * health ( tied tasks , manual - 2 )  simulates a country health system , simulation algorithm * floorplan ( tied tasks , manual - 5 )  computes the optimal placement of cells in a floorplan , optimization algorithm    each of the application was executed with the largest possible input data provided within bots with the use of 32 , 64 and 128 threads on the single node of power775 system ( _ boreasz _ ) .",
    ".performance of bots codes measured against different smt modes .",
    "[ cols=\"<,^,^,^,^ \" , ]     as can be seen in the above table [ bots_results ] performance of strassen , sparselu and health algorithms can benefit only from smt 2 mode .",
    "n queens search algorithm improve its performance also in the smt 4 mode . only for the floorplan algorithm we did not see any increase of performance when using higher smt modes .",
    "as it was pointed out before , we believe that precise explanation of these results can be only given through analysis of chosen performance metrics and performance counters .",
    "code optimisation , despite rapidly increasing processor s power , is still very important part of developing scientific software . a common solution to determine code s performance is to measure execution time of function calls or code s fragments that builds the core of the algorithm .",
    "this gives an important information where are the bottlenecks of the implemented algorithm and gives an idea of how much time is spent in selected parts of algorithm .",
    "this is why many profiling tools where created that simplifies this process .",
    "some of them , like gprof , measure function calls execution times and trace call graph . sometimes more detailed information",
    "is necessary .",
    "code instrumentation is a useful technique to measure code s performance .",
    "it allows to change the code automatically to perform simple and more complicated tasks in order to find algorithm s properties as described above execution times .",
    "hpctinst @xcite is a tool created by ibm for power systems that allows to instrument program s binary .",
    "it is a part of ibm s hpc toolkit which allows programmer to access hardware performance counters available in power computers .",
    "hardware performance counters give a detailed information about events , like l2 misses , missed branches and many more , that occurred during the execution of specified region together with time of execution .",
    "hpctinst requires the binary to be compiled with -g option that includes into the binary debugging information .",
    "it provides four types of instrumentation .",
    "one of them is an instrumentation for hardware performance counters , which is chosen by -dhpm flag .",
    "it supports also instrumentation of mpi calls , openmp parallel constructs and io operations , which are chosen by appropriate flags .    by default",
    "it instruments every entry and exit point of every function .",
    "each profiling mode allows to provide a file that contains information about regions to instrument .",
    "each line in a  file contains function name , filename and range of lines where the function calls should be instrumented .",
    "only the function name is required .",
    "after the instrumentation is complete a  new binary is created that is ready to run .    when the instrumented binary has finished it s execution a file",
    "is created that contains the selected profiling information . when environmental variable ` hpm_viz_output ` is set to ` yes ` another file with viz extension is created .",
    "the result file contains the profiling information in a human readable format , whereas viz file contains the same data in a xml format and can be opened with peekperf .",
    "if the code is instrumented for hardware performance counters then the result file contains number of selected events that occurred during the execution of the selected regions .",
    "instrumenting mpi calls results in gathering profiles for each process ( one result file for one process ) together with number of calls of each mpi function , time and average size of the message .",
    "instrumenting parallel openmp constructs yields statistics about times of execution and for each thread .",
    "binary instrumentation that is available with hpctinst is a  useful tool but it has it s limits .",
    "it allows only to instrument selected function calls and there are only four types of instrumentation .",
    "moreover it is only available for xlc compiled binaries .",
    "a  tool developed by us , called pdttagger , overcomes these shortages .",
    "pdttagger is an instrumentation tool that operates on a  source code .",
    "so far it supports only code written in c. the tool is based on program database toolkit ( pdt ) @xcite that provides access to a  high - level interface to source code . for a  given  source",
    "file it creates a  database file that contains information about the program structure .",
    "our tool basing on the database file and run - time options creates an  instrumented source file accordingly to given instructions . for selected regions it inserts library calls that indicates the beginning and the end of a  region .",
    "inserting library calls allows to change the behavior during linking the application .",
    "the tool comes with a  library that allows to measure the time and hardware performance counters of selected regions when working on power computers .",
    "hardware counters are measured through interface provided by libhpm that is a  part of ibm s hpc toolkit .    by default our tool searches for openmp parallel constructs .",
    "providing a  configuration file allows to select only selected regions of code for instrumentation . in that case",
    "it is a  programmers responsibility to ensure that the library calls are properly inserted into source code .",
    "compiling instrumented source is simple .",
    "it is sufficient to change the compiler in a  makefile for pdttagger compiler wrapper that links the application with prepared library .",
    "when the instrumented source is compiled and the execution finished a  result file is created that contains execution times of selected regions . if the application was linked with library that provides measuring hardware counters also the hpm file is created by libhpm library .",
    "as ` hpm_viz_output ` affects libhpm it is possible to get the results also in viz format .",
    "it also possible to create a  viz file for execution times by setting ` pdttagger_viz_output ` to ` true ` .",
    "the purpose for creating pdttagger is to create a  tool that allows to automatically instrument the source code so that it selects appropriate number of threads that execute selected openmp  parallel regions .",
    "this could be achieved by linking the instrumented application with appropriate library .",
    "so far pdttagger was successfully used to instrument barcelona openmp  task suite and a  performance counters were gathered for different types of applications . constructing a  decision tree for a  selected representative set of counters could lead to library basing on pmapi library , which allows to check performance counters at the run time , that will be able to suggest whether reducing or increasing number of threads will speedup the execution of a  given region .",
    "the most important advantages of the tool that has been described in this paper is that it provides an automatic code instrumentation of openmp parallel regions and it supports hybrid mpi and openmp applications .",
    "it was already tested for chosen applications from the bots benchmark .",
    "further investigation of scientific codes is in progress .",
    "however , in order to construct the most appropriate automatic decision making mechanism we need to gather many results for different algorithms and computational kernels . the tool will be soon available for users of the boreasz system .",
    "this work was financially supported by the prace project funded in part by the eus 7th framework programme ( fp7/2007- 2013 ) under grant agreement no .",
    "fp7 - 261557 .",
    "this research was carried out with the support of the `` hpc infrastructure for grand challenges of science and engineering '' project , co - financed by the european regional development fund under the innovative economy operational programme .",
    "we would like to thank maciej marchwiany ( icm , university of warsaw ) , maciej szpindler ( icm , university of warsaw ) , mateusz wolszczak , piotr iwaniuk and piotr wojciechowski ( mim , university of warsaw ) for helping us to obtain sufficiently good performance with chosen benchmarks .",
    "j. michalakes et al .",
    ", _ development of a next generation regional weather research and forecasting model_. development in teracomputing : proceedings of the 9th ecmwf workshop on the use of high performance computing in meteorology , 2011 eds .",
    "walter zwieflhofer and norbert kreitz , world scientific , singapore , pp .",
    "269 - 276 .",
    "a.duran , x.teruel , r.ferrer , x.martorell , e.ayguade , _ barcelona openmp tasks suite : a set of benchmarks targeting the exploitation of task parallelism in openmp _ proceeding icpp 09 proceedings of the 2009 international conference on parallel processing , p.124 - 131 , ieee computer society washington , dc , usa"
  ],
  "abstract_text": [
    "<S> in this paper we describe an autotuning tool for optimization of openmp applications on highly multicore and multithreaded architectures . </S>",
    "<S> our work was motivated by in - depth performance analysis of scientific applications and synthetic benchmarks on ibm power 775 architecture . </S>",
    "<S> the tool provides an automatic code instrumentation of openmp parallel regions . </S>",
    "<S> based on measurement of chosen hardware performance counters the tool decides on the number of parallel threads that should be used for execution of chosen code fragments .    , code instrumentation , parallel computing , openmp </S>"
  ]
}
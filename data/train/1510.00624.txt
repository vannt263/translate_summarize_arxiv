{
  "article_text": [
    "this paper presents reproducible experiment platform ( rep ,  @xcite ) , which is created to perform a reproducible data analysis in a comfortable way . as karl popper ,",
    "one of the greatest philosophers of science , said : `` non - reproducible single occurrences are of no significance to science '' .",
    "being a significant part of research , scientific analyses should be prepared in a reproducible way .",
    "however , there are several reasons why many of analyses prepared in recent years have difficulties in reevaluation : keeping data , code and results together ; independence on development platform ; availability of different algorithms ; distributed research ; repeatable data preprocessing .",
    "toolkit presented here , rep , addresses these problems ( will be discussed further ) and , moreover , makes it possible to collaborate by sharing analysis code and results over the internet .",
    "this platform provides methods for preparing and processing data , ways to use different machine learning techniques .",
    "yet , we are hoping to have readable and , which is important , checkable code using the platform .",
    "rep infrastructure .",
    "ipython notebook is an analysis environment , in which users work together . in the notebook",
    "we use different machine learning libraries ( left ) for data analysis , parallel systems to speedup optimal model search ( top ) , git to store all code , data and results ( right ) . ]",
    "what are the main points we expect from an analysis platform ?",
    "firstly , we need some interactive environment for fast experiments with data . secondly",
    ", resulting code should be simple and reproducible .",
    "thirdly , it is necessary to keep data , code and results together .",
    "rep covers all three features .",
    "interactive python , or ipython notebook , is used as an analysis environment ( see figure  [ rep ] ) in rep . for intellectual data analysis",
    "we use different machine learning libraries ( apart from tmva ) , which are popular among data scientists . for this purpose rep",
    "contains wrappers over algorithms from different machine learning libraries , which provide scikit - learn interface  @xcite . a typical analysis task , search for optimal predictive model , can be speeded up using parallel computational system . in figure",
    "[ rep ] they are presented as a grid / cluster system .",
    "one of the parallel execution systems is provided out - of - the - box by ipython ( ipython cluster ) .",
    "another significant part of experiments is git  @xcite , version control system , which stores all code , corresponding results , trained models and data .",
    "one of the most significant problems for reproducibility is keeping track of versions of all libraries used ( and their numerous dependencies ) .",
    "this can be archived by using virtual machine , where a scientist saves his analysis with all dependencies .",
    "however , a better option exists today : one can use like a light - weight virtual machine , docker container  @xcite .",
    "the images of virtual machines can be combined together inside a docker to provide possibilities given by different containers .",
    "it has several other advantages , among which incremental versioning of containers .",
    "this versioning implies that to change version of container user does nt need to reload complete image , only some ` update ' part is downloaded .",
    "that is why we provide a docker container with rep and all it dependencies .",
    "being a virtual machine , the rep container is expected to work after many years on any hardware and operating system .",
    "rep basic elements for constructing complicated analysis scheme . ]",
    "the main feature of rep is a simultaneous support of different machine learning libraries .",
    "wrappers over all libraries use scikit - learn interface because of its popularity in data science community and convenience for machine learning purposes .",
    "moreover , there are other advantages : support of scikit - learn interface makes it possible to use ensembling algorithms from this library . for example , rep provides tmva  @xcite wrapper in scikit - learn interface and ensembling algorithm over any tmva method can be constructed .",
    "one can construct scikit - learn adaboost over tmva rectangular cut method , or tmva multilayer perceptron , or any another tmva method .",
    "this way of combining different methods is very typical for scikit - learn .",
    "wrappers over machine learning libraries are basic elements to construct complicated analysis scheme using ensembling algorithms or another hierarchical type models .",
    "rep machine learning main elements are described in figure  [ rep_basic ] .",
    "fundamental elements are wrappers over libraries : tmva , scikit - learn , xgboost  @xcite , event filter , _ etc_. event filter is a web - service for machine learning provided by yandex , which is available only for cern members .",
    "event filter uses matrixnet algorithm  @xcite developed at yandex .",
    "rep constructs ensembling and hierarchical models using basic elements : scikit - learn adaboost ensemble algorithm , bagging , folding ( used in high energy physics data analyses ) ,  _ etc_. any wrapper can be base estimator for any of these hierarchical models .",
    "it is necessary to find the best model among of all these configurations . for this purpose rep",
    "provides a grid search , which takes any estimator and looks for the best estimator s hyper parameters by optimizing quality metric selected .",
    "the grid search can optimize parameters for all hierarchical levels of complicated estimator ( for instance , this allows tuning number of stages in adaboost and parameters of base classifier used by adaboost ) .",
    "one more task frequently arising is different models training and comparison of their performance .",
    "specially for these purposes rep contains a factory .",
    "to speed up training operations parallel system ( ipython cluster , threads ) is available during factory and grid search fitting .",
    "thus it is possible to construct machine learning schemes like those shown in figure  [ rep_comp ] .",
    "examples of data analysis notebooks look like figures  [ ex1 ] ,  [ ex2 ] ,  [ ex3 ] .",
    "examples of possible complicated data analysis schemes : factory training in the two threads , grid search training in the three threads , different models training in the multi users parallel system . ]",
    "one of the rep part is an ipython keeper , or ipykee , which provides comfortable interface to create project and add notebooks with code and saved results : plots , estimators , data , another objects .",
    "all of this is saved to the repository of git version control system .",
    "later anyone can load project and reproduce experiment or load its results at particular point in research . also , by using nbdiff library , ipykee gives possibility for visual comparing between two versions of one notebook with marked differences .",
    "an example of comparing models and plotting results with rep . ]     an example of comparing models and plotting results with rep . ]     an example of comparing models and plotting results with rep . ]",
    "to sum up , reproducible experiment platform , rep , provides the environment to conduct reproducible data analysis in a convenient way .",
    "it combines different machine learning libraries under uniform interface , meta - algorithms , different parallel systems and contains tools to save intermediate results and states of analysis .",
    "rep was used in several public projects , such as data popularity ( http://github.com/hushchyn-mikhail/datapopularity ) , uniforming ( uboost - like ) algorithms @xcite ( http://github.com/anaderi/lhcb_trigger_ml ) , lhcb topological trigger optimization .",
    "its use case is currently expanded to physics analyses of lhcb .",
    "9 https://github.com/yandex/rep f. pedregosa et al . ,",
    "scikit - learn : machine learning in python , 2011 , jmlr 12 , pp .",
    "2825 - 2830 s. chacon , b. straub , pro git , apress , 2014 https://www.docker.com a. hoecker et al .",
    ", tmva  toolkit for multivariate data analysis , 2007 , pos acat2007 http://arxiv.org/pdf/physics/0703039v5.pdf [ arxiv : physics/0703039 ] https://github.com/dmlc/xgboost a. gulin , i. kuralenok , and d. pavlov , winning the transfer learning track of yahoo s learning to rank challenge with yetirank , jmlr : workshop and conference proceedings 14 ( 2011 ) 63 ( yandex matrixnet ) a. rogozhnikov , a. bukva , v. gligorov , a. ustyuzhanin , m. williams , new approaches for boosting to uniformity , 2015 jinst 10 t03002 http://arxiv.org/pdf/1410.4140v1.pdf [ arxiv:1410.4140 ]"
  ],
  "abstract_text": [
    "<S> data analysis in fundamental sciences nowadays is an essential process that pushes frontiers of our knowledge and leads to new discoveries . at the same time we can see that complexity of those analyses increases fast due to a )  enormous volumes of datasets </S>",
    "<S> being analyzed , b )  variety of techniques and algorithms one have to check inside a single analysis , c )  distributed nature of research teams that requires special communication media for knowledge and information exchange between individual researchers . </S>",
    "<S> there is a lot of resemblance between techniques and problems arising in the areas of industrial information retrieval and particle physics . to address those problems we propose reproducible experiment platform ( rep ) , a software infrastructure to support collaborative ecosystem for computational science . </S>",
    "<S> it is a python based solution for research teams that allows running computational experiments on shared datasets , obtaining repeatable results , and consistent comparisons of the obtained results . </S>",
    "<S> we present some key features of rep based on case studies which include trigger optimization and physics analysis studies at the lhcb experiment . </S>"
  ]
}
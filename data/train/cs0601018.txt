{
  "article_text": [
    "the aim of this paper is to study in detail , and to try to clarify , the relationships between two well - known approaches to rewriting as logical deduction , namely , jos meseguer s rewriting logic @xcite , and the constructor - based rewriting logic ( crwl ) developed by mario rodrguez - artalejo s research group in madrid @xcite .",
    "the first of these was proposed as a logical framework wherein to represent other logics , and also as a semantic framework , a unified model of concurrency for the specification of languages and systems .",
    "the experience accumulated throughout the last years has come to support that original intention @xcite . in particular",
    ", it has been shown that rewriting logic is a very flexible framework in which many other logics , including first - order logic , intuitionistic logic , linear logic , horn logic with equality , as well as any other logic with a sequent calculus , can be represented @xcite .",
    "an important feature of these representations that should be stressed is that they are usually quite simple and natural ( in meseguer s vocabulary , `` the representation distance is zero '' ) , so that the mathematical properties of the source logics are often straightforward to derive in their rewriting logic representation .    on the other hand ,",
    "the goal of the constructor - based rewriting logic is to serve as a logical basis for declarative programming languages involving lazy evaluation , offering support , in addition , to non - strict and possibly non - deterministic functions .    despite these differences",
    ", there is a clear resemblance between both logics , namely , the fact that logical deduction is based on rewriting .",
    "it seems natural , then , to ask about the relationships between deduction in these logics and to extend the question so as to encompass whether the corresponding models are also related . a suitable framework in which to carry out",
    "this study is the theory of _ general logics _ developed in .",
    "there , logics are described in a very abstract manner and two separated components are distinguished : a syntactic part , which is captured by the notion of _ entailment system _ , and a semantic one , captured by goguen and burstall s concept of _ institution _ @xcite .",
    "we will begin by studying derivability and , for that , we will try to associate entailment systems to both logics and to relate them by means of a map of entailment systems .",
    "unfortunately , it will be proved that there is none corresponding to deduction in crwl , so we will be forced to leave this formal framework and undertake more informal simulations of the logics in each other .",
    "although such simulations are always possible by making use of suitable low - level encodings , relying on the analogies between both logics our interest resides in finding natural and simple simulations that at the very least would show that their expressive power is the same .",
    "in addition , these results will be used to study reflective properties of crwl .",
    "after the comparison at the syntactic level , the next step is the study of the corresponding models .",
    "now we will be able to associate an institution to each logic , so this study will take place within the formal framework of the theory of institutions .",
    "the main result we will obtain is that models in these logics bear no relation at all . along the way",
    ", we generalize the notions of derivability and satisfaction in meseguer s rewriting logic to conditional rewrite rules , and clarify some subtle points regarding the definition of models in this logic .    as implied by the previous presentation",
    ", this paper does not consider the _",
    "operational semantics _ of the logics , but focus instead of comparing them at a more abstract level by considering both its provability and satisfaction relations .",
    "we refer to works like , where such operational issues related to resolution or narrowing are pursued in similar contexts .",
    "meseguer s rewriting logic is parameterized with respect to an underlying equational logic ; although this can be typed and as general as the membership equational logic from , in this paper we concentrate on the version of rewriting logic which uses unsorted and unconditional equational logic and write rl for it .",
    "likewise , there are also typed versions of crwl @xcite .",
    "here we have chosen to focus on the untyped versions because this work is mainly foundational and the addition of types , while not introducing any new fundamental concepts , would force us to deal with many details that would obscure the presentation ( for example , quantifiers would have to be considered explicitly ) .",
    "the typed cases are considered in some detail in .    in what follows",
    "we assume familiarity with some basic ideas of category theory @xcite , that do not go beyond natural transformations and equalizers .",
    "only in section  [ sec : tmrl ] we use a less standard construction , that of subequalizer , that we describe in the text .",
    "in the first part of the paper we focus on the syntactic aspects of the logics , and try to abstractly study derivability in them at the level of entailment systems . after ruling out this possibility , we develop some simulations that will allow us to prove some reflective properties of the logics .",
    "we start by reviewing the main concepts and definitions that we will use .",
    "syntax is typically given by a _",
    "@xmath0 providing a grammar on which _ sentences _ , collected in a set @xmath1 , are built . for a given signature @xmath0 , _ entailment _ ( also called _ provability _ ) of a sentence @xmath2 from a set of axioms @xmath3 is a relation @xmath4 which holds if and only if we can prove @xmath5 from the axioms @xmath6 using the rules of the logic .",
    "we make this relation relative to a signature . in the rest of the paper ,",
    "let @xmath7 denote the collection of objects of a category @xmath8 .",
    "an _ entailment system _",
    "@xcite is a triple @xmath9 such that :    *  is a category whose objects are called _ signatures_. * @xmath10 is a functor associating to each signature @xmath0 a corresponding set of @xmath0-_sentences_. * @xmath11 is a function which associates to each @xmath12 a binary relation @xmath13 called @xmath0-_entailment _ such that the following properties are satisfied : [ pg : entailment ] 1 .",
    "_ reflexivity _ : for any @xmath2 , @xmath14 , 2 .",
    "_ monotonicity _ : if @xmath15 and @xmath16 then @xmath17 , 3 .",
    "_ transitivity _ : if @xmath18 , for all @xmath19 , and @xmath20 , then @xmath21 , 4 .",
    "@xmath11-_translation _ : if @xmath15 , then for any @xmath22 in , @xmath23 .    given an entailment system @xmath24 , its category  of _ theories _ has as objects pairs @xmath25 , with @xmath0 a signature and @xmath3 .",
    "a _ theory morphism _",
    "@xmath26 is a signature morphism @xmath27 such that if @xmath28 , then @xmath29 .",
    "a theory morphism is _ axiom - preserving _ if , in addition , it satisfies the condition @xmath30 .",
    "this defines a subcategory @xmath31 with the same objects as but with morphisms restricted to be axiom - preserving theory morphisms , that does not depend on the entailment relation .",
    "although we will not be able to use it , there is also a notion of _ map of entailment systems _ , allowing us to relate logics in a general and systematic way .",
    "basically , a map of entailment systems @xmath32 maps signatures of @xmath24 to signatures of @xmath33 ( or , more generally , theories to theories ) , and sentences of @xmath24 to sentences of @xmath33 , respecting the entailment relations @xmath11 of @xmath24 and @xmath34 of @xmath35 . see for details .",
    "a signature in rl is a pair @xmath36 with @xmath0 a ranked alphabet of function symbols and @xmath37 a set of @xmath0-equations . rewriting operates on equivalence classes of terms",
    "modulo the set of equations @xmath37 .",
    "we denote by @xmath38 the @xmath0-algebra of @xmath0-terms with variables in a set @xmath39 , and by @xmath40_e$ ] or just @xmath40 $ ] the @xmath37-equivalence class of @xmath41 . to indicate that @xmath42 is the set of variables occurring in @xmath43 we write @xmath44 . given @xmath44 , and terms @xmath45",
    ", @xmath46 denotes the term obtained from @xmath43 by _ simultaneously substituting _",
    "@xmath47 for @xmath48 , @xmath49 . to simplify notation",
    "we denote a sequence of objects @xmath50 by @xmath51 ; with this notation , @xmath46 can be abbreviated to @xmath52 .",
    "an rl - theory @xmath53 is a 4-tuple @xmath54 , where @xmath36 is a signature and @xmath6 is a set of rewrite rules , _ labeled _ with elements of @xmath55 , of the form @xmath56\\to [ t ' ] { \\textup{\\ \\textbf{if}\\ } } [ a_1 ] \\to [ b_1 ] \\land \\dots \\land                          [ a_m ]",
    "\\to [ b_m ] \\,\\textrm{.}\\ ] ] we write @xmath57 \\to [ t']$ ] if @xmath40\\to [ t']$ ] can be derived using the rules of deduction shown in figure  [ fig : calculi1 ] ; for a complete exposition of rl we refer the reader to .",
    "@xmath58 \\to [ t]}}\\ ; \\textbf{reflexivity}\\qquad { \\frac{\\displaystyle [ t]\\to [ t']\\quad [ t']\\to [ t'']}{\\displaystyle [ t]\\to [ t '' ] } } \\ ; \\textbf{transitivity } \\\\ \\noalign{\\bigskip }       { \\frac{\\displaystyle [ t_1]\\to [ t_1 ' ] \\ \\dots\\ [ t_n]\\to [ t_n']}{\\displaystyle [ f(t_1,\\dots , t_n)]\\to [ f(t_1',\\dots , t_n ' ) ] } } \\ ; \\textbf{congruence } \\\\ \\noalign{\\bigskip }       { \\frac{\\displaystyle { { { \\displaystyle r : [ t ] \\to [ t ' ] { \\textup{\\ \\textbf{if}\\ } } [ a_1]\\to [ b_1 ] \\land \\dots\\land                        [ a_m]\\to [ b_m ] \\in \\gamma}\\atop{\\displaystyle { \\begin{array}{rcl }                     [ w_1]\\to [ w_1 ' ] & \\dots & [ w_n]\\to [ w_n ' ] \\\\                     { [ } a_1(\\overline{w}/\\overline{x})]\\to                          [ b_1(\\overline{w}/\\overline{x } ) ] & \\dots                       & [ a_m(\\overline{w}/\\overline{x})]\\to                         [ b_m(\\overline{w}/\\overline{x } ) ]                      \\end{array}}}}}}{\\displaystyle { [ t(\\overline{w}/\\overline{x})]\\to            [ t'(\\overline{w'}/\\overline{x})]}}}\\ ; \\textbf{replacement } \\end{array}\\ ] ]    [ fig : calculi1 ]      crwl uses signatures with constructors @xmath59 , where @xmath60 and @xmath61 are disjoint sets of _ constructor _ and _ defined function symbols _ respectively , each of them with an associated arity .",
    "@xmath62 refers to the signature which is obtained from @xmath0 by adding a new constructor @xmath63 of arity 0 .",
    "given a set @xmath39 of variables , we will write _ expr@xmath64 _ for the set of total expressions which can be built with @xmath0 and @xmath39 , and _",
    "term@xmath64 _ for those total terms which only make use of @xmath65 and @xmath39 . _ expr@xmath66 _ and _ term@xmath66 _ , the sets of _ partial _ expressions and terms , are defined analogously using @xmath62 .",
    "a _ signature morphism _",
    "@xcite @xmath67 from a signature @xmath68 to another @xmath69 is a pair of functions ( denoted with the same @xmath70 ) @xmath71 mapping @xmath72-ary symbols to @xmath72-ary symbols .",
    "a crwl - theory is a pair @xmath73 , where @xmath0 is a signature with constructors and @xmath6 is a set of conditional rewrite rules of the form @xmath74 with @xmath75 of arity @xmath72 , @xmath76 , @xmath77 , @xmath78 and each variable occurring in @xmath79 having a single ocurrence .    from a given theory @xmath80",
    ", two kinds of sentences can be derived using the crwl - calculus in figure  [ fig : calculi2 ] ( where variables range over partial expressions ) : reduction statements of the form @xmath81 , and joinability statements @xmath82 ( meaning that there exists a total term to which both @xmath83 and @xmath84 reduce ) .",
    "we denote them by @xmath85 and @xmath86 , respectively .",
    "again , we refer to for a complete presentation of crwl .",
    "( note that the names `` term '' and `` constructor term '' are used there instead of `` expression '' and `` term . '' )    @xmath87    [ fig : calculi2 ]      in order to associate an entailment system to rl , note that the rules of inference in figure  [ fig : calculi1 ] only allow us to derive unconditional rules but that the requirements on an entailment system ( _ reflexivity _ ) require the ability to derive conditional ones as well .",
    "we then have two possibilities : either we restrict ourselves to unconditional rewrite rules and define @xmath88 by means of derivation in the rl - calculus , or we also consider conditional rules , in which case the rl - calculus in figure  [ fig : calculi1 ] must be extended to be able to derive them .",
    "we consider the second , more general case .",
    "actually , not only is derivability undefined for conditional rules , but also is satisfaction .",
    "however , we would like to rest on a natural definition of satisfaction to support the claim that our extended notion of derivability is a suitable one .",
    "the semantics of rl is presented in section  [ sec : tmrl ] and the extension of the satisfaction relation discussed in section  [ sec : irl ] ; here we just assume that such an extension exists .    given an rl - theory @xmath54 and a set of variables @xmath39 disjoint from @xmath0 , we define @xmath89 where @xmath90 is the set of function symbols obtained by adding the elements of @xmath39 as constants to @xmath0 , and @xmath91 is obtained from @xmath6 by renaming with fresh variables . in section",
    "[ sec : irl ] it is proved that , for an rl - theory @xmath53 and @xmath92\\to [ t'(\\overline{x } ) ] { \\textup{\\ \\textbf{if}\\ } } [ a_1(\\overline{x } ) ] \\to [ b_1(\\overline{x})]\\land \\dots \\land   [ a_m(\\overline{x } ) ] \\to [ b_m(\\overline{x})]$ ] a conditional rewrite rule ,",
    "the following statements are equivalent :    1 .",
    "@xmath93\\to [ t'(\\overline{x } ) ]   { \\textup{\\ \\textbf{if}\\ } } [ a_1(\\overline{x } ) ] \\to [ b_1(\\overline{x})]\\land \\dots \\land   [ a_m(\\overline{x } ) ] \\to [ b_m(\\overline{x})]$ ] ; 2 .   @xmath94 \\to [ b_1(\\overline{x } ) ] , \\dots ,      [ a_m(\\overline{x } ) ] \\to [ b_m(\\overline{x } ) ] \\ }    \\models [ t(\\overline{x } ) ] \\to [ t'(\\overline{x})]$ ] .",
    "a straightforward consequence of this equivalence is a sound and complete extension of the rl - calculus with the following rule of deduction :    * * implication introduction*. @xmath95\\to [ b_1(\\overline{x } ) ] , \\dots ,              [ a_m(\\overline{x})]\\to [ b_m(\\overline{x } ) ] \\ }              \\vdash              [ t(\\overline{x})]\\to [ t'(\\overline{x})]}{\\displaystyle \\mathcal{r } \\vdash      [ t(\\overline{x})]\\to [ t'(\\overline{x } ) ] { \\textup{\\ \\textbf{if}\\ } } [ a_1(\\overline{x})]\\to [ b_1(\\overline{x } ) ] \\land\\dots \\land      [ a_m(\\overline{x})]\\to [ b_m(\\overline{x})]}}.\\ ] ]    we can now focus again on the main purpose of this section .",
    "for that , we associate to rl the entailment sytem @xmath96 given by :    * : the category of equational theories and theory morphisms ; * _ sen _ : the functor assigning to an equational theory the set of conditional rewrite rules that can be built over it , and mapping a theory morphism to its natural extension to rewrite rules ; * @xmath11 is defined as provability in the extended rl - calculus .",
    "@xmath96 is an entailment system .",
    "the proof of this result uses concepts from the model theory of rl that are not introduced until later in the text , so we postpone the details to the appendix .    before finishing , it should be emphasized that throughout this section no mention at all has been made of the labels in an rl - theory .",
    "they could have been safely included within the signature part ; however , they do not play any role as far as the entailment relation is concerned and , if only for ease of exposition , we have preferred to omit then .",
    "this situation will change drastically when we shift to models and try to assign an institution to rl ; then , we will be forced to distinguish between labeled and unlabeled sentences , as described in section  [ sec : irl ] .      at first sight",
    ", an entailment system can be associated to crwl following the same steps as for rl .",
    "the category of signatures is immediately obtained , as it is not difficult to check that composition of signature morphisms is associative , and for the set of sentences we have the same two possibilities as for rl .",
    "however , a closer look reveals that derivation in the crwl - calculus does not satisfy the transitivity condition for the provability relation in entailment systems .",
    "consider , for example , a signature @xmath0 with @xmath97 , function symbols of arities 0 , 0 , and 1 , respectively .",
    "then it can be proved that @xmath98 and @xmath99 but @xmath100 the first statement is proved by instantiating @xmath101 with @xmath102 ; for the second , noting that @xmath103 ( using * bottom * and * congruence * ) , just instantiate @xmath104 with @xmath63 and apply * transitivity * ( note that @xmath105 can not be used to instantiate this rule since it is not a term ) .",
    "the third statement is formally proved by induction on derivations : let us just note that the crucial point is that the rule @xmath106 can not be instantiated with @xmath63 because @xmath107 can not be derived .",
    "what lies behind is the fact that the crwl - calculus is sound and complete with respect to validity in models _ only _ under totally defined valuations @xcite . in particular , in the first entailment above , @xmath104 means that @xmath108 rewrites to @xmath109 just for those instances where a _ total _",
    "term @xmath43 is substituted for @xmath102 .",
    "this proves that the relation @xmath110 is not transitive and , therefore , we are not going to be able to build an entailment system _ based on _ the crwl - calculus , as any sensible one should contain , at least , the conditional rewrite rules among its sentences .",
    "( let us note , however , that there is an entailment system corresponding to the institution that will be associated to crwl in section  [ sec : icrwl ] ; the previous example is no longer a counterexample due to the partiality of the soundness and completeness results for crwl mentioned above .",
    "the reason for not comparing it to rl s entailment system is that , since it is not based on deduction , they do not stand `` on the same ground . '' )      since there is no entailment system corresponding to the crwl - calculus , we can not define a map of entailment systems as intended . in the following",
    "we will be pleased just with presenting how entailment in crwl can be simulated in rl .",
    "the set of labels of an rl - theory does not take part in the entailment process , and so it is omitted ; the same convention will also be adopted in section  [ sec : srlcrwl ] .    of course , every crwl - theory @xmath80 can be trivially `` simulated '' in rl by means of an rl - theory @xmath111 with a constant @xmath112 for each term ( and each expression ) @xmath43 in @xmath80 , and with axioms @xmath113 whenever @xmath114 .",
    "but such a @xmath111 , apart from not exploiting the analogies between rl and crwl , is not computable in general .",
    "and so we must look for another construction .    the idea is to associate to every crwl - theory @xmath25 a theory @xmath111 in rl ( whose set of equational axioms will be empty ) in which all the operations in @xmath80 , together with a new constant @xmath63 , are available , plus one rule for each axiom in @xmath80 and , perhaps , some more rules coping with the rules of deduction of the crwl - calculus . since rules in crwl can only be instantiated with terms and not expressions and there is no such distinction in rl , we introduce a unary relation _",
    "pterm_(technically , a unary function symbol ) and a constant _ true _  to distinguish them in rl .",
    "one immediate rule defining _ pterm _  is @xmath115 ; however , how to express that variables are also partial terms ?",
    "the obvious rule @xmath116 is clearly not valid : everything would be a partial term !",
    "this means that we must consider the crwl variables at the object level , add them to the signature of @xmath111 as constants , and use a new set @xmath39 of variables for rl . using constants for variables",
    "we will be able to distinguish those terms in rl representing terms in crwl from those representing expressions , hence allowing us to capture , by carefully translating the rules of deduction of the crwl - calculus ( using , perhaps , a different representation for the terms appearing in them ) , the corresponding entailment relation .    then , assuming variables in crwl belong to a set @xmath117 , the rules defining _ pterm _",
    "are : @xmath118 in a similar way , two more predicates , _ tterm _  and _ pexpr _ , dealing with total terms and partial expressions , are defined : @xmath119    as a side effect , rewriting in crwl can no longer be simulated in rl directly through the rewriting relation .",
    "consider , for example , the theory of natural numbers in crwl , with 0 a constructor and @xmath120 a function symbol .",
    "in rl , @xmath121 should not rewrite to _ true _ ; however , with the usual definitions , @xmath122 and by * congruence * @xmath123 , and this last term must reduce to _",
    "true_. therefore , a rewrite in crwl will be simulated through a binary relation @xmath124 so that @xmath125 in crwl if and only if @xmath126 in rl . in a similar way , strict equalities @xmath82",
    "will be simulated through a binary relation @xmath127 .",
    "it just remains to translate the rules of deduction of the crwl - calculus , which is straightforward .",
    "for example , the * bottom * rule stating that every expression is reducible to @xmath63 is written @xmath128 whereas the * join * rule @xmath129 results in @xmath130 * reflexivity * , * transitivity * , and * monotonicity * are taken care of by , respectively : @xmath131 it is not necessary to include _ pexpr _  explicitly in all the rules because these conditions can be derived as logical consequences .    finally , to every rule @xmath132 in the crwl - theory , we associate the following rule in rl , @xmath133 where each crwl variable @xmath134 ( a constant in the rl - theory ) has been replaced by the variable @xmath48 .",
    "the set of all these last rules corresponds to the * reduction * rule in the crwl - calculus , and the condition that program rules in crwl can only be instantiated with terms is taken care of by demanding @xmath135 for all the variables appearing in it .",
    "we will write @xmath136 for the rl - theory associated to a crwl - theory @xmath80 in this fashion , with @xmath137 and @xmath91 consisting of all the rules described above .",
    "the following proposition ensures that the translation is correct .",
    "note that we use @xmath138 to denote both syntactic and semantic equality : the context will always make clear to which one we refer .    [",
    "prop : crwlinrlentailment ] for a crwl - theory @xmath25 with @xmath139 , if @xmath140 : @xmath141    the following two lemmas , which can be easily proved by structural induction on derivations , are needed for its proof . in particular ,",
    "lemma  [ lem : scrwlrlaux1 ] is used in the most difficult part , which corresponds to * transitivity * in the @xmath142-direction .",
    "[ lem : scrwlrlaux1 ] let @xmath25 be a crwl - theory , @xmath143 , and @xmath144 .    1 .   if @xmath145 and @xmath146 or @xmath147 , then @xmath148 .",
    "if @xmath149 , then @xmath150 is either _ true _  or @xmath151 for some @xmath152 such that @xmath153 .",
    "[ lem : scrwlrlaux2 ] if @xmath25 is a crwl - theory , @xmath143 , and @xmath154 , then :    1 .",
    "@xmath155 , 2 .",
    "@xmath156 , 3 .",
    "@xmath157 .",
    "both directions are proved by induction on the derivation , studying the last rule applied .",
    "let us first consider the ( @xmath158 ) part .",
    "* * bottom*. we have @xmath159 .",
    "since @xmath160 , by lemma  [ lem : scrwlrlaux2 ] it is @xmath161 so , by the translation of the * bottom * rule , we have @xmath162 .",
    "* * reflexivity*. by lemma  [ lem : scrwlrlaux2 ] , @xmath161 , so the result follows by applying the third rule associated to the relation @xmath124 . *",
    "* transitivity*. we have that the last step in the derivation is @xmath163 by induction hypothesis , @xmath164 and @xmath165 , and by the fourth rule associated to @xmath124 we can derive @xmath166 .",
    "* * monotonicity*. similarly to the previous case . * * join*. from @xmath167 we get , by induction hypothesis , @xmath168 and @xmath169 , and by lemma  [ lem : scrwlrlaux2 ] , @xmath170 , so we can apply the rule associated to @xmath127 to reach the result . * * reduction*. assume that for some rule @xmath171 in @xmath6 and partial terms @xmath172 , the last step in the derivation is @xmath173 then , by induction hypothesis , @xmath174 for @xmath175 and , by lemma  [ lem : scrwlrlaux2 ] , @xmath176 for @xmath49 .",
    "then the result follows by using the rule associated to @xmath171 in @xmath177 .",
    "let us now consider the converse ( @xmath178 ) .",
    "note that even though the names of some of the rules are the same , the induction proceeds now over derivations in rl .",
    "* * reflexivity * and * congruence * are not possible .",
    "* * transitivity*. assume that @xmath179 ( the case for @xmath82 is analogous . ) by induction on the derivation of @xmath180 and using the fact that _ true",
    "_  only rewrites to itself , it follows easily that @xmath181 must be either _ true _ , or @xmath182 with @xmath183 and @xmath184 . in the first case the result follows from the induction hypothesis applied to @xmath185 . in the second ,",
    "again by the induction hypothesis , @xmath186 and @xmath187 , and by lemma  [ lem : scrwlrlaux1 ] we have @xmath188 and @xmath189 . *",
    "* replacement*. the result follows because the rules associated to the relation @xmath124 reflect faithfully the rules of deduction of crwl .",
    "for example , consider the rule associated to * join*. if @xmath190 then @xmath191 by lemma  [ lem : scrwlrlaux2 ] , and @xmath192 and @xmath193 by the induction hypothesis , whence follows that @xmath194.@xmath195      we now embark ourselves on finding the converse simulation of rl in crwl .",
    "we are again interested in a computable and simple translation , and the idea for this is very similar to that of the previous section .",
    "now , however , there are no terms and expressions to distinguish , and therefore predicates such as _ pterm _  are no longer necessary ; as a consequence , we will be able to use the same set @xmath39 of variables for both logics .",
    "the fact that only joinability statements are allowed to appear in the condition of a rewrite rule in crwl forces us to represent , as in section  [ sec : scrwlrl ] , the rewriting relation in rl through a binary relation @xmath124 in crwl , so that @xmath196 in rl if and only if @xmath197 in crwl .",
    "rewriting modulo a set of equations will be handled by transforming each equation @xmath198 into the rewrites @xmath196 and @xmath199 .",
    "more precisely , given a signature @xmath36 in rl we associate to it a crwl - theory over the signature @xmath200 with @xmath201 and @xmath202 , with _ true _  and @xmath124 of arities 0 and 2 , respectively .",
    "the rules in the theory include @xmath203 and , for each @xmath204 of arity @xmath205 , @xmath206 mimicking the * reflexivity * , * transitivity * , and * congruence * rules in the rl - calculus , together with @xmath207 for every @xmath208 .",
    "the goal of the condition in the rule corresponding to * reflexivity * is to avoid instantiating it with terms containing @xmath63 , which have no meaning in rl .",
    "a conditional rewrite rule @xmath209 \\to [ r ] { \\textup{\\ \\textbf{if}\\ } } [ a_1]\\to[b_1]\\land \\dots\\land [ a_m]\\to [ b_m]\\ ] ] over @xmath36 in rl is then translated to @xmath210 where @xmath211 , @xmath78 , @xmath212 , @xmath213 are arbitrary members of @xmath214 $ ] , @xmath215 $ ] , @xmath216 $ ] , and @xmath217 $ ] , respectively . then , given an rl - theory @xmath218 we associate to it the crwl - theory @xmath219 obtained by adding to the crwl - theory corresponding to @xmath36 the translation of the rules in @xmath6 .",
    "actually , the previous definitions must be slightly modified due to some technical details .",
    "recall from section  [ sec : crwl ] that in a conditional rewrite rule @xmath220 in crwl @xmath211 must be linear , and it is obvious that with the above definitions this property is not ensured for the translation of equations and rewrite rules ; therefore , those rules must be `` linearised '' @xcite .",
    "the linearised version of a conditional rewrite rule @xmath220 is given by @xmath221 , where @xmath222 and @xmath223 are calculated as follows : for every variable @xmath102 appearing @xmath224 times in @xmath211 , its @xmath225-th occurrence , @xmath226 , is replaced with a new variable @xmath227 and @xmath228 is added to @xmath223 . moreover",
    "( and this is simply a feature of our translation ) , even when a variable @xmath102 appears only once , @xmath229 will be added to the conditional part so that @xmath102 can not be instantiated with a partial term",
    ". the treatment of linearised rules in the rest of the section , though rigorous , will not be too formal .",
    "the following proposition shows that our translation correctly reflects provability in the equational part of a rewrite theory .",
    "[ prop : aux ] if @xmath230 is the crwl theory corresponding to a signature @xmath36 in rl and if @xmath231 are such that @xmath232 , then @xmath233    by induction on the derivation of @xmath234 .",
    "the rules of a deduction system for equational logic include those in figure  [ fig : calculi1 ] ( replacing the arrow with an equality symbol ) together with a * symmetry * rule .",
    "let us just consider the case of the * replacement * rule . since our equational logic is unconditional , we have @xmath235 for some assignment @xmath236 .",
    "associated to @xmath237 we have the linearised versions of the two rules @xmath238 and @xmath239 in @xmath240 and , since @xmath241 , we can instantiate them with @xmath242 ( mapping those @xmath102 which arose in the linearization process to the same term as the original variable ) to obtain the result .    with this",
    "in hand we are ready to prove the first half of the main proposition , which guarantees the correctness of the translation .",
    "[ prop : rlincrwlhalf ] given any rl - theory @xmath243 , and @xmath244 : @xmath245\\to[r ] & \\rightarrow   & ( \\exists l'\\in[l],\\exists r'\\in [ r ] ) \\ ; \\ ;   \\beta(t)\\vdash_\\mathrm{crwl } r(l',r')\\to{\\textit{true}}\\\\ & \\iff & ( \\forall l'\\in[l],\\forall r'\\in [ r ] ) \\ ; \\ ;   \\beta(t)\\vdash_\\mathrm{crwl } r(l',r')\\to{\\textit{true}}\\end{array}\\ ] ]    let us first prove the equivalence",
    ". there is nothing to prove in the right - to - left direction ; in the opposite one , the result is a consequence of proposition  [ prop : aux ] and the rule @xmath246 that , by construction , is in @xmath219 .",
    "now we prove the first implication by induction on the derivation , according to the last rule used :    * * reflexivity*. @xmath247\\to [ l]$ ] , and the result follows by instantiating @xmath248 with @xmath211 for both variables . *",
    "* congruence*. from @xmath249\\to [ r_1 ] \\;\\;\\ ; \\dots \\;\\;\\ ; [ l_n]\\to [ r_n]}{\\displaystyle [ f(l_1,\\dots , l_n)]\\to [ f(r_1,\\dots , r_n)]}}\\ ] ] and the induction hypothesis , @xmath250 for some @xmath251 $ ] , @xmath252 $ ] , @xmath253 . then , using the rule @xmath254 , we get @xmath255 verifying @xmath256 $ ] and @xmath257 $ ] . * * transitivity*. from @xmath258\\to [ t ] \\qquad [ t]\\to [ r]}{\\displaystyle [ l]\\to [ r]}}\\ ] ] and the induction hypothesis , @xmath259 and @xmath260 , with @xmath261 $ ] , @xmath262 $ ] , and @xmath263 $ ]",
    ". then , due to the equivalence proved above , @xmath264 and @xmath265 and we get the result using the translation of the * transitivity * rule . * * replacement*. we have , for some @xmath266 \\to [ r(\\overline{x } ) ] { \\textup{\\ \\textbf{if}\\ } } [ a_1(\\overline{x})]\\to [ b_1(\\overline{x})]\\land \\dots \\land   [ a_m(\\overline{x})]\\to [ b_m(\\overline{x})]$ ] in @xmath6 , @xmath267\\to [ w_1']&\\dots & [ w_n]\\to [ w_n']\\\\             { [ } a_1(\\overline{w}/\\overline{x } ) ] \\to               [ b_1(\\overline{w}/\\overline{x } ) ] & \\dots &             [ a_m(\\overline{w}/\\overline{x } ) ] \\to                [ b_m(\\overline{w}/\\overline{x } ) ]            \\end{array}}{\\displaystyle t\\vdash_\\mathrm{rl}[l(\\overline{w}/\\overline{x } ) ] \\to [ r(\\overline{w'}/\\overline{x})]}}.\\ ] ] by induction hypothesis , there exist @xmath268 ,    b_i'\\in [ b_i(\\overline{w}/\\overline{x})]$ ] such that @xmath269 for @xmath270 . again by the equivalence shown above , @xmath271 , for @xmath270 .",
    "we can then use the linearised version of @xmath272 , substituting all variables which arose from the same one during the linearisation process with the same @xmath273 ( so that the conditions @xmath229 , @xmath228 are trivially verified ) , to get @xmath274 . in a similar way , @xmath275 , @xmath49 ,",
    "is also obtained , and repeated aplication of the translation of the * transitivity * and * congruence * rules would show , first , that @xmath276 , and then @xmath277 , as desired .",
    "our next goal will be to prove the converse of the last proposition .",
    "however , more care is needed here since , for example , an equation of the form @xmath278 will allow us to derive @xmath279 .",
    "even more bizarre derivations are possible by repeated application of transitivity , e.g. @xmath280 . to prove that these rewrites , however , do not allow us to derive anything in crwl that was not already derivable in the original rl - theory , we concentrate first on some preliminary results . the first one is proved by an easy induction for each fact in the statement .",
    "let @xmath243 be an rl - theory , @xmath281 , and @xmath282 expressions in crwl .    1 .   if @xmath283 , then @xmath284 .",
    "2 .   for all",
    "@xmath285 , if @xmath286 , then either @xmath284 or @xmath287 .",
    "3 .   if @xmath288 , then either @xmath284 , or @xmath289 , or @xmath290 with @xmath291 , @xmath292 .",
    "4 .   for every @xmath293 , if @xmath294 then either @xmath284 , or @xmath295 with @xmath291 for some @xmath296 , @xmath49 .    in what follows this lemma will be used mostly without explicit reference to it : for example , when deducing @xmath297 from @xmath298 .",
    "[ lem : total ] let @xmath80 be an rl - theory and @xmath281 .    1 .",
    "[ lem : totalfst ] for all @xmath299 , if @xmath300 and @xmath150 is total , then @xmath181 is total .",
    "[ lem : totalsnd ] for all @xmath301 , @xmath302 , if @xmath303 and @xmath150 is total , then @xmath304 .",
    "[ lem : totalthr ] for all @xmath305 , if @xmath306 , then @xmath43 is total and @xmath307 .    1 .   by induction on the last rule of the derivation .",
    "rules * bottom * and * join * are not possible , and * reflexivity * is immediate . for * transitivity * , if the last step of the derivation is @xmath308 then , by induction hypothesis , @xmath152 is total , and again by induction hypothesis @xmath181 is total .",
    "the situation is similar for * monotonicity*. for * reduction * we have to distinguish all these cases : * if @xmath309 has been used , then @xmath310 and @xmath311 , @xmath312 for some @xmath43 , total , have been previously obtained in the derivation . by induction hypothesis ,",
    "both @xmath313 and @xmath314 are total and so is @xmath181 . *",
    "if a rule of the form @xmath315 or @xmath246 has been used , the result follows by induction hypothesis . *",
    "if the last rule applied has been one of those corresponding to equations or rewrite rules then @xmath316 and a condition of the form @xmath229 or @xmath228 for every variable appearing in it must have been satisfied .",
    "if @xmath102 has been instantiated with @xmath43 , then those conditions imply that @xmath317 for some total @xmath318 , so by induction hypothesis @xmath43 is total , and so will be the expression @xmath181 .",
    "2 .   by ( 1 ) ,",
    "@xmath319 . by structural induction on @xmath43 : * @xmath320 , then @xmath321 ( absurd ) or @xmath322 and the result holds ; * @xmath323 , then either @xmath321 ( absurd ) or @xmath324 with @xmath325 . in this last case , by induction hypothesis , @xmath326 for @xmath49 and so @xmath304 .",
    "3 .   there exists @xmath327 with @xmath328 and @xmath329 , and by ( 2 ) , @xmath330 .",
    "@xmath195    we are now ready to prove our goal and we will do so in two steps .",
    "the next proposition shows that if @xmath331 can be proved in @xmath219 then @xmath214 \\to [ r]$ ] can also be proved in @xmath80 , but extending the signature with the constant @xmath332 .",
    "after that , we show that we can forget about this extra constant .",
    "[ prop : rlincrwlmainhalf ] let @xmath243 be an rl - theory , @xmath281 , and let @xmath333 .",
    "if @xmath334 then @xmath335 ( recall that @xmath336 ) and @xmath337 @xmath338\\to [ r]$ ] .    by lemma  [ lem : total].[lem : totalfst ] , @xmath335 . for the second part ,",
    "we proceed by induction on the proof of @xmath334 .",
    "the last rule applied must have been * transitivity * or * reduction*.    * for * transitivity * we have @xmath339 if @xmath289 the result follows by induction hypothesis .",
    "otherwise it must be @xmath340 , total by lemma  [ lem : total].[lem : totalfst ] , with @xmath341 and @xmath342 .",
    "hence , by lemma  [ lem : total].[lem : totalsnd ] , @xmath188 , @xmath189 , and the result holds by induction hypothesis . * for * reduction * there are five different cases , corresponding to each of the conditional rewrite rules simulating the rl - calculus in @xmath219 . recall that rules in crwl are instantiated only with members of _ term@xmath343_. 1 .",
    "if the last step of the derivation is @xmath344 then by lemma  [ lem : total].[lem : totalthr ] it is @xmath345 and therefore @xmath346\\to [ r]$ ] .",
    "2 .   if we have @xmath347 then , by induction hypothesis , @xmath346\\to [ t]$ ] and @xmath348\\to [ r]$ ] , so @xmath346\\to [ r]$ ] by * transitivity * of rl .",
    "3 .   for the translation of the * congruence *",
    "rule the result also follows immediately by the induction hypothesis .",
    "4 .   assume that the result is obtained by using one of the ( linearised ) rules associated to an equation @xmath349 .",
    "the conditions of the form @xmath229 and @xmath228 in the rule together with lemma  [ lem : total].[lem : totalthr ] imply that all the variables which arose from the same one must have been instantiated with the same element of _",
    "term@xmath350_. this way @xmath351 , so @xmath214 = [ r]$ ] and @xmath352\\to [ r]$ ] by * reflexivity * of rl . 5 .",
    "if the last rule applied is one of those associated to an element of @xmath6 then , as in the previous case , all variables have been instantiated properly and the result follows by the induction hypothesis and using * replacement*. @xmath195    these results , combined with the completeness of rl , are enough to prove the converse of proposition  [ prop : rlincrwlhalf ] ; again , since the semantics of rl is not explained until section  [ sec : tmrl ] , we postpone the proof to the appendix .    given any rl - theory @xmath243 , and @xmath353 : @xmath245\\to[r ] & \\iff   & ( \\exists l'\\in[l],\\exists r'\\in [ r ] ) \\;\\ ;   \\beta(t)\\vdash_\\mathrm{crwl } r(l',r')\\to{\\textit{true}}\\\\ & \\iff & ( \\forall l'\\in[l],\\forall r'\\in [ r ] ) \\;\\ ;   \\beta(t)\\vdash_\\mathrm{crwl } r(l',r')\\to{\\textit{true}}\\end{array}\\ ] ]",
    "in this section we leave behind our study of the entailment relations and turn our attention to models and satisfaction .",
    "our interest lies in associating suitable institutions to both crwl and rl and , thereafter , to relate them via maps of institutions with `` good '' properties .",
    "the notion of model is based on goguen and burstall s work on institutions @xcite .",
    "an _ institution _ is a 4-tuple @xmath354 @xmath355 such that :    *  is a category whose objects are called _ signatures_.",
    "* @xmath10 is a functor associating to each signature @xmath0 a set of @xmath0-_sentences_. * @xmath356 is a functor that gives for each signature @xmath0 a category whose objects are called @xmath0-_models_. * @xmath357 is a function associating to each @xmath12 a binary relation @xmath358 called @xmath0-_satisfaction _ , in such a way that the following property holds for any @xmath22 , @xmath359 , and all @xmath2 : @xmath360    given a set @xmath6 of @xmath0-sentences , the category @xmath361 is defined as the full subcategory of @xmath362 determined by those models @xmath363 that satisfy all the sentences in @xmath6 .",
    "a relation between sets of sentences and sentences , also denoted as @xmath357 , can be defined by @xmath364 we can then associate an entailment system to each institution @xmath365 @xmath366 in a natural way by means of the triple @xmath367 , where @xmath357 now denotes the previously defined relation between sets of sentences and sentences ; @xmath368 is easily seen to satisfy the conditions to be an entailment system .    given an institution @xmath369 , its category  of theories is defined as the category of theories associated to the entailment system @xmath368 . if @xmath26 is a theory morphism and @xmath370 , it is not difficult to check that @xmath371 .",
    "the model functor  can then be extended to a functor @xmath372 .",
    "there are many different notions of morphisms between institutions in the literature ; a good survey can be found in .",
    "although it will not play a crucial role in what follows , to give the reader a flavour of the idea we present here the definition introduced in . given institutions @xmath373 and @xmath374 @xmath375 , a _ map of institutions _",
    "@xmath376 consists of a natural transformation @xmath377 , an @xmath378-sensible functor is determined by its restriction to empty theories and @xmath378 . ]",
    "@xmath379 , and a natural transformation @xmath380 such that for each @xmath12 , @xmath2 , and @xmath381 the following property is satisfied : @xmath382      before proceeding to @xmath53-_systems _ , the models of rl , we need the categorical notion of _ subequalizer _",
    "@xcite , a notion generalizing that of equalizer of two functors .    given a family of pairs of functors @xmath383 ,",
    "the ( simultaneous ) _ subequalizer _ of this family is a category @xmath384 together with a functor @xmath385 and a family of natural transformations @xmath386 satisfying the following universal property : given a functor @xmath387 and a family of natural transformations @xmath388 , there exists a unique functor @xmath389 such that @xmath390    the construction of @xmath384 is quite simple .",
    "its objects are pairs @xmath391 @xmath392 with @xmath393 an object in @xmath394 and @xmath395 a morphism in @xmath396 .",
    "morphisms @xmath397 are morphisms @xmath398 in @xmath394 such that for each @xmath399 , @xmath400 .",
    "the functor @xmath401 is just projection into the first component .",
    "the natural transformations @xmath402 are defined by @xmath403    then , given an rl - theory @xmath404 , an @xmath53-_system _ @xmath405 is a category @xmath405 together with :    * a @xmath36-algebra structure given by a family of functors",
    "@xmath406 satisfying the equations @xmath37 , i.e. , for any @xmath407 in @xmath37 we have an identity of functors @xmath408 , where the functor @xmath409 is defined inductively from the functors @xmath410 in the obvious way . * for each rewrite rule @xmath411 \\to [ t'(\\overline{x } ) ] { \\textup{\\ \\textbf{if}\\ } } [ a_1(\\overline{x})]\\to [ b_1(\\overline{x } ) ] \\land\\dots\\land   [ a_m(\\overline{x})]\\to [ b_m(\\overline{x})]\\ ] ] in @xmath6 , a natural transformation @xmath412 where @xmath413 is the subequalizer functor .",
    "an @xmath53-_homomorphism _ @xmath414 between two @xmath53-systems is then a functor @xmath414 such that :    * it is a @xmath0-algebra homomorphism , i.e. , @xmath415 , for each @xmath416 in @xmath0 of arity @xmath72 . * `` @xmath417 preserves @xmath6 , '' i.e. , for each rewrite rule @xmath418 \\to [ t'(\\overline{x } ) ] { \\textup{\\ \\textbf{if}\\ } } c$ ] in @xmath6 we have the identity of natural transformations @xmath419 where @xmath420 is the unique functor induced by the universal property of @xmath421 by the composition functor @xmath422 and the natural transformations @xmath423 , @xmath424 , where the condition @xmath425 has @xmath426 rewrites @xmath427\\to [ b_j]$ ] , and @xmath402 is the @xmath225th natural transformation associated to the subequalizer @xmath428 . despite the somewhat complicated definition of @xmath429 , its behavior on objects is quite simple ; it is given by the equation @xmath430",
    "this defines a category @xmath53-*sys * in the obvious way .",
    "a sequent @xmath431 \\to [ t'(x_1,\\dots , x_n)]$ ] is satisfied by an @xmath53-system @xmath405 if there exists a natural transformation @xmath432 between the functors @xmath433 .",
    "we use the notation @xmath434 \\to [ t'(x_1,\\dots , x_n)]\\,\\textrm{.}\\ ] ] with respect to this definition of satisfaction , the proof calculus is sound and complete @xcite .",
    "completeness is obtained by means of an initial model construction .      before defining models we review some definitions . a _ partially ordered set _ ( in short , poset ) with bottom @xmath63 is a set @xmath435 equipped with a partial order @xmath436 and a least element @xmath63 .",
    "we say that an element @xmath437 is _ totally defined _ if @xmath102 is maximal with respect to @xmath436 .",
    "the set of all totally defined elements of @xmath435 will be denoted @xmath438 .",
    "@xmath439 is a _ directed _ set if for all @xmath440 there exists @xmath441 with @xmath442 , @xmath443 .",
    "a subset @xmath444 is a _ cone _ if @xmath445 and , for all @xmath446 and @xmath447 , if @xmath448 then @xmath449 .",
    "an _ ideal _",
    "@xmath450 is a directed cone . for @xmath437 ,",
    "the principal ideal generated by @xmath102 is @xmath451 .",
    "we write @xmath452 for the set of cones of @xmath435 .",
    "given a signature @xmath0 , a _",
    "crwl - algebra _ over @xmath0 is a triple @xmath453 where @xmath454 is a poset with bottom , and @xmath455 and @xmath456 are monotone mappings from @xmath457 to @xmath458 , with @xmath72 the corresponding arity .",
    "in addition , for @xmath459 and for all @xmath460 , there exists a @xmath461 such that @xmath462 .",
    "moreover , @xmath463 in case that all @xmath464 .    note that any @xmath465 can be extended to a function @xmath466 defined by @xmath467 . by abuse of notation",
    ", we will write @xmath468 also as @xmath469 .",
    "a _ valuation _ over @xmath394 is any mapping @xmath470 , and we say that @xmath471 is _ totally defined _ if @xmath472 for all @xmath473",
    ". the _ evaluation _ of an expression @xmath474 in @xmath394 under @xmath471 yields @xmath475\\!]}^\\mathcal{a}\\eta\\in\\mathcal{c}(d^\\mathcal{a})$ ] , which is defined recursively as follows :    * @xmath476\\!]}^\\mathcal{a}\\eta = \\langle\\bot_\\mathcal{a}\\rangle$ ] .",
    "* @xmath477\\!]}^\\mathcal{a}\\eta = \\langle \\eta(x)\\rangle$ ] , for @xmath285 .",
    "* @xmath478\\!]}^\\mathcal{a}\\eta =         h^\\mathcal{a}({[\\![}e_1{]\\!]}^\\mathcal{a}\\eta,\\dots ,                       { [ \\![}e_n{]\\!]}^\\mathcal{a}\\eta)$ ] , for all @xmath479 .    we are now prepared to define models .",
    "let @xmath394 be crwl - algebra @xmath394 :    * @xmath394 satisfies a reduction statement @xmath81 under a valuation @xmath471 , @xmath480 , if @xmath481\\!]}^\\mathcal{a}\\eta \\supseteq{[\\![}b{]\\!]}^\\mathcal{a}\\eta$ ] .",
    "* @xmath394 satisfies a joinability statement @xmath82 under @xmath471 , @xmath482 , if @xmath481\\!]}^\\mathcal{a}\\eta \\cap{[\\![}b{]\\!]}^\\mathcal{a}\\eta    \\cap \\textit{def}(d^\\mathcal{a } ) \\neq\\emptyset$ ] .",
    "* @xmath394 satisfies a rule @xmath483 if every valuation @xmath471 such that @xmath484 verifies @xmath485 .",
    "* @xmath394 is a _ model _ of @xmath6 , @xmath486 if @xmath394 satisfies all the rules in @xmath6 .    as mentioned in section  [ sec : aescrwl ] , the crwl - calculus is _ partially _ sound and complete @xcite with respect to this notion of satisfaction :    * if @xmath5 is a reduction or a joinability statement , @xmath487 implies that @xmath488 , for every @xmath489 and every _ totally defined _ valuation @xmath471 . *",
    "if @xmath5 is a joinability statement or a reduction statement in which the righthand expression is a partial term , the previous implication becomes an equivalence .",
    "finally , we can also define homomorphisms between crwl - algebras .",
    "let @xmath394 , @xmath490 be two crwl - algebras over a signature @xmath0 .",
    "crwl - homomorphism _",
    "@xmath491 is a monotone function @xmath492 which satisfies the following conditions :    1 .",
    "@xmath493 is element - valued : for all @xmath494 there exists @xmath495 such that @xmath496 .",
    "@xmath493 is strict : @xmath497 .",
    "@xmath493 preserves constructors : for all @xmath459 , @xmath498 , is @xmath499 .",
    "@xmath493 loosely preserves defined functions : that is , for all @xmath500 , @xmath498 , @xmath501 @xmath502 .",
    "crwl - algebras as objects with crwl - homomorphisms as arrows form a category .",
    "an institution for crwl was first defined in .",
    "this institution , however , was defined with the goal of providing a basis for the semantics of modules in crwl , and restricts its attention to a class of particular term algebras .",
    "since our goal is more general , we do not place such a limitation and define @xmath503 as follows :    * : the category of signatures with constructors and signature morphisms .",
    "* @xmath504 the functor assigning to each signature @xmath0 the set of all conditional rewrite rules over it , and to each signature morphism @xmath70 its homomorphic extension to rewrite rules , with @xmath505 . *",
    "@xmath506 the functor assigning to each signature the category of crwl - algebras and homomorphisms over it , and to each @xmath67 the forgetful functor mapping @xmath507 to the crwl - algebra @xmath508 with the same underlying poset and such that @xmath509 for all @xmath510 , and which is the identity over homomorphisms .",
    "* @xmath357 the satisfaction relation in crwl .",
    "[ prop : icrwl ] @xmath511 is an institution .",
    "it is not difficult to check that  is a category , and that _ sen _  and  are indeed functors . as for the satisfaction condition ,",
    "let @xmath512 be a signature morphism , @xmath507 , and @xmath513 ; we have to prove that @xmath514 it is easy to show , by structural induction on @xmath181 , that @xmath515\\!]}^{\\mathcal{a}'_\\sigma}\\eta = { [ \\![}\\sigma(e ) { ] \\!]}^{\\mathcal{a}'}\\eta\\ ] ] for every @xmath516 and valuation @xmath471 over @xmath517 .",
    "let @xmath518 be a reduction statement .",
    "then , for any valuation @xmath471 , @xmath519\\!]}^{\\mathcal{a}'}\\eta \\subseteq       { [ \\![}\\sigma(e){]\\!]}^{\\mathcal{a}'}\\eta \\\\ & \\iff & { [ \\![}e'{]\\!]}^{\\mathcal{a}'_\\sigma}\\eta \\subseteq          { [ \\![}e{]\\!]}^{\\mathcal{a}'_\\sigma } \\eta        & \\iff & ( \\mathcal{a}'_\\sigma,\\eta)\\models \\varphi              \\end{array}\\ ] ] and analogously for @xmath5 a joinability statement . now , if @xmath220 is a conditional rewrite rule , it follows that @xmath520 and @xmath521 , and thus the satisfaction condition is indeed verified .",
    "it can be proved that the category @xmath522 has products for every crwl - theory @xmath80 ; it is not complete , however , as in section  [ sec : se ] it is shown that , in general , @xmath522 does not have equalizers .",
    "@xmath523 is also a semiexact institution @xcite .",
    "the task of assigning an institution to rl is harder than expected .",
    "the first and most natural idea is to define the category of signatures  as the category of equational theories and theory morphisms , and the functor _",
    "to map any such theory to the set of conditional rewrite rules over it .",
    "since there are also notions of model and satisfaction in rl , the desired institution seems to be at hand . however ,",
    "when one tries to put together the various components of the institution , problems start to arise .    in the first place ,",
    "the notion of satisfaction in rl is defined only for unconditional rewrite rules , so our first task must be to extend its definition so as to encompass the conditional ones . taking the definition of @xmath53-systems as a guide , we say that a conditional rewrite rule @xmath524\\to [ t'(\\overline{x } ) ] { \\textup{\\ \\textbf{if}\\ } } [ a_1(\\overline{x})]\\to [ b_1(\\overline{x } ) ] \\land\\dots \\land   [ a_m(\\overline{x})]\\to [ b_m(\\overline{x})]\\ ] ] is satisfied by an @xmath53-system @xmath405 if there exists a natural transformation @xmath525 where @xmath526 .",
    "( alternatively , one could also think of defining satisfaction by @xmath527 \\to [ t ' ] { \\textup{\\ \\textbf{if}\\ } } [ a_1 ] \\to [ b_1 ] \\land \\dots \\land [ a_m]\\to [ b_m]\\ ] ] if @xmath528 \\to [ b_i ] \\;\\;\\ ; i=1,\\dots , m \\quad \\longrightarrow \\quad \\mathcal{s } \\models [ t ] \\to [ t']\\,\\textrm{.}\\ ] ] this option looks natural , but it is too loose in the sense that it requires the consequent to hold only if the condition is true for _ all _ possible instances .",
    "note that , in our definition , the subequalizer is playing the same role valuations have in the definition of satisfaction in crwl . )",
    "we can now prove the following proposition , that justifies the soundness and completeness of the extended rl - calculus presented in section  [ sec : esrlcrwl ] .",
    "let @xmath53 be an rl - theory and @xmath92\\to [ t'(\\overline{x } ) ] { \\textup{\\ \\textbf{if}\\ } } [ a_1(\\overline{x } ) ] \\to [ b_1(\\overline{x})]\\land \\dots \\land   [ a_m(\\overline{x } ) ] \\to [ b_m(\\overline{x})]$ ] a conditional rewrite rule ; then , the following statements are equivalent :    1 .",
    "@xmath93\\to [ t'(\\overline{x } ) ]   { \\textup{\\ \\textbf{if}\\ } } [ a_1(\\overline{x } ) ] \\to [ b_1(\\overline{x})]\\land \\dots \\land   [ a_m(\\overline{x } ) ] \\to [ b_m(\\overline{x})]$ ] ; 2 .   @xmath94 \\to [ b_1(\\overline{x } ) ] , \\dots ,      [ a_m(\\overline{x } ) ] \\to [ b_m(\\overline{x } ) ] \\ }    \\models [ t(\\overline{x } ) ] \\to [ t'(\\overline{x})]$ ] ; 3 .",
    "@xmath94 \\to [ b_1(\\overline{x } ) ] , \\dots ,      [ a_m(\\overline{x } ) ] \\to [ b_m(\\overline{x } ) ] \\ }    \\vdash [ t(\\overline{x})]\\to [ t'(\\overline{x})]$ ] .",
    "statements ( 2 ) and ( 3 ) are equivalent by the soundness and completeness of the rl - calculus @xcite .",
    "we will now prove that ( 1 ) implies ( 2 ) and then , that ( 3 ) implies ( 1 ) .",
    "to see that ( 1 ) implies ( 2 ) , let @xmath405 be an @xmath94 \\to [ b_1(\\overline{x } ) ] , \\dots ,      [ a_m(\\overline{x } ) ] \\to [ b_m(\\overline{x } ) ] \\}$]-system .",
    "there exist , therefore , natural transformations @xmath529 for @xmath530 .",
    "since in this context , that is , over @xmath531 , both @xmath532 and @xmath533 ( as well as all the @xmath534 and @xmath535 ) are ground terms , we only need to find a morphism @xmath536 in @xmath405 to prove that @xmath537 \\to [ t'(\\overline{x})]$ ] , and it turns out that each @xmath538 is just a single morphism .",
    "let us write @xmath539 for the restriction of @xmath405 to the signature @xmath0 ( that is , @xmath539 is like @xmath405 but we forget the interpretations for @xmath540 ) . clearly , @xmath539 is an @xmath53-system and therefore , by hypothesis , there exists a natural transformation @xmath541 where @xmath542 . because of the @xmath538 , @xmath424 , and noting that @xmath543 ( and analogously for @xmath544 ) , the interpretation @xmath545 of the variables @xmath540 in @xmath405 belongs to the subequalizer : @xmath546 .",
    "but then @xmath547 is a morphism @xmath548 in @xmath539 , and therefore a morphism @xmath536 in @xmath405 , as required .    to show that ( 3 ) implies ( 1 ) , given an @xmath53-system @xmath405 we will prove by induction on the derivation that @xmath549\\to [ t'(\\overline{x } ) ]    { \\textup{\\ \\textbf{if}\\ } } [ a_1(\\overline{x } ) ] \\to [ b_1(\\overline{x})]\\land \\dots \\land   [ a_m(\\overline{x } ) ] \\to [ b_m(\\overline{x})]\\,\\textrm{.}\\ ] ] according to the last rule of deduction employed :    * * reflexivity*. it must be @xmath40 = [ t']$ ] and",
    "the result is immediate . * * congruence*. if the last step in the derivation is @xmath550 \\to [ t'_1 ] \\;\\;\\ ; \\dots \\;\\;\\ ;            [ t_p]\\to [ t'_p]}{\\displaystyle [ f(t_1,\\dots , t_p)]\\to [ f(t'_1,\\dots , t'_p)]}},\\ ] ] we have , by the induction hypothesis , @xmath551\\to [ t'_i ] { \\textup{\\ \\textbf{if}\\ } } [ a_1 ] \\to [ b_1]\\land \\dots \\land [ a_m ] \\to [ b_m ] \\qquad 1\\leq i\\leq p,\\ ] ] and there exist natural transformations @xmath552 , @xmath553 , where @xmath554 .",
    "let @xmath555 ; if we define @xmath556 we obtain a natural transformation @xmath557 and the result is proved .",
    "some warning words are in order here . in the functor @xmath558 , the @xmath72 appearing as superscript depends on the actual number of variables in the sentence @xmath559\\to [ t'_i ] { \\textup{\\ \\textbf{if}\\ } } [ a_1 ] \\to [ b_1]\\land \\dots \\land [ a_m ] \\to [ b_m]$ ] and",
    ", although the @xmath560 and @xmath544 are fixed , this is not the case for @xmath561 and @xmath562 and thus the @xmath72 may vary with each @xmath563 . this would imply that the category @xmath564 could vary as well , since its objects are pairs whose first component is an object of @xmath565 , and then the definition of @xmath378 given above would no longer be valid .",
    "however , this is only a technical nuisance because the extra variables that @xmath561 and @xmath562 may add are simply ignored by the functors @xmath566 and @xmath567 , and everything could be made to fit properly by using projection functors that would preserve the natural transformations .",
    "this same remark applies to the remaining cases , too . * * transitivity*. if we have @xmath568 \\to [ t ' ] \\qquad [ t ' ] \\to [ t'']}{\\displaystyle [ t ] \\to [ t'']}},\\ ] ] by induction hypothesis there exist natural transformations @xmath569 where @xmath554 ; the composition @xmath570 gives the result . *",
    "* replacement*. we distinguish two cases : 1 .",
    "the rule employed is one of the @xmath571 \\to [ b_j(\\overline{x})]$ ] .",
    "since the terms are ground we must have @xmath572 \\to [ b_j(\\overline{x})]}}.\\ ] ] but in this case , @xmath573\\to [ b_i ] { \\textup{\\ \\textbf{if}\\ } } [ a_1 ] \\to [ b_1 ] \\land \\dots \\land     [ a_m ]",
    "\\to [ b_m]$ ] follows because the construction of the subequalizer produces a natural transformation @xmath574 .",
    "2 .   for some rule",
    "@xmath575 \\to [ r(\\overline{y } ) ] { \\textup{\\ \\textbf{if}\\ } } [ u_1(\\overline{y } ) ] \\to [ v_1(\\overline{y } ) ] \\land \\dots \\land     [ u_q(\\overline{y } ) ] \\to [ v_q(\\overline{y})]$ ] in @xmath53 , we have @xmath576 \\to [ w'_1 ] \\;\\;\\ ; \\dots \\;\\;\\ ;              [ w_p ] \\to [ w'_p ]              \\atop              [ u_1(\\overline{w}/\\overline{y } ) ] \\to [ v_1(\\overline{w}/\\overline{y } ) ]              \\;\\;\\ ; \\dots \\;\\;\\ ;              [ u_q(\\overline{w}/\\overline{y } ) ] \\to [ v_q(\\overline{w}/\\overline{y})]}}{\\displaystyle [ l(\\overline{w}/\\overline{y } ) ] \\to [ r(\\overline{w'}/\\overline{y})]}}.\\ ] ] by the induction hypothesis there exist natural transformations @xmath577 and @xmath578 where @xmath579 .",
    "since @xmath405 is an @xmath53-system , there also exists a natural transformation @xmath580 where @xmath581 .",
    "we now need to find a natural transformation @xmath582 . for that , let @xmath583 be an object in @xmath584 ; due to the morphisms @xmath585 it turns out that @xmath586 belongs to @xmath587 and we can define @xmath588 which finishes the proof .",
    "@xmath195    a more serious problem , as far as the definition of an institution for rl is concerned , is posed by the functor @xmath589 mapping signatures to models .",
    "the difficulty resides in the fact that , in rl , models are assigned directly to rl - theories instead of signatures , as it is customary in other logics .",
    "one obvious solution would be to consider a signature @xmath36 as a theory @xmath590 with empty set of axioms ( and labels ) , and to map @xmath36 to the category @xmath53-*sys * of models of @xmath53 .",
    "but this approach presents an important drawback .",
    "up to this point in the paper , we have omitted any explicit mention of the set of labels of an rl - theory .",
    "although this was a safe convention when talking about deduction , it is no longer the case when our interest shifts to models .",
    "thanks to the set of labels @xmath55 in an rl - theory @xmath591 , the elements of @xmath6 become special , _ labeled _ rewrite rules .",
    "these rules force @xmath53-systems to have a certain internal structure : not only must @xmath53-systems satisfy them , but must also associate to them a _ distinguished",
    "_ interpretation ( natural transformation ) that must be preserved by homomorphisms .",
    "( in particular , the same rule could appear _ twice _ in an rl - theory @xmath53 under two different labels .",
    "@xmath53-systems are then forced to provide two , possibly different , interpretations for the same rule , each of them to be preserved by the homomorphisms . )",
    "when considering a signature as a theory with empty sets of axioms , we are not taking into account labeled rewrite rules . this way ,",
    "homomorphisms are not subjected to preserve any rewrite rule and the categories @xmath592 of models of @xmath6 and @xmath53-*sys * of @xmath53-systems , that we expected to be the same , turn out to be different .    in ,",
    "some others attempts at defining an institution with @xmath593 as the category of equational theories are explored but , since they can not reflect the distinction between labeled rules belonging to rl - theories and unlabeled rules , all of them are bound to failure .",
    "for this reason we are led to an institution in which the category  subsumes all the information of an rl - theory .",
    "more precisely , we define @xmath594 where :    *  is the _ discrete _ category of rl - theories .",
    "* @xmath595 maps each rl - theory to the set of conditional rewrite rules that can be built over its signature .",
    "* @xmath356 maps an rl - theory @xmath53 to the category @xmath53-*sys*. * @xmath357 the satisfaction relation conveniently extended to conditional rewrite rules as discussed above .",
    "since  is discrete , this trivially defines an institution .",
    "admittedly , this restriction seems to be not justified .",
    "in fact , two types of morphisms of rl - theories are proposed in .",
    "basically , they are morphisms of equational theories `` preserving '' the rules in the rl - theories . for our purposes",
    ", however , the present definition is general enough as it stands and its extension would not modify the use we will make of it in the next section .",
    "there exist other institutions associated to ( variants of ) rl in the literature , e.g. , @xcite ; in these papers , the objects in the category of signatures are the sets of function symbols , without any rules.[preorder : pag ] as a consequence of this simplicity and the reasons we have mentioned above , the general categorical models of rl must be somehow restricted and the choice in these two works is to require them to be preorders instead of arbitrary categories .      now that we have institutions associated to both rl and crwl capturing formally their semantics , we would like to relate them by means of maps of institutions having `` nice properties . '' in particular , due to the generality of rl and its @xmath53-systems , a natural question to ask is whether @xmath511 can be considered as a subinstitution of @xmath596 .",
    "the formal definition of subinstitution appeared originally in and has been further generalized in subsequent works .",
    "one of those extensions was introduced in , where it is called an _",
    "embedding_. embeddings are very general : the only requirement they impose on a map of institutions @xmath597 is that for each @xmath598 , the functor @xmath599 has to be an equivalence of categories .",
    "we will show , however , that there is no embedding from @xmath511 into @xmath596 .",
    "for that , it will be enough to find a categorical property which is preserved by an equivalence of categories and a theory @xmath600 such that @xmath601 satisfies it whereas @xmath602 does not .",
    "let @xmath0 be a signature with constructors such that @xmath603 and @xmath604 consists of just two constants @xmath605 and @xmath606 , @xmath607 , and consider the crwl - theory @xmath25 .",
    "we define two crwl - algebras over @xmath0 : @xmath394 given by the set @xmath608 with partial order @xmath609 , and the cones @xmath610 and @xmath611 ; and @xmath612 with @xmath613 , and the cones @xmath614 .",
    "@xmath615 trivially , because they do not satisfy the condition @xmath616 .",
    "let us now define two crwl - homomorphisms @xmath617 , given by : @xmath618 clearly , @xmath417 and @xmath619 preserve both @xmath605 and @xmath606 , so that they are actually homomorphisms ; we will prove that there is no equalizer of @xmath417 and @xmath619 .",
    "for let us assume that @xmath620 is such an equalizer and let @xmath621 be the homomorphism given by @xmath622 satisfying @xmath623 . then , there must exist a unique homomorphism @xmath624 such that @xmath625 .",
    "let @xmath313 be the element in @xmath626 such that @xmath627 and @xmath628 .",
    "since @xmath37 and @xmath629 loosely preserve defined functions , @xmath630 and hence @xmath631 , and @xmath632 .",
    "therefore , since @xmath633 , there must exist @xmath634 such that @xmath635 : otherwise , @xmath626 would satisfy @xmath616 but , since @xmath636 , not @xmath6 .",
    "besides , due to the monotonicity of @xmath37 and the equality @xmath637 , it is @xmath638 .",
    "but then we have @xmath639 given by @xmath640 two different homomorphisms satisfying @xmath641 , a contradiction with the universal property of equalizers .",
    "in contrast with what happens in crwl , the following proposition shows a construction for equalizers in rl .    for all rl - theories @xmath591 , the category @xmath53- has equalizers .",
    "let @xmath642 and @xmath643 be two @xmath53-systems and let @xmath644 be two @xmath53-homomorphisms between them ; let us build their equalizer @xmath645 .",
    "the objects in the category @xmath24 are those @xmath646 such that @xmath647 ; the arrows , those @xmath648 in @xmath642 such that @xmath649 ( which implies , in particular , that @xmath417 and @xmath619 also coincide over @xmath650 and @xmath651 ) ; composition is that of @xmath642 .",
    "@xmath24 is well - defined because functors preserve identities and composition .",
    "next , we assign a @xmath36-algebra structure to @xmath24 . for each @xmath652 of arity",
    "@xmath72 we define @xmath653 to be @xmath654 , the restriction of @xmath655 to @xmath24 .",
    "let us check that this is a valid definition .",
    "if @xmath656 then @xmath657 and thus @xmath658 .",
    "analogously for arrows . with this definition",
    "it is easy to prove by structural induction that @xmath659 for all @xmath660 .",
    "therefore , for each @xmath349 it is @xmath661 .",
    "the only thing missing in the definition of @xmath24 are the natural transformations associated to the rewrite rules .",
    "let @xmath662\\to [ t'(\\overline{x } ) ] { \\textup{\\ \\textbf{if}\\ } } [ a_1(\\overline{x})]\\to [ b_1(\\overline{x})]\\land\\dots\\land    [ a_m(\\overline{x})]\\to [ b_m(\\overline{x})]\\ ] ] be a rule in @xmath53 .",
    "we have to define a natural transformation @xmath663 where @xmath664 is the subequalizer functor . using the construction of section  [ sec : tmrl ] and the fact that @xmath665 and @xmath666 , @xmath424",
    ", it follows that @xmath667 is a subcategory of @xmath668 and that @xmath669 is just the restriction of the corresponding @xmath670",
    ". then we can define @xmath671 simply by restricting @xmath672 , which is obviously a natural transformation , and this finishes our construction of @xmath24 as an @xmath53-system .",
    "let us now move to the definition of @xmath37 and the proof that it is an @xmath53-homomorphism .",
    "@xmath37 is simply the inclusion functor . if @xmath652 and @xmath656 , then @xmath673 so @xmath37 is a @xmath0-algebra homomorphism .    for a rewrite rule @xmath674\\to [ t'(\\overline{x } ) ] { \\textup{\\ \\textbf{if}\\ } } [ a_1(\\overline{x})]\\to [ b_1(\\overline{x})]\\land\\dots\\land    [ a_m(\\overline{x})]\\to [ b_m(\\overline{x})]$ ] in @xmath6 , we have to show that the natural transformation @xmath675 is equal to @xmath676 .",
    "let @xmath677 . regarding @xmath678 , we only need to know that @xmath679 .",
    "now , @xmath680 so @xmath37 is an @xmath53-homomorphism .",
    "we already know that @xmath24 is an @xmath53-system and that @xmath37 is an @xmath53-homomorphism ; the only missing thing is the equalizer property .",
    "let then @xmath681 be an @xmath53-homomorphism such that @xmath682 ; we have to find a unique @xmath683 such that @xmath684 . as @xmath37 is",
    "the inclusion functor the uniqueness is clear , because the only possibility for all objects @xmath105 and arrows @xmath685 in @xmath686 is @xmath687 and @xmath688 .",
    "it remains to prove that this is a valid definition .",
    "first , because of the equality @xmath689 the image of @xmath493 is included in @xmath24 and @xmath629 is well - defined ; as @xmath493 is a functor , so is @xmath629 . given @xmath652 and @xmath690",
    ", we have @xmath691 and @xmath629 is a @xmath0-algebra homomorphism .",
    "finally , if @xmath674\\to [ t'(\\overline{x } ) ] { \\textup{\\ \\textbf{if}\\ } } [ a_1(\\overline{x})]\\to [ b_1(\\overline{x})]\\land\\dots\\land    [ a_m(\\overline{x})]\\to [ b_m(\\overline{x})]$ ] is a rewrite rule in @xmath6 and @xmath692 is an object of @xmath693 , then @xmath694 and we have @xmath695 .",
    "note that , in the above proof , the equalizer @xmath24 is a model of all the rewrite rules that @xmath642 satisfies .",
    "therefore the result is still valid when @xmath53-*sys * is replaced by the category @xmath696 for some set @xmath6 of rewrite rules in the institution @xmath596 .",
    "since an equivalence of categories preserves limits , we have :    [ institution1:prop ] @xmath511 is not embeddable in @xmath596 .",
    "let @xmath80 be the crwl - theory defined at the beginning of this section .",
    "it has been shown that @xmath602 does not have all equalizers , whereas @xmath601 has , regardless of the actual definition of @xmath697 .",
    "therefore , there can not exist an equivalence of categories @xmath698 .    what about the other way around ?",
    "can we embed @xmath596 in @xmath511 ? when we began preparing this work our intuition was that we would be able to view crwl as a `` sublogic '' of rl in the first place , but also that the converse would not be true .",
    "the previous discussion has shown that our intuition was wrong about the first point and our goal now is to deal with the second .    in order to prove that rl can not be embedded in crwl we have to find an rl - theory @xmath80 such that @xmath699 has a categorical property that no category of models in crwl has . in order to do that , note that for any crwl - theory @xmath80 there exists a crwl - algebra @xmath700 with an infinite number of automorphisms .",
    "simply consider @xmath394 given by @xmath701 with @xmath702 , @xmath703 , the image of all functions associated to constructor symbols to be @xmath704 , and the corresponding one for all defined function symbols to be @xmath454 .",
    "this way @xmath394 is clearly a crwl - algebra , satisfies all conditional rewrite rules , and the set @xmath705 , where @xmath706 is an infinite family of automorphisms of @xmath394 . on the other hand , in rl , if @xmath53 is the rl - theory given by @xmath707 then , for all @xmath53-systems @xmath405 , the equality @xmath708 , where @xmath709 is a constant functor , forces @xmath405 to be a category with just one object and one arrow , and no infinite family of homomorphisms can exist . therefore ( as an equivalence of categories is full and faithful ) , @xmath710 is not categorically equivalent to @xmath711 , whatever @xmath697 might be , and we have :    [ institution2:prop ] @xmath596 is not embeddable in @xmath511 .",
    "let us note that propositions  [ institution1:prop ] and [ institution2:prop ] still hold even if the general semantics of rl is replaced by the preorder semantics mentioned on page  .",
    "on the other hand , maps of institutions could be given for the trivial semantics in which either everything or nothing can be proven in both logics .",
    "the main outcome of the research carried out in this paper has been the clarification of the relationship between rl and crwl .",
    "both logics have been proved to be expressive enough to simulate deduction in each other in a simple way , though resorting to binary predicates . on the other hand ,",
    "the results on institutions have shown that neither can rl be considered as a sublogic of crwl , nor can crwl with respect to rl .    during the preparation of this work",
    "we have been forced to take a close look at the notions of entailment system and institution , and the difficulties we have found have shown us that intuition can be misleading in this field .",
    "the conclusion we have reached is that it would be very convenient to develop some kind of generalization of these concepts .",
    "one reason supporting this claim is the fact that , although it seems clear that crwl should fit within the framework of entailment systems , the lack of the transitivity property forbids it to be considered so . in addition , there have been several occasions wherein we have had to make a distinction between two types of sentences within the same logic .",
    "the most outstanding case was that of labeled and unlabeled rewrite rules in rl , but we should also emphasize that rules in crwl - theories are a restricted class of the more general class of reduction statements .",
    "what all these examples have in common is that sentences belonging to a theory are given a different treatment from the rest of sentences and , with the current definitions of entailment system and institution , there is no way of taking this distinction into account .    finally ,",
    "though not presented in the paper due to lack of space , the results in section  [ rsl : sec ] can be used to show that crwl is _ reflective _ @xcite .",
    "intuitively , this property means that the logic can reason about itself and has been fruitfully exploited in rl in the design of programs ; thus , an interesting open line of research consists in the study of ways by which reflection can be exploited in crwl .",
    "the author warmly thanks narciso mart - oliet , mario rodrguez - artalejo , and jos meseguer for their help in the preparation of this work .    \\2001 . a general framework for lazy functional logic programming with algebraic polymorphic types .",
    "_ 1 , _  2 , 185245 .",
    "centre de recherches mathmatiques .    , giovannetti , e. , and moiso , c. 1988 .",
    "narrowing vs. sld - resolution .",
    "_ 59 _ , 323",
    ".    \\1998 .",
    "the rewriting logic institution .",
    "tech . rep .",
    "9801 , ludwig - maximilians - universitt mnchen , institut fr informatik .",
    "logical foundations of cafeobj .",
    "_ 285 , _  2 , 289318 .",
    "institutions : abstract model theory for specification and programming .",
    "_ 39 , _  1 , 95146 .",
    "institution morphisms .",
    "_ 13 , _  3 - 5 , 274307 .",
    ", hortal - gonzlez , m.  t. , lpez - fraguas , f.  j. , and rodrguez - artalejo , m. 1999 .",
    "an approach to declarative programming based on a rewriting logic .",
    "_ 40 _ , 4787 .",
    ", hortal - gonzlez , m.  t. , and rodrguez - artalejo , m. 2001 .",
    "polymorphic types in functional logic programming .",
    "_ 2001 , _  1 .",
    "special issue 1 , http://danae.uni-muenster.de/lehre/kuchen/jflp .",
    "\\1970 . subequalizers .",
    "_ 13 _ , 337349 .    2002a . rewriting logic as a logical and semantic framework . in _ handbook of philosophical logic",
    "second edition _",
    ", d.  gabbay , ed .",
    "vol .  9 .",
    "kluwer academic press , 181 .",
    "2002b . rewriting logic : roadmap and bibliography .",
    "_ 285 , _  2 , 121154 .",
    "general logics . in _",
    "logic colloquium87 _ , h .-",
    "ebbinghaus , j.  fernndez - prida , m.  garrido , d.  lascar , and m.  rodrguez - artalejo , eds .",
    "north - holland , 275329 .",
    "\\1990 . rewriting as a unified model of concurrency . tech . rep .",
    "sri - csl-90 - 02 , sri international , computer science laboratory . feb . revised june 1990 .",
    "conditional rewriting logic as a unified model of concurrency .",
    "_ 96 , _  1 , 73155 .",
    "membership algebra as a logical framework for equational specification . in _ recent trends in algebraic development techniques , 12th international workshop , wadt97 , tarquinia , italy , june 3 - 7 , 1997 , selected papers _",
    ", f.  parisi - presicce , ed .",
    "lecture notes in computer science , vol . 1376 .",
    "springer - verlag , 1861 .",
    "\\2000 . rewriting logic and maude : concepts and applications . in _ rewriting techniques and applications , 11th international conference , rta 2000 , norwich , uk , july 1012 , 2000 , proceedings _ ,",
    "l.  bachmair , ed .",
    "lecture notes in computer science , vol .",
    "springer - verlag , 126 .",
    "\\1996 . modelling conditional rewriting logic in structured categories . in _",
    "proceedings first international workshop on rewriting logic and its applications , wrla96 , asilomar , california , september 36 , 1996 _ , j.  meseguer , ed .",
    "electronic notes in theoretical computer science , vol .  4 .",
    "elsevier , 2034 . http://www.elsevier.com/locate/entcs/volume4.html .",
    "modularidad en programacin lgico - funcional de primer orden .",
    "thesis , universidad de mlaga , spain .    \\2001 .",
    "relating meseguer s rewriting logic and the constructor - based rewriting logic . m.s .",
    "thesis , facultad de matemticas , universidad complutense de madrid . http://maude.cs.uiuc.edu/papers .    , sen , k. , and mart - oliet , n. 2002 .",
    "an executable specification of asynchronous pi - calculus . in _",
    "proceedings fourth international workshop on rewriting logic and its applications , wrla02 , pisa , italy , september 1921 , 2002 _ , f.  gadducci and u.  montanari , eds .",
    "electronic notes in theoretical computer science , vol .",
    "elsevier .",
    "tcnicas de especificacin formal de sistemas orientados a objetos basadas en lgica de reescritura .",
    "thesis , universidad complutense de madrid , spain .    \\2002 . implementing ccs in maude2 . in _",
    "proceedings fourth international workshop on rewriting logic and its applications , wrla02 , pisa , italy , september 1921 , 2002 _ , f.  gadducci and u.  montanari , eds .",
    "electronic notes in theoretical computer science , vol .",
    "@xmath96 is an entailment system .",
    "the fact that composition of signature morphisms is associative ( for equational logics in general , and for our unsorted and unconditional case in particular ) is all that is needed to check that  is a category and _ sen _  a functor .",
    "regarding the properties that @xmath11 must satisfy :    1 .   reflexivity : by * replacement * ( combined with * implication introduction * for conditional rules ) .",
    "monotonicity : immediate by the definition of the entailment relation .",
    "transitivity : assume @xmath712 for all @xmath399 and @xmath713 .",
    "the easiest way to prove @xmath714 is by resorting to the soundness and completeness of the rl - calculus .",
    "let @xmath405 be a @xmath6-system , so @xmath715 for all @xmath399 .",
    "therefore @xmath6 can also be considered a @xmath716-system and then @xmath717 .",
    "@xmath11-translation : suppose @xmath4 .",
    "given a theory morphism @xmath493 , it can be proved by induction on the derivation that @xmath718 .",
    "the only non - trivial case is the one corresponding to * replacement * and we illustrate it with an unconditional rule .",
    "if , for some @xmath92 \\to [ t'(\\overline{x } ) ] \\in \\gamma$ ] , the last step in the derivation of @xmath719 is @xmath720\\to [ w'_1 ] \\;\\;\\ ; \\dots \\;\\;\\ ;            [ w_n ] \\to [ w'_n]}{\\displaystyle [ t(\\overline{w}/\\overline{x } ) ] \\to            [ t'(\\overline{w'}/\\overline{x})]}}\\ ] ] then , by the induction hypothesis , @xmath721 \\to [ w'_i])$ ] for @xmath49 , and , since @xmath722\\to [ t ' ] ) = [ h(t ) ] \\to [ h(t')]$ ] belongs to @xmath723 , we can build a derivation for @xmath724 \\to            [ t'(\\overline{w'}/\\overline{x})])$ ] from @xmath723 by applying *",
    "replacement*.@xmath195    given any rl - theory @xmath243 , and @xmath353 : @xmath245\\to[r ] & \\iff   & ( \\exists l'\\in[l],\\exists r'\\in [ r ] ) \\;\\ ;   \\beta(t)\\vdash_\\mathrm{crwl } r(l',r')\\to{\\textit{true}}\\\\ & \\iff & ( \\forall l'\\in[l],\\forall r'\\in [ r ] ) \\;\\ ;   \\beta(t)\\vdash_\\mathrm{crwl } r(l',r')\\to{\\textit{true}}\\end{array}\\ ] ]    by propositions  [ prop : rlincrwlhalf ] and [ prop : rlincrwlmainhalf ] , it is enough to see that if @xmath725\\to [ r]$ ] then @xmath726\\to [ r]$ ] .",
    "the easiest way of proving this implication is by using the completeness of the rl - calculus .",
    "note that , since @xmath332 does not belong to @xmath0 ( and hence it appears neither in @xmath37 nor in @xmath6 ) , a model of @xmath727 is just a model of @xmath728 together with an interpretation for the constant @xmath332 , and therefore either both satisfy @xmath214\\to [ r]$ ] or none does .",
    "but then @xmath729 \\to [ r ] & \\iff & ( \\sigma , e,\\gamma ) \\models [ l ] \\to [ r ] \\\\ & \\iff & ( \\sigma\\cup\\{{\\textit{true}}\\},e,\\gamma ) \\models [ l ] \\to [ r ] \\\\ & \\iff & ( \\sigma\\cup\\{{\\textit{true}}\\},e,\\gamma ) \\vdash [ l ] \\to [ r ]   \\end{array}\\ ] ] whence @xmath730 \\to [ r]$ ] follows ."
  ],
  "abstract_text": [
    "<S> meseguer s rewriting logic and the rewriting logic crwl are two well - known approaches to rewriting as logical deduction that , despite some clear similarities , were designed with different objectives . here </S>",
    "<S> we study the relationships between them , both at a syntactic and at a semantic level . </S>",
    "<S> even though it is not possible to establish an entailment system map between them , both can be naturally simulated in each other . </S>",
    "<S> semantically , there is no embedding between the corresponding institutions . along the way </S>",
    "<S> , the notions of entailment and satisfaction in meseguer s rewriting logic are generalized . </S>",
    "<S> we also use the syntactic results to prove reflective properties of crwl .    rewriting logic , constructor - based rewriting logic , institutions </S>"
  ]
}
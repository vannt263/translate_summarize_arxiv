{
  "article_text": [
    "in this paper , we consider network coding for multiple unicast sessions over directed acyclic graphs . in general , non - linear network coding should be considered in order to achieve the whole rate region of network coding @xcite . yet , there exist networks , for which routing is sufficient to achieve the whole rate region .",
    "we refer to these networks as _ routing - optimal _ networks .",
    "we attempt to answer the following questions : 1 ) what are the distinct topological features of these networks ?",
    "2 ) why do these features make a network routing - optimal ? the answers to these questions will not only explain which kind of networks can or can not benefit from network coding , but will also deepen our understanding on how network topologies affect the rate region of network coding .",
    "a major challenge is that there is currently no effective method to calculate the rate region of network coding .",
    "some researchers proposed to use information inequalities to approximate the rate region @xcite .",
    "however , except for very simple networks , it is very difficult to use this approach since there is potentially an exponential number of inequalities that need to be considered .",
    "@xcite provides a formula to calculate the rate region by finding all possible entropy functions , which are vectors of an exponential number of dimensions , thus very difficult to solve even for simple networks .    in this paper",
    ", we employ a graph theoretical approach in conjunction with information inequalities to identify topological features of routing - optimal networks .",
    "our high - level idea is as follows .",
    "consider a network code .",
    "for each unicast session , we choose a cut - set @xmath0 between source and sink , and a set @xmath1 of paths from source to sink such that each path in @xmath1 passes through an edge in @xmath0 .",
    "since the information transmitted from the source is totally contained in the information transmitted along the edges in @xmath0 , we can think of distributing the source information along the edges in @xmath0 ( details will be explained later ) .",
    "moreover , we consider a routing scheme in which the traffic transmitted along each path @xmath2 is exactly the source information distributed over the edge in @xmath0 that is traversed by @xmath3 .",
    "such a routing scheme achieves the same rate vector as the network code .",
    "however , since the edges might be shared among multiple unicast sessions , such a routing scheme might not satisfy the edge capacity constraints .",
    "this suggests that the cut - sets and path - sets we choose for the unicast sessions should have special features",
    ". these are essentially the features we are looking for to describe routing - optimal networks .",
    "we make the following contributions :    * we identify a class of networks , called _ information - distributive _ networks , which are defined by three topological features .",
    "the first two features capture how the edges in the cut - sets are connected to the sources and the sinks , and the third feature captures how the paths in the path - sets overlap with each other . due to these features , given a network code , there is always a routing scheme such that it achieves the same rate vector as the network code , and the traffic transmitted through the network is exactly the source information distributed over the cut - sets between the sources and the sinks .",
    "* we prove that if a network is information - distributive , it is routing - optimal .",
    "we also show that the converse is not true .",
    "this indicates that the three features might be too restrictive in describing routing - optimal networks .",
    "* we present examples of information - distributive networks taken from the index coding problem @xcite and single unicast with hard deadline constraint .",
    "we expect that our work will provide helpful insights towards characterizing all possible routing - optimal networks .",
    "the network is represented by an acyclic directed multi - graph @xmath4 , where @xmath5 and @xmath6 are the set of nodes and the set of edges in the network respectively .",
    "edges are denoted by @xmath7 , or simply by @xmath8 , where @xmath9 and @xmath10 .",
    "each edge represents an error - free and delay - free channel with capacity rate of one .",
    "let @xmath11 and @xmath12 denote the set of incoming edges and the set of outgoing edges at node @xmath13 .",
    "there are @xmath14 unicast sessions in the network .",
    "the @xmath15th unicast session is denoted by a tuple @xmath16 , where @xmath17 and @xmath18 are the source and the sink of @xmath19 respectively .",
    "the message sent from @xmath17 to @xmath18 is assumed to be a uniformly distributed random variable @xmath20 with finite alphabet @xmath21 , where @xmath22 is the source information rate at @xmath17 .",
    "all @xmath20 s are mutually independent .",
    "given @xmath23 , denote @xmath24 .",
    "we assume @xmath25 for all @xmath26 .",
    "let @xmath27 denote the minimum capacity of all cut - sets between two nodes @xmath28 and @xmath13 .",
    "given two nodes @xmath29 , let @xmath30 denote the set of directed paths from @xmath28 to @xmath13 .",
    "the _ routing domain _ of @xmath19 , denoted by @xmath31 , is the sub - graph induced by the edges of the paths in @xmath32 .",
    "a _ routing scheme _ is a transmission scheme where each node only replicates and forwards the received messages onto its outgoing edges .",
    "define the following linear constraints :    & _ p _",
    "s_id_i f_i(p ) r_i 1i k [ eqroutingcond1 ] + & ^k_i=1 _ p _ s_id_i , ep f_i(p ) 1 e e [ eqroutingcond2 ]    where @xmath33 represents the amount of traffic routed through path @xmath3 for @xmath19 .",
    "a rate vector @xmath34 is achievable by routing scheme if there exist @xmath35 s such that ( [ eqroutingcond1 ] ) and ( [ eqroutingcond2 ] ) are satisfied .",
    "the rate region of routing scheme , denoted by @xmath36 , is the set of all rate vectors achievable by routing scheme .",
    "a network coding scheme is defined as follows : @xcite    [ defnc ] an @xmath37 _ network code _ with block length @xmath38 is defined by :    1 .   for each @xmath26 and @xmath39 , a local encoding function : @xmath40 ; 2 .   for each @xmath41 and @xmath42 , a local encoding function : @xmath43 ; 3 .   for each @xmath26 , a decoding function : @xmath44 ; 4 .   for each @xmath26 ,",
    "the decoding error for @xmath19 is @xmath45 , where @xmath46 is the value of @xmath47 as a function of @xmath48 .",
    "given @xmath49 , let @xmath50 , where @xmath51 is the value of @xmath52 as a function of @xmath48 , denote the random variable transmitted along @xmath53 in a network code",
    ". for a subset @xmath54 , denote @xmath55 .",
    "[ defachievable ] a rate vector @xmath56 is _ achievable _ by network coding if for any @xmath57 , there exists for sufficiently large @xmath38 , an @xmath37 network code such that the following conditions are satisfied :    & _ e 1 + ee [ eqncachieve1 ] + & r_i r_i - 1i k [ eqncachieve2 ] + & _ i 1i k [ eqncachieve3 ]    the _ capacity region _ achieved by network coding , denoted by @xmath58 , is the set of all rate vectors @xmath59 achievable by network coding .    given a network code that satisfies ( [ eqncachieve1])-([eqncachieve3 ] ) , the following inequalities must hold :    & h(u_e ) ( _ e ) 1 + ee [ eqncachievei1 ] + & h(y_i ) = ( 2^nr_i ) r_i r_i - 1i k [ eqncachievei2 ] + & i(y_i;u_(d_i ) ) ( 1-)(r_i- ) - 1i k [ eqncachievei3 ]    where ( [ eqncachievei3 ] ) is due to fano s inequality :    & i(y_i;u_(d_i ) ) ( h(y_i ) - _ i |_i| - 1 ) + = & ( 1 - _ i ) h(y_i ) - ( 1- ) ( r_i - ) -      since routing scheme is a special case of network coding , @xmath60 .    a network is said to be _ routing - optimal _",
    ", if @xmath61 , _",
    "i.e. ,  _ for such network , routing is sufficient to achieve the whole rate region of network coding .",
    "in this section , we present a class of routing - optimal networks , called _ information - distributive _ networks .",
    "we first use examples to illustrate the topological features of these networks , and show why they make the networks routing - optimal .",
    "then , we define these networks more rigorously .",
    "[ ex1 ] we start with the simplest case of single unicast . it is well known that for this case , a network is always routing - optimal @xcite . in this example , we re - investigate this case from a new perspective in order to highlight some of the important features that make it routing optimal .",
    "let @xmath62 , and @xmath63 is a cut - set between @xmath64 and @xmath65 .",
    "assume @xmath66 .",
    "therefore , for @xmath67 ( @xmath68 ) , there exists a network code such that ( [ eqncachieve1])-([eqncachieve3 ] ) are satisfied . in the followings ,",
    "all the random variables are defined in this network code .",
    "one important feature of this network is that each path from @xmath64 to @xmath65 must pass through at least an edge in @xmath0 .",
    "thus , @xmath69 is a function of @xmath70 .",
    "the following inequality holds :    [ eqex1determine ] i(y_1;u_(d_1 ) ) i(y_1;u_c )    the following equation holds :    [ eqex1distr ] i(y_1;u_c ) = ^m_j=1 i(y_1;u_e_j | u_\\{e_1,,e_j-1 } )    intuitively , we can interpret ( [ eqex1distr ] ) as follows : @xmath71 is the amount of information about @xmath72 that can be obtained from @xmath73 , @xmath74 the amount of information about @xmath72 that can be obtained from @xmath75 , excluding those already obtained from @xmath73 , and so on .",
    "hence , ( [ eqex1distr ] ) can be seen as a `` distribution '' of the source information over the edges in @xmath0 . moreover , for each @xmath76 , we have :    [ eqex1cap ] i(y_1 ; u_e_j | u_\\{e_1,,e_j-1 } ) h(u_e_j )    another important feature is that due to menger s theorem , there exist @xmath77 edge - disjoint paths , @xmath78 , from @xmath64 to @xmath65 such that @xmath79 for @xmath76 . due to this feature",
    ", we can construct a routing scheme by simply letting each @xmath80 transmit the information distributed on @xmath81 :    [ eqex1routing ] f^n , k(p ) =    i(y_1;u_e_j|u_\\{e_1,,e_j-1 } ) & p = p_j , 1j m + 0 & .",
    "clearly , due to ( [ eqncachievei1 ] ) and ( [ eqex1cap ] ) , the above routing scheme satisfies the following inequalities :    [ eqex1routingcap ] & f^n , k(p_j ) h(u_e_j ) 1 +    moreover , due to ( [ eqncachievei3])-([eqex1distr ] ) , we have :    [ eqex1routingrate ] & _",
    "p_s_1d_1 f^n , k(p ) = ^m_j = 1 f^n , k(p_j ) = i(y_1;u_c ) + & i(y_1;u_(d_1 ) ) ( 1- ) ( r_i - ) -    since @xmath82 have an upper bound ( see ( [ eqex1routingcap ] ) ) , there exists a sub - sequence @xmath83 such that each sequence @xmath84 approaches a finite limit .",
    "define the following routing scheme :    f_1(p ) =    _ l f^n_l , k_l(p ) & p = p_j ( 1j m ) ; + 0 & .",
    "due to ( [ eqex1routingcap ] ) and ( [ eqex1routingrate ] ) , the above routing scheme satisfies ( [ eqroutingcond1 ] ) and ( [ eqroutingcond2 ] ) .",
    "hence , @xmath85 , which implies @xmath86 .",
    "therefore , the network is routing - optimal .",
    "@xmath87    as shown above , two features are essential in making a network with single - unicast routing - optimal .",
    "the first feature is the existence of a cut - set such that each path from the source to the sink must pass through an edge in the cut - set . due to this feature ,",
    "the source information contained in @xmath69 can be completely obtained from the messages transmitted through the cut - set @xmath0 ( see ( [ eqex1determine ] ) ) .",
    "the second feature is the existence of edge - disjoint paths @xmath78 , each of which passes through exactly one edge in @xmath0 .",
    "due to this feature , a routing scheme can be constructed such that the traffic transmitted along the paths @xmath78 is exactly the information distributed on the edges in @xmath0 ( see ( [ eqex1routing ] ) ) .",
    "these two features together guarantee that the routing scheme achieves the same rate as network coding ( see ( [ eqex1routingcap ] ) , ( [ eqex1routingrate ] ) ) .",
    "however , extending these features to multiple unicast sessions is not straightforward .",
    "one difference from single unicast is that @xmath88 may not be a function of @xmath70 , where @xmath0 is a cut - set between @xmath17 and @xmath18 , and thus ( [ eqex1determine ] ) might not hold .",
    "another difference is that the information from multiple unicast sessions might be distributed on an edge , and thus ( [ eqex1cap ] ) might not hold .",
    "moreover , the paths for multiple unicast sesssions might overlap with each other , and thus ( [ eqex1routingcap ] ) might not hold .",
    "these differences suggest that the cut - sets and the paths , over which a routing scheme is to be constructed , should have additional features in order for the resulting routing scheme to achieve the same rate vector as network coding .",
    "we use an example to illustrate some of these features .",
    "[ ex2 ] consider the network shown in fig .",
    "[ figex0twounicast]a .",
    "consider an arbitrary rate vector @xmath89 .",
    "therefore , for @xmath90 ( @xmath68 ) , there exists a network code that satisfies ( [ eqncachieve1])-([eqncachieve3 ] ) . in the sequel ,",
    "all the random variables are defined in this network code .    for @xmath91",
    ", we choose a cut - set @xmath92 between @xmath64 and @xmath65 , and a set of paths @xmath93 that pass through @xmath94 respectively ; for @xmath95 , we choose a cut - set @xmath96 between @xmath97 and @xmath98 , and a set of paths @xmath99 that pass through @xmath100 respectively .",
    "we first investigate @xmath101 .",
    "one important feature is that each path from @xmath97 to @xmath65 passes through at least an edge in @xmath102 .",
    "thus , @xmath102 is also a cut - set between @xmath103 and @xmath65 , and @xmath69 is a function of @xmath104 .",
    "hence , we have :    [ eqex2determine1 ] i(y_1;u_(d_1 ) ) i(y_1;u_c_1 )    moreover , @xmath105 is a cut - set between @xmath103 and @xmath98 , and @xmath106 is a function of @xmath72 .",
    "hence @xmath107 is a function of @xmath108 , which implies :    [ eqex2determine2 ] i(y_2;u_(d_2 ) | y_1 ) i(y_2;u_c_2 | y_1 )    we distribute the source information over @xmath101 as follows :    [ eqex2distr ]    & i(y_1;u_c_1 ) = i(y_1;u_e_1 ) + i(y_1;u_e_2 | u_e_1 ) + & + i(y_1;u_e_3|u_\\{e_1,e_2 } ) + &",
    "i(y_2;u_c_2 | y_1 ) = i(y_2;u_e_2 | y_1 ) + i(y_2;u_e_3 | y_1 , u_e_2 )    another feature about @xmath101 is that edge @xmath109 is connected to only one source @xmath64 , and thus @xmath73 is a function of @xmath72 . as shown below , this feature guarantees that the information distributed on an edge @xmath110 is completely contained in @xmath111 .",
    "first , for @xmath109 , it can be easily seen that :    [ eqex2cap1 ] i(y_1;u_e_1 ) h(u_e_1 )    for @xmath112 , we have :    [ eqex2cap2 ]    & i(y_1 ; u_e_2 | u_e_1 ) + i(y_2 ; u_e_2 | y_1 ) + & i(y_1 ; u_e_2 | u_e_1 ) + i(y_2 ; u_e_2 | y_1 , u_e_1 ) + = & i(y_1,y_2 ; u_e_2 | u_e_1 ) h(u_e_2 )    where @xmath113 is due to the fact that @xmath73 is a function of @xmath72 , and thus , @xmath114 .",
    "similarly , for @xmath115 , we have :    [ eqex2cap3 ]    & i(y_1 ; u_e_3 | u_\\{e_1,e_2 } ) + i(y_2 ; u_e_3 | y_1 , u_e_2 ) + & i(y_1 ; u_e_3 | u_\\{e_1,e_2 } ) + i(y_2 ; u_e_3 | y_1 , u_\\{e_1,e_2 } ) + = & i(y_1,y_2 ; u_e_3 | u_\\{e_1,e_2 } ) h(u_e_3 )    where @xmath116 is again due to the fact that @xmath73 is a function of @xmath72 .",
    "next , we investigate @xmath117 .",
    "one important feature is that if @xmath118 overlaps with @xmath119 , @xmath120 .",
    "for example , @xmath121 overlaps with @xmath122 , and @xmath123 .",
    "this feature ensures that the information distributed over @xmath101 can be further distributed over the paths in @xmath124 . to see this , we construct the following routing scheme :    & f^n , k_1(p ) =    i(y_1;u_e_j| u_\\{e_1,,e_j-1 } ) & p = p_1j,1j 3 + 0 & .",
    "+ & f^n , k_2(p ) =    i(y_2;u_e_2 | y_1 ) & p = p_21 ; + i(y_2;u_e_3 | y_1 , u_e_2 ) & p = p_22 ; + 0 & .    due to",
    "( [ eqex2cap1])-([eqex2cap3 ] ) , we can derive that for each @xmath110 ,    [ eqex2routingcap ] ^2_i=1 _ p_s_id_i , ep f^n , k_i(p ) h(u_e ) 1 +    for @xmath125 , we have :    & ^2_i=1 _ p_s_id_i , e_4p f^n , k_i(p ) + = & f^n , k_1(p_12 ) + f^n , k_2(p_21 ) h(u_e_2 ) 1 +    likewise , we can prove that ( [ eqex2routingcap ] ) holds for all the other edges of the paths in @xmath126 .",
    "due to ( [ eqex2determine1])-([eqex2distr ] ) , the following inequalities hold for @xmath127    [ eqex2routingrate ] _",
    "p_s_id_i f^n , k_i(p ) ( 1 - ) ( r_i- ) +    by ( [ eqex2routingcap ] ) , there exists a sub - sequence @xmath83 such that for all @xmath128 and @xmath127 , the sub - sequence @xmath129 approaches a finite limit . define a routing scheme :    f_i(p ) =    _ l f^n_l , k_l_i(p ) & p _",
    "i , i=1,2 ; + 0 &    due to ( [ eqex2routingcap ] ) and ( [ eqex2routingrate ] ) , @xmath35 satisfies ( [ eqroutingcond1 ] ) and ( [ eqroutingcond2 ] ) .",
    "hence , @xmath130 , and @xmath86 .",
    "the network is routing - optimal .",
    "@xmath87      in this subsection , we present the definition of information - distributive networks . similarly to single unicast , for each unicast session @xmath19 ( @xmath26 ) , we choose a cut - set @xmath131 between @xmath17 and @xmath18 such that @xmath132 , and a set of paths @xmath133 from @xmath17 to @xmath18 .",
    "the collection of these cut - sets , denoted by @xmath134 , is called a _ cut - set sequence _ , and the collection of these path - sets , denoted by @xmath135 ,",
    "is called a _ path - set sequence_. for instance , in example [ ex2 ] , we choose a cut - set sequence @xmath136 , where @xmath92 is a cut - set between @xmath64 and @xmath65 , and @xmath96 is a cut - set between @xmath97 and @xmath98 , and a path - set sequence @xmath137 , where @xmath138 is a path - set from @xmath64 to @xmath65 , and @xmath139 a path - set from @xmath97 to @xmath98 .",
    "moreover , we arrange the edges in each cut - set in @xmath140 in some ordering .",
    "for instance , in example [ ex2 ] , we arrange the edges in @xmath102 in the ordering @xmath141 , and the edges in @xmath142 in the ordering @xmath143 .",
    "each such ordering is called a permutation of the edges in the corresponding cut - set .",
    "the collection of these permutations , denoted @xmath144 , is called a _ permutation sequence_. for @xmath145 , let @xmath146 denote the subset of edges before @xmath53 in @xmath147 . for @xmath49 , define @xmath148 , and @xmath149 the largest index of the source to which @xmath150 is connected .",
    "the first feature is described below .",
    "next , we formalize the three features we have shown in example [ ex2 ] . the first feature is described below .",
    "[ defcumulative ] given a cut - set sequence @xmath140 , if for all @xmath151 , each path from @xmath152 to @xmath18 must pass through an edge in @xmath131 , we say that @xmath140 is _",
    "cumulative_.    this feature guarantees that the source information contained in the incoming messages at each sink @xmath18 can be completely obtained from @xmath153 .",
    "[ lemmadetermine ] consider a network code as defined in definition [ defnc ] .",
    "if @xmath140 is a cumulative cut - set sequence , then for each @xmath26 , @xmath20 is a function of @xmath154 , and the following inequality holds :    [ eqdetermine ] i(y_i ; u_(d_i ) | y_1:i-1 ) i(y_i ; u_c_i | y_1:i-1 )    see appendix [ appinfodistr ] .",
    "given a cumulative cut - set sequence @xmath140 and a permutation sequence @xmath155 for @xmath140 , we can distribute the source information @xmath20 over the edges in @xmath131 as follows :    [ eqinfodistr ] i(y_i ; u_c_i | y_1:i-1 ) = _ ec_i i(y_i ; u_e | y_1:i-1 , u_t_i(e ) )    the second feature is presented below . without loss of generality , let @xmath156 , where @xmath157 .",
    "[ defdistributive ] given a cut - set sequence @xmath140 , we say that it is _ distributive _ if there exists a permutation sequence @xmath155 for @xmath140 such that for each @xmath158 , the following conditions are satisfied : for all @xmath159 ,    & ( e ) n_k et_n_j+1(e ) - t_n_j(e ) [ eqdistr1 ] + & ( e ) n_j+1 - 1 et_n_j(e ) - t_n_j+1(e ) [ eqdistr2 ]    as shown in example [ ex2 ] , let @xmath141 , and @xmath143 . for @xmath115 , @xmath160 , @xmath161 , and thus , ( [ eqdistr1 ] ) is trivially satisfied ; @xmath162 , @xmath163 , and ( [ eqdistr2 ] ) is satisfied .",
    "similarly , we can verify other edges .",
    "hence , @xmath140 is distributive .",
    "the above two features ensure that the information from multiple unicast sessions that is distributed on an edge @xmath164 can be completely obtained from @xmath111 .",
    "[ lemmainfodistr ] consider a network code as defined in definition [ defnc ] .",
    "given a cumulative cut - set sequence @xmath140 , if @xmath140 is distributive , for each @xmath164 , the following inequality holds :    [ eqtotaldistr ] _",
    "1ik , ec_i i(y_i ; u_e | y_1:i-1 , u_t_i(e ) ) h(u_e )    see appendix [ appinfodistr ] .",
    "the third feature is presented below .",
    "[ defextendable ] given a path - set sequence @xmath165 for @xmath140 , we say that @xmath165 is _ extendable _ , if for all @xmath151 , @xmath166 and @xmath167 such that @xmath168 overlaps with @xmath169 , @xmath170 .",
    "as shown in example [ ex2 ] , let @xmath171 . clearly , we have @xmath172 , @xmath173 , and @xmath174 , @xmath175 .",
    "thus , @xmath165 is extendable .",
    "[ definfodistributive ] a network with multiple unicast sessions is said to be _ information - distributive _ , if there exist a cumulative and distributive cut - set sequence @xmath140 , and an extendable path - set sequence @xmath165 for @xmath140 in the network .",
    "as shown in the next theorem , the three features together guarantee that the network is routing - optimal .",
    "[ thinfodistr ] if a network is information - distributive , it is routing - optimal .",
    "see appendix [ appinfodistr ] .",
    "consider the network shown in fig .",
    "[ figex0threeunicast ] .",
    "define the following cut - sets :    & c_1=\\{(s_,v_1 ) , ( v_2,v_3 ) , ( v_4,v_5 ) } + & c_2=\\{(v_2,v_3 ) , ( v_4,v_5 ) } + & c_3=\\{(v_6,v_7 ) , ( s_3,d_3 ) }    define @xmath176 .",
    "define the following paths :    & p_11=\\{(s_1,v_1 ) , ( v_1,d_1 ) } + & p_12=\\{(s_1,v_2 ) , ( v_2,v_3 ) , ( v_3,d_1 ) } + & p_13=\\{(s_1,v_4 ) , ( v_4,v_5 ) , ( v_5,d_1 ) } + & p_21=\\{(s_2,v_2 ) , ( v_2,v_3 ) , ( v_3,d_2 ) } + & p_31=\\{(s_3,v_6 ) , ( v_6,v_7 ) , ( v_7,d_3 ) } + & p_33=\\{(s_3,d_3 ) }    define @xmath177,@xmath178,@xmath179 .",
    "it can be verified that @xmath140 is cumulative and distributive , and @xmath165 is extendable .",
    "the network is information - distributive .",
    "we consider a multiple - unicast version of index coding problem @xcite . in this problem , there are @xmath180 terminals @xmath181 , a broadcast station @xmath182 , and @xmath180 source messages @xmath183 , all available at @xmath182 .",
    "all @xmath184 s are mutually independent random variables uniformly distributed over alphabet @xmath185 .",
    "each terminal requires @xmath184 , and has acquired a subset of source messages @xmath186 such that @xmath187 .",
    "@xmath182 uses an encoding function @xmath188 to encode the source messages , and broadcasts the encoded message to the terminals through an error - free broadcast channel .",
    "each @xmath189 uses a decoding function @xmath47 to decode @xmath184 by using the received message and the messages in @xmath186 .",
    "the encoding function @xmath190 and the decoding functions @xmath47 s are collectively called an index code , and @xmath191 is the length of this index code .",
    "the minimum length of an index code is denoted by @xmath192 .",
    "this index coding problem can be cast to a multiple - unicast network coding problem over a network @xmath193 , where @xmath194 , @xmath195 .",
    "the @xmath180 unicast sessions are @xmath196 .",
    "it can be verified that there exists an index code of length @xmath191 , if and only if @xmath197 is achievable by network coding in @xmath198 .",
    "let @xmath199 , @xmath200 .",
    "define @xmath201 and @xmath135 , where @xmath202 . since each @xmath131 contains only one edge",
    ", @xmath140 is distributive .",
    "meanwhile , since all @xmath203 s overlap at @xmath8 , @xmath165 is extendable .    the following theorem states that if the optimal solution to the index coding problem is to let the broadcast station transmit raw packet , _",
    "i.e. ,  _ no coding is needed , then the corresponding multiple - unicast network is information - distributive , and the converse is also true .",
    "[ thindexcode ] @xmath204 if and only if @xmath140 is cumulative , _",
    "@xmath198 is information - distributive .",
    "see appendix [ appproofex ] .    ]",
    "[ exindexcode ] in fig .",
    "[ figindexcode ] , we show an example of @xmath198 , which corresponds to an index coding problem defined by : @xmath205 , @xmath206 , @xmath207 , and @xmath208 . clearly , @xmath140 is cumulative , and thus @xmath209 .",
    "@xmath87      in this example , we consider the network coding problem for a single - unicast session @xmath210 over a network @xmath4 , where each edge @xmath53 is associated with a delay @xmath211 , and each node has a memory to hold received data .",
    "given a directed path @xmath3 , let @xmath212 denote its delay . for @xmath49 , let @xmath213 denote the minimum delay of directed paths from @xmath182 to @xmath150 .",
    "the data transmission in the network proceeds in time slots .",
    "the messages transmitted from @xmath182 is represented by a sequence @xmath214)^k_{t=0}$ ] , where @xmath215 $ ] is a uniformly distributed random variable , and represents the message transmitted from @xmath182 at time slot @xmath216 .",
    "all @xmath215 $ ] s are mutually independent .",
    "we require that each @xmath215 $ ] must be received by @xmath217 within @xmath218 time slots . otherwise , it is regarded as useless , and is discarded .",
    "this problem was first proposed by @xcite@xcite .",
    "recently , it has been shown that network coding can improve throughput by utilizing over - delayed information @xcite .",
    "this problem can be cast to an equivalent network coding problem for multiple unicast sessions .",
    "we construct a time - extended graph @xmath219 as follows : the node set is @xmath220 : 0 \\le t \\le k+\\tau\\}$ ] ; for each @xmath221 and @xmath222 , we add an edge @xmath223=(u[t],v[t+d_e])$ ] to @xmath224 ; for @xmath225 , and @xmath226 , we add @xmath227 edges from @xmath228 $ ] to @xmath229 $ ] , where @xmath227 is the amount of memory available at @xmath28 ; for each @xmath230 , we add @xmath231 edges from @xmath232 to @xmath233 $ ] and @xmath231 edges from @xmath234 $ ] to @xmath235 , where @xmath231 is a sufficiently large integer .",
    "thus , the original single unicast session @xmath210 is cast to @xmath236 unicast sessions @xmath237 over @xmath238 .",
    "let @xmath239 $ ] denote the routing domain for @xmath240 , and @xmath241)$ ] .",
    "it can be seen that each @xmath239 $ ] is simply a time - shifted version of @xmath242 $ ] .",
    "given a subset of edges @xmath243 , define @xmath244=\\{(u[k+t],v[l+t ] ) : ( u[k],v[l])\\in u\\}$ ] .",
    "let @xmath245:1\\le j\\le m\\}$ ] be a cut - set between @xmath246 and @xmath247 such that @xmath248 for @xmath76 , and @xmath249 a set of edge disjoint paths from @xmath246 to @xmath247 such that @xmath250\\in p_j$ ] for @xmath76 .",
    "let @xmath251=\\{p[t ] : p\\in { \\mathcal{p}}\\}$ ] .",
    "we consider the cut - set sequence @xmath252)^k_{t=0}$ ] , and the path - set sequence @xmath253)^k_{t=0}$ ] .",
    "[ lemmadelaycumulative ] @xmath140 is cumulative .",
    "see appendix [ appproofex ] .    given @xmath243 , a _",
    "recurrent _ sequence of @xmath254 is a sequence consisting of all the edges in @xmath254 that are time - shifted versions of the same edge .",
    "$ ] is said to be _ distributive _ if there is a re - indexing of the edges in @xmath255 $ ] such that for each recurrent sequence @xmath256)^k_{j=1}$ ] of @xmath255 $ ] , the following conditions are satisfied :    1 .   for each @xmath257 , if @xmath258\\in c[0]$ ] lies before @xmath259 $ ] , and @xmath260 \\notin c[0]$ ] , then @xmath261 ; 2 .   for each @xmath262 , if @xmath258\\in c[0]$ ] lies before @xmath259 $ ] , and @xmath263 \\notin c[0]$ ] , then @xmath264 .",
    "@xmath1 is said to be _ extendable _ if for all @xmath265 and @xmath266 , e[l]\\in \\tilde{e}$ ] such that @xmath266\\in p_i$ ] and @xmath267\\in p_j$ ] , @xmath268 and @xmath269 .",
    "[ thdelayinfodistributive ] if @xmath255 $ ] is distributive , and @xmath1 is extendable , @xmath238 is information - distributive , and thus is routing - optimal .",
    "see appendix [ appproofex ] .",
    "[ exncdelay ] in fig .",
    "[ figex3net ] , we show an example of single unicast with delay constraint @xmath270 . in fig .",
    "[ figex3routingdomain ] , we show the routing domain @xmath242 $ ] for @xmath271 .",
    "let @xmath255=\\{e_8[5],e_6[2],e_8[6]\\}$ ] , and @xmath272 , where @xmath273 are marked as black dashed lines in fig .",
    "[ figex3routingdomain ] .",
    "it can be verified that @xmath255 $ ] is distributive , and @xmath1 is extendable . thus , according to theorem [ thdelayinfodistributive ] , @xmath238 is information - distributive .",
    "note that information - distributive networks do nt subsume all possible routing - optimal networks . in the following , we show an example of such a network .",
    "consider the network as shown in fig .",
    "[ figbeyond ] .",
    "we first show that it is not information - distributive .",
    "define the following paths :    & p_11 = \\{a_1,e_1,b_1 } , p_12 = \\{a_2 , e_3 , b_2 } + & p_21 = \\{a_3,e_3,b_3 } , p_22 = \\{a_4 , e_5 , b_4 } + & p_31 = \\{a_5,e_5,b_5 } , p_32 = \\{a_6 , e_6 , b_6 }    for @xmath274 , let @xmath275 , and @xmath276 .",
    "since each source has only two outgoing edges , @xmath165 is the only - possible path - set sequence .",
    "it can be verified that for all cumulative and distributive cut - set sequences , @xmath165 is not extendable .",
    "for instance , let @xmath277 , @xmath278 , and @xmath279 . clearly , the cut - set sequence @xmath176 is cumulative and distributive .",
    "however , it can be seen that @xmath280 overlaps with @xmath281 , but @xmath282 , and @xmath283 .",
    "hence , @xmath165 does nt satisfy the condition of definition [ defextendable ] .",
    "similarly , we can verify other cases .",
    "thus , the network is not information - distributive .    ]    nevertheless , we can show that the network is routing - optimal .",
    "consider an arbitrary rate vector @xmath284 .",
    "for @xmath90 ( @xmath285 ) , there exists a network code of length @xmath38 such that ( [ eqncachievei1])-([eqncachievei3 ] ) are satisfied .",
    "define the following cut - sets , and permutations of edges :    & c_1 = \\{e_1,e_2,e_3 } c_2=\\{e_3,e_4,e_5 } c_3=\\{e_5,e_6,e_7 } + & t_1 = ( e_1,e_2,e_3 ) t_2=(e_3,e_4,e_5 ) t_3=(e_5,e_6,e_7 )    define the following permutations :    t_1 = ( b_1,b_2 ) t_2 = ( b_3,b_4 ) t_3 = ( b_5,b_6 )    let @xmath176 , and @xmath286 .",
    "clearly , @xmath140 satisfies the condition of definition [ defcumulative ] .",
    "thus , according to lemma [ lemmadetermine ] , for @xmath287 , the following inequality holds :    [ eqex41 ] i(y_i ; u_(d_i ) | y_1:i-1 ) i(u_c_i ; y_i | y_1:i-1 )    moreover , since @xmath155 satisfies the conditions of definition [ defdistributive ] . by lemma [ lemmainfodistr ] , for @xmath288 ,",
    "the following inequality holds :    [ eqex42 ] ^3_i=1 _ ec_i i(y_i ; u_e | y_1:i-1 , u_t_i(e ) ) h(u_e )    define the following paths :    & p_11 = \\{a_1,e_1,b_1 } , p_12 = \\{a_1,e_2,b_2 } , p_13 = \\{a_2,e_3,b_2 } + & p_21 = \\{a_3,e_3,b_3 } , p_22 = \\{a_3,e_4,b_4 } , p_23 = \\{a_4,e_5,b_4 } + & p_31 = \\{a_5,e_5,b_5 } , p_32 = \\{a_5,e_6,b_6 } , p_33 = \\{a_6,e_7,b_6 }    let @xmath289 . define a routing scheme as follows :    f^n , k_i(p ) =    i(y_i ; u_pc_i | y_1:i-1 , u_t_i(e ) ) & p_i + 0 &    note the following inequalities hold for @xmath287 :    [ eqex44 ] & h(y_i ) _ p_i f^n , k_i(p ) + = & i(y_i ; u_c_i | y_1:i-1 ) i(y_i ; u_(d_i ) | y_1:i-1 ) + = & _ e(d_i ) i(y_i ; u_e | y_1:i-1 , u_t_i(e ) ) + & ( 1-)h(y_i ) - ( 1-)(r_2- ) -    where @xmath290 holds because @xmath88 is a function of @xmath291 ; @xmath113 is due to fano s inequality .",
    "for @xmath287 , @xmath292 , and @xmath293 , define the following notations :    & y^n , k_i = h(y_i ) u^n , k_e = h(u_e ) + & g^n , k_i , e = i(y_i ; u_e | y_1:i-1 , u_t_i(e ) )    thus , ( [ eqex44 ] ) can be rewritten in a concise form as :    [ eqex45 ] & y^n , k_i _",
    "p_i f^n , k_i(p ) _ e(d_i)g^n , k_i , e + & ( 1-)y^n , k_i - ( 1-)(r_2- ) -    due to ( [ eqex44 ] ) , it can be seen that :    & y^n , k_i - 1 ( 1-)y^n , k_i - + & i(y_i ; u_(d_i ) | y_1:i-1 ) + & _ e(d_i ) h(u_e ) 2(1 + ) 3",
    "this means that @xmath294 .",
    "clearly , all @xmath295 s , @xmath296 s , @xmath297 s and @xmath298 s have upper bounds",
    ". thus , there exists a sub - sequence @xmath83 such that @xmath299 , @xmath300 , @xmath301 and @xmath302 approach finite limits when @xmath303 .",
    "define the following notations :    y_i = _",
    "l y^n_l , k_l_i u_e = _",
    "l u^n_l , k_l_e g_i , e = _",
    "l g^n_l , k_l_i , e    clearly , the following inequalities holds :    u_e 1 g_i , e u_e 1    define the following routing scheme :    f_i(p ) =    _ l f^n_l , k_l_i(p ) & p_i + 0 & .",
    "we will prove that this routing scheme satisfies ( [ eqroutingcond1 ] ) and ( [ eqroutingcond2 ] ) . according to ( [ eqex44 ] )",
    ", we see that @xmath304 , and thus , ( [ eqroutingcond1 ] ) is satisfied .",
    "moreover , due to ( [ eqex42 ] ) , ( [ eqroutingcond2 ] ) is satisfied for @xmath288 . for @xmath305",
    ", we have :    & f^n , k_2(p_21 ) + f^n , k_2(p_22 ) + = & i(y_2 ; u_\\{e_3,e_4 } | y_1 ) i(y_2 ; u_a_3 | y_1 ) + & h(u_a_3 ) 1 +    where @xmath116 is due to the fact that @xmath306 is a function of @xmath307 .",
    "thus , @xmath308 , and ( [ eqroutingcond2 ] ) is satisfied for @xmath305 .",
    "using similar arguments , we can prove that ( [ eqroutingcond2 ] ) is satisfied for @xmath309 .",
    "now consider @xmath310 .",
    "due to ( [ eqex45 ] ) , the following equations hold :    [ eqex46 ] y_2 = g_2,b_3 + g_2,b_4 = f_2(p_21 ) + f_2(p_22 ) + f_2(p_23 )    meanwhile , since @xmath311 is a function of @xmath312 , the following equations hold :    f^n , k_2(p_21 ) = i(y_2;u_e_3|y_1 ) i(y_2;u_b_3|y_1 ) = g^n , k_2,b_3    hence , @xmath313 . combining with ( [ eqex46 ] ) , we have :    f_2(p_22 ) + f_2(p_23 ) g_2,b_3 1    hence , ( [ eqroutingcond2 ] ) holds for @xmath314 .",
    "similarly , we can prove that ( [ eqroutingcond2 ] ) holds for @xmath315 .",
    "it can be easily seen that for all the other edges , ( [ eqroutingcond2 ] ) also holds .",
    "therefore , we have proved that @xmath316 .",
    "this means that @xmath86 , and the network is routing - optimal .",
    "in this paper , we present a class of routing - optimal networks , called information - distributive networks , defined by three topological features . due to these features",
    ", there is always a routing scheme that achieves the same rate vector as network coding such that the traffic transmitted through the network is the information distributed over the cut - sets between the sources and the sinks in the corresponding network coding scheme .",
    "we then present some examples of information - distributive networks related to index coding and single unicast with hard deadline constraint .",
    "the authors would like to thank minghua chen for insightful discussions on the problem of network coding with hard deadline constraints , which inspired this follow - up work ( see subsection iv.b ) .",
    "chun meng was visiting , and was supported by , the network coding institute of hong kong at that point ( aug .",
    "2012 - june 2013 ) .",
    "this work was supported by nsf awards 0747110 ( career ) and 1028394 , afosr muri award fa9550 - 09 - 0643 .",
    "in this section , we present some useful tools to be used in the sequel .",
    "[ propit1 ] the following equations hold :    1 .   @xmath317 .",
    "2 .   @xmath318 .",
    "3 .   @xmath319 .",
    "4 .   @xmath320 .",
    "\\1 ) the following equation holds :    [ eqpropit11 ]    h(x , y , f(y ) ) = & h(y ) + h(x|y ) + h(f(y)|x , y ) + = & h(y ) + h(x|y )    meanwhile , we have :    [ eqpropit12 ]    h(x , y , f(y ) ) = & h(y ) + h(f(y)|y ) + h(x|y , f(y ) ) + = & h(y ) + h(x|y , f(y ) )    combining eq .",
    "( [ eqpropit11 ] ) and eq .",
    "( [ eqpropit12 ] ) , we have @xmath317 .",
    "\\2 ) due to 1 ) , we can derive :    i(x;y|z , f(z ) ) = & h(x|z , f(z ) ) - h(x|y , z , f(z ) ) + = & h(x|z ) - h(x|y , z ) + = & i(x;y|z )    \\3 ) first , the following equalities hold :    [ eqpropit13 ] h(x , y , f(y ) ) = h(f(y ) ) + h(x|f(y ) ) + h(y|x , f(y ) )    combining eq .",
    "( [ eqpropit11 ] ) and eq .",
    "( [ eqpropit13 ] ) , we then have :    h(x|f(y ) ) = & h(x|y ) + h(y ) - h(f(y ) ) - h(y|x , f(y ) ) + & h(x|y ) + h(y|f(y ) ) - h(y|x , f(y ) ) + = & h(x|y ) + i(x;y|f(y ) ) + & h(x|y )    where @xmath290 follows from the equation : @xmath321 .",
    "\\4 ) we have the following equations :    & i(x;y|z , w ) - i(x;f(y , z)|z , w ) + = & h(x|z , w ) - h(x|y , z , w ) - + & + = & h(x|f(y , z),z , w ) - h(x|y , z , w ) 0    where the last inequality is due to 3 ) and the fact that @xmath322 is a function of @xmath323 .    [ propmutualinfoineq3 ]",
    "if @xmath324 , then @xmath325 and @xmath326 . as a special case , we have @xmath327 and @xmath328 .    we have the following equations :    & i(x , z;y|w ) = i(z;y|w ) + i(x;y|w , z ) + = & i(x;y|w ) + i(z;y|x , w ) = i(x;y|w )    thus , it must be that @xmath325 and @xmath326 .",
    "since the following chain : @xmath329 holds , we must have @xmath327 and @xmath328 .",
    "let @xmath330 denote the set consisting of the outgoing edges of @xmath331 . since each path from @xmath152 ( @xmath332 ) to @xmath18 must pass through an edge in @xmath131 , @xmath333 forms a cut - set between @xmath334 and @xmath18 .",
    "thus @xmath88 is a function of @xmath335 .",
    "meanwhile , @xmath336 is a function of @xmath337 .",
    "thus , @xmath88 is a function of @xmath154 . according to proposition [ propmutualinfoineq3 ] , ( [ eqdetermine ] ) holds .",
    "let @xmath155 be the permutation sequence as defined in definition [ defdistributive ] .",
    "consider an arbitrary edge @xmath164 . without loss of generality ,",
    "let @xmath156 , where @xmath157 .",
    "then we have :    & _ 1i k , ec_i",
    "i(y_i;u_e | y_1:i-1,u_t_i(e ) ) + = & ^k_i=1 i(y_i;u_e",
    "| y_1:n_i-1 , u_t_n_i(e ) )    for @xmath338 , the following equation holds :    & ^k_i=1",
    "i(y_i;u_e | y_1:n_i-1 , u_t_n_i(e ) ) + = & i(y_i : u_e | y_1:n_1 - 1 , u_t_n_1(e ) ) h(u_e )    hence , ( [ eqtotaldistr ] ) holds for @xmath338 .",
    "we now consider the case @xmath339 .",
    "we will prove the following inequality holds for @xmath340 :    [ eq_inequality_1 ] & ^k_i = p i(y_i ; u_e | y_1:n_i-1 , u_t_n_i(e ) ) + &",
    "i(y_n_p : n_k ; u_e",
    "| y_1:n_p-1 , u_t_n_p(e ) )    clearly , ( [ eq_inequality_1 ] ) holds trivially for @xmath341 .",
    "assume it holds for @xmath342 .",
    "we will prove it also holds for @xmath343 .    &",
    "^k_i = p-1 i(y_i ; u_e | y_1:n_i-1 , u_t_n_i(e ) ) + & i(y_n_p : n_k ; u_e",
    "| y_1:n_p-1 , u_t_n_p(e ) ) + + & i(y_n_p-1 ; u_e | y_1:n_p-1 - 1 , u_t_n_p-1(e ) ) + & i(y_n_p : n_k ; u_e | y_1:n_p-1 , u_t_n_p(e ) t_n_p-1(e ) , u_t_n_p(e ) - t_n_p-1(e ) ) + & + i(y_n_p-1 ; u_e | y_1:n_p-1 - 1 , u_t_n_p(e ) t_n_p-1(e ) , u_t_n_p-1(e ) - t_n_p(e ) ) + & i(y_n_p : n_k ; u_e",
    "| y_1:n_p-1 , u_t_n_p(e ) t_n_p-1(e ) ) + + & i(y_n_p-1 ; u_e | y_1:n_p-1 - 1 , u_t_n_p(e ) t_n_p-1(e ) , u_t_n_p-1(e ) - t_n_p(e ) ) + & i(y_n_p : n_k ; u_e | y_1:n_p-1 , u_t_n_p(e ) t_n_p-1(e ) , u_t_n_p-1(e ) - t_n_p(e ) ) + & + i(y_n_p-1 ; u_e | y_1:n_p-1 - 1 , u_t_n_p(e ) t_n_p-1(e ) , u_t_n_p-1(e ) - t_n_p(e ) ) + & i(y_n_p : n_k ; u_e | y_1:n_p-1 , u_t_n_p-1(e ) ) + + & i(y_n_p-1 ; u_e | y_1:n_p-1 - 1 , u_t_n_p-1(e ) ) + & i(y_n_p : n_k ; u_e | y_1:n_p-1 , u_t_n_p-1(e ) ) + + & i(y_n_p-1:n_p-1 ; u_e | y_1:n_p-1 - 1 , u_t_n_p-1(e ) ) + & i(y_n_p-1:n_k ; u_e | y_1:n_p-1 - 1 , u_t_n_p-1(e ) )    where @xmath290 is due to our assumption that ( [ eq_inequality_1 ] ) holds for @xmath344 ; @xmath113 is due to the equalities , @xmath345 and @xmath346 ; @xmath116 is due to our premise that @xmath140 is distributive : for each @xmath347 , @xmath348 , and thus @xmath349 is a function of @xmath350 ; therefore , according to proposition [ propmutualinfoineq3 ] , we have :    & i(y_n_p : n_k ; u_e | y_1:n_p-1 , u_t_n_p(e ) t_n_p-1(e ) , u_t_n_p(e ) - t_n_p-1(e ) ) + & i(y_n_p : n_k ; u_e | y_1:n_p-1 , u_t_n_p(e ) - t_n_p-1(e ) )    @xmath351 is also due to our premise that @xmath140 is distributive : for each @xmath352 , @xmath353 , and thus @xmath349 is a function of @xmath354 ; therefore , the following equality holds according to proposition [ propit1 ] :    & i(y_n_p-1 ; u_e | y_1:n_p-1 - 1 , u_t_n_p(e ) t_n_p-1(e ) , u_t_n_p-1(e ) - t_n_p(e ) ) + & = i(y_n_p-1 ; u_e | y_1:n_p-1 - 1 , u_t_n_p(e ) t_n_p-1(e ) )    @xmath355 is again due to @xmath346 ; @xmath356 is due to chain rule of mutual information .",
    "thus , ( [ eq_inequality_1 ] ) holds for @xmath343 .",
    "this means that ( [ eq_inequality_1 ] ) must hold for all @xmath340 . letting @xmath357 in ( [ eq_inequality_1 ] )",
    ", we have :    & ^k_i=1 i(y_i ; u_e | y_1:n_i-1 , u_t_n_i(e ) ) + & i(y_n_1:n_k ; u_e | y_1:n_1 - 1 , u_t_n_1(e ) ) h(u_e )    thus , the lemma holds .",
    "let @xmath53 be an edge that is passed through by at least one path in an extendable path - set sequence @xmath165 . according to the above definition",
    ", all the paths in @xmath165 that pass through @xmath53 must pass through a single edge in @xmath140 .",
    "we use @xmath358 to denote this edge , and refer to it as the _ representative _ of @xmath53 in @xmath140 .",
    "let @xmath359 be a cumulative and distributive cut - set sequence , @xmath155 a permutation sequence for @xmath140 that satisfies the conditions of definition [ defdistributive ] , and @xmath360 an extendable path - set sequence for @xmath140 .",
    "let @xmath361 be an arbitrary rate vector in @xmath58 .",
    "therefore , for @xmath67 ( @xmath68 ) , there exists a network code which satisfies ( [ eqncachieve1])-([eqncachieve3 ] ) . in the rest of this proof ,",
    "all the random variables are defined in this network code .",
    "we then define the following routing scheme : for @xmath26 ,    f^n , k_i(p ) =    i(y_i ; u_e | y_1:i-1 , u_t_i(e ) ) & p_i , epc_i ; + 0 & .",
    "since @xmath140 is cumulative , the following equation holds :    [ eqproofinfodistr1 ]    & _",
    "p_s_id_i f^n , k_i(p ) = _ p_i f^n , k_i(p ) + = & _ ec_i i(y_i ; u_e | y_1:i-1 , u_t_i(e ) ) + & i(y_i ; u_c_i | y_1:i-1 ) i(y_i ; u_(d_i ) | y_1:i-1 )    where @xmath290 is due to ( [ eqinfodistr ] ) , and @xmath113 is due to ( [ eqdetermine ] ) . define @xmath362 . clearly , @xmath363 .",
    "then , we can derive the following equation :    & i(y_i;u_(d_i)|y_1:i-1 ) + = & ( h(y_i|y_1:i-1 ) - h(y_i|u_(d_i ) , y_1:i-1 ) ) + & ( h(y_i ) - h(y_i|u_(d_i ) , y_1:i-1 ) ) + & ( h(y_i ) - 1 - _i|_i| ) + = & ( 1-_i ) h(y_i ) - + & ( 1-)(r_i- ) -    where @xmath116 is due to the fact that @xmath20 is independent from @xmath337 ; @xmath351 is due to fano inequality ; @xmath355 is due to ( [ eqncachievei2 ] ) . combining the above equation with ( [ eqproofinfodistr1 ] ) ,",
    "the following inequality holds :    [ eqproofinfodistr2 ] _",
    "p_s_id_i f^n , k_i(p ) ( 1-)(r_i- ) -    let @xmath53 be an edge that is passed through by at least one path in @xmath165 .",
    "since @xmath165 is extendable , the paths in @xmath165 that pass through @xmath53 must pass through @xmath53 s representative @xmath358 in @xmath140 .",
    "hence , the following equation holds :    [ eqproofinfodistr3 ]    & ^k_i=1_p_s_id_i , ep f^n , k_i(p ) + = & ^k_i=1_p_i , ep f^n , k_i(p ) + & ^k_i=1_p_i , _ ep f^n , k_i(p ) + = & _ 1i k , _",
    "ec_i i(y_i;u__e | y_1:i-1 , u_t_i(_e ) ) + & h(u__e ) 1 +    where @xmath356 is due to ( [ eqtotaldistr ] ) ; @xmath364 is due to ( [ eqncachievei1 ] ) .",
    "since each @xmath298 has an upper bound , there exists a sequence @xmath83 such that for @xmath26 , the sequence @xmath129 approaches a finite limit .",
    "define the following routing scheme :    f_i(p ) =    _ l f^n_l , k_l_i(p ) & p _",
    "i + 0 & .    due to ( [ eqproofinfodistr2 ] ) and ( [ eqproofinfodistr3 ] ) , @xmath35 satisfies ( [ eqroutingcond1 ] ) and ( [ eqroutingcond2 ] ) .",
    "hence , @xmath130 .",
    "this implies that @xmath86 , and the network is routing - optimal .",
    "assume @xmath140 is cumulative .",
    "hence , @xmath198 is information - distributive according to theorem [ thinfodistr ] , @xmath198 is routing - optimal . since routing can achieve a common rate of at most @xmath365 , @xmath366 .",
    "now assume @xmath209 .",
    "we consider a side - information graph @xmath367 @xcite , where @xmath368 , and @xmath369 .",
    "it has been shown that if @xmath209 , then @xmath370 is acyclic @xcite . we will show that @xmath140 is information - distributive . since @xmath370 is acyclic , we can re - index the nodes in @xmath370 , such that if @xmath371 , @xmath372 .",
    "let @xmath373 .",
    "consider a path @xmath3 from @xmath152 to @xmath18 . since @xmath374 , @xmath375 .",
    "thus , there is no directed edge from @xmath152 to @xmath18 in @xmath198 , and @xmath3 must pass through @xmath376 .",
    "hence , @xmath140 is cumulative , and @xmath198 is information - distributive .",
    "let @xmath377 .",
    "assume there is a directed path @xmath3 from @xmath152 to @xmath18 .",
    "let @xmath168 be the part of @xmath3 after @xmath378 $ ] . clearly , @xmath379),(s[i],s[i+1]),\\cdots,(s[j-1],s[j])\\ } \\cup p_1 $ ] is a directed path from @xmath17 to @xmath18 .",
    "since @xmath380 $ ] is a cut - set between @xmath381 $ ] and @xmath382 $ ] , @xmath383 must pass through an edge @xmath266\\in c[i]$ ] .",
    "thus , @xmath266 \\in p$ ] .",
    "this means that @xmath140 is cumulative .",
    "let @xmath385=(e_i[t_i+t])^k_{i=1}$ ] , and define a permutation sequence @xmath386)^k_{t=0}$ ] for @xmath140 .",
    "we will prove that if @xmath255 $ ] is distributive , @xmath155 satisfies ( [ eqdistr1 ] ) and ( [ eqdistr2 ] ) .",
    "consider an edge @xmath387\\in c[0]$ ] .",
    "let@xmath388)^k_{i=1}$ ] be the recurrent sequence in @xmath255 $ ] , in which all the edges are time - shifted versions of @xmath389 . without loss of generality ,",
    "let @xmath390 . next ,",
    "consider @xmath391\\in c[k]$ ] .",
    "let @xmath392)=\\{c[t]:e_p[t_p+k ] \\in c[t ] , 0\\le t\\le k\\}$ ] denote the subset of cut - sets which contain @xmath391 $ ] .",
    "clearly , @xmath393 $ ] and @xmath394 $ ] are the cut - sets in @xmath392)$ ] that lies immediately before and after @xmath395 $ ] respectively , and @xmath396 $ ] is the last cut - set in @xmath392)$ ] .",
    "consider an edge @xmath397\\in c[k]$ ] be an edge that lies before @xmath391 $ ] in @xmath398 $ ] , but does nt appear before @xmath391 $ ] in @xmath399 $ ] .",
    "this means that @xmath263 \\notin c[0]$ ] .",
    "thus , the following equation holds :        now assume that @xmath397\\in c[k]$ ] lies before @xmath391 $ ] in @xmath398 $ ] , but does nt appear before @xmath391 $ ] in @xmath400 $ ] .",
    "this implies that @xmath401 \\notin c[0]$ ] .",
    "thus , the following equation holds :                            x.  yan , r.  w. yeung , and z.  zhang , `` the capacity region for multi - source multi - sink network coding , '' in _ the proceedings of ieee international symposium on information theory _ ,",
    "nice , france , june 2007 , pp .",
    "116120 .",
    "m.  kodialam and t.  lakshman , `` on allocating capacity in networks with path length constrained routing , '' in _ the proceedings of allerton conference on communication , control , and computing _ , monticello , il , u.s.a . , sept .",
    "2002 .      c.  wang and m.  chen , `` sending perishable information : coding improves delay - constrained throughput even for single unicast , '' in _ the proceedings of ieee international symposium on information theory _ , hawaii , u.s.a . , june 2014 ."
  ],
  "abstract_text": [
    "<S> in this paper , we consider the problem of multiple unicast sessions over a directed acyclic graph . </S>",
    "<S> it is well known that linear network coding is insufficient for achieving the capacity region , in the general case . </S>",
    "<S> however , there exist networks for which routing is sufficient to achieve the whole rate region , and we refer to them as _ routing - optimal networks_. we identify a class of routing - optimal networks , which we refer to as _ information - distributive networks _ , defined by three topological features . due to these features , for each rate vector achieved by network coding , there is always a routing scheme such that it achieves the same rate vector , and the traffic transmitted through the network is exactly the information transmitted over the cut - sets between the sources and the sinks in the corresponding network coding scheme . </S>",
    "<S> we present examples of information - distributive networks , including some examples from ( 1 ) index coding and ( 2 ) from a single unicast session with hard deadline constraint . </S>"
  ]
}
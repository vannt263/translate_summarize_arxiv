{
  "article_text": [
    "in order to measure the complexity of a ( terminating ) term rewrite system ( trs for short ) it is natural to look at the maximal length of derivation sequences  the _ derivation length_as suggested by hofbauer and lautemann in  @xcite . more precisely , the _ runtime complexity function _ with respect to a ( finite and terminating ) trs @xmath0 relates the maximal derivation length to the size of the initial term , whenever the set of initial terms is restricted to constructor based terms , also called _",
    "basic _ terms .",
    "the restriction to basic terms allows us to accurately express the complexity of a program through the runtime complexity of trss . in this paper",
    "we study and combine recent efforts for the _ automatic _ analysis of runtime complexities of trss . in  @xcite",
    "we introduced a restriction of the multiset path order , called _ polynomial path order _ ( _ _ for short ) that induces polynomial runtime complexity if restricted to innermost rewriting .",
    "the definition of  employs the idea of _ tiered recursion _",
    "syntactically this amounts to a separation of arguments into _ normal _ and _ safe _ arguments , cf .  @xcite .",
    "furthermore , hirokawa and the second author introduced a variant of dependency pairs , dubbed _ weak dependency pairs _ , that makes the dependency pair method applicable in the context of complexity analysis , cf .",
    "@xcite .",
    "we show how weak innermost dependency pairs can be successfully applied in conjunction with .",
    "the following example ( see @xcite ) motivates this study .",
    "consider the trs @xmath1 encoding the function @xmath2 for natural numbers given as tally sequences : @xmath3 it is easy to see that the trs @xmath1 is not compatible with , even if we allow quasi - precedences , see section  [ s : pop ] .",
    "on the other hand , employing ( weak innermost ) dependency pairs , argument filtering , and the usable rules criteria in conjunction with @xmath4 , polynomial innermost runtime complexity of @xmath1 can be shown fully automatically .    the combination of dependency pairs and polynomial path orders , while conceptually quite clear , turns out to be technical involved .",
    "one of the first obstacles one encounters is that the pair @xmath5 can not be used as a reduction pair in the spirit of  @xcite , as @xmath6 fails to be closed under contexts .",
    "conclusively , we start from scratch and study polynomial path orders in the context of _ relative rewriting _  @xcite . based on this study an incorporation of argument filterings becomes possible so that we can employ the pair @xmath7 in conjunction with dependency pairs successfully .",
    "here , @xmath8 refers to the order obtained by combining @xmath9 with the argument filtering @xmath10 as expected , and @xmath11 denotes the extension of @xmath8 by term equivalence , preserving the separation of safe and normal argument positions . note that for polynomial path orders , the integration of argument filterings is not only non - trivial , but indeed a challenging task .",
    "this is mainly due to the embodiment of tiered recursion in .",
    "thus we establish a combination of two syntactic techniques in complexity analysis .",
    "the experimental evidence given below indicates the power and in particular the efficiency of the provided results .",
    "our next contribution is concerned with _ implicit complexity theory _ , see for example  @xcite .",
    "a careful analyis of our main result shows that polynomial path orders in conjunction with ( weak innermost ) dependency pairs even induce polytime computability of the functions defined by the trs studied .",
    "this result fits well with recent results by marion and pchoux on the use of restricted forms of the dependency pair method to charcterise complexity classes like @xmath12 or @xmath13 , cf .",
    "note that both results allow to conclude , based on different restrictions , polytime computability of the functions defined by constructor trss , whose termination can be shown by the dependency pair method .",
    "note that the results in  @xcite also capture programs admitting infeasible runtime complexities but define functions that are computable in polytime if suitable ( and non - trivial ) program transformations are used .",
    "such programs are outside the scope of our results .",
    "thus it seems that our results more directly assess the complexity of the given programs .",
    "note that our tool provides ( for the first time ) a fully automatic application of the dependency pair method in the context of implicit complexity theory .",
    ", studied in  @xcite , our tool verifies polytime computability fully automatically .",
    "see also  @xcite for the description of a small tool that implements related characterisations of of the class of polynomial time computable functions . ]",
    "the rest of the paper is organised as follows . in section  [ s : seq ] we present basic notions and recall ( briefly ) the _ path order for _ from @xcite .",
    "we then briefly recall dependency pairs in the context of complexity analysis from @xcite , cf .  section  [ s : dp ] . in section  [ s : pop ] we present polynomial path orders over quasi - precedences .",
    "our main results are presented in section [ s : dppop ] .",
    "we continue with experimental results in section [ s : exps ] , and conclude in section  [ s : concl ] .",
    "we assume familiarity with the basics of term rewriting , see  @xcite .",
    "let @xmath14 denote a countably infinite set of variables and @xmath15 a signature , containing at least one constant .",
    "the set of terms over @xmath15 and @xmath14 is denoted as @xmath16 and the set of ground terms as @xmath17 .",
    "we write @xmath18 and @xmath19 for the set of function symbols and variables appearing in @xmath20 , respectively .",
    "the root symbol @xmath21 of a term @xmath20 is defined as usual and the ( proper ) subterm relation is denoted as @xmath22 ( @xmath23 ) .",
    "we write @xmath24 for the _ subterm _ of @xmath25 at position @xmath26 .",
    "the _ size _ @xmath27 of a term @xmath20 is defined as usual and the _ width _ of @xmath20 is defined as @xmath28 if @xmath29 and @xmath30 or @xmath31 else .",
    "let @xmath32 be a preorder on the signature @xmath15 , called _ quasi - precedence _ or simply _",
    "precedence_. based on @xmath32 we define an equivalence @xmath33 on terms : @xmath34 if either ( i ) @xmath35 or ( ii ) @xmath36 , @xmath37 , @xmath38 and there exists a permutation @xmath10 such that @xmath39 . for a preorder @xmath40",
    ", we use @xmath41 for the multiset extension of @xmath40 , which is again a preorder . the proper order ( equivalence ) induced by @xmath41",
    "is written as @xmath42 ( @xmath43 ) .",
    "a _ term rewrite system _ ( _ trs _ for short ) @xmath0 over @xmath16 is a _",
    "finite _ set of rewrite rules @xmath44 , such that @xmath45 and @xmath46 .",
    "we write @xmath47 ( @xmath48 ) for the induced ( innermost ) rewrite relation .",
    "the set of defined function symbols is denoted as @xmath49 , while the constructor symbols are collected in @xmath50 , clearly @xmath51 .",
    "we use @xmath52 to denote the set of normal forms of @xmath0 and set @xmath53 , the elements of @xmath54 are called _",
    "values_. a trs is called _ completely defined _ if normal forms coincide with values .",
    "we define @xmath55 as the set of _ basic terms_. a trs @xmath0 is a _ constructor trs _ if @xmath56 for all @xmath57 .",
    "let @xmath58 denote a trs .",
    "the _ generalised restricted rewrite relation @xmath59{\\qs}$ ] _ is the restriction of @xmath47 where all arguments of the redex are in normal form with respect to the trs @xmath58 ( see  @xcite ) .",
    "[ d : qrew ] we define the ( innermost ) relative rewriting relation ( denoted as @xmath60 ) as follows : @xmath61{\\rs \\cup \\rss } }       \\cdot { \\qrew[\\rs]{\\rs \\cup \\rss } }       \\cdot { \\qrss[\\rss]{\\rs \\cup \\rss } } } \\tpkt\\ ] ] similarly , we set @xmath62{\\rs \\cup \\rss } }       \\cdot { \\qrewt[\\rs]{\\rs \\cup \\rss } }       \\cdot { \\qrss[\\rss]{\\rs \\cup \\rss}}}$ ] , to define an _",
    "( innermost ) relative root - step_.    a _ polynomial interpretation _ is a well - founded and monotone algebra @xmath63 with carrier @xmath64 such that @xmath65 is the usual order on natural numbers and all interpretation functions @xmath66 are polynomials .",
    "let @xmath67 denote an _ assignment _ , then we write @xmath68{\\alpha}{t}$ ] for the evaluation of term @xmath20 with respect to @xmath69 and @xmath70 .",
    "a polynomial interpretation is called a _ strongly linear interpretation _ ( _ sli _ for short ) if all function symbols are interpreted by _ weight functions _ @xmath71 with @xmath72 .",
    "the _ derivation length _ of a terminating term @xmath25 with respect to @xmath73 is defined as @xmath74 , where @xmath75 denotes the @xmath76-fold application of @xmath73 .",
    "the _ innermost runtime complexity function _",
    "@xmath77 with respect to a trs @xmath0 is defined as @xmath78 .",
    "if no confusion can arise @xmath77 is simply called _ runtime complexity function_.    below we recall the bare essentials of the polynomial path order @xmath79 on sequences (  for short ) as put forward in  @xcite .",
    "we kindly refer the reader to  @xcite for motivation and examples .",
    "we recall the definition of _ finite approximations @xmath80 _ of @xmath79 .",
    "the latter is conceived as the _ limit _ of these approximations .",
    "the domain of this order are so called _ sequences _ @xmath81 . here",
    "@xmath15 is a finite signature and @xmath82 a fresh variadic function symbol , used to form sequences .",
    "we denote sequences @xmath83 by @xmath84 $ ] and write @xmath85 $ ] for the sequence @xmath86 $ ] .",
    "let @xmath32 denote a precedence .",
    "the order @xmath80 is based on an auxiliary order @xmath87 ( and the equivalence @xmath33 on terms defined above ) .",
    "below we set @xmath88 .",
    "we write @xmath89 to denote multisets and @xmath90 for the multiset sum .",
    "[ d : approx : sq ] let @xmath91 .",
    "the order @xmath92 induced by @xmath32 is inductively defined as follows : @xmath93 for @xmath94 or @xmath95 $ ] if either    1 .",
    "@xmath96 for some @xmath97 , or 2 .",
    "[ en : approx : sq:2 ] @xmath94 , @xmath98{t})$ ] with @xmath99 or @xmath100{t}]$ ] , @xmath101 for all @xmath102 , and @xmath103 , 3 .",
    "@xmath95 $ ] , @xmath104{t}]$ ] and the following properties hold : * @xmath105{t } } = n_1 \\uplus \\cdots \\uplus n_n$ ] for some multisets @xmath106 , and * there exists @xmath97 such that @xmath107 , and * for all @xmath108 such that @xmath107 we have @xmath109 for all @xmath110 , and @xmath111 .",
    "[ d : approx ] let @xmath91 .",
    "the _ approximation @xmath112 of the polynomial path order on sequences _ induced by @xmath32 is inductively defined as follows : @xmath113 for @xmath94 or @xmath95 $ ] if either @xmath114 or    1 .",
    "@xmath115 for some @xmath97 , 2 .",
    "[ d : approx : ii ] @xmath36 , @xmath104{t}]$ ] , and the following properties hold : * @xmath116 for some @xmath117 , * @xmath118 for all @xmath119 , and @xmath111 , 3 .",
    "[ d : approx : iii ] @xmath36 , @xmath98{t})$ ] , @xmath120 and @xmath84 \\gpopv_k^l [ \\sexpr[m]{t}]$ ] , or 4 .",
    "[ d : approx : iv ] @xmath95 $ ] , @xmath104{t}]$ ] and the following properties hold : * @xmath105{t } } = n_1 \\uplus \\cdots \\uplus n_n$ ] for some multisets @xmath106 , and * there exists @xmath97 such that @xmath107 , and * for all @xmath108 such that @xmath121 we have @xmath122 for all @xmath110 , and @xmath111 .    above",
    "we set @xmath123 and abbreviate @xmath124 as @xmath125 in the following .",
    "note that the empty sequence is minimal with respect to both orders .",
    "it is easy to see that for @xmath126 , we have @xmath127 and @xmath128 .",
    "note that @xmath129 implies that @xmath130 . for a fixed approximation @xmath125",
    ", we define the length of its longest decent as follows : @xmath131 .",
    "the following proposition is a reformulation of  ( * ? ? ?",
    "* lemma 6 ) .",
    "[ p : popseq ] let @xmath132",
    ". there exists a polynomial interpretation @xmath133 such that @xmath134{\\alpha}{t}$ ] for all assignments @xmath135 . as a consequence , for all terms",
    "@xmath136 with @xmath137{\\alpha}{t_i } = \\bigo(\\size{t_i})$ ] , @xmath138 is bounded by a polynomial @xmath26 in the size of @xmath20 , where @xmath26 depends on @xmath139 only .",
    "observe that the polynomial interpretation @xmath133 as employed in the proposition fulfils : @xmath140 .",
    "in particular , we have @xmath137{\\alpha } { [ ] } = 0 $ ] .",
    "in this section , we briefly recall the central definitions and results established in @xcite .",
    "we kindly refer the reader to @xcite for further examples and underlying intuitions .",
    "let @xmath141 be a set of symbols .",
    "we write @xmath142 to denote @xmath143 $ ] , whenever @xmath144 for all @xmath97 and @xmath145 is a @xmath76-hole context containing no symbols from @xmath141 .",
    "we set @xmath146 with each @xmath147 a fresh function symbol .",
    "further , for @xmath29 with @xmath148 , we set @xmath149 .",
    "let @xmath0 be a trs .",
    "if @xmath150 and @xmath151 then @xmath152 is called a _ weak innermost dependency pair _ of @xmath0 . here",
    "@xmath153 and @xmath154 , @xmath155 , for a fresh constructor symbol @xmath156 , the _ compound symbol_. the set of all weak innermost dependency pairs is denoted by @xmath157 .",
    "[ ex : bits : widp ] reconsider the example @xmath158 from the introduction .",
    "the set of weak innermost dependency pairs @xmath159 is given by @xmath160    we write @xmath161 if there exists a rewrite rule @xmath150 such that @xmath162 and @xmath163 is a defined symbol in @xmath164 . for a set @xmath165 of defined symbols we denote by @xmath166 the set of rewrite rules @xmath150 with @xmath167 .",
    "the set @xmath168 of usable rules of a term @xmath20 is defined as @xmath169 . finally , we define @xmath170 .    [ ex : bits : us ] the usable rules of @xmath159 consist of the following rules : @xmath171 , @xmath172 , and @xmath173 .",
    "the following proposition allows the analysis of the ( innermost ) runtime complexity through the study of ( innermost ) relative rewriting , see  @xcite for the proof .",
    "[ p : usable ] [ p : dp ] let @xmath0 be a trs , let @xmath20 be a basic terminating term , and let @xmath174 .",
    "then @xmath175)$ ] .",
    "moreover , if @xmath176 is non - duplicating and @xmath177 for some sli @xmath69 .",
    "then there exist constants @xmath178 ( depending on @xmath176 and @xmath69 only ) such that @xmath179 .",
    "this approach admits also an integration of _ dependency graphs _",
    "@xcite in the context of complexity analysis .",
    "the nodes of the _ weak innermost dependency graph _",
    "@xmath180 are the elements of @xmath176 and there is an arrow from @xmath181 to @xmath182 if there exist a context @xmath145 and substitutions @xmath183 , @xmath184 such that @xmath185 c[u\\tau]$ ] . let @xmath186 ; a _ strongly connected component _ ( _ scc _ for short ) in @xmath165 is a maximal _ strongly connected subgraph_. we write @xmath187 for the _ congruence graph _ , where @xmath188 is the equivalence relation induced by sccs .",
    "[ ex : bits : dg ] @xmath189 consists of the nodes ( 7)(12 ) as mentioned in example [ ex : bits : widp ] and has the following shape :    \\(7 ) 7 ; ( 9 ) [ right = of 7 ] 9 ; ( 8) [ right = of 9 ] 8 ; ( 10 ) [ right = of 8 ] 10 ; ( 12 ) [ right = of 10 ] 12 ; ( 11 ) [ right = of 12 ] 11 ;    \\(9 ) edge [ loop above ] ( 9 ) ; ( 9 ) edge ( 7 ) ; ( 9 ) edge ( 8) ; ( 12 ) edge [ loop above ] ( 12 ) ; ( 12 ) edge ( 11 ) ;    the only non - trivial sccs in @xmath165 are @xmath190 and @xmath191 .",
    "hence @xmath187 consists of the nodes @xmath192{7}$]@xmath192{12}$ ] , and edges @xmath193{a},\\equivclass[\\equiv]{b})$ ] for edges @xmath194 in @xmath165 . here",
    "@xmath192{a}$ ] denotes the equivalence class of @xmath195 .",
    "we set @xmath196 , where @xmath197 denote the set o f source nodes from @xmath187 and @xmath198 .",
    "the proposition allows the use of different techniques to analyse polynomial runtime complexity on separate paths , cf .",
    "@xcite .",
    "[ p : dg ] let @xmath0 , @xmath176 , and @xmath20 be as above .",
    "then there exists a polynomial @xmath26 ( depending only on @xmath0 ) such that @xmath199 .",
    "in this section , we briefly recall the central definitions and results established in @xcite on the _ polynomial path order_. we employ the variant of  based on quasi - precendences , cf .  @xcite .",
    "as mentioned in the introduction ,  relies on tiered recursion , which is captured by the notion of _ safe mapping_. a _ safe mapping _ @xmath200 is a function that associates with every @xmath76-ary function symbol @xmath201 the set of _ safe argument positions_. if @xmath148 then @xmath202 , for @xmath203 we fix @xmath204 . the argument positions not included in @xmath205",
    "are called _ normal _ and denoted by @xmath206 .",
    "we extend @xmath200 to terms @xmath207 as follows : we define @xmath208 where @xmath209{i}}$ ] , likewise we define @xmath210 where @xmath211{j}}$ ] .",
    "not every precedence is suitable for @xmath9 , in particular we need to assert that constructors are minimal .",
    "we say that a precedence @xmath32 is _ admissible _ for if the following is satisfied : ( i ) @xmath99 with @xmath212 implies @xmath148 , and ( ii ) if @xmath213 then @xmath148 if and only if @xmath212 . in the sequel",
    "we assume any precedence is admissible .",
    "we extend the equivalence @xmath33 to the context of safe mapping : @xmath214 , if ( i ) @xmath215 , or ( ii ) @xmath36 , @xmath216 , @xmath213 and there exists a permutation @xmath10 so that @xmath217 , where @xmath218 if and only if @xmath219 for all @xmath97 .",
    "similar to , the definition of the polynomial path order @xmath9 makes use of an auxiliary order @xmath220 .",
    "[ d : pop2 ] the auxiliary order @xmath220 induced by @xmath32 and @xmath200 is inductively defined as follows : @xmath221 if either    1 .",
    "[ d : pop2:i ] @xmath222 for some @xmath97 , and if @xmath148 then @xmath223 , or 2 .",
    "[ d : pop2:ii ] @xmath98{t})$ ] , @xmath99 , @xmath148 and @xmath224 for all @xmath102 .",
    "[ d : pop3 ] the _ polynomial path order _",
    "@xmath9 induced by @xmath32 and @xmath200 is inductively defined as follows : @xmath225 if either @xmath226 or    1 .   [",
    "d : pop3:i ] @xmath227 for some @xmath97 , or 2 .",
    "[ d : pop3:ii ] @xmath98{t})$ ] , @xmath99 , @xmath228 , and * @xmath229 for some @xmath230 , and * for all @xmath119 either @xmath224 , or @xmath231 and @xmath232 , or 3 .",
    "[ d : pop3:iii ] @xmath98{t})$ ] , @xmath213 , @xmath233 and @xmath234 .    above",
    "we set @xmath235 and @xmath236 below . here",
    "@xmath237 and @xmath238 refer to the strict and weak multiset extension of @xmath6 respectively .",
    "the intuition of @xmath220 is to deny any recursive call , whereas @xmath9 allows predicative recursion : by the restrictions imposed by @xmath200 , recursion needs to be performed on normal arguments , while a recursively computed result must only be used in a safe argument position , compare  @xcite .",
    "note that the alternative @xmath231 for @xmath239 in definition [ d : pop3]([d : pop3:ii ] ) guarantees that @xmath4 characterises the class of polytime computable functions , cf .",
    "the proof of the next theorem follows the pattern of the proof of main theorem in  @xcite , but the result is stronger due to the extension to quasi - precedences .",
    "[ t : popstar ] let @xmath0 be a constructor trs . if @xmath0 is compatible with @xmath9 , i.e. , @xmath240 , then the innermost runtime complexity @xmath77 induced is polynomially bounded .",
    "note that theorem  [ t : popstar ] is too weak to handle the trs @xmath158 as the ( necessary ) restriction to an admissible precedence is too strong . to rectify this , we suit  so that it can be used in conjunction with weak ( innermost ) dependency pairs",
    ".    an argument filtering ( for a signature @xmath15 ) is a mapping @xmath10 that assigns to every @xmath76-ary function symbol @xmath241 an argument position @xmath242 or a ( possibly empty ) list @xmath243{i } \\}$ ] of argument positions with @xmath244 .",
    "the signature @xmath245 consists of all function symbols @xmath201 such that @xmath246 is some list @xmath243{i } \\}$ ] , where in @xmath245 the arity of @xmath201 is @xmath247 .",
    "every argument filtering @xmath10 induces a mapping from @xmath16 to @xmath248 , also denoted by @xmath10 : @xmath249{i } \\}$ } \\tpkt \\end{cases}\\ ] ]    let @xmath10 denote an argument filtering , and @xmath9 a polynomial path order .",
    "we define @xmath250 if and only if @xmath251 , and likewise @xmath252 if and only if @xmath253 .    [ ex : bits : orient ] let @xmath10 be defined as follows : @xmath254 and @xmath255 for each @xmath76-ary function symbol other than @xmath256 .",
    "compatibility of @xmath159 with @xmath8 amounts to the following set of order constraints : @xmath257 in order to define a  instance @xmath9 , we set @xmath258 and @xmath259 .",
    "furthermore , we define an ( admissible ) precedence : @xmath260 .",
    "the easy verification of @xmath261 is left to the reader .",
    "motivated by example  [ ex : bits : orient ] , we show in this section that the pair ( @xmath262 ) can play the role of a _ safe _ reduction pair , cf .",
    "let @xmath0 be a trs over a signature @xmath15 that is innermost terminating . in the sequel @xmath0 is kept fixed .",
    "moreover , we fix some safe mapping @xmath200 , an admissible precedence @xmath32 , and an argument filtering @xmath10 .",
    "we refer to the induced @xmath4 instance by @xmath8 .",
    "we adapt @xmath200 to @xmath245 in the obvious way : for each @xmath263 with corresponding @xmath264 , we define @xmath265 , and likewise @xmath266 .",
    "set @xmath267 .",
    "based on @xmath245 we define the _ normalised signature _ @xmath268 where the arity of @xmath269 is @xmath270 .",
    "we extend @xmath32 to @xmath271 by @xmath272 if and only if @xmath273 .",
    "let @xmath274 be a fresh constant that is minimal with respect to @xmath32 .",
    "we introduce the _ buchholz norm _ of @xmath20 ( denoted as @xmath275 ) a term complexity measure that fits well with the definition of .",
    "set @xmath276 for @xmath277 and @xmath278 , otherwise . in the following we define an embedding from the relative rewriting relation @xmath279 into @xmath125 , such that @xmath139 depends only on trss @xmath0 and @xmath280",
    "this embedding provides the technical tool to measure the number of root steps in a given derivation through the number of descent in @xmath125 .",
    "hence proposition [ p : popseq ] becomes applicable to establishing our main result .",
    "this intuition is cast into the next definition .",
    "[ d : pred : int ] a _ predicative interpretation _ is a pair of mappings @xmath281 from terms to sequences @xmath282 defined as follows .",
    "we assume for @xmath283 that @xmath284 and @xmath285 .",
    "@xmath286         & \\text{if $ \\pi(t ) \\not\\in \\valpi$. }       \\end{cases}\\\\      \\intn(t ) & \\defi \\ints(t ) \\cons \\bn(t )    \\end{aligned}\\ ] ] here the function @xmath287 maps a term @xmath20 to the sequence @xmath288 $ ] with @xmath289 occurrences of the constant @xmath274 .",
    "note that as a direct consequence of the definitions we obtain @xmath290 for all terms @xmath20 .",
    "[ lem : slow : intn ] there exists a polynomial @xmath26 such that @xmath291 for every basic term @xmath20 .",
    "the polynomial @xmath26 depends only on @xmath139 .",
    "suppose @xmath292 is a basic term with @xmath209{i}}$ ] and @xmath211{j}}$ ] .",
    "the only non - trivial case is when @xmath293 . then @xmath294 \\cons \\bn(t)\\ ] ] where @xmath295 .",
    "note that @xmath296 for @xmath297{i}}$ ] .",
    "let @xmath133 denote a polynomial interpretation fulfilling proposition  [ p : popseq ] . using the assumption @xmath140 , it is easy to see that @xmath298 is bounded linear in @xmath299 and @xmath300 . as @xmath301~\\ms\\cdots\\ms]$ ] with @xmath302 occurrences of @xmath274 , @xmath303 is linear in @xmath27 .",
    "hence from proposition  [ p : popseq ] we conclude that @xmath298 is polynomially bounded in @xmath27 .",
    "the next sequence of lemmas shows that the relative rewriting relation @xmath279 is embeddable into @xmath125 .",
    "[ l : embed : val ] suppose @xmath250 such that @xmath304",
    ". then @xmath305 and @xmath306 .",
    "let @xmath304 , and suppose @xmath250 , i.e. , @xmath307 holds . observe that since @xmath308 and due to our assumptions on safe mappings , only clause @xmath309 from the definition of @xmath9 ( or respectively @xmath220 ) is applicable .",
    "and thus @xmath310 is a subterm of @xmath311 modulo the equivalence @xmath33 .",
    "we conclude @xmath312 , and hence @xmath305 .",
    "finally , notice that @xmath313 as @xmath314 is a subterm of @xmath315 .",
    "thus @xmath306 follows as well .    to improve the clarity of the exposition",
    ", we concentrate on the curcial cases in the proofs of the following lemma .",
    "the interested reader is kindly referred to  @xcite for the full proof .",
    "[ l : embed : claim ] suppose @xmath316 such that @xmath317 with @xmath318 for @xmath97 .",
    "moreover suppose @xmath285",
    ". then @xmath319 holds .",
    "note that the assumption implies that the argument filtering @xmath10 does not collapse @xmath201 .",
    "we show the lemma by induction on @xmath320 .",
    "we consider the subcase that @xmath316 follows as @xmath98{t})$ ] , @xmath10 does not collapse on @xmath163 , @xmath99 , and @xmath321 for all @xmath322 , cf .  definition  [ d : pop2]([d : pop2:ii ] ) .",
    "we set @xmath323 and @xmath324 and first prove @xmath325 .    if @xmath326 , then @xmath327 is minimal with respect to @xmath328 .",
    "thus we are done .",
    "hence suppose @xmath329 , @xmath330 and let @xmath331 \\tpkt\\ ] ] we set @xmath332 .",
    "it suffices to show @xmath333 and @xmath334 for @xmath232 .",
    "both assertions follow from the induction hypothesis .    now consider @xmath335 $ ] with @xmath336 occurrences of the constant @xmath274 .",
    "recall that @xmath337 .",
    "observe that @xmath338 .",
    "hence to prove @xmath339 it suffices to observe that @xmath340 holds .",
    "for that note that @xmath336 is either @xmath341 for some @xmath322 or less than @xmath139 . in the latter case ,",
    "we are done .",
    "otherwise @xmath342 .",
    "then from the definition of @xmath343 and the induction hypothesis @xmath344 we can conclude @xmath345 .",
    "since @xmath346 , @xmath340 follows .",
    "[ l : embed : hlp ] suppose @xmath250 such that @xmath317 with @xmath318 for @xmath97 .",
    "then for @xmath285 ,    1 .",
    "[ en : embed : hlp : a ] @xmath347 , and 2 .   [ en : embed : hlp : b ] @xmath348 .",
    "the lemma is shown by induction on the definition of @xmath8 .",
    "for the following , we set @xmath349 .",
    "suppose @xmath250 follows due to definition  [ d : pop3]([d : pop3:ii ] ) .",
    "we set @xmath324 .",
    "let @xmath329 and let @xmath330 .",
    "property @xmath350 is immediate for @xmath326 , so assume otherwise .",
    "we see that @xmath321 for all @xmath351 and obtain @xmath352 as in lemma  [ l : embed : claim ] .",
    "furthermore , @xmath353 for some @xmath230 and by induction hypothesis : @xmath354 . to conclude property @xmath350 , it remains to verify @xmath355 for the remaining @xmath232 .",
    "we either have @xmath321 or @xmath356 ( for some @xmath357 ) . in the former subcase we proceed as in the claim , and for the latter we observe @xmath358 , and thus @xmath359 follows .",
    "this establishes property @xmath350 .    to conclude property @xmath360",
    ", it suffices to show @xmath361 , or equivalently @xmath362 .",
    "the latter can be shown , if we proceed similar as in the claim .",
    "recall the definition of @xmath363 from section  [ s : seq ] and define @xmath364 , and set @xmath365{\\qs}}$ ] . as the normal forms of @xmath58 coincide with @xmath54 ,",
    "@xmath366 is the restriction of @xmath48 , where arguments need to be values instead of normal forms of @xmath0 . from lemma [ l :",
    "embed : val ] and [ l : embed : hlp ] we derive an embedding of root steps @xmath367 $ ] .",
    "suppose the step @xmath368 t$ ] takes place below the root .",
    "observe that @xmath369 need not hold in general .",
    "thus we can not hope to prove @xmath370 .",
    "however , we have the following stronger result .",
    "[ l : embed ] there exists a uniform @xmath371 ( depending only on @xmath0 ) such that if @xmath372 holds then @xmath373 t}$ ] implies @xmath374 .",
    "moreover , if @xmath375 holds then @xmath376 t}$ ] implies @xmath377 .",
    "we consider the first half of the assertion .",
    "suppose @xmath372 and @xmath378 t$ ] , that is for some rule @xmath379 and substitution @xmath380 we have @xmath381 and @xmath382 .",
    "depending on whether @xmath10 collapses @xmath201 , the property either directly follows from lemma [ l : embed : val ] or is a consequence of lemma @xmath383 .    in order to conclude the second half of the assertion , one performs induction on the rewrite context .",
    "in addition , one shows that for the special case @xmath384 , still @xmath385 holds . from this",
    "the lemma follows .    for constructor trss",
    ", we can simulate @xmath386 $ ] using @xmath387 $ ] .",
    "we extend @xmath0 with suitable rules @xmath388 , which replace normal forms that are not values by some constructor symbol . to simplfy the argument we re - use the symbol @xmath389 from above .",
    "we define the trs @xmath388 as @xmath390 moreover , we define @xmath391{t } \\defi \\nf[\\v(\\rs)]{t}$ ] .",
    "observe that @xmath391{\\cdot}$ ] is well - defined since @xmath388 is confluent and terminating .",
    "[ l : v : simulation : relative ] let @xmath392 be a constructor trs .",
    "define @xmath393 . for @xmath394 ,",
    "@xmath395{s }      \\vrrewt{\\rs}{\\rss ' } \\nfv[\\rs \\cup \\rss]{t } } \\tkom\\ ] ] where @xmath396 abbreviates @xmath397 \\cdot \\vrew[\\rs ] \\cdot \\vrss[\\rss']}$ ] .",
    "it is easy to see that @xmath398 t}$ ] implies @xmath391{s } \\vrew[\\rs ] \\cdot \\vrsn[\\v(\\rs ) ] \\nfv[\\rs]{t}$ ] .",
    "suppose @xmath399 , then there exist ground terms @xmath400 and @xmath401 such that @xmath402 u \\irewt[\\rs ] v \\irss[\\rss ] t$ ] .",
    "let @xmath403{t}$ ] . from the above",
    ", @xmath404    \\nfv{u }     \\vrewt[\\rs ] \\cdot \\vrss[\\rss ' ]    \\nfv{v }     \\vrss[\\rss ' ]    \\nfv{t}$ ] follows as desired .",
    "suppose @xmath372 and @xmath405 holds .",
    "together with lemma [ l : embed ] , the above simulation establishes the promised embedding of @xmath279 into @xmath125 .",
    "[ l : relstep : root ] let @xmath392 be a constructor trs , and suppose @xmath372 and @xmath406 hold .",
    "then for @xmath139 depending only on @xmath0 and @xmath280 and @xmath394 , we have @xmath407    consider a step @xmath399 and set @xmath403{t}$ ] .",
    "by lemma [ l : v : simulation : relative ] there exist terms @xmath400 and @xmath401 such that @xmath408 u \\vrewt[\\rs ] v \\vrss[\\rss \\cup \\v(\\rs \\cup \\rss ) ] \\nfv{t}$ ] .",
    "since @xmath372 holds , by lemma [ l : embed ] @xmath409 follows .",
    "moreover from @xmath405 together with lemma [ l : embed ] we conclude that @xmath410 r_2 $ ] implies @xmath411 .",
    "here it suffices to see that steps from @xmath412 are easy to embed into @xmath413 using the predicative interpretation @xmath414 independent of @xmath415 . in both cases @xmath416 and @xmath415 depend only on @xmath0 and @xmath280 respectively ; set @xmath417 .",
    "in sum we have @xmath418 , employing @xmath419 for @xmath420 .",
    "it is an easy exercise to show that @xmath421 and likewise @xmath422 holds .",
    "hence the lemma follows .",
    "[ t : relstep : root ] let @xmath392 be a constructor trs , and suppose @xmath372 and @xmath406 holds . then there exists a polynomial @xmath26 depending only on @xmath392 such that for any basic and ground term @xmath20 , @xmath423 .",
    "assume @xmath424 , otherwise @xmath425 is trivially bounded .",
    "moreover @xmath20 is a basic term , hence @xmath426{t } = t$ ] . from lemma  [ l :",
    "relstep : root ] we infer that @xmath427{t } ) ) = \\slow(\\intn({t}))$ ] for some @xmath139 , where the latter is polynomially bounded in @xmath27 and the polynomial only depends on @xmath139 , cf . lemma [ lem : slow : intn ] .",
    "finally @xmath139 depends only on @xmath392 .",
    "suppose @xmath0 is a constructor trs , and let @xmath176 denote the set of weak innermost dependency pairs .",
    "for the moment , suppose that all compound symbols of @xmath176 are nullary .",
    "provided that @xmath176 is non - duplicating and compatible with some sli , as a consequence of the above theorem paired with proposition [ p : dp ] , the inclusions @xmath428 and @xmath429 certify that @xmath77 is polynomially bounded .",
    "observe that for the application of @xmath8 and @xmath11 in the context of @xmath176 and @xmath430 , we alter definitions  [ d : pop2 ] and  [ d : pop3 ] such that @xmath431 is demanded .",
    "[ example [ ex : bits : orient ] continued ] reconsider the trs @xmath158 , and let @xmath176 denote @xmath159 as drawn in example [ ex : bits : widp ] . by taking the sli @xmath69 with @xmath432 , @xmath433 and @xmath434",
    "we obtain @xmath435 and moreover , observe that @xmath176 is both non - duplicating and contains only nullary compound symbols . in example",
    "[ ex : bits : orient ] we have seen that @xmath436 holds .",
    "similar , @xmath437 can easily be shown . from the above observation we thus conclude a polynomial runtime - complexity of @xmath158 .",
    "the assumption that all compound symbols from @xmath176 need to be nullary is straightforward to lift , but technical .",
    "hence , we do not provide a complete proof here , but only indicate the necessary changes .",
    "the formal construction can be found in the appendix .",
    "note that in the general case , it does not suffice to embed root steps of @xmath176 into @xmath125 , rather we have to embed steps of form @xmath438 \\vrew[\\ps ]   c[\\mrk{s_1},\\dots,\\mrk{t_i},\\dots,\\mrk{s_n}]$ ] with @xmath145 being a context built from compound symbols .",
    "as first measure we require that the argument filtering @xmath10 is _ safe _",
    "@xcite , that is @xmath439 $ ] for each compound symbol @xmath440 of arity @xmath76 . secondly , we adapt the predicative interpretation @xmath414 in such a way that compound symbols are interpreted as sequences , and their arguments by the interpretation @xmath414 . this way , a proper embedding using @xmath414 requires @xmath441 instead of @xmath442 .",
    "[ t : widp ] let @xmath0 be a constructor trs , and let @xmath176 denote the set of weak innermost dependency pairs .",
    "assume @xmath176 is non - duplicating , and suppose @xmath177 for some sli @xmath69 .",
    "let @xmath10 be a safe argument filtering . if @xmath428 and @xmath429 then @xmath77 is polynomially bounded .",
    "above it is essential that @xmath0 is a constructor trs .",
    "this even holds when @xmath4 is applied directly .",
    "[ ex : counterexample ] consider the trs @xmath443 below : @xmath444 the above rules are oriented ( directly ) by @xmath9 induced by @xmath200 and @xmath32 such that : ( i ) the argument position of @xmath445 and @xmath446 are normal , the remaining argument positions are safe , and ( ii ) @xmath447 . on the other hand",
    ", @xmath443 admits at least exponential innermost runtime - complexity , as for instance @xmath448 normalizes in exponentially ( in @xmath76 ) many innermost rewrite steps .    to overcome this obstacle",
    ", we adapt the definition of @xmath9 in the sense that we refine the notion of defined function symbols as follows .",
    "let @xmath449 denote the least set containing @xmath50 and all symbols appearing in arguments to left - hand sides in @xmath0 . moreover , set @xmath450 and set @xmath451 .",
    "then in order to extend theorem  [ t : widp ] to non - constructor trs it suffices to replace @xmath49 by @xmath452 and @xmath50 by @xmath449 in all above given definitions and arguments ( see  @xcite for the formal construction ) .",
    "thus the next theorem follows easily from combining proposition  [ p : dg ] and theorem  [ t : widp ] .",
    "note that this theorem can be easily extended so that in each path different termination techniques ( inducing polynomial runtime complexity ) are employed , see  @xcite and section  [ s : exps ] .",
    "[ t : widg ] let @xmath0 be a trs .",
    "let @xmath165 denote the weak innermost dependency graph , and let @xmath453 be separated as above .",
    "suppose for every path @xmath454 in @xmath187 there exists an sli @xmath69 and a pair @xmath7 based on a safe argument filtering @xmath10 such that ( i ) @xmath455 ( ii ) @xmath456 , and ( iii ) @xmath457 holds",
    ". then @xmath77 is polynomially bounded .",
    "the next theorem establishes that  in conjunction with ( weak innermost ) dependency pairs induces polytime computability of the function described through the analysed trs .",
    "we kindly refer the reader to the appendix for the proof .",
    "[ t : polytime ] let @xmath0 be an orthogonal , @xmath458-sorted and completely defined constructor trs such that the underlying signature is simple .",
    "let @xmath176 denote the set of weak innermost dependency pairs .",
    "assume @xmath176 is non - duplicating , and suppose @xmath177 for some sli @xmath69 . if @xmath428 and @xmath429 then the functions computed by @xmath0 are computable in polynomial time .    here",
    "_ simple _ signature @xcite essentially means that the size of any constructor term depends polynomially on its depth .",
    "such a restriction is always necessary in this context .",
    "a detailed account is given in the appendix ( see alo  @xcite ) .",
    "this restriction is also responsible for the introduction of sorts .",
    "all described techniques have been incorporated into the _ tyrolean complexity tool _ @xmath459 , an open source complexity analyser .",
    "we performed tests on two testbeds : * t * constitutes of the @xmath460 examples from the termination problem database version 5.0.2 that were used in the runtime - complexity category of the termination competition 2008 .",
    "moreover , testbed * c * is the restriction of testbed * t * to constructor trss ( @xmath461 in total ) .",
    "all experiments were conducted on a machine that is identical to the official competition server ( @xmath462 amd opteron@xmath463 885 dual - core processors with 2.8ghz , @xmath464 gb memory ) . as timeout",
    "we use 5 seconds .",
    "we orient trss using @xmath8 by encoding the constraints on precedence and so forth in _ propositional logic _",
    "@xcite for details ) , employing @xmath465  @xcite for finding satisfying assignments . in a similar spirit",
    ", we check compatibility with slis via translations to sat . in order to derive an estimated dependency graph",
    ", we use the function @xmath466 ( cf .",
    "@xcite ) .",
    "experimental findings are summarised in table  [ tbl : exp1 ] . in each column , we highlight the total on yes- , maybe- and timeout - instances . furthermore , we annotate average times in seconds . in the first three columns we contrast  as direct technique to  as base to ( weak innermost ) dependency pairs .",
    "i.e. , the columns @xmath467 and @xmath468 show results concerning proposition [ p : usable ] together with theorem  [ t : widp ] or theorem  [ t : widg ] respectively .    in the remaining four columns we assess the power of proposition  [ p : usable ] and  [ p : dg ] in conjunction with different base orders , thus verifying that the use of  in this context is independent to existing techniques . column",
    "  asserts that the different paths are handled by _ linear and quadratic restricted interpretations _  @xcite . in column  , in addition  is employed .",
    "similar , in column  _ restricted matrix interpretations _ ( that is matrix interpretations  @xcite , where constructors are interpreted by triangular matrices ) are used to handle different paths .",
    "again column  extends column  with .",
    "note that all methods induce polynomial innermost runtime complexity .",
    "c@|@|l@ r@l @r@l @r@l @@r@l @r@l @r@l @r@l & & + & & & & & & & + * t * & yes & 46 & * * & 69 & * * & 80 & * * & 198 & * * & 198 & * * & 200 & * * & 207 & * * + & maybe & 1348 & * * & 1322 & * * & 1302 & * * & 167 & * * & 170 & * * & 142 & * * & 142 & * * + & timeout & 0 & & 3 & & 12 & & 1029 & & 1026 & & 1052 & & 1045 + * c * & yes & 40 & * * & 48 & * * & 55 & * * & 99 & * * & 100 & * * & 98 & * * & 105 & * * + & maybe & 598 & * * & 587 & * * & 576 & * * & 143 & * * & 146 & * * & 119 & * * & 119 & * * + & timeout & 0 & & 3 & & 7 & & 396 & & 392 & & 421 & & 414 +    table [ tbl : exp1 ] reflects that the integration of  in the context of ( weak ) dependency pairs , significantly extends the direct approach .",
    "worthy of note , the extension of @xcite with quasi - precedences alone gives 5 additional examples .",
    "as advertised ,  is incredibly fast in all settings .",
    "consequently , as evident from the table , polynomial path orders team well with existing techniques , without affecting overall performance : notice that due to the additional of  the number of timeouts is reduced .",
    "in this paper we study the runtime complexity of rewrite systems .",
    "we combine two recently developed techniques in the context of complexity analysis : weak innermost dependency pairs and polynomial path orders .",
    "if the conditions of our main result are met , we can conclude the innermost polynomial runtime complexity of the studied term rewrite system .",
    "and we obtain that the function defined are _",
    "polytime computable_. we have implemented the technique and experimental evidence clearly indicates the power and in particular the efficiency of the new method .",
    "below we present the missing proofs of theorem  [ t : widp ] and theorem  [ t : polytime ] respectively .    as mentioned in section  [ s :",
    "dppop ] , we now introduce an _ extended predicative interpretation _ whose purpose is to interpret compound symbols as sequences , and their arguments via the interpretation @xmath414 .      following ( * ? ? ?",
    "* section 6.5 ) , we briefly recall _ typed rewriting_. let @xmath458 be a finite set representing the set of _ types _ or _ sorts_. an _ @xmath458-sorted set @xmath475 _ is a family of sets @xmath476 such that all sets @xmath477 are pairwise disjoint . in the following , we suppose that @xmath14 denotes an @xmath458-sorted set of variables",
    "@xmath458-sorted signature @xmath15 _ is like a signature , but the _ arity _ of @xmath241 is defined by @xmath478 for @xmath479 .",
    "additionally , each symbol @xmath241 is associated with a sort @xmath480 , called the _ type of @xmath201 _ and denoted by @xmath481 .",
    "we adopt the usual notion and write @xmath482 when @xmath478 and @xmath483 .",
    "@xmath458-sorted set of terms @xmath484 _ consists of the sets @xmath485 for @xmath480 , where @xmath485 is inductively defined by ( i ) @xmath486 , and ( ii ) @xmath487 for all function symbols @xmath241 , @xmath482 and terms @xmath488 for @xmath97 .",
    "we say that a term @xmath20 is _ well - typed _ if @xmath489 for some sort @xmath25 .",
    "an @xmath458-sorted term rewrite system @xmath0 is a trs such that for @xmath57 , it holds that @xmath490 for some sort @xmath480 . as a consequence , for @xmath491 and @xmath492",
    ", we have that @xmath489 .",
    "[ ex : a:1 ] let @xmath493 .",
    "the @xmath458-sorted rewrite system @xmath494 is given by the following rules : @xmath495 here we assign arities and sorts as follows : for the constructors we set @xmath496 , @xmath497 , @xmath498 , @xmath499 , @xmath500 , @xmath501 ; for the defined symbols we set @xmath502 and @xmath503 .    a _ simple _ signature @xcite is a sorted signature such that each sort has a finite _ rank _ @xmath504 in the following sense : the sort @xmath25 has rank @xmath504 if for every constructor @xmath505 , the rank of each sort @xmath506 is less than the rank of @xmath25 , except for at most one sort which can be of rank @xmath504 .",
    "simple signatures allow the definition of enumerated datatypes and inductive datatypes like words and lists but prohibit for instance the definition of tree structures .",
    "observe that the signature underlying @xmath494 from example  [ ex : a:1 ] is simple .",
    "a crucial insight is that sizes of values formed from a simple signature can be estimated polynomially in their depth .",
    "the easy proof of the following proposition can be found in ( * ? ? ?",
    "* proposition  17 ) .      in order to give a polytime algorithm for the functions computed by a trs , it is essential that sizes of reducts do not exceed a polynomial bound with respect to the size of the start term .",
    "recall that approximations @xmath125 tightly control the size growth of terms . for simple signatures",
    ", we can exploit this property for a space - complexity analysis .",
    "although predicative interpretations remove values , by the above proposition sizes of those can be estimated based on the buchholz - norm record in @xmath414 .",
    "and so we derive the following lemma , essential for the proof of theorem  [ t : polytime ] .",
    "the lemma follows as : ( i ) for all sequences @xmath512 , @xmath513 , and ( ii ) for all terms @xmath510 , @xmath514(t)}^d $ ] for some uniform constants @xmath515 .",
    "these properties are simple to verify : property ( i ) follows from induction on @xmath25 where we employ for the inductive step that @xmath516 $ ] and @xmath517 ) = \\sum_{i=1}^n \\slow(s_i ) + n$ ] . for property ( ii ) ,",
    "set @xmath518 where @xmath504 is the maximal rank of a symbol in @xmath50 , and set @xmath519 where @xmath520 is as given from proposition  [ prop : ss ] .",
    "first one shows by a straight forward induction on @xmath20 that @xmath521(t ) } \\cdot \\bn{t}^{r+1})$ ] ( employing proposition  [ prop : ss ] and @xmath522 ) . as @xmath523(t ) } < \\size{\\intn[](t)}$ ] and @xmath524(t)}$ ] , we derive @xmath525(t)}^{d}$ ] . by induction on the definition of @xmath526 $ ]",
    "we finally obtain property ( ii ) .",
    "let @xmath0 be a ( not necessarily @xmath458-sorted ) trs that is innermost terminating . in the sequel ,",
    "we keep @xmath0 fixed . in order to exploit lemma  [ l : slow : sizebound ] for an analysis by means of weak innermost dependency pairs , we introduce the notion of _ type preserving weak innermost dependency pairs_.    if @xmath150 and @xmath151 then @xmath527 is called a _ type preserving weak innermost dependency pair _ of @xmath0 . here , the _ compound symbol _",
    "@xmath156 is supposed to be fresh .",
    "we set @xmath528 and say that @xmath156 _ represents _ the context @xmath145 .",
    "the set of all type preserving weak innermost dependency pairs is denoted by @xmath157 .",
    "[ ex : a:2 ] reconsider the rewrite system @xmath494 given in example  [ ex : a:1 ] .",
    "the set @xmath531 is given by @xmath532 the constant @xmath533 represents for instance the empty context , and the constant @xmath534 represents the context @xmath535 .",
    "[ l : tpwidp : preserve ] let @xmath0 be an @xmath458-sorted trs such that the underlying signature @xmath15 is simple",
    ". then @xmath536 is an @xmath458-sorted trs , and the underlying signature @xmath537 a simple signature .    to conclude the claim",
    ", it suffices to type the marked and compound symbols appropriately . for each rule",
    "@xmath538 we proceed as follows : we set @xmath539 and @xmath540 . moreover , we set @xmath541{\\type}{r})$ ] and @xmath542 . it is easy to see that since @xmath0 is @xmath458-sorted , @xmath543 is @xmath458-sorted too .",
    "note that the above lemma fails for weak innermost dependency pairs : consider the rule @xmath544 , where @xmath545 and @xmath546 are defined symbols and @xmath547 is a constructor .",
    "moreover , suppose @xmath548 , @xmath549 and @xmath550 .",
    "then we can not type the corresponding weak innermost dependency pair @xmath551 as above because ( return-)types of @xmath552 and @xmath553 differ .    as for practical all termination techniques , compatibility of weak innermost dependency pairs with polynomial path orders also yield compatibility of type preserving weak innermost dependency pairs .",
    "moreover , from the definition we immediately see that @xmath554 with @xmath555 and basic term @xmath20 .",
    "and so it is clear that in order to proof theorem  [ t : widp ] and theorem  [ t : polytime ] , @xmath157 can safely be replaced by @xmath529 .",
    "we continue with the proof of theorem  [ t : widp ] .",
    "let @xmath556 abbreviate the set of contexts @xmath557 build from compound symbols",
    ". set @xmath558 and @xmath555 . in order to highlight the correspondence between @xmath48 and @xmath559 ,",
    "we extend the notion of _",
    "[ d : reprs ] let @xmath560 .",
    "we define @xmath561 as the least set of ( ground ) contexts such that ( i ) if @xmath562 then @xmath563 , and ( ii ) if @xmath564 , @xmath565 and @xmath183 is a substitution from all variables in @xmath566 to ground normal forms of @xmath0 then @xmath567 \\in \\reprs{c}$ ] .",
    "[ ex : a:3 ] reconsider the trs @xmath494 from example  [ ex : a:1 ] , together with @xmath531 as given in example  [ ex : a:2 ] . consider the step @xmath568 \\cns(\\prs(0,\\gs(0 ) ) , \\fs(0))$ ] and the corresponding dependency pair step @xmath569 \\cs_1(\\mrk{\\gs}(0 ) , \\mrk{\\fs}(0 ) ) \\tpkt\\ ] ] let @xmath570 , remember that @xmath535 , @xmath571 and observe that @xmath572 by taking the substitution @xmath573 .",
    "and hence we can reformulate the above two steps as @xmath568 c'[\\gs(0 ) , \\fs(0)]$ ] and likewise @xmath574     c[\\mrk{\\gs}(0 ) , \\mrk{\\fs}(0)]$ ] .",
    "[ l : tpwidp : sizesimul ] let @xmath575 be a ground and basic term .",
    "suppose @xmath576 .",
    "let @xmath558 and let @xmath555 .",
    "then there exists contexts @xmath577 , @xmath578 and terms @xmath579 such that @xmath580 $ ] and moreover , @xmath581 c'[\\mrk{t_1},\\dots,\\mrk{t_n}]$ ] .",
    "we proof the lemma by induction on the length of the rewrite sequence @xmath582 .",
    "the base case @xmath583 is trivial , we set @xmath584 .",
    "so suppose @xmath585 and the property holds for @xmath76 .",
    "and thus we can find contexts @xmath586 , @xmath587 and terms @xmath579 such that @xmath588 $ ] and moreover , @xmath581 c'_t[\\mrk{t_1},\\dots,\\mrk{t_n}]$ ] .",
    "without loss of generality we can assume @xmath589 $ ] with @xmath590 , as the context @xmath591 is solely build from constructors and normal forms of @xmath0 .    first ,",
    "suppose @xmath592 , and hence @xmath593 for @xmath57 and substitution @xmath594 .",
    "moreover @xmath595 such that @xmath596 $ ] .",
    "we set @xmath597 as the context obtained from replacing the @xmath357-th hole of @xmath598 by @xmath599 , likewise we set @xmath145 as the context obtained from replacing the @xmath357-th hole of @xmath591 by @xmath600 . note that @xmath578 .",
    "we conclude @xmath581 c'[\\mrk{t_1},\\dots,{\\mrk{r_1}\\sigma,\\dots,\\mrk{r_m}\\sigma},\\dots,\\mrk{t_n}]$ ] and @xmath601 $ ] which establishes the lemma for this case .",
    "now suppose @xmath590 is a step below the root .",
    "thus we have also @xmath602 .",
    "as shown in ( * ? ? ?",
    "* lemma 16 ) , the latter can be strengthened to @xmath603{\\ps \\cup \\us } \\mrk{u_i}$ ] .",
    "we conclude @xmath581    c'_t[\\mrk{t_1},\\dots,\\mrk{u_i},\\dots,\\mrk{t_n}]$ ] , and the lemma follows by setting @xmath604 and @xmath605 .",
    "suppose @xmath157 contains non - nullary compound symbols . in order to establish an embedding in the sense of lemma",
    "[ l : embed ] for that case , by the above lemma we see that it suffices to consider only terms of shape @xmath606 $ ] with @xmath560 . with this insight",
    ", we adjust lemma  [ l : embed ] as below .",
    "observe that due to the definition of @xmath469 , we can not simply apply lemma  [ l : embed ] together with closure under context of @xmath125 here .",
    "[ l : intq : embed ] let @xmath607 $ ] for @xmath560 and @xmath608 .",
    "let @xmath558 and @xmath555 .",
    "there exists a uniform constant @xmath609 depending only on @xmath0 such that if @xmath428 holds then @xmath610 t$ ] implies @xmath611 .",
    "moreover , if @xmath612 holds then @xmath613 t$ ] implies @xmath614 .",
    "we proof the lemma for @xmath615 .",
    "suppose @xmath610 t$ ] or @xmath613 t$ ] respectively , and thus @xmath616 $ ] for some term @xmath617 .",
    "there exists a context @xmath597 ( over sequences ) such that @xmath618 $ ] and @xmath619 $ ] .",
    "first assume @xmath620 t_i$ ] , and thus @xmath621 $ ] and @xmath622,\\dots,[\\intn(\\mrk{r_m}\\sigma)]]$ ] for @xmath623 . to verify @xmath611 , by definition  [ d : approx]([d : approx : ii ] ) and definition  [ d : approx]([d : approx : iv ] ) , it suffices to verify @xmath624 for all @xmath102 .",
    "the latter is an easy consequence of lemma  [ l : embed ] , where we employ that ( i ) @xmath625 follows from the assumption @xmath428 , and ( ii ) @xmath626 .",
    "both properties are straight forward to verify since @xmath10 is safe . for @xmath627 t$ ] we have @xmath628 $ ] and @xmath629 $ ] for @xmath630 . from lemma  [ l : embed ] we obtain @xmath631 which establishes the lemma .",
    "let @xmath0 be a constructor trs , and let @xmath176 denote the set of weak innermost dependency pairs .",
    "assume @xmath176 is non - duplicating , and suppose @xmath177 for some sli @xmath69 .",
    "let @xmath10 be a safe argument filtering . if @xmath428 and @xmath429 then @xmath77 is polynomially bounded .    according to proposition  [ p : dp ] we need to find a polynomial @xmath26 such that @xmath632 we set @xmath558 and likewise @xmath555 .",
    "clearly , it suffices to show @xmath633 for that .",
    "consider a sequence @xmath634 and pick a relative step @xmath635 .",
    "define @xmath636 and @xmath637{t}$ ] .",
    "clearly lemma  [ l : v : simulation : relative ] can be extended to account for steps of @xmath176 below the root , and thus @xmath638 follows . hence for some terms @xmath400 and @xmath401 , @xmath639 u \\vrew[\\ps ] v \\vrss[\\us ' ] \\nfv{t_{i+1}}$ ] .",
    "as shown in lemma  [ l : tpwidp : sizesimul ] , all involved terms in the above sequence have the shape @xmath640 $ ] , @xmath560 .",
    "as @xmath641 , and since @xmath10 is safe , it is easy to infer that @xmath428 holds ( we just set every compound symbol from @xmath176 minimal in the precedence ) . and",
    "hence lemma  [ l : intq : embed ] translates the above relative step to @xmath642 for some uniform constant @xmath139 . as a consequence , @xmath643 for all terms @xmath20 .",
    "fix some reducible and basic term @xmath644 .",
    "observe @xmath645 $ ] and so from lemma  [ d : pred : int ] we see that @xmath646 is bounded polynomially in the size of @xmath20 .",
    "the polynomial depends only on @xmath139 .",
    "we conclude the theorem .",
    "we first precisely state what it means that a trs _ computes _ some function . for this , let @xmath647 denote an _ encoding function _ that represents words over the alphabet @xmath648 as ground values .",
    "we call an encoding @xmath649 _ reasonable _ if it is bijective and there exists a constant @xmath650 such that @xmath651 for every @xmath652 .",
    "let @xmath649 denote a reasonable encoding function , and let @xmath0 be a completely defined , orthogonal and terminating trs .",
    "we say that an @xmath76-ary function @xmath653 is _ computable _ by @xmath0 if there exists a defined function symbol @xmath654 such that for all @xmath655 @xmath656 . on the other hand the trs @xmath0 _ computes _ @xmath201 , if the function @xmath653 is defined by the above equation .",
    "below we abbreviate @xmath657 as @xmath658 for predicative interpretation @xmath659,\\intn[],\\intq[]}$ ] and the particular argument filtering @xmath10 that induces the identity function on terms .",
    "consider the following lemma .",
    "[ l : tpwidp : sizebound ] let @xmath0 be an @xmath458-sorted and completely defined constructor trs such that the underlying signature is simple .",
    "if @xmath660 then there exists a polynomial @xmath26 such that for all ground and well - typed basic terms @xmath644 , @xmath661 s$ ] implies @xmath662 .",
    "let @xmath663 .",
    "suppose @xmath664 s$ ] , or equivalently @xmath665 s$ ] since @xmath0 is completely defined .",
    "by lemma  [ l : intq : embed ] we derive @xmath526(\\mrk{t } ) \\geqpopv_k^ * \\intq[](s)$ ] for some uniform @xmath371 .",
    "and thus @xmath666(s ) ) \\leqslant \\slow(\\intq[](\\mrk{t}))$ ] . as @xmath666(\\mrk{t } ) ) = \\slow([\\intn[](\\mrk{t})])$ ] is bounded polynomially in the size of @xmath20 according to lemma  [ lem : slow : intn ] , we see that there exists a polynomial @xmath26 such that @xmath666(s ) )    \\leqslant \\slow(\\intq[](\\mrk{t } ) ) \\leqslant p(\\size{t})$ ] . since @xmath0 is and @xmath458-sorted trs over a simple signature , the same holds for @xmath280 due to lemma  [ l : tpwidp : preserve ] . and thus since @xmath667 is well - typed and @xmath664 s$ ] holds , also @xmath25 is well - typed",
    ". let @xmath668 be the polynomial as given from lemma  [ l : slow : sizebound ] with @xmath669(s)))$ ] .",
    "summing up , we derive @xmath669(s ) ) ) \\leqslant q(p(\\size{t}))$ ] as desired .",
    "the above lemma has established that sizes of reducts with respect to the relation @xmath670 $ ] are bounded polynomially in the size of the start term , provided we can orient dependency pairs and usable rules .",
    "it remains to verify that this is indeed sufficient to appropriately estimate sizes of reducts with respect to @xmath48 .",
    "the fact is established in the final theorem .",
    "let @xmath0 be an orthogonal @xmath458-sorted and completely defined constructor trs such that the underlying signature is simple .",
    "let @xmath176 denote the set of weak innermost dependency pairs .",
    "assume @xmath176 is non - duplicating , and suppose @xmath177 for some sli @xmath69 . if @xmath428 and @xmath429 then the functions computed by @xmath0 are computable in polynomial - time .",
    "we single out one of the defined symbols @xmath671 and consider the corresponding function @xmath672 computed by @xmath0 . under the assumptions , @xmath0 is terminating , but moreover @xmath77 is polynomially bounded according to theorem  [ t : widp ] .",
    "additionally , from orthogonality ( and hence confluence ) of @xmath0 , normal forms are unique and so the function @xmath201 is well - defined .",
    "suppose @xmath673 for words",
    "@xmath674 . in particular , from confluence we see that @xmath675 it is folklore that there exists a polytime algorithm performing one rewrite step . hence to conclude the existence of a polytime algorithm for @xmath201 it suffices to bound the size of terms @xmath617 for @xmath676 polynomially in @xmath677 .",
    "and as we suppose that the encoding @xmath649 is reasonable , it thus suffice to bound the sizes of @xmath617 for @xmath678 polynomially in the size of @xmath679 .",
    "consider a term @xmath617 . without loss of generality",
    ", we can assume @xmath617 is ground . according to lemma  [ l : tpwidp : sizesimul ] there exists contexts @xmath680 , @xmath681 and terms @xmath682 such that @xmath683 $ ] and moreover , @xmath684    c'_i[\\mrk{u_1},\\dots,\\mrk{u_n}]$ ] for all @xmath678 .",
    "from the assumption @xmath685 we see @xmath686 .",
    "thus by lemma  [ l : tpwidp : sizebound ] there exists a polynomial @xmath26 such that @xmath687 } \\leqslant p(\\size{t_0})$ ] . and",
    "so , clearly @xmath688 .",
    "it remains to bound the sizes of contexts @xmath689 polynomially in @xmath690 .",
    "recall definition  [ d : reprs ] , and recall that @xmath681 .",
    "thus @xmath689 is a context build from constructors and variables , where the latter are replaced by normal forms of @xmath0 .",
    "since @xmath0 is completely defined , @xmath52 coincides with values .",
    "we conclude that @xmath691 . here",
    "@xmath692 denotes the hole of sort @xmath25 .",
    "moreover since @xmath0 is @xmath458-sorted , and @xmath693 $ ] , we see that @xmath689 is well - typed .",
    "we define @xmath694 . by a straight forward induction it follows that @xmath695 . as a consequence , @xmath696 , and",
    "thus by proposition  [ prop : ss ] there exists constants @xmath697 such that @xmath698 . as we have that @xmath699",
    "is polynomially bounded in the size of @xmath700 , it follows that @xmath701 for some polynomial @xmath668 .",
    "carsten fuhs , jrgen giesl , aart middeldorp , peter schneider - kamp , ren thiemann , and harald zankl . solving for termination analysis with polynomial interpretations . in _ proc .",
    "10th sat _ ,",
    "volume 4501 of _ lncs _ , pages 340354 , 2007 ."
  ],
  "abstract_text": [
    "<S> we show how polynomial path orders can be employed efficiently in conjunction with weak innermost dependency pairs to automatically certify polynomial runtime complexity of term rewrite systems and the polytime computability of the functions computed . </S>",
    "<S> the established techniques have been implemented and we provide ample experimental data to assess the new method . </S>"
  ]
}
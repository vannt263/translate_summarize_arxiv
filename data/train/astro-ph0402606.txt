{
  "article_text": [
    "the spectral fluid algorithm ( canuto et .",
    "al . 1987 ) uses fast fourier transforms ( ffts ) to compute gradients , the most precise means possible .",
    "finite - difference gradients based on a polynomial fit execute faster than ffts but with less accuracy , necessitating more grid zones to achieve the same resolution as the spectral method .",
    "the loss of accuracy outweighs the gain in speed and the spectral method has more resolving power than the finite - difference method .",
    "we introduce an alternative finite - difference formula not based on a polynomial fit that executes as quickly but with improved accuracy , yielding greater resolving power than the spectral method .    in section [ finite ]",
    "we derive high - wavenumber finite difference formulas and exhibit their effect on the resolving power of a turbulence simulation in section [ flop ] . in section [ mhd ]",
    "we apply finite differences for the purpose of mimicking the spectral algorithm , and then proceed to other applications in section [ applications ] .",
    "define a function @xmath0 on a set of grid points @xmath1 with j an integer . then construct a gradient @xmath2 at @xmath3 from sampling a stencil of grid points with radius ( or order )",
    "@xmath4 on each side .",
    "the familiar result for the gradient on a radius-1 stencil is @xmath5 which is obtained from fitting a polynomial of degree @xmath6 to @xmath7 for a degree 4 polynomial on a radius-2 stencil , @xmath8 for a stencil of order @xmath4 , @xmath9 where @xmath10    consider the finite - difference error at x=0 for a fourier mode @xmath11 cosine modes can be ignored because they do nt contribute to the derivative at @xmath12 note that the wavenumber @xmath13 is scaled to grid units so that @xmath14 corresponds to the maximum wavenumber expressible on the grid , also known as the nyquist limit .",
    "the finite difference formula ( [ stencil ] ) gives @xmath15 whereas the correct value should be @xmath16 define an error function @xmath17 figure @xmath18 shows @xmath19 for stencils of radius 1 through 24 .",
    "the first order finite difference formula is quite lame , delivering 1 percent accuracy only for @xmath13 less than @xmath20 brandenburg ( 2001 ) recognized that higher - order finite differences can significantly extend the wavenumber resolution of the polynomial - based finite difference .",
    "the 8th order finite difference accuracy is better than 1 percent up to @xmath21 and the 16th order finite difference up to @xmath22 nevertheless these are still far from the nyquist limit of @xmath14 and even higher - order finite - differences yield little further progress .",
    "a fourier transform gives the correct gradient for all @xmath13 up to unity .",
    "this is why the spectral algorithm delivers the most resolution per grid element .",
    "the resolution limit is set by the maximum @xmath13 for which gradients can be captured accurately .",
    "although the 8th order finite - difference formula involves considerably fewer floating point operations than an fft , the loss of resolution still renders it less efficient than the spectral method .",
    "polynomial - based finite differences have high accuracy at low @xmath13 but fail at large @xmath23 we can instead construct a more practical scheme to improve high-@xmath13 accuracy at the expense of low-@xmath13 accuracy , yet the loss of low-@xmath13 accuracy is negligibly small . from equation [ eqerror ] , we see that the problem of computing accurate gradients reduces to optimizing , or  tuning \" the coefficients @xmath24 to minimize the error over a suitable range of k , or equivalently to construct a sine series that best mimics a linear function .",
    "a set of tuned coefficients appear in table 2 with the associated error functions in figure 1 .",
    "the error in the radius-8 tuned finite difference is less than 1 percent up to @xmath25 a dramatic improvement over the radius-8 polynomial .",
    "an algorithm based on tuned gradients still has a lower maximum @xmath13 than the spectral algorithm but due to its increased speed it has greater resolving power ( section [ flop ] ) .",
    "henceforth we denote these tuned gradients as  hypergradients . \"",
    "minimizing the error function involves a multiparameter optimization of the coefficients @xmath26 - a problem - dependent task with multiple legitimate options .",
    "in fact , a high degree of customization is possible for the form of the error function . for this application",
    "we proceed as follows .",
    "define a target @xmath27 and an indicator for the quality of the tuned coefficients : @xmath28 ^ 4.\\ ] ] then , perform a multi - dimensional optimization on @xmath29 the use of a fourth power ensures an approximately uniform error within @xmath30 although a weight function could be added to further customize the form of the error function .",
    "@xmath27 is then adjusted until the error is 1 percent .",
    "the procedure is repeated for each order @xmath4 to yield the coefficients in table 2 .",
    "it is worth noting that the radius-8 tuned coefficients are similar to the radius-24 polynomial coefficients .",
    "this is not surprising because the polynomial coefficients are too small to matter outside of radius 8 .",
    "[ cols=\"<,<,<,<,<,<,<,<,<,<\",options=\"header \" , ]     _ table 7 : index of simulations .",
    "all simulations have @xmath31 , @xmath32 and @xmath33 except for z677 , which has @xmath34 @xmath35 indicates that the fft divergence correction is never applied .",
    "all finite - difference simulations utilize a radius-8 stencil and a phase - shift dealiasing correction . _",
    "the most accurate and most expensive interpolation procedure is drect evaluation of the fourier series .",
    "tuned finite differences provide a less expensive interpolation high - wavenumber interpolation .",
    "for example , in 2d , the centered interpolation ( equation [ eqinterp ] ) provides function values halfway between grid points , and another interpolation along the diagonal yields the values at the grid centers .",
    "we have thus doubled the resolution of the grid , which we can do again if we wish .",
    "note that we can do this for the entire grid or just for a subsection .",
    "after a few doublings , a simple linear interpolation serves to provide the function value at any point in space , yielding a 2d interpolation with the same wavenumber resolution as the component 1d interpolation .",
    "this procedure generalizes to arbitrary dimension .    as if it was nt enough trouble to run large simulations on thousands of cpus , one is next confronted with analyzing large data cubes that are too big to fit in the memory of one machine .",
    "tuned operators allow for the construction of local local alternatives to global functions like the fft .",
    "these include derivatives , dealiasing , filtering , and grid interpolation .",
    "large output files can be stored in small easy - to - manage segments and operated on successively . for the purpose of data analysis , we have provided",
    "radius-16 tuned operators in table 3 that are accurate to 0.3 percent .",
    "we thank eric blackman , benjamin chandran , peggy varniere , yoram lithwick , and tim dennis for useful discussions , and yoram lithwick for the fft benchmark results .",
    "the simulations were run at the pittsburgh supercomputing center s alpha es45  lemieux \" with the national resource allocation committee grant mca03s010p , and at the national center for supercomputing applications intel itanium  titan \" with the grant ast020012n .",
    "the author was supported by dr .",
    "eric blackman s doe grant de - fg02 - 00er54600 at the university of rochester , and by dr .",
    "benjamin chandran s nsf grant ast-0098086 and doe grants de - fg02 - 01er54658 and de - fc02 - 01er54651 , at the university of iowa ."
  ],
  "abstract_text": [
    "<S> we introduce a fluid dynamics algorithm that performs with nearly spectral accuracy , but uses finite - differences instead of ffts to compute gradients and thus executes 10 times faster . </S>",
    "<S> the finite differencing is not based on a high - order polynomial fit . </S>",
    "<S> the polynomial scheme has supurb accuracy for low - wavenumber gradients but fails at high wavenumbers . </S>",
    "<S> we instead use a scheme tuned to enhance high - wavenumber accuracy at the expense of low wavenumbers , although the loss of low - wavenumber accuracy is negligibly slight . </S>",
    "<S> a tuned gradient is capable of capturing all wavenumbers up to 80 percent of the nyquist limit with an error of no worse than 1 percent . </S>",
    "<S> the fact that gradients are based on finite differences enables diverse geometries to be considered and eliminates the parallel communications bottleneck . </S>"
  ]
}
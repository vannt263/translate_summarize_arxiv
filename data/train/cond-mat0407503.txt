{
  "article_text": [
    "many systems can usefully be represented as networks or graphs  collections of vertices joined in pairs by edges .",
    "examples include the internet and the world wide web , citation networks , social networks , and biological and biochemical networks of various kinds .",
    "although an old and well established branch of study in mathematics and sociology , research on networks has in recent years attracted significant attention from members of the physics community as well , who have successfully applied a variety of physical ideas to the analysis and modeling of these systems  @xcite .",
    "most of the networks that have been studied in the physics literature have been binary in nature ; that is , the edges between vertices are either present or not .",
    "such networks can be represented by @xmath0 or binary matrices .",
    "a network with @xmath1 vertices is represented by an @xmath2 adjacency matrix  @xmath3 with elements @xmath4 however , as has long been appreciated , many networks are intrinsically weighted , their edges having differing strengths . in a social network",
    "there may be stronger or weaker social ties between individuals . in a metabolic network",
    "there may be more or less flux along particular reaction pathways . in a food web",
    "there may be more or less energy or carbon flow between predator - prey pairs .",
    "edge weights in networks have , with some exceptions  @xcite , received relatively little attention in the physics literature for the excellent reason that in any field one is well advised to look at the simple cases first ( unweighted networks ) before moving on to more complex ones ( weighted networks ) . on the other hand , there are many cases where edge weights are known for networks , and to ignore them is to throw out a lot of data that , in theory at least , could help us to understand these systems better .    in this paper , we highlight a simple but useful technique that allows us to say many things about weighted networks without deviating far from the familiar territory of unweighted ones . by mapping weighted networks onto multigraphs , we point out , many of the standard techniques that have been developed to study unweighted networks can be carried over with little or no modification to the weighted case .",
    "we present a number of examples of applications to well known network problems .",
    "a weighted network can be represented mathematically by an adjacency matrix with entries that are not simply zero or one , but are equal instead to the weights on the edges : @xmath5 for example : @xmath6{weighted.eps}}\\quad    \\raise-1.8ex\\hbox{$\\equiv$}\\quad      \\begin{matrix }        \\hbox to 4.5em{\\vphantom{\\big|}\\footnotesize a\\hfil b\\hfil c\\hfil d }        \\\\",
    "\\begin{pmatrix }          0 & 1 & 3 & 1 \\\\          1 & 0 & 2 & 0 \\\\          3 & 2 & 0 & 0 \\\\          1 & 0 & 0 & 0        \\end{pmatrix }        &        \\begin{matrix }          \\mbox{\\footnotesize a } \\\\",
    "\\mbox{\\footnotesize b } \\\\",
    "\\mbox{\\footnotesize c } \\\\",
    "\\mbox{\\footnotesize d }        \\end{matrix }      \\end{matrix } \\label{example1}\\ ] ] in this example the weights on the edges are all integers , and we will focus on the integer case for the moment . we will also assume throughout this paper that all weights are non - negative .",
    "negative weights are possible in some cases .",
    "they are , for instance , used sometimes in sociological studies of acquaintance networks to represent animosity between individuals .",
    "we will not treat this case here however .",
    "adjacency matrices with non - negative integer entries occur in another situation as well , in networks with multiple edges between vertex pairs .",
    "for example : @xmath6{multi.eps}}\\quad    \\raise-1.8ex\\hbox{$\\equiv$}\\quad      \\begin{matrix }        \\hbox to 4.5em{\\vphantom{\\big|}\\footnotesize a\\hfil b\\hfil c\\hfil d }        \\\\",
    "\\begin{pmatrix }          0 & 1 & 3 & 1 \\\\          1 & 0 & 2 & 0 \\\\          3 & 2 & 0 & 0 \\\\          1 & 0 & 0 & 0        \\end{pmatrix }        &        \\begin{matrix }          \\mbox{\\footnotesize a } \\\\",
    "\\mbox{\\footnotesize b } \\\\",
    "\\mbox{\\footnotesize c } \\\\",
    "\\mbox{\\footnotesize d }        \\end{matrix }      \\end{matrix } \\label{example2}\\ ] ] multiple edges are sometimes called multiedges and networks or graphs containing them multigraphs , and we will use this nomenclature here .    as we can see , the two networks ( [ example1 ] ) and  ( [ example2 ] ) have the same adjacency matrix , and in many ways they behave the same . for example , if we are thinking of traffic flowing over the internet ( or even traffic down a road ) , then the maximum traffic that can flow between two vertices joined by two identical edges is the same as the maximum that can flow between the same two vertices if they are joined by a single edge with twice the capacity .",
    "this suggests that we could obtain insight into the behavior of weighted graphs very simply by mapping them onto unweighted multigraphs .",
    "that is , every edge of weight @xmath1 is replaced with @xmath1 parallel edges of weight 1 each , connecting the same vertices .",
    "the adjacency matrix of the graph remains unchanged and any techniques that can normally be applied to unweighted graphs can now be applied to the multigraph as well .",
    "let us begin our demonstration of the principles above by giving a few extremely simple examples of their use .",
    "for our first , we ask what the equivalent is of vertex degree in a weighted graph .",
    "recall that the degree of a vertex is the number of edges attached to it .",
    "we could use the same definition for a weighted graph  simply count the number of edges attached to a vertex regardless of their weight  but this , as we have said , ignores much potentially useful information contained in the weights .",
    "to the extent that degree is a measure of the importance of a vertex in a network , surely vertices with strong connections should be accorded more importance than vertices with only weak connections ?",
    "if we apply our rule , mapping the weighted network to a multigraph , and then calculate the degree as we would for a normal unweighted graph , we immediately find that the degree  @xmath7 of a vertex  @xmath8 in a weighted network is the sum of the weights of the edges attached to it : @xmath9 this certainly seems reasonable , and has indeed been proposed previously using heuristic arguments  @xcite .",
    "it also gives sensible results .",
    "for instance , in a social network in which the weights on edges represent the number of hours a person spends per week with each of their acquaintances , their degree would be the total number of hours they socialize per week  a very reasonable measure of social influence . in the case of traffic or current of some kind flowing around a network , with weights representing the magnitude of the flow along the edges , the sum of the flows on each of the edges attached to a vertex",
    "gives the total amount of traffic flowing through the vertex . in a road network for example",
    "the degree of an intersection would just be proportional to the number of cars passing through it .    as another example ,",
    "consider eigenvector centrality  @xcite , a measure of centrality akin to an extended form of degree centrality and closely related to `` pagerank '' and similar centrality measures used in web search engines  @xcite .",
    "the eigenvector centrality @xmath10 of a vertex in an unweighted network is defined to be proportional to the sum of the centralities of the vertex s neighbors , so that a vertex can acquire high centrality either by being connected to a lot of others ( as with simple degree centrality ) or by being connected to others that themselves are highly central .",
    "we write @xmath11 where @xmath12 is some constant . in matrix notation",
    "this becomes @xmath13 , so that @xmath14 is an eigenvector of the adjacency matrix . by simple arguments",
    "one can show that one should take the eigenvector corresponding to the leading eigenvalue  @xcite .    by mapping to a multigraph",
    ", we can find the equivalent centrality measure for weighted networks .",
    "network neighbors that are connected to a vertex with twice the weight now contribute twice as much to the vertex s eigenvector centrality . as a result",
    ", we find that the correct generalization of eigenvector centrality to a weighted network is , as we would hope , still the leading eigenvector of the adjacency matrix , with the elements of the matrix being equal to the edge weights , as before .",
    "such a measure could be useful for example for ranking search results in a citation network  @xcite .",
    "if a paper cites another many times rather than just once , it could be taken as an indication of a closer or stronger connection between the two papers .",
    "using such citation frequencies as edge weights , our eigenvector centrality would then give papers high scores either if they are cited by many others or if they are cited with high weight by a few others .",
    "many authors have studied random walks on networks  @xcite .",
    "what should be the appropriate generalization of walks to weighted networks ?",
    "mapping the network to a multigraph and then performing an ordinary random walk on the resulting unweighted network , we get a walk that traverses edges always in proportion to their weight .",
    "thus at vertex  @xmath8 the walk chooses a step to vertex  @xmath15 with probability @xmath16 which is exactly the same rule we use for walks on unweighted graphs , provided we generalize the definition of the degree  @xmath7 as in eq .",
    "( [ degree ] ) .",
    "again this is an intuitively sensible result .",
    "if we have something flowing around a network , such as water through a network of pipes , then eq .  ( [ rw ] ) is precisely the rule that would be followed by a passive `` tracer '' molecule swept along by the water , provided that the water is well mixed at each network node , so that we get a random walk rather than some kind of correlated walk .",
    "the results above are all , in a sense , trivial , though it is satisfying that our simple rule for understanding weighted networks leads us to them naturally .",
    "now let us turn to some more substantive applications .",
    "first , we use our mapping to multigraphs to rederive a famous result in the theory of networks , the max - flow / min - cut theorem .",
    "the max - flow / min - cut theorem is a theorem about weighted networks .",
    "it states that , in a network where the weights represent the maximum allowed flow of a fluid or other commodity along the edges , the following is true :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ the maximum flow that can pass between any two vertices is equal to the weight of the minimum edge cut set that separates the same two vertices .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    an edge cut set is a set of edges whose removal from the graph will disconnect the vertices in question .",
    "a minimum edge cut set is a cut set of edges the sum of whose weights has the minimum possible value for such a set .",
    "the weight of the minimum cut set is called the connectivity of the vertices in question .",
    "the equality of maximum flow and minimum cut set size has an important practical consequence .",
    "there are simple computer algorithms , such as preflow - push algorithms  @xcite , that can calculate maximum flows quickly ( in polynomial time ) , and the equivalence implied by the max - flow / min - cut theorem means that we can use the same algorithms to calculate sizes of minimum cut sets as well .",
    "maximum flow algorithms are now the standard numerical technique for calculating sizes of cut sets .    here we show that the max - flow / min - cut theorem can be deduced from a much earlier and simpler theorem about unweighted networks , menger s theorem . menger s theorem is often derived as a corollary of the max - flow / min - cut theorem , but we show that the derivation can proceed in the opposite direction as well .",
    "this is interesting for two reasons .",
    "first , it offers a quite different proof of the max - flow / min - cut theorem from the usual one , which is based on augmenting paths and residual graphs .",
    "second , it is considerably harder to prove the max - flow / min - cut theorem from first principles than it is menger s theorem , so the method we describe offers a more transparent demonstration of the max - flow / min - cut theorem than the usual textbook presentations .",
    "menger s 1927 theorem states the following for an unweighted network  @xcite :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ if there exists no cut set of fewer than @xmath1 edges between two vertices in a graph , then there are at least @xmath1 edge - independent paths between the same two vertices .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    two paths through a network are said to be edge - independent if they share none of the same edges  . many proofs of menger s theorem have been given ",
    "see , for instance , ref",
    ".  @xcite .",
    "given menger s theorem , we first establish the truth of the max - flow / min - cut theorem for unweighted networks as follows .",
    "consider the maximum flow between two vertices @xmath17 and  @xmath18 in a network and suppose that a minimum edge cut set between these vertices consists of @xmath1 edges .",
    "the removal of any edge in this cut set will reduce the flow by at most one unit , since that is the maximum flow an edge can carry in an unweighted network . thus if we remove all @xmath1 edges in the cut set one by one , we remove at most @xmath1 units of flow .",
    "but , since the cut set disconnects the vertices @xmath17 and  @xmath18 , this removal must stop all of the flow .",
    "hence the entire flow is at most  @xmath1 .",
    "however , menger s theorem tells us that if the minimum cut set has size  @xmath1 then there must be at least @xmath1 edge - independent paths between @xmath17 and  @xmath18 .",
    "each of these paths can carry a single unit of flow from @xmath17 to  @xmath18 and hence the network as a whole can carry at least  @xmath1 units between these two vertices .",
    "thus the maximum flow between @xmath17 and  @xmath18 is simultaneously both at most and at least  @xmath1 , and hence it must in fact be exactly equal to  @xmath1 : the maximum flow is equal to the size of the minimum cut set in an unweighted graph .",
    "note that this result applies just as well to graphs with multiedges as to those with only single edges .",
    "now we extend this result to weighted graphs using the mapping between weighted graphs and multigraphs . if we take a network of pipes and replace every pipe that can carry a maximum of @xmath1 units of flow by @xmath1 pipes that can carry one unit each , then the maximum flow between any adjacent pair of vertices is unchanged , and hence the maximum flow between any two vertices in the network is also unchanged .",
    "now every minimum cut set on an unweighted multigraph includes either all or none of the parallel edges between any adjacent pair of vertices ; there is no point cutting one such edge unless you cut all of the others as well  you have to cut all of them to disconnect the vertices .",
    "thus , the minimum cut set consists of sets of cuts of all the edges between certain vertex pairs .",
    "if we consider all such cut sets , minimal or not , and then minimize over them , we will find the global minimum cut set .",
    "however , these cut sets are in a trivial one - to - one correspondence with , and have the same weight as , the cut sets on the weighted graph , and hence the minimum cut set on the weighted graph has the same weight as that on the multigraph .",
    "thus both maximum flows and minimum cuts are numerically equal on unweighted multigraphs and the corresponding weighted graphs , and hence since the max - flow / min - cut theorem is true on unweighted graphs  including multigraphs ",
    "it must also be true on the corresponding weighted graphs .    finally , we extend the result to the case of non - integer weights . to do this we simply redefine what we mean by a unit of flow . let the size of the unit of flow be  @xmath19 .",
    "then a weighted edge with maximum flow  @xmath20 for @xmath1 integer transforms into @xmath1 edges of flow  @xmath19 each in the multigraph .",
    "the proof goes through as before , and as we allow @xmath21 , all values of the edge weights are allowed and hence the max - flow / min - cut theorem is proved for all weighted networks .",
    "this last trick , of changing the size of the units which we use to transform weighted edges into unweighted multiedges , can be used for many calculations or proofs for weighted graphs , and this relaxes the assumption we made earlier that the weights in the graph are integers . in this way ,",
    "essentially all the results presented in this paper can be extended to the non - integer case also .",
    "we turn now to a quite different question about weighted networks , that of community structure .",
    "many networks consist not of an undifferentiated mass of linked vertices , but of distinct `` communities''groups of vertices within which the connections are dense but between which they are sparser .",
    "this type of structure is seen especially in social networks , but also in some biological and technological networks as well .",
    "an interesting problem that has attracted much attention in recent years is that of creating a computer algorithm which , when fed the topology of a network , can extract from it the communities in the network , if there are any .",
    "the problem is related to the problem of graph partitioning , which is well studied in computer science , but algorithms for graph partitioning , such as the kernighan ",
    "lin algorithm  @xcite or spectral bisection  @xcite are not ideally suited to general network analysis : typically they only divide networks in two , rather than into a general number of communities , they provide no measure of how good the division in question is , and in some cases they also require the user to specify the sizes of the communities before they start . in general they also work only on unweighted networks",
    ".    recently , girvan and newman  @xcite proposed an algorithm for community structure discovery in unweighted networks that avoids these drawbacks and appears to work well for many kinds of networks . since the publication of that work",
    ", the author has been asked a number of times whether an appropriate generalization of the algorithm exists for weighted networks .",
    "certainly the algorithm can be applied to such networks by simply ignoring edge weights , but , as we have argued in this paper , to do so is to throw away useful information contained in the weights , information that could help us to make a more accurate determination of the communities . in this section",
    "we use the techniques discussed in this paper to derive an appropriate generalization of the algorithm of girvan and newman to weighted networks .",
    "it is worth pointing out , before proceeding , that not all weights on network edges are necessarily appropriate as input for determining community structure .",
    "weights that indicate particularly close connections or similarity between vertices can give useful information about communities , but one can also put many other kinds of variables on edges , and they certainly need not be indicators of proximity or similarity .",
    "for example , barrat  _ et  al . _",
    "@xcite have studied the network of airline flights between airports .",
    "as they point out , the volume of traffic along each route in this network contains important information about the operation of the air transport system , but it is not the case that airports linked by high - volume routes are necessarily close or similar . in many cases",
    "indeed the reverse is true .",
    "traffic between los angeles and tokyo is very high , but this does not mean that los angeles and tokyo are similar places , or that they are close to one another ",
    "they are not . in this section therefore , we will consider specifically those networks in which the weights on edges take greater values for vertex pairs that have closer connections or are more similar in some way .",
    "the algorithm of girvan and newman is based on the idea of betweenness and works as follows .",
    "the edge betweenness of an edge in a network is defined to be the number of geodesic ( i.e. ,  shortest ) paths between vertex pairs @xmath22 on the network that run along that edge , summed over all @xmath17 and  @xmath18 .",
    "if there are two geodesic paths joining a given vertex pair , then each one counts as a half of a path , and similarly for three or more .",
    "the edge betweenness is a natural generalization to edges of the well known vertex betweenness of freeman  @xcite .",
    "edge betweenness is high for edges that act as `` bottlenecks '' for traffic moving about the network .",
    "if traffic from one part of the network to another has to go along one or a few edges that connect those parts then the betweenness on those edges will be high .",
    "but this is precisely what we need to find the edges that connect different communities .",
    "inter - community edges are precisely those few that connect otherwise unconnected network portions .",
    "thus if we remove edges with high betweenness scores , we will remove the inter - community edges and leave only the communities themselves behind .    in practice the algorithm is implemented as follows .",
    "we first calculate the edge betweenness of all edges in the network , using for instance the fast betweenness algorithm described in  @xcite .",
    "then we find the edge that has the highest betweenness and remove it from the network .",
    "if two or more edges tie for highest betweenness we remove all of them . then  and this is crucial  we recalculate the betweenness of all edges on the remaining network and repeat the process . as we have argued elsewhere  @xcite the recalculation is important for the correct operation of the algorithm , since it allows for the ( common ) situation in which there is more than one edge between a given pair of communities .",
    "how do we generalize this algorithm to the case of weighted networks ?",
    "perhaps the most obvious approach to take would be to generalize the edge betweenness .",
    "one can define paths on a weighted network by assuming the `` length '' of an edge to vary inversely with its weight , so that two vertices that are connected twice as strongly will be half as far apart .",
    "geodesics on such a network can be calculated , for instance , using dijkstra s algorithm  @xcite .",
    "then we can define the betweenness of an edge to be again the number of geodesics between vertices @xmath22 that pass along that edge summed over all @xmath17 and  @xmath18 . and the community structure algorithm is then one in which we repeatedly remove the edge having the highest such betweenness and recalculate the betweennesses .",
    "although an obvious and straightforward generalization of the original method , however , this algorithm will , almost certainly , give poor results .",
    "to see this , notice that any two vertices that are particularly strongly connected to one another will have a particularly short distance along the edge between them .",
    "geodesic paths will thus , all other things being equal , prefer to flow along such an edge than along another longer edge between two less well connected vertices , and hence closely connected pairs will tend to attract a lot of paths and acquire high betweenness .",
    "this means that , as a general rule , we are more likely to remove edges between well connected pairs than we are between poorly connected pairs , and this is the precise opposite of what we would like the algorithm to do .",
    "presumably pairs of vertices that are particularly strongly connected together should be placed in the same community within the network , but the algorithm as we have described it deliberately separates such pairs , with the result that they will often end up in different communities .    abandoning this approach , therefore , we ask what the correct generalization is of the algorithm of newman and girvan to a weighted network . to derive an answer",
    "we employ our mapping from the weighted network to a multigraph .",
    "suppose we have a weighted network with integer weights on the edges and as before we replace each edge of weight @xmath1 by @xmath1 parallel edges of unit weight .",
    "the adjacency matrix remains unchanged .",
    "now we apply the normal unweighted version of our algorithm to the resulting multigraph .",
    "first , we note that the shortest path between any two vertices is unchanged ; since all edges still have unit length any path that was previously a geodesic is still a geodesic . however , there are now , in general , more geodesic paths than there were previously because of the multiedges . for each pair of vertices with a double edge running between them",
    ", there are now two geodesics for every one that previously passed between those vertices  one going along either of the two alternate routes created by the multiedge . as before ,",
    "we count each of these geodesics as a half of a path .",
    "thus each of the two edges now has a half of the edge betweenness that it would have on a simple unweighted graph .",
    "the same argument applies to multiedges with three or more parallel edges : the betweenness of each of the parallel edges is equal to the betweenness of the corresponding edge on the simple graph without multiedges , divided by the multiplicity of the edge .",
    "now , following the prescription of the algorithm , we find the edge in the graph with the highest betweenness and remove it .",
    "but notice that if the edge removed is a member of a multiedge , then every other member of that multiedge must have the same betweenness , and hence we should remove all of them simultaneously .",
    "thus we end up always removing an entire multiedge at each step of the algorithm ( or more than one if there is a tie for highest betweenness ) .",
    "then , as before , we recompute the betweennesses for all edges and repeat .    another and simpler way of summarizing this algorithm is the following : we calculate the betweennesses of all edges in our weighted graph in the normal way , ignoring the weights .",
    "then we divide each such betweenness by the weight of the corresponding edge , remove the edge with the highest resulting score , recalculate the betweennesses , and repeat .",
    "we have derived this algorithm here only for the case of integer weights on the edges , but we can extend it to the non - integer case using the same trick that we employed in section  [ maxflow ] , of defining successively smaller units in which the weight of an edge is measured . the resulting algorithm is identical to that for the integer case : betweennesses are simply divided by the weight of the edge and the edge with the highest resulting score removed from the network .",
    "this algorithm is simple , it is almost as fast as the original unweighted version ( adding only the extra operation of division by the edge weight ) , and , as we now show , appears to work excellently .    as a first example of the working of the algorithm we test it on a set of computer - generated networks .",
    "we have generated random networks of 128 vertices each divided into four groups of 32 .",
    "edges were placed such that on average each vertex has as many connections to vertices outside its own group as it does inside .",
    "the mean degree in these tests was fixed at 16 . unsurprisingly , the normal unweighted community structure algorithm is unable to pick out communities in networks of this kind , as was demonstrated previously in ref .",
    "now , however , without changing the structure of the networks , we assign weights to the edges : between - community edges are given a fixed weight of  1 , while within - community edges are given a weight  @xmath23 , which is slowly increased from a starting value of  1 to explore the sensitivity of the algorithm .",
    "[ rg ] shows the fraction of vertices classified correctly by our new algorithm in these tests .",
    "as the figure shows , the result of increasing the within - community weight  @xmath24 is immediate : even for very small increases , the algorithm s performance improves markedly , and more than three quarters of the vertices are correctly classified for any weight @xmath25 . in other words , the extra information contained in the edge weights does indeed help us enormously to discern the community structure in the network , and the generalized algorithm presented here , when given this information , does a good job of finding that structure . for values of @xmath24",
    "greater than 2 , the algorithm classifies essentially all vertices correctly .    moving to real - world networks",
    ", we turn for our second example to a well - known study from the social networks literature . in 1972 , sade",
    "@xcite published a network study of a group of sixteen rhesus monkeys .",
    "social ties between the monkeys were deduced from grooming behavior and the study is unusual in that it recorded not only which monkeys groomed which others , but also the number of instances of grooming of each monkey by each other during the period of observation .",
    "the result is a weighted network containing far more information than a simple binary adjacency matrix .",
    "grooming forms a directed network between monkeys ; one monkey grooms another and the direction is believed to be associated with relative status of the individuals .",
    "but for the present study , in which we regard grooming in either direction as evidence of social interaction , we have symmetrized the network , creating an undirected one with integer edge weights equal to the total number of grooming instances in either direction between each pair of monkeys .",
    "the network has 16 vertices and 69 edges with edge weights ranging from 1 to  49 .    in fig .",
    "[ rhesus]a we show the result of feeding this network through the ordinary unweighted version of the community structure algorithm , which takes account only of the presence of edges and not of their weights .",
    "the results are shown in the form of a tree or `` dendrogram '' of the kind used in ref .",
    "@xcite , which displays the order of the splits in the network produced by the successive removal of edges .",
    "as the figure shows , the algorithm finds no community structure at all in the network in this case . in fig .",
    "[ rhesus]b on the other hand , we show the results of processing the algorithm through the weighted community structure algorithm , and the difference is striking . now",
    "the algorithm detects clear structure within the group , finding two principal communities , one of females and the other primarily of males , plus two `` outsider '' males who are not part of either community .",
    "this accords well with the known social organization of the monkeys : females tend to associate closely in matrilineal groups ; males tend to associate with one another and with temporary mating partners , but the adult males also move between tribes every few years ( presumably a tactic to avoid inbreeding within tribes ) and outsider males like those observed here are not uncommon .",
    "these examples suggest that our algorithm is effective at extracting community structure from weighted networks , including cases in which algorithms that ignore edge weights find no such structure .",
    "but there is still a problem : the algorithm does not tell us how many communities a network should be split into .",
    "the method gives us only a succession of splits of the network into smaller and smaller communities as represented by the dendrograms of fig .",
    "[ rhesus ] , but it gives no indication of which splits are best . in our previous work on unweighted networks , we solved this problem by introducing a quantity we called the modularity  @xcite .",
    "this quantity is defined as the fraction of edges that fall within communities minus the expected value of the same quantity if edges are assigned at random , conditional on the given community memberships and the degrees of vertices .",
    "suppose we have a possible division of an unweighted network into communities , as provided for example by the algorithm of ref .",
    "let @xmath26 be the community to which vertex  @xmath8 is assigned .",
    "then the fraction of the edges in the graph that fall within communities , i.e. ,  that connect vertices that both lie in the same community , is @xmath27 where the @xmath28-function @xmath29 is 1 if @xmath30 and 0 otherwise , and @xmath31 is the number of edges in the graph . if we preserve the degrees of vertices in our network but otherwise connect vertices together at random , then the probability of an edge existing between vertices @xmath8 and @xmath15 is @xmath32 , where @xmath7 is the degree of vertex  @xmath8 .",
    "thus the modularity  @xmath33 , as defined above , is given by @xmath34      \\delta(c_i , c_j ) .",
    "\\label{modularity}\\ ] ] in practice this is an excellent guide to whether a particular division of a network into communities is a good one .",
    "it takes a value of zero if a division has no more within - community edges that one would expect by random chance  a good indication that the division in question is poor .",
    "nonzero values indicate deviations from randomness and values around 0.3 or more usually indicate good divisions .",
    "the maximum possible value of @xmath33 is  1 .",
    "the same idea can be used to judge community divisions in weighted networks . if we apply our rule for mapping weighted networks to multigraphs , it is straightforward to show that the correct generalization of the modularity is given by precisely the same formula , eq .",
    "( [ modularity ] ) , provided @xmath35 represents the weight of the edge between @xmath8 and  @xmath15 , the degree  @xmath7 is defined according to eq .",
    "( [ degree ] ) , and @xmath31 as before .    the combination of the generalized community structure algorithm and the generalized modularity allows us now to make definitive divisions of networks into communities : we apply the algorithm to generate a dendrogram and then from the divisions represented by the different levels in the dendrogram we choose the one that gives the highest value of the modularity .    for a real - world demonstration of this method",
    "we take a non - social network , for a change .",
    "networks of the co - occurrence of words in bodies of text have been studied by a number of authors recently  @xcite , and are a useful quantitative tool for analyzing the semantic content of documents .",
    "an influential recent example of such an analysis is the study by dooley and corman  @xcite of news reports in the aftermath of the september 11 , 2001 attacks in new york and washington .",
    "they studied reuters newswire reports for 66 days following the attacks and tabulated the occurrence of the commonest words in those reports by day . here",
    "we take a typical network from the middle of the period of the study , the day of wednesday october 17 , 2001 .",
    "the vertices in the network represent words or phrases occurring more than ten times in wire stories for that day ( excluding very commonly occurring words such as pronouns and prepositions ) , edges represent the occurrence of pairs of words in the same sentence , and the weights of the edges are the number of such occurrences .",
    "the network has a total of 71 vertices and 287 edges , with edge weights ranging from 1 to 11 .",
    "the most commonly co - occurring pair of vertices is washington / new york .",
    "making use of these weights in the weighted version of the community structure algorithm and employing the weighted version of the modularity , we find that the optimal modularity is achieved for the division into 17 communities shown in fig .",
    "the two dominant news stories on this particular day were the ongoing invasion of afghanistan by us and british forces and the anthrax mail attacks taking place in washington , dc .",
    "as the figure shows , our method clearly picks out these two topics as the main `` communities '' in the co - occurrence network ( left and center - right in the figure , respectively ) .",
    "a number of other lesser topics of discussion are highlighted in the smaller communities : bush / administration , mueller / fbi , international / red cross , and so forth .",
    "an analysis of the same network using the unweighted version of the algorithm finds some of the same structure , but not all of it .",
    "the largest group of vertices , representing words dealing with the anthrax attacks , is picked out quite clearly .",
    "the group dealing with afghanistan is not however , and the smaller groups make much less sense .",
    "this comes as no surprise .",
    "presumably most of the information contained in this network is in the weights of the edges .",
    "almost any pair of words might co - occur in a sentence somewhere in this large body of text , but words that co - occur frequently  as many as 11 times in this case  almost certainly indicate linked concepts .",
    "it is worth mentioning that the ideas of this section could easily be extended to other algorithms for detecting community structure .",
    "quite a number of such algorithms have been proposed in recent years  @xcite , and in theory any of these could be generalized to the case of weighted graphs .",
    "in this paper we have addressed the topic of weighted networks  networks in which the edges between vertices carry weights representing their strength or capacity .",
    "although such networks appear at first to be substantially more difficult to understand than their unweighted counterparts , we have argued that in many cases a mapping of the weighted network onto an unweighted multigraph will allow us to apply directly the results and techniques developed for the unweighted case .",
    "we have given a number of examples of this idea , ranging from the very simple , such as generalizations of degree and eigenvector centrality , to the more complex , such as the proposal of a new algorithm for detecting community structure in weighted networks .",
    "the methods presented in this paper are not intended as a rigorous program for the study of weighted networks , but more as a guide to the intuition when thinking about these systems .",
    "we look forward with interest to learning of other applications of these ideas .",
    "the author would like to thank michelle girvan and fred jin for useful conversations and linton freeman for providing the data for the network of rhesus monkeys .",
    "this work was supported in part by the national science foundation under grant number dms0234188 , by the james s. mcdonnell foundation , and by the santa fe institute ."
  ],
  "abstract_text": [
    "<S> the connections in many networks are not merely binary entities , either present or not , but have associated weights that record their strengths relative to one another . </S>",
    "<S> recent studies of networks have , by and large , steered clear of such weighted networks , which are often perceived as being harder to analyze than their unweighted counterparts . </S>",
    "<S> here we point out that weighted networks can in many cases be analyzed using a simple mapping from a weighted network to an unweighted multigraph , allowing us to apply standard techniques for unweighted graphs to weighted ones as well . </S>",
    "<S> we give a number of examples of the method , including an algorithm for detecting community structure in weighted networks and a new and simple proof of the max - flow / min - cut theorem . </S>"
  ]
}
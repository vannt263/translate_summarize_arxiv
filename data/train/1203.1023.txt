{
  "article_text": [
    "eureqa is a highly praised symbolic regression program described by schmidt and lipson @xcite , freely down - loadable from @xcite , where there is a bibliography of its use in articles , press citations , a blog and a discussion group .",
    "see @xcite for quick insight into the underlying darwinian method for symbolic regression .",
    "eureqa was designed to work from noisy experimental data .",
    "however in the first few weeks of using this tool i have already found that also :    1 .",
    "eureqa can sometimes do a better job than existing computer algebra systems of exact simplification if an exact result is nt too complicated ; 2 .",
    "eureqa can often discover simple expressions that _ approximate _ more complicated expressions or fit a set of numerical results well ; 3 .",
    "even when the fit is nt as accurate as desired , the _ form _ of a returned expression often suggests a class of forms to try for focused routine regressions , interpolations or series expansions giving higher accuracy ; and 4 .",
    "eureqa could do an even better job if it supplemented its search with exploitation of more computer algebra and standard numerical methods , including classic regression ; 5 .",
    "there are important caveats about how to use eureqa effectively .",
    "this article has examples that illustrate these findings , using eureqa 0.93.1 beta .    regarding computing times reported herein",
    ", the computer is a 1.60ghz intel core 2 duo u9600 cpu with 3 gigabytes of ram .",
    "here is a maple 15 assignment of an input trigonometric expression to a dependent variable @xmath0 : @xmath1 the default simplification merely combines the first two terms , which are similar .",
    "however , then @xmath2 required only 0.03 seconds to return the much simpler @xmath3 an equivalent expression produced by the _ mathematica _ @xmath4 $ ]",
    "function in only 0.08 seconds is also much simpler : @xmath5 but the equivalent even simpler form discovered by eureqa is @xmath6 _ caveat _ : the algorithm uses a random number generator with no user control over its seeding , which is done perhaps by the clock",
    ". therefore sequences are not currently repeatable and the computing times to obtain expression ( [ eq : niceexacttrigresult ] ) varied dramatically , from 3 seconds to several minutes .",
    "it conceivably could require more time than you would ever be willing to invest .",
    "however , although even 3 seconds is much longer than the computer algebra times , it is certainly worth a few minutes wait to obtain such a nice result , and such experiments can be done while away from the computer , such as eating , sleeping or playing cell - phone games .",
    "there is also an option to use parallel cloud computing , which reduces the mean and variance of the elapsed time necessary to obtain a satisfactory result .    here",
    "is how i used eureqa to obtain this delightfully simple exact result ( [ eq : niceexacttrigresult ] ) :    1 .",
    "first i plotted expression ( [ eq : messytrigexpression ] ) in _ mathematica _ , revealing that it is antisymmetric and that its fundamental period appeared to be @xmath7 , with higher frequency components appearing to have a minimum period of @xmath8 .",
    "this was confirmed by @xmath9 $ ] , which returned the equivalent expression @xmath10 2 .",
    "i decided to use evenly - spaced values of @xmath11 because expression ( [ eq : messytrigexpression ] ) is periodic , bounded and @xmath12 for all real @xmath11 .",
    "i guessed that it might help eureqa discover and exploit the antisymmetry if i used sample points symmetric about @xmath13 .",
    "i also guessed that it might help eureqa discover the periodicities if i used exactly two fundamental periods .",
    "i guessed that using 16 samples within the minimum period @xmath8 would be sufficient to resolve it quite well , then i doubled that because eureqa uses some points for fitting and others for error assessment .",
    "this works out to 128 intervals of width @xmath14 from @xmath15 through @xmath7 .",
    "i then created a table of 17-digit @xmath11 @xmath0 floating - point pairs and exported it to a comma - separated - values file by entering @xmath16,\\{x,-\\pi,\\,\\pi,\\frac{\\pi}{128}\\}]\\right]\\ ] ] where the ellipsis was expression ( [ eq : messytrigexpression]).[multiblock footnote omitted ] 3 .",
    "i then launched eureqa , opened its spreadsheet - like tab , then replaced the default data there with mine by importing file trigexample.csv . in the row labeled i then entered @xmath11 in column a and @xmath0 in column b. 4 .",
    "the tab then showed superimposed plots of the @xmath11 and @xmath0 data values and offered preprocessing options that are nt relevant for this very accurate data .",
    "5 .   figure [ flo : settargettab ] shows the tab : 1 .",
    "the pane labeled suggests the fitting model @xmath17 , which is exactly what i want , so i did nt change it .",
    "2 .   the pane labeled has check boxes for the desired used in composing candidate @xmath18 expressions .",
    "the default checked ones are sufficient for the sort of concise equivalent to expression ( [ eq : messytrigexpression ] ) that i am seeking .",
    "therefore i did nt check any of the other offered functions and operators  not all of which are shown on this screen shot .",
    "that dialog pane also shows the corresponding building - block measures , which can be altered by the user .",
    "the complexity measure of an expression is the total of the complexities of its parts .",
    "the drop - down menu labeled offers different built - in error measures for eureqa to try optimizing . a bound is usually more reassuring than the alternatives , so i chose .",
    "the documentation suggests that or is more scale and offset invariant , which are desirable properties too .",
    "however , the data is already well scaled with means of 0 .",
    "4 .   for the covered drop - down menu",
    "the default alternative is to designate a certain percentage of the data points for fitting the data ( _ training _ ) and a certain percentage for assessing the error measure ( _ validation _ ) .",
    "the individual assignments to these categories are done randomly , with some overlap if there are nt many data points . for",
    "the almost exact data in this article i would prefer that alternate points be assigned to alternate categories , with the end points being used for training .",
    "however , none of the alternatives offered this so i chose the default .",
    "i then pressed the button on the tab and watched the temporal progress of the search .",
    "the plot in figure [ flo : startsearchtab ] dynamically zoomed out to show a log - log plot of the lower left envelope of the most accurate candidate obtained so far as a function of computing time .",
    "the dynamically showed successive candidates that are better than any so far on the basis of either complexity or accuracy .",
    "the entertainment of watching the evolution of these panes is very appealing .",
    "it is similar to rooting for the home team at a sporting event .",
    "notice that : 1 .",
    "integer powers of sub - expressions are represented in the project log as repeated multiplications , and their complexity is measured that way .",
    "for example , several results are displayed as @xmath19 with a complexity measure of 26 .",
    "is @xmath20 .",
    "this is more concise and requires only _ one _ cosine and _ two _ multiplies to compute the @xmath21 factor if compiled by any decent compiler . ]",
    "this result appears first with a reported of 0.00111 , followed by the same expression with monotonically better fits up through @xmath22 at 39 seconds . and",
    "the data varies between about @xmath23 , so a maximum residual of @xmath22 is enough to convince most people that the _ displayed _ result is exact .",
    "this can be proved by entering@xmath24^{4}\\,\\mathrm{sin}[4x]]\\ ] ] with the ellipsis being expression ( [ eq : messytrigexpression ] ) .",
    "this input returns 0 , proving equivalence . ]",
    "i terminated the search at 8 minutes , during which eureqa tried different formulas that did nt fit as well no matter how complicated they were .",
    "7 .   figure [ flo : viewresultstab ] shows the results on the tab : 1 .   in the pane labeled ,",
    "the first column lists the complexity measure , the second column lists an error measure , and the third column lists the corresponding candidate equation .",
    "if you click on a row , the pane in the lower left corner gives more detail , with various rounded error measures including the that i chose , which was maximum absolute error .",
    "eureqa does some automatic expression simplification : whenever a _ mutation _ produces a new candidate expression or a _ crossover _ produces two new expressions containing mixtures of the two parents sub - expressions , a few transformations are applied to make the expression more nearly canonical and to avoid having a misleadingly high complexity on account of uncollected terms , uncombined numeric sub - expressions , etc .",
    "this minimal computer algebra is also used to make the displayed results in the pane more attractive .",
    "these transformation include : * integer powers and products of sums are expanded to make them more nearly canonical .",
    "* factors and terms are sorted , then similar factors and terms are collected .",
    "* numeric sub - expressions are reduced to a single number .",
    "* a few rules such as @xmath25 and @xmath26 are applied .",
    "+ however , you will often see a sub - expression such as @xmath27 .",
    "this is because the 1s are a result of rounding non - integer coefficients to the typically - displayed 3 or 4 significant digits .",
    "nonetheless i noticed definite unexploited opportunities such as eureqa unnecessarily trying the sub - expression @xmath28 .",
    "angle reduction and exploitation of odd or even symmetry could preclude the need to try candidates having constant terms outside a much smaller interval .",
    "perhaps rather than gradually implementing more custom computer algebra , eureqa could embed one of the many free computer algebra systems compared at @xcite , many of which are conveniently down - loadable from @xcite .",
    "3 .   the pane in the lower right corner plots an error measure as a function of complexity for the 12 reported optimal candidates , with the currently highlighted candidate as a larger red dot .",
    "4 .   the pane in the upper right corner shows a plot of the highlighted expression superimposed on the validation points in dark blue and the training points in lighter blue . the drop - down menu above it offers the option of instead plotting the residuals at all of the data points , which gives a much better idea of the fitting errors as a function of @xmath11 .",
    "if these residuals had revealed a non - negligible recognizable pattern such as being approximately of the form @xmath29 , then i would have tried another search with the model @xmath30 .",
    "i would iterate this process until there was no further improvement or the residuals revealed no non - negligible recognizable pattern .    instead of searching for the most concise equivalent",
    ", one can also search for equivalent expressions of a _",
    "particular form_. for example , we could request that expression ( [ eq : messytrigexpression ] ) be transformed into a function without cosines by un - checking that building block . as another example , given an expression @xmath31 that depends on @xmath11 and @xmath0 , perhaps it is desired to transform it to an expression depending only on @xmath11 times an expression depending only on @xmath0 .",
    "this can be requested by making the target expression be @xmath32 .",
    "( nonnegative integer suffixes on variable and function names are pretty - printed as subscripts . )",
    "using `` @xmath33 $ ] '' in _ mathematica _ and `` @xmath34 '' in maple , i could not make them accomplish the following quick successful eureqa simplifications , for which i selected the default building blocks , , and other functions or operators that occur in the specific given expressions : @xmath35 @xmath36 @xmath37    * example ( [ eq : sqrtfloor ] ) comes from @xcite .",
    "* i tabulated only the _ real _ part for example ( [ eq : cubic2ways ] ) because rounding errors for the principal branch of the fractional powers of the negative quantity @xmath38 generated some relatively very small magnitude imaginary parts . * to generate @xmath39 rows of data for example ( [ eq : maxexample ] ) , i used @xmath40\\!-\\!\\mathrm{max}[y\\!-\\",
    "! x,0]\\}\\!,17],\\\\ \\{x,-1,1,\\frac{1}{8}\\}\\!,\\{y,-1,1,\\frac{1}{8}\\}].\\end{gathered}\\ ] ]    the examples so far illustrate that eureqa can sometimes determine a simpler exact result than a computer algebra system .",
    "however , instead of choosing random examples or ones from the literature , i constructed these very simple results , then obfuscated them in ways that i thought would be difficult for common transformations to reverse  particularly if applied to the entire expression rather than well chosen pieces . despite this",
    "it was not easy to find examples for which neither @xmath4 $ ] nor @xmath41 could determine the very simple equivalent .",
    "thus , eureqa should be regarded as an occasionally beneficial supplement to these functions rather than a replacement .",
    "also , effective use of eureqa requires good judgment in :    * the interval spanned by the sample points , their number and spacing ; * the form selected for the target expression ; * the building blocks that are selected together with their complexities , and * perhaps the error measure that is selected .",
    "effective use also probably depends on experience with eureqa .",
    "therefore the benefits that i have discovered should be regarded as a lower bound because of my novice status .",
    "as illustrated by example ( [ eq : maxexample ] ) , data for representing all combinations of @xmath42 different values for each of @xmath43 different independent variables requires @xmath44 rows , and we must have @xmath45 for eureqa to discern any non - constant dependence on each variable .",
    "thus for a given @xmath42 , this exponential growth in data with the number of independent variables can greatly increases the time required for eureqa to find a good fit . yielding to the consequent temptation to save time by reducing @xmath42",
    "as @xmath43 increases tends to reduce the precision of the results .",
    "fortunately , there are several complementary techniques that sometimes reduce the effective dimensionality :    1 .",
    "_ dimensional analysis _ can sometimes reduce the number of independent variables , and @xcite describes a maxima program that does this .",
    "if you can partition an expanded form of your expression into two or more sums having disjoint variable sets , then you can independently fit each of those sub - sums .",
    "3 .   if you can partition a factored form of your expression into two or more products having disjoint variable sets , then you can independently fit each of those sub - products .",
    "4 .   if in every term of a given sum the exponents of some subset of the variables sum to the same homogeneity exponent @xmath46 , then substitute 1 for one of those variables @xmath47 , fit this isomorphic problem , then multiply every resulting term by the individual power of @xmath47 necessary to restore homogeneity exponent @xmath46 5 .",
    "perhaps some other change of variables such as a matrix rotation can totally or partially decouple the independent variables .",
    "6 .   unlike many experimental situations , for experimental mathematics we usually have complete freedom to choose the data values of the independent variables . in both univariate and multivariate problems",
    "there can be _ sweet spots _ that deliver more accuracy for a given number of samples than does a brute force cartesian product of uniformly spaced points .",
    "these special values are often related to the zeros or extrema of orthogonal polynomials .",
    "for example , see the the multidimensional integral formulas in chapter 25 of @xcite .",
    "ideally a floating point result is either exact or the closest representable number to the exact result , with ties broken in favor of having the last significand bit be 0 . well designed floating - point _",
    "arithmetic _ comes very close to this ideal : if the exact result is representable within the thresholds for overflow and for gradual underflow , then the result is the exact result for inputs that differ from the actual inputs by factors between @xmath48 , where _ machine epsilon _",
    "@xmath49 is about @xmath50 for ieee double , which corresponds to about 16 significant digits .",
    "a relative error bound of @xmath48 is the _ gold standard_. there are similar expectations for operations such as exponentiation and functions such as sinusoids or logarithms that are commonly built into compilers  but allowing a few times @xmath49 , which i call the _ silver standard_.",
    "it is a matter of professional pride among numerical analysts designing _ general purpose _ mathematical software to strive for the silver standard for all functions provided with the software , such as bessel functions , etc .",
    "i was curious to know if eureqa can help numerical analysis by discovering concise approximate expressions that meet the silver standard .",
    "suppose that i want to implement an ieee double version of the dogbert @xmath51 function defined by @xmath52 no computer algebra systems that i tried can determine a closed form for @xmath53 .",
    "_ plan b _ : do a gold - standard numeric integration for a sequence of @xmath11 values in the interval -1@xmath54 , then use eureqa to discover a silver - standard expression that fits those values well . here is an abridged account of my attempt to do this .    1 .",
    "i entered the _ mathematica _ input @xmath55,\\,\\mathrm{nintegrate}\\,[\\intop_{0}^{x}\\dfrac{1}{\\sqrt{(1-t)(1+t)+\\frac{2}{\\pi}\\cos\\left(\\frac{\\pi t}{2}\\right)}},\\;\\\\",
    "\\{t,0,x\\}\\mathrm{,precisiongoal}\\rightarrow17,\\,\\mathrm{workingprecision}\\rightarrow25],\\{x,-1,1,1/64\\}.\\enskip\\label{eq : xypairs}\\end{gathered}\\ ] ] then i inspected the 127 number pairs to make sure there were no imaginary parts , infinities or undefined values.[multiblock footnote omitted ] 2 .",
    "all the values were real and finite , so i then entered @xmath56,\\ ] ] then i imported the resulting file into eureqa and tried to fit @xmath57 with the default formula building blocks .",
    "after three minutes of search the most accurate formula was @xmath58 which is non - insightful and accurate to a disappointing maximum absolute error of about 0.4% .",
    "a _ mathematica _ plot of the integrand reveals a probable explanation : the integrand has endpoint singularities , and although they are integrable , the resulting integral has infinite magnitude low - order derivatives at the endpoints , which probably makes the quadrature less accurate and the eureqa search slower than otherwise .",
    "the plot of numeric antiderivative values on the tab revealed that they look approximately proportional to @xmath59 .",
    "so next i did another eureqa search after disabling the sine and cosine building blocks and making the target expression be @xmath60 .",
    "i did _ not _ enable the arcsine building block because , for example , i did nt want eureqa to waste time trying sub - expressions such as @xmath61 . in 11 seconds eureqa found the following seven term expression having a maximum absolute error of only about @xmath62 : @xmath63 i aborted the search at 3 minutes with no further improvement .",
    "regarding this result : 1 .   to view",
    "the coefficients rounded to 10 significant digits rather than about 4 , i had to copy the expression from the pane in the tab into _ mathematica _ or a text editor .",
    "unfortunately there is no way to view all 16 digits , so i will have to polish a result with other software to obtain a silver standard result .",
    "i edited the copied formula because it contained annoying superfluous parentheses and represented integer powers by repeated multiplication .",
    "the even symmetry of the integrand and the centered integration from 0 imply that the antiderivative should have odd symmetry .",
    "therefore the spurious constant term in expression ( [ eq : moreprecise ] ) should be discarded .",
    "terms that are contrary to odd symmetry might arise from the random partitioning of the data into training and validation sets .",
    "4 .   converting the result to recursive form by collecting similar powers of @xmath11 or @xmath64 can significantly reduce the .",
    "for example , rounding coefficients the coefficients in result ( [ eq : moreprecise ] ) for brevity,@xmath65 which saves one instance of ",
    "at the expense of legibility , the and the floating - point substitution time can be further reduced by _ hornerizing _ this recursive representation to @xmath67 this is another place where more computer algebra could help eureqa .",
    "notice that result ( [ eq : moreprecise ] ) has no term that is simply a numeric multiple of @xmath64 .",
    "therefore it does nt model the infinite endpoint slopes associated with the integrand singularities there .",
    "but that is my fault because the target expression contains no special encouragement to include a term of that form , and the plot from the eureqa tab reveals that the sample points were not closely enough spaced near the endpoints to suggest the infinite slope magnitudes there .",
    "6 .   result ( [ eq : moreprecise ] ) suggests that a set of particularly good fits would be truncated series of the form @xmath68 which can be regarded as a truncated bi - variate series in terms having a power of @xmath11 times a power of @xmath69 that have non - decreasing odd total degrees , with numeric coefficients @xmath70 .",
    "i could constrain eureqa to search only within this class of expressions by entering a target expression having a particular total degree , such as @xmath71 however , standard regression software is much faster for merely optimizing some parameters in a specific form  and more accurate if done with arbitrary - precision arithmetic .",
    "the largest total degree in eureqa result ( [ eq : moreprecise ] ) is 5 .",
    "consequently i next used the _ mathematica _",
    "@xmath72 $ ] function with the 12 basis expressions of the form @xmath73 having odd total degree @xmath74 .",
    "after 0.27 seconds i received the following eight term result whose significant digits i have truncated for brevity : @xmath75 the maximum absolute error at the tabulated points was about @xmath76 , which is two more significant digits than ( [ eq : moreprecise ] ) for the same total degree and only one more term . very gratifying . 7 .",
    "encouraged , i next tried @xmath72 $ ] with total degree 7 , which entails 20 basis terms . after 0.52 seconds i received a different eight term result @xmath77 having an absolute error at the tabulated points of about @xmath78 .",
    "thus it seems likely that something important is missing from the basis , preventing results ( [ eq : linearmodelfit5 ] ) and ( [ eq : linearmodelfit7 ] ) from corresponding to economized truncations of a convergent infinite series because : 1 .",
    "this is a negligible accuracy improvement .",
    "the term count did nt increase .",
    "the coefficients of similar terms change dramatically between approximations ( [ eq : linearmodelfit5 ] ) and ( [ eq : linearmodelfit7 ] ) .",
    "4 .   in each approximation",
    "there is substantial cancelation between the dominant terms .",
    "thus it is not promising to try larger total degrees with this basis in pursuit of a concise numerically stable silver standard .",
    "nonetheless , this has been a nice combined use of eureqa and _ mathematica _ : after the decision to try a target expression of the form @xmath79 , eureqa discovered a concise form having 9 significant digits and basis functions of the form @xmath80 .",
    "i then used _ mathematica _ to obtain a result having only one more term that is accurate to 11 significant digits , which is more than adequate for many purposes .",
    "for this example eureqa has served as a muse rather than an oracle .",
    "however , i could nt help wondering : _ is _ there a relatively simple class of forms that eureqa might have revealed for further polishing to a concise _ silver - standard _ fit by _ mathematica _ ?    with the help of the _ mathematica _ _",
    "@xmath81 $ ] _ function and an embarrassingly large amount of my time adapting its results to my desires via a sixteen line _ mathematica _ function that i wrote , i was able to determine an exactly integrable truncated infinite series expansion of the integrand that converged sufficiently fast without undue catastrophic cancelation over the entire interval @xmath82 . using @xmath83 $ ] , the hornerized representation of the corresponding _ antiderivative _ is @xmath84 being a single series bi - focally expanded about @xmath85 rather than a conditional expression containing two or more different series , it is @xmath12 over the entire interior interval @xmath86 .",
    "notice that contrary to the previous efforts , @xmath64 occurs only to the first power and that all the other terms are multiplied by @xmath87 .",
    "a good set of basis expressions is thus @xmath88 for @xmath89 .",
    "the higher powers of @xmath90 in the previous basis were being used as flawed surrogates for @xmath91 : octagonal pegs in circumscribed round holes  they sort of fit , but in an impaired way .",
    "the _ mathematica _ function that i wrote computes the exact coefficients @xmath70 , which involve @xmath92 and powers of @xmath7 .",
    "however , i instead used @xmath72 $ ] to effectively economize a higher degree approximation to a lower - degree one having nearly the same accuracy .",
    "for the data i used high precision numerical integration after using truncated series ( [ eq : bifocalseries ] ) to subtract out and exactly integrate two terms of the endpoint singularities . this made equally spaced @xmath11 values quite acceptable .",
    "experiments revealed that using terms through coefficient @xmath93 gave an approximation to @xmath94 that had a worst absolute error of about @xmath95 at the right endpoint where the value was about 1.255 .",
    "a plot of the residuals revealed that this eight - coefficient approximation has a relative error of about @xmath96 , making it silver standard .",
    "moreover , this plot was essentially noise , revealing no remaining exploitable residual for ieee double .",
    "eureqa did not by itself discover this better basis , but that is my fault : i never allowed square roots as a building block .",
    "i should have done a little analysis earlier to wisely suggest a target expression of the form @xmath97 .",
    "after all , there is a square root in the integrand denominator , so i should have expected a square root in a good approximate antiderivative numerator .",
    "i could have even tried the square root that also contains the cosine term .",
    "using eureqa effectively for computer algebra and numerical analysis should be viewed as a collaboration rather than a competition .",
    "and eureqa is not a black box oracle .",
    "you can not leave your brain behind .",
    "that is probably equally important when using eureqa for noisy experimental data .",
    "there are many other possibilities for using eureqa to find a concise expression or suggest a good class of expressions that closely approximates a result that would otherwise have to be presented only graphically or as a table .",
    "for example ,    * _ inverse functions and solving parametric algebraic equations _",
    ": imagine that for the example of the previous subsection , we also or instead wanted an approximate symbolic expression for the _ inverse _ dogbert @xmath51 function : @xmath11 as a function of @xmath51 .",
    "eureqa can search for such expressions if we simply enter @xmath98 , or perhaps more specifically for this example @xmath99 .",
    "* _ solution of differential , integral , delay and other kinds of functional equations _",
    ": for example , suppose that we have a system of first - order ordinary differential equations , and a tabulated numerical solution vector @xmath100 $ ] for @xmath101 .",
    "then we can use eureqa to separately search for good expressions for @xmath102 .",
    "if we want @xmath103 , then we should first make a change of independent variable to map that end point to a finite value in a way that does nt introduce a singularity elsewhere .",
    "* _ implicitization _ : a major application of computer algebra is implicitization of parametric equations defining curves , surfaces or higher - dimensional manifolds .",
    "however , exact methods are known only for certain classes of parametric equations . for other classes we can try using eureqa to find approximate implicit equations .",
    "( hint : see @xcite for tips on how to use eureqa for this purpose . )",
    "here are a few additional tips and tricks for using eureqa effectively in conjunction with computer algebra or numerical analysis :    1 .",
    "building blocks such as @xmath104 , @xmath105 , @xmath106 , @xmath107 , and @xmath108 that are not real for some real arguments cause a candidate to be rejected if the result is nt real for _ all _ of the data values . to avoid wasting time partially processing such candidates , consider using a specific form of such a function in your target expression that automatically precludes unreal sub - expressions rather than simply including the function as a building block .",
    "for example , knowing that @xmath82 , i used @xmath109 for the example in subsection 3.1 rather than merely checking the arcsine building block .",
    "conversely , your target expression can be of the form `` @xmath110 '' to impose an inequality constraint of the form @xmath111 . whenever @xmath112 the log factor generates a nan , and 0*nan is nan , which disqualifies that candidate .",
    "otherwise the multiplication by 0 makes that term have no effect on the search for good @xmath18 , and we can mentally discard the artifice log term at the end .",
    "similarly a target expression of the form `` @xmath113 '' imposes the inequality constraint @xmath114 .",
    "( perhaps a future version will have a more efficient and straightforward way to impose inequality constraints . )",
    "3 .   to increase the chance of obtaining exact rational coefficients ,",
    "reduce your input expression over a common denominator , then separately tabulate and fit the numerator and denominator with the building block checked .",
    "4 .   to possibly include _ foreseen _ exact symbolic known irrational constants such as @xmath7 and @xmath115 in your result , for each such constant make a labeled column of corresponding floating - point values , preferably accurate to 16 digits , for example if a column labeled @xmath116 contains @xmath117 and a column labeled @xmath118 contains @xmath119 , then check the building block and use a target expression of the form `` @xmath120 '' .",
    "these symbolic constants do nt contribute much to the curse of dimensionality because they are invariant , so there is no need to include more rows on their account .",
    "5 .   as with most regression software , eureqa tends to express results in terms of the notoriously ill - conditioned monomial basis @xmath121 to express your result more accurately in terms of an orthogonal polynomial basis , such as the chebychev @xmath122 polynomials , generate columns of the desired number of successive polynomials at the tabulated values of the independent variables labeled @xmath123 , then use a target expression of the form `` @xmath124 '' .",
    "these numerous @xmath125 variables do nt contribute much to the curse of dimensionality because they are totally correlated rather than truly independent .",
    "moreover , these variables have the same as any other variable , thus preventing them from being discriminated against as they would be if you otherwise equivalently made the target expression be `` @xmath126 '' .",
    "eureqa has a built - in function @xmath127 that uses numerical differentiation of a smoothing spline to approximate an @xmath42th derivative .",
    "one of its most common uses is for system identification : given experimental tabulated @xmath128 @xmath0 pairs , if you enter a target expression such as @xmath129 , then eureqa will search for a concise differential equation of that rather general form that accurately fits the data .",
    "for example , the returned results might include @xmath130 . although differentiation of a smoothing spline is probably significantly more accurate than more naive methods  particularly for noisy data  numerical differentiation inherently magnifies rounding and discretization errors . therefore if an explicit or implicit expression is available for @xmath0 , then it is almost certainly more accurate to tabulate floating - point values of exact derivatives produced by computer algebra .",
    "automatic differentiation @xcite is another silver - standard alternative .",
    "eureqa has a built - in @xmath131 function that i could have used it instead of the _ mathematica _",
    "@xmath132 $ ] function .",
    "however , the @xmath131 function uses the trapezoidal rule  probably because it has no control over the spacing of the independent variable values . given an integrand expression to integrate exactly or to sample adaptively as needed by a function such as @xmath133 ,",
    "computer algebra can almost always deliver a more accurate integral .",
    "it is usually somewhat of a nuisance to work between two or more separate software packages compared to working entirely within one that has all of the necessary features built in .",
    "the extra effort and the lesser chance of even knowing about independent software packages is a great deterrent to such use by the masses .",
    "thus it is good to know that interfaces are under development for using eureqa from within _ mathematica _ , matlab , python , .net and knime , with current versions down - loadable from @xcite .",
    "such added interfaces are rarely as seamless as features that are built in , but they are often great improvements over communicating via export - import of files or copy and paste . among other things , the interfaces can accommodate differences in syntax for expressions .",
    "at any one time , most of us are amateurs with most of the software that we use .",
    "we need all of the help that we can obtain . in response to that need , many of the best software packages are automating portions that can be . for example :    1 .",
    "adaptive quadrature relieves us of having to learn about numerous rules for different kinds of univariate and multivariate integrands and finite , semi - infinite or infinite integration regions .",
    "2 .   adaptive interval and significance arithmetic can give us results that are guaranteed or highly likely to have the accuracy that we request .",
    "eureqa can sometimes automatically discover good regression models .",
    "inverse symbolic calculator can sometimes automatically recognize floating - point approximations to exact symbolic rational or irrational constants .",
    "however , the examples in subsections [ sub : a - trigonometric - simplificationeg ] and [ sub : an - antiderivative - example ] were _ not _ automatic .",
    "training , experience and judgment were involved in choosing the data points , target expression , etc .",
    "some of this could and should be automated . a qualitative analysis program such as the maxima program described in @xcite could help in these regards : given an expression , this program attempts to return bounds and indications of monotonicity , convexity , symmetries , periodicities , zeros , singularities , limits and stationary points . to the extent that this is successful",
    ", this information could be used to choose automatically for each independent variable the endpoints , the number of samples , and perhaps even their distribution .",
    "for example :    * if there are singularities , then it is best to automatically convert any tangents to sines divided by cosines , then form a reduced common denominator , then use eureqa to fit separately the numerator and denominator .",
    "neither the numerator nor denominator will contain a pole , but they still could contain a logarithmic singularity that would have to be handled by subtracting or dividing it out . * it is probably best if the endpoints extend modestly beyond all of the real zeros and stationary points , including at least one fundamental period if any , with enough points to resolve the shortest period . *",
    "if there is a symmetry and the expression is @xmath12 at the symmetric point , then it is probably best to center the data values on that point .",
    "otherwise it might be more efficient to make that symmetry point be one of the end points .",
    "even a purely _ numeric _ program that searched for zeros , singularities , extrema , periodicities , and symmetries could help in these regards .",
    "1 .   with wise use",
    ", eureqa can sometimes determine a simpler exact equivalent expression than current computer algebra systems can  or sometimes transform an expression into a targeted form that is nt provided by a computer algebra system .",
    "2 .   with wise use , eureqa can sometimes suggest promising forms of expressions that approximate a result for which an exact closed form is unobtainable or excessively complicated .",
    "often you will want to obtain a more accurate result in a thus - revealed class by using a linear or non - linear regression program built into a computer algebra system or statistics package .",
    "some simple interface additions _ within _ eureqa could increase its utility for the above two purposes .",
    "interfaces _ to _ eureqa within more other software packages would encourage more use of eureqa . embedding eureqa within those packages would probably be even more seamless .",
    "eureqa uses some custom computer algebra and perhaps some standard numerical methods internally .",
    "eureqa would almost certainly benefit from embedding and exploiting a well developed full - fledged computer algebra system together with classic regression and numerical methods packages .",
    "eureqa s most frequent and notable successes will probably continue to be with noisy experimental data , but eureqa shows promise for purposes 1 and 2 above .",
    "thank you michael schmidt for your suggestions and patient explanations .    14 m. abramowitz and i.a .",
    "segun , handbook of mathematical functions , dover publications , ( 1965 ) .",
    "d. bailey and j. borwein , inverse symbolic calculator , + http://isc.carma.newcastle.edu.au/    r. corless , e. postma and d. r. stoutemyer , rounding coefficients and artificially underflowing terms in non - numeric expressions , _ acm communications in computer algebra _ 45 ( 1/2 ) , ( 2011 ) , pp .",
    "17 - 48 .",
    "eureqa building blocks , http://creativemachines.cornell.edu/eureqa_ops    r. l. graham , d. e. knuth and o. patashnik , concrete mathematics , 2nd edition , addison wesley , section 3.2 , ( 1994 ) .",
    "j. r. koza , example of a run of genetic programming , + http://www.genetic-programming.com/gpquadraticexample.html    m. schmidt and h. lipson , distilling free - form natural laws from experimental data , _ science _ 324 ( 5923 ) ( 2009 ) , pp .",
    "81 - 85 .",
    "m. schmidt and h. lipson , symbolic regression of implicit equations , genetic programming theory and practice , volume 7 , chapter 5 , pp . 73 - 85 , ( 2009 ) , http://creativemachines.cornell.edu/sites/default/files/schmidt-final-2009-06-05.pdf    m. schmidt , eureqa web page .",
    "sourceforge , http://maxima.sourceforge.net/compalg.html    d. r. stoutemyer , dimensional analysis using computer symbolic mathematics , _ journal of computational physics _ 24 , no .",
    "2 , ( 1977 ) , pp .",
    "141 - 149 .",
    "d. r. stoutemyer , qualitative analysis of mathematical expressions using computer algebra , proceedings of the 1976 acm symposium on symbolic and algebraic computation , ( 1976 ) pp .",
    "97 - 104 .",
    "wikipedia , comparison of computer algebra systems , + http://en.wikipedia.org/wiki/comparison_of_computer_algebra_systems    wikipedia , automatic differentiation , http://en.wikipedia.org/wiki/automatic_differentiation",
    "[ flo : startsearchtab ]"
  ],
  "abstract_text": [
    "<S> the free eureqa program has recently received extensive press praise . </S>",
    "<S> a representative quote is    `` there are very clever thinking machines in existence today , such as watson , the ibm computer that conquered _ jeopardy _ ! last year . but </S>",
    "<S> next to eureqa , watson is merely a glorified search engine . ''    </S>",
    "<S> the program is designed to work with noisy experimental data , searching for then returning a set of result expressions that attempt to optimally trade off conciseness with accuracy .    </S>",
    "<S> however , if the data is generated from a formula for which there exists more concise equivalent formulas , sometimes some of the candidate eureqa expressions are one or more of those more concise equivalents expressions . if not , perhaps one or more of the returned eureqa expressions might be a sufficiently accurate approximation that is more concise than the given formula . </S>",
    "<S> moreover , when there is no known closed form expression , the data points can be generated by numerical methods , enabling eureqa to find expressions that concisely fit those data points with sufficient accuracy . </S>",
    "<S> in contrast to typical regression software , the user does not have to explicitly or implicitly provide a specific expression or class of expressions containing unknown constants for the software to determine .    </S>",
    "<S> is eureqa useful enough in these regards to provide an additional tool for experimental mathematics , computer algebra users and numerical analysts ? </S>",
    "<S> yes , if used carefully . </S>",
    "<S> can computer algebra and numerical methods help eureqa ? definitely .    </S>",
    "<S> * keywords * : experimental mathematics , computer algebra , numerical analysis , simplification , symbolic regression , approximation , searching algorithms </S>"
  ]
}
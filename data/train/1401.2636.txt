{
  "article_text": [
    "in real images , one obtains a finite , pixelized ( _ i.e .  _",
    "sampled ) rendition of objects , for example the point spread function ( psf ) from stellar images , or galaxy images .",
    "many forms of subsequent analysis require continuum representations of the objects or their fourier transforms , for example to resample the objects onto a new grid , or to predict the appearance of the object after rotation , distortion , or convolution with a new psf .",
    "our principal concern is the validation of weak gravitational lensing ( wl ) measurement methods : the intrinsic appearance of a galaxy is slightly magnified or sheared by the gravitational deflection of intervening ( dark ) matter , then the image is convolved with the psf of the atmosphere and optics .",
    "wl software must estimate the lensing effects given a sampled , noisy version of a galaxy ensemble , and must do so to better than part - per - thousand accuracy to recover all of the information available information about dark matter and dark energy @xcite .",
    "simulated sky images used to test these methods must therefore have fidelity at least this good in rendering the sheared , convolved versions of realistic galaxies ( e.g. * ? ? ?",
    "* ; * ? ? ?",
    "the psf of a sky exposure is usually estimated empirically , often by fitting stellar images with a model consisting of an @xmath8 grid of pixel values @xmath9 and a specified interpolation function @xmath10 , such that the continuum representation is @xmath11 _",
    "e.g.  _  as done by the psfex software @xcite . to recover the intrinsic shape of a galaxy that has been observed through this psf",
    ", the observed shape must be corrected for the psf , an operation that is most straightforwardly done in the fourier domain @xcite , and requires part - per - thousand accuracy in the psf representation @xcite .",
    "one question , therefore , is how to compute the fourier transform @xmath12 of a psf defined by interpolation on a grid of samples .",
    "a simple discrete fourier transform ( dft ) is insufficient , as it represents a periodic psf , and does not include the effects of the interpolation function .",
    "a second question arises when simulating the effect of weak gravitational lensing on real galaxies .",
    "this requires taking pixelized images of the real galaxies , then calculating their appearance after application of a lensing shear , convolution with a new psf , and sampling on a new pixel grid ( e.g. * ? ? ?",
    "rotation , distortion , or an incommensurate re - pixelization require interpolation in either real or fourier space , and the application of convolution favors a fourier - domain solution . if we need to deconvolve the original image for its psf , a fourier - domain solution is strongly favored .",
    "hence we ask : what schemes for interpolation of the fourier representation of the galaxy @xmath13 ( between dft samples ) are needed to produce a simulated sheared , resampled galaxy at part - per - thousand level ? in answering the first question we will find an exact method , but it requires sinc interpolation that can take @xmath14 operations .",
    "we will search for approximate solutions that instead require @xmath15 operations for some small kernel size @xmath16 , but still attain the desired precision in rendering .",
    "we are motivated by the wl science , but there are of course many applications for an accurate method of interpolating images in fourier domain from a discrete set of points to arbitrary @xmath2 values .",
    "our conventions for fourier transforms and associated functions are in the appendix .",
    "we assume that an object is correctly modeled as an interpolation of a square , finite grid of values , so that its surface brightness @xmath17 is defined by the finite set of values @xmath9 for @xmath18 as per .",
    "we assume @xmath19 is even ; an odd - valued @xmath19 can be padded with another row and column of zeros .",
    "we will assume that the interpolation kernel has @xmath20 and @xmath21 at integer @xmath22 other than the origin  this is the condition that the interpolation agree with the input samples at the sampled locations .",
    "we will assume that the kernel is even , @xmath23 @xmath24 is zero beyond a bounded region if @xmath10 is .",
    "we wish to know the fourier transform ( [ ft2d ] ) .    for notational simplicity",
    "we solve the one - dimensional case , which extends easily to two or more dimensions . @xmath25",
    "the @xmath26 indicates convolution , and @xmath27 is the original sampled function . from the convolution theorem",
    ", we have @xmath28 . if we recognize the discrete fourier transform ( dft ) of the @xmath29 as @xmath30 we can write @xmath31 @xmath32 is equal to the convolution of the dft , which exists at the points @xmath33 , with a @xmath2-domain kernel @xmath34 .",
    "we need to avoid confusing the two interpolation kernels now involved in the problem : an @xmath7-domain interpolant @xmath10 that is chosen _ a priori _ as the definition of our function @xmath0 ; and the @xmath2-domain interpolant @xmath34 that we derive as necessary to obtain the exact value of @xmath1 .",
    "the factor @xmath35 in @xmath34 results from our convention of the samples starting at @xmath36 and being asymmetrically placed about the origin .",
    "the exact expression for @xmath1 is @xmath37 note that the ratio of sines ( or sincs ) in @xmath34 is equal to the result of wrapping the interpolant @xmath38 at period 1 .",
    "@xmath1 extends to infinity unless the @xmath7-domain kernel has a compact transform @xmath39 . in practice one will need to truncate at some @xmath40 , in effect defining a band - limited kernel .",
    "we now provide a recipe for the typical application in which one has an image of a galaxy with some input psf , sampled at unity pixel scale to an @xmath8 image .",
    "one wants to output an image of exactly the same galaxy after deconvolving the input psf , applying some affine transformation , convolving with an output psf , and resampling onto a pixel scale @xmath41 .",
    "because the output dft has to have some finite dimension @xmath42 , we necessarily will be rendering an image that has been folded with period @xmath43 , hence it is necessary to choose @xmath44 large enough that the folded flux is small enough to ignore .",
    "an exact answer is available via discrete fourier methods only when the output image is zero outside a bounded region .",
    "the steps are :    1 .",
    "obtain the @xmath45 from the input @xmath9 via an @xmath19-point dft to give @xmath2-space values on a grid of pitch @xmath46 .",
    "the operation count is @xmath47 using fft methods .",
    "[ dftstep ] 2 .",
    "select appropriate @xmath44 and construct a grid of the output sampled frequencies @xmath48 that will have pitch @xmath49 .",
    "the real - space affine transformation will be equivalent to a linear transformation and phase change in fourier domain , so each @xmath48 will have a corresponding input @xmath50 .",
    "3 .   assign to each @xmath48 the value obtained from the exact interpolation to @xmath51 of the input image defined by .",
    "this will require @xmath52 operations for the @xmath34 summation , plus @xmath53 operations to multiply by @xmath54 .",
    "( one must be sure here to include in the summation any aliases of @xmath48 that map back to frequencies @xmath55 . )",
    "[ convolvestep ] 4 .",
    "divide the dft by the transform of the input psf at @xmath50 to effect the deconvolution .",
    "the operation count is @xmath53 .",
    "multiply by the transform of the output psf evaluated at @xmath48 .",
    "this is @xmath53 .",
    "execute the dft back to the desired real - space grid , with @xmath56 operations .",
    "the limiting step is the @xmath2-space convolution ( [ convolvestep ] ) , which will generally take @xmath14 operations , although in some circumstances the 2d convolution can be factored to yield @xmath57 , still the slowest step .",
    "we will examine below the consequences of approximating this exact interpolation with a more compact kernel .",
    "consider an interpolation kernel @xmath58 , with fourier transform @xmath59 , that is used reconstruct the value of a sine wave @xmath60 ) from samples at integral @xmath61 values to some non - integral @xmath61 .",
    "the sinc function has the unique property that it interpolates without error for any frequency @xmath62 .",
    "we will assume more generally that the interpolation kernel is symmetric , @xmath63 , such that @xmath59 is real and symmetric , and is known to be exact at the interpolation nodes , _",
    "i.e.  _  for integral arguments @xmath64 , @xmath65 the interpolated reconstruction of the sampled sine wave is @xmath66 \\ast k(t )   \\\\",
    "\\rightarrow \\tilde r(\\nu_0 , \\nu ) & = &   \\left [ \\delta(\\nu-\\nu_0 ) \\ast \\shah(\\nu)\\right ] \\tilde",
    "k(\\nu)\\\\   & = & \\sum_{j=-\\infty}^\\infty \\tilde k(\\nu ) \\delta(\\nu-\\nu_0-j ) \\\\ \\rightarrow r(\\nu_0 , t ) & = & \\sum_{j=-\\infty}^\\infty \\tilde k(\\nu_0+j ) e^{2\\pi i ( \\nu_0+j ) t } \\\\   & = & e^{2\\pi i \\nu_0 t } \\sum_{j=-\\infty}^\\infty \\tilde k(\\nu_0+j ) e^{2\\pi i j t}.\\end{aligned}\\ ] ] the prefactor is the correctly interpolated sine wave , so let us define an error function @xmath67 . then this error function is @xmath68 in the second line we have made use of the fact that requires @xmath69 .",
    "the sinc filter has @xmath70 which vanishes for @xmath71 .",
    "the @xmath72 function hence vanishes for @xmath73 , as expected .",
    "many astronomical images have signals atop a large constant @xmath74 background .",
    "it is hence important that the @xmath7-domain interpolant @xmath10 have an error function satisfying @xmath75 , otherwise a resampled image will have background fluctuations as @xmath61 varies .",
    "note also that the same criterion dictates whether object flux will be conserved when the interpolant is used to shift the samples by a constant fraction @xmath61 of a pixel .",
    "putting @xmath76 in , the fractional background fluctuations will be @xmath77 from the first line we can see that any interpolant having @xmath78 for @xmath79 will conserve background level .",
    "the nearest - neighbor and linear filters ( see appendix for definitions ) satisfy this exactly since @xmath80 and @xmath81 , respectively , and the polynomial interpolants are designed to meet this criterion .",
    "the lanczos interpolants do not , however , meet this criterion . in the second line we have assumed that we are using interpolants , like lanczos , that attempt to approximate the band - limiting properties of the sinc filter , and",
    "will hence have @xmath82 and @xmath83 for @xmath84 . in this case",
    "we can see that    * the interpolated background error will oscillate as @xmath85 , _",
    "i.e.  _  will be worst for interpolation to the @xmath86 midpoint between pixels , and * the maximum fractional background error will be @xmath87 .    in practice , the lanczos interpolant or any other can be normalized to conserve a constant background via @xmath88 \\\\ \\rightarrow \\tilde k(\\nu ) & \\rightarrow & \\left[1 + 2\\tilde k(1)\\right ] \\tilde k(\\nu ) - \\tilde k(1 ) \\left [ \\tilde k(\\nu+1 ) + \\tilde k(\\nu-1)\\right ] .",
    "\\label{conserveu}\\end{aligned}\\ ] ] the effect of enforcing background conservation on the interpolant is hence to degrade slightly the band - limiting characteristic of the filter , adding @xmath89 `` wings '' to the frequency responses that extend to @xmath90 .      in  [ ftinterp ]",
    "we inferred that a wrapped sinc interpolation on the grid of dft fourier coefficients at @xmath91 is the correct way to calculate the transform @xmath1 at values of @xmath92 . here",
    "we examine the errors from approximating the exact @xmath34 with a smaller interpolation kernel .",
    "let us keep in mind that we now have two distinct interpolants : the @xmath10 used in real space to define the function @xmath0 from the samples @xmath29 , and the @xmath34 used in fourier domain to approximate the sinc interpolation of @xmath32 between the sample @xmath93 at @xmath91 .",
    "since all of our operations are linear , we can fully understand the accumulated errors by considering the case when the input @xmath29 are zero except for a single element @xmath94 .",
    "the dft produces @xmath95 a sine wave advancing by an amount @xmath96 cycles per sample , which will be perfectly interpolated to the expected @xmath97 at any @xmath98 if we use the sinc kernel .    with an imperfect @xmath34 , however",
    ", we can use to infer the error in the interpolated sine wave , putting @xmath99 and @xmath100 : @xmath101 \\tilde f(u ) + \\sum_{j\\ne 0 } \\tilde k_u(j+n / n ) e^{2\\pi i jnu } \\tilde f(u ) \\\\",
    "e_0(\\nu ) & \\equiv & \\sum_{j\\ne 0 } \\tilde k_u(j+\\nu ) = \\sum_{j>0 } \\left[\\tilde k_u(j+\\nu ) + \\tilde k_u(j-\\nu)\\right].\\end{aligned}\\ ] ] upon transforming back to real space , the first term will yield a scaled version of the input function , while the sum becomes a series of ghost images at distance @xmath102 from the original point : @xmath103 \\delta(x - n ) + \\sum_{j\\ne 0 } \\tilde k_u(j+n /",
    "n ) \\delta(x - n - jn).\\ ] ] now we may generalize to an arbitrary configuration of input samples @xmath29 .",
    "the @xmath104 that is obtained by executing an inverse transform after interpolation of the @xmath93 will be @xmath105 f(x ) + \\sum_{j\\ne 0 } \\tilde k_u(j+x /",
    "n ) f(x - jn).\\ ] ] these alterations to @xmath27 will be essentially preserved when convolved with @xmath10 to produce the function @xmath0 and its approximation @xmath106 , namely :    * the approximated version will be multiplied by the function @xmath107 . * a series of ghosts images appear , displaced by @xmath102 from @xmath0 , and each multiplied by the function @xmath108 .",
    "we note further that @xmath109 , and we are choosing interpolants intended to approximate the band - limited behavior @xmath110 for @xmath111 , so it is generally true that @xmath112 for @xmath113 . in conditions considered here , the first ghost image dominates .    to quantify the first effect , the left panel of figure  [ e0 ] plots the function @xmath114 that describes the multiplicative errors in the central image of the reconstructed @xmath115 , for the interpolants cataloged in the appendix .",
    "table  [ itable ] lists the interpolants , their kernel sizes , and their error levels at chosen maximum values of @xmath116 .",
    "clearly any of these interpolants will accrue errors @xmath117 for @xmath118 .",
    "we can hold @xmath119 by zero - padding the initial array by a factor 2 before the initial dft .",
    "the lanczos interpolants are designed to minimize @xmath59 for @xmath111 and hence perform well in reducing the interpolation errors determined by @xmath59 for @xmath120 .",
    "the lanczos filters of order @xmath121 attain @xmath122 with 2-fold padding .",
    "equivalent precision is available from the smaller cubic interpolant kernel if we precompute the dft with 4-fold zero - padding to keep @xmath123 . in this range",
    "we note that the cubic interpolant performs just as well as the lanczos interpolants with larger ( hence slower ) kernels .",
    "this is attributable to the cubic interpolant being designed to be exact for polynomials of order @xmath124 , which is equivalent to the requirement that @xmath125 for integral @xmath126 and @xmath127 .",
    "thus the cubic interpolant has @xmath59 smaller than a lanczos interpolant of equal size if we stay sufficiently close to integer values of @xmath126 .    inspired by the success of the standard cubic interpolant , we seek an interpolant that is exact for polynomial functions beyond quadratic order .",
    "this will require a 6-point interpolant , which must in turn be a piecewise - quintic polynomial function .",
    "this quintic filter , described in the appendix , also has continuous second derivatives .",
    "the quintic interpolant indeed satisfies our expectation of performing extremely well if we confine the data to @xmath128 by a 4-fold zero padding of the data before the dft .",
    "the multiplicative error @xmath129 is @xmath130 in this case .    as an illustration of the second effect , the right panel of figure  [ e0 ] plots @xmath131 for the interpolants , which determines the relative brightness of the first ghost image .",
    "we find essentially the same criteria on padding and choice of interpolant as we did from the threshold we imposed on @xmath132 .",
    "this is assured , as @xmath133 , given that all filters beyond the linear one have @xmath134 for @xmath135 . with 4-fold zero - padding ,",
    "the polynomial filters are again the most efficient at reducing the amplitude of the ghost images .",
    "the 4-element cubic filter limits the ghost amplitude to 0.006 of the original @xmath29 , and the 6-element quintic filter reduces the ghost amplitude to 0.0012 .    limiting both the amplitude of the ghost images and the multiplicative error on the central image of @xmath106 to be @xmath136",
    "is hence achieved by 4-fold zero padding of the input array , with a dft followed by interpolation in @xmath2-space with the 6-point quintic interpolant .",
    "similar performance is possible with the more compact 4-point cubic interpolant if the initial dft has 6-fold zero padding .",
    "the @xmath14 computational bottleneck at step [ convolvestep ] of our recipe can hence be replaced by @xmath137 operations in convolution with an interpolant with @xmath138 footprint , where @xmath139 for the quintic ( cubic ) interpolant .",
    "the oversampling by factor @xmath140 increases the time required for the input dft ( step [ dftstep ] ) to @xmath141 , leaving the dft as the likely slowest step of the process .",
    "however the whole operation now scales , within constant / logarithmic factors , as the number of pixels in the input galaxy images .",
    "we note that if we are rendering many versions of a given input galaxy , it may be efficient to pre - compute and cache the oversampled input dft .",
    "if storage space for this cache is not an issue , then the cubic interpolant with 6-fold dft padding may be faster than quintic interpolant with 4-fold dft .",
    "figure  [ ghosts ] shows the errors induced in reconstruction of a 2d bullseye image using three different @xmath2-space interpolation schemes .",
    "lccccc nearest & 1 & 317.5 & ( large ) & ( large ) & ( large ) + linear & 2 & 9.6 & 0.18 & 0.049 & 0.022 + cubic & 4 & 2.74 & 0.061 & 0.0061 & 0.0016 + quintic & 6 & 3.62 & 0.037 & 0.0012 & 0.00015 + lanczos @xmath142 & 6 & 1.49 & 0.014 & 0.0035 & 0.0035 + lanczos @xmath143 & 8 & 1.35 & 0.005 & 0.0030 & 0.0019 + lanczos @xmath144 & 10 & 1.08 & 0.004 & 0.0022 & 0.0012 + sinc & @xmath145 & 0.5 & 0 & 0 & 0 +",
    "the above section considers the transform from @xmath2 space back to @xmath7 space to produce an output image @xmath106 to be continuous , but a discrete transform is necessary in practice .",
    "consider this dft to produce @xmath44 samples of the @xmath7-space image at spacing @xmath146 .",
    "the dft will sample the @xmath2 space at intervals @xmath147 to yield an output image that has been wrapped with period @xmath148 , such that the output point @xmath149 .",
    "the input image @xmath0 is confined to the extent @xmath150 of the original input array @xmath29 plus the radius of the non - zero region for the interpolant @xmath10 .",
    "hence as long as the output dft has extent @xmath151 that would contain the input image , the wrapped regions are nominally zero and the dft yields an exact sampled representation of the output image .    however we must recall that , in the case where we have used an approximate interpolant @xmath34 , ghost images are present in the output image at the locations @xmath152 , where @xmath153 is the size of the @xmath6 input dft , and @xmath154 is the zero - padding factor applied to the input data array with @xmath19 samples . if @xmath155 for some integer @xmath156 , then the principal ghosts will be folded directly atop the primary image .",
    "this might seem damaging , but in fact means that the reconstructed @xmath157 will be _ better _ , in fact _ perfect _ , because the summed ghost images will exactly cancel the multiplicative error @xmath158 that affects the primary image .",
    "another way to see this is that if @xmath155 , then the @xmath159 dft is using exactly the @xmath2 values produced by the @xmath6 dft , and no interpolation is being done at all .",
    "wrapping of the ghost images can be a major problem , though , in the following important application : suppose our goal is to take @xmath0 , dilate it to @xmath160 $ ] , then convolve with some psf function .",
    "this is , for example , exactly what one wants to do to simulate a sky that has been sheared by weak gravitational lensing",
    " the image must be dilated by @xmath161 in one direction and contracted with @xmath162 along a perpendicular axis .",
    "if we wish to execute this dilation in the fourier domain , setting @xmath163 $ ] , then the ghosts will appear at locations @xmath164 .",
    "if we do the @xmath159 dft with @xmath165 , as might be common , then the ghosts are wrapped to positions @xmath166 , just slightly displaced .",
    "figure  [ sheared ] illustrates the results .    these displaced ghosts can generate spurious broadening of the reconstructed image @xmath167",
    "this is a problem when simulating sheared 2d sky images , because the interpolation errors induce a quadrupole moment atop that induced by the shearing of the image .",
    "we take our `` bullseye '' galaxy and calculate the ellipticity from unweighted quadrupole moments of the ] the original bullseye pattern has a diameter of 32 pixels , and is @xmath168 zero - padded to 128 pixels before the @xmath6 dft .",
    "we construct a sheared image of this galaxy by interpolating in @xmath2 space and executing the @xmath159 dft on a @xmath169 grid with @xmath170 .",
    "the quadrupole moment of this reconstruction is compared to that of an image constructed by direct interpolation of the @xmath7-space image with a 3rd - order lanczos kernel .",
    "if the applied shear produces an ellipticity @xmath171 on the @xmath7-domain interpolation of the sheared image , we find that the reconstruction from cubic @xmath2-space interpolation produces an ellipticity that is systematically biased by about @xmath172 .",
    "the quintic filter is better , with biases of @xmath173 .",
    "if we increase the input zero - padding from @xmath168 to @xmath174 , we find the quintic filter reduces spurious ellipticities to @xmath175 , sufficient for highest - precision simulation of applied shear .",
    "note that the bullseye image is a worst case in the respect that it has full amplitude out to the edge of the initial domain . in practice",
    "we can expect postage - stamp images of galaxies to have near - zero flux at their edges .",
    "since the ghosts of the quintic interpolation rise very rapidly at the edges , a typical galaxy or psf cutout that has very little flux at the borders will have lower spurious contribution from wrapping of the ghost images .",
    "we seek a recipe for performing high - precision fourier - domain image simulation and analysis of galaxies and psfs given as pixelized data , with values between the pixel samples specified by some interpolant @xmath10 .",
    "our first question was : what is the exact expression for the fourier transform @xmath1 of such an interpolated , sampled image ? gives the answer : first calculate the @xmath176 from a dft of the input samples ; then interpolate between the @xmath177 using a wrapped sinc function ; then multiply by the transform @xmath178 of the @xmath7-domain interpolant .",
    "the maximum frequency @xmath179 with non - zero @xmath1 hence depends on the choice of interpolant : @xmath180 provides strictly band - limited @xmath181 but produces an @xmath0 that extends to very large distance beyond the original samples .",
    "the lanczos interpolants are a good choice to define @xmath0 that is not much larger than the original samples , while not extending @xmath1 far beyond the original nyquist frequency .",
    "the sinc interpolation of the @xmath176 is often too slow for practical implementation at @xmath14 , so how could we efficiently obtain the values @xmath1 at arbitrary @xmath2 that are needed to implement simulation of sheared and convolved renditions of @xmath0 ? using a @xmath2-space interpolant",
    "@xmath34 that with a more compact kernel produces two errors in the simulated images : the first is a multiplicative error @xmath129 , where @xmath19 is the size of the @xmath6 dft and @xmath132 is a function characteristic of the interpolant @xmath34 .",
    "the second error is the appearance of a pair of ghost images located @xmath182 units from the original image , each ghost multiplied by the function @xmath183 , which is nearly the same size as @xmath129 .",
    "figures  [ e0 ] and table  [ itable ] show the size of these errors for common interpolants .",
    "we find that part - per - thousand accuracy on the resampled image and its ellipticity will be realized by the following recipe :    1 .",
    "zero - pad the input data by a factor 4 before performing the @xmath184 dft .",
    "2 .   use the @xmath185 pixel piecewise - quintic - polynomial interpolant in @xmath2 space .",
    "we therefore recommend use of the quintic filter for @xmath2-space interpolation after zero - padding and dft . the cubic filter can be used to gain a factor 23 in speed at expense of @xmath186 larger simulation errors , and these larger errors",
    "can be eliminated by 6-fold zero - padding of the input image .",
    "there is one important caveat to this recipe : if the simulated @xmath2-domain image is transformed back to @xmath7 domain using a dft with period @xmath187 that nearly evenly divides @xmath19 , then the ghosts will be folded atop the primary image .",
    "a simulated shear or magnification will cause the ghosts to move relative to the primary image , which produces spurious broadening of the image , which can change the quadrupole moments of the image in a way that biases shear measurements . in a simple pessimistic trial case ,",
    "we find that the standard @xmath168padding@xmath188quintic recipe induces 0.4% errors in a simple measure of applied shear , somewhat too big for testing state - of - the - art shear measurement techniques .",
    "we find it possible to reduce the spurious shear to @xmath136 of the applied shear by combining the quintic @xmath34 with @xmath174 zero - padding of the initial dft , which should be sufficiently accurate for foreseeable cosmic - shear simulations . in fact this would be overkill for most galaxy images that one is likely to be simulating , since they are already nearly zero at their edges and hence not in need of @xmath174 padding .",
    "the methods described herein have been implemented as the core of the fourier - domain image rendering code for the _ galsim _ public - domain sky simulation code @xcite .",
    "this work was supported by department of energy grant de - sc0007901 , national science foundation grant ast-0908027 and nasa grant nnx11ai25 g .",
    "dg was supported by sfb - transregio 33 ` the dark universe ' by the deutsche forschungsgemeinschaft ( dfg ) and the dfg cluster of excellence ` origin and structure of the universe ' .",
    "we thank rachel mandelbaum , barney rowe , and r. michael jarvis for their comments and efforts in producing usable public code based on these derivations .",
    "we adopt the following conventions for functions and fourier transforms : @xmath189 the interpolants considered in this paper are defined as follows :    * * nearest - neighbor : * the real - space kernel is maximally compact , @xmath190 , but the fourier domain @xmath191 extends to infinity as @xmath192 . * * linear : * common interpolant with 2-point footprint in real space , and improved but still very broad fourier behavior @xmath193 : @xmath194 * * cubic : * piecewise - cubic polynomial interpolant with continuous first derivatives designed to interpolate quadratic polynomials perfectly .",
    "this implies @xmath195 for integers @xmath196 .",
    "the fourier domain expression is analytic but too complex to merit detailing .",
    "@xmath197 * * quintic : * a six - point interpolant that provides exact interpolation of fourth - order polynomial functions , and hence has @xmath198 for @xmath196 , can be produced from a piecewise - quintic polynomial kernel .",
    "this kernel also has continuous second derivatives : @xmath199 * * lanczos : * at order @xmath200 truncates the sinc filter after its @xmath200th null : @xmath201 @xcite present approximations to the si function which are very useful for calculating @xmath202 for the lanczos interpolants or for estimating leading - order behavior of the interpolation error quantities described in this text .",
    "see their ( 5.2.6 ) , ( 5.2.34 ) , and ( 5.2.38 ) . + as noted in  [ flat ] , the lanczos filters do not conserve background flux , but in practice can be modified to do so .",
    "the plots and table assume that we are using background - conserving versions of the lanczos filters .",
    "* * sinc : * conjugate of the nearest - neighbor filter , with @xmath203 and @xmath204 ."
  ],
  "abstract_text": [
    "<S> when simulating sky images , one often takes a galaxy image @xmath0 defined by a set of pixelized samples and an interpolation kernel , and then wants to produce a new sampled image representing this galaxy as it would appear with a different point - spread function , a rotation , shearing , or magnification , and/or a different pixel scale . </S>",
    "<S> these operations are sometimes only possible , or most efficiently executed , as resamplings of the fourier transform @xmath1 of the image onto a @xmath2-space grid that differs from the one produced by a discrete fourier transform ( dft ) of the samples . in some applications </S>",
    "<S> it is essential that the resampled image be accurate to better than 1 part in @xmath3 , so in this paper we first use standard fourier techniques to show that fourier - domain interpolation with a wrapped sinc function yields the exact value of @xmath1 in terms of the input samples and kernel </S>",
    "<S> . this operation scales with image dimension as @xmath4 and can be prohibitively slow , so we next investigate the errors accrued from approximating the sinc function with a compact kernel . </S>",
    "<S> we show that these approximations produce a multiplicative error plus a pair of ghost images ( in each dimension ) in the simulated image . </S>",
    "<S> standard lanczos or cubic interpolators , when applied in fourier domain , produce unacceptable artifacts . </S>",
    "<S> we find that errors @xmath5 part in @xmath3 can be obtained by ( 1 ) 4-fold zero - padding of the original image before executing the @xmath6 dft , followed by ( 2 ) resampling to the desired @xmath2 grid using a 6-point , piecewise - quintic interpolant that we design expressly to minimize the ghosts , then ( 3 ) executing the dft back to @xmath7 domain . </S>"
  ]
}
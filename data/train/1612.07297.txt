{
  "article_text": [
    "the last two decades have seen an explosion in the study of complex systems , caused by the increasing relevance for society of such large interconnected structures , and by an unprecedented availability of data to analyze them .",
    "many of these systems can be modelled as networks , in which the system elements are represented as nodes , and their interactions as connections , or edges , linking them  @xcite .",
    "the network representation of complex systems has been used in the social sciences  @xcite , in biology  @xcite , and in studies of technological systems  @xcite and communication systems  @xcite .",
    "more recent work has focussed on the multilayer nature of complex networks , introducing a new framework that is particularly useful for the analysis of large complex data sets  @xcite .",
    "researchers have applied complex systems techniques to a wide range of disciplines , identifying and analyzing several defining features of complex networks , such as the small world property  @xcite , heterogeneous degree distributions  @xcite , clustering  @xcite , degree - degree correlations  @xcite , assortativity  @xcite , synchronizability  @xcite , and community structure  @xcite .",
    "communities were originally studied in the context of social networks , in which they are formed by groups of people that share close friendship relations .",
    "however , communities of densely connected modules have been observed in several real - world and model networks of diverse nature  @xcite , where , in general , they are defined as groups of nodes whose internal connections are denser or stronger than those that link nodes belonging to different groups . in all these cases , the presence of communities directly influences the behaviour of the system , where there is often a correspondence between communities and functional units .",
    "ever since the discovery of community structure in real - world networks , a plethora of techniques devoted to their detection has been introduced  @xcite . the challenge is both theoretical , in proposing a good mathematical definition of what constitutes a community , and computational , in developing good heuristics that can detect communities in a reasonable time .",
    "a common way of investigating the community structure of networks starts with the definition of a quality function , which assigns a score to any network partition .",
    "larger scores correspond to better partitions , and algorithms are created to find the partition with the largest score . by far ,",
    "the most common and used of such quality functions is modularity  @xcite , that works by comparing the number of links inside each community to the number of links that would be expected if the nodes were connected at random , without any preference for links within or outside the community .",
    "a partition with a large modularity indicates that the communities have many internal links and few external ones , when compared to a randomized version of the network .",
    "however , despite its success , modularity also has some shortcomings , decreasing its general usefulness . in this article",
    ", we study a new quality function , _ modularity density _",
    ", that was originally introduced in  @xcite and that has been shown to address the limitations of traditional modularity .",
    "we present a detailed analysis of its properties on synthetic networks typically used to evaluate quality functions , as well as on random graphs , which are a commonly used benchmark to test community detection methods .",
    "we also present some limitations that need to be taken into consideration when using methods based on modularity density .",
    "in addition , we describe a new community detection algorithm based on this metric , whose computational complexity is quadratic in the number of nodes , and validate it on synthetic and real - world networks , showing that it performs better that other currently available methods .",
    "also , we argue that the nature of modularity density allows for a direct quantitative comparison of community structures across networks of different sizes .",
    "the modularity @xmath0 of a network with @xmath1 nodes and @xmath2 links is defined as : @xmath3 where @xmath4 is the adjacency matrix of the network , @xmath5 is the degree of node @xmath6 , @xmath7 is the community to which node @xmath6 is assigned and @xmath8 is the kronecker delta . the first term accounts for the presence or absence of a link between node @xmath6 and node @xmath9 ; the second term , instead , is the expected number of links between node @xmath6 and node @xmath9 in a random network with the same degree sequence as the original one .",
    "a first limitation of modularity is that it is intrinsically dependent on the number and distribution of edges , rather than on the number of nodes . to see this ,",
    "denote by @xmath10 and @xmath11 the number of internal and external links of community @xmath12 , respectively .",
    "moreover , let @xmath13 be the sum of the degrees of the nodes in community @xmath12 . with this notation ,",
    "it is @xmath14\\:,\\ ] ] where @xmath15 denotes the set of all communities in the partition . in this expression",
    ", each term in the sum refers to a different community .",
    "the first factor of each term corresponds to the internal density of links in the community , whereas the second factor encodes the expected density of links in the random network null model .",
    "now , introduce the positive parameter @xmath16 , representing the ratio of external links to internal ones : @xmath17 the value of @xmath16 is smaller for strong communitites , and higher for weaker ones .",
    "then , we can write @xmath18\\:.\\ ] ] from this expression , it is clear that a community @xmath12 gives a positive contribution to @xmath0 only if : @xmath19 this implies that the condition for a community to give a positive contribution only depends on the number of edges in the community and on the total number of edges in the network , but not explicitly on the number of nodes .",
    "a similar result can be obtained considering a network of @xmath20 communities disconnected from each other , along the lines of  @xcite . under the assumption that all groups have the same number of links",
    ", we can write @xmath21 then , from  , it is @xmath22=1-\\frac{1}{\\kappa}\\:.\\ ] ] this shows that modularity converges to  1 with the number of communities @xmath20 regardless of the internal properties of the communities , such as their size , or the number of internal edges .",
    "as long as @xmath20 is very large and all communities have the same number of edges @xmath23 , a network of disconnected trees has the same modularity of a network of disconnected cliques .",
    "as before , we also see that the number of nodes in each group does not explicitly contribute to @xmath0 , and , as an immediate consequence , a network composed of few cliques has a smaller modularity than a network composed of many disjoint trees .",
    "in addition to these results , the effectiveness of modularity is not constant for all edge densities . to determine its dependence on this quantity , we follow  @xcite and connect the @xmath20 groups in a ring configuration , where each community is linked with exactly one edge to the next one , and one edge to the previous one in the ring , for a total of @xmath20 inter - community edges . in this scenario",
    ", we have @xmath24 from  , it follows that @xmath25 = 1-\\frac{\\kappa}{m}-\\frac{1}{\\kappa}\\:.\\ ] ] for constant @xmath2 , this expression reaches its maximum when @xmath26 , for which it is @xmath27 thus , the highest modularity corresponds to a partition in  @xmath28 modules .",
    "once again , the number of nodes in the communities does not affect its largest possible value .",
    "this major limitation of modularity is known as the _ resolution limit _ , and it indicates that modularity , as a quality function for community detection , has an intrinsic scale proportional to  @xmath28 .",
    "the number and size of the communities that can be detected via modularity maximisation are bound to adhere to this limit , posing a serious question on the significance of results obtained with this method .",
    "in fact , in a more general framework , fortunato and barthlemy  @xcite have shown that , under some circumstances , the resolution limit can even force pairs of well - defined communities to be merged into a larger cluster , because this corresponds to a higher modularity .",
    "finally , it is worth noting that the trivial partition where all the nodes are put together in one single community , namely the whole network itself , has a modularity of 0 .",
    "this can be easily seen from  , since in this case the sum has only one term , @xmath29 and @xmath30 , so @xmath31 at first , this might seem a desirable property for a quality function , since , intuitively , the trivial partition should not have a positive modularity .",
    "however , this implies that any partition that achieves a modularity larger than  0 is retained as a valid community structure . since community detection algorithms try to maximize modularity , it is often the case that such a positive value can be found even on erds - rnyi random graphs  @xcite . to stress this point ,",
    "the trivial partition with @xmath32 can always be considered , but since one is interested in the maximum value of @xmath0 , it is often discarded in favour of a clustering that achieves any positive value of modularity .",
    "this poses a serious limitation to the ability of modularity - based algorithms to partition random graphs correctly .",
    "several variants of modularity have been proposed to address the resolution limit .",
    "for instance , multi - resolution methods , such as the one described in  @xcite , introduce an additional tunable parameter @xmath33 in the expression for @xmath0 : @xmath34\\:.\\ ] ] larger values of @xmath35 cause @xmath36 to be larger for partitions with smaller modules , whereas smaller values favour larger communities .",
    "however , this approach suffers from similar limitations to those presented by the original modularity  @xcite . in particular , @xmath36 has two contrasting behaviours : small clusters tend to be merged together , while large communities tend to be split into subgroups .",
    "networks in which all the communities are of comparable size are immune to this problem , and one can find a value of @xmath35 for which they can all be resolved .",
    "however , the existence of an optimal @xmath35 is not guaranteed in the general case . in particular , for networks whose community sizes",
    "are heterogeneously distributed , e.g. , following a power law , it is not possible to find a value of @xmath35 that avoids both problems .",
    "the reason for this is that the nature of the resolution limit is more general than the specific definitions of modularity and its multi - resolution extension .",
    "several quality functions for community detection , including the one just mentioned , can be derived within the general framework of a first principle potts model with hamiltonian @xmath37\\delta_{c_ic_j}\\:,\\ ] ] where @xmath38 and @xmath39 are non - negative weights .",
    "different choices for the weights result in different quality functions . however , only those using non - local weights can be truly free from the resolution limit  @xcite , while all others , including modularity , multi - resolution modularity and functions based on quantities such as betweenness , shortest paths , triangles and loops , can never avoid it .",
    "recently , a new quality function called _ modularity density _ has been proposed to overcome the issues outlined above  @xcite . given a network partition , modularity density",
    "is defined as @xmath40 ^ 2 -\\sum_{\\widetilde{c}c}\\frac{m_{c\\widetilde{c}}^2}{2mn_cn_{\\widetilde{c}}}\\right\\rbrace\\:,\\ ] ] where @xmath41 is the number of nodes in community @xmath12 , the internal sum is over all communities different from @xmath12 , and @xmath42 is the number of edges between community @xmath12 and community @xmath43 .",
    "this new metric brings two major improvements over traditional modularity .",
    "first , it contains an explicit penalty for edges connecting nodes in different communities .",
    "this addresses the problem of the splitting of large communities , since each split introduces external links and is thus penalized .",
    "second , all terms , including the penalty for inter - community edges , are explicitly weighted by the community sizes .",
    "therefore , a partition with many edges linking two small communities is penalized more than one with the same number of edges linking two large ones .",
    "thus , modularity density introduces local dependencies that are not found in traditional of modularity .",
    "additionally , it is not related to the potts model hamiltonian , thus avoiding the resolution limit problem . note that   requires @xmath44 , which implies that partitions with communities consisting of an isolated node are not allowed .    to investigate the properties of modularity density in more depth ,",
    "rewrite the expression for @xmath45 as @xmath46\\:,\\ ] ] where @xmath47 the parameter @xmath48 can assume values between  0 and  1 , since it is the fraction of possible internal links actually present in community  @xmath12 .",
    "thus , it measures the connection density of the community , or , equivalently , the probability that two random nodes inside @xmath12 are connected . from",
    "it is clear that having many internal edges is not enough for a community to give a large contribution to modularity density .",
    "in fact , a strong community is one where the density of edges , rather than their number , is large .",
    "this also agrees with the intuitive notion that a community is a group of nodes that are densely connected amongst each other .",
    "thus , a good partition is one that is characterized at the same time by a large number of intra - community links and a high density of edges within the communities .",
    "modularity density achieves this by accounting for the number of nodes in each group and , in this sense , it has a more natural dependence on the local properties of the network and of the partition under consideration than does traditional modularity .",
    "next , it is instructive to study the behaviour of modularity density in the same cases described in the previous section .",
    "first , consider a network partitioned in just two communities , @xmath12 and @xmath43 .",
    "the contribution to @xmath45 of community @xmath12 is : @xmath49 introducing the proportionality constant @xmath16 as before , it is @xmath50\\:,\\ ] ] where we used @xmath51 and @xmath52 . unlike what happens with traditional modularity , the contribution of a single community depends explicitly on the number of internal links _ and _ on the size of the community itself .",
    "disconnected modules , the modularity density @xmath53 depends only on @xmath20 and the edge density of the communities @xmath54 .",
    "fixing one of the two parameters , @xmath53 always increases with the other.,scaledwidth=75.0% ]    consider now again a network composed of @xmath20 disjoint communities . assuming that each community has the same number of nodes @xmath55 and the same number of edges @xmath23 , the modularity density of such a network is : @xmath56=p_\\kappa^\\star\\left(1-\\frac{p_\\kappa^\\star}{\\kappa}\\right)\\:,\\ ] ] where @xmath57 is the connection density of the communities .",
    "the first major difference between   and   is that @xmath58 depends not only on the number of communities , but also on their density of edges , unlike traditional modularity , which only depends on @xmath20 .",
    "also , for a fixed value of @xmath20 , @xmath58 increases with @xmath59 ( see  ) .",
    "this is remarkable , since it indicates that the strength of the partition increases as more links are added within each group , in striking opposition with the behaviour of traditional modularity .",
    "we also note that for a fixed value of @xmath59 , modularity density increases with the number of communities .",
    "its theoretical maximum is reached in the limiting case of an infinite number of communities , with the special requirement that they are all cliques . moreover , in one more substantial difference with traditional modularity , a network composed of few cliques in general has a higher modularity density than a network composed of an infinite number of sparse communities .    finally , we study the test case of the ring of @xmath20 communities each linked by a single edge to the next community and a single edge to the previous one . as before",
    ", it is @xmath60 and @xmath61 , in addition , @xmath62 and @xmath63 . introducing the variables @xmath64 and @xmath65",
    "we can write the modularity density as @xmath66\\:.\\ ] ] the optimal number of communities is the one that maximizes this expression , or , equivalently , the one for which its derivative vanishes .",
    "differentiating @xmath67 with respect to @xmath20 , we obtain @xmath68 with @xmath69 this expression does not have a simple general root in terms of @xmath20 .",
    "rather , the solutions depend on the local and global properties of the network .",
    "thus , the number of groups does not seem to be constrained by an intrinsic scale of order @xmath28 .    as briefly discussed above , a major drawback of traditional modularity",
    "is that algorithms based on its maximization often find supposedly viable partitions on graphs with no ground - truth community structure . in such cases ,",
    "the correct partition is either the one where all nodes are placed together , or the one with @xmath1 communities , each consisting of a single node . in either case ,",
    "modularity vanishes .",
    "thus , modularity - maximizing algorithms often suggest spurious community structures simply beause they have a non - zero modularity .",
    "conversely , from   it follows that the one - group partition has a modularity density @xmath70 where @xmath71 is the network density .",
    "note that this expression is a parabola , whose roots are @xmath72 and @xmath73 , which are the fully disconnected and fully connected graphs , respectively .",
    "thus , a partition s @xmath45 needs not only to be positive , but also to lie above the parabola for an algorithm based on modularity density maximization to accept it .",
    "we will see that this makes such algorithms not find communities on random graphs , as should be the case for a reliable community detection method .",
    "having discussed the advantages of modularity density as a quality function , we propose a community detection algorithm based on its maximization . currently , the only published modularity density algorithm  @xcite is based on iterations of two steps , namely splitting and merging .",
    "the algorithm is divisive , starting from a partition where all the nodes are placed in a single community and then using bisections .",
    "each splitting is performed using the fiedler vector of the network , which is the eigenvector of the graph laplacian corresponding to the second smallest eigenvalue . the graph laplacian @xmath74 is defined as @xmath75 , where @xmath76 is the diagonal matrix of the node degrees .",
    "the merging steps try to merge pairs of communities together if doing so improves the current partition .",
    "the two steps are repeated until the partition can not be improved any longer , and the algorithm is deterministic , meaning that the same initial network always yields the same partition . here ,",
    "we extend and adapt an existing modularity maximisation algorithm , originally proposed in  @xcite , which achieves the largest published scores of traditional modularity . along the lines of the original method ,",
    "our algorithm consists of four main steps , which we describe below .",
    "[ imple ] contains a fully detailed discussion of the algorithm implementation and its computational complexity .      in this step",
    ", we try to bisect the community under consideration ( see  a ) . to do so",
    ", we use the leading eigenvector of the modularity matrix . despite suffering from the limitations discussed above",
    ", modularity still provides a good initial guess for a partition that is then refined by the subsequent steps .          after every bisection",
    ", the partition can be often improved by using a variant of the kernighan - lin algorithm  @xcite .",
    "we consider moving every node @xmath6 from the community into which it was assigned to the other ( see  b ) .",
    "every such move would result in a change @xmath77 of the quality function , and we perform the move yielding the largest of such changes @xmath78 .",
    "note that we introduce here a non - deterministic factor : given a tolerance parameter @xmath79 , we consider all moves achieving a change of modularity density within the interval @xmath80 $ ] to be equivalent .",
    "if more than one move falls within the acceptance interval , we randomly choose one to accept .",
    "this stochasticity allows the algorithm to explore the partition space without getting stuck on a local maximum , since it can accept moves that are not always optimal .",
    "once a move has been performed , the corresponding node is flagged as blocked .",
    "then , every non - blocked node is considered again and the procedure is repeated , until all nodes have been considered . at the completion of an iteration of this step ,",
    "a decision tree is formed where each node of the tree represents a sequence of nodes in the network switching community , with an associated @xmath81 equal to the sum of all the changes in modularity density along the branches leading to the tree node .",
    "then , we randomly choose a node in the decision tree amongst those achieving the largest positive increase in modularity density within an interval determined by the tolerance parameter @xmath79 , and perform all the moves corresponding to the chosen node . finally , the whole step is repeated until no improvement in @xmath45 can be obtained",
    ".      a further refinement of a current partition can be achieved by performing an additional tuning step . in the final tuning",
    ", we consider every node @xmath6 and try to move it to every other possible community @xmath12 already present in the partition ( see  c ) .",
    "the step is performed in a similar fashion to the fine tuning , repeatedly considering all the moves which result in an increase of modularity density in a small interval defined by the tolerance parameter @xmath79 until all nodes have been moved .",
    "as before , we build a decision tree of partial switches and then perform all the moves up to the level in the tree that has been selected amongst those yielding the largest increase in @xmath45 .",
    "we repeat this step until no further refinements can be found .",
    "a step that merges pairs of communities is fundamental .",
    "first of all , unlike both tuning steps , which are local because they only consider moving one node at a time , merging communities is a non - local step that allows one to better explore the landscape of modularity density  @xcite .",
    "for example , merging two entire communities can result in an increase of the quality function while partial mergers , i.e. , moving only some nodes from one community to the other , could still have a lower score than the starting partition . therefore , using only local moves , one could discard those partial mergers because they temporarily decrease the partition score , thus never achieving the beneficial complete merging of the two communities . in the case of modularity density , the agglomeration step is even more important , since no series of local moves could ever produce the full merging of two communities .",
    "this happens because modularity density does not allow communities of size  1 .",
    "thus , even if local steps had succeeded in moving all nodes except two from one community to another , any further move would be prohibited because it would result in a single - node community .",
    "this makes a global move essential for our algorithm . in the agglomeration step",
    ", we consider pairs of communities @xmath12 and @xmath43 and try to merge them ( see  d ) .",
    "each move results in a change in modularity density @xmath82 and we randomly choose the move amongst those in the interval @xmath83 $ ] , where @xmath84 is the largest increase in modularity density achieved by any move .",
    "we build a decision tree by progressively merging pairs of communities , until there is only a single community left .",
    "we then look at the nodes in the tree corresponding to the largest increase in modularity density but , in difference from the previous steps , if more than one node results in the same increase , we select the one with the smallest number of communities .",
    "the whole step is repeated until the current partition can not be improved further .",
    "disconnected communities .",
    "the predictions of   ( solid lines ) are confirmed by numerical simulations throughout the range of @xmath59 and for different values of @xmath20 . for each @xmath20",
    ", we consider groups with 50 , 100 and 500 nodes , respectively . additionally , and as expected , we observe that the value of modularity density does not depend on the number of nodes in each community , but only on the number of communities and their internal density .",
    "each point is the average over 100 network realizations.,scaledwidth=75.0% ]    with these four steps , the algorithm can be summarized as :    * start with a single community containing all nodes .",
    "* try to bisect the network using the leading eigenvector of the modularity matrix . *",
    "if the bisection was successful , then perform a fine tuning step .",
    "* iterate the bisection and fine tuning steps on each of the communities in the current partition , until no further splitting and refinement can be performed . *",
    "perform the final tuning step . *",
    "perform the agglomeration step .",
    "* repeat the sequence of steps until it is no longer possible to find an increase in modularity density .",
    "as described in detail in  [ imple ] , the worst - case computational complexity of the full algorithm is @xmath85 .",
    "to validate our algorithm , we test it on several synthetic and real - world networks .",
    "first , we verify that it reproduces the theoretical predictions on networks of disconnected communities and on rings of modules , discussed in   and  .",
    "then , we analyze its behaviour on random networks belonging to different ensembles . finally , we run it on a set of benchmark networks , comparing the results with the best ones currently published .       and compare the theoretical values of modularity density with the results of our algorithm . in panel  ( a ) we consider networks of @xmath20 fully connected cliques , finding a perfect agreement between theoretical value ( solid line ) and simulations ( squares ) . in panel",
    "( b ) , we build networks with different fixed values of @xmath20 and vary their internal density . note that , differently from  ( a ) , here the groups are not fully connected .",
    "the theoretical values ( lines ) and simulation results match precisely . in both panels ,",
    "each point is the average over 100 realizations of the same network.,title=\"fig:\",scaledwidth=45.0% ]   and compare the theoretical values of modularity density with the results of our algorithm . in panel  ( a ) we consider networks of @xmath20 fully connected cliques , finding a perfect agreement between theoretical value ( solid line ) and simulations ( squares ) . in panel  ( b ) , we build networks with different fixed values of @xmath20 and vary their internal density .",
    "note that , differently from  ( a ) , here the groups are not fully connected .",
    "the theoretical values ( lines ) and simulation results match precisely . in both panels ,",
    "each point is the average over 100 realizations of the same network.,title=\"fig:\",scaledwidth=45.0% ]    first , we consider networks formed by @xmath20 disconnected communities",
    ". indicates that the modularity density of such networks depends only on the connection probability @xmath86 and on @xmath20 itself , but not on the size of each community .",
    "we find an exact agreement between the simulation results and the theoretical prediction for all the values of @xmath20 ( ) .",
    "we also note that the values of modularity density found in the simulations do not depend on the number of nodes in the communities .    as a second test ,",
    "we simulate two types of ring networks of communities .",
    "we start by making the communities cliques of 5 fully connected nodes , and vary @xmath20 from 3 to 20 . from  , the expected modularity density of these networks is @xmath87\\:.\\ ] ] the comparison between the modularity density predicted by this expression and the values obtained in our simulations is shown in  ( a ) .",
    "we find a precise agreement between the two , showing that our algorithm correctly identifies the cliques without splitting them , and finds the right value of modularity density .",
    "next , we build ring networks in which we fix @xmath20 and vary the community density @xmath59 .",
    "each community contains 50 nodes , and we vary @xmath59 from @xmath88 to 1 , performin the test for @xmath89 , @xmath90 and @xmath91 .",
    "the results , in  ( b ) , show a perfect agreement in all cases , again indicating that our algorithm correctly partitions the networks .          as we argued in the previous sections ,",
    "a desirable feature of a community detection algorithm is that it does not propose a complex partition of graphs without ground - truth community structure . to verify that our algorithm satisfies this requirement , we test it on erds - rnyi random graphs . for graphs in this ensemble ,",
    "every possible edge between @xmath1 nodes exists independently with probability @xmath71 .",
    "thus , the average number of edges is @xmath92 .",
    "these networks do not have any true community structure , since all their edges are fully random , and thus they are one of the benchmarks against which community detection algorithms are often tested . for our simulations , we create networks with values of @xmath71 from @xmath93 to @xmath94 and number of nodes 50 , 100 , 500 and 1000 .",
    "the results , in  , show that for all network sizes , the average modularity density matches almost perfectly the theoretical prediction . even for small networks , where finite - size effects are largest ,",
    "the values lie in close proximity to the theoretical parabola and we can only observe a small deviation for the smallest networks at low values of @xmath71 . also note that all the results collapse on the theoretical curve , which does not depend on network size .",
    "these results represent a major improvement over modularity - based algorithms , that typically detect communities even on erds - rnyi networks .",
    "in addition , erds - rnyi networks are locally tree - like for low enough values of @xmath71 , and highly clustered for @xmath71 close to  1 .",
    "thus , the results also indicate that modularity density is highly effective in detecting when no real communities exist in locally tree - like graphs , and does not introduce spurious modules even when the clustering increases .",
    "in fact , also the limiting case of fully connected graphs , which corresponds to a link probability @xmath71 identically equal to  1 , is properly identified by our method .    as a special case of random networks",
    ", we also study random regular graphs .",
    "random regular graphs are random networks where all nodes have the same degree , but the edges are still randomly placed . using the algorithm described in ref .",
    "@xcite , we create random regular graphs with  100 , 500 and  1000 nodes . for each of the three network sizes , we consider degrees ranging from  4 to  20 , 100 and  500 , respectively . for every pair of size and degree , we generate 100  network realizations , on which we run our community detection algorithm .",
    "the results , depicted in  , show a good agreement between theoretical predictions and simulations .",
    "the only exceptions are three cases that correspond to the sparsest graph of each given size .",
    "these results show one of the major strengths of modularity density .",
    "however , it is well known that most real - world networks are not well represented by erds - rnyi graphs or random regular graphs .",
    "rather , they are characterized by heterogeneous degree distributions .",
    "thus , to further verify the performance of our algorithm , we test it on lfr networks  @xcite .",
    "these constitute a set of widely - used benchmark networks , whose distributions of degrees and community sizes follow a power - law @xmath95 . for our tests",
    ", we fix the network size to @xmath96 and vary the other parameters , namely the exponent @xmath97 of the degree distribution , the mean degree @xmath98 and the largest degree @xmath99 . also , we ensure that the networks thus created contain a single community , so that no actual community structure is present",
    ". we run our algorithm on the networks thus generated and compare its results with the theoretical expectations .",
    "the results , presented in  , show that for @xmath100 and @xmath101 , the modularity density found by the algorithm closely follows the predicted value for networks of all densities .",
    "we do observe , however , some deviations from the predicted values at @xmath102 .",
    "this is probably due to the fact that , asymptotically , no networks exist with a pure power - law degree distribution for @xmath103  @xcite . thus",
    ", in the limit of @xmath102 , and particularly for low densities , a spurious structure of stars with bridges appears , effectively introducing communities in the networks .",
    "nodes and varying parameters . in particular",
    ", we let the mean degree @xmath98 assume the values 15 , 25 , 35 , 44 and 55 , and the largest degree @xmath99 be 150 , 200 and 250 .",
    "for each combination of the parameters , we generate 100 networks and for each we record the edge density @xmath71 and the largest modularity density our algorithm finds .",
    "the plot shows considerable agreement between the theoretical modularity density ( solid line ) and the one found by the algorithm .",
    "the only deviations appear for @xmath102 and low @xmath71 , and they are probably due to the breakdown of the lfr model for this limiting value of the degree distribution exponent.,scaledwidth=75.0% ]    we now verify the performance of our algorithm on some well known networks , for which results of the maximum modularity density obtained so far are available .",
    "the first is zachary s karate club network  @xcite .",
    "this is a friendship network between 34 members of a karate club in a u.s .",
    "university during the 1970s and it has become one of the most standard benchmarks to test community detection algorithms .",
    "the interest in this network lies in the fact that , not long after it was recorded , the club split into two subgroups due to internal problems between two members , namely the manager and the coach .",
    "thus , a traditional challenge is to be able to detect these two groups based only on the friendship data available in the network topology , under the assumption that the members would decide to follow whichever leader they were more strongly related to between the coach and the manager .",
    "of the 561 possible edges in the network , only 78 of them are present , making the network fairly sparse , with an effective connection probability @xmath104 .    a second benchmark network we consider is the american college football club network  @xcite .",
    "here , the nodes represent different college football clubs and an edge connects two teams if there has been a regular - season game between them during the 2000 season .",
    "this network is known to have a natural community structure because the teams are divided into different leagues , thus making matches between teams more or less likely depending on the group they belong to .",
    "@lllll benchmark & @xmath45 & @xmath105 & @xmath71 & @xmath106 + karate club & @xmath107 & @xmath108 & @xmath109 & @xmath110 + football club & @xmath111 & @xmath112 & @xmath113 & @xmath114 + lfr , @xmath115 & @xmath116 & @xmath117 & @xmath118 & @xmath119 + lfr , @xmath120 & @xmath121 & @xmath122 & @xmath119 & @xmath123 + lfr , @xmath124 & @xmath125 & @xmath126 & @xmath127 & @xmath128 + lfr , @xmath129 & @xmath130 & @xmath131 & @xmath118 & @xmath119 + lfr , @xmath132 & @xmath133 & @xmath134 & @xmath118 & @xmath119 + lfr , @xmath135 & @xmath136 & @xmath137 & @xmath118 & @xmath119 + lfr , @xmath138 & @xmath139 & @xmath140 & @xmath118 & @xmath119 + lfr , @xmath141 & @xmath142 & @xmath143 & @xmath118 & @xmath119 + lfr , @xmath144 & @xmath145 & @xmath146 & @xmath118 & @xmath119 + lfr , @xmath147 & @xmath148 & @xmath149 & @xmath118 & @xmath119 +    finally , we consider again some lfr benchmark networks , choosing a set of parameters for which already published results exist .",
    "presents a comparison between the results obtained using our algorithm and the best results available in the literature .",
    "note that currently there is only one other algorithm based on modularity density .",
    "because of the stochasticity within our method , for each value of the mixing parameter @xmath150 , we create 10 realizations of the network and run the algorithm 100 times on each , reporting the average maximum modularity density found . in all cases considered ,",
    "our algorithm finds a partition with higher modularity density than the best one currently published .",
    "so far , we have shown that our algorithm identifies the correct value of modularity density on a range of test networks .",
    "however , it is also worth noting that methods based on modularity density present some limitations in special cases .    to show this",
    ", we analyze regular ring lattice networks .",
    "these are graphs composed by a ring of @xmath1 nodes , each connected to a number of neighbours in each direction .",
    "we consider networks of  100 , 500 and  1000 nodes , for which the number of neighbours of each node varies from  8 to  40 , 200 and  500 , respectively .",
    "the results , depicted in  , illustrate how the theoretical prediction and the simulated results differ on almost all cases considered .",
    "in fact , with one exception , there is always a set of communities with a higher value of modularity density than the one corresponding to the trivial partition .",
    "trees are another special case where modularity density exhibits some shortcomings . to see this , consider a tree with @xmath1 nodes . if all the nodes are put in a single community , the modularity density is given by : @xmath151 if instead one divides the nodes between two different communities of equal size and equal number of internal links , it is @xmath152 where we used the fact that , for a tree , there can only be one link between the two communities if they do not consist of disconnected components .",
    "it follows that , for @xmath153 , @xmath154 , that is , for trees with more than 6  nodes , a partition in two equally sized communities always has a larger modularity density than the trivial partition .",
    "more generally , partitions with a larger number of equally sized communities tend to have a larger score , as can be seen in  .",
    "communities are a fundamental structure that is often present in real - world complex networks .",
    "thus , the ability to accurately and efficiently detect them is of great relevance to the analysis of complex data sets . despite their success , traditional methods based on modularity",
    "have been shown to suffer from limitations .",
    "we have presented a detailed analysis of the properties of modularity density , an alternative quality function for community detection , showing that it does not suffer from the drawbacks that affect traditional modularity . in particular",
    ", modularity density does not depend separately on the size of the network or the number of edges , but only on the combination of these two properties in terms of the density of links within the communities . as a consequence",
    ", it allows a direct quantitative comparison of the community structure across networks of different sizes and number of edges . at the light of these considerations ,",
    "we have introduced a new community detection algorithm based on modularity density maximization . investigating its performance on erds - rnyi and heterogeneous random networks",
    ", we showed that it correctly identifies them as containing no actual communities .",
    "moreover , our algorithm outperforms the other existing modularity - density - based method on every benchmark network that we tested .",
    "the high level of accuracy it reaches , its low computational complexity , and the ability to properly identify networks with no ground - truth communities make it a powerful tool to investigate complex systems and extract meaningful information from the network representation of large data sets , giving it a broad range of application throughout the physical sciences . at the same time",
    ", we have also identified some limitations of modularity density that were not previously known .",
    "more specifically , we found that the theoretical maximum of modularity density for ring lattices and pure random trees does not correspond to the trivial partition , but rather to partitions with more than one community .",
    "we find this particularly intriguing , since erds - rnyi graphs are locally tree - like .",
    "thus , these results seem to suggest a certain relevance of long - distance links for a correct behaviour of modularity density .",
    "since most real - world networks are not pure trees or ring lattices , and indeed do feature shortcut links , we believe these limitations do not affect the suitability of modularity density and methods based on it in the analysis and modelling of complex systems .",
    "we will further investigate these limitations in future work .",
    "additionally , we will also extend this method to other types of networks , such as bipartite graphs , which require a redefinition of the concept of community itself .",
    "an implementation of our algorithm is freely available for download at www.fedebotta.com .",
    "fb acknowledges the support of uk epsrc ep / e501311/1 .",
    "cidg acknowledges support by eins , network of excellence in internet science , via the european commission s fp7 under communications networks , content and technologies , grant no .",
    "here , we provide a detailed description of the implementation of the algorithm presented above . to describe how the different steps are carried out ,",
    "first we introduce some notation .",
    "let @xmath155 be the size of the current partition .",
    "then , let @xmath156 be the partition adjacency matrix of the network , i.e. , the @xmath157 matrix whose elements @xmath42 are the number of links between community @xmath12 and community @xmath43 .",
    "also , let @xmath158 be the community spectra matrix , i.e. , the @xmath159 matrix whose elements @xmath160 are the number of links between node @xmath6 and nodes in community @xmath12 .",
    "finally , let @xmath161 be the @xmath162-dimensional community size vector , whose elements are the sizes of the communities .",
    "note that our implementation uses three tolerance parameters :    1 .",
    "power method tolerance @xmath163 .",
    "this parameter determines the tolerance for the floating - point comparisons in the power method .",
    "2 .   bisection tolerance @xmath164 .",
    "since a bisection with the leading eigenvector of the classical modularity matrix does not guarantee an increase in modularity density , we introduce a tolerance @xmath164 . after each bisection",
    ", we check the difference between the new and old values of modularity density .",
    "a bisection is accepted if modularity density increases or if it decreases by an amount smaller than @xmath164 ( more details are given in  [ sec : bisection ] ) .",
    "3 .   acceptance tolerance @xmath79 . this parameter defines the size of the tolerance range when finding the moves that maximally increase modularity density during tuning and agglomeration steps .",
    "the first step in the algorithm attempts to bisect a community ( see also  a ) , which can be either the whole network or a previously determined community , using the traditional modularity matrix . to do so",
    ", we use the spectral method , which we briefly review here .",
    "the modularity matrix @xmath165 is defined as @xmath166 and the expression for the modularity of a given partition is @xmath167 since we are only considering a potential bisection , @xmath7 can only assume two values .",
    "thus , a partition can be represented by a vector @xmath168 whose entries @xmath169 are @xmath170 and @xmath171 if node @xmath6 is assigned to the first or the second community resulting from the split , respectively .",
    "then , substituting the expression @xmath172 in  , it is @xmath173 the vector @xmath168 can be expressed in terms of the normalized eigenvectors of @xmath165 as @xmath174 where the @xmath175 are linear combination coefficients , and @xmath176 is the @xmath177 eigenvector of the modularity matrix , corresponding to the eigenvalue @xmath178 . substituting in  , we obtain @xmath179 if we label the eigenvalues so that @xmath180 , this expression is maximized when @xmath168 is parallel to the leading eigenvector @xmath181 .",
    "however , @xmath168 is a vector whose entries can only be 1 .",
    "thus , we can only choose its elements to make it as parallel to @xmath181 as possible .",
    "one way of achieving this is to set @xmath182 if @xmath183 and @xmath184 if @xmath185 .",
    "then , the bisection consists in finding the leading eigenvector of @xmath165 and , if the corresponding eigenvalue is positive , dividing the nodes according to this rule .",
    "several metohds can be used to diagonalize @xmath165 .",
    "since we only need to find a single eigenvector , and this step only provides a starting guess , we choose to use the power method , which offers a good tradeoff between speed and accuracy .",
    "further consideration must be given to the fact that we are performing a bisection based on the modularity matrix , whereas our aim is to maximize modularity density .",
    "the potential problem is that a bisection based on modularity might not result in a larger value of modularity density . to avoid this",
    ", we introduce a tolerance parameter @xmath164 , whose role is to determine the largest possible decrease in modularity density that we want to accept when bisecting . in other words , if after the bisection the modularity density of the new partition has decreased by a value larger than @xmath164 , we do not accept the split , and keep the original partition .",
    "we consider only one exception to this rule , namely the first iteration of the bisection . at the start of the algorithm",
    ", all nodes are placed together and we try to bisect the whole network . at this point , we accept any bisection in order to allow at least a whole iteration of the whole algorithm . indeed ,",
    "if we did nt accept that , both the tuning and agglomeration steps could not be executed , thus leaving the network not partitioned .",
    "note that not partitioning the network could be the correct answer , but we want to make sure that we have considered other partitions as well at least once .",
    "if not partitioning the network is the best answer , this will be found by the agglomeration step , that will merge all the communities together .     moving from community  @xmath12 to community  @xmath186.,scaledwidth=75.0% ]",
    "finally , we note that the previous expression for @xmath165 is correct only when considering the whole network . when trying to partition a single community @xmath12 which does not contain all the nodes , we need to construct an @xmath187 sub - modularity matrix @xmath188 whose elements are @xmath189 where @xmath190 is the degree of node @xmath6 within the community @xmath12 . using this matrix",
    ", we then perform the bisection step as described above .    in algorithm  [ alg : bisection ]",
    ", we present a detailed description of the implementation of this step . for each community",
    ", the computation of the leading eigenvalue through the power method requires @xmath191 steps .",
    "thus , the worst - case complexity of the the bisection step is @xmath192 .    flag first bisection @xmath193 1 @xmath194 @xmath195 1 current number of nodes @xmath196 $ ] current nodes labels @xmath193 find nodes in @xmath197 $ ] @xmath198 construct @xmath165 leading @xmath199 , leading @xmath200 @xmath193 power method(b ) flag bisection @xmath201 bisection(@xmath200 , current nodes labels , current number of nodes ) @xmath202 cancel bisection flag@xmath203\\gets1 $ ] flag fine tuning @xmath193 0 fine tuning(current number of nodes , current nodes labels ) flag first bisection @xmath193 0 flag@xmath203 \\gets 1 $ ] flag fine tuning @xmath193 1 @xmath204      the crucial part of both the fine tuning and final tuning steps is that they try to move individual nodes to different communities ( see also  b and  c ) .",
    "thus , we need to consider what happens to the current partition and how @xmath156 , @xmath158 and @xmath161 change when we move a node @xmath6 from community @xmath12 to community @xmath43 . provides an intuitive scheme to illustrate the changes that follow from such a move . in general , both the number of internal and external links of @xmath12 will change , since node @xmath6 is leaving this community . however , to correctly update the modularity density , we also need to keep track of the changes in all the specific numbers of links between @xmath12 and every other community in the current partition .",
    "similarly , we need to ensure that the internal and external links of @xmath43 are updated correctly . finally , the sizes of the two communities changes as well as a consequence of the move .",
    "below , we describe how to efficiently perform these updates .",
    "the partition adjacency matrix @xmath156 keeps track of the number of edges between each pair of communities , as well as the internal number of edges of each community in its diagonal elements .",
    "looking at  , one can see that the following quantities change :    * the number of internal links of the community @xmath12 that node @xmath6 is leaving decreases by the internal degree of node @xmath6 , which is the number of links it has to other nodes in @xmath12 .",
    "* the number of internal links of the community @xmath186 that node @xmath6 is moving to increases by the number of links node @xmath6 has with other nodes in @xmath186 . * the number of links between the old and the new community of node @xmath6 increases by the number of links between @xmath6 and its old community , and decreases by the number of links between @xmath6 and its new community . * the number of links between the old community @xmath12 and all the other communities @xmath205 decreases by the number of links between @xmath6 and nodes in @xmath206 . * the number of links between the new community @xmath186 and all the other communities @xmath205 increases by the number of links between @xmath6 and nodes in @xmath206 .    in formulae : @xmath207 where we dropped the repeated index for the diagonal elements of @xmath156 to keep the notation consistent .",
    "the rows of the matrix @xmath158 are the community spectra of the nodes , containing the numbers of links that each node forms with nodes in all the individual communities in the current partition . when a node @xmath6 changes community , its community spectrum does not change .",
    "however , every neighbour of @xmath6 will experience a change in the number of connections it has to nodes in the old and new communities of @xmath6 .",
    "in particular , in moving node @xmath6 from @xmath12 to @xmath186 , the following changes happen :    * since @xmath6 is no longer in community @xmath12 , all the nodes connected to @xmath6 have one link less to @xmath12 . * since @xmath6 is now in community @xmath186 , all the nodes connected to @xmath6 have one connection more to @xmath186 .    in formulae",
    ": @xmath208",
    "the updates to this vector are straightforward : @xmath209      flag increase @xmath193 1 flag increase @xmath193 0 @xmath210\\gets$ ] change in @xmath45 if @xmath211 changes community @xmath212 maximum increase in @xmath45 find all nodes within @xmath79 from @xmath213 node to move @xmath193 pick randomly between nodes with @xmath214 flag node@xmath215node to move@xmath216\\gets$ ] 1 fine tuning tree@xmath217\\gets$ ] fine tuning tree@xmath218+\\max \\delta q_{ds}$ ] @xmath219 fine tuning tree@xmath220 find all steps within @xmath79 of @xmath213 step in fine tuning tree @xmath193 pick randomly step with @xmath214 perform all updates in fine tuning tree until the chosen step flag increase @xmath201    since @xmath45 is defined as a sum over all current communities , we consider the terms in its expression   separately , and show how they change when node @xmath6 moves from community @xmath12 to community @xmath186 .",
    "we first look at what happens to the contributions of a community @xmath221 different from @xmath12 and @xmath186 . in this case",
    ", the only changes happen for two terms in the internal sum : @xmath222 then , we consider the contribution of community @xmath12 : @xmath223 finally , we consider the contribution of community @xmath186 : @xmath224    flag increase @xmath193 1 flag increase @xmath193 0 @xmath210[\\bar{c}]\\gets$ ] change in @xmath45 if @xmath211 goes to @xmath225 @xmath212 maximum increase in @xmath45 find all nodes within @xmath79 from @xmath213 node to move @xmath193 pick randomly between nodes with @xmath214 flag node@xmath215node to move@xmath216\\gets$ ] 1 final tuning tree@xmath217\\gets$ ] final tuning tree@xmath218+\\max \\delta q_{ds}$ ] @xmath219 final tuning tree@xmath220 find all steps within @xmath79 of @xmath213 step in final tuning tree @xmath193 pick randomly step with @xmath214 perform all updates in final tuning tree until the chosen step flag increase @xmath201    in algorithm  [ alg : fine ] and algorithm  [ alg : final ] , we present a detailed description of the implementation of the tuning steps . the complexity of computing the potential change in modularity density is @xmath226 , since we have to consider all the communities to update the split penalty term",
    ". for the fine tuning , this process is repeated @xmath1 times per node , yielding a complexity of @xmath227 . in the final tuning , instead , all communities are considered as potential targets , introducing an extra factor of @xmath162 in the complexity , which becomes @xmath228 .",
    "note that these are worst case scenarios , since we typically do not have to consider all communities for the updates , because each node is only connected to a subset of them .",
    "the agglomeration step attempts the merger of pairs of communities ( see also  d ) .",
    "if a merger is carried out , a community is obtained whose size is the sum of the sizes of the original ones .",
    "a delicate point is deciding the label of the new community . in our implementation",
    ", we always keep the smaller of the two labels .",
    "so , for instance ,",
    "if we merge community  1 with community  4 , the resulting community will be labelled  1 and community  4 will disappear .",
    "we then need to reassign the links of every node in the network to the new community , and also zero any link to the old community that disappeared .",
    "below , we describe how to efficiently perform the required updates , assuming a merger between community  @xmath12 and community  @xmath43 in which the label of the resulting community is  @xmath12 .",
    "the following changes happen to the partition adjacency matrix :    * the number of internal links of the merged community is the sum of the internal links of the two original ones plus the number of links between the two . * all the links of community  @xmath43 vanish , since it has been merged with community @xmath12 .",
    "* the number of links between the new community and any other community  @xmath221 is the sum of the number of links between each of the two original communities and  @xmath221 .    in formulae :",
    "flag increase @xmath193 1 flag increase @xmath193 0 @xmath230[\\hat{c}]\\gets$ ] change in @xmath45 if we merge @xmath225 and @xmath231 @xmath212 maximum increase in @xmath45 find pairs of communities within @xmath79 from @xmath213 communities to merge @xmath193 pick between those with @xmath214 flag community@xmath232\\gets$ ] 1 agglomeration tree@xmath217\\gets$ ] agglomeration tree@xmath218+\\max \\delta q_{ds}$ ] @xmath219 agglomeration tree@xmath220 step in agglomeration tree @xmath193 picks step with @xmath214 and smallest number of communities perform all updates in agglomeration tree until the chosen step flag increase @xmath201    the number of connections between every node @xmath6 and the merged community is the sum of the number of links between @xmath6 and each of the two original communities , and no node is connected to community  @xmath186 since it does nt exist any more : @xmath233      the changes to the community size vector are once again straightforward : @xmath234      as before , we consider the terms in the definition of modularity density separately , showing how they change for the merger considered . for the contribution of communities",
    "@xmath221 other than  @xmath12 and  @xmath186 , the only changes happen in two terms in the internal sum : @xmath235    @xmath236 flag repetition @xmath201 flag repetition @xmath237 @xmath238 @xmath239 @xmath236 flag repetition @xmath193 1 flag repetition @xmath193 0    then , we consider the contribution of community  @xmath12 : @xmath240    finally , the contribution of community  @xmath186 entirely vanishes",
    ".    in algorithm  [ alg : agglom ] , we present a detailed description of the implementation of the agglomeration step .",
    "the computational complexity is @xmath241 .",
    "analogously to the tuning steps , this is the worst case scenario . in a typical situation ,",
    "a community is only connected to a few others , and thus one does not need to update all the terms in the partition adjacency matrix .      finally , in algorithm  [ alg : commdet ] we provide a detailed description of how the steps presented above are linked together in our community detection algorithm .",
    "the overall complexity of the algorithm is dominated by the final tuning step , which is the most computationally expensive , with a complexity @xmath228 . along the lines of  @xcite",
    ", we consider @xmath162 a constant , and thus the worst - case complexity reduces to @xmath85 .",
    "to minimize running times , we take advantage of the independence of the incremental computing steps .",
    "both the fine tuning and final tuning try to move nodes from one community to a different one .",
    "the calculations of the potential change in modularity density are independent of each other and thus can be performed in parallel , rather than serially .",
    "this task is fairly straightforward , and our implementation exploits the widely used c library _",
    "open  mp _ to allow an efficient parallelization using multiple threads on each computing node during the tuning and agglomeration steps .",
    "99 albert r and barabsi a - l , _ statistical mechanics of complex networks _ , 2002 _ rev .",
    "phys . _ * 74 * 47 newman m e j , _ structure and function of complex networks _ , 2003 _ siam rev .",
    "_ * 45 * 167 boccaletti s , latora v , moreno y , chavez m and hwang d - u , _ complex networks : structure and dynamics _ , 2006 _ phys .  rep . _ * 424 * 175 wasserman s and faust k , _ social network analysis methods and applications _ 1994 ( cambridge : cambridge university press ) scott j _ social network analysis : a handbook _ , 2000 ( london : sage )",
    "newman m e j _ the structure of scientific collaboration networks _ , 2001 _ proc",
    ".  natl .",
    "usa _ * 98 * 404 lazer d _ et",
    "al . _ , computational social science , 2009 _ science _ * 323 * 721 vespignani a , _ predicting the behaviour of techno - social systems _ , 2009 _ science _ * 325 * 425 williams r j and martinez n d , _ simple rules yield complex food webs _ , 2000 _ nature _ * 404 * 180 jeong h , tombor b , albert r , oltvai z n and barabsi a - l , _ the large - scale organization of metabolic networks _ , 2000 _ nature _ * 407 * 651 trevio s iii , sun y , cooper t f and bassler k e , _ robust detection of hierarchical communities from escherichia coli gene expression data _ , 2012 _ plos comp",
    "_ * 8 * e1002391 johnson s , domnguez - garca v , donetti l and muoz m a , _ trophic coherence determines food - web stability _ , 2014 _ proc .",
    "usa _ * 111 * 17923 albert r , jeong h and barabsi a - l , _ internet : diameter of the world - wide web",
    "_ , 1999 _ nature _ * 401 * 130 saramki j and moro e , _ from seconds to months : an overview of multi - scale dynamics of mobile telephone calls _ , 2015 _ eur .  phys .",
    "j. b _ * 88 * 164 boccaletti s , bianconi g , criado r , del genio c i , gmez - gardees j , romance m , sendia - nadal i , wang z and zanin m , _ the structure and dynamics of multilayer networks _",
    ", 2014 _ phys .",
    "_ * 544 * 1 kivel m , arenas a , barthlemy m , gleeson j p , moreno y and porter m , _ multilayer networks _ , 2014 _ j.  compl .",
    "netw . _ * 2 * 203 milgram s , _ the small - world problem _ , 1967 _ psychol .  today",
    "_ * 1 * 60 de sola pool i and kochen m , _ contacts and influence _ , 1978 _ social networks _ * 1 * 5 watts d and strogatz s h , _ collective dynamics of small - world networks _ , 1998 _ nature _ * 393",
    "* 440 amaral l a n , scala a , barthlemy m and stanley h e , _ classes of small - world networks _ , 2000 _ proc .",
    "usa _ * 97 * 1114911152 barabsi",
    "a - l and albert r , _ emergence of scaling in random networks _ , 1999",
    "_ science _ * 286 * 509 del genio c i , gross t and bassler k e , _ all scale - free networks are sparse _ , 2011 _ phys .",
    "lett . _ * 107 * 178701 newman m e j , strogatz s h and watts d j , _ random graphs with arbitrary degree distributions and their applications _",
    ", 2001 _ phys .  rev .",
    "e _ * 64 * 026118 del genio c i and house t , _ endemic infections are always possible on regular networks _ , 2013 _ phys",
    ".  rev .",
    "e _ * 88 * 040801(r ) johnson s , torres j j , marro j and muoz m a , _ entropic origin of disassortativity in complex networks _ , 2010 _ phys .",
    "lett . _ * 104 * 108702 williams o and del genio c i , _ degree correlations in directed scale - free networks _ , 2014 _ plos one _ * 9 * e110121 newman m e j , _ assortative mixing in networks _ , 2002 _ phys",
    ".  rev .",
    "lett . _ * 89 * 208701 del  genio c i , romance m , criado r and boccaletti s , _ synchronization in dynamical networks with unconstrained structure switching _ , 2015 _ phys .  rev .",
    "e _ * 92 * 062819 girvan m and newman m e j , _ community structure in social and biological networks _ , 2002 _ proc .",
    "usa _ * 99 * 7821 pimm s l , _ structure of food webs _ , 1979 _ theor .",
    "* 16 * 144 garnett g p , hughes j p , anderson r m , stoner b p , aral s o , whittington w l , handsfield h h and holmes k k , _ sexual mixing patterns of patients attending sexually transmitted diseases clinics _",
    ", 1996 _ sex .",
    "_ * 23 * 248 flake g w , lawrence s , giles c l and coetzee f m , _ self - organization and identification of web communities _ , 2002 _ computer _ * 32 * 66 eriksen k a , simonsen i , maslov s and sneppen k , _ modularity and extreme edges of the internet _ , 2003 _ phys .",
    "_ * 90 * 148701 krause a e , frank k a , mason d m , ulanowicz r e and taylor w w , _ compartments revealed in food - web structure _ , 2003 _ nature _ * 426 * 282 lusseau d and newman m e j , _ identifying the role that animals play in their social networks _ , 2004 _",
    "b bio . _ * 271 * s477 guimer r and amaral l a n , _ functional cartography of complex metabolic networks _ , 2005 _ nature _ * 433 * 895 palla g , dernyi i , farkas i. and vicsek t , _ uncovering the overlapping community structure of complex networks in nature and society _ , 2005 _ nature _ * 435 * 814 arenas a , daz - guilera a and prez - vicente c j , _ synchronization reveals topological scales in complex networks _",
    ", 2006 _ phys .  rev .",
    "lett . _ * 96 * 114102 restrepo j g , ott e and hunt b r , _ characterizing the dynamical importance of network nodes and links _ , 2006 _ phys .",
    "lett . _ * 97 * 094102 huss m and holme p , _ currency and commodity metabolites : their identification and relation to the modularity of metabolic networks _ , 2007 _ iet syst .",
    "* 1 * 280 blondel v d , guillaume j l , lambiotte r. and lefebvre e , _ fast unfolding of communities in large networks _ , 2008 _ j. stat",
    ".  mech .  - theory e. _",
    "p10008 del genio c i and gross t , _ emergent bipartiteness in a society of knights and knaves _ , 2011 _ new j. phys .",
    "_ * 12 * 103038 danon l , daz - guilera a , duch j and arenas a , _ comparing community structure identification _ , 2005 _ j. stat .",
    "mech  - theory e. _",
    "p09008 lancichinetti a , fortunato s and radicchi f , _ benchmark graphs for testing community detection algorithms _",
    ", 2008 _ phys .",
    "e _ * 78 * 046110 fortunato s , _ community structure in graphs _ , 2010 _ phys .",
    "_ * 486 * 75 mucha p j , richardson t , macon k , porter m a and onnela j p , _ community structure in time - dependent , multiscale , and multiplex networks _ , 2010 _ science _ * 328 * 876 steinhaeuser k and chawla n v , _ identifying and evaluating community structure in complex networks _",
    ", 2010 _ pattern recognit .",
    "lett . _ * 31 * 413 decelle a , krzakala f , moore c and zdeborov l , _ inference and phase transitions in the detection of modules in sparse networks _ , 2011 _ phys .",
    "lett . _ * 107 *",
    "065701 peixoto t p , _ parsimonious module inference in large networks _",
    ", 2013 _ phys .",
    "lett . _ * 110 * 148701 trevio s iii , nyberg a , del genio c i and bassler k e , _ fast and accurate determination of modularity and its effect size _ , 2015 _ j. stat .",
    ".  - theory e. _ p02003 newman m e j and peixoto t p , _ generalized communities in networks _ , 2015 _ phys .",
    "lett . _ * 115 * , 0888701 newman m e j , _ modularity and community structure in networks _ , 2006 _ proc .",
    "usa _ * 103 *",
    "8577 chen m , nguyen t and szymanski b k , _ a new metric for quality of network community structure _ , 2013 _ ase human j. _ * 2 * 226 chen m , kuzmin k and szymanski b k , _ community detection via maximization of modularity and its variants _ , 2014 _ ieee trans .  comp .",
    "syst . _ * 1 * 46 fortunato s and barthlemy m , _ resolution limit in community detection _ , 2006 _ proc .",
    "usa _ * 104 * 36 arenas a , fernandez a and gomez s , _ analysis of the structure of complex networks at different resolution levels _ , 2008 _ new j.  phys . _ * 10 * 053039 lancichinetti a and fortunato s , _ limits of modularity maximization in community detection _ , 2011 _ phys .",
    "e _ * 84 * 066122 traag v a , van dooren p and nesterov y , _ narrow scope for resolution - limit - free community detection _ , 2011 _ phys .",
    "e _ * 84 * 016114 kernighan b and lin s , _ an efficient heuristic procedure for partitioning graphs _",
    ", 1970 _ bell syst .  tech .",
    "j. _ * 49 * 291 del  genio c i , kim h , toroczkai z and bassler k e , _ efficient and exact sampling of simple graphs with given arbitrary degree sequence _ , 2010 _ plos one _ * 5 * e10012 zachary w w , _ an information flow model for conflict and fission in small groups _ , 1977 _ j.  anthropol .",
    "res . _ * 33 * 452"
  ],
  "abstract_text": [
    "<S> many real - world complex networks exhibit a community structure , in which the modules correspond to actual functional units . </S>",
    "<S> identifying these communities is a key challenge for scientists . </S>",
    "<S> a common approach is to search for the network partition that maximizes a quality function . here </S>",
    "<S> , we present a detailed analysis of a recently proposed function , namely modularity density . we show that it does not incur in the drawbacks suffered by traditional modularity , and that it can identify networks without ground - truth community structure , deriving its analytical dependence on link density in generic random graphs . </S>",
    "<S> in addition , we show that modularity density allows an easy comparison between networks of different sizes , and we also present some limitations that methods based on modularity density may suffer from . </S>",
    "<S> finally , we introduce an efficient , quadratic community detection algorithm based on modularity density maximization , validating its accuracy against theoretical predictions and on a set of benchmark networks .    </S>",
    "<S> _ keywords _ : complex networks , community detection , network algorithms , modularity density </S>"
  ]
}
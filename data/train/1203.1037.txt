{
  "article_text": [
    "the last two decades have seen remarkable advances in the numerical solution of the compressible navier - stokes ( ns ) equations , which lies at the heart of computational fluid dynamics ( cfd ) and computational aeroacoustics , but also as numerous applications in astrophysics . in particular ,",
    "important progress has been made in approaches based on the finite volume method ( fvm ) , both using structured as well as unstructured grids ( see * ? ? ?",
    "* for a review ) .",
    "other popular techniques include finite element methods ( fem ) , discontinuous galerkin schemes , and even mesh - free approaches such as smoothed particle hydrodynamics @xcite .",
    "when unstructured grids have been employed , they were most most often in the form of triangular grids in two dimensions , or tetrahedral grids in three dimensions . indeed , finite - volume implementations of the two - dimensional ns equations on triangular meshes date back to work by @xcite , @xcite and @xcite .",
    "much recent work has also focused on developing optimum mesh - generating algorithms that require minimal human input and yield efficient representations of geometrically complex simulation domains .",
    "however , little work has been done on dynamically evolving meshes , such as those we shall consider here .    because unstructured meshes have been demonstrated to be accurate and efficient for both steady - state and transient compressible inviscid flows @xcite ,",
    "they are now used regularly in engineering applications . moreover ,",
    "the geometric flexibility of unstructured grids allows the use of simple coordinate systems ( in the laboratory frame ) without the need to work with complex coordinate transformations to describe curved surfaces ( e.g. see * ? ? ?",
    "indeed , hard boundaries can be tailored by carefully positioning a few cell faces or mesh generating points along the surface , and creating the triangulation through delaunay tessellation . as a result ,",
    "most ns applications on unstructured meshes for industrial design make use of triangular grids , typically based on the finite element method , although finite volume schemes have also been considered .",
    "detailed reviews and stability analysis of explicit fvm for the ns equations on cartesian and delaunay meshes can be found , e.g , in the doctoral theses of @xcite and @xcite .    in this work",
    ", we present a numerical scheme that solves the ns equations on a general unstructured moving mesh that is constructed as the voronoi tessellation of a distributed set of points that move with the local velocity field . despite being ,",
    "in the general sense , an  unstructured \" mesh , the voronoi diagram has a mathematically well - defined structure that makes the resulting schemes comparatively simple and robust ( e.g. * ? ? ?",
    "in fact , this type of mesh is commonly adapted for the construction of finite volume methods for elliptic problems and has been in use in numerical studies of solid state physics @xcite such as simulations of fractures and cracks @xcite , as well as numerical simulations of oil reservoirs .",
    "some studies @xcite have also examined how reconstructions designed for unstructured triangulations can be extended to _",
    "static _ voronoi meshes .",
    "however , voronoi meshes have infrequently been applied to hyperbolic conservation laws such as the euler equations , let alone moving voronoi meshes . to our knowledge , the earliest attempts to use dynamically adaptive voronoi tessellations for the ns equations data back to @xcite , although for very simplified , incompressible , two - dimensional problems . around the same time , @xcite developed the general topology godunov method .",
    "this method  based on a mesh that is not quite a voronoi tessellation , but similar in spirit  was introduced as an alternative to the lagrangian particle methods ( see , for example * ? ? ?",
    "* ) which gained increasing popularity in computational plasma physics and astrophysics in the following years .",
    "recently , a complete three - dimensional implementation of the euler equations on a moving voronoi mesh has been described and implemented in the arepo  code by @xcite ( see also * ? ? ?",
    "the work we present here is an extension of the arepo  scheme to the ns equations , which we have realized in this code as an optional module .",
    "arepo  can be classified as an arbitrary lagrangian / eulerian ( ale ; * ? ? ?",
    "* ) code , in the sense that the mesh can be moved with the velocity of the flow so that quasi - lagrangian behavior results and the mass flux between cells is minimized ( although it is not strictly zero , in general ) . on the other hand , the mesh may also be kept stationary if desired , effectively yielding an eulerian formulation .",
    "we note that because the mesh - generating points may also be arranged on a regular lattice and arbitrarily refined with time , the arepo  code naturally includes ordinary eulerian techniques on a cartesian grid and adaptive mesh refinement ( amr ) algorithms as special cases .    besides the work of @xcite , the new voronoi - ale method of @xcite , which includes viscous terms , is the approach most closely related to that presented here , although it is restricted to the incompressible ns equations .",
    "also , @xcite have applied a voronoi - based finite volume scheme to the two - dimensional inviscid shallow water equations , in terms of an algorithm they referred to as the ` natural volume ' method .    although primarily designed for astrophysical fluid dynamics where self - gravity is an important ingredient ( see for example * ? ? ?",
    "* ) , the moving voronoi mesh approach of arepo  offers a number of features than can be advantageous for more general problems in fluid dynamics .",
    "first , the moving mesh geometry is adaptive in a continuous manner and can naturally respond to the local flow , increasing the resolution automatically and smoothly in regions where the flow converges .",
    "( in contrast , amr codes refine the grid discontinuously in time , which can introduce errors that are potentially difficult to assess . )",
    "importantly , this lagrangian character of the dynamics yields reduced advection errors and a very low numerical diffusivity of the scheme .",
    "second , the moving mesh formulation retains the galilean - invariance of the fluid dynamics at the discretized level of the equations @xcite . in other words , the truncation error of the scheme",
    "does not depend on the bulk velocity of the system , unlike for traditional eulerian and amr codes , and the quality of the solution does not degrade when high - speed flows are present . while conventional fixed - mesh eulerian codes may , in principle , be able to suppress additional errors from large bulk velocities by using a sufficiently fine mesh",
    "( see * ? ? ?",
    "* for a study of galilean invariance in grid codes ) , this strategy can become computationally prohibitive , and it also depends on the magnitude of the bulk velocity involved .",
    "it is therefore desirable to construct efficient methods that yield manifestly galilean - invariant solutions ( modulo floating point round - off errors ) .",
    "third , the moving mesh approach allows much larger timesteps in the case of rapidly moving flows , because it can avoid the @xmath0 stability constraint ( where @xmath1 is the cell size and @xmath2 the bulk velocity ) that augments the courant condition in the eulerian case .    from an astrophysical standpoint ,",
    "compressible viscous flow remains a viable approximation to more complex or computationally expensive momentum transport mechanisms such as magneto - hydrodynamic turbulence or anisotropic plasma viscosity .",
    "global simulations of cold accretion disks around protostellar objects ( e.g. see * ? ? ?",
    "* ) still include shear viscosity coefficients in the form of a shakura - sunyaev eddy viscosity coefficient @xcite .    an even clearer case for the need of a viscous treatement of astrophysical gasdynamics is given by the interacluster medium of hot galaxy clusters .",
    "here the spitzer - braginskii viscosity @xcite becomes quite significant , certainly in the unmagnetized case , which has been studied both using grid @xcite and sph @xcite codes . in this regime ,",
    "the commonly adopted assumption of inviscid behaviour with an effectively infinite reynolds number is in principle incorrect and should in future simulation work be replaced with a full accounting of the correct physical viscosity .",
    "additionally , physical viscosity can be implemented on turbulent cascades with resolved inertial range ( see * ? ? ? * for an application of our viscosity approach ) in order to prescribe a well - specified reynolds number and a physically correct shape for the dissipation range , unaffected by the details of the numerical viscosity of the hydro scheme , which would otherwise induce the dissipation of turbulence on the grid scale .",
    "this can in particular inform the ongoing debate whether artificial viscosity effects in sph can affect the turbulent cascade above the formal resolution length @xcite .",
    "this paper is organized as follows . in section  2 ,",
    "we briefly review the basic ns equations we want to solve , and the role and meaning of the different viscosity coefficients . in section  3 ,",
    "we then introduce in detail our discretization and time integration schemes , emphasizing a description of the calculation of suitable velocity gradient estimates at face centers , and of second - order derivatives of the velocity field .",
    "we then move on to discuss the performance of our new approach for a number of test problems in section  3 .",
    "finally , we summarize our results and present our conclusions in section  4 .",
    "the compact form of the euler equations , when written in terms of the vector of conserved quantities @xmath3 @xcite is @xmath4 with @xmath5 and where @xmath6 is the mass - momentum - energy flux density tensor ( @xmath7 ) .",
    "the operator @xmath8 in eq .",
    "( [ eq : euler ] ) is a tensor divergence , i.e.  in tensor notation we have @xmath9 .",
    "the momentum components in the conservative form of equation  ( [ eq : euler ] ) represent a transfer of momentum , owing merely to the mechanical transport of different particles of fluid from place to place and to the pressure forces acting on the fluid ( e.g. * ? ? ?",
    "* ) . in eq .",
    "( [ eq : euler ] ) we have made the advective character of the fluxes explicit by denoting them @xmath10 .",
    "the internal friction present in any real fluid causes an irreversible transfer of momentum from points where the velocity is large to those where it is small .",
    "the momentum flux density tensor is thus altered from its ideal from in eq .",
    "( [ eq : ad_flux ] ) , where it only contains an inertial and an isotropic component ( described by a symmetric stress tensor due to the local pressure @xmath11 ) , to a modified expression that accounts for an irreversible viscous transfer of momentum @xmath12 where @xmath13 is the total stress tensor and @xmath14 is called the viscous stress tensor .",
    "the latter includes the effects of isotropic compression and expansion forces ( `` bulk viscosity '' ) as well as shearing forces ( `` shear viscosity '' ) .    similarly , the energy component of eq .",
    "( [ eq : ad_flux ] ) is affected by the inclusion of the viscous stress tensor .",
    "because of the dissipative nature of viscosity , a conservative formulation of the ns equations must include a contribution of @xmath14 to the energy budget , i.e.  the work per unit area per unit time , @xmath15 needs to explicitly account for the work done by viscous forces .",
    "a general parametrization of the viscous stress tensor @xmath14 is given by @xmath16 -\\frac{2}{3}\\mathbf{i}\\left(\\nabla\\cdot\\mathbf{v}\\right)\\right\\}+\\zeta\\mathbf{i}\\left(\\nabla\\cdot\\mathbf{v}\\right).\\ ] ] often , the viscous stress tensor is decomposed into a traceless part and a diagonal part , such that the first corresponds to constant - volume shear deformations ( often called the _ rate - of - deformation _ tensor ) and the second to isotropic expansions / contractions .",
    "accordingly , @xmath17 in eq .",
    "( [ eq : viscous_tensora ] ) is commonly referred to as the _ shear viscosity _ and @xmath18 as the _ bulk viscosity_. the degree of resistance to uniform contractions / expansions is intrinsic to the molecular / chemical properties of the fluid in question , and can be understood through kinetic theory . in this picture , bulk viscosity arises because kinetic energy of molecules is transferred to internal degrees of freedom .",
    "ideal monoatomic gases ( modeled as hard spheres interacting only through elastic collisions ) have no internal degrees of freedom , and are thus expected to have vanishing bulk viscosity . at one time",
    "stokes suggested that this might in general be true ( the so - called _ stokes hypothesis _ of @xmath19 ) but later wrote that he never put much faith in this relationship @xcite .",
    "indeed , when deviations from the ideal gas equation of state are included in a hard - sphere , chapman - enskog approach to kinetic theory , a non - zero value for the bulk viscosity is obtained . in an extension of the hard sphere fluid model ,",
    "the longuet - higgins - pople relation @xmath20 results @xcite , motivating the hypothesis that both viscosities are always related in a linear fashion ( but see * ? ? ?",
    "* ) . in general",
    ", we consider @xmath17 and @xmath18 as essentially arbitrary input properties to our simulations , which may also depend on local physical parameters such as temperature or density . although the effects of physical bulk viscosity are not harder to implement numerically than those of shear viscosity , the physical origin of bulk viscosity is often less clear . also , we note that many numerical solvers for viscous flow focus on the incompressible regime ( @xmath21 ) , where the existence of a physical bulk viscosity is in any case not of importance . however , for compressible flow , the value of @xmath18 may still become important in certain situations .",
    "when the effects of viscosity are included , the formerly homogeneous differential equations of the euler form ( eq .  [ eq : euler ] ) become @xmath22 where @xmath23 is a viscous source term given by @xmath24 the solution of the euler equations with source terms is often handled by operator - splitting methods ( e.g. * ? ? ?",
    "* ; * ? ? ?",
    "that is , the numerical scheme alternates between an advective step that solves the homogeneous part , and a source - term step .",
    "thus , the solution of eq .",
    "( [ eq : euler_wsource ] ) is split into a two stage problem : @xmath25 typically , the source terms are more easily written in the primitive variable formulation of the euler equations . a common choice of the primitive - variable vector is @xmath26 , which we also adopt here . for sources corresponding to the ns viscous terms ( eq .  [ eq : source ] ) , only the @xmath27 component of @xmath28",
    "is affected , thus simplifying the solution method of the source - term step .",
    "the three - dimensional euler equations can be written in the primitive variable form as @xcite @xmath29 for this choice of variables , the coefficient matrices are given by @xcite @xmath30 which is exactly equivalent to the familiar equations    @xmath31    in this formulation , the viscous terms of the ns equations , which affect only the velocity , are ( e.g. * ? ? ? * ) @xmath32 an alternative to expressing the viscosity effects as source terms is to absorb them directly into the flux divergence , @xmath33=0,\\ ] ] which highlights the still conservative character of the ns equations . here",
    "diffusive fluxes , defined by @xmath34 are responsible for the effects of viscosity .",
    "an implementation of the diffusive fluxes in this conservation - law form is clearly the preferred choice for fvm schemes , which are specifically designed for solving the integral form of these conservation laws .",
    "in fact , in this case they _ exactly _ conserve all the involved quantities to machine precision .",
    "we will therefore focus on this method in our study .",
    "the central aspect will be the numerical scheme used for estimating the velocity gradients at the cell interfaces , and hence the discretization of the diffusive fluxes . in the next section ,",
    "we describe our approach for this in detail .",
    "finite volume methods enforce the integral form of the conservation laws on discrete meshes .",
    "this approach is manifestly conservative , since fluxes of quantities that leave a cell simply enter the neighboring cell .",
    "the ns equations in finite - volume form are @xmath35 where , in general , the intercell fluxes contain both advective and diffusive contributions , @xmath36 the scheme used by arepo  is the finite volume muscl - hancock approach , consisting of a muscl ( monotone upstream - centered schemes for conservation laws ) linear reconstruction stage , and a hancock two - stage time integration @xmath37 where the numerical fluxes @xmath38 represent appropriately time - averaged approximations to the true flux @xmath39 across the interface shared by cells @xmath40 and @xmath41 .",
    "the time label @xmath42 in eq .",
    "( [ eq : finite_vol ] ) indicates that an intermediate - stage ( a half time - step evolution ) has been performed to obtain the numerical estimate of @xmath39 , meaning that the time - stepping in eq .",
    "( [ eq : finite_vol ] ) uses time - centered fluxes , giving it second - order accuracy .",
    "the hancock part of the scheme is a two - step approach ( the familiar predictor - corrector algorithm ) in which the correction half - step is obtained from the solution of the 1-d riemann problem across each face of the control volume .",
    "the general finite volume muscl - hancock scheme has hence the following three steps @xcite :    [ [ i - gradient - estimation - linear - data - reconstruction - and - boundary - value - extrapolation ] ] ( i ) gradient estimation , linear data reconstruction and boundary value extrapolation + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    once a local gradient estimate for the conserved quantities @xmath43 of cell @xmath40 is available , linear data reconstruction takes the form @xmath44 where we denote by @xmath45 the estimated vector of conserved variables at the centroid of the @xmath46-interface , obtained by linearly extrapolating the cell - centered values @xmath47 of the @xmath40-th cell ( on the `` left '' side ) from @xmath48 , the cell s center position , to @xmath49 .",
    "similarly , @xmath50 corresponds to the estimates of the face - centroid values obtained by linear extrapolation of the cell - centered values of the @xmath41-th cell ( the `` right '' side ) , whose center position is @xmath51 . in both cases , @xmath52 is the position vector of the face centroid between the cells .",
    "the jacobian @xmath53 is explicitly labeled with superscript @xmath54 to point out that it corresponds to the estimate of spatial derivatives at the beginning of the time - step .",
    "[ [ ii - evolution - of - boundary - extrapolated - values ] ] ( ii ) evolution of boundary extrapolated values + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    this is , strictly speaking , the  predictor \" half time - step .",
    "the conserved variables are evolved for @xmath55 with flux estimates obtained from the values at the beginning of the time - step : @xmath56    [ [ iii - solution - of-1-d - riemann - problems - and - computation - of - godunov - fluxes ] ] ( iii ) solution of 1-d riemann problems and computation of godunov fluxes + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    this corresponds to the `` corrector '' half time - step in the two - stage hancock approach .",
    "once the values to the right and left of the interface at time @xmath57 are known , the discontinuity is treated as a one - dimensional riemann problem .",
    "an exact or approximate riemann solver is used to return values of @xmath58 , @xmath59 and @xmath60 at the interface , at a time corresponding to @xmath42 . from these values ,",
    "the advective fluxes can be directly computed ( eq .  [ eq : ad_flux ] ) .",
    "these are time - centered fluxes @xmath61 used to update the system from the beginning of the time - step to its end , @xmath62    figures  [ fig : arepo_scheme ] and [ fig : arepo_scheme_riemann ] illustrate the mesh geometry and the basic steps of this inviscid numerical scheme implemented in arepo .",
    "one additional point we have not explicitly discussed here for simplicity is the treatment of the mesh motion , as indicated in fig .",
    "[ fig : arepo_scheme_riemann ] .",
    "this is incorporated into the scheme by evaluating all fluxes in the rest frame of the corresponding face , as described by @xcite .",
    "this requires appropriate boosts of the fluid states and the fluxes from the lab frame to the rest frame of each face , and back . for a voronoi mesh ,",
    "the face velocities are fully specified by the velocities of all the mesh generating points .",
    "the latter can be chosen freely in principle , but if they are set equal to the fluid velocities of the corresponding cells , a lagrangian behavior and a manifestly galilean - invariant discretization scheme is obtained in which the truncation error does not depend on the bulk velocity of the system .",
    "a cell - centered , finite - volume solution of the ns equation can be written as @xmath63 where we have retained the distinction between advective and viscous fluxes . as in the case of the euler equations ,",
    "the numerical method essentially consists of the problem of finding accurate time - centered numerical fluxes across each of the interfaces of a cell . how to do this in detail for the diffusive part of the fluxes has been the focus of numerous efficiency and stability analyses ( see * ? ? ?",
    "* for a detailed description ) .",
    "( [ eq : finite_vol2 ] ) uses time - centered fluxes , obtained here with the two - step hancock technique , as described above .",
    "thus , for estimating both @xmath64 and @xmath65 a half time - step predictor stage is required . in the muscl - hancock approach for inviscid flow , this step is carried out by linear reconstruction from each cell center to the interface , followed by solving a one - dimensional riemann problem at the interface where the extrapolations meet .",
    "the traditional formulation of the riemann problem and its solution are exclusive to hyperbolic differential equations and thus do not provide exact solutions for the ns equations .",
    "since a general solution for the viscous riemann problem does not exist , we will treat the viscous fluxes in eq .",
    "( [ eq : finite_vol2 ] ) as a correction to the solution of an otherwise inviscid flow .",
    "our ns version of the muscl - hancock scheme consists of the following three different stages ( in addition to those described in section .",
    "[ sec : muscl_overview ] ) :    * correct the muscl linear extrapolation of primitive variables by applying a viscous kick . *",
    "extrapolate the cell - centered gradients linearly and evolve them for half a time - step .",
    "* average the extrapolated velocity gradients at the interface and use them to estimate viscous fluxes .    to extrapolate the gradients from their cell - centered values to the interfaces ,",
    "information about the higher - order derivatives of the primitive variables is needed .",
    "if gradients are assumed to vary linearly in space , an estimator for the hessian matrix for each of the five primitive variables is sufficient .",
    "evidently , enough information is contained in the cell - centered quantities to estimate both the local gradient @xmath66 and the hessian @xmath67 corresponding to a given scalar quantity @xmath68 .",
    "however , estimating both of these simultaneously is significantly more difficult than estimating them one after the other",
    ". therefore , we will effectively treat @xmath68 and @xmath66 as two independent fields that vary linearly in space , and this variation needs to be estimated from the mesh data through a suitably discretized differential operator .    as a simpler alternative to the gradient reconstruction approach ,",
    "we briefly describe how one can use the gradients already available from the linear reconstruction step .",
    "in this approximation , a given quantity varies only linearly within the control volume , such that consistently evaluated gradients are piece - wise constant .",
    "this means that each interface represents a discontinuity in the gradient field @xmath66 .",
    "naively , one may think that the arithmetic average of both gradients that meet at a face is a good estimate for the gradient at the interface itself .",
    "however , on second thought , one realizes that both cells do no necessarily have the same weight if cells of different volume meet .",
    "furthermore , the unweighted average of the two cell - centered values really represents the value at the midpoint of the two mesh - generating points , which , for a voronoi mesh , can be substantially offset from the mid - point of the face .",
    "we therefore adopt the approach of @xcite , which consists in choosing one of the two gradients that meet at the interface , based on prior knowledge of the direction of the flow across the interface .",
    "thus the three - stage scheme introduced above could be alternatively replaced by the simpler method :    * at the cell interface where two different gradients meet , choose the upwind gradient .    in either method , once we have an estimate of both viscous and advective fluxes , the time - step evolution of the conserved quantities @xmath69 is carried out as in eq .",
    "( [ eq : finite_vol2 ] ) . however , the approach ( a - c ) is preferable to the @xcite scheme because it uses time - centered estimates for both @xmath64 and @xmath65 , hence preserving the order of accuracy of the original inviscid scheme .",
    "we therefore now provide a more detailed description of the individual steps in this three - stage approach .",
    "although eq .",
    "( [ eq : finite_vol2 ] ) is written in an unsplit form , the predictor step is indeed operator split , evolving the advective and diffusive terms separately ( e.g. * ? ? ?",
    "* ) . while our method for estimating the advective fluxes remains the muscl - hancock scheme , the technique for estimating the diffusive fluxes is essentially contained in the estimation of the velocity gradients at each interface ( see *",
    "* ; * ? ? ?",
    "* for a series of tests on different interface gradient estimates ) .",
    "looking for better accuracy , we have chosen to couple these two otherwise independent procedures by correcting / biasing the linear extrapolation of the velocity field ( stage @xmath70 in section  [ sec : muscl_overview ] ) with a viscous source term .",
    "the benefit of carrying out a linear extrapolation to cell interfaces in primitive variables is the simplicity of the galilean transformation needed to boost the quantities to the frame of a moving interface . since the galilean boost does not affect the mass and pressure of a given cell , only the local velocity field is transformed .",
    "in addition , adding force source terms to the equations of motion in primitive variable formulation is simpler , since these only couple to the momentum equations .",
    "thus , a  viscous kick \" can be applied to the velocity field in the half time - step evolution stage : @xmath71.\\ ] ] in this way , the subsequent linear extrapolation of primitive variables will already include viscosity effects to first order in time .",
    "while working with numerical fluxes across interfaces requires velocity gradients , the use of cell - centered source terms in eq .",
    "( [ eq : visc_kick ] ) calls for second order derivatives of the velocity field .",
    "thus , in addition to the cell - centered velocity gradients @xmath72 , @xmath73 and @xmath74 , the cell - centered hessian matrices @xmath75 , @xmath75 and @xmath75 are now needed . as we will see below ,",
    "these matrices will be of use in more than one occasion , justifying the computational cost incurred to calculate them .",
    "the linear reconstruction implemented in our muscl - hancock approach essentially assumes that the gradient of a scalar quantity @xmath68 does not vary significantly across the spatial scale of a cell . for smooth flows ,",
    "the gradients of two neighboring cells @xmath76 and @xmath77 will not differ significantly . furthermore ,",
    "in the presence of strong discontinuities , gradients on each side will be slope - limited , and therefore will not differ by much either .",
    "hence , a first guess for the gradient at the interface between two cells is just the average of the cell - centered estimates at each side of the face @xmath78 however , as we pointed out earlier , the gradient average above is actually representative of the midpoint between the two cell centers @xmath79 and @xmath80 , which in general does not lie close to the center of the face in a voronoi mesh , and may in fact lie within a third cell . unless gradients are assumed to vary within a cell , it will not be possible to assign the estimate to the center of the interface with any confidence .",
    "let us assume that the scalar field @xmath81 is infinitely differentiable and , consequently , so is its first derivative .",
    "thus , we can taylor expand both quantities to arbitrary order around a mesh generating point @xmath82 : @xmath83 where @xmath84 is the hessian matrix of the scalar quantity @xmath68 and @xmath85 is a @xmath86 tensor containing the third - order derivatives of @xmath68 ( i.e.  @xmath87 ) . truncating both taylor expansions to first - order in @xmath88 , we see that we can obtain linear reconstructions for both the physical quantities and their gradients provided that we have numerical estimates for both the gradients and the hessians at each mesh generating point .",
    "we emphasize that a taylor expansion is not equivalent to a polynomial data reconstruction . indeed , it is desirable that reconstruction schemes are manifestly conservative , in the sense that the average of the reconstruction over the cell should be identical to the value of @xmath68 at the geometric center of the cell .",
    "this property of reconstruction schemes is sometimes referred to as @xmath89-exactness , meaning that if a polynomial reconstruction is cell - averaged over the mesh , the reconstruction procedure recovers the same polynomial .",
    "this condition is trivially satisfied for a linear reconstruction of the form @xmath90 .",
    "however , higher - order reconstruction schemes require the use of zero - mean polynomials , which , beyond first - order , differ from the taylor series ( e.g. * ? ? ?",
    "* ; * ? ? ?",
    "the linear reconstruction of the scalar field @xmath68 and of the vector field @xmath66 , treated as if they were independent quantities , effectively constitutes a hybrid method between standard linear reconstruction and fully k - exact second - order reconstruction , as illustrated in figure  [ fig : gradient_reconstruction ] . in this approximation ,",
    "second derivatives are considered negligible for the spatial reconstruction of the primitive quantities , but they are still included for a more accurate estimate of the gradients near the cell interfaces .",
    "we also note , that in this way our numerical scheme reduces to that originally in arepo  ( which is second - order - accurate ) when the viscous fluxes are disabled .",
    "once an estimate for the hessian matrix @xmath91 is available ( section  [ sec : hessians ] ) , a linear extrapolation of the gradients from the cell centers to the interfaces can be obtained from @xmath92 which is a better approximation than eq .",
    "( [ eq : grad_estimate0 ] ) . however , the time evolution of the gradients during a single step could be equally important as their spatial variation over the length scale of a cell , hence we also need to evolve them for half a time - step to obtain a time integration scheme that is consistent with the second - order accurate two - stage muscl - hancock approach . in the latter , to extrapolate and",
    "evolve a scalar quantity @xmath68 we consider @xmath93 where the time derivative of the quantity @xmath68 in the control volume of the @xmath40-th cell can be obtained from the primitive variable formulation of the euler equations in tensor notation : @xmath94 here sums over repeated indices are implied .",
    "latin indices @xmath95 take the values @xmath96 or @xmath97 , while greek indices @xmath98 take the values @xmath99 and are used to number the components of the primitive quantity vector ( @xmath100 for @xmath101 , respectively ) . as with our previous notation , the indices @xmath102 and",
    "@xmath103 are reserved for labeling the mesh generating points and their associated cells .",
    "( [ eq : euler_primitive ] ) is an advection equation for the primitive variables .",
    "analogously , to  advect \" the gradients of the primitive variables from the cell center to the interface , we can ignore the viscous terms and derive an equation of motion for the spatial derivatives by differentiating eq .",
    "( [ eq : euler_primitive ] ) : @xmath104 where we can identify the jacobian matrix of the primitive variables as @xmath105 , and the hessian tensor ( @xmath106 ) of the primitive variables as @xmath107 . therefore , the time derivative of each component of the primitive variable jacobian matrix is @xmath108 where we introduced the rank-@xmath109 tensor @xmath110 .",
    "since @xmath111 is a function of the primitive variables @xmath112 , the tensor @xmath113 can also be written as ( see appendix ) @xmath114 and therefore its numerical estimate is given by the product of the exact derivatives @xmath115 ( evaluated with values of the primitive variables at the center of the cell ) and the ( already available ) numerical estimates for the gradients @xmath116 . the second term on the right hand side of eq .",
    "( [ eq : euler_derivatives ] ) is the product of the known coefficients @xmath117 ( evaluated at the center of the cell ) and the numerical estimates of the hessian tensor @xmath118 .",
    "finally , with a numerical estimate of @xmath119 at hand ( see section  [ sec : hessians ] ) , the extrapolated and half time - step evolved gradients of the velocity are ( in analogy to eq .",
    "[ eq : primitive_extrapolation ] ) : @xmath120 with analogous expressions for @xmath121 and @xmath122 . in eq .",
    "( [ eq : velocity_extrapolation ] ) , the term @xmath123 is obtained from eq .",
    "( [ eq : euler_derivatives ] ) with @xmath124 and @xmath125 .    in fig .",
    "[ fig : gradient_extrapolation ] , we show a sketch of the different steps involved in obtaining time - centered diffusive fluxes .",
    "we point out that taking the hessian matrices of the velocity field to be identically zero is @xmath126 equivalent to the alternative scheme @xmath127 .",
    "the third term to the right hand side of eq .",
    "( [ eq : velocity_extrapolation ] ) is still different from zero even if @xmath128 ( eq .  [ eq : euler_derivatives ] ) since , in general , @xmath129 . by advecting the gradients according to eq .",
    "( [ eq : euler_derivatives ] ) we gain additional accuracy at no additional computational expense because the terms @xmath130 are known exactly ( see appendix ) , given the values of the primitive variables and their respective gradients at the center of each cell .    .",
    "the different steps are : ( 1 ) spatial extrapolation of the gradients , followed by ( 2 ) a time advance by @xmath55 according to eq .",
    "( [ eq : primitive_extrapolation ] ) , and ( 3 ) an approximate evaluation right at the interface . in step ( 4 ) , the viscous fluxes are determined by evaluating eq .",
    "( [ eq : viscous_fluxes ] ) with the values of the primitive variables and the velocity gradients at the interface.[fig : gradient_extrapolation],width=340 ]      an accurate estimate of the viscous fluxes between two cells requires an accurate estimate of the velocity gradients at the interface . the gradient extrapolation method described above produces in general two different values of the velocity gradient that meet at the interface .",
    "this defines a general riemann problem for the differential equation in eq .",
    "( [ eq : euler_derivatives ] ) which is no longer a homogeneous hyperbolic differential equation .",
    "therefore , attempting to solve this new riemann problem for the spatial derivatives of the scalar quantities introduces a significant additional difficulty . for simplicity",
    ", we will assume that the differences between two gradient extrapolations meeting at an interface are small enough such that a simple arithmetic mean can be used .",
    "this assumption , of course , is valid only when the field of second derivatives is sufficiently smooth ( see section  [ sec : hessians ] ) .",
    "the time and area averaged flux across the face @xmath40-@xmath41 that moves with speed @xmath131 is defined as @xmath132{\\rm d}\\mathbf{a}_{ij}\\;{\\rm d}t \\\\",
    "\\equiv\\hat{\\mathbf{f}}_{\\mathrm{adv},ij}-\\hat{\\mathbf{f}}_{\\mathrm{diff},ij}&~~. \\end{split}\\ ] ] the numerical or godunov estimate of these fluxes is chosen so that the analytic expressions for @xmath133 and @xmath134 are evaluated with numerical estimates of @xmath3 , @xmath28 and @xmath135 at the centroid of the interface .",
    "the advective godunov fluxes are @xmath136\\hat{\\mathbf{n}}_{ij},\\ ] ] where @xmath137 is the conserved variable vector at the centroid of the interface , as seen in the lab frame , obtained from the solution of a 1-d riemann problem across the @xmath40-@xmath41 interface and along its normal .",
    "multiplying by @xmath138 is equivalent to projecting the flux matrix @xmath139 ( eq .  [ eq : ad_flux ] ) along the normal of each face .",
    "the godunov fluxes @xmath140 and @xmath141 are thus @xmath142-component vectors .",
    "the diffusive godunov flux vector is obtained from the diffusive flux @xmath143 matrix @xmath144\\\\ \\end{split}\\ ] ] where @xmath145 are the components of the viscous stress tensor @xmath14 , which depend on the local value of the velocity and the velocity gradients .",
    "these components are : @xmath146 just like with the advective fluxes , the flux tensor ( eq .  [ eq : viscous_flux_matrix ] ) must be projected onto the normal @xmath138 of each @xmath46-interface to obtain the 5-component vector @xmath147 where @xmath148 is the primitive variable vector at the centroid of the interface , as seen in the lab frame ( whose associated conserved variables are @xmath137 in eq .",
    "[ eq : advective_flux ] ) .",
    "the spatial derivatives @xmath149 correspond to our extrapolate - and - average scheme for linearly varying gradients . as with @xmath148 , we are interested in estimates of @xmath135 at the centroid of the face . for both these quantities ,",
    "only the velocity and its spatial derivatives are relevant when viscous fluxes are calculated .      in analogy to the gradient calculation for voronoi meshes discussed by @xcite , here",
    "we discuss the estimates of the cell - centered hessian matrices for each of the primitive variables @xmath112 . to this end , let us consider a vector field @xmath150 that varies approximately linearly with distance as @xmath151 near @xmath79 . up to linear order , the first derivative of @xmath150 is simply @xmath152 .",
    "the volume - average of the spatial derivatives of @xmath150 in the vicinity of @xmath79 is @xmath153\\frac{\\mathbf{r}_j-\\mathbf{r}_i}{r_{ij}}\\,{\\rm d}a , \\end{split}\\ ] ] where we have assumed that the linear approximation is valid up to all the neighboring mesh generating points @xmath80 .",
    "it is straightforward to verify that the average matrix @xmath154 can be written as @xmath155 writing the vector product @xmath156 in tensor form ( where @xmath157 is a @xmath158 square matrix and @xmath150 and @xmath27 are vectors of dimension @xmath54 ) , it is easy to prove the identity @xmath159 .",
    "equivalently , going back to vector notation , we have @xmath160 , where , for simplicity , we used vector notation to denote a `` cross product '' between a vector and a matrix .    therefore , the second term on the right hand side of eq .",
    "( [ eq : hess_estimate2 ] ) can be written as @xmath161 here , the second term on the right hand side vanishes identically , because @xmath162 on the other hand , the first term on the right hand side of eq .",
    "( [ eq : hess_estimate3 ] ) can be rewritten by means of the replacement @xmath163 . finally , identifying the vector @xmath164 with the gradient @xmath165 of a scalar quantity @xmath68 , and the matrix @xmath166 with the cell - averaged hessian matrix @xmath167 , eq .",
    "( [ eq : hess_estimate3 ] ) takes the form @xmath168 the most noteworthy characteristic of this expression is that it is purely algebraic and explicit in nature .",
    "that is , the hessian matrix of @xmath68 is simply a linear combination of the neighboring gradients in which the coefficients are predetermined quantities that depend only on the local mesh geometry .",
    "each one of those neighboring gradients is , at the same time , a linear combination of its immediate neighbors scalar quantities ( see eq .  21 of * ? ? ?",
    "* ) . therefore , the hessian estimate of eq .",
    "( [ eq : hessian_estimate ] ) is a weighted linear combination of scalars from its immediate neighbors and from its neighbors neighbors and , as such , it implicitly employs a larger stencil than the one used for the gradients .",
    "it is well known that higher - order reconstruction schemes are prone to produce spurious oscillations in the vicinity of steep gradients , unless this is prevented by appropriate _ slope limiter methods _",
    "these non - linear corrections in the data reconstruction procedure prevent overshoots and allow for true discontinuities in the solutions .",
    "so far , we have discussed how to estimate second derivatives from first derivatives , which in turn are already reconstruction estimates obtained from the scalar physical quantities .",
    "potential irregularities in the second derivative fields can lead to spurious oscillations and unphysical values of the viscous stress tensor at the cell boundaries . to alleviate this problem",
    ", we enforce local monotonicity of each component of the gradients , which is equivalent to smoothing out the hessian estimates . in practice , this is achieved by replacing the hessian matrix by a ` slope limited ' version @xmath169 with @xmath170 are the slope limiters @xmath171 for each direction @xmath172 , @xmath173 and @xmath174 .",
    "this minmod - type slope - limiting method is readily applicable for irregular meshes .",
    "the quantities @xmath175 are defined as @xmath176 where the @xmath177 are the components of the vector @xmath178 , i.e.  the estimated change in the gradient @xmath66 between the centroid @xmath49 of the cell and the center of cell @xmath40 .",
    "the quantities @xmath179 and @xmath180 are the maximum and minimum of the @xmath181-th component of the cell - centered gradient estimates among all neighboring cells of cell @xmath40 , including @xmath40 itself .    to our knowledge , the slope - limiting technique has not been applied to the second derivatives before .",
    "however , its purpose is equivalent to the  flattening \" procedure near shocks carried out by @xcite for parabolic reconstruction . in our approach , the suppression of oscillations near shocks is exclusively handled by the limitation of the gradients , since the reconstruction of hydrodynamic quantities is only of linear order .",
    "thus , the hessian limitation procedure serves the sole purpose of guaranteeing a smooth variation of the gradients and avoiding spuriously large viscous fluxes .",
    "future improvements of the present method could however also employ these second derivatives for higher - order reconstructions of the scalars .      because of",
    "the more complex mathematical properties of the ns equations compared with the euler equations , obtaining a rigorous analytic expression analogous to the cfl stability criterion for the allowed time step size is not possible .",
    "however , @xcite obtained an approximate semi - empirical stability criterion when advective , viscous and heat diffusion terms are considered . when there is no heat flux , the time - step criterion can be written as ( e.g. * ? ? ?",
    "* ) @xmath182 where @xmath183 is the standard cfl - criterion time - step except for the courant - friedrichs - levy coefficient , which is absorbed into a  safety factor \" @xmath184 ( usually @xmath185 ) . in eq .",
    "( [ eq : time - step2 ] ) , the _ cell reynolds number _",
    "@xmath186 is @xmath187 where @xmath188 is the velocity of the gas relative to the motion of the grid and @xmath189 is the effective radius of the cell , calculated as @xmath190 from the volume of a cell ( or as @xmath191 from the area in 2d ) .",
    "similar approaches to derive an appropriate ns time - step have also been described by @xcite and @xcite .",
    "the numerical integration scheme we employ is time unsplit , that is , advective and diffusive fluxes are applied simultaneously during each hydrodynamic time - step and not sequentially ( eq .  [ eq : finite_vol2 ] ) .",
    "the prediction stage , on the other hand , is operator - split , since the advective and diffusive terms are computed almost independently of each other .",
    "this is in part due to the nature of the standard one - dimensional riemann problem , whose solutions  strictly speaking  are only valid for the hyperbolic euler problem , but are not solutions to the full ns equations with their additional parabolic terms .",
    "the validity of this approach ultimately relies on the assumption that the viscous terms in the ns equations are typically small perturbations to the euler equations .",
    "to test the performance of arepo  when our new treatment of viscous fluxes is included , we have carried out a number of test simulations for physical situations with known analytic or quantitative solutions .",
    "usually , the problems with known exact solutions are either of self - similar type or have symmetries that make the non - linear term proportional to @xmath192 vanish identically .",
    "owing to these limitations , numerical simulations of situations with experimentally well - established behavior , such as flow past a circular cylinder , have become common - place in testing the performance of ns codes .",
    "we will therefore also carry out such qualitative benchmarks , besides looking at a few simple problems with analytic solutions .          a simple problem of laminar flow in the presence of viscosity is given by the vortex sheet diffusion test . in this problem ,",
    "the initial velocity field at @xmath193 is given by @xmath194 with @xmath195 for @xmath196 and @xmath197 for @xmath198 .",
    "because of the symmetry of the problem , the ns equations reduce to a 1d diffusion equation @xmath199 with solution ( e.g. * ? ? ? * ) @xmath200 \\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\omega=\\frac{\\partial u}{\\partial y}=\\frac{e^{-y^2/4\\nu t}}{\\sqrt{\\pi\\nu t}}.\\ ] ] in figure  [ fig : vortex_sheet ] , we show the time evolution we obtain for a two - dimensional simulation domain with initially uniform pressure and density ( @xmath201 ) , and with a velocity field given by @xmath202 .",
    "the mesh generating points were distributed regularly at the initial time to produce a cartesian mesh .",
    "as the system evolves , the velocity and the vorticity fields as a function of time and vertical coordinate @xmath173 follow the exact solution remarkably well .",
    "it is worth pointing out that the initial singularity in the vorticity field is unresolved numerically ( and thus appears as being uniformly zero throughout the domain ) , since the system is started with an exact sharp discontinuity .",
    "static , perfectly aligned meshes with slope limitation techniques will typically maintain this unresolved vorticity and thus no diffusion will proceed unless some numerical perturbations are seeded that break the mesh alignment of the initial state ( a common way to overcome this difficulty is to start the system according to eq .",
    "( [ eq : vortex_sheet ] ) at @xmath203 such that there is initial vorticity ) .",
    "however , the moving mesh of arepo  `` sees '' a non - zero velocity gradient as soon as the upper and lower halves of the domain become unaligned with respect to each other .",
    "this happens because , as soon as a cell shifts its position , the number of its neighbors that have a drastically different velocity increases and so does the  statistical weight \" of the discontinuity . at this point ,",
    "the slope - limiting technique , which had ignored the discontinuity in the perfectly aligned mesh , now identifies the local variation as  real \" and the vorticity field is  detected \" .",
    "[ fig : vortex_sheet_mesh ] shows the corresponding two - dimensional velocity field of the diffusing vortex sheet test at four different times , together with the geometry of the underlying voronoi mesh .",
    "the mesh geometry nicely shows how the cells transform from a cartesian configuration to an unstructured mesh , while the velocity field evolves from a piece - wise constant state with a central discontinuity to a smoothly varying shear flow due to the effects of viscosity .",
    "the two - dimensional circular velocity distribution corresponding to an irrotational vortex of circulation @xmath204 is @xmath205 where the vorticity @xmath206 is zero everywhere except at the origin ( @xmath207 , i.e. a vortex line ) . in a viscous fluid",
    ", this velocity profile has to be sustained by a point source of vorticity at the origin ( e.g. an infinitely thin rotating cylinder ) otherwise the vortex line will decay in a similar way as the vortex sheet in the previous example . if the velocity at the origin is set impulsively to zero , the subsequent evolution of the azimuthal velocity is given by @xmath208~~,\\ ] ] while the vorticity @xmath209\\cdot\\hat{\\mathbf{z}}$ ] evolves as @xmath210 and the laplacian of the velocity field is @xmath211 because of its geometry , this problem is significantly more challenging than the vortex sheet test considered above and can not be impulsively started at precisely @xmath193 .",
    "besides the initial singularity in the vorticity field , the velocity field is divergent as we approach the origin . in addition , it is not possible to capture the azimuthal velocity field when the distance from the origin is comparable to the grid resolution . at the same time , the azimuthal velocity field is challenging for the boundary conditions , because the problem is self - similar in nature and therefore natural boundaries do not exist .",
    "these problems did not exist for the vortex - sheet problem , which is of one - dimensional nature .",
    "nevertheless , evolving the system from an initial time @xmath203 minimizes most of these complications .",
    "in addition , we extend the computational domain far beyond the region of interest , such that boundaries become essentially irrelevant during the timespan of the numerical solution .",
    "we setup a cartesian mesh ( @xmath212 ) with an imposed initial velocity profile of @xmath213 \\;\\;\\;\\;\\;\\text {   with   } \\nu=\\frac{\\mu}{\\rho } , \\ ] ] corresponding to a gaussian vortex that we center in the middle of the domain , which extends over the range @xmath214\\times[0,40]$ ] , and thus accommodates a radial range from @xmath215 to @xmath216 .",
    "the adopted physical parameters are @xmath217 , @xmath218 , @xmath219 , and the initial density field is constant with @xmath220 . the pressure field , however",
    ", is not uniform because the fluid is not started from rest .",
    "we obtain the correct pressure profile from the radial component of the equation of motion : @xmath221 and thus the initial pressure profile is @xmath222 ^ 2\\right.\\\\ \\left.+\\frac{1}{4\\nu t_0}\\left(\\mathrm{ei}\\left(-\\frac{r^2}{2\\nu t_0}\\right ) -\\mathrm{ei}\\left(-\\frac{r^2}{4\\nu t_0}\\right)\\right)\\right\\}~~ , \\end{split}\\ ] ] where @xmath223 is an integration constant .",
    "the precise value of @xmath223 is irrelevant for the similarity solution presented here , because it is obtained for incompressible flow . in our numerical experiments ( which are compressible )",
    ", we set @xmath223 such that @xmath224 at @xmath215 .",
    "[ fig : gaussian_vortex ] shows the time evolution of the velocity field , the vorticity field and the laplacian field for a gaussian vortex started on an initially cartesian mesh .",
    "we find not only that the velocity evolves as expected based on the similarity solution , but the first and second derivatives also show excellent agreement with the analytic expectations .",
    "these results validate both the space- and time - accuracy of our viscous integration scheme , as well as the accuracy with which the second derivatives are estimated .",
    "next , we consider impulsively - started plane poiseuille and couette flows where a fluid between two parallel plates is initially at rest , and then , suddenly , either pressure gradients or plate motions are applied .",
    "the time - dependent solution has the form @xmath225 , where the horizontal velocity can be decomposed into steady and time - dependent parts , @xmath226 . in the presence of a pressure gradient and an upper plate moving at constant speed @xmath227 , the steady state solution is the well - known expression @xmath228 for which the special cases @xmath229 and @xmath230 are commonly known as plane poiseuille flow and plane couette flow , respectively .",
    "the time dependent component @xmath231 is a solution of eq .",
    "( [ eq : ns_1d ] ) , subject to the initial condition @xmath232 and the boundary conditions @xmath233 at @xmath234 and @xmath235 . by separation of variables ,",
    "the general solution is ( e.g * ? ? ?",
    "* ) @xmath236 where the coefficients @xmath237 are determined by the initial condition @xmath238~~.\\end{aligned}\\ ] ]        the numerical setup for this problem is straightforward .",
    "we produce a cartesian mesh in the range @xmath239\\times[0,1]$ ] with a resolution of @xmath240 .",
    "the fluid is originally at rest and its density and pressure are given by @xmath201 .",
    "the equation of state is that of an ideal gas with adiabatic index @xmath241 . to represent the plates ,",
    "the uppermost and lowermost rows of cells are replaced by  solid boundaries  at which the no - slip condition is enforced , i.e.  @xmath242 ( see fig .  [ fig : boundaries ] ) .",
    "moving solid boundaries are straightforward to implement with a voronoi tessellation mesh .",
    "a solid surface can be constructed as a series of mesh - generating point pairs , one on each side of the surface , such that the common interface  equidistant to both points  defines the boundary locally ( see @xcite and @xcite ) .",
    "the voronoi cell on the side of the  solid \" object can regarded as  a ghost cell within the domain \" .",
    "that is , this cell is part of the domain discretization process and is tessellated / updated as any other normal gas cell .",
    "however , when solving the riemann problem at the local interface between a  solid \" cell and a real gas cell , boundary conditions are imposed in the same way as boundary conditions on the outer box are imposed .",
    "for perfectly reflecting boundaries , the normal component of the velocity is reflected in the  solid side \" or  outside region \" of the interface . for non - slip boundaries ,",
    "the entire velocity vector is reflected , such that the velocity at the interface is zero ( figure  [ fig : boundaries ] ) .",
    "we run two different test problems .",
    "for the first one , both plates remain at rest and an external gradient of @xmath243 is imposed . for the second test , the bottom plate is at rest and the upper plate moves at a constant speed of @xmath244 . in both test simulations ,",
    "the dynamic viscosity coefficient has been set to @xmath245 . in figure",
    "[ fig : flow_pipe ] , we show the time evolution of the horizontal velocity profile both for the plane poiseuille and couette flows . in both cases ,",
    "the numerical results match the analytic expectations very well .",
    "in figures[fig : plane_couette_mesh ] we also show maps of the velocity profile and the mesh geometry at different times for the poiseuille case .",
    "the grid evolution shows how the cartesian structure is progressively lost , but that the dynamic voronoi mesh of arepo  successfully avoids any mesh - tangling effects .",
    "we now turn to a more challenging problem , which highlights the ability of our scheme to deal with geometrically complex boundary conditions . for purely azimuthal motion ,",
    "the ns equations in the radial and tangential directions are    @xmath246~~.\\end{aligned}\\ ] ]    the exact solution of steady flow ( i.e.  @xmath247 ) between concentric cylinders with boundary conditions @xmath248 at @xmath249 , and @xmath250 at @xmath251 is given by ( e.g * ? ? ?",
    "* ) @xmath252 where @xmath189 and @xmath253 ( @xmath254 ) are the radii and angular velocities of the respective cylinders .",
    "the impulsively - started version of this problem can be solved analytically by separation of variables ( see * ? ? ?",
    "* ; * ? ? ?",
    ". the full solution can thus be written as @xmath255 , where the time - dependent part has the form @xmath256 and @xmath257 and @xmath258 are bessel functions of the first and second kind , respectively .",
    "this time - dependent component is subject to the boundary conditions @xmath259 at @xmath260 and @xmath261 , thus allowing us to eliminate @xmath262 : @xmath263 where the @xmath264 are the roots of the equation @xmath265 with @xmath266 .",
    "finally , the coefficients @xmath267 are determined by imposing the initial condition @xmath268 at @xmath193 . to solve for each coefficient independently ,",
    "the steady state solution must be written in terms of a series expansion of @xmath269 in the basis functions @xmath270 .",
    "after some algebraic manipulations , we obtain @xmath271 , \\end{split}\\ ] ] and therefore the time - dependent component is given by @xmath272~~. \\end{split}\\ ] ]    .",
    "the voronoi faces that make up the cylindrical boundary are created by close pairs of points , which either lie inside the solid cylinder ( red ) or on the fluid side ( black ) .",
    "the gray cells define the contact region of the fluid domain with the cylinder ; here the no - slip boundary conditions are imposed .",
    "an analogous geometry applies for the outer cylinder .",
    "the panel on the right hand side shows the same region of the computational domain at a slightly later time , when the mesh filling the fluid region has started to react to the motion of the cylinder.[fig : couette_mesh_1],title=\"fig:\",width=283 ] .",
    "the voronoi faces that make up the cylindrical boundary are created by close pairs of points , which either lie inside the solid cylinder ( red ) or on the fluid side ( black ) .",
    "the gray cells define the contact region of the fluid domain with the cylinder ; here the no - slip boundary conditions are imposed .",
    "an analogous geometry applies for the outer cylinder .",
    "the panel on the right hand side shows the same region of the computational domain at a slightly later time , when the mesh filling the fluid region has started to react to the motion of the cylinder.[fig : couette_mesh_1],title=\"fig:\",width=283 ]    collecting these results , the complete expression for the time - dependent angular velocity profile is @xmath273~~. \\end{split}\\ ] ]    we realize the moving boundary conditions in the present case through special voronoi - cells with prescribed motion and boundary conditions , as described in @xcite . in the present case ,",
    "we use two sets of mesh - generating points , each one consisting of a series of outside - inside pairs located on either side of the boundary and running parallel to it , so that two circular boundaries of radii @xmath260 and @xmath261 are defined which can be made to rotate at angular frequencies @xmath274 and @xmath275 , respectively .",
    "note that the only significant technical difference between this problem and the preceding examples is the way the boundary cells are prescribed to move ; the rest of the numerical scheme remains unaltered .",
    "figure  [ fig : couette_geometry ] illustrates the geometry of the circular couette flow , and our realization of a suitable mesh in arepo . since the equations of motion are always solved in the moving frame of the interfaces , there is no practical difference between stationary and moving boundaries when they are constructed as a part of the mesh .",
    "figure  [ fig : couette_mesh_1 ] shows an enlargement of the mesh at the boundary corresponding to the inner cylinder , which is represented by a set of voronoi faces that follow a circular path .",
    "each one of these voronoi faces is defined by two mesh generating points located on either side of the face , one of them outside the cylinder on the fluid side , the other inside the cylinder on the side that does not contain fluid .",
    "the right - hand panel of fig .",
    "[ fig : couette_mesh_1 ] shows the same region again , but at a slightly later time . this gives a sense of how the initial cartesian mesh between the cylinders reacts to the fluid motion .",
    "since the latter is azimuthal , the mesh eventually develops an axial geometry , independent of the initially cartesian setup .",
    "our numerical experiment for this setup has the following parameters .",
    "the initial mesh as described in figs .",
    "[ fig : couette_geometry ] and  [ fig : couette_mesh_1 ] contains 3,254 points , out of which 2,644 are regular fluid cells , 250 are boundary fluid cells , 250 are solid boundary cells and 110 are unused auxiliary cells that are only put in to fill up the total mesh area to an enclosing rectangular shape , as presently required by arepo . the radial distance between the cylinders",
    "is spanned by 20 cells .",
    "the physical parameters of the couette flow are @xmath276 , @xmath277 , @xmath278 , and @xmath279 , with a dynamic viscosity coefficient set to @xmath280 .",
    "in addition , since the flow is started from rest , the pressure and density are taken to be uniform with values @xmath201 .",
    "figure  [ fig : couette_flow ] shows the time evolution of the angular velocity profile as it asymptotically converges to the steady state solution .",
    "the agreement of the numerical data points with the exact analytic solution ( eq .  [ eq : couette_analytic ] ) is exceptional at all times .",
    "finally , we show in fig .",
    "[ fig : couette_mesh_2 ] the mesh geometry at the end of the calculation .",
    "even though we have started the calculation with an initially cartesian mesh , the memory of this geometry is lost during the calculation , and the mesh dynamically adapts to the azimuthal flow structure present in this problem .",
    "the transition from a cartesian grid towards a cylindrical - like mesh can also be seen in the output sequence of the simulation shown in fig .",
    "[ fig : couette_flow ] , where the values of the radial position of the cells start to segregate into a set of radial `` bins '' .",
    "the number of these radial clusters corresponds to the average number of cells along the radial direction .    , @xmath281 , @xmath282 , @xmath283 , @xmath284 , @xmath285 , and @xmath286 we show the cell - centered values of @xmath287 , which are plotted as filled blue dots for all fluid cells in the calculation .",
    "no binning or averaging has been performed .",
    "the clustering of cell - center points as the system evolves is simply a consequence of the mesh adopting an axial symmetry in an adaptive fashion .",
    "the dashed lines give the time - dependent analytic solution of eq .",
    "( [ eq : couette_analytic ] ) at the corresponding times . the numerical results are almost indistinguishable from the exact solution .",
    "the red curve depicts the steady state solution to which the time - dependent solution eventually converges.[fig : couette_flow],width=340 ]    , width=340 ]    it is interesting to comment on the scatter of points  especially at the beginning of the simulation  as seen in the angular velocity profile of figure  [ fig : couette_flow ] .",
    "this is a reflection of the challenging initial mesh geometry .",
    "although high - order schemes  fifth or sixth order  are not sensitive to the compliance of the mesh geometry with the flow , second order schemes are . in this particular case , an axially symmetric mesh geometry would be more suitable due to the characteristics of the flow .",
    "however , the main point of this test is to show how the mesh responds to the evolution of the problem , achieving rough axisymmetry despite the unfavorable initial setup .",
    "as discussed by @xcite , our moving voronoi mesh technique needs a  quality control \" to keep cells sufficiently regular in order to avoid large errors in the spatial reconstruction .",
    "however , this modification of the mesh motion comes at a price : imagine a very strong compression along one direction ( e.g.  due to a very strong shock ) , then the mesh cells will acquire locally a high aspect ratio , which our mesh - quality control motions will try to eliminate , if needed by breaking the mesh symmetry ( cell shapes are made `` round '' through small transverse motions ) .",
    "this is what happens when we start the couette flow impulsively on a non - suitable mesh .",
    "the introduction of asymmetries in the mesh can influence the flow , in particular in situations where fluid instabilities develop ( see the kelvin helmholtz instability test in * ? ? ?",
    "* ) , where such asymmetric discretization errors can source growing perturbations .",
    "we note however that also on regular cartesian meshes similar `` grid - sourcing '' errors exists .",
    "it appears unlikely that the poorer ability of the dynamic voronoi mesh to maintain strict mesh symmetry is particularly detrimental for physical applications .",
    "we next consider the flow over a circular cylinder immersed in a wind tunnel .",
    "the geometric setup of the problem is shown in fig .  [",
    "fig : wind_tunnel ] .",
    "the flow comes from the left at a fixed horizontal velocity @xmath227 .",
    "the upper and lower boundaries are also kept at constant velocity @xmath227 .",
    "far from the cylinder , at the right end of the computational domain , we impose again an exit velocity @xmath227 .",
    "the injection and exit regions are forced to have the prescribed inflow and outflow mass fluxes at all times , something that we numerically impose through small `` buffer '' regions as labeled in fig .",
    "[ fig : wind_tunnel ] . for static cartesian grids ,",
    "this buffer region does not need to extend more than one cell in the @xmath172-direction .",
    "however , moving grids require not only the injection of momentum from the left , but also the injection of new mesh - generating points , since the wind tunnel will otherwise produce a depletion of cells at the left end as the mesh generating points drift to the right in the direction of the flow .",
    "we address this issue by letting the mesh automatically generate new cells through cell splitting , as already implemented in arepo  ( see examples in * ? ? ?",
    "* ) . in doing this ,",
    "some attention must however be paid to guarantee that the new cells reproduce the externally imposed inflow boundary conditions , which is most easily achieved with a sufficiently broad buffer region on the left end of the wind tunnel that covers the region where new cells are injected .",
    "similarly , we employ the ability of arepo  to automatically remove mesh cells to prevent them from piling up on the right end of the wind tunnel .",
    "altogether , we have created a wind tunnel that is filled with a mesh that blows with constant velocity from left to right , in a quasi - stationary state .",
    "the other geometric parameters of the test problem we simulate here are the diameter @xmath1 of the cylindrical obstacle , the width @xmath288 of the tunnel and its length @xmath289 .",
    "we have chosen @xmath290 and @xmath291 , and have scaled all length units such that @xmath292 .",
    "the flexibility of the voronoi mesh allows us to easily embed a cylindrical obstacle within the initially cartesian background grid that fills the tunnel .",
    "[ fig : cylinder_mesh ] shows how we can tailor the mesh construction to reproduce the curved surface of the cylinder , using techniques similar to those that we used for the circular couette flow problem .",
    "the physical properties of the problem are primarily determined by the external velocity of the flow , @xmath227 , and the dynamic viscosity of the fluid @xmath293 . in our numerical experiments we set the external flow velocity to @xmath294 , and combine this with constant initial pressure and density ( @xmath201 ) .",
    "we take the fluid to be described by an ideal gas equation of state with adiabatic index @xmath295 .",
    "the characteristic reynolds number of the problem can then be defined by @xmath296 where @xmath58 might however vary in time and space since the flow is fully compressible .",
    "we have performed several numerical experiments of this problem using the viscous module added to arepo . in each of these simulations ,",
    "the reynolds number is the only relevant quantity being changed .",
    "this is accomplished by changing @xmath293 exclusively , while keeping the other parameters fixed .",
    "[ fig : cylinder_mesh ] ( upper panel ) shows the initial setup for all the runs , which consist of a circular cylinder plus a cartesian background grid of @xmath297 mesh generating points .",
    "the dynamic viscosity coefficient @xmath293 takes five different values : @xmath298 , @xmath299 , @xmath300 , @xmath301 and @xmath302 .",
    "these values correspond to reynolds numbers of 2 , 10 , 20 , 40 and 60 .    for each one of the tests , we show the resulting streamlines at time @xmath303 ( or an equivalent dimensionless time of @xmath304 ) in fig .  [",
    "fig : cylinder_streamlines1 ] .",
    "below @xmath305 , the flow is steady and symmetric above and below the cylinder .",
    "as the reynolds number increases , the size of the wake behind the cylinder grows .",
    "although in this example the structure of the wake is poorly resolved , the increase in @xmath306 is accompanied by an increase of vorticity confined within the wake .",
    "( roughly @xmath297 ) .",
    "the perimeter of the cylinder is outlined by 30 cells , and its diameter is equivalent to eight cells across .",
    "the voronoi faces in between the red and grey cells define the boundary at which the no - slip condition is imposed .",
    "the lower panel shows the same region at a later time .",
    "whereas one layer of mesh - generating points surrounding the cylinder has remained stationary , the rest of the background mesh has moved downstream and transformed to a generic unstructured voronoi mesh as it moves along with the fluid .",
    "[ fig : cylinder_mesh],title=\"fig:\",width=302 ]   ( roughly @xmath297 ) .",
    "the perimeter of the cylinder is outlined by 30 cells , and its diameter is equivalent to eight cells across .",
    "the voronoi faces in between the red and grey cells define the boundary at which the no - slip condition is imposed .",
    "the lower panel shows the same region at a later time .",
    "whereas one layer of mesh - generating points surrounding the cylinder has remained stationary , the rest of the background mesh has moved downstream and transformed to a generic unstructured voronoi mesh as it moves along with the fluid .",
    "[ fig : cylinder_mesh],title=\"fig:\",width=302 ]                above @xmath305 , the wake behind the cylinder starts to become unstable .",
    "this can be clearly seen in the streamline pattern of the @xmath307 panel . as the wake becomes unstable ,",
    "the symmetry between the upper and lower portions of the domain is broken , at which point the flow becomes unsteady , such that the streamlines are no longer a valid representation of the lagrangian trajectories of fluid parcels .",
    "this marks the onset of the _ von karman vortex street _ , and the eventual transition to fully developed turbulence .",
    "to further illustrate the flexibility of the mesh construction in arepo , we can repeat this experiment with the mesh generating points set to remain static , thus recovering an eulerian grid code .",
    "in addition , we increase the resolution by a factor of four to better resolve the wake behind the cylinder . in fig .",
    "[ fig : cylinder_density ] , we show the density contrast for five different reynolds numbers . for stationary flow ,",
    "the density distribution traces the streamline topology . at @xmath308",
    ", we can appreciate how the fully developed von karman vortex street looks for a compressible gas .",
    "circular couette flow is a stable , special case of the more complex and richer three - dimensional taylor - couette flow @xcite .",
    "taylor found that when the angular velocity of the inner cylinder is increased above a certain threshold , couette flow becomes unstable .",
    "after this transition , different states have been identified , the most famous of which is the taylor vortex flow , characterized by axisymmetric toroidal vortices .",
    "the diversity of states for taylor - couette flow has been explored in the past , most notably by @xcite and @xcite .",
    "the latter work lists up to 18 different flow regimes observed in flow between independently rotating cylinders .",
    "its  andereck diagram \" , which explores the stability of the taylor - couette problem for a variety of reynolds numbers , has become the standard benchmark for computational experiments of flow between rotating cylinders .    , @xmath309 and @xmath310 fields ( fig .",
    "[ fig : taylor_couette_geometry]b and fig .",
    "[ fig : taylor_couette_velocity]).[fig : taylor_couette_mesh],width=279 ]    although the computational and experimental study of three - dimensional couette flow peaked during the 1980 s with the classical works of @xcite and @xcite , in recent years it has regained popularity ( e.g. * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "* ) mainly driven by the experimental studies of magnetized and unmagnetized rotating flows of @xcite and @xcite , which have resulted in significant progress on the characterization of the magnetorotaional instability ( mri ; * ? ? ?",
    "* ) in the laboratory .    in this section",
    ", we briefly explore the evolution of taylor - couette flow on a moving voronoi mesh .",
    "although the arepo code is not specifically designed for problems with symmetric geometries where static cylindrical meshes have proven to be more suitable , we have included this test to emphasize that our method works in three dimensions in an analogous way to the two - dimensional examples shown above .",
    "it is straightforward to extend the two - dimensional couette flow shown above to three dimensions using arepo .",
    "since the mesh is obtained from a distribution of mesh - generating points , all that is needed is to replicate the initial conditions shown in figure  [ fig : couette_flow ] in the vertical direction ( about 80 times ) to fill up a cubic box .    a standard validation for a taylor - couette simulation with azimuthal and axial periodicity may include , for example ( avila , private communication ) : obtaining perfect axial symmetry at low reynolds number ( i.e.  circular couette flow ) , followed by obtaining the first bifurcation to axially symmetric taylor vortices , and by reaching the second bifurcation to wavy vortices .",
    "these transitions occur sequentially as the angular velocity of the inner cylinder is increased while keeping the outer cylinder stationary ( see the phase diagram of @xcite ) .",
    "however , it is not the purpose of this section to explore these transitions exhaustively ; we only want to show that the third dimension works with our technique .",
    "we thus have focused on a particular configuration : counter - rotating taylor - couette flow , for which it is easy to obtain axially symmetric taylor vortices ( although these might relax back to couette flow after several rotation periods ; e.g. * ? ? ?",
    "the geometry described in fig .",
    "[ fig : couette_geometry ] is replicated in the vertical direction such that the computational domain is now a cube of dimensions @xmath311 , with periodic boundary conditions in the @xmath174-direction .",
    "the initially cartesian mesh will eventually relax in all directions as the flow evolves ( fig .",
    "[ fig : taylor_couette_mesh ] ) .",
    "the cylinder is effectively infinite , like in the two - dimensional case , except that this time there is no imposed symmetry along the @xmath174-direction .",
    "we choose the cylinder radii to be @xmath312 and @xmath277 , just like in the 2d example , and the respective angular velocities are @xmath313 @xmath314 ( counterrotating ) .",
    "the dynamic viscosity is @xmath280 and the fluid is started from rest with @xmath201 .",
    "the inner and outer reynolds numbers ( @xmath315 ; e.g. * ? ? ?",
    "* ) are @xmath316 and @xmath317 , respectively .",
    "the geometry of the problem is shown in fig .",
    "[ fig : taylor_couette_geometry]a .",
    "a vertical slice is taken at a time when the taylor vortices have developed ( the corresponding sliced mesh is shown in fig .  [",
    "fig : taylor_couette_mesh ] ) .",
    "the azimuthal velocity on that slice shows deviations from the symmetry in @xmath174 present in the circular couette regime ( fig .",
    "[ fig : taylor_couette_geometry]b ) .",
    "looking at the poloidal velocity field on that same slice ( @xmath318 and @xmath310 in fig .",
    "[ fig : taylor_couette_velocity ] ) one can appreciate , near the inner cylinder , the circular vertical motion characteristic of the taylor vortices .    in figure",
    "[ fig : taylor_couette_velocity ] , we show the velocity field of this taylor - couette experiment at time @xmath319 for two different slices of the volume : ( a ) along the @xmath172-axis , and ( b ) along the @xmath173-axis ( i.e. at @xmath320 from the first slice ) . except for the numerical noise ,",
    "the two solutions are nearly indistinguishable , evidence of a global axially symmetric taylor vortex flow ( for a very similar configuration , see fig .  3 in @xcite ) .",
    "this flow starts to develop at time @xmath321 and remains essentially unaltered for several rotation periods . at much longer time scales ,",
    "the flow would presumably decay back to a two - dimensional couette flow as seen in the roughly similar test carried out by @xcite .",
    "we have presented a new numerical approach for solving the three - dimensional , compressible ns equations on a dynamic mesh using the new astrophysical code arepo .",
    "this novel approach , an extension of the finite volume method , defines the computational mesh as a voronoi tessellation moving with the local flow .",
    "the advantages of using a dynamic voronoi mesh for transient and stationary flows under diverse boundary conditions has been addressed .",
    "the implicit adaptivity of the quasi - lagrangian mesh elements , in addition to the well - behaved topological properties of the voronoi tessellation , ensure both geometric flexibility and low numerical diffusivity .",
    "in addition , the shock capturing , second - order - accurate finite - volume scheme implemented in the rest - frame of each moving cell provides high accuracy .",
    "we have described in detail the algorithm used to estimate the viscous diffusion of momentum across inter - cell boundaries .",
    "our scheme produces smoothly varying estimates of the viscous terms , resulting in accurate and stable solutions .",
    "the method extends previously known finite - volume formulations of the ns equations with the introduction of a new reconstruction scheme that represents a compromise between the use of piece - wise constant gradients and fully consistent quadratic - reconstruction schemes .    for pure hydrodynamic flow ,",
    "the cpu time consumption of our code per timestep is typically quite a bit higher than for structured mesh codes or sph codes , for the same number of resolution elements . in three dimensions ,",
    "the factor is close to @xmath322 relative to sph ( if 64 smoothing neighbors are used ) , and up to @xmath323 relative to a cartesian mesh codes .",
    "the additional computational time goes mostly into the voronoi mesh construction overhead , which is simply not needed by a structured mesh code , and also into an enlarged computational cost for the flux computations .",
    "the latter comes about because of a larger number of faces per cell ( in 3d , there are 6 sides for a cubical cell , but for a 3d voronoi mesh , we have of order @xmath324 sides for each polyhedral cell ) .",
    "it is however important to note that other , problem - dependent factors should be taken into account when assessing the performance in practice .",
    "for example , if large bulk velocities are present , our method can take considerably larger timesteps than a corresponding fixed mesh code . also ,",
    "because the advection errors are reduced in our scheme , fewer cells are required to reach a given accuracy , so that our code can then end up being computationally more efficient .",
    "we also note that once self - gravity is included ( as in many of our primary target applications in astrophysics ) , the relative speed difference in the hydrodynamic part between the structured fixed mesh and our moving voronoi mesh becomes much less of an issue , because the cost of calculating self - gravity sufficiently accurately for arbitrary geometries substantially reduces the relative importance of the hydrodynamical cost .    as part of our study",
    ", we have verified the reliability of our new method through a series of example calculations that range from simple flows with known analytic solutions to traditional experiments of well - known quantitative behavior .",
    "the demonstrated ability of the scheme to reproduce exact solutions as a function of time , even if the flow is started impulsively from rest , is reassuring .",
    "these examples also show the flexibility of the scheme in the presence of different solid surfaces moving in diverse ways . in all of these examples ,",
    "the overall structure of the numerical scheme is identical , and the boundary conditions are set solely by the prescribed motion of the surfaces , which consist of controlled collections of voronoi cells .",
    "although we have tested the performance of arepo  in configurations possessing a high degree of symmetry , it is in complex asymmetric problems where the moving - mesh approach would show all its power .",
    "the flexibility of the lagrangian nature of the mesh will allow us to simulate , for example , complex astrophysical objects where viscosity is presumed to play a significant role .",
    "one such problem is the simulation of accretion disks around young stars .",
    "although angular momentum transport in accretion disks is attributed to turbulence ( most likely of magneto - hydrodynamic nature ) , this process is usually modeled both analytically ( e.g. * ? ? ? * ; * ? ? ? * ; * ? ? ? * ; * ? ? ? * ) as well numerically ( e.g. * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "? * just to name a few ) by laminar flow in the presence of turbulent viscosity ( boussinesq approximation to eddy viscosity ) , due to the computational cost of global models of magneto - hydrodynamic disks .",
    "another application of viscous flow is the plasma viscosity at galaxy cluster scales ( e.g. * ? ? ?",
    "* ) . however , it is likely that in such systems viscosity , as well as thermal conduction , is anisotropic ( @xcite ; see @xcite for an example ) . in such a case , the viscous stress tensor in eq .",
    "( [ eq : viscous_tensora ] ) can be easily generalized to include the up to seven independent viscosity coefficients @xcite .",
    "it will be particularly exciting to couple the local anisotropy directly to the magnetic field topology , with the latter calculated self - consistently using a recent magnetohydrodynamics implemention in arepo @xcite .",
    "its powerful flexibility will make arepo an interesting code both for astrophysical simulations of viscous flow , but potentially also in engineering applications where the ability to cope with curved and moving boundaries is particularly attractive .",
    "the simulations in this paper were run on the odyssey cluster supported by the fas science division research computing group at harvard university .",
    "we are thankful to joseph barranco , paul duffel , patrik jonsson , andrew macfadyen and debora sijacki for helpful discussions .",
    "the extrapolation of the velocity gradients ( e.g. eq .  [ eq : velocity_extrapolation ] ) requires a numerical estimate of the gradient matrix as well as an estimate for the time derivative of the gradient . for the latter ,",
    "the tensors @xmath111 and @xmath325 are needed ( eq .",
    "[ eq : euler_derivatives ] ) .",
    "both tensors depend on the cell - centered scalar quantities as well as their gradients .",
    "the values of @xmath111 are ( e.g. * ? ? ?",
    "* )          the tensor @xmath329 ( with @xmath330 and @xmath331 ) has components : @xmath332 @xmath333 @xmath334 @xmath335 @xmath336 @xmath337 @xmath338 @xmath339 @xmath340 @xmath341 @xmath342 @xmath343 @xmath344 @xmath345 @xmath346"
  ],
  "abstract_text": [
    "<S> numerous formulations of finite volume schemes for the euler and navier - stokes equations exist , but in the majority of cases they have been developed for structured and stationary meshes . in many applications , more flexible mesh geometries that can dynamically adjust to the problem at hand and move with the flow in a ( quasi ) lagrangian fashion would , however , be highly desirable , as this can allow a significant reduction of advection errors and an accurate realization of curved and moving boundary conditions . here </S>",
    "<S> we describe a novel formulation of viscous continuum hydrodynamics that solves the equations of motion on a voronoi mesh created by a set of mesh - generating points . </S>",
    "<S> the points can move in an arbitrary manner , but the most natural motion is that given by the fluid velocity itself , such that the mesh dynamically adjusts to the flow . owing to the mathematical properties of the voronoi tessellation , pathological mesh - twisting effects are avoided . </S>",
    "<S> our implementation considers the full navier - stokes equations and has been realized in the arepo  code both in 2d and 3d . </S>",
    "<S> we propose a new approach to compute accurate viscous fluxes for a dynamic voronoi mesh , and use this to formulate a finite volume solver of the navier - stokes equations . through a number of test problems , </S>",
    "<S> including circular couette flow and flow past a cylindrical obstacle , we show that our new scheme combines good accuracy with geometric flexibility , and hence promises to be competitive with other highly refined eulerian methods . </S>",
    "<S> this will in particular allow astrophysical applications of the arepo  code where physical viscosity is important , such as in the hot plasma in galaxy clusters , or for viscous accretion disk models .    </S>",
    "<S> hydrodynamics  methods : numerical . </S>"
  ]
}
{
  "article_text": [
    "in many cases krylov space solvers are the methods of choice for the inversion of large sparse matrices . while most krylov space solvers are parameter free and do not have to be tuned to a particular problem , exploiting special algebraic properties of the matrix can lead to considerable acceleration of these algorithms .",
    "a recently discussed example is given by @xmath2-hermitean matrices , e.g. @xmath3 , where the number of matrix - vector products of algorithms like qmr or bicg can be reduced by a factor of two @xcite if multiplications by @xmath2 and @xmath4 are cheap .",
    "another case which has been discussed in some detail recently is the application of krylov space solvers to shifted equations , i.e. where the solution to @xmath5 has to be calculated for a whole set of values of @xmath1 .",
    "this kind of problem arises in quark propagator calculations for qcd as well as other parts of computational physics ( see @xcite ) .",
    "it has been realized that several algorithms allow one to perform this task using only as many matrix - vector operations as the solution of the most difficult single system requires .",
    "this has been achieved for the qmr @xcite , the mr @xcite and the lanczos - implementation of the bicg method @xcite .",
    "we present here a unifying discussion of the principles to construct such algorithms and succeed in constructing shifted versions of the cg , cr , bicg and bicgstab algorithms , using only two additional vectors for each mass value . the method is also easily applicable to many other cases .",
    "the key to this construction is the observation that shifted polynomials , defined by @xmath6 where @xmath7 is the polynomial constructed in the krylov space method , are often still useful objects",
    ". since vectors generated by these shifted polynomials are simply scaled vectors of the original vectors , they are easily accessible .    in the following sections we discuss the properties and construction of shifted polynomials in several cases .",
    "we then present the shifted versions of the above mentioned algorithms and finally perform some numerical tests .",
    "our ultimate goal is to construct an algorithm for a whole trajectory of matrices @xmath8 while only applying the matrix - vector operations for the inversion of one matrix , presumably the one with the slowest convergence . in the class of krylov space solvers , one deals with residuals or iterates which are in some ways derived from polynomials @xmath9 of the matrix @xmath10 : @xmath11 we simply define the shifted polynomial @xmath12 as @xmath13 @xmath14 is determined by the normalization conditions for @xmath9 required in the algorithm .",
    "it is easy to see that we can construct solvers which generate iterates of the form @xmath15 without additional matrix - vector products for multiple values of @xmath1 since the calculation of @xmath16 can be derived from matrix - vector products of one single system .",
    "if @xmath9 is a polynomial which reduces the vector @xmath17 , e.g. which is an approximation to @xmath18 in some complex region containing the relevant eigenvalues of @xmath10 and @xmath19 , @xmath12 will be a useful polynomial , too .",
    "another class of useful polynomials are the leja - polynomials , where the roots of the polynomial are given by the leja points @xmath20 of a compact set @xmath21 in the complex plane not containing the origin implicitely defined by @xmath22 the leja points are usually not uniquely defined .",
    "the polynomial defined by @xmath23 is a good approximation of @xmath18 in @xmath21 .",
    "the application of leja polynomials to matrix inversion problems has been described in @xcite . if @xmath24 is translation invariant , e.g. @xmath25 which is for example true if k is a circle with center on the positive real axis and @xmath1 is real and positive , all leja points are translation invariant and the shifted polynomial is exactly the leja polynomial for the translated region @xmath21 .",
    "the application of leja polynomials to construct krylov space methods for the wilson matrix is currently under investigation .    in the case of formally orthogonal polynomials , which are usually generated in cg and lanczos - type algorithms",
    ", we can also see that the shifted polynomials are exactly the polynomials generated by the process for the shifted matrix . to see this , we introduce @xmath26 the lanczos polynomials @xmath27 have the property of formal orthogonality , namely @xmath28 or , for the non - hermitean process , @xmath29 for some vector @xmath30 .",
    "it should be noted that usually @xmath27 is uniquely determined up to a scalar constant ( in the case it is not uniquely determined the lanzcos process can break down @xcite ) . since @xmath31 we must have @xmath32 since @xmath33 is a formally orthogonal polynomial for @xmath10 as well .",
    "we therefore expect that the polynomials generated in cg and lanczos - type algorithms are of a shifted structure .",
    "we can indeed generate the exact processes for several values of @xmath1 using only one matrix - vector operation each iteration by calculating the shifted polynomials .",
    "in the following we will show how to calculate the parameters of the shifted polynomials from the original process in the case of the above mentioned recurrence relations .",
    "this recurrence is found in mr - type methods or in hybrid methods using mr - type iterations .",
    "we assume here that the leading coefficient is one .",
    "the polynomial is given directly as a product of its linear factors : @xmath34 to calculate the shifted polynomial , we look at a linear factor @xmath35 resulting in @xmath36 and @xmath37 the shifted polynomial is therefore given by @xmath38 if the spectrum of the matrix lies in the right half of the complex plane we can expect that all inverses of the roots lie there , too .",
    "we can then easily see that @xmath39 for @xmath40 , so that the shifted polynomial converges better than the original polynomial with a rate growing with @xmath1 .",
    "this is not surprising since we expect the condition number of the matrix @xmath8 to decrease for @xmath41 .",
    "let us construct an algorithm using this shifted polynomial .",
    "if the single update is given by @xmath42 we can generate the solutions @xmath43 by @xmath44 remarkably , if @xmath45 is generated by the minimal residual condition , this is exactly the same algorithm which was found in @xcite with a completely different approach , namely by a taylor - expansion of the residual in @xmath1 and resummation of the series .",
    "this is not completely surprising , since in the derivation in @xcite approximations were made to achieve that no additional matrix - vector products are needed and the small recursion length is kept , which automatically leads to the shifted polynomial .",
    "however , the taylor - expansion becomes prohibitively complex when applied to algorithms like bicgstab , whereas the shifted polynomial method can easily be transferred .",
    "let us now apply these ideas to the case of three - term recurrences , which usually appear in algorithms derived from the lanczos process .",
    "we look at a general three - term recurrence relation of the form @xmath46 we want to calculate the parameters of the shifted polynomial @xmath47 the equations are given by matching the parameters of @xmath48 the parameters are not completely fixed .",
    "one possible choice is @xmath49 this was realized in @xcite to construct the qmr and tfqmr method for shifted matrices .",
    "the lanczos vectors @xmath50 are in fact independent of @xmath1 .",
    "if we want to use @xmath50 directly as a residual , we impose the condition @xmath51 .",
    "this determines the parameters of the shifted polynomial : @xmath52 with @xmath53 and the initial conditions @xmath54 . for the case of the lanczos process",
    "it is easy to proof by induction that the parameters @xmath55 , @xmath56 and @xmath57 are indeed the parameters generated by the lanczos process for the matrix @xmath8 if the process does not break down .",
    "the update of the solution vector is given by @xmath58 this is basically the bioresu@xmath59-algorithm from @xcite .",
    "there the equations ( [ simple ] ) are used and an overall normalization factor is recursively determined .",
    "it should be noted that this method does not only apply to the lanczos process , but for general parameters @xmath60 , @xmath61 and @xmath62 .",
    "the shifted polynomial will then not be the polynomial generated for the shifted process , but the shifted systems still converge if @xmath63 .",
    "now let us turn to the more interesting case of coupled two - term recurrence relations .",
    "these relations have generally a superior numerical stability compared to the equivalent three - term recurrence .",
    "we look at recurrences of the cg - type form @xmath64 where the initial condition @xmath65 has been used.the method can simply be applied to a more general choice of parameters .",
    "we want to calculate the parameters needed to generate the shifted polynomial @xmath66 .",
    "unfortunately @xmath67 will generally not be a shifted polynomial .",
    "this is however not a problem , since since we can calculate @xmath68 without additional matrix - vector products from @xmath69 if the vectors @xmath70 are needed , we can reformulate the recursion as follows : @xmath71 we have @xmath72 in exact arithmetic .",
    "depending on the algorithm one or both vectors @xmath73 and @xmath74 have to be stored for all values of @xmath1 .",
    "let us calculate the parameters of the shifted process . to do this",
    ", we derive the three - term recurrence for @xmath75 : @xmath76 the parameters are given by @xmath77 with the initial conditions @xmath78 and @xmath79 .",
    "we thus find for the shifted parameters @xmath80 at the expense of calculating @xmath81 by introducing an additional vector and additional dot products , we can also calculate the shifted parameters @xmath56 and @xmath55 using the original formulae .",
    "these formulae do not only apply to the cg process , which will be demonstrated below .",
    "we have thus shown that one can implement coupled two - term recurrences for shifted matrices .",
    "we can now derive shifted versions of solvers based on these recursion relations by simply calculating the shifted parameters and using the proportionality between the shifted and original polynomials . whether we succeed in deriving the shifted algorithm without any additional matrix - vector products",
    "depends on whether matrix - vector products of vectors which are derived from polynomials which have no shifted structure are needed .",
    "in some cases we can eliminate these matrix - vector products by expressions involving other vectors .",
    "in this section we develop shifted algorithm variants of the following algorithms : cg , cr , bicg , bicgstab . in addition shifted versions of the solvers qmr , tfqmr and mr are known , so that for most popular krylov space methods shifted solvers are available . note that since tfqmr is based on cgs , the shifted version of the latter algorithm is basically also available . in table",
    "[ tab1 ] we present the currently known short recursion methods for shifted matrices with memory requirements . to avoid a proliferation of new names we propose to simply add -m to the name of an algorithm to indicate its shifted version .",
    ".[tab1 ] memory requirements and references for shifted system algorithms for unsymmetric or nonhermitean matrices .",
    "we list the number of additional vectors neccessary for @xmath82 additional values of @xmath1 ( which is independent of the use of the @xmath59-symmetry ) . [ cols=\"^,^,^,^,^\",options=\"header \" , ]     note that we can not easily generalize this method to the cgne algorithm , since @xmath83 is not generally a shifted matrix . for staggered fermions , however , we are in the lucky position that the matrix has the structure @xmath84 with @xmath85 real , so that @xmath86 is a shifted matrix",
    ". since the cg and cr algorithms are optimal for staggered fermions @xcite , we have optimal shifted algorithms available for this case . for wilson fermions the interesting algorithms",
    "are mr and bicgstab , the former due to its simple implementation and small memory requirements and the latter due to its superior performance and stability ; see e.g. @xcite .",
    "we present here a version of the cg algorithm for shifted matrices .",
    "the variants bicg and bicg@xmath59 are derived analoguosly .",
    "note that the initial guess has to be set to zero .",
    "@xmath87    0.3 cm    this algorithm is a straightforward realization of the formulae ( [ eqparbegin ] ) - ( [ eqparend ] ) .",
    "note that we need only 2 additional vectors for each value of @xmath1 even in the nonsymmetric bicg case , since we can calculate the parameters from the parameters of a single system .",
    "@xmath10 has to be chosen in a way that @xmath88 for some @xmath89 , which means that @xmath90 corresponds usually to the system with the slowest convergence .",
    "the cr algorithm is the truncated version of the generalized conjugate residual method which is a coupled two - term version of the gmres algorithm ( see @xcite and references therein ) .",
    "we formulate an algorithm which applies the shifted polynomials to the shifted matrices .",
    "the algorithm applied to the shifted matrix does in this case not necessarily generate the shifted polynomial .",
    "the structure is identical to the cg - m but the parameters are calculated differently , namely we have @xmath91 note that formulae ( [ eqparbegin])([eqparend ] ) still apply although we do not generate the lanczos polynomial .",
    "note also that we do not know a priori whether this algorithm converges for the shifted systems .",
    "this has to be checked by testing @xmath92 if @xmath10 has only eigenvalues with positive real part , we can however expect that @xmath61 is generally negative and @xmath60 positive .",
    "if we have @xmath93 we can easily see from formula ( [ eqparend ] ) that @xmath94 follows .",
    "this suggests that we can expect convergence if the zero shift corresponds to the system with the worst condition , which was confirmed in tests with the wilson fermion matrix .      in the bicgstab algorithm @xcite",
    ", we generate the following sequences @xmath95 where @xmath27 and @xmath96 are the bicg - polynomials and @xmath97 where the parameters @xmath98 are derived from a minimal residual condition . for the shifted algorithm we have @xmath99 the update of the solution",
    "has the form @xmath100 the problem is that the update of @xmath101 itself requires the calculation of @xmath102 , which straightforwardly means we have one additional matrix - vector multiplication for each value of @xmath1 .",
    "but we can use the relation @xmath103 to eliminate this matrix - vector product at the expense of one auxiliary vector to store @xmath104 .",
    "this method is safe since @xmath105 only if the algorithm breaks down anyway .",
    "the complete algorithm is then given by ( note that @xmath106 )    @xmath107    0.3 cm    the convergence of the shifted algorithms can be verified by checking that @xmath108 it is however generally advisable for all shifted algorithms to test all systems for convergence after the algorithm finishes since a loss of the condition ( [ shiftc ] ) due to roundoff errors might lead to erratic convergence .",
    "there are two major limitations to shifted algorithms which diminish their usefulness considerably .",
    "first , we have to start with the same residual for all values of @xmath1 , which means that can not have @xmath1-dependent left preconditioning .",
    "secondly , preconditioning must retain the shifted structure of the matrix . while preconditioning can reduce the computational effort it has also the important property of numerically stabilizing the inversion algorithm , which is essential to achieve convergence in many cases .",
    "a class of preconditioners which is potentially suitable for shifted systems are polynomial preconditioners .",
    "we note here that we do not expect to considerably accelerate the matrix inversion algorithms by polynomial preconditioning in the case of the wilson matrix since the polynomials generated by methods like bicgstab are already nearly optimal @xcite .",
    "we apply a preconditioning polynomial @xmath9 and solve the equation @xmath109 @xmath9 will generally depend on the shift @xmath1 , so we are looking for polynomials @xmath110 which statisfy @xmath111 and which are good preconditioners . for the linear case ,",
    "the general solution is @xmath112 where @xmath113 is an arbitrary constant .",
    "the case @xmath114 was proposed for the wilson fermion matrix in @xcite , leading to the preconditioned matrix @xmath115 which is fortunately a reasonable preconditioner for the wilson fermion matrix , so that the total work is approximately the same as for the unpreconditioned system .",
    "we lose ( for general sources ) however a factor of two compared to the usual even - odd preconditioning .",
    "we assume that generally we do not have to worry too much if @xmath110 is a good preconditioner for @xmath40 since usually these systems converge faster .",
    "problems only arise if the desired precision is close to the precision where the residuals stagnate . given a preconditioner of the form @xmath116",
    "we can calculate the preconditioner @xmath117 by requiring that ( [ condi ] ) holds , which results in a system of @xmath118 equations for the parameters @xmath119 .",
    "suitable polynomials can for example be constructed from chebychev- , leja- or gmres - polynomials .",
    "we will not examine this approach further and only apply linear preconditioners in our numerical tests .",
    "the algorithms were tested on @xmath120 quenched @xmath121 configurations at @xmath122 , fixed to coulomb gauge .",
    "we used generally 32-bit precision for the vectors and matrix and 64-bit precision for the accumulation of dot products and parameter recursions .",
    "the tests were performed on a cray t3d machine using the milc code basis and configurations .",
    "other tests of the qmr and mr methods can be found in @xcite .",
    "the set of hopping parameter values was taken from an actual heavy - light calculation with gaussian wall sources .",
    "we compared the results against t even - odd preconditioned bicgstab using the result of lower @xmath123 values as initial guesses .",
    "we also applied the methods to clover fermions on the same configurations .",
    "we performed tests for two lattices , two spin- and colorindices and sources of size 2 and 6 .",
    "we found comparable results in all cases .    in figure [ fig1 ]",
    "we show the convergence history of a sample run with wilson fermions taken from an actual production run for heavy - light systems .",
    "the method is ( averaged over our test runs ) only about 14% faster than bicgstab with continued guesses , which is due to the fact that the gap between the light mass and the heavier masses is too large .",
    "the desired accuracy was @xmath124 for the 3 heavier and @xmath125 for the lighter masses .",
    "it is easy to see , however , that this factor increases rapidly for mass values which lie closer together , since the continued guess method can not keep the total number of matrix multiplications constant in contrast to shifted methods .",
    "the method is advantageous in a specific case with @xmath118 masses ( we assume nonlocal sources here ) , if @xmath126 the first term is simply the total number of iterations using the standard algorithm , the last term is twice the number of iterations for the slowest system using a zero guess .",
    "obviously one can construct examples where this number can become very large .",
    "note that for point sources the shifted method wins another factor 2 in the wilson fermion case .",
    "we also tested the mr - m method with an overrelaxation parameter @xmath127 .",
    "while the mr algorithm performed comparably to the bicgstab algorithm in this situation , we found that the residuals of the higher mass systems stagnate at a value of @xmath128 .",
    "this problem was less pronounced on smaller lattices , so that we assume that it is connected to a loss of condition ( [ shiftc ] ) due to roundoff errors .",
    "it might however also be connected to our specific implementation .",
    "the same problem can also be seen in @xcite in figure 2 .",
    "we used the tadpole - improved value of the clover constant @xmath129 and values of @xmath123 so that the inversion takes approximately as long as in the wilson case . for the bicgstab algorithm we used the preconditioned matrix @xmath130 for bicgstab - m we used the linear preconditioner ( [ linear ] ) with @xmath114",
    "the preconditioned matrix does not separate nicely like in the wilson case , which makes however no difference in the computational effort for general sources .",
    "it does however serve its main purpose , namely to stabilize the algorithm sufficiently so that it converges in our test cases .",
    "we find that the implementation of the preconditioner is important in the sense that a violation of condition ( [ condi ] ) due to roundoff errors can lead to a stagnation of the shifted residuals .",
    "the number of iterations needed with zero initial guess is approximately the same for the bicgstab and bicgstab - m for the smallest mass which means that the linear preconditioner reduces the condition of the matrix as well as the preconditioner ( [ ilu ] ) .",
    "the further conclusions are therefore similar to the wilson fermion case . in figure [ figcl1 ]",
    "we show a convergence history for a system with clover fermions .",
    "note that we saw examples of a loss of precision in the shifted residuals which lead to early stagnation , so that it is advisable to check the residuals of the shifted systems for convergence . here",
    "the mass values lie effectively closer together and a bigger improvement can be seen .",
    "we presented a simple point of view to understand the structure of krylov space algorithms for shifted systems , allowing us to construct shifted versions of most short recurrence krylov space algorithms .",
    "we developed the shifted cg - m and cr - m algorithm which can be applied to staggered fermion calculations . since efficient preconditioners for the staggered fermion matrix",
    "are not known , a very large improvement by these algorithms can be expected .",
    "we also presented the bicgstab - m method , which , among the shifted algorithms , is the method of choice for quark propagator calculations using wilson ( and presumably also clover ) fermions if enough memory is available .",
    "it becomes available simply by extending existing bicgstab implementations .",
    "we investigated the efficiency of this method in realistic applications and found that , for sources other than point sources , the improvement depends heavily on the values of the quark masses .",
    "the improvement is generally higher for masses which lie closer together .",
    "the numerical stability of convergence of the shifted systems is found to be very good so that this method is feasible in 32-bit arithmetic .",
    "the application of this method to clover fermions is possible . using simple linear polynomial preconditioning",
    "we can stabilize the solver sufficiently even for relatively small quark masses .",
    "we proposed a way to apply higher order polynomial preconditioners to shifted matrix solvers which may be neccessary in the case of very small quark masses .",
    "roundoff errors might however in some cases affect the convergence of the shifted systems so that the final residuals have to be checked .",
    "this work was supported in part by the u.s .",
    "department of energy under grant no .",
    "de - fg02 - 91er40661 .",
    "computations were performed on the cray t3d at the san diego supercomputer center .",
    "i would like to thank s. pickels , c. mcneile and s. gottlieb for helpful discussions .",
    "van der vorst , bi - cgstab : a fast and smoothly converging variant of bi - cg for the solution of nonsymmetric linear systems , siam j. sci statist .",
    "comput . 13",
    "( 1992 ) 631 , m. h. gutknecht , variants of bicgstab for matrices with complex spectrum , siam j. sci .",
    "comput . 14",
    "( 1993 ) 1020"
  ],
  "abstract_text": [
    "<S> we investigate the application of krylov space methods to the solution of shifted linear systems of the form @xmath0 for several values of @xmath1 simultaneously , using only as many matrix - vector operations as the solution of a single system requires . </S>",
    "<S> we find a suitable description of the problem , allowing us to understand known algorithms in a common framework and developing shifted methods basing on short recurrence methods , most notably the cg and the bicgstab solvers . </S>",
    "<S> the convergence properties of these shifted solvers are well understood and the derivation of other shifted solvers is easily possible . </S>",
    "<S> the application of these methods to quark propagator calculations in quenched qcd using wilson and clover fermions is discussed and numerical examples in this framework are presented . with the shifted cg method an optimal algorithm for staggered fermions is available .    </S>",
    "<S> iuhet-353 + december 1996    0.5 cm    * krylov space solvers for shifted linear systems *    0.5 cm    beat jegerlehner 0.1 cm indiana university , department of physics + bloomington , in 47405 , u.s.a . </S>",
    "<S> 0.3 cm </S>"
  ]
}
{
  "article_text": [
    "it has been speculated that quantum computers , which harness physical phenomenon unique to quantum mechanics ( especially quantum interference and superposition ) to realize a fundamentally new mode of information processing , can overcome the limitation of classical computers in efficiently solving hard computational problems . in particular , polynomial - time algorithms have been offered to solve several np - intermediate problems by using quantum computers @xcite .",
    "a key challenge in building large - scale quantum computers is the environmental noise - more precisely , loss of quantum information due to unwanted interactions between the quantum system and its environment .",
    "this phenomenon is called _ quantum _ _ decoherence_. it has been shown that arbitrarily accurate quantum computation is possible , provided that the error per operation is below a _ threshold _ value @xcite and @xcite . in other words ,",
    "quantum error correction works if the level of imperfections and noise in quantum gate operations and measurements are below a certain _ error threshold _ and if corrections can be applied repeatedly @xcite . based on the error threshold for each quantum circuit fabric technology , an appropriate encoding technique ( such as m - level concatenated steane code @xcite )",
    "is selected to achieve fault tolerant realization of the quantum circuit .",
    "a typical quantum circuit fabric consists of a two - dimensional array of identical primitive structures ( called _ primitive cells _ in this paper ) , each structure containing some sites for generating / initializing qubits , measuring them , performing operations on one or two qubits , and channels for moving qubits or swapping their information .",
    "[ fig : fig3 ] for an example of such an array of primitive cells .",
    "unfortunately , dealing directly with this primitive cell array is very cumbersome and unwieldy .",
    "so in practice another 2-d array of super - templates ( which we call _ tiles _ ) is built .",
    "each tile comprises a number of primitive cells . instead of mapping a quantum circuit to the quantum fabric ,",
    "the quantum circuit is mapped to this tiled architecture ( see below ) .",
    "a quantum logic synthesis tool ( surveyed in reference @xcite ) generates a quantum circuit .",
    "every qubit in the output is called a _ logical qubit _ , which is subsequently encoded into several _",
    "physical qubits _ to detect and correct potential errors . to prevent the propagation of errors in the quantum circuit ,",
    "the ( reversible ) _ logic gates _ in the synthesized circuit ( which are typically , not , cnot and toffoli gates ) must be converted into ft _",
    "quantum operations_. a possible universal ( but redundant ) set of ft quantum operations includes cnot , h ( hadamard ) , t ( @xmath0/4 rotation ) , s ( phase ) , x , y and z gates .",
    "implementation of these ft quantum operations depend on the chosen error correction method .",
    "note that the set \\{cnot , h , t } constitutes a universal basis for quantum circuit realization  the other instructions are included to allow logic simplification during the process of converting the logic synthesis output to the ft quantum operation realization .",
    "a given quantum circuit fabric is natively capable of performing a universal set of one and two - qubit instructions ( also called _ native quantum instructions _ ) .",
    "this set differs among various quantum technologies ( e.g. , ion - trap vs. superconducting qubit vs. quantum dots ) .",
    "each ft quantum operation can be implemented by using a composition of these native quantum instructions .",
    "the transformation from logical gates ( which are the result of the quantum logic synthesis ) to the ft quantum operations and from the ft quantum operations to the native quantum instructions are called _",
    "ft quantum synthesis _ and _ native quantum synthesis _ , respectively .",
    "ft and native quantum syntheses are outside of the scope of the present paper .",
    "each of the ft quantum operations performs a desired function on one or two logical qubits as the input producing one or two logical qubits as the output ; each of the input qubits is encoded with some number of physical qubits .",
    "the output qubits will also be encoded . moreover , each of these ft quantum operations requires subsequent _ syndrome extraction _",
    "circuitry to detect and correct any errors ( up to a certain number ) that may have been introduced by the quantum operation itself .    based on the adopted encoding scheme , implementation of each of the ft quantum operations may require hundreds to tens of thousands of native quantum instructions .",
    "different works in the literature e.g. , @xcite and @xcite have suggested using the _ tiled quantum architecture _",
    "( tqa ) , comprised of a regular two - dimensional array of _ universal logic blocks _ ( ulbs ) to avoid dealing with this complexity .",
    "notice that each ulb in the tqa is capable of performing _ any _ ft quantum operation .",
    "ulbs are separated by routing channels , which are used to move logical qubits ( or information about these qubits ) from some source ulbs to a target ulb in the tqa . a pictorial representation of the tqa is shown in fig .",
    "[ fig : fig1 ] . the quantum structures placed at the junctions of routing channels",
    "may be thought of as _ quantum crossbars _ ( possibly with some _ qubit purification _",
    "@xcite capability ) .",
    "routing channels and quantum crossbars are also built from primitive cells .",
    "a ulb is analogous to a _",
    "configurable logic block _ ( clb ) in a field programmable logic array ( fpga ) device , in that it can implement any of a set of desired functions .",
    "moreover , the same ulb ( as identified by its unique row and column indices in the ulb array ) can be configured to perform different ft quantum operations at different times as needed .",
    "this is analogous to an _ on - the - fly - reconfigurable clb_.    trapped - ion technology is a very promising technology for implementing quantum circuits @xcite .",
    "hence , it is selected as the underlying technology for our quantum physical mapping tool .",
    "see section [ qcrep ] for more details of this technology .",
    "a trapped - ion quantum circuit fabric comprises of small quantum cells that are organized in a two - dimensional grid , similar to the tqa .",
    "although each primitive cell has the complete set of capabilities provided by the trapped - ion technology , it is not large enough to realize a complete ft operation with an acceptable latency .",
    "that is why we resort to the ulb abstraction .",
    "notice that each ulb itself is simply a fixed - size 2-d array of primitive cells , which can realize any ft operation with an acceptable latency .",
    "after appropriate high - level transformations , a quantum algorithm may be represented by a _ quantum operation dependency graph _ ( qodg ) , where nodes represent ft quantum operations and edges capture data dependencies .",
    "based on the target quantum fabric and error threshold , a particular quantum coding scheme is selected , and subsequently , a high - level tool maps the qodg into a tqa , where each ulb ( tile ) in this architecture can implement any desired one or two - input quantum operation in a fault - tolerant way . the latency of the quantum algorithm mapped to the tqa can be calculated as the length of the longest path in the qodg , where the length of an input - output path in the qodg is the summation of operation latencies plus routing latencies .",
    "the operation latencies are dependent on how precisely the required operation is realized within a ulb .",
    "this realization comprises static provisioning ( setting the size of the ulb in terms of an array of primitive structures in the target quantum fabric ) and mapping of the target operation into the ulb . on the other hand ,",
    "the routing latencies are dependent on how long it takes for the logical qubits to move from source ulbs to a target ulb to perform the ft quantum operation .",
    "the routing latency , which depends on the actual move distances and the latency of moving a qubit through some link in the tqa , is highly sensitive to ulb size , operation placement , and qubit routing on the tqa .",
    "the focus of this paper is on finding the optimal ulb size for the tqa in the trapped - ion technology .",
    "the most important part of ulb design is to minimize the operation latency for a fixed ulb size by optimally mapping the quantum instructions to the underlying quantum fabric .",
    "this action is called _ quantum physical mapping_. the quantum physical mapping procedure is decomposed into three sub - procedures : ( a ) quantum instruction scheduling , ( b ) quantum instruction placement , and ( c ) dynamic qubit routing .",
    "next , based on operation usage frequencies in the target quantum algorithm and the average movement of logical qubits per operation in the tqa , the optimal size of the ulb is determined .",
    "each quantum fault - tolerant operation and its required syndrome extraction circuit can be modeled by a _ quantum instruction dependency graph _ ( or qidg ) .",
    "a qidg for an ft quantum operation is what a qodg is to a quantum algorithm . as an example",
    ", a cnot operation between two physical qubits may be implemented by using more than one native quantum instructions in the trapped - ion technology . moreover ,",
    "this number of native quantum instructions is multiplied by a factor of seven if 7-qubit steane code [ [ 7,1,3 ] ] is used to implement the cnot in a fault - tolerant manner .",
    "adding syndrome extraction circuit for logical qubits increases the number of native quantum instructions even more .",
    "these numbers are far larger in the case of more complex ( i.e. , non - transversal ) ft quantum operations such as t operation in the [ [ 7,1,3 ] ] steane code , or more complex quantum encoding schemes such as the _ concatenated _ 7-qubit steane code .",
    "different solutions for quantum physical mapping are introduced in the literature  see for example , @xcite . in this work",
    ", an iterative approach is proposed to schedule and place the instructions on quantum fabric to capture the relation between scheduling level of the instructions , instruction placement solution and qubit routing latencies .",
    "the proposed algorithms in each step are based on the state - of - the - art scheduling and placement solutions adding the unique characteristics of the quantum instructions scheduling and placement . to capture the quantum no - cloning theorem that forbids fan - out in quantum circuits ,",
    "a pre - processing step is implemented on the qidg to resolve the multiple read dependencies between instructions by adding auxiliary edges between them considering the criticality factor of each instruction .",
    "a force - directed instruction scheduling approach is used as the scheduling algorithm to minimize the contention , i.e. the number of concurrent quantum instructions , and hence reduces the routing latency due to congestion among qubits .",
    "quantum instructions can only be executed at specific locations on the quantum circuit fabric called _",
    "interaction wells_. the placement of the instructions in these interaction wells affects their start time due to the qubit routing latencies .",
    "hence , we present a placement approach based on a state - of - the - art placement engine with adaptive re - levelization of the operations .",
    "more precisely , the placement algorithm calls the quantum instruction scheduler several times to update the scheduling levels of instructions based on the current quantum placement solution .",
    "these algorithms are implemented as part of a quantum cad tool called _ quantum ulb factory designer _ ( qufd ) .    to evaluate the performance of the proposed quantum instruction scheduling and placement algorithms , a quantum fabric emulator including a greedy router is developed .",
    "the result of the proposed algorithms with respect to previous work is evaluated . on average ,",
    "40% improvement with respect to the state - of - the - art quantum mapper is observed .",
    "moreover , considering toffoli profiling information , the best aspect ratio for a ulb to achieve the best latency is calculated and explained in the experimental section .",
    "the remainder of this paper is organized as follows .",
    "reviews of the most relevant prior work are presented in section [ prior ] .",
    "background on the quantum circuit representation and trapped - ion fabric is presented in section [ qcrep ] .",
    "the proposed flow for ulb design is presented in section [ cadflow ] .",
    "quantum physical mapping tool is discussed in section [ physicalmapping ] .",
    "quantum instruction scheduling and placement problem formulation and proposed algorithms are presented in sections [ sched ] and [ placement ] .",
    "experimental results are presented in section [ results ] and the paper is concluded in section [ concl ] .",
    "qufd is not the first tool of its kind , but it dramatically improves the performance of existing tools .",
    "the rest of this section gives a survey on previous quantum physical design tools and summarizes the contributions and unique features of qufd compared to the prior art .",
    "balensiefer et al .",
    "@xcite developed quale , a tool for designing microarchitectures for trapped - ion quantum computers .",
    "this tool employs as late as possible scheduling on qodg , greedy qubit placement , and pathfinder @xcite based routing .",
    "the key disadvantage of the proposed placement in @xcite is that it is independent of the structure of the given qodg .",
    "hence , two qubits that have a lot of interactions may be placed far from each other .",
    "this increases the routing cost of bringing the two qubits together to perform the required gate level operations .",
    "moreover , it increases the congestion in the routing channels .",
    "qpos @xcite uses a similar flow as quale , but distinguishes between the source and destination operands of a two - qubit instruction during the routing step .",
    "this tool employs a combination of list scheduling and as soon as possible scheduling methods for quantum instruction scheduling and a priority - based routing algorithm for qubit routing .",
    "reference @xcite tweaks qpos by creating a priority queue for instructions based on the total delay of their dependent instructions .",
    "reference @xcite develops a quantum mapping tool and compares different architectures for quantum fabrics .",
    "the main focus of @xcite is to improve the quality of high - level mapper .",
    "however , it lacks the aggressive optimization aspect of tile ( ulb ) design .",
    "we believe that this optimization dramatically affects the total latency of the final quantum circuit .",
    "reference @xcite discusses the notion of the classical and quantum placement including differences and similarities .",
    "the authors propose heuristics to place the quantum instructions and route the qubits by applying the swap instruction to minimize the total latency of the quantum circuit .",
    "the proposed heuristics in @xcite consider fixed instruction scheduling solution and does not consider the global instruction placement solution .",
    "fixed instruction scheduling means the order of instructions are determined before determining the placement and routing solutions which limits the effect of scheduling algorithm solution on the circuit s latency .",
    "moreover , considering the global placement solution reduces the possibility of being trapped in a local optimum .",
    "reference @xcite proposes a physical synthesis flow for ancillary qubit selection to reduce the total latency of the quantum physical mapping .",
    "this work is focused on changing the design of the fabric to decrease the circuit latency ( similar to @xcite ) .",
    "a mapping tool for trapped - ion technology , called qspr , is proposed in @xcite .",
    "this tool supports ion multiplexing in the trapped - ion technology ; it offers a more optimized global placement of the qubits on the quantum circuit fabric by using an iterative placement approach based on forward and backward computations in a qidg ; and it improves the routing solution by simultaneously moving the source and destination qubits toward a designated site .",
    "it provides about 41% improvement over quale .",
    "we consider this mapping tool the - state - of - the art technique and compare our results with it .",
    "the proposed greedy method for instruction placement in this approach can not decrease the latency in large quantum circuits because the impact of initial optimized qubit placement fades after running of few instructions ; in other words , qubit placement can only enhance the routing delay for some of the first instructions and has no effect on later instructions .    the proposed quantum physical mapper and ulb designer in our work aim to automate ulb design in quantum mapping tools to decrease the total latency of the quantum circuit realization as much as possible .",
    "the proposed quantum physical mapper considers the effect of the routing time on quantum instruction scheduling and placement and presents a cross - layer optimization between these solutions to minimize the latency .",
    "in addition , the proposed offline method to optimize the ulb size considering the logical qubit routing times and operation repetition frequency on the critical path of the quantum circuit is not discussed in the prior art .",
    "quantum circuits can be composed in quantum assembly ( qasm ) language @xcite , which provides a compact way of representing quantum circuits .",
    "qasm is a low - level quantum language that does not support complex control and data structures like arrays , loops , conditionals , etc .    as an example of a quantum circuit , fig .",
    "[ fig : fig2a ] shows a circuit for preparing logical zero using steane code [ [ 7,1,3 ] ] ( the output is shown as @xmath1 ) . note that in this circuit , qubits are initialized to @xmath2 .",
    "each qubit participates in several one- and two - qubit operations .",
    "seven physical qubits at the output of the circuit represent a bundled logical qubit .",
    "[ fig : fig2b ] shows the qasm description of this encoding circuit .",
    "the first part of the qasm file describes the complete set of qubits involved in the circuit and their initial state , e.g. @xmath2 , @xmath3 , @xmath4 or @xmath5 .",
    "the second part of the qasm file describes the quantum operations based on their execution order .",
    "operations having no dependency , e.g. h q0 and h q1 , can be added to the file with any ordering . in each line ,",
    "the operation type , e.g. cnot , is followed by the qubit(s ) involved in the operation .",
    "if two qubits are involved in the operation , the first mentioned qubit determines the _ control qubit _ and the second one determines the _ target qubit_. the qidg for the circuit is built from this qasm description after applying quantum fabric synthesis .    0.4 ] , ( b ) qasm program description of the logical zero preparation circuit , title=\"fig : \" ]       0.2    [ cols=\">,<\",options=\"header \" , ]     [ table : toffolitable ]    note that operations 7.b , 9.a , 10.a and 10.c are not part of the critical path of this circuit .",
    "as can be seen , the total latency of the critical path of the circuit is @xmath6 . in section [ results ] , after finding the latency for each ft operation as a function of the ulb size , the value of the toffoli gate latency is reported as a function @xmath7 and the best ulb size is chosen .",
    "[ fig : fig5 ] shows the qufd ulb sizing flow . in this flow",
    ", the smallest ulb size is set by the size required for the most complex operation circuit that needs to be mapped to the quantum fabric ( this is typically a non - transversal gate operation ) .",
    "as the ulb size increases , the resource contention decreases ( i.e. , there is less routing resource contention and thus potentially shorter waiting times to access routing channels during the dynamic routing step ) ; however , the intra - ulb routes become longer , and hence , routing latencies may actually become higher . from another perspective , increasing the ulb size increases the inter - ulb routing latency .",
    "in practice , there is an optimum ulb size that minimizes the aforesaid cost function in [ formula1 ] .",
    "the proposed ulb sizing flow is an offline process to generate the tiles that comprise the tqa and the gate library that is used by the quantum physical mapper .",
    "considering this fact , long run - time for this process does not raise a problem .",
    "moreover , the number of ulb sizes explored to find the optimal @xmath7 is finite considering the fact that beyond a certain ulb size , increasing the ulb size does not positively affect the mapped circuit latency .",
    "the quantum physical mapper converts a quantum circuit to a list of low - level control commands by specifying the exact qubit movements and instruction execution times .",
    "quantum physical mapping problem includes scheduling , placement and routing sub - problems .",
    "the scheduling step determines the order of instruction execution , the placement step determines locations of qubits at the beginning and end of each operation as well as the location for each instruction execution , while the routing step determines the qubit location at movement times .",
    "qubit movement latency is a big part of the quantum circuit latency .",
    "therefore , the routing latency ( which is a function of instruction placement and channel congestion ) must be included in the decision making procedure for scheduling and placement problems . to account for routing latency in scheduling and placement steps , routing latency estimates based on the physical distance between interaction wells are used .",
    "physical distance is different from manhattan distance because it is the shortest path between two wells going through movement channels .",
    "hence , it is equal or longer than manhattan distance .    to explain the concurrent scheduling and placement problem in quantum physical mapper and the similarities and differences between this problem and scheduling and placement problem in the traditional vlsi cad field , we consider two scenarios . in the first scenario , each instruction is executed in a unique interaction well and in the second scenario ,",
    "more than one instruction can be executed in one interaction well as long as their execution times do not overlap .    *",
    "first scenario * : interaction wells in this scenario are similar to gates or transistors in vlsi circuits with the difference that there are shared connectors ( channels ) between interaction wells in the quantum fabric in place of dedicated connectors ( point - to - point wires ) in the vlsi circuits . considering the large channel capacity in the quantum fabric , we can ignore the effect of routing resource contention in this scenario . under this assumption ,",
    "the best scheduling policy is the _ as soon as possible schedule_. moreover , the placement problem in this scenario is similar to vlsi timing - driven placement problems .",
    "the goal of the optimization is to minimize the total added latency to the critical path of the quantum circuit .    *",
    "second scenario * : sharing interaction wells between instructions complicates the scheduling and placement problems .",
    "the scheduling and placement problems can thus be seen as a 3-dimensional placement problem with time as the third dimension .",
    "in addition to the constraint of no - overlap between execution times of instructions placed at the same interaction well , placing instructions along the time axis must satisfy the instruction dependency constraints .",
    "the resulting circuit latency and area in this scenario are much smaller than those of the first scenario .    to simplify the placement problem , we consider discrete start times for instruction executions .",
    "an example of the scheduling and placement solution for this scenario is shown in fig .",
    "[ fig : fig6a ] , where _ es@xmath8 _ , _ ef@xmath8 _ and _ f@xmath8 _ denote the expected start time , expected finish time , and actual finish time of the instructions in time slot _ t _ , respectively . moreover ,",
    "_ i@xmath9 _ to _ i@xmath10 _ indicate the interaction wells on the quantum fabric ; numbers in rectangles show the routing times of the operand qubits , and horizontal arrows represent the execution latencies of instructions . instructions with dark color belong to the first scheduling level whereas instructions with white background belong to the second scheduling level .            as can be seen in fig .",
    "[ fig : fig6a ] , considering synchronized start time for qubit routing in each scheduling level ( _ es@xmath9 _ for level 1 and _ f@xmath9 _ for level 2 ) leads to inefficient use of resources and increases the circuit latency . to solve this problem ,",
    "if instructions are started as soon as their qubits and the host interaction well become ready , the total latency of the circuit is lowered as shown in fig .",
    "[ fig : fig6b ] .",
    "this scheme has commonly been used in previous work such as @xcite .",
    "unfortunately , this modification decreases the predictability of start times for instruction executions .",
    "more precisely , this scheduling contradicts the assumption about separation of scheduling and placement steps because it makes it possible for two instructions that have statically been scheduled in two different time slots to overlap in the actual schedule of the circuit due to changes to routing latencies .",
    "furthermore , placing instructions on the circuit fabric based on the instruction level has an underlying assumption about the stop time of the previous - level instructions .",
    "this assumption does not hold if the instructions are scheduled as soon as their qubits and interaction wells are ready .",
    "an example of this case is shown in fig .",
    "[ fig : fig7a ] . as can be seen ,",
    "the second scheduling level instructions that are placed in the interaction wells hosting instructions 2 and 6 in the first scheduling level ( @xmath11 and @xmath12 ) are deferred .",
    "if the placement module had been aware of this situation , instructions 8 and 10 would have been placed on other interaction wells to lower their finish times .    to be able to predict the actual instruction execution times in the scheduling and placement step ,",
    "our approach calculates the estimated start time of each instruction and if the estimated start time exceeds a start time threshold ( shown by @xmath13 in fig .",
    "[ fig : fig7a ] and calculated as the middle point of @xmath14 and @xmath15 ) , the instruction will be deferred and the scheduling and placement solutions are modified .",
    "an example of this modification is shown fig . [ fig : fig7b ] . as can be seen",
    ", this modification reduces the total latency of these ten instructions .",
    "details of the proposed scheduling and placement solutions are presented in sections [ sched ] and [ placement ] , respectively .",
    "the first step of the quantum physical mapper is _",
    "loose scheduling_. the goal of this step is to assign each instruction to a scheduling level ( or time slot ) to minimize the total latency of the circuit subject to dependency and resource availability constraints .",
    "all instructions assigned to one scheduling level can be executed simultaneously .",
    "this step is called loose because it does not consider the routing latencies when scheduling the instructions . to modify the scheduling solution based on placement decisions ,",
    "a part of this scheduling step is iteratively called during the placement procedure .",
    "the input to the scheduling procedure is a qidg , which is a _ directed acyclic graph _ , capturing the dependencies between instructions specified in the qasm file .",
    "each node of this graph is a native quantum instruction , i.e. , it can be performed in one step in an interaction well in the trapped - ion quantum circuit fabric .",
    "two instructions are dependent if any of these conditions hold :    1 .",
    "the target qubit of instruction a is used as the control qubit of instruction b ( read after write ( raw ) dependency ) 2 .",
    "the target qubit of instruction a is used as the target qubit of instruction b ( write after write ( waw ) dependency ) 3 .",
    "the control qubit of instruction a is used as the target qubit of instruction b ( write after read ( war ) dependency ) .",
    "each dependency is shown using a directed edge from the vertex representing instruction a to the vertex representing instruction b. fig .",
    "[ fig : fig8 ] shows an example of qidg for the quantum circuit presented in fig .",
    "[ fig : fig2a ] .    ,",
    "scaledwidth=40.0% ]    each instruction and each qubit in the qidg are identified by unique identifiers , represented by index @xmath16 and @xmath17 respectively . in the qidg",
    ", nodes with the same parent instruction are called _ sibling instructions_. these instructions are two - qubit instructions that share the same control qubit .    due to the _ no - cloning theorem _ @xcite , only one copy of each qubit can exist in the circuit .",
    "more precisely , only one instruction can access a qubit at each point in time .",
    "so , if one qubit needs to be accessed by sibling instructions , e.g. qubit q0 in instructions 4 and 7 in fig .",
    "[ fig : fig8 ] , those instructions can not be executed at the same time .",
    "based on the assumption that all instructions in one scheduling level can be executed simultaneously , at most one instruction from each sibling instruction set can be placed in one scheduling level .",
    "therefore , an ordering should be imposed among sibling instructions to be able to schedule the instructions without additional restrictions .    to order the sibling instructions , we add _ auxiliary edges _ between them .",
    "note that adding these auxiliary edges may increase the critical path length .",
    "hence , this process should be done carefully .",
    "from another perspective , the number of instructions at each scheduling level is limited by the number of available interaction wells in the ulb .",
    "the minimum latency qidg scheduling problem ( called _ quantum instruction scheduling problem _ or qisp ) with the assumption of the same execution length for every instruction may be formulated as follows :    @xmath18    where @xmath19 and @xmath20 denote the sets of _ parent _ and _ sibling instructions _ for instruction @xmath16 , respectively ; @xmath21 denotes the start time of instruction @xmath16 ; _ l _ , which stands for latency , is defined as the time when the last instruction starts its execution ; @xmath22 denotes the maximum number of concurrent instructions at each time .",
    "parameter @xmath23 is the scheduling parameter , which is equal to one if instruction @xmath16 starts from level _",
    "l _ ; otherwise it is _ _ zero .",
    "equation relates the start time of an instruction to the scheduling parameter ( @xmath23 ) .",
    "constraint forces an instruction to have only one starting time .",
    "constraint captures the dependency constraints in the qidg .",
    "constraint captures the fact that sibling instructions can not be scheduled at the same time .",
    "constraint enforces the limit on the number of concurrent instructions at each scheduling level .",
    "qisp is an integer linear programming ( ilp ) problem .",
    "in fact , qisp is a _ resource - constrained scheduling _",
    "problem @xcite with one important difference . in qisp , in addition to the limit on the total number of processing elements in each scheduling level ( cf .",
    "constraint ) , the number of processing elements that can be used for sibling instructions is limited to one ( cf .",
    "constraint ) .",
    "our solution to qisp decomposes the problem into two steps : ( i ) a pre - processing step based on the _ list scheduling _",
    "algorithm @xcite is applied to the qidg to _ totally order _ the sibling instructions ; ( ii ) an enhanced version of the well - known _ force - directed scheduling _",
    "algorithm @xcite is applied to the modified qidg so as to minimize a cost function which is a function of the number of scheduling levels and the number of concurrent instructions per scheduling level .",
    "details are provided below .",
    "the goal of the pre - processing step is to impose a total ordering on the sibling instructions to avoid any violations of constraint during the scheduling process .",
    "a well - known approach for solving the resource - constrained scheduling problem is the list scheduling algorithm @xcite , which is reviewed in the next paragraph .",
    "first , _ as soon as possible _ ( asap ) and",
    "_ as late as possible _",
    "( alap ) schedules for a given task dependency graph are constructed .",
    "the difference between levels of an instruction in the asap and alap schedules , which is called _ mobility _ , sets the priority of an instruction in scheduling with respect to the other instructions ( that is , less mobile instructions have higher priority to be scheduled first ) . to schedule the instructions based on this approach ,",
    "starting from the first level of instructions in the asap schedule , if a resource constraint is violated , an instruction with the highest mobility ( least priority ) will be picked and delayed by one scheduling level .",
    "while the resource constraint is violated , this process continues .",
    "this process is repeated for the next level and continues until all conflicts are resolved .",
    "the motivation behind this greedy heuristic is that the instruction with higher mobility can be delayed without adversely affecting the overall execution latency .",
    "algorithm [ alg : pre ] provides the pseudo - code for the pre - processing step of the scheduling solution , which is based on list scheduling algorithm .",
    "one of the difficulties in qisp is that the length of the critical path that determines the instruction mobilities is not known _ a priori _ because the sibling instructions have not been ordered yet .",
    "therefore , new asap and alap schedules are determined in each step based on the modified qidg ( namely , current partial ordering of the sibling instructions ) .",
    "let @xmath24 , @xmath25 , and @xmath26 denote the scheduling level , asap level , and alap level of instruction _",
    "i_. asap and alap levels of each instruction along with the priority values ( i.e. , @xmath27 ) are calculated in the first iteration .",
    "starting from the set of instructions with @xmath28 , an instruction with the highest priority among siblings that have an asap level equal to zero is selected .",
    "this instruction is added as a parent for its sibling instructions with the same or higher asap level . note that this selection fixes the instruction with the least mobility and moves its sibling instructions to the next levels in contrast to the list scheduling that repeatedly defers the instruction with the highest mobility until the resource constraint is satisfied . in this special problem ,",
    "these approaches have the same results ( with lower complexity for our algorithm ) , because the number of allowed sibling instructions in each scheduling level is only one .",
    "after these modifications , asap and alap and priority metrics are recalculated .",
    "if constraint is no longer violated for the selected set of instructions , the set of instructions with @xmath29 will be selected and the process of adding edges will be repeated .",
    "this process is continued for all the asap levels or until all required edges are added to the qidg .",
    "compute @xmath25 , @xmath26 and @xmath30 + @xmath31 and @xmath32 , @xmath33 //target asap @xmath34 @xmath35 @xmath36 , @xmath37 @xmath38 @xmath39 * break * @xmath40 ; compute @xmath25 , @xmath26 and @xmath41 + @xmath31 and @xmath32    applying this pre - processing step to the qidg of fig .",
    "[ fig : fig8 ] results in the qidg of fig . [ fig : fig9a ] . dashed ( red ) edges in this figure show the added auxiliary edges .    0.3   after preprocessing , ( b ) example of scheduled instructions , title=\"fig:\",scaledwidth=90.0% ]       0.3   after preprocessing , ( b ) example of scheduled instructions , title=\"fig:\",scaledwidth=90.0% ]",
    "the number of quantum instructions being executed at the same time is upper bounded by the number of available interaction wells in the ulb .",
    "this bound is captured in constraint of the qisp formulation .",
    "although increasing the number of concurrent instructions in each scheduling level tends to decrease the number of scheduling levels , it may increase the total latency of the circuit as explained next . recall that the number of concurrent instructions in each scheduling level greatly affects the placement solution , routing delays , and thus , the latency of the quantum circuit .",
    "an instruction can not be executed until its qubit operands arrive at the host interaction well .",
    "the routing time of a qubit is defined as the difference between the arrival time of the qubit in the case of one - qubit instructions ( or that of the last arriving qubit in the case of two - qubit instructions ) and the time when the instruction was scheduled to be performed .",
    "the routing time is a function of the specific route selected for the operand qubit(s ) and the wait ( stall ) time of the qubit during the routing due to the congestion ( shared resource contention ) . increasing the number of concurrent instructions forces some instructions to be placed in interaction wells that are far from the interaction wells that are hosting their parent instructions .",
    "moreover , increasing the number of concurrent instructions results in an increase in the number of qubits that need to be simultaneously routed .",
    "in addition to the effect of longer routes on the routing time , higher number of routed qubits increases congestion , and thus , increases the wait ( stall ) time .",
    "evidently , increasing the number of concurrent instructions may delay the start of instruction execution times , and thereby , adversely affect the total latency of the quantum circuit .",
    "therefore , to reduce the total latency of a quantum circuit , we must minimize the number of scheduling levels and evenly distribute concurrent instructions among all scheduling levels .",
    "this is a multi - objective optimization problem . to solve it , a modified version of the well - known force - directed scheduling ( fds ) technique @xcite is used as detailed below .",
    "fds is a technique used to schedule directed acyclic graphs so as to minimize the resource usage under a latency constraint in a shared resource system .",
    "the algorithm consists of three steps : ( i ) determine the range of available time slots for scheduling an instruction ; ( ii ) create a distribution graph , which captures the resource pressures on each time slot , by assuming that an instruction is equally likely to be scheduled to start in any feasible time slot ; ( iii ) a metric called _ force _ is defined to minimize the resource utilization . by repeatedly assigning instructions to all possible time slots and calculating the force associated with the assignment",
    ", several force values will be calculated . the instruction - to - time slot assignment with the lowest force value",
    "is chosen , which also balances the instruction concurrencies ( i.e. , reduces resource pressure ) .",
    "the first goal of the quantum instruction scheduling is to minimize the number of concurrent instructions at each scheduling level .",
    "the second goal is to minimize the number of scheduling levels . to capture both of these goals in our scheduling method",
    ", we use a latency - constrained fds technique which tries to evenly distribute the instructions with fixed circuit latency with the addition of a fixed bound ( @xmath42 ) on the number of concurrent instructions at each scheduling level . for this reason , after assigning an instruction to a scheduling level , the number of instructions assigned to that scheduling level is incremented by one .",
    "when this number reaches @xmath42 , no new instruction is assigned to the scheduling level . based this fact ,",
    "assignment probabilities in the fds technique are updated .",
    "if an instruction @xmath16 is found to have no possible scheduling level assignment ( @xmath43 ) , the number of scheduling levels will be incremented by one and the assignment probabilities for the unassigned instructions will be re - calculated .",
    "this process continues until all instructions are scheduled .",
    "notice that there is a hard global limit on the number of concurrent instructions in each scheduling level , which is @xmath22 .",
    "our simulation results show that considering a limit less than this global value may decrease the total circuit latency due to a decrease in the routing latency in each scheduling level .",
    "therefore , the scheduling process must be repeated for a few different @xmath44 values and the best result ( after final routing ) chosen . in this paper , five different values for @xmath42",
    "are considered : @xmath45 where @xmath46 .",
    "as mentioned in previous sections , the placement solution affects routing latencies , and hence , the start times of instructions .",
    "this fact motivates the development of a cross - layer optimization approach spanning the scheduling and placement steps in the quantum physical mapper . the proposed placement algorithm in this section",
    "is based on the state - of - the - art placement algorithm for placing logic gates in 2-d layouts .",
    "modifications are made to account for the cross - later optimization issue .",
    "the placement solution is an iterative solution , which targets instructions in some scheduling level in each of its iterations .",
    "more precisely , at iteration @xmath47 , considering placement solution for instructions in scheduling levels @xmath48 to @xmath49 has already been obtained , a global instruction placement problem is formulated as a quadratic programming problem and solved by using a quadratic program solver .",
    "after this step , a host interaction well is determined for each instruction .",
    "next , the _ approximate start time _ for each instruction in scheduling level @xmath47 is calculated based on the fixed placement of its parent instructions and static routing latencies .",
    "if an instruction can not satisfy the start time requirement of scheduling level @xmath47 , it will be deferred by one scheduling level .",
    "then , the force - directed scheduling algorithm is applied to determine the best scheduling solution based on the new deferrals . after applying the scheduling algorithm ,",
    "the quadratic program solver is applied to the placement problem with new scheduling levels for instructions to obtain ( and freeze ) the placement solution for instructions in scheduling level @xmath47 .    in this section , details of this procedure",
    "are presented .",
    "first , a mathematical formulation of the placement problem is given .",
    "next , a solution without considering the effect of the placement on the scheduling solution is discussed , and , in the end , revisions to the algorithm in order to consider the effect of the routing latencies and placement solution on the scheduling solution are described .",
    "the ratio of the qubit movement latency to the instruction latency shows the importance of the routing latency in a quantum fabric realization .",
    "for example , in fig .",
    "[ fig : fig3 ] the minimum manhattan distance between two interaction wells is 10 .",
    "considering 1/10 as the ratio of single move latency to the two - qubit instruction latency according to @xcite , the minimum routing latency is as large as the latency of performing one instruction , which underlines the importance of the routing latency .",
    "similar to routing steps , routing latency can be divided into two components : 1 ) _ static routing latency _ , and , 2 ) _ dynamic routing latency_. the static routing latency is related to the manhattan distance between two interaction wells whereas the dynamic routing latency is related to stall times of the qubit in channels due to transient saturation of the channel capacities .",
    "the dynamic behavior of the routing latency is hard to predict in a fully analytical way . in other words ,",
    "the quantum circuit should in fact be simulated in order to determine the dynamic routing latency .",
    "based on this line of reasoning , only static routing latency is considered in the quantum instruction placement formulation .",
    "there are two types of qubits in the circuit : 1 ) _ i / o qubits _ , and , 2 ) _ ancillary qubits_. i / o qubits enter and exit ulbs from specified locations whereas ancillary qubits are created , consumed and then purified to be used again for other instructions .",
    "let @xmath50 , @xmath51 and @xmath52 denote the set of ancillary , i / o and all qubits in the qidg , respectively .",
    "similarly , @xmath53 , @xmath54 and @xmath55 denote the set of operand ancillary , i / o and all qubits of instruction @xmath16 , respectively .",
    "the scheduling level and the parent set for each quantum instruction are determined in the quantum instruction scheduling step . in the quantum instruction placement step , each instruction should be assigned to some interaction well considering its scheduling level .",
    "recall that the placement solution determines the routing latency for each qubit movement , which can change the scheduling level of instructions , and subsequently , affects the start time of the quantum instructions .",
    "the _ quantum instruction placement problem _ ( qipp ) can be formulated as follows :    @xmath56    where @xmath57 denotes the time when qubit _ q _ arrives at its output location after finishing the last instruction , @xmath58 , @xmath59 and @xmath60 denote the set of locations of the interaction , creation wells and input / output ports in the circuit , respectively , @xmath61 is the latency of the @xmath62 instruction , @xmath63 is the static routing latency between the interaction well @xmath64 and @xmath65 , @xmath66 denotes the static routing time from the creation well ( or input port ) @xmath67 to the interaction well @xmath68 , and @xmath69 is an assignment parameter that determines if the instruction is assigned to an interaction well ( when it is equal to 1 ) or not ( when 0 ) .",
    "similarly , @xmath70 denotes an assignment parameter that determines if the qubit is assigned to a creation well ( or input port ) or not . for input qubits ,",
    "this parameter is fixed .",
    "parameters @xmath69 , @xmath70 and @xmath21 are the optimization parameters in the qipp . note that the result of the quantum instruction scheduling can not determine the exact timing of the instructions and can only determine the order of dependent instructions .",
    "the gaol in qipp is to minimize the total latency in the quantum circuit .",
    "constraint determines the earliest start time of each instruction based on the start time , static routing time and latency of its parent instructions .",
    "constraint determines the earliest start time of the quantum instruction that accesses qubit(s ) for the first time .",
    "constraint determines the time when qubits arrive at their output locations after finishing the last instructions .",
    "constraint limits the number of concurrent instructions that can be executed at each interaction well to one .",
    "constraints and define the binary assignment parameters .",
    "qipp is a non - linear , mixed - integer problem .",
    "from another perspective , qipp is a timing - driven 3d placement problem .",
    "the first two dimensions correspond to the x and y dimensions of the quantum fabric whereas the third dimension represents time . in a regular placement problem ,",
    "the overlap between different placement objects is not acceptable , but in qipp , the physical overlap is acceptable as long as the execution times of different instructions do not coincide . a sample instruction placement solution for the qidg shown in fig .",
    "[ fig : fig9b ] is depicted in fig .",
    "[ fig : fig10 ] .",
    "each rectangular cube represents an instruction placed at an interaction well on the ulb .",
    "longer rectangular cubes represent two instructions placed at an interaction well in two consecutive scheduling times .",
    ", scaledwidth=70.0% ]    in this paper , to manage the problem complexity , time is discretized .",
    "the duration of each time slot ( _ d _ ) is considered to be the latency of the fastest instruction such as a rotation operation . also to solve the timing - driven placement , a net - weighting technique",
    "is employed @xcite .",
    "details of the problem formulation and the algorithm are presented next .",
    "considering fixed instruction levels based on the result of the quantum instruction scheduling step , the qipp can be simplified to placing instructions on interaction wells such that there are no overlaps among instructions with the same scheduling level .",
    "note that the routing latency of instructions may delay instructions from their original scheduled time .",
    "thus , minimizing the routing latencies can decrease the time shifts and eventually decreases the total latency of the circuit .",
    "however , not all routing latencies have the same importance .",
    "an increase in the routing latency of qubits related to an instruction that lies in the critical path of the qidg will increase the total latency of the circuit , while adding to the routing latency of qubits related to an instruction in a non - critical path may only cause a time shift on the start times of the remaining instructions in that path without changing the total latency of the circuit . to account for this fact , the goal of the placement solution is simplified to minimizing the weighted sum of the routing latencies .",
    "the weight for the qubit routing latency between the _ _ i__@xmath71 ( child ) and the _",
    "_ j__@xmath71 ( parent ) instructions is called @xmath72 and is found from equation .",
    "@xmath73    where , @xmath74 denotes the maximum weight for cases with infinity weight .",
    "this weight is in inverse proportion to the difference between alap and asap levels of the child instruction and also the difference between levels of the child and parent instructions .",
    "the higher the difference between the child and parent instruction levels , the more time the qubit has to be routed without delaying the child instruction .",
    "moreover , the difference between alap and asap levels of the child instruction shows the criticality of this instruction to the rest of the circuit .    to model the routing latency in this problem",
    ", we use the manhattan distance between the parent and child instruction locations on the circuit fabric .",
    "using the aforementioned simplifications , the quantum instruction placement problem with _ fixed instruction level _",
    "( qipp - fil ) is to minimize the weighted summation of the routing latencies in the quantum circuit .",
    "moreover , no more than one instruction with a specific level can be placed on any interaction well .",
    "the effect of initial qubit routing latencies ( between the initial qubit locations and the location of the first instructions that use them ) and final routing latencies ( between the last operation that uses i / o qubits and their final locations ) is considered with weights calculated from equation when @xmath75 .",
    "qipp - fil consists of an instruction placement problem with per - level overlap avoidance constraints plus a qubit placement problem . to solve this problem ,",
    "an instruction placement technique is used , which is followed by placing the ancillary qubits on the creation sites based on the instruction placement solution .    to place the instructions on the quantum circuit fabric , a modified version of the state - of - the - art force - directed placement tool , simpl @xcite ,",
    "simpl works best when placing 10@xmath76 to 10@xmath77 objects on a circuit fabric .",
    "this range complies with the number of instructions that we have for the placement step considering multi - level concatenated error correction scheme for transversal and non - transversal operations .",
    "simpl is reviewed next .",
    "to minimize the half perimeter wire length in vlsi circuits , without any overlap avoidance constraints , an iterative optimization procedure is used . starting from an initial solution ,",
    "a quadratic optimization problem is formulated and solved .",
    "distances between placed components are used to formulate a new quadratic optimization problem to be solved .",
    "after convergence of the solution , the placement result is the optimal solution . to remove the overlaps , an algorithm called _ rough legalization _ , which uses a _",
    "non - linear scaling _",
    "method is proposed in @xcite .",
    "based on this approach , over - utilized areas in the fabric are examined and components that are placed in those areas are distributed evenly in the surrounding area . to avoid components from reverting back to their original locations , a _",
    "pseudo - net _ is added in the new location of any moved component and a wire is added between that pseudo - node and the original component .",
    "weight of the added wire is increased as the number of iterations increases .",
    "note that adding pseudo - nets does not change the problem size because it does not add to the number of variables or equations and only changes the objective function related to the original node .",
    "after this modification , the half perimeter wire length minimization problem is formed and solved again .",
    "this process continues until all overlaps are removed .",
    "finally , a simple approach is used for final legalization .",
    "simpl improves the speed of prior placement tools and has similar quality to the analytical placement solutions .",
    "due to the difference between the quantum instruction placement problem and the vlsi placement problem , some modifications must be made to simpl as explained next .",
    "instead of minimizing the total routing latencies , a weighted summation of the routing latencies is minimized . moreover ,",
    "the rough legalization step in this solution is applied to the instructions in each scheduling level . in particular , only overlaps between instructions on the same scheduling level are removed with the non - linear scaling approach .",
    "note that changing the locations of instructions during the rough legalization in one level affects the placement solution for other scheduling levels .",
    "therefore , to consider this effect , the quadratic optimization solution is repeated after finalizing the rough legalization for each scheduling level . to find the final placement solution ( assignment of instructions to interaction wells ) , similar to rough legalization ,",
    "each scheduling level is processed separately .",
    "for each scheduling level , the interaction wells are sorted based on their distance to the instructions , and then the best interaction well for each instruction is chosen .    after finalizing the placement solution for all instructions , the best creation well for each ancillary qubit is determined .",
    "each ancillary qubit is assigned to the free creation well that is closest to the location of the instruction that uses it for the first time .",
    "the proposed method based on classical placement tool plus net - weighting relies on a fixed scheduling level for each instruction .",
    "this assumption is violated with the addition of the routing latencies .",
    "more precisely , adding the routing latencies may significantly vary the start time of each instruction from its nominal start time . considering fixed levels for instructions in the placement problem",
    "has two negative effects on the placement solution .",
    "first , there may be a large number of instructions at some scheduling level , and hence , distributing them on the circuit fabric may cause some of the instructions to be placed far from the interaction wells hosting their parent instructions .",
    "however , if the scheduling level of those instructions is changed , they can be placed near the interaction wells hosting their parent instructions .",
    "this may even reduce the finish time for the deferred instructions .",
    "second , placing instructions on the circuit fabric based on the fixed scheduling level relies on an assumption about the start and stop times of the previous level instructions .",
    "this assumption typically does not , which results in the deferral of every instruction that is placed on the same interaction well in the next scheduling levels , cf .",
    "[ fig : fig7b ] .    in order to avoid big differences between nominal and actual start times for an instruction",
    ", a rule can be added to the placement solution as follows .",
    "the start time of an instruction assigned to scheduling level @xmath47 should be less than a threshold time ( @xmath78 ) .",
    "this threshold start time can be the middle time in time slot @xmath47 .",
    "this rule results in higher accuracy of the execution time prediction for instructions in different scheduling levels . to modify the placement solution based on this rule",
    ", we propose an iterative approach . in each iteration ,",
    "instructions in one scheduling level are fixed . in iteration",
    "@xmath47 : ( i ) considering fixed placement solution for instructions in scheduling level @xmath48 to @xmath49 , the proposed solution for qipp - fil is applied ; ( ii ) an approximate start time for each instruction ( @xmath79 ) in scheduling level @xmath47 is calculated based on the distance between the location of the interaction well assigned to it and locations of the interaction wells hosting the parent instructions .",
    "if an instruction can not satisfy the start time condition ( @xmath80 ) , it will be deferred by one scheduling level ( @xmath81 ) ; ( iii ) all of the finalized instructions that do not satisfy the timing constraints are removed from the quantum circuit fabric ; ( iv ) the force - directed scheduling step is applied to determine the best scheduling solution for all floating instructions based on the new deferrals .",
    "the instruction scheduling step is augmented to support the new parameter ( @xmath82 ) ; ( v ) the proposed solution for qipp - fil is applied to the placement problem with new scheduling levels for instructions to fix the placement solution for the remaining instructions in the scheduling level @xmath47 .    the proposed approach may increase the number of scheduling levels , but it significantly decreases the overall latency of the circuit due to considering a more realistic scheduling solution .",
    "the flowchart for finalizing the placement for each scheduling level is provided in fig .",
    "[ fig : fig11 ] .        notice that repeating the scheduling and global placement after each scheduling level with at least one deferred instruction is costly in case of large circuits . instead of this approach",
    ", the algorithm can be changed to repeat the scheduling and global placement algorithms after the number of deferred instructions reaches a threshold value or the summation of ( @xmath83 ) for deferred instructions reaches a limit . using this mechanism ,",
    "the run time of the proposed solution can be shortened at the cost of a slight increase in the resulting circuit latency .",
    "qufd is implemented in java .",
    "trapped - ion parameters used for the simulations are as follows : move delay=10@xmath84 ; one - qubit primitive instruction delay=50@xmath85s@xmath86 and two - qubit primitive instruction delay=100@xmath84 . a workstation with intel core i7 - 2600 3.4ghz cpu and 8 gb ram was used to run the simulations .",
    "determining the concatenation level for the encoding , which is sufficient to get a correct result with high fidelity from the quantum circuit is a process based on the characteristics of the underlying quantum circuit technology and the implemented quantum circuit .",
    "this problem is outside the scope of this paper . in this experiment",
    ", we focus on one - level steane code [ [ 7,1,3 ] ] for quantum error correction and the steane syndrome extraction scheme .",
    "results for some other combinations of encoding and syndrome extraction schemes will also be presented .",
    "different ulb sizes are enumerated . for each ulb size",
    ", the latency of executing each of the ft operations ( cnot , t , s , x , y , and z ) encoded with steane code [ [ 7,1,3 ] ] are found by applying qufd .",
    "based on the results of the quantum physical mapper and target quantum circuit profiling results , the best ulb size is determined .      the most important part of qufd is the quantum physical mapper for trapped - ion technology .",
    "there are different quantum mapping tools in the literature such as @xcite , quale @xcite , qpos @xcite , and qspr @xcite .",
    "in contrast to our work , all of these approaches rely on asap or alap scheduling and greedy placement of the qubits and instructions , which in turn results in long circuit latency .",
    "qspr improved on these approaches by repeating the scheduling and placement solution with random initial qubit placement solutions to reach a better initial qubit placement solution , which is critical in case of applying a greedy instruction placement solution .",
    "qspr algorithm provides about 41% improvement with respect to quale . in the following we provide a detailed comparison between qufd and qspr @xcite , which is the most advanced mapping tool in the literature .",
    "latencies of various ft operations implemented with different ulb sizes by using qufd and qspr are reported in fig .",
    "[ fig : fig12 ] . assuming simultaneous creation of ancillary qubits , there exist no feasible mapping solutions for the t instruction ( gate ) on 6@xmath876 and 8@xmath878 ulbs .",
    "this is because the number of the ancillary qubits for this instruction is more than the number of creation wells in the aforesaid ulbs .",
    "qspr fails to find any mapping solution for the 10@xmath8710 and 12@xmath8712 ulbs while qufd succeeds in these cases .",
    "the ft operation latencies obtained by qufd are from 35% ( for cnot ) to 41% ( for t instruction ) lower than those produced by qspr .",
    "although qufd uses larger computation time compared to qspr to produce its solutions , this is not a major concern , because we are only designing ulbs for seven ft operations and this procedure is done only once for the ft operation library design for each quantum circuit fabric .    as mentioned in section [ sched ] ,",
    "tightening the upper - bound on the number of instructions being scheduled in each scheduling level may decrease the total latency of the circuit by decreasing the routing time even though it may increase the number of scheduling levels at the end .",
    "this effect is examined for the cnot instruction mapped to a 10@xmath8710 ulb in fig .",
    "[ fig : fig13 ] . as can be seen in this figure ,",
    "if the number of concurrent instructions is limited to 30% of the physical interaction wells on the fabric , the total latency is decreased by 18% .",
    "it is also seen that decreasing the maximum number of simultaneously active interaction wells does not change the circuit latency until this limit exceeds the maximum number of concurrent instruction in the qidg ( @xmath88 in fig .",
    "[ fig : fig13 ] ) . decreasing the maximum number of simultaneously active interaction wells after this value changes the scheduling , placement and routing solution by decreasing the resource contention in each scheduling level for placement and routing problems ( positive effect ) and possible qidg depth increase ( negative effect ) .",
    "the positive effect is dominant for a part of this process and after that the negative effect starts to dominate .     as the coefficient of @xmath22,scaledwidth=70.0% ]    to show the effect of enumerating different @xmath42 for the fds method , ( normalized ) total latency of the circuit with and without considering this factor for a complete set of ft operations ( cnot , h and t ) plus one of the pauli operations in a 10@xmath8710 ulb is reported in fig .",
    "[ fig : fig14 ] . as can be seen , for h and x operations , enumeration of different @xmath42 in the scheduling algorithm does not change the total latency but for cnot and t operations , this enumeration greatly reduces the total latency .     in the scheduling algorithm on the circuit latency , scaledwidth=70.0% ]    fig .",
    "[ fig : fig15 ] shows an exemplary case for the maximum scheduling level in different placement steps for the ft cnot instruction mapping on a 6@xmath876 ulb .",
    "clearly , as we go further in the placement iterations , the number of scheduling levels is increased when the deferred instruction(s ) is on the critical path of the circuit .",
    "the actual number of scheduling levels for this case is equal to 51 .",
    "the predicted number of scheduling levels after scheduling and placement solutions is increased from 26 ( without considering the routing latencies ) to 43 ( after iterative correction of the scheduling levels based on the placement solution ) .        to show the effectiveness of the placement method that utilizes force - directed scheduling to modify the scheduling solution after each placement step",
    ", we implemented two other placement methods in the vlsi area .",
    "the first algorithm is based on the force - directed placement solution @xcite . in this approach , each instruction is considered to be a mass and data dependencies in the circuits are modeled by springs .",
    "the constant for each spring is set by the criticality factor of the source and the destination qubits . to avoid overlap between instructions with the same scheduling level ,",
    "repulsive forces are used .",
    "the second algorithm is based on simpl algorithm @xcite with fixed scheduling levels for instructions .",
    "normalized latencies ( w.r.t .",
    "qufd results ) for a complete set of ft operations ( cnot , h and t ) plus one of the pauli operations in a 12@xmath8712 ulb for different placement mechanisms are presented in fig .",
    "[ fig : fig16 ] .        as can be seen , the proposed placement method that modifies the scheduling level of instructions based on the placement solution generates on average 27% better results than the same placement method without using adaptive scheduling levels .",
    "moreover , the placement method based on the force - directed placement generates on average 72% worse results compared to the proposed placement solution .    in this experiment , we focus on one - level steane encoding [ [ 7,1,3 ] ] and steane syndrome extraction scheme but to show the difference between encoding and syndrome extraction schemes , results of another concatenated code , that is , bacon - shor with the lowest concatenation level and different syndrome extraction schemes ( steane and knill ancilla ) are reported in fig .",
    "[ fig : fig17 ] .        in this figure , latencies of cnot ,",
    "h and x operations are measured in a 12@xmath8712 ulb . for the t operation ,",
    "a 20@xmath8720 ulb is used because the number of required ancillary qubits for the t gate for some of the schemes is higher than the number of available creation wells on a 12@xmath8712 ulb .",
    "note , however , that these encoding / syndrome extraction schemes provide different levels of error detection / correction capabilities for the quantum circuit and can not be compared solely based on these latencies .",
    "based on the found latencies for ft operations , the total latency of the mapped toffoli circuit to a 2@xmath872 mesh tqa , which is calculated in section [ cadflow ] , is reported in fig .",
    "[ fig : fig18 ] . note that results for the 10@xmath8710 and 12@xmath8712 ulb sizes are not reported for qspr because this tool fails to find the total latency of the t instruction for these ulb sizes .",
    "as can be seen , the best ulb size for qufd is 10@xmath8710 and the best ulb size for qspr is 16@xmath8716 .",
    "moreover , the best total latency for the proposed qufd is 41% less than the best total latency of qspr .",
    "this paper presented quantum scheduling and placement algorithms for mapping fault - tolerant quantum operations to a universal logic block ( ulb ) .",
    "analytical formulations for the scheduling and placement problems were also presented .",
    "effective and state - of - the - art algorithms used in standard cad tools for classical circuits were modified to be applicable to the quantum mapping problem ( a quantum cad problem ) .",
    "in particular , modified list scheduling and force - directed scheduling were applied to the quantum instruction scheduling problem to capture the no - cloning dependencies among quantum instructions and determine the scheduling levels to minimize the number of instruction levels and reduce the resource contention . to consider the large impact of the qubit routing on the total latency of the quantum circuit , a net - weighting timing - driven placement solution based on simpl package",
    "was employed .",
    "this technique adaptively modifies the scheduling level of the instructions .",
    "moreover , a technique was described to determine the best ulb size for implementing ft quantum operations .",
    "all of the aforementioned algorithms were implemented in a cad tool called qufd .",
    "experimental results showed that qufd dominated the prior art quantum mappers by as much as 41% in terms of the average latency reduction .    with some modifications",
    ", qufd can be applied to large qodg s to produce a mapping solution for any tile - based quantum architectures .",
    "moreover , the proposed flow is applicable to quantum mapping and ulb design in other quantum fabric technologies with small changes due to different qubit / information movement cost .",
    "* acknowledgment * : this research was supported by the intelligence advanced research projects activity ( iarpa ) via department of interior national business center contract number d11pc20165 .",
    "government is authorized to reproduce and distribute reprints for governmental purposes notwithstanding any copyright annotation thereon .",
    "the views and conclusions contained herein are those of the authors and should not be interpreted as necessarily representing the official policies or endorsements , either expressed or implied , of iarpa , doi / nbc , or the u.s .",
    "government .",
    "philipp schindler , julio  t barreiro , thomas monz , volckmar nebendahl , daniel nigg , michael chwalla , markus hennrich , and rainer blatt . experimental repetitive quantum error correction .",
    ", 332(6033):10591061 , may 2011 .",
    "tzvetan  s. metodi , darshan  d. thaker , andrew  w. cross , f.  t. chong , and i.  l. chuang .",
    "a quantum logic array microarchitecture : scalable quantum data movement and computation . in _ proceedings of the 38th annual ieee / acm international symposium on microarchitecture ( micro-38 ) _ , pages 305318 ,",
    "washington , dc , usa , 2005 .",
    "ieee computer society .",
    "mark  g. whitney , nemanja isailovic , yatish patel , and john kubiatowicz . a fault tolerant , area efficient architecture for shor s factoring algorithm . in _ proceedings of the 36th annual international symposium on computer architecture ( isca09 ) _ , pages 383394 , new york , ny , usa , 2009 .",
    "mark whitney , nemanja isailovic , yatish patel , and john kubiatowicz .",
    "automated generation of layout and control for quantum circuits . in _ proceedings of the 4th international conference on computing frontiers ( cf07 ) _ , pages 8394 , new york , ny , usa , 2007 .",
    "acm .",
    "m.  j. dousti and massoud pedram . minimizing the latency of quantum circuits during mapping to the ion - trap circuit fabric . in _",
    "design , automation and test in europe conference ( date12 ) _ , pages 840843 , march 2012 .",
    "larry mcmurchie and carl ebeling .",
    "pathfinder : a negotiation - based performance - driven router for fpgas . in",
    "_ proceedings of the 3rd acm international symposium on field - programmable gate arrays ( fpga95 ) _ , pages 111117 , new york , ny , usa , 1995 .      m.  a rowe , a.  ben - kish , b.  demarco , d.  leibfried , v.  meyer , j.  beall , j.  britton , j.  hughes , w.  m itano , b.  jelenkovic , c.  langer , t.  rosenband , and d.  j wineland . transport of quantum states and separation of ions in a dual rf ion trap . , may 2002 .",
    "w.  k hensinger , s.  olmschenk , d.  stick , d.  hucul , m.  yeo , m.  acton , l.  deslauriers , c.  monroe , and j.  rabchuk .",
    "t - junction ion trap array for two - dimensional ion shuttling , storage , and manipulation .",
    ", 88(3):0341010341013 , january 2006 .",
    "d.  r leibrandt , j.  labaziewicz , r.  j clark , i.  l chuang , r.  j epstein , c.  ospelkaus , j.  h wesenberg , j.  j bollinger , d.  leibfried , d.  j wineland , d.  stick , j.  sterk , c.  monroe , c.  s pai , y.  low , r.  frahm , and r.  e slusher .",
    "demonstration of a scalable , multiplexed ion trap for quantum information processing . ,",
    "april 2009 .              d.  z. pan , halpin b. , and ren h. timing - driven placement . in alpert  c. j. , mehta  d. p. , and sapatnekar  s. s. , editors , _ handbook of algorithms for vlsi physical automation _ , pages 223233 .",
    "crc press , 2007 ."
  ],
  "abstract_text": [
    "<S> this paper presents a physical mapping tool for quantum circuits , which generates the optimal universal logic block ( ulb ) that can , on average , perform any logical fault - tolerant ( ft ) quantum operations with the minimum latency . </S>",
    "<S> the operation scheduling , placement , and qubit routing problems tackled by the quantum physical mapper are highly dependent on one another . </S>",
    "<S> more precisely , the scheduling solution affects the quality of the achievable placement solution due to resource pressures that may be created as a result of operation scheduling whereas the operation placement and qubit routing solutions influence the scheduling solution due to resulting distances between predecessor and current operations , which in turn determines routing latencies . </S>",
    "<S> the proposed flow for the quantum physical mapper captures these dependencies by applying ( i ) a loose scheduling step , which transforms an initial quantum data flow graph into one that explicitly captures the no - cloning theorem of the quantum computing and then performs instruction scheduling based on a modified force - directed scheduling approach to minimize the resource contention and quantum circuit latency , ( ii ) a placement step , which uses timing - driven instruction placement to minimize the approximate routing latencies while making iterative calls to the aforesaid force - directed scheduler to correct scheduling levels of quantum operations as needed , and ( iii ) a routing step that finds dynamic values of routing latencies for the qubits . </S>",
    "<S> in addition to the quantum physical mapper , an approach is presented to determine the single best ulb size for a target quantum circuit by examining the latency of different ft quantum operations mapped onto different ulb sizes and using information about the occurrence frequency of operations on critical paths of the target quantum algorithm to weigh these latencies . </S>",
    "<S> experimental results show an average latency reduction of about 40% compared to previous work . </S>"
  ]
}
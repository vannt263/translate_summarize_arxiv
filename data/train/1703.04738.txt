{
  "article_text": [
    "the availability of location - based services ( lbs ) is transforming a wide variety of applications .",
    "this development is being fueled by the increasing use of personal mobile communication devices ( smart phones ) that are endowed with positioning sensors , such as gps .",
    "importantly , the availability of precise positioning information in dense urban settings , and the joint decrease in communication costs , has paved the way for mobility - on - demand systems ( mod ) , such as lyft   and uber  .",
    "the potential of improved urban mobility systems has been largely acknowledged due to the possibility of reducing congestion , vehicle service cost and emissions  @xcite .",
    "importantly , such services also respond to the needs of individuals , for example by reducing travel cost ( through vehicle - sharing ) and reducing waiting times ( through centralized vehicle coordination )  @xcite .",
    "however , the use of lbs to facilitate mod services poses a privacy threat to the individual participants .",
    "indeed , vehicles reporting the exact coordinates of a user s drop - off location ( travel destination ) may reveal sensitive information about the user s habits , and hence , may deter users from using such systems .",
    "consequently , we ask ourselves what were to happen if vehicle locations were not reported _ precisely _ , but rather _",
    "imprecisely_. indeed , by perturbing the vehicle locations , it is expected that the user will enjoy greater privacy  at the cost of a loss of service quality .",
    "hence , our goal is to propose a solution that protects user travel destinations , thus ensuring privacy , while simultaneously minimizing the loss of mod service quality .    .",
    "the edges of the graph are colored to represent the expected traversal speed .",
    "we zoom into the area around the flatiron building , located at 4044 27.8196 ",
    "n 7359 22.9164  w. [ fig : manhattan ] ]    in this work , we consider a fleet of vehicles and passengers demanding to be picked up at specific locations .",
    "we pose this problem as a batch assignment of vehicles to passengers , similar to the approach taken in  @xcite .",
    "this assignment is facilitated by a centralized operator that collects all customer requests , i.e. the locations at which a vehicle is requested .",
    "once a passenger is assigned a vehicle , she communicates her travel destination to her vehicle ( by - passing the central operator ) . upon completion of the passenger transport",
    ", the vehicle immediately communicates its availability to the central operator and specifies its current location . since doing so would compromise the passenger s travel destination ( i.e. , the current vehicle position is equal to the dropped - off passenger s destination ) , we develop an assignment strategy that deals with obfuscated vehicle origin locations .",
    "although the origin of privacy research stems from the domains of database theory and statistics  @xcite , it has matured to the point of gaining significant traction in many cross - disciplinary domains , including social networking  @xcite , the internet of things  @xcite , and robotics  @xcite .",
    "however , we are unaware of its application to the mod problem . indeed , most literature in the domain of mod systems focuses on the questions of load re - balancing and predictive positioning  @xcite , and vehicle assignment with passenger pooling  @xcite .",
    "the contributions of our work are summarized as follows .",
    "first , we formalize the notion of privacy for continuous vehicle - to - passenger assignment in mod systems .",
    "the key insight is that vehicle origin locations correspond to previous passenger drop - off locations .",
    "building on prior work in location privacy , we combine the notion of geo - indistinguishability with the batch vehicle assignment problem to ensure private vehicle origin locations . based on this framework",
    ", we quantify the effect of privacy on the performance of the system , as measured by mean passenger waiting times .",
    "subsequently , we present an algorithm that takes advantage of superfluous vehicles in the system and effectively reduces the performance deterioration induced by the privacy mechanism .",
    "our methods are evaluated on a real , large - scale data set consisting of over 11 million taxi rides ( specifying vehicle availability and passenger requests ) , recorded in the area of manhattan , new york .",
    "our main insight is that the loss of performance induced by privacy is small , and furthermore , this loss can be minimized at the cost of deploying additional vehicles .",
    "we consider a batch that consists of @xmath0 passengers , each requesting one vehicle , and @xmath1 available vehicles .",
    "we model the transport network via a weighted directed graph , @xmath2 .",
    "vertices in the set @xmath3 represent geographic locations , where a node @xmath4 has a position @xmath5 .",
    "nodes @xmath4 and @xmath6 are connected by an edge if @xmath7 .",
    "a weight @xmath8 quantifies the cost of traversing this edge  we assume this cost to be equal to the time needed to reach node @xmath6 from node @xmath4 . we assume the graph @xmath9 is a strongly connected graph , i.e. , a path exists between any pair of vertices . at the beginning of each assignment epoch , vehicles are located at nodes @xmath10 , and passengers are located at nodes @xmath11 .",
    "hence , the positions of a vehicle @xmath4 and a passenger @xmath6 are given by @xmath12 and @xmath13 , respectively .",
    "the vehicle - to - passenger assignment is denoted by a binary matrix @xmath14 , which is constrained by @xmath15 and @xmath16 and @xmath17 . in other words ,",
    "we assign @xmath18 vehicles to each passenger , and call this our _ non - redundant _ scheme   ( and where @xmath19 ) , we have @xmath20 and @xmath21 and @xmath22 .",
    "the performance is then measured as the mean waiting time until pick - up by the fastest vehicle . ] .",
    "we capture the _ cost _ for vehicle @xmath4 to travel to a passenger @xmath6 by a matrix @xmath23 with elements @xmath24 .",
    "finally , we measure the performance of our assignment strategy by considering the _ waiting times _ until pick - up , given by @xmath24 where @xmath25 for all passengers @xmath26 .",
    "once a vehicle has picked - up and transported a passenger to her desired location , the vehicle notifies the central operator that it is available by communicating its obfuscated position .",
    "this position corresponds to the vehicle s origin for the subsequent assignment epoch , with the true ( non - obfuscated ) value equal to the previous passenger s travel destination .",
    "our problem can now be stated as follows .",
    "[ prob : private_origin ] design a method that routes vehicles to passengers , while minimizing average passenger waiting times , and while guaranteeing a desired level of privacy for passenger travel destinations .",
    "we focus the evaluations of our work on the geographical area of manhattan , and rely on a public dataset of new york city yellow taxicab operation to provide us with real passenger demand and vehicle availability information  .",
    "the dataset was collected during the month of june , 2016 , and consists of 11 million taxi rides .",
    "the data specifies the time and location of pick - up and drop - off , as well as trip distance and fare . in order to facilitate the evaluation of our methods ,",
    "we create a graph of manhattan by accessing actual street networks from openstreetmap  @xcite .",
    "our topological representation of manhattan consists of 4302 nodes and 9414 edges . in order to deploy algorithms based on this representation ,",
    "we first define the _ cost _ of traversing any edge in this graph . in the context of transportation ,",
    "an intuitive cost function is given by the expected travel time .",
    "hence , we use the pick - up and drop - off locations listed in the june , 2016 , dataset to compute all trajectories taken , assuming that the shortest path ( length - wise ) was chosen .",
    "we associate each trajectory with the listed travel time .",
    "each edge of the trajectory is assigned a travel time proportional to its length .",
    "after processing all trajectories , we can compute the mean travel time @xmath27 of each edge @xmath28 in the graph .",
    "figure  [ fig : manhattan ] shows the resulting expected travel times for all edges in the graph of manhattan .    in order to solve the assignment problem , in the remainder of this work",
    ", we assemble passenger requests and vehicle availabilities into _ batches _ that consider 20second time - windows .",
    "figure  [ fig : manhattan_data ] shows data collected on friday june 1st , 2016 .",
    "we process the ride data to show the number of new passenger requests per batch .",
    "the data shows how demand peaks during the morning and late afternoon rush hours , with fluctuations at lunch time .",
    "[ cc][][0.8]time [ cc][][0.8][90]occupied taxis [ cc][][0.8][-90]number of requests per batch , title=\"fig : \" ]",
    "in the following , we review the notions of location privacy upon which we build our methodology . several approaches to location privacy",
    "have been proposed thus far  a comprehensive review is offered in  @xcite .",
    "most of these methods , however , assume that the adversary s prior belief ( side information ) is known , and are explicitly modeled on this assumption  @xcite .",
    "such approaches have the downside that any inconsistency or change in the attacker s side information leads to an immediate threat ( and privacy is no longer guaranteed ) .",
    "indeed , a much stronger definition of privacy is one that is independent of any current or future attacker model .",
    "consequently , there has been much interest in _ differentially private _",
    "formalisms that abstract from adversary s side information  @xcite .",
    "stemming from the domain of statistical databases , the goal of differential privacy is to protect individual entries in a given database ( in our case , passenger drop - off locations ) , while simultaneously allowing aggregate information about the database to be released through a query ( in our case , a query that outputs the vehicles origin locations ) .",
    "the key requirement is that changing an individual s entry in the database ( i.e. , a vehicle origin location that corresponds to a specific passenger drop - off location ) should not have a significant affect on the outcome of the query .",
    "more formally , if the probability that a query returns a value from a database lies within an @xmath29 multiplicative bound of the probability that the same query returns the same value from an adjacent database  , then the query is said to produce @xmath30-indistinguishable outcomes  @xcite .",
    "notably , this definition is void of any threat model , and hence , is independent of any side information that the attacker might own . in order to preserve @xmath30-indistinguishability ,",
    "privacy mechanisms consist of adding random noise ( commonly drawn from a laplace distribution ) to the query output .",
    "the location privacy formalism put forward by andres et al .",
    "@xcite , termed geo - indistinguishability , is a generalization of differential privacy to the metric domain . in the following ,",
    "we introduce the main concepts with an adapted notation .",
    "geo - indistinguishability considers a query that exposes a position @xmath31 from a database .",
    "the privacy leakage can be formulated as @xmath32 where @xmath31 is a true position stored in the original database , @xmath33 is the corresponding altered position stored in an adjacent database , and @xmath34 is an obfuscated position .",
    "the idea of geo - indistinguishability is to ensure that two positions @xmath31 and @xmath33 are indistinguishable when they are close to each other .",
    "in other words , a user enjoys @xmath35-privacy within a radius @xmath36 , if any two locations that are at most @xmath36 apart produce query results with similar distributions .    a mechanism that returns @xmath34 , for a given @xmath31 or a given @xmath33 , satisfies @xmath30-geo - indistinguishability iff for all @xmath31 and @xmath33 : @xmath37    building on prior results  @xcite",
    ", the authors argue that the obfuscated position @xmath34 is to be drawn from a two - dimensional laplace distribution inversely scaled by @xmath30 , and centered at @xmath31 .",
    "formally , we have that @xmath38 , and we define the corresponding probability density function as @xmath39 . in order to satisfy @xmath30-geo - indistinguishability",
    ", we implement this proposed privacy mechanism  .",
    "[ fig : manhattan_noisy ] demonstrates the effect of this mechanism , applied to the coordinates of the flatiron building in manhattan .",
    "we observe how , as the scale of the laplacian increases ( i.e. , @xmath30 decreases ) , the noise ( and hence privacy ) increases . in the context of vehicle routing",
    ", it becomes clear that increased privacy comes at the cost of performance deterioration due to an obfuscation of vehicle positions that leads to suboptimal vehicle routing . in the following sections , we discuss this effect and propose a method that enables a minimization of this loss of performance .",
    "the goal is to assign and route vehicles to passengers such that each passenger is picked up , while minimizing the total assignment cost .",
    "we formalize this vehicle routing problem as finding the optimal assignment solution @xmath40 : @xmath41 with constraints @xmath15 and @xmath16 and @xmath42 .",
    "the element @xmath43 of matrix @xmath40 specifies whether the final solution routes vehicle @xmath4 to passenger @xmath6 .",
    "the system above is a linear sum assignment problem , also known as the problem of minimum weight matching in bipartite graphs .",
    "we use the hungarian algorithm ( or kuhn - munkres algorithm ) , to solve the system and find an optimal assignment @xmath40 .",
    "this assignment is deterministic , and vehicles follow the shortest path ( or one of the shortest paths , if several exist ) to reach their assigned passenger .    to compute the elements @xmath24 of the cost matrix @xmath44",
    ", we consider the cost incurred when routing a vehicle located at a node @xmath4 to a passenger located at a node @xmath6 .",
    "the cost of this path is given by the sum of the weights of edges that lie on it @xmath45 where @xmath46 is the set of edges in the shortest path between node @xmath4 and node @xmath6 , and @xmath47 is the weight of an edge @xmath48 .",
    "we can now compute the cost for all possible vehicle - to - passenger assignments @xmath49 and subsequently solve system  .",
    "our goal is to increase the privacy of vehicle origin locations ( we remind the reader that the vehicle origin and the previous passenger drop - off locations are the same ) . we do this by implementing the privacy mechanism described in sec .",
    "[ sec : geo_privacy ] to produce obfuscated ( noisy ) vehicle origin locations , denoted by @xmath50 for all vehicles @xmath51  i.e. , @xmath52 .",
    "we compute the expected cost @xmath53 of routing a vehicle from a probable node @xmath54 to a true passenger location @xmath55 , given that the vehicle is located around a noisy position @xmath56 generated by a planar laplace distribution with inverse scale parameter @xmath30 : @xmath57 = \\eta \\sum_{k \\in \\mathcal{v } } \\mathbb{p}_l(\\mathbf{x}_{\\tilde{v}_i } | k , \\epsilon ) f(k , p_j).\\ ] ] where @xmath58 is a normalization constant .",
    "we adapt the original objective in   to account for the expected cost :    @xmath59 = { \\mathop { \\mathrm{argmin } } \\limits_{\\mathbf{a } } } \\sum_{i=1}^{m}\\sum_{j=1}^{n } ~\\mathbb{e } [ c_{ij } ] a_{ij } .\\end{aligned}\\ ] ]    we note that , since the cost values @xmath53 are noisy , this assignment produces a _ suboptimal _ assignment @xmath60 with respect to the true vehicle origin locations .",
    "we measure the performance of this assignment by considering the passenger waiting times @xmath24 with @xmath61 , where @xmath24 corresponds to the effective waiting time ( based on the true , non - obfuscated vehicle origins ) .",
    "[ prop:1 ] the batch assignment where each vehicle @xmath4 reports an obfuscated position @xmath50 drawn from a planar laplace distribution is @xmath30-geo - indistinguishable with respect to the true positions @xmath62 .",
    "given a query that reports the current set of vehicle positions , the leakage formula can be written as : @xmath63 where @xmath64 represents an alternative position for vehicle @xmath4 .",
    "the numerator refers to the database containing all true positions , while the denominator refers to an adjacent database where the position of a single vehicle has been changed . by the definition of @xmath30-geo - indistinguishability ( cf .",
    "section  [ sec : geo_privacy ] ) and since all obfuscated positions are independent , we obtain : @xmath65      @xmath66 [ alg1:line1 ] @xmath67 [ alg1:line2 ] [ alg1:line3 ] @xmath68 [ alg1:line7 ] 0@xmath69 @xmath70 [ alg1:line8 ] @xmath71 [ alg1:line9 ]    vehicle - to - passenger assignments that are based on obfuscated positions will result in degraded performance . much of this performance loss can be recovered by realizing that , in practice , a large proportion of the vehicle fleet is idle  .",
    "our idea is to assign _ redundant _ vehicles to each passenger : of all assigned vehicles , only the fastest vehicle will actually pick up the passenger .",
    "consequently , this strategy reduces the expected passenger waiting time ( with respect to the non - redundant assignment strategy )   and @xmath72 representing passenger pick - up times , we have that @xmath73 \\leq \\mathrm{min}(\\mathbb{e}[x],\\mathbb{e}[y])$ ] . ] .",
    "algorithm  [ alg1 ] proposes a polynomial - time procedure that assigns @xmath74 vehicles to each passenger .",
    "when @xmath75 , we refer to the assignment as _",
    "redundant_. the key component of this algorithm is that it computes the optimal assignment of ( several ) idle vehicles to each passenger based on a cost matrix that is built incrementally ( with each additionally assigned vehicle ) .",
    "lines  [ alg1:line1 ]  and  [ alg1:line2 ] compute the solution to the basic non - redundant assignment , as seen in the previous section . at each iteration",
    "( starting on line  [ alg1:line3 ] ) , the procedure adds an additional vehicle to each passenger such that the expected sum of waiting times is minimized . on line  [ alg1:line7 ] , the set @xmath76 contains the indeces of the currently assigned vehicles for passenger @xmath6 .",
    "line  [ alg1:line8 ] computes the expected waiting time resulting from assigning an additional vehicle @xmath4 to each passenger @xmath6   corresponds to the list of pairs obtained by combining elements of @xmath77 and @xmath78 in the same order ( with @xmath79 ) .",
    "e.g. , @xmath80 . ] .",
    "it does so by evaluating the joint probability that all already assigned vehicles and the additional vehicle are located at a given set of nodes @xmath81 , and multiplying this probability by the minimum waiting time ( given by the node in @xmath81 closest to the passenger ) .",
    "line  [ alg1:line9 ] combines the previous assignment with the newly optimized one .",
    "it is worth noting that line  [ alg1:line8 ] can be computed quickly _",
    "( i ) _ by memorizing the results of the previous iteration for the next , _",
    "( ii ) _ by ignoring nodes that have a minor impact on the computation of @xmath53 ( e.g. , nodes @xmath82 such that @xmath83 for some arbitrary threshold @xmath84 , and _ ( iii ) _ by pre - computing for each node in the graph , this list of relevant nodes ( nearest nodes given the latter threshold ) , and their shortest route lengths to every other node in the graph .",
    "hence , the overall complexity is bounded by the hungarian algorithm , and is in the order of @xmath85 where @xmath86 represents the size of largest set of vertices that contribute minimally ( as determined by @xmath84 ) to the computation of the expected waiting times . for example , setting @xmath87 with @xmath88 results in @xmath89 on the manhattan graph .",
    "[ cc][][0.8]time [ s ] [ cc][][0.8][90]frequency      the following results are based on the dataset and graph described in section  [ sec : data ] , and show the performance of the batch assignment strategy for varying levels of noise , and a varying number of available vehicles .",
    "[ fig : batch_histogram ] shows passenger waiting times for 500 vehicles and 250 passengers , obtained after non - redundant single - vehicle assignments .",
    "passenger and vehicle locations are sampled according to the actual distribution of pick - up and drop - off locations , respectively , as recorded over the month of june 2016 .",
    "using an optimal ( noise - free ) assignment algorithm , the mean waiting time is just under 1 minute .",
    "we observe that as the noise level increases , the distribution shifts , resulting in higher mean waiting times .    fig .  [ fig : batch_waiting_time ] shows the performance of the batch assignment algorithm , as a function of the laplace inverse scale parameter @xmath30 , for a fixed number of 250 passengers .",
    "we consider non - redundant as well as redundant assignments ( the number of vehicles assigned per passenger is denoted by @xmath74 ) .",
    "for all panels , the left side shows the average waiting time , and the right side shows the degradation in performance between the private ( suboptimal ) assignment and the non - private ( optimal ) assignment ( also shown by a dashed line on the left panel ) .",
    "figures  , and use 250 , and 1000 vehicles respectively .",
    "as expected , the mean waiting time decreases as the number of available vehicles increases .",
    "consequently , as the proportion of available vehicles to passenger increases , the performance of the private assignment strategy deviates more strongly from the optimal performance ( since the noise is constant , and the vehicle density increases ) .",
    "[ cc][][0.6][90]waiting time [ s ] [ cc][][0.6][90]waiting time increase [ cc][][0.9]@xmath30 [ lc][][0.6]@xmath18 [ lc][][0.6]@xmath90 [ lc][][0.6]@xmath91 [ lc][][0.6]@xmath92 +    [ cc][][0.7]@xmath93 [ cc][][0.7]@xmath94 [ cc][][0.7]@xmath95 [ cc][][0.8]@xmath96 [ cc][][0.8]@xmath97 [ cc][][0.8]@xmath98 [ cc][][0.8]@xmath99 [ cc][][0.8]@xmath100 [ cc][][0.8]@xmath101 [ cc][][0.8]@xmath102 +",
    "in practice , after a vehicle has dropped off its passenger , it becomes available again for another assignment batch .",
    "we refer to consecutive assignments of the same vehicle to consecutive passengers as _ continuous _ vehicle routing .",
    "in contrast to batch vehicle routing , continuous vehicle routing poses the additional challenge of ensuring that the obfuscated drop - off locations are reported at _ times _ that correspond to the travel distances between reported ( obfuscated ) locations . in other words ,",
    "a vehicle effectively reports its availability at a moment in time that is either _ before _ or _",
    "after _ it truly drops off its passenger , since reporting its availability at the true moment would compromise the privacy of the drop - off location . in the following ,",
    "we demonstrate that the continuous vehicle assignment strategy respects promised privacy guarantees .",
    "we elaborate the strategy for non - redundant as well as redundant assignments .      the procedure according to which a vehicle is routed to a passenger in the private continuous assignment scheme is as follows .",
    "at the start , the vehicle communicates with the operator to report its obfuscated position , and to receive its next passenger assignment .",
    "once this assignment is known , the vehicle directly communicates with the passenger ( by - passing the central operator ) to obtain the true passenger destination .",
    "based on this information , the vehicle computes an obfuscated drop - off location ( by adding planar laplace noise ) and the moment in time when this fictitious location will be reached ( i.e. , when the vehicle availability must be reported ) .",
    "figure  [ fig : continuous_nonred ] illustrates this procedure on a two - dimensional workspace , showing the offset produced by the privacy mechanism , and its effect on the travel time .",
    "since the vehicle availability , as reported to the operator , might happen before the actual vehicle availability , it is important that vehicles do not keep an ever increasing backlog of passenger requests .",
    "however , since obfuscated drop - off positions are sampled from unbiased probability distributions , there is no bias towards reporting availability sooner rather than later , and the backlog effect does not happen in practice .    for clarity ,",
    "the following formulations use the symbols defined in the fig .",
    "[ fig : schema_continuous ] , where @xmath103 and @xmath104 represent real and obfuscated origin locations , and where @xmath105 and @xmath106 represent real and obfuscated drop - off locations , respectively .",
    "[ prop:2 ] the continuous non - redundant assignment where each vehicle @xmath4 reports an obfuscated position @xmath107 drawn from a planar laplace distribution is @xmath30-geo - indistinguishable with respect to the true positions @xmath108 iff , at each drop - off , each vehicle draws a new obfuscated position @xmath109 from a planar laplace distribution centered around the true drop - off @xmath110 ( we assume that each passenger makes a single ride ) .",
    "the proof follows a similar structure to the one of proposition  [ prop:1 ] .",
    "since the query only returns the last obfuscated position of all vehicles ( and a passenger takes a single ride ) , we have : @xmath111 where @xmath110 refers to the latest drop - off location of vehicle @xmath4 , and @xmath112 refers to an alternative drop - off location .",
    "the duration @xmath113 ( known to the operator ) refers to the reported duration of the latest ride of vehicle @xmath4 .",
    "as shown in figure  [ fig : continuous_nonred ] , this duration is fully determined by the previously and currently reported drop - off locations .",
    "hence , if we assume independence of pick - up and drop - off locations , we obtain : @xmath114    [ rem : epsilon_tune ] this proof assumes the independence of pick - up and drop - off locations . in reality , it is often possible to correlate the pick - up and drop - off locations given the time of day . as a result",
    ", it may be necessary to vary the level of obfuscation throughout the day by tuning @xmath30 as a function of the pick - up location .",
    "[ rem : epsilon_corr ] passengers who take @xmath115 subsequent rides only benefit from an @xmath116-geo - indistinguishable drop - off ( since obfuscated positions are independent from each other ) . in practice , this leakage can be reduced by correlating subsequent obfuscated positions that relate to a given same passenger .",
    "much like the redundant batch assignment strategy , continuous assignment can also be implemented with a redundant number of vehicles per passenger .",
    "this procedure is schematized in figure  [ fig : continuous_red ] .",
    "in contrast to figure  [ fig : continuous_nonred ] , figure  [ fig : continuous_red ] shows two vehicles that are assigned to pick up a passenger .",
    "the vehicles will mutually agree upon which one will truly pick up the passenger ( i.e. , the one that is truly closer ) .",
    "the selected vehicle computes an obfuscated drop - off location , and communicates this value to the redundant vehicle , which uses it to compute its itinerary ( to a fake drop - off location ) . at the end of the respective travel times ,",
    "both vehicles report their availability as well as the same obfuscated drop - off location ( this operation is not synchronized ) .",
    "the continuous redundant assignment where each vehicle @xmath4 reports an obfuscated position @xmath107 drawn from a planar laplace distribution is @xmath30-geo - indistinguishable with respect to the true positions @xmath108 iff vehicles that are assigned to the same passenger report the same drop - off location . at each drop - off",
    ", each vehicle draws a new obfuscated position ( we assume that each passenger makes a single ride ) .",
    "we illustrate the proof for a two - vehicle assignment where the vehicle @xmath4 picks up the passenger and drops her off at position @xmath110 ( refer to figure  [ fig : continuous_red ] ) . similarly to the previous proof , we obtain :    @xmath117 the same holds if vehicle @xmath6 picks the passenger up .",
    "the following results are based on the dataset and graph described in section  [ sec : data ] .",
    "we show the performance of the continuous assignment strategy ( for a constant privacy level , given by @xmath118 ) applied to the data recorded during the 24 hours of friday 1st , june 2016 .",
    "the total vehicle fleet size is variable throughout time  since the taxicab dataset contains records of occupied vehicles only , we make use of a heuristic to compute the total number of vehicles in the fleet ( occupied plus available vehicles ) .",
    "this value is computed from the number of occupied rides obtained from the real taxi data , and is multiplied by 1.56 ( which corresponds to a ratio of 64% of occupied taxis  ) .",
    "we cap the maximum fleet size at 6000 vehicles . at each time step of our simulation , we ensure that the vehicle fleet size corresponds to the precomputed vehicle fleet size . when necessary , we add vehicles to the system  these vehicles are placed at random locations that correspond to the distribution of drop - off locations derived from the real dataset .",
    "we use the real recorded passenger pick - up times to represent the times when vehicles are requested .",
    "requests are batched into 20s intervals .",
    "if requests are not serviced in the current batch , they roll over to the next one , and those that are not serviced within 20min are dropped ( all schemes exhibit a drop rate below 0.01% ) .",
    "finally , we solve the assignment problem for each batch of requests .",
    "vehicles are continuously routed according to our strategies , and they remain in the system unless removed ( when the precomputed fleet size reduces ) .",
    "figure  [ fig : cont_waiting_times ] shows the results in the form of violin plots that represent the distribution of the underlying data ( i.e. , one data point corresponds to the waiting time of a passenger until pick - up ) .",
    "we show the performance of the continuous non - redundant and redundant assignment schemes , and , to benchmark our results , we also show the performance of the optimal ( non - private ) assignment algorithm . in the redundant scheme , for each batch",
    ", we choose the number of redundant assignments @xmath74 such there is at least 1 vehicle per passenger , and such that a sufficient number of vehicles is left unassigned ( to account for the next batch of requests ) .",
    "the private non - redundant scheme is 30% worse than the optimal assignment scheme with an average waiting time increase of 53s ; the redundant scheme improves over the non - redundant scheme and is only 6% worse that the optimal assignment scheme , with an average waiting time increase of 11s .",
    "[ cc][][0.7]non - private [ cc][][0.7]private redundant [ cc][][0.7]private non - red . [ cc][][0.75][90]waiting time [ s ] .",
    "the violin plots feature a kernel density estimation of the underlying data distribution , and are obtained using the scott reference rule to compute the kernel bandwidth .",
    "the plots also show the median , the 25th and 75th percentiles .",
    "the mean and standard deviation for the non - private scheme are : @xmath119[s ] ; for the private redundant scheme : @xmath120[s ] ; and for the private non - redundant scheme : @xmath121[s ] .",
    "[ fig : cont_waiting_times],title=\"fig : \" ]",
    "this work is situated in the context of centrally operated mod systems , and considers the problem of assigning vehicles to passengers such that the mean waiting time is minimized . in specific ,",
    "we provide a method that solves the assignment problem under obfuscated vehicle origin positions , such that the destinations of previously dropped - off passengers remains private .",
    "our main contributions are two - fold .",
    "first , we formalized the notion of privacy for continuous vehicle - to - passenger assignment by building on the concept of geo - indistinguishability .",
    "second , to minimize performance loss , we presented an algorithm that takes advantage of superfluous vehicles in the system , combining multiple iterations of the hungarian algorithm to allocate a redundant number of vehicles to a single passenger .",
    "we evaluated our method on a real , large - scale dataset consisting of over 11 million taxi rides ( specifying vehicle availability and passenger requests ) .",
    "our results show that our privacy - preserving redundant assignment strategy successfully minimizes the loss of quality - of - service , as measured by average passenger waiting times .",
    "our work demonstrates that privacy can be integrated into mod systems without incurring a significant loss of performance , and moreover , that this loss can be further minimized at the cost of deploying additional ( redundant ) vehicles into the fleet .",
    "also , our results indicate that there is a trade - space between privacy and waiting time , and that this trade - off can be tuned as a function of system and/or user preferences .",
    "future work will consider the integration obfuscated passenger pick - up locations ( which can be readily obtained from the existing framework ) .",
    "we will also consider the tuning of individualized privacy levels as a function of user behavior ( as addressed in remarks  [ rem : epsilon_tune ] and  [ rem : epsilon_corr ] ) , or as a function of heterogeneous user preferences ( e.g. , reduction of waiting time at the cost of a loss of privacy ) ."
  ],
  "abstract_text": [
    "<S> urban transportation is being transformed by mobility - on - demand ( mod ) systems . </S>",
    "<S> one of the goals of mod systems is to provide personalized transportation services to passengers . </S>",
    "<S> this process is facilitated by a centralized operator that coordinates the assignment of vehicles to individual passengers , based on location data . </S>",
    "<S> however , current approaches assume that accurate positioning information for passengers and vehicles is readily available . </S>",
    "<S> this assumption raises privacy concerns . in this work </S>",
    "<S> , we address this issue by proposing a method that protects passengers drop - off locations ( i.e. , their travel destinations ) . </S>",
    "<S> formally , we solve a batch assignment problem that routes vehicles at obfuscated origin locations to passenger locations ( since origin locations correspond to previous drop - off locations ) , such that the mean waiting time is minimized . </S>",
    "<S> our main contributions are two - fold . </S>",
    "<S> first , we formalize the notion of privacy for continuous vehicle - to - passenger assignment in mod systems , and integrate a privacy mechanism that provides formal guarantees . </S>",
    "<S> second , we present a scalable algorithm that takes advantage of superfluous ( idle ) vehicles in the system , combining multiple iterations of the hungarian algorithm to allocate a redundant number of vehicles to a single passenger . as a result , we are able to reduce the performance deterioration induced by the privacy mechanism . we evaluate our methods on a real , large - scale data set consisting of over 11 million taxi rides ( specifying vehicle availability and passenger requests ) , recorded over a month s duration , in the area of manhattan , new york . </S>",
    "<S> our work demonstrates that privacy can be integrated into mod systems without incurring a significant loss of performance , and moreover , that this loss can be further minimized at the cost of deploying additional ( redundant ) vehicles into the fleet . </S>"
  ]
}
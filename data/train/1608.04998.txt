{
  "article_text": [
    "numerical simulation of fluid - structure interaction is a computational challenge because of its strong nonlinearity , especially when large deformation is considered .",
    "based on how to couple the interaction between fluid and solid , existing numerical methods can be broadly categorized into two approaches : partitioned / segregated methods and monolithic / fully - coupled methods .",
    "similarly , based on how to handle the mesh , they can also be broadly categorized into two further approaches : fitted mesh / conforming methods and unfitted / non - conforming mesh methods @xcite .",
    "a fitted mesh means that the fluid and solid meshes match each other at the interface , and the nodes on the interface are shared by both the fluid and the solid , which leads to the fact that each interface node has both a fluid velocity and a solid velocity ( or displacement ) defined on it .",
    "it is apparent that the two velocities on each interface node should be consistent .",
    "there are typically two methods to handle this : partitioned / segregated methods @xcite and monolithic / fully - coupled methods @xcite .",
    "the former solve the fluid and solid equations sequentially and iterate until the velocities become consistent at the interface .",
    "these are more straightforward to implement but can lack robustness and may fail to converge when there is a significant energy exchange between the fluid and solid @xcite . the latter",
    "solve the fluid and solid equations simultaneously and often use a lagrange multiplier to weakly enforce the continuity of velocity on the interface @xcite .",
    "this has the advantage of achieving accurate and stable solutions , however the key computational challenge is to efficiently solve the large systems of nonlinear algebraic equations arising from the fully - coupled implicit discretization of the fluid and solid equations .",
    "fitted mesh methods can accurately model wide classes of fsi problems , however maintaining the quality of the mesh for large solid deformations usually requires a combination of arbitrary lagrangian - eulerian ( ale ) mesh movement and partial or full remeshing @xcite .",
    "these add to the computational expense and , when remeshing occurs , can lead to loss of conservation properties of the underlying discretization @xcite .",
    "unfitted mesh methods use two meshes to represent the fluid and solid separately and these do not generally conform to each other on the interface . in this case",
    ", the definition of the fluid problem may be extended to an augmented domain which includes the solid domain .",
    "similarly to the fitted case , there are also two broad approaches to treat the solid domain : partitioned methods and monolithic methods . on an unfitted mesh",
    ", there is no clear boundary for the solid problem , so it is not easy to enforce the boundary condition and solve the solid equation . a wide variety of schemes have been proposed to address this issue , including the immersed finite element method ( ifem ) @xcite , the fictitious domain ( fd ) method @xcite , and the mortar approach @xcite .",
    "the ifem developed from the immersed boundary method first introduced by peskin @xcite , and has had great success with applications in bioscience and biomedical fields .",
    "the classical ifem does not solve solid equations at all .",
    "instead , the solid equations are arranged on the right - hand side of the fluid equations as an fsi force , and these modified fluid equations are solved on the augmented domain ( occupied by fluid and solid ) .",
    "there is also the modified ifem @xcite , which solves the solid equations explicitly and iterates until convergence .",
    "reference @xcite presents a fractional scheme for a rigid body interacting with the fluid , whilst @xcite introduces a fractional step scheme using distributed lagrange multiplier ( dlm)/fd for fluid / flexible - body interactions . in the case of monolithic methods , @xcite uses a fd / mortar approach to couple the fluid and structure , but the coupling is limited to a line ( 2d ) representing the structure .",
    "reference @xcite uses a mortar approach to solve fluid interactions with deformable and rigid bodies , and @xcite also solves a fully - coupled fsi system with hierarchical b - spline grids .",
    "there are also other monolithic methods based on unfitted meshes @xcite .",
    "it can be seen that the major methods based on unfitted meshes either avoid solving the solid equations ( ifem ) or solve them with additional variables ( two velocity fields and lagrange multiplier ) in the solid domain .",
    "however , physically , there is only one velocity field in the solid domain . in this article",
    ", we develop a semi - explicit unified fem ( ufem ) approach which only solves one velocity variable in the whole / augmented domain .",
    "we shall use unfitted meshes to introduce our ufem , although the methodology can also be applied to fitted meshes .",
    "the word  unified \" here has two meanings : ( 1 ) the equations for fluid and solid are unified in one equation in which only one velocity variable is solved ; ( 2 ) a range of solid materials , from the very soft to the very hard , may be considered in this one scheme .    the term  semi - explicit \" also has two components : ( 1 ) we linearize the solid constitutive model ( an incompressible neo - hookean model ) explicitly using the value from the last time step ; ( 2 ) we couple the fsi interaction implicitly by arranging the solid information on the left - hand side of control equations .    the main idea of ufem is as follows .",
    "we first discretize the control equations in time , re - write the solid equation in the form of a fluid equation ( using the velocity as a variable rather than the displacement ) and re - write the solid constitutive equation in the updated coordinate system .",
    "we then combine the fluid and solid equations and discretize them in an augmented domain .",
    "finally the multi - physics problem is solved as a single field .",
    "the ufem differs from the classical ifem approach which puts all the solid model information from the last time step explicitly on the right - hand side of the fluid equations .",
    "this typically requires the use of a very small time step to simulate the whole fsi system .",
    "this ifem approach works satisfactorily when the solid behaves like a fluid , such as a very soft solid , but can lead to significant errors when the solid behaves quite differently from the fluid , such as a hard solid .",
    "the ufem scheme includes the solid information on the left - hand side and , as we will demonstrate , can simulate a wide range from very soft to very hard solids both accurately and efficiently .    as noted above",
    ", monolithic methods strongly couple the fluid and solid models , and discretize them into one implicit nonlinear equation system at each time step .",
    "the unknowns include velocity , displacement and a lagrangian multiplier to enforce consistency of velocity on an interface ( fitted mesh ) @xcite or in a solid domain ( unfitted mesh ) @xcite .",
    "one may gain both a stable and an accurate solution from such fully - coupled schemes .",
    "however , it is clear that this strategy is very costly , especially for the unfitted mesh case , in which the so called mortar integrals are involved @xcite .",
    "the ufem only solves for velocity as unknowns , which is cheaper , but does not lose stability or accuracy as shown by the numerical experiments reported in this paper .",
    "the following sections are organized as follows . in section 2 ,",
    "the control equations and boundary conditions for fluid - structure interactions are introduced ; in section 3 , the weak form of the fsi system is presented based on the augmented fluid domain . in section 4 , details of the linearization of the fsi equations are discussed and the numerical scheme is presented . in section 5 , numerical examples are described to validate the proposed ufem .",
    "in the following context , let @xmath0 where @xmath1 and @xmath2 are functions defined in domain @xmath3 .",
    "all subscripts , such as @xmath4 , @xmath5 , and @xmath6 , represent spatial dimension . if they are repeated in one term ( including the bracket defined in ( 1 ) ) , it implies summation over the spatial dimension ; if they are not repeated , they take the value 1 and 2 for 2d , and 1 to 3 for 3d .",
    "all superscripts are used to distinguish fluid and solid ( @xmath7 and @xmath8 respectively ) , distinguish different boundaries ( @xmath9 and @xmath10 ) or represent time step @xmath11 .",
    "for example , @xmath12 and @xmath13 denote the velocity components of fluid and solid respectively , @xmath14 and @xmath15 denote the stress tensor components of fluid and solid respectively , and @xmath16 is a solid velocity component at time @xmath17 .    ,",
    "@xmath18.,width=288 ]    in our model we assume an incompressible fluid governed by the following equations in @xmath19 as shown in figure [ fig1 ] : @xmath20    @xmath21    @xmath22    we also assume an incompressible solid that is governed by the following equations in @xmath23 as shown in figure [ fig1 ] : @xmath24    @xmath25    @xmath26    in the above @xmath27 and @xmath28 are the deviatoric stress of the fluid and solid respectively , @xmath29 and @xmath30 are the density of the fluid and solid respectively , @xmath31 is the fluid viscosity , and @xmath32 is the acceleration due to gravity . note that ( [ solid1])-([solid3 ] ) describe an incompressible neo - hookean model that is based on @xcite and is suitable for large displacements . in this model",
    ", @xmath33 is the shear modulus and @xmath34 is the pressure of the solid ( @xmath35 being the fluid pressure in ( [ fluid3 ] ) ) .",
    "we denote by @xmath36 the current coordinates of the solid or fluid , and by @xmath37 the reference coordinates of the solid , whilst @xmath38 $ ] is the deformation tensor of the solid and @xmath39 represents the total derivative of time .    on the interface boundary @xmath40 : @xmath41 @xmath42 where @xmath43 denotes the component of outward pointing unit normal , see figure [ fig1 ] .",
    "dirichlet and neumann boundary conditions may be imposed for the fluid :    @xmath44    @xmath45    finally , initial conditions are typically set as : @xmath46 though they may differ from ( [ initialcd ] ) .",
    "* remark 1 * using jacobi s formula @xcite : @xmath47 we have @xmath48 which , using ( [ solid2 ] ) , gives @xmath49 we choose that the reference configuration is the same as the initial configuration , so @xmath50 also implies ( 6 ) . in our ufem model , the incompressibility constraint @xmath50 will be used instead of ( 6 ) .",
    "in order to obtain a weak formulation we define a combined trial space for velocity as : @xmath51 with a corresponding combined test space for the velocity as : @xmath52 both the trial and test spaces for pressure in @xmath19 are @xmath53 , and both the trial and test spaces for pressure in @xmath23 are @xmath54 .",
    "we then perform the following symbolic operations : @xmath55 integrating the stress terms by parts , using constitutive equation ( [ fluid3 ] ) and ( [ solid3 ] ) and boundary condition ( [ neummanbc ] ) , the last operations give the following weak form of the fsi system .",
    "+ find @xmath56 , @xmath57 and @xmath58 such that @xmath59 @xmath60 , @xmath61 and @xmath62 .",
    "+ note that the integrals on the interface ( boundary forces ) are also cancelled out using boundary condition ( [ interfacebc2 ] ) .",
    "this is not surprising because they are internal forces for the whole fsi system considered here .",
    "we next extend the fluid velocity and pressure into solid domain by introducing @xmath63 , @xmath64 , @xmath65 and @xmath66 , then extend the fluid computational domain from @xmath19 to an augmented domain @xmath3 , and define a trial space for velocity in @xmath3 as : @xmath67 with a corresponding test space for the velocity as : @xmath68 where @xmath69 is the restriction map .",
    "+ notice that @xmath35 and @xmath34 are not uniquely determined in ( [ weakfluidsolid ] ) .",
    "in fact , taking @xmath70 and @xmath71 instead of @xmath35 and @xmath34 respectively , the left - hand side of ( [ weakfluidsolid ] ) does not change .",
    "this situation can be avoided by fixing the pressure at a selected point @xmath72 or by imposing the following constraint @xcite :    @xmath73    we shall use the former approach therefore define the trial space for pressure in @xmath3 as : @xmath74 the weak form of the fsi system in the augmented domain @xmath3 can now be reformulated by rearranging equation ( [ weakfluidsolid ] ) to yield the following formulation .",
    "find @xmath75 and @xmath76 such that @xmath77 @xmath78 and @xmath79 .    * remark 2 * the fluid deviatoric stress @xmath27 is generally far smaller than the solid deviatoric stress @xmath28 , so we choose to neglect the fluid deviatoric stress @xmath27 in @xmath23 in what follows .",
    "note that the classical ifem neglects the whole fluid stress @xmath14 when computing the fsi force @xcite",
    ". an equivalent way of interpreting neglecting @xmath27 in @xmath23 is to view the solid as being slightly visco - elastic , having the same viscosity as the fluid .",
    "* remark 3 * we treat the solid as a freely moving object in a fluid , so @xmath80 without any boundary constraints in the definition of @xmath81 and @xmath82 respectively .",
    "physically , however , if part of solid boundary is fixed , this fixed boundary can also be regarded as a fixed fluid boundary and implemented as a zero velocity condition in the fluid domain , hence the solid still can be treated as if it were freely moving .",
    "furthermore , the interface boundary condition ( [ interfacebc1 ] ) is automatically built into the solution because we use an augmented solution space @xmath81 which requires @xmath83 .",
    "the integrals in equation ( [ weakaugmented ] ) are carried out in two different domains as illustrated in figure [ fig1 ] .",
    "we use an eulerian mesh to represent @xmath3 and an updated lagrangian mesh to represent @xmath23 , therefore the total time derivatives in these two different domains have different expressions , i.e : @xmath84 and @xmath85    standard fem isoparametric interpolation may be used to transfer data between the two meshes .",
    "firstly , based on the above two equations ( [ derivativef ] ) and ( [ derivatives ] ) , we discretize ( [ weakaugmented ] ) in time using a backward finite difference . then omiting the superscript @xmath86 , showing the solution is at the end of the time step , for convenience , we obtain : @xmath87    using the splitting method of ( * ? ? ?",
    "* chapter 3 ) , equation ( [ weak2 ] ) can be expressed in the following two steps .",
    "\\(1 ) convection step : @xmath88    \\(2 ) diffusion step : @xmath89 the treatment of the above two steps is described separately in the following subsections .      in this section ,",
    "two methods are introduced to treat the convection equation : the implicit least - squares method and the explict taylor - galerkin method , both of which can be used in the framework of our ufem scheme . some numerical results for comparison between these two methods",
    "are discussed subsequently in section 5 .",
    "it is possible to linearize ( [ weakconvection ] ) using the value of @xmath90 from the last time step : @xmath91 substituting ( [ linearizationofconvection ] ) into equation ( [ weakconvection ] ) gives , @xmath92 for the least - squares method @xcite , we may choose the test function in the following form : @xmath93 where @xmath94 .",
    "in such a case , the weak form of ( [ weakconvection ] ) is : @xmath95 in our ufem a standard biquadratic finite element space is used to discretize equation ( [ lastweakofconvection ] ) directly , although other spaces could be used .",
    "it is also possible to linearize equation ( [ weakconvection ] ) as : @xmath96 or @xmath97 re - write ( [ cbsconvection2 ] ) as : @xmath98 and substitute ( [ cbsconvection - strong - form ] ) into equation ( [ cbsconvection1 ] ) , we have @xmath99 notice that a second order derivative exists in the last equation . in practice",
    ", one does not need to calculate the second order derivative , instead , integration by parts may be used to reduce the order : @xmath100 the boundary integral in the last equation can be neglected if @xmath90 is the solution of the previous diffusion step , which means no convection exists on the boundary after the diffusion step . using ( [ cbs - integrate - by - parts ] ) ,",
    "equation ( [ cbs - strong - into ] ) may be approximated as : @xmath101    at last the weak form of the taylor - galerkin method ( * ? ? ?",
    "* chapter 2 ) can be expressed , by rearranging the last equation , as : @xmath102 this taylor - galerkin method is explicit , however a small time step is usually needed to keep the scheme stable .      in both the above and the following context , the derivative @xmath103 on the updated solid mesh",
    "is computed at the current known coordinates @xmath104 , that is to say @xmath105 .",
    "furthermore , @xmath28 in equations ( [ weakdiffusion ] ) , has a nonlinear relationship with @xmath36 , i.e. : @xmath106 using a chain rule , the last equation can also be expressed as : @xmath107 or @xmath108 and then @xmath109 can be expressed by the current coordinate @xmath104 as follows : @xmath110 using @xmath111 which is the displacement at the current step , the last equation can also be expressed as : @xmath112 there are two nonlinear terms in the last equation .",
    "using a newton method , they can be linearized as follows .",
    "@xmath113 and @xmath114    substituting ( [ solidstress])-([linearization2 ] ) into ( [ weakdiffusion ] ) and dropping off the superscripts @xmath86 of @xmath115 for notation convenience , this may be expressed as : @xmath116    the spatial discretization of the above linearized weak form will be discussed in the following section .      in the 2d case , which is considered in the remainder of this paper , a standard taylor - hood element q2q1 ( 9-node biquadratic quadrilateral for velocity and 4-node bilinear quadrilateral for pressure )",
    "is used to discretize in space .",
    "we first discretize the domain @xmath3 to get @xmath117 , then define finite dimensional subspaces of @xmath81 and @xmath82 as follows .    the solution space for each component of velocity : @xmath118 whilst test space for velocity is @xmath119    we also discretize the domain @xmath23 to get @xmath120 , and both the discretized trial space and test space on the solid domain are @xmath121 based on the discussion of remark 3 .",
    "the solution and test spaces for pressure are @xmath122 and @xmath123 respectively , which represent the finite dimensional subspaces of @xmath124 and @xmath125 , respectively , based on continuous piecewise bilinear functions .",
    "@xmath127 represents the finite dimensional subspace of @xmath128 @xmath129 based upon continuous piecewise biquadratic functions . then equation ( [ lastbigequation ] )",
    "can be discretized as : @xmath130 notice that in the continuous space @xmath81 , we have the restriction map @xmath131 , while in the discretized space @xmath132 , we use the standard fem isoparametric transformation @xmath133 to represent the map , i.e. @xmath134 where subscript @xmath4 denotes the velocity components in each space dimension .",
    "let @xmath135 and @xmath136 denote the @xmath137 components of the nodal velocity vectors on the fluid and solid meshes respectively , and @xmath138 and @xmath139 denote the vector of velocity basis functions on the fluid and solid meshes respectively , where @xmath140 and @xmath141 are the number of nodes of fluid and solid mesh respectively . then equation ( [ interpolaltion ] )",
    "can be expressed as : @xmath142 the fem isoparametric transformation defines @xmath133 from @xmath143 to @xmath144 as follows : @xmath145",
    "where @xmath146 , @xmath147 is the current coordinate of the @xmath148 node on the solid mesh .",
    "therefore , @xmath149    for velocity test functions , we similarly have @xmath150 where @xmath151 is an arbitrary nodal velocity ( virtual velocity ) vector on the fluid mesh , which satisfies the homogeneous dirichlet boundary condition .    on the fluid mesh , velocity and pressure",
    "can also be expressed as follows : @xmath152 @xmath153 @xmath154 @xmath155 where @xmath156 is the vector of pressure basis functions , @xmath157 is the nodal pressure vector , and @xmath158 is an arbitrary nodal pressure vector .",
    "@xmath159 denotes the number of nodes on the fluid mesh at which only pressure is defined .    substituting ( [ shapfirst])-([shaplast ] ) into ( [ last - h - equation ] ) , we have @xmath160 let @xmath161 and @xmath162 , we then express ( [ lastbigequationofdiscretization ] ) in the following matrix form : @xmath163 or @xmath164 where @xmath165 and @xmath166 the matrix @xmath167 is the velocity mass matrix of the fluid , where @xmath168 the matrix @xmath169 is the velocity mass matrix of the solid , where @xmath170 @xmath171 is the stiffness matrix of the fluid : @xmath172 where @xmath173 @xmath174 @xmath175 @xmath176 and @xmath177 .",
    "+ @xmath178 is the stiffness matrix of the solid : @xmath179 where @xmath180 it can be seen from the pattern of the above matrices that one can get @xmath181 by changing the subscript @xmath182 to @xmath183 , and changing @xmath183 to @xmath182 in the formula of @xmath184 .",
    "similarly , the elements of @xmath185 can be expressed as : @xmath186 and @xmath187 , @xmath188 .",
    "+ the matrix @xmath189 has the following expression . @xmath190 where @xmath191 @xmath192 and @xmath193 .",
    "the vector @xmath194 is the fluid force vector , where @xmath195 and @xmath196 @xmath197 .",
    "the vector @xmath198 is the solid force vector , where @xmath199 and @xmath200 @xmath201 .",
    "finally , matrix @xmath202 is the fem interpolation matrix which can be expressed as : @xmath203    using the arbitrariness of our test vectors @xmath204 and @xmath205 , one can obtain the following linear algebraic equation for the whole fsi system from equation ( [ energyformoflinearalgbraic ] ) : @xmath206      having derived a discrete system of equations we now describe the solution algorithm at each time step .    1 .",
    "given the solid configuration @xmath207 and velocity field @xmath208 at time step @xmath209 .",
    "2 .   discretize the convection equation ( [ lastweakofconvection ] ) or ( [ cbs - last ] ) and solve it to get an intermediate velocity @xmath210 .",
    "3 .   compute the interpolation matrix and solve equation ( [ lastlinearalgbraic ] ) using @xmath210 and @xmath211 as initial values to get velocity field @xmath212 .",
    "4 .   compute solid velocity @xmath213 and update the solid mesh by @xmath214 , then go to step ( 1 ) for the next time step .",
    "* remark 4 * when implementing the ufem algorithm , it is unnecessary to perform the matrix multiplication @xmath215 in ( [ initialenergyform ] ) globally , because the fem interpolation is locally based .",
    "all the matrix operations can be computed based on the local element matrices only . alternatively ,",
    "if an iterative solver is used , it is actually unnecessary to compute @xmath215 .",
    "what an iterative step needs is to compute @xmath216 for a given vector @xmath217 , therefore one can compute @xmath218 first , then @xmath219 , and last @xmath220 .",
    "in this section , we present some numerical examples that have been selected to allow us to assess our proposed ufem",
    ". we shall demonstrate the convergence of ufem in time and space , and compare results obtained by the ufem with those obtained using monolithic approaches and ifem , as well as compare against results from laboratory experiment .    in order to improve the computational efficiency ,",
    "an adaptive spatial mesh with hanging nodes is used in all the following numerical experiments .",
    "readers can reference appendix a for details of the treatment of hanging nodes .",
    "this numerical example is used by @xcite to validate their methods .",
    "we first use the same parameters as used in the above three publications in order to compare results and test convergence in time and space , then use a range of parameters to show the robustness of our ufem . the implicit least - squares method is used to treat the convection step in all these tests unless otherwise stated .",
    "the computational domain and boundary conditions are illustrated in figure [ fig2 ] .",
    "the inlet flow is in the x - direction and given by @xmath221 .",
    "gravity is not considered in the first test ( i.e. @xmath222 ) , and other fluid and solid properties are presented in table [ properties and domain size for test problem with a leaflet in a channel ] .",
    ".properties and domain size for test problem + with a leaflet oriented across the flow direction . [ cols=\"^,^\",options=\"header \" , ]     where @xmath223 and @xmath224 based on ( [ arrange dofs ] ) . executing all the above pieces of codes",
    "is equivalent to performing the following matrix multiplication .",
    "@xmath225    the modification of the mass matrix is similar but easier if a lumped mass is adopted , though it is unnecessary to present details here .",
    "once the element matrix is modified , it can then be assembled directly to the global matrix and therefore implement the constraint of the hanging nodes , because the hanging node shares the same equation number with its related node in the neigbouring element ."
  ],
  "abstract_text": [
    "<S> in this article , we present a new unified finite element method ( ufem ) for simulation of general fluid - structure interaction ( fsi ) which has the same generality and robustness as monolithic methods but is significantly more computationally efficient and easier to implement . </S>",
    "<S> our proposed approach has similarities with classical immersed finite element methods ( ifems ) , by approximating a single velocity and pressure field in the entire domain ( i.e. occupied by fluid and solid ) on a single mesh , but differs by treating the corrections due to the solid deformation on the left - hand side of the modified fluid flow equations ( i.e. implicitly ) . </S>",
    "<S> the method is described in detail , followed by the presentation of multiple computational examples in order to validate it across a wide range of fluid and solid parameters and interactions .    </S>",
    "<S> fluid - structure interaction , finite element method , immersed finite element method , monolithic method , unified finite element method </S>"
  ]
}
{
  "article_text": [
    "due to the simplicity of its formulation and the complexity of its exact solution , the traveling salesman problem ( tsp ) has been studied for a very long time @xcite and has drawn great attention from various fields , such as applied mathematics , computational physics , and operations research .",
    "the traveling salesman faces the problem to find the shortest closed tour through a given set of nodes , touching each of the @xmath1 nodes exactly once and returning to the starting node at the end @xcite .",
    "hereby the salesman knows the distances @xmath2 between all pairs @xmath3 of nodes , which are usually given as some constant non - negative values , either in units of length or of time .",
    "the costs @xmath4 of a configuration @xmath5 are therefore given as the sum of the distances of the used edges . if denoting a configuration as a permutation @xmath5 of the numbers @xmath6 , the costs can be written as @xmath7 a tsp instance is called symmetric if @xmath8 for all pairs @xmath3 of nodes . for a symmetric tsp ,",
    "the costs for going through the tour in a clockwise direction are the same as going through in an anticlockwise direction .",
    "thus , these two tours are to be considered as identical .    as the time for determining the optimum solution of a proposed tsp instance grows exponentially with the system size",
    ", the number @xmath1 of nodes , a large variety of heuristics has been developed in order to solve this problem approximately . besides the application of several different construction heuristics @xcite , which were either specifically designed for the tsp or altered in order to enable their application to the tsp , the tsp has been tackled with various general - purpose improvement heuristics , like simulated annealing @xcite and related algorithms such as threshold accepting @xcite , the great deluge algorithm @xcite , algorithms based on the tsallis statistics @xcite , simulated and parallel tempering ( methods described in @xcite ) , and search space smoothing @xcite .",
    "furthermore genetic algorithms @xcite , tabu search @xcite and scatter search @xcite , and even ant colony optimization @xcite , particle swarm optimization @xcite , and other biologically motivated algorithms @xcite have been applied to the tsp .",
    "the quality of these algorithms is compared by creating solutions for benchmark instances , one of which is shown in fig .",
    "[ fig : usa ] .     and [ fig : l3o ] . ]",
    "most of these improvement heuristics apply a series of so - called small moves to a current configuration or a set of configurations . in this context , the move being small means that it does not change a configuration very much , such that usually the cost of the new tentative configuration which is to be accepted or rejected according to the acceptance criterion of the improvement heuristics does not differ very much from the cost of the current configuration .",
    "this method of using only small moves is called the local search approach , as the small moves lead to tentative new configurations , which are close to the previous configuration according to some metric like the hamming distance for the tsp : the hamming distance between two tours is given by the number of different edges .",
    "one move which does not change a configuration very much is the exchange ( exc ) , which is sometimes also called swap and which is shown in fig .",
    "[ fig : excnim ] .",
    "the exchange exchanges two randomly selected nodes in the tour .",
    "thus , from a proposed configuration , @xmath9 other configurations can be reached , such that the neighborhood of a configuration generated by this move has a size of order @xmath10 .",
    "another small move is the node insertion move ( nim ) , which is also called jump .",
    "it is also shown in fig .",
    "[ fig : excnim ] .",
    "the node insertion move randomly selects a node and an edge .",
    "it removes the randomly chosen node from its original position and places it between the end points of the randomly selected edge , which is cut for this purpose .",
    "the neighborhood size generated by this move is @xmath11 and thus also of order @xmath10 .",
    "lin introduced a further small move , which is called lin-2-opt ( l2o ) @xcite : as shown in fig .",
    "[ fig : l2o ] , it cuts two edges of the tour , turns the direction of one of the two partial sequences around , and reconnects these two sequences in a new way . for symmetric tsp instances , only the two removed edges and the two added edges",
    "have to be considered when calculating the cost difference created by this move . for these symmetric tsps ,",
    "it plays no role which of the two partial sequences is turned around when performing the move , due to the identical cost function value for moving through clockwisely or anticlockwisely . in the symmetric case , on which we will concentrate throughout this paper ,",
    "the move creates a neighborhood of size @xmath12 and thus of order @xmath10 .",
    "please note that a move cutting two edges after neighboring nodes does not lead to a new configuration , such that the neighborhood size is not @xmath13 , a false value which is sometimes found in the literature .",
    "the lin-2-opt turned out to provide better results for the symmetric traveling salesman problem than the exchange .",
    "the reason for this quality difference was explained analytically by stadler and schnabl . in their paper @xcite , they basically found out that the results are the better the less edges are cut : the lin-2-opt cuts only two edges whereas the exchange cuts four .",
    "but they also reported results that the lin-3-opt cutting three edges leads to an even better quality of the solutions than the lin-2-opt , what contradicted their results at first sight , but they explained this finding with the larger neighborhood size of the lin-3-opt .",
    "the next larger move to the lin-2-opt is the lin-3-opt ( l3o ) : the lin-3-opt removes three edges of the tour and reconnects the three partial sequences to some new closed tour .",
    "in contrast to the smallest moves for which there is only one possibility to create a new tour , there are four possibilities in the case of the symmetric tsp how to create a new tour with three new edges with the lin-3-opt if each of the partial sequences contains at least two nodes .",
    "these four possibilities are shown in fig .  [",
    "fig : l3o ] .",
    "please note that we count only the number of `` true '' possibilities here , i.e. , only those cases in which the tour contains three edges which were not part formerly in the tour , as otherwise the move would e.g.  only be a lin-2-opt .",
    "if one of the partial sequences contains only one node and the other two at least two nodes each , then only one possibility for a `` true '' lin-3-opt remains .",
    "if even two of the three partial sequences do only contain one node , then there is no possibility left to reconnect the three sequences without reusing at least one of the edges which was cut .",
    "analogously , there is one possibility for the lin-2-opt , if both partial sequences contain at least two nodes each , otherwise there is no possibility .    if looking closely at the four variants of the lin-3-opt in fig .",
    "[ fig : l3o ] , one finds that the resulting configurations could also be generated by a sequence of lin-2-opts : for the upper left variant in fig .",
    "[ fig : l3o ] , three lin-2-opts would be needed , whereas only two lin-2-opts would be sufficient for the other three variants .",
    "thus , one might ask whether the lin-3-opt is necessary as a move as a few lin-2-opts could do the same job .",
    "however , due to the acceptance criteria of the improvement heuristics , it might be that at least one of the lin-2-opts would be rejected whereas the combined lin-3-opt move could be accepted .",
    "thus , it is often advantageous also to implement these next - higher - order moves in order to overcome the barriers in the energy landscape of the small moves .",
    "now the question arises how large the neighborhood size of a lin-3-opt is .",
    "of course , it has to be of order @xmath14 , as three edges to be removed are randomly selected out of @xmath1 edges .",
    "however , for the calculation of the exact number of possibilities one has to distinguish between the case in which all partial sequences contain at least two nodes each and the case in which exactly one partial sequence contains only one node .    please note that the node insertion move , which was introduced earlier , is the special case of the lin-3-opt in which one of the partial sequences only contains one node .",
    "but in the special case that one of the two next nearest edges to the randomly chosen node is selected , the nim corresponds to a lin-2-opt . as the number of cut edges of the nim is 3 , such that this move is basically a lin-3-opt , but as the neighborhood size of this move is of order @xmath10 , this move is also sometimes called lin-2.5-opt .",
    "one can go on to even higher - order lin-@xmath0-opts : the lin-4-opt cuts four edges of the tour and reconnects the four created partial sequences in a new way .",
    "if every partial sequence contains at least two nodes , there are 25 possibilities for a true lin-4-opt to reconnect the partial sequences to a closed feasible tour .",
    "the neighborhood size of this move is of order @xmath15 .",
    "the exchange , which was also introduced earlier , is usually a special case of a lin-4-opt . only if the two nodes which are to be exchanged are direct neighbors of each other or if there is exactly one node between them , then the move is equivalent to a lin-2-opt",
    ".    one can increase the number @xmath0 of deleted edges further and further .",
    "however , by doing so , one gradually loses the advantage of the local search approach , in which , due to the similarity of the configurations , their cost values do not differ much . in the extreme , the lin-@xmath1-opt would lead to a randomly chosen new configuration , the cost value of which is not related to the cost value of the previous configuration at all . moving away from the local search approach ,",
    "the probability for getting an acceptable new configuration among the many more neighboring configurations with cost values in a much larger interval strongly decreases due to the finite available computing time .",
    "when using the local search approach , it turns out that using the smallest possible move only is only optimal in the case of very short computing times . with increasing computing time",
    ", a well chosen combination of the smallest moves and their next larger variants becomes optimal . here",
    "the optimization run has more time to search through a larger neighborhood .",
    "the next larger moves enable the system to overcome barriers in the energy landscape formed by the small moves only .",
    "of course , one can extend this approach and also include moves with the next larger @xmath0 and spend even more computing time .    however , for some difficult optimization problems , an approach based on small moves and their next larger variants is not sufficient @xcite .",
    "there indeed large moves have to be used .",
    "a successful approach here are the ruin & recreate moves , which destroy a configuration to some extent and rebuild it according to a given rule set .",
    "they work in a different way than the small moves , which completely randomly select a way to change the configuration .",
    "in contrast , the ruin & recreate moves contain constructive elements in order to result in good configurations . also for problems like the tsp , for which small moves basically work ,",
    "well designed ruin & recreate moves are superior to the small moves @xcite .",
    "however , the development of excellent ruin & recreate moves is rather difficult , it is indeed an optimization problem itself , whereas the application of the local search approach , which simply intends to `` change the configuration a little bit '' , is rather straightforward and also usually quite successful in producing good solutions , such that it is mostly used .",
    "sometimes one needs to know the exact size of the neighborhood generated by the implemented moves for relating it to the available computing time or for tuning an optimization algorithm like tabu search . naturally , one is aware of the neighborhood size of a lin-@xmath0-opt being of order @xmath16 .",
    "the aim of this paper is to provide exact numbers for the neighborhood size . for deriving the neighborhood size of the lin-3-opt and of even larger lin-@xmath0-opts",
    ", we will start with the determination of the number of possibilities for reconnecting partial sequences to a complete tour with a true lin-@xmath0-opt in sec .",
    "[ verbinden ] . there",
    "we will find laws how many possibilities exist depending on the number of partial sequences containing only one node and their spatial neighborhood relation to each other . having this distinction at hand",
    ", we will calculate the corresponding numbers of possibilities for cutting the tour in sec .",
    "[ trennen ] .",
    "for the calculation of the number of possibilities for reconnecting the tour , we want to start out with the special case that each partial sequence contains at least two nodes .",
    "a lin-@xmath0-opt cuts the tour into @xmath0 partial sequences .",
    "the overall number of possibilities to reconnect them to a closed tour containing all nodes can be obtained when imagining the following scenario : one randomly selects one of the partial sequences and fixes its direction .",
    "( this has to be done for the symmetric tsp for which a tour and its mirror tour are degenerate ) this first partial sequence serves as a starting sequence for the new tour to be constructed .",
    "then one randomly selects one out of the @xmath17 remaining partial sequences and adds it to the already existing partial tour .",
    "there are two possible ways of adding it , one for each direction of the partial sequence .",
    "thus , one gets a new system with only @xmath17 partial sequences .",
    "the number of possibilities to construct a new feasible tour is thus given as @xmath18 this recursive formula can be easily desolved to @xmath19      however , this overall set of possibilities contains many variants in which old edges which were cut are reused in the new configuration , such that the move is not a true lin-@xmath0-opt .",
    "thus , in order to get the number of true lin-@xmath0-opts , those variants have to be subtracted from the overall number . as there are @xmath20 possibilities to choose @xmath21 old edges for the new tour if there were overall @xmath0 deleted edges , the number of true lin-@xmath0-opts is given by the recursive formula @xmath22 the starting point of this recursion is @xmath23 , as there is one possibility for the lin-0-opt , the identity move , in which no edge is changed . table [ tabelle ]",
    "gives an overview of the numbers of true lin-@xmath0-opts for small @xmath0 , in the case that each partial sequence contains at least two nodes and that the tsp is symmetric .",
    "we find that there is one lin-0-opt , the identity move , no lin-1-opt , as by cutting only one edge no new tour can be formed , one lin-2-opt , four lin-3-opts , and so on . in the case of an asymmetric tsp , each number here has to be multiplied by a factor of 2 .",
    "25 5 & 208 6 & 2121        in the general case , not every partial sequence contains at least two nodes .",
    "there might be sequences containing only one node which are surrounded by two sequences containing more than one node in the old tour .",
    "furthermore , there might be tuples of neighboring sequences containing only one node each which are surrounded by two sequences containing more than one node , and so on .",
    "let @xmath24 be the number of the partial sequences containing more than one node , @xmath25 be the number of sequences containing only one node and surrounded by two sequences containing more than one node in the old tour , @xmath26 be the number of tuples of one - node - sequences surrounded by two sequences containing more than one node in the old tour , @xmath27 be the number of triples of one - node - sequences surrounded by two sequences containing more than one node in the old tour , and so on .",
    "we will see that @xmath28 and @xmath29 are no longer functions of @xmath0 only , but depend on the entries of the vector @xmath30 .    in the following",
    ", the assumption shall hold that not every edge of the tour is cut , such that @xmath31 and @xmath32 .",
    "thus , one can always choose a partial sequence consisting of two or more nodes as a starting point for the creation of a new tour and fix its direction , as we only consider the symmetric tsp here .    starting with this fixed partial sequence ,",
    "a new feasible tour containing all nodes can be constructed by iteratively selecting an other partial sequence and adding it to the end of the growing partial tour . for the overall number of possibilities for construcing a new tour",
    ", it plays no role whether one - node - sequences were side by side in the old tour or not .",
    "thus , the number of possibilities @xmath33 is simply given as @xmath34 there are two possible ways for adding a partial sequence containing at least two nodes , but only one possibility for adding a sequence with only one node .",
    "thus , analogously to the result above we get the result @xmath35 for the asymmetric tsp , this number has to be multiplied with 2 .",
    "when calculating the number of true lin-@xmath0-opts , we need to consider the spatial arrangement of the one - node - sequences in the old tour .",
    "we have to distinguish between single one - node - sequences , tuples , triples , quadruples , and so on , i.e. , we have to consider the @xmath21-tuples for each @xmath21 separately .",
    "contrarily , we have no problems with the spatial arrangement of partial sequences with at least two nodes .",
    "in order to get the number of true lin-@xmath0-opts , we want to use a trick by artificially blowing up partial sequences with only one node to sequences with two nodes .",
    "let us first consider here that there are not only partial sequences with at least two nodes but also isolated partial sequences with only one node .",
    "( we thus first leave out the tuples , triples ,  of single - node - sequences in our considerations , but it does not matter here whether there are any such structures . )",
    "we extend one one - node sequence to two nodes by doubling the node .",
    "thus , one gets @xmath36 possibilities for performing a true lin-@xmath0-opt instead of @xmath37 possibilities . by changing the direction of this blown - up sequence",
    ", one can connect it  in contrast to before as it consisted of only one node  to those nodes of the neighboring parts to which it was connected before .",
    "there are two possibilities to connect it this way to one of the two neighboring partial sequences and one possibility to connect it this way to both of them .",
    "but these cases are forbidden , such that we have to subtract the number of these possibilities in which they get connected and we achieve the recursive formula @xmath38 please note that the resulting number has to be divided by 2 , as a partial sequence with only one node can not be inserted in two different directions .",
    "analogously , one can derive a formula if there are tuples of neighboring sequences with only one node each . here",
    "one expands one of the two partial sequences to two nodes , such that there is one tuple less , but one isolated one - node - sequence more and one longer sequence more .",
    "analogously to above , the false possibilities must be subtracted and the result divided by 2 , such that we get the formula @xmath39    for all longer groups of single - node - sequences , like triples and quadruples , there is one common approach . here",
    "it is appropriate to blow up a single - node - sequence at the frontier , such that the following recursive formula is achieved : @xmath40    generally , one should proceed with the recursion in the following way : first , those non - zero @xmath41 should vanish for which @xmath21 is maximal .",
    "this approach should be iterated with decreasing @xmath21 until one ends up for a formula for tours with partial sequences consisting of at least two nodes each for which we can use the formula for the special case .",
    "@xmath12 3 & @xmath42 4 & @xmath43 5 & @xmath44    after having determined the number of possibilities to reconnect partial sequences to a closed tour with a true lin-@xmath0-opt , we still have to determine the number of possibilities for cutting the tour in order to create these partial sequences .",
    "we again start out with the special case in which every partial sequence to be created shall contain at least two nodes . by empirical going through all possibilities",
    ", we found the formulas which are given in tab .",
    "[ sonderfall ] . from this result",
    ", we deduce a general formula for the possibilities @xmath45 for the lin-@xmath0-opt : @xmath46 thus , we find here that the neighborhood created by a lin-@xmath0-opt is of order @xmath16 .",
    "@xmath47 & @xmath48 & @xmath49 & @xmath50 2 & 2 & 0 & 0 & 0 & @xmath12 & 0 & 1 & 0 & 0 & @xmath1 3 & 3 & 0 & 0 & 0 & @xmath42 & 1 & 1 & 0 & 0 & @xmath51 & 0 & 0 & 1 & 0 & @xmath1 4 & 4 & 0 & 0 & 0 & @xmath43 & 2 & 1 & 0 & 0 & @xmath52 & 0 & 2 & 0 & 0 & @xmath53 & 1 & 0 & 1 & 0 & @xmath54 & 0 & 0 & 0 & 1 & @xmath1 5 & 5 & 0 & 0 & 0 & @xmath44 & 3 & 1 & 0 & 0 & @xmath55 & 1 & 2 & 0 & 0 & @xmath56 & 2 & 0 & 1 & 0 & @xmath56 & 0 & 1 & 1 & 0 & @xmath57 & 1 & 0 & 0 & 1 & @xmath57 6 & 2 & 2 & 0 & 0 & @xmath58 & 0 & 3 & 0 & 0 & @xmath59 & 3 & 0 & 1 & 0 & @xmath60 & 1 & 1 & 1 & 0 & @xmath61 & 0 & 0 & 2 & 0 & @xmath62 & 2 & 0 & 0 & 1 & @xmath63 & 0 & 1 & 0 & 1 & @xmath64    in the general case , an arbitrary lin-@xmath0-opt can also lead to partial sequences containing only one node .",
    "here we have to distinguish between various types of cuts : the cuts introduced by a lin-@xmath0-opt can be isolated , i.e. , they are between two sequences with more than one node each",
    ". then they can lead to isolated nodes which are between two partial sequences with more than one node each , and so on .",
    "let us view this from the point of view of the cuts of the tour .",
    "all in all , a lin-@xmath0-opt generally leads to @xmath0 cuts in the tour .",
    "let us denote an @xmath21-type multicut ( with @xmath65 ) at position @xmath66 ( with @xmath67 ) as the scenario that the tour is cut at @xmath21 successive positions after the node with the tour position number @xmath66 .",
    "thus , the tour is cut by an @xmath21-type multicut successively between pairs of nodes with the tour position numbers @xmath68 .",
    "furthermore , let @xmath69 be the number of @xmath21-type multicuts : @xmath70 is the number of isolated cuts .",
    "@xmath47 is the number of 2-type multicuts by which the tour is cut after two successive tour positions such that a partial sequence containing only one node is created , surrounded by two sequences containing more than one node .",
    "thus , @xmath47 is also the number of isolated nodes surrounded by longer sequences and is thus identical with @xmath25 .",
    "analogously , 3-type multicuts lead to tuples of nodes which are surrounded by partial sequences with more than one node , thus , @xmath48 is the number @xmath26 of these tuples .",
    "analogously , 4-type multicuts lead to triples of sequences containing only one node each , and so on . generally , we have for all @xmath71 that @xmath72 of the last section , but for @xmath73 the situation is different : each @xmath21-type multicut produces a further sequence consisting of at least two nodes , such that we have @xmath74",
    "please note that @xmath24 is both the number of these longer partial sequences and the number of all @xmath21-type multicuts .",
    "the overall number @xmath0 of cuts can be expressed as @xmath75    in this general case , the number @xmath50 of ways of cutting the tour also depends not only on @xmath0 , but on the entries of the vector @xmath76 . as tab .",
    "[ allgemeinerfall ] shows , the order of the neighborhood size is now given as @xmath77 . from these examples in the table ,",
    "we empirically derive the formula @xmath78 for the number of possibilities for cutting a tour with a lin-@xmath0-opt , leading to @xmath69 many @xmath21-type multicuts",
    ". please note that if the upper index of a product is smaller than the lower index , then this so - called empty product is 1 .",
    "this formula can be rewritten to @xmath79 making use of @xmath24 being the sum of all @xmath69 .",
    "please note that eq .",
    "( [ formelspeziell ] ) for the special case with each sequence containing at least two nodes is a special case of eq .",
    "( [ formelallgemein ] ) .",
    "the numbers for cutting a tour in partial sequences in this section were first found by hand for the examples given in tabs .",
    "[ sonderfall ] and [ allgemeinerfall ] , then the general formulas were intuitively deduced from these .",
    "after that the correctness of these fomulas was checked by computer programs up to @xmath80 for the special case and for all variations of the general case .",
    ".results for the greedy algorithm using small moves ( exchange , node insertion move , and lin-2-opt ) and the variants of the lin-3-opt : for each instance , 100 optimization runs were performed , starting with a random configuration and performing a specific number ( given in the text ) of the corresponding move .",
    "[ cols=\"<,^,>,>,>,^ , < \" , ]     now one can ask why not to proceed and to move on to even larger moves . we implemented two of the 25 different variants of the lin-4-opt .",
    "if denoting the tour position numbers after which the which the tour is cut as @xmath21 , @xmath66 , @xmath0 , and @xmath81 and their successive numbers as @xmath82 , @xmath83 , @xmath84 , and @xmath85 , then the cut tour can be written as follows : @xmath86 then the move variants lead to the following new tours : @xmath87 the variant l4o1 is sometimes called the two - bridge - move , as the two `` bridges '' @xmath88 and @xmath89 are exchanged . table [ l4oergebnisse ] shows the quality of the results achieved with these two variants of the lin-4-opt .",
    "we find that a further improvement can not be found , the results for the better variant of the lin-4-opt are roughly of the same quality as the results for the worse variants of the lin-3-opt .",
    "thus , leaving the local search approach even further leads to worse results .",
    "of course , using only the greedy algorithm , one fails in achieving the global optimum configurations for the tsp instances , which have a length of 118293.52  (beer127 instance ) , 42042.535 ",
    "(lin318 instance ) , and 50783.5475  (pcb442 instance ) , respectively .",
    "these optima can be achieved with the small moves and the variants of the lin-3-opt if using a better underlying heuristic ( see e.g.  @xcite ) .    .",
    "for getting an approximate solution of an instance of the traveling salesman problem , mostly an improvement heuristic is used , which applies a sequence of move trials which are either accepted or rejected according to the acceptance criterion of the heuristics . for the traveling salesman problem ,",
    "mostly small moves are used which do not change the configuration very much . among these moves ,",
    "the lin-2-opt , which cuts two edges of the tour and turns around a part of the tour , has been proved to provide superior results .",
    "thus , this lin-2-opt and its higher - order variants , the lin-@xmath0-opts , which cut @xmath0 edges of the tour and reconnect the created partial sequences to a new feasible solution , and their properties have drawn great attention .    in this paper , we have provided formulas for the exact calculation of the number of configurations which can be reached from an arbitrarily chosen tour via these lin-@xmath0-opts . a specific lin-@xmath0-opt leads to a certain structure of multicuts , i.e. , there are isolated cuts , which divide two partial sequences with at least two nodes , then there are two cuts just behind each other , such that a partial sequence with only one node is created , which is in between two partial sequences with more than one node , then there are three cuts just behind each other , such that a tuple of partial sequences with only one node each is created , and so on . the number of possibilities for cutting a tour according to these structures of multicuts is given in eq .",
    "( 14 ) . from the numbers of multicut structures , one has then to derive the numbers of partial sequences , which are given in eqs .",
    "( 10 ) and ( 11 ) .",
    "then one has to use the recursive formulas ( 6 - 8 ) in order to simplify the dependency of the number of reconnections to only one parameter . finally , one has to use eq .",
    "( 3 ) for getting the number of reconnections for a true lin-@xmath0-opt with @xmath0 new edges .",
    "finally , one has to sum up the products of the numbers of possible cuttings and of the numbers of possible reconnections in order to get the overall number of neighboring configurations which can be reached via the move .    at the end",
    ", we have compared the results achieved with these moves using the simple greedy algorithm which rejects all moves leading to deteriorations .",
    "we have found that the lin-2-opt is superior to the other small moves and that the lin-3-opt provides even better results than the lin-2-opt . but moving even further away from the local search approach does not lead to further improvements .",
    "99 _ der handlungsreisende ",
    "wie er sein soll und was er zu thun hat , um auftrge zu erhalten und eines glcklichen erfolgs in seinen geschften gewi zu sein ",
    "von einem alten commis - voyageur _ ( 1832 ) .",
    "e.  l.  lawler et al . , _ the traveling salesman problem _ ( john wiley and sons , new york , 1985 ) .",
    "g.  reinelt , _ the traveling salesman _ ( springer , berlin , germany , 1994 ) s.  kirkpatrick , c.  d.  gelatt jr . , and m.  p.  vecchi , science * 220 * , 671 ( 1983 ) .",
    "g.  dueck and t.  scheuer , j.  comp .",
    "phys .  * 90 * , 161 ( 1990 ) .",
    "p.  moscato and j.  f.  fontanari , phys .",
    "a * 146 * , 204 ( 1990 ) .",
    "g.  dueck , j.  comp .  phys .",
    "* 104 * , 86 ( 1993 ) .",
    "g.  dueck , t.  scheuer , and h .-",
    "wallmeier ( 1993 ) , spektrum der wissenschaft * 1993/3 * , 42 ( 1993 ) .",
    "g.  dueck , _ das sintflutprinzip ",
    "ein mathematik - roman _",
    "( springer , heidelberg , 2004 ) .",
    "t.  j.  p.  penna , phys .",
    "e * 51 * , r1-r3 ( 1995 ) .",
    "e.  marinari and g.  parisi , europhys .",
    "lett .  * 19 * , 451 ( 1992 ) .",
    "w.  kerler and p.  rehberg , phys .",
    "e * 50 * , 4220 ( 1994 ) .",
    "k.  hukushima and k.  nemoto , j.  phys .",
    "japan * 65 * , 1604 ( 1996 ) .",
    "k.  hukushima , h.  takayama , and h.  yoshino , j.  phys .",
    "japan * 67 * , 12 ( 1998 ) .",
    "b.  coluzzi and g.  parisi , j.  phys .",
    "a * 31 * , 4349 ( 1998 ) .",
    "j.  gu and x.  huang , ieee trans .",
    "systems man cybernet .",
    "* 24 * , 728 ( 1994 ) .",
    "j.  schneider et al . , physica a * 243 * , 77 ( 1997 ) .",
    "coy , b.  l.  golden , and e.  a.  wasil , a computational study of smoothing heuristics for the traveling salesman problem , research report , university of maryland , research report , to appear in eur .",
    "j.  operational res .",
    "( 1998 ) .",
    "e.  schneburg , f.  heinzmann , and s.  feddersen , _ genetische algorithmen und evolutionsstrategien _",
    "( addison wesley , bonn , 1994 ) .",
    "d.  e.  goldberg , _ genetic algorithms in search , optimization and machine learning _ ( addison wesley , reading , mass . , 1989 ) .",
    "j.  holland , siam j.  comp .",
    "* 2 * , 88 ( 1973 ) .",
    "a.  colorni , m.  dorigo , and v.  maniezzo ( 1991 ) , proceedings of ecal91 ",
    "european conference on artificial life , paris , 134 ( 1991 ) .",
    "j.  kennedy , ieee international conference on evelutionary computation ( indianapolis , indiana , 1997 ) .",
    "j.  kennedy and r.  eberhart , proceedings of the 1995 ieee international conference on neural networks * 4 * , 1942 ( 1995 ) .",
    "j.  kennedy , r.  eberhart , and y.  shi , _ swarm intelligence _",
    "( morgan kaufmann academic press , 2001 ) .",
    "f.  h.  stillinger and t.  a.  weber , j.  stat .",
    "phys .  * 52 * , 1429 ( 1988 ) ."
  ],
  "abstract_text": [
    "<S> when trying to find approximate solutions for the traveling salesman problem with heuristic optimization algorithms , small moves called lin-@xmath0-opts are often used . in our paper , we provide exact formulas for the numbers of possible tours into which a randomly chosen tour can be changed with a lin-@xmath0-opt . </S>"
  ]
}
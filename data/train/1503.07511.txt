{
  "article_text": [
    "in a great number of problems in engineering and applied science , we are faced with optimally choosing a string ( finite sequence ) of actions over a finite horizon to maximize an objective function .",
    "the problem arises in sequential decision making in engineering , economics , management science , and medicine . to formulate the problem precisely ,",
    "let @xmath4 be a set of possible actions . at each stage @xmath5 , we choose an action @xmath6 from @xmath4 .",
    "let @xmath7 denote a _ string _ of actions taken over @xmath8 consecutive stages , where @xmath9 for @xmath10 .",
    "let @xmath11 denote the set of all possible strings of actions ( of arbitrary length , including the empty string @xmath12 ) .",
    "finally , let @xmath13 be an objective function , where @xmath14 denotes the real numbers .",
    "our goal is to find a string @xmath15 , with a length @xmath16 not larger than @xmath1 ( prespecified ) , to maximize the objective function : @xmath17    the solution to , which we call the _ optimal strategy _ , is hard to compute in general .",
    "one approach is to use dynamic programming via bellman s principle ( see , e.g. , @xcite and @xcite ) .",
    "however , the computational complexity of this approach grows exponentially with the size of @xmath4 and the horizon length @xmath1 . on the other hand , the _ greedy strategy _ , though suboptimal in general , is easy to compute because at each stage , we only have to find an action to maximize the step - wise gain in the objective function . but how does the greedy strategy compare with the optimal strategy in terms of the objective function ?    the above question has attracted widespread interest , with some key results in the context of _ string - submodularity _ ( see , e.g. , @xcite , @xcite , @xcite , and @xcite ) .",
    "these papers extend the celebrated results of nemhauser _ et al . _",
    "@xcite , @xcite , and some further extensions of them ( see , e.g. , @xcite , @xcite , @xcite , and @xcite ) , on bounding the performance of greedy strategies in maximizing submodular functions over sets , to problem that involves maximizing an objective function over strings . in particular , streeter and golovin  @xcite show that if , in , the objective function @xmath18 is _ prefix _ and _ postfix _ monotone and has the diminishing - return property , then the greedy strategy achieves at least a @xmath19-approximation of the optimal strategy .",
    "zhang  _ et  al . _",
    "@xcite ,  @xcite consider a weaker notion of the postfix monotoneity and provide sufficient conditions for the greedy strategy to achieve a factor of at least @xmath0 , where @xmath1 is the optimization horizon length , of the optimal objective value .",
    "they also introduce several notions of curvature , with which the performance bound for the greedy strategy can be further sharpened .",
    "but all the sufficient conditions obtained so far involve strings of length greater than @xmath1 , even though involves only strings up to length @xmath1 .",
    "this motivates a weakening of these sufficient conditions to involve only strings of length at most @xmath1 , but still preserving the bounds here .    in this paper",
    ", we introduce the notions of @xmath1-submodularity and @xmath1-go - concavity , which together are sufficient for the @xmath0 bound to hold . by introducing a notion of _ curvature _ @xmath2 $ ] , we prove an even tighter bound with the factor @xmath3 .",
    "finally , we illustrate the strength of our results by considering two example applications .",
    "we show that our results provide weaker conditions on parameter values in these applications than in previous results reported in @xcite and @xcite .",
    "in this section , we first introduce some definitions related to strings and curvature .",
    "we then review the main results from @xcite and @xcite . specifically , the results there provide sufficient conditions on the objective function @xmath18 in ( [ eqn:2 ] ) such that the greedy strategy achieves a @xmath0-bound .      for a given string @xmath7 ,",
    "we define its _ length _ as @xmath8 , denoted @xmath20 .",
    "if @xmath21 and @xmath22 are two strings in @xmath11 , we write @xmath23 if @xmath24 and @xmath25 for each @xmath26 .",
    "moreover , we define string _ concatenation _ as @xmath27 . if @xmath28 and @xmath29 are two strings in @xmath11 , we write @xmath30 if we have @xmath31 for some @xmath32 . in this case , we also say that @xmath28 is a _ prefix _ of @xmath29 .",
    "a function from strings to real numbers , @xmath13 , is _ string submodular",
    "_ if    * @xmath18 has the _ prefix - monotone _ property : @xmath33 @xmath34 .",
    "* @xmath18 has the _ diminishing - return _ property : @xmath35 , @xmath36 .",
    "a function from strings to real numbers , @xmath13 , is _ postfix monotone _",
    "if @xmath37    the _ total backward curvature of @xmath18 _ is defined as @xmath38      we now define optimal and greedy strategies for problem and some related notation .",
    "* _ optimal strategy _ : any solution to is called an _",
    "optimal _ strategy .",
    "if @xmath18 is prefix monotone , then there exists an optimal strategy with length @xmath1 , denoted @xmath39 .",
    "let @xmath40 for @xmath41 .",
    "* _ greedy strategy _ : a string @xmath42 is called a _ greedy _ strategy if @xmath43 , @xmath44 let @xmath45 for @xmath41 .    the following two theorems summarize the performance bounds in @xcite and @xcite .",
    "[ thm : bounds1 ] if @xmath18 is string submodular and @xmath46 holds for all @xmath47 , then any greedy strategy @xmath48 satisfies @xmath49    [ thm : bounds2 ] if @xmath18 is string submodular and postfix monotone , then any greedy strategy @xmath48 satisfies @xmath50    under additional assumptions on the curvature @xmath51 of @xmath18 , @xcite and @xcite provide even tighter bounds .",
    "notice that the sufficient conditions above involve strings of length greater than @xmath1 , even though the problem ( [ eqn:2 ] ) involves only strings up to length @xmath1 .",
    "this motivates a weakening of these sufficient conditions to involve only strings of length at most @xmath1 , but still preserving the bounds here . in the next section",
    ", we present our main results along these lines . in section  [ sc :",
    "iv ] , we show that these weakened sufficient conditions also lead to weaker requirements than in @xcite and @xcite for two application examples .",
    "before stating our main results , we first introduce some definitions on @xmath13 .    * @xmath18 is _ @xmath1-monotone _ if @xmath52 and @xmath53 , @xmath34 .",
    "* @xmath18 is @xmath1-_diminishing _ if @xmath54 and @xmath55 , @xmath56 , @xmath36 .",
    "* @xmath18 is @xmath1-_submodular _ if it is both @xmath1-monotone and @xmath1-diminishing .",
    "* let @xmath45 ( as before ) and @xmath57 for @xmath58 .",
    "then , @xmath18 is @xmath1-_go - concave _ if for @xmath59 , @xmath60    notice that these definitions involve only strings of length at most @xmath1 .",
    "moreover , it is clear that if @xmath18 is string submodular , prefix monotone , and has the diminishing - return property , then @xmath18 is string @xmath1-submodular , @xmath1-monotone , and @xmath1-diminishing . under these weaker conditions ,",
    "we show that the previous bounds on the greedy strategy still hold .",
    "[ thm : myopicbounds3 ] if @xmath18 is @xmath1-submodular and @xmath1-go - concave , then @xmath49    because @xmath18 is @xmath1-diminishing , we have that for @xmath61 , @xmath62 by definition of the greedy strategy , for @xmath61 , @xmath63 summing the inequality above over @xmath5 from @xmath64 to @xmath1 produces @xmath65 for @xmath59 , because @xmath18 is @xmath1-diminishing , we have @xmath66 summing the inequalities above , we have @xmath67 by definition of the greedy strategy , we have for @xmath68 @xmath69 which implies that @xmath70 hence , we have for @xmath59 , @xmath71 by @xmath1-go - concavity , for @xmath59 we have @xmath72 from which we get @xmath73 therefore , @xmath74 because @xmath75 as @xmath76 , we also have @xmath49    next , we introduce a new notion of curvature @xmath77 as follows : @xmath78 if @xmath18 is @xmath1-go - concave , then for @xmath59 we have @xmath79 which implies that @xmath80 .",
    "the following theorem gives a bound related to the curvature @xmath77 .",
    "[ thm : myopicbounds4 ] if @xmath18 is @xmath1-submodular and @xmath1-go - concave , then @xmath81    by definition of the curvature @xmath77 , we have @xmath82 by definition of the greedy strategy and inequality ( [ eqn:3 ] ) ,    we have @xmath83 from which we get @xmath84 therefore , @xmath85 because @xmath86 as @xmath76 , we also have @xmath81    _ remarks _    * the term @xmath87 is decreasing in @xmath2 $ ] . * when @xmath88 , @xmath89 , which is the bound in theorem [ thm : myopicbounds3 ] . moreover , for @xmath90 , @xmath91 . hence , theorem [ thm : myopicbounds4 ] is a generalization of theorem [ thm : myopicbounds3 ] and gives a tighter bound .",
    "* when @xmath92 we have @xmath93 , making the greedy strategy asymptotically optimal .",
    "in this section , we      @xmath94    it is easy to check that @xmath18 is @xmath95 let @xmath96 , then we have @xmath97 suppose that @xmath98 for all @xmath99 let @xmath100 and @xmath101 then , we can write @xmath102 and @xmath103 @xmath104    @xmath105 @xmath106\\\\ & \\leq i\\left[1-\\prod_{j = i+1}^k(1-p^j(o_i))\\right].\\end{aligned}\\ ] ] because @xmath107 , we have @xmath108,\\ ] ] @xmath109 for @xmath59 .",
    "if we assume that @xmath110 for @xmath111 , then it is easy to see holds for @xmath112 @xmath113      @xmath114 it is easy to see that @xmath18 is by form , and it is if for @xmath115 , we must have @xmath116 where @xmath117 @xmath107 , @xmath118 it is easy to check that @xmath119 therefore , we have @xmath120    let @xmath121 then , @xmath122 is non - increasing . hence , @xmath123 in order to    let @xmath124 , @xmath125 and @xmath126",
    ". then , we can rewrite ( [ eq:9 ] ) as @xmath127 @xmath128 @xmath129    bound .    by definition of the greedy strategy",
    ", we have @xmath130 , which means @xmath131 @xmath132 @xmath133 , @xmath134 which implies that @xmath135\\\\ & \\geq\\frac{1}{\\sigma_1 ^ 2}(e_1-e_1^*)(1-(e_1+e_1^ * ) ) . { \\addtocounter{equation}{1}\\tag{\\theequation}}\\label{eqn:14}\\end{aligned}\\ ] ]",
    "the inequality ( [ eqn:13 ] ) implies that @xmath136 . from ( [ eqn:14 ] ) and ( [ eqn:13 ] )",
    ", we have that @xmath137\\geq 0,\\ ] ] which implies that @xmath138 .",
    "since if @xmath139 , then @xmath140 which implies that @xmath137 < 0,\\ ] ] while @xmath141 which contradicts ( [ eqn:14 ] ) .",
    "hence , we have @xmath138 , which means @xmath142 , and the inequality holds .",
    "we considered an optimization problem ( [ eqn:2 ] ) where the decision variable is a string of length at most @xmath1 .",
    "for this problem , we reviewed some previous results on bounding the greedy strategy .",
    "in particular , the results of @xcite and @xcite provide sufficient conditions for the greedy strategy to be bounded by a factor of @xmath0 .",
    "we then presented _ weakened _ sufficient conditions for this same bound to hold , by introducing the notions of @xmath1-submodularity and @xmath1-go - concavity .",
    "next , we introduced a notion of _ curvature _ @xmath2 $ ] , which furnishes an even tighter bound with the factor @xmath87 .",
    "finally , we illustrated our results by considering two example applications .",
    "we showed that our new results provide weaker conditions on parameter values in these applications than in @xcite and @xcite .",
    "m.  streeter and d.  golovin , `` an online algorithm for maximizing submodular functions , '' in _ proc .",
    "22nd annual conference on neural information processing systems _ , vancouver , british columbia , canada , pp .",
    "67 - 74 , dec . 2008 .",
    "s.  alaei and a.  malekian , `` maximizing sequence - submodular functions and its application to online advertising , '' in _ arxiv preprint arxiv:1009.4153 _ ,",
    "z. zhang , e. k. p. chong , a. pezeshki , and w. moran , `` string submodular functions with curvature constraints , '' _ ieee transactions on automatic control _ , to appear , _ arxiv:1303.3017 _ , 2015 .",
    "z. zhang , z. wang , e. k. p. chong , a. pezeshki , and w. moran , `` near optimality of greedy strategies for string submodular functions with forward and backward curvature constraints , '' in _ proc .",
    "52nd ieee conference on decision and control _ , florence , italy , pp .  51565161 ,",
    "g.  l. nemhauser and l.  a. wolsey and m.  l. fisher , `` an analysis of approximations for maximizing submodular set functions - ii , '' _ mathematical programming study _ ,",
    "vol .  8 , no .  1 , pp . 7387 , 1978 . g.  l. nemhauser and l.  a. wolsey and m.  l. fisher , `` an analysis of approximations for maximizing submodular set functions - i , ' ' _ _ mathematical programming study _",
    "_ , vol .  14 , no .  1 ,",
    "pp . 265294 , 1978 .",
    "m.  conforti and g.  cornujols , `` submodular set functions , matroids and the greedy algorithm : tight worst - case bounds and some generalizations of the rado - edmonds theorem , '' _ discrete applied mathematics _ , vol .  7 , no .  3 , pp . 251274 , 1984 . j.  vondrk , `` submodularity and curvature : the optimal algorithm , '' _ rims kokyuroku bessatsu b _",
    "23 , pp .",
    "253266 , 2010 ."
  ],
  "abstract_text": [
    "<S> we consider an optimization problem where the decision variable is a string of bounded length . for some time </S>",
    "<S> there has been an interest in bounding the performance of the greedy strategy for this problem . here , we provide weakened sufficient conditions for the greedy strategy to be bounded by a factor of @xmath0 , where @xmath1 is the optimization horizon length . </S>",
    "<S> specifically , we introduce the notions of @xmath1-submodularity and @xmath1-go - concavity , which together are sufficient for this bound to hold . by introducing a notion of _ curvature _ @xmath2 $ ] , we prove an even tighter bound with the factor @xmath3 . </S>",
    "<S> finally , we illustrate the strength of our results by considering two example applications . </S>",
    "<S> we show that our results provide weaker conditions on parameter values in these applications than in previous results . </S>"
  ]
}
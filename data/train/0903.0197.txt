{
  "article_text": [
    "balancing binary search trees is an important task to ensure good performance for searches .",
    "rotations are simple transformations that can be used to dynamically adjust trees in an effort to keep them reasonably balanced .",
    "a left or right rotation at a node , shown in figure  [ rot ] , promotes one grandchild , demotes one child , and switches one grandchild to a different parent node .",
    "sequences of rotations suffice to transform a tree to any other tree with the same number of nodes .",
    "the rotation distance between two trees is the minimum number of such rotations needed to transform one to the other .",
    "there has been a great deal of work on estimating , bounding and computing this distance .",
    "culik and wood @xcite gave an immediate upper bound of @xmath2 for the distance between two trees with @xmath3 nodes , and in remarkable work using methods of hyperbolic volume , sleator , tarjan , and thurston @xcite showed not only that @xmath4 is an upper bound , but furthermore that for all large @xmath3 , that bound is realized .",
    "there are no known polynomial - time algorithms for computing rotation distance , though there are estimation algorithms of pallo @xcite , pallo and baril @xcite , and rogers @xcite .",
    "the np - hardness of this problem remains open .",
    "we make progress on the computational complexity of rotation distance by showing that it is fixed - parameter tractable .",
    "we show the fixed - parameter tractability by reducing ( or `` kernalizing '' ) the common structures in the trees being compared .",
    "the technique of kernalizing problem instances has been very successful in showing the tractability of a wide range of problems @xcite . for reduction rules",
    ", we use the `` subtree reduction '' where identical subtrees are reduced in both , which arises in several settings ( including the study of tree pairs through thompson s group @xmath5 @xcite ) to produce `` reduced tree pairs '' which have the same rotation distance as the original tree pair , as shown in figure  [ subtreerulefigure ] .",
    "this subtree reduction rule also preserves biologically interesting distances for phylogenetic trees ( roughly , leaf - labeled , unordered trees ) .",
    "allen and steel @xcite showed that the biologically motivated `` tree - bisection - and - reconnection '' ( tbr ) distance is preserved under the subtree reduction rule , as well as a reduction rule that shrinks common chains , illustrated in figure  [ chainrulefigure ] . they further show that the reduced trees have @xmath6 size , where @xmath0 is the tbr distance between the trees .",
    "this reduces the question of calculating the tbr distance to comparing trees whose size is dependent only on @xmath0 , which is used to prove that tbr distance is fixed - parameter tractable .",
    "other distance calculations have also been shown to be fixed - parameter tractable via similar reductions @xcite .    to show that rotation distance is fixed - parameter tractable , we follow a similar strategy to those used for phylogenetic tree distances :",
    "we show that the subtree and chain reductions preserve distance and then show that the resulting reduced trees have size bounded by @xmath1 , where @xmath0 is the rotation distance .",
    "the reductions can be done in linear time @xcite .",
    "the reduced trees can be checked in @xmath7 time to see if their distance is less than or equal to @xmath0 .",
    "while this check could take exponential time , it depends only on @xmath0 , yielding the fixed - parameter tractability of computing rotation distance .",
    "we consider ordered , leaf - labelled , rooted binary trees with @xmath3 interior nodes and where each interior node has 2 children .",
    "such trees are commonly called _ extended binary trees _",
    "@xcite or _ full binary trees_. in the following , ` tree ' refers to such a tree with an ordering on the leaves , ` node ' refers to an interior node , and ` leaf ' refers to a non - interior node .",
    "our trees will have @xmath3 interior nodes and @xmath8 leaves numbered in left - to - right order from 0 to @xmath3 .",
    "right rotation at a node of a rooted binary tree is defined as as a simple change to @xmath9 and is illustrated in figure  [ rot ] , taking the middle tree to the right - hand one .",
    "left rotation at a node is the natural inverse operation .",
    "the _ rotation distance _ @xmath10 between two rooted binary trees @xmath11 and @xmath12 with the same number of leaves is the minimum number of rotations needed to transform @xmath11 to @xmath12 .",
    "the specific instance of the rotation distance problem we address is :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ rotation distance + input : two rooted ordered trees , @xmath11 and @xmath12 on @xmath3 leaves and parameter @xmath0 , + question : is the rotation distance between them , @xmath13 ? _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    there are no known polynomial time algorithms to compute rotation distance , though there are polynomial time algorithms of rogers @xcite , pallo@xcite and pallo and baril @xcite to estimate it . the general difficulty of computing rotation distance comes from the lower bound .",
    "finding a sequence of rotations which accomplish the transformation gives only an upper bound .",
    "rooted binary trees correspond naturally to triangulations of polygons via a standard equivalence , described in @xcite .",
    "a basic move of changing a triangulation is to choose two adjacent triangles forming a quadrilateral in the polygon , and replace it with two triangles where the resulting quadrilateral has the opposite diagonal .",
    "this edge - flipping move is exactly equivalent to performing a single rotation on the corresponding rooted trees .",
    "we define _ edge - flipping distance _ between two triangulations @xmath14 and @xmath15 of an @xmath3-gon to be the minimal number of such edge - flipping moves to transform @xmath14 to @xmath15 . in lemma 3b ,",
    "sleator , tarjan and thurston @xcite show that if two subdivisions @xmath14 and @xmath15 share a common diagonal , then the diagonal flip distance between @xmath14 and @xmath15 is equal to the sum of the distances between the polygonal subdivisions obtained by the subpolygons cut off before and after the common diagonal .",
    "the edge - flipping distance between @xmath14 and @xmath15 will be exactly the rotation distance of their corresponding trees .      roughly , the ability to efficiently calculate instances that are small , with respect to some parameter , is called fixed - parameter tractability . in our case ,",
    "the parameter is the distance , @xmath0 , between the trees .",
    "we show that the rotation distance can be solved in time polynomial in the size of the input ( that is , the number of leaves or nodes ) but exponential in the size of a fixed - parameter , @xmath0 the distance .",
    "see downey and fellows @xcite for more details .",
    "more formally :    a problem @xmath16 is _ fixed - parameter tractable _ in a parameter @xmath0 , if there exists some constant @xmath17 ( independent of @xmath0 ) and a function @xmath18 such @xmath16 accepts @xmath19 in time @xmath20 .",
    "we use two reduction rules , to reduce the size of the problem . the first rule , as mentioned above ,",
    "replaces common subtrees with a single node .",
    "the second rule replaces common chains with a sequence of 3 nodes , as done by allen and steel @xcite",
    ". we will show in the next section that these reduced trees have distance bounded by @xmath7 for @xmath0 the rotation distance and @xmath18 a function that depends only on @xmath0 , not @xmath3 .",
    "[ [ subtree - reduction ] ] subtree reduction : + + + + + + + + + + + + + + + + + +    this straightforward reduction eliminates a common subtree and replaces it with a single placeholder leaf .",
    "this reduction is a natural one : sleator , tarjan and thurston @xcite use it in rotation distance , interpreted there as diagonal - flip distance between triangulations of polygons .",
    "it arises naturally in connection with the tree pair diagrams representing elements of thompson s group @xmath5 @xcite . and",
    "it also has been used in the comparison of phylogenetic trees @xcite . more formally :    given ordered trees @xmath11 and @xmath12 on @xmath3 leaves , if there exists a subtree @xmath21 that occurs in both @xmath11 and @xmath12 , an application of the _ subtree reduction rule _ consists of replacing @xmath21 in both trees by a new leaf @xmath22 and call the new trees @xmath23 and @xmath24 .",
    "see figure  [ subtreerulefigure ] .    in the context of triangulations of polygons ,",
    "common subtrees give common diagonals between the triangulations .",
    "lemma 3b of @xcite is that if two triangulations share a common diagonal , then any shortest part realizing the rotation distance will not change that diagonal .",
    "thus , in terms of the dual trees , the rotation distance is preserved under by the subtree reduction rule- there will be no rotations which change the common subtrees .",
    "thus , @xmath25 if @xmath23 and @xmath24 are the result of applying the subtree rule to @xmath11 and @xmath12 , which gives the following lemma :    @xcite [ lemsubtree ] the subtree reduction rule preserves rotation distance .",
    "[ [ chain - reduction ] ] chain reduction : + + + + + + + + + + + + + + + +    this reduction eliminates a ( potentially long ) chain common to both trees and replaces it with a short chain consisting of @xmath26 pendant leaves .",
    "this is a useful reduction rule for phylogenetic trees since it does not change many of the common tree distances .",
    "allen & steel @xcite showed that tbr distance is preserved when long common chains are replaced by chains of length 3 .",
    "variants of this rule have also been used to show that other biologically inspired calculations are fixed - parameter tractable @xcite .",
    "formally ,    given ordered trees @xmath11 and @xmath12 on @xmath3 leaves , a _ common chain _",
    "@xmath27 is a sequence of pendant subtrees that occur identically in @xmath11 and @xmath12 and for which in both @xmath11 and @xmath12 :    * for each @xmath28 and @xmath0 such that @xmath29 , the path between the root and the subtree @xmath30 is shorter than the path between the root and the subtree @xmath31 .",
    "* for each @xmath32 , the parent of the subtree @xmath30 is the grandparent of @xmath33 , and * for each @xmath34 , @xmath30 is the left child of its parent in @xmath11 if and only if @xmath30 is the right child of its parent in @xmath12",
    ".    the restrictions of    given ordered trees @xmath11 and @xmath12 on @xmath3 leaves , if there exists a common chain @xmath27 that occurs identically in both @xmath11 and @xmath12 , an application of the _ common chain reduction rule _ consists of replacing @xmath27 in both trees by a chain of pendant",
    "leaves @xmath35 , ordered the same way and calling the new trees @xmath23 and @xmath24 .",
    "see figure  [ chainrulefigure ] .",
    "we note that the chain of pendant leaves , @xmath35 serve as a placeholder in the reduction and can be oriented in any way , as long as they meet the definition of a chain .     to @xmath36 . on the left ,",
    "the common chain , enclosed by the dotted line , consists of the leaves , @xmath36 , @xmath37 , @xmath38 , @xmath39 , and @xmath40 , traversing the chain from top to bottom .",
    "we apply the chain reduction to this chain to yield the trees on the right .",
    "note that the resulting trees are on the same number of leaves and the reduced chain contains leaves @xmath37 , @xmath39 , and @xmath41 , under the new labeling @xmath42 to @xmath41 .",
    ", height=216 ]",
    "to show that rotation distance is fixed - parameter tractable , we first show that the common chain rule reductions preserve rotation distance .",
    "this , combined with the straightforward fact that subtree rule reductions preserve distances ( stated in @xcite ) , gives reduced trees whose size is bounded only by a function of @xmath0 . to check if the distance between original trees is at most @xmath0 , if suffices to check the distance between the reduced trees",
    "this can be done in @xmath43 time , where @xmath7 does not depend on @xmath3 , but is exponential in @xmath0 .",
    "[ lemchain ] let @xmath11 and @xmath12 be ordered rooted trees , and @xmath23 and @xmath24 the result of applying the chain rule reduction to these initial trees . then @xmath44 .",
    "_ proof : _ let @xmath11 and @xmath12 be ordered , rooted trees with a common chain , @xmath45 , and let @xmath23 and @xmath24 the result of applying the chain rule reduction to these initial trees .",
    "we consider the dual polygonal subdivisions of the trees . in that case , having a common chain means having a sequence of adjacent shared diagonals . in lemma 3b ,",
    "sleator , tarjan and thurston @xcite show that if two subdivisions @xmath14 and @xmath15 share a common diagonal , then the diagonal flip distance between @xmath14 and @xmath15 is equal to the sum of the distances between the polygonal subdivisions obtained by the subpolygons cut off before and after the common diagonal . since the sequence of common diagonals ( i.e. the common chain ) are contiguous , the distance equals the sum of the distances of the subpolygons above and below the sequence of diagonals . shrinking",
    "the number of common diagonals does not change the distances .",
    "thus , the distance between the original trees equals the distances between the reduced trees : @xmath46 .",
    "@xmath47    the proof of fixed - parameter tractability relies on bounding the size of the reduced trees , since as noted above , our algorithm consists of reducing the trees to ones with equivalent distance but size bounded by a function of @xmath0 and then exhaustively trying all sequences of @xmath48 moves to find the distance .",
    "[ lemdistsame ] given two ordered , rooted trees , @xmath11 and @xmath12 with the same number of leaves .",
    "let @xmath23 and @xmath24 be the result of applying the two reductions rules exhaustively to the given trees . if @xmath49 , then @xmath50 .",
    "_ proof : _ given two ordered , rooted trees , @xmath11 and @xmath12 with the same number of leaves .",
    "assume that @xmath49 .",
    "we will show , by induction on @xmath0 , that @xmath50 .",
    "@xmath51 : assume that @xmath11 and @xmath12 are not identical and that @xmath52 .",
    "then , a single rotation , at some node @xmath53 , transforms @xmath23 into @xmath24 .",
    "since by the subtree reduction rule , identical subtrees have been reduced , the descendants of @xmath53 are singletons",
    ". if @xmath53 is not the root , the path from @xmath53 to the root must be identical in both trees and can have at most three pendant leaves ( since larger common chains and identical subtrees have been reduced ) .",
    "the other child of the root must be a singleton and identical in both , so , is a single leaf .",
    "thus , the total number of leaves in @xmath23 is no more than 7 .",
    "@xmath54 : without loss of generality , we assume that @xmath55",
    ". then there exists trees , @xmath56 , with the same number of leaves as @xmath11 , and @xmath57 , with the same number of leaves as @xmath23 , such that @xmath58 and @xmath59 . @xmath23 and @xmath57 differ by a single rotation , @xmath60 .",
    "first , assume that this first rotation at node @xmath53 yields a subtree identical to that in @xmath12 ( that is , the subtrees rooted at @xmath53 are identical in @xmath56 and @xmath12 ) .",
    "then , the trees @xmath57 and @xmath24 are not reduced ( since they have a common subtree rooted at @xmath53 ) . since their only difference with the tree pair @xmath23 and @xmath24 occurs at node @xmath53 , a single subtree reduction will fully reduce @xmath57 and @xmath24 .",
    "we now argue that the subtree rooted at @xmath53 can have at most @xmath61 leaves .",
    "since the subtrees rooted at @xmath53 are identical in @xmath57 and @xmath24 , there are no rotations below @xmath53 in the tree , and @xmath53 has exactly @xmath26 leaves below it . as in the base case",
    ", @xmath53 could have a chain of at most 3 pendant leaves above it . if @xmath53 is replaced by a single node in @xmath57 and @xmath24 , yielding new trees @xmath62 and @xmath63 , then @xmath62 and @xmath63 have fewer than @xmath64 leaves . @xmath62 and @xmath63 satisfy the induction hypothesis with @xmath65 , yielding @xmath66 .",
    "thus , @xmath67 .",
    "now , assume that this first rotation at node @xmath53 yields a subtree that is not identical to that in @xmath12 .",
    "then , the trees @xmath57 and @xmath24 are fully reduced and have distance @xmath68 , and we can apply the induction hypothesis to them , yielding @xmath69 . since @xmath70 , we have @xmath71 . @xmath47    from the kernalization of the problem , the fixed - parameter tractability easily follows :    [ mainthm ] rotation distance is fixed - parameter tractable in parameter , @xmath0 , the distance .    _ proof : _ given two ordered , rooted trees , @xmath11 and @xmath12 on the same leaf set , and a parameter @xmath0 .",
    "we define an algorithm for computing `` @xmath13 '' as follows :    1 .",
    "let @xmath23 and @xmath24 be the result of applying the two reductions rules exhaustively to the given trees",
    ". 2 .   if @xmath72 , then output `` no . ''",
    "3 .   else , @xmath50 . try all sequences of @xmath0 or less rotations to transform @xmath23 to @xmath24 .",
    "if one such sequence is successful , ouput `` yes . '' 4 .",
    "else , if no such sequence transforms @xmath23 to @xmath24 , then output `` no . ''    step 1 takes time linear in the number of nodes @xmath3 , and by theorem  [ lemdistsame ] the distances between the given trees and the reduced trees are the same .",
    "step 3 can take no more than @xmath73 steps .",
    "thus rotation distance is fixed - parameter tractable in the parameter @xmath0 .",
    "@xmath47    we note that the bound of @xmath73 is crude and can be improved either by using any of the standard exhaustive methods for computing rotation distance which are exponential in @xmath1 , or by precomputing the rotation distances for pairs of trees of size no more than @xmath1 .",
    "the catalan numbers @xmath74 count the number of trees of size @xmath1 , and the number of tree pairs to consider is thus on the order of @xmath75 .",
    "we have shown that rotation distance of ordered trees is fixed - parameter tractable in parameter , @xmath0 , the distance .",
    "step 3 of the algorithm from section 4 is exponential in the parameter @xmath0 , the distance .",
    "an obvious remaining open question is `` can rotation distance be calculated in polynomial time ? ''",
    "michael  r. fellows .",
    "the lost continent of polynomial time : preprocessing and kernelization . in _ proceedings of the 2nd international workshop on parameterized and exact computation ( iwpec 2006 ) _ , volume 4169 of _ lecture notes in computer science_. springer , 2006 .",
    "r.  rogers . on finding shortest paths in the rotation graph of binary trees .",
    "in _ proceedings of the southeastern international conference on combinatorics , graph theory , and computing _ , volume 137 , pages 7795 , 1999 ."
  ],
  "abstract_text": [
    "<S> rotation distance between trees measures the number of simple operations it takes to transform one tree into another . </S>",
    "<S> there are no known polynomial - time algorithms for computing rotation distance . in the case of ordered rooted trees , we show that the rotation distance between two ordered trees is fixed - parameter tractable , in the parameter , @xmath0 , the rotation distance . </S>",
    "<S> the proof relies on the kernalization of the initial trees to trees with size bounded by @xmath1 . </S>"
  ]
}
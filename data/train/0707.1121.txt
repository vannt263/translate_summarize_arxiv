{
  "article_text": [
    "one ubiquitous property of the dynamics of fluids and plasmas is their inherent multiscale character , both spatial and temporal  @xcite .",
    "this translates into a stiffness of the partial differential equations ( pdes ) that are used to describe the physical systems of interest .",
    "the numerical solution of stiff systems of coupled pdes is notoriously difficult , presenting a serious challenge to present day computational resources .",
    "wave - induced temporal stiffness occurs when the characteristic time scale of interest is much slower than that of the fastest waves present in the system . fortunately , however , it is often the case that it is not necessary to accurately capture these waves in order to obtain accurate solutions of the slowly evolving physics  @xcite .",
    "examples are the gravity wave in weather modeling  @xcite , or the alfvn and whistler waves in studies of some instabilities in plasmas  @xcite .",
    "when that occurs , implicit and semi - implicit ( si ) numerical methods have been employed as very powerful tools to potentially allow the stable and accurate time integration of the pdes on timescales which largely exceed those imposed by these high frequency , fast waves ( see , for example , the paper by knoll @xmath4  @xcite and references therein ) .",
    "more conventional and easy to implement explicit numerical schemes are limited by the well - known courant - friedrichs - lewy ( cfl ) condition and thus , in order to be stable , require integration timesteps of the order of the inverse of the maximum frequency present  a very severe , and generally unfeasible , requirement .",
    "there are advantages and disadvantages to both purely implicit and si numerical methods .",
    "implicit and si methods can both use time steps much larger than the cfl limit .",
    "implicit methods are more robust and accurate but can be harder to implement , in some cases requiring more extensive modifications to the structure of an existing code",
    ". direct solution of an implicit scheme can require the storage and inversion of impractically large matrices ( though direct sparse matrix solvers with reordering can be effective for some problems that are not too large ) .",
    "thus implicit methods often employ preconditioned iterative methods ( such as krylov methods like conjugate - gradients or gmres ) , sometimes in combination with multigrid or fft solvers ( see for example references @xcite , which also discuss nonlinear problems using jacobian - free newton - krylov solvers ) . to obtain a net speed up , it is often crucial to have a sufficiently good preconditioner that can still be efficiently inverted . while there are many options @xcite , finding such a preconditioner is problem - dependent and can be a non - trivial task .",
    "if no preconditioner is used , a krylov iterative solver applied directly to a hyperbolic wave / advection problem will usually give at most an order unity speed up in net cpu time , because the larger time step allowed by an implicit method is largely offset by the increased number of iterations required per time step .",
    "however , when a good preconditioner exists , or a multigrid or fft solver can be used , then significant savings in cpu time are possible .",
    "si methods are usually simpler to implement and work well for some problems .",
    "however , they have to be used with some care , because in some parameter regimes there can be splitting errors ( due to the different treatment of the operators involved ) and/or uncontrolled approximations to the equations that are made in their derivation ( such as linearization of the fast wave physics ) .",
    "the reader is referred to the work of knoll and keyes  @xcite and knoll @xmath4  @xcite for an overview of si methods in a variety of applications and their comparison to the jfnk approach to fully implicit methods . in this paper",
    ", we revisit si methods as they are traditionally formulated in the field of plasma physics  @xcite .",
    "using physics - based assumptions , we are able to consistently derive an iterative formulation of si schemes , which lends itself to an efficient way of monitoring and controlling the error introduced by the si operator .",
    "accuracy , rather than stability , determines the timestep .",
    "it is shown that this iterative extension of an si scheme leads to essentially a fully implicit method with the si operator providing a preconditioner .",
    "we also demonstrate how the diffusive terms can be treated so as to yield the property of robust damping , i.e. , the consistent damping of all the modes present in the simulation domain in the limit @xmath5 .",
    "the si method presented here is second - order accurate even if the diffusion and nonlinear advection operators do not commute .",
    "the method is then applied to the problem of gyrofluid magnetic reconnection .",
    "this is a very stiff application due to the presence of a high frequency dispersive wave , the kinetic alfvn wave ( kaw ) .",
    "a fourier - space , pseudo - spectral , discretization of the equations is used .",
    "compared to explicit integrations schemes , our si scheme yields cpu speed - up factors of @xmath3 to several hundreds while accurately reproducing the results of an explicit integration .    before proceeding further , we caution the reader that , although our derivation of the si algorithm presented in is general , we have only tested it in a pseudo - spectral implementation , and only for a 2-field problem that involves a single wave family ( a single dispersion relation @xmath6 vs.  @xmath7 ) .",
    "the efficiency of this method relies heavily on the effectiveness of the si operator used , which may be complicated for problems with strong spatial inhomogeneities , strong anisotropies , or for multi - field problems with multiple waves .",
    "also , our treatment of diffusion terms with a robust damping algorithm has been tested only in a fourier representation , although we discuss , in the conclusions section , how a similar result might be achieved by grid codes . while we believe this si algorithm could be useful in real - space codes at least for certain types of problems ,",
    "the reader interested in other applications should proceed with caution .",
    "finally , we note that although our focus is in the plasma physics field , the derivation of the iterative si method presented is general and should apply well to other stiff - wave physics phenomena that can be described by means of advection - diffusion pdes .",
    "as mentioned above , we are interested in dealing with coupled sets of two - dimensional advection - diffusion partial differential equations .",
    "let us consider the following set as our general model : [ psi_eq_0 ] & = & f(,)+ ( ^2-_h^4 ) , + [ phi_eq_0 ] & = & g(,)+ ( ^2-_h^4 ) . here",
    ", @xmath8 are arbitrary scalar fields , the operators @xmath9 represent the nonlinear advection - like operators , @xmath10 and @xmath11 are the resistivity and hyper - resistivity and @xmath12 and @xmath13 the viscosity and hyper - viscosity , respectively . in fourier space , we can define the diffusion operators as : d_=^2+_h^4,d_=^2+_h^4 and thus rewrite the above set ( in fourier space ) , as : [ psi_eq ] & = & |(,)-_k , + [ phi_eq ] & = & |(,)-_k . here ,",
    "the @xmath14 subscripts denote variables in fourier space and @xmath15 represent the fourier transforms of the nonlinear operators @xmath9 . for notational simplicity",
    ", we will drop both the subscripts and the over bars : it is understood that we are working in fourier space .",
    "we note also that above we have chosen a fourth order operator to represent the hyperviscosity , but the following derivation holds irrespective of the order chosen for this operator .",
    "the diffusion terms can be integrated analytically by means of the following variable transformations : [ varsubs ] = e^-t , = e^-t .",
    "thus become : [ step1_psi ] & = & e^t ( , ) , + [ step1_phi ] & = & e^tg ( , ) .",
    "we now apply a crank - nicolson discretization scheme ( spatial indices omitted for simplicity ) : [ step2_psi ] & = & ( ^n,^n ) + e^ ( ^n+1,^n+1 ) , + [ step2_phi ] & = & g(^n,^n ) + e^g(^n+1,^n+1 ) .",
    "( without loss of generality , we have defined @xmath16 , so @xmath17 . )    note that the handling of the diffusion terms through the variable substitutions of ( [ varsubs ] ) is a trivial step for spectral and pseudo - spectral codes , but more complicated in real - space codes . however , the derivation of the semi - implicit method that follows holds irrespective of how the diffusion terms are handled  this is only important for the robust damping property , to be discussed later on in . in",
    "we briefly discuss how a similar treatment of the diffusive terms can be achieved in real space codes .",
    "usual implicit schemes would now invert to determine the unknowns @xmath18 in terms of the known quantities @xmath19 .",
    "this may be done by , for example , an iterative jacobian - free newton krylov solver .",
    "a newton method turns this nonlinear root problem into a series of linear problems .",
    "these linear problems can often involve very large sparse matrices .",
    "if a direct inversion was done , the very large timestep enhancements that can be obtained relative to an explicit scheme might be severely offset by the increased cpu time per step .",
    "jacobian - free krylov iteration algorithms can be used to solve the resulting linear problems without explicitly forming the matrices . if these iterative methods converge quickly enough ( which for hyperbolic problems may require very effective preconditioners ) , then the implicit method can provide a significant improvement in cpu time relative to an explicit algorithm .",
    "the aim of our method , like more complicated iterative methods , is to circumvent the need to directly invert a large linear problem .",
    "we will use a simple iterative method , with a semi - implicit operator providing an effective physics - based preconditioner .",
    "the first step is to reformulate in an iterative way . to this effect",
    ", we begin by rewriting these equations as : [ step3_psi ] & = & ( ^n,^n ) + e^(^n+1,p+1,^n+1,p+1 ) , + [ step3_phi ] & = & g(^n,^n ) + e^g(^n+1,p+1,^n+1,p+1 ) .",
    "next , we introduce one simple , but crucial , physics based assumption : that the stiff waves arise through the coupling of the equations and are well described by the assumptions [ assumpts ] ( ^n+1,p+1,^n+1,p+1)&&(^n+1,p,^n+1,p+1 ) , + & & ( ^n+1,p,^n+1,p ) + @xmath20 , + [ assumpts2 ] ( ^n+1,p+1,^n+1,p+1)&&(^n+1,p+1,^n+1,p ) + & & ( ^n+1,p,^n+1,p ) + @xmath21 . in other words , we are assuming that the dependence of @xmath22 on @xmath23 is relatively weak ( i.e. , the fast timescales arise via the dependence of @xmath22 on @xmath24 , not on @xmath23 ) and can be approximated from the previous iteration @xmath25 , while it depends more sensitively on @xmath24 and so we need to keep its dependence on the present @xmath26 iteration value by using a taylor series ( and _ vice - versa _ for @xmath27 ) .",
    "this is certainly true in the linear limit for our model , as shown by .",
    "most wave phenomena involve oscillations between two different variables ( for example , pressure and velocity for sound waves , or position and velocity for a pendulum ) , so that approximations like the above are often justified .",
    "a key step when extending this approach to more complicated systems of equations , which might contain multiple waves , is to identify the key terms involved in the fast wave dynamics .",
    "[ we have written the jacobians in the above taylor - series expansions as functional derivatives , such as @xmath28 , since @xmath22 may be a non - local functional that operates on @xmath24 .",
    "after spatial discretization , @xmath28 will in general be a large sparse matrix .",
    "however , in our final algorithm all we have to evaluate is an approximation to @xmath29",
    ". this approximation will be local in fourier space , and so for simplicity we will replace the functional derivative notation with the standard notation @xmath30 .",
    "note that in our final algorithm we never actually need to explicitly evaluate the jacobian , just the action of a jacobian on a vector , and so this formulation is `` jacobian - free '' . ]    with this assumption , the nonlinear future time term in can be simplified by means of the taylor expansion , i.e. : [ step4_psi ] & = & ( ^n,^n)+ + & & + e^. an expression for the last term on the rhs of this equation is straightforwardly obtained ( for @xmath31 ) by taking the difference between evaluated for two successive values of @xmath25 : [ step4_phi ] ^n+1,p+1-^n+1,p=@xmath32 , where again we have used the approximations of .",
    "undoing the variable substitution of , thus becomes : [ step5_psi ] ^n+1,p+1=e^-^n+ & & e^-(^n,^n ) + ( ^n+1,p,^n+1,p)+ + & & + ( ^n+1,p+1-^n+1,p ) . at this point we note that if the above equation is iterated until convergence , i.e. , @xmath33 , where @xmath34 is the prescribed accuracy , the last term becomes negligible .",
    "therefore , it is not important to retain its exact functional form as long as convergence is reached at each timestep .",
    "we can thus simplify by replacing the last term on the rhs with an analytically invertible approximation .",
    "we use : [ step_approx ] = -^2 where @xmath35 is given by the dispersion relation , or an approximation to it .",
    "[ specific forms for the operator @xmath36 will be discussed later , for now it should just be thought of as an operator that is relatively easy to invert . ]",
    "the steps we have just taken are similar to those for some previous si derivations and share some key advantages for high - frequency waves , since it is only the combination @xmath37 that has to be approximated by the semi - implicit operator , and not @xmath38 and @xmath39 separately . as discussed in the si literature , this is much simpler because one does not have to worry about getting the sign of the approximation @xmath40 correct ( i.e. , one does not have to worry about the direction of propagation of the waves ) .",
    "chacn and knoll  @xcite have shown how this kind of physics - based semi - implicit operator can be related to a schur complement preconditioner , turning an originally hyperbolic problem into a diagonally dominant parabolic problem that can be efficiently solved by preconditioned krylov ( if the preconditioner is sufficiently effective ) and/or multigrid iterative techniques . in some cases ,",
    "the resulting problem can also be efficiently solved with ffts , which we use here .",
    "so far , we have : [ step6_psi ] ^n+1,p+1&= & e^-^n + e^-(^n,^n ) + ( ^n+1,p,^n+1,p)+ + & & -(^n+1,p+1-^n+1,p ) , + [ step6_phi ] ^n+1,p+1&=&e^-^n+e^-(^n,^n ) + ( ^n+1,p,^n+1,p+1 ) . constitute the basis of our iterative semi - implicit method .",
    "since this iteration converges ( as we will later show ) to the crank- nicolson ( cn ) solution for an arbitrary initial condition ( within some domain ) , it is tempting to just use these equations with the initial guess @xmath41 , @xmath42 .",
    "however , one finds that if one does this for an undamped wave test problem , the amplitude of the solution converges to the cn solution from above , so the algorithm is numerically unstable for any finite number of iterations .",
    "one can demonstrate this by considering the test problem @xmath43 , @xmath44 , @xmath45 , finding that the squared amplification factor for the first iteration gives @xmath46 .",
    "for high frequency modes that we are trying to treat implicitly , this becomes @xmath47 , which is significantly larger than unity .",
    "while further iterations would converge towards the crank - nicolson solution , which has @xmath48 , this significant numerical amplification would still be problematic , and would require that the semi - implicit operator be an extremely good approximation to the real dynamics in order to converge quickly .",
    "furthermore , it is somewhat bothersome that this algorithm would give such a large numerical amplification , since it is supposed to be an approximation to the stable crank - nicolson algorithm given by .",
    "however , note were derived using , which is valid only for @xmath31 , so an expression for the initial @xmath49 step of the iteration requires further consideration .",
    "it turns out that a more careful treatment of the initial step will also make the final algorithm stable . using in for @xmath49",
    ", we have : [ phi_1 ] ^n+1,1=&&e^-^n+e^-(^n,^n)+ + & & + @xmath50 .",
    "let us define the quantity @xmath51 as : [ phi_star ] ^n+1,*=e^-^n+e^-(^n,^n ) + ( ^n+1,0,^n+1,0 ) , which reduces to : [ phi_star_2 ] ^n+1,1=^n+1,*+@xmath52 . substituting this",
    "into evaluated at @xmath49 , and using , yields [ step8_psi ] ^n+1,1= & & e^-^n + e^-(^n,^n ) + & & + ( ^n+1,*,^n+1,0)+ @xmath52 , where again the last term on the rhs can be simplified making use of approximation ( [ step_approx ] ) . equation ( [ step8_psi ] ) followed by ( evaluated for @xmath49 ) would give a 1st order accurate prediction of @xmath53 .",
    "this could then be iterated once with to obtain a second order accurate calculation for @xmath54 .",
    "however , a small modification to the prediction step can give a 2cd order accurate results for @xmath55 .",
    "this is done by replacing @xmath56 in the nonlinear term of with a 1st order accurate approximation , @xmath57 , so that becomes ^n+1,1= & & e^-^n + e^-(^n,^n)+ + & & ( ^n+1,*,^n+1,*)- @xmath52 , where @xmath57 is defined as : [ psi_star ] ^n+1,*=e^-^n+e^-(^n,^n ) + ( ^n+1,0,^n+1,0 ) .",
    "note that the replacement of @xmath58 with @xmath59 is consistent with the assumption of that the dependence of @xmath22 on @xmath23 is relatively weak , but is useful to ensure second order accuracy of the calculation of @xmath60 .",
    "similarly , when calculating @xmath61 from for @xmath49 , the term @xmath62 is replaced by @xmath63 .",
    "this gives a 2cd order accurate result for @xmath64 .",
    "the choice @xmath65 closes the specification of our semi - implicit scheme .",
    "the final equations for the iterative si algorithm can be written in a compact form as follows : [ phi_star_final ] ^n+1,*&=&e^-^n+@xmath66(^n,^n ) , + [ psi_star_final ] ^n+1,*&=&e^-^n+ @xmath67(^n,^n ) , + [ psi_final ] ^n+1,p+1&= & e^-^n + e^-(^n,^n ) + ( ^n+1,p,^n+1,p)+ + & & -(^n+1,p+1-|^n+1,p ) , + [ phi_final ] ^n+1,p+1&=&e^-^n+e^-(^n,^n ) + ( ^n+1,p,^n+1,p+1 ) . where now @xmath68 , @xmath69 and @xmath70 , @xmath71 for @xmath31 .",
    "we mentioned above that these equations ought to be iterated until convergence , at which point the last term on the rhs of is negligible and these equations become equivalent to the fully implicit .",
    "the relative importance of this term can be quantified by : [ si_error ] e_ji^p+1 = || , where @xmath72 , @xmath73 are the fourier ( or real ) space grid point indexes and @xmath74 is the total number of grid points .",
    "the timestep of the integration and/or the number of @xmath25 iterations is thus determined by the requirement : [ si_error_cond ] |e_ji^p+1|<where @xmath34 is the user prescribed accuracy .",
    "we emphasize that this error is a measure of the convergence of the iteration scheme to the crank - nicolson difference equation .",
    "it is not a direct control of the overall error in the integration ( which , when converged , will be that of a cn scheme ) . for convenience , we also define the total number of iterations of as @xmath75 .",
    "i.e. , @xmath75 is the number of times the semi - implicit operator is inverted in corrector steps .",
    "@xmath76 evaluates once , for @xmath49 , to determine @xmath55 .",
    "@xmath77 evaluates twice , for @xmath78 , and calculates up to @xmath54 .",
    "there are several variations of si methods and their derivations in the literature , some using a more heuristic approach of adding and subtracting an operator to the rhs of one of the equations , and some taking a more systematic approach to deriving an si operator .",
    "also , some si algorithms have used a leap - frog - like staggered time grid .",
    "our final result is closest to certain si methods using non - staggered grids .",
    "for example , our for @xmath76 are equivalent to eqs.(11 - 14 ) of @xcite .",
    "the formulation presented here makes it clear how to extend other semi - implicit methods to use additional iterations if desired ( in this regard , note that it is important that the definition of @xmath79 is different on the first @xmath49 corrector step than in later iterations ) .",
    "these additional iterations provide a simple way to turn a semi - implicit method into a fully implicit method , and further demonstrate the relation between si ideas and preconditioning for iterative methods , as discussed in .",
    "we will now show under which conditions the method described by is unconditionally stable with respect to the timestep @xmath2 . for simplicity",
    ", we neglect the diffusive terms ( since these terms are treated implicitly , they have a stabilizing effect ) . in line with the assumptions of ( [ assumpts ] )",
    ", we assume that , in the linear regime , the following is true : [ linear_ops ] ( , ) & & f , + ( , ) & & g. taking the simplest case of @xmath80 ( i.e. , a predictor - corrector scheme ) can be written in matrix form as : @xmath81 @xmath82 = @xmath83 @xmath84 , where @xmath85 .",
    "inversion of the matrix on the lhs yields the equation @xmath82 = a @xmath84 , where @xmath86 is the amplification matrix : a= @xmath87 .",
    "[ a_matrix ] the method is unconditionally stable when the eigenvalues @xmath88 of the matrix @xmath86 are such that @xmath89 . using @xmath90",
    ", we obtain : [ eigenvalues ] _",
    "= it is straightforward to show that this algorithm is symplectic , @xmath91 , if the argument of the square root is positive .",
    "thus we have unconditional stability for arbitrarily large @xmath92 if @xmath93 , or in the relevant limit of @xmath94 , if @xmath95 .",
    "since the magnitude of the error at each iteration , expression ( [ si_error ] ) is proportional to @xmath36 , it is clear that setting @xmath96 ( but @xmath97 ) is the best choice for stability and accuracy .",
    "( of course , nonlinearly @xmath98 is not known , so one wishes to set @xmath99 to be an approximate upper bound on the true operator @xmath98 . ) here we have demonstrated that the first corrector step , @xmath76 , gives a solution that is symplectic ( at least for this linear wave test problem ) .",
    "additional iterations would eventually converge to the crank - nicolson solution , which is also symplectic .",
    "we have also proven that the algorithm is symplectic for arbitrary @xmath75 , as discussed at the end of the next section .",
    "finally , note that a taylor series expansion of expressions ( [ eigenvalues ] ) yields : _",
    "= 1i -o ( ^3 ) , consistent with the fact that the first order accurate predictor step of ensures that the corrector iterations are 2cd order accurate .      to determine the convergence rate of the iterative scheme presented in we set : ^n+1,p+1&=&^n+1+^n+1,p+1 , + ^n+1,p+1&=&^n+1+^n+1,p+1 . where the first term on the rhs is the converged solution and @xmath100 are the error at each iteration .",
    "again using the linear approximations of equations ( [ linear_ops ] ) , it is straightforward to obtain the equation @xmath101 = @xmath102 @xmath103 .",
    "[ convergence_matrix ] the matrix on the rhs has the eigenvalues _ 1=0 ,",
    "_ 2=. [ convergence_eigenvalues ] clearly @xmath104 is the eigenvalue of interest . in the limit of @xmath105 ,",
    "this expression simplifies to : [ eigen_conv ] _ 2=1- .",
    "we showed in the previous section that @xmath106 is the best choice in terms of achieving stability while minimizing the error ( [ si_error ] ) at each iteration .",
    "expression ( [ eigen_conv ] ) shows that this is also the best choice in order to maximize the convergence rate .",
    "however , the iteration will converge as long as the semi - implicit operator is large enough .",
    "the stability condition for the first iteration , @xmath107 from the previous section , is also a sufficient condition for convergence .    in the previous section",
    ", we demonstrated that the algorithm for @xmath76 is symplectic .",
    "we have also shown this is true for arbitrary @xmath75 , and here we summarize the main steps .",
    "first write , which holds for @xmath108 , in the vector - matrix form @xmath109 , where @xmath110 denotes the matrix @xmath111 raised to the @xmath25th power ( as opposed to an index superscript ) . expressing the converged crank - nicolson solution as @xmath112 ( where the matrix @xmath113 can be easily calculated ) , and the @xmath76 solution as @xmath114 ( where @xmath115 is given by ) ,",
    "this can be written as @xmath116 { { \\bf y}}^n \\doteq { { \\bf a}}_p { { \\bf y}}^n$ ] .",
    "the eigenvalues of the matrix @xmath117 can then be calculated using a symbolic mathematics package for simplicity ( we used maple  @xcite for this calculation ) . to reduce the complexity of intermediate equations",
    ", it is useful to express @xmath118 , where the columns of @xmath119 are the eigenvectors of @xmath111 and the diagonal matrix @xmath120 ( without yet substituting the actual value of the eigenvalue @xmath104 from ) .",
    "one can then show that the eigenvalues of @xmath117 can be written in the form @xmath121 , where @xmath122 is real and a sufficient condition that @xmath123 be positive is again the stability criterion from the previous section , @xmath107 . the terms @xmath122 and @xmath123 satisfy @xmath124 , thus showing that this algorithm is symplectic for an arbitrary number of iterations @xmath75 .      to investigate some of the properties of this algorithm ,",
    "let us for simplicity consider now a more compact vector form provided by the following equation : = f ( ) - _ , [ compact_eq ] where @xmath125 may be a vector field ( with components @xmath126 ) , @xmath127 is a nonlinear operator , and @xmath128 is a linear operator ( which represents dissipation in our problems ) .",
    "introducing the variable transformation @xmath129 , this becomes = e^_t f ( ) ( ) .",
    "[ compact_eq2 ] ( a definition is denoted by @xmath130 . ) for simplicity we will drop the tildes over variables in the rest of this subsection .",
    "it is not hard to see that , in this case , the numerical scheme of ( using to approximate @xmath22 ) is equivalent , for @xmath131 , to : [ psi_simple ] ^n+1,p+1&= & ^n + @xmath132 , where @xmath133 is the semi - implicit operator , and therefore , chosen to be invertible . can thus be easily manipulated to yield : [ psi_simple_inv ] ^n+1,p+1=@xmath134",
    "^ -1@xmath135 we now show how the above equation can be obtained with a jacobian - free newton algorithm coupled with a preconditioned simple functional iteration .",
    "a crank - nicolson discretization of leads to : ^n+1-(^n+1)=^n+(^n ) as mentioned before , directly inverting the lhs of this equation is often hard and impractical .",
    "a common and useful approach is to resort to preconditioned iterative methods . for nonlinear cases like this ,",
    "it is useful to use an outer newton iteration for the nonlinear part of the problem , and an inner iteration with preconditioning for the resulting linear part of the problem .",
    "i.e. , introducing a newton iteration count @xmath25 , the above equation becomes : ^n+1,p+1-=^n+(^n ) , [ compact_newton ] because @xmath136 is a complicated , large sparse matrix , it is still impractical to directly solve this problem .",
    "if we have an approximation to @xmath136 , denoted by @xmath133 , that is not too hard to invert , we can use this as a preconditioner , and write as ( 1 - ) ^-1 & & ( 1 - ) ^n+1,p+1 = + ( 1 - ) ^-1 & & .",
    "this is of the form @xmath137 .",
    "if the preconditioner is sufficiently good , then @xmath138 is close enough to the identity matrix that a simple functional iteration should be sufficient .",
    "using an index @xmath139 to label these iterations within each newton step , this would become @xmath140 , with the initial condition @xmath141 .",
    "this should converge as long as the magnitude of the eigenvalues of @xmath142 are all less than unity .",
    "if we do only one inner functional iteration ( @xmath143 ) per outer newton iteration , then this exactly reproduces .",
    "[ alternatively , replacing @xmath136 in with the approximate jacobian @xmath133 leads to . ]",
    "the iterative semi - implicit algorithm presented in this paper is essentially this , with a particular physics - based form for @xmath133 appropriate for high frequency waves arising from coupling between differential equations , and a modification of the first step to give a symplectic second - order accurate result after one corrector step .",
    "more advanced iterative methods could be used , such as krylov methods like gmres or restarted loose gmres  @xcite , and will accelerate convergence for some types of problems .",
    "( also , because of the various approximations made , our simplified algorithm will not have the asymptotic quadratic convergence of a full newton algorithm on the nonlinear part of the problem . )",
    "however , we have found that simple functional iteration works quite well for our problems , converging in just an iteration or two . in part , this is because there is very little energy contained in the high frequency waves in these problems . in principle , convergence might be slow if there were a significant component of the error vector in these high frequency waves , for which @xmath144 has the largest eigenvalues .",
    "but there is very little physical coupling between the low frequency dynamics of interest and the high frequency waves , so if they are treated in a numerically stable way , they will have been damped away on previous time steps and do not require many iterations on subsequent time steps .",
    "although we use a simple functional iteration , note that the optimal method for inverting the physics - based preconditioner @xmath145 itself might in some cases be an iterative algorithm ( more on this in ) , or in other cases with ffts or a direct sparse matrix solver . for our application , we are already using ffts for a pseudo - spectral evaluation of the nonlinear terms , so it is easy to implement and very efficient to directly invert our physics - based preconditioner in wave - number space .      in the derivation of the numerical scheme of",
    ", the nonlinear advection operators and the diffusion operators are treated differently .",
    "operator splitting methods can give rise to splitting errors in numerical schemes , resulting in an overall order of the scheme which is lower than that of any of the individual methods applied to treat each of the operators .",
    "in this section , we show that our scheme is second order accurate even if these operators do not commute .",
    "to demonstrate this point , it is sufficient to consider the paradigm posed by the compact vector form of . crank - nicolson discretization of yields ^n+1-^n = e^_(t+ ) ( ^n+1 ) + e^_t ( ^n ) .",
    "undoing the variable transformation and rearranging gives ^n+1 - ( ^n+1 ) = e^- _ @xmath146 .",
    "[ sec_order ] through second - order accuracy , the lhs can be expanded as lhs=@xmath147 \\left.-\\psi^n)\\]$ ] .",
    "then the above equation becomes @xmath148 ^n+1 = e^- _ @xmath146 + ( ^n ) - ^n [ splitting_expansion ] from a second order taylor - series expansion , @xmath149 , we see that the solution to through second order accuracy should be : ^n+1 & = & ^n + ( ^n ) - _ ^n + & & + @xmath150 .",
    "[ taylor_series2 ] inverting the operator on the lhs of and expanding , one can show that agrees with through second order .",
    "thus we have demonstrated that , at least in the limit of @xmath151 , our splitting scheme is second order accurate even if the advection ( @xmath22 ) and the diffusion ( @xmath128 ) operators do not commute .",
    "numerical demonstration of the second order convergence of the algorithm for our test problem will be presented in , where it will be seen that the algorithm remains second order accurate even at values of @xmath2 considerably larger than those required by an explicit integration .",
    "let us consider a simple test problem based on a linear scalar version of with @xmath152 and @xmath128 a real number , [ robust_eq ] = -(i+ ) .",
    "the analytic solution is straightforward : [ robust_exact ] = _ 0e^-(i+)t , where @xmath153 is the initial condition .",
    "a plot of the magnitude of this solution is shown in  , for the parameters @xmath154 and @xmath155 ( full black line ) .",
    "also shown are the numerical solutions of with three different numerical methods : in red ( dashed line ) , the solution yielded by ( i.e. , the method described in this paper ) @xmath156 ; in green ( dotted line ) the result obtained by the analytic integration of the diffusive exponential , as described in appendix  [ exact_exp ] and , in blue ( dash - dotted line ) , the solution given by a crank - nicolson discretization of the rhs .",
    "as seen , for @xmath157 , all three methods reproduce the exact solution . however , only the discretization of is capable of capturing the behavior of the exact solution for _ any _ value of @xmath2 , as is desirable for a robust treatment of damping with implicit integration , where @xmath158 .",
    "one might try to improve the cn approach by using cn for the wave term and backwards euler for the damping term , i.e. , discretize as @xmath159 .",
    "however , in the limit @xmath160 this gives @xmath161 , which for @xmath162 gives very little damping , even though @xmath163 .",
    "[ robust_pic ]    the algorithm presented here preserves the property of robust damping , which mathematically is termed @xmath164-stability .",
    "an algorithm that is stable for the for arbitrary @xmath165 ( for @xmath166 ) is called @xmath86-stable .",
    "an algorithm is @xmath164-stable if it is @xmath86-stable and has the property of the exact solution that @xmath167 as @xmath5 .",
    "it is well known that crank - nicolson is @xmath86-stable but not @xmath164-stable . in physical terms , while crank - nicolson has the nice property of giving no artificial damping of pure wave problems ( i.e. , it is symplectic for @xmath168 ) , it has a difficulty in not giving significant damping for problems that should be strongly damped in the large @xmath2 limit .",
    "examples of @xmath164-stable algorithms include the 2cd order backward differentiation formula ( bdf2 ) , and certain rosenbrock or implicit - explicit runge - kutta algorithms .",
    "the iterated semi - implicit method presented here is based on a kind of integrating - factor variation of crank - nicolson that makes it @xmath164-stable .",
    "( an algorithm based on the modified crank - nicolson algorithm  @xcite could be another way to improve the treatment of damping . ) alternatively , one could develop an iterative semi - implicit algorithm starting from bdf2 instead of cn .",
    "this would be automatically @xmath164-stable and would treat the damping and other terms in a balanced way that might have certain advantages for some applications . on the other hand , bdf2 introduces a weak numerical damping of resolved waves , @xmath169 , while the algorithm presented here has the advantage of retaining the cn property of being dissipation free in the limit @xmath168 .",
    "future work could investigate the relative advantages of these different approaches .",
    "the field of plasma physics is particularly rich in stiff wave problems .",
    "one such application is magnetic reconnection  @xcite , a phenomenon in which magnetic field lines that are being convected with the plasma flows suddenly break and reconnect in a different configuration . magnetic energy is released in this process , giving rise to high velocity plasma flows , energetic particles and plasma heating .",
    "reconnection is the cause of solar flares  @xcite ; it is also manifest in the interaction between the solar wind and the earth s magnetic field  @xcite in the magnetopause  @xcite and magnetotail  @xcite . in fusion devices it plays a crucial role in the development of the sawtooth instability , which can be detrimental to the plasma confinement  @xcite .    in the absence of external forcing ,",
    "magnetic reconnection arises as a result of a well known plasma instability called the tearing mode @xcite .",
    "regardless of the physical framework [ i.e. , resistive magnetohydrodynamics ( mhd ) , hall - mhd . ] , kinetic , etc . ]",
    ", this instability is particularly hard to simulate numerically ( see , e.g. ,  @xcite ) .",
    "the reason is essentially one : the intrinsically multiscale character , both temporal and spatial , of magnetic reconnection . with respect to its time evolution",
    ", the problem arises because the typical growth rate @xmath170 of the tearing instability is much smaller than the frequency of the fastest waves present in the system ( e.g. , alfvn waves , kinetic alfvn waves , whistler , etc . ) ; spatially , this problem requires the simulation of at least two , but often more , spatially distinct scales : the large scale equilibrium and the short scale dissipation layer .",
    "the separation between these two scales is a function of the magnitude of the field - line breaking terms ( e.g. , resistivity , electron inertia ) which , in order to address a physically meaningful region of parameter space , have to have extremely small magnitudes , and thus become important only in very narrow regions in the plasma where strong gradients arise .",
    "it follows from these conditions that numerical simulations of magnetic reconnection require extremely high spatial resolutions and either an implicit time integration scheme or , if an explicit scheme is adopted , timesteps which are much smaller than @xmath171 .",
    "in many plasmas of interest , such as those in fusion devices , or at the magnetotail or solar flares , it has long been suspected that an mhd description is too simple to fully explain the complexity of the observations .",
    "the discrepancy is obvious in the observed and calculated reconnection rates which , in the mhd framework , differ by several orders of magnitude .",
    "interest has diverged to non - mhd effects which might cause a speed - up of this process  @xcite .",
    "the potential candidates differ depending on the specific geometry and plasma parameters .",
    "for example , in most present fusion plasmas , the ion larmor radius exceeds , or at least is comparable to , the width of the dissipation region .",
    "thus , finite ion larmor radius ( flr ) effects can not be neglected and are , in fact , known to produce a speed up of the reconnection rate @xcite . from the numerical point of view , the flr terms bring about one further complication : their inclusion in the equations fundamentally changes the dispersion relation of the shear alfvn wave , essentially generalizing it to the so - called kinetic alfvn wave ( kaw ) , which has a high frequency dispersive character , i.e. , @xmath172 , where @xmath173 is the wave frequency and @xmath174 the wavenumber ( the counterpart to the flr effects in the absence of a strong magnetic field is the hall term in ohm s law , which also introduces a high frequency dispersive wave , the whistler  see @xcite for a detailed discussion of the relative roles of these waves ) .",
    "explicit numerical integration schemes are forced to resolve the highest frequencies present in the system , i.e. , they must integrate on a timestep @xmath175 .",
    "therefore , when dispersive waves are present , @xmath176 . since @xmath177 , where @xmath178 is the grid - spacing , the time step becomes impractically small as higher resolutions are required to resolve the extremely thin reconnection layer .",
    "reconnection studies with flr or hall terms typically use hyper - diffusion ( or hyper - resistivity ) to limit how thin the reconnection layer becomes , which helps limit how small the grid spacing @xmath178 needs to be , and thus allows the time step @xmath165 to be larger than it would be otherwise .",
    "there can be a certain amount of physical hyper - resistivity in the ohm s law due to electron viscosity , and the macroscopic physical results are found to be independent of the choice of hyper - diffusion over a range of small hyper - diffusion , but if the hyper - diffusion is too large it can affect some of the physical results of interest . for typical values of hyper - diffusion used in simulations ,",
    "the required grid resolution is still fairly fine and the resulting explicit time step limitation is still quite severe , so one is motivated to search for an implicit or semi - implicit algorithm to bypass this severe time step limitation .      to study flr effects in magnetic reconnection we chose a 2 field gyrofluid model , described by the following normalized equations : [ gyro_ne_1 ] + [ , n_e]&=&[,^2 ] + ^2 n_e-_h^4n_e , + [ gyro_psi_1 ] + [ , ] & = & _ s^2[n_e , ] + ^2 ( -_eq)- _ h ^4 ( -_eq ) , + [ gyro_poisson ] n_e&=&@xmath179 .",
    "here @xmath180 is the perturbed electron density , @xmath24 represents the electrostatic potential , @xmath23 is the magnetic flux , related to the in - plane magnetic field by @xmath181 , @xmath182=\\d_{x}p\\d_{y}q-\\d_{y}p\\d_{x}q$ ] is the poisson bracket and @xmath183 and @xmath184 are the ion and the ion - sound larmor radius , respectively .",
    "auxiliary quantities are the parallel current density , @xmath185 , where @xmath186 , and the flow velocity , @xmath187 .",
    "dissipation is provided by the viscosity @xmath12 and the resistivity @xmath10 .",
    "we also add , for physical reasons and numerical convenience , phenomenological hyper - diffusion coefficients , @xmath13 and @xmath11  @xcite . in",
    ", the equilibrium is subtracted from the nonideal terms on the rhs in order to impose an ideal equilibrium [ this is equivalent to imposing an external electric field , @xmath188  see appendix  [ eq_term ] for how to include this term in the numerical scheme of .",
    "time is normalized to the alfvn time , lengths to the equilibrium scale length .",
    "these equations are reminiscent of the more complete models of snyder and hammett  @xcite and schep  @xcite .",
    "is known in the literature as the gyrokinetic poisson equation @xcite .",
    "the integral operator @xmath189 expresses the average of the electrostatic potential over rings of radius @xmath183 . in fourier space ,",
    "this operator simply becomes _",
    "0(b)=e^-bi_0(b ) , where @xmath190 and @xmath191 is the modified bessel function of zeroth order . in other words , within the gyrokinetic work frame , the particle is allowed to experience different values of the electrostatic potential as it orbits the magnetic guide field .",
    "the purpose of the @xmath192 operator is to average @xmath24 over such orbits and over the maxwellian velocity distribution .",
    "when implemented numerically in real space , a pad approximant of this operator is often used  @xcite : _ 0(b)-1- , which converts into : [ pade_gyro ] @xmath193n_e=^2 . in our case , is solved in fourier space and thus no approximation to @xmath194 is required . in the limit @xmath195 ,",
    "the above set of equations reduces simply to the reduced mhd ( rmhd ) model of strauss  @xcite .",
    "sets of fluid equations similar to the above , or their collisionless version , which further include electron inertia , have been in use for quite some time to study magnetic reconnection ( e.g. kleva  @xcite ) .",
    "the particular form presented , however , differs from most in that it also includes the effect of finite ion temperature ( i.e. , @xmath196 ) and is unique , so far , in magnetic reconnection studies , in keeping the full form of the gyrokinetic poisson law , , instead of its pad approximant , ( see , e.g. , grasso  @xcite ) . for simplicity ,",
    "let us for now ignore the diffusive and hyper - diffusive terms and consider an equilibrium described by @xmath197 , with @xmath198 a constant , @xmath199 and @xmath200 .",
    "we want to linearise assuming that all the fields can be written as @xmath201 , where @xmath202 represents small perturbations to the equilibrium of the form @xmath203 .",
    "dropping the subscripts , become : [ linearized_ne ] & = & f , + [ linearized_psi ] & = & g n_e , where f&=&-ik_yb_0 ^ 2 , + g&=&-ik_yb_0@xmath204 . combining these two equations",
    ", we have : [ linear_0 ] = -^2 , and similarly for @xmath180 , where @xmath98 is given by : [ kaw_dr ]",
    "^2=-fg=^2 @xmath204k_y^2 b_0 ^ 2 .",
    "this is the general dispersion relation for the kinetic alfvn wave ( kaw ) . in the limit of @xmath205",
    "this relation reduces to : ^2=@xmath206k_y^2 b_0 ^ 2 where @xmath207 .",
    "the first term on the rhs constitutes what is usually referred to as the shear alfvn wave , and the remaining @xmath208 terms are the flr corrections .",
    "[ note that @xmath209 because @xmath210 in this 2-d problem and the guide field @xmath211 only enters through the gyroradii @xmath212 and @xmath213 . ]",
    "the opposite limit of @xmath214 gives : [ large_disp_rel ] ^2=^2 ^ 2 k_y^2b_0 ^ 2 where @xmath215 .",
    "the numerical difficulties faced in the explicit integration of the set of at @xmath216 are obvious from expression ( [ large_disp_rel ] ) , where we basically find that @xmath217 .",
    "based on the linear dispersion relation , , a plausible first choice for the si operator @xmath218 could be : ^2=^2 @xmath204k_y^2 a_0 ^ 2 b_0 ^ 2 , where @xmath219 is a dimensionless constant , set to a value that ensures the stability of the algorithm and , to account for a spatially varying equilibrium magnetic field , @xmath220 , @xmath198 can be chosen to be its maximum value . however , in the nonlinear regime , the magnetic field will no longer be a function of @xmath221 alone , but rather an arbitrary function of @xmath221 and @xmath222 .",
    "this suggests a qualitative generalization of this expression in order to also apply to the nonlinear regime : [ disp_rel_general ] ^2=^4@xmath204a_0 ^ 2 b_,max^2 , where we simply have made the transformations @xmath223 and @xmath224 , where we define @xmath225 is the maximum magnitude of total in - plane magnetic field , updated at each new timestep .",
    "alternatively , one could try developing an si operator that included the spatial dependence of the magnetic field , but it would no longer be analytically invertible in @xmath14 , and would require alternative solvers that are not available in our code at present .",
    "( for example , some rational function approximations for an si operator that included spatial variation of @xmath198 might be efficiently invertible in real space using a multigrid solver .",
    "@xcite for some other possible approaches to preconditioners / si operators for problems with strong inhomogeneities , anisotropies , and multiple waves . ) of course , for problems in which the magnetic field has spatial variation , as in the application of the next section , is no longer an accurate dispersion relation for the system ( i.e. , it is no longer an eigenvalue of the linear problem , and fourier modes are no long eigenvectors )",
    ". nevertheless , as we shall see in , the si operator based on a constant @xmath198 is found to be fairly effective for the case considered there .",
    "( in part this may be because stability of the si algorithm only needs the approximation @xmath99 to be sufficiently large .",
    "while an si operator that is larger than necessary may require more iterations to converge from an arbitrary initial guess , this can be offset if the initial predictor - corrector step is sufficiently accurate . ) in places where @xmath226 , this operator simply reduces to the spectral equivalent of the real - space @xmath227 operator proposed by @xcite for the whistler wave .",
    "note , however , that whereas @xmath228 will certainly be very large in the vicinity of the x - point , it will also be negligibly small far away .",
    "it is therefore very useful to retain the full form of the @xmath192 operator in the expression for @xmath35 .",
    "because our code works in fourier space , this operator is trivial to implement without resorting to any approximations .",
    "since it does not require any convolution , the computational cost of evaluating expression  ( [ disp_rel_general ] ) at each timestep is negligible . in the conclusions we address the issue of how it might be generalized to a real - space grid implementation .",
    "an important property of this si operator is its ability to act on each value of @xmath174 individually .",
    "for instance , the magnitude of @xmath35 is small for the lower values of @xmath174 , meaning that the large scale features are left relatively unaffected .",
    "also , it is well behaved in the limit of @xmath229 , where it reduces to = @xmath206 ^ 2 a_0 ^ 2 b_,max^2 , a form which makes transparent the operator s ability to equally stabilize the shear alfvn wave .",
    "finally , we note that the substitution @xmath223 in the expression for the si operator implies that during the linear and early nonlinear regimes the parameter @xmath219 can be set to values which are smaller than 1 .",
    "this is important since , as mentioned , we want the operator @xmath35 to be sufficiently large to satisfy the stability condition @xmath97 ( and ideally , @xmath99 as close as possible to @xmath98 for all wavenumbers ) , but not so large that convergence is slow and the error defined by expression ( [ si_error_cond ] ) ( which is proportional to @xmath230 ) is larger than it need be .      an important part of the algorithm is the semi - implicit error control and timestep determination loop .",
    "the basic idea behind it is to enforce the limit on the semi - implicit error prescribed by the user , [ error_cond ] |_ji^p|_max , while maximizing the timestep that can be taken .",
    "this is done the following way .",
    "the discretized set of is iterated until @xmath231 .",
    "then , the following conditions determine the next step : [ next_dt ]    ll -  ( a)&_max : ^n+1=c^-^n    where @xmath232 and @xmath233 are constants .",
    "the goal is to keep the error below but as close to the maximum as possible .",
    "based on the second order convergence of the numerical scheme , we set @xmath234 and @xmath235 . at every timestep ,",
    "the cfl condition for the plasma flow velocities is also evaluated , according to : [ cfl_flowcond ] _ cfl^flows=0.1 .",
    "the next timestep is the minimum of expressions ( [ next_dt]-[cfl_flowcond ] ) .",
    "it is important to note that the error control and timestep determination loop just described makes the choice of @xmath219 less vital to the algorithm than otherwise .",
    "the reason is that if the calculation is started with values of @xmath219 and @xmath2 such that the si scheme is unstable , this will cause the error to diverge until it reaches the maximum allowed , at which point @xmath2 is decreased .",
    "this cycle will be repeated until a sufficiently small @xmath2 is found for which the si scheme is stable at that ( fixed ) value of @xmath219 .",
    "of course , if @xmath219 is set to too small a value , stability of the si algorithm might only be available at values of @xmath2 much smaller than those which can be achieved at larger @xmath219 .",
    "finally , the reader is again reminded that this error is not the total error of the integration , but simply that introduced by the semi - implicit operator . when the iterative procedure has converged",
    ", there is still an underlying error which is that of the crank - nicolson scheme .",
    "as mentioned , we have written a fully parallel pseudo - spectral code to evolve .",
    "an explicit time - stepping version of this code has been in use for some time to study the evolution of the resistive tearing mode in the single fluid mhd limit ( @xmath236 ) .",
    "the code uses a fourier basis set on a 2-dimensional domain with periodic boundary conditions .",
    "details and extensive benchmarking can be found in  @xcite ; see also  @xcite for recent results .",
    "the explicit algorithm uses a modified version of the adams - bashford 3rd - order method that allows for variable timesteps  @xcite , combined with a crank - nicolson scheme for the dissipative terms ( in this case , the use of a cn scheme for these terms is fully justified because @xmath237 , since @xmath238 ) .",
    "the timestep is determined by the cfl condition , which is evaluated at each timestep according to the formula [ cfl_cond ] = 0.1 , where @xmath239 is an estimate of the maximum frequency of the kaw on the grid , defined as : _",
    "kaw,=k_,@xmath204 ^ 1/2k_y , b _ , the code also allows the resolution in the @xmath222-direction ( i.e. , perpendicular to the equilibrium direction ) to vary throughout a run , as needed .",
    "when more resolution becomes necessary in this direction the run is stopped and the number of grid points doubled .",
    "the new data values necessary for this procedure are obtained via linear interpolation between two adjacent points .",
    "this is a very useful feature for reconnection runs , as the needs for resolution in the @xmath222-direction increase greatly from the linear to the nonlinear regime .",
    "the base - case chosen for comparison between the si method of and the explicit code is characterized as follows .",
    "the equilibrium is defined by @xmath240 and @xmath241 .",
    "we set @xmath242   so that the maximum value of the equilibrium magnetic field is 1 .",
    "other parameters are the resistivity and the viscosity coefficients , set to @xmath243 , and the instability parameter @xmath244 ( i.e. , the simulation box size is @xmath245 , @xmath246 ) . the ion and the ion - sound larmor radius , @xmath183 and @xmath184 , are set to 0.02 .",
    "the hyper - resistivity @xmath11 and hyper - viscosity @xmath13 are grid dependent , and their value is calculated at each timestep , according to the formula : _",
    "_ kaw,/k _ , ^4 .",
    "tests have been performed to insure that these coefficients are sufficiently small not to alter the physics of the system .",
    "the tearing mode instability is initialized by perturbing this equilibrium with @xmath247 .",
    "the initial resolution is @xmath248 grid points ; the number of grid points the @xmath222-direction is doubled throughout the run , up to 2048 for @xmath249 .",
    "[ grate_comparison ]    [ cols=\"^,^ \" , ]     c + ( a ) +   + ( b )    the most crucial test is to check how closely the semi - implicit method described in this paper reproduces the results obtained by a conventional explicit integration .",
    "this comparison is performed in .",
    "shows the growth rate , defined as @xmath250 , where @xmath251 is the location of the @xmath251-point , obtained by the two methods .",
    "the agreement between both approaches is remarkable .",
    "after an initial transient ( @xmath252 ) , the tearing instability is seen here to evolve through four different stages : the linear stage ( constant growth rate ) , the early nonlinear period , from @xmath253 , followed by the explosive stage , during which the growth rate dramatically increases ( @xmath254 ) and finally the growth rate slow down and saturation period .    a comparison between the contour plots for all the fields at the early stages of the explosive period ( @xmath255 ) is shown in . again , the figure yields excellent agreement between the explicit and the semi - implicit approaches .",
    "plotted in ( a ) is the cpu speed - up factor , determined as follows : = where @xmath256 is the number of evaluations of the rhs required at each timestep for the si scheme to converge , compared to an explicit scheme that requires only 2 such evaluations per timestep . @xmath257 and @xmath258 are the explicit integration cpu time and timestep , respectively .",
    "as mentioned , convergence is determined by @xmath259 at each timestep .",
    "a plot of the time evolution of the maximum error is shown in ( b ) .",
    "the dashed lines in this figure identify the `` comfort zone '' for the si error , defined by expression ( [ next_dt ] ) .",
    "we see that for both values of @xmath260 plotted , the error is indeed largely confined to that region , indicating the second - order convergence of the iterative scheme .",
    "the large undershoots mark the points at which the run was restarted with a larger resolution in the @xmath222-direction . at each restart , the @xmath2",
    "is set to be equal to that determined by the cfl condition . as shown in  ( a )",
    ", the si method is remarkably successful , yielding a cpu speed - up factor ranging from a minimum of @xmath3 during the explosive growth period , to several hundreds during nonlinear saturation of the instability .",
    "we also observe that , in this case , the iterative scheme is very efficient , as is shown by the larger speed - up factors allowed for @xmath261 ( red dashed line ) . the actual timesteps taken by the si method",
    "are shown in .",
    "we see that the si method performs so well that the minimum cpu enhancement ( @xmath3 at @xmath262 ) is set by the flow speed , i.e. , the actual dynamics that we are interested in following ( recall that the cfl condition for the flows is imposed as a maximum for the timestep ) .",
    "we discussed the 2cd - order nature of the algorithm in , and in we provided an analytical demonstration that the algorithm remains second - order accurate for sufficiently small @xmath263 even if the diffusion and advection operators do not commute .",
    "these arguments are rigorously valid only if @xmath264 . however , the goal of implicit and semi - implicit algorithms is to allow usage of very large time steps compared to explicit algorithms .",
    "thus , although the dominant modes of interest have eigenfrequencies @xmath173 of @xmath265 such that @xmath266 is presumably small , there will be some high frequency modes for which the effective @xmath267 is large . to demonstrate that the scheme can indeed be second - order accurate ( at least for our test case ) at desirable implicit values of @xmath2 ( i.e. , which greatly exceed those required by an explicit integration )",
    ", we performed a scaling study of the error of the algorithm with the timestep @xmath2 , using as a test case the application discussed in the preceding section .",
    "this study was done as follows : starting at time @xmath268 , when the simulation is fully nonlinear ( see  ) and the si algorithm is using a time step of @xmath269 , we run the code for an additional time of @xmath270 using a very small time step of @xmath271 .",
    "this value is smaller than even the explicit timestep @xmath272 that would be required at this stage , and we take the result of this integration as our exact result . then , we perform several runs over this same time period of 0.135 with various fixed values of the time step @xmath2 . to isolate the scaling of the error with @xmath2 ,",
    "this scaling study was performed with a fixed number of iterations per time step , @xmath77 .",
    "the error is the difference between the results of these integrations and the `` exact '' result ( we have chosen to plot the relative error in @xmath23 at the @xmath251-point ) .    .",
    "dashed line indicates @xmath273 slope .",
    "vertical dotted line marks the explicit timestep limit that would be required at this point in the simulation . [ error_scaling ] ]    the result",
    "is shown in , where a clear scaling of the error with @xmath273 is seen .",
    "note that , at each value of the iteration index @xmath25 , we have @xmath274 ( and similarly for @xmath24 ) , where @xmath275 is the true solution ( here taken to be that given by the integration with @xmath271 ) , @xmath276 is the error introduced by the si operator , and @xmath277 is the error due to the particular discretization scheme used ( e.g. , when our scheme is converged in the @xmath25-iterations , @xmath277 is simply the error of the cn method ) .",
    "thus what is plotted in the figure is the total error , due to both the si error and the time discretization error . in the figure",
    ", the vertical dotted line identifies the timestep that would have been required for stability by an explicit algorithm at this point of the simulation .",
    "the dashed line shows a @xmath278 slope .",
    "we thus see that the second - order accuracy of the algorithm extends at least up to the typical si values of @xmath279 , which is 60 times larger than the explicit time step limit .",
    "we have presented an efficient and accurate numerical method for the time integration of stiff wave coupled partial differential equations .",
    "the method allows for timesteps which greatly exceed those imposed by the cfl constraint , while accurately reproducing explicit calculations .",
    "cpu time savings over a conventional explicit scheme range from factors of @xmath3 to several hundreds for the test case chosen ( gyrofluid magnetic reconnection ) .",
    "the method is second - order accurate even if the diffusion and nonlinear ( advection ) operators do not commute , and exhibits the property of robust damping .",
    "i.e. , it correctly captures the analytic solution in the limit @xmath158 , where @xmath280 is the diffusion operator and @xmath2 the timestep . in the limit of no physical dissipation",
    ", the method is symplectic ( at least for a linear wave test problem ) , i.e. , it does not introduce any numerical dissipation .",
    "the derivation of the si numerical method presented here relies on the physics based assumption that the fundamental wave dynamics arises as a result of coupling between equations . in the linear regime ( small perturbation amplitude ) this statement is exact for many physical systems .",
    "our results demonstrate that this same si operator ( scaled to approximate an upper bound on the frequency in the nonlinear regime ) continues to be effective in the nonlinear regime as well , at least for the test problem explored here .",
    "we note that the application chosen to study the efficiency of our algorithm supports only one wave ( the kaw ) .",
    "it is therefore easier to formulate an efficient si operator ( or an efficient preconditioner for an implicit algorithm ) for this system that would be the case for a system of equations that supported multiple waves ( i.e. , multiple polarizations at each wave number ) .",
    "while the isotropic and homogeneous si operator used here was fairly effective for the test case we considered , which had some degree of anisotropy and inhomogeneity , there may be cases with stronger anisotropies or inhomogeneities where a more complicated si operator or preconditioner is needed .",
    "some approaches for dealing with these issues ( of multiple waves with anisotropies and inhomogeneities ) are discussed in ref .",
    "the efficiency of the iterative si algorithm for a multiple wave system remains to be tested .",
    "one of the advantages of a physics - based semi - implicit operator is that one only has to approximate @xmath281 , not the dispersion relation @xmath282 itself ( and in fact , one only needs an upper bound on @xmath98 to insure convergence ) .",
    "chacn and knoll @xcite have discussed how this kind of physics - based semi - implicit operator can be related to preconditioning , and how it turns an originally hyperbolic problem into a diagonally dominant parabolic problem that can be efficiently solved by multigrid and/or preconditioned krylov ( if the preconditioner is sufficiently effective ) iterative techniques . in some cases ,",
    "the resulting parabolic problem can also be efficiently solved with ffts , which we use here .",
    "the iterative si approach used here provides a way to monitor and control the si operator splitting errors , and essentially turns a semi - implicit algorithm into a fully implicit algorithm .",
    "accuracy , rather than stability , sets the time step @xmath2 .",
    "there are several variations of si algorithms in the literature ( such as @xcite ) , some using staggered time grids .",
    "if only one @xmath76 iteration is done , the underlying si algorithm used here is equivalent to reference @xcite .",
    "the iterative approach presented here could also be applied to other variations of si algorithms .",
    "this could be a straightforward way to extend other existing codes that use si algorithms .",
    "it is pertinent to compare the numerical method developed here to more elaborate implicit schemes and preconditioning strategies . within these , jacobian - free newton - krylov ( jfnk ) methods seem to be amongst the most sophisticated and promising  @xcite .",
    "( as discussed in , our algorithm has similarities to a jacobian - free newton method , but with simple functional iteration instead of krylov iteration within each newton step . ) in this respect , the main comparison factor is the cpu time speed - up over explicit approaches  the main purpose of implicit schemes is , after all , to maximize this parameter .",
    "of course , this is highly problem specific , and a general comparison is not possible . for a similar problem to the one dealt with in this paper , i.e. , implicit integration of high frequency dispersive plasma waves , a jfnk implicit scheme was developed by chacn and knoll  @xcite .",
    "the aim of these authors is the accurate implicit integration of the whistler wave , which has a dispersion relation of the same type as the kaw , i.e. , @xmath172 . in that work ,",
    "cpu time enhancements by factors of up to a maximum of @xmath283 is quoted .",
    "this is roughly comparable to the enhancement factors of 30 and higher found for our method , as shown in ( a ) .",
    "however , a definitive comparison is not warranted at this time , since both the physics model and the problem are different ( chacn and knoll use a more complex four - field model , the flux - bundle coalescence problem is different than the reconnection problem done here , grid sizes differ , there are subtle differences in the definition of the cfl condition that influence this comparison , and the amount of speedup depends sensitively on the stage of the nonlinear dynamics in our simulation ) .",
    "it is interesting to note that the case in table i of @xcite that shows the largest speedup factors also corresponds to needing no krylov iterations for each newton iteration ( as the authors point out , the preconditioner itself is providing a very good initial guess ) . in that case",
    ", the algorithm of reference  @xcite becomes similar to the one presented here , ( except for differences in the predictor step and in the treatment of dissipation terms ) , so one would in fact expect comparable performance . but",
    "short of more detailed comparisons , one should simply conclude that the iterative semi - implicit method developed here seems competitive , at least for some problems , with these somewhat more complex approaches .",
    "the iterative semi - implicit algorithm has the relative advantage of being simpler to implement ( particularly for codes that are already semi - implicit ) and works well for the type of problem we have studied here , while a full jfnk algorithm would be more robustly convergent and may be more efficient for other types of problems where the present algorithm needs more than a few iterations .    with regards to the implementation of a similar treatment of the diffusive terms in real space codes ,",
    "we begin by noting that , in the final formulation of the numerical scheme , what has to be evaluated are operators like @xmath284 .",
    "one way to evaluate this with a real - space code could be with a variation of exponential propagation iterative methods  @xcite .",
    "another way would be to use a 2cd - order rational - function approximation e^-t ( 1 + a t ) ( 1 + b t)^-1 ( 1 + b t)^-1 , with @xmath285 , @xmath286 .",
    "this retains the second order accuracy of a crank - nicolson treatment of damping while having the advantage of robust damping in the large @xmath287 limit ( unlike crank - nicolson where @xmath288 ) , and still remaining relatively easy to evaluate , since inverting the @xmath289 operator is equivalent to a standard implicit step .",
    "note , however , that this has not been tested by us in this work .",
    "our code works in fourier - space , where it is very easy to invert the si operator presented in , but it should also be possible to implement a very similar si operator in real space . using a pad approximation for the @xmath192 function and fourier - transforming to real space , becomes @xmath290 .",
    "the resulting si operator @xmath291 is a symmetric positive - definite parabolic operator that could be solved with a preconditioned iterative krylov solver or multigrid algorithm .",
    "( in some cases , a direct sparse - matrix solver can also be used . ) it should be noted that if a krylov solver is used , it is important to use a very good preconditioner . for these types of parabolic problems without preconditioning , the number of iterations required for krylov solvers like conjugate gradients or gmres scales with the square root of the condition number of the matrix  @xcite , @xmath292 , which would give it at most an order unity speed up over an explicit code . to get a significant speed up , an iterative solver must be aided by further algebraic preconditioning , such as modified - ilu  @xcite , multigrid , or multilevel additive schwarz  @xcite , or some combination thereof .",
    "again , we note that this has not been tested by us : in our application , direct inversion of the operator ( [ disp_rel_general ] ) is trivial since we use a pseudo - spectral code .",
    "an important observation from the physics point of view is that these results , i.e. , the fact that the kaw can be integrated implicitly without affecting the physics of the system , confirm the parasitic role of this wave in the reconnection process , although the terms from which they arise are essential to the observed speed up of the instability growth rate . a similar conclusion has been reported by chacn and knoll  @xcite for the whistler wave .",
    "finally , we note that this numerical method could be useful for other problems where an implicit treatment of high - frequency waves is desired , and in particular is trivially applicable to fluid studies of collisionless reconnection , where electron inertia is added to and replaces the role played by the resistivity in breaking the frozen flux condition .",
    "it is a pleasure to acknowledge a very useful discussion with l. chacn .",
    "conversations with r.  samtaney and v.  s.  lukin are also gratefully acknowledged .",
    "this work was funded by the center for multiscale plasma dynamics , the u.s .",
    "dept . of energy grant",
    "de - fc02 - 04er54784 , and at the princeton plasma physics laboratory by u.s .",
    "dept . of energy grant",
    "de - ac02 - 76ch03073 .",
    "it is instructive to consider one logical alternative to the discretization of performed in . for simplicity ,",
    "let us instead consider the more compact form of the problem given by .",
    "a formal solution to this equation can be written as : ^n+1=^n+_t_n^t_n+1dt  e^t ( ) . in the crank - nicolson algorithm of , what is done is to approximate the integral with a 2cd order midpoint evaluation , i.e. : _",
    "t_n^t_n+1dt  e^t()@xmath293 , from which formulas of the kind of ( [ step2_psi],[step2_phi ] ) directly follow .",
    "instead , one can exactly integrate the exponential term , while using the cn discretization for the @xmath22 operator alone .",
    "undoing the variable substitutions of ( [ varsubs ] ) , we obtain : ^n+1=e^-^n+@xmath294 @xmath295 . now following a procedure similar to that of",
    ", it can be shown that this method reduces to in the limit of @xmath296 , @xmath297 , i.e. , it is also second - order accurate even if the operators @xmath22 and @xmath280 do not commute .",
    "it does not , however , exhibit the property of robust damping discussed in as can easily be seen by evaluating the above expression in the limit @xmath158 ( but it does correctly treat the case of @xmath298 , which our proposed algorithm does not , see appendix b. a method to accurately deal with both cases in the limit of @xmath158 is left to a future publication ) .",
    "yet another second - order accurate alternative is strang - splitting  @xcite . for the model problem ,",
    "one form of strang - splitting is @xmath299 .",
    "similarly to our numerical scheme of , this also exhibits robust - damping .",
    "however , we found this method to be much less efficient in terms of the timestep enhancements that can be obtained over the cfl condition .",
    "further tests would be required to understand why our splitting scheme is a better alternative than strang - splitting for this problem ; the interested reader is referred to a recent paper by kozlov @xmath4  @xcite on the nature of the local error for splitting methods applied to stiff problems .",
    "the equilibrium source term on the rhs of , @xmath300 , is not explicitly accounted for in the derivation of the numerical method of .",
    "since @xmath22 is a general operator , it can , of course , include this term .",
    "a more accurate alternative is obtained using the fact that @xmath301 .",
    "thus , can be recast in terms of @xmath302 in the form = ( , n_e,)-_1 . now defining @xmath303 we obtain = e^t(,n_e , ) , which is of the same form as and so the derivation of the method can be carried out as in .",
    "are thus replaced by : [ psi_star_final_eq ] ^n+1,*&=&e^-^n+@xmath304 _ eq + & & + @xmath67(^n,^n ) , + [ psi_final_eq ] ^n+1,p+1&= & e^-^n + @xmath304 _ eq + e^-(^n,^n)+ + & & + ( ^n+1,p,^n+1,p ) -(^n+1,p+1-|^n+1,p ) .",
    "a.  h. glasser , c.  r. sovinec , r.  a. nebel , t.  a. gianakon , s.  j. plimpton , m.  s. chu , d.  d. schnack , and the nimrod  team .",
    "the nimrod code : a new approach to numerical plasma physics .",
    ", 41:a747a755 , 1999 ."
  ],
  "abstract_text": [
    "<S> an efficient , iterative semi - implicit ( si ) numerical method for the time integration of stiff wave systems is presented . </S>",
    "<S> physics - based assumptions are used to derive a convergent iterative formulation of the si scheme which enables the monitoring and control of the error introduced by the si operator . </S>",
    "<S> this iteration essentially turns a semi - implicit method into a fully implicit method . </S>",
    "<S> accuracy , rather than stability , determines the timestep . </S>",
    "<S> the scheme is second - order accurate and shown to be equivalent to a simple preconditioning method . </S>",
    "<S> we show how the diffusion operators can be handled so as to yield the property of robust damping , i.e. , dissipating the solution at all values of the parameter @xmath0 , where @xmath1 is a diffusion operator and @xmath2 the timestep . </S>",
    "<S> the overall scheme remains second - order accurate even if the advection and diffusion operators do not commute . in the limit of no physical dissipation , and for a linear test wave problem , </S>",
    "<S> the method is shown to be symplectic . </S>",
    "<S> the method is tested on the problem of kinetic alfvn wave mediated magnetic reconnection . </S>",
    "<S> a fourier ( pseudo - spectral ) representation is used . </S>",
    "<S> a 2-field gyrofluid model is used and an efficacious k - space si operator for this problem is demonstrated . </S>",
    "<S> cpu speed - up factors over a cfl - limited explicit algorithm ranging from @xmath3 to several hundreds are obtained , while accurately capturing the results of an explicit integration . </S>",
    "<S> possible extension of these results to a real - space ( grid ) discretization is discussed .    </S>",
    "<S> semi - implicit methods , robust damping , magnetic reconnection , gyrofluid , dispersive plasma waves , symplectic methods    52.30ex,52.35vd,52.35py,52.35hr,52.65tt </S>"
  ]
}
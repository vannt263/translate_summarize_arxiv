{
  "article_text": [
    "problems of mechanics and flow in porous media have wide ranging applications in many areas of science and engineering .",
    "particularly in geomechanical modeling and its applications to reservoir engineering for enhanced production and environmental safety due to overburden subsidence and compaction @xcite .",
    "one of the key challenges is the multiscale nature of the geomechanical problems .",
    "heterogeneity of reservoir properties should be accurately accounted in the geomechanical model , and this requires a high resolution solve that adds many degrees of freedom that can be computationally costly .",
    "moroever , there are disparate scales between the often relatively thin reservoir structure and the large overburden surrounding the reservoir that adds more complexity to the simulation .",
    "therefore , we propose a multiscale method to attempt overcome some of these challenges .    the basic mathematical structure of the poroelasticity models are usually coupled equations for pressure and displacements known as biot type models @xcite . for pressure , or flow equations",
    ", we have the parabolic equation darcy equation with a time dependent coupling to volumetric strain .",
    "the stress equation is the quasi - static elasticity equations with a coupling to the pressure gradients as a forcing .",
    "poroelastic models of this type have been explored in the petroleum engineering literature in the context of geomechanics for some time @xcite to name just a few .",
    "there are noted issues that arise .",
    "the first being heterogeneities of the reservoir and surrounding media add many complications to the effective simulation due to complexity of scales .",
    "moreover , development of flow and mechanics simulation were often considered separately .",
    "progress was made on this problem by considering various coupling strategies @xcite . however , in the instance that the physics is not well understood a fully coupled scheme may be desired .",
    "this separation of development from flow and mechanics methods adds the complication of the computational grids not being the same in each regime .",
    "some effort has been made in the improvements of gridding techniques between geomechanical and flow calculations @xcite and references therein .    as briefly noted before , typically for numerical solution of such coupled systems time",
    "splitting schemes are often used .",
    "various splitting techniques for poroelastic equations have been explored and analyzed in the context of reservoir geomechanics in @xcite . also , in the context of poroelasticty and thermoelastic equations , various splitting techniques have been analyzed and implemented @xcite .",
    "the primary splitting techniques are the undrained , fixed - stress , and fully implicit . due to",
    "observed better errors , we will primarily consider the less computationally costly fixed - stress splitting and the more robust , yet with a loss in some matrix sparsity , fully implicit coupled approach .",
    "once the equations have been split in time we wish to resolve in space and will utilize a multiscale method .",
    "there are many very effective multiscale frameworks that have been developed in recent years .",
    "there are rigorous approaches based on homogenization of partial differential equations , where effective equations are derived based fine - scale equations at the microstructure level @xcite",
    ". however , these approaches may have limited computational use and more practical multiscale methods are used .",
    "examples include the heterogeneous multiscale method ( hmm ) , where macro - scale equations on coarse - grids are solved while the effective coefficients on the fine - scale are resolved at each coarse grid nodes @xcite .",
    "an approach based on the variational multiscale method ( see @xcite ) , where coarse - grid quasi - interpolation operators are used to build an orthogonal splitting into a multiscale space and a fine - scale space @xcite .",
    "fine - scale space corrections are then localized to create a computationally efficient scheme . in this paper",
    ", we will use the generalized multiscale finite element method framework , which is a generalization of the multiscale finite element method @xcite .    to efficiently solve these splitting schemes and overcome some of the challenges of heterogenous reservoir properties and gridding issues between mechanics and flow",
    ", we will develop a generalized multiscale finite element method ( gmsfem ) @xcite .",
    "our gmsfem has the advantage of being able to capture small scale features from the heterogeneities into coarse - grid basis functions and offline spaces , as well as having a unified computational grids for both mechanics and flow solves .",
    "the offline multiscale basis construction may proceed in both fluid and mechanics in parallel and both constructions are comparable .",
    "we proceed by first generating a coarse - grid and in each grid block a local static problem with varying boundary conditions is solved to construct the snapshot spaces .",
    "we then perform a dimension reduction of the snapshot space by solving auxiliary eigenvalue problems .",
    "taking the corresponding smallest eigenpairs , and multiplying by a multiscale partition of unity we are able to construct our offline basis . in this greatly reduced dimension",
    "offline basis , the online solutions may be calculated for pressure and displacements for any viable boundary condition or forcing .",
    "the work is organized as follows . in section 2",
    "we provide the mathematical background of the poroelasticity problem .",
    "we will introduce the biot type model and highlight where the heterogeneities primarily occur . in our formulation",
    ", the computational domain will be entirely inside of the fluid filled , or reservoir , region .",
    "however , coupling to regimes of pure elasticity to model the overburden are of course possible . in section 3 , to outline the difficulties in full direct numerical simulation we introduce the fine - scale discretizations using coupled and splitted schemes .",
    "once we split the porooelastic system we will be able to apply our multiscale method . in section 4 , we present our gmsfem algorithm and outline its construction procedure .",
    "we will use the offline multiscale basis functions to calculate accurately pressure and displacements , at a reduced dimension and computational cost in the online phase .",
    "finally , numerical implementations are presented in section 5 . using the gmsfem",
    ", we compare the multiscale solution to fine - scale solutions and give error estimates .",
    "we will present two different examples with varying coefficients .",
    "additionally , we will implement and discuss different strategies with oversampling and randomized forcings to construct the multiscale spaces .",
    "we denote our computational domain @xmath0 to be a bounded lipschitz region .",
    "we consider linear poroelasticity problem where we wish to find a pressure @xmath1 and displacements @xmath2 satisfying    [ eq : main ] @xmath3    with initial condition for pressure @xmath4 we write the boundary of the domain into four sections @xmath5 .",
    "we suppose the following boundary conditions on each portion @xmath6 and @xmath7 here the primary sources of the heterogeneities in the physical properties arise from @xmath8 , the stress tensor and @xmath9 , the permeability .",
    "we denote @xmath10 to be the biot modulus , @xmath11 is the fluid viscosity , and @xmath12 is the biot - willis fluid - solid coupling coefficient . here , @xmath13 is a source term representing injection or production processes and @xmath14 is the unit normal to the boundary .",
    "body forces , such as gravity , are neglected . in the case of a linear elastic stress - strain constitutive",
    "relation we have that the stress tensor and symmetric strain gradient may be expressed as @xmath15 where @xmath16 , @xmath17 are lame coefficients , @xmath18 is the identity tensor . in the case where the media has heterogeneous material properties the coefficients @xmath16 and @xmath17 may be highly variable .",
    "the above poroelasticity problem , assuming a linear elastic stress - strain relation , can be written in operator matrix form : @xmath19 where @xmath20 and @xmath21 and @xmath22 are gradient and divergence operators and @xmath23 .",
    "we will now present splitting methods for the above system in the context of solving the fine - scale approximation .",
    "this will highlight the areas where we would like to utilize a multiscale method when solving in the spatial variables due to the degrees of freedom required in resolving the system . for approximating the numerical solution to on fine - scale grid",
    "we use a standard finite element method .",
    "we begin by giving the corresponding variational form of the continuous problem written as @xmath24 for @xmath25 , @xmath26 where @xmath27^d :   v ( x ) = u_1 ,   x \\in \\gamma_2   \\ } ,   \\quad q   = \\ {   q \\in h^1(\\omega ) :   q(x ) = p_1 ,   x \\in \\gamma_4 \\},\\ ] ] and the test spaces with homogeneous boundary conditions are given by @xmath28^d :   v(x ) = 0 ,   x \\in \\gamma_2   \\ } ,   \\quad \\hat{q } = \\ { q \\in h^1(\\omega ) : q(x ) = 0 ,   x \\in \\gamma_4 \\}.\\ ] ] here for bilinear and linear forms we have define @xmath29 and @xmath30 here @xmath31 under the integrand denotes the standard inner product . in section [ numerics ] , we will discretize the spaces using a fine - scale standard fem and denote them @xmath32 and @xmath33 , @xmath34 being the fine - grid size .",
    "the fem using these spaces will serve as a reference solution for our gmsfem outlined in section [ gmsfem ] .    to solve the above system we first discretize in time .",
    "this discretization leads to several possible couplings between time - steps and the two equations of prorelasticity .",
    "we proceed by giving the coupled and so - called fixed - stress splitting @xcite .",
    "the standard fully implicit finite - difference scheme , or coupled scheme , can be used for the time - discretization and is given by    [ coupled ] @xmath35    with @xmath36 , @xmath37 , where @xmath38 , @xmath39 , @xmath40 and @xmath41 . for time",
    "discretization we can apply many different splitting techniques which often occur in the literature .",
    "another we shall consider here is the fixed - stress splitting scheme    [ fixedstress ] @xmath42    where the variational form is re - written with @xmath43 and @xmath44 is the drained modulus @xmath45 where @xmath46 is the poisson ratio and @xmath47 is the elastic modulus .",
    "when we utlize the fixed - stress splitting scheme , first we solve pressure equation for @xmath48 given data at the previous time - steps .",
    "then , passing this new pressure information , we return to the quasi - static stress equation and calculate displacements at @xmath49 .",
    "in the gmsfem presented here , we will focus on the development in the fixed - stress splitting .",
    "we will however give numerical examples from both coupling strategies .",
    "the fixed - stress splitting decouples the flow and mechanics equations .",
    "we will first present the offline multiscale basis construction in the fluid or pressure solve then its construction in the mechanics or displacement calculation step . in this algorithm , due to the heterogeneities arising primarily from the permeability @xmath9 and the stress tensor @xmath50",
    ", we will solve local problems in each of the relevant portions of the variational form to construct the offline multiscale spaces .",
    "we now outline the general procedure of the gmsfem algorithm .",
    "the overall fine - scale model equations will be solved on a fine - grid using spaces @xmath32 and @xmath33 , and will act as our reference solutions .",
    "once the fine - grid is established we must introduce the concepts of coarse - grids and their relationships .",
    "to this end , let @xmath51 be a standard conforming partition of the computational domain @xmath52 into finite elements .",
    "we refer to this partition as the coarse - grid and assume that each coarse element is partitioned into a connected union of fine grid blocks .",
    "the fine grid partition will be denoted by @xmath53 , and is by definition a refinement of the coarse grid @xmath51 .",
    "we use @xmath54 , where @xmath55 is the number of coarse nodes , to denote the vertices of the coarse mesh @xmath51 , and define the neighborhood of the node @xmath56 by @xmath57        see figure  [ schematic ] for an illustration of neighborhoods and elements subordinated to the coarse discretization .",
    "we emphasize that the use of @xmath58 is to denote a coarse neighborhood , and we use @xmath59 to denote a coarse element throughout the paper .",
    "boadly speaking , the gmsfem algorithm consist of several steps :    * * step 1 : * generate the coarse - grid , @xmath51 . * * step 2 : * construct the snapshot space , used to compute an offline space , by solving many local problems on the fine - grid . *",
    "* step 3 : * construct a small dimensional offline space by performing dimension reduction in the space of local snapshots . *",
    "* step 4 : * use small dimensional offline space to find the solution of a coarse - grid problem for any force term and/or boundary condition .    as noted previously , because coupled system of equations for poroelasticity problems can be solved using splitting scheme , we can construct multisclate basis functions for pressure and displacements separately .",
    "we begin by considering the pressure solve , then , the displacement solve .",
    "recall , for the numerical solution of pressure equation on coarse grid we consider the continuous galerkin ( cg ) formulation given by @xmath60 where @xmath61 is used to denote the space spanned by multiscale basis functions @xmath62 , each of which is supported in @xmath58 .",
    "the index @xmath9 represents the numbering of these multiscale basis functions .",
    "we will now show how to construct the offline multiscale space @xmath61 . in turn",
    ", the cg solution of the form @xmath63 will be sought .",
    "we begin by construction of a snapshot space @xmath64 .",
    "we use harmonic extensions @xmath65 here @xmath66 are defined by @xmath67 , where @xmath68 denotes the fine - grid boundary node on @xmath69 . for simplicity",
    ", we will omit the index @xmath70 when there is no ambiguity .",
    "let @xmath71 be the number of functions in the snapshot space in the region @xmath72 , and define @xmath73 for each coarse subdomain @xmath72 .",
    "we denote the corresponding matrix of snapshot functions to be @xmath74.\\ ] ]    to construct the offline space @xmath61 , we perform a dimension reduction of the space of snapshots by using an auxiliary spectral decomposition . more precisely , we solve the eigenvalue problem in the space of snapshots : @xmath75 where @xmath76 where @xmath77 and @xmath10 denote fine scale matrices @xmath78 here , @xmath79 are fine - scale basis functions .",
    "we then choose the smallest @xmath80 eigenvalues from eq .   and form the corresponding eigenvectors in the space of snapshots by setting @xmath81 for @xmath82 , where @xmath83 are the coordinates of the vector @xmath84 .",
    "we denote the span of this reduced space as @xmath85 .    for construction of the offline space , to ensure the functions we construct form an @xmath86 conforming basis , we define multiscale partition of unity functions @xmath87 @xmath88 for all @xmath89 . here",
    "@xmath90 is a continuous on @xmath59 and is linear on each edge of @xmath91 .",
    "we could choose @xmath90 to also be selected shape function , neumann conditions , or boundary conditions on larger domains in the context of oversampling . finally , we multiply the partition of unity functions by the eigenfunctions in the offline space @xmath92 to construct the resulting basis functions @xmath93 where @xmath94 denotes the number of offline eigenvectors that are chosen for each coarse node @xmath70 .",
    "we note that the construction in eq .",
    "yields continuous basis functions due to the multiplication of offline eigenvectors with the initial ( continuous ) partition of unity .",
    "next , we define the continuous galerkin spectral multiscale space as @xmath95 using a single index notation , we may write @xmath96 , where @xmath97 denotes the total number of basis functions in the spaces @xmath98 , for @xmath99 .",
    "denote the matrix @xmath100^t,\\ ] ] where @xmath101 are used to denote the nodal values of each basis function defined on the fine grid .",
    "then , the variational form in yields the following linear algebraic system @xmath102 where @xmath103 here , @xmath104 being the operator corresponding right hand side data from the previous time step and @xmath105 denotes the coarse - scale nodal values of the discrete cg solution .",
    "we also note that the operator matrix may be analogously used in order to project coarse scale solutions onto the fine grid @xmath106      we now suppose that we have solved for the fine - grid pressure @xmath48 by the gmsfem pressure solve in the previous section .",
    "we must now solve the mechanics equations .",
    "since the construction of the multiscale offline space remains very similar in this setting , we will be a bit more brief on its construction .",
    "recall , for discretization of the displacements equation we rewrite equation as follows @xmath107 where @xmath108 .",
    "the corresponding continuous galerkin ( cg ) formulation for displacements equations is given by : @xmath109 where @xmath110 , where @xmath111 are fine - scale basis functions , and we construct the multiscale offline space @xmath112 .    for construction of multiscale basis functions for displacements we use similar algorithm that we used for pressure . for construction of a snapshot space",
    "@xmath64 we solve following problem in @xmath72 @xmath113 let @xmath71 be the number of functions in the snapshot space in the region @xmath72 , and define @xmath114 for each coarse subdomain @xmath72 .",
    "note we are using the same notation but with different harmonic extensions .",
    "we denote the corresponding matrix of snapshot functions , again with similar notation , to be @xmath115.\\ ] ]    again , we perform a dimension reduction of the space of snapshots by using an auxiliary spectral decomposition .",
    "we solve the eigenvalue problem in the space of snapshots @xmath116 where where @xmath117 where @xmath118 and @xmath55 denote fine scale matrices @xmath119 and @xmath120 here , @xmath121 are fine - scale basis functions .",
    "we then choose the smallest @xmath122 eigenvalues from eq .   and form the corresponding eigenvectors in the space of snapshots by setting @xmath123 for @xmath124 , where @xmath125 are the coordinates of the vector @xmath126 .",
    "we denote the span of this reduced space as @xmath127 .",
    "for construciton of multiscale partition of unity functions for the mechanics solve , we proceed as before and solve for all @xmath89 @xmath128 here @xmath90 is a continuous function on @xmath59 and is linear on each edge of @xmath91 . finally , we multiply the partition of unity functions by the eigenfunctions in the offline space @xmath129 to construct the resulting basis functions @xmath130 where @xmath131 denotes the number of offline eigenvectors that are chosen for each coarse node @xmath70 .",
    "next , we define the spectral multiscale space as @xmath132 using a single index notation , we may write @xmath133 , where @xmath134 denotes the total number of basis functions in the space @xmath135 , for all @xmath99 .    and after construction @xmath112 we denote the matrix @xmath136^t,\\ ] ] where @xmath121 are used to denote the nodal values of each basis function defined on the fine grid .",
    "then , the variational form in yields the following linear algebraic system @xmath137 where @xmath138 , @xmath139 and @xmath140",
    "in this section , we present numerical examples to demonstrate the performance of the gmsfem for computing the solution of the poroelasticity problem in heterogenous domains . although we presented the algorithm in the fixed - stress splitting",
    ", we are able to apply the same offline spaces @xmath141 as their construction remains the same in the fully coupled setting . however , in the coupled setting the equations and will no longer be decoupled and must be solved simultaneously",
    ".    we will implement a single complicated geometry with contrasting parameter values .",
    "we provide two cases one with lower contrast in elastic properties and another with higher contrast .",
    "we present the algorithm applied to these heterogenous coefficients in both the fully coupled and fixed stress time splittings .",
    "we give the errors with varying multiscale basis functions and over time .",
    "we then will apply the gmsfem method with oversampling and with snapshots with randomized boundary conditions to obtain good accuracy , while having to solve fewer snapshot solutions .",
    "the effects of higher contrast in properties will also be discussed .",
    "first , we take the computational domain @xmath52 as a unit square @xmath142 ^ 2 $ ] , and set the source term @xmath143 in .",
    "we utilize heterogeneous coefficients that have different values in two subdomains .",
    "we denote each region as subdomain 1 and 2 , and use following coefficients : for the biot modulus we take @xmath144 and for permeability @xmath145 in the two regions . for fluid viscosity",
    "we take @xmath146 and fluid - solid coupling constant @xmath147 . for the elastic properties , we present results for two test cases . in case 1 , the elastic modulus is given by @xmath148 in each respective subdomain and in case 2 , we have @xmath149 .",
    "the poisson s ratio is @xmath150 , and these can be related to the parameters @xmath151 and @xmath152 , for @xmath153 via the relation @xmath154 in each subdomain .",
    "the subdomains for coefficients shown in fig .",
    "[ fig : koeff ] , where the background media in red is the subdomain 1 , and isolated particles and strips in blue are the subdomain 2 .",
    "as we have chosen @xmath155 we must use boundary conditions to force flow and mechanics . in these tests",
    ", we use following boundary conditions : @xmath156 and @xmath157 and finally , @xmath158 here @xmath159 and @xmath160 are left and right boundaries , @xmath161 and @xmath162 are top and bottom boundaries respectively .",
    "we set @xmath163 and @xmath164 to drive the flow , and thus , the mechanics .        in fig .",
    "[ fig : domain ] we show the coarse and fine grids .",
    "the coarse grid consists of 36 nodes and 50 triangle cells , and the fine mesh consists of 3721 nodes and 7200 triangle cells .",
    "the number of time steps is @xmath165 and the maximal time being set at @xmath166 . as an initial condition for pressure we use @xmath167 .",
    "the reference solution computed by using a standard fem ( linear basis functions for pressure and displacements ) on the fine grid and using a fully coupled scheme . the pressure and the displacement fields for case @xmath168 on the fine - grid",
    "are presented on the left column of fig .",
    "[ fig : p ] - [ fig : u ] .     and @xmath169 ( from top to bottom ) for case 1 .",
    "the dimension of the fine - scale solution is 11163 and the dimension of the coarse space is 864 . ]     and @xmath170 for case 1 .",
    "the dimension of the fine - scale solution is 11163 and the dimension of the coarse space is 864 . ]",
    "we test the fully coupled and fixed - stress splitting schemes .",
    "the errors will be measured in weighted @xmath171 and weighted @xmath86 norm and semi - norm for pressure @xmath172 and for displacements @xmath173 here @xmath174 and @xmath175 are fine - scale and coarse - scale using gmsfem solutions , respectively for pressure and displacements .",
    "recall , we will use a few multiscale basis functions per each coarse node @xmath176 , and these number of coarse basis defines the problem size ( dimension of offline spaces , @xmath61 and @xmath112 ) .",
    "we suppose that in each patch @xmath177 we take the same number of multiscale basis functions for pressure , @xmath178 , for @xmath179 .",
    "similarly for displacements we take @xmath180 , for @xmath179 . varying the basis functions in both pressure and displacement multiscale spaces we recorded the errors at the final times .    in tables",
    "[ tab : c1-c ] and [ tab : c2-c ] , we present the weighted @xmath171 and @xmath86 errors for case 1 and case 2 of the coefficients in geometry fig . [",
    "fig : koeff ] using the fully coupled scheme .",
    "we compare these to a fine - scale solution space with dimension 11163 . in these tables ,",
    "@xmath181 and @xmath182 are number of multiscale basis functions for each neighborhoods , the second column show the dimension of the offline space , the next two columns present the weighted @xmath171 and @xmath86 errors for pressure and last two columns show the weighted @xmath171 and @xmath86 errors for displacements .",
    "we see that the errors in pressure remain similar in both cases because the permeability parameters remain the same and the change is in elastic properties between scenarios . in case 2 , pictured in table [ tab :",
    "c2-c ] , we see great errors in displacements throughout when compared to case 1 in table [ tab : c1-c ] because the elastic properties in case 2 have several orders of higher contrast .    in a similar setting , we consider the fixed - stress splitting .",
    "for case 1 we present the results in table [ tab : c1-s ] , the errors are very similar compared to the corresponding fully coupled scheme .",
    "this may be because we are comparing a fine - scale fully coupled scheme to a multiscale fully coupled scheme and similarly , a fine - scale splitting scheme to a multiscale splitting scheme and the errors do not differ very much between the two schemes here . for case 2 we present the errors in table [ tab : c2-s ] and again see that the errors are higher when compared to the lower contrast scenario . comparing these results with the case 2 using the fully coupled scheme , presented in table [ tab : c2-c ]",
    ", we see that both the pressure errors and displacement errors are much greater in this sequential coupling .",
    "this disparity is particularly striking when few multiscale basis functions are used .",
    "we also include plots over time of the error with respect to number of basis functions used .",
    "we present the results from the fully coupled scheme . in fig .",
    "[ fig : err - c1-c ] and [ fig : err - c2-c ] we show errors over time for @xmath183 and @xmath184 multiscale basis functions for each @xmath177 thus , the dimensions of offline spaces are 432 , 864 , 1296 and 1728 , respectively .",
    "we observe that errors decrease as we increase the dimension of the offline space as expected .",
    "we observe the errors in fig .",
    "[ fig : err - c1-c ] are generally better than the errors fig .",
    "[ fig : err - c2-c ] , again , due to the lower contrast in case 1 .",
    "we see that in both cases most of the error vanished after the use of just 8 multiscale basis functions . in general , the error remains stable in time with a slight decrease over time .",
    "@xmath185 & dim(@xmath186 ) & @xmath171 & @xmath86 & @xmath171 & @xmath86 +   + 2 & 216 & 0.06 & 0.08 & 0.06 & 0.13 +   + 2 & 360 & 0.06 & 0.08 & 0.06 & 0.12 + 4 & 432 & 0.01 & 0.01 & 0.04 & 0.11 +   + 2 & 648 & 0.06 & 0.08 & 0.02 & 0.06 + 4 & 720 & 0.01 & 0.01 & 0.01 & 0.03 + 8 & 864 & 0.0003 & 0.002 & 0.002 & 0.03 +   + 2 & 936 & 0.06 & 0.08 & 0.02 & 0.05 + 4 & 1008 & 0.01 & 0.01 & 0.01 & 0.02 + 8 & 1152 & 0.0003 & 0.002 & 0.0009 & 0.01 + 12 & 1296 & 0.0001 & 0.001 & 0.0009 & 0.01 +   + 2 & 1224 & 0.06 & 0.08 & 0.02 & 0.05 + 4 & 1296 & 0.01 & 0.01 & 0.01 & 0.01 + 8 & 1440 & 0.0003 & 0.002 & 0.0008 & 0.01 + 12 & 1584 & 0.0001 & 0.001 & 0.0007 & 0.01 + 16 & 1728 &",
    "0.0001 & 0.0007 & 0.0007 & 0.01 +     @xmath185 & dim(@xmath186 ) & @xmath171 & @xmath86 & @xmath171 & @xmath86 +   + 2 & 216 & 0.06 & 0.08 & 0.25 & 0.26 +   + 2 & 360 & 0.06 & 0.08 & 0.22 & 0.24 + 4 & 432 & 0.02 & 0.01 & 0.19 & 0.24 +   + 2 & 648 & 0.06 & 0.08 & 0.08 & 0.13 + 4 & 720 & 0.02 & 0.01 & 0.01 & 0.08 + 8 & 864 & 0.001 & 0.002 & 0.01 & 0.08 +   + 2 & 936 & 0.06 & 0.08 & 0.07 & 0.11 + 4 & 1008 & 0.02 & 0.01 & 0.02 & 0.04 + 8 & 1152 & 0.0003 & 0.002 & 0.004 & 0.03 + 12 & 1296 & 0.0001 & 0.001 & 0.004 & 0.03 +   + 2 & 1224 & 0.06 & 0.08 & 0.07 & 0.11 + 4 & 1296 & 0.02 & 0.01 & 0.02 & 0.03 + 8 & 1440 & 0.0003 & 0.002 & 0.001 & 0.02 + 12 & 1584 & 0.0001 & 0.001 & 0.001 & 0.02 + 16 & 1728 & 0.0001 & 0.0006 & 0.001 & 0.02 +     are on the top and @xmath86 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for case 1 using the fully coupled scheme.,title=\"fig : \" ]   are on the top and @xmath86 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for case 1 using the fully coupled scheme.,title=\"fig : \" ] +   are on the top and @xmath86 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for case 1 using the fully coupled scheme.,title=\"fig : \" ]   are on the top and @xmath86 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for case 1 using the fully coupled scheme.,title=\"fig : \" ]     are on the top and @xmath86 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for case 2 using the fully coupled scheme.,title=\"fig : \" ]   are on the top and @xmath86 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for case 2 using the fully coupled scheme.,title=\"fig : \" ] +   are on the top and @xmath86 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for case 2 using the fully coupled scheme.,title=\"fig : \" ]   are on the top and @xmath86 are on the bottom",
    ". errors for pressure are on the left and displacements are on the right for case 2 using the fully coupled scheme.,title=\"fig : \" ]     @xmath185 & dim(@xmath186 ) & @xmath171 & @xmath86 & @xmath171 & @xmath86 +   + 2 & 216 & 0.06 & 0.08 & 0.06 & 0.13 +   + 2 & 360 & 0.06 & 0.08 & 0.06 & 0.12 + 4 & 432 & 0.01 & 0.01 & 0.04 & 0.11 +   + 2 & 648 & 0.06 & 0.08 & 0.02 & 0.06 + 4 & 720 & 0.01 & 0.01 & 0.01 & 0.03 + 8 & 864 & 0.0003 & 0.002 & 0.002 & 0.03 +   + 2 & 936 & 0.06 & 0.08 & 0.02 & 0.05 + 4 & 1008 & 0.01 & 0.01 & 0.01 & 0.02 + 8 & 1152 & 0.0003 & 0.002 & 0.0009 & 0.01 + 12 & 1296 & 0.0001 & 0.001 & 0.0009 & 0.01 +   + 2 & 1224 & 0.06 & 0.08 & 0.02 & 0.05 + 4 & 1296 & 0.01 & 0.01 & 0.01 & 0.01 + 8 & 1440 & 0.0003 & 0.002 & 0.0008 & 0.01 + 12 & 1584 & 0.0001 & 0.001 & 0.0007 & 0.01 + 16 & 1728 & 0.0001 & 0.0007 & 0.0007 & 0.01 +     @xmath185 & dim(@xmath186 ) & @xmath171 & @xmath86 & @xmath171 & @xmath86 +   + 2 & 216 & 0.30 & 0.26 & 0.45 & 0.46 +   + 2 & 360 & 0.30 & 0.26 & 0.42 & 0.45 + 4 & 432 & 0.01 & 0.01 & 0.33 & 0.38 +   + 2 & 648 & 0.30 & 0.25 & 0.36 & 0.48 + 4 & 720 & 0.006 & 0.01 & 0.04 & 0.15 + 8 & 864 & 0.001 & 0.006 & 0.04 & 0.15 +   + 2 & 936 & 0.30 & 0.25 & 0.37 & 0.50 + 4 & 1008 & 0.006 & 0.01 & 0.007 & 0.06 + 8 & 1152 & 0.002 & 0.006 & 0.007 & 0.06 + 12 & 1296 & 0.001 & 0.004 & 0.007 & 0.06 +   + 2 & 1224 & 0.30 & 0.25 & 0.38 & 0.50 + 4 & 1296 & 0.006 & 0.01 & 0.003 & 0.03 + 8 & 1440 & 0.002 & 0.006 & 0.002 & 0.02 + 12 & 1584 & 0.001 & 0.004 & 0.002 & 0.02 + 16 & 1728 & 0.0009 & 0.003 & 0.002 & 0.02 +      in this section we consider the oversampling randomized algorithm proposed in @xcite . in this algorithm ,",
    "instead of solving harmonic extensions ( [ harmonic_ex ] and [ harmonic_ex2 ] ) for each fine grid node on the boundary , we solve a small number of harmonic extension local problems with random boundary conditions .",
    "more precisely , we let @xmath187 where @xmath188 are independent identical distributed standard gaussian random vectors on the fine grid nodes of the boundary .",
    "the advantage of this algorithm lies in the fact that a much fewer number of snapshot basis functions are calculated , while maintaining accuracy .",
    "in addition , we will use an oversampling strategy .",
    "this is done to reduce the mismatching effects of boundary conditions imposed artificially in the construction of snapshot basis functions .",
    "we will denote the extended coarse grid neighborhood for @xmath189 , by @xmath190 . here for example , @xmath191 , would mean the coarse grid neighborhood plus all 1 layer of adjacent fine grida of @xmath177 , and so on .",
    "are on the top and @xmath86 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for case 1 using randomized gmsfem with oversampling , @xmath192.,title=\"fig : \" ]   are on the top and @xmath86 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for case 1 using randomized gmsfem with oversampling , @xmath192.,title=\"fig : \" ] +   are on the top and @xmath86 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for case 1 using randomized gmsfem with oversampling , @xmath192.,title=\"fig : \" ]   are on the top and @xmath86 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for case 1 using randomized gmsfem with oversampling , @xmath192.,title=\"fig : \" ]     are on the top and @xmath86 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for case 2 using randomized gmsfem with oversampling , @xmath192.,title=\"fig : \" ]   are on the top and @xmath86 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for case 2 using randomized gmsfem with oversampling , @xmath192.,title=\"fig : \" ] +   are on the top and @xmath86 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for case 2 using randomized gmsfem with oversampling , @xmath192.,title=\"fig : \" ]   are on the top and @xmath86 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for case 2 using randomized gmsfem with oversampling , @xmath192.,title=\"fig : \" ]    in fig .",
    "[ pic : err - c1-r ] and fig .",
    "[ pic : err - c2-r ] , we show the weighted @xmath171 and @xmath86 errors over time for case 1 and 2 using the randomized gmsfem with oversampling using different numbers of multiscale basis functions . the oversampled region @xmath192 is chosen , that is , the oversampled region contains an extra 4 fine grid cells layers around @xmath58 . here",
    ", we use only the fully coupled scheme .",
    "we use a snapshot ratio of @xmath193 between the standard number of snapshots and the randomized algorithm . comparing results from fig .",
    "[ pic : err - c1-r ] , the randomized algorithm , to fig .",
    "[ fig : err - c1-c ] , the standard gmsfem , we observe that the randomized algorithm is slightly less accurate but at the advantage of having less snapshot solutions required .    in table [ tab : c1-r ] and [ tab : c2-r ] we investigate the effect of the oversampling @xmath194 as we increase the number of fine grid extensions for @xmath195 and @xmath196 .",
    "we present the data of the randomized snapshots for last time step .",
    "we see that oversampling can help to improve the results initially , but the improvements level off as large oversampling domains do not give significant improvement in the solution accuracy .",
    "again the effects of the high contrast of case 2 can be seen in the data as the oversampling performs slightly worse than in the lower contrast regime .",
    "@xmath197 & @xmath171 & @xmath86 & @xmath171 & @xmath86 +   + 4 & 0.05 & 0.04 & 0.16 & 0.22 + 8 & 0.05 & 0.03 & 0.16 & 0.21 + 12 & 0.02 & 0.02 & 0.16 & 0.21 + 16 & 0.004 & 0.01 & 0.15 & 0.21 +   + 4 & 0.05 & 0.03 & 0.14 & 0.21 + 8 & 0.04 & 0.03 & 0.12 & 0.19 + 12 & 0.007 & 0.01 & 0.09 & 0.17 + 16 & 0.002 & 0.009 & 0.08 & 0.16 +   + 4 & 0.05 & 0.03 & 0.09 & 0.17 + 8 & 0.04 & 0.02 & 0.06 & 0.14 + 12 & 0.006 & 0.01 & 0.04 & 0.11 + 16 & 0.001 & 0.008 & 0.02 & 0.08 +   + 4 & 0.05 & 0.03 & 0.09 & 0.17 + 8 & 0.04 & 0.02 & 0.06 & 0.13 + 12 & 0.009 & 0.01 & 0.02 & 0.09 + 16 & 0.002 & 0.007 & 0.02 & 0.07 +     @xmath55 & @xmath171 & @xmath86 & @xmath171 & @xmath86 +   + 4 & 0.05 & 0.04 & 0.36 & 0.31 + 8 & 0.05 & 0.03 & 0.35 & 0.31 + 12 & 0.02 & 0.02 & 0.34 & 0.31 + 16 & 0.006 & 0.01 & 0.34 & 0.31 +   + 4 & 0.05 & 0.03 & 0.33 & 0.31 + 8 & 0.04 & 0.03 & 0.30 & 0.30 + 12 & 0.01 & 0.01 & 0.25 & 0.27 + 16 & 0.009 & 0.009 & 0.22 & 0.25 +   + 4 & 0.05 & 0.03 & 0.28 & 0.29 + 8 & 0.03 & 0.02 & 0.19 & 0.24 + 12 & 0.007 & 0.01 & 0.11 & 0.20 + 16 & 0.002 & 0.008 & 0.07 & 0.15 +   + 4 & 0.05 & 0.03 & 0.24 & 0.27 + 8 & 0.04 & 0.02 & 0.14 & 0.22 + 12 & 0.01 & 0.01 & 0.07 & 0.17 + 16 & 0.002 & 0.007 & 0.06 & 0.14 +",
    "simulating poroelasticity is difficult due the complex heterogeneities and because of the complexity of gridding the flow and mechanics regimes in such media .",
    "therefore , in this paper we developed a generalized multiscale finite element method for a linear poroelastic media .",
    "we first presented the general poroelasticity framework of biot and its subsequent solution by fixed stress time splitting methods .",
    "although fully coupled schemes are considered numerically , this splitting lays the framework for the application of the gmsfem to the decoupled poroelastic equations .",
    "we then outline the construction of the multiscale spaces in both fluid and mechanics regimes .",
    "the algorithm is then implemented on a single geometry with two different cases of elastic parameters .",
    "we show the errors relative to the fine scale solution over time and with varying multiscale basis functions .",
    "finally , we implemented oversampling strategies and randomized boundary conditions when solving for the snapshot space .",
    "as in cases of reservoir compaction , the permeability may depend on pressure resulting in a nonlinear relation . in future studies , we will develop a gmsfem for such nonlinear poroelastic problems ."
  ],
  "abstract_text": [
    "<S> in this paper , we consider the numerical solution of poroelasticity problems that are of biot type and develop a general algorithm for solving coupled systems . we discuss the challenges associated with mechanics and flow problems in heterogeneous media . </S>",
    "<S> the two primary issues being the multiscale nature of the media and the solutions of the fluid and mechanics variables traditionally developed with separate grids and methods . for the numerical solution we develop and implement a generalized multiscale finite element method ( gmsfem ) that solves problem on a coarse grid by constructing local multiscale basis functions . </S>",
    "<S> the procedure begins with construction of multiscale bases for both displacement and pressure in each coarse block . using a snapshot space and local spectral problems </S>",
    "<S> , we construct a basis of reduced dimension . </S>",
    "<S> finally , after multiplying by a multiscale partitions of unity , the multiscale basis is constructed in the offline phase and the coarse grid problem then can be solved for arbitrary forcing and boundary conditions . </S>",
    "<S> we implement this algorithm on two heterogenous media and compute error between the multiscale solution with the fine - scale solutions . </S>",
    "<S> randomized oversampling and forcing strategies are also tested . </S>"
  ]
}
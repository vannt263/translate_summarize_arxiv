{
  "article_text": [
    "symmetries , whether discrete or continuous , have been a central concept in physics since its earliest days , and only by making use of them , explicitly or implicitly by choosing a suitable coordinate system , can most systems be treated analytically or even numerically .",
    "this is also true in the study of spin lattice models , a vibrant field of contemporary condensed matter physics that has produced many insights into novel states of matter and manifestations of order .",
    "a spin model consists of a cluster of @xmath0 spins arranged on some lattice tile , usually with periodic , but possibly other , boundary conditions , and a hamiltonian describing the interaction of the spins with each other or with external fields .",
    "the spins transform like some ( irreducible ) representation of su(@xmath1 ) , usually su(@xmath3 ) , and thus the hamiltonian acts on a tensor product space whose dimension grows exponentially in @xmath0 . in recent years , however , models with higher @xmath1 have also received attention  @xcite , especially since cold atoms in optical lattices hold the prospect of realising su(@xmath1 ) models experimentally  @xcite .",
    "the most commonly considered interaction is of the heisenberg form @xmath4 between spins on sites @xmath5 and @xmath6 with a coupling constant @xmath7 .",
    "such a hamiltonian is inherently invariant under global su(@xmath3 ) ( su(@xmath1 ) ) rotations and conserves both @xmath8 and @xmath9 ( or , for general su(@xmath1 ) , highest total weight @xmath10 and total weight @xmath11 ) respectively .",
    "usually the @xmath7 obey some symmetry relations , often they even possess the full symmetry of the underlying lattice , implying that the hamiltonian is conserved under all operations in @xmath12 , the ( point ) symmetry group of the lattice . since in numerical studies the lattice is some finite tile containing @xmath0 sites , @xmath12 is a subgroup of @xmath13 , the group of all permutation of n objects .    in treating such a spin lattice model , either analytically or numerically , it seems clear that one should exploit the symmetries of the problem as far as possible .",
    "therefore a product basis , where the z - components of all individual spins provides a complete labelling of all states , while conceptually simple , is not the best choice from a performance perspective .",
    "rather , we should use a basis labelled by the eigenvalues of a maximal commuting subset of @xmath12 plus a number of other labels , the eigenvalues of as many further commuting permutations from @xmath13 as are needed to provide a unique labelling .    a mathematical problem that arises in this context",
    "is to determine the eigenvalues of these labelling lattice symmetries . changing language from su(@xmath3 ) to su(@xmath1 )",
    "the general problem can be stated like this : for arbitrary @xmath0-fold product spaces @xmath14 of some irreducible representation ( irrep ) @xmath15 of su(@xmath1 ) , find the eigenvalues the labelling symmetries @xmath16 .",
    "the ( @xmath1 - 1)-dimensional vector @xmath17 is the highest weight of the irrep and has the same meaning for @xmath18 as spin for su(2 ) .",
    "there are two traditional ways to solve this computationally .",
    "we know that the tensor product decomposes into a direct sum of irreducible representations of su(@xmath1 ) : @xmath19 say we want to know the eigenvalues for our labelling lattice symmetries on the subspace @xmath20 of all irreps @xmath21 of su(@xmath1 ) ( @xmath21 appears @xmath22 times in @xmath14 ) .",
    "then one way is to use character theory to determine the irreducible representations of @xmath13 contained in @xmath20 .",
    "the eigenvalues of the permutations are then obtained by diagonalising their representation matrices in these irreps , which is possible for all of them simultaneously since they commute .",
    "alternatively , we could simply write down all product states @xmath23 , which have the total weight @xmath24 ( in the case of su(2 ) this corresponds to a fixed @xmath25 subspace ) , determine the representation matrices of the labelling symmetries and again diagonalise them ( all simultaneously ) . in both cases ,",
    "we need to repeat the process for those highest weight multiplets @xmath26 , that are contained in the subspace of the total weight @xmath24 . in the case of su(2 ) for instance , it is sufficient to consider the next higher @xmath25 subspace , @xmath27 , and disregard all sets of eigenvalues which appear in both subspaces .",
    "young tableaux are a diagrammatic technique originally invented to compute various properties of irreps of the permutation group @xmath13  @xcite , but they and other techniques based on them have since seen a myriad of uses in both mathematics  @xcite and physics  @xcite .",
    "their usefulness is mostly related to the schur - weyl duality , which makes a direct connection between irreps of gl(@xmath1 ) and @xmath13 contained in tensor products of some elementary gl(@xmath1 ) irrep . due to this , yt also provide an elegant means of obtaining the decomposition of @xmath14 into irreducible representations of su(@xmath1 ) , of obtaining the @xmath28 in  ( [ eq : proddecomp ] ) .",
    "a further use of yt was introduced in a 2007 paper  @xcite ( see also  @xcite ) , by schuricht and one of us : the method of extended young tableaux .",
    "it allows the spinon content of an eigenstate of the haldane - shastry - model for a chain of @xmath0 fundamental su(@xmath1 ) spins to be read off directly from slightly modified young tableaux .",
    "the interesting consequence we want to point out here , is that this also allows one to find the state labels @xmath29 for the symmetry group of the 1d chain .",
    "this group is the cyclic group @xmath30 generated by the single - site translation @xmath2 where each eigenvalue @xmath31 of @xmath2 can be identified with a momentum @xmath32 along the chain via the equation @xmath33 $ ] . to our knowledge , this is the only such method working directly with young tableaux and as a practical consequence , this enables a significant speed - up of @xmath2-eigenvalue computations .    in this paper",
    "we generalise the method of extended young tableaux to higher representations of su(@xmath1 ) and present numerical evidence that it indeed gives the correct results for the eigenvalues of @xmath2 , as long as the representations @xmath34 which are coupled are _ symmetric _ , correspond to young tableaux with a single row .",
    "we also find , that while it does give the correct distribution of momenta on the subspace @xmath35 of all multiplets @xmath36 , it does not assign these momenta to the individual yt in a way that would allow deducing the irreducible @xmath13-representation content of @xmath35 .",
    "a positive result would both have been quite useful in itself and would also have given a physical meaning to individual yt , similar in spirit to the connection between yt and angular momentum states sought by mcaven and schlesinger  @xcite .",
    "lastly we show how working directly with the young tableaux of an irreducible representation speeds up the computation of @xmath2 eigenvalues over traditional methods by at least a linear factor @xmath0 .",
    "this paper is organized as follows : in section 2 we briefly review the method of young tableaux for @xmath13 and how it relates to the irreducible representations of su(@xmath1 ) . in section 3 ,",
    "we restate the extension procedure for fundamental representations and reformulate it in a way better suited to both numerical implementation and generalisation to product spaces of higher representations .",
    "we complete this task in section 4 , which contains the main result , namely that the procedure appears to work for _ all symmetric higher su(@xmath1 ) representations_. furthermore , we comment on relation between the extended young tableaux method and irreducible representations of @xmath13 contained in the product spaces . in section 5",
    "we compare the computational complexity of the extension procedure to that of generic methods of obtaining the eigenvalues of @xmath2 .",
    "finally , we summarize our results in section 6 .",
    "we begin with a short summary of young tableaux and some of their traditional uses .    a _ young diagram _ or _",
    "shape _ is a graphical depiction of an integer partition @xmath37 as @xmath38 left - justified rows of boxes , where row @xmath6 has @xmath39 boxes in it .",
    "a _ young tableau _ ( yt ) on the shape",
    "@xmath36 is any filling of the boxes with integers between @xmath40 ( see fig .",
    "[ fig : yd]a and 1b ) .",
    "counting young tableaux subject to certain building rule is what is at the heart of their application in the representation theory of both the symmetric group @xmath13 , the group of all permutations of @xmath0 distinguishable things , and su(@xmath1 ) , the group of special unimodular , complex @xmath41 matrices .    _",
    " _ the irreducible representations of the symmetric group @xmath13 can be labelled by integer partitions @xmath42 .",
    "originally , young tableaux where invented to provide a graphical method of computing the character @xmath43 of an element @xmath44 in the irreducible representation @xmath36  @xcite . of special significance",
    "is the character of the identity , since it is equal the dimension of an irreducible representation : @xmath45 .",
    "this dimension can be determined by counting all _ standard young tableaux _ on the shape @xmath36 .",
    "a tableau is called standard if the numbers in its boxes are strictly increasing in both rows and columns .",
    "fig.[fig : yd]c ) for instance shows all standard yt on @xmath46 .",
    "there are 9 of them , therefore the representation @xmath47 of @xmath48 must be 9 dimensional .    ,",
    "( b ) the same diagram as a ( general ) young tableaux ( c ) all standard young tableaux on the shape @xmath47 ]     and @xmath50 . ]",
    "_ special unitary group su(@xmath1 )  _ in the context of su(@xmath1 ) young tableaux can be applied to decompose tensor products of representations .",
    "an irrep of su(@xmath1 ) is characterized by its highest weight , where a weight is the ( @xmath1 - 1)-dimensional vector of eigenvalues of the simultaneously diagonalisable group generators spanning the ( @xmath1 - 1)-dimensional cartan sub - algebra of su(@xmath1 ) , the generating lie algebra of su(@xmath1 ) . a weight @xmath51 is said to be higher than a weight @xmath52 if the first nonzero entry in @xmath53 is positive . in the well known case of su(2 ) , for instance , irreducible representations are characterized by their spin @xmath54 , which can be integer or half - integer ( @xmath55 ) , and the highest weight corresponds simply to the highest possible value of @xmath56 , which is @xmath57 . since su(@xmath1 ) is defined as a matrix group , one representation is always the group itself , its carrier vector space being @xmath58 .",
    "it is irreducible and of special interest , because by forming tensor products of multiple @xmath59 and projecting onto subspaces of appropriate symmetry we can form all irreducible representations of su(@xmath1 ) , this is the main consequence of the the already mentioned schur - weyl - duality .",
    "thus , schur - weyl duality in effect implies that one can use young tableaux to decompose tensor products of @xmath59 ( or indeed higher su(@xmath1 ) representations ) .",
    "associating @xmath59 with a single box young diagram , there is a neat diagrammatic way to do this : we simply construct all @xmath0-box standard young tableaux with no more than @xmath1 rows , which can best be done using the branching rule ( see  @xcite ) .",
    "the process is illustrated in figure  [ fig : ytfig_branch ] .",
    "this also means there is a 1 - 1 correspondance between an @xmath60 dimensinoal heighest weight @xmath61 and an @xmath60-row shape @xmath36 , so we can from now on use shapes not only to index @xmath13- but also su(@xmath1)-irreps .",
    "it is possible to generalise this procedure to decompose the product space @xmath62 of arbitrary irreducible representations associated with the shape @xmath63 . in the case of single - row @xmath64 ( _symmetric representation_ , @xmath65 ) , which is all we will need in this paper ,",
    "this generalisation is straightforward : we again use the branching rule , add boxes step by step , but now each number @xmath66 appears @xmath67 times instead of only once and we have to take care not to put two boxes with the same number on top of each other ( see fig .  [ fig : ytfig_n3s1 ] ) .",
    "product space of su(2 ) ]    as we have stated , the number @xmath68 of standard yt on the shape @xmath36 equals both the dimension of the irreducible @xmath13 representation labelled with @xmath36 and the multiplicity of the irreducible su(@xmath1 ) representation associated with @xmath36 ( via the correspondence highest weight @xmath69 young diagram ) tensor product @xmath70 of the fundamental representation of su(@xmath1 ) . this just another consequence of the schur - weyl - duality : one can show that the subspace @xmath71 in the tensor product @xmath72 always forms an irreducible representation of the permutation group @xmath13 equivalent to the irrep labelled by the integer partition @xmath36 .    for an example we can again consider figure  [ fig : ytfig_branch ] , the two yt of shape @xmath73 tell us , as mentioned , that @xmath74 contains two doublets but also , that the states of these doublets ( for each fixed @xmath25 ) transform like a standard representation ( 2,1 ) under the action of the group @xmath75 .",
    "we now turn to the problem described in the introduction of computing the eigenvalues of the cyclic permutation @xmath2 on total spin subspaces @xmath76 .",
    "let us first review the extension procedure for yt of fundamental representations introduced in  @xcite .    ) under consideration ]    _ rule , original version_ let @xmath77 be a standard yt of size @xmath0 .",
    "by sliding them to the right where necessary , arrange all boxes of @xmath77 such that in each column of the resulting _ extended _ tableau the numbers in the boxes are in sequence ( @xmath5 above @xmath5 + 1 above @xmath5 + 2 etc . ) .",
    "this will often require leaving empty spaces between boxes ( see fig .",
    "[ fig : eytfig1 ] ) . mark each by a dot . to each dot @xmath5",
    "we assign a number @xmath78 in such a way that the average of all @xmath78 within one column equals the average of the numbers in all boxes in that column , where the @xmath78 have integer or half - integer values with a spacing of @xmath79 between the numbers from one column .",
    "_ haldane  shastry model._this version of the rule betrays the origin of the procedure : it comes from the physical problem of the haldane - shastry spin chain  @xcite , which consists of @xmath0 spins on a circle with a heisenberg - type @xmath80 interaction where the coupling @xmath81 decreases quadratically in the chord distance . in the original model the @xmath82 where @xmath83 su(2 ) spins , but it has been generalised to fundamental irreps of su(@xmath1 )  @xcite .",
    "this fully integrable model  @xcite has a singlet ground state and the excitations are spinons , which can be thought of as delocalised domain walls ( half a spin flip ) in a background liquid with strong antiferromagnetic short range correlations . by interpreting each dot in the extended young tableaux as a spinon ,",
    "the eyt allow obtaining the spinon content of the eigenstates ( which also conserve total spin and total momentum ) and moreover assign each spinon a momentum number @xmath84 connected to the @xmath78 from above via @xmath85 the total momentum of a state is obtained by summing over all individual spinon momenta while the energy is essentially the sum of the squares  @xcite . in both quantities",
    "we need to include the constant offset @xmath86 and @xmath87 respectively given by @xmath88    the original rule is a succinct formulation of the basic idea , but it is not well suited to implementation on a computer , nor does it generalise directly to higher su(@xmath1 ) irreps . if one wishes to use extended yt for computing eigenvalues of @xmath2 on tensor product spaces of higher su(@xmath1 ) irreps , it is better to make use of the branching rule .",
    "let us therefore reformulate the building rule .    ]",
    "_ rule , new version _",
    " given a standard yt @xmath77 , we start with an incomplete extended tableaux @xmath89 containing only the single box labelled 1. we then add a box labelled 2 to @xmath90 by looking whether in @xmath77 , 2 appears in the first or second row . in the former case",
    "we add 2 to the right of 1 , while in the latter case we put it below 1. this yields an , still incomplete , 2-box extended tableaux which we call @xmath91 .",
    "we go on building the full extended tableau @xmath92 step - by - step . in step @xmath38 , having constructed the extended tableaux @xmath93 , we obtain the next one , @xmath94 , in a similar way as @xmath91 : we look up in @xmath77 the row index @xmath95 of the box k+1 and compare it to the one of k , which is @xmath96 . if now @xmath97 , we add a new column at the right side of @xmath93 and put the box k+1 in its @xmath95th row . otherwise ,",
    "if @xmath98 , we add k+1 into same column as k , also in the @xmath95th row .",
    "the resulting extended tableaux we call @xmath99 . after a total of @xmath100 additions",
    "we thus arrive at the final tableaux @xmath101 .",
    "this procedure is now directly implementable and above all , generalises to products of higher ( symmetric ) representations . to compute the total momentum @xmath102 associated to the tableaux @xmath77",
    ", we combine the spinon momentum numbers @xmath78 in each column @xmath103 of the extended tableau @xmath92 into one _ column number _ @xmath104 @xmath105 written directly in terms of the average of the box - labels @xmath106 and the number of boxes @xmath107 in the column , the @xmath104 are : @xmath108 the momentum @xmath102 associated with @xmath77 is then simply @xmath109 the momentum offset @xmath110 is still necessary to ensure that the sum  ( [ eq : momnumber ] ) is a multiple of @xmath1 .",
    "thus no matter which su(@xmath1 ) a tableau t pertains to ( although clearly one must have@xmath111#rows in @xmath77 ) , it is always assigned the same momentum by our procedure .",
    "spins of su(@xmath3 ) , @xmath112 is the integer momentum number @xmath113 . ]    in fig.[fig : eytfig2 ] we show as an example the extension procedure for all total spin multiplets of the tensor product space @xmath114 of four @xmath83 .",
    "since this is the tensor product of a fundamental representation , the shapes of the yt immediately tell us what irreps of @xmath115 the total spin multiplets belong to .",
    "it is thus easily verified , that our procedure gives the correct values : the lone quintet @xmath116 must be fully symmetric and has therefore momentum @xmath117 , the three triplets @xmath118 form the standard representation of @xmath115 ( of dimension 3 and associated with the partition @xmath119 ) while the two singlets belong to the self- conjugate irrep @xmath120 ( 2 dimensional ) .",
    "the haldane - shastry model is valid for @xmath121n@xmath122 not only for @xmath123 and the mechanism of constructing excitations remains the same .",
    "therefore this connection of extended yt and hsm eigenstates exists not only for su(2 ) but higher @xmath1 as well and since extended yt correctly describe the eigenstates of the haldane- shastry model in all cases , it provides the strongest argument in favour of the correctness of our procedure .",
    "a rigorous mathematical proof would still be desirable however .",
    "-boxes to place a @xmath124-box requires an additional rule ]",
    "while the spins in the haldane - shastry model can transform like any fundamental su(@xmath1 ) representations , not just su(2 ) , a straightforward generalisation to higher representations runs into difficulties .",
    "one can nonetheless hope , that the _ mathematical _ statement remains valid for a suitable generalisation of the rule , which is what we investigated .",
    "it turns out , that for products of symmetric su(@xmath1 ) representations @xmath34 ( represented by single row yt with @xmath125 boxes ) the box - by - box approach to building extended tableaux generalises almost directly ( see fig .  [",
    "fig : eytfig_hbranch ] ) .",
    "we have to introduce only one additional condition coming from an ambiguity in where to put a box @xmath126 if there are several eligible open columns with boxes @xmath38. given a tableau @xmath77 representing a multiplet in @xmath62 ( each number appears @xmath67 times ) we require that the resulting extended tableau @xmath92 is _ minimal _ , has as few dots / empty spaces as possible .",
    "the way to achieve this is to consider the boxes with number @xmath126 _ in increasing order of their row index in @xmath77 _ , place higher boxes first .",
    "rep @xmath127 ( @xmath128 ) of su(3 ) .",
    "the last column gives the tally of momenta for the shape .",
    ", scaledwidth=57.1% ]    consider the fourth yt from the top in fig .",
    "[ fig : eytfig_high ] .",
    "assume we have already placed all 1 s and 2 s , giving us an ( incomplete ) extended tableaux with three columns , the first containing 1 above 2 , in the second and third a 1 and a 2 respectively in the first row . if we now were to place the 3 from the lowest row first",
    ", then we have two eligible columns ( the first and third ) .",
    "depending on our decision , we would end up with two different extended tableaux , one with momentum @xmath129 the other with @xmath130 . placing the higher 2 ( the one from the second row ) first",
    ", there is no ambiguity , and we identify the extended yt with @xmath130 as the correct minimal one .    the only further change is a that the momentum offset @xmath131 acquires a factor @xmath67 : @xmath132 the @xmath67 dependence arises naturally as is explained in appendix c.     for @xmath133 and momenta assigned by our method .",
    "the right column shows the ad - hoc identification of yt with the irreps of @xmath115 as described in the text.,scaledwidth=58.0% ]    figures  [ fig : eytfig_high ] and  [ fig : eytfig_n4s1 ] show examples of the extension in the case of @xmath134 . in the absence of a rigorous mathematical understanding",
    "why _ it works and without the physical interpretation that backs up the extended yt procedure in the case of fundamental su(@xmath1 ) representations , we checked the statement numerically for several su(@xmath1 ) up to @xmath135 and @xmath136 and find it does give the correct eigenvalue distributions ( see table  [ tab : numcheck ] ) .",
    "figure  [ fig : eytfig_n4s1 ] illustrates a limitation of our method . as mentioned , multiplet subspaces @xmath137 in @xmath62 comprise in general more than one irreducible representation of @xmath13 . only for products of fundamental representations ( @xmath138 )",
    "do irreps of @xmath13 and su(@xmath1 ) coincide .",
    "the @xmath139-dimensional subspace of all quintets in @xmath140 for instance ( @xmath141 ) contains the three @xmath115 irreps ( 3,1 ) , ( 2,2 ) and ( 4 ) .",
    "if we try an ad - hoc identification of these irreps with the yts based on the latter s structure ( see fig .",
    "[ fig : eytfig_n4s1 ] ) , we see that the momenta assigned by our procedure and the momenta one would expect from this identification do not match : the three tableaux we identified as belonging to irrep @xmath119 are assigned momenta 2,3 and 0 , while one would expect 1,2 and 3 .",
    "thus , while extended yt do produce the correct frequencies of momenta for each subspace @xmath142 _ as a whole _ , they give no help in identifying the @xmath13 irrep content of multiplet subspaces ( beyond what the momentum frequencies themselves already reveal ) .",
    "in this section we want to elaborate how working directly with the young tableaux , allows a useful speed - up of @xmath2 eigenvalue computations in the limit of large @xmath0 and @xmath1 .    in the introduction",
    ", we already mentioned briefly two traditional computational methods for obtaining the eigenvalues of the cyclic subgroup generator @xmath2 .",
    "they are character theory and diagonalisation of the matrix of @xmath2 on total weight representations .",
    "both begin by writing down a product - state basis @xmath143 of a total weight subspace @xmath144 . in the case of @xmath140 of su(2 ) for instance this would be the 10 dimensional space spanned by @xmath145 where @xmath146 and the cyclic permutation @xmath147 is applied to a state in the natural way .",
    "clearly , these states form the basis of a representation of @xmath115 .",
    "_ _ character theory -__there are in fact two methods based on group characters : one working with the characters of @xmath13 and another , simpler one , using the characters of @xmath30 .",
    "the former , mentioned here for the sake of completeness , obtains the @xmath13 character @xmath148 of the total weight representation spanned by @xmath143 ( referred to it simply as _ the _ representation @xmath143 from now on ) , we compute the trace of the representation matrix of one element from each conjugacy class in @xmath13 and then decompose this compound character using the formula @xmath149 } |[p]|\\chi_\\lambda(p)\\chi_{\\bm{w}}(p ) $ ] , where the sum runs over all conjugacy classes @xmath150\\subset s_n$ ] where @xmath151 is some representative of the class and @xmath152|$ ] is its cardinality .",
    "the eigenvalues of @xmath2 follow directly , since each irrep @xmath36 comes with a fixed set of eigenvalues .",
    "one arrives at more efficient way of using characters by realising that @xmath143 is also a representation of @xmath30 , which means we can apply character decomposition directly to the representation matrices of @xmath153 .",
    "we can thus compute the multiplicity @xmath154 of a momentum number @xmath155 via the group characters of @xmath30 : @xmath156\\ ; \\mathrm{tr}\\,c_n^k\\ ] ] where @xmath157 labels the irreducible representations and @xmath158 the classes in @xmath30 and @xmath159 is the trace of the @xmath160 representation matrix of the @xmath38th power of @xmath2 .",
    "this is both faster than the full character decomposition and does not assume prior knowledge of all the irreducible @xmath13 characters ( which would in practice have to be computed too ) . we do however have to generate all the powers @xmath161 of @xmath2 , which takes ( at least ) @xmath162 steps .",
    "we are not done yet however , for remember that the total weight representation @xmath143 contains not only the irrep @xmath61 but also some with highest weight @xmath26 , which we need to sift out . the su(2 ) case is straightforward : we simply run the procedure twice , once for @xmath163 and once for @xmath164 and then subtract the @xmath13-momentum tally of the latter from that of the former .",
    "the general case requires more work however : first , we need to know the positive integers @xmath165 recording how many states a representation @xmath166 contributes to @xmath61 .",
    "the fact that only @xmath26 contribute and @xmath61 is contained exactly once means that viewed as a matrix , @xmath167 will be upper triangular with only 1s on the main diagonal . to obtain the tally of all momenta for @xmath168",
    ", we then need to take linear combinations of a certain number @xmath169 of rows of this matrix , such that , all contributions of higher multiplets are cancelled .",
    "thus , total asymptotic complexity is @xmath170 this is however still not as good as the conceptually simple diagonalisation we will turn to next .    _",
    "diagonalisation._diagonalisation is straightforward : we write out the representation matrix of @xmath2 in the basis @xmath143 and diagonalise it . in general , diagonalisation is of ( time ) complexity @xmath171 for an @xmath172 matirx , but since we are dealing with permutation matrices ( in each row and column all entries are zero except for exactly one 1 ) , @xmath173 steps suffice . like with the previous character methods ,",
    "we will also obtain @xmath2 eigenvalues belonging to su(@xmath1 ) irreps of higher highest weight which can be got rid of in the same way , incurring the same @xmath169 factor .    in the end therefore , diagonalisation is faster than the based character methods and if we assume that the representation matrix of @xmath2 can be written down in @xmath174 steps the final time and space requirements are @xmath175    _ extension._the extension procedure on the other hand works directly with the @xmath68 young tableaux on a shape @xmath36 , assigning each a momentum number @xmath176 .",
    "the key to making it superior to the other methods , is that it is possible to combine yt creation , extension and momentum computation efficiently into one procedure .    .",
    "for all depth @xmath6 the arrow - labels denote into which line the index @xmath177 is to be put .",
    "thus , the paths through the bg correspond 1 - 1 to all standard yt .",
    "an example of such a path and the yt it corresponds to is shown in red . ]",
    "let us first consider yt generation : one should exploit the branching property somehow , but a naive ansatz building up tableaux by adding box after box starting from scratch for each tableaux will require @xmath178 , which will only be marginally better than diagonalisation in the most interesting cases ( the states with low total highest weight , su(@xmath1 ) singlets ) and due to the more intricate nature of the algorithms involved probably turn out to be somewhat slower in the less interesting ones ( states with total highest weight close to the completely symmetric one ) .",
    "we can achieve a complexity of @xmath179 however , if we store the branching information in a suitable way : the branching graph ( bg ) .",
    "it encodes the relations between a shape @xmath36 and all ( valid ) shapes @xmath180 derivable from it by repeated regular removal of elementary shapes @xmath64 in the form of a directed graph , where @xmath64 was the shape associated with the su(@xmath1 ) irrep from which we build our product space .",
    "the nodes of the graph are the shapes @xmath181 ( with @xmath36 being the root ) and a labelled edge @xmath182 goes from shape @xmath183 to @xmath184 if and only if the latter can be obtained from the former by a regular removal of one elementary shape @xmath64 .",
    "a regular removal is the inverse of a regular addition , which is defined as the addition of @xmath67 boxes such that the resulting tableau is valid .",
    "the label @xmath185 will be a list of length @xmath67 , recording into which row we put the first , second , third , ",
    ", @xmath67th box .",
    "an example of a branching graph for the standard yt on shape @xmath186 is depicted in fig .",
    "[ fig : bgraph ] . since @xmath138 ,",
    "the label consists of a single row - index only .    as long as @xmath64 is a single - row tableau ,",
    "as we always assume here , there will be at most one edge between nodes .",
    "however , the branching graph is also defined for tableaux built from multi - row-@xmath64 ( non - symmetric su(@xmath1 ) representations ) , but there it can happen that more than one edge leads from one node to the another ( they will differ in their label however ) .",
    "irrespective of the elementary tableau @xmath64 , each node in a bg can be assigned a depth , a unique distance from the root , and it also holds that all branching graphs have a unique lowest node ( leaf ) given by the elementary shape @xmath64 itself .",
    "computing the branching graph of a compound shape @xmath36 with @xmath38rows for some elementary shape @xmath64 ( where @xmath187 ) requires @xmath188 steps , where @xmath189 is the number of shapes @xmath183 obtainable from @xmath36 by regular removal of @xmath64 .",
    "it can be estimated by ( see appendix b ) @xmath190 the leading contribution is @xmath191 ( because the first row @xmath192 ) and thus we find that bg generation takes @xmath193 time .",
    "we should point out that this is in general not polynomial , as it might appear at first glance .",
    "since @xmath38 is not independent of @xmath0 , for a square shape @xmath194 we indeed have @xmath195 \\right)}$ ] .",
    "we will still profit from using the branching graph however , because even in these cases @xmath68 grows much faster still and thus dominates the total complexity of computing the momenta ( for more details see appendix b ) .",
    "one can now use the efficient graph iteration described in appendix a to traverse all paths through the branching graph , simultaneously building up the extended yt as we go .",
    "it is necessary to compute this both at once , because a modularized approach of extracting the paths first and then translating them one by one into extended yt incurs an additional @xmath196 time factor coming from the fact that each path is of length @xmath100 .    the total asymptotic complexity ( in both _ time _ and _",
    "memory _ ) achievable is therefore indeed determined purely by the number of yt on @xmath36 @xmath197    how much is this superior to diagonalisation ?",
    "the biggest differences occur for low - weight su(@xmath1 ) representations ( singlets ) , and for these , the number of all multiplets @xmath68 grows slower than @xmath198 , the size of the corresponding total weight space .",
    "take for instance @xmath0 spin @xmath83 ( @xmath0 even ) : there are @xmath199 @xmath200 states but only @xmath201 @xmath202 singlets .    in addition , the other methods incur the factor @xmath203 because they need to repeated for higher weights , as described above .",
    "this factor , while trivial for su(2 ) , becomes increasingly important for larger @xmath1 .",
    "we have demonstrated how the extended young tableaux method of calculating the eigenvalues of @xmath2 , the generator of the cyclic subgroup @xmath204 , can be used not only for product spaces of fundamental su(@xmath1 ) representations ( associated with a single - box young diagram ) , but for those of higher ones as well , if they are symmetric , correspond to single - row diagrams .",
    "furthermore , since extended young tableaux derive directly from the yt on a shape @xmath36 , it is possible by exploiting the branching rule to speed up the computation of @xmath2 eigenvalues on @xmath205 to an asymptotic complexity @xmath179 in time and memory .",
    "bs was supported by the landesgraduiertenfrderung baden - wrttemberg .",
    "the branching graph ( bg ) is the key data - structure for implementing fast young tableaux generation , but the form presented above is not yet sufficient to allow an efficient iteration over all paths through it .",
    "we need to both add some additional information to the it and use suitable data - structures to guide the iteration itself .",
    "to illustrate : taking the bg as it is , we could for instance perform a depth - first iteration : we use a size @xmath100 (= max .",
    "depth ) array @xmath206 $ ] to record to which child we descend to from the node @xmath207(d)$ ] at the depth @xmath208 . in each step",
    "we then descend one level further down the graph until we reach the leaf and there , having found a new path from root to leaf , we add it to our result and backtrack to the closest node where we can descend in a different direction . if we are only interested in the extended yt corresponding to the path we can built it as we descend down to the leaf , and store it instead of the path .",
    "the problem is however , that in all this we descend and backtrack step by step through the graph , which will take on average @xmath196 steps and this brings the total complexity up to @xmath178 .        to do better",
    ", we perform a pre - computation before the iteration itself adding the following information to each node @xmath183 : from @xmath183 we follow the _ leftmost path _ ( lmp ) to the leaf and , while we descend , push on a _ stack _ @xmath209 all the nodes with more than one child , because only these will be potential candidates to backtrack to ( see fig .  [",
    "fig : bgraph_enh ] ) .",
    "we also save @xmath210 the incomplete extended yt containing all numbers @xmath211 where @xmath212 is the depth of node @xmath183 .",
    "precomputation of the triple @xmath213 for all nodes of a bg for shape @xmath36 built from elementary shapes @xmath64 takes @xmath214 where we used that the function @xmath189 counting the number of shapes @xmath215 obtainable from @xmath36 by regular removal of elementary tableaux @xmath64 is bounded from above by @xmath216 ( see appendix b ) .",
    "we see it is only linearly more demanding ( in @xmath0 ) than computing the basic branching graph .",
    "let us now sketch an iteration process which uses this precomputed information .",
    "the ingredients are first the array @xmath206 $ ] , already known from the naive iteration above and still needed to keep track of where we have descended to from the node @xmath207(d)$ ] lying at a depth @xmath208 .",
    "furthermore we introduce a stack @xmath217 ( the backtrack - stack ) which will at all times contain the depths of those nodes on our current path , where we could descend in a different direction , those which have more than one child _ and _ have not yet been exhausted ( @xmath218<$ ]  # children of node @xmath207(d)$ ] ) .",
    "flow control requires only a single while-loop which is repeated as long as @xmath217 is nonempty .",
    "the loop performs the following steps    * assume we enter the loop with @xmath206 $ ] initialised and a complete extended yt @xmath219 ( from initialisation or the previous pass ) * first , retrieve the uppermost element ( depth ) from @xmath217 ( removing it in the process ) * if that element is , say , @xmath6 , increment @xmath220 $ ] by one , reset @xmath221=1 $ ] for all @xmath222 and descend to @xmath223(j+1))$ ] ( the next , still unvisited child of node @xmath207(j)$ ] ) * update stack @xmath217 : if @xmath220<$ ]  # children of @xmath207(j)$ ] @xmath224 push @xmath6 back onto @xmath217 * in any case : push all nodes ( depths ) indicated in the backtrack - list of node @xmath184 onto @xmath217 ( the blue lists in fig .",
    "[ fig : bgraph_enh ] ) * obtain next extended yt : drop the indices @xmath225 from @xmath219 and join the remainder with the ( incomplete ) yt @xmath226 which was added to node @xmath184 during the pre - computation    for standard yt , where the number of boxes @xmath67 in the elementary tableaux is equal to one , joining two parts of an extended yt can be done in a single step : we need only check wether @xmath227 .",
    "if so , we merge the leftmost column of the remainder with the rightmost column of @xmath226 . if not , we simply concatenate .",
    "if we are considering tableaux with @xmath228 , joining requires more steps , but can always be achieved in @xmath229 time .    in all , the algorithm sketched above needs @xmath230 ( or @xmath229 i.g . ) steps to generate one path / extended young tableaux , and thus the full iteration requires @xmath231 time and @xmath232 memory if we store the complete list of extended tableaux . if we only keep the momenta , @xmath179 memory will suffice .",
    "the time required to generate the basic branching graph for a shape @xmath36 built up from @xmath0 elementary tableaux @xmath64 as well as augmenting it in preparation for efficient iteration is determined mostly by its size , i.e. the number of its nodes .",
    "this in turn is just @xmath189 , defined as @xmath233 our goal is now to find a good estimate for @xmath189 .",
    "+ defining @xmath234 , we can use it as an upper bound on @xmath189 , as the additional @xmath64-dependent constraints in ( [ def : dlambda ] ) serve only to _ decrease _ the number @xmath183 that are compatible .",
    "but @xmath235 is easily expressed as the multiple sum @xmath236 where @xmath38 is the number of rows in @xmath36 .",
    "this can be estimated from above by forgetting about min(@xmath237,@xmath238 ) and bounding @xmath239 just by @xmath238 instead @xmath240 two instances are of particular interest ( set @xmath241 ) :    * @xmath242 in which case the estimate gives almost the exact result ( @xmath243 compared to @xmath244 ) * @xmath245(rectangle shape ) where the above estimate gives the exact result , as we will show in the following .",
    "building the branching graph for a rectangular shape removing in turn @xmath246 boxes is equivalent to building ( box by box ) shapes with no more than @xmath38 rows and @xmath155 columns . without restrictions ,",
    "the number of shapes with @xmath0 boxes is simply @xmath247 , the number of integer partitions of n. with the restrictions , we must instead use @xmath248 , the number of integer partitions using at most @xmath155 summands of size @xmath249 . thus we obtain the exact branching graph size for a rectangular shape @xmath250 , if we sum this over all steps @xmath251 : @xmath252 however , a little thought reveals that this and the sum  ( [ eq : dlambda_bound2 ] ) are , in fact , the same , proving that in this case the bound  ( [ eq : dlambda_bound ] ) is tight and the number of nodes is exactly given by @xmath253 .",
    "what is the asymptotic complexity in terms of @xmath0 ? if @xmath254 ( or vice versa ) , clearly @xmath255 and therefore polynomial in @xmath0 .",
    "however , if @xmath256 ( shapes of square or triangular form like @xmath257 ) , then our upper bound is @xmath258 \\right)}\\ ] ] and since we have shown that it is tight in the case @xmath259 , we see that there are indeed shapes for which computing the branching graph is of nearly exponential complexity .",
    "but exactly these shapes also have the highest number of yt , growing like @xmath260\\right)}$ ] , fully exponential . therefore computing",
    "the branching graph is always worthwhile , as it is in all cases much less costly than generating the yt from it .    for many other combinations of @xmath0 and @xmath38  ( [ eq : dlambda_bound ] ) overestimates the size of the the branching graph considerably .",
    "take @xmath261 .",
    "assuming @xmath262 the true value is @xmath263 independent of k ( as long as it remains smaller than @xmath264 ) while  ( [ eq : dlambda_bound ] ) yields @xmath265 .",
    "given a tableaux @xmath77 built from @xmath0 elementary tableaux @xmath64 we may interpret it as pertaining to the product space @xmath62 of any su(@xmath1 ) where @xmath1 is at least as large as the number of rows in @xmath77 .",
    "we want to show here , that the momentum assigned to @xmath77 via the sum  ( [ eq : momnumber ] ) is independent of this interpretation , independent of @xmath1 .",
    "@xmath266 where we defined @xmath267 as the number of columns of @xmath92 and used the relations @xmath268 , @xmath269 and @xmath270 . as a reminder",
    ", @xmath107 is the number of boxes in column @xmath103 of the extended tableaux @xmath92 and @xmath271 is just the total number of boxes in @xmath92 ( and therefore also in @xmath77 ) .",
    "what still needs to be checked is whether the quantity in parenthesis in  ( [ eq : b0derivation ] ) is always an integer . to see that this is indeed the case , we need to analyse the relationship between @xmath0 , @xmath267 and @xmath275 .",
    "since in all columns of @xmath92 , the boxes are in sequence , @xmath275 is always either integer or half - integer .",
    "in fact we can express each summand as @xmath276 , where @xmath277 is number in the uppermost box .",
    "therefore , @xmath106 is half - integer , if and only if there is an even number of boxes in column @xmath103 .",
    "now assume @xmath275 is half - integer .",
    "this means , we must have an _ odd _ number of columns with an even number of boxes .",
    "if now @xmath0 is even , there is an even number of boxes left to be distributed over rows with an odd number of boxes in them .",
    "this means that this number of ( odd - box - number ) columns must be even .",
    "thus in this case @xmath278 is half - integer while @xmath279 is integer and in total sum  ( [ eq : b0derivation ] ) is of the form @xmath280integer .",
    "it is not hard to see that in the other three cases this holds as well ( see tab .  [ tab : ptsumcombos ] ) .",
    "+                                  salvatore  r. manmana , kaden r.  a. hazzard , gang chen , adrian  e. feiguin , and ana  maria rey .",
    "su@xmath284 magnetism in chains of ultracold alkaline - earth - metal atoms : mott transitions and quantum correlations .",
    ", 84:043601 , oct 2011 .",
    "philippe corboz , andreas  m. luchli , karlo penc , matthias troyer , and frdric mila . simultaneous dimerization and su(4 ) symmetry breaking of 4-color fermions on the square lattice . ,",
    "107:215301 , nov 2011 .",
    "bela bauer , philippe corboz , andreas  m. luchli , laura messio , karlo penc , matthias troyer , and frdric mila .",
    "three - sublattice order in the su(3 ) heisenberg model on the square and triangular lattice .",
    ", 85:125116 , mar 2012 .",
    "a.  v. gorshkov , m.  hermele , v.  gurarie , c.  xu , p.  s. julienne , j.  ye , p.  zoller , e.  demler , m.  d. lukin , and a.  m. rey .",
    "two - orbital @xmath285 magnetism with ultracold alkaline - earth atoms .",
    ", 6:289 , apr 2010 ."
  ],
  "abstract_text": [
    "<S> obtaining eigenvalues of permutations acting on the product space of @xmath0 representations of su(@xmath1 ) usually involves either diagonalising their representation matrices on total - weight subspaces or decomposing their characters , which can be obtained from frobenius formula or via graphical methods using young tableaux . for products of fundamental representations of su(@xmath1 ) , schuricht and one of us proposed the method of extended young tableaux , which allows reading the eigenvalues of the cyclic permutation @xmath2 directly off the , slightly modified , standard young tableaux labelling an irreducible su(@xmath1 ) representation . </S>",
    "<S> here we generalise the method to all symmetric representations of su(@xmath1 ) , and show that @xmath2 eigenvalue computation based on extended young tableaux is at least linearly faster than the standard methods mentioned . </S>"
  ]
}
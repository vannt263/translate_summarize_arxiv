{
  "article_text": [
    "in a _ set system auction _ there is a single buyer and many vendors that can provide various services .",
    "it is assumed that the buyer s requirements can be satisfied by various subsets of the vendors ; these subsets are called the _ feasible sets_. in particular , a widely - studied class of set - system auctions is _ path auctions _ , where each vendor is able to sell access to a link in a network , and the feasible sets are those sets whose links contain a path from a given source to a given destination ; the study of these auctions has been initiated in the seminal paper by nisan and ronen  @xcite ( see also  @xcite ) .",
    "we assume that each vendor has a privately known cost of providing his services , but submits a possibly larger _",
    "bid _ to the auctioneer . based on these bids ,",
    "the auctioneer selects a feasible subset of vendors , and makes payments to the vendors in this subset .",
    "each selected vendor enjoys a profit of payment minus cost .",
    "vendors want to maximise profit , while the buyer wants to minimise the amount he pays .",
    "a natural goal in this setting is to design a _ truthful _",
    "auction , in which vendors have an incentive to bid their true cost .",
    "this can be achieved by paying each selected vendor a premium above his bid in such a way that the vendor has no incentive to overbid .",
    "an important issue in mechanism design ( which we address in this paper ) is how much the auctioneer will have to overpay in order to ensure truthful bids .    in the context of path auctions",
    "this topic was first addressed by archer and tardos  @xcite .",
    "they define the _ frugality ratio _ of a mechanism as the ratio between its total payment and the cost of the cheapest path disjoint from the path selected by the mechanism .",
    "they show that , for a large class of truthful mechanisms for this problem , the frugality ratio is as large as the number of edges in the shortest path .",
    "talwar  @xcite extends this definition of frugality ratio to general set systems , and studies the frugality ratio of the classical vcg mechanism  @xcite for many specific set systems , such as minimum spanning trees and set covers .",
    "the situations where one has to hire a team of agents to perform a task are quite typical in many domains . in a market - based environment , this goal can be achieved by means of a ( combinatorial ) procurement auction : the agents submit their bids and the buyer selects a team based on the agents ability to work with each other as well as their payment requirements .",
    "the problem is complicated by the fact that only _ some _ subsets of agents constitute a valid team : the task may require several skills , and each agent may possess only a subset of these skills , the agents must be able to communicate with each other , etc .",
    "also , for each agent there is a cost associated with performing the task .",
    "this cost is known to the agent himself , but not to the buyer or other agents .",
    "a well - known example of this setting is a _",
    "shortest path auction _",
    ", where the buyer wants to purchase connectivity between two points in a network that consists of independent subnetworks . in this case",
    ", the valid teams are sets of links that contain a path between these two points .",
    "this problem has been studied extensively in the recent literature starting with the seminal paper by nisan and ronen  @xcite ( see also  @xcite ) .",
    "generally , problems in this category can be formalized by specifying ( explicitly or implicitly ) the sets of agents capable of performing the tasks , or _",
    "feasible _ sets .",
    "consequently , the auctions of this type are sometimes referred to as _ set system auctions_.    the buyer and the agents have conflicting goals : the buyer wants to spend as little money as possible , and the agents want to maximise their earnings .",
    "therefore , to ensure truthful bidding , the buyer has to use a carefully designed payment scheme .",
    "while it is possible to use the celebrated vcg mechanism  @xcite for this purpose , it suffers from two drawbacks .",
    "first , to use vcg , the buyer always has to choose a cheapest feasible set .",
    "if the problem of finding a cheapest feasible set is computationally hard , this may require exponential computational effort .",
    "one may hope to use approximation algorithms to mitigate this problem : the buyer may be satisfied with a feasible set whose cost is _ close _ to optimal and for many np - hard problems there exist fast algorithms for finding approximately optimal solutions",
    ". however , generally speaking , one can not combine such algorithms with vcg - style payments and preserve truthfulness  @xcite .",
    "the second issue with vcg is that it has to pay a bonus to each agent in the winning team . as a result",
    ", the total vcg payment may greatly exceed the true cost of a cheapest feasible set .",
    "in fact , one can easily construct an example where this is indeed the case . while the true cost of a cheapest feasible set is not necessarily a realistic benchmark for a truthful mechanism , it turns out that vcg performs quite badly with respect to more natural benchmarks discussed later in the paper .",
    "therefore , a natural question to ask is whether one can design truthful mechnisms and reasonable benchmarks for a given set system such that these mechanisms perform well with respect to these benchmarks .",
    "this issue was first raised by nisan and ronen  @xcite .",
    "it was subsequently addressed by archer and tardos  @xcite , who introduced the concept of _ frugality _ in the context of shortest path auctions .",
    "the paper  @xcite proposes to measure the overpayment of a mechanism by the worst - case ratio between its total payment and the cost of the cheapest path that is disjoint from the path selected by the mechanism ; this quantity is called the _",
    "frugality ratio_. the authors show that for a large class of truthful mechanisms for this problem ( which includes vcg and all mechanisms that satisfy certain natural properties ) the frugality ratio is @xmath0 , where @xmath0 is the number of edges in the shortest path .",
    "subsequently , elkind et al .",
    "@xcite showed that a somewhat weaker bound of @xmath1 holds for _ all _ truthful shortest path auctions .",
    "talwar  @xcite extends the definition of frugality ratio given in  @xcite to general set systems , and studies the frugality ratio of the vcg mechanism for many specific set systems , such as minimum spanning trees or set covers .    while the definition of frugality ratio proposed by  @xcite is well - motivated and has been instrumental in studying truthful mechanisms for set systems , it is not completely satisfactory .",
    "consider , for example , the graph of figure  [ fig : diamond ] with the costs @xmath2 , @xmath3 .",
    "this graph is 2-connected and the vcg payment to the winning path abcd is bounded .",
    "however , the graph contains no a ",
    "d path that is disjoint from abcd , and hence the frugality ratio of vcg on this graph remains undefined . at the same time",
    ", there is no _ monopoly _ , that is , there is no vendor that appears in all feasible sets . in auctions for other types of set systems ,",
    "the requirement that there exist a feasible solution disjoint from the selected one is even more severe : for example , for vertex - cover auctions ( where vendors correspond to the vertices of some underlying graph , and the feasible sets are vertex covers ) the requirement means that the graph must be bipartite . to deal with this problem , karlin et al .",
    "@xcite suggest a better benchmark , which is defined for any monopoly - free set system .",
    "this quantity , which they denote by @xmath4 , intuitively corresponds to the total payoff in a cheapest nash equilibrium of a first - price auction .",
    "based on this new definition , the authors construct new mechanisms for the shortest path problem and show that the overpayment of these mechanisms is within a constant factor of optimal .      *",
    "vertex cover auctions  * we propose a truthful polynomial - time auction for vertex cover that outputs a solution whose cost is within a factor of 2 of optimal , and whose frugality ratio is at most @xmath5 , where @xmath6 is the maximum degree of the graph ( theorem  [ thm:2delta ] ) .",
    "we complement this result by proving ( theorem  [ thm : delta/4 ] ) that for any @xmath6 , there are graphs of maximum degree @xmath6 for which _ any _ truthful mechanism has frugality ratio at least @xmath7 .",
    "this means that both the solution quality and the frugality ratio of our auction are within a constant factor of optimal . in particular , the frugality ratio is within a factor of  @xmath8 of optimal . to the best of our knowledge ,",
    "this is the first auction for this problem that enjoys these properties .",
    "moreover , we show how to transform any truthful mechanism for the vertex - cover problem into a frugal one while preserving the approximation ratio .",
    "* frugality ratios  * our vertex cover results naturally suggest two modifications of the definition of @xmath4 in  @xcite .",
    "these modifications can be made independently of each other , resulting in four different payment bounds that we denote as @xmath9 , @xmath10 , @xmath11 , and @xmath12 , where @xmath12 is equal to the original payment bound @xmath4 of in  @xcite .",
    "all four payment bounds arise as nash equilibria of certain games ( see appendix ) ; the differences between them can be seen as `` the price of initiative '' and `` the price of co - operation '' ( see section  [ sec : frugality ] ) . while our main result about vertex cover auctions ( theorem  [ thm:2delta ] ) is with respect to @xmath13 , we make use of the new definitions by first comparing the payment of our mechanism to a weaker bound @xmath11 , and then bootstrapping from this result to obtain the desired bound .    inspired by this application , we embark on a further study of these payment bounds .",
    "our results here are as follows :    1 .",
    "we observe ( proposition [ inequalities ] ) that the payment bounds we consider always obey a particular order that is independent of the choice of the set system and the cost vector , namely , @xmath14 .",
    "we provide examples ( proposition  [ exvcone ] and corollaries  [ exvctwo ] and  [ exvcthree ] ) showing that for the vertex cover problem any two consecutive bounds can differ by a factor of @xmath15 , where @xmath0 is the number of agents .",
    "we then show ( theorem  [ thm : upper ] ) that this separation is almost optimal for general set systems by proving that for any set system @xmath16 .",
    "in contrast , we demonstrate ( theorem  [ thm : upperpath ] ) that for path auctions @xmath17 .",
    "we provide examples ( proposition  [ expath ] ) showing that this bound is tight .",
    "we see this as an argument for the study of vertex - cover auctions , as they appear to be more representative of the general team - selection problem than the widely studied path auctions .",
    "2 .   we show ( theorem  [ thm : ratios ] ) that for any set system , if there is a cost vector for which @xmath10 and @xmath12 differ by a factor of @xmath18 , there is another cost vector that separates @xmath12 and @xmath11 by the same factor and vice versa ; the same is true for the pairs @xmath19 and @xmath20 .",
    "this result suggests that the four payment bounds should be studied in a unified framework ; moreover , it leads us to believe that the bootstrapping technique of theorem  [ thm:2delta ] may have other applications .",
    "3 .   we evaluate the payment bounds introduced here with respect to a checklist of desirable features .",
    "in particular , we note that the payment bound @xmath21 of  @xcite exhibits some counterintuitive properties , such as nonmonotonicity with respect to adding a new feasible set ( proposition  [ clm : nm ] ) , and is np - hard to compute ( theorem  [ thm : nphard ] ) , while some of the other payment bounds do not suffer from these problems .",
    "this can be seen as an argument in favour of using weaker but efficiently computable bounds @xmath11 and @xmath9 .",
    "vertex - cover auctions have been studied in the past by talwar  @xcite and calinescu  @xcite .",
    "both of these papers are based on the definition of frugality ratio used in  @xcite ; as mentioned before , this means that their results only apply to bipartite graphs .",
    "talwar  @xcite shows that the frugality ratio of vcg is at most @xmath6 .",
    "however , since finding the cheapest vertex cover is an np - hard problem , the vcg mechanism is computationally infeasible .",
    "the first ( and , to the best of our knowledge , only ) paper to investigate polynomial - time truthful mechanisms for vertex cover is  @xcite . that paper studies an auction that is based on the greedy allocation algorithm , which has an approximation ratio of @xmath22 .",
    "while the main focus of  @xcite is the more general set cover problem , the results of  @xcite imply a frugality ratio of @xmath23 for vertex cover .",
    "our results improve on those of  @xcite as our mechanism is polynomial - time computable , as well as on those of  @xcite , as our mechanism has a better approximation ratio , and we prove a stronger bound on the frugality ratio ; moreover , this bound also applies to the mechanism of  @xcite .",
    "a _ set system _ is a pair @xmath24 , where @xmath25 is the _ ground set _ , @xmath26 , and @xmath27 is a collection of _ feasible sets _ , which are subsets of @xmath25 .",
    "two particular types of set systems are of particular interest to us  _ shortest path _ systems and _ vertex cover _ systems . in a shortest path system ,",
    "the ground set consists of all edges of a network , and a set of edges is feasible if it contains a path between two specified vertices @xmath28 and @xmath29 . in a vertex cover system ,",
    "the elements of the ground set are the vertices of a graph , and the feasible sets are vertex covers of this graph .",
    "we will also present some results for _ matroid _ systems , in which the ground set is the set of all elements of a matroid , and the feasible sets are the bases of the matroid . for a formal definition of a matroid , the reader is referred to  @xcite . in this paper , we use the following characterisation of a matroid .",
    "[ matroid ] a collection of feasible sets @xmath27 is the set of bases of a matroid if and only if for any @xmath30 , there is a bijection @xmath31 between @xmath32 and @xmath33 such that @xmath34 for any @xmath35 .    in set system auctions ,",
    "each element @xmath36 of the ground set is owned by an independent agent and has an associated non - negative cost @xmath37 .",
    "the goal of the buyer is to select ( purchase ) a feasible set .",
    "each element @xmath36 in the selected set incurs a cost of @xmath37 .",
    "the elements that are not selected incur no costs .",
    "the auction proceeds as follows : all elements of the ground set make their bids , then the buyer selects a feasible set based on the bids and makes payments to the agents .",
    "formally , an auction is defined by an _ allocation rule _ @xmath38 and a _ payment rule _ @xmath39 .",
    "the allocation rule takes as input a vector of bids and decides which of the sets in @xmath27 should be selected .",
    "the payment rule also takes as input a vector of bids and decides how much to pay to each agent .",
    "the standard requirements are _ individual rationality _ , that the payment to each agent should be at least as high as its incurred cost ( 0 for agents not in the selected set and @xmath37 for an agent @xmath36 in the selected set ) , and _ incentive compatibility _ , or _",
    ", that each agent s dominant strategy is to bid its true cost .",
    "an allocation rule is _ monotone _ if an agent can not increase its chance of getting selected by raising its bid .",
    "formally , for any bid vector @xmath40 and any @xmath41 , if @xmath42 then @xmath43 for any @xmath44 . given a monotone allocation rule @xmath45 and a bid vector @xmath46 , the _ threshold bid _ @xmath47 of an agent @xmath48 is the highest bid of this agent that still wins the auction , given that the bids of other participants remain the same . formally , @xmath49 .",
    "it is well known ( see , e.g.  @xcite ) that any set - system auction that has a monotone allocation rule and pays each agent its threshold bid is truthful ; conversely , any truthful set - system auction has a monotone allocation rule .",
    "the vcg mechanism is a truthful mechanism that maximises the `` social welfare '' and pays 0 to the losing agents . for set system auctions",
    ", this simply means picking a cheapest feasible set , paying each agent in the selected set its threshold bid , and paying 0 to all other agents .",
    "note , however , that the vcg mechanism may be difficult to implement , since finding a cheapest feasible set may be computationally hard",
    ".    if @xmath50 is a set of agents , @xmath51 denotes @xmath52 .",
    "( note that we identify an agent with its associated member of the ground set . )",
    "similarly , @xmath53 denotes @xmath54 .",
    "we start by reproducing the definition of the quantity @xmath4 from  ( * ? ? ?",
    "* definition 4 ) .",
    "let @xmath24 be a set system and let @xmath55 be a cheapest feasible set with respect to the ( vector of ) true costs @xmath56 .",
    "then @xmath57 is the solution to the following optimisation problem .",
    "minimise @xmath58 subject to    * @xmath59 for all @xmath60 * @xmath61 for all @xmath62 * for every @xmath60 , there is @xmath63 such that @xmath64 and @xmath65    the bound  @xmath57 can be seen as an outcome of a hypothetical two - stage process as follows .",
    "an omniscient auctioneer knows all the vendors private costs , and identifies a cheapest set @xmath55 .",
    "the auctioneer offers payments to the members of @xmath55 .",
    "he does it so as to minimise his total payment subject to the following constraints that represent a notion of fairness .    *",
    "the payment to any member of @xmath55 covers that member s cost .",
    "( condition 1 ) * @xmath55 is still a cheapest set with respect to the new cost vector in which the cost of a member of @xmath55 has been increased to his offer . ( condition 2 ) * if any member @xmath36 of @xmath55 were to ask for a higher payment than his offer , then some other feasible set ( not containing @xmath36 ) would be cheapest .",
    "( condition 3 )    this definition captures many important aspects of our intuition about ` fair ' payments .",
    "however , it can be modified in two ways , both of which are still quite natural , but result in different payment bounds .",
    "first , we can consider the worst rather than the best possible outcome for the buyer .",
    "that is , we can consider the maximum total payment that the agents can extract by jointly selecting their bids subject to ( 1 ) , ( 2 ) , and ( 3 ) .",
    "such a bound corresponds to maximising @xmath66 subject to ( 1 ) , ( 2 ) , and ( 3 ) rather than minimising it . if the agents in @xmath55 submit bids ( rather than the auctioneer making offers ) , this kind of outcome is plausible .",
    "it has to be assumed that agents submit bids independently of each other , but know how high they can bid and still win .",
    "hence , the difference between these two definitions can be seen as `` the price of initiative '' .",
    "second , the agents may be able to make payments to each other . in this case , if they can extract more money from the buyer by agreeing on a vector of bids that violates individual rationality ( i.e. , condition  ( 1 ) ) for some bidders , they might be willing to do so , as the agents who are paid below their costs will be compensated by other members of the group .",
    "the bids must still be realistic , i.e. , they have to satisfy @xmath67 .",
    "the resulting change in payments can be seen as `` the price of co - operation '' and corresponds to replacing condition  ( 1 ) with the following weaker condition  @xmath68 : @xmath69    by considering all possible combinations of these modifications , we obtain four different payment bounds , namely    * @xmath70 , which is the solution to the optimisation problem `` minimise @xmath66 subject to @xmath68 , ( 2 ) , and ( 3 ) '' .",
    "* @xmath71 , which is the solution to the optimisation problem `` maximise @xmath66 subject to @xmath68 , ( 2 ) , and ( 3 ) '' .",
    "* @xmath72 , which is the solution to the optimisation problem `` minimise @xmath66 subject to ( 1 ) , ( 2 ) , and ( 3 ) '' .",
    "* @xmath73 , which is the solution to the optimisation problem `` maximise @xmath66 subject to ( 1 ) , ( 2 ) , ( 3 ) '' .",
    "the abbreviations tu and ntu correspond , respectively , to transferable utility and non - transferable utility , i.e. , the agents ability / inability to make payments to each other . for concreteness",
    ", we will take @xmath74 to be @xmath70 where @xmath55 is the lexicographically least amongst the cheapest feasible sets .",
    "we define @xmath75 , @xmath76 , @xmath77 and @xmath78 similarly , though we will see in section  [ sec : choices ] that @xmath72 and @xmath73 are independent of the choice of  @xmath55 .",
    "note that the quantity @xmath79 from @xcite is @xmath76 .",
    "the second modification ( transferable utility ) is more intuitively appealing in the context of the maximisation problem , as both assume some degree of co - operation between the agents . while the second modification can be made without the first , the resulting payment bound @xmath70 turns out to be too strong to be a realistic benchmark , at least for general set systems . in particular",
    ", it can be smaller than the total cost of a cheapest feasible set @xmath55 ( see section  [ sec : properties ] ) .",
    "however , we provide the definition and some results about @xmath70 , both for completeness and because we believe that it may help to understand which properties of the payment bounds are important for our proofs",
    ". another possibility would be to introduce an additional constraint @xmath80 in the definition of @xmath70 ( note that this condition holds automatically for non - transferable utility bounds , and also for @xmath71 , as @xmath81 ) .",
    "however , such a definition would have no direct economic interpretation , and some of our results ( in particular , the ones in section  [ sec : compare ] ) would no longer hold .",
    "[ maxeasy ] for the payment bounds that are derived from maximisation problems , ( i.e. , @xmath71 and @xmath73 ) , constraints of type ( 3 ) are redundant and can be dropped .",
    "hence , @xmath71 and @xmath73 are solutions to linear programs , and therefore can be computed in polynomial time as long as we have a separation oracle for constraints in  ( 2 ) .",
    "in contrast , @xmath72 can be np - hard to compute even if the size of @xmath82 is polynomial ( see section  [ sec : properties ] ) .    the first and third inequalities in the following observation follow from the fact that condition @xmath68 is weaker than condition ( 1 ) .",
    "[ inequalities ] @xmath83 .",
    "let @xmath84 be a truthful mechanism for @xmath24 .",
    "let @xmath85 denote the total payments of @xmath84 when the actual costs are @xmath86 .",
    "a _ frugality ratio _ of @xmath84 with respect to a payment bound is the ratio between the payment of @xmath84 and this payment bound . in particular , @xmath87 we conclude this section by showing that there exist set systems and respective cost vectors for which all four payment bounds are different . in the next section , we quantify this difference , both for general set systems , and for specific types of set systems , such as path auctions or vertex cover auctions .",
    "consider the shortest - path auction on the graph of figure  [ fig : diamond ] .",
    "the minimal feasible sets are all paths from @xmath45 to @xmath88 .",
    "it can be verified , using the reasoning of proposition  [ expath ] below , that for the cost vector @xmath89 , @xmath90 , @xmath91 , we have    * @xmath92 ( with the bid vector @xmath93 , @xmath94 ) , * @xmath95 ( with the bid vector @xmath96 , @xmath97 ) , * @xmath98 ( with the bid vector @xmath99 , @xmath100 ) , * @xmath101 ( with the bid vector @xmath102 , @xmath103 ) .",
    "we start by showing that for path auctions any two consecutive payment bounds ( in the sequence of proposition  [ inequalities ] ) can differ by at least a factor of 2 . in section",
    "[ sec : upper ] ( theorem  [ thm : upperpath ] ) , we show that the separation results in proposition  [ expath ] are optimal ( that is , the factor of 2 is maximal for path auctions ) .",
    "[ expath ] there is a path auction and cost vectors @xmath56 , @xmath104 and @xmath105 for which    * @xmath106 , * @xmath107 , * @xmath108 .    consider the graph of figure  [ fig : diamond ] .",
    "for the cost vectors @xmath56 , @xmath104 and @xmath105 defined below , abcd is the lexicographically - least cheapest path , so we can assume that @xmath109 .",
    "*   let @xmath56 be edge costs @xmath2 , @xmath3 .",
    "the inequalities in  ( 2 ) are @xmath110 , @xmath111 . by condition  ( 3 )",
    ", both of these inequalities must be tight ( the former one is the only inequality involving @xmath112 , and the latter one is the only inequality involving @xmath113 ) .",
    "the inequalities in  ( 1 ) are @xmath114 , @xmath115 , @xmath116 .",
    "now , if the goal is to maximise @xmath117 , the best choice is @xmath118 , @xmath94 , so @xmath119 . on the other hand , if the goal is to minimise @xmath117 , one should set @xmath102 , @xmath97 , so @xmath120 .",
    "*   let @xmath104 be the edge costs be @xmath121 , @xmath122 , @xmath123 .",
    "the inequalities in  ( 2 ) are the same as before , and by the same argument both of them are , in fact , equalities . the inequalities in  ( 1 ) are @xmath114 , @xmath124 , @xmath116 .",
    "our goal is to maximise @xmath117 .",
    "if we have to respect the inequalities in  ( 1 ) , we have to set @xmath102 , @xmath97 , so @xmath125 . otherwise , we can set @xmath118 , @xmath94 , so @xmath126 . *   the edge costs @xmath105 are @xmath127 , @xmath128 , @xmath129 .",
    "again , the inequalities in  ( 2 ) are the same , and both are , in fact , equalities . the inequalities in  ( 1 ) are @xmath130 , @xmath115 , @xmath131 .",
    "our goal is to minimise @xmath117 .",
    "if we have to respect the inequalities in  ( 1 ) , we have to set @xmath118 , @xmath94 , so @xmath132 . otherwise , we can set @xmath102 , @xmath97 , so @xmath133 .",
    "the separation results for path auctions are obtained on the same graph using very similar cost vectors .",
    "it turns out that this is not coincidental .",
    "namely , we can prove the following theorem .",
    "[ thm : ratios ] for any set system @xmath134 , and any feasible set  @xmath55 , @xmath135 where the maximum is over all cost vectors  @xmath56 for which @xmath55 is a cheapest feasible set .",
    "the proof of the theorem follows directly from the four lemmas proved below ; in particular , the first equality in theorem  [ thm : ratios ] is obtained by combining lemmas  [ useone ] and  [ usetwo ] , and the second equality is obtained by combining lemmas  [ usethree ] and  [ usefour ] .",
    "[ useone ] suppose that @xmath56 is a cost vector for @xmath136 such that @xmath55 is a cheapest feasible set and + @xmath137 .",
    "then there is a cost vector @xmath104 such that @xmath55 is a cheapest feasible set and @xmath138 .",
    "suppose that @xmath139 and @xmath140 where @xmath141 .",
    "assume without loss of generality that @xmath55 consists of elements @xmath142 , and let @xmath143 and @xmath144 be the bid vectors that correspond to @xmath71 and @xmath73 , respectively .",
    "construct the cost vector @xmath104 by setting @xmath145 for @xmath146 , @xmath147 for @xmath148 .",
    "clearly , @xmath55 is a cheapest set under @xmath104 .",
    "moreover , as the costs of elements outside of @xmath55 remain the same , the right - hand sides of all constraints in  ( 2 ) and  ( 3 ) do not change , so any bid vector that satisfies  ( 2 ) and  ( 3 ) with respect to @xmath56 , also satisfies them with respect to @xmath104 . we will construct two bid vectors @xmath149 and @xmath150 that satisfy conditions  ( 1 ) , ( 2 ) and  ( 3 ) for the cost vector @xmath104 , and also satisfy @xmath151 , @xmath152 .",
    "it follows that @xmath153 and @xmath154 , which implies the lemma .",
    "we can set @xmath155 : this bid vector satisfies conditions  ( 2 ) and  ( 3 ) since @xmath156 does , and we have @xmath157 , which means that @xmath149 satisfies condition  ( 1 )",
    ". we can set @xmath158 .",
    "again , @xmath150 satisfies conditions  ( 2 ) and  ( 3 ) since @xmath159 does , and since @xmath159 satisfies condition  ( 1 ) , we have @xmath160 , which means that @xmath150 satisfies condition  ( 1 ) .",
    "[ usetwo ] suppose that @xmath56 is a cost vector for @xmath136 such that @xmath55 is a cheapest feasible set and + @xmath161 .",
    "then there is a cost vector @xmath104 such that @xmath55 is a cheapest feasible set and @xmath162 .",
    "suppose that @xmath163 and @xmath164 where @xmath141 .",
    "again , assume that @xmath55 consists of elements @xmath165 , and let @xmath143 and @xmath166 be the bid vectors that correspond to @xmath73 and @xmath72 , respectively .",
    "construct the cost vector @xmath104 by setting @xmath145 for @xmath146 , @xmath167 for @xmath148 . as @xmath159 satisfies condition  ( 2 ) ,",
    "@xmath55 is a cheapest set under @xmath104 . as in the previous construction ,",
    "the right - hand sides of all constraints in  ( 2 ) do not change .",
    "let @xmath149 be a bid vector that corresponds to @xmath168 .",
    "let us prove that @xmath169 .",
    "indeed , the bid vector @xmath149 must satisfy @xmath170 for @xmath171 ( condition  ( 1 ) ) .",
    "suppose that @xmath172 for some @xmath171 , and consider the constraint in  ( 2 ) that is tight for @xmath173 .",
    "there is such a constraint , as @xmath159 satisfies condition  ( 3 ) .",
    "namely , for some @xmath174 not containing  @xmath175 , @xmath176 for every @xmath177 appearing in the left - side of this constraint , we have @xmath178 but @xmath179 , so the bid vector @xmath149 violates this constraint .",
    "hence , @xmath180 for all @xmath175 and therefore @xmath181 .    on the other hand",
    ", we can construct a bid vector @xmath150 that satisfies conditions  ( 2 ) and  ( 3 ) with respect to @xmath104 and has @xmath182 .",
    "namely , we can set @xmath183 : as @xmath156 satisfies conditions  ( 2 ) and  ( 3 ) , so does @xmath150 .",
    "as @xmath184 , this proves the lemma .",
    "[ usethree ] suppose that @xmath56 is a cost vector for @xmath136 such that @xmath55 is a cheapest feasible set and + @xmath161 .",
    "then there is a cost vector @xmath104 such that @xmath55 is a cheapest feasible set and @xmath185 .",
    "suppose that @xmath163 and @xmath164 where @xmath141 .",
    "again , assume @xmath55 consists of elements @xmath165 , and let @xmath143 and @xmath166 be the bid vectors that correspond to @xmath73 and @xmath72 , respectively .",
    "the cost vector @xmath104 is obtained by setting @xmath145 for @xmath146 , @xmath186 for @xmath148 . since @xmath156 satisfies condition  ( 2 ) ,",
    "@xmath55 is a cheapest set under @xmath104 , and the right - hand sides of all constraints in  ( 2 ) do not change .",
    "let @xmath149 be a bid vector that corresponds to @xmath187 .",
    "it is easy to see that @xmath188 , since the bid vector @xmath149 must satisfy @xmath189 for @xmath171 ( condition  ( 1 ) ) , and @xmath190 . on the other hand ,",
    "we can construct a bid vector @xmath150 that satisfies conditions  ( 2 ) and  ( 3 ) with respect to @xmath104 and has @xmath152 .",
    "namely , we can set @xmath191 : as @xmath159 satisfies conditions  ( 2 ) and  ( 3 ) , so does @xmath150 . as @xmath192 ,",
    "this proves the lemma .",
    "[ usefour ] suppose that @xmath56 is a cost vector for @xmath136 such that @xmath55 is a cheapest feasible set and + @xmath193 .",
    "then there is a cost vector @xmath104 such that @xmath55 is a cheapest feasible set and @xmath138 .",
    "suppose that @xmath194 and @xmath195 where @xmath141 .",
    "again , assume that @xmath55 consists of elements @xmath165 , and let @xmath143 and @xmath166 be the bid vectors that correspond to @xmath72 and @xmath70 , respectively .",
    "construct the cost vector @xmath104 by setting @xmath145 for @xmath146 , @xmath196 for @xmath148 .",
    "clearly , @xmath55 is a cheapest set under @xmath104 .",
    "moreover , as the costs of elements outside of @xmath55 remained the same , the right - hand sides of all constraints in  ( 2 ) do not change .",
    "we construct two bid vectors @xmath149 and @xmath150 that satisfy conditions  ( 1 ) , ( 2 ) , and  ( 3 ) for the cost vector @xmath104 , and have @xmath151 , @xmath197 . as @xmath153 and @xmath154 , this implies the lemma .",
    "we can set @xmath198 .",
    "indeed , the vector @xmath149 satisfies conditions  ( 2 ) and  ( 3 ) since @xmath156 does .",
    "also , since @xmath156 satisfies condition  ( 1 ) , we have @xmath199 , i.e. , @xmath149 satisfies condition  ( 1 ) with respect to @xmath104 . on the other hand ,",
    "we can set @xmath191 : the vector @xmath150 satisfies conditions  ( 2 ) and  ( 3 ) since @xmath159 does , and it satisfies condition  ( 1 ) , since @xmath200 .",
    "in contrast to the case of path auctions , for vertex - cover auctions the gap between @xmath76 and @xmath77 ( and hence between @xmath77 and @xmath75 , and between @xmath74 and @xmath76 ) can be proportional to the size of the graph .",
    "[ exvcone ] for any @xmath201 , there is a an @xmath0-vertex graph and a cost vector @xmath86 for which + @xmath202 .",
    "the underlying graph consists of an @xmath203-clique on the vertices @xmath204 , and an extra vertex @xmath205 adjacent to @xmath206 .",
    "see figure  [ fig : vc ] .",
    "the costs are @xmath207 , @xmath208 .",
    "we can assume that @xmath209 ( this is the lexicographically first vertex cover of cost  @xmath210 ) .",
    "for this set system , the constraints in  ( 2 ) are @xmath211 for @xmath212 .",
    "clearly , we can satisfy conditions  ( 2 ) and  ( 3 ) by setting @xmath213 for @xmath214 , @xmath215 .",
    "hence , @xmath216 . for @xmath77 , there is an additional constraint @xmath217 , so the best we can do is to set @xmath218 for @xmath212 , @xmath219 , which implies @xmath125 .",
    "combining proposition  [ exvcone ] with lemmas  [ useone ] and  [ usethree ] ( and re - naming vertices to make @xmath55 the lexicographically - least cheapest feasible set ) , we derive the following corollaries .",
    "[ exvctwo ] for any @xmath201 , there is an instance of the vertex cover problem on an @xmath0-vertex graph for which for which @xmath220 .",
    "[ exvcthree ] for any @xmath201 , there is an instance of the vertex cover problem on an @xmath0-vertex graph for which @xmath221 .",
    "it turns out that the lower bound proved in the previous subsection is almost tight .",
    "more precisely , the following theorem shows that no two payment bounds can differ by more than a factor of @xmath0 ; moreover , this is the case not just for the vertex cover problem , but for general set systems .",
    "we bound the gap between @xmath75 and @xmath74 .",
    "since @xmath222 , this bound applies to any pair of payment bounds .",
    "[ thm : upper ] for any set system auction having @xmath0 vendors and any cost vector @xmath56 , @xmath223    let @xmath224 be the size of the winning set @xmath55 .",
    "let @xmath225 be the true costs of elements in @xmath55 , let @xmath226 be their bids that correspond to @xmath74 , and let @xmath227 be their bids that correspond to @xmath75 .",
    "for @xmath228 , let @xmath229 be the feasible set associated with @xmath230 using ( 3 ) applied to the tumin bids .    since @xmath231 , it follows that @xmath232 since @xmath233 the result follows .",
    "the final line of the proof of theorem  [ thm : upper ] shows that , in fact , the upper bound on + @xmath234 can be strengthened to the size of the winning set , @xmath224 .",
    "note that in proposition  [ exvcone ] , as well as in corollaries  [ exvctwo ] and  [ exvcthree ] , @xmath235 , so these results do not contradict each other .    for path auctions ,",
    "this upper bound can be improved to 2 , matching the lower bounds of section  [ sec : pathlb ] .",
    "[ thm : upperpath ] for any path auction with cost vector @xmath56 , @xmath236 .    given a network @xmath237 ,",
    "let @xmath238 be the lexicographically - least cheapest @xmath28@xmath29 path in @xmath239 . to simplify notation , relabel the vertices of @xmath239 as @xmath240 so that @xmath241 .",
    "let @xmath242 and @xmath243 be bid vectors that correspond to @xmath74 and @xmath75 , respectively .",
    "for @xmath244 let @xmath245 be a @xmath28@xmath29 path associated with @xmath246 by a constraint of type  ( 3 ) applied to @xmath46 ; consequently @xmath247 .",
    "we can assume without loss of generality that @xmath245 coincides with @xmath248 up to some vertex @xmath249 , then deviates from @xmath248 to avoid @xmath246 , and finally returns to @xmath248 at a vertex @xmath250 and coincides with @xmath248 from then on ( clearly , it might happen that @xmath251 or @xmath252 ) .",
    "indeed , if @xmath245 deviates from @xmath248 more than once , one of these deviations is not necessary to avoid @xmath246 and can be replaced with the respective segment of @xmath248 without increasing the cost of @xmath245 . among all paths of this form ,",
    "let @xmath253 be the one with the largest value of @xmath250 , i.e. , the `` rightmost '' one .",
    "this path corresponds to an equality  @xmath254 of the form @xmath255 .",
    "we construct a set @xmath256 of equalities such that every variable @xmath257 appears in at least one of them .",
    "we construct @xmath256 inductively as follows .",
    "start by setting @xmath258 . at the @xmath177th step ,",
    "suppose that all variables up to ( but not including ) @xmath259 appear in at least one equality in @xmath256 .",
    "add @xmath260 to @xmath256 .",
    "note that for any @xmath177 we have @xmath261 .",
    "this is because the equalities added to @xmath256 during the first @xmath177 steps did not cover @xmath262 .",
    "see figure  [ fig : avoid ] .",
    "since @xmath263 , we must also have @xmath264 : otherwise , @xmath265 would not be the `` rightmost '' constraint for @xmath262 .",
    "therefore , the variables in @xmath266 and @xmath260 do not overlap , and hence no @xmath257 can appear in more than two equalities in @xmath256 . hence , adding up all of the equalities in @xmath256 ( and noting that the @xmath257 are non - negative ) we obtain @xmath267 on the other hand , each equality @xmath254 has a corresponding inequality based on constraint ( 2 ) applied to @xmath268 , namely @xmath269 . summing these inequalities",
    "we have @xmath270 .",
    "the result follows from this and the previous expression .",
    "finally , we show that for matroids all four payment bounds coincide .",
    "[ thm : uppermatroid ] for any matroid @xmath271 with cost vector @xmath56 , @xmath272 .",
    "let @xmath55 , @xmath273 be the lexicographically - least cheapest base of @xmath274 .",
    "we can assume without loss of generality that @xmath275 .",
    "let @xmath242 and @xmath243 be bid vectors that correspond to @xmath74 and @xmath75 , respectively .",
    "for the bid vector @xmath46 and any @xmath276 , consider a constraint in  ( 2 ) that is tight for @xmath246 and the base @xmath277 that is associated with this constraint .",
    "suppose @xmath278 , i.e. , the tight constraint for @xmath246 is of the form @xmath279 , @xmath280 . by proposition  [ matroid ]",
    "there is a mapping @xmath31 such that @xmath281 and for @xmath282 the set @xmath283 is a base .",
    "therefore by condition  ( 2 ) we have @xmath284 for all @xmath282 .",
    "consequently , it must be the case that all these constraints are tight as well , and in particular we have @xmath285 .",
    "on the other hand , as @xmath286 , we also have @xmath287 . as this holds for any @xmath171 , we have @xmath288 . since also @xmath289",
    ", the theorem follows .",
    "recall that for a vertex - cover auction on a graph @xmath290 , an _ allocation rule _ is an algorithm that takes as input a bid @xmath291 for each vertex @xmath292 and returns a vertex cover @xmath293 of @xmath239 . as explained in section  [ sec : preliminaries ] , we can combine any monotone allocation rule with threshold payments to obtain a truthful auction .",
    "two natural examples of monotone allocation rules are @xmath294 , which finds an optimal vertex cover , and the mechanism @xmath295 that uses the greedy allocation algorithm .",
    "however , @xmath294 can not be guaranteed to run in polynomial time unless @xmath296 and @xmath295 has a worst - case approximation ratio of @xmath297 .",
    "another approximation algorithm for ( weighted ) vertex cover , which has approximation ratio 2 , is the _ local ratio _ algorithm",
    "@xmath298  @xcite .",
    "this algorithm considers the edges of @xmath239 one by one .",
    "given an edge @xmath299 , it computes @xmath300 and sets @xmath301 , @xmath302 .",
    "after all edges have been processed , @xmath298 returns the set of vertices @xmath303 .",
    "it is not hard to check that if the order in which the edges are considered is independent of the bids , then this algorithm is monotone as well .",
    "hence , we can use it to construct a truthful auction @xmath304 that is guaranteed to select a vertex cover whose cost is within a factor of 2 from the optimal .",
    "however , while the quality of the solution produced by @xmath298 is much better than that of @xmath295 , we still need to show that its total payment is not too high . in the next subsection",
    ", we bound the frugality ratio of @xmath304 ( and , more generally , all algorithms that satisfy the condition of _ local optimality _ , defined later ) by @xmath5 , where @xmath6 is the maximum degree of @xmath239 .",
    "we then prove a matching lower bound showing that for some graphs the frugality ratio of any truthful auction is at least @xmath7 .      for vertices",
    "@xmath292 and @xmath305 , @xmath306 means that there is an edge between @xmath292 and @xmath305 .",
    "we say that an allocation rule is _ locally optimal _ if whenever @xmath307 , the vertex  @xmath292 is not chosen .",
    "note that for any such rule the threshold bid @xmath308 of  @xmath292 satisfies @xmath309 .",
    "the mechanisms @xmath294 , @xmath295 , and @xmath304 are locally optimal .",
    "[ thm:2delta ] any vertex cover auction  @xmath84 on a graph with maximum degree @xmath6 that has a locally optimal and monotone allocation rule and pays each agent its threshold bid has frugality ratio @xmath310 .    to prove theorem  [ thm:2delta ] , we first show that the total payment of any locally optimal mechanism does not exceed @xmath311 .",
    "we then demonstrate that @xmath312 . by combining these two results",
    ", the theorem follows .",
    "[ lem : pay ] let @xmath290 be a graph with maximum degree @xmath6 .",
    "let @xmath84 be a vertex - cover auction on @xmath239 that satisfies the conditions of theorem  [ thm:2delta ] .",
    "then for any cost vector @xmath56 , the total payment of @xmath84 satisfies @xmath313 .    first note that any such auction is truthful , so we can assume that each agent s bid is equal to its cost .",
    "let @xmath293 be the vertex cover selected by @xmath84 .",
    "then by local optimality @xmath314    we now derive a lower bound on @xmath75 ; while not essential for the proof of theorem  [ thm:2delta ] , it helps us build the intuition necessary for that proof .",
    "[ lem : vctumax ] for a vertex cover instance @xmath315 in which @xmath55 is a minimum - cost vertex cover with respect to cost vector @xmath56 , @xmath316 .    for a vertex  @xmath305 with at least one neighbour in  @xmath55 ,",
    "let @xmath317 denote the number of neighbours that  @xmath305 has in  @xmath55 .",
    "consider the bid vector @xmath46 in which , for each @xmath318 , @xmath319 . then @xmath320 .",
    "to finish we want to show that @xmath46 is feasible in the sense that it satisfies ( 2 ) .",
    "consider a vertex cover @xmath174 , and extend the bid vector @xmath46 by assigning @xmath321 for @xmath322 .",
    "then @xmath323 and since all edges between @xmath324 and  @xmath55 go to @xmath325 , the right - hand - side is equal to @xmath326    next , we prove a lower bound on @xmath73 ; we will then use it to obtain a lower bound on @xmath76 .",
    "[ lem : vcntumax ] for a vertex cover instance @xmath315 in which @xmath55 is a minimum - cost vertex cover with respect to cost vector @xmath56 , @xmath327 .    if @xmath328 , by condition  ( 1 ) we are done .",
    "therefore , for the rest of the proof we assume that @xmath329 .",
    "we show how to construct a bid vector @xmath330 that satisfies conditions  ( 1 ) and  ( 2 ) such that @xmath331 ; clearly , this implies @xmath332 .",
    "recall that a network flow problem is described by a directed graph @xmath333 , a source node @xmath334 , a sink node @xmath335 , and a vector of capacity constraints @xmath336 , @xmath337 .",
    "consider a network @xmath338 such that @xmath339 , @xmath340 , where @xmath341 , @xmath342 , @xmath343 .",
    "since @xmath55 is a vertex cover for @xmath239 , no edge of @xmath344 can have both of its endpoints in @xmath345 , and by construction , @xmath346 contains no edges with both endpoints in @xmath55 .",
    "therefore , the graph @xmath347 is bipartite with parts @xmath348 .    set the capacity constraints for @xmath337 as follows : @xmath349 , @xmath350 , @xmath351 for all @xmath318 , @xmath352 .",
    "recall that a _ cut _ is a partition of the vertices in @xmath353 into two sets @xmath354 and @xmath355 so that @xmath356 , @xmath357 ; we denote such a cut by @xmath358 . abusing notation",
    ", we write @xmath359 if @xmath360 or @xmath361 , and say that such an edge @xmath362 _ crosses _ the cut @xmath363 .",
    "capacity _ of a cut @xmath363 is computed as @xmath364 .",
    "we have @xmath365 , @xmath366 .",
    "let @xmath367 be a minimum cut in @xmath368 , where @xmath369 , @xmath370 .",
    "see figure  [ fig : cut ] . as @xmath371 , and",
    "any edge in @xmath346 has infinite capacity , no edge @xmath372 crosses @xmath373 .",
    "consider the network @xmath374 , where @xmath375 , @xmath376 .",
    "clearly , @xmath377 is a minimum cut in @xmath378 ( otherwise , there would exist a smaller cut for @xmath368 ) . as @xmath379",
    ", we have @xmath380 .",
    "now , consider the network @xmath381 , where @xmath382 , @xmath383 .",
    "similarly , @xmath384 is a minimum cut in @xmath385 , @xmath386 . as",
    "the size of a maximum flow from @xmath28 to @xmath29 is equal to the capacity of a minimum cut separating @xmath28 and @xmath29 , there exists a flow @xmath387 of size @xmath388 .",
    "this flow has to saturate all edges between @xmath28 and @xmath389 , i.e. , @xmath390 for all @xmath391 .",
    "now , increase the capacities of all edges between @xmath28 and @xmath389 to @xmath392 . in the modified network ,",
    "the capacity of a minimum cut ( and hence the size of a maximum flow ) is @xmath393 , and a maximum flow @xmath394 can be constructed by greedily augmenting @xmath82 .",
    "set @xmath321 for all @xmath395 , @xmath396 for all @xmath391 .",
    "as @xmath397 is constructed by augmenting @xmath82 , we have @xmath398 for all @xmath318 , i.e. , condition  ( 1 ) is satisfied .",
    "now , let us check that no vertex cover @xmath399 can violate condition  ( 2 ) . set @xmath400 , @xmath401 , @xmath402 , @xmath403 ; our goal is to show that @xmath404 .",
    "consider all edges @xmath405 such that @xmath406 . if @xmath407 then @xmath408 ( no edge in @xmath346 can cross the cut ) , and if @xmath409 then @xmath410 .",
    "hence , @xmath411 is a vertex cover for @xmath239 , and therefore @xmath412 .",
    "consequently , @xmath413 .",
    "now , consider the vertices in @xmath414 . any edge in @xmath346 that starts in one of these vertices has to end in @xmath415 (",
    "this edge has to be covered by @xmath174 , and it can not go across the cut ) . therefore , the total flow out of @xmath414 is at most the total flow out of @xmath415 , i.e. , @xmath416 .",
    "hence , @xmath404 .    finally , we derive a lower bound on the payment bound that is of interest to us , namely , @xmath76 .    [",
    "lem : vcntumin ] for a vertex cover instance @xmath315 in which @xmath55 is a minimum - cost vertex cover with respect to cost vector @xmath56 , @xmath417 .",
    "suppose for contradiction that @xmath86 is a cost vector with minimum - cost vertex cover @xmath55 and @xmath418 .",
    "let @xmath419 be the corresponding bid vector and let @xmath420 be a new cost vector with @xmath421 for @xmath318 and @xmath422 for @xmath423 .",
    "condition  ( 2 ) guarantees that @xmath55 is an optimal solution to the cost vector @xmath420 . now compute a bid vector @xmath424 corresponding to @xmath168 .",
    "we claim that @xmath425 for any @xmath318 . indeed , suppose that @xmath426 for some @xmath318 ( @xmath425 for @xmath423 by construction ) .",
    "as @xmath419 satisfies conditions ( 1)(3 ) , among the inequalities in  ( 2 ) there is one that is tight for @xmath292 and the bid vector @xmath419 .",
    "that is , @xmath427 . by the construction of @xmath428 , @xmath429",
    "now since @xmath430 for all @xmath431 , @xmath432 implies @xmath433 .",
    "but this violates ( 2 ) .",
    "so we now know @xmath434 .",
    "hence , we have @xmath435 , giving a contradiction to the fact that @xmath436 which we proved in lemma  [ lem : vcntumax ] .",
    "as @xmath72 satisfies condition  ( 1 ) , we have @xmath437 .",
    "together will lemma  [ lem : vcntumin ] , this implies @xmath438 . combined with lemma  [ lem : pay ] , this completes the proof of theorem  [ thm:2delta ] .    as @xmath439",
    ", our bound of @xmath5 extends to the smaller frugality ratios that we consider , i.e. , @xmath440 and @xmath441 .",
    "it is not clear whether it extends to the larger frugality ratio @xmath442 .",
    "however , the frugality ratio @xmath442 is not realistic because the payment bound @xmath74 is inappropriately low  we show in section  [ sec : properties ] that @xmath74 can be significantly smaller than the total cost of a cheapest vertex cover",
    ".      we can also apply our results to monotone vertex - cover algorithms that do not necessarily output locally - optimal solutions . to do so",
    ", we simply take the vertex cover produced by any such algorithm and transform it into a locally - optimal one , considering the vertices in lexicographic order and replacing a vertex @xmath292 with its neighbours whenever @xmath443 .",
    "note that if a vertex @xmath444 gets added to the vertex cover during this process , it means that it has a neighbour whose bid is higher than @xmath444 s bid @xmath445 , so after one pass all vertices in the vertex cover satisfy @xmath446 .",
    "this procedure is monotone in bids , and it can only decrease the cost of the vertex cover . therefore , using it on top of a monotone allocation rule with approximation ratio @xmath18 , we obtain a monotone locally - optimal allocation rule with approximation ratio @xmath18 . combining it with threshold payments ,",
    "we get an auction with @xmath447 .",
    "since any truthful auction has a monotone allocation rule , this procedure transforms any truthful mechanism for the vertex - cover problem into a frugal one while preserving the approximation ratio .",
    "furthermore , our vertex - cover results can be extended to set cover .",
    "namely , we can transform a set cover instance into a vertex cover instance as follows .",
    "for each set @xmath448 , create a vertex @xmath449 .",
    "the vertices @xmath449 and @xmath450 are adjacent iff the intersection of  @xmath448 and @xmath451 is nonempty . for this vertex cover instance",
    ", the degree of any vertex is at most @xmath452 , where @xmath453 is the maximum set size and @xmath274 is the maximum number of sets containing any ground set element .",
    "it is easy to see that an instance of set cover is monopoly - free if a set in the set cover can be replaced with all its neighbours , so we can transform any set cover into a locally optimal one as described above .",
    "therefore , any monotone approximation algorithm for set cover yields an auction with @xmath447 .      in this subsection , we prove that the upper bound of theorem  [ thm:2delta ] is essentially optimal .",
    "our proof uses the techniques of  @xcite , where the authors prove a similar result for shortest - path auctions .",
    "[ thm : delta/4 ] for any @xmath454 , there exists a graph @xmath239 with @xmath5 vertices and degree @xmath6 , such that for any truthful mechanism @xmath84 on @xmath239 we have @xmath455 .",
    "let @xmath239 be a complete bipartite graph with parts @xmath456 and @xmath457 , @xmath458 , thus @xmath239 has degree @xmath6 .",
    "we consider two families of cost vectors for @xmath239 .",
    "under a cost vector @xmath459 , @xmath239 has one vertex of cost 1 ; all other vertices cost 0 . under a cost vector @xmath460 ,",
    "each of @xmath456 and @xmath457 has one vertex of cost 1 , and all other vertices have cost 0 .",
    "clearly , @xmath461 , @xmath462 .",
    "we construct a bipartite graph @xmath463 with the vertex set @xmath464 as follows .",
    "consider a cost vector @xmath460 ; let its cost-1 vertices be @xmath465 and @xmath466 . by changing the cost of either of these vertices to 0",
    ", we obtain a cost vector in @xmath467 .",
    "let @xmath468 and @xmath469 be the cost vectors obtained by changing the cost of @xmath470 and @xmath471 , respectively .",
    "the vertex cover chosen by @xmath472 must either contain all vertices in @xmath456 or all vertices in @xmath457 . in the former case ,",
    "we add to @xmath463 an edge from @xmath473 to @xmath474 and in the latter case we add to @xmath463 an edge from @xmath473 to @xmath475 ( if the vertex cover includes all of @xmath239 , @xmath463 contains both of these edges ) .",
    "the graph @xmath463 has at least @xmath476 edges , so there must exist an @xmath459 of degree at least @xmath7 .",
    "let @xmath477 be the other endpoints of the edges incident to @xmath478 , and for each @xmath479 , let @xmath449 be the vertex of @xmath239 whose cost is different under @xmath478 and @xmath480 ; note that all @xmath449 are distinct .",
    "it is not hard to see that @xmath481 : the cheapest vertex cover contains the all-0 part of @xmath239 , and we can satisfy conditions ( 1)(3 ) by allowing one of the vertices in the all-0 part of each block to bid 1 , while all other vertices in the cheapest set bid 0 .",
    "on the other hand , by monotonicity of @xmath84 we have @xmath482 for @xmath479",
    "( @xmath449 is in the winning set under @xmath480 , and @xmath478 is obtained from @xmath480 by decreasing the cost of @xmath449 ) , and moreover , the threshold bid of each @xmath449 is at least 1 , so the total payment of @xmath84 on @xmath478 is at least @xmath7 .",
    "hence , @xmath483 .",
    "theorem  [ thm : delta/4 ] can be extended to apply to graphs with degree @xmath6 of unlimited size : a similar argument applies to any graph made up of multiple copies of the bipartite graph @xmath239 in the proof .",
    "the resulting lower bound is still @xmath7 , i.e. , it does not depend on the size of the graph .",
    "[ randommechanisms ] the lower bound of theorem  [ thm : delta/4 ] can be generalised to randomised mechanisms , where a randomised mechanism is considered to be truthful if it can be represented as a probability distribution over truthful mechanisms . in this case , instead of choosing the vertex @xmath459 with the highest degree , we put both @xmath484 and @xmath485 into @xmath463 , label each edge with the probability that the respective part of the block is chosen , and pick @xmath459 with the highest weighted degree .",
    "in this section we consider several desirable properties of payment bounds and evaluate the four payment bounds proposed in this paper with respect to them .",
    "the particular properties that we are interested in are the relationship with other reasonable bounds , such as the total cost of the cheapest set @xmath55 ( section  [ sec : comparecost ] ) , or the total vcg payment ( section  [ sec : comparevcg ] ) . we also consider independence of the choice of @xmath55 ( section  [ sec : choices ] ) , monotonicity ( section  [ sec : nonmon ] ) , computational tractability ( section  [ sec : nph ] ) .",
    "the basic property of _ individual rationality _ dictates that the total payment must be at least the total cost of the selected winning set . in this section",
    "we show that amongst the payment bounds we consider here , @xmath74 may be less than the cost of the winning set @xmath55 . for such set systems , @xmath74 may as a result be too low to be realistic .",
    "clearly , @xmath77 and @xmath76 are at least the cost of @xmath55 due to condition  ( 1 ) , and so is @xmath75 , since @xmath486 .",
    "however , @xmath74 fails this test .",
    "the example of proposition  [ expath ] ( part @xmath487 ) shows that for path auctions , @xmath74 can be smaller than the total cost by a factor of 2 .",
    "moreover , there are set systems and cost vectors for which @xmath74 is smaller than the cost of the cheapest set @xmath55 by a factor of @xmath488 .",
    "consider , for example , the vertex - cover auction for the graph of proposition  [ exvcone ] with the costs @xmath489 , @xmath490 .",
    "the cost of a cheapest vertex cover is @xmath15 , and the lexicographically first vertex cover of cost @xmath15 is @xmath491 .",
    "the constraints in  ( 2 ) are @xmath492 .",
    "clearly , we can satisfy conditions  ( 2 ) and  ( 3 ) by setting @xmath493 , @xmath219 , which means that @xmath133 .",
    "this example suggests that the payment bound @xmath74 is sometimes too strong to be realistic , since it can be substantially lower than the cost of a cheapest feasible set .",
    "note , however , that this is not an issue for matroid auctions becuase , for matroids , all four payment bounds have the same value .",
    "the paper  @xcite shows that if the feasible sets are the bases of a monopoly - free matroid , then @xmath494 .",
    "it is not difficult to see that this is also the case for other payment bounds .    for any monopoly - free matroid",
    ", we have @xmath495    the claim follows immediately from theorem  [ thm : uppermatroid ] .",
    "alternatively , it is not hard to check that the argument used in  @xcite for @xmath76 does not use condition  ( 1 ) at all and hence it works for @xmath74 as well .    to show that @xmath496 is at most  @xmath210",
    ", one must prove that the vcg payment is at most @xmath74 .",
    "this is shown for @xmath76 in the first paragraph of the proof of theorem 5 in  @xcite .",
    "their argument does not use condition  ( 1 ) at all , so it also applies to @xmath74 . on the other hand , @xmath497 since @xmath498 and @xmath499 by proposition 7 of  @xcite ( and also by proposition  [ vcgge1 ] below ) .",
    "another measure of suitability for payment bounds is that they should not result in frugality ratios that are less then 1 for well - known truthful mechanisms .",
    "if this is indeed the case , the payment bound may be too weak , as it becomes too easy to design mechanisms that perform well with respect to it .",
    "it particular , a reasonable requirement is that a payment bound should not exceed the total payment of the classical vcg mechanism .",
    "the following proposition shows that @xmath77 , and therefore also @xmath76 and @xmath74 , do not exceed the vcg payment @xmath500 .",
    "the proof essentially follows the argument of proposition 7 of  @xcite .",
    "[ vcgge1 ] for any set - system auction , @xmath501 .",
    "let @xmath55 be a winning set chosen by vcg ( hence , a cheapest set ) .",
    "suppose @xmath60 .",
    "the vcg payment @xmath502 is @xmath503 .",
    "let @xmath504 be a feasible set @xmath174 which achieves the minimum , so @xmath505 .",
    "but constraint ( 2 ) gives @xmath506 for all  @xmath174 , so since @xmath507 , @xmath508 , so @xmath509 now by constraint ( 1 ) , @xmath510 , so ( 4 ) gives @xmath511 thus , every winner s payment is at least his bid , so the result follows .",
    "proposition  [ vcgge1 ] shows that none of the payment bounds @xmath74 , @xmath76 and @xmath77 exceeds the payment of vcg . however , the payment bound @xmath75 can be larger that the total vcg payment . in particular , for the instance in proposition  [ exvcone ] ,",
    "the vcg payment is smaller than @xmath75 by a factor of @xmath15 .",
    "we have already seen that @xmath512 .",
    "on the other hand , under vcg , the threshold bid of any @xmath513 , @xmath214 , is 0 : if any such vertex bids above 0 , it is deleted from the winning set together with @xmath205 and replaced with @xmath206 . similarly , the threshold bid of @xmath205 is 1 , because if @xmath205 bids above 1 , it can be replaced with @xmath206 .",
    "so the vcg payment is  @xmath210 .",
    "this result is not surprising : the definition of @xmath75 implicitly assumes there is co - operation between the agents , while the computation of vcg payments does not take into account any interaction between them .",
    "indeed , co - operation enables the agents to extract higher payments under vcg .",
    "that is , vcg is not group - strategyproof .",
    "this suggests that as a payment bound , @xmath75 may be too liberal , at least in a context where there is little or no co - operation between agents .",
    "perhaps @xmath75 can be a good benchmark for measuring the performance of mechanisms designed for agents that can form coalitions or make side payments to each other , in particular , group - strategyproof mechanisms .",
    "another setting in which bounding @xmath514 is still of some interest is when , for the underlying problem , the optimal allocation and vcg payments are np - hard to compute . in this case , finding a _ polynomial - time computable _ mechanism with good frugality ratio with respect to @xmath75 is a non - trivial task , while bounding the frugality ratio with respect to more challenging payment bounds could be too difficult . to illustrate this point , compare the proofs of lemma  [ lem : vctumax ] and lemma  [ lem :",
    "vcntumax ] : both require some effort , but the latter is much more difficult than the former .      all payment bounds defined in this paper correspond to the total bid of all elements in a cheapest feasible set , where ties are broken lexicographically .",
    "while this definition ensures that our payment bounds are well - defined , the particular choice of the draw - resolution rule appears arbitrary , and one might ask whether our payment bounds are sufficiently robust to be independent of this choice . it turns out that is indeed the case for @xmath76 and @xmath77 .",
    "the values of @xmath515 and @xmath73 do not depend on the choice of @xmath55 .",
    "consider two feasible sets @xmath516 and @xmath517 that have the same cost . in the computation of @xmath518 ,",
    "all vertices in @xmath519 would have to bid their true cost , since otherwise @xmath517 would become cheaper than @xmath516 .",
    "hence , any bid vector for @xmath516 can only have @xmath520 for @xmath521 , and hence constitutes a valid bid vector for @xmath517 ( in the context of @xmath522 ) and vice versa .",
    "a similar argument applies to @xmath77 .",
    "however , for @xmath74 and @xmath75 this is not the case .",
    "for example , consider the set system @xmath523 with the costs @xmath524 , @xmath525 , @xmath526 .",
    "the cheapest sets are @xmath516 and @xmath517 .",
    "now @xmath527 , as the total bid of the elements in @xmath516 can not exceed the total cost of @xmath528 . on the other hand , @xmath529 , as we can set @xmath530 .",
    "similarly , @xmath531 , because the equalities in  ( 3 ) are @xmath532 and @xmath533 . but",
    "@xmath534 , since we can set @xmath535 , @xmath536 , @xmath537 .",
    "the results in  @xcite and our vertex cover results are proved for the frugality ratio @xmath538 .",
    "indeed , it can be argued that @xmath538 is the `` best '' definition of frugality ratio , because among those payment bounds that are at least as large as the cost of a cheapest feasible set , it is most demanding of the algorithm .",
    "however , @xmath76 is not always the easiest or the most natural payment bound to work with . in this subsection , we discuss several disadvantages of @xmath76 ( and also @xmath74 ) as compared with @xmath77 and @xmath75 .       in much more detail .",
    "while some of our results on @xmath76 are subsumed by their work , we present our results here as we feel that they are relevant in the context of this paper , and furthermore , they also apply to @xmath74 .",
    "]    the first problem with @xmath76 is that it is not monotone with respect to @xmath27 , in that it may increase when one adds a feasible set to @xmath27 .",
    "( it is , however , monotone in the sense that a losing agent can not become a winner by raising its cost . ) intuitively , a good payment bound should satisfy this monotonicity requirement , as adding a feasible set increases the competition , so it should drive the prices down .",
    "note that this is indeed the case for @xmath77 and @xmath75 since a new feasible set adds a constraint in  ( 2 ) , thus limiting the solution space for the respective linear program ( recall remark  [ maxeasy ] ) .",
    "[ clm : nm ] adding a feasible set to @xmath27 can increase @xmath76 and @xmath74 by a factor of @xmath488 , where @xmath0 is the number of agents .",
    "let @xmath539 .",
    "let @xmath540 , @xmath541 , @xmath542 , @xmath543 , and suppose that @xmath544 .",
    "the costs are @xmath545 , @xmath546 , @xmath547 , @xmath548 for @xmath543 .",
    "note that @xmath55 is a cheapest feasible set .",
    "for @xmath27 , the bid vector @xmath549 , @xmath550 satisfies ( 1 ) , ( 2 ) , and ( 3 ) , so @xmath551 .    let @xmath552 .",
    "for @xmath553 , @xmath55 is still the lexicographically - least cheapest set .",
    "any optimal solution has @xmath554 ( by constraint in ( 2 ) with @xmath277 ) .",
    "condition ( 3 ) for @xmath250 implies @xmath555 , so @xmath556 and @xmath557 .",
    "as all constraints in  ( 1 ) are of the form @xmath67 , we also have @xmath558 .    for path auctions",
    ", it has been shown  @xcite that @xmath76 is non - monotone in a slightly different sense , i.e. , with respect to adding a new edge ( agent ) rather than a new feasible set ( a team of existing agents ) .",
    "we present that example here for completeness .",
    "[ dd ] for shortest path auctions , adding an edge to the graph can increase @xmath76 by a factor of @xmath559 .",
    "consider the graph of figure  [ fig : diamond ] with the edge costs @xmath2 , @xmath3 . in this graph",
    ", @xmath560 is the cheapest path , and it is easy to see that @xmath120 with the bid vector @xmath102 , @xmath97 . now suppose that we add a new edge @xmath561 of cost 0 between @xmath66 and @xmath363 , obtaining the graph of figure  [ fig : doublediamond ] .",
    "we can assume that the original shortest path @xmath560 is the lexicographically first shortest path in the new graph , so it gets selected .",
    "however , now we have a new constraint in  ( 2 ) , namely , @xmath562 , so we have @xmath132 with the bid vector @xmath118 , @xmath94 .",
    "it is not hard to modify the example of proposition  [ dd ] so that the underlying graph has no multiple edges .",
    "also , as all constraints in  ( 1 ) are of the form @xmath67 , it also applies to @xmath74 .",
    "we can also show that @xmath76 and @xmath74 are non - monotone for vertex cover . in this case , adding a new feasible set corresponds to _ deleting _ edges from the graph .",
    "it turns out that deleting a single edge can increase @xmath76 and @xmath74 by a factor of @xmath15 ; the construction is based on the graph and the cost vector used in proposition  [ exvcone ] .",
    "another problem with @xmath72 is that it is np - hard to compute , even if the number of feasible sets is polynomial in @xmath0 .",
    "again , this puts it at a disadvantage compared to @xmath73 and @xmath71 ( see remark  [ maxeasy ] ) .",
    "[ thm : nphard ] computing @xmath76 is np - hard , even when the lexicographically - least cheapest feasible set @xmath55 is given in the input .",
    "we reduce exact cover by 3-sets(x3c ) to our problem .",
    "an instance of x3c is given by a universe @xmath563 and a collection of subsets @xmath564 , @xmath565 , @xmath566 , where the goal is to decide whether one can cover @xmath239 by @xmath567 of these sets .",
    "observe that if this is indeed the case , then each element of @xmath239 is contained in exactly one set of the cover .",
    "consider a minimisation problem @xmath568 of the following form : + minimise @xmath569 under conditions    * @xmath570 for all @xmath543 * @xmath571 for @xmath572 ; subsets @xmath573 * for each @xmath574 , one of the constraints in ( 2 ) involving it is tight .",
    "for any such @xmath568 , one can construct in polynomial time a set system and a vector of costs @xmath56 such that @xmath76 is the optimal solution to @xmath568 .",
    "[ lem : reword ]    the construction is straightforward : there is an element @xmath246 of cost 0 for each @xmath257 , an element @xmath575 of cost @xmath576 for each @xmath576 , the feasible solutions are @xmath577 , or any set obtained from @xmath578 by replacing the elements indexed by @xmath451 , with @xmath575 .    by this lemma , all we have to do to prove theorem  [ thm : nphard ] is to show how to solve x3c by using the solution to a minimisation problem of the form given in lemma  [ lem : reword ] .",
    "we do this as follows . for each @xmath579",
    ", we introduce 4 variables @xmath249 , @xmath580 , @xmath581 , and @xmath257 .",
    "also , for each element @xmath582 of @xmath239 there is a variable @xmath583 .",
    "we use the following set of constraints :    * in ( 1 ) , we have constraints @xmath584 , @xmath585 , @xmath586 , @xmath587 , @xmath588 for all @xmath589 , @xmath590 . * in ( 2 ) , for all @xmath589 , we have the following 5 constraints : + @xmath591 + @xmath592 + @xmath593 + @xmath594 + @xmath595 .",
    "+ also , for all @xmath590 we have the constraint @xmath596 .",
    "the goal is to minimize @xmath597 .",
    "observe that for each @xmath177 , there is only one constraint involving @xmath583 , so by condition  ( 3 ) it must be tight .",
    "consider the two constraints involving @xmath581 .",
    "one of them must be tight ; either @xmath598 or @xmath599 .",
    "it follows that @xmath600 .",
    "hence , for any feasible solution to ( 1)(3 ) we have @xmath601 . now",
    ", suppose that there is an exact set cover .",
    "set @xmath602 for @xmath590 .",
    "also , if @xmath579 is included in this cover , set @xmath603 , @xmath604 , otherwise set @xmath605 , @xmath606",
    ". clearly , all inequalities in ( 2 ) are satisfied ( we use the fact that each element is covered exactly once ) , and for each variable , one of the constraints involving it is tight .",
    "this assignment results in @xmath607 .",
    "conversely , suppose there is a feasible solution with @xmath607 .",
    "as each addend of the form @xmath608 contributes at least 1 , we have @xmath609 for all @xmath175 , @xmath602 for all @xmath177 .",
    "we will now show that for each @xmath175 , either @xmath603 and @xmath610 , or @xmath611 and @xmath605 .",
    "for the sake of contradiction , suppose that @xmath612 , @xmath613 .",
    "as one of the constraints involving @xmath581 must be tight , we have @xmath614 . similarly , @xmath615 . hence , @xmath616 .",
    "this contradicts the previously noted equality @xmath609 .",
    "to finish the proof , note that for each @xmath617 we have @xmath618 and @xmath602 , so the subsets that correspond to @xmath603 constitute a set cover .    in the proofs of theorem  [ thm : nphard ] all constraints in  ( 1 ) are of the form @xmath67 .",
    "hence , the same result is true for @xmath74 .    for shortest - path auctions ,",
    "the size of @xmath27 can be superpolynomial .",
    "however , there is a polynomial - time separation oracle for constraints in  ( 2 ) ( to construct one , use any algorithm for finding shortest paths ) , so one can compute @xmath77 and @xmath75 in polynomial time . on the other hand , recently and independently it was shown  @xcite that computing @xmath76 for shortest - path auctions is np - hard .",
    "we thanks david kempe for suggesting the `` diamond graph '' auction and the cost vector used in the proof of proposition  [ expath][(i ) ] .    1    a.  archer and e.  tardos , frugal path mechanisms . in _ proceedings of the 13th annual acm - siam symposium on discrete algorithms _ , pages 991999 , 2002 .",
    "r.  bar - yehuda , k.  bendel , a.  freund , and d.  rawitz , local ratio : a unified framework for approximation algorithms . in memoriam : shimon even 1935 - 2004 .",
    ", 36(4):422463 , 2004 .    r.  bar - yehuda and s.  even , a local - ratio theorem for approximating the weighted vertex cover problem .",
    ", 25:2746 , 1985 .",
    "e.  clarke , multipart pricing of public goods .",
    ", 8:1733 , 1971 .",
    "g.  calinescu , bounding the payment of approximate truthful mechanisms . in _ proceedings of the 15th international symposium on algorithms and computation _ , pages 221233 , dec .",
    "n.  chen and a.r .",
    "karlin , cheap labor can be expensive , in _ proceedings of the 18th annual acm - siam symposium on discrete algorithms _ , pages 707715 , jan .",
    "a.  czumaj and a.  ronen , on the expected payment of mechanisms for task allocation . in _ proceedings of the 5th acm conference on electronic commerce ( ec04 )",
    "_ , 2004 .",
    "e.  elkind , true costs of cheap labor are hard to measure : edge deletion and vcg payments in graphs . in _ proceedings of the 6th acm conference on electronic commerce ( ec05 ) _ , 2005 .",
    "e.  elkind , a.  sahai , and k.  steiglitz , frugality in path auctions . in _ proceedings of the 15th annual acm - siam symposium on discrete algorithms _ ,",
    "pages 694702 , 2004 .",
    "j.  feigenbaum , c.  h.  papadimitriou , r.  sami , and s.  shenker , a bgp - based mechanism for lowest - cost routing . in _ proceedings of the 21st symposium on principles of distributed computing _",
    ", pages 173182 , 2002 .",
    "a.  fiat , a.  goldberg , j.  hartline , and a.  karlin , competitive generalized auctions . in",
    "_ proceedings of the 34th annual acm symposium on theory of computation _ , pages 7281 , 2002 .",
    "r.  garg , v.  kumar , a.  rudra and a.  verma , coalitional games on graphs : core structures , substitutes and frugality . in _ proceedings of the 4th acm conference on electronic commerce ( ec03 ) _ , 2005 .",
    "a.  goldberg , j.  hartline , and a.  wright , competitive auctions and digital goods . in _ proceedings of the 12th annual acm - siam symposium on discrete algorithms _ ,",
    "pages 735744 , 2001 .",
    "t.  groves , incentives in teams .",
    ", 41(4):617631 , 1973 .",
    "n.  immorlica , d.  karger , e.  nikolova , and r.  sami , first - price path auctions . in _ proceedings of the 6th acm conference on electronic commerce ( ec05 )",
    "_ , 2005 .    a.  r.  karlin , d.  kempe , and t.  tamir beyond vcg : frugality of truthful mechanisms . in _ proceedings of the 46th annual ieee symposium on foundations of computer science",
    "_ , pages 615624 ,",
    "oct .  2005 .",
    "n.  nisan and a.  ronen , algorithmic mechanism design . in _ proceedings of the 31st annual acm symposium on theory of computation _ ,",
    "pages 129140 , 1999 .",
    "n.  nisan and a.  ronen , computationally feasible vcg mechanisms . in _ proceedings of the 2nd acm conference on electronic commerce ( ec00 )",
    "_ , pages 242252 , 2000 .",
    "j.  oxley , matroid theory . the clarendon press oxford university press , new york , 1992 .",
    "a.  ronen and r.  talisman , towards generic low payment mechanisms for decentralized task allocation . in _ proceedings of the 7th international ieee conference on e - commerce technology _ ,",
    "k.  talwar , the price of truth : frugality in truthful mechanisms . in _ proceedings of 20th international symposium on theoretical aspects of computer science _ , 2003 .",
    "w.  vickrey , counterspeculation , auctions , and competitive sealed tenders .",
    ", 16:837 , 1961 .",
    "karlin et al .",
    "@xcite , argue that the payment bound @xmath4 can be viewed as the total payment in a nash equilibrium of a certain game . in this section ,",
    "we build on this intuition to justify the four payment bounds introduced above .",
    "we consider two variants of a game that differ in how profit is shared between the winning players .",
    "we will call these variants the tu game and the ntu game ( standing for `` transferable utility '' and `` non - transferable utility '' respectively ) .",
    "we then show that @xmath77 and @xmath76 correspond to the worst and the best nash equilibrium of the ntu game , and @xmath75 and @xmath74 correspond to the worst and the best nash equilibrium of the tu game .",
    "@xmath76 corresponds to the payment bound @xmath4 of  @xcite .    in both versions ,",
    "the players are the elements of the ground set @xmath619 .",
    "each player has an associated cost that is known to all parties .",
    "the game starts by the buyer selecting a cheapest feasible set @xmath620 ( with respect to the true costs ) , resolving ties lexicographically .",
    "then the elements of @xmath55 are allowed to make bids , and the buyer decides whether or not to accept them .",
    "intuitively , @xmath55 ought to be able to win the auction , and we seek bids from @xmath55 that are low enough to win , and high enough that no member of @xmath55 has an incentive to raise his bid ( because that would cause him to lose ) .    given that @xmath55 is supposed to win , we modify the game to rule out behaviour such as elements of @xmath55 bidding unnecessarily high and losing .",
    "one way to enforce the requirement that @xmath55 wins is via fines .",
    "if @xmath55 is not among the cheapest sets with respect to the bids ( where the new cost of a set @xmath174 is the sum of the total cost of @xmath621 and the total bid of @xmath622 ) , the buyer rejects the solution and every element of @xmath55 who bids above its true cost pays a fine of size @xmath623 , while other elements pay 0 .",
    "otherwise , members of @xmath55 are paid their bids ( which may then be shared amongst members of @xmath55 ) .",
    "this ensures that in a nash equilibrium , the resulting bids are never rejected as a result of @xmath55 not being the cheapest feasible set .    in the ntu game , we assume that players can not make payments to each other , i.e. , the utility of each player in @xmath55 is exactly the difference between his bid and his true cost .",
    "in particular , this means that no agent will bid below his true cost , which is captured by condition  ( 1 ) . in a nash equilibrium",
    ", @xmath55 is the cheapest set with respect to the bids , which is captured by condition  ( 2 ) . now",
    ", suppose that condition  ( 3 ) is not satisfied for some bidder @xmath36 .",
    "then the vector of bids is not a nash equilibrium : @xmath36 can benefit from increasing his bids by a small amount .",
    "conversely , any vector of bids that satisfies ( 1 ) , ( 2 ) and ( 3 ) is a nash equilibrium : no player wants to decrease its bid , as it would lower the payment it receives , and no player can increase its bid , as it would violate  ( 2 ) and will cause this bidder to pay a fine . as",
    "@xmath76 minimises @xmath624 under conditions ( 1 ) , ( 2 ) , and ( 3 ) , and @xmath77 maximises it , these are , respectively , the best and the worst nash equilibrium , from the buyer s point of view .    in the tu game ,",
    "the players in @xmath55 redistribute the profits among themselves in equal shares , i.e. , each player s utility is the difference between the total payment to @xmath55 and the total cost of @xmath55 , divided by the size of @xmath55 .",
    "we noted in section 6.1 that when @xmath55 is _ required _ to be the winning set , this may result in nash equilibria where members of @xmath55 make a loss collectively , and not just individually as a result of condition  ( 1 ) not applying .",
    "( recall that we do assume that agents bids are non - negative ; condition  @xmath68 . )",
    "@xmath74 thus represents a situation in which `` winners '' are being coerced into accepting a loss - making contract .",
    "@xmath75 does not have the above problem , since it is larger than the other payment bounds , so members of @xmath55 will not make a loss . the meaning of conditions  ( 2 ) and  ( 3 ) remains the same : the agents do not want the buyer to reject their bid , and no agent can improve the total payoff by raising their bid . note that we are not allowing coalitions ( see remark  [ no - coalitions ] ) , i.e. , coordinated deviations by two or more players : even though the players share the profits , they can not make joint decisions about their strategies .",
    "similarly to the ntu game , it is easy to see that @xmath75 and @xmath74 are , respectively , the worst and the best nash equilibria of this game from the buyer s viewpoint .    [ no - coalitions ] allowing payment redistribution within a set is different from allowing players to form coalitions ( as in , e.g. , the definition of strong nash equilibrium ) : in the latter case , players are allowed to make joint decisions about their bids , but they can not make payments to each other .",
    "the reason why @xmath74 can result in negative payoffs to the `` winners '' is that we artificially required the set @xmath55 to win .",
    "let us consider what happens in the ntu game when _ all _ agents are allowed to bid and @xmath55 is not required to be the winning set .",
    "suppose @xmath277 bids lower than @xmath55 .",
    "that is @xmath625 , hence @xmath626 optimality of @xmath55 means that @xmath627 , hence @xmath628 non - transferable utility implies that @xmath629 , so @xmath630 , hence with the previous inequalities we noted , @xmath631 the above inequality states that some members of @xmath55 are losing the auction while bidding above their costs . for each member of @xmath632",
    "for which this strict inequality holds , reduce its bid either to its cost or to the point where the cost of @xmath55 equals the cost of @xmath277 .",
    "note that the subset of @xmath55 in the above proof that are bidding above cost and losing the auction , must be of size at least @xmath559 .",
    "if it was of size 1 , we would not have a nash equilibrium ; that bidder could unilaterally improve his situation by reducing his bid .",
    "observe also that @xmath76 is the outcome of the ntu game provided that losing players do not bid unnecessarily high ."
  ],
  "abstract_text": [
    "<S> in _ set - system auctions _ , there are several overlapping teams of agents , and a task that can be completed by any of these teams . </S>",
    "<S> the buyer s goal is to hire a team and pay as little as possible . </S>",
    "<S> recently , karlin , kempe and tamir introduced a new definition of _ frugality ratio _ for this setting . </S>",
    "<S> informally , the frugality ratio is the ratio of the total payment of a mechanism to perceived fair cost . in this paper </S>",
    "<S> , we study this together with alternative notions of fair cost , and how the resulting frugality ratios relate to each other for various kinds of set systems .    </S>",
    "<S> we propose a new truthful polynomial - time auction for the vertex cover problem ( where the feasible sets correspond to the vertex covers of a given graph ) , based on the _ local ratio _ algorithm of bar - yehuda and even . </S>",
    "<S> the mechanism guarantees to find a winning set whose cost is at most twice the optimal . </S>",
    "<S> in this situation , even though it is np - hard to find a lowest - cost feasible set , we show that _ local optimality _ of a solution can be used to derive frugality bounds that are within a constant factor of best possible . </S>",
    "<S> to prove this result , we use our alternative notions of frugality via a bootstrapping technique , which may be of independent interest . </S>"
  ]
}
{
  "article_text": [
    "because wireless nodes are normally powered by batteries and are expected to remain in operation for extended periods of time , how to conserve energy in order to extend node lifetime and network lifetime is a major research issue in most wireless networks .",
    "one way of saving energy is to operate these nodes at low power as long as possible .",
    "however , this will also significantly downgrade their functionality .",
    "therefore , there is a trade - off between energy and the qualitydelivered by wireless nodes . when quality  is measured in terms of latency , the trade - off is between energy and time .",
    "examples arise in real - time computing , where a processor trades off processing rate for energy @xcite ; and in wireless transmission , where a transmitter trades off transmission speed for energy @xcite .",
    "when the energy of a wireless node is consumed mostly by communication tasks , scheduling a rf transmission efficiently becomes extremely important in conserving the energy of the node .",
    "it is well known that there exists an explicit relationship between transmission power and channel capacity ieeeexample : shannon ; transmission power can be adjusted by changing the transmission rate , provided that appropriate coding schemes are used .",
    "this provides an option to conserve the transmission energy of a wireless node by slowing down the transmission rate .",
    "increased latency is a direct side effect caused by the low transmission rate and it can affect other quality - of - service ( qos ) metrics as well .",
    "for example , excessive delay may cause buffer overflow , which increases the packet dropping rate .",
    "the existence of this trade - off between energy and latency motivates _",
    "dynamic transmission control _",
    "techniques for designing energy - efficient wireless systems .    to the best of our knowledge ,",
    "the earliest work that captures the trade - off between energy and latency in transmission scheduling is @xcite , in which collins and cruz formulated a markov decision problem for minimizing transmission cost subject to some power constraints . by assuming a linear dependency between transmission cost and time",
    ", their model did not consider the potential of more energy saving by varying the transmission rate .",
    "berry @xcite considered a markov decision process in the context of wireless fading channels to minimize the weighted sum of average transmission power and a buffer cost , which corresponds to either average delay or probability of buffer overflow .",
    "using dynamic programming and assuming the transmission cost to be a convex function of time , berry discovered some structural properties of the optimal adaptive control policy , which relies on information on the arrival state , the queue state , and the channel state . in @xcite and @xcite , ata developed optimal dynamic power control policies subject to a qos constraint for markovian queues in wireless static channels and fading channels respectively . in his work ,",
    "the optimization problem was formulated to minimize the long - term average transmission power , given a constraint of buffer overflow probability in equilibrium ; dynamic programming and lagrangian relaxation approaches were used in deriving the optimal policies , which can be expressed as functions of the packet queue length and the channel state .",
    "neely utilized a lyapunov drift technique in @xcite to develop a dynamic power allocation and routing algorithm that minimizes the average power of a cell - partitioned wireless network .",
    "it was shown that the on - line algorithm operates without knowledge of traffic rates or channel statistics , and yields average power that is arbitrarily close to the off - line optimal solution .",
    "a related problem of maximizing throughput subject to peak and average power constraints was also discussed in neely06tit .",
    "today s real - time data communications require quality - of - service ( qos ) guarantee for each individual packet .",
    "another line of research aims at minimizing the transmission energy over a single wireless link while providing qos guarantee .",
    "in particular , it is assumed that each packet is associated with an arrival time ( generally random ) , a number of bits , a hard deadline that must be met , and an energy function .",
    "this line of work was initially studied in @xcite with follow - up work in @xcite where a `` homogeneous '' case is considered assuming all packets have the same deadline and number of bits . by identifying some properties of this convex optimization problem , gamal et al .",
    "proposed the `` moveright '' algorithm in @xcite to solve it iteratively .",
    "however , the rate of convergence of the moveright algorithm is only obtainable for a special case of the problem when all packets have identical energy functions ; in general the moveright algorithm may converge slowly .",
    "zafer et al .",
    "@xcite studied an optimal rate control problem over a time - varying wireless channel , in which the channel state was considered to be a markov process .",
    "in particular , they considered the scenario that @xmath0 units of data must be transmitted by a common deadline @xmath1 and they obtained an optimal rate - control policy that minimizes the total energy expenditure subject to short - term average power constraints . in zafer07ita and @xcite , the case of identical arrival time and individual deadline is studied by zafer et .",
    "al . in @xcite ,",
    "the case of identical packet size and identical delay constraint is studied by neely et .",
    "they extended the result for the case of individual packet size and identical delay constraint in @xcite . in @xcite , zafer et .",
    "al . used a graphical approach to analyze the case that each packet has its own arrival time and deadline .",
    "however , there were certain restrictions in their setting , for example , the packet that arrives later must have later deadlines .",
    "wang and li @xcite analyzed scheduling problems for bursty packets with strict deadlines over a single time - varying wireless channel . assuming slotted transmission and changeable packet transmission order , they are able to exploit structural properties of the problem to come up with an algorithm that solves the off - line problem . in @xcite ,",
    "poulakis et .",
    "al . also studied energy efficient scheduling problems for a single time - varying wireless channel .",
    "they considered a finite - horizon problem where each packet must be transmitted before @xmath2 optimal stopping theory was used to find the optimal start transmission time between @xmath3 @xmath4 $ ] so as to minimize the expected energy consumption and the average energy consumption per unit of time . in @xcite ,",
    "an energy - efficient and deadline - constrained problem was formulated in lossy networks to maximize the probability that a packet is delivered within the deadline minus a transmission energy cost .",
    "dynamic programming based solutions were developed under a finite - state markov channel model .",
    "@xcite studied discrete rate scheduling problems for packets with individual deadlines in energy harvesting systems . under the assumption that later packet arrivals have later deadlines , they established connections between continuous rate and discrete rate algorithms .",
    "a truncation algorithm was also developed to handle the case that harvested energy is insufficient to guarantee all packets deadlines are met .",
    "tomasi et .",
    "@xcite developed transmission strategies to deliver a prescribed number of packets by a common deadline @xmath5 while minimizing transmission attempts .",
    "modeling the time - varying correlated wireless channel as a markov chain , they used dynamic programming and a heuristic strategy to address three systems , in which the receiver provides the channel state information to the transmitter differently .",
    "zhong and xu @xcite formulated optimization problems that minimize the energy consumption of a set of tasks with task - dependent energy functions and packet lengths . in their problem formulation ,",
    "the energy functions include both transmission energy and circuit power consumption . to obtain the optimal solution for the off - line case with backlogged tasks",
    "only , they developed an iterative algorithm radb whose complexity is @xmath6 ( @xmath7 is the number of tasks ) .",
    "the authors show via simulation that the radb algorithm achieves good performance when used in on - line scheduling . in @xcite",
    ", vaze derived the competitive ratios of on - line transmission scheduling algorithms for single - source and two - source gaussian channels in energy harvesting systems . in vaze s problem formulation , the goal is to minimize the transmission time of fixed @xmath0 bits using harvested energy , which arrive in chunks randomly .    in the above papers , the closest ones to this paper are gamnaprauyzainf02 , @xcite , and @xcite . in this paper , we consider the transmission control problem in the scenario that each task has arbitrary arrival time , deadline , and number of bits . therefore , the problem we study in this paper is more generic and challenging .",
    "our model also allows each packet to have its own energy function .",
    "this makes our results especially applicable to download transmission scheduling ( dts ) scenarios , where a transmitter transmits to multiple receivers over slow - fading channels .",
    "our contributions are the following : by analyzing the structure of the optimal sample path , we solve the dts problem efficiently using a two - fold decomposition approach .",
    "first , we establish that the problem can be reduced to a set of subproblems over segments of the optimal sample path defined by critical tasks .",
    "secondly , we establish that solving each subproblem boils down to solving nonlinear algebraic equations for the corresponding segments . based on the above decomposition approach , an efficient algorithm that solves the dts problem",
    "is proposed and compared to the moveright algorithm .",
    "simulation results show that our algorithm is typically an order of magnitude faster than the moveright algorithm .",
    "the main results of the paper were previously published in miaocassinfocom05 . in this journal version , we have improved most proofs and moved them to an appendix in order to enhance the continuity of the analysis in the paper .",
    "we have added summaries and explanations between the technical results to enhance its readability .",
    "we have added section iii.c , in which the maximum power constraints are added and discussed .",
    "in addition , we have added section iv . in this section ,",
    "we discuss how to use our algorithm and receding horizon control to perform on - line transmission scheduling where the task information is unknown .",
    "new simulation results are also provided in this section .",
    "the structure of the paper is the following : in section ii , we formulate our dts  problem and discuss some related work ; the main results of dts are presented in section iii , where an efficient algorithm is proposed and shown to be optimal ; in section iv , we discuss how our main results can be used to perform on - line transmission control ; finally , we conclude in section v.",
    "we assume the channel between the transmitter and the receiver is an additive white gaussian noise ( awgn ) channel and the interference to the receiver is negligible .",
    "the received signal at time @xmath8 can be written as:@xmath9where @xmath10 is the channel gain , @xmath11 is the transmitted signal , and @xmath12 is additive white gaussian noise @xcite .",
    "note that in this section we consider the case when the transmitter is in isolation from other transmitters so that the interference is negligible .",
    "due to channel fading , @xmath10 is time - varying in general .",
    "we will consider @xmath10 to be time - invariant during the transmission of a single packet .",
    "although in practice the channel state may change during the transmission of a packet , our results are still helpful , since , it is valid to estimate unknown future channel state to be static for each packet in an on - line setting .",
    "note that our results can be possibly extended to fast fading channels as well .",
    "the dts problem arises when a wireless node has a set of _ n _ packets that need to be sent to different neighboring nodes .",
    "the goal is to minimize the total transmission energy consumption while guaranteeing hard deadline satisfaction for each individual packet . since each packet can be considered as a communication task , we the terms task  and packetinterchangeably in what follows .",
    "we model the transmitter as a single - server queueing system operating on a nonpreemptive and first - come - first - ferved ( fcfs ) basis , whose dynamics are given by the well - known max - plus equation@xmath13where @xmath14 is the arrival time of task @xmath15 @xmath16 is the time when task @xmath17 completes service , and @xmath18 is its ( generally random ) service time .    note that although preemption is often easy and straightforward in computing systems , it is very costly and also technically hard in wireless transmissions .",
    "therefore , we assume a nonpreemptive model in this paper .",
    "transmission rate control typically occurs in the physical layer , and changing packet order may cause problems in the upper layers of the network stack .",
    "thus , we use a simple fcfs model to avoid packet out - of - sequence problems .",
    "it is also worth noting that even if the packet order is changeable , determining the optimal packet order is a separate problem .",
    "once the order of transmission is decided by a specific scheduling policy , our work can be used to minimize the energy expenditure for that specific order .    the service time",
    "@xmath18 is controlled by the transmission rate , which is determined by transmission power and coding scheme .",
    "however , it turns out that it is more convenient to use the reciprocal of the transmission rate as our control variable in the dts  problem .",
    "thus , we define @xmath19 to be the transmission time per bit and @xmath20 to be the energy cost per bit for task @xmath17 . clearly , @xmath20 is a function of @xmath19 . since the channel gain @xmath10 in ( [ received_signal ] ) is constant , @xmath21 is kept fixed during the transmission of task @xmath17 .",
    "we formulate the off - line dts problem as follows:@xmath22where @xmath23 and @xmath24 are the deadline and the number of bits of task @xmath17 respectively .    in realistic scenarios ,",
    "the maximum transmission power of a wireless system puts a constraint on each @xmath25 i.e. , @xmath26 where @xmath27 is the minimum amount of time used for transmitting one bit in task @xmath17 .",
    "for ease of analysis , we omitted this constraint in * p1 .",
    "* however , it is important to note that special handling is needed in real - world systems for the case that the optimal solution @xmath28 is below the minimum value @xmath27 .",
    "for example , the system may simply choose to drop the packet or transmit the packet using control @xmath29 we will discuss the problem that includes this constraint in section iii.c and section iv .    note",
    "that in the off - line setting , we consider @xmath30 @xmath23 and @xmath24 are known .",
    "the downlink scheduling problem formulated in gamnaprauyzainf02 is a special case of * p1 * above : in gamnaprauyzainf02 each task has the same deadline and number of bits , i.e. , @xmath31 for all @xmath17 .",
    "note that transmission rate constraints are omitted in * p1 * and we assume the transmission rate can vary continuously . in practical systems , the control can always be rounded to the nearest achievable value @xcite .",
    "problem * p1 * above is similar to the general class of problems studied in @xcite and @xcite without the constraints @xmath32 , where a decomposition algorithm termed the forward algorithm ( fa ) was derived .",
    "as shown in @xcite and cgc - forward - improved , instead of solving this complex nonlinear optimization problem , we can decompose the optimal sample path into a number of busy periods . a",
    "_ busy period _ ( bp ) is a contiguous set of tasks @xmath33 such that the following three conditions are satisfied : @xmath34 , @xmath35 , and @xmath36 , for every @xmath37 .",
    "notice that * p1 * above exploits static control ( @xmath38  kept fixed during the service time of task @xmath17 ) .",
    "this is straightforward in wireless transmission control since the transmission rate of a single packet / task is often fixed .",
    "in addition , it has been shown in @xcite that when the energy functions @xmath39  @xmath40  are strictly convex and monotonically decreasing in @xmath41 there is no benefit in applying dynamic control ( @xmath38  varies over time during the service time of task @xmath17 ) .",
    "it has also been shown in @xcite that when the energy functions are identical in * p1 * , its solution is obtained by an efficient algorithm ( critical task decomposition algorithm ) that decomposes the optimal sample path even further and does not require solving any convex optimization problem at all . in this paper , we will consider the much harder case that the energy functions are _ task - dependent_. when the energy functions are homogeneous , it is shown in @xcite that the exact form of the energy function does not matter in finding the optimal solutions .",
    "the main challenge of having heterogeneous energy functions is that these energy functions will be used to identify the optimal solutions , and this adds an extra layer of complexity .",
    "we shall still use the decomposition idea in @xcite , and we will use @xmath42 and @xmath43 , @xmath44 , to denote the optimal solution of * p1 * and the corresponding task departure times respectively .    typically , @xmath20 is determined by factors including the channel gain @xmath10 , transmission distance , signal to noise ratio , and so on .",
    "therefore , when a wireless node transmits to different neighbors at different time , different @xmath20 are involved .",
    "we begin with an assumption that will be made throughout our analysis .",
    "[ a2]in awgn channels , @xmath20 is nonnegative , strictly convex , monotonically decreasing , differentiable , and @xmath45 @xmath46 .",
    "assumption [ a2 ] is justified in @xcite and channel coding schemes supporting this assumption can be found in ton - energy - efficient_wireless . note that the result obtained in miaocas2004tn can be readily applied here : the unique optimal control to * p1 * is static .",
    "this means that we do not need to vary the transmission rate of task @xmath17 during its transmission time .",
    "the following two lemmas help us to decompose the optimal sample path of * p1*. their proofs are very similar to the proofs for lemmas 1 in @xcite , and only monotonicity of @xmath20 is required .",
    "we omit the proofs here .",
    "[ departureisdeadline]if @xmath47 then @xmath48    [ departurelargerthannextarrival]if @xmath49 then @xmath50    recalling the definition of a bp , lemmas [ departureisdeadline ] , departurelargerthannextarrival show that the bp optimal structure can be explicitly determined by the deadline - arrival relationship , i.e. , a sequence of contiguous packets @xmath51 is a bp if and only if the following is satisfied : @xmath52 @xmath53 @xmath49 for all @xmath54 after identifying each bp on the optimal sample path , problem * p1 * is reduced to solving a separate problem over each bp .",
    "we formulate the following optimization problem for bp @xmath55@xmath56    although @xmath57 is easier than * p1 * ( since it does not contain max - plus equations , which are nondifferentiable ) , it is still a hard convex optimization problem .",
    "naturally , we would like to solve @xmath57 efficiently .",
    "as we will show , this is indeed possible by further decomposing a bp @xmath58 through special tasks called `` critical tasks '' , which are defined as follows :    [ definition1]suppose both task @xmath17 and @xmath59 are within a bp @xmath60 on the optimal sample path of * p1*. if @xmath61 task @xmath62 is * critical*. if @xmath63 then task @xmath17 is * left - critical*. if @xmath64 then task @xmath17 is * right - critical*.    these critical tasks are special because the derivatives of the energy function change after these tasks are transmitted on the optimal sample path . therefore , identifying critical tasks is crucial in solving @xmath65 in fact , gamal et al .",
    "@xcite observed the existence of left - critical tasks .",
    "however , they did not make use of them in characterizing the optimal sample path . in order to accomplish this",
    ", we need to study the relationship between critical tasks and the structure of the optimal sample path .",
    "an auxiliary lemma will be introduced first .",
    "[ convex_transmission]if @xmath66 @xmath67 and @xmath68 then , @xmath69    lemma [ convex_transmission ] implies that under assumption [ a2 ] ( especially , the convexity assumption ) , it takes the least amount of energy to transmit two tasks in a given amount of time when the derivatives of the two energy functions have the least amount of difference .",
    "as we will see later , this auxiliary lemma will be used to establish other important results .",
    "next , we will discuss what exactly makes the critical tasks ( defined in definition [ definition1 ] ) special .",
    "[ critical_condition]suppose both task @xmath17 and @xmath59 are within a bp @xmath70 on the optimal sample path of * * p1**@xmath71 _ ( i ) _ if task @xmath17 is left - critical , then @xmath72 _ ( ii ) _ if task @xmath17 is right - critical , then @xmath73    this result shows that if a task is _ left - critical _ or _ right - critical _ on the optimal sample path , its optimal departure time is given by the next arrival time or its deadline respectively .",
    "the lemma implies that when @xmath74 task @xmath17 is neither _ left - critical _ nor _ right - critical_. in our next step , we will study the commonality among a block of consecutive non - critical tasks , which are in the middle of two adjacent critical tasks . by hoping so",
    ", we will have a better understanding of the structure of the optimal sample path , using which we will develop an efficient algorithm to solve @xmath65    [ corollary_rate_equal]for any two neighboring tasks @xmath17 and @xmath59 in a bp @xmath75 @xmath76 on the optimal sample path of * p1 * , if task @xmath77 is not a critical task , then @xmath78    this remark * *  * * is the direct result of definition [ definition1 ] . using this remark and lemma [ critical_condition ] ,  we can obtain the structure of bp @xmath51 on the optimal sample path of * p1 * as follows : @xmath51 is characterized by a sequence of tasks @xmath79 in which @xmath80 , @xmath81 contains all critical tasks in @xmath51 ( the optimal departure times of these critical tasks are given by lemma [ critical_condition ] ) , and task @xmath82",
    ". moreover , let @xmath83 , @xmath84 be adjacent tasks in @xmath85 .",
    "then , the segment of tasks @xmath86is operated at some @xmath19 such that the derivatives of their energy functions are all the same . to have a better understanding of this optimal structure ,",
    "[ fig_optimal_structure ] . in this example , task @xmath87 is left - critical and task @xmath88 is right - critical .",
    "their optimal departure times are @xmath89 and @xmath90 respectively .  in the set @xmath91 ,",
    "tasks @xmath92 and @xmath93 are examples of the segments defined above . invoking remark [ corollary_rate_equal ] , @xmath94",
    "are characterized by @xmath95 @xmath96 and @xmath97 @xmath98    _ , width=288,height=201 ]    in order to obtain our main result of this section and the explicit algorithm that solves @xmath99 we define next a system of nonlinear algebraic equations as follows with @xmath100 @xmath101 and unknown variables @xmath102@xmath103    its solution minimizes the total energy of transmitting tasks @xmath104 @xmath105 that do not contain critical tasks within time interval @xmath106 .",
    "note that when @xmath107 , the above nonlinear algebraic equations reduce to asingle linear equation @xmath108    in fig .",
    "[ fig_optimal_structure ] , we illustrated the structure of a bp on the optimal sample path of * p1*. in fact , given all critical tasks in the bp , the optimal solution can be obtained by solving a set of @xmath109 systems , one for each segment defined in ( [ segment_definition ] ) . for example , in fig .",
    "[ fig_optimal_structure ] , the optimal controls of tasks @xmath110 and @xmath93 can be obtained by solving @xmath111 and @xmath112 respectively .    at this point",
    ", we have established that solving problem @xmath57 boils down to identifying critical tasks on its optimal sample path .",
    "this relies on some additional properties of the optimal sample path . to obtain them",
    ", we need to first study the properties of @xmath113    we denote the solution to @xmath114 by @xmath115 .",
    "we define the common derivative in @xmath114 : @xmath116and note that @xmath117 is the derivative of the energy function of any task in @xmath118 .",
    "when @xmath119 we set @xmath120 to @xmath46 .",
    "later , when invoking the definition of critical tasks , we will use @xmath117 instead of the derivative of the energy function of a single task .",
    "now , we are ready to introduce the properties of @xmath114 in the next lemma .",
    "[ ne_properties]when @xmath121 @xmath114 has the following properties :    _ ( i ) _ it has a unique solution .    _",
    "( ii ) _ the common derivative @xmath122 is a monotonically increasing function of @xmath123 @xmath124 @xmath125    _ ( iii ) _ for any @xmath126 , @xmath127 define the partial sum @xmath128 @xmath129 then , @xmath130    _ ( iv ) _ for any @xmath126 , @xmath127 @xmath131 let @xmath132 @xmath133 @xmath134 if @xmath135 @xmath136 then @xmath137      based on the above results , we have characterized the special structure of the optimal sample path of * p1*. to summarize , lemmas departureisdeadline and [ departurelargerthannextarrival ] show that the bp structure of the optimal sample path can be explicitly determined by the deadline - arrival relationship .",
    "this transforms * p1 * into a set of simpler convex optimization problems with linear constraints .",
    "although the problem becomes easier to solve , it is still computationally hard for wireless devices without powerful processors and sufficient energy .",
    "note that in the homogeneous case , when all tasks have the same arrival time and deadline , they should be transmitted with the same derivatives of their cost functions . in this case",
    ", the optimal solution can be obtained by solving the nonlinear system @xmath113 with the presence of inhomogeneous real - time constraints , we showed in lemma [ critical_condition ] and remark [ corollary_rate_equal ] that a set of `` critical tasks '' play a key role to determine the optimal sample path , i.e. , the derivatives of the cost functions only change at these critical tasks .",
    "once they are determined , the original problem @xmath57 boils down to set of nonlinear algebraic equations .",
    "having obtained the properties of @xmath138 we will next develop an efficient algorithm to identify critical tasks .",
    "without loss of generality , we only prove the correctness of identifying the first critical task .",
    "other critical tasks can be identified iteratively .",
    "in addition , our proof will focus on right - critical tasks only , and we omit the proof for left - critical tasks , which is very similar .",
    "we will first give some definitions .",
    "for tasks @xmath139 within a bp @xmath140 ,",
    "i.e. , @xmath141 define:@xmath142@xmath143    recalling the definition of a bp , @xmath144 is defined as _ the optimal starting transmission time for task _ @xmath126 , which is within a bp starting with task @xmath145 .",
    "recalling lemmas [ departureisdeadline ] and departurelargerthannextarrival , @xmath146 is defined as _ the earliest possible transmission ending time for task _ @xmath17 , which is within a bp ending with task @xmath7 .",
    "note that in order to guarantee the real - time constraints , task @xmath17 must be done by its deadline @xmath147 we will use @xmath148 @xmath146 , and @xmath23 later to identify critical tasks .",
    "we further define : @xmath149    @xmath150    note that @xmath151 and @xmath152 are the tasks with the largest index in @xmath153 that satisfies the inequalities in ( [ ri ] ) and ( [ li ] ) respectively .",
    "it is clear that @xmath154 @xmath155    a special case of ( [ ri ] ) and ( [ li ] ) arises when @xmath126 is the first task of a bp @xmath51 , i.e. , @xmath156 then , according to the definitions above , we obtain the following inequalities , which will be used in our later results : @xmath157@xmath158    after introducing the above definitions and notations , we are now ready to introduce three important lemmas , which will be used to prove our main theorem .",
    "[ no_left_critical_tasks]let tasks @xmath51 form a bp on the optimal sample path of * p1 * and task @xmath159 be the first right - critical task in @xmath51 . if @xmath160 then there is no left - critical task in @xmath161    [ no_right_critical_tasks]let tasks @xmath51 form a bp on the optimal sample path of * p1*. consider task @xmath162 for @xmath17 ,",
    "@xmath163 if @xmath164 and @xmath165 for all @xmath166 , @xmath167 , then there is no right - critical task before task @xmath168    [ right_critical]let tasks @xmath51 form a bp on the optimal sample path of * p1*. if @xmath169 @xmath170 @xmath171 and @xmath172 for @xmath17 , @xmath173 , and for all @xmath166 , @xmath174 , then @xmath151 is right - critical .    before we introduce the main theorem , we would like to first summarize the above three lemmas .",
    "lemma [ no_left_critical_tasks ] provides the conditions under which there are no left - critical tasks before the first right - critical task @xmath175 in a bp .",
    "lemma [ no_right_critical_tasks ] provides the conditions under which there are no right - critical tasks before a given task @xmath151 in a bp .",
    "lemma [ right_critical ] provides the conditions under which task @xmath151 in a bp is right - critical .    with the help of the above auxiliary results , we are able to establish the following theorem , which can identify the first critical task in a bp on the optimal sample path of * p1 * :    [ bp_first_critical]let tasks @xmath58 form a bp on the optimal sample path of * p1*.    _ ( i ) _",
    "if@xmath176@xmath177@xmath178 for @xmath179 @xmath173 , and all @xmath166 , @xmath167 , then @xmath151 is the first critical task in @xmath58 , and it is right - critical .    _",
    "( ii ) _ if @xmath180 for @xmath17 , @xmath173 , and all @xmath166 , @xmath167 , then @xmath152 is the first critical task in @xmath58 , and it is left - critical .",
    "let us look at the first part of theorem [ bp_first_critical ] again .",
    "the first right - critical task of a bp on the optimal sample path of * p1 * can be correctly identified if we can find @xmath17 and @xmath151 which satisfy ( [ thm_1])-([thm_3 ] ) .",
    "in essence , ( [ thm_1 ] ) guarantees that there is no left - critical task before @xmath151 , ( [ thm_2 ] ) guarantees that there is no right - critical task before @xmath162 and ( [ thm_3 ] ) guarantees that @xmath181 is a right - critical task .",
    "a similar argument applies to the second part of the theorem .",
    "therefore , the conditions in theorem bp_first_critical are not only sufficient but also necessary for identifying the first critical task .    after obtaining the first critical task , either left - critical or right - critical",
    ", the rest of the bp , can be considered as a new bp .",
    "invoking lemma [ critical_condition ] , the new bp starts at either the first critical task s deadline ( if it is right - critical ) or the arrival time of the next task after the first critical task ( if it is left - critical ) . applying theorem [ bp_first_critical ] on the next bp ,",
    "we are able to identify its first critical task , which is the second critical task of the original bp .",
    "iteratively applying theorem [ bp_first_critical ] helps us find _ all _ critical tasks on the original optimal sample path .",
    "this leads directly to an efficient algorithm which can identify all critical tasks in bp @xmath51 on the optimal sample path of * p1*. meanwhile , as we have illustrated in fig .",
    "[ fig_optimal_structure ] , after identifying all critical tasks in bp @xmath51 on the optimal sample path of * p1 * , we can find all segments in @xmath51 with the same energy function derivatives .",
    "solving a @xmath109 problem for each segment and combining the solutions gives us the optimal solution to @xmath57 .",
    "the _ generalized critical task decomposition algorithm _",
    "( gctda ) which identifies critical tasks and solves @xmath57 is as follows :     [ cols= \" < \" , ]     table v :  rh control    in our simulation , all tasks have @xmath182 bytes and a fixed deadline , i.e. , @xmath183 the value of @xmath184 is set to @xmath185 in each figure below , we run the experiment 1000 times , and 500 tasks are executed in each run .",
    "the simulation is performed on a pc with a third generation intel core i5 - 3570k ivy bridge 3.4ghz quad - core desktop processor . to quantify the deviation of the rh cost from the optimal off - line cost",
    ", we define the cost difference as : ( rh cost - optimal off - line cost ) / optimal off - line cost .",
    "the figures below plot the average cost difference , worst - case cost difference , best - case cost difference , and average calculation time versus the rh window size @xmath186 in seconds .    .5     .5         .",
    "[ online_simulation_poisson ]        in fig .",
    "[ online_simulation_poisson ] , we consider poisson arrivals with @xmath187 . with rh window size @xmath186 varying from @xmath188 to @xmath189 , the cost differences are well below @xmath190 .",
    "when @xmath186  becomes larger , the cost differences are reduced ; the calculation time per task increases since at each decision point , the optimization problem involves more tasks .    in the next experiment shown in fig .",
    "[ online_simulation_bursty ] , we consider bursty arrivals with the burst interval uniformly distributed over @xmath191s$ ] , the number of tasks in each burst chosen from @xmath192 with equal probability , and the task intervals within the same burst uniformly distributed within @xmath193 $ ] .",
    "although the cost differences are just slightly higher than those in the poisson case , the average calculation time per task is now much larger . this is because in the bursty arrival case , a large number of backlogged tasks are involved at each decision point .",
    "our simulation results show that the proposed rh control mechanism can not only guarantee feasibility when the off - line problem is feasible , but also achieve near optimal solutions .",
    "in this paper , we first study the _ downlink transmission scheduling _ ( dts ) problem .",
    "a simpler version of this problem has been studied in gamnaprauyzainf02 and @xcite , where the moveright algorithm is proposed .",
    "the moveright algorithm is an iterative algorithm , and its rate of convergence is obtainable only when the cost function is not _ task - dependent_. compared with the work in ton - energy - efficient_wireless and @xcite , we deal with a much harder problem : _",
    "i ) _ our cost function is task - dependent and _ ii ) _ each task has its own arrival time and deadline .",
    "this is essentially a hard convex optimization problem with nondifferentiable constraints . by analyzing the special structure of the optimal sample path , an efficient algorithm , known as the generalized critical task decomposition  algorithm ( gctda ) ,",
    "is proposed to solve the problem .",
    "simulation results show that our algorithm is more appropriate for real - time applications than the moveright algorithm .",
    "finally , we show that our results can be used in on - line control to achieve near optimal solutions for poisson and bursty arrivals .",
    "* proof of lemma [ convex_transmission ] : * since @xmath20 is strictly convex and differentiable,@xmath194 @xmath195 because @xmath196 @xmath197 summing ( [ 1 ] ) and ( [ 2 ] ) above , and using ( [ 3 ] ) , we get : @xmath198 since @xmath199 , and by assumption , @xmath200 @xmath201    * proof of lemma [ critical_condition ] : * we only prove part _ ( i)_. part _ ( ii ) _ can be proved similarly .",
    "let @xmath202 be the optimal solution . by the definition of a left - critical task , we have @xmath203 because tasks @xmath17 and @xmath59 are within a single bp , @xmath204 suppose @xmath205 consider a feasible solution @xmath206 @xmath207 @xmath208 note that such a feasible solution always exists as long as @xmath209 and @xmath210 are arbitrarily close to @xmath211 and @xmath212 respectively . from lemma convex_transmission",
    ", we get : @xmath213 since @xmath214 @xmath215 @xmath216 using the above inequality , we get : @xmath217 which contradicts the assumption that @xmath218 is the optimal solution . therefore , @xmath72",
    "@xmath219    * proof of lemma [ ne_properties ] : * _ ( i ) _ since @xmath220 is strictly convex , continuous and differentiable , @xmath221 is also continuous .",
    "@xmath114 has a feasible solution , because @xmath222 is continuous and monotonically increasing , and @xmath19 can take any value in @xmath223 now , suppose there are two different solutions to @xmath224 and @xmath225 then , the common derivatives of these two solutions are different . without loss of generality ,",
    "we assume @xmath226 which means @xmath227 for any @xmath228 , @xmath229 by the convexity of @xmath230 , we obtain @xmath231 for any @xmath228 , @xmath232 and @xmath233 which is a contradiction .",
    "therefore , @xmath114 has a unique solution .",
    "_ ( ii ) _ let @xmath122 , @xmath234 be the common derivative of @xmath235 @xmath236 and @xmath237 respectively , @xmath238 let @xmath239 , @xmath240 be the solution to @xmath114 and @xmath241 respectively .",
    "we need to show @xmath242 @xmath243 suppose @xmath244 then , by definition , we get @xmath245 for any @xmath228 , @xmath246 by the convexity of @xmath247 , @xmath248 @xmath249 therefore , @xmath250 which contradicts our assumption that @xmath251 therefore , the common derivative of @xmath114 is a monotonically increasing function of @xmath252    _ ( iii ) _ it can be easily checked that @xmath253 @xmath254 and @xmath255 @xmath256 @xmath257 are the unique solutions to @xmath258 and @xmath259 respectively@xmath260 therefore , by the definition of @xmath114 and @xmath261 we have @xmath262 and @xmath263 , which implies @xmath264    _ ( iv ) _ let @xmath265 be the same as in _ ( iii)_. by assumption",
    ", @xmath266 @xmath267 this implies that @xmath268 otherwise @xmath269 from the monotonicity of @xmath270 shown in part _",
    "( ii ) _ , we get @xmath271 _ _  _ _",
    "@xmath272    * proof of lemma * [ no_left_critical_tasks ] * : * invoking lemma [ critical_condition ] , we get @xmath273 suppose there are left - critical tasks in @xmath274 and the closest left - critical task to @xmath175 is task @xmath275 , @xmath276 invoking lemma [ critical_condition ] , @xmath277 by assumption , @xmath278 because @xmath279 from ( [ ( li)_example])@xmath280 @xmath281 from ( [ 19 ] ) and ( [ 20 ] ) , the following must be true : @xmath282 when the equality holds in ( [ 24 ] ) , from _ ( iii ) _ of lemma ne_properties , we get @xmath283 when the inequality holds in ( [ 24 ] ) , from _",
    "( iv ) _ of lemma ne_properties , we obtain @xmath284 from ( [ 24 ] ) and the above inequality , we get @xmath285 combining ( [ 24.5 ] ) and ( [ 24.8 ] ) , we get @xmath286 since there is no right - critical or left - critical task in @xmath287 , invoking lemma [ corollary_rate_equal ] , we get @xmath288 from the definition of left - critical tasks , we get @xmath289 we consider two cases :      _ case 2 : _ @xmath292 .",
    "we will use a contradiction argument to show that there must exist a right - critical task @xmath228 , @xmath293 , i.e. , @xmath294 suppose such a task @xmath228 does not exist .",
    "i.e. , @xmath295 let @xmath296 inequality ( [ 21 ] ) is equivalent to the following : @xmath297 we will use a recursive proof next :    _ step 1 _ : letting @xmath298 in ( [ 22 ] ) , we have @xmath299 when the equality holds in ( [ 22.5 ] ) , invoking part _",
    "( iii ) _ of lemma [ ne_properties ] , we get @xmath300 when the inequality holds in ( [ 22.5 ] ) , invoking part _",
    "( iv ) _ of lemma [ ne_properties ] , we get @xmath301 combining ( [ 22.51 ] ) and ( [ 22.52 ] ) above , we have @xmath302    _ step 2 : _ letting @xmath303 in ( [ 22 ] ) , we have @xmath304 combining ( [ 22.7 ] ) and the above inequality , we obtain @xmath305 similarly to the derivation of ( [ 22.51 ] ) , ( [ 22.52 ] ) , and ( [ 22.7 ] ) , we can get @xmath306 repeating the process up to step @xmath307 we obtain @xmath308 since task @xmath275 is left - critical , from the definition of @xmath309 and lemma [ critical_condition ] , @xmath310 and the above inequality is equivalent to @xmath311 from ( [ 23 ] ) and ( [ 15 ] ) , we get @xmath312 invoking _",
    "( iv ) _ of lemma [ ne_properties ] , we obtain @xmath313 which contradicts ( [ 24 ] ) .",
    "therefore , there must exist a task @xmath228 , @xmath314 , s.t .",
    ", @xmath315 by definition [ definition1 ] , task @xmath228 is a right - critical task , which contradicts our assumption that task @xmath175 is the _ first _ right - critical task in @xmath55 therefore , there is no left - critical task before task @xmath316 @xmath272    * proof of lemma * [ no_right_critical_tasks ] : * * we use a contradiction argument to prove the lemma .",
    "suppose there are right - critical tasks before task @xmath151 and the one with smallest index is task @xmath175 , @xmath317 by assumption , @xmath318 for all @xmath166 , @xmath319 when @xmath159 , letting @xmath320 , we have @xmath321 then we can invoke lemma no_left_critical_tasks to establish that there is no left - critical task in @xmath274 .",
    "since there is also no right - critical task in @xmath322 from lemma [ corollary_rate_equal ] , @xmath323 since @xmath324 from ( [ ( ri)_example])@xmath280 we have @xmath325 then , from _ ( ii ) _ of lemma [ ne_properties ] , @xmath326 combining ( [ 7.5 ] ) and ( [ 7.51 ] ) , we get @xmath327 since @xmath175 is right - critical , from ( [ 7.57 ] ) and definition definition1 , @xmath328 from ( [ 7.56 ] ) and ( [ 7.59 ] ) , there must exist at least one left - critical task in @xmath329 otherwise , from the definition of a left - critical task in definition [ definition1 ] and a simple contradiction argument , we have @xmath330 using this result , ( [ 7.59 ] ) and a similar method as in obtaining ( [ 23 ] ) , we can get @xmath331 which contradicts ( [ 7.56 ] ) .",
    "let the left - critical task with smallest index be @xmath332 from lemma critical_condition , @xmath277 similar to obtaining @xmath333 above , we can get @xmath334 by assumption , @xmath335 and setting @xmath336 , we get @xmath337 since , from ( [ ( ri)_example ] ) , we have @xmath338 combining this and the above inequality , we obtain @xmath339 which contradicts ( [ 7.60 ] ) and completes the proof . @xmath340    * proof of lemma * [ right_critical ] : * * suppose task @xmath151 is not right - critical . by assumption ,",
    "@xmath341 because @xmath342 from _ ( ii ) _ of lemma ne_properties , @xmath343 from the two inequalities above , we obtain : @xmath344 invoking lemma [ no_right_critical_tasks ] , there is no right - critical task before task @xmath345 next , we use a contradiction argument to show that there must exist at least one right - critical task in @xmath346 .",
    "suppose there is no right - critical task in @xmath346 . because there is no right - critical task in @xmath347 , by definition [ definition1 ] ,",
    "we have @xmath348 let @xmath349 the above inequality can be rewritten as @xmath350 similar to the way of obtaining ( [ 23 ] ) in proving lemma no_left_critical_tasks , we obtain @xmath351 which contradicts ( [ 9 ] ) .",
    "we showed there must exist at least one right - critical task in @xmath352 from the initial contradiction assumption , @xmath151 is not right - critical .",
    "when @xmath353 the contradiction proof is completed .",
    "next , we consider the case when @xmath354    let @xmath175 be the closest right - critical task to @xmath151 in @xmath355 .",
    "since there is no right - critical task in @xmath356 by definition [ definition1 ] , @xmath357 let @xmath358 the above inequality can be rewritten as @xmath359 similar to the way of obtaining ( [ 23 ] ) in proving lemma no_left_critical_tasks , we obtain @xmath360 from the above inequality and ( [ 7 ] ) , we obtain @xmath361 which contradicts the definition of @xmath151 in ( [ ri])@xmath280 since @xmath362 therefore , task @xmath151 must be right - critical .",
    "@xmath340    * proof of theorem [ bp_first_critical ] : * we only prove part _",
    "( i)_. part _ ( ii ) _ can be proven similarly .",
    "the proof contains several steps : 1 ) using ( [ thm_1 ] ) , lemma [ no_left_critical_tasks ] , and setting @xmath363 we conclude that there is no left - critical task before @xmath364 2 ) using ( [ thm_1 ] ) , ( [ thm_2 ] ) , and lemma no_right_critical_tasks , we establish that there is no right - critical task before @xmath365 3 ) using ( [ thm_1 ] ) , ( [ thm_2 ] ) , ( [ thm_3 ] ) , and lemma [ right_critical ] , it follows that @xmath151 is a right - critical task ; and finally 4 ) combining the results established in the previous steps 1)-3 ) , we can obtain that @xmath151 is the first critical task in @xmath366 , and it is right - critical .",
    "@xmath272    * justifications for assumption * [ a_tao_derivative ] : we only justify part a ) .",
    "part b ) can be justified similarly . using shannon s theorem , @xmath38",
    "can be represented by the following equation : @xmath367 where @xmath0 is the bandwidth of the channel , @xmath18 is the _ task - dependent _ channel gain , @xmath368 is the transmission power , and @xmath369 is the power of the noise . since @xmath370 in typical scenarios@xmath280",
    "we can omit the @xmath371 above and represent @xmath368 in terms of @xmath372 @xmath373 we assume that the maximum transmission power of each task is constant @xmath374 , and it determines @xmath27 : @xmath375 because @xmath376 we use ( [ p_of_tau2 ] ) and ( [ p_max2 ] ) to get @xmath377 @xmath378        * proof of lemma * [ connectionlemma ] : let us assume that there exists tasks @xmath384 @xmath385 in a bp @xmath51 of the optimal sample path of @xmath57 such that @xmath386 from assumption [ a2 ] , @xmath387 let @xmath388 because @xmath389 we invoke assumption a_tao_derivative and get @xmath390 from assumption [ a2 ] and ( [ tai_min_assumption ] ) , we have @xmath391 combine ( [ w_1 ] ) and ( [ w_2 ] ) above , we have @xmath392 because @xmath393 , we invoke assumption a_tao_derivative and get @xmath394 similarly , we use @xmath395 and assumption a_tao_derivative to get @xmath396 combining ( [ optimal_greater_than_min ] ) , ( [ p-1_larger ] ) , and ( q+1_larger ) , we have @xmath397 then , we combine ( [ optimal_less_than_min ] ) and ( [ p_q_greater ] ) to get @xmath398 from the inequalities above , we have @xmath399 invoking lemma [ critical_condition ] , we have @xmath400 because @xmath401 we use ( [ tai_min_assumption ] ) and ( [ start_and_end ] ) to get : @xmath402 for any feasible solution of @xmath403 we must have @xmath404 which implies that there exists at least one @xmath405 , such that @xmath406 this completes the proof that @xmath407 is infeasible .",
    "@xmath272          case 1.2 :  we apply control @xmath415 obtained in either step 1 or step 2 of table v to task 1 . without loss of generality , let us assume that @xmath415 is obtained from step 1 of table v. in this case , @xmath416 are the solution to @xmath417 and @xmath418 for all @xmath17 .",
    "therefore , @xmath419 is also the solution to problem @xmath420 we have two subcases :      case 1.2.2 : we now consider the more interesting case that @xmath423 to compare the rh problem and the off - line problem , we now add subscripts to indicate the starting and ending times of each problem@xmath71 in particular , we use @xmath424 to show that the starting transmission time of @xmath425 is @xmath426 and the ending transmission time is @xmath427 similarly , we use @xmath428 to show that the starting transmission time of @xmath429 is @xmath426 and the ending transmission time is @xmath430 because @xmath431 and @xmath432 we must have @xmath433 looking at @xmath434 and @xmath435 they are exactly the same , except that the ending transmission time of @xmath436 is potentially at a later time . therefore , the optimal departure time of any task in @xmath437 must not be earlier than that in @xmath438 which means @xmath439        case 2.2 : we apply control @xmath445 obtained in either step 1 or step 2 of table v to task 1 . without loss of generality ,",
    "let us assume that @xmath445 is obtained from step 1 of table v. in this case , @xmath446 are the solution to @xmath447 and @xmath448 for all @xmath17 .",
    "therefore , @xmath449 is also the solution to problem @xmath450 we consider two subcases :    case 2.2.1 : when the planning horizon contains the end of a busy period on the optimal sample path , i.e. , there exists task @xmath451 s.t .",
    "@xmath452 we focus on tasks @xmath453 in this case , the controls of these tasks on the rh sample path are the solutions to problem @xmath454 , and the control of these tasks on the optimal sample path of * p2 * are the solutions to problem @xmath455 looking at @xmath454 and @xmath456 , they are identical , except that the starting transmission time of @xmath457 is potentially earlier than that of @xmath458 therefore , the optimal departure time of any task in @xmath459 must be no later than that in @xmath460 which means @xmath461    case 2.2.2 : @xmath462 in this case , the controls of tasks @xmath463 on the rh sample path are the solutions to problem @xmath464 , and the control of these tasks on the optimal sample path of * p2 * are the solutions to problem @xmath465 because @xmath466 and @xmath467 we must have @xmath468 looking at @xmath469 and @xmath470 they are exactly the same , except that both the starting and ending transmission times of @xmath471 are potentially sooner than those of @xmath472 .",
    "therefore , the optimal departure time of any task in @xmath471 must be no later than that in @xmath473 which means @xmath474 @xmath272      a.  e. gamal , c.  nair , b.  prabhakar , e.  uysal - biyikoglu , and s.  zahedi , `` energy - efficient scheduling of packet transmissions over wireless networks , '' in _ proceedings of ieee infocom _ , vol",
    ". 3 , 23 - 27 , new york city , usa , 2002 , pp . 17731782 .      b.  e. collins and r.  l. cruz , `` transmission policies for time varying channels with average delay constraints , '' in _ proceedings of allerton conference on communications , control , and computing _ , monticello , il , 1999 .",
    "x.  wang and z.  li , `` energy - efficient transmissions of bursty data packets with strict deadlines over time - varying wireless channels , '' _ ieee trans . on wireless communications _ ,",
    "25332543 , 2013 .    m.  i. poulakis , a.  d. panagopoulos , and p.  canstantinou , `` channel - aware opportunistic transmission scheduling for energy - efficient wireless links , '' _ ieee trans . on vehicular technology _ ,",
    "62 , pp . 192204 , 2013 .",
    "z.  zhou , p.  soldati , h.  zhang , and m.  johansson , `` energy - efficient deadline - constrained maximum reliability forwarding in lossy networks , '' _ ieee trans . on wireless communications _ ,",
    "11 , pp . 34743483 , 2012 .",
    "f.  shan , j.  luo , w.  wu , m.  li , and x.  shen , `` discrete rate scheduling for packets with individual deadlines in energy harvesting systems , '' _ ieee journal on selected areas in communications _ , vol .",
    "33 , pp . 438451 , 2015 .",
    "r.  r. kompella and a.  c. snoeren , `` practical lazy scheduling in sensor networks , '' in _ proceedings of the 1st international conference on embedded networked sensor systems _ ,",
    "los angeles , ca , 2003 , pp . 280291 .    y.  c. cho , c.  g. cassandras , and d.  l. pepyne , `` forward decomposition algorithms for optimal control of a class of hybrid systems , '' _ international journal of robust and nonlinear control _ , vol .",
    "11(5 ) , pp . 497513 , 2001 .",
    "j.  mao , c.  g. cassandras , and q.  zhao , `` optimal dynamic voltage scaling in energy - limited nonpreemptive systems with real - time constraints , '' _ ieee trans . on mobile computing _ ,",
    "vol .  6 , no .  6 , pp .",
    "678688 , 2007 .    c.  g. cassandras and r.  mookherjee , `` receding horizon optimal control for some stochastic hybrid systems , '' in _ proceedings of the 42nd ieee conference on decision and control _ , vol .  3 , dec .",
    "2003 , pp . 21622167 ."
  ],
  "abstract_text": [
    "<S> it has been shown that using appropriate channel coding schemes in wireless environments , transmission energy can be significantly reduced by controlling the packet transmission rate . </S>",
    "<S> this paper seeks optimal solutions for downlink transmission control problems , motivated by this observation and by the need to minimize energy consumption in real - time wireless networks . </S>",
    "<S> our problem formulation deals with a more general setting than the paper authored by gamal et . </S>",
    "<S> al . , in which the moveright  algorithm is proposed . </S>",
    "<S> the moveright algorithm is an iterative algorithm that converges to the optimal solution . </S>",
    "<S> we show that even under the more general setting , the optimal solution can be efficiently obtained through an approach decomposing the optimal sample path through certain critical tasks  which in turn can be efficiently identified . </S>",
    "<S> we include simulation results showing that our algorithm is significantly faster than the moveright algorithm . </S>",
    "<S> we also discuss how to utilize our results and receding horizon control to perform on - line transmission scheduling where future task information is unknown .    </S>",
    "<S> optimization , wireless networks , energy - efficiency , real - time systems , receding horizon control . </S>"
  ]
}
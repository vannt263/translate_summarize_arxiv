{
  "article_text": [
    "consider a source that would like to securely multicast a message to a set of receivers in the presence of passive adversaries .",
    "it is well known that over wireless networks , if public feedback is available , we can support higher secrecy rates than if it is not @xcite .",
    "we explore in this paper whether the same could be true over wired networks that are modeled as graphs .    while security against eavesdropping has been extensively examined ( in a number of interesting works ) in the network coding literature , the potential utility of feedback as such has not , as far as we know .",
    "seminal works such as @xcite have looked both at information theoretical bounds as well as code constructions for the case of edge adversaries ; works have also started examining the case of node adversaries @xcite . in all cases",
    "however the underlying network is modeled as a directed acyclic graph .",
    "yet feedback is readily available in wired networks , and could potentially help in secrecy .",
    "many times connections between sources and receivers are undirected or bi - directional ; even over directed graphs , we may have cycles , that offer a form of feedback between network nodes .",
    "the existence of such cycles could be put to good use to create for instance common randomness between intermediate network nodes , that a secrecy protocol could leverage to achieve higher rates .",
    "we here provide a number of examples to establish that this is indeed the case .",
    "we mainly consider node adversaries , that tap a specific network node and intercept all incoming messages , but also discuss edges adversaries .",
    "we focus on a special class of ( minimal ) combination networks , that is often used in the network coding literature , and the simplest possible case , of a single node adversary .",
    "we derive outer bounds as well as achievability schemes for the cases where feedback is ( and is not ) available .",
    "we design schemes that employ feedback , which can offer rates higher than outer bounds in the case where feedback is not available .",
    "these results point to the potential of using such feedback for network secrecy ; a topic of ongoing investigation .",
    "the paper is organized as follows .",
    "section  [ sec : setup ] introduces our notation and basic notions ; section  [ sec : smt_rate_results ] examines feedback over very simple abstracted examples .",
    "section  [ sec : without_feedback ] deals with inner and outer bounds for directed acyclic graphs , mainly developed for comparison purposes in this paper .",
    "finally , section  [ sec : with_feedback ] shows the benefits of feedback in undirected and bidirected graphs .",
    "we model a wired network as a graph @xmath0 with unit capacity edges .",
    "a single source node has a message @xmath1 to send to a set of receivers @xmath2 .",
    "we are interested in deriving outer bounds , as well as building @xmath3-round secure protocols with the following constraints : + @xmath4 _ round _ : each edge can be used at most once in a round .",
    "+ @xmath4 _ decodability _ : all receivers _ perfectly _ decode message @xmath1 with zero error probability .",
    "+ @xmath4 _ secrecy _ : @xmath5 where @xmath6 denotes the `` view '' of an adversary @xmath7 , i.e , the information available to tapped edges or nodes during the protocol .",
    "+ we say that such a protocol achieves + @xmath4 _ secrecy rate _ : @xmath8 . + we distinguish between two types of passive adversaries : + @xmath4 _ k - edge _ adversary : the adversary has access to an arbitrary set of @xmath9 edges .",
    "+ @xmath4 _ k - node _ adversary : the adversary has access to an arbitrary set of @xmath9 nodes . in this paper , we mainly focus on a @xmath10-node adversary . + we allow intermediate nodes to do operations over a finite field @xmath11 .",
    "we also assume that the network nodes share no prior common randomness and no side secure communication channel , they can only communicate through the network graph that is subject to eavesdropping .",
    "-ccn.,width=256,height=249 ]    [ [ canonical - combination - networks - ccns ] ] canonical combination networks ( ccns ) + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    our results in this paper are over ccns , that essentially are minimal combination networks , see @xcite .",
    "figure  [ fig : ccn_directed ] shows a _ directed _ @xmath12-ccn with @xmath13 , where @xmath14 is the number of coding points and @xmath15 the mincut to the receivers .",
    "it has a source @xmath16 , @xmath15 trivial coding nodes @xmath17 ( with indegree one ) , @xmath18 non - trivial coding nodes @xmath19 ( with indegree @xmath15 ) and @xmath20 receivers .",
    "each receiver is connected to @xmath15 nodes from the set @xmath21 .",
    "an _ undirected _ @xmath12-ccn can be obtained by replacing all the directed edges in the directed @xmath12-ccn by undirected edges .",
    "we will also consider a _ bidirected _ @xmath12-ccn which we create by adding an edge ( backward edge ) in the reverse direction for every edge ( forward edge ) in the directed @xmath12-ccn .",
    "note that the directed , undirected and bidirected networks all have mincut @xmath15 towards each receiver .",
    "we consider the simple networks depicted in figure  [ fig : smt_cases ] , where a single source @xmath16 wants to securely send information to a receiver @xmath22 ; we think of the edges in these networks as abstracting edge - disjoint ( and in the last case node - disjoint ) paths in larger networks .",
    "our goal is to build basic intuition on when feedback could be useful .",
    "for the first three examples we assume a @xmath9-edge adversary , while for the last a @xmath10-node adversary .",
    "[ [ example - in - figurefigsmt_casesa ] ] example in figure  [ fig : smt_cases](a ) + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the outer bound on the secrecy rate is @xmath23 and is achievable .",
    "this follows trivially from @xcite .",
    "[ [ example - in - figurefigsmt_casesb ] ] example in figure  [ fig : smt_cases](b ) + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    for this undirected graph the outer bound remains @xmath23 ( proved below ) , and its achievability follows from @xcite .",
    "we can show the outer bound as follows .",
    "we apply the `` crypto - inequality '' in @xcite which states that @xmath24 where @xmath1 is the source message , @xmath25 is the private randomness of the source , @xmath26 is the private randomness of the receiver and @xmath27 denotes the values exchanged between the source and receiver during any @xmath3-round protocol .",
    "simply put , ( [ crypto_inequality ] ) implies that @xmath28 and @xmath26 , which were independent to begin with , remain independent even after conditioning on all values exchanged during the protocol . for the graph in this example , @xmath29 where @xmath30 denotes for @xmath31 . ]",
    "values exchanged between the source and receiver during the @xmath3-round protocol , ( a ) follows from the decodability constraint , ( b ) follows from ( [ crypto_inequality ] ) and ( c ) follows from the secrecy constraint .",
    "[ [ example - in - figurefigsmt_casesc ] ] example in figure  [ fig : smt_cases](c ) + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    for this cyclic graph , if we have @xmath15 forward ( from @xmath16 to @xmath22 ) edges and @xmath32 backward edges ( from @xmath22 to @xmath16 ) , the outer bound becomes @xmath33 where the bound @xmath34 follows easily with similar steps as in ( [ eq : smt_undirected ] )",
    ". the outer bound is achievable as follows . to achieve it , when @xmath35 , we can send @xmath32 random packets ( keys ) from @xmath22 to @xmath16 using the backward edges , say @xmath36 .",
    "the source creates @xmath15 linear combinations of these @xmath37-packets ( using for instance an mds code ) , say @xmath38 such that the @xmath37-packets and the @xmath39-packets are in general position ( any selection of @xmath32 of these packets are linearly independent ) .",
    "the source uses the @xmath39-packets as one - time pads for the forward edges . with this construction , an adversary observing any @xmath9 edges will not be able to retrieve information ( proved below ) and thus secrecy rate @xmath15 is achievable . for proof of secrecy , consider a @xmath9-edge adversary who taps @xmath40 backward edges and @xmath41 forward edges . from @xmath40",
    "backward edges it infers @xmath40 @xmath37-packets ( say @xmath42 ) . on the forward edges",
    ", the adversary observes @xmath43 ( after accounting for inferred packets @xmath42 ) as shown below , @xmath44 where @xmath45 are information symbols ( on @xmath41 forward edges ) and matrix @xmath46 is full rank ( by construction of @xmath39-packets ) .",
    "now , @xmath47 since @xmath37-packets are uniformly distributed , @xmath46 is full rank and @xmath35 .",
    "we can easily extend this scheme in the case where @xmath48 , by combining the previous scheme with the scheme in @xcite : use again the backward edges to convey random packets to the source , have the source itself generate @xmath49 random packets , and combine these to create one - time pads to encode @xmath50 information messages to send to the receiver using secure network coding ( for more details see @xcite ) .    [ [ example - in - figurefigsmt_casesd ] ] example in figure  [ fig : smt_cases](d ) + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    for this bidirectional graph with two intermediate nodes @xmath51 and @xmath52 , we can achieve secrecy rate @xmath53 even if there is a @xmath10-node passive adversary .",
    "to do so , the receiver @xmath22 can send keys @xmath54 and @xmath55 to the source @xmath16 . since @xmath51 and",
    "@xmath52 each observe only one of the keys , @xmath16 can use @xmath56 as a one - time pad for both the forward paths .",
    "if we now have a network with @xmath15 overlapping forward and backward paths through intermediate nodes @xmath57 ( each forward path has a node - overlap with only one backward path ) , secrecy rate @xmath15 is again achievable against a @xmath10-node adversary using the same approach ( this will be a technique we will use for @xmath12-bidirected ccn considered in a later section ) .    [ [ intuition ] ] * intuition * + + + + + + + + + + +    these simple examples give a very intuitive message : if we can use feedback ( edges in backward directions , in cyclic graphs ) without affecting the mincut , then this can help to achieve higher secrecy rates . essentially , we can use the feedback to create common randomness . in section  [ sec : with_feedback ] , we show that this is indeed the case in more complex networks with multiple receivers as well , where however more elaborate schemes will be needed .",
    "in this section , we derive outer bounds and achievability schemes for directed ccns where a single node is compromised and acts as a passive adversary .",
    "this is a case without feedback , which we mainly develop for comparison purposes , but we believe that these results are of independent interest . we give first an outer bound and then achievability schemes that match the outer bound in some cases .",
    "[ thm : outer_bound_directed ] consider a directed @xmath12-ccn with as in the trivial case of @xmath58 the outer bound against a @xmath10-node adversary is @xmath59 and is achievable using secure network coding @xcite . ] @xmath60 .",
    "an outer bound on the secrecy rate against a @xmath10-node adversary is @xmath61    consider a directed @xmath12-ccn with @xmath62 .",
    "the high level idea of the proof will be to derive `` top '' and `` lower '' layer constraints for this layered network and then combine the two using markovity relationships .",
    "for an @xmath3-round protocol and @xmath63 , let @xmath64 , @xmath65 and @xmath66 denote the values sent on edge @xmath67 , @xmath68 and @xmath69 respectively .",
    "for @xmath70 , let @xmath71 denote the values sent on edge @xmath72 .",
    "figure  [ fig : butterfly_proof ] illustrates the use of notation for a directed ( 3,2)-ccn .",
    "-ccn illustrating notation used for proof of theorem  [ thm : outer_bound_directed].,width=201,height=230 ]     + _ top layer constraints : _",
    "@xmath73 where ( a ) and ( b ) follow from decodability and secrecy constraints . in general , for any @xmath74 we have the following result , @xmath75 where @xmath76 denotes the set @xmath77 .",
    "_ markovity : _",
    "@xmath78 where ( a ) follows from markov chains @xmath79 and @xmath80 .",
    "similarly , @xmath81 .",
    "+ _ lower layer constraints : _",
    "@xmath82 where ( a ) follows from secrecy constraint at node @xmath83 , ( b ) follows from decodability constraint for the receiver not connected to node @xmath84 , ( c ) follows from markov chains as shown in ( [ eq : markov ] ) and ( d ) follows from the top layer constraints ( [ eq : top_layer ] ) .",
    "this completes the proof for @xmath62 . the same outer bound holds for",
    "any directed @xmath12-ccn with @xmath85 due to the presence of receivers used in the proof for @xmath62 .",
    "[ lemma : inner_tight_directed ] [ sec : inner_bound_directed ] consider a directed @xmath12-ccn with a @xmath10-node adversary .",
    "there exist achievable schemes that are tight for the cases @xmath86 , @xmath87 and @xmath88 .",
    "see appendix .    for a directed @xmath89-ccn",
    ", there exists an alternative optimal scheme ( parts of which we will use in our feedback schemes in section  [ sec : with_feedback ] ) .",
    "it achieves secrecy rate @xmath90 in a directed @xmath12-ccn with @xmath10-node adversary .",
    "described below , this scheme uses additional keys which do not reach the receivers and are _ cancelled _ at intermediate nodes .",
    "[ [ key - set - cancellation - ksc - scheme ] ] key set cancellation ( ksc ) scheme + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    this is a @xmath53-round scheme .    1 .   in the first round",
    ", the source @xmath16 sends keys @xmath91 to nodes @xmath92 respectively and @xmath93 to @xmath94 .",
    "2 .   in the second round , a secure network code @xcite for @xmath10-edge adversary",
    "is used with a slight modification ( described below ) using keys from the first round .",
    "this delivers @xmath59 symbols to all receivers in the second round and achieves secrecy rate @xmath90 over @xmath53 rounds .",
    "the modification mentioned in the second round is as follows .",
    "consider a secure network code @xcite for a directed @xmath12-ccn with @xmath10-edge adversary .",
    "for this specific code , @xmath95 let @xmath96 and @xmath97 be the values sent on edges @xmath98 and @xmath99 respectively . in the second round of ksc scheme , we use this code with the modification that @xmath95 , @xmath100 sends @xmath101 to @xmath102 ( non - trivial coding node ) instead of @xmath96 .",
    "node @xmath102 sums up all the values received from @xmath103 ( shown in figure  [ fig : ksc_round_2 ] ) and sends @xmath104 to @xmath105 .",
    "hence the _ key set _ @xmath106 accumulated in the first round",
    "is cancelled at all non - trivial coding nodes .",
    "the key set ensures secrecy at every non - trivial coding node and the underlying secure network code delivers @xmath59 symbols to all receivers .",
    "in this section , we show that use of feedback can improve secrecy rates for undirected and bidirected graphs .",
    "we prove in particular the results for undirected and bidirected ccns that are summarized in table  [ table : summary ] .",
    "c c c + @xmath12-ccn & multicast & multicast + type & inner & outer + & bound & bound + directed .",
    "] & @xmath107 & @xmath108 + undirected & @xmath109 & @xmath59 + bidirected & @xmath59 & @xmath15 + [ 1ex ]    [ table : summary ]      an undirected ccn allows the usage of all edges in both the directions . but",
    "it is still subject to the constraint that during each round , we can use each edge only once ( in any direction that we intend to ) .",
    "consider an undirected @xmath12-ccn with a @xmath10-node adversary .",
    "an outer bound for secrecy rate is @xmath59 .",
    "moreover , when , secrecy rate @xmath59 is achievable using secure network coding @xcite . ]",
    "@xmath60 , there exists a scheme that achieves secrecy rate @xmath110 .    for the above scheme , as @xmath111 , secrecy rate @xmath112 .",
    "this shows asymptotic optimality of the scheme . additionally , when @xmath113 , the scheme achieves a secrecy rate strictly better than the outer bound @xmath108 for directed @xmath12-ccn .",
    "thus , feedback improves secrecy rates as we transition from directed ccns to undirected ccns .",
    "the outer bound proof is similar to ( [ eq : smt_undirected ] ) and follows from a mincut comprising of @xmath15 edges between a receiver and nodes in @xmath114 .",
    "we now show a simple scheme for an undirected @xmath12-ccn which achieves secrecy rate @xmath110 .",
    "the scheme operates in two phases : uplink and downlink .",
    "it begins with a single round uplink phase where keys are collected at @xmath103 as follows .",
    "* source @xmath16 sends keys @xmath115 to @xmath92 respectively and @xmath116 to @xmath117 .",
    "this constitutes key set @xmath118 . *",
    "the receiver connected to @xmath119 sends keys @xmath120 to @xmath92 respectively and @xmath121 to @xmath117 .",
    "this constitutes key set @xmath122 . * for @xmath123",
    ", @xmath124 sends keys @xmath125 to @xmath92 respectively and @xmath126 to @xmath117 .",
    "this constitutes key set @xmath127 .    the uplink phase is followed by a downlink phase comprising of @xmath128 downlink rounds .",
    "each round of the downlink phase is similar to the second round of ksc scheme .",
    "the key sets collected at @xmath103 in the uplink phase are used as part of one - time pad and cancelled at non - trivial coding nodes ( before they reach the receivers ) in the following manner .    1 .",
    "key set @xmath118 is cancelled at all non - trivial coding nodes in the first downlink round .",
    "key set @xmath122 is cancelled at all non - trivial coding nodes in the second downlink round .",
    "3 .   for the next @xmath129 downlink rounds , a key set from @xmath130",
    "is cancelled at non - trivial coding node @xmath102",
    ".    each downlink round delivers @xmath59 symbols to all receivers . a single round uplink phase is followed by @xmath131 downlink rounds and hence , the secrecy rate is @xmath110 .",
    "we now consider a bidirected ccn , which we create by adding for every forward edge , one parallel edge ( backward edge ) of the opposite directionality .",
    "note that this does not increase the mincut to the receivers .",
    "consider a bidirected @xmath12-ccn with a 1-node adversary .",
    "when @xmath60 , there exists a scheme which achieves secrecy rate @xmath59 .",
    "a single round scheme achieves secrecy rate @xmath59 as follows .",
    "the receiver connected to @xmath119 first sends keys @xmath132 to @xmath92 and @xmath133 to @xmath94 .",
    "these keys are then cancelled at non - trivial coding nodes ( similar to the second round of ksc scheme ) and @xmath59 symbols delivered to each receiver in the same round .    up to now",
    "we have focused on a @xmath10-node adversary .",
    "interestingly , feedback using backward edges can help in the case of edge - adversaries as well .",
    "for bidirected @xmath12-ccn , secrecy rate @xmath15 is achievable against a @xmath10-edge adversary ( taps only one directed edge ) .    for every pair of nodes sharing an edge",
    ", a key can be sent using the parallel backward edge .",
    "this key can be used as a one - time pad to secure the network code on the forward edge .",
    "this work was supported in part by nsf award 1136174 , muri award afosr fa9550 - 09 - 064 , erc project nowire erc-2009-stg-240317 and a ramanujan fellowship from the dst ( india )",
    ".    1 u. m. maurer , `` secret key agreement by public discussion from common information , '' ieee transactions on information theory 39(3 ) , pp .",
    "733 - 742 , 1993 .",
    "n. cai and r. w. yeung , `` secure network coding on a wiretap network , '' ieee transactions on information theory 57(1 ) , pp .",
    "424- 435 , 2011 .",
    "r. koetter and f. kschischang , `` coding for errors and erasures in random network coding , '' ieee transactions on information theory 54(8 ) , pp .",
    "3579 - 3591 , aug .",
    "y. buyukalp , g. maatouk , v. prabhakaran and c. fragouli , `` untrusting network coding , '' in proc .",
    "ieee int . symp . on network coding ( netcod ) , pp .",
    "79 - 84 , 2012 .",
    "o. kosut , l. tong , and d. tse , `` polytope codes against adversaries in networks , '' in proc .",
    "inf . theory ( isit ) , pp .",
    "2423 - 2427 , 2010 . c. fragouli and e. soljanin , `` network coding fundamentals , '' foundations and trends in networking , 2007",
    ". k. jain , v. v. vazirani and g. yuval , `` on the capacity of multiple unicast sessions in undirected graphs , '' ieee transactions on information theory 52(6 ) , pp .",
    "2805 - 2809 , 2006",
    ". k. jain , `` security based on network topology against the wiretapping attack , '' ieee wireless communications , pp .",
    "68 - 71 , feb 2004 .",
    "y. wang and y. desmedt , `` perfectly secure message transmission revisited , '' ieee transactions on information theory 54(6 ) , pp . 2582 - 2595 , 2008 .",
    "t. cui , t. ho and j. kliewer , `` on secure network coding with nonuniform or restricted wiretap sets , '' ieee transactions on information theory 59(1 ) , pp .",
    "166 - 176 , 2013 . c. chekuri ,",
    "c. fragouli and e. soljanin , `` on average throughput and alphabet size in network coding , '' ieee transactions on information theory 52(6 ) , pp . 2410 - 2424 , 2006 .",
    "the scheme is based on the following observation .",
    "if we reduce the indegree of non - trivial coding nodes to @xmath10 , a secure network code @xcite against @xmath10-edge adversary is sufficient to ensure secrecy . but reducing the indegree of non - trivial coding nodes also reduces the mincut to some receivers , hence the secrecy rate . our approach is to have a multiple round routing strategy , using a different subset of edges in each round . we still restrict the indegree of non - trivial coding nodes to @xmath10 in each round , but ensure that the mincut to each receiver averaged over multiple rounds is sufficient to achieve the desired secrecy rate .",
    "this has connection to the work in @xcite on average throughput maximization ( without any secrecy constraints ) using tree packing strategies .",
    "the following example illustrates our approach for a directed @xmath134-ccn .",
    "[ ex : routing ] consider a directed @xmath134-ccn with @xmath135 receivers as shown in figure  [ fig : routing_4_3 ] .",
    "let @xmath136 be the @xmath137 symbol codeword derived from a @xmath135 symbol message @xmath1 using a rate @xmath138 erasure code .",
    "let @xmath139 be keys generated by source @xmath16 .",
    "we now describe a @xmath140-round scheme that achieves secrecy rate @xmath141 ( optimal for directed @xmath134-ccn ) . in the first round",
    ", @xmath16 sends @xmath142 , @xmath143 and @xmath144 to @xmath145,@xmath146 and @xmath147 respectively can be decoded from any two combinations , while @xmath148 can be decoded using all three combinations . ] .",
    "nodes @xmath149 and @xmath147 send these values to @xmath150 and @xmath151 via @xmath152 and @xmath153 . for @xmath154",
    ", @xmath155 is the only incoming edge used in this round and @xmath142 is sent from @xmath145 to @xmath156 via this edge .",
    "each @xmath84 now sends the received values to the receivers connected to it . at the end of this round , receivers @xmath157 and @xmath158",
    "decode @xmath159 .",
    "the other two receivers decode only @xmath160 . in the second and third round ,",
    "@xmath161 are replaced with @xmath162 and @xmath163 respectively with the following change in routing strategy for @xmath154 . in the second round",
    ", @xmath164 is the only incoming edge used for @xmath154 and @xmath165 is sent along this edge .",
    "hence , in the second round receivers @xmath157 and @xmath166 decode @xmath167 and the other two receivers decode @xmath168 .",
    "in the third round , @xmath169 is the only incoming edge used for @xmath154 and @xmath170 is sent along this edge . in this round , receivers @xmath157 and @xmath171",
    "decode @xmath172 and the other two receivers decode @xmath173 . at the end of @xmath140 rounds ,",
    "all receivers decode at least @xmath135 codeword symbols and hence decode the message .",
    "in example  [ ex : routing ] , the values sent ( over @xmath140 rounds ) on edges @xmath175 for @xmath70 can be listed in terms of @xmath176 ( defined in proof of theorem  [ thm : outer_bound_directed ] , see figure  [ fig : butterfly_proof ] ) @xmath177 since the linear combinations used in each round are similar , we denote @xmath178 in round @xmath179 by _ routing symbols _",
    "@xmath180 respectively . in this notation , @xmath181 where @xmath182 is a _ routing matrix",
    "_ listing the routing symbols sent on edges @xmath175 as defined above . with this notation , we are now ready to compactly describe our optimal scheme for @xmath183 .",
    "we simply extend @xmath184 to @xmath185 by adding two columns as shown below .",
    "@xmath186 substituting back the values of @xmath180 for every round , one can easily check that every receiver ( there are @xmath187 receivers ) decodes at least @xmath135 codeword symbols over @xmath140 rounds and hence the secrecy rate is @xmath141 ( optimal ) .",
    "let @xmath189 ( if @xmath14 is odd , simply consider a directed @xmath190-ccn and proceed - ccn includes the receivers in a directed @xmath12-ccn ; hence it is sufficient to show a scheme for ( m+1,h ) . ] ) .",
    "let @xmath191 be the @xmath3 symbol codeword derived from a @xmath192 symbol message using a rate @xmath193 erasure code .",
    "in addition , the source generates keys @xmath194 .",
    "we will now describe an @xmath3-round scheme which achieves secrecy rate @xmath193 . in round @xmath179 ,",
    "we denote @xmath195 , @xmath196 by routing symbols @xmath197 respectively . in round",
    "@xmath179 , the source sends @xmath197 to @xmath145,@xmath146 respectively and these get forwarded to @xmath198 , @xmath199 .",
    "this fixes the first two columns ( corresponding to @xmath200 and @xmath201 ) of routing matrix @xmath202 as the all @xmath203 column vector and all @xmath204 column vector respectively .",
    "the routing symbols sent on @xmath205 over @xmath3 rounds are derived from a hadamard code as follows .",
    "consider @xmath206 hadamard codewords ( in terms of routing symbols @xmath197 ) of length @xmath3 such that the all @xmath203 and all @xmath204 codewords are present in this collection ( this can be easily done using sylvester s construction ) .",
    "we assign these @xmath206 codewords as the @xmath206 columns of @xmath202 such that the all @xmath203 codeword is the first column and the all @xmath204 codeword is the second column .",
    "the @xmath3-round schemes follows this routing matrix ( the values sent on edges @xmath175 ) and at the end of every round , @xmath207 forward the received values to all the receivers connected to them . since the hamming distance between any two column vectors in @xmath202 is at least @xmath192 , each receiver receives both @xmath197 ( _ i.e. _ , @xmath195 , @xmath196 ) in at least @xmath192 rounds .",
    "hence it can decode at least @xmath192 codeword symbols and thus the message .",
    "the scheme in example  [ ex : routing ] can be extended for the case @xmath208 as follows .",
    "let @xmath209 be the @xmath210 symbol codeword derived from a @xmath211 symbol message using a rate @xmath212 erasure code .",
    "the source computes @xmath213 from @xmath214 using an invertible linear transformation defined below .",
    "@xmath215 in addition to the above steps , the source generates keys @xmath216 .",
    "we now describe an @xmath15-round scheme that achieves secrecy rate @xmath108 . in round",
    "@xmath179 , for @xmath217 , @xmath218 is sent from @xmath16 to @xmath219 and for @xmath220 , @xmath221 is sent to @xmath222 . for @xmath223",
    ", @xmath224 is sent to @xmath100 .",
    "these values are forwarded by @xmath225 to @xmath226 respectively via @xmath227 . also , @xmath68 is the only incoming edge used for @xmath83 in round @xmath179 and using this edge @xmath224 is forwarded to @xmath228 via @xmath83 . at the end of every round , @xmath207",
    "forward the received values to all the receivers connected to them . in round @xmath179",
    ", only two receivers can decode @xmath59 codeword symbols , i.e. , @xmath229 ( they are the receivers connected to @xmath230 and @xmath231 )",
    ". the remaining @xmath59 receivers can decode only @xmath232 codeword symbols from @xmath229 .",
    "hence over @xmath15 rounds , all receivers can decode at least @xmath233 codeword symbols and achieve secrecy rate @xmath108 ."
  ],
  "abstract_text": [
    "<S> we study the problem of secure message multicasting over graphs in the presence of a passive ( node ) adversary who tries to eavesdrop in the network . </S>",
    "<S> we show that use of feedback , facilitated through the existence of cycles or undirected edges , enables higher rates than possible in directed acyclic graphs of the same mincut . </S>",
    "<S> we demonstrate this using code constructions for canonical combination networks ( ccns ) . </S>",
    "<S> we also provide general outer bounds as well as schemes for node adversaries over ccns . </S>"
  ]
}
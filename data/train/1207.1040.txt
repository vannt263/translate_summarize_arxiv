{
  "article_text": [
    "for micro gas flows , the boltzmann equation rather than the navier - stokes equation should be used due to high knudsen number @xmath0 where @xmath1 is the molecular mean free path and @xmath2 is the characteristic length of the flow problem .",
    "in addition , the influence of boundary condition to the solutions becomes dominant because the frequency of molecular reflection on the solid wall , compared to the frequency of intermolecular collision , increases with @xmath3 .",
    "unfortunately , the characteristic velocity of micro gas flows is usually much smaller than the molecular random thermal velocity and sometimes the variations of quantities of interest inside the flow domain are very small , which makes the traditional dsmc method @xcite time - consuming although it is successful in the case of high velocity .",
    "the dsbgk method @xcite was proposed to improve the efficiency in simulating micro gas flows and verified in the lid - driven , couette and channel flow problems @xcite-@xcite by comparison with the dsmc method as criteria .",
    "theoretically , it can be proved , as will be discussed later , that the solution of the dsbgk method converges to the steady - state solution of the bgk equation @xcite .",
    "the application of the cll reflection model @xcite-@xcite in the dsbgk method is possible and few tentative results were compared with the dsmc results in @xcite .",
    "although based on the bgk equation obtained by using a simple model to replace the intermolecular collision integral of the boltzmann equation , the dsbgk method agrees well with the dsmc method at @xmath4 and @xmath5 in the lid - driven problem @xcite .",
    "this is because the molecular reflection on wall , the dominant effect in micro gas flows , is modeled by the dsbgk method in the same way as by the dsmc method .",
    "theoretically , the error due to simplification to the intermolecular collision process vanishes and the solution depends only on the boundary condition when @xmath6 .",
    "the dsbgk method achieves high efficiency by avoiding generating random fractions in the intermolecular collision process and using the increments ( instead of transient values ) of molecular variables to update cell s macro quantities , which significantly reduces the statistical noise due to discontinuous events of simulated molecules moving into and out of cells .",
    "consequently , the total computational time used by the dsbgk simulation almost not increase with the decrease of magnitude of the deviation from equilibrium state and sometimes the average process can be avoided as the transient cell s variables contain few stochastic errors @xcite . in addition to its high - efficiency , the dsbgk method has many numerical advantages including simplicity , stability , convenience for complex configuration and for parallel computation because the basic algorithmic structure of the dsmc method is employed .",
    "the comparison between the dsmc and dsbgk algorithms is given here .",
    "theoretical analysis is provided to show the convergence of the dsbgk method to the bgk equation .",
    "then , the results of several benchmark problems , including the couette flow , channel flow , lid - driven flow and thermal transpiration problem , are listed together to show the agreement of the dsbgk method with the dsmc method .",
    "the benchmark problems are divided into closed and open problems to discuss the efficiency and stability of the dsbgk simulation separately . in closed problems ,",
    "the long - period fluctuation is observed in the number density distribution of dsbgk simulations .",
    "many simulated molecules are employed to reduce the magnitude of fluctuation and improve the numerical stability .",
    "consequently , the memory usage is increased remarkably but the efficiency is still very high as shown in the closed lid - driven problem @xcite . in open problems ,",
    "the boundary condition with fixed number density eliminates the unphysical fluctuation and the dsbgk simulation remains stable even when using about @xmath7 simulated molecules per cell , which significantly reduces the memory usage and so improves the applicability in open problems of large scale .",
    "the dsmc method @xcite , which is successful in simulating rarefied gas flows at high velocity , was proposed based on physical understanding with appropriate theoretical analysis .",
    "in fact , the dsmc algorithm in simple cases can be understood by using the importance sampling scheme to solve the boltzmann equation @xcite-@xcite , which is discussed here .",
    "the rarefied gas flow is described by the boltzmann equation .",
    "we consider gas flows of single component in the absence of external body force .",
    "if the molecule is modeled by a hard sphere with fixed diameter @xmath8 , the boltzmann equation is : @xmath9 @xmath10 is the unknown probability distribution function , @xmath11 is the time , @xmath12 is the spatial coordinate and @xmath13 is the molecular velocity , @xmath14 and @xmath15 , the delta function @xmath16 , @xmath17 , @xmath18 , @xmath19 , @xmath20 , the post - collision velocities @xmath21 are determined by the pre - collision velocities @xmath22 and the solid angle @xmath23 , @xmath24 where @xmath25 $ ] is the polar angle ( the deflection angle in intermolecular collisions ) and @xmath26 $ ] is the azimuthal angle of the spherical coordinate system .",
    "the total collision section is @xmath27 .",
    "the boundary condition will be discussed later in section [ ss : boudary condition ] together with the dsbgk method . after getting the solution of @xmath28 , the number density @xmath29 , flow velocity @xmath30 and temperature @xmath31",
    "are computed @xmath32 where @xmath33 is the molecular mass and @xmath34 is the boltzmann constant .",
    "higher order momentums , like shear stress tensor and heat flux , are computed similarly .    in the dsmc simulation @xcite , each simulated molecule @xmath35 carries two molecular variables : position @xmath36 and velocity @xmath37 . in order to reduce the memory usage , the number of simulated molecules is much smaller than that of the real molecules contained in the flow domain and so we assume that each simulated molecule represents @xmath38 number of real molecules . note that @xmath38 is a constant and very large to make each cell usually containing about 20 simulated molecules .",
    "the molecular position and velocity are selected at the initial state and updated during the simulation process appropriately such that the set of all simulated molecules @xmath39_{\\mathrm{all}}$ ] represents the probability distribution function @xmath40 and its evolution with time , which means that the simulated molecules are distributed according to @xmath40 in the phase space @xmath41 at any moment @xmath11 .",
    "the flow domain is divided into many cells and @xmath42 are estimated by summation inside each cell @xmath43 using @xmath44 to replace @xmath45 in eq .",
    "( [ eq : nut ] ) as @xmath46 is the number of real molecules in the velocity space element @xmath47 and the physical space element @xmath48 : @xmath49}{\\dfrac{3k_\\mathrm{b}}{2}\\sum n } \\\\      \\end{cases}\\ ] ] where @xmath50 is the volume of cell @xmath43 , @xmath51 is the summation over those simulated molecules located inside cell @xmath43 at any particular moment @xmath11 .",
    "for example , @xmath52 is the product of @xmath38 and the number of simulated molecules and so equal to the number of real molecules inside cell @xmath43 .    during each time step @xmath53 , we split @xmath54 into @xmath55 due to free molecular motions and @xmath56 due to intermolecular collisions . as @xmath39_{\\mathrm{all}}$ ] is a representative sample of @xmath40 , @xmath57 is represented by updating @xmath36 when simulated molecules move uniformly and in a straight line .    for @xmath56 , we need to calculate the increment @xmath58 of @xmath40 after each @xmath53 at all spatial points @xmath12 and all velocity points @xmath13 inside the whole phase space . in order to make @xmath58 tractable ,",
    "we assume that the coordinates @xmath36 of those simulated molecules inside the same cell @xmath43 are the same ( notated by @xmath59 ) . then",
    ", we only need to compute @xmath58 at those discrete spatial points @xmath59 of each cell ( as @xmath60 and so @xmath61 at other spatial points ) but still at all velocity points .",
    "the distribution function at @xmath59 is @xmath62 which is consistent with eqs . - as @xmath63 ( again , @xmath51 is over simulated molecules inside cell @xmath43 ) . at the end of each @xmath53 and for each cell @xmath43",
    ", we compute @xmath64 according to the boltzmann equation : @xmath65 where @xmath66 and @xmath67 , @xmath68 is the distribution function of @xmath69 at @xmath59 .",
    "note that the value of @xmath70 has upper bound here as @xmath71 is nonzero only at finitely many discrete velocity points @xmath37 .",
    "although the value of @xmath72 can be any constant in eq . , it should be updated appropriately by the existing values @xmath73 in all cells during each @xmath53 in the dsmc simulation such that the ratio @xmath74 is always ( _ note _ : practically will be almost always ) smaller than @xmath75 which is required by the following acceptance - rejection scheme .",
    "but , if @xmath72 is much larger than that required to make all ratios smaller than @xmath75 , the number @xmath76 of tentative collision pairs is very large making the simulation process time - consuming due to low acceptance probabilities of the tentative collisions ( see the following analysis ) .",
    "note that @xmath77 , @xmath78 , @xmath79 and so , @xmath64 is equal to @xmath80 where @xmath81 is the expected value of @xmath82 .",
    "we use the importance sampling scheme to estimate @xmath81 , namely @xmath83 where @xmath84 is the sum of @xmath85 number of representative @xmath86 with @xmath87 being selected according to their probability densities @xmath88 , respectively .",
    "furthermore , we let @xmath89 and so @xmath90 .    for any @xmath91",
    ", we select particle @xmath92 randomly and uniformly from those simulated molecules inside cell @xmath43 and thus @xmath93 is selected according to @xmath94 as required because @xmath68 , which implies that all simulated molecules should be selected equivalently .",
    "the number of simulated molecules inside @xmath47 represents @xmath71 .",
    "then , we select particle @xmath95 ( @xmath96 ) randomly and uniformly inside cell @xmath43 and use @xmath97 as the @xmath98 representative value of @xmath99 , which also implies that @xmath99 is selected according to @xmath100 where @xmath101 . as @xmath102 is a constant , we select @xmath23 randomly and uniformly from the whole surface of unit sphere , which is equivalent to selecting the post - collision @xmath103 randomly by the hard - sphere collision model as @xmath23 is used only to calculate @xmath103 .",
    "now , we have @xmath104 and @xmath105 . assuming that @xmath72 is known for the current @xmath53 , @xmath91 is equal to @xmath106\\dfrac{g_j\\sigma_\\mathrm{t}}{(g\\sigma_\\mathrm{t})_{\\max}}$ ] .",
    "now , the acceptance - rejection scheme is used to handle the fraction @xmath107 . if @xmath108 where @xmath109 is a random fraction distributed uniformly inside [ 0 , 1 ] , we let @xmath110 $ ] and @xmath111 otherwise .",
    "note that @xmath62 and @xmath90 and so @xmath71 becomes @xmath112 after intermolecular collisions .",
    "this implies that if @xmath108 , @xmath113 $ ] contained in @xmath114 is canceled by @xmath115 $ ] contained in @xmath91 and meanwhile @xmath116 $ ] contained in @xmath91 is added to @xmath114 , namely replacing @xmath113 $ ] by @xmath116 $ ] in @xmath114 .",
    "till now , the replacement may contribute nothing if we are discussing @xmath64 at velocity points @xmath13 different from @xmath104 because both the original @xmath113 $ ] and the new @xmath116 $ ] are equal to zero at those @xmath13 .",
    "so , we consider @xmath64 at all velocity points @xmath13 together and specify that the same set of samples @xmath91 is used to compute @xmath64 at all different @xmath13 . then , if @xmath108 , the contribution of @xmath91 to @xmath64 in the whole velocity space is nonzero only at four velocity points and equivalent to changing the velocities @xmath117 to @xmath103 , respectively , which means that a pairwise intermolecular collision happens .",
    "so , we select @xmath76 number of tentative collision pairs for each cell @xmath43 at the end of each @xmath53 and use @xmath107 of each pair @xmath118 as the acceptance probability to judge whether a pairwise collision happens .",
    "this is the algorithm used in the dsmc method .    for dense fluids ,",
    "the importance sampling scheme was used in @xcite to solve the enskog equation , which is an extension of the boltzmann equation by considering the intermolecular repulsive force at short distance but still neglecting the intermolecular cohesive force at long distance .",
    "the cohesive force is vital in simulating two - phase flows @xcite . for problems at low velocity ,",
    "the intermolecular collision integral of the boltzmann equation is simplified and evaluated by the importance sampling scheme to improve the efficiency in the lvdsmc method @xcite , which conserve the mass on average .",
    "a scheme was proposed in @xcite to conserve the mass strictly .",
    "we consider gas flows of single component . in the absence of external body force",
    ", the bgk equation @xcite can be written as a lagrangian form : @xmath119 where @xmath10 is the unknown probability distribution function , @xmath11 is the time , @xmath12 is the spatial coordinate and @xmath13 is the molecular velocity , the parameter @xmath120 is selected appropriately to satisfy the coefficient of viscosity @xmath121 or heat conduction @xmath122 @xcite : @xmath123 and the maxwell distribution function @xmath124 is : @xmath125\\ ] ] where @xmath33 is the molecular mass and @xmath34 is the boltzmann constant , the number density @xmath126 , flow velocity @xmath127 and temperature @xmath128 are functions of @xmath11 and @xmath12 and defined by eq . using @xmath40 .    in the dsbgk method @xcite ,",
    "the simulation process is divided into a series of time steps @xmath53 and the flow domain is divided into many cells .",
    "the selections of @xmath53 and cell size are the same as in the dsmc method when simulating problems of high @xmath3 .",
    "many simulated molecules are employed to represent the distribution function @xmath40 and its evolution with time .",
    "the main idea of this method is to track down the evolution of @xmath40 along enormous molecular trajectories at _ constant _ velocities , which are selected randomly when simulated molecules are generated or reflected at the boundaries .",
    "each simulated molecules @xmath35 carries four molecular variables : position @xmath36 , molecular velocity @xmath37 , number @xmath129 of real molecules represented by the simulated molecule @xmath35 , and @xmath130 which is equal to the representative value @xmath131 of @xmath40 at the moment @xmath11 and point @xmath132 in the phase space .",
    "@xmath133_{\\mathrm{all}}$ ] is a ( not unique ) representative sample of @xmath40 and @xmath134_{\\mathrm{all}}$ ] is the representative value of @xmath40 .",
    "the compatibility condition , namely @xmath133_{\\mathrm{all}}$ ] and @xmath134_{\\mathrm{all}}$ ] are related to the same @xmath40 , is required during the simulation process .",
    "note that the evolution of @xmath40 is due to three factors : free molecular motion , intermolecular collision and molecular reflection on the wall .",
    "for the evolution of @xmath40 due to free molecular motions and intermolecular collisions , @xmath134_{\\mathrm{all}}$ ] is changed and then @xmath133_{\\mathrm{all}}$ ] is updated correspondingly by changing @xmath36 and @xmath129 rather than @xmath37 .",
    "note that @xmath129 is a constant and @xmath36 is changed alone to represent the evolution of @xmath40 due to free molecular motions and then @xmath37 is changed randomly to represent the evolution of @xmath40 due to intermolecular collisions in the dsmc simulation .",
    "the position @xmath36 is updated along the trajectory of molecular free motion .",
    "@xmath130 is updated with @xmath36 by the lagrangian description of the bgk equation where @xmath124 is replaced inside each cell @xmath43 by the transitional @xmath135 $ ] .",
    "the cell s variables @xmath136 are updated by @xmath137 and the increment ( instead of transient value ) of @xmath129 based on the mass , momentum and energy conservation principles of intermolecular collision process .",
    "note that we use the subscript @xmath138 to distinguish the transitional cell s variables @xmath136 from @xmath139 , which are computed by the transient @xmath140 as in eq . because @xmath133_{\\mathrm{all}}$ ] is a representative sample of @xmath40 .",
    "the increment of @xmath129 is due to the intermolecular collision effect and computed by the extrapolation of acceptance - rejection scheme , which avoids the time - consuming process of frequently generating random fractions and employs the changing information of @xmath130 making the compatibility condition satisfied .    for the evolution of @xmath40 due to molecular reflection at @xmath36 on the wall , @xmath37",
    "is changed to @xmath141 where @xmath142 is the reflecting velocity selected randomly in the local cartesian reference system moving at the wall velocity @xmath143 .",
    "but , @xmath129 remains unchanged to conserve mass .",
    "then , @xmath130 is updated to @xmath144 , which also satisfies the compatibility condition .      at the initial state ,",
    "the cell variables @xmath136 are equal to the initial macro quantities which are usually uniform .",
    "the initial molecular position @xmath36 and velocity @xmath37 are selected randomly as in the dsmc simulation and then @xmath130 is equal to @xmath145 .",
    "the initial values @xmath146 of @xmath129 for different simulated molecules are usually the same and selected appropriately such that the total number of simulated molecules , which is equal to @xmath147 where @xmath148 is the total number of real molecules , takes a acceptable value .",
    "the smaller the value of @xmath146 is , the larger the total number of simulated molecules at the initial state will be .       +    in the dsbgk simulation , each simulated molecule moves uniformly and in a straight line before encountering the boundary . as we can see from fig .",
    "[ fig : schematic model ] , the molecular trajectory during each @xmath53 may be divided into several segments by cell s interfaces or remains as a single segment if not yet arriving at any cell s interface at the end of current @xmath53 . as each segment",
    "is located inside a particular cell @xmath43 , @xmath130 is conveniently updated along each segment in sequence according to the lagrangian form of the bgk equation using @xmath149 of cell @xmath43 .",
    "note that @xmath149 is constant for a particular simulated molecule @xmath35 and cell @xmath43 as @xmath136 and @xmath37 are fixed .",
    "so , @xmath130 is updated using eq .",
    "obtained by finishing the integration of eq . ,",
    "namely @xmath150 , with respect to @xmath11 along the segment concerned : @xmath151 where @xmath152 is the previous value and @xmath153 is the new value after the intermolecular collision , @xmath154 is the time interval used by the simulated molecule @xmath35 during the current @xmath53 to go through the segment inside cell @xmath43 . as the molecular trajectory",
    "is divided first by the time step @xmath53 and then by the cell s interfaces , @xmath155 . if the trajectory during the current @xmath53 is divided into several segments by the cell s interfaces , @xmath156 and eq .",
    "is used repeatedly to update @xmath130 for the consecutive segments in sequence . after updating @xmath130 for each segment ,",
    "@xmath129 is updated correspondingly : @xmath157 which is based on the extrapolation @xcite of acceptance - rejection scheme that if @xmath133_{\\mathrm{all}}$ ] is a representative sample of @xmath158 , @xmath159_{\\mathrm{all}}$ ] is a representative sample of @xmath160 , where @xmath161 is the ratio of @xmath160 and @xmath158 at the same point @xmath162 .",
    "equation could be understood by considering two steps : in the first step without intermolecular collision , @xmath36 is updated with @xmath11 along the trajectories but @xmath163 keep unchanged as @xmath164=@xmath10 ; then , @xmath130 is changed to @xmath153 due to intermolecular collision and @xmath165 keep unchanged , so , @xmath129 is changed correspondingly to @xmath166 by eq . .",
    "the precondition of using the extrapolation of acceptance - rejection scheme is that @xmath133_{\\mathrm{all}}$ ] is a representative sample of @xmath40 whose representative value is @xmath134_{\\mathrm{all}}$ ] before intermolecular collision , namely the compatibility condition must holds before using the extrapolation of acceptance - rejection scheme .",
    "then , the updating algorithms of @xmath167 with @xmath11 for the free molecular motion and intermolecular collision processes make the compatibility condition constantly satisfied due to using the extrapolation of acceptance - rejection scheme . in the molecular reflection process on the wall ,",
    "the compatibility condition is satisfied automatically .",
    "the idea of the updating algorithms along molecular trajectories at _ constant _ velocities is inspired by the lattice boltzmann method ( lbm ) . in turn , the physical understanding of the kinetic equation is also helpful to the development of lbm algorithm .",
    "recently , an alternative scheme was proposed in @xcite to compute the strain rate tensor for the application of large eddy simulation ( les ) in the lbm .    the cell s variables @xmath136 are used in eq . to determine @xmath149 and updated at the end of each @xmath53 . during the current @xmath53 and for each cell",
    "@xmath43 ( see fig . [",
    "fig : schematic model ] right ) , some simulated molecules run inside cell @xmath43 and their increments @xmath168 inside cell @xmath43 are already known .",
    "@xmath169 is the number increment of real molecules of class @xmath37 associated with the intermolecular collisions inside cell @xmath43 during the current time step .",
    "we make summation @xmath170 over those simulated molecules running inside cell @xmath43 during the current @xmath53 ( _ note _ : simulated molecule @xmath35 may contribute more than one term to the summation if it reflects on the wall back into the cell @xmath43 ) . note that @xmath169 in this summation is the increment information rather than transient information in the summation of eq .",
    "used in the dsmc method .",
    "obviously , @xmath170 means the number increment of real molecules of all existing classes associated with the intermolecular collisions inside the same cell @xmath43 during the same time step .",
    "so , @xmath170 is expected to be zero as required by the mass conservation principle . usually , this summation is not exactly equal to zero due to numerical error .",
    "so , we decrease @xmath171 if @xmath170 is positive and then @xmath170 will decrease at the next @xmath53 as each term @xmath169 decreases due to eqs . - , and vice versa .",
    "it works as an auto - regulation scheme which makes @xmath170 approaching to zero . similarly , @xmath172 and @xmath173 are related respectively to the momentum increment and kinetic energy increment of real molecules of all existing classes associated with the intermolecular collisions inside the same cell @xmath43 and during the same @xmath53 .",
    "they are expected to be zero according to the momentum and energy conservation principles of intermolecular collision process and so can be used to update @xmath174 and @xmath175 by auto - regulation schemes .",
    "the auto - regulation schemes are : @xmath176-n_{\\mathrm{tr,}k}^{\\mathrm{new}}v_k\\dfrac{m(\\vec u_{\\mathrm{tr,}k}^{\\mathrm{new}})^2}{2}}{n_{\\mathrm{tr,}k}^{\\mathrm{new}}v_k\\dfrac{3k_\\mathrm{b}}{2 } }      \\end{cases}\\ ] ] where @xmath177 are the new values of number density @xmath171 , flow velocity @xmath174 and temperature @xmath175 of cell @xmath43 , respectively , @xmath50 is the volume of cell @xmath43 .",
    "the updating schemes of eq .",
    "make @xmath170 , @xmath178 , @xmath173 converging to zero and then @xmath136 will fluctuate around their steady state solutions due to stochastic effect .",
    "we use @xmath179 to represent the previous values at the origin of the segment located inside cell @xmath43 during the current @xmath53 and use @xmath180 for the new values at the end of that segment after intermolecular collision as in eqs . - . note",
    "that any possible representative trajectory is selected according to its probability ( see section [ ss : boudary condition ] ) as the molecular reflecting velocity is selected randomly according to the boundary reflection model .",
    "thus , it can be expected that the feature of all existing classes represents the feature of all possible classes and so the summation over all existing classes is equivalent to the integration over all possible classes like replacing eq .",
    "by eq . in the dsmc simulation . we replace @xmath129 by @xmath181 where @xmath182 is the velocity space element around @xmath37 as the compatibility condition is satisfied .",
    "note that @xmath154 is the time interval used by the simulated molecule @xmath35 inside cell @xmath43 during the current @xmath53 and so @xmath183 for those simulated molecules moving inside the same cell ( namely the trajectory during the current @xmath53 is a single segment without division by the cell s interfaces ) .",
    "we assume that @xmath53 is very small making most simulated molecules moving inside the same cell during each @xmath53 and so @xmath184 .",
    "the integral expression of mass conservation of the dsbgk simulation for each cell @xmath43 is : @xmath185 \\\\      & \\simeq v_k\\delta t\\int_{-\\infty}^{\\infty}\\upsilon(f_{\\mathrm{eq , tr,}k}-f)\\mathrm{d}\\vec c \\end{aligned}\\ ] ] where @xmath150 and the last approximate equality holds as @xmath184 and @xmath130 is the representative value of @xmath40 .",
    "so , after convergence with @xmath186 , we get @xmath187 but , it is not necessary to require @xmath53 being very small .",
    "if @xmath53 is large , @xmath186 still implies @xmath188 as both of them represent the mass conservation of intermolecular collision process of the same evolution equation @xmath189 .",
    "after convergence with @xmath190 and @xmath191 , the integral expressions of momentum and energy conservations can be obtained similarly .",
    "so , the following equation is satisfied for each cell @xmath43 after convergence : @xmath192 where @xmath193 .",
    "as the original bgk equation satisfies @xmath194@xmath195 , we have @xmath196 which implies that @xmath197 , @xmath198 , @xmath199 for each cell @xmath43 after convergence according to the definitions of @xmath149 and @xmath124 .",
    "so , the solutions of @xmath136 of the dsbgk method are the discrete solutions of @xmath42 of the bgk equation after convergence under the same boundary condition .",
    "then , the transitional @xmath149 used in the dsbgk method is equal to the original @xmath124 of the bgk equation inside each cell @xmath43 .",
    "consequently , @xmath134_{\\mathrm{all}}$ ] and @xmath133_{\\mathrm{all}}$ ] are the representative value and sample , respectively , of the solution @xmath40 of the bgk equation , which implies that any higher - order moment , including stress tensor and heat flux , calculated by the dsbgk method agrees with that obtained by solving the bgk equation using other numerical methods as in @xcite among others .",
    "note that the updating scheme of eq . conserve the total value @xmath200 inside each cell @xmath43 as @xmath201 ( _",
    "note _ : total with quotation marks means the sum of cell quantity and molecular quantity ) .",
    "so , @xmath202 is constant during the simulation process because @xmath171 and @xmath129 are unchanged during the molecular reflection process on the wall ( _ note _ : the summation @xmath203 is over the whole flow domain , namely over all cells and all simulated molecules , respectively ) .",
    "the total momentum and energy of simulated molecules and cells are unchanged when using eq . but not conserved during the whole simulation process due to molecular reflections on the wall , which conserve the mass but not momentum and energy .",
    "note that the conservations of the total mass , momentum and energy by the updating scheme of eq .",
    "are artificial restrictions .",
    ". can be modified by adding arbitrary different _ positive _ factors before @xmath170 , @xmath178 , @xmath173 to regulate the convergence speed in open problems .",
    "but , the total mass should be conserved in _ closed _ problems such that @xmath204 which satisfies the important definite condition for closed problems that the total number @xmath205 of real molecules represented by the simulated molecules after convergence is equal to the total number @xmath148 of real molecules in the closed physical problem ( _ note _ : total here means the summation @xmath203 over the flow domain ) .",
    "now , we explain why the cell s variables @xmath136 are updated by the auto - regulation schemes of eq . rather than eq .",
    "as we can see , @xmath130 is updated smoothly by eq .",
    "and so the increment @xmath169 calculated by eq . is also smooth , which implies that the summations @xmath170 , @xmath178 , @xmath173 used in eq .",
    "contain low stochastic noise .",
    "but , the summations @xmath206 , @xmath207 , @xmath208 over transient values as in eq . still have large stochastic noise due to the discontinuous events of simulated molecules moving into and out of cell @xmath43 .",
    "the dsbgk algorithm described here is valid for any cell division using parallelepiped or tetrahedron . in the dsmc simulation of problems with complex configuration",
    ", we prefer to use the regular parallelepiped to divide the flow domain as in  @xcite , which makes it efficient to determine which cell the simulated molecules are located inside at the end of each @xmath53 . although the use of parallelepiped makes it time - consuming to determine the molecular reflection position on the complex wall surface , the number of simulated molecules running into the surface during each @xmath53 is usually much smaller than the total number when @xmath3 is much smaller than 1 .",
    "compared to using tetrahedrons to divide the flow domain which makes the determination of surface reflection positions of _ few _ simulated molecules efficient but the determination of the situated cells of _ all _ simulated molecules after each time step time - consuming , the gain of the algorithm of using parallelepiped outweighs its loss .",
    "but , in the dsbgk simulation , the efficiency of the algorithm of molecular motion and intermolecular collision processes depends less on the cell type because the molecular trajectories are divided into segments by cell s interfaces and the molecular variables are updated along each segment in sequence .",
    "if molecular reflections on the wall are very frequent and complex wall configurations are involved , we suggest to use tetrahedron to divide the flow domain in the dsbgk simulation such that the determination of surface reflection positions is efficient .    in the dsmc simulation ,",
    "the total cpu time is almost proportional to the product of sample size @xmath85 and sampling interval @xmath209 as the cpu time used for the transitional period before reaching the steady state is usually negligible .",
    "the molecular quantities of interest are sampled at intervals ( @xmath210 for instance ) to reduce the sample size @xmath85 .",
    "we use notations @xmath211 and @xmath212 to represent the variances using different @xmath209 but the same cpu time , namely @xmath213 .",
    "let @xmath214 and so @xmath215 .",
    "then , the general rule @xcite is that @xmath216 and the ratio of variance approaches to @xmath75 when the correlation degree of sample set is very high .",
    "so , the increase of statistical variance due to the increase of @xmath209 from @xmath75 to @xmath217 under the conditions of same cpu time is negligible because the correlation degree of consecutive transient results in the dsmc simulation is high . in the dsbgk simulation ,",
    "the stochastic error is low and the sample size required to obtain smooth results is small .",
    "we prefer to sample @xmath136 at every time step ( @xmath218 ) as the variance always ( although maybe slightly due to high correlation degree ) decreases with the increase of sample size under the conditions of same cpu time due to @xmath219 .",
    "note that @xmath220 approaches to @xmath221 if the consecutive samples are almost independent , which means that the variance is inversely proportional to the sample size and independent of the sampling interval .",
    "when considering external body force , the bgk equation is changed to : @xmath222 where @xmath223 is the acceleration due to external body force .",
    "we split @xmath54 into @xmath55 , @xmath224 and @xmath225 . to simplify the algorithm",
    ", we decouple the effect due to @xmath226 from the other two effects . at the end of each @xmath53 of the above dsbgk algorithm ,",
    "the effects due to @xmath57 and @xmath56 are already incorporated into the simulation and so we consider @xmath226 by changing @xmath37 of each simulated molecule to @xmath227 and keeping @xmath167 unchanged as @xmath228=@xmath10 if neglecting intermolecular collision .",
    "correspondingly , @xmath174 of each cell is changed to @xmath229 and @xmath230 keep unchanged .",
    "when sampling and outputting the cell s velocity , we use the average value before and after implementing @xmath231 , namely @xmath232 .      for the open boundary ,",
    "simulated molecules are removed from the flow domain when moving across the open boundary during each @xmath53 .",
    "correspondingly , some new simulated molecules are generated at the end of each @xmath53 at the open boundary with @xmath36 and @xmath37 being selected randomly as in dsmc simulations .",
    "then , @xmath130 is determined from @xmath137 through @xmath149 using the macro quantities fixed at the open boundary or the values of adjacent cell if not prescribed at the boundary .",
    "the initial values of @xmath129 of new simulated molecules at different parts of the open boundary can be different in the dsbgk simulation . in the channel flow problem driven by the density difference @xmath233 at the two ends",
    "@xcite , we use different initial values of @xmath234 for different ends such that their ratios of @xmath235 are equal , which makes the number of simulated ( not real ) molecules per cell almost the same for different cells having the same volume but different number density of real molecules . as the stochastic noise at each cell",
    "depends on the average number of simulated molecules inside that cell , such selection of the initial values of @xmath129 for new simulated molecules at different parts of the open boundary achieves the trade - off of stochastic noise among cells and so reduces the sample size required for getting smooth results in the whole flow domain .    for the wall boundary , @xmath37 and",
    "then @xmath130 are changed after molecular reflection at @xmath36 on the wall as discussed below .",
    "when running into the wall and reflecting at @xmath36 on the wall , @xmath37 is changed to @xmath141 where @xmath143 is the wall velocity and the reflecting velocity @xmath142 is selected randomly according to the reflection model ( namely the scatter kernel discussed later in section [ sss : updating f_l ] ) as in the dsmc simulation .",
    "@xmath129 remains unchanged to conserve the mass .",
    "after changing @xmath37 alone , @xmath133_{\\mathrm{all}}$ ] is updated to represent @xmath40 after molecular reflection effect and consequently @xmath130 is updated to the representative value of @xmath40 at the point @xmath236 .",
    "so , the compatibility condition is satisfied in the molecular reflection process .",
    "the subscript @xmath35 is omitted in the component expression of velocity when discussing the boundary condition .",
    "we predetermine a local cartesian reference system @xmath237 moving at the wall velocity @xmath143 .",
    "we use the subscripts 2 and 3 for the tangential directions and 1 for the normal direction of @xmath237 . in the discussion of reflection process ,",
    "the subscripts 1 , 2 , 3 always represent the corresponding components in @xmath237 .",
    "the incoming velocity @xmath238 is @xmath239 ( _ note _ :",
    "@xmath240 ) . as @xmath37 and @xmath143",
    "are stored in the component form of the unique global cartesian reference system @xmath241 , we need the transformation from @xmath241 to @xmath237 to obtain the components of @xmath242 . finally , @xmath243 are transformed from @xmath237 to @xmath241 to obtain the component form of @xmath244 in @xmath241 . for the unit normal vector @xmath245 of wall , we specify that the selection of @xmath245 makes the incoming component @xmath246 negative and the reflecting component @xmath247 positive . the normal direction is unique and the selections of tangential directions are free but fixed during the simulation process . in the original cll reflection model @xcite-@xcite ,",
    "we compute the tangential components of @xmath142 by @xmath248 and @xmath249 where @xmath250^{1/2}+(2k_\\mathrm{b}t_{\\mathrm{wall}}/m)^{1/2}r_{\\tau}\\cos\\varphi_{\\tau}$ ] , @xmath251 , @xmath252 , @xmath253 , @xmath254 is the azimuthal angle of incoming velocity component @xmath255 in the @xmath256 plane of @xmath237 , @xmath257 and @xmath258 are two different random fractions distributed uniformly inside [ 0 , 1 ] , @xmath259 is the accommodation coefficient of kinetic energy of the tangential velocity component . for the normal component , @xmath260^{1/2}$ ] where @xmath261 is the absolute value of @xmath262 as @xmath263 , @xmath264 , @xmath265 , @xmath266 are two additional random fractions and @xmath267 is the accommodation coefficient of kinetic energy of the normal velocity component .",
    "we get @xmath268 and @xmath269 after reorganizing the formulas of @xmath270 .",
    "note that @xmath271 is selected uniformly from a periodic interval @xmath272 $ ] and so @xmath273 can be replaced simply by @xmath271 , which implies that the calculation of @xmath254 can be avoided to slightly improve the efficiency .",
    "so , for the cll reflection model , the equivalent but simpler algorithm to compute the tangential components in @xmath237 is that @xmath274 and @xmath275 @xcite .",
    "this simpler algorithm also degenerates to the maxwell diffuse reflection model when @xmath276 .      after getting @xmath142",
    ", @xmath130 is updated correspondingly to @xmath277 .",
    "note that @xmath130 is the representative value of @xmath40 which is different from the scatter kernel @xmath278 used to select @xmath142 for each particular reflection process . generally speaking",
    ", @xmath40 is related to the mass flux but @xmath278 has nothing to do with the mass flux .",
    "usually , @xmath278 describes the distribution probability of @xmath142 inside the half velocity space ( @xmath279 ) as a function depending on the wall temperature @xmath280 , accommodation coefficients @xmath281 and possibly also on the incoming velocity @xmath238 .",
    "so , we have @xmath282 which contains @xmath283 as parameters .",
    "@xmath278 satisfies the normalization condition @xmath284 where @xmath285 is the probability for the molecule coming at @xmath238 to reflect into the velocity space element @xmath286 around @xmath142 .",
    "the transformation between @xmath40 at the boundary and @xmath278 can be completed using the incoming mass flux .",
    "we introduce @xmath287 as the equivalent distribution function of @xmath40 observed in @xmath288 at the reflection point @xmath36 and at the current moment @xmath11 , which means @xmath289 . after getting the formula of @xmath287 , @xmath290 .",
    "the distribution @xmath291 of the incoming molecules is known from the molecular information in the adjacent cell .",
    "@xmath292 is the distribution of reflecting molecules and related to @xmath278 as introduced in @xcite : @xmath293 taking integration of eq . with respect to @xmath142 over its half velocity space and using the normalization condition of @xmath294",
    ", we get : @xmath295 which represents the mass conservation of molecular reflection process .    in the maxwell diffuse reflection model , @xmath296 @xmath297 where the effective @xmath298 will be determined by @xmath299 .",
    "we assume that @xmath300 $ ] where @xmath136 are the quantities of cell @xmath43 close to the reflection point @xmath36 .",
    "then , the number @xmath301 of incoming real molecules on per unit wall surface during per unit time is : @xmath302 \\end{aligned}\\ ] ] where @xmath303 .",
    "similarly , the number @xmath304 of reflecting real molecules is : @xmath305 let @xmath306 as required in eq .",
    ", we get : @xmath307 \\end{aligned}\\ ] ] now , we can compute @xmath308 after getting @xmath298 .",
    "we store @xmath298 and use it repeatedly for different simulated molecules reflecting on the same subarea close to cell @xmath43 during the same @xmath53 and update @xmath298 at the end of each @xmath53 .",
    "additionally , the scatter kernel @xmath309 of the maxwell diffuse reflection model can be determined from @xmath310 as we assume that it is independent of the incoming velocity @xmath238 , namely @xmath311 . using the formula of @xmath310 and eqs .",
    ", , we have : @xmath312 which implies the selecting algorithm of @xmath142 for the maxwell diffuse reflection model described in section [ sss : updating c_l ] .",
    "in the cl reflection model @xcite , the scatter kernel is the product of three independent parts related respectively to the three components : @xmath313\\times      \\\\ & \\dfrac{1}{\\sqrt{\\pi\\alpha_{\\tau}}}\\exp[\\dfrac{-(\\tilde{c}_{\\mathrm{r,}3}-\\sqrt{1-\\alpha_\\tau}\\tilde{c}_{\\mathrm{i,}3})^2}{\\alpha_\\tau}]\\times      \\\\ & \\dfrac{\\tilde{c}_{\\mathrm{r,}1}}{\\pi\\alpha_\\mathrm{n}}\\exp[\\dfrac{-(\\tilde{c}_{\\mathrm{r,}1}^2+(1-\\alpha_\\mathrm{n } )      \\tilde{c}_{\\mathrm{i,}1}^2)}{\\alpha_\\mathrm{n}}]\\times      \\\\ & \\int_{0}^{2\\pi}\\exp[\\dfrac{2\\sqrt{1-\\alpha_\\mathrm{n}}\\tilde{c}_{\\mathrm{r,}1}|\\tilde{c}_{\\mathrm{i,}1}|}{\\alpha_\\mathrm{n } }      \\cos\\theta]\\mathrm{d}\\theta \\end{aligned}\\ ] ] where @xmath314 is the absolute value of the normalized incoming component @xmath315 where @xmath263 .",
    "the selecting algorithm of @xmath142 was proposed in @xcite based on eq . and is referred to as cll reflection model .",
    "again , we assume that @xmath299 is a maxwell distribution , which is a rough assumption here although it is reasonable when calculating @xmath301 by eq . .",
    "then , @xmath316 is determined from eqs . and .",
    "unfortunately , it is complicated to calculate @xmath316 by solving the integral of eq . .",
    "a tentative scheme was proposed in @xcite to simplify the calculation .",
    "note that the major differences between @xmath310 and @xmath309 are that the former contains a parameter @xmath298 but the later contains @xmath317 .",
    "so , @xmath318 is removed from @xmath319 and a new parameter @xmath320 is added to describe @xmath316 . the mass conservation principle of eq .",
    "is used to determine the parameter @xmath320 .",
    "consequently , the tentative formula of @xmath321 depends not only on @xmath142 but also on @xmath238 , which is inconsistent with the definition of eq .",
    "where @xmath321 is independent of @xmath238 .",
    "some simulation results show that the tentative formula of @xmath321 is useful when @xmath322 are very close to @xmath75 ( @xmath323 ) @xcite .",
    "this is because the tentative formula of @xmath321 can degenerate to the correct @xmath324 when @xmath325 and so its error is negligible when @xmath326 .    in the specular reflection model , @xmath327 and so @xmath328 .",
    "submitting @xmath329 into eq .",
    ", @xmath330 , which implies @xmath331 as @xmath332 and @xmath333 and @xmath130 is equal to @xmath131 before reflecting .      as in the dsmc method",
    ", it is convenient for the dsbgk method to calculate the flux @xmath334 of any molecular quantity @xmath335 in unit time and across unit area of the boundary surface : @xmath336_l\\ ] ] where the summation is over all those simulated molecules reflecting on the subarea @xmath337 during the time step @xmath53 , @xmath338 and @xmath339 are the incoming and reflecting quantities , respectively .",
    "let @xmath340 and @xmath341 and then @xmath334 represents the stress and heat flux , respectively .",
    "\\1 . initialization .",
    "generate many cells and simulated molecules and assign them with initial values for @xmath136 and @xmath342 , respectively .",
    "each simulated molecule moves uniformly and in a straight line before encountering boundary . during each @xmath53",
    ", the trajectory of any particular molecule @xmath35 may be divided into several segments ( see fig .",
    "[ fig : schematic model ] ) .",
    "then , @xmath167 are updated _ deterministically _ along each segment in sequence .",
    "when encountering the wall boundary , @xmath37 is updated randomly according to the reflection model and then @xmath130 is updated correspondingly . in open problems , simulated molecules are removed from the flow domain when moving across the open boundary during each @xmath53 and new simulated molecules are generated at the open boundary at the end of each @xmath53 .",
    "the variables @xmath136 of each cell @xmath43 is updated at the end of each @xmath53 .    \\3 .",
    "after convergence , @xmath136 are used as the discrete solutions of @xmath42 at each cell @xmath43 .",
    "in dsbgk simulations , the parameter @xmath120 is selected to satisfy the coefficient of viscosity @xmath121 or heat conduction @xmath122 by eq . .",
    "for problems where the momentum exchange is the dominant effect , we use @xmath343 to satisfy @xmath121 . for",
    "problems where the heat conduction is the dominant effect , we select @xmath344 to satisfy @xmath122 . note that @xmath121 is given usually . for monoatomic gas where the prandtl number is @xmath345 and the specific heat capacity at constant pressure is @xmath346 , we have @xmath347 as @xmath348 .",
    "the results were reported first in @xcite .",
    "the sizes @xmath349 are regulated to change the @xmath3 number .",
    "the maxwell boundary condition is used and the cell number is @xmath350 for @xmath4 and 6.3 .",
    "we set @xmath351 in the dsbgk simulations . in order to reduce the influence due to fluctuation in the number density distribution observed in the dsbgk simulations of closed problems ( see the following fig .",
    "[ fig : cavityflowkn6.3u20 ] ) , the number of simulated molecules per cell is about 2000 in the dsbgk simulations at @xmath4 and 6.3 .     and",
    "@xmath352=0.1 m / s , 7 minutes of cpu time.,title=\"fig:\",scaledwidth=45.0% ]   and @xmath352=0.1 m / s , 7 minutes of cpu time.,title=\"fig:\",scaledwidth=45.0% ] +   and @xmath352=0.1 m / s , 7 minutes of cpu time.,title=\"fig:\",scaledwidth=45.0% ]   and @xmath352=0.1 m / s , 7 minutes of cpu time.,title=\"fig:\",scaledwidth=45.0% ]    to show the high efficiency of dsbgk simulations at low velocity , we choose a very small driven velocity @xmath353 m / s .",
    "[ fig : cavityflowdsbgk ] shows the transient results ( no average ) of dsbgk simulation at 600@xmath354 taking about 7 minutes of computational time of one cpu on lenovo laptop e43a",
    ". we can output many transient results at different moments of interest at the additional cost of negligible computational time which is used for writing data to the hard disc . from the efficiency point of view",
    ", the dsbgk method is a promising tool for studying transient problems .",
    "but , the time coordinate in dsbgk simulations is not synchronous with the real time in physical problems due to the hysteresis effect @xcite of dsbgk simulations which are based on the auto - regulation schemes of eq . .",
    "new techniques , like time rescaling , are required to reduce the magnitude of hysteresis effect .     and",
    "@xmath352=20 m / s.,title=\"fig:\",scaledwidth=45.0% ]   and @xmath352=20 m / s.,title=\"fig:\",scaledwidth=45.0% ] +   and @xmath352=20 m / s.,title=\"fig:\",scaledwidth=45.0% ]   and @xmath352=20 m / s.,title=\"fig:\",scaledwidth=45.0% ]    the driven velocity @xmath352 increases to 20 m / s and the transient dsbgk results at 600@xmath354 are given in fig .",
    "[ fig : cavityflowkn0.063u20 ] with verification by the dsmc results .",
    "the dsbgk simulation uses about 7 minutes again , which implies that the computational time used by the dsbgk simulation is almost independent of the magnitude of deviation from equilibrium state as the average process is avoided here .",
    "the dsmc simulation takes about 30 hours using 67 molecules per cell and about @xmath355 samples ( sampling once every @xmath356 ) . the computational time required by dsmc simulation for the above case of @xmath353",
    "m / s can be estimated by considering the fact that the computational time of dsmc simulation is almost inversely proportional to the square of mach number , roughly @xmath357 hours .     and @xmath352=20 m / s.,title=\"fig:\",scaledwidth=45.0% ]   and @xmath352=20 m / s.,title=\"fig:\",scaledwidth=45.0% ] +   and @xmath352=20 m / s.,title=\"fig:\",scaledwidth=45.0% ]   and @xmath352=20 m / s.,title=\"fig:\",scaledwidth=45.0% ]    we set @xmath358 m / s and increase @xmath3 to 6.3 .",
    "the dsbgk transient results at @xmath359 agree very well with the dsmc results .",
    "the dsbgk distributions of @xmath360 remain unchanged after @xmath361 .",
    "but , the dsbgk distribution of @xmath126 can not stay at steady state and its deviation at @xmath362 from the dsmc result is remarkable .",
    "this drawback of the dsbgk method in _ closed _ problems implies that the ensemble - average process ( if necessary ) should be used for quantities related to @xmath126 . in _",
    "open _ problems , the unphysical fluctuation of @xmath126 is eliminated by the fixed @xmath126 at open boundaries and so the more - efficient time - average process can be used ( see the results of channel flow ) .",
    "the dsbgk simulation within @xmath361 takes about 11 minutes and the computational time for each @xmath53 is increased compared to that of @xmath4 , which is because the molecular reflection on the wall becomes frequent and more computational time is used to generate random fractions .",
    "the same results were reported in @xcite .",
    "the distance @xmath2 between two plates is regulated to change @xmath3 .",
    "the cell number is 200 , 20 , 20 for @xmath363 , 0.1 , 1 , respectively .",
    "the maxwell boundary condition is used .",
    "@xmath351 and each cell contains about 2550 simulated molecules in the dsbgk simulations .",
    "+              this problem was studied first in @xcite where @xmath364=2 .",
    "we set @xmath365 to show the high efficiency of dsbgk simulations at low velocity .",
    "the sizes @xmath349 are regulated to change @xmath3 .",
    "the cell number is @xmath366 for @xmath367 and the maxwell boundary condition is used .",
    "each cell contains about 1000 simulated molecules and @xmath368 in dsbgk simulation as the heat conduction is the dominant effect .",
    "the dsbgk simulation converges after 160 @xmath53 taking about 8 minutes of computational time .",
    "the transient dsbgk results are given in fig .",
    "[ fig : thermalflowdsbgk ] . the transient @xmath126 and @xmath128 are smooth but the transient @xmath369 and @xmath370 contain large stochastic noise , which is because that the variation of @xmath128 is the active factor and has strong correlation with the variation of @xmath126 through the rough balance of pressure .",
    "however , the variations of @xmath369 and @xmath370 are passive factors and so sensitive to stochastic noise . in order to present smooth results of @xmath369 and @xmath370 for clear verification",
    ", we use the time - average process after @xmath371 to reduce noise and collect 1500 samples ( sampling at each @xmath53 ) making the total computational time about 79 minutes .",
    "the dsbgk smooth results are given in fig .",
    "[ fig : thermalflowkn0.2 ] with comparison by the dsmc time - average results .",
    "the dsbgk results using @xmath351 are given together to show the dependence of @xmath120 on different problems .",
    "the comparison shows that we should select @xmath368 in the thermal transpiration problem .",
    "in addition , fig .",
    "[ fig : thermalflowkn0.2 ] shows the agreement between the ensemble - average and time - average for sampling @xmath369 and @xmath370 in the dsbgk simulation , which is consistent with the conclusion of fig .",
    "[ fig : cavityflowkn6.3u20 ] that the time - average process is valid for sampling @xmath369 and @xmath370 .",
    ", @xmath372=0.95@xmath373 , @xmath374=1.05@xmath373 , 8 minutes of cpu time.,title=\"fig:\",scaledwidth=45.0% ] , @xmath372=0.95@xmath373 , @xmath374=1.05@xmath373 , 8 minutes of cpu time.,title=\"fig:\",scaledwidth=45.0% ] + , @xmath372=0.95@xmath373 , @xmath374=1.05@xmath373 , 8 minutes of cpu time.,title=\"fig:\",scaledwidth=45.0% ] , @xmath372=0.95@xmath373 , @xmath374=1.05@xmath373 , 8 minutes of cpu time.,title=\"fig:\",scaledwidth=45.0% ] +      +    , @xmath372=0.95@xmath373 and @xmath374=1.05@xmath373.,title=\"fig:\",scaledwidth=45.0% ] , @xmath372=0.95@xmath373 and @xmath374=1.05@xmath373.,title=\"fig:\",scaledwidth=45.0% ] + , @xmath372=0.95@xmath373 and @xmath374=1.05@xmath373.,title=\"fig:\",scaledwidth=45.0% ] , @xmath372=0.95@xmath373 and @xmath374=1.05@xmath373.,title=\"fig:\",scaledwidth=45.0% ] + , @xmath372=0.95@xmath373 and @xmath374=1.05@xmath373.,title=\"fig:\",scaledwidth=45.0% ] , @xmath372=0.95@xmath373 and @xmath374=1.05@xmath373.,title=\"fig:\",scaledwidth=45.0% ] +           and @xmath375=0.6@xmath376 , 36 minutes of cpu time.,title=\"fig:\",scaledwidth=45.0% ]   and @xmath375=0.6@xmath376 , 36 minutes of cpu time.,title=\"fig:\",scaledwidth=45.0% ] +   and @xmath375=0.6@xmath376 , 36 minutes of cpu time.,title=\"fig:\",scaledwidth=45.0% ]   and @xmath375=0.6@xmath376 , 36 minutes of cpu time.,title=\"fig:\",scaledwidth=45.0% ] +    the dsbgk simulations of channel flows driven by pressure difference were reported first in @xcite .",
    "here , @xmath377 5 microns and @xmath378 is regulated to change @xmath3 .",
    "the cell number is @xmath379 for @xmath380 and the maxwell boundary condition is used .",
    "we set @xmath351 in the dsbgk simulations . to show the stability improvement of dsbgk simulations in open problems , we appropriately choose the initial value @xmath146 of @xmath129 of all simulated molecules such that the number of simulated molecules per cell is about 10 at the initial state . the number density at the outlet is @xmath381 and equal to the initial value @xmath376 at the inlet .",
    "in order to make the number of simulated molecules per cell almost uniform during the simulation process , the initial value of @xmath129 for the new simulated molecules at the inlet is larger than that at the outlet and the ratio is @xmath382 .",
    "specifically , we set @xmath383 and @xmath384 to maintain the number of simulated molecules per cell approximately equal to 10 during the simulation process .    after convergence , the transient dsbgk results at @xmath385 are given in fig .",
    "[ fig : channelflowdsbgk ] taking about 36 minutes of computational time .",
    "it shows that the dsbgk simulation is stable when using only 10 simulated molecules per cell in open problem .",
    "using few simulated molecules reduces the memory usage and improves the applicability in problems of large scale .",
    "the transient @xmath126 is smooth but the transient @xmath360 contain large stochastic noise .",
    "we use the time - average process to reduce noise and collect 6000 samples ( sampling at each @xmath53 ) after @xmath386 , which takes about 8 minutes making the total computational time about 44 minutes .",
    "the time - average results of dsbgk simulation are given in fig .",
    "[ fig : channelflowkn0.63 ] with comparison by the time - average results of dsmc simulation .",
    "unfortunately , the average results of @xmath370 and @xmath128 of the dsbgk and dsmc simulations are still dominated by the stochastic noise due to small variations inside the flow domain , particularly in the area far away from the two ends .",
    "it should be pointed out that the average @xmath370 and @xmath128 can distinctly show their main variations near the inlet and outlet .",
    "note that the dominance of stochastic noise is due to not only small characteristic velocity but also small variation . as we can see from the lid - driven problem at small driven velocity @xmath353 m / s ,",
    "the transient velocity distribution is smooth during the whole evolution process as its variation inside the whole flow domain is obvious ( see fig . [",
    "fig : cavityflowdsbgk ] ) .",
    "the magnitude of stochastic noise in the dsbgk time - average results using a small sample size is much smaller than that in the dsmc time - average results using a large sample size .",
    "in addition , the agreement between the dsbgk time - average and dsbgk transient results of @xmath126 implies that the nonphysical fluctuation of @xmath126 observed in the dsbgk simulation of closed problem is eliminated in the open problem and the time - average process is valid for sampling @xmath126 if necessary .     and",
    "@xmath375=0.6@xmath376.,title=\"fig:\",scaledwidth=45.0% ]   and @xmath375=0.6@xmath376.,title=\"fig:\",scaledwidth=45.0% ] +   and @xmath375=0.6@xmath376.,title=\"fig:\",scaledwidth=45.0% ]   and @xmath375=0.6@xmath376.,title=\"fig:\",scaledwidth=45.0% ] +   and @xmath375=0.6@xmath376.,title=\"fig:\",scaledwidth=45.0% ]   and @xmath375=0.6@xmath376.,title=\"fig:\",scaledwidth=45.0% ] +",
    "the dsmc algorithm is analyzed using the importance sampling scheme to solve the boltzmann equation .",
    "the dsbgk algorithm is introduced by theoretical analysis which shows the convergence of dsbgk method to the bgk equation .",
    "many numerical results in several benchmark problems are listed together to show the validity and high efficiency of the dsbgk method .",
    "unsolved problems in the current dsbgk algorithm include : 1 ) hysteresis effect in transient problems ; 2 ) nonphysical fluctuation of density distribution in _ closed _ problems ; 3 ) how to get a rigorous formula of @xmath316 using eqs . and ."
  ],
  "abstract_text": [
    "<S> recently , the dsbgk method ( _ note _ : the original name ds - bgk is changed to dsbgk for simplicity ) was proposed based on the bgk equation to reduce the stochastic noise in simulating rarefied gas flows at low velocity , in which the deviation from equilibrium state is small making the traditional dsmc simulation time - consuming due to the dominance of noise in transient results . in both dsmc and dsbgk simulations , </S>",
    "<S> the simulated molecules move into and out of cells randomly and frequently . </S>",
    "<S> consequently , the transient information of molecules in each particular cell contains significant noise . </S>",
    "<S> the dsmc method uses the transient values of molecular variables to compute the cell s variables ( including number density , flow velocity and temperature ) and so the stochastic noise in its cell s variables is remarkable particularly in the case of low velocity . in the dsbgk simulation , </S>",
    "<S> the increments rather than the transient information of molecular variables are used to update the cell s variables based on the mass , momentum and energy conservation principles of intermolecular collision process . </S>",
    "<S> this updating scheme significantly reduces the noise in cell s variables of dsbgk simulations because the molecular variables are updated smoothly by the extrapolation of acceptance - rejection scheme and so their increments contain low noise . </S>",
    "<S> the detailed comparisons of algorithms and results between the dsmc and dsbgk methods are given here . </S>",
    "<S> several benchmark problems are simulated to verify the dsbgk method by comparison with the dsmc method as criterion .    </S>",
    "<S> rarefied gas flows , micro gas flows , boltzmann equation , bgk equation , molecular simulation methods , dsmc method , variance reduction , surface reflection </S>"
  ]
}
{
  "article_text": [
    "recent years have seen a sharp increase in internet worms , such as sasser and msblaster , causing damage to millions of systems worldwide .",
    "worms are automated programs that exploit vulnerabilities of computers connected to the network in order to take control of them .",
    "once they have successfully infected a system , they continue to search for new victims .",
    "when a worm finds a new vulnerable computer it will infect it as well .",
    "worms thus spread through the network on their own .    given the enormous problems caused by worms , it is important to develop defenses against them .",
    "for this we need to analyze them in detail .",
    "once a system is found to be infected , we would like to know how this happened , what actions the worm might perform and how we can prevent infection in the future .",
    "this paper is concerned with one of the _ first steps _ in such a diagnosis : we want to determine , whether we have seen this worm before or whether it is very similar to a known worm . to achieve this",
    ", we analyze the binary executable of the worm .",
    "many known worms , such as sasser , often come in a number of variants .",
    "these are usually successive versions released by the same author to extend the worm s functionality .",
    "all such versions together then form a family of related worms .",
    "using compression , we first cluster the different versions of worms by family .",
    "we compare an unknown worm to a number of known worms using compression , which often allows us to guess its family which simplifies further analysis .",
    "this very simple approach does not make use of any manual comparisons of text or especially selected patterns contained in the worm used in conventional analysis .",
    "many binaries found in the wild are also compressed using upx , which is then modified to prevent decompression .",
    "this makes it very difficult to analyze the binary using approaches which rely on disassembling the binary and comparing the flow of execution of two programs .",
    "surprisingly , our approach still works even if upx is used , although it becomes less accurate .",
    "therefore compression may be a useful tool in the initial analysis of newly captured worms .",
    "infected systems and network attacks often cause variations in network traffic . in order to recognize and prevent such attacks one would like to detect these variations .",
    "typically , anomalies are detected by searching for specific patterns within the network traffic .",
    "for example , snort  @xcite can trigger an alarm when the string `` msblast.exe '' is found back in a tcp session .",
    "this works very well , once it is known what patterns we need to look for . here , we are interested in recognizing anomalies _ even if we do nt know what to look for_. first of all , we explore the complexity of different types of network traffic using compression .",
    "the differences in complexity allow us to make a rough guess what class of application protocols gave rise to a certain network interaction .",
    "intuitively , the complexity of an object is determined by how well it compresses .",
    "if something compresses well we say it has low complexity .",
    "if , on the other hand , it can hardly be compressed at all , we say it has high complexity .",
    "for example , the complexity of ssh sessions is very high .",
    "if we observe tcp sessions on the same port with much lower complexity , we suspect an anomaly .",
    "this requires no additional knowledge of the anomaly or a search for specific traffic patterns .",
    "the compress snort plugin , allows snort to trigger an alarm if the complexity of the observed traffic does not fall within a specified range .",
    "finally , we make use of compression to compare two different sessions .",
    "an attacker or a new version of a worm may generate slightly different network traffic , which no longer contains the specific pattern we were looking for and thus escape detection . here , we are interested in recognizing patterns which are very similar to an existing ones .",
    "informally , we say that two protocol sessions are close together if their combined complexity is not much larger than their individual complexity .",
    "this is the case if two sessions are very similar and thus describe each other very well .",
    "we can use this to determine whether an observed tcp session is similar to a prerecorded session corresponding to a known attack .",
    "the ncd snort plugin allows snort to trigger an alarm if an observed session is at a certain distance from a given session .",
    "even though compression is a relatively expensive operation to perform on network traffic , we believe this approach could be useful to detect new types of attacks .",
    "once such attacks have been recognized , specific patterns can be constructed and used in conventional intrusion detection .",
    "graph - based methods have been used with great success in order to compare executable objects by halvar flake  @xcite as well as carrera and erdlyi  @xcite .",
    "recently , halvar flake has also been applied this to the analysis of malware  @xcite . using these methods it is possible to gain information about the actual security problems used by worms , by comparing different versions of the same executable .",
    "this requires disassembly of the binary . whereas this approach has the advantage of disclosing actual information about the nature of the security vulnerability , our focus here is very different .",
    "we provide a fast method for guessing the family of an observed worm without the need for disassembly , which can be used in he initial analysis of the executable . based on this analysis",
    ", other methods can be applied more accurately .",
    "much work has been done to determine the nature of network traffic .",
    "what makes our approach fundamentally different is that we do not make any preselection of patterns or specific characteristics .",
    "we leave it entirely to the compressor to figure out any similarities .    kulkarni and bush  @xcite",
    "have previously considered methods based on kolmogorov complexity to monitor network traffic .",
    "their approach however is different as they do not use compression to estimate kolmogorov complexity .",
    "furthermore they argue that anomalies in network traffic stand out in that their complexity is lower than good network traffic . whereas we find this to be true for network problems caused by for example faulty hardware prompting a lot of retransmissions",
    ", we argue that anomalies are generally characterized by a _ different _",
    "complexity than we would normally expect for a certain protocol .",
    "for example , if normally we expect only http traffic on port 80 outgoing and we now find sessions which have a much higher complexity , this may equally well be caused by a malicious intruder who is now running an encrypted session to the outside . in this specific example , the complexity has increased for malicious traffic .",
    "evans and barnett  @xcite compare the complexity of legal ftp traffic to the complexity of attacks against ftp servers . to achieve this they analyzed the headers of legal and illegal ftp traffic . for this they gathered several hundred bytes of good and bad traffic and compressed it using compress .",
    "our approach differs in that we use the entire packet or even entire tcp sessions .",
    "we use this as we believe that in the real world , it is hard to collect several hundred bytes of bad traffic from a single attack session using headers alone .",
    "attacks exploiting vulnerabilities in a server are often very short and will not cause any other malicious traffic on the same port .",
    "this is especially the case in non - interactive protocols such as http where all interactions consist of a request and reply only .",
    "kulkarni , evans and barnett  @xcite also try to track down denial of service attacks using kolmogorov complexity .",
    "they now estimate the kolmogorov complexity by computing an estimate of the entropy of 1 s contained in the packet .",
    "they then track the complexity over time using the method of a complexity differential .",
    "for this they sample certain packets from a single flow and then compute the complexity differential once . here , we always use compression and do not aim to detect ddos attacks .",
    "* we propose compression as a new tool in the initial analysis of internet worms .",
    "* we show that differences in the compression ratio of network sessions can help to distinguish different types of traffic .",
    "this leads to a simple form of anomaly detection which does not assume prior knowledge of their exact nature . *",
    "finally , we demonstrate that compression can help to discover novel attacks which are very similar to existing ones .      in section  [ ncd ] ,",
    "we take a brief look at the concept of normalized compression distance , which we will use throughout this paper .",
    "section  [ worms ] then shows how we can apply this concept to the analysis of internet worms . in section  [ traffic ]",
    "we examine how compression can be useful in the analysis of internet traffic .",
    "finally , in section  [ snort ] and section  [ snort2 ] we use these observations to construct two snort plugins to help recognize network anomalies .",
    "in this paper we use the notion of _ normalized compression distance _ ( ncd ) based on kolmogorov complexity  @xcite .",
    "informally , the kolmogorov complexity @xmath0 of a finite binary string @xmath1 is equal to the length of the shortest program which outputs @xmath1 .",
    "the kolmogorov complexity is in fact machine independent up to an additive constant .",
    "this means that it does not matter which type of programming language is used , as long as one such language is fixed .",
    "this is all we will need here .",
    "more information can be found in the book by li and vitanyi  @xcite .    what does this have to do with compression ?",
    "we can regard the compressed version of a string @xmath1 as a program to generate @xmath1 running on our `` decompressor machine '' .",
    "thus the kolmogorov complexity with respect to this machine can not be any larger than the length the compressed string .",
    "we thus estimate @xmath0 by compression : we take a standard compressor ( here bzip2 or zlib ) and compress @xmath1 which gives us @xmath2 .",
    "we then use @xmath3 in place of @xmath0 . in our case , the string @xmath1 will be the executable of a worm or the traffic data .    the normalized compression distance ( ncd ) of two string @xmath1 and @xmath4",
    "is given by @xmath5 more details about the ncd can be found in  @xcite .",
    "the ncd is a very intuitive notion : if two strings @xmath6 and @xmath7 are very similar , one `` says '' a lot about the other .",
    "thus given string @xmath6 , we can compress a string @xmath7 very well , as we only need to encode the differences between @xmath6 and @xmath7 .",
    "then the compressed length of string @xmath6 alone will be not very different from the compressed length of strings @xmath6 and @xmath7 together .",
    "however , if @xmath6 and @xmath7 are rather different , the compressed length of the strings together will be significantly larger than the compressed length of one of the strings by itself .",
    "for clustering a set of objects we compute the pairwise ncd of all objects in the set .",
    "this gives us a distance matrix for all objects .",
    "we then fit a tree to this matrix using the quartet method described in  @xcite .",
    "objects which appear close to each other in the tree , are close to each other in terms of the ncd .    to construct the trees displayed throughout this paper we make use of the complearn toolkit  @xcite .",
    "for information about networking protocols we refer to  @xcite .",
    "information about the different worms we analyzed can be found in the virus encyclopedia  @xcite .",
    "we now apply the notion of ncd to analyze the binary executables of internet worms . once we identified a malicious program on our computer",
    "we try to determine its relation to existing worms .",
    "many worms exist in a variety of different versions",
    ". often the author of a worm later makes improvements to his creation thereby introducing new versions .",
    "this was also in the case of the recent sasser worm .",
    "we call such a collection of different versions a family .",
    "the question we are asking now is : given a worm , are there more like it and which family does it belong to ?    for our tests , we collected about 790 different worms of various kinds : irc worms , vb worms , linux worms and executable windows worms .",
    "roughly 290 of those worms are available in more than one version .",
    "first of all , we examine the relations among different families of worms using clustering .",
    "our method works by computing the ncd between all worms used in our experiment .",
    "this gives us a distance matrix to which a tree is fit for visualization . in this section ,",
    "we use bzip2 as our compressor .      to gain some insight into the relations among several families of worms , we first cluster worms of completely different types . for this",
    "we make use of text based worms ( such as irc worms , labeled mirc and irc ) and worms whose names contain pif targeted at windows systems .",
    "worms prefixed with linux are targeted at the linux operating system .",
    "all other worms are aimed at windows systems and are binary .",
    "looking at figure  [ collection ] we see that text based worms have been clustered well together .",
    "we also see a split between binary and text based worms as expected .",
    "this in itself is of course not very interesting .",
    "nevertheless , this naive application of our method yielded some interesting surprises which caused us to completely reexamine our worm data .",
    "what is the linuxgodog worm among the text based worms ?",
    "upon closer inspection we discovered that unlike the other linux worms which were all binary executables , linuxgodog was a shell script , thus being too similar to the script based irc worms .",
    "a similar discovery was made when looking at the two windows worms fozer and netsp , which are both windows batch scripts .",
    "we also found out that spthjsgva was mislabeled , and is an irc worm very closely related to the ircspth series .",
    "in fact , manual inspection revealed that it must be another variant .",
    "similarly , ircdreamircvi was clustered with the other irc worms .",
    "it appeared that this was the only non - binary member of the ircdreamirc series .",
    "another interesting fact was revealed by clustering the alcaul worm .",
    "a large number of different alcaul worms were available , all in binary format .",
    "however during this test we accidentally picked the only one which was mime encoded and thus appears closer to text than to the binary worms .",
    "our test also puts binary linux worms closer together then binary worms for other systems .",
    "only linuxadm appears further apart .",
    "we attribute this to the fact that binaries of linux and windows are still not too far apart even if they are of different executable formats",
    ". worms of the same family are put together .",
    "we can for example see a clear separation between the ircspth and the ircsimpsalapim series of text based worms .",
    "however , the separation of the mimail and netres family shows that this approach is also applicable to binaries .",
    "the mydoom worm was initially thought to be an exception .",
    "the two versions of mydoom we obtained , were not as similar as other worms of equal families .",
    "closer examination , however , revealed that the mydoom.a we used was in fact a truncated version of the binary .",
    "in general , our initial overview clusters the different worm types well .      as text",
    "based worms are easy to analyze manually , we concentrate on binary executables . we first of all clustered a variety of windows worms , which were not upx compressed .",
    "surprisingly even binary worms cluster quite well , which indicates that they are indeed very similar .",
    "the compressor seems to find a lot of similarities that are not immediately obvious by manual inspection .",
    "figure  [ windowsworms ] shows that the two available sasser variants were clustered nicely together .",
    "the same goes for the two versions of nimda .",
    "this shows that classification by compression might be a useful approach .",
    "many worms found in the wild are compressed executables , where the compression is often modified to prevent decompression .",
    "this makes it much harder to obtain the actual binary of the worm . but without this binary , we can not compare text strings embedded in the executable or disassemble the worm to apply an analysis of the program flow .",
    "if a string is already compressed very well it is almost impossible to compress it much more .",
    "thus we expected initially that we would be unable to apply our compression based method with any success .",
    "surprisingly , however , we are still able to cluster upx compressed worms reasonably well .",
    "this indicates that upx , which allows the binary to remain executable , does not achieve the same strength of compression as bzip2 .",
    "figure  [ upxcompressed ] shows a clustering experiment with worms which found upx compressed initially .",
    "it shows that even though our method becomes less accurate , we still observe clustering , as for example in the case of the batzback series . for other worms , such as alcaul.q , clustering worked less well .",
    "this indicates that even if worms are upx compressed , we still stand a chance of identifying their family by simple compression .",
    "figure  [ decrypted ] shows the result of the clustering process , after removing upx compression .",
    "we now observe better results .",
    "however , it is not always possible to simply remove upx compression before the analysis of the worm .",
    "upx compression can be modified in such a way that the worm still executes , but decompression fails .",
    "this makes an analysis of the worm a lot more difficult .",
    "we therefore investigated how upx compression scrambling influences the clustering process .",
    "all worms in our next experiment were selected to be upx compressed and scrambled in the wild . of the alcaul series , only alcaul.r was scrambled .",
    "we included the other upx compressed alcaul worms , to determine whether having part of the family upx compressed and scrambled and part of it just plain upx compressed would defeat the clustering process .",
    "as figure  [ upxscramble ] shows , our method could be used to give a first indication to the family of the worm , even if it can not be upx decompressed without great manual effort .",
    "our alcaul.r worm which was scrambled clusters nicely with the unscrambled alcaul worms .",
    "also the lentin series is put together .",
    "finally , we examine existing windows programs and their relation to internet worms . for this we collected a number of small executables from a standard windows installation and clustered them together with various different types of worms .",
    "figure  [ legal ] depicts the outcome of our test .",
    "the legal windows programs in use where : net , netsh , cacls , cmd , netstat , cscript , debug.exe and command.com .",
    "surprisingly , our experiment shows most of the windows programs closely together .",
    "it even appears that programs with similar functionality appear closely related . only debug.exe and command.com are placed elsewhere in the tree , which we attribute to the fact that they have quite different functionality compared to the other programs .",
    "it would , however , be premature to conclude from this experiment that compression can always be used to distinguish worms from legal windows programs .",
    "our test included only a very limited selection of programs .",
    "however , it seems to suggest that programs with similar functionality are closely related . for example , codegreen is very close to codered , which may be due to the fact that it exploits the same vulnerability .",
    "we are now trying to guess the family of an unknown worm . determining the family of a worm can make further analysis a lot easier .",
    "again , we do not search for specifically selected patterns in the executables or apply an analysis of the actual program .",
    "instead , we simply use the ncd . to find the family of a worm ,",
    "we compute the ncd between the worm and all available binary worms .",
    "the best match @xmath8 is the worm which was closest to @xmath9 in terms of ncd .",
    "we then set the family of @xmath9 to @xmath8 s family .",
    "in short , we assign the new worm @xmath9 to family @xmath10 such that for @xmath11 where @xmath12 is the set of all test worms . to avoid bad matches",
    ", we assign the label `` unknown '' to a worm if @xmath13 .",
    "this value was determined by experiment from our data set and may need to be adjusted in a different situation .    in our first experiment",
    "we use 719 different worms , binary and non - binary .",
    "of 284 of these worms , we had more than one representative of each family available .",
    "for every worm , we determined its closest match among the remaining worms . in 179 of the 284 cases",
    "were matching to its family would have been possible , we have succeeded .",
    "we obtained 39 bad matches .",
    "this may seem to be a very low number of correct assignments .",
    "note , however , that we here matched all types of worms against each other and used a very large set of worms which occurred in only one version . in practice , one could restrict the search for the family of a worm to a more selected data set to obtain better results .",
    "for example , consider only worms which propagate via email .",
    "restricting our attention to worms labeled `` i - worm '' alone , we can obtain a better classification as shown in table  [ matchtab ] .",
    "we used 454 of such worms , where we had more than one representative of a family for 184 of these worms .",
    "now only 13 worms were classified incorrectly .    [",
    "cols=\"^,^,^\",options=\"header \" , ]     our experiment makes us quite hopeful that this simple method could be of practical use in the future .",
    "a lot of effort has been done to detect attackers on a network .",
    "next to a large number of available intrusion detection systems ( ids ) , intrusion detection is still a very active area of research .",
    "intrusion detection can be split into two categories : host based intrusion detection which focuses on detecting attackers on a certain machine itself and network based intrusion detection which aims to detect attackers by observing network traffic .",
    "many ids use a combination of both . in this section , however , we are only concerned with network based intrusion detection .",
    "the most commonly used approach in existing systems is signature matching .",
    "once a known attack pattern has been identified , a signature is created for it .",
    "later network traffic is then searched for all possible signatures . a popular open source ids system ( snort  @xcite ) , for example , offers this approach .",
    "clearly this works very well to identify the exact nature of the attack .",
    "however , it first of all requires a lot of manual effort : prior identification of malicious data and signature creation becomes necessary . secondly ,",
    "if the number of signatures is large it is hard to check them all on a high volume link . in section  [ complex ]",
    "we present a very simple compression based approach which does not suffer from these problems .",
    "finally , if a worm slightly alters its behavior it will no longer correspond to the signature and escape detection . in section  [ snort2 ]",
    "we examine an approach which is able to recognize attack patterns which are similar to existing ones .",
    "signature matching is sometimes also referred to as misuse detection , as it looks for specific patterns of abuse .",
    "we speak of anomaly detection if we are interested in identifying all kinds of anomalies , even caused by new and unknown forms of attacks .",
    "signature based schemes can also be used for anomaly detection .",
    "for example , an ids has a profile of typical behavior of each user .",
    "it then tries to match observed behavior to the profile .",
    "if the deviation is too large an alarm is triggered .",
    "various efforts have also been made to apply neural networks for anomaly detection .",
    "neural networks are often used to perform off - line analysis of data , as they are computationally very expensive .",
    "this makes approaches based on neural networks not very widespread so far . in the following ,",
    "we examine the use of compression as a tool to detect anomalies in network traffic .",
    "the simplest approach we use is to estimate the complexity of different types of traffic .",
    "we thereby try to answer the following question : examining sessions on a specific port , can we determine whether one kind of traffic has been replaced by another ? this may be useful to detect the success of certain remote exploits .",
    "for example , we may only observe ssh traffic on port 22 .",
    "after an attacker successfully exploited the ssh server he may obtain a remote shell on the same port .",
    "his session is then very different from a normal ssh session .",
    "the method we use here is again extremely simple . for different protocols we identify the average compression ratio of a session @xmath14 : we take the payload of a session @xmath14 and compress it using bzip2 .",
    "the length of the compressed session @xmath15 gives us an estimate for the complexity of @xmath14 , @xmath16 .",
    "we then calculate the compression ratio @xmath17 as @xmath18 intuitively , @xmath17 tells us how well @xmath14 compresses .",
    "if @xmath17 is small , @xmath14 compresses well and thus has a low complexity .",
    "if @xmath17 is close to 1 , @xmath14 can hardly be compressed at all and its complexity is very high .    in order to apply this method in practice",
    ", the average compression ratio of good sessions on a certain port needs to be determined . in order to find anomalies in a new session",
    ", we extract the session from network traffic and compress it .",
    "if its compression ratio deviates significantly from the average compression ratio of expected traffic , we conclude that an anomaly has occurred .    for the following comparison , traffic",
    "was collected on a small site providing web , email and shell services to about 10 users and an adsl uplink .",
    "the tag `` nc '' is used for terminal interactions .",
    "the payload of sessions was extracted into separate files using chaosreader and compressed using bzip2 .",
    "we then calculated the compression ratio of each file . from this",
    "we computed the average compression ratio and standard deviation of this ratio of all files belonging to a certain protocol .",
    "as expected the purely text based protocols , such as irc and nc compress very well .",
    "protocol sessions that carry encrypted data or binary data which is usually already compressed , on the other hand , can not be compressed very well .",
    "for example , ssh and imaps sessions , carrying an encrypted payload , hardly compress at all .",
    "neither do http and torrent sessions which carry compressed files .",
    "why does smtp traffic compress so badly ?",
    "closer inspection revealed that most captured smtp sessions carried compressed viruses instead of text messages .",
    "it may therefore be desirable to examine only the non - data part of an smtp session .",
    "we see that the standard deviation of smtp traffic is quite high , which is caused by the fact that emails containing compressed attachments compress muss less well than plain text messages .",
    "this initial test shows that this method may well be applicable to separate protocols which differ greatly in their complexity .",
    "for example , we could tell an irc session from binary web traffic .",
    "likewise , we could identify a terminal interaction from the background of ssh traffic .",
    "however , this method is unsuited for distinguishing protocols for file transfer or protocols carrying encrypted data .",
    "we furthermore note that averages for web and smtp traffic may vary greatly depending on the web server accessed . therefore averages would need to be determined for every site individually .",
    "we also hope to use this method to detect new and unknown protocols an attacker may use as long as their compression ratio differs from the average compression ratio we expect .      in order to test for complexity differences ,",
    "we provide the compress plugin for the popular open - source ids system snort  @xcite .",
    "we can use it to specify a lower and upper limit on the allowed compression ratio .",
    "if the observed traffic data falls outside this window , an alarm is triggered .",
    "the following rule will trigger an alarm if the compressibility of traffic on port 22 drops below 0.9 and use zlib for compression .",
    "alert tcp $ home_net any -@xmath19 any 22 ( msg:``low complexity on port 22 '' ; compress : morethan 0.9,zlib ; flow : to_client , established ; classtype : bad - unknown ; sid:2565 ; rev:5 ; )    in this example no explicit upper limit is given , so the default value of 2 will be used .",
    "the compression ratio can become larger than 1 , if the input is completely incompressible and will actually be enlarged by the compressor . the compress plugin takes the following comma delimited arguments :    * morethan @xmath20@xmath1@xmath19 : legal traffic has a compression ratio of more than @xmath1 , where @xmath1 is a number between 0 and 1 . * lessthan @xmath20@xmath1@xmath19 : legal traffic has a compression ratio of less than @xmath1 . * @xmath21 : type of compressor to use .",
    "current values are zlib for gzip style compression and rle for a simple simulation of runlength encoding .      in order to determine whether the observed network traffic is similar to an existing attack pattern , we again make use of the normalized compression distance ( ncd ) from section  [ ncd ] .",
    "if the ncd between a known attack pattern and the observed traffic is small , we conclude that a similar attack is in progress .",
    "this method is used by the ncd plugin . since single packets",
    "can be very small , it makes sense to use the ncd plugin in combination with stream4 tcp stream reassembly and only examine fully reassembled tcp sessions .    in the following simple example , we have recorded a session of an attack using an older vulnerability of apache using php 3.0.15 on freebsd .",
    "this used to be widely available exploit with the name phploit.c  @xcite .",
    "this exploit comes with different options , as to whether a shell should be opened on the vulnerable host on a different port following the attack , or whether a shell should be executed directly . in our recorded session ,",
    "we used the option of binding a shell to another port .",
    "we then made the following entry in our snort configuration :    alert tcp $ home_net any -@xmath19 webserver 80 ( msg:``close to phploit attack . '' ; flow : only_stream ; ncd : dist 0.8 , file recordedsession ; classtype : bad - unknown ; sid:2566 ; rev:5 ; )    this entry tells snort to trigger an alarm on all tcp sessions which have an ncd of less than 0.8 to the data contained in the file recordedsession .",
    "a new attack using the same options triggered this rule with an ncd of 0.608 to the recorded session . executing the attack with the option to execute a shell directly also triggered this rule with an ncd of 0.638 . mirroring the entire website on the test server did not result in any false positives .",
    "we have thus succeeded in recognizing the new , but slightly different attack . whereas the above variation on the attack could have been easily recognized by selecting a different pattern to look for initially , it nevertheless illustrates that the ncd may indeed be very useful in the detection of new attacks .",
    "selected patterns are typically very short , which can make it much easier to escape detection by creating a small variation of the attack .",
    "the plugin currently makes use of the zlib library for compression .",
    "other compression methods would be possible .",
    "it currently takes a single argument : dist @xmath20@xmath1@xmath19 , where @xmath1 is maximum safe distance before the rule is triggered .",
    "we analyzed the binary executables of worms of different families and clustered them by family .",
    "our analysis shows that many worms cluster well .",
    "our method even performs reasonably well , if the worms are upx compressed and the compression has been scrambled , which makes conventional analysis much harder .",
    "this indicates that our method may be a very useful tool in the initial analysis of new found worms in the future .",
    "many improvements are possible .",
    "different compression methods may give better results .",
    "secondly , one could pre - classify worms into email viruses , internet worms , irc worms and vb scripts . in section  [ classifyworms ] , we showed that restricting ourselves to worms labeled `` i - worm '' already gave better results . right now",
    "our aim was to provide a tool for the analysis of worms .",
    "it may be interesting see how this method can be incorporated in an automated virus scanner for email .",
    "we showed that different types of traffic have different complexity .",
    "this might be a simple and effective tool to distinguish between legal and illegal traffic on the same port provided the complexity of the traffic differs largely .",
    "it does not require a priori knowledge of specific patterns which occur only in specific types of traffic .",
    "the compress plugin for snort allows the detection of potentially malicious packets and sessions which fall outside the specified compressibility window",
    ". it would be interesting to see how this method performs under high load .",
    "our simple approach also compresses traffic only once .",
    "a better performance may be achieved by compressing traffic in a continuous fashion .",
    "some initial experiments which did not make use of snort showed this to be rather promising .",
    "compression is an expensive operation , but so is pattern matching . using efficient and simulated compression may outperform matching a large pattern list .    using the normalized compression distance ( ncd ) , we can detect anomalies similar to existing ones .",
    "the ncd plugin for snort can sound an alarm , when the observed session is too close to a given attack session in terms of the ncd .",
    "this comparison is expensive .",
    "nevertheless , we believe that our approach could be useful to detect new variations of attacks initially .",
    "once such a variation has been recognized , new patterns can be extracted to be used in conventional intrusion detection systems .",
    "our method seems promising and leaves room for further exploration : in this paper , we have only made use of standard compression programs .",
    "this also limits us to comparing packets and sessions exceeding a certain size so that they can still be compressed to a smaller size by these programs .",
    "perhaps a compression program specifically targeted at compressing small packets would give better results .",
    "it would also be possible to create a faster version of an existing compressor by merely simulating compression , because we never want to decompress again .",
    "finally , our method can be defeated by an attacker who intentionally alters the complexity of the traffic he generates .",
    "for example , he may interleave random with the actual data , to artificially increase the complexity of this session",
    ". nevertheless , we believe that there are many scenarios where this is not possible or makes an attack considerably more difficult .",
    "we thank scott a. mcintyre and alex le heux for valuable advise .",
    "thanks also to the people who helped to collect worm data : anthony aykut , lukas hey , jorrit kronjee , laurent oudot , steven de rooij and donnie werner .",
    "the author acknowledges support from the eu fifth framework project resq ist-2001 - 37559 and the nwo vici project 2004 - 2009 ."
  ],
  "abstract_text": [
    "<S> internet worms have become a widespread threat to system and network operations . in order to fight them more efficiently , </S>",
    "<S> it is necessary to analyze newly discovered worms and attack patterns . </S>",
    "<S> this paper shows how techniques based on kolmogorov complexity can help in the analysis of internet worms and network traffic . using compression , different species of worms </S>",
    "<S> can be clustered by type . </S>",
    "<S> this allows us to determine whether an unknown worm binary could in fact be a later version of an existing worm in an extremely simple , automated , manner . </S>",
    "<S> this may become a useful tool in the initial analysis of malicious binaries . </S>",
    "<S> furthermore , compression can also be useful to distinguish different types of network traffic and can thus help to detect traffic anomalies : certain anomalies may be detected by looking at the compressibility of a network session alone . </S>",
    "<S> we furthermore show how to use compression to detect malicious network sessions that are very similar to known intrusion attempts . </S>",
    "<S> this technique could become a useful tool to detect new variations of an attack and thus help to prevent ids evasion . </S>",
    "<S> we provide two new plugins for snort which demonstrate both approaches . </S>"
  ]
}
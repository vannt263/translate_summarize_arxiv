{
  "article_text": [
    "due to the tight coupling among the cyber and the physical cores in many cyber - physical systems , it is imperative to develop systematic design principles for controllers with limited communication and processing resources . both the areas of control with communication constraints and control with limited and time - varying processor availability have accordingly received much attention .",
    "control design in the presence of practical communication channels and protocols has been studied in the area of networked control systems .",
    "of particular interest to the present work is the literature on control across analog erasure channels ; see , e.g. ,  @xcite . apart from arising from data transmission across a wireless channel , data loss may also arise due to congestion in a communication network , possibly transmitted by a control loop . to minimize this source of data loss",
    ", one can conceive event triggered communication schemes in which sensors transmit information only if the system state exceeds a certain bound ; see , e.g. ,  @xcite .",
    "recently , work has also been done on designing event triggering rules to ensure stability in the face of data dropouts .",
    "however , most works are restricted to single integrator dynamics  @xcite or are numerical studies  @xcite .    on the other hand ,",
    "various works have also considered the impact of limited or time - varying processing power on closed - loop control  @xcite .",
    "interestingly , event - triggered and self - triggered updates of the control inputs have also been proposed to ensure less demand on the processor on average by calculating the control input on demand  @xcite .",
    "the direction of anytime control has also shown promise  @xcite .",
    "such algorithms calculate a coarse control input even with limited processing resources and refine the input as more processing resources become available .",
    "the quality of control inputs is thus time - varying , but no control input is obtained only rarely .        notwithstanding the advances discussed above , relatively few works have considered control design under both limited communication and processing resources",
    ". optimal control design for arbitrary non - linear processes under communication and processing constraints is likely a challenging problem , since certainty equivalence would not hold in general  @xcite .",
    "accordingly , in the present note we consider a pre - designed control law , and focus on the implementation of this controller in the presence of both communication and processing limitations . as depicted in fig .",
    "[ fig : scheme ] , we consider a discrete - time non - linear plant being controlled across a communication network that stochastically erases data transmitted across it . to reduce congestion in the network",
    ", the sensor employs an event triggered communication strategy .",
    "however , due to time - varying availability of the processing resources , it is not guaranteed that the processor can calculate a control input at all time steps when the sensor transmits ( even if the network does not erase the data ) . to maximally utilize the processing resources",
    ", the controller employs an anytime control algorithm .",
    "under such a setting , we analyze stochastic stability of the closed loop .",
    "our main stability results are stated in terms of an inequality that relates open - loop growth of the plant state , packet erasure probability , and parameters of the processor availability model . for the particular case where processing resources are available at every time step",
    ", our result reduces to a sufficient condition for stochastic stability of non - linear control in where sensor communicates according to an event - triggering condition across an analog i.i.d.erasure link",
    ". this may be of independent interest .",
    "[ [ sec : notation ] ] notation + + + + + + + +    we write @xmath0 for @xmath1 and @xmath2 for @xmath3 .",
    "@xmath4 represents the real numbers and @xmath5 .",
    "the @xmath6 identity matrix is denoted via @xmath7 , @xmath8 is the @xmath9 all - zeroes matrix , @xmath10 , and @xmath11 .",
    "the notation @xmath12 stands for @xmath13 , where @xmath14 .",
    "we adopt the conventions @xmath15 and @xmath16 , if @xmath17 and irrespective of @xmath18 .",
    "the superscript @xmath19 refers to transpose .",
    "the euclidean norm of a vector @xmath20 is denoted via @xmath21 .",
    "a function @xmath22 is of _ _ class-__@xmath23 ( @xmath24 ) , if it is continuous , zero at zero , strictly increasing , and unbounded .",
    "the probability of an event @xmath25 is denoted by @xmath26 and the conditional probability of @xmath25 given @xmath27 by @xmath28 .",
    "the expected value of a random variable @xmath20 given @xmath27 is denoted by @xmath29 , while @xmath30 refers to the unconditional expectation .",
    "the expression @xmath31 denotes that the random variable @xmath20 has probability distribution @xmath32 and @xmath33 denotes the expectation under probability distribution @xmath32 .",
    "we consider non - linear ( and possibly open - loop unstable ) plants , sampled periodically with sampling interval @xmath34 ( see fig .  [",
    "fig : scheme]),@xmath35 where @xmath36 is the plant state , and @xmath37 with @xmath38 is the ( possibly constrained ) plant input .",
    "the initial state @xmath39 is arbitrarily distributed .",
    "the plant is equipped with a sensor , which has direct access to the plant state at the sampling instants @xmath40 .    to save on communication expenditure",
    ", the sensor adopts an event - triggered transmission strategy , in which the sensor transmits only at instances @xmath41 , where @xmath42 .",
    "this transmission is across an erasure channel which introduces random packet dropouts . to keep communication costs low",
    ", the controller does not send acknowledgments back to the sensor and no re - transmissions are allowed .",
    "we introduce two discrete random processes , namely @xmath43 and @xmath44 .",
    "the binary transmission success process @xmath43 describes packet loss : a successful transmission at time @xmath45 is denoted by @xmath46 and a packet erasure by @xmath47 . the ternary process @xmath44 incorporates the event - based transmission rule , @xmath48",
    "thus , @xmath49 . we assume that @xmath50 is known to the controller at time @xmath45 through monitoring of received energy in the sensor transmission band .",
    "transmission outcomes trigger the functions carried out by the controller .",
    "the scalar @xmath51 is a design parameter , which determines communication channel utilization and control performance .",
    "elucidating the trade - off between these quantities is one of the motivations of the present work .",
    "when implementing discrete - time control systems , it is generally assumed that the processing resources available to the controller are such that the desired control law can be evaluated within a fixed time - delay , say @xmath52 .",
    "however , in practical networked and embedded systems , the processing resources available for control calculations may vary and , at times , be insufficient to generate a control input within the prescribed time - delay @xmath53 @xcite . in the sequel we will further develop our anytime control algorithm of @xcite to seek favorable trade - offs between processor and communication availability , and control performance .",
    "we will assume that the plant model  ( [ eq : process ] ) is globally stabilizable via state feedback .",
    "[ ass : clf ] there exist @xmath54 , @xmath55 , @xmath56 , and a constant @xmath57 , such that @xmath58    to encompass processing constraints , we will assume that the controller needs processor time to carry out mathematical computations , such as evaluating @xmath59 .",
    "however , input - output operations and simple operations at a bit level , e.g. , writing data into buffers , shifting buffer contents and setting values to zero , do not require processor time .    before proceeding we note that a direct implementation of @xmath59 used in assumption  [ ass : clf ] , when processing resources are time varying , sensor transmissions are event - triggered , and the sensor transmissions are affected by dropouts , results in the _ baseline event - based algorithm _ @xmath60 where the symbol @xmath61 with @xmath40 denotes the plant input which is applied during the interval @xmath62 . whilst the baseline algorithm is intuitive ,",
    "our previous works@xcite suggest that it will be outperformed by more elaborate control formulations .",
    "the anytime algorithm is based on the following idea : control calculations are triggered whenever a new measurement is successfully received .",
    "however , the precise number of control inputs calculated depends on the processing resources available . at time intervals",
    "when the controller is provided with more processing resources than are needed to evaluate the current control input , the algorithm calculates a sequence of tentative future plant inputs . the sequence is stored in a local buffer and may be used when , at some future time steps",
    ", the processor availability precludes any control calculations even though new state information is received .    in our recent work@xcite",
    ", we analyzed this algorithm for the simpler case where the controller has direct access to plant state @xmath63 at all instants @xmath64 . in the present work",
    "we alleviate this assumption by considering that sensor transmissions are event - triggered and through a communication channel which introduces random dropouts .",
    "in addition , to save energy and processing resources , the controller is event - triggered .",
    "more precisely , the actions taken by the controller are guided by the value of @xmath50 and the processor availability .    if @xmath65 , then the controller uses @xmath63 to calculate tentative control values , provided the processor is available for control . this sequence will be stored in a buffer .",
    "if the processor is not available or @xmath66 , then the controller does not do any calculations and the plant input is provided by previously calculated buffered values ( if available ) .",
    "the instances @xmath67 refer to situations where the plant state is at the desired region @xmath68 , and @xmath63 is not sent to the controller . in this scenario ,",
    "the plant input is set to zero , the buffer is emptied , and the controller is switched off until the system state moves out of the desired region @xmath68 and a new state measurement is received . fig .",
    "[ fig : triggering ] outlines the proposed algorithm . in this figure , @xmath69 where @xmath70 denote the buffer states for a given buffer size @xmath71 and each @xmath72 , @xmath73 .     during the time interval @xmath74 . ]    ' '' ''    1 .   at time @xmath75 , + set @xmath76 , @xmath77 2 .",
    "[ step : timek ] if @xmath78 , + then + switch @xmath50 + case @xmath79 , + set @xmath80 , @xmath81 ; + goto step 4 ; + case @xmath82 , + set @xmath81 , @xmath83 ; + goto step 4 ; + otherwise + input @xmath63 ; + set @xmath84 , @xmath81 , @xmath83 ; + end + end 3 .",
    "[ step : repeat2 ] while `` sufficient processor time is available '' and @xmath85 and time @xmath86 , + if @xmath87 , then + output @xmath88 ; + set @xmath80 ; + end + set @xmath89 ; + if `` sufficient processor time is not available '' or @xmath90 , then + goto step 5 ; + end + set @xmath91 , @xmath92 ; + end 4 .   if @xmath87 , then + output @xmath93 ; + end 5 .",
    "set @xmath94 and goto step 2 ;    ' '' ''    for future use , we will denote by @xmath95 the total number of iterations of the while - loop which are carried out during the interval @xmath96 .",
    "thus , as described above , if @xmath97 , then the entire sequence of tentative controls is @xmath98 and the plant input is set to @xmath93 .",
    "if @xmath99 , then the plant input depends on the variable @xmath50 .",
    "if @xmath100 ( i.e. , @xmath63 does not lie inside the desired region ) , then @xmath61 is taken as the first @xmath101 elements of the shifted state @xmath102 . if , on the other hand , @xmath67 indicating that @xmath103 , then the buffer is emptied and the plant input is set to zero , see fig .",
    "[ fig : triggering ]",
    ".    algorithm a@xmath104 amounts to a dynamic state feedback policy with internal state variable @xmath105 which provides the plant input @xmath106 and suggested plant inputs at future time steps .",
    "if new state information is received and more processor time is available , a longer trajectory of control inputs is calculated and stored in the buffer .",
    "if the buffer runs out of tentative plant inputs , then actuator values are set to zero .",
    "the algorithm does not require prior knowledge of future processor availability and hence can be employed in shared systems where the controller task can be preempted by other computational tasks at the processor .",
    "for our subsequent analysis , it is convenient to investigate how many values in the state @xmath105 stem from evaluating @xmath59 , @xmath107 . as in@xcite",
    ", we will refer to this value as the _ effective buffer length _ ( at time @xmath45 ) , and denote it as @xmath108 with @xmath109 .",
    "it is easy to see that for all @xmath64 we have @xmath110 to investigate stability , we make the following assumptions :    [ ass : iid ] the sampling time of the plant  ( [ eq : process ] ) is such that processor availability for control at different time - instants is independent and identically distributed ( i.i.d . ) .",
    "thus , the process @xmath111 has conditional probability distribution @xmath112 where @xmath113 are given and with @xmath114 . for other realizations of @xmath50 ,",
    "no plant inputs are calculated , thus , @xmath115 .",
    "@xmath116    [ ass : dropouts ] the binary transmission success process @xmath43 has conditional probabilities @xmath117 , @xmath118.@xmath116    [ ass : bound_prob ] there exists @xmath119 such that @xmath120 where @xmath121 and @xmath122 are as in  ( [ eq:3 ] ) .",
    "further , @xmath123.@xmath116    it is worth noting that , by allowing for @xmath124 , assumption  [ ass : bound_prob ] does not require that the open - loop system @xmath125 be asymptotically stable .",
    "further , note that assumptions  [ ass : clf ] and  [ ass : bound_prob ] are stated in terms of the same function @xmath126 , see also ( * ? ? ?",
    "* section iv - a ) .    to go beyond stability and investigate stationarity , it is convenient to impose the following assumptions on the control policy @xmath59    [ ass : continuity ] the control law @xmath59 in  ( [ eq:3 ] ) is such that @xmath127 for all @xmath128 and @xmath59 is continuous on @xmath129 .",
    "if the baseline algorithm is used and assumption  [ ass : iid ] holds , then @xmath130 the following result establishes conditions on system parameters which ensure that the closed loop  ( [ eq:10 ] ) is stable in a stochastic sense .",
    "[ thm : baseline ] consider  ( [ eq:10 ] ) and define @xmath131 .",
    "suppose that assumptions  [ ass : clf ] to  [ ass : bound_prob ] hold and that @xmath132 where @xmath133 is the closed - loop bound in  ( [ eq:3 ] ) , @xmath134 is the bound in  ( [ eq:20 ] ) , @xmath135 is the transmission success probability , and @xmath136 is the probability of the processor not being available for control .",
    "then for all @xmath137 , @xmath138    note that , for i.i.d .",
    "processor and channel availabilities @xmath139 in  ( [ eq:10 ] ) is markovian .",
    "this can be verified by noting that conditioning on @xmath63 makes the event outcome @xmath50 depend on @xmath140 only . to analyze stochastic stability using lyapunov functions ( see , e.g.,@xcite )",
    ", we use the law of total expectation to write @xmath141 if we now use ( [ eq:13 ] ) ,  ( [ eq:3 ] ) ,  ( [ eq:20 ] ) and the definition of @xmath142 , then : @xmath143 for @xmath144 , @xmath39 is received . using  ( [ eq:20 ] ) and",
    "( [ eq:10 ] ) , we have @xmath145 now , if @xmath146 , then @xmath147 , thus  ( [ eq:6 ] ) and  ( [ eq:8 ] ) provide @xmath148 further , since @xmath149 ( see  ( [ eq : baseline_stability ] ) ) and @xmath150 for all @xmath151 , we have @xmath152 on the other hand , if @xmath153 , then ( in view of assumption  [ ass : dropouts ] ) , @xmath154 , and @xmath155 .",
    "thereby , substitution of  ( [ eq:8 ] ) and  ( [ eq:14 ] ) into  ( [ eq:6 ] ) provides : @xmath156 expressions  ( [ eq:17])([eq:18 ] ) lead to : @xmath157 consequently , proposition 3.2 of @xcite , and  ( [ eq:3 ] ) give @xmath158 for all @xmath159 . using the law of total expectation and  ( [ eq:3 ] ) yields the first inequality .",
    "the second follows from assumption  [ ass : bound_prob ] .",
    "it is worth noting that whilst the condition  ( [ eq : baseline_stability ] ) is independent of the size of @xmath142 , the ultimate bound is increasing in @xmath160 .",
    "we can also consider two special cases .",
    "if @xmath161 and @xmath162 , so that the sensor transmits at every instant @xmath40 and the communication channel does not introduce any dropouts , ( [ eq : baseline_stability ] ) reduces to @xmath163 , thus recovering our earlier result ( * ? ? ?",
    "* thm.1 ) .",
    "if the processor is available at every time - step ( i.e. , @xmath164 ) , then the situation amounts to event - based control for non - linear systems using an erasure channel . in this case , the sufficient condition  ( [ eq : baseline_stability ] ) becomes @xmath165 .",
    "[ stocbaseline ] consider  ( [ eq:10 ] ) , suppose that assumptions  [ ass : clf ] to  [ ass : continuity ] hold and that  ( [ eq : baseline_stability ] ) holds .",
    "then , there exists an invariant probability measure for @xmath139 .",
    "furthermore , under every such invariant probability measure @xmath166 , @xmath167    let @xmath168 denote the set of probability measures on @xmath129 and define for every borel @xmath169 , @xmath170 such that @xmath171 forms an expected empirical occupation measure sequence .",
    "we then have , @xmath172 let @xmath173 . by theorem  [ thm :",
    "baseline ] , we have that @xmath174 and the subsequence @xmath175 are uniformly bounded by some @xmath176 .",
    "define @xmath177 .",
    "since @xmath178 is monotone and unbounded , by an application of markov s inequality , we have @xmath179 thus , @xmath180 and hence for every @xmath181 , there exists a compact set @xmath182 such that @xmath183 .",
    "the sequence @xmath184 is , hence , a tight sequence with a converging subsequence @xmath185 converging to some @xmath186 . by  ( [ eq:10 ] ) , if @xmath187 the control action is zero and outside @xmath68 , either zero control is applied or @xmath188 is applied .",
    "since @xmath59 is continuous and is zero inside @xmath68 ( see assumption  [ ass : continuity ] ) , the markov chain is weak feller .",
    "is ( weak ) feller if @xmath189 is continuous in @xmath190 , for every continuous and bounded function @xmath191 .",
    "] consequently , it can be shown that every limit of such a subsequence is invariant ( see , e.g. , ( * ? ? ?",
    "12 ) ) and satisfies @xmath192 . by theorem  [ thm :",
    "baseline ] , by increasing @xmath193 , @xmath194 can be taken to be arbitrarily close to @xmath195 .",
    "the analysis of the event - based anytime algorithm is more involved than that of the baseline system  ( [ eq:10 ] ) .",
    "first , due to buffering , @xmath139 will in general not be a markov process .",
    "further , the distribution of @xmath44 is difficult to derive for general plant models .",
    "this makes the approaches of @xcite insufficient to treat the present case .    for ease of exposition",
    ", we assume that the initial effective buffer length , @xmath196 , and denote the time steps where @xmath197 via @xmath198 , where @xmath199 and @xmath200 , @xmath201 we also describe the amount of time steps between consecutive elements of @xmath202 via the process @xmath203 , where @xmath204 .",
    "it is easy to see that @xmath205 whereas @xmath206 , @xmath207 and @xmath208 .",
    "in contrast to the cases examined in @xcite , due to the event - triggering mechanism , @xmath203 is , in general , not i.i.d .",
    "in fact , the distribution of @xmath209 depends on @xmath210 and is difficult to characterize . to study stability of the event - based anytime algorithm",
    ", we will develop a state - dependent random - time drift condition .",
    "our first result , states that whilst @xmath139 is in general not markovian , the state sequence _ at the time steps @xmath211 _ , is a markov process .",
    "[ lem : markov ] consider  ( [ eq : process ] ) controlled via algorithm a@xmath104 and suppose that assumptions  [ ass : iid ] and  [ ass : dropouts ] hold",
    ". then @xmath12 is markovian.@xmath116    the definition of @xmath212 gives that @xmath213 we have @xmath214 @xmath215 , @xmath216 .",
    "thus , the plant state at time @xmath217 depends only on @xmath210 and the sample paths @xmath218 and @xmath219 .",
    "the result follows since @xmath111 and @xmath43 are i.i.d .",
    "the following result provides a sufficient condition for stochastic stability of the closed loop when the event - based anytime control algorithm of section  [ sec : event - driven - anytime ] is used over an erasure channel .",
    "[ thm : anytime ] suppose that assumptions  [ ass : clf ] to  [ ass : bound_prob ] hold and define @xmath220 if algorithm a@xmath104 is used and @xmath221 , then @xmath222    we first note that for all @xmath223 and @xmath224 , @xmath225 and @xmath226 . therefore , the function @xmath227 can be bounded by using  ( [ eq:3 ] ) and  ( [ eq:20 ] ) , leading to @xmath228 to account for event - based transmission , we consider instances where the buffer is emptied triggered by @xmath67 . at these instances ,  ( [ eq:17a ] )",
    "holds ; further , @xmath229 .",
    "thus , @xmath230 by using the law of total expectation twice , we thus obtain , @xmath231 with @xmath25 as in  ( [ eq:19 ] ) and where , to derive the last equality , we have used assumption  [ ass : iid ] . since @xmath12 is markovian , ( * ? ? ? * prop .  3.2 ) yields that @xmath232 guarantees @xmath233 now , since  ( [ eq:17a ] ) holds , by a method similar to the one used in the proof of ( * ? ? ?",
    "* thm.1 ) , we can establish the ( admittedly loose ) bound : @xmath234 using the law total expectation ,  ( [ eq:3 ] ) and assumption  [ ass : bound_prob ] gives  ( [ eq:25 ] ) .",
    "the above result establishes a sufficient condition for the system to be stochastically stable .",
    "the quantity  ( [ eq:19 ] ) is stated in terms of a conditional distribution of @xmath209 , which can be characterized as follows :    [ lem : delta ] suppose that assumptions  [ ass : iid ] and [ ass : dropouts ] hold and that algorithm a@xmath104 is used .",
    "we then have @xmath235 where @xmath236 and @xmath237 . in  ( [ wann ] ) ,",
    "the entries of the matrix @xmath238 $ ] , @xmath239 are @xmath240 , @xmath241 ; and @xmath242 , @xmath243 @xmath116    we first note that our focus is on the time sequences of the form @xmath244 where @xmath223 , @xmath245 and where @xmath246 , @xmath247",
    ". given assumptions  [ ass : iid ] and  [ ass : dropouts ] and the buffering mechanism described in section  [ sec : event - driven - anytime ] , it follows that @xmath248 during every interval @xmath249 , @xmath245 , is a homogeneous markov chain . the process @xmath209 then amounts to the first return times to @xmath82 of this finite markov chain .",
    "to characterize the latter , we need to evaluate the transition probabilities @xmath250 . without loss of generality",
    ", we will set @xmath251 .",
    "we begin by considering transitions from @xmath252 to @xmath82 : @xmath253 for @xmath254 , we have @xmath255 .",
    "the buffer length diminishes by one for the scenarios considered below : @xmath256 the other transitions are related to when @xmath257 , for @xmath258 .",
    "here we have : @xmath259 the derivation of  ( [ wann ] ) now follows as in ( * ? ? ?",
    "* lemma 2 ) by setting up a recursion on the first passage time of state @xmath260 to @xmath82 and then considering the transitions away from @xmath82 .    as a consequence of lemma  [ lem : delta ] , @xmath25 in  ( [ eq:19 ] ) can be written as : @xmath261 and the stability condition in theorem  [ thm : anytime ] , @xmath262 , becomes @xmath263 which is independent of the size of @xmath68 .",
    "sufficient conditions for stationarity can be stated as follows :    [ stocanytime ] suppose that assumptions  [ ass : clf ] to  [ ass : continuity ] hold . if algorithm a@xmath104 is used and @xmath232 , then there exists an invariant probability measure for @xmath12 as well as for the aggregated markov process , @xmath264}\\}_{k \\in \\mathbb{n}}$ ] , where @xmath265 } { \\triangleq}\\{x(k),x(k-1),\\cdots , x(k-\\lambda+1)\\}.\\ ] ] furthermore , under every invariant probability measure @xmath166 , @xmath266@xmath116    first note that if @xmath97 , then @xmath61 is determined by the current state .",
    "if the processor is not available , then either @xmath61 has been determined by the states which are at most @xmath267 time stages old , or @xmath268 .",
    "since the processor availability is independent of the state , the stochastic process @xmath269}\\}$ ] is markovian .",
    "let @xmath270}$ ] . from assumption",
    "[ ass : continuity ] , @xmath271 is also weak feller .",
    "we first invoke theorem 2.1 in @xcite with @xmath212 containing the sequence of stopping times .",
    "since @xmath272 and the sampled chain is weak feller , it follows that @xmath12 admits an invariant probability measure .",
    "define @xmath273 .",
    "now , note that by ( [ eq:21d ] ) , with @xmath232 , @xmath274 , @xmath275 .",
    "thus , @xmath276 , @xmath275 , and since @xmath126 is monotone increasing and by assumption [ ass : bound_prob ] , there exists a compact set @xmath277 such that for @xmath278 , @xmath279 since @xmath280 is bounded from below outside @xmath68 , and @xmath281 for @xmath282 , and that ( [ driftcriterion2 ] ) implies that for some @xmath283 @xmath284 it follows that @xmath285 .",
    "finally , by assumption [ ass : bound_prob ] , if @xmath286 then @xmath287 } \\in \\bar{\\mathcal{s}}$ ] where @xmath288 is a compact set .",
    "thus , theorem 2.2 in @xcite implies that there exists an invariant probability distribution , @xmath166 , for @xmath271 .    since ( [ bound0 ] ) holds , with @xmath289 , following arguments similar to the proof of theorem 2.2 of @xcite , for every realization of @xmath290 , it follows that @xmath291 thus , @xmath292 .",
    "applying fatou s lemma , we obtain @xmath293 then , by the monotone convergence theorem , by letting @xmath294 , @xmath295    thus , there exists an invariant probability measure both for the original chain and for the sampled chain ; under every such invariant probability measure @xmath166 , @xmath296 .",
    "( solid line ) and @xmath297 ( dashed ) . ]    . ]",
    "we first compare the stability conditions derived for a specific case .",
    "suppose that the buffer length is given by @xmath298 , whereas @xmath299 , @xmath300 , and @xmath301 .",
    "the stability region boundaries , see  ( [ eq : baseline_stability ] ) and  ( [ eq:19 ] ) , in terms of @xmath134 and @xmath302 are depicted in fig .  [ fig : boundaries ] .",
    "it can be seen that the guaranteed stable region ( under the curve ) provided by our results is larger when using algorithm a@xmath104 than when using  ( [ eq:4 ] ) .",
    "next , we consider an open - loop unstable constrained plant model of the form  ( [ eq : process ] ) , but with additive noise : @xmath303 where @xmath304$,}\\\\      10,&\\text{if $ \\mu>10 $ } ,    \\end{cases}\\ ] ] see ( * ? ? ?",
    "* example 2 ) . the initial condition @xmath39 and the disturbance @xmath305 are zero - mean i.i.d .",
    "gaussian with unit covariance .",
    "the control policy @xmath59 is taken as @xmath306^t$ ] , @xmath307 .",
    "if we choose @xmath308 , then direct calculations give that @xmath309 thus , assumption  [ ass : clf ] holds with @xmath310 , and @xmath311 . processor availability and @xmath267",
    "are taken as above , but we now set @xmath312 .",
    "performance is evaluated through the empirical cost @xmath313 and the channel utilization  ( % ) , calculated as @xmath314 by averaging over @xmath315 realizations , fig .",
    "[ fig : cost ] is obtained . as can be seen in that figure ,",
    "the proposed event - based anytime control algorithm gives better trade - offs between empirical cost and channel utilization .",
    "this work considered the control of a non - linear process with both communication and processing constraints .",
    "a sensor node transmits data to the controller across a channel that stochastically erases data .",
    "the control algorithm is executed over a processor that can provide only limited , time - varying and a priori unknown processing resources . to reduce the communication frequency",
    ", the sensor utilizes an event - triggered scheme .",
    "similarly , to better utilize the processor availability , the control input is calculated by using an anytime control algorithm . for the resulting system , we present stochastic stability and stationarity results .",
    "numerical studies illustrate that significant performance gains can be obtained by using the proposed algorithm .",
    "future work includes the extension of the analysis to noisy systems , and establishing further stability properties such as ergodicity and rates of convergence to equilibrium .",
    "l.  k. mcgovern and e.  feron , `` closed - loop stability of systems driven by real - time dynamic optimization algorithms , '' in _ proc .",
    "ieee conf .",
    "_ , vol .  4 , ( phoenix , az ) , pp",
    "36903696 , dec . 1999 .",
    "d.  henriksson and j.  kesson , `` flexible implementation of model predictive control using sub - optimal solutions , '' tech . rep .",
    "internal report no .",
    "tfrt-7610-se , dep . of automatic control , lund university , 2004 .",
    "s.  yksel and s.  p. meyn , `` random - time , state - dependent stochastic drift for markov chains and application to stochastic stabilization over erasure channels , '' _ ieee trans .",
    "_ , vol .",
    "58 , no .  1 ,",
    "pp .  4759 , 2013 ."
  ],
  "abstract_text": [
    "<S> we investigate control of a non - linear process when communication and processing capabilities are limited . </S>",
    "<S> the sensor communicates with a controller node through an erasure channel which introduces i.i.d .  </S>",
    "<S> packet dropouts . </S>",
    "<S> processor availability for control is random and , at times , insufficient to calculate plant inputs . to make efficient use of communication and processing resources , the sensor only transmits when the plant state lies outside a bounded target set . </S>",
    "<S> control calculations are triggered by the received data . if a plant state measurement is successfully received and while the processor is available for control , the algorithm recursively calculates a sequence of tentative plant inputs , which are stored in a buffer for potential future use . </S>",
    "<S> this safeguards for time - steps when the processor is unavailable for control . </S>",
    "<S> we derive sufficient conditions on system parameters for stochastic stability of the closed loop and illustrate performance gains through numerical studies . </S>"
  ]
}
{
  "article_text": [
    "the computer algebra system chevie @xcite has been designed to facilitate computations with various combinatorial structures arising in lie theory , like finite coxeter groups and hecke algebras .",
    "it was initiated about 20 years ago and has been further developed ever since ; see @xcite for a discussion of some recent applications of this system .",
    "however , there are some limitations to its use due to its dependence on gap3 @xcite which is still available , but no longer supported ( the last release of gap3 was in 1997 ) . therefore , it seemed desirable to implement a core set of algorithms around coxeter groups and hecke algebras in a more modern and widely available environment .",
    "the success of sage @xcite suggested the use of the python language @xcite .",
    "this lead to the development of pycox , which we present in this note .",
    "although in some areas of algebraic manipulations ( like permutations , algebraic numbers ) the performance is inferior to that of gap3 , some of the advantages of the new system are : it works on every computer where python is installed ; we can now run jobs which use main memory well over 4 gb ; and we can just import pycox as a module into sage , whereby we have immediate access to all the further functionality of sage ( including the sage notebook and the interfaces to gap4 and , even , gap3 ) .    in section  [ design ] , we briefly describe the basic design features of pycox and give some examples of how to use it ; more details are available through the online help within pycox .",
    "we shall then discuss some concrete applications of our programs to questions related to the theory of kazhdan  lusztig cells and the associated @xmath0-graphs .",
    "( the basic definitions will be recalled in section  [ secwgr ] . )",
    "the problem of computing such cells has beed addressed by several authors , most notably by alvis @xcite and ducloux @xcite , @xcite , @xcite . in section  [ secrel ]",
    ", we present a variation of the known algorithm where the new ingredient is the use of `` relative '' kazhdan  lusztig polynomials , as defined in @xcite , @xcite .",
    "( neither chevie nor ducloux s coxeter @xcite contains an implementation of these . )",
    "as may be expected , the systematic use of these relative polynomials instead of the ordinary kazhdan  lusztig polynomials leads to a significant efficiency gain for the determination of left cells .",
    "( this idea was essentially already formulated by ducloux @xcite ; howlett and yin @xcite constructed @xmath0-graphs affording irreducible representations in this way . )",
    "while howlett and yin @xcite only considered the equal parameter case , we shall describe recursion formulae in the general case of unequal parameters .    within pycox ,",
    "it is now possible to deal with left cells and the corresponding @xmath0-graphs for finite coxeter groups of rank up to around @xmath3 , including types @xmath4 , @xmath5 and @xmath6 but    not surprisingly    with the exception of type @xmath2 .",
    "there are also programs for computing lusztig s leading coefficients of character values @xcite and distinguished involutions @xcite ; these do work for type @xmath2 as well .",
    "as far as we are aware , this is the first general program which is capable of dealing with this level of information for a group of size like that of type @xmath6 or @xmath2 . as an example of an application we just mention that it is now straightforward to verify that kottwitz s conjecture @xcite on the intersections of left cells with conjugacy classes of involutions holds for type @xmath6 , following the general methods explained by casselman @xcite .",
    "( abbie halls , at the university of aberdeen , is currently working on type @xmath2 , where more specialised methods and programming are required . )",
    "we also stress the fact that our programs only use results concerning cells which are generally known to hold by elementary arguments ; in particular , we do not rely on any `` positivity '' results or facts concerning lusztig s @xmath7-function @xcite",
    ".    finally , in section  [ secj ] , we consider the problem of computing the character tables of certain symmetric algebras which have been associated by lusztig @xcite with the various left cells of a finite coxeter group . in pycox , these tables can be determined by an automatic procedure for all groups of rank up to around @xmath8 . in lusztig",
    "s work @xcite , the non - crystallographic types @xmath9 , @xmath10 and @xmath4 have been excluded from the discussion . here",
    ", we complete the picture by treating theses cases as well .",
    "this will allow us to formulate in full generality an alternative characterisation of `` special '' representations , which were originally defined by lusztig @xcite .",
    "this characterisation should also make sense in the general case of unequal parameters ; see conjecture  [ cspec ] .",
    "we discuss some examples to support this conjecture .",
    "the whole pycox system is contained in one file accompanying this article ; it is freely available for download , under the gpl licence .",
    "( the file is called chv1r6.py , it has 13368 lines and the size is roughly 522 kb ; updates will also be made available at the author s homepage . )",
    "so , in order to use pycox on your computer , all you need to do ( once you have dowloaded the file ) is to launch python ( 2.6 or higher ) and import the file as a module , e.g. , by typing :    ....      > > > from chv1r6 import * ....    ( you should then see a welcome banner . ) similarly , if sage ( version 4.7 or higher ) is installed on your computer , you can import pycox as a module into sage :    ....      sage : from chv1r6 import * ....    a good place to start is to type help(coxeter) or allfunctions().    we shall now discuss some of the basic principles of the system and show some concrete examples . as in chevie , the basic object from which everything is built up is that of a cartan matrix . let @xmath11 be a finite non - empty index set and @xmath12 be a matrix with entries in  @xmath13 .",
    "following @xcite , we say that @xmath14 is a _ cartan matrix _ if the following conditions are satisfied :    1 .",
    "for @xmath15 we have @xmath16 ; furthermore , @xmath17 if and only if @xmath18 .",
    "we have @xmath19 and , for @xmath15 , we have @xmath20 , where @xmath21 is an integer or @xmath22 .",
    "let @xmath12 be a cartan matrix and @xmath23 be an @xmath24-vector space of dimension @xmath25 , with a fixed basis @xmath26 .",
    "for each @xmath27 , we define a linear map on @xmath23 as follows : @xmath28 we shall act from the right so we use the row convention for matrices of linear maps .",
    "let @xmath29 in what follows , we shall often omit the dot when referring to the maps @xmath30 ; in particular , @xmath11 will be regarded directly as a subset of @xmath31 . with this convention , the group @xmath0 has a presentation with generators @xmath11 and defining relations as follows ( see @xcite ) :    @xmath32 for all @xmath33 and @xmath34 for all @xmath35 in @xmath11 with @xmath36 .",
    "thus , @xmath0 is a coxeter group and all coxeter groups arise in this way .",
    "the matrix @xmath37 is called the _ coxeter matrix _ of @xmath0 .",
    "the set @xmath38 is the corresponding root system .",
    "there is a well - defined partition @xmath39 where @xmath40 is the set of all @xmath41 which can be expressed in terms of the basis @xmath42 where all coefficients are non - negative , and @xmath43 ; see @xcite .",
    "based on this information alone , we already have an efficient way of testing if an element @xmath44 ( given as a word in the generators in @xmath11 ) equals the identity or not : it suffices to compute the corresponding linear map of @xmath23 and check if its matrix is the identity or not .",
    "more generally , if @xmath45 , we can efficiently find an @xmath33 such that @xmath46 ( see @xcite ) : @xmath47 ( here , @xmath48 denotes the usual length of @xmath44 . )    following the general ideas in chevie , the basic function in pycox is that of creating a coxeter group from a cartan matrix ( as a python `` class '' ) :    ....      > > >",
    "w = coxeter([[2 , -1 , -1 ] , [ -1 , 2 , -1 ] , [ -1 , -1 , 2 ] ] ) ....    when the function coxeter is called , it computes some basic information directly from the cartan matrix , for example , the matrices of the generating reflections and the coxeter matrix .",
    "these pieces of information are saved as components in the resulting python class :",
    "we can now do some basic operations with the elements of @xmath0 :    ....      > > > m = w.wordtomat([1 , 0 , 1 , 2 , 1 , 0 ] ) ; m      ( ( -1 , 0 , -1 ) , ( -2 , -2 , -1 ) , ( 4 , 3 , 3 ) )      > > > w.mattoword(m )        # lexicographically smallest       [ 0 , 1 , 0 , 2 , 1 , 0 ]        # reduced expression of m      > > > w.leftdescentsetmat(m )      [ 0 , 1 ]      > > > w.rightdescentsetmat(m )      [ 0 ] ....    when @xmath0 is finite , the function coxeter also computes , for example , the number of positive roots and the order of @xmath0 :    ....      > > > a= [ [    2 ,   0 , -1 , -ir5 ,   0 ] ,    # ir5=(1+sqrt(5))/2 ;              [    0 ,   2 ,   0 ,     0 , -1 ] ,    # see the function              [   -1 ,   0 ,   2 ,     0 ,   0 ] ,    # zeta5             [ -ir5 ,   0 ,   0 ,     2 ,   0 ] ,              [    0 , -3 ,   0 ,     0 ,   2 ] ]      >",
    "> > w = coxeter(a )       > > > w.n ; w.order ; w.degrees      21                            # number of positive roots      1440                          # order of the group      [ 2 , 2 , 6 , 6 , 10 ]              # reflection degrees ....    there are further components , like w.roots ( containing a list of all roots ) , w.permgens ( the permutation action of the generators on the roots ) etc . ; the list of all components is obtained by dir(w ) ( a general python function ) . in order to check",
    "if @xmath0 is finite , coxeter uses the known list of coxeter matrices of irreducible finite coxeter groups , encoded in terms of graphs ( with a standard labelling of the vertices ) as in table  [ mcoxgraphs ] .",
    "( 325,160 ) ( 15 , 25)@xmath6 ( 40 , 25 ) ( 38 , 30)@xmath49 ( 40 , 25)(1,0)20 ( 60 , 25 ) ( 58 , 30)@xmath50 ( 60 , 25)(1,0)20 ( 80 , 25 ) ( 78 , 30)@xmath51 ( 80 , 25)(0,-1)20 ( 80 , 5 ) ( 85 , 3)@xmath52 ( 80 , 25)(1,0)20 ( 100 , 25 ) ( 98 , 30)@xmath53 ( 100 , 25)(1,0)20 ( 120 , 25 ) ( 118 , 30)@xmath54 ( 120 , 25)(1,0)20 ( 140 , 25 ) ( 138 , 30)@xmath55    ( 175 , 25)@xmath2 ( 200 , 25 ) ( 198 , 30)@xmath49 ( 200 , 25)(1,0)20 ( 220 , 25 ) ( 218 , 30)@xmath50 ( 220 , 25)(1,0)20 ( 240 , 25 ) ( 238 , 30)@xmath51 ( 240 , 25)(0,-1)20 ( 240 , 5 ) ( 245 , 3)@xmath52 ( 240 , 25)(1,0)20 ( 260 , 25 ) ( 258 , 30)@xmath53 ( 260 , 25)(1,0)20 ( 280 , 25 ) ( 278 , 30)@xmath54 ( 280 , 25)(1,0)20 ( 300 , 25 ) ( 298 , 30)@xmath55 ( 300 , 25)(1,0)20 ( 320 , 25 ) ( 318 , 30)@xmath8    ( 5 , 90)@xmath9 ( 7 , 79)@xmath56 ( 40 , 85 ) ( 38 , 90)@xmath49 ( 47 , 88)@xmath57 ( 40 , 85)(1,0)20 ( 60 , 85 ) ( 58 , 90)@xmath52    ( 95 , 84)@xmath58 ( 120 , 85 ) ( 118 , 90)@xmath49 ( 120 , 85)(1,0)20 ( 140 , 85 ) ( 138 , 90)@xmath52 ( 140 , 85)(1,0)20 ( 148 , 88)@xmath59 ( 160 , 85 ) ( 158 , 90)@xmath50 ( 160 , 85)(1,0)20 ( 180 , 85 ) ( 178 , 90)@xmath51    ( 15 , 55)@xmath10 ( 40 , 55 ) ( 38 , 60)@xmath49 ( 40 , 55)(1,0)20 ( 49 , 58)@xmath60 ( 60 , 55 ) ( 58 , 60)@xmath52 ( 60 , 55)(1,0)20 ( 80 , 55 ) ( 78 , 60)@xmath50    ( 115 , 55)@xmath4 ( 140 , 55 ) ( 138 , 60)@xmath49 ( 140 , 55)(1,0)20 ( 149 , 58)@xmath60 ( 160 , 55 ) ( 158 , 60)@xmath52 ( 160 , 55)(1,0)20 ( 180 , 55 ) ( 178 , 60)@xmath50 ( 180 , 55)(1,0)20 ( 200 , 55 ) ( 198 , 60)@xmath51    ( 215 , 75)@xmath5 ( 240 , 75 ) ( 238 , 80)@xmath49 ( 240 , 75)(1,0)20 ( 260 , 75 ) ( 258 , 80)@xmath50 ( 260 , 75)(1,0)20 ( 280 , 75 ) ( 278 , 80)@xmath51 ( 280 , 75)(0,-1)20 ( 280 , 55 ) ( 285 , 53)@xmath52 ( 280 , 75)(1,0)20 ( 300 , 75 ) ( 298 , 80)@xmath53 ( 300 , 75)(1,0)20 ( 320 , 75 ) ( 318 , 80)@xmath54    ( 13,120)@xmath61 ( 12,109)@xmath62 ( 40,115 ) ( 38,120)@xmath49 ( 40,115)(1,0)20 ( 48,118)@xmath59 ( 60,115 ) ( 58,120)@xmath52 ( 60,115)(1,0)30 ( 80,115 ) ( 78,120)@xmath50 ( 100,115 ) ( 110,115 ) ( 120,115 ) ( 130,115)(1,0)10 ( 140,115 ) ( 133,120)@xmath63    ( 13,150)@xmath64 ( 16,139)@xmath62 ( 60,145 ) ( 58,150)@xmath49 ( 60,145)(1,0)30 ( 80,145 ) ( 78,150)@xmath52 ( 100,145 ) ( 110,145 ) ( 120,145 ) ( 130,145)(1,0)10 ( 140,145 ) ( 133,150)@xmath65    ( 200,127)@xmath66 ( 200,116)@xmath67 ( 220,145 ) ( 225,145)@xmath52 ( 220,105 ) ( 226,100)@xmath49 ( 220,145)(1,-1)21 ( 220,105)(1,1)21 ( 240,125 ) ( 238,130)@xmath50 ( 240,125)(1,0)30 ( 260,125 ) ( 258,130)@xmath51 ( 280,125 ) ( 290,125 ) ( 300,125 ) ( 310,125)(1,0)10 ( 320,125 ) ( 313,130)@xmath63    note that , in general , there may be several cartan matrices which give rise to the same coxeter matrix . in pycox",
    "( as in chevie ) we have adopted the following conventions :    * if @xmath68 is odd , then @xmath69 .",
    "( this has the consequence that the root system is reduced ; see @xcite . ) * if @xmath68 is even , then @xmath70 or @xmath71 .",
    "for example , the following two cartan matrices both correspond to the coxeter matrix of type @xmath72 :",
    "see the help for the function cartanmat for a detailed description of the resulting choices of cartan matrices for the various finite types .",
    "when coxeter is called , it decomposes the cartan matrix into its indecomposable components and checks if the corresponding coxeter graphs appear in the list in table  [ mcoxgraphs ] .",
    "if this is so , it matches the cartan matrices of the indecomposable components to those returned by the function cartanmat .",
    "this information is kept in the component w.cartantype . in the above example ( where @xmath0 is defined by a @xmath73 cartan matrix )",
    ", we have :    ....      > > > w.cartantype      [ [ ' h ' , [ 3 , 0 , 2 ] ] , [ ' g ' , [ 1 , 4 ] ] ] ....",
    "this means that the submatrix of @xmath74 with rows and columns indexed by @xmath75 ( in this order ) is the standard cartan matrix of type @xmath10 , as returned by calling cartanmat(h,3 ) ; similarly , the submatrix of @xmath74 with rows and columns indexed by @xmath76 ( in this order ) is the standard cartan matrix of type @xmath77 , as returned by calling cartanmat(g,2 ) .",
    "in particular , we see that our group @xmath0 is of type @xmath78 .",
    "the type recognition procedure is particularly helpful when dealing with reflection subgroups :    ....      > > > w = coxeter(\"f\",4 )   # same as coxeter(cartanmat(\"f\",4 ) )      > > > h = reflectionsubgroup(w,[1,2,6,47 ] )      > > > h.cartantype                      # subgroup generated       [ [ ' c ' , [ 0 , 1 , 2 ] ] , [ ' a ' , [ 3 ] ] ]        # by   reflections at           > > > h.cartan                          # roots no .",
    "1,2,6,47      [ [ 2,-1 , 0 , 0 ] , [ -2 , 2,-1 , 0 ] , [ 0,-1 , 2 , 0 ] , [ 0 , 0 , 0 , 2 ] ] ....    here , @xmath79 will be a coxeter group in its own right .",
    "the information about the embedding into @xmath0 is held in the component h.fusions ; every coxeter group in pycox has such a fusion component : it will at least contain the embedding into itself ; see the online help of reflectionsubgroup for further details . in the above example",
    ", we have :    ....      > > >   w.cartanname     # unique string identifying w      ' f4c0c1c2c3 '      > > > h.fusions['f4c0c1c2c3 ' ]      { ' parabolic ' : false , ' subj ' : [ 1 , 2 , 3 , 23 ] } ....    thus , @xmath79 is not a parabolic subgroup and the four simple reflections of @xmath79 correspond to the reflections with roots indexed by @xmath80 in w.roots .",
    "( this design is different from that in chevie ; it appears to be better suited to recursive algorithms involving various reflection subgroups . )",
    "let us assume from now on that @xmath0 is finite .",
    "then , in principle , every piece of information about @xmath0 is ultimately computable from the cartan matrix of @xmath0 .",
    "however , as in chevie , some very basic and frequently used pieces of information are explicitly stored within the system ; this is particularly relevant for data which are accompanied by some more or less natural labellings ( like partitions of @xmath81 for the conjugacy classes and irreducible characters of groups of type @xmath64 ) . in pycox ,",
    "we store explicitly the following pieces of information ( with the appropriate labellings where this applies ) :    * reflection degrees ( see the function degreesdata ) ; * conjugacy classes ( see conjclassdata ) ; * character tables ( see irrchardata and heckeirrdata ) ; * schur elements ( see schurelmdata ) .    for classical types",
    "@xmath82 , @xmath61 , @xmath66 , this is done in the form of combinatorial algorithms ; for the remaining exceptional types , explicit tables with the relevant information are stored .",
    "then , for example , when the function chartable(w ) is called , pycox will build the character table of @xmath0 from the explicitly stored data for the irreducible components of @xmath0 .",
    "( note that @xmath0 is a direct product of its irreducible components , and there is a standard procedure to build the character table of a direct product of finite groups from the character tables of the direct factors . )",
    "let us now give a concrete example of how to use these programs .",
    "we would like to program a function which returns the list of involutions in @xmath0 , that is , all the elements @xmath44 such that @xmath83 . to start somewhere",
    ", we have a look at the list of all available functions in pycox ; this is printed by calling allfunctions ( ) . there is a function allelmsproperty which takes as input a group @xmath0 and a function @xmath84 ; it returns the list of all @xmath44 ( as reduced words ) such that @xmath85 .",
    "this certainly fits our problem : we just need to define @xmath86 such that @xmath87 if @xmath88 has order @xmath52 or @xmath50 , and @xmath89 otherwise .",
    "thus , our first candidate for the desired function is :    ....      > > > def involutions1(w ) :      ...    return allelmsproperty(w , lambda x : w.permorder(w.wordtoperm(x))<=2 )      > > > len(involutions1(coxeter(\"e\",6 ) ) )      892 ....    this works fine for groups of moderate size but , eventually , we would also like to apply this to big examples like groups of type @xmath6 and @xmath2 ; however , when we do this , we notice that a long time will pass before we see a result .",
    "this is because allelmsproperty is an `` all - purpose '' function which runs through all elements of @xmath0 , transforms every element into a permutation and checks if this has order @xmath52 or @xmath50 . for type @xmath2 with its 696,729,600 elements",
    "this will simply take too long .",
    "we need to tailor our program more specifically to the problem that we are dealing with .",
    "now , the set of involutions is invariant under conjugation so it will be a union of the conjugacy classes of @xmath0 .",
    "the function conjugacyclasses does return some information about the conjugacy classes of @xmath0 , including representatives of the classes and the sizes of the classes .",
    "( this uses data stored within the system ; see conjclassdata . )",
    "so , alternatively to our first try above , we could just select the class representatives which are involutions and then compute the corresponding conjugacy classes . in python , this can in fact be done in one line :    ....      > > >",
    "def involutions(w ) :      ...    return flatlist([conjugacyclass(w , w.wordtoperm(w ) )       ...             for w in conjugacyclasses(w)['reps ' ]       ...               if w.wordtocoxelm(2*w)==tuple(w.rank ) ] ) ....    this even works in type @xmath2 where it returns the list of @xmath90 involutions in about @xmath52 minute .",
    "( in gap3 , the analogous function would be roughly twice as fast , thanks to the much more efficient arithmetic for permutations . )",
    "it is known that involutions play a special role in the theory of kazhdan  lusztig cells ; see lusztig @xcite , kottwitz @xcite , lusztig ",
    "vogan @xcite .",
    "we shall come back to this in section  [ secj ] .",
    "let @xmath0 be a coxeter group , with generating set @xmath11 .",
    "in this section , we briefly recall some basic definitions concerning left cells and the corresponding @xmath0-graphs , as introduced by kazhdan and lusztig @xcite , @xcite . roughly speaking ,",
    "these concepts give rise to a partition @xmath91 and , for each piece @xmath92 in this partition , a @xmath0-module @xmath93_1 $ ] with a standard basis @xmath94 where the action of a generator @xmath33 is described by formulae of a particularly simple form ( encoded in a `` @xmath0-graph '' , see definition  [ defwgr ] and remark  [ rwgr ] below ) .",
    "to give more precise definitions , we need to fix some notation .",
    "we shall work in the general multi - parameter framework of lusztig @xcite , @xcite , which introduces a weight function into the picture on which all the subsequent constructions depend .",
    "let @xmath95 be an abelian group ( written additively ) .",
    "let @xmath96 be a collection of elements such that @xmath97 whenever @xmath98 are conjugate in @xmath0 .",
    "this gives rise to a weight function @xmath99 in the sense of lusztig @xcite ; we have @xmath100 where @xmath101 ( @xmath102 ) is a reduced expression for @xmath44 .",
    "we shall assume that @xmath95 admits a total ordering @xmath103 which is compatible with the group structure , that is , whenever @xmath104 are such that @xmath105 , we have @xmath106 for all @xmath107 .",
    "we assume throughout that @xmath108 ( the original `` equal parameter '' setting of @xcite corresponds to the case where @xmath109 with its natural ordering and @xmath110 for all @xmath33 . )    furthermore , let @xmath111 be a subring and @xmath112 $ ] be the free @xmath113-module with basis @xmath114 .",
    "( the basic constructions in this section are independent of the choice of @xmath113 and so we could just take @xmath115 here ; the flexibility of choosing @xmath113 will be useful once we consider representations of @xmath0 . ) there is a well - defined ring structure on @xmath74 such that @xmath116 for all @xmath117 .",
    "we write @xmath118 .",
    "let @xmath119 be the generic iwahori ",
    "hecke algebra corresponding to @xmath120 , with parameters @xmath121 .",
    "thus , @xmath119 has an @xmath74-basis @xmath122 and the multiplication is given by the rule @xmath123 here , @xmath124 denotes the usual length function on @xmath0 with respect to @xmath11 .",
    "let @xmath125 and denote by @xmath126 ( or @xmath127_{{\\geqslant}0}$ ] ) the set of all @xmath113-linear combinations of terms @xmath128 where @xmath129 .",
    "the notations @xmath130 , @xmath131 , @xmath132 ( or @xmath133 $ ] , @xmath134 $ ] , @xmath135 $ ] ) have a similar meaning .",
    "let @xmath136 be the @xmath113-linear involution of @xmath137 $ ] which takes @xmath138 to @xmath139 for any @xmath140 .",
    "this extends to a ring involution @xmath141 , @xmath142 , where @xmath143 we then have a corresponding _ kazhdan  lusztig basis _ of @xmath119 , which we denote by @xmath144 ( as in @xcite ) .",
    "the basis element @xmath145 is uniquely determined by the conditions that @xmath146 where @xmath147 and @xmath148 $ ] if @xmath149 ; furthermore , we have @xmath150 unless @xmath151 , where @xmath103 denotes the bruhat ",
    "chevalley order on @xmath0 . for @xmath44 and @xmath33",
    ", we have @xmath152 where @xmath153 are certain elements of @xmath154 $ ] such that @xmath155 .",
    "as explained in @xcite , these elements are determined by the inductive condition @xmath156\\tag{m1}\\ ] ] and by the symmetry condition @xmath157 by applying the anti - involution @xmath141 , @xmath158 , we also obtain `` right - handed '' versions of the above formulae ( see @xcite ) .    [ eqp ] we set @xmath159 .",
    "then it is known that @xmath160 $ ] ; see lusztig ( * ? ? ?",
    "5.4 ) . furthermore , we have @xmath161 \\qquad \\mbox{where $ sy < y < w < sw$ ( $ s \\in s$)};\\ ] ] see ( * ? ? ?",
    "assume now that @xmath109 and @xmath162 for all @xmath33 ( equal parameter case , as in @xcite ) .",
    "then @xmath74 is the ring of laurent polynomials in the indeterminate @xmath163 .",
    "let @xmath164 be such that @xmath165 .",
    "let @xmath33 be such that @xmath166 .",
    "now @xmath167 is a polynomial in @xmath168 .",
    "consequently , @xmath169 is a polynomial in @xmath163 of degree at most @xmath170 . in this situation",
    ", it is known that @xmath153 has the following simple description : @xmath171 see lusztig ( * ? ? ?",
    "[ rcrit ] the determination of @xmath153 in the case of unequal parameters is considerably more involved than in the case of equal parameters . for example , assume that there exists some @xmath172 such that @xmath173 , @xmath174 and @xmath175 .",
    "then @xmath176 . in the equal parameter case",
    ", this implies that @xmath177 unless @xmath178 , in which case @xmath179 . in the general case of unequal parameters ,",
    "if @xmath178 , we have @xmath180 see ( * ? ? ?",
    "5 ) . furthermore ,",
    "if @xmath181 , it can happen that @xmath182 .",
    "[ defwgr ] a _ @xmath0-graph _ for @xmath119 consists of the following data :    * a base set @xmath183 together with a map @xmath184 which assigns to each @xmath185 a subset @xmath186 ; * for each @xmath27 with @xmath187 , a collection of elements @xmath188 * for each @xmath27 with @xmath189 , a bijection @xmath190 , @xmath191 .",
    "these data are subject to the following requirements .",
    "first we require that , for any @xmath192 and @xmath33 where @xmath193 is defined , we have @xmath194\\qquad\\mbox{and } \\qquad\\overline{m}_{x , y}^s = m_{x , y}^s.\\ ] ] furthermore , let @xmath195 $ ] be a free @xmath74-module with a basis @xmath196 . for @xmath33 , define an @xmath74-linear map @xmath197 \\rightarrow [ { { \\mathfrak{x}}}]$ ] by @xmath198 then we require that the assignment @xmath199 defines a representation of @xmath119 .",
    "[ explcell ] let @xmath200",
    ". we write @xmath201 if there exists some @xmath33 such that @xmath202 appears with non - zero multiplicity in @xmath203 ( when expressed in the @xmath204-basis of @xmath119 ) .",
    "thus , we have : @xmath205 let @xmath206 be the pre - order relation on @xmath0 generated by @xmath207 , that is , we have @xmath208 if there exist elements @xmath209 in @xmath0 such that @xmath210 for @xmath211 .",
    "let @xmath212 denote the associated equivalence relation ; the corresponding equivalence classes are called the _ left cells _ of @xmath0 .",
    "let @xmath213 be a left cell of @xmath0 ( or , more generally , a union of left cells ) .",
    "then we obtain a corresponding @xmath0-graph as follows .",
    "we set @xmath214 for @xmath215 .",
    "furthermore , if @xmath216 and @xmath33 are such that @xmath187 , @xmath217 and @xmath218 , we set @xmath219 finally , if @xmath33 is such that @xmath189 , then @xmath220 for all @xmath221 , so we obtain a natural bijection @xmath222 by left multiplication .",
    "it is known that these data give rise to a @xmath0-graph structure on the set @xmath213 .",
    "( see @xcite . )",
    "[ rwgr ] let @xmath223 be the unique @xmath113-linear ring homomorphism such that @xmath224 for all @xmath140 .",
    "then , regarding @xmath113 as an @xmath74-module via @xmath225 , we have @xmath226 $ ] , the group algebra of @xmath0 over @xmath113 .",
    "let @xmath213 be a left cell of @xmath0 .",
    "then we obtain a representation of @xmath0 on @xmath227_1:=r \\otimes_a [ { { \\mathfrak{c}}}]$ ] , called a `` left cell representation '' of @xmath0 .",
    "if @xmath0 is a finite weyl group and @xmath228 , the study of these left cell representations is of considerable interest in the representation theory of reductive algebraic groups over finite fields ; see lusztig @xcite .",
    "[ eqcell ] assume we are given two @xmath0-graphs with underlying base sets @xmath183 and @xmath229 .",
    "then we say that these two @xmath0-graphs are _ equivalent _ if there exists a bijection @xmath230 , @xmath231 , such that the map @xmath232\\rightarrow [ { { \\mathfrak{x } } } ' ] , \\qquad b_x \\mapsto b_{x'},\\ ] ] is an @xmath119-module isomorphism .",
    "similarly , if @xmath233 are left cells of @xmath0 , we write @xmath234 if the @xmath0-graphs associated with @xmath213 and @xmath235 are equivalent .    [ star ] assume that we are in the equal parameter case where @xmath109 and @xmath162 for all @xmath33 .",
    "let @xmath98 be such that @xmath236 has order  @xmath51 .",
    "let @xmath237 if @xmath238 , then exactly one of the two elements @xmath239 belongs to @xmath240 ; we denote it @xmath241 .",
    "thus , we obtain an involution @xmath242 if @xmath213 is a left cell of @xmath0 , then it is known that either @xmath213 is contained in @xmath240 or does not meet @xmath240 at all ; see ( * ? ? ?",
    "this also shows that @xmath243 for all @xmath244 in @xmath213 .",
    "now , if @xmath245 , then @xmath246 also is a left cell of @xmath0 ( see ( * ? ? ?",
    "4.4(ii ) ) ) ; furthermore , the @xmath0-graphs corresponding to @xmath213 and @xmath247 yield identical matrix representations of @xmath119 ( see ( * ? ? ? * theorem  4.2(iii ) ) ) .",
    "thus , we have @xmath248 in the sense of definition  [ eqcell ] , where the bijection is given by @xmath249 ( @xmath221 ) .",
    "[ disti ] let @xmath44 and assume that @xmath250 .",
    "we define an element @xmath251 and an integer @xmath252 by the condition @xmath253 $ ] .",
    "then we say that @xmath88 is _ distinguished _",
    "( with respect to @xmath254 ) if @xmath255 for any @xmath244 such that @xmath256 and @xmath257 belong to the same left cell of @xmath0 .",
    "we set @xmath258 thus , if @xmath259 and @xmath213 is the left cell containing  @xmath88 , then the function @xmath260 reaches its minimum at @xmath88 and @xmath88 is uniquely determined by this property .",
    "( it is known that every left cell contains at least one element @xmath261 such that @xmath262 ; see , for example , @xcite . )    in the equal parameter case where @xmath109 and @xmath162 for all @xmath27 ( and assuming that @xmath0 is finite ) it is known that @xmath83 and @xmath263 for all @xmath259 ; furthermore , every left cell contains a ( unique ) distinguished element .",
    "( see lusztig @xcite ; see @xcite for @xmath0 of non - crystallograhic type . ) hence , in particular , @xmath264 is a canonical set of representatives for the left cells of @xmath0 .",
    "if @xmath0 is of type @xmath74 , then @xmath264 consists precisely of all involutions in @xmath0 ; in general , @xmath264 is strictly contained in the set of involutions of @xmath0 .",
    "we shall now be interested in determining the above data explicitly , especially for groups of exceptional type .",
    "thus , the computational tasks are :    * given @xmath265 , determine the partition of @xmath0 into left cells ; * for each left cell @xmath213 , determine the numbers @xmath266 ; * determine the set @xmath264 of distinguished elements ( or the related set @xmath267 in conjecture  [ conj42 ] below ) .",
    "the crucial ingredient in these tasks is the computation of the polynomials @xmath167 .",
    "this is usually done using some known recursion formulae . in the next section ,",
    "we discuss a variation of this recursion .",
    "we keep the general setting of the previous section . in addition",
    ", we shall now fix a subset @xmath268 and consider the corresponding standard parabolic subgroup @xmath269 .",
    "let @xmath270 be the set of distinguished left coset representatives of @xmath271 in @xmath0 .",
    "every element @xmath272 can be written uniquely in the form @xmath273 where @xmath274 , @xmath275 and @xmath276 ; see @xcite .",
    "we shall frequently use the following fact , due to deodhar ( see @xcite ) .",
    "let @xmath277 and @xmath33 .",
    "then we are in exactly one of the following three cases :    1 .",
    "@xmath278 and @xmath279 ; 2 .",
    "@xmath280 and @xmath279 ; 3 .",
    "@xmath280 and @xmath281 , in which case @xmath282 where @xmath283 .",
    "we have a corresponding parabolic subalgebra @xmath284 .",
    "it is known that , for @xmath285 , the basis element @xmath145 lies in @xmath286 , and it is the kazhdan  lusztig basis element in @xmath286 .",
    "let @xmath287 and @xmath288 . by ( * ?",
    "3.3 ) , we have a unique expression @xmath289 where @xmath290 and @xmath291 if @xmath292 ; furthermore , @xmath293 unless @xmath294 or @xmath295 . in the proof of (",
    "3.3 ) , we have also seen that @xmath296 thus , if we have an efficient algorithm for computing the polynomials @xmath297 , then we can also determine @xmath298 and , hence , the elements @xmath299 .",
    "[ recursp ] we have the following recursion formulae for @xmath297 .    *",
    "if @xmath300 , then @xmath301 * now assume that @xmath302 and let @xmath33 be such that @xmath303 . if @xmath189 , then @xmath304 where @xmath305 ( if @xmath306 ) .",
    "if @xmath187 , then @xmath307 where @xmath305 ( if @xmath306 ) and @xmath308    \\(a ) this is contained in ( * ? ? ?",
    "\\(b ) this is essentially the same as the proofs of ( * ? ? ?",
    "* theorem  5.1 ) and ( * ? ? ?",
    "however , because of the different normalisations and conventions , we shall sketch the main steps .",
    "let @xmath309 and @xmath33 be such that @xmath303 .",
    "first assume that @xmath189 . then @xmath310 and @xmath311 .",
    "furthermore , @xmath312 where the last equality holds since @xmath313 .",
    "this yields the desired formulae .    from now on , assume that @xmath187",
    ". we begin by considering the identity @xmath314 .",
    "the coefficient of @xmath315 on the right hand side is @xmath316 .",
    "now we compute @xmath317 thus , if @xmath280 and @xmath279 , then the coefficient of @xmath318 in this expression is @xmath319 .",
    "hence , we obtain @xmath320 in this case , as required .",
    "now assume that @xmath280 and @xmath281 .",
    "then , among the various sums in the above expression for @xmath321 , the term @xmath318 will only appear in the sum @xmath322 if @xmath175 , then @xmath323 .",
    "on the other hand , if @xmath324 , then @xmath325 is equal to @xmath326 plus an @xmath74-linear combination of terms @xmath327 where @xmath328 .",
    "hence , if @xmath329 , then the coefficient of @xmath315 in @xmath321 will be @xmath330 . thus , we have @xmath331 . since @xmath332 and @xmath333",
    ", we deduce that @xmath293 , as required .    to obtain the remaining formulae",
    ", we now consider the identity @xmath334 writing @xmath335 , we obtain that @xmath336 thus , we have @xmath337 by a similar computation as above , we have @xmath338 now let @xmath277 be such that @xmath278 .",
    "then we conclude that @xmath339 as required .",
    "finally , assume that @xmath280 , @xmath281 and @xmath340 .",
    "then @xmath297 will be equal to @xmath341 plus the coefficient of @xmath315 in @xmath342 if @xmath175 , then @xmath323 .",
    "on the other hand , if @xmath324 , then @xmath343 hence , since @xmath332 , we obtain @xmath344 as desired .",
    "[ oldcase ] assume that @xmath345 .",
    "then @xmath346 and @xmath347 for all @xmath348 .",
    "for any @xmath277 and @xmath33 , we have @xmath279 and either @xmath278 or @xmath280 .",
    "thus , only the first two out of the four cases in proposition  [ recursp](b ) will occur .",
    "these two cases yield the known recursion formulae for the polynomials @xmath349 .",
    "[ renorm1 ] let us set @xmath350 .",
    "then @xmath351 .",
    "indeed , we have the recursion formulae :    * if @xmath300 , then @xmath352 * now assume that @xmath302 and let @xmath33 be such that @xmath303 . if @xmath189 , then @xmath353 where @xmath305 ( if @xmath306 ) .",
    "if @xmath187 , then @xmath354   \\displaystyle   \\quad + \\sum_{{\\genfrac{}{}{0pt}{}{w \\in w'}{u < w < tw } } }   \\varepsilon^{l(tw)-l(u)}m_{u , w}^t p_{xw , syv }   \\end{array } & \\mbox{if $ sx \\not\\in x$ , $ tu < u$ } , \\end{array}\\right.\\ ] ] where @xmath305 ( if @xmath306 ) and @xmath355    with this renormalisation , it also follows that @xmath356    [ lemmue ] let @xmath348 , @xmath357 and @xmath33 be such that @xmath187 and @xmath358 .",
    "let @xmath359 then the following hold . if @xmath278 , then @xmath360 on the other hand , if @xmath281 and @xmath340 ( where @xmath305 ) , then @xmath361 note that these conditions , together with the symmetry condition @xmath362 , determine @xmath363 inductively .",
    "we consider the identity @xmath364 the coefficient of @xmath315 on the left hand side is @xmath365 .",
    "assume first that @xmath278 .",
    "then , arguing as in the proof of proposition  [ recursp ] , we find that the coefficient of @xmath318 on the right hand side of ( @xmath366 ) is @xmath367 now we note that @xmath368 thus , we conclude that @xmath369 this expression lies in @xmath132 ; thus , we have shown that ( @xmath370 ) holds .",
    "on the other hand , if @xmath281 and @xmath340 ( where @xmath305 ) , then the coefficient of @xmath315 on the right hand side of ( @xmath366 ) is @xmath371 then a similar argument shows that ( @xmath372 ) holds .",
    "[ muexp ] let @xmath348 , @xmath357 and @xmath33 be such that @xmath187 and @xmath358 .",
    "assume now that @xmath373 .",
    "first of all , this forces that @xmath374 and @xmath375 .",
    "furthermore , we must have @xmath376 .",
    "thus , condition ( @xmath372 ) in lemma  [ lemmue ] yields that @xmath377 now , recall that for any @xmath44 , we have @xmath378 unless @xmath379 .",
    "it follows that @xmath380 ( this shows , in particular , that we can have @xmath381 even if @xmath293 . )    [ muequal ] assume that @xmath109 and @xmath162 for all @xmath33 ( equal parameter case ) .",
    "then @xmath74 is the ring of laurent polynomials in the indeterminate @xmath163 .",
    "let @xmath33 , @xmath382 and @xmath357 be such that @xmath358 .",
    "then @xmath383 this is easily seen using the formulae in lemma  [ lemmue ] and example  [ muexp ] ; note also that remark  [ eqp ] already shows that @xmath384 in this case .",
    "[ recursp1 ] let @xmath235 be a left cell of @xmath271 .",
    "then we have the following recursion formulae for @xmath297 where @xmath385 and @xmath386 .    *",
    "if @xmath300 , then @xmath301 * now assume that @xmath302 and let @xmath33 be such that @xmath303 . if @xmath189 , then @xmath304 where @xmath305 ( if @xmath306 ) . if @xmath187 , then @xmath387 where @xmath305 ( if @xmath306 ) and @xmath388    this immediately follows from proposition  [ recursp ] and the following facts",
    "let @xmath389 be the kazhdan  lusztig left pre - order relation on @xmath271 . by ( * ? ? ?",
    "3.3 ) , we have @xmath293 unless @xmath294 or @xmath295 and @xmath390 ; furthermore , by @xcite , we have the implication `` @xmath391 '' .",
    "[ varalgo ] the following inductive procedure produces the partition of @xmath0 into left cells and the associated @xmath0-graphs .    if @xmath392 , then @xmath393 is the only left cell and there is a canonical @xmath0-graph associated with it .",
    "now assume that @xmath394 and let @xmath395 be a proper parabolic subgroup . by induction , we obtain the partition @xmath396 of @xmath271 into left cells and the associated @xmath0-graphs .",
    "now fix @xmath397 .",
    "then , by the main result of @xcite , the set @xmath398 is a union of left cells , that is , we have @xmath399 where @xmath400 are left cells of @xmath0 and @xmath401 is the set of distinguished left coset representatives of @xmath271 in @xmath0 .",
    "these left cells are determined as follows . by corollary  [ recursp1 ] and lemma  [ lemmue ]",
    ", there is a recursive algorithm for simultaneously computing the polynomials @xmath402 ( the computations will only involve the elements in the fixed set @xmath398 . ) once this is achieved , the set @xmath398 is decomposed into left cells by the procedure in example  [ explcell ] ( that is , by explicitly working out the transitive closure of the relation @xmath207 ) ; this also yields automatically the associated @xmath0-graphs . by letting @xmath403 run over all indices in @xmath404",
    "we eventually obtain all the left cells of @xmath0 and the associated @xmath0-graphs .",
    "@xmath405    in pycox , the function klcells implements the procedure in algorithm  [ varalgo ] .",
    "as may be expected this leads to significant efficiency improvements compared with the use of ordinary kazhdan  lusztig polynomials ( where the recursion involves _ all _ elements of @xmath0 ) . in the equal parameter case",
    ", one can apply some further simplications to reduce the number of left cells that have to be `` induced '' from @xmath271 to @xmath0 : first of all , it is sufficient to induce only one left cell from each pair of left cells which are related by multiplication with the longest element in @xmath271 .",
    "( this follows from yin @xcite . ) furthermore , assume that @xmath406 are such that @xmath407 in the sense of definition  [ eqcell ] .",
    "then , by ( * ? ? ?",
    "* cor .  3.10 ) ,",
    "it is known that , for a suitable labelling , we have @xmath408 and @xmath409 for all @xmath410 .",
    "thus , it is sufficient to induce one left cell from each orbit under the star operations in example  [ star ] , and then to apply the star operations to the resulting cells of @xmath0 .",
    "this leads again to an enormous gain in efficiency .",
    "for example , in the computation of the left cells for type @xmath6 , we only need to induce @xmath411 ( instead of a total of @xmath412 ) left cells from a parabolic subgroup of type @xmath413 ; see table  [ explc ] .",
    "the efficiency also depends on the choice of @xmath271 .",
    "for example , in type @xmath6 it is more efficient to use @xmath271 of type @xmath413 than of type @xmath5 ; in all other cases , we have chosen @xmath271 such that the index @xmath414 is as small as possible . finally note that , if one is only interested in the partition of the group into left cells , then there are further techniques available ; see , for example , chen  shi @xcite .",
    "one of the main advantages of being able to compute left cells and the corresponding @xmath0-graphs in a language like python lies in the fact that it provides immediate functionality for further handling of the data .",
    "we shall see a concrete example of this in the next section .",
    "we keep the general setting of the previous sections ; we assume now that @xmath0 is finite and let @xmath415 .",
    "it is known that this is a splitting field for @xmath0 ( see @xcite ) .",
    "let @xmath416 denote the set of simple @xmath417$]-modules ( up to isomorphism ) .",
    "let @xmath418 be the field of fractions of @xmath74 and @xmath419",
    ". then it is known that @xmath420 is split semisimple and abstractly isomorphic to @xmath421 $ ] ( see @xcite ) ; furthermore , the map @xmath422 ( @xmath423 ) induces a bijection between @xmath424 and @xmath416 ( see @xcite ) .",
    "given @xmath425 , we denote by @xmath426 the corresponding irreducible representation of @xmath420 .",
    "it is known that @xmath427 \\qquad \\mbox{for all $ w \\in w$}\\ ] ] ( see @xcite ) .",
    "thus , we can define @xmath428 \\mbox { for all $ w \\in w$}\\}.\\ ] ] consequently , there are unique numbers @xmath429 ( @xmath44 ) such that @xmath430 where `` higher terms '' means an @xmath13-linear combination of terms @xmath128 where @xmath431 .",
    "these numbers are the `` leading coefficients of character values '' , as defined and studied by lusztig @xcite , @xcite , @xcite .",
    "since @xmath432 for all @xmath44 ( see @xcite ) , we certainly have @xmath433 given @xmath434 , there is at least one @xmath44 such that @xmath435 ( by the definition of @xmath436 ) .",
    "hence , the sum of all @xmath437 ( @xmath272 ) will be strictly positive and so we can write that sum as @xmath438 where @xmath439 is strictly positive .",
    "in fact , we have the following orthogonality relations ( see ( * ? ? ? * exc .",
    "9.8 ) ) : @xmath440 the connection with left cells is given by the following result , first proved by lusztig @xcite , @xcite in the equal parameter case ( where the proof ultimately relies upon a geometric interpretation of the basis @xmath441 of @xmath119 ) ; the general case ( where no geometric interpretation is available ) is proved by an elementary argument in @xcite . given @xmath425 and a left cell @xmath213 of @xmath0 , we denote by @xmath442 the multiplicity of @xmath434 as an irreducible constituent of the left cell module @xmath227_1 $ ] ( as defined in remark  [ rwgr ] ) .        in what follows",
    ", it will be important to renormalise the leading coefficients . in the equal parameter case , this renormalisation is suggested by the formula in ( * ? ? ? *",
    "( b ) ) ( see remark  [ rem44 ] below ) . in the unequal parameter case",
    ", we can not just take the analogous formula ; instead , we proceed as follows where we partly rely on a conjectural property .",
    "following @xcite , we define real numbers @xmath446 ( note that , in @xcite , we have omitted the factor @xmath447 in the definition of @xmath448 ; hence , the numbers @xmath449 in @xcite will be equal to @xmath450 . ) with this notation , we can now state :        it is known that every left cell contains at least one element of @xmath267 .",
    "( this follows from ( * ? ? ? * and 2.1.20 ) . )",
    "we expect that @xmath267 is precisely the set @xmath264 defined in definition  [ disti ] and that @xmath454 for all @xmath259 .",
    "the advantage of the definition of @xmath267 is that this set can actually be computed in an efficient way ; see algorithm  [ algob ] below .",
    "[ rem43 ] conjecture  [ conj42 ] and the equality @xmath455 are known to hold if lusztig s properties * p1**p15 * in @xcite are satisfied for @xmath265 ( see @xcite for details ) . by @xcite ( see @xcite for @xmath0 of non - crystallographic type ) , * p1**p15 * do hold in the equal parameter case where @xmath109 and @xmath162 for all @xmath33 .",
    "it is also known that then the coefficients of the polynomials @xmath167 are non - negative ; see @xcite , @xcite .",
    "hence , in this case , we have @xmath456 we shall consider some cases of unequal parameters in the examples below .",
    "[ rem44 ] assume that we are in the equal parameter case where @xmath109 and @xmath162 for all @xmath33 .",
    "let us check that then our renormalisation corresponds to the formula in ( * ? ? ?",
    "* ( b ) ) .",
    "thus , we claim that @xmath460 this is seen as follows .",
    "let @xmath44 . by remark  [ rem43 ] , we have @xmath461 where @xmath457 is the unique element such that @xmath458 belong to the same left cell .",
    "hence , it will be enough to show that @xmath462 now let @xmath425 be such that @xmath463 .",
    "then , by @xcite , we have @xmath464 where @xmath465 ( @xmath466 ) is the function defined by lusztig @xcite .",
    "this function is constant on the left cells of @xmath0 and so @xmath467 .",
    "thus , it remains to show that @xmath468 .",
    "but this immediately follows from @xcite ( see also ( * ? ? ?",
    "2.3.5 ) ) and property * p5 * in @xcite .",
    "  an explanation for the renormalisation in ( a ) can be given by using the asymptotic algebra @xmath469 introduced by lusztig @xcite .",
    "this algebra has a basis @xmath470 and one can easily check that the map @xmath471 ( where @xmath457 is such that @xmath458 belong to the same left cell ) defines an algebra automorphism of  @xmath469 .",
    "[ rem44a ] assume that conjecture  [ conj42 ] holds for @xmath265 .",
    "let @xmath213 be a left cell and consider the unique element @xmath472 .",
    "then we have : @xmath473 in the framework of lusztig s theory of the asymptotic algebra , the above statement appears in @xcite ; see also ( * ? ? ?",
    ". one can give a more elementary argument , as follows .",
    "we consider the algebra @xmath474 defined in @xcite . using @xmath474 , one can define a partition of @xmath0 into `` left @xmath474-cells '' ; see @xcite . by ( * ? ? ?",
    "2.1.20 ) , every kazhdan  lusztig left cell is a union of left @xmath474-cells .",
    "hence , by ( * ? ? ?",
    "* lemma  3.7 ) and ( * ? ? ?",
    "1.8.5 ) , we have @xmath475 thus , the claim immediately follows from the assumption that conjecture  [ conj42 ] holds .",
    "in particular , we have the following formula for the decomposition of the left cell module @xmath227_1 $ ] : @xmath476_1=\\sum_{e \\in { { \\operatorname{irr}}}(w ) } m({{\\mathfrak{c}}},e)\\,e=\\breve{n}_d\\sum_{e \\in   { { \\operatorname{irr}}}(w ) } c_{d , e}\\ , e\\ ] ] ( in the appropriate grothendieck group of representations ) .    [ rem45 ]",
    "assume that conjecture  [ conj42 ] holds for @xmath265 .",
    "let @xmath213 be a left cell of @xmath0 and denote by @xmath477 the set of all @xmath425 such that @xmath434 is an irreducible constituent of @xmath227_1 $ ] .",
    "then we define @xmath478 ( following lusztig @xcite , @xcite , this table can be interpreted as the character table of the subalgebra of the asymptotic algebra @xmath469 which is spanned by @xmath479 for @xmath480 ; the unique element @xmath472 corresponds to the identity element of this algebra , in accordance with remark  [ rem44a ] . )",
    "note that , by proposition  [ prop41 ] , we have @xmath481 if and only if @xmath463 for some @xmath221 ; furthermore , @xmath482 unless @xmath483 belong to the same left cell .",
    "thus , every non - zero leading coefficient will appear in one of the tables @xmath484 as @xmath213 runs over the left cells of @xmath0 .",
    "[ ctweyl ] assume that @xmath0 is a finite weyl group and that we are in the equal parameter case where @xmath109 and @xmath162 for all @xmath33 . then the tables @xmath484 have been determined explicitly by lusztig @xcite , based on the results in @xcite .",
    "in particular , it turns out that , if @xmath485 is `` special '' in the sense of lusztig @xcite , then @xmath486 for all @xmath44 .",
    "( except for some exceptional cases in type @xmath6 and @xmath2 , the latter statement already appeared in ( * ? ? ?",
    "7.1 ) ; one can also check this property directly in the exceptional cases by using the methods in the proof of ( * ? ? ?",
    "7.1 ) . ) furthermore , still assuming that @xmath434 is special , we actually have @xmath487 for all @xmath480 where @xmath213 is a left cell such that @xmath488 .",
    "thus , for any given left cell @xmath213 , all the entries in the row of @xmath489 corresponding to the unique special representation occurring in @xmath227_1 $ ] are strictly positive .",
    "note that , by proposition  [ prop41 ] , there can be at most one row with this property .",
    "let @xmath490 be the set of conjugacy classes of @xmath0 . using the inductive description in ( * ? ? ?",
    "8.2.7 ) , we determine the `` class polynomials '' @xmath491 for all @xmath44 and all @xmath492 .",
    "these polynomials have the following property . for @xmath44 , define @xmath493 ; for any @xmath492 let @xmath494 and let @xmath495 be a representative such that @xmath496 .",
    "then we have : @xmath497    step 2 . by (",
    "* chap .  10 , 11 ) , the character tables @xmath498 are explicitly known .",
    "furthermore , the functions @xmath499 and @xmath500 are explicitly known ; see , for example , the appendix of @xcite ( equal parameter case ) and the summary in @xcite for unequal parameters .",
    "thus , in combination with the class polynomials in step  1 , we can explicitly compute all the leading coefficients @xmath448 where @xmath44 and @xmath425 .",
    "consequently , we can then also compute the numbers @xmath501 for all @xmath44 , and the set @xmath267 .",
    "step 3 . by algorithm  [ varalgo ] , we can determine the partition of @xmath0 into left cells .",
    "( we do not need the additional information on the associated @xmath0-graphs here . )",
    "let @xmath213 be a fixed left cell . using the data in step 2",
    ", we can then explicitly verify if conjecture  [ conj42 ] holds . using the formula in proposition  [ prop41](a )",
    ", we can find the multiplicities @xmath442 for all @xmath425 .",
    "thus , the table @xmath484 is determined .    in pycox ,",
    "the function leftcellleadingcoeffs implements the procedure in algorithm  [ algob ] for a given left cell .",
    "this allows the explicit determination of all the tables @xmath502 for groups @xmath0 of rank up to around @xmath8 and any weight function @xmath254 .",
    "all this even works for type @xmath6 where it takes about 3 hours and requires 4 gb of main memory . with this information , it is then straightforward to verify kottwitz s conjecture for type @xmath6 , as mentioned in the introduction .",
    "performing only steps  1 and  2 of algorithm  [ algob ] yields the set @xmath267 and all the leading coefficients @xmath448 .",
    "this even works for type @xmath2 where it takes nearly 18 days and requires about 22 gb of main memory to compute the @xmath503 elements in @xmath267 .",
    "( as far as i am aware , these elements have not been explicitly known before . )",
    "all the known sets @xmath267 for @xmath0 of exceptional type are explicitly stored in a compact format within pycox ; see the function libdistinv .",
    "[ gammah34 ] let @xmath0 be of type @xmath10 or @xmath4 .",
    "let @xmath213 be a left cell of @xmath0 .",
    "using algorithm  [ varalgo ] , we obtain the left cells of @xmath0 ; we have @xmath505 ( see also alvis @xcite . ) if @xmath506 equals @xmath52 , @xmath54 , @xmath507 or @xmath508 , then @xmath227_1 $ ] is irreducible and the table @xmath484 is @xmath509 .",
    "now assume that @xmath506 equals @xmath55 , @xmath3 , @xmath510 or @xmath511 .",
    "then @xmath227_1=e_1\\oplus e_2 $ ] where @xmath512 , @xmath513 and where we choose the notation such that @xmath514 is a special representation . then the table @xmath484 is @xmath515 according to whether @xmath516 equals @xmath50 or @xmath517 , respectively , where @xmath518 . finally ,",
    "if @xmath506 equals @xmath519 , @xmath520 or @xmath521 , then @xmath484 is given by table  [ cell1 ] .",
    "here , we use the notation for @xmath416 defined in the appendix of @xcite . as in example",
    "[ ctweyl ] we note that there is a row in which all entries are strictly positive , and this row corresponds to the unique special representation occurring in @xmath227_1 $ ] ( which is @xmath522 in table  [ cell1 ] ) .",
    "[ ctdi ] let @xmath0 be of type @xmath9 where @xmath523 and @xmath524 .",
    "assume that we are in the equal parameter case , where @xmath109 and @xmath162 for all @xmath33 .",
    "let @xmath525 be a root of unity of order @xmath526 , chosen such that @xmath527 .",
    "by @xcite , we have @xmath528 where @xmath529 is the unit and @xmath530 is the sign representation , all @xmath531 are @xmath50-dimensional , and @xmath532 are two further @xmath52-dimensional representations when @xmath526 is even , in which case we fix the notation such that @xmath533 acts as @xmath534 in @xmath535 and as @xmath536 in @xmath537 .",
    "the left cells and the corresponding left cell modules are given as follows ( see , for example , @xcite ) : @xmath538 here , for any @xmath539 , we write @xmath540 ( @xmath541 factors ) and @xmath542 ( @xmath541 factors ) ; note that @xmath543 .",
    "we have : @xmath544_1 = 1_w,\\quad [ 2_1,1_2,2_3,\\ldots , 2_{m-1}]_1=(\\mbox{sgn}_1 ) \\oplus    \\mbox{(sum of all $ \\sigma_j$)},\\\\ [ 1_1,2_2,1_3 , \\ldots,1_{m-1}]_1=(\\mbox{sgn}_2 ) \\oplus    \\mbox{(sum of all $ \\sigma_j$ ) } , \\quad [ 1_m]_1 = \\mbox{sgn}.\\end{gathered}\\ ] ] where @xmath535 and @xmath537 have to be omitted if @xmath526 is odd .",
    "( note that @xcite contains a misprint : the roles of @xmath535 , @xmath537 need to be changed there . ) by ( * ? ? ?",
    "1.3.7 ) , we have @xmath545 and @xmath546 ; all the other irreducible representations have @xmath7-invariant equal to  @xmath52 .",
    "first of all , one easily checks that @xmath547 where @xmath548 is the longest element .",
    "next consider @xmath535 and @xmath537 ( in case @xmath526 is even ) .",
    "let @xmath44 . for @xmath549",
    "we denote by @xmath550 the number of occurrences of the generator @xmath551 in a reduced expression for @xmath88 .",
    "then @xmath552 and so @xmath553 a similar formula holds for @xmath554 where the roles of @xmath555 and @xmath556 need to be interchanged .",
    "finally , consider @xmath531 . by",
    "* lemma  8.3.3 ) , we have @xmath557 where @xmath558 for @xmath559 .",
    "in particular , we see that @xmath560 let @xmath561 be a conjugate of @xmath533 or @xmath562 .",
    "then @xmath563 is odd and we write @xmath564 where @xmath539 .",
    "assume that @xmath565 and let @xmath566 be such that @xmath567 .",
    "then @xmath568 or @xmath569 equals @xmath570 .",
    "so we have @xmath571 since @xmath572 , this yields that @xmath573 .",
    "thus , we have @xmath574 for example , for @xmath575 , we obtain for the two left cells with @xmath576 elements : @xmath577 having computed all the leading coefficients for @xmath0 , we also see that @xmath578 to conclude , let @xmath485 be special , that is , @xmath579 . by the above computations",
    ", we see that @xmath486 for all @xmath44 ; note also that @xmath580 where @xmath564 and @xmath581 . using this property and the explicit description of the left cells",
    ", we deduce that @xmath487 for all @xmath582 where @xmath213 is a left cell with @xmath488 .",
    "[ cspec ] assume that conjecture  [ conj42 ] holds for @xmath265 and define @xmath583 then , for each left cell @xmath213 of @xmath0 , there is a unique @xmath584 such that @xmath488 ; furthermore , for this @xmath434 , we have @xmath585 and @xmath487 for all @xmath480 .",
    "[ newchar ] let @xmath0 be a finite coxeter group and assume that we are in the equal parameter case where @xmath109 and @xmath162 for all @xmath27 .",
    "then the above conjecture holds where @xmath586 consists precisely of the `` special '' representations as originally defined by lusztig @xcite .    indeed , by standard reduction arguments",
    ", we can assume that @xmath0 is irreducible .",
    "if @xmath0 is a finite weyl group , the assertion holds by the results of lusztig @xcite , @xcite , as already discussed in example  [ ctweyl ] . if @xmath0 is of type @xmath9 , @xmath10 or @xmath4 , then the required assertions are verified by inspection using the data in examples  [ gammah34 ] and  [ ctdi ] .",
    "we consider the quantity @xmath588 where the first sum runs over all left cells of @xmath0 .",
    "since the direct sum of all left cell modules @xmath227_1 $ ] is isomorphic to the regular representation of @xmath0 , we have @xmath589 this shows that @xmath590 . on the other hand , by conjecture  [ cspec ]",
    ", we have @xmath591 so @xmath592 equals the number of left cells .",
    "this yields the desired equality .      [",
    "uni2 m ] let @xmath0 be of type @xmath9 where @xmath523 is even and @xmath524 .",
    "assume that we have a weight function such that @xmath593 .",
    "the left cells and the corresponding left cell modules are given as follows ( see , for example , @xcite ) : @xmath594 ( notation as in example  [ ctdi ] . )",
    "we have : @xmath544_1 = 1_w,\\quad [ 2_1]_1 = \\mbox{sgn}_1,\\quad [ 1_{m-1}]_1   = \\mbox{sgn}_2,\\quad [ 1_m]_1 = \\mbox{sgn},\\\\ [ 1_1,2_2,1_3,\\ldots,2_{m-2}]_1=[1_2,2_3,1_4,\\ldots,2_{m-1}]= \\mbox{sum of all $ \\sigma_j$}.\\end{gathered}\\ ] ] by ( * ? ? ?",
    "1.3.7 ) , the @xmath7-invariants are given as follows :      arguing as in example  [ ctdi ] , we find the following leading coefficients : @xmath596 for @xmath531 , we now obtain @xmath597 , @xmath598 and also @xmath599 where @xmath558 for @xmath600 .",
    "next , assume that @xmath601 is odd ; then we find the recursions @xmath602 finally , the numbers @xmath501 have been determined in @xcite : @xmath603 this allows us , first of all , to verify that conjecture  [ conj42 ] holds where @xmath604 continuing as in example  [ ctdi ] , we conclude that conjecture  [ cspec ] also holds where @xmath605 for example , for @xmath606 and @xmath607 , @xmath608 , we obtain for the two left cells with @xmath609 elements : @xmath610    [ unf4 ] let @xmath0 be of type @xmath58 , with generators and diagram as in table  [ mcoxgraphs ] . then a weight function @xmath254 is specified by two elements @xmath611 where @xmath612 and @xmath613 .",
    "let us assume that @xmath614 and @xmath615 .",
    "( by the discussion in @xcite , the case where @xmath189 for some @xmath33 can always be reduced to the case where all weights are strictly positive , possibly by passing to a proper reflection subgroup of @xmath0 . ) by the symmetry of the diagram",
    ", we can also assume that @xmath616 .",
    "then , by the results in @xcite , there are essentially only four cases to consider : @xmath617 the equal parameter case is already settled by lusztig @xcite . in the remaining cases it turns out that , for every left cell @xmath213 , the representation @xmath227_1 $ ] is multiplicity - free with at most @xmath51 irreducible constituents . using algorithm  [ algob ]",
    "we have checked that conjecture  [ cspec ] holds where the sets @xmath586 are given as follows : @xmath618 in all cases where @xmath213 has two irreducible components , the table @xmath502 is given by : @xmath619 we give one particular example where @xmath620 , for the case @xmath608 , @xmath607 : there is a left cell @xmath213 such that @xmath621 where @xmath622 note that both @xmath623 and @xmath48 are even .",
    "we have @xmath457 , @xmath620 and @xmath624 in all cases where @xmath213 has three irreducible components , the table @xmath502 is given by : @xmath625 we note the following special behaviour in the case where @xmath626 .",
    "by @xcite , there are three left cells @xmath627 such that @xmath628_1=1_3\\oplus 8_3 , \\qquad [ { { \\mathfrak{c}}}_2]_1=2_1\\oplus 9_1 , \\qquad [ { { \\mathfrak{c}}}_3]_1=9_1\\oplus 8_3.\\ ] ] the corresponding representations in @xmath586 are @xmath629 , @xmath630 , @xmath630 , respectively .",
    "since we have @xmath631_1,[{{\\mathfrak{c}}}_3]_1)\\neq 0 $ ] and @xmath632_1,[{{\\mathfrak{c}}}_3]_1)\\neq 0 $ ] , the three left cells are contained in the same two - sided cell .",
    "thus , there are two representations in @xmath586 belonging to this two - sided cell .",
    "( this is not an isolated event : there are many examples in type @xmath61 with unequal parameters as well . )  ",
    "this phenomenon can not happen in the equal parameter case where every two - sided cell contains a unique special representation ( see lusztig ( * ? ? ?",
    "* chap .  5 ) ) .",
    "the above examples show that conjecture  [ cspec ] holds for @xmath0 of type @xmath9 , @xmath58 and any weight function @xmath254 .",
    "thus , the case that remains to be dealt with is type @xmath61 with unequal parameters .",
    "i have checked that conjecture  [ cspec ] holds for type @xmath61 where @xmath633 and any weight function . in general , by the results in @xcite , it is expected that all left cell modules @xmath227_1 $ ] in type @xmath61 are multiplicity - free ; hence , one may hope that the tables @xmath484 might be determined as in ( * ? ? ?",
    "if this were true , then conjecture  [ cspec ] would follow in this case as well .                              , ` chevie  a system for computing and processing generic character tables ' , _ appl .",
    "algebra engrg .",
    "_ 7 ( 1996 ) , 175210 ; electronically available at http://www.math.rwth-aachen.de/@xmath634chevie"
  ],
  "abstract_text": [
    "<S> we introduce the computer algebra package pycox , written entirely in the python language . </S>",
    "<S> it implements a set of algorithms  in a spirit similar to the older chevie system  for working with coxeter groups and hecke algebras . </S>",
    "<S> this includes a new variation of the traditional algorithm for computing kazhdan  lusztig cells and @xmath0-graphs , which works efficiently for all finite groups of rank @xmath1 ( except @xmath2 ) . </S>",
    "<S> we also discuss the computation of lusztig s leading coefficients of character values and distinguished involutions ( which works for @xmath2 as well ) . </S>",
    "<S> our experiments suggest a re - definition of lusztig s `` special '' representations which , conjecturally , should also apply to the unequal parameter case . </S>"
  ]
}
{
  "article_text": [
    "a vast number of scientific applications are increasingly requiring the computation of large amounts of data .",
    "the hep area is one of the best examples of these heavy needs .",
    "this diverse demand has contributed to the proliferation of computing and storage systems , thus making computers an integral part of several grid environments .    in the large hadron collider ( lhc )",
    "accelerator at cern there are millions of collisions taking place per second .",
    "each collision generates about 1 mb of information .",
    "the computational requirements of the four experiments that will use the lhc are enormous : each experiment will produce a few pb of data per year . for example , atlas and cms foresee to produce more than 1 pb / year of raw data .",
    "alice foresees around 2 pb / year of raw data .",
    "lhcb will generate about 4pb / year of data.@xcite    all this tbs of data are generated at a single location ( cern ) where the accelerator and experiments are hosted , but from that point on , innumerous activities such as digitization , reconstruction and others have to be done . the computational capacity required for those activities",
    "implies that they must be performed at geographically distributed sites . to allow that kind of execution , data and resources , must always be available to all sites in the network in a transparent and efficient way .",
    "besides these issues concerning data processing and resources usage , hep impose several other requirements .",
    "one job normally involves the usage of one or more datasets .",
    "each dataset is composed by several events and each event has its own structure .",
    "all this information must be supported by the system.@xcite    the solution of these issues calls for simple , efficient and reliable distributed tools .",
    "boinc stands for berkeley open infrastructure for network computing .",
    "it is a software platform for distributed computing developed by the same team that developed seti@home .",
    "it is a new framework designed to make volunteer - based distributed computing .",
    "any computer connected to the internet can take part in boinc s computational efforts .",
    "one practical example where boinc can be used are research projects eager to use these `` almost infinite '' number of computers to increase their computing power .",
    "this is that is now called public computing .",
    "public computing can provide more computing power than any supercomputer , cluster , or grid , and the disparity will grow over time.@xcite .",
    "current public computing projects can provide some indicators .",
    "for example , seti@home run on about 1 million computers@xcite , providing a processing rate of 60 teraflops .",
    "in contrast , one large conventional supercomputer can provide about 12 teraflops .",
    "if we accept the projection that in 2015 there will be 150 million pcs connected to the internet , then the computing power may ascend to many petaflops.@xcite      * * project : * a project is a group of distributed applications , run by one organization .",
    "projects are independent , each one has its own applications , databases and servers . * * application : * this is one program dedicated to one specific computation , made up by several workunits that will produce results .",
    "it may have several versions and one application can include several files . *",
    "* workunit : * one workunit describes one computation that has to be done . *",
    "* result : * one result is one instance of a computation at any of its possible states .",
    "boinc works in a similar way as seti@home , its main difference being that it is able to support many other applications from within its framework",
    ". any existing application , in common languages such as c , c++ or fortran , can run as a boinc application with little or no modification , only a few boinc specific methods have to be used .",
    "applications and associated input / output data are not physically limited since boinc supports production / consuming of large amounts of data .",
    "users can run many different projects simultaneously .",
    "currently , there are several public projects running on boinc worldwide .",
    "boinc is fully manageable through its web - based system where it is possible to set up how boinc should use the available resources . in this web - based system",
    "it is also possible to check time - varying measurements such as cpu load , network traffic and database table sizes .",
    "this simplifies the task of diagnosing current state and performance problems .",
    "another feature of boinc is fault - tolerance , since it can have separate scheduling and data servers with multiple servers of each type .",
    "thus , if one of these servers is down another will guarantee the execution of boinc tasks .    in terms of security boinc",
    "is protected from several kinds of attacks .",
    "for example , to avoid the distribution of viruses it uses digital signatures based on public - key encryption . to avoid denial of services attacks",
    ", each result file has an associated maximum size .",
    "the implemented credit system allows to rank users and groups of users according to their computational efforts .      for our work",
    "it is extremely important to understand how boinc manages data .",
    "figure [ boinc_data_movement ] describes this behavior .",
    "after the initial communication , the client requests work to the scheduling server . in this request",
    "the client only gives information about its hardware characteristics . according to this information",
    ", the scheduling server checks whether the client is able to run one of the available jobs .",
    "if it does , one reply is sent and the client requests to download the application and the input files .",
    "then , there is a certain time limit in which the client has to compute the workunit and send the result back to the server .",
    "nowadays , we can find an increasing number of distributed computing solutions , ranging from single volunteer - user - applications to dedicated clusters , from open source to commercial solutions , from dedicated to more generic solutions .",
    "since our goal is distributed computing for hep , some projects with specific solutions using dedicated applications such as seti@home , distributed.net , folding@home , etc , can not be used out of the box .",
    "but the importance reached by those projects serves as a proof that their approach to computing large amounts of data is very successful .",
    "there are some commercial applications for distributed computing such as entropia , data synapse , parabon , avaki , and united devices .    as a related work we can mention xtremweb , a distributed computing tool used to generate monte carlo showers.@xcite we can also mention jxgrid a generic distributed computing tools that can process hep applications.@xcite",
    "considering the requirements and use cases of many hep activities and the features of boinc , we realize that a boinc hep specific version could be an important and helpful tool for the physicist s daily tasks .",
    "one of hep@home main design goals is to avoid data movement . in principle",
    ", jobs run where their input data is located .",
    "this is an important issue since in hep , input files are normally very large ; thus , it avoids heavy data transfers .",
    "in contrast to boinc , where for a given project users only run predefined project - specific applications , in hep@home users can be available for processing their own applications .",
    "given the fact that boinc allows applications to have multiple files , an environment management system was defined .",
    "this allows and simplifies the usage of files associated to a certain application such as libraries , scripts , configuration files , job options files , etc .",
    "together with the main application , these files can clearly define the conditions of a certain execution .",
    "therefore , using these environments we have the possibility to re - execute any job . to make this mechanism even more useful ,",
    "environments can be tuned by the submission of a patch .",
    "this allows users to change only the crucial aspects of one job execution .",
    "for example , the environment file of a reconstruction job contains all job options files plus several scripts .",
    "for this environment we can have two patches to make reconstruction for 10 events and 100 events .",
    "hep@home allows users to manage their own input data .",
    "when creating one workunit , besides uploading the environment / patch the user has to submit an identification of the input file he wants to work on , and a description of the result file that his work will generate . then , his job will run in the client which has the specified file .",
    "if none of the clients has the file then the job will not run .",
    "optionally he may submit one secondary `` get input '' application , that defines where / how the file can be found / generated .",
    "this is useful when none of the clients has the required file . in this case",
    ", the `` get input '' application will be set to run according to a predefine policy .",
    "hence , even if he does not know whether the files he wants to work on are available in some client or not , the user has the guarantee that the computation will be done  some client has or will have the required input file",
    ".    normally , different hep events are independent .",
    "datasets are composed by events which do not have any connection among them . on the other hand , algorithms may have some sort of sequence and have to be executed according to it .",
    "hep@home implements a simple mechanism to allow ordered work execution .      to allow job execution according to hep specific data movement requirements ,",
    "several developments were made in boinc components .        in figure [ hephome_data_movement ]",
    "we can see that after the initial communication , the client requests work to the scheduling server . in this request",
    "the client now gives information about its hardware characteristics and a list of all the available input files it has .",
    "after , the scheduling server checks if the client is able to run one of the available jobs . two possible situations can occur for a given job :    * the client has the required input files . in this case",
    "an ok reply is sent , * the client does not have the required files . in this case",
    "no work is sent .",
    "the server waits for a certain time according a predefined policy .",
    "this policy is based on rpc communication with the clients . at the end of this period , if none of the available clients has declared to have the necessary input files , the next client to request work can download the `` get input '' application , which will tell this client how to generate / get the input files .",
    "after this application is computed , this client will declare to have the input file it has just generate / download the next time it communicates .",
    "server will then sent the ok reply .",
    "the client then requests to download the application , its environment and the patch to apply .",
    "the input files are not downloaded since they are already in the client .",
    "when the computation is done the results are uploaded .",
    "boinc s generic web interface is very complete . in order to implement the described additional features ,",
    "hep@home has introduced new interfaces .",
    "although able to allow submission of several applications , only atlas jobs can be submitted to this web interface at this time .",
    "in this section we present one use case to show how can physicists use this tool to run their atlas jobs . this use case",
    "s actor can be the physicist doing either personal jobs submission or real production .",
    "let us suppose these initial facts : we have several atlas jobs to run , we know what each job will generate and consume and where to generate or get those files .",
    "finally we have computers connected to the internet ranging from simple desktop computers to cluster systems spread across the world .",
    "any computer connected to the internet is able to take part in this computation ; the only restrictions are the job - specific requirements .",
    "the execution process is very simple . after selecting the atlas application he has previously submitted",
    ", the user submits his work : the environment files ( job options files , scripts , etc ) , a patch to apply to this environment to specify how many and what events to use , one template describing the input files and , optionally , the `` get input '' application for the input files and another template describing the result files .    as result",
    ", the user gets the aggregation of the several output files produced , in a unique output file which can be downloaded to his local computer .",
    "in order to test the architecture developed and to get example results for the system behavior , several tests have been made .",
    "the defined jobs represent a complete execution of a typical sequence of physics tasks using muon events : generation , simulation , digitization and reconstruction .",
    "all these steps were based on two main variables : @xmath0 - number of events and @xmath1 - number of cpus running boinc .",
    "the sequence of one execution was :    * 1st ) muon generation : @xmath0 events ( 1x ) * 2nd ) muon simulation : @xmath2 events ( 10x ) * 3rd ) muon digitization : @xmath2 events ( 10x ) * 4th ) muon reconstruction : @xmath2 events ( 10x )    two groups of tests were defined : group a where @xmath3 and group b where @xmath4 .",
    "for each of these groups , variable @xmath1 was tested with the following values : @xmath5 , @xmath6 , @xmath7 . for each group",
    "the defined sequence was also tested directly in one computer ( not using boinc ) .",
    "the columns graph in figure [ graph ] show us the results obtained for both groups .",
    "as we can see , in group a , with 8 clients running we achieve almost half of the time of a non - boinc execution .",
    "the execution time with two and four boinc clients is worst than not using boinc .",
    "these results can be explained by the overhead introduced by the communications between the boinc server and the clients , and by the fact that in this group of tests the number of events to process is very small ( only 100 ) .",
    "on the other hand , in group b ( 1000 events ) , the non boinc execution was clearly the worst . in this case with 1000 events ,",
    "the computation is heavier than with 100 events ; therefore , the overhead introduced by the communications becomes less important .",
    "in the lines graph of figure [ graph ] we can see the information regarding data movement . in most cases execution",
    "was made where data is stored .",
    "developing a specific tool for hep is a complex problem since several issues related to data and resources availability have to be considered .",
    "based on the success of seti@home , boinc as a generic distributed computing platform appears as a good solution to deal with that complexity .",
    "using boinc , our efforts were focused to hep specific issues .",
    "as the results show , hep@home can produce faster results with no prejudice in the reliability .",
    "the tests performed have proved that the bigger the complexity of the computation ( as is the case in hep ) and the bigger the number of clients , the better the improvement compared to non - distributed results .",
    "we can also conclude that we manage to avoid data movement .",
    "finally , hep@home gives physicists the possibility to submit their own jobs with the guarantee that the input data will always be available .",
    "as future plan , one first topic to implement is to make the boinc server decide which client to run based on its characteristics , on the presence of the input files and on the presence of the environment too . also , our work must be focus in the optimization of several issues .",
    "the web interface can be improved allowing an easier and friendlier way to submit jobs , either atlas tasks or others .",
    "special attention must also be given to the communications among server and clients avoiding inefficient communication .",
    "the optimization of clients usage avoiding idle times can be also improved .",
    "this work was supported by the _ fundao da cincia e tecnologia _ under the grant pocti / fnu/43719/2002 ."
  ],
  "abstract_text": [
    "<S> project seti@home has proven to be one of the biggest successes of distributed computing during the last years . with </S>",
    "<S> a quite simple approach seti manages to process large volumes of data using a vast amount of distributed computer power .    to extend the generic usage of this kind of distributed computing tools </S>",
    "<S> , boinc is being developed . in this paper </S>",
    "<S> we propose hep@home , a boinc version tailored to the specific requirements of the high energy physics ( hep ) community .    </S>",
    "<S> the hep@home will be able to process large amounts of data using virtually unlimited computing power , as boinc does , and it should be able to work according to hep specifications . in hep the amounts of data to be analyzed or reconstructed are of central importance . therefore , one of the design principles of this tool is to avoid data transfer . </S>",
    "<S> this will allow scientists to run their analysis applications and taking advantage of a large number of cpus . </S>",
    "<S> this tool also satisfies other important requirements in hep , namely , security , fault - tolerance and monitoring . </S>"
  ]
}
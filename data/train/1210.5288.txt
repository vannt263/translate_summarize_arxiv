{
  "article_text": [
    "ever since the seminal work of barabsi and albert  @xcite , faloutsos et al .",
    "@xcite , broder et al .",
    "@xcite , degree distributions are widely regarded as a key feature of real - world networks .",
    "the heavy - tailed nature of these degree distributions has been repeatedly observed in a wide variety of domains .",
    "one of the invaluable tools in analyzing heavy - tailed graphs is the ability to produce a random or ",
    "generic \" graph with a desired degree distribution .",
    "the classic edge configuration  @xcite does exactly that and is a common method for constructing such graphs .",
    "chung and lu  @xcite give more analyzable variants of this model .",
    "mcmc methods based on random walks are also used for this purpose  @xcite .",
    "these constructions are useful for testing algorithms and comparing with existing models .",
    "it also helps in design of new algorithms .",
    "for example , versions of the stochastic block model  @xcite used for community detection use chung - lu type constructions for null models . the classic notion of modularity  @xcite measures deviations from a chung - lu structure to measure community structure . at a higher level , having a baseline model that accurately matches the degree distribution informs us about other properties . notably , work on the eigenvalue distributions on chung - lu graphs  @xcite suggest the observations on so called  eigenvalue power laws \" are simply a consequence of heavy tailed degree distributions . for these reasons ,",
    "we think of the edge - configuration or chung - lu constructions as _",
    "null models_.    while all of this work has been extremely useful in advancing graph mining , it ignores the crucial property of _ direction _ in networks .",
    "most interaction , communication , web networks are inherently directed , and the standard practice is to make these undirected .",
    "furthermore , directed networks exhibit _ reciprocity _ , where some pairs of vertices have edges in both directions connecting them . for example , in , there are two - way connections between some vertices .",
    "this indicates a much stronger connection between them .",
    "newman  @xcite introduces the reciprocity , @xmath2 , which measures the density of reciprocal edges in a network .",
    "it can be interpreted as the probability of a random edge in a network being reciprocated .",
    "the reciprocity is often high in social networks but is lower in information networks ; see .",
    "it was observed that high reciprocity leads to faster spread of viruses or news  @xcite .",
    "the importance of reciprocal edges is underscored by a study of formation order of these edges  @xcite . in the flickr network ( which has 68% reciprocal edges ) , 83% of all reciprocal edges are created within 48 hours after the initial edge creation .",
    "the twitter network has 22.1% of the reciprocal edges  @xcite .",
    "reciprocity also plays an important role in interactions in massive multiplayer online games  @xcite .",
    "all these studies show that reciprocal edges are quite special , and provide important information about the social processes underlying these graphs . but all graph models and constructions completely ignore these edges .",
    "a key concern with graph generation is simple construction and scalability , as we may want test instances with millions ( and more ) edges .",
    "a key feature for a null model is its scalability and its ability to quickly produce a large graph that matches degree distributions .      for a directed graph , there are three distinct degree distributions associated with it : the in - degree , the out - degree , and the reciprocal degree distribution .",
    "the last can be thought of as the degree distribution of the undirected subgraph obtained by only taking reciprocal edges . a good null model , along the lines of the configuration model or chung - lu ,",
    "must match all three of these .",
    "we design the _ fast reciprocal directed _ ( frd )",
    "graph generator that does exactly that .",
    "the _ fast reciprocal directed _",
    "( frd ) graph generator takes as input in-,out- , and reciprocal degree distributions , and produces a random graph matching these .",
    "it can be thought of as a generalization of the chung - lu model for this setting .",
    "we provide a series of empirical results showing how it matches these degree distributions for real datasets .",
    "our algorithm is _ fast and scalable_. it only requires some minimal preprocessing and the generation of @xmath0 random numbers .",
    "it takes less than a minute to generate a graph with multi - million nodes and edges , faster than any comparable models .",
    "we compare frd s degree distributions fits with existing directed graph models . at some level , this is not a fair comparison , since we do not consider our generator to be realistic ( while competing methods attempt to match other important graph properties and mimic real world processes ) .",
    "our model is meant to be a baseline or null model that matches degree distributions .",
    "but our comparisons with realistic graph models are quite illuminating . despite the large number of reciprocal edges in real networks ,",
    "none of the other models come even marginally close to matching the reciprocal degree distribution .    as an aside",
    ", we explain why the number of degree-1 nodes is much lower than intended in chung - lu like models @xcite and propose a solution to obtain a better match for the degree-1 vertices .",
    "this fix is incorporated in the frd generator .",
    "as mentioned earlier , edge configuration models have a long history . miller and hagberg",
    "@xcite discuss faster algorithms for implementing chung - lu , while seshadhri et al .",
    "@xcite discuss a different parallel version .",
    "a directed version of the edge configuration model together with mathematical analyses of connected component structure was given in  @xcite .",
    "our work is related to this construction .",
    "reciprocal edges are not taken into account by most common graph models .",
    "the forest fire ( ff ) model  @xcite and stochastic kronecker graph ( skg ) model @xcite are often used to generate graphs , and do produce directed graphs .",
    "they can match in- and out - degree distributions reasonably well , and we use these models for comparisons .    most common graph models ( e.g. , preferential attachment  @xcite , edge copying model@xcite , forest fire  @xcite ) produce directed graphs incrementally to imitate the growth of graphs .",
    "they produce heavy - tailed in- and out- degree distributions , but almost no reciprocal edges .",
    "furthermore , they are not scalable to millions of nodes and billions of edges .",
    "the stochastic kronecker graph model  @xcite is scalable , but is also unable to produce reciprocity . in this study",
    ", we compare our results with the forest fire ( ff ) model and stochastic kronecker graph ( skg ) model .",
    "a notable exception is work of zlatic et al",
    ".  @xcite that generalizes preferential attachment ( pa ) using reciprocal edges .",
    "unfortunately , it is not scalable and does not match out - degree distributions ( in their experiments ) .",
    "another variant of pa  @xcite does allow edges between existing nodes ( thereby introducing some reciprocity ) , but the model is not meant to really match real data .",
    "we first introduce some notation . given a directed graph @xmath3 , let @xmath4 be the number of nodes and @xmath1 be the number of directed edges . for instance , in , @xmath5 and @xmath6 .",
    "we divide the edges into three types :    @xmath7 = reciprocal degree ( each reciprocal edge corresponds to a _ pair _ of directed edges ) ,    @xmath8 = in - degree ( excluding reciprocal edges ) , and    @xmath9 = out - degree ( excluding reciprocal edges ) .",
    "we also define the _ total _ in- and out- degrees , which include the reciprocal edges , i.e. ,    @xmath10 = total in - degree , and    @xmath11 = total out - degree .",
    "most directed graph models consider only the total in- and out - degrees , ignoring reciprocity . as an example of these measures , node b in",
    "has @xmath12 , @xmath13 , @xmath14 , @xmath15 , and @xmath16 .",
    "we may also assemble corresponding degree distributions , as follows . for any @xmath17 ,",
    "define    @xmath18 = number of nodes with reciprocal - degree @xmath19 ,    @xmath20 = number of nodes with in - degree @xmath19 ,    @xmath21 = number of nodes with out - degree @xmath19 ,    @xmath22 = number of nodes with total - in - degree @xmath19 , and    @xmath23 = number of nodes with total - out - degree @xmath19 .",
    "let @xmath24 be the maximum of all possible degrees .",
    "then we can express @xmath4 and @xmath1 as @xmath25 the reciprocity of a graph @xcite is @xmath26    we will present an extension of the chung - lu model that accounts for in- and out - degrees .",
    "this will be a part of the final frd generator .      in this first step , we consider only the total in- and out - degrees and ignore reciprocity .",
    "this can be thought of as a fast implementation of the directed edge configuration model in  @xcite .",
    "we extend the fast chung - lu ( fcl ) algorithm for undirected graphs @xcite .",
    "this is based on the idea that each edge creation can be done independently if the degree distribution is given .",
    "the fcl reduces the complexity of the cl model from @xmath27 to @xmath0 , and the same can be done in the directed case .    in the chung - lu model @xcite , after @xmath1 insertions ( and assuming @xmath28 for all @xmath29 ) the probability of edge  @xmath30 is @xmath31    the naive approach flips a coin for each edge independently .",
    "the `` fast '' approach flips a coin to pick each endpoint .",
    "the probability of picking node @xmath32 as the source is proportional to @xmath33 and the probability of picking node @xmath34 as the destination is proportional to @xmath35 .",
    "our implementation works as described in .",
    "we first pick all the source nodes and then all the sink nodes using the weighted vertex selection described in .",
    "if we want 500 nodes with out - degree of @xmath36 , for example , we create a `` degree-2 pool '' of 500 vertices and pick from it a total of 1000 times in expectation by doing weighted sampling of the pools . within the pool ,",
    "we pick a vertex uniformly at random with the further expectation that each vertex in the pool will be picked 2 times on average . in",
    ", the pool of degree-@xmath19 vertices is denoted by @xmath37 and the likelihood that the @xmath19th pool is selected is denoted by @xmath38 . in all cases except @xmath39",
    ", the size of the pool is defined by the number of vertices of that degree and the weight of the pool is the number of edges that should be in that pool .",
    "the one exception is the degree-1 pool , which has a _ blowup _ factor @xmath40 . for now , assume @xmath41 ; we explain its importance further on in . at the end of",
    ", we randomly relabel the vertices so there is no correlation between the degree and vertex identifier",
    ".    the fd method can produce repeat edges , unlike the naive version that flips @xmath42 weighted coins ( one per edge ) .",
    "nevertheless , this has not been a major problem in our experience .",
    "another alternative to is to put @xmath19 copies of each degree-@xmath19 vertex into a long array and then randomly permute it  this is the approach of the _ edge configuration _ model .",
    "this gives the _ exact _ specified degree distribution ( excepting possible repeats ) by using a random permutation of a length @xmath43 array .",
    "this would produce very similar results to what we show here , and is certainly a viable alternative .",
    "we also mention an alternate way of generating chung - lu graphs that could be adapted for the directed case @xcite .",
    "calculate @xmath44 and @xmath45 for @xmath3 @xmath46 @xmath47 @xmath48 _ remove self - links and duplicates from @xmath49 _",
    "@xmath50 @xmath51 @xmath52 @xmath53 @xmath54 @xmath55 @xmath56 @xmath57 @xmath58 random degree in @xmath59 , proportional to weights @xmath60 @xmath61 uniform random vertex in @xmath62 @xmath63 unique indices in @xmath64 @xmath65 random mapping from @xmath66 to @xmath67      the fd model generates a directed graph and matches to the total in- and out - degree distributions .",
    "however , it produces virtually no reciprocal edges .",
    "the frd null model explicitly introduces reciprocity using an undirected model and uses fd for remaining directed edges .",
    "we blend the two schemes in one model . in this case",
    ", we explicitly consider the three distributions , @xmath68 , @xmath69 , and @xmath70 .",
    "the method is presented in .",
    "calculate @xmath68 , @xmath69 , and @xmath70 for @xmath3 @xmath71 @xmath72 @xmath73 @xmath74 @xmath75 @xmath76 @xmath77 _ remove self - links and duplicates from @xmath49 _      below , we present our arguments for the case of the in - degree , but the same arguments applied to out or reciprocal degrees .",
    "we use just the notation @xmath19 to denote the in - degree , for simplicity .",
    "if we run vertexselect ( ) repeatedly , always assigning the same ids to each vertex pool and omitting the random relabeling ( @xmath78 ) at the end , each node will get its desired in - degree _ on average across multiple runs_. for any single run , however , this will not be the case .",
    "in fact , the degrees are poisson distributed .",
    "the probability that a vertex @xmath79 in pool @xmath37 is selected @xmath80 times is @xmath81    this claim is easy to see .",
    "we expect that pool @xmath37 will be selected @xmath82 times .",
    "therefore , each element of @xmath37 will be selected an average of @xmath19 times , so that is the poisson parameter .",
    "( there may be some small variance in the number of times that each pool is selected , but the variance should be small enough not to greatly impact the average degree . )    the effect of the poisson distribution is particularly noticeable in the pool of degree-1 nodes where the probability that a node in @xmath83 has in - degree @xmath84 is only 36% .",
    "an additional 36% will have an in - degree of @xmath85 and the remaining 28% will an in - degree of @xmath86 .",
    "of course , there will be some contributions from the other pools , e.g. , @xmath87 will produce 27% degree-1 nodes . however , in a power law degree distribution , @xmath88",
    "so its contribution is small .",
    "nevertheless , we can calculate the expected number of degree-@xmath80 nodes by summing over the contributions across all degrees pools .",
    "let @xmath89 denote the number of nodes that are selected exactly @xmath80 times .",
    "then @xmath90    again , the claim is easy to see and so the proof is omitted .    for many real - world distributions , @xmath91 .",
    "we propose a workaround to this problem  we would like to reduce the number of nodes in @xmath83 that are selected multiple times . to do this",
    ", we increase the size of the pool via a _ blowup factor _ @xmath40 , which is used as follows .",
    "let @xmath83 contain @xmath92 nodes .",
    "the weight of the pool will not change , meaning that it will still be selected @xmath93 times .",
    "therefore , we may make the following claim .    the probability that a vertex @xmath79 in pool @xmath83 with @xmath94 elements is selected @xmath80 times is @xmath95 furthermore , the expected number of nodes in @xmath83 that are selected exactly one time is @xmath96 .",
    "hence , letting @xmath89 denote the number of nodes that are selected exactly @xmath80 times , we have @xmath97    we still pick pool @xmath83 a total of @xmath93 times , so that average ( i.e. , the poisson parameter ) for this pool is now reduced to @xmath98 since there are @xmath92 elements .",
    "the next equation comes from the fact that there are @xmath92 nodes in the pool , so we multiply the number of nodes with the probability of being picked @xmath80 times with @xmath84 to determine the expected number .    finally , the revised expectation comes from changing the formula for the first pool to account for the enlarged pool size .",
    "if we choose , for example , @xmath99 , then we can expect that @xmath100 nodes in @xmath83 to be selected exactly one time .",
    "we show an example of the impact of this modification in , where we show the total in - degree for soc - epinions1 with and without a blowup factor of @xmath99 .",
    "the degrees are logarithmicly binned and summed .",
    "note that the match for the number of degree-1 nodes is improved , but there is a small penalty in the match for degree-2 nodes .",
    "we use @xmath99 in all experiments reported in this paper .",
    "we test our models on various directed networks such as citation ( cit - hepph ) , web ( web - notredame ) , and social ( soc - epinions1 , soc - livejournal ) @xcite .",
    "we also test our models on large scale graphs coming from online social networks ( youtube , flickr , livejournal ) @xcite .",
    "we list the attributes of the networks in after removing self - links and making the graph unweighted ( simple ) .",
    "as expected , the reciprocity @xmath2 is very low in the citation network .",
    "we elaborate how we fit the models to the real networks below .",
    "[ cols= \" < , > , > , > , > , > , > \" , ]     [ tab : reciprocal ]    we also analyze the generated degree distributions by each model .",
    "the plots are log - binned for readability .",
    "shows the results on the soc - epinions1 graph .",
    "here we see that all four methods do fairly well in terms of matching the total in- and out - degree distributions .",
    "( the few low values for skg are due to its well - known cycling behavior @xcite . )",
    "however , only the frd method matches the reciprocal degree distribution .",
    "the fd and skg methods produce far too few reciprocal edges and ff does not produce any .",
    "we see very similar behavior in for soc - livejournal , except here the ff and skg degree distributions do not match the total out - degree distribution very well . once again , neither fd nor skg produces many reciprocal edges and ff does not produce any . for larger graphs , we have not included skg due to the expense of fitting the model",
    ". we do compare to ff , however , for the youtube and flickr graphs shown in and , respectively .",
    "after extensive tuning , ff is able to match the total in- and out - degree distributions fairly well .",
    "but it of course can not match the reciprocal degree .",
    "we also show results just for our methods on the largest graph : livejournal in . we observe a very close match for the frd method in all three distributions . for completeness ,",
    "we show results for the citation network cit - hepph in   and web network web - notredame in  .",
    "reciprocity in directed networks has not received much attention in terms of generative models . a first - level goal for a generative model would be to match specified in- , out- , and reciprocal degree distributions .",
    "the frd generator does exactly that and therefore is a good null model for social network analysis .",
    "it is a variant of chung - lu that explicitly takes care of reciprocal edges .",
    "we find it very intriguing that existing graph models completely ignore reciprocal edges despite the relatively high fraction of such edges . while the main challenge in graph modeling would be to design a realistic model that accounts for reciprocity , we feel that frd is a first step in that direction .",
    "this work was funded by the darpa graph - theoretic research in algorithms and the phenomenology of social networks ( graphs ) program and by the doe complex distributed interconnected systems ( cdis ) program .",
    "sandia national laboratories is a multi - program laboratory managed and operated by sandia corporation , a wholly owned subsidiary of lockheed martin corporation , for the u.s .",
    "department of energy s national nuclear security administration under contract de - ac04 - 94al85000 .",
    "milena mihail and christos  h. papadimitriou , `` on the eigenvalue power law '' , in _ proceedings of the 6th international workshop on randomization and approximation techniques _ ,",
    "london , uk , 2002 , random 02 , pp .",
    "254262 , springer - verlag .",
    "jon  m. kleinberg , ravi kumar , prabhakar raghavan , sridhar rajagopalan , and andrew  s. tomkins , `` the web as a graph : measurements , models , and methods '' , in _",
    "cocoon99_. 1999 , pp .",
    "117 , springer - verlag ."
  ],
  "abstract_text": [
    "<S> degree distributions are arguably the most important property of real world networks </S>",
    "<S> . the classic edge configuration model or chung - lu model can generate an undirected graph with any desired degree distribution . </S>",
    "<S> this serves as a good _ null model _ to compare algorithms or perform experimental studies . </S>",
    "<S> furthermore , there are scalable algorithms that implement these models and they are invaluable in the study of graphs . </S>",
    "<S> however , networks in the real - world are often directed , and have a significant proportion of _ reciprocal edges_. a stronger relation exists between two nodes when they each point to one another ( _ reciprocal edge _ ) as compared to when only one points to the other ( _ one - way edge _ ) . despite their importance </S>",
    "<S> , reciprocal edges have been disregarded by most directed graph models . </S>",
    "<S> we propose a null model for directed graphs inspired by the chung - lu model that matches the in- , out- , and reciprocal - degree distributions of the real graphs . </S>",
    "<S> our algorithm is scalable and requires @xmath0 random numbers to generate a graph with @xmath1 edges . </S>",
    "<S> we perform a series of experiments on real datasets and compare with existing graph models . </S>"
  ]
}
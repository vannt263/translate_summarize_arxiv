{
  "article_text": [
    "the self - avoiding walk ( saw ) on regular lattices is one of the most important and classic combinatorial problems in statistical mechanics @xcite . an _",
    "@xmath2-step self - avoiding walk _",
    "@xmath3 on a regular lattice is a sequence of _ distinct _ vertices @xmath4 such that each vertex is a nearest neighbour of it predecessor .",
    "saws are considered distinct up to translations of the starting point @xmath5 .",
    "the fundamental problem is the calculation ( up to translation ) of the number of saws , @xmath6 , with @xmath2 steps .",
    "it is generally believed that @xmath6 grows exponentially with power law corrections    @xmath7    where @xmath8 is called the _ connective constant _",
    ", @xmath9 is a critical exponent and @xmath10 a critical amplitude .",
    "hammersley and morton @xcite were the first to prove the existence of the limit    @xmath11    the exact value of @xmath8 is known only on the hexagonal lattice , where nienhuis @xcite showed , using non - rigorous methods , that @xmath12 , and on the @xmath1 lattice , where jensen and guttmann @xcite found an exact and rigorous connection between the connective constant @xmath13 and the connective constant for the hexagonal lattice @xmath14 . on the square lattice",
    "it has been observed @xcite that @xmath15 is indistinguishable from the reciprocal of the unique positive root @xmath16 of the simple polynomial @xmath17 , and while this ` conjecture ' has stood the test of time it remains a purely numerical observation .    since finding the exact value of @xmath8 (",
    "let alone proving such results rigorously ) is extremely difficult much effort has been devoted to more general methods for proving rigorous _ bounds _ on the connective constant .",
    "brief overviews of some of the methods used can be found in @xcite .",
    "a systematic procedure for improving the lower bounds can be devised from a method due to kesten @xcite .",
    "it was used by guttmann @xcite to improve the lower bounds for the connective constant on the square and simple cubic lattices and more recently by alm and parviainen @xcite to obtain improved lower bounds on the connective constant for the hexagonal lattice . in this paper",
    "we further refine these bounds and extend the work to the triangular , kagom and @xmath0 lattices .",
    "finally , we use recent exact enumeration data for @xmath6 to obtain upper bounds for the connective constant on the square , hexagonal and triangular lattices .",
    "these bounds are then compared to better upper bounds obtained from other methods .",
    "lower bounds for the connective constant can be found using a method due to kesten @xcite .",
    "the method utilises the fundamental result that certain restricted classes of self - avoiding walks have the same connective constant as the unrestricted problem .",
    "particularly useful for our purposes is the class of walks known as _",
    "bridges_. let @xmath18 denote the @xmath19-coordinate of @xmath20 , then a bridge is a self - avoiding walk such that @xmath21 for all @xmath22 .",
    "we use @xmath23 to denote the number of @xmath2-step bridges , and note kesten showed that @xmath24 converges to @xmath8 as @xmath25 . clearly concatenating two bridges of length @xmath2 and @xmath26",
    "gives a bridge of length @xmath27 ( we place the origin of the second walk on top of the end - point of the first walk ) .",
    "this means that any bridge can be decomposed into _ irreducible bridges _ ,",
    "i.e. , bridges which can not be decomposed further , and we use @xmath28 to denote the number of @xmath2-step irreducible bridges . it is now easy to see that the generating function @xmath29 for bridges is simply related to the generating function for irreducible bridges @xmath30",
    "@xmath31 it then follows that @xmath32 is the solution to @xmath33 .",
    "this relation also allows us to obtain lower bounds for @xmath8 .",
    "this relies on the observation that , if @xmath34 , for @xmath35 , then with @xmath16 being the solution to    @xmath36    @xmath37 is a lower bound on @xmath8 . in particular we can set @xmath38 for @xmath39 and thus truncate the series .",
    "it is not easy to calculate the number of irreducible bridges directly .",
    "thankfully they can easily be obtained from the number of bridges .",
    "following alm and parviainen @xcite we consider the number of bridges @xmath40 and irreducible bridges @xmath41 of length @xmath2 and span @xmath42 , that is bridges with @xmath43 and @xmath44 , with associated generating functions @xmath45 and @xmath46 .",
    "obviously @xmath47 , so if we truncate at some maximum span @xmath48 and maximum walk length @xmath49 then the reciprocal of the solution to    @xmath50    is a lower bound on @xmath8 .    since a bridge is either irreducible or the concatenation of a bridge with an irreducible bridge we get    @xmath51 and thus    @xmath52 which allows to obtain all generating functions @xmath46 recursively from @xmath45 for @xmath53 .    in this paper",
    "we also examine a second way of obtaining lower bounds .",
    "we again use irreducible bridges , but rather than using smallish @xmath48 and very large @xmath49 we calculate the exact series for irreducible bridges to order @xmath49 ( much lower than before ) and use this truncated series to obtain a lower bound from the reciprocal of the solution to    @xmath54    that is in eq .",
    "( [ eq : lowergen ] ) we set @xmath55 for @xmath56 and @xmath38 for @xmath39 .",
    "the number of self - avoiding bridges @xmath40 can easily be counted using the transfer - matrix ( tm ) methods we have developed for the unrestricted problems @xcite , which are devised to count the number of walks in a finite @xmath57 rectangular sub - section of the underlying lattice .",
    "here we shall only briefly outline the changes required to enumerate bridges .",
    "the most efficient implementation of the tm algorithm generally involves bisecting the rectangle with a boundary line and moving the boundary in such a way as to build up the lattice cell by cell .",
    "the sum over all contributing graphs is calculated as the boundary is moved through the lattice . for each configuration of occupied or empty edges along the intersection",
    "we maintain a generating function for partial walks cutting the intersection in that particular pattern .",
    "if we draw a saw and then cut it by a line we observe that the partial saw to the left of this line consists of a number of loops connecting two edges in the intersection , and at most two pieces connected to only one edge ( these are the pieces from the end - points of the saw ) .",
    "the computational complexity of the algorithm is essentially determined by the number of such configurations .",
    "so we must make the intersection as short as possible .",
    "since we are looking to fix @xmath42 and make @xmath49 large it follows that @xmath58 will be large as well ( in fact proportional to @xmath59 ) .",
    "so the boundary line must intersect the rectangle along the ` bridging ' axis , e.g. , along up to @xmath60 edges .",
    "it is quite easy to demonstrate @xcite that the number of configurations grows like @xmath61 in the square lattice case .",
    "so the required cpu time will grow roughly as @xmath62 , since there are @xmath63 updates and terms in the generating functions .",
    "memory requirement will grow as @xmath64 .",
    "we note in passing that while the tm method can be used to study higher - dimensional lattices it quickly becomes inefficient because the boundary would be @xmath65 dimensional and the number of edges in the intersection would grow ever more rapidly .    in order to implement the first method for finding lower bounds ,",
    "( [ eq : lower1 ] ) , we count the number of bridges spanning rectangles of size @xmath57 , that is bridges starting at the bottom border and terminating at the top border .",
    "in addition the walks must also touch the left border of the rectangle ( this takes care of the translational invariance ) as illustrated in figure  [ fig : bridges ] . in all case bridges",
    "must terminate at a top most vertex in the top most row .",
    "note in particular the implication of this restriction on the hexagonal , kagom , and @xmath0 lattices . for the hexagonal case",
    "this means that all bridges are of even length .",
    "for the square lattice we calculated the number of bridges to @xmath66 and @xmath67 , for the hexagonal lattice to @xmath66 and @xmath68 , for the triangular lattice to @xmath69 and @xmath70 , for the kagom lattice to @xmath71 and @xmath72,and for the @xmath0 lattice to @xmath69 and @xmath68 . because of the exact connection between the connective constants @xmath13 and @xmath73 , @xmath14 , any bounds for the hexagonal lattice yields corresponding bounds for the @xmath1 lattice .",
    "so we do nt actually count bridges on the @xmath1 lattice and have thus not shown an example of one in figure  [ fig : bridges ] .",
    "examples of bridges on the square , hexagonal , triangular , kagom and @xmath0 lattices .",
    "in addition we also show a section of the @xmath1 lattice . ]",
    "the integer coefficients occurring in the series expansions become very large .",
    "the calculations were therefore performed using modular arithmetic @xcite .",
    "this involves performing the calculation modulo various integers @xmath74 and then reconstructing the full integer coefficients at the end .",
    "the @xmath74 are called moduli and must be chosen so they are mutually prime .",
    "the chinese remainder theorem ensures that any integer has a unique representation in terms of residues .",
    "if the largest value occurring in the final expansion is @xmath26 , then we have to use a number of moduli @xmath75 such that @xmath76 .",
    "we used moduli which are prime numbers of the form @xmath77 .    naturally the calculation for each @xmath42 and moduli are completely independent .",
    "it is evident from the exponential growth in the computational complexity most of the cpu time is spent on the largest value of @xmath48 , where up to 16 moduli were required to represent the coefficients .",
    "typically each run ( at the maximal span @xmath48 ) required up to 24 cpu hours on a 1ghz alpha processor and could use up to 2.5 gb of memory .",
    "in all we used about 3000 cpu hours on the calculations .",
    "our method is much more efficient than that used by alm and parviainen @xcite , who report using more than 20000 cpu hours calculating the number of bridges on the hexagonal lattice with @xmath71 and @xmath78 .",
    "a similar calculation using our method takes no more than a couple of minutes !    the second method for finding lower bounds , see eq .",
    "( [ eq : lower2 ] ) , uses the exact data for the number of irreducible bridges up to length @xmath49 .",
    "again the first step is the calculation of the relevant data for bridges .",
    "we illustrate the method in the square lattice case .",
    "an irreducible bridge of width @xmath48 has length at least @xmath79 .",
    "this is because each row ( apart from the bottom most ) must have more than one occupied edge ( otherwise we could cut the walk into two bridges ) and the walk must thus go up , come down , and go up again .",
    "we also have the first step and at least two horizontal steps for a grand total of at least @xmath79 steps .",
    "so if we require the number of irreducible bridges to order @xmath49 we must count the number of bridges with span up to @xmath80 .",
    "that is we have to count the number of bridges on rectangles of size @xmath81 , where @xmath82 and @xmath83 .",
    "note that this calculation gives the number of bridges correctly only to order @xmath48 .",
    "however , by first extracting the series for @xmath30 we can also get @xmath84 correct to order @xmath79 .",
    "the efficient calculation of the bridge generating function is in many aspects more complicated and time consuming than for the first method .",
    "details of the properties of the bridge generating function will appear in a separate paper .",
    "suffice to say that we have obtained generating functions to order 72 on the square lattice and 122 on the hexagonal lattice .",
    "the series for the problems studied in this paper can be obtained by request from the author or at http://www.ms.unimelb.edu.au/ iwan/ by following the relevant links .",
    "llllll l & @xmath85 & @xmath86 & @xmath72 & @xmath87 & @xmath68 + 2 & 1.787760 & 1.787760 & 1.787760 & 1.787760 & 1.787760 + 3 & 1.808678 & 1.808678 & 1.808678 & 1.808678 & 1.808678 + 4 & 1.819369 & 1.819370 & 1.819370 & 1.819370 & 1.819370 + 5 & 1.825750 & 1.825767 & 1.825767 & 1.825767 & 1.825767 + 6 & 1.829869 & 1.829984 & 1.829984 & 1.829984 & 1.829984 + 7 & 1.832546 & 1.832950 & 1.832951 & 1.832951 & 1.832951 + 8 & 1.834182 & 1.835137 & 1.835140 & 1.835140 & 1.835140 + 9 & 1.835061 & 1.836802 & 1.836814 & 1.836814 & 1.836814 + 10 & 1.835448 & 1.838094 & 1.838132 & 1.838132 & 1.838132 + 11 & 1.835574 & 1.839101 & 1.839191 & 1.839193 & 1.839193 + 12 & 1.835602 & 1.839878 & 1.840058 & 1.840063 & 1.840063 + 13 & 1.835606 & 1.840464 & 1.840775 & 1.840788 & 1.840789 + 14 & 1.835606 & 1.840890 & 1.841372 & 1.841400 & 1.841402 + 15 & 1.835606 & 1.841184 & 1.841868 & 1.841921 & 1.841925 +    lower bounds are obtained by forming the polynomials of eq .",
    "( [ eq : lower1 ] ) .",
    "it is thus possible to obtain ever improved lower bounds by increasing @xmath49 and @xmath48 . in table  [ tab : hexlower ] we use the hexagonal lattice data to illustrate the method .",
    "note that for this problem the minimal number of steps for an irreducible bridge of span @xmath48 is @xmath88 . from this data we observe first of all , that for @xmath85 little is gained by going beyond span @xmath69 .",
    "this is somewhat surprising since @xmath89 contributes already at order 76 , but obviously the influence of these terms is almost negligible . likewise with fixed @xmath48 and increasing @xmath49",
    "it is a case of rapidly diminishing returns .",
    "if we are interested in optimising the procedure , that is , getting a decent bound , but with as little wasted effort possible , it appears that for given @xmath48 we should choose @xmath49 larger than twice the order of the first non - zero contribution to @xmath90 ( otherwise the calculation of @xmath90 is largely wasted ) but not much larger than four times this order .",
    "similar considerations apply to the other problems as well though the optimal cut - off varies from problem to problem .    here",
    "we briefly summarise our results for the lower bounds . for the hexagonal lattice",
    "we find the lower bound , @xmath91 , which is less than 0.32% lower than the exact value @xmath92 .",
    "the previous best lower bound was @xmath93 @xcite . for the square lattice",
    "we obtain the lower bound , @xmath94 , which is within 0.48% of the best estimate for the connective constant @xmath95 @xcite .",
    "this should be compared to the previous bound @xmath96 @xcite . for the triangular lattice",
    "the lower bound is , @xmath97 , within 0.77% of the best estimate @xmath98 @xcite , whereas the previous best bound was @xmath99 @xcite .",
    "the kagom lattice lower bound is , @xmath100 , within 0.48% of the estimate @xmath101 ( based on our unpublished enumerations of self - avoiding polygons ) , while the previous best bound was @xmath102 @xcite . for the @xmath0 lattice we found the lower bound , @xmath103 , which is just 0.24% lower that the estimate @xmath104 @xcite , which improves on the bound @xmath105 @xcite . finally , for the @xmath1 lattice we get the lower bound , @xmath106 , which is just 0.15% from the exact value @xmath107 @xcite , and again improves on the previous bound @xmath108 @xcite .",
    "llll & + @xmath49 & bound & @xmath49 & bound + 32 & 1.812833 & 30 & 2.583704 + 38 & 1.817977 & 33 & 2.588448 + 44 & 1.821786 & 36 & 2.592419 + 50 & 1.824722 & 39 & 2.595794 + 56 & 1.827055 & 42 & 2.598698 + 62 & 1.828955 & 45 & 2.601224 + 68 & 1.830532 & 48 & 2.603442 + 74 & 1.831863 & 51 & 2.605405 + 80 & 1.833002 & 54 & 2.607155 + 86 & 1.833987 & 57 & 2.608726 + 92 & 1.834847 & 60 & 2.610143 + 98 & 1.835606 & 63 & 2.611428 + 104 & 1.836279 & 66 & 2.612599 + 110 & 1.836882 & 69 & 2.613671 + 116 & 1.837424 & 72 & 2.614656",
    "+    as stated earlier we also used a second approach to obtain lower bounds for the connective constant .",
    "this entails the calculation of an exact series expansion for the generating function for irreducible bridges up to some maximal order @xmath49 ( this was also the method employed by guttmann @xcite ) .",
    "lower bounds are then obtained from the truncated series in eq .",
    "( [ eq : lower2 ] ) .",
    "obviously we could truncate at any order @xmath109 and obtain a sequence of lower bounds @xmath110 . in table",
    "[ tab : loweralt ] we have listed the lower bounds obtained from this method for the hexagonal and square lattice cases . clearly this method is inferior to the previous one ( the bounds are not as good ) particularly considering that the computational effort is significantly greater .",
    "however , this approach allows us to study the convergence of the lower bounds @xmath110 to the connective constant as a function of the truncation order @xmath2 .",
    "we find that @xmath111 , this behaviour can be seen directly in fig .",
    "[ fig : bounds ] where we have plotted @xmath112 vs. @xmath113 .",
    "we also formed the generating function @xmath114 , where @xmath115 , analysed this using differential approximants and found a logarithmic singularity at @xmath116 , as expected if @xmath117 .",
    "the difference between the connective constant @xmath8 and the lower bound @xmath110 vs. @xmath113 .",
    "data is plotted for the hexagonal and square lattices . ]",
    "the best current method for obtaining upper bounds is due to alm @xcite and it essentially requires one to enumerate the number of walks according to length @xmath2 and a specified head and tail each of length @xmath26 .",
    "more precisely alm showed that    @xmath118    where @xmath119 is the largest eigenvalue of the matrix @xmath120 .",
    "the entries @xmath121 of this matrix are equal to the number of @xmath2-step self - avoiding walks starting with a walk @xmath122 and ending with a translation of a walk @xmath123 .",
    "each walk @xmath122 , @xmath124 , is one of the @xmath125 possible @xmath26-step self - avoiding walks ( up to all possible symmetries ) . while this method can yield quite sharp upper bounds",
    "( within 1.1% for the hexagonal lattice @xcite ) it is unfortunately not suited for a transfer - matrix enumeration .",
    "however , we have recently obtained greatly extended series for the number of saws on the square , hexagonal and triangular lattices @xcite .",
    "this allows us to use a special case of alm s work @xcite which states that if @xmath126 then    @xmath127    on all lattices @xmath128 so @xmath129 as proven earlier by ahlberg and janson @xcite while @xmath130 for the hexagonal and @xmath48 lattices yielding sharper bounds @xmath131 as proven by guttmann @xcite .",
    "ahlberg and janson also proved that an upper bound @xmath132 can be obtained from the positive root of the equation    @xmath133x+(z-2)[(z-1)c_{n-1}-c_n],\\ ] ]    where @xmath134 is the coordination number of the lattice .",
    "an upper bound is then found as @xmath135 .",
    "for the square lattice we have @xmath136 and @xmath137 , which gives us the upper bounds @xmath138 and @xmath139 .",
    "these bounds are sharper than the one obtained by alm @xcite , @xmath140 , using @xmath141 and @xmath142 .",
    "an improved upper bound , @xmath143 , has been obtained by pnitz and tillmann @xcite , by counting walks with finite memory .",
    "for the triangular lattice we have @xmath144 and @xmath145 , which gives us the upper bounds @xmath146 and @xmath147 .",
    "these bounds are sharper than the one obtained by alm @xcite , @xmath148 , using @xmath149 and @xmath150 ( alm has since improved this to @xmath151 @xcite ) .    for the hexagonal lattice we have @xmath152 and @xmath153 , which gives us the upper bounds @xmath154 , @xmath155 and @xmath156 .",
    "this should be compared with the sharper bound @xmath157 obtained in @xcite using the method of @xcite with @xmath158 and @xmath159 .",
    "it is clear that sharper upper bounds can be obtained for square and triangular lattices by alm s method if carried out to higher values of @xmath2 and @xmath26 .",
    "judging from the computational resources ( 928 cpu hours ) required to obtain the bounds in @xcite this should not be a very demanding calculation ( compare this to the 25000 cpu hours used for the enumeration of the hexagonal lattice saws ) .",
    "we have used kesten s method of irreducible bridges to obtain improved lower bounds on the connective constant for self - avoiding walks on several planar lattices .",
    "the number of irreducible bridges is obtained by enumerating exactly the number of bridges using transfer - matrix techniques . in one approach",
    "we calculate the number of bridges of limited span but to great lengths while in a second approach we obtain an exact series expansion for the number of irreducible bridges .",
    "the first approach turns out to yield the sharpest lower bounds .",
    "the second approach allows us to study the convergence of the lower bounds @xmath110 to the connective constant as a function of the truncation order @xmath2 .",
    "we find that the limit is approached linearly in @xmath113 .",
    "in addition we use recent exact data for the number of saws @xmath6 to obtain some upper bounds on the connective constant .",
    "the upper bounds are generally much poorer than the lower bounds and also worse than those already obtained by other methods .",
    "we have summarised the results in table  [ tab : sum ] .",
    "llll lattice & lower bound & @xmath8 & upper bound + square & 2.625622 & @xmath160 @xcite & 2.679193 @xcite + hexagonal & 1.841925 & @xmath161 @xcite & 1.868832 @xcite + triangular & 4.118935 & @xmath162 @xcite & 4.25152 @xcite + kagom & 2.548497 & @xmath163 & 2.590301 @xcite + @xmath0 & 1.804596 & @xmath164 @xcite & 1.82926 @xcite + @xmath1 & 1.708553 & @xmath165 @xcite & 1.719254 @xcite +",
    "the calculations presented in this paper were performed on the facilities of the australian partnership for advanced computing ( apac ) .",
    "we gratefully acknowledge financial support from the australian research council .",
    "10        alm s  e 2004 in preparation",
    ". courtesy of a private communication from r parviainen and contained in his phd thesis connective properties of archimedean and laves lattices uppsala dissertations in mathematics 34 uppsala university"
  ],
  "abstract_text": [
    "<S> we calculate improved lower bounds for the connective constants for self - avoiding walks on the square , hexagonal , triangular , @xmath0 , and @xmath1 lattices . </S>",
    "<S> the bound is found by kesten s method of irreducible bridges . </S>",
    "<S> this involves using transfer - matrix techniques to exactly enumerate the number of bridges of a given span to very many steps . </S>",
    "<S> upper bounds are obtained from recent exact enumeration data for the number of self - avoiding walks and compared to current best available upper bounds from other methods . </S>"
  ]
}
{
  "article_text": [
    "an iterated function system ( ifs ) may be used to construct fractal interpolation functions for some data @xcite .",
    "the simplest example of interpolating a function @xmath0 , given data points ( @xmath1 ) , @xmath2 , starts with an ifs @xmath3 the coefficients @xmath4 , and @xmath5 determined from the conditions , for @xmath6 , @xmath7 which leads to @xmath8 with these , the transformation of eq .",
    "( [ onevar ] ) can be written as @xmath9 in which form it is apparent @xmath10 is determined by a linear ( in @xmath11 ) interpolating function between the points ( @xmath12 ) and ( @xmath13 ) .",
    "graphs of fractal interpolating functions can then be made by applying the random iteration algorithm :    * initialize ( @xmath14 ) to a point in the interval of interest * for a set number of iterations * * randomly select a transformation @xmath15 * * plot ( @xmath16 ) @xmath17 * * set ( @xmath14 ) @xmath18 ( @xmath16 ) * end for    in this paper we consider two non  linear generalizations of such fractal interpolating functions .",
    "the first concerns how to extend the linear interpolation of eq .",
    "( [ linint ] ) to higher  degree interpolations .",
    "the second generalization arises when one considers the construction of fractal interpolating functions for functions of two ( or more ) variables  in this case , even a linear interpolation of the form of eq .",
    "( [ linint ] ) , when applied to each variable , will result in a non  linear interpolating function .",
    "this has an obvious application in representing two  dimensional images , where a function of two variables ( the pixel coordinates ) could represent a black  and  white image ( using a boolean function ) , a gray  scale image ( using a scalar function ) , or a colour image ( using a vector  valued function of the three _ rgb _ [ red , green , blue ] values ) .",
    "this problem has been examined extensively in the context of image compression @xcite ; in the last section we consider a related problem of using these iterated function systems to rescale images , or portions thereof .",
    "we first consider a function @xmath19 of two variables , and examine the problem of constructing a fractal interpolating function from the data @xmath20 , where @xmath21 , @xmath22 , and @xmath23 . to this end , consider the transformation @xmath24 we then impose , for @xmath25 and @xmath6 the conditions @xmath26 the coefficients turn out to be @xmath27 with these , the transformation of eq .",
    "( [ twovar ] ) can be written as @xmath28 in which form it is apparent @xmath29 is determined by a function implementing a linear interpolation over the grid ( @xmath30 ) , ( @xmath31 ) , ( @xmath32 ) , and ( @xmath33 ) .",
    "the interpolating functions considered up to now have used a linear interpolating formula between adjacent points to construct the ifs . in this section",
    "we indicate how this can be generalized to quadratic interpolations .      for a function @xmath0 of one variable , using data points ( @xmath1 ) , @xmath2 , consider the transformations @xmath34 and impose the conditions , for @xmath35 , @xmath36 the point @xmath37 is determined as @xmath38 with corresponding point @xmath39 .",
    "the coefficients of the ifs are determined as @xmath40 with which the transformation can be written as @xmath41 in this form we see that a quadratic ( in @xmath42 ) interpolating function is used between the points ( @xmath13 ) , ( @xmath12 ) , and ( @xmath43 ) .",
    "we next consider a function @xmath19 of two variables , and construct a fractal interpolating function which employs a quadratic interpolation between points . to this end , consider the transformation @xmath44 we then impose , for @xmath45 and @xmath35 , the conditions @xmath46 the points @xmath47 and @xmath48 are determined as @xmath49 along with the corresponding @xmath50 points .",
    "the coefficients of the ifs can then be determined , by which the transformation of eq .",
    "( [ cond2 ] ) can be written as @xmath51 although tedious to work out , the generalization of the preceding considerations to higher  order interpolating functions is straightforward in principle .",
    "as an application of the preceding , in this section we consider the task of rescaling a colour image .",
    "this is a natural problem for an interpolating function of two variables ( @xmath52 ) interpreted as pixel coordinates  the function @xmath53 in this case will be a vector  valued function having three components representing the _ rgb _ value of the pixel specifying the amount of red , green , and blue present .",
    "the procedure used to scale an image of size @xmath54 pixels wide by @xmath55 pixels high is as follows .",
    "we first read in the rgb values of each pixel of the image , and use that as the data to construct a fractal interpolating function @xmath56 , where @xmath57 and @xmath58 .",
    "to then resize the image , so that the resulting image is of size @xmath59 , we construct a new fractal interpolating function @xmath60 . applying the random iteration algorithm to @xmath61 , choosing independently a transformation index ( @xmath62 ) at each stage , will then result in the rescaled image .",
    "the generalization of this procedure to rescale a portion of an image is straightforward .    as examples of the results of this procedure ,",
    "consider the figures in the appendix .",
    "we start with the image appearing in fig .",
    "[ lena ] , and zoom in on the area of the face .",
    "the result appears in fig .",
    "[ lena - face ] , together with a comparison done using a simple linear interpolation scheme . zooming further into the area of the eye results in fig .",
    "[ lena - eye ] , again with a comparison of the result of a simple linear interpolation .",
    "generally , the number of iterations needed in the random iteration algorithm to produce acceptable images is of the order of @xmath59 , where the original image is of size @xmath63 . also , while slower , the quadratic fractal interpolating function typically produces , for the same number of iterations , a `` smoother '' looking image than the corresponding linear interpolating function .",
    "however , as with all interpolation schemes , there comes a point where such higher  order interpolating formulas actually start to produce worse results due to an artificially high sensitivity to fluctuations in the data .",
    "some informal tests of this procedure seems to indicate that better results are obtained for images of people , natural scenery , etc .",
    ", as opposed to those containing lettering , simple geometric shapes , and similar constructs .",
    "this might be expected , given the general fractal nature of such objects in nature . however , as with all interpolating functions , it is important to remember that no structural information beyond that of the original image is being provided ( for example , one could not zoom in on the face of fig .",
    "[ lena ] to such a degree as to see individual skin pores ) .",
    "the preceding demonstrates that these non  linear fractal interpolating functions of two variables can be used in principle to represent images",
    ". it would be interesting to extend these considerations to the case of partitioned iterated function systems , upon which much work has been done with respect to compressing images @xcite .",
    "work along these directions is in progress .",
    "this work was supported by the natural sciences and engineering research council of canada .",
    "99 m.  f.  barnsley , _ fractals everywhere _ ( academic press , san diego , ca , 1993 ) h.  o.  peitgen , h.  jrgens , and d.  saupe , _ chaos and fractals  new frontiers of science _ ( springer verlag , new york , 1992 )",
    ". h.  o.  peitgen and d.  saupe , _ the science of fractal images _ ( springer verlag , new york , 1988 ) .",
    "a.  jacquin , ieee trans .  on image processing , january , 1992 .",
    "m.  barnsley , l.  hurd , and l.  anson , _ fractal image compression _ ( a.  k.  peters , new york , 1993 )",
    ". y.  fisher ( editor ) , _ fractal image compression : theory and application _ ( springer verlag , new york , 1995 ) .",
    "r.  massopust , _ fractal functions , fractal surfaces and wavelets _ ( academic press , san diego , ca , 1994 ) ."
  ],
  "abstract_text": [
    "<S> we consider non  linear generalizations of fractal interpolating functions applied to functions of one and two variables . the use of such interpolating functions in resizing images is illustrated . </S>"
  ]
}
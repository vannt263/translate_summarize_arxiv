{
  "article_text": [
    "necklaces are classical objects in combinatorics @xcite .",
    "they naturally occur in the study of lyndon words or in many other enumeration problems @xcite .",
    "for @xmath1 a @xmath2-tuple of positive integers , our interest lies in uniformly drawing @xmath0-balanced necklaces of @xmath3 beads : the beads can take @xmath2 distinct colors and the number @xmath4 of beads of color @xmath5 verifies the _ @xmath0-balance _ ( which we define as meaning that @xmath6 is collinear to @xmath0 ) .",
    "an additional reason to focus on @xmath0-balanced structures derives from the intrinsic difficulty to enumerate and describe such objects in terms of analytic combinatorics .",
    "in particular , the generating function of @xmath0-balanced cycles is neither holonomic nor closed - formed .",
    "we attempt to draw very large necklaces in order to conjecture some limit properties on them . to that purpose",
    ", we adopt the framework of boltzmann samplers .",
    "this approach , like the recursive method @xcite , allows to `` automatically '' build a sampler from a decomposable specification of a combinatorial class .",
    "a boltzmann sampler does not guarantee the size of the generated object , only that the drawn object has the same probability to be drawn as any other of the same size .",
    "more details on this point can be found in the preliminary section .",
    "but we can already state that for a large number of combinatorial classes this relaxation allows to generate an object of size @xmath3 in expected linear time @xmath7 without preprocessing .",
    "the main problem is that @xmath0-balanced necklaces do not admit decomposable s using traditional builders @xmath8 , except for some very special cases .",
    "the aim of this paper is to adapt an ad - hoc sampler for @xmath0-balanced sequences , in such a way that the sampling follows a boltzmann model .",
    "after that , we will use this boltzmann sampler ( which can not be built from a decomposable specification ) to obtain a boltzmann sampler for @xmath0-balanced cycles . to this end",
    ", we need to know how to obtain a boltzmann sampler for a class @xmath9 from a boltzmann sampler for its pointing class @xmath10 .    this paper is organized in four sections .",
    "the first section defines the notations and concepts used throughout the article . after reflecting upon basic notions related to combinatorial classes and boltzmann samplers ,",
    "we define our classes of interest , namely , the @xmath0-balanced sequences and the @xmath0-balanced cycles . +",
    "the second section addresses the sampler for @xmath11-balanced cycles .",
    "we show two ways of building such a sampler .",
    "the first one uses a natural isomorphism with a decomposable combinatorial class involving dyck paths .",
    "unfortunately , this approach can not be generalized , therefore we propose a second one based on an isomorphism between pointed @xmath11-balanced cycles and the weighted sum of @xmath11-balanced sequences .",
    "these sequences can be drawn with an ad - hoc sampler . + in the third section , a generalization of the previous approach to @xmath0-balanced cycles is given , yielding an efficient bolzmann sampler which , for our object of study , bypasses the need for a specification of the class . +",
    "the fourth section concludes with some perspective works .",
    "an _ ( unlabelled ) combinatorial class _ is a couple @xmath12 ( generally abbreviated by @xmath13 ) where @xmath13 is a set of _ objects _ and @xmath14 is a function on @xmath13 called _ size function _ which satisfies the conditions : + ( i ) @xmath15 , @xmath16 is a non - negative integer ; + ( ii ) the number of objects of any given size is finite .",
    "+ we naturally associate to a combinatorial class @xmath13 the ordinary generating function @xmath17 where @xmath18 is the number of objects of size @xmath3 in @xmath13 .",
    "boltzmann sampler _ for an unlabelled combinatorial class @xmath13 is a random generator such that the probability to draw an object @xmath19 of size @xmath3 is @xmath20 .",
    "these samplers were first introduced in @xcite and extended , ( in particular the sampler for unlabelled cycles ) in @xcite .",
    "let us notice that a boltzmann sampler depends on a parameter @xmath21 which can be tuned to focus on an expected output size .",
    "more precisely , let @xmath22 be the random variable of the size of the output , we can solve the equation @xmath23 to center the output distribution on an expected value .",
    "let us recall in the following table the samplers for the unlabelled operators that we need .",
    "[ cols=\"<,<\",options=\"header \" , ]     boltzmann samplers are very powerful tools to efficiently generate combinatorial structures @xcite . in particular , it can be possible to automatically build a sampler according to the specification of a combinatorial class .",
    "our aim is to consider @xmath24 and @xmath25 defined below , as additional basic classes , to be added to the collection of classical constructions thus increasing the expressivity of the boltzmann model .",
    "we denote by @xmath26 ( resp .",
    "@xmath27 ) a sequence of atoms ( objects of size 1 ) , such that each atom can be colored by one of the color in @xmath28 and the numbers @xmath4 of beads of color @xmath5 verifies the @xmath0-balanced condition . that is",
    "to say @xmath6 is collinear to @xmath0 .    from an easy observation",
    ", it can be seen that the generating function of @xmath29 is @xmath30 where @xmath31 .",
    "the following proposition is a trivial consequence .",
    "the class @xmath26 is holonomic for every @xmath0 .",
    "indeed , a quick calculation shows that this can be written as the hypergeometric function : @xmath32 the hypergeometric functions are holonomic by definition .    _",
    "remark : _ nevertheless , the class @xmath26 is algebraic in only very few cases . for instance , @xmath33 is not algebraic .",
    "see @xcite for a complete classification of the algebraic cases .",
    "this section is dedicated to the random generation of @xmath11-balanced cycles .",
    "this is a good example to illustrate our approach . a @xmath11-balanced sequence ( resp .",
    "cycle ) is by previous definition a sequence ( resp .",
    "cycle ) of black atoms @xmath34 and white atoms @xmath35 such that the number of black atoms is equal to the number of white atoms .",
    "the generating function for @xmath36 is @xmath37 in particular , @xmath36 is algebraic .",
    "we are going to use this important property in the following first approach .      both @xmath36 and @xmath38 are specifiable .",
    "we can thus apply the unlabelled samplers described in the previous table .",
    "more precisely , @xmath36 is a classical combinatorial notion , names _ bridges_. to generate @xmath38",
    ", we use an isomorphism between the @xmath11-balanced cycles and the cycles of indecomposable dyck paths .",
    "let @xmath39 be the class of dyck paths of specification @xmath40 .",
    "dyck paths are excursions from @xmath41 to @xmath42 over the discrete lattice @xmath43 , with displacements of @xmath11 and @xmath44 .",
    "this can also be viewed as the class of well - formed parentheses strings .",
    "bridges are defined by @xmath45 , where @xmath46 is like @xmath39 , but with the roles of @xmath47 and @xmath48 interchanged .",
    "so , we can generate @xmath36 by classical boltzmann sampler principles . the class of _ indecomposable _ dyck paths is the class of specification @xmath49 .",
    "[ raney s lemma ] the balanced cycle can also be specified as @xmath50 , where @xmath51 is the classical constructor for cycles .",
    "+    ( sketch ) we can represent @xmath38 as an excursion from @xmath41 to @xmath42 , with steps of @xmath11 and @xmath44 , up to circular permutations .",
    "such an excursion has a non - empty set @xmath52 of points of minimal abscissa . as we deal with excursions up to circular permutations",
    ", we can consider that the excursion begin at any @xmath53 in @xmath52 ( see fig.2 ) . in this case",
    ", we have dyck paths and we remark that they are exactly the same up to circular permutations of their indecomposable dyck paths .    @xmath54 @xmath55    ( 0,0 )  ( 0.2,0.2)(0.4,0)(0.6,-0.2)(0.8,-0.4)(1.0,-0.2)(1.2,-0.4)(1.4,-.2)(1.6,0 ) ; ( 0,0 ) circle(0.4 mm ) ; ( 0.2,0.2 ) circle(0.2 mm ) ; ( 0.4,0 ) circle(0.2 mm ) ; ( .6,-0.2 ) circle(0.2 mm ) ; ( 1.0,-0.2 ) circle(0.2 mm ) ; ( 1.2,-0.4 ) circle(0.2 mm ) ; ( 1.4,-.2 ) circle(0.2 mm ) ; ( 1.6,0 ) circle(0.4 mm ) ; ( 0.8,-0.4 ) circle(0.5 mm ) ; ( 0,0 )  ( 1.6,0 ) ; ( 0,0)[anchor = north ] node a ; ( 1.6,0)[anchor = north ] node a ; ( 0.8,-0.4)[anchor = north ] node c ;    @xmath56    ( 0,0 )  ( 0.2,0.2)(0.4,0)(0.6,0.2)(0.8,0.4)(1,.6)(1.2,0.4)(1.4,.2)(1.6,0 ) ; ( 0,0 ) circle(0.5 mm ) ; ( 0.2,0.2 ) circle(0.2 mm ) ; ( 0.4,0 ) circle(0.2 mm ) ; ( 0.6,0.2 ) circle(0.2 mm ) ; ( 0.8,0.4 ) circle(0.4 mm ) ; ( 1,.6 ) circle(0.2 mm ) ; ( 1.2,0.4 ) circle(0.2 mm ) ; ( 1.4,.2 ) circle(0.2 mm ) ; ( 1.6,0 ) circle(0.5 mm ) ; ( 0,0 )  ( 1.6,0 ) ; ( 0,0)[anchor = north ] node c ; ( 1.6,0)[anchor = north ] node c ; ( 0.8,0.4)[anchor = north ] node a ;    @xmath55 @xmath57    ( 0,0 )  ( 0.2,0.2)(0.4,0 ) ; ( 0,0 ) circle(0.4 mm ) ; ( 0.2,0.2 ) circle(0.2 mm ) ; ( 0.4,0 ) circle(0.4 mm ) ; ( 0,0 )  ( .4,0 ) ;    @xmath58    ( 0.0,0)(0.2,0.2)(0.4,0.4)(.6,.6)(.8,0.4)(1,.2)(1.2,0 ) ; ( 0.0,0 ) circle(0.4 mm ) ; ( 0.2,0.2 ) circle(0.2 mm ) ; ( 0.4,0.4 ) circle(0.2 mm ) ; ( 0.6,.6 ) circle(0.2 mm ) ; ( 0.8,0.4 ) circle(0.2 mm ) ; ( 1,.2 ) circle(0.2 mm ) ; ( 1.2,0 ) circle(0.4 mm ) ; ( 0,0 ) ",
    "( 1.2,0 ) ;    @xmath59    now , with this specification , we can use usual boltzmann samplers for unlabelled structures to draw @xmath11-balanced cycles .",
    "we obtain a boltzmann sampler for @xmath60 by a combination of the previous mentioned samplers according to the specification . in the following algorithms @xmath61 and @xmath62",
    "respectively represent the generating functions of @xmath39 and @xmath63 .    draw @xmath64 according to a geometric law of parameter @xmath65 + @xmath66 +    @xmath67 .",
    "let @xmath68 be a random variable in @xmath69 verifying : + @xmath70 + draw @xmath2 according to the law of @xmath68 .",
    "+ draw @xmath71 according to a logarithmic law of parameter @xmath72 .",
    "+ @xmath66 + @xmath73 $ ] .",
    "this method is an efficient way to draw @xmath11-balanced cycles . in particular",
    ", the basic rejection sampler @xmath74 ( see @xcite for details ) has an @xmath7 overall cost in average .",
    "but it relies on a very singular property of the class  : it can be decomposed with usual constructors .",
    "we are now interested in another way to generate these objects .",
    "this new approach will be extended to all @xmath0-balanced objects in the last section .",
    "we are still focused on the generation of @xmath11-balanced cycles , but now the use of an algebraic specification is avoided .",
    "the idea of our sampler can be summerized as follows : first , we adapt an ad - hoc sampler for the @xmath11-balanced sequences in such a way that this sampling follows a boltzmann model ; second , we show an isomorphism ( see proposition 4 ) between the class @xmath75 of pointed balanced cycles and a sum involving duplications of @xmath36 .",
    "the notion of pointing classes is recalled in this part ; finally , to obtain a boltzmann sampler for @xmath38 , we explain how to obtain a boltzmann sampler for a class @xmath76 from a boltzmann sampler for its pointing class @xmath77 .",
    "let us start by introducing our boltzmann sampler for @xmath36 and proving its correctness :    let @xmath78 be a random variable in @xmath69 verifying @xmath79 + draw @xmath64 according to the law of @xmath78 .",
    "+ let @xmath80 be a @xmath81-uple , select uniformly @xmath64 positions belongs the @xmath82 entries in @xmath80 .",
    "+ this positions are the @xmath34 entries of @xmath80 , the other ones are the @xmath35 entries .",
    "@xmath67 .",
    "algorithm 3 is a valid boltzmann sampler for @xmath36 .",
    "let @xmath83 be an output of this algorithm .",
    "the probability to draw @xmath83 is the probability to draw the right length and then to draw the right positions for @xmath34 .",
    "so , @xmath84      another classical operator , in structural combinatorics , is the pointing operator which can be defined as follows :    let @xmath13 be a combinatorial class , the combinatorial class @xmath85 is formally defined as @xmath86 where the @xmath87 are distinct neutral objects ( 0-sized objects ) and @xmath88 is the sub - class of @xmath13 of the elements of size @xmath3 .",
    "the generating function of the pointed class @xmath85 is @xmath89 .",
    "we can interpret this operator by saying that each object in @xmath85 is an object in @xmath13 with a tagged atom on it .",
    "@xmath75 is isomorphic to @xmath90 , where @xmath91 is the class @xmath92 .",
    "let @xmath93 be the generating function for @xmath94 , without any constraint on the number of beads ( @xmath35 and @xmath34 ) of each color .",
    "we can write the generating function @xmath93 as follows : @xmath95 @xmath96",
    "the notion of diagonal for a bivariate generating function is needed for what follows .",
    "let @xmath97 be a bivariate generating function , the function @xmath98 is called the _",
    "( 1,1)-diagonal _ of @xmath99 and it is denoted by @xmath100 .",
    "so , by definition @xmath101 and we can use the previous formula to obtain : @xmath102c_{bic})x^{2l}=\\sum\\limits_{n>0}\\frac{\\varphi(n)}{n}\\sum\\limits_{p>0}\\frac{1}{2p } \\frac{(2p)!}{(p!)^2}x^{2np}\\ ] ]    now , pointing the cyc(1,1 ) class yields : @xmath103 @xmath104    at this stage , it is possible to draw an object of size @xmath3 in @xmath105 using classical recursive method @xcite .",
    "but here we pitch on boltzmann point of view which avoids costly preprocessing calculus .",
    "this isomorphism allows us to describe a boltzmann sampler for @xmath75  :    @xmath106 + @xmath107 + draw a real number @xmath108 uniformly in @xmath109 $ ] + @xmath110 $ ] +    algorithm 4 is a valid boltzmann sampler for @xmath75 .",
    "this is a corollary of the correctness of our general sampler , given in section four .",
    "we have obtained a boltzmann sampler for @xmath75 .",
    "this is enough to uniformly generate ( 1,1)-balanced cycles .",
    "but , the sampler does not have a boltzmann distribution for @xmath38 , so it can not be called by another constructor . for instance , @xmath111 is not equal to @xmath112 .",
    "indeed , small objects are drawn with a smaller probability in @xmath75 . to unbias the sampler",
    ", we are going to change its parameter according to a well - chosen density law @xmath113 .",
    "a similar idea occurs in @xcite .",
    "let @xmath114 be a generating function ( with @xmath115 ) .",
    "for any fixed @xmath21 in the convergence disc of @xmath116 , the function @xmath117 is a density of probability on @xmath109 $ ] .",
    "clearly @xmath118 is non negative .",
    "now , it remains only to prove that + @xmath119 .",
    "we can expand the serie to @xmath120 , @xmath121 .",
    "we now swap the sum and integral , we have : @xmath122_{u=0}^{1}}=1}.\\ ] ]    the following sampler ( algorithm 5 ) gives a valid boltzmann sampler for @xmath13 with parameter  @xmath21 from a boltzmann sampler for @xmath123 .",
    "draw a real number @xmath108 according to the density law @xmath124 .",
    "+    it is sufficient to evaluate the probability that the output be of size @xmath3 . if @xmath125 , we have drawn an object in @xmath126 .",
    "this occurs with probability @xmath127 . if @xmath128 , the probability is @xmath129 . in every cases ,",
    "this is a boltzmann probability .",
    "this sampler allows us to generate extremely large @xmath11-cycles ( more than 1000000 beads ) .",
    "indeed , this sampler is clearly linear in the size of the output .",
    "the following figures ( fig.[fig2 ] ) show a @xmath11-cycle of size 100 ( fig .",
    "[ fig2a ] ) ( only 100 beads for the legibility . )",
    "it also shows that we can compose our sampler with the classical builder @xmath130 .",
    "figure [ fig2b ] shows a random generated a necklace of @xmath11-cycles .",
    "we can see that the necklaces do not contain a lot of @xmath11-cycles .",
    "moreover only one of these @xmath11-cycles contains a lot of beads .",
    "in this part , we extend the previous method to all cases , algebraic or not .",
    "let @xmath131 , and @xmath132 .",
    "our goal here is to generate @xmath24 : cycles of @xmath133 colors , such that the number of occurences of each atom @xmath134 verify the @xmath0-balance condition .",
    "we follow the same principles than in section 3.2 but the proofs are slightly more technical .",
    "let us recall @xmath135 , the generating function of @xmath136-balanced sequences : + @xmath137    let @xmath78 be a random variable in @xmath69 verifying @xmath138 + draw @xmath64 according to the law of @xmath78 .",
    "+ let @xmath80 be a @xmath139-uple , + @xmath67 .",
    "algorithm 6 is a valid boltzmann sampler for @xmath25 .",
    "its arithmetic complexity is linear in the size of its output object .",
    "the proof can be easily transposed from @xmath11-balanced one .",
    "the complexity result is trivial .",
    "now , as with the example of @xmath11-balanced cycles , we are going to use this sampler for @xmath0-balanced sequences to generate @xmath0-balanced cycles .",
    "@xmath141 is isomorphic to @xmath142 .",
    "let @xmath143 be the generating function of cycles of @xmath133 atoms @xmath144 .",
    "@xmath145 @xmath146    let @xmath147 be the generating function of @xmath24 .",
    "this is the extraction of terms with the exponents verifying the @xmath0-balanced condition in @xmath143 .",
    "@xmath148 c_{m\\mathrm{col}})x^{|v|l}=\\sum\\limits_{n>0}\\frac{\\varphi(n)}{n}\\sum\\limits_{p>0}\\frac{1}{|v|p } \\frac{(|v|p)!}{\\prod\\limits_{i=1}^{m}((v_ip)!)}x^{|v|np}\\ ] ]    we will now apply the same idea that we described for the @xmath11-balanced case to @xmath149 ( the generating function of which is @xmath150 ) .",
    "@xmath151    this isomorphism can be used to obtain the following sampler :    @xmath106 + @xmath152 + draw a real number @xmath108 uniformly in @xmath109 $ ] + @xmath110 $ ] +    algorithm 7 is a valid boltzmann sampler for @xmath140 .",
    "its arithmetic complexity is linear in the size of its output object .",
    "let us consider the generation of a pointing cycle @xmath53 .",
    "+ it can be written as @xmath153 , where @xmath108 a primitive sequence ( _ i.e. _ without replication ) and @xmath154 is the primitive repetition order of @xmath53 ( @xmath155 ) .",
    "there are @xmath156 shifts of @xmath108 which produce equivalent cycles .",
    "+ in algorithm 7 , the generating sequence is not necessarily primitive .",
    "so , @xmath53 can be drawn as any @xmath157 , with @xmath158 and @xmath159 a shift of @xmath160 repetitions of @xmath108 .",
    "so , the probability to draw @xmath108 is the sum for all @xmath158 of the probability to draw @xmath161 as repetition order and to draw one of the @xmath14 shift of @xmath159 as motif :    @xmath162 @xmath163 with @xmath164,$ ] the choice of @xmath5 corresponding to the pointed atom .",
    "the complexity ensues from the results on boltzmann sampling .    to obtain a @xmath0-balanced cycle from an object of @xmath140",
    ", we can now apply the general algorithm 5 to @xmath140 . as proven previously ,",
    "this provides us a boltzmann sampler for @xmath24 .",
    "the random generation of constrained - colored structures is in general very difficult . in a previous paper @xcite , we already investigated the generation of the @xmath2-colored structures and size - colored structures . in this short paper",
    ", we have presented a way to efficiently generate @xmath0-balanced cycles .",
    "it is possible with our samplers to generate @xmath0-balanced cycles of sizes reaching up to one million .",
    "nevertheless our methods can not be directly generalized to other balanced structures .",
    "for instance , we do not know how to generate @xmath11-balanced general non planar ( unlabelled ) trees where general non planar trees can be specified as @xmath165 . this problem is a work in progress and should be solved by a method involving multivariate boltzmann sampler .",
    "another perspective is the generation of semi - labelled structures . in these structures",
    "each atom can take a color in @xmath28 but , if we have an atom of color @xmath166 , we need to also have at least one atom of color @xmath167 .",
    "semi - labelling is a new interesting labelling which is in a sense between unlabelling and labelling .",
    "but very little is as of yet known about it .",
    "finally , we want to thank , b. salvy for his precious knowledge on hypergeometric functions and joachim dehais , jrmie lumbroso and yann ponty for their careful reading of a preliminary version of the manuscript .    99 f. beukers , g. heckman , `` monodromy for the hypergeometric function @xmath168 '' , in inventiones mathematicae , vol 95 ; pp . 325 - 354",
    ". o. bodini , e. fusy and c. pivoteau , `` random sampling of plane partitions . ''",
    "proceedings of gascom06 .",
    "o. bodini , a. jacquot , `` boltzmann samplers for colored combinatorial objects '' , in proceedings of gascom07 .",
    "r. brualdi and m. newman , `` an enumeration problem for a congruence equation '' , j. res .",
    "bureau standards , b74 ( 1970 ) , 37 - 40 .",
    "k. cattell , f. ruskey , j. sawada , c.r .",
    "miers , and m. serra , `` fast algorithms to generate necklaces , unlabelled necklaces and irreducible polynomials over gf(2 ) '' , j. algorithms , 37 ( 2000 ) 267 - 282 .",
    "p. duchon , p. flajolet , g. louchard and g. schaeffer .",
    "`` boltzmann samplers for the random generation of combinatorial structures '' , in combinatorics , probability , and computing , special issue on analysis of algorithms , 2004 , vol .",
    "13 , no 45 , pp .",
    "577 - 625 .",
    "a. darrasse , m. soria , `` degree distribution of random apollonian network structures and boltzmann sampling '' , proceedings of international conference on analysis of algorithms dmtcs , 2007 .",
    "p. flajolet , e. fusy and c. pivoteau , `` boltzmann sampling of unlabelled structures '' , proceedings of analco07 ( analytic combinatorics and algorithms ) conference , new orleans , january 2007 .",
    "siam press , in print .",
    "p. flajolet and r. sedgewick , `` analytic combinatorics '' published soon by cambridge university press .",
    "p. flajolet and m. soria , private communication , 2008 .",
    "p. flajolet , p. zimmerman , b. van cutsem , `` a calculus for the random generation of labelled combinatorial structures '' , theor .",
    "132 , 1 - 2 ( sep . 1994 ) , 1 - 35 .",
    "h. fredricksen , i.j .",
    "kessler , `` an algorithm for generating necklaces on beads in two colors '' , discrete mathematics , 1986 , vol .",
    "61 , no2 - 3 , pp .",
    "181 - 188 .",
    "h. fredricksen and j. maiorana , `` necklaces of beads in @xmath2 colors and @xmath2-ary de bruijn sequences '' , discrete mathematics 23 ( 1978 ) , 207 - 210 .",
    "a. nijenhuis and h. wilf , `` combinatorial algorithms '' , academic press , isbn 0125192509 ( 1975 ) .",
    "o. roussel ,  a boltzmann sampler for the box operator  , master thesis , 2008 ."
  ],
  "abstract_text": [
    "<S> this paper is devoted to the random generation of particular colored necklaces for which the number of beads of a given color is constrained ( these necklaces are called </S>",
    "<S> _ @xmath0-balanced _ ) . </S>",
    "<S> we propose an efficient sampler ( its expected time complexity is linear ) which satisfies the boltzmann model principle introduced by duchon , flajolet , louchard and schaeffer @xcite . </S>",
    "<S> our main motivation is to show that the absence of a decomposable specification can be circumvented by mixing the boltzmann samplers with other types of samplers . </S>"
  ]
}
{
  "article_text": [
    "read - once branching programs ( robps ) are a well known representation of boolean functions .",
    "oblivious robps , better known as ordered binary decision diagrams ( obdds ) , are a subclass of robps , very well known because of its applications in the area of verification @xcite .",
    "an important procedure in these applications is transformation of a cnf formula into an equivalent obdd .",
    "the resulting obdd can be exponentially larger than the initial cnf formula , however a space efficient transformation is possible for special classes of functions .",
    "for example , it has been shown in @xcite that a cnf formula with treewidth @xmath1 of its primal graph can be transformed into an obdd of size @xmath2 .",
    "a natural question is if the upper bound can be made fixed - parameter i.e. of the form @xmath3 for some constant @xmath4 . in @xcite we showed that it is impossible by demonstrating that for each sufficiently large @xmath1 there is an infinite class of cnf formulas with treewidth at most @xmath1 whose smallest obdd is of size at least @xmath5 .    in this paper",
    "we report a follow up result ( theorem [ maintheor ] ) showing that essentially the same lower bound holds for non - deterministic read - once branching programs ( nrobps ) .",
    "in particular we show that there is a constant @xmath6 such that for each sufficiently large @xmath1 there is an infinite class of cnf formulas of treewidth at most @xmath1 ( of their primal graphs ) for which the space complexity of the equivalent nrobps is at least @xmath7 .",
    "this result is a significant enhancement of the result of @xcite .",
    "indeed , obdds are a subclass robps and there is _ exponential separation _ between the classes ( that is , there is a family of functions that can be represented by poly - size robps but require exponential size obdds ) .",
    "a robp , in turn , is a special case of ( nrobp ) and there is an exponential separation between robps and nrobps ( @xcite , corollary 10.2.3 ) .",
    "thus the proposed result shows that read - once branching programs are inherently incapable to efficiently compute cnf formulas of bounded treewidth .",
    "we also demonstrate that the proposed result can be used in the non - parameterized context . in particular , using this result , we provide a quasi - polynomial separation between nrobps and a subset of decomposable negation normal forms ( dnnfs ) @xcite known as decision - dnnf .",
    "more precisely , we demonstrate a family of cnf formulas that can be expressed as decision dnnfs of size @xmath8 but the space complexity of nrobps is @xmath9 .",
    "the motivation for this result is described below .",
    "dnnf is a representation of boolean functions well known in the areas of knowledge representation and databases .",
    "dnnfs are much more succinct than robps .",
    "in fact a robp can be seen as a special case of dnnf @xcite and there is an exponential separation between these two representations .",
    "like in the case of obdds , transformation from a cnf formula to an equivalent dnnf is an important operation in the related applications .",
    "one remarkable property of dnnfs is their fpt space complexity on cnfs formulas with bounded treewidth . in particular ,",
    "a cnf formula with treewidth @xmath1 can be transformed into a dnnf of size @xmath10 .",
    "in fact this property is preserved for a number of restricted dnnf subclasses , one of them is known as decision - dnnf @xcite .",
    "interestingly , the possibility of exponential separation from robp is not preserved for decision - dnnfs : it has been shown in @xcite that a decision - dnnf of size @xmath11 can be simulated by a robp of size @xmath12 .",
    "our result shows that this upper bound is essentially tight .",
    "indeed , since robp is a special case of nrobp , this result implies quasi - polynomial separation between robp and decision - dnnf , essentially matching the upper bound of @xcite .",
    "we believe the proposed parameterized lower bound is interesting from the parameterized complexity theory perspective because it contributes to the understanding of ( concrete ) parameterized _ space _ complexity of various representations of boolean functions .",
    "we see at least two reasons why this research direction is worth to explore .",
    "first , the results of of this kind are closely related ( through substitution of the parameters with appropriate functions of @xmath13 ) to the classical , non - parameterized complexity of boolean function . for example , the famous result of razborov providing the first non - polynomial lower bound for the space complexity of monotone circuits can be seen formulated in the parameterized setting as a space @xmath14 lower bound for monotone circuits testing whether the given graph has a clique of size @xmath1 @xcite .",
    "the second reason why we believe that the parameterized complexity of boolean functions is an interesting research direction is that parameterized upper bounds on the space complexity of boolean functions are important in applications related to verification , knowledge representation , and databases . in fact , quite a few such upper bounds are already known ( e.g. @xcite ) . therefore , it is interesting to see if advanced parameterized complexity methodologies can be applied in order to enhance these upper bounds and to obtain new ones .      to prove the proposed parameterized lower bound , we use monotone @xmath15-cnf formulas ( their clauses are of form @xmath16 where @xmath17 and @xmath18 are @xmath15 distinct variables ) .",
    "these cnf formulas are in one - to - one correspondence with graphs having no isolated vertices : variables correspond to vertices and @xmath15 variables occur in the same clause if and only if the corresponding vertices are adjacent .",
    "this correspondence allows us to use these cnf formulas and graphs interchangeably .",
    "we introduce the notion of matching width ( mw ) of a graph @xmath19 and prove two theorems .",
    "one of them ( theorem [ nrobplbdmw ] ) states that a nrobp equivalent to a monotone 2-cnf formula with the corresponding graph @xmath19 having mw at least @xmath20 is of size at least @xmath21 where @xmath22 is a constant dependent on the max - degree of @xmath19 . the second theorem ( theorem [ dmwtw ] ) states that for each sufficiently large @xmath1 there is an infinite family of graphs of treewidth @xmath1 and max - degree @xmath23 whose mw is at least @xmath24 for some constant @xmath25 independent of @xmath1 .",
    "the main theorem immediately follows from replacement of @xmath20 in the former lower bound by the latter one .",
    "the proof of theorem [ nrobplbdmw ] uses the following combinatorial statement .",
    "let @xmath26 be the set of all vertex covers of a graph @xmath19 and let @xmath27 be a family of subsets of @xmath28 of size at least @xmath20 such that each element of @xmath26 is a superset of some element of @xmath27",
    ". then @xmath29 where @xmath22 is a universal constant as in the previous paragraph .",
    "in order to define the family of graphs for theorem [ dmwtw ] , we introduce graphs @xmath30 where @xmath31 is a complete binary tree of height @xmath32 and @xmath33 is an arbitrary graph . in the graph @xmath30 each vertex of @xmath31",
    "is replaced by a copy of @xmath33 .",
    "copies corresponding to adjacent vertices of @xmath31 are connected by edges so that each vertex of @xmath33 is connected to the ` same ' vertex of @xmath33 of the adjacent copy . for the proof of theorem [ dmwtw ] ,",
    "we take as @xmath33 a path of length about @xmath34 .",
    "the strategy outlined above is similar to that we used in @xcite .",
    "however , there are two essential differences .",
    "first , due to a much more ` elusive ' nature of nrobps compared to that of obdd , the counting argument is more sophisticated and more restrictive : it applies only to cnf formulas whose graphs are of constant degree . due to this latter aspect",
    ", the family of graphs requires a more delicate construction and reasoning .",
    "the rest of the paper is organized as follows .",
    "section 2 introduces the necessary background .",
    "section 3,4 , and 5 prove the parameterized lower bound ( the last two sections prove auxiliary theorems used for the lower bound proof in section 3 ) .",
    "section 6 establishes the quasipolynomial separation between decisiondnnf and nrobp .",
    "finally , two sections in the appendix demonstrate validity of our assumptions regarding nrobp , see section 2 for further details .",
    "in this paper when we refer to a _ set of literals _ we assume that it does not contain an occurrence of a variable and its negation . for a set @xmath35 of literals",
    "we denote by @xmath36 the set of variables whose literals occur in @xmath35 . if @xmath37 is a boolean function or its representation by a specified structure , we denote by @xmath38 the set of variables of @xmath37 . a truth assignment to @xmath38",
    "on which @xmath37 is true is called a _ satisfying assignment _ of @xmath37 .",
    "a set @xmath35 of literals represents the truth assignment to @xmath36 where variables occurring positively in @xmath35 ( i.e. whose literals in @xmath35 are positive ) are assigned with @xmath39 and the variables occurring negatively are assigned with @xmath40 .",
    "we denote by @xmath41 a function whose set of satisfying assignments consists of all sets @xmath42 of literals such that @xmath43 is a satisfying assignment of @xmath37 .",
    "we call @xmath41 a _ subfunction _ of @xmath37 .",
    "[ arosrn ] a non - deterministic read - once branching program ( nrobp ) @xmath44 implementing ( computing ) a function @xmath37 is a directed acyclic graph ( dag ) ( with possible multiple edges ) with one leaf , one root , and with some edges labelled by literals of the variables of @xmath37 in a way that there is no directed path having two edges labelled with literals of the same variable .",
    "we denote by @xmath45 the set of literals labelling edges of a directed path @xmath46 of @xmath44 .",
    "the connection between @xmath44 and @xmath37 is defined as follows .",
    "let @xmath46 be a path from the root to the leaf of @xmath44 .",
    "then any set of literals @xmath47 such that @xmath48 is a satisfying assignment of @xmath37 .",
    "conversely , let @xmath49 be a satisfying assignment of @xmath37 .",
    "then there is a path @xmath46 from the root to the leaf of @xmath44 such that @xmath50",
    ".    * remark . *",
    "a traditional definition of a nrobp is a robp with guessing nodes .",
    "definition [ arosrn ] in fact introduces acyclic read - once switching and rectifier networks ( arosrns ) .",
    "however , these models are equivalent in the sense that an arosrn can simulate nrobp without increase of the number of edges and a nrobp can simulate an arosrn with at most three times increase of the number of edges .",
    "the details are provided in appendix b. the equivalence of these models is mentioned in @xcite .",
    "we say that a nrobp @xmath44 is _ uniform _ if the following is true .",
    "let @xmath22 be a node of @xmath44 and let @xmath51 and @xmath52 be @xmath15 paths from the root of @xmath44 to @xmath22",
    ". then @xmath53 .",
    "that is , these paths are labelled by literals of the same set of variables . also , if @xmath46 is a path from the root to the leaf of @xmath44 then @xmath54 .",
    "thus there is a one - to - one correspondence between the sets of literals labelling paths from the root to the leaf of @xmath44 and the satisfying assignments of @xmath37 .",
    "* all the nrobps considered in sections 3 - 6 of this paper are uniform .",
    "* this assumption does not affect our main result because an arbitrary nrobp can be transformed into a uniform one at the price of @xmath55 times increase of the number of edges .",
    "for the sake of completeness , we provide the transformation and its correctness proof in appendix a. we use the construction described in the proof sketch of proposition 2.1 of @xcite .",
    "now we are going to define the decomposable negation normal form ( dnnf ) and its subclass decision - dnnf for which we prove a separation result in section 6 .",
    "* the only thing we need to know for this separation result is that a cnf formula with a bounded primal graph treewidth can be transformed into an fpt - size decision - dnnf @xcite .",
    "that is , the two paragraphs below are not needed for the technical reasoning .",
    "we provide these definitions for the sake of completeness in the sense that all the representations of boolean functions occurring in the statements of this paper are explicitly defined .",
    "recall that a boolean circuit over the @xmath56 is called _ de morgan _ circuit if the negations are applied only to the input ( variable ) gates .",
    "next , we define a _ decomposable node_. let @xmath57 be a gate of a boolean circuit @xmath58 .",
    "we denote by @xmath59 the set of variables such that @xmath57 is reachable from their respective input gates .",
    "we say that @xmath57 is _ decomposable _ if for any two in - neighbours @xmath60 and @xmath61 of @xmath57 , @xmath62 .",
    "a dnnf is a de - morgan circuit with all the and - nodes being decomposable .",
    "we say that an or - node @xmath57 of a dnnf is a decision node ( see figure [ desnode ] ) if it is binary , both its in - neighbours @xmath60 and @xmath61 are and - nodes and there is a variable @xmath57 such that @xmath57 is an input of , say @xmath60 and @xmath63 is an input of @xmath61 .",
    "a dnnf is called _ decision _ dnnf if all its or nodes are decision ones .",
    "see figure [ dnnfs ] showing a dnnf and a decision - dnnf for the same function .",
    "note that for the latter we use both variable and constant input gates .        .",
    "for the sake of compactness , we introduced a ` macro - node ' @xmath64 that expresses a disjunction of two literals in terms of decision - dnnf.,height=188 ]    given a graph @xmath19 , its _ tree decomposition _ is a pair @xmath65 where @xmath66 is a tree and @xmath67 is a set of bags @xmath68 corresponding to the vertices @xmath20 of @xmath66 .",
    "each @xmath68 is a subset of @xmath28 and the bags obey the rules of _ union _ ( that is , @xmath69 ) , _ containment _ ( that is , for each @xmath70 there is @xmath71 such that @xmath72 ) , and _ connectedness _ ( that is for each @xmath73 , the set of all @xmath20 such that @xmath74 induces a subtree of @xmath66 ) .",
    "the _ width _ of @xmath65 is the size of the largest bag minus one .",
    "the treewidth of @xmath19 is the smallest width of a tree decomposition of @xmath19 .",
    "given a cnf formula @xmath75 , its _ primal graph _ has the set of vertices corresponding to the variables of @xmath75 .",
    "two vertices are adjacent if and only if there is a clause of @xmath75 where the corresponding variables both occur .",
    "a _ monotone _ 2-cnf formula has clauses of the form @xmath76 where @xmath57 and @xmath77 are two distinct variables .",
    "such cnf formulas can be put in one - to - one correspondence with graphs that do not have isolated vertices . in particular , let @xmath19 be such a graph",
    ". then @xmath19 corresponds to a 2cnf formula @xmath78 whose variables are the vertices of @xmath19 and the set of clauses is @xmath79 .",
    "these notions , together with the corresponding nrobp , are illustrated on figure [ srn ] .",
    ", there is a path where @xmath80 occurs before @xmath81 and a path where @xmath81 occurs before @xmath80 .",
    "thus this nrobp , although uniform , is not _",
    "oblivious_. ] it is not hard to see that @xmath19 is the primal graph of @xmath78 , hence we can refer to the treewidth of @xmath19 as the primal graph treewidth of @xmath78 .",
    "-node.,height=188 ]    the following theorem is the main result of this paper .",
    "[ maintheor ] there is a constant @xmath4 such that for each @xmath82 there is an infinite class @xmath83 of graphs each of treewidth of at most @xmath1 such that for each @xmath84 , the smallest nrobp equivalent to @xmath78 is of size at least @xmath85 , where @xmath13 is the number of variables of @xmath78 .    in order to prove theorem [ maintheor ]",
    ", we introduce the notion of _ matching width _ ( mw ) of a graph and state two theorems proved in the subsequent two sections .",
    "one claims that if the max - degree of @xmath19 is bounded then the size of a nrobp realizing @xmath78 is exponential in the mw of @xmath19 .",
    "the other theorem claims that for each sufficiently large @xmath1 there is an infinite class of graphs of bounded degree and of treewidth at most @xmath1 whose mw is at least @xmath24 for some universal constant @xmath25 .",
    "theorem [ maintheor ] will follow as an immediate corollary of these two theorems .    * matching width . * + let @xmath86 be a _ permutation _ of @xmath28 and let @xmath87 be a _",
    "prefix _ of @xmath86 ( i.e. all vertices of @xmath88 are ordered after @xmath87 ) .",
    "the _ matching width _ of @xmath87 is the size of the largest matching consisting of the edges between @xmath87 and @xmath89 .",
    "the _ matching width _ of @xmath86 is the largest _ matching width _ of a prefix of @xmath86 .",
    "the _ matching width _ of @xmath19 , denoted by @xmath90 , is the smallest matching width of a permutation of @xmath28 .",
    "[ [ remark . ] ] remark .",
    "+ + + + + + +    the above definition of matching width is a special case of the notion of _ maximum matching width _ as defined in @xcite . to illustrate the notion of matching width recall that @xmath91 and @xmath92 respectively denote a cycle and a complete graph of @xmath13 vertices .",
    "then , for a sufficiently large @xmath13 , @xmath93 . on the other hand @xmath94 .",
    "[ nrobplbdmw ] there is a function @xmath95 such that for any graph @xmath19 the size of nrobp realizing @xmath78 is at least @xmath96 where @xmath57 is the max - degree of @xmath19 .",
    "[ dmwtw ] there is a constant @xmath25 such that for each @xmath82 there is an infinite class @xmath83 of graphs of degree at most @xmath23 such that the treewidth of all the graphs of @xmath19 is at most @xmath1 and the matching width of each @xmath84 is at least @xmath97 where @xmath98 .",
    "now we are ready to prove theorem [ maintheor ] .",
    "* proof of theorem [ maintheor ] .",
    "* let @xmath83 be the class whose existence is claimed by theorem [ dmwtw ] . by theorem [ nrobplbdmw ] , for each @xmath84 the size of a nrobp realizing @xmath78 is of size at least @xmath99 .",
    "further on , by theorem [ dmwtw ] , @xmath100 , for some constant @xmath25 . substituting the inequality for @xmath90 into the lower bound @xmath99 supplied by theorem [ nrobplbdmw ]",
    ", we get that the size of a nrobp is at least @xmath101 where @xmath102 .",
    "replacing @xmath103 by @xmath13 gives us the desired lower bound .",
    "@xmath104    from now on ,",
    "the proof is split into two independent parts : section [ lbmainproof ] proves theorem [ nrobplbdmw ] and section [ dmwmainproof ] proves theorem [ dmwtw ] .",
    "recall that we are going to prove that for any graph @xmath19 , the size of a nrobp computing @xmath78 is at least @xmath96 where @xmath105 is a universal function depending on the max - degree @xmath57 of @xmath19 only .",
    "recall that the vertices of graph @xmath19 serve as variables in @xmath78 .",
    "that is , in the truth assignments to @xmath106 , the vertices are treated as literals and may occur positively or negatively .",
    "similarly for a path @xmath46 of a nrobp @xmath107 implementing @xmath78 , we say that a vertex @xmath108 _ occurs _ on @xmath46 if either @xmath109 and @xmath110 labels an edge of @xmath46 . in the former case",
    "this is a _ positive occurrence _",
    ", in the latter case a _ negative _ one .",
    "recall that a vertex cover ( vc ) of @xmath19 is @xmath111 incident to all the edges of @xmath112 .    [ basicobs ]",
    "@xmath35 is a satisfying assignment of @xmath78 if and only if the vertices of @xmath19 occurring positively in @xmath35 form a vc of @xmath19 .",
    "equivalently , @xmath111 is the set of all vertices of @xmath19 occurring positively on a root - leaf path of @xmath107 if and only if @xmath113 is a vc of @xmath19 .    in light of observation [ basicobs ]",
    ", we denote the set of all vertices occurring positively on a root - leaf path @xmath46 of @xmath107 by @xmath114 .",
    "the proof of theorem [ nrobplbdmw ] requires two intermediate statements . for the first statement , let @xmath22 be a node of an nrobp @xmath107 . for an integer @xmath115 , we call @xmath22 a _ @xmath20-node _ if there is a set @xmath116 of size at least @xmath20 such that for each root - leaf path @xmath46 passing through @xmath22 , @xmath117 . to demonstrate the notion of a @xmath20-node ,",
    "consider the two nodes denoted by circles in figure [ srn ] .",
    "they are @xmath15-nodes for the given nrobp , the witnessing set for the left - hand node is @xmath118 and for the right - hand node is @xmath119 .    [ tnodecut ] suppose that the matching width of @xmath19 is at least @xmath20 .",
    "then any root - leaf path of @xmath107 contains a @xmath20-node or , put it differently , @xmath20-nodes of @xmath107 form a root - leaf cut .",
    "* proof . *",
    "we need to show that each root - leaf path @xmath46 passes through a @xmath20-node . due to the uniformity of @xmath107 , (",
    "the vertices of @xmath19 corresponding to ) the labels of @xmath46 being explored from the root to the leaf form a permutation @xmath86 of @xmath28 .",
    "let @xmath120 be a prefix of the permutation witnessing the matching width at least @xmath20 .",
    "in other words , there is a matching @xmath121 of @xmath19 such that all of @xmath122 belong to @xmath120 , while all of @xmath123 belong to @xmath124 .",
    "let @xmath125 be the last vertex of @xmath120 and let @xmath22 be the head of the edge of @xmath46 whose label is a literal of @xmath125 .",
    "we claim that @xmath22 is a @xmath20-node with a witnessing set @xmath126 such that @xmath127 for each @xmath128 .",
    "indeed , observe that for each @xmath129 there is @xmath127 such that @xmath130 for each root - leaf path @xmath46 passing through @xmath22 .",
    "clearly for any root - leaf path @xmath131 of @xmath107 , either @xmath132 or @xmath133 for otherwise @xmath134 is not a vc of @xmath19 in contradiction to observation [ basicobs ] .",
    "thus if such @xmath128 does not exist then there are two paths @xmath135 and @xmath136 meeting @xmath22 such that @xmath137 and @xmath138 .    for a root - leaf path @xmath131 passing through @xmath22 denote by @xmath139 the prefix of @xmath131 ending with @xmath22 and by @xmath140 the suffix of @xmath131 beginning with @xmath22 .",
    "note that by definition of @xmath120 , @xmath141 occurs in @xmath142 and @xmath143 occurs in @xmath144 . by uniformity of @xmath107 , @xmath145 and",
    "hence it follows that @xmath141 occurs both in @xmath146 and @xmath147 .",
    "similarly we establish that @xmath143 occurs in both @xmath148 and @xmath149 .",
    "it remains to observe that , by definition , @xmath141 occurs negatively in @xmath147 and @xmath143 occurs negatively in @xmath148 .",
    "hence @xmath150 is a root - leaf path of @xmath107 such that @xmath151 is disjoint with @xmath129 , a contradiction to observation [ basicobs ] , confirming the existence of the desired @xmath128 .",
    "suppose that there is a root - leaf path @xmath152 of @xmath107 passing through @xmath22 such that @xmath153 .",
    "this means that there is @xmath154 contradicting the previous two paragraphs . thus being @xmath22 a @xmath20-node",
    "has been established and the lemma follows .",
    "@xmath104    for the second statement ,",
    "let @xmath155 and @xmath67 be two families of subsets of a universe @xmath156 .",
    "we say that @xmath155 _ covers _",
    "@xmath67 if for each @xmath157 there is @xmath158 such that @xmath159 .",
    "if each element of @xmath155 is of size at least @xmath20 then we say that @xmath155 is a @xmath20-_cover _ of @xmath67 .",
    "denote by @xmath26 the set of all vcs of @xmath19 .",
    "[ lbengine ] there is a function @xmath95 such that the following is true .",
    "let @xmath33 be a graph .",
    "let @xmath155 be a @xmath20-cover of @xmath160 .",
    "the @xmath161 where @xmath57 is the max - degree of @xmath33 .",
    "the proof of theorem [ lbengine ] , using a probabilistic argument , is provided in subsection [ lbenproof ] .",
    "see @xcite ( theorem 3 and corollary 2 ) for a non - probabilistic proof .",
    "now we are ready to prove theorem [ nrobplbdmw ] .",
    "* proof of theorem [ nrobplbdmw ] .",
    "* let @xmath11 be the set of all @xmath20-nodes of @xmath107 . for each @xmath162 ,",
    "specify one @xmath116 of size at least @xmath20 such that for all paths @xmath46 of @xmath107 passing through @xmath22 , @xmath117 .",
    "let @xmath163 be the set of all such @xmath116 .",
    "then we can specify _ distinct _",
    "@xmath164 such that @xmath165 for all @xmath166 .",
    "observe that @xmath27 covers @xmath26 . indeed , let @xmath167 . by observation [ basicobs ] , there is a root - leaf path @xmath46 with @xmath168 . by lemma [ tnodecut ] , @xmath46 passes through some @xmath162 and hence @xmath117 . by definition ,",
    "@xmath169 for @xmath166 and hence @xmath170 .",
    "thus @xmath27 is a @xmath20-cover of @xmath26 .",
    "it follows from theorem [ lbengine ] that @xmath171 where @xmath57 is a max - degree of @xmath19 and @xmath95 is a universal function independent on @xmath19 or @xmath20 .",
    "it follows that @xmath107 contains at least @xmath172 distinct nodes namely @xmath164 .",
    "@xmath104      denote @xmath173 by @xmath174 .",
    "for each @xmath175 , we toss a fair coin whose outcomes are @xmath125 or @xmath109 and the denote the outcome by @xmath176 . for @xmath177",
    ", let @xmath178 . that is",
    ", @xmath179 is a random set consisting of ends of edges of @xmath180 each chosen uniformly at random .",
    "let @xmath181 .",
    "then @xmath182    let us see how the claim implies the statement of the lemma .",
    "let @xmath155 be as in the statement of the lemma .",
    "then , by the claim above and the union bound , the probability that at least one element of @xmath155 is a subset of @xmath183 is at most @xmath184 where @xmath95 is a function such that @xmath185 .",
    "suppose that @xmath186 .",
    "then the above probability is smaller than @xmath187 .",
    "that is , there is a set @xmath66 obtained by choosing one end of each @xmath188 such that @xmath66 is not a superset of any element of @xmath155 . by construction @xmath66",
    "is a vc of @xmath33 .",
    "thus we have just observed that any family of less than @xmath172 subsets of @xmath189 of size at least @xmath20 can not cover all of @xmath160 , as required .",
    "* proof of the claim . * for @xmath190 ,",
    "denote by @xmath191 the set of edges incident to @xmath125 . for @xmath192 ,",
    "let @xmath193 .",
    "then it is easy to notice the following .",
    "@xmath194    @xmath195    furthermore , for a set @xmath35 ,    @xmath196    we will also need the following form of statement that the event @xmath197 is independent on the guessed ends of edges outside @xmath191 . in particular , let @xmath177 be such that @xmath198 and let @xmath192 be such that @xmath199 .",
    "then @xmath200    let @xmath201 be an independent set of @xmath33 .",
    "then the sets @xmath202 are pairwise disjoint and , in particular , for each @xmath203 , @xmath204 is disjoint with @xmath205 .",
    "we prove by induction on @xmath206 that @xmath207 . for @xmath208",
    "the claim immediately follows from ( [ eq2 ] ) .",
    "assume that @xmath209 .",
    "then @xmath210    by the induction assumption , @xmath211    also , @xmath212    the first equality follows from ( [ eq3 ] ) , the second from ( [ eq4 ] ) . replacing the factors of the right part of ( [ eq5 ] ) with the respective right parts of ( [ eq6 ] ) and ( [ eq7 ] )",
    ", we obtain @xmath213*pr(u_q \\in out(e_{u_q}))$ ] as required .",
    "notice further that @xmath214 .",
    "hence , @xmath215 .",
    "now , consider an arbitrary @xmath192 .",
    "then there is an independent set @xmath216 of size at least @xmath217 ( recall that @xmath57 is the max - degree of @xmath33 ) .",
    "hence @xmath218 as required .",
    "recall that we are going to prove that for each @xmath82 there is an infinite class of graphs of degree at most @xmath23 having treewidth @xmath1 and matching width at least @xmath219 where @xmath25 is a universal constant .",
    "let us define first a more general class of graphs for which the class of graphs used for the proof of theorem [ dmwtw ] will be a subclass .",
    "denote by @xmath31 a complete binary tree of height ( root - leaf distance ) @xmath32 .",
    "let @xmath66 be a tree and @xmath33 be an arbitrary graph .",
    "then @xmath220 is a graph having disjoint copies of @xmath33 in one - to - one correspondence with the vertices of @xmath66 .",
    "for each pair @xmath221 of adjacent vertices of @xmath66 , the corresponding copies are connected by making adjacent the pairs of _ same _ vertices of these copies . put differently",
    ", we can consider @xmath33 as a labelled graph where all vertices are associated with distinct labels .",
    "then for each edge @xmath222 of @xmath66 , edges are introduced between the vertices of the corresponding copies having the same label .",
    "an example of this construction is shown on figure [ trees ] .    .",
    "the dotted ovals surround the copies of @xmath223 in @xmath224.,height=94 ]    in order to prove theorem [ dmwtw ] we will consider all graphs @xmath225 where @xmath32 gets ranges over all natural numbers and @xmath206 is about @xmath34 , the precise definition is provided below inside the proof .",
    "we also need to prove three structural lemmas about graphs @xmath220 , the first one being an auxiliary statement for the second one and the second one being an auxiliary statement for the third one .",
    "note that these structural lemmas do not restrict the structure of @xmath33 , besides lemma [ dmwtwstruct ] requiring @xmath33 to be connected .",
    "[ matchontheway ] suppose the vertices of @xmath220 are partitioned into two subsets .",
    "let @xmath226 be a subset of vertices of @xmath33 such that @xmath227 .",
    "suppose there are two copies @xmath228 and @xmath229 of @xmath33 such that for each @xmath230 the copies of vertex @xmath125 in @xmath228 and @xmath229 belong to distinct partition classes .",
    "then @xmath220 has a matching of size @xmath20 with the ends of each edge lying in different partition classes .",
    "* let @xmath231 and @xmath80 be the respective vertices of @xmath66 corresponding to @xmath228 and @xmath229 .",
    "let @xmath232 be the path between @xmath231 and @xmath80 in @xmath66 .",
    "then for each @xmath230 there are two consecutive vertices @xmath233 and @xmath234 of this path with respective copies @xmath235 and @xmath236 such that the copy @xmath237 of @xmath125 in @xmath235 belongs to the same partition class as the copy @xmath238 of @xmath125 in @xmath228 and the copy @xmath239 of @xmath125 in @xmath236 belongs to the same partition class as the copy @xmath240 of @xmath125 in @xmath229 . by construction",
    ", @xmath220 has an edge @xmath241 which we choose to correspond to @xmath125 .",
    "let @xmath242 and consider the set of edges as above corresponding to each @xmath243",
    ". by construction , both ends of the edge corresponding to each @xmath243 are copies of @xmath243 and also these ends correspond to distinct partition classes .",
    "it follows that these edges do not have joint ends and indeed constitute a desired matching of size @xmath20 @xmath104    [ mincase ] let @xmath66 be a tree consisting of at least @xmath232 vertices .",
    "let @xmath33 be a connected graph of at least @xmath244 vertices .",
    "let @xmath245 be a partition of @xmath246 such that both partition classes contain at least @xmath247 vertices .",
    "then @xmath220 has a matching of size @xmath232 with the ends of each edge belong to distinct partition classes .",
    "* proof . *",
    "assume first that there are at least @xmath232 copies of @xmath33 corresponding to vertices of @xmath66 that contain vertices of both partition classes . since @xmath33 is a connected graph , for each copy we can specify an edge with one end in @xmath248 and the other end in @xmath249 .",
    "these edges belong to disjoint copies of @xmath33 , hence none of these edges have a common end . since there are @xmath232 copies of @xmath33 , we have the desired matching of size @xmath232 .",
    "if the assumption in the previous paragraph is not true then , since @xmath66 has at least @xmath232 vertices , there is a vertex @xmath125 of @xmath66 such that the copy @xmath228 of @xmath33 corresponding to @xmath125 contains vertices of only one partition class ; assume w.l.o.g . that this class is @xmath248 .",
    "we call @xmath125 a _ non - partitioned vertex _ of @xmath66 .",
    "then there is a vertex @xmath109 of @xmath66 such that the copy @xmath229 of @xmath33 corresponding to @xmath109 contains at least @xmath232 vertices of @xmath249 . indeed , otherwise , the vertices of the copies of @xmath33 associated with the non - partitioned vertices of @xmath66 all belong to @xmath248 .",
    "consequently , vertices of @xmath249 can occur only in the remaining at most @xmath250 copies of @xmath33 .",
    "if each of these copies contains at most @xmath250 vertices of @xmath249 then the total number of vertices of @xmath249 is smaller than @xmath247 in contradiction to our assumption .",
    "we conclude that the required vertex @xmath109 indeed exists .",
    "let @xmath226 be the set of vertices of @xmath33 whose copies in @xmath229 belong to @xmath249 . by assumption ,",
    "all the copies of @xmath226 in @xmath228 belong to @xmath248 . by lemma [ matchontheway ] , @xmath228 and",
    "@xmath229 witness the existence of a matching of size @xmath232 with ends of each edge belonging to distinct partition classes .",
    "@xmath104    [ dmwtwstruct ]",
    "let @xmath232 be an arbitrary integer and let @xmath33 be an arbitrary connected graph of @xmath244 vertices . then for any @xmath251 , @xmath252 .",
    "* the proof is by induction on @xmath32 .",
    "the first considered value of @xmath32 is @xmath253 .",
    "after that @xmath32 will increment in @xmath15 .",
    "in particular , for all values of @xmath32 of the form @xmath254 , we will prove that @xmath255 and , moreover , for each permutation @xmath86 of @xmath256 , the required matching can be witnessed by a partition of @xmath86 into a suffix and a prefix of size at least @xmath247 each .",
    "let us verify that the lower bound @xmath255 implies the lemma .",
    "suppose that @xmath257 for some non - negative integer @xmath57 . then @xmath258 .",
    ". then @xmath260 .",
    "assume that @xmath261 and let us show the lower bound of @xmath232 on the matching width .",
    "@xmath31 contains @xmath262 vertices . by construction",
    ", @xmath33 contains at least @xmath244 vertices .",
    "consequently , for each ordering of vertices of @xmath31 we can specify a prefix and a suffix of size at least @xmath247 ( just choose a prefix of size @xmath247 ) .",
    "let @xmath248 be the set of vertices that got to the prefix and let @xmath249 be the set of vertices that got to the suffix . by lemma [ mincase ] there is a matching of size at least @xmath232 consisting of edges between @xmath248 and @xmath249 confirming the lemma for the considered case .",
    "let us now prove the lemma for @xmath257 for @xmath263 .",
    "specify the centre of @xmath31 as the root and let @xmath264 be the subtrees of @xmath31 rooted by the grandchildren of the root .",
    "clearly , all of @xmath264 are copies of @xmath265 .",
    "let @xmath86 be a sequence of vertices of @xmath256 .",
    "let @xmath266 be the respective sequences of @xmath267 ` induced ' by @xmath86 ( that is their order is as in @xmath86 ) . by the induction assumption , for each of them we can specify a partition @xmath268 into a prefix and a suffix of size at least @xmath247 each witnessing the conditions of the lemma for @xmath269 .",
    "let @xmath270 be the last respective vertices of @xmath271 .",
    "assume w.l.o.g . that these vertices occur in @xmath86 in the order they are listed .",
    "let @xmath272 be a partition of @xmath86 into a prefix and a suffix such that the last vertex of @xmath120 is @xmath240 . by the induction assumption",
    "we know that the edges between @xmath273 and @xmath274 form a matching @xmath275 of size at least @xmath276 . in the rest of the proof , we are going to show that the edges between @xmath120 and @xmath277 whose ends do not belong to any of @xmath278 can be used to form a matching @xmath279 of size @xmath232 .",
    "the edges of @xmath275 and @xmath279 do not have joint ends , hence this will imply existence of a matching of size @xmath280 , as required .    the sets @xmath281 and @xmath282 partition @xmath283(h))$ ] .",
    "clearly , @xmath284 is a tree .",
    "furthermore , it contains at least @xmath232 vertices .",
    "indeed , @xmath285 ( isomorphic to @xmath265 ) has at least @xmath232 vertices just because we are at the induction step and @xmath31 contains at least @xmath286 times more vertices than @xmath285 .",
    "so , in fact , @xmath287 contains at least @xmath288 vertices .",
    "furthermore , since @xmath238 precedes @xmath240 , the whole @xmath289 is in @xmath120 . by definition ,",
    "@xmath289 is disjoint with @xmath290 and hence it is a subset of @xmath281 .",
    "furthermore , by definition , @xmath291 and hence @xmath292 as well .",
    "symmetrically , since @xmath293 , we conclude that @xmath294 and due to this @xmath295 .    thus @xmath281 and @xmath282 partition @xmath296(h))$ ] into classes of size at least @xmath247 each and the size of @xmath287 is at least @xmath288 .",
    "thus , according to lemma [ mincase ] , there is a matching @xmath279 of size at least @xmath232 created by edges between @xmath281 and @xmath282 , confirming the lemma , as specified above .",
    "@xmath104    * proof of theorem [ dmwtw ] . *",
    "first of all , let us identify the class @xmath83 . recall that @xmath297 a path of @xmath57 vertices .",
    "further on , let @xmath298 be such that @xmath299 is divided by @xmath286 .",
    "the considered class @xmath83 consists of all @xmath300 for @xmath301 .",
    "let us show that the treewidth of the graphs of @xmath83 is bounded by @xmath1 .",
    "consider the following tree decomposition of @xmath302 .",
    "the decomposition tree is @xmath31 .",
    "consider @xmath31 as the rooted tree with the centre being the root .",
    "the bag of each vertex includes the vertices of the copy of @xmath33 associated with this vertex plus the copy of the parent ( for a non - root vertex ) .",
    "the properties of tree decomposition can be verified by a direct inspection .",
    "the size of each bag is at most @xmath299 , hence the treewidth is at most @xmath303 .",
    "observe that max - degree of the graphs of @xmath83 is @xmath23 . indeed , consider a vertex @xmath109 of @xmath84 that belongs to a copy of @xmath33 associated with a vertex @xmath57 of some @xmath31 .",
    "inside its copy of @xmath33 , @xmath109 is adjacent to at most @xmath15 vertices .",
    "outside its copy of @xmath33 , @xmath109 is adjacent to vertices in the copies of @xmath33 associated with the neighbours of @xmath57 , precisely one neighbour per copy .",
    "vertex @xmath57 is adjacent to at most @xmath304 vertices of @xmath31 .",
    "it follows that @xmath109 has at most @xmath304 neighbours outside its copy of @xmath33 .    in the rest of the proof",
    "we assume that @xmath305 . te assumption",
    "does not restrict generality because the constant can be made larger to incorporate smaller values of @xmath1 .",
    "let us reformulate the lower bound of @xmath90 in terms of @xmath306 and @xmath1 where @xmath307 .",
    "notice that @xmath232 used in lemma [ dmwtwstruct ] can be expressed as @xmath308 .",
    "hence , the lower bound on the matching width can be seen as @xmath309 .",
    "this lower bound can be immediately simplified by noticing that by the choice of @xmath1 and @xmath77 , @xmath310 and @xmath311 .",
    "hence , @xmath312 can serve as a lower bound on @xmath90 . to draw the connection between @xmath13 and @xmath32 , notice that @xmath313 .",
    "it follows that @xmath314 .",
    "in particular , it follows that @xmath315 .",
    "it follows that @xmath316 in the lower bound can be replaced by @xmath317 and the new lower bound is @xmath318 .",
    "consequently , for @xmath319 the lower bound can be represented as @xmath320 which is the form needed for the theorem .",
    "it remains to observe that @xmath301 implies @xmath321 . by the above reasoning",
    ", @xmath301 implies @xmath322 . by our choice of @xmath305 , @xmath323 . by construction of @xmath19 and",
    "the choice of @xmath32 , @xmath324 , the last inequality follows from the choice of @xmath1 , hence @xmath325 .",
    "in particular , it follows that @xmath326 .",
    "hence @xmath327 .",
    "[ separ ] the space complexity of nrobp on cnf formulas @xmath328 is @xmath329 for some universal constant @xmath4 .",
    "* proof . *",
    "the number of variables of @xmath330 is @xmath331 .",
    "that is , @xmath332 . for a sufficiently large @xmath32 , @xmath333 , hence @xmath334 and hence @xmath335 .    by lemma [ dmwtwstruct ] , @xmath336 .",
    "that is , @xmath337 it is not hard to see that for a sufficiently large @xmath32 ( and hence sufficiently large @xmath13 ) , @xmath338 .",
    "the statement of the theorem now follows immediately from theorem [ nrobplbdmw ] .",
    "@xmath104    [ separ2 ] there is an infinite class of cnf formulas such that the complexity of decision - dnnf on this class is @xmath8 while the complexity robp is @xmath329 for some universal constant @xmath4 .",
    "* consider the class @xmath328 . as a robp",
    "can be seen as a special case of an nrobp , the lower bound on the space complexity of robp on @xmath328 immediately follows from lemma [ separ ] .",
    "it follows from theorem 1 in @xcite that the space complexity of decision - dnnf on a cnf formula with primal graph treewidth @xmath20 is @xmath339 ( the theorem in fact uses a different parameter of a cnf formula , however it is shown to never exceed the primal graph treewidth ) .",
    "arguing as in the proof of theorem [ dmwtw ] , we observe that the treewidth of @xmath330 is at most @xmath340 .",
    "we know from the proof of lemma [ separ ] that @xmath341 .",
    "that is @xmath342 and , for a sufficiently large @xmath32 , @xmath343 .",
    "that is , for a sufficiently large @xmath32 , the treewidth of @xmath330 is at most @xmath344 .",
    "substituting @xmath344 instead @xmath20 in @xmath339 results in @xmath8 , completing the required separation .",
    "@xmath104    thus , theorem [ separ2 ] shows that the quasi - polynomial upper bound on the size of robp simulating the given decision - dnnf as described in @xcite is essentially tight",
    ".    10    paul beame , jerry li , sudeepa roy , and dan suciu .",
    "lower bounds for exact model counting and applications in probabilistic databases . in _ proceedings of the twenty - ninth conference on uncertainty in artificial intelligence , bellevue ,",
    "wa , usa , august 11 - 15 , 2013 _ , 2013 .",
    "simone bova , florent capelli , stefan mengel , and friedrich slivovsky .",
    "expander cnfs have exponential dnnf size .",
    ", abs/1411.1995 , 2014 .    randal  e. bryant",
    ". symbolic boolean manipulation with ordered binary - decision diagrams . , 24(3):293318 , 1992 .",
    "adnan darwiche .",
    "decomposable negation normal form .",
    ", 48(4):608647 , 2001 .",
    "adnan darwiche . : a new canonical representation of propositional knowledge bases . in _",
    "22nd international joint conference on artificial intelligence ( ijcai ) _ , pages 819826 , 2011 .",
    "adnan darwiche and pierre marquis . a knowledge compilation map .",
    ", 17:229264 , 2002 .",
    "andrea ferrara , guoqiang pan , and moshe  y. vardi .",
    "treewidth in verification : local vs. global . in _",
    "logic for programming , artificial intelligence , and reasoning , 12th international conference ( lpar ) _ , pages 489503 , 2005 .    abhay  kumar jha and dan suciu . on the tractability of query compilation and bounded treewidth . in _",
    "15th international conference on database theory ( icdt ) _ , pages 249261 , 2012 .",
    "stasys jukna . a note on read - k times branching programs .",
    ", 1(27 ) , 1994 .    stasys jukna . .",
    "springer - verlag , 2012 .",
    "kenneth  l. mcmillan .",
    "hierarchical representations of discrete functions , with application to model checking . in _",
    "computer aided verification , 6th international conference,(cav ) _ , pages 4154 , 1994 .",
    "umut oztok and adnan darwiche . on compiling cnf into decision - dnnf .",
    "in _ principles and practice of constraint programming - 20th international conference , ( cp ) _ , pages 4257 , 2014 .",
    "alexander  a. razborov , avi wigderson , and andrew chi - chih yao .",
    "read - once branching programs , rectangular proofs of the pigeonhole principle and the transversal calculus . in _",
    "symposium on the theory of computing ( stoc ) _ , pages 739748 , 1997 .",
    "igor razgon .",
    "on obdds for cnfs of bounded treewidth . in _ principles of knowledge representation and reasoning(kr ) _ , 2014 .",
    "martin vatschelle . .",
    "phd thesis , department of informatics , university of bergen , 2012 .",
    "ingo wegener . .",
    "let @xmath107 be a nrobp .",
    "the _ in - degree _ @xmath345 of a node @xmath109 is a number of in - neighbours ( this is essential point because of the possibility of multiple edges ) .",
    "we assume that all the in - coming edges of nodes @xmath109 with @xmath346 are unlabelled .",
    "we call such a nrobp _ clean_. this assumption does not restrict generality because a nrobp can be transformed into a clean one having at most twice more edges than the original nrobp .",
    "indeed , let @xmath109 be a node with in - degree greater than @xmath187 and let @xmath347 be an edge labelled with a literal @xmath57 .",
    "subdivide @xmath347 and let @xmath348 be the path that replaced @xmath347 .",
    "then label @xmath349 with @xmath57 .",
    "clearly , as a result we get a nrobp implementing the same function as the original one .",
    "notice that @xmath350 has in - degree @xmath187 , that is the number of edges violating the assumption has decreased by @xmath187 .",
    "thus , one can inductively argue that in case of @xmath206 ` violating ' edges , there is a transformation to a nrobp satisfying the above assumption that creates at most @xmath206 additional edges .    for a node @xmath109 of @xmath107 , denote by @xmath351 the set of variables @xmath57 such that a literal of @xmath57 occurs on path from the root to @xmath109 ( the subscript can be omitted if clear from the context ) .",
    "we call the edges @xmath347 of @xmath107 such that @xmath346 _ relevant_. a relevant edge @xmath347 _ irregular _ if @xmath352 and _ regular _ otherwise .",
    "let @xmath353 .",
    "transform @xmath107 as follows .    1 .",
    "remove the edge @xmath347 .",
    "2 .   introduce new vertices @xmath354 ; we will refer to @xmath125 as @xmath355 for the sake of convenience .",
    "3 .   for each @xmath356 ,",
    "introduce two edges @xmath357 and label them them @xmath128 and @xmath358 , respectively .",
    "4 .   introduce an unlabelled edge @xmath359 .",
    "let @xmath360 be the graph obtained as a result of the above transformation .",
    "[ easyfacts ]    1 .",
    "2 .   the edge @xmath359 is regular in @xmath360 .",
    "@xmath360 is clean .",
    "* proof . *",
    "immediate by construction .",
    "@xmath104    [ remainsnrobp ]",
    "@xmath360 is a nrobp that computes the same function as @xmath107 .",
    "* to establish the read - once property of @xmath360 , it is sufficient to prove that any root - leaf path @xmath46 of @xmath360 that is not a path of @xmath107 is read - once . by construction ,",
    "such a path @xmath46 includes @xmath125 and @xmath109 and the subpath @xmath362 starting at @xmath125 and ending at @xmath109 goes through @xmath354 as defined above .",
    "let @xmath363 be the prefix of @xmath46 ending at @xmath125 , and @xmath364 be the suffix of @xmath46 beginning at @xmath109 .",
    "notice that @xmath365 is a subgraph of a path of @xmath107 and hence can not have repetitions of variable occurrences . by construction , @xmath362 does not have repeated variable occurrences either .",
    "a variable of @xmath362 does not occur on @xmath363 because , by construction , the variables occurring on @xmath362 do not belong to @xmath366 .",
    "finally all the variables occurring on @xmath362 , by construction , belong to @xmath367 and hence can not belong to @xmath364 . indeed ,",
    "otherwise if such a variable @xmath57 is found then there is a path @xmath152 of @xmath107 from the root to @xmath109 on which @xmath57 occurs and hence @xmath57 occurs twice on @xmath368 in contradiction to the read - once property of @xmath107 .",
    "thus we conclude that @xmath360 is indeed read - once .",
    "let @xmath35 be a satisfying assignment of the function computed by @xmath107 and let @xmath46 be a root - leaf path of @xmath107 with @xmath369 .",
    "if @xmath46 does not include @xmath347 then @xmath46 is a root - leaf path of @xmath360 .",
    "otherwise , let @xmath363 and @xmath364 be as in the previous paragraph and let @xmath152 be a @xmath370 path with @xmath354 being the intermediate vertices and the in - edge for each @xmath141 is the one labelled with the literal of @xmath128 that belongs to @xmath35 ( by construction , such a selection is possible ) and , as a result @xmath371 . taking into account that @xmath372 , we conclude that @xmath373 .",
    "that is , in any case there is a root - leaf path of @xmath107 whose set of literals is a subset of @xmath35 and hence @xmath35 is a satisfying assignment of the function computed by @xmath360 .",
    "conversely , let @xmath35 be a satisfying assignment of the function computed by @xmath360 .",
    "let @xmath46 be a root - leaf path of @xmath360 such that @xmath369 .",
    "if @xmath46 is not a path of @xmath107 then , by construction , @xmath46 includes both @xmath125 and @xmath109 and a path of @xmath107 can be obtained by replacement of the subpath of @xmath46 between @xmath125 and @xmath109 by an edge @xmath347 .",
    "clearly , the set of literals of this resulting path is a subset of @xmath45 , hence @xmath35 is a satisfying assignment of the function computed by @xmath107 .",
    "@xmath104    [ moreregular ] the number of irregular edges of @xmath360 is smaller than the number of irregular edges of @xmath360 .",
    "* proof . *",
    "denote by @xmath374 the sets of relevant edges of @xmath107 , regular edges of @xmath107 , relevant edges of @xmath360 , and regular edges of @xmath360 , respectively .",
    "it is not hard to see that by construction , @xmath375 .",
    "that is , @xmath376 . by assumption ,",
    "hence @xmath378 .",
    "in fact @xmath379 . to show this , we need the following claim .    for each node @xmath380 , @xmath381 .    *",
    "* let @xmath382 and let @xmath46 be a path from the root of @xmath107 to @xmath350 containing an occurrence of @xmath57 .",
    "note that by construction @xmath46 is either a path of @xmath360 or it can be replaced by a path @xmath152 with @xmath383 .",
    "hence @xmath384 .    conversely , let @xmath384 and let @xmath46 be a path from the root of @xmath360 to @xmath350 containing an occurrence of @xmath57 .",
    "if @xmath46 does not contain @xmath109 then @xmath46 is path of @xmath107 and hence @xmath382 .",
    "if @xmath46 contains @xmath109 but @xmath57 occurs on the suffix @xmath364 of @xmath46 starting at @xmath109 then , since @xmath364 is a path in @xmath107 , appending @xmath364 to an arbitrary path from the root to @xmath109 will give us a path of @xmath107 on which @xmath57 occurs . finally if @xmath57 occurs on the prefix of @xmath46 ending at @xmath109 then @xmath385 . by the first statement of observation [ easyfacts ] , @xmath361 .",
    "that is , there is a path @xmath152 of @xmath107 from the root to @xmath350 that contains an occurrence of @xmath57 .",
    "consequently @xmath368 is a a path of @xmath107 containing an occurrence of @xmath57 .",
    "@xmath386    now , let @xmath387 , that is @xmath388 . by the above claim , @xmath389 .",
    "that is , @xmath390 .",
    "thus @xmath391 includes all the elements of @xmath392 and , in addition @xmath393 , by the second statement of observation [ easyfacts ] .",
    "it follows that @xmath394 .",
    "now , the number of irregular edges of @xmath107 and @xmath360 are , respectively , @xmath395 and @xmath396 .",
    "it follows from the proved above that the latter is smaller than the former .",
    "@xmath104    let @xmath107 be a clean nrobp with @xmath206 irregular edges . then there is a uniform nrobp @xmath397 computing the same function as @xmath107 and having at most @xmath398 edges more than @xmath107 .",
    "* by induction on @xmath206 .",
    "if @xmath399 then all the relevant edges of @xmath107 are regular .",
    "it is easy to observe that in this case @xmath107 is uniform and hence no further transformation is needed .",
    "suppose @xmath209 .",
    "pick an irregular edge @xmath347 and transform @xmath107 to @xmath360 as specified above . by lemma [ remainsnrobp ]",
    ", @xmath360 is a nrobp . by the third statement of observation [ easyfacts ]",
    ", @xmath360 is clean . by lemma [ moreregular ]",
    ", @xmath360 has at most @xmath400 irregular edges .",
    "hence , by the induction assumption , there is a uniform nrobp @xmath397 computing the same function as @xmath360 and having at most @xmath401 more edges than @xmath360 . as @xmath360 computes the same function",
    "as @xmath107 , by lemma [ remainsnrobp ] and , by construction , has at most @xmath402 edges more than @xmath397 , we conclude that @xmath107 computes the same function as @xmath107 and has at most @xmath398 more edges . @xmath104",
    "a ( nrobp ) is traditionally defined as a dag @xmath107 with one root and two leaves .",
    "some of non - leaf nodes are labelled with variables so that no variable occurs as a label twice on a directed path of @xmath107 .",
    "a node labelled with a variable has two outgoing edges one labelled with @xmath39 the other with @xmath40 .",
    "finally , the leaves are labelled with @xmath39 and @xmath40 .",
    "it is convenient to see each edge @xmath403 labelled with @xmath39 or @xmath40 being in fact respectively labelled with the positive or negative literal of the variable labelling the tail of @xmath403 .",
    "with such a labelling an assignment @xmath45 associated with each directed path of @xmath107 is simply the set of literals labelling the edges of @xmath46 .",
    "the satisfying assignments of the function computed by @xmath107 are precisely those that are extensions of @xmath45 for paths @xmath46 from the root to the @xmath39 leaf .",
    "it is not hard to see that for any function that is not constant @xmath40 , nrobp can be thought as a special case of arosrn . indeed , with edges labelled by literals as specified in the previous paragraph , remove the labels from the vertices , remove the @xmath40 leaf as well as all nodes of @xmath107 from which th @xmath39 leaf is not reached and the obtained graph is an arosrn computing exactly the same function as @xmath107 .",
    "conversely , an arosrn can be transformed into a nrobp as follows .",
    "denote the only leaf of the arosrn as the @xmath39 leaf and introduce a new node to be the @xmath40 leaf .",
    "then for each edge @xmath347 labelled with a literal @xmath57 , apply the following transformation .    *",
    "subdivide @xmath347 by introducing a new node @xmath350 and edges @xmath349 and @xmath404 instead @xmath347 . *",
    "introduce a new edge @xmath403 from @xmath350 to the @xmath40 leaf .",
    "* label @xmath350 by @xmath405 , the variable of @xmath57 . *",
    "if @xmath57 is the positive literal then label @xmath404 with @xmath39 and @xmath403 with @xmath40 . otherwise , label @xmath404 with @xmath40 and @xmath403 with @xmath39 .",
    "it is not hard to see that there is a bijection between root - leaf paths of the arosrn and root - true leaf paths of the resulting nrobp preserving the associated sets of literals .",
    "therefore , we conclude that this transformation is valid ."
  ],
  "abstract_text": [
    "<S> in this paper we prove a space lower bound of @xmath0 for non - deterministic ( syntactic ) read - once branching programs ( nrobps ) on functions expressible as cnfs with treewidth at most @xmath1 of their primal graphs . </S>",
    "<S> this lower bound rules out the possibility of fixed - parameter space complexity of nrobps parameterized by @xmath1 .    </S>",
    "<S> we use lower bound for nrobps to obtain a quasi - polynomial separation between free binary decision diagrams and decision decomposable negation normal forms , essentially matching the existing upper bound introduced by beame et al . and thus proving the tightness of the latter . </S>"
  ]
}
{
  "article_text": [
    "the uncapacitated facility location ( ufl ) problem is defined as follows .",
    "we are given a set @xmath7 of _ facilities _ and a set @xmath8 of _",
    "clients_. for every facility @xmath9 , there is a nonnegative number @xmath10 denoting the _ opening cost _ of the facility .",
    "furthermore , for every client @xmath11 and facility @xmath12 , there is a _ connection cost _ @xmath13 between facility @xmath14 and client @xmath15 .",
    "the goal is to open a subset of the facilities @xmath16 , and connect each client to an open facility so that the total cost is minimized .",
    "the ufl problem is np - complete , and max snp - hard ( see  @xcite ) .",
    "a ufl instance is _ metric _ if its _ connection cost _ function satisfies the following variant of the _ triangle inequality _ :",
    "@xmath17    we will say that an algorithm is a @xmath18-approximation algorithm for a minimization problem if it computes , in polynomial time , a solution that is at most @xmath18 times more expensive than the optimal solution . specifically , for the ufl problem we consider the notion of _ bifactor approximation _ introduced by charikar and guha  @xcite .",
    "we say that an algorithm is a ( @xmath0,@xmath1)-approximation algorithm if the solution it delivers has total cost at most @xmath19 , where @xmath3 and @xmath4 denote , respectively , the facility and the connection cost of an optimal solution . note the potential ambiguity resulting from the possible existence of multiple optimal solutions .",
    "when presenting our algorithm , we will compare the solution cost only to the cost of the initial fractional solution .",
    "nevertheless , as we observe at the end of section  [ sec_alg ] , adding an additional scaling step to our algorithm is sufficient to get a guarantee in a comparison with any feasible fractional solution .",
    "guha and khuller  @xcite proved by a reduction from set cover that there is no polynomial time @xmath18-approximation algorithm for the metric ufl problem with @xmath20 , unless @xmath21 .",
    "sviridenko showed that the approximation lower bound of 1.463 holds , unless @xmath22 ( see  @xcite ) .",
    "jain et al .",
    "@xcite generalized the argument of guha and khuller to show that the existence of a ( @xmath0,@xmath1)-approximation algorithm with @xmath23 would imply @xmath24 .",
    "the ufl problem has a rich history starting in the 1960 s .",
    "the first results on approximation algorithms are due to cornujols , fisher , and nemhauser  @xcite who considered the problem with an objective function of maximizing the `` profit '' of connecting clients to facilities minus the cost of opening facilities .",
    "they showed that a greedy algorithm gives an approximation ratio of @xmath25 , where @xmath26 is the base of the natural logarithm .",
    "this ratio was later improved to @xmath27 by ageev and sviridenko  @xcite .    for the objective function of minimizing the sum of connection cost and opening cost ,",
    "hochbaum @xcite presented a greedy algorithm with an @xmath28 approximation guarantee , where @xmath29 is the number of clients . by a straightforward reduction from the set cover problem",
    ", it can be shown that this can not be improved unless @xmath30 $ ] due to a result by feige  @xcite .",
    "however , if the connection costs are restricted to satisfy the triangle inequality ( [ eq_triangleineq ] ) , then constant approximation guarantees can be obtained . in all results mentioned below , except for the maximization objectives",
    ", it is assumed that the costs satisfy these restrictions .",
    "if the distances between facilities and clients are euclidean , then for some location problems approximation schemes have been obtained @xcite .",
    "the first approximation algorithm with constant approximation ratio for the metric minimization problem was developed by shmoys , tardos , and aardal  @xcite . since",
    "then numerous improvements have been made .",
    "guha and khuller  @xcite introduced a _ greedy augmentation procedure _",
    "( see also charikar and guha @xcite ) .",
    "a series of approximation algorithms based on lp - rounding was then developed ( see e.g.  @xcite ) .",
    "there are also greedy algorithms that only use the lp - relaxation implicitly to obtain a lower bound for a primal - dual analysis .",
    "an example is the jms 1.61-approximation algorithm developed by jain , mahdian , and saberi @xcite .",
    "some algorithms combine several techniques , like the 1.52-approximation algorithm of mahdian , ye , and zhang @xcite , which uses the jms algorithm and the greedy augmentation procedure . up to now",
    ", their approximation ratio of 1.52 was the best known .",
    "many more algorithms have been considered for the ufl problem and its variants .",
    "we refer the interested reader to survey papers by shmoys  @xcite and vygen  @xcite .      in several lp - based approximation algorithms a _ clustering step _ is part of an algorithm for creating a feasible solution , see section [ sec_clustering ] for more details .",
    "in this step a not yet clustered client is chosen as the so - called `` cluster center '' and one of the facilities that fractionally serves the cluster center in the lp solution is opened .",
    "our main technique is to modify the support graph corresponding to the lp solution before clustering , and to use various average distances in the fractional solution to bound the cost of the obtained solution .",
    "a similar way of modifying the lp - solution , called _ filtering _ , was introduced by lin and vitter  @xcite .",
    "lin and vitter considered a broad class of 0 - 1 problems having both covering and packing constraints .",
    "they start by solving the lp - relaxation of the problem , and in the subsequent filtering step they select a subset of the variables that have positive value in the lp solution and that have relatively large objective coefficients .",
    "these variables are set equal to zero , which results in a modified problem .",
    "the lp - relaxation of this modified problem is then solved and rounding is applied . in the paper by shmoys et al .",
    "@xcite filtering was also used in order to bound the connection costs . here again a subset of the variables that have a positive value in the lp - solution are set equal to zero .",
    "the remaining positive variables were scaled so as to remain feasible for the original lp - relaxation .",
    "later , chudak @xcite observed that the lp - relaxation was already filtered in a certain sense as it is possible to state that if a client is fractionally connected to a facility in the lp - solution , then one can bound the cost of this connection in terms of the optimal lp - dual variables .",
    "this observation was later used by aardal , chudak , and shmoys  @xcite in their algorithm for multi - level problems , and by sviridenko  @xcite .",
    "the filtering done in our algorithm is slightly different as the filtered lp - solution is not necessarily feasible with respect to the lp - relaxation . throughout this paper",
    "we will use the name _ sparsening technique _ for the combination of filtering with our new analysis .",
    "we modify the @xmath5-approximation algorithm of chudak  @xcite , see also chudak and shmoys  @xcite , to obtain a new ( 1.6774,1.3738)-approximation algorithm for the ufl problem .",
    "our linear programming ( lp ) rounding algorithm is the first one that achieves an optimal bifactor approximation due to the matching lower bound of @xmath31 established by jain et al .",
    "in fact we obtain an algorithm for each point @xmath31 such that @xmath32 , which means that we have an optimal approximation algorithm for instances dominated by connection cost ( see figure  [ fig_contr ] ) .",
    "one of the main technical contributions of the paper is the proof of lemma  [ lem : main - lemma ] , which gives a bound on the expected connection cost in the case of using a path via cluster center to connect a client .",
    "this lemma may potentially be useful in constructing new algorithms for ufl and related problems .",
    "one could view our contribution as an improved analysis of a minor modification of the algorithm by sviridenko  @xcite , which also introduces filtering to the algorithm of chudak and shmoys .",
    "the filtering process that is used both in our algorithm and in the algorithm by sviridenko is relatively easy to describe , but the analysis of the impact of this technique on the quality of the obtained solution is quite involved in each case .",
    "therefore , we prefer to state our algorithm as an application of the sparsening technique to the algorithm of chudak and shmoys , which in our opinion is relatively easy do describe and analyze .",
    "we start by observing that for a certain class of instances the analysis of the algorithm of chudak and shmoys may be improved .",
    "we call these instances _ regular _ , and for the other instances we propose a measure of their _ irregularity_. the goal of the sparsening technique is to explore the irregularity of instances that are potentially tight for the original algorithm of chudak and shmoys .",
    "we cluster the given instance in the same way as in the 1.58-approximation algorithm by sviridenko  @xcite , but we continue our algorithm in the spirit of chudak and shmoys algorithm , and we use certain average distances to control the irregularities , which leads to an improved bifactor approximation guarantee .",
    "our new algorithm may be combined with the @xmath33-approximation algorithm of jain et al . to obtain a 1.5-approximation algorithm for the ufl problem .",
    "this is an improvement over the previously best known 1.52-approximation algorithm of mahdian et al . , and it cuts of a 1/3 off the gap with the approximation lower bound by guha and khuller  @xcite . an earlier version of this paper appeared in @xcite .",
    "we now give an informal sketch of our algorithm . using this description",
    "we give an outline of the paper .",
    "[ [ sketch - of - the - algorithm . ] ] sketch of the algorithm .",
    "+ + + + + + + + + + + + + + + + + + + + + + + +    1 .",
    "solve the lp relaxation of the problem .",
    "[ point : mod ] modify the fractional solution by : * scaling up the facility opening variables , * modifying the connection variables to completely use the `` closest '' fractionally open facilities , * splitting facilities , if necessary , such that there is no slack between the amount that a client is assigned to a facility , and the amount by which this facility is opened .",
    "[ point : cluster ] divide clients into clusters based on the current fractional solution . in each cluster a specific client is assigned to be a `` cluster center '' .",
    "[ point : open1 ] for every cluster , open one of the `` close '' facilities of the cluster center .",
    "5 .   for each facility",
    "not considered above , open it independently with probability equal to the fractional opening .",
    "connect each client to an open facility that is closest to it .",
    "in section [ sec_prelim ] we give a brief overview of the main ingredients of some known approximation algorithms for ufl .",
    "in particular we state the lp relaxation of ufl , describe clustering , scaling , and greedy augmentation .",
    "the clustering technique is common for the existing lp - rounding algorithms for ufl , and it is applied in steps  [ point : cluster ] and  [ point : open1 ] of the above algorithm .",
    "sparsening of the support graph of the lp solution , which is the essence of step  [ point : mod ] , is discussed in section  [ sec_sparsening ] , where we also prove the crucial lemma on certain connection costs .",
    "a more detailed description of the algorithm and its analysis are presented in section  [ sec_alg ] , and the 1.5-approximation algorithm is stated in section  [ sec_approx ] . in section  [ sec_multilevel ]",
    "we show that the new @xmath34-approximation algorithm may also be used to improve the approximation ratio for the 3-level version of the ufl problem to 2.492 . a randomized approach to clustering",
    "is discussed in section  [ sec_randomized ] , and , finally , in section  [ sec_concluding ] we present some concluding remarks and open problems .",
    "we will review the concept of lp - rounding algorithms for the metric ufl problem .",
    "these are algorithms that first solve the linear relaxation of a given integer programming ( ip ) formulation of the problem , and then round the fractional solution to produce an integer solution with a value not too much higher than the starting fractional solution .",
    "since the optimal fractional solution is at most as expensive as an optimal integral solution , we obtain an estimation of the approximation factor .",
    "the ufl problem has a natural formulation as the following ip problem .",
    "@xmath35    a linear relaxation of this ip formulation is obtained by replacing the integrality constraints ( [ eq_int ] ) by the constraint @xmath36 for all @xmath37 .",
    "the value of the solution to this lp relaxation will serve as a lower bound for the cost of the optimal solution .",
    "we will also make use of the following dual formulation of this lp .",
    "@xmath38 \\mbox{s.t . }",
    "& \\sum_{j \\in \\mathcal{c } } w_{ij } \\leq f_i & \\qquad \\mbox{for all } i \\in \\mathcal{f},\\\\          & v_j - w_{ij }   \\leq c_{ij } & \\qquad   \\mbox{for all } i \\in \\mathcal{f } , j \\in \\mathcal{c},\\\\      & w_{ij } \\geq 0 & \\qquad",
    "\\mbox{for all   } i \\in \\mathcal{f } , j \\in \\mathcal{c}\\,.\\\\\\end{aligned}\\ ] ]      the first constant factor approximation algorithm for the metric ufl problem by shmoys et al . , but also the algorithms by chudak and shmoys , and by sviridenko are based on the following clustering procedure .",
    "suppose we are given an optimal solution to the lp relaxation of our problem .",
    "consider the bipartite graph @xmath39 with vertices @xmath40 being the facilities and @xmath41 the clients of the instance , and where there is an edge between a facility @xmath42 and a client @xmath43 if the corresponding variable @xmath44 in the optimal solution to the lp relaxation is positive .",
    "we call @xmath45 a _ support graph _ of the lp solution",
    ". if two clients are both adjacent to the same facility in graph @xmath45 , we will say that they are _ neighbors _ in @xmath45 .",
    "the clustering in this graph is a partitioning of clients into clusters together with a choice of a leading client for each of the clusters .",
    "this leading client is called a _ cluster center_.",
    "additionally we require that no two cluster centers are neighbors in the support graph .",
    "this property helps us to open one of the adjacent facilities for each cluster center . for a picture of a cluster see figure  [ fig : cluster ] .    the algorithms by shmoys et al . ,",
    "chudak and shmoys , and by sviridenko all use the following procedure to obtain the clustering : while not all the clients are clustered , choose greedily a new cluster center @xmath15 , and build a cluster from @xmath15 and all the neighbors of @xmath15 that are not yet clustered .",
    "obviously the outcome of this procedure is a proper clustering .",
    "moreover , it has a desired property that clients are `` close '' to their cluster centers .",
    "each of the mentioned lp - rounding algorithms uses a different greedy criterion for choosing new cluster centers . in our algorithm",
    "we will use the clustering with the greedy criterion of sviridenko  @xcite .",
    "another way of clustering is presented in section 7 .",
    "the techniques described here are not directly used by our algorithm , but they help to explain why the algorithm of chudak and shmoys is close to optimal .",
    "we will discuss how scaling facility opening costs before running an algorithm , together with another technique , called _ greedy augmentation _ , may help to balance the analysis of an approximation algorithm for the ufl problem .    the greedy augmentation technique introduced by guha and khuller  @xcite",
    "( see also  @xcite ) is as follows .",
    "consider an instance of the metric ufl problem and a feasible solution .",
    "for each facility @xmath12 that is not opened in this solution , we may compute the amount of cost that is saved by opening facility @xmath14 , also called the _",
    "gain _ of opening @xmath14 , denoted by @xmath46 .",
    "while there exists a facility @xmath14 with positive gain @xmath46 , the greedy augmentation procedure opens a facility that maximizes the ratio of gain to the facility opening cost @xmath47 , and updates the remaining values of @xmath46 .",
    "suppose we are given an approximation algorithm @xmath48 for the metric ufl problem and a real number @xmath49 .",
    "consider the following algorithm @xmath50 .    1",
    ".   scale up all facility opening costs by a factor @xmath51 ; 2 .",
    "run algorithm @xmath48 on the modified instance ; 3 .",
    "scale back the opening costs ; 4 .",
    "run the greedy augmentation procedure .    following the analysis of mahdian , ye , and zhang  @xcite",
    "one may prove the following lemma .",
    "[ lem : scaling ] suppose @xmath48 is a ( @xmath0,@xmath1)-approximation algorithm for the metric ufl problem , then @xmath50 is a ( @xmath52,@xmath53)-approximation algorithm for this problem .",
    "this method may be applied to balance an ( @xmath0,@xmath1)-approximation algorithm with @xmath54 . however",
    ", our 1.5-approximation algorithm is balanced differently .",
    "it is a composition of two algorithms that have opposite imbalances .",
    "in this section we describe a technique that we use to control the expected connection cost of the obtained integer solution .",
    "our technique is based on the concept of _ filtering _ , introduced by lin and vitter  @xcite , see section [ sec_related_work ] .",
    "we will give an alternative analysis of the effect of filtering on a fractional solution to the lp relaxation of the ufl problem .",
    "suppose that , for a given ufl instance , we have solved its lp relaxation , and that the optimal primal solution is @xmath55 and the corresponding optimal dual solution is @xmath56 .",
    "such a fractional solution has facility cost @xmath57 and connection cost @xmath58 .",
    "each client @xmath15 has its share @xmath59 of the total cost .",
    "this cost may again be divided into a client s fractional connection cost @xmath60 , and its fractional facility cost @xmath61 .",
    "the idea behind the sparsening technique is to make use of irregularities of an instance if they occur .",
    "we call an instance _ locally regular _ around client @xmath15 if the facilities that serve @xmath15 in the fractional solution @xmath55 are all at the same distance from @xmath15 .",
    "an instance which is locally regular around each client is called _",
    "regular_. we begin by observing that for such an instance the algorithm of chudak and shmoys produces a solution whose cost is bounded by @xmath62 , which is an easy consequence of the original analysis  @xcite , but also follows from our analysis in section  [ sec_alg ] .",
    "although this observation might not be very powerful itself , the value @xmath63 happens to be the intersection point between the bifactor approximation lower bound curve @xmath31 and the @xmath64-axis in figure [ fig_contr ] .",
    "moreover , for regular instances we may apply the technique described in section  [ sub_greedy_aug ] to obtain an approximation algorithm corresponding to any single point on this curve .",
    "in particular , we may simply use this construction to get an optimal @xmath65-approximation algorithm for regular instances of the metric ufl problem .",
    "note , that the proof of the matching hardness of approximation also uses instances that are essentially equals 1 if subset @xmath14 contains element @xmath15 and it equals @xmath66 otherwise . to formally argue about the regularity of such an instance we would need to construct an optimal fractional solution using only facilities at distance 1 . ] regular .",
    "the instances that are not regular are called _ irregular _ and these are the instances for which it is more difficult to create a feasible integer solution with good bounds on the connection cost . in fractional solutions of irregular instances there",
    "exist clients that are fractionally served by facilities at different distances .",
    "our approach is to divide facilities serving a client into two groups , namely _ close _ and _ distant _ facilities .",
    "we will remove links to distant facilities before the clustering step , so that if there are irregularities , then distances to cluster centers will decrease .",
    "we measure the local irregularity of an instance by comparing the fractional connection cost of a client to the average distance to its distant facilities . in the case of a regular instance",
    ", the sparsening technique gives the same results as the technique described in section  [ sub_greedy_aug ] , but for irregular instances sparsening makes it possible to construct an integer solution with a better bound on the connection costs .",
    "we will start by modifying the optimal fractional lp - solution @xmath55 by scaling the @xmath64-variables by a constant @xmath67 to obtain a fractional solution @xmath68 , where @xmath69 .",
    "note that by scaling we might set some @xmath70 . in the filtering of shmoys et al .",
    "such a variable would instantly be rounded to 1 .",
    "however , for the compactness of a later part of our analysis it is important not to round these variables , but rather to split facilities . before we discuss splitting ,",
    "let us fist modify the connection variables . a version of this argument , which describes all these modifications of the fractional solution at once , is given in  @xcite[lemma 1 ] .",
    "suppose that the values of the @xmath64-variables are scaled and fixed , but that we now have the freedom to change the values of the @xmath71-variables in order to minimize the connection cost .",
    "for each client @xmath15 we compute the values of the corresponding @xmath72-variables in the following way .",
    "we choose an ordering of facilities with nondecreasing distances to client @xmath15 .",
    "we connect client @xmath15 to the first facilities in the ordering so that among the facilities fractionally serving @xmath15 , only the last one in the chosen ordering may be opened by more than that it serves @xmath15 .",
    "formally , for any facilities @xmath14 and @xmath73 such that @xmath73 is later in the ordering , if @xmath74 then @xmath75 .    in the next step ,",
    "we eliminate the occurrences of situations where @xmath76 .",
    "we do so by creating an equivalent instance of the ufl problem , where facility @xmath14 is split into two identical facilities @xmath73 and @xmath77 . in the new",
    "setting , the opening of facility @xmath73 is @xmath78 and the opening of facility @xmath77 is @xmath79 .",
    "the values of the @xmath72-variables are updated accordingly . by repeatedly applying this procedure",
    "we obtain a so - called _ complete _ solution @xmath80 , i.e. , a solution in which no pair @xmath37 exists such that @xmath81 ( see  @xcite[lemma 1 ] for a more detailed argument ) .    in the new complete solution",
    "@xmath80 we distinguish groups of facilities that are especially important for a particular client . for a client @xmath15 we say that a facility @xmath14 is one of its _ close facilities _ if it fractionally serves client @xmath15 in @xmath80 ; @xmath82 is the set of close facilities of @xmath15 .",
    "if @xmath83 , but facility @xmath14 was serving client @xmath15 in solution @xmath55 , then we say , that @xmath14 is a _ distant _ facility of client @xmath15 ; @xmath84 is the set of distant facilities of @xmath15 .",
    "we will extensively use the average distances between single clients and groups of facilities defined as follows .",
    "for any client @xmath11 , and for any subset of facilities @xmath85 such that @xmath86 , let @xmath87    to interpret differences between certain average distances we will use the following parameter",
    ".    let @xmath88    the value @xmath89 is a measure of the irregularity of the instance around client @xmath15 .",
    "it is the average distance to a distant facility minus the fractional connection cost @xmath90 ( note , that @xmath91 is the general average distance to both close and distant facilities ) divided by the fractional facility cost of a client @xmath15 ; or it is equal to @xmath92 if @xmath93 . since @xmath94 , @xmath91 and @xmath95 , @xmath89 takes values between @xmath92 and @xmath96 .",
    "@xmath97 means that client @xmath15 is served in the solution @xmath55 by facilities that are all at the same distance .",
    "if @xmath98 , then the facilities are at different distances and the distant facilities are all so far from @xmath15 that @xmath15 is not willing to contribute to their opening .",
    "in fact , for clients @xmath15 with @xmath93 the value of @xmath89 is not relevant for our analysis .    consider yet another quantity , namely @xmath99 .",
    "observe , that for a client @xmath15 with @xmath100 we have @xmath101    we may use the definitions of @xmath89 and @xmath102 together with @xmath103 to rewrite some distances from client @xmath15 in the following form ( see also figure  [ fig : distances ] ) :    * the average distance to a close facility is @xmath104 * the average distance to a distant facility is @xmath105 * the maximal distance to a close facility is @xmath106    in the following lemma we will prove an upper bound on the average distance from client @xmath15 to another group of facilities .",
    "[ lem : main - lemma ] suppose @xmath107 and that clients @xmath108 are neighbors in @xmath109 , i.e. @xmath110 .",
    "then , either @xmath111 or @xmath112    assume that @xmath113 is not empty , since otherwise we are done .",
    "[ [ case-1 . ] ] case 1 .",
    "+ + + + + + +    assume that the distance between @xmath15 and @xmath114 is at most @xmath115 . by a simple observation , that a maximum is larger that the average",
    ", we get @xmath116 combining the assumption with  ( [ eq : c1 ] ) , we obtain @xmath117    [ [ case-2 . ] ] case 2 .",
    "+ + + + + + +    assume that the distance between @xmath15 and @xmath114 is longer than @xmath115 .",
    "since @xmath118 , the assumption implies @xmath119 consider the following two sub - cases .",
    "[ [ case-2a . ] ] case 2a .",
    "+ + + + + + + +    assume that @xmath120 .",
    "+ this assumption together with  ( [ eq:1 ] ) gives @xmath121 recall that @xmath122 . hence  ( [ eq:2 ] ) is equivalent to @xmath123 since @xmath15 and @xmath114 are neighbors , the distance between them is at most @xmath124 . by the triangle inequality ( [ eq_triangleineq ] )",
    "we may add this distance to  ( [ eq:2 ] ) and get @xmath125    [ [ case-2b . ] ] case 2b .",
    "+ + + + + + + +    in the remaining case we assume that @xmath126 .",
    "+ this assumption may also be written as @xmath127 now we combine  ( [ eq:3 ] ) with the assumption of case 2 to get @xmath128 let @xmath129 be the total fractional opening of facilities in @xmath130 in the modified fractional solution @xmath80 .",
    "+ observe that  ( [ eq:4 ] ) together with the definition @xmath131 implies that the set @xmath132 is not empty .",
    "moreover it contains facilities whose opening variables @xmath133 sum up to @xmath134 .",
    "more precisely , inequality  ( [ eq:4 ] ) implies @xmath135 . hence @xmath136 we combine  ( [ eq:5 ] ) with the assumption of case 2 to conclude that the minimal distance from @xmath114 to a facility in @xmath137 is at least @xmath138 .",
    "hence @xmath139 recall that , by definition , @xmath140 .",
    "hence equality  ( [ eq:3 ] ) may be written as @xmath141 since , by the assumption that @xmath107 , we have @xmath142 , we may also write @xmath143 we may now combine  ( [ eq:7 ] ) with  ( [ eq:6 ] ) to get @xmath144 finally , we bound the distance form @xmath15 to @xmath114 by @xmath124 to get @xmath145 where the second inequality is an application of  ( [ eq:8 ] ) and  ( [ eq:5 ] ) .",
    "< 1.5em - 1.5em plus0em minus0.5em height0.75em width0.5em depth0.25em",
    "here we again state our algorithm ( cf .  section [ sec_contribution ] ) , but now we use the notation developed in the previous sections .    *",
    "algorithm @xmath146 * :    1 .",
    "solve the lp relaxation of the problem to obtain a solution @xmath55 .",
    "2 .   modify the fractional solution as described in section  [ subsection_details ] to obtain a complete solution @xmath80 .",
    "3 .   compute a greedy clustering for the solution @xmath80 , choosing as cluster centers unclustered clients minimizing @xmath147 .",
    "4 .   [ corelating ] for every cluster center @xmath15 , open one of its close facilities randomly with probabilities @xmath148 . 5 .   for each facility @xmath14 that is not a close facility of any cluster center , open it independently with probability @xmath149 .",
    "connect each client to an open facility that is closest to it .",
    "consider the binary vector @xmath150 encoding the facilities opened in steps 4 and 5 of algorithm @xmath146 . with the following lemma we give an upper bound on the expected distance from a client to the closest of the facilities opened by the algorithm within a certain subset of facilities .",
    "[ exp_distance_lemma ] given are a random vector @xmath150 produced by algorithm @xmath146 , a subset @xmath151 of facilities such that @xmath152 , and a client @xmath153 .",
    "then , the following holds : @xmath154 \\leq d(j , a)\\ ] ]    observe , that the opening of facilities from @xmath48 is either pairwise independent , or there exist disjoint subsets @xmath155 , which correspond to clusters created in step 3 of the algorithm , such that the opening of facilities in each @xmath156 is negatively correlated but facilities from different sets are uncorrelated .",
    "the correlation in these subsets is a result of step  [ corelating ] of the algorithm . in each such @xmath156",
    ", there is at most 1 facility opened , and the probability that one is opened equals @xmath157 .",
    "therefore , for the purpose of this proof , we may replace each @xmath156 by a new facility @xmath158 with distance to @xmath15 equal @xmath159 and fractional opening @xmath160 .",
    "after this replacement for each @xmath156 , we have a set of facilities that are opened independently .",
    "consider the facilities from @xmath48 in the order @xmath161 of nondecreasing distance from @xmath15 . since their opening is independent , the probability that @xmath162 counts as closest among the open facilities is @xmath163\\cdot pr[y_{i_2}=0]\\cdot \\ldots \\cdot pr[y_{i_{(l-1)}}=0 ] \\cdot pr[y_{i_l}=1 ] \\\\   & = & ( 1-\\overline{y}_{i_1})(1-\\overline{y}_{i_2})\\cdot \\ldots \\cdot ( 1-\\overline{y}_{i_{(l-1 ) } } ) \\cdot \\overline{y}_{i_l}.\\end{aligned}\\ ] ]",
    "the expected distance may be bounded as : @xmath164 & = & \\sum_{l=1}^{|a| } p_l c_{i_lj } \\\\ & = & \\sum_{l=1}^{|a| } \\left(\\pi_{o=1}^{l-1}(1-\\overline{y}_{i_o})\\right ) \\overline{y}_{i_l } c_{i_l , j } \\\\ & = & \\frac{\\sum_{l=1}^{|a| } \\left(\\pi_{o=1}^{l-1}(1-\\overline{y}_{i_o})\\right ) \\overline{y}_{i_l } c_{i_l , j } }          { \\sum_{l=1}^{|a| } \\left(\\pi_{o=1}^{l-1}(1-\\overline{y}_{i_o})\\right ) \\overline{y}_{i_l}}\\\\ & \\leq & \\frac{\\sum_{l=1}^{|a| } \\overline{y}_{i_l } c_{i_l , j } }          { \\sum_{l=1}^{|a| } \\overline{y}_{i_l } } \\\\ & = &   \\frac{\\sum_{i \\in a } \\overline{y}_{i_l } c_{i_l , j } }      { \\sum_{i \\in a } \\overline{y}_{i_l } } = d(j , a).\\end{aligned}\\ ] ] the second equality comes from the fact that , under the condition that @xmath165 , the sum of probabilities @xmath166 equals 1 .",
    "the inequality is a comparison of weighted arithmetical averages , where the first one has lower weights for bigger elements .",
    "< 1.5em - 1.5em plus0em minus0.5em height0.75em width0.5em depth0.25em    in the analysis of our algorithm we will also use the following result :    [ probability_lemma ] given are @xmath29 independent events that occur with probabilities @xmath167 respectively . the probability that at least one of these events occurs is at least equal to @xmath168 , where @xmath26 denotes the base of the natural logarithm .    let @xmath169 be defined as the only positive solution to the following equation . @xmath170",
    "an approximate value of this constant is @xmath171 . as we will observe in the proof of theorem  [ thm : main - theorem ] , equation  ( [ eq : gamma0 ] )",
    "appears naturally in the analysis of algorithm @xmath146 .",
    "[ thm : main - theorem ] algorithm @xmath172 produces a solution with expected cost + @xmath173 \\leq \\gamma_0 \\cdot f^ * + 1 + \\frac{2}{e^{\\gamma_0 } } \\cdot c^*$ ] .    the expected facility opening cost of the solution is + @xmath174 = \\sum_{i \\in \\mathcal{f}}{f_i \\overline{y}_i } \\gamma \\cdot \\sum_{i \\in \\mathcal{f}}{f_i y_i^ * } = \\gamma \\cdot f^*$ ] .    to bound the expected connection cost",
    "we show that for each client @xmath15 there is an open facility within a certain distance with a certain probability .",
    "if @xmath15 is a cluster center , one of its close facilities is open and the expected distance to this open facility is @xmath175 .",
    "if @xmath15 is not a cluster center , it first considers its close facilities ( see figure  [ fig : routing ] ) .",
    "if any of them is open , by lemma  [ exp_distance_lemma ] the expected distance to the closest open facility is at most @xmath176 .",
    "from lemma  [ probability_lemma ] , at least one close facility is open with probability @xmath177 .",
    "suppose none of the close facilities of @xmath15 is open , but at least one of its distant facilities is open .",
    "let @xmath178 denote the probability of this event .",
    "again by lemma  [ exp_distance_lemma ] , the expected distance to the closest facility is then at most @xmath179 .",
    "if neither any close nor any distant facility of client @xmath15 is open , then @xmath15 may connect itself to the facility serving its cluster center @xmath114 .",
    "again from lemma  [ probability_lemma ] , such an event happens with probability @xmath180 .",
    "we will now use the fact that if @xmath107 then , by lemma  [ lem : main - lemma ] and lemma  [ exp_distance_lemma ] , the expected distance from @xmath15 to the facility opened around @xmath114 is at most @xmath181 .    finally , we combine the probabilities of particular cases with the bounds on the expected connection for each of the cases to obtain the following upper bound on the expected total connection cost .    [ cols= \"",
    "> , < \" , ]     in the above calculation we used the following properties . in the first inequality we explored the fact that cluster centers were chosen greedily , which implies @xmath182 . for the last inequality",
    ", we used @xmath183 .",
    "it remains to observe that by setting @xmath184 ( see  ( [ eq : gamma0 ] ) ) we eliminate the last term in the connection cost bound , and we obtain @xmath185 \\leq ( 1 + \\frac{2}{e^{\\gamma_0 } } ) \\cdot c^ * \\leq 1.37374 \\cdot c^*$ ] .",
    "< 1.5em - 1.5em plus0em minus0.5em height0.75em width0.5em depth0.25em    .",
    "the solid line corresponds to regular instances with @xmath186 for all @xmath15 and it coincides with the approximability lower bound curve .",
    "the dashed line corresponds to instances with @xmath187 for all @xmath15 . for a particular choice of @xmath188",
    "we get a horizontal segment connecting those two curves ; for @xmath189 the segment becomes a single point .",
    "observe that for instances dominated by connection cost only a regular instance may be tight for the lower bound . ]",
    "the algorithm a1(@xmath169 ) was described as a procedure of rounding a particular fractional solution to the lp relaxation of the problem . in the presented analysis we compared the cost of the obtained solution with the cost of the starting fractional solution .",
    "if we appropriately scale the cost function in the lp relaxation before solving the relaxation , we easily obtain an algorithm with a bifactor approximation guaranty in a stronger sense .",
    "namely , we get a comparison of the produced solution with any feasible solution to the lp relaxation of the problem . such a stronger guarantee is , however , not necessary to construct the 1.5-approximation algorithm for the metric ufl problem , which is presented in the next section .",
    "the algorithm a1(@xmath188 ) with @xmath190 ( for a sufficiently small positive @xmath191 ) is essentially the algorithm of chudak and shmoys .",
    "observe that for regular instances , namely those with @xmath186 for every client @xmath15 , we do not need to set @xmath192 to eliminate the dependence of connection cost of the produced solution on the facility opening cost of the fractional solution .",
    "hence , for regular instances , we get a @xmath193-approximation algorithm for each choice of @xmath194 .",
    "in this section we will combine our algorithm with an earlier algorithm of jain et al . to obtain a 1.5-approximation algorithm for the metric ufl problem .    in 2002 jain , mahdian and saberi",
    "@xcite proposed a primal - dual approximation algorithm ( the jms algorithm ) . using a dual fitting approach they showed that it is a 1.61-approximation algorithm .",
    "later mahdian , ye and zhang  @xcite derived the following result .",
    "[ myz_bifactor ] the cost of a solution produced by the jms algorithm is at most @xmath195 , where @xmath3 and @xmath4 are facility and connection costs in an optimal solution to the linear relaxation of the problem .",
    "consider the solutions obtained with the a1(@xmath169 ) and jms algorithms .",
    "the cheaper of them is expected to have a cost at most @xmath196 times the cost of the optimal fractional solution .",
    "consider an algorithm a2 that does the following .",
    "with probability @xmath197 runs the jms algorithm and otherwise , with probability @xmath198 , runs the a1(@xmath169 ) algorithm .",
    "suppose that we are given an instance , and that @xmath3 and @xmath4 are facility and connection costs in an optimal solution to the linear relaxation of this instance .",
    "consider the expected cost of the solution produced by algorithm a2 for this instance .",
    "p \\cdot ( 1.11 \\cdot f^ * + 1.7764 \\cdot c^ * ) + ( 1-p ) \\cdot ( 1.67736 \\cdot f^ * + 1.37374 \\cdot c^ * )      = 1.4998 \\cdot f^ * + 1.4998 \\cdot c^ * < 1.5 * ( f^ * + c^ * ) \\leq 1.5 * opt .",
    "$ ] < 1.5em - 1.5em plus0em minus0.5em height0.75em width0.5em depth0.25em    instead of the jms algorithm we could take the algorithm of mahdian et al .",
    "@xcite , the myz(@xmath51 ) algorithm , that scales the facility costs by @xmath51 , runs the jms algorithms , scales back the facility costs and finally runs the greedy augmentation procedure . with the notation introduced in section  [ sub_greedy_aug ] , the myz(@xmath51 )",
    "algorithm is the @xmath200 algorithm .",
    "the myz(1.504 ) algorithm was proven  @xcite to be a 1.52-approximation algorithm for the metric ufl problem .",
    "we may change the value of @xmath51 in the original analysis to observe that myz(1.1 ) is a ( 1.2053,1.7058)-approximation algorithm .",
    "this algorithm combined with our a1(@xmath169 ) ( 1.67736,1.37374)-approximation algorithm gives a 1.4991-approximation algorithm for ufl .",
    "this shows how much improvement we obtain by using the scaling technique on the greedy algorithm s side .",
    "in the @xmath201-level facility location problem the clients need to be connected to open facilities on the first level , and each open facility except on the last , @xmath201-th level , needs to be connected to an open facility on the next level .",
    "aardal , chudak , and shmoys  @xcite gave a 3-approximation algorithm for the @xmath201-level problem with arbitrary @xmath201 .",
    "ageev , ye , and zhang  @xcite proposed a reduction of a @xmath201-level problem to a @xmath202-level and a @xmath96-level problem , which results in a recursive algorithm .",
    "this algorithm uses an approximation algorithm for the single level problem and has a better approximation ratio , but only for instances with small @xmath201 .",
    "using our new algorithm a1(@xmath169 ) instead of the jms algorithm within this framework , improves approximation for each level .",
    "in particular , in the limit as @xmath201 tends to @xmath203 , we get a 3.236-approximation which is the best possible for this construction .    by a slightly different method ,",
    "zhang  @xcite obtained a 1.77-approximation algorithm for the 2-level problem .",
    "for the 3-level and the 4-level version of the problem he obtained 2.523- and 2.81-approximation algorithms , by reducing to a problem with smaller number of levels . in the following section we will modify the algorithm by zhang for the 3-level problem , and use the new ( 1.67736,1.37374)-approximation algorithm for the single - level part , to obtain a 2.492-approximation , which improves on the previously best known approximation by zhang .",
    "note , that for @xmath204 the best known approximation factor is still due to aardal et al .",
    "@xcite .",
    "we will now present the ingredients of the 2.492-approximation algorithm .",
    "we start from an algorithm to solve the 2-level version .",
    "[ lem:3l1 ] the 2-level ufl problem may be approximated by a factor of @xmath205 in polynomial time for any given constant @xmath206 .",
    "zhang  @xcite also considered a scaling technique analogous to the one described in section  [ sub_greedy_aug ] , but applicable to the 2-level version of the problem .",
    "an effect of using this technique is analyzed in the following lemma .",
    "[ lem:3l2 ] for any given @xmath206 , if there is an @xmath207-approximation algorithm for the 2-level ufl problem , then we can get an approximation algorithm for the 2-level ufl problem with performance guarantee @xmath208 for any @xmath209 .",
    "he also uses the following reduction .",
    "[ lem:3l3 ] assume , that the 1-level and 2-level ufl problems have approximation algorithms with factors @xmath207 and @xmath210 , respectively , then the 3-level ufl problem may be approximated by factors @xmath211 .",
    "zhang  @xcite observed that the above three statements may be combined with the myz algorithm to improve the approximation ratio for the 3-level ufl problem . in the following theorem",
    "we show that we may use our new ( 1.6774,1.3738)-approximation algorithm for the 1-level ufl problem to get even better approximation for the 3-level variant .",
    "there is a 2.492-approximation algorithm for the 3-level ufl problem .",
    "we first use the algorithm from lemma  [ lem:3l1 ] , and the scaling technique from lemma  [ lem:3l2 ] , with @xmath212 , to obtain a @xmath213-approximation algorithm for the 2-level ufl problem",
    ".    then we use our @xmath214-approximation algorithm for the 1-level ufl problem with the scaling technique from lemma  [ lem : scaling ] , with @xmath215 , to obtain a @xmath216-approximation algorithm for the 1-level ufl problem .    finally , we use lemma  [ lem:3l3 ] to combine these two algorithms into a @xmath217-approximation algorithm for the 3-level ufl problem .",
    "< 1.5em - 1.5em plus0em minus0.5em height0.75em width0.5em depth0.25em",
    "in this section we discuss a different approach to clustering . we propose to modify the greedy clustering algorithm by choosing consecutive cluster centers randomly with uniform distribution .",
    "the output of such a process is obviously random , but we may still prove some statements about probabilities .",
    "a resulting clustering will be denoted by a function @xmath218 , which assigns to each client @xmath15 the center of its cluster @xmath219 .",
    "the following lemma states that the clustering @xmath220 obtained with the randomized clustering procedure is expected to be `` fair '' .",
    "[ random_clustering_lemma ] given a graph @xmath221 and assuming that a clustering @xmath220 was obtained by the above described random process , for every two distinct clients @xmath15 and @xmath114 , the probability that @xmath222 is equal the probability that @xmath223 .",
    "let @xmath224 denote the maximal ( over the possible random choices of the algorithm ) number of clusters that can be obtained from @xmath45 with the random clustering procedure .",
    "the proof will be by induction on @xmath224 . fix any @xmath225 such that @xmath15 is a neighbor of @xmath114 in @xmath45 ( if they are not neighbors , neither @xmath222 nor @xmath223 can occur ) .",
    "suppose @xmath226 , then @xmath227 = pr[g(j')=j ] = 1/|\\mathcal{c}|$ ] .",
    "let us now assume that @xmath228 .",
    "there are two possibilities , either one of @xmath229 will belong to the first cluster , or none of them will .",
    "consider the first case ( the first chosen cluster center is either @xmath15 or @xmath114 or one of their neighbors ) . if @xmath15 ( @xmath114 ) is chosen as a cluster center , then @xmath223 ( @xmath222 ) . since they are chosen with the same probability ,",
    "the contribution of the first case to the probability of @xmath223 is equal to the contribution to the probability of @xmath222 . if neither of them gets chosen as a cluster center but at least one belongs to the new cluster , then neither @xmath223 nor @xmath222 is possible .",
    "now consider the second case ( neither @xmath15 nor @xmath114 belongs to the first cluster ) .",
    "consider the graph @xmath230 obtained from @xmath45 by removing the first cluster .",
    "the random clustering proceeds like it has just started with the graph @xmath230 , but the maximal number of possible clusters is smaller : @xmath231 .",
    "therefore , by the inductive hypothesis , in a random clustering of @xmath230 the probability that @xmath223 is equal to the probability that @xmath222 .",
    "< 1.5em - 1.5em plus0em minus0.5em height0.75em width0.5em depth0.25em    if @xmath222 in a clustering @xmath220 of graph @xmath45 we will say that client @xmath114 _ offers support _ to client @xmath15 .",
    "the main idea behind the clustering algorithms for the ufl problem is that we may afford to serve each cluster center directly ( because they are never neighbors in @xmath45 ) and all the other clients are offered support from their cluster centers .",
    "a non - central client may either accept the support and connect itself via its cluster center ( that is what all non - central clients do in the algorithm of shmoys et al . ) , or it may try to get served locally , and if it fails , accept the support ( this is the way the chudak and shmoys algorithm works ) . in both those algorithms the probability that an offer of support is accepted is estimated to be constant .",
    "therefore , we may modify those algorithms to use the random clustering procedure and do the following analysis .    for any two clients @xmath15 and @xmath114 , the probability that @xmath15 accepts the support of @xmath114 is equal to the probability that @xmath114 accepts the support of @xmath15 .",
    "let @xmath14 be a facility on a shortest path from @xmath15 to @xmath114 .",
    "when we compute the expected connection cost of client @xmath15 , we observe that with certain probability @xmath232 it accepts the support of @xmath114 .",
    "in such a case it must pay for the route via @xmath14 and @xmath114 to the facility directly serving @xmath114 .",
    "we will now change the bookkeeping and say that in this situation @xmath15 is paying only for the part until facility @xmath14 , and the rest is paid by @xmath114 , but if @xmath15 would be supporting @xmath114 it would have to pay a part of @xmath114 s connection cost , which is the length of the path from @xmath14 via @xmath15 to the facility serving @xmath15 .",
    "we may think of this as each client having a bank account , and when it accepts support it makes a deposit , and when it offers support and the support is accepted , then it withdraws money to pay a part of the connection cost of the supported client . from lemma  [ random_clustering_lemma ] we know that for a client @xmath15 the probability that it will earn on @xmath114 is equal to the probability that it will lose on @xmath114 .",
    "therefore , if the deposited amount is equal to the withdrawal , the expected net cash flow is zero .",
    "the above analysis shows that randomizing the clustering phase of the known lp - rounding algorithms would not worsen their approximation ratios .",
    "although it does not make much sense to use a randomized algorithm if it has no better performance guarantee , the random clustering has an advantage of allowing the analysis to be more local and uniform .",
    "with the 1.52-approximation algorithm of mahdian et al .",
    "it was not clear to the authors if a better analysis of the algorithm could close the gap with the approximation lower bound of 1.463 by guha and khuller . in",
    "@xcite we have recently given a negative answer to this question by constructing instances that are hard for the myz algorithm .",
    "similarly , we now do not know if our new algorithm @xmath146 could be analyzed better to close the gap .",
    "construction of hard instances for our algorithm remains an open problem .",
    "the technique described in section  [ sub_greedy_aug ] enables us to move the bifactor approximation guarantee of an algorithm along the approximability lower bound of jain et al .",
    "( see figure  [ fig_contr ] ) towards higher facility opening costs .",
    "if we developed a technique to move the analysis in the opposite direction , together with our new algorithm , it would imply closing the approximability gap for the metric ufl problem .",
    "it seems that with such an approach we would have to face the difficulty of analyzing an algorithm that closes some of the previously opened facilities .",
    "the authors want to thank david shmoys , steven kelk , evangelos markakis and the anonymous referees of this submission as well as the referees of the earlier conference version of this paper @xcite for their advice and valuable remarks ."
  ],
  "abstract_text": [
    "<S> we obtain a 1.5-approximation algorithm for the metric uncapacitated facility location problem ( ufl ) , which improves on the previously best known 1.52-approximation algorithm by mahdian , ye and zhang . </S>",
    "<S> note , that the approximability lower bound by guha and khuller is 1.463 .. an algorithm is a _ </S>",
    "<S> ( @xmath0,@xmath1)-approximation algorithm _ if the solution it produces has total cost at most @xmath2 , where @xmath3 and @xmath4 are the facility and the connection cost of an optimal solution . our new algorithm , which is a modification of the @xmath5-approximation algorithm of chudak and shmoys , is a ( 1.6774,1.3738)-approximation algorithm for the ufl problem and is the first one that touches the approximability limit curve @xmath6 established by jain , mahdian and saberi . as a consequence , we obtain the first optimal approximation algorithm for instances dominated by connection costs . </S>",
    "<S> when combined with a ( 1.11,1.7764)-approximation algorithm proposed by jain et al . </S>",
    "<S> , and later analyzed by mahdian et al . , we obtain the overall approximation guarantee of 1.5 for the metric ufl problem . </S>",
    "<S> we also describe how to use our algorithm to improve the approximation ratio for the 3-level version of ufl .    * key words . </S>",
    "<S> * facility location , approximation algorithms , lp - rounding . </S>",
    "<S> * ams subject classifications . </S>",
    "<S> * 90b80 , 68w25 , 68w40 , 68w20 . </S>"
  ]
}
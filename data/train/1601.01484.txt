{
  "article_text": [
    "the goal of this paper is to connect two areas of logic : proof theory and automata theory , that deal with similar problems , using a different terminology .",
    "to do so , we first propose to unify the terminology , by extending the notions of _ introduction rule _ ,",
    "_ automaton _ , _ cut _ , and _ cut - elimination _ to arbitrary inference systems .",
    "an _ introduction rule _ is defined as any rule whose premises are smaller than its conclusion and an _ automaton _ as any inference system containing introduction rules only .",
    "provability in an automaton is obviously decidable .",
    "a _ cut _ is defined as any proof ending with a non - introduction rule , whose major premises are proved with a proof ending with introduction rules . we show that a cut - free proof contains introduction rules only .",
    "a system is said to have the _ cut - elimination property _ if every proof can be transformed into a cut - free proof .",
    "such a system is equivalent to an automaton .",
    "using this unified terminology , we then propose a general _ saturation _ method to prove the decidability of an inference system , by transforming it into a system that has the cut - elimination property , possibly adding extra rules .",
    "the outline of this method is the following .",
    "consider a proof containing a non - introduction rule and focus on the sub - proof ending with this rule @xmath0 assume it is possible to recursively eliminate the cuts in the proofs @xmath1 , ... ,",
    "@xmath2 , that is to transform them into proofs containing introduction rules only , hence ending with an introduction rule .",
    "we obtain a proof of the form @xmath3 we may moreover tag each premise @xmath4 , ... , @xmath5 of the non - introduction rule as _ major _ or _",
    "minor_. for instance , each elimination rule of natural deduction @xcite has one major premise and the cut rule of sequent calculus @xcite has two .",
    "if the major premises are @xmath4 , ... , @xmath6 and _ minor _ ones @xmath7 , the proof above can be decomposed as @xmath8 a proof of this form is called a _ cut _ and it must be reduced to another proof .",
    "the definition of the reduction is specific to each system under consideration . in several cases ,",
    "however , such a cut is reduced to a proof built with the proofs @xmath9 , ... , @xmath10 , ... , @xmath11 , ... ,",
    "@xmath12 , @xmath13 ... , @xmath14 and a derivable rule allowing to deduce the conclusion @xmath15 from the premises @xmath16 @xmath17 . adding such derivable rules in order to eliminate cuts",
    "is called a _ saturation _ procedure .    many cut - elimination proofs , typically the cut - elimination proofs for",
    "sequent calculus @xcite , do not proceed by eliminating cuts step by step , but by proving that a non - introduction rule is admissible in the system obtained by dropping this rule , that is , proving that if the premises @xmath18 of this rule are provable in the restricted system , then so is its conclusion @xmath15 .",
    "proceeding by induction on the structure of proofs of @xmath18 leads to consider cases where each major premise @xmath19 has a proof ending with an introduction rule , that is also proofs of the form @xmath20    in some cases , the saturation method succeeds showing that every proof can be transformed into a proof formed with introduction rules only .",
    "then , the inference system under consideration is equivalent , with respect to provability , to the automaton obtained by dropping all its non - introduction rules .",
    "this equivalence obviously ensures the decidability of provability in the inference system .",
    "in other cases , in particular when the inference system under consideration is undecidable , the saturation method succeeds only partially : typically some non - introduction rules can be eliminated but not all , or only a subsystem is proved to be equivalent to an automaton .",
    "this saturation method is illustrated with examples coming from both proof theory and automata theory : finite domain logic , alternating pushdown systems , and three fragments of constructive predicate logic , for which several formalizations are related : natural deduction , gentzen style sequent calculus , kleene style sequent calculus , and vorobev - hudelmaier - dyckhoff - negri style sequent calculus .",
    "the complexity of these provability problems , when they are decidable , is not discussed in this paper and is left for future work , for instance in the line of @xcite .    in the remainder of this paper ,",
    "the notions of introduction rule , automaton , and cut are defined in section [ secautomata ] .",
    "section [ seclabels ] discusses the case of finite state automata . in sections [ secdecidable ] and [ secpartial ] ,",
    "examples of cut - elimination results are presented . in the examples of section [ secdecidable ] ,",
    "the non - introduction rules can be completely eliminated transforming the inference systems under considerations into automata , while this elimination is only partially successful in the undecidable examples of section [ secpartial ] .",
    "the proofs , and some developments , are omitted from this extended abstract .",
    "they can be found in the long version of the paper https://who.rocq.inria.fr/gilles.dowek/publi/introlong.pdf .",
    "consider a set @xmath21 , whose elements typically are propositions , sequents , etc .",
    "let @xmath22 be the set of finite lists of elements of @xmath21 .",
    "an _ inference rule _ is a partial function from @xmath22 to @xmath21 .",
    "if @xmath23 is an inference rule and @xmath24 , we say that the conclusion @xmath15 is _ proved _ from the premises @xmath25 with the rule @xmath23 and we write @xmath26 some rules are equipped with an extra piece of information , tagging each premise @xmath27 , ... , @xmath28 as _ major _ or _",
    "minor_. an _ inference system _ is a set of inference rules .",
    "proof _ in an inference system is a finite tree labeled by elements of @xmath21 such that for each node labeled with @xmath15 and whose children are labeled with @xmath27 , ... ,",
    "@xmath28 , there exists an inference rule @xmath23 of the system such that @xmath26 a proof is a _ proof _ of @xmath15 if its root is labeled by @xmath15 .",
    "an element of @xmath21 is said to be _ provable _ , if it has a proof .",
    "consider a set @xmath21 and a well - founded order @xmath29 on @xmath21 .",
    "a rule @xmath23 is said to be an _ introduction _ rule with respect to this order , if whenever @xmath30 we have @xmath31 , ... , @xmath32 .",
    "pseudo - automaton _ is an inference system containing introduction rules only .    except in the system @xmath33 ( section [ secdychkoff ] ) , this order @xmath29 is always that induced by the size of the propositions and sequents .",
    "it is left implicit .",
    "[ defautomaton ] an inference system is said to be _",
    "finitely branching _",
    ", if for each conclusion @xmath15 , there is only a finite number of lists of premises @xmath34 , ... , @xmath35 such that @xmath15 can be proved from @xmath36 with a rule of the system .",
    "an _ automaton _ is a finitely branching pseudo - automaton .",
    "we define a general notion of cut , that applies to all inference systems considered in this paper .",
    "more specific notions of cut will be introduced later for some systems , and the general notion of cut defined here will be emphasized as _ general cut _ to avoid ambiguity .",
    "[ defgeneralcut ] a _ ( general ) cut _ is a proof of the form @xmath20 where @xmath37 are the major premises of the non - introduction rule .",
    "a proof _ contains a cut _ if one of its sub - proofs is a cut .",
    "a proof is _ cut - free _ if it contains no cut .",
    "an inference system _ has the cut - elimination property _ if every element that has a proof also has a cut - free proof .",
    "[ key ] a proof is cut - free if and only if it contains introduction rules only .",
    "if a proof contains introduction rules only , it is obviously cut - free .",
    "we prove the converse by induction over proof structure .",
    "consider a cut - free proof .",
    "let @xmath23 be the last rule of this proof and @xmath38 , ... , @xmath39 be the proofs of the premises of this rule .",
    "the proof has the form @xmath40 by induction hypothesis , the proofs @xmath38 , ... , @xmath39 contain introduction rules only . as the proof is cut - free , the rule @xmath23 must be an introduction rule .",
    "consider a finitely - branching inference system @xmath41 and the automaton @xmath42 formed with the introduction rules of @xmath41 . if @xmath41 has the cut - elimination property , then every element that has a proof in @xmath41 has a cut - free proof , that is a proof formed with introduction rules of @xmath41 only , that is a proof in @xmath43 .",
    "thus , @xmath41 and @xmath42 are equivalent with respect to provability .",
    "since @xmath42 is decidable , so is @xmath41 .",
    "in this section , we show that the usual notion of finite state automaton is a particular case of the notion of automaton introduced in definition [ defautomaton ] .    consider a finite state automaton @xmath42 .",
    "we define a language @xmath44 in predicate logic containing a constant @xmath45 ; for each symbol @xmath46 of the alphabet of @xmath42 , a unary function symbol , also written @xmath46 ; and for each state @xmath47 of @xmath42 a unary predicate symbol , also written @xmath47 .",
    "a closed term in @xmath44 has the form @xmath48 , where @xmath49 , ... , @xmath50 are function symbols . such a term is called a _ word _ , written @xmath51 .",
    "a closed atomic proposition has the form @xmath52 , where @xmath47 is a state and @xmath53 a word .",
    "we build an inference system that consists of , for each transition rule @xmath54 of @xmath55 , the introduction rule @xmath56 and , for each final state @xmath57 of @xmath55 , the introduction rule @xmath58 it is routine to check that a word @xmath53 is recognized by the automaton @xmath42 in a state @xmath59 if and only if the proposition @xmath60 has a proof in the corresponding system .",
    "in this section , we present two cut - elimination theorems , that permit to completely eliminate the non - introduction rules and prove , this way , the decidability of finite domain logic and of alternating pushdown systems , respectively .      we begin with a toy example , _ finite domain logic _ , motivated by its simplicity : we can prove a cut - elimination theorem , showing the system is equivalent to the automaton obtained by dropping its non - introduction rules .",
    "finite domain logic is a version of natural deduction tailored to prove the propositions that are valid in a given finite model @xmath61 .",
    "the differences with the usual natural deduction are the following : a proposition of the form @xmath62 is just an abbreviation for @xmath63 and negation has been pushed to atomic propositions using de morgan s laws ; the @xmath64-intro and the @xmath65-elim rules are replaced by enumeration rules , and an _ atom _ rule is added to prove closed atomic propositions and their negations valid in the underlying model .    if the model @xmath66 is formed with a domain @xmath67 and relations @xmath68 , ... , @xmath69 over this domain , we consider the language containing constants @xmath70 for the elements @xmath71 and predicate symbols @xmath72 for the relations @xmath73 .",
    "the _ finite domain logic _ of the model @xmath74 is defined by the inference system of figure [ deffdl ] , where the set @xmath75 contains , for each atomic proposition @xmath76 , either the proposition @xmath77 if @xmath78 is in @xmath79 , or the proposition @xmath80 , otherwise .    in this system ,",
    "the introduction rules are those presented in the first column : the axiom rule , the atom rule , and the rules @xmath81-intro , @xmath82-intro , @xmath83-intro , @xmath64-intro , and @xmath65-intro .",
    "the non - introduction rules are those presented in the second column .",
    "each rule has one major premise : the leftmost one .",
    "a cut is as in definition [ defgeneralcut ] .",
    "let @xmath84 be a closed proposition , the following are equivalent : ( 1 . ) the proposition @xmath84 has a proof , ( 2 . )",
    "the proposition @xmath84 is valid in @xmath66 , ( 3 . )",
    "the proposition @xmath84 has a cut - free proof , that is a proof formed with introduction rules only .",
    "therefore , provability in finite domain logic is decidable , as the provable propositions are recognized by the automaton obtained by dropping the non - introduction rules . since the introduction rules preserve context emptiness , the contexts can be ignored and the axiom rule can be dropped .",
    "this automaton could also be expressed in a more familiar way with the transition rules @xmath85      the second example , _ alternating pushdown systems _ , is still decidable @xcite , but a little bit more complex .",
    "indeed these systems , in general , need to be saturated  that is extended with derivable rules  in order to enjoy cut - elimination .",
    "consider a language @xmath44 containing a finite number of unary predicate symbols , a finite number of unary function symbols , and a constant @xmath45 .",
    "an _ alternating pushdown system _ is an inference system whose rules are like those presented in figure [ pushdown ] .",
    "the rules in the first column are introduction rules and those in the second column , the elimination and neutral rules , are not .",
    "elimination rules have one major premise , the leftmost one , and all the premises of a neutral rule are major .",
    "a cut is as in definition [ defgeneralcut ] .",
    "not all alternating pushdown systems enjoy the cut - elimination property .",
    "however , every alternating pushdown system has an extension with derivable rules that enjoys this property : each time we have a cut of the form @xmath20 we add a derivable rule allowing to deduce directly @xmath15 from @xmath86 , ... ,",
    "@xmath87 , ... , @xmath88 , ... ,",
    "@xmath89 , @xmath90 , ... , @xmath5 .",
    "this leads to the following saturation algorithm @xcite .",
    "given an alternating pushdown system ,    * if it contains an introduction rule @xmath91 and an elimination rule @xmath92 then we add the neutral rule + @xmath93 * if it contains introduction rules @xmath94 and a neutral rule @xmath95 then we add the introduction rule @xmath96 * if it contains introduction rules @xmath97 and a neutral rule @xmath95 then we add the introduction rule @xmath98    as there is only a finite number of possible rules , this procedure terminates .",
    "it is then routine to check that if a closed proposition has a proof in a saturated system , it has a cut - free proof @xcite , leading to the following result .",
    "provability of a closed proposition in an alternating pushdown system is decidable .",
    "consider the alternating pushdown system @xmath21 @xmath99 the system @xmath100 obtained by saturating the system @xmath21 contains the rules of the system @xmath21 and the following rules @xmath101 the automaton @xmath102 contain the rules * i1 * , * i2 * , * i3 * , * i4 * , * i5 * , * i6 * , * i7 * , * i8 * , * i9 * , * i10 * , * i11*.    the proof in the system @xmath21 @xmath103 reduces to the cut - free proof in the system @xmath102 @xmath104",
    "in this section , we focus on constructive predicate logic , leaving the case of classical predicate logic for future work . we start with natural deduction @xcite . as provability in predicate logic",
    "is undecidable , we can not expect to transform natural deduction into an automaton .",
    "but , as we shall see , saturation permits to transform first natural deduction into a gentzen style sequent calculus @xcite , then the latter into a kleene style sequent calculus @xcite , and then the latter into a vorobev - hudelmaier - dyckhoff - negri style sequent calculus @xcite .",
    "each time , a larger fragment of constructive predicate logic is proved decidable .",
    "note that each transformation proceeds in the same way : first , we identify some general cuts .",
    "then , like in the saturation procedure of section [ aps ] , we add some admissible rules to eliminate these cuts . finally , we prove a cut - elimination theorem showing that some non - introduction rules can be dropped .      in natural deduction ( figure [ natded ] ) ,",
    "the introduction rules are those presented in the first column , they are the axiom rule and the rules @xmath81-intro , @xmath82-intro , @xmath83-intro , @xmath105-intro , @xmath64-intro , and @xmath65-intro . the non - introduction rules are those presented in the second column , each of them has one major premise : the leftmost one .",
    "natural deduction has a specific notion of cut : a proof ending with a @xmath82-elim , @xmath83-elim , @xmath105-elim , @xmath64-elim , @xmath65-elim rule , whose major premise is proved with a proof ending with a @xmath82-intro , @xmath83-intro , @xmath105-intro , @xmath64-intro , @xmath65-intro rule , respectively .",
    "the only difference between this specific notion of cut and the general one ( definition [ defgeneralcut ] ) is that the general notion has one more form of cut : a proof built with an elimination rule whose major premise is proved with the axiom rule . for instance",
    "@xmath106 so proofs free of specific cuts can still contain general cuts of this form .    saturating the system , like in section [ aps ] , to eliminate the specific cuts , would add derivable rules such as @xmath107 but they are not needed , as they are admissible in cut - free natural deduction .",
    "the admissibility of some rules however are based on a substitution of proofs , that may create new cuts on smaller propositions , that need in turn to be eliminated . in other words ,",
    "the termination of the specific cut - elimination algorithm needs to be proved @xcite .    as general cuts with an axiom rule are not eliminated , this partial cut - elimination theorem is not sufficient to eliminate all elimination rules and to prove the decidability of constructive natural deduction , but it yields a weaker result : a ( specific-)cut - free proof ends with introduction rules , as long as the context of the proved sequent contains atomic propositions only . to formalize this result ,",
    "we introduce a modality @xmath108 $ ] and define a translation that freezes the non atomic left - hand parts of implications , @xmath109 \\rightarrow f(b)$ ] , if @xmath110 is not atomic , and @xmath111 , if @xmath110 is atomic , @xmath112 , etc . , and the converse function @xmath113 is defined in a trivial way .",
    "let @xmath42 be the pseudo - automaton formed with the introduction rules of constructive natural deduction , including the axiom rule , plus the introduction rule @xmath114 \\vdash b } { \\mbox{delay}}}\\ ] ]    [ mainnd ] let @xmath115 be a sequent such that @xmath116 contains atomic propositions only .",
    "if @xmath115 has a ( specific-)cut - free proof in constructive natural deduction , then @xmath117 has a proof in the pseudo - automaton @xmath42 and for each leaf @xmath118 proved with the delay rule , the sequent @xmath119 has a proof in constructive natural deduction .",
    "a first corollary of theorem [ mainnd ] is the decidability of the small fragment @xmath120 where the left - hand side of an implication is always atomic , that is no connective or quantifier has a negative occurrence .",
    "as the pseudo - automaton obtained this way is not finitely branching , we need , as well - known , to introduce meta - variables to prove this decidability result .",
    "a second corollary is that if @xmath110 is a proposition starting with @xmath121 connectors or quantifiers different from @xmath105 , then a ( specific-)cut - free proof of the sequent @xmath122 ends with @xmath123 successive introduction rules . for @xmath124",
    ", we obtain the well - known last rule property of constructive ( specific-)cut - free proofs . for a proposition @xmath110 of the form @xmath125",
    ", for instance , we obtain that a ( specific-)cut - free proof of @xmath126 ends with three introduction rules .",
    "thus , it has the form @xmath127 and @xmath128 itself ends with an introduction rule . as a consequence ,",
    "if the proposition @xmath129 has a proof , then either the proposition @xmath130 or the proposition @xmath131 has a proof , thus the proposition @xmath132 has a proof .",
    "this commutation of the universal quantifier with the disjunction is called a _ shocking equality _ @xcite .      to eliminate the general cuts of the form @xmath133 we could add an introduction rule of the form @xmath134 but",
    ", this saturation procedure would not terminate .",
    "a way to keep the number of rules finite is to add left introduction rules to decompose the complex hypotheses , before they are used by the axiom rule : the left rules of sequent calculus . however , this is still not sufficient to eliminate the elimination rules of constructive natural deduction .",
    "for instance , the sequent @xmath135 has a proof using elimination rules @xmath136 where @xmath137 , but none using introduction rules only .",
    "so , we need to add a contraction rule , to use an hypothesis several times @xmath138 to prove that the elimination rules of natural deduction can now be eliminated , we prove , using gentzen s theorem @xcite , that they are admissible in the system @xmath139 ( figure [ constrsequent ] ) , the gentzen style sequent calculus , obtained by dropping the elimination rules of constructive natural deduction . in this system , all the rules are introduction rules , except the contraction rule .",
    "the system @xmath139 does not allow to prove the decidability of any larger fragment of constructive predicate logic , but it is the basis of the two systems presented in the sections [ seckleene ] and [ secdychkoff ] .      in the system @xmath139 , the proof @xmath140 is a general cut and we may replace it by the application of the derivable rule @xmath141 which is a rule _  la _ kleene . the other general cuts yields similar derivable rules .",
    "but , as noticed by kleene , the derivable rules for the contradiction , the conjunction , the disjunction and the existential quantifier can be dropped , while that for the implication can be simplified to @xmath142 the rules @xmath105-left and @xmath64-left of the system @xmath139 , that are subsumed by the rules contr-@xmath105-left and contr-@xmath64-left , can be also dropped .",
    "there are also other general cuts , where the last rule is a contraction and the rule above is an introduction applied to another proposition , but these cuts can be eliminated without introducing any extra rule . in other words , after applying the contraction rule , we can focus on the contracted proposition @xcite .",
    "we get this way the system @xmath143 ( figure [ k ] ) . in this system ,",
    "all rules are introduction rules , except the rules contr-@xmath105-left and contr-@xmath144-left .",
    "the system @xmath143 plus the contraction rule is obviously sound and complete with respect to the system @xmath139 . to prove that the contraction rule can be eliminated from it , and hence the system @xmath143 also is sound and complete with respect to the system @xmath139 , we prove the admissibility of the contraction rule in the system @xmath143see the long version of the paper for the full proof .",
    "the system @xmath143 gives the decidability of a larger fragment of constructive predicate logic , where the implication and the universal quantifier have no negative occurrences .      in order to eliminate the contr-@xmath105-left rule",
    ", we consider the general cuts where a sequent @xmath145 is proved with a contr-@xmath105-left rule whose major premise @xmath146 is proved with an introduction rule , applied to the proposition @xmath110 .",
    "this leads to consider the various cases for @xmath110 , that is hypotheses of the form @xmath147 , @xmath148 , @xmath149 , @xmath150 , @xmath151 , @xmath152 , and @xmath153 .",
    "the case @xmath154 , atomic , needs to be considered because the premise @xmath146 may be proved with the axiom rule , but the case @xmath155 does not , because there is no right rule for the symbol @xmath156 .",
    "this enumeration of the various shapes of @xmath110 is the base of the sequent calculi in the style of vorobev , hudelmaier , dyckhoff , and negri @xcite .",
    "we obtain this way several types of general cuts that can be eliminated by introducing derivable rules .",
    "these rules can be simplified leading to the system @xmath33 ( figure [ d ] ) .",
    "the system @xmath33 plus the contr-@xmath105-left rule is obviously sound and complete with respect to the system @xmath143 . to prove that the contr-@xmath105-left rule can be eliminated , and hence the system @xmath33 also is sound and complete with respect to the system @xmath157 , we use a method similar to that of @xcite , and prove the admissibility of the contr-@xmath105-left rule  see the long version of the paper for the full proof .",
    "this system @xmath158 gives the decidability of a larger fragment of constructive predicate logic containing all connectives , shallow universal and existential quantifiers  that is quantifiers that occur under no implication at all  and negative existential quantifiers .",
    "this fragment contains the prenex fragment of constructive predicate logic , that itself contains constructive propositional logic .",
    "this work is supported by the anr - nsfc project locali ( nsfc 61161130530 and anr 11 is02 002 01 ) and the chinese national basic research program ( 973 ) grant no . 2014cb340302 .",
    "a. bouajjani , j. esparza , and o. maler , reachability analysis of pushdown automata : application to model - checking a. w. mazurkiewicz , j. winkowski ( eds . ) _ concurrency theory _ , lecture notes in computer science , 1243 , 1997 , 135 - 150 .",
    "r. dyckhoff and s. lengrand , ljq : a strongly focused calculus for intuitionistic logic , ( a. beckmann et al .",
    "_ computability in europe _ , lecture notes in computer science 3988 , springer , 2006 , 173 - 185"
  ],
  "abstract_text": [
    "<S> we present a method to prove the decidability of provability in several well - known inference systems . </S>",
    "<S> this method generalizes both cut - elimination and the construction of an automaton recognizing the provable propositions . </S>"
  ]
}
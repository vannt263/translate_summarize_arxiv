{
  "article_text": [
    "since 1974 , descriptive complexity characterizes computational complexity in terms of logical languages .",
    "fagin  @xcite first shown that the complexity class @xmath1 coincides with the set of problems expressible in second order existential ( @xmath2 ) logic .",
    "stockmeyer  @xcite extended fagin s result to the polynomial - time hierarchy ( @xmath3 ) characterized by second order logic .",
    "further researches revealed logical characterizations for various complexity classes  @xcite .",
    "immerman presented a lot of results on descriptive complexity in his diagram  @xcite whose fragment is shown in figure  [ pic1 ] .     to .,title=\"fig : \" ]   to .,title=\"fig : \" ]    medina and immerman  @xcite addressed the following question .",
    "what is it about a @xmath2-sentence that makes the expressed property @xmath1-complete ?",
    "they answered this question in part .",
    "namely , a necessary and sufficient syntactic condition is provided for a sentence to represent a @xmath1-complete problem on ordered structures .",
    "in addition , the problem is @xmath1-complete via first - order projections ( fops ) .",
    "the condition is expressed in some canonical form based on the @xmath4 problem .",
    "this canonical form provides a syntactic tool for showing completeness : if a sentence is of the form , then the problem defined by this sentence proves to be complete via fops .",
    "bonet and borges  @xcite generalized medina ",
    "immerman s canonical form in two directions .",
    "first , bonet ",
    "borges s canonical form works for various complexity classes on ordered structures , and not just @xmath1 .",
    "second , the form can be given in terms of any complete problem in the class , and not just @xmath4 in case of @xmath1 .",
    "however , all the above mentioned forms have a restricted application .",
    "no fops are known for the vast majority of complete problems .",
    "for example , in the complexity class @xmath1 , only up to fifty complete problems are known to be complete via fops  @xcite . moreover ,",
    "only five numerical complete problems among thousands of such ones are known to be complete via fops  @xcite .",
    "besides , these forms define complete problems merely on ordered structures , and no canonical form was known till now to define complete problems on unordered structures .",
    "as shown in figure  [ pic1 ] , there are complexity classes such as @xmath1-complete problems , @xmath5-complete problems , @xmath6-complete problems , and @xmath0 for which no logics were known till now . in addition , for the complexity classes of complete problems and complete problems which are not depicted in immerman s diagram , no logics were known as well . the purpose of our research is to develop logics for these classes .",
    "we will consider problems complete via turing reductions , and not just fops .",
    "a new canonical form will be presented to easily define any complete problem on ordered structures in the following complexity classes : @xmath7 , @xmath6 , @xmath5 , @xmath1 , and @xmath8 ( no matter whether it is complete via fops or not ) . in that way",
    ", we will completely answer the above mentioned question of medina and immerman .",
    "moreover , using the form , logics will be developed for complete problems on ordered structures in these complexity classes .",
    "we will show an evidence that there can not be any complete problem on aristotelian structures in @xmath6 , @xmath5 , @xmath1 , and @xmath8 .",
    "a new canonical form will be presented to define any complete problem on unordered non - aristotelian structures in the following complexity classes : @xmath5 , @xmath1 , and @xmath8 . using this form",
    ", logics will be developed for complete problems on unordered non - aristotelian structures in these complexity classes .",
    "furthermore , we will extend our approach beyond complete problems . by means of a very similar canonic form for defining problems in the complexity class @xmath0",
    ", a logic will be developed to capture @xmath0 which very likely contains no complete problem .",
    "we specify some of the notations and conventions used throughout this paper .",
    "we denote by @xmath9 the logarithm of @xmath10 to the base 2 . for a real number @xmath10 ,",
    "we denote by @xmath11 the greatest @xmath12 subject to @xmath13 .",
    "we denote by @xmath14 the prefix - free encoding  @xcite of a nonnegative integer  @xmath10 .",
    "the length of a string @xmath15 is denoted by @xmath16 . for strings @xmath17 and @xmath18 , we denote by @xmath19 their concatenation . for a string @xmath15 and a nonnegative integer @xmath10 ,",
    "we denote by @xmath20 the concatenation  @xmath21 ( if @xmath22 , then this concatenation is interpreted as the empty string ) . by @xmath23",
    "$ ] we denote the @xmath24-th bit of a nonempty binary string @xmath15 ( for definiteness , we will assume that numbering the bits of any nonempty binary string starts with 1 from left to right ) .",
    "for a natural number  @xmath10 , we denote by @xmath25 the length of @xmath10 represented in binary , i.e. @xmath26 .",
    "by @xmath27 we mean the function composition  @xmath28  .",
    "we use notations and definitions of finite model theory as stated in @xcite . for convenience and without loss of generality",
    ", we will consider vocabularies without constant symbols and without function symbols .",
    "so , a vocabulary is a finite set @xmath29 of relation symbols of specified arities .",
    "a structure is a tuple @xmath30 , where @xmath31 is a nonempty set , called the universe of @xmath32 , and each @xmath33 is a relation on @xmath32 such that @xmath34 , @xmath35 .",
    "a @xmath36-structure is ordered if one of the symbols of its vocabulary @xmath36 is @xmath37 , interpreted as a linear order on the universe .",
    "a finite @xmath36-structure is a @xmath36-structure @xmath38 whose universe @xmath31 is a finite set .",
    "we will assume that the universe of every finite @xmath36-structure is an initial segment @xmath39 of nonnegative integers , where @xmath40 .",
    "the notation @xmath41 denotes the cardinality of the universe of @xmath32 .",
    "only finite structures will be considered throughout this paper .",
    "therefore , we will omit the word ` finite ' , when referring to the structures in what follows .",
    "let us suppose that @xmath42 and @xmath43 are two @xmath36-structures .",
    "an isomorphism between @xmath32 and @xmath44 is a mapping @xmath45 that satisfies the following two conditions :    1 .",
    "@xmath46 is a bijection .",
    "2 .   for every relation symbol @xmath47 ,  @xmath35 , of arity @xmath48 and for every tuple @xmath49 of elements in @xmath31",
    ", we have @xmath50 if and only if @xmath51 .    by a model class we mean a set @xmath52 of @xmath36-structures of a fixed vocabulary @xmath36 that is closed under isomorphism , i.e. if @xmath53 and @xmath32 is isomorphic to @xmath44 , then @xmath54 as well .",
    "for a vocabulary @xmath36 , we by @xmath55 $ ] denote the model class of all @xmath36-structures .",
    "let @xmath56 denote a logic .",
    "for every vocabulary @xmath36 , the language @xmath57 is the recursive set of all well - formed sentences ( whose elements are called @xmath57-sentences ) with the symbols of @xmath36 and with the symbols predefined for the logic @xmath56 .",
    "for example , for first order ( @xmath58 ) logic , @xmath59 is the set of all first order sentences with the symbols of @xmath36 , numerical relational symbols : @xmath60 , logical connectives : @xmath61 , variables : @xmath62 with or without subscripts , quantifiers : @xmath63 , and brackets : @xmath64 $ ] .",
    "all the predefined symbols have the standard interpretations .",
    "also , for @xmath2 logic , @xmath65 denotes the set of all second order sentences of the form @xmath66 , where @xmath67 is a @xmath68-sentence .",
    "in addition , @xmath69 is a binary relation between @xmath57-sentences and @xmath36-structures , so that for each @xmath57-sentence @xmath70 , the set @xmath71 \\mid a \\models \\gamma\\}$ ] denoted by @xmath72 $ ] is closed under isomorphism .",
    "also , we say that a @xmath57-sentence @xmath70 defines a model class @xmath52 if @xmath73 $ ] .",
    "we call a @xmath57-sentence @xmath70 logically valid if @xmath55=\\mathrm{mod}[\\gamma]$ ] .",
    "we say that two @xmath57-sentences @xmath74 and @xmath70 are logically equivalent if @xmath75=\\mathrm{mod}[\\gamma]$ ] .",
    "by @xmath76 we denote a sentence @xmath70 such that @xmath77 occurs in @xmath70 as a subformula .",
    "then , @xmath78 $ ] denotes the sentence obtained by replacing each occurrence of @xmath77 by @xmath79 in @xmath70 .    in order to measure the computational complexity of problems on structures",
    ", we need to represent structures by binary strings to be used as inputs for turing machines .",
    "moreover , simple encodings can be used to represent any arbitrary objects ( integers , sentences , turing machines , etc . ) as binary strings .    for an object @xmath80",
    ", we will use @xmath81 to denote some binary representation of  @xmath80 .",
    "for example , if @xmath80 is a natural number , then @xmath81 denotes its usual binary representation .",
    "if @xmath80 is a sentence , then @xmath81 denotes the binary representation of gdel number of @xmath80 .",
    "if @xmath80 is a turing machine , then @xmath81 also denotes the binary representation of gdel number of @xmath80 .",
    "if @xmath80 is a @xmath36-structure , then @xmath81 denotes the binary encoding @xmath82 as stated in @xcite .",
    "we will characterize a model class of @xmath55 $ ] for some fixed vocabulary @xmath36 as a complexity theoretic problem .",
    "let @xmath56 be a logic , @xmath83 a complexity class , and @xmath36 a vocabulary .",
    "we say that @xmath56 captures @xmath83 on @xmath55 $ ] if the following two conditions are satisfied :    1 .   for every @xmath57-sentence @xmath70",
    ", the model class @xmath72 $ ] belongs to @xmath83 .",
    "2 .   for every model class @xmath84",
    "$ ] in @xmath83 , there exists a @xmath57-sentence @xmath70 that defines @xmath52 .",
    "also , we say that @xmath56 captures @xmath83 on all ( ordered ) structures if @xmath56 captures @xmath83 on @xmath55 $ ] , for every vocabulary @xmath36  ( containing @xmath37 ) .",
    "we need the following definition of oracle turing machines adapted for structures @xcite .",
    "an oracle turing machine is a turing machine with a two - way read only input tape , a two - way read - write storage tape , and a one - way write only oracle tape .",
    "oracle turing machines have special states : @xmath85 , @xmath86 , @xmath87 , and @xmath88 .",
    "the state @xmath85 is the accepting state .",
    "that is , a structure @xmath32 is accepted by a turing machine @xmath89 if and only if @xmath89 on the input @xmath90 halts in state @xmath85 .",
    "the state @xmath86 is the query state . in each state except @xmath86 the machine may write a symbol onto the oracle tape . in state",
    "@xmath86 the machine goes into state @xmath87 if the string written on the oracle tape is a member of the oracle set , otherwise it enters state @xmath88 . in moving from state @xmath86 to @xmath87 or @xmath88 no other action",
    "is taken except to erase the oracle tape . by @xmath91",
    "we denote the oracle turing machine @xmath89 equipped with an oracle for the set @xmath44 of some structures .",
    "for example , the string @xmath90 encoding a structure @xmath32 is written on the oracle tape when @xmath91 enters the query state @xmath86 . at the next step , @xmath91 goes into",
    "either @xmath87 if @xmath92 , or @xmath88 otherwise ; the oracle tape is ( magically ) erased .",
    "we also need the following definitions of turing machines with bounded resources .",
    "a turing machine @xmath89 is polynomial time clocked if the code of @xmath89 contains a natural number @xmath93 such that @xmath94 is an upper bound for the running time of @xmath89 on inputs of length @xmath95 .",
    "a turing machine @xmath89 is logarithmic space ( logspace ) bounded if the code of @xmath89 contains a natural number @xmath93 such that @xmath96 is an upper bound for the memory space of @xmath89 s storage tape on inputs of length @xmath95 .",
    "let we by @xmath83 mean some complexity class . for short , we will call an oracle turing machine @xmath83-specific if it is of the same type as the machines that usually realize turing reductions of problems in @xmath83 .",
    "so , in case of @xmath97 , by @xmath83-specific turing machines we mean polynomial time clocked oracle turing machines . in case of @xmath98 , by @xmath83-specific turing machines we mean logspace bounded oracle turing machines .",
    "let us recall the following definitions of turing reducibility and completeness",
    ". given a complexity class @xmath83 , for two sets @xmath32 and @xmath44 in @xmath83 , we say that @xmath32 is turing reducible to @xmath44 if there exists a @xmath83-specific turing machine @xmath91 to recognize the set @xmath32 . a set @xmath99 is called @xmath83-complete ( via turing reductions ) if @xmath100 is turing reducible to @xmath32 for all @xmath101 .",
    "in this section , let @xmath83 denote one of the following complexity classes : @xmath6 , @xmath5 , @xmath1 , or @xmath8",
    ". we will present a vocabulary @xmath36 such that the existence of a complete problem defined on the @xmath36-structures is unlikely .",
    "let @xmath102 be a fixed vocabulary that contains only the symbols of monadic predicates .",
    "we call such a vocabulary aristotelian  @xcite",
    ". let @xmath103 be an arbitrary structure .",
    "we also call such a structure aristotelian .",
    "let us consider in detail the binary encoding @xmath90 of an aristotelian structure @xmath32 .",
    "this encoding @xmath90 represents the concatenation of some binary strings : @xmath104 , where @xmath105 ; @xmath106 , @xmath107 .",
    "each string @xmath108 , @xmath107 , is defined as follows : either @xmath109=1 $ ] if @xmath110 , or @xmath109=0 $ ] otherwise , for every @xmath111 .",
    "let us show that any aristotelian @xmath36-structure @xmath32 can be encoded in a more condensed form as compared with the encoding @xmath112 .",
    "we write in lexicographic order the sequence @xmath113 of all binary strings in @xmath114 .",
    "let us introduce the following characteristic function @xmath115 for the @xmath36-structure @xmath32 : @xmath116w^a_2[i+1]\\ldots w^a_m[i+1]\\ ; \\\\ 0 & \\mbox{otherwise}.\\\\ \\end{cases}\\ ] ] then , we define a mapping @xmath117 \\to \\{0,1\\}^{*}$ ] as follows : @xmath118 where each @xmath119 , @xmath120 , is equal to @xmath121 .",
    "let us estimate the length of @xmath122 .",
    "note that @xmath123 , where @xmath105",
    ". therefore , the length of @xmath122 grows logarithmically in @xmath95 since @xmath124 is a constant , while the length of @xmath125 grows polynomially in @xmath95 .",
    "that is , @xmath122 encodes @xmath32 in a more condensed form as compared with @xmath125 .    note that any aristotelian @xmath36-structure @xmath32 can be also encoded as a unary string .",
    "we denote by @xmath126 the unary string @xmath127 , where @xmath122 is interpreted here as a number ( represented in binary ) .",
    "then , @xmath126 can be just considered as the unary encoding of @xmath32 . since @xmath128",
    ", we have @xmath129 , where @xmath105 .",
    "that is , the length of @xmath126 grows polynomially in @xmath95 since @xmath124 is a constant .",
    "we can unambiguously recover @xmath122 from @xmath126 as @xmath130 since @xmath122 always starts with 1 .",
    "however , we can not unambiguously recover @xmath32 from @xmath122 or @xmath126 .",
    "nevertheless , the function @xmath131 defines the isomorphism property between aristotelian structures , which is shown by the following lemma .",
    "[ lemma1 ] any two aristotelian structures @xmath32 and @xmath44 are isomorphic if and only if @xmath132 .",
    "let @xmath133 be an isomorphism between the structures @xmath32 and @xmath44 .",
    "note that the statement @xmath134 holds for any @xmath135 and @xmath136 .",
    "it follows that @xmath137 and , therefore , @xmath132 .",
    "suppose that @xmath132 .",
    "then , we have @xmath137",
    ". we will show that the equality @xmath137 implies an isomorphism between @xmath32 and @xmath44 .",
    "we denote by @xmath138 ( resp .",
    "@xmath139 ) the following linear order on @xmath31 ( resp .",
    "@xmath140 ) . for any @xmath141 ( resp .",
    "@xmath142 ) , we say that @xmath143 ( resp .",
    "@xmath144 ) if there exist natural numbers @xmath145 and @xmath146 such that one of the two conditions is satisfied :    1 .   @xmath147 and @xmath148 ( resp .",
    "@xmath149 ) .",
    "2 .   @xmath150 , @xmath148 ( resp .",
    "@xmath149 ) , and @xmath151 ( resp .",
    "@xmath152 ) .",
    "let us write in orders @xmath138 and @xmath139 the sequences @xmath153 and @xmath154 of all elements in @xmath31 and @xmath140 respectively , where @xmath105 ( note that @xmath155 since @xmath137 ) . using these sequences , we define a function @xmath156 as follows .",
    "for any @xmath135 , we have @xmath157 , where @xmath158 such that @xmath159 .",
    "note that the equality @xmath160 holds for any @xmath135 and @xmath136 .",
    "in other words , for every @xmath135 , we have @xmath161 if and only if @xmath162 , @xmath35 .",
    "that is , this bijection @xmath163 represents an isomorphism between @xmath32 and @xmath44 .",
    "this concludes the proof of the lemma .",
    "then , the following theorem holds .",
    "[ theorem1 ] let @xmath102 be a fixed aristotelian vocabulary . if there exists a complete model class of @xmath36-structures , then there exists a unary complete set",
    ".    let @xmath164 be some @xmath83-complete model class of aristotelian @xmath36-structures .",
    "let us consider the set @xmath165)[u = uenc(a ) \\wedge a \\in l]\\}$ ] .",
    "first , we will reduce @xmath164 to @xmath166 via a @xmath83-specific turing machine @xmath167 . given a @xmath36-structure @xmath32 ,",
    "this machine @xmath167 transforms the input @xmath90 into the binary string @xmath122 on the storage tape .",
    "then , @xmath167 rewrites @xmath122 in the unary encoding @xmath126 onto the oracle tape and enters state @xmath86 .",
    "next , if @xmath167 goes into state @xmath87 ( i.e. @xmath168 ) , then @xmath167 immediately moves to state @xmath85 ( i.e. @xmath167 accepts @xmath32 ) .",
    "otherwise , @xmath167 rejects @xmath32 .",
    "note that this reduction requires at most logarithmic space since @xmath169 grows logarithmically in @xmath41 .",
    "therefore , @xmath167 is indeed @xmath83-specific .",
    "second , we will show that @xmath166 belongs to the complexity class @xmath83 .",
    "let an arbitrary string @xmath170 be given .",
    "let us decide whether @xmath171 or not .",
    "we transform @xmath172 into the binary string @xmath173 .",
    "then , we verify in polynomial time whether @xmath15 is of the form @xmath174 or not , where @xmath175 .",
    "if this is not the case , then @xmath176 .",
    "otherwise , we construct a @xmath36-structure @xmath177 in the binary encoding @xmath125 by means of the following algorithm :    1 .",
    "[ step1 ] set @xmath178 , @xmath179 , @xmath180 , @xmath181 .",
    "[ step2 ] set the binary strings : @xmath182 .",
    "[ step3 ] if @xmath183 , then stop ( the structure @xmath32 is formed in the binary encoding @xmath184 ) .",
    "otherwise , go to step  [ step4 ] .",
    "[ step4 ] if @xmath185 , then set @xmath186 and go to step [ step3 ] .",
    "otherwise , go to step [ step5 ] .",
    "[ step5 ] for every @xmath187 , set @xmath188:=1 $ ] if @xmath189=1 $ ] . 6 .",
    "[ step6 ] set @xmath190 and @xmath191 .",
    "if @xmath192 , then set @xmath180 , @xmath186 and go to step [ step3 ] .",
    "otherwise , go to step [ step5 ] .",
    "since the set @xmath164 is closed under isomorphism , the string @xmath172 belongs to @xmath166 if and only if this structure @xmath32 is in @xmath164 .",
    "it is obvious that constructing the @xmath36-structure @xmath32 from the input @xmath172 takes polynomial time .",
    "hence , @xmath166 belongs to @xmath83 .",
    "thus , the set @xmath166 is complete .",
    "this concludes the proof of the theorem .    by theorem  [ theorem1 ] ,",
    "it is unlikely that there is a complete model class of aristotelian structures .",
    "for example , the existence of a @xmath1-complete unary language implies @xmath193 ( see @xcite ) .",
    "also , the existence of a @xmath6-complete sparse language under many - one logspace reduction implies @xmath194 ( see @xcite ) .",
    "therefore , we will consider complete problems on non - aristotelian structures in what follows .",
    "we will introduce a canonical form for @xmath83-complete problems on ordered structures .",
    "we denote by @xmath195 the vocabulary @xmath196 .",
    "we assume that first order logic is extended with the numerical predicate bit which is defined in  @xcite .",
    "let @xmath197 be a logic capturing @xmath83 on @xmath198 $ ] , and @xmath199 a distinguished sentence defining some @xmath83-complete model class . in this section ,",
    "we by @xmath83 mean one of the following complexity classes : @xmath7 , @xmath6 , @xmath5 , @xmath1 , or @xmath8 . for definiteness , we assume that @xmath200 , @xmath201 , @xmath202 , @xmath203 , and @xmath204 stand for the following logics : @xmath205 , @xmath206 , @xmath207 , @xmath2 , and @xmath208 respectively .",
    "we need to be able to construct sentences defining @xmath83-complete problems for various vocabularies containing @xmath37 , using an operator over @xmath199 .",
    "let @xmath209 be a fixed arbitrary vocabulary containing @xmath37 .",
    "we define the operator @xmath210 for mapping @xmath199 to a sentence as follows . if @xmath211 , then @xmath212 $ ] .",
    "if @xmath213 , then @xmath214 $ ] , where @xmath215 is a new variable ( we assume that @xmath215 does not occur anywhere in @xmath199 ) . for short ,",
    "let @xmath216 denote @xmath217 .",
    "let us show that the sentence @xmath216 defines a @xmath83-complete problem .",
    "we will reduce @xmath218 $ ] to @xmath219 $ ] . for this purpose",
    ", we introduce a specific turing machine @xmath220}$ ] that recognizes the model class @xmath218 $ ] as follows .",
    "let the binary string @xmath90 encoding some structure @xmath32 be written on the input tape of @xmath220}$ ] , and @xmath95 denote @xmath41 . at first , the machine @xmath220}$ ] computes @xmath95 as @xmath221 since the equality @xmath222 holds in case of the vocabulary @xmath195 .",
    "then , the machine @xmath220}$ ] rewrites the input string @xmath90 onto the query tape .",
    "next , the machine @xmath220}$ ] will transforms the @xmath195-structure @xmath32 into a @xmath223-structure @xmath44 such that @xmath224 , either @xmath225 if @xmath213 , or @xmath226 if @xmath211 ; @xmath227 . for this purpose , @xmath220}$ ]",
    "appends @xmath228 zeros to @xmath90 on the query tape , obtaining the string @xmath229 , where @xmath230 .",
    "note that @xmath15 encodes the structure @xmath44",
    "since the initial substring @xmath231 encodes the relation @xmath232 , and ( if any ) the other substrings @xmath233 , @xmath234 @xmath235 encode the relations @xmath236 respectively",
    ". then , @xmath220}$ ] enters the query state @xmath86 .",
    "if @xmath237 , then @xmath220}$ ] goes into state @xmath87 , otherwise it enters state @xmath88 . at the next step , @xmath220}$ ] moves to state @xmath85 from state @xmath87 ( i.e. @xmath220}$ ] accepts @xmath32 ) .",
    "otherwise , @xmath167 rejects @xmath32 .",
    "it is obvious that @xmath220}$ ] realizes a logspace reduction from @xmath218 $ ] to @xmath219 $ ] since @xmath32 is a model of @xmath199 if and only if @xmath44 is a model of @xmath216 .",
    "therefore , @xmath219 $ ] is @xmath83-complete as well as @xmath218 $ ] .",
    "thus , the sentence @xmath216 indeed defines some @xmath83-complete problem .    with each @xmath238-sentence @xmath70 and with each @xmath83-specific turing machine @xmath239}$ ] , we associate the following set of @xmath223-structures : @xmath240}}\\triangleq\\{\\:a\\in \\mathrm{struc}[\\tau _ { < } ] \\mid & \\!\\!\\!\\!\\ ! ( \\forall b \\in \\mathrm{struc}[\\tau _ { < } ] )",
    "\\textrm{[}\\:\\|b\\| > \\ell^{(3)}(|\\langle a\\rangle|)\\ , \\vee\\\\ & \\!\\!\\!\\!\\ !",
    "( t^\\mathrm{mod[\\gamma]}\\ \\textrm{accepts}\\ \\langle b\\rangle \\leftrightarrow b \\models \\upsilon_{\\tau_{<}})\\:\\textrm{]}\\:\\}. \\end{array}\\ ] ]    the set @xmath241}}$ ] has some interesting properties .",
    "note that if the condition `` @xmath239}$ ] accepts @xmath242  @xmath243  @xmath244 '' is satisfied for all @xmath245 $ ] , then @xmath239}$ ] is a turing reduction from @xmath219 $ ] to @xmath72 $ ] . in this case ,",
    "@xmath72 $ ] is a @xmath83-complete model class , and @xmath241}}=\\mathrm{struc}[\\tau_{<}]$ ] . if this is not the case , then @xmath241}}$ ] is finite",
    ". let us show how to find a @xmath246-sentence that defines the model class @xmath241}}$ ] .",
    "the complexity class @xmath247 $ ] consists of all problems decidable in logarithmic time in the input length @xmath95 .",
    "for logarithmic time , an appropriate model of computation is random access machines which can directly access any memory cell by means of indices .",
    "we have the following theorem .",
    "[ theorem2 ] @xmath241 } } \\in \\mathrm{dtime}[\\log n]$ ] .",
    "let us use a random access machine to decide whether @xmath248}}$ ] or not , given a structure @xmath32 .",
    "as stated in  @xcite , in complexity theory , @xmath95 usually denotes the size of the input .",
    "however , in finite model theory , @xmath95 denotes the cardinality of the universe . in order to clear up confusion ,",
    "let @xmath249 denote @xmath221 .",
    "first , we need to compute the number @xmath250 . for this purpose , we compute @xmath249 , using a binary search  @xcite . since we use a random access machine , this can be done in time @xmath251 .",
    "then , we count the number @xmath252 of bits in @xmath249 represented in binary . likewise , we count the number @xmath253 of bits in @xmath252 and then the number @xmath250 of bits in @xmath253 .",
    "it is obvious that the total time necessary for computing @xmath250 is @xmath254 .",
    "second , we enumerate all structures @xmath245 $ ] such that @xmath255 . since @xmath256 , the value @xmath257 is bounded above by @xmath258 , where @xmath259 is a polynomial dependent on the vocabulary @xmath223 .",
    "therefore , this enumeration takes time @xmath260 .",
    "then , for each structure @xmath44 of the enumeration , we need to verify the following condition : @xmath261}\\ \\textrm{accepts}\\ \\langle b\\rangle\\ \\leftrightarrow\\ b \\models \\upsilon_{\\tau_{<}}.\\label{eq1}\\ ] ]    if condition   is not satisfied for some structure @xmath44 of the enumeration , then the input structure @xmath32 does not belong to @xmath241}}$ ] .",
    "otherwise , @xmath262}}$ ] . now , let us estimate the running time for verifying condition  .",
    "we can decide whether `` @xmath244 '' for one structure @xmath44 in time @xmath263 , where @xmath264 is a polynomial .",
    "this follows from the fact that any model - checking problem in @xmath83 is decidable at most in exponential time . in a similar manner",
    ", the verification of `` @xmath239}$ ] accepts @xmath242 '' takes time @xmath265 , where @xmath266 is a polynomial .",
    "this follows from the fact that a simulation of running @xmath239}$ ] together with a simulation of oracle queries to @xmath72 $ ] requires at most exponential time as well .",
    "therefore , the verification of   takes time @xmath267 , or , in short , @xmath268 , where either @xmath269 in case of @xmath270 , or @xmath271 otherwise .",
    "consequently , the total time to verify   for all structures @xmath44 of the enumeration is @xmath272 , or , in short , @xmath273 , where @xmath274 .",
    "note that @xmath275 for any polynomial @xmath276",
    ". then , this time can be approximately estimated at most as @xmath277 .",
    "thus , the overall running time consists of the time for computing @xmath250 and of the time for verifying   on all structures @xmath44 of the enumeration .",
    "these times are both estimated as @xmath277 .",
    "therefore , so is the overall running time .",
    "this concludes the proof of the theorem .",
    "[ corollary3 ] given a @xmath238-sentence @xmath70 and a @xmath83-specific turing machine @xmath239}$ ] , one can construct a @xmath246-sentence that defines @xmath241}}$ ] .    by theorem  [ theorem2 ]",
    ", we can use a random access machine @xmath166 to recognize @xmath241}}$ ] , where @xmath166 runs in time @xmath278 .",
    "then , one can construct the sentence from @xmath166 as shown in @xcite , provided that first order logic is extended with the numerical predicate bit .",
    "then , by @xmath279}}$ ] we denote the constructed @xmath246-sentence defining the model class @xmath241}}$ ] .",
    "this @xmath279}}$ ] characterizes the corresponding turing machine @xmath239}$ ] in two different ways .",
    "first , @xmath239}$ ] is a turing reduction from @xmath219 $ ] to @xmath72 $ ] if and only if @xmath279}}$ ] is logically valid .",
    "second , @xmath239}$ ] does not realize any turing reduction from @xmath219 $ ] to @xmath72 $ ] if and only if @xmath280}}]$ ] is finite .",
    "we call the @xmath246-sentence @xmath279}}$ ] the characteristic sentence for the pair @xmath281})$ ] .",
    "the following theorem holds .",
    "[ theorem4 ] let @xmath197 be a logic capturing a complexity class @xmath83 on @xmath282 $ ] , and @xmath283 $ ] a model class .",
    "then , @xmath284 is @xmath83-complete if and only if there exists a @xmath238-sentence @xmath74 such that @xmath75=\\pi$ ] and @xmath74 is of the form @xmath285 } } \\wedge \\gamma ) \\vee ( \\neg\\gamma_{\\gamma , t^\\mathrm{mod[\\gamma ] } } \\wedge \\upsilon_{\\tau_{<}})\\label{eq2}\\ ] ] where @xmath70 is a @xmath238-sentence ; @xmath239}$ ] a @xmath83-specific turing machine ; @xmath279}}$ ] the characteristic sentence for @xmath281})$ ] .",
    "for short , we denote the form   by @xmath286}}$ ] .",
    "first , we will prove that @xmath286}}$ ] defines a @xmath83-complete problem for any pair @xmath281})$ ] .",
    "let @xmath239}$ ] be a turing reduction from @xmath219 $ ] to @xmath72 $ ] .",
    "then , @xmath279}}$ ] is logically valid . in this case",
    ", the @xmath238-sentence @xmath286}}$ ] is logically equivalent to @xmath70 , and @xmath70 defines a @xmath83-complete problem .",
    "therefore , @xmath286}}$ ] defines the same @xmath83-complete problem as well .",
    "now , let @xmath239}$ ] be not a turing reduction from @xmath219 $ ] to @xmath72 $ ] .",
    "then , @xmath280}}]$ ] is finite , and @xmath287}}]$ ] is cofinite .",
    "therefore , the model class @xmath288}}]$ ] differs from the model class @xmath219 $ ] only in a finite set of structures , i.e. @xmath288 } } ] \\setminus \\mathrm{mod}[\\upsilon_{\\tau_{<}}]$ ] and @xmath219 \\setminus \\mathrm{mod}[\\phi_{\\gamma , t^\\mathrm{mod[\\gamma]}}]$ ] are both finite .",
    "hence , @xmath288}}]$ ] is complete .",
    "consequently , @xmath286}}$ ] defines a @xmath83-complete problem in this case as well .",
    "second , we will prove that any @xmath83-complete problem can be represented by means of the form @xmath286}}$ ] .",
    "let @xmath70 be a @xmath238-sentence defining an arbitrary @xmath83-complete problem , and @xmath239}$ ] a @xmath83-specific turing machine realizing a turing reduction from @xmath219 $ ] to @xmath72 $ ] .",
    "then , @xmath279}}$ ] is logically valid . in this case",
    ", the @xmath238-sentence @xmath70 is logically equivalent to the sentence @xmath286}}$ ] . since @xmath70 defines a complete problem , so does @xmath286}}$ ] .",
    "this concludes the proof of the theorem .",
    "thus , the form can serve as a canonical form providing a syntactic tool for showing completeness : if a problem on ordered structures in @xmath83 is defined by a sentence of the form , then the problem proves to be complete via turing reductions .",
    "we will introduce a canonical form for @xmath83-complete problems on unordered non - aristotelian structures .",
    "we denote by @xmath289 the vocabulary @xmath290 . in this section ,",
    "we by @xmath83 mean one of the following complexity classes : @xmath5 , @xmath1 , or @xmath8 .",
    "let @xmath197 be a logic capturing @xmath83 on @xmath291 $ ] .",
    "for definiteness , we assume that @xmath202 , @xmath203 , and @xmath204 stand for the following logics : @xmath207 , @xmath2 , and @xmath208 respectively .",
    "let @xmath292 be a distinguished @xmath293-sentence defining some @xmath83-complete model class .",
    "we need to be able to construct sentences defining @xmath83-complete problems for various non - aristotelian vocabularies , using an operator over @xmath292 .",
    "let @xmath294 be a fixed arbitrary non - aristotelian vocabulary .",
    "we define the operator @xmath295 for mapping @xmath292 to a @xmath296-sentence as follows .",
    "we find the least number @xmath297 which is subject to @xmath298 and @xmath299 .",
    "if @xmath300 , then @xmath301 $ ] .",
    "if @xmath302 , then @xmath303 $ ] , where @xmath304 is a new variable ( we assume that @xmath304 does not occur anywhere in @xmath292 ) . for short ,",
    "let @xmath305 denote @xmath306 .",
    "let us show that the sentence @xmath307 defines a @xmath83-complete problem .",
    "we can easily reduce @xmath308 $ ] to @xmath309 $ ] in the following way .",
    "let @xmath32 be an arbitrary @xmath289-structure .",
    "then , we take a @xmath36-structure @xmath44 such that @xmath224 , either @xmath310 if @xmath300 , or @xmath311 if @xmath312 ; @xmath313 .",
    "note that @xmath32 is a model of @xmath292 if and only if @xmath44 is a model of @xmath305 .",
    "it is obvious that @xmath309 $ ] is @xmath83-complete as well as @xmath308 $ ] .",
    "thus , the sentence @xmath307 indeed defines some @xmath83-complete problem .    with each @xmath296-sentence @xmath70 and with each @xmath83-specific turing machine @xmath239}$ ] , we associate the following set of @xmath36-structures : @xmath314}}\\triangleq\\{\\:a\\in \\mathrm{struc}[\\tau ] \\mid & \\!\\!\\!\\!\\ ! ( \\forall b \\in \\mathrm{struc}[\\tau ] )",
    "\\ell^{(2)}(|\\langle a\\rangle|)\\ , \\vee\\\\ & \\!\\!\\!\\!\\ !      ( t^\\mathrm{mod[\\gamma]}\\ \\textrm{accepts}\\ \\langle b\\rangle \\leftrightarrow b \\models \\upsilon_\\tau)\\:\\textrm{]}\\:\\}. \\end{array}\\ ] ]    like @xmath241}}$ ] , the set @xmath315}}$ ] has similar properties .",
    "note that if the condition `` @xmath239}$ ] accepts @xmath242  @xmath243  @xmath316 '' is satisfied for all @xmath317 $ ] , then @xmath239}$ ] is a turing reduction from @xmath309 $ ] to @xmath72 $ ] . in this case ,",
    "@xmath72 $ ] is a @xmath83-complete model class , and @xmath315}}=\\mathrm{struc}[\\tau]$ ] .",
    "if this is not the case , then @xmath315}}$ ] is finite .",
    "let us show how to find a @xmath296-sentence that defines the model class @xmath315}}$ ] .",
    "the complexity class @xmath318 $ ] consists of all problems decidable in linear time in the input size @xmath95 .",
    "the following theorem holds .",
    "[ theorem5 ] @xmath315 } } \\in \\mathrm{dtime}[n]$ ] .",
    "it is similar to the proof of theorem  [ theorem2 ] in many respects .",
    "let us decide in linear time whether @xmath319}}$ ] or not , given a structure @xmath32 .",
    "let @xmath249 denote  @xmath221 .",
    "first , we need to compute the number @xmath253 .",
    "suppose that we use a usual turing machine rather than a random access machine . in this case , it is obvious that the time necessary for computing @xmath253 is @xmath320 .",
    "second , we enumerate all structures @xmath317 $ ] such that @xmath321 . since @xmath256 , the value @xmath257 is bounded above by @xmath322 , where @xmath259 is a polynomial dependent on the vocabulary @xmath36 .",
    "therefore , this enumeration takes time @xmath323 .",
    "then , for each structure @xmath44 of the enumeration , we need to verify the following condition : @xmath261}\\ \\textrm{accepts}\\ \\langle b\\rangle\\ \\leftrightarrow\\ b \\models \\upsilon_\\tau.\\label{eq3}\\ ] ]    if condition   is not satisfied for some structure @xmath44 of the enumeration , then the input structure @xmath32 does not belong to @xmath315}}$ ] .",
    "otherwise , @xmath324}}$ ] .",
    "now , let us estimate the running time for verifying condition  .",
    "we can decide whether `` @xmath325 '' for one structure @xmath44 in time @xmath326 , where @xmath264 is a polynomial .",
    "this follows from the fact that any model - checking problem in @xmath83 is decidable at most in exponential time . in a similar manner",
    ", the verification of `` @xmath239}$ ] accepts @xmath242 '' takes time @xmath327 , where @xmath266 is a polynomial .",
    "this follows from the fact that a simulation of running @xmath239}$ ] together with a simulation of oracle queries to @xmath72 $ ] requires at most exponential time as well .",
    "therefore , the verification of   takes time @xmath328 , or , in short , @xmath329 , where either @xmath269 in case of @xmath270 , or @xmath271 otherwise .",
    "consequently , the total time to verify   for all structures @xmath44 of the enumeration is @xmath330 , or , in short , @xmath331 , where @xmath274 .",
    "note that @xmath332 for any polynomial @xmath276",
    ". then , this time can be approximately estimated at most as @xmath320 .",
    "thus , the overall running time consists of the time for computing @xmath253 and of the time for verifying   on all structures @xmath44 of the enumeration .",
    "the both of these times are estimated as @xmath320 .",
    "therefore , so is the overall running time .",
    "this concludes the proof of the theorem .",
    "[ corollary6 ] given a @xmath296-sentence @xmath70 and a @xmath83-specific turing machine @xmath239}$ ] , one can construct a @xmath296-sentence that defines @xmath315}}$ ] .    by fagin s theorem  @xcite , in case of @xmath333 , we can construct a ntence to define the model class @xmath315}}$ ] since @xmath315}}\\in\\mathrm{dtime}[n]$ ] . in case of @xmath334 , we can use the same @xmath65-sentence since @xmath2 is a fragment of @xmath208 . in case of @xmath335",
    ", we can at first construct a @xmath65-sentence to define the model class @xmath55\\setminus s_{\\gamma , t^\\mathrm{mod[\\gamma]}}$ ] since @xmath55\\setminus s_{\\gamma , t^\\mathrm{mod[\\gamma]}}\\in\\mathrm{dtime}[n]$ ] as well as @xmath315}}\\in\\mathrm{dtime}[n]$ ] .",
    "then , the @xmath336-sentence defining @xmath315}}$ ] is obtained by logical negation of this @xmath65-sentence .",
    "then , by @xmath337}}$ ] we denote the constructed @xmath296-sentence defining the model class @xmath315}}$ ] .",
    "this @xmath337}}$ ] characterizes the corresponding turing machine @xmath239}$ ] in two different ways .",
    "first , @xmath239}$ ] is a turing reduction from @xmath309 $ ] to @xmath72 $ ] if and only if @xmath337}}$ ] is logically valid .",
    "second , @xmath239}$ ] does not realize any turing reduction from @xmath309 $ ] to @xmath72 $ ] if and only if @xmath338}}]$ ] is finite .",
    "we call the sentence @xmath337}}$ ] the characteristic sentence for the pair @xmath281})$ ] .    similarly , by @xmath339}}$ ]",
    "we denote a @xmath296-sentence that defines the model class @xmath55\\setminus s_{\\gamma , t^\\mathrm{mod[\\gamma]}}$ ] . given a @xmath296-sentence @xmath70 and a @xmath83-specific turing machine @xmath239}$ ] , this @xmath339}}$ ] can be also constructed since @xmath55\\setminus s_{\\gamma , t^\\mathrm{mod[\\gamma]}}\\in\\mathrm{dtime}[n]$ ] as well as @xmath315}}\\in\\mathrm{dtime}[n]$ ] .",
    "note that @xmath339}}$ ] is logically equivalent to @xmath340}}$ ] .",
    "however , we can not directly use @xmath340}}$ ] to construct a canonical form since @xmath340}}$ ] is not a sentence in case of @xmath341 . therefore",
    ", we will use @xmath339}}$ ] instead .",
    "we call the sentence @xmath339}}$ ] the complementary sentence for @xmath342}}$ ]",
    ". then , the following theorem holds .",
    "[ theorem7 ] let @xmath197 be a logic capturing a complexity class @xmath83 on @xmath55 $ ] , and @xmath343 $ ] a model class . then",
    ", @xmath284 is @xmath83-complete if and only if there exists a @xmath296-sentence @xmath74 such that @xmath75=\\pi$ ] and @xmath74 is of the form @xmath344 } } \\wedge \\gamma ) \\vee ( \\overline\\theta_{\\gamma , t^\\mathrm{mod[\\gamma ] } } \\wedge \\upsilon_\\tau)\\label{eq4}\\ ] ] where @xmath70 is a @xmath296-sentence ; @xmath239}$ ] a @xmath83-specific turing machine ; @xmath337}}$ ] the characteristic sentence for the pair @xmath281})$ ] ; @xmath339}}$ ] the complementary sentence for @xmath342}}$ ] .",
    "for short , we denote the form   by @xmath286}}$ ] .",
    "first , we will prove that @xmath286}}$ ] defines a @xmath83-complete problem for any pair @xmath281})$ ] .",
    "let @xmath239}$ ] be a turing reduction from @xmath309 $ ] to @xmath72 $ ] .",
    "then , @xmath337}}$ ] is logically valid . in this case",
    ", the sentence @xmath286}}$ ] is logically equivalent to @xmath70 , and @xmath70 defines a @xmath83-complete problem .",
    "therefore , @xmath286}}$ ] defines the same @xmath83-complete problem as well .",
    "now , let @xmath239}$ ] be not a turing reduction from @xmath309 $ ] to @xmath72 $ ] .",
    "then , @xmath338}}]$ ] is finite , and @xmath345}}]$ ] is cofinite .",
    "therefore , the model class @xmath288}}]$ ] differs from the model class @xmath309 $ ] only in a finite set of structures , i.e. @xmath288 } } ] \\setminus \\mathrm{mod}[\\upsilon_\\tau]$ ] and @xmath309 \\setminus \\mathrm{mod}[\\phi_{\\gamma , t^\\mathrm{mod[\\gamma]}}]$ ] are both finite .",
    "hence , @xmath288}}]$ ] is complete .",
    "consequently , @xmath286}}$ ] defines a @xmath83-complete problem in this case as well .",
    "second , we will prove that any @xmath83-complete problem can be represented by means of the form @xmath286}}$ ] .",
    "let @xmath70 be a @xmath296-sentence defining an arbitrary @xmath83-complete problem , and @xmath239}$ ] a @xmath83-specific turing machine realizing a turing reduction from @xmath309 $ ] to @xmath72 $ ] .",
    "then , @xmath337}}$ ] is logically valid . in this case",
    ", the @xmath296-sentence @xmath70 is logically equivalent to the sentence @xmath286}}$ ] . since @xmath70 defines a complete problem , so does @xmath286}}$ ] .",
    "this concludes the proof of the theorem .",
    "thus , the form can serve as a canonical form providing a syntactic tool for showing completeness : if a problem on unordered structures in @xmath83 is defined by a sentence of the form , then the problem proves to be complete via turing reductions .",
    "at first , we will consider ordered structures .",
    "let an arbitrary vocabulary @xmath223 containing @xmath37 be given .",
    "let us address the following question .",
    "can one recursively enumerate all tences that define complete problems on @xmath282 $ ] , where @xmath83 denotes one of the following complexity classes : @xmath7 , @xmath6 , @xmath5 , @xmath1 , or @xmath8 ?",
    "we will answer this question in the negative .",
    "we will use notions of context - free languages  @xcite , and exploit them in a similar manner as in @xcite .",
    "let @xmath346 be a fixed alphabet containing at least two symbols .",
    "by @xmath347 and @xmath348 we mean a context - free grammar and the context - free language defined by this grammar respectively .",
    "we assume that there can not be any finite lete set .",
    "suppose that @xmath349 is a recursive enumeration of all tences defining @xmath83-complete problems . with every context - free grammar @xmath347 with the terminal alphabet @xmath346 , we associate the following set : @xmath350 \\mid & \\!\\!\\!\\!\\ !",
    "( \\forall w \\in \\sigma^ { * } ) \\textrm{[}\\,|w| >",
    "\\ell^{(3)}(|\\langle a\\rangle|)\\ , \\vee\\ , w\\in l(g ) \\textrm{]}\\:\\}. \\end{array}\\ ] ]    since the decision problem of @xmath351 requires at most polynomial time , we have @xmath352 $ ] by analogy with theorem  [ theorem2 ] . then , there is a tence @xmath353 that defines @xmath354 .",
    "note that if @xmath355 , then @xmath353 is logically valid . otherwise , the set @xmath356 $ ] is finite .",
    "it follows that the tence @xmath357 defines a @xmath83-complete problem if and only if the statement @xmath355 holds .",
    "let an arbitrary context - free grammar @xmath347 with the terminal alphabet @xmath346 be given .",
    "let us decide whether @xmath355 or not .",
    "we concurrently start the following two algorithms .",
    "first , we enumerate all strings in @xmath358 . if we can find a string @xmath15 such that @xmath359 , then @xmath360 .",
    "second , we construct the tence @xmath357 for this grammar @xmath347 .",
    "then , we enumerate the tences @xmath349 .",
    "if we can find @xmath361 such that @xmath362 , then @xmath355 . hence , we can algorithmically decide whether @xmath355 or not .",
    "however , this contradicts the fact that the decision problem of @xmath363 is algorithmically undecidable  @xcite .",
    "thus , one can not recursively enumerate all tences that define @xmath83-complete problems on @xmath282 $ ] .",
    "nevertheless , we can use form   in order to recursively enumerate ( not all ) tences that define all @xmath83-complete problems .",
    "let @xmath364 denote the following set of all tences of form  : @xmath365 } } \\wedge \\gamma ) \\vee ( \\neg\\gamma_{\\gamma , t^\\mathrm{mod[\\gamma ] } } \\wedge \\upsilon_{\\tau_{<}});\\ \\gamma\\in \\mathcal{l}_\\mathcal{n}(\\tau _",
    "{ < } ) , \\\\ & \\!\\!\\!\\!\\",
    "! t^\\mathrm{mod[\\gamma]}\\ \\textrm{is a \\textit{$\\mathcal{n}$}-spe\\-ci\\-fic turing machine}\\}. \\end{array}\\ ] ]    note that @xmath364 is recursively enumerable since we can effectively enumerate all possible pairs @xmath281})$ ]",
    ". therefore , the set of all @xmath83-complete problems on @xmath282 $ ] , defined by sentences in @xmath364 , is recursively enumerable as well .",
    "however , it is hard to determine whether @xmath364 is recursive . in order to be able to decide whether @xmath366",
    ", we need to find the corresponding specific machine @xmath239}$ ] .",
    "this seems to be undecidable .",
    "fortunately , we can change form   in such a way as to obtain a recursive set of tences defining all @xmath83-complete problems on @xmath282 $ ] .    with each nonempty binary string @xmath15",
    ", we associate the following identically false first order sentence @xmath367 : @xmath368\\ ] ] where @xmath369 ; @xmath370 denotes either @xmath371 if @xmath23=1 $ ] , or @xmath372 if @xmath23=0 $ ] , for every @xmath373 .",
    "we say that @xmath367 encodes the binary string @xmath15 , and call @xmath367 an encoding sentence .",
    "since such a first order sentence can be considered in a certain sense as a representation of binary strings , we will use this sentence for an appropriate encoding of turing machines .",
    "let us introduce the following form : @xmath285 } } \\wedge \\gamma ) \\vee ( \\neg\\gamma_{\\gamma , t^\\mathrm{mod[\\gamma ] } } \\wedge \\upsilon_{\\tau _ { < } } ) \\vee \\psi_{\\langle t^\\mathrm{mod[\\gamma]}\\rangle}\\label{eq5}\\ ] ]    note that form   is logically equivalent to form   since @xmath374}\\rangle}$ ] is identically false .",
    "however , in contrast to  , form   allows us to easily construct a logic capturing the complexity class of all @xmath83-complete problems on all ordered structures .",
    "indeed , let @xmath375 be a mapping from every vocabulary @xmath223 containing @xmath37 to @xmath376 , where @xmath376 denotes the following set of @xmath238-sentences of form  : @xmath377 } } \\wedge \\gamma ) \\vee ( \\neg\\gamma_{\\gamma , t^\\mathrm{mod[\\gamma ] } } \\wedge \\upsilon_{\\tau _ { < } } ) \\vee \\psi_{\\langle t^\\mathrm{mod[\\gamma]}\\rangle } ; \\\\ &   \\!\\ ! \\gamma\\in \\mathcal{l}_\\mathcal{n}(\\tau_{<}),\\",
    "t^\\mathrm{mod[\\gamma]}\\ \\textrm{is a \\textit{$\\mathcal{n}$}-spe\\-ci\\-fic turing machine } \\}.",
    "\\end{array}\\ ] ]    then , the following theorem holds .",
    "[ theorem8 ] let @xmath197 be a logic capturing a complexity class @xmath83 ( among the classes @xmath7 , @xmath6 , @xmath5 , @xmath1 , and @xmath8 ) on @xmath282 $ ] for some fixed vocabulary @xmath223 containing @xmath37 .",
    "then , @xmath375 is a decidable fragment of @xmath197 that captures the complexity class of all @xmath83-complete problems on @xmath282 $ ] .",
    "let us show how to effectively decide whether @xmath378 or not , given an arbitrary @xmath379 .",
    "at first , we verify whether @xmath380 is of the form @xmath381 or not , where @xmath70 and @xmath382 are both @xmath238-sentences ; @xmath383 and @xmath77 are both first order sentences .",
    "if this is not the case , then @xmath384 .",
    "otherwise , we apply the operator @xmath385 to @xmath199 , and obtain @xmath216 . if @xmath386 , then @xmath384",
    "otherwise , we check whether @xmath77 is an encoding sentence @xmath367 or not . if this is not the case , then @xmath387 . otherwise , we verify whether @xmath15 is a code of some cific turing machine @xmath239}$ ] or not .",
    "if @xmath15 does not encode any cific turing machine @xmath239}$ ] , then @xmath387 . otherwise , we recover @xmath239}$ ] from its code @xmath15 .",
    "then , we construct the characteristic sentence @xmath279}}$ ] for the pair @xmath281})$ ] . if @xmath388}}$ ] , then @xmath389",
    "otherwise , @xmath384 .",
    "thus , the set @xmath376 of @xmath238-sentences is recursive , and @xmath375 is a logic that represents a decidable fragment of @xmath197 . since form   is logically equivalent to form  , theorem  [ theorem4 ] holds for form   as well as for form  .",
    "then , a problem @xmath283 $ ] is complete if and only if there exists a tence @xmath74 defining @xmath284 .",
    "this concludes the proof of the theorem .",
    "[ corollary9 ] if a logic @xmath197 captures a complexity class @xmath83 on all ordered structures , then the logic @xmath375 captures the complexity class of all @xmath83-complete problems on all ordered structures .",
    "it is immediate from the theorem .",
    "now , we proceed to unordered non - aristotelian structures .",
    "let us introduce the following form : @xmath344 } } \\wedge \\gamma ) \\vee ( \\overline{\\theta}_{\\gamma , t^\\mathrm{mod[\\gamma ] } } \\wedge \\upsilon_\\tau ) \\vee",
    "\\psi_{\\langle t^\\mathrm{mod[\\gamma]}\\rangle}\\label{eq6}\\ ] ]    note that form   is logically equivalent to form   since @xmath374}\\rangle}$ ] is identically false .",
    "however , in contrast to  , form   allows us to easily construct a logic capturing the complexity class of all @xmath83-complete problems on all non - aristotelian structures .",
    "indeed , let @xmath390 be a mapping from every non - aristotelian vocabulary @xmath36 to @xmath391 , where @xmath391 denotes the following set of @xmath296-sentences of form  : @xmath392 } } \\wedge \\gamma ) \\vee ( \\overline{\\theta}_{\\gamma , t^\\mathrm{mod[\\gamma ] } } \\wedge \\upsilon_\\tau ) \\vee",
    "\\psi_{\\langle t^\\mathrm{mod[\\gamma]}\\rangle};\\\\ & \\!\\!\\!\\ !",
    "\\gamma\\in \\mathcal{l}_\\mathcal{n}(\\tau),\\ t^\\mathrm{mod[\\gamma]}\\ \\textrm{is a \\textit{$\\mathcal{n}$}-spe\\-ci\\-fic turing machine } \\}. \\end{array}\\ ] ] then , the following theorem holds .",
    "[ theorem10 ]",
    "let @xmath197 be a logic capturing a complexity class @xmath83 ( among the classes @xmath5 , @xmath1 , and @xmath8 ) on @xmath55 $ ] for a fixed arbitrary non - aristotelian vocabulary @xmath36 .",
    "then , @xmath390 is a decidable fragment of @xmath197 that captures the complexity class of all @xmath83-complete problems on @xmath55 $ ] .",
    "let us show how to effectively decide whether @xmath393 or not , given an arbitrary @xmath394 . at first",
    ", we verify whether @xmath380 is of the form @xmath395 or not , where @xmath396 , @xmath70 , @xmath397 , and @xmath382 are @xmath296-sentences ; @xmath77 is a first order sentence . if this is not the case , then @xmath398",
    "otherwise , we apply the operator @xmath399 to @xmath292 , and obtain @xmath305 .",
    "if @xmath400 , then @xmath401 . otherwise , we check whether @xmath77 is an encoding sentence @xmath367 or not .",
    "if this is not the case , then @xmath398 . otherwise , we verify whether @xmath15 is a code of some cific turing machine @xmath239}$ ] or not .",
    "if @xmath15 does not encode any cific turing machine @xmath239}$ ] , then @xmath401 . otherwise , we recover @xmath239}$ ] from its code @xmath15 .",
    "then , we construct the characteristic sentence @xmath337}}$ ] for the pair @xmath281})$ ] . also , we construct the complementary sentence @xmath339}}$ ] for @xmath337}}$ ] , given @xmath239}$ ] and @xmath70 . if @xmath402}}$ ] and @xmath403}}$ ] , then @xmath404",
    "otherwise , @xmath398 .",
    "thus , the set @xmath391 of @xmath296-sentences is recursive , and @xmath390 is a logic that represents a decidable fragment of @xmath197 .",
    "since form   is logically equivalent to form  , theorem  [ theorem7 ] holds for form   as well as for form  .",
    "then , a problem @xmath343 $ ] is complete if and only if there exists a @xmath391-sentence @xmath74 defining @xmath405 .",
    "this concludes the proof of the theorem .",
    "[ corollary11 ] if a logic @xmath197 captures a complexity class @xmath83 on all structures , then the logic @xmath390 captures the complexity class of all @xmath83-complete problems on all non - aristotelian structures .",
    "it is immediate from the theorem .",
    "let a vocabulary @xmath223 containing @xmath37 be given . in a very similar way ( see section [ sec4 ] ) , we will show that one can not recursively enumerate all @xmath406-sentences defining problems in @xmath407 , provided that @xmath408 .",
    "let @xmath70 denote a distinguished tence that defines some problem in @xmath0 .",
    "here the notation @xmath216 stands for a tence defining a complete problem .",
    "let us consider a tence @xmath380 of the form @xmath409 .",
    "note that if the statement @xmath355 holds , then @xmath353 is logically valid .",
    "it follows that @xmath380 is logically equivalent to @xmath70 , and @xmath380 defines a problem in @xmath0 in this case .",
    "if the statement @xmath360 holds , then @xmath356 $ ] is finite .",
    "therefore , the set @xmath219 $ ] differs from the set @xmath410 $ ] only in a finite set of structures , i.e. @xmath219 \\setminus \\mathrm{mod}[\\phi]$ ] and @xmath410 \\setminus \\mathrm{mod}[\\upsilon_{\\tau_{<}}]$ ] are both finite .",
    "then , @xmath380 defines a @xmath1-complete problem that can not be in @xmath0 , on the assumption @xmath411 .",
    "thus , @xmath380 defines a problem in @xmath0 if and only if the statement @xmath355 holds .",
    "let an arbitrary context - free grammar @xmath347 with the terminal alphabet @xmath346 be given .",
    "we construct the tence @xmath412 for this grammar @xmath347 .",
    "suppose that we recursively enumerate all tences @xmath349 that define problems in @xmath407 .",
    "if we find @xmath361 such that @xmath413 , then we have @xmath355 . however , this contradicts the fact that the statement @xmath355 is algorithmically undecidable ( see section [ sec4 ] ) .",
    "thus , one can not recursively enumerate all tences that define problems on @xmath282 $ ] in  @xmath0 , provided that @xmath408 .",
    "then , we state the following question .",
    "what is it about a @xmath2-sentence that makes its defined problem be in @xmath0 ?",
    "we will answer this question in the affirmative .",
    "gurevich @xcite conjectured that no logic captures the complexity class @xmath0 .",
    "the conjecture is based on the fact that the existence of such a logic ( in the sense of gurevich ) for @xmath0 implies the existence of a complete problem in @xmath0 .",
    "however , there does not exist such a complete problem relative to a certain oracle @xcite .",
    "therefore , @xmath0 very likely has no complete problem .    nevertheless , it is not necessary for a logic to imply the existence of a complete problem .",
    "for example , no complete problem is known in the complexity class @xmath3 , whereas second order logic captures @xmath3 ( see @xcite ) .",
    "we can extend our approach beyond complete problems . a canonical form ( similar to form  )",
    "will be developed to define problems in @xmath0 .",
    "moreover , we will develop a logic that captures @xmath0 and does not require the existence of any complete problem in @xmath0 .",
    "let @xmath36 be a fixed vocabulary , where @xmath36 may be any ( including aristotelian ) vocabulary .",
    "then , with each pair @xmath414 of sentences , we associate the following set of structures : @xmath415 \\mid     & \\!\\!\\!\\!\\ !",
    "( \\forall b \\in \\mathrm{struc}[\\tau ] ) \\textrm{[}\\ : \\|b\\| > \\ell^{(2)}(|\\langle a\\rangle|)\\ , \\vee\\\\ & \\!\\!\\!\\!\\ ! ( b \\models \\lambda \\leftrightarrow b \\not\\models \\gamma)\\:\\textrm{]}\\:\\}. \\end{array}\\ ] ]    note that the set @xmath416 has very similar properties as the previously considered set @xmath315}}$ ] .",
    "we have the following theorem .    [ theorem12 ] @xmath417 $ ] .",
    "it is similar to the proof of theorem  [ theorem5 ] in many respects .",
    "let us decide whether @xmath418 or not , given a structure @xmath32 .",
    "let @xmath249 denote @xmath221 .",
    "first , we need to compute the number @xmath253 .",
    "it is obvious that we can find @xmath253 in time @xmath320 .",
    "second , we enumerate all structures @xmath317 $ ] such that @xmath321 . since @xmath256 , the value @xmath257 is bounded above by @xmath322 , where @xmath259 is a polynomial dependent on the vocabulary @xmath36 .",
    "therefore , this enumeration takes time @xmath419 .",
    "then , for each structure @xmath44 of the enumeration , we need to verify the following condition : @xmath420    if condition   is not satisfied for some structure @xmath44 of the enumeration , then the input structure @xmath32 does not belong to @xmath416 .",
    "otherwise , @xmath421 .",
    "now , let us estimate the running time for verifying condition  .",
    "we can verify for one structure @xmath44 in time @xmath329 , where @xmath422 is a polynomial .",
    "this follows from the fact that any model - checking problem in @xmath0 is decidable at most in exponential time .",
    "consequently , the total time to verify   for all structures @xmath44 of the enumeration is @xmath330 , or , in short , @xmath331 , where @xmath274 .",
    "since @xmath332 for any polynomial @xmath276 , this time can be approximately estimated at most as @xmath320 .",
    "thus , the overall running time consists of the time for computing @xmath253 and of the time for verifying   on all structures @xmath44 of the enumeration .",
    "the both of these times are estimated as @xmath320 .",
    "therefore , so is the overall running time .",
    "this concludes the proof of the theorem .",
    "[ corollary13 ] given a pair @xmath414 of @xmath65-sentences , one can construct a @xmath65-sentence that defines @xmath416 .",
    "it follows from the statement @xmath417 $ ] .",
    "then , by @xmath423 we denote the constructed sentence defining the model class @xmath416 .",
    "this @xmath423 characterizes @xmath74 and @xmath70 in the following way : if @xmath423 is logically valid , then @xmath75 $ ] and @xmath72 $ ] are both in @xmath0 .",
    "we call the sentence @xmath423 the characteristic sentence for the pair @xmath414",
    ". then , the following theorem holds .",
    "[ theorem14 ] let @xmath343 $ ] be a model class .",
    "then , @xmath284 is in @xmath0 if and only if there exists a @xmath65-sentence @xmath424 such that @xmath425=\\pi}$ ] and @xmath424 is of the form @xmath426 where @xmath74 and @xmath70 are both @xmath65-sentences ; @xmath423 the characteristic sentence for @xmath414 ; @xmath427 the sentence encoding the binary string @xmath428 .    for short ,",
    "we denote form   by @xmath429 .",
    "first , we will prove that @xmath429 defines a problem in @xmath0 for any pair @xmath414 of sentences .",
    "suppose that @xmath72=\\mathrm{struc}[\\tau]\\setminus\\mathrm{mod}[\\lambda]$ ] .",
    "then , @xmath72\\in \\mathrm{conp}$ ] , and , therefore , we have @xmath72\\in \\mathrm{np\\cap conp}$ ] . note that @xmath423 is logically valid in this case .",
    "then , @xmath429 is logically equivalent to @xmath70 .",
    "it follows that @xmath429 defines the problem @xmath72 $ ] in @xmath0 . now , suppose that @xmath72\\neq\\mathrm{struc}[\\tau]\\setminus\\mathrm{mod}[\\lambda]$ ] . then , @xmath430 $ ] is finite , and so is @xmath431 $ ] .",
    "since the set @xmath431 $ ] is finite , @xmath431\\in \\mathrm{np\\cap conp}$ ] in this case as well .",
    "second , we will prove that any problem in @xmath0 can be defined by means of the form @xmath429 .",
    "let @xmath70 be a @xmath65-sentence defining an arbitrary problem in @xmath0 .",
    "then , @xmath72 $ ] and @xmath55\\setminus\\mathrm{mod}[\\gamma]$ ] are both in @xmath1 . therefore , there exists a @xmath65-sentence @xmath74 that defines the model class @xmath55\\setminus\\mathrm{mod}[\\gamma]$ ] .",
    "note that the characteristic sentence @xmath423 for the pair @xmath432 is logically valid in this case .",
    "moreover , @xmath70 is logically equivalent to @xmath429 .",
    "since @xmath70 defines a problem in @xmath0 , so does @xmath429 .",
    "this concludes the proof of the theorem .",
    "thus , form   can serve as a canonical form for @xmath0 .",
    "now , we can use form   in order to develop a logic capturing @xmath0 .",
    "by @xmath433 we mean a mapping from every vocabulary @xmath36 to @xmath434 , where @xmath434 denotes the following set of @xmath65-sentences : @xmath435 then , the following theorem holds .",
    "[ theorem15 ] @xmath433 is a decidable fragment of @xmath2 logic that captures @xmath0 .",
    "it is similar to the proof of theorem  [ theorem10 ] .",
    "let us fix an arbitrary vocabulary @xmath36 .",
    "we will show how to effectively decide whether @xmath436 or not , given an arbitrary @xmath437 . at first",
    ", we verify whether @xmath380 is of the form @xmath438 or not , where @xmath70 and @xmath396 are both @xmath65-sentences ; @xmath77 is a first order sentence . if this is not the case , then @xmath439 . otherwise , we check whether @xmath77 is an encoding sentence @xmath367 or not .",
    "if this is not the case , then @xmath439 . otherwise , we check whether @xmath15 encodes some well - formed sentence @xmath74 or not .",
    "if this is not the case , then @xmath439 . otherwise , we recover @xmath74 from its code @xmath15 . then",
    ", we construct the characteristic sentence @xmath423 for the pair @xmath432 . if @xmath440 , then @xmath441 . otherwise , @xmath439 .",
    "thus , the set @xmath434 of @xmath65-sentences is recursive , and @xmath433 is a logic that represents a decidable fragment of @xmath2 .",
    "note that theorem  [ theorem14 ] implies that a problem @xmath343 $ ] is in @xmath0 if and only if there exists a @xmath434-sentence @xmath424 defining @xmath284 .",
    "this concludes the proof of the theorem .",
    "we have developed canonical forms for problems that are complete via turing reductions .",
    "also , we have shown that any complete problem can be easily defined by one of these forms .",
    "besides , we have provided an evidence that there can not be any complete problem on aristotelian structures in the complexity classes @xmath6 , @xmath5 , @xmath1 , and @xmath8 .",
    "logics for complete problems in the complexity classes @xmath7 , @xmath6 , @xmath5 , @xmath1 , and @xmath8 have been developed on the basis of the canonical form   that defines these problems on ordered structures . on the other hand , logics for complete problems in the complexity classes @xmath5 , @xmath1 , and @xmath8 have been developed on the basis of the canonical form   that defines these problems on unordered non - aristotelian structures .",
    "it is very likely that analogous canonical forms can be also developed to construct logics for complete problems in other complexity classes .    besides",
    ", we have extended our approach beyond complete problems . using a similar form ,",
    "we have developed a logic that captures the complexity class @xmath0 which very likely contains no complete problem .",
    "note that a recursive enumeration of all problems in @xmath0 was considered to be difficult ( see , for instance , @xcite ) .",
    "up to our knowledge , no such recursive enumeration was known till now .",
    "dawar @xcite pointed out : `` ... the natural set of witnesses for @xmath0 is not recursively enumerable .",
    "thus , finding a recursively enumerable set of witnesses would require a fundamentally new characterization of the class and would be a major breakthrough in complexity theory . ''",
    "nevertheless , using the logic @xmath433 to capture @xmath0 , we recursively enumerate all problems in @xmath0 by enumerating the sentences of this logic .     to : shaded areas indicate our developed logics for complete problems , complete problems , complete problems , and @xmath442.,title=\"fig : \" ]   to : shaded areas indicate our developed logics for complete problems , complete problems , complete problems , and @xmath442.,title=\"fig : \" ]    in conclusion , we have modified a fragment of immerman s diagram @xcite in respect to the complexity classes from @xmath6 to @xmath8 , as shown in figure  [ pic2 ] ( cf . figure  [ pic1 ] ) .",
    "for purposes of clarity , in the diagram we have permitted ourself to shade areas depicting the following complexity classes : complete problems , complete problems , complete problems , and @xmath443 for which we have developed logics for the first time . moreover , for the complexity classes of complete problems and complete problems which are not depicted in immerman s diagram , we have developed logics as well .",
    "99 a. aho , j. hopcroft , and j. ullman .",
    "_ the design and analysis of computer algorithms_. addison - wesley , 1974 .",
    "p. berman .",
    "relationship between density and deterministic complexity of complete languages . in _ proceedings of the fifth colloquium on automata , languages and programming _ , pp .  6371 , 1978 . b. bonet and n. borges .",
    "syntactic characterizations of completeness using duals and operators .",
    "_ logic journal of the igpl _ , * 20 * , 266282 , 2012 . j. cai and d. sivakumar .",
    "sparse hard sets for @xmath6 : resolution of a conjecture of hartmanis",
    ". _ journal of computer and system sciences _ , * 58 * , 280296 , 1999 .",
    "a. dawar . on complete problems , relativizations and logics for complexity classes . in _ fields of logic and computation _ , vol .",
    "6300 of _ lecture notes in computer science _ , a. blass , n. dershowitz , and w. reisig , eds , pp .  .",
    "springer , 2010 .",
    "generalized first - order spectra and polynomial - time recognizable sets . in _",
    "complexity of computation _",
    ", r. karp , ed . , pp . 2741 .",
    "siam - ams proceedings 7 , 1974 . s. ginsburg . _ the mathematical theory of context - free languages_. mcgraw - hill book company , new york , 1966 .",
    "e. grdel , p.g .",
    "kolaitis , l. libkin , m. marx , j. spencer , m.y .",
    "vardi , y. venema , and s. weinstein . _ finite model theory and its applications_. springer , 2007 .",
    "p. grnwald and p. vitnyi .",
    "algorithmic information theory . in _",
    "handbook of the philosophy of science .",
    "volume 8 : philosophy of information _ , p.  adriaans and j.  van benthem , eds , pp .",
    "elsevier b.v . ,",
    "2008 . y. gurevich .",
    "logic and the challenge of computer science .",
    "in _ current trends in theoretical computer science _ , e. brger , ed . , pp . 157 . computer science press , rockville , 1988 . n. immerman .",
    "_ descriptive complexity_. springer , 1998 .",
    "ladner and n.a .",
    "relativization of questions about log space computability .",
    "_ mathematical systems theory _ , * 10 * , 1932 , 1976 . j. lukasiewicz .",
    "aristotle s syllogistic from the standpoint of modern formal logic_. oxford university press , 1957 .",
    "medina and n. immerman . a syntactic characterization of completeness . in _ proceedings of the 9th ieee symposium on logic in computer science",
    ", pp . 241250 , 1994 .",
    "v.g . naidenko . to the problem @xmath444 . _ doklady mathematics _ , * 53 * , , 1996 .",
    "papadimitriou . on the complexity of the parity argument and other inefficient proofs of existence .",
    "_ journal of computer and system sciences _ , * 48 * , , 1994 .",
    "d. richerby .",
    "logical characterizations of @xmath8 . in _",
    "computer science logic : 18th international workshop , csl 2004 _ , vol .",
    "3210 of _ lecture notes in computer science _ , j. marcinkowski and a. tarlecki , eds , pp .",
    "springer , 2004 .",
    "m. sipser . on relativization and the existence of complete sets . in _ proceedings of the 9th international colloquium on automata , languages and programming _ , vol .",
    "140 of _ lecture notes in computer science _ , m. nielsen and e.m .",
    "schmidt , eds , pp . 523531 .",
    "springer , 1982 .",
    "l. stockmeyer .",
    "the polynomial - time hierarchy . _ theoretical computer science _",
    ", * 3 * , 122 , 1977 ."
  ],
  "abstract_text": [
    "<S> a new syntactic characterization of problems complete via turing reductions is presented . </S>",
    "<S> general canonical forms are developed in order to define such problems . </S>",
    "<S> one of these forms allows us to define complete problems on ordered structures , and another form to define them on unordered non - aristotelian structures . using the canonical forms , </S>",
    "<S> logics are developed for complete problems in various complexity classes . </S>",
    "<S> evidence is shown that there can not be any complete problem on aristotelian structures for several complexity classes . </S>",
    "<S> our approach is extended beyond complete problems . using a similar form </S>",
    "<S> , a logic is developed to capture the complexity class @xmath0 which very likely contains no complete problem .    </S>",
    "<S> _ keywords _ : theory of computation , computational complexity , turing reduction , completeness , descriptive complexity </S>"
  ]
}
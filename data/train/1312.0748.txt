{
  "article_text": [
    "_ program title : _ ` mnpbem ` toolbox supplemented by a collection of demo files + _ programming language : _ matlab 7.11.0 ( r2010b ) + _ computer : _ any which supports matlab 7.11.0 ( r2010b ) + _ operating system : _ any which supports matlab 7.11.0 ( r2010b ) + _ ram required to execute with typical data : _ @xmath0",
    "gbyte + _ has the code been vectorised or parallelized ? : _",
    "yes + _ keywords : _ plasmonics , electron energy loss spectroscopy , boundary element method + _ cpc library classification : _ optics + _ external routines / libraries used : _ ` mesh2d ` available at ` www.mathworks.com ` + _ nature of problem : _ simulation of electron energy loss spectroscopy ( eels ) for plasmonic nanoparticles + _ solution method : _ boundary element method using electromagnetic potentials + _ running time : _ depending on surface discretization between seconds and hours +",
    "plasmonics has emerged as an ideal tool for light confinement at the nanoscale  @xcite .",
    "this is achieved through light excitation of coherent charge oscillations at the interface between metallic nanoparticles and a surrounding medium , the so - called _ surface plasmons _ , which come together with strongly localized , evanescent fields .",
    "while the driving force behind plasmonics is downscaling of optics to the nanoscale , conventional optics can not be used for mapping of plasmonic fields because to the abbe diffraction limit of light . to overcome this limit , various experimental techniques , such as scanning near field microscopy or scanning tunneling spectroscopy  @xcite ,",
    "have been employed .    in recent years , electron energy loss spectroscopy ( eels )",
    "has become an extremely powerful experimental device for the minute spatial and spectral investigation of plasmonic fields  @xcite . in eels ,",
    "electrons with a high kinetic energy pass by or penetrate through a metallic nanoparticle , excite particle plasmons , and lose part of their kinetic energy . by monitoring this energy loss as a function of electron beam position , one obtains a detailed map about the localized plasmonic fields  @xcite .",
    "this technique has been extensively used in recent years to map out the plasmon modes of nanotriangles  @xcite , nanorods  @xcite , nanodisks  @xcite , nanocubes  @xcite , nanoholes  @xcite , and coupled nanoparticles  @xcite ( see also refs .",
    "@xcite for the interpretation of eels maps ) .",
    "simulation of eel spectra and maps has primarily been performed with the discrete - dipole approximation  @xcite and the boundary element method ( bem ) approach  @xcite . within the latter scheme ,",
    "the boundary of the metallic nanoparticle becomes discretized by boundary elements , and maxwell s equations are solved by attaching artificial surface charges and currents to these elements which are chosen such that the proper boundary conditions are fulfilled  @xcite .",
    "the methodology for eels simulations within the bem approach has been developed in refs .",
    "@xcite , and has been successfully employed in comparison with experimental eels data  @xcite .",
    "the purpose of the eels software described in this paper is to allow for a simple and efficient computation of electron energy loss spectroscopy of plasmonic nanoparticles and other nanophotonic structures .",
    "the software consists of two classes ` eelsret ` and ` eelsstat ` devoted to the simulation of eel spectroscopy and mapping of plasmonic nanoparticles , see fig .",
    "[ fig : flowchart ] , which can be used in combination with the ` mnpbem ` toolbox  @xcite that provides a generic simulation platform for the solution of maxwell s equations .",
    "our implementation for eels simulation of plasmonic nanoparticles relies on a bem approach  @xcite that has been successfully employed in various studies  @xcite .",
    "a typical simulation scenario consists of the following steps .    1 .",
    "first , one sets up the particle boundaries and the dielectric environment within which the nanoparticle is embedded .",
    "this step has been described in detail in our previous ` mnpbem ` paper  @xcite .",
    "2 .   we next initialize an ` eelsret ` or ` eelsstat ` object which defines the electron beam .",
    "this object stores the beam positions and the electron velocity . for a given electron loss energy",
    ", it then returns the external scalar and vector potentials @xmath1 and @xmath2 which can be used for the solution of the bem equations  @xcite .",
    "3 .   for given @xmath1 and @xmath2",
    ", we solve the full maxwell equations or its quasistatic limit , using the classes ` bemret ` or ` bemstat ` of the ` mnpbem ` toolbox  @xcite .",
    "the solutions are provided by the surface charge and current distributions @xmath3 and @xmath4 , which allow to compute the potentials and fields at the particle boundary and everywhere else  @xcite ( using the green function of the helmholtz equation ) .",
    "finally , we use @xmath3 and @xmath4 to compute the electron energy loss probabilities , which can be directly compared with experimental eel data .    rather than providing the additional classes separately ,",
    "we have embedded them in a new version of the ` mnpbem ` toolbox which supersedes the previous version  @xcite .",
    "the main reason for this policy is that also the mie classes ` mieret ` and ` miestat ` had to be modified , which allow a comparison with analytic mie results and can be used for testing .",
    "the new version of the toolbox also corrects a few minor bugs and inconsistencies .",
    "however , we expect that all simulation programs that performed with the old version should also work with the new version .",
    "we have organized this paper as follows . in sec .",
    "[ sec : start ] we discuss how to install the toolbox and give a few examples demonstrating the performance of eels simulations .",
    "the methodology underlying our approach as well as a few implementation details are presented in sec .",
    "[ sec : theory ] . finally , in sec .",
    "[ sec : results ] we present results of our eels simulations and provide a detailed toolbox description .",
    "to install the toolbox , one must simply add the path of the main directory ` mnpbemdir ` of the ` mnpbem ` toolbox as well as the paths of all subdirectories to the matlab search path .",
    "this can be done , for instance , through    addpath(genpath(mnpbemdir ) ) ;    to set up the help pages , one must once change to the main directory of the ` mnpbem ` toolbox and run the program ` makemnpbemhelp `    > > cd mnpbemdir ; > > makemnpbemhelp ;    once this is done , the help pages , which provide detailed information about the toolbox , are available in the matlab help browser .",
    "note that one may have to call ` start > desktop tools > view start button configuration > refresh ` to make the help accessible . under matlab 2012 the help pages can be found on the start page of the help browser under _ supplemental software_. the toolbox is almost identical to our previously published version  @xcite .",
    "the only major difference concerns the inclusion of eels simulations , which will be described in more detail in this paper .",
    "the ` mnpbem ` toolbox comes together with a directory ` demoeels ` containing several demo files . to get a first impression",
    ", we recommend to work through these demo files . by changing to the demo directory and typing    > > demotrianglespectrum    at the matlab",
    "prompt , a simulation is performed where the eel spectra are computed for a triangular silver nanoparticle . the run time",
    "is reported in table  [ table : examples ] , and the simulation results are shown in fig .",
    "[ fig : trianglespectrum ] .",
    "one observes a number of peaks associated with the different plasmon modes of the nanoparticle .",
    "note that through ` plot(p,'edgecolor','b ' ) ` one can plot the nanoparticle boundary . by running next ` demotrianglemap.m ` we obtain the spatial eels maps at the plasmon resonance energies indicated by dashed lines in fig .",
    "[ fig : trianglespectrum ] . figure  [ fig : trianglemap](a ) reports the map for the degenerate dipolar modes , whereas panels ( b  d ) show the eels maps for higher excited plasmon modes ( see ref .",
    "@xcite for experimental results ) .     are computed . ]",
    "lrx demo program & runtime & description + ` demomie.m ` & 26.3 sec & comparison of bem simulations with analytic mie results + ` demomiestat.m ` & 14.7 sec & same as ` demomie.m ` but for quasistatic limit + ` demodiskspectrum.m ` & 29.4 sec & eel spectra for nanodisk at selected beam positions + ` demodiskspectrumstat.m ` & 14.6 sec & same as ` demodiskspectrum.m ` but for quasistatic limit + ` demodiskmap.m ` & 105.6 sec & spatial eels maps for nanodisk at selected loss energies + ` demotrianglespectrum.m ` & 173.5 sec & eel spectra for nanotriangle at selected beam positions + ` demotrianglemap.m ` & 104.6 sec & spatial eels maps for nanotriangle at selected loss energies +     at the plasmon resonances indicated by dashed lines .",
    "the maps have been computed with the demo program ` demotrianglemap.m ` , with color axes scaled to the maxima of the respective maps ( see fig .  [",
    "fig : diskmap ] for color bar ) . ]      in the following we briefly discuss the demo file ` demotrianglespectrum.m ` ( see sec .",
    "[ sec : results ] for a detailed description of the software ) .",
    "we first set up a ` comparticle ` object ` p ` for the nanotriangle , which stores the particle boundary and the dielectric materials , as well as a bem solver ` bem ` for the solution of maxwell s equations .",
    "these steps have been described in some length in a previous paper  @xcite .",
    "additional information is also provided by the help pages . to set up the eels simulation , we need the impact parameters of the electron beam , a broadening parameter for the triangle integration ( see sec .  [",
    "sec : penetrate ] for details ) , and the electron velocity in units of the speed of light .",
    "initialization is done through    b = [ - 45 , 0 ; 0 , 0 ; 26 , 0 ] ; vel = 0.7 ; width = 0.2 ; exc = eelsret ( p , b , width , vel ) ;    the ` exc ` object returns through ` exc(enei ) ` the external potentials for a given loss energy , which allow for the solution of the bem equations by means of artificial surface charges and currents ` sig `  @xcite . from `",
    "sig ` we can obtain the surface and bulk loss probabilities for the electron .",
    "sig = bem  exc ( enei ) ; [ psurf , pbulk ] = exc.loss ( sig ) ;    finally , the eel spectrum can be computed by performing a loop over loss energies , and eel maps can be obtained by providing a rectangular grid of impact parameters .",
    "a more detailed description of the eels classes will be given in sec .",
    "[ sec : results ] .",
    "for the sake of completeness , we start by briefly summarizing the main concepts of the bem approach for the solution of maxwell s equation ( see refs .",
    "@xcite for a more detailed discussion ) .",
    "we consider dielectric nanoparticles , described through local and isotropic dielectric functions @xmath5 , which are separated by sharp boundaries @xmath6 . throughout , we set the magnetic permeability @xmath7 and consider maxwell s equations in frequency space @xmath8 @xcite . in accordance to refs .",
    "@xcite , we adopt a gaussian unit system .",
    "the basic ingredients of the bem approach are the scalar and vector potentials @xmath9 and @xmath10 , which are related to the electromagnetic fields via @xmath11 here @xmath12 and @xmath13 are the wavenumber and speed of light in vacuum , respectively .",
    "the potentials are connected through the lorentz gauge condition @xmath14 . within each medium",
    ", we introduce the green function for the helmholtz equation defined through @xmath15 with @xmath16 being the wavenumber in the medium @xmath17 . for an inhomogeneous dielectric environment , we then write down the solutions of maxwell s equations in the _ ad - hoc _",
    "form @xcite    [ eq : adhoc ] @xmath18    where @xmath1 and @xmath2 are the scalar and vector potentials characterizing the external perturbation . owing to eq .  , these expressions fulfill the helmholtz equations everywhere except at the particle boundaries . @xmath19 and",
    "@xmath20 are surface charge and current distributions , which are chosen such that the boundary conditions of maxwell s equations at the interfaces between regions of different permittivies @xmath21 hold .",
    "this leads to a number of integral equations .",
    "upon discretization of the particle boundaries into boundary elements , one obtains a set of linear equations that can be inverted , thus providing the solutions of maxwell s equation in terms of surface charge and current distributions @xmath19 and @xmath20 . through eqs .",
    "( [ eq : adhoc]a , b ) one can compute the potentials everywhere else .",
    "for further details about the working equations of the bem approach the reader is referred to refs .",
    "@xcite .      in the following",
    "we consider the situation where an electron passes by or penetrates through a metallic nanoparticles , and loses energy by exciting particle plasmons .",
    "we assume that the electron kinetic energy is much higher than the plasmon energies ( for typical electron microscopes operating with electron energies of several hundreds of kev this assumption is certainly fulfilled ) .",
    "we can thus discard in the electron trajectory the small change of velocity due to plasmon excitation , and describe the loss process in lowest order perturbation theory .",
    "we emphasize that our approach is correspondingly not suited for low electron energies or thick samples .",
    "for an electron trajectory @xmath22 , with @xmath23 , the electron charge distribution reads @xmath24 here @xmath25 and @xmath26 are the charge and velocity of the electron , respectively , @xmath27 is the impact parameter in the @xmath28-plane , and @xmath29 is a wavenumber .",
    "the potentials associated with the charge distribution of eq .   can be computed in infinite space analytically ( linard - wiechert potentials @xcite ) , and we obtain @xcite @xmath30 @xmath31 is the modified bessel function of order zero , and @xmath32 . within our bem approach , we can directly insert the expressions of eq .",
    "for the unbounded medium into eq .   since the calculated surface charge and current distributions @xmath19 and @xmath20 will automatically guarantee that the proper boundary conditions at the interfaces are fulfilled  @xcite .",
    "we next turn to the calculation of the electron energy loss . ignoring the small change of the electron velocity caused by the interaction with the plasmonic nanoparticle",
    ", the energy loss can be computed from the work performed by the electron against the induced field  @xcite @xmath33\\,dt=\\int_0^\\infty \\hbar\\omega    \\gamma_{\\rm eels}(\\bm r,\\omega)\\,d\\omega\\,,\\ ] ] with the loss probability , given per unit of transferred energy , @xmath34\\bigr\\}\\,dt+    \\gamma_{\\rm bulk}(\\omega)\\,.\\ ] ] note that eq .",
    "is a classical expression , where @xmath35 has been introduced only to relate energy and frequency .",
    "@xmath36 is the induced electric field , which can be computed from the potentials originating from the surface charge and current distributions @xmath19 and @xmath20 alone .",
    "@xmath37 is the bulk loss probability for electron propagation inside a lossy medium , see eq .",
    "( 18 ) of ref .  @xcite . within the quasistatic approximtion ,",
    "it is proportional to the loss function @xmath38 $ ] and the propagation length inside the medium .",
    "expressions similar to eq .   but derived within a full quantum approach , based on the born approximation , can be found in ref .",
    "@xcite .",
    "quite generally , @xmath39 can be computed by calculating the induced electric field along the electron trajectory and evaluating the expression given in eq .  .",
    "in what follows , we describe a computationally more efficient scheme .",
    "insertion of the induced potentials of eq .   into the energy loss expression of eq .",
    "yields @xmath40dz\\,.\\ ] ] here @xmath41 and @xmath42 are the entrance and exit points of the electron beam in a given medium , and @xmath43 parameterizes the electron trajectory .",
    "we next introduce a potential - like term @xmath44 , associated with the electron propagation inside a given medium . performing integration by parts",
    ", we can rewrite the second term in parentheses of eq .   as @xmath45 the first term on the right - hand side gives , upon insertion into eq .",
    ", @xmath46 .",
    "the integral expression precisely corresponds to the scalar potential at the crossing points of the trajectory with the particle boundary . as the potential is continuous across the boundaries , the contributions of all crossing points sum up to zero .",
    "thus , we arrive at our final result @xmath47\\,.\\ ] ] in comparison to eq .  , this expression has the advantage that the integration is only performed over the particle boundary , where the surface charge and current distributions @xmath19 and @xmath20 are readily available , and we do nt have to compute the induced electric field along the electron trajectory .      in the calculation of the external potential , eq .  , and the eels probability of eq .",
    "the points where the electron trajectory crosses the boundary have to be treated with care .",
    "for small distances , the potential scales with @xmath48 .",
    "when integrating this expression within our bem approach over a small area , we find in polar coordinates that @xmath49 remains finite .",
    "the same is true for the surface derivative of the potential .    in a computational approach",
    "it is somewhat tedious to perform such integration properly , in particular for crossing points that are located close to the edges or corners of boundary elements .",
    "for this reason , we suggest a slightly different approach . the main idea is to replace the delta - like transversal trajectory profile @xmath50 by a smoothened distribution .",
    "the potential at the transverse position @xmath51 then reads @xmath52\\,.\\ ] ] here @xmath53 [ see eq .  ] and the term in brackets is our smoothing function , with @xmath54 being a parameter that determines the transversal extension . for small arguments",
    ", we can expand @xmath55 , where @xmath56 is the euler constant , and perform all integrations analytically to obtain @xmath57 .",
    "this suggests replacing the potential of eq .   by the smoothened function @xmath58 for large arguments this expression coincides with the linard - wiechert potential , but remains finite for small arguments .",
    "a corresponding smoothening is also performed in the potential - like function @xmath59 of eq .  .",
    "in the quasistaic approximation one assumes that the size of the nanostructure @xmath60 is significantly smaller than the wavelength of light , such that @xmath61 .",
    "this allows us to keep in the simulations only the scalar potential and to set in the green function @xmath62 .",
    "we are thus left with the solution of the laplace or poisson equation , rather than the helmholtz equation , but we keep the full frequency - dependence of the permittivities @xmath63 .    the calculation of eels probabilities with the bem approach has been described in some detail in ref .  @xcite . in the following we briefly describe the basic ingredients .",
    "first , we compute the external potential from the solution of poisson s equation @xmath64 with @xmath65 being the charge distribution of eq .  .",
    "we next compute the surface charge distribution @xmath66 from the solution of the boundary integral equation , which , for a nanoparticle described by a single dielectric function @xmath67 embedded in a background of dielectric constant @xmath68 , reads  @xcite @xmath69 here @xmath70 is the static green function and @xmath71 denotes the surface derivative , where @xmath72 is the outer surface normal of the boundary . for materials consisting of more than one material , eq .",
    "has to be replaced by a more general expression  @xcite .",
    "finally , we compute the electron energy loss probability from ( see also eq .  ( 18 ) of ref .",
    "@xcite ) @xmath73 where @xmath37 is the bulk loss probability ( see eq .  ( 19 ) of ref .",
    "we first discuss the demo file ` demomie.m ` that simulates the energy loss probability for an electron passing by a silver nanosphere .",
    "figure  [ fig : mie ] shows results of our bem simulations which are in good agreement with analytic mie results  @xcite .",
    "let us briefly work through the demo program .    in the first lines we define the dielectric materials and the nanosphere ( for a more detailed discussion of the ` mnpbem ` toolbox see ref .",
    "@xcite ) .",
    "epsm = epstable ( silver.dat ) ; epstab = epsconst ( 1 ) , epsm ; diameter = 80 ; p = comparticle ( epstab , trisphere ( 256 , diameter ) , [ 2 , 1 ] , 1 ) ;    we next define the excitation of the electron beam . for the solution of the full maxwell equations , the excitation and the calculation of the eels probability",
    "is performed by the ` eelsret ` class , which is initialized through    exc = eelsret ( p , impact , width , vel , propertyname , propertyvalue , ... )    here ` p ` is the previously computed ` comparticle ` object , which stores the particle boundaries and the dielectric functions at both sides of the boundary . `",
    "impact ` is a vector ` [ x , y ] ` for the impact parameter @xmath74 of the electron beam defined in eq .  .",
    "if simulations for various impact parameters are requested , as is usually the case for the simulation of eels maps , ` impact ` can also be an array ` [ x1,y1;x2,y2 ; ... ] ` . `",
    "width ` is the broadening parameter @xmath54 of the electron beam , see eq .  , which will be discussed in more detail below , and ` vel `",
    "is the electron velocity to be given in units of the speed of light in vacuum .",
    "the optional pairs of property names ( ` ' cutoff ' ` , ` ' rule ' ` , or ` ' refine ' ` ) and values allow to control the performance of the toolbox , as detailed in sec .",
    "[ sec : penetrate ] .    in the `",
    "demomie.m ` program we next set up the eels excitation with    b = 10 ; vel = eelsbase.ene2vel ( 200e3 ) ; [ width , cutoff ] = deal ( 0.5 , 8 ) ; exc = eelsret ( p , [ diameter / 2 + b , 0 ] , width , vel , cutoff , cutoff ) ;    note that ` eelsbase.ene2vel ` allows to convert a kinetic electron energy in ev to the electron velocity in units of the speed of light in vacuum @xmath13 . in the above example",
    ", a kinetic energy of 200 kev corresponds to a velocity of approximately @xmath75 .",
    "we next set up the solver ` bemret ` for the solution of the bem equations  @xcite and compute the loss probabilities of eq .",
    "for various loss energies .",
    "bem = bemret ( p ) ; ene = linspace ( 2.5 , 4.5 , 80 ) ; psurf = zeros ( size ( ene ) ) ; for ien = 1 : length ( ene ) sig = bem  exc ( ev2 nm / ene ( ien ) ) ; psurf ( ien ) = exc.loss ( sig ) ; end    here ` sig ` is a ` compstruct ` object that stores the surface charges and current distributions @xmath76 and @xmath77 , inside and outside the particle boundaries  @xcite , as computed for the eels excitation of eq .  .",
    "with ` exc.loss(sig ) ` we finally compute the loss probabilities according to eq .  .",
    "note that ` ev2 nm ` defined in ` units.m ` allows to convert between energies given in electronvolts and wavelengths given in nanometers , the latter being the units used by the ` mnpbem ` toolbox .     and @xmath2 of eq .",
    "are integrated over the boundary element .",
    "the boundary element integration is controlled by the ` refine ` and ` rule ` properties , as described in more detail in the text . in the figure we set `",
    "refine=2 ` .",
    "( b ) eel spectra for a silver nanodisk with a diameter of 60 nm and a height of 10 nm .",
    "the impact parameters of the electron beams for the different spectra are reported in the inset , and the beam propagation direction is the @xmath78-direction perpendicular to the shaded disk .",
    "we investigate different ` width ` parameters of 0.1 nm ( solid lines ) , 0.2 nm ( dashed lines ) , and 0.5 nm ( dashed - dotted lines ) , finding practically no differences in the results .",
    "the ` cutoff ` parameter is set to 10 nm.,title=\"fig : \" ]   and @xmath2 of eq .",
    "are integrated over the boundary element .",
    "the boundary element integration is controlled by the ` refine ` and ` rule ` properties , as described in more detail in the text . in the figure we set `",
    "refine=2 ` .",
    "( b ) eel spectra for a silver nanodisk with a diameter of 60 nm and a height of 10 nm .",
    "the impact parameters of the electron beams for the different spectra are reported in the inset , and the beam propagation direction is the @xmath78-direction perpendicular to the shaded disk .",
    "we investigate different ` width ` parameters of 0.1 nm ( solid lines ) , 0.2 nm ( dashed lines ) , and 0.5 nm ( dashed - dotted lines ) , finding practically no differences in the results .",
    "the ` cutoff ` parameter is set to 10 nm.,title=\"fig : \" ]    to summarize , in the following we list the most important properties of the ` eelsret ` class    exc = eelsret ( p , impact , width , vel ) ; pot = exc ( enei ) ; [ psurf , pbulk ] = exc.loss ( sig ) ;    we emphasize that the functionality of the ` eelsret ` class is very similar to that of the ` planewaveret ` and ` dipoleret ` classes , which account for plane wave and dipole excitations .",
    "the only major difference is that ` eelsret ` requires the particle boundaries ` p ` of the ` comparticle ` object already in the initialization .",
    "this is because upon initialization ` eelsret ` computes the crossing points between the particle boundaries and the electron trajectories ( if the electron passes by the nanoparticle no crossing points are found ) , and these crossing points are used in subsequent calculations of the potentials and the loss probabilities to speed up the simulation .",
    "we next investigate the situation where the electron beam passes through the nanoparticle .",
    "the working principle is almost identical to the previous case where the electron passes by the nanoparticle , but the ` width ` parameter and the different optional properties have to be set with more care . in the following ,",
    "we briefly discuss these quantities in more detail .    * ` width ` .",
    "we have discussed in sec .",
    "[ sec : refine ] that the integration of the external potentials over the boundary elements can be facilitated if we use a smoothening parameter @xmath54 in the calculation of the external potentials , see eq .  .",
    "it is important to stress that the integration could be also performed for @xmath79 and that the finite @xmath54 value only facilitates the computation . in general , ` width ` should be chosen smaller than the average size of the boundary elements , as also shown in fig .",
    "[ fig : beam](a ) . * ` cutoff ` .",
    "the ` cutoff ` parameter determines those boundary elements where the external potentials become integrated . in more detail",
    ", we select all boundary elements fully or partially located within a circle with radius ` cutoff ` and centered around the impact parameter @xmath80 , as shown in fig .",
    "[ fig : beam](a ) by the red circle . ` cutoff ` should be set such that at least all direct neighbours of the boundary element crossed by the electron beam are included . * ` refine ` and ` rule ` .",
    "the integration over the boundary elements is controlled by ` refine ` and ` rule ` . `",
    "refine ` gives the number of integration points within a triangle .",
    "quadfaces are divided into two triangles . on default ` rule=18 ` is used ( see ` doc triangle_unit_set ` for details ) , and we recommend to use this value throughout . with ` refine ` one can split the triangles into subtriangles . usually the default value ` refine=1 ` should give sufficiently accurate results .    . ]",
    "figure  [ fig : beam](b ) shows the eel spectra of a nanodisk ( for parameters see figure caption ) for three impact parameters , which are described in the inset . in fig .",
    "[ fig : diskmap ] we show a density plot of identical loss spectra for a whole range of impact parameters .",
    "one observes a number of peaks , attributed to the dipolar and quadrupolar modes at 2.6 ev and 3.1 ev , respectively , a breathing mode at 3.5 ev  @xcite , and the bulk losses at 3.8 ev .    .",
    "for ` width=0 ` in panel ( a ) the computed maps show spikes at certain points , when the impact parameter @xmath27 is too close to a collocation point . for the moderate ` width ` parameters of panels ( b , c )",
    "the results are sufficiently smooth and almost independent on the chosen value , whereas for too large parameters the eels map become smeared out , see panel ( d ) . ]",
    "how should one chose the ` width ` , ` cutoff ` , and ` refine ` parameters ?",
    "quite generally , the results depend rather unsensitively on the chosen parameters . in fig .  [",
    "fig : beam ] we show results for various ` width ` parameters listed in the figure caption , which are almost indistinguishable . in fig .",
    "[ fig : diskbeam ] we depict eels maps for the dipolar disk mode at 2.6 ev and for various ` width ` parameters . for ` width=0 ` in panel ( a ) one observes for certain impact parameters spikes ( some of them indicated with arrows ) , where the loss probabilities becomes significantly enhanced or reduced in comparison to neighbour points .",
    "this indicates that the impact parameter is located too closely to the collocation point of the boundary element , and the numerical integration fails . for ` width ` parameters of 0.1 or 0.2 nm , panels ( b , c ) , these spikes are absent and the results are almost indistinguishable .",
    "finally , in panel ( d ) we report results for a too large smoothening parameter with a significant smearing of the features visible in panels ( a  c ) . thus , ` width ` should be chosen significantly smaller than the size of the boundary elements but large enough to avoid spikes in the computed eels maps .",
    "let us finally briefly discuss the simulation of eels maps for a nanotriangle , as computed with the demo program ` demotrianglemap.m ` .",
    "results are shown in fig .",
    "[ fig : trianglemap ] .",
    "first we set up an array @xmath81 of impact parameters and initialize the ` eelsret ` object .",
    "[ x , y ] = meshgrid ( linspace ( - 70 , 50 , 50 ) , linspace ( 0 , 50 , 35 ) ) ; impact = [ x ( : ) , y ( : ) ] ; vel = eelsbase.ene2vel ( 200e3 ) ; [ width , cutoff ] = deal ( 0.2 , 10 ) ; exc = eelsret ( p , impact , width , vel , cutoff , cutoff ) ;    note that in the initialization of ` exc ` we pass a matrix ` [ x(:),y ( : ) ] ` of impact parameters .",
    "as for the bem solver , we recommend to use for the boundary element integration the same or larger ` ' cutoff ' ` and ` ' refine ' ` values as for the ` eelsret ` object ( see ref .",
    "@xcite and toolbox help pages for further details ) .",
    "op = green.options ( cutoff , 20 , refine , 2 ) ; bem = bemret ( p , [ ] , op ) ;    finally , once the loss probabilities are computed one should reshape ` psurf ` and ` pbulk ` to the size of the impact parameter mesh .",
    "p = reshape ( psurf + pbulk , size ( x ) ) ;      -direction for dipolar disk mode .",
    "the simulation and disk parameters are identical to those of fig .",
    "[ fig : beam ] , the fields are computed with ` demodiskfield.m ` . ]    in some cases it is useful to plot the electromagnetic fields induced by the electron beam .",
    "we briefly discuss how this can be done .",
    "a demo program is provided by ` demodiskfield.m ` , and the simulation results are shown in fig .",
    "[ fig : diskfield ] .",
    "we first set up the ` eelsret ` object and the bem solver , following the prescription given above , and compute the surface charge and current distributions .",
    "exc = eelsret ( p , [ b , 0 ] , width , vel , cutoff , cutoff ) ; bem = bemret ( p , [ ] , op ) ; sig = bem  exc ( enei ) ;    next , we define the points where the electric field should be computed , using the ` compoint ` class of the ` mnpbem ` toolbox , and define a green function object ` compgreen ` .",
    "z = linspace ( - 80 , 80 , 1001 ) . ; pt = compoint ( p , [ b + 0 * z , 0 * z , z ] , mindist , 0.1 ) ; g = compgreen ( pt , p , op ) ; field = g.field ( sig ) ; e = pt ( field.e ) ;    in the last two lines we compute the electromagnetic fields , and extract the electric field .",
    "the command ` e = pt(field.e ) ` brings ` e ` to the same form as ` z ` , setting fields at points too close to the boundary ( which we have discarded in our ` compoint ` initialization with the parameter ` mindist ` @xcite ) to ` nan ` .",
    "figure  [ fig : diskfield ] shows simulation results .",
    "for the electron beam passing through the nanodisk , the field amplitude @xmath82 increases strongly in vicinity of the nanoparticle , which we attribute to evanescent plasmonic fields , and @xmath82 is very small inside the nanodisk because of the efficient free - carrier screening inside conductors .    with the ` mnpbem ` toolbox it is also possible to compute the light emitted from the nanoparticles , the so - called _",
    "cathodoluminescence_. to this end , we first set up a ` spectrumret ` object for the calculation of scattering spectra , determine the electromagnetic fields at infinity , and finally compute the scattering spectra .",
    "spec = spectrumret ; field = farfield ( spec , sig ) ; sca = scattering ( spec , field ) ;    in the initialization of ` spec ` one could also use a sphere segment rather than the default unit sphere , e.g. , to account for finite angle coverages of photodetectors .",
    "efficient parallelization can be achieved for typical energy loops of the form :    for ien = 1 : length ( enei ) sig = bem  exc ( enei ( ien ) ) ; [ psurf ( : , ien ) , pbulk ( : , ien ) ] = exc.loss ( sig ) ; end    we can replace this loop with :    matlabpool open ; parfor ien = 1 : length ( enei ) sig = bem  exc ( enei ( ien ) ) ; [ psurf ( : , ien ) , pbulk ( : , ien ) ] = exc.loss ( sig ) ; end    the important point is that all computations inside the loop can be performed independently , as is the case for the bem simulation as well as the calculation of the external potentials and loss probabilities .      , but computed within the quasistatic limit using the demo program ` demodiskspectrumstat.m ` . the solid lines report simulation results for the full maxwell equations ( same as fig .",
    "[ fig : beam ] ) , the dashed lines report results for the quasistatic approximation . for the dipolar mode at lowest energy ,",
    "the peak position and width somewhat differ due to retardation effects and radiation damping . ]",
    "the implementation of the quasistatic limit within the ` eelsstat ` class closely follows the retarded case .",
    "the demo program ` demodiskspectrumstat.m ` is very similar to ` demodiskspectrum.m ` discussed in sec .",
    "[ sec : penetrate ] .",
    "we first set up a disk - like nanoparticle and specify the electron beam parameters .",
    "next , we initialize an ` eelsstat ` object by calling    exc = eelsstat ( p , b , width , vel , cutoff , cutoff , refine , 2 ) ;    the definition of the various parameters is identical to the retarded case . finally , we set up the quasistatic ` bemstat ` or ` bemstateig ` bem solver  @xcite , and compute the surface charge distribution and the energy loss probability using the equations presented in sec .",
    "[ sec : quasistatic ]    bem = bemstat ( p , [ ] , op ) ; for ien = 1 : length ( enei ) sig = bem  exc ( enei ( ien ) ) ; [ psurf ( : , ien ) , pbulk ( : , ien ) ] = exc.loss ( sig ) ; end    simulation results are shown in fig .",
    "[ fig : diskspectrumstat ] .",
    "we observe that the results of the full and quasistatic simulations are very similar , and only for the dipolar mode at lowest energy the peak position and width somewhat differ due to retardation effects and radiation damping",
    "i am grateful to andi trgler for most helpful discussions , and thank him as well as toni hrl , jrgen waxenegger , and harald ditlbacher for numerous feedback on the simulation program .",
    "this work has been supported by the austrian science fund fwf under project p24511n26 and the sfb nextlite ."
  ],
  "abstract_text": [
    "<S> within the ` mnpbem ` toolbox , we show how to simulate electron energy loss spectroscopy ( eels ) of plasmonic nanoparticles using a boundary element method approach . </S>",
    "<S> the methodology underlying our approach closely follows the concepts developed by garca de abajo and coworkers [ for a review see rev . </S>",
    "<S> mod . </S>",
    "<S> phys . </S>",
    "<S> 82 , 209 ( 2010 ) ] . </S>",
    "<S> we introduce two classes ` eelsret ` and ` eelsstat ` that allow in combination with our recently developed ` mnpbem ` toolbox for a simple , robust , and efficient computation of eel spectra and maps . </S>",
    "<S> the classes are accompanied by a number of demo programs for eels simulation of metallic nanospheres , nanodisks , and nanotriangles , and for electron trajectories passing by or penetrating through the metallic nanoparticles . </S>",
    "<S> we also discuss how to compute electric fields induced by the electron beam and cathodoluminescence .    </S>",
    "<S> plasmonics , metallic nanoparticles , boundary element method , electron energy loss spectroscopy ( eels ) </S>"
  ]
}
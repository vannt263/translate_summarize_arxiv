{
  "article_text": [
    "this paper studies the multi - agent average consensus problem , where a group of agents seek to agree on the average of their initial states . due to its numerous applications in networked systems ,",
    "many algorithmic solutions exist to this problem ; however , a majority of them rely on agents having continuous or periodic availability of information from other agents .",
    "unfortunately , this assumption leads to inefficient implementations in terms of energy consumption , communication bandwidth , congestion , and processor usage .",
    "motivated by these observations , our main goal here is the design of a provably correct distributed event - triggered strategy that prescribes when communication and control updates should occur so that the resulting asynchronous network executions still achieve average consensus .",
    "_ literature review : _ triggered control seeks to understand the trade - offs between computation , communication , sensing , and actuator effort in achieving a desired task with a guaranteed level of performance .",
    "early works  @xcite consider tuning controller executions to the state evolution of a given system , but the ideas have since then been extended to consider other tasks , see  @xcite and references therein for a recent overview . among the many references in the context of multi - agent systems ,",
    "@xcite specifies the responsibility of each agent in updating the control signals ,  @xcite considers network scenarios with disturbances , communication delays , and packet drops , and  @xcite studies decentralized event - based control that incorporates estimators of the interconnection signals among agents .",
    "several works have explored the application of event - triggered ideas to the acquisition of information by the agents . to this end ,  @xcite combine event - triggered controller updates with sampled data that allows for the periodic evaluation of the triggers .",
    "@xcite drop the need for periodic access to information by considering event - based broadcasts , where agents decide with local information only when to obtain further information about neighbors .",
    "self - triggered control  @xcite relaxes the need for local information by deciding when a future sample of the state should be taken based on the available information from the last sampled state .",
    "team - triggered coordination  @xcite combines the strengths of event- and self - triggered control into a unified approach for networked systems .",
    "the literature on multi - agent average consensus is vast , see e.g. ,  @xcite and references therein .",
    "@xcite introduce a continuous - time algorithm that achieves asymptotic convergence to average consensus for both undirected and weight - balanced directed graphs .",
    "@xcite build on this algorithm to propose a lyapunov - based event - triggered strategy that dictates when agents should update their control signals but its implementation relies on each agent having perfect information about their neighbors at all times . the work  @xcite uses event - triggered broadcasting with time - dependent triggering functions to provide an algorithm where each agent only requires exact information about itself , rather than its neighbors .",
    "however , its implementation requires knowledge of the algebraic connectivity of the network .",
    "in addition , the strictly time - dependent nature of the thresholds makes the network executions decoupled from the actual state of the agents .",
    "closer to our treatment here , @xcite propose an event - triggered broadcasting law with state - dependent triggering functions where agents do not rely on the availability of continuous information about their neighbors ( under the assumption that all agents have initial access to a common parameter ) .",
    "this algorithm works for networks with undirected communication topologies and guarantees that all inter - event times are strictly positive , but does not discard the possibility of an infinite number of events happening in a finite time period .",
    "we consider here a more general class of communication topologies described by weight - balanced , directed graphs .",
    "the works  @xcite present provably correct distributed strategies that , given a directed communication topology , allow a network of agents to find such weight edge assignments .",
    "_ statement of contributions : _ our main contribution is the design and analysis of novel event - triggered broadcasting and controller update strategies to solve the multi - agent average consensus problem over weight - balanced digraphs .",
    "with respect to the conference version of this work  @xcite , the present manuscript introduces new trigger designs , extends the treatment from undirected graphs to weight - balanced digraphs , and provides a comprehensive technical treatment .",
    "our proposed law does not require individual agents to have continuous access to information about the state of their neighbors and is fully distributed in the sense that it does not require any a priori knowledge by agents of global network parameters to execute the algorithm .",
    "our lyapunov - based design builds on the evolution of the network disagreement to synthesize triggers that agents can evaluate using locally available information to make decisions about when to broadcast their current state to neighbors . in our design ,",
    "we carefully take into account the discontinuities in the information available to the agents caused by broadcasts received from neighbors and their effect on the feasibility of the resulting implementation .",
    "our analysis shows that the resulting asynchronous network executions are free from zeno behavior , i.e. , only a finite number of events are triggered in any finite time period , and exponentially converge to agreement on the average of all agents initial states over weight - balanced , strongly connected digraphs .",
    "we also provide a lower bound on the exponential convergence rate and characterize the asymptotic convergence of the network under switching topologies that remain weight - balanced and are jointly strongly connected .",
    "lastly , we propose a periodic implementation of our event - triggered design that has agents check the triggers periodically and characterize the sampling period that guarantees correctness .",
    "various simulations illustrate our results .",
    "this section introduces some notational conventions and notions on graph theory .",
    "let @xmath0 , @xmath1 , @xmath2 , and @xmath3 denote the set of real , positive real , nonnegative real , and positive integer numbers , respectively .",
    "we denote by @xmath4 and @xmath5 the column vectors with entries all equal to one and zero , respectively .",
    "we let @xmath6 denote the euclidean norm on @xmath7 .",
    "we let @xmath8 . for a finite set @xmath9 ,",
    "we let @xmath10 denote its cardinality . given @xmath11 , young s inequality  @xcite states that , for any @xmath12 , @xmath13 a weighted directed graph ( or weighted digraph ) @xmath14 is comprised of a set of vertices @xmath15 , directed edges @xmath16 and weighted adjacency matrix @xmath17 . given an edge @xmath18 , we refer to @xmath19 as an out - neighbor of @xmath20 and @xmath20 as an in - neighbor of @xmath19 .",
    "the sets of out- and in - neighbors of a given node @xmath20 are @xmath21 and @xmath22 , respectively .",
    "the weighted adjacency matrix @xmath23 satisfies @xmath24 if @xmath25 and @xmath26 otherwise . a path from vertex @xmath20 to @xmath19 is an ordered sequence of vertices such that each intermediate pair of vertices is an edge .",
    "a digraph @xmath27 is strongly connected if there exists a path from all @xmath28 to all @xmath29 .",
    "the out- and in - degree matrices @xmath30 and @xmath31 are diagonal matrices where @xmath32 respectively .",
    "a digraph is weight - balanced if @xmath33 .",
    "the ( weighted ) laplacian matrix is @xmath34 .",
    "based on the structure of @xmath35 , at least one of its eigenvalues is zero and the rest of them have nonnegative real parts . if the digraph @xmath27 is strongly connected , @xmath36 is simple with associated eigenvector @xmath4 .",
    "the digraph  @xmath27 is weight - balanced if and only if @xmath37 if and only if @xmath38 is positive semidefinite .",
    "for a strongly connected and weight - balanced digraph , zero is a simple eigenvalue of @xmath39 . in this case",
    ", we order its eigenvalues as @xmath40 , and note the inequality @xmath41 for all @xmath42 .",
    "the following property will also be of use later , @xmath43 this can be seen by noting that @xmath44 is diagonalizable and rewriting @xmath45 , where @xmath46 is a diagonal matrix containing the eigenvalues of  @xmath44 .",
    "we consider the multi - agent average consensus problem for a network of @xmath47 agents .",
    "we let @xmath27 denote the weight - balanced , strongly connected digraph describing the communication topology of the network . without loss of generality",
    ", we use the convention that an agent @xmath20 is able to receive information from neighbors in @xmath21 and send information to neighbors in @xmath48 .",
    "we denote by @xmath49 the state of agent @xmath50 .",
    "we consider single - integrator dynamics @xmath51 for all @xmath50 .",
    "it is well known  @xcite that the distributed continuous control law @xmath52 drives each agent of the system to asymptotically converge to the average of the agents initial conditions . in compact form , this can be expressed by @xmath53 where @xmath54 is the column vector of all agent states and @xmath35 is the laplacian of @xmath27 .",
    "however , in order to be implemented , this control law requires each agent to continuously access state information about its neighbors and continuously update its control law . here , we are interested in controller implementations that relax both of these requirements by having agents decide in an opportunistic fashion when to perform these actions .    under this framework",
    ", neighbors of a given agent only receive state information from it when this agent decides to broadcast its state to them .",
    "equipped with this information , the neighbors update their respective control laws .",
    "we denote by @xmath55 the last broadcast state of agent @xmath50 at any given time  @xmath56 .",
    "we assume that each agent has continuous access to its own state .",
    "we then utilize an event - triggered implementation of the controller   given by @xmath57 letting @xmath58 and @xmath59 , we write  as @xmath60 note that although agent @xmath20 has access to its own state @xmath61 , the controller   uses the last broadcast state @xmath55 .",
    "this is to ensure that the average of the agents initial states is preserved throughout the evolution of the system .",
    "more specifically , using this controller , one has @xmath62 where we have used the fact that  @xmath27 is weight - balanced .",
    "our aim is to identify triggers that prescribe in an opportunistic fashion when agents should broadcast their state to their neighbors so that the network converges to the average of the initial agents states . given that the average is conserved by  , all the triggers should enforce is that the agents states ultimately agree .",
    "in this section we synthesize a distributed triggering strategy that prescribes when agents should broadcast state information and update their control signals .",
    "our design builds on the analysis of the evolution of the network disagreement characterized by the following candidate lyapunov function , @xmath63 where @xmath64 corresponds to agreement at the average of the states of all agents .",
    "the next result characterizes a local condition for all agents in the network such that this candidate lyapunov function is monotonically nonincreasing .    [ pr : event ] for @xmath50 , let @xmath65 and denote by @xmath66 the error between agent @xmath20 s last broadcast state and its current state at time @xmath67 .",
    "then , @xmath68 .",
    "\\end{aligned}\\ ] ]    note that , since the average is preserved , cf .  , under the control law  , @xmath69 .",
    "the function @xmath70 is continuous and piecewise continuously differentiable , with points of discontinuity of @xmath71 corresponding to instants of time where an agent broadcasts its state . whenever defined",
    ", this derivative takes the form @xmath72 where we have used that the graph is weight - balanced in the last equality .",
    "let @xmath73 be the vector of errors of all agents .",
    "we can then rewrite @xmath74 as @xmath75 expanding this out yields @xmath76 .",
    "\\end{aligned}\\ ] ] using young s inequality   for each product @xmath77 with @xmath78 yields , @xmath79                      \\\\      & = - \\frac{1}{2 } \\sum_{i=1}^n \\sum_{j \\in { \\mathcal{n}_i^{\\operatorname{out } } } } w_{ij } \\left [        ( 1-a_i)({\\widehat}{x}_i-{\\widehat}{x}_j)^2 - \\frac{e_i^2}{a_i } \\right ] ,    \\end{aligned}\\ ] ] which concludes the proof .    from proposition  [ pr : event ] , a sufficient condition to ensure that the proposed candidate lyapunov function @xmath80 is monotonically decreasing is to maintain @xmath81 \\geq 0,\\end{aligned}\\ ] ] for all @xmath50 at all times .",
    "this is accomplished by ensuring @xmath82 for all @xmath50 .",
    "the maximum of the function @xmath83 in the domain @xmath84 is attained at @xmath85 , so we have each agent select this value to optimize the trigger design . as a consequence of the above discussion , we have the following result .",
    "[ co : trigger ] for each @xmath50 , let @xmath86 and define @xmath87 if each agent  @xmath20 enforces the condition @xmath88 at all times , then @xmath89 ( note that the latter quantity is strictly negative for all @xmath90 because the graph is strongly connected ) .    for each @xmath50",
    ", we refer to the function @xmath91 defined in corollary  [ co : trigger ] as the _ triggering function _ and to the condition @xmath92 as the _ trigger_. note that the design parameter  @xmath93 affects how flexible the trigger is : as the value of @xmath93 is selected closer to @xmath94 , the trigger is enabled less frequently at the cost of agent @xmath20 contributing less to the decrease of the lyapunov function .",
    "an important observation is that , since the triggering function @xmath91 depends on the last broadcast states  @xmath95 , a broadcast from a neighbor of @xmath20 might cause a discontinuity in the evaluation of @xmath96 , where just before the update was received , @xmath97 , and immediately after , @xmath98 .",
    "such event would make agent @xmath20 miss the trigger .",
    "thus , rather than prescribing agent @xmath99 to broadcast its state when @xmath100 , we instead define an event  by either @xmath101 or @xmath102 where for convenience , we use the shorthand notation @xmath103 we note the useful equality @xmath104 .",
    "the reasoning behind these triggers is the following .",
    "the inequality   makes sure that the discontinuities of @xmath105 do not make the agent miss an event .",
    "the trigger   makes sure that the agent is not required to continuously broadcast its state to neighbors when its last broadcast state is in agreement with the states received from them .",
    "the triggers   and   are a generalization of the ones proposed in  @xcite . however , it is unknown whether they are sufficient to exclude the possibility of zeno behavior in the resulting executions . to address this issue , we prescribe the following additional trigger .",
    "let @xmath106 be the last time at which agent @xmath20 broadcast its information to its neighbors  @xmath22 .",
    "if at some time @xmath107 , agent @xmath20 receives new information from a neighbor @xmath108 , then @xmath20 immediately broadcasts its state if @xmath109 here , @xmath110 is a design parameter selected so  that @xmath111 where @xmath112 .",
    "our analysis in section  [ se : guarantees ] will expand on the role of this bound and the additional trigger in preventing the occurrence of zeno behavior .    in conclusion ,",
    "the triggers  - form the basis of the event - triggered communication and control law , which is formally presented in table  [ tab : algorithm ] .    each time",
    "an event is triggered by an agent , say @xmath50 , that agent broadcasts its current state to its out - neighbors and updates its control signal , while its in - neighbors @xmath113 update their control signal .",
    "this is in contrast to other event - triggered designs , see e.g. ,  @xcite , where events only correspond to updates of control signals because exact information is available to the agents at all times .",
    "here we analyze the properties of the control law   in conjunction with the event - triggered communication and control lawof section  [ se : design ] .",
    "our first result shows that the network executions are guaranteed not to exhibit zeno behavior .",
    "its proof illustrates the role played by the additional trigger   in facilitating the analysis to establish this property .    [",
    "prop : zeno ] given the system   with control law   executing the event - triggered communication and control lawover a weight - balanced , strongly connected digraph , the agents will not be required to communicate an infinite number of times in any finite time period .",
    "we are interested in showing here that no agent will broadcast its state an infinite number of times in any finite time period .",
    "our first step consists of showing that , if an agent does not receive new information from neighbors , its inter - event times are lower bounded by a positive constant .",
    "assume agent @xmath50 has just broadcast its state at time @xmath114 , and thus @xmath115 . for @xmath116 , while no new information is received , @xmath55 and @xmath117 remain constant .",
    "given that @xmath118 , the evolution of the error is simply @xmath119 where , for convenience , we use the shorthand notation @xmath120 .",
    "since we are considering the case when no neighbors of @xmath20 broadcast information , the trigger   is irrelevant .",
    "we are then interested in finding the time  @xmath121 when  @xmath100 occurs , triggering a broadcast of agent @xmath20 s state .",
    "if @xmath122 , no broadcasts will ever happen ( @xmath123 ) because @xmath124 for all @xmath116 .",
    "hence , consider the case when @xmath125 , which in turn implies @xmath126 .",
    "using  , the trigger   prescribes a broadcast at the time @xmath127 satisfying @xmath128 or , equivalently , @xmath129 using the fact that @xmath130 for any @xmath131 and @xmath132 ( which readily follows from the cauchy - schwarz inequality ) , we obtain @xmath133 therefore , we can lower bound the inter - event time by @xmath134 ( incidentally , this explains our choice in  ) .",
    "our second step builds on this fact to show that messages can not be sent an infinite number of times between agents in a finite time period .",
    "let time @xmath114 be the time at which agent @xmath20 has broadcast its information to neighbors and thus @xmath115 .",
    "if no information is received by time @xmath135 , there is no problem since @xmath136 , so we now consider the case that at least one neighbor of @xmath20 broadcasts its information at some time @xmath137 . in this case",
    "it means that at least one neighbor @xmath138 has broadcast new information , thus agent @xmath20 would also rebroadcast its information at time @xmath139 due to trigger  .",
    "let @xmath140 denote the set of all agents who have broadcast information at time @xmath139 ( we refer to these agents as synchronized ) .",
    "this means that , as long as no agent @xmath141 sends new information to any agent in @xmath140 , the agents in @xmath140 will not broadcast new information for at least @xmath142 seconds , which includes the original agent @xmath20 .",
    "as before , if no new information is received by any agent in @xmath140 by time @xmath143 there is no problem , so we now consider the case that at least one agent @xmath144 sends new information to some agent @xmath145 at time @xmath146 . by trigger",
    ", this would require all agents in @xmath140 to also broadcast their state information at time @xmath147 and agent @xmath144 will now be added to the set @xmath140 .",
    "reasoning repeatedly in this way , the only way for infinite communications to occur in a finite time period is for an infinite number of agents to be added to the set @xmath140 , which is not possible because there are only a finite number of agents  @xmath47 .",
    "we note here that the introduction of the trigger   is sufficient to ensure zeno behavior does not occur but it is an open problem to determine whether it is also necessary . the design in  ( * ? ? ?",
    "* corollary  2 ) specifies triggers of a nature similar to  - for undirected graphs and guarantees that no agent undergoes an infinite number of updates at any given instant of time , but does not discard the possibility of an infinite number of updates in a finite time period , as proposition  [ prop : zeno ] does .",
    "next , we establish global exponential convergence .",
    "[ th : exp - convergence ] given the system   with control law   executing the event - triggered communication and control lawover a weight - balanced strongly connected digraph , all agents exponentially converge to the average of the initial states , i.e. , @xmath148 .    by design , we know that the event - triggers  - ensure that , cf",
    ". corollary  [ co : trigger ] , @xmath149 we show that convergence is exponential by establishing that the evolution of @xmath80 towards @xmath36 is exponential .",
    "define @xmath150 to further bounding   by @xmath151 given this inequality , our next step is to relate the value of @xmath152 with @xmath153 .",
    "note that @xmath154 where we have used   in the inequality .",
    "now , @xmath155 where @xmath156 and we have used @xmath157 in the second inequality . on the other hand , @xmath158 where we have used   in the second inequality .",
    "putting these bounds together , we obtain @xmath159 with @xmath160 . using this expression in the bound for the lie derivative , we get @xmath161 this , together with the fact that @xmath70 is continuous and piecewise differentiable implies , using the comparison lemma , cf .",
    "@xcite , that @xmath162 and hence the exponential convergence of the network trajectories to the average state .",
    "the lyapunov function used in the proof of theorem  [ th : exp - convergence ] does not depend on the specific network topology .",
    "therefore , when the communication digraph is time - varying , this function can be used as a common lyapunov function to establish asymptotic convergence to average consensus .",
    "this observation is key to establish the next result , whose proof we omit for reasons of space .",
    "let @xmath163 be the set of weight - balanced digraphs over @xmath47 vertices .",
    "denote the communication digraph at time @xmath164 by @xmath165 .",
    "consider the system   with control law   executing the event - triggered communication and control lawover a switching digraph , where @xmath166 is piecewise constant and such that there exists an infinite sequence of contiguous , nonempty , uniformly bounded time intervals over which the union of communication graphs is strongly connected .",
    "then , assuming all agents are aware of who its neighbors are at each time and agents broadcast their state if their neighbors change , all agents asymptotically converge to the average of the initial states .",
    "here we propose an alternative strategy , termed periodic event - triggered communication and control law , where agents only evaluate triggers   and   periodically , instead of continuously . specifically , given a sampling period @xmath167 , we let @xmath168 , where @xmath169 , denote the sequence of times at which agents evaluate the decision of whether to broadcast their state to their neighbors . this type of design is more in line with the constraints imposed by real - time implementations , where individual components work at some given frequency , rather than continuously .",
    "an inherent and convenient feature of this strategy is the lack of zeno behavior ( since inter - event times are naturally lower bounded by  @xmath170 ) , making the need for the additional trigger   superfluous .",
    "the strategy is formally presented in table  [ tab : algorithm2 ] .",
    "each time an agent  @xmath50 broadcasts , this resets the error to zero , @xmath171 .",
    "however , because triggers are not evaluated continuously , we no longer have the guarantee @xmath172 at all times @xmath164 but , instead , have @xmath173 for @xmath174 .",
    "the next result provides a condition on  @xmath170 that guarantees the correctness of our design .",
    "let @xmath167 be such that @xmath175 where @xmath176 and @xmath177 .",
    "then , given the system   with control law   executing the periodic event - triggered communication and control lawover a weight - balanced strongly connected digraph , all agents exponentially converge to the average of the initial states .    since   is only guaranteed at the sampling times under the periodic event - triggered communication and control law , we analyze what happens to the lyapunov function  @xmath80 in between them . for @xmath178 ,",
    "note that @xmath179 substituting this expression into @xmath180 , we obtain @xmath181 for all @xmath182 . for a simpler exposition",
    ", we drop all arguments referring to time @xmath183 in the sequel .",
    "following the same line of reasoning as in proposition  [ pr : event ] yields @xmath184 using  , we bound @xmath185 hence , for @xmath182 , @xmath186 under  , a reasoning similar to the proof of theorem  [ th : exp - convergence ] using   leads to finding @xmath187 such  that @xmath188 which implies the result .",
    "this section illustrates the performance of the proposed algorithms in simulation . figure  [ fig : sim1 ] shows a comparison of the event - triggered communication and control lawwith the algorithm proposed in  @xcite for undirected graphs over a network of @xmath189 agents .",
    "both algorithms operate under the dynamics   with control law  , and differ in the way events are triggered .",
    "the algorithm in  @xcite requires all network agents to have knowledge of an a priori chosen common parameter  @xmath190 , which we set here to @xmath191 .",
    "figure  [ fig : sim1](a ) shows the evolution of the lyapunov function  @xmath80 and figure  [ fig : sim1](b ) shows the number of events triggered over time by each strategy .",
    "[ ll][ll]@xcite [ ll][ll]proposed [ cc][cc ] [ cc][cc]@xmath94 [ cc][cc]@xmath192 [ cc][cc]@xmath193 [ cc][cc]@xmath194 [ cc][cc]@xmath189 [ cc][cc]@xmath195 [ cc][cc]@xmath196 [ cc][cc]@xmath197 [ cc][cc]@xmath198 [ cc][cc]@xmath199 [ cc][cc]@xmath200 [ cc][cc]@xmath201 [ cc][cc]@xmath202 [ cc][cc]@xmath203 [ cc][cc]@xmath204 [ cc][cc]@xmath205 [ cc][cc]@xmath206 [ cc][cc]@xmath207 [ cc][cc]@xmath208    ( -104,5.5)@xmath36 ( -65,0)time ( -185,0)time ( -235,68)@xmath80 ( -120,65)@xmath209 ( -104,5.5)@xmath36    figure  [ fig : sim2 ] shows an execution of event - triggered communication and control lawover a network of @xmath189 agents whose communication topology is described by a weight - balanced digraph . in this case , we do not compare it against the algorithm in  @xcite because the latter is only designed to work for undirected graphs .",
    "[ ll][ll]@xcite [ ll][ll]proposed [ cc][cc ] [ cc][cc]@xmath94 [ cc][cc]@xmath192 [ cc][cc]@xmath193 [ cc][cc]@xmath194 [ cc][cc]@xmath189 [ cc][cc]@xmath195 [ cc][cc]@xmath196 [ cc][cc]@xmath197 [ cc][cc]@xmath198 [ cc][cc]@xmath199 [ cc][cc]@xmath200 [ cc][cc]@xmath201 [ cc][cc ] [ cc][cc ] [ cc][cc ] [ cc][cc ] [ cc][cc]@xmath189 [ cc][cc]@xmath210 [ cc][cc]@xmath211 [ cc][cc]@xmath212 [ cc][cc]@xmath213 [ cc][cc]@xmath214 [ cc][cc]@xmath215 [ cc][cc]@xmath208 [ cc][cc]@xmath216 [ cc][cc]@xmath217    ( -104,5.5)@xmath36 ( -65,0)time ( -185,0)time ( -240,58)@xmath80 ( -124,62)@xmath209 ( -104,5.5)@xmath36    we have also compared the periodic event - triggered communication and control lawwith a periodic implementation of laplacian consensus , cf",
    ".  @xcite . for the latter ,",
    "trajectories are guaranteed to converge if the timestep satisfies  @xmath218 , where @xmath219 is the maximum degree of the graph  @xmath220 .",
    "figure  [ fig : sim3 ] shows this comparison using  @xmath221 and also demonstrates the effect of @xmath222 on the executions of the periodic event - triggered communication and control law . for simplicity ,",
    "we have used @xmath223 to be the same for all agents in each execution .",
    "one can observe the trade - off between communication and convergence rate for varying  @xmath224 : higher  @xmath224 results in less communication but slower convergence compared to smaller values of  @xmath224 .",
    "[ ll][ll]@xcite [ ll][ll]proposed [ cc][cc ] [ cc][cc]@xmath94 [ cc][cc]@xmath192 [ cc][cc]@xmath193 [ cc][cc]@xmath194 [ cc][cc]@xmath189 [ cc][cc]@xmath195 [ cc][cc]@xmath196 [ cc][cc]@xmath197 [ cc][cc]@xmath198 [ cc][cc]@xmath199 [ cc][cc]@xmath200 [ cc][cc]@xmath201 [ cc][cc ] [ cc][cc ] [ cc][cc ] [ cc][cc ] [ cc][cc]@xmath189 [ cc][cc]@xmath210 [ cc][cc]@xmath211 [ cc][cc]@xmath212 [ cc][cc]@xmath213 [ cc][cc]@xmath214 [ cc][cc]@xmath215 [ cc][cc]@xmath208 [ cc][cc]@xmath206 [ cc][cc]@xmath207    ( -104,5.5)@xmath36 ( -65,0)time ( -185,0)time ( -235,60)@xmath80 ( -121,65)@xmath209 ( -104,5.5)@xmath36 ( -45,35)@xmath225 ( -36,25)@xmath226 ( -36,16)@xmath227",
    "we have proposed novel event - triggered communication and control strategies for the multi - agent average consensus problem . among the novelties of our first design",
    ", we highlight that it works over weight - balanced directed communication topologies , does not require individual agents to continuously access information about the states of their neighbors , and does not necessitate a priori agent knowledge of global network parameters to execute the algorithm .",
    "we have shown that our algorithms exclude the possibility of zeno behavior and identified conditions such that the network state exponentially converges to agreement on the initial average of the agents state .",
    "we have also provided a lower bound on the convergence rate and characterized the network convergence when the topology is switching under a weaker form of connectivity .",
    "finally , we have developed a periodic implementation of our event - triggered law that relaxes the need for agents to evaluate the relevant triggering functions continuously and provided a sufficient condition on the sampling period that guarantee its the asymptotic correctness .",
    "future work will explore scenarios with more general dynamics and physical sources of error such as communication delays or packet drops , the extension of our design and results to distributed convex optimization and other coordination tasks , and further analysis of trigger designs that rule out the possibility of zeno behavior .",
    "this research was supported in part by nsf award cns-1329619 .",
    "k.  j. astrm and b.  m. bernhardsson .",
    "comparison of riemann and lebesgue sampling for first order stochastic systems . in _",
    "ieee conf .  on decision and control _ ,",
    "pages 20112016 , las vegas , nv , december 2002 ."
  ],
  "abstract_text": [
    "<S> this paper proposes a novel distributed event - triggered algorithmic solution to the multi - agent average consensus problem for networks whose communication topology is described by weight - balanced , strongly connected digraphs . </S>",
    "<S> the proposed event - triggered communication and control strategy does not rely on individual agents having continuous or periodic access to information about the state of their neighbors . </S>",
    "<S> in addition , it does not require the agents to have a priori knowledge of any global parameter to execute the algorithm . </S>",
    "<S> we show that , under the proposed law , events can not be triggered an infinite number of times in any finite period ( i.e. , no zeno behavior ) , and that the resulting network executions provably converge to the average of the initial agents states exponentially fast . </S>",
    "<S> we also provide weaker conditions on connectivity under which convergence is guaranteed when the communication topology is switching . </S>",
    "<S> finally , we also propose and analyze a periodic implementation of our algorithm where the relevant triggering functions do not need to be evaluated continuously . </S>",
    "<S> simulations illustrate our results and provide comparisons with other existing algorithms .        </S>",
    "<S> discrete event systems , event - triggered control , average consensus , multi - agent systems , weight - balanced digraphs </S>"
  ]
}
{
  "article_text": [
    "@xmath0 is a local - search solver for computing models of theories in the logic @xmath2 , the propositional logic extended by cardinality atoms @xcite .",
    "it can serve as a processing back - end for the logic @xmath1 @xcite , an _ answer - set programming _ ( asp ) formalism based on the language of predicate calculus and , hence , different from typical asp systems that have origins in logic programming .    a _ clause _ in the logic @xmath2 is a formula @xmath3 , where each @xmath4 , @xmath5 , is a propositional atom , or a _ cardinality atom _ ( _ c - atom _ , for short )  an expression @xmath6 , where @xmath7 are propositional atoms and @xmath8 and @xmath9 are integers such that @xmath10 .",
    "a set of atoms @xmath11 is a _ model _ of a c - atom @xmath12 if @xmath13 . with this definition , the semantics of clauses and theories in the logic @xmath2 is a straightforward extension of the semantics of propositional logic .",
    "@xmath2 theories arise by grounding theories in the asp logic @xmath1 by means of the grounder program _",
    "@xcite .",
    "we discuss here an implementation of @xmath0 .",
    "we restrict the discussion to most essential concepts and options only . for more details and bibliography on related work on propositional logic extended by c - atoms and pseudo - boolean constraints",
    ", we refer to @xcite , which introduced @xmath0 , and to @xcite .",
    "as other wsat - like local - search solvers @xcite , @xmath0 searches for models in a series of _ tries _ , starting with a random assignment of truth values to atoms .",
    "each try consists of steps , called _ flips _ , which produce `` new '' truth assignments by _ flipping _ the truth values of some of the atoms .",
    "if a flip produces a satisfying assignment , this try is terminated and another one starts .",
    "@xmath0 supports several strategies to select atoms for flipping .",
    "all of them require a parameter called the _ noise level_. it determines the probability of applying a random walk step in order to escape from a local minimum .",
    "the maximum numbers of tries and flips , and the noise level are set from the command line by means of the options -t , -c and -n , respectively .",
    "@xmath0 is different from other similar algorithms in the way in which it computes the _ break - count _ of an atom ( used to decide which atom to flip ) and in the way it executes a flip .",
    "the choice of the break - count computation method or of the way a flip is defined determines a particular local - search strategy in @xmath0 . at present",
    ", @xmath0 supports three basic methods . +",
    "* virtual break - count .",
    "* we define virtual break - counts with respect to a propositional theory , in which c - atoms are replaced by their equivalent propositional representations .",
    "however , in the actual computation we use the original theory ( with c - atoms ) rather than its propositional - logic counterpart ( with c - atoms removed ) , as the latter is usually exponentially larger . to invoke virtual break - count method",
    ", we use the option -vb .",
    "the virtual break - count method is applicable with all @xmath2 theories and is a default method of @xmath0 . +",
    "* double flip . *",
    "it applies only to _ simple _",
    "@xmath2 theories that are specified by the following two conditions : ( a ) all the c - atoms appear in unit clauses , and ( b ) all the sets of atoms in the c - atoms are pairwise disjoint .",
    "a flip is designed so that all unit clauses built of c - atoms remain satisfied .",
    "thus , on occasion , two atoms will change their truth values in one flip step .",
    "the break - count is defined with respect to regular propositional clauses as in @xmath14 . to invoke this method",
    ", we use the option -df . +",
    "* permutation flip .",
    "* it applies to theories , in which c - atoms are used solely to specify permutations ( for instance , when defining an assignment of queens in the @xmath9-queens problem ) .",
    "flips realize an inverse operation on permutations and , hence , transform a permutation into another permutation . as a consequence , all unit clauses built of c - atoms are always satisfied . to accomplish that , four atoms must have their truth values changed in one flip step .",
    "the break - count is defined with respect to regular propositional clauses of the theory in the same way as in @xmath14 .",
    "we invoke this method with the option -pf .",
    "@xmath0 accepts input files containing @xmath2 theories described in a format patterned after that of cnf dimacs .",
    "the first line is of the form p < na > < nc > , where na and nc are the number of propositional atoms and clauses in the theory , respectively . the following lines list clauses .",
    "a clause @xmath15 , is written as a1 ... ar , a(r+1 ) ... as , where each ai is a positive integer ( representing the corresponding atom @xmath4 ) , or an expression of the form \\{k m c1 ... cn } ( representing a c - atom @xmath12 ) .    @xmath0 outputs models that it finds as well as several statistics to standard output device ( or , depending on the options used , to a file in a user - readable format ) .",
    "it also creates a file ` wsatcc.stat ` that stores records summarizing every call to @xmath0 and key statistics pertaining to the computation .",
    "typical call to @xmath0 looks as follows : wsatcc -f file -t 200 -c 150000 -n 10 100 .",
    "it results in @xmath0 looking for models to the @xmath2 theory specified in file , by running 200 tries , each consisting of 150000 flips .",
    "the noise level is set at 10/100 ( = 0.1 ) .",
    "@xmath0 solver and several related utilities can be obtained from http://www.cs.uky.edu / ai / wsatcc/. @xmath0 works on most unix - like operating systems that provide ` gcc ` compiler .",
    "the utilities require perl 5 or greater . for more details on installation",
    ", we refer to @xcite .",
    "our experiments demonstrate that @xmath0 is an effective tool to compute models of _ satisfiable _ @xmath2 theories and can be used as a processing back - end for the asp logic @xmath1 . in @xcite",
    ", we showed that @xmath0 is often much faster than a local - search sat solver @xmath14 and has , in general , a higher success rate ( likelihood that it will find a model if an input theory has one ) . in @xcite , we used @xmath0 to compute several new lower bounds for van der waerden numbers . here",
    ", we will discuss our recent comparisons of @xmath0 with @xmath16 @xcite , a solver for propositional theories extended with pseudo - boolean constraints ( for which we developed utilities allowing it to accept @xmath2 theories ) .",
    "we tested these programs on @xmath2 theories encoding instances of the vertex - cover and _ open @xmath9-queens _ problems - queens problem , given an initial `` attack - free '' assignment of @xmath17 ( @xmath18 ) queens on the @xmath19 board , the goal is to assign the remaining @xmath20 queens so that the resulting assignment is also `` attack - free '' . ] .",
    "we generated these theories by grounding appropriate @xmath1 theories extended with randomly generated problem instances .",
    "table [ tab1 ] shows results obtained by running @xmath0 ( both _ -vb _ and _ -df _ versions are applicable in this case ) and @xmath16 to find vertex covers of sizes 1035 , 1040 and 1045 in graphs with 2000 vertices and 4000 edges .",
    "the first column shows the size of the desired vertex cover and the number of graphs ( out of 50 that we generated ) , for which we were able to find a solution by means of at least one of the methods used .",
    "the remaining columns summarize the performance of the three algorithms used : @xmath21 , @xmath22 , and @xmath16 .",
    "the entries show the _ time _ , in seconds , needed to complete computation for all 50 instances and the _ success rate _ ( the percentage of cases where the method finds a solution to all the instances , for which at least one method found a solution ) .    .vertex",
    "cover : large graphs [ cols=\"<,>,>,>\",options=\"header \" , ]     here , we include another measurement for local search solvers .",
    "the second number shows the average number of flips each method uses in finding one solution .",
    "@xmath21 is faster than @xmath16 even though they have the similar number of flips .",
    "@xmath23 is even more powerful because it uses the fewest number of flip and is the fastest .",
    "smodels can only find solutions for 6 instances within the 1000-second limit and turns out to be the slowest .",
    "we tested the version _ -pf _ with one of the encodings of the hamiltonian - cycle problem and discovered it is much less effective there .",
    "conditions under which the version _ -pf _ is effective remain to be studied .",
    "this research was supported by the national science foundation under grants no . 0097278 and 0325063 .          d.  east and m.  truszczyski .",
    "propositional satisfiability in answer - set programming . in _ proceedings of ki-2001",
    "_ , lnai 2174 .",
    "springer verlag , 2001 .",
    "full version submitted for publication ( available at http://xxx.lanl.gov/abs/cs.lo/0211033 ) .",
    "i.  niemel and p.  simons . extending the smodels system with cardinality and weight constraints . in j.",
    "minker , editor , _ logic - based artificial intelligence _ , pages 491521 .",
    "kluwer academic publishers , 2000 ."
  ],
  "abstract_text": [
    "<S> we describe @xmath0 , a local - search solver for computing models of theories in the language of propositional logic extended by cardinality atoms . </S>",
    "<S> @xmath0 is a processing back - end for the logic @xmath1 , a recently proposed formalism for answer - set programming . </S>"
  ]
}
{
  "article_text": [
    "robotic motion planning is a fundamental problem where a control sequence is found to steer a robot from the initial state to the goal set , while enforcing the environmental rules .",
    "it is well - known that the problem is computationally challenging  @xcite .",
    "the situation is even worse for multi - robot motion planning since the computational complexity exponentially grows as the robot number .    for multi - robot motion planning ,",
    "non - cooperative game theoretic controller synthesis is interesting in two aspects : _ descriptive _ and _ perspective_. from the descriptive point of view , nash equilibrium is desirable in inherently competitive scenarios .",
    "more specifically , nash equilibrium characterizes the stable scenarios among inherently self - interested players where none can benefit from unilateral deviations . from the perspective point of view",
    ", non - cooperative game theoretic learning holds the promise of providing computationally efficient algorithms for multi - robot controllers where the robots are assumed to be self - interested .",
    "although nash equilibrium may not be socially optimal , game theoretic approaches remain useful when the computational efficiency dominates .",
    "there have been limited results on rigorous analysis of game theoretic controller synthesis for multi - robot motion planning .",
    "the paper  @xcite tackles multi - robot motion planning in the framework of feedback differential games .",
    "however , it lacks of the rigorous analysis of the algorithm s convergence and computational complexity .",
    "in addition , static game theory has been used to synthesize distributed control schemes to steer multiple vehicles to stationary and meaningful configurations ; e.g. , in  @xcite for optimal sensor deployment , in  @xcite for vehicle routing and in  @xcite for target assignment .",
    "_ contributions .",
    "_ this paper presents the first distributed , anytime algorithm to compute open - loop nash equilibrium for non - cooperative robots .",
    "more specifically , we consider a class of multi - robot motion planning problems where each robot is associated with multiple objectives and decoupled task specifications .",
    "the problems are formulated as an open - loop non - cooperative differential game . by leveraging the rrg algorithm in  @xcite ,",
    "iterative better response and model checking , a distributed anytime computation algorithm , namely the inash - trajectory algorithm , is proposed to find a nash equilibrium of the game .",
    "we formally analyze the algorithm convergence , the price of stability as well as the computational complexity and communication cost .",
    "the algorithm performance is demonstrated by a number of numerical simulations .",
    "_ literature review . _ sampling based algorithms have been demonstrated to be efficient in addressing robotic motion planning in high - dimension spaces .",
    "the rapidly - exploring random tree ( rrt ) algorithm and its variants ; e.g. , in  @xcite , are able to find a feasible path quickly .",
    "recently , two novel algorithms , prm@xmath0 and rrt@xmath0 , have been developed in  @xcite , and shown to be computationally efficient and asymptotically optimal . in  @xcite ,",
    "a class of sampling - based algorithms is proposed to compute the optimal trajectory satisfying the given task specifications in the form of deterministic @xmath1-calculus .    regarding the multi - robot open - loop motion planning",
    ", the approaches mainly fall into three categories : centralized planning in ; e.g. ,  @xcite , decoupled planning in ; e.g. ,  @xcite and priority planning in ; e.g. ,  @xcite .",
    "centralized planning is complete but computationally expensive . in contrast , decoupled and priority planning can generate solutions quicker , but are incomplete .",
    "however , the existing algorithms assume the robots are cooperative and are not directly applicable to compute nash equilibrium where none of self - interested robots is willing to unilaterally deviate from .",
    "another set of relevant papers are concerned with numerical methods for feedback differential games .",
    "there have been a very limited number of feedback differential games whose closed - form solutions are known , including homicidal - chauffeur and the lady - in - the - lake games  @xcite .",
    "the methods based on partial differential equations ; e.g. , in  @xcite , viability theory ; e.g. , in  @xcite and level - set methods , e.g. , in  @xcite have been proposed to determine numerical solutions to differential games . however , the papers aforementioned only study one - player and two - player differential games .",
    "multi - player linear - quadratic differential games have been studied in ; e.g. ,  @xcite .",
    "consider a team of robots , labeled by @xmath2 .",
    "each robot is associated with a dynamic system governed by the following differential equation : @xmath3 where @xmath4 is the state of robot  @xmath5 , and @xmath6 is the control of robot  @xmath5 . for system  ,",
    "the set of admissible control strategies for robot  @xmath5 is given by : @xmath7 where @xmath8 .",
    "for each robot  @xmath5 , @xmath9 } : [ 0,+\\infty ) \\rightarrow \\mathcal{x}_i$ ] is a dynamically feasible trajectory if there are @xmath10 and @xmath11 \\rightarrow \\mathcal{u}_i$ ] such that : @xmath12 @xmath13}(t ) = f_i(\\sigma^{[i]}(t ) , u_i(t))$ ] ; @xmath14 @xmath9}(0 ) = x^{[i]}_{\\rm init}$ ] ; @xmath15 @xmath9}(t)\\in \\mathcal{x}_i^f$ ] for @xmath16 $ ] ; @xmath17 @xmath9}(t)\\in\\mathcal{x}_i^g$ ] .",
    "the set of dynamically feasible trajectories for robot  @xmath5 is denoted by @xmath18 .",
    "note that the trajectories in @xmath18 do not account for the inter - robot collisions .",
    "let @xmath19 be a finite set of atomic propositions and @xmath20 associates each state in @xmath21 with a set of atomic propositions in @xmath19 . given a trajectory @xmath9}$ ] of  , define by @xmath22})$ ] the set of time instances when @xmath23}(t))$ ] changes .",
    "the word @xmath24 } ) \\triangleq \\{w_0 , w_1 , \\cdots\\}$ ] generated by the trajectory @xmath9}$ ] is such that @xmath25}(t_i))$ ] where @xmath26 and @xmath22 } ) = \\{t_1 , t_2 , \\cdots\\}$ ] .    in this paper",
    ", we consider reachability tasks where each robot has to reach an open goal set @xmath27 and simultaneously maintain the state @xmath28 inside a closed constraint set @xmath29 .",
    "as an example , let @xmath30 be the set of atomic propositions .",
    "the proposition @xmath31 is true if @xmath32 and similarly , @xmath33 is true if @xmath34 .",
    "consider an example task specification @xmath35 expressed using the finite fragment of linear temporal logic , ( fltl )  @xcite as @xmath36 where @xmath37 is the eventually operator and @xmath38 stands for the always operator .",
    "if the word formed by a trajectory @xmath9}$ ] is such that for @xmath24 } ) = w_0 , w_1 , \\ldots , $ ] there exists some @xmath39 such that @xmath40 and @xmath41 for all @xmath42 , we say that the word @xmath24})$ ] satisfies the ltl formula @xmath35 .",
    "let us note that fltl formulae such as those considered here can be automatically translated into automata .",
    "the word @xmath24})$ ] satisfies the formula if it belongs to the language of the corresponding automaton",
    ". please refer  @xcite for a more thorough exposition of these concepts .",
    "denote by @xmath43\\subseteq \\sigma_i$ ] the set of trajectories fulfilling @xmath35 .",
    "each robot then determines a trajectory belonging to @xmath43 $ ] .",
    "in addition to finding a trajectory that satisfies these specifications , the robot may have several other objectives such as reaching in the goal region in the shortest possible time . to quantify these objectives , we define @xmath44 as the cost functional which maps each trajectory in @xmath45 represents the product . ] to a non - negative cost vector and each component of @xmath46 corresponds to an objective of the robots . in",
    "what follows , we assume that @xmath46 is continuous .",
    "in addition , the robots want to avoid the inter - robot collisions ; i.e. , keeping the state @xmath47 outside the collision set @xmath48 .",
    "the above multi - robot motion planning problem is formulated as an open - loop non - cooperative game where each robot seeks to find a trajectory which is collision - free , fulfills its task specifications and minimizes the induced cost given the trajectories of other robots .",
    "that is , given @xmath49}\\in \\sigma_{-i}$ ] to denote all the robots other than @xmath5 . ]",
    ", each robot  @xmath5 wants to find a best trajectory in the feasible set @xmath50})\\triangleq \\{\\sigma^{[i]}\\in\\sigma_i\\;|\\ ; \\sigma^{[i]}\\in[\\phi_i],\\;\\ ; { \\tt collisionfreepath}(\\sigma^{[i]},\\sigma^{[-i]})=1\\}$ ] where the procedure @xmath51 will be defined later .",
    "the solution notion we will use is nash equilibrium formally stated as follows :    the collection of trajectories @xmath52})_{i\\in \\mathcal{v}_r}\\in\\sigma$ ] is a nash equilibrium if for any @xmath53 , it holds that @xmath54}\\in { \\tt feasible}_i(\\sigma_i,\\bar{\\sigma}^{[-i]})$ ] and there is no @xmath9}\\in { \\tt feasible}_i(\\sigma_i,\\bar{\\sigma}^{[-i]})$ ] such that @xmath55})\\prec{\\tt cost}(\\bar{\\sigma}^{[i]})$ ] is defined on @xmath56 and given by : for @xmath57 , @xmath58 if and only if @xmath59 for all @xmath60 .",
    "note that @xmath61 is a partial order on @xmath56.].[def2 ]    intuitively , none of the robots can decrease its cost by _ unilaterally _ deviating from a nash equilibrium .",
    "denote by @xmath62 the set of nash equilibria .",
    "note that definition  [ def2 ] is an extension of the standard one ; e.g. , in  @xcite where the cost functional of each player is scalar .",
    "we will compare nash equilibrium with social ( pareto ) optimum defined as follows :    the collection of trajectories @xmath52})_{i\\in \\mathcal{v}_r}\\in\\sigma$ ] is socially ( pareto ) optimal if there is no @xmath63})_{i\\in \\mathcal{v}_r}\\in \\sigma$ ] such that @xmath64 } ) \\prec \\bigoplus_{i\\in \\mathcal{v}_r}{\\tt cost}(\\bar{\\sigma}^{[i]})$ ] .",
    "represents the summation.][def1 ]    denote by @xmath65 the set of social optimum . throughout this paper",
    ", we assume that @xmath66",
    ". in general , a nash equilibrium may not be socially optimal .",
    "when @xmath46 is scalar , the gap between the set of nash equilibrium and the set of social optimum is usually characterized by price of anarchy and price of stability in ; e.g. ,  @xcite .      here",
    "we define a set of primitives which will be used in the subsequent sections .    [",
    "[ sampling ] ] sampling + + + + + + + +    the @xmath67 procedure returns uniformly random samples from set @xmath68 .",
    "[ [ local - steering ] ] local steering + + + + + + + + + + + + + +    given two states @xmath69 , the @xmath70 procedure returns a state @xmath71 by steering @xmath72 towards @xmath73 for at most @xmath74 distance ; i.e. , @xmath75 .",
    "in addition to this , we require that @xmath76 , the trajectory connecting states @xmath72 and @xmath73 , is such that @xmath77 , i.e. , the label @xmath78 changes at most once .",
    "this property of the local steering function is called _ trace inclusivity _  @xcite .    [",
    "[ nearest - neighbor ] ] nearest neighbor + + + + + + + + + + + + + + + +    given a state @xmath72 and a finite set @xmath79 of states , the @xmath80 procedure returns the state in @xmath79 that is closest to @xmath72 ; i.e. , @xmath81 .",
    "[ [ near - vertices ] ] near vertices + + + + + + + + + + + + +    given a state @xmath72 , a finite set @xmath79 and a positive real number @xmath82 , the @xmath83 procedure returns the states in @xmath79 where each of them is @xmath82-close to @xmath72 ; @xmath84 .",
    "[ [ path - generation ] ] path generation + + + + + + + + + + + + + + +    given a directed graph @xmath85 with a single root and no directed cycles , the @xmath86 procedure returns the set of paths from the root to the leaf vertices .",
    "[ [ collision - check - of - paths ] ] collision check of paths + + + + + + + + + + + + + + + + + + + + + + + +    given a path @xmath87 and a set of paths @xmath88 , the @xmath89 procedure returns @xmath90 if @xmath87 collides any path in @xmath88 ; i.e. , @xmath91 ; otherwise returns @xmath92 .    [ [ feasible - paths ] ] feasible paths + + + + + + + + + + + + + +    given the path sets of @xmath18 and @xmath49}$ ] , @xmath50})$ ] is the set of paths @xmath9}\\in\\sigma_i$ ] such that for any @xmath9}\\in\\sigma_i$ ] , it holds that @xmath93},\\sigma^{[-i ] } ) = 1 $ ] .",
    "[ [ weakly - feasible - paths ] ] weakly feasible paths + + + + + + + + + + + + + + + + + + + + +    given the path sets of @xmath18 and @xmath49}$ ] , @xmath94})$ ] is a subset of @xmath50})$ ] and consists of the paths @xmath9}$ ] where for each path @xmath9}$ ] , there are a sequence of paths @xmath95}_{\\ell}\\}$ ] with @xmath9}_{\\ell}\\in\\sigma_i$ ] and a diminishing and non - negative sequence @xmath96 such that @xmath12 @xmath9}_{\\ell}$ ] converges to @xmath9}$ ] ; @xmath14 @xmath97}_{\\ell}(t),\\delta_{\\ell})\\in\\mathcal{x}_i^f$ ] ; @xmath14 @xmath98}_{\\ell}(t)-\\sigma^{[j]}(t)\\|\\geq \\epsilon+\\delta_{\\ell}$ ] for all @xmath99 for all @xmath100 .",
    "[ [ strongly - feasible - paths ] ] strongly feasible paths + + + + + + + + + + + + + + + + + + + + + + +    given the path sets of @xmath18 and @xmath49})$ ] , @xmath101})$ ] is a subset of @xmath50})$ ] and consists of the paths where for each path @xmath9}$ ] , there are a sequence of paths @xmath95}_{\\ell}\\}$ ] with @xmath9}_{\\ell}\\in\\sigma_i$ ] , a diminishing and non - negative sequence @xmath96 and @xmath102 such that @xmath12 @xmath9}_{\\ell}$ ] converges to @xmath9}$ ] ; @xmath14 @xmath97}_{\\ell}(t),\\delta_{\\ell})\\in\\mathcal{x}_i^f$ ] ; @xmath14 @xmath98}(t)-\\sigma^{[j]}(t)\\|\\geq \\epsilon+\\delta$ ] for all @xmath99 .",
    "in this section , we propose the inash - trajectory algorithm to solve the open - loop game defined above .",
    "it is followed by the algorithm analysis and discussion .",
    "the inash - trajectory algorithm leverages the rrg algorithm in  @xcite , iterative better response and model checking , and informally stated as follows . at each iteration",
    "@xmath103 , each robot  @xmath5 samples @xmath21 once , and adds the new sample @xmath104}$ ] to its vertex set @xmath105}_k$ ] .",
    "robot  @xmath5 extends its previously generated graph @xmath106}_{k-1}$ ] towards the new sample @xmath104}$ ] via local steering , and obtains the new graph @xmath106}_k$ ] .",
    "after they finish the construction of the new graphs , the active robots play a game on their product graph for _ one _ round in a _ sequential _ way .",
    "robot  @xmath5 is active at time  @xmath103 if its goal set is reachable through some path of @xmath106}_k$ ] .",
    "the active robot with the least index , say  @xmath5 , first chooses a smaller - cost and feasible path on @xmath106}_k$ ] by performing the @xmath107 procedure in algorithm  [ algorithm : betterresponse ]",
    ". then robot  @xmath5 informs all other robots the new path .",
    "after that , the active robot with the second least index , say  @xmath108 , performs the better response to update its path on @xmath109}_k$ ] and the new path is sent to other robots .",
    "the remaining active robots sequentially update the planned paths on their own graphs and announce the new paths to others . once all the active robots finish the path updates , the game terminates for the current iteration  @xmath103 . at the next iteration",
    "@xmath110 , the same steps are repeated .",
    "the inash - trajectory algorithm is formally stated in algorithm  [ algorithm : inash - trajectory ] .",
    "the inash - trajectory algorithm is an anytime algorithm ; i.e. , assuming a solution can be found within the allotted planning time , then it is continually improved while planning time remains      the @xmath111 procedure is similar to that in the rrg algorithm  @xcite with the difference that the edges leaving from the new sample are not added .",
    "instead , @xmath106}_k$ ] is identical to the auxiliary graph @xmath112 used in the proof of theorem 38 in  @xcite for rrt@xmath0 .",
    "notice that @xmath106}_k$ ] is a directed graph and does not include any directed circle .",
    "so there are a finite number of paths for the root to reach any leaf vertex and the @xmath113 procedure in algorithm  [ algorithm : betterresponse ] is well - defined .",
    "the tree structure returned by rrt@xmath0 in  @xcite is more computationally efficient than the graph @xmath106}_k$ ] in our algorithm .",
    "however , the rewiring step in rrt@xmath0 induces that @xmath106}_{k-1}$ ] may not be a subgraph of @xmath106}_k$ ] .",
    "this property is crucial for the algorithm convergence to nash equilibria in the next section . to verify if @xmath63 } \\cap g_k^{[i ] } ) \\in [ \\phi_i]$ ] on line 4 of the @xmath107 procedure , we check if the sequence @xmath114}\\cap g^{[i]}_k)$ ] satisfies @xmath35 by translating @xmath35 into the corresponding buchi automaton .",
    "@xmath115 @xmath116    @xmath117}_{k-1}$ ] @xmath118}_{k-1}$ ] @xmath119})$ ] @xmath120})$ ]    @xmath121}_k \\leftarrow { \\tt pathgeneration}(g^{[i]}_k)$ ] @xmath121}_{\\rm f } \\leftarrow \\emptyset$ ] @xmath9}_{\\rm min } \\leftarrow \\sigma^{[i]}_{k-1}$ ]      in this section , we analyze the asymptotic optimality , computational complexity , and communication cost of the inash - trajectory algorithm . before doing that",
    ", we first prove the existence of nash equilibrium .",
    "it holds that @xmath122 and @xmath123 is non - empty.[lem1 ]    we will show @xmath122 by contradiction . assume @xmath124 with @xmath125 being the complement of @xmath123 , and pick any @xmath63})_{i\\in \\mathcal{v}_r}\\in\\pi_{\\rm so } \\cap \\overline{\\pi}_{\\rm ne}$ ] . since @xmath63})_{i\\in \\mathcal{v}_r}\\notin\\pi_{\\rm ne}$",
    "] , there is some @xmath53 and @xmath54}\\in { \\tt feasible}_i(\\sigma_i,\\sigma^{[-i]})$ ] such that @xmath126 } ) \\prec { \\tt cost}(\\sigma^{[i]})$ ] .",
    "let @xmath52})_{i\\in \\mathcal{v}_r}$ ] with @xmath127 } = \\sigma^{[j]}$ ] for @xmath99 .",
    "note that @xmath127}\\in { \\tt feasible}_j(\\sigma_j,\\bar{\\sigma}^{[-j]})$ ] for all @xmath99 , and @xmath126 } ) = { \\tt cost}(\\sigma^{[i]})$ ] .",
    "it implies that @xmath128 } ) \\prec \\bigoplus_{i\\in \\mathcal{v}_r}{\\tt cost}(\\sigma^{[i]})$ ] contradicting that @xmath63})_{i\\in \\mathcal{v}_r}$ ] is socially optimal .",
    "therefore , @xmath122 .",
    "since @xmath129 is non - empty , so is @xmath123 .    in",
    "what follows , we establishes the following two instrumental results for asymptotic optimality .",
    "in particular , lemma  [ lem3 ] shows that given @xmath49}$ ] , any path in @xmath94})$ ] can be approximated by a sequence of paths in @xmath130}_k,\\sigma^{[-i]})\\}_{k\\geq0}$ ] .",
    "lemma  [ lem4 ] shows that @xmath131})$ ] is a subset of @xmath9}\\in { \\tt strong feasible}_i(\\sigma_i,\\sigma^{[-i]}_k)$ ] for all but a finite @xmath103 where @xmath132}_k\\}_{k\\geq0}$ ] converges to @xmath133}$ ] .",
    "consider any @xmath53 and @xmath49}\\in \\bigotimes_{j\\neq i}\\sigma_j$ ] .",
    "for any @xmath134 , there is @xmath10 such that for any @xmath135 and @xmath9}\\in { \\tt weakfeasible}_i(\\sigma_i,\\sigma^{[-i]})$ ] , there is a path @xmath136}_k\\in { \\tt feasible}_i(g^{[i]}_k,\\sigma^{[-i]})$ ] such that @xmath137}_k ) - { \\tt cost}(\\sigma^{[i]})\\|\\leq\\varepsilon$].[lem3 ]    recall that @xmath106}_k$ ] is identical to the auxiliary graph @xmath112 used in the proof of theorem 38 for rrt@xmath0 .",
    "one can finish the proof by following the lines for theorem 38 in  @xcite and using the fact of @xmath46 being continuous .",
    "assume that @xmath138}_k\\}_{k\\geq0}$ ] converges to @xmath127}$ ] for each @xmath139 .",
    "there is @xmath140 such that for each @xmath9}\\in { \\tt strong feasible}_i(\\sigma_i,\\bar{\\sigma}^{[-i]})$ ] , it holds that @xmath9}\\in { \\tt strong feasible}_i(\\sigma_i,\\sigma^{[-i]}_k)$ ] for all @xmath141.[lem4 ]    since @xmath138}_k\\}_{k\\geq0}$ ] converges to @xmath127}$ ] , there is @xmath140 such that @xmath142}(t)-\\sigma^{[j]}_k(t)\\|\\leq \\frac{\\delta}{2}$ ] for all @xmath141 and @xmath139 .",
    "recall that @xmath9}\\in { \\tt strong feasible}_i(\\sigma_i,\\bar{\\sigma}^{[-i]})$ ]",
    ". then there are @xmath95}_{\\ell}\\}$ ] converging to @xmath9}$ ] , @xmath96 and @xmath143 such that @xmath97}_{\\ell}(t),\\delta_{\\ell})\\in \\mathcal{x}_i^f$ ] and @xmath98}(t)-\\bar{\\sigma}^{[j]}(t)\\|\\geq \\epsilon+\\delta$ ] .",
    "this further implies that @xmath98}(t)-\\sigma^{[j]}_k(t)\\|\\geq \\epsilon+\\frac{\\delta}{2}$ ] for all @xmath141 .",
    "we then conclude that @xmath9}\\in { \\tt strong feasible}_i(\\sigma_i,\\sigma^{[-i]}_k)$ ] for all @xmath141 .",
    "let @xmath144 be the set of limit points of @xmath95}_k\\}_{i\\in \\mathcal{v}_r}$ ] .",
    "we are ready to show the convergence of the inash - trajectory algorithm .",
    "there is @xmath145}_{\\ell}\\geq0 $ ] such that @xmath146 } ) = \\bar{c}^{[i]}_{\\ell}$ ] for any @xmath147}\\}_{i\\in \\mathcal{v}_r}\\in\\hat{\\sigma}$ ] .",
    "in addition , any limit point @xmath147}\\}_{i\\in \\mathcal{v}_r}$ ] is a nash equilibrium.[the2 ]    first of all , notice that @xmath148 .",
    "it renders that the probability of @xmath149 exponentially decays to zero . without loss of any generality , we consider @xmath150 for @xmath151 in the remainder of the proof .",
    "consider iteration @xmath103 and assume that robots @xmath152 have updated their paths via step 16 in the inash - trajectory algorithm .",
    "it is the turn of robot  @xmath5 to update the path via step 16 . since @xmath106}_{k}\\supseteq g^{[i]}_{k-1}$ ]",
    ", so @xmath153}_k = \\sigma^{[i]}_{k-1}\\in { \\tt feasible}_i(g^{[i]}_k,\\pi^{[i]}_k)$ ] .",
    "this implies @xmath154}_k ) \\preceq { \\tt cost}(\\tilde{\\sigma}^{[i]}_k ) = { \\tt cost}(\\sigma^{[i]}_{k-1}).\\end{aligned}\\ ] ] hence , for each @xmath60 , the sequence @xmath155}_k)\\}_{k\\geq0}$ ] is non - increasing . since @xmath156}_k)$ ]",
    "is lower bounded by zero , so the sequence @xmath155}_k)\\}$ ] converges to some constant @xmath145}_{\\ell}\\geq0 $ ] .",
    "hence , we have @xmath146 } ) = \\bar{c}^{[i]}_{\\ell}$ ] for any limit point @xmath147}\\}_{i\\in \\mathcal{v}_r}\\in\\hat{\\sigma}$ ] .",
    "we proceed to show that any limit point @xmath147}\\}_{i\\in \\mathcal{v}_r}\\in\\hat{\\sigma}$ ] is a nash equilibrium .",
    "there is a subsequence @xmath157 such that @xmath158}\\}_{k\\in \\pi_i}$ ] converge to @xmath54}$ ] .",
    "let @xmath159 . without loss of any generality , we assume that @xmath160 in the remainder of the proof .    for each @xmath53",
    ", there is no @xmath153}_k\\in { \\tt feasible}_i(g^{[i]}_k,\\pi^{[i]}_k)$ ] such that @xmath154}_k ) \\succeq { \\tt cost}(\\tilde{\\sigma}^{[i]}_k).\\label{e5}\\end{aligned}\\ ] ]    pick any @xmath134 . by lemma  [ lem3 ] with @xmath49 } = \\pi^{[i]}_k$ ] , there is @xmath161 such that for any @xmath136}_k\\in { \\tt weakfeasible}_i(\\sigma_i,\\pi^{[i]}_k)$ ] , there is @xmath153}_k\\in { \\tt feasible}_i(g^{[i]}_k,\\pi^{[i]}_k)$ ] such that @xmath162}_k ) \\preceq { \\tt cost}(\\hat{\\sigma}^{[i]}_k)+\\varepsilon \\textbf{1}_p,\\label{e6}\\end{aligned}\\ ] ] where @xmath163 is the column vector with @xmath164 ones .",
    "the combination of   and   renders that there is no @xmath136}_k\\in { \\tt weakfeasible}_i(\\sigma_i,\\pi^{[i]}_k)$ ] and @xmath135 such that : @xmath154}_k)\\succeq{\\tt cost}(\\hat{\\sigma}^{[i]}_k)+\\varepsilon\\textbf{1}_p.\\label{e7}\\end{aligned}\\ ] ]    notice that @xmath165}_k)\\subseteq{\\tt weakfeasible}_i(\\sigma_i,\\pi^{[i]}_k)\\subseteq { \\tt feasible}_i(\\sigma_i,\\pi^{[i]}_k)$ ] .",
    "combine this property ,   and lemma  [ lem4 ] with @xmath9}_k = \\pi^{[i]}_k$ ] , and we reach that there is @xmath166 such that there is no @xmath9}\\in { \\tt strongfeasible}_i(\\sigma_i,\\bar{\\sigma}^{[-i]})$ ] and @xmath141 such that : @xmath154}_k)\\succeq { \\tt cost}(\\sigma^{[i]})+\\varepsilon\\textbf{1}_p.\\label{e2}\\end{aligned}\\ ] ]    take the limit on @xmath103 in  . then there is no @xmath167}\\in { \\tt strongfeasible}_i(\\sigma_i,\\bar{\\sigma}^{[-i]})$ ] such that @xmath168})\\succeq { \\tt cost}({\\sigma}^{[i]})+\\varepsilon\\textbf{1}_p.\\label{e3}\\end{aligned}\\ ] ] since   holds for @xmath134 , no @xmath167}\\in { \\tt strongfeasible}_i(\\sigma_i,\\bar{\\sigma}^{[-i]})$ ] exists such that @xmath168})\\succeq { \\tt cost}({\\sigma}^{[i]}).\\label{e4}\\end{aligned}\\ ] ] since   holds for any  @xmath53",
    ", it establishes that the limit point @xmath147}\\}_{i\\in \\mathcal{v}_r}$ ] is a nash equilibrium .",
    "the completeness of the algorithm is a direct result of lemma  [ lem1 ] and the asymptotic convergence to @xmath123 .",
    "it completes the proof .",
    "next , we will analyze the computational complexity of the algorithm in terms of the @xmath51 procedure .",
    "let @xmath169 to be the total number of calls to the @xmath51 procedure at iteration  @xmath170 .",
    "it holds that @xmath171}_k|$ ] , where @xmath121}_k$ ] is defined in algorithm  [ algorithm : betterresponse].[lem2 ]    in lemma  [ lem2 ] , the quantity @xmath172}_k|$ ] is independent of the robot number .",
    "so the worst computational complexity of the inash - trajectory grows linearly in the robot number .",
    "it is in contrast to the exponential dependency in centralized path planning .",
    "the computational efficiency comes with the non - cooperative game theoretic formulation where each robot myopically responds to others .",
    "note that a nash equilibrium may not be socially optimal for the robot team .",
    "let @xmath173 to be the number of exchanged paths in iteration  @xmath170 .",
    "the following lemma shows the worst communication cost is linear in the robot number .",
    "@xmath174.[lem5 ]    at iteration  @xmath170 , all the active robots broadcast their planned trajectories before the path updates .",
    "then the active robots sequentially update and broadcast the new paths .",
    "so @xmath175 .",
    "in order to demonstrate the scalability of inash - trajectory algorithm , we consider the benchmark algorithm , the ioptimalcontrol algorithm .",
    "the key difference between the ioptimalcontrol and inash - trajectory algorithms is that a centralized authority in the ioptimalcontrol algorithm determines a social optimum on the product graph at each iteration . in the ioptimalcontrol algorithm",
    ", we use the notation @xmath176}_k)\\in[\\phi]$ ] for @xmath63}\\cap g^{[i]}_k)\\in[\\phi_i]$ ] for all @xmath177 .",
    "@xmath115 @xmath116    @xmath178}_{\\rm f})$ ]    the following theorem guarantees the asymptotic optimality of the ioptimalcontrol algorithm .",
    "any limit point @xmath147}\\}_{i\\in \\mathcal{v}_r}$ ] is a social optimum.[the3 ]    it is a direct result of theorem 38 in  @xcite .",
    "next , we will analyze the computational complexity of the algorithm in terms of the @xmath51 procedure .",
    "let @xmath179 to be the total number of calls to the @xmath51 procedure at iteration  @xmath170 .",
    "it holds that @xmath180}_k|$ ] , where @xmath181}_k$ ] is defined in algorithm  [ algorithm : optimaltrajectory].[lem6 ]    the above lemma shows that the computational complexity exponentially grows vs.  robot number .",
    "table  [ ta : com2 ] summarizes the comparison of the ioptimalcontrol and inash - trajectory algorithms where the prices of anarchy and stability are compared for the case @xmath182 . in particular , the price of stability ( pos )  @xcite is the ratio between the minimum additive cost function value in @xmath123 and that of one in @xmath129 , and defined as follows : @xmath183})}{\\bigoplus_{i\\in \\mathcal{v}_r}{\\tt cost}(\\bar{\\sigma}^{[i]})},\\end{aligned}\\ ] ] for any @xmath184 .",
    "by lemma  [ lem1 ] , we know @xmath185 and thus pos is equal to 1 .",
    "on the other hand , the price of anarchy ( poa )  @xcite is the ratio between the maximum additive cost function value in @xmath123 and that of one in @xmath129 , and given by : @xmath186})}{\\bigoplus_{i\\in \\mathcal{v}_r}{\\tt cost}(\\bar{\\sigma}^{[i]})},\\end{aligned}\\ ] ] for any @xmath184 .",
    "the value of poa depends on a number of factors ; e.g. , the obstacle locations , the dynamic systems and so on .",
    "it is interesting to find a lower bound on @xmath129 given more information as in ; e.g. ,  @xcite , and utilize mechanism design to eliminate the price of anarchy .",
    ".the comparison of the ioptimalcontrol and inash - trajectory algorithms [ cols=\"^,^,^ \" , ]     [ ta : com2 ]",
    "we perform two experiments in simulation to evaluate the performance of inash .",
    "the first involves 8 circular robots moving in an environment with randomly generated obstacles ( figure  [ fig : exp1]-left ) , while the second involves 6 robots in a traffic intersection scenario ( figure  [ fig : exp1]-right ) ; both involve state spaces consisting of first order dynamics and time .",
    "robots are holonomic discs with radii of @xmath187 meters .",
    "we compare inash to two prioritized methods that are not guaranteed to return a nash - equilibrium , but are arguably similar to our proposed algorithm .",
    "the first is the standard prioritized approach from @xcite .",
    "each robot builds its own random graph ; then robots select their paths in order such that the path of robot @xmath5 does not conflict with robots @xmath188 .",
    "the second is an any - time version of the prioritized method .",
    "each time robot @xmath5 finds a better path that does not conflict with the paths of robots @xmath189 , then for @xmath190 ( in order ) robot @xmath108 must choose a new path that does not conflict with robots @xmath191 .",
    "this differs from our algorithm ( where new paths must respect the paths of all other robots ) , and the solution is not guaranteed to converge to a nash equilibrium .    for experiments we consider the task specifications for each robot to be of the form @xmath192 , i.e. , each robot tries to reach a different goal region in the shortest possible distance while respecting the same constraint set @xmath193 .",
    "the automaton consists of two states ( see fig .  [",
    "fig : buchi ] ) .    at ( 0,0 ) ( q0 ) @xmath194 ; at ( 2.5 , 0 ) ( q1 ) @xmath195 ;    ( q0 ) edge [ loop above ] node @xmath196 ( q0 ) edge node @xmath197 ( q1 ) ( q1 ) edge [ loop above ] node @xmath33 ( q1 ) ;          | l | x | x | x | x | x | x | x | x | & & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 inash ( any - time ) & @xmath198 & @xmath199 & @xmath200 & @xmath201 & @xmath202 & @xmath203 & @xmath204 & @xmath205 prioritized & @xmath206 & @xmath207 & @xmath208 & @xmath209 & @xmath210 & @xmath211 & @xmath212 & @xmath213 prioritized ( any - time ) & @xmath214 & @xmath215 & @xmath216 & @xmath217 & @xmath218 & @xmath219 & @xmath220 & @xmath221     | c | c | c | c | c | c | c | c | +   + 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 + 20 & 19 & 18 & 20 & 16 & 15 & 18 & 17 + 20 & 20 & 18 & 19 & 20 & 18 & 18 & 15 + 20 & 20 & 18 & 20 & 19 & 20 & 20 & 20 +     | l | x | x | x | x | x | x | & & 1 & 2 & 3 & 4 & 5 & 6 inash ( any - time ) & @xmath219 & @xmath210 & @xmath222 & @xmath223 & @xmath224 & @xmath202 prioritized & @xmath225 & @xmath226 & @xmath227 & @xmath228 & @xmath229 & @xmath230 prioritized ( any - time ) & @xmath231 & @xmath232 & @xmath233 & @xmath234 & @xmath235 & @xmath236     | c | c | c | c | c | c | +   + 1 & 2 & 3 & 4 & 5 & 6 + 11 & 14 & 12 & 14 & 16 & 15 + 19 & 18 & 19 & 13 & 12 & 4 + 19 & 18 & 20 & 19 & 20 & 15 +    _ discussion of experimental results : _ experimental results are summarized in tables [ table : a]-[table : b ] . in inash",
    "all robots tend to bear the burden of conflict resolution similarly , on average .",
    "this contrasts with the prioritized methods , in which robot s with lower ids have shorter paths and reach the goal more frequently than robots with higher ids .",
    "the result that some inash paths are longer than the prioritized paths is expected , given that in inash robots act in their own self interest .",
    "this paper discusses a class of multi - robot motion planning problems where each robot is associated with multiple - objectives and independent class specifications .",
    "we formulated the problem as an open - loop , non - cooperative differential game and proposed a distributed , anytime algorithm to compute the nash equilibrium .",
    "techniques from rapidly - exploring random graphs and iterative better response were used to provide convergence guarantees and analyse the price of stability as well as the communication cost of the algorithm .",
    "we also presented results of simulation experiments that demonstrate the efficiency and anytime nature of the algorithm .",
    "future directions include coupled task specifications of robots and algorithms which can eliminate the price of anarchy .",
    "luis i  reyes castro , pratik chaudhari , jana tumova , sertac karaman , emilio frazzoli , and daniela rus .",
    "incremental sampling - based algorithm for minimum - violation motion planning . in _ proc . of 52nd ieee conference on decision and control _ , 2013 .",
    "s.  karaman and e.  frazzoli .",
    "sampling - based algorithms for optimal motion planning with deterministic mu - calculus specifications . in _ 2012 american control conference _ , pages 735742 , montral , canada , december 2012 ."
  ],
  "abstract_text": [
    "<S> we consider a class of multi - robot motion planning problems where each robot is associated with multiple objectives and decoupled task specifications . </S>",
    "<S> the problems are formulated as an open - loop non - cooperative differential game . </S>",
    "<S> a distributed anytime algorithm is proposed to compute a nash equilibrium of the game . </S>",
    "<S> the following properties are proven : ( i ) the algorithm asymptotically converges to the set of nash equilibrium ; ( ii ) for scalar cost functionals , the price of stability equals one ; ( iii ) for the worst case , the computational complexity and communication cost are linear in the robot number . </S>"
  ]
}
{
  "article_text": [
    "in 1959 , volder @xcite , introduced the cordic algorithm in order to compute approximations of trigonometric functions .",
    "this method is still used because of its adequacy to hardware design .",
    "it is a recursive method using only shift - and - add operations .",
    "a decade later , j. s. walther in @xcite , generalized this method to other transendantal functions used in engineering fields .",
    "the development of the cordic algorithm and architectures @xcite has taken place for achieving the highest throughput rate and reduction of hardware - complexity as well as the computational latency of implementation .",
    "some of the typical approaches for reducing complexity implementation are targeted on minimization of using the scaling - operation and complexity of barrel - shifters and adders in the cordic engine . however , one of the problems associated with the classical cordic formulation is that the scale factor depends of the angle , and is not constant .",
    "the complexity of the computation of the scale factor is in principle comparable to that of the basic cordic process itself . in a recent work , @xcite , a new algorithm , cordic ii ,",
    "is proposed that substitutes the cordic micro - rotation by a new angle set .",
    "aiming to eliminate scale multiplication in conventional cordic , scale free cordic was used to eliminate the scale factor , see the piooneering papres @xcite and also @xcite .",
    "the scale free cordic algorithm for cosine and sine functions is proved to be faster and efficient in terms of area and accuracy compared to conventional cordic .",
    "we give in this paper a method in order to minimize the number of iterations ine the cordic method .",
    "this is given by computing the closest elementary angle to the residual one at each iteration .",
    "our second contribution is the correction of the taylor series used for the composed functions .",
    "we will prove that with our polynomial approximation , we will get faster computation for the same acuity .",
    "the cordic algorithm operates either in , rotation mode or vectoring mode , following linear , circular or hyperbolic coordinate trajectories . in this paper , we focus on rotation mode cordic using circular trajectories .",
    "the idea behind conventional cordic algorithm is the rotation of a vector @xmath3^t$ ] in cartesian coordinate which can be expressed in ( 1 ) , where @xmath4^t$ ] is the output vector produced after rotation and @xmath5 is the angle of rotation .",
    "@xmath6 this can also be written as @xmath7 we split the rotation angle in a sum of angles , and carries out the rotation by a series of the so called micro - rotation by these angles .",
    "the idea is to decompose any angle @xmath5 into a sum of some  elemntary  angles @xmath8 where @xmath9 .",
    "if we use the fact that , if @xmath10 denotes the matrix of the 2d rotation of angle @xmath5 : @xmath11 we can translate the equation ( 3 ) into the matrix product : @xmath12      the conventional cordic method performs a sequence of rotations by elementary angles .",
    "any rotation @xmath5 on the plan can be decomposed into a composition ( matrix product ) of @xmath13 elementary rotations .",
    "when taking @xmath14 , the equation ( 2 ) becomes : @xmath15 using also the identity @xmath16 we obtain , for @xmath17 , @xmath18 the idea is that the angles used are constant , so we have a constant scale @xmath19 , which approximately equals , according to the litterature @xcite , @xmath20 . for this aim",
    ", we construct a sequence of vectors @xmath21^t$ ] by the recurrence schema : @xmath22 and @xmath23 after the fixed number of iterations , we mutiply the resulting vector by the constant @xmath24 , this means @xmath4=k [ x_n\\ y_n]$ ] .",
    "the essence of the cordic algorithm is that he is multiplication free ( only shift - and - add operations ) .",
    "the scale multiplication , also called compensation , to get an output vector isometric to the input one , causes a problem .",
    "the introduction of the scale free cordic is then legitimated .",
    "the scale free cordic for circular functions is based on the taylor series @xmath25 @xmath26 @xmath27 the approximation taylor polynomial of the _ composed functions _ to order 5 : @xmath28 @xmath29 @xmath30 when we truncate the polynomials to the order 5 , we obtain the right equations : @xmath31 @xmath32 we can observe that @xmath33 , this is simply due to the fact that @xmath34 we the obtain , for the elementary angles @xmath14 , and remarking that @xmath35 @xmath36 @xmath37 the rotation matrix @xmath38 becomes : @xmath39 as we know , all the works we have seen uses the taylor series for sine and cosine functions and replace @xmath14 by @xmath40 , see @xcite and also @xcite . the error is that when using a taylor polynomial of a composite function @xmath41 , we have to use the same degree and truncate the resulting polynomial at the demanded degree , you can see @xcite .    in order to give an empirical proof , we will compare the orders 3 , 4 and 5 of ou method to the recent works @xcite .",
    "in order to minimize the number of iterations of the cordic algorithm , we choose the microrotations to be the closest @xmath42 to the residual angle .",
    "this can be done by choosing the closest power of 2 to @xmath43 , where @xmath5 represent the risidual angle .    due of the continuity of the function",
    "@xmath44 , if @xmath43 is close to @xmath40 , then so is @xmath5 to @xmath45 .",
    "this leads us to choose @xmath46 such that , the closest @xmath47 to @xmath5 the following way : @xmath48 we replace @xmath49 by @xmath5 without any loss of acuity because @xmath5 is very close to @xmath49 for @xmath5 in @xmath50 $ ] .    as an example : @xmath51 for a hardware design , the translation of our method for the binary representation @xmath52 where @xmath53    * if for @xmath54 we have @xmath55 and @xmath56 and @xmath57 then @xmath58 * if for @xmath54 we have @xmath55 and @xmath59 then @xmath60    in this section , we will compare our approximation to the one given in @xcite and @xcite for order 3 taylor approximations .",
    "the range of angles used is @xmath50 $ ] .",
    "this range is enough , using the trigonometric identities , to can calculate any sine or cosine of any angle .    in @xcite , @xmath61 is approximated by @xmath62 , and @xmath63 is approximated by @xmath64 .",
    "the authors in @xcite , use the approximation @xmath65 , and @xmath66 .",
    "the proposed method use the approximation @xmath65 , and @xmath67 , which is the mathematically correct developpement .",
    "the quadratic errors for cosine and sine function for the three method are summarized in the tables ( [ tab : cos ] and [ tab : sin ] ) .",
    "( 7,6)(0,0 ) ( 4,5 ) approximation ( in green the difference)__,title=\"fig : \" ]    .comparison of methods for cosine function [ cols=\"^,^,^,^\",options=\"header \" , ]      +    ( 7,6)(0,0 ) ( 1,0 )",
    "cordic algorithm has several applications in several domains , for an overview the reader can read @xcite .",
    "the popularity of this method is due to the simplicity of its hardware implementation , see @xcite for example .    in this paper",
    "two improvements were made .",
    "first , we have minimized the number of iterations for some fixed error by calculating the closest elementary angle to the residual one .",
    "second , we gave the correct polynomial approximation for the scale free cordic .",
    "the comparison between our method and two other famous methods is given to confirm empirically our theoretical proof . in our simulation",
    ", we remark that the order of approximation of taylor series used meets the accuracy requirements .    in section 3 , we showed that these methods have a simple hardware implementation , in order to meet the objectives of the cordic s introduction .",
    "the iterative and pipelined architectures were implemented , and significant improvements of hardware performance were denoted in the pipelined case .",
    "the future works will focus on the improvement of the hardware architecture .",
    "99 aggarwal , s. , & khare , k. ( 2012 ) .",
    "_ hardware efficient architecture for generating sine / cosine waves .",
    "_ in vlsi design ( vlsid ) , 2012 25th international conference on ( pp .",
    "57 - 61 ) .",
    "aggarwal , s. , meher , p. k. , & khare , k. ( 2013 ) .",
    "_ scale - free hyperbolic cordic processor and its application to waveform generation_. circuits and systems i : regular papers , ieee transactions on , 60(2 ) , 314 - 326 .",
    "aggarwal , s. , meher , p. k. , & khare , k. ( 2012 ) .",
    "_ area - time efficient scaling - free cordic using generalized micro - rotation selection .",
    "_ very large scale integration ( vlsi ) systems , ieee transactions on , 20(8 ) , 1542 - 1546 .",
    "antonius p. r. , nur a. , ashbir a. f. , naufal s. , trio a.,.(2015 ) .",
    "_ fpga implementation of cordic algorithms for sine and cosine generator .",
    "_ ieee electrical engineering and informatics ( iceei ) , int .",
    "conf . proc .",
    "pp 1 - 6 . dian - marie r. , scott m. , mihai s. , curran c. , ( 2011 ) , _ design rules for implementing cordic on fpgas .",
    "_ ieee communications , computers and signal processing ( pacrim ) . conf .",
    "pages 797  802 .",
    "garrido , m. , kllstrm , p. , kumm , m. , & gustafsson , o. , ( 2015 ) .",
    "_ cordic ii : a new improved cordic algorithm_. circuits and systems ii : regular papers , ieee transactions on .",
    "jaime , f. j. , snchez , m. a. , hormigo , j. , villalba , j. , & zapata , e. l. ( 2010 ) .",
    "_ enhanced scaling - free cordic .",
    "_ circuits and systems i : regular papers , ieee transactions on , 57(7 ) , 1654 - 1662 . lakshmi , b. , & dhar , a. s. , ( 2010 ) _ cordic architectures : a survey , _ hindawi publishing corporation vlsi design , vol .",
    "2010 , pp . 1 - 19 .",
    "maharatna , k. , banerjee , s. , grass , e. , krstic , m. , & troya , a. ( 2005 ) .",
    "modified virtually scaling - free adaptive cordic rotator algorithm and architecture .",
    "circuits and systems for video technology , ieee transactions on , 15(11 ) , 1463 - 1474 .",
    "maharatna , k. , troya , a. , banerjee , s. , & grass , e. ( 2004 , november ) . _ virtually scaling - free adaptive cordic rotator .",
    "_ in computers and digital techniques , iee proceedings- ( vol .",
    "151 , no . 6 , pp .",
    "448 - 456 ) .",
    "meher , p. k. , valls , j. , juang , t. b. , sridharan , k. , & maharatna , k. ( 2009 ) .",
    "_ 50 years of cordic : algorithms , architectures , and applications .",
    "_ circuits and systems i : regular papers , ieee transactions on , 56(9 ) , 1893 - 1907 .",
    "mokhtar , a. s. n. , reaz , m. b. i. , chellappan , k. , & ali , m. m. ( 2013 ) .",
    "_ scaling free cordic algorithm implementation of sine and cosine function .",
    "_ in proceedings of the world congress on engineering ( wce13 ) ( vol .",
    "surapong , p. , samman , f. a. , & glesner , m. ( 2012 ) .",
    "_ design and analysis of extension - rotation cordic algorithms based on non - redundant method .",
    "_ international journal of signal processing , image processing and pattern recognition , 5(1 ) , 65 - 84 .",
    "monier , j. m. , _",
    "analyse mpsi : cours et 1000 exercices corrigs .",
    "_ dunod paris , 2003 .",
    "ray , a.,(1989 ) . _ a survey of cordic algorithms for fpga based computers .",
    "_ international symposium on field programmable gate arrays pages 191 - 200 .",
    "valls , j. , kuhlmann , m. , parhi , k. ( 2002 ) .",
    "_ evaluation of cordic algorithms for fpga design .",
    "_ journal of vlsi signal processing systems for signal , image and video technology november 2002 , volume 32 , issue 3 , pp 207 - 222 volder , j. e. , ( 1959 ) . _ the cordic trigonometric computing technique , _ ire trans .",
    "ec-8 , pp .",
    "walther , j. s. , ( 1971 ) . _ a unified algorithm for elementary functions _",
    ", spring joint computer conf ."
  ],
  "abstract_text": [
    "<S> in order to approximate transandental functions , several algorithms were proposed . </S>",
    "<S> historically , polynomial interpolation , infinite series , @xmath0 and other @xmath1 and @xmath2 based algorithms were studied for this purpose .    </S>",
    "<S> the cordic ( coordinate rotation digital computer ) introduced by jack e. volder in 1959 , and generalized by j. s. walther a few years later , is a hardware based algorithm for the approximation of trigonometric , hyperbolic and logarithmic functions .    as a consequence </S>",
    "<S> , cordic is used for applications in diverse areas such as signal and image processing . for these reasons , </S>",
    "<S> several modified versions were proposed .    in this article </S>",
    "<S> , we present an overview of the cordic algorithm for the computation of the circular functions , essentially the scaling free version , and we will give a substential improvement to the commonly used one . </S>"
  ]
}
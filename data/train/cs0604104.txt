{
  "article_text": [
    "in the information theory literature , constrained systems have traditionally arisen in the context of coding for recording systems @xcite .",
    "these systems , under the tag of regular languages , also form the cornerstone of automata and formal language theory in computer science ( * ? ? ?",
    "* chapters 34 ) .",
    "more recently , constrained systems have come up naturally in the context of code design for bio - molecular computation ( see , for example , the survey paper @xcite ) .",
    "to describe the aim of this paper , we need some basic terminology @xcite from the theory of constrained systems . recall that a _ labeled graph _ , @xmath0 , is a finite directed graph with vertex set @xmath1 , edge set @xmath2 , and edge labeling @xmath3 , where @xmath4 is a finite alphabet .",
    "we will refer to the vertices of @xmath5 as _ states_. a _ constrained system _ ( sometimes referred to as a _ constraint _ ) , @xmath6 or @xmath7 , is the set of all finite - length sequences ( _ words _ ) obtained by reading off the labels along finite paths in a labeled graph @xmath5 . the constrained system @xmath7 is said to be _ presented _ by @xmath5 ; equivalently , @xmath5 is called a _ presentation _ of @xmath7 .",
    "a presentation , @xmath5 , of a constrained system @xmath6 is said to be _",
    "deterministic _ if at each state of @xmath5 , the outgoing edges are labeled distinctly .",
    "deterministic presentations of a constrained system @xmath6 are used to derive finite - state encoders for @xmath6 ( cf .",
    "* chapter  4 ) ) .",
    "in general , a given constrained system @xmath6 has many different deterministic presentations .",
    "however , in practice it is often desirable to present @xmath6 by a deterministic graph with the smallest possible number of states among all deterministic presentations of the constraint .",
    "such a _ minimal _ presentation , called the _",
    "shannon cover _ of the constraint , can be used to find finite - state encoders with a small number of states which directly translates to low complexity of encoding into the constraint .",
    "the goal of this paper is to explicitly determine the shannon cover of a certain class of constrained systems known as irreducible finite - type constraints .",
    "while even the shannon cover is not in general unique for an arbitrary constrained system , it does turn out to be unique in the important case of irreducible constrained systems which we now define .",
    "a labeled graph @xmath5 with set of states @xmath1 is said to be _ irreducible _ if for any pair of states @xmath8 , there is a directed path in @xmath5 that begins at @xmath9 and ends at @xmath10 .",
    "a constrained system @xmath6 is defined to be _",
    "irreducible _ if it can be presented by an irreducible graph .",
    "equivalently , @xmath6 is irreducible iff for any pair of words @xmath11 , there exists @xmath12 such that the concatenation @xmath13 is also in @xmath6 .",
    "it is well known ( * ? ? ?",
    "* , theorem  2.12 ) that the shannon cover of an irreducible constrained system is unique up to labeled graph isomorphism .",
    "the shannon cover of an irreducible constrained system @xmath6 can be obtained from an irreducible deterministic presentation , @xmath5 , of @xmath6 by a procedure known as _ state merging _",
    "* section  2.6 ) .",
    "this procedure is best described in terms of the follower sets of states .",
    "the _ follower set _ , @xmath14 , of a state @xmath9 in @xmath5 is the set of all finite - length words generated by paths in @xmath5 starting at @xmath9 . two states @xmath9 and @xmath10 in @xmath5 are said to be _ follower - set equivalent _ if @xmath15 .",
    "in such a situation , states @xmath9 and @xmath10 can be _ merged _ resulting in a new graph @xmath16 obtained by first eliminating all edges emanating from @xmath10 , redirecting into @xmath9 all remaining edges entering @xmath10 , and finally eliminating @xmath10 .",
    "it is easily verified that the resulting graph @xmath16 is also an irreducible deterministic presentation of @xmath6 .",
    "recursively carrying out the state merging procedure finally results in an irreducible deterministic presentation , @xmath17 , of @xmath6 that is also _ follower - separated _ , which means that distinct pairs of states in @xmath17 have distinct follower sets .",
    "this graph @xmath17 is the shannon cover of the constraint .",
    "in fact , a deterministic presentation of an irreducible constraint is the shannon cover of the constraint iff it is irreducible and follower - separated .",
    "it is clear that the shannon cover of a constraint @xmath6 is very simply determined if the state merging procedure can be initiated on a presentation of @xmath6 that already has a relatively small number of states .",
    "such a presentation is obtained for a constrained system of finite type ( defined below ) via a construction of crochemore , mignosi and restivo @xcite which has origins in automata theory .",
    "the crochemore - mignosi - restivo ( cmr ) construction is reasonably amenable to analysis , and we use it as the starting point in our search for the shannon cover of a constrained system of finite type .",
    "in fact , crochemore _",
    "_  prove in a result ( * ? ? ?",
    "* theorem  14 ) related to the ones in this paper that their construction yields the shannon cover for a certain type of finite - type constrained system",
    ". however , our results do not follow from theirs .",
    "let @xmath18 be a finite alphabet .",
    "we will denote by @xmath19 the set of all finite - length sequences ( words ) over @xmath18 , including the empty word @xmath20 .",
    "if @xmath21 is a word over @xmath18 , then any of the subsequences @xmath22 , @xmath23 , is called a _ subword _ of @xmath24 . by convention ,",
    "the empty word @xmath20 is a subword of any @xmath25 .",
    "a _ finite - type constrained system ( ftcs ) _ is characterized by a finite set @xmath26 , and is defined to be the set , @xmath27 , of all words @xmath28 such that @xmath24 does not contain as a subword any word in @xmath29 .",
    "the finite set @xmath29 is called a _ forbidden set _ , and its elements are called _ forbidden words_. in this paper , we focus mainly on ftcs s with forbidden sets of cardinality at most two . the difficulties involved in extending our analysis further",
    "will already be apparent from the cardinality - two case .",
    "the rest of the paper is organized as follows .",
    "the cmr construction is described in section  ii , and some useful properties of this construction are given in section  iii .",
    "sections  iv and v study the shannon covers of ftcs s with one and two forbidden words , respectively .",
    "we show there that the cmr construction directly yields the shannon cover in the case of an irreducible ftcs with exactly one forbidden word , but this is not in general the case for ftcs s with two forbidden words .",
    "most of the results in this paper are stated without proof .",
    "complete proofs of these results will be provided in the full version of the paper .",
    "we fix a finite alphabet @xmath18 , and let @xmath26 be a non - empty finite set .",
    "we assume that @xmath29 is a _ non - redundant _ collection of words in that no word @xmath30 is a subword of any @xmath31 , @xmath32 .",
    "define a labeled graph @xmath33 as follows :    * @xmath34 .",
    "note that a prefix of a word @xmath21 is any of its subwords @xmath35 for @xmath36 , or the empty word @xmath20 .",
    "the states corresponding to @xmath31 will be called _",
    "sink states _ , and we will often refer to the state corresponding to the empty word @xmath20 as the _",
    "initial state_. * there are no edges emanating from any sink state @xmath31",
    ". there are @xmath37 edges , all having distinct labels , emanating from each state @xmath38 .",
    "these edges are defined in the following manner : for each @xmath39 , * * if @xmath40 , then the edge labeled @xmath41 from @xmath42 is a _",
    "forward edge _ that terminates at the state @xmath43 ; + * * if @xmath44 , the edge labeled @xmath41 from @xmath42 is a _ backward edge _ that terminates at the state @xmath45 , where @xmath45 is the longest suffix ( incl .  the empty word @xmath20 ) of @xmath43 in @xmath1 .",
    "the graph thus obtained will be referred to as the _ cmr automaton _ @xcite .",
    "figure  [ cmr_fig1 ] shows such a graph for @xmath46 and alphabet @xmath47 .",
    "let @xmath48 be the graph obtained by deleting from @xmath49 all sink states and all edges entering sink states .",
    "it follows from ( * ? ? ?",
    "* theorem  10 ) that @xmath50 is a presentation of the ftcs @xmath51 having forbidden set @xmath29 .",
    "we will refer to this graph @xmath50 as the _ cmr presentation _ of @xmath27 .",
    "it is easily seen that both @xmath49 and @xmath50 are deterministic .",
    "the cmr presentation for @xmath46 is the graph given in figure  [ cmr_fig2 ] , without the dotted edges .    by construction",
    ", the number of states in @xmath49 is at most @xmath52 , and hence , that in @xmath50 is at most @xmath53 , where @xmath54 denotes the length of the word @xmath55 .",
    "note that @xmath56 , where @xmath57 . in comparison ,",
    "the number of states in the canonical deterministic presentation of @xmath51 obtained from the higher edge graph of order @xmath58 of the unconstrained @xmath18-ary system @xcite is @xmath59 , which is typically much larger than @xmath60 .",
    "thus , @xmath50 is in general a better candidate on which to initiate the state merging procedure to construct the shannon cover than the canonical presentation of @xmath51 .",
    "in this section , we give some properties of the cmr presentation @xmath50 that will be useful in the subsequent development .",
    "we start with the following observation ( * ? ? ?",
    "* remark  6(1 ) ) , which is an easy consequence of the definitions of @xmath49 and @xmath50",
    ". +    for any non - initial state @xmath61 , @xmath62 , in @xmath49 or @xmath50 , the edges entering @xmath42 all share the same label @xmath63 , which is the last symbol of @xmath42 . hence , a non - initial state in @xmath49 or @xmath50 has at most one self - loop attached to it .",
    "[ incoming_labels_lemma ]     + for the cmr automaton @xmath49 , let @xmath64 be the _ transition function _ defined by setting @xmath65 , @xmath66 , @xmath39 , to be the state reached by the edge labeled @xmath41 emanating from @xmath42 .",
    "note that if the edge labeled @xmath41 starting at @xmath42 is a forward edge , then and @xmath50 are identified with words in @xmath19 , the notation @xmath67 for a state @xmath42 simply denotes the length of the word @xmath42 . ] @xmath68 , and if it is a backward edge , then @xmath69 .",
    "following @xcite , we will find it convenient to define the notion of a _ failure function _",
    ", @xmath70 , recursively via    * for each @xmath39 , if @xmath71 , then @xmath72 ; * for each @xmath73 and @xmath39 , if @xmath74 , then @xmath75 .",
    "note that the failure function is not defined for the initial state and the sink states .",
    "the usefulness of the failure function stems from the fact that it helps in efficiently locating the terminal states of the backward edges in @xmath49 ( and hence in @xmath50 ) . indeed , if for some @xmath73 and @xmath39 , we have @xmath44 , then @xmath76 .    the states in the cmr presentation",
    "@xmath50 simply retain the failure function ( as well as the transition function whenever it can be defined ) from @xmath49 .",
    "the dotted edges in figure  [ cmr_fig2 ] represent the failure function for the states in @xmath77 .",
    "we will follow this convention of using dotted edges to represent the failure function throughout the paper .",
    "we record in lemma  [ df_lemma ] and proposition  [ f_prop ] below some facts about the failure function that we will use in later sections of the paper .    for a state @xmath78 in @xmath50 , define @xmath79 .",
    "+    let @xmath80 be non - initial states in @xmath50 such that @xmath42 is a prefix of @xmath45 .",
    "then , @xmath81 .",
    "[ df_lemma ]     +    for any state @xmath43 , with @xmath82 and @xmath39 , in @xmath50 , we have @xmath83 if and only if @xmath84 for some integer @xmath85 .",
    "[ f_prop ]     + _ remark _ : by convention , @xmath86 .",
    "+ recall from section  i that if @xmath51 is an irreducible constrained system , then the shannon cover of @xmath51 is obtained by applying the state merging procedure to an irreducible deterministic presentation of @xmath51 .",
    "now , @xmath50 is certainly deterministic , but need not always be irreducible .",
    "however , it does turn out to be so in most cases , as we shall see in sections  iv and v. the next lemma is a key component in our proofs of irreducibility .    given a state @xmath45 in @xmath50 ,",
    "let @xmath87 and @xmath88 respectively denote the number of forward and backward edges that emanate from @xmath45 _ in the cmr automaton @xmath49_. +    let @xmath89 be an integer such that every state @xmath42 in @xmath50 with @xmath90 has a path leading to a distinguished state @xmath55 . if @xmath45 is a state with @xmath91 such that @xmath92 and either @xmath93 or @xmath94 holds , then @xmath45 has a path leading to @xmath55 as well .",
    "[ path_lemma ]     + the following result is an application of lemma  [ path_lemma ] .",
    "let @xmath95 .",
    "if @xmath96 for all states @xmath45 in @xmath50 , then @xmath50 is irreducible .",
    "[ irred_cor ]     + the last lemma in this section gives an important necessary condition for two states in @xmath50 to be follower - set equivalent . while it only applies to cases in which all forbidden words have the same length , it is enough for our purposes .",
    "+    let @xmath26 be a finite set with the property that all words in @xmath29 have the same length .",
    "if @xmath97 are a pair of states in @xmath50 that are follower - set equivalent , then @xmath98 .",
    "[ follset_lemma ]     + note that if @xmath29 consists of exactly one word @xmath55 , then the states of @xmath50 are precisely all the distinct proper prefixes of @xmath55 , which are all of different lengths .",
    "we thus have    if @xmath99 , then @xmath50 is follower - separated .",
    "[ follsep_cor ]    we investigate the case of forbidden sets of cardinality one in more detail in the next section .",
    "when the forbidden set consists of exactly one forbidden word , we have a complete and concise result .",
    "+    let @xmath100 for some @xmath101 , @xmath102 .",
    "if @xmath51 is irreducible , then @xmath50 is the shannon cover of @xmath51 .",
    "[ one_word_thm ]    _ proof _ : we have to show that @xmath50 is irreducible and follower - separated . by dint of corollary  [ follsep_cor ] , it is enough to show that @xmath50 is irreducible whenever @xmath51 is .",
    "in fact , it is enough to consider the case of a binary alphabet @xmath18 , since corollary  [ irred_cor ] disposes of the @xmath95 case .",
    "so , let @xmath103 .",
    "without loss of generality ( wlog ) , we may assume that the forbidden word @xmath55 begins with the symbol @xmath41 .",
    "note that if @xmath104 , then @xmath51 is not irreducible , since @xmath105 , but there is no word @xmath106 such that @xmath107 .",
    "similarly , @xmath51 is not irreducible when @xmath108 . for all other words",
    "@xmath55 , as we shall see , @xmath50 ( and hence @xmath51 ) is irreducible .",
    "we start with @xmath109 .",
    "it is easily seen that in this case , @xmath50 is as in figure  [ thm4.1_fig1 ] , which is seen to be irreducible by inspection .    next , let @xmath110 , with @xmath111 and @xmath112 .",
    "we will show that all states in @xmath50 have a path going to the initial state @xmath20 .",
    "figure  [ thm4.1_fig2 ] shows the subgraph of @xmath50 containing the states from @xmath20 up to @xmath113 .",
    "since there is an edge from @xmath42 to @xmath20 , we see that there is a path starting from any state between @xmath20 and @xmath42 that goes back to the initial state @xmath20 . to see that this is also the case for states beyond @xmath42 , we use lemma  [ path_lemma ] . from figure",
    "[ thm4.1_fig2 ] , we note that @xmath114 . thus , @xmath115 .",
    "therefore , by lemma  [ path_lemma ] , there is a path from @xmath43 to the initial state @xmath20 . for states",
    "@xmath45 with @xmath116 , by lemma  [ df_lemma ] , we have @xmath94 as well .",
    "so , repeated application of lemma  [ path_lemma ] shows that any such @xmath45 also has a path going to the initial state @xmath20 .",
    "thus , @xmath50 is irreducible .",
    "finally , let @xmath117 , with @xmath111 and @xmath118 .",
    "figure  [ thm4.1_fig3 ] shows the subgraph of @xmath50 containing the states from @xmath20 up to @xmath119 .",
    "we shall show first that there is a path to the initial state from the state @xmath42 .",
    "since @xmath120 , the backward edge from @xmath42 , if labeled @xmath41 , goes to the state @xmath41 , and if labeled @xmath121 , goes to the initial state .",
    "but since there is an edge from the state @xmath41 to the initial state , there is always a path from @xmath42 to @xmath20 .",
    "in addition since @xmath122 , we also have @xmath94 for states @xmath45 with @xmath123 , by lemma  [ df_lemma ] .",
    "thus , as before , repeated application of lemma  [ path_lemma ] shows that any such @xmath45 also has a path going to the initial state @xmath20 , proving that @xmath50 is irreducible .",
    "this completes the proof of the theorem .",
    "when the forbidden set consists of more than one word , the analysis gets a lot more complicated .",
    "the intricacies of the analysis become evident even in the case of forbidden sets of size two . in this section ,",
    "we consider forbidden sets @xmath124 , @xmath125 , with @xmath126 .",
    "furthermore , we will only present results for the case when @xmath95 , as the results for the binary alphabet do not have simple statements in many cases . for example , when @xmath95 , @xmath50 is itself irreducible ( theorem  [ two_words_irred_thm ] ) , while in the binary case , we sometimes have to pass to a ( proper ) subgraph of @xmath50 to obtain an irreducible presentation of @xmath51 .",
    "so , for the rest of this section , we will assume a finite alphabet @xmath18 with @xmath95 , and a subset @xmath26 consisting of two distinct equal - length words , @xmath127 and @xmath128 .",
    "we set @xmath129 to be the longest common prefix ( including the empty word @xmath20 ) of @xmath127 and @xmath128 .",
    "note that by construction , @xmath129 is the only state in @xmath50 with two forward edges ; all other states have at most one forward edge .",
    "we say that @xmath50 _ forks _ at @xmath129 , as @xmath50 forks into two branches `` downstream '' from @xmath129 , as depicted in figure  [ two_word_graph ] .",
    "+      _ sketch of proof _ : if @xmath130 , then corollary  [ irred_cor ] gives us the irreducibility of @xmath50 . if @xmath131 , then proving the irreducibility of @xmath50 is still a relatively easy application of lemma  [ path_lemma ] .",
    "we skip the details .",
    "so , suppose that @xmath132 , and let @xmath133 , and @xmath134 .",
    "we will show that each state in @xmath50 has a path leading to the initial state @xmath20 .",
    "we divide the proof into three cases : ( a ) @xmath135 ; ( b ) @xmath136 ; and ( c ) @xmath137 .",
    "we give complete proofs for the first and last cases as illustrations , but skip the proof for case  ( b ) .    .",
    "here , the graph @xmath50 forks at the initial state itself .",
    "wlog , the two forward edges from @xmath20 are labeled @xmath41 and @xmath121 , respectively .",
    "it is enough to show that the states @xmath41 and @xmath121 each have a path going to the initial state . indeed ,",
    "if this can be shown , then it follows from lemma  [ path_lemma ] that the states @xmath45 with @xmath138 also have paths going to the initial state , as these states satisfy the conditions of that lemma .",
    "suppose that one of the states @xmath41 and @xmath121 has an edge going to the initial state @xmath20 .",
    "wlog , let this state be @xmath41 .",
    "the state @xmath121 has two backward edges , of which at most one can be a self - loop by lemma  [ incoming_labels_lemma ] .",
    "thus , the other edge goes either to @xmath20 or to @xmath41 . in any case",
    ", @xmath121 also has a path going to the initial state .",
    "we are left to deal with the situation when neither @xmath41 nor @xmath121 has an edge going to the initial state . in this situation ,",
    "both @xmath41 and @xmath121 have self - loops , @xmath41 has an edge going to @xmath121 , and @xmath121 has an edge terminating at @xmath41 .",
    "it is straightforward to see that this can happen only if @xmath139 for some @xmath140 , in which case the initial part of the graph @xmath50 is as in figure  [ thm5.1_fig4 ] .",
    "now , if @xmath141 , then we have @xmath142 , in which case @xmath51 is not irreducible , since @xmath143 , but there can be no @xmath144 such that @xmath145 .",
    "so , assuming wlog that @xmath146 , there is a largest @xmath147 for which @xmath148 is a state ; let @xmath42 denote the state @xmath148 corresponding to this largest @xmath149 . as shown in figure  [ thm5.1_fig4 ] , @xmath150 .",
    "thus , the states @xmath41 and @xmath121 both have paths leading to the initial state , as can be verified from the figure .      .",
    "if @xmath151 , then @xmath50 can easily be shown to be irreducible using lemma  [ path_lemma ] .",
    "so , assume wlog that @xmath29 is either @xmath152 or @xmath153 .",
    "note , however , that when @xmath154 , @xmath51 is not irreducible . when @xmath155 , @xmath50 is as shown in figure  [ thm5.1_fig3 ] , and is clearly irreducible .",
    "thus , by applying the state merging procedure to @xmath50 , we can obtain the shannon cover of @xmath51 . to do this",
    ", we must of course identify the states in @xmath50 that are follower - set equivalent .",
    "this also turns out to be a non - trivial task , and we are at present able to give a complete solution only in the special case when @xmath156 for some @xmath157 , @xmath158 .    in the following exposition ,",
    "we set @xmath159 , and @xmath160 for some @xmath157 , @xmath158 .",
    "note that we can parse @xmath161 uniquely as @xmath162 for some integer @xmath163 , where @xmath164 are positive integers , @xmath165 is a non - negative integer , and @xmath166 for @xmath167 .",
    "wlog , we assume that @xmath168 begins with the symbol @xmath169 .",
    "figure  [ follsep_fig ] shows the generic structure of @xmath50 for @xmath170 . from theorem  [ two_words_irred_thm ] , we know that @xmath50 is irreducible . and as stated in the next result ,",
    "this presentation is also follower - separated when @xmath171 .",
    "+       + to state the corresponding result for the case when @xmath172 , we need additional notation and terminology . for @xmath167 , we define certain distinguished prefixes of @xmath161 , @xmath173 and set @xmath174 .",
    "the states @xmath175 in @xmath50 satisfy the following property .",
    "+       + thus , we can define the set of indices @xmath178 where @xmath179 denotes the @xmath149th iterate of the failure function @xmath180 .",
    "note that @xmath181 , since some iterate of the failure function will eventually take @xmath182 to @xmath183 .    for @xmath184 ,",
    "let us define @xmath185 to be the set of all states @xmath42 in @xmath50 such that @xmath186 .",
    "thus , @xmath187 if @xmath188 , and @xmath189 if @xmath190 .",
    "we will often say that the states in @xmath185 are _ at level _",
    "@xmath191 in @xmath50 .",
    "recall from lemma  [ follset_lemma ] that two states in @xmath50 are follower - set equivalent only if they are at the same level .",
    "we can now state the result for @xmath172 .",
    "+    let @xmath170 . if @xmath172 , define @xmath192 if @xmath193 , set @xmath194 ; else , set @xmath195 .",
    "then , the states at level @xmath196 are follower - set equivalent iff @xmath197 .",
    "consequently , the shannon cover of @xmath51 is obtained from @xmath50 by merging the pair of states at each level @xmath197 .",
    "[ two_words_thm2 ]        generalizing the above result to arbitrary @xmath29 s of size two is by no means easy .",
    "we do have the following simple bound in the case of alphabets of size at least three , but finding tighter bounds or exact results remains an open problem . +    let @xmath200 , for some @xmath201 , @xmath125 . define @xmath202 and @xmath203 to be the lengths of the longest common prefix and the longest common suffix , respectively , of @xmath127 and @xmath128 . then , the number of states , @xmath198 , in the shannon cover of @xmath51 can be bounded as @xmath204 [ num_states_gen_thm ]     + the results of theorems  [ two_words_irred_thm ] , [ two_words_thm1 ] , [ two_words_thm2 ] and [ num_states_gen_thm ] can be extended , upon appropriate modification , to binary alphabets as well . but as the statements in the binary case are a lot more dense , we do not present them in this paper .",
    "the results for the binary alphabet , as well as complete proofs of the results given here , will be published in the full version of this paper .",
    "99 a.  brenneman and a.e .",
    "condon , `` strand design for bio - molecular computation , '' _ theoretical computer science _",
    "287:1 , pp .  3958 , 2002 . m.  crochemore , f.  mignosi and a.  restivo , `` automata and forbidden words , '' _ inform .",
    "_ , vol .",
    "67 , pp .",
    "111117 , 1998 .",
    "hopcroft , r.  motwani and j.d .",
    "ullman , _ introduction to automata theory , languages , and computation _ , 2nd ed .",
    ", addison - wesley , 2001 .",
    "codes for mass data storage systems _ , 2nd ed . , rotterdam , the netherlands : shannon foundation publishers , 2004 .",
    "marcus , r.m .",
    "roth and p.h .",
    "siegel , `` constrained systems and coding for recording channels , '' in _ handbook of coding theory _",
    ", r.  brualdi , c.  huffman and v.  pless , eds . ,",
    "amsterdam , the netherlands : elsevier , 1998 .",
    "marcus , r.m .",
    "roth and p.h .",
    "siegel , _ an introduction to coding for constrained systems _ , unpublished lecture notes .",
    "available at ` http:// ` ` www.cs.technion.ac.il/\\simronny/constrained.html ` ."
  ],
  "abstract_text": [
    "<S> a construction of crochemore , mignosi and restivo in the automata theory literature gives a presentation of a finite - type constrained system ( ftcs ) that is deterministic and has a relatively small number of states . </S>",
    "<S> this construction is thus a good starting point for determining the minimal deterministic presentation , known as the shannon cover , of an ftcs . </S>",
    "<S> we analyze in detail the crochemore - mignosi - restivo ( cmr ) construction in the case when the list of forbidden words defining the ftcs is of size at most two . </S>",
    "<S> we show that if the ftcs is irreducible , then an irreducible presentation for the system can be easily obtained from the cmr presentation . by studying the follower sets of the states in this irreducible presentation , </S>",
    "<S> we are able to explicitly determine the shannon cover in some cases . </S>",
    "<S> in particular , our results show that the cmr construction directly yields the shannon cover in the case of an irreducible ftcs with exactly one forbidden word , but this is not in general the case for ftcs s with two forbidden words . </S>"
  ]
}
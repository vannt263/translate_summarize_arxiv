{
  "article_text": [
    "sensor networks are used to monitor large or hazardous environments , for purposes ranging from oceanographic research to security in airports , industrial plants , and other complex infrastructures . in order to provide the best _ coverage _ of the assigned environment",
    ", sensors have to be deployed at suitable locations .",
    "as sensors are prone to failures in collecting and transmitting data , the robustness of the obtained coverage performance is a natural concern : thus , we consider in this paper the problem of placing _",
    "unreliable _ sensors in a given environment in order to provide the optimal coverage of it .",
    "coverage optimization and related problems of optimal facility location have been studied by the operations research community for a long time , often using concepts from geometric optimization and computational geometry  @xcite . during the past decade , conditions for sensor networks to provide a certain level of coverage have been found in a variety of situations , which include both random and deterministic placement strategies  @xcite .",
    "many available results allow sensors to fail or to spend time in a sleeping mode to save energy : in fact , these two scenarios can be given a unified treatment  @xcite using probabilistic methods  @xcite .",
    "however , it appears that the issue of the optimality of such placements , although recognized as central , has been left in the background  @xcite .",
    "control scientists have also become interested in these topics , after realizing that feedback control can enable the autonomous deployment of self - propelled sensors  @xcite .",
    "the main references for this research are the book  @xcite and the related papers  @xcite , while very recent developments include  @xcite .",
    "most literature from the control community assumes sensors to behave reliably , but recent results are making clear that this assumption is not free from risks .",
    "in fact , sensor failures deteriorate the performance of the sensor network and it is not even clear if optimal solutions derived for the case without failures retain good properties in other cases .",
    "indeed , simulations reported in  @xcite show the solutions that are optimal in the presence of failure are qualitatively different from those optimal in the fully reliable case .    the common sense countermeasure to failing sensors is adding some redundancy and letting more than one sensor `` responsible '' for covering a certain region of the environment , so that they can back up each other in case a failure occurs . to this aim",
    ", sensors can cluster into groups , such that the members of each group have the same location .",
    "this approach has been exploited by corts  @xcite , under the assumption that the number of failed sensors is precisely _",
    "known_. as a consequence , the number of clusters in the optimal solution is directly determined by this number .    in this paper",
    ", we consider the problem of _ optimal disk - coverage in a one - dimensional environment by unreliable sensors _",
    ", under a probabilistic failure model that does not assume any _ a priori _ information about the number or the location of the failures .",
    "rather , we assume that sensors fail independently and with the same probability .",
    "we then aim to minimize , in expectation , the largest distance between a point in the environment and an active sensor .",
    "this cost function was already used in @xcite , which was motivated by random field estimation  @xcite .",
    "it is consistent with the spirit of standard coverage questions in sensor networks , in which one is interested in guaranteeing a full coverage of the environment using a given number of sensors with a certain coverage radius  @xcite .",
    "note that it also corresponds to the classical problem of facility location , where a number of facilities have to service customers in a given area and want to optimize the worst - case servicing delay  ( * ? ? ?",
    "* ch .  2 ) .    regarding the choice of the environment , most prior works about sensor networks",
    "have chosen two - dimensional settings .",
    "in contrast , our choice of working in dimension one allows us to achieve sharper characterizations and results about optimality , both asymptotical and for finite networks",
    ". results of this kind are scarce in the literature , even if one - dimensional settings have often been studied , both in classical  @xcite and recent works  @xcite .",
    "our first result ",
    "theorem  [ prop : linprog ]  states that the problem at hand is equivalent to a linear program , albeit with a number of variables growing exponentially with the number of sensors .",
    "this fact allows for a computational solution that is tractable if the number of sensors is not large .",
    "secondly , we show that for large number of sensors @xmath0 , the cost of the equispaced placement decreases to zero with leading term @xmath1 , where @xmath2 is the probability of failure . in theorem",
    "[ th : equispace - logn ] , we provide analytic bounds on the optimal cost and prove that the equispaced placement is nearly optimal : the ratio between its cost and the optimal cost tend to 1 when @xmath0 grows .",
    "by contrast , we show in theorem  [ thm : random ] that a random placement has a larger cost of order @xmath3 .",
    "the almost optimality of the deterministic placement and its strict difference with the random placement had not been noticed before in the literature .",
    "our analysis also bear consequences for the failure model adopted by corts  @xcite : for instance , we show that the equispaced placement is nearly optimal in this case as well . finally , we note that our results extend and refine those recently presented by some of the authors in  @xcite , where a similar model of unreliable coverage was proposed .",
    "the rest of the paper is organized as follows . the formal definition of the problem is presented in   [ sect : prob_def ] . translation to a linear optimization problem is shown in   [ sect : linprog ] . in   [ sect : perf_equi ] we assess the performance of the equispaced placement .",
    "[ sect : extreme_p ] we analyze the special cases when the failure probabilities are close to 0 or to 1 .",
    "  [ sect : random ] deals with the case of random sensor placement .",
    "in   [ sect : cortes ] we adapt our results to the failure model by corts .",
    "conclusions are drawn in ",
    "[ sect : conclusion ] .",
    "we assume that we have a set of sensors indexed in @xmath4={\\{1,\\dots , n\\}}$ ] which have to cover the interval @xmath5 $ ] .",
    "since sensors may fail , we consider for each placement @xmath6^n$ ] the coverage cost defined as the largest distance between a point in @xmath5 $ ] and its closest _ active _ ( not failing ) sensor . to formalize this notion , we let @xmath7 denote the set of active sensors",
    ": we will use @xmath8 to denote the cardinality of @xmath7 and @xmath9 to denote the @xmath10 smallest index present in the set @xmath7 , for @xmath11 .",
    "we also call @xmath12^{|a|}$ ] the restriction of the vector @xmath13 to those entries for which the corresponding sensors are active .",
    "the cost incurred when the set of sensors @xmath7 is active is thus @xmath14 } \\min_{j \\in a } | s - x_j |.\\ ] ] to be formally complete , we assign the arbitrary cost @xmath15 to the situation where all sensors fail .",
    "this convention has no effect when we seek to optimize the locations of the sensors , as locations are irrelevant when they all fail .",
    "observe that if no sensor fails ( @xmath16 $ ] ) , then the cost   reduces to @xmath17 } \\min_{j \\in [ n ] } | s - x_j |.\\ ] ] in this case , it is known that the equispaced placement of @xmath0 sensors , namely @xmath18 is the optimal solution and achieves a cost @xmath19 .",
    "since we assume that failures are random , we define the event @xmath20 and we consider the _ expected value _ of the cost @xmath21 , which is @xmath22 } } { \\mathbb{p}}(e_a ) c_0(x_a),\\ ] ] where @xmath23 is the probability of @xmath24 . in the rest of this paper , with the exception of   [ sect : cortes ] , we assume that each sensor fails with probability @xmath2 , independently from the others .",
    "consequently , @xmath25 we are then ready to formally state our optimization problem .",
    "[ prob : mainprob ] for given @xmath26 and @xmath27 , find @xmath28^n$ ] that minimizes the cost   with  .    in what follows we assume , for simplicity and without loosing generality , that @xmath13 is ordered @xmath29 .",
    "this assumption implies that @xmath30",
    "a solution of problem  [ prob : mainprob ] can be numerically computed by means of the following result , that shows its equivalence to a suitable linear program .",
    "[ prop : linprog ] let @xmath27 and @xmath26 .",
    "the ( ordered ) vector @xmath28^n$ ] is an optimal solution of problem  [ prob : mainprob ] if and only if there exists a vector @xmath31 such that @xmath32 is an optimal solution to the following linear program : @xmath33,~a\\neq\\emptyset,\\nonumber\\\\ & w_a \\geq \\frac{1}{2}(x_{a_{k+1}}- x_{a_k } ) , \\hspace{.2 cm } \\text{for } k = 1,\\dots,|a|-1 , \\label{constr : def_cost_normal_in_thm_linprog}\\\\ & w_a \\geq x_{a_1},w_a \\geq 1-x_{a_{|a|}}.\\label{constr : def_cost_boundary_in_thm_linprog}\\end{aligned}\\ ] ]    as the constant term @xmath34 can be ignored when looking for the @xmath13 minimizing @xmath35 , problem  [ prob : mainprob ] is equivalent to @xmath36,a\\neq\\emptyset } { \\mathbb{p}}(e_a ) c_0(x_a).\\ ] ] since @xmath37 for every @xmath7 , this problem is in turn equivalent to @xmath36,a\\neq\\emptyset } { \\mathbb{p}}(e_a ) w_a \\text {      s.t .    }",
    "w_a \\geq c_0(x_a ) \\text {    for every    } a\\neq \\emptyset,\\ ] ] that is , to   under the constraints   and @xmath38 for every @xmath39 .",
    "thanks to  , the constraint @xmath38 can be separated in @xmath40 , @xmath41 , and @xmath42 for @xmath43 , that is , in   and  , which achieves our proof .    the formulation as a linear program implies that the optimal solution corresponds to one of the vertices of the polytope defined by the constraints . unfortunately , the number of such constraints is exponentially large in the number of sensors and thus the program becomes quickly intractable .",
    "nevertheless , we are able to calculate the optimal placements as long as @xmath0 is not too large . in figure",
    "[ fig : sim12 ] we illustrate the evolution of the optimal placement for problem  [ prob : mainprob ] as a function of @xmath2 .",
    "we can see that the dependence on @xmath2 is rather complex and it is not clear how , or if , one could provide a simple exact description of the optimal location of the sensors as a function of @xmath0 and @xmath2 . still , in ",
    "[ sect : extreme_p ] we will show that the equispaced placement is optimal when @xmath2 is near 0 and a single cluster at @xmath44 is optimal when @xmath2 is near 1 .",
    "observe that the the optimal @xmath13 is a piecewise constant function of @xmath2 .",
    "this feature can actually be explained by the structure of the linear program in theorem  [ prop : linprog ] .",
    "indeed , one can see that the constraints do not depend on @xmath2 , which only affects the cost function . for any @xmath2",
    ", one can thus always find an optimal @xmath32 among the finitely many vertices of the polytope defined by these constraints .",
    "it is therefore natural to observe only finitely many different optimal solutions .    [ ] [ ] [ 1][0]@xmath2   for @xmath45 sensors and",
    "varying @xmath2.,title=\"fig : \" ]",
    "[ sec : perf_equidist ] the difficulty of providing explicit formulas or efficient computational methods to solve problem  [ prob : mainprob ] motivates us to investigate the properties of simple near - optimal solutions .",
    "we concentrate on the equispaced placement , which we have seen to be optimal in case of no failures , achieving a cost @xmath19 . in the case of positive failure probability",
    ", we can prove that the cost of the equispaced placement is nearly optimal .",
    "[ th : equispace - logn ] let @xmath26 and let @xmath46 denote the optimal placement for this @xmath2 .",
    "then , @xmath47 and for every @xmath27 @xmath48    equation   is illustrated in figure  [ fig : rand - vs - equi ] (   [ sect : random ] ) .",
    "a few relevant observations follow from this theorem : ( i ) the order of growth of @xmath49 is only worse than the order of @xmath50 by a logarithmic factor ; ( ii ) @xmath51 asymptotically achieves the optimal cost , since @xmath52 ; and ( iii ) the difference in cost between @xmath51 and the optimum can be estimated at finite @xmath0 , too .",
    "consequently , the equispaced placement can be seen as a valid heuristic solution , when finding an exact solution proves to be intractable .",
    "the rest of this section is devoted to prove theorem  [ th : equispace - logn ] .",
    "we first prove equation   in   [ sect - proof - paolo ] : its proof is based on classical results about the properties of the runs of consecutive ones in sequences of bernoulli trials .",
    "next , in ",
    "[ sec : line - circle ] we prove  ; the proof of this formula relies on an alternative version of problem  [ prob : mainprob ] defined on the circle , for which the equispaced solution is actually optimal .",
    "let @xmath53 be the maximum number of sensors which fail `` in a row '' , _",
    "i.e. _ , the length of the longest run of failures over @xmath0 sensors .",
    "the random variable @xmath53 is closely related to the cost , as we detail below . on the other hand ,",
    "the distribution of @xmath53 and its asymptotic behavior for large @xmath0 are well studied in the literature , due to their relevance in combinatorics  @xcite .",
    "the following lemma , taken from  @xcite , characterizes the asymptotic behavior of @xmath54 $ ] .",
    "[ lemma : rn - properties ] let @xmath53 be defined as above and @xmath26 .",
    "then , for @xmath55 , @xmath56=\\frac1{\\log{p^{-1}}}\\log{n }           + \\frac{\\log(1\\!-\\!p)}{\\log{p^{-1 } } }           + \\frac\\gamma{\\log{p^{-1 } } }           -\\frac12+r_{p}(n)+o(1 ) \\,,\\ ] ] where @xmath57 is the euler - mascheroni constant and @xmath58 is a periodic function which remains bounded and , more precisely , satisfies for all @xmath0 @xmath59    recall that we denote by @xmath7 the set of active sensors and that the sensors are sorted according to their location .",
    "the cost @xmath49 is tightly related with the lengths of runs of failures , and in particular the maximum run - length . for a given",
    "set @xmath7 of active sensors , denote by @xmath60 the longest run - length of failures for that set @xmath7 ( elements of @xmath4 $ ] not in @xmath7 ) : @xmath60 is thus the realization of @xmath53 corresponding to @xmath7 .",
    "notice that if @xmath61 and @xmath62 , then the coverage cost is precisely determined by the longest run of failures , since @xmath63 .",
    "however , when a failure occurs in sensors @xmath64 or @xmath0 ( or both ) , the runs of failures involving border sensors contribute to the cost by a larger amount .",
    "denote by @xmath65 and @xmath66 the lengths of the runs of failures involving the initial sensor 1 and the final sensor @xmath0 , respectively , namely , @xmath67 and @xmath68 for @xmath69 , and @xmath70 for @xmath71 .",
    "now notice that , for all @xmath69 , @xmath72 for the case where @xmath71 , recall that @xmath73 .",
    "hence , for all @xmath7 , we have the following bounds : @xmath74 and @xmath75    the bounds on the averaged cost @xmath49 are then obtained by taking the expectation .",
    "notice that , with the failure model from problem  [ prob : mainprob ] the maximum run - length @xmath60 is the above - described random variable @xmath53 , and hence its average satisfies lemma  [ lemma : rn - properties ] . for the initial and final run - lengths , they are truncated geometric r.v.s , in the following sense .",
    "let @xmath76 be a geometric r.v .",
    "of parameter @xmath2 , namely @xmath77 .",
    "now notice that @xmath78 and @xmath79 are equal to @xmath80 for @xmath81 , to @xmath82 for @xmath83 and to @xmath84 for larger @xmath85 , so that @xmath86 .",
    "we can now conclude the proof : for the lower bound @xmath87 while for the upper bound @xmath88      in order to complete the proof of theorem  [ th : equispace - logn ] we introduce a proxy model . instead of covering the unit interval , this time we attempt to find a good coverage on a circle with circumference  1 .",
    "if we represent the locations by values in @xmath5 $ ] , this means that the distance between two points @xmath89 $ ] is @xmath90 . employing this distance to determine the cost as in   leads to define the following problem .",
    "[ prob : circle ] for given @xmath26 and @xmath27 , find @xmath6^n$ ] that minimizes @xmath91 } { \\mathbb{p}}(e_a ) \\tilde c_0(x_a ) , $ ] where @xmath92 and @xmath93    problem  [ prob : circle ] can also be formulated as a linear problem ; a result similar to theorem  [ prop : linprog ] with a minor modification to constraints   can be proved exactly in the same way .",
    "let @xmath27 and @xmath26 .",
    "the ( ordered ) vector @xmath28^n$ ] is the optimal solution of problem  [ prob : circle ] if and only if there exists a vector @xmath31 such that @xmath32 is an optimal solution to the following linear program : @xmath94,~a\\neq \\emptyset,\\nonumber\\\\ & w_a \\geq \\frac{1}{2}(x_{a_{k+1}}- x_{a_k } ) , \\hspace{.2 cm } \\text{for } k = 1,\\dots,|a|-1,\\nonumber\\\\ & w_a \\geq \\frac{1}{2 } ( 1- x_{a_{{\\left|a\\right| } } } + x_{a_1}).\\label{const_cycle_boundary}\\end{aligned}\\ ] ]    we now show that the equispaced solution @xmath51 is the optimal sensor placement for the circle",
    ". we will then relate it to the original problem on the line .",
    "[ prop : equidist_optimal_cycle ] the equispaced sensor placement @xmath51 is the only optimal sensor placement ( up to translation ) on the circle for problem  [ prob : circle ] .",
    "the linear program nature of the problem allows us to combine different sensor placements . given @xmath95 and @xmath96 we may form @xmath97",
    "this is a valid point of the polytope of constraints , and the cost is between the cost of the two initial placements . on the other hand , using the symmetry of the circle it follows that the rotation of @xmath13 ( formally a translation modulo 1 ) does not change the associated cost , even though @xmath98 may need to be changed appropriately . without loss of generality , we assume thus @xmath99 .",
    "let us fix an initial @xmath95 and define the rotated versions @xmath100 such that @xmath101 becomes @xmath102 .",
    "for every @xmath103 we have the corresponding best @xmath104 which all give the same cost .",
    "we want a closer look on their average @xmath105 using our previous observations , this is a valid sensor placement and @xmath106 has the same cost as any @xmath104 .",
    "but what is this @xmath46 ? let us check the distance of two consecutive sensors ( out of bound indices and distances have to be interpreted appropriately ) : @xmath107 therefore @xmath108 .",
    "this already shows that the equispaced placement is optimal .",
    "we now show that it is the only optimal solution .",
    "+ for the sensor placement @xmath46 the accompanying @xmath106 is not necessarily the best possible .",
    "we claim that whenever @xmath109 is not equispaced , there is a @xmath110 such that @xmath111 is valid and strictly cheaper than @xmath95 .",
    "when @xmath13 is not equispaced , it means that there are two consecutive sensors which are more than @xmath112 apart . in other words ,",
    "@xmath113}>1/(2n)$ ] . by the construction",
    "above , we get @xmath114}=w_{[n]}>1/(2n)$ ] . on the other hand , we know that we can decrease @xmath114}$ ] to @xmath115 for the equispaced placement without violating any constraints",
    ". define @xmath116 } & = 1/(2n),\\\\      \\tilde{w}^*_{a } & = w^*_{a } \\quad \\text{otherwise . }",
    "\\end{aligned}\\ ] ] this way @xmath111 is a valid point of the polytope .",
    "the costs of the different settings compare as follows : @xmath117 this becomes a strict inequality whenever @xmath118)>0 $ ] .",
    "consequently @xmath118)>0 $ ] is a sufficient condition for @xmath119 to be the strong optimum .",
    "this condition obviously holds for independent failures which concludes our proof .",
    "[ rem : xeq - optimal ] the same proof shows that @xmath51 is an optimal sensor placement for any variation of problem  [ prob : circle ] where @xmath23 is independent of the positions of the sensors and invariant under permutation .",
    "moreover , if there is a nonzero probability that all sensors are active , it is the only optimal placement , up to translations .",
    "next , we show that the optimal cost of our initial problem  [ prob : mainprob ] lies between the cost @xmath120 of the ( optimal ) equispaced solution @xmath51 for problem  [ prob : circle ] on the circle and the cost @xmath49 of the same distribution for problem  [ prob : mainprob ] . for this purpose , we need the following lemma providing a bound on the difference of cost for each set @xmath7 of active sensors , which will also prove useful later .    [",
    "lem : compare_circle_line_one_set ] let @xmath7 be a non - empty set of active sensors and @xmath121 their positions .",
    "there holds @xmath122 moreover , if @xmath123 , then @xmath124 .",
    "consider  .",
    "adding the average of the first two terms in the set on which the maximum is taken does not affect the value of the maximum .",
    "we have therefore @xmath125 observe that every quantity appearing in the definition @xmath126 also appears in  .",
    "therefore , we have @xmath127 .",
    "moreover , in case this inequality is strict , @xmath128 must be equal to one of the elements that appear in   but not in  , that is , either @xmath129 or @xmath130 .",
    "[ lem:3bounds ] let @xmath46 be an optimal solution to problem  [ prob : mainprob ] for given @xmath0 and @xmath2 .",
    "there holds @xmath131    the inequality @xmath132 follows from the optimality of @xmath46 for problem  [ prob : mainprob ] .",
    "similarly , @xmath133 follows from the optimality of @xmath51 for problem  [ prob : circle ] proved in theorem  [ prop : equidist_optimal_cycle ] .",
    "finally , since @xmath134 , it follows from lemma  [ lem : compare_circle_line_one_set ] that @xmath135 for every @xmath13 , and in particular that @xmath136 .",
    "thanks to lemma  [ lem:3bounds ] , now we just have to evaluate the difference between the cost of the equispaced solution @xmath51 in problems  [ prob : mainprob ] and  [ prob : circle ] .",
    "[ lem : bound_eq_line - eq_circle ] for any @xmath27 , @xmath26 , there holds @xmath137    we first consider a ( non - empty ) set of active sensors @xmath7 and find a bound on the difference of cost @xmath138 .",
    "observe first that @xmath139 , and therefore that @xmath140 in all cases .",
    "suppose now that @xmath141 and @xmath142 are different .",
    "it follows in that case from lemma  [ lem : compare_circle_line_one_set ] that @xmath143 , and that @xmath144 whenever @xmath145 , we have thus @xmath146 when @xmath147 , the inequality also holds since the right - hand side of   is non - negative .",
    "we now sum the inequality   over all events and use the symmetry of our problem to obtain @xmath148 where the event @xmath149 implicitly implies that @xmath7 is non - empty .",
    "observe that the probability for the @xmath150 sensor to be the first active one is @xmath151 .",
    "therefore , the expression @xmath152 is the expected value of a truncated geometric random variable ( i.e. a geometric random variable whose value is set to 0 if it exceeds @xmath0 ) , and is bounded by @xmath153 .",
    "reintroducing this into   leads to the desired result @xmath154 .",
    "the inequality   in theorem  [ th : equispace - logn ] follows then from the combination of lemmas  [ lem:3bounds ] and  [ lem : bound_eq_line - eq_circle ] .",
    "in this section , we study the optimal placement when @xmath2 takes on extreme values , either close to 0 or to 1 .",
    "our first result gives the optimal placements under such conditions .",
    "[ prop : neighborhoods ] if @xmath2 is in a neighborhood of 0 , then the equispaced placement @xmath51 is optimal .",
    "similarly , if @xmath2 is in a neighborhood of 1 , then the optimal placement is @xmath155 , where @xmath156 for all @xmath157 $ ] . [",
    "prp : pnearextreme ]    we rely on the linear program formulation in   [ sect : linprog ] .",
    "we have seen that the polytope of constraints is independent of @xmath2 , and that the cost vector evolves continuously with @xmath2 .",
    "for @xmath158 we know that the unique optimal solution is @xmath51 .",
    "this means that for any other vertex @xmath13 of the polytope of constraints we have @xmath159 let us denote the set of vertices of the polytope of constraints by @xmath160 . knowing that @xmath160 is finite , we get @xmath161 the strict inequality and the continuity of the cost function with respect to @xmath2 imply that , for a sufficiently small perturbation of the cost vector , @xmath51 will remain the optimal placement . in other words",
    ", @xmath51 is optimal as long as @xmath2 is in a sufficiently small neighborhood of 0 .    for large failure probability @xmath162",
    "the most relevant events are those with just one active sensor , in the sense that any @xmath7 with size two or more has @xmath163 .",
    "then , @xmath164 this holds for any placement @xmath13 , so in particular for all @xmath165 .",
    "clearly @xmath155 is strictly optimal concerning the main term @xmath166 . recalling that @xmath160 is finite",
    ", this implies that one can find a sufficiently small @xmath167 such that , for all @xmath168 , @xmath169 for all @xmath170 , i.e. , @xmath155 is optimal .",
    "the next two results provide estimates on the sizes of the neighborhoods in proposition  [ prop : neighborhoods ] , showing that their sizes asymptotically vanish as @xmath0 diverges .",
    "their proofs , presented in appendices [ ap : propequidistsmall ] and [ ap : propequidistlarge ] , rely on comparing @xmath51 and @xmath155 with alternative placements , and showing that the former are not optimal when @xmath2 differs from respectively 0 or 1 by more than a certain value that decays in @xmath171 .",
    "the neighborhood of 0 where @xmath51 is optimal is at most @xmath172 long , with some constant @xmath173 .",
    "[ prop : equidistsmallp ]    the neighborhood of 1 where the single cluster placement @xmath155 is optimal is at most @xmath174 long .",
    "[ prop : equidistlargep ]    the proof of proposition  [ prop : equidistlargep ] actually shows the slightly stronger result that @xmath155 is sub - optimal for any @xmath175 . in other words",
    ", it does not become optimal again for smaller values of @xmath2 .",
    "in this section we consider a random placement @xmath176 of the sensors .",
    "more precisely , the positions @xmath177 , @xmath178 , @xmath179 are i.i.d .",
    "random variables , uniformly distributed in the interval @xmath5 $ ] .",
    "notice that ( differently from @xmath13 in the rest of the paper ) , here @xmath176 has entries which are not ordered , so that the cost definition in   applies , while the one in   does not .",
    "the following result describes the asymptotic behavior of @xmath180 $ ] , where @xmath181 denotes expectation with respect to the random positions of sensors .",
    "note that the cost @xmath35 defined in   is itself averaged with respect to sensor failures .",
    "[ thm : random ] let @xmath176 be the above - defined random sensor placement .",
    "then , @xmath182 =   \\frac{1}{2(1-p ) } \\frac{\\log n}{n }   + o\\!\\left(\\frac{1}{n}\\right ) \\qquad \\text{for $ n\\to\\infty$ } \\,.\\ ] ]    from theorem  [ thm : random ] we can argue that @xmath180 $ ] has the same order of growth as @xmath49 , but with a larger constant , thus leading to an asymptotically worse performance : this comparison is illustrated in figure  [ fig : rand - vs - equi ] .",
    "the rest of the section describes the main steps of the proof , while some lengthier details are postponed to the appendix .",
    "$ ] , @xmath49 , and their approximations according to theorems  [ thm : random ] and  [ th : equispace - logn ] , respectively .",
    "the expected costs are simulated as monte carlo averages over 100 independent realizations of the placements and of the failures , taking @xmath183 . ]    from the definition in   and by linearity of expectation , @xmath184 = \\sum_{a \\subseteq [ n ] } { \\mathbb{p}}(e_a ) { \\mathbb{e}}[c_0({{x^{\\textup{rand}}}}_a ) ] \\,.\\ ] ] the key remark is that all sets @xmath7 having the same cardinality @xmath185 have the same average cost @xmath186 $ ] , which corresponds to the average cost of a vector of @xmath185 active sensors in random positions .",
    "then , we define @xmath187 as a vector with @xmath185 entries @xmath188 , i.i.d .",
    "uniform in @xmath5 $ ] . with this notation , @xmath186 = { \\mathbb{e}}[c_0({{x^{\\textup{rand,$m$}}}})]$ ] with @xmath189 , so that @xmath190 = \\sum_{m=0}^n { \\mathbb{p}}(|a|=m )   { \\mathbb{e}}[c_0({{x^{\\textup{rand,$m$ } } } } ) ] \\,.\\ ] ]    hence , we focus on finding bounds for @xmath191 $ ] . to do so , we make use of classic results about lengths of segments when cutting a rope at random points , as described below .",
    "we introduce the notation @xmath192 for the lengths of the segments obtained when cutting the @xmath5 $ ] interval at points from @xmath187 .",
    "more precisely , let @xmath193 be the vector obtained re - ordering entries of @xmath187 in non - decreasing order ; also define @xmath194 and @xmath195 ; finally define @xmath196 , for @xmath197 .",
    "the average cost @xmath191 $ ] is related to the distribution of the segment lengths @xmath192 , as follows .",
    "[ lemma : ec0randm - rope ] for any @xmath198 , @xmath199 = \\int_0 ^ 1   { \\mathbb{p}}(c_0({{x^{\\textup{rand,$m$}}}})>v ) \\mathrm{d}v \\ , , \\ ] ] where @xmath200 .    by computing the expectation as the integral of the survival function , immediately follows . from",
    "applied to @xmath201 , we have @xmath202 , which implies the second equality",
    ".    we will then take advantage of the following result about the distribution of the segment lengths @xmath192 .",
    "[ lem : cuttingrope ] let @xmath192 be the above - defined segment lengths .",
    "given @xmath203 non - negative parameters @xmath204 such that @xmath205 , and distinct indices @xmath206 $ ] , then @xmath207    the above lemmas , together with inclusion - exclusion principle , allow us to find the following bounds for @xmath208 $ ] .",
    "the bounds involve the harmonic numbers @xmath209 .",
    "the details of the proof are given in appendix [ ap : boundsec0 ] .",
    "[ lemma : bounds - ec0xrandm ] for all @xmath210 , @xmath211 \\ge \\frac{h_{m+1}}{2(m+1 ) } \\,.\\ ] ] moreover , for all @xmath212 , @xmath211 \\le \\frac{h_{m-1 } + 4}{2(m+1 ) } \\,.\\ ] ]    then , using lemma  [ lemma : bounds - ec0xrandm ] , we can find the following bounds for @xmath213 .",
    "the proof is described in detail in appendix [ ap : boundscxrand ] .",
    "[ lemma : bounds - cxrand ] for any @xmath214 , @xmath182 \\ge   ( 1 - e^{-2 { \\varepsilon}^2 n } ) \\frac{h_{\\lceil ( 1-p+{\\varepsilon})n \\rceil}}{2 \\lceil(1-p+{\\varepsilon})n \\rceil } \\,.\\ ] ] moreover , for any @xmath215 , @xmath182 \\le   e^{-2 { \\varepsilon}^2 n } +       \\frac{h_{\\lceil ( 1-p-{\\varepsilon})n \\rceil } + 4}{2 \\lceil ( 1-p-{\\varepsilon})n \\rceil + 2 }    \\,.\\ ] ]    the statement of theorem  [ thm : random ] follows from lemma  [ lemma : bounds - cxrand ] , by taking @xmath216 and by exploiting the fact that the asymptotic growth of harmonic numbers is @xmath217 for @xmath218 .",
    "as mentioned in the introduction , the paper  @xcite studies the coverage problem in one - dimension with the following failure model for the sensors .",
    "the number of failing sensors is known ( and indicated with @xmath85 ) but _ which _ sensors fail is unknown and random : more precisely , the set of the @xmath85 failing sensors is sampled from a uniform distribution over the subsets of @xmath219 with @xmath85 elements .",
    "the problem can be summarized as follows .",
    "[ prob : cortes ] for given positive integers @xmath220 with @xmath221 , find @xmath6^n$ ] that minimizes @xmath222 where @xmath223 is defined by   and @xmath224 if @xmath225 and 0 otherwise .",
    "observe that the only difference with our problem  [ prob : mainprob ] is that the probabilities @xmath23 have changed .",
    "the following lemma indicates how the corts model can be approximated by the independent failure model .",
    "[ lem : bound_cortes_indep ] for any @xmath6^n$ ] , @xmath221 and @xmath226 , @xmath227 were we use the notation @xmath228 for the cost of corts model and @xmath229 for the independent failure model .",
    "problem  [ prob : cortes ] involves uniformly randomly selecting a subset @xmath7 of @xmath85 failed sensors among @xmath0 possible ones .",
    "one way of doing this is to first build a set @xmath230 obtained by selecting independently every sensor with a probability @xmath2 .",
    "then , if @xmath231 , one obtains @xmath7 by removing @xmath232 uniformly randomly selected sensors from @xmath230 . if on the other hand @xmath233 , one adds @xmath234 randomly selected sensors to @xmath230 .",
    "observe that @xmath7 then always contains @xmath85 sensors , and that all sets @xmath7 with cardinality @xmath85 are equiprobable , so it is a valid selection process with respect to problem  [ prob : cortes ] .",
    "the cost of @xmath13 can be decomposed as the contributions of the event @xmath235 and @xmath236 .",
    "@xmath237 when @xmath236 , the set @xmath7 contains the set @xmath230 from which it was built , and the cost @xmath128 is thus smaller than or equal to @xmath238 . as a result , @xmath239 . on the other hand ,",
    "the cost @xmath238 is always bounded by 1 , and thus there always holds @xmath240 .",
    "in particular , @xmath241 . reintroducing these two bounds in   yields @xmath242 where the last inequality follows from the fact that the sets @xmath230 are built by randomly taking each sensor with a probability @xmath2 as in problem  [ prob : mainprob ] . now the size of @xmath230 follows a binomial distribution with parameters @xmath0 and @xmath2 .",
    "hoeffding s inequality implies then that @xmath243 . taking @xmath244 , we obtain @xmath245 , and the upper bound of this lemma follows then from  .",
    "the lower bound is obtained in a parallel way .",
    "results analogous to those presented in the previous sections can then be obtained for the model in  @xcite .",
    "we collect them in the following theorem .",
    "@xmath246    * * linear program . *",
    "theorem  [ prop : linprog ] is directly valid for problem  [ prob : cortes ] . *",
    "* asymptotic cost of @xmath51 . * for fixed @xmath247 and @xmath55",
    ", @xmath49 approximates @xmath248 more precisely , for any @xmath249 we have @xmath250 where the @xmath171 term can depend on @xmath251 and @xmath247 . *",
    "* near - optimality of @xmath51 .",
    "* let @xmath46 be the optimal solution to problem  [ prob : cortes ] .",
    "there holds @xmath252 * * asymptotic cost of @xmath176 . *",
    "the average cost of the random placement has the asymptotic behavior @xmath182 = \\frac{\\log m}{2 m } + o\\left ( \\frac{1}{m } \\right )   \\ ; \\text{for $ m \\to \\infty$ } \\,,\\ ] ] where @xmath253 is the number of active sensors .",
    "\\(a ) the proof of theorem  [ prop : linprog ] does not depend on the values of the probabilities @xmath23 .",
    "it applies thus directly to other models of probabilities , including that of problem  [ prob : cortes ] .",
    "moreover , the polytope of admissible solutions does not depend on @xmath23 either .",
    "therefore , whenever the optimal solution is unique , it must belong to the ( finite ) set of vertices of that polytope , independently of the model .",
    "\\(b ) this part of the result is obtained by combining the bound in theorem  [ th : equispace - logn ] with lemma  [ lem : bound_cortes_indep ] .",
    "\\(c ) the proof follows the reasoning held in   [ sec : perf_equidist ] .",
    "specifically we can introduce a variation of problem  [ prob : cortes ] on the circle .",
    "as explained in remark [ rem : xeq - optimal ] , proposition  [ prop : equidist_optimal_cycle ] implies then that @xmath51 is an optimal solution of that problem ( though not necessarily the only one since the probability for all sensors to be active is zero if @xmath254 ) . lemmas  [ lem : compare_circle_line_one_set ] and  [ lem:3bounds ] can then directly be extended with the same proof , so that @xmath255 .",
    "the bound ( c ) follows then from a variation of lemma  [ lem : bound_eq_line - eq_circle ] showing that @xmath256 .",
    "\\(d ) similarly to the proof of theorem  [ thm : random ] , we get @xmath257 for any @xmath7 with @xmath258 , and hence also @xmath259 . then",
    ", applying lemma  [ lemma : bounds - ec0xrandm ] , we get @xmath260 which concludes the proof .    our results on the asymptotic behavior of solutions to problem  [ prob : cortes ]",
    "complement those in  @xcite , which focus on general properties of the optimization problem and on deriving explicit formulas for certain values of @xmath261 .",
    "in this paper we have presented our findings on a new model of coverage by unreliable sensors , which extends the well - known disk - coverage problem to allow for independent sensor failures .",
    "we have shown that the resulting optimization problem is a linear program , thus solvable by standard methods . however , since the space of possible solutions grows exponentially with the size of the problem , we do not know whether a solution can be found in a polynomial time .",
    "although the optimal solution can possibly be hard to find , and even if its properties are difficult to describe precisely , we have been able to present a suboptimal solution which asymptotically achieves the optimal performance as the number of sensors grows to infinity . remarkably , this near - optimal solution is just the equispaced placement , which is optimal in the case without failures .",
    "we have also compared the performance of random sensor placement to the equispaced setting to find that there is a constant factor deterioration of the cost : nevertheless , the rate of growth is the same as the number of sensors increases .",
    "this paper opens several research directions .",
    "the first natural direction is the extension to higher dimensions .",
    "as mentioned in the introduction , the coverage performance of two - dimensional sensor networks has been extensively investigated . consistently with the results in  @xcite and some preliminary results that we have obtained , we believe that both @xmath49 and @xmath262 are asymptotically proportional to @xmath263 . however , characterising the proportionality constant and its optimality is an open question .",
    "in fact , our optimality analysis hinges on the assumption of dimension one : crucially , the linear programming characterisation is unlikely to effectively extend to higher dimensions .",
    "secondly , in this paper we have chosen a min - max disk - coverage cost : different cost functions would lead to interesting alternative problems .",
    "for instance , one can consider the weighted integral of a non - decreasing function of the distance to the closest sensor .",
    "thirdly , one might consider the case of heterogeneous sensors , where the failure probability can depend on the sensor itself or on its location",
    ". finally , a challenging question is finding feedback control laws that enable autonomous deployment of self - propelled sensors , in such a way to take random failure into account .",
    "this problem has been recently studied in relation to corts model in  @xcite , but is completely open for the failure model proposed in this paper .",
    "we propose the alternative sensor placement    @xmath264 and we show that , for some @xmath265 and for sufficiently large @xmath0 , this placement gives a better ( expected ) cost than @xmath51 . in order to do so",
    ", we estimate the cost difference @xmath266 .",
    "we first compare the cost difference for any fixed set of active sensors @xmath7 . if @xmath7 is empty , the two costs are trivially the same .",
    "now consider a non - empty fixed @xmath7 , and let @xmath85 be the length of the longest sequence of consecutive failed sensors among the _ middle _ ones @xmath267 . in the following",
    ", we are going to prove the following bounds :    * @xmath268 ; * if @xmath269 and sensor 1 fails , then @xmath270 .",
    "both bounds are based on the following observation : @xmath271 where @xmath272 is the longest between the runs of failures involving the first and last sensor .",
    "notice that @xmath273 .    to prove ( a ) ,",
    "consider two cases .",
    "if @xmath274 , then both maxima in are achieved by the term involving @xmath85 , and @xmath275 . if @xmath276 , then both maxima in are achieved by the term involving @xmath277 , and @xmath278 ; the claim then follows using in the numerator the bounds @xmath279 and @xmath280 ( the latter is true since by definition @xmath281 ) .    to prove ( b ) , notice that the assumption that sensor 1 fails implies @xmath282 ; also recall that @xmath279 , and that by assumption @xmath283 , so that we have @xmath284 . in this case , both maxima in are achieved by the term involving @xmath277 , and @xmath285 ; the claim follows from the bound @xmath286 .",
    "now we come back to the averaged costs .",
    "we denote by @xmath287 the set of sets @xmath7 for which the longest sequence of failed sensors among the middle ones has length @xmath85 , and by @xmath288 the set of sets @xmath7 for which the sensor @xmath64 fails .",
    "we study @xmath289   \\,.\\ ] ] for all terms with @xmath290 , we use the bound ( a ) to get @xmath291 \\le i_k$ ] . for @xmath292 and @xmath293",
    ", we separate the case where sensor 1 fails or is active : @xmath294 \\\\ = & \\sum_{k=0}^{1 } { \\mathbb{p}}(e_k\\cap f_1 ) { \\mathbb{e } } [ c_0({{x^{\\textup{alt}}}}_a ) - c_0({{x^{\\textup{eq}}}}_a )   | e_k\\cap f_1 ] + \\sum_{k=0}^{1 } { \\mathbb{p}}(e_k\\cap \\bar f_1 ) { \\mathbb{e } } [ c_0({{x^{\\textup{alt}}}}_a ) - c_0({{x^{\\textup{eq}}}}_a )   | e_k\\cap \\bar f_1 ]   .\\end{aligned}\\ ] ] for the first term , we can use the tighter bound ( b ) , to get @xmath295 \\le -j$ ] ; for the second term we use bound ( a ) , together with the remark that @xmath296 , to get @xmath297 \\le i_1 $ ] .",
    "notice that @xmath298 and @xmath299 are disjoint , and that @xmath288 is and independent event from any @xmath287 since sensor failures are independent by assumption , with @xmath300 .",
    "hence , we have @xmath301   \\le - { \\mathbb{p}}(e_0 \\cup e_1 ) p j$ ] and @xmath302 \\le { \\mathbb{p}}(e_0 \\cup e_1 ) ( 1-p ) i_1 $ ] .    collecting all terms",
    ", we have @xmath303 which we can re - write as @xmath304 we now show that @xmath305 are both negative when @xmath306 for a suitable @xmath307 and sufficiently large @xmath0 .",
    "substituting the values of @xmath308 and @xmath309 in @xmath310 leads to @xmath311 which is negative for sufficiently large @xmath0 when @xmath312 for any @xmath313 .    to analyze @xmath314 , we start by bounding @xmath315 .",
    "there are @xmath316 possible sequences of  @xmath85 consecutive middle sensors and the probability that all the sensors fail in one such sequence is @xmath317 .",
    "therefore , @xmath318 and as a consequence @xmath319 the first part of inequality allows bounding the first term in @xmath314 : @xmath320 re - introducing this bound in @xmath314 and using leads then to @xmath321 choosing @xmath265 for any positive @xmath307 , the expression in the parentheses converges to @xmath322 as @xmath323 .",
    "therefore it is negative for large enough @xmath0 , which is what we needed .",
    "now , let us fix some @xmath324 .",
    "we have shown above that there exists a @xmath325 such that , for any @xmath326 , if @xmath327 then @xmath328 .",
    "this shows that for @xmath326 the size of the neighborhood of @xmath158 where @xmath51 is optimal is at most @xmath329 . on the other hand , for @xmath330 , trivially the size of such neighborhood",
    "is at most @xmath331 .",
    "hence , for any @xmath0 , such size is at most @xmath172 with @xmath332 .",
    "the result is trivial for @xmath333 , so we assume in the sequel that @xmath334 .",
    "we compare the cost of the single cluster with another candidate with three clusters as follows .",
    "+    ( 0,0)(8,0 ) ; ( 2,0 ) circle [ radius = 0.05 ] ; ( 4,0 ) circle [ radius = 0.05 ] ; ( 6,0 ) circle [ radius = 0.05 ] ;    at ( 2,-.1 ) @xmath85 ; at ( 4,-.1 ) @xmath335 ; at ( 6,-.1 ) @xmath85 ;    at ( 0,.1 ) @xmath84 ; at ( 2,.1 ) @xmath336 ; at ( 4,.1 ) @xmath44 ; at ( 6,.1 ) @xmath337 ; at ( 8,.1 ) @xmath64 ;    the numbers below the dots indicate the number of sensors aggregated at that point , @xmath85 will be chosen later . if we show that this new placement is better than the single cluster for a certain @xmath2 , it implies that having a single cluster is not optimal . for the single cluster ,",
    "the cost is always @xmath44 . for the three clusters we get    [ cols=\"^ , < \"",
    ", ]      +    we get less than @xmath44 in expectation if the probability of getting @xmath336 is higher than getting @xmath337 .",
    "the relation needed for the probabilities is @xmath338 multiplying by @xmath339 this is equivalent to @xmath340 we need to confirm this inequality with an appropriate choice of @xmath85 . if @xmath341 , then   holds with @xmath293 ( and @xmath334 )",
    "otherwise , observe that @xmath342 we have to choose @xmath317 from the sequence @xmath343 .",
    "this sequence starts at @xmath344 and ends at @xmath345 , and the ratio of consequent elements is greater than @xmath346 .",
    "therefore there is an element @xmath317 in the interval @xmath347 .",
    "the left hand side of   is a quadratic function in @xmath317 so it is easy to verify that @xmath348 combining this with   we arrive at  , which completes our proof .",
    "we start by proving the lower bound . the case @xmath349 is true , since in this case the cost is 1 , and @xmath350 so that @xmath351 . then consider @xmath198 . from lemma  [ lemma : ec0randm - rope ]",
    "we obtain the following lower bound @xmath352 using inclusion - exclusion principle and applying lemma  [ lem : cuttingrope ] with @xmath353 , we obtain @xmath354 then , substituting this in  , we get @xmath355 by computing @xmath356 and recalling that @xmath357 , we end the proof of the lower bound .    for the upper bound we proceed similarly . by lemma  [ lemma : ec0randm - rope ] and",
    "the union bound , we get @xmath358 and then , by lemma  [ lem : cuttingrope ] @xmath359 and by the same lemma together with inclusion - exclusion principle , @xmath360 from this and using  , we get @xmath361 which proves the upper bound .",
    "to get the lower bound , we consider  . by discarding terms with large @xmath185 and using lemma  [ lemma : bounds - ec0xrandm ]",
    ", we get @xmath362 it is easy to show that @xmath363 is decreasing with @xmath185 , so that @xmath364 then , @xmath365 and , by hoeffding inequality , @xmath366 , which ends the proof of the lower bound .    for the upper bound , we proceed similarly . from now on , we assume that @xmath367 ; notice that the bound is trivially true otherwise .",
    "we consider   and we split the summation in two terms : a first term with @xmath368 , in which we use the trivial bound @xmath369 , and the remaining sum in which we use the upper bound from lemma  [ lemma : bounds - ec0xrandm ] , as follows @xmath370 by hoeffding inequality , @xmath371 . for the second term , it is easy to show that @xmath372 is decreasing with @xmath185 and hence @xmath373 finally we use the trivial bound @xmath374 .",
    "then , the formulation of the upper bound stated in the proposition , which is slightly weaker but has the advantage of not explicitly requiring to assume @xmath367 , is obtained since @xmath375 and in the denominator @xmath376 ."
  ],
  "abstract_text": [
    "<S> this paper regards the problem of optimally placing unreliable sensors in a one - dimensional environment . </S>",
    "<S> we assume that sensors can fail with a certain probability and we minimize the expected maximum distance from any point in the environment to the closest active sensor . </S>",
    "<S> we provide a computational method to find the optimal placement and we estimate the relative quality of equispaced and random placements . </S>",
    "<S> we prove that the former is asymptotically equivalent to the optimal placement when the number of sensors goes to infinity , with a cost ratio converging to 1 , while the cost of the latter remains strictly larger . </S>"
  ]
}
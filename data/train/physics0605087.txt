{
  "article_text": [
    "networks have attracted considerable recent attention in physics and other fields as a foundation for the mathematical representation of a variety of complex systems , including biological and social systems , the internet , the worldwide web , and many others  @xcite .",
    "a common feature of many networks is `` community structure , '' the tendency for vertices to divide into groups , with dense connections within groups and only sparser connections between them  @xcite .",
    "social networks  @xcite , biochemical networks  @xcite , and information networks such as the web  @xcite , have all been shown to possess strong community structure , a finding that has substantial practical implications for our understanding of the systems these networks represent .",
    "communities are of interest because they often correspond to functional units such as cycles or pathways in metabolic networks  @xcite or collections of pages on a single topic on the web  @xcite , but their influence reaches further than this .",
    "a number of recent results suggest that networks can have properties at the community level that are quite different from their properties at the level of the entire network , so that analyses that focus on whole networks and ignore community structure may miss many interesting features .",
    "for instance , in some social networks one finds individuals with different mean numbers of contacts in different groups ; the individuals in one group might be gregarious , having many contacts with others , while the individuals in another group might be more reticent .",
    "an example of this behavior is seen in networks of sexual contacts , where separate communities of high- and low - activity individuals have been observed  @xcite .",
    "if one were to characterize such a network by quoting only a single figure for the average number of contacts an individual has , one would be missing features of the network directly relevant to questions of scientific interest such as epidemiological dynamics  @xcite .",
    "it has also been shown that vertices positions within communities can affect the role or function they assume . in social networks ,",
    "for example , it has long been accepted that individuals who lie on the boundaries of communities , bridging gaps between otherwise unconnected people , enjoy an unusual level of influence as the gatekeepers of information flow between groups  @xcite .",
    "a surprisingly similar result is found in metabolic networks , where metabolites that straddle the boundaries between modules show particular persistence across species  @xcite .",
    "this finding might indicate that modules in metabolic networks possess some degree of functional independence within the cell , allowing vertices central to a module to change or disappear with relatively little effect on the rest of the network , while vertices on the borders of modules are less able to change without affecting other aspects of the cellular machinery .",
    "one can also consider the communities in a network themselves to form a higher level meta - network , a coarse - grained representation of the full network .",
    "such coarse - grained representations have been used in the past as tools for visualization and analysis  @xcite but more recently have also been investigated as topologically interesting entities in their own right .",
    "in particular , networks of modules appear to have degree distributions with interesting similarities to but also some differences from the degree distributions of other networks  @xcite , and may also display so - called preferential attachment in their formation  @xcite , indicating the possibility of distinct dynamical processes taking place at the level of the modules .    for all of these reasons and others besides there has been a concerted effort in recent years within the physics community and elsewhere to develop mathematical tools and computer algorithms to detect and quantify community structure in networks .",
    "a huge variety of community detection techniques have been developed , based variously on centrality measures , flow models , random walks , resistor networks , optimization , and many other approaches  @xcite .",
    "for reviews see refs .",
    "@xcite .",
    "in this paper we focus on one approach to community detection that has proven particularly effective , the optimization of the benefit function known as `` modularity '' over the possible divisions of a network .",
    "methods based on this approach have been found to produce excellent results in standardized tests  @xcite .",
    "unfortunately , exhaustive optimization of the modularity demands an impractically large computational effort , but good results have been obtained with various approximate optimization techniques , including greedy algorithms  @xcite , simulated annealing  @xcite , and extremal optimization  @xcite . in this paper",
    "we describe a different approach , in which we rewrite the modularity function in matrix terms , which allows us to express the optimization task as a spectral problem in linear algebra .",
    "this approach leads to a family of fast new computer algorithms for community detection that produce results competitive with the best previous methods .",
    "perhaps more importantly , our work also leads to a number of useful insights about network structure via the close relations we will demonstrate between communities and matrix spectra .",
    "our work is by no means the first to find connections between divisions of networks and matrix spectra .",
    "there is a large literature within computer science on so - called spectral partitioning , in which network properties are linked to the spectrum of the graph laplacian matrix  @xcite .",
    "this method is different from the one introduced here and is not in general well suited to the problem of community structure detection .",
    "the reasons for this , however , turn out to be interesting and instructive , so we begin our presentation with a brief review of the traditional spectral partitioning method in section  [ specpart ] .",
    "a consideration of the deficiencies of this method in section  [ modsec ] leads us in sections  [ specmod][multiway ] to introduce and develop at length our own method , which is based on the characteristic matrix we call the `` modularity matrix . '' sections  [ negative ] and  [ otheruses ] explore some further ideas arising from the study of the modularity matrix but not directly related to community detection . in section  [ concs ]",
    "we give our conclusions .",
    "a brief report of some of the results described in this paper has appeared previously as ref .",
    "there is a long tradition of research in computer science on graph partitioning , a problem that arises in a variety of contexts , but most prominently in the development of computer algorithms for parallel or distributed computation .",
    "suppose a computation requires the performance of some number  @xmath0 of tasks , each to be carried out by a separate process , program , or thread running on one of @xmath1 different computer processors .",
    "typically there is a desired number of tasks or volume of work to be assigned to each of the processors . if the processors are identical , for instance , and the tasks are of similar complexity , we may wish to assign the same number of tasks to each processor so as to share the workload roughly equally .",
    "it is also typically the case that the individual tasks require for their completion results generated during the performance of other tasks , so tasks must communicate with one another to complete the overall computation .",
    "the pattern of required communications can be thought of as a network with @xmath0 vertices representing the tasks and an edge joining any pair of tasks that need to communicate , for a total of @xmath2 edges .",
    "( in theory the amount of communication between different pairs of tasks could vary , leading to a _ weighted _ network , but we here restrict our attention to the simplest unweighted case , which already presents interesting challenges . )    normally , communications between processors in parallel computers are slow compared to data movement within processors , and hence we would like to keep such communications to a minimum . in network terms",
    "this means we would like to divide the vertices of our network ( the processes ) into groups ( the processors ) such that the number of edges between groups is minimized .",
    "this is the graph partitioning problem .",
    "problems of this type can be solved exactly in polynomial time  @xcite , but unfortunately the polynomial in question is of leading order  @xmath3 , which is already prohibitive for all but the smallest networks even when @xmath1 takes the smallest possible value of  2 . for practical applications , therefore , a number of approximate solution methods have been developed that appear to give reasonably good results .",
    "one of the most widely used is the spectral partitioning method , due originally to fiedler  @xcite and popularized particularly by pothen  _ et  al .",
    "_  @xcite .",
    "we here consider the simplest instance of the method , where @xmath4 , i.e. ,  where our network is to be divided into just two non - intersecting subsets such that the number of edges running between the subsets is minimized .",
    "we begin by defining the adjacency matrix  @xmath5 to be the matrix with elements @xmath6 ( we restrict our attention in this paper to undirected networks , so that @xmath5 is symmetric . )",
    "then the number of edges  @xmath7 running between our two groups of vertices , also called the cut size , is given by @xmath8 where the factor of @xmath9 compensates for our counting each edge twice in the sum .",
    "to put this in a more convenient form , we define an index vector  @xmath10 with @xmath0 elements @xmath11 ( note that @xmath10 satisfies the normalization condition @xmath12 . )",
    "then @xmath13 which allows us to rewrite eq .   as @xmath14 noting that the number of edges  @xmath15 connected to a vertex  @xmath16also called the degree of the vertex  is given by @xmath17 the first term of the sum in   is @xmath18 where we have made use of @xmath19 ( since @xmath20 ) , and @xmath21 is 1 if @xmath22 and zero otherwise .",
    "thus @xmath23 we can write this in matrix form as @xmath24 where @xmath25 is the real symmetric matrix with elements @xmath26 , or equivalently @xmath27 @xmath25 is called the laplacian matrix of the graph or sometimes the admittance matrix .",
    "it appears in many contexts in the theory of networks , such as the analysis of diffusion and random walks on networks  @xcite , kirchhoff s theorem for the number of spanning trees  @xcite , and the dynamics of coupled oscillators  @xcite .",
    "its properties are the subject of hundreds of papers in the mathematics and physics literature and are by now quite well understood . for our purposes , however , we will need only a few simple observations about the matrix to make progress .",
    "our task is to choose the vector @xmath10 so as to minimize the cut size , eq .  .",
    "let us write @xmath10 as a linear combination of the normalized eigenvectors  @xmath28 of the laplacian thus : @xmath29 , where @xmath30 and the normalization @xmath12 implies that @xmath31 then @xmath32 where @xmath33 is the eigenvalue of @xmath25 corresponding to the eigenvector  @xmath28 and we have made use of @xmath34 . without loss of generality , we assume that the eigenvalues are labeled in increasing order @xmath35 . the task of minimizing  @xmath7 can then be equated with the task of choosing the nonnegative quantities  @xmath36 so as to place as much as possible of the weight in the sum   in the terms corresponding to the lowest eigenvalues , and as little as possible in the terms corresponding to the highest , while respecting the normalization constraint  .",
    "the sum of every row ( and column ) of the laplacian matrix is zero : @xmath37 where we have made use of  .",
    "thus the vector @xmath38 is always an eigenvector of the laplacian with eigenvalue zero .",
    "it is less trivial , but still straightforward , to demonstrate that all eigenvalues of the laplacian are nonnegative .",
    "( the laplacian is symmetric and equal to the square of the edge incidence matrix , and hence its eigenvalues are all the squares of real vectors . )",
    "thus the eigenvalue  0 is always the smallest eigenvalue of the laplacian and the corresponding eigenvector is @xmath39 , correctly normalized .    given these observations it is now straightforward to see how to minimize the cut size  @xmath7 . if we choose @xmath40 , then all of the weight in the final sum in eq .",
    "is in the term corresponding to the lowest eigenvalue  @xmath41 and all other terms are zero , since @xmath38 is an eigenvector and the eigenvectors are orthogonal .",
    "thus this choice gives us @xmath42 , which is the smallest value it can take since it is by definition a nonnegative quantity .",
    "unfortunately , when we consider the physical interpretation of this solution , we see that it is trivial and uninteresting .",
    "given the definition   of  @xmath10 , the choice @xmath40 is equivalent to placing all the vertices in group  1 and none of them in group  2 .",
    "technically , this is a valid division of the network , but it is not a useful one . of course the cut size is zero if we put all the vertices in one of the groups and none in the other , but such a trivial solution tells us nothing about how to solve our original problem .",
    "we would like to forbid this trivial solution , so as to force the method to find a nontrivial one .",
    "a variety of ways have been explored for achieving this goal , of which the most common is to fix the sizes of the two groups , which is convenient if , as discussed above , the sizes of the groups are specified anyway as a part of the problem . in the present case ,",
    "fixing the sizes of the groups fixes the coefficient  @xmath43 of the @xmath44  term in the sum in eq .  ; if the required sizes of the groups are @xmath45 and  @xmath46 , then @xmath47 since we can not vary this coefficient , we shift our attention to the other terms in the sum .",
    "if there were no further constraints on our choice of  @xmath10 , apart from the normalization condition  @xmath12 , our course would be clear : @xmath7  would be minimized by choosing @xmath10 proportional to the second eigenvector  @xmath48 of the laplacian , also called the fiedler vector .",
    "this choice places all of the weight in eq .   in the term involving the second - smallest eigenvalue  @xmath49 , also known as the algebraic connectivity .",
    "the other terms would automatically be zero , since the eigenvectors are orthogonal .",
    "unfortunately , there is an additional constraint on @xmath10 imposed by the condition , eq .",
    ", that its elements take the values  @xmath50 , which means in most cases that @xmath10 can not be chosen parallel to  @xmath48 .",
    "this makes the optimization problem much more difficult .",
    "often , however , quite good approximate solutions can be obtained by choosing @xmath10 to be as close to parallel with @xmath48 as possible .",
    "this means maximizing the quantity @xmath51 where @xmath52 is the @xmath16th element of @xmath48 . here",
    "the second relation follows via the triangle inequality , and becomes an equality only when all terms in the first sum are positive ( or negative ) . in other words ,",
    "the maximum of @xmath53 is achieved when @xmath54 for all  @xmath16 , or equivalently when @xmath55 has the same sign as @xmath52 .",
    "thus the maximum is obtained with the choice @xmath56 even this choice however is often forbidden by the condition that the number of @xmath57 and @xmath58 elements of @xmath10 be equal to the desired sizes @xmath45 and @xmath46 of the two groups , in which case the best solution is achieved by assigning vertices to one of the groups in order of the elements in the fiedler vector , from most positive to most negative , until the groups have the required sizes . for groups of different sizes",
    "there are two distinct ways of doing this , one in which the smaller group corresponds to the most positive elements of the vector and one in which the larger group does . we can choose between them by calculating the cut size  @xmath7 for both cases and keeping the one that gives the better result .",
    "this then is the spectral partitioning method in its simplest form .",
    "it is not guaranteed to minimize  @xmath7 , but , particularly in cases where @xmath49 is well separated from the eigenvalues above it , it often does very well .",
    "figure  [ eppstein ] shows an example application typical of those found in the literature , to a two - dimensional mesh such as might be used in parallel finite - element calculations .",
    "this particular mesh is a small 547-vertex example from bern  _ et  al . _",
    "@xcite and is shown complete in panel  ( a ) of the figure .",
    "panel  ( b ) shows the division of the mesh into two parts of @xmath59 and @xmath60 vertices respectively using the spectral partitioning approach , which finds a cut of size 46 edges in this case .",
    "although the cut found in this example is a reasonable one , it does not appear  at least to this author s eye  that the vertex groups in fig .",
    "[ eppstein]b constitute any kind of natural division of the network into `` communities . ''",
    "this is typical of the problems to which spectral partitioning is usually applied : in most circumstances the network in question does not divide up easily into groups of the desired sizes , but one must do the best one can .",
    "for these types of tasks , spectral partitioning is an effective and appropriate tool .",
    "the task of finding natural community divisions in a network , however , is quite different , and demands a different approach , as we now discuss .",
    "despite its evident success in the graph partitioning arena , spectral partitioning is a poor approach for detecting natural community structure in real - world networks , which is the primary topic of this paper .",
    "the issue is with the condition that the sizes of the groups into which the network is divided be fixed .",
    "this condition is neither appropriate nor realistic for community detection problems . in most cases",
    "we do not know in advance the sizes of the communities in a network and choosing arbitrary sizes will usually preclude us from finding the best solution to the problem",
    ". we would like instead to let the group sizes be free , but the spectral partitioning method breaks down if we do this , as we have seen : if the group sizes are not fixed , then the minimum cut size is always achieved by putting all vertices in one group and none in the other .",
    "indeed , this statement is considerably broader than the spectral partitioning method itself , since any method that correctly minimizes the cut size without constraint on the group sizes is sure to find , in the general case , that the minimum value is achieved for this same trivial division .",
    "several approaches have been proposed to get around this problem .",
    "for instance , the ratio cut method  @xcite minimizes not the simple cut size  @xmath7 but the ratio @xmath61 , where @xmath45 and @xmath46 are again the sizes of the two groups of vertices .",
    "this penalizes configurations in which either of the groups is small and hence favors balanced divisions over unbalanced ones , releasing us from the obligation to fix the group sizes .",
    "spectral algorithms based on ratio cuts have been proposed  @xcite and have proved useful for certain classes of partitioning problems .",
    "still , however , this approach effectively chooses the group sizes , at least approximately , since it is biased in favor of divisions into equal - sized parts .",
    "variations are possible that are biased towards other , unequal part sizes , but then one must choose those parts sizes and so again we have a situation in which we need to know in advance the sizes of the groups if we are to get the `` right '' results . the ratio cut method does allow some leeway for the sizes to vary around their specified values , which makes it more flexible than the simple minimum cut method , but at its core it still suffers from the same drawbacks that make standard spectral partitioning inappropriate for community detection .",
    "the fundamental problem with all of these methods is that cut sizes are simply not the right thing to optimize because they do nt accurately reflect our intuitive concept of network communities .",
    "a good division of a network into communities is not merely one in which the number of edges running between groups is small .",
    "rather , it is one in which the number of edges between groups is _ smaller than expected_. only if the number of between - group edges is significantly lower than would be expected purely by chance can we justifiably claim to have found significant community structure .",
    "equivalently , we can examine the number of edges _ within _ communities and look for divisions of the network in which this number is higher than expected  the two approaches are equivalent since the total number of edges is fixed and any edges that do not lie between communities must necessarily lie inside them .    these considerations lead us to shift our attention from measures based on pure cut size to a modified benefit function  @xmath62 defined by @xmath63 this benefit function is called modularity  @xcite .",
    "it is a function of the particular division of the network into groups , with larger values indicating stronger community structure .",
    "hence we should , in principle , be able to find good divisions of a network into communities by optimizing the modularity over possible divisions .",
    "this approach , proposed in  @xcite and since pursued by a number of authors  @xcite , has proven highly effective in practice  @xcite and is the primary focus of this article .",
    "the first term in eq .   is straightforward to calculate .",
    "the second , however , is rather vague and needs to be made more precise before we can evaluate the modularity .",
    "what exactly do we mean by the `` expected number '' of edges within a community ?",
    "answering this question is essentially equivalent to choosing a `` null model '' against which to compare our network .",
    "the definition of the modularity involves a comparison of the number of within - group edges in a real network and the number in some equivalent randomized model network in which edges are placed without regard to community structure .",
    "it is one of the strengths of the modularity approach that it makes the role of this null model explicit and clear .",
    "all methods for finding communities are , in a sense , assuming some null model , since any method must make a value judgment about when a particular density of edges is significant enough to define a community . in most cases , this assumption is hidden within the workings of a computer algorithm and is difficult to disentangle , even when the algorithm itself is well understood . by bringing its assumptions out into the open , the modularity method gives us more control over our calculations and more understanding of their implications .",
    "our null model must have the same number of vertices  @xmath0 as the original network , so that we can divide it into the same groups for comparison , but apart from this we have a good deal of freedom about our choice of model .",
    "we here consider the broad class of randomized models in which we specify separately the probability  @xmath64 for an edge to fall between every pair of vertices  @xmath65 .",
    "more precisely , @xmath64  is the expected number of edges between @xmath16 and  @xmath66 , a definition that allows for the possibility that there may be more than one edge between a pair of vertices , which happens in certain types of networks .",
    "we will consider some particular choices of @xmath64 in a moment , but for now let us pursue the developments in general form",
    ".    given @xmath64 , the modularity can be defined as follows .",
    "the actual number of edges falling between a particular pair of vertices @xmath16 and @xmath66 is  @xmath67 , eq .  , and the expected number is , by definition ,  @xmath64 .",
    "thus the actual minus expected number of edges between @xmath16 and @xmath66 is @xmath68 and the modularity is ( proportional to ) the sum of this quantity over all pairs of vertices belonging to the same community .",
    "let us define @xmath69 to be the community to which vertex  @xmath16 belongs .",
    "then the modularity can be written @xmath70 \\delta(g_i , g_j ) , \\label{q1}\\ ] ] where @xmath71 if @xmath72 and 0 otherwise and @xmath2 is again the number of edges in the network .",
    "the extra factor of @xmath73 in eq .",
    "is purely conventional ; it is included for compatibility with previous definitions of the modularity and plays no part in the maximization of  @xmath62 since it is a constant for any given network . a special case of eq .",
    "was given previously by the present author in  @xcite and independently , in slightly different form , by white and smyth  @xcite .",
    "a number of other expressions for the modularity have also been presented by various authors  @xcite and are convenient in particular applications . also of interest is the derivation of the modularity given recently by reichardt and bornholdt  @xcite , which is quite general and provides an interesting alternative to the derivation presented here .",
    "returning to the null model , how should @xmath64 be chosen ?",
    "the choice is not entirely unconstrained .",
    "first , we consider in this paper only undirected networks , which implies that @xmath74 .",
    "second , it is axiomatically the case that @xmath75 when all vertices are placed in a single group together : by definition , the number of edges within groups and the expected number of such edges are both equal to  @xmath2 in this case . setting all @xmath69 equal in eq .",
    ", we find that @xmath76 = 0 $ ] or equivalently @xmath77 this equation says that we are restricted to null models in which the expected number of edges in the entire network equals the actual number of edges in the original network  a natural choice if our comparison of numbers of edges within groups is to have any meaning .    beyond these basic considerations",
    ", there are many possible choices of null model and several have been considered previously in the literature  @xcite .",
    "perhaps the simplest is the standard ( bernoulli ) random graph , in which edges appear with equal probability @xmath78 between all vertex pairs . with a suitably chosen value of @xmath79 this model can be made to satisfy   but , as many authors have pointed out  @xcite ,",
    "the model is not a good representation of most real - world networks .",
    "a particularly glaring aspect in which it errs is its degree distribution .",
    "the random graph has a binomial degree distribution ( or poisson in the limit of large graph size ) , which is entirely unlike the right - skewed degree distributions found in most real - world networks  @xcite .",
    "a much better null model would be one in which the degree distribution is approximately the same as that of the real - world network of interest . to satisfy this demand",
    "we will restrict our attention in this paper to models in which the expected degree of each vertex within the model is equal to the actual degree of the corresponding vertex in the real network . noting that the expected degree of vertex  @xmath16 is given by @xmath80",
    ", we can express this condition as @xmath81 if this constraint is satisfied , then   is automatically satisfied as well , since @xmath82 .",
    "equation   is a considerably more stringent constraint than  in most cases , for instance , it excludes the bernoulli random graph  but it is one that we believe makes good sense , and one moreover that has a variety of desirable consequences for the developments that follow .    the simplest null model in this class , and the only one that has been considered at any length in the past , is the model in which edges are placed entirely at random , subject to the constraint  .",
    "that is , the probability that an end of a randomly chosen edge attaches to a particular vertex  @xmath16 depends only on the expected degree  @xmath15 of that vertex , and the probabilities for the two ends of a single edge are independent of one another .",
    "this implies that the expected number of edges @xmath64 between vertices  @xmath16 and @xmath66 is the product @xmath83 of separate functions of the two degrees , where the functions must be the same since @xmath64 is symmetric .",
    "then eq .",
    "implies @xmath84 for all  @xmath16 and hence @xmath85 for some constant  @xmath86 . and",
    ".   says that @xmath87 and hence @xmath88 and @xmath89 this model has been studied in the past in its own right as a model of a network , for instance by chung and lu  @xcite .",
    "it is also closely related to the configuration model , which has been studied widely in the mathematics and physics literature  @xcite .",
    "indeed , essentially all expected properties of our model and the configuration model are identical in the limit of large network size , and hence eq .   can be considered equivalent to the configuration model in this limit",
    ". and @xmath66 in the configuration model is also given by eq .",
    "in the limit of large network size ; for smaller networks , there are corrections of order  @xmath90 . ]",
    "although many of the developments outlined in this paper are true for quite general choices of the null model used to define the modularity , the choice   is the only one we will pursue here .",
    "it is worth keeping mind however that other choices are possible : massen and doye  @xcite , for instance , have used a variant of the configuration model in which multiedges and self - edges were excluded . and further choices could be useful in specific cases , such as cases where there are strong correlations between the degrees of vertices  @xcite or where there is a high level of network transitivity  @xcite .",
    "once we have an explicit expression for the modularity we can determine the community structure by maximizing it over possible divisions of the network . unfortunately , exhaustive maximization over all possible divisions is computational intractable because there are simply too many divisions , but various approximate optimization methods have proven effective  @xcite . here",
    ", we develop a matrix - based approach analogous to the spectral partitioning method of section  [ specpart ] , which leads not only to a whole array of possible optimization algorithms but also to new insights about the nature and implications of community structure in networks .      as before ,",
    "let us consider initially the division of a network into just two communities and denote a potential such division by an index vector  @xmath10 with elements as in eq .  .",
    "we notice that the quantity @xmath91 is 1 if @xmath16 and @xmath66 belong to the same group and 0 if they belong to different groups or , in the notation of eq .  , @xmath92 thus we can write   in the form @xmath93 ( s_is_j+1 )        \\nonumber\\\\    & = & { 1\\over4 m } \\sum_{ij } \\bigl [ a_{ij } - p_{ij } \\bigr ] s_is_j,\\end{aligned}\\ ] ] where we have in the second line made use of eq .  .",
    "this result can conveniently be rewritten in matrix form as @xmath94 where @xmath95 is the real symmetric matrix having elements @xmath96 we call this matrix the modularity matrix and it plays a role in the maximization of the modularity equivalent to that played by the laplacian in standard spectral partitioning : equation   is the equivalent of eq .   for the cut size and matrix methods",
    "can thus be applied to the modularity that are the direct equivalents of those developed for spectral partitioning , as we now show .",
    "first , let us point out a few important properties of the modularity matrix .",
    "equations   and   together imply that all rows ( and columns ) of the modularity matrix sum to zero : @xmath97 this immediately implies that for any network the vector @xmath38 is an eigenvector of the modularity matrix with eigenvalue zero , just as is the case with the laplacian . unlike the laplacian however , the eigenvalues of the modularity matrix are not necessarily all of one sign and in practice the matrix usually has both positive and negative eigenvalues .",
    "this observation  and the eigenspectrum of the modularity matrix in general  are , as we will see , closely tied to the community structure of the network .    working from eq .",
    "we now proceed by direct analogy with section  [ specpart ] .",
    "we write @xmath10 as a linear combination of the normalized eigenvectors  @xmath98 of the modularity matrix , @xmath99 with @xmath100 .",
    "then @xmath101 where @xmath102 is the eigenvalue of @xmath95 corresponding to the eigenvector  @xmath98 .",
    "we now assume that the eigenvalues are labeled in _ decreasing _ order @xmath103 and the task of maximizing  @xmath62 is one of choosing the quantities  @xmath36 so as to place as much as possible of the weight in the sum   in the terms corresponding to the largest ( most positive ) eigenvalues .    as with ordinary spectral partitioning , this would be a simple task if our choice of @xmath10 were unconstrained ( apart from normalization ) : we would just choose @xmath10 proportional to the leading eigenvector @xmath104 of the modularity matrix .",
    "but the elements of @xmath10 are restricted to the values @xmath20 , which means that @xmath10 can not normally be chosen parallel to  @xmath104 .",
    "again as before , however , good approximate solutions can be obtained by choosing @xmath10 to be as close to parallel with @xmath104 as possible , which is achieved by setting @xmath105 this then is our first and simplest algorithm for community detection : we find the eigenvector corresponding to the most positive eigenvalue of the modularity matrix and divide the network into two groups according to the signs of the elements of this vector .    ) .",
    "the solid curve represents the division found by the modularity - based method of this section .",
    "and the squares and circles represent the actual division of the network observed when the dolphin community split into two as a result of the departure of a keystone individual .",
    "( the individual who departed is represented by the triangle . ) ]        in practice , this method works nicely , as discussed in  @xcite . making the choice   for our null model ,",
    "we have applied it to a variety of standard and less standard test networks and find that it does a good job of finding community divisions .",
    "figure  [ dolphins ] shows a representative example , an animal social network assembled and studied by lusseau  _ et  al .",
    "_  @xcite .",
    "the vertices in this network represent 62 bottlenose dolphins living in doubtful sound , new zealand , with social ties between dolphin pairs established by direct observation over a period of several years .",
    "this network is of particular interest because , during the course of the study , the dolphin group split into two smaller subgroups following the departure of a key member of the population .",
    "the subgroups are represented by the shapes of the vertices in the figure .",
    "the dotted line denotes the division of the network into two equal - sized groups found by the standard spectral partitioning method .",
    "while , as expected , this method does a creditable job of dividing the network into groups of these particular sizes , it is clear to the eye that this is not the natural community division of the network and neither does it correspond to the division observed in real life .",
    "the spectral partitioning method is hamstrung by the requirement that we specify the sizes of the two communities ; unless we know what they are in advance , blind application of the method will not usually find the `` right '' division of the network .",
    "the method based on the leading eigenvector of the modularity matrix , however , does much better .",
    "unconstrained by the need to find groups of any particular size , this method finds the division denoted by the solid line in the figure , which , as we see , corresponds quite closely to the split actually observed  all but three of the 62 dolphins are placed in the correct groups .",
    "the magnitudes of the elements of the eigenvector @xmath104 also contain useful information about the network , indicating , as discussed in  @xcite , the `` strength '' with which vertices belong to the communities in which they are placed . as an example of this phenomenon",
    "consider fig .",
    "[ books ] , which depicts the network of political books from ref .  @xcite .",
    "this network , compiled by v.  krebs ( unpublished ) , represents recent books on us politics , with edges connecting pairs of books that are frequently purchased by the same customers of the on - line bookseller amazon.com . applying our method",
    ", we find that the network divides as shown in the figure , with the colors of the vertices representing the values of the elements of the eigenvector .",
    "the two groups correspond closely to the apparent alignment of the books according to left - wing and right - wing points of view  @xcite , and are suggestively colored blue and red in the figure .",
    "the most blue and most red vertices are those that , by our calculation , belong most strongly to the two groups and are thus , perhaps , the `` most left - wing '' and `` most right - wing '' of the books under consideration",
    ". those familiar with current us politics will be unsurprised to learn that the most left - wing book in this sense was the polemical _ bushwacked _ by molly ivins and lou dubose .",
    "perhaps more surprising is the most right - wing book : _ a national party no more _ by zell miller .",
    "the algorithm described in the previous section has two obvious shortcomings .",
    "first , it divides networks into only two communities , while real - world networks can certainly have more than two .",
    "second , it makes use only of the leading eigenvector of the modularity matrix and ignores all the others , which throws away useful information contained in those other vectors .",
    "both of these shortcomings are remedied by the following generalization of the method .",
    "consider the division of a network into  @xmath1 non - overlapping communities , where @xmath1 may now be greater than  2 .",
    "following alpert and yao  @xcite and more recently white and smyth  @xcite , let us define an @xmath106 index matrix @xmath107 with one column for each community : @xmath108 .",
    "each column is an index vector now of @xmath109 elements ( rather than @xmath50 as previously ) , such that @xmath110 note that the columns of @xmath107 are mutually orthogonal , that the rows each sum to unity , and that the matrix satisfies the normalization condition @xmath111 .    observing that the @xmath112-symbol in eq .",
    "is now given by @xmath113 the modularity for this division of the network is @xmath114 where here and henceforth we suppress the leading multiplicative constant  @xmath73 from eq .  , which has no effect on the position of the maximum of the modularity .",
    "writing @xmath115 , where @xmath116 is the matrix of eigenvectors of  @xmath95 and @xmath117 is the diagonal matrix of eigenvalues @xmath118 , we then find that @xmath119 again we wish to maximize this modularity , but now we have no constraint on the number  @xmath1 of communities ; we can give  @xmath107 as many columns as we like in our effort to make  @xmath62 as large as possible .",
    "if the elements of the matrix @xmath107 were unconstrained apart from the basic conditions on the rows and columns mentioned above , a choice of @xmath1 communities would be equivalent to choosing @xmath120 independent , mutually orthogonal columns @xmath121 .",
    "( only @xmath120 of the columns are independent , the last being fixed by the condition that the rows of @xmath107 sum to unity . ) in this case our path would be clear : @xmath62  would be maximized by choosing the columns proportional to the leading eigenvectors of  @xmath95",
    ". however , only those eigenvectors corresponding to positive eigenvalues can give positive contributions to the modularity , so the optimal modularity would be achieved by choosing exactly as many independent columns of @xmath107 as there are positive eigenvalues , or equivalently by choosing the number of groups  @xmath1 to be 1 greater than the number of positive eigenvalues .",
    "unfortunately , our problem has the additional constraint that the index vectors  @xmath122 have only binary @xmath109 elements , which means it may not be possible to find as many index vectors making positive contributions to the modularity as the set of positive eigenvalues suggests .",
    "thus the number of positive eigenvalues , plus  1 , is an _ upper bound _ on the number of communities and again we see that there is an intimate connection between the properties of the modularity matrix and the community structure of the network it describes .      in section  [ singlevec ]",
    "we maximized the modularity approximately by focusing solely on the term in @xmath62 proportional to the largest eigenvalue of  @xmath95 .",
    "let us now make the more general ( and often better ) approximation of keeping the leading @xmath79 eigenvalues , where @xmath79 may be anywhere between 1 and  @xmath0 .",
    "some of the eigenvalues , however , may be negative , which will prove inconvenient . to get around this we rewrite eq .",
    "thus : @xmath123        \\nonumber\\\\    & = & n\\alpha + \\sum_{j=1}^n \\sum_{k=1}^c ( \\beta_j-\\alpha )        \\biggl [ \\sum_{i=1}^n u_{ij } s_{ik } \\biggr]^2 , \\label{alphaq}\\end{aligned}\\ ] ] where @xmath124 is a constant whose value we will choose shortly and we have made use of @xmath111 and the fact that @xmath125 is orthogonal .",
    "now , employing an argument similar to that used for ordinary spectral partitioning in  @xcite , let us define a set of vertex vectors  @xmath126 , @xmath127 , of dimension  @xmath79 , such that the @xmath66th component of the @xmath16th vector is @xmath128_j = \\sqrt{\\beta_j-\\alpha}\\,u_{ij}. \\label{defsri}\\ ] ] provided we choose @xmath129 , @xmath126  is guaranteed real for all  @xmath16 . then , dropping terms in   proportional to the smallest @xmath130 of the factors  @xmath131 , we have @xmath132 ^ 2 \\nonumber\\\\    & = & n\\alpha + \\sum_{k=1}^c \\sum_{j=1}^p        \\biggl",
    "[ \\sum_{i\\in g_k } \\bigl [ { \\mathbf}{r}_i \\bigr]_j \\biggr]^2 \\nonumber\\\\    & = & n\\alpha + \\sum_{k=1}^c | { \\mathbf}{r}_k |^2,\\qquad { } \\label{finalq}\\end{aligned}\\ ] ] where @xmath133 is the set of vertices comprising group  @xmath134 and the community vectors  @xmath135 , @xmath136 , are @xmath137    the community structure problem is now equivalent to choosing a division of the vertices into groups so as to maximize the magnitudes of the vectors  @xmath135 .",
    "this means we need to arrange that the individual vertex vectors  @xmath126 going into each group point in approximately the same direction .",
    "problems of this type are called vector partitioning problems .    the parameter  @xmath79 controls the balance between the complexity of the vector partitioning problem and the accuracy of the approximation we make by keeping only some of the eigenvalues",
    ". the calculations will be faster but less accurate for smaller  @xmath79 and slower but more accurate for larger .",
    "for the special case @xmath138 where we keep all of the eigenvalues , eq .",
    "is exact . in this case",
    ", we note that the vertex vectors have the property @xmath139 it s then simple to see that eq .",
    "is trivially equivalent to the fundamental definition   of the modularity , so in the @xmath138 case our mapping to a vector partitioning problem gives little insight into the modularity maximization problem .",
    "the real advantage of our approach comes when @xmath140 , where the method extracts precisely those factors that make the principal contributions to the modularity  i.e .",
    ",  those corresponding to the largest eigenvalues  discarding those that have relatively little effect . in practice ,",
    "as we have seen for the single - eigenvector algorithm , the main features of the community structure are often captured by just the first eigenvector or perhaps the first few , which allows us to reduce the complexity of our optimization problem immensely .",
    "the approach is similar in concept to the standard technique of principal components analysis ( pca ) used to reduce high - dimensional data sets to manageably small dimension by focusing on the eigendirections along which the variance about the mean is greatest and ignoring directions that contribute little . in fact , this similarity is more than skin - deep : the form of our modularity matrix is closely analogous to the covariance matrix whose eigenvectors are the basis for pca .",
    "the elements of the covariance matrix are correlation functions of the form @xmath141 , where @xmath142 and @xmath143 denote measured variables in the data set .",
    "thus the covariance is the difference between the actual value of the mean product @xmath144 of two variables and the value @xmath145 expected by chance for that product if the variables were uncorrelated .",
    "similarly , the elements @xmath146 of the modularity matrix are equal to the actual number of edges @xmath67 between a given pair of vertices minus the number @xmath147 expected by chance , expressed in a product form . in a sense , our spectral method for modularity optimization can be regarded as a `` principal components analysis for networks . ''",
    "this aspect of the method is clear , for instance , in the study of political books represented in fig .",
    "[ books ] : the leading eigenvector used to assign the colors to the vertices in the figure is playing a role equivalent to the eigendirections in pca , defining a `` direction of greatest variation '' in the structure of the network .",
    "the vertex vectors of eq .",
    "are similarly analogous to the low - dimensional projections used in pca . or  3 could be used to define graph layouts for visualizing networks in 2 or 3 dimensions .",
    "either the endpoints of the vectors could define vertex positions themselves or they could be used as starting positions for a spring embedding visualizer or other more conventional layout scheme . ]    returning to our algorithm , let us consider again the special case of the division of a network into just two communities .",
    "( multi - way division is considered in section  [ multiway ] . ) since @xmath38 is always an eigenvector of the modularity matrix and the eigenvectors are orthogonal , the elements of all other eigenvectors must sum to zero : @xmath148_i    = \\sqrt{n}\\,{\\mathbf}{u}_1^t{\\mathbf}{u}_j = 0.\\ ] ] but eq .",
    "then implies that @xmath149_j    = \\sqrt{\\beta_j-\\alpha } \\sum_{i=1}^n u_{ij } = \\sqrt{\\beta_j-\\alpha }    \\sum_{i=1}^n \\bigl [ { \\mathbf}{u}_j \\bigr]_i = 0,\\ ] ] and hence @xmath150 for any value of  @xmath79 .",
    "this in turn implies that the community vectors @xmath135 also sum to zero : @xmath151 and as a special case of this last result , any division of a network into two communities has community vectors @xmath152 and @xmath153 that are of equal magnitude and oppositely directed .",
    "furthermore , the maximum of the modularity , eq .  , is always achieved when each individual vertex vector  @xmath126 has a positive inner product with the community vector of the community to which the vertex belongs . to see this ,",
    "observe that removing a vertex  @xmath16 from a community  @xmath134 where @xmath154 produces a change in the corresponding term @xmath155 in eq .   of @xmath156 similarly adding vertex  @xmath16 to a community for which @xmath157 also increases  @xmath155 .",
    "hence , we can always increase the modularity by moving vertices until they are in groups such that @xmath157 .",
    "taken together , these results imply that possible candidates for the optimal division of a network into two groups are fully specified by just the _ direction _ of the single vector  @xmath152 .",
    "once we have this direction , we know that the vertices divide according to whether their projection along this direction is positive or negative . alternatively , we can consider the direction of @xmath152 to define a perpendicular plane through the origin in the @xmath79-dimensional vector space occupied by the vertex vectors  @xmath126 .",
    "the vertices then divide according to which side of this plane their vectors fall on . finding the maximum of the modularity is then a matter of choosing this bisecting plane to maximize the magnitude of  @xmath152 .     for a small network with @xmath158 .",
    "the dotted line represents one of the @xmath0 possible topologically distinct cut planes.,width=302 ]    in general , this still leaves us with a moderately difficult optimization problem : the number of bisecting planes that give distinct partitions of the vertex vectors is large and difficult to enumerate as the dimension  @xmath79 of the space becomes large . for the case @xmath158 , however , a relatively simple solution exists .",
    "consider fig .",
    "[ zachvecs ] , which shows a typical example of the vertex vectors .",
    "in this two - dimensional case , there are only @xmath0 topologically distinct choices of the bisecting plane ( actually just a line in this case , denoted by the dashed line in the figure ) , and furthermore the divisions of the vertices that these choices represent change by only a single vertex at a time as we rotate the plane about the origin .",
    "this makes it computationally simple to perform the rotation , keep track of the value of  @xmath152 , and so find the maximum of the modularity within this approximation . evaluating",
    "the magnitude of @xmath152 involves a constant number of operations each time we move the line , and hence the total work involved in finding the maximum is @xmath159 for all @xmath0 possible positions , which is the same as the @xmath159 operations needed to separate the vertices in the @xmath160 case .    for @xmath161",
    ", we do not know of an efficient method to enumerate exhaustively all topologically distinct bisecting planes in the vertex vector space , and hence we have to turn to approximate methods for solving the vector partitioning problem . a number of reasonable heuristics have been described in the past .",
    "we have found acceptable though not spectacular results , for instance , with the `` melo '' algorithm of  @xcite , which is essentially a greedy algorithm in which a grouping of vectors is built up by repeatedly adding to it the vector that makes the largest contribution to  @xmath62 .      before implementing any of these methods ,",
    "a crucial question we must answer is what value we should choose for the parameter  @xmath124 .",
    "by tuning this value we can improve the accuracy of our approximation to  @xmath62 as follows .    by dropping the @xmath130 most negative eigenvalues ,",
    "we are in effect making an approximation to the matrix  @xmath162 in which it takes not its full value @xmath163 , but an approximate value @xmath164 , where @xmath165 and @xmath166 are the matrices @xmath117 and @xmath167 with the last @xmath130 diagonal elements set to zero .",
    "we can quantify the error this introduces by calculating the sum of the squares of the elements of the difference between the two matrices , which is given by @xmath168 ^ 2             \\nonumber\\\\         & = & { \\mathrm{tr}}[({\\mathbf}{d}-\\alpha{\\mathbf}{i})-({\\mathbf}{d}'-\\alpha{\\mathbf}{i}')]^2          =   \\!\\!\\sum_{i = p+1}^n ( \\beta_i-\\alpha)^2,\\qquad{}\\end{aligned}\\ ] ] where in the second line we have made use of the fact that @xmath125 is orthogonal .    minimizing this error by setting the derivative @xmath169",
    ", we find @xmath170 in other words , the minimal mean square error introduced by our approximation is achieved by setting @xmath124 equal to the mean of the eigenvalues that have been dropped .",
    "the only exception is when @xmath138 , where the choice of @xmath124 makes no difference since no approximation is being made anyway . in our calculations we have used @xmath171 in this case , but any choice @xmath172 would work equally well .",
    "implementation of the methods described in section  [ specmod ] is straightforward .",
    "the leading - eigenvector method of section  [ singlevec ] requires us to find only the single eigenvector of the modularity matrix  @xmath95 corresponding to the most positive eigenvalue .",
    "this is most efficiently achieved by the direct multiplication or power method . starting with a trial vector",
    ", we repeatedly multiply by the modularity matrix and  unless we are unlucky enough to have chosen another eigenvector as our trial vector  the result will converge to the eigenvector of the matrix having the eigenvalue of largest magnitude . in some cases",
    "this eigenvalue will be the most positive one , in which case our calculation ends at this point .",
    "in other cases the eigenvalue of largest magnitude may be negative . if this happens then , denoting this eigenvalue by @xmath173 , we calculate the shifted matrix @xmath174 , which has eigenvalues @xmath175 ( necessarily all nonnegative ) and the same eigenvectors as the modularity matrix itself",
    ". then we repeat the power - method calculation for this new matrix and this time the eigenvalue of largest magnitude must be @xmath176 and the corresponding eigenvector is the one we are looking for .    for the method of section  [ multivec ] ,",
    "we require either all of the eigenvectors of the modularity matrix or a subset corresponding to the @xmath79 most positive eigenvalues .",
    "these are most conveniently calculated using the lanczos method or one of its variants  @xcite .",
    "the fundamental matrix operation at the heart of the lanczos method is again multiplication of the matrix  @xmath95 into a trial vector .",
    "efficient implementation of any of these methods thus rests upon our ability to rapidly multiply an arbitrary vector  @xmath177 by the modularity matrix .",
    "this presents a problem because the modularity matrix is dense , and hence it appears that matrix multiplications will demand @xmath178 time each , where @xmath0 is , as before , the number of vertices in the network ( which is also the size of the matrix ) . by contrast , the equivalent calculation in standard spectral partitioning is much faster because the laplacian matrix is sparse , having only @xmath179 nonzero elements , where @xmath2 is the number of edges in the network .    for the standard choice , eq .  , of null model",
    "used to define the modularity , however , it turns out that we can multiply by the modularity matrix just as fast as by the laplacian by making use of the special structure of the matrix . in vector notation",
    "the modularity matrix can in this case be written @xmath180 where @xmath5 is the adjacency matrix , eq .  , and @xmath181 is the @xmath0-element vector whose elements are the degrees  @xmath15 of the vertices .",
    "then @xmath182 since the adjacency matrix is sparse , having only @xmath183 elements , the first term can be evaluated in @xmath183 time , while the second requires us to evaluate the inner product @xmath184 only once and then multiply it into each element of @xmath181 in turn , both operations taking @xmath159 time . thus the entire matrix multiplication can be completed in @xmath185 time , just as with the normal laplacian matrix .",
    "if a shift of the eigenvalues is required to find the most positive one , as described above , then there is an additional term @xmath186 in the matrix , but this also can be multiplied into an arbitrary vector in @xmath159 time , so again the entire operation can be completed in @xmath185 time .",
    "typically @xmath159 matrix multiplications are required for either the power method or the lanczos method to converge to the required eigenvalues , and hence the calculation takes @xmath187 time overall . in the common case in which the network is sparse and @xmath188 , this simplifies to @xmath178 .",
    "while this is , essentially , the end of the calculation for the power method , the lanczos method unfortunately demands more effort to find the eigenvectors themselves . in fact , it takes @xmath189 time to find all eigenvectors of a matrix using the lanczos method , which is quite slow .",
    "there are on the other hand variants of the lanczos method ( as well as other methods entirely ) that can find just a few leading eigenvectors faster than this , which makes calculations that focus on a fixed small number of eigenvectors preferable to ones that use all eigenvectors . in our calculations we have primarily concentrated on algorithms that use only one or two eigenvectors , which typically run in time  @xmath178 on a sparse network .",
    "the methods for spectral optimization of the modularity described in section  [ specmod ] are only approximate .",
    "indeed , the problem of modularity optimization is formally equivalent to an instance of the np - hard max - cut problem , so it is almost certainly the case that no polynomial - time algorithm exists that will find the modularity optimum in all cases .",
    "given that the algorithms we have described run in polynomial time , it follows that they must fail to find the optimum in some cases , and hence that there is room for improvement of the results .    in standard graph partitioning applications",
    "it is common to use a spectral approach based on the graph laplacian as a first pass at the problem of dividing a network .",
    "the spectral method gives a broad picture of the general shape the division should take , but there is often room for improvement .",
    "typically another algorithm , such as the kernighan ",
    "lin algorithm  @xcite , which swaps vertex pairs between groups in an effort to reduce the cut size , is used to refine this first pass , and the resulting two - stage joint strategy gives considerably better results than either stage on its own .",
    "we have found that a similar joint strategy gives good results in the present case also : the divisions found with our spectral approach can be improved in small but significant ways by adding a refinement step akin to the kernighan  lin algorithm .",
    "as described in  @xcite , we take an initial division into two communities derived , for instance , from the leading - eigenvector method of section  [ singlevec ] and move single vertices between the communities so as to increase the value of the modularity as much as possible , with the constraint that each vertex can be moved only once . repeating the whole process iteratively",
    "until no further improvement is obtained , we find a final value of the modularity which can improve on that derived from the spectral method alone by tens of percent in some cases , and smaller but still significant amounts in other cases . although the absolute gains in modularity are not always large , we find that this refinement step is very much worth the effort it entails , raising the typical level of performance of our methods from the merely good to the excellent , when compared with other algorithms .",
    "specific examples are given in  @xcite .",
    "it is certainly possible that other refinement strategies might also give good results .",
    "for instance , the `` extremal optimization '' method explored by duch and arenas  @xcite for optimizing modularity could be employed as a refinement method by using the output of our spectral division as its starting point , rather than the random configuration used as a starting point by duch and arenas .",
    "so far we have discussed primarily methods for dividing networks into two communities .",
    "many of the networks we are concerned with , however , have more than two communities .",
    "how can we generalize our methods to this case ?",
    "the simplest approach is repeated division into two . that is , we use one of the methods described above to divide our network in two and then divide those parts in two again , and so forth .",
    "this approach was described briefly in ref .",
    "@xcite .",
    "it is important to appreciate that upon further subdividing a community within a network into two parts , the additional contribution  @xmath190 to the modularity made by this subdivision is not given correctly if we apply the algorithms of section  [ specmod ] to that community alone .",
    "that is , we can not simply write down the modularity matrix for the community in question considered as a separate graph in its own right and examine the leading eigenvector or eigenvectors . instead we proceed as follows .",
    "let us denote the set of vertices in the community to be divided by  @xmath191 and let @xmath192 be the number of vertices within this community .",
    "now let @xmath107 be an @xmath193 index matrix denoting the subdivision of the community into @xmath1 subcommunities such that @xmath194 then , following eq .",
    ", @xmath190  is the difference between the modularities of the network before and after subdivision of the community thus : @xmath195               s_{ik } s_{jk } \\nonumber\\\\           & = & { \\mathrm{tr}}({\\mathbf}{s}^t{\\mathbf}{b}^{(g)}{\\mathbf}{s } ) , \\label{deltaq}\\end{aligned}\\ ] ] where @xmath196 is an @xmath197 generalized modularity matrix with elements indexed by the vertex labels @xmath65 of the vertices within group  @xmath191 and having values @xmath198 with @xmath199 defined by eq .  .",
    "equation   has the same form as our previous expression , eq .",
    ", for the modularity of the full network , and , following the same argument as for eqs .   to  , we can then show that optimization of the additional modularity contribution from subdivision of a community can also be expressed as a vector partitioning problem , just as before .",
    "we can approximate this vector partitioning problem using only the leading eigenvector as in section  [ singlevec ] or using more than one vector as in section  [ multivec ] .",
    "the resulting divisions can also be optimized using a `` refinement '' stage as in section  [ refinement ] , to find the best possible modularity at each step .    using this method",
    "we can repeatedly subdivide communities to partition networks into smaller and smaller groups of vertices and in principle this process could continue until the network is reduced to @xmath0 communities containing only a single vertex each .",
    "normally , however , we stop before this point is reached because there is no point in subdividing a community any further if no subdivision exists that will increase the modularity of the network as a whole .",
    "the appropriate strategy is to calculate explicitly the modularity contribution @xmath190 at each step in the subdivision of a network , and to decline to subdivide any community for which the value of @xmath190 is not positive .",
    "communities with the property of having no subdivision that gives a positive contribution to the modularity of the network as a whole we call indivisible ; the strategy described here is equivalent to subdividing communities repeatedly until every remaining community is indivisible .    this strategy appears to work very well in practice .",
    "it is , however , not perfect ( a conclusion we could draw under any circumstances from the fact that it runs in polynomial time  see above ) . in particular , it is certain that repeated subdivision of a network into two parts will in some cases fail to find the optimal modularity configuration .",
    "consider , for example , the ( rather trivial ) network shown in fig .",
    "[ line8 ] , which consists of eight vertices connected together in a line . by exhaustive enumeration",
    "we can show that , among possible divisions of this network into only two parts , the division indicated in fig .  [ line8]a , right down the middle of the line , is the one that gives the highest modularity .",
    "the optimum modularity over divisions into any number of parts , however , is achieved for the three - way division shown in fig .",
    "[ line8]b .",
    "it is clear that if we first split the network as shown in fig .",
    "[ line8]a , no subsequent subdivision of the network can ever find the configuration of fig .",
    "[ line8]b , and hence our algorithm will fail in this case to find the global optimum . nonetheless , the algorithm does appear to find divisions that are close to optimal in most cases we have investigated .",
    "repeated subdivision is the approach we have taken to multi - community divisions in our own work , but it is not the only possible approach . in some respects a more satisfying approach would be to work directly from the expression   for the modularity of the complete network with a multi - community division .",
    "unfortunately , maximizing   requires us to perform a vector partitioning into more than two groups , a problem about whose solution rather little is known .",
    "some general observations are , however , worth making .",
    "first , we note that the community vectors  @xmath135 in the optimal solution of a vector partitioning problem always have directions more than @xmath200 apart .",
    "to demonstrate this , we note that the change in the contribution to eq .",
    "if we amalgamate two communities into one is @xmath201 which is positive if the directions of @xmath152 and @xmath153 are less than @xmath200 apart .",
    "thus we can always increase the modularity by amalgamating a pair of communities unless their vectors are more than @xmath200 apart .",
    "but the maximum number of directions more than @xmath200 apart that can exist in a @xmath79-dimensional space is @xmath202 , which means that @xmath202 is also the maximum number of communities we can find by optimizing a @xmath79-dimensional spectral approximation to the modularity .",
    "thus if we use only a single eigenvector we will find at most two groups ; if we use two we will find at most three groups , and so forth .",
    "so the choice of how many eigenvectors  @xmath79 to work with is determined to some extent by the network : if the overall optimum modularity is for a division into @xmath1 groups , we will certainly fail to find that optimum if we use less than @xmath120 eigenvectors .",
    "second , we note that while true multi - way vector partitioning may present problems , simple heuristics that group the vertex vectors together can still produce good results .",
    "for instance , white and smyth  @xcite have applied the standard technique of @xmath134-means clustering based on group centroids to a different but related optimization problem and have found good results .",
    "it is possible this approach would work for our problem also if applied to the centroids of the end - points of the vertex vectors .",
    "it is also possible that an intrinsically vector - based variant of @xmath134-means clustering could be created to tackle the vector partitioning problem directly , although we are not aware of such an algorithm in the current vector partitioning literature .",
    "it is clear from the developments of the previous sections that there is useful information about the structure of a network stored in the eigenvectors corresponding to the most positive eigenvalues of the modularity matrix .",
    "it is natural to ask whether there is also useful information in the eigenvectors corresponding to the negative eigenvalues and indeed it turns out that there is : the negative eigenvalues and their eigenvectors contain information about a nontrivial type of `` anti - community structure '' that is of substantial interest in some instances .",
    "consider again the case in which we divide our network into just two groups and look once more at eq .",
    ", which gives the modularity in this case .",
    "suppose now that instead of maximizing the terms involving the most positive eigenvalues , we maximize the terms involving the most negative ones . as we can easily see from the equation ,",
    "this is equivalent to _ minimizing _ rather than maximizing the modularity .",
    "what effect will this have on the divisions of the network that we find ?",
    "large negative values of the modularity correspond to divisions in which the number of edges within groups is _ smaller _ than expected on the basis of chance , and the number of edges between groups correspondingly bigger .",
    "figure  [ bipartex ] shows a sketch of a network having this property .",
    "such networks are said to be bipartite if there are no edges at all within groups , or approximately bipartite if there are a few within - group edges as in the figure .",
    "bipartite or approximately bipartite graphs have attracted some attention in the recent literature .",
    "for instance , kleinberg  @xcite has suggested that small bipartite subgraphs in the web graph may be a signature of so - called hub / authority structure within web communities , while holme  _ et  al . _",
    "@xcite and estrada and rodrguez - velzquez  @xcite have independently devised measures of bipartitivity and used them to analyze a variety of real - world networks .",
    "the arguments above suggest that we should be able to detect bipartite or approximately bipartite structure in networks by looking for divisions of the vertices that minimize modularity . in the simplest approximation",
    ", we can do this by focusing once more on just a single term in eq .",
    ", that corresponding to the most negative eigenvalue  @xmath173 , and maximizing the coefficient of this eigenvalue by choosing @xmath203 for vertices having a negative element in the corresponding eigenvector and @xmath204 for the others .",
    "in other words , we can achieve an approximation to the minimum modularity division of the network by dividing vertices according to the signs of the elements in the eigenvector  @xmath205 , and this division should correspond roughly to the most nearly bipartite division .",
    "we can also append a `` refinement '' step to the calculation , similar to that described in section  [ refinement ] , in which , starting from the division given by the eigenvector , we move single vertices between groups in an effort to minimize the modularity further .    as an example of this type of calculation ,",
    "consider fig .",
    "[ words ] , which shows a network representing juxtapositions of words in a corpus of english text , in this case the novel _ david copperfield _ by charles dickens . to construct this network ,",
    "we have taken the 60 most commonly occurring nouns in the novel and the 60 most commonly occurring adjectives .",
    "( the limit on the number of words is imposed solely to permit a clear visualization ; there is no reason in principle why the analysis could not be extended to a much larger network . )",
    "the vertices in the network represent words and an edge connects any two words that appear adjacent to one another at any point in the book .",
    "eight of the words never appear adjacent to any of the others and are excluded from the network , leaving a total of 112 vertices .",
    "typically adjectives occur next to nouns in english .",
    "it is possible for adjectives to occur next to other adjectives ( `` the big green bus '' ) or for nouns to occur next to other nouns ( `` the big tour bus '' ) , but these juxtapositions are less common .",
    "thus we would expect our network to be approximately bipartite in the sense described above : edges should run primarily between vertices representing different types of words , with fewer edges between vertices of the same type .",
    "one would be hard pressed to tell this from fig .",
    "[ words]a , however : the standard layout algorithm used to draw the network completely fails to reveal the structure present .",
    "figure  [ words]b shows what happens when we divide the vertices by minimizing the modularity using the method described above  a first division according to the elements of the eigenvector with the most negative eigenvalue , followed by a refinement stage to reduce the modularity still further .",
    "it is now clear that the network is in fact nearly bipartite , and the two groups found by the algorithm correspond closely to the known groups of adjectives and nouns , as indicated by the shapes of the vertices .",
    "83% of the words are classified correctly by this simple calculation .",
    "divisions with large negative modularity are  like those with large positive modularity  not limited to having only two groups . if we are interested purely in minimizing the modularity we can in principle use as many groups as we like to achieve that goal .",
    "a division with @xmath134 groups is called @xmath134-partite if edges run only between groups and approximately @xmath134-partite if there are a few within - group edges .",
    "one might imagine that one could find @xmath134-partite structure in a network just by looking for divisions that minimize the number of within - group edges , but brief reflection persuades us that the optimum solution to this search problem is always to put each vertex in a group on its own , which automatically means that all edges lie between groups and none within groups . as with the ordinary community structure problem , the way to avoid this trivial solution is to concentrate not on the total number of edges within groups but on the difference between this number and the expected number of such edges .",
    "thus , once again , we are led naturally to the consideration of modularity as a measure of the best way to divide a network .    one way to minimize modularity over divisions into an arbitrary number of groups",
    "is to proceed by analogy with our earlier calculations of community structure and repeatedly divide the network in two using the single - eigenvector method above . just as before , eq .",
    "gives the additional change @xmath190 in the modularity upon subdivision of a group in a network , and the division process ends when the algorithm fails to find any subdivision with @xmath206 .",
    "alternatively , one can derive the analog of eq .   and thereby map the minimization of the modularity onto a vector partitioning problem .",
    "the appropriate definition of the vertex vectors turns out to be @xmath128_j = \\sqrt{\\alpha-\\beta_{n+1-j}}\\,u_{i , n+1-j } , \\label{defsri2}\\ ] ] where @xmath124 is a constant chosen sufficiently large as to make @xmath207 for all terms in the sum that we keep .",
    "then the modularity is given by @xmath208 with the community vectors  @xmath135 defined according to eq .  .",
    "one of the striking properties of the laplacian matrix is that , as described in section  [ specpart ] , it arises repeatedly in various different areas of graph theory .",
    "it is natural to ask whether the modularity matrix also crops up in other areas . in this section",
    "we describe briefly two other situations in which the modularity matrix appears , although neither has been viewed in terms of this matrix in the past , as far as we are aware .      for our first example , suppose we have a quantity  @xmath209 defined on the vertices  @xmath127 of a network , such as degrees of vertices , ages of people in a social network , numbers of hits on web pages , and so forth . and let @xmath177 be the @xmath0-component vector whose elements are the  @xmath209 .",
    "then consider the quantity @xmath210 where here we will take the same definition   for our null model that we have been using throughout .",
    "observing that @xmath211 , we can rewrite  @xmath212 as @xmath213 x_ix_j        \\nonumber\\\\    & = & { \\sum_{ij } a_{ij } x_ix_j\\over\\sum_{ij } a_{ij } }        - \\biggl [ { \\sum_{ij } a_{ij } x_i\\over\\sum_{ij } a_{ij } } \\biggr]^2.\\end{aligned}\\ ] ] note that the ratios appearing in the second line are simply averages over all edges in the network , and hence @xmath212 has the form @xmath214 of a correlation function measuring the correlation of the values @xmath209 over all pairs of vertices joined by an edge in the network",
    ".    correlation functions of exactly this type have been considered previously as measures of so - called `` assortative mixing , '' the tendency for adjacent vertices in networks to have similar properties  @xcite .",
    "for example , if the quantity @xmath209 is just the degree @xmath15 of a vertex , then @xmath212  is the covariance of the degrees of adjacent vertices , which takes positive values if vertices tend to have similar degrees to their neighbors , high - degree vertices linking to other high - degree vertices and low to low , and negative values if high - degree links to low .",
    "equation   is not just a curiosity , but provides some insight concerning assortativity .",
    "if we expand @xmath177 in terms of the eigenvectors  @xmath98 of the modularity matrix , as we did for the modularity itself in eq .  , we get @xmath215 where @xmath102 is again the @xmath16th largest eigenvalue of  @xmath95 and @xmath216 . thus @xmath212 will have a large positive value if @xmath177 has a large component in the direction of one or more of the most positive eigenvectors of the modularity matrix , and similarly for large negative values .",
    "now we recall that the leading eigenvectors of the modularity matrix also define the communities in the network and we see that there is a close relation between assortativity and community structure : networks will be assortative according to some property @xmath142 if the values of that property divide along the same lines as the communities in the network .",
    "thus , for instance , a network will be assortative by degree if the degrees of the vertices are partitioned such that the high - degree vertices fall in one community and the low - degree vertices in another .",
    "this lends additional force to the discussion given in the introduction , where we mentioned that different communities in networks are often found to have different average properties such as degree .",
    "in fact , as we now see , this is probably the case for any property that displays significant assortative mixing , which includes an enormous variety of quantities measured in networks of all types .",
    "thus , it is not merely an observation that different communities have different average properties  it is an expected behavior in a network that has both community structure and assortativity .      for our second example of other uses of the modularity matrix",
    ", we consider centrality measures , one of the abiding interests of the network analysis community for many decades . in section  [ singlevec ]",
    "we argued that the magnitudes of the elements of the leading eigenvector of the modularity matrix give a measure of the `` strength '' with which vertices belong to their assigned communities .",
    "thus these magnitudes define a kind of centrality index that quantifies how central vertices are in communities .",
    "focusing on just a single eigenvector of the modularity matrix , however , is limiting .",
    "as we have seen , all the eigenvectors contain useful information about community structure .",
    "it is useful to ask what the appropriate measure is of strength of community membership when the information in all eigenvectors is taken into account .",
    "given eq .",
    ", the obvious candidate seems to be the projection of the vertex vector  @xmath126 onto the community vector  @xmath135 of the community to which vertex  @xmath16 belongs .",
    "unfortunately , this projection depends on the arbitrary parameter  @xmath124 , which we introduced in eq .   to get around problems caused by the negative eigenvalues of the modularity matrix",
    "this in turn threatens to introduce arbitrariness into our centrality measure , which we would prefer to avoid .",
    "so for the purposes of defining a centrality index we propose a slightly different formulation of the modularity , which is less appropriate for the optimization calculations that are the main topic of this paper , but more satisfactory for present purposes , as we will see .",
    "suppose that there are @xmath79 positive eigenvalues of the modularity matrix and @xmath217 negative ones .",
    "we define two new sets of vertex vectors @xmath218 and @xmath219 , of dimension @xmath79 and @xmath217 , thus : @xmath220_j & = & \\sqrt{\\beta_j}\\,u_{ij},\\\\ \\bigl [ { \\mathbf}{y}_i \\bigr]_j & = & \\sqrt{-\\beta_{n+1-j}}\\,u_{i , n+1-j}.\\end{aligned}\\ ] ] ( note that @xmath221 since there is always at least one eigenvalue with value zero . ) in terms of these vectors the modularity , eq .  ,",
    "can be written as @xmath222 ^ 2 \\nonumber\\\\    & & { } - \\sum_{k=1}^c \\sum_{j=1}^q        \\biggl [ \\sum_{i=1}^n \\sqrt{-\\beta_{n+1-j}}\\,u_{i , n+1-j }        s_{ik } \\biggr]^2 \\nonumber\\\\    & = & \\sum_{k=1}^c \\sum_{j=1}^p        \\biggl [ \\sum_{i\\in g_k } \\bigl [ { \\mathbf}{x}_i \\bigr]_j \\biggr]^2        - \\sum_{k=1}^c \\sum_{j=1}^q        \\biggl",
    "[ \\sum_{i\\in g_k } \\bigl [ { \\mathbf}{y}_i \\bigr]_j \\biggr]^2        \\nonumber\\\\    & = & \\sum_{k=1}^c | { \\mathbf}{x}_k |^2 - \\sum_{k=1}^c | { \\mathbf}{y}_k |^2 , \\label{qxy}\\end{aligned}\\ ] ] where @xmath133 is once again the set of vertices in community  @xmath134 and the community vectors @xmath223 and @xmath224 are defined by @xmath225 this reformulation avoids the use of the arbitrary constant  @xmath124 , thereby making the vertex vectors dependent only on the network structure and not on the way in which we choose to represent it .",
    "equation   separates out the positive and negative contributions to the modularity , the positive contributions coming from vertices that have large corresponding elements in the eigenvectors with positive eigenvalues , and conversely for the negative contributions .",
    "the two contributions correspond respectively to the traditional community structure of sections  [ modsec ] and  [ specmod ] , and to the bipartite or @xmath134-partite structure discussed in section  [ negative ] .",
    "it is important to notice that while obviously the overall modularity can only be either positive or negative , it is entirely possible for individual vertices to simultaneously make both large positive and large negative contributions to that modularity . upon reflection , this is clearly reasonable : there is no reason why a single vertex can not have more connections than expected within its own community _ and _ more connections than expected to other communities . in a sense , eq .",
    "may be a more fundamental representation of the modularity than eq .   because it makes this separation transparent , even if it is in practice less suitable as a basis for modularity optimization .",
    "we can now define precisely the quantity that plays the role previously played by the elements of the leading eigenvector in the single - eigenvector approximation : it is the projection of @xmath226 onto the relevant community vector  @xmath223 , as we can see by writing the magnitude @xmath227 in eq .   as @xmath228 where @xmath229 is the unit vector in the direction of  @xmath223 .",
    "thus each vertex vector makes a contribution to @xmath227 equal to its projection onto  @xmath223 . in the approximation where we ignore all but the leading eigenvector",
    ", this projection reduces to the ( magnitude of ) the appropriate element of that eigenvector , as in section  [ singlevec ] .",
    "the projection specifies how central vertex  @xmath16 is in its own community in the traditional sense of having many connections within that community .",
    "if this quantity is large then we will lose a large positive contribution to the modularity if we move the vertex to another community , which is to say that the vertex is a strong member of its current community .",
    "but there is also a second measure for each vertex , the projection of @xmath230 onto  @xmath224 .",
    "this projection corresponds to a more unusual sort of centrality which is high if vertex  @xmath16 has many connections to others _",
    "outside _ its community .",
    "this `` outsider '' centrality measure could also be useful in certain circumstances to identify individuals with strong external connections .",
    "these two projections , however , do not take precisely the form that we expect of a centrality measure because they are functions not only of the vertex itself ( via  @xmath226 or  @xmath230 ) but also of the community in which it is placed ( via  @xmath223 or  @xmath224 ) . instead , therefore , let us consider the projection in the form @xmath231 , where @xmath232 is the angle between @xmath226 and @xmath223 .",
    "the two parts of this expression are both of interest .",
    "the first , the magnitude  @xmath233 , measures how large a positive contribution vertex  @xmath16 can _ potentially _ make to the modularity .",
    "the vertex only actually makes a contribution this large if the vertex vector is aligned with the community vector , i.e. ,  if the vertex is , in a sense , `` in the middle '' of the community to which it belongs .",
    "even a vertex for which @xmath233 is large may in practice make a small positive contribution to the modularity if @xmath226 is almost perpendicular to  @xmath223 , i.e. ,  if the vertex is `` on the edge '' of the community .",
    "the second part of the projection , the @xmath234 , is a measure precisely of the vertex s position in the middle or on the edge of its community . in the parlance of social network analysis ,",
    "the vertex is either in the core of its community ( @xmath234 near  1 ) or in the periphery ( @xmath234 nearer  0 ) .",
    "the cosine is a property both of the vertex and of the community .",
    "let us focus here on the vector magnitudes and define two centrality measures for vertices in a network equal to the magnitudes of the vertex vectors @xmath226 and  @xmath230 .",
    "( if we prefer , we could use  @xmath235 instead , which is slightly easier to calculate .",
    "if , as is sometimes the case with centrality measures , we only care about relative rankings of vertices , then the two are equivalent . )",
    "these centralities are now properties of the vertices alone and are independent of the way the network is divided into communities .",
    "we notice , however , that @xmath233 and @xmath236 are not independent since @xmath237 almost all networks considered in the literature are simple graphs , meaning , among other things , that they have no self - edges ( edges that connect vertices to themselves ) and hence @xmath238 for all  @xmath16 .",
    "if the expected number of self - edges @xmath239 is also zero ( as seems sensible ) , then @xmath240 and we have @xmath241 for all  @xmath16 .",
    "thus there is actually only one centrality for simple graphs , not two .",
    "in fact , the choice   for @xmath64 that we and other authors have mostly used does allow self - edges ( and is in this sense slightly unrealistic ",
    "see  @xcite ) , but @xmath242 is typically small for most vertices if @xmath2 is large ( and indeed vanishes as @xmath243 if degrees are bounded ) , and hence it is still true to a good approximation that @xmath244 and there is only one centrality .",
    "in other words , we come to the nontrivial conclusion that the vertices with the greatest capacity for making positive contributions to the modularity also have the greatest capacity for making negative contributions .",
    "the fundamental meaning of this centrality measure is thus that there are certain vertices that , as a consequence of their situation within the network , have the power to make substantial contributions , either positive or negative , to the overall modularity of the network .",
    "for this reason , we call this centrality measure community centrality .",
    "we define it to be equal to the vector magnitude  @xmath233 .",
    "an alternative way to view the community centrality is to consider how a vertex  @xmath16 is situated among the other vertices in its immediate vicinity ",
    "its neighborhood in the network .",
    "if we were to artificially construct a community from the vertices of this neighborhood , then that community would presumably have a community vector  @xmath223 with direction close to  @xmath226 , and hence the magnitude @xmath233 would be a good measure of the actual strength with which vertex  @xmath16 belongs the community . thus vertices with high community centrality are ones that play a central role in their local neighborhood , regardless of where the official community boundaries may lie .",
    "conversely , even when considered as the `` center of its world '' in this way , vertex  @xmath16 can never play a central role in its neighborhood in this sense if @xmath233 is small .    as an example , consider fig .",
    "[ collabs ] , which shows results for community centrality for a network of coauthorships between scientists , scientists in this case who are themselves publishing on the topic of networks .",
    "the network is similar to the one presented in ref .",
    "@xcite but is based on more recent data , including publications up until early 2006 .",
    "the network has a total of 1589 scientists in it , from a broad variety of fields , but only the 379 falling in the largest connected component are shown in the figure .",
    "the diameters of the vertices in the figure are proportional to their community centrality ( actually to  @xmath235see above ) , and the ten vertices having the highest centralities are highlighted .",
    "a couple of remarks are worth making about the results . without naming specific names , we observe that all of the highlighted authors are group leaders or senior researchers of groups working in this area .",
    "thus community centrality appears to live up to its name in this admittedly anecdotal example : it highlights those vertices that are central in their local communities .",
    "second , while the centrality is correlated with degree ( @xmath245see the inset figure ) , the two are not perfectly correlated and in particular some vertices have quite high centrality while having relatively low degree .",
    "this emphasizes the point that high centrality is an indicator of individuals who have more connections _ than expected _ within their neighborhood ( and hence potentially make a large contribution to the modularity ) , rather than simply having a lot of connections .",
    "in this paper , we have studied the problem of detecting community structure in networks .",
    "there is already a substantial body of theory supporting the view that community structure can be accurately quantified using the benefit function known as modularity and hence that communities can be detected by searching possible divisions of a network for ones that possess high modularity .",
    "here we have demonstrated that the modularity can be succinctly expressed in terms of the eigenvalues and eigenvectors of a matrix we call the modularity matrix , which is a characteristic property of the network and is itself independent of any division of the network into communities . using this expression",
    "we have derived a series of further results including several new and competitive algorithms for identifying communities , a method for detecting bipartite or @xmath134-partite structure in networks , and a new community centrality measure that identifies vertices that play a central role in the communities to which they belong .",
    "we have demonstrated a variety of applications of our methods to real - world networks representing social , technological , and information networks .",
    "these , however , are intended only as illustrations of the potential of these methods .",
    "we hope that readers will feel encouraged to apply these or similar methods to other networks of scientific interest and we look forward to seeing the results .",
    "the author thanks luis amaral , alex arenas , roger guimer , edward ionides , and david lusseau for useful and enjoyable conversations , and valdis krebs and david lusseau for providing network and other data used in the examples .",
    "this work was funded in part by the national science foundation under grant number dms0405348 and by the james s. mcdonnell foundation .",
    "g.  p. garnett , j.  p. hughes , r.  m. anderson , b.  p. stoner , s.  o. aral , w.  l. whittington , h.  h. handsfield , and k.  k. holmes , sexual mixing patterns of patients attending sexually transmitted diseases clinics .",
    "_ sexually transmitted diseases _ * 23 * , 248257 ( 1996 ) .",
    "s.  o. aral , j.  p. hughes , b.  stoner , w.  whittington , h.  h. handsfield , r.  m. anderson , and k.  k. holmes , sexual mixing patterns in the spread of gonococcal and chlamydial infections . _ american journal of public health _ * 89 * , 825833 ( 1999 ) .                          a.  capocci , v.  d.  p. servedio , g.  caldarelli , and f.  colaiori , detecting communities in large networks . in s.  leonardi ( ed . ) , _ proceedings of the 3rd workshop on algorithms and models for the web graph _ , number 3243 in lecture notes in computer science , springer , berlin ( 2004 ) .          h.  zhou and r.  lipowsky , network brownian motion : a new method to measure vertex - vertex proximity and to identify communities and subcommunities . in _",
    "lecture notes in computer science _ , volume 3038 , pp . 10621069 , springer , new york ( 2004 ) .",
    "p.  pons and m.  latapy , computing communities in large networks using random walks . in _ proceedings of the 20th international symposium on computer and information sciences",
    "_ , volume 3733 of _ lecture notes in computer science _ , pp . 284293 , springer , new york ( 2005 ) .",
    "o.  goldschmidt and d.  s. hochbaum , polynomial algorithm for the @xmath134-cut problem . in _ proceedings of the 29th annual ieee symposium on the foundations of computer science _ , pp .",
    "444451 , institute of electrical and electronics engineers , new york ( 1988 ) .",
    "m.  bern , d.  eppstein , and j.  gilbert , provably good mesh generation . in _ proceedings of the 31st annual ieee symposium on the foundations of computer science _ , pp .",
    "231241 , institute of electrical and electronics engineers , new york ( 1990 ) .",
    "wei and c .- k .",
    "cheng , toward efficient hierarchical designs by ratio cut partitioning . in _ proceedings of the ieee international conference on computer aided design _ , pp .",
    "298301 , institute of electrical and electronics engineers , new york ( 1989 ) .",
    "p.  k. chan , m.  d.  f. schlag , and j.  y. zien , spectral @xmath134-way ratio - cut partitioning and clustering .",
    "in _ proceedings of the 30th international conference on design automation _ , pp . 749754 , association of computing machinery , new york ( 1993 ) .",
    "s.  white and p.  smyth , a spectral clustering approach to finding communities in graphs . in h.  kargupta , j.  srivastava , c.  kamath , and a.  goodman ( eds . ) , _ proceedings of the 5th siam international conference on data mining _ , society for industrial and applied mathematics , philadelphia ( 2005 ) .",
    "t.  uczak , sparse random graphs with a given degree sequence . in a.",
    "m. frieze and t.  uczak ( eds . ) , _ proceedings of the symposium on random graphs , pozna 1989 _ , pp .",
    "165182 , john wiley , new york ( 1992 ) .",
    "d.  lusseau , k.  schneider , o.  j. boisseau , p.  haase , e.  slooten , and s.  m. dawson , the bottlenose dolphin community of doubtful sound features a large proportion of long - lasting associations .",
    "can geographic isolation explain this unique trait ?",
    "_ behavioral ecology and sociobiology _ * 54 * , 396405 ( 2003 ) .    c.  j. alpert and s .- z .",
    "yao , spectral partitioning : the more eigenvectors , the better . in b.",
    "t. preas , p.  g. karger , b.  s. nobandegani , and m.  pedram ( eds . ) , _ proceedings of the 32nd international conference on design automation _ , pp .",
    "195200 , association of computing machinery , new york , ny ( 1995 ) ."
  ],
  "abstract_text": [
    "<S> we consider the problem of detecting communities or modules in networks , groups of vertices with a higher - than - average density of edges connecting them . </S>",
    "<S> previous work indicates that a robust approach to this problem is the maximization of the benefit function known as `` modularity '' over possible divisions of a network . </S>",
    "<S> here we show that this maximization process can be written in terms of the eigenspectrum of a matrix we call the modularity matrix , which plays a role in community detection similar to that played by the graph laplacian in graph partitioning calculations . </S>",
    "<S> this result leads us to a number of possible algorithms for detecting community structure , as well as several other results , including a spectral measure of bipartite structure in networks and a new centrality measure that identifies those vertices that occupy central positions within the communities to which they belong . </S>",
    "<S> the algorithms and measures proposed are illustrated with applications to a variety of real - world complex networks . </S>"
  ]
}
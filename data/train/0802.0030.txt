{
  "article_text": [
    "network coding  @xcite generalizes routing by allowing intermediate nodes to perform coding operations which combine received data packets .",
    "one of the most celebrated benefits of this approach is increased throughput in multicast scenarios .",
    "this stimulated much of the early research in the area .",
    "one fundamental problem in network coding is to understand the capacity region and the classes of codes that achieve capacity . in the single session multicast scenario ,",
    "the problem is well understood .",
    "in particular , the capacity region is characterized by max - flow / min - cut bounds and linear network codes are sufficient to achieve maximal throughput @xcite .",
    "network coding not only yields a throughput advantage over routing , its capacity can be easily determined , and easily achieved .",
    "this is in stark contrast to routing , where computation of the capacity region and of optimal routes is fundamentally difficult .",
    "significant practical and theoretical complications arise in more general multicast scenarios , involving more than one session .",
    "an expression for the capacity region is known  @xcite , however it is given by the intersection of a set of hyperplanes ( specified by the network topology and connection requirement ) and the set of entropy functions @xmath0 .",
    "unfortunately , this capacity region , or even the inner and outer bounds  @xcite can not be computed in practice , due to the lack of an explicit characterization of the set of entropy functions for more than three random variables .",
    "this difficulty is not simply a consequence of the particular formulation of the capacity region given in  @xcite .",
    "it was recently shown that the problem of determining the capacity region for the multi - source problem is in fact entirely equivalent to the determination of @xmath1 , the set of almost entropic functions @xcite .",
    "furthermore , the non - polyhedral nature of @xmath1 , revealed in  @xcite implies a non - polyhedral capacity region ( in contrast to the max - flow result for single sources ) . to make things even worse , it is also known that linear network codes are not sufficient for the multi - source problem  @xcite .    in this paper , we show that non - polyhedral capacity regions can occur even in _ single source _ scenarios .",
    "we demonstrate this phenomenon for single source networks with hierarchical sink constraints , and for single source networks with security constraints .",
    "our approach is in the spirit of our recent work @xcite , which revealed a deep duality between network codes and entropy functions .",
    "direct consequences are non - polyhedral capacity regions , the insufficiency of linear network codes and the importance of non - shannon information inequalities .",
    "section [ sec : background ] provides the basic setup for secure network codes , and formally defines achievability and admissibility for networks with wiretapping adversaries .",
    "section [ sec : incr - mult ] focuses on the single source incremental multicast scenario , in which the sinks have hierarchical requirements .",
    "given a function @xmath2 , we construct an incremental multicast network that is solvable if and only if @xmath2 is entropic . in section [ sec : secure - multicast ] we construct a special single source secure multicast problem which is equivalent to an insecure multi - source multicast problem . invoking the duality results from  @xcite",
    "these constructions relate the solvability of both single - source incremental multicast and single source secure multicast , to multi - source multicast problems .",
    "the network topology will be modeled by a directed acyclic graph @xmath3 .",
    "vertices @xmath4 correspond to communication nodes and directed edges @xmath5 are error - free point - to - point communication links .",
    "the _ connection requirement _",
    "@xmath6 is specified by three components .",
    "the set @xmath7 indexes the independent multicast sessions , each of which is a collection of packets to be multicast to a prescribed set of destinations .",
    "the session - source location mapping @xmath8 specifies the originating node @xmath9 for session @xmath10 .",
    "the receiver - location mapping @xmath11 indicates the set of nodes @xmath12 which require the data of session @xmath10 .",
    "a _ network code _ is identified by a set of discrete random variables @xmath13 , defined on finite sample spaces , where for concise notation , set - valued subscripts denote a set of objects indexed by the set , e.g. @xmath14 .",
    "the source random variables @xmath15 are mutually independent and are uniformly distributed on sample spaces whose size will be denoted @xmath16 . the variables @xmath17 are the messages transmitted over link @xmath18 .    since the network is acyclic ,",
    "variables in @xmath19 and @xmath20 can be ancestrally ordered according to the network topology .",
    "causal coding requires that edge messages are conditionally independent of their non - incident ancestral messages given their incident source and message variables .",
    "a network code is _ probabilistic _ if there exists an outgoing link message which is not a function of the incoming source and link messages .",
    "otherwise , it is _",
    "deterministic_.    probabilistic network codes can be implemented via using independent random variables @xmath21 ( internal randomness ) at each node @xmath4 such that all outgoing messages from a node are deterministic functions of incoming sources and link messages and the independent randomness generated at the node .",
    "it is easy to prove that all probabilistic network codes can be implemented in this way .",
    "accordingly , we shall specify a probabilistic network code by the set @xmath22 .",
    "[ lemm : probcodeproperty ] given random variables @xmath23 and @xmath24 , if @xmath24 is independent of @xmath25 and @xmath26 , and @xmath26 is a function of @xmath25 and @xmath24 , then @xmath26 is a function of @xmath25 alone    the implication of the lemma is as follows . at the sinks ( or any intermediate node ) of the network ,",
    "if reconstruction of the source messages is possible , then it can also be achieved in the absence of `` internal randomness '' .",
    "in fact , in the absence of security constraints , it is known that deterministic network codes are sufficient @xcite .",
    "this is not always the case for the wiretapping scenarios considered in section [ sec : secure - multicast ] .",
    "in addition to legitimate sinks , there are @xmath27 adversaries , which can eavesdrop any message transmitted along a given collection of links .",
    "each adversary attempts to reconstruct a particular set of source messages , according to a wiretapping pattern .",
    "the _ wiretapping pattern _ is specified by a collection of tuples @xmath28 for @xmath29 such that @xmath30 is the subset of sources to be reconstructed by adversary @xmath31 , which observes only the links in @xmath32 .    for a given network code designed with respect to a connection requirement @xmath33 ,",
    "define @xmath34 as the error probability that at least one receiver fails to correctly reconstruct one or more of its requested source messages .",
    "zero - error network code _ is one for which @xmath35 , and hence the source messages @xmath36 can be perfectly reconstructed at desired sinks .",
    "the goal of secure communications is to transmit information such that any eavesdropper listening to the traffic on all the links in @xmath32 remains `` ignorant '' of the data transmitted by the sources in @xmath37 .",
    "perfectly secure _ network code is one for which the information leakage @xmath38 for all @xmath29 .",
    "[ df : admissible ] given a network @xmath39 and a connection requirement @xmath40 , a rate - capacity tuple @xmath41 is _ admissible _ if there exists a _",
    "perfectly secure _ , _ zero - error _ network code @xmath42 , such that @xmath43 where @xmath44 is the message symbol transmitted along link @xmath18 and @xmath45 is the input symbol generated at source @xmath10 .",
    "the preceding definitions consider zero - error network codes and perfect security . relaxing these requirements",
    "prompts the following definition .",
    "[ df : achievable ] a rate - capacity tuple @xmath46 is _ achievable _ if there exists a sequence of network codes @xmath47 and normalizing constants @xmath48 such that @xmath49    in the absence of any security constraints , @xmath50 , these definitions reduce to the usual ones and the multi - source , multi - sink capacity region is given by  @xcite .",
    "bounds for the multi - source multi - sink scenario with wiretappers were given in @xcite .",
    "in this section , we study a the special case of _ incremental multicast _ , meaning that the session indexes are totally ordered such that a receiver requesting a particular session also requests all sessions with lower index .",
    "we consider the simplest incremental multicast scenario , with only two source messages and no secrecy constraints ( permitting deterministic codes ) .",
    "we will show that determining the capacity region , even in such a simple scenario , can be no simpler than solving the general multicast problem .",
    "our approach is inspired by @xcite .",
    "let @xmath51\\subset{{\\mathbb{r}}}^{2^n}$ ] with coordinates indexed by proper subsets of a ground set @xmath52 with @xmath53 elements .",
    "points @xmath54 $ ] can be regarded as functions , @xmath55 with @xmath56 .",
    "given such an @xmath54 $ ] we will construct a special network @xmath57 , an incremental connection requirement @xmath58 and a rate - capacity tuple @xmath59 that is admissible if and only if @xmath60 is entropic .",
    "the network topology , connection requirement and link capacities are defined in figure [ fig : thenetwork ] , which for convenience , is divided into several subnetworks .",
    "the single source node is an open circle , labelled with the two available sessions ( this node is repeated for convenience in figures  [ fig : part1 ] , [ fig : lowerbd ] and  [ fig : butterfly ] ) .",
    "the destinations are double circles , labelled with their requirements .",
    "intermediate nodes are solid circles .",
    "the source and sink labels define the mappings @xmath61 and @xmath62 . each capacitated edge is labeled with a pair of symbols denoting the edge capacity , and the edge message ( and corresponding random variable ) .",
    "unlabelled edges are assumed to be uncapacitated , or to have a finite but sufficiently large capacity to losslessly forward all received messages .",
    "the first part of the network , shown in figure [ fig : part1 ] , contains the source where there are two independent sessions ( i.e. , two messages @xmath63 and @xmath64 ) available .",
    "the desired source rates associated with @xmath63 and @xmath64 are respectively @xmath65 and @xmath66 .",
    "there are @xmath67 specific edge messages that are of particular interest . rather than naming all edge variables @xmath68 , we label these @xmath67 particular edge variables @xmath69 and @xmath70 for @xmath71 .",
    "remaining edge variables will be labelled with generic symbols @xmath72 indexed by an integer @xmath73 .    in figure",
    "[ fig : part1 ] , the source node generates from @xmath63 and @xmath64 respectively the sets of network coded messages @xmath74 and @xmath75 which are duplicated as required and forwarded to the rest of the network .",
    "the remainder of the network is divided into subnetworks of two types , shown in figures [ fig : lowerbd ] and [ fig : butterfly ] .    with reference to figure [ fig : lowerbd ] , there are @xmath76 type 1 subnetworks , one for each nonempty @xmath77 .",
    "these subnetworks introduce an edge of capacity @xmath78 between the source and a sink requiring @xmath64 .",
    "there is an intermediate node which has another @xmath79 incident edges ( from figure [ fig : part1 ] ) , carrying @xmath80 .",
    "the intermediate node then has an edge of capacity @xmath81 to the sink .",
    "figure [ fig : butterfly ] shows the structure of type 2 subnetworks , which are indexed by @xmath82 and an element @xmath83 .",
    "each type 2 subnetwork connects the source to the upper receiver .",
    "in addition , there are other incident edges carrying @xmath84 and @xmath85 . for notational simplicity ,",
    "we have written @xmath86 .",
    "so far , we have described a network @xmath57 , a connection requirement @xmath58 and have assigned rates to sources and capacities to links .",
    "clearly @xmath58 depends only on @xmath53 , and not in any other way on @xmath60 .",
    "similarly , the topology of the network @xmath57 depends only on @xmath53 .",
    "the choice of @xmath60 affects only the source rates and edge capacities , which are collected into the rate - capacity tuple @xmath59 .",
    "also , we can assume without loss of generality that @xmath59 is a linear function of @xmath60 .",
    "a function @xmath87 $ ] is called _ entropic _ if there exists discrete random variables @xmath88 such that the entropy of @xmath89 is equal to @xmath81 for all @xmath90 .",
    "furthermore , @xmath60 is called _ quasi - uniform _ if any subset of the variables are uniform over their support .",
    "[ thm : direct ] for the network @xmath57 and a connection requirement @xmath58 , if a rate - capacity tuple @xmath59 is admissible , then @xmath60 is quasi - uniform and hence entropic .",
    "suppose that @xmath59 is admissible . by definition  [ df : admissible ] ,",
    "admissibility of @xmath59 on @xmath91 requires the existence of a zero - error network code @xmath92 with source messages @xmath93}$ ] , @xmath94 and a subset of its coded messages @xmath95 and @xmath96 .",
    "given this hypothesis , we will show that @xmath60 is the entropy function of @xmath96 , and that @xmath96 is quasi - uniform .",
    "first focus on figure  [ fig : part1 ] .",
    "applying min - cut bounds , it is straightforward to prove @xmath97 similarly , applying min - cut bounds to type 1 subnetworks of figure  [ fig : lowerbd ] , @xmath98 .",
    "we now focus on type 2 subnetworks of figure  [ fig : butterfly ] and aim to prove that @xmath99 for any @xmath90 . in order for the upper receiver to reconstruct @xmath63 and @xmath64 , @xmath100 or equivalently , @xmath101 .",
    "in addition , @xmath102 as a result , @xmath103 which further implies that @xmath104 is a function of @xmath105",
    ". thus @xmath104 can be recovered at @xmath106 .",
    "on the other hand , from the lower part of the subnetwork , @xmath107 where @xmath108 follows from the fact that @xmath63 can be reconstructed at the lower receiver .",
    "this implies that @xmath109 can be reconstructed at @xmath110 . from  @xcite ,",
    "that @xmath106 can decode @xmath104 and that @xmath110 can decode @xmath109 further implies @xmath111 . by mathematical induction ( similar to the proof of (",
    "* theorem 1 ) ) , the only solution that satisfies all of the conditions above is when the entropy function of @xmath96 is equal to @xmath60 .",
    "finally , from type 1 subnetworks , the support of @xmath112 is at most @xmath113 .",
    "hence , @xmath112 is indeed quasi - uniform ( this also implies that the @xmath109 are quasi - uniform , via @xmath114 and the independence of the @xmath109 ) .",
    "[ thm : converse ] for the network @xmath57 and a connection requirement @xmath58 , a rate - capacity tuple @xmath59 is admissible if @xmath60 is quasi - uniform .",
    "from theorems [ thm : direct ] and [ thm : converse ] , we can follow the approach in @xcite and easily extend the result to almost entropic functions .",
    "[ thm : almostent ] for the network @xmath57 and a connection requirement @xmath58 , a rate - capacity tuple @xmath59 is achievable if and only if @xmath60 is almost entropic is almost entropic if it is the limit of a sequence of entropic functions . ] .",
    "linear network codes ( for single source multicast ) that are resilient to eavesdropping are considered in @xcite .",
    "sufficient conditions for the existence of such codes was also derived . this was further generalized in @xcite to multi - source cases .",
    "a similar result was also obtained in @xcite which gives necessary and sufficient conditions under which transmitted data are safe from being revealed to eavesdroppers .",
    "all of the above - cited works assume that the wiretapper aims to reconstruct all sources .",
    "similar results have been obtained where only a subset of sources are to be reconstructed  @xcite .",
    "inner and outer bounds to the secure capacity region were given in @xcite .",
    "we will now show that even for a simple single - session secure multicast problem , determination of the capacity region can be extremely hard .",
    "in particular , the problem is at least as hard as any multi - source multi - session multicast problem .",
    "figure  [ fig : gstar ] shows the construction for a network @xmath115 .",
    "the source message is @xmath116 whose rate is @xmath117 .",
    "the link capacities are parametrized by @xmath118 .",
    "there is a single eavesdropper who only observes the message variable @xmath119 .",
    "thus figure  [ fig : gstar ] also specifies @xmath120 , and the wiretapping pattern @xmath121 .    .",
    "]    [ prop : decodeablekey ] given network @xmath122 and connection ( and secrecy ) requirement @xmath123 depicted in figure [ fig : gstar ] , if a rate - capacity tuple @xmath59 is admissible then @xmath124 is a function of @xmath125 .    from the capacity constraint on @xmath122 , we have @xmath126 together with the decodability requirement , @xmath127 , we have @xmath128 applying a min - cut bound on the set of edge variables @xmath129 , we can also prove that @xmath130 and @xmath131 .",
    "on the other hand , the secrecy constraint requires @xmath132 and hence @xmath133 as @xmath134 is a function of @xmath116 .",
    "now , we will show that @xmath135 .",
    "first , @xmath136 where ( a ) follows from the fact that @xmath134 is a function of @xmath116 and ( b ) follows from the conditional independence implied by the underlying network topology . using the same argument , we can also prove that @xmath137 .    since @xmath138 is a function of @xmath116 and is thus independent of internal randomness , lemma",
    "[ lemm : probcodeproperty ] implies that @xmath139 .",
    "together with @xmath140 , we have @xmath141 since @xmath142 , it implies that @xmath143 or equivalently that @xmath134 is a function of @xmath119 and @xmath125 .",
    "similarly , using the same argument , we can also prove that @xmath144 .",
    "our final aim is to show that @xmath145 and @xmath146 .",
    "clearly , both @xmath147 and @xmath148 are bounded above by @xmath149 due to the edge capacity constraint .",
    "we obtain a lower bound on the entropy of @xmath124 as follows .",
    "@xmath150 where ( a ) follows from ( [ eqn : a ] ) .",
    "hence , @xmath151 . and",
    "similarly , we can also prove that @xmath152 .",
    "independence of @xmath134 and @xmath119 implies @xmath153 where ( a ) follows from @xmath154 .",
    "consequently , @xmath155",
    ".    similarly , @xmath156 .",
    "finally , @xmath157 where ( a ) follows from independence of @xmath134 and @xmath158 .",
    "hence , @xmath159 which further implies @xmath160 .    under a regularity condition ( that @xmath161 and @xmath162 are integers )",
    ", the converse of proposition  [ prop : decodeablekey ] also holds .",
    "[ prop : decodeablekeyconv ] for the network @xmath122 with connection ( and secrecy ) requirement @xmath123 , the specified rate - capacity tuple is admissible if a secret key of a rate @xmath149 can be transmitted from the node @xmath106 to @xmath110 .",
    "essentially , propositions [ prop : decodeablekey ] and [ prop : decodeablekeyconv ] suggest that the admissibility of the single source secure multicast problem depends on communication of a secret key from @xmath106 to @xmath110 .",
    "adhering several copies of @xmath115 together ( see figure  [ fig : manygstar ] ) , we can easily generalize the network such that admissibility implies that multiple secret keys must be transmitted across a network .",
    "this turns the single source secure multicast problem into a multi - source multicast .",
    "[ thm : securemulticast ] for any multicast problem ( without secrecy constraints ) , there exists a corresponding secure multicast problem such that the multicast problem is admissible if and only if the corresponding secure multicast problem is also admissible .",
    "consequently , using the single - source two sessions network @xmath57 and a connection requirement @xmath58 , there exists a secure multicast problem such that a rate capacity tuple @xmath59 is achievable if and only if @xmath60 is almost entropic .    .",
    "theorems [ thm : almostent ] and [ thm : securemulticast ] show that even for a single - source network multicast problem with two independent sets of messages or for a single source secure multicast problem , the determination of the set of achievable rate - capacity tuples can be extremely hard . following the same arguments as used in  @xcite , we can also prove the following results for a single - source two - session multicast problem or for a single - source single - session multicast problem with secrecy constraints :      in other words , finding capacity regions for ( secure ) multicast problems seems to be a mission impossible .",
    "not only are the existing bounding techniques loose , the non - polyhedral nature of the capacity region suggests that lp bounds can not fully characterize the region , even with the addition of more and more newly discovered information inequalities .",
    "any finite set of such new inequalities can only further tighter the bound , but can never yield the exact capacity region .",
    "despite the hardness of the problem , there are still many questions to be answered .",
    "it is unclear what makes finding the capacity region problem so difficult . in the case of a single session multicast or the case where there are only two sinks ,",
    "capacity regions have explicit polyhedral characterizations provided by min - cut bounds . on the other hand , where there are many sinks",
    ", the capacity region can be extremely complicated to characterize , even if there are only two independent sessions .",
    "it will be of great importance to classify the set of networks and connection requirements that lead to polyhedral capacity regions characterized by min - cut bounds or lp bounds ."
  ],
  "abstract_text": [
    "<S> one of the main theoretical motivations for the emerging area of network coding is the achievability of the max - flow / min - cut rate for single source multicast . </S>",
    "<S> this can exceed the rate achievable with routing alone , and is achievable with linear network codes . </S>",
    "<S> the multi - source problem is more complicated . </S>",
    "<S> computation of its capacity region is equivalent to determination of the set of all entropy functions @xmath0 , which is non - polyhedral . </S>",
    "<S> the aim of this paper is to demonstrate that this difficulty can arise even in single source problems . in particular , for single source networks with hierarchical sink requirements , and for single source networks with secrecy constraints . in both cases , we exhibit networks </S>",
    "<S> whose capacity regions involve @xmath0 . as in the multi - source case , </S>",
    "<S> linear codes are insufficient .    </S>",
    "<S> = 1 </S>"
  ]
}
{
  "article_text": [
    "practical packing problems depend deeply on the shape and other characteristics of the products involved . in the tube industry",
    "these problems are very complex and difficult , not only due to the variety of possible shapes  tubes of many different radii and lengths , boxes , cylinders  but also because of the requirement to quickly obtain a solution .",
    "companies in this industry face several challenges in the optimisation of load for product delivery .",
    "the `` standard '' way of delivering merely fixed quantities ordered by customers is not satisfactory , as it usually leads to unused space inside containers .",
    "regular customers prefer to completely use the container , so as to reduce the frequency of deliveries . on the other hand",
    ", the extreme complexity of packing tubes of different dimensions , often of several lengths , and mixed with boxes and bags , makes the task of planning a delivery very time consuming .",
    "an additional difficulty is that straightforward methods are clearly suboptimal .",
    "we are hence in a situation where quantities ordered are often not fixed , as both the company and frequent customers want to fully utilise containers capacity . for this purpose ,",
    "interaction between the logistics and commercial departments is essential , as customers usually want to be informed of what can be delivered .",
    "this calls for an interactive , responsive system for supporting operational decisions in container loading and packing .",
    "we propose a heuristic method for packing tubes and boxes together , based on a recursive partition of the container into smaller parts .",
    "three - dimensional packing has recently been studied under several different perspectives .",
    "the problem of allocating a given set of three - dimensional rectangular items to the minimum number of identical finite bins without overlapping has been addressed with tabu search in  @xcite ; here , items are packed in several layers , the floor of the container being the first . a heuristic method for the situation where",
    "there is no requirement for packed boxes to form flat layers , keeping track of empty space seen from different perspectives and using a look - ahead scheme for positioning , is presented in  @xcite .",
    "another tabu search for three - dimensional orthogonal bin packing is presented in  @xcite ; in this case it is a two - level approach , separating the search for the optimal number of bins from optimising of the accommodation of items within bins .    in our problem , minimising the number of containers and maximising space usage are conflicting objectives , as often arises in packing ( see , _ e.g. _ , @xcite ) .",
    "this problem of packing tubes and boxes , dealing with heterogeneous items and with distinctive requirements concerning their placement , does not fall into any of the categories tackled in the bibliography ; to the best of our knowledge , it is being addressed here for the first time .",
    "further details on the problem and on the method are conveyed in section  [ sec : problem ] .",
    "an illustration of the steps involved in the algorithm is presented in section  [ sec : algandresults ] , and conclusions are drawn in section  [ sec : conclusions ] .",
    "one of the difficulties of packing in the tube industry is due to the diversity of shapes involved , which calls for different algorithms for each shape .",
    "we will shortly describe each of these algorithms , and then describe the method used for putting all of them together in a single solver . in the methods we propose",
    ", a container ( corresponding to the physical object used for packing tubes and boxes inside ) is divided into smaller parallelepipeds , which we call _ holders_. the methods are based on long container shapes , which correspond to those that are used in practice .",
    "tubes are also long , and their placement is always along the depth of the container ; please see the left image of figure  [ fig : container3d ] .",
    "orders in this company specify a minimum number of tubes and/or boxes required by the customer .",
    "however , customers are usually interested in using all the available space in the container .",
    "hence , there is a _ value _ associated to each tube and box , which is a measure of the interest of inserting additional pieces in the packing .",
    "the first goal is to minimize the number of containers used for packing the specified quantity of tubes and boxes ; the second goal is to maximize the monetary value of additional objects ( tubes or boxes ) which can be packed in the minimum number of containers .      in this industry tubes are usually produced in a continuous extraction machine , and may be cut to different lengths .",
    "a special case is when they are cut to the length of the container inside which they will be shipped . before being placed in the container",
    "they may be inserted inside other , thicker tubes , so that usage of container space is maximised @xmath0 a process named _ telescoping_. as in this case all the tubes occupy the full container length , maximising container load is equivalent to maximising the area filled with rings , in a section of the container .",
    "this is called the recursive circle packing problem ( rcpp ) , and has been dealt with in  @xcite .",
    "the idea behind it is to construct packings repeatedly with a greedy method coupled with a random component , and at the end select the best of the solutions encountered . at each step , tubes may be placed either directly inside the container / holder or telescoped inside other tubes .    for the purpose of this work ,",
    "two variants of algorithms for the rcpp are used :    algorithm t1 : : :    given the dimension of a holder and a set of tubes which do not    completely fit there , find a packing with the maximum number of tubes    of each diameter , lexicographically , by decreasing diameter .",
    "algorithm t2 : : :    when the set of tubes completely fits in the holder , determine a    packing with minimum height .    in order or decreasing diameter , each tube is tentatively inserted . in practice ,",
    "packing larger tubes first is a good heuristic rule , and greedy procedures based on this order usually give satisfactory results .",
    "packing of parallelepipeds in a container is a well studied problem , with many different variants . in our case ,",
    "boxes are a secondary product ; also , in practice it is viable to put boxes on top of tubes but not the inverse . for these reasons , the relevant box packing variants for our case",
    "are :    algorithm b1 : : :    given the dimensions of a holder , find the maximum number of boxes    from the given input set that can be accommodated inside it ,    lexicographically , by decreasing volume , or algorithm b2 : : :    if all boxes can be placed inside the holder , find the minimum depth    required ( first goal ) , and then the minimum height required , keeping    the width and depth of the holder fixed .",
    "the method for box placement consists of the following .",
    "a corner is the intersection of three orthogonal planes ( sides of previously placed boxes or walls of the container ) .",
    "the method keeps an updated list of available corners , which is calculated by a process of elimination of points through an analysis of the octants occupied after each placement .",
    "every corner is assigned a signature that guides the direction of potential placements of a box in that corner .",
    "each box is placed leaning against the best corner , _ i.e. _ , the one that leads to minimum depth , height , and width , in lexicographical order .",
    "this is a modified version of the method described in  @xcite , including new ideas on using a signature for eliminating octants when updating the corner list .",
    "placement is always made with the boxes sides orthogonal to the walls of the container , in contact with container s wall or with previously packed objects in each of the dimensions .",
    "the algorithm attempts placement of each of the boxes in one of six possible orientations , but identical boxes in a row ( _ i.e. _ , fitting next to the previous and in the same orientation ) are positioned with the same orientation of the previous , whenever possible . when the size of a box being packed changes with respect to the previous , each of the six possible orientations is attempted again .",
    "the algorithm is greedy : for each box the best corner is chosen ( considering the criteria above ) , but some diversification is allowed by firstly attempting all the different box sizes that remain to be packed , and then all the possibilities for the orientation of the first box of each type in a row .",
    "the solution selected is the one that leads to the best objective overall .",
    "as the number of different box sizes in an order is typically very small , this method is fairly fast in practice .",
    "the problem when tubes have different lengths becomes much harder to solve than the rcpp , as the solution must consider the 3d disposition of tubes inside the container .",
    "a set of practical rules helps making this problem a little bit better defined :    * all tubes are placed in parallel to the depth axis ; * shorter tubes may be placed on top of longer tubes , but not the inverse ; * more generally , objects placed on top must not protrude with respect to tubes / objects below ; * boxes may be placed on tubes , but not the inverse .    based on these rules , we propose a heuristic method for dividing a container into holders .",
    "the set of holders inside a container , with sides orthogonal to its walls , form a partition of the container .",
    "holders width is fixed to the width of the physical container ; this is due to the possibility for the tubes to flow on this dimension .",
    "furthermore , this allows a simplification in solving the problem , and is very convenient in the industrial setting for communicating the solution .",
    "tube holders have a fixed depth , corresponding to the length of the tubes they accommodate .",
    "tube placement is done by decreasing tube length .",
    "packing tubes of a given length leads to the division of a holder in three parts , as shown in figure  [ fig : container3d ] :     m5 cm m3 mm m5 cm    & @xmath1 &    1 .",
    "the holder where tubes of the current length are packed , which , having become full , is no longer considered ; 2 .   a holder above it , if some vertical space has been left ; 3 .   a holder beside it , if some horizontal space has been left .",
    "this division is recursive : the holders created this way may be used for an identical packing procedure .",
    "the height of a holder is determined either by :    1 .   the solution of the rcpp with algorithm t2 that minimises the height used for packing the set of tubes assigned to this holder , in case all these tubes fit , or 2 .",
    "the limit of the physical container : * when the set of tubes assigned to this holder can not be packed completely , in which case a new holder with the same length will have to be created afterwards . *",
    "when the objects being packed are boxes .",
    "holders for boxes have a depth identical to the ( tube ) holder below them ; the depth actually used may be smaller , but as boxes are packed after tubes ( implying that tube placement could not be done on holders being considered for boxes ) , unfilled space in box containers is not usable",
    ".    whenever there is a non - empty list of items to pack and the list of holders where items could possibly fit is empty , a new physical container is added , and a holder with its size is created .",
    "these ideas are structured in algorithm  [ alg : main ] .",
    "@xmath2 list of containers in the solution ( initially empty ) [ line : begin - init ]   +    the input for this algorithm is the list of tubes and boxes to pack , each characterised by its dimensions , and the size of the containers where these items are to be packed .",
    "the output is a list of containers required for packing all the items , divided into holders .",
    "each holder is characterised by its dimensions and position in the container , and includes a list of items ( either tubes or boxes ) packed inside it .",
    "each of these items , in turn , is characterised by its position inside the holder .",
    "the main algorithm calls a recursive function ` fill ` , which receives as input a holder ( initially empty , with the dimensions of the physical container ) and fills it with tubes and boxes available .",
    "this function works by creating a transversal slice of the holder with the length of the longest tubes that still fit in it ( lines [ line : slice ] to  [ line : update - d ] ) , originating a tube holder .",
    "if tubes of that length completely fill this slice , the algorithm moves to the next slice .",
    "otherwise , a holder is created above these tubes , using the remaining space in the slice , and yet unpacked tubes and boxes are inserted there ( line  [ line : rec ] ) ; this is the recursive part of the algorithm .",
    "when no more tubes fit in a slice , a holder for boxes is created and filled ( lines [ line : start - boxes ] to  18 ) .",
    "in this section we will describe each of the steps involved in using the algorithm . for this illustration",
    ", we have selected an instance found in practice ; the actual data is listed in  [ sec : appendix ] .",
    "an instance of this problem defines container s dimensions , as well as the tubes and boxes to be packed .",
    "all containers are assumed to have identical dimensions ; in practice this may not be true , as some discrepancies exist , but this information is usually unknown in advance . however , the methods proposed do work straightforwardly if different dimensions to be used are given as an ordered list .",
    "tubes are characterised by external and internal diameters and by their length .",
    "typically , orders include many identical tubes ; hence , the number of tubes of a given dimension is also a datum .",
    "real tubes may have a socket in one side ; in this case , to ensure that the selected tube will actually fit in the holder , the external diameter of the tube is updated to the socket s external diameter . tubes to be packed are kept in a list ordered by decreasing length .",
    "tubes of the same length are ordered by decreasing external diameter .",
    "boxes are characterised by width , height , and depth ; as for tubes , the number of boxes of each type is also a datum . in many situations , rotation of boxes",
    "is only allowed on the vertical axis ; in this industry , however , boxes are typically very light and can be safely rotated in any direction .",
    "boxes to be packed are kept in a list ordered by decreasing volume .",
    "the first steps of execution of algorithm  [ alg : main ] consist of adding to the solution a new empty container , whose dimensions are used as a holder s size .",
    "tubes and boxes will be packed in this holder by means of procedure ` fill ` ( line  [ line : init - fill ] ) ; in the initial call , the longest tubes have the same length as the container , and are assigned to holder ` h1 ` , placed at the bottom of container  1 , as shown in figure  [ fig : solh ] ( top ) .",
    "the disposition of tubes in holder ` h1 ` is determined in line  [ line : new - tube - holder ] , by calling algorithm t2 ; it is shown in figure  [ fig : solh1 ] ( top - left ) . ] .",
    "when the algorithm reaches line  [ line : rec ] , the space above ` h1 ` is used for creating new holders , through a recursive call to procedure ` fill ` . in this call , in the first iteration of the cycle in line  [ line : repeat ] , tubes of the current length completely fill the vertical space in ` h2 ` ; hence , the maximum number of tubes is placed there by algorithm t1 , and there is no recursive call in line  [ line : rec ] . in the second iteration , holder ` h3 ` is created for tubes of the same length ( line  [ line : new - tube - holder ] ) .",
    "this time space is left above it , which is used in a new recursive call , originating holders ` h4 ` and ` h5 ` ; the latter , having no tubes that fit in , is used for packing boxes ( lines  [ line : start - boxes ] to  18 ) , using algorithm b1 . at this point ,",
    "no usable space is left in the holders created so far ; hence , the recursion is complete and returns to line  [ line : init - fill ] , and container  1 is closed .",
    ".,title=\"fig : \" ]   +   + .,title=\"fig : \" ]    as there are still tubes and boxes awaiting to be packed , a new container is added in line  [ line : init - container ] . the recursive call to procedure `",
    "fill ` is similar to the previous , except that now all the remaining boxes can be packed in holder  ` h3 ` ( using algorithm b2 ) , and hence some space beside it is left unused .",
    "the same for the space on top of and beside ` h4 ` .",
    "most likely , being shown this solution , the decision maker would inform the customer that space is available in a container , ask if some additional product should be dispatched , and call algorithm  [ alg : main ] again .",
    "+      it should be noted that the problems being tackled by algorithms t1 , t2 , b1 , b2 are very difficult to solve optimally , and only an approximate solution can be found in a reasonable time .",
    "the total time intended to be used for finding a solution is input when starting algorithm  [ alg : main ] , and is split among all the algorithms it calls by a heuristic rule .",
    "+          the basis for communicating the solution at an operational level are representations of the container s division into holders , as in figure  [ fig : solh ] .",
    "this layout is followed closely at the time of actual packing .",
    "however , the disposition of tubes shown in figures [ fig : solh1 ] and [ fig : solh2 ] is only followed for very wide tubes , which may be tricky to place in the container .",
    "narrow tubes ( as those shown ) usually find a near - optimal configuration when placed arbitrarily .",
    "hence , algorithms t1 and t2 are used mostly for determining quantities of tubes that can be dispatched .",
    "diagrams representing the disposition of boxes are also awkward to visualise ; instead , the software prepares a list of boxes packed in each holder , together with their orientation .      to our knowledge , this problem has not been tackled previously in the literature .",
    "even though there are no methods for comparing the performance of our algorithm , we have prepared a set of benchmark instances that can be used for that purpose ; the set is available as data associated to this paper , in  @xcite .",
    "this set of instances helps assessing the cpu time used , as well as the size of relevant instances for the company . for filling each holder",
    ", we are using simple construction heuristics for packing tubes or boxes .",
    "each of the instances completely fills the container ; an additional unit of any the items involved would imply using an additional container ( by using the simplest heuristics for algorithms t1 , t2 , b1 , b2 ; these solutions may potentially be improved by allowing more cpu time , or by using more sophisticated methods for box and tube packing in each of the holders ) .",
    "hence , the value of additional items packed in each of the solutions ( _ i.e. _ , the value of second goal ) is zero .",
    ".characteristics of instances and cpu time required for a basic heuristic solution .",
    "n is the number of different tubes , t is the total number of tubes , m is the number of different boxes , b is the total number of boxes , c is the number of containers used , and cpu is the time ( in seconds ) required for obtaining the solution . [ cols=\"<,>,>,>,>,>,>\",options=\"header \" , ]     however , the main benefits seen by the company are on the flexibility on management that the method allows .    dealing with boxes and tubes",
    "simultaneously allowed filling spaces that , previously , were unexploited .",
    "solutions obtained ensure that at the time of loading there is a feasible sequence for the operations involved : filling bottom up , from the rear to the door of the container . our procedure",
    "allowed improving quality of service and communication with customers , and its usage was considered an important factor for reductions in logistic costs and for facilitating timely responses to order enquiries .",
    "there are several interesting directions for future work .",
    "the greedy approach used for choosing tube length at each step may be replaced by better alternatives , for example using metaheuristics or tree search .",
    "a more practical direction consists of taking into account both load weight and the resistance of tubes and boxes for determining what can be stacked on top of what .",
    "an approach based on mathematical programming formulations is unlikely to provide practical results , as the subproblems involved are known to be difficult even when tackled separately , but it would undoubtedly be theoretically interesting . given the difficulty and the rather specific nature of this problem , we believe that currently there is no need of benchmark instances , as it is unlikely that other approaches for tackling it emerge ; but this may change in the future . finally , considering the possibility of placing tubes / cylinders in any orthogonal direction is also interesting and relevant in practice .",
    "[ [ acknowledgements ] ] acknowledgements + + + + + + + + + + + + + + + +    we would like to thank slvia cunha for her help in coding part of the algorithms .",
    "this work was partially supported by feder , qren e compete , within project _ occ : optimizador de carga em contentores , qren sii&dt projeto",
    "em co - promoo 13824 _ , and includes contributions from its research team .",
    "this work is partly funded by fct ",
    "fundao para a cincia e a tecnologia ( portuguese foundation for science and technology ) within project uid / eea/50014/2013 .    1 [ 1]#1 urlstyle [ 1]doi  # 1    baldi , m.m . ,",
    "crainic , t.g . ,",
    "perboli , g. , tadei , r. : the generalized bin packing problem .",
    "transportation research part e : logistics and transportation review * 48*(6 ) , 1205  1220 ( 2012 )    crainic , t.g .",
    ", perboli , g. , tadei , r. : ts2pack : a two - level tabu search for the three - dimensional bin packing problem .",
    "european journal of operational research * 195*(3 ) , 744  760 ( 2009 )    huang , w. , he , k. : a caving degree approach for the single container loading problem .",
    "european journal of operational research * 196*(1 ) , 93101 ( 2009 )    huang , w. , he , k. : a new heuristic algorithm for cuboids packing with no orientation constraints .",
    "* 36*(2 ) , 425432 ( 2009 )    lim , a. , rodrigues , b. , wang , y. : a multi - faced buildup algorithm for three - dimensional packing problems .",
    "omega * 31*(6 ) , 471  481 ( 2003 )    lodi , a. , martello , s. , vigo , d. : heuristic algorithms for the three - dimensional bin packing problem .",
    "european journal of operational research * 141*(2 ) , 410  420 ( 2002 )    pedroso , j.p . : a dataset for the problem of packing tubes and boxes in a container .",
    "internet repository , version 1.0 ( 2016 ) .",
    "http://www.dcc.fc.up.pt/~jpp/code/occ    pedroso , j.p . ,",
    "cunha , s. , tavares , j.n .",
    ": recursive circle packing problems . international transactions in operational research",
    "* 23*(1 - 2 ) , 355368 ( 2016 )",
    ".... container # len    height   depth 2350     2690     12000    tubes # tubes data , where : #    i d - code #    idiam - internal diameter #    ediam - external diameter #    len - tube length #    number - number of tubes in the order # i d     idiam    ediam    len      number a        108.38   128.33   12000    144 b        77.8     92.42    12000    144 c        140.59   174      6000     171 d        75.39    98       6000     171 e        63.39    85.30    6000     171 f        120.20   126.46   3000     546 g        56.50    61.31    3000     546 h        36.80    41.41    3000",
    "1638 i        75.2     89       5000     403"
  ],
  "abstract_text": [
    "<S> in this paper we describe a method for packing tubes and boxes in containers . </S>",
    "<S> each container is divided into parts ( holders ) which are allocated to subsets of objects . </S>",
    "<S> the method consists of a recursive procedure which </S>",
    "<S> , based on a predefined order for dealing with tubes and boxes , determines the dimensions and position of each holder . characteristics of the objects to pack and rules limiting their placement make this problem unique . </S>",
    "<S> the method devised provides timely and practical solutions . </S>",
    "<S> +   + * keywords : * packing , heuristics , decision support systems . </S>"
  ]
}
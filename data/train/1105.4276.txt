{
  "article_text": [
    "analysis of complex real - world networks has led to some significant discoveries in the recent years .",
    "research community has revealed several common properties of various real - world networks  @xcite , including different social , biological , internet , software and other networks .",
    "these properties provide an important insight in the function and structure of general complex networks  @xcite , moreover , they allow for better comprehension of the underlying real - world systems and thus give prominent grounds for future research in a wide variety of different fields .    in the field of software engineering",
    ", network analysis has just recently been adopted to acquire better comprehension of the complex software systems  @xcite .",
    "nowadays , software represents one of the most diverse and sophisticated human made systems ; however , only little is known about the actual structure and quantitative properties of ( large ) software systems .",
    "cai  and  yin  @xcite have denoted this dilemma as _ software law problem _ , which represents an effort towards identifying and formulating physics - like laws , obeyed by ( most ) software systems , that could later be applied in practice . however , the main objective of software law problem is in investigating how software looks like .    in the context of employing complex networks analysis ,",
    "research community has already made several discoveries over the past years .",
    "in particular , different authors have observed that networks , constructed from various software systems , follow _ scale - free _",
    "@xcite ( i.e. power - law ) degree distributions and reveal _ small - world _  @xcite phenomena .",
    "we proceed their work by exploring another property commonly found in real - world networks , i.e. _ community structure _",
    "the term denotes the occurrence of local structural modules ( _ communities _ ) that are groups of nodes densely connected within and only loosely connected with the rest of the network .",
    "communities play crucial roles in many real - world systems  @xcite , however , the community structure of complex software system networks has not yet been thoroughly investigated .",
    "main contributions of our work are as follows .",
    "we adopt _ class dependency networks _",
    ", where nodes represent software classes and edges represent dependencies among them , and show that these networks reveal significant community structure , with similar properties as observed for other complex networks .",
    "we also note that network , representing core software library , exhibits less significant community structure .",
    "furthermore , we prove that , although intuitive and anticipated by different phenomena , revealed communities do not ( completely ) correspond to software packages .",
    "thus , we demonstrate how community detection can be employed to obtain highly modular software packages that still relate to the original packaging .",
    "the rest of the article is structured as follows .",
    "first , in  section  [ sec_rw ] , we briefly present relevant related work and emphasize the novelty of our research .",
    "next , section  [ sec_cdn ] introduces employed class dependency networks . in  section  [ sec_eval ]",
    "we present empirical evaluation of community structure of class dependency networks , and propose possible applications to software engineering .",
    "last , in  section  [ sec_conc ] , we give final conclusions and identify areas of further research .",
    "although software law problem has already been investigated over @xmath0 years  @xcite , research community has only recently begin to employ network analysis to gain better comprehension of the software systems  @xcite . as mentioned above",
    ", different authors have observed that networks , constructed from software systems , follow scale - free degree distributions  @xcite and exhibit small - world property  @xcite .",
    "software networks thus reveal common behavior , similar as observed in other complex networks  @xcite .",
    "furthermore , authors have also identified several different phenomena ( e.g. software optimization ) that might govern such complex behavior  @xcite .",
    "moreover , analysis of _ clustering _",
    "@xcite has revealed hierarchical structure in software networks  @xcite .    on the other hand ,",
    "community structure of software networks has not yet been investigated .",
    "several authors have already discussed the notion of communities in the context of software systems  @xcite , however , no general empirical analysis and formal discussion was ever conducted ( due to our knowledge ) .",
    "still , authors have observed different phenomena that could promote the emergence of community structure in software networks  @xcite and discussed possible applications within software engineering and other sciences  @xcite .    in a wider context of software networks analysis",
    ", different random - walk based measures have been proposed to measure key ( i.e. most influential ) classes and packages  @xcite .",
    "the researchers have also investigated connectedness , robustness , motifs and patterns within software networks  @xcite .",
    "just recently software systems were also treated as evolving complex networks  @xcite .",
    "previous research on the analysis of software systems has employed a variety of different types of software networks ( i.e. graphs ) . in particular , _ package _ , _ class _ and _ method collaboration graphs _",
    "@xcite , _ subrutine call graphs _",
    "@xcite , _ software architecture _  @xcite and",
    "_ software mirror graphs _  @xcite , _ software architecture maps _  @xcite , _ inter - package dependency networks _  @xcite and others  @xcite .",
    "the networks primarily divide whether they are constructed from source code , byte code or software execution traces , and due to the level of software architecture they represent . however , as discussed in  section  [ sec_rw ] , most of these networks share some common characteristics .",
    "class dependency network for _ jung _ graph and network framework  @xcite .",
    "node colors indicate four high - level packages of the framework  ` visualization ` ( green ) , ` algorithms ` ( red ) , ` graph ` ( orange ) and ` io ` ( blue ) .",
    "the network reveals rather clear community structure that roughly coincides with the software packages . ]    for the purpose of this research we introduce _ class dependency networks _",
    "[ fig_jung ] ) . here an object - oriented software is represented by an undirected multi - graph @xmath1 , where @xmath2 is the set of nodes and @xmath3 is the set of edges .",
    "graph @xmath4 is constructed from software source code in the following manner .",
    "each software class @xmath5 is represented by a node @xmath6 , when edge @xmath7 represents a _ dependency _ between classes @xmath8 and @xmath9 .",
    "dependencies are of four types , namely , _ inheritance _ ( class @xmath9 inherits or implements class @xmath8 ) , _ field _ ( @xmath9 contains a field of type @xmath8 ) , _ parameter _ ( @xmath9 contains a method that takes type @xmath8 as a parameter ) and _ return _ ( @xmath8 contains a method that returns type @xmath9 ) .",
    "note that class dependency networks are constructed merely from the header information of the classes , and their methods and fields .",
    "as this information is commonly determined by a group of developers , prior to the actual software development , it is less influenced by the subjective nature of each particular developer .",
    "hence , the networks thus more adequately represent the ( intended ) structure of some particular software , still , some relevant information might thus be discarded .",
    "an example of class dependency network is shown in  fig .",
    "[ fig_jung ] .",
    "the network reveals strong community structure , furthermore , the communities also roughly coincide with the actual software packages .",
    "however , as will be shown in section  [ sec_eval ] , modularity of the natural communities , depicted in the network s topology , is much larger than that of the packages , determined by the developers .",
    "in the proceeding sections we present and discuss results of the empirical evaluation of community structure of class dependency networks ( section  [ sec_eval_cs ] ) , address the relation between communities and software packages ( section  [ sec_eval_sp ] ) and propose possible applications of community detection to software engineering ( section  [ sec_eval_app ] ) .    the empirical evaluation is done using @xmath10 class dependency networks constructedfrom _ java _ and several third party libraries ( table  [ tbl_net ] ) .",
    "the networks range from those with hundreds of nodes to those with several tens of thousands of edges ( all isolated nodes have been discarded ) . due to generality",
    ", networks were selected thus they represent a relatively diverse set of software systems .",
    ".[tbl_net]class dependency networks for different software systems ( @xmath11 is the number of packages ) .",
    "[ cols=\"^,^ , > , > , > \" , ]     we stress that the origin of the disparity between network communities and software packages is not entirely evident .",
    "the lack of connectedness of software packages , and low values of modularity , suggest that class dependency networks give poor representation of software systems or disregard some relevant relations among classes ( form the perspective of software packages ) .",
    "however , different distributions of sizes clearly show that there is some additional departure between the communities and software packages , which is independent of the actual network representation ( i.e. class dependencies ) .",
    "last , we discuss a particularly low value of modularity for _ colt _ library packages ( table  [ tbl_q ] ) . as the library represents a core framework for scientific computing , where the performance is often of greater importance than extensibility , maintenance and modular structure , it is expected for the system to exhibit only poor modular structure .",
    "the modularity of software packages thus reflects the modularity of the underlying software system , which in fact motivates the application , presented in the proceeding section .      due to weak modular structure of software packages ,",
    "an obvious application of community detection to software engineering is to reveal highly modular packaging of software systems ( fig .",
    "[ fig_colt ] ) .",
    "the choice of class dependencies ( i.e. type of the network ) is in that case of course arbitrary .",
    "however , simply applying a community detection algorithm to employed networks would often prove useless , as the identified communities would only hardly be mapped to the existing software packages .",
    "the latter is vital due to the comprehension of the results .",
    "a simple solution is to start with the communities that represent original software packages , and refine them , using some community detection algorithm .",
    "the algorithm should thus merely refine and merge the communities , where no new communities ( i.e. labels ) should be introduced .",
    "this preserves original software packages , their hierarchy and identifiers , which enables complete comprehension of the final results .",
    "an example can be seen in  fig .",
    "[ fig_colt ] .",
    "community networks for class dependency network , representing classes within ` cern.colt ` and ` cern.jet ` packages of _ colt _ library ( reduced to the largest connected component ) .",
    "networks correspond to the original software packages @xmath12 ( left ) and communities , revealed with _ lp _",
    "algorithm by refining software packages @xmath12 ( right ) . for each community",
    "we show the distribution of classes over software packages , where colors indicate high - level packages of the framework .",
    "refined communities ( i.e. packages ) obtain significantly higher modularity and can still be related to the original packaging . ]",
    "another obvious application to software engineering is ( network ) _",
    "abstraction_. community detection can be employed to obtain a clear representation of software systems on a relatively high level of abstraction .",
    "furthermore , one can also address the _ centrality _",
    "@xcite ( or other measures of influence ) of the identified communities , to expose key nodes and structures throughout the entire system  @xcite . a simple application of community detection to software abstraction can be seen in  fig .",
    "[ fig_cjavax ] ( and  fig .",
    "[ fig_cjung ] ) .",
    "the article represents seminal work in the area of applying network community detection methods and techniques in software engineering .",
    "however , further work is needed to design sophisticated applications that would be of considerable benefit in practice .",
    "community network for _ javax _ class dependency network revealed by _ lp _",
    "algorithm ( only the largest five connected components are shown ; modularity equals @xmath13 ) . for each community",
    "we show the distribution of classes over software packages , where colors indicate high - level packages of the framework .",
    "the representation gives a clear insight into the structure of the _ javax _ namespace , and shows relations ( i.e. dependencies ) among different sub - packages of the system . ]",
    "the article explores community structure of networks , constructed from complex software systems ( i.e. class dependency networks ) .",
    "the main contribution is in showing that software networks reveal significant community structure , characterized by similar properties as commonly observed for other complex networks .",
    "software networks thus reveal another general network phenomena , besides scale - free degree distributions and small - world effect , which is a prominent observation for the software - law problem .",
    "furthermore , the results are of even greater importance , as software represents one of the most complex human made systems",
    ".    future work will mainly focus on considering other types of class dependency networks that will include additional relations among classes .",
    "moreover , we will introduce the notions of _ positive _ and _ negative _ relations , to more adequately model similarity and diversity among software classes .",
    "the main objective will be to establish further understanding of ( community ) structure of class dependency networks , and to assess its relation to software packages .",
    "the results could thus promote various novel applications in the software engineering domain .",
    "l.  subelj , m.  bajec , unfolding network communities by combining defensive and offensive label propagation , in : proceedings of the international workshop on the analysis of complex networks , 2010 , pp .",
    "87104 .",
    "d.  hyland - wood , d.  carrington , s.  kaplan , scale - free nature of java software package , class and method collaboration graphs , proceedings of the international symposium on empirical software engineering .",
    "g.  baxter , m.  frean , j.  noble , m.  rickerby , h.  smith , m.  visser , h.  melton , e.  tempero , understanding the shape of java software , in : proceedings of the acm sigplan international conference on object - oriented programming , systems , languages , and applications , 2006 , pp .",
    "397412 .",
    "a.  zaidman , t.  calders , s.  demeyer , j.  paredaens , applying webmining techniques to execution traces to support the program comprehension process , in : proceedings of the european conference on software maintenance and reengineering , 2005 , pp . 134142 .",
    "f.  radicchi , c.  castellano , f.  cecconi , v.  loreto , d.  parisi , defining and identifying communities in networks , in : proceedings of the national academy of sciences of the united states of america , vol . 101 , 2004 , pp . 26582663 ."
  ],
  "abstract_text": [
    "<S> due to notable discoveries in the fast evolving field of complex networks , recent research in software engineering has also focused on representing software systems with networks . </S>",
    "<S> previous work has observed that these networks follow scale - free degree distributions and reveal small - world phenomena , when we here explore another property commonly found in complex networks , i.e. community structure . </S>",
    "<S> we adopt class dependency networks , where nodes represent software classes and edges represent dependencies among them , and show that these networks reveal significant community structure , characterized by similar properties as observed in other complex networks . </S>",
    "<S> however , although intuitive and anticipated by different phenomena , identified communities do not exactly correspond to software packages . </S>",
    "<S> we empirically confirm our observations on several networks constructed from _ </S>",
    "<S> java _ and various third party libraries , and propose different applications of community detection to software engineering .    </S>",
    "<S> community structure , complex networks , software systems + _ pacs : _ 89.75.fb , 89.75.hc , 89.20.ff </S>"
  ]
}
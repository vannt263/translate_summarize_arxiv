{
  "article_text": [
    "in the usual models of genome rearrangement , duplications and losses of genes are not taken into account .",
    "there were attempts to incorporate them to the classical models , but the consecutive combinatorial complexity of the models so obtained made their study quite difficult .",
    "following @xcite , we focus on the duplication - loss problem by considering the _ tandem duplication - random loss model _ of genome rearrangement in which genomes are modified _ only _ by duplications and losses of genes .    one _ step _ of tandem duplication - random loss , or duplication - loss for short , consists in @xmath13 the tandem duplication of a contiguous fragment of the genome , _",
    "i.e. , _ the duplicated fragment is inserted immediately after the original fragment , and @xmath14 the loss of one of the two copies of every duplicated gene .",
    "we assume that the loss occurs immediately after the duplication of genes , which is , on an evolutionary time - scale , a good approximation to reality .",
    "the _ width _ of a step is the number of duplicated genes .",
    "see figure [ ex : duplication - loss ] for an example .",
    "@xmath15    from a formal point of view , a genome consisting of @xmath12 genes is modelled by a permutation @xmath16 of the set of integers @xmath17 . in @xcite ,",
    "the authors define the cost of a duplication - loss step of width @xmath0 to be @xmath1 , @xmath18 being a constant parameter .",
    "they suggest that other cost functions can be considered , and in particular affine functions . in this paper",
    ", we consider a _ piecewise constant _ cost function : the cost of a step of width @xmath0 is @xmath19 if @xmath4 and is infinite for @xmath6 , for some fixed parameter @xmath7 .",
    "obviously , for this model to be meaningful , we assume that @xmath20 .",
    "we also consider the possibility that @xmath21 is dependent on the size @xmath12 of the permutation on which the duplication - loss operations are performed .",
    "both models are generalizations of the _ whole genome duplication - random loss model _ : it corresponds to the case @xmath22 in the model of @xcite , @xmath23 or @xmath24 in our model .",
    "many models of evolution of permutations are inspired by computational biology issues : see @xcite , @xcite , @xcite , @xcite for examples in the literature .",
    "our model of evolution of permutations can be viewed in the framework of _ permuting machines _ defined in @xcite .",
    "such a machine takes a permutation in input , and transforms it into an output permutation , the transformation being subject to satisfy the two properties of independence with respect to the values and of stability with respect to pattern - involvement ( see @xcite for more details ) .",
    "the important point is that the duplication - loss transformation satisfies these two properties .",
    "thus , one duplication - loss step ( in one of the models defined above ) corresponds to running an adequate permuting machine once .",
    "when we will consider permutations obtained after a sequence of duplication - loss steps , it will correspond to permutations obtained in the output of a combination in series of identical permuting machines .",
    "for ease of exposition in some proofs , we will sometimes use a graphical representation of permutations , as shown in figure [ fig : graphical - representation ] .",
    "( -4,0)(11,11 ) ( 0,0)(8,8 ) ( 0.5,-0.5)@xmath19 ( 1.5,-0.5)@xmath25 ( 2.5,-0.5)@xmath26 ( 3.5,-0.5)@xmath27 ( 4.5,-0.5)@xmath28 ( 5.5,-0.5)@xmath29 ( 6.5,-0.5)@xmath30 ( 7.5,-0.5)@xmath31 ( -0.5,0.5)@xmath19 ( -0.5,1.5)@xmath25 ( -0.5,2.5)@xmath26 ( -0.5,3.5)@xmath27 ( -0.5,4.5)@xmath28 ( -0.5,5.5)@xmath29 ( -0.5,6.5)@xmath30 ( -0.5,7.5)@xmath31 ( 0.5,5.5)0.3 ( 1.5,7.5)0.3 ( 2.5,0.5)0.3 ( 3.5,2.5)0.3 ( 4.5,4.5)0.3 ( 5.5,3.5)0.3 ( 6.5,1.5)0.3 ( 7.5,6.5)0.3      though not appearing clearly for the moment , there exist strong links between the duplication - loss model and some pattern - avoiding classes of permutations .",
    "hence , we need to recall a few definitions concerning those classes .",
    "a permutation @xmath32 is a bijective map from @xmath33 $ ] to itself .",
    "the integer @xmath12 is called the _ size _ of @xmath34 , denoted @xmath35 .",
    "we denote by @xmath36 the image of @xmath37 under @xmath34 .",
    "a permutation can be seen as a word @xmath38 containing exactly once each letter @xmath39 $ ] . for each entry @xmath36 of a permutation @xmath34 , we call @xmath37 its _ position _ and @xmath36 its",
    "_ value_.    a permutation @xmath40 is a _ pattern _ of a permutation @xmath32 if there is a subsequence of @xmath34 which is order - isomorphic to @xmath41 ; in other words , if there is a subsequence @xmath42 of @xmath34 ( with @xmath43 ) such that @xmath44 whenever @xmath45 .",
    "+ we also say that @xmath41 is _ involved _ in @xmath34 and call @xmath42 an _ occurrence _ of @xmath41 in @xmath34 .",
    "[ def : pattern ]    we write @xmath46 to denote that @xmath41 is a pattern of @xmath34 .    a permutation @xmath34 that does not contain @xmath41 as a pattern is said to _",
    "avoid _ @xmath41 . the class of all permutations avoiding the patterns @xmath47 is denoted @xmath48 , and @xmath49 denotes the set of permutations of size @xmath12 avoiding @xmath50 .",
    "we say that @xmath48 is a class of pattern - avoiding permutations of _ basis _ @xmath51 .",
    "for example @xmath52 contains the pattern @xmath53 , and @xmath54 , @xmath55 , @xmath56 and @xmath57 are the occurrences of this pattern in @xmath34 . but @xmath58 : @xmath34 avoids the pattern @xmath59 as no subsequence of size @xmath26 of @xmath34 is isomorphic to @xmath59 , _",
    "i.e. _ , is decreasing . [",
    "ex : pattern ]      in the tandem duplication - random loss model described above , we will focus on two kinds of problems .",
    "first , as hinted before , we will consider permutations obtained after a certain number of duplication - loss steps , that is to say permutations in output of a combination in series of a certain number of permuting machines .",
    "for this , we define the class @xmath60 as follows :    the class @xmath60 denotes the class of all permutations obtained from @xmath61 ( for any @xmath12 ) after @xmath8 duplication - loss steps of width at most @xmath9 , for some constant parameters @xmath8 and @xmath9 .",
    "we do not consider the case @xmath11 here .",
    "be careful that the duplication - loss steps are not reversible , as noticed in @xcite , and that consequently @xmath60 is _ not _ the class of permutations that can be _ sorted to _",
    "@xmath61 in @xmath8 steps of duplication - loss of width at most @xmath9 .    like for the various classes of permutations obtained after a combination in series of permuting machines considered in @xcite",
    ", we obtained combinatorial properties of @xmath60 in terms of pattern - avoidance .",
    "namely , we show that @xmath60 is a class of pattern - avoiding permutations . in the case",
    "@xmath62 ( section [ section : one - step ] ) , we give a precise description of the basis @xmath63 of excluded patterns : @xmath64 , @xmath65 being the set of all permutations of @xmath66 that do not start with @xmath19 nor end with @xmath67 , and containing exactly one descent . in particular , @xmath63 is of cardinality @xmath68 and contains patterns of size at most @xmath67 . for the general case ( section [ section : p - steps ] ) , we can not get such a precise result but only a bound on the size of the excluded patterns : we show that @xmath60 is a class of pattern - avoiding permutations whose basis contains patterns of size at most @xmath69 .",
    "a second point of view is to examine how many steps of a given width are necessary to obtain any permutation of @xmath10 starting from @xmath61 .",
    "namely in section [ section : algo ] we fix a width @xmath9 ( constant , or @xmath11 ) and a size @xmath12 and search for the number @xmath8 such that any permutation of @xmath10 can be obtained from @xmath61 in at most @xmath8 duplication - loss steps of width at most @xmath9 .",
    "we describe an algorithm computing a possible scenario of duplications and losses for any @xmath16 , this scenario involving @xmath70 duplication - loss steps in the worst case and on average .",
    "we also show that @xmath71 steps are necessary ( in the worst case and on average ) to obtain any permutation of @xmath10 from @xmath61 .",
    "these upper and lower bounds coincide in most cases .",
    "before focusing on the classes @xmath72 and @xmath60 defined for our model , we will get back to the simpler whole genome duplication - random loss model ( corresponding to @xmath73 in our model , but defined previously by other authors )",
    ". we will not prove new theorems , but will interprete the existing results from the pattern - avoidance point of view .",
    "let us recall that in the whole genome duplication - random loss model , any duplication - loss step has cost @xmath19 , so that we can consider _",
    "w.l.o.g _ that the duplicated fragment is the whole permutation at any step .",
    "the cost of obtaining a permutation @xmath32 from the identity is just the minimal number of steps of a duplication - loss scenario transforming @xmath61 into @xmath34 .",
    "a statistics of permutations that matters for our purpose is their number of _",
    "descents_.    given a permutation @xmath34 of size @xmath12 , we say that there is a _ descent _",
    "_ ascent _ ) at position @xmath37 , @xmath74 , if @xmath75 ( resp .",
    "@xmath76 ) .",
    "we write @xmath77 the number of descents of the permutation @xmath34 .",
    "[ def : descent ]    for example , @xmath78 has @xmath26 descents , namely at positions @xmath19 , @xmath26 and @xmath27 .",
    "[ ex : descent ]    a permutation @xmath34 of size @xmath12 has at most @xmath79 descents , the case of @xmath79 descents exactly corresponding to the reversed identity permutation @xmath80 .",
    "it is also of common knowledge that the average number of descents among permutations of size @xmath12 is @xmath81 .    in @xcite ,",
    "the authors prove the following theorem .",
    "let @xmath32 . in the whole genome duplication - random loss model ,",
    "@xmath82 steps are necessary and sufficient to obtain @xmath34 from @xmath61 .",
    "[ thm : whole - genome ]    it is equivalent to say that the permutations that can be obtained in at most @xmath8 steps in the whole genome duplication - random loss model are exactly those whose number of descents is at most @xmath83 .",
    "now , we can notice that the property of being obtainable in at most @xmath8 steps is stable for the pattern - involvement relation @xmath84 : if @xmath34 can be obtained in at most @xmath8 steps , and if @xmath46 , then @xmath41 can also be obtained in at most @xmath8 steps .",
    "indeed , it is enough to perform the same duplication - loss scenario on @xmath34 , keeping track only of the elements of @xmath34 that form an occurrence of @xmath41 .",
    "this stability for @xmath84 implies that the class of permutations obtainable in at most @xmath8 steps is a class of pattern - avoiding permutations , whose excluded patterns are the minimal ( again in the sense of @xmath84 ) permutations that can not be obtained in @xmath8 steps .",
    "then , by theorem [ thm : whole - genome ] , the excluded patterns are the minimal permutations with @xmath85 descents .",
    "we initiated a study of the minimal permutations with @xmath86 descents in @xcite .",
    "however , it is simple to notice that a permutation with @xmath86 descents and minimal for this criterion has size at most @xmath87 , since it does not contain to consecutive ascents by minimality .",
    "an immediate consequence is that the number of excluded patterns is finite .",
    "this allows us to state the following version of theorem [ thm : whole - genome ] :    the permutations that can be obtained in at most @xmath8 steps in the whole genome duplication - random loss model form a class of pattern - avoiding permutations .",
    "the excluded patterns are the permutations with exactly @xmath85 descents that are minimal ( in the sense of @xmath84 ) for this criterion .",
    "these excluded patterns are in finite number .    in @xcite , we will give a simpler description and some properties of these minimal permutations with @xmath86 descents .",
    "as an introduction to the study of @xmath60 , we deal in this section with the simpler case of the class @xmath88 of permutations obtained from @xmath89 in one duplication - loss step of width at most @xmath9 .",
    "assume in this section that the parameter @xmath20 is fixed . throughout this section ,",
    "when referring to a duplication - loss step , we always mean duplication - loss step of width @xmath9 , except when otherwise explicitly stated .",
    "it is easily noticed that any permutation of @xmath90 can not have more than one descent .",
    "conversly , any permutation of size at most @xmath9 having exactly one descent belongs to @xmath90 .",
    "although it is a technical point of importance in the proof of theorem [ thm : one - step ] , the following proposition comes straightforward :    the permutations of size @xmath67 that do not belong to @xmath90 and having exactly one descent are exactly those of @xmath66 with one descent that do not start with @xmath19 nor end with @xmath67 .",
    "[ prop : one - step - sizek+1 ]    let @xmath91 be a permutation of size @xmath67 that does not belong to @xmath90 but has exactly one descent .",
    "now , if @xmath92 , then @xmath93 is a permutation ( of @xmath94 ) of size @xmath9 having one descent , and therefore @xmath95 can be obtained from @xmath96 in one duplication - loss step .",
    "applying the same transformation to @xmath97 will then produce @xmath34 , contradicting that @xmath98 .",
    "the same reasoning holds when @xmath99 .",
    "so @xmath34 does not start with @xmath19 nor end with @xmath67 .",
    "now if @xmath34 is a permutation of size @xmath67 having exactly one descent , that does not start with @xmath19 nor end with @xmath67 , we claim that @xmath34 can not be obtained from @xmath100 in one duplication - loss step .",
    "this is because no duplication - loss step of width @xmath9 can move both @xmath19 and @xmath67 in @xmath100 .",
    "the class @xmath90 of permutations obtained from @xmath101 ( for some @xmath102 ) in one duplication - loss step of width @xmath9 is a class @xmath103 of pattern - avoiding permutations whose basis @xmath63 is composed of @xmath68 patterns of size at most @xmath67 .",
    "namely @xmath64 , @xmath65 being the set of all permutations of @xmath66 that do not start with @xmath19 nor end with @xmath67 , and containing exactly one descent .",
    "[ thm : one - step ]    @xmath104 + @xmath105 [ ex : thm - one - step ]    we prove the reversed statement : @xmath106 if and only if @xmath34 can not be obtained from an identity permutation in one duplication - loss step of width @xmath9 .",
    "assume @xmath106 .",
    "then there exists @xmath107 such that @xmath108 . if @xmath109 , @xmath110 or @xmath111 , then @xmath34 has at least @xmath25 descents and can not be obtained in one duplication - loss step",
    "otherwise , using proposition [ prop : one - step - sizek+1 ] , there exists @xmath112 such that @xmath113 and @xmath114 .",
    "now if @xmath34 could be obtained in one duplication - loss step , then so would be @xmath115 , yielding a contradiction .",
    "so @xmath98 .",
    "conversly , assume that @xmath98 .",
    "if @xmath34 contains at least @xmath25 descents , then @xmath34 contains an occurrence of @xmath116 or @xmath110 or @xmath111 , since these three are the minimal permutations ( in the sense of the relation @xmath84 ) with @xmath25 descents . and",
    "consequently , @xmath106 .",
    "thus we may assume that @xmath34 has exactly one descent .",
    "we decompose @xmath32 into @xmath117 , where @xmath118 is a permutation of the set @xmath119 that does not start with @xmath120 nor end with @xmath121 , and contains exactly one descent .",
    "this decomposition is shown in figure [ fig : proof - thm - one - step ] .",
    "we denote by @xmath122 the size of @xmath118 . since @xmath98 ,",
    "necessarily @xmath123 or we would get a contradiction .",
    "if @xmath124 , we get that @xmath118 is an occurrence of some pattern of @xmath125 in @xmath34 . as a consequence , @xmath106",
    "what is left to prove is that this extends to the case @xmath126 .",
    "we just need to show that we can remove elements in @xmath118 without violating any of the properties below :    * the permutation does not start with its smallest element * the permutation does not end with its greatest element * the permutation has exactly one descent    until we get a permutation of size @xmath67 .",
    "at that point @xmath118 contains an occurrence of a pattern in @xmath65 , and so does @xmath34 , and we get that @xmath106 .",
    "now , because of the conditions on @xmath118 , the only descent in @xmath118 necessarily goes from the greatest to the smallest element in @xmath118 , ensuring that it is possible to remove elements without violating any of the properties above ( see figure [ fig : proof - thm - one - step ] ) .",
    "( -4,0)(25,11 ) ( 4,10)decomposition of @xmath34 ( 0,0)(8,0 ) ( 0,0)(0,8 ) ( 8,8)(8,0 ) ( 8,8)(0,8 ) ( 0,3.5)(8,3.5 ) ( 0,5.5)(8,5.5 ) ( 3.5,0)(3.5,8 ) ( 5.5,0)(5.5,8 ) ( 0.5,0.5)0.3 ( 1,1)0.3 ( 1.5,1.5 ) .",
    "( 2.5,2.5 ) .",
    "( 3,3)0.3 ( 0.5,-0.5)@xmath19 ( 1,-0.5)@xmath25 ( 1.8,-0.5)@xmath127 ( 3,-0.5)@xmath128 ( 4.2,5)0.3 ( 4.7,4)0.3 ( 3.6,3.6)(4.2,5 ) ( 4.2,5)(4.7,4 ) ( 4.7,4)(5.4,5.4 ) ( 4.5,-0.5)@xmath118 ( 6,6)0.3 ( 6.5,6.5 ) .",
    "( 7.5,7.5)0.3 ( 6,-0.5)@xmath129 ( 6.9,-0.5)@xmath127 ( 7.7,-0.5)@xmath12 ( 19,10)shape of @xmath118 ( 16,1)(22,1 ) ( 16,1)(16,7 ) ( 22,7)(22,1 ) ( 22,7)(16,7 ) ( 18,1)(18,7 ) ( 18.8,1)(18.8,7 ) ( 19.6,1)(19.6,7 ) ( 16,1.8)(22,1.8 ) ( 16,6.2)(22,6.2 ) ( 19.2,1.4)0.3 ( 18.4,6.6)0.3 ( 16.1,2.1)(17.9,5.9 ) ( 19.2,1.4)(18.4,6.6 ) ( 19.7,2.1)(21.9,5.9 )      as for the case of @xmath72 in section [ section : one - step ] , we prove ( theorem [ thm : p - steps ] ) in this section that the class @xmath60 of all permutations obtained from an identity permutation after @xmath8 duplication - loss steps of width at most @xmath9 is a class of pattern - avoiding permutations .",
    "however , we do not get a precise description of the basis of this class , but only an upper bound on the size of the excluded patterns . as in the previous section ,",
    "when referring to a duplication - loss step , we always mean duplication - loss step of width @xmath9 , except when otherwise explicitely stated .    to prove the announced result",
    ", we will need a few more notations and technical lemmas .",
    "the _ vector _ from @xmath37 to @xmath130 in a permutation @xmath34 consists of all elements whose positions lie between the positions of @xmath37 and @xmath130 , @xmath37 and @xmath130 being included .",
    "the _ size _ of a vector is the number of elements in it .",
    "for example , the vector from @xmath30 to @xmath25 in the permutation @xmath131 is @xmath132 , and has size @xmath27 .",
    "let @xmath34 be a permutation of @xmath10 .",
    "the _ value - position vector associated with @xmath39 $ ] _ ( _ @xmath133-vector _ for short ) is the vector of @xmath34 going from @xmath37 to @xmath36 , if @xmath37 is not a fixpoint of @xmath34 . in the case",
    "@xmath134 , the @xmath133-vector associated with @xmath37 is empty .",
    "[ def : vp - vector ]    it should appear in this definition that the @xmath133-vector associated with @xmath37 , going from the element of @xmath34 which has value @xmath37 to the element of @xmath34 at position @xmath37 , represents the necessary move for @xmath37 to reach its position in the sorted permutation @xmath61 . as it can be seen on figure [ fig : vp - vectors ] , on the graphical representation of permutations used throughout the paper , the @xmath133-vector associated with @xmath37 is an arrow going horizontally from the element at ordinate @xmath37 to the diagonal .    we can also notice that a non - empty @xmath133-vector contains at least two elements .    to take into account all the moves necessary to sort @xmath34 to @xmath101",
    ", it is convenient to introduce the _ value - position domain _ :    let @xmath34 be a permutation of @xmath10 .",
    "the _ value - position domain _ of @xmath34 ( _ @xmath133-domain _ for short ) is composed of all elements of @xmath34 appearing in at least one @xmath133-vector . [ def : vp - domain ]    these two definitions are illustrated on figure [ fig : vp - vectors ] .",
    "( -4,0)(23,10 ) ( -1,7.5)@xmath135 ( 1,7.5)@xmath27 ( 2,7.5)@xmath19 ( 3,7.5)@xmath25 ( 4,7.5)@xmath26 ( 5,7.5)@xmath28 ( 6,7.5)@xmath30 ( 7,7.5)@xmath29 ( 2.2,6.5)(0.8,6.5 ) ( 3.2,6)(1.8,6 ) ( 4.2,5.5)(2.8,5.5 ) ( 0.8,5)(4.2,5 ) ( 7.2,6.5)(5.8,6.5 ) ( 5.8,6)(7.2,6 )    ( 3,3)@xmath133-domain of @xmath136 ( 4,1.5)@xmath137 ( 15,1)(22,8 ) ( 15,1)(16,2 ) ( 16,2)(17,3 ) ( 17,3)(18,4 ) ( 18,4)(19,5 ) ( 19,5)(20,6 ) ( 20,6)(21,7 ) ( 21,7)(22,8 ) ( 16.5,1.5)(15.2,1.5 ) ( 17.5,2.5)(16.2,2.5 ) ( 18.5,3.5)(17.2,3.5 ) ( 15.5,4.5)(18.8,4.5 ) ( 21.5,6.5)(20.2,6.5 ) ( 20.5,7.5)(21.8,7.5 ) ( 15.5,4.5)0.3 ( 16.5,1.5)0.3 ( 17.5,2.5)0.3 ( 18.5,3.5)0.3 ( 19.5,5.5)0.3 ( 20.5,7.5)0.3 ( 21.5,6.5)0.3    now , observe that for any permutation , the @xmath133-vectors are reversible in the sense that reversing all the arrows will give a set of vectors that represent the moves of elements that are necessary to `` unsort '' @xmath101 into @xmath34 .",
    "it is easily seen from definitions [ def : vp - vector ] and [ def : vp - domain ] and this remark that for any permutation @xmath138 , any element belonging to the @xmath133-domain of @xmath34 also belongs to at least one of the duplication - loss steps used to obtain @xmath34 from @xmath101 .",
    "consequently , the @xmath133-domain of @xmath34 contains at most @xmath139 elements .",
    "consider a permutation @xmath34 , and the permutation @xmath140 obtained from @xmath34 by the removal of some element @xmath130 .",
    "then for any element @xmath141 such that @xmath142 , either this element becomes a fixpoint in @xmath140 or the size of the @xmath133-vector associated with this element in @xmath140 remains constant , is increased of 1 or is diminished of 1 with respect to the size of the @xmath133-vector associated with @xmath37 in @xmath34 .",
    "[ lem : vp - vector - unchanged ]    it is easily seen on the graphical representation of @xmath34 .",
    "any element that does not lie just above or just below the diagonal can not become a fixpoint when removing an element @xmath130 . for",
    "elements that do not becom fixpoints , the horizontal distance to the diagonal can only change of @xmath143 , @xmath19 or @xmath144 when removing some element @xmath130 ( see figure [ fig : vp - vector - unchanged ] ) .",
    "( -2,-2)(40,12 ) ( 0,0)(8,8 ) ( 0,0)(1,1 ) ( 1,1)(2,2 ) ( 2,2)(3,3 ) ( 3,3)(4,4 ) ( 4,4)(5,5 ) ( 5,5)(6,6 ) ( 6,6)(7,7 ) ( 7,7)(8,8 ) ( 2,-1)(2,9 ) ( 3,-1)(3,9 ) ( -1,6)(9,6 ) ( -1,7)(9,7 ) ( 2.5,6.5)0.3 ( -1.5,6.5)@xmath130 ( 3,2)(4,3 ) ( 4,3)(5,4 ) ( 5,4)(6,5 ) ( 6,5)(7,6 ) ( 3,4)(4,5 ) ( 3,5)(4,6 ) ( 4,5)(5,6 ) ( 0,7)(1,8 ) ( 1,7)(2,8 ) ( 3,0)(4,1 ) ( 4,0)(5,1 ) ( 5,0)(6,1 ) ( 6,0)(7,1 ) ( 7,0)(8,1 ) ( 3,1)(4,2 ) ( 4,1)(5,2 ) ( 5,1)(6,2 ) ( 6,1)(7,2 ) ( 7,1)(8,2 ) ( 4,2)(5,3 ) ( 5,2)(6,3 ) ( 6,2)(7,3 ) ( 7,2)(8,3 ) ( 5,3)(6,4 ) ( 6,3)(7,4 ) ( 7,3)(8,4 ) ( 6,4)(7,5 ) ( 7,4)(8,5 ) ( 7,5)(8,6 ) ( 6.5,2.5)(5.5,2.5 ) ( 4.5,5.5)(3.5,5.5 ) ( 0.5,7.5)(0.5,6.5 ) ( 5.5,7.5)(4.5,6.5 ) ( 1.5,0.5)0.15 ( 0.5,3.5)0.15 ( 14,0)(22,8 ) ( 14,0)(15,1 ) ( 15,1)(16,2 ) ( 16,2)(17,3 ) ( 17,3)(18,4 ) ( 18,4)(19,5 ) ( 19,5)(20,6 ) ( 20,6)(21,7 ) ( 21,7)(22,8 ) ( 19,-1)(19,9 ) ( 20,-1)(20,9 ) ( 13,2)(23,2 ) ( 13,3)(23,3 ) ( 19.5,2.5)0.3 ( 12.5,2.5)@xmath130 ( 16,3)(17,4 ) ( 17,4)(18,5 ) ( 18,5)(19,6 ) ( 18,3)(19,4 ) ( 20,0)(21,1 ) ( 21,0)(22,1 ) ( 20,1)(21,2 ) ( 21,1)(22,2 ) ( 14,7)(15,8 ) ( 15,7)(16,8 ) ( 16,7)(17,8 ) ( 17,7)(18,8 ) ( 18,7)(19,8 ) ( 14,6)(15,7 ) ( 15,6)(16,7 ) ( 16,6)(17,7 ) ( 17,6)(18,7 ) ( 18,6)(19,7 ) ( 14,5)(15,6 ) ( 15,5)(16,6 ) ( 16,5)(17,6 ) ( 17,5)(18,6 ) ( 14,4)(15,5 ) ( 15,4)(16,5 ) ( 16,4)(17,5 ) ( 14,3)(15,4 ) ( 15,3)(16,4 ) ( 21.5,0.5)(20.5,0.5 ) ( 18.5,3.5)(18.5,2.5 ) ( 15.5,6.5)(15.5,5.5 ) ( 21.5,5.5)(20.5,4.5 ) ( 20.5,7.5)(19.5,6.5 ) ( 14.5,1.5)0.15 ( 16.5,0.5)0.15 ( 26,8)(27,9 ) ( 30.9,8.3)diagonal ( 26,6)(27,7 ) ( 33.7,6.3)candidate fixpoints ( 26,5)(27,5 ) ( 26.5,4.3)0.15 ( 30.8,4.8)changes ( 33,3.8)in the @xmath133-vectors ( 33,2.1)variation of the distance ( 33,1.1)to the diagonal ( 26,-0.5)(27,0.5 ) ( 28.2,-0.2)@xmath143 ( 29.7,-0.5)(30.7,0.5 ) ( 32.2,-0.2)@xmath145 ( 33.7,-0.5)(34.7,0.5 ) ( 36.2,-0.2)@xmath144    for any permutation @xmath34 , there is at least one element @xmath130 such that the permutation @xmath140 obtained from @xmath34 by the removal of @xmath130 contains at most one more fixpoint than @xmath34 .",
    "[ lem : one - fixpoint ]    it is convenient to introduce the _ quasi - diagonal elements _ of @xmath34 , defined as follows .",
    "@xmath37 is a quasi - diagonal element of @xmath34 if @xmath146 or @xmath147 .",
    "these two cases correspond respectively to elements of @xmath34 lying just above or just below the diagonal in the graphical representation of @xmath34 .",
    "any element of @xmath34 that may become a fixpoint in @xmath140 is necessarily a quasi - diagonal element .",
    "if there is no quasi - diagonal element , then we can remove any element @xmath130 to obtain a permutation @xmath140 that does not have more fixpoints than @xmath34 .",
    "if there are some , then we pick @xmath130 among the quasi - diagonal elements . we claim that at most one fixpoint is create while removing @xmath130 .",
    "the argument is simple .",
    "suppose @xmath130 is such that @xmath148 , the other case being similar .",
    "then the only fixpoint that may appear is @xmath149 , if @xmath150 .",
    "this should appear clearly on figure [ fig : one - fixpoint ] .",
    "( -2,-2)(30,7 ) ( 0,0)(5,5 ) ( 0,0)(1,1 ) ( 1,1)(2,2 ) ( 2,2)(3,3 ) ( 3,3)(4,4 ) ( 4,4)(5,5 ) ( 2.5,3.5)0.3 ( 2,-1)(2,6 ) ( 3,-1)(3,6 ) ( -1,3)(6,3 ) ( -1,4)(6,4 ) ( 3,2)(4,3 ) ( 8,0)(13,5 ) ( 8,0)(9,1 ) ( 9,1)(10,2 ) ( 10,2)(11,3 ) ( 11,3)(12,4 ) ( 12,4)(13,5 ) ( 10.5,1.5)0.3 ( 10,-1)(10,6 ) ( 11,-1)(11,6 ) ( 7,1)(14,1 ) ( 7,2)(14,2 ) ( 9,2)(10,3 ) ( 16,4)(17,5 ) ( 20.9,4.3)diagonal ( 16.5,2.5)0.3 ( 23.4,2.3)removed element ( 16,0)(17,1 ) ( 23.7,0.3)candidate fixpoint    consider a permutation @xmath151 such that for any strict pattern @xmath140 of @xmath34 , @xmath152 . then the @xmath133-domain of @xmath34 is of size at most @xmath153 .",
    "[ lem : bounded - vp - domain ]    by lemma [ lem : one - fixpoint ] , we can choose some @xmath154 with @xmath155 and such that @xmath140 has at most one more fixpoint than @xmath34 .",
    "call @xmath130 the element deleted in @xmath34 to obtain @xmath140 . by a previous remark , since @xmath152 ,",
    "the @xmath133-domain of @xmath140 is of size at most @xmath139 , and is therefore composed of at most @xmath139 @xmath133-vectors .",
    "each of these @xmath133-vectors in @xmath140 yields a @xmath133-vector in @xmath34 , whose size is smaller or equal or possibly increased by @xmath19 .",
    "let us denote by @xmath156 the set of @xmath133-vectors of @xmath34 obtained from a @xmath133-vector of @xmath140 .",
    "then the number of elements of @xmath34 that belong to a @xmath133-vector of @xmath156 is at most @xmath157 .",
    "however @xmath156 is not yet the @xmath133-domain of @xmath34 .",
    "we must complete it with up to two @xmath133-vectors : the one associated with the element @xmath130 deleted , and the one associated with the fixpoint of @xmath140 that was not a fixpoint in @xmath34 , if such a point exists .",
    "if such an element exists , then it is a quasi - diagonal element in @xmath34 and its @xmath133-vector ( denoted @xmath158 ) in @xmath34 is necessarily of size @xmath25 , so that @xmath159 has total size at most @xmath153 .",
    "now it is easily observed that any element of @xmath34 belonging to one @xmath133-vector necessarily belongs to at least two @xmath133-vectors ( this can be seen as a `` balance condition '' ) .",
    "consequently , all the elements of the @xmath133-vector associated with @xmath130 are already covered by a vector of @xmath159 , so that the @xmath133-domain of @xmath34 is exactly the set of elements covered by @xmath159 .",
    "therefore , its size is at most @xmath153 .    consider a permutation @xmath151 of size @xmath160 such that for any strict pattern @xmath140 of @xmath34 , @xmath152",
    ". then @xmath34 is of the form @xmath161 with @xmath162 a permutation of @xmath163 $ ] and @xmath164 a permutation of @xmath165 $ ] .",
    "it is possible that @xmath162 or @xmath164 is empty .",
    "[ lem : nearly - sorted - pi ]    by lemma [ lem : bounded - vp - domain ] , the @xmath133-domain of @xmath34 is of size at most @xmath153 .",
    "we can decompose @xmath34 into _ free windows _ of consecutive elements outside the @xmath133-domain of @xmath34 , separated by windows of consecutive elements of the @xmath133-domain .",
    "now , there are at most @xmath166 windows of consecutive elements of the @xmath133-domain , and consequently , there are at most @xmath167 free windows in @xmath34 . since @xmath34 is of size @xmath168 , at least one of the free windows of @xmath34 has size strictly greater than @xmath139 , _",
    "i.e. , _ contains at least @xmath166 elements . by definition",
    ", these elements do not belong to the @xmath133-domain of @xmath34 , and hence they allow the decomposition of @xmath34 into @xmath161 with @xmath162 a permutation of @xmath163 $ ] and @xmath164 a permutation of @xmath165 $ ] .",
    "figure [ fig : nearly - sorted - pi ] represent the decomposition of @xmath34 used in this proof .",
    "( -1.2,-3)(16,3 ) ( -1.2,0.3)@xmath135 ( 1.5,0)(2,1 ) ( 4,0)(7,1 ) ( 8.5,0)(9.5,1 ) ( 12.5,0)(14.5,1 ) ( 0,0)(15,1 ) ( 1.75,1.1)(7.35,2.3 ) ( 5.5,1.1)(7.45,2.3 ) ( 9,1.1)(7.55,2.3 ) ( 13.5,1.1)(7.65,2.3 ) ( 7.5,3)at most @xmath166 @xmath133-windows ( 0.75,-0.1)(7.3,-2.3 ) ( 3,-0.1)(7.4,-2.3 ) ( 7.75,-0.1)(7.5,-2.3 ) ( 11,-0.1)(7.6,-2.3 ) ( 14.75,-0.1)(7.7,-2.3 ) ( 7.5,-3)at most @xmath167 free - windows    consider a permutation @xmath169 where @xmath170 is a permutation of @xmath171 $ ] . if @xmath34 is obtainable after @xmath8 duplication steps of size at most @xmath9 then @xmath34 is obtainable after @xmath8 duplication steps of size at most @xmath9 such that the duplicated window for each step does not intersect [ lem : localisation ]    the key idea is to consider the first sequence @xmath172 of duplication - loss steps and create a new sequence @xmath173 such that :    * each step @xmath174 concerns only elements of @xmath175 $ ] . * after every step @xmath174 , the elements @xmath176 are in the same order than after performing steps @xmath177 .",
    "then the proof is by induction on the number of steps .",
    "if there is only one step then the proof is straighforward .",
    "suppose now that the above statement is true until @xmath178 steps .",
    "then for the last step , we use our hypothesis for @xmath178 so that we have operations @xmath179 respecting the above conditions . for @xmath180 , only notice that the elements of @xmath171 $ ] involved in @xmath181 are also in a window of size @xmath9 in the permutation obtained after @xmath182 and in the same relative order by our induction hypothesis which proves the existence of @xmath180 .    using these lemmas , we state and",
    "prove a key proposition :    consider a permutation @xmath151 .",
    "then either @xmath34 is of size at most @xmath69 , or there exists a strict pattern @xmath140 of @xmath34 that does not belong to @xmath60 .",
    "[ prop : p - steps ]    consider a permutation @xmath151 such that any strict pattern @xmath140 of @xmath34 belongs to @xmath60 .",
    "we want to show that @xmath34 is of size @xmath183 .",
    "let us assume the contrary . by lemma [ lem : nearly - sorted - pi ] , there exist @xmath39 $ ] , @xmath162 a permutation of @xmath163 $ ] and @xmath164 a permutation of @xmath165 $ ] such that @xmath161 .",
    "let us denote @xmath118 the permutation @xmath184 , where @xmath185 is the permutation of @xmath186 $ ] obtained from @xmath164 by subtracting @xmath19 to every element of @xmath164 .",
    "@xmath118 is a strict pattern of @xmath34 , hence @xmath187 .",
    "consider a shortest sequence of duplication - loss steps of width at most @xmath9 that produces @xmath118 from @xmath188 .",
    "this sequence has at most @xmath8 steps , each of width at most @xmath9 .",
    "it implies that the total distance crossed by the elements that are duplicated is at most @xmath139 .",
    "consequently , it is not possible to bring an element of @xmath162 and an element of @xmath189 in two consecutive positions .",
    "so it is necessary that the duplication - loss steps of the scenario we consider are _ internal _ to @xmath162 and @xmath189 .",
    "we can reproduce these steps in @xmath162 and @xmath164 to obtain @xmath34 from @xmath61 in at most @xmath8 duplication - loss steps of width at most @xmath9 , contradicting that @xmath151 .",
    "it is then quite easy to prove theorem [ thm : p - steps ] :    the class @xmath60 of all permutations obtained from an identity permutation after @xmath8 duplication - loss steps of width at most @xmath9 is a class of pattern - avoiding permutations whose basis is finite and contains only patterns of size at most @xmath69 .",
    "[ thm : p - steps ]    we set @xmath190 and show that @xmath191 .",
    "consider @xmath151 .",
    "if @xmath192 , then @xmath193 and @xmath106 . otherwise , if @xmath194 , then by proposition [ prop : p - steps ] , there exists a strict pattern @xmath140 of @xmath34 that does not belong to @xmath60 .",
    "reasoning by induction on the size of the permutations , we deduce from @xmath195 that @xmath196 .",
    "a direct consequence is that @xmath106 .",
    "this proves that @xmath197 .",
    "conversely , consider @xmath138 .",
    "then any pattern @xmath140 of @xmath34 is also obtainable from an identity permutation in at most @xmath8 steps of width at most @xmath9 ( using the sequence of duplication - loss steps associated with @xmath34 ) , _",
    "i.e. , _ @xmath152 . then @xmath34 does not contain an occurrence of any pattern of @xmath63 , _",
    "i.e. , _ @xmath198 .",
    "this shows that @xmath199 , ending the proof of the theorem .",
    "the _ whole genome duplication - random loss _ model is studied in @xcite , and the authors describe a method to compute an optimal duplication - loss scenario , _",
    "i.e. , _ a scenario of duplications ( of the whole genome in this case ) and losses whose number of steps is minimal .",
    "our model with bounded size duplication operations reduces to the _ whole genome duplication - random loss _",
    "case when @xmath200 and thus to a radix - sort algorithm as shown in @xcite and to a bubble - sort when @xmath201 .",
    "thus we give some algorithm whose complexity matches the two extremal cases and shows some continuity between the two sorting algorithms .",
    "it is worth noticing that any scenario in our model can be viewed as a whole genome duplication - random loss scenario .",
    "consequently , the number of steps of an optimal whole genome duplication - random loss scenario is a lower bound to the number of steps of an optimal scenario in our duplication - loss model .",
    "it is also easy to see that , when considering permutations of size at most @xmath9 , our model and the whole genome duplication - random loss model coincide .",
    "indeed , we will use for our purpose the procedure of @xcite , which is given in algorithm [ alg : binary ] .",
    "we omit the proof of correctness and optimality of this algorithm .",
    "see @xcite for details .    in order to examine every bit of the labels given to the elements of @xmath202 $ ] , the number of steps in the loop on line 4 is @xmath203number of maximal increasing substrings of @xmath204 .",
    "a consequence is that the number of steps in an optimal whole genome duplication - random loss scenario from @xmath101 to @xmath34 is @xmath205 in the worst case and on average ( see equation ( [ eq : log - average ] ) for the average case ) .",
    "note that the same algorithm can be used to compute an optimal whole genome duplication - random loss scenario from @xmath206 , with @xmath4 and @xmath207 , to any permutation of @xmath208 .      in this section ,",
    "we provide an algorithm that computes , for any permutation @xmath32 in input , a possible scenario of duplications and losses to obtain @xmath34 from @xmath101 .",
    "we will restrict ourselves to duplication - loss steps of width at most @xmath9 , so that the number of duplication - loss steps corresponds to the cost of the scenario in our cost model .",
    "we are interested in the number of duplication - loss steps of the scenario produced by the algorithm , in the worst case , and on average .",
    "it provides an upper bound on the number of duplication - loss steps that are necessary to obtain a permutation .",
    "the algorithm we use is described in algorithm [ alg : bucket ] .",
    "a few keys to understand algorithm [ alg : bucket ] are the following remarks .",
    "the set @xmath209 of values defined at line 3 represents the rightmost @xmath210 elements of @xmath34 not yet examined .",
    "the algorithm consists in two different loops , the first one corresponding to lines @xmath25 to @xmath28 of the algorithm and the second one from line @xmath29 to @xmath31 . at the end of the first loop ( line 5 )",
    ", @xmath41 is decomposed into windows of width @xmath211 ( except the leftmost one which is of width at most @xmath9 ) ; and each of these windows is an increasing sequence containing exactly the same elements as the window of @xmath34 corresponding to the same indices . in the second loop , we consider these windows from right to left and since there are of width less than @xmath9 , we can call algorithm [ alg : binary ] ( that implements whole genome duplication - random loss ) on each window successively to transform @xmath41 into @xmath34 .",
    "an example is given with @xmath212 and @xmath213 .",
    "we first cut @xmath34 in chunks of size @xmath214 and obtain @xmath215 .",
    "then the first loop of the algorithm ( step @xmath25 to @xmath28 ) starts from @xmath216 and takes the elements in increasing order to the same chunk the belong to in @xmath34 .",
    "this gives @xmath217 .",
    "then the second loop sorts each chunk separately to obtain @xmath34 using the radix sort algorithm [ alg : binary ] introduced in @xcite .",
    "notice here that we use in the second loop ( except for the leftmost window ) only duplication - loss steps of width @xmath211 .",
    "an improvement we considered is to use whole genome duplication - random loss scenarios on windows of width @xmath9 , that are nonetheless increasing sequences .",
    "unfortunately , we were not able to analyse how many duplication - loss steps there are in a scenario produced by such an algorithm .",
    "we now analyse the number of steps of the scenario produced by algorithm [ alg : bucket ] .",
    "the number of duplication - loss steps of a scenario produced by algorithm [ alg : bucket ] on a permutation of size @xmath12 is at most @xmath70 asymptotically . [",
    "prop : worst - case - upper - bound ]    suppose we are at iteration @xmath37 of the first loop .",
    "we have to move the @xmath211 elements of @xmath209 to their positions ( from @xmath218 to @xmath219 ) by duplication - loss steps of width at most @xmath9 .",
    "the worst situation is when the elements of @xmath209 are at the begining of @xmath41 .",
    "but in this case , we can move to the right the elements of @xmath209 by @xmath220 positions at every duplication - loss step , until they reach their position .",
    "the total number of duplication - loss steps in this first process is then at most @xmath221    consider now the second loop of algorithm [ alg : bucket ] . in each window of size",
    "@xmath211 , it performs at most @xmath222 duplication - loss steps ( line 7 ) and in the leftmost window ( line 9 ) , at most @xmath223 by the result of @xcite .",
    "consequently the number of duplication - loss steps produced by the second loop is @xmath224 we finally get that the total number of duplication - loss steps in a scenario produced by algorithm [ alg : bucket ] is at most @xmath70 asymptotically in the worst case .",
    "it is easily noticed that this worst case corresponds to the _ reversed identity _",
    "permutation @xmath225 .",
    "this corresponds to our intuition of a worst case situation in this context .",
    "we can also notice that @xmath226 for `` small '' values of @xmath9 , namely as long as @xmath227 .",
    "if on the contrary @xmath228 then @xmath229 .",
    "when @xmath230 , the two terms are of the same order .",
    "we can also compute the average number of duplication - loss steps of a scenario produced by algorithm [ alg : bucket ] .",
    "the number of duplication - loss steps of a scenario produced by algorithm [ alg : bucket ] on a permutation of size @xmath12 is on average @xmath231 asymptotically .",
    "[ prop : average - upper - bound ]    first , we introduce a few notations .",
    "consider @xmath34 a permutation of size @xmath12 , and decompose it from right to left into @xmath232 windows of width @xmath211 , except the leftmost one , whose width is @xmath233 .",
    "we denote @xmath234 this decomposition .",
    "now , let us denote @xmath235 the number of duplication - loss steps produced in the first loop of algorithm [ alg : bucket ] on @xmath34 . and in particular , we denote @xmath236 the number of such steps produced by the first iteration of this loop , _ i.e. _ , the number of steps to move the elements of @xmath237 at the end of the permutation . for computing the average number of such steps , we consider @xmath238 .",
    "it is simple to conceive that @xmath239 let us focus on @xmath240 .",
    "figure [ fig : min ] should convince the reader that @xmath241    ( 0,-3)(30,5 ) ( 1,0)@xmath135 ( 3,-0.5)(18,-0.5 ) ( 3,1)(18,1 ) ( 3,-0.5)(3,1 ) ( 18,-0.5)(18,1 ) ( 15,-0.5)(15,1 ) ( 15.5,1.5)(9,1.5 ) ( 16.5,2)(7,2 ) ( 17.5,2.5)(13,2.5 ) ( 12,3)@xmath133-vectors ( 7,0.2)0.3 ( 0,-1.5)positions : ( 3.2,-1.5)@xmath19 ( 4.,-1.5)@xmath25 ( 5.5,-1.5)@xmath127 ( 8.5,-1.5)@xmath242 ( 12,-1.5)@xmath127 ( 17.5,-1.5)@xmath12 ( 15,-0.5)(18,1 ) ( 25,-2.5)@xmath211 rightmost positions ( 22.5,-1.5)(16,0.5 ) ( 7,4)(18,4 ) ( 12,4.5)@xmath243 elements ( 7,4)(7,0.5 ) ( 18,4)(18,0.5 )    now , we can notice that the number of permutations @xmath34 of size @xmath12 such that @xmath244 is @xmath245 . this yields @xmath246 consequently , @xmath247 giving after a few computations @xmath248 therefore , we consider two sequences @xmath249 and @xmath250 satisfying the relations @xmath251 and @xmath252 respectively if @xmath253 , and @xmath254 for any @xmath255",
    ". then we have @xmath256 .",
    "we can solve the recurrence equations for @xmath257 and @xmath258 ; and if we write @xmath259 ( then @xmath260 ) , we get : @xmath261 and @xmath262 consequently , the average number of duplication - loss steps produced by the first loop of algorithm [ alg : bucket ] on permutations of size @xmath12 is @xmath263 .",
    "what is left to compute is the average number of duplication - loss steps produced by the second loop of algorithm [ alg : bucket ] on permutations of size @xmath12 .",
    "this number is given by @xmath264    since @xmath265 , we deduce that the average number of duplication - loss steps produced by the second loop of algorithm [ alg : bucket ] on permutations of size @xmath12 is @xmath266 .",
    "hence we focus on the computation of @xmath267 for @xmath268 . by concavity of the @xmath269 function , since @xmath270 , we get that @xmath271 moreover , it is clear that @xmath272 so that we deduce that @xmath273    consequently , the average number of duplication - loss steps produced by the second loop of algorithm [ alg : bucket ] on permutations of size @xmath12 is @xmath274 .",
    "finally , we end the proof concluding that the total number of duplication - loss steps in a scenario produced by algorithm [ alg : bucket ] on a permutation of size @xmath12 is @xmath275 on average .",
    "it is possible to provide very simple lower bounds on the number of duplication - loss steps necessary to obtain a permutation .",
    "these lower bounds are given and proved in propositions [ prop : worst - case - lower - bound ] and [ prop : average - lower - bound ] below .",
    "they are tight in most cases , however not in any case .",
    "indeed the upper and lower bounds coincide up to a constant factor whenever @xmath9 is a constant , or when @xmath21 , except when @xmath276 .    in the worst case , @xmath71 duplication - loss steps of width @xmath9",
    "are necessary to obtain a permutation of @xmath10 from @xmath277 .",
    "[ prop : worst - case - lower - bound ]    let us consider first the number of inversions in a permutation that can create a duplication - loss step @xmath278 of width @xmath9 .",
    "it is easily seen that these new inversions can only involve two elements of @xmath278 .",
    "call @xmath37 the number of elements of @xmath278 that are kept in the first copy",
    ". then the maximum number of inversions that can be created by @xmath278 is @xmath279 .",
    "now , a permutation @xmath32 has up to @xmath280 inversions , so that at least @xmath281 duplication - loss steps are necessary to transform @xmath277 into @xmath34 .    to get the other term of the lower bound",
    ", we just refer to the result of @xcite recalled at the beginning of this section , namely that @xmath282 steps are necessary in the worst case in the whole genome duplication - random loss model , in which duplication - loss operation are less restricted .",
    "finally , we get a lower bound of @xmath283 necessary duplication - loss steps to obtain a permutation of @xmath10 from @xmath284 in the worst case",
    ".    on average , @xmath283 duplication - loss steps of width @xmath9 are necessary to obtain a permutation of @xmath10 from @xmath277 . [",
    "prop : average - lower - bound ]    as before , a duplication - loss step can create at most @xmath285 inversions in a permutation .",
    "but the average number of inversions in a permutation of @xmath10 is @xmath286 , so that on average at least @xmath287 duplication - loss steps are necessary to transform @xmath277 into @xmath32 .",
    "again , @xcite provides use with the @xmath288 lower bound , referring to the whole genome duplication - random loss model which is more general than ours , so that this bound applies in our context .",
    "we conclude that a lower bound on the average number of duplication - loss steps necessary to obtain a permutation of @xmath10 from @xmath284 is @xmath283 .",
    "we discuss the results of section [ section : algo ] on the average ( or worst case ) number of steps of width @xmath9 to obtain a permutation of size @xmath12 .",
    "it appears that we could not provide lower bounds that coincide with the upper bounds given by our algorithm , but we claim that they are tight in many cases .",
    "indeed , whenever @xmath289 , we get that @xmath290 , and consequently the upper bound can be rewritten as @xmath291 , which coincide up to a constant factor with the lower bound @xmath292 . for the case @xmath230 , the same argument holds , but the constant factor between the lower and the upper bound might be much greater . finally , if @xmath293 , then @xmath294 and @xmath295 , so that upper and lower bounds coincide again .    on the contrary ,",
    "when @xmath296 , the upper and lower bounds provided do not coincide .",
    "we leave as an open question the problem of finding an algorithm that computes a duplication - loss scenario whose number of steps is optimal ( on average and in the worst case ) up to a constant factor , when the width @xmath9 of the duplicated windows satisfies @xmath296 .",
    "several other questions are still open .",
    "first of all neither of our algorithms is optimal for a specific permutation and our results are only optimal asymptotically in average and/or in the worst case",
    ". it could be interesting to provide algorithms that produce optimal duplication - loss scenarios on any permutation @xmath34 , for @xmath21 in order to provide some continuity between the bubble sort ( corresponding to @xmath201 ) and the radix sort ( corresponding to @xmath297 ) .",
    "albert , r.e.l .",
    "aldred , m.d .",
    "atkinson , h.p .",
    "van ditmarsch , c.c .",
    "handley , d.a .",
    "hotlon , and d.j .",
    "compositions of pattern restricted sets of permutations . technical report ,",
    "university of otago , 2004 .",
    "technical report number oucs-2004 - 12 .",
    "m.c . chen and r.c.t .",
    "lee . sorting by transpositions based on the first increasing substring concept . in _",
    "bibe 04 : proceedings of the 4th ieee symposium on bioinformatics and bioengineering _",
    ", page 553 , washington , dc , usa , 2004 .",
    "ieee computer society .",
    "anthony labarre .",
    "a new tight upper bound on the transposition distance . in rita casadio and gene myers , editors , _ algorithms in bioinformatics , 5th international workshop , wabi 2005 , mallorca , spain , october 3 - 6 , 2005 , proceedings _ ,",
    "volume 3692 of _ lecture notes in computer science _ , pages 216227 .",
    "springer , 2005 ."
  ],
  "abstract_text": [
    "<S> in @xcite , chaudhuri , chen , mihaescu and rao study algorithmic properties of the _ tandem duplication - random loss model _ of genome rearrangement , well - known in evolutionary biology . in their model , </S>",
    "<S> the cost of one step of duplication - loss of width @xmath0 is @xmath1 for @xmath2 or @xmath3 . in this paper , we study a variant of this model , where the cost of one step of width @xmath0 is 1 if @xmath4 and @xmath5 if @xmath6 , for any value of the parameter @xmath7 . </S>",
    "<S> we first show that permutations obtained after @xmath8 steps of width @xmath9 define classes of pattern - avoiding permutations . </S>",
    "<S> we also compute the numbers of duplication - loss steps of width @xmath9 necessary and sufficient to obtain any permutation of @xmath10 , in the worst case and on average . in this second part </S>",
    "<S> , we may also consider the case @xmath11 , a function of the size @xmath12 of the permutation on which the duplication - loss operations are performed .    sorting , permutations , pattern </S>"
  ]
}
{
  "article_text": [
    "quantum computing provides speedups for factoring @xcite , search @xcite and many related problems .",
    "these speedups can be quite surprising .",
    "for example , grover s search algorithm @xcite solves an arbitrary exhaustive search problem with @xmath3 possibilities in time @xmath4 .",
    "classically , it is obvious that time @xmath5 would be needed .",
    "this makes lower bounds particularly important in the quantum world .",
    "if we can search in time @xmath4 , why can we not search in time @xmath6 ? ( among other things , that would have meant @xmath7 . )",
    "lower bound of bennett et al .",
    "@xcite shows that this is not possible and grover s algorithm is exactly optimal .",
    "currently , we have good lower bounds on the quantum complexity of many problems .",
    "they mainly follow by two methods : the hybrid / adversary method@xcite and the polynomials method @xcite .",
    "the polynomials method is useful for proving lower bounds both in classical @xcite and quantum complexity @xcite .",
    "it is known that    1 .   the number of queries @xmath8 needed to compute a boolean function @xmath0 by an exact quantum algorithm exactly is at least @xmath9 , where @xmath10 is the degree of the multilinear polynomial representing @xmath0 , 2 .",
    "the number of queries @xmath11 needed to compute @xmath0 by a quantum algorithm with two - sided error is at least @xmath12 , where @xmath13 is the smallest degree of a multilinear polynomial approximating @xmath0 .",
    "this reduces proving lower bounds on quantum algorithms to proving lower bounds on degree of polynomials .",
    "this is a well - studied mathematical problem with methods from approximation theory @xcite available .",
    "quantum lower bounds shown by polynomials method include a @xmath14{d(f)})$ ] relation for any total boolean function @xmath0 @xcite , lower bounds on finding mean and median @xcite , collisions and element distinctness @xcite .",
    "polynomials method is also a key part of recent @xmath15 lower bound on set disjointness which resolved a longstanding open problem in quantum communication complexity @xcite .",
    "given the usefulness of polynomials method , it is an important question how tight is the polynomials lower bound .",
    "@xcite proved that , for all total boolean functions , @xmath16 and @xmath17 .",
    "the second result was recently improved to @xmath18 @xcite .",
    "thus , the bound is tight up to polynomial factor .",
    "even stronger result would be @xmath19 or @xmath20 .",
    "then , determining the quantum complexity would be equivalent to determining the degree of a function as a polynomial .",
    "it has been an open problem to prove or disprove either of these two equalities @xcite .    in this paper",
    ", we show the first provable gap between polynomial degree and quantum complexity : @xmath21 and @xmath22 .",
    "since @xmath23 and @xmath24 , this implies a separation both between @xmath8 and @xmath10 and between @xmath11 and @xmath25 .    to prove the lower bound",
    ", we use the quantum adversary method of @xcite .",
    "the quantum adversary method runs a quantum algorithm on different inputs from some set . if every input in this set can be changed in many different ways so that the value of the function changes , many queries are needed .",
    "the previously known version of quantum adversary method gives a weaker lower bound of @xmath26 .",
    "while this already gives some gap between polynomial degree and quantum complexity , we can achieve a larger gap by using a new , more general version of the method .",
    "the new component is that we carry out this argument in a very general way .",
    "we assign individual weights to every pair of inputs and distribute each weight among the two inputs in an arbitrary way .",
    "this allows us to obtain better bounds than with the previous versions of the quantum adversary method .",
    "we apply the new lower bound theorem to three functions for which deterministic query complexity is significantly higher than polynomial degree .",
    "the result is that , for all of those functions , quantum query complexity is higher than polynomial degree .",
    "the biggest gap is polynomial degree @xmath27 and query complexity @xmath28 .",
    "spalek and szegedy @xcite have recently shown that our method is equivalent to two other methods , the spectral method of @xcite that was known prior to our work and the kolmogorov complexity method of @xcite that appeared after the conference version of our paper was published .",
    "although all three methods are equivalent , they have different intuition .",
    "it appears to us that our method is the easiest to use for results in this paper .",
    "let @xmath29 $ ] denote @xmath30 .",
    "we consider computing a boolean function @xmath31 in the quantum query model ( for a survey on query model , see @xcite ) . in this model",
    ", the input bits can be accessed by queries to an oracle @xmath32 and the complexity of @xmath0 is the number of queries needed to compute @xmath0 .",
    "a quantum computation with @xmath33 queries is just a sequence of unitary transformations @xmath34    the @xmath35 s can be arbitrary unitary transformations that do not depend on the input bits @xmath36 .",
    "the @xmath37 s are query ( oracle ) transformations which depend on @xmath36 . to define @xmath37 , we represent basis states as @xmath38 where @xmath39 consists of @xmath40 bits and @xmath41 consists of all other bits .",
    "then , @xmath42 maps @xmath43 to itself and @xmath44 to @xmath45 for @xmath46 ( i.e. , we change phase depending on @xmath47 , unless @xmath48 in which case we do nothing ) .",
    "the computation starts with a state @xmath49 .",
    "then , we apply @xmath50 , @xmath42 , @xmath51 , @xmath42 , @xmath52 and measure the final state .",
    "the result of the computation is the rightmost bit of the state obtained by the measurement .",
    "the quantum computation computes @xmath0 exactly if , for every @xmath53 , the rightmost bit of @xmath54 equals @xmath55 with certainty .",
    "the quantum computation computes @xmath0 with bounded error if , for every @xmath53 , the probability that the rightmost bit of @xmath56 equals @xmath55 is at least @xmath57 for some fixed @xmath58 .",
    "@xmath8 ( @xmath11 ) denotes the minimum number @xmath33 of queries in a quantum algorithm that computes @xmath0 exactly ( with bounded error ) .",
    "@xmath59 denotes the minimum number of queries in a deterministic query algorithm computing @xmath0 .      for any boolean function @xmath0 ,",
    "there is a unique multilinear polynomial @xmath60 such that @xmath61 for all @xmath62 .",
    "we say that @xmath60 _ represents _ @xmath0 .",
    "let @xmath10 denote the degree of polynomial representing @xmath0 .",
    "a polynomial @xmath63 approximates @xmath0 if @xmath64 whenever @xmath65 and @xmath66 whenever @xmath67 .",
    "let @xmath13 denote the minimum degree of a polynomial approximating @xmath0 .",
    "it is known that    @xcite    1 .",
    "@xmath68 ; 2 .",
    "@xmath69 ;    this theorem has been a source of many lower bounds on quantum algorithms @xcite .",
    "two other relevant quantities are _ sensitivity _ and _ block sensitivity_. the sensitivity of @xmath0 on input @xmath53 is just the number of @xmath70 $ ] such that changing the value of @xmath47 changes the value of @xmath0 : @xmath71 we denote it @xmath72 .",
    "the sensitivity of @xmath0 is the maximum of @xmath72 over all @xmath73 .",
    "we denote it @xmath74 .",
    "the block sensitivity is a similar quantity in which we flip sets of variables instead of single variables . for @xmath53 and @xmath75 $ ] , let @xmath76 be the input @xmath77 in which @xmath78 if @xmath79 and @xmath80 if @xmath81 .",
    "the block sensitivity of @xmath0 on an input @xmath82 ( denoted @xmath83 ) is the maximum number @xmath84 of pairwise disjoint @xmath85 , @xmath51 , @xmath86 such that @xmath87 .",
    "the block sensitivity of @xmath0 is the maximum of @xmath83 over all @xmath73 .",
    "we denote it @xmath88 .",
    "* the basis function .",
    "* @xmath89 is equal to 1 iff @xmath90 is one of the following values : 0011 , 0100 , 0101 , 0111 , 1000 , 1010 , 1011 , 1100 .",
    "this function has the degree of 2 , as witnessed by polynomial @xmath91 and the deterministic complexity @xmath92 , as shown in section [ sec : lem3 ] where we discuss the function in more detail",
    ".    * iterated function . *",
    "define a sequence @xmath93 , @xmath94 , @xmath51 with @xmath95 being a function of @xmath96 variables by @xmath97 @xmath98 then , @xmath99 , @xmath100 and , on every input @xmath82 , @xmath101 and @xmath102",
    ".    we will show    [ gapthm ] @xmath103 .",
    "thus , the exact degree is @xmath99 but even the quantum complexity with 2-sided error @xmath104 is @xmath105 .",
    "this implies an @xmath1-vs.-@xmath2 gap both between exact degree and exact quantum complexity and between approximate degree and bounded - error quantum complexity .",
    "the proof is by introducing a combinatorial quantity @xmath106 with the following properties :    [ lem1 ] for any boolean function @xmath60 , @xmath107 .",
    "[ lem2 ] let @xmath60 be an arbitrary boolean function . if @xmath108 , @xmath109 , @xmath51 is obtained by iterating @xmath60 as in equation ( [ eq1 ] ) , then",
    "@xmath110    [ lem3 ] @xmath111 .",
    "theorem [ gapthm ] then follows from lemmas [ lem1 ] , [ lem2 ] , [ lem3 ] .",
    "our approach is a generalization of the quantum adversary method @xcite .",
    "[ athm2 ] @xcite let @xmath112 , @xmath113 , @xmath114 be such that @xmath115 , @xmath116 and    * for every @xmath117 , there are at least @xmath118 inputs @xmath119 such that @xmath120 , * for every @xmath119 , there are at least @xmath121 inputs @xmath117 such that @xmath120 , * for every @xmath122 and every @xmath70 $ ] there are at most @xmath123 inputs @xmath119 such that @xmath120 and @xmath124 , * for every @xmath125 and every @xmath70 $ ] , there are at most @xmath126 inputs @xmath117 such that @xmath120 and @xmath124 .",
    "then , @xmath127 .",
    "there are several ways to apply this theorem to @xmath95 defined in the previous section .",
    "the best lower bound that can be obtained by it seems to be @xmath128 ( cf .",
    "appendix [ app : old ] ) .",
    "this gives some separation between @xmath11 and @xmath129 but is weaker than our new method that we introduce next .",
    "we now formally define the combinatorial quantity @xmath106 that we use in lemmas [ lem1 ] , [ lem2 ] and [ lem3 ] .",
    "let @xmath130 , @xmath131 , @xmath132 and @xmath133 . a weight scheme for @xmath134",
    "consists of numbers @xmath135 , @xmath136 , @xmath137 for all @xmath120 and @xmath70 $ ] satisfying @xmath124 , we have @xmath138    the weight of @xmath82 is @xmath139 , if @xmath117 and @xmath140 if @xmath141 .",
    "let @xmath70 $ ] .",
    "the load of variable @xmath47 in assignment @xmath82 is @xmath142 if @xmath117 and @xmath143 if @xmath141 .",
    "we are interested in schemes in which the load of each variable is small compared to the weight of @xmath82 .",
    "let the maximum a - load be @xmath144 } \\frac{v(x , i)}{wt(x)}$ ] .",
    "let the maximum b - load be @xmath145 } \\frac{v(x , i)}{wt(x)}$ ] .",
    "the maximum load of a weight scheme is @xmath146 .",
    "let @xmath106 be the maximum of @xmath147 over all choices of @xmath148 , @xmath149 , @xmath133 and all weight schemes for @xmath134 .",
    "we will show in lemma [ lem1 ] , if we have a weight scheme with maximum load @xmath150 , the query complexity has to be @xmath151 .",
    "theorem [ athm2 ] follows from our new lemma [ lem1 ] if we set @xmath152 for all @xmath120 and @xmath153 for all @xmath70 $ ] .",
    "then , the weight of @xmath82 is just the number of pairs @xmath120 .",
    "therefore , @xmath154 for all @xmath117 and @xmath155 for all @xmath119 .",
    "the load of @xmath39 in @xmath82 is just the number of @xmath120 such that @xmath124 .",
    "that is , @xmath156 and @xmath157 .",
    "therefore , @xmath158 , @xmath159 and @xmath160 .",
    "this gives us the lower bound of theorem [ athm2 ] .",
    "there are several generalizations of theorem [ athm2 ] that have been proposed .",
    "barnum and saks @xcite have a generalization of theorem [ athm2 ] that they use to prove a @xmath15 lower bound for any read - once function on @xmath3 variables .",
    "this generalization can be shown to be a particular case of our lemma [ lem1 ] , with a weight scheme constructed in a certain way .",
    "barnum , saks and szegedy @xcite have a very general and promising approach .",
    "they reduce quantum query complexity to semidefinite programming and show that a @xmath161-query algorithm exists if and only if a certain semidefinite program does not have a solution .",
    "spalek and szegedy have recently shown @xcite that our weighted scheme method is equivalent to theorem 4 in @xcite which is a special case of their general method .",
    "our method is also equivalent @xcite to kolmogorov complexity method by laplante and magniez @xcite .",
    "hoyer , neerbek and shi @xcite have shown lower bounds for ordered searching and sorting using a weighted version of the quantum adversary method , before both this paper and @xcite .",
    "their argument can be described as a weight scheme for those problems , but it is more natural to think about it in the spectral terminology of @xcite .",
    "in terms of weights schemes , lemma [ lem1 ] becomes    * lemma [ lem1 ] * _ if a function @xmath60 has a weight scheme with maximum load @xmath150 , then @xmath162 .",
    "_    * proof : * we can assume that @xmath163 . otherwise , we just multiply all @xmath164 by @xmath165 and all @xmath166 by @xmath167 . notice that this does not affect the requirement ( [ eqwreq ] ) . in the new scheme @xmath168 is equal to the old @xmath169 and @xmath170 is equal to the old @xmath171 .",
    "let @xmath172 be the state of a quantum algorithm after @xmath161 queries on input @xmath82 .",
    "we consider @xmath173 .",
    "furthermore , if an algorithm computes @xmath0 in @xmath161 queries with probability at least @xmath57 , @xmath174 @xcite . to prove that @xmath175 , it suffices to show    @xmath176 .",
    "* proof : * let @xmath177 be the state of the algorithm immediately before query @xmath161 .",
    "we write @xmath178 with @xmath179 being the state of qubits not involved in the query .",
    "the state after the query is @xmath180 notice that all the terms in @xmath181 and @xmath182 are the same , except for those which have @xmath124 .",
    "thus , @xmath183 and @xmath184 by the inequality @xmath185 , @xmath186 we consider the sum of all first and all second terms separately .",
    "the sum of all first terms is @xmath187 } |\\alpha^t_{x , i}|^2   \\left ( \\sum_{y:(x , y)\\in r , x_i\\neq y_i } w'(x , y , i ) \\right)\\ ] ] @xmath188 } |\\alpha^t_{x , i}|^2 v(x , i ) \\leq v_a \\sum_{x\\in a , i\\in [ n ] } |\\alpha^t_{x , i}|^2 wt(x)\\ ] ] @xmath189 } |\\alpha^t_{x , i}|^2 = v_a \\sum_{x\\in a } wt(x ) = v_a w_0 .\\ ] ] similarly , the second sum is at most @xmath190 .",
    "finally , @xmath163 implies that @xmath191 .      in terms of weight schemes , we have to prove    * lemma [ lem2 ] * _ let @xmath60 be a function with a weight scheme with maximum load @xmath192 . then , the function @xmath193 obtained by iterating @xmath60 as in equation ( [ eq1 ] ) has a weight scheme with maximum load @xmath194 . _",
    "the lemma follows by inductively applying    if @xmath60 has a weight scheme with maximum load @xmath195 and @xmath196 has a weight scheme with maximum load @xmath197 , then @xmath193 has a weight scheme with maximum load @xmath198 .    *",
    "proof : * similarly to lemma [ lem1 ] , assume that the schemes for @xmath60 and @xmath196 have @xmath163 .",
    "let @xmath199 be the number of variables for the base function @xmath200 .",
    "we subdivide the @xmath201 variables @xmath202 , @xmath51 , @xmath203 of the function @xmath193 into @xmath199 blocks of @xmath204 variables .",
    "let @xmath205 , @xmath51 , @xmath206 be the @xmath207 block .",
    "furthermore , let @xmath208 be the vector @xmath209 then , @xmath210 .",
    "we start by defining @xmath211 , @xmath212 and @xmath213 .",
    "let @xmath214 , @xmath215 , @xmath216 ( @xmath217 , @xmath218 , @xmath219 ) be @xmath211 , @xmath212 , @xmath213 in the weight scheme for @xmath60 ( @xmath196 , respectively ) .",
    "@xmath117 ( @xmath212 , respectively ) if    * @xmath220 ( @xmath215 , respectively ) , and * for every @xmath221 $ ] , @xmath222 if @xmath223 and @xmath224 if @xmath225 .",
    "@xmath120 if @xmath226 and , for every @xmath221 $ ] ,    * @xmath227 if @xmath228 .",
    "* @xmath229 if @xmath223 , @xmath230 .",
    "* @xmath231 if @xmath225 , @xmath232 .",
    "let @xmath233 denote the weights in the scheme for @xmath60 and @xmath234 the weights in the scheme for @xmath196 .",
    "we define the weights for @xmath193 as @xmath235 where @xmath236 is the weight of @xmath237 in the scheme for @xmath196 .",
    "for @xmath238 $ ] , let @xmath239 be the index of the block containing @xmath39 and @xmath240 be the index of @xmath39 within this block .",
    "define @xmath241 the requirement ( [ eqwreq ] ) is obviously satisfied .",
    "it remains to show that the maximum load is at most @xmath198 .",
    "we start by calculating the total weight @xmath242 .",
    "first , split the sum of all @xmath243 into sums of @xmath243 over @xmath77 with a fixed @xmath244 .",
    "[ claimbreakupsum ] @xmath245    * proof : * let @xmath77 be such that @xmath246 .",
    "then , @xmath247 when @xmath248 , @xmath249 can be equal to any @xmath250 such that @xmath251 .",
    "therefore , the sum of all @xmath243 , @xmath246 is @xmath252 each of sums in brackets is equal to @xmath253 .",
    "therefore , ( [ eqbreakupsum ] ) equals @xmath254    @xmath255    * proof : * @xmath256 is the sum of sums from claim [ claimbreakupsum ] over all @xmath257 .",
    "now , the corollary follows from claim [ claimbreakupsum ] and @xmath258 ( which is just the definition of @xmath259 ) .",
    "next , we calculate the load @xmath260 in a similar way .",
    "we start by fixing @xmath244 and all variables in @xmath77 outside the @xmath261 block .",
    "let @xmath262 be the sum of @xmath243 and @xmath263 be the sum of @xmath264 , over @xmath77 that have @xmath246 and the given values of variables outside @xmath265 .",
    "@xmath266    * proof : * fixing @xmath41 and the variables outside @xmath265 fixes all terms in @xmath243 , except @xmath267 .",
    "therefore , @xmath268 where @xmath269 is fixed .",
    "this means @xmath270 .",
    "also , @xmath271 property ( [ eqwreq ] ) of the scheme for ( @xmath217 , @xmath218 , @xmath219 ) implies @xmath272 @xmath273 if we sum over all possible @xmath274 , we get @xmath275 since @xmath276 , we have @xmath277    we now consider the part of @xmath278 generated by @xmath264 with a fixed @xmath279 . by the argument above , it is at most @xmath280 times the sum of corresponding @xmath243 . by claim [ claimbreakupsum ] , this sum is @xmath281 . by summing over all @xmath279 ,",
    "we get @xmath282 @xmath283 by property ( [ eqwreq ] ) , @xmath284 . therefore , @xmath285 and ( [ eqnewsum ] ) is at most @xmath286    by induction , @xmath287 .",
    "this proves lemma [ lem2 ] .",
    "= 4.5 in    we now look at the base function @xmath0 in more detail . the function @xmath0 is shown in figure [ fig - only ] .",
    "the vertices of the two cubes correspond to @xmath288 .",
    "black circles indicate that @xmath289 .",
    "thick lines connect pairs of black vertices that are adjacent ( i.e. , @xmath290 and @xmath291 differing in exactly one variable with @xmath289 and @xmath292 ) .    from the figure , we can observe several properties .",
    "each black vertex ( @xmath293 ) has exactly two black neighbors and two white neighbors .",
    "each white vertex ( @xmath294 ) also has two white and two black neighbors .",
    "thus , for every @xmath295 , there are two variables @xmath47 such that changing @xmath47 changes @xmath89 .",
    "we call these two _ sensitive _ variables and the other two _ insensitive_. from figure [ fig - only ] we also see that , for any @xmath295 , flipping both sensitive variables changes @xmath89 and flipping both insensitive variables also changes @xmath89 .    thus , the sensitivity of @xmath0 is 2 on every input .",
    "the block sensitivity is 3 on every input , with each of the two sensitive variables being one block and the two insensitive variables together forming the third block .    finally , @xmath92 .",
    "the algorithm queries @xmath202 and @xmath296 .",
    "after both of those are known , the function depends only on one of @xmath297 and @xmath298 and only one more query is needed .",
    "the lower bound follows from @xmath299 .",
    "we now proceed to proving the lemma . in terms of weight schemes ,",
    "the lemma is    * lemma [ lem3 ] * _ the function @xmath0 has a weight scheme with the maximum load of 2.5 .",
    "_    * proof : * let @xmath300 , @xmath301 .",
    "@xmath213 consists of all @xmath302 where @xmath117 and @xmath77 differs from @xmath82 in exactly    * one of the sensitive variables or * both sensitive variables or * both insensitive variables .",
    "thus , for every @xmath117 , there are four inputs @xmath119 such that @xmath120 .",
    "also , for every @xmath119 , there are four inputs @xmath117 such that @xmath120 and again , these are @xmath82 differing from @xmath77 in one sensitive variable , both sensitive variables or both insensitive variables .",
    "notice that , if @xmath77 differs from @xmath82 in both variables that are insensitive for @xmath82 , then those variables are sensitive for @xmath77 and conversely .",
    "( by flipping one of them in @xmath77 , we get to an input @xmath41 which differs from @xmath82 in the other variable insensitive to @xmath82 . since the variable is insensitive for @xmath82 , @xmath303 .",
    "together with @xmath304 , this implies @xmath305 . )",
    "let @xmath152 for @xmath120 with @xmath82 , @xmath77 differing in one variable and @xmath306 if @xmath307 differ in two variables .",
    "thus , @xmath308 for all @xmath82 .",
    "@xmath164 is    * 1 if @xmath82 and @xmath77 differ in one variable , * @xmath309 if they differ in both variables sensitive for @xmath82 , * @xmath310 if they differ in both variables insensitive for @xmath82 .    since @xmath311",
    ", this is a correct weight scheme .",
    "we now calculate the load of @xmath39 .",
    "there are two cases .    1 .",
    "@xmath82 is insensitive to flipping @xmath47 .",
    "then , the only input @xmath77 such that @xmath120 and @xmath124 is obtained by flipping both insensitive variables .",
    "it contributes @xmath310 to @xmath278 .",
    "@xmath82 is sensitive to flipping @xmath47 .",
    "then , there are two inputs @xmath77 : one obtained by flipping just this variable and one obtained by flipping both sensitive variables .",
    "the load is @xmath312 .",
    "thus , we get @xmath313 for all @xmath314 .",
    "theorem 2 now follows from lemmas [ lem1 ] , [ lem2 ] , [ lem3 ] . by lemma [ lem3 ] ,",
    "the function @xmath0 has a weight scheme with the maximum load of @xmath315 .",
    "together with lemma [ lem2 ] , this implies that @xmath95 has a weight scheme with the maximum load of @xmath316 . by lemma [ lem1 ] , this means that @xmath22 .",
    "iterated functions similar to ours have been studied before .",
    "nisan and wigderson @xcite used them to show a gap between communication complexity and log rank ( an algebraic quantity that provides a lower bound on communication complexity ) .",
    "buhrman and de wolf @xcite proposed to study the functions from @xcite to find out if polynomial degree of a function characterizes its quantum complexity .",
    "however , the base functions that @xcite considered are different from ours .",
    "we now consider the functions from @xcite .",
    "our method shows the gaps between @xmath10 and @xmath11 for those functions as well but those gaps are considerably smaller than for our new base function .",
    "* function 1 @xcite .",
    "* @xmath317 is 0 iff all variables are equal .",
    "we have @xmath318 ( as witnessed by @xmath319 ) , and @xmath320 .",
    "[ lem : other1 ] @xmath60 has a weight scheme with max load @xmath321 .",
    "* proof : * let @xmath322 , @xmath323 , @xmath324 .",
    "we set @xmath325 if @xmath307 differ in one variable and @xmath152 if @xmath82 and @xmath77 differ into two variables .",
    "( notice that @xmath82 and @xmath77 can not differ in all three variables because that would imply @xmath326 . )",
    "the total weight @xmath327 is    * @xmath328 for @xmath117 ( since there are three ways to choose one variable and three ways to choose two variables and every way of flipping one or two variables changes the value ) . * @xmath329 for @xmath141 .",
    "( each such @xmath82 has two variables equal and third different .",
    "it is involved in @xmath330 with @xmath77 obtained by flipping either the different variable or both equal variables . )",
    "let @xmath117 , @xmath119 .",
    "if @xmath307 differ in one variable @xmath47 , we define @xmath331 and @xmath332 . if @xmath307 differ in two variables , @xmath333 and @xmath332 for each of those variables .",
    "the load of @xmath39 in @xmath82 is :    1 .",
    "+ we have to add up @xmath164 with @xmath77 differing from @xmath82 either in @xmath47 only or in @xmath47 and one of other two variables .",
    "we get @xmath335 .",
    "2 .   @xmath336 .",
    "+ then , there is only one input @xmath77 .",
    "it can differ in just @xmath47 or @xmath47 and one more variable . in both cases , @xmath337 .",
    "we have @xmath338 and @xmath339",
    ". therefore , @xmath340 .",
    "this means that @xmath341 .",
    "* function 2 ( kushilevitz , quoted in @xcite ) . * the function @xmath342 of 6 variables is defined by    * @xmath343 if the number of @xmath344 is 0 , 4 or 5 , * @xmath345 if the number of @xmath344 is 1 , 2 or 6 , * if the number of @xmath344 is 3 , @xmath343 in the following cases : @xmath346 , @xmath347 , @xmath348 , @xmath349 , @xmath350 , @xmath351 , @xmath352 , @xmath353 , @xmath354 , @xmath355 and 1 otherwise .",
    "we have @xmath356 and @xmath357 .",
    "[ lem : other2",
    "] @xmath358 has a weight scheme with max load @xmath359 .",
    "* proof : * we choose @xmath211 to consist of inputs @xmath82 with all @xmath360 and those inputs @xmath82 with three variables @xmath344 which have @xmath343 .",
    "@xmath212 consists of all inputs @xmath82 with exactly one variable equal to 1 .",
    "@xmath213 consists of @xmath302 such that @xmath77 can be obtained from @xmath82 by flipping one variable if @xmath361 and two variables if @xmath82 contains three @xmath47 .",
    "if @xmath361 and @xmath119 , we set @xmath362 .    if @xmath82 has three variables @xmath344 and @xmath77 is obtained by switching two of those to 0 , we set @xmath363 , @xmath364 and @xmath365 .",
    "to calculate the maximum loads , we consider three cases :    1 .",
    "+ @xmath366 and @xmath367 for all @xmath39 .",
    "@xmath82 has three variables @xmath344 .",
    "+ then , there are three pairs of variables that we can flip to get to @xmath119",
    ". thus , @xmath368 .",
    "each @xmath344 gets flipped in two of those pairs .",
    "therefore , its load is @xmath369 .",
    "the ratio @xmath370 is 6 .",
    "@xmath77 has 1 variable @xmath371 .",
    "+ then , we can either flip this variable or one of 5 pairs of @xmath372 variables to get to @xmath117 .",
    "the weight is @xmath373 . if @xmath371 , then the only input @xmath117 , @xmath120 with @xmath124 is @xmath361 with @xmath374 .",
    "thus , @xmath375 . if @xmath372 , then exactly two of 5 pairs of variables @xmath376 include the @xmath377 variable .",
    "therefore , @xmath378 .",
    "thus , @xmath379 , @xmath380 and @xmath381 .",
    "this gives a @xmath382 vs. @xmath383 gap between polynomial degree and quantum complexity .",
    "an immediate open problem is to improve our quantum lower bounds or to find quantum algorithms for our iterated functions that are better than classical by more than a constant factor .",
    "some other related open problems are :    1 .   * and - or tree . *",
    "let @xmath384 we then iterate @xmath0 and obtain a function of @xmath385 variables that can be described by a complete binary tree of depth @xmath386 .",
    "the leaves of this tree correspond to variables . at each non - leaf node",
    ", we take the and of two values at its two children nodes at even levels and or of two values at odd levels .",
    "the value of the function is the value that we get at the root .",
    "classically , any deterministic algorithm has to query all @xmath385 variables . for probabilistic algorithms ,",
    "@xmath387 queries are sufficient and necessary @xcite .",
    "what is the quantum complexity of this problem ?",
    "no quantum algorithm that uses less than @xmath387 queries is known but the best quantum lower bound is just @xmath388 .",
    "+ a related problem that has been recently resolved concerns and - or trees of constant depth . there",
    ", we have a similar @xmath389-ary tree of depth @xmath390",
    ". then , @xmath391 quantum queries are sufficient @xcite and necessary @xcite .",
    "the big - o constant depends on @xmath390 and the number of queries in the quantum algorithm is no longer @xmath4 if the number of levels is non - constant .",
    "curiously , it is not known whether the polynomial degree is @xmath391 , even for @xmath392 @xcite .",
    "* certificate complexity barrier .",
    "* let @xmath393 and @xmath394 be 0-certificate and 1-certificate complexity of @xmath0 ( cf .",
    "@xcite for definition ) .",
    "any lower bound following from theorems of @xcite or weight schemes of the present paper is @xmath395 for total functions and @xmath396 for partial functions but @xmath396 .",
    "examples are inverting a permutation @xcite and local search @xcite . ]",
    "+ this has been sufficient to prove tight bounds for many functions .",
    "however , in some cases quantum complexity is ( or seems to be ) higher .",
    "for example , the binary and - or tree described above has @xmath397 .",
    "thus , improving the known @xmath398 lower bound requires going above @xmath399 .",
    "+ to our knowledge , there is only one known lower bound for a total function which is better than @xmath399 ( and no lower bounds for partial functions better than @xmath400 ) .",
    "this is the @xmath401 lower bound of shi @xcite for element distinctness , a problem which has @xmath402 , @xmath403 and @xmath404 .",
    "it uses methods quite specific to the particular problem and can not be easily applied to other problems .",
    "it would be very interesting to develop more methods of proving quantum lower bounds higher than @xmath405 for total functions or higher than @xmath396 for partial functions .",
    "* finding triangles . *",
    "a very simple problem for which its true quantum complexity seems to exceed the @xmath406 lower bound is as follows .",
    "we have @xmath407 variables describing adjacency matrix of a graph .",
    "we would like to know if the graph contains a triangle .",
    "the best quantum algorithm needs @xmath408 queries @xcite an @xmath409 lower bound follows by a reduction from the lower bound on grover s search @xcite or lower bound theorem of @xcite .",
    "we have @xmath410 but @xmath411 ( if there is a triangle , its three edges form a 1-certificate ) , thus @xmath409 is the best lower bound that follows from theorems in @xcite .",
    "we believe that the quantum complexity of this problem is more than @xmath412 . proving that could produce new methods applicable to other problems where quantum complexity is more than @xmath405 as well .",
    "* acknowledgments . *",
    "thanks to scott aaronson , yaoyun shi and ronald de wolf for their comments about earlier versions of this paper .",
    "99 a. aaronson .",
    "lower bounds for local search by quantum arguments , _ proceedings of stoc04 _ , pp .",
    "465 - 474 .",
    "also quant - ph/0307149 .",
    "s. aaronson , y. shi .",
    "quantum lower bounds for the collision and the element distinctness problems",
    ". _ journal of acm _",
    ", 51:595 - 605 , 2004 .",
    "a. ambainis .",
    "a better lower bound for quantum algorithms searching an ordered list .",
    "_ proceedings of focs99 _ , pp .",
    "352 - 357 .",
    "also quant - ph/9902053 .",
    "a. ambainis .",
    "quantum lower bounds by quantum arguments .",
    "_ journal of computer and system sciences _ , 64:750 - 767 , 2002 .",
    "earlier versions at stoc00 and quant - ph/0002066 .",
    "a. ambainis .",
    "quantum lower bounds for collision and element distinctness with small range .",
    "quant - ph/0305179 .",
    "a. ambainis .",
    "quantum query algorithms and lower bounds . _ proceedings of fotfsiii _ , to appear .",
    "journal version under preparation .",
    "h. barnum , m. saks : a lower bound on the quantum query complexity of read - once functions , quant - ph/0201007 .",
    "h. barnum , m. saks , m. szegedy . quantum decision trees and semidefinite programming .",
    "_ complexity2003 _ , pp .",
    "179 - 193 .",
    "r. beals , h. buhrman , r. cleve , m. mosca , r. de wolf .",
    "quantum lower bounds by polynomials .",
    "_ journal of acm _ , 48 : 778 - 797 , 2001 .",
    "earlier versions at focs98 and quant - ph/9802049 .    c. bennett , e. bernstein , g. brassard , u. vazirani . strengths and weaknesses of quantum computing .",
    "_ siam j. computing _ , 26:1510 - 1523 , 1997 .",
    "quant - ph/9701001    h. buhrman , r. cleve , and a. wigderson quantum vs. classical communication and computation .",
    "_ proceedings of stoc98 _ , pp .",
    "63 - 68 , quant - ph/9702040    h. buhrman , c. durr , m. heiligman , p. hoyer , f. magniez , m. santha , and r. de wolf .",
    "quantum algorithms for element distinctness . _ proceedings of complexity01 _ , pp.131 - 137 , quant - ph/0007016 .",
    "h. buhrman , r. de wolf .",
    "complexity measures and decision tree complexity : a survey . _ theoretical computer science _",
    ", 288:21 - 43 , 2002 .",
    "e. w. cheney , _ introduction to approximation theory .",
    "_ new york : mcgraw - hill , 1966 .",
    "l. grover . a fast quantum mechanical algorithm for database search .",
    "_ stoc96 _ , pp .",
    "212 - 219 , quant - ph/9605043 .",
    "p. hoyer , j. neerbek , y. shi .",
    "quantum lower bounds of ordered searching , sorting and element distinctness .",
    "_ algorithmica _ , 34:429 - 448 , 2002 .",
    "earlier versions at icalp01 and quant - ph/0102078 .",
    "p. hoyer , m. mosca , and r. de wolf , quantum search on bounded - error inputs .",
    "_ proceedings of icalp 03 _ , lecture notes in computer science , 2719:291 - 299 . also quant - ph/0304052 .",
    "a quantum lower bound for the collision problem , quant - ph/0304162 .",
    "s. laplante , f. magniez .",
    "lower bounds for randomized and quantum query complexity using kolmogorov arguments .",
    "_ proceedings of complexity04 _ , pp .",
    "294 - 304 .",
    "also quant - ph/0311189 .",
    "f. magniez , m. santha , m. szegedy .",
    "an @xmath408 quantum algorithm for the triangle problem .",
    "_ proceedings of soda05 _ , to appear . also quant - ph/0310134 .",
    "g. midrijnis .",
    "exact quantum query complexity for total boolean functions .",
    "quant - ph/0403168 .",
    "a. nayak , f. wu .",
    "the quantum query complexity of approximating the median and related statistics .",
    "_ proceedings of stoc99 _ , pp .",
    "384 - 393 , quant - ph/9804066 .",
    "n. nisan , m. szegedy . on the degree of boolean functions as real polynomials .",
    "_ computational complexity _ ,",
    "4:301 - 313 , 1994 .",
    "n. nisan , a. wigderson . on rank vs. communication complexity .",
    "_ combinatorica _ , 15 : 557 - 565 , 1995 .",
    "also focs94 .",
    "a. razborov .",
    "quantum communication complexity of symmetric predicates , _ izvestiya of the russian academy of science , mathematics _ , 67:159 - 176 , 2003 .",
    "also quant - ph/0204025 .",
    "m. saks , a. wigderson .",
    "probabilistic boolean decision trees and the complexity of evaluating game trees .",
    "_ focs 1986 _ , pp .",
    "29 - 38    m. santha . on the monte carlo boolean decision tree complexity of read - once formulae .",
    "_ structures 1991 _ , pp .",
    "180 - 187    y. shi . approximating linear restrictions of boolean functions .",
    "manuscript , 2002 .",
    "polynomial - time algorithms for prime factorization and discrete logarithms on a quantum computer .",
    "_ siam j. computation _",
    ", 26 : 1484 - 1509 , 1997 .",
    "quant - ph/9508027 .",
    "lower bounds on probabilistic linear decision trees .",
    "_ theoretical computer science _ , 38:69 - 82 , 1985 .",
    "m. szegedy . on the quantum query complexity of detecting triangles in graphs .",
    "quant - ph/0310107 .",
    "r. spalek , m. szegedy .",
    "all quantum adversary methods are equivalent .",
    "quant - ph/0409116 .",
    "s. zhang . on the power of ambainis",
    "s lower bounds .",
    "_ proceedings of icalp04 _ , lecture notes in computer science , 3142:1238 - 1250 . also quant - ph/0311060 .",
    "in this section , we look at what bounds can be obtained for @xmath104 for @xmath95 defined in section [ sec:4d ] using the previously known lower bound theorem [ athm2 ] .",
    "it can be verified that the block sensitivity of @xmath0 is @xmath413 on every input . by induction , we can show that this implies @xmath102 for every input @xmath414 .",
    "this makes it tempting to guess that we can achieve @xmath415 and @xmath416 which would give a lower bound of @xmath417 .      1 .   for every @xmath117 , denote by @xmath418 the elements of @xmath212 for which @xmath419 .",
    "then , the sets of variables where @xmath420 and @xmath421 differ must be disjoint for all @xmath422 , @xmath423 .",
    "2 .   for every @xmath119 , denote by @xmath424 the elements of @xmath211 for which @xmath425 .",
    "then , the sets of variables where @xmath426 and @xmath427 differ must be disjoint for all @xmath422 , @xmath423 .",
    "if block sensitivity is @xmath382 on every input , we can guarantee the first requirement ( by starting with @xmath117 constructing disjoint @xmath85 , @xmath51 , @xmath428 and putting @xmath429 into @xmath213 ) .",
    "but , if the set @xmath211 only contains one @xmath82 , then @xmath430 and the lower bound is @xmath431 which is even worse than the previous one .    therefore , we have to take larger set @xmath211 .",
    "this can break the second requirement .",
    "let @xmath432 and @xmath119 .",
    "then , we could have @xmath120 and @xmath433 .",
    "@xmath82 and @xmath77 would differ in a set of variables @xmath434 which is one of @xmath382 disjoint blocks for @xmath82 .",
    "similarly , @xmath41 and @xmath77 would differ in a set @xmath435 which is one of @xmath382 disjoint blocks for @xmath41 .",
    "now , there is no reason why @xmath434 and @xmath435 have to be disjoint !",
    "block sensitivity guarantees that @xmath436 for every _ fixed _ @xmath82 but it gives no guarantees about blocks for @xmath82 being disjoint from blocks for @xmath41 .",
    "the best that we could achieve with this approach was @xmath415 , @xmath437 , @xmath438 , as follows .",
    "let @xmath300 , @xmath301 .",
    "we inductively construct two sets of @xmath382 disjoint perfect matchings between inputs in @xmath211 and inputs in @xmath212 .",
    "the first set of matchings consists of ordered pairs @xmath302 , @xmath117 , @xmath119 . for @xmath439 ,",
    "the first two matchings match each input @xmath117 to the two inputs @xmath119 that differ in exactly one variable .",
    "the first matching is @xmath440 , @xmath441 , @xmath442 , @xmath443 , @xmath444 , @xmath445 , @xmath446 , @xmath447 .",
    "the second matching matches each @xmath117 to the other @xmath119 which differs in exactly one variable .",
    "the third matching matches each @xmath117 to @xmath119 which differs from @xmath82 in both variables that are sensitive for @xmath82 .",
    "this is the first set of 3 matchings .",
    "the second set of matchings consists of ordered pairs @xmath448",
    ", @xmath449 .",
    "the first two matchings are the same as in the first set .",
    "the third matching matches each @xmath117 to @xmath119 which differs from @xmath82 in both variables that are sensitive for @xmath77 .    for @xmath450",
    ", we introduce notation @xmath451 , @xmath452 , @xmath453 , @xmath454 and @xmath208 similarly to section [ sec : lem2 ] .",
    "the first @xmath455 matchings are constructed as follows . for each @xmath82 , we find @xmath208 .",
    "then , we find @xmath279 such that @xmath456 belongs to the first matching in the first set .",
    "let @xmath39 be the variable for which @xmath457 . in the @xmath458 matching ( @xmath459 )",
    ", we match each @xmath117 to @xmath119 which is defined as follows :    * if @xmath460 , then @xmath227 .",
    "* @xmath461 is such that @xmath462 belongs to the @xmath458 matching for @xmath463 levels ( taking matchings from the first set if @xmath464 and the second set if @xmath465 ) .              *",
    "proof : * first , we prove @xmath415 . in the base case , we can just check that the matchings are distinct and , thus , every @xmath117 or @xmath119 is matched to 3 distinct elements of the other set . in the inductive case , consider an element @xmath117 ( or @xmath119 ) and two elements @xmath472 and @xmath473 to which it is matched .",
    "if @xmath474 and @xmath475 belong to two matchings in the same group of @xmath455 matchings , then , by the inductive assumption @xmath476 and , hence , @xmath477 .",
    "if @xmath474 and @xmath475 belong to two matchings in different groups , then @xmath478 implies @xmath477 .    to prove @xmath437 ( or @xmath470 for the second set ) , we first observe that this is true in the base case .",
    "for the inductive case , we again have two cases . if @xmath474 and @xmath475 belong to different sets of @xmath455 matchings , then , for each @xmath479 , either @xmath480 or @xmath481 .",
    "this means that only one of @xmath482 and @xmath483 can differ from @xmath82 in a variable belonging to @xmath461 .",
    "if @xmath474 and @xmath475 , we apply the inductive assumption to @xmath484 and @xmath485 .",
    "to prove @xmath486 in the base case , we notice that , if @xmath487 and @xmath488 belong to the first and the second matching , then the pairs @xmath487 and @xmath488 can not differ in the same variable . in the inductive case , for every @xmath479 , either @xmath489 or @xmath490 .",
    "if we have a variable @xmath491 such that @xmath492 and @xmath489 , then @xmath120 and @xmath493 means that @xmath302 belongs to either one of the second @xmath455 matchings or one of the last @xmath455 matchings . by applying the inductive assumption ,",
    "there are at most @xmath494 such @xmath302 in each of the two sets of @xmath455 matchings .",
    "this gives a total of at most @xmath495 such pairs @xmath302 .",
    "the weakness of theorem [ athm2 ] that we see here is that all variables get treated essentially in the same way . for each",
    "@xmath119 , different variables @xmath496 might have different number of @xmath117 such that @xmath120 , @xmath124 .",
    "theorem [ athm2 ] just takes the worst case of all of those ( the maximum number ) .",
    "our weight schemes allow to allocate weights so that some of load gets moved from variables @xmath39 which have lots of @xmath117 : @xmath120 , @xmath124 to those which have smaller number of such @xmath117 .",
    "this results in better bounds .    for the function of section [ sec:4d ] , we get @xmath497 by old method and @xmath498 by the new method . for the two functions in section [ sec : other1 ]",
    ", the old method only gives bounds that are lower than polynomial degree while the new method shows that @xmath11 is higher than @xmath10 for those functions as well ."
  ],
  "abstract_text": [
    "<S> the degree of a polynomial representing ( or approximating ) a function @xmath0 is a lower bound for the quantum query complexity of @xmath0 . </S>",
    "<S> this observation has been a source of many lower bounds on quantum algorithms . </S>",
    "<S> it has been an open problem whether this lower bound is tight .    </S>",
    "<S> we exhibit a function with polynomial degree @xmath1 and quantum query complexity @xmath2 . </S>",
    "<S> this is the first superlinear separation between polynomial degree and quantum query complexity . </S>",
    "<S> the lower bound is shown by a generalized version of the quantum adversary method . </S>"
  ]
}
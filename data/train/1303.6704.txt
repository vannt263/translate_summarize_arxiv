{
  "article_text": [
    "one - way multitape finite automata were introduced in the seminal 1959 paper of rabin and scott  @xcite . such automata ( under various restrictions )",
    "are also commonly known as transducers  see elgot and mezei  @xcite for an early reference .",
    "a multitape automaton with @xmath0 tapes accepts a @xmath0-ary relation on words .",
    "the class of relations recognised by deterministic automata coincides with the class of @xmath0-ary rational relations  @xcite .",
    "two multitape automata are said to be equivalent if they accept the same relation .",
    "undecidability of equivalence of non - deterministic automata is relatively straightforward  @xcite .",
    "however the deterministic case remained open for many years , until it was shown decidable by harju and karhumki  @xcite .",
    "their solution made crucial use of results about ordered groups  specifically that a free group can be endowed with a compatible order  @xcite and that the ring of formal power series over an ordered group with coefficients in a division ring and with well - ordered support is itself a division ring ( due independently to malcev  @xcite and neumann  @xcite ) . using these results",
    "@xcite established the decidability of _ multiplicity equivalence _ of non - deterministic multitape automata , i.e. , whether two non - deterministic multitape automata have the same number of accepting computations on each input .",
    "decidability in the deterministic case ( and , more generally , the unambiguous case ) follows immediately .",
    "we refer the reader to  @xcite for a self - contained account of the proof , including the underlying group theory .",
    "harju and karhumki did not address questions of complexity in  @xcite . however the existence of a * co - np * _ guess - and - check _",
    "procedure for deciding equivalence of deterministic multitape automata follows directly from  ( * ? ? ?",
    "* theorem 8) .",
    "this theorem states that two inequivalent automata are guaranteed to differ on a tuple of words whose total length is at most the total number of states of the two automata .",
    "such a tuple can be guessed , and it can be checked in polynomial time whether the tuple is accepted by one automaton and rejected by the other . in the special case of two - tape deterministic automata ,",
    "a polynomial - time algorithm was given in  @xcite , before decidability was shown in the general case .",
    "a * co - np * upper bound also holds for multiplicity equivalence of @xmath0-tape automata for each fixed @xmath0 .",
    "however , as we observe below , if the number of tapes is not fixed , computing the number of accepting computations of a given non - deterministic multitape automata on a tuple of input words is # * p*-hard .",
    "thus the guess - and - check method does not yield a * co - np * procedure for multiplicity equivalence in general .",
    "it is well - known that the equivalence problem for single - tape weighted automata with rational transition weights is solvable in polynomial time  @xcite . now",
    "the decision procedure in  @xcite reduces multiplicity equivalence of multitape automata to equivalence of single - tape automata with transition weights in a division ring of power series over an ordered group",
    ". however the complexity of arithmetic in this ring seems to preclude an application of the polynomial - time procedures of  @xcite .",
    "leaving aside issues of representing infinite power series , even the operation of multiplying a family of polynomials in two non - commuting variables yields a result with exponentially many monomials in the length of its input .",
    "in this paper we give an alternative proof that multiplicity equivalence of multitape automata is decidable , which also yields new complexity bounds on the problem .",
    "we use the same basic idea as  @xcite  reduce to the single - tape case by enriching the set of transition weights .",
    "however we replace their use of power series on ordered groups with results about matrix algebras and polynomial identity rings ( see remark  [ rem : difference ] for a more technical comparison ) . in particular",
    ", we use the amitsur - levitzki theorem concerning polynomial identities in matrix algebras .",
    "our use of the latter is inspired by the work of  @xcite on non - commutative polynomial identity testing , and our starting point is a simple generalisation of the approach of  @xcite to what we call _ partially commutative _ polynomial identity testing .",
    "our construction for establishing decidability immediately yields a simple randomised algorithm for checking multiplicity equivalence of multitape automata ( and hence also equivalence of deterministic automata ) .",
    "the algorithm involves only matrix exponentiation , and runs in polynomial time for each fixed number of tapes .",
    "let @xmath1 be an infinite field . recall that an @xmath1-algebra is a vector space over @xmath1 equipped with an associative bilinear product that has an identity . write @xmath2 for the free @xmath1-algebra over a set @xmath3 .",
    "the elements of @xmath4 can be viewed as polynomials over a set of non - commuting variables @xmath3 with coefficients in @xmath1 .",
    "each such polynomial is an @xmath1-linear combination of monomials , where each monomial is an element of @xmath5 .",
    "the degree of a polynomial is the maximum of the lengths of its monomials .",
    "let @xmath6 be an @xmath1-algebra and @xmath7 .",
    "if @xmath8 evaluates to @xmath9 for all valuations of its variables in @xmath6 then we say that @xmath6 satisfies the _ polynomial identity _ @xmath10 .",
    "for example , an algebra satisfies the polynomial identity @xmath11 if and only if it is commutative . note that since the variables @xmath12 and @xmath13 do not commute , the polynomial @xmath14 is not identically zero .",
    "we denote by @xmath15 the @xmath1-algebra of @xmath16 matrices with coefficients in @xmath1 .",
    "the amitsur - levitzki theorem  @xcite is a fundamental result about polynomial identities in matrix algebras .",
    "the algebra @xmath15 satisfies the polynomial identity @xmath17 where the sum is over the @xmath18 elements of the symmetric group @xmath19 .",
    "moreover @xmath15 satisfies no identity of degree less than @xmath20 .",
    "[ thm : al ]    given a finite set @xmath3 of non - commuting variables , the _",
    "generic @xmath16 matrix algebra _",
    "@xmath21 is defined as follows . for each variable @xmath22",
    "we introduce a family of commuting indeterminates @xmath23 and define @xmath21 to be the @xmath1-algebra of @xmath16 matrices generated by the matrices @xmath24 for each @xmath25",
    ". then @xmath21 has the following universal property : any homomorphism from @xmath26 to a matrix algebra @xmath27 , with @xmath28 an @xmath1-algebra , factors uniquely through the map @xmath29 given by @xmath30 .",
    "related to the map @xmath31 we also define an @xmath1-algebra homomorphism @xmath32 by @xmath33 where the matrix on the right has zero entries everywhere but along the superdiagonal .      in this section",
    "we introduce a notion of _ partially commutative polynomial identity_. we first establish notation and recall some relevant facts about tensor products of algebras .",
    "write @xmath34 for the tensor product of @xmath1-algebras @xmath6 and @xmath35 , and write @xmath36 for the @xmath0-fold tensor power of @xmath6 .",
    "if @xmath6 is an algebra of @xmath37 matrices and @xmath35 an algebra of @xmath38 matrices , then we identify the tensor product @xmath39 with the algebra of @xmath40 matrices spanned by the matrices @xmath41 , @xmath42 and @xmath43 , where @xmath44 in particular we have @xmath45 .",
    "a _ partially commuting set of variables _ is a tuple @xmath46 , where the @xmath47 are disjoint sets .",
    "write @xmath48 for the tensor product @xmath49 .",
    "we think of @xmath48 as a set of polynomials in partially commuting variables .",
    "intuitively two variables @xmath50 do not commute , whereas @xmath51 commutes with @xmath52 if @xmath53 .",
    "note that if each @xmath47 is a singleton @xmath54 then @xmath55 is the familiar ring of polynomials in commuting variables @xmath56 . at the other extreme ,",
    "if @xmath57 then we recover the non - commutative case .",
    "an arbitrary element @xmath58 can be written uniquely as a finite sum of distinct _",
    "monomials _ , where each monomial is a tensor product of elements of @xmath59 , @xmath60 ,  , and @xmath61 .",
    "formally , we can write @xmath62 where @xmath63 and @xmath64 for each @xmath65 and @xmath66 . thus we can identify @xmath67 with the free @xmath1-algebra over the product monoid @xmath68 .",
    "define the _ degree _ of a monomial @xmath69 to be the total length @xmath70 of its constituent words .",
    "the degree of a polynomial is the maximum of the degrees of its constituent monomials .",
    "let @xmath71 be a @xmath0-tuple of @xmath1-algebras .",
    "a _ valuation _ of @xmath48 in @xmath72 is a tuple of functions @xmath73 , where @xmath74 .",
    "each @xmath75 extends uniquely to an @xmath1-algebra homomorphism @xmath76 , and we define the map @xmath77 by @xmath78",
    ". often we will abuse terminology slightly and speak of a valuation of @xmath48 in @xmath79 .",
    "given @xmath80 , we say that @xmath72 satisfies the partially commutative identity @xmath10 if @xmath81 for all valuations @xmath82 .",
    "next we introduce two valuations that will play an important role in the subsequent development .",
    "recall that given a set of non - commuting variables @xmath3 , we have a map @xmath83 from the free @xmath1-algebra to the generic @xmath84-dimensional matrix algebra .",
    "we now define a valuation @xmath85 by @xmath86 .",
    "likewise we define @xmath87 by @xmath88 .",
    "we will usually elide the superscript @xmath89 from @xmath90 and @xmath91 when it is clear from the context .",
    "the following result generalises ( part of ) the amitsur - levitzki theorem , by giving a lower bound on the degrees of partially polynomial identities holding in tensor products of matrix algebras .",
    "let @xmath80 and let @xmath92 be a field extending @xmath1 .",
    "then the following are equivalent : ( i )  the partially commutative identity @xmath10 holds in @xmath93 ; ( ii )  @xmath94 . moreover , if @xmath8 has degree strictly less than @xmath84 then ( i ) and ( ii ) are both equivalent to ( iii )  @xmath95 ; and ( iv )  @xmath8 is identically @xmath9 in @xmath96 .",
    "[ prop : sc - al ]    the implication ( ii ) @xmath97 ( i ) follows from the fact that any valuation from @xmath48 to @xmath98 factors through @xmath99 . to see that ( i ) @xmath97 ( ii ) , observe that @xmath100 is an @xmath101 matrix in which each entry is a polynomial in the commuting variables @xmath102 . condition ( i ) implies in particular that each such polynomial evaluates to @xmath9 for all valuations of its variables in @xmath1 .",
    "since @xmath1 is an infinite field , it must be that each such polynomial is identically zero , i.e. , ( ii ) holds .    the implications ( ii ) @xmath97 ( iii ) and ( iv ) @xmath97 ( i ) are both straightforward , even without the degree restriction on @xmath8 .",
    "finally we show that ( iii ) @xmath97 ( iv ) .",
    "let @xmath103 be a monomial in @xmath67 , where @xmath104 has length @xmath105 .",
    "then @xmath106 is an @xmath107 matrix whose first row has a single non - zero entry , which is the monomial @xmath108 at index @xmath109 .",
    "it follows that @xmath110 maps the set of monomials in @xmath96 of degree less than @xmath84 injectively into a linearly independent set of matrices .",
    "condition ( iv ) immediately follows .",
    "the hypothesis that @xmath8 have degree less than @xmath84 in proposition  [ prop : sc - al ] can be weakened somewhat , but is sufficient for our purposes .",
    "a ring @xmath28 with no zero divisors is a _",
    "domain_. if moreover each non - zero element of @xmath28 has a two - sided multiplicative inverse , then we say that @xmath28 is a _ division ring _",
    "( also called a _ skew field _ ) .",
    "a domain @xmath28 is a _ ( right ) ore domain _ if for all @xmath111 , @xmath112 .",
    "the significance of this notion is that an ore domain can be embedded in a division ring of fractions  ( * ? ? ?",
    "* corollary 7.1.6 ) , something that need not hold for an arbitrary domain .",
    "if the ore condition fails then it can easily be shown that the subalgebra of @xmath28 generated by @xmath113 and @xmath114 is free on @xmath113 and @xmath114 .",
    "it follows that a domain @xmath28 that satisfies some polynomial identity is an ore domain  ( * ? ? ?",
    "* corollary 7.5.2 ) .",
    "the tensor product of generic matrix algebras @xmath115 is an ore domain for each @xmath116 .",
    "[ prop : ore ]    we give a proof sketch here , deferring the details to appendix  [ sec : appendix ] .    by the amitsur - levitzki theorem , @xmath117 satisfies a polynomial identity .",
    "thus it suffices to show that @xmath118 is a domain for each @xmath84 .",
    "now it is shown in  ( * ? ? ?",
    "* proposition 7.7.2 ) that @xmath21 is a domain for each @xmath84 and set of variables @xmath3 .",
    "while the tensor product of domains need not be a domain ( e.g. , @xmath119 ) , the proof in  @xcite can be adapted _ mutatis mutandis _ to show that @xmath120 is also a domain .    to prove the latter",
    ", it suffices to find central simple @xmath1-algebras @xmath121 , each of degree @xmath84 , such that the @xmath0-fold tensor product @xmath122 is a domain .",
    "such an example can be found , e.g. , in  ( * ? ? ?",
    "* proposition 1.1 ) .",
    "then , using the fact that @xmath123 for any algebraically closed extension field of @xmath1 , one can infer that @xmath124 is also a domain .",
    "let @xmath125 be a tuple of finite alphabets .",
    "we denote by @xmath126 the product monoid @xmath127 .",
    "define the length of @xmath128 to be @xmath129 and write @xmath130 for the set of elements of @xmath126 of length @xmath131 .",
    "multitape automaton _ is a tuple @xmath132 , where @xmath133 is a set of _ states _ , @xmath134 is a set of _ edges _ , @xmath135 is a set of _ initial states _ , and @xmath136 is a set of _ final states_. a _ run _ of @xmath6 from state @xmath137 to state @xmath138 is a finite sequence of edges @xmath139 such that @xmath140 .",
    "the _ label _ of @xmath141 is the product @xmath142 .",
    "define the _ multiplicity _ @xmath143 of an input @xmath144 to be the number of runs with label @xmath145 such that @xmath146 and @xmath147 .",
    "an automaton is _ deterministic _",
    "if each state reads letters from a single tape and has a single transition for every input letter .",
    "thus a deterministic automaton has a single run on each input @xmath148 .",
    "we say that two automata @xmath6 and @xmath35 over the same alphabet are _ multiplicity equivalent _ if @xmath149 for all @xmath144 .",
    "the following result implies that multiplicity equivalence of multitape automata is decidable .",
    "given automata @xmath6 and @xmath35 with @xmath84 states in total , @xmath6 and @xmath35 are equivalent if and only if @xmath149 for all @xmath148 of length at most @xmath150 .",
    "[ thm : harju ]    theorem  [ thm : harju ] immediately yields a * co - np * bound for checking language equivalence of deterministic multitape automata . given two inequivalent automata @xmath6 and @xmath35 , a distinguishing input @xmath145 can be guessed , and it can be verified in polynomial time that only one of @xmath6 and @xmath35 accepts @xmath145 .",
    "a similar idea also gives a * co - np * bound for multiplicity equivalence in case the number of tapes is fixed .",
    "in general we note however that the _ evaluation problem_given an automaton @xmath6 and input @xmath145 , compute @xmath143is @xmath151-complete .",
    "thus it is not clear that the * co - np * upper bound applies to the multiplicity equivalence problem without bounding the number of tapes .",
    "the evaluation problem for multitape automata is @xmath152-complete .",
    "membership in @xmath151 follows from the observation that a non - deterministic polynomial - time algorithm can enumerate all possible runs of an automaton @xmath6 on an input @xmath148 .",
    "the proof of @xmath151-hardness is by reduction from # sat , the problem of counting the number of satisfying assignments of a propositional formula .",
    "consider such a formula @xmath153 with @xmath0 variables , each with fewer than @xmath84 occurrences .",
    "we define a @xmath0-tape automaton @xmath6 , with each tape having alphabet @xmath154 , and consider as input the @xmath0-tuple @xmath155 .",
    "the automaton @xmath6 is constructed such that its runs on input @xmath145 are in one - to - one correspondence with satisfying assignments of @xmath153 .",
    "each run starts with the automaton reading the symbol @xmath9 from a non - deterministically chosen subset of its tapes , corresponding to the set of false variables .",
    "thereafter it evaluates the formula @xmath153 by repeatedly guessing truth values of the propositional variables .",
    "if the @xmath156-th variable is guessed to be true then the automaton reads @xmath157 from the @xmath156-th tape ; otherwise it reads @xmath158 from the @xmath156-th tape .",
    "the final step is to read the symbol @xmath159 from a non - deterministically chosen subset of the input tapes ",
    "again corresponding to the set of false variables .",
    "the consistency of the guesses is ensured by the requirement that the automaton have read @xmath145 by the end of the computation .",
    "we start by recalling from  @xcite an equivalence - respecting transformation from multitape automata to single - tape weighted automata .",
    "recall that a single - tape automaton on a unary alphabet with transition weights in a ring @xmath28 consists of a set of _ states _",
    "@xmath160 , _ initial states _",
    "@xmath161 , _ final states _",
    "@xmath162 , and _ transition matrix _ @xmath163 .",
    "given such an automaton , define the _ initial - state vector _ @xmath164 and _ final - state vector _",
    "@xmath165 respectively by @xmath166 then @xmath167 is the weight of the ( unique ) input word of length @xmath131 .    consider a @xmath0-tape automaton @xmath168 , where @xmath169 , and write @xmath170 .",
    "recall the ring of polynomials @xmath171 as defined in section  [ sec : semi ] .",
    "recall also that we can identify the monoid @xmath126 with the set of monomials in @xmath172 , where @xmath173 corresponds to @xmath174indeed @xmath172 is the free @xmath1-algebra on @xmath126 .",
    "we derive from @xmath6 an @xmath175-weighted automaton @xmath176 ( with a single tape and unary input alphabet ) that has the same sets of states , initial states , and final states as @xmath6 .",
    "we define the transition matrix @xmath177 of @xmath176 by combining the different transitions of @xmath6 into a single matrix with entries in @xmath175 . to this end , suppose that the set of states of @xmath6 is @xmath160 .",
    "define the matrix @xmath178 by @xmath179 for @xmath180 .",
    "let @xmath181 and @xmath182 be the respective initial- and final - state vectors of @xmath176",
    ". then the following proposition is straightforward .",
    "intuitively it says that the weight of the unary word of length @xmath131 in @xmath176 represents the language of all length-@xmath131 tuples accepted by @xmath6 .    for all @xmath183 we have @xmath184 .",
    "[ prop : matrix ]    now consider two @xmath0-tape automata @xmath6 and @xmath35 .",
    "let the weighted single - tape automata derived from @xmath6 and @xmath35 have respective transition matrices @xmath185 and @xmath186 , initial - state vectors @xmath187 and @xmath188 , and final - state vectors @xmath189 and @xmath190 .",
    "we combine the latter into a single weighted automaton with transition matrix @xmath177 , initial - state vector @xmath181 , and final - state vector @xmath182 , respectively defined by : @xmath191    automata @xmath6 and @xmath35 are multiplicity equivalent if and only if @xmath192 for @xmath193 , where @xmath84 is the total number of states of the two automata .",
    "[ prop : main ]    since @xmath126 is a linearly independent subset of @xmath172 , from proposition  [ prop : matrix ] it follows that @xmath6 and @xmath35 are multiplicity equivalent just in case @xmath194 for all @xmath195 .",
    "the latter is clearly equivalent to @xmath196 for all @xmath183 .",
    "it remains to show that we can check equivalence by looking only at exponents @xmath131 in the range @xmath197 .",
    "suppose that @xmath198 for @xmath199 .",
    "we show that @xmath192 for an arbitrary @xmath200 .",
    "consider the map @xmath201 , as defined in ( [ eq : psi ] ) .",
    "observe that @xmath167 is a polynomial expression in @xmath175 of degree at most @xmath131 .",
    "therefore by proposition  [ prop : sc - al ] ( ( ii ) @xmath202 ( iv ) ) , to show that @xmath192 it suffices to show that @xmath203 let us write @xmath204 for the pointwise application of @xmath205 to the matrix @xmath177 , so that @xmath204 is an @xmath16 matrix , each of whose entries is an @xmath101 matrix belonging to @xmath206 .",
    "since @xmath205 is a homomorphism and @xmath181 and @xmath182 are integer vectors , ( [ eq : goal4 ] ) is equivalent to : @xmath207    recall from proposition  [ prop : ore ] that the tensor product of generic matrix algebras @xmath206 is an ore domain and hence can be embedded in a division ring .",
    "now a standard result about single - tape weighted automata with transition weights in a division ring is that such an automaton with @xmath84 states is equivalent to the zero automaton if and only if it assigns zero weight to all words of length @xmath84 ( see  ( * ? ? ?",
    "* pp143145 ) and  @xcite ) . applying this result to the unary weighted automaton defined by @xmath181 , @xmath177 , and @xmath182",
    ", we see that ( [ eq : goal2 ] ) is implied by @xmath208 but , since @xmath205 is a homomorphism , ( [ eq : goal3 ] ) is implied by @xmath209 this concludes the proof .",
    "theorem  [ thm : harju ] immediately follows from proposition  [ prop : main ] .",
    "the difference between our proof of theorem  [ thm : harju ] and the proof in  @xcite is that we consider a family of homomorphisms of @xmath175 into ore domains of matrices  the maps @xmath205rather than a single `` global '' embedding of @xmath175 into a division ring of power series over a product of free groups . none of the maps @xmath205 is an embedding , but it suffices to use the lower bound on the degrees of polynomial identities in proposition  [ prop : sc - al ] in lieu of injectivity . on the other hand , the fact that @xmath210 satisfies a polynomial identity makes it relatively straightforward to exhibit an embedding of the latter into a division ring .",
    "as we now show , this approach leads directly to a very simple randomised polynomial - time algorithm for solving the equivalence problem .",
    "[ rem : difference ]      proposition  [ prop : main ] reduces the problem of checking multiplicity equivalence of multitape automata @xmath6 and @xmath35 to checking the partially commutative identities @xmath192 , @xmath211 in @xmath175 .",
    "since each identity has degree less than @xmath84 , applying proposition  [ prop : sc - al ] ( ( iii ) @xmath202 ( iv ) ) we see that @xmath6 and @xmath35 are equivalent if and only if @xmath212    each equation @xmath213 in ( [ eq : pit ] ) asserts the zeroness of an @xmath101 matrix of polynomials in the commuting variables @xmath102 , with each polynomial having degree less than @xmath84 .",
    "suppose that @xmath214 for some @xmath131say the matrix entry with index @xmath215 contains a monomial with non - zero coefficient . by ( [ eq : psi2 ] ) such a monomial",
    "determines a term @xmath216 with non - zero coefficient in @xmath167 , and by proposition  [ prop : matrix ] we have @xmath217 .",
    "we can verify each polynomial identity in ( [ eq : pit ] ) , outputting a monomial of any non - zero polynomial , using a classical identity testing procedure based on the _ isolation lemma _ of  @xcite .",
    "there is a randomised polynomial - time algorithm that inputs a multilinear polynomial @xmath218 , represented as an algebraic circuit , and either outputs a monomial of @xmath8 or that @xmath8 is zero .",
    "moreover the algorithm is always correct if @xmath8 is the zero polynomial and is correct with probability at least @xmath219 if @xmath8 is non - zero .",
    "[ lem : pit ]    the idea behind the algorithm described in lemma  [ lem : pit ] is to choose a weight @xmath220 for each variable @xmath221 of @xmath8 independently and uniformly at random . defining the weight of a monomial @xmath222 to be @xmath223 , then with probability at least @xmath219",
    "there is a unique minimum - weight monomial .",
    "the existence of a minimum - weight monomial can be detected by computing the polynomial @xmath224 , since a monomial with weight @xmath225 in @xmath8 yields a monomial of degree @xmath225 in @xmath226 . using similar ideas one can moreover determine the composition of a minimum - weight monomial in @xmath8 .",
    "applying lemma  [ lem : pit ] we obtain our main result :    let @xmath0 be fixed",
    ". then multiplicity equivalence of @xmath0-tape automata can be decided in randomised polynomial time .",
    "moreover there is a randomised polynomial algorithm for the function problem of computing a distinguishing input given two inequivalent automata .",
    "[ thm : main ]    the reason for the requirement that @xmath0 be fixed is because the dimension of the entries of the transition matrix @xmath177 , and thus the number of polynomials to be checked for equality , depends exponentially on @xmath0 .    the above use of the isolation technique generalises  @xcite , where it is used to generate counterexample words of weighted single - tape automata .",
    "a very similar application in  @xcite occurs in the context of identity testing for non - commutative algebraic branching programs .",
    "we have given a simple randomised algorithm for deciding language equivalence of deterministic multitape automata and multiplicity equivalence of nondeterministic automata .",
    "the algorithm arises directly from algebraic constructions used to establish decidability of the problem , and runs in polynomial time for each fixed number of tapes .",
    "we leave open the question of whether there is a deterministic polynomial - time algorithm for deciding the equivalence of deterministic and weighted multitape automata with a fixed number of tapes .",
    "( recall that the 2-tape case is already known to be in polynomial time  @xcite . )",
    "we also leave open whether there is a deterministic or randomised polynomial time algorithm for solving the problem in case the number of tapes is not fixed .",
    "we first recall a construction of a _ crossed product division algebra _ from  ( * ? ? ?",
    "* proposition 1.1 ) .",
    "let @xmath227 be commuting indeterminates and write @xmath228 for the field of rational functions obtained by adjoining @xmath229 to @xmath230 .",
    "furthermore , let @xmath231 be a field extension whose galois group is generated by commuting automorphisms @xmath232 , each of order @xmath84 , which has fixed field @xmath1 .",
    "( such an extension can easily be constructed by adjoining extra indeterminates to @xmath1 , and having the @xmath233 be suitable permutations of the new indeterminates . ) for each @xmath156 , @xmath234 , write @xmath235 for the subfield of @xmath236 that is fixed by each @xmath237 for @xmath238 ; then define @xmath239 to be the @xmath1-algebra generated by @xmath235 and @xmath240 such that @xmath241 for all @xmath242 .",
    "then each @xmath239 is a simple algebra of dimension @xmath243 over its centre @xmath1 .",
    "it is shown in  ( * ? ? ?",
    "* proposition 1.1 ) that the tensor product @xmath244 can be characterised as the localisation of an iterated skew polynomial ring  and is therefore a domain .        noting that the @xmath239 are all isomorphic as @xmath1-algebras , let @xmath248 be a basis of each @xmath239 over its centre @xmath1 . for each variable @xmath12 appearing in @xmath8 , introduce commuting indeterminates @xmath249 , @xmath250 , and write @xmath251 .",
    "then we can express @xmath8 in the form @xmath252 where @xmath253 .    by assumption",
    ", each @xmath254 evaluates to @xmath9 for all values of the @xmath249 in @xmath1 .",
    "since @xmath1 is an infinite field it follows that each @xmath254 must be identically zero .",
    "now we can also regard @xmath248 as a basis for @xmath255 over @xmath92 . then by ( [ eq : formula ] ) , @xmath10 also on @xmath256 .      recall that if @xmath92 is an algebraically closed field extension of @xmath1 , then we have @xmath257 for each @xmath156 . by proposition  [ prop :",
    "extend ] it follows that an identity @xmath10 holds in @xmath246 if and only if it holds in @xmath258 .",
    "but by proposition  [ prop : sc - al ] the latter holds if and only if @xmath100 is identically zero .    to prove the proposition it will suffice to show that the image of @xmath99 contains no zero divisors , since the latter is a surjective map . now given @xmath259 with @xmath260",
    ", we have that @xmath261 satisfies the identity @xmath262 .",
    "since @xmath261 is a domain , it follows that it satisfies the identity @xmath263 for any @xmath264 in @xmath265 .",
    "but now @xmath266 satisfies the identity @xmath263 for any @xmath264 .",
    "since @xmath264 can take the value of an arbitrary matrix ( in particular , any matrix unit ) it follows that @xmath267 satisfies either the identity @xmath10 or @xmath268 , and so , by proposition  [ prop : sc - al ] again , either @xmath269 or @xmath270 .",
    "v.  arvind and p.  mukhopadhyay . derandomizing the isolation lemma and lower bounds for circuit size . in _ approx - random",
    "_ , volume 5171 of _ lecture notes in computer science _ , pages 276289 .",
    "springer , 2008 ."
  ],
  "abstract_text": [
    "<S> the decidability of determining equivalence of deterministic multitape automata ( or transducers ) was a longstanding open problem until it was resolved by harju and karhumki in the early 1990s . </S>",
    "<S> their proof of decidability yields a * co - np * upper bound , but apparently not much more is known about the complexity of the problem . in this paper </S>",
    "<S> we give an alternative proof of decidability , which follows the basic strategy of harju and karhumki but replaces their use of group theory with results on matrix algebras . from our proof </S>",
    "<S> we obtain a simple randomised algorithm for deciding language equivalence of deterministic multitape automata and , more generally , multiplicity equivalence of nondeterministic multitape automata . </S>",
    "<S> the algorithm involves only matrix exponentiation and runs in polynomial time for each fixed number of tapes . if the two input automata are inequivalent then the algorithm outputs a word on which they differ . </S>"
  ]
}
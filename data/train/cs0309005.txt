{
  "article_text": [
    ".summary of symbols . [ cols= \" < , < \" , ]",
    "while the experiments presented in the previous section covered few datasets and a small proportion of possible parameters for fsindex creation , it can still be observed that fsindex performed well according to many theoretical benchmarks as well as the actual search times .",
    "not only did it perform much better than the other indexing schemes tested but it has proven itself to be very usable in practice : it does not take too much space ( 5 bytes per residue in the original sequence dataset plus a fixed overhead of the @xmath0 array ) , considerably accelerates common similarity queries and the same index can be used for multiple similarity measures without significant loss of performance . in the remainder of the current section",
    "we will examine some salient features of the experimental results .",
    "the most striking feature of figures [ fig : fsperf]-[fig : fstimings ] is the apparent power - law dependence of the number of bins scanned and number of fragments scanned on the number of actual neighbours retrieved , manifesting as straight lines on the corresponding graphs on the log - log scale . for each index , the slopes of the graphs of running time , bins scanned and fragments scanned are very close , implying that the same power law governs the dependence of all three variables on the number of neighbours retrieved .",
    "the exponents are 0.81 for length 6 , between 0.57 and 0.63 for length 9 , and about 0.45 for length 12 . while a rigorous theory , especially in the context of quasi - metrics , is still missing , we believe that the exponent is related to the ` dimensionality ' of the index . for more detailed explanation",
    "we refer the reader to our theoretical exposition on indexing schemes @xcite .",
    "patricia - like subindexing of bins was introduced in order to accelerate scanning of bins containing many duplicate or highly similar fragments .",
    "figures [ fig : fsperf ] ( c , f , i ) and [ fig : fsscale ] ( c ) show that there are two main factors influencing the proportion of residues scanned out of the total number of residues in the fragments belonging to the bins needed to be scanned : the ( average ) size of bins and the number of alphabet partitions at starting positions .",
    "instances of fsindex having many partitions at first few positions perform well ( ` speq06 ` , ` spna09 ` ) , those that have few partitions with many letters per partition , less so .",
    "clearly , if a bin has a single letter partition at its first position , the distance at that position need be only retrieved once , at the start of the scan , independently of the number of fragments the bin contains .",
    "the effects for the second and subsequent positions are less prominent , if only for the reason that using many partitions would result in many bins being empty .",
    "the actual composition of the dataset is also important , as figure [ fig : fsscale ] ( e ) attests : although same partitions are used and ` nr0288k ` is almost twice as large , ` speq09 ` scans fewer characters .",
    "the possible reason lies in the nature of swissprot , which , as a human curated database , is biased towards the well - researched sequences which are more related among themselves while not necessarily being representative of the set of all known proteins . on the other hand , ` nr0288k ` is a random sample from the ` nr ` database which is exactly the non - redundant set of all known proteins .    in our evaluations ,",
    "the average proportion of residues scanned per bin varies from 30% ( ` speq06 ` , length 6 ) to over 85% ( ` nr018k ` , length 9 ) .",
    "the percentage of characters scanned grows slowly with increase of the number of neighbours retrieved , most probably because the number of bins accessed also grows , requiring that at least one full sequence is scanned .",
    "to summarise , subindexing of bins does produce some savings , the exact amount depending on the dataset and alphabet partitioning .",
    "however , and this is further attested by poor performance of the suffix array compared to fsindex ( table [ tbl : fscomp ] ) , the good performance of fsindex is mostly due to alphabet partitioning .",
    "table [ tbl : fsmatdata ] indicates very little difference in performance of the same instance of fsindex with respect to different similarity measures .",
    "this should not be a surprise because the blosum matrices are indeed very similar , modeling the same phenomenon in slightly different ways but generally retaining the same groupings of amino acids .",
    "the pssm - based searches also performed well , mainly because the pssms are usually constructed out of sets of sequences that are strongly conserved at least in one or two positions , and hence , in those positions , the ` distances ' to all other clusters are so large that many branches of the implicit search tree can be pruned .",
    "unlike both m - tree and mvp - tree , as well as most other known metric or spatial access methods @xcite , fsindex does not have a balanced tree .",
    "therefore , the expected average and worst - case search time complexity is @xmath1  the overhead is proportional to @xmath2 , the number of inner nodes .",
    "based on these considerations , it appears that fsindex is not scalable for queries of a fixed radius",
    ". however , the performance can be to a large extent controlled by the choice of alphabet partitions and hence some scalability can be achieved by using more partitions for larger datasets in order to reduce the scanning time while incurring some additional overhead .",
    "figure [ fig : fsscale ] ( b ) indicates that fsindex is scalable with respect to the number of nearest neighbours retrieved  the number of residues needed to be scanned grows sublinearly with dataset size ( in fact , the exponent is 0.25 to 0.3 ) .",
    "the exponent for the growth of the number of scanned points ( graphs not shown here ) is about 0.4 , indicating that using patricia - like structure improves scalability .",
    "the most likely reason for sublinear growth of the number of items needed to be scanned is that the search radius needed to retrieve a fixed number of nearest neighbours decreases with dataset size , requiring fewer bin accesses .",
    "results of subsection [ subsec : fscomp ] indicate that fsindex decisively outperforms all other indexing schemes considered .",
    "m - tree performed the worst , needing to scan 1.3 million fragments of length 10 in order to retrieve the nearest neighbour .",
    "the performance of mvp - tree is not much better , taking into account the dimensionality : it requires scanning about 1 million fragments of length 9 to retrieve the nearest neighbour .",
    "suffix array was generally performing better than mvp - tree , except for retrieving the nearest neighbour of length 6 .    in the case of suffix arrays , it is clear that large alphabet and relatively small dataset are responsible for relatively poor performance .",
    "also note that suffix trees ( and hence suffix arrays ) generally are not good approximations of the geometry with respect to @xmath3-type distances  two fragments lacking a common prefix may have a small distance .",
    "it should be noted that performance of suffix array based scheme appears to improve with fragment length compared to fsindex .",
    "the poor performance of m - tree and mvp - tree is somewhat surprising because mao , xu , singh and miranker @xcite have recently proposed using exactly m - tree for fragment similarity searches .",
    "however , on closer inspection , several differences appear .",
    "first , mao , xu , singh and miranker use a different metric .",
    "more importantly , they use a significantly improved m - tree creation algorithms . finally ,",
    "if their results are compared with those from figure [ fig : fmtnnperf ] ( this can be done at least approximately because the same fragment length was used and the size of the yeast proteome dataset used in @xcite was very close to the size of swissprot sample used in our experiment ) , it appears that there is no more than 10-fold improvement .",
    "while this is quite significant , the total performance appears still worse than that of fsindex . for more detailed comparisons it would be necessary to obtain the code of the improved m - tree from @xcite and",
    "run a full suite of comparison experiments .",
    "an interesting possibility would be to try and combine our approach with the multi resolution string ( mrs ) index structure for string datasets proposed by kahveci and singh @xcite in a general context and further adapted for protein database searches , cf .",
    "e.g. @xcite .",
    "the mrs scheme is based on mapping a string dataset to a lower - dimensional space of sequences of integers by means of the first few haar wavelet transform coefficients . in the context of protein sequence databases",
    ", the first wavelet coefficient corresponds to the well - known concept of the aminoacid content of a fragment , while the second coefficient is the difference between the aminoacid content vectors of the first and the second halves of a given fragment .",
    "the mrs scheme applies to string datasets in any possible alphabet , and does not seem to capture the intrinsic geometry of the alphabet itself .",
    "for this reason , it appears to us that this approach and ours are `` complimentary '' to each other , and combining them in the context of datasets of protein fragments could result in a further performance gain .",
    "performance of the branch - and - bound algorithm depends on the order of nodes visited  it is to a great advantage if the nodes containing data points closest to the query are visited first so that the bounding radius becomes small early on . a frequently used solution @xcite is to traverse the tree breadth - first , keeping the nodes to be visited in a second priority queue , where the priority of a node is given by the upper bound of the distance of its covering set from the query .",
    "the second priority queue is not used for the fsindex based @xmath4nn search .",
    "since the implicit tree is heavily unbalanced , the branches with smallest depth are visited first with a similar effect without the overhead of the second priority queue .",
    "the visiting order of nodes is ensured in the outer loop of the checknode function where the index @xmath5 starts at @xmath6 , decreasing to @xmath7 ( algorithm [ alg : fschkbin ] ) .",
    "since the order does not affect the range search performance , the same code can be used for range search .    while queries based on more than one similarity measure can be used on a single fsindex , it is to be expected that similarity measures different from the one originally used to determine the partitions would have worse performance .",
    "general protein sequence search involves retrieval of sequences based on gapped similarity measure .",
    "retrieval based on sequential scan with respect to the smith - waterman local similarity score @xcite , the most commonly used similarity measure , is infeasible for large datasets and a number of heuristic search tools were proposed , the most famous being the ncbi blast @xcite .    to perform a database search , blast takes the query sequence and divides it into very short fragments ( length 3 is common for proteins ) .",
    "it then searches for close matches of these fragments to the fragments of the database sequences .",
    "when a match is found , it attempts to extend this ` seed ' in order to produce a longer , gapped alignment .",
    "recently , there have been a number of attempts to use indexing schemes on dna or protein fragments so as to increase the length of seeds and hence accelerate the search @xcite .",
    "efficient performance of fsindex also recommends it for such purpose , by taking seeds of length 6 - 12 . by taking longer seeds ,",
    "the total number of seeds can be reduced , leading to less time being spent extending seeds that are subsequently rejected .",
    "we leave the follow - up on this idea for a subsequent investigation .",
    "the efforts of the data engineering community in constructing indexing schemes for similarity - based information retrieval have been largely concentrated either on generic indexing schemes which would work for an arbitrary metric ( or normed ) space @xcite , or else on q - grams or suffix tree - based schemes for string similarity @xcite .",
    "metric space indexing schemes are often subject to the curse of dimensionality ( as witnessed in a part of our present investigation ) , while the suffix tree - based schemes are very efficient but may suffer from large use of memory , although we are seeing good attempts towards removing this limitation @xcite    the fsindex scheme proposed in our paper seems to explore the geometry of datasets of short protein fragments in a very fortunate way .",
    "we believe that the efficiency of the scheme can be further improved , but already in its present form it can be put to a number of uses .",
    "we intend to use fsindex in the first stage of searching the complete protein fragment datasets for functional motifs .",
    "we believe that alphabet reduction can be used in other indexing methods , in particular in large suffix trees @xcite if some space reduction is desired at a very little loss in performance .",
    "another promising application is to use fsindex for seeds in local similarity search tools .",
    "the proposed indexing scheme has a theoretical significance . in @xcite",
    "we have developed a general approach to building new indexing schemes from old by applying a number of fundamental operations , and explained how a a prototype version of the fsindex scheme can be obtained in this way from the so - called projective reduction to a suffix tree .",
    "it is conceivable that very efficient indexing schemes can be engineered in the future in the same manner by properly combining a number of very simple tools .",
    "we believe that fsindex is a successful realization of this idea .",
    "in particular , we have made public a new software tool for assigning biological function to protein fragments , called pfmfind , based on fsindex as a low - level core component .",
    "the source code is available at http://www.vuw.ac.nz/biodiscovery/publications/pfmfind/index.aspx .",
    "the authors are grateful to bill jordan for stimulating discussions .",
    "the investigation was supported by the university of ottawa research funds .",
    "we especially thank the high performance computing virtual laboratory ( hpcvl ) which provided us with computational resources required to complete this investigation .",
    "the first named author ( a.s . ) was also supported by a bright future phd scholarship awarded by the nz foundation for research , science and technology jointly with the fonterra research centre and by victoria university of wellington research funds .",
    "we also thank marco patella for providing us with the code for mvp - tree .",
    "comments of two anonymous referees which have led to a large number of improvements are much appreciated .",
    "kevin  s. beyer , jonathan goldstein , raghu ramakrishnan , and uri shaft .",
    "when is `` nearest neighbor '' meaningful ? in _ proceedings of 7th international conference on database theory ( icdt99 ) ( jerusalem , israel , january ) _ , pages 217235 , 1999 .",
    "arnab bhattacharya , tolga can , tamer kahveci , ambuj k. singh , and yuan - fang wang .",
    "progress : simultaneous searching of protein databases by sequence and structure . in : _",
    "proceedings of the 2004 pacific symposium on biocomputing _ , 264275 .",
    "zhiqiang bi , christos faloutsos , and flip korn .",
    "the `` dgx '' distribution for mining massive , skewed data . in _ proceedings of the seventh acm sigkdd international conference on knowledge discovery and data mining ( san francisco , california , august ) _ , pages 1726 , 2001 .",
    "brigitte boeckmann , amos bairoch , rolf apweiler , marie - claude blatter , anne estreicher , elisabeth gasteiger , maria  j. martin , karine michoud , claire odonovan , isabelle phan , sandrine pilbout , and michel schneider . .",
    ", 31(1):365370 , 2003 .",
    "tolga bozkaya and z.  meral zsoyoglu .",
    "distance - based indexing for high - dimensional metric spaces . in _ proceedings of the 1997 acm",
    "sigmod international conference on management of data ( tucson , arizona , may ) _ , pages 357368 , 1997 .",
    "paolo ciaccia , marco patella , and pavel zezula .",
    ": an efficient access method for similarity search in metric spaces . in _ proceedings of 23rd international conference on very large data bases ( vldb97 ) , ( athens , greece , august ) _ , pages 426435 , 1997 .",
    "paolo ciaccia , marco patella , and pavel zezula .",
    "processing complex similarity queries with distance - based access methods . in hans - jrg",
    "schek , felix saltor , isidro ramos , and gustavo alonso , editors , _ proceedings of the 6th international conference on extending database technology ( edbt98 ) ( valencia , spain , march ) _ , pages 923 .",
    "springer verlag , march 1998 .",
    "m.  o. dayhoff , r.  m. schwartz , and b.  c. orcutt . a model of evolutionary change in proteins . in m.",
    "o. dayhoff , editor , _ atlas of protein sequence and structure _ , volume  5 , chapter  22 , pages 345352 . national biomedical research foundation , 1978 .                                  hans - peter  a. knzi .",
    "nonsymmetric distances and their associated topologies : about the origins of basic ideas in the area of asymmetric topology . in _ handbook of the history of general topology , vol .",
    "3 _ , volume  3 of _ hist .",
    "_ , pages 853968 .",
    "dordrecht , 2001 .",
    "rui mao , weijia xu , neha singh , and daniel  p. miranker .",
    "an assessment of a metric space database index to support sequence homology . in _",
    "3rd ieee international symposium on bioinformatics and bioengineering ( bibe 2003 ) , ( bethesda , maryland , march 2003 ) _ , pages 375384 , 2003 .",
    "timos  k. sellis , nick roussopoulos , and christos faloutsos .",
    "the r+-tree : a dynamic index for multi - dimensional objects . in _ proceedings of 13th international conference on very large data bases ( vldb87 ) ( brighton , england , september ) _ , pages 507518 , 1987 .",
    "k.  sjlander , k.  karplus , m.  brown , r.  hughey , a.  krogh , i.s .",
    "mian , and d.  haussler .",
    "dirichlet mixtures : a method for improving detection of weak but significant protein sequence homology . , 12(4):327345 , 1996 .",
    "esko ukkonen .",
    "constructing suffix trees on - line in linear time . in _ proceedings of the ifip 12th world computer congress on algorithms , software , architecture - information processing 92 , volume 1 ( madrid , spain ,",
    "september ) _ , pages 484492 , 1992 .",
    "david  l wheeler , deanna  m church , ron edgar , scott federhen , wolfgang helmberg , thomas  l madden , joan  u pontius , gregory  d schuler , lynn  m schriml , edwin sequeira , tugba  o suzek , tatiana  a tatusova , and lukas wagner . .",
    ", 32 database issue : d3540 , 2004 .",
    "peter  n. yianilos .",
    "data structures and algorithms for nearest neighbor search in general metric spaces . in _ proceedings of the fourth annual acm / sigact - siam symposium on discrete algorithms ( austin , texas , january ) _ , 1993 ."
  ],
  "abstract_text": [
    "<S> we propose a family of very efficient hierarchical indexing schemes for ungapped , score matrix - based similarity search in large datasets of short ( 4 - 12 amino acid ) protein fragments . </S>",
    "<S> this type of similarity search has importance in both providing a building block to more complex algorithms and for possible use in direct biological investigations where datasets are of the order of 60 million objects . </S>",
    "<S> our scheme is based on the internal geometry of the amino acid alphabet and performs exceptionally well , for example outputting 100 nearest neighbours to any possible fragment of length 10 after scanning on average less than one per cent of the entire dataset . + </S>",
    "<S> * keywords : * similarity search ; indexing ; protein fragments ; quasi - metrics </S>"
  ]
}
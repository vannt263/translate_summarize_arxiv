{
  "article_text": [
    "label placement and geographic network visualization are classical problems in cartography , which independently of each other have received the attention of computer scientists .",
    "label placement usually deals with annotating point , line or area features of interest in a map with text labels such that the associations between the features and the labels are clear and the map is kept legible @xcite . geographic network visualization , on the other hand",
    ", often aims at a geometrically distorted representation of reality that allows information about connectivity , travel times , and required navigation actions to be retrieved easily . computing a good network visualization",
    "is thus related to finding a layout of a graph with certain favorable properties @xcite .",
    "for example , to avoid visual clutter in metro maps , an _ octilinear _ graph layout is often chosen , in which the orientation of each edge is a multiple of 45@xmath0 @xcite .",
    "alternatively , one may choose a _ curvilinear _ graph layout , that is , to display the metro lines as curves @xcite .",
    "computing a graph layout for a metro map and labeling the stops have been considered as two different problems that can be solved in succession @xcite , but also integrated solutions have been suggested @xcite .",
    "nevertheless , in practice , metro maps are often drawn manually by cartographers or designers , as the existing algorithms do not achieve results of sufficient quality in adequate time .",
    "for example , nllenburg and wolff @xcite report that their method needed 10 hours and 31 minutes to compute a labeled metro map of sydney that they present in their article , while an unlabeled map for the same instance was obtained after 23 minutes  both results were obtained without proof of optimality but with similar optimality gaps . on the other hand wang and chi @xcite present an algorithm that creates the graph layout and labeling within one second , but they can not guarantee that labels do not overlap each other or the metro lines .",
    "an integrated approach to computing a graph layout and labeling the stops allows consideration to be given to all quality criteria of the final visualization . on the other hand ,",
    "treating both problems separately will probably reduce computation time .",
    "moreover , we consider the labeling of a metro map as an interesting problem on its own , since , in some situations , the layout of the network is given as part of the input and must not be changed . in a semi - automatic workflow , for example",
    ", a cartographer may want to draw or alter a graph layout manually before using an automatic method to place labels , probably to test multiple different labeling styles with the drawing .",
    "hence , a labeling algorithm is needed that is rather flexible in dealing with different labeling styles . in this paper , we are given the layout of a metro map consisting of several metro lines on which stops ( also called stations ) are located .",
    "for each stop we are further given its name , which should be placed close to its position .",
    "we first introduce a versatile and general model for labeling metro maps ; see section  [ sec : model ] . like many labeling algorithms for point sets @xcite ,",
    "our algorithm uses a discrete set of candidate labels for each point .",
    "often , each label is represented by a rectangle wrapping the text .",
    "since we also want to use curved labels , however , we represent a label by a simple polygon that approximates a _ fat curve _ , that is , a curve of certain width reflecting the text height .",
    "we then prove that even in that simple model labeling a single metro line is np - hard considering different labeling styles .",
    "hence , we restrict the set of candidates satisfying certain properties , which allows us to solve the problem on one metro line  @xmath1 in  @xmath2 time , where  @xmath3 is the number of stops of  @xmath1 ; see section  [ sec : single - line ] .",
    "this algorithm optimizes the labeling with respect to a cost function that is based on imhof s @xcite classical criteria of cartographic quality . utilizing that algorithm",
    ", we present an efficient heuristic for labeling a metro map consisting of multiple metro lines ; see section  [ sec : multi - lines ] .",
    "our method is similar to the heuristic presented by kakoulis and tollis  @xcite , in the sense that it discards some label candidates to establish a set of preconditions that allow for an efficient exact solution .",
    "our model of quality is more general than the one of kakoulis and tollis , however , as it not only takes the quality of individual labels but also the quality of pairs of labels for consecutive metro stations into account .",
    "finally , we evaluate our approach presenting experiments conducted on realistic metro maps ; see section  [ sec : evaluation ] .",
    "note that `` stops '' on `` metro lines '' can refer more generally to points of interest on the lines of any kind of a network map .",
    "we address labeling styles for octilinear graph layouts and curvilinear graph layouts that use bzier curves . the more general model behind our method , however , subsumes but is not limited to these particular styles .",
    "we assume that the metro lines are given by directed , non - self - intersecting curves in the plane described by polylines , which for example have been derived by approximating bzier curves .",
    "we denote that set of metro lines by @xmath4 .",
    "further , the stops of each metro line  @xmath5 are given by an ordered set  @xmath6 of points on  @xmath1 going from the beginning to the end of  @xmath1 .",
    "for two stops  @xmath7 we write  @xmath8 if @xmath9 lies before  @xmath10 .",
    "we denote the union of the stops among all metro lines by @xmath11 and call the pair  @xmath12 a _ metro map_.    for each stop  @xmath13 we are further given a name that should be placed close to it .",
    "in contrast to previous work , we do not follow traditional map labeling abstracting from the given text by bounding boxes .",
    "instead we model a _ label _",
    "@xmath14 of a stop  @xmath13 as a simple polygon .",
    "for example , a label could have been derived by approximating a fat curve prescribing the name of the stop ; see fig .  [",
    "fig : curved_candidates ] . for each stop",
    "@xmath9 we are given a set  @xmath15 of labels , which we also call  _ candidates _ of  @xmath9 .",
    "the set @xmath16 is denoted by  @xmath17 .",
    "since `` names should disturb other map content as little as possible''@xcite , we strictly forbid overlaps between labels and lines as well as label - label overlaps .",
    "further , each stop must be labeled .",
    "hence , a set  @xmath18 is called a _ labeling _",
    "if    no two labels of  @xmath19 intersect each other ,    no label  @xmath20 intersects any metro line  @xmath21 , and    for each stop  @xmath13 there is exactly one label  @xmath22 .    _ given : _",
    "metro map  @xmath12 , candidates  @xmath17 and cost function  @xmath23 .",
    "_ find , if it exists : _",
    "optimal labeling  @xmath19 of @xmath24 , i.e. , @xmath25 for any labeling  @xmath26 .",
    "the model allows us to create arbitrarily shaped label candidates for a metro map . in our evaluation",
    "we have considered two different _ labeling styles_. the first style , octilinstyle , creates for each stop a set of octilinear rectangles as label candidates ; see fig .",
    "[ fig : octilinear_candidates ] .",
    "we use that style for octilinear maps . the second style , curvedstyle ,",
    "creates for each stop a set of fat bzier curves as label candidates , which are then approximated by simple polygons ; see fig .",
    "[ fig : curved_candidates ] .",
    "we use that style for curvilinear metro maps , in order to adapt the curvilinear style of the metro map .",
    "the basic idea is that a label perpendicularly emanates from a stop with respect to its metro line and then becomes horizontal to sustain legibility . in the following section we motivate our choice of candidates based on cartographic criteria and",
    "give detailed technical descriptions for both labeling styles .",
    "we extracted the rules for generating label candidates from imhof s `` general principles and requirements '' for map labeling @xcite .",
    "for schematic network maps , the need for `` legibility '' implies that we must not destroy the underlying design principle with clutter . to this end",
    ", we generate candidate labels that adhere to the schematics of the network .",
    "that is , we use straight horizontal and diagonal labels with octilinear layouts and curved labels with curvilinear layouts .",
    "we now describe more precisely , how we defined the labeling styles curvedstyleand octilinstyle , which are used for curvilinear layouts and octilinear layouts , respectively .",
    "* curvilinear metro maps . * for curvedstyle ,",
    "assume that the given metro map is curvilinear . in order to achieve a `` clear graphic association '' between a label and the corresponding point @xmath27",
    ", we construct the simple polygon prescribing a candidate label based on a curve @xmath14 ( possibly a straight - line segment ) that emanates from @xmath27 .",
    "the candidate label itself is a continuous section of @xmath14 that does not directly start in @xmath27 but at a certain configurable distance from it .",
    "we define the end of the candidate label on @xmath14 based on the text length and assign a non - zero width to the curve section to represent the text height . in the case that @xmath27 lies on a single curved line @xmath1 , we require that @xmath14 and @xmath1 are perpendicular in @xmath27 to enhance the angular resolution of the final drawing . by bending @xmath14 towards the horizontal direction ,",
    "we avoid steep labels .",
    "we approximate  @xmath14 by a simple polygon consisting of a constant number of line segments .",
    "we now describe the construction of a single candidate more specifically . for each stop",
    "@xmath9 of each metro line  @xmath1 we create a constant number of curved labels adapting the curvilinear style of the metro map .",
    "the basic idea is that a label perpendicularly emanates from  @xmath9 with respect to  @xmath1 and then becomes horizontal to sustain legibility ; see fig .",
    "[ fig : curved_candidates ] .",
    "let  @xmath28 be the normalized normal vector of  @xmath1 at  @xmath9 .",
    "further , let @xmath29 and @xmath30 be pre - defined constants . for  @xmath31 we define the fat cubic bzier curve  @xmath32 by the following four control points",
    "; see fig .",
    "[ fig : curved_candidates ] .",
    "@xmath33 , where @xmath34 , @xmath35 , and  @xmath36 if  @xmath37 and  @xmath38 otherwise .",
    "we define the thickness of  @xmath39 to be the pre - defined height of a label .",
    "let  @xmath40 be the sub - curve of  @xmath32 that starts at @xmath41 and has the length of the name of  @xmath9 and let  @xmath42 be the curve when mirroring  @xmath40 at  @xmath9 .",
    "further , let  @xmath43 be the length of the longest name of a stop in  @xmath11 and let  @xmath44 .",
    "if  @xmath45 has an orientation less than or equal to  @xmath46 , we set  @xmath47 and otherwise @xmath48 .",
    "hence , if  @xmath45 is almost vertical and  @xmath1 is therefore almost horizontal at  @xmath9 , we also add the labels  @xmath49 pointing into the opposite @xmath50-direction than  @xmath45 . in our experiments",
    "we did not let the labels start at  @xmath9 , but with a certain offset to  @xmath9 , in order to avoid intersections with  @xmath1 .    * octilinear metro maps . * for octilinstyleassume that the metro map is octilinear .",
    "we model the labels as horizontal and diagonal rectangles .",
    "let  @xmath51 be the line segment of  @xmath1 on which  @xmath9 lies and let  @xmath52 be an axis - aligned rectangle that is the bounding box of the name of  @xmath9 .",
    "further , let  @xmath53 be a circle around  @xmath9 with a pre - defined radius .",
    "we place the labels such that they touch the border of  @xmath53 , but they do not intersect the interior of  @xmath53 .",
    "hence , the labels have a pre - defined offset to  @xmath9 .",
    "if  @xmath51 is horizontal , we place five copies  @xmath54 of  @xmath52 above  @xmath51 as follows ;  see fig .",
    "[ fig : octilinear_candidates : horizontal ] .",
    "we place  @xmath55 , @xmath56 and @xmath57 such that the left - bottom corner of  @xmath55 , the midpoint of @xmath56 s bottom edge and the right - bottom corner of  @xmath57 coincides with the topmost point of  @xmath53 .",
    "we rotate  @xmath58 by  @xmath59 counterclockwise and place it at  @xmath53 such that the midpoint of its left side touches  @xmath53 , i.e. , that midpoint lies on a diagonal through  @xmath9 .",
    "finally , @xmath60 is obtained by mirroring @xmath58 at the vertical line through  @xmath9 . mirroring  @xmath54 at the horizontal line through  @xmath9",
    ", we obtain the rectangles  @xmath61 , respectively .",
    "we then set  @xmath62 .",
    "if  @xmath51 is diagonal , we create the candidates in the same manner as in the case that  @xmath51 is horizontal ; see fig .",
    "[ fig : octilinear_candidates : diagonal ]",
    ". however , we only create the candidates  @xmath56 and @xmath63 and the candidates that are horizontally aligned .",
    "if  @xmath51 is vertical , we place three copies  @xmath64 of  @xmath52 to the right of  @xmath51 as follows ; see fig .",
    "[ fig : octilinear_candidates : vertical ] . we rotate  @xmath55 by @xmath59 counterclockwise and @xmath56 by @xmath59 clockwise .",
    "we place  @xmath55 , @xmath56 , @xmath57 at  @xmath53 such that the midpoints of their left edges touch  @xmath53 . mirroring  @xmath55 , @xmath56 , @xmath57 at the vertical line through  @xmath9 ,",
    "defines the rectangles  @xmath65 , @xmath63 and @xmath66 .",
    "we set  @xmath67 .    in case",
    "that  @xmath9 is a crossing of two metro lines , we create the candidates differently . if  @xmath9 is the crossing of two diagonals , we create the candidates as shown in fig .",
    "[ fig : octilinear_candidates : dcrossing ] . if  @xmath9 is the crossing of a horizontal and a vertical segment , we create the labels as shown in fig .",
    "[ fig : octilinear_candidates : hvcrossing ] .",
    "if @xmath9 is the crossing of a diagonal and horizontal segment , we create the labels as shown in fig .",
    "[ fig : octilinear_candidates : hdcrossing ] .",
    "we analogously create the labels , if @xmath9 is the crossing of a vertical and a diagonal segment .",
    "* remark : * if a stop lies on multiple metro lines , then we can apply similar constructions , where the labels are placed on the angle bisectors of the crossing lines .",
    "we first study the computational complexity of metromaplabelingassuming that the labels are either based on  octilinstyleor curvedstyle .",
    "in particular we show that the problem is np - hard , if the metro map consists of only one line .",
    "the proof uses a reduction from the np - complete problem _ _ monotone planar 3sat__@xcite .",
    "based on the given style , we create for the set  @xmath68 of 3sat clauses a metro map  @xmath12 such that  @xmath12 has a labeling if and only if  @xmath68 is satisfiable .",
    "the proof can be easily adapted to other labeling styles .",
    "note that the complexity of labeling points using a finite set of axis - aligned rectangular label candidates is a well - studied np - complete problem , e.g. , see  @xcite .",
    "however , since we do not necessarily use axis - aligned rectangles as labels and since for the considered labeling styles the labels are placed along metro lines , it is not obvious how to reduce a point - feature labeling instance on an instance of metromaplabeling . in order to show the np - hardness",
    ", we prove that it is np - complete to decide whether a metro map @xmath12 has a labeling based on the given labeling style .",
    "metromaplabelingis np - complete , if the labels are based on  octilinstyleor  curvedstyle , even if the metro map has only one metro line .     with clauses",
    "@xmath69 , @xmath70 , @xmath71 and @xmath72 represented as a metro map .",
    "truth assignment is @xmath73 , @xmath74 , @xmath75 , @xmath76 and @xmath77 .",
    "the gray graph  @xmath78 represents the adjacencies of the used gadgets .",
    "the solid lines represent a spanning tree of  @xmath78 that can be used to merge the polygons to one simple polygon .",
    "exemplarily the polygons @xmath79 and @xmath80 are merged into one polygon @xmath52 .",
    "the single components are illustrated in fig .",
    "[ fig : gadgets ] . ]        for the illustrations we use  octilinstyle , but the same constructions can be done based on  curvedstyle ; see end of proof .",
    "we first show that the problem deciding whether @xmath12 has a labeling lies in  np .",
    "we first create for each stop  @xmath81 its candidates  @xmath15 based on the given labeling style .",
    "recall that each candidate has constant size .",
    "we then guess for each stop  @xmath82 the label  @xmath83 that belongs to the desired labeling  @xmath19 .",
    "obviously , we can decide in polynomial time whether  @xmath84 is a labeling of  @xmath12 performing basically intersection tests .",
    "we now perform a reduction from the np - complete planar monotone 3-sat problem  @xcite .",
    "let @xmath85 be a boolean formula in conjunctive normal form such that it consists of  @xmath3 variables and @xmath86 clauses and , furthermore , each clause contains at most three literals .",
    "the formula @xmath85 induces the graph  @xmath87 as follows .",
    "@xmath87 contains for each variable a vertex and it contains for each clause a vertex .",
    "two vertices  @xmath88 and @xmath89 are connected by an edge @xmath90 if and only if @xmath88 represents a variable  @xmath50 and @xmath89 represents a clause  @xmath53 , such that @xmath50 is contained in @xmath53 .",
    "we call a clause of  @xmath85 _ positive _ ( _ negative _ ) if it contains only positive ( negative ) literals .",
    "the formula @xmath85 is an instance of planar monotone 3-sat if it satisfies the following requirements .",
    "@xmath85 is monotone , i.e. , each clause is either positive or negative , and    the graph @xmath87 is planar and has a rectilinear plane embedding such that    the vertices representing variables are placed on a horizontal line  @xmath91 ,    the vertices representing negative clauses are placed below  @xmath91 ,    the vertices representing positive clauses are placed above  @xmath91 ,    the edges are drawn on their respective side of  @xmath91 .",
    "planar monotone 3-sat then asks whether  @xmath85 is satisfiable .    using only stops lying on single horizontal and vertical segments , we construct a metro map  @xmath12 that mimics the embedding of  @xmath87 .",
    "in particular  @xmath4 will only consist of one metro line  @xmath1 that connects all stops such that the stops and their candidates simulate the variables and clauses of  @xmath85 .",
    "we will prove that  @xmath12 has a labeling if and only if @xmath85 is satisfiable .",
    "we refer to fig .",
    "[ fig : np - map ] for a sketch of the construction .",
    "we first define gadgets simulating variables , clauses and connecting structures .",
    "each gadget consists of a set of stops that lie on the border of a simple polygon  @xmath79 .",
    "later on we use this polygon  @xmath79 to prescribe the shape of the metro line  @xmath1",
    ".    * chain . *",
    "the _ chain gadget _ represents and transmits truth values from variables to clauses mimicking the embeddings of the edges in  @xmath87 .",
    "a chain consists of an even number of stops  @xmath92 that lie on vertical and horizontal segments ; see fig .",
    "[ fig : gadgets](a ) .",
    "hence , with respect to the given labeling style each stop  @xmath93 has a predefined set of candidates  @xmath94 .",
    "for each stop  @xmath93 there are two specially marked candidates @xmath95 and @xmath96 that lie on opposite sides of @xmath93 s segment ; for an example see the filled blue labels in fig  [ fig : gadgets](a ) .",
    "we say that those labels are _ selectable _ , because we define the gadget such that those labels are the only labels that can be selected for a labeling . to that end",
    ", we lay out the metro line such that it does not intersect any selectable label , but all labels that are not selectable .",
    "the stops are placed such that the following conditions are satisfied .",
    "the label  @xmath96 intersects the label  @xmath97 for @xmath98 .    except the intersections mentioned in  ( 1 ) , there is no intersection between selectable labels of different stops .",
    "the segments of the stops are connected by polylines s.t .",
    "the result is a simple polygon  @xmath79 intersecting all labels except the selectable labels .",
    "the labels  @xmath99 and @xmath100 do not intersect any selectable labels ; we call them the _ ports _ of the chain .",
    "later on , we use the ports to _ connect _ other gadgets with the chain , i.e. , we arrange the gadgets such that two of their ports intersect , but no other selectable label .",
    "further , we assign a polarization to each selectable label . the labels  @xmath101 are  _ negative _ and the labels  @xmath102 are _",
    "positive_.    consider a labeling  @xmath19 of a chain assuming that  @xmath79 is interpreted as a metro line ; we can cut  @xmath79 at some point in order to obtain an open curve . by construction of",
    "@xmath79 only selectable labels are contained in  @xmath19 . in particular",
    "we observe that if the negative port  @xmath103 is not contained in  @xmath19 , then the positive labels  @xmath102 belong to  @xmath19 .",
    "analogously , if the positive port  @xmath104 is not contained in  @xmath19 , then the negative labels  @xmath101 belong to  @xmath19 .",
    "we use this behavior to represent and transmit truth values through the chain .",
    "* the _ fork gadget _ splits an incoming chain into two outgoing chains and transmits the truth value represented by the incoming chain into the two outgoing chains .",
    "a fork consists of three stops  @xmath105 , @xmath106 and @xmath107 such that  @xmath105 and @xmath106 are placed on vertical segments and  @xmath107 is placed on a horizontal segment ; see fig .",
    "[ fig : gadgets](b ) .",
    "analogously to the chain , each stop  @xmath93 with ( @xmath108 ) has two _ selectable _ labels  @xmath95 and @xmath96 . we arrange the stops such that the following conditions are satisfied .",
    "the labels  @xmath109 and  @xmath110 intersect  @xmath111 .",
    "apart from those two intersections no selectable label intersects any other selectable label .",
    "the segments of the stops are connected by polylines s.t .",
    "the result is a simple polygon  @xmath79 intersecting all labels except the selectable labels .",
    "the label  @xmath99 is the _ incoming port _ and the labels @xmath112 and @xmath113 are the _ outgoing ports _ of the fork .",
    "we distinguish two types of forks by assigning different polarizations to the selectable labels . in the _ negative _ ( _ positive _ ) fork ,",
    "the labels  @xmath103 , @xmath109 and @xmath110 are _ positive _ ( _ negative _ ) and the labels are  @xmath111 , @xmath112 and @xmath114 are _ negative _ ( _ positive _ ) .",
    "hence , the incoming port is positive ( negative ) and the outgoings ports are negative ( positive ) .",
    "consider a labeling  @xmath19 of a fork assuming that @xmath79 is interpreted as a metro line . by construction of",
    "@xmath79 only selectable labels belong to  @xmath19 .",
    "further , if the incoming port  @xmath103 does not belong to  @xmath19 , then the outgoing ports  @xmath111 and @xmath111 belong to  @xmath115 . finally , if one outgoing port does not belong to  @xmath19 , then the incoming port belongs to  @xmath19 .",
    "* the _ clause gadget",
    "_ represents a clause  @xmath53 of the given instance .",
    "it forms a chain of length 2 with the addition that it has three ports instead of two ports ; see fig  [ fig : gadgets](c ) .",
    "to that end one of both stops has three selectable labels ; one intersecting a selectable label of the other stop , and two lying on the opposite side of the stop s segment without intersecting any selectable label of the other stop .",
    "the gadget is placed at the position where the vertex of  @xmath53 is located in the drawing of  @xmath87 ; see fig .  [",
    "fig : np - map ] .",
    "we observe that a labeling  @xmath19 of a clause gadget always contains at least one port .",
    "further , we do not assign any polarization to its selectable labels .",
    "* variable .",
    "* the variable gadget represents a single variable  @xmath50 .",
    "it forms a composition of chains and forks that are connected by their ports ; see fig  [ fig : gadgets](d ) .",
    "more precisely , let @xmath9 be the number of clauses in which the negative literal  @xmath116 occurs and let  @xmath117 be the number of clauses in which the positive literal  @xmath50 occurs . along the horizontal line  @xmath91 on which the vertex of  @xmath50 is placed in the drawing of  @xmath87 , we place a horizontal chain  @xmath118 .",
    "further , we place a sequence of negative forks  @xmath119 to the left of  @xmath118 and a sequence of positive forks @xmath120 to the right of  @xmath118 .",
    "the negative incoming port of  @xmath121 is connected to the positive port of  @xmath118 by a chain .",
    "two consecutive forks  @xmath122 and  @xmath123 are connected by a chain  @xmath124 such that  @xmath124 connects a positive outgoing port of  @xmath122 with the negative incoming port of  @xmath123 .",
    "analogously , the positive incoming port of  @xmath125 is connected to the negative port of  @xmath118 by a chain .",
    "two consecutive forks  @xmath126 and  @xmath127 are connected by a chain  @xmath124 such that  @xmath124 connects a negative outgoing port of  @xmath126 with the positive incoming port of  @xmath127 .",
    "we observe that the gadget has @xmath128 free ports .",
    "further , we can arrange the forks such that the free ports of  @xmath129 lie above  @xmath91 and the free ports of  @xmath130 lie below  @xmath91 .",
    "consider a labeling  @xmath19 of a variable . by construction of the forks and chains ,",
    "if one positive free port is not contained in  @xmath19 , then all negative free ports must be contained in  @xmath19 .",
    "analogously , if one negative free port is not contained in  @xmath19 , then all positive free ports must be contained in  @xmath19 .",
    "using additional chains we connect the positive free ports with the positive clauses and the negative ports with the negative clauses correspondingly ; see fig .",
    "[ fig : np - map ] .",
    "more precisely , assume that the variable  @xmath50 is contained in the positive clause  @xmath53 ; negative clauses can be handled analogously .",
    "with respect to the drawing of  @xmath87 , a positive free port of  @xmath50 s gadget is connected with the negative port of a chain whose positive port is connected with a free port of @xmath53 s gadget .",
    "note that we can easily choose the simple polygons enclosing the gadgets such that they do not intersect by defining them such that they surround the gadgets tightly .",
    "* one metro line . * we construct the polygons enclosing the single gadgets such that they do not intersect each other .",
    "we now sketch how the polygons can be merged to a single simple polygon  @xmath79 . cutting this polygon at some point",
    "we obtain a polyline prescribing the desired metro line .",
    "we construct a graph @xmath131 as follows .",
    "the polygons of the gadgets are the vertices of the graph and an edge @xmath132 is contained in  @xmath133 if and only if the corresponding gadgets of the polygons  @xmath79 and  @xmath80 are connected by their ports ; see fig .",
    "[ fig : np - map ] . since  @xmath87 is planar and the gadgets mimic the embedding of  @xmath87 , it is not hard to see that  @xmath118 is also planar .",
    "we construct a spanning tree  @xmath134 of  @xmath118 . if an edge @xmath132 of  @xmath118 is also contained in  @xmath134 ,",
    "we _ merge _",
    "@xmath79 and @xmath80 obtaining a new simple polygon  @xmath52 ; see for an example  fig .",
    "[ fig : np - map ] . to that end",
    "we cut  @xmath79 and @xmath80 in polylines and connect the four end points by two new polylines such that the result is a simple polygon .",
    "we in particular ensure that the new polygon does not intersect any other polygon and that  @xmath52 intersects the same labels as  @xmath79 and @xmath80 together .",
    "in  @xmath134 we correspondingly contract the edge .",
    "note that by contracting edges , @xmath134 remains a tree .",
    "we repeat that procedure until @xmath134 consists of a single vertex , i.e. , only one simple polygon is left .    *",
    "* it is not hard to see that our construction is polynomial in the size of the given 3sat formula  @xmath85 .",
    "assume that  @xmath85 is satisfiable .",
    "we show how to construct a labeling  @xmath19 of the constructed metro map . for each variable  @xmath50 that is _ true _ ( _ false _ ) in the given truth assignment , we put all negative ( positive ) labels of the corresponding variable gadget and its connected chains into  @xmath115 . by construction those labels do not intersect .",
    "it remains to select labels for the clause gadgets .",
    "consider a positive clause @xmath53 ; negative clauses can be handled analogously .",
    "since  @xmath85 is satisfiable , @xmath53 contains a variable  @xmath50 that is _ true _ in the given truth assignment of  @xmath85 .",
    "the set @xmath19 contains only negative labels of the chain connecting the gadget of  @xmath50 with the gadget of  @xmath53 , but no positive labels of that chain .",
    "hence , we can add the port of  @xmath53 s gadget that is connected to that chain without creating intersections .",
    "for the second stop of the clause we put that selectable label into  @xmath19 that is not a port .",
    "we can apply this procedure to all positive and negative clauses without creating intersections , which yields the labeling  @xmath19 of the constructed metro map .",
    "finally , assume that we are given a labeling  @xmath19 of the constructed metro map .",
    "consider the clause gadget of a positive clause  @xmath53 ; negative clauses can be handled analogously . by construction @xmath19 contains at least one port  @xmath14 of that gadget .",
    "this port is connected to a chain , which is then connected to a gadget of a variable  @xmath50 .",
    "we set that variable  @xmath50 _ true_. we apply this procedure to all clauses ; for negative clauses we set the corresponding variable to  _",
    "false_. since  @xmath14 is contained in  @xmath19 , only negative labels of that chain can be contained in  @xmath19 , but no positive labels . hence , the positive ports of the variable gadget are also not contained in  @xmath19 . by the previous reasoning",
    "this implies that all negative ports of the gadget are contained in  @xmath115 .",
    "consequently , by applying a similar procedure to negative clauses , it can not happen that  @xmath50 is set to _",
    "false_. altogether , this implies a valid truth assignment of  @xmath85 .",
    "* remarks : * fig .",
    "[ fig : gadgets - curved ] illustrates the construction of the gadgets for curvedstyle .",
    "note that only the fork gadget , the clause gadget and the chain gadget rely on the concrete labeling style .",
    "further , using curvedstyle , a stop @xmath9 lying on a vertical segment  @xmath135 has exactly two different distinguish labels ; one that lies to the left of  @xmath135 and one that lies to the right of @xmath135 .",
    "we now study the case that the given instance  @xmath136 consists only of one metro line  @xmath1 . based on cartographic criteria we introduce three additional assumptions on  @xmath137 , which allows us to efficiently solve  metromaplabeling .",
    "for each stop  @xmath138 , we assume that each candidate  @xmath139 is assigned to one side of  @xmath1 ; either @xmath14 is a _ left candidate _ assigned to the left side of  @xmath1 , or @xmath14 is a _",
    "right candidate _ assigned to the right side of  @xmath1 . for appropriately defined candidate sets those assignments correspond with the geometric positions of the candidates , i.e. , left ( right ) candidates lie on the left ( right ) hand side of  @xmath1 .",
    "[ assumption : separation ] candidates that are assigned to different sides of  @xmath1 do not intersect .",
    "this assumption is normally not a real restriction , because for appropriately defined candidate sets and realistic metro lines , the line  @xmath1 separates both types of candidates geometrically .",
    "we further require what we call the",
    "_ transitivity property_.    [ assumption : transitivity - property ] for any three stops  @xmath140 with  @xmath141 and any three candidates @xmath142 , @xmath143 and @xmath144 assigned to the same side of  @xmath1 , it holds that if neither @xmath14 and @xmath145 intersect nor @xmath145 and @xmath146 intersect then also @xmath14 and @xmath146 do not intersect ; see also fig .",
    "[ fig : model_small](b)(c ) .    in our experiments we established assumption  [ assumption : separation ] and assumption  [ assumption : transitivity - property ] by removing candidates greedily . in section",
    "[ sec : evaluation ] we show that for real - world metro maps and the considered candidate sets we remove only few labels , which indicates that those assumptions have only a little influence on the labelings .",
    "two stops  @xmath147 with  @xmath148 are _ consecutive _ if there is no other stop  @xmath149 with  @xmath150 ; see fig .  [",
    "fig : model_small](a ) . for two consecutive stops",
    "@xmath151 we say that each two candidates  @xmath152 and  @xmath153 are  _ consecutive _ and denote the set that contains each pair of consecutive labels in  @xmath18 by  @xmath154 .",
    "further , two consecutive labels  @xmath155 form a _ switchover _",
    "@xmath156 if they are assigned to opposite sides of  @xmath1 , where @xmath156 denotes an ordered set indicating the order of the stops of  @xmath55 and @xmath56 .",
    "two switchovers of  @xmath1 are _ consecutive _ in  @xmath157 if there is no switchover in  @xmath19 in between of both .",
    "we define the set of all switchovers in  @xmath17 by  @xmath158 and the set of consecutive switchovers in @xmath18 by @xmath159 .    based on cartographic criteria extracted from imhof s `` general principles and requirements '' for map labeling  @xcite , we require a cost function @xmath160 of the following form ; see also section  [ sec : weighting - function ] for a detailed motivation of  @xmath161 .    [",
    "assumption : weighting - function ] for any  @xmath162 we require @xmath163{\\sum_{(\\ell_1,\\ell_2)\\in p_{\\mathcal l}}}w_2(\\ell_1,\\ell_2 ) + \\smashoperator[r]{\\sum_{(\\sigma_1,\\sigma_2)\\in { \\ensuremath{\\gamma}}_{\\mathcal l } } } w_3(\\sigma_1,\\sigma_2),\\ ] ] where  @xmath164 rates a single label , @xmath165 rates two consecutive labels and @xmath166 rates two consecutive switchovers .",
    "in particular , we define  @xmath161 such that it penalizes the following structures to sustain readbility .",
    "steep or highly curved labels .    consecutive labels that lie on different sides of  @xmath1 , or that are shaped differently .",
    "consecutive switchovers that are placed close to each other .    if  @xmath167 satisfies assumption  [ assumption : separation][assumption : weighting - function ] , we call metromaplabelingalso  softmetrolinelabeling .",
    "we now introduce an algorithm that solves this problem in  @xmath168 time , where  @xmath169 and  @xmath170 .",
    "note that  @xmath171 is typically constant .",
    "we assume w.l.o.g .  that  @xmath17 contains only candidates that do not intersect  @xmath1 .     based on its labels . ( c ) a two - sided instance with a labeling",
    "the switchovers  @xmath172 and  @xmath173 separate the labeling into a two - sided and a one - sided instance . ]",
    "[ [ labels - on - one - side . ] ] labels on one side .",
    "+ + + + + + + + + + + + + + + + + + +    we first assume that all candidate labels in @xmath17 are assigned either to the left or to the right side of  @xmath1 ; without loss of generality to the left side of  @xmath1 . for two stops",
    "@xmath174 we denote the instance restricted to the stops @xmath175 by  @xmath176 $ ] .",
    "we denote the first stop of  @xmath1 by  @xmath177 and the last stop by  @xmath178 .",
    "the transitivity property directly yields the next lemma .",
    "[ lem : one - sided - trans - prop ] let  @xmath9 , @xmath10 and @xmath179 be stops with  @xmath180 ,  @xmath19 be a labeling of  @xmath181 $ ] , @xmath182 and @xmath183 .",
    "any  @xmath184 intersecting  @xmath14 also intersects  @xmath145 .",
    "recall for the proof that we assume that  @xmath137 satisfies assumptions  [ assumption : separation][assumption : weighting - function ]",
    ".    assume for the sake of contradiction that there is a candidate  @xmath184 such that @xmath146 intersects  @xmath14 but not  @xmath145 ; see fig .  [",
    "fig : model_small](c ) . since  @xmath19 is a labeling , the labels  @xmath14 and  @xmath145 do not intersect .",
    "hence , neither  @xmath14 and @xmath145 nor @xmath145 and  @xmath146 intersect . since all three labels are assigned to the same side of  @xmath1 , the transitivity property holds , which directly contradicts that  @xmath14 and  @xmath145 do not intersect .",
    "hence , the lemma states that  @xmath145 separates  @xmath19 from the candidates of the stops succeeding  @xmath10 .",
    "we use this observation as follows .",
    "based on @xmath17 we define a directed acyclic graph @xmath185 ; see fig .",
    "[ fig : dyn - prog](a)(b ) .",
    "this graph contains a vertex  @xmath88 for each candidate  @xmath186 and the two vertices  @xmath50 and @xmath187 .",
    "we call  @xmath50 the _ source _ and @xmath187 the _ target _ of  @xmath78 .",
    "let  @xmath188 denote the candidate that belongs to the vertex @xmath189 .",
    "for each pair @xmath190 the graph contains the edge  @xmath191 if and only if the stop of @xmath188 lies directly before the stop of  @xmath192 and , furthermore , @xmath188 and @xmath192 do not intersect .",
    "further , for each vertex  @xmath88 of any candidate of  @xmath177 the graph contains the edge @xmath193 , and for each vertex  @xmath88 of any candidate of  @xmath178 the graph contains the edge  @xmath194 . for an edge @xmath195",
    "we define its cost  @xmath196 as follows . for  @xmath197 and",
    "@xmath198 we set  @xmath199 .",
    "for @xmath200 we set  @xmath201 and for @xmath202 we set @xmath203 .",
    "an _ @xmath50-@xmath187 path _",
    "@xmath204 in  @xmath78 is a path in  @xmath78 that starts at  @xmath50 and ends at  @xmath187 .",
    "its costs are  @xmath205 .",
    "the @xmath50-@xmath187 path with minimum costs among all @xmath50-@xmath187  paths is the _",
    "shortest _  @xmath50-@xmath187 path .",
    "[ lemma - one - sided ] for any @xmath50-@xmath187 path  @xmath79 in  @xmath78 there is a labeling  @xmath19 of  @xmath137 with  @xmath206 and for any labeling  @xmath19 of @xmath137 there is an @xmath50-@xmath187 path  @xmath79 in  @xmath78 with  @xmath206 .",
    "recall for the proof that we assume that  @xmath137 satisfies assumptions  [ assumption : separation][assumption : weighting - function ] .",
    "let @xmath207 be an @xmath50-@xmath187 path in @xmath78 and let @xmath208 , where @xmath209 denotes the vertices of @xmath79 and @xmath210 the edges of  @xmath79 .",
    "we show that  @xmath211 is a labeling of  @xmath1 with  @xmath212 . obviously , for each stop  @xmath13 the set  @xmath19 contains exactly one candidate @xmath213 . by construction for each edge @xmath214 the labels  @xmath188 and @xmath192 do not intersect .",
    "hence , by lemma  [ lem : one - sided - trans - prop ] the label  @xmath192 can not intersect any label  @xmath215 of any stop that occurs before the stop of  @xmath188 . hence , the set @xmath19 is a labeling .",
    "let  @xmath216 be the labels in  @xmath19 in the order of their stops .",
    "it holds @xmath217 now , let  @xmath19 be an arbitrary labeling of  @xmath1 .",
    "we show that there is an  @xmath50-@xmath187 path  @xmath79 with  @xmath206 .",
    "let @xmath9 and @xmath10 be two consecutive stops with  @xmath8 and let  @xmath14 and @xmath145 be the corresponding labels in  @xmath19 . since  @xmath14 and  @xmath145 do not intersect , the corresponding vertices  @xmath88 and @xmath218 of @xmath14 and @xmath145 are adjacent in  @xmath78 .",
    "hence , the labels in  @xmath19 induce a path  @xmath79 in @xmath78 .",
    "let  @xmath216 be the labels in  @xmath19 in the order of their stops .",
    "using equation  [ eqn : one - sided ] we obtain  @xmath219 .",
    "the lemma in particular proves that a shortest @xmath50-@xmath187  path  @xmath79 in  @xmath78 corresponds with an optimal labeling of  @xmath137 .",
    "due to ( * ? ? ?",
    "* chapter  24 ) ,  @xmath79 can be constructed in  @xmath220 time using a dynamic programming approach , which we call minpath . in particular minpathconsiders",
    "each edge only once .",
    "there are @xmath221 vertices in  @xmath78 and each vertex has at most  @xmath171 incoming edges , which implies that there are @xmath222 edges . since minpathconsiders each edge only once , we compute the edges of  @xmath78 on demand , which saves storage .",
    "[ thm : one - sided - case ] if @xmath137 is one - sided , softmetrolinelabelingcan be optimally solved in  @xmath223 time and  @xmath224 space .",
    "[ [ labels - on - both - sides . ] ] labels on both sides .",
    "+ + + + + + + + + + + + + + + + + + + + +    if candidates lie on both sides of the metro line , we solve the problem utilizing the algorithm for the one - sided case .",
    "consider a labeling  @xmath19 of @xmath137 and let @xmath173 , @xmath172 be two switchovers in  @xmath19 such that  @xmath173 lies before  @xmath172 and no other switchover lies in between both ; see fig .",
    "[ fig : dyn - prog](c ) .",
    "roughly spoken , @xmath173 and  @xmath172 induce a two - sided instance that lies before  @xmath173 and a one - sided instance that lies in between both switchovers @xmath173 and  @xmath172 .",
    "[ lem : two - sided - trans - prop ] let  @xmath9 , @xmath225 , @xmath226 and @xmath179 be stops with  @xmath227 ; @xmath225 and  @xmath226 are consecutive .",
    "let  @xmath19 be a labeling of  @xmath228 $ ] , @xmath229 , @xmath230 , @xmath231 s.t .",
    "@xmath232 is a switchover .",
    "any @xmath184 intersecting  @xmath14 intersects  @xmath65 or @xmath63 .",
    "recall for the proof that we assume that  @xmath137 satisfies assumptions  [ assumption : separation][assumption : weighting - function ] .",
    "assume for the sake of contradiction that there is a label  @xmath233 such that  @xmath146 intersects  @xmath14 without intersecting  @xmath65 and @xmath63 .",
    "since  @xmath14 and  @xmath146 intersect each other , due to assumption  [ assumption : separation ] both are assigned to the same side of  @xmath1 ; w.l.o.g .",
    ", let  @xmath14 and @xmath146 be assigned to the left hand side of  @xmath1 .",
    "further , w.l.o.g .",
    ", let  @xmath65 be a left candidate and  @xmath63 a right candidate ; analogous arguments hold for the opposite case . since  @xmath19 is a labeling , the labels  @xmath14 and @xmath65 do not intersect . hence , neither @xmath14 and @xmath65 nor @xmath65 and  @xmath146 intersect .",
    "since  @xmath14 , @xmath65 and @xmath146 are assigned to the same side of  @xmath1 , the transitivity property must hold .",
    "however , this contradicts that  @xmath14 and  @xmath146 intersect .",
    "hence , the lemma yields that for the one - sided instance we can choose any labeling ; as long as this labeling does not intersect any label of  @xmath173 or  @xmath172 , it composes with  @xmath173 , @xmath172 and the labeling of the two - sided instance to one labeling for the instance up to  @xmath172 .",
    "we use that observation as follows .    let  @xmath234 and @xmath235 be two switchovers in  @xmath158 .",
    "let  @xmath105 and @xmath106 be the stops of  @xmath55 and  @xmath56 , and let  @xmath225 and @xmath226 be the stops of  @xmath65 and  @xmath63 , respectively ; see fig .",
    "[ fig : dyn - prog](c ) .",
    "we assume that  @xmath236 , i.e. , @xmath237 . let  @xmath238 $ ] be the instance restricted to the stops  @xmath239 , where @xmath240 $ ] indicates that the stops of @xmath172 belong to that instance , while the stops of @xmath173 do not .",
    "the switchovers  @xmath173 and @xmath172 are  _ compatible _ if  @xmath56 and @xmath65 are assigned to the same side of  @xmath1 , and there is a labeling for  @xmath241 $ ] such that it contains @xmath55 , @xmath56 , @xmath65 and @xmath63 and , furthermore , @xmath173 and @xmath172 are the only switchovers in that labeling .",
    "let  @xmath19 be the optimal labeling among those labelings .",
    "we denote the labeling  @xmath242 of  @xmath238 $ ] by  @xmath243 . utilizing theorem  [ thm : one - sided - case ]",
    ", we obtain  @xmath243 in @xmath222 time .    for",
    "any labeling @xmath19 of an instance @xmath244 let  @xmath245 be the label of the first stop in  @xmath244 and let  @xmath246 be the label of the last stop in  @xmath244 ; @xmath247 is the _ head _ and @xmath248 is the _ tail _ of  @xmath19 . for technical reasons we extend  @xmath11 by the _ dummy stops _",
    "@xmath249 , @xmath250 , @xmath251 and @xmath252 such that  @xmath253 for any stop  @xmath13 . for @xmath249 and @xmath250",
    "we introduce the _ dummy switchover _",
    "@xmath254 and for @xmath251 and @xmath252 the dummy switchover  @xmath255 .",
    "we define that  @xmath254 and @xmath255 are compatible to all switchovers in  @xmath158 and that @xmath254 and @xmath255 are compatible , if there is a one - sided labeling for  @xmath137 . conceptually",
    ", each dummy switchover consists of two labels that are assigned to both sides of  @xmath1 .",
    "further , neither @xmath254 nor  @xmath255 has any influence on the cost of a labeling .",
    "hence , w.l.o.g .",
    "we assume that they are contained in any labeling .",
    "similar to the one - sided case we define a directed acyclic graph @xmath256 .",
    "this graph contains a vertex  @xmath88 for each switchover  @xmath257 .",
    "let  @xmath258 denote the switchover that belongs to the vertex @xmath259 .",
    "in particular let  @xmath50 denote the vertex of  @xmath254 and  @xmath187 denote the vertex of  @xmath255 .",
    "for each pair @xmath260 the graph contains the edge  @xmath191 if and only if  @xmath258 and @xmath261 are compatible and @xmath262 .",
    "the cost  @xmath196 of an edge  @xmath263 in @xmath264 is @xmath265 , where @xmath266 . in the special case that  @xmath258 and",
    "@xmath261 share a stop , we set @xmath267 , where @xmath268 .",
    "let @xmath79 be an @xmath50-@xmath187 path in @xmath264 and let  @xmath269 be the edges of @xmath79 . for a vertex  @xmath270 of  @xmath79 with @xmath271 we write  @xmath272 instead of @xmath273 .",
    "we denote the set @xmath274 by @xmath275 .",
    "[ lem : two - sided ]    a )  the graph @xmath264 has an @xmath50-@xmath187 path if and only if  @xmath137 has a labeling .",
    "+ b )  let  @xmath79 be a shortest @xmath50-@xmath187 path in @xmath264 , then @xmath275 is an optimal labeling of  @xmath137 .",
    "recall for the proof that we assume that  @xmath137 satisfies assumption  [ assumption : separation][assumption : weighting - function ] .    by construction of",
    "@xmath264 , it directly follows that  @xmath264 has an  @xmath50-@xmath187 path  @xmath79 if and only if @xmath137 has a labeling  @xmath19 .",
    "we first show that @xmath275 is a labeling of  @xmath137 with @xmath276 .",
    "afterwards we prove that for any labeling  @xmath19 of @xmath137 it holds @xmath277 .",
    "let  @xmath278 be the edges of @xmath79 with  @xmath279 and @xmath280 .",
    "for a vertex  @xmath270 with @xmath271 we write  @xmath272 instead of @xmath273 .",
    "we show by induction over  @xmath281 with  @xmath282 that @xmath283 is a labeling of  @xmath284 $ ] with  @xmath285 .",
    "altogether this implies that @xmath286 is a labeling with @xmath276 .    for  @xmath287 we have  @xmath288 .",
    "by the construction of @xmath264 the set @xmath289 is a labeling . since @xmath290 is a dummy switchover we have @xmath291 and @xmath292 .",
    "hence , it holds @xmath293 .    now , consider the set  @xmath294 for @xmath295 .",
    "we first argue that  @xmath294 is a labeling of  @xmath296 $ ] . by induction the set",
    "@xmath297 is a labeling of  @xmath298 $ ] .",
    "further , by construction the set @xmath299 is a labeling of the instance  @xmath300 $ ] .",
    "since  @xmath301 and @xmath302 are compatible , no label of @xmath303 intersects any label of  @xmath301 . then by lemma  [ lem : two - sided - trans - prop ] no two labels in @xmath294 intersect each other .",
    "we now show that @xmath304 . by induction",
    "we have  @xmath305 . since @xmath306 it holds @xmath307 we distinguish two cases .",
    "first assume that  @xmath301 and @xmath302 do not have any stop in common .",
    "let  @xmath308 , then we derive from equation  ( [ equation : base ] ) @xmath309 equality  ( i ) holds due to the definition of @xmath310 and equality  ( ii ) is by induction true .",
    "now assume that  @xmath301 and @xmath302 have a stop in common .",
    "let  @xmath311 , then we derive from equation  ( [ equation : base ] )    @xmath312    equality  ( iii ) holds due to the definition of @xmath310 and equality  ( iv ) is by induction true .",
    "altogether we obtain that @xmath313 is a labeling with @xmath314 .",
    "finally we show , that there is no other labeling  @xmath19 with  @xmath315 .",
    "assume for the sake of contradiction that there is such a labeling  @xmath19 .",
    "let  @xmath316 be the switchovers in  @xmath19 , such that @xmath317 for each  @xmath318 .",
    "we observe that two consecutive switchovers  @xmath272 and  @xmath319 are compatible .",
    "hence , for any  @xmath320 with  @xmath321 there is an edge  @xmath322 in  @xmath264 with  @xmath323 and @xmath324 .",
    "consequently , the edges  @xmath325 form an @xmath50-@xmath187 path  @xmath80 . by the first two claims of this lemma",
    ", there is a labeling  @xmath326 of  @xmath137 with  @xmath327 .",
    "since  @xmath79 is a shortest  @xmath50-@xmath187 path it holds @xmath328 we now show that @xmath329 deriving a contradiction . to that end recall",
    "that @xmath330 for @xmath331 the set @xmath332 is an optimal labeling of the instance  @xmath333 $ ] such that @xmath334 is a labeling and  @xmath335 is the only switchover contained in  @xmath332 .",
    "let  @xmath336 and @xmath337 be the labelings restricted to  @xmath338 $ ] .",
    "in particular we have  @xmath339 and  @xmath272 is the only switchover in  @xmath340 .",
    "if we had @xmath341 , there must be two consecutive switchovers  @xmath342 and @xmath335 such that @xmath343 .",
    "however , this contradicts the optimality of  @xmath332 .",
    "consequently , it holds  @xmath329 yielding the claimed contradiction .    by lemma  [ lem :",
    "two - sided ] a shortest @xmath50-@xmath187 path  @xmath79 in  @xmath264 corresponds with an optimal labeling  @xmath19 of  @xmath1 , if this exists .",
    "using minpathwe construct  @xmath79 in  @xmath344 time . since  @xmath158 contains  @xmath345 switchovers , the graph @xmath264 contains @xmath345 vertices and @xmath168 edges . as minpathconsiders each edge only once , we compute the edges of  @xmath264 on demand , which needs @xmath345 storage .",
    "we compute the costs of the incoming edges of a vertex  @xmath346 utilizing the one - sided case .",
    "proceeding naively , we need @xmath345 time per edge , which yields @xmath347 time in total .",
    "reusing already computed information , we improve that result as follows .",
    "let  @xmath348 denote the incoming edges of  @xmath89 such that  @xmath349 , i.e. , the stop of @xmath350 s first label does not lie after the stop of @xmath351 s first label with @xmath352 .",
    "further , let  @xmath353 and let  @xmath354 be the graph for the one - sided instance  @xmath355 $ ] considering only candidates that lie on the same side as  @xmath356 , where  @xmath93 is the stop of the second label of  @xmath350 and @xmath9 is the stop of  @xmath356 .",
    "let  @xmath357 be the shortest @xmath358-@xmath359 path in @xmath354 , where  @xmath358 and @xmath359 denote the source and target of  @xmath354 , respectively .",
    "we observe that excluding the source and target , the graph @xmath354 is a sub - graph of  @xmath360 for all @xmath361 .",
    "further , since a sub - path of a shortest path is also a shortest path among all paths having the same end vertices , we can assume without loss of optimality that when excluding  @xmath358 and @xmath359 from  @xmath357 , the path  @xmath357 is a sub path of  @xmath362 for all  @xmath363 .",
    "we therefore only need to compute  @xmath360 and  @xmath362 and can use sub - paths of  @xmath362 in order to gain the costs of all incoming edges of  @xmath89 .",
    "hence , we basically apply for each vertex  @xmath364 the algorithm for the one - sided case once using @xmath345 time per vertex .",
    "we then can compute the costs in  @xmath365 time per edge , which yields the next result .",
    "softmetrolinelabelingcan be optimally solved in  @xmath168 time and  @xmath345 space .",
    "in this section we motivate the cost function introduced in section  [ sec : single - line ] . for a given metro map @xmath366 that consists of a single metro line  @xmath1 , and generated candidates  @xmath17",
    ", we rate each labeling  @xmath367 using the following cost function : @xmath163{\\sum_{(\\ell_1,\\ell_2)\\in p_{\\mathcal l}}}w_2(\\ell_1,\\ell_2 ) + \\smashoperator[r]{\\sum_{(\\sigma_1,\\sigma_2)\\in { \\ensuremath{\\gamma}}_{\\mathcal l } } } w_3(\\sigma_1,\\sigma_2),\\ ] ] where  @xmath164 rates a single label , @xmath165 rates two consecutive labels and @xmath166 rates two consecutive switchovers ; see assumption  [ assumption : weighting - function ] .",
    "the definition of this function relies on the following considerations , which are based on imhof s `` general principles and requirements '' for map labeling @xcite .    to respect that some ( e.g. , steep and highly curved ) labels are more difficult to read than others , we introduce a cost @xmath368 for each candidate label @xmath14 .",
    "imhof further notes that `` names should assist directly in revealing spatial situation '' and exemplifies this principle with maps that show text only while still conveying the most relevant geographic information .",
    "to transfer this idea to metro maps , we favor solutions where the labels for each two consecutive stops on a metro line have similar properties .",
    "that is , the two labels should be placed on the same side of the line and their slopes and curvatures should be similar . in a map satisfying this criterion ,",
    "a user need not find the point - text correspondence on a one - to - one basis .",
    "instead , the user can identify metro lines and sequences of stops based on label groups , which , for example , makes it easier to count the stops till a destination .",
    "( of course , this is also an improvement in terms of legibility . ) in our model , we consider the similarity of consecutive labels by introducing a cost @xmath369 for each pair @xmath156 of candidates that belong to consecutive stops on @xmath1 .",
    "we penalize consecutive candidates that lie on opposite sides of the metro line , because those disturb the overall label placement .",
    "we add this cost to the objective value of a solution if both candidates are selected . since we minimize the total costs of the solution , the cost for a pair of candidates should be low if they are similar . further ,",
    "if  @xmath1 has labels that do not lie on the same side of  @xmath1 , the implied switchovers should occur in regular distances and not cluttered .",
    "hence , for each pair @xmath370 and @xmath371 of two consecutive switchovers in a solution , we add a cost  @xmath372 to the objective value of the solution that depends on the distance between @xmath370 and @xmath371 ; the smaller the distance , the greater the cost of  @xmath372 .",
    "we now describe more precisely how we defined  @xmath373 , @xmath374 and @xmath375 for our evaluation .",
    "the definitions depend on the applied labeling style",
    ".    * curved labels . *",
    "using curvedstylefor the labels we define the cost functions as follows . for a label  @xmath186",
    "let  @xmath376 be the start point of  @xmath14 and let  @xmath377 be the end point of  @xmath14 ; recall that we derived the labels from bzier curves .",
    "let  @xmath378 be the vector connecting  @xmath379 with @xmath380 and let  @xmath381 $ ] denote the angle of  @xmath378 .",
    "we define @xmath382 hence , the angle  @xmath383 is a measure for how horizontal the vector  @xmath378 is , whereby the smaller the value of  @xmath383 , the more horizontal is @xmath378 .",
    "we defined the cost function @xmath373 rating a single label  @xmath384 to be @xmath385 . hence , we penalize steep labels .",
    "we defined  @xmath374 rating two consecutive labels  @xmath55 and @xmath56 as follows .",
    "if  @xmath55 and @xmath56 point into different @xmath50-direction , @xmath374 is 150 .",
    "else , if  @xmath55 and @xmath56 are switchovers , the cost @xmath374 is 0 . in all other cases ,",
    "@xmath374 is the difference between the angle @xmath386 and @xmath387 .",
    "hence , in the latter case we penalize labels that are differently aligned .",
    "finally ,  @xmath375 rating two switchovers @xmath370 and @xmath371 of the same line is defined as @xmath388 , where @xmath389 is the number of stops in between @xmath370 and @xmath371 . in particular @xmath375 effects",
    "that a labeling with equally sized sequences of labels lying on the same side of their metro line are rated better than a labeling where the sequences are sized irregularly .    * octilinear labels . * using octilinstylefor the labels we define the cost functions as follows .",
    "recall that we use @xmath390 for octilinear metro maps . for a label @xmath14",
    "let @xmath391 be the segment on which its stop is placed .",
    "if @xmath392 is horizontal , but @xmath14 is not diagonal , we set @xmath393 . if @xmath392 is vertical or diagonal , but @xmath14 is not horizontal , we set  @xmath394 . in all other cases we set @xmath395 .",
    "the functions @xmath374 and @xmath375 are defined in the same way as for curvedstyle .",
    "in this section we consider the problem that we are given a metro map @xmath12 consisting of multiple metro lines .",
    "we present an algorithm that creates a labeling for  @xmath12 in two phases .",
    "each phase is divided into two steps ; see fig .  [",
    "fig : approach : pipeline ] for a schematic illustration . in the first phase the algorithm creates the set  @xmath17 of label candidates and ensures that there exists at least one labeling for the metro map . in the second phase it then computes a labeling  @xmath19 for @xmath396 . to that end",
    "it makes use of the labeling algorithm for a single metro line ; see section  [ sec : single - line ] . in order to rate  @xmath19 , we extend the cost function  @xmath161 for a single metro line on multiple metro lines , i.e. , for any @xmath18 we require @xmath397{\\sum_{c\\in { \\ensuremath{\\mathcal m}}}}w(c ) \\text { with } w(c)=\\sum_{\\ell \\in \\mathcal l_c}w_1(\\ell ) + \\smashoperator[r]{\\sum_{(\\ell_1,\\ell_2)\\in p_{\\mathcal l_c}}}w_2(\\ell_1,\\ell_2 ) + \\smashoperator[r]{\\sum_{(\\sigma_1,\\sigma_2)\\in { \\ensuremath{\\gamma}}_{\\mathcal l_c } } } w_3(\\sigma_1,\\sigma_2),\\ ] ] where @xmath398 is the labeling restricted to metro line  @xmath399 ,  @xmath400 rates a single label , @xmath401 rates two consecutive labels and @xmath402 rates two consecutive switchovers of  @xmath1 . in particular  @xmath161 satisfies assumption  [ assumption : weighting - function ] for a single metro line .",
    "altogether , the workflow yields a heuristic that relies on the conjecture that using optimal algorithms in single steps is sufficient to obtain good labelings .",
    "in our evaluation we call that approach dpalg .",
    "first , we create the label candidates  @xmath17 .",
    "we then enforce that there is a labeling  @xmath19 for the given instance  @xmath403 .    [ [ st - step - candidate - creation . ] ] 1st step  candidate creation .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    depending on the labeling style , we generate a discrete set of candidate labels for every stop .",
    "hence , we are now given the instance  @xmath24 .",
    "in particular we assume that each candidate  @xmath186 is assigned to one side of its metro line  @xmath1 , namely to the left or right side of  @xmath1 , and , furthermore , @xmath161 is a cost function satisfying assumption  [ assumption : weighting - function ] for each metro line  @xmath1 .",
    "[ [ nd - step - scaling . ] ] 2nd step  scaling .",
    "+ + + + + + + + + + + + + + + + + + +    since each stop of a metro map must be labeled , we first apply a transformation on the given candidates to ensure that there is at least one labeling of the metro map . to that end",
    "we first determine for each stop  @xmath404 of each metro line  @xmath5 two candidates of  @xmath15 that are assigned to opposite sides of  @xmath1 .",
    "more specifically , among all candidates in  @xmath15 that are assigned to the right hand side of  @xmath1 and that do not intersect any metro line of  @xmath4 , we take that candidate  @xmath405 with minimum costs , i.e. , @xmath368 is minimal . if such a candidate does not exist , because each label of  @xmath15 intersects at least one metro line , we take a pre - defined label  @xmath405 that is assigned to the right hand side of  @xmath1 . in the same manner",
    "we choose a candidate  @xmath406 that is assigned to the left hand side of  @xmath1 .",
    "let  @xmath407 , we now enforce that there is a labeling  @xmath19 of @xmath137 such that for each stop  @xmath13 it contains a label of  @xmath408 .",
    "we check whether the set  @xmath409 admits a labeling  @xmath19 for  @xmath137 .",
    "later , we describe more specifically how to do this . if  @xmath19 exists , we continue with the third step of the algorithm using @xmath137 and @xmath19 as input .",
    "otherwise , we scale all candidates of  @xmath17 smaller by a constant factor and repeat the described procedure . sampling a pre - defined scaling range @xmath410 $ ] , we find in that manner a scaling factor  @xmath411 $ ] for the candidates that admits a labeling  @xmath19 of  @xmath137 .",
    "we choose @xmath50 as large as possible .",
    "if we could not find @xmath50 , e.g , because we have chosen @xmath410 $ ] or the sampling not appropriately , we abort the algorithm , stating that the algorithm could not find a labeling .",
    "next , we describe how to check whether there is a labeling for @xmath409 .",
    "since for each  @xmath13 the set  @xmath412 contains two candidates , we can make use of a 2sat formulation to model the labeling problem .",
    "for each stop @xmath404 and each candidate @xmath413 , we introduce the boolean variable @xmath414 .",
    "those boolean variables induce the set @xmath415 .",
    "the following formulas are satisfiable if and only if  @xmath19 is a labeling of @xmath4 .",
    "@xmath416 the first formula ensures that there is no label of the solution that intersects any metro line .",
    "the second one avoids overlaps between labels , while the two last formulas enforce that for each stop @xmath417 there is exactly one label of  @xmath412 that is contained in the solution .    according to  @xcite in linear time with respect to the number of variables and formulas , the satisfiability can be checked .",
    "we introduce @xmath418 variables and instantiate the second formula @xmath2 times , because each pair of candidates may overlap .",
    "the remaining formulas are instantiated in @xmath2 time . hence",
    ", the total running time is in @xmath419 , where  @xmath117 denotes the number of scaling steps .",
    "we assume that we are given the scaled instance @xmath403 and the labeling @xmath19 for @xmath137 of the previous phase .",
    "we apply a pre - selection on the candidates by discarding candidates such that no two stops candidates of different metro lines intersect and each metro line satisfies assumption  [ assumption : separation ] and assumption  [ assumption : transitivity - property ] . we never remove a label in @xmath19 from the candidate set , however , to ensure that there is always a feasible solution . finally ,",
    "considering the metro lines independently , we select for each stop a candidate to be its label using the dynamic program described in section  [ sec : single - line ] .    [ [ th - step - candidate - pre - selection . ] ] 3th step ",
    "candidate pre - selection .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we first ensure that  @xmath137 satisfies assumption  [ assumption : separation ] and assumption  [ assumption : transitivity - property ] . if two candidates @xmath14 and @xmath145 of the same metro line  @xmath1 intersect and if they are assigned to opposite sides of  @xmath1 , we delete one of both labels as follows .",
    "if @xmath420 , we delete @xmath145 , and if @xmath421 we delete @xmath14 .",
    "otherwise , if none of both is contained in @xmath19 , we delete that label with higher costs ; ties are broken arbitrarily .",
    "afterwards , assumption  [ assumption : separation ] is satisfied .",
    "further , for each metro line @xmath1 of @xmath137 we iterate through the stops of  @xmath1 from its beginning to its end .",
    "doing so , we delete candidates from  @xmath17 violating assumption  [ assumption : transitivity - property ] as described as follows .",
    "let  @xmath9 be the currently considered stop .",
    "for each candidate  @xmath422 we check for each stop  @xmath10 with  @xmath423 whether there is a label  @xmath424 that intersects  @xmath14 .",
    "if  @xmath145 exists , we check whether each candidate  @xmath184 of any stop  @xmath179 with @xmath425 intersects @xmath14 or  @xmath145 .",
    "if this is not the case , we delete @xmath14 if @xmath14 is not contained in  @xmath19 , and otherwise we delete  @xmath145 .",
    "note that not both can be contained in  @xmath426 . by construction",
    "each metro line of instance  @xmath137 then satisfies assumption  [ assumption : transitivity - property ] , where @xmath427 .",
    "finally , we ensure that the metro lines in  @xmath4 become _ independent _ in the sense that no candidates of stops belonging to different metro lines intersect and no candidate intersects any metro line .",
    "hence , after this step , the metro lines can independently be labeled such that the resulting labelings compose to a labeling of @xmath137 .",
    "we first rank the candidates of  @xmath17 as follows .",
    "for each metro line  @xmath5 we construct a labeling  @xmath428 using the dynamic program for the two sided case as presented in section  [ sec : single - line ] . due to the previous step ,",
    "those labelings exist .",
    "note that for two metro lines  @xmath429 there may be labels @xmath430 and  @xmath431 that intersect each other .",
    "for each candidate  @xmath432 we set  @xmath433 if @xmath434 for a metro line  @xmath5 , and @xmath435 otherwise .",
    "a candidate  @xmath432 has a _ smaller rank _ than a candidate  @xmath436 , if  @xmath437 or @xmath438 and @xmath439 ; ties are broken arbitrarily .",
    "we now greedily remove candidates from  @xmath17 until all metro lines are independent .",
    "we create a conflict graph  @xmath185 such that the vertices of  @xmath78 are the candidates and the edges model intersections between candidates , i.e. , two vertices are adjacent if and only if the corresponding labels intersect .",
    "then , we delete all vertices whose corresponding labels intersect any metro line .",
    "afterwards , starting with  @xmath440 , we construct an independent set  @xmath441 on @xmath78 as follows .",
    "first , we add all vertices of  @xmath78 to  @xmath441 , whose labels are contained in  @xmath19 , and delete them and their neighbors from  @xmath78 .",
    "since the labels in @xmath19 do not intersect , @xmath441 is an independent set of the original conflict graph . in the increasing order of their ranks",
    ", we remove each vertex  @xmath89 and its neighbors from  @xmath78 . each time we add  @xmath89 to @xmath441 ; obviously sustaining that  @xmath441 is an independent set in  @xmath78 .",
    "we then update for each stop  @xmath13 its candidate set  @xmath15 to  @xmath442 . since all labels of  @xmath19 are contained in @xmath441 , there is a labeling for @xmath443 based on the new candidate set  @xmath17 .    [",
    "[ th - step - final - candidate - selection . ] ] 4th step ",
    "final candidate selection .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    let @xmath136 be the instance after applying the third step and @xmath19 be the labeling that has been created in the first step . by the previous step the metro lines are in the sense independent that candidates of stops belonging to different metro lines do not intersect .",
    "further , they all satisfy assumption  [ assumption : separation ] and assumption  [ assumption : transitivity - property ] .",
    "hence , we use the dynamic programming approach of section  [ sec : single - line ] in order to label them independently .",
    "the composition of those labelings is then a labeling  @xmath19 of  @xmath137 .",
    "we now present the three approaches ilpalg , scalealg , greedyalg , which are adaptions of our workflow .",
    "we use those to experimentally evaluate our approach against alternatives . while greedyalgis a simple and fast greedy algorithm , ilpalgand scalealgare based on an ilp formulation .      to assess the impact of the second phase of our approach , we present an integer linear programming formulation that optimally solves metromaplabelingwith respect to the required cost function .",
    "let @xmath24 be an instance of that problem , which we obtain after the first phase of our approach .",
    "we first note that we apply a specific cost function ( see section  [ sec : weighting - function ] ) .",
    "the cost function @xmath375 , which rates two consecutive switchovers @xmath234 and @xmath235 of a labeling  @xmath19 , does not rely on the actual switchovers , but only on their positions on the corresponding metro line .",
    "hence , we may assume that @xmath375 expects the stops of @xmath55 and @xmath65 .",
    "this assumption helps us reduce the number of variables .    for each candidate",
    "@xmath444 we define a binary variable  @xmath445 .",
    "if @xmath446 , we interpret it such that @xmath14 is selected for the labeling .",
    "we introduce the following constraints .",
    "@xmath447 moreover , for each metro line  @xmath5 we define the following variables . to that end , let @xmath448 be the set of all consecutive labels and let @xmath449 be the stops of @xmath1 in that particular order .",
    "@xmath450 if @xmath451 , we interpret it such that both @xmath14 and @xmath145 are selected for the labeling .",
    "if @xmath452 , we interpret it such that the selected labels of the stops @xmath93 and @xmath453 form a switchover .",
    "if @xmath454 , we interpret it such that the selected labels at @xmath93 , @xmath453 , @xmath455 and @xmath456 form two consecutive switchovers .",
    "further , for each metro line  @xmath1 we introduce the following constraints . in these constraints",
    "@xmath457 denotes the set of labels that lie to the left of @xmath1 , and @xmath458 denotes the set of labels that lie to the right of  @xmath1 .",
    "@xmath459{\\sum_{\\ell \\in l({\\ensuremath{\\mathcal k}}_{s_{i}})}}x_\\ell + \\smashoperator[r]{\\sum_{\\ell \\in r({\\ensuremath{\\mathcal k}}_{s_{i+1}})}}x_\\ell-1 & \\leq z_i & & 1\\leq i < n\\label{ilp : c5a}\\\\    \\smashoperator[r]{\\sum_{\\ell \\in r({\\ensuremath{\\mathcal k}}_{s_{i}})}}x_\\ell + \\smashoperator[r]{\\sum_{\\ell \\in l({\\ensuremath{\\mathcal k}}_{s_{i+1}})}}x_\\ell-1 & \\leq z_i & & 1\\leq i < n\\label{ilp : c5b}\\\\    z_i+z_j-1-\\smashoperator[lr]{\\sum_{i < k < j}}z_k&\\leq h_{i , j } & & 1\\leq i < j < n\\label{ilp : c6 } \\end{aligned}\\ ] ] we further define for each metro line  @xmath1 the following linear term .",
    "@xmath460{\\sum_{(\\ell,\\ell')\\in \\mathcal p}}y_{\\ell,\\ell ' }    \\cdot w_2(\\ell,\\ell ' ) +    \\smashoperator[lr]{\\sum_{\\stackrel{1\\leq i <",
    "n}{i < j < n}}}h_{i , j}\\cdot    w_3(s_i , s_j)\\end{aligned}\\ ] ]    subject to the presented constraints ( [ ilp : c1])([ilp : c6 ] ) we then minimize    @xmath461    consider a variable assignment that minimizes ( [ ilp : objective ] ) and satisfies constraints ( [ ilp : c1])([ilp : c6 ] ) .",
    "we show that  @xmath462 is an optimal labeling of the given instance with respect to the given cost function .",
    "first of all ,  @xmath19 is a valid labeling .",
    "constraint  ( [ ilp : c1 ] ) ensures that no label in  @xmath19 intersects any metro line . by constraint  ( [ ilp : c2 ] ) the labels in  @xmath19 are pairwise disjoint . finally , by constraint  ( [ ilp : c3 ] ) for each stop there is exactly one label contained in  @xmath19 .",
    "in particular , for a metro line  @xmath5 , the set  @xmath463 is a valid labeling of  @xmath1 .",
    "we now show that  @xmath464 for any metro line  @xmath465 .",
    "since we minimize ( [ ilp : objective ] ) , this implies the optimality of  @xmath19 .",
    "obviously , for a label @xmath466 the cost  @xmath368 is taken into account in  @xmath467 if and only if  @xmath14 belongs to  @xmath19 .    by constraint  ( [ ilp : c4 ] ) for two consecutive labels @xmath14 and",
    "@xmath145 of @xmath1 we have @xmath451 if both are contained in @xmath19 .",
    "further , by the minimality of ( [ ilp : objective ] ) , if at least one of both labels does not belong to  @xmath19 , it holds @xmath468 .",
    "hence , @xmath469 is taken into account in  @xmath467 if and only if both  @xmath14 and @xmath145 belong to  @xmath19 .    by constraint  ( [ ilp : c5a ] ) and constraint  ( [ ilp : c5b ] ) it holds @xmath470",
    "if the labels @xmath471 and @xmath472 of the consecutive stops  @xmath93 and @xmath453 form a switchover in @xmath19 . hence , by constraint  ( [ ilp : c6 ] ) it further holds @xmath454 if the labels of @xmath93 and @xmath453 as well as @xmath455 and @xmath456 form switchovers  @xmath272 and @xmath473 in @xmath19 , and , furthermore , there is no other switchover in between @xmath272 and @xmath473 , i.e. , both switchovers are consecutive . on the other hand , by the minimality of  @xmath467 in all other cases it holds  @xmath474 .",
    "hence , @xmath475 is taken into account in  @xmath467 if and only if  @xmath272 and @xmath473 are consecutive switchovers in  @xmath19 .",
    "altogether we obtain the following theorem .    given an optimal variable assignment for the presented ilp formulation , the set  @xmath476 is an optimal labeling of @xmath396 with respect to  @xmath161 .",
    "the approach  ilpalgsimply replaces the second phase of dpalgby that ilp formulation .",
    "hence , it solves the second phase optimally .",
    "the approach scalealgsamples a predefined scaling range @xmath477 $ ] , which is also used by dpalg . for each scale",
    "@xmath50 it scales the candidates correspondingly . using the ilp formulation it then checks whether the candidates admit a labeling .",
    "hence , we approximately obtain the greatest scaling factor that admits a labeling .",
    "the algorithm greedyalgreplaces the dynamic programming approach in our workflow as follows .",
    "starting with the solution  @xmath19 enforced by the 1st step , the greedy algorithm iterates once through the stops of  @xmath1 .",
    "for each stop  @xmath9 of  @xmath1 it selects the candidate  @xmath213 that minimizes @xmath478 among all valid candidates in  @xmath15 , where  @xmath479 is the candidate selected for the previous stop  @xmath480 and @xmath481 is the candidate for the successive stop .",
    "it replaces the candidate of  @xmath9 in @xmath19 with  @xmath14 .",
    "to evaluate our approach presented in section  [ sec : multi - lines ] , we did a case study on the metro systems of sydney ( 173 stops ) and vienna ( 84 stops ) , which have been used as benchmarks before @xcite . for sydney we took the curved layout from  (",
    "1a ) and the octilinear layouts from  ( * ? ?",
    "9a , b ) ( * ? ? ?",
    "* fig .  10 . ) , while for vienna we took the curved layout from  ( * ? ? ?",
    "8c ) and the ocitlinear layouts from  ( * ? ? ?",
    "13a , b ) .",
    "see also table  [ table : instances ] for an overview of the instances . since the metro lines of sydney are not only paths , we disassembled those metro lines into single paths .",
    "we did this by hand and tried to extract as long paths as possible .",
    "hence , the instances of sydney decompose into 12 lines and the instances of vienna into 5 lines .",
    "we took the positions of the stops as presented in the corresponding papers . in the curved layout of sydney we removed the stops _ tempe _ and _ martin place _",
    "( in fig .",
    "[ fig : labeligns : paper : sydney - curved - dp ] marked as red dots ) , because both stops are tightly enclosed by metro lines such that only the placement of very small labels is possible .",
    "this is not so much a problem of our approach , but of the given layout . in a semi - automatic approach the designer would then need to change the layout . for the curvilinear layouts we used labels of curvedstyleand for the octilinear layouts we used labels of octilinstyle . for the layouts of _ sydney2",
    "_ , _ sydney3 _ and _ vienna2 _ the authors present labelings ; see fig .",
    "[ fig : labeling : sydneyb ] , fig .",
    "[ fig : labeling : comparison : complete ] and fig .",
    "[ fig : labeling : comparison : vienna ] . for any other layout",
    "they do not present labelings .",
    ".overview of considered instances .",
    "_ style : _ style of map and applied labels .",
    "@xmath482 : ratio of applied scale factors .",
    "the scale  @xmath483 is a lower bound for the largest possible scaling factor ( obtained by scalealg ) , and @xmath9 is the scale computed by the first phase of our workflow . [",
    "cols=\"^,^,^,^,^,^,^,^\",options=\"header \" , ]     the experiments were performed on a single core of an intel(r ) core(tm ) i7 - 3520 m cpu processor .",
    "the machine is clocked at 2.9 ghz , and has 4096 mb ram .",
    "our implementation is written in java .",
    "for each instance and each algorithm we conducted 100 runs and took the average running times .",
    "each time before we started the 100 runs , we performed 50 runs without measuring the running time in order to _ warm up _ the virtual machine ( java(tm ) se runtime environment , build 1.8.0@xmath48460-b27 , oracle ) .",
    "we did this in order to measure the actual running times of our algorithms and not to measure the time that the virtual machine of java spends for loading classes and optimizing byte code .",
    "table  [ table : running - time ] and table  [ table : quality ] present our quantitative results for the considered instances . for _",
    "sydney4 _ labelings are found in fig .",
    "[ fig : labeling : sydneya ] and for _ sydney2 _ , _ sydney3 _ and _ vienna2 _ labelings created by dpalgare found in fig .",
    "[ fig : labeling : sydneyb ] , fig .",
    "[ fig : labeling : comparison : complete ] , fig .",
    "[ fig : labeling : comparison : vienna ] , respectively .",
    "the labelings of all instances are found in the appendix .",
    "we first note that with respect to the total number of created candidates only few labels are removed for enforcing assumption  [ assumption : separation ] and assumption  [ assumption : transitivity - property ] ; see table  [ table : quality ] , _ a[assumption : separation][assumption : transitivity - property]_. this indicates that requiring those assumptions is not a real restriction on a realistic set of candidates , even though they seem to be artificial .    * running time . * even for large networks as sydney , our algorithm dpalgneeds less than 0.6 seconds",
    "; see table  [ table : running - time ] .",
    "this shows that our approach is applicable for scenarios in which the map designer wants to adapt the layout and its labeling interactively .",
    "in particular in those scenarios not every of the four steps must be repeated each time , which improves computing time .",
    "for example , after once applying the scaling step ( 1st phase , 2nd step  the most time consuming step ) , the instance does not need to be rescaled again , but the relation between label size and map size is determined .",
    "further ,  dpalgis only moderately slower than greedyalg ; @xmath485 seconds in maximum , see table  [ table : running - time ] , _",
    "sydney4_. on the other hand , the approaches ilpalgand scalealgare not alternatives , because their running times are much worse ; over 1 minute in maximum ; see table  [ table : running - time ] , _",
    "sydney4_.    * quality .",
    "* we observe that in all labelings created by dpalgthere are only few switchovers , namely 48 ; see table  [ table : quality ] , column so .",
    "hence , there are long _ sequences _ of consecutive labels that lie on the same side of their metro line ; see corresponding figures and table  [ table : quality ] , column sequence .",
    "together with the ilp based approach ilpalg , it yields the solution with the longest sequences in average .",
    "in particular the switchovers are placed such that those sequences are regularly sized .",
    "the labels of a single sequence are mostly directed into the same  @xmath50-direction and in particular they are similarly shaped so that those sequences of labels form regular patterns as desired .",
    "the alignment of the labels is chosen so that they blend in with the alignment of their adjacent labels . in comparison with the solution of ilpalg",
    ", the costs of dpalgnever exceed a factor of 1.52 ; see table  [ table : quality ] , column @xmath486 . for the instances",
    "_ sydney4 _ and _ vienna3 _ it even obtains a solution with the same costs . for the other instances , dpalgbasically spends its additional costs on the choice of the single labels ( @xmath487 ) and the distance of switchovers ( @xmath488 ) .",
    "in contrast , greedyalgyields significantly more switchovers ; in maximum 20 switchovers more than dpalg , see _",
    "sydney4 _ .",
    "consequently , there are many distracting switches of labels from one side to the other of the metro line ; e.g. see fig .",
    "[ fig : labeling : sydneya ] .",
    "although the sequences of consecutive labels lying on the same side may be longer in maximum compared to dpalg , they are much shorter in average ; see table  [ table : quality ] , column sequence .",
    "further , several adjacent labels point in opposite @xmath50-directions , which results in distracting effects ; see corresponding figures .",
    "altogether , the labelings that are obtained by greedyalgdo not look regular , but cluttered . dpalgsolves those problems since it considers the metro line _ globally _ yielding an optimal labeling for a single line .",
    "this observation is also reflected in table  [ table : quality ] , column @xmath486 , which shows that the costs computed by greedyalgare significantly larger than the costs computed by  dpalg .",
    "in particular costs for positioning the switchovers are much worse ; _ sydney2 _ : @xmath489 , @xmath490 and _ vienna2 _ : @xmath491 , @xmath492 .",
    "hence , the better quality of dpalgprevails the slightly better running time of greedyalg .",
    "concerning the computed scale factor in the first phase of dpalg , the labels are smaller than those produced by scalealgby a factor of 0.540.81 ; see table  [ table : instances ] . while this seems to be a drawback on the first sight , the smaller size provides necessary space that is used to obtain a labeling of higher quality with respect to the number and the placement of switchovers .",
    "hence , the solutions of scalealghave more switchovers ( except for _ vienna2 _ ) and shorter sequences of labels lying on the same side in average than dpalg ; see table  [ table : quality ] , column so and sequence .",
    "we observe that both nllenburg and wolff s and our labelings of sydney look quite similar , whereas our labeling has less switchovers ; see fig .",
    "[ fig : labeling : sydneyb ] .",
    "the same applies for the labelings of the layout of vienna ; see fig .",
    "[ fig : labeling : comparison : vienna ] .",
    "recall that their approach needed more than 10 hours to compute a labeled metro map of sydney . since they need only up to 23 minutes to compute the layout without labeling , it lends itself to first apply their approach to gain a layout and then to apply our approach to construct a corresponding labeling .",
    "wang and chi present in their paper  @xcite an approach that is divided into two phases . in the first phase they compute the layout of the metro map and",
    "then in the second phase they create a labeling for that layout . for both steps",
    "they formulate energy functions expressing their desired objectives , which then are locally optimized .",
    "figure  [ fig : labeling : comparison : wang : complete ] shows the metro map of sydney created by their approach . in comparison ,",
    "[ fig : labeling : comparison : dp : complete ] shows the same layout with a labeling created by our approach .",
    "both labelings look quite similar . while our approach needed 0.26s ( see table  [ table : running - time ] , _ sydney3 _ )",
    ", their approach needed less than 0.1s on their machine . however , their approach does not guarantee that the labels are occlusion - free , but labels may overlap with metro lines and other labels .",
    "this may result in illegible drawings of metro maps .",
    "for example fig .",
    "[ fig : labeling : comparison ] shows two labelings of a metro line of sydney that has been laid out by the tool of wang and chi .",
    "figure  [ fig : labeling : comparison : wang ] shows a labeling that has been created by their tool , while fig .",
    "[ fig : labeling : comparison : dp ] shows a labeling that has been created by our approach .",
    "the labeling of wang and chi has several serious defects that makes the map hardly readable .",
    "the marked regions a , b and c show labels that overlap each other .",
    "hence , some of the labels are obscured partly , while some of the labels are completely covered by other labels .",
    "for example in region b the label _",
    "peters _ and the label _ erskinville _ overlap the label _ macdonaldtown _ such that it is hardly viewable .",
    "further , region  c contains two diagonal rows of stops aligned parallel . while the upper row is visible , the lower row is almost completely covered by labels .",
    "further , the labels of the upper row obscure the labels of the lower row .",
    "in contrast our approach yields an occlusion - free labeling , such that each label and each stop is easily legible .",
    "we therefore think that our approach is a reasonable alternative for the labeling step of wang and chi s approach .",
    "in particular , we think that the better quality of our approach prevails the better running time of wang and chi s approach .    in conclusion",
    "our workflow is a reasonable alternative and improvement for the approaches presented both by nllenburg and wolff , and by wang and chi . in the former case ,",
    "our approach is significantly faster , while in contrast to the latter case we can guarantee occlusion - free labelings .",
    "[ [ acknowledgment . ] ] acknowledgment .",
    "+ + + + + + + + + + + + + + +    we sincerely thank herman haverkort , arlind nocaj , aidan slingsby and jo wood for helpful and interesting discussions .",
    "10    p.  k. agarwal , m.  van kreveld , and s.  suri .",
    "label placement by maximum independent set in rectangles .",
    ", 11:209218 , 1998 .",
    "b.  aspvall , m.  f. plass , and r.  e. tarjan .",
    "a linear - time algorithm for testing the truth of certain quantified boolean formulas .",
    ", 8(3):121123 , 1979 .",
    "j.  christensen , j.  marks , and s.  shieber .",
    "an empirical study of algorithms for point - feature label placement .",
    ", 14(3):203232 , 1995 .",
    "t.  h. cormen , c.  e. leiserson , r.  l. rivest , and c.  stein . .",
    "press , 2009 .",
    "m.  fink , h.  haverkort , m.  nllenburg , m.  roberts , j.  schuhmann , and a.  wolff . .",
    "in w.  didimo and m.  patrignani , editors , _ graph drawing _ , volume 7704 of _ lncs _ , pages 463474 .",
    "springer berlin heidelberg , 2013 .",
    "m.  formann and f.  wagner .",
    "a packing problem with applications to lettering of maps . in _",
    "acm sympos . on comput .",
    "_ , pages 281288 , 1991 .",
    "r.  j. fowler , m.  s. paterson , and s.  l. tanimoto .",
    "optimal packing and covering in the plane are np - complete .",
    ", 12(3):133  137 , 1981 .",
    "e.  imhof .",
    "positioning names on maps . , pages 128144 , 1975 .",
    "k.  g. kakoulis and i.  g. tollis . a unified approach to labeling graphical features . in _ proceedings of the fourteenth annual symposium on computational geometry _ , scg 98 , pages 347356 , new york , ny , usa , 1998 .",
    "d.  lichtenstein .",
    "planar formulae and their uses .",
    ", 11(2):329343 , 1982 .",
    "m.  nllenburg and a.  wolff .",
    "drawing and labeling high - quality metro maps by mixed - integer programming .",
    ", 17(5):626641 , 2011 .",
    "j.  stott , p.  rodgers , j.  martinez - ovando , and s.  walker .",
    "automatic metro map layout using multicriteria optimization .",
    ", 17(1):101114 , 2011 .",
    "a.  van goethem , w.  meulemans , a.  reimer , h.  haverkort , and b.  speckmann .",
    "topologically safe curved schematisation . , 50(3):276285 , 2013 .",
    "wang and m .-",
    "focus+context metro maps . , 17(12):25282535 , 2011 .",
    "a.  wolff .",
    "graph drawing and cartography . in r.",
    "tamassia , editor , _ handbook of graph drawing and visualization _ , chapter  23 , pages 697736 .",
    "crc press , 2013 ."
  ],
  "abstract_text": [
    "<S> drawing network maps automatically comprises two challenging steps , namely laying out the map and placing non - overlapping labels . in this paper </S>",
    "<S> we tackle the problem of labeling an already existing network map considering the application of metro maps . </S>",
    "<S> we present a flexible and versatile labeling model that subsumes different labeling styles . </S>",
    "<S> we show that labeling a single line of the network is np - hard , even if we make very restricting assumptions about the labeling style that is used with this model . for a restricted variant of that model </S>",
    "<S> , we then introduce an efficient algorithm that optimally labels a single line with respect to a given cost function . based on that algorithm , </S>",
    "<S> we present a general and sophisticated workflow for multiple metro lines , which is experimentally evaluated on real - world metro maps . </S>"
  ]
}
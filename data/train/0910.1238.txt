{
  "article_text": [
    "constrained optimum path ( cop ) problems , where optimum path from origin to destination satisfying additional constraints must be found , appear in many real - life applications , especially on communication and transportation networks .",
    "these problems have attracted considerable attention from different research communities : operations research , telecommunications because of its various applications ( see @xcite and the references therein ) .",
    "most of cop problems are np - hard .",
    "some instances can be solved efficiently by specific techniques , for instance , branch and bound using a lagrangian - based bound @xcite , vertex - labeling @xcite , etc .",
    "these techniques seem to be sophisticated and depend on particular constraints and objective functions to be optimized .",
    "moreover , they are difficult to extend , for example , when we face with generalized problems where more constraints are required to be satisfied .",
    "we propose in this paper a novel approach for modeling and solving some cop problems by local search where the desired paths are elementary ( i.e. no repeated nodes ) .",
    "the objective of this work is to extend the ` ls(graph & tree ) ` framework @xcite by the design and the implementation of abstractions allowing to easily model and solve some cop problems using this approach .",
    "the computational model features compositionality , modularity , reuse , and strengthens the local search modeling benefits of constraint - based local search @xcite which provides the separation of concerns .",
    "the proposed computational model has been applied to the edp problem .",
    "computational results show the significance of the approach .",
    "we introduce in this section the proposed approach for modeling cop problems with spanning trees .",
    "we first give somes definitions and notations over graphs .",
    "our framework considers both directed and undirected graphs but for simplicity , we consider in this presentation only undirected graphs .",
    "given an undirected graph @xmath0 , we denote @xmath1 , @xmath2 respectively the set of nodes and the set of edges of @xmath0 .    in this paper , we only consider elementary paths , henceforth we use the word `` path '' instead of `` elementary path '' if there is no ambiguity .",
    "a graph is connected if and only if there exists a path from @xmath3 to @xmath4 .",
    "a tree is an undirected connected graph containing no cycles .",
    "a spanning tree @xmath5 of an undirected connected graph @xmath0 is a tree spanning all the nodes of @xmath0 : @xmath6 and @xmath7 .",
    "tr _ is called a rooted tree at @xmath8 if the node @xmath8 has been designated the root .",
    "each edge of @xmath5 is implicitly oriented towards the root .",
    "if the edge @xmath9 is oriented from @xmath3 to @xmath10 , we call @xmath10 the father of @xmath3 on @xmath5 .    the key decision design is inspired from the following observation : given a rooted tree @xmath5 whose root is @xmath11 , the path from a given node @xmath12 to @xmath11 on @xmath5 is unique .",
    "an update of @xmath5 will generate a new rooted tree which may induce a new path from @xmath12 to @xmath11 on this tree .",
    "given an undirected graph @xmath0 and a node @xmath13 , _ _",
    "varrootedspanningtree__@xmath14 ( also called rooted spanning tree variable ) is a concept representing a dynamic spanning tree of @xmath0 .",
    "the spanning tree is rooted at @xmath8 .    in order to model a cop problem in an undirected graph @xmath0 in which the source and the target of the desired path are respectively @xmath15",
    ", we use _ _ varrootedspanningtree__@xmath16 which is _ _ varrootedspanningtree__@xmath17 with a node @xmath12 designated as the source node .",
    "each instance @xmath5 of _ _ varrootedspanningtree__@xmath16 specifies a unique path from @xmath12 to @xmath11 on @xmath0 .",
    "henceforth we use @xmath12 to denote the source node of any rooted spanning tree of the given graph and the path from @xmath12 to the root of a rooted spanning tree @xmath5 on @xmath5 is called the path induced by @xmath5 if there is no ambiguity .",
    "the main avantage of using rooted spanning tree for modeling paths instead of using explicit paths representation ( i.e. a sequence of nodes ) is the simplification of neighborhood computation .",
    "the tree structure constains rich information that induces directly path structure from a node @xmath12 to the root .",
    "a simple update over that tree ( i.e. an edge replacement which is detailed in section [ neighborhood ] ) will induce a new path from @xmath12 to the root .",
    "given an instance @xmath5 of _ _ varrootedspanningtree__@xmath16 , we show how to change @xmath5 in order to generate a new rooted spanning tree @xmath18 of @xmath0 which induces a new path from @xmath12 to @xmath11 on @xmath0 .",
    "given an undirected graph @xmath0 , an instance @xmath5 of _ _ varrootedspanningtree__@xmath16 , an edge @xmath19 such that @xmath20 is called _ replacing _ edge of @xmath5 .",
    "we denote @xmath21 the set of _ replacing _ edges of @xmath5 . given @xmath22 , an edge @xmath23 that belongs to the path between two endpoints of @xmath24 on @xmath5 is called _ replacable _ edge of @xmath24 .",
    "we denote @xmath25 the set of _ replacable _ edges of @xmath24 .",
    "intuitionally , a _ replacing _ edge @xmath24 is an edge that is not in the tree @xmath5 but that can be added to @xmath5 ( this edge insertion creates a cycle @xmath26 when we ignore orientations of edges of @xmath5 ) , and all edges of this cycle except @xmath24 are _ replacable _ edges of @xmath24 .    given an undirected graph @xmath0 , an instance @xmath5 of _ _ varrootedspanningtree__@xmath16 , @xmath24 and @xmath23 are respectively _ replacing _ edge of @xmath5 and _ replacable _ edge of @xmath24 , we define the following edge replacement action :    1 .",
    "insert the edge @xmath19 to @xmath5 .",
    "this creates an undirected graph @xmath0 with a cycle @xmath26 containing the edge @xmath23 .",
    "2 .   remove @xmath23 from @xmath0 .    after taking above edge replacement action",
    ", we obtain a new rooted spaning tree @xmath18 of @xmath0 .",
    "we denote @xmath27 .",
    "the neighborhood of @xmath5 is @xmath28    it is easy to observe that two different spanning trees @xmath29 and @xmath30 rooted at @xmath11 of an undirected graph @xmath0 may induce the same path from @xmath12 to @xmath11 on @xmath0 ( @xmath15 ) .",
    "the neighborhood @xmath31 must then be reduced such that the new tree induces a new path from @xmath12 to @xmath11 .",
    "this reduction is described in @xcite .",
    "the action @xmath32 is called a basic move .",
    "figure 1 gives an example of basic move .",
    "[ basicmove ]    [ cols=\"^,^ \" , ]      we would like to thank maria jos blesa aguilera who has kindly provided some graphs for the experimentation .",
    "this research is also partially supported by the interuniversity attraction poles programme ( belgian state , belgian science policy ) ."
  ],
  "abstract_text": [
    "<S> constrained optimum path ( cop ) problems appear in many real - life applications , especially on communication networks . some of these problems have been considered and solved by specific techniques which are usually difficult to extend . in this paper , we introduce a novel local search modeling for solving some cops by local search . </S>",
    "<S> the modeling features the compositionality , modularity , reuse and strengthens the benefits of constrained - based local search @xcite . </S>",
    "<S> we also apply the modeling to the edge - disjoint paths problem ( edp ) . </S>",
    "<S> computational results show the significance of the approach . </S>"
  ]
}
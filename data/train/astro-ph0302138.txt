{
  "article_text": [
    "the cmbfast  computer program for calculating cosmic microwave background ( cmb ) temperature and polarization anisotropy spectra , implementing the fast line - of - sight integration method , has been publicly available since 1996 @xcite .",
    "it has been widely used to calculate spectra for open , closed , and flat cosmological models containing baryons and photons , cold dark matter , massless and massive neutrinos , and a cosmological constant .",
    "it is a very well - tested program that has enabled many cosmologists to compare models of the universe against the experimental cmb data .",
    "however , from the point of view of code design , there are few programs that could not be improved .",
    "this is also true for cmbfast : it is a rather monolithic code that is quite difficult to oversee and modify .",
    "for example , variations in the cosmic expansion history due to dark energy necessitate similar changes to the code in numerous separate locations .    in order to address these shortcomings and simplify modifications of the code  in our case",
    "the implementation of quintessence models and gauge invariant variables  we have ported the cmbfast  package to the c++ programming language . the c++ language is _ object _ oriented and it turns out that to think in objects ( more of this soon ) , is very advantageous in cosmology .    the program has not been rewritten from scratch , but redesigned step by step .",
    "some people may argue that it is hence not _ independent _ , i.e. some unknown errors and limitations in cmbfast  could be present in the new code .",
    "the object oriented modular design , however , ensures that each part of the code is independently testable .",
    "if , for instance , one does not trust the integrator , one can use another one to check it , without changing anything else in the package .",
    "in addition most of the lines in the code _ have _ been rewritten , to benefit from the redesign .",
    "cmbeasy  calculates the temperature and polarization anisotropies for spatially flat universes , containing dark energy , dark matter , baryons and neutrinos . the dark energy can be a cosmological constant or quintessence",
    "there are three scalar field field models implemented , or alternatively one may specify an equation - of - state history .",
    "furthermore , the modular code is easily adapted to new problems in cosmology .    in the next section [ sec::objects ]",
    "we explain object oriented programming and its use in cosmology .",
    "the design of cmbeasy  is presented in section [ sec::design ] , while the graphical user interface is discussed in section [ sec::gui ] .",
    "computing precision is discussed in section [ sec::prec ] , while the documentation for cmbeasy  is introduced in [ sec::documentation ] . for an introduction to perturbation theory and cmb physics using the conventions of cmbeasy , as well as a summary of the evolution equations ,",
    "please see the documentation on www.cmbeasy.org .",
    "we briefly introduce the concept of object oriented programming before turning to the design of cmbeasy . we do this using examples from the code .      in c++ ,",
    "a class is a user - defined data type @xcite . as with any data type",
    ", there can be many variables with the same type , e.g. floats , arrays , complex numbers . in the case of user - defined types , the specific variables are called objects .      quite often",
    ", some data and functions acting on the data are so tightly connected , that it is sensible to think of them as one object . as an example , let us discuss splines",
    ". given a discrete set of @xmath0 points @xmath1 with @xmath2 and corresponding @xmath3 , a spline can smoothly interpolate , i.e. give @xmath4 for any @xmath5 $ ] .",
    "provided that the sampling is dense enough , arbitrary functions may be described by a spline for all practical purposes .",
    "this is widely used in cmbfast .",
    "for instance , the @xmath6 s are calculated only every @xmath7 l - values for @xmath8 .",
    "as the spectrum is very smooth , this still gives a precise result .",
    "now , the function describing the photon visibility ( see also figure [ fig::visibility ] ) , calculated in the part of the code that tracks the thermal history of the universe , can be used to define a spline . without object orientation",
    ", one would need to keep track of various variables , most notably arrays for the @xmath9 data and derivatives needed for spline interpolation . also , in order to assure quick access within the spline data table , one either needs to know the precise layout of the data arrays ( cmbfast  does this ) , or even more variables ( storing for instance the last interpolation @xmath10 value ) would be necessary . in total",
    ", this sums up to a lot of bookkeeping for a conceptually simple entity like a spline .",
    "the visibility @xmath11 as a function of conformal time @xmath12 in @xmath13 .",
    "its peak at about @xmath14 defines the epoch of last scattering . before the visibility function peaks",
    ", photons are very likely to scatter again until the universe becomes translucent . after the peak",
    ", photons do not scatter at a substantial rate .",
    "it is thus the balance between frequent scattering and sufficiently low optical depth that will give the largest contribution towards the anisotropy today . and",
    "this fact is exactly encoded in @xmath15 . ]",
    "alternatively , one may define a _ class _ holding all the necessary variables a spline needs , together with _",
    "definitions _ of an interface with which other parts of the program can access and manipulate the spline data .",
    "an object behaves as described by the corresponding class .",
    "there can be an arbitrary number of objects of a certain class ( just like there is one floating point type float , but many variables of _ type _ float in a program ) .",
    "the class ( in our case ) called spline , can hence be viewed as yet another data type , with no more bookkeeping needed than say for a floating point number . to illustrate this ,",
    "let us discuss the visibility function @xmath11 , where @xmath16 is the optical depth .",
    "its typical shape is depicted in figure [ fig::visibility ] , and its peak defines the epoch of last scattering .",
    "as soon as the spline called * visibility * has been given the data , its maximum can be determined by a single line of code : +   tau_ls = * visibility*.maximum ( ) ; +   here , the function maximum ( ) acts on the visibility . the important point to notice is that _ all _ functions defined in the spline class are immediately available to everyone who uses splines .",
    "so , whenever one needs to find the maximum , integrate a spline , calculate the convolution of two splines etc , this can be done using very few lines of code : the functionality is fully encapsulated in the implementation of the spline class .",
    "any increase in performance or sophistication of the spline class immediately translates over to all splines used in the program .",
    "tightly connected to the fact that data and methods are combined within one object , is the concept of _ inheritance _ , which proves very powerful in cosmology .",
    "a class can inherit from another class ( in this context called base class ) .",
    "all variables and the full functionality that the base class implements are instantly available to the inheriting class , called sub - class . the sub - class",
    "can then re - implement functions of the base class to provide a different functionality , or add new functions and variables .",
    "the important point to note is that _ all _ classes deriving from the same base class necessarily need to provide _ all _ the functions the base class provides .",
    "hence , whenever the code uses the base class , one can substitute an inheriting class for the base class by simply changing one line of code .    as an illustration ,",
    "let us look at the perturbation class of cmbeasy  which is designed to evolve the perturbation equations for one @xmath17-mode through conformal time and calculate the anisotropy sources .",
    "the perturbation class defines functions to do these calculations which other parts of the program can be sure to find implemented in all sub - classes . in practice , there are four classes that inherit from it , for perturbations in gauge - invariant variables and in synchronous gauge both with and without quintessence ( see also figure [ fig::design ] ) . from the point of view of the rest of the program ,",
    "all of them are equally well suited .",
    "hence , when given a perturbation object , one may e.g. ask it to initialize the perturbation variables :   + ->initialscalarperturbations ( ) ; +   yet , depending on the specific sub - class the object belongs to , the implementation of initialscalarperturbations ( ) and hence the code executed will be different . technically this is called polymorphism .",
    "there are roughly three main steps needed to calculate the cmb anisotropy spectrum within the line of sight strategy : ( 1 ) solve the expansion and thermal background evolution , ( 2 ) propagate the perturbation equations in fourier space , ( 3 ) map the temperature anisotropy onto the sky today . in each step ,",
    "several classes work together . to illustrate the hierarchy of the most important classes , an overview is given in figure [ fig::design ] .",
    "the core part of the package is the cmbcalc class .",
    "it is the scheduler calling other objects to complete all three steps .",
    "so let us turn to step ( 1 ) , the expansion history of the universe .",
    "the cosmos class is the central instance providing background quantities like the energy density @xmath18 of all species etc .",
    "this centralization of the background evolution within the cosmos class facilitates the modification of the code significantly .",
    "a different background cosmology ( such as quintessence ) can be implemented by just inheriting from cosmos and re - implementing the expansion history part of the code . for most other objects in the code ,",
    "it makes no difference _ exactly what _ caused the universe to expand , as long as they can rely on cosmos or any sub - class to provide access to the expansion history . both the expansion and the thermal history",
    "are computed at the beginning of the calculation and stored in splines .",
    "all fluctuation equations are handled by perturbation and its sub - classes .",
    "its most prominent function is propagatescalar(@xmath19 ) which evolves the perturbations from conformal time @xmath20 to @xmath21 . for numerical stability ,",
    "one usually treats the era of tight coupling between baryons and photons differently .",
    "however , this results in a non - analytic jump in the r.h.s of the perturbation equations at @xmath22 .",
    "some integrators for ordinary differential equations get confused by this .",
    "therefore , propagatescalar ( ) will determine if the jump occurs within [ @xmath19 ] and if so , integrate up to @xmath22 , make a tiny , such that for double precision variables @xmath24 .",
    "] jump and integrate on till @xmath25 . at the end of each propagation",
    ", the sources of cmb anisotropies are calculated by the scalarsources ( ) function .",
    "the convolution of the sources with the bessel functions , as well as the final @xmath17-integration are performed in the scalarintegrator sub - class .",
    "in contrast to cmbfast , we formulate the convolution with the @xmath26 as an ordinary differential equation ( ode ) .",
    "in fact , the spline class provides the convolution functionality .",
    "if higher precision in this step is wanted , one may simply increase the desired precision for spline , which will pass this through to the integrator of ode s .",
    "as far as the @xmath17-integration is concerned , we stick to the interpolation points of cmbfast .",
    "we have written two other implementations of scalarintegrator , although none could compete with cmbfast s speed . furthermore , no gain in accuracy justifying the speed tradeoff was found .",
    "as far as the @xmath17-integration is concerned , a fast and independent realization would be desirable .",
    "with the high level features of c++ , algorithms that seem hard to implement in other languages may be feasible .      the most valuable class assisting the computation may be spline .",
    "as splines are used all over the code , and quite often in time - critical environments , the main design goal has been speed . in order to perform a spline interpolation at @xmath10",
    ", one needs to find the interval @xmath27 $ ] . while cmbfast   hard - wires the size and layout of the @xmath1-data , this has not been an option for a versatile spline implementation . yet , in all time critical situations within our calculation , two facts come to the rescue : firstly , interpolations occur in order and close to the last interpolation . hence",
    ", the next value of @xmath10 is likely to lie within the same interval ( or close to it ) .",
    "secondly , many splines with exactly the same @xmath10-data are evaluated at the same @xmath10 .",
    "for instance , the r.h.s of the perturbation equations need background quantities all at the same @xmath12 .",
    "as all background quantities get their data at the same @xmath28 in cosmos , they necessarily share the same @xmath10-data .",
    "therefore , some parts of the interpolation formulae have to be computed only once . ] for each @xmath12 .",
    "in addition , finding the position of the interpolation interval is simple : it will be the same for the same @xmath12 .",
    "to accommodate for these groups of splines and caching , splines come in two flavors : with and without its own @xmath10-data .",
    "while a spline with its own @xmath10-data can live on its own , a spline without @xmath10-data can only be created if a `` mother '' spline providing the @xmath10-data is given upon the creation of the `` child '' spline . within these `` families '' of shared @xmath10-data , interpolation at the same @xmath10",
    "is particularly fast .",
    "not only must a spline be fast , it must also be robust .",
    "hence , a spline will allocate more memory if needed , check that no access to data occurs outside its bound , check that all data is ordered @xmath2 and make sure that the interpolation tables have been built before any interpolation takes place",
    ". splines can easily be visualized . to write the data to a file , simply call + .dump(``filename '' ) + the anisotropy sources , are evaluated on a @xmath29 grid .",
    "for the final @xmath12 and @xmath17 integration , one needs to interpolate at intermediate points .",
    "this is conveniently done using the class splineweb .",
    "it is essentially an array of splines , one for each @xmath17 and one for each @xmath12 value .",
    "if one needs to interpolate at a given @xmath17 value , one can ask splineweb to return a spline with x - data in the @xmath12 direction : +   = * web*.createalongy(k ) ; +   this is used to get the splines which are convoluted with the bessel functions .",
    "it is also very convenient for making slices through the cold dark matter power spectrum ( at either fixed @xmath17 or @xmath12 ) .",
    "given for instance the cold dark matter splineweb * power * , one can dump it to a file : + .dumpalongx(@xmath12,``filename '' ) ; +   the above command would save the spectrum at arbitrary conformal time @xmath12 to disk .",
    "there are some more of these `` helpers '' , most of them small classes that sometimes make life much easier .",
    "the last one we will introduce here is anchor which keeps track of objects that are dynamically created ( as are many splines ) .",
    "the objects it is asked to keep track of are deleted by it on demand , or when the anchor object itself is deleted .",
    "therefore , it greatly simplifies memory handling and prevents memory leaks .      the different background evolution of quintessence @xcite scenarios",
    "is implemented using the quintcosmos and the quintessence class .",
    "each subclass of quintessence corresponds to a certain model , such as the exponential potential @xcite , inverse power law @xcite , leaping kinetic term @xcite etc .",
    "certainly , a more monolithic design with the quintessence models implemented in the quintcosmos class would have been possible .",
    "however , we believe that the _ details _ of a model are best kept to a class of its own . for instance tuning model parameters in order to get the right amount of @xmath30 is different for each model and a monolithic design would have to call _ differently named _ functions for _ different _ models . using sub - classing , quintcosmos ( and perturbation )",
    "always calls functions with the same argument and name for all models . yet , as the object implementing the function differs for each model , the code executed by calling the function can be totally different .",
    "thus , a new quintessence model can be implemented by simply sub - classing quintessence and implementing a minimal set of functions , such as one for the scalar field potential .          for educational purposes and also to simplify the parameter input and subsequent visualization of results ,",
    "a graphical user interface ( gui ) is of great value .",
    "luckily , there is the very sophisticated and publicly available ` qt ' library @xcite with which the creation of a gui is facilitated .",
    "its object oriented c++ design is a perfect match for the cmbeasy  package .",
    "there is therefore an executable program called ` cmbeasy ' giving interactive access to almost the full capabilities of the package , including quintessence .",
    "as is seen from figure [ fig::gui ] , the spectra are visualized in separate plots arranged in a so called tab - widget .",
    "one can for instance zoom in , select and save curves or print the plot .      comparing the results from cmbfast  to those obtained from cmbeasy ,",
    "one generally notes accordance to better than @xmath31 ( see also figure [ fig::precission ] ) .    in principle , the line of sight algorithm is equivalent to evolving a large hierarchy of multipoles . in practice , as one truncates the hierarchy in the line of sight approach at some low @xmath32 , there is a reflection of power after the higher multipoles gradually build up .",
    "however , as by far the largest contribution towards the anisotropy occurs around recombination ( when the higher multipoles are still small ) , this does not spoil the result dramatically . yet , to check this , one may increase the number of multipoles involved .",
    "this is true both for cmbfast  and cmbeasy .    within cmbeasy , there are five instances in which the precision may be increased . in three of the five cases ,",
    "changing one variable suffices .",
    "the first case is the background evolution .",
    "here one may want to increase ( or decrease ) the precision requested from the ode integrator . during perturbation evolution in @xmath17-space ,",
    "the precision requirement given to perturbation can be changed in a similar manner .",
    "the same is true for the convolution of the sources with the bessel functions , taking place in scalarintegrator . finally , and",
    "a bit more difficult , one may change the number and position of @xmath17-values contributing towards the @xmath17-integration .",
    "this can be done by modifying integrator , the base class of scalarintegrator .",
    "alternatively , one could devise a different implementation for the @xmath17-integration .",
    "finally , one may increase the number of @xmath32 s at which the @xmath6 s are calculated .",
    "obtained from cmbfast . the relative deviation @xmath33 of cmbeasy s synchronous ( long dashed line ) and gauge invariant ( solid line ) solution with respect to the original cmbfast  spectrum are also given .",
    "the accordance of all spectra is always better than @xmath34 . in the gauge invariant case ,",
    "both the background and perturbation evolution as well as the @xmath6 integration are entirely independent of the cmbfast  code .",
    "however , they use the same thermal history algorithm that should in principle be independently implemented for cross checks . ]      using the doxygen program , the documentation is automatically generated from the source code of the cmbeasy  package . in its html version ,",
    "it is interactively navigable and includes the full source code . due to the automatic generation",
    ", the documentation and the code are naturally synchronized .",
    "instructions for setting up and running the program are available in this html documentation .",
    "in addition , a postscript version of the documentation is generated .",
    "we have devised an object oriented code for calculating cosmic microwave background anisotropies .",
    "the main benefits of this code derive from its modularity .",
    "the modular design allows one to test and refine each part of cmbeasy   individually .",
    "different modules , for different numerical methods and theoretical approaches , can easily be switched .",
    "this feature should prove extremely useful in the development and refinement of the code .",
    "as cosmological theory reaches for a new level of precision to match the new generation of experiments , map @xcite , planck @xcite and other experiments will soon put our predictions and hypotheses to the test , so future work will seek to improve the accuracy of the code .",
    "( at the present time , cmbeasy   and the standard cmbfast  are generally in agreement to better than @xmath31 . )",
    "the modular design allows one to more easily develop and build upon cmbeasy , to implement new cosmological models and include more physics . as our theoretical cosmological models are a work - in - progress",
    " as cmb data comes in  so are our tools for modeling the universe .",
    "and so it makes sense to use a program design which makes this development easy .",
    "hence , the functional blocks used in cmbeasy   considerably reduce the time to implement new cosmological models . for most purposes ,",
    "a new model can be achieved by sub - classing from existing solutions , thus eliminating the need to rewrite large parts of the code .",
    "furthermore , new modules can be easily introduced to carry out calculations that rely on the linear perturbation spectrum .",
    "examples include lensing , secondary sources in the cmb , reionization , and cross - correlation with other tracers of large scale structure .",
    "an additional benefit of the cmbeasy   package is the graphical front - end .",
    "as we have described , the gui allows a user to visually dial through a range of parameters .",
    "we expect that this functionality will be useful for developing understanding and intuition for cmb physics and cosmological models .",
    "i would like to thank luca amendola and ruth durrer for their help , uros seljak and matias zaldarriaga for cmbfast  and their permission to distribute cmbeasy  under its new name .",
    "i would like to thank r. r. caldwell , martin kunz , christian mller , gregor schfer and c. wetterich for useful discussions .",
    "finally i would like to thank the free software community for their excellent compilers , libraries and desktop environments .",
    "this work was supported by nsf grant phy-0099543 at dartmouth and phy-9907949 at the kitp and the graduiertenkolleg des instituts fr theoretische physik der universitt heidelberg ."
  ],
  "abstract_text": [
    "<S> we have ported the cmbfast  package to the c++ programming language to produce , an object oriented code for the cosmic microwave background . </S>",
    "<S> the code is available at www.cmbeasy.org . </S>",
    "<S> we sketch the design of the new code , emphasizing the benefits of object orientation in cosmology , which allow for simple substitution of different cosmological models and gauges . </S>",
    "<S> both gauge invariant perturbations and quintessence support has been added to the code . </S>",
    "<S> for ease of use , as well as for instruction , a graphical user interface is available .    </S>"
  ]
}
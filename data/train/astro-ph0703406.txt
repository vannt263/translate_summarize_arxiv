{
  "article_text": [
    "newton s third law is a central pillar of physics .",
    "much of what we know about the dynamical evolution of galaxies comes from @xmath0-body simulation , but most @xmath0-body codes use approximations that break the third law .",
    "a well - known example of the consequences of breaking it is provided by the sinking satellite problem @xcite ; the dynamical friction felt by the satellite is grossly overestimated if one `` pins '' the centre of the host galaxy , ignoring the galaxy s @xmath4 dipole response .",
    "this example is perhaps extreme , but there are many other situations where one is interested in the detailed response of a galaxy to asymmetric perturbations and would like to be able to model it without having to worry about artifacts arising from violations of newton s third law .",
    "examples include modelling bar - halo interactions ( see @xcite and references therein ) and the wandering of central supermassive black holes .",
    "this paper describes the @xmath0-body code grommet ( gravity on multiple meshes economically and transparently ) , which has been designed specifically to model the detailed dynamical evolution of individual galaxies without using any approximations that violate newton s third law .",
    "i assume that the galaxy is collisionless .",
    "it is completely described by a distribution function ( df ) @xmath5 , which gives the ( mass ) density of particles in phase space , along with the potential  @xmath6 generated by this df and any external sources .",
    "the evolution of @xmath7 is governed by the collisionless boltzmann equation ( cbe ) , @xmath8 where the accelerations @xmath9 . as @xcite and @xcite emphasise",
    ", in a collisionless @xmath0-body code particles are not to be thought of as representing stars or groups of stars .",
    "instead one is using the method of characteristics to integrate  ( [ eq : cbe ] ) , estimating the accelerations @xmath10 by monte carlo sampling .",
    "of course , the shot noise in these estimates means that in practice any simulation will never be perfectly collisionless .",
    "therefore it is important to make @xmath0 as large as possible in order to minimize the effects of this noise .",
    "so , grommet has been designed to be both fast and economical on memory .    in section  [ sec : potsolve ] below i describe the multiple - mesh procedure used by grommet to estimate accelerations .",
    "section  [ sec : move ] shows how this leads naturally to a momentum - conserving block - timestep integrator based on duncan , levison & lee s ( 1998 ) potential - splitting scheme . in section  [ sec : tests ] i present the results of some tests and also compare grommet s performance against other codes. section  [ sec : summary ] sums up . for completeness ,",
    "i include in an appendix an explanation of james ( 1977 ) method , which is used in section  [ sec : potsolve ] .",
    "the task of the potential solver in a collisionless @xmath0-body code is to estimate the accelerations @xmath11 where one does not know the density distribution @xmath12 explicitly , but instead only has a discrete sample of @xmath0 particles with positions @xmath13 and masses @xmath14 drawn from it .      at the heart of grommet s potential solver",
    "is the particle mesh ( pm ) method @xcite .",
    "it uses a cubical mesh , with vertices at positions @xmath15 , spaced a distance @xmath16 apart . the procedure for obtaining an initial estimate of the accelerations ( eq .",
    "[ eq : accels ] ) felt by each particle follows .    1",
    ".   loop over all @xmath0 particles using cloud - in - cell interpolation to build up the discretized density distribution @xmath17 ; 2 .",
    "calculate the potential  @xmath18 corresponding to this  @xmath19 using james ( 1977 ) method ( see appendix ) ; 3 .   looping again over all @xmath0 particles ,",
    "use a finite - difference approximation to estimate accelerations -@xmath20 at the mesh points surrounding each particle , then interpolate the value of the acceleration at the particle s location using the same cloud - in - cell scheme employed in step  ( i ) .    since steps ( i ) and",
    "( iii ) use the same interpolation scheme , this procedure produces accelerations that obey newton s third law subject to one extra condition : the finite - difference scheme in step ( iii ) can not provide meaningful accelerations for particles that lie in the outermost layer of mesh cells , which means that those particles should be omitted in step  ( i ) .",
    "this seems an almost trivial point , but it is important for the refinement scheme introduced below .",
    "it turns out that for the scheme below to work properly we have to peel off the outer _ two _ layers of cells .",
    "i typically use meshes with @xmath21 or @xmath22 cells , of which then only @xmath23 or @xmath24 are assignable in step  ( i ) .",
    "apart from respecting newton s third law , the other attractive features of the pm method are its efficiency and its linear scaling with  @xmath0 : the time needed to carry out step ( ii ) is independent of @xmath0 , but for a typical mesh with @xmath21 cells the overall time is dominated by the @xmath25 cost of carrying out the assignment steps ( i ) and ( iii ) once @xmath26 ; similarly , the memory needed to store mesh quantities and to carry out james method is negligible compared to that used for storing the particles masses , positions and accelerations .",
    "the major disadvantage of the pm method is that it does not work well for centrally concentrated mass distributions , since each particle has an effective size of order the mesh spacing  @xmath16 .",
    "in other words , the mesh spacing sets the effective softening length used in the calculation of the forces .    ]",
    "the natural remedy of this shortcoming is to introduce finer submeshes in interesting , higher - density regions and to recalculate the accelerations for particles inside each submesh . but how best to include the effect of the parent mesh s gravity field on the accelerations calculated in each submesh and vice versa ?",
    "one possibility is to solve poisson s equation on the submesh subject to boundary conditions interpolated from the parent mesh ( e.g. , * ? ? ?",
    "* ; * ? ? ?",
    "this is a key element of the widely - used family of multigrid methods ( e.g , .",
    "* ; * ? ? ?",
    "* ) , and would be straightforward to apply in grommet using the method of equivalent charges ( see appendix ) . however , all of these schemes violate newton s third law , as one can easily see by considering the force between a particle inside a submesh and another one outside .",
    "grommet instead uses a simplified version of the scheme proposed by @xcite ( see also figure  [ fig : mesh ] ) .",
    "the acceleration felt by each particle is calculated using a series of nested `` boxes '' .",
    "we start with the outermost toplevel box , which discretizes the simulation volume into , say , @xmath27 assignable cells .",
    "this box , like any other box , can contain zero , one or more subboxes .",
    "each subbox contains two meshes : a coarse one composed of an @xmath28 subblock of the parent s cells , and a fine one that covers the same subblock twice as finely in each direction , with @xmath29 cells .    for the most common situation",
    "in which each box contains no more than one subbox , the acceleration at any position @xmath30 is given by the sum over all boxes , @xmath31 where the contribution from the @xmath32 box , @xmath33 is the difference between accelerations calculated using the pm method on the box s fine ( + ) and coarse ( - ) meshes , simply ignoring any particles that lie outside .",
    "the outermost toplevel box ( @xmath34 ) has no coarse mesh , so @xmath35 . in this scheme",
    "the acceleration between any two particles is calculated using the box with the finest mesh spacing that encloses them both and newton s third law is obeyed to machine precision .",
    "this last feature comes at a cost though : the acceleration  ( [ eq : grommetaccel ] ) is discontinuous at box boundaries , a point to which i return below .",
    "sometimes one might want to refine a region that can not be enclosed within a single subbox .",
    "if one simply tiles the region using , say , two abutting subboxes , the force between particles located at either side of the boundary between them will be calculated using the coarse parent mesh , which is usually not desirable .",
    "the solution is to let the subboxes overlap by a few mesh cells and then correct eq .",
    "( [ eq : grommetaccel ] ) for the double counting of particles in the overlap region by introducing a third subbox whose boundaries are given by the intersection of the two overlapping subboxes and subtracting the accelerations  ( [ eq : al ] ) obtained in this new subbox .",
    "in contrast , @xcite introduce a buffer zone around each box and treat particles in the buffer zone differently from the rest .",
    "their scheme violates newton s third law .",
    "i have deliberately omitted any automated scheme for deciding where and when to introduce subboxes ; these schemes inevitably break time - reversibility , and , for the type of problem the code was designed for , i expect that the user will already have a much better idea of how best to place boxes .",
    "the characteristic equation of the cbe is @xmath36 where the accelerations @xmath37 depend on the df  @xmath7 through equ .",
    "( [ eq : accels ] ) . the most straightforward and widely used way of following the characteristics is by using a leapfrog integrator .",
    "the ( fixed - timestep ) leapfrog produces an approximate solution to  ( [ eq : charac ] ) that respects many of its important symmetries ; it is symplectic - body codes , including grommet . ] , reversible in time and , when the accelerations are obtained using a potential solver that respects newton s third law , it conserves linear momentum .",
    "an unattractive feature of the leapfrog is that it uses the same fixed timestep for all particles .",
    "consider a deeply plunging radial orbit in a model galaxy with a central density cusp or black hole . integrating this orbit accurately near pericentre requires a very small timestep , which , in the standard leapfrog scheme , means that all other particles have to be integrated using the same small timestep , even those on loosely bound circular orbits .",
    "this can be prohibitively expensive , since it involves calculating the full set of accelerations @xmath37 for all particles at every timestep .",
    "grommet uses a block - timestep scheme to improve efficiency .",
    "each of the boxes of section  [ sec : potsolve ] above has an associated timestep , which can be chosen to be either equal to that of its parent box or a factor of two shorter . broadly speaking ,",
    "a particle s position and velocity are updated using the shortest timestep of any of the boxes enclosing it , but the force between any pair of particles is updated only on the timestep of the longest particle , thus conserving linear momentum .",
    "the rest of this section makes this somewhat vague description more precise .",
    "recall that a leapfrog integrator with a single , fixed timestep @xmath38 corresponds to motion in a time - dependent hamiltonian ( e.g. , * ? ? ?",
    "* ) @xmath39 where @xmath40 is the kinetic energy of all the particles and @xmath41 with @xmath42 .",
    "the periodic comb of delta functions turns on the potential energy @xmath43 only at times @xmath44 for integer  @xmath45 . integrating the resulting equations of motion from time @xmath46 to @xmath47 yields @xmath48",
    "where the accelerations @xmath49 evaluated at time  @xmath46 .",
    "this is just the sequence of steps for the kick - drift - kick form of the leapfrog : the potential is turned on briefly just after @xmath46 resulting in a `` kick '' ( denoted @xmath50 ) to the particles velocities ; the particles then `` drift '' ( @xmath51 ) along at their new velocities until the potential turns on again just before @xmath47 , at which point they receive another kick .",
    "the drift - kick - drift form of the leapfrog can be obtained by adding @xmath52 to the argument of the delta functions or , alternatively , by integrating the equations of motion from @xmath53 to @xmath54 instead .",
    "another way of looking at each of these versions of the leapfrog is to consider them as compositions of the two time - asymmetric first - order symplectic integrators ( each applied left to right ) , @xmath55 and @xmath56 , whose first - order error terms cancel ( e.g. , * ? ? ?",
    "in the following i write the leapfrogs as the sequence of operations @xmath57 and @xmath58 , dropping the @xmath59 arguments .      in grommet",
    "the accelerations @xmath10 are given by a sum  ( [ eq : grommetaccel ] ) of contributions  ( [ eq : al ] ) from boxes with different spatial refinement levels .",
    "the outermost box is associated with a timestep @xmath60 and timestep level @xmath61 .",
    "each subbox has a timestep @xmath62 with timestep level @xmath63 either equal to that of its parent or larger by one .",
    "let us add together all the contributions  ( [ eq : al ] ) to @xmath10 from boxes having timestep level  @xmath63 and write the result as @xmath64 .",
    "let @xmath65 be the corresponding contribution to the potential energy . instead of turning on the full potential @xmath66 at every timestep ,",
    "consider the alternative hamiltonian @xmath67 where @xmath68 is the maximum timestep refinement level and each @xmath69 is turned on only at times @xmath70 .",
    "this is a variant of the potential splitting used by @xcite to model close encounters in planetary systems .",
    "integrating the equations of motion for this new hamiltonian results in a nested sequence of @xmath57 leapfrog steps , as shown in figure  [ fig : multikddk ] .",
    "the sequence can be produced using the following simple recursive algorithm : this algorithm is called initially with @xmath61 and @xmath71 .",
    "each kick(@xmath63,@xmath72 ) operation applies an impulse @xmath73 to all particles , which changes the particles velocities but not their positions .",
    "the drift operation moves the particles once the complete set of impulses has been applied .",
    "this algorithm requires a factor @xmath74 fewer kick operations ( and therefore fewer expensive force evaluations ) than a simple leapfrog with a single timestep @xmath75 .",
    "it is obvious that it conserves linear momentum and is reversible in time . unlike the integrator in @xcite , however , it is _ not _ symplectic ; the discontinuities in the accelerations at box boundaries mean that the poincar integral invariants are not conserved .",
    "i have carried out a number of simple tests with small numbers of particles ( @xmath76 ) to confirm that my implementation of the ideas above really does respect newton s third law and conserve linear momentum .",
    "these small-@xmath0 tests serve only as minimal sanity checks ; as stressed by @xcite , truly interesting tests of a collisionless code come not from testing how faithfully it reproduces the solution to the two - body problem , but rather from its ability to model collisionless systems accurately using large numbers of particles .    in this section",
    "i use some simple collisionless galaxy models to test grommet s potential solver and integrator , comparing results obtained from grommet against those obtained from two other codes .",
    "both of the other codes are available as part of the nemo package .",
    "the first is the fast tree code described in @xcite .",
    "it obtains accelerations from a cartesian multipole expansion .",
    "this respects newton s third law and a standard leapfrog integrator built around this potential solver then naturally conserves linear momentum .",
    "( a multiple - timestep version is also available , but it does not conserve momentum . )",
    "the second code @xcite uses the so - called `` self - consistent field '' ( scf ) method , which represents the density and potential using a truncated basis function expansion .",
    "it shows no respect for newton s third law , but , like grommet , is optimized for modelling single galaxies .",
    "-particle realization of a truncated power - law sphere .",
    "the lower set of points plot results calculated using the potential solver of section  [ sec : potsolve ] using 8 levels of refinement of a @xmath23 mesh with @xmath77 .",
    "the upper set ( offset by 0.1 vertically ) are for results obtained using a tree code with fixed softening length @xmath78 .",
    "[ fig : fracaccels ] ]    -particle realization of a power - law sphere , a factor of 10 more particles than in figure  [ fig : fracaccels ] .",
    "the lower set of points plot results obtained using the potential solver of section  [ sec : potsolve ] with the same set of nested boxes and @xmath23 mesh employed for figure  [ fig : fracaccels ] .",
    "the middle and upper set show the effects of using finer meshes with @xmath24 ( middle ) and @xmath79 ( upper ) cells , offset by 0.04 and 0.08 respectively .",
    "[ fig : fracaccelszoom ] ]      real galaxies have steep central density cusps ( e.g. , * ? ? ?",
    "* ) , so an obvious test of the potential solver is to check the accelerations it returns for an @xmath0-body realization of a truncated power - law sphere with density profile @xmath80 i have generated a realization with @xmath81 , @xmath82 having @xmath83 equal - mass particles and used eq .",
    "( [ eq : grommetaccel ] ) to calculate accelerations at randomly selected positions inside and around the sphere .",
    "for this i use a toplevel box enclosing the region @xmath84 together with eight levels of refinement , the boundary of the @xmath85 subbox being given by @xmath86 .",
    "figure  [ fig : fracaccels ] plots the fractional difference between the results of this procedure against the exact , analytical expression for the acceleration . for radii @xmath87",
    "the rms fractional error is only 0.0023 , rising to 0.007 for @xmath88 , within which there are relatively few particles .",
    "the source of this good and desirable behaviour is the decrease in the effective softening length as one moves to smaller length scales .    for comparison , the upper set of points in figure  [ fig : fracaccels ] plot the errors in the accelerations of the same @xmath83-particle sphere calculated at the same positions using the tree code falcon with softening kernel @xmath89 and fixed softening length @xmath78 .",
    "the rms fractional error in the resulting accelerations for radii @xmath87 is 0.011 , over four times larger than grommet s , while for @xmath90 , the calculated accelerations become systematically too low .",
    "falcon takes about 2.5 times longer than grommet to produce these results and needs more than three times the memory .",
    "perhaps the most worrying feature of the nested box scheme of section  [ sec : potsolve ] is that the accelerations  ( [ eq : grommetaccel ] ) are discontinuous at box boundaries .",
    "one can see some hints of this discontinuity in figure  [ fig : fracaccels ] at @xmath91 , @xmath92 , @xmath93 , but it is even clearer in figure  [ fig : fracaccelszoom ] which plots the fractional errors in a @xmath94-particle realization .",
    "even if one were to run a simulation with such large @xmath0 , the discontinuity itself is unlikely to be important because the integration scheme in section  [ sec : move ] does not depend explicitly on the derivatives of the accelerations ( but the discontinuity does mean that the integrator is not symplectic , as noted earlier ) .",
    "more important is the fact that if the discontinuity is noticeable it means that the bias in the estimates of the accelerations has become significant .",
    "the natural solution is then to move to a finer mesh ( e.g. , @xmath24 cells instead of @xmath23 , figure  [ fig : fracaccelszoom ] ) .      for the dynamical tests i use a spherical isotropic @xcite model with density profile",
    "@xmath95 this idealized model is in equilibrium .",
    "then by jeans theorem @xcite its df  @xmath96 can depend on @xmath97 only through the integrals of motion , which are the energy @xmath98 and angular momentum @xmath99 per unit mass .",
    "since the model is isotropic the df can not depend on the latter and so @xmath100",
    ".    a straightforward procedure for generating initial conditions ( hereafter ics ) corresponding to this model would be to draw @xmath0 particles directly from @xmath101 , assigning each a mass @xmath102 . integrating  ( [ eq : hernq ] )",
    ", the fraction of particles inside radius  @xmath103 would then be @xmath104 , showing that there would be relatively few particles with radii @xmath105 , deep inside the interesting @xmath106 central density cusp . to improve resolution near the centre",
    ", i instead generate initial conditions using a multi - mass scheme , drawing particles from an anisotropic sampling df @xcite with _ number _ density @xmath107 where @xcite @xmath108 @xmath109 is the particle s pericentre radius and the constant @xmath110 is chosen to normalize  @xmath111 . when the parameter @xmath112 , the sampling df @xmath111 is identical to @xmath101 .",
    "increasing @xmath113 improves the sampling of the cusp by increasing the number density of particles having pericentres @xmath114 . to balance this increase in number density each particle",
    "is assigned a mass @xmath115 so that the phase - space mass density is still given by the desired  @xmath101    for the tests below i adopt units @xmath116 and draw @xmath117 particles with radii in the range @xmath118 from the sampling df  ( [ eq : fs ] ) with @xmath119 .",
    "poisson noise in the resulting distribution of particles makes it slightly asymmetric , which has two unwanted consequences ( see also * ? ? ?",
    "first , the centre of mass of the system moves with a constant velocity of order @xmath120 because the total linear momentum of the particles is small , but non - zero .",
    "second , the asymmetry quickly destroys the inner part of the @xmath106 density cusp , even when viewed a frame co - moving with the centre of mass . to remove",
    "both of these effects , i extend my ics to include the mirror distribution obtained by reflecting each of the @xmath117 particles with @xmath121 .",
    "the full ics then have @xmath122 particles .    ]           of course , one does not expect an @xmath0-body model evolved from these ics to be in perfect equilibrium ; the ics omit particles outside the range @xmath118 and are constructed assuming the exact potential corresponding to the density distribution  ( [ eq : hernq ] ) instead of the softened potential used in the @xmath0-body code . nevertheless , it is interesting to compare the evolution of the @xmath0-body model obtained from grommet with those obtained from the other two codes .",
    "figure  [ fig : hernqrho ] shows the density profile of the models after 10 time units ( or @xmath123 circular orbit periods at @xmath124 ) .",
    "all three models use the same simple leapfrog integrator with timestep @xmath125 ; only the source of the accelerations is different .",
    "for grommet i use boxes with boundaries at @xmath126 for @xmath127 .",
    "each box has @xmath23 assignable cells , the cell length varying from 3.33 in the toplevel box down to @xmath128 in the innermost box .",
    "falcon s results are obtained using kernel @xmath89 with softening length @xmath129 , while the scf expansion uses the @xcite basis function expansion truncated at @xmath130 radial and @xmath131 angular terms .",
    "the results in figure  [ fig : hernqrho ] are unsurprising .",
    "the density at the very centre of the grommet and falcon models falls slowly because because the ics omit particles with radii @xmath132 and do not take into account the softening in these codes .",
    "in contrast , the density profile of the scf model does not change significantly because its basis function expansion is incapable of producing anything that deviates strongly from a hernquist model on small spatial scales .",
    "much more is happening at the level of individual orbits , however .",
    "all of these models begin with spherical symmetry and remain spherical , apart from the effects of poisson noise .",
    "therefore the amount of diffusion in the angular momentum  @xmath133 of their particles orbits serves as a convenient measure of how far each code is from being perfectly collisionless .",
    "figure  [ fig : hernqdiff ] shows that the particles in all three models suffer from significant amounts of diffusion .",
    "the scf model shows the least diffusion , but it is only marginally better than grommet ; although the scf potential remains close to the exact hernquist potential , the flickering of the expansion coefficients with time makes the orbits diffuse just like in any other code .",
    "the diffusion is worst in the falcon model , particularly for orbits having pericentres much larger than its fixed softening length @xmath129 .",
    "all of these results are based on the variation in orbits angular momentum in models integrated from @xmath134 to @xmath135 , but i find similar results for models integrated from , say , @xmath135 to @xmath136 when scaled to account for the longer timescale over which the diffusion occurs .",
    ".comparison of time required for different codes to integrate the multi - mass hernquist model of section  [ sec : hernqtest ] , relative to the single - timestep implementation of grommet .",
    "neither the grommet nor the scf models take advantage of the reflection symmetry of this simple problem .",
    "[ cols=\">,^ , < \" , ]     the results presented so far have been obtained using an integrator with a single small timestep , but the dynamical time inside the cusp of a hernquist model varies with radius @xmath103 approximately as @xmath137 . as , e.g. ,",
    "@xcite have argued , it is natural to advance particles using a timestep proportional to the local dynamical time .",
    "we can come close to the optimal @xmath138 scaling by using the block - timestep integrator of section  [ sec : multimove ] above and halving the timestep on every second subbox . to test the practicality of this scheme ,",
    "i have run a model with timesteps @xmath139 for particles with @xmath140 , shrinking by a factor of two at the boundaries @xmath126 of boxes @xmath141 , 8 , 10 and  12 . in the innermost ( @xmath142 ) box",
    "the timestep is @xmath125 , the same used for the single - timestep run above .",
    "this multiple - timestep model yields results almost indistinguishable from the single - timestep grommet model plotted in figures [ fig : hernqrho ] and  [ fig : hernqdiff ] , but is three times faster ( see table  [ tab : timings ] ) .",
    "if it were appropriate to halve the timestep at _ all _ box boundaries @xmath143 ( see below for an example ) then the block - timestep scheme would yield a sixfold increase in speed over the single - timestep integrator .     and a final mass @xmath144 .",
    "the results obtained using grommet s multiple - timestep scheme are almost identical to those calculated from young s ( 1980 ) method .",
    "[ fig : hernqadia ] ]      for a slightly more interesting test , i model the growth of a black hole at the centre of a galaxy by slowly adding a plummer sphere potential @xmath145 to a multi - mass hernquist model .",
    "the scale radius of the plummer sphere @xmath146 and its mass grows with time as @xcite @xmath147 & \\hbox{if          $ t < t_{\\rm",
    "g}$}\\\\         1   & \\hbox{otherwise } ,    \\end{cases}\\ ] ] its final mass @xmath148 being reached in a time @xmath149 .",
    "a safe , formal way of including the effects of this external potential in grommet is to add an extra term @xmath150 to the hamiltonian  ( [ eq : hamfrogs ] ) .",
    "integrating the resulting equations of motion then leads to the modifications needed in the block - timestep algorithm ( section  [ sec : multimove ] ) . in this case",
    "the necessary modifications are obvious , but for more realistic situations ( e.g. , if the mass of the external source did not change in time and if the location of its centre were not pinned to @xmath151 ) then it is helpful to start from  ( [ eq : hamfrogs ] ) to ensure that the perturbation is turned on at the appropriate times and momentum conserved .    as above",
    ", i use a nested series of boxes with boundaries at @xmath152 with @xmath127 , each box covered by a @xmath23 mesh .",
    "boxes 0 to  5 share a common timestep  @xmath153 .",
    "this is refined in every subsequent box , so that the timestep associated with box  @xmath154 is @xmath155 and the innermost box ( @xmath156 ) has timestep @xmath157 .",
    "my initial conditions consist of @xmath158 particles drawn from the sampling df  ( [ eq : fs ] ) above .",
    "the artificially imposed potential at @xmath151 means that this simulation only makes sense if the particles centre of mass is also at @xmath151 . as an alternative to symmetrizing the ics as before , i instead modify step  ( i ) of the pm method ( section  [ sec : potsolve ] ) to reflect the particle distribution through each of the planes @xmath151 ,",
    "@xmath159 , @xmath160 when assigning mass to meshes .",
    "this increases the effective @xmath0 used for the potential by a factor of 8 at little cost .",
    "the density profile of the final model is plotted in figure  [ fig : hernqadia ] .",
    "it agrees well with the predictions obtained using young s ( 1980 ) method .",
    "i have described grommet , a fast , economical particle - multiple - mesh @xmath0-body code designed specifically for modelling the dynamical evolution of individual galaxies . in other words , it is designed to tackle almost exactly the same type of problem to which the scf method @xcite is applied . indeed , grommet can  loosely  be thought of as a variant of the scf method using a cartesian basis function expansion with millions of expansion coefficients ( the density at each mesh vertex in each of the nested boxes ) .",
    "any application of the scf method requires that one make a careful choice of the basis functions used to represent the density and potential .",
    "similarly , in grommet one has to choose , by hand , the set of nested boxes to use .    for a realistic model galaxy with @xmath1 ,",
    "the single - timestep incarnation of grommet is comparable in speed to an scf code using a low - order basis expansion and shows comparable amounts of relaxation . for most applications ,",
    "however , grommet will be much faster : its nested - box potential solver admits an efficient natural block - timestep integrator ( section  [ sec : multimove ] ) , leading to an approximate three- to six - fold increase in speed for realistic galaxy models ; the scf method typically requires a fairly high - order expansion to produce ( reasonably ) unbiased results ( e.g. , * ? ? ?",
    "* ) , which makes it much slower in practice .",
    "but perhaps the main advantage of grommet over scf methods based on spherical harmonic expansions is that it respects newton s third law and is therefore suitable for use in studying @xmath4 perturbations without fear of artefacts due to centring .    to my knowledge ,",
    "the tree code falcon @xcite is the only other code that can model realistically inhomogeneous galaxies without breaking the third law . for @xmath1 grommet",
    "s potential solver is more than twice as fast as falcon s and much less memory hungry .",
    "this efficiency comes at a cost though , since grommet s nested - box scheme is optimized for modelling perturbations of single galaxies .",
    "it would be interesting to see whether the potential - splitting scheme used here ( section  [ sec : multimove ] ; @xcite ) works as well for falcon , or indeed any other code that respects the third law , as it does for grommet .",
    "i thank james binney , walter dehnen and ben moore for helpful discussions , and the royal society for financial support .",
    "99 anninos p. , norman m.  l. , clarke d.  a. , 1994 , apj , 436 , 11 binney j. , tremaine s. , 1987 , galactic dynamics , princeton univ .",
    "press , princeton , nj dehnen w. , 2002 , j. comput .",
    "phys . , 179 , 27 duncan m.  j. , levison h.  f. , lee m.  h. , 1998 , aj , 116 , 2067 gelato s. , chernoff d.  f. , wasserman i. , 1997 , apj , 480 , 115 hernquist l. , 1990 , apj , 356 , 359 hernquist l. , ostriker j.  p. , 1992 ,",
    "apj , 386 , 375 hernquist l. , weinberg m.  d. , 1989 , mnras , 238 , 407 hockney r.  w. , eastwood j.  w. , computer simulation using particles , 1988 , iop holley - bockelmann k. , weinberg m. , katz n. , 2005 , mnras , 363 , 991 james r.  a. , 1977 , j. comp .",
    ", 25 , 71 jessop c. , duncan m. , chau , w. y. , 1994 , j. comput .",
    "phys . , 115 , 339 knebe a. , green a. , binney j. , 2001 , mnras , 325 , 845 kravtsov a.  v. , klypin a.  a. , khokhlov a.  m. , 1997 , apjs , 111 , 73 lauer t.  r. , et al . , 1995 ,",
    "aj , 110 , 2622 leeuwin f. , combes f. , binney j. , 1993 , mnras , 262 , 1013 mcmillan p.  j. , dehnen w. , 2005 , mnras , 363 , 1205 saha p. , tremaine s. , 1992 , aj , 104 , 1633 sigurdsson s. , hernquist l. , quinlan g.  d. , 1995 , apj , 446 , 75 velazquez h. , white s.  d.  m. , 1999 , mnras , 304 , 254 weinberg m.  d. , 1989 , mnras , 239 , 549 wisdom j. , holman m. , 1991 , aj , 102 , 1528 young p. , 1980 ,",
    "apj , 242 , 1232 zemp m. , stadel j. , moore b. , carollo c.  m. , 2007 , mnras , 376 , 273",
    "@xcite describes an economical method for calculating the solution to poisson s equation , @xmath161 discretized on a regular mesh and with a spatially bounded source distribution  @xmath162 , so that @xmath163 as @xmath164 .",
    "it is easiest to explain his method for the electrostatic case in which @xmath165 is electric charge density and @xmath166 is electrostatic potential .",
    "the method then consists of the following steps :    1 .",
    "enclose the charge distribution @xmath165 inside an earthed metal box and calculate the potential @xmath167 inside the box subject to the boundary condition @xmath168 on the box surface ; 2 .",
    "use gauss law to find the charge distribution @xmath169 induced on the surface of the box ; 3 .",
    "calculate the potential @xmath170 due to this surface charge distribution @xmath169 .",
    "the solution to  ( [ eq : poisson ] ) for the isolated charge distribution @xmath165 is given by @xmath171 . since",
    "this procedure is at the heart of grommet s potential solver , i explain it in some detail below .      throughout the following ,",
    "i assume that the distribution @xmath162 has been discretized onto a cubical mesh with vertices at positions @xmath172 , @xmath173 , spaced unit distance apart .",
    "our goal is to calculate the discretized potential @xmath18 corresponding to this @xmath174 .    a straightforward way of doing this is to use the fourier convolution theorem .",
    "consider first the situation in which the charge distribution @xmath175 is one - dimensional with @xmath176 ; the reason for extending the mesh from @xmath177 to @xmath178 vertices will become apparent shortly .",
    "the discretized potential is given by the convolution @xmath179 where @xmath180 is the contribution to @xmath181 made by a unit - charge particle located at @xmath182 , and we take @xmath183 for @xmath184 or @xmath185 since we have an isolated charge distribution .",
    "this last condition on @xmath165 is awkward .",
    "suppose instead that both that @xmath180 and @xmath186 were @xmath178-periodic , with @xmath187 , and let us impose the sensible condition that @xmath180 is even with @xmath188 and that @xmath189",
    ". then @xmath190 could be obtained economically using fourier methods .",
    "the fourier transform of @xmath191 is given by @xmath192,\\ ] ] where @xmath193 , and similarly for @xmath194 .",
    "using the discrete convolution theorem , equation  ( [ eq : onedconv ] ) becomes simply @xmath195 applying the inverse transform , the potential is given by @xmath196.\\ ] ] the periodicity needed for application of the discrete convolution theorem is a nuisance , but if we allow @xmath191 to be non - zero only for @xmath197 , then the @xmath198 obtained from equ .",
    "( [ eq : onedconv ] ) are unaffected by it .",
    "therefore , we can use this fourier method to obtain the potential @xmath199 corresponding to an isolated source distribution @xmath191 ( @xmath200 ) provided we extend the mesh by a further @xmath201 points with @xmath202 .",
    "thanks to the existence of fast methods for evaluating the transforms ( [ eq : stdft ] ) and  ( [ eq : inverseft ] ) , the fourier method requires only @xmath203 operations to calculate the full set of @xmath199 , instead of the @xmath204 involved in a direct evaluation of equ .",
    "( [ eq : onedconv ] ) .",
    "the savings are much more dramatic for the three - dimensional case , for which the direct sum takes @xmath205 operations , compared to only @xmath206 for the fourier method .",
    "james method makes use of an alternative view of this `` doubling up '' procedure .",
    "the fourier transform  ( [ eq : stdft ] ) can be written as @xmath207,\\ ] ] where the cosine and sine transforms @xmath208 come from the even and odd parts of @xmath175 , @xmath209 respectively .",
    "the coefficients @xmath210 , but @xmath211 to account for the fact that @xmath212 and @xmath213 are counted only half as often as the other @xmath191 .",
    "conversely , having both @xmath214 and @xmath215 we can reconstruct the original @xmath175 by substituting  ( [ eq : sincossplit ] ) into the expression for the inverse transform  ( [ eq : inverseft ] ) to obtain @xmath216 where @xmath217 are the inverse cosine and sine transforms of @xmath214 and @xmath215 respectively . thus , apart from a factor of @xmath218 , the cosine and sine transforms are their own inverses .",
    "now suppose that only @xmath219 are allowed to be non - zero .",
    "then @xmath220 , except for the unused @xmath221 . replacing @xmath165 by @xmath166 in equs .",
    "( [ eq : qsplitsc]-[eq : qsplitscbla ] ) and taking @xmath222 from  ( [ eq : onedconvft ] ) , the potential can be written as @xmath223 where @xmath224 and @xmath225 with no contribution from the sine transform of the even function @xmath226 .",
    "the generalization to three dimensions is straightforward .",
    "the fourier transform in each direction splits into a sum of cosine and sine terms , yielding a total of eight terms : @xmath227 where , for example , @xmath228 with @xmath229 and @xmath230 notice that this decomposition into sine and cosine transforms results in two transforms for each of eight @xmath231 meshes .",
    "it requires less memory than the equivalent single @xmath232 zero - padded mesh used in the `` doubling - up '' procedure , but for general @xmath174 and @xmath233 it offers no improvement in speed .",
    "it simplifies enormously , however , for the special case in which @xmath233 is the green s function of the discretized laplacian appearing in equ .",
    "( [ eq : poisson ] ) .",
    "james method exploits these simplifications , particularly in dealing with the hollow induced surface charge distribution  @xmath169 ( see section  [ sec : hollowpot ] below ) .      with this background in hand ,",
    "let us turn to the details of james method .",
    "poisson s equation  ( [ eq : poisson ] ) can be written @xmath234 where the first - order approximation to the laplacian operator @xmath235.\\end{aligned}\\ ] ] the potential @xmath236 of the earthed box is given by the solution of this equation subject to the boundary condition @xmath237 . applying the triple sine transform",
    ", we have that @xmath238 where @xmath239 although we could immediately apply the inverse transform  ( [ eq : phispliteight ] ) to obtain @xmath236 explicitly , it turns out that this is unnecessary and it is more efficient to use the method of equivalent charges ( see below ) to modify @xmath240 to include the effects of the potential @xmath241 corresponding to the induced surface charge distribution  @xmath169 , saving everything for a single inverse transform at the very end of the calculation .      the charge distribution induced on the @xmath242 face of the box is given by @xmath243 the last equality following from the fact that @xmath244 is zero both on the box surface ( @xmath242 ) and outside the box ( @xmath245 ) . similarly , the charge distribution induced on the opposite @xmath246 face is @xmath247 .",
    "notice that @xmath169 vanishes along the edges of the box , and so is completely specified by its double sine transform on each of the six faces . in terms of @xmath240",
    "these can be written @xmath248 and similarly for the other four faces .",
    "we can invert each of these to obtain @xmath249 etc and , from these , any of the other three transforms @xmath250 , @xmath251 , @xmath252 .",
    "equation ( [ eq : phispliteight ] ) provides a way of obtaining the potential @xmath253 corresponding to this induced charge distribution @xmath169 .",
    "the result is a sum of eight terms , all of which can be treated in the same way .",
    "for example , consider the term @xmath254 .",
    "its fourier transform @xmath255 , where , using  ( [ eq : qcss ] ) and the hollowness of  @xmath169 , @xmath256 the other terms can be written in a similar way , although the @xmath257 term vanishes .",
    "the @xmath258 used here should be the triple cosine transform of the green s function for the first - order laplacian  ( [ eq : l1 ] ) . this need be calculated just once ( e.g. , using the doubling - up procedure ) , the necessary elements being stored for subsequent use",
    ".    it would be possible to use eq .",
    "( [ eq : phispliteight ] ) to obtain @xmath253 directly , but it turns out ( see below ) that this labour is unnecessary and that it suffices to use  ( [ eq : phispliteight ] ) to obtain only the face potentials @xmath259 , @xmath260 etc . nevertheless , adding up all the contributions to each of these",
    "turns out to be the main computational burden of james method .      instead of synthesizing @xmath253 explicitly ,",
    "let us introduce another potential @xmath261 which is zero on the box faces but everywhere else is equal to @xmath253 .",
    "because it vanishes at the box boundaries , this new potential is completely specified by its triple sine transform .",
    "the `` equivalent charge '' distribution @xmath262 that generates it can be found using poisson s equation @xmath263=-\\left[q - e\\right],\\ ] ] where @xmath169 is non - zero only on the faces of the box .",
    "for the first - order discretized laplacian ( equ .",
    "[ eq : l1 ] ) @xmath264 is confined to the planes @xmath265 ,",
    "@xmath266 , @xmath267 , @xmath268 , @xmath269 and @xmath270 , with , for example , @xmath271 .",
    "the triple sine transform of the full potential is then @xmath272 the second term giving the contribution of @xmath273 . applying the inverse triple - sine transform to  ( [ eq : sssfullpot ] )",
    "gives @xmath18 for @xmath274 .",
    "finally , the missing face potentials can be inserted using the results obtained in section  [ sec : hollowpot ] .",
    "my implementation of this procedure uses the fast sine and cosine transforms written by takuya ooura .",
    "the triple - sine transforms involved in going from @xmath174 to @xmath240 ( eq .  [ eq : phisss ] ) and from @xmath275 to @xmath18 ( eq .  [ eq : sssfullpot ] ) then take only @xmath276 of the total time needed to go from @xmath174 to  @xmath18 , with the evaluation of the various transforms of the face charge distributions ( sec .",
    "[ sec : facecharges ] ) accounting for a further 10% .",
    "the remaining 60% of the time is spent simply accumulating the various contributions to the face potentials ( sec .",
    "[ sec : hollowpot ] ) .",
    "nevertheless , for typical @xmath277 or @xmath278 meshes i find that my implementation of james method is about 60 to 70% faster than the usual doubling - up procedure .",
    "i have focused here on describing james method using the first - order approximation of the laplacian ( [ eq : l1 ] ) .",
    "@xcite shows how it is possible to apply the same ideas to higher - order approximations , albeit at the expense of much more involved book - keeping .",
    "i find that the resulting minor changes in the green s function @xmath233 have no detectable effect for the realistic large-@xmath0 situations described in section  [ sec : tests ] ."
  ],
  "abstract_text": [
    "<S> this paper presents a fast , economical particle - multiple - mesh @xmath0-body code optimized for large-@xmath0 modelling of collisionless dynamical processes , such as black - hole wandering or bar - halo interactions , occurring within isolated galaxies . </S>",
    "<S> the code has been specially designed to conserve linear momentum . despite this </S>",
    "<S> , it also has variable softening and an efficient block - timestep scheme : the force between any pair of particles is calculated using the finest mesh that encloses them both ( respecting newton s third law ) and is updated only on the longest timestep of the two ( which conserves momentum ) . for realistic galaxy models with @xmath1 , it is faster than the fastest comparable momentum - conserving tree code by a factor ranging from @xmath2 ( using single timesteps ) to @xmath3 ( multiple timesteps in a concentrated galaxy ) .    </S>",
    "<S> [ firstpage ] </S>"
  ]
}
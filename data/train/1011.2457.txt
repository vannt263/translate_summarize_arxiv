{
  "article_text": [
    "automaton groups were introduced in the 1980 s as examples of groups with fascinating properties .",
    "for example , grigorchuk s group is the first known group of intermediate growth and is also an infinite periodic group .",
    "besides having interesting properties , many of these groups have deep connections with dynamical systems which were explored by bartholdi and nekrashevych in @xcite and @xcite .",
    "in particular , they use these groups to solve a longstanding problem in holomorphic dynamics ( see @xcite ) . for a general introduction to these groups , see @xcite by grigorchuk and sunic or @xcite by nekrashevych .",
    "many generalizations of automaton groups have been studied .",
    "the most famous and well - studied generalization is the class self - similar groups .",
    "a good introduction to these groups can be found in @xcite or @xcite .",
    "more recently , slupik and sushchansky study semigroups arising from partial invertible synchronous automata in @xcite .",
    "cain , reznikov , silva , sushchanskii , and steinberg investigate automaton semigroups , which are semigroups that arise from ( not necessarily invertible ) synchronous automata in @xcite , @xcite , and @xcite .",
    "grigorchuk , nekrashevich , and sushchanskii study groups arising from asynchronous automata in @xcite .    in all of the references listed above except for @xcite , the semigroups studied arose from synchronous automata . in @xcite ,",
    "grigorchuk et al .",
    "study groups arising from asynchronous automata .",
    "in particular , they give examples of automata generating thompson groups and groups of shift automorphisms . this paper studies a class of semigroups that we call  expanding automaton semigroups . \"",
    "these semigroups arise from a restricted class of asynchronous automata that we call  expanding automata , \" and the class of expanding automata contains the class of synchronous automata . thus the class of automaton semigroups is contained in the class of expanding automaton semigroups , and the class of expanding automaton semigroups is contained in the class of asynchronous automaton semigroups . as mentioned above , automaton semigroups and asynchronous automaton semigroups",
    "have been studied , but thus far a study of expanding automaton semigroups has not been done .    in section 2",
    "we give definitions of the different kinds of automata , and explain how the states of a given automaton act on a regular rooted tree . in particular ,",
    "let @xmath0 be a finite set , and let @xmath1 denote the free monoid generated by @xmath0 .",
    "then the states of a given automaton act on @xmath1 for some finite set @xmath0 .",
    "thus we can consider the semigroup generated by the states of an automaton as a semigroup of functions from @xmath1 to @xmath1 .",
    "given a free monoid @xmath1 , we associate a regular rooted tree @xmath2 with @xmath1 by letting the vertices of @xmath2 be @xmath1 and letting the edge set be @xmath3 for all @xmath4 and @xmath5 .",
    "the identity of @xmath1 is the root of the tree .",
    "the action of a semigroup associated with an asynchronous automaton on @xmath1 induces an action on the tree @xmath2 .",
    "let @xmath6 denote the set of right - infinite words over @xmath0 .",
    "then @xmath6 is the boundary of the tree @xmath2 .",
    "the action of an asynchronous automaton semigroup on @xmath1 induces an action of the semigroup on @xmath6 , and so an asynchronous automaton semigroup acts on the boundary of a regular rooted tree .",
    "section 2 also contains examples of expanding automaton semigroups that are not automaton semigroups ( proposition [ not aut sgps ] ) , as well as asynchronous automaton semigroups that are not expanding automaton semigroups ( proposition [ bicyclic submonoid ] ) .",
    "thus propositions [ not aut sgps ] and [ bicyclic submonoid ] combine to show the following .    the class of automaton semigroups is strictly contained in the class of expanding automaton semigroups , and the class of expanding automaton semigroups is strictly contained in the class of asynchronous automaton semigroups .",
    "we show the latter by proving that the bicyclic monoid ( the monoid with monoid presentation @xmath7 ) is not a submonoid of any expanding automaton semigroup ( proposition [ left invertible iff right invertible ] ) , and then we demonstrate an asynchronous automaton semigroup that contains the bicyclic monoid as a submonoid ( proposition [ bicyclic submonoid ] ) .    in section 3 we investigate the dynamics of expanding automaton semigroups and asynchronous automaton semigroups on the trees on which they act .",
    "example [ thue - morse ] gives an example of an expanding automaton semigroup @xmath8 acting on @xmath9 such that there are infinite words @xmath10 with @xmath11 and @xmath12 for all @xmath13 .",
    "furthermore , if @xmath14 is not equal to @xmath15 or @xmath16 , then @xmath17 for all @xmath18 .",
    "proposition [ aut sgp fixed points on bdy ] shows that automaton semigroups can not have this kind of dynamical behavior when acting on the boundary of a tree .",
    "thus the boundary dynamics of expanding automaton semigroups is richer than the boundary dynamics of automaton semigroups .",
    "section 3 also investigates several algorithmic problems regarding the actions of expanding automaton semigroups on a tree .",
    "proposition [ word problem solvable ] gives an algorithm that solves the uniform word problem for expanding automaton semigroups .",
    "this result is already known , as grigorchuk et al .",
    "show in theorem 2.15 of @xcite that the uniform word problem is solvable for asynchronous automaton semigroups .",
    "we give an algorithm with our terminology for completeness .",
    "proposition [ decidability of injectivity ] gives an algorithm which decides whether a state of an automaton over @xmath0 induces an injective function from @xmath2 to @xmath2 .",
    "since the uniform word problem is decidable for these semigroups , there is an algorithm that takes as input an expanding automaton over an alphabet @xmath0 and states @xmath19 of the automaton and decides whether @xmath20 for all @xmath4 .",
    "on the other hand , theorem [ post corr thm ] shows the following .    1 .",
    "there is no algorithm which takes as input an expanding automaton @xmath21 and states @xmath22 and decides whether or not there is a word @xmath4 with @xmath20 .",
    "2 .   there is no algorithm which takes as input an expanding automaton @xmath21 and states @xmath22 and decides whether or not there is an infinite word @xmath23 such that @xmath24 .",
    "the problem in part 1 of the above theorem is decidable for automaton semigroups : if @xmath21 is a synchronous automaton with @xmath22 , then ( because @xmath25 and @xmath26 induce level producing functions @xmath27 ) there is a word @xmath4 such that @xmath20 if and only if there is a letter @xmath5 such that @xmath28 .",
    "we close section 3 by applying theorem [ post corr thm ] to study the dynamics of asynchronous automaton semigroups .",
    "theorem [ prefix code post corr thm ] shows that there is no algorithm which takes as input an asynchronous automaton over an alphabet @xmath0 , a subset @xmath29 , and a state @xmath30 of the automaton and decides whether there is a word @xmath31 such that @xmath32 .",
    "thus we can not decide if @xmath30 has a fixed point in @xmath33 .",
    "furthermore , theorem [ prefix code post corr thm ] also shows that there is no algorithm which takes as input an asynchronous automaton over an alphabet @xmath0 , a subset @xmath29 , and a state @xmath30 of the automaton and decides whether there is an infinite word @xmath34 such that @xmath35 .",
    "thus undecidability arises when trying to understand the fixed points sets of asynchronous automaton semigroups on the boundary of a tree .    in section 4",
    "we give the basic algebraic theory of expanding automaton semigroups .",
    "recall that a semigroup @xmath8 is _ residually finite _",
    "if for all @xmath36 with @xmath37 then there is a finite semigroup @xmath38 and a homomorphism @xmath39 such that @xmath40 .",
    "proposition [ eas res finite ] shows that expanding automaton semigroups are residually finite .",
    "it is already known that automaton groups are residually finite ( see proposition 2.2 of @xcite ) and automaton semigroups are residually finite ( see proposition 3.2 of @xcite ) .",
    "asynchronous automaton semigroups are not residually finite , as there is an asynchronous automaton generating thompson s group @xmath41 ( see section 5.2 of @xcite ) .",
    "this group is an infinite simple group , and so is not residually finite .",
    "thus residual finiteness of expanding automaton semigroups also distinguishes this class from the class of asynchronous automaton semigroups .",
    "recall that if @xmath8 is a semigroup , an element @xmath42 is said to be _ periodic _ if there are @xmath43 such that @xmath44 .",
    "proposition [ restriction on periodicity ] shows that the periodicity structure of expanding automaton semigroups is restricted . in particular ,",
    "let @xmath45 denote the set of prime numbers that divide @xmath46 .",
    "if @xmath8 is an expanding automaton semigroup and @xmath42 is such that @xmath47 for some @xmath48 with @xmath49 , then the prime factorization of @xmath50 contains only primes from @xmath45 .    in section 4.2",
    "we provide information about subgroups of expanding automaton semigroups .",
    "proposition [ eas gp iff aut gp ] shows that an expanding automaton semigroup @xmath8 is a group if and only if @xmath8 is an automaton group .",
    "proposition 3.1 of @xcite shows that an automaton semigroup @xmath8 is a group if and only if @xmath8 is an automaton group ; we use the idea of the proof of this proposition to obtain our result .",
    "note that such a proposition does not apply to asynchronous automaton semigroups , as thompson s group @xmath41 can be realized with an asynchronous automaton .",
    "proposition [ subgroups of eas s ] shows that if @xmath51 is a subgroup of an expanding automaton semigroup , then there is a self - similar group @xmath52 such that @xmath51 is a subgroup of @xmath52 .",
    "proposition [ unique maximal subgroup ] shows that if an expanding automaton semigroup @xmath8 has a unique maximal subgroup @xmath51 , then @xmath51 is self - similar .",
    "in particular , this proposition implies that if @xmath8 is the semigroup generated by the states of an invertible synchronous automaton , then the group of units of @xmath8 is self - similar ( corollary [ cor about inv syn aut ] ) .",
    "in section 5.1 we study closure properties of expanding automaton semigroups .",
    "let @xmath8 and @xmath53 be semigroups .",
    "the _ normal ideal extension _ of @xmath8 by @xmath53 is the disjoint union of @xmath8 and @xmath53 with multiplication defined by @xmath54 if @xmath55 or @xmath56 , @xmath57",
    "if @xmath58 and @xmath59 , and @xmath60 if @xmath61 and @xmath62 . note that if @xmath8 is a semigroup , then adjoining a zero to @xmath8 is an example of a normal ideal extension .",
    "proposition 5.6 of @xcite shows that the class of automaton semigroups is closed under normal ideal extensions .",
    "we show in proposition [ aas normal ideal extension ] that the class of asynchronous automaton semigroups is closed under normal ideal extensions . on the other hand ,",
    "we show in proposition [ n with zero adjoined not eas ] that the free semigroup of rank 1 with a zero adjoined is not an expanding automaton semigroup .",
    "example [ thue - morse ] shows that the free semigroup of rank 1 is an expanding automaton semigroup , and so we have that the class of expanding automaton semigroups is not closed under normal ideal extensions .",
    "lastly , we show that the class of expanding automaton semigroups is closed under direct product ( provided the direct product is finitely generated ) . in proposition 5.5 of @xcite cain",
    "shows the same result for automaton semigroups , and our proof is similar .",
    "section 5.2 contains further constructions of expanding automaton semigroups .",
    "free partially commutative monoid _ is a monoid generated by a set @xmath63 with relation set @xmath64 such that @xmath65 , i.e. a monoid in which the only relations are commuting relations between generators .",
    "we show the following .",
    "every free partially commutative monoid is an automaton semigroup .",
    "given a set @xmath66 , let @xmath67 denote the free semigroup generated by @xmath66",
    ". in the free monoid @xmath33 , let @xmath68 denote the identity . as defined in @xcite , an _ asynchronous automaton",
    "_ is a quadruple @xmath69 where @xmath70 is a finite set of states , @xmath0 is a finite alphabet of symbols , @xmath71 is a transition function , and @xmath72 is an output function . a _",
    "synchronous automaton _ is defined analogously , the difference being that @xmath73 ( the range of the output function is @xmath0 rather than @xmath1 ) . in this paper",
    ", we study a restricted class of asynchronous automata .",
    "an _ expanding automaton _ is a quadruple @xmath21 where @xmath70 is a finite set of states , @xmath0 is a finite alphabet of symbols , @xmath71 is a transition function , and @xmath74 is an output function .",
    "we view an expanding automaton @xmath75 as a directed labeled graph with vertex set @xmath70 and an edge from @xmath25 to @xmath26 labeled by @xmath76 if and only if @xmath77 and @xmath78 . given an edge @xmath76 in the graph",
    ", we refer to @xmath79 as the _ input _ of the edge , and @xmath80 as the _ output _ of the edge .",
    "the interpretation of this graph is that if the automaton @xmath81 is in state @xmath25 and reads symbol @xmath79 , then it changes to state @xmath26 and outputs the word @xmath80 .",
    "thus , if we fix @xmath82 , the automaton can read a sequence of symbols @xmath83 and output a sequence @xmath84 where @xmath85 and @xmath86 for @xmath87 .",
    "each state @xmath88 induces a function @xmath89 in the following way : @xmath30 acting on @xmath90 , denoted @xmath91 , is defined to be the sequence that the automaton outputs when the automaton starts in state @xmath30 and reads the sequence @xmath90 .",
    "we also insist that @xmath92 .",
    "this action of @xmath30 on @xmath1 induces an action of @xmath30 on @xmath2 .",
    "the state @xmath30 induces a function @xmath93 by @xmath94 if @xmath4 , and if @xmath95 is an edge in @xmath2 with endpoints @xmath80 and @xmath96 then @xmath97 where @xmath98 is the unique geodesic sequence of edges in @xmath2 connecting @xmath99 and @xmath100 . by abuse of notation , we identify @xmath101 with @xmath30 , as context should eliminate confusion . considering the states of an automaton as functions leads to the following definition :    given an expanding automaton @xmath75 , we say that the _ expanding automaton semigroup _",
    "( respectively monoid ) corresponding to @xmath75 , denoted @xmath102 , is the semigroup ( respectively monoid ) generated by the states of @xmath75 .    an _ invertible synchronous automaton _ ( or _ invertible automaton _ ) is a quadruple @xmath21 where @xmath103 and , for any @xmath88 , the restricted function @xmath104 is a permutation of @xmath0 .",
    "the states of an invertible automaton @xmath69 induce bijections on @xmath2 .",
    "furthermore , these functions are _ level - preserving _ , i.e. @xmath105 for all @xmath4 and @xmath88 ( where @xmath106 is the length function on @xmath1 ) .",
    "thus , given an invertible automaton @xmath21 , we define the _ automaton group _ associated with @xmath75 to be the group generated by the states of @xmath75 .",
    "an _ automaton semigroup _ is a semigroup generated by the states of a synchronous automaton .",
    "thus the generators of an automaton semigroup over the alphabet @xmath0 induce level - preserving functions on @xmath2 , but these functions are not necessarily bijective .",
    "finally , an _ asynchronous automaton semigroup _ is a semigroup generated by the states of an asynchronous automaton .",
    "a _ self - similar group _ is a group generated by the states of an invertible synchronous automaton with possibly infinitely states .",
    "a _ self - similar semigroup _ is defined analogously .",
    "thus we define an _ expanding self - similar semigroup _ to be a semigroup generated by the states of an expanding automaton with possibly infinitely many states .",
    "note that if @xmath42 where @xmath8 is an expanding automaton semigroup acting on @xmath2 , then @xmath107 need not induce a level - preserving function @xmath108 .",
    "thus elements of expanding automaton semigroups are not necessarily graph morphisms .",
    "if @xmath21 is an expanding automaton , then the output function mapping into @xmath109 implies that latexmath:[$|w|\\leq    @xmath4 .",
    "we say that a function @xmath111 is _ prefix - preserving _ if @xmath112 is a prefix of @xmath113 in @xmath1 whenever @xmath114 is a prefix of @xmath80 in @xmath1 .",
    "we call a function @xmath111 _ length - expanding _ if @xmath115 for all @xmath4 and @xmath116 .",
    "if we topologize the tree @xmath2 by making each edge isometric to @xmath117 $ ] and imposing the path metric , then an element of an expanding automaton semigroup acting on @xmath2 will induce a prefix - preserving , length - expanding endomorphism of the tree .",
    "we call @xmath118 an _ expanding endomorphism _ if @xmath119 is prefix - preserving and length - expanding .",
    "let @xmath119 be an expanding endomorphsm of a tree @xmath2 , where @xmath120 .",
    "then @xmath119 induces a function @xmath121 ; for the rest of the paper we denote this function by @xmath122 .",
    "note that for any @xmath4 , the tree @xmath123 is isomorphic ( as a graph or a metric space ) to @xmath2 .",
    "now for each @xmath5 , @xmath119 induces an expanding endomorphism @xmath124 ; for the rest of the paper we denote this induced endomorphism by @xmath125 . for any @xmath5 and @xmath126 , @xmath125 is characterized by the equation @xmath127 the function @xmath125 is called the _ section of @xmath119 at @xmath79_. inductively , given @xmath4 , there exists an expanding endomorphism @xmath128 such that @xmath129 for every @xmath130 .",
    "we call @xmath128 the _ section of @xmath119 at @xmath80_. to completely describe an expanding automorphism @xmath119 , we need only know the induced function @xmath122 and the sections @xmath131 . thus , in keeping with the notation for automaton groups and semigroups in @xcite and @xcite , any expanding endomorphism @xmath119 can be written as @xmath132 where each @xmath133 is the section of @xmath119 at @xmath134 .",
    "we denote a function @xmath135 by @xmath136 $ ] where @xmath137 .",
    "if @xmath119 and @xmath138 are expanding endomorphisms with @xmath139 $ ] and @xmath140 $ ] , then their composition ( our functions act on the left ) is given by the formula    @xmath141.\\ ] ]    let @xmath21 be an asynchronous automaton and @xmath142 . if @xmath4 , then @xmath143 is obtained by viewing the word @xmath80 as a path in @xmath75 starting at @xmath30 .",
    "the terminal vertex of this path is the section of @xmath30 at @xmath80 .",
    "thus any section of a state of @xmath75 is itself a state of @xmath75 .",
    "let @xmath21 be an expanding automaton , and let @xmath144 be an element of @xmath102 .",
    "equation ( [ composition formula ] ) allows us to build an expanding automaton @xmath145 that contains @xmath107 as a state .",
    "write @xmath146 . using the original automaton @xmath75 ,",
    "compute @xmath147 .",
    "if we iteratively use equation ( [ composition formula ] ) and @xmath75 , we can compute the section of @xmath107 at @xmath79 for any @xmath5 in terms of the sections of the @xmath148 s .",
    "furthermore , a straightforward induction on word length in @xmath149 shows that if @xmath150 is a section of @xmath107 , then the word length of @xmath150 in @xmath149 is less than or equal to the word length of @xmath107 in @xmath149 .",
    "thus we will compute an expanding automaton @xmath145 whose set of states has cardinality less than the cardinality of the set @xmath151 .    before giving examples",
    ", we mention that we use the word  action \" when describing the functions arising from these semigroups on regular rooted trees .",
    "in general , if one says that a monoid @xmath152 has an action on a set , one assumes that the identity of the monoid fixes each element of the set . in this case , however , we can have expanding automaton monoids ( and indeed automaton monoids ) in which the identity element of the monoid does not fix each vertex of the tree , so we do not include that assumption as part of the definition of  action \" .",
    "consider example [ first ] below .",
    "[ first ] consider the expanding automaton @xmath75 over the alphabet @xmath153 given by @xmath154 , b=(a , a)[111,11]$ ] .",
    "see figure 1 for the graphical representation of @xmath75 .",
    "we claim that @xmath155 is an identity element of @xmath102 even though @xmath155 does not fix every element of @xmath156 . to see this",
    ", first note that the range of @xmath155 is @xmath157 .",
    "since @xmath155 fixes this set , @xmath158 . now",
    "the range of @xmath159 is @xmath160 and @xmath155 fixes this set , so @xmath161 .",
    "now let @xmath162 , and let @xmath163 denote the number of 0 s that occur in @xmath80 ; define @xmath164 analogously",
    ". then @xmath165 , and therefore @xmath166 .",
    "let @xmath167 be the word obtained from @xmath80 by deleting the first letter of @xmath80 . if 0 is the first letter of @xmath80 , then @xmath168 similarly , if @xmath80 starts with a 1 we have @xmath169",
    ". hence @xmath170 , and @xmath155 is an identity element .",
    "thus the action of @xmath102 on @xmath9 includes the action of a semigroup identity that is not the identity function on @xmath2 .",
    ", width=207 ]    we now show that there are semigroups which are expanding automaton semigroups but not automaton semigroups .",
    "[ not aut sgps ] the class of automaton semigroups is strictly contained in the class of expanding automaton semigroups .",
    "let @xmath171 , and let @xmath172 denote the semigroup with semigroup presentation @xmath173 .",
    "we show that @xmath172 is not an automaton semigroup for any @xmath174 , but @xmath172 is an expanding automaton semigroup for any @xmath174 .",
    "note that for any distinct @xmath48 with @xmath175 , the rewriting system defined by the rules @xmath176 and @xmath177 is terminating and confluent . thus @xmath178 is a set of normal forms for @xmath172 , and",
    "so @xmath155 is not periodic in @xmath172 .",
    "we begin by showing @xmath172 is not an automaton semigroup .",
    "fix @xmath179 .",
    "let @xmath180 be a synchronous automaton such that @xmath181 is generated by two elements @xmath155 and @xmath159 with @xmath182 and @xmath161 . we show that @xmath155 is periodic in @xmath181 .",
    "note that @xmath155 and @xmath159 must both be states of @xmath183 as higher powers of @xmath155 and @xmath159 can not multiply to obtain @xmath155 , and powers of @xmath155 can not multiply to obtain @xmath159 .",
    "let @xmath184 be such that there exists a minimal number @xmath185 with @xmath186 .",
    "since the action of @xmath155 is length - preserving , there must exist such a @xmath187 .",
    "let @xmath188 be the orbit of @xmath187 under the action of @xmath155 where @xmath189 for @xmath190 and @xmath191 .",
    "first suppose that @xmath192 for each @xmath193 .",
    "if @xmath194 for some @xmath195 , then @xmath196 where @xmath197 , @xmath198 where @xmath199 , and so on . in this case , @xmath155 will have infinitely many sections , which can not happen since @xmath155 is a state of a finite automaton .",
    "thus @xmath200 for all @xmath195 .",
    "note that if @xmath201 for some @xmath202 and @xmath5 , then the same logic implies that if @xmath203 for some @xmath204 then @xmath205 .",
    "thus we see that if @xmath5 and the section of @xmath155 at @xmath206 is a power of @xmath155 for all @xmath207 , then the section of @xmath155 at @xmath206 is @xmath155 for all @xmath202 .",
    "suppose that @xmath208 for all @xmath5 .",
    "since the action of @xmath155 is length - preserving , there exist distinct @xmath209 such that @xmath210",
    ". then , as the only section of @xmath155 is @xmath155 , we have @xmath211 .",
    "suppose now that there is a letter @xmath5 such that there exists @xmath212 in the forward orbit of @xmath79 under the action of @xmath155 where @xmath213 . since @xmath161 and @xmath159 is periodic , there",
    "exist distinct @xmath214 with @xmath215 such that @xmath216 for any @xmath217 . to see that this is true ,",
    "let @xmath150 be the minimal number such that the orbit of @xmath218 under the action of @xmath155 is a cycle .",
    "since the action of @xmath155 is length - preserving , there must exist such a @xmath150 .",
    "suppose that there is a @xmath217 such that @xmath219 and the section of @xmath155 at @xmath206 is @xmath220 for some @xmath221 and @xmath222 .",
    "then the relation @xmath161 implies that for any @xmath223 we have @xmath224 for some @xmath225 .",
    "periodicity of @xmath159 then implies that there are @xmath226 as desired .",
    "suppose , on the other hand , that the section of @xmath155 at @xmath227 is in @xmath228 for all @xmath229 .",
    "let @xmath230 be the maximal number such that the section of @xmath155 at @xmath231 is not in @xmath228 and let @xmath232 .",
    "then @xmath233 for some @xmath234 and the relation @xmath161 implies that @xmath235 . in this case",
    "we let @xmath236 and @xmath237 .",
    "let @xmath238 . by the preceding paragraph ,",
    "for each @xmath239 choose @xmath240 such that @xmath241 .",
    "since @xmath155 acts in a length - preserving fashion , there exist distinct @xmath242 such that @xmath243 for all @xmath217 .",
    "thus we can choose distinct @xmath244 such that @xmath245 and @xmath246 for all @xmath239 and @xmath217 .",
    "we claim that @xmath247 . to see this ,",
    "let @xmath248 .",
    "if @xmath249 , then the choice of @xmath107 and @xmath150 implies that @xmath250 .",
    "fix @xmath251 .",
    "then @xmath252 and @xmath253 , so the choice of @xmath107 and @xmath150 implies that @xmath254 . if @xmath249 ,",
    "then @xmath255 if @xmath256 then @xmath257 and @xmath258 , and so @xmath259 .",
    "similarly , let @xmath4 and write @xmath260 .",
    "suppose there is an @xmath221 such that @xmath261 and @xmath262 .",
    "then @xmath263 on the other hand , if @xmath264 then @xmath265 . thus @xmath247 , and",
    "so @xmath181 is not @xmath172 .",
    "fix @xmath179 , and let @xmath120 be an alphabet .",
    "let @xmath183 be the automaton with states @xmath155 and @xmath159 ( which depend on @xmath174 ) defined by @xmath266 , \\ \\ \\",
    "b=(b, ... ,b)\\tau_b\\ ] ] where @xmath267 then @xmath182 in @xmath181 .",
    "note also that the range of @xmath159 is @xmath268 , and @xmath155 fixes this set .",
    "so @xmath161 .",
    "now fix @xmath269 such that @xmath270",
    ". then @xmath271 .",
    "thus @xmath272 in @xmath181 if and only if @xmath273 and @xmath274 , and we have @xmath275 .",
    "recall that the bicyclic monoid is the monoid with monoid presentation @xmath276 .",
    "clifford and preston show in corollary 1.32 of @xcite that @xmath277 in @xmath278 .",
    "furthermore , the same corollary shows that if @xmath8 is a semigroup and @xmath279 such that @xmath280 , @xmath281 , @xmath282 , and @xmath283 , then the submonoid generated by @xmath155,@xmath159 , and @xmath230 is the bicyclic monoid if and only if @xmath284 .    [ left invertible iff right invertible ] let @xmath8 be an expanding automaton semigroup .",
    "if @xmath152 is a submonoid of @xmath8 , then @xmath152 is not isomorphic to the bicyclic monoid .",
    "let @xmath8 be an expanding automaton semigroup over an alphabet @xmath0 .",
    "suppose @xmath285 such that @xmath280 , @xmath281 , @xmath282 , and @xmath283 .",
    "we show that @xmath286 .    if @xmath42 , let range@xmath287 denote @xmath288 . since @xmath230 is idempotent , @xmath230 fixes range@xmath289 . the equations",
    "@xmath290 and @xmath291 imply that @xmath230 fixes range@xmath292 and range@xmath293 .",
    "thus range@xmath292 , range@xmath294 range@xmath289 .",
    "so we see that @xmath155 must act injectively on range@xmath289 : if @xmath295 range@xmath289 and @xmath296 , then @xmath297 and @xmath298 and so @xmath299 . furthermore , because @xmath159 can not reduce word length , @xmath155 must act in a length - preserving fashion on range@xmath289 .",
    "thus range@xmath292=range@xmath289 .",
    "now the equation @xmath283 implies that @xmath159 maps range@xmath292 onto range@xmath289 , and hence @xmath159 acts injectively and in a length - preserving fashion on range@xmath292 .",
    "thus if @xmath300 range@xmath289 then @xmath301 .",
    "suppose @xmath302 range@xmath289",
    ". then @xmath303 .",
    "since @xmath304 range@xmath289 and @xmath159 acts injectively on range@xmath289 , @xmath305 .",
    "thus @xmath306",
    "we now distinguish the class of expanding automaton semigroups from the class of asynchronous automaton semigroups .",
    "[ pic bicyclic submonoid ] , title=\"fig:\",width=268 ]    [ bicyclic submonoid ] the class of expanding automaton semigroups is strictly contained in the class of asynchronous automaton semigroups .",
    "let @xmath75 be the asynchronous automaton over the alphabet @xmath307 with four states defined by @xmath308 , \\ \\",
    "b=(e)[\\emptyset ] , \\ \\ c=(e)[00 ] , \\ \\ e=(e)[0].\\ ] ] figure [ pic bicyclic submonoid ] gives the graphical representation of @xmath75 .",
    "note that @xmath309 for all @xmath310 , so @xmath95 is an identity element of @xmath102 .",
    "note also that by construction @xmath311 for any @xmath312 , but @xmath313 .",
    "thus @xmath314 but @xmath315 in @xmath102 .",
    "so corollary 1.32 of @xcite implies that the submonoid generated by @xmath155 and @xmath230 is the bicyclic monoid , and proposition [ left invertible iff right invertible ] implies that @xmath102 is not an expanding automaton semigroup .",
    "we begin this section by showing that expanding automaton semigroups have richer boundary dynamics than automaton semigroups .",
    "proposition [ aut sgp fixed points on bdy ] restricts the kind of action that an automaton semigroup can have on the boundary of a tree , and example [ thue - morse ] gives an expanding automaton semigroup which shows that this restriction does not extend to the dynamics of these semigroups .",
    "example [ thue - morse ] also provides a realization of the free semigroup of rank 1 as an expanding automaton semigroup .",
    "proposition 4.3 of @xcite shows that the free semigroup of rank 1 is not an automaton semigroup , so example [ thue - morse ] provides another example of an expanding automaton semigroup that is not an automaton semigroup .",
    "let @xmath8 be a semigroup acting on a set @xmath66 , and @xmath42 .",
    "we say that @xmath316 is a _",
    "fixed point of @xmath107 _ if @xmath317    [ aut sgp fixed points on bdy ] let @xmath8 be an automaton semigroup with corresponding automaton @xmath21 .",
    "if every state of @xmath75 has at least two fixed points in @xmath6 , then every state of @xmath75 has infinitely many fixed points in @xmath6 .",
    "we begin with some terminology .",
    "we call a path @xmath318 in @xmath75 an _ inactive path _ if each edge on @xmath318 has the form @xmath319 for some @xmath5",
    ".    let @xmath88 . since @xmath75 is a synchronous automaton , @xmath30 acts in a length - preserving fashion . since @xmath30 has a fixed point in @xmath6 , in the finite automaton @xmath75 there must exist an inactive circuit @xmath320 accessible from @xmath30 via an inactive path @xmath318 .",
    "let @xmath25 be a state on @xmath320 .",
    "as @xmath25 must also have two fixed points in @xmath6 , either there is another inactive circuit containing @xmath25 or there is another inactive circuit accessible from @xmath25 via an inactive path . in either case , @xmath30 has infinitely many fixed points in @xmath6 by  pumping \" the two inactive circuits .",
    "[ thue - morse ] ( thue - morse automaton ) : this example is constructed to model the substitution rules which give the thue - morse sequence .",
    "this infinite binary sequence , denoted @xmath321 , is the limit of 0 under iterations of the substitution rules @xmath322 .",
    "the complement of the thue - morse sequence , denoted @xmath323 , is the limit of @xmath324 under iterations of these substitution rules . for more information on these sequences ,",
    "see section 2.2 of @xcite by lothaire .",
    "consider the expanding automaton @xmath75 given by @xmath325 $ ] over the alphabet @xmath326 .",
    "first note that @xmath102 is the free semigroup of rank 1 . to see this , by construction of @xmath75 we have @xmath327 for all @xmath312 , and thus @xmath328 for any @xmath329 .    also by construction of @xmath75 ,",
    "the action of @xmath102 has exactly two fixed points in @xmath330 : @xmath321 and @xmath323 . to see this , first notice that @xmath321 and @xmath323 are the fixed points of @xmath155 ( see section 2.1 of @xcite ) .",
    "thus @xmath321 and @xmath323 are fixed points of @xmath331 for any @xmath312 . furthermore , @xmath332 where @xmath333 maps 0 to the prefix of length @xmath334 of @xmath321 and maps 1 to the prefix of length @xmath334 of @xmath323 .",
    "thus section 2.1 of @xcite implies that @xmath331 has exactly two fixed points for all @xmath312 .",
    "the following proposition gives an algorithm for solving the uniform word problem in the class of expanding automaton semigroups .",
    "this proposition is a special case of theorem 2.15 of @xcite , which shows that asynchronous automaton semigroups have solvable uniform word problem .",
    "we include a proof for completeness .",
    "[ word problem solvable ] expanding automaton semigroups have solvable uniform word problem .",
    "let @xmath335 be an expanding automaton , and let @xmath336 .",
    "let @xmath337 and @xmath338 be elements of @xmath8 . if @xmath339 , then @xmath340 . if @xmath341 , then use equation ( [ composition formula ] ) to calculate @xmath342 and @xmath343 for all @xmath5 . if @xmath344 for some @xmath345 , then @xmath340 . if @xmath346 , then calculate @xmath347 for each @xmath348 with @xmath349 , and continue the process .",
    "since @xmath350 and @xmath351 , this process stops in finite time .",
    "we now turn to showing that undecidability arises in the dynamics of these semigroups .",
    "[ post corr thm ]    1 .",
    "there is no algorithm which takes as input an expanding automaton @xmath21 and states @xmath22 and decides whether or not there is a word @xmath4 with @xmath20 .",
    "2 .   there is no algorithm which takes as input an expanding automaton @xmath21 and states @xmath22 and decides whether or not there is an infinite word @xmath23 such that @xmath24 .",
    "we show undecidability by embedding the post correspondence problem .",
    "let @xmath352 be an alphabet , and let @xmath353 and @xmath354 be two lists of words over @xmath66 .",
    "let @xmath355 and @xmath356 be alphabets such that @xmath357 .",
    "undecidability of the post correspondence problem implies that , in general , we can not decide if there is a sequence @xmath358 of elements of @xmath359 such that @xmath360 .",
    "we build an expanding automaton @xmath361 over the alphabet @xmath362 as follows .",
    "let the state set @xmath70 of @xmath361 be @xmath363 , and let @xmath364 @xmath365 @xmath366 figure [ pcp example ] shows @xmath367 where @xmath368 , @xmath369 , and @xmath370 .",
    "note that for any @xmath4 , @xmath371 does not contain the letter @xmath372 ; similarly , @xmath373 does not contain the letter @xmath374 .",
    "now if @xmath4 contains a letter of @xmath375 , then we know @xmath376 since @xmath371 contains the letter @xmath374 and @xmath373 contains the letter @xmath372 .",
    "thus if there is a word @xmath377 such that @xmath378 , then @xmath379 . by construction of @xmath361 , if @xmath380 and @xmath381 , then @xmath360 .",
    "thus the expanding automaton @xmath361 simulates post s problem , and since we can not decide the post correspondence problem , we can not decide if there is a word @xmath379 with @xmath378 .",
    "this proves part ( 1 ) .",
    "it is shown by rouhonen in @xcite that the infinite post correspondence problem is undecidable .",
    "that is , there is no algorithm that takes as input two lists of words @xmath382 and @xmath383 over an alphabet @xmath66 and decides if there is an infinite sequence @xmath384 such that @xmath385 .",
    "thus , using the same expanding automata and logic as above , ( 2 ) is proven .",
    "[ pcp example ]   where @xmath368 , @xmath369 , and @xmath370,title=\"fig:\",width=272 ]    we now show that undecidability arises when trying to understand the fixed point sets of elements of asynchronous automaton semigroups .",
    "if @xmath386 for a set @xmath81 , let @xmath387 denote the prefix of @xmath80 of length @xmath207 .",
    "let @xmath388 be a free monoid .",
    "a subset @xmath389 is a * prefix code * if    1 .",
    "c is the basis of a free submonoid of @xmath388 2 .   if @xmath390 , then @xmath391 for all @xmath392    the _ prefix code post correspondence problem _ is a stronger form of the post correspondence problem .",
    "the input of the prefix code post correspondence problem is two lists of words @xmath382 and @xmath383 over an alphabet @xmath66 such that @xmath393 and @xmath394 are prefix codes .",
    "a solution to the problem is a sequence of indices @xmath395 with @xmath396 such that @xmath397 .",
    "rouhonen also shows in @xcite that this form of post s problem is undecidable .",
    "we use the prefix code post problem to prove the following :    [ prefix code post corr thm ]    1 .",
    "there is no algorithm that takes as input an asynchronous automaton @xmath75 over an alphabet @xmath66 , a subset @xmath398 , and a state @xmath30 of @xmath75 and decides whether or not @xmath30 has a fixed point in @xmath399 , i.e. decides if there is a word @xmath400 such that @xmath32 .",
    "2 .   there is no algorithm that takes as input an asynchronous automaton @xmath75 over an alphabet @xmath66 , a subset @xmath401 , and a state @xmath30 of @xmath75 and decides whether or not @xmath30 has a fixed point in @xmath402 , i.e. decides if there is an infinite word @xmath403 such that @xmath35 .",
    "let @xmath66 be an alphabet , and let @xmath404 be prefix codes where @xmath405 and @xmath406 .",
    "let @xmath407 be the expanding automaton with states @xmath408 that we constructed in the proof of proposition [ post corr thm ] .",
    "then @xmath407 is an expanding automaton over the alphabet @xmath409 such that @xmath410 and @xmath411 .",
    "we build an asynchronous automaton @xmath412 over the alphabet @xmath0 with a state @xmath413 such that @xmath414 is the identity function from @xmath415 to @xmath415 . we know that there is a function @xmath416 such that @xmath414 is the identity because @xmath417 generates a free monoid",
    ", so @xmath230 induces an injection from @xmath415 to @xmath33 .",
    "we begin construction of @xmath412 by starting with a single state @xmath413 , and then attaching a loop based at @xmath413 such that the input letters of the loop read the word @xmath320 when read starting at @xmath413 .",
    "the corresponding output word , when read starting at @xmath413 , we define to be @xmath418 .",
    "in other words , the first @xmath419 edges of the loop have the form @xmath420 , and the last edge of the loop has the form @xmath421 .",
    "next , we attach a loop at @xmath413 such that the input letters of the loop when read starting at @xmath413 read the word @xmath422 , and the corresponding output word is @xmath423 . if @xmath320 ad @xmath422 have a non - trivial common prefix , then the resulting automaton with two loops is not deterministic . in this case",
    ", we  fold \" the maximum length common prefixes together , resulting in a deterministic automaton .",
    "we iteratively continue this process until we can read the words @xmath424 as input words starting at @xmath413 , and @xmath425 for all @xmath426 .",
    "note that we can do this process since @xmath427 is not a prefix of @xmath428 for any @xmath429 . at this step in the construction of @xmath412",
    ", @xmath412 is a partial asynchronous automaton , i.e. given a state of @xmath30 of @xmath412 , the domain of @xmath30 is not all of @xmath1 .",
    "however , we do have @xmath414 is the identity function @xmath430 by construction of @xmath412 . in order to make @xmath412 an asynchronous automaton ,",
    "we add a sink state @xmath426 such that @xmath431 and @xmath432 for all @xmath433 .",
    "now for each @xmath30 a state in @xmath412 and @xmath433 such that there there is no edge out of @xmath30 with @xmath79 as an input letter , define @xmath434 and @xmath435 .",
    "recall that in the proof of theorem [ post corr thm ] , in general we can not find @xmath436 such that @xmath437 because such a @xmath80 is a solution to the post correspondence problem . by construction of @xmath412 , any @xmath436 such that @xmath438 is a solution to the prefix code post correspondence problem .",
    "now @xmath439 is an element of the asynchronous automaton semigroup generated by the states of @xmath407 and @xmath412 .",
    "thus , undecidability of the prefix code post correspondence problem implies part ( 1 ) .    in @xcite",
    ", ruohonen shows that the that there is no algorithm which takes as input two lists of words @xmath382 and @xmath383 over an alphabet @xmath66 such that @xmath393 and @xmath394 are prefix codes and decides whether there is an infinite sequence of indices @xmath384 such that @xmath385 .",
    "thus the same logic and automata as above implies part ( 2 ) .",
    "we now give an algorithm which determines whether or not an element of an expanding automaton semigroup induces an injection @xmath440 . before we do this",
    ", we must recall some basic automata theory which can be found in more detail in chapters 1 and 2 of @xcite by hopcroft and ullman . in order to avoid ambiguity of language in this paper",
    ", we will use the phrase  deterministic finite state automaton \" to denote a 5-tuple @xmath441 where @xmath70 is a state set , @xmath0 is an alphabet , @xmath442 is a partial function from @xmath443 to @xmath70 , @xmath444 is an initial state , and @xmath41 is a set of final states .",
    "let  nondeterministic finite state automaton \" denote a 5-tuple @xmath441 where @xmath70 is a state set , @xmath0 is an alphabet , @xmath442 is a partial relation from @xmath443 to @xmath70 that is not a partial function , @xmath444 is an initial state , and @xmath41 is a set of final states .",
    "we view a finite state automaton ( deterministic or nondeterministic ) as a finite directed graph with vertex set @xmath70 and an arrow from @xmath25 to @xmath26 labeled by @xmath79 if and only if @xmath445 . given a finite state automaton @xmath446 , call a directed edge path @xmath318 an _ acceptable path _ in @xmath152 if @xmath318 begins at @xmath444 and ends at a final state .",
    "if @xmath152 is a deterministic or a nondeterministic finite state automaton , let @xmath447 ( where @xmath448 denotes the language accepted by @xmath152 ) denote the map which sends a path @xmath318 to the word in @xmath448 that labels the path @xmath318 .",
    "if @xmath152 is deterministic then @xmath449 is injective .",
    "we show in the following lemma that we can decide if @xmath449 is injective for a nondeterministic finite state automaton @xmath152 .",
    "[ injectivity lemma ] let @xmath152 be a nondeterministic finite state automaton .",
    "then there is algorithm that decides whether or not @xmath449 is injective .",
    "let @xmath450 be a nondeterministic finite state automaton .",
    "we build a deterministic finite state automaton @xmath451 from @xmath152 using a construction of hopcroft and ullman from chapter 1 of @xcite as follows .",
    "the state set @xmath452 is the power set of @xmath70 , @xmath453 , and @xmath454 .",
    "lastly , @xmath455",
    ". then , by construction of @xmath456 , @xmath449 is not injective if and only if in @xmath456 there is an edge @xmath457 accessible from @xmath458 such that there exist distinct @xmath459 with @xmath460 or there is an @xmath461 such that in @xmath152 there are two edges coming out of @xmath461 labeled by @xmath79 whose terminal vertices are final states .    [ decidability of injectivity ] let @xmath21 be an expanding automaton . given @xmath88 , there is an algorithm to decide if @xmath462 is injective .",
    "fix @xmath88 .",
    "first we build a finite state automaton @xmath463 from @xmath75 .",
    "begin with state set @xmath452 in bijection with @xmath70 . whenever @xmath464 in @xmath75 with @xmath465 where @xmath466 , add enough states in @xmath152 so that there is a path labeled by @xmath467 from @xmath468 to @xmath469 . intuitively , @xmath152 is the finite state automaton we get from @xmath75 by dropping the inputs off of the edges in @xmath75 , then making each edge into a path so that every edge in @xmath152 is labeled by an element of @xmath0 .",
    "let @xmath470 and @xmath471 .",
    "note that @xmath30 is not injective if and only if there exist distinct paths in @xmath75 such that the outputs read along each path give the same element of @xmath1 .",
    "now @xmath152 is constructed so that for each @xmath472 there exists an acceptable path @xmath318 in @xmath152 such that @xmath473 , and given an acceptable path @xmath474 in @xmath152 we have @xmath475 .",
    "furthermore , each acceptable path in @xmath152 corresponds to an input path in @xmath75 .",
    "thus @xmath30 is not injective if and only if there exist two distinct paths @xmath476 and @xmath477 in @xmath152 such that @xmath478 . by lemma [ injectivity lemma ]",
    ", there is an algorithm to decide this property of @xmath152 .",
    "the set of semigroups that can be realized by expanding automata such that the states induce injective functions is very restricted .",
    "let @xmath8 be an expanding automaton semigroup with corresponding automaton @xmath21 such that each state @xmath479 induces an injection @xmath108 .",
    "then any element of @xmath149 also induces an injection @xmath440 .",
    "let @xmath480 , and suppose that @xmath95 is idempotent . since @xmath95 is idempotent , @xmath95 fixes range@xmath481 . if @xmath4 is such that @xmath482 , then @xmath80 and @xmath483 are both preimages of @xmath483 under @xmath95 .",
    "since @xmath95 induces an injection , we have that @xmath95 is the identity function on @xmath2 .",
    "let @xmath484 denote the identity function on @xmath2 .",
    "then @xmath8 can contain at most one idempotent , namely @xmath484 .",
    "if @xmath485 , then proposition [ unique maximal subgroup ] implies that the group of units of @xmath8 is self - similar .",
    "suppose that @xmath486 .",
    "then @xmath8 contains no idempotents and hence any @xmath42 is non - periodic .",
    "suppose that there is an @xmath42 such that there exists a word @xmath487 with @xmath488 .",
    "then , because each element of @xmath8 is injective and elements of @xmath8 can not shorten word length when acting on @xmath1 , there can not be an element @xmath489 such that @xmath490 .",
    "a semigroup @xmath53 is said to be _",
    "von neumann regular _ if for each @xmath491 there is a @xmath492 with @xmath493 .",
    "then @xmath8 is not von neumann regular .",
    "thus we have shown the following .",
    "let @xmath8 be an expanding automaton semigroup over an expanding automaton @xmath21 such that each @xmath30 induces an injective function @xmath108",
    ". then    1 .",
    "the group of units of @xmath8 is self - similar .",
    "@xmath8 is von neumann regular if and only if @xmath75 is an invertible automaton and @xmath8 is a group .",
    "3 .   if @xmath480 is idempotent then @xmath494 .",
    "if @xmath486 , then @xmath8 does not contain any periodic elements .",
    "in this section we show that expanding automaton semigroups are residually finite and that the periodicity structure of these semigroups is restricted .",
    "[ eas res finite ] expanding automaton semigroups are residually finite .",
    "let @xmath8 be an expanding automaton semigroup over the alphabet @xmath0 and let @xmath495 with @xmath496 .",
    "for each @xmath497 , let @xmath498 , i.e. @xmath499 is the @xmath500th level of the tree @xmath1 . since @xmath155 and @xmath159 are distinct , there is @xmath310 such that @xmath155 and @xmath159 act differently on @xmath501 .",
    "let @xmath502 and let @xmath503 .",
    "finally , let @xmath504 denote the semigroup of transformations @xmath505 .",
    "since @xmath506 is finite , @xmath504 is a finite semigroup .",
    "define a homomorphism @xmath507 by @xmath508 where @xmath509 and @xmath510 since @xmath155 and @xmath159 act differently on @xmath501 , construction of @xmath511 ensures that @xmath512 and @xmath513 are distinct in @xmath504 .",
    "let @xmath52 be an automaton group over an alphabet @xmath0 and let @xmath45 denote the set of prime numbers that divide @xmath46 .",
    "if @xmath514 has finite order , then the order of @xmath138 must have only primes from @xmath45 in its prime factorization .",
    "one can see this by considering @xmath138 as a level - preserving automorphism on a tree of degree @xmath515 , and thus the cardinality of any orbit under the action of @xmath138 must have only prime numbers dividing @xmath46 in its prime factorization .",
    "we show an analogous proposition for the periodicity structure of expanding automaton semigroups .",
    "first , we define a _ partial invertible automaton _ to be a quadruple @xmath69 where @xmath150 is a partial function from @xmath516 to @xmath70 and @xmath517 is a partial function from @xmath516 to @xmath0 such that the restricted partial function @xmath518 from @xmath519 to @xmath0 is a partial permutation of @xmath0 .",
    "it is straightforward to show that any partial invertible automaton can be  completed \" to an invertible automaton , i.e. given a partial invertible automaton @xmath412 there is an invertible automaton @xmath75 ( not necessarily unique ) such that @xmath412 embeds ( via a labeled graph homomorphism ) into @xmath75 .    [ restriction on periodicity ] let @xmath8 be an expanding automaton semigroup over an alphabet @xmath0 , and let @xmath45 be as above .",
    "if @xmath42 is periodic with @xmath47 , @xmath175 , and @xmath520 distinct , then @xmath50 has only primes from @xmath45 in its prime factorization .",
    "let @xmath21 be an expanding automaton with @xmath521 .",
    "suppose @xmath42 is periodic with @xmath47 , @xmath175 , and @xmath520 distinct .",
    "fix @xmath522 .",
    "then @xmath523 is a finite set , and the cardinality of @xmath524 divides @xmath50 . note that for any @xmath525 , @xmath107 acts like a cycle on @xmath167 as @xmath526 .",
    "furthermore , if @xmath527 then @xmath528 because @xmath107 can not shorten word length .",
    "thus the paths in @xmath75 corresponding to the input words @xmath529 form a partial invertible subautomaton of @xmath75 . denote this partial invertible subautomaton by @xmath530 .",
    "consider the partial invertible subautomaton @xmath90 of @xmath75 given by @xmath531 .",
    "complete @xmath90 to an invertible automaton @xmath532 .",
    "then @xmath524 is an orbit under the action of an element of an automaton group for all @xmath4 , and the result follows .",
    "let @xmath21 be a synchronous invertible automaton .",
    "as in @xcite , construct an automaton @xmath533 where @xmath534 is a set in bijection with @xmath70 under the mapping @xmath535 , @xmath536 if and only if @xmath77 , and @xmath537 if and only if @xmath538",
    ". then @xmath539 is the identity function @xmath540 , and so @xmath541 is called the _ inverse automaton for @xmath75 _ ( we always denote the inverse automaton for @xmath75 by @xmath541 ) .",
    "[ eas gp iff aut gp ]    a group @xmath52 is an automaton group ( respectively self - similar group ) if and only if @xmath52 is an expanding automaton semigroup ( respectively expanding self - similar semigroup ) .",
    "let @xmath52 be an automaton group corresponding to the automaton @xmath542 . since @xmath52 is an automaton group , @xmath75 is invertible and synchronous .",
    "construct a new automaton @xmath543 .",
    "then @xmath544 and @xmath412 is an expanding automaton .",
    "thus @xmath52 is an expanding automaton semigroup .",
    "conversely , let the group @xmath52 be an expanding automaton semigroup corresponding to the expanding automaton @xmath545 .",
    "let @xmath95 be the identity of @xmath52 and @xmath514 . then @xmath546 and @xmath547 hence @xmath548 .",
    "now @xmath95 is idempotent and thus fixes @xmath549 , so ( as in the proof of [ left invertible iff right invertible ] ) @xmath138 is bijective and length - preserving on @xmath550 .",
    "thus @xmath52 is isomorphic to the semigroup generated by @xmath551 .",
    "construct an invertible automaton @xmath552 as follows .",
    "the state set is @xmath553 where @xmath554 is a set in bijection with @xmath70 and @xmath555 $ ] , i.e. @xmath426 is a sink state that pointwise fixes @xmath1 .",
    "the transition function is given by @xmath556 and the output function is given by @xmath557    let @xmath514 and let @xmath558 be of minimal length . write @xmath559 where @xmath560 . then the above conditions imply that , for any @xmath561 , @xmath562 .",
    "in other words , each state @xmath563 of @xmath412 will mimic the action of @xmath30 on words that are in the image of @xmath95 , but will enter the state @xmath426 and act identically on the suffix of a word @xmath80 following the largest prefix of @xmath80 lying in @xmath549 .",
    "so the part of the action which does not act bijectively and in a length - preserving fashion collapses to the identity , and we have an invertible automaton giving @xmath52 .",
    "none of the above uses that the automata have finitely many states , so the same logic shows that @xmath52 is a self - similar group if and only if @xmath52 is an expanding self - similar semigroup .",
    "the idea in the last proof allows us to prove the following :    [ subgroups of eas s ] let @xmath8 be an expanding automaton semigroup and @xmath51 a subgroup of @xmath8 .",
    "then there is a self - similar group @xmath52 with @xmath564 .",
    "let @xmath8 be an expanding automaton semigroup and @xmath51 a subgroup of @xmath8 .",
    "let @xmath95 denote the identity of @xmath51 .",
    "let @xmath21 be the expanding automaton associated with @xmath8 .",
    "as in the proof of proposition [ eas gp iff aut gp ] , @xmath51 is isomorphic to the semigroup generated by @xmath565 and each element of @xmath51 acts injectively and in length - preserving fashion on @xmath549",
    ". then we can again collapse the  non - group \" part of the action to the state which fixes the tree to get a length - preserving and invertible action of @xmath51 .",
    "thus we can construct an invertible ( and possibly infinite state ) synchronous automaton containing the elements of @xmath51 as states .",
    "the states generated by this automaton is a self - similar group @xmath52 with @xmath566 .",
    "if @xmath8 is an expanding automaton semigroup and @xmath51 is a subgroup of @xmath8 , then @xmath8 is a subgroup of a self - similar group , but @xmath51 is not necessarily self - similar . if @xmath51 is the unique maximal subgroup of @xmath8 , then we show below that @xmath51 is self - similar .",
    "[ unique maximal subgroup ] let @xmath8 be an expanding automaton semigroup with a unique maximal subgroup @xmath52 . then @xmath52 is self - similar .",
    "let @xmath21 be the automaton associated with @xmath8 .",
    "let @xmath514 and write @xmath567 where @xmath568 .",
    "let @xmath95 be the identity of @xmath52 , and write @xmath569 . since @xmath95 is idempotent , @xmath95 fixes range@xmath481 , and thus the set @xmath570 is non - empty . to see this ,",
    "let @xmath345 and suppose that @xmath571 for some @xmath572 .",
    "then @xmath95 fixes @xmath573 , and since @xmath95 is length - expanding @xmath574 .",
    "since @xmath95 is idempotent , @xmath575 is idempotent for all @xmath576 .",
    "this is true because @xmath577 . since @xmath52 is the unique maximal subgroup of @xmath8 , there is only one idempotent element of @xmath8 .",
    "thus @xmath578 for all @xmath576 .",
    "let @xmath239 .",
    "then @xmath579 and so @xmath580 .",
    "thus equation ( [ composition formula ] ) implies @xmath581 and , as @xmath95 stabilizes @xmath79 , @xmath582 hence @xmath583 for any @xmath584 .",
    "let @xmath585 , @xmath239 , and write @xmath586 .",
    "by the same logic as above , @xmath587 .",
    "since @xmath588 we have @xmath589 since @xmath590 is left - invertible , proposition [ left invertible iff right invertible ] implies that @xmath590 is invertible .",
    "therefore @xmath591 for all @xmath584 .",
    "continuing inductively , we see that @xmath592 for all @xmath593 .",
    "similar to the proof of proposition [ eas gp iff aut gp ] , if @xmath594 then for all @xmath514 we can replace @xmath595 with @xmath95 and the resulting group will still be isomorphic to @xmath52 .",
    "this is because , as in proposition [ eas gp iff aut gp ] , the action of @xmath52 on range@xmath481 captures all of the group information .",
    "thus @xmath52 is an expanding self - similar semigroup , and proposition [ eas gp iff aut gp ] implies that @xmath52 is a self - similar group .",
    "if @xmath75 is an invertible synchronous automaton , then @xmath102 has at most one idempotent , namely the identity function on the tree .",
    "thus proposition [ unique maximal subgroup ] has the following corollary .",
    "[ cor about inv syn aut ] let @xmath75 be an invertible synchronous automaton .",
    "then the group of units of @xmath102 is self - similar .",
    "we begin this section by showing that the class of expanding automaton semigroups is not closed under taking normal ideal extensions . in particular , we show that the free semigroup of rank 1 with a zero adjoined is not an expanding automaton semigroup .",
    "we then show that the class of asynchronous automaton semigroups is closed under taking normal ideal extensions .",
    "[ free sgp rank 1 with 0 not aut sgp ] the free semigroup of rank 1 with a zero adjoined is not an automaton semigroup .",
    "let @xmath8 be an automaton semigroup over an alphabet @xmath120 such that @xmath8 is generated by two elements @xmath155 and @xmath159 with @xmath596 and @xmath597 .",
    "we use the same idea of the proof of proposition [ not aut sgps ] to show that @xmath155 is periodic .",
    "let @xmath5 .",
    "suppose that the section of @xmath155 at @xmath598 for some @xmath312 .",
    "then @xmath599 for all @xmath217 .",
    "if the section of @xmath155 at @xmath600 is a power of @xmath155 for all @xmath312 , then ( as in the proof of proposition [ not aut sgps ] ) the section of @xmath155 at @xmath600 is @xmath155 for all @xmath312 .",
    "let @xmath601 .",
    "as in the previous proof , we can choose @xmath107 and @xmath150 such that @xmath602 and @xmath603 for all @xmath239",
    ". then the same logic of the previous proof shows that @xmath247 .",
    "we now apply lemma [ free sgp rank 1 with 0 not aut sgp ] to show the following .",
    "[ n with zero adjoined not eas ] the class of expanding automaton semigroups is not closed under taking normal ideal extensions . in particular , the free semigroup of rank 1 with a zero adjoined is not an expanding automaton semigroup .",
    "let @xmath604 be the free semigroup of rank 1 with a zero adjoined , and suppose @xmath8 were an expanding automaton semigroup corresponding to the automaton @xmath21 . since @xmath159 is idempotent , @xmath159 fixes range@xmath293 .",
    "hence the set @xmath605 is non - empty . since @xmath159 is the only idempotent of @xmath8 , @xmath606 for all @xmath576 .",
    "let @xmath607 , and suppose that @xmath608 for some @xmath185 .",
    "let @xmath4 . then @xmath609 .",
    "since @xmath159 fixes range@xmath293 , we have that @xmath610 .",
    "we also have that @xmath159 fixes @xmath611 and the section of @xmath159 at @xmath611 is @xmath159",
    ". thus @xmath159 fixes @xmath612 , and ( as @xmath80 is arbitrary ) @xmath613 in @xmath8 .",
    "but @xmath614 , which implies that @xmath331 is idempotent .",
    "since @xmath331 is not idempotent in @xmath8 , we have @xmath615 for all @xmath345 .",
    "note that @xmath159 must be a state of @xmath75 as powers of @xmath155 can not multiply to obtain @xmath159 .",
    "thus , in the graphical representation of @xmath75 , all edges going out of @xmath159 are loops based at @xmath159 .",
    "note also that @xmath155 must be a state of @xmath75 .",
    "let @xmath616 .",
    "the equation @xmath161 implies that @xmath155 fixes range@xmath293 , and so @xmath617 is nonempty . in @xmath75 , for each state @xmath30 in @xmath228 and @xmath618 there is an arrow labeled by @xmath619 coming out of @xmath30 where @xmath620 .",
    "let @xmath621 with @xmath622 .",
    "suppose that @xmath623",
    ". then @xmath80 , as a path in @xmath75 based at @xmath155 , must enter the state @xmath159 .",
    "choose @xmath426 maximal so that @xmath624 is a path such that the initial vertex of each edge is not the state @xmath159 . then @xmath625 where @xmath626 for @xmath627 and @xmath628 for @xmath629 .",
    "since @xmath155 fixes @xmath630 , @xmath631 for all @xmath632 .",
    "thus for any @xmath621 , @xmath633 for any @xmath634 for all @xmath5 .",
    "then the same logic as in the proof of proposition [ not aut sgps ] shows that either @xmath155 is periodic or has infinitely many sections ( note that the proof does not use that the periodic element acts in a length - preserving fashion ) .",
    "so the set @xmath635 is nonempty .",
    "let @xmath636 , and write @xmath637 where @xmath638 .",
    "suppose that @xmath639 for some @xmath426 .",
    "then @xmath640 , and so @xmath641 , a contradiction .",
    "thus @xmath212 is not a letter of @xmath642 .",
    "the same calculation also shows that @xmath212 is not a letter of @xmath643 for any @xmath312 and that @xmath212 is not a letter of @xmath644 for any @xmath426 .",
    "let @xmath4 and write @xmath645 .",
    "suppose that @xmath646 for some @xmath426 .",
    "then every edge in @xmath75 with input label @xmath134 has an output label without @xmath134 as a letter .",
    "thus @xmath612 does not contain @xmath134 as a letter for any @xmath312 .",
    "if @xmath647 , then as mentioned above @xmath155 will act in a length - preserving fashion on @xmath648 .",
    "suppose that @xmath649 where @xmath650 is a letter of @xmath371 .",
    "then @xmath651 does not contain @xmath134 or @xmath652 as a letter .",
    "continuing inductively , we see that @xmath653 .",
    "thus there is an @xmath654 such that @xmath155 acts in a length - preserving fashion on @xmath655 for any @xmath4 , i.e. @xmath656 for @xmath657 and any @xmath4 .",
    "this induces a length - preserving action of @xmath8 on @xmath658 , contradicting lemma [ free sgp rank 1 with 0 not aut sgp ] .",
    "[ aas normal ideal extension ] let @xmath8 and @xmath53 be asynchronous automaton semigroups .",
    "then the normal ideal extension of @xmath8 by @xmath53 is an asynchronous automaton semigroup .",
    "let @xmath659 and @xmath660 be asynchronous automata with @xmath661 and @xmath662 . construct a new automaton @xmath663 with transition and output functions as follows : @xmath664 @xmath665 @xmath666 @xmath667 @xmath668 @xmath669 @xmath670 @xmath671 by construction of @xmath672 , the subsemigroup of @xmath673 generated by @xmath674 is @xmath8 and the subsemigroup of @xmath673 generated by @xmath675 is @xmath53 .",
    "now let @xmath676 .",
    "write @xmath677 with @xmath678 and @xmath679 .",
    "let @xmath680 and @xmath681",
    ". then @xmath682 and @xmath683 thus both @xmath684 and @xmath685 equal @xmath686 , so @xmath687 .",
    "we close this section by showing that the class of expanding automaton semigroups is closed under direct product , provided the direct product is finitely generated .",
    "[ closure under direct product ] let @xmath8 and @xmath53 be expanding automaton semigroups .",
    "then @xmath688 is an expanding automaton semigroup if and only if @xmath689 is finitely generated .",
    "an expanding automaton semigroup must be finitely generated , so the forward direction is clear .",
    "suppose that @xmath689 is finitely generated .",
    "then @xmath689 is generated by @xmath690 for some finite @xmath691 and @xmath692 .",
    "let @xmath693 and @xmath694 be expanding automata with state sets @xmath695 and @xmath70 respectively such that @xmath696 and @xmath697 .",
    "furthermore , choose @xmath174 so that @xmath698 and @xmath699 , and add enough states to each expanding automaton so that we obtain new automata @xmath700 and @xmath701 with @xmath702 , @xmath703 , and @xmath704 is contained in the state set of @xmath700 ; likewise for @xmath705 and @xmath701 .",
    "write @xmath706 and @xmath707 with @xmath708 and @xmath709 disjoint .",
    "let @xmath710 be the expanding automaton defined by @xmath711 then the subsemigroup of @xmath712 generated by @xmath713 is @xmath8 and the subsemigroup of @xmath712 generated by @xmath714 is @xmath53 , and construction of @xmath715 implies that @xmath716 for all @xmath717 and @xmath718 .",
    "thus @xmath719 .",
    "let @xmath8 and @xmath53 be finitely generated semigroups such that @xmath53 is infinite .",
    "robertson , ruskuc , and wiegold show in @xcite that if @xmath8 is finite then @xmath689 is finitely generated if and only if @xmath720 . if @xmath8 is infinite , then @xmath721 is finitely generated if and only if @xmath720 and @xmath722 .",
    "let @xmath723 denote the free semigroup of rank 1 .",
    "then @xmath724 , and thus @xmath725 is not an expanding automaton semigroup ( even though @xmath723 is an expanding automaton semigroup ) .      in this section",
    "we show that any free partially commutative monoid is an expanding automaton semigroup .",
    "let @xmath152 be a free partially commutative monoid with monoid presentation @xmath726 .",
    "we begin by defining the _",
    "shortlex normal form _ on @xmath152 .",
    "first , if @xmath727 , @xmath728 will always denote the length of @xmath114 in @xmath33 .",
    "order the set @xmath66 by @xmath729 whenever @xmath730 .",
    "if @xmath731 , let @xmath732 if and only if @xmath733 or , if @xmath734 , @xmath114 comes before @xmath80 in the dictionary order induced by the order on @xmath66 .",
    "this is called the _ shortlex ordering _ on @xmath33 . to obtain the set of shortlex normal forms of @xmath152 , for each @xmath735 choose a word @xmath736 such that @xmath737 in @xmath152 and @xmath167 is minimal in @xmath33 with respect to the shortlex ordering .",
    "we remark that it is immediate from this definition that a word @xmath31 is in shortlex normal form in @xmath152 if and only if for all factorizations @xmath738 in @xmath152 where @xmath739 , @xmath155 and @xmath159 commute , and @xmath740 , there is a letter of @xmath741 which does not commute with @xmath155 .",
    "for any @xmath31 , let @xmath742 denote the word obtained from @xmath80 by erasing all letters except @xmath743 and @xmath744 .",
    "we write @xmath745 to denote the word obtained from @xmath80 by deleting all occurrences of the letter @xmath743 .",
    "we will need the following lemma regarding free partially commutative monoids .",
    "[ lemma regarding trace monoids ] let @xmath152 be a free partially commutative monoid generated by @xmath63 , and",
    "let @xmath731 such that @xmath114 and @xmath80 are in shortlex normal form in @xmath152 .",
    "suppose that    1 .",
    "@xmath746 and 2 .",
    "@xmath747 .",
    "then @xmath748 in @xmath152 .",
    "let @xmath749 be words satisfying @xmath750 for all @xmath426 .",
    "this implies that the number of occurrences of @xmath743 as a letter of @xmath114 equals the number of occurrences of @xmath743 as a letter of @xmath80 .",
    "in particular , @xmath734 .",
    "write @xmath751 and @xmath752 with @xmath753 in shortlex normal form .",
    "suppose that @xmath754 .",
    "then @xmath755 in @xmath33 , and condition ( 2 ) in the hypotheses implies that @xmath756 and @xmath757 commute .",
    "condition ( 1 ) implies that @xmath757 is a letter of @xmath114 and @xmath756 is a letter of @xmath80 , and so we write @xmath758 where @xmath759 does not contain @xmath757 as a letter .",
    "similarly , write @xmath760 .",
    "condition ( 2 ) implies that @xmath756 commutes with every letter of @xmath164 . since @xmath754 , we have that @xmath80 was not in lexicographic normal form .",
    "thus @xmath761 , and symmetry implies @xmath762 .",
    "so @xmath763 .",
    "inductively continuing the argument implies that @xmath764 .",
    "[ trace monoids aut sgps ] every free partially commutative monoid is an automaton semigroup .",
    "let @xmath152 be a partially commutative monoid generated by @xmath63 .",
    "let @xmath765 .",
    "let @xmath766 , @xmath767 , @xmath768 , and @xmath769 be four alphabets where @xmath770 are in bijective correspondence with @xmath771 .",
    "we construct an automaton @xmath772 with state set @xmath773 over the alphabet @xmath774 such that @xmath775 as follows .",
    "let @xmath324 be the sink state that pointwise fixes @xmath1 .",
    "for each @xmath426 , define @xmath776 and @xmath777    by construction , the subautomaton consisting of the states @xmath778 and @xmath324 over the alphabet @xmath779 is the _ adding machine _ automaton ( see figure 1.3 of @xcite ) for all @xmath426 . note that for any @xmath780 , @xmath781 , and so the semigroup corresponding to this subautomaton is the free monoid of rank 1 for all @xmath426 .",
    "thus each @xmath778 acts non - periodically on @xmath782 for all @xmath426 .",
    "furthermore , if @xmath429 then @xmath783 induces the identity function from @xmath784 to @xmath784 where @xmath785 .",
    "we now complete the construction of @xmath75 . fix @xmath730 with @xmath786 , and let @xmath217 such @xmath787 and @xmath788 .",
    "define    @xmath789 @xmath790 @xmath791 @xmath792 for all other @xmath793 such that @xmath794 and @xmath795 , define the output and transition function analogously .",
    "figure [ fpcm example ] gives the automaton @xmath772 where @xmath152 is the free partially commutative monoid @xmath796 ( we omit the arrow on the sink state ) .",
    "[ fpcm example ] , title=\"fig:\",width=321 ]    for each @xmath786 , the subautomaton of @xmath772 corresponding to the states @xmath778 and @xmath783 over the alphabet @xmath797 is the  lamplighter automaton \" ( see figure 1.1 of @xcite ) . grigorchuk and zuk",
    "show in theorem 2 of @xcite that this automaton generates the lamplighter group , and in particular in lemma 6 of @xcite they show that the states of this automaton generate a free semigroup of rank 2 .",
    "thus @xmath778 and @xmath783 generate a free semigroup of rank 2 when acting on @xmath798 , and hence the semigroup generated by @xmath778 and @xmath783 in @xmath799 is free of rank 2 .",
    "let @xmath800 be such that @xmath801",
    ". by construction of @xmath772 , @xmath778 and @xmath783 have disjoint support , i.e. the sets @xmath802 and @xmath803 are disjoint .",
    "thus if @xmath743 and @xmath744 commute in @xmath152 , then @xmath778 and @xmath783 commute in @xmath799 .",
    "so @xmath799 is a quotient of @xmath152 .",
    "let @xmath804 such that @xmath114 and @xmath80 are written in shortlex normal form when considered as elements of @xmath152 .",
    "suppose that @xmath805 for some @xmath426 . by construction of @xmath772 , for any @xmath429 we have @xmath783 acts as the identity function on @xmath782 .",
    "thus the action of @xmath114 and @xmath80 on @xmath782 is the same as the action of @xmath806 and @xmath807 , respectively , on @xmath782 .",
    "so @xmath805 implies that @xmath808 in @xmath799 .",
    "hence @xmath748 in @xmath799 implies that @xmath809 for all @xmath426 .",
    "suppose now that there exist @xmath810 such that @xmath811 . if @xmath812 , then @xmath813 acts like the identity function on @xmath814 .",
    "thus the action of @xmath114 and @xmath80 on @xmath814 is the same as the action of @xmath815 and @xmath816 , respectively , on @xmath814 .",
    "so @xmath817 implies that @xmath818 in @xmath819 .",
    "thus if @xmath748 in @xmath819 then @xmath820 in @xmath149 for all @xmath810 .",
    "the last two paragraphs have shown that if @xmath748 in @xmath819 , then @xmath114 and @xmath80 satisfy the hypotheses of lemma [ lemma regarding trace monoids ] .",
    "hence @xmath748 in @xmath152 , and the result follows .",
    "the author would like to thank his advisors susan hermiller and john meakin for their direction and guidance in the editing of this paper ."
  ],
  "abstract_text": [
    "<S> we introduce a new class of semigroups arising from a restricted class of asynchronous automata . </S>",
    "<S> we call these semigroups  expanding automaton semigroups . </S>",
    "<S> \" we show that the class of synchronous automaton semigroups is strictly contained in the class of expanding automaton semigroups , and that the class of expanding automaton semigroups is strictly contained in the class of asynchronous automaton semigroups . we investigate the dynamics of expanding automaton semigroups acting on regular rooted trees , and </S>",
    "<S> show that undecidability arises in these actions . </S>",
    "<S> we show that this class is not closed under taking normal ideal extensions , but the class of asynchronous automaton semigroups is closed under taking these extensions . </S>",
    "<S> we construct every free partially commutative monoid as a synchronous automaton semigroup . </S>"
  ]
}
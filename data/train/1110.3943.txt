{
  "article_text": [
    "alignments of homologous sequences provide fundamental materials to the reconstruction of phylogenetic trees and many other sequence - based analyses ( see , e.g. , @xcite ) .",
    "each alignment column ( site ) consists of character states that are assumed to have evolved from a common ancestral state by means of mutations .",
    "any combination of the character states in the aligned sequences at one alignment column represents a so - called _ character _",
    "@xcite , which is sometimes also called _ site pattern _ @xcite . given a phylogenetic tree and an alignment that evolved along the tree , klaere et al .",
    "@xcite showed , for binary alphabets , how a character changes into another character if a substitution occurs on an arbitrary branch of the tree .",
    "the impact of such a substitution is summarized by the so - called _ one step mutation _ ( osm ) matrix .",
    "nguyen et al .",
    "@xcite extended the concept of the osm matrix to the four - state nucleotide alphabet while developing a method to evaluate the goodness of fit between models and data in phylogenetic inference .",
    "there , the osm matrix is constructed based on the kimura three parameter ( k3st ) substitution model @xcite .",
    "nguyen et al .",
    "@xcite illustrated how one can use maximum parsimony ( i.e. apply the fitch algorithm @xcite ) to compute the minimal number of substitutions required to change one character into another character under the osm setting .",
    "in the present paper , we deliver a proof for this transformation .",
    "in addition , the osm matrix can be constructed only if the substitution matrices and the identity matrix form a commutative or abelian group ( see , e.g. , @xcite ) with respect to matrix multiplication @xcite .",
    "we generalize the construction of the osm matrix for any alphabet .",
    "moreover , we show that the number of substitutions needed to convert one character into another may change if we use different groups .",
    "finally , we provide a means to find an abelian group for the twenty - state amino acid alphabet .",
    "recall that a _ rooted binary phylogenetic @xmath0-tree _ is a tree @xmath1 with leaf set ( also called taxon set ) @xmath2 with only vertices of degree 1 or 3 ( internal vertices ) , where one of the vertices of degree 1 is defined to be the _ root _",
    ", and all edges are directed away from it . in this paper , when there is no ambiguity we often just write `` phylogenetic tree '' or `` tree '' when referring to a rooted binary phylogenetic tree . also ,",
    "when referring to a tree on a leaf set @xmath0 with @xmath3 , we write _ @xmath4-taxon tree _ for short .    furthermore , recall that a _ character _ @xmath5 is a function @xmath6 for some set @xmath7 of @xmath8 _ character states _ ( @xmath9 ) .",
    "we denote by @xmath10 the set of all @xmath11 possible characters on @xmath12 and @xmath4 taxa .",
    "for instance , for the four - state dna alphabet , @xmath13 and the set @xmath10 consists of @xmath14 elements .",
    "extension _ of @xmath5 to @xmath15 is a map @xmath16 such that @xmath17 for all @xmath18 in @xmath0 .",
    "for such an extension @xmath19 of @xmath5 , we denote by @xmath20 the number of edges @xmath21 in @xmath22 on which a substitution occurs , i.e. where @xmath23 .",
    "the _ parsimony score _ of @xmath5 on @xmath22 , denoted by @xmath24 , is obtained by minimizing @xmath20 over all possible extensions @xmath19 .",
    "given a tree @xmath22 and a character @xmath5 on the same taxon set , one can easily calculate the parsimony score of @xmath5 on @xmath22 with the famous fitch algorithm @xcite .",
    "moreover , when a character state changes along one edge of the tree , we refer to this state change as _ substitution _ or _ mutation_. as for our purposes",
    "only so - called manifest mutations are relevant , i.e. those mutations that can be observed and are not reversed , we do not distinguish between mutations and substitutions , which is why we use these terms synonymously .",
    "we now introduce the osm framework in a stepwise fashion .",
    "the aim of the osm approach is to determine the effects a single mutation occurring on a rooted tree @xmath22 has on a character evolving on that tree .",
    "the first task of this approach is to formalize the term mutation and its effects on a single character state in @xmath12 .",
    "a mutation is an operation @xmath25 which is bijective , i.e. it satisfies the following condition :    1 .   for all @xmath26",
    "there is a @xmath27 such that @xmath28 , and if @xmath29 then @xmath30 .",
    "this guarantees that a mutation affects a character state in a unique fashion .",
    "it is well - known that any bijective operation on a finite discrete state set is isomorphic to a _ permutation _",
    "( e.g. , @xcite ) .",
    "therefore , in the following we consider mutations to be permutations .",
    "the next step is to establish which permutations we consider admissible in a model . in other words ,",
    "we next establish conditions on the set @xmath31 of permutations acting on @xmath12 .    1 .   for every pair @xmath32",
    "there is exactly one operation @xmath33 such that @xmath28 .",
    "this guarantees that every character state change can be observed within a single step and that we do not have any ambiguity .",
    "if @xmath31 contains the identity , i.e. the mapping @xmath34 such that @xmath35 for all @xmath26 , then all other permutations in @xmath31 are fix - point free due to condition 2 .",
    "condition 2 also implies that @xmath31 contains exactly @xmath8 permutations , where @xmath8 is the number of character states in @xmath12 . if @xmath31 had more permutations then for all states",
    "@xmath26 there would be a pair of distinct permutations @xmath36 such that @xmath37 , which would lead to ambiguity .",
    "condition 2 also concludes that we exclude gtr @xcite from the set of admissible models .",
    "however , we explain this more in - depth in section [ link_model_perm ] .    we add some more useful conditions which give @xmath31 a very convenient structure :    1 .   for all @xmath36 also the product @xmath38 . in other words , @xmath31 is closed with respect to concatenation of its permutations",
    ". 2 .   for all @xmath36 we have @xmath39 .",
    "thus , @xmath31 is commutative , and hence the order in which we assign permutations is irrelevant for the outcome .",
    "3 .   there is an element @xmath40 such that for all @xmath41 we have @xmath42 . as pointed out above , including the identity guarantees that all other permutations will force a state change , a feature which led to the name `` one step mutation '' .",
    "4 .   for every @xmath41",
    "there is a @xmath43 such that @xmath44 .",
    "the existence of such an inverse element guarantees that every operation can be reversed within a single step , which is quite a useful property .",
    "5 .   for all @xmath45 we have @xmath46 .",
    "associativity is needed to enforce a group structure on @xmath31 .",
    "all of these conditions taken together imply that @xmath31 forms an abelian group of @xmath8 permutations .",
    "from now on we use the matrix form of permutations for illustration of the operations . a permutation matrix @xmath47 over @xmath12",
    "is represented by an @xmath48 matrix such that @xmath49 if @xmath28 , and 0 otherwise . in that case , a concatenation `` @xmath50 '' is equivalent to the matrix multiplication `` @xmath51 '' .",
    "[ exa.k3st_state ] in genetics , the most commonly used character state set is @xmath52 .",
    "there are two different abelian groups for four states , namely the klein - four - group @xmath53 and the cyclic group @xmath54 .",
    "the klein - four - group is constructed from the cyclic group over two elements , identity ( @xmath55 ) and flip ( @xmath55 ) .",
    "these take the matrix form @xmath56 the klein - four - group consists of the four kronecker products of these two matrices , i.e. @xmath57 , and @xmath58 . in full , they take the form : @xmath59 this construction coincides with the k3st model of substitution , where @xmath60 describes _ transitions _ within purines @xmath61 and pyrimidines @xmath62 , @xmath63 represents _ transversions _ within pairs @xmath64 and @xmath65 , and @xmath66 represents the remaining set of transversions within pairs @xmath67 and @xmath68 .",
    "the cyclic group is given by the permutation set @xmath69 note that the cyclic group @xmath54 has a different interpretation with a different ordering of the nucleotides .",
    "e.g. , our matrix @xmath70 yields the rotation @xmath71 , while bryant @xcite uses the rotation @xmath72 .",
    "the cyclic group associated to the latter rotation @xcite is linked to the k2st substitution model @xcite , where @xmath73 corresponds to the transition within purines and pyrimidines , and @xmath70 and @xmath74 are the ( not further distinguished ) transversions .    the next step in constructing the osm matrix is to construct a set @xmath75 of operations over @xmath10 governed by @xmath22 , and based on the permutation set @xmath31 . to this end , we first define @xmath76 as a set of operations which work elementwise , i.e. for @xmath77 and @xmath78 we have @xmath79 this can also be described by the kronecker product , i.e. equally @xmath80 this means that there are @xmath11 different operators in @xmath81 .",
    "thus , for any pair of characters @xmath82 we can find an operation @xmath78 such that @xmath83 .",
    "another noteworthy consequence of using the kronecker product is that the elements of @xmath76 are permutations over @xmath10 @xcite , and in fact @xmath76 satisfies our conditions 1 - 7 , i.e. @xmath76 is an abelian group over @xmath10 .    in the osm framework",
    "we assume that the permutations acting on a character @xmath84 are derived from the underlying rooted tree @xmath22 .",
    "in particular , regard the pendant edge to a taxon @xmath85",
    ". a permutation on this edge will only affect the character state of @xmath86 .",
    "therefore , the edge implies permutations of type @xmath87 this construction works analogously for all pendant edges , with all but one factor being the identity @xmath34 , while the one non - identity factor is one of the remaining @xmath88 permutations in @xmath31 .",
    "a permutation at an interior edge affects the character states of all its descendants , i.e. those taxa whose path to the root passes that edge .",
    "e.g. , assume taxa 1 and 2 form a cherry , i.e. their most recent common ancestor has no other descendants , and permutation @xmath89 is acting on the edge leading to this ancestor .",
    "then , we get the permutation @xmath90 the right hand side equation shows that a single permutation on an internal edge has the same effect as simultaneously applying the same permutation on the pendant edges of all descendant taxa .",
    "this also shows that the set @xmath91 of all permutations on the pendant edges is a generator of @xmath76 , i.e. the closure of @xmath91 contains all permutations in @xmath76 . since @xmath76 contains a single permutation to transform character @xmath84 into @xmath92 , and since @xmath91 generates @xmath76 , there is a shortest chain of permutations in @xmath91 which transforms @xmath93 into @xmath94 .",
    "@xmath91 is also the set of permutations implied by the star tree for @xmath0 . for every @xmath0-tree @xmath22 we have @xmath95 , and",
    "therefore @xmath75 is a generator for @xmath76 , too .",
    "an illustration of such a generator set @xmath96 over the character set @xmath10 is the so - called _ cayley graph _ @xcite , which has as vertices the elements of @xmath10 , and two elements @xmath97 are connected if there is a permutation @xmath98 such that @xmath99 . in @xcite cayley graphs",
    "have been presented as alternative illustrations of the tree @xmath22 over a binary state set @xmath12 .",
    "[ exa.k3st_character ] regard the k3st model from [ exa.k3st_state ] and the rooted two - taxon tree depicted in figure 1(a ) . with this @xmath100 is given by the set @xmath101 each operation is thus a symmetric @xmath102 permutation matrix depicting a transition ( @xmath103 ) , transversion 1 ( @xmath104 ) , or transversion 2 ( @xmath105 ) along edge @xmath106 .",
    "figure 1(b ) , ( c ) , and ( d ) display the permutation matrices for a transition on branch @xmath107 ( @xmath108 ) , @xmath109 ( @xmath110 ) and @xmath111 ( @xmath112 ) , respectively .",
    "figure 2(a ) shows the cayley graph associated with @xmath100 .",
    "we are now in a position to recall the definition of the _ osm matrix _",
    "@xmath113 for a rooted binary phylogenetic tree @xmath22 as explained in @xcite and @xcite . for an edge @xmath106",
    "we denote by @xmath114 the relative branch length of @xmath115 , i.e. its actual length divided by the length of @xmath22 .",
    "thus , one can view @xmath114 as the probability that a mutation is observed at edge @xmath115 given that a mutation occurred on @xmath22 .",
    "clearly , @xmath116 .",
    "further , denote by @xmath117 the probability that this mutation on @xmath115 is of type @xmath118 with @xmath119 for all @xmath106 .",
    "then the osm matrix is the convex sum of the elements in @xmath75 , where each permutation @xmath120 is multiplied by @xmath121 , the probability of hitting the edge @xmath115 with permutation @xmath122 .",
    "thus , we obtain : @xmath123 @xmath113 can be regarded as the weighted exchangeability matrix for all characters given that a substitution occurs somewhere on the tree @xmath22 .",
    "figure 1(e ) depicts the osm matrix for the tree in figure 1(a ) . here , colors indicate relative branch lengths @xmath114 , and patterns denote permutation types @xmath124 .",
    "e.g. , a blue square with horizontal lines indicates the product @xmath125 , i.e. the probability of observing a transition @xmath60 on edge @xmath109 .      with the construction of @xmath75 we have generated the tools needed to formally describe the computations in step 4 of the misfits method introduced by nguyen _",
    "given a rooted tree @xmath22 and two characters @xmath5 and @xmath126 in @xmath10 , we want to compute the minimal number of substitutions required on the tree to convert @xmath5 into @xmath126 .    in our framework",
    "this corresponds to finding the smallest number @xmath127 of permutations @xmath128 such that @xmath129 .",
    "the number @xmath127 has multiple equivalent interpretations .",
    "it is also the length of the shortest path between @xmath5 and @xmath126 in the cayley graph for @xmath96 , where this path corresponds exactly to the chain @xmath130 since each edge in the cayley graph corresponds to an operation in @xmath75 .",
    "@xmath127 is also the smallest matrix power such that @xmath131 for @xmath132 and @xmath133 , because a positive entry in @xmath134 means that there is a concatenation of @xmath127 permutations connecting the associated characters .",
    "nguyen et al .",
    "@xcite presented an efficient procedure to compute the minimal number of substitutions as summarized in algorithm [ alg ] , and we prove its correctness in section [ parsimonyproof ] .",
    "[ alg ] rooted binary phylogenetic tree @xmath22 on leaf set @xmath0 , characters @xmath93 and @xmath126 on @xmath0 , group @xmath135 .    * iteration 1 : * align characters @xmath93 and @xmath126 and find the corresponding substitution type @xmath136 which translates @xmath137 into @xmath138 for all positions @xmath139 .",
    "let @xmath140 be the resulting operation .    * iteration 2 : * let @xmath141 be the constant character on @xmath0 with some @xmath142 on all positions .",
    "apply @xmath143 to @xmath144 and call the derived character @xmath145 .",
    "* iteration 3 : * calculate @xmath146 .",
    "* output : * minimum number @xmath147 of substitutions needed to evolve @xmath126 instead of @xmath93 on @xmath22 .",
    "[ examplek3st ] figure 3 demonstrates how algorithm [ alg ] works under the k3st model , i.e. when the group is @xmath148 ( figure 3(a ) ) .",
    "consider the rooted five - taxon tree in figure 3(b ) and the character @xmath149 at the leaves .",
    "assume that the character @xmath149 is to be converted into character @xmath150 . by comparing the two characters positionwise",
    ", we need a substitution @xmath60 on the external branch leading to taxon 1 to convert @xmath151 into @xmath152 at the first position .",
    "similarly , we need a substitution @xmath60 on the external branch leading to taxon 2 , and a substitution @xmath63 on every external branch leading to taxa 3 , 4 , and 5 .",
    "thus , the operation @xmath153 transfers the character @xmath149 into the character @xmath150 . as the operation @xmath154 also translates the constant character @xmath155 into @xmath156 , converting @xmath149 into @xmath150 is equivalent to evolving the character state @xmath152 at the root along the tree to obtain the character @xmath156 at the leaves .",
    "the fitch algorithm applied to the character @xmath156 with the constraint that the character state at the root is @xmath152 produces a unique most parsimonious solution of two substitutions as depicted by figure 3(c ) .",
    "in this section , we provide some mathematical insights into the role of maximum parsimony in the estimation of the number of substitutions needed to convert a character into another one as explained in section [ problem ] . in particular , we deliver a proof for algorithm [ alg ] .",
    "let @xmath157 be a rooted binary phylogenetic tree on taxon set @xmath0 and let @xmath5 be a character that evolved on @xmath157 due to some evolutionary model and let @xmath126 be another character on @xmath0 .",
    "then , the number of substitutions to be put on @xmath157 which change the evolution of @xmath5 in such a way that @xmath126 evolves instead of @xmath5 can be calculated with algorithm @xmath158 .",
    "let @xmath5 , @xmath126 , @xmath0 , @xmath22 and @xmath31 be as required for the input of algorithm [ alg ] .",
    "then , the number of substitutions needed to evolve @xmath126 on @xmath22 rather than @xmath5 depends solely on operation @xmath143 . in order to see this ,",
    "note that @xmath143 describes an explicit way to translate @xmath5 into @xmath126 step by step , i.e. for each taxon seperately .",
    "the basic idea now is that in order to minimize the number of required substitutions , we need to consider the underlying tree @xmath22 , as this may allow a single substitution to act on an ancestor of taxa that undergo the same substitution type rather than on each taxon separately . this idea has been described above in section [ osm - construction ] , and it coincides precisely with the idea of the parsimony principle .",
    "however , in order to avoid confusion regarding the operation @xmath143 as a character on which to apply parsimony , algorithm [ alg ] instead acts on the constant character . clearly , in order to evolve the constant character @xmath159 on a tree with root state @xmath160 , the corresponding operation would be @xmath161 .",
    "if instead of @xmath162 we let @xmath143 act on @xmath163 , the resulting character @xmath145 will differ from @xmath163 in the same way @xmath126 differs from @xmath5 .",
    "note that two character states in @xmath145 are identical if and only if the corresponding substitutions in @xmath143 are identical , too .",
    "therefore , it is possible to let mp act on @xmath145 rather than directly on @xmath143 .    by the definition of maximum parsimony , when applied to @xmath145 on tree @xmath22 with given root state @xmath160 , it calculates the minimum number @xmath147 of substitutions to explain @xmath145 on @xmath22 .",
    "this number @xmath147 is therefore precisely the number of substitions needed to generate @xmath145 on @xmath22 rather than @xmath163 .",
    "but as explained before , @xmath145 and @xmath163 are by definition related the same way as @xmath5 and @xmath126 .",
    "therefore , @xmath147 also is the number of substitutions needed to generate @xmath126 on @xmath22 rather than @xmath5 .",
    "this completes the proof .      for any alphabet",
    ", there might be more than one abelian group .",
    "different groups might result in different numbers of substitutions required to translate a character into another character .",
    "we illustrate this in the following examples . for the four - state nucleotide alphabet",
    "there are two abelian groups , namely the klein - four group and the cyclic group ( see above ) .",
    "the cyclic group @xmath164 consists of the identity matrix @xmath165 and the three substitution types @xmath166 depicted by figure 4(a ) .",
    "hence , @xmath167 . under @xmath164",
    ", we note that a substitution type which changes a character state @xmath168 to @xmath169 does not necessarily change @xmath169 to @xmath168 .",
    "[ examplecyclic ] assume the rooted five - taxon tree in figure 4(b ) and the character @xmath149 at the leaves , which is to be converted into character @xmath150 .",
    "the tree and the two characters are the same as in example [ examplek3st ] . by comparing the two characters positionwise under the group @xmath170 , we need a substitution @xmath171 ( depicted in blue in figure 4(a ) ) on the external branch leading to taxon 1 to convert @xmath151 into @xmath152 at the first position .",
    "analogously , we need a substitution @xmath172 on the external branches leading to taxon 2 and to taxon 4 , and a substitution @xmath171 on the external branches leading to taxon 3 and to taxon 5 .",
    "thus , the operation @xmath173 transfers the character @xmath149 into the character @xmath150 . as the operation @xmath174 also translates the constant character @xmath155 into @xmath175 , converting @xmath149 into @xmath150 is equivalent to evolving the character state @xmath152 at the root along the tree to obtain the character @xmath175 at the leaves .",
    "the fitch algorithm applied to the character @xmath175 with the constraint that the character state at the root is @xmath152 produces a unique most parsimonious solution of three substitutions as depicted by figure 4(c ) .",
    "thus , under the @xmath170 group we need one substitution more than under the @xmath176 group .",
    "note that variation of the minimum number of substitutions needed to translate a character into another one between different groups is not surprising : as different substitution types are needed to translate one pattern into the other one , depending solely on the underlying group , one group might need the same substitution type for some neighboring branches in the tree and another group different ones .",
    "informally speaking , this would imply that in the first case , the substitution could be `` pulled up '' by the fitch algorithm to happen on an ancestral branch , whereas in the second case this would not be possible .",
    "in examples [ exa.k3st_state ] and [ exa.k3st_character ] we have shown that the k3st substitution model can be included into our framework .",
    "this section aims at discussing alternative models and how to identify their use ( or lack thereof ) for our approach .",
    "the set @xmath75 contains a set of permutations which act on the characters in @xmath10 .",
    "most substitution models assume the independence of the different branches of a tree to compute the joint probability of the characters in @xmath10 .",
    "therefore , they use the probabilities for substitutions among the character states in @xmath12 along the edges of the tree @xmath22 .",
    "we now establish a probabilistic link between @xmath75 and @xmath10 .",
    "this link is provided by birkhoff s theorem :    a matrix @xmath177 is doubly stochastic , i.e. , each column and each row of @xmath177 sum to 1 , if and only if for some @xmath178 there are permutation matrices @xmath179 and positive scalars @xmath180 such that @xmath181 and @xmath182 .",
    "therefore , the weighted sum of the permutation matrices in @xmath75 yields a doubly stochastic matrix @xmath113 as introduced in section [ osm - construction ] .",
    "@xmath113 also describes a random walk on @xmath10 governed by @xmath22 where the single step in @xmath10 is illustrated by the associated cayley graph .",
    "its stationary distribution is uniform , i.e. when we throw sufficiently many mutations on @xmath22 then we expect to see each pattern with probability @xmath183 .",
    "another , even more useful consequence of birkhoff s theorem is the fact that it tells us which substitution models are suited for the osm approach . if the transition matrix associated with the model is doubly stochastic , then we find a set of permutations which give rise to the model .",
    "let us see how this influences the symmetric form of the general time reversible model ( gtr ) .",
    "it has the transition matrix @xmath184 assigning permutation matrices to the respective parameters yields the set @xmath185 with elements @xmath186 ( identity ) and @xmath187 the weighted sum of the non - identity elements yields @xmath188 which is equal to @xmath189 because @xmath190 .",
    "thus , the set @xmath185 is to gtr what @xmath176 is to k3st .",
    "however , @xmath185 does not satisfy condition 2 , because it contains more than four elements .",
    "therefore , it creates ambiguity since for each nucleotide there are three permutations which do not change the nucleotide .",
    "it is also not commutative ( condition 4 ) which means the order in which we assign the permutations matters . and",
    "it is not closed under matrix multiplication ( condition 3 ) , which means that a concatenation of permutations in @xmath185 might lead to a new permutation not in @xmath185 , i.e. we would encounter a new mutation type .",
    "all of this shows why the overall applicability of gtr to the osm approach is rather limited .",
    "more complex models like tamura - nei @xcite do not even permit the decomposition of its transition matrix into the convex sum of permutation matrices .",
    "however , including the concept of partial permutation matrices @xcite can address this problem . while this approach is interesting for future work",
    ", it is beyond the scope of this paper .      as stated in section [ osm - construction ] , the osm model only requires an underlying abelian group .",
    "thus , the osm setting is applicable not only to binary data or four - state ( dna or rna ) data , but also to doublet , codon , and amino acid characters .    in particular , there are four abelian groups for the twenty - state amino acid alphabet , namely @xmath191 , and the cyclic group @xmath192 ( see e.g.,@xcite for a complete list of all groups with up to 35 elements ) .",
    "their construction is analogous to the construction of the klein - four group in example [ exa.k3st_state ] .",
    "for example , the elements of @xmath193 are kronecker products of one of the four permutations in the cyclic group @xmath54 with one of the five permutations of the cyclic group @xmath194 .",
    "figure 5 depicts the 20 substitution types , i.e. the 20 operations including the identity acting on the amino acid character states for all four abelian groups . if we assign probabilities to the substitution types in the matrices , the resulting matrices are doubly stochastic .",
    "the matrices show several features of the groups , e.g. that contrary to the klein - four group the elements of the group are not self - inverse but instead the effect of a permutation is reversed by a different mutation .",
    "such events are present in some models of nucleotide evolution , like the strand symmetric model @xcite , and relatively common in amino acid models where the transition matrix is generated by , e.g. , counting mutation types in amino acid alignments ( see , e.g. , @xcite for an overview ) .",
    "it might be interesting to see whether any of these can be fitted .",
    "the illustrations in figure 5 also suggest some ordering of the amino acids to fit the model .",
    "for instance , @xmath195 and @xmath193 seem to partition the sets into four groups with five elements each .",
    "in this paper , we provide the necessary mathematical background for the osm setting which was introduced and used previously @xcite , but had not been analyzed mathematically for more than two character states .",
    "moreover , the present paper also delivers new insight concerning the requirements for the osm model to work : in fact , we were able to show that mathematically , it is sufficient to have an underlying abelian group  which shows a generalization of the osm concept that was believed to be impossible previously @xcite . therefore , we show that osm is applicable to any number of states .",
    "however , note that the original intuition of the authors in @xcite was biologically motivated : the authors supposed that the group not only has to be abelian , but also symmetric in the sense that each operation can be undone by being applied a second time .",
    "thinking about the dna , for instance , this works : for example , the transition from a to g can be reverted by another substitution of the same type , namely a transition from g to a. this symmetry criterion is fulfilled by the klein - four group , but not by the cyclic group on four states .",
    "unfortunately , for 20 states there is no abelian group fulfilling this criterion , which is why the demonstrated generalization to 20 states does not provide a nice symmetry ( r.f .",
    "figure 5 ) .",
    "therefore , it remains unclear at this stage if there are biologically motivated settings for which our twenty - state generalization is directly applicable .",
    "all authors contributed equally .",
    "sk thanks marston conder for fruitful discussions on the group theoretical background .",
    "this work is financially supported by the wiener wissenschafts- , forschungs- and technologiefonds ( wwtf ) .",
    "avh also acknowledges the funding from the dfg deep metazoan phylogeny project , spp ( ha1628/9 ) and the support from the austrian gen - au project bioinformatics integration network iii .",
    "on the left branch @xmath107 ( the red branch ) changes a character into exactly one new character as depicted by the red horizontal stripe cells of the permutation matrix @xmath196 . the matrix has 16 rows and 16 columns representing the possible characters for the alignment of two nucleotide sequences .",
    "the permutation matrices generated by @xmath60 for the right branch @xmath109 ( blue ) and for the branch leading to the  root \" @xmath111 ( green ) are displayed in ( c ) and ( d ) , respectively .",
    "the convex sum of all the weighted ( by the relative branch length and the probability of the substitution type ) permutation matrices generated by all substitution types for all branches is the osm matrix of the tree ( @xmath113 ) as shown in ( e ) .",
    "horizontal stripe cells represent the probability of the transition @xmath60 ; diagonal stripes the transversion @xmath63 ; and thin reverse diagonal stripes the transversion @xmath66 .",
    "the colors of these cells indicate the relative branch lengths and follow the colors of the branches as in ( a ) .",
    "thus , these colors also depict the branch origin of the substitutions.,scaledwidth=70.0% ]    [ [ figure-2 - -the - cayley - graph - for - the - two - taxon - tree - from - figure-1a . ] ] figure 2- the cayley graph for the two - taxon tree from figure 1(a ) . ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    .",
    "two vertices are connected by an edge if there is a permutation in @xmath75 transforming one of the associated characters into the other .",
    "( a ) depicts the cayley graph for the klein four group @xmath53 , and ( b ) depicts the cayley graph for the cyclic group @xmath54.,scaledwidth=70.0% ]    [ [ figure-3 - -computing - the - minimal - number - of - substitutions - to - translate - a - character - into - another - one . ] ] figure 3- computing the minimal number of substitutions to translate a character into another one . ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    , which consists of the identity @xmath186 and the three substitution types",
    "@xmath197 from the k3st model .",
    "( b ) in order to convert the character @xmath149 into @xmath150 under @xmath176 , we need to introduce the operation @xmath198 . as the operation @xmath199 also translates the constant character @xmath155 to @xmath156 ,",
    "converting @xmath149 into @xmath150 is equivalent to evolving the character state @xmath152 at the root along the tree to obtain the character @xmath156 at the leaves .",
    "the fitch algorithm applied to the latter produces a unique most parsimonious solution of two substitutions as depicted by ( c).,scaledwidth=70.0% ]    [ [ figure-4 - -converting - one - character - into - another - character - using - the - cyclic - group . ] ] figure 4- converting one character into another character using the cyclic group . ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
    ", which consists of the identity @xmath200 and the three substitution types @xmath166 for nucleotide character states .",
    "( b ) in order to convert the character @xmath149 into",
    "@xmath150 using this group , we need to introduce the operation @xmath201 . as the operation",
    "@xmath174 also transforms the constant character @xmath155 to @xmath175 , converting @xmath149 into @xmath150 is equivalent to evolving the character state @xmath152 at the root along the tree such that the character @xmath175 is attained at the leaves .",
    "the fitch algorithm applied to the latter produces a unique most parsimonious solution of three substitutions as depicted by ( c ) .",
    ", scaledwidth=70.0% ]    [ [ figure-5 - -matrices",
    "- illustrate - the - four - abelian - groups - for - the - twenty - state - amino - acid - alphabet . ] ] figure 5- matrices illustrate the four abelian groups for the twenty - state amino acid alphabet .",
    "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~     group , ( b ) @xmath202 , ( c ) @xmath203 , and ( d ) @xmath192 . in each matrix , the 20 different colors ranging from light yellow to dark red can be regarded to represent 20 substitution types , i.e. 20 operations including the identity acting on the amino acid character states or the corresponding probabilities of these substitution types . in the latter case ,",
    "the matrices are all doubly stochastic.,scaledwidth=70.0% ]"
  ],
  "abstract_text": [
    "<S> in a recent paper @xcite , klaere et al . modeled the impact of substitutions on arbitrary branches of a phylogenetic tree on an alignment site by the so - called _ one step mutation _ </S>",
    "<S> ( osm ) matrix . by utilizing the concept of the osm matrix for the four - state nucleotide alphabet , nguyen et al . </S>",
    "<S> @xcite presented an efficient procedure to compute the minimal number of substitutions needed to translate one alignment site into another . </S>",
    "<S> the present paper delivers a proof for this computation . </S>",
    "<S> moreover , we provide several mathematical insights into the generalization of the osm matrix to multistate alphabets . </S>",
    "<S> the construction of the osm matrix is only possible if the matrices representing the substitution types acting on the character states and the identity matrix form a commutative group with respect to matrix multiplication . </S>",
    "<S> we illustrate a means to establish such a group for the twenty - state amino acid alphabet and critically discuss its biological usefulness .    </S>",
    "<S> [ 1995/12/01 ] </S>"
  ]
}
{
  "article_text": [
    "in this paper we will observe a concrete artificial world .",
    "you can find this world and test it in the examples of the compiler strawberry prolog @xcite .",
    "you have to start the example program * world 2.spj*. after that you will see one panel with five lamps , three checkboxes and one button .",
    "you can observe this program as a test for intelligence .",
    "really , it is made to distinguish ai but you can use it also to test a human being for its level of intelligence .",
    "here are the rules of the test .",
    "you are a step device which lives in an artificial world . to make a step you have to select your move in the checkboxes and to press the button `` next step '' .",
    "what is your purpose ? in order to cope well in this world you have to make more victories , and less losses and bad moves .",
    "you make victory when the lamp named `` victory '' flashes .",
    "respectively you make loss or bad move when the respective lamp flashes .        of course",
    ", to cope well in this world you have to understand it first .",
    "this is extremely difficult even if you know that behind the panel is hidden the game tick - tack - toe .",
    "the main problem is that you do not see the entire internal state of the game .",
    "this is obvious because you see only five lamps which do not carry enough information . anyway ,",
    "if you spare enough time for experiments in this world then you will understand it and will start to cope well in it .",
    "i am sure that you can manage in this artificial world because you manage to cope well in the real world , which is much more complicated . really , you spare about 20 years for education before understanding the real world .",
    "if you try to understand @xmath0 alone then you will understand the difficulties , which ai program has to overcome .",
    "it is better to try first the @xmath1 .",
    "it is much easier because there is no hidden information in it . on every step you can observe the internal state of the @xmath1 . in other words , the function @xmath2 which gives",
    "the lamps status from the internal state of the world is injective .",
    "we are going to make a program which is able to cope in @xmath0 because we want to build ai .",
    "our first question is what is ai .",
    "we will accept the definition for ai which is given in @xcite . here is a short description of this definition .    for us",
    "ai will be a step device which copes well in an arbitrary world .",
    "what is a world ? for us this is a set @xmath3 of internal states , one starting state @xmath4 and two functions @xmath5 and @xmath6 .",
    "the function @xmath7 will return the new state of the world from the current state and from the device s move ( the state of the checkboxes ) .",
    "the function @xmath2 will inform us what does our device see . that is , this function will return the state of the lamps from the current state of the world .",
    "one device copes better than another if it makes more victories and less losses .",
    "this definition differs from the so called turing s test @xcite because it separates the intellect from the education .",
    "alan turing described a device which copes well in the natural world .",
    "actually , even the human being can not do this without education .",
    "so his device is already educated before the start of the test or his device is specially built for the natural world and includes within itself all information about the real world . in the case with @xmath0 it is not a problem to build a program which copes well in tick - tack - toe world .",
    "there are many programs which play this game very successfully ( one of them you can find in [ 1 ] ) .",
    "our goal is not to build a program specialised for @xmath0 but for a class of worlds as big as possible .",
    "the best case is if the real world is inside this class .",
    "so we will suppose that our program does not know anything for the world before it starts living ( making steps ) .",
    "the ai program has to collect all information alone .",
    "this will make the task of building of ai program extremely difficult .",
    "in the @xmath0 you play tick - tack - toe against an artificial partner which we will call tom . the tom s strategy is very simple .",
    "he plays every time randomly a correct move .",
    "you can not see the whole board of the game but at every step you can see one cell by the state of the two yellow lamps . if the first lamp is on then this mean a cross .",
    "if the second lamp is on then this mean `` o '' .",
    "if no lamp is on then there is nothing in the cell .",
    "both lamps are never on together .    with the checkboxes you can select eight possible commands ( moves ) .",
    "four of them move your eye through the board .",
    "one command puts a cross at the position of the eye .",
    "another one is the new game command .",
    "the last two commands are not used and they give bad move every time when you play them .",
    "when one tick - tack - toe set is finished then one of the lamps victory or loss flashes depending on who won the set .",
    "if the set is equal then both lamps flash simultaneously .",
    "when after the end of the set you play the new game command then all cells are cleaned and become empty .",
    "the @xmath0 is made in this way because after the end of the set you will be able to continue to observe the tick - tack - toe board in order to understand why you lost or won .",
    "such observation is important for understanding of this world .",
    "every time when you try to do something which is not allowed the lamp `` bad move '' will flash red and the internal state of the world will stay unchanged .",
    "examples of bad moves : when you are in the first column and try to move left .",
    "when you try to put cross in the cell which is not empty or when the set is over . when you give the command new game before the end of the set .",
    "in order for ai to understand the @xmath0 it has to build a model of this world . here",
    "we will build such a model , which will consist from very simple parts .",
    "most of these parts will be final automata with maximum three states .",
    "for such small automata exists possibility ai to find them by brutal force or by more creative approach . for bigger automata",
    "there is not such possibility due to the combinatory explosion .",
    "there are three states in this automate and they correspond to the left , middle and right column of the board .",
    "the change of the state occurs when ai makes the move `` left '' or `` right '' .",
    "all other moves do not change the state of this automate . here",
    "the flash stands for a `` bad move '' .",
    "this means that if you try to play `` left '' from the left column then the lamp `` bad move '' will flash .",
    "actually , this is the peculiarity of this automate , which will allow ai to find it . actually , there is a huge number of final automata with three states but this one is special because it is connected with the rule that if the automate is in its first state and if ai plays `` left '' then the result is `` bad move '' . from the other two states the move `` left ''",
    "every time is correct .",
    "of course , this automate is fundamental for the understanding of the @xmath0 because it gives to ai the information in which column the eye is .",
    "analogicaly , ai will find the automate ( 2 ) , which will say in which row the eye is and this two automata together will give the co - ordinates of the eye .",
    "also analogicaly , ai will find the automate ( 3 ) with two states which will give information whether the game is over or not and when you can play the `` new game '' command .",
    "interesting in this automate is that it can change its state due to the lamp status ( if one or both of the lamps `` victory '' or `` loss '' flash ) .        in order to begin to understand the rules and to play without `` bad moves '' we will need some easy rules like",
    ": if ai sees cross and plays `` put cross '' then the result is a `` bad move ''",
    ". simple rules like this can be represented like final automate with a single state .    in this way by constant rules and by deterministic automata we described the rules of @xmath0 and we can start playing correctly in it ( without bad moves ) .",
    "anyway this is not enough in order to understand this world and to cope well in it . for this purpose",
    "we need to have an idea for the situation on the board ( for the game status ) .",
    "unfortunately , all possible situations on the board are too much .",
    "they are 3 on the power of 9 . of course , not all of these situations are really possible but they are too much anyway and it is impossible for ai to find an automate with so many states by brutal force .",
    "that is why we will describe the situation on the board in a different way .",
    "we will introduce a special undeterministic final automate which will be of second level because it will change its states depending on the condition of other automata .",
    "the first level automata , which we will use for this will be automata 1 , 2 and 3 . actually , we will build 9 new automata - one for every possible co - ordinates @xmath8 of the eye .",
    "the condition `` at x , y '' will be true if the automate ( 1 ) is at the state @xmath9 and automate ( 2 ) is at the state @xmath10 .",
    "the condition `` game over '' will be true if the automate ( 3 ) is at the state `` game over '' .",
    "what is the peculiarity of this automate , which will allow to ai to find it ?",
    "this is the fact that when the automate @xmath8 is at the state `` cross '' and when the condition `` at x , y '' is true then ai sees `` cross '' .",
    "this peculiarity will also help to determine which state this undeterministic automate is in .",
    "after this we can understand the @xmath0 and the fact that if ai puts cross then tom will answer immediately by putting `` o '' on the board .",
    "actually we need also the rule that tom can not put more than one `` o '' as a response . to describe such rule",
    "we need first order formula which can look something like this :      this formula we can read as follows . `` for every moment @xmath12 if o appears in the cell @xmath13 and in the cell @xmath14 then @xmath13 and @xmath14 are the same cell . ''",
    "here the universum of this formula is the set of moments ( the natural numbers ) plus the set of cells ( the ( x , y ) automata ) .",
    "we need one predicate @xmath15 which will be true if the automate @xmath13 is in state `` o '' at the moment @xmath12",
    ". then we can accept that @xmath16 is the formula @xmath17 . here",
    "function @xmath18 gives the previous moment of the moment @xmath12 .    with this formula ai",
    "will start to understand the game but it needs also to understand why it win or lose and for this it needs the concept of `` line '' and `` diagonal '' on the board .",
    "after this we will have the model of @xmath0 and we can start planing the future in this world . to plan its next move",
    "ai can use the algorithm min - max like the other programs , which play tick - tack - toe .",
    "this paper gives an idea of how we can make a program which will cope successfully in a tick - tack - toe world without knowing apriory anything about this world .",
    "this program will be not that far from ai ."
  ],
  "abstract_text": [
    "<S> in order to build ai we have to create a program which copes well in an arbitrary world . in this paper </S>",
    "<S> we will restrict our attention on one concrete world , which represents the game tick - tack - toe . </S>",
    "<S> this world is a very simple one but it is sufficiently complicated for our task because most people can not manage with it . </S>",
    "<S> the main difficulty in this world is that the player can not see the entire internal state of the world so he has to build a model in order to understand the world . </S>",
    "<S> the model which we will offer will consist of final automata and first order formulas . </S>"
  ]
}
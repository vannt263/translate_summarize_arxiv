{
  "article_text": [
    "current and planned experiments in high energy physics can probe processes with many tagged  potentially polarized ",
    "particles in the final state .",
    "the combinatorial explosion of the number of feynman diagrams contributing to scattering amplitudes for many external particles calls for the development of more compact representations that translate well to efficient and reliable numerical code . in gauge theories , strong numerical cancellations in a redundant representation built from necessarily gauge dependent feynman diagrams",
    "lead to a loss of numerical precision , stressing further the need for eliminating redundancies .",
    "due to the large number of processes that have to be studied in order to unleash the potential of modern experiments , the construction of these representations must be possible algorithmically on a computer and should not require human ingenuity for each new application .",
    "omega  @xcite is a compiler for tree - level scattering amplitudes that satisfies these requirements .",
    "omega is independent of the target language and can support code in any programming language for which a simple output module has been written . to support a physics model",
    ", omega requires as input only the feynman rules and the relations among coupling constants .",
    "similar to earlier numerical approaches  @xcite , omega reduces the growth in calculational effort from a factorial of the number of particles to an exponential .",
    "the symbolic nature of omega , however , increases its flexibility .",
    "indeed , omega can emulate both  @xcite and produces code that is empirically at least twice as fast .",
    "_ one particle off - shell wave functions _  ( 1pows ) are obtained from greensfunctions by applying the lsz reduction formula to all but one line : @xmath0 the 1pow @xmath1 in lowest order of @xmath2-theory , is given  for illustration ",
    "by @xmath3 at tree - level , the set of all 1pows for a given set of external momenta can be constructed recursively  @xcite @xmath4 }         \\end{fmffor }        \\end{fmfgraph * } } } =     \\sum_{k+l = n }    \\parbox{32\\unitlength}{%      \\fmfframe(2,3)(2,1){%        \\begin{fmfgraph*}(27,15 )         \\fmflabel{$x$}{x }         \\fmftop{x }         \\fmfbottomn{n}{6 }         \\fmf{plain , tension=8}{x , n }         \\fmf{plain , tension=4}{n , k }         \\fmf{plain , tension=4}{n , l }         \\fmfv{d.sh = circle , d.f = empty , d.si=20pt , l=$k$,l.d=0}{k }         \\fmfv{d.sh = circle , d.f = empty , d.si=20pt , l=$l$,l.d=0}{l }         \\fmffixed{(30pt,0pt)}{k , l }         \\begin{fmffor}{i}{1}{1}{4 }           \\fmf{plain}{k , n[i ] }         \\end{fmffor }         \\begin{fmffor}{i}{5}{1}{6 }           \\fmf{plain}{l , n[i ] }         \\end{fmffor }         \\fmfdot{n }        \\end{fmfgraph*}}}\\,,\\ ] ] where the sum extends over all partitions of the set of @xmath5  momenta . for all quantum field theories , there are  well defined , but not unique  sets of _ keystones _  @xmath6  @xcite such that the sum of tree feynman diagrams can be expressed as a sparse sum of products of 1pows without double counting . in a theory with only cubic couplings",
    "this is expressed as @xmath7 the non - trivial problem of avoiding the double counting of diagrams like ( the circle denotes the keystone )    ( 25,16 )    ( 25,16 )    has been solved for general theories with vertices of arbitrary degrees  @xcite .",
    "the number of distinct momenta that can be formed from @xmath5  external momenta is @xmath8 .",
    "therefore , the number of tree 1pows grows exponentially with the number of external particles and not with a factorial , as the number of feynman diagrams @xmath9 .",
    "the equations sketched in eqs .",
    "( [ eq : recursive-1pow ] ) and  ( [ eq : keystones ] ) for cubic couplings can be generalized to vertices of any order  @xcite .    even for vector particles and to all orders in renormalized perturbation theory ,",
    "the 1pows are ` almost ' physical objects and satisfy simple ward identities in unbroken gauge theories @xmath10 and well as in spontaneously gauge theories @xmath11 in @xmath12-gauge .",
    "the code for matrix elements can optionally be instrumented by omega with numerical checks of these ward identities for intermediate lines .",
    "the algebraic expression for the tree - level scattering amplitude in terms of feynman diagrams is itself a tree .",
    "the much slower growth of the set of 1pows compared to the set of feynman diagrams shows that this representation is extremely redundant . in this case , _ directed acyclical graphs _ ( dags ) provide a more efficient representation , as illustrated by a trivial example    vardef dag_coords = pair node [ ] [ ] ; node[1][1 ] = ( .5w,.h ) ; node[2][1 ] = ( .3w,2/3h ) ; node[2][2 ] = ( .7w,2/3h ) ; node[3][1 ] = ( .2w,1/3h ) ; node[3][2 ] = ( .4w,1/3h ) ; node[3][3 ] = ( .6w,1/3h ) ; node[3][4 ] = ( .8w,1/3h ) ; node[4][1 ] = ( .5w,0/3h ) ; node[4][2 ] = ( .7w,0/3h ) ; enddef ; vardef dag_common = dag_coords ; pickup pencircle scaled 1pt ; label.rt ( btex @xmath13 etex , node[1][1 ] ) ; draw node[1][1]node[2][2 ] ; label.rt ( btex @xmath14 etex , node[2][2 ] ) ; draw node[2][2]node[3][3 ] ; draw node[2][2]node[3][4 ] ; label.rt ( btex @xmath13 etex , node[3][3 ] ) ; draw node[3][3]node[4][1 ] ; draw node[3][3]node[4][2 ] ; label.rt ( btex @xmath15 etex , node[3][4 ] ) ; label.rt ( btex @xmath16 etex , node[4][1 ] ) ; label.rt ( btex @xmath17 etex , node[4][2 ] ) ; pickup pencircle scaled 3pt ; pickup pencircle scaled 3pt ; drawdot node[1][1 ] ; drawdot node[2][2 ] ; drawdot node[3][3 ] ; enddef ;    ( 38,16 ) dag_common ; pickup pencircle scaled 1pt ; draw node[1][1](-1,-1) .. (1,-1)node[3][3 ] ;    ( 38,16 ) dag_common ; pickup pencircle scaled 1pt ; label.rt ( btex @xmath13 etex , node[2][1 ] ) ; draw node[1][1]node[2][1 ] ; draw node[2][1]node[3][1 ] ; draw node[2][1]node[3][2 ] ; label.rt ( btex @xmath16 etex , node[3][1 ] ) ; label.rt ( btex @xmath17 etex , node[3][2 ] ) ; pickup pencircle scaled 3pt ; drawdot node[2][1 ] ;    @xmath18    where one multiplication is saved .",
    "the replacement of expression trees by equivalent dags is part of the repertoire of optimizing compilers , known as _",
    "common subexpression elimination_. unfortunately , this approach fails for typical expressions appearing in quantum field theory , because of the combinatorial growth of space and time required to find an almost optimal factorization .    however , the recursive definition in eq .",
    "( [ eq : recursive-1pow ] ) allows to construct the dag of the 1pows in eq .",
    "( [ eq : keystones ] ) _ directly _",
    "@xcite , without having to construct and factorize the feynman diagrams explicitely .",
    "as mentioned above , there is more than one consistent prescription for constructing the set of keystones  @xcite .",
    "the symbolic expressions constructed by omega contain the symbolic equivalents of the numerical expressions computed by  @xcite ( maximally symmetric keystones ) and  @xcite ( maximally asymmetric keystones ) as special cases .",
    "by virtue of their recursive construction in eqs .",
    "( [ eq : recursive-1pow ] ) , tree - level 1pows form a dag and the problem is to find the smallest dag that corresponds to a given tree , ( i.e.  an given sum of feynman diagrams ) .",
    "omega s algorithm proceeds in four steps    starting from the external particles , build the tower of _ all _ 1pows up to a given height ( the height is less than the number of external lines for asymmetrical keystones and less than half of that for symmetrical keystones ) and translate it to the equivalent dag  @xmath19 .    from @xmath19 ,",
    "determine _ all _ possible _ flavored keystones _ for the process under consideration and the 1pows appearing in them .",
    "construct a sub - dag @xmath20 consisting _ only _ of nodes that contribute to the 1pows appearing in the flavored keystones .",
    "multiply the 1pows as specified by the keystones and sum the keystones .    by construction",
    ", the resulting expression contains _ no _ more redundancies and can be translated to a numerical expression . in general ,",
    "asymmetrical keystones create an expression that is smaller by a few percent than the result from symmetrical keystones , but it is not yet clear which approach produces the numerically more robust results .",
    "the omega compiler is implemented in ocaml  @xcite , a functional programming language of the ml family with a very efficient , portable and freely available implementation , that can be bootstrapped on all modern computers in a few minutes .",
    "the powerful module system of ocaml allows an efficient and concise implementation of the dags for a specific physics model as a functor application  @xcite .",
    "this functor maps from the category of trees to the category of dags and is applied to the set of trees defined by the feynman rules of any model under consideration .",
    "the implementation is concise and efficient simultaneously by exploiting the virtues of persistent data structures  @xcite . typically , the resources consumed by omega are only a small fraction of the resources required by the compiler for the target language .",
    "module dependencies in omega .",
    "the diamond shaped nodes denote abstract signatures defining functor domains and co - domains .",
    "the rectangular boxes denote modules and functors , while oval boxes stand for example applications . ]",
    "the module system of ocaml has been used to make the combinatorial core of omega demonstrably independent from the specifics of both the physics model and the target language  @xcite , as shown in figure  [ fig : modules ] .",
    "a fortran90/95 backend has been realized first , backends for c++ and java will follow .",
    "the complete electroweak standard model has been implemented ( the treatment of interfering color amplitudes is still incomplete ) .",
    "majorana fermions , required by supersymmetric field theories , are available ( using  @xcite ) and the mssm is in preparation .",
    "as mentioned above , the compilers for the target programming language are the slowest step in the generation of executable code . on the other hand ,",
    "the execution speed of the code is limited by non - trivial vertex evaluations for vectors and spinors , which need @xmath21 complex multiplications .",
    "therefore , an _",
    "omega virtual machine _ can challenge native code and avoid compilations .",
    "the code generated by the fortran90/95 backend is the most efficient code available for polarized scattering amplitudes for many particles .",
    "the results have been compared with madgraph  @xcite for many standard model processes and numerical agreement at the level of  @xmath22 has been found with double precision floating point arithmetic .",
    "omega generated amplitudes are used in the omnipurpose event generator generator whizard  @xcite .",
    "the first complete experimental study of vector boson scattering in six fermion production for linear collider physics  @xcite has been facilitated by omega and whizard .",
    "i thank my collaborators mauro moretti and jrgen reuter .",
    "i thank wolfgang kilian for valuable suggestions and for `` early adoption '' of omega .",
    "this research is supported by the german bundesministerium fr bildung und forschung ( 05ht9rda ) and deutsche forschungsgemeinschaft ( ma 676/6 - 1 ) .",
    "10 m. moretti , t. ohl , and j. reuter , ( to be published ) , http://heplix.ikp.physik.tu - darmstadt.de/~ohl / omega/. f. caravaglios and m. moretti , z. phys .",
    "* c74 * ( 1997 ) 291 .",
    "a. kanaki and c. papadopoulos , demo - hep-2000/01 , hep - ph/0002082 , february 2000 .",
    "h. murayama , i. watanabe , and k. hagiwara , kek report 91 - 11 , january 1992 .",
    "xavier leroy , _ the objective caml system , release 3.0 , documentation and user s guide _ , technical report , inria , 2000 ( http://caml.inria.fr/ocaml/ ) .",
    "chris okasaki , _ purely functional data structures _ , cambridge university press , 1998 .",
    "t. stelzer and w.f .",
    "long , comput .",
    "* 81 * ( 1994 ) 357 .",
    "a. denner , h. eck , o. hahn , and j. kblbeck , phys .",
    "b291 * ( 1992 ) 278 ; nucl . phys .",
    "* b387 * ( 1992 ) 467 .",
    "w. kilian , ( to be published ) , http://www - ttp.physik.uni - karlsruhe.de/~kilian / whizard/. r. chierici and s. rosati , ( to be published ) ."
  ],
  "abstract_text": [
    "<S> i sketch the architecture of _ omega _ , a new optimizing compiler for tree amplitudes in quantum field theory . </S>",
    "<S> omega generates the most efficient code currently available for scattering amplitudes for many polarized particles in the standard model . </S>",
    "<S> a complete infrastructure for physics beyond the standard model is provided .     </S>",
    "<S> + title : omega : an optimizing matrix element generator author : thorsten ohl ( tu darmstadt ) comments : 8 pages , latex , to appear in the proceedings of the seventh international workshop on advanced computing and analysis technics in physics research , acat 2000 , fermilab , october 16 - 20 , 2000 . </S>",
    "<S> report - no : ikda 2000/30 + i sketch the architecture of omega , a new optimizing compiler for tree amplitudes in quantum field theory . </S>",
    "<S> omega generates the most efficient code currently available for scattering amplitudes for many polarized particles in the standard model . </S>",
    "<S> a complete infrastructure for physics beyond the standard model is provided . </S>",
    "<S> +    pics </S>"
  ]
}
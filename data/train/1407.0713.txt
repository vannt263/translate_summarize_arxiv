{
  "article_text": [
    "the increasing popularity of applications such as video streaming in today s mobile devices introduces higher demand for throughput , and puts a strain especially on cellular links .",
    "in fact , cellular traffic is growing exponentially and it is expected to remain so for the foreseeable future @xcite , @xcite .",
    "cooperation among mobile devices is a promising approach to meet the increasing throughput demand over cellular links . in particular ,",
    "when mobile devices are in the close proximity of each other and are interested in the same content , device - to - device connections such as wifi or bluetooth can be opportunistically used to construct a cooperative system @xcite , @xcite .",
    "indeed , this scenario is getting increasing interest @xcite .",
    "_ e.g. , _ a group of friends may be interested in watching the same video on youtube , or a number of students may participate in an online education class @xcite .",
    "more details about the practicality of this scenario is provided in @xcite . to better illustrate this setup , we provide the following example .    [ ex1 ] let us consider fig .",
    "[ fig : intro_example ] , where mobile device users in close proximity are interested in the same video content .",
    "[ fig : intro_example](a ) shows no - cooperation where each mobile device uses only its cellular link to stream video .",
    "for example , if the cellular link rates are 100kbps , each user s streaming rate will be 100kbps .",
    "[ fig : intro_example](b ) shows cooperation , where each mobile device uses cellular and local area links simultaneously ( these links operate simultaneously thanks to using different parts of the spectrum ) to stream video .",
    "each user downloads 100kbps of video through their cellular connection , and 200kbps from their neighbors .",
    "thus , the streaming rate increases to 300kbps from 100kbps , which is a significant improvement @xcite , @xcite . one important problem , and is the focus of this paper , is the design of a stochastic control algorithm that is efficient in practice in terms of overhead and delay .",
    "@xmath0    [ fig : intro_example ]    traditional network control algorithms such as backpressure @xcite , @xcite , @xcite make control decisions such as routing and scheduling ( and cooperation decision in our problem setup ) in a `` source - centric '' manner . in our problem , this corresponds to the case that the servers in the cloud make decisions about ( i ) the number of video packets that should be pushed to each mobile device , and ( ii ) the amount of cooperation among mobile devices ; _ i.e. , _ the number of packets that each mobile device should transmit to other mobile devices in its neighborhood . in order to make these decisions ,",
    "video servers should keep track of the states of the mobile devices , which includes queue sizes in mobile devices as well as cellular link qualities towards each mobile device .",
    "this puts significant amount of overhead over the cellular links .",
    "furthermore , when there is congestion over the cellular links , the state information , _",
    "i.e. , _ control packets can be delayed significantly , and the video servers may not make timely decisions such as reducing or increasing the rates towards each mobile device .",
    "this increases end - to - end delay , which may not fulfill quality of service ( qos ) requirements of video streaming applications .    in this paper",
    ", we develop a device - centric cooperation scheme to determine the number of video packets each mobile device should receive via cellular links as well as from its neighbors .",
    "our approach is grounded on a network utility maximization ( num ) formulation of the problem and its solution @xcite .",
    "the solution decomposes into several parts with an intuitive interpretation , such as flow control , scheduling over cellular links , and cooperation and scheduling over local area links .",
    "based on the structure of the decomposed solution , we develop a stochastic algorithm ; device - centric cooperation ; dcc .",
    "the following are the key contributions of this work :    * we consider a scenario where a group of cooperative mobile devices , exploiting both cellular and local area links , are within proximity of each other , and are interested in the same content .",
    "we propose a novel `` device - centric cooperation '' scheme for this scenario . *",
    "we develop network utility maximization ( num ) formulation of the device - centric problem , and provide its decomposed solution . based on the structure of the decomposed solution",
    ", we develop a stochastic device - centric algorithm ; dcc .",
    "we show that dcc moves the functionality required for cooperation to mobile devices without loss of optimality . *",
    "we evaluate our scheme via simulations for multiple mobile devices .",
    "the simulation results confirm that dcc reduces ; ( i ) overhead ; _ i.e. , _ the number of control packets that should be transmitted over cellular links , and ( ii ) the amount of delay that each packet experiences .",
    "the structure of the rest of the paper is as follows .",
    "section  [ sec : system ] gives an overview of the system model .",
    "section  [ sec : num ] presents the num formulation of our device - centric scheme .",
    "section  [ sec : dcc ] presents the stochastic device - centric cooperation algorithm ; dcc .",
    "section  [ sec : dcc_vs_scc ] evaluates dcc .",
    "section  [ sec : related ] presents related work .",
    "section  [ sec : conclusion ] concludes the paper .",
    "in this section , we provide an overview of the device- and source - centric cooperation models demonstrated in fig .  [",
    "fig : forward_backward - system ] .",
    "first , we provide a cooperative system setup that are common to both device- and source - centric models .",
    "_ setup : _ we consider a cooperative system shown in fig .  [ fig : forward_backward - system](a ) , where each mobile device is able to connect to the internet via cellular links , and forward packets to other mobile devices through the local links , _",
    "e.g. , _ bluetooth or wifi .",
    "the cooperative system consist of @xmath1 mobile devices and a source node .",
    "note that the source node represents video servers , proxies , and base stations .",
    "this representation allows us to focus on the bottlenecks of the system , namely cellular links from the base station to the mobile devices and the local area links @xcite .",
    "@xmath2 is the set of the mobile devices , where @xmath3 .",
    "the mobile devices are interested in the same content and they construct a cooperating group .",
    "we consider that time is slotted and @xmath4 refers to the beginning of slot @xmath4 .",
    "[ fig : forward_backward - system ]    _ cellular links : _ each mobile device @xmath5 is connected to the internet via its cellular link . at slot @xmath4 , @xmath6 is the channel state vector of the cellular links , where @xmath7 .",
    "we assume that @xmath8 is the state of the cellular links to mobile node @xmath9 .",
    "we consider that cellular links towards different mobile devices are interference free as interference could be handled by base stations .",
    "let @xmath10 denote the set of the link transmission rates feasible at time slot @xmath4 for channel state @xmath6 . _",
    "local area links : _ in our setup , we consider that mobile devices are in close proximity and they hear each other . therefore ,",
    "in the local area , each mobile device can connect to another device directly .",
    "this gives us a fully connected topology .",
    "depending on the underlying technology , local area transmissions can be unicast ( _ e.g. , _ bluetooth , or wifi ) or broadcast ( can be achieved by extending wifi @xcite ) . in our formulations , we consider both unicast and broadcast transmissions in the local area .",
    "we consider protocol model in our formulations @xcite , where each mobile device can either transmit or receive at the same time .",
    "since our local area network is fully connected , only one mobile device can transmit in a slot .    at slot @xmath4",
    ", @xmath11 is the channel state vector of the local area links , where @xmath12 .",
    "we assume that @xmath13 is the state of the wireless link between node @xmath9 and @xmath14 .",
    "let @xmath15 denote the set of the link transmission rates feasible at time slot @xmath4 for channel state @xmath11 for unicast transmission .",
    "similarly , @xmath16 denote the set of the link transmission rates feasible at time slot @xmath4 for channel state @xmath11 for broadcast transmission .      the source - centric cooperation model is shown in fig .",
    "[ fig : forward_backward - system](b ) , where the source node transmits a video flow to a set of mobile devices @xmath2 .",
    "the flow generation rate at the source for mobile device @xmath9 is @xmath17 , @xmath5 .",
    "@xmath17 is i.i.d . over the slots and their expected values ; @xmath18 $ ] , @xmath19 $ ] are finite .",
    "note that even if all mobile devices are interested in the same content , they may receive the content at different rates . in video streaming applications",
    ", this corresponds to different levels of video quality .",
    "flow rate @xmath20 is associated with a utility function @xmath21 , which we assume to be strictly concave function of @xmath20 .",
    "flow rate over the cellular link towards node @xmath9 is @xmath22 , where @xmath23 is the rate towards node @xmath9 to help node @xmath9 , while @xmath24 , @xmath25 is the rate towards node @xmath9 to help node @xmath14 .",
    "the flow rate over the cellular link is maximum of the rates , _",
    "i.e. , _ @xmath22 as all mobile devices are interested in the same content",
    ". note that @xmath23 is the rate over the cellular link towards node @xmath9 , while @xmath20 is the flow generation rate for device @xmath9 .",
    "flow rate over the local area link from node @xmath9 to node @xmath14 is @xmath26 , @xmath25 .",
    "note that @xmath26 is to help node @xmath14 using node @xmath9 as a relay .    in the source - centric model , at time",
    "slot @xmath4 , queue @xmath27 is constructed at the source , and it queues packets that will be transmitted to node @xmath9 , and changes according to following dynamics at every time slot @xmath4 . @xmath28 + { x}_{k}(t)\\end{aligned}\\ ] ] at time slot @xmath4 , queue @xmath29 is the queue size at mobile device @xmath14 , and it queues the packets that should be transmitted to node @xmath9 .",
    "@xmath29 changes according to following dynamics at every time slot @xmath4 . @xmath30 + { x}_{n , k}(t)\\end{aligned}\\ ] ]      in the device - centric model shown in fig .",
    "[ fig : forward_backward - system](c ) , a virtual source is added to the system and the real source becomes a virtual sink .",
    "node @xmath9 receives packets with rate @xmath31 from the virtual source and forwards these packets to the virtual sink and other mobile devices .",
    "the transmission rate over the cellular link from node @xmath9 to the virtual sink is @xmath32 .",
    "the transmission rate from node @xmath9 to @xmath14 is @xmath33 .",
    "note that the flow rates ; @xmath31 , @xmath34 , @xmath33 are virtual flow rates . in our device - centric scheme ,",
    "these virtual flow rates are used to determine the real flow values ; @xmath20 , @xmath24 , @xmath26 as explained in section  [ sec : dcc ] .    in the device - centric model , at time slot @xmath4 , queue @xmath35 is a virtual queue size constructed at node @xmath9 .",
    "@xmath35 changes according to following dynamics at every time slot @xmath4 .",
    "@xmath36 + \\nonumber \\\\ & { y}_{k}(t)\\end{aligned}\\ ] ] at time slot @xmath4 , queue @xmath37 is a virtual queue size constructed at node @xmath14 .",
    "@xmath37 changes according to following dynamics at every time slot @xmath4 . @xmath38 + { g}_{k , n}^{k}(t)\\end{aligned}\\ ] ] in addition to the virtual queues @xmath35 and @xmath37 , a real queue @xmath39 is constructed at node @xmath14 and evolves according to the following dynamics at every time slot @xmath4 . @xmath40",
    "+ { x}_{n , k}(t)\\end{aligned}\\ ] ] note that @xmath41 is the amount of the real outgoing traffic from node @xmath14 to @xmath9 ( _ i.e. , _ from queue @xmath42 ) , and @xmath43 is the amount of the real incoming traffic to node @xmath14 from the source ( _ i.e. , _ to the queue @xmath42 ) .",
    "the relationship between the real and virtual queues as well as real and virtual flows are provided in section  [ sec : dcc ] .",
    "in this section , we formulate the device - centric network utility maximization ( num ) framework .",
    "this approach sheds light into the structure of the our stochastic algorithm dcc , which we present in the next section .. by abuse of notation , we use a variable , _",
    "e.g. , _ @xmath44 as the average value of @xmath45 in our num formulation if both @xmath44 and @xmath45 refers to the same parameter . ]",
    "we provide num formulations for ( i ) unicast and ( ii ) broadcast transmissions in the local area . for unicast setup ,",
    "the num formulation is p - unicast : @xmath46 the objective of p - unicast is to determine @xmath47 @xmath48 , @xmath49 @xmath50 which maximize the total utility function ; @xmath51 .",
    "the first constraint is the flow conservation constraint at node @xmath9 ; @xmath52 is the incoming traffic rate from virtual source to node @xmath9 , and @xmath53 is the outgoing traffic rate from node @xmath9 to the virtual sink and the neighbors .",
    "the second constraint is the flow conservation constraint at node @xmath14 for node @xmath9 s flow ; @xmath54 is the incoming flow rate to node @xmath14 from node @xmath9 , and @xmath55 is the flow rate from node @xmath14 towards virtual sink .",
    "the last two constraints are the capacity constraints over cellular and local links .    for broadcast setup ,",
    "the num formulation is p - broadcast .",
    "the objective function and the first three constraints of p - broadcast is the same as p - unicast in eq .",
    "( [ opt : eq1 ] ) . the rest of the constraints of p - broadcast : @xmath56 the first constraint in eq .",
    "( [ opt : eq2 ] ) relates the broadcast transmission rate to the link rate .",
    "let @xmath57 be a set of nodes , and @xmath58 be the set of node combinations , _",
    "i.e. , _ @xmath59 .",
    "if packets are broadcast from node @xmath14 to node set @xmath57 , each node @xmath60 can receive the packets ( depending on the loss probability ) . in the device - centric system",
    ", this corresponds to simultaneous transmission from nodes in @xmath57 to node @xmath9 .",
    "@xmath61 is the broadcast rate in the source - centric system .",
    "since there may be different @xmath57 sets which contain node @xmath9 , @xmath61 is summed @xmath62 to determine @xmath54 . the second constraint in eq .",
    "( [ opt : eq2 ] ) is the broadcast capacity constraint .",
    "lagrangian relaxation of the first two constraints of both eq .",
    "( [ opt : eq1 ] ) and eq .",
    "( [ opt : eq2 ] ) gives the following lagrange function : @xmath63 where @xmath64 and @xmath65 are the lagrange multipliers .",
    "note that @xmath64 and @xmath65 represent the virtual queue sizes defined by eqs .",
    "( [ eq : lambda_queue_evolution]),([eq : eta_queue_evolution ] ) .",
    "the values of @xmath64 and @xmath65 are tracked at nodes @xmath9 and @xmath14 , respectively .",
    "note that these values are virtual values , and a counter is sufficient to keep track of these values .",
    "( [ relax : eq1 ] ) can be decomposed into several intuitive sub - problems such as rate control , and scheduling .",
    "first , we solve the lagrangian function with respect to @xmath52 : @xmath66 where @xmath67 is the inverse of the derivative of @xmath68 . since @xmath68 is strictly concave function of @xmath52",
    ", @xmath52 is inversely proportional to @xmath64 .",
    "this means that when the queue size @xmath64 increases , @xmath52 should reduce . in the system implementation ,",
    "node @xmath9 requests @xmath52 packets from the real source ( _ e.g. , _ video server ) .",
    "second , we solve the lagrangian for @xmath69 and @xmath55 : @xmath70   \\nonumber \\\\ \\mbox{s.t . }",
    "\\mbox { }   & \\{\\max_{n \\in { \\mathcal{n } } } \\{g_{k , s}^{n}\\}\\}_{\\forall k \\in { \\mathcal{n } } } \\in \\gamma_{c^c } , \\mbox { } \\end{aligned}\\ ] ] after @xmath71 and @xmath72 are determined , node @xmath9 requests @xmath73 packets from the source through its cellular link .",
    "note that @xmath71 and @xmath72 are different from @xmath52 as @xmath52 is the total flow rate requested by node @xmath9 and this rate can be transmitted through both its cellular link or from the neighboring nodes , while @xmath71 and @xmath72 are the rates over cellular links .",
    "finally , we solve the lagrangian with respect to @xmath54 .",
    "note that the solutions in eq .",
    "( [ eq : sol_1 ] ) and eq .",
    "( [ eq : sol_3 ] ) holds for both p - unicast and p - broadcast .",
    "however , the solutions of p - unicast and p - broadcast with respect to @xmath54 differ as explained next .",
    "the solution of p - unicast with respect to @xmath54 is : @xmath74 subject to the last two constraints of eq .",
    "( [ opt : eq1 ] ) . the solution of p - broadcast with respect to @xmath54 is : @xmath75 subject to all the constraints in eq .",
    "( [ opt : eq2 ] ) .",
    "next , we design our stochastic algorithm ; device - centric cooperation ( dcc ) based on the structure of the decomposed num solutions , _",
    "i.e. , _ eq .",
    "( [ eq : sol_1]),([eq : sol_3 ] ) as well as the local area scheduling solution presented above .",
    "now , we provide our device - centric cooperation ( dcc ) algorithm which includes _ rate control _ , _ cellular link scheduler _ and _ cooperation & local area link scheduler_. note that both unicast and broadcast setups have the same rate control and cellular link scheduling parts .",
    "the only different part is the cooperation & local area link scheduling as explained later .    * _ rate control : _ at every time slot @xmath4 , the rate controller at node @xmath9 determines the number of packets that should be requested from the source according to ; @xmath76 \\nonumber \\\\ \\mbox{s.t . } &   { y}_k(t ) \\leq r_{k}^{max}\\end{aligned}\\ ] ] where @xmath77 is be a positive constant larger than the cellular rate from the actual source , and @xmath78 is a large positive constant .",
    "the values of @xmath77 and @xmath78 are important for the stability of the dcc algorithm @xcite .",
    "@xmath79 is the number of packets that will be requested from the source . *",
    "_ cellular link scheduler : _ at every time slot @xmath4 , the cellular link scheduler at node @xmath9 determines the number of packets requested through the cellular links .",
    "@xmath80 after @xmath81 and @xmath82 are determined , the real flow rates are determined as @xmath83 and @xmath84 , where @xmath85 can be chosen to be arbitrarily small , and @xmath22 amount of video packets are requested from the source by node @xmath9 . * _ cooperation & local - area link scheduler for unicast : _ at time slot @xmath4 , the link rate @xmath86 is determined by ; @xmath87   { g}_{k , n}^{k}(t )    \\nonumber \\\\ \\mbox{s.t . } \\mbox { }   & \\{{g}_{k , n}^{k}(t)\\}_{\\forall k \\in { \\mathcal{n } } , n \\in { \\mathcal{n}}-\\{k\\ } } \\in \\gamma_{\\boldsymbol c_{u}^{w}(t)}.\\end{aligned}\\ ] ] after @xmath86 is determined , @xmath88 amount of video packets is requested from node @xmath14 by node @xmath9 . * _ cooperation & local - area link scheduler for broadcast : _ at time slot @xmath4 , the link broadcast rate is determined by ; @xmath89 { f}_{n , j}(t )    \\nonumber \\\\ \\mbox{s.t . }",
    "\\mbox { }   & \\{{f}_{n,{\\mathcal{j}}}(t)\\}_{\\forall n \\in { \\mathcal{n } } , { \\mathcal{j}}\\in { \\mathcal{h}}| k \\notin { \\mathcal{j } } } \\in \\gamma_{\\boldsymbol c_{b}^{w}(t)}\\end{aligned}\\ ] ] after @xmath90 is determined , @xmath90 amount of video packets are transmitted from node @xmath14 to nodes in @xmath57 .",
    "the optimum value of @xmath86 is @xmath91 , @xmath92 .",
    "therefore , the real transmission rate of over each link is equal to @xmath93 , @xmath92 .",
    "[ eec_theorem1 ] if channel states are i.i.d . over time slots , and the arrival rates @xmath94 = a_k , \\forall k \\in { \\mathcal{n}}$ ] are interior of the stability region of cellular and local area links , then dcc stabilizes the network and the total average queue sizes , including both virtual and real queues , are bounded for both unicast and broadcast setups .    _",
    "proof : _ the proof is provided in @xcite .",
    "@xmath95    [ eec_theorem2 ] if the channel states are i.i.d . over time slots , and the traffic arrival rates",
    "are controlled by the rate control algorithm in eq .",
    "( [ eq : rate_control ] ) , then the admitted flow rates converge to the utility optimal operating point with increasing @xmath78 .    _",
    "proof : _ the proof is provided in @xcite .",
    "in this section , we evaluate our dcc algorithm as compared to source - centric cooperation ( scc ) , and highlight the benefits of dcc over scc .",
    "therefore , we first provide a brief description of scc algorithm in the following .",
    "* _ rate control : _ at every time slot @xmath4 , the source node determines @xmath96 ; @xmath97 \\nonumber \\\\ \\mbox{s.t . } &   { x}_k(t ) \\leq r_{k}^{max}\\end{aligned}\\ ] ] * _ cellular link scheduler : _ at every time slot @xmath4 , the source node determines @xmath98 and @xmath43 ; @xmath99 * _ cooperation & local - area link scheduler for unicast : _ at time slot @xmath4 , node @xmath14 determines the link rate @xmath41 ; @xmath100 * _ cooperation & local - area link scheduler for broadcast : _ at time slot @xmath4 , node @xmath14 determines the broadcast rate ; @xmath101 where @xmath102 .      in this section",
    ", we explain the benefits of dcc over scc in terms of overhead , delay , and practical deployment .",
    "_ overhead : _",
    "scc determines @xmath96 , @xmath98 , and @xmath43 at the source node according to eqs .",
    "( [ eq : sccrate_control ] ) , and ( [ eq : scccellular_scheduling ] ) . therefore , the source node should know the queue sizes ; @xmath103 , @xmath104 , and cellular downlink properties @xmath105 .",
    "although @xmath103 is constructed at the source node , @xmath104 is constructed at mobile devices , and the cellular downlink properties @xmath105 are usually measured by mobile devices . therefore , @xmath104 and @xmath105 should be carried to the source node from each mobile device over a cellular uplink .",
    "these control messages introduce @xmath106 overhead over each cellular uplink .    on the other hand , in dcc , mobile devices construct all the real and virtual queues and make all decisions .",
    "_ e.g. , _ mobile device @xmath9 determines and requests @xmath17 and @xmath22 amount of video packets from the source .",
    "these request messages introduce @xmath107 overhead over each cellular uplink .",
    "thus , dcc reduces the overhead from @xmath106 to @xmath107 , which is significant considering the fact that cellular link capacities are limited as the demand for cellular links is already high and keeps increasing @xcite , @xcite . furthermore , since dcc introduces constant overhead over the cellular links , it provides scalability .",
    "_ delay : _ dcc improves packet delay over scc thanks to employing virtual queues . indeed ,",
    "although the virtual queue sizes could be large in dcc , the real queue sizes could be significantly small as compared to the real queue sizes in scc .",
    "furthermore , the loss of control packets carrying queue size and cellular link quality information over cellular links increases real queue sizes in scc . on the other hand",
    ", dcc makes all the decisions using local information in the mobile devices , so control packets are not carried over cellular links ( only packet request messages are carried over the cellular links in dcc ) , so the loss of control packets does not affect dcc as much as scc .",
    "the simulation results provided in the next section demonstrate the benefit of dcc in terms of delay as compared to scc .",
    "_ practical deployment : _ with the introduction of dynamic adaptive streaming over http ( dash ) or mpeg - dash @xcite , there is an increasing interest to client - based video streaming applications , _",
    "e.g. , _ netflix uses dash @xcite . according to dash , the clients request video chunks at different rates using their connection level measurements . our device - centric approach , since it operates at the client side , could be easily engaged with dash to develop cooperative video streaming applications .",
    "note that this could not be possible in scc as it requires the video servers to be involved in the decision of which video chunks should be transmitted to the clients .",
    "we believe that our approach could be used to extend dash for cooperative video streaming in mobile devices .      in this section",
    ", we demonstrate the benefits of dcc over scc in terms of overhead and delay through simulations .",
    "we consider a cooperative video streaming system and topology shown in fig .",
    "[ fig : forward_backward - system ] for different number of users .    fig .",
    "[ fig : sims_dcc_scc_rate ] presents the average rate per mobile device versus number of users for dcc and scc . in this setup , the cellular and local area link rates are the same and 1 unit , and there is no loss over the links .",
    "as seen , in both dcc and scc , broadcast improves over unicast as local area resources are used more efficiently .",
    "more importantly , dcc and scc achieve the same rates for both unicast and broadcast , which is expected from theorem  [ eec_theorem2 ] .",
    "note that we do not take into account the effect of overhead in this simulation , _",
    "i.e. , _ the length of control packets are zero bytes .    [",
    "fig : sims_queuesizes ]    let us now consider overhead .",
    "we consider that queue size and channel state information are carried using 4 bytes from the mobile devices to the video servers in scc , and the video rate request messages are carried from the mobile devices to the video servers using 4 bytes in dcc .",
    "the percentage of the overhead as compared to packet size , which we assume to be 1000 bytes is presented in fig .",
    "[ fig : sims_dcc_scc_rate](c ) .",
    "the overhead of scc is increasing with the increasing number of users , while the overhead does not change with the increasing number of users for dcc .",
    "for example , the overhead is almost 20% when the number of mobile devices is 50 .",
    "this means that 20% of the cellular link capacities should be allocated to carry the control messages in scc . on the other hand ,",
    "the overhead of dcc is small for any number of mobile devices .",
    "[ fig : sims_queuesizes ] presents queue size vs time for dcc and scc . in this setup ,",
    "both cellular and local area link rates are 1 units , and there is no loss over the links . as seen , the real queue sizes of scc ; _ i.e. , _",
    "@xmath27 and @xmath108 , could be very large , up to 75 packets . on the other hand",
    ", although virtual queue sizes could be also large in dcc , the real queue sizes ; @xmath39 is very low .",
    "thus , our scheme reduces queueing delay . fig .",
    "[ fig : sims_ratevscellularloss ] presents transmission rate towards each user versus the loss probability over the cellular links . in this setup , both cellular and local area link rates are 1 units , and there is loss only over the cellular links , _",
    "i.e. , _ there is no loss over the local - area links",
    ". as expected , in both dcc and scc , flow rates decrease with increasing loss probability .",
    "however , dcc improves over scc when the loss rate increases , because control packets are lost over the cellular links at high loss rates , and the source can not make correct decisions in scc .",
    "[ fig : sims_avgqueuesizevscellularloss ] shows the average queue size versus the loss probability for the same setup . in particular ,",
    "queue sizes are averaged over time and per - node queues .",
    "for example , @xmath109 is the average queue size of @xmath110 , @xmath111 , and @xmath112 which are time averages of @xmath113 , @xmath114 , and @xmath115 , respectively . as seen",
    ", although the virtual queue sizes increase in dcc with the increasing loss probability , the real queue size @xmath116 is very small and does not really increase with the increasing loss probability . on the other hand , the queue sizes in scc , which are already very high as compared to dcc , increase significantly with increasing loss rate , which introduces significant delay .",
    "[ fig : sims_ratevscellularloss ]    [ fig : sims_avgqueuesizevscellularloss ]",
    "this work combines ideas from cooperation , network utility maximization , and stochastic network control .",
    "when several users are interested in the same content , cooperative streaming is promising to improve throughput .",
    "for instance , @xcite , @xcite , @xcite consider a scenario in which device - to - device and cellular connections are used to disseminate the content , considering the social ties and geographical proximity for cooperation .",
    "cooperation between mobile devices for content dissemination taking into account social ties , has been studied extensively @xcite .",
    "cooperative video streaming systems are implemented over mobile devices in @xcite . as compared previous work ,",
    "the goal of this paper is to design device - centric cooperation scheme .",
    "the num framework is promising to understand how different layers and/or algorithms , such as flow control , congestion control , and routing should be designed and optimized @xcite , @xcite .",
    "we follow a similar approach , but we formulate the num framework considering the specific requirements such as device - centric design of the cooperative mobile devices .    the traditional source - centric , and backpressure - based stochastic network control algorithms have emerged from the pioneering work in @xcite , @xcite , which showed that in wireless networks where nodes route packets and make scheduling decisions based on queue backlog differences , one can stabilize queues for any feasible traffic . it has also been shown that backpressure can be combined with flow control to provide utility - optimal operation guarantee @xcite .",
    "recently , receiver - based flow control scheme is developed for overloaded networks @xcite . as compared to previous work ,",
    "our scheme is designed for cooperative mobile devices , and it creates virtual flows and queues to move control functionality to mobile devices , and reduces the overhead over cellular links and delay , which was not the focus of the previous work .",
    "in this paper , we considered a cooperation scenario among mobile devices for video streaming .",
    "we developed a device - centric cooperation scheme ; dcc .",
    "we showed that dcc reduces ; ( i ) overhead ; _ i.e. , _ the number of control packets that should be transmitted over cellular links , and ( ii ) the amount of delay that each packet experiences .",
    "simulations demonstrate significant improvement in terms of overhead and delay .",
    "b.  han , p.  hui , v.  a.  kumar , m.  v.  marathe , g.  pei , a.  srinivasan , `` cellular traffic offloading through opportunistic communications : a case study , '' _ in proc . of acm workshop on challenged networks ( chants )",
    "_ , chicago , il , sept . 2010 .",
    "j.  whitbeck , m.  amorim , y.  lopez , j.  leguay , v.  conan , `` relieving the wireless infrastructure : when opportunistic networks meet guaranteed delays , '' _ in proc . of ieee wowmom _ ,",
    "lucca , italy , june 2011 .",
    "l. tassiulas , a. ephremides , `` stability properties of constrained queueing systems and scheduling policies for maximum throughput in mul- tihop radio networks , '' _ in ieee trans . on automatic control _ , vol .",
    "37(12 ) , dec . 1992 ."
  ],
  "abstract_text": [
    "<S> the increasing popularity of applications such as video streaming in today s mobile devices introduces higher demand for throughput , and puts a strain especially on cellular links . cooperation among mobile devices by exploiting both cellular and local area connections is a promising approach to meet the increasing demand . in this paper </S>",
    "<S> , we consider that a group of cooperative mobile devices , exploiting both cellular and local area links and within proximity of each other , are interested in the same video content . </S>",
    "<S> traditional network control algorithms introduce high overhead and delay in this setup as the network control and cooperation decisions are made in a source - centric manner . </S>",
    "<S> instead , we develop a device - centric stochastic cooperation scheme . our device - centric scheme ; dcc allows mobile devices to make control decisions such as flow control , scheduling , and cooperation without loss of optimality . </S>",
    "<S> thanks to being device - centric , dcc reduces ; ( i ) overhead ; _ i.e. , _ the number of control packets that should be transmitted over cellular links , so cellular links are used more efficiently , and ( ii ) the amount of delay that each packet experiences , which improves quality of service . </S>",
    "<S> the simulation results demonstrate the benefits of dcc . </S>"
  ]
}
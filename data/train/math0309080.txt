{
  "article_text": [
    "discrete green s functions are the inverses or pseudo - inverses of combinatorial laplacians , which govern diffusion - like problems on graphs such as random walks , electric potential and chip - firing games or other balancing games . just as green s functions in the continuous case depend on the domain and boundary conditions , discrete green s functions are associated with the underlying graph and boundary conditions , if any . just as in the continuous case , a new set of discrete green s functions must be determined for each new class of graphs . certainly , a discrete green s function can be determined by brute force ( pseudo-)inversion of the corresponding laplacian , but this is no advancement toward compact or closed - form functions .    in this paper",
    ", we develop such compact formulas for discrete green s functions on products of simple graphs with or without boundary .",
    "section [ sec : prelim ] presents the necessary definitions and background .",
    "section [ sec : cycle ] illustrates these definitions by deriving the green s function for the cycle . in section",
    "[ sec : productformula ] , we derive formulas for products of regular graphs with or without boundary . in section [ sec : toriformula ] , we illustrate the case of products of regular graphs without boundary by deriving the green s function for the @xmath0-dimensional torus and addressing its computational complexity , with explicit green s functions given for @xmath3 and @xmath4 . finally , the relationship between green s functions and the hitting time of a random walk is explained and illustrated in the case of the 2-torus in section [ sec : hittingtime ]",
    "the basic definitions follow those of @xcite .",
    "let @xmath5 be a simple connected graph .",
    "let @xmath6 be arbitrary vertices .",
    "the _ adjacency matrix _",
    "@xmath7 is defined by @xmath8 . the diagonal _ degree matrix _",
    "@xmath9 is defined by @xmath10 , where @xmath11 is the degree of @xmath12 in @xmath13 .",
    "the _ volume _ of a graph is @xmath14 .",
    "the _ laplacian _ , @xmath15 , of @xmath13 is @xmath16 the _ normalized laplacian _ , @xmath17 , is @xmath18 the _ discrete laplace _",
    "operator @xmath19 is @xmath20 in general , the following relations hold between @xmath21 , @xmath22 , and @xmath19 : @xmath23    for @xmath24 , we define the _ dirichlet _ versions of @xmath25 , @xmath26 , and @xmath27 as the results of deleting the rows and columns corresponding to @xmath28 from @xmath21 , @xmath22 , and @xmath19 , respectively . without loss of generality",
    ", we assume that both @xmath13 and the subgraph generated by @xmath29 to be connected . by abuse of notation , we use @xmath29 to refer to the subgraph generated by @xmath29 in @xmath13 .",
    "additionally , we say that the orthonormal eigensystem of @xmath29 is the orthonormal eigensystem @xmath30 of the real symmetric matrix @xmath26 ; where @xmath31 with @xmath32 when @xmath33 , and @xmath34 with @xmath35 when @xmath36 . in either case , we order the eigenvalues by @xmath37 for all subscripts in range ; basic properties such as @xmath38 for all @xmath39 are summarized in @xcite .",
    "in particular , the orthonormal eigenvectors can be chosen to have real entries .    when @xmath40 , @xmath27 , @xmath25 and @xmath26 are invertible , and the _ green s function _ @xmath41 and _ normalized green s function _ @xmath42 are determined by the relations @xmath43 we can tie these relations to random walks as follows .",
    "let @xmath44 $ ] be the transition probability matrix for the simple irreducible _ transient _ random walk on @xmath29 with absorbing states @xmath28 , where the probability @xmath45 of moving to state @xmath46 from state @xmath12 is @xmath47 if @xmath12 and @xmath46 are adjacent and 0 otherwise .",
    "then @xmath48 , and @xmath49 gives @xmath50 where @xmath51 is the @xmath1-step transition probability matrix ( cf .",
    "@xcite ) . see @xcite for definitions and results on random walks .    on the other hand , when @xmath33 , the sum in ( [ eqn : transientrandomwalkg ] ) does not converge , and we require an alternate definition of the green s function . since @xmath22 is not invertible , its corresponding normalized green s function @xmath42",
    "is defined by @xmath52 this definition of @xmath42 is equivalent to the two relations @xmath53 where @xmath54 is the projection of the orthonormal eigenvector @xmath55 corresponding to eigenvalue 0 .",
    "since @xmath56 , we have @xmath57 , and so @xmath58 .",
    "it is also important to note that when @xmath42 is invertible , the definitions in ( [ eqn : normalizedgmatrixrelation ] ) and ( [ eqn : normalizedgfourier ] ) are equivalent . furthermore , @xmath42 is related to the so - called _ fundamental matrix _",
    "@xmath59 where @xmath60 is the stationary distribution of the random walk on @xmath13 , by the equation @xmath61 ; simply verify that @xmath62 satisfies ( [ eqn : normalizedgfourier ] ) and ( [ eqn : normalizedgpseudoinverserelations ] ) .",
    "see chapter 3 , p.17 of @xcite for relationships between @xmath63 and hitting times .",
    "a more complete exposition on discrete green s functions in the context of spectral graph theory appears in @xcite .",
    "in this section we illustrate the preceding definitions in the case of the cycle , which has no boundary .",
    "the techniques developed here will be used in later sections to construct the green s functions for higher dimensional tori .    by the cycle @xmath64 , we mean the 2-regular connected graph with vertices @xmath65 , where @xmath66 .",
    "the various laplacians are related by @xmath67 . applying the definition in ( [ eqn : normalizedgpseudoinverserelations ] )",
    ", the normalized green s function @xmath42 satisfies @xmath68 where @xmath69 , and @xmath70 is the @xmath71 matrix of 1 s . because the cycle is vertex - transitive , the values @xmath72 and @xmath73 depend only on the distance @xmath74 between @xmath12 and @xmath46 , and the following definition of @xmath75 is well - defined : @xmath76 we are ready to derive the green s function for the cycle .",
    "[ thm : normalizedgcycle ] let @xmath66 .",
    "for  @xmath77 , the cycle @xmath64 has normalized green s function @xmath78    from ( [ eqn : normalizedgcyclepseudoinverserelations ] ) and ( [ eqn : normalizedgcyclepseudoinverserelationsa ] ) , we have the recurrence @xmath79 provided that we define @xmath80 for simplicity of representing the case @xmath81 .",
    "the following recurrence on differences results : @xmath82 the second constraint in ( [ eqn : normalizedgcyclepseudoinverserelations ] ) determines that the sum of @xmath42 across any row must be 0 ; i.e. , @xmath83 we now solve the recurrence on differences , starting with @xmath84 by setting @xmath81 in ( [ eqn : normalizedgcyclediffrecur ] ) .",
    "@xmath85 resolving ( [ eqn : normalizedgcyclediffrecur ] ) with base case given by ( [ eqn : normalizedgcyclediffbasecase ] ) , we have @xmath86    having derived a simple recurrence from the recurrence on differences , we proceed to determine @xmath75 . resolving ( [ eqn : normlizedgcyclerecur ] )",
    "yields @xmath87\\frac{2}{m }      \\nonumber \\\\ & = & \\quad \\vdots \\nonumber \\\\ & = & \\mathcal{g}(0 ) + \\frac{a}{m}-a+\\frac{2}{m }      \\sum_{k=0}^{a-1}k    \\nonumber \\\\ & = & \\mathcal{g}(0 ) - a + \\frac{a^2}{m } \\ .",
    "\\label{eqn : normalizedgcycleag0}\\end{aligned}\\ ] ] now applying the row sum constraint ( [ eqn : normalizedgcyclerowsum ] ) allows us to compute the value of @xmath88 .",
    "@xmath89 plugging ( [ eqn : normalizedgcycleg0 ] ) into ( [ eqn : normalizedgcycleag0 ] ) and letting @xmath90 achieves the desired result .",
    "because ( [ eqn : normalizedgfourier ] ) also gives @xmath42 for @xmath64 , we have a whole class of identities formed by choosing any orthonormal eigenbasis for @xmath64 and equating ( [ eqn : normalizedgfourier ] ) with ( [ eqn : normalizedgcycle ] ) .",
    "we give one such well - known basis now , which arises naturally from the consideration of circulant matrices ( cf .",
    "@xcite ) .",
    "[ lem : cyclemixedeigensystem ] for @xmath66 , define @xmath91 .",
    "then @xmath92 is an orthonormal eigensystem of @xmath22 for @xmath64 .",
    "the proof is omitted , but follows from a straightforward verification of the necessary conditions .",
    "theorem [ thm : cyclegreenidentity ] follows by combining theorem [ thm : normalizedgcycle ] with ( [ eqn : normalizedgfourier ] ) using the orthonormal eigenbasis of lemma [ lem : cyclemixedeigensystem ] .",
    "[ thm : cyclegreenidentity ] let @xmath66 and let @xmath93",
    ". then @xmath94",
    "theorems 4 - 5 of @xcite give a contour integral formula for the green s function of the cartesian product of two regular graphs with boundary , provided a certain generalized green s function is known for each factor graph . in this section ,",
    "we extend these results to include the cases where one or both of the factor graphs is without boundary , and provide simplified working formulas requiring the generalized green s function of one graph and the eigensystem of the other .",
    "the original technique of @xcite recovers the green s function of the product graph as the residues of a certain contour integral whose contour contains as poles all of the eigenvalues of one of the graphs , and none of the negatives of the eigenvalues of the other graph . when both graphs are without boundary , both have an eigenvalue of 0 , and the resulting order 2 pole requires a modified contour integral formula .",
    "recalling the definitions in section [ sec : prelim ] , let @xmath5 and @xmath95 be regular graphs of degree @xmath96 and @xmath97 with specified vertex subsets @xmath29 and @xmath98 and normalized dirichlet laplacians @xmath26 and @xmath99 , respectively .",
    "for any @xmath100 , define @xmath101 to be the symmetric matrix satisfying the relation @xmath102 , if @xmath103 ; and the relations @xmath104 if @xmath33 ( @xmath26 is singular ) . in either case , this is equivalent to @xmath105 where the @xmath106 s are the orthonormal eigenfunctions of @xmath26 associated with the eigenvalues @xmath107 .",
    "in particular , @xmath101 is a rational function of @xmath108 .",
    "the analogous definitions of @xmath109 , @xmath110 , and @xmath111 are made for @xmath112 .",
    "the choice of @xmath29 and @xmath98 induces the specified vertex set @xmath113 in the cartesian product @xmath114 .",
    "this product of @xmath5 and @xmath95 has vertex set @xmath115 and edges of the form @xmath116 or @xmath117 where @xmath118 , @xmath119 .",
    "let @xmath120 be the normalized laplacian of @xmath114 , with corresponding normalized dirichlet laplacian @xmath121 .",
    "we abuse notation by referring to @xmath29 , @xmath98 and @xmath113 as the graphs they induce .",
    "if @xmath26 and @xmath99 have orthonormal eigensystems @xmath30 and @xmath122 , respectively , then when @xmath29 and @xmath98 are regular of the same degree , @xmath121 has orthonormal eigensystem @xmath123 where @xmath124 we begin with the case in which @xmath29 has boundary .",
    "suppose @xmath40 , so that @xmath29 generates a connected subgraph with boundary in @xmath13 .",
    "we allow @xmath125 to generate an arbitrary connected subgraph in @xmath112 .",
    "we consider two cases , where the factor graphs are regular of the same degree or regular of different degrees .",
    "first , suppose @xmath29 and @xmath98 be regular of the same degree , and let @xmath126 denote a simple closed contour in the complex plane consisting of all @xmath100 satisfying @xmath127 .",
    "the contour @xmath126 is designed to enclose all of the @xmath128 s and none of the @xmath129 s .",
    "we have the following generalization of theorem 4 of @xcite .",
    "[ thm : normalizedgproductboundary ] let @xmath29 and @xmath98 be induced subgraphs of @xmath5 and @xmath95 , respectively , which are both regular of degree @xmath96 .",
    "let @xmath40 and @xmath125 .",
    "the normalized green s function @xmath130 of the cartesian product @xmath131 with dirichlet boundary condition is @xmath132    combining the product graph eigensystem in ( [ eqn : producteigensystem ] ) with the formal definition of @xmath130 in ( [ eqn : normalizedgfourier ] ) , we have @xmath133    note that the above contour integral picks up exactly the residues at @xmath134 . for example",
    ", the residue at @xmath135 is exactly @xmath136 for convenience , we assign the term of the residue in ( [ eqn : residuegproductboundary ] ) corresponding to @xmath137 to @xmath138 .",
    "this observation gives us the computational formula for @xmath130 in the following corollary , which in practice may be applied to yield a closed formula for a specific product graph , or to generate in conjunction with ( [ eqn : normalizedgfourier ] ) a non - trivial identity involving @xmath101 and arbitrary orthonormal eigensystems of @xmath26 , @xmath139 and @xmath121 .",
    "[ cor : normalizedgproductboundary ] under the same conditions as in theorem [ thm : normalizedgproductboundary ] , we have @xmath140    second , suppose we have the same conditions as theorem [ thm : normalizedgproductboundary ] , except @xmath29 and @xmath98 are regular of degrees @xmath96 and @xmath97 , respectively .",
    "the normalized dirichlet laplacian @xmath121 has orthonormal eigensystem @xmath141 the poles of @xmath142 are at @xmath143 , and the poles of @xmath144 are at @xmath145 .",
    "let @xmath126 denote a simple closed contour in the complex plane consisting of all @xmath100 satisfying @xmath146 ; thus @xmath126 contains all of the @xmath147 s but none of the @xmath148 s .",
    "we obtain the following minor extension to theorem 5 of @xcite .",
    "[ thm : normalizedgproductboundaryddprime ] let @xmath29 and @xmath98 be induced subgraphs of @xmath5 and @xmath95 , respectively , where @xmath13 is regular of degree @xmath96 and @xmath112 is regular of degree @xmath97 .",
    "let @xmath40 and @xmath125 .",
    "the normalized green s function @xmath130 of the cartesian product @xmath113 with dirichlet boundary condition is @xmath149    combining ( [ eqn : producteigensystem2 ] ) with ( [ eqn : normalizedgfourier ] ) , we have @xmath150    analogous to corollary [ cor : normalizedgproductboundary ] , by inspecting the residues of the above contour integral at all values @xmath145 , we have the following .    under the same conditions as theorem [ thm : normalizedgproductboundaryddprime ] , we have @xmath151      here we consider the case of @xmath33 and @xmath152 , so that @xmath113 is the entire product graph @xmath114 ; recall that the normalized green s function for @xmath114 is non - invertible .",
    "let @xmath153 and @xmath154 , and consider first the case in which @xmath13 and @xmath112 have the same degree .",
    "the orthonormal eigensystems of @xmath22 and @xmath155 are @xmath156 and @xmath157 , respectively .",
    "let @xmath126 denote a simple closed contour in the complex plane consisting of all @xmath100 satisfying @xmath158 .",
    "the contour @xmath126 is designed to enclose @xmath159 and none of @xmath160 or @xmath161 .",
    "[ thm : normalizedgproductnoboundary ] let @xmath13 and @xmath112 be connected regular graphs of degrees @xmath96 without boundary . with the notation above , the normalized green s function @xmath130 of the cartesian product @xmath114",
    "is @xmath162    the eigenvector @xmath55 corresponding to eigenvalue 0 is determined by @xmath163 . combining the formal definition of @xmath130 in ( [ eqn : normalizedgfourier ] ) with ( [ eqn : producteigensystem ] ) , and noting that @xmath164 , @xmath165 , and @xmath166 , we have @xmath167    analogous to corollary [ cor : normalizedgproductboundary ] , inspecting the residues of the above contour integral at @xmath159 yields the following corollary .",
    "[ cor : normalizedgproductwoboundary ] under the same conditions as in theorem [ thm : normalizedgproductnoboundary ] , we have @xmath168    now suppose we have the same conditions as theorem [ cor : normalizedgproductwoboundary ] , except that the graphs @xmath13 and @xmath112 are regular of degrees @xmath96 and @xmath97 , respectively , and @xmath169 has orthonormal eigensystem given by ( [ eqn : producteigensystem2 ] ) .",
    "let @xmath126 denote a contour in the complex plane consisting of all @xmath100 satisfying @xmath170 .",
    "thus @xmath126 contains @xmath171 , but neither @xmath172 nor @xmath173 . we obtain the following theorem .",
    "[ thm : normalizedgproductnoboundaryddprime ] let @xmath13 and @xmath112 be connected regular graphs without boundary of degrees @xmath96 and @xmath97 , respectively",
    ". with the notation above , the normalized green s function @xmath130 of the cartesian product @xmath114 is @xmath174    combining the definition of @xmath130 in ( [ eqn : normalizedgfourier ] ) with ( [ eqn : producteigensystem2 ] ) , we have @xmath175    analogous to corollary [ cor : normalizedgproductboundary ] , by inspecting the residues of the contour integral at @xmath176 , we have the following .    [ cor : normalizedgproductwoboundaryddprime ] under the same conditions as in theorem [ thm : normalizedgproductnoboundaryddprime ] , we have @xmath177",
    "application of the results in the previous two sections to specific examples is limited only to cases in which the necessary raw materials can be computed . the results in section [ sec : resultsboundary ] for",
    "the product where at least one graph has boundary require the eigensystem of one graph and the generalized green s function @xmath101 of the other graph .",
    "although as written , the results assume that the generalized green s function is known for the graph without boundary , and the eigensystem is known for the graph without boundary , theorems [ thm : normalizedgproductboundary ] and [ thm : normalizedgproductboundaryddprime ] can be easily re - derived for when the reverse is true .    the results in section [ sec : resultsnoboundary ] for the product of two graphs without boundary require knowledge of the eigensystem of one graph , the generalized green s function @xmath101 of the other graph , and the green s functions @xmath42 and @xmath178 of both graphs .",
    "thus computation of the normalized green s function for any graph can be done via any decomposition of the graph into factor graphs where this information is known .",
    "this observation can be particularly useful in computing the normalized green s function inductively where each additional factor graph is from a specific family .",
    "following corollary [ cor : normalizedgproductwoboundary ] , determination of the green s function of the torus requires the greens function @xmath42 and generalized green s function @xmath101 of the cycle . in obtaining a compact formula for the torus , it is critical to simplify @xmath101 as much as possible before incorporating it into corollary [ cor : normalizedgproductwoboundary ] .",
    "[ thm : normalizedgtorus ] let @xmath180 .",
    "for @xmath77 and @xmath181 , the torus  @xmath179 has normalized green s function @xmath182\\nonumber \\\\ &",
    "+ \\frac{2}{n}\\left(\\frac{(m+1)(m-1)}{6 m } - |y - x| +      \\frac{(y - x)^2}{m}\\right ) \\nonumber \\\\ & + \\frac{2}{m}\\left(\\frac{(n+1)(n-1)}{6n } - |y'-x'| +      \\frac{(y'-x')^2}{n}\\right ) \\nonumber\\end{aligned}\\ ] ] where @xmath183 and @xmath184 are the chebyshev polynomials of the first and second kind , respectively .",
    "note that the formula depends only on the distances between @xmath46 and @xmath12 and between @xmath185 and @xmath186 , which is expected due to the translational symmetries of the torus .",
    "the first step of the proof is to obtain a closed form for @xmath101 for the cycle @xmath64 ( @xmath42 was determined in theorem [ thm : normalizedgcycle ] ) .",
    "the proof of theorem [ thm : normalizedgtorus ] is deferred until after cor .",
    "[ cor : normalizedgalphacycle ] .",
    "[ thm : normalizedgalphacycler ] let @xmath66 .",
    "for a cycle @xmath64 with vertices @xmath187 , complex @xmath188 , and @xmath189 , the generalized green s function @xmath101 satisfies @xmath190 where @xmath191 .    because @xmath64 is vertex - transitive",
    ", @xmath192 depends only on the distance @xmath193 between @xmath12 and @xmath46 .",
    "therefore define @xmath194 , where @xmath195 for @xmath196 . from ( [ eqn : normalizedgalphapseudoinverserelations ] ) , we have @xmath197 where @xmath26 is the normalized laplacian of @xmath64 .",
    "we can rewrite this as @xmath198 which for @xmath199 becomes @xmath200 when @xmath81 , @xmath201 and since @xmath202 , we obtain @xmath203 from this point , the reader who wishes to verify details is encouraged to employ any standard computer algebra system",
    ". equations ( [ eqn : galphacycleadiff ] ) and ( [ eqn : galphacycle1from0 ] ) define a recurrence with an initial condition on differences of @xmath204 , which is resolved by substituting @xmath205 from ( [ eqn : galphacycle1from0 ] ) into ( [ eqn : galphacycleadiff ] ) and simplifying the geometric series . for @xmath206 this yields @xmath207",
    "denoting the right - hand side of ( [ eqn : galphacycledalpha ] ) by @xmath208 , for @xmath199 we have @xmath209 a careful but straightforward summing of geometric series in ( [ eqn : galphacyclegfromd ] ) yields , for @xmath199 , @xmath210 now using ( [ eqn : galphacyclegfrom0 ] ) , we set @xmath202 and solve for @xmath211 , obtaining @xmath212 which together with ( [ eqn : galphacyclegfrom0 ] ) and simplification yields @xmath213 substituting @xmath74 for @xmath214 gives the desired formula for @xmath204 .    by the definition of @xmath108 and @xmath215 , we may use the substitution @xmath216 to rewrite @xmath217 and @xmath218 . together with the definition of the chebyshev polynomials of the first and second kinds , @xmath219 and @xmath220 , respectively ; i.e. , @xmath221 where @xmath222 , we obtain the following corollary to theorem [ thm : normalizedgalphacycler ] .",
    "[ cor : normalizedgalphacycle ] let @xmath66 .",
    "for complex @xmath188 and   @xmath189 , the generalized green s function @xmath101 for the cycle @xmath64 with vertices  @xmath187 satisfies @xmath223 where @xmath183 and @xmath184 are the chebyshev polynomials of the first and second kinds , respectively .",
    "the theorem follows by applying the integral formula for products of graphs without boundary in corollary [ cor : normalizedgproductwoboundary ] to the torus , where @xmath224 , @xmath225 , the @xmath226 s are the orthonormal basis described in lemma [ lem : cyclemixedeigensystem ] , @xmath42 and @xmath227 are given by theorem [ thm : normalizedgcycle ] , and @xmath204 is given by corollary [ cor : normalizedgalphacycle ] .",
    "combining theorem [ thm : normalizedgtorus ] with ( [ eqn : normalizedgfourier ] ) using the orthonormal eigensystem of lemma [ lem : cyclemixedeigensystem ] for both @xmath64 and @xmath228 yields the following nontrivial identity .",
    "[ cor : normalizedgtorusidentity ] let @xmath180 ; @xmath189 ; and  @xmath229",
    ". then @xmath230\\nonumber \\\\ & + \\frac{(m+1)(m-1)}{3mn } - \\frac{|y - x|}{n } + \\frac{(y - x)^2}{mn }      \\nonumber \\\\ & + \\frac{(n+1)(n-1)}{3mn } - \\frac{|y'-x'|}{m } +      \\frac{(y'-x')^2}{mn } , \\nonumber\\end{aligned}\\ ] ] where @xmath183 and @xmath184 are the chebyshev polynomials of the first and second kinds , respectively .",
    "the laplacian of @xmath64 has a 1-dimensional eigenspace corresponding to eigenvalue 0 , and a second 1-dimensional eigenspace corresponding to eigenvalue 2 iff @xmath64 is bipartite ( when @xmath231 is even ) .",
    "otherwise , all eigenspaces are 2-dimensional , since @xmath232 for all @xmath233 .",
    "this means that corollary [ cor : normalizedgtorusidentity ] is only one of a class of identities constructed by choosing orthonormal eigensystems for @xmath64 and @xmath228 for the left - hand side , and a possibly distinct orthonormal eigensystem for @xmath228 on the right - hand side .",
    "the bottleneck in computing the normalized green s function for the @xmath0-torus via corollary [ cor : normalizedgproductwoboundary ] is the lack of a formula for the generalized green s function for any @xmath235 .",
    "thus the decomposition into a cycle , for which @xmath204 is given by corollary [ cor : normalizedgalphacycle ] , and a @xmath236-torus is required .    before giving the normalized green s function of @xmath237 , we present the information on the components still needed .",
    "choose and label the eigensystem of each @xmath238 by @xmath239 where @xmath240 , @xmath241 , and the vectors @xmath242 are orthonormal .",
    "the eigenvalues of @xmath243 are averages of the eigenvalues of the factors @xmath238 , and the corresponding eigenvectors are products of the eigenvectors of the factors .",
    "this is summarized in the next well - known lemma , whose proof is a straightforward induction on ( [ eqn : producteigensystem ] ) .",
    "[ lem : normalizedgrepeatedcycleproducteigensystem ] the eigenvalues of @xmath243 are @xmath244 where @xmath245 for all @xmath246 , with corresponding eigenvectors @xmath247    for the following theorem , let @xmath42 be the normalized green s function for @xmath248 from theorem [ thm : normalizedgcycle ] , and @xmath227 the normalized green s function for @xmath249 .",
    "[ thm : normalizedgrepeatedcycleproduct ]",
    "let @xmath235 .",
    "let @xmath250 where @xmath240 for @xmath251 .",
    "the @xmath0-dimensional torus @xmath252 has normalized green s function @xmath253 where @xmath137 ranges over all indices @xmath254 , @xmath255 and @xmath256 are defined in lemma [ lem : normalizedgrepeatedcycleproducteigensystem ] , @xmath101 is given by corollary [ cor : normalizedgalphacycle ] , and @xmath257 is the normalized green s function for @xmath258 .",
    "the proof proceeds by using @xmath259 and @xmath260 in corollary [ cor : normalizedgproductwoboundaryddprime ] .",
    "the degree of @xmath13 is @xmath261 , and the degree of @xmath112 is @xmath262 .",
    "the result follows .",
    "although @xmath257 in theorem [ thm : normalizedgrepeatedcycleproduct ] may not already be known , it can be computed inductively from repeated applications of the theorem .",
    "determination of @xmath101 for any small product @xmath263 would allow the reduction in the number of applications required by a factor of @xmath264 . the following formula for the 3-torus",
    "is obtained by two applications of theorem [ thm : normalizedgrepeatedcycleproduct ] , first taking the product of @xmath224 with @xmath265 , and then the product of @xmath224 with @xmath266 .    for @xmath267",
    "where @xmath66 , the 3-dimensional torus @xmath268 has normalized green s function @xmath269 \\nonumber\\\\ & + \\frac{3}{m^2}\\sum_{j=1}^{m }      \\exp\\big((2\\pi ik / m)(y_3-x_3)\\big )      \\mathcal{g}_{\\left(1-\\cos{(2\\pi j / m)}\\right)}(x_2,y_2 ) \\nonumber\\\\ & + \\frac{3}{m^2}\\left(\\frac{(m+1)(m-1)}{6 m } - |y_3-x_3|      + \\frac{(y_3-x_3)^2}{m}\\right ) \\nonumber \\\\ & + \\frac{3}{m^2}\\left(\\frac{(m+1)(m-1)}{6 m } - |y_2-x_2| +      \\frac{(y_2-x_2)^2}{m}\\right )   \\nonumber \\\\ & + \\frac{3}{m^2}\\left(\\frac{(m+1)(m-1)}{6 m } - |y_1-x_1| +      \\frac{(y_1-x_1)^2}{m}\\right ) .",
    "\\nonumber\\end{aligned}\\ ] ] where @xmath101 is given in corollary [ cor : normalizedgalphacycle ] .",
    "these compact formulas for green s functions of tori offer fast alternatives to computing pseudo - inverses of their laplacians directly .",
    "this increase in speed , essentially due to the symmetry of the torus , is reflected in @xmath270 computational complexity of the chebyshev polynomials @xmath219 and @xmath220 .",
    "various algorithms for computing @xmath219 and @xmath220 are given in @xcite , and a more theoretical treatment of types of polynomials computable in @xmath270 appears in @xcite .",
    "the following corollary to theorem [ thm : normalizedgrepeatedcycleproduct ] is significant because the laplacian ( @xmath22 , @xmath21 , or @xmath19 ) of the torus on @xmath1 vertices has rank @xmath271 , and so computing its pseudo - inverse provides along the way the inverse of an @xmath272 matrix .",
    "matrix pseudo - inversion of the laplacian of the @xmath0-dimensional torus with @xmath1 vertices via its green s function is  @xmath273 , provided that the matrix itself is not completely reconstructed .",
    "we assume the @xmath0-dimensional torus is @xmath274 , where @xmath240 for @xmath251 and @xmath275 .",
    "it suffices to compute one row of the pseudo - inverse of the normalized laplacian in order to know the entire inverse , due to the translational symmetry of the torus ; i.e. , since @xmath276 ( in fact , because @xmath277 can be replaced by @xmath278 without changing the value of @xmath130 , only @xmath279 of these entries must actually be computed . ) without loss of generality , @xmath280 .",
    "then the summation term on the right - hand side of ( [ eqn : normalizedgttorus ] ) has at most @xmath281 summands , which can each be computed in @xmath282 time .",
    "the second and third terms can also be computed in @xmath283 time , and we must compute @xmath1 terms total to know all entries of the pseudo - inverse of @xmath22 .",
    "for example , the time complexity of computing the green s function for the 3-torus with @xmath1 vertices is @xmath284 .",
    "such a quick pseudo - inversion formula is surprising , since matrix inversion in general has the same complexity as matrix multiplication ( see @xcite ) .",
    "matrix multiplication is known to be @xmath285 , where @xmath286 ( see @xcite ) .",
    "surprisingly , for large @xmath1 we can compute all of the values for the pseudo - inverse of the laplacian for the torus faster than we can write down the whole matrix .",
    "of course , requiring the presentation of the whole matrix rather than just the first row increases the complexity to @xmath287 .",
    "the equivalence of green s functions to the fundamental matrix @xmath63 of ( [ eqn : fundmatformal ] ) under similarity transformation allows many quantities in random walks to be computed using @xmath42 . the _ hitting time _",
    "@xmath288 of a simple random walk starting at vertex @xmath12 with target vertex @xmath46 is the expected number of steps to reach vertex @xmath46 for the first time by starting at @xmath12 and at each step moving to any neighbor of @xmath12 with equal probability . in @xcite , chung and yao",
    "show the following relationship between @xmath42 and @xmath289 .    the hitting time @xmath288 satisfies @xmath290    we immediately have a computational formula for the hitting time whenever @xmath42 is known .",
    "for instance , whenever @xmath13 is regular with @xmath1 vertices , @xmath291 figure [ fig : torushitting ] plots hitting time in the case of @xmath292 , using theorem [ thm : normalizedgtorus ] and ( [ eqn : hittinggreen ] ) .",
    "the domain consists of the vertices of the torus laid out in a square grid with periodic boundary , making opposite ends adjacent .",
    "the vertical axis plots the hitting time of a random walk initiated at @xmath293 with target @xmath294 , achieving a minimum of 0 at @xmath293 and leveling off at just above 6000 steps to reach vertices farthest from the start of the walk .",
    "if ( [ eqn : hittinggreen ] ) is computed using techniques such as corollary [ cor : normalizedgalphacycle ] , the hitting time expression will involve orthogonal polynomials .",
    "aldous and fill claim in @xcite that orthogonal polynomials appear whenever the graph has sufficient symmetry , but the dependence remains largely unstudied .    , laid out as a square with periodic boundary ]",
    "-.1 in the author would like to give special thanks to fan r.  k.  chung , who provided assistance in the form of many valuable discussions on the material in this paper ."
  ],
  "abstract_text": [
    "<S> discrete green s functions are the inverses or pseudo - inverses of combinatorial laplacians . we present compact formulas for discrete green s functions , in terms of the eigensystems of corresponding laplacians , for products of regular graphs with or without boundary . </S>",
    "<S> explicit formulas are derived for the cycle , torus , and 3-dimensional torus , as is an inductive formula for the @xmath0-dimensional torus with @xmath1 vertices , from which the green s function can be completely determined in time @xmath2 . these green s functions may be used in conjunction with diffusion - like problems on graphs such as electric potential , random walks , and chip - firing games or other balancing games .    _ </S>",
    "<S> key words : _ discrete green s function , combinatorial laplacian , regular graph , torus </S>"
  ]
}
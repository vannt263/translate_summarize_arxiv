{
  "article_text": [
    "it is well known that the problem to decide whether a _ propositional _ disjunctive logic program has an answer set ( the _ eas problem _ , for short ) is @xmath0-complete @xcite .",
    "it is also well known that putting restrictions on the input instances may affect the complexity .",
    "for example , the eas problem for normal logic programs is np - complete @xcite .    in this paper",
    "we study the complexity of the eas problem for classes of propositional disjunctive logic programs that can be defined by sets of program rule _",
    "arities_. we show that for each such class the problem is either in p , is np - complete or is @xmath0-complete , and we fully characterize the classes of programs that fall into each category .",
    "we extend this result to establish similar characterizations for the problems of skeptical and credulous reasoning with disjunctive logic programs .",
    "such results are of potential interest . on the one hand , they reveal some reasons responsible for the hardness of computing answer sets ; cf . lemmas [ lem1 ] and [ lem23 ] .",
    "on the other hand , they identify classes of problem instances , for which the problem is `` easy '' ( in p ) or `` still easier than in general '' ( in np ) ; cf .",
    "lemmas [ lem21 ] and [ lem22 ] .",
    "we also consider the corresponding reasoning problems for the semantics of supported models @xcite and obtain similar results .",
    "however , the classification is simpler , as the reasoning problems under the semantics of supported models are confined to the first level of the polynomial hierarchy .",
    "thus , for each class of programs characterized in terms of arities , the decision problems related to reasoning tasks for programs from that class with respect to supported models turn out to be either in p or np - complete ( conp - complete , depending on the task ) .",
    "our results can be regarded as _ trichotomy _",
    "( respectively , _ dichotomy _ )",
    "results for the complexity of reasoning tasks in disjunctive logic programming .",
    "similar results are known for the complexity of reasoning in other formalisms : propositional satisfiability @xcite , reasoning with minimal models @xcite , default logic @xcite , and abductive reasoning @xcite .",
    "there is however , an important distinction between those earlier papers and our approach .",
    "the results contained there are concerned with the setting in which formulas are conjunctions of boolean relations , and the set of models of a formula is the intersection of the sets of models of its constituent relations ( in particular , it implies the monotonicity of inference from such formulas ) .",
    "the basic results concern the complexity of the satisfiability problem for classes of formulas determined by sets of boolean relations allowed as formula conjuncts .",
    "it turns out that there is a simple characterization of all those classes , for which the problem is in p ; moreover for all other classes the problem is np - complete @xcite .",
    "this result can be exploited to characterize the complexity of reasoning with systems , in which basic reasoning tasks reduce to series of satisfiability tests @xcite . in the setting of disjunctive logic programs ,",
    "these earlier results seem to be of little help .",
    "it is well known that the answer - set and the supported - model semantics are _ nonmonotone _ and so , logic programs under the answer - set semantics are _ not _ conjunctions of their rules .",
    "thus , it is unclear whether defining classes of programs in terms of semantic properties of individual rules could yield any useful insights .",
    "finally , we stress that we are concerned with propositional programs only . for results on the complexity of reasoning with disjunctive logic programs in the general ( non - ground ) case ,",
    "we refer the reader to the paper by dantsin , eiter , gottlob , and voronkov @xcite .",
    "we fix an infinite countable set @xmath1 of propositional variables . a _ disjunctive program _ ( or simply , a program ) over the set of atoms",
    "@xmath1 is a collection of _ disjunctive logic program rules _ , that is , expressions of the form @xmath2 where @xmath3 , @xmath4 and @xmath5 are atoms from @xmath1 .",
    "the disjunction @xmath6 is the _ head _ of @xmath7 and the conjunction @xmath8 is the _ body _ of @xmath7 .",
    "we call the triple @xmath9 $ ] the _ arity _ of @xmath7 . if @xmath10 , we call @xmath7 _ proper_. otherwise , @xmath11 and @xmath7 is a _ constraint_. we allow the possibility that the head and body of a rule are both empty .",
    "such rule ( it is unique ) is contradictory .",
    "we recall that given a program @xmath12 and a set @xmath13 of atoms ( an interpretation ) , the _ reduct _ of @xmath12 with respect to @xmath13 , @xmath14 , is the program obtained by removing for all @xmath15 all rules with a literal @xmath16 in the body and , then , removing all negative literals ( negated atoms ) from the bodies of all remaining rules .",
    "a set of atoms @xmath13 is an _ answer set _ of a disjunctive program @xmath12 if @xmath13 is a minimal model of @xmath14 @xcite .    for a program @xmath12 , we denote by @xmath17 and @xmath18 the programs consisting of all proper rules and of all constraints in @xmath12 , respectively .",
    "the following result is well known .",
    "[ thm : c ] a set @xmath19 is an answer set of a program @xmath12 if and only if @xmath13 is an answer set of @xmath17 and a model of @xmath18 .    one can define classes of logic programs by specifying arities of rules .",
    "for instance , the set @xmath20,[0,1,0]\\}$ ] defines the set of all horn programs with constraints such that each rule has at most one atom in the body .",
    "some classes of programs do not have such a finitary representation in terms of arities .",
    "for instance , the class of all horn programs with constraints can be defined by the set @xmath21{\\,|\\;}k\\leq 1 , 0\\leq m\\}$ ] , but there is no _ finite _ set of arities that could be used instead . to handle such cases , we introduce now a general representation schema for defining classes of programs in terms of sets of arities .",
    "let @xmath22 .",
    "we consider @xmath23 to be ordered by the relation @xmath24 ( the standard @xmath24 ordering relation on non - negative integers , extended by @xmath25 , for every @xmath26 ) .",
    "next , we define @xmath27{\\,|\\;}k , m , n\\in u\\}$ ] .",
    "thus , @xmath28 contains all arities , as well as _ additional",
    "_ triples  those containing at least one occurrence of @xmath29 .",
    "we refer to triples of that latter sort as _",
    "superarities_. we emphasize that superarities are _ not _ arities as we do not consider infinitary rules . if @xmath30 , we write @xmath31 , @xmath32 and @xmath33 for the components of @xmath34",
    ".    let @xmath35 .",
    "we define @xmath36 if    1 .",
    "@xmath37 , for @xmath38 , and 2 .",
    "if @xmath39 then @xmath40 .",
    "we write @xmath41 when @xmath36 and @xmath42 .    if @xmath43 , then we define @xmath44 to be the set of all _ finite _ programs @xmath12 that satisfy the following condition : for every rule @xmath45 there is @xmath46 such that @xmath47 , where @xmath48 denotes the arity of @xmath7 .",
    "the condition ( 2 ) in the definition of @xmath49 allows us to distinguish between classes of proper programs and classes of programs with constraints . indeed , without the condition ( 2 )",
    ", every class of programs of the form @xmath50 would contain constraints . with the condition ( 2 ) , we can specify classes of constraint - free programs by means of sets @xmath51 such that for every @xmath46 , @xmath52 . including in @xmath51 elements @xmath34 with @xmath39 yields classes of programs with constraints .",
    "as there are classes of proper programs that are of interest ( horn programs and normal logic programs are typically defined as consisting of proper rules only ) , the distinction is needed and motivates the condition ( 2 ) in the definition of @xmath49 .    using this schema",
    "we can define several important classes of programs .",
    "for instance , the class of proper horn programs can be described as @xmath53\\})$ ] and the class of normal logic programs with constraints as @xmath54,[0,\\infty,\\infty]\\})$ ] .",
    "our main goal in this paper is to determine the complexity of the eas problem when input programs come from classes @xmath50 , for @xmath55 .",
    "we also consider the corresponding problem for the case of supported models .",
    "in this section we tackle the case when @xmath51 is finite .",
    "we note that given a finite set @xmath43 , the problem to decide the membership of a program in the class @xmath50 is in p.    we start by establishing upper bounds on the complexity of the eas problem for classes @xmath50 given by some particular finite sets @xmath51 of arities .",
    "our first result is concerned with the following classes : @xmath56,[0,0,0]\\})$ ]  the class of proper positive disjunctive programs ; @xmath53 , [ 0,\\infty,\\infty]\\})$ ]  the class of programs whose every rule is either a proper horn rule or a constraint ; @xmath57,$ ] @xmath58\\})$ ]  the class of _ dual horn programs _ ,",
    "that is , programs whose every rule , when viewed as a propositional clause , is a dual horn clause ; and @xmath59\\in { \\mathcal{a}}{\\,|\\;}i+j\\leq 2\\})$ ]  the class of positive programs whose every rule consists of at most two literals . for each of these classes of programs , the eas problem is easy ( that is , in p ) .",
    "[ lem21 ] if @xmath51 is one of :    1 .",
    "@xmath60,[0,0,0]\\}$ ] 2 .",
    "@xmath61 , [ 0,\\infty,\\infty]\\}$ ] 3 .",
    "@xmath62,[0,1,0]\\}$ ] 4 .",
    "@xmath63\\in { \\mathcal{a}}{\\,|\\;}i+j\\leq 2\\}$ ]    then the eas problem for @xmath50 is in @xmath64 .",
    "proof : if @xmath65,[0,0,0]\\})$ ] , then @xmath12 either contains a contradictory rule and so does not have answer sets , or it is a proper positive program . in the latter case , @xmath12 has models and so , minimal models , too .",
    "it follows that the eas problem is in p , in this case .",
    "next , let @xmath66,[0,\\infty,\\infty]\\})$ ] . in this case , @xmath17 is a proper horn program .",
    "it has a least model , say @xmath13 , which is the only answer set of @xmath17 .",
    "it is well known that @xmath13 can be computed in polynomial time @xcite .",
    "moreover , it can be verified in polynomial time whether @xmath13 satisfies the constraint part @xmath18 of @xmath12 .",
    "thus , the assertion follows in this case , as well .",
    "thus , let us assume that @xmath67,[0,1,0]\\})$ ] or @xmath68\\in{\\mathcal{a}}{\\,|\\;}i+j\\leq 2\\})$ ] .",
    "then @xmath12 is a dual horn program , or @xmath12 is positive and every clause in @xmath12 consists of two literals . in each case",
    ", one can decide in polynomial time whether @xmath12 has a model .",
    ", the case that is perhaps less broadly known , one can compute in the bottom - up fashion the complement of its greatest model contained in @xmath69 , or determine that no models exist ( by means of a `` dual '' dowling - gallier algorithm ) . ]",
    "if the answer is `` no , '' then @xmath12 has no answer sets .",
    "otherwise , @xmath12 has a model , say @xmath13 .",
    "since @xmath13 is a model of @xmath17 , there is a subset @xmath70 of @xmath13 such that @xmath70 is a minimal model of @xmath17 .",
    "we have @xmath71 .",
    "thus , @xmath70 is an answer set of @xmath17 .",
    "since @xmath13 satisfies @xmath18 and each rule in @xmath18 is of the form @xmath72 or @xmath73 , @xmath70 satisfies @xmath18 , too .",
    "thus , @xmath70 is an answer set of @xmath12 .",
    "again , the assertion follows .",
    "@xmath74    the second result establishes sufficient conditions for the eas problem to be in the class np .",
    "it turns out to be the case for the following three classes of programs : @xmath54 , [ 0,\\infty,\\infty]\\})$ ]  the class of normal logic programs with constraints ; @xmath75,$ ] @xmath76\\})$ ]  the class of programs whose reducts consist of proper dual horn rules and constraints ; and @xmath56,$ ] @xmath77\\})$ ]  the class of positive programs .",
    "[ lem22 ] if @xmath51 is one of :    1 .",
    "@xmath78,[0,\\infty,\\infty]\\}$ ] 2 .",
    "@xmath79,[0,\\infty,\\infty]\\}$ ] 3 .",
    "@xmath80 @xmath81,[0,\\infty , 0]\\}$ ]    then the eas problem for @xmath50 is in @xmath82 .    proof : if @xmath83,[0,\\infty,\\infty]\\}$ ] , @xmath50 consists of normal logic programs with constraints . in this case , the result is well known @xcite .",
    "next , let @xmath84,[0,\\infty,\\infty]\\}$ ] and @xmath85 . to prove the assertion it is enough to show that there is a polynomial time algorithm for deciding whether a set of atoms @xmath86 is an answer set of @xmath12 .",
    "to this end , we note that @xmath86 is a minimal model of @xmath87 if and only if for every @xmath88 , the program @xmath89 does not have a model . since @xmath89 is dual horn , verifying whether @xmath13 is a minimal model of @xmath87 can be accomplished in polynomial time .",
    "in addition , checking that @xmath13 is a model of @xmath18 can be done in polynomial time , too .",
    "thus , in this case , the assertion follows .    finally , if @xmath90,[0,\\infty,0]\\}$ ] and @xmath85 , then deciding whether @xmath12 has an answer set is equivalent to deciding whether @xmath12 has a model . indeed ,",
    "if @xmath13 is an answer set of @xmath12 , then @xmath13 is a model of @xmath12 .",
    "conversely , if @xmath13 is a model of @xmath12 , then let @xmath91 be a minimal model of @xmath17 ( such a model exists , as @xmath13 is a model of @xmath17 ) .",
    "clearly , @xmath71 and so , @xmath70 is an answer set of @xmath17 . since @xmath92 and @xmath13 is a model of @xmath18",
    ", @xmath70 is a model of @xmath18 ( it follows from the fact that every rule in @xmath18 is of the form @xmath93 ) .",
    "thus , @xmath70 is an answer set of @xmath12 .",
    "since the problem to decide whether @xmath12 has a model is in np , the assertion follows .",
    "@xmath74    while the upperbounds provided by lemma [ lem22](1 ) and ( 3 ) are not surprising ( in fact , as we noted , lemma [ lem22](1 ) is well known ) , lemma [ lem22](2 ) warrants additional comments .",
    "the class of programs considered there , has not been identified before as one of the classes of disjunctive programs for which the complexity of reasoning drops down to the first level of the polynomial hierarchy . in the same time",
    ", it is an interesting class of programs . in particular , programs in this class are not , in general _ head - cycle free _",
    "@xcite .",
    "next , we will prove several lower - bound results .",
    "we will first exhibit classes of programs of the form @xmath50 for which the eas problem is np - hard . to this end",
    ", we need a lemma establishing the np - hardness of the sat problem for some simple classes of cnf theories . for the most part ,",
    "the result is folklore .",
    "we sketch an argument for the sake of completeness .",
    "[ lem2 ] the sat problem restricted to each of the following classes of cnf theories is np - hard :    1 .",
    "the class of all cnf formulas @xmath94 such that each clause of @xmath94 is a disjunction of two negated atoms , or of at most three atoms ; 2 .",
    "the class of all cnf formulas @xmath94 such that each clause of @xmath94 consists of at most two negated atoms , or is a disjunction of two atoms , or is a disjunction of two atoms and one negated atom ; 3 .",
    "the class of all cnf formulas @xmath94 such that each clause of @xmath94 consists of at most two atoms , or of one negated atom , or is a disjunction of an atom and two negated atoms ; 4 .",
    "the class of all cnf formulas @xmath94 such that each clause of @xmath94 is a disjunction of two atoms , or of at most three negated atoms .",
    "proof : we will only prove the case ( 3 ) .",
    "the argument in all other cases is similar .",
    "let @xmath95 be a cnf formula whose every clause has three literals , and let @xmath96 be a set of atoms occurring in @xmath95 . for each atom @xmath97",
    "we introduce a fresh atom @xmath98 .",
    "next , in each clause @xmath99 we replace some of its positive literals @xmath100 with @xmath101 , and some of its negative literals @xmath102 with @xmath103 so that the resulting clause , we will denote it by @xmath104 , is the disjunction of exactly one atom and two negated atoms .",
    "such replacements can always be found .",
    "finally , we introduce one more fresh atom , say @xmath105 , and define @xmath106 as follows : @xmath107 it is evident that @xmath106 is in the class of theories under consideration .",
    "we will show that @xmath95 has a model if and only if @xmath106 has a model . to this end",
    ", we note that models of @xmath106 ( if exist ) are of the form @xmath108 , where @xmath109 .",
    "it is now easy to see that @xmath13 is a model of @xmath95 if and only if @xmath108 is a model of @xmath106 .",
    "thus , the claim and , consequently , the assertion , follows .",
    "as we noted , the argument for the remaining classes is similar .",
    "we only need to change the definition of @xmath104 and use clauses @xmath110 instead of @xmath111 ( there is no need to introduce @xmath105 , as clauses being the disjunctions of two negated atoms are allowed in formulas in each of the classes considered in ( 1 ) , ( 2 ) and ( 4 ) ) .",
    "@xmath74    we will now use lemma [ lem2 ] to establish the np - hardness of the eas problem for @xmath50 for several simple sets @xmath112 .",
    "[ lem1 ] if @xmath51 is any of :    1 .",
    "@xmath113\\}$ ] 2 .",
    "@xmath114,[0,0,1]\\}$ ] 3 .",
    "@xmath115,[0,2,0]\\}$ ] 4 .",
    "@xmath116,[0,2,0]\\}$ ] 5 .",
    "@xmath114,[1,2,0],[0,1,0]\\}$ ] 6 .",
    "@xmath114,[0,3,0]\\}$ ]    then the eas problem for @xmath50 is np - hard .",
    "proof : ( 1 ) the proof of the np - completeness of the eas problem for normal logic programs given by marek and truszczyski @xcite establishes the assertion ( 1 ) .",
    "\\(2 ) we will construct a reduction from the sat problem concerning the class considered in lemma [ lem2](4 ) .",
    "let @xmath95 be a cnf of the appropriate form .",
    "we denote by @xmath117 the set of all clauses in @xmath95 that are of the form @xmath118 , where @xmath119 .",
    "we denote by @xmath120 the set of all remaining clauses in @xmath95 ( all of them are disjunctions of at most three negative literals ) .",
    "for every clause @xmath121 in @xmath120 ( where , as we pointed out , @xmath122 ) , we introduce a fresh atom @xmath123 .",
    "next , we define @xmath124 to simplify notation we will write @xmath12 , @xmath125 and @xmath126 for @xmath127 , @xmath128 and @xmath129 , respectively",
    ".    we will now show that @xmath95 is satisfiable if and only if @xmath126 has an answer set . since @xmath130 , by lemma [ lem2](4 ) the assertion will follow .",
    "( @xmath131 ) let @xmath13 be an answer set of @xmath126 .",
    "it follows that @xmath13 is an answer set of @xmath12 and so , a minimal model of @xmath12 .",
    "let @xmath99 be a clause in @xmath95 .",
    "there are two cases .",
    "first , @xmath132 , where @xmath133 . in that case",
    ", @xmath134 is a rule in @xmath12 . since @xmath13 is a model of @xmath12",
    ", @xmath13 is a model of @xmath134 and , consequently , of @xmath99 .",
    "second , @xmath121 .",
    "we observe that @xmath135 ( @xmath13 being an answer set of @xmath126 is a model of @xmath125 ) . since @xmath13 is a minimal model of @xmath12 , there is @xmath136 , @xmath137 , such that @xmath138 ( otherwise @xmath139 would be a model of @xmath12 , contradicting the minimality of @xmath13 ) .",
    "thus , @xmath13 is a model of @xmath99 also in this case .",
    "consequently , @xmath95 is satisfiable .",
    "( @xmath140 ) let us assume that @xmath95 has a model , say @xmath13 .",
    "let @xmath91 be a minimal model of @xmath95 .",
    "it follows that @xmath70 is also a minimal model of @xmath117 , as every subset of @xmath70 is a model of @xmath120 .",
    "let us define @xmath141 .",
    "let @xmath7 be a clause in @xmath12 .",
    "if @xmath142 , then @xmath143 and so , @xmath144 is a model of @xmath7 .",
    "otherwise , @xmath145 , where @xmath121 is from @xmath120 and @xmath146 .",
    "since @xmath147 , @xmath144 is a model of @xmath7 .",
    "thus , @xmath144 is a model of @xmath12 .",
    "let @xmath148 be a model of @xmath12 .",
    "then @xmath149 is a model of every rule of the form @xmath134 in @xmath12 and , consequently , @xmath150 is a model of @xmath117 . since @xmath151 and @xmath70 is a minimal model of @xmath117 , @xmath152",
    "let @xmath153 , say @xmath121 . since @xmath70 is a model of @xmath99",
    ", there is @xmath154 , @xmath146 , such that @xmath155 .",
    "consequently , @xmath156 . as",
    "@xmath157 is a model of @xmath12 , @xmath158 .",
    "thus , @xmath159 .",
    "it follows that @xmath160 , that is , @xmath144 is a minimal model of @xmath12 .",
    "since @xmath161 and @xmath162 , @xmath144 is an answer set of @xmath163 .",
    "moreover , @xmath144 is a model of @xmath125 ( by the definition of @xmath144 ) and @xmath164 .",
    "thus , @xmath144 is an answer set of @xmath126 .",
    "( 3)-(6 ) in all the remaining cases , we exploit the fact that @xmath165 has an answer set if and only if @xmath12 has a model ( the same argument that we used in the proof of lemma [ lem22 ] applies ) .",
    "the latter problem for each of the cases ( 3)-(6 ) can be shown to be equivalent to the satisfiability problem for the classes considered in lemma [ lem2](1)-(4 ) , respectively . in each of these cases",
    "the problem is np - hard ( lemma [ lem2 ] ) , and so the assertion follows .",
    "@xmath74    the next lemma establishes conditions guaranteeing @xmath0-hardness of the eas problem .",
    "eiter and gottlob @xcite proved that given @xmath166,[1,3,0],[1,0,1]\\})$ ] , it is @xmath0-hard to decide whether @xmath12 has an answer set .",
    "the proof can be modified to the case when the class of input programs is restricted to @xmath167,[1,2,0],[1,0,1]\\})$ ] , as clauses of the arity @xmath168 $ ] can be simulated by clauses of arity @xmath169 $ ] . moreover , in the construction provided by eiter and gottlob , the only rule of the arity @xmath170 $ ] used is of the form @xmath171 , and it can be simulated by the rule ( constraint ) @xmath172 , which has the arity @xmath173 $ ] .",
    "thus , the @xmath0-hardness holds also for the class @xmath167,[1,2,0],[0,0,1]\\})$ ] of programs .",
    "we omit the details and state the result only .",
    "[ lem23 ] if @xmath51 is any of :    1 .",
    "@xmath114,[1,2,0],[0,0,1]\\}$ ] 2 .",
    "@xmath114,[1,2,0],[1,0,1]\\}$ ]    then the eas problem for @xmath50 is @xmath0-hard .    we will now derive the main result of this section . it provides a complete characterization of the complexity of the eas problem for the class @xmath50 . to state the result",
    "we introduce one more piece of notation . given @xmath174 , we write @xmath175 if for every @xmath46 there is @xmath176 such that @xmath36 . for instance , we have @xmath177 , \\{[\\infty , 0,0]\\ } \\preceq \\{[\\infty,\\infty , 1]\\}$ ] . clearly , if @xmath178 then @xmath179 .",
    "we will use this property frequently in proofs throughout the paper .",
    "[ thm : main ] let @xmath43 be finite .",
    "\\(a ) if    1 .   @xmath180,[0,0,0]\\}$ ] , or 2 .",
    "@xmath181,[0,\\infty,\\infty]\\}$ ] , or 3 .",
    "@xmath182,[0,1,0]\\}$ ] , or 4 .",
    "@xmath183 \\in{\\mathcal{a}}{\\,|\\;}i+j\\leq 2\\}$ ] ,    then the eas problem for @xmath50 is in @xmath64 .",
    "\\(b ) otherwise , if    1 .   @xmath184,[0,\\infty,\\infty]\\}$ ] , or 2 .",
    "@xmath185,[0,\\infty,\\infty]\\}$ ] , or 3 .",
    "@xmath180,[0,\\infty,0]\\}$ ] ,    then the eas problem for @xmath50 is @xmath82-complete .",
    "\\(c ) otherwise , the eas problem for @xmath50 is @xmath0-complete .",
    "proof : the claim ( a ) follows directly from lemma [ lem21 ] .",
    "thus , let us assume that @xmath51 does not fall under the scope of ( a ) and satisfies the assumptions of ( b ) . by lemma [ lem22 ] , the latter implies that the eas problem for @xmath50 is in np .    if @xmath113\\}\\preceq\\delta$ ] or @xmath114,[0,0,1]\\}\\preceq\\delta$ ] , the np - hardness of the eas problem for @xmath50 follows from lemma [ lem1 ] , parts ( 1 ) and ( 2 ) , respectively .",
    "thus , let us assume that @xmath113\\}\\not\\preceq \\delta$ ] and @xmath114,[0,0,1]\\}\\not\\preceq\\delta$ ] .    since @xmath113\\}\\not\\preceq\\delta$",
    "] , we have @xmath186,$ ] @xmath76\\}$ ] . since @xmath51 does not satisfy the condition ( a2 ) , @xmath114\\}\\preceq\\delta$ ] . since @xmath114,[0,0,1]\\ } \\not\\preceq\\delta$ ] , @xmath187\\}\\not\\preceq\\delta$ ] .",
    "thus , @xmath188,[0,\\infty,0]\\}$ ] .    since @xmath51",
    "does not satisfy the condition ( a1 ) , @xmath189\\}\\preceq \\delta$ ] .",
    "similarly , since @xmath51 does not satisfy the condition ( a3 ) , @xmath190\\}\\preceq \\delta$ ] or @xmath191\\}\\preceq \\delta$ ] .",
    "we also have that @xmath51 does not satisfy the condition ( a4 ) .",
    "thus , there is @xmath46 such that @xmath192 . since we already proved that @xmath114\\}\\preceq\\delta$ ] , it follows that at least one of the following conditions holds : @xmath115,[0,2,0]\\}\\preceq\\delta$ ] , @xmath116,[0,2,0]\\}\\preceq\\delta$ ] , @xmath114,[1,2,0],[0,1,0]\\}\\preceq\\delta$ ] , or @xmath114,[0,3,0]\\}\\preceq\\delta$ ] .",
    "thus , the np - hardness of the eas problem for @xmath50 follows again from lemma [ lem1 ] and completes the proof of ( b ) .    to prove ( c ) , let us assume that @xmath51 does not fall under the scope of ( b ) .",
    "since @xmath51 does not satisfy ( b1 ) , @xmath114\\ } \\preceq\\delta$ ] .",
    "similarly , since @xmath51 does not satisfy ( b2 ) , @xmath190\\}\\preceq\\delta$ ] . finally , since @xmath51 does not satisfy ( b3 ) , @xmath187\\}\\preceq\\delta$ ] or @xmath113\\}\\preceq\\delta$ ] .",
    "thus , the @xmath0-hardness follows by lemma [ lem23 ] . since the eas problem is in @xmath0 even without any restrictions on the class of programs , both ( c ) and the assertion of the lemma follows .",
    "the question we study now is whether there are interesting classes of programs of the form @xmath50 , when @xmath51 is infinite .",
    "the main result of this section is that by allowing @xmath51 to be infinite , we do not obtain _ any _ new classes of programs . in other words , for every class of programs of the form @xmath50 there is a finite set @xmath193 such that @xmath194 .",
    "a sequence @xmath195 is _ monotone _ ( _ strictly _ monotone ) if for every @xmath196 , @xmath197 ( @xmath198 , respectively ) .",
    "let @xmath195 be a _",
    "sequence of elements of @xmath28 .",
    "we define the _ limit _ of this sequence as @xmath199 $ ] , where @xmath200 , for @xmath38 . we stress that we do not consider transfinite sequences here .",
    "all sequences have the set of natural numbers as their domain .",
    "let @xmath43 .",
    "a monotone sequence @xmath201 of elements of @xmath51 is _ maximal _ if there is _ no _ @xmath46 such that @xmath202 .",
    "we define @xmath203 to be the set of the limits of maximal sequences in @xmath51 .",
    "we have the following two lemmas ( we omit the proof of the first one as it is evident ) .    [ lem24 ]",
    "let @xmath204 be a strictly monotone sequence of elements from @xmath28 .",
    "for every @xmath205 , if @xmath206 , then there is @xmath196 such that @xmath207 .",
    "[ prop11 ] let @xmath43 and @xmath46 .",
    "then , there is @xmath208 such that @xmath209 .",
    "proof : let @xmath210 .",
    "if @xmath96 has a maximal element , say @xmath211 , a sequence with each term equal to @xmath211 is maximal .",
    "its limit , also equal to @xmath211 , clearly satisfies @xmath212 and @xmath213 .",
    "thus , the assertion follows .    otherwise , @xmath96 has no maximal elements .",
    "let @xmath214 be any element in @xmath96 ( we note that @xmath215 , as @xmath216 ) .",
    "let @xmath10 and let @xmath217 be a strictly monotone sequence of @xmath196 elements in @xmath96 , for some @xmath10 .",
    "since @xmath96 has no maximal elements , @xmath96 contains elements that are strictly greater than @xmath218 .",
    "let us select as @xmath219 an element @xmath220 such that @xmath221 and @xmath222 holds on as many positions @xmath38 as possible .",
    "an infinite sequence we define in this way , we will denote it by @xmath34 , is strictly monotone .",
    "let us assume that there is @xmath223 such that @xmath224 .",
    "it follows that there is @xmath136 , @xmath225 , such that @xmath226 .",
    "thus , @xmath227 , for some integer @xmath228 , and there is @xmath229 such that @xmath230 . since @xmath231 and @xmath232 , the number of positions @xmath154 such that @xmath233 is strictly smaller than the number of positions @xmath154 such that @xmath234 . since @xmath235 , that contradicts the way we constructed the sequence @xmath34 .",
    "it follows that the sequence @xmath195 is maximal for @xmath51 and so , the assertion follows in this case , too .",
    "@xmath74    we now have the following properties .    [ prop7b ] for every @xmath43 , @xmath236 .    proof",
    ": to prove the assertion , it is enough to show that for every _ arity _ @xmath34 ( no occurrence of @xmath29 ) , @xmath237 if and only if @xmath238 .",
    "let us first assume that @xmath239 .",
    "it follows that there is an element @xmath240 such that @xmath209 . by lemma [ prop11 ] ,",
    "there is @xmath241 such that @xmath242 .",
    "thus , @xmath243 and so , @xmath238 .",
    "conversely , let @xmath238 .",
    "it follows that there is @xmath244 such that @xmath36 . since @xmath245",
    ", there is a monotone sequence @xmath204 of elements of @xmath51 such that its limit is @xmath246 . without loss of generality",
    "we can assume that either starting with some @xmath247 , the sequence @xmath204 is constant , or the sequence @xmath246 is strictly monotone .",
    "in the first case , @xmath248 . since @xmath249 , @xmath239 . in the second case",
    ", lemma [ lem24 ] implies that there is @xmath196 such that @xmath207 , and again @xmath239 follows .",
    "@xmath74    [ prop7a ] for every @xmath51 , @xmath203 is an antichain .",
    "proof : let us assume that @xmath203 is not an antichain .",
    "then there are @xmath250 such that @xmath251 .",
    "we have that @xmath252 ( otherwise , the sequence that @xmath34 is a limit of would not be maximal ) .",
    "consequently , @xmath253 is the limit of a strictly monotone sequence of elements from @xmath51 . by lemma [ lem24 ] ,",
    "there is an element @xmath246 in the sequence such that @xmath41 .",
    "that contradicts the fact that @xmath34 is the limit of a maximal sequence and yields the assertion .",
    "[ prop3 ] every antichain in the partially ordered set @xmath254 is finite .",
    "proof : we will first prove that every sequence @xmath255\\}_{k=1}^\\infty$ ] such that ( i ) @xmath256 , for @xmath257 , and ( ii ) the set of distinct elements occurring in the sequence is infinite , contains an infinite strictly monotone subsequence .",
    "we start by observing that by ( ii ) one can select an infinite subsequence of @xmath258 , in which all elements are distinct .",
    "thus , without loss of generality , we may assume that , in fact , all elements in @xmath258 are distinct . if there is @xmath259 such that @xmath260 is infinite , then the assertion is evident .",
    "indeed , the sequence @xmath261 contains no repetitions ( as @xmath258 contains no repetitions ) and , consequently , contains a strictly increasing subsequence .",
    "thus , let us assume that for every @xmath259 , the set @xmath262 is finite .",
    "it follows that the sequence @xmath263 contains a strictly increasing subsequence , say @xmath264 .",
    "if there is @xmath99 that occurs in the corresponding sequence @xmath265 infinitely many times , then these occurrences yield a strictly monotone subsequence of @xmath266\\}_{j=1}^\\infty$ ] and , consequently , a strictly monotone subsequence of @xmath267\\}_{k=1}^\\infty$ ] .",
    "otherwise , @xmath268 contains infinitely many elements .",
    "thus , it contains a strictly monotone subsequence which , together with the corresponding @xmath259 s , yields a strictly monotone subsequence of @xmath267\\}_{k=1}^\\infty$ ] .    to prove the assertion of the proposition ,",
    "let us assume that there is an _",
    "antichain @xmath269 in @xmath254 .",
    "let @xmath195 be any enumeration of the elements of @xmath269 ( without repetitions ) .",
    "if there is @xmath270 such that @xmath271 is infinite , then the fact proved above yields a contradiction .",
    "thus , for every @xmath272 , the set @xmath273 is finite .",
    "since @xmath269 is infinite , there is an infinite subsequence @xmath246 of @xmath34 such that for every @xmath274 , @xmath275 . as @xmath269 is an antichain ,",
    "the sequence @xmath276\\}_{n= 1}^\\infty$ ] contains no repeating elements . by the property proved above",
    ", it contains an infinite strictly monotone subsequence , a contradiction .",
    "@xmath74    these properties imply the main result of this section .",
    "it asserts that every class of programs @xmath50 can be defined by means of a finite set @xmath277 that is an antichain in @xmath278 .",
    "[ cor11 ] for every set @xmath43 there is a finite subset @xmath193 such that @xmath277 is an antichain and @xmath279 .",
    "proof : let us define @xmath280 . by propositions [ prop7a ] and [ prop3 ] , @xmath277 is a finite antichain in @xmath281 , and by proposition [ prop7b ] , @xmath279 .",
    "thus , the theorem follows .",
    "the eas problem is just one example of a reasoning task that arises in the context of disjunctive logic programs with the answer - set semantics .",
    "there are several other tasks that are of interest , too .",
    "they concern deciding whether a program nonmonotonically entails a literal , that is an atom , say @xmath100 , or its negation @xmath282 .",
    "we recall that if @xmath13 is a set of atoms ( an interpretation ) and @xmath100 is an atom , then @xmath283 if @xmath284 , and @xmath285 if @xmath286 . for a disjunctive logic program @xmath12 and a literal @xmath287",
    "we say that    1 .",
    "@xmath12 _ skeptically entails _",
    "@xmath287 , written @xmath288 , if @xmath289 , for every answer set @xmath13 of @xmath12 ; 2 .",
    "@xmath12 _ credulously entails _",
    "@xmath287 , written @xmath290 , if there is an answer set @xmath13 of @xmath12 such that @xmath289 .",
    "we note that @xmath291 if and only if @xmath292 , where @xmath293 is @xmath287 s _ dual _ literal .",
    "thus , to establish fully the complexity of deciding nonmonotonic entailment it is enough to focus on deciding whether @xmath294 and @xmath295 , where @xmath100 is an atom .",
    "these two decision tasks were studied by eiter and gottlob @xcite , who proved that , in general , the first one is @xmath0-complete and the second one is @xmath296-complete .",
    "reasoning with answer sets is related to circumscription and closed - world reasoning with propositional theories .",
    "a detailed study of the complexity of those forms of reasoning was conducted by cadoli and lenzerini @xcite . using theorem [ thm : main ] and one of the results from that paper ( which we state in the proof below )",
    ", one can characterize in terms of our definition schema the complexity of deciding , given a program @xmath12 and an atom @xmath100 , whether @xmath294 and @xmath297 .",
    "the two problems are addressed in the following two theorems .",
    "[ thm : cr ] let @xmath43 be finite .",
    "\\(a ) if    1 .   @xmath181,[0,\\infty,\\infty]\\}$ ] , or 2 .",
    "@xmath182,[0,1,0]\\}$ ] , or 3 .",
    "@xmath183 \\in{\\mathcal{a}}{\\,|\\;}i+j\\leq 2\\}$ ] ,    then the problem to decide whether @xmath294 , where @xmath298 and @xmath100 is an atom , is in @xmath64 .",
    "\\(b ) otherwise , if    1 .   @xmath184,[0,\\infty,\\infty]\\}$ ] , or 2 .",
    "@xmath185,[0,\\infty,\\infty]\\}$ ] , or 3 .",
    "@xmath180,[0,\\infty,0]\\}$ ] ,    then the problem to decide whether @xmath294 , where @xmath298 and @xmath100 is an atom , is @xmath82-complete .",
    "\\(c ) otherwise , the problem to decide whether @xmath294 , where @xmath165 and @xmath100 is an atom , is @xmath299-complete .",
    "proof : it is well known that @xmath12 has an answer set @xmath13 such that @xmath300 ( that is , @xmath301 ) if and only if @xmath302 has an answer set .",
    "let @xmath43 be finite and let us define @xmath303\\}$ ] . clearly , if @xmath165 , then @xmath304 .",
    "moreover , if @xmath51 falls under the scope of ( a ) ( ( a ) or ( b ) , respectively ) of this theorem then @xmath277 falls under the scope of ( a ) ( ( a ) or ( b ) , respectively ) of theorem [ thm : main ] .",
    "consequently , the upper bound follows by theorem [ thm : main ] .    to prove the lower bounds , we first consider the case when @xmath51 does not satisfy any of the conditions listed in ( a ) and @xmath188,[0,0,0]\\}$ ] ( thus , in particular , @xmath51 falls under the scope of ( b ) ) .",
    "since @xmath51 does not fall under the condition ( a1 ) , @xmath114\\}\\preceq\\delta$ ] .",
    "similarly , since @xmath51 does not fall under the condition ( a2 ) , @xmath190\\}\\preceq\\delta$ ] .",
    "let @xmath305 , where @xmath306,[1,2,0],[0,1,0]\\}$ ] .",
    "we select a fresh atom @xmath100 and define @xmath307 . clearly , @xmath308 .",
    "moreover , @xmath12 has an answer set if and only if @xmath309 .",
    "thus , the claim follows by lemma [ lem1](5 ) .",
    "from now on , we assume that @xmath310,[0,0,0]\\}$ ] and @xmath51 does not satisfy any of the conditions listed in ( a ) .",
    "let us also assume that @xmath51 falls under the scope of ( b ) or ( c ) of this theorem .",
    "it follows that @xmath51 falls under the scope of the corresponding case of theorem [ thm : main ] .    if @xmath51 satisfies ( b1 ) , then @xmath113\\}\\preceq\\delta$ ] ( otherwise , ( a1 ) would hold ) .",
    "let @xmath165 .",
    "let @xmath311 be fresh atoms and let us set @xmath312 .",
    "if @xmath51 does not satisfy ( b1 ) , @xmath114\\ } \\preceq\\delta$ ] .",
    "let @xmath165 , and let us set @xmath313 , where @xmath311 are fresh atoms . clearly , in either case",
    ", @xmath314 , and @xmath12 has an answer set if and only if @xmath315 .",
    "thus , all the remaining lower bounds follow from theorem [ thm : main ] .",
    "@xmath74 .",
    "[ thm : sk ] let @xmath43 be finite .",
    "\\(a ) if @xmath181,[0,\\infty,\\infty]\\}$ ] , then the problem to decide whether @xmath295 , where @xmath85 and @xmath100 is an atom , is in @xmath64 .",
    "\\(b ) otherwise , if    1 .",
    "@xmath184,[0,\\infty,\\infty]\\}$ ] , or 2 .",
    "@xmath185,[0,\\infty,\\infty]\\}$ ] ,    then the problem to decide whether @xmath295 , where @xmath85 and @xmath100 is an atom , is @xmath316-complete .",
    "\\(c ) otherwise , the problem to decide whether @xmath295 , where @xmath165 and @xmath100 is an atom , is @xmath317-complete .",
    "proof : it is well known that @xmath12 has an answer set such that @xmath318 ( that is , @xmath319 if and only if @xmath320 has an answer set .",
    "that observation implies all upper bound results ( by a similar argument as that used in the proof of the previous theorem ) .",
    "we will now prove the lower bounds for the cases ( b ) and ( c ) .",
    "let us assume that @xmath51 does not satisfy ( a ) but falls under the scope of ( b ) .",
    "if @xmath51 satisfies ( b1 ) , then @xmath113\\}\\preceq\\delta$ ] .",
    "let @xmath165 and let @xmath100 and @xmath321 be fresh atoms .",
    "we note that @xmath12 has an answer set if and only if @xmath322 has an answer set @xmath13 such that @xmath88 or , equivalently , if and only if @xmath323 .",
    "thus , the hardness follows ( cf .",
    "lemma [ lem1](1 ) ) .",
    "let us assume then that @xmath51 does not satisfy ( b1 ) .",
    "then , we have that @xmath114\\}\\preceq\\delta$ ] .",
    "it follows from the results of cadoli and lenzerini @xcite that it is np - complete to decide whether a given 2cnf theory whose every clause is a disjunction of two atoms has a minimal model that contains a given atom @xmath100 . as minimal models of such theories",
    "are precisely answer sets of the corresponding disjunctive program , it follows that given a program @xmath165 and an atom @xmath100 , it is conp - hard to decide whether @xmath295 .",
    "finally , let us assume that neither ( a ) nor ( b ) apply to @xmath51 .",
    "then @xmath169\\in\\delta$ ] and @xmath324\\in\\delta$ ] .",
    "eiter and gottlob @xcite proved that if @xmath166,[1,3,0]\\})$ ] and @xmath100 is an atom then it is @xmath296-hard to decide whether @xmath295 .",
    "that result can be strengthened to the case when @xmath166,[1,2,0]\\})$ ] , as clauses of the arity @xmath168 $ ] can be simulated by clauses of arity @xmath169 $ ] ( cf . the comments preceding lemma [ lem23 ] ) .",
    "@xmath74    we note that credulous reasoning is simple ( in p or in np ) for several classes of programs . in contrast , there are fewer classes of programs , for which skeptical reasoning is simple ( in p or conp ) .",
    "the main reason behind this asymmetry is that in the cases ( a2 ) , ( a3 ) and ( b3 ) of theorem [ thm : cr ] ( positive programs ) answer sets and minimal models coincide .",
    "thus , in these cases , credulous reasoning asks for the existence of a _ minimal _ model that does not contain an atom @xmath100 , which is equivalent to the existence of a model ( not necessarily minimal ) that does not contain @xmath100 . in other words , the requirement of minimality becomes immaterial ( one source of complexity disappears ) .",
    "this is not so with skeptical reasoning , where not having @xmath100 in any minimal model is not the same as not having @xmath100 in any model .",
    "a similar comparison of skeptical and credulous reasoning for positive programs was offered by eiter and gottlob for the coarser setting of classes of programs they considered @xcite .",
    "next , we consider briefly an alternative way , in which classes of programs could be described by means of arities of rules .",
    "when defining the class @xmath50 , we view each element @xmath46 as a shorthand for the set of all arities @xmath246 such that @xmath325 . in other words , @xmath51 is an _ implicit _ representation of the set of all allowed arities : not only those arities that are explicitly listed in @xmath51 are legal but also those that are `` dominated '' by them .",
    "there is another , more direct ( more explicit ) , way to use arities to define classes of programs .",
    "let @xmath43 be a set of _ arities _ , that is , we now do not allow superarities in @xmath51 .",
    "we define @xmath326 to consist of all finite programs @xmath12 such that for every rule @xmath45 , the arity @xmath34 of @xmath7 belongs to @xmath51 .",
    "thus , when defining the class @xmath326 , @xmath51 serves as an _ explicit _ specification of the set of allowed arities .    one can show that the results of section [ finite ] can be adapted to the setting of classes of the form @xmath326 , where @xmath51 is a set of arities .",
    "in particular , we have the following result .",
    "[ thm : ex ] let @xmath43 be a set of arities .",
    "if there are no @xmath10 and @xmath327 such that @xmath328\\}\\in\\delta$ ] , then the eas problem for @xmath326 is in @xmath64 .",
    "otherwise :    \\(a ) if    1 .",
    "@xmath180,[0,0,0]\\}$ ] , or 2 .",
    "@xmath181,[0,\\infty,\\infty]\\}$ ] , or 3 .",
    "@xmath182,[0,1,0]\\}$ ] , or 4 .",
    "@xmath183 \\in{\\mathcal{a}}{\\,|\\;}i+j\\leq 2\\}$ ] ,    then the eas problem for @xmath326 is in @xmath64 .",
    "\\(b ) otherwise , if    1 .",
    "@xmath184,[0,\\infty,\\infty]\\}$ ] , or 2 .",
    "@xmath185,[0,\\infty,\\infty]\\}$ ] , or 3 .",
    "@xmath180,[0,\\infty,0]\\}$ ] ,    then the eas problem for @xmath326 is @xmath82-complete .",
    "\\(c ) otherwise , the eas problem for @xmath326 is @xmath299-complete .",
    "proof ( sketch ) : let us first assume that there are no @xmath10 and @xmath327 such that @xmath328\\}\\in\\delta$ ] , and let @xmath329 .",
    "then every rule in @xmath17 has at least one positive atom in the body and so , @xmath330 is the unique answer set of @xmath17 .",
    "it can be verified in polynomial time whether @xmath330 is a model of @xmath18 .",
    "thus , the eas problem for programs in @xmath326 can be decided in polynomial time .    to prove the remaining part of the assertion",
    ", we note that the upper bound is implied directly by theorem [ thm : main ] ( as @xmath331 ) . to prove the lower bounds",
    ", we observe that if there are @xmath10 and @xmath327 such that @xmath328\\}\\in\\delta$ ] , then the eas problem for @xmath50 can be reduced to the eas problem for @xmath326 . indeed , let @xmath332 and let @xmath45 .",
    "then there is @xmath46 such that @xmath333 , where @xmath48 is the arity of @xmath7 .",
    "having @xmath334\\}\\in\\delta$ ] , where @xmath10 , or @xmath328 \\ } \\in\\delta$ ] , where @xmath335 , allows us to `` simulate '' the effect of @xmath7 with a rule @xmath336 of arity @xmath34 obtained by repeating atoms in the head of @xmath7 , and by inserting an atom @xmath100 and a negated atom @xmath337 , where @xmath100 and @xmath259 are fresh , as many times as necessary in the body of @xmath7 to `` reach '' the arity @xmath34 .",
    "we also add the rule @xmath338 or @xmath339 , where @xmath321 is another fresh atom and @xmath100 and @xmath340 are repeated @xmath196 , or @xmath196 and @xmath228 times , respectively .",
    "lastly , we will now consider the problem of the existence of supported models , the _ espm _ problem , for short . let @xmath13 be a set of atoms . a logic program rule @xmath7 is",
    "_ @xmath13-applicable _ if @xmath13 satisfies the body of @xmath7 ( that is , satisfies every literal in the body ) . for a logic program @xmath12 and a set of atoms @xmath13 , we define @xmath341 to consist of the heads of all rules in @xmath17 that are @xmath13-applicable .",
    "we say that a set of atoms @xmath13 is a _ supported _ model of @xmath12 if @xmath13 is a minimal model of @xmath341 and a model of @xmath18 @xcite .",
    "the following properties of supported models are well known .    1",
    ".   every supported model of a program @xmath12 is a model of @xmath12 .",
    "if @xmath13 is a supported model of @xmath12 then every atom in @xmath13 occurs in the head of some @xmath13-applicable rule in @xmath12 and is the _ only _ atom from @xmath13 in the head of that rule .",
    "3 .   every answer set of a program @xmath12 is a supported model of @xmath12 .",
    "if all rules in @xmath17 are _ purely negative _ ( their bodies contain no non - negated occurrences of atoms ) , then every supported model of @xmath12 is an answer set of @xmath12 .",
    "if @xmath12 is a finite proper horn program , then @xmath12 has the greatest supported model , and it can be computed in polynomial time .",
    "the espm problem is np - complete .",
    "the main result of this section is a _ dichotomy _",
    "result for the espm problem ( by the property ( s6 ) , even for the general class of all disjunctive programs , the espm problem is in the class np ) .",
    "specifically , we will show that for every set @xmath43 the espm problem for programs in @xmath50 is either in p or is np - complete , and we will characterize sets @xmath51 , for which the former holds .",
    "the proof relies on a series of lemmas providing upper and lower bounds for the complexity of the espm problem for programs in @xmath50 for some particular sets @xmath43 .",
    "we note that thanks to our results from section [ infinite ] , it is enough to restrict attention to the case of finite sets @xmath51 only .",
    "thus , we adopt this assumption here .",
    "we start with a lemma that , for some programs , connects the problem of the existence of a supported model to that of the existence of a model ( and so , to the sat problem ) .",
    "[ lem : supp1 ] let @xmath65,[0,\\infty,0]\\})$ ] .",
    "then @xmath12 has a supported model if and only if @xmath12 has a model .",
    "proof : thanks to the property ( s1 ) above , only the `` if '' part needs to be proved .",
    "thus , let us assume that @xmath13 is a model of @xmath12 .",
    "it follows that @xmath13 is a model of @xmath17 .",
    "let @xmath70 be a minimal model of @xmath17 such that @xmath91 ( its existence follows by the finiteness of @xmath12 , cf .",
    "the definition of @xmath50 ) .",
    "then @xmath70 is an answer set of @xmath17 and , by the property ( s3 ) , a supported model of @xmath17 .",
    "moreover , since @xmath342\\})$ ] and @xmath13 is a model of @xmath18 , @xmath70 is a model of @xmath18 .",
    "thus , @xmath70 is a supported model of @xmath12 . @xmath74    next , we present and prove a lemma that exhibits classes of programs , for which the espm problem is in the class p.    [ lem : supp : upper ] let @xmath51 satisfy at least one of the following conditions :    1 .",
    "@xmath343,[0,\\infty,\\infty]\\}$ ] 2 .",
    "@xmath180,[0,0,0]\\}$ ] 3 .",
    "@xmath182,[0,1,0]\\}$ ] 4 .",
    "@xmath181,[0,\\infty,0]\\}$ ] 5 .",
    "@xmath344,[1,1,0],[0,2,0]\\}$ ] 6 .",
    "@xmath181,[0,0,\\infty]\\}$ ] 7 .",
    "@xmath345,[0,1,\\infty]\\}$ ] .",
    "then the espm problem for programs in @xmath50 is in p.    proof : ( 1 ) if @xmath346,[0,\\infty,\\infty])$ ] , then @xmath17 is just a set of facts .",
    "this set of facts , say @xmath13 , is the only supported model of @xmath17 . thus ,",
    "if @xmath13 satisfies the constraints in @xmath18 , @xmath13 is a supported model of @xmath12 .",
    "otherwise , @xmath12 has no supported models . since checking whether a set of atoms satisfies constraints in @xmath18 is a polynomial - time task , checking whether @xmath346,[0,\\infty , \\infty])$ ] has",
    "a supported model is a polynomial - time task , too .",
    "( 2)-(5 ) in each of these cases , there is a polynomial - time algorithm for testing whether @xmath165 has a model .",
    "thus , the claim follows from lemma [ lem : supp1 ] .",
    "\\(6 ) to decide whether @xmath66,[0,0,\\infty]\\})$ ] has a supported model , we proceed as follows .",
    "first , we compute the greatest supported model of @xmath17 ( cf . the property ( s5 ) ) .",
    "let us denote this supported model by @xmath13 .",
    "since @xmath347\\})$ ] , @xmath17 has a supported model that satisfies @xmath18 if and only if @xmath13 satisfies @xmath18 . thus , once we compute @xmath13 , we check whether @xmath13 satisfies @xmath18 .",
    "if so , we decide the espm problem for @xmath12 in positive ; otherwise , we decide the espm problem for @xmath12 in negative .",
    "since @xmath13 can be computed in polynomial time ( again , the property ( s5 ) ) , the claim follows .",
    "\\(7 ) the key to a proof is a certain transformation of programs in @xmath348,[0,1,\\infty]\\})$ ] that does not affect the status of the espm problem and runs in polynomial time .",
    "let @xmath349,[0,1,\\infty]\\})$ ] .    1 .",
    "if @xmath350 contains a fact , say @xmath100 , remove all proper rules with @xmath100 in the head , and all constraints with a negated occurrence of @xmath100 ; then remove @xmath100 from all remaining rules .",
    "if there is an atom , say @xmath100 , that occurs in @xmath12 but never in the head of a rule , remove from @xmath12 all rules with a non - negated occurrence of @xmath100 in the body and remove all negated occurrences of @xmath100 from the remaining rules .",
    "if there is an atom , say @xmath100 , such that @xmath351 is a constraint and @xmath100 appears in the head of a proper rule in @xmath12 , say @xmath352 , remove the rule from @xmath12 and add the constraint @xmath353 .    for each rule",
    "above , one can check that @xmath12 has a supported model if and only if the program resulting from applying the rule has a supported model .",
    "it is also clear that the process of applying the steps ( 1)-(3 ) will terminate after polynomially many iterations . indeed ,",
    "in each case , when we apply a rule , we decrease the size of the program .",
    "it follows that the process runs in polynomial time .",
    "let us denote by @xmath354 the program that results when no step is applicable .",
    "clearly , every atom that appears in the body of a rule in @xmath355 appears also in the head of a rule in @xmath355 .",
    "thus , the set of atoms , say @xmath356 , that appear in the heads of rules in @xmath355 is a supported model of @xmath355 .",
    "moreover , for every constraint @xmath351 , @xmath357 , and for every atom @xmath100 occurring negated in a constraint , @xmath358 .",
    "if @xmath354 contains a contradictory constraint ( empty head and empty body ) then it has no models and so no supported models .",
    "thus , @xmath12 has no supported models either .",
    "otherwise , @xmath356 satisfies the constraints of @xmath354 and so is a supported model of @xmath354 .",
    "thus , @xmath12 has a supported model , too .",
    "@xmath74    the next lemma exhibits several simple classes of programs @xmath50 for which the espm problem is np - complete .",
    "[ lem : supp : lower ] let @xmath51 be one of the following sets :    1 .",
    "@xmath359\\}$ ] 2 .",
    "@xmath360,[0,0,1]\\}$ ] 3 .",
    "@xmath361,[0,2,0]\\}$ ] 4 .",
    "@xmath362,[0,2,0]\\}$ ] 5 .",
    "@xmath360,[1,2,0],[0,1,0]\\}$ ] 6 .",
    "@xmath360,[0,3,0]\\}$ ] 7 .",
    "@xmath363,[0,2,0],[0,0,1]\\}$ ] 8 .",
    "@xmath364,[0,1,0],[0,0,1]\\}$ ] .",
    "then the espm problem for programs in @xmath50 is np - complete .",
    "proof : ( 1)-(2 ) in each case , if @xmath332 , then supported models of @xmath12 and answer sets of @xmath12 coincide ( by the properties ( s3 ) and ( s4 ) ) .",
    "thus , the result follows from lemma [ lem1](1 - 2 ) , respectively .",
    "( 3)-(6 ) in each of these cases , the espm problem is equivalent to the problem of the existence of a model of the program ( by lemma [ lem : supp1 ] ) . since cnf theories considered in lemma [ lem2](1 - 4 ) can be written as programs in the classes considered in ( 3 - 6 ) , respectively , and the rewriting does not affect models , the assertions follow by lemma [ lem2 ] .",
    "\\(7 ) let @xmath95 be a cnf formula whose every clause has three literals , and let @xmath96 be the set of atoms occurring in @xmath95 . for each atom @xmath97 we introduce a fresh atom @xmath98 .",
    "moreover , for each clause @xmath99 , we introduce a fresh atom @xmath104 .",
    "we define a program @xmath365 as follows .",
    "we include in @xmath365 clauses of the form @xmath366 , @xmath367 , and @xmath368 , for every @xmath369 .",
    "next , for each clause @xmath99 and each atom @xmath370 that occurs non - negated in @xmath99 , we include in @xmath365 the clause @xmath371 , and for each atom @xmath372 that occurs negated in @xmath99 , we include in @xmath365 the clause @xmath373 .",
    "finally , we include in @xmath365 all clauses @xmath374 , where @xmath99 is a clause .",
    "clearly , @xmath365 belongs to @xmath348,[0,2,0],[0,0,1]\\})$ ] .",
    "let @xmath13 be a model of @xmath95 .",
    "we define @xmath375 .",
    "one can check that @xmath23 is a supported model of @xmath365 .",
    "conversely , let @xmath23 be a supported model of @xmath365 .",
    "let @xmath376 .",
    "let @xmath99 be a clause in @xmath95 .",
    "it follows that @xmath377 .",
    "thus , either @xmath99 has a non - negated atom @xmath370 , such that @xmath378 , or a negated atom @xmath372 , such that @xmath379 . in the first case , @xmath380 , and so , @xmath13 is a model of @xmath99 . in the second case ,",
    "@xmath381 ( due to the constraint @xmath382 ) and so , @xmath13 is a model of @xmath99 , too .",
    "thus , @xmath13 is a model of @xmath95 .",
    "it follows that the satisfiability problem for 3cnf formulas can be reduced to the espm problem for @xmath348,[0,2,0],[0,0,1]\\})$ ] , which implies the assertion .",
    "\\(8 ) we can use a similar reduction to the one we employed in ( 7 ) .",
    "we need one more fresh atom , say @xmath105 and we modify @xmath365 by replacing each constraint @xmath368 with @xmath383 , and by adding the constraint @xmath384 . by this change ,",
    "we `` simulate ''",
    "the constraints @xmath368 within the syntactic confines of the class @xmath385,[0,1,0],[0,0,1]\\})$ ] and so , do not affect the existence of supported models . @xmath74    we are now ready to establish the main result of this section .",
    "[ thm : main : supp ] let @xmath43 . the espm problem for @xmath50 is in p if @xmath51 satisfies at least one of the following conditions :    1 .",
    "@xmath343,[0,\\infty,\\infty]\\}$ ] 2 .",
    "@xmath180,[0,0,0]\\}$ ] 3 .",
    "@xmath182,[0,1,0]\\}$ ] 4 .",
    "@xmath181,[0,\\infty,0]\\}$ ] 5 .",
    "@xmath344,[1,1,0],[0,2,0]\\}$ ] 6 .",
    "@xmath181,[0,0,\\infty]\\}$ ] 7 .",
    "@xmath345,[0,1,\\infty]\\}$ ] .",
    "otherwise , the espm problem for @xmath50 is np - complete .",
    "proof : if @xmath51 satisfies any of the conditions listed above , the assertion follows by lemma [ lem : supp : lower ] . thus , let us assume otherwise .",
    "we will show that the espm problem for @xmath50 is np - complete . by the property ( s6 )",
    ", it suffices to show the np - hardness .",
    "if @xmath170\\preceq\\delta$ ] , then the np - hardness of the espm problem for @xmath50 follows by lemma [ lem : supp : lower ] .",
    "thus , let @xmath170\\not\\preceq\\delta$ ] . under this assumption",
    ", we have @xmath180,$ ] @xmath76\\}$ ] .",
    "we will first assume that @xmath173\\preceq\\delta$ ] .",
    "if also @xmath324\\preceq \\delta$ ] , lemma [ lem : supp : lower](2 ) applies and implies the assertion .",
    "thus , we can assume that @xmath324\\not\\preceq\\delta$ ] .",
    "consequently , @xmath181,[0,\\infty,\\infty]\\}$ ] . since @xmath386,[0,0,\\infty]\\}$ ]",
    ", @xmath58\\preceq\\delta$ ] .",
    "if also @xmath169 \\preceq\\delta$ ] , then lemma [ lem : supp : lower](8 ) applies .",
    "otherwise , @xmath345,[0,\\infty,\\infty]\\}$ ] . since @xmath387,[0,1,\\infty]\\}$ ] , @xmath388\\preceq\\delta$ ] .",
    "similarly , since @xmath389,[0,\\infty,\\infty]\\}$ ] , @xmath390\\preceq\\delta$ ] .",
    "thus , lemma [ lem : supp : lower](7 ) applies .",
    "we can therefore assume that @xmath173\\not\\preceq\\delta$ ] .",
    "it follows that @xmath180 , [ 0,\\infty,0]\\}$ ] . since @xmath391 , [ 0,0,0]\\}$ ] , @xmath58\\preceq\\delta$ ] .",
    "let us assume that @xmath392\\preceq\\delta$ ] .",
    "if also @xmath388\\preceq\\delta$ ] , then lemma [ lem : supp : lower](3 ) applies .",
    "otherwise , we have @xmath393 , [ 0,1,0]\\}$ ] . since @xmath394 , [ 0,1,0]\\}$ ] , @xmath169\\preceq\\delta$ ] and so",
    ", lemma [ lem : supp : lower](5 ) applies . that completes the reasoning for the case when @xmath392\\preceq\\delta$ ] .",
    "therefore , from now on we will assume that @xmath395 , [ 0,\\infty,0]\\}$ ] .",
    "since @xmath396 , [ 0,\\infty,0]\\}$ ] , @xmath324\\preceq \\delta$ ] .",
    "if @xmath397\\preceq\\delta$ ] , lemma [ lem : supp : lower](6 ) applies .",
    "otherwise , @xmath395 , [ 0,2,0]\\}$ ] . since @xmath398,[1,1,0],[0,2,0]\\}$ ] , we have @xmath169\\preceq\\delta$ ] or @xmath399\\preceq\\delta$ ] . in the former case , lemma [ lem : supp : lower](5 ) applies .",
    "thus , let us assume that @xmath399\\preceq\\delta$ ] . if @xmath388\\preceq \\delta$ ] , then lemma [ lem : supp : lower](4 ) applies . otherwise , we have @xmath395,[0,1,0]\\}$ ] . since @xmath400 , [ 0,1,0]\\}$ ]",
    ", it follows that @xmath169\\preceq\\delta$ ] , the case that we handled above .",
    "@xmath74    next , we establish the complexity of the problem to decide whether a program @xmath12 credulously entails under the supported - model semantics the literal @xmath282 , where @xmath100 is an atom .",
    "[ thm : supp : cr ] let @xmath43 .",
    "if    1 .",
    "@xmath343,[0,\\infty,\\infty]\\}$ ] , or 2 .",
    "@xmath182,[0,1,0]\\}$ ] , or 3 .",
    "@xmath181,[0,\\infty,0]\\}$ ] , or 4 .",
    "@xmath344,[1,1,0],[0,2,0]\\}$ ] , or 5 .",
    "@xmath345,[0,1,\\infty]\\}$ ] ,    then the problem to decide , given an atom @xmath100 and a program @xmath85 , whether @xmath12 has a supported model that does not contain @xmath100 is in @xmath64 . otherwise , the problem is @xmath82-complete .",
    "proof : the problem is clearly in np .",
    "let @xmath51 satisfy one of the conditions listed above .",
    "let @xmath401 and let @xmath100 be an atom .",
    "we define @xmath402 . clearly , @xmath12 has a supported model that does not contain @xmath100 if and only if @xmath354 has a supported model .",
    "since @xmath403 , the assertion follows by lemma [ lem : supp : upper ] .",
    "thus , from now on , we assume that @xmath51 does not satisfy any of the conditions ( 1)-(5 ) .",
    "let us start by considering the case @xmath188,[0,0,0]\\}$ ] .",
    "since @xmath396,$ ] @xmath404\\}$ ] , it follows that @xmath324\\preceq\\delta$ ] .",
    "moreover , since @xmath405 , [ 0,1,0]\\}$ ] , @xmath169\\preceq\\delta$ ] .",
    "let @xmath406,[1,2,0 ] , [ 0,1,0]\\})$ ] .",
    "we select a fresh atom @xmath100 and define @xmath307 . clearly , @xmath407 .",
    "moreover , @xmath12 has a supported model if and only if @xmath354 has a supported model that does not contain @xmath100 .",
    "thus , the claim follows by lemma [ lem : supp : lower](5 ) .",
    "next , let us assume that @xmath181,[0,0 , \\infty]\\}$ ] . since @xmath396,[0,\\infty,0]\\}$ ] , @xmath173\\preceq\\delta$ ] .",
    "similarly , since @xmath408,[0,1,\\infty]\\}$ ] , it follows that @xmath169\\preceq\\delta$ ] .",
    "let @xmath409,[0,1,0 ] , [ 0,0,1]\\})$ ] .",
    "we select a fresh atom @xmath100 and define @xmath410 . clearly , @xmath407 .",
    "moreover , @xmath12 has a supported model if and only if @xmath354 has a supported model that does not contain @xmath100 .",
    "thus , the claim follows by lemma [ lem : supp : lower](8 ) .",
    "if @xmath310,[0,0,0]\\}$ ] and @xmath411,[0,0,\\infty]\\}$ ] then , by theorem [ thm : main : supp ] , the espm problem for the class @xmath50 is np - complete .",
    "let @xmath165 and let @xmath100 be a fresh atom .",
    "clearly , @xmath12 has a supported model if and only if @xmath12 has a supported model that does not contain @xmath100 .",
    "thus the assertion follows .",
    "@xmath74    finally , we settle the complexity of the problem to decide whether a program @xmath12 skeptically entails under the supported model semantics the literal @xmath282 , where @xmath100 is an atom .",
    "[ thm : supp : sk ] let @xmath43 .",
    "if    1 .",
    "@xmath343,[0,\\infty,\\infty]\\}$ ] , or 2 .",
    "@xmath181,[0,0,\\infty]\\}$ ] , or 3 .",
    "@xmath345,[0,1,\\infty]\\}$ ] , or 4 .",
    "@xmath345,[0,\\infty,0]\\}$ ] ,    then the problem to decide , given an atom @xmath100 and a program @xmath85 , whether every supported model of @xmath12 satisfies @xmath282 is in @xmath64 . otherwise , the problem is @xmath316-complete .",
    "proof : we prove the assertion by establishing the complexity of the complementary problem to decide , given an atom @xmath100 and a program @xmath85 , whether @xmath12 has a supported model that contains @xmath100",
    ". we will denote this problem by @xmath412 .",
    "let @xmath51 satisfy any of the conditions ( 1)-(3 ) , @xmath165 and @xmath100 be an atom .",
    "we define @xmath413 . clearly , @xmath12 has a supported model containing @xmath100 if and only if @xmath354 has a supported model .",
    "since @xmath414\\})$ ] and @xmath415\\}$ ] falls under the same condition as @xmath51 does , the latter property can be verified in polynomial time ( cf .",
    "lemma [ lem : supp : upper ] ) .",
    "thus , the problem @xmath412 can be decided in polynomial time .",
    "thus , let us suppose that @xmath345,[0,\\infty,0]\\}$ ] .",
    "let @xmath416\\})$ ] . since @xmath12 is a horn program , then the least model of @xmath12 , @xmath417 ,",
    "is a supported model of @xmath12 .",
    "one can show that for every atom @xmath259 such that there is a sequence of rules @xmath418 ; @xmath419 in @xmath12 , where @xmath420 and @xmath10 , the set @xmath421 is a supported model of @xmath12 .",
    "moreover , one can show that every supported model of @xmath12 is the union of some of the sets @xmath417 and @xmath421 , where @xmath259 is self - supported ( in the sense that it participates in a cycle of rules , as described above ) .",
    "it follows that @xmath416,[0,\\infty,0]\\})$ ] has a supported model containing @xmath100 if and only if one of the sets @xmath422 , where @xmath259 is an atom , is a supported model of @xmath12 that contains @xmath100 .",
    "the latter property can be verified in polynomial time .",
    "thus the problem @xmath412 is in p for the class of programs @xmath50 , where @xmath423,[0,\\infty,0]\\})$ ] .    to complete the proof ,",
    "let us assume that @xmath51 does not satisfy any of the conditions ( 1)-(4 ) .",
    "if @xmath324\\preceq\\delta$ ] then the np - completeness of the problem @xmath412 follows by the result of cadoli and lenzerini @xcite , in the same way as in the proof of theorem [ thm : cr ] ( we note that , by the properties ( s3 ) and ( s4 ) , for programs in the class @xmath167\\})$ ] supported models and answer sets coincide ) .",
    "thus , let us assume that @xmath324\\not\\preceq\\delta$ ] , that is , @xmath424,[0,\\infty,\\infty]\\}$ ] .",
    "for programs in @xmath425\\})$ ] , the problem of the existence of an answer set that contains a given atom @xmath100 is np - complete ( it follows , in particular , from theorem [ thm : sk ] ) . since for programs in that class answer sets and supported models coincide ( by the properties ( s3 ) and ( s4 ) ) , the problem of the existence of a supported model of @xmath426\\})$ ] that contains a given atom @xmath100 is np - complete , too .",
    "thus , the assertion holds for every class @xmath51 such that @xmath170\\preceq\\delta$ ] .",
    "it follows that it is enough to prove the theorem under the assumption that @xmath181,[0,\\infty , \\infty]\\}$ ] .    since @xmath396,[0,0,\\infty]\\}$ ]",
    ", @xmath58\\preceq \\delta$ ] .",
    "let us assume that @xmath169\\preceq\\delta$ ] .",
    "let @xmath427,[0,1,0],[0,0,1]\\})$ ] .",
    "let @xmath428 be all the atoms such that the constraint @xmath429 belongs to @xmath12 .",
    "we introduce fresh atoms @xmath430 and define @xmath354 to be obtained by replacing all constraints @xmath429 with rules @xmath431 and @xmath432 . clearly , @xmath433 , [ 0,1,0]\\})$ ] .",
    "one can check that @xmath12 has a supported model if and only if @xmath354 has a supported model containing @xmath434 .",
    "thus , in this case , the problem is np - complete .",
    "it follows that @xmath345,[0,\\infty , \\infty]\\}$ ] . since @xmath389,[0,\\infty,\\infty]\\}$ ] , @xmath390\\preceq\\delta$ ]",
    "next , since @xmath408,[0,1 , \\infty]\\}$ ] , @xmath388\\preceq\\delta$ ] . finally , since @xmath435,[0,\\infty,0]\\}$ ] , @xmath173\\preceq\\delta$ ] .",
    "thus , the espm problem for @xmath50 is np - complete ( lemma [ lem : supp : lower](7 ) ) .",
    "let @xmath165 and let @xmath100 be a fresh atom .",
    "we define @xmath436 .",
    "clearly , @xmath354 has a supported model containing @xmath100 if and only if @xmath12 has a supported model .",
    "thus , the np - completeness of the problem @xmath412 follows .",
    "in the paper , we studied classes of programs defined in terms of `` legal '' arities of rules . specifically , we focused on classes of programs of the form @xmath50 , where @xmath43 .",
    "we proved that each such class has a finite representation and , for each finite set @xmath51 , we determined the complexity of reasoning tasks for programs from @xmath50 under the answer - set semantics .",
    "we also considered briefly a related family of classes of programs , namely those of the form @xmath326 , where @xmath43 consists of arities only , and obtained similar results for them .",
    "our results can be regarded as _",
    "trichotomy _ results as , in each case , the complexity is given by one of three complexity classes ( p , np - complete , and @xmath0-complete ; or p , conp - complete , and @xmath296-complete , depending on the type of the reasoning task ) .",
    "we also presented similar results for the reasoning tasks under the supported - model semantics .",
    "however , in that case , we obtain _ dichotomy _ results  the complexity is given either by the class p or np - complete ( or , either by the class p or conp - complete , depending on the task ) .",
    "as we noted , our trichotomy and dichotomy results have some similarity to the dichotomy result by schaefer , and its corollaries for other logic formalisms : the abductive reasoning @xcite , reasoning with minimal models @xcite and , reasoning in default logic @xcite .",
    "the classes of theories and formulas considered in those papers are defined in terms of boolean relations that are allowed in the language @xcite .",
    "that definition schema satisfies the dichotomy property : for every class of formulas definable in that schema , the satisfiability problem is in p , or is np - complete .",
    "the monotonicity of the propositional logic ( the set of models of the conjunction of two formulas is the intersection of the sets of models of the conjuncts ) is a fundamental property required by that result .",
    "since logic programs with the answer - set semantics do not satisfy the monotonicity property , it is unclear how to extend that formalism the approach originated by schaefer .",
    "thus , we based our approach on a different definition schema developed specifically for programs , and related to the `` complexity '' of rules as measured by the numbers of atoms in the head , and positive and negative literals in the body .",
    "it turns out though , that some classes of programs / theories appear prominently in both settings ( for instance : horn programs and horn theories ; positive programs with no more than two literals per rule and 2cnf theories ) .",
    "it is then an interesting problem whether a result based on the classification in terms of types of boolean relations can be obtained for disjunctive logic programs .",
    "one possibility might be to consider a more general setting of answer - set programs in the language of propositional logic under the semantics of equilibrium models @xcite .",
    "this paper is an extended version of the paper presented at the 10th international conference on logic programming and nonmonotonic reasoning @xcite .",
    "the work was partially supported by the nsf grant iis-0913459 .",
    "the author gratefully acknowledges several helpful comments from the anonymous referees .              ,",
    "hermann , m. , and schnoor , i. 2007 .",
    "complexity of default logic on generalized conjunctive queries . in _ proceedings of logic programming and nonmonotonic reasoning , 9th international conference , lpnmr 2007 _ , c.  baral , g.  brewka , and j.  schlipf , eds .",
    "lecture notes in computer science , vol . 4483 .",
    "springer , 5870 .",
    "mathematical foundations of answer set programming . in",
    "_ we will show them !",
    "essays in honour of dov gabbay _ , s.  artmov , h.  barringer , a.  davila garcez , l.  c. lamb , and j.  woods , eds .",
    "college publications , 615664 .",
    "trichotomy results on the complexity of reasoning with disjunctive logic programs . in _ proceedings of the 10th international conference on logic programming and nonmonotonic reasoning , lpnmr 2009 _ , e.  erdem , f.  lin , and t.  schaub , eds .",
    "lncs , vol .",
    "springer , 303315 ."
  ],
  "abstract_text": [
    "<S> we present _ trichotomy _ results characterizing the complexity of reasoning with disjunctive logic programs . to this end </S>",
    "<S> , we introduce a certain definition schema for classes of programs based on a set of allowed arities of rules . </S>",
    "<S> we show that each such class of programs has a finite representation , and for each of the classes definable in the schema we characterize the complexity of the existence of an answer set problem . </S>",
    "<S> next , we derive similar characterizations of the complexity of skeptical and credulous reasoning with disjunctive logic programs . </S>",
    "<S> such results are of potential interest . on the one hand , they reveal some reasons responsible for the hardness of computing answer sets . on the other hand , they identify classes of problem instances , for which the problem is `` easy '' ( in p ) or `` easier than in general '' ( in np ) . </S>",
    "<S> we obtain similar results for the complexity of reasoning with disjunctive programs under the supported - model semantics .    </S>",
    "<S> # 1    [ firstpage ]    answer sets , supported models , complexity of reasoning </S>"
  ]
}
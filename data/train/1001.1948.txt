{
  "article_text": [
    "the nature of the wireless network is intrinsically different from the wired network because of the sharing of the medium among several transmitters .",
    "such a restriction generally has been managed through forms of scheduling algorithms to coordinate access to the medium , usually in a distributed manner .",
    "the conventional approach to the medium access control ( mac ) problem is contention - based protocols in which multiple transmitters simultaneously attempt to access the wireless medium and operate under some rules that provide enough opportunities for the others to transmit .",
    "examples of such protocols in packet radio networks include aloha , macaw , csma / ca , etc@xcite .",
    "however , in many contention - based protocols , it is possible that two or more transmitters transmit their packet simultaneously , resulting in a _",
    "collision_. the collided packets are considered useless in the conventional approaches .",
    "there is a considerable literature on extracting partial information from such collisions .",
    "gollakota and katabi @xcite showed how to recover multiple collided packets in a 802.11 system using _ zigzag decoding _ when there are enough transmissions involving those packets .",
    "in fact , they suggest that each collision can be treated as a linearly independent equation of the packets involved .",
    "zigzag decoding is based on interference cancelation , and hence , requires a precise estimation of channel attenuation and phase shift for each packet involved in a collision .",
    "zigzag decoding provides a fundamentally new approach to manage interference in a wireless setting that is essentially decentralized , and can recover losses due to collisions . in this work , we wish to understand the effects of this new approach to interference management in the high snr regime , where interference , rather than noise , is the main limit factor for system throughput .",
    "we provide an abstraction of a single - hop wireless network with erasures when a generalized form of zigzag decoding is used at the receiver , and network coding is employed at the transmitters .",
    "we introduce an algebraic representation of the collisions at the receivers , and study conditions under which a collision can be treated as a linearly independent equation ( degree of freedom ) of the original packets at the senders .",
    "we use this abstract model to analyze the delay and throughput performance of the system in various scenarios .",
    "first , we analyze a single - hop wireless erasure network , when each sender has one packet to deliver to all of its neighbors .",
    "we characterize the expected time to deliver all of the packets to each receiver when collisions of arbitrary number of packets are recoverable . we observe that with collision recovery we can deliver @xmath0 packets to a receiver in @xmath1 time slots , where @xmath0 is the degree of that particular receiver .",
    "this is significantly smaller than the delivery time of centralized scheduling and contention - based mechanisms such as slotted aloha . in the case",
    "that collisions of only a limited number of packets can be recovered , we propose a random access mechanism in conjunction with zigzag decoding to limit the level of contention at the receiver .",
    "our numerical results show that such a scheme provides a significant improvement upon contention - based mechanisms even if each recoverable collision is limited to only two packets .",
    "second , we analyze the throughput of this system in a scenario where packets arrive at each sender according to some arrival process . in this scenario ,",
    "each sender _ broadcasts _ a random linear combination of the packets in its queue , and the receivers perform generalized form of zigzag decoding for interference cancellation .",
    "we characterize the stability region of the system , and propose a decentralized acknowledgement mechanisms to stabilize the queues at the senders .",
    "the stability region of the system with collision recovery achieves the cut - set outer bound of the erasure network , that is _ strictly larger _ than that of the system with centralized scheduling .",
    "the information theoretic capacity of wireless erasure network has been studied in the related literature .",
    "the works by dana _",
    "@xcite , lun _ et al . _",
    "@xcite , and smith and hassibi @xcite focus on a wireless erasure network with only broadcast constraints , while smith and vishwanath @xcite study the capacity of an erasure network by considering only interference constraints .",
    "these works show how to achieve the cut - set bound of the multi - hop erasure network under specific constraints for a single unicast or multicast session .",
    "in contrast , our work takes into account both broadcast and interference constraints , and studies the stability _ region _ for multiple sessions over a single - hop wireless network .",
    "another related literature investigates collision recovery methods such as the works by tsatsanis _",
    "@xcite , and paek and neely @xcite . in this literature ,",
    "once a collision of @xmath2 packets occurs , all senders remain silent until those involved in the collision retransmit another @xmath3 times",
    ". our proposed scheme , however , does not require such coordination among the senders .",
    "the rest of this paper is organized as follows . in section [ model_sec ]",
    ", we present an abstract model of a single - hop wireless network with erasures .",
    "section [ abstraction_sec ] discusses an algebraic representation of the collisions at the receivers .",
    "section [ delay_sec ] is dedicated to mean delivery time characterization of a single - receiver system for various interference management schemes . in section [ throughput_sec ] ,",
    "we characterize the stability region of the single - receiver system with collision recovery . in section [ multiple_sec ] , we generalize the results of preceding sections to the case of a single - hop wireless network with multiple receivers . finally , concluding remarks and extensions are discussed in section [ conclusion_sec ] .",
    "the system consists of a single - hop wireless network with @xmath0 senders and @xmath4 receivers .",
    "we assume that a node can not be both a sender and a receiver .",
    "the connectivity is thus specified by a bipartite graph .",
    "[ fig : bipartite ] shows an example of such a network .",
    "senders and @xmath4 receivers , title=\"fig : \" ] +    we assume that time is slotted . every sender is equipped with an infinite sized buffer .",
    "the goal of a sender is to deliver all of its packets to each of its neighbors , i.e. , the set of receivers to which it is connected .    in every slot ,",
    "a sender can _ broadcast _ a packet to its neighbors .",
    "owing to the fading nature of the wireless channel , not all packet transmissions result in a successful reception at every neighbor .",
    "each link between any sender @xmath5 and any receiver @xmath6 may experience packet erasures .",
    "these erasures occur with probability @xmath7 , and are assumed to be independent across links and over time .",
    "this type of erasure is to model the effect of obstacles between the senders and the receivers .",
    "the channel state between @xmath5 and @xmath6 is denoted by @xmath8 .    at the end of every slot , each receiver",
    "is allowed to send an acknowledgment ( ack ) to any one of the senders to which it is connected .",
    "a packet is retained in the sender s queue until it has been acknowledged by all the receivers .",
    "we ignore the overhead caused by the acks , and assume that the acks are delivered reliably without any delay .",
    "note that a collision of packets at a receiver does not immediately imply an erasure . with zigzag decoding , it may be possible to extract useful information from collisions . in the following ,",
    "we discuss how a collision could be thought of as a linear combination of the original packets at the sender .",
    "in this section , we introduce an algebraic representation of collisions .",
    "the collision of two packets is essentially the superposition of the physical signal corresponding to the packets .",
    "a packet is essentially a vector of bits that can be grouped into symbols over a finite field @xmath9 . for the rest of this section",
    ", we represent a packet as a polynomial over the delay variable @xmath10 , with coefficients being the symbols of @xmath9 that form the packet .",
    "the mapping from the packet to the corresponding physical signal is a result of two operations  channel coding and modulation .",
    "we abstract these two operations in the form of a map @xmath11 from symbols over @xmath9 to the complex number field : @xmath12 we assume that the map @xmath11 is such that given a complex number , there is a well - defined demodulation and channel decoding method that outputs the symbol from @xmath9 that is most likely to have been transmitted .",
    "the above assumption essentially says that the channel coding occurs over blocks of @xmath13 bits ( corresponding to a single symbol of @xmath9 ) .",
    "depending on @xmath14 , this could mean a short code length , which would be effective only with a high snr .",
    "let @xmath15 and @xmath16 be two packets at two different senders , represented as polynomials over @xmath9 .",
    "the coding and modulation results in a signal polynomial over the complex field : @xmath17 and @xmath18 .",
    "now imagine that these two packets collide with each other at a receiver twice , in two different time slots .",
    "we denote @xmath19 to be the channel coefficient in slot @xmath20 from sender @xmath6 .",
    "when packets collide , they may not be perfectly aligned .",
    "let @xmath21 denote the offset ( in symbols ) of the packet from sender @xmath6 within slot @xmath20 measured from the beginning of the slot .",
    "we assume that a packet is significantly longer than the offsets so that the loss of throughput because of these offsets is negligible .",
    "the channel gains , offsets and the identity of the packets that are involved in the collision are assumed to be known at the receiver .",
    "then , the two collisions can be represented in the following way : @xmath22 or alternately , @xmath23 .",
    "therefore , with @xmath0 collisions of the same @xmath0 packets , it is possible to decode them all as long as the @xmath24 transfer matrix @xmath25 is invertible over the field of rational functions of @xmath10 .",
    "the process of decoding by inverting this matrix is more general than the zigzag procedure of @xcite .",
    "the decoding process will result in the signals corresponding to the original packets .",
    "the signals will then have to be demodulated and decoded ( channel coding ) to obtain the original data .",
    "this algebraic representation formalizes the intuition introduced in @xcite that every collision is like a linear equation in the original packets .      due to the broadcast constraint of the wireless medium ,",
    "a sender that wants to broadcast data to several receivers will have to code across packets over a finite field in order to achieve the maximum possible throughput .",
    "random linear coding is known to achieve the multicast capacity over wireless erasure networks @xcite .",
    "let us suppose that the sender codes across packets over the field @xmath9 and that the coding coefficients are known at the receiver .",
    "this can also be incorporated into the above formulation in the following sense .",
    "suppose a receiver receives @xmath0 collisions , where the colliding packets in each collision are themselves finite - field linear combinations of a collection of @xmath0 original packets , then it is possible to decode all @xmath0 packets from the collisions .     +    this is immediately seen if we assume that that the coding and modulation are linear operations , i.e. , that @xmath11 is a linear function with respect to the symbols of the original packets . in this case , the above matrix representation will still hold , and the invertibility condition for decoding will also be true .",
    "however , in general , the modulation operation may not be linear with respect to the original packets symbols . even in this case",
    ", we can still decode the @xmath0 packets from @xmath0 collisions .",
    "we explain this using a simple example with two senders and one receiver .",
    "suppose the first sender has two packets @xmath26 and @xmath27 and the second sender has a single packet @xmath28 .",
    "the first sender transmits a random linear combination of its two packets in every slot , while the second sender repeat packet @xmath28 in every slot .",
    "figure [ zigzag ] shows the collisions in three different time slots . using the three collisions",
    ", the receiver can decode all three packets as follows .",
    "the offsets between the first and second senders packets in the three collisions are @xmath29 , @xmath30 and @xmath31 . from the figure ,",
    "since the first @xmath30 symbols of the first two collisions are interference - free , we can decode the first @xmath30 symbols of @xmath26 and @xmath27 . using this",
    ", we can compute the first @xmath30 symbols of @xmath32 , and thereby obtain the first @xmath33 symbols of @xmath28 . this !",
    "process can be continued after subtracting these symbols from the other collisions .",
    "we assume throughout this paper that the field size @xmath14 is large enough that every collision counts as a new degree - of - freedom ( also called _ innovative _ ) if and only if it involves at least one packet that has not yet been decoded .",
    "every such collision counts as one step towards decoding the packets .",
    "in this section , we study a special case where there is only one receiver in the network .",
    "we shall show later in this paper that the results derived in this section generalize to the multiple receiver case .",
    "we study a scenario where every sender has a single packet that needs to be delivered to the receiver .",
    "consider a single - hop network with a single receiving node and @xmath0 senders , each having one packet to transmit .",
    "define the _ delivery time _",
    ", @xmath34 , as the time to transmit all packets successfully to the receiver .",
    "we can divide the delivery time into @xmath0 portions , where the @xmath35 portion corresponds to the additional time required to for the receiver to send the @xmath35 ack , starting from the time when the previous ( i.e. @xmath36 ) ack was sent .",
    "we define the following notation , for @xmath37 :    [ cols=\"<,^ , < \" , ]     note that @xmath34 is then given by : @xmath38    the goal of this section is to characterize the expectation of the delivery time for zigzag decoding , and to compare it with contention - based protocols and a central scheduling mechanism .",
    "first we study schemes that treat any collision as a loss . in this case",
    ", collisions have to be avoided either by centralized coordination among the senders , or in a distributed way by having senders access the channel in a probabilistic manner , as studied in the literature ( please see chapter 4 of @xcite for a summary ) .",
    "we assume that the receiver , upon successfully receiving a packet , sends an acknowledgment to the corresponding sender . with centralized scheduling , we assume the following policy .",
    "the channel is initially reserved for sender 1 , up to the point when its packet is acknowledged . at this point , the channel is reserved for sender 2 , and so on . in this setting , the calculation of the expected delivery time is straightforward . for each sender , the delivery is complete in the first slot when the channel from that sender to the receiver is not under erasure .",
    "the time @xmath39 between the @xmath36 and the @xmath35 ack , which is also the delivery time for the @xmath35 sender , is thus a geometric random variable , with mean @xmath40 .",
    "this implies that the total expected delivery time under centralized scheduling policy is given by : @xmath41=\\sum_{k=1}^n \\mathbb{e}[x_k]= \\frac{n}{1-p}.\\ ] ]    note that the delivery time for centralized scheduling is normally a lower bound for the delivery time of other distributed probabilistic approaches because it ensures that there is no collision . in distributed approaches , there is always some probability of a collision .      in this case",
    ", we assume that in every slot , each sender transmits its packet with probability @xmath14 until it is acknowledged . the choice of whether to transmit or not is made independently across senders and across time .",
    "note that , by controlling the access probability @xmath14 , the senders can control the level of contention and thereby prevent collisions .",
    "[ thm : randaccess ] the expected delivery time for the random access scheme with an access probability @xmath14 is given by : @xmath41=\\sum_{k=1}^n\\frac{1}{kq_e(1-q_e)^{k-1}}.\\ ] ] where @xmath42 is the effective probability of access , after incorporating the erasures .",
    "if a sender decides to transmit in a given slot , then it might still experience an erasure with probability @xmath7 .",
    "hence , the effective access probability of a sender is given by @xmath42 .",
    "consider the interval corresponding to @xmath43 . in this interval , there are @xmath2 unacknowledged senders .",
    "therefore , at each time slot , the number of senders that the receiver can hear from follows a binomial distribution with parameters @xmath44 .",
    "a successful reception occurs when exactly one sender is connected , which happens with probability @xmath45 .",
    "thus , @xmath43 is a geometric random variable with mean @xmath46 .",
    "the result follows from eqn .",
    "( [ eq : tdx ] ) .    by selecting the access probability @xmath47",
    ", we get @xmath41=o(n \\log n).\\ ] ]      next , we consider the scenario where the receiver has zigzag decoding capability . in this scenario ,",
    "every sender transmits its packet in every slot until acknowledged by the receiver .    with zigzag decoding",
    ", there are multiple ways to acknowledge a packet .",
    "the conventional method is to ack a packet when it is decoded .",
    "however , we propose a new ack mechanism that is not based on decoding .",
    "the key observation is that upon receiving an equation ( collision ) , the receiver can afford to ack _ any one _ of the senders involved in that collision .    in the following theorem ,",
    "we show that this form of acknowledgments will still ensure that every packet is correctly decoded by the receiver eventually .",
    "[ thm : correctness ] consider a single - hop network with @xmath0 senders and one receiver capable of performing zigzag decoding .",
    "suppose the receiver , upon a reception , acknowledges an arbitrary sender among those involved in the collision .",
    "at the point when the receiver sends the @xmath48 ack , it can successfully decode all @xmath0 packets .",
    "let @xmath49 be the set of packets that have been decoded at time @xmath50 , i.e. , immediately after sending the @xmath35 ack .",
    "also , let @xmath51 be the set of packets that have been acked at time @xmath50 including the @xmath35 ack .",
    "we shall show that @xmath52 for all @xmath53 .",
    "for any @xmath53 , let @xmath54 .",
    "this means , among the first @xmath2 receptions , there are at least @xmath55 linearly independent equations involving only these @xmath55 packets ( from section [ abstraction_sec ] ) . for every reception , the receiver always acks exactly one of the senders involved in the collision .",
    "this means , corresponding to these @xmath55 equations , @xmath55 acks were sent by the receiver to a set of senders within @xmath56 .",
    "an acked sender never transmits again .",
    "since the receiver always acks one of the senders involved in a collision , no sender will be acked more than once . hence",
    ", these @xmath55 acks are sent to @xmath55 distinct senders in @xmath56 .",
    "this means all senders in @xmath49 have been acked .",
    "we have shown that @xmath52 for all @xmath53 .",
    "a sender that has been acked will not transmit again .",
    "hence , every reception will only involve senders whose packet has not been decoded .",
    "this implies that every reception is innovative , since a reception is innovative if and only if it involves at least one sender whose packet has not yet been decoded ( see section [ abstraction_sec ] ) .",
    "therefore , at the point of sending the @xmath48 ack , the receiver has @xmath0 linearly independent equations in @xmath0 unknowns , and hence can decode all the packets",
    ".    we shall now derive the expected delivery time for zigzag decoding .",
    "[ thm : delay_zz ] for zigzag decoding , the expected delivery time is given by : @xmath41 = \\sum_{k=1}^n \\frac 1{1-p^k } = n+o(1).\\ ] ]    at time @xmath50 , @xmath2 distinct senders have been acked , and only @xmath57 senders will attempt transmission . from the proof of theorem [ thm : correctness ] , every collision at the receiver will result in an innovative linear combination .",
    "hence , an innovative reception occurs if and only if not all of the @xmath57 senders experience an erasure .",
    "the time to receive the next innovative packet , @xmath58 , is thus a geometric random variable with mean @xmath59 .",
    "now , by eqn .",
    "[ eq : tdx ] , we obtain the following :    @xmath60&=&\\sum_{k=1}^n \\frac 1{1-p^k } = n+\\sum_{k=1}^n\\frac{p^k}{1-p^k}\\\\      & \\le & n+\\frac1{1-p}\\sum_{k=1}^n p^k \\le n+\\frac{p}{(1-p)^2 } = n+o(1 ) .    \\end{aligned}\\ ] ]    let us now compare this scheme with a centralized scheduling mechanism .",
    "centralized scheduling requires a central controller that assigns every time slot to a single sender , and achieves a delivery time of @xmath61 .",
    "in contrast , in the zigzag - based approach , no coordination is necessary among the senders , and yet , the delivery time is @xmath1 , that is close to the lowest possible time of @xmath0 slots , required to deliver @xmath0 packets .",
    "such an improvement in performance can be explained as follows . for centralized scheduling ,",
    "since only one user is scheduled to transmit in a time - slot , the time - slot will be wasted from the receiver s point of view , with probability @xmath7 .",
    "in contrast , with zigzag , since all the unacknowledged senders attempt to access the channel in a given slot , we obtain a _ diversity _ benefit  if even one of the attempting senders does not experience an erasure , the slot is useful to the receiver .",
    "the earlier subsection assumed that a collision of any number of packets can be treated as a linear equation involving those packets .",
    "the largest number of packets that can be allowed to collide for zigzag decoding to still work depends on the range of the received signal - to - noise ratio ( snr ) . in practice , if a collision involves more than 3 or 4 packets , then the zigzag decoding process is likely to fail , owing to error propagation .",
    "hence , in a more realistic setup , we need to limit the level of contention in order to ensure that more collisions at the receiver are useful . in this part of the paper",
    ", we explore the possibility of combining zigzag decoding with random access . instead of allowing every unacknowledged sender to transmit , each sender opportunistically transmits its packet with some probability @xmath14 .",
    "thus , the expected number of transmitting senders is reduced , which in turns limits the expected number of colliding packets in one time slot .",
    "we assume that any collision involving more than @xmath62 packets is not useful .",
    "this scheme is expected to perform better than conventional random access with no zigzag decoding , since a collision of @xmath62 or fewer packets is not useless , but is treated as one received linear equation . under this assumption , we can derive the expected delivery time in a manner similar to the analysis of simple random access .",
    "[ thm : randaccess2 ] the expected delivery time for the random access scheme with an access probability @xmath14 is given by : @xmath41=\\sum_{k=1}^n\\frac{1}{\\sum_{m=1}^{\\min(c , k ) } { k\\choose m }    q_e^m(1-q_e)^{k - m}},\\ ] ] where @xmath42 is the effective probability of access , after incorporating the erasures .",
    "consider the interval corresponding to @xmath43 . in this interval",
    ", there are @xmath2 unacknowledged senders .",
    "therefore , as in theorem [ thm : randaccess ] , at each time slot , the number of senders that the receiver can hear from follows a binomial distribution with parameters @xmath44 , where @xmath63 is the effective access probability of a sender , given by @xmath42 .",
    "a successful reception occurs when @xmath62 or fewer senders is connected , which happens with probability @xmath64 thus , @xmath43 is a geometric random variable with mean @xmath65 . using eqn .",
    "[ eq : tdx ] , we obtain the desired result .",
    "the design parameter @xmath14 should be chosen so as to minimize the delivery time .",
    "unfortunately , the exact characterization of the optimal @xmath14 in closed form seems difficult to obtain . in the following section ,",
    "we compare the expected delivery time for the above schemes , with the optimal values of @xmath14 computed numerically .       for different schemes , title=\"fig : \" ] +    fig .",
    "[ delivery_zz ] shows the expected delivery time for the different schemes discussed above , as a function of the number of senders @xmath0 .",
    "the plot compares random access with zigzag decoding for different values of the contention limit @xmath62 , which is the maximum number of packets that can be allowed to collide for the collision to be considered useful .",
    "the contention level is controlled by adjusting the access probability @xmath14 . in the unlimited zigzag case ,",
    "i.e. , when we have no contention limit , there is no need to reduce contention through random access , and hence @xmath14 is set to 1 . for the other cases , for each @xmath0 , the value of @xmath14",
    "is chosen so as to minimize the delivery time .",
    "the main observation is that by allowing zigzag decoding , the expected delivery time is significantly reduced , as compared to conventional random access where any collision is treated as being useless .",
    "we also observe that the delivery time drops with an increase in the contention limit @xmath62 . in the unlimited zigzag case",
    ", we can see that the delivery time is very close to the best possible time of @xmath0 slots .",
    "the value of the erasure probability @xmath7 , is fixed at 1/3 .",
    "however , we found that varying the value of @xmath7 does not significantly affect the delivery time for the other schemes .",
    "in contrast , the plot for the centralized scheduling case ( not shown in the figure ) , would be a straight line with slope @xmath66 .",
    "in other words , the delivery time for centralized scheduling is sensitive to @xmath7 .",
    "intuitively , the reason is , the random access approaches are allowed to change the access probability to reach a certain level of contention at the receiver .",
    "as the erasure probability @xmath7 increases , the senders can compensate by increasing their access probability @xmath14 to achieve the same contention level .",
    "in this section , we consider a scenario when packets arrive at sender @xmath5 according to an arrival process @xmath67 , where @xmath67 represents the number of packets entering the @xmath68 sender s queue at slot @xmath20 ( cf .",
    "[ stream_fig ] ) .",
    "we assume the arrival processes are _",
    "admissible _ as defined in @xcite .",
    "[ assump : arrival ] the arrival processes satisfy the following conditions . following conditions .    1 .   @xmath69 =    \\lambda_i$ ] .",
    "2 .   there exists a finite value @xmath70 such that @xmath71 \\leq    a_{max}^2 $ ] for all @xmath5 and @xmath20 , where @xmath72 denotes the history up to time @xmath20 .",
    "3 .   for any @xmath73",
    ", there exists an interval of size @xmath74 such that for any initial slot @xmath75 @xmath76 \\leq \\lambda_i + \\delta , \\quad \\foral i.\\ ] ]    the above conditions are easily satisfied if the arrival processes are bernoulli processes with mean @xmath77 .",
    "let @xmath78 be the number of packets dropped from the queue of the @xmath68 sender during time slot @xmath20 . according to the communication protocol described in section [ model_sec ] ,",
    "a packet is dropped from a sender s queue if and only if it is acknowledged by all the receivers connected to that sender .",
    "we also assume that the @xmath67 arrivals occur at the end of slot @xmath20 .",
    "thus , the evolution of @xmath79 , the queue - length at sender @xmath5 at time @xmath20 , is given by @xmath80    the goal is to characterize the stability region , which is defined as the closure of the set of arrival rates for which there exist a service policy such that the each queue has a bounded time average , i.e. , @xmath81 < \\infty , \\quad \\foral i.\\ ] ]     senders and one receiver  streaming case , title=\"fig : \" ] +    a _ centralized scheduling policy _ involves choosing at most one of the senders for transmission ( service ) so that any collision is avoided .",
    "if the packet is delivered successfully at the receiver , an acknowledgment is fed back to the sender and that packet is dropped from the sender s queue .",
    "the centralized scheduler requires coordination among the senders as well as information about the queue - length or the arrival rates .",
    "however , it does not have access to channel state before it is realized .",
    "therefore , probability of packet loss is independently at least @xmath7 at every time slot , and it is also independent of the implemented centralized scheduling policy .",
    "thus , we have the following _ necessary _ conditions for the stability region : @xmath82    in fact , it can be shown that the above conditions are also sufficient .",
    "the queues can be stabilized by a centralized scheduling policy that selects the sender with the longest queue for transmission @xcite . in summary the stability region for centralized scheduling policies",
    "is an @xmath0-dimensional simplex given by ( [ centralized_region ] ) .",
    "an example of such region for a two - sender system is illustrated in fig .",
    "[ region_fig](a ) .     +    note that under the centralized scheduling policy the assigned sender may experience an erasure , and hence , wastes time slots even if there are other senders that would not have suffered an erasure .",
    "however , if the realization of the channel state in the next time slot is known , such wastes can be avoided by choosing the transmitter from those that are connected to the receiver .",
    "tassiulas and ephremides @xcite show that if information about channel state realization is available a priori , the following set of arrival rates can be stabilized : @xmath83 where @xmath84 denotes cardinality of set @xmath85 .",
    "the region described in ( [ mac_region ] ) can be achieved by serving the sender with longest queue - length among those that are connected to the receiver .",
    "moreover , tassiulas and ephremides @xcite show that it is not possible to stabilize the queues for any point outside the region described in ( [ mac_region ] ) .",
    "this can be seen as a consequence of _ cut - set bound _ ( cf .",
    "@xcite ) applied to this setup .",
    "the stability region for a two - sender system is illustrated in fig .",
    "[ region_fig](b ) .    in the following ,",
    "we first show how to use zigzag decoding scheme to achieve the dominant face of the stability region given in ( [ mac_region ] ) without prior knowledge about channel state realizations .",
    "we then show that as long as the sender side queues are stable , the receiver will eventually decode every packet that arrives at any sender .",
    "[ priority_policy ] the _ priority - based _ policy for a single - hop network with a single receiver is as follows .",
    "fix a priority order of the senders with 1 being the highest priority .    *",
    "* transmission mechanism * : each sender transmits the head - of - line packet of its queue at every time slot . * * acknowledgement mechanism * : upon every reception , the receiver acknowledges the packet from the sender with highest priority among those packets that are involved in the collision .",
    "consequently , each acknowledged packet is dropped from the corresponding sender s queue , i.e. , @xmath86 for sender @xmath5 if and only if @xmath5 is the highest priority sender with the following two properties : @xmath87 , and the link from sender @xmath5 to the receiver is not experiencing an erasure .    in the following ,",
    "we show the priority - based policy can achieve vertices of the stability region given by ( [ mac_region ] ) .",
    "first , let us provide a simple characterization of the vertices of the dominant face of the region .",
    "[ vertex_lemma ] there exists a one - to - one correspondence between permutations of @xmath88 and vertices of the dominant face of the region described in ( [ mac_region ] ) . in particular , for any permutation @xmath89 , the corresponding vertex is given by @xmath90    see @xcite .",
    "[ vertex_thm ] consider a single - hop wireless erasure network with one receiver and @xmath0 senders , where the arrival process @xmath67 satisfies assumption [ assump : arrival ] .",
    "any vertex on the dominant face of the region given by ( [ mac_region ] ) can be achieved without prior knowledge about channel state realization by employing the priority - based policy .",
    "fix a vertex , @xmath91 , on the dominant face of the stability region . by lemma [ vertex_lemma ]",
    ", it corresponds to a permutation @xmath89 of the senders . without loss of generality ,",
    "assume @xmath92 .",
    "by lemma [ vertex_lemma ] , the rate - tuple corresponding to @xmath91 is given by    @xmath93    next , we show the priority - based policy defined in definition [ priority_policy ] can achieve the vertex @xmath91 , i.e. , for any @xmath94 , the priority - based policy stabilizes the queues with arrival rates @xmath95    as we discussed in the acknowledgement mechanism of the priority - based policy , a sufficient condition for acknowledging sender @xmath5 is to have the link of sender @xmath5 not erased and the links of all other senders with higher priorities erased . note that an acknowledgment to sender @xmath5 is equivalent to serving the queue at sender @xmath5 by one packet . by independence of the erasures across links we obtain the following expected service rate for each sender @xmath5 @xmath96 \\geq p^{i-1 } ( 1-p ) , \\quad i = 1 , \\ldots , n.\\ ] ]    hence , by definition 3.5 of @xcite , the server process @xmath78 is admissible with rate @xmath97 . moreover , the arrival process @xmath67 is also admissible with rate @xmath77 by assumption [ assump : arrival ] . since @xmath98 for any @xmath99 , by lemma 3.6 of @xcite the sender side queues are stable .",
    "in other words , arrival rates arbitrarily close to that of vertex @xmath91 can be achieved .",
    "the dominant face of the stability region described in ( [ mac_region ] ) is achievable without prior knowledge about channel state realization by employing the priority - based policy .",
    "every point on the dominant face of the stability region can be written as a convex combination of the vertices of the dominant face . moreover ,",
    "each vertex can be achieved by a priority - based policy given in definition [ priority_policy ] , corresponding to that vertex .",
    "therefore , every point on the dominant face can be achieved by time sharing between such policies .",
    "note that the difference between he policies achieving different vertices is in the acknowledgement mechanism which takes place at the receiver , and no coordination among the transmitters is necessary .",
    "[ decodability_single ] for the priority - based policy , every packet that arrives at any sender will eventually get decoded by the receiver if it employs zigzag decoding .    by the same arguments as in the proof of theorem [ thm : correctness ] , every packet that is decoded at the receiver must have been acknowledged .",
    "if a packet is acknowledged , it is never transmitted again .",
    "therefore , every collision at the receiver only involves packets that have not yet been decoded .",
    "thus , every successful reception at the receiver is innovative ( see section [ abstraction_sec ] ) .    in other words",
    ", the receiver sends out an ack when and only when it receives an innovative packet .",
    "this means that the total number of packets that have been dropped from any sender s queue at a given time is equal to the total number of degrees of freedom at the receiver .    by theorem [ vertex_thm ] ,",
    "the queue at each sender is stable .",
    "hence , all the queues will eventually become simultaneously empty .",
    "if all the queues are empty at the same time , this means the receiver has sent as many acks as the total number of packets that ever arrived at any sender so far . as discussed above , the number of acks is equal to the total number of linearly independent equations available at the receiver . in other words ,",
    "the receiver has as many equations as the unknowns , and can decode all of the packets that ever arrived at the senders .",
    "the priority - based policy requires knowledge of the arrival rates at the receiver to tune the acknowledgement mechanism .",
    "however , if the senders queue - length information is available at the receiver , we can mimic the policy by tassiulas and ephremides @xcite by acknowledging the sender with the longest queue .",
    "then , we shall not need to know the arrival rates .",
    "achievability of the stability region in ( [ mac_region ] ) is then a direct consequence of the results in @xcite .",
    "it is worth mentioning that , if the probability of erasure is different on different links , this scheme would still achieve the corresponding stability region based on the results of @xcite .",
    "in this section , we generalize the results of the preceding parts to the case of a single - hop wireless erasure channel with multiple senders and receivers . denote by @xmath100 the set of receivers that can potentially receive a packet from sender @xmath5 , and write @xmath101 for the set of senders that can reach receiver @xmath6 . recall that the senders are constrained to _ broadcast _ the packets on all outgoing links .",
    "the goal of each sender is to deliver all the packets in its queue to each of its neighbors . in the following",
    "we characterize the delivery time and the stability region of the network for zigzag decoding and compare the results with centralized scheduling schemes .",
    "similarly to section [ delay_sec ] , we study a scenario where every sender has a single packet to deliver to all of its neighbors .",
    "consider a single - hop wireless erasure network with @xmath55 receivers and @xmath0 senders , each having one packet to transmit .",
    "define the _ delivery time _ of receiver @xmath6 , @xmath102 , as the time taken by receiver @xmath6 to successfully decode all packets transmitted from all senders in @xmath101 .",
    "a centralized scheduling scheme involves assigning at most one sender to each receiver so that collisions are avoided .",
    "however , unlike the single receiver case , it is not always feasible to assign exactly one sender to each receiver .",
    "this is due to the broadcast constraint of the senders that may cause interference at other receivers .",
    "for example , in the configuration depicted in fig .",
    "[ fig : bipartite ] , we can not allow both of the senders to transmit simultaneously . hence , the delivery time for receivers 1 is affected by that of receiver 3 , and it is larger than the case where other receivers are not present . therefore , we have @xmath103    if a collision recovery method such as zigzag decoder is implemented at the receiver , similar to the single receiver case , every sender keeps transmitting its packet until an acknowledgement is received from all of its neighbor receivers .",
    "if we use the acknowledgement mechanism as in the single receiver case , i.e. , ack any of the packets involved in a collision , then sending an acknowledgement does not necessarily correspond to receiving an innovative equation .",
    "moreover , multiple acks may be sent to the same sender while the other senders are not acknowledged even after decoding their packets .",
    "this is so since a sender does not stop broadcasting its packet unless receiving acks from all of its neighbors . here",
    ", we slightly modify the acknowledgement mechanism as follows . upon a reception at each receiver ,",
    "the receiver acknowledges any of the packets involved in the reception ( collision ) that have not already been acknowledged .",
    "[ delivery_bd_zz ] consider a single - hop wireless erasure network with collision recovery implemented at the receivers .",
    "the expected delivery time for each receiver @xmath6 is bounded from above as @xmath104 \\le \\sum_{k=1}^{|\\gamma_i(j)| } \\frac 1{1-p^k } = |\\gamma_i(j)|+o(1).\\ ] ]    fix a particular receiver @xmath6 .",
    "suppose each sender in @xmath101 stops transmitting after receiving an ack from @xmath6 .",
    "by theorem [ thm : correctness ] all of the packets at the neighbors of @xmath6 are decodable , once all of the senders in @xmath101 are acknowledged , i.e. , the system of @xmath105 equation at receiver @xmath6 is full rank . therefore , even if the acknowledged packet get retransmitted , the receiver @xmath6 will have a full rank system after sending @xmath105 acks .",
    "now we can divide the delivery time into intervals corresponding to ack instances , i.e. , @xmath106 where @xmath107 is the duration between sending the @xmath36 ack and @xmath35 ack .",
    "the inequality could be strict if the system of equations become full rank before sending the last ack .",
    "note that , at a give time slot , a new ack is sent by receiver @xmath6 if and only if a collision is received that involves at least one unacknowledged packet .",
    "therefore , @xmath108 is a geometric random variable with mean @xmath109 .",
    "similarly to the proof of theorem [ thm : delay_zz ] , the desired result is followed from plugging this into ( [ td_bd ] ) .",
    "the exact characterization of the expected delivery time requires characterizing the exact decoding process that is beyond the scope of this paper .",
    "note that the upper bound on the expected deliver time given by theorem [ delivery_bd_zz ] differs from the lower bound , @xmath105 , by only a small constant .",
    "in this part , we study a wireless erasure network with multiple senders and receivers , where packets arrive at sender @xmath5 according to the arrival process @xmath67 .",
    "we assume the arrival processes satisfy assumption [ assump : arrival ] for some rate @xmath77 .",
    "the goal is to characterize the stability region of the system when the receivers have collision recovery capabilities .",
    "note that in this scenario , both broadcast and interference constraints are present , and there are multiple broadcast sessions .",
    "we show that the cut - set bound is achievable by combining network coding at the senders and collision recovery at the receivers .",
    "first , let us state the outer bound given by the cut - set bound .",
    "this region is the intersection of the stability regions given by [ mac_region ] for individual receivers .",
    "[ outer_thm ] [ outer bound ] consider a single - hop wireless erasure network with link erasure probability @xmath7 .",
    "assume that packets arrive at sender @xmath5 with rate @xmath77 .",
    "for every receiver @xmath6 , it is necessary for stability of the system to have @xmath110 where @xmath101 is the set of senders in the neighborhood of receiver @xmath6 .",
    "assume that the system is operating under some policy @xmath111 and is stable .",
    "hence , the markov chain corresponding to the queue lengths at the senders is ergodic and has a stationary distribution .",
    "therefore , the departure rate @xmath112 of the queue at sender @xmath5 is equal to its arrival rate @xmath77 . on the other hand , by independence of the information at different senders , the departure ( transmission ) rates",
    "should satisfy the following conditions given by the cuts between each receiver @xmath6 and the senders over a bipartite graph : @xmath113 which implies the desired result .",
    "next , we present transmission and acknowledgement policies that achieve the outer bound given by theorem [ outer_thm ] .",
    "the transmission policy is based on network coding , and the acknowledgement policy is based on the notion of `` seen '' packets as defined in @xcite , and is build upon a single - receiver acknowledgement policy .",
    "let us start by some definitions and notations .",
    "[ ack_policy_single ] [ single - receiver ack policy ] consider a single - hop wireless network of a single receiver and @xmath0 senders .",
    "let @xmath114 denote the channel state and queue - length vectors , respectively .",
    "define an _ ack policy _ as the following mapping : @xmath115 given the channel state and the queue - length vectors , @xmath116 provides the index of at most one sender to be acknowledged .",
    "an ack policy is _ stable _ if it stabilizes the queues for any arrival rate in the stability region of the system .",
    "note that the priority - based ack policy given in definition [ priority_policy ] does not require the queue - length information , while the ack policy proposed by tassiulas and ephremides uses the queue - length information .",
    "[ multiple_policy ] [ code - ack policy ] consider a single - hop wireless erasure network .",
    "the code - ack policy is as follows :    * * transmission mechanism * : each sender transmits a random linear combination of the packets in its queue at every time slot . * * acknowledgement mechanism * : each receiver @xmath6 acknowledges the last _ seen _ packet of the sender given by @xmath117 , where @xmath118 be a single - receiver ack policy ( cf .",
    "definition [ ack_policy_single ] ) for @xmath6 when other receivers are not present , and @xmath119 @xmath120 where @xmath121 the backlog of the packets at sender @xmath5 not yet seen by receiver @xmath6 .",
    "+    [ stability_thm ] consider a single - hop wireless erasure network with multiple receivers all capable of collision recovery .",
    "assume the arrival processes at the senders satisfy assumption [ assump : arrival ] .",
    "the code - ack policy given in definition [ multiple_policy ] achieves any point in the interior of the region given by ( [ cutset_bd ] ) , if the single - server ack policies @xmath118 used in code - ack policy are stable .",
    "moreover , every packet that arrives at a sender will eventually get decoded by all of the its neighbor receivers .",
    "since each sender needs to deliver all of its packets to all of its neighbors , we can think of a senders s queue as multiple virtual queues targeted for each that sender s neighbors .",
    "each of these virtual queues contain the packets still needed by the corresponding receiver .",
    "an arrival at the sender corresponds to an arrival to each of its virtual queues , and an ack from a receiver results in dropping a packet from the virtual queue of that receiver .",
    "a packet is dropped from a sender s original queue , if it is acked by all of its neighbors , in other words , if it is dropped from all its virtual queues ( see fig .",
    "[ virtual_fig ] ) .",
    "therefore , we can relate the queue - length at sender @xmath5 to those of the virtual queues as follows : @xmath122    in the code - ack policy , receivers acknowledge a seen packet from a sender .",
    "thus , the virtual queues at sender @xmath5 corresponding to receiver @xmath6 coincides with the packets at sender @xmath5 not yet seen by receiver @xmath6 . moreover , upon every reception at receiver @xmath6 , the corresponding virtual queue of sender @xmath117 is served .",
    "therefore , we can isolate each receiver @xmath6 and its corresponding virtual queues from the rest of the network , and treat the isolated part as single - receiver erasure network .    by comparing the regions described in ( [ cutset_bd ] ) and ( [ mac_region ] )",
    ", we observe that the region for the multiple - receiver case is a subset of the one for the single - receiver case . since @xmath118 is a stable single - receiver ack policy for every receiver @xmath6 , all of the virtual queues are stable .",
    "therefore , by ( [ real_virtual_q ] ) all of the sender - side queues are stable .",
    "it remains to show that that all of the packets arriving at a sender are eventually decodable at its neighbor receivers .",
    "similarly to the proof of theorem [ decodability_single ] , it is sufficient to show that for every ack sent by receiver @xmath6 , a degree of freedom ( innovative packet ) is received at receiver @xmath6 . if this is the case , by stability of the virtual queues corresponding to receiver @xmath6 , they all eventually become empty and there are as many degrees of freedom at the receiver as there are unknowns .",
    "hence , every packet arrived at the senders in @xmath101 are decodable .",
    "now , we prove the above claim .",
    "let receiver @xmath6 send and ack to sender @xmath5 at the end of slot @xmath20 .",
    "first , we observe that the link between @xmath5 and @xmath6 should be connected during slot @xmath20 , and @xmath123 .",
    "sender @xmath5 broadcasts a random linear combination of the packets in its queue which include the packets in the virtual queue @xmath124 .",
    "if the field size is large enough , we can assume that the coefficients corresponding to at least one of the packets in virtual queue @xmath124 is nonzero .",
    "hence , the reception at receiver @xmath6 at time slot @xmath20 should have involved a packet from sender @xmath5 that was not seen by receiver @xmath6 . since all decoded packets are seen @xcite ,",
    "the collision at receiver @xmath6 at time @xmath20 involves a packet that is not yet decoded , and hence , it is a new degree of freedom ( innovative reception ) .",
    "in this paper , we have studied the delay and throughput performance of collision recovery methods , e.g. zigzag decoding @xcite , for a single - hop wireless erasure network . using an algebraic representation of the collisions allowed us to view receptions at a receiver as linear combinations of the packets at the senders .",
    "the algebraic framework provides alternative collision recovery methods and generalizations for the case when the transmitted packets are themselves coded versions of the original packets .",
    "we have focused on two situations  the completion time for all of the senders to deliver a single packet to their neighbor receivers , and the rate region in the case of streaming arrivals .",
    "we show that the completion time at a receiver with collision recovery is at most by a constant away from the degree of that receiver which is the ultimate lower bound in this setup . for the streaming case , we present a decentralized acknowledgement mechanism that could serve as an arq - type mechanism for achieving the capacity of a wireless erasure network when both broadcast and interference constraints are present .",
    "our conclusion is that collision recovery approach allows significant improvements upon conventional contention resolution approaches in both the completion time as well as the rate region , while not requiring any coordinations among the senders ."
  ],
  "abstract_text": [
    "<S> current medium access control mechanisms are based on collision avoidance and collided packets are discarded . </S>",
    "<S> the recent work on zigzag decoding departs from this approach by recovering the original packets from multiple collisions . in this paper </S>",
    "<S> , we present an algebraic representation of collisions which allows us to view each collision as a linear combination of the original packets . the transmitted , colliding packets </S>",
    "<S> may themselves be a coded version of the original packets .    </S>",
    "<S> we propose a new acknowledgment ( ack ) mechanism for collisions based on the idea that if a set of packets collide , the receiver can afford to ack exactly one of them and still decode all the packets eventually . </S>",
    "<S> we analytically compare delay and throughput performance of such collision recovery schemes with other collision avoidance approaches in the context of a single hop wireless erasure network . in the multiple receiver case , the broadcast constraint calls for combining collision recovery methods with network coding across packets at the sender . from the delay perspective </S>",
    "<S> , our scheme , without any coordination , outperforms not only a aloha - type random access mechanisms , but also centralized scheduling . for the case of streaming arrivals </S>",
    "<S> , we propose a priority - based ack mechanism and show that its stability region coincides with the cut - set bound of the packet erasure network . </S>"
  ]
}
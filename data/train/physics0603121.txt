{
  "article_text": [
    "the cellular neural network universal machine ( cnn - um ) is an analog computer which has on it s main processor @xmath0 interconnected computational units ( cells ) . the cnn - um which is a hardware can be easily connected to pc type computers and programmed through a special programming language . it is believed that cnn - um could represent in future an elegant alternative to digital computing for many complex problems .",
    "the basic theory of cellular neural / nonlinear networks ( cnn ) [ ] and the architecture of the cnn - um [ ] motivated hundreds of scientific papers discussing this new computational paradigm .",
    "the common goal of all these works was to study how cnn - um could represent an alternative for the computational techniques of the future using tens of thousands of dynamical processors [ ] .",
    "many theoretical methods ideal for the analogical ( analog & logic ) architecture of the cnn - um were developed and tested on different physical implementations .",
    "the already widely used applications ( especially the ones implemented on real chips ) are for image processing , robotics or sensory computing purposes [ ] . for the success of the cnn computing within the scientific community , it is however desirable to develop , test and implement all the widely used computational methods on the emerging physical implementations .",
    "the standard cnn is composed by @xmath0 analog units ( cells ) placed on a square lattice and interconnected through the @xmath1 nearest neighbors .",
    "each cell is an electronic circuit characterized by an input value ( voltage)@xmath2 , a state value @xmath3 , and an output value @xmath4 .",
    "the @xmath2 input voltage can be defined for each operation , and for this operation does not change in time .",
    "the output @xmath5 is equivalent with the @xmath6 state value in a given range .",
    "more specifically is given by a piece - wise linear function , bounded between @xmath7 ( white ) and @xmath8 ( black ) : @xmath9 the state equation of the cnn cells results from the time - evolution of the equivalent circuit [ ] . according to the original chua - yang model [ ] ( supposing nearest neighbor interactions only ) this has the form : @xmath10    the set of parameters @xmath11 are called templates representing the strength of the coupling between the neighbors . in standard cnn [ ] @xmath12 and @xmath13",
    "are equal for all cells , @xmath14 can vary in space .",
    "there are diverse physical implementations of the cnn - um , recently generalized as cellular wave computers [ ] which could be of different types : mixed mode ( analog - and - logic ) , emulated digital , optical , etc .",
    "the mixed - mode cmos visual microprocessors [ ] are usually implemented according to the full - range model [ ] which is a modification of this original model ( the state value is also bounded and always equal with the output value ) .",
    "this will change however the qualitative behavior only in some very special cases which will not be considered here .",
    "the cnn architecture seems also promising when considering complex problems in natural sciences .",
    "studies dealing with partial differential equations ( pde ) [ ] or cellular automata ( ca ) models [ ] prove this . solving partial differential equations , spatially discretized on a lattice with the size of the cnn chip ,",
    "is relatively easy and offers the advantage of continuity in time [ ] . deterministic cellular automaton [ ] with simple nearest - neighbor rules",
    "are also straightforward to implement in the cnn architecture",
    ". however , many of the interesting problems in sciences deal with stochastic cellular automaton , random initial conditions or other monte carlo methods on lattices ( spin problems , population dynamics models , lattice gas models , percolation etc ... ) . developing and proving the efficiency of stochastic simulation techniques ( monte carlo methods ) on the cnn - um - using its stored- ( or algorithmic ) programmability - would be thus an important step toward its success .",
    "the aim of the present study is to investigate this possibility .",
    "it is well known that for a successful stochastic simulation the crucial starting point is a good random number generator .",
    "while computing with digital processors , the `` world '' is deterministic and discretized , so in principle there is no possibility to generate random events and thus really random numbers .",
    "the implemented random number generators are in fact pseudo - random number generators working with some deterministic algorithm , and it is believed that their statistics approximates well real random numbers .",
    "one can immediately realize that a first advantage of the analog architecture for monte carlo type simulations is that the simple deterministic and discretized `` world '' is lost , noise is present , and there is thus possibility for generating real random numbers . here , we first present a realistic random number generator which uses the natural noise of the cnn - um chip and generates random binary images with a uniform distribution of the white and black pixels .",
    "after that a method for generating binary images with any given probability of the black pixels will be described .",
    "the advantages and perspectives of these methods are discussed in comparison with digital computers . as an example for monte carlo simulations",
    "the well - known site - percolation problem is solved on the cnn - um .",
    "all the methods presented in this study were tested and are properly working on an ace16k chip .",
    "it is found that some methods are already faster on the ace16k than on modern pc type digital computers .",
    "taking into account thus the natural trend that the lattice size of cnn - um chips will be growing and that calculations on this chip are totally parallel , our results predict a promising trend .",
    "although , in this paper most of the spatial - temporal instructions are binary , we have to emphasize that the main strength of the cellular wave computer / visual microprocessor chips are related to gray scale operators . in that area",
    "the speed advantage is in about three orders of magnitude [ ] .",
    "there are relatively few papers presenting or using random number generators ( rng ) on the cnn universal machine [ ] .",
    "the already known and used ones are all pseudo - random number generators based on chaotic cellular automaton type update rules . in such a way",
    "these rngs are , in reality , deterministic and for many initial conditions they might have finite repetition periods .",
    "the pseudo - randomness results only from the chaotic behavior . for monte carlo type simulations on digital computers we are used to pseudo rngs and we are always aware about their limitations .",
    "one has to mention however that the pseudo - randomness and the fact that the random number series is repeatable sometimes is also helpful .",
    "it makes easier debugging mc type programs and can be a necessary condition for implementing specific algorithms .",
    "in solving complicated statistical physics problems with large ensemble averages the fact that the rng is deterministic and can have a finite repetition period limits the effectiveness of the statistics . here , our goal is to take advantage on the fact that the cnn - um chip is an analog device , and to use its natural noise for generating more realistic random numbers .",
    "this would assure an important advantage in monte carlo type simulations , relative to digital computers .",
    "all the pseudo rngs developed on the cnn - um up to the present are generating binary images with @xmath15 probability of the black and white pixels ( logical @xmath8 and @xmath16 are generated with the same probability ) .",
    "these methods were used mainly in cryptography [ ] and watermarking on pictures [ ] . for many monte carlo type simulations on the cnn - um chip we will need however to generate black and white pixels ( logical @xmath8 and @xmath16 ) with any given probability .",
    "we will solve this task in the next section and now we will consider the simpler problem where the black and white pixels are generated with the same @xmath15 probability .",
    "the natural noise of the cnn - um chip is usually highly correlated in space and time , so it can not be used directly to obtain random binary images .",
    "our method is based thus on a chaotic cellular automaton perturbed with the natural noise of the chip after each time step .",
    "as it will be shown later due to the used chaotic cellular automaton the correlations in the noise will not induce correlations in the generated random black and white pixels and the real randomness of the noise will kill the deterministic properties of the chaotic cellular automaton .    as starting point a relatively simple but efficient chaotic ca , presented by crounse _",
    "[ ] and yalcin _ et al . _",
    "[ ] called the pnp2d was chosen .",
    "this chaotic ca is based on the following update rule : @xmath17 where @xmath18 are the coordinates of the pixels , the index @xmath19 denotes the time - step , and @xmath20 is a logic value @xmath16 or @xmath8 representing white and black pixels , respectively",
    ". symbols @xmath21 and @xmath22 represent the logical operations or and exclusive - or ( xor ) , respectively .",
    "as described by the authors this chaotic ca is relatively simple and fast , it passed all important rng tests and shows very small correlations so it is a good candidate for a pseudo - random number generator .",
    "it generates binary values @xmath16 and @xmath8 with the same @xmath15 probability independently of the starting condition .",
    "our goal is to transform it into a realistic rng .",
    "the way we do this is relatively simple .",
    "after each time step the @xmath23 result of the chaotic ca is perturbed with a noisy @xmath24 binary picture ( array ) so that the final output is given as : @xmath25 the symbol @xmath22 stands again for the logical operation xor , i.e. pixels which are different on the two pictures will become black ( logic value @xmath8 ) .",
    "this operation assures that no matter how @xmath24 looks like , the density of black pixels remains the same @xmath15 .",
    "because the used noisy images contain only very few black pixels ( logic values @xmath8 ) we just slightly sidetrack the chaotic ca from the original deterministic path and all the good properties of the pseudo - random number generator will be preserved .",
    "the @xmath24 noisy picture is obtained by the following simple algorithm .",
    "all pixels of a gray - scale image are filled up with a constant value @xmath26 and a cut is realized at a threshold @xmath27 , where @xmath14 is a relatively small value . in this manner",
    "all pixels which have smaller value than @xmath27 will become white ( logic value @xmath16 ) and the others black ( logic value @xmath8 ) .",
    "like all the logic operations this operation can be also easily realized on the cnn - um .",
    "due to the fact that the used cnn - um chip is an analog device , there always will be natural noise on the gray - scale image .",
    "choosing thus a proper @xmath14 value one can generate a random binary picture with few black pixels . since the noise is time dependent and generally correlated in time and space ,",
    "the @xmath24 pictures might be strongly correlated but will fluctuate in time .",
    "these time - like fluctuations can not be controlled , these are caused by real stochastic processes in the transistor circuits of the chip and are the source of a convenient random perturbation for our rng based on a chaotic ca .",
    "we performed our experiments on the ace16k chip ( with @xmath28 cells ) included in a bi - i v2 [ ] .",
    "we have chosen the values @xmath29 and @xmath30 . on this chip",
    "we observed that the noise is bigger when @xmath26 is close to @xmath8 , and that was the reason why we have chosen @xmath29 .",
    "the motivation for the negative @xmath14 value is the following .",
    "our experiments revealed a relatively strong negative noise on gray - scale images . due to this negative noise ,",
    "once a gray - scale picture with a constant @xmath26 value ( @xmath31 ) is generated , the measured average pixel value on the picture will always be smaller than @xmath26 .",
    "the chosen small negative value of @xmath14 ensured getting an @xmath24 array with relatively few black pixels . in case",
    "the noise on the gray - scale picture is different ( a different chip for example ) one will always find a proper value for @xmath14 .",
    "choosing the above @xmath26 and @xmath14 values , it was tested that no correlations are observed in the generated patterns and the density of black and white pixels are the same .",
    "some consecutive random images generated by this method with the above mentioned @xmath26 and @xmath14 parameters are shown in fig .",
    "1 . perturbing the ca with this noise assures also that starting from the same initial state our realistic rng after the same time - steps will yield different results @xmath32 , @xmath33 , @xmath34 etc ... in fig .",
    "2 starting from the same initial condition ( initial random binary picture ) we compare for several time steps the generated patterns . in this figure",
    "we plot the image resulting from an xor operation performed on the @xmath32 and @xmath33 pictures . in case of a simple deterministic ca",
    "this operation would yield a completely white image for any time step @xmath19 . as visible from fig .",
    "2 in our case almost the whole picture is white in the beginning showing that the two results are almost identical , but as time passes the small @xmath24 perturbation propagates over the whole array and generates completely different binary patterns . for @xmath35 time - steps the two results are already totally different .",
    "the cnn codes written for the generation of random binary patterns can be downloaded from the home - page dedicated to this study [ ] .    during our experiments",
    "it was also observed that in some cases the chip already introduces noise without the imposed @xmath24 perturbation .",
    "on the used bi - i v2 configuration we have only @xmath36 local logic memories . for avoiding the relatively slow data transfer between the ace16k chip and the incorporated dsp we have to save some of the binary images in local analog memories and through this transformation process , rarely but some pixels might change .",
    "this effect introduces similar perturbations like the one described in our method .",
    "this random perturbation would not be observable of course , if the number of local logic memories would be bigger and no data transfer to local analog memories would be necessary .    a key issue that will decide the future of the cnn - um chips for monte carlo type simulations is the speed of the implemented rng .",
    "we compared thus the speed of the above presented rng with rngs under c++ on normal digital computers working on a redhat 9.0 linux operating system . in our experiments",
    "the time for generating a new and roughly independent random binary image on the ace16k chip is @xmath37 .",
    "this means that for one single random binary value we need @xmath38 , where @xmath39 is the lattice size of the chip . in our case @xmath40 , so the time needed for one random binary value is roughly @xmath41 .",
    "on a pentium 4 , @xmath42 machine this time is approximately @xmath43 .",
    "we can see thus that parallel processing makes cnn - um already faster , and considering the natural trend that lattice size of the chip will grow , this advantage will amplify in the future .",
    "the estimated computation time for one random binary value as a function of chip size and in comparison with a pentium 4 , @xmath42 pc computer is plotted in fig.3 .    including more local memories on the chip",
    "will also increase the speed of the algorithms . on the actual version of the cnn - um we have only @xmath36 local memories for binary images and @xmath1 for gray - scale images , and as we mentioned earlier with this configuration our algorithm needs to transfer binary pictures to gray - scale ones .    for the special cases when one needs repeatable series of random numbers the simple chaotic cellular automaton without perturbation is sufficient",
    "this will work in a repeatable manner only if the presently observed mistakes on the chip will be eliminated .",
    "up to now we considered that black and white pixels ( @xmath8 and @xmath16 ) must be generated with equal @xmath15 probabilities . for the majority of the monte carlo methods",
    "this however is not enough and one needs to generate binary values with any probability @xmath44 . on digital computers",
    "this is done by generating a real value in the interval @xmath45 $ ] with a uniform distribution and making a cut at @xmath44 .",
    "theoretically it is possible to implement similar methods on cnn - um by generating a random gray - scale image and making a cut - off at a given value .",
    "however , on the actual chip it is extremely hard to achieve a gray - scale image with a uniform distribution of the pixel values between @xmath16 and @xmath8 ( or @xmath7 and @xmath8 ) .",
    "our solution for generating a random binary image with @xmath44 probability of the black pixels is by using many independent binary images with @xmath46 probability of the black pixels .",
    "we reduce thus this problem , to the problem already solved in the previous section .",
    "let @xmath44 be a number between @xmath16 and @xmath8 , @xmath47 represented here on @xmath1 bits by the @xmath48 binary values .",
    "one can approximate a random binary image with any fixed @xmath44 probability of the black pixels by using @xmath1 images @xmath49 , with probabilities @xmath50 , @xmath51, ",
    ",@xmath52 of the black pixels and satisfying the condition that @xmath53 ( relative to the black pixels ) for any @xmath54,  ,@xmath52 .",
    "once these @xmath1 images are generated one just have to unify ( perform or operation ) all @xmath49 images for which @xmath55 in the expression ( [ p ] ) of @xmath44 .",
    "getting these @xmath1 basic @xmath49 images is easy once we have @xmath1 independent images ( @xmath56 ) with @xmath46 probabilities of the black pixels .",
    "naturally @xmath57 . the second image with @xmath58 probability of the black pixels",
    "is generated as : @xmath59 , where @xmath60 denotes the negative of image @xmath49 ( @xmath61 not @xmath62 ) . in this manner",
    "the probability of black pixels on this second image @xmath63 will be @xmath64 and condition @xmath65 is also satisfied .",
    "adding now the two images @xmath66 and @xmath63 we obtain an image with @xmath67 density of black pixels @xmath68 .",
    "this @xmath69 image is used than to construct @xmath70 : @xmath71 .",
    "it is immediate to realize that @xmath70 has a density @xmath72 of black pixels and that @xmath73 . in the next step in a similar manner",
    "we construct @xmath74 and @xmath75 .",
    "the method is repeated recursively until all @xmath49 are obtained .",
    "the above algorithm implemented on the ace16k chip reproduced the expected probabilities nicely .",
    "the differences between the average density of black pixels ( measured on @xmath76 images ) and the expected @xmath44 probability were between @xmath77 and @xmath78 .",
    "normalized correlations in space between the first neighbors were measured between @xmath79 and @xmath78 , correlations in time between @xmath80 and @xmath81 .",
    "two random images with different probabilities of black pixels ( @xmath82 and @xmath83 ) are shown in fig.4 .",
    "since the presented method is based on our previous realistic rng the images and binary random numbers generated here are also non - deterministic .",
    "the computer codes for this algorithm can be also downloaded from the home - page dedicated to this study [ ] .",
    "the speed of the algorithm depends in a great measure on the probability @xmath44 .",
    "for example , if the biggest index for which @xmath55 is only @xmath84 , we need only @xmath84 independent random images ( @xmath56 ) and also the recursive part of the algorithm is shorter . in the case",
    "when we need @xmath1 random images , the algorithm is at least @xmath1 times slower than for the @xmath46 case .",
    "however , in general we rarely need @xmath1 images . working on @xmath85 bits",
    "will of course further increase the calculation time . in the presented algorithm",
    "one would need up to @xmath85 operations to generate the targeted random number .",
    "it worth mentioning also , that the possible values of @xmath44 can be varied in a more continuous ( smooth ) manner , if @xmath44 is represented not on @xmath1 but on arbitrary @xmath86 bits . in this manner",
    "one has to generate @xmath86 binary images and the computations on these pictures will become also more time - costly . however , again the increasing trend for the chip size and number of local memories on the chip will offer even in this case a big advantage in favor of the cnn - um chips in the near future .",
    "the realistic binary random number ( image ) generator developed in the previous sections can be used with success for monte carlo type simulations on the cnn - um chip . as an example in this sense , here we study the classical site - percolation problem on the cnn - um .",
    "percolation type problems are very common in many areas of sciences like physics , biology , sociology and chemistry ( for a review see e.g. [ ] )",
    ". different variants of the problem ( site percolation , bond percolation , directed percolation , continuum percolation etc . )",
    "are used for modeling various natural phenomena [ ] . as an example",
    ", the well - known site percolation problem is widely used for studying the conductivity or mechanical properties of composite materials , the magnetization of dilute magnets at low temperatures , fluid passing through porous materials , forest fires or propagation of diseases in plantations etc .",
    "the site - percolation model exhibits a second order geometrical phase transition and it is important also as a model system for studying critical behavior [ ] .",
    "the site - percolation problem can be formulated as follows : we activate the sites of a lattice with a fixed @xmath44 probability and than we detect whether there is a continuous path on activated sites through the neighbors from one side of the lattice to the opposite one . in most of the cases the neighbors for the detection of percolation are considered to be nearest neighbors , but one can consider the problem also for both nearest and next - nearest or even higher order neighbors . the percolation problem can be formulated in an analog manner on random binary images . after generating a random binary image with @xmath87 density of the black pixels ,",
    "one is interested whether it is possible or not to go from one side of the picture to the opposite side through activated and neighboring pixels .",
    "if there is a path that satisfies this condition , it is considered that the black ( activated ) pixels percolate through the lattice . for the same @xmath44 density of black pixels",
    "it is obvious that for some random realization there will be percolation and for others there is not . for a mathematical study of the percolation problem one can define and study thus the @xmath88 probability of having a percolation , which is obtained from studying many random realizations with the same @xmath44 black ( activated ) pixels density [ ] .",
    "the @xmath88 probability that a random image percolates depends of course on the @xmath44 density of black pixels . for an infinite lattice ( image size )",
    "there is a critical density @xmath89 under which the probability of percolation goes to zero ( @xmath90 ) , and above @xmath89 it has a non - zero probability ( for @xmath91 we get of course always @xmath92 ) . in the thermodynamic limit ( infinite system size )",
    "we have thus a clear geometrical phase transition - like phenomena . for a finite system",
    "the abrupt change for @xmath93 in the vicinity of @xmath89 is much smoother .",
    "there are several important quantities that are in general studied for this phase - transition .",
    "the main quantities under investigation are some critical exponents , the shape of @xmath93 and the value of @xmath89 . in the simple nearest - neighbor case and for the two - dimensional case",
    "the site - percolation problem is analytically solvable . for more complicated cases and for higher dimensionality",
    "there are many available analytic approximation methods , but the most commonly used study method is monte carlo simulation . here",
    "we will show how it is possible to determine the shape of the @xmath93 curve on a fixed - size lattice by computer simulations on the cnn - um .",
    "we study the simple site - percolation problem on binary images where for percolation we consider both the nearest - neighbors and the next nearest - neighbor pixels . from the architecture of the ace16k cnn - um chip it results that the used lattice is a square one , and from the considered neighbor definition results that each pixel has @xmath1 other neighbors .    for determining the @xmath89 critical density and",
    "the @xmath94 curve one has to find the percolation probability for many different densities of the black pixels . on the cnn - um for a random binary image",
    "the defined percolation can be detected using a template ( the parameters in eq .",
    "[ state ] ) , called _ figure reconstruction _ with parameters : @xmath95 the input picture of the template will be the actual random image and the initial state will contain only the first row of the image . analyzing the template one can easily realize that pixels which have an input value equal to @xmath8 ( are black ) and have at least one neighbor with state value @xmath8 will become black . in this manner",
    "a flow starts from the first row making black all pixels which were black on the input picture and are connected through ( the @xmath1 nearest ) neighbors to the first row .",
    "if on the output will remain black pixels in the last row , then percolation exists .",
    "this simple template is a function in the image processing library of the bi - i v2 [ ] . applying thus this template on many random images generated through the methods presented in the previous section , it is possible to study the classical site - percolation problem .",
    "the computer code written for this application can be downloaded again from [ ] .",
    "results for the @xmath94 curve obtained on the ace16k chip is plotted with circles in fig.5 . on the same graph",
    "it is also sketched with square symbols the mc simulation results obtained on a digital pentium 4 , @xmath96 computer , using a recursion - type algorithm for the detection of percolation .",
    "the lattice size in both cases is @xmath28 .",
    "the results in both cases are averaged for @xmath97 different random images per each density value .",
    "the two curves show a very good agreement .",
    "the density values on which the simulations were done are @xmath98 , because for the generation of random pixels @xmath44 has being taken as a @xmath99 bit value number .",
    "the percolation threshold resulting from the simulated @xmath94 curves are in good agreement with the accepted @xmath89 critical value , which for this case ( site - percolation on a square lattice with @xmath1 neighbors ) is @xmath100 .    regarding the speed of these monte carlo type simulations performed on digital computers and on the ace16k chip",
    "the following facts are observable : ( i ) with the actual chip size ( ace16k with @xmath40 ) cnn - um is still slower than a digital computer with @xmath101 , ( ii ) on cnn - um the time needed for detecting percolation grows linearly with the linear size of the respective image , while on digital computers it scales with the square of the lattice linear size .",
    "increasing thus the size of the chip will definitely favor the cnn - um architecture for such monte carlo type simulations on lattices .",
    "this trend results clearly from fig .",
    "6 , where on a log - log scale the simulation times are compared on digital and cnn computers for different lattice ( chip ) sizes .",
    "we have to mention also that some of the cnn instructions are not efficient on the present ace 16k chip .",
    "the new chips , under fabrication are capable of performing them much more efficiently increasing thus further the computational speed .",
    "we have studied thus the possibility of performing monte carlo type simulations on cnn - um chips . as a starting tool for this task",
    "a realistic binary random number generator was built .",
    "this random number generator is based on a chaotic ca which is perturbed with the natural noise of the chip and it is able to generate realistic random binary images with @xmath15 probability of the black pixels . starting from this random number generator it has been shown how it is possible to generate random binary images with any desired @xmath44 probability of the black pixels . the great advantage of the introduced binary random number generator is the used non - deterministic algorithm and the completely parallelized manner in which the binary random number generation is made on all the @xmath0 cells of the chip .",
    "it has been argued that this parallel architecture of the cnn - um chip assures a big advantage and perspectives of the cnn computers relative to the digital ones .",
    "some algorithms needed for stochastic simulations ( like binary random number generation ) are already faster on the cnn - um chip than on digital computers .",
    "the presently observed trend of increasing the number of cells , dimensionality and local memories on the cnn - um chip , will definitely favor in the future the cnn - um architecture for monte carlo simulations .    as a specific example for monte carlo simulations on the cnn - um chip we simulated the well - known site - percolation problem .",
    "for this application it was found however that simulations on the presently available digital computers are still faster than the one performed on the cnn - um chip .",
    "the reason for this is that the percolation detection on the cnn - um is realized through an algorithm which increases linearly with system sizes ( @xmath39 ) . the strong advantage of the cnn - um is presently evident only for those problems where the algorithm runs totally parallel on all the cells of the chip .",
    "our binary random number generator is a good example in this sense .",
    "another example from statistical physics that seems to favor already the cnn - um architecture is the metropolis or glauber monte carlo method on ising type systems .",
    "implementing these simulations on the cnn - um chip would be a next step in the area of stochastic simulations on the cnn - um .",
    "the support of the jedlik laboratories of the p. pzmny catholic university is gratefully acknowledged .",
    "l. o. chua , l. yang , _ ieee transactions on circuits and systems _ * 35 * , 1257 ( 1988 ) .",
    "t.roska , l. o. chua , _ ieee transactions on circuits and systems - ii _ * 40 * , 163 ( 1993 )",
    ". l. o. chua , t. roska , t. kozek ,  .",
    "zarndy , _ ieee circuit and devices magazine _ * 12 * , 18 ( 1996 ) .",
    "l. o. chua , t. roska , _ ieee transaction on circuits and systems - i _ * 40 * , 147 ( 1993 ) .",
    "k. r. crounse , l. o. chua , _ ieee transactions on circuits and systems _ * 42 * , 583 ( 1995 )",
    ". l. o. chua , t. roska , _ cellular neural networks and visual computing _ , ( cambridge university press 2002 t. roska , _ journal of circuits , systems and computers _ * 12 * , 539 ( 2003 ) .",
    "t. roska ,  .",
    "rodriguez - vazquez , _ proceedings of the ieee _ * 90 * , 1244 ( 2002 ) .",
    "a. rodriguez - vzquez , s. espejo , r. dominguez - castro , j. l. huertas , e. snchez - sinencio , _ ieee transactions on circuits and systems ii : analog and digital signal processing _ * 40 * , 132 ( 1993 ) .",
    "t. roska , l. o. chua , d. wolf , t. kozek , r. tetzlaff , f. puffer , _ ieee transactions on circuits and systems - i : fundamental theory and applications _ * 42 * , 807 ( 1995 ) .",
    "t. kozek , l. o. chua , t. roska , d. wolf , r. tetzlaff , f. puffer , k. lotz , _ ieee transactions on circuits and systems - i : fundamental theory and applications _ * 42 * , 816 ( 1995 ) .",
    "t. kozek , t. roska , _ international journal of theory and applications _ * 24 * , 49 ( 1996 ) .",
    "i. petrs , t. roska , l. o. chua , _ ieee transactions on circuits and systems i : fundamental theory and applications _ * 50 * , 619 ( 2003 ) . j. m. cruz , l. o. chua , _ ieee transactions on circuits and systems i : fundamental theory and applications _ * 42 * , 715 ( 1995 ) .",
    "k. r. crounse , t. yang , l. o. chua , _ fourth ieee international workshop on cellular neural networks and their applications , seville , spain _ ( 1996 ) . m. e. yalcin , j. vandewalle , p. arena , a. basile , l. fortuna , _ international journal of circuit theory and applications _ * 32 * , 591 ( 2004 ) . t. szirnyi , j. zerubia , _ ieee transactions on circuits and systems i : fundamental theory and applications _ * 44 * , 86 ( 1997 ) . t. szirnyi , j. zerubia , d. geldreich , z. kato , _ proceedings of the fourth ieee international workshop on cnn and their applications _ , 139 ( 1996 ) .",
    " zarndy , c. rekeczky , _ ieee circuits and systems magazine _ * 5 * , 36 ( 2005 )",
    ". m. ercsey - ravasz , t. roska , z. nda , _",
    "zneda / cnn.html_. d. stauffer , a. aharony , _ introduction to percolation theory _ , ( london , second edition , taylor and francis , 1992 ) .",
    "m. sahimi , _ application of percolation theory _ , ( london , taylor and francis , 1994 ) .",
    "d. stauffer , _ american journal of physics _ * 45 ( 10 ) * , 1001 ( 1977 ) .",
    "j. w. essam , _ reports on progress in physics _ * 53 * , 833 ( 1980 ) .",
    "i. szatmri , p fldesy , c. rekeczky ,  zarndy , _ proceedings of the cnna-2002 frankfurt , germany _ , ( 2002 ) ."
  ],
  "abstract_text": [
    "<S> possibilities for performing stochastic simulations on the analog and fully parallelized cellular neural network universal machine ( cnn - um ) are investigated . by using a chaotic cellular automaton perturbed with the natural noise of the cnn - um chip , </S>",
    "<S> a realistic binary random number generator is built . as a specific example for monte carlo type simulations </S>",
    "<S> , we use this random number generator and a cnn template to study the classical site - percolation problem on the ace16k chip . </S>",
    "<S> the study reveals that the analog and parallel architecture of the cnn - um is very appropriate for stochastic simulations on lattice models . </S>",
    "<S> the natural trend for increasing the number of cells and local memories on the cnn - um chip will definitely favor in the near future the cnn - um architecture for such problems . </S>"
  ]
}
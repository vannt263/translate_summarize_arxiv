{
  "article_text": [
    "the study of plane curves dates back to c.f .",
    "gauss . gauss in g has attached to any plane curve with @xmath1 double points a @xmath3 letter word , as follows . to each double point",
    "attach a letter , and then register the letters you encounter as you travel along the curve .",
    "one obtains a word of length @xmath3 , where each of the @xmath1 letters appears precisely twice .",
    "such a word is called a _",
    "gauss word_. clearly not any gauss word may be realized by a plane curve , and gauss has pointed out a necessary condition for it to be realizable .",
    "one can enhance the gauss word of a curve with a mark on one of the two occurrences of each letter , signifying that the corresponding strand of the curve crosses the curve at the given double point from right to left .",
    "various necessary and sufficient conditions for a gauss word to be realizable in the plane have been eventually given , both in the marked and unmarked settings .",
    "see dot , lom , rr , r , t and references therein .    to avoid the arbitrariness of the assignment of letters to the different double points",
    ", one can replace gauss words with chord diagrams . to a marked gauss word",
    "corresponds an oriented chord diagram , which is by definition a division of the set @xmath4 into @xmath1 ordered pairs .",
    "this may be represented as a circle with @xmath3 designated points , and @xmath1 oriented chords connecting pairs of these points .",
    "though not every oriented chord diagram may be realized by a curve in the plane , it may be realized by a curve in some oriented surface .",
    "carter in c has given a direct construction for the minimal genus surface in which a given diagram may be realized , as follows .",
    "take an annulus , which is thought of as a regular neighborhood of the curve , and identify @xmath1 pairs of regions along the annulus according to the prescription of the diagram .",
    "one obtains an orientable surface @xmath5 with some @xmath6 boundary components .",
    "capping off the boundary components with discs produces the required minimal genus surface .",
    "the genus of this surface is @xmath7 and so @xmath8 .",
    "we will refer to this minimal genus as the genus of the given diagram .",
    "a diagram being realizable in the plane is equivalent to it having genus 0 .    for fixed @xmath1 ,",
    "we are interested in the distribution of genera of the oriented chord diagrams with @xmath1 chords , and we ask : what is the expected genus @xmath0 of a randomly chosen diagram ? we show that the expected genus is very close to the maximal possible genus @xmath9 , in fact , we show that @xmath2 since @xmath7 , this is equivalent to showing that the expected number of boundary components is @xmath10 .",
    "though the above description is geometric , counting the number of boundary components may be described in a purely combinatorial manner .",
    "traveling along a boundary component of our surface corresponds to a walk on the chord diagram according to the following rule .",
    "when moving along the circle of the diagram , and arriving at an end of a chord , continue your motion along the chord to its other side .",
    "if your motion along the chord is in the direction ( respectively , against the direction ) of its orientation , then continue your motion along the circle in the same ( respectively , opposite ) direction as you have moved before entering the chord .",
    "so , to identify a boundary component , one travels along the diagram according to the above rule , until returning to the starting point . repeating this process",
    ", one obtains all boundary components .",
    "this combinatorial walk along a chord diagram is reminiscent of the walk along the cycles of a permutation .",
    "the distribution of the cycles of a random permutation on @xmath1 letters is well understood , and the expected number of cycles is also @xmath10 .",
    "indeed , it is for similar reasons that the expected number of cycles in a permutation and the expected number of cycles of the walk along a chord diagram are both @xmath10 , though as will be seen , the setting of chord diagrams is substantially more complicated .    since this problem may be formulated both in a topological and a purely combinatorial manner , it may be of interest to both topologists and combinatorialists , and indeed the text is aimed for both audiences .",
    "this work may be viewed as part of the recent expanding interest in probabilistic questions in topology , as appears in bhk , dut , lim , mw , ps .",
    "let @xmath5 be an oriented surface .",
    "a _ generic curve _ in @xmath5 is an immersion @xmath11 for which the only self intersections are transverse double points .",
    "we fix @xmath1 once and for all , and call a point of @xmath12 a _ dot _ if it is one of the @xmath3 points @xmath13 .",
    "if a generic curve @xmath14 has @xmath1 double points , then there are @xmath3 points in @xmath12 mapped into them , and we will always assume that these @xmath3 points are precisely our @xmath3 dots .",
    "a generic curve with such @xmath1 double points will be called an @xmath1-curve .",
    "an oriented chord diagram of order @xmath1 is a division of the set of dots into @xmath1 disjoint ordered pairs .",
    "one can represent an oriented chord diagram in the plane , by drawing an oriented chord connecting each ordered pair , where the orientation of the chord represents the order of the pair .",
    "an oriented chord diagram will also be called simply a _",
    "diagram_.    we denote the set of all diagrams of order @xmath1 by @xmath15 , and we have @xmath16 .",
    "any @xmath1-curve determines a diagram @xmath17 as follows .",
    "the double points of @xmath14 divide the @xmath3 dots into pairs , and the orientation of the surface @xmath5 induces an ordering on each pair , in the following way .",
    "if @xmath18 for dots @xmath19 , and @xmath20 is a positive basis with respect to the orientation of the surface , then the ordered pair @xmath21 is taken .",
    "see figure f1 .",
    "any diagram may be realized by a curve on some oriented surface , and a regular neighborhood of the curve in all such surfaces is the same , as we now explain ( compare c ) . given a diagram @xmath22 ,",
    "take the annulus @xmath23 $ ] with a fixed orientation , and identify @xmath12 with @xmath24 .",
    "for each dot @xmath25 let @xmath26 be the @xmath27 square centered at @xmath28 .",
    "we now identify pairs of dots @xmath19 according the prescription of @xmath29 , and we identify the corresponding squares @xmath30 with a positive or negative @xmath31 rotation , so that the self intersection of the curve at the identified square will be as prescribed by the orientation of the chord between @xmath25 and @xmath32 in @xmath29 .",
    "we obtain an oriented surface with @xmath33 boundary components , which we denote @xmath34 .",
    "clearly , the embedding @xmath35 given by @xmath36 , composed with the quotient map @xmath37 , is an @xmath1-curve @xmath38 which realizes @xmath29 , and a regular neighborhood of any curve in any surface realizing @xmath29 , is identical to @xmath34 .",
    "it follows that the genus of the closed surface obtained by capping off the @xmath39 boundary components of @xmath34 with discs , is the minimal genus of a surface in which @xmath29 may be realized .",
    "given a diagram @xmath29 , we define @xmath40 , the genus of @xmath29 , to be the minimal genus of a closed oriented surface admitting a curve @xmath41 with @xmath42 .    the image in @xmath34 of our @xmath1-curve is a graph with @xmath1 vertices and @xmath3 edges , and so @xmath43 , or , @xmath44 . since @xmath33",
    ", we deduce that @xmath45 .    in this work we study the following question : what is the expected genus of a randomly chosen diagram @xmath22 ?",
    "we will show that the expected genus is close to the maximal possible genus @xmath9 .",
    "more precisely we will show :    [ main ] the expected genus @xmath0 of a random oriented chord diagram @xmath22 satisfies : @xmath2    we think of @xmath40 and @xmath39 as random variables defined on a randomly chosen @xmath22 .",
    "that is , our sample space is @xmath15 , each diagram having equal probability @xmath46 .",
    "we denote the expected values by @xmath47 $ ] and @xmath48 $ ] .",
    "we will show that @xmath49 , from which theorem main follows via @xmath50 .",
    "we label the dot @xmath51 , and its corresponding square , simply by @xmath52 , and so @xmath53 will mean addition mod @xmath3 .",
    "the interval along the boundary of the annulus @xmath54 between two adjacent squares will be called an _ edge _ , so we have @xmath55 edges .",
    "we orient the edges according to the orientation induced on @xmath56 from that of @xmath54 , and we denote the oriented edge from square @xmath25 to square @xmath32 by @xmath57 $ ]",
    ". the edge @xmath58 $ ] will then be the parallel edge in the other boundary component .",
    "so , all edges in @xmath59 are of the form @xmath60 $ ] , and they will be called _ positive _ edges , and all edges in @xmath61 are of the form @xmath62 $ ] and will be called _ negative _ edges .",
    "see figure f2 .",
    "we would like to see how our edges are attached to each other due to the gluing of two squares .",
    "we will say an attachment @xmath57-[c , d]$ ] takes place if the end point of @xmath57 $ ] is glued to the beginning point of @xmath63 $ ] .",
    "so , say we have identified the two squares @xmath25 and @xmath32 according to the oriented chord @xmath21 .",
    "as seen in figure f3 , the eight edges involved are attached to each other as follows : @xmath64-[b , b+1]$ ] ,  @xmath65-[a , a+1]$ ] ,  @xmath62-[b , b-1]$ ] ,  @xmath66-[a , a-1]$ ] .",
    "this can be summarized by the following rule :    [ r ] an attachment @xmath57-[c , d]$ ] holds if the oriented chord @xmath67 exists , and the signs of @xmath57 $ ] and @xmath63 $ ] are the same , or if the oriented chord @xmath68 exists and the signs of @xmath57 $ ] and @xmath63 $ ] are opposite .",
    "traveling along a boundary component of the surface @xmath34 corresponds to a walk along the diagram @xmath29 , which by rule r proceeds as follows : when moving along the circle of the diagram , and arriving at an end of a chord , continue your motion along the chord to its other side .",
    "if your motion along the chord is in the direction ( respectively , against the direction ) of its orientation , then continue your motion along the circle in the same ( respectively , opposite ) direction as you have moved before entering the chord .",
    "we may thus read all boundary components directly from the diagram @xmath29 , as follows : choose an arbitrary edge , and start traveling along the diagram in the above way , alternatingly passing edges and chords , until you return to your initial edge . then choose some unvisited edge , and similarly travel until you return to it .",
    "continue until all edges have been visited .",
    "notice that when this is done , each chord of the diagram has been visited four times , each visit corresponding to one of the four corners of the glued square .    for @xmath69 ,",
    "a @xmath52-@xmath1-diagram is a choice of @xmath70 out of the @xmath3 dots , and a division of these @xmath70 dots into @xmath52 oriented chords , i.e. ordered pairs .",
    "the remaining @xmath71 dots will be called _ vacant _ dots .",
    "so , an oriented chord diagram of order @xmath1 is an @xmath1-@xmath1-diagram .",
    "[ d0 ] a _ path _ in a @xmath52-@xmath1-diagram @xmath29 , is a sequence @xmath72-[a_2,b_2]- \\cdots - [ a_r , b_r]$ ] of distinct edges , attached via oriented chords of @xmath29 according to rule r. a path in @xmath29 is called a _ loop _ if the attachment @xmath73-[a_1,b_1]$ ] also holds . a path in @xmath29",
    "is called a _ segment _ if @xmath74 and @xmath75 are vacant dots ( perhaps the same dot ) .",
    "loops and segments are precisely those paths that can not be further extended .",
    "we now specify our procedure for choosing a random @xmath1-@xmath1-diagram .",
    "our procedure will choose the chords one by one .",
    "we first fix an ordering @xmath76 of our edges , once and for all .",
    "before the procedure begins , we announce @xmath77 as the `` pointer '' edge .",
    "assume that after the @xmath78th step , we have already chosen @xmath79 oriented chords , and the pointer edge lies in a segment ( rather than a loop ) of the given @xmath78-@xmath1-diagram .",
    "the next chord is now chosen with one of its dots being the concluding dot of the segment in which the pointer lies , and its other dot is randomly chosen from the other @xmath80 vacant dots .",
    "the orientation of the new chord is also randomly chosen .",
    "if in the new @xmath81-@xmath1-diagram , the pointer s segment continues to be a segment , i.e. it does not close into a loop , then the same edge remains the pointer .",
    "if on the other hand , after the @xmath81th chord is added , the pointer s segment closes into a loop , then the edge with smallest index which lies in a segment in the new @xmath81-@xmath1-diagram , becomes the new pointer .",
    "this procedure indeed produces all @xmath1-@xmath1-diagrams with equal probability .",
    "examples of two runs of our random procedure appear in figures f4 and f5 , demonstrating some of the interesting features of the possible evolution of the pointer s segment . in both figures",
    "the edge @xmath77 is the edge @xmath60 $ ] and is marked by 1 .    in figure",
    "f4 the chords are chosen in the following order : @xmath82 .",
    "the segment of @xmath77 after the four steps of this run is @xmath83-[a , a+1]-[b , b+1]-[c , c-1]-[c+1,c]-[b+1,b]-[a+1,a+2]-[a , a-1]$ ] and these edges are marked in the figure by @xmath84 , in this order .",
    "the evolution of @xmath77 s segment throughout the four steps of this run is @xmath85 , @xmath86 , @xmath87 , @xmath88 .",
    "note that after the third step the segment revisits some chords that were chosen in previous steps .",
    "note that after the fourth step the segment extends in both directions , and so @xmath89 is no longer the first edge in the segment .",
    "we point out the following difference between this run , and the run of figure f5 . in figure",
    "f4 the initial and final dots of the pointer s segment are distinct , whereas in figure f5 it is the same dot .",
    "in this section we establish our upper bound for @xmath90 .",
    "if @xmath91 is a loop in an @xmath1-@xmath1-diagram @xmath29 , then the _ size _ of @xmath91 is the number of distinct chords visited by @xmath91 .",
    "if @xmath52 is the size of the loop @xmath91 and @xmath92 is the number of edges it visits , then since @xmath91 alternatingly visits an edge and a chord , and since each chord is visited at most four times , we have @xmath93 .    for given @xmath1 , let @xmath94 denote the expected number of loops of size @xmath52 in a random @xmath1-@xmath1-diagram , then @xmath95 .",
    "we will show in proposition p4 below , that for @xmath96 , @xmath97 . on the other hand ,",
    "since any chord is visited by at most four different loops , the total number of all loops of size @xmath98 is at most @xmath99 , and so its expected value @xmath100 is at most @xmath99 .",
    "together this gives @xmath101    in order to obtain our bound @xmath97 we will need to bound the probability that at a given @xmath52th step , the pointer s segment closes into a loop .",
    "we now prove the following :    [ p3 ] for @xmath96 , the probability that the pointer s segment will close into a loop at the @xmath52th step is at most @xmath102 .",
    "let @xmath103 be the pointer s segment in our @xmath104-@xmath1-diagram after step @xmath105 , and let @xmath106 be its concluding dot .",
    "we now need to choose the @xmath52th chord , with one end being @xmath106 .",
    "we must determine how many choices will result in closing @xmath103 into a loop .",
    "let @xmath107 be the initial dot of @xmath103 .",
    "if @xmath108 ( as occurs in the example in figure f4 , where @xmath109 and @xmath110 ) , then for @xmath103 to be closed into a loop , we must choose @xmath107 as the second dot for the @xmath52th chord , and so the choice of unoriented chord is unique .",
    "though usually only one of the two choices of orientation for this chord will indeed close the segment @xmath103 into a loop ( as is the case in figure f4 ) , it may in fact occur that both orientations accomplish this .",
    "since we are seeking an upper bound for the probability , we will always count both orientations as possible , or in other words we will ignore the choice of orientation in the computation of the probability . since there are @xmath111 vacant dots from which we may choose the second dot for the new chord , the probability of choosing the correct dot @xmath107 is @xmath112 , and since we assume @xmath113 we have @xmath114 .    if @xmath115 ( as in the example of figure f5 , where @xmath116 ) , then at first sight it may seem that closing the pointer s segment into a loop is impossible , and in most cases this is in fact true .",
    "but on the other hand , there are cases with @xmath115 where not only does there exist a choice of chord that closes the given segment into a loop , but there are in fact many such choices .",
    "the example in figure f5 is such case .",
    "the oriented chords @xmath117 , @xmath118 or @xmath119 may each be added in the present step to close the pointer s segment into a loop . for the analysis of this phenomenon , we define the following notion .",
    "[ d1 ] a _ plug _ is a segment @xmath72-\\cdots-[a_r , b_r]$ ] for which @xmath120 .",
    "the vacant dot @xmath120 is called the _ entrance _ to the plug",
    ".    examples of two plugs are depicted in figure f6 . in figure f6a ,",
    "the chord @xmath121 produces the plug @xmath122 - [ a+1,a]$ ] with entrance @xmath25 . in figure f6b , the chords @xmath123 and @xmath124 produce the plug @xmath60 - [ a+3,a+4 ] - [ a+2,a+3 ] - [ a+1,a]$ ] with entrance @xmath25 . note that the same vacant dot can be the entrance to two different plugs .    in our present case , where @xmath115 , the pointer s segment is itself a plug , but this fact is not of interest to us .",
    "what enables us to close the pointer s segment into a loop in figure f5 , is each one of the _ additional _ plugs that are present in the given @xmath125-@xmath1-diagram , namely the three plugs @xmath126-[a+5,a+4]$ ] , @xmath127-[a+8,a+7]$ ] , and @xmath128-[a+12,a+11]$ ] ( each of which is similar to the plug in figure f6a ) .",
    "in fact , the next lemma shows that in order to close the pointer s segment into a loop in the case @xmath115 , it is necessary that the second dot of the new chord will be an entrance to a plug .",
    "[ l1 ] let @xmath29 be a @xmath78-@xmath1-diagram , and let @xmath25 be a vacant dot in @xmath29 .",
    "let @xmath129 be an edge entering @xmath25 , ( i.e. @xmath129 is @xmath64 $ ] or @xmath62 $ ] ) .",
    "assume @xmath130 is an additional oriented chord with one end at @xmath25 and the other end at some other vacant dot @xmath32 , such that in the @xmath81-@xmath1 diagram obtained by adding @xmath130 , the path beginning at @xmath129 leads to an edge @xmath131 which is one of the two exiting edges at @xmath25 ( i.e. @xmath131 is @xmath60 $ ] or @xmath122 $ ] ) .",
    "then @xmath32 is the entrance to a plug in @xmath29 .",
    "assume @xmath32 is not an entrance to a plug . in figure f7 ,",
    "edge @xmath129 is marked , and the two possibilities for @xmath131 are marked .",
    "the path beginning at @xmath129 passes the point @xmath132 , and in order for it to lead to @xmath131 , it must eventually arrive back into the region depicted in the figure .",
    "it does not arrive at @xmath133 or @xmath134 since we have assumed that @xmath32 is not an entrance to a plug .",
    "if it arrives at @xmath135 then it closes a loop without passing either possibility for @xmath131 .",
    "so , it must arrive at @xmath136 as depicted , and it then exits our region through point @xmath137 .",
    "this time its only possibility for returning is through @xmath135 , which as before prevents it from ever arriving at either possibility for the exiting edge @xmath131 .",
    "as we have seen , there may be many plugs available for completing our segment into a loop , but fortunately , the _ expected _ number of available plugs is small .",
    "the main technical effort of this work is the following proposition whose proof we defer to section plug .",
    "[ pl ] for @xmath96 , the expected number of plugs present after @xmath52 steps of the random procedure is at most @xmath138 .    back to the proof of proposition p3 for the case @xmath115 . by lemma l1 , in order for @xmath103 to close into a loop , the second dot we choose for the new chord must be the entrance to some plug . by proposition",
    "pl , the expected number of plugs existing in the present stage of the random procedure ( i.e. after @xmath105 steps ) , is at most @xmath138 . together with the case",
    "@xmath108 we have on average at most @xmath139 choices for the new unoriented chord .",
    "( as before , we ignore the additional choice of orientation . ) note that we must take the sum and not the maximum of the bounds for the two possibilities @xmath108 and @xmath115 , since the expectation for the number of plugs that we bound in proposition pl is not conditional on @xmath140 .",
    "we obtain that for @xmath113 , the probability that the pointer s segment closes into a loop at the @xmath52th step of the random procedure is at most @xmath141 , which completes the proof of proposition p3 .",
    "[ p4 ] let @xmath142 denote the expected number of loops of size @xmath52 in a random @xmath1-@xmath1-diagram .",
    "then for @xmath96 we have @xmath97 .",
    "it is clear from the definition of our random procedure , that if the segment of @xmath77 closes into a loop at the @xmath52th step , then this loop is of size @xmath52 .",
    "so the event that the edge @xmath77 lies in a loop of size @xmath52 is the same as the event that @xmath77 survives as pointer until step @xmath52 , and then at step @xmath52 its segment closes into a loop .",
    "the probability for this event is at most the probability that at the @xmath52th step the pointer s segment closes into a loop , and by proposition p3 this probability is at most @xmath102 .",
    "now , our random procedure produces each @xmath1-@xmath1-diagram with equal probability , and so by the symmetry of our annulus , the probability for _ any _ given edge to lie in a loop of size @xmath52 is also at most @xmath102 , or alternatively , the probability @xmath143 that a _",
    "randomly _ chosen edge will lie in a loop of size @xmath52 is at most @xmath102 .",
    "we obtain a lower bound for @xmath143 by noting that each loop of size @xmath52 includes at least @xmath52 edges , and the total number of edges is @xmath55 , and so @xmath144 .",
    "together we get @xmath145 which proves our claim .    as already explained above , the bound @xmath97 for @xmath96",
    "implies the following upper bound for @xmath90 : @xmath146",
    "we have asked in the proof of proposition p4 , what is the probability @xmath143 that a randomly chosen edge will lie in a loop of size @xmath52 .",
    "we have noticed that this is precisely the probability that in our random procedure , the segment of @xmath77 survives until the @xmath52th step , and then at the @xmath52th step it closes into a loop . in this section",
    "we will find a lower bound for @xmath143 , for @xmath147 and @xmath148 , which in turn will provide a lower bound for @xmath90 .",
    "a run of @xmath79 steps of the random procedure is called _ good _ if after these @xmath79 steps @xmath77 is still the pointer , and its segment is of the form @xmath72-\\cdots-[a_j , b_j]$ ] with all the dots @xmath149 being distinct .",
    "when @xmath150 , i.e. before starting the random procedure , then the pointer s segment is simply @xmath151 $ ] , so the run is good .",
    "if the run is good after @xmath79 steps , and at the @xmath81th step the second dot chosen for the new chord is not adjacent to any of the dots @xmath149 , then the run is still good after the @xmath81th step .",
    "this restriction for the choice of the @xmath81th chord means that if an edge of the segment is say @xmath60 $ ] , then the four dots @xmath152 are not chosen .",
    "so , at the @xmath81th step we have at most @xmath153 dots which we are forbidden to choose , so the number of allowed choices for a new dot at the @xmath81th step is at least @xmath154 .",
    "since the total number of dots from which we choose is @xmath80 , the probability for such restricted choice at the @xmath81th step is at least @xmath155 .",
    "if after @xmath105 steps of the random procedure the run is still good , then in particular , the initial and final dots of @xmath77 s segment are distinct .",
    "so , at the @xmath52th step there exists a choice of oriented chord that closes @xmath77 s segment into a loop , and the probability for this choice is @xmath156 .",
    "so together , for @xmath147 and @xmath148 , the probability that the segment of @xmath77 survives until the @xmath52th step , and then at the @xmath52th step closes into a loop satisfies : @xmath157 ( we use the assumption @xmath147 in the fourth and last inequalities . )    as before , let @xmath142 be the expected number of loops of size @xmath52 in a random @xmath1-@xmath1-diagram , then since the number of edges in a loop of size @xmath52 is at most @xmath158 we have @xmath159 .",
    "together , for @xmath147 and @xmath160 we get @xmath161 , so @xmath162 .",
    "we may now establish our lower bound for @xmath90 , for @xmath147 : @xmath163    together with the upper bound of section up we obtain @xmath49 , which proves theorem main , stating that the expected genus @xmath0 of a random diagram of order @xmath1 satisfies : @xmath2",
    "in this section we prove proposition pl , stating that for @xmath113 , the expected number of plugs present in our @xmath52-@xmath1-diagram after @xmath52 steps of the random procedure is at most @xmath138 .",
    "[ sgn ] a _ positive _ plug is a plug @xmath72-\\cdots-[a_r , b_r]$ ] for which the two edges @xmath72,[a_r , b_r]$ ] are of the same sign , that is , they are of the form @xmath60,[a-1,a]$ ] or @xmath122,[a+1,a])$ ] , ( as in figure f6a ) . a _ negative _ plug is a plug for which these two edges are of opposite sign , that is , they are of the form @xmath60,[a+1,a]$ ] or @xmath122,[a-1,a]$ ] , ( as in figure f6b ) . note that if same vacant dot is the entrance to two different plugs , then these two plugs must be of the same sign .",
    "[ l2 ] under the assumptions of lemma l1 , if @xmath129 and @xmath131 are of opposite sign , and if @xmath32 is not the entrance to a positive plug ( and so by lemma l1 it is the entrance to one or two negative plugs ) , then either @xmath25 and @xmath32 are neighbors ( definition d3 ) , or @xmath25 is also an entrance to a plug .",
    "assume @xmath25 and @xmath32 are not neighbors . in order for us to arrive at @xmath131 ,",
    "given that @xmath32 is not the entrance to a positive plug and @xmath25 and @xmath32 are not neighbors , our path must be as in figure f8 , which shows that @xmath25 is the entrance to a ( negative ) plug .",
    "any chord is involved in at most four different segments , and so at each step , when adding a new chord , at most four new plugs can be created .",
    "but we will show that in fact the expected number of plugs created at each step @xmath96 is at most @xmath164 .",
    "this implies that the expected number of plugs present after @xmath96 steps is at most @xmath138 . to establish this bound we will in fact need to prove the following more detailed proposition , which distinguishes between positive and negative plugs .      1 .",
    "let @xmath165 ( respectively @xmath166 ) denote the expected number of positive ( respectively negative ) plugs completed at the @xmath52th step",
    ". then @xmath167 and @xmath168 .",
    "[ 1 ] 2 .",
    "the expected number of plugs present after @xmath52 steps is at most @xmath138 .",
    "[ 2 ] 3 .",
    "let @xmath169 ( respectively @xmath170 ) denote the probability that after the @xmath52th step the concluding dot of the pointer s segment is an entrance to a positive ( respectively negative ) plug .",
    "then @xmath171 and @xmath172 .",
    "[ 3 ]    \\(1 ) say at the @xmath52th step we have chosen a chord @xmath130 between dots @xmath25 and @xmath32 , and a plug has been completed , with dot @xmath14 being its entrance .",
    "this means that after adding @xmath130 there is a segment with edges @xmath173 beginning and ending at the vacant dot @xmath14 , and before adding @xmath130 this segment did not exist .",
    "this means that before adding @xmath130 , the segment @xmath174 beginning with @xmath175 ended at some vacant dot @xmath176 , and the segment @xmath177 ending with @xmath178 began at some vacant dot @xmath179 .",
    "we now distinguish three cases as follows .",
    "if @xmath180 then the new chord @xmath130 must be between @xmath25 and @xmath181 . by definition of our random procedure , the concluding vacant dot @xmath106 of the pointer s segment is one of the dots of the new chord @xmath130 , so must be either @xmath25 or @xmath181 .",
    "we will refer to this case as case a. if on the other hand @xmath182 then the new chord @xmath130 must be between @xmath25 and some other vacant dot @xmath32 . in this case",
    "either @xmath183 or @xmath184 , and these two possibilities will be referred to as case b and case c , respectively .    for case",
    "a , we note that there are at most four different segments with one end being @xmath106 .",
    "the other end of each such segment is a vacant dot that may be @xmath14 of the above description . for each such @xmath14",
    "there is a unique second segment with which a configuration @xmath185 as described above may arise for a positive plug , and a unique such second segment for a negative plug .",
    "our assumption is that @xmath180 and so for each such configuration there is a unique choice of unoriented chord with which such a plug may be created .",
    "as discussed in section up , it may be that both choices of orientation for this chord bring to the completion of the plug .",
    "so here and in all following cases , we do as we have done in section up , and include both choices in our count by simply ignoring the choice of orientation . as before ,",
    "the probability for the correct unoriented chord to be chosen in each case is @xmath112 since there are @xmath111 additional vacant dots , and for @xmath113 we have @xmath114 .",
    "so , the contribution of this case to @xmath165 and @xmath166 is at most @xmath186 .",
    "note that it may be that different configurations in our count are completed into a plug by the same choice of chord , but by the additivity of expectation , the contributions of all configurations may be added regardless of the dependence between them .    in case b ,",
    "@xmath130 is between the dot @xmath183 and the dot @xmath32 , and by lemma l1 , @xmath32 must be an entrance to an existing plug .",
    "we bound all possible contributions that may be from choosing the second dot of the new chord as the entrance to an existing plug .",
    "any new chord may participate in at most four different segments , and so at most four new plugs may be completed . by induction ,",
    "we may use ( 2 ) of the present proposition for @xmath105 to conclude that on average we have at most @xmath138 existing plugs available .",
    "so , the contribution is on average at most @xmath187 . we can not determine how this contribution will divide between @xmath165 and @xmath166 and so we add it to both .    in case c , @xmath184 , and",
    "our choice of the second dot @xmath25 for @xmath130 is such that @xmath25 is part of a configuration of segments @xmath185 and dots @xmath188 as described above .",
    "the segments @xmath174 and @xmath177 may or may not pass chords , but there is just one special configuration for @xmath185 in which both @xmath174 and @xmath177 do not pass any chord , namely , the configuration where @xmath25 and @xmath14 are adjacent dots along the annulus , and @xmath185 are the two edges connecting them .",
    "if the configuration is not this special one , then necessarily the dot @xmath14 is adjacent along the annulus to a dot that is the end of one of the @xmath105 existing chords .",
    "so there are at most @xmath189 possibilities for such dot . for each such dot @xmath14",
    "there are two possibilities for a pair of segments @xmath185 that may give rise to a positive plug , and two possibilities for a negative plug .",
    "together this gives at most @xmath190 possible pairs of segments for positive plugs and for negative plugs .",
    "now we note that in order for us to be in case c , our dot @xmath106 must be at the entrance to an existing plug after step @xmath105 . by induction",
    "we may use ( 3 ) of the present proposition for @xmath105 to conclude that the probability for us being in case c is at most @xmath191 .",
    "and so the contribution of the non - special configurations to @xmath165 and @xmath166 is at most @xmath192 .",
    "for the special configuration , if a plug is completed then it is necessarily a negative plug , so contributes only to @xmath166 .",
    "if @xmath184 is the entrance to a positive plug , which happens , by induction on part ( 3 ) , with probability at most @xmath193 , then we take our bound to be simply the total number of choices @xmath111 for @xmath25",
    ". there may be a special configuration on each side of @xmath25 , and so the contribution to @xmath166 is at most @xmath194 .",
    "if @xmath184 is the entrance to a negative plug , which happens by part ( 3 ) , by induction , with probability at most @xmath195 , then by lemma l2 , we must choose @xmath25 which is either a neighbor of @xmath32 or the entrance to a plug .",
    "the dot @xmath32 has at most 4 neighbors . for each such neighbor @xmath25",
    "there is at most one special configuration that may be completed into a plug , since it may not be on the side of @xmath25 where the segment from @xmath32 arrives at @xmath25 .",
    "so , the contribution of this case is at most @xmath196 .",
    "the second possibility is that @xmath25 itself is an entrance to a plug , but in case b above we have already counted all possible contributions from connecting @xmath106 to a dot which is the entrance to an existing plug , and so we need not count this again here .",
    "the contribution to @xmath166 is thus at most @xmath197 , since @xmath198 whenever the assumption @xmath96 is relevant .",
    "\\(3 ) if after the @xmath52th step , the final dot of our spanning segment is the entrance to a positive plug , then this plug may either be one that has existed previously , or one that has just been completed .",
    "if it is a plug that has existed previously , then in the @xmath104-@xmath1-diagram we had before the @xmath52th step , there is a unique segment @xmath103 leading to its entrance ( which is not the plug itself ) , and let @xmath25 denote the vacant dot at the beginning of @xmath103 . in order for us to end up at the entrance to the given plug after adding the @xmath52th chord , this chord must include @xmath25 .",
    "as before , let @xmath106 denote the concluding dot of the pointer s segment . if @xmath204 then we have one choice for such unoriented chord .",
    "if @xmath183 then in order for us to continue into the segment @xmath103 , then by lemma l1 the other dot @xmath32 of the new chord must be the entrance to an existing plug . together we see that in order for us to land at the entrance of an existing plug , we must choose the second dot for the new chord either as a dot @xmath25 as described above , which is uniquely determined by a plug , or as a dot which is itself the entrance to a plug . by ( 2 )",
    "we know that there are on average at most @xmath138 previously existing plugs , and so this contributes at most @xmath205 to the probability .    on the other hand ,",
    "the probability that after the @xmath52th step we have landed at the entrance of a positive plug that has just been completed , is at most the probability that such a plug has at all been completed at the @xmath52th step . by ( 1 )",
    "this probability is at most @xmath206 , since the expected number of plugs completed is a bound to the probability that at least one plug has been completed .",
    "together we get @xmath207 . in the same way , using @xmath168 we get @xmath172    recall that what we have actually used from proposition p2 is only part ( 2 ) , which bounds the total number of plugs .",
    "the need for this more detailed analysis is due to the large contribution of existing positive plugs to the completion of new negative plugs in case c with the special configuration .",
    "this required that we separate between positive and negative plugs in the inductive proof , with a larger bound for the negative plugs .",
    "rosenstiehl : `` solution algbrique du problme de gauss sur la permutation des points dintersection dune ou plusieurs courbes ferms du plan '' _ c.r .",
    ". a - b _ 283 ( 1976 ) , a551a553 ."
  ],
  "abstract_text": [
    "<S> to any generic curve in an oriented surface there corresponds an oriented chord diagram , and any oriented chord diagram may be realized by a curve in some oriented surface . </S>",
    "<S> the genus of an oriented chord diagram is the minimal genus of an oriented surface in which it may be realized . </S>",
    "<S> let @xmath0 denote the expected genus of a randomly chosen oriented chord diagram of order @xmath1 . </S>",
    "<S> we show that @xmath0 satisfies : @xmath2    [ section ] [ thm]lemma [ thm]proposition [ thm]corollary [ thm]definition [ thm]remark [ thm]example [ thm]rule </S>"
  ]
}
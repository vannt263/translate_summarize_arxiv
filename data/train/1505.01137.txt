{
  "article_text": [
    "consider the problem ( see fig .",
    "1 ) of compressing @xmath0 with side information @xmath1 available only at the decoder . here",
    "@xmath2 is a joint memoryless source with zero - order joint probability distribution @xmath3 on finite alphabet @xmath4 .",
    "let @xmath5 and @xmath6 be the marginal probability distributions of @xmath7 and @xmath8 induced by the joint probability distribution @xmath3 . without loss of generality , we shall assume @xmath9 for all @xmath10 .",
    "this problem was first studied by slepian and wolf in their landmark paper @xcite .",
    "they proved a surprising result that the minimum rate for reconstructing @xmath11 at the decoder with asymptotically zero error probability ( as block length @xmath12 goes to infinity ) is @xmath13 , which is the same as the case where the side information @xmath14 is also available at the encoder .",
    "the fundamental limit @xmath13 is often referred to as the slepian - wolf limit .",
    "we shall assume @xmath15 throughout this paper .",
    "[ c]@xmath11[c]@xmath14[c]@xmath16[c]@xmath17[c]@xmath18[c]encoder[c]decoder    different from conventional lossless source coding , where most effort has been devoted to variable - rate coding schemes , research on slepian - wolf coding has almost exclusively focused on fixed - rate codes .",
    "this phenomenon can be partly explained by the influence of channel coding .",
    "it is well known that there is an intimate connection between channel coding and slepian - wolf coding .",
    "intuitively , one may view @xmath14 as the channel output generated by channel input @xmath11 through discrete memoryless channel @xmath19 , where @xmath19 is the probability transition matrix from @xmath20 to @xmath21 induced by the joint probability probability distribution @xmath3 . since @xmath14 is not available at the encoder ,",
    "slepian - wolf coding is , in a certain sense , similar to channel coding without feedback . in a channel coding system",
    ", there is little incentive to use variable - rate coding schemes if no feedback link exists from the receiver to the transmitter .",
    "therefore , it seems justifiable to focus on fixed - rate codes in slepian - wolf coding .",
    "this viewpoint turns out to be misleading .",
    "we shall show that variable - rate slepian - wolf codes can significantly outperform fixed - rate codes in terms of rate - error tradeoff .",
    "specifically , it is revealed that variable - rate slepian - wolf codes can beat the sphere - packing bound for fixed - rate slepian - wolf codes at rates close to the slepian - wolf limit since in this case one can achieve zero error probability using variable - rate coding schemes . ] .",
    "it is known that the correct decoding probability of fixed - rate slepian - wolf codes decays to zero exponentially fast if the rate is below the slepian - wolf limit .",
    "somewhat surprisingly , the decoding error probability of variable - rate slepian - wolf codes can be bounded away from one even when they are operated below the slepian - wolf limit , and the performance degrades graciously as the rate goes to zero .",
    "therefore , variable - rate slepian - wolf coding is considerably more robust .",
    "the rest of this paper is organized as follows . in section [ fixedrate ] , we review the existing bounds on the reliability function of fixed - rate slepian - wolf coding , and point out the intimate connections with their counterparts in channel coding . in section [ variablerate ]",
    ", we characterize the reliability function of variable - rate slepian - wolf coding by leveraging the reliability function of channel coding with constant composition codes .",
    "computable lower and upper bounds are derived .",
    "the bounds coincide at rates close to the slepian - wolf limit .",
    "the correct decoding probability of variable - rate slepian - wolf coding with rate below the slepian - wolf limit is studied in section [ below ] .",
    "an illustrative example is given in section [ example ] .",
    "we conclude the paper in section [ conclusion ] . throughout this paper",
    ", we assume the logarithm function is to base @xmath22 unless specified otherwise .",
    "to facilitate the comparisons between the performances of fixed - rate slepian - wolf coding and variable - rate coding , we shall briefly review the existing bounds on the reliability function of fixed - rate slepian - wolf coding .",
    "it turns out that a most instructive way is to first consider their counterparts in channel coding .",
    "the reason is two - fold .",
    "first , it provides the setup to introduce several important definitions .",
    "second and more important , it will be clear that the reliability function of fixed - rate slepian - wolf coding is closely related to that of channel coding ; indeed , such a connection will be further explored in the context of variable - rate slepian - wolf coding .    for any probability distributions @xmath23 on @xmath20 and probability transition matrices",
    "@xmath24 , we use @xmath25 , @xmath26 , @xmath27 , and @xmath28 to denote the standard entropy , mutual information , divergence , and conditional divergence functions ; specifically , we have @xmath29    the main technical tool we need is the method of types .",
    "first , we shall quote a few basic definitions from @xcite .",
    "let @xmath30 denote the set of all probability distributions on @xmath20 .",
    "the type of a sequence @xmath31 , denoted as @xmath32 , is the empirical probability distribution of @xmath33 .",
    "let @xmath34 denote the set consisting of the possible types of sequences @xmath31 .",
    "for any @xmath35 , the type class @xmath36 is the set of sequences in @xmath37 of type @xmath38 .",
    "we will make frequent use of the following elementary results : @xmath39},\\quad x^n\\in\\mathcal{t}_n(q ) , q\\in\\mathcal{p}_n(\\mathcal{x}),p\\in\\mathcal{p}(\\mathcal{x}).\\label{typeprobability}\\end{aligned}\\ ] ]    a block code is an ordered collection of sequences in @xmath37 .",
    "we allow @xmath40 to contain identical sequences .",
    "moreover , for any set @xmath41 , we say @xmath42 if @xmath43 for all @xmath44 .",
    "note that @xmath45 does not imply @xmath46 . ]",
    "@xmath40 is a set of sequences in @xmath37 .",
    "the rate of @xmath40 is defined as @xmath47 given a channel @xmath48 , a block code @xmath49 , and channel output @xmath50 , the output of the optimal _ maximum likelihood _ ( ml )",
    "decoder is @xmath51 where the ties are broken in an arbitrary manner .",
    "the average decoding error probability of block code @xmath40 over channel @xmath52 is defined as @xmath53 the maximum decoding error probability of block code @xmath40 over channel @xmath52 is defined as @xmath54 the average correct decoding probability of block code @xmath40 over channel @xmath52 is defined as @xmath55    [ def : blockcode ] given a channel @xmath48 , we say an error exponent @xmath56 is achievable with block codes at rate @xmath16 if for any @xmath57 , there exists a sequence of block codes codes @xmath58 such that @xmath59 the largest achievable error exponent at rate @xmath16 is denoted by @xmath60 . the function @xmath61 is referred to as the reliability function of channel @xmath52 .",
    "similarly , we say a correct decoding exponent @xmath62 is achievable with block channel codes at rate @xmath16 if for any @xmath57 , there exists a sequence of block codes @xmath58 such that @xmath63 the smallest achievable correct decoding exponent at rate @xmath16 is denoted by @xmath64 .",
    "it will be seen that @xmath64 is positive if and only if @xmath65 , where @xmath66 is the capacity of channel @xmath52 .",
    "therefore , we shall refer to the function @xmath67 as the reliability function of channel @xmath52 above the capacity .",
    "remark : given any block code @xmath40 of average decoding error probability @xmath68 , we can expurgate the worst half of the codewords so that the maximum decoding error probability of the resulting code is bounded above by @xmath69 . therefore , the reliability function @xmath61 is unaffected if we replace @xmath68 by @xmath70 in ( [ averageerror ] ) .",
    "[ def : constantcomposition ] given a probability distribution @xmath71 and a channel @xmath48 , we say an error exponent @xmath56 is achievable at rate @xmath16 with constant composition codes of type approximately @xmath72 if for any @xmath57 , there exists a sequence of block codes codes @xmath58 with @xmath73 for some @xmath74 such that @xmath75 where @xmath76 is the @xmath77 norm . the largest achievable error exponent at rate @xmath16 for constant composition codes of type approximately @xmath72 is denoted by @xmath78 .",
    "the function @xmath79 is referred to as the reliability function of channel @xmath52 for constant composition codes of type approximately @xmath72 .",
    "similarly , we say a correct decoding exponent @xmath62 is achievable at rate @xmath16 with constant composition codes of type approximately @xmath72 if for any @xmath57 , there exists a sequence of block codes @xmath58 with @xmath73 for some @xmath74 such that @xmath80 the smallest achievable correct decoding exponent at rate @xmath16 for constant composition codes of type approximately @xmath72 is denoted by @xmath81 .",
    "remark : the reliability function @xmath79 is unaffected if we replace @xmath68 by @xmath70 in ( [ average2 ] ) .",
    "let @xmath82 and @xmath83 .",
    "define @xmath84,\\label{constex}\\\\ & & e_{rc}(q_{x},w_{y|x},r)=\\min\\limits_{v_{y|x}}\\left[d(v_{y|x}\\|w_{y|x}|q_{x})+|i(q_x , v_{y|x})-r|^+\\right],\\label{constrc}\\\\ & & e_{sp}(q_x , w_{y|x},r)=\\min\\limits_{v_{y|x}:i(q_x , v_{y|x})\\leq r}d(v_{y|x}\\|w_{y|x}|q_x),\\label{constsp}\\end{aligned}\\ ] ] where in ( [ constex ] ) , @xmath85 and @xmath86 are respectively the marginal probability distribution of @xmath87 and the joint probability distribution of @xmath7 and @xmath87 induced by @xmath72 and @xmath88 .",
    "let @xmath89 be the smallest @xmath90 with @xmath91 .",
    "we have @xmath92 it is known ( * ? ? ?",
    "* excercise 5.18 ) that @xmath93 is a decreasing convex function of @xmath16 for @xmath94 ; moreover , the minimum in ( [ rexinfty ] ) is achieved at @xmath86 if and only if @xmath95 where the probability distribution @xmath96 and the constant @xmath97 are uniquely determined by the condition @xmath98 .",
    "it is shown in ( * ? ? ? * lemma 3 ) that , for some @xmath99 $ ] , we have @xmath100 it is also known ( * ? ? ?",
    "* corollary 5.4 ) that @xmath101 where @xmath102 is the smallest @xmath16 at which the convex curve @xmath103 meets its supporting line of slope -1 .",
    "it is obvious that @xmath104 .",
    "[ prop : cr ] @xmath105 if and only if for all @xmath106 such that @xmath107 , the value of @xmath108 does not depend on @xmath109 .",
    "see appendix [ app : prop : cr ]    define @xmath110 .",
    "it is known ( * ? ? ?",
    "* excercise 5.3 ) that @xmath111 where the minimum is taken over those @xmath112 s for which @xmath113 whenever @xmath114 ; in particular , @xmath115 if and only if for every @xmath116 there exists an @xmath117 with @xmath118 and @xmath114 .",
    "[ prop : sp ] the minimum in ( [ rspinfty ] ) is achieved at @xmath119 if and only if the value of @xmath120 does not depend on @xmath109 for all @xmath121 such that @xmath107 .",
    "the proof is similar to that of proposition [ prop : cr ] .",
    "the details are omitted .",
    "one can readily prove the following result by combining propositions [ prop : cr ] and [ prop : sp ] .",
    "the following statements are equivalent :    1 .",
    "@xmath122 ; 2 .",
    "@xmath123 ; 3 .   for all @xmath106 such that @xmath107 , the value of @xmath108 does not depend on @xmath109 .",
    "[ prop : constantbounds ]    1 .",
    "@xmath124 ; 2 .",
    "@xmath125 with the possible exception of @xmath126 at which point the inequality not necessary holds ; 3 .",
    "@xmath127 $ ] .",
    "remark : @xmath128 , @xmath129 , and @xmath130 are respectively the expurgated exponent , the random coding exponent , and the sphere packing exponent of channel @xmath52 for constant composition codes of type approximately @xmath72 . the results in proposition [ prop : constantbounds ] are well known .",
    "however , bounding the decoding error probability of constant composition codes often serves as an intermediate step in characterizing the reliability function for general block codes ; as a consequence , the reliability function for constant composition codes is rarely explicitly defined .",
    "moreover , @xmath128 , @xmath129 , and @xmath130 are commonly used to bound the decoding error probability of constant composition codes for a fixed block length @xmath12 ; therefore , it is implicitly assumed that @xmath72 is taken from @xmath34 ( see , e.g. , @xcite ) .",
    "in contrast , we consider a sequence of constant composition codes with block length increasing to infinity and type converging to @xmath72 for some @xmath71 ( see definition [ def : constantcomposition ] ) .",
    "a continuity argument is required for passing @xmath72 from @xmath34 to @xmath30 . for completeness",
    ", we supply the proof in appendix [ app : prop : constantbounds ] .",
    "note that different from @xmath79 , the function @xmath131 has been completely characterized .",
    "[ prop : constanttogeneral ]    1 .",
    "@xmath132 , 2 .",
    "@xmath133 .",
    "remark : in view of the fact that @xmath81 is a continuous function of @xmath72 , we can replace  @xmath134 \" with  @xmath135 \" in the above equation , i.e. , @xmath136    it is obvious that @xmath137 ; the other direction follows from the fact that every block code @xmath40 contains a constant composition code @xmath138 with @xmath139 and @xmath140 .",
    "similarly , it is clear that @xmath141 ; the other direction follows from the fact that given any block code @xmath40 , one can construct a constant composition code @xmath138 with @xmath142 and @xmath143 @xcite .",
    "the expurgated exponent , random coding exponent , and sphere packing exponent of channel @xmath52 for general block codes are defined as follows :    1 .",
    "expurgated exponent @xmath144 2 .",
    "random coding exponent @xmath145 3 .",
    "sphere packing exponent @xmath146    let @xmath147 be the smallest @xmath16 to the right of which @xmath148 is finite .",
    "it is known ( * ? ? ?",
    "* excercise 5.3)@xcite that @xmath149.\\end{aligned}\\ ] ] by propositions [ prop : constantbounds ] and [ prop : constanttogeneral ] , we recover the following well - known result @xcite : @xmath150 with the possible exception of @xmath151 at which point the second inequality in ( [ reliabilitych ] ) not necessarily holds .    now we proceed to review the results on the reliability function of fixed - rate slepian - wolf coding .",
    "a fixed - rate slepian - wolf code @xmath152 is a mapping from @xmath37 to a set @xmath153 .",
    "the rate of @xmath152 is defined as @xmath154 given @xmath155 and @xmath14 , the output of the optimal _ maximum a posteriori _",
    "( map ) decoder is @xmath156 where the ties are broken in an arbitrary manner .",
    "the decoding error probability of slepian - wolf code @xmath152 is defined as @xmath157 the correct decoding probability of slepian - wolf code @xmath152 is defined as @xmath158    [ def : swfixed ] given a joint probability distribution @xmath3 , we say an error exponent @xmath56 is achievable with fixed - rate slepian - wolf codes at rate @xmath16 if for any @xmath57 , there exists a sequence of fixed - rate slepian - wolf codes @xmath159 such that @xmath160 the largest achievable error exponent at rate @xmath16 is denoted by @xmath161 . the function @xmath162 is referred to as the reliability function of fixed - rate slepian - wolf coding .",
    "similarly , we say a correct decoding exponent @xmath62 is achievable with fixed - rate slepian - wolf codes at rate @xmath16 if for any @xmath57 , there exists a sequence of fixed - rate slepian - wolf codes @xmath159 such that @xmath163 the smallest achievable correct decoding exponent at rate @xmath16 is denoted by @xmath164 .",
    "it will be seen that @xmath164 is positive if and only if @xmath165 .",
    "therefore , we shall refer to the function @xmath166 as the reliability function of fixed - rate slepian - wolf coding below the slepian - wolf limit .",
    "fixed - rate slepian - wolf coding has been studied extensively @xcite .",
    "the expurgated exponent , random coding scheme , and sphere packing exponent of fixed - rate slepian - wolf coding are defined as follows :    1 .",
    "expurgated exponent @xmath167,\\label{fixedswex}\\end{aligned}\\ ] ] 2 .   random coding exponent @xmath168,\\label{fixedswrc}\\end{aligned}\\ ] ] 3 .",
    "sphere packing exponent @xmath169.\\label{fixedswsp}\\end{aligned}\\ ] ]    equivalently , the random coding exponent and sphere packing exponent of fixed - rate slepian - wolf coding can be written as @xcite : @xmath170^{1+\\rho}+\\rho",
    "r\\right\\},\\\\ & & e_{sp}(p_{xy } , r)=\\sup\\limits_{\\rho>0}\\left\\{-\\log\\sum\\limits_{y}\\left[\\sum\\limits_{x}p_{xy}(x , y)^{\\frac{1}{1+\\rho}}\\right]^{1+\\rho}+\\rho r\\right\\}.\\end{aligned}\\ ] ] to see the connection between the random coding exponent and the sphere packing exponent , we shall write them in the following parametric forms @xcite : @xmath171 and @xmath172 ^ 2+r   & \\mbox{if } r>\\left .",
    "h(x^{(\\rho)}|y^{(\\rho)})\\right|_{\\rho=1 } , \\end{array}\\right.&\\\\\\end{aligned}\\ ] ] where the joint distribution of @xmath173 is @xmath174 , which is specified by @xmath175^{1+\\rho}}{\\sum_{y'}p_{y}(y')\\left[\\sum_{x}p_{x|y}(x|y')^{\\frac{1}{1+\\rho}}\\right]^{1+\\rho}},\\quad y\\in\\mathcal{y},\\label{para1}\\\\ & & p_{x^{(\\rho)}|y^{(\\rho)}}(x|y)=\\frac{p_{x|y}(x|y)^{\\frac{1}{1+\\rho}}}{\\sum_{x'}p_{x|y}(x'|y)^{\\frac{1}{1+\\rho}}},\\quad x\\in\\mathcal{x},y\\in\\mathcal{y}.\\label{para2}\\end{aligned}\\ ] ] define the critical rate @xmath176 note that @xmath177 and @xmath178 coincide when @xmath179 $ ] .",
    "let @xmath180 .",
    "it is shown in @xcite that @xmath181 it is well known that the reliability function @xmath162 is upper - bounded by @xmath182 and lower - bounded by @xmath183 and @xmath184 @xcite , i.e. , @xmath185 with the possible exception of @xmath186 at which point the second inequality in ( [ fixedsw ] ) not necessarily holds .",
    "note that @xmath187 is completely characterized for @xmath179 $ ] .",
    "unlike @xmath162 , the function @xmath166 has been characterized for all @xmath16 .",
    "specifically , it is shown in @xcite that @xmath188.\\label{fixedswc}\\end{aligned}\\ ] ]    comparing ( [ channelex ] ) with ( [ fixedswex ] ) , ( [ channelrc ] ) with ( [ fixedswrc ] ) , ( [ channelsp ] ) with ( [ fixedswsp ] ) , and ( [ channelc ] ) with ( [ fixedswc ] ) , one can easily see that there exists an intimate connection between fixed - rate slepian - wolf coding for source distribution @xmath3 and channel coding for channel @xmath19 .",
    "this connection can be roughly interpreted as the manifestation of the following facts @xcite .    1",
    ".   given , for each type @xmath189 , a constant composition code @xmath190 with @xmath191 and @xmath192 , one can use @xmath193 to partition type class @xmath194 into approximately @xmath195 disjoint subsets such that each subset is a constant composition code of type @xmath72 with the maximum decoding error probability over channel @xmath19 approximately equal to or less than that of @xmath193 . note that these partitions , one for each type class , yield a fixed - rate slepian - wolf code of rate approximately @xmath16 with @xmath196 . since @xmath197 ( cf .",
    "( [ typeclass ] ) , ( [ typeprobability ] ) ) , it follows that @xmath198}$ ] .",
    "the overall decoding error probability @xmath199 of the resulting slepian - wolf code can be upper - bounded , on the exponential scale , by @xmath200}$ ] , where @xmath201 .",
    "in contrast , one has the freedom to choose @xmath72 in channel coding , which explains why maximization ( instead of minimization ) is used in ( [ channelex ] ) , ( [ channelrc ] ) , and ( [ channelsp ] ) .",
    "2 .   given a fixed - rate slepian - wolf code @xmath152 with @xmath202 and @xmath203 , one can , for each type @xmath189 , lift out a constant composition code @xmath190 with @xmath204 and @xmath205}$ ] .",
    "3 .   the correct decoding exponents for channel coding and fixed - rate slepian - wolf coding can be interpreted in a similar way .",
    "note that in channel coding , to maximize the correct decoding probability one has to minimize the correct decoding exponent ; this is why in ( [ channelc ] ) minimization ( instead of maximization ) is used .",
    "therefore , it should be clear that to characterize the reliability functions for channel coding and fixed - rate slepian - wolf coding , it suffices to focus on constant composition codes .",
    "it will be shown in the next section that a similar reduction holds for variable - rate slepian - wolf coding .",
    "indeed , the reliability function for constant component codes plays a predominant role in determining the fundamental rate - error tradeoff in variable - rate slepian - wolf coding .",
    "a variable - rate slepian - wolf code @xmath206 is a mapping from @xmath37 to a binary prefix code @xmath207 .",
    "let @xmath208 denote the length of binary string @xmath209 .",
    "the rate depends on @xmath3 only through @xmath5 .",
    "] of variable - rate slepian - wolf code @xmath152 is defined as @xmath210 given @xmath211 and @xmath14 , the output of the optimal _ maximum a posteriori _ ( map )",
    "decoder is @xmath212 where the ties are broken in an arbitrary manner .",
    "the decoding error probability of variable - rate slepian - wolf code @xmath206 is defined as @xmath213 the correct decoding probability of slepian - wolf code @xmath206 is defined as @xmath214    [ def : swvariable ] given a joint probability distribution @xmath3 , we say an error exponent @xmath56 is achievable with variable - rate slepian - wolf codes at rate @xmath16 if for any @xmath57 , there exists a sequence of variable - rate slepian - wolf codes @xmath215 such that @xmath216 the largest achievable error exponent at rate @xmath16 is denoted by @xmath217 . the function @xmath218 is referred to as the reliability function of variable - rate slepian - wolf coding .",
    "the power of variable - rate slepian - wolf coding results from its flexibility in rate allocation . note that in fixed - rate slepian - wolf coding , one has to allocate the same amount of rate to each type class ( cf .",
    "( [ cardinality ] ) ) , the encoder can convey the type information to the decoder using negligible amount of rate when @xmath12 is large enough .",
    "therefore , without loss of much generality , we can assume that the type of @xmath11 is known to the decoder .",
    "under this assumption , an optimal fixed - rate slepian - wolf encoder of rate @xmath16 should partition @xmath36 into @xmath219 disjoint subsets for each @xmath220 .",
    "it can be seen that the rate allocated to @xmath36 is always @xmath16 if @xmath221 . ] . in general , the type @xmath222 that dominates the error probability of fixed - rate slepian - wolf coding is different from @xmath5 . in contrast , for variable - rate slepian - wolf coding , we can losslessly compress the sequences of types that are bounded away @xmath5 by allocating enough rate to those type classes ( but its contribution to the overall rate is still negligible since the probability of those type classes are extremely small ) , and therefore , effectively eliminate the dominant error event in fixed - rate slepian - wolf coding . as a consequence , the types that can cause decoding error in variable - rate slepian - wolf coding must be very close to @xmath5 .",
    "this is the main intuition underlying the proof of the following theorem .",
    "[ theorem1 ] @xmath223 .",
    "the proof is divided into two parts .",
    "firstly , we shall show that @xmath224 .",
    "the main idea is that one can use a constant composition code @xmath40 of type approximately @xmath5 and rate approximately @xmath225 to construct a variable - rate slepian - wolf code @xmath226 with @xmath227 , @xmath228 , and @xmath229 .",
    "by definition [ def : constantcomposition ] , for any @xmath57 , there exists a sequence of constant composition codes @xmath58 with @xmath73 for some @xmath74 such that @xmath230 since @xmath231 for all @xmath117 , we have @xmath232 for all sufficiently @xmath12 , where @xmath233 let @xmath234 . when @xmath12 is large enough , we can , for each @xmath235 , construct a constant composition code @xmath236 of length @xmath237 and type @xmath38 by concatenating a fixed sequence in @xmath238 to each codeword in @xmath239 .",
    "it is easy to see that @xmath240 for all @xmath235 .",
    "one can readily show by invoking the covering lemma in @xcite that for each @xmath235 , there exist @xmath241 permutations @xmath242 of the integers @xmath243 such that @xmath244 where @xmath245 in view of ( [ cardinv ] ) , we can rewrite @xmath241 as @xmath246 note that @xmath247 given @xmath248 , we can partition @xmath249 into @xmath241 disjoint subsets : @xmath250 it is clear that @xmath251    now construct a sequence of variable - rate slepian - wolf codes @xmath252 as follows .    1 .",
    "the encoder sends the type of @xmath253 to the decoder , where each type is uniquely represented by a binary sequence of length @xmath254 .",
    "if @xmath255 for some @xmath256 , the encoder sends @xmath253 losslessly to the decoder , where each @xmath257 is uniquely represented by a binary sequence of length @xmath258 .",
    "3 .   if @xmath255 for some @xmath259 , the encoder finds the set @xmath260 that contains @xmath253 and sends the index @xmath261 to the decoder , where each index in @xmath262 is uniquely represented by a binary sequence of length @xmath263 .    specifically , we choose @xmath264 note that @xmath265 where @xmath266 it is easy to verify ( cf .",
    "( [ cardinality ] ) , ( [ typeclass ] ) and ( [ typeprobability ] ) ) that @xmath267 therefore , we have @xmath268 by ( [ appendinv ] ) , ( [ permutationinv ] ) , ( [ partitioninv ] ) and the construction of @xmath269 , it is clear that @xmath270 which implies @xmath271 in view of ( [ rate1 ] ) , ( [ exponent ] ) and the fact that @xmath57 is arbitrary , we must have @xmath272 ( cf",
    ". definition [ def : swvariable ] ) .",
    "now we proceed to show that @xmath273 .",
    "the main idea is that one can extract a constant composition code of type approximately @xmath5 and rate approximately @xmath274 or greater from a given variable - rate slepian - wolf code @xmath206 of rate approximately @xmath16 such that the average decoding error probability of this constant composition code over channel @xmath19 is bounded from above by @xmath275 , where @xmath276 is a constant that does not depend on @xmath12 .    by definition",
    "[ def : swvariable ] , for any @xmath57 , there exists a sequence of variable - rate slepian - wolf codes @xmath215 such that @xmath277 suppose @xmath206 induces a partition if @xmath278 for some @xmath279 , and @xmath280 if @xmath281 for @xmath282 . ]",
    "of @xmath36 , @xmath35 , into @xmath283 disjoint subsets @xmath284 .",
    "define @xmath285 where @xmath286 .",
    "one can readily verify that @xmath287 moreover , by ( [ rate ] ) and ( [ fn ] ) we have @xmath288    let @xmath276 be a positive number satisfying @xmath289 define @xmath290 it follows from the weak law of large numbers that @xmath291 in view of ( [ gn ] ) , ( [ an ] ) and ( [ sn ] ) , we have @xmath292-\\left[1-\\sum\\limits_{(p , i)\\in\\mathcal{g}_{n}(\\gamma^*)}\\mbox{pr}\\{x^n\\in\\mathcal{t}_n(p , i)\\}\\right]\\right.\\\\ & & \\hspace{0.676in}\\left.-\\left[1-\\sum_{p\\in\\mathcal{s}_n(\\delta)}\\mbox{pr}\\{x^n\\in\\mathcal{t}_n(p)\\}\\right]\\right\\}\\\\ & & \\geq\\frac{\\gamma^*-1}{\\gamma^*}+\\frac{\\delta}{r+2\\delta}-1\\\\ & & > 0.\\end{aligned}\\ ] ] therefore , @xmath293 is non - empty for all sufficiently large @xmath12 . pick an arbitrary @xmath294 from @xmath293 for each sufficiently large @xmath12 .",
    "we can construct a constant composition code @xmath295 of length @xmath296 and type @xmath297 for some @xmath298 by concatenating a fixed sequence in @xmath299 to each sequence in @xmath300 such that @xmath301 note that @xmath302\\nonumber\\\\ & \\geq&\\frac{h(p_x)-r-3\\delta}{1+\\delta}.\\label{rate2}\\end{aligned}\\ ] ] moreover , since @xmath303 it follows from ( [ error ] ) that @xmath304 in view of ( [ type2 ] ) , ( [ rate2 ] ) , ( [ exponent2 ] ) , and the fact that @xmath57 is arbitrary , we must have @xmath305 ( cf .",
    "definition [ def : constantcomposition ] ) .",
    "the proof is complete .",
    "the following result is an immediate consequence of theorem [ theorem1 ] and proposition [ prop : constantbounds ] .",
    "define @xmath306 we have    1 .",
    "@xmath307 ; 2 .",
    "@xmath308 with the possible exception of @xmath309 at which point the inequality not necessarily holds .",
    "remark :    1 .",
    "we have @xmath310 for @xmath311 , and @xmath312 for @xmath313 .",
    "therefore , @xmath314 and @xmath315 are respectively the upper bound and the lower bound on the zero - error rate of variable - rate slepian - wolf coding .",
    "2 .   in view of ( [ rcsp ] )",
    ", we have @xmath316 for @xmath317 $ ] .",
    "note that @xmath318 where the first inequality is strict unless the minimum in ( [ fixedswsp ] ) is achieved at @xmath319 , ( i.e. , @xmath320 , where @xmath321 is the marginal distribution of @xmath322 induced by @xmath323 and @xmath324 in ( [ para1 ] ) , ( [ para2 ] ) ) . therefore , variable - rate slepian - wolf coding can outperform fixed - rate slepian - wolf coding in terms of rate - error tradeoff .    for @xmath325 , it is possible to obtain upper bounds on @xmath217 that are tighter than @xmath326 .",
    "let @xmath327 and @xmath328 be respectively the expurgated exponent and the sphere packing exponent of channel @xmath19 .",
    "the straight - line exponent @xmath329 of channel @xmath19 @xcite is the smallest linear function of @xmath16 which touches the curve @xmath328 and also satisfies @xmath330 where @xmath331 is assumed to be finite . let @xmath332 be the point at which @xmath329 and @xmath328 coincide .",
    "it is well known @xcite that @xmath333 for @xmath334 $ ] . since @xmath335",
    ", it follows from theorem [ theorem1 ] that @xmath336 for @xmath337 .",
    "note that the straight - line exponent holds for arbitrary block codes ; one can obtain further improvement at high rates by leveraging bounds tailored to constant composition codes .",
    "let @xmath338 be the concave upper envelope of @xmath339 considered as a function of @xmath340 .",
    "in view of ( * ? ? ?",
    "* excercise 5.21 ) , we have @xmath341 for any @xmath71 and @xmath342 .",
    "now it follows from theorem [ theorem1 ] that @xmath343 for @xmath344 .",
    "the following theorem provides the second order expansion of @xmath217 at the slepian - wolf limit .    assuming @xmath345 ( see proposition [ prop : cr ] for the necessary and sufficient condition )",
    ", we have @xmath346^{-1}\\end{aligned}\\ ] ] where @xmath347 .",
    "remark : if @xmath348 , then we have @xmath349 for @xmath350 , which implies @xmath351 it is also worth noting that the second order expansion of @xmath217 at the slepian - wolf limit yields the redundancy - error tradeoff constant of variable - rate slepian - wolf coding derived in @xcite .    since @xmath352 , it follows that @xmath353 when @xmath354 @xmath355 is sufficiently close to zero . in this case",
    ", we have @xmath356 where the last equality follows from the fact that @xmath357 is a strictly decreasing convex function of @xmath16 for @xmath358 $ ] .",
    "let @xmath359 for @xmath117 , @xmath116 .",
    "let @xmath360 for @xmath116 . by the taylor expansion , @xmath361 and @xmath362 here",
    "@xmath363 means @xmath364 .    as @xmath365",
    ", we have @xmath366 , @xmath367 for all @xmath368 .",
    "therefore , by ignoring the high order terms which do not affect the limit , we get @xmath369 where the minimization is over @xmath370 ( @xmath368 ) subject to the constraints    1 .",
    "@xmath371 for all @xmath117 ; 2 .",
    "@xmath372 .",
    "introduce the lagrange multipliers @xmath373 @xmath374 , @xmath375 for these constraints , and define @xmath376 the karush - kuhn - tucker conditions yield @xmath377 therefore , we have @xmath378 substituting ( [ deltaxy ] ) into constraint 1 ) , we obtain @xmath379 which , together with ( [ deltaxy ] ) , yields @xmath380 therefore , we have @xmath381 ^ 2\\nonumber\\\\ & & = \\frac{\\beta^2}{2}\\sum\\limits_{x , y}p_{xy}(x , y)\\left[\\tau^2(x , y)-2\\tau(x , y)\\sum\\limits_{y'}\\tau(x , y')p_{y|x}(y'|x)+\\left(\\sum\\limits_{y'}\\tau(x , y')p_{y|x}(y'|x)\\right)^2\\right]\\nonumber\\\\ & & = \\frac{\\beta^2}{2}\\left[\\sum\\limits_{x , y}p_{xy}(x , y)\\tau^2(x , y)-\\sum\\limits_{x}p_x(x)\\left(\\sum\\limits_{y}\\tau(x , y)p_{y|x}(y|x)\\right)^2\\right].\\label{numerator}\\end{aligned}\\ ] ] constraint 2 ) and ( [ deltaxybeta ] ) together yield @xmath382 ^ 2\\nonumber\\\\ & = & \\left[\\sum\\limits_{x , y}p_{xy}(x , y)\\tau^2(x , y)-\\sum\\limits_{x}p_x(x)\\left(\\sum\\limits_{y}\\tau(x , y)p_{y|x}(y|x)\\right)^2\\right]^2.\\nonumber\\\\\\label{denominator}\\end{aligned}\\ ] ] the proof is complete by substituting ( [ numerator ] ) and ( [ denominator ] ) back into ( [ minimization ] ) .",
    "[ def : varcorrectexp ] given a joint probability distribution @xmath3 , we say a correct decoding exponent @xmath62 is achievable with variable - rate slepian - wolf codes at rate @xmath16 if for any @xmath57 , there exists a sequence of variable - rate slepian - wolf codes @xmath215 such that @xmath383 the smallest achievable correct decoding exponent at rate @xmath16 is denoted by @xmath384 .    in view of theorem [ theorem1 ] , it is tempting to conjecture that @xmath385 .",
    "it turns out this is not true .",
    "we shall show that @xmath386 for all @xmath16 .",
    "actually we have a stronger result  the correct decoding probability of variable - rate slepian - wolf coding can be bounded away from zero even when @xmath165 .",
    "this is in sharp contrast with fixed - rate slepian - wolf coding for which the correct decoding probability decays to zero exponentially fast if the rate is below the slepian - wolf limit . to make the statement more precise ,",
    "we need the following definition .",
    "[ def : varcorrectpro ] given a joint probability distribution @xmath3 , we say a correct decoding probability @xmath387 is achievable with variable - rate slepian - wolf codes at rate @xmath16 if for any @xmath57 , there exists a sequence of variable - rate slepian - wolf codes @xmath215 such that @xmath388 the largest achievable correct decoding probability at rate @xmath16 is denoted by @xmath389 .",
    "@xmath390 for @xmath391 $ ] .",
    "remark : it is obvious that @xmath392 for @xmath393 .",
    "moreover , since @xmath389 is a monotonically increasing function of @xmath16 , it follows that @xmath394 .    the intuition underlying the proof is as follows .",
    "assume the rate is below the slepian - wolf limit , i.e. , @xmath165 . for each type @xmath38 in the neighborhood of @xmath395 , the rate allocated to the type class @xmath36",
    "should be no less than @xmath13 in order to correctly decode the sequences in @xmath36 .",
    "however , since almost all the probability are captured by the type classes whose types are in the neighborhood of @xmath5 , there is no enough rate to protect all of them .",
    "note that if the rate is evenly allocated among these type classes , none of them can get enough rate ; consequently , the correct decoding probability goes to zero .",
    "a good way is to protect only a portion of them to accumulate enough rate .",
    "specifically , we can protect @xmath396 fraction of these type classes so that the rate allocated to each of them is about @xmath13 and leave the remaining type classes unprotected .",
    "it turns out this strategy achieves the maximum correct decoding probability as the block length @xmath12 goes to infinity .",
    "somewhat interestingly , although @xmath397 , the function @xmath398 does play a fundamental role in establishing the correct result .",
    "the proof is divided into two parts .",
    "firstly , we shall show that @xmath399 .",
    "for any @xmath400 , define @xmath401 since @xmath231 for all @xmath117 , we can choose @xmath402 small enough so that @xmath403 using stirling s approximation @xmath404 we have , for any @xmath405 , @xmath406^{np(x)}\\\\ & \\leq&\\frac{\\sqrt{2\\pi n}e^{\\frac{1}{12n}}}{\\prod_{x}\\sqrt{2\\pi np(x)}}e^{-nd(p\\|p_x)}\\\\ & \\leq&\\frac{\\sqrt{2\\pi}e^{\\frac{1}{12n}}}{\\prod_{x}\\sqrt{2\\pi p(x)}}n^{-\\frac{|\\mathcal{x}|-1}{2}}\\\\ & \\leq&\\frac{\\sqrt{2\\pi}e^{\\frac{1}{12n}}}{\\prod_{x}\\sqrt{2\\pi q_{\\min}(\\epsilon)}}n^{-\\frac{|\\mathcal{x}|-1}{2}},\\end{aligned}\\ ] ] which implies that @xmath407 converges uniformly to zero as @xmath408 for all @xmath405 .",
    "moreover , it follows from the weak law of large numbers that @xmath409 therefore , for any @xmath57 , @xmath410 $ ] , and sufficiently large @xmath12 , we can find a set @xmath411 such that @xmath412    now consider a sequence of variable - rate slepian - wolf codes @xmath413 specified as follows .    1",
    ".   the encoder sends of type of @xmath11 to the decoder , where each type is uniquely represented by a binary sequence of length @xmath414 .",
    "2 .   for each @xmath415 ,",
    "the encoder partitions the type class @xmath36 into @xmath416 subsets @xmath417 . if @xmath418 for some @xmath415 , the encoder finds the subset @xmath419 that contains @xmath11 and sends the index @xmath261 to the decoder , where each index in @xmath420 is uniquely represented by a binary sequence of length @xmath421 .",
    "the remaining type classes are left uncoded .",
    "specifically , we let @xmath422 it follows from ( * ? ? ?",
    "* theorem 2 ) that for each @xmath415 , it is possible to partition the type class @xmath36 into @xmath416 disjoint subsets @xmath417 so that @xmath423\\end{aligned}\\ ] ] uniformly for all @xmath415 when @xmath12 is sufficiently large . in view of the fact that @xmath424 and that @xmath425 as a function of the pair @xmath426 is uniformly equicontinuous , we have @xmath427\\triangleq\\kappa_1>0\\end{aligned}\\ ] ] for sufficiently small @xmath402 .    for this sequence of",
    "constructed variable - rate slepian - wolf codes @xmath413 , it can be readily verified that @xmath428\\\\ & \\leq&\\frac{r}{h(x|y)}(h(x|y)+\\delta)\\end{aligned}\\ ] ] and @xmath429\\\\ & \\geq&\\limsup\\limits_{n\\rightarrow\\infty}\\sum\\limits_{p\\in\\mathcal{s}_n}\\mbox{pr}\\{(x^n\\in\\mathcal{t}_n(p)\\}\\left(1-e^{-n\\kappa_1}\\right)\\\\ & \\geq&\\frac{r}{h(x|y)}-\\delta.\\end{aligned}\\ ] ] since @xmath57 is arbitrary , it follows from definition [ def : varcorrectpro ] that @xmath399 .",
    "now we proceed to prove the other direction .",
    "it follows from definition [ def : varcorrectpro ] that for any @xmath57 , there exists a sequence of variable - rate slepian - wolf codes @xmath413 with @xmath430 define @xmath431 since @xmath432 , we can interpret @xmath433 as the rate allocated to the type class @xmath36 .    for each @xmath405",
    ", suppose @xmath206 partitions the type class @xmath36 into @xmath434 disjoint subsets @xmath435 ( i.e. , @xmath436 if @xmath278 for some @xmath279 , and @xmath280 if @xmath281 for @xmath282 ) .",
    "define @xmath437 note that @xmath438 which implies @xmath439    each @xmath440 can be viewed as a constant composition code of type @xmath38 and we have @xmath441 note that for @xmath405 and @xmath442 , @xmath443 therefore , it follows from ( * ? ? ?",
    "* lemma 5 ) that @xmath444 uniformly for all @xmath405 and @xmath442 when @xmath12 is sufficiently large . in view of the fact that @xmath445 and that @xmath446 as a function of the pair @xmath426 is uniformly equicontinuous",
    ", we have @xmath447\\triangleq\\kappa_2>0\\end{aligned}\\ ] ] for sufficiently small @xmath402 .",
    "now it is easy to see that @xmath448 which implies @xmath449 therefore , we have @xmath450 since @xmath57 is arbitrary , this completes the proof .",
    "consider the joint distribution @xmath3 over @xmath451 with @xmath452 and @xmath453 .",
    "we assume @xmath454 , @xmath455 $ ] .",
    "it is easy to compute that @xmath456    for this joint distribution , we have @xmath457 , where @xmath458 is the binary entropy function ( i.e. , @xmath459 ) . given @xmath460 $ ] ,",
    "let @xmath461 be the unique number satisfying @xmath462 and @xmath463 .",
    "it can be verified that @xmath464,\\\\ & & e^c_f(p_{xy},r)=d(q\\|p),\\quad r\\in[0,h_b(p)].\\end{aligned}\\ ] ] note that @xmath465\\\\ & = & -2q_{x}(0)q_{x}(1)\\log\\left[\\sum\\limits_{y}\\sqrt{p_{y|x}(y|0)p_{y|x}(y|1)}\\right]\\end{aligned}\\ ] ] which is a concave function of @xmath340 .",
    "therefore , @xmath466 moreover , we have @xmath467.\\end{aligned}\\ ] ] it is easy to show that @xmath468 where the minimizer @xmath469 is given by @xmath470 define @xmath471 we have @xmath472    , @xmath473    , @xmath474    , @xmath475    it can be seen from fig .",
    "[ tau12 ] that the achievable error exponent @xmath476 of variable - rate slepian - wolf coding can completely dominate the sphere packing exponent @xmath477 of fixed - rate slepian - wolf coding .",
    "the gain of variable - rate coding gradually diminishes as @xmath478 ( see fig .",
    "[ tau35 ] and fig .",
    "[ tau50 ] ) .",
    "we have studied the reliability function of variable - rate slepian - wolf coding .",
    "an intimate connection between variable - rate slepian - wolf codes and constant composition codes has been revealed .",
    "it is shown that variable - rate slepian - wolf coding can outperform fixed - rate slepian - wolf coding in terms of rate - error tradeoff .",
    "finally , we would like to mention that theorem [ theorem1 ] has been generalized by weinberger and merhav in their recent paper on the optimal tradeoff between the error exponent and the excess - rate exponent of variable - rate slepian - wolf coding @xcite .",
    "in view of ( [ constrc ] ) and ( [ rcsp ] ) , we have @xmath105 if and only if the minimum of the convex optimization problem @xmath479 is achieved at @xmath119 .",
    "let @xmath480 be a minimizer to the above optimization problem .",
    "note that for @xmath121 such that @xmath481 , there is no loss of generality in setting @xmath482 .",
    "let @xmath483 and @xmath484 for @xmath485 .",
    "we can rewrite ( [ prop : minimum ] ) in the following equivalent form : @xmath486 subject to @xmath487 define @xmath488 where @xmath489 ( @xmath490 ) and @xmath491 ( @xmath485 ) .",
    "the karush - kuhn - tucker conditions yield @xmath492 by the complementary slackness conditions ( i.e. , @xmath493 ) , we have @xmath494 if and only if for all @xmath495 , @xmath496 , @xmath497 i.e. , the value of @xmath108 does not depend on @xmath109 for all @xmath106 such that @xmath107 .      1",
    ".   it is known ( * ? ? ?",
    "* exercise 5.17 ) that for every @xmath342 , @xmath57 and every @xmath35 there exists a constant composition code @xmath498 such that @xmath499 whenever @xmath500 .",
    "let @xmath501 be a sequence of types with @xmath74 and @xmath502 define @xmath503\\end{aligned}\\ ] ] where the minimization is over @xmath504 subject to the constraints @xmath505 note that @xmath506 must contain a converging subsequence @xmath507 .",
    "define @xmath508 it is easy to verify that @xmath509 therefore , we have @xmath510 + it is also known ( * ? ? ?",
    "* theorem 5.2 ) that for every @xmath342 , @xmath57 and every @xmath35 there exists a constant composition code @xmath498 such that @xmath511 whenever @xmath500 . so it can be readily shown that @xmath512 by invoking the fact that @xmath513 as a function of the pair @xmath514 is uniformly equicontinuous ( * ? ? ?",
    "* lemma 5.5 ) .",
    "the proof is complete .",
    "2 .   by definition",
    "[ def : constantcomposition ] , for every @xmath342 , @xmath57 there exists a sequence of block channel codes codes @xmath58 with @xmath73 for some @xmath74 such that @xmath515 for simplicity , we assume @xmath516 for all @xmath12 .",
    "now it follows from theorem 5.3 in [ 8 ] that @xmath517\\leq e_{sp}(p_n , w_{y|x},r-2\\delta)(1+\\delta)\\label{prop1:spbound}\\end{aligned}\\ ] ] whenever @xmath500 .",
    "let @xmath518 without loss of generality , we can set @xmath519 for all @xmath520 .",
    "it is easy to see that there exists an @xmath400 such that @xmath521 for all @xmath522 with @xmath523 . therefore ,",
    "for all sufficiently large @xmath12 , @xmath524 combining ( [ prop1:reliability ] ) , ( [ prop1:spbound ] ) and ( [ prop1:sp ] ) , we get @xmath525(1+\\delta).\\end{aligned}\\ ] ] in view of the fact that @xmath57 is arbitrary and that for fixed @xmath38 and @xmath52 , @xmath526 is a decreasing continuous convex function of @xmath16 in the interval where it is finite ( * ? ? ?",
    "* lemma 5.4 ) , the proof is complete .",
    "it is known ( * ? ? ?",
    "* lemma 5 ) that for every @xmath342 , @xmath57 , every constant composition code @xmath40 of common type @xmath38 for some @xmath35 and rate @xmath527 has @xmath528-\\delta\\end{aligned}\\ ] ] whenever @xmath500 .",
    "moreover , it is also known ( * ? ? ?",
    "* lemma 2 ) ( * ? ? ?",
    "* excercise 5.16 ) that for every @xmath342 , @xmath57 and every @xmath35 there exists a constant composition code @xmath498 such that @xmath529+\\delta\\end{aligned}\\ ] ] whenever @xmath530 . in view of the fact that @xmath531 $ ] as a function of the pair @xmath514 is uniformly equicontinuous , it can be readily shown that @xmath532.\\end{aligned}\\ ] ]",
    "the proof is complete .",
    "j. chen , d .-",
    "k he , a. jagmohan , and l. lastras - montao ,  on the redundancy - error tradeoff in slepian - wolf coding and channel coding , \" _ ieee international symposium on information theory _ , nice , france , jun .",
    "24 - 29 , 2007 .",
    "j. chen , d .-",
    "k he , a. jagmohan , and l. a. lastras - montao ,  on the duality and difference between slepian - wolf coding and channel coding , \" ieee information theory workshop , tahoe city , ca , sept . 2 - 6 , 2007 , pp .",
    "301 - 306 ."
  ],
  "abstract_text": [
    "<S> the reliability function of variable - rate slepian - wolf coding is linked to the reliability function of channel coding with constant composition codes , through which computable lower and upper bounds are derived . </S>",
    "<S> the bounds coincide at rates close to the slepian - wolf limit , yielding a complete characterization of the reliability function in that rate regime . </S>",
    "<S> it is shown that variable - rate slepian - wolf codes can significantly outperform fixed - rate slepian - wolf codes in terms of rate - error tradeoff . </S>",
    "<S> the reliability function of variable - rate slepian - wolf coding with rate below the slepian - wolf limit is determined . in sharp contrast with fixed - rate slepian - wolf codes for which the correct decoding probability decays to zero exponentially fast </S>",
    "<S> if the rate is below the slepian - wolf limit , the correct decoding probability of variable - rate slepian - wolf codes can be bounded away from zero .    </S>",
    "<S> channel coding , duality , reliability function , slepian - wolf coding . </S>"
  ]
}
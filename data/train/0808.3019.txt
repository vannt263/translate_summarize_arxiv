{
  "article_text": [
    "historically , high performance data mining systems have been designed to take advantage of powerful , but shared pools of processors .",
    "generally , data is scattered to the processors , the computation is performed using a message passing or grid services library , the results are gathered , and the process is repeated by moving new data to the processors .",
    "this paper describes a distributed high performance data mining system that we have developed called sector / sphere that is based on an entirely different paradigm .",
    "sector is designed to provide long term persistent storage to large datasets that are managed as distributed indexed files .",
    "different segments of the file are scattered throughout the distributed storage managed by sector .",
    "sector generally replicates the data to ensure its longevity , to decrease the latency when retrieving it , and to provide opportunities for parallelism .",
    "sector is designed to take advantage of wide area high performance networks when available .",
    "sphere is designed to execute user defined functions in parallel using a stream processing pattern for data managed by sector .",
    "we mean by this that the same user defined function is applied to every data record in a data set managed by sector .",
    "this is done to each segment of the data set independently ( assuming that sufficient processors are available ) , providing a natural parallelism .",
    "the design of sector / sphere results in data frequently being processed in place without moving it .    to summarize , sector manages data using distributed , indexed files ; sphere processes data with user - defined functions that operate in a uniform manner on streams of data managed by sector ; sector / sphere scale to wide area high performance networks using specialized network protocols designed for this purpose .    in this paper , we describe the design of sector / sphere .",
    "we also describe a data mining application developed using sector / sphere that searches for emergent behavior in distributed network data .",
    "we also describe various experimental studies that we have done using sector / sphere .",
    "finally , we describe several experimental studies comparing sector / sphere to hadoop using the terasort benchmark @xcite , as well as a companion benchmark we have developed called terasplit that computes a split for a regression tree .",
    "this paper is organized as follows : section 2 describes background and related work .",
    "section 3 describes the design of sphere .",
    "section 4 describes the design of sector .",
    "section 5 describes the design of the networking and routing layer .",
    "section 6 contains some experimental studies .",
    "section 7 describes a sector / sphere application that we have developed .",
    "section 8 is the summary and conclusion .",
    "this paper is based in part on @xcite . in particular ,",
    "some of the introductory and background material is the same .",
    "this paper describes a later version of the sector / sphere system , describes the sector / sphere system in more detail , and contains different experimental results .",
    "by a cloud , we mean an infrastructure that provides resources and/or services over the internet . a",
    "_ storage cloud _ provides storage services ( block or file based services ) ; a _ data cloud _ provides data management services ( record - based , column - based or object - based services ) ; and a _ compute cloud _ provides computational services",
    ". often these are layered ( compute services over data services over storage service ) to create a stack of cloud services that serves as a computing platform for developing cloud - based applications .",
    "examples include google s google file system ( gfs ) , bigtable and mapreduce infrastructure @xcite , @xcite ; amazon s s3 storage cloud , simpledb data cloud , and ec2 compute cloud @xcite ; and the open source hadoop system @xcite , @xcite .    in this section ,",
    "we describe some related work in high performance and distributed data mining . for a recent survey of high performance and distributed data mining systems , see @xcite .    by and large ,",
    "data mining systems that have been developed to date for clusters , distributed clusters and grids have assumed that the processors are the scarce resource , and hence shared .",
    "when processors become available , the data is moved to the processors , the computation is started , and results are computed and returned @xcite . in practice with this approach , for many computations , a good portion of the time is spent transporting the data .",
    "in contrast , the approach taken here by sector / sphere is to store the data persistently and to process the data in place when possible . in this model ,",
    "the data waits for the task or query .",
    "the storage clouds provided by amazon s",
    "s3 @xcite , the google file system @xcite , and the open source hadoop distributed file system ( hdfs ) @xcite support this model .",
    "mapreduce and hadoop and their underlying file systems gfs and hdfs are specifically designed for racks of computers in data centers .",
    "both systems use information about clusters and racks to position file blocks and file replicas . this approach does not work well with loosely coupled distributed environments , such as those that sector targets .    to date , work on storage clouds",
    "@xcite has assumed relatively small bandwidth between the distributed clusters containing the data .",
    "in contrast , the sector storage cloud described in section  [ section : sector ] is designed for wide area , high performance 10 gb / s networks and employs specialized protocols , such as udt @xcite , to utilize the available bandwidth on these networks .",
    "sector is also designed for loosely coupled distributed systems that are managed with a peer - to - peer architecture , while storage clouds such as gfs and hdfs are designed for more tightly coupled systems that are managed with a centralized master node .",
    "in addition , sector assumes that the data is divided into files , while gfs and hdfs divide the data into blocks that are scattered across processors .",
    "for example , as usually configured sector processes a 1 tb file using 64 chunks , each of which is a file , while hdfs process the same data using 8,192 chunks , each of which is a block .",
    "( the default block size for hdfs is 64 mb .",
    "we increased this to 128 mb for the experiments described below , which improved the hadoop experimental results . )    the most common way to code data mining algorithms on clusters and grids is to use message passing , such as provided by the mpi library @xcite , or to use grid libraries and services , such as globus - url - copy to scatter and gather data and programs and globus - job - run to run programs @xcite .",
    "the most common way to compute over gfs and hdfs storage clouds is to use mapreduce @xcite .",
    "with mapreduce : i ) relevant data is extracted in parallel over multiple nodes using a common `` map '' operation ; ii ) the data is then transported to other nodes as required ( this is referred to as a shuffle ) ; and , iii ) the data is then processed over multiple nodes using a common `` reduce '' operation to produce a result set .",
    "in contrast , the sphere compute cloud described in section  [ section : sphere ] allows arbitrary user defined operations to replace both the map and reduce operations .",
    "in addition , sphere uses the same specialized network transport protocols @xcite that sector uses so that any transfer of data required by sphere s user defined functions can be transferred efficiently over wide area high performance networks .",
    "@xmath0 +   +   +   +",
    "the sphere compute cloud is designed to be used with the sector storage cloud .",
    "sphere is designed so that certain specialized , but commonly occurring , distributed computing operations can be done very simply .",
    "specifically , if a user defines a function @xmath1 on a distributed data set @xmath2 managed by sector , then invoking the command    ....",
    "sphere.run(a , p ) ; ....    applies the user defined function @xmath1 to each data record in the dataset @xmath2 . in other words , if the dataset @xmath2 contains @xmath3 records @xmath4 $ ] , then the sphere command above replaces all the code required to read and write the array @xmath4 $ ] from disk , as well as the loop :    ....    for ( int i = 0 , i < 100000000 ; + + i )      p(a[i ] ) ; ....    the sphere programming model is a simple example of what is commonly called a stream programming model .",
    "although this model has been used for some time , it has recently received renewed attention due to its use by the general purpose gpu ( graphics processing units ) community ( gpgpu community ) @xcite and by the popularization of the mapreduce @xcite special case , which restricts attention to data of the form @xmath5 $ ] and to two user defined functions ( map and reduce ) .",
    "large data sets processed by sphere are assumed to be broken up into several files .",
    "for example , the sloan digital sky survey dataset @xcite is divided up into 64 separate files , each about 15.6 gb in size .",
    "the files are named sdss1.dat , @xmath6 , sdss64.dat .",
    "assume that the user has a written a function called _ findbrowndwarf _ that given a record in the sdss dataset , extracts candidate brown dwarfs .",
    "then to find brown dwarfs in the sloan dataset , one uses the following sphere code :    ....    stream sdss ;    sdss.init ( ... ) ;    //init with 64 sdss files     process * myproc = sector::createjob ( ) ;    myproc->run(sdss , \" findbrowndwarf \" ) ;    myproc->read(result ) ; ....    with this code , sphere uses sector to access the required sdss files , uses an index to extract the relevant records , and for each record invokes the user defined function _",
    "findbrowndwarf_. parallelism is achieved in two ways .",
    "first , the individual files can be processed in parallel .",
    "second , sector is typically configured to create replicas of files for archival purposes .",
    "these replicas can also be processed in parallel .",
    "an important advantage provided by a system such as sphere is that often data can be processed in place , without moving it .",
    "in contrast , a grid system generally transfers the data to the processes prior to processing @xcite .",
    "the computing model used by sphere is based upon the following concepts . a sphere _ dataset _ consists of one or more physical _ files_. computation in sphere is done by user defined functions ( _ sphere operator _ that take a sphere _",
    "stream _ as input and produce a sphere stream as output .",
    "sphere streams are split into one or more _ data segments _ that are processed by sphere servers , which are called _ sphere processing elements _ or spe .",
    "sphere data segments can be a data record , a collection of data records , or a file .",
    "see figure  [ figure : sphere - design ] .",
    "when a sphere function processes a stream , the resulting stream can be returned to the sector node where it originated , written to a local node , or `` shuffled '' to a list of nodes , depending upon how the output stream is defined .",
    "the spe is the major sphere service and it is started by a sphere server in response to a request from a sphere client .",
    "each spe is based on a user - defined function ( sphere operator ) .",
    "the sphere operator is implemented as a dynamic library and is stored on the server s local disk , which is managed by the sector server . for security reasons , uploading such library files to a sector server",
    "is limited .",
    "a library file resides on a sector server only if the sphere client program has write access to the particular sector server or the server s owner has voluntarily downloaded the file .",
    "sector s replica service is disabled for sphere operators .",
    "once the sphere server accepts the client s request , it starts an spe and binds it to the local sphere operator .",
    "the spe runs in a loop and consists of the following four steps :    1 .",
    "the spe accepts a new data segment from the client , which contains the file name , offset , number of rows to be processed , and additional parameters . 2 .",
    "the spe reads the data segment and its record index from local disk or from a remote disk managed by sector .",
    "3 .   for each data segment ( single data record , group of data records , or entire data file )",
    ", the sphere operator processes the data segment and writes the result to a temporary buffer .",
    "in addition , the spe periodically sends acknowledgments to the client about the progress of the processing .",
    "when the data segment is completely processed , the spe sends an acknowledgment to the client and writes the results to the appropriate destinations , as specified in the output stream .",
    "if there are no more data segments to be processed , the client closes the connection to the spe , and the spe is released .",
    "sphere assigns spes to streams as follows :",
    "the stream is first divided into data segments .",
    "this is done roughly as follows .",
    "the total data size @xmath7 and the total number of records @xmath8 is computed .",
    "say the number of spes available for the job is @xmath9 . roughly speaking",
    ", the number of records that equals @xmath10 should be assigned to each spe .",
    "the user specifies a minimum and maximum data size @xmath11 and @xmath12 that should be assigned to each processor . if @xmath10 is between these user defined limits , the associated number of records is assigned to each spe .",
    "otherwise the nearest boundary @xmath11 or @xmath12 is used instead to compute the required number of records to assign to each spe .",
    "once the stream is segmented into data segments of the appropriate size , each data segment is assigned to a spe on the same machine whenever possible .",
    "data segments from the same file are not processed at the same time , unless not doing so would result in an idle spe .",
    "sector is the underlying storage cloud that provides persistent storage for the data required by sphere and manages the data for sphere operations .",
    "since some portions of sector have been described previously @xcite , we present just a brief summary here .",
    "sector is not a file system per se , but rather provides services that rely in part on the local native file systems .",
    "the core requirements for sector are :    1 .",
    "sector provides long term archival storage and access for large distributed datasets .",
    "sector is designed to utilize the bandwidth available on wide area high performance networks .",
    "sector supports a variety of different routing and network protocols .",
    "sector is designed to support a community of users , not all of whom may have write access to the sector infrastructure .",
    "sector uses replication in order to safely archive data .",
    "it monitors the number of replicas , and , when necessary , creates additional replicas at a random location .",
    "the number of replicas of each file is checked once per day .",
    "the choice of random location leads to uniform distribution of data over the whole system .",
    "sector takes advantage of wide area , high performance networks by using specialized network transport protocols such as udt @xcite .",
    "sector also caches data connections . therefore",
    ", frequent data transfers between the same pair of nodes do not need to set up a data connection every time .",
    "this reduces the connection setup overhead .",
    "sector has separate layers for routing and transport and interfaces with these layers through well defined apis . in this way",
    ", it is relatively straightforward to use other routing or network protocols .",
    "in addition , udt is designed in such a way that a variety of different network protocols can be used simply by linking in one of several different libraries @xcite .",
    "sector s security mechanism is enabled by access control list ( acl ) . while data read",
    "is open to the general public , write access to the sector system is controlled by acl , as the client s ip address must appear in the server s acl in order to upload data to that particular server .",
    "see figure  [ figure : sector - access ] .",
    "sector was designed to provide persistent storage services for data intensive applications that involve mining multi - terabyte datasets accessed over wide area 10 gb / s networks .    as an example",
    ", sector is used to archive and to distribute the sloan digital sky survey ( sdss ) to astronomers around the world . using sector , the sdss bestdr5 catalog , which is about 1.3 tb when compressed , can be transported at approximately 8.1 gb / s over a 10 gb / s wide area network with only 6 commodity servers @xcite .",
    "sector assumes that large datasets are divided into multiple files , say file01.dat , file02.dat , etc .",
    "it also assumes that each file is organized into records . in order to randomly access",
    "a record in the data set , each data file in sector has a companion index file , with a post - fix of `` .idx '' .",
    "continuing the example above , there would be index files file01.dat.idx , file02.dat.idx , etc .",
    "the data file and index file are always co - located on the same node . whenever sector replicates the data file , the index file is also replicated .",
    "the index contains the start and end positions ( i.e. , the offset and size ) of each record in the data file . for those data files without an index ,",
    "sphere can only process them at the file level , and the user must write a function that parses the file and extracts the data .    a sector client accesses data using sector as follows :    1 .",
    "the sector client connects to a known sector server s , and requests the locations of an entity managed by sector using the entity s name .",
    "2 .   the sector server s runs a look - up inside the server network using the services from the routing layer and returns one or more locations to the client . in general , an entity managed by sector is replicated several times within the sector network .",
    "the routing layer can use information involving network bandwidth and latency to determine which replica location should be provided to the client .",
    "the client requests a data connection to one or more servers on the returned locations using a specialized sector library designed to provide efficient message passing between geographically distributed nodes .",
    "the sector library used for messaging uses a specialized protocol developed for sector called the group messaging protocol .",
    "all further requests and responses are performed using a specialized library for high performance network transport called udt @xcite .",
    "udt is used over the data connection established by the message passing library .",
    "@xmath0 +   +   +   +   +",
    "as mentioned above , sector is designed to support a variety of different routing and networking protocols . the version used for the experiments described below",
    "are designed to support large distributed datasets , with loose management provided by geographically distributed clusters connected by a high performance wide area network . with this configuration , a peer - to - peer routing protocol ( the chord protocol described in @xcite )",
    "is used so that nodes can be easily added and removed from the system .",
    "the next version of sector will support specialized routing protocols designed for wide area clouds with uniform bandwidth and approximately equal rtt between clusters , as well as non - uniform clouds in which bandwidth and rtt may vary widely between different clusters of the cloud .",
    "data transport within sector is done using specialized network protocols . in particular , data channels within sector use high performance network transport protocols , such as udt @xcite .",
    "udt is a rate - based application layer network transport protocol that supports large data flows over wide area high performance networks .",
    "udt is _ fair _ to several large data flows in the sense that it shares bandwidth equally between them .",
    "udt is also _ friendly _ to tcp flows in the sense that it backs off when congestion occurs , enabling any tcp flows sharing the network to use the bandwidth they require .",
    "message passing with sector is done using a specialized network transport protocol that we developed for this purpose called the group messaging protocol or gmp .",
    "the wide area experiments use 6 servers : two are in chicago , illinois ; two are in greenbelt , maryland ; and two are in pasadena , california .",
    "the wide area servers have double dual - core 2.4 ghz opteron processors , 4 gb ram , 10ge myrinet nic , and 2 tb of disk .",
    "the round trip time ( rtt ) between the servers in greenbelt and chicago is 16ms .",
    "the rtt between chicago and pasadena is 55ms .",
    "the servers in greenbelt and pasadena are networked through chicago and therefore the rtt is 71 ms .",
    "all the servers are connected with 10 gb / s networks .",
    "the local area experiments use 8 servers that have dual 4-core 2.4 ghz xeon processors , 16 gb ram , 10ge myrinet nic , and 5.5 tb of disk .",
    "note that the servers for the local area experiments are newer than those used for the wide area experiments .",
    "the version of hadoop used for the experimental studies was version 0.16.0 .",
    "the java(tm ) version was 1.6.0 , the java(tm ) se runtime environment was build 1.6.0-b105 ; the java hotspot(tm ) 64-bit server vm was build 1.6.0-b105 , mixed mode .",
    "in this section , we perform the tests using terasort but this time using six servers that are geographically distributed .",
    "two of the servers are in chicago illinois , two are in pasadena , california , and two are in greenbelt , maryland .",
    "all the servers are connected with a 10 gb / s network .",
    "table  [ fig : exp - wide - area ] compares the performance of the terasort benchmark ( sorting 10 gb data on each node , 100-byte record with 10-byte key ) using both hadoop and sphere .    to understand the performance of sector / sphere for typical data mining computations",
    ", we developed a benchmark that we call _ terasplit_. terasplit takes data that has been sorted , for example by terasort , and computes a single split for a tree based upon entropy @xcite .",
    "although terasplit benchmarks could be developed for multiple clients , the version we use for the experiments here read ( possibly distributed ) data into a single client to compute the split .",
    "table  [ fig : exp - wide - area ] also compares the performance of sector / sphere and hadoop for the terasplit benchmark .    [ cols=\"<,<,<,<,<,<,<\",options=\"header \" , ]",
    "in this paper , we have described a cloud - based infrastructure designed for data mining large distributed data sets over clusters connected with high performance wide area networks .",
    "sector / sphere is open source and available through source forge .",
    "we have used it as a basis for several distributed data mining applications .",
    "the infrastructure consists of the sector storage cloud and the sphere compute cloud .",
    "we have described the design of sector and sphere and showed through experimental studies that sector / sphere can process large datasets that are distributed across the continental u.s . with a performance penalty of approximately 80%",
    "compared to the time required if all the data were located on a single rack .",
    "sector / sphere utilize a specialized networking layer to achieve this performance .",
    "we have also described a sector / sphere application to detect emergent behavior in network traffic and showed that for this application sector / sphere can compute clusters on over 300,000 distributed files .",
    "finally , we performed experimental studies on a wide area testbed and demonstrated that sector / sphere is approximately 2.42.6 times faster than hadoop @xcite using the terasort benchmark supplied with hadoop . using a benchmark we developed call terasplit that computes a single split in a classification and regression tree , we found that sector / sphere was about 1.61.9 times faster than hadoop .",
    "this work was supported in part by the national science foundation through grants sci-0430781 , cns-0420847 , and aci-0325013 .",
    "robert  l grossman , michael sabala , yunhong gu , anushka anand , matt handley , rajmonda sulo , and lee wilkinson .",
    "distributed discovery in e - science : lessons from the angle project . in _",
    "next generation data mining ( ngdm 07 ) _ , 2008 .",
    "robert l. grossman , yunhong gu , michael sabala and wanzhi zhang , compute and storage clouds using wide area high performance networks , journal of future generation computer systems ( fgcs ) , 2008 .",
    "also arxiv:0808.1802v1 .",
    "john  d. owens , david luebke , naga govindaraju , mark harris , jens kruger , aaron  e. lefohn , and timothy j.purcell . a survey of general - purpose computation on graphics hardware . in _",
    "eurographics 2005 _ , pages 2151 , 2005 .",
    "i.  stoica , r.  morris , d.  karger , m.  f. kaashoek , and h  balakrishnana .",
    "chord : a scalable peer to peer lookup service for internet applications . in _ proceedings of the acm sigcomm 01 _ , pages 149160 , 2001 ."
  ],
  "abstract_text": [
    "<S> we describe the design and implementation of a high performance cloud that we have used to archive , analyze and mine large distributed data sets . by a cloud , we mean an infrastructure that provides resources and/or services over the internet . </S>",
    "<S> a storage cloud provides storage services , while a compute cloud provides compute services . </S>",
    "<S> we describe the design of the sector storage cloud and how it provides the storage services required by the sphere compute cloud . </S>",
    "<S> we also describe the programming paradigm supported by the sphere compute cloud . sector and sphere </S>",
    "<S> are designed for analyzing large data sets using computer clusters connected with wide area high performance networks ( for example , 10 + gb / s ) . </S>",
    "<S> we describe a distributed data mining application that we have developed using sector and sphere . </S>",
    "<S> finally , we describe some experimental studies comparing sector / sphere to hadoop .    </S>",
    "<S> * categories and subject descriptors : * h.2.8 [ database management ] : data mining , c.2.4 [ computer - communications networks ] : distributed applications , d.4.3 [ operating systems ] : distributed file systems , d.4.1 [ process management ] : multiprocessing / multiprogramming / multitasking    * general terms : * design , experimentation , measurement , performance    * keywords : * distributed data mining , cloud computing , high performance data mining </S>"
  ]
}
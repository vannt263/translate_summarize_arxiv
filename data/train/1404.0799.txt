{
  "article_text": [
    "the time hierarchy theorem  @xcite implies that there exist problems in @xmath15 with complexity @xmath16 for every fixed @xmath6 .",
    "however , it is consistent with current knowledge that all problems of practical interest can be solved in @xmath17 time in a reasonable model of computation . efforts to build a useful complexity theory inside @xmath15 have been based on the conjectured hardness of certain archetypal problems , such as , @xmath12-matrix product , and cnf - sat .",
    "see , for example , the conditional lower bounds in @xcite .",
    "in this paper we study the complexity of and related problems such as linear degeneracy testing ( ) and finding zero - weight triangles .",
    "let us define the problems formally .",
    "* :* : :    given a set @xmath9 , determine if there    exists @xmath18 such that @xmath19 .",
    "* :* : :    given a set    @xmath20 , determine    if there exists @xmath18 such that    @xmath19 .",
    "* @xmath6- and @xmath6- : * : :    fix a @xmath6-variate linear function    @xmath21 ,    where @xmath22 . given a    set @xmath9 ,",
    "determine if    @xmath23 for any    @xmath24 .",
    "when @xmath25 is    @xmath26 the problem is called @xmath6- .",
    "* :* : :    given a weighted undirected graph @xmath27 , where    @xmath28 , determine if there exists a    triangle @xmath29 for which    @xmath30 .",
    "( from the definition of _ love :    a score of zero _ , one could also call this the problem . )",
    "these problems are often defined with further constraints that do not change the problem in any substantive way  @xcite .",
    "for example , the input to can be three sets @xmath31 and the problem is to determine if there exists @xmath32 such that @xmath19 . even if there is only one set , there is sometimes an additional constraint that @xmath33 and @xmath34 be _ distinct _ elements .    as a problem in its own right ,",
    "has no compelling practical applications .",
    "however , lower bounds on imply lower bounds on dozens of other problems that _ are _ of practical interest . before reviewing existing algorithms",
    "we give a brief survey of conditional lower bounds that depend on the hardness of .",
    "it is often conjectured that requires @xmath2 time and that requires @xmath35 time  @xcite .",
    "these conjectures have been shown to imply strong lower bounds on numerous problems in computational geometry  @xcite dynamic graph algorithms  @xcite , and pattern matching  @xcite .",
    "for example , the conjecture implies that the following problems require at least @xmath2 time",
    ".    1 .   given an @xmath0-point set in @xmath36 , determine whether it contains three collinear points  @xcite .",
    "2 .   given two @xmath0-edge convex polygons ,",
    "determine whether one can be placed inside the other via rotation and translation  @xcite .",
    "3 .   given @xmath0 triangles in @xmath36 , determine whether their union contains a hole , or determine the area of their union  @xcite .",
    "through a series of reductions , ptracu  @xcite proved that the conjecture implies lower bounds on triangle enumeration and various problems in dynamic data structures , even when all updates and queries are presented in advance .",
    "some lower bounds implied by the conjecture include the following .    1 .",
    "given an undirected @xmath37-edge graph , enumerating up to @xmath37 triangles ( 3-cycles ) requires at least @xmath38 time  @xcite .",
    "is optimal if the matrix multiplication exponent @xmath39 is 2 . ] 2 .   given a sequence of @xmath37 updates to a directed graph ( edge insertions and edge deletions ) and two specified vertices @xmath40 , determining whether @xmath41 is reachable from @xmath42 after each update requires at least @xmath38 time  @xcite .",
    "3 .   given an edge - weighted undirected graph , deciding whether there exists a zero - weight triangle requires at least @xmath43 time  @xcite .    in recent years",
    "conditional lower bounds have been obtained from two other plausible conjectures : that computing the @xmath12-product of two @xmath44 matrices takes @xmath43 time and that cnf - sat takes @xmath45 time .",
    "the latter is sometimes called the strong exponential time hypothesis ( strong eth ) .",
    "we now know that if the strong eth holds , no @xmath46 algorithm exists for @xmath6-  @xcite and no @xmath47 algorithm exists for @xmath48-approximating the diameter of an @xmath37-edge unweighted graph  @xcite . williams and williams  @xcite proved that numerous problems are equivalent to @xmath12-matrix multiplication , inasmuch as a truly subcubic ( @xmath49 ) algorithm for one would imply truly subcubic algorithms for all the others .",
    "the evidence in favor of the and conjectures is rather thin .",
    "erickson  @xcite and ailon and chazelle  @xcite proved that any @xmath6-linear decision tree for solving @xmath6- must have depth @xmath50 when @xmath6 is even and @xmath51 when @xmath6 is odd .",
    "in particular , any 3-linear decision tree for has depth @xmath2 .",
    "( an @xmath42-linear decision tree is one where each internal node asks for the sign of a linear expression in @xmath42 elements . )",
    "the problem is obviously not harder than , but no other relationship between these two problems is known . indeed , the assumption that elements are integers opens the door to a variety of algorithmic techniques that can not be modeled as decision trees . using the fast fourier",
    "transform it is possible to solve in @xmath52 time , which is subquadratic even for a rather large universe size @xmath53 .",
    "baran , demaine , and ptracu  @xcite showed that can be solved in @xmath54 time ( with high probability ) on the word ram , where @xmath55 and @xmath56 is the machine word size .",
    "the algorithm uses a mixture of randomized universe reduction ( via hashing ) , word packing , and table lookups .",
    "it is straightforward to reduce @xmath6- to a problem or unbalanced problem , depending on whether @xmath6 is even or odd .",
    "when @xmath6 is odd one forms certain sets @xmath57 where @xmath58 and @xmath59 , then sorts them in @xmath60 time .",
    "the standard three - set algorithm on @xmath57 takes @xmath61 time .",
    "when @xmath62 is even there is no set @xmath63 .",
    "using lambert s algorithm  @xcite , @xmath64 and @xmath65 can be sorted is @xmath66 time while performing only @xmath67 comparisons .",
    "these algorithms can be modeled as @xmath6-linear decision trees , and are therefore optimal in this model by the lower bounds of  @xcite . however , it was known that all @xmath6- problems can be solved by @xmath0-linear decision trees with depth @xmath68  @xcite , or with depth @xmath69 if the coefficients of the linear function are integers with absolute value at most @xmath70  @xcite",
    ". unfortunately these decision trees are not efficiently constructible .",
    "the time required to determine _ which _ comparisons to make is exponential in @xmath0 .",
    "the problem was highlighted in a recent article by williams and williams  @xcite .",
    "they did not give any subcubic algorithm , but did show that a subcubic algorithm would have implications for via an intermediate problem called .    *",
    ":* : :    given a vector @xmath71 , determine if there    exist @xmath72 for which @xmath73 . *",
    ":* : :    the same as , except that @xmath74 and    @xmath75 , where @xmath76 is the    machine word size .    ptracu  @xcite defined the problem and gave a randomized reduction from to .",
    "williams and williams  @xcite gave a reduction from to .",
    "neither of these reductions is frictionless .",
    "define @xmath77 and @xmath78 to be the complexities of the various problems on inputs of length @xmath0 , or graphs with @xmath0 vertices .",
    "clearly @xmath79 .",
    "the reductions show that for any @xmath6 , @xmath80 and @xmath81 .",
    "note that even if had an @xmath1-time algorithm ( optimal on dense graphs ) , this would only give an @xmath82 bound for .",
    "we give the first subquadratic bounds on both the decision tree complexity of and the algorithmic complexity of , which also gives the first deterministic subquadratic algorithm for .-bit word ram with the standard repertoire of unit - time @xmath83 operations : bitwise boolean operations , left and right shifts , addition , and comparison . ]",
    "our method leads to similar improvements to the decision tree complexity of @xmath6-when @xmath7 is odd .",
    "refer to figure  [ fig : results ] for a summary of prior work and our results .",
    "[ thm:3sum ] there is a 4-linear decision tree for with depth @xmath3 .",
    "furthermore , can be solved deterministically in @xmath4 time and , using randomization , in @xmath84 time with high probability .",
    "[ thm : kldt ] when @xmath7 is odd , there is a @xmath85-linear decision tree for @xmath6- with depth @xmath11 ,    theorem  [ thm:3sum ] refutes the conjecture and casts serious doubts on the optimality of many @xmath1 algorithms in computational geometry .",
    "theorem  [ thm:3sum ] also answers a question of erickson  @xcite and ailon and chazelle  @xcite about whether @xmath86-linear decision trees are more powerful than @xmath6-linear decision trees in solving @xmath6- problems . in the case of @xmath87",
    ", they are .",
    "we define a new product of three real - valued matrices called _ target - min - plus _ , which is trivially computable in @xmath88 time .",
    "we observe that is reducible to a target - min - plus product , then give subcubic bounds on the decision tree and algorithmic complexity of target - min - plus .",
    "theorem  [ thm : zerotriangle ] is an immediate consequence .",
    "[ thm : zerotriangle ] the decision tree complexity of is @xmath13 on @xmath0-vertex graphs and its randomized decision tree complexity is @xmath89 with high probability .",
    "there is a deterministic algorithm running in @xmath90 time and a randomized algorithm running in @xmath91 time with high probability .",
    "any @xmath37-edge graph contains @xmath92 triangles which can be enumerated in @xmath92 time , so can clearly be solved in @xmath92 time as well .",
    "we improve this bound for all @xmath37 .",
    "[ thm : sparse - zerotriangle ] the decision tree complexity of on @xmath37-edge graphs is @xmath93 and , using randomization , @xmath94 with high probability .",
    "the problem can be solved in @xmath95 time deterministically or @xmath96 with high probability .    by invoking the williams - williams reduction  @xcite ,",
    "our algorithms give subquadratic bounds on the complexity of . by designing algorithms from scratch",
    "we can obtain speedups comparable to those of theorem  [ thm : zerotriangle ] .",
    "[ thm : convolutionthreesum ] the decision tree complexity of is @xmath3 and its randomized decision tree complexity is @xmath97 with high probability .",
    "the problem can be solved in @xmath5 time deterministically , or in @xmath98 time with high probability .",
    "all of our algorithms borrow liberally from fredman s 1976 articles on the decision tree complexity of @xmath12-matrix multiplication  @xcite and the complexity of sorting @xmath99  @xcite . throughout the paper we shall refer to the ingenious observation that @xmath100 iff @xmath101 as _",
    "fredman s trick_. in order to shave off @xmath102 factors in runtime we apply the geometric domination technique invented by chan  @xcite and developed further by bremner , chan , demaine , erickson , hurtado , iacono , langerman , ptracu , and taslakian  @xcite .",
    "in section  [ sect : usefullemmas ] we review a number of useful lemmas due to fredman  @xcite , buck  @xcite , and chan  @xcite about sorting with partial information , the complexity of hyperplane arrangements , and the complexity of dominance reporting in @xmath103 . in section",
    "[ sect : quadratic3sum ] we review a standard @xmath1-time algorithm and in section  [ sect : nonuniform ] we present an @xmath104-depth decision tree for .",
    "subquadratic algorithms for are presented in section  [ sect : uniform ] .",
    "section  [ sect : lineardegeneracy ] presents new bounds on the decision tree complexity of @xmath6- for odd @xmath7 .",
    "section  [ sect : zerotriangle ] presents new bounds on the decision tree and algorithmic complexity of and .",
    "section  [ sect : conclusion ] concludes with some open problems .",
    "fredman  @xcite considered the problem of sorting a list of @xmath0 numbers known to be arranged in one of @xmath105 permutations .",
    "when @xmath106 is sufficiently small the list can be sorted using a linear number of comparisons .",
    "[ lem : fredman ] ( fredman 1976  @xcite ) a list of @xmath0 numbers whose sorted order is one of @xmath106 permutations can be sorted with @xmath107 pairwise comparisons .    throughout the paper",
    "@xmath108 $ ] denotes the first @xmath109 natural numbers @xmath110 , where @xmath111 may or may not be an integer .",
    "we apply lemma  [ lem : fredman ] to the problem of sorting _",
    "cartesian sums_. given lists @xmath112}$ ] and @xmath113}$ ] of distinct numbers , define @xmath114\\}$ ] .",
    "we often regard @xmath115 as an @xmath116 matrix ( which may contain multiple copies of the same number ) or as a point in the @xmath117-dimensional space @xmath118 , whose coordinates are named @xmath119 .",
    "the points in @xmath118 that agree with a fixed permutation of @xmath115 form a convex cone bounded by the @xmath120 hyperplanes @xmath121\\}$ ] .",
    "the sorted order of @xmath115 is encoded as a sign vector @xmath122 depending on whether @xmath123 lies on , above , or below a particular hyperplane in @xmath124 .",
    "therefore the number of possible sorted orders of @xmath115 is exactly the number of regions ( of all dimensions ) defined by the arrangement @xmath124 .",
    "( regions of dimension less than @xmath117 correspond to instances in which some numbers appear multiple times . )",
    "[ lem : buck ] ( buck 1943  @xcite ) consider the partition of space defined by an arrangement of @xmath37 hyperplanes in @xmath103 .",
    "the number of regions of dimension @xmath125 is at most @xmath126 and the number of regions of all dimensions is @xmath127 .",
    "in one of our algorithms we will construct the hyperplane arrangement explicitly .",
    "edelsbrunner , orourke , and seidel  @xcite proved that the natural incremental algorithm takes @xmath127 time ( linear in the size of the arrangement ) , but any trivial @xmath128-time algorithm suffices in our application .",
    "the hyperplane arrangements we use correspond to fragments of the cartesian sum @xmath115 .",
    "lemma  [ lem : sortx+y ] is a direct consequence of lemmas  [ lem : fredman ] and [ lem : buck ] .",
    "[ lem : sortx+y ] let @xmath129}$ ] and @xmath113}$ ] be two lists of numbers and let @xmath130 ^ 2 $ ] be a set of positions in the @xmath44 grid .",
    "the number of realizable orders of @xmath131 is @xmath132 and therefore @xmath133 can be sorted with at most @xmath134 comparisons .",
    "it is sometimes convenient to assume that the elements of a cartesian sum are distinct ( and therefore have exactly one sorted order ) , even though numbers may appear multiple times .",
    "lemma  [ lem : tiebreaking ] illustrates one way to break ties consistently .",
    "the proof is straightforward .",
    "[ lem : tiebreaking ] let @xmath135 and @xmath136 be two lists of numbers .",
    "define @xmath137 and @xmath138 .",
    "the cartesian sum @xmath139 is totally ordered , and is a linear extension of the partially ordered @xmath115 .",
    "( addition over tuples is pointwise addition ; tuples are ordered lexicographically .",
    "the tuple @xmath140 can be regarded as a representation of a real number @xmath141 where @xmath142 are sufficiently small so as not to invert strictly ordered elements of @xmath115 . )",
    "given a set @xmath143 of red and blue points in @xmath103 , the _ bichromatic dominating pairs _",
    "problem is to enumerate every pair @xmath144 such that @xmath145 is red , @xmath146 is blue , and @xmath145 is greater than @xmath146 at each of the @xmath147 coordinates . a natural divide and conquer algorithm  @xcite runs in time linear in the output size and @xmath148 .",
    "chan  @xcite provided an improved analysis when @xmath147 is logarithmic in @xmath0 .",
    "for the sake of completeness we give a short proof of lemma  [ lem : redblue ] in appendix  [ sect : redblue ] .",
    "[ lem : redblue ] * ( bichromatic dominance reporting  @xcite ) * given a set @xmath149 of red and blue points , it is possible to return all bichromatic dominating pairs @xmath144 in time linear in the output size and @xmath150 . here",
    "@xmath151 is arbitrary and @xmath152 .",
    "we typically invoke lemma  [ lem : redblue ] with @xmath153 and @xmath154 , where @xmath155 is sufficiently small to make the running time subquadratic , excluding the time allotted to reporting the output .",
    "we shall review a standard @xmath1 algorithm for the three - set version of and introduce some terminology used in sections  [ sect : nonuniform ] and [ sect : uniform ] .",
    "we are given sets @xmath156 and must determine if there exists @xmath32 such that @xmath19 .",
    "for each @xmath157 the algorithm searches for @xmath158 in the cartesian sum @xmath115 .",
    "each search takes @xmath159 time , for a total of @xmath160 .",
    "we view @xmath115 as being a matrix whose rows correspond to @xmath64 and columns correspond to @xmath65 , both listed in increasing order .",
    "1.@xmath161 : :    sort @xmath64 and @xmath65 in increasing order as    @xmath162 and    @xmath163 .",
    "2.@xmath161 : :    for each @xmath157 , 2.1.@xmath164 : :    initialize @xmath165 and    @xmath166 .",
    "2.2.@xmath164 : :    repeat : 2.2.1.@xmath167 : :    if @xmath168 ,    report witness    `` @xmath169 '' 2.2.2.@xmath167 : :    if @xmath170    then decrement @xmath171 , otherwise increment    @xmath172 .",
    "2.3.@xmath173 : :    until @xmath174 or    @xmath175 .",
    "3.@xmath161 : :    if no witnesses were found report `` no witness . ''",
    "note that when a witness is discovered in step 2.2.1 the algorithm continues to search for more witnesses involving @xmath34 .",
    "since the elements in each row and each column of the @xmath115 matrix are distinct , it does not matter whether we increment @xmath172 or decrement @xmath171 after finding a witness .",
    "we choose to increment @xmath172 in such situations ; this choice is reflected in lemma  [ lem : contour ] and its applications in sections  [ sect : rand - param ] and [ sect : det - param ] .",
    "define the _ contour _ of @xmath176 , @xmath177 , to be the sequence of positions @xmath178 encountered while searching for @xmath176 in @xmath115 .",
    "when @xmath115 is understood from context we will write it as @xmath179 .",
    "if @xmath115 is viewed as a topographic map , with the lowest point in the nw corner and highest point in the se corner , @xmath179 represents the path taken by an agent attempting to stay as close to altitude @xmath176 as possible , starting in the ne corner ( at position @xmath180 ) and ending when it falls off the western or southern side of the map .",
    "lemma  [ lem : contour ] is straightforward .",
    "[ lem : contour ] every occurrence of @xmath176 in @xmath115 lies on @xmath179 .",
    "let @xmath181 be any element of @xmath115 . then @xmath182 iff either @xmath183 lies strictly below @xmath179 or both @xmath183 and @xmath184 lie on @xmath179 .",
    "similarly , @xmath185 iff either @xmath183 lies strictly above @xmath179 or both @xmath183 and @xmath186 lie on @xmath179 .",
    "recall that we are given a set @xmath187 of reals and must determine if there exist @xmath18 summing to zero .",
    "we first state the algorithm , then establish its correctness and efficiency .",
    "1.@xmath161 : :    sort @xmath64 in increasing order as    @xmath188 .",
    "partition @xmath64 into    @xmath189 groups    @xmath190 of size at most    @xmath191 , where    @xmath192    and @xmath193 may be smaller .",
    "the first    and last elements of @xmath194 are    @xmath195 and    @xmath196 .",
    "2.@xmath161 : :    sort    @xmath197 } \\left(a_i - a_i\\right ) = \\{a - a ' \\;|\\ ; a , a ' \\in a_i \\mbox { for some } i\\}$ ] .",
    "3.@xmath161 : :    for all @xmath198 $ ] , sort    @xmath199 .",
    "4.@xmath161 : :    for @xmath6 from 1 to @xmath0 , 4.1.@xmath164 : :    initialize @xmath165 and    @xmath200 to    be the group index of @xmath201 .",
    "4.2.@xmath164 : :    repeat : 4.2.1.@xmath167 : :    if    @xmath202 ,    report `` solution found '' and halt .",
    "4.2.2.@xmath167 : :    if    @xmath203    then decrement @xmath171 , otherwise increment    @xmath172 .",
    "4.3.@xmath173 : :    until @xmath204 .",
    "5.@xmath161 : :    report `` no solution '' and halt .    with appropriate modifications",
    "this algorithm also solves the three - set version of , where the input is @xmath205 .",
    "[ [ efficiency - of - the - algorithm . ] ] efficiency of the algorithm",
    ". + + + + + + + + + + + + + + + + + + + + + + + + + + + +    step 1 requires @xmath206 comparisons . by lemmas  [ lem : fredman ] and [ lem : buck ] ,",
    "step 2 requires @xmath207 comparisons to sort @xmath208 . using fredman s trick , step 3 requires no comparisons at all , given the sorted order on @xmath208 .",
    "( if @xmath209 and @xmath210 , @xmath211 holds iff @xmath212 . ) for each iteration of the outer loop ( step 4 ) there are at most @xmath189 iterations of the inner loop ( step 4.2 ) since each iteration ends by either incrementing @xmath172 or decrementing @xmath171 . in step 4.2.1 we can determine whether @xmath213 is in @xmath214 with a binary search , in @xmath215 comparisons . in total",
    "the number of comparisons is on the order of @xmath216 , which is @xmath3 when @xmath217 .",
    "[ [ correctness - of - the - algorithm . ] ] correctness of the algorithm .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the purpose of the outer loop ( step 4 ) is to find @xmath218 , for which @xmath219 and @xmath220 .",
    "this is tantamount to finding indices @xmath221 for which @xmath222 , and @xmath202 .",
    "we maintain the loop invariant that if there exist @xmath223 for which @xmath224 , then both of @xmath225 and @xmath226 lie in @xmath227 .",
    "suppose the algorithm has not halted in step 4.2.1 , that is , there are no solutions with @xmath222 .",
    "if @xmath203 then there can clearly be no solutions with @xmath228 since @xmath229 , so decrementing @xmath171 preserves the invariant .",
    "similarly , if @xmath230 then there can be no solutions with @xmath231 since @xmath232 , so incrementing @xmath172 preserves the invariant .",
    "if it is ever the case that @xmath204 then , by the invariant , no solutions exist .",
    "[ [ algorithmic - implementation . ] ] algorithmic implementation .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + +    this algorithm can be implemented to run in @xmath233 time while performing only @xmath234 comparisons . using any optimal sorting algorithm steps 13",
    "can be executed in @xmath235 time while using @xmath236 comparisons .",
    "now the boxes @xmath237 have been explicitly sorted , so the binary searches in step 4.2.1 can be executed in @xmath238 time per search .",
    "the total running time is @xmath233 and the number of comparisons is now minimized when @xmath239 , for a total of @xmath234 comparisons .",
    "we do not know of any polynomial time algorithm that performs @xmath3 comparisons .",
    "in our decision tree , sorting @xmath208 ( step 2 ) is a comparison - efficient way to accomplish step 3 , but it only lets us _ deduce _ the sorted order of the boxes @xmath237 .",
    "it does not give us a useful representation of these sorted orders , namely one that lets us implement each comparison of the binary search in step 4.2.1 in @xmath240 time .",
    "in this section we present several methods for sorting the boxes based on bichromatic dominating pairs , as in chan  @xcite and bremner et al .",
    "@xcite ; see lemma  [ lem : redblue ] .",
    "the total time spent performing binary searches in step 4.2.1 will be @xmath241 , so our goal is to make @xmath191 as large as possible , provided that the cost of sorting the boxes is of a lesser order .    [ [ overview . ] ] overview .",
    "+ + + + + + + + +    as a warmup we give , in section  [ sect : simple - subquad - alg ] , a relatively simple subquadratic algorithm running in @xmath242 time . in section  [ sssect : faster3sum ] we present a more sophisticated algorithm , some of whose parameters can be selected either deterministically or randomly .",
    "sections  [ sect : rand - param ] and [ sect : det - param ] give two parameterizations of the algorithm , which lead to an @xmath243 time deterministic algorithm and @xmath244-time randomized algorithm .",
    "choose the group size to be @xmath245 .",
    "the algorithm enumerates _ every _ permutation @xmath246\\rightarrow [ g]^2 $ ] , where @xmath247 is decomposed into row and column functions @xmath248 \\rightarrow [ g]$ ] . by definition @xmath249 is the correct sorting permutation iff @xmath250 for all @xmath251 $ ] .",
    "is totally ordered .",
    "see lemma  [ lem : tiebreaking ] . ] since @xmath252 this inequality can also be written @xmath253 . by fredman",
    "s trick this is equivalent to saying that the ( red ) point @xmath254 dominates the ( blue ) point @xmath255 , where @xmath256    we find all such dominating pairs . by lemma  [ lem : redblue ]",
    "the time to report red / blue dominating pairs , over all @xmath257 invocations of the procedure , is @xmath258 , the last term being the total size of the outputs . for @xmath259 and @xmath260",
    "the first term is negligible .",
    "the total running time is therefore @xmath261 for dominance reporting and @xmath262 for the binary searches in step 4.2.1 .",
    "since there are at most @xmath263 realizable permutations of @xmath264 , not @xmath257 ( see lemma  [ lem : sortx+y ] and fredman  @xcite ) , we could possibly shave off another @xmath265 factor by setting @xmath266 . however , with a bit more work it is possible to save @xmath102 factors , as we now show .      to improve the running time of the simple algorithm we must sort larger boxes .",
    "our approach is to partition the blocks into layers and sort each layer separately .",
    "so long as each layer has size @xmath267 , the cost of red / blue dominance reporting will be negligible .",
    "the main difficulty is that the natural boundaries between layers are unknown and different for each of the blocks in @xmath237 .",
    "let @xmath268 ^ 2 $ ] be a set of @xmath145 positions in the @xmath269 grid that includes positions @xmath270 and @xmath271 .",
    "how we select the remaining @xmath272 positions in @xmath143 will be addressed later . for each @xmath273 , consider @xmath274 , that is , the path in @xmath275 ^ 2 $ ] taken by the standard algorithm of section  [ sect : quadratic3sum ] when searching for @xmath276 inside @xmath264 .",
    "clearly @xmath277 goes through position @xmath278 .",
    "for any two @xmath279 , @xmath277 and @xmath280 may intersect in several places ( see figure  [ fig : searchpath ] ) though they never cross . according to lemma  [ lem :",
    "contour ] , the two contours define a _",
    "@xmath281 of the positions of @xmath275 ^ 2 $ ] into three regions , where @xmath282\\\\ a_{i , j}(s ) & \\subset ( a_{i , j}(l , m),\\ , a_{i , j}(l',m'))\\\\ a_{i , j}(t ) & \\subset [ a_{i , j}(l',m'),\\ , \\infty)\\end{aligned}\\ ] ] here @xmath283 for a subset @xmath284 ^ 2 $ ] .",
    "note that @xmath281 is fully determined by the shapes of the contours , not the specific contents of @xmath264 .",
    "totally ordered .",
    "refer to lemma  [ lem : tiebreaking ] . ]",
    "see figure  [ fig : tripartition](a ) for an illustration .    [",
    "cols=\"^,^,^,^,^,^,^,^,^,^\",options=\"header \" , ]      throughout let @xmath285 be a sufficiently small constant .",
    "in the randomized implementation of our algorithm we choose @xmath286 and @xmath287 .",
    "the points @xmath270 and @xmath271 must be in @xmath143 and the remaining @xmath288 points are chosen uniformly at random . with these parameters",
    "the probability of a box being _ bad _ is sufficiently low to keep the expected cost per search @xmath238 .",
    "[ lem : badprob ] the probability a particular box is bad is at most @xmath289 .",
    "let @xmath249 be the sorted order for some box @xmath264 .",
    "the probability @xmath264 is bad is precisely the probability that there are @xmath290 consecutive elements ( according to @xmath249 ) that are not included in @xmath143 .",
    "the probability that this occurs for a particular set of @xmath290 elements is less than @xmath291 . by a union bound over all @xmath292 sets of @xmath290 consecutive elements ,",
    "the probability @xmath264 is bad is at most @xmath289 .",
    "the expected time per search is therefore @xmath293 . by linearity of expectation",
    "the expected total running time is @xmath294 .",
    "we could have set the parameters differently and achieved the same running time .",
    "for example , setting @xmath295 and @xmath296 would also work .",
    "the advantage of keeping @xmath297 is simplicity : we can afford to enumerate all @xmath298 permutations of @xmath299 ^ 2 $ ] rather than explicitly construct a hyperplane arrangement in order to enumerate only those _ realizable _ permutations of @xmath300 .",
    "[ [ high - probability - bounds . ] ] high probability bounds .",
    "+ + + + + + + + + + + + + + + + + + + + + + + +    the running time of the algorithm may deviate from its expectation with non - negligible probability since the _ badness _ events for the boxes @xmath237 can be strongly positively correlated . the easiest way to obtain high probability bounds is simply to choose @xmath301 random point sets @xmath302}$ ] , estimate the cost of the algorithm under each point set , then execute the algorithm under the point set with the best estimated cost .",
    "the first step is to run a truncated version of the algorithm in order to determine which queries will be asked in step 4.2.1 . rather than answer the query @xmath303 we simply record the triple @xmath304 in a list @xmath305 to be answered later .",
    "the running time of the algorithm under @xmath306 is @xmath307 plus @xmath191 times the number of bad triples in @xmath305 , that is , those @xmath304 for which @xmath264 is bad according to @xmath306 .",
    "let @xmath308 be the true fraction of bad triples in @xmath305 according to @xmath306 and @xmath309 be the estimate of @xmath308 obtained by the following procedure .",
    "sample @xmath310 elements of @xmath305 uniformly at random and for each , test whether the given block is bad according to @xmath306 by sorting its elements , in @xmath311 time . if @xmath312 is the number of blocks discovered to be bad , report the estimate @xmath313 . by a standard version of",
    "the chernoff bound is the number of successes in @xmath0 independent bernoulli trials , @xmath314 and @xmath315 are both upper bounded by @xmath316 .",
    "see  ( * ? ? ?",
    "] we have @xmath317 by lemma  [ lem : badprob ] , @xmath318 for each @xmath319 , so by markov s inequality @xmath320 . with high probability ,",
    "each @xmath309 deviates from @xmath308 by at most @xmath289 , so the running time of the algorithm will be within a constant factor of its expectation with probability @xmath321 .",
    "the time to pick the best point set @xmath322 , @xmath323 being @xmath324 } \\{\\hat\\epsilon_l\\}$ ] , is @xmath325",
    ". we could set @xmath326 and @xmath327 as high as @xmath328 , making the probability that the algorithm deviates from its expectation exponentially small , @xmath329 .",
    "we achieve a subquadratic worst - case algorithm by choosing @xmath330 and @xmath143 such that no block can be bad .",
    "fix @xmath331 and @xmath332 for an integer @xmath146 to be determined . aside from the two obligatory points",
    ", @xmath143 contains an evenly spaced @xmath333 grid in @xmath275\\times [ g]$ ] . setting @xmath334 ,",
    "@xmath143 is defined as @xmath335 see figure  [ fig : tripartition](b ) .",
    "we now argue that no box can be bad if @xmath336 . for any legal pair of contours @xmath337 , in the corresponding tripartition @xmath281 no element of @xmath143",
    "can be contained in @xmath300 , that is , in any row ( or column ) containing elements of @xmath143 , the width ( or height ) of the band @xmath300 is at most @xmath338 .",
    "since both @xmath339 and @xmath340 are monotone paths in @xmath275 ^ 2 $ ] ( non - decreasing by row , non - increasing by column ) , we always have @xmath341 .",
    "see figure  [ fig : tripartition](b ) for a worst - case example . for @xmath342",
    "sufficiently small the overhead for reporting dominating pairs will be negligible .",
    "the overall running time is therefore @xmath343 .",
    "recall that we are given a set @xmath344 and a function @xmath345 , for some real coefficients @xmath346 .",
    "the problem is to determine if there is a point @xmath347 where @xmath25 is zero .",
    "as we show below , our decision tree can be generalized in a straightforward way to solve @xmath6- with @xmath11 comparisons , when @xmath7 is odd .",
    "unfortunately , we do not see how to generalize our _ algorithms _ to solve @xmath6- in @xmath348 time , for any odd @xmath349 .",
    "( of theorem  [ thm : kldt ] ) define @xmath350 to be the set @xmath351 , where @xmath352 .",
    "begin by sorting the sets @xmath353    we have effectively reduced @xmath6- to an unbalanced problem .",
    "letting @xmath63 be the set @xmath354 , the problem is to determine if there exist @xmath32 such that @xmath19 .",
    "note that @xmath58 whereas @xmath59 .",
    "the standard algorithm of section  [ sect : quadratic3sum ] performs @xmath355 comparisons . generalizing the decision tree of section  [",
    "sect : nonuniform ] ( from one list to three ) we can solve unbalanced using @xmath356 comparisons , which is @xmath11 when @xmath357 .",
    "our subquadratic algorithms do not extend naturally to unbalanced instances . when @xmath358 we can no longer afford to _ explicitly _ sort all @xmath269 boxes in @xmath115 as this would require at least @xmath359 time .",
    "boxes of interest .",
    "the dominating pairs approach does not let us sort an arbitrary selection of boxes in constant time per box , but it is possible to accomplish this task in a more powerful model of computation . on a souped - up word ram with @xmath360-bit words and a couple non - standard unit - time operations ,",
    "any @xmath269 box can be sorted in @xmath240 time .",
    "simulating such a unit - time operation on the traditional word ram is a challenging problem . ]",
    "we consider a matrix product called _ target - min - plus _ that subsumes the @xmath12-product ( aka distance product ) and the problem of  @xcite . given real matrices @xmath361 and a target matrix @xmath362 , the goal is to compute @xmath363 , where @xmath364 \\mbox { and } a(i , k)+b(k , j ) \\ge t(i , j)\\,\\right\\}\\ ] ] as well as the matrix of witnesses , that is , the @xmath6 ( if any ) for which @xmath365 . this operation reverts to the @xmath12-product when @xmath366 .",
    "it can also solve on a weighted graph @xmath367 by setting @xmath368 and @xmath369 as follows .",
    "let @xmath370 , where @xmath371 if @xmath372 , and let @xmath373 if @xmath374 and @xmath375 otherwise . if @xmath376 then there is a zero weight triangle containing @xmath183 and the witness matrix gives the third corner of the triangle .",
    "the trivial target - min - plus algorithm runs in @xmath377 time and performs the same number of comparisons .",
    "we can compute the target - min - plus product using fewer comparisons using fredman s trick .",
    "[ thm : target - min - plus ] the decision - tree complexity of the target - min - plus product of three @xmath44 matrices is @xmath13 .",
    "this product can be computed in @xmath14 time .",
    "we first show that the target - min - plus product @xmath378 can be determined with @xmath379 comparisons , where @xmath368 and @xmath369 are @xmath380 and @xmath381 matrices , respectively .",
    "begin by sorting the set @xmath382 , j\\in[t ] , \\mbox { and } k , k'\\in [ s]\\}.\\ ] ] by lemma  [ lem : sortx+y ] the number of comparisons required to sort @xmath208 is @xmath383 .",
    "we can now deduce the sorted order on @xmath384\\},\\ ] ] for any pair @xmath385\\times [ t]$ ] , and can therefore find @xmath386 with a binary search over @xmath387 using @xmath388 additional comparisons .",
    "the total number of comparisons is @xmath379 .",
    "note that this provides no improvement when @xmath64 and @xmath65 are square , that is , when @xmath389 .",
    "following fredman  @xcite we partition @xmath64 and @xmath65 into rectangular matrices and compute their target - min - plus products separately .",
    "choose a parameter @xmath191 and partition @xmath64 into @xmath390 and @xmath65 into @xmath391 where @xmath392 contains columns @xmath393 of @xmath64 and @xmath394 contains the corresponding rows of @xmath65 .",
    "for each @xmath395 $ ] , compute the target - min - plus product @xmath396 and set @xmath397 } ( c_{\\ell}(i , j))$ ] .",
    "this algorithm performs @xmath398 comparisons to compute @xmath399}$ ] and @xmath400 comparisons to compute @xmath63 . when @xmath357 the number of comparisons is @xmath13 .",
    "to compute the product efficiently we use the geometric dominance approach of chan  @xcite and bremner et al .",
    "choose a parameter @xmath401 and partition @xmath64 into @xmath402 matrices @xmath403 and @xmath65 into @xmath404 matrices @xmath405 .",
    "for each @xmath406 $ ] and permutation @xmath407 \\rightarrow [ g]$ ] we will find those pairs @xmath408 ^ 2 $ ] for which @xmath249 is the sorted order on @xmath409\\}$ ] .",
    "such a triple satisfies the inequality @xmath410 , for all @xmath411 $ ] . by fredman",
    "s trick this is equivalent to saying that the ( red ) point @xmath412 in each of the @xmath413 coordinates . by lemma  [ lem : redblue ]",
    "the total time for all @xmath414 invocations of the dominance algorithm is @xmath415 plus the output size , which is precisely @xmath416 . for @xmath417 and @xmath401 the running time is @xmath418 .",
    "we can now compute the target - min - plus product @xmath396 in @xmath419 time by iterating over all @xmath420 ^ 2 $ ] and performing a binary search to find the minimum element in @xmath409\\ } \\cap [ t(i , j),\\infty)$ ] . since @xmath421 contains the pointwise minima of @xmath422 , the total time to compute the",
    "target - min - plus product is @xmath423 .    the @xmath424 factor in the decision tree complexity of target - min - plus arises comes from the binary searches , @xmath425 searches per pair @xmath420 ^ 2 $ ] .",
    "if the searches were sufficiently correlated ( either for fixed @xmath183 or fixed @xmath426 ) then there would be some hope that we could evade the information theoretic lower bound of @xmath427 per search . using random sampling we form a hierarchy of rectangular target - min - plus products such that the solutions at one level gives a hint for the solutions at the next lower level .",
    "the cost of finding the solution , given the hint from the previous level , is @xmath240 in expectation .",
    "the same approach lets us shave off another @xmath428 factor off the algorithmic complexity of target - min - plus .",
    "[ thm : target - min - plus - rand ] the randomized decision tree complexity of the target - min - plus product of three @xmath44 matrices is @xmath89 . it can be computed in @xmath91 time with high probability .    as usual let @xmath368 and @xmath369 be @xmath44 matrices and @xmath191 be a parameter .",
    "we will eventually set @xmath429 .",
    "we partition the indices @xmath430 $ ] at @xmath428 levels .",
    "define @xmath431 to be the @xmath145th interval at level @xmath319 .",
    "in other words , level-@xmath319 intervals have width @xmath432 and a level-@xmath433 interval is the union of two level-@xmath319 intervals . form a series of nested index sets @xmath430 = j_0 \\supset j_1 \\supset \\cdots \\supset j_{\\log\\log n-1}$ ] , such that @xmath434 is a uniformly random subset of @xmath435 of size @xmath191 . in other words , each element of @xmath436 is promoted to @xmath437 with probability 1/2 , but in such a way that @xmath438 is precisely its expectation @xmath191 .    after generating the sets @xmath439",
    "the algorithm sorts @xmath208 with @xmath440 comparisons ( see lemma  [ lem : sortx+y ] ) , where @xmath441 $ and $ k , k ' \\in j_l \\cap i_{l , p}$,}\\\\ \\mbox{for some level $ l$ and index $ p$ } \\end{array } \\right . \\right\\}\\ ] ] fix @xmath442 $ ] . we proceed to compute @xmath443 with @xmath444 comparisons with high probability .",
    "if @xmath445 $ ] is a set of indices , define @xmath446 to be the witness of the target - min - plus product restricted to @xmath70 , that is , @xmath447{0mm}{1",
    "mm}\\rule{0mm}{2.5 mm}}}\\\\ a(i , k ) + b(k , j ) \\ge t(i , j ) } } ( a(i , k ) + b(k , j)).\\ ] ] there may , in fact , be no such witness , in which case @xmath448 .",
    "let @xmath449 be short for @xmath450 .",
    "notice that by fredman s trick we can deduce the sorted order on @xmath451 without additional comparisons , for any @xmath319 and @xmath145 .",
    "we can therefore compute the top - level witnesses @xmath452}$ ] with @xmath453 comparisons via binary search .",
    "our goal now is to compute the witnesses at all lower level intervals with @xmath454 comparisons .",
    "suppose we have computed the level-@xmath433 witness @xmath455 and wish to compute the level-@xmath319 witnesses of the constituent sequences , namely @xmath456 and @xmath457 .",
    "define @xmath458 .",
    "note that @xmath459 is determined by @xmath455 and the sorted order on @xmath460 .",
    "the distance between @xmath456 and @xmath459 ( according to the sorted order on @xmath461 ) is stochastically dominated by a geometric random variable with mean 1 .",
    "@xmath462 ; with probability less than 1/4 @xmath456 is one less than @xmath459 according to the sorted order on @xmath461 , and so on . ]",
    "the expected number of comparisons needed to determine @xmath449 using linear search is therefore @xmath240 .",
    "these geometric random variables are independent due to the independence of the samples , so we can apply standard chernoff - type concentration bounds  @xcite .",
    "the probability that the sum of these independent geometric random variables exceeds twice its expectation @xmath463 is @xmath464 .",
    "once we have computed all the witnesses for level-0 , @xmath465}$ ] , we simply have to choose the best among them , so @xmath466   \\mbox { and }   \\kappa_{0,p } \\neq { \\perp}\\}$ ]",
    ". the total number of witnesses computed for fixed @xmath72 is @xmath467 .",
    "the total number of comparisons is therefore @xmath468 to sort @xmath208 and @xmath418 to compute all the witnesses and @xmath63 , which is @xmath89 when @xmath239 .    to improve the @xmath14 algorithm we apply the ideas above with different parameters .",
    "let @xmath469 .",
    "we consider the same partitions @xmath470 and nested index sets @xmath471 , but only use the first @xmath472 levels , not @xmath428 as before .",
    "for each level @xmath473 $ ] , index @xmath474 $ ] , and permutation @xmath475\\rightarrow [ g]$ ] , we compute those pairs @xmath183 for which @xmath249 is the sorting permutation on the elements of @xmath476 .",
    "this can be done in time linear in the output size , at most @xmath477 , and @xmath478 } \\frac{n}{g2^l } g!c_\\epsilon n^{1+\\epsilon}$ ] .",
    "when @xmath259 and @xmath191 is sufficiently small the time spent computing dominating pairs is @xmath418 . since @xmath401",
    "we can encode the sorting permutation of each @xmath479 in one word and can answer a variety of queries about these permutations in @xmath240 time using @xmath480-size precomputed tables .    fix a pair @xmath481 ^ 2 $ ] .",
    "when finding the top - level witnesses @xmath482}$ ] we can implement each step of the binary searches in @xmath240 time using table lookups , for a total of @xmath444 time .",
    "we can also implement each step of the linear searches for witnesses @xmath456 and @xmath457 in @xmath240 time using table lookups .",
    "( in addition to encoding the sorting permutations on @xmath483 , @xmath484 , and @xmath485 , we also need to encode the positions of @xmath483 within @xmath486 as a length-@xmath487 bit vector .",
    "this is needed in order to find @xmath459 and @xmath488 in @xmath240 time , given @xmath455 and the sorted order on @xmath460 . ) over all @xmath408 ^ 2 $ ] the total number of comparisons is @xmath489 with high probability .    the trivial time to solve on sparse @xmath37-edge graphs is @xmath92 .",
    "such graphs contain at most @xmath92 triangles , which can be enumerated in @xmath92 time .",
    "we now restate and prove  [ thm : sparse - zerotriangle ] . + * theorem  [ thm : sparse - zerotriangle ] . *",
    "_ the decision tree complexity of on @xmath37-edge graphs is @xmath93 and , using randomization , @xmath94 with high probability .",
    "the problem can be solved in @xmath95 time deterministically or @xmath96 with high probability .",
    "_   +    we begin by greedily finding an acyclic orientation of the graph @xmath27 .",
    "iteratively choose the vertex @xmath490 with the fewest number of still unoriented edges and direct them all away from @xmath490 .",
    "since every @xmath37-edge graph contains a vertex of degree less than @xmath491 , the maximum outdegree in this orientation is less than @xmath492 .",
    "we now use @xmath493 instead of @xmath494 to emphasize that the set is oriented .    select a random mapping @xmath495 $ ] , where @xmath70 will be fixed soon .",
    "the expected number of pairs of oriented edges @xmath496 having @xmath497 is less than @xmath498 .",
    "any coloring that does not exceed this expected value suffices ; we do not need to choose @xmath499 at random .",
    "we now sort the set @xmath208 with @xmath500 comparisons  @xcite , where @xmath501 call a triangle on @xmath502 _ type-@xmath503 _ if the orientation of the edges is @xmath504 and @xmath505 .",
    "clearly every triangle is of one type and there are @xmath506 types .",
    "a type-@xmath503 zero - weight triangle exists iff @xmath507 appears in the set @xmath508 . by fredman",
    "s trick the sorted order of this set is determined by the sorted order of @xmath208 , since @xmath509 iff @xmath510 .",
    "see figure  [ fig : triangle ] .",
    "we can therefore determine if there exists a zero - weight triangle of a particular type with @xmath511 comparisons via binary search .",
    "the total number of comparisons is @xmath512 , which is @xmath93 when @xmath513 .",
    "the @xmath514 factor can be shaved off using randomization , exactly as in theorem  [ thm : target - min - plus - rand ] .",
    "we form @xmath428 levels of colorings , where color class @xmath145 at the @xmath433th level is the union of classes @xmath515 and @xmath516 at the @xmath319th level .",
    "after the searches are conducted at level @xmath517 , the expected cost per search at level @xmath319 is @xmath240 .    to solve efficiently we greedily orient the graph as before , stopping when all remaining vertices have degree at least @xmath492 , where @xmath492 is a parameter to be fixed shortly .",
    "( the unoriented subgraph remaining is called the _",
    "@xmath492-core_. ) for each vertex @xmath518 and each pair of outgoing edges @xmath519 , we check whether @xmath520 is a triangle and , if so , whether it has zero weight .",
    "( note that the edge @xmath521 , if it exists , may be in the @xmath492-core and therefore not have an orientation . )",
    "this takes @xmath522 time .",
    "it remains to check triangles contained entirely in the @xmath492-core .",
    "since the @xmath492-core has at most @xmath523 vertices we can solve on it in @xmath524 time or @xmath525 time with high probability .",
    "the total cost is balanced when @xmath526 or @xmath527 depending on whether uses the randomized or deterministic algorithm .",
    "the problem is easily reducible to , so our @xmath3 and @xmath528 bounds for extend directly to .",
    "however , has additional structure , which makes it amenable to the same random sampling techniques used in theorem  [ thm : target - min - plus - rand ] . we give only a sketch of the proof of theorem  [ thm : convolutionthreesum ] as the analysis is essentially the same as that found in theorem  [ thm : target - min - plus - rand ] .",
    "+ * theorem  [ thm : convolutionthreesum ] . * _ the decision tree complexity of is @xmath3 and its randomized decision tree complexity is @xmath97 with high probability . the problem can be solved in @xmath5 time deterministically , or in @xmath98 time with high probability .",
    "_   +    ( sketch ) in the problem we must determine if there is a @xmath529 $ ] such that @xmath201 occurs on the @xmath6th antidiagonal of the matrix @xmath530 .",
    "in contrast to , the rows and columns of @xmath530 are not sorted . on the other hand , we do not need to look for @xmath201 in the whole matrix , just those locations along an antidiagonal .",
    "the @xmath3 decision tree bound is proved as in section  [ sect : nonuniform ] , by partitioning the matrix into @xmath269 blocks and for each @xmath6 , conducting binary searches for @xmath201 in the appropriate antidiagonals of at most @xmath531 boxes . in order to shave off the @xmath424 factor we use the same random sampling approach of theorem  [ thm : target - min - plus - rand ] .",
    "we partition @xmath530 at @xmath428 levels , where level-@xmath319 boxes have size @xmath532 and are the union of four level-@xmath533 boxes .",
    "the rows and columns are sampled at @xmath428 levels , where a row or column at level @xmath534 is promoted to level @xmath319 with probability 1/2 .",
    "note that an element of @xmath530 appears at level-@xmath319 if and only if both its row and column are in the level-@xmath319 sample . since elements along any antidiagonal share no rows or columns , the events that they appear at level-@xmath319 are entirely independent .",
    "this independence property allows us to search for @xmath201 in level-@xmath319 sampled boxes in @xmath240 expected time , given the predecessors of @xmath201 in the level-@xmath433 sampled boxes .",
    "algorithms running in @xmath535 ( deterministically ) or @xmath98 ( with high probability ) are obtained using the methods applied in theorems  [ thm : target - min - plus ] and [ thm : target - min - plus - rand ] .",
    "alternatively , we could apply the williams - williams reduction  @xcite from to and then invoke the algorithms of theorems  [ thm : target - min - plus ] and [ thm : target - min - plus - rand ] as black boxes .",
    "since the introduction of fredman s  @xcite @xmath12-product algorithm in 1976 , many have become comfortable with the idea that some numerical problems _ naturally _ have a large gap ( @xmath536 ) between their ( nonuniform ) decision - tree complexity and ( uniform ) algorithmic complexity .- convolution , @xmath537-convolution , polyhedral 3sum ( see bremner et al .",
    "@xcite ) , and erds - szekeres partitioning , that is , decomposing a sequence into @xmath454 monotonic subsequences . see bar - yehuda and fogel  @xcite , dijkstra  @xcite , and fredman  @xcite . ] from this perspective , our decision trees for and ( with depth @xmath538 and @xmath539 ) do not constitute convincing evidence that and have truly subquadratic and subcubic algorithms .",
    "however , williams s",
    "@xcite recent breakthrough on the algorithmic complexity of @xmath12-product should shake one s confidence that these @xmath540 gaps are natural . to close them",
    "one may simply need to develop more sophisticated algorithmic machinery .",
    "the exponent @xmath541 has a special significance in ptracu s program  @xcite of conditional lower bounds based on hardness of . his superlinear lower bounds on triangle enumeration and polynomial lower bounds on dynamic data structures depend on the complexity of being @xmath542 , for some @xmath543 . in most other -hardness proofs",
    "there is nothing sacred about the 3/2 threshold ( or any other exponent ) .",
    "for example , if requires @xmath544 time then finding three collinear points in a set @xmath545 also requires @xmath546 time  @xcite .",
    "10    o.  weimann a.  abboud , v. vassilevska  williams .",
    "consequences of faster sequence alignment . in _",
    "proceedings 41st intl colloquium on automata , languages , and programming ( icalp ) _",
    ", 2014 .",
    "a.  abboud and k.  lewi .",
    "exact weight subgraphs and the @xmath6-sum conjecture . in _ proceedings of the 40th intl colloquium on automata , languages , and programming ( icalp ) _ , pages 112 , 2013 .",
    "a.  abboud and v.  vassilevska williams .",
    "popular conjectures imply strong lower bounds for dynamic problems . ,",
    "abs/1402.0054 , 2014 .",
    "o.  aichholzer , f.  aurenhammer , e.  d. demaine , f.  hurtado , p.  ramos , and j.  urrutia . on @xmath6-convex polygons .",
    ", 45(3):7387 , 2012 .",
    "n.  ailon and b.  chazelle .",
    "lower bounds for linear degeneracy testing . , 52(2):157171 , 2005 .",
    "a.  amir , t.  m. chan , m.  lewenstein , and n.  lewenstein .",
    "consequences of faster sequence alignment . in _",
    "proceedings 41st intl colloquium on automata , languages , and programming ( icalp ) _",
    ", 2014 .",
    "r.  bar - yehuda and s.  fogel . partitioning a sequence into few monotone subsequences .",
    ", 35:421440 , 1998 .",
    "i.  baran , e.  d. demaine , and m.  ptracu .",
    "subquadratic algorithms for 3sum .",
    ", 50(4):584596 , 2008 .",
    "g.  barequet and s.  har - peled . polygon containment and translational min - hausdorff - distance between segment sets",
    "are 3sum - hard .",
    ", 11(4):465474 , 2001 .",
    "a.  bjorklund , r.  pagh , v.  vassilevska williams , and u.  zwick .",
    "listing triangles . in _",
    "proceedings 41st intl colloquium on automata , languages , and programming ( icalp ) _",
    ", 2014 .",
    "m.  blum , r.  w. floyd , v.  pratt , r.  l. rivest , and r.  e. tarjan .",
    "time bounds for selection . , 7(4):448461 , 1973 .",
    "d.  bremner , t.  m. chan , e.  d. demaine , j.  erickson , f.  hurtado , j.  iacono , s.  langerman , m.  ptracu , and p.  taslakian .",
    "necklaces , convolutions , and _ x _ + _ y_. , 69:294314 , 2014 .",
    "r.  c. buck .",
    "partition of space .",
    ", 50:541544 , 1943 .",
    "a.  butman , p.  clifford , r.  clifford , m.  jalsenius , n.  lewenstein , b.  porat , e.  porat , and b.  sach . pattern matching under polynomial transformation . , 42(2):611633 , 2013 .",
    "t.  m. chan .",
    "all - pairs shortest paths with real weights in @xmath547 time . , 50(2):236243 , 2008 .",
    "s.  chechik , d.  larkin , l.  roditty , g.  schoenebeck , r.  e. tarjan , and v.  vassilevska williams .",
    "better approximation algorithms for the graph diameter . in _ proceedings of the 25th annual acm - siam symposium on discrete algorithms ( soda ) _ , pages 10411052 , 2014 .",
    "chen , p .- h .",
    "hsu , and k .-",
    "approximate matching for run - length encoded strings is 3sum - hard . in _",
    "combinatorial pattern matching _ ,",
    "volume 5577 of _ lecture notes in computer science _ , pages 168179 .",
    "e.  w. dijkstra .",
    "some beatiful arguments using mathematical induction . , 13:18 , 1980 .",
    "d.  p. dubhashi and a.  panconesi . .",
    "cambridge university press , 2009 .",
    "h.  edelsbrunner , j.  orourke , and r.  seidel .",
    "constructing arrangements of lines and hyperplanes with applications .",
    ", 15(2):341363 , 1986 .",
    "p.  erds and p.  turn . on a problem of sidon in additive number theory , and on some related problems .",
    ", 1(4):212215 , 1941 .",
    "j.  erickson .",
    "bounds for linear satisfiability problems . , 1999 .",
    "m.  l. fredman .",
    "how good is the information theory bound in sorting ? , 1(4):355361 , 1976 .",
    "m.  l. fredman .",
    "new bounds on the complexity of the shortest path problem . , 5(1):8389 , 1976 .",
    "a.  gajentaan and m.  h. overmars . on a class of @xmath548 problems in computational geometry . , 5:165185 , 1995 .",
    "j.  hartmanis and r.  e. stearns . on the computational complexity of algorithms . , 117:285306 , 1965 .",
    "z.  jafargholi and e.  viola .",
    ", 3xor , triangles . , abs/1305.3827 , 2013 .",
    "lambert . sorting the sums @xmath549 in @xmath548 comparisons .",
    ", 103(1):137141 , 1992 .",
    "s.  meiser .",
    "point location in arrangements of hyperplanes .",
    ", 106(2):286303 , 1993 .",
    "f.  meyer auf der heide .",
    "a polynomial linear search algorithm for the @xmath0-dimensional knapsack problem .",
    ", 31(3):668676 , 1984 .",
    "f.  p. preparata and m.  i. shamos . .",
    "springer , new york , ny , 1985 .",
    "m.  ptracu . towards polynomial lower bounds for dynamic problems . in _",
    "proceedings 42nd acm symposium on theory of computing ( stoc ) _ , pages 603610 , 2010 .",
    "m.  ptracu and r.  williams . on the possibility of",
    "faster sat algorithms . in _ proceedings of the 21st annual acm - siam symposium on discrete algorithms ( soda ) _ , pages 10651075 , 2010 .",
    "l.  roditty and v.  vassilevska williams .",
    "fast approximation algorithms for the diameter and radius of sparse graphs . in _",
    "proceedings 45th acm symposium on theory of computing ( stoc ) _ , pages 515524 , 2013 .",
    "m.  a. soss , j.  erickson , and m.  h. overmars .",
    "preprocessing chains for fast dihedral rotations is hard or even impossible .",
    ", 26(3):235246 , 2003 .",
    "r.  williams .",
    "faster all - pairs shortest paths via circuit complexity . in _ proceedings of the 46th annual acm symposium on theory of computing ( stoc ) _ , 2014 .",
    "technical report available as arxiv:1312.6680 .",
    "v.  vassilevska williams and r.  williams . subcubic equivalences between path , matrix and triangle problems . in",
    "_ proceedings 51th annual ieee symposium on foundations of computer science ( focs ) _ , pages 645654 , 2010 .",
    "v.  vassilevska williams and r.  williams .",
    "finding , minimizing , and counting weighted subgraphs .",
    ", 42(3):831854 , 2013 .",
    "for the sake of completeness we shall review a standard divide and conquer dominating pairs algorithm of preparata and shamos  @xcite and give a short proof of lemma  [ lem : redblue ] due to chan  @xcite .",
    "we are given @xmath0 red and blue points in @xmath550 , at least one of each color , and wish to report all pairs @xmath551 where @xmath552}$ ] is red , @xmath553}$ ] is blue and @xmath554 for each @xmath555 $ ] .",
    "when @xmath556 the algorithm simply reports every pair of points , so assume @xmath557 .",
    "find the median @xmath558 on the last coordinate in @xmath480 time  @xcite and partition @xmath143 into disjoint sets @xmath559 , @xmath560 of size at most @xmath561 , where @xmath562 furthermore , there can not be a red @xmath563 and blue @xmath564 such that @xmath565 .",
    "were a dominating pair only if @xmath566 for all @xmath555 $ ] , then we would break ties the other way , letting red points precede blue points . ] at this point all dominating pairs are in @xmath567 or @xmath560 , or have one point in each , in which case the blue point is necessarily in @xmath559 and the red in @xmath560 .",
    "we make three recursive calls to find dominating pairs of each variety .",
    "the first two calls are on @xmath561 points in @xmath103 .",
    "the third recursive call is on all blue points in @xmath559 and all red points in @xmath560 ; after stripping their last coordinate they lie in @xmath568 ."
  ],
  "abstract_text": [
    "<S> the problem is to decide , given a set of @xmath0 real numbers , whether any three sum to zero . </S>",
    "<S> it is widely conjectured that a trivial @xmath1-time algorithm is optimal and over the years the consequences of this conjecture have been revealed . </S>",
    "<S> this conjecture implies @xmath2 lower bounds on numerous problems in computational geometry and a variant of the conjecture implies strong lower bounds on triangle enumeration , dynamic graph algorithms , and string matching data structures .    in this paper </S>",
    "<S> we refute the conjecture . </S>",
    "<S> we prove that the decision tree complexity of is @xmath3 and give two subquadratic algorithms , a deterministic one running in @xmath4 time and a randomized one running in @xmath5 time with high probability . </S>",
    "<S> our results lead directly to improved bounds for @xmath6-variate linear degeneracy testing for all odd @xmath7 . </S>",
    "<S> the problem is to decide , given a linear function @xmath8 and a set @xmath9 , whether @xmath10 . </S>",
    "<S> we show the decision tree complexity of this problem is @xmath11 .    </S>",
    "<S> finally , we give a subcubic algorithm for a generalization of the @xmath12-product over real - valued matrices and apply it to the problem of finding zero - weight triangles in weighted graphs . </S>",
    "<S> we give a depth-@xmath13 decision tree for this problem , as well as an algorithm running in time @xmath14 . </S>"
  ]
}
{
  "article_text": [
    "path planning is a basic problem to almost all scopes of computer science ; such as computational geometry , online algorithms , robotics and artificial intelligence @xcite . especially , path planning in an unknown environment for which there is no geometric map of the scene is interesting in many real life cases .",
    "robot sensors is the only tool for gathering information in an unknown street .",
    "amount of the information achieved from the environment depends on the capability of the robot . due to the importance of using simple robot , including low cost , less sensitive to failure , robust against sensing errors and noise ,",
    "many types of path planning for simple robot have been studied @xcite .    in this paper , we consider the problem of walking a simple robot in an unknown street .",
    "a simple polygon @xmath2 with two separated vertices @xmath1 and @xmath0 is called a street if the left boundary chain @xmath3 and the right boundary chain @xmath4 constructed on the polygon from @xmath1 to @xmath0 are mutually weakly visible . in other words",
    "each point on the left chain can see at least one point on the right chain and vice versa @xcite , see figure [ f3 ] .",
    "a point robot which its sensor has a minimal capability that can only detect discontinuities in depth information ( gaps ) and the target point @xmath0 , starts searching the street .",
    "the robot can locate the target as soon as it enters in its visibility region . also , the robot can not measure any angles or distances or infer its position , see figure [ f3 ] .",
    "the goal is to reach the target @xmath0 using the information gathered through its sensor , starting from @xmath1 such that the traveled path by the robot is as short as possible .    in order to evaluate the efficiency of a search strategy for the robot",
    ", we use the notation of the competitive analysis . the competitive analysis for a strategy that leads the robot is the ratio of the expected distance traversed by the robot over the shortest distance from @xmath1 to @xmath0 , in the worst case .",
    "in previous research , tabatabaei and ghodsi gave a deterministic algorithm for the simple robot to reach the target @xmath0 in the street , starting from @xmath1 .",
    "the robot using some pebbles and memorizing some portion of the street has seen , explores the street . the target @xmath0 is achieved such that the traversed path is at most 11 times longer than the shortest by using one pebble",
    ". also they showed , allowing use of many pebbles reduces the factor to 9 @xcite .",
    "furthermore , they presented a randomized strategy in  @xcite .",
    "in this paper , first , we present a deterministic strategy using the location of two special gaps which are updated during the walking .",
    "the robot achieves the target , without memorizing environment and without using pebbles .",
    "the search path is optimal ; length of the generated path is at most 9 times longer than shortest path .",
    "then , we present a randomized strategy that generate a search path similar to the deterministic one , but the worst case ratio of the expected distances traveled by the robot to the shortest path is 5.33 .",
    "* related works : * klein proposed the first competitive algorithm for walking in streets problem for a robot that was equipped with a 360 degrees vision system @xcite . also , icking et al . presented an optimal search strategy for the problem with the competitive factor of @xmath5 @xcite .",
    "many online strategies for patrolling unknown environment such as street , generalized street , and star polygon are presented in  @xcite .",
    "the limited sensing model ( gap sensor ) that our robot is equipped with , in this research , was first introduced by tovar et al .",
    "they offered gap navigation tree ( gnt ) to maintain and update the gaps seen along a navigating path . a strategies , using gnt for exploring unknown environments , presented in @xcite .",
    "another minimal sensing model was presented by suri et al .",
    "they assumed that the simple robot can only sense the combinatorial ( non - metric ) properties of the environment .",
    "the robot can locate the vertices of the polygon in its visibility region , and can report if there is a polygonal edge between them . despite of the minimal ability , they showed that the robot can accomplish many non - trivial tasks .",
    "then , disser et al . empowered the robot with a compass to solve the mapping problem in polygons with holes @xcite .",
    "at the start point , the point robot reports a cyclically ordered of discontinuities in the depth information ( gaps ) in its visibility region .",
    "each gap has a label of @xmath6 or @xmath7 which displays the direction of the part of the scene that is hidden behind the gap , see figure [ f3 ] .",
    "the robot can orient its heading to each gap and moves towards the gap in an arbitrary number of steps .",
    "also the robot moves towards the target as they enter in its visibility region .    while the robot moves , combinatorial changes occur in the visibility region of the robot that they are called critical events .",
    "there are four types of critical events : appearances , disappearances , merges , and splits of gaps .",
    "appearance and disappearance events occur when the robot crosses inflection rays .",
    "an appeared gap , during the movement , corresponds to a portion of the environment that was already visible , but now is not visible .",
    "such the gaps are called primitive gaps and the other gaps are non - primitive gaps . merge and split events",
    "occur when the robot crosses bitangent , as illustrated in figure  [ f3 ] .      at each point of the search path ,",
    "if the target is not visible , the robot reports a set of left and right gaps ( @xmath8-gap and @xmath9-gap for abbreviation ) .",
    "let @xmath10 be the most advanced non - primitive left gap ( @xmath8-gap ) and @xmath11 be the most advanced non - primitive right gap ( @xmath9-gap ) @xcite , see figure [ f3 ] .",
    "the two gaps have a fundamental role in path planning for the simple robot .",
    "@xcite[the ] while the target is not visible , it is hidden behind one of the two gaps , @xmath10 or @xmath11 .    from theorem",
    "[ the ] , if there exist only one of the two gaps ( @xmath11 and @xmath10 ) then the goal is hidden behind of the gap . thus , there is no ambiguity and the robot moves towards the gap , see figure [ i22](a ) .",
    "when both of @xmath11 and @xmath10 exist , a funnel case arises , see figure [ i22](b ) . at each funnel case , usually , a detour from the shortest path is unavoidable .      whatever we maintain during the search strategy is location of @xmath10 and @xmath11 .",
    "as the robot moves in the street , the critical events that change the structure of the robot s visibility region may dynamically change @xmath10 and @xmath11 .",
    "also , by the robot movement , a funnel case may end or a new funnel may start .",
    "we refer to the point , in which a funnel ends a _ critical point _ of the funnel .",
    "the following events update the location of @xmath10 and @xmath11 as well as a funnel situation when the robot moves towards @xmath10 or @xmath11 .    1 .",
    "when @xmath11/@xmath10 splits into @xmath11/@xmath10 and another @xmath9-gap/@xmath8-gap , then @xmath11/@xmath10 will be replaced by the @xmath9-gap/@xmath8-gap , ( point 1 in figure  [ i22](b ) ) .",
    "when @xmath11/@xmath10 splits into @xmath11/@xmath10 and another @xmath8-gap/@xmath9-gap , then @xmath8-gap/@xmath9-gap will be set as @xmath10/@xmath11 .",
    "this point is a critical point in which a funnel situation ends , ( point  2 in figure  [ i22](b ) .",
    "3 .   when @xmath10 or @xmath11 disappears , the robot may achieve a critical point in which a funnel situation ends , ( point  1 in figure  [ i22](b ) ) .",
    "note that the split and disappearance events may occur concurrently , ( point  3 in figure  [ i22](b ) ) .",
    "furthermore , by moving towards @xmath11 and @xmath10 , these gaps never merge with other gaps .",
    "now , we present our strategy for searching the street , from @xmath1 to @xmath0 . since the target is constantly behind one of @xmath11 and @xmath10 , during the searching , the location of them is maintained and dynamically updated as explained in the previous section .      at each point of the search path , especially at the start point @xmath1 , there are two cases :    * if only one of the two gaps ( @xmath11 and @xmath10 ) existsor , or they are collinear then the goal is hidden behind the gap .",
    "the robot moves towards the gap until the target is achieved or a funnel situation arises , see figure [ i22](a ) .",
    "* if there is a funnel case , in order to bound the detour , the robot moves towards @xmath11 and @xmath10 alternatively . at each stage @xmath12",
    ", the robot moves @xmath13",
    "step(s ) towards @xmath11 , and at each stage @xmath14 , the robot moves @xmath13 steps towards @xmath10 such that : @xmath15 , @xmath16 , and @xmath17 for @xmath18 .",
    "the robot continues moving towards @xmath11 or @xmath10 alternatively until a critical point of the funnel is achieved . at the point ,",
    "one of @xmath11 or @xmath10 disappears , or @xmath11 and @xmath10 are collinear .",
    "so , the robot moves along the existing gap direction until the target is achieved or a new funnel situation arises , as illustrated in figure  [ i22](b ) .",
    "now , we present a randomized search strategy based on the above deterministic strategy . at each point of the search path",
    "that only one of @xmath11 or @xmath10 exists , or the two gaps are collinear , the robot moves along the existing direction , similar the deterministic strategy . in the funnel case ,",
    "first , the robot chooses a random real uniformly variable from @xmath19 and sets length of its step by @xmath20 .",
    "then , it chooses a uniform random variable @xmath21 from @xmath22 to select the direction towards @xmath11 or @xmath10 . if @xmath21 is 1/0 , at each odd stage @xmath23 the robot moves @xmath13 steps towards @xmath11/@xmath10 , and at each even stage @xmath24 , the robot moves @xmath13 steps towards @xmath10/@xmath11 ( @xmath25 in the previous section ) .",
    "similar to the deterministic strategy , the robot continues moving towards @xmath11 and @xmath10 in the number of steps alternatively until the funnel case ends .    at each funnel ,",
    "the actual randomization occurs only at first step for specifying length of steps , and for determining the direction of the movement . in the next section ,",
    "we show the expected performance of our randomization algorithm is better than the performance of our deterministic algorithm .    .",
    "illustration of the algorithm for two opening angles , small and large angles respectively in ( b ) and ( c ) .",
    ", height=226 ]      throughout the searching , the robot path coincides with the shortest path unless a funnel case arises . then , in order to prove the competitive ratio of our strategy , we compare length of the path and shortest path in a funnel case .    for analyzing the strategy , we inspire from the doubling strategy by baeza - yates et al .",
    "@xcite . in the strategy a robot moves back and forth on a line such that the distance to the start point doubles at each stage until the target is reached .",
    "@xcite  [ xx ] the doubling strategy for searching a point on a line has a competitive factor of 9 , and this is optimal .",
    "opening angle , the angle between @xmath11 and @xmath10 , is always smaller than @xmath26  @xcite .",
    "the simple robot walks towards within the opening angle .",
    "an important attribute of the angle is characterized in the following lemma .",
    "[ lem ] by our strategy , the detour from shortest path for small opening angle , in the funnel case , is shorter than detour for large opening angle .    in each funnel case",
    ", the robot moves some steps towards @xmath11 or @xmath10 , then changes its direction and moves some steps towards the other . in the alternative movement ,",
    "one of the directions is correct and the other is a deviation .",
    "clearly for large opening angle the deviation is greater , as shown in figure  [ i22](c ) .",
    "now , we can prove , the competitive factor of our deterministic strategy .",
    "[ tl ] our deterministic strategy guarantees a path at most 9 times longer than shortest path in the street from @xmath1 to @xmath0 .",
    "the robot always moves towards @xmath11 and @xmath10 while the gapas update via splitting by crossing over bitangents , as explained in [ me ] .",
    "numbers of the events are finite , so the target is achieved in finite time . from lemma [ lem ] , there is further deviation from shortest path for large opening angles .",
    "the angle never exceeds @xmath26 .",
    "then , for computing a competitive factor , we consider it equals @xmath26 .",
    "starting from @xmath1 , the robot moves @xmath15 step towards @xmath11 , then moves @xmath27 steps towards @xmath10 , and again moves forth @xmath28 steps towards @xmath10 , moves back @xmath29 steps towards @xmath10 , and so on . in other words the robot moves back and forth on the line that contain @xmath10 and @xmath11 such that the distance to the start point @xmath1 doubles at each stage until the critical point is reached . by theorem  [ xx ] competitive factor for the search strategy",
    "kao , reif , and tate  @xcite offer a competitive randomized algorithm for searching on a line .",
    "the procedure is similar to the doubling strategy ; the first step is characterized as a random number , and lengths of subsequent steps is multiplied by @xmath9 .",
    "the competitive factor of their randomized strategy is @xmath30 .",
    "a similar argument to the proof of theorem [ tl ] shows that when the opening angle is @xmath26 , our randomized search strategy coincides with kao et al .",
    "strategy to search a point on a line with @xmath31 .",
    "so , the theorem below is immediately satisfied .",
    "the randomized strategy generates a search path to achieve target t in the street , starting from s , with a competitive ratio of 5.33 .",
    "in this paper we have developed two similar search strategies for walking in streets problem for a simple robot .",
    "the point robot can only detect the gaps and the target in the environment .",
    "also the robot can only moves towards the gaps .",
    "our deterministic strategy achieves optimal competitive factors of 9 , and is simpler than previous known result .",
    "the other strategy is a randomized strategy based on the deterministic strategy that has a better performance .",
    "expected length of the generated path by the random strategy is at most 5.33 times longer than shortest path .",
    "it would be absorbing if there is an optimal randomized search strategy .",
    "lopez - padilla , r. , murrieta - cid , r. , lavalle , s. m. in algorithmic foundations of robotics , springer berlin heidelberg , ( pp 123138 ) , 2012 .",
    "suri , s. , vicari , e. , widmayer , p. the international journal of robotics research , 27(9 ) : 10551067 , 2008 .",
    "tabatabaei , azadeh , and mohammad ghodsi .",
    "journal of combinatorial optimization , 30(2 ) : 387 - 401 , 2015 .",
    "tabatabaei , azadeh , and mohammad ghodsi .",
    "eurocg 2015 , ljubljana , slovenia , march 1618 , 2015 .",
    "tovar , b. , murrieta - cid , r. , lavalle , s. m. robotics ieee transactions 23(3 ) : 506518 , 2007 ."
  ],
  "abstract_text": [
    "<S> we consider the problem of walking in an unknown street , for a robot that has a minimal sensing capability . the robot is equipped with a sensor that only detects the discontinuities in depth information ( gaps ) and </S>",
    "<S> can locate the target point as enters in its visibility region . </S>",
    "<S> first , we propose an online deterministic search strategy that generates an optimal search path for the simple robot to reach the target @xmath0 , starting from @xmath1 . the competitive ratio of the strategy is 9 . </S>",
    "<S> in contrast with previously known research , the path is designed without memorizing any portion of the scene has seen so far . </S>",
    "<S> then , we present a randomized search strategy , based on the deterministic strategy . </S>",
    "<S> we prove that the expected distance traveled by the robot is at most a 5.33 times longer than the shortest path to reach the target .    </S>",
    "<S> [ theorem]lemma [ theorem]corollary [ theorem]proposition    computational geometry , unknown environment , street polygon , competitive ratio , simple robot </S>"
  ]
}
{
  "article_text": [
    "defeasible reasoning is a nonmonotonic reasoning @xcite approach in which the gaps due to incomplete information are closed through the use of defeasible rules that are usually appropriate .",
    "defeasible logics were introduced and developed by nute @xcite over several years .",
    "these logics perform defeasible reasoning , where a conclusion supported by a rule might be overturned by the effect of another rule .",
    "roughly , a proposition @xmath2 can be defeasibly proved ( @xmath3 ) only when a rule supports it , and it has been demonstrated that no applicable rule supports @xmath4 ; this demonstration makes use of statements @xmath5 which mean intuitively that an attempt to prove @xmath6 defeasibly has failed finitely",
    ". these logics also have a monotonic reasoning component , and a priority on rules .",
    "one advantage of nute s design was that it was aimed at supporting efficient reasoning , and in our work we follow that philosophy .",
    "defeasible reasoning has recently attracted considerable interest .",
    "its use in various application domains has been advocated , including the modelling of regulations and business rules @xcite , modelling of contracts @xcite , legal reasoning @xcite , agent negotiations @xcite , modelling of agents and agent societies @xcite , and applications to the semantic web @xcite .",
    "in fact , defeasible reasoning ( in the form of courteous logic programs @xcite ) provides a foundation for ibm s business rules markup language and for current w3c activities on rules @xcite .",
    "in addition , defeasible theories , describing policies of business activities , can be mined efficiently from appropriate datasets @xcite .",
    "therefore defeasible reasoning is a promising subarea in nonmonotonic reasoning as far as applications and integration to mainstream it is concerned .",
    "recent theoretical work on defeasible logics has : ( i ) established some relationships to other logic programming approaches without negation as failure @xcite ; ( ii ) analysed the formal properties of these logics @xcite as well as formal semantics for them in form of model theoretic semantics @xcite and argumentation semantics @xcite , and ( iii ) has delivered efficient implementations @xcite .",
    "however the problem remains that defeasible logic is not firmly linked to the mainstream of nonmonotonic reasoning , in particular the semantics of logic programs .",
    "this paper aims at resolving this problem .",
    "we use the translation of a defeasible theory @xmath0 into a logic meta - program @xmath7 proposed in @xcite . for this translation",
    "we can show that , for the propositional case :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath2 is defeasibly provable in @xmath0 @xmath8 @xmath2 is included in all stable models of @xmath7 . @xmath9 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    however this result can only be shown under the additional condition of _ decisiveness _ : the absence of cycles in the atom dependency graph .",
    "if we wish to drop decisiveness , @xmath9 holds only in one direction , from left to right .",
    "we show that if we wish the equivalence in the general case , we need to use another semantics for logic programs , namely kunen semantics @xcite .",
    "in addition the possibility of cycles in the atom dependency graph of a defeasible theory prevents defeasible logic to be characterised by well - founded semantics @xcite .",
    "it is possible to modify defeasible logic to accommodate well - founded semantics @xcite even if this results in a more expensive computational model .",
    "the paper is organised as follows .",
    "sections 2 and 3 present the basics of defeasible logic and logic programming semantics , respectively .",
    "section 4 presents our translation of defeasible theories in logic programs , while section 5 contains the main results .",
    "a defeasible theory ( a knowledge base in defeasible logic ) consists of five different kinds of knowledge : facts , strict rules , defeasible rules , defeaters , and a superiority relation .",
    "_ facts _ are literals that are treated as known knowledge ( given or observed facts of a case ) .",
    "_ strict rules _ are rules in the classical sense : whenever the premises are indisputable ( e.g.  facts ) then so is the conclusion .",
    "an example of a strict rule is `` emus are birds '' .",
    "written formally : @xmath10    _ defeasible rules _ are rules that can be defeated by contrary evidence .",
    "an example of such a rule is `` birds typically fly '' ; written formally : @xmath11 the idea is that if we know that something is a bird , then we may conclude that it flies , _ unless there is other , not inferior , evidence suggesting that it may not fly_.    _ defeaters _ are rules that can not be used to draw any conclusions .",
    "their only use is to prevent some conclusions . in other words , they are used to defeat some defeasible rules by producing evidence to the contrary .",
    "an example is `` if an animal is heavy then it might not be able to fly '' . formally : @xmath12 the main point is that the information that an animal is heavy is not sufficient evidence to conclude that it does nt fly .",
    "it is only evidence against the conclusion that a heavy animal flies . in other words , we do nt wish to conclude @xmath13 if @xmath14 , we simply want to prevent a conclusion @xmath15 .    the _ superiority relation _ among rules is used to define priorities among rules , that is , where one rule may override the conclusion of another rule . for example , given the defeasible rules @xmath16 which contradict one another , no conclusive decision can be made about whether a bird with broken wings can fly .",
    "but if we introduce a superiority relation @xmath17 with @xmath18 , with the intended meaning that @xmath19 is strictly stronger than @xmath20 , then we can indeed conclude that the bird can not fly .",
    "it is worth noting that , in defeasible logic , priorities are _ local _ in the following sense : two rules are considered to be competing with one another only if they have complementary heads .",
    "thus , since the superiority relation is used to resolve conflicts among competing rules , it is only used to compare rules with complementary heads ; the information @xmath21 for rules @xmath22 without complementary heads may be part of the superiority relation , but has no effect on the proof theory .      in this paper",
    "we restrict attention to essentially propositional defeasible logic .",
    "rules with free variables are interpreted as rule schemas , that is , as the set of all ground instances ; in such cases we assume that the herbrand universe is finite .",
    "we assume that the reader is familiar with the notation and basic notions of propositional logic .",
    "if @xmath6 is a literal , @xmath23 denotes the complementary literal ( if @xmath6 is a positive literal @xmath2 then @xmath23 is @xmath4 ; and if @xmath6 is @xmath4 , then @xmath23 is @xmath2 ) .",
    "rules are defined over a _ language _ ( or _ signature _ ) @xmath24 , the set of propositions ( atoms ) and labels that may be used in the rule .",
    "a _ rule _ @xmath25 consists of its unique _ label _",
    "@xmath20 , its _ antecedent _ @xmath26 ( @xmath26 may be omitted if it is the empty set ) which is a finite set of literals , an arrow @xmath27 ( which is a placeholder for concrete arrows to be introduced in a moment ) , and its _ head _ ( or _ consequent _ ) @xmath28 which is a literal . in writing rules",
    "we omit set notation for antecedents and sometimes we omit the label when it is not relevant for the context .",
    "there are three kinds of rules , each represented by a different arrow .",
    "strict rules use @xmath29 , defeasible rules use @xmath30 , and defeaters use @xmath31 .",
    "given a set @xmath32 of rules , we denote the set of all strict rules in @xmath32 by @xmath33 , and the set of strict and defeasible rules in @xmath32 by @xmath34 .",
    "@xmath35 $ ] denotes the set of rules in @xmath32 with consequent @xmath6 .",
    "a _ superiority relation on @xmath32 _ is a relation @xmath17 on @xmath32 .",
    "when @xmath36 , then @xmath37 is called _ superior _ to @xmath38 , and @xmath38 _ inferior _ to @xmath37 .",
    "intuitively , @xmath36 expresses that @xmath37 overrules @xmath38 , should both rules be applicable .",
    "@xmath17 must be acyclic ( that is , its transitive closure must be irreflexive ) .    a _ defeasible theory _",
    "@xmath0 is a triple @xmath39 where @xmath40 is a finite set of facts , @xmath32 a finite set of rules , and @xmath17 an acyclic superiority relation on @xmath32 .",
    "a _ conclusion _ of a defeasible theory @xmath0 is a tagged literal .",
    "a conclusion has one of the following four forms :    * @xmath41 , which is intended to mean that the literal @xmath6 is definitely provable , using only strict rules .",
    "* @xmath42 , which is intended to mean that @xmath6 is provably not definitely provable ( finite failure ) .",
    "* @xmath43 , which is intended to mean that @xmath6 is defeasibly provable in @xmath0 . *",
    "@xmath5 which is intended to mean that we have proved that @xmath6 is not defeasibly provable in @xmath0 .",
    "provability is defined below .",
    "it is based on the concept of a _ derivation _ ( or _ proof _ ) in @xmath44 .",
    "a derivation is a finite sequence @xmath45 of tagged literals satisfying the following conditions .",
    "the conditions are essentially inference rules phrased as conditions on proofs .",
    "@xmath46 denotes the initial part of the sequence @xmath47 of length @xmath48 .",
    "78901234567890123456=    @xmath49 : if @xmath50 then either + @xmath51 or + @xmath52 \\ \\forall a\\in",
    "a(r ) : + \\delta a \\in p(1 .. i)$ ]    that means , to prove @xmath41 we need to establish a proof for @xmath6 using facts and strict rules only .",
    "this is a deduction in the classical sense  no proofs for the negation of @xmath6 need to be considered ( in contrast to defeasible provability below , where opposing chains of reasoning must be taken into account , too ) .",
    "78901234567890123456=    @xmath53 : if @xmath54 then + @xmath55 and + @xmath56 \\",
    "\\exists a\\in a(r ) : -\\delta a \\in p(1 .. i)$ ]    to prove @xmath42 , i.e.  that @xmath6 is not definitely provable , @xmath6 must not be a fact .",
    "in addition , we need to establish that every strict rule with head @xmath6 is _ known to be _ inapplicable .",
    "thus for every such rule @xmath20 there must be at least one antecedent @xmath57 for which we have established that @xmath57 is not definitely provable ( @xmath58 ) .    78901234567890123456=@xmath59 : if @xmath60 then either + ( 1 ) @xmath61 or + ( 2 ) ( 2.1 ) @xmath62\\ \\forall a \\in a(r ) : + \\partial a\\in p(1 .. i)$ ] and + ( 2.2 ) @xmath63 and + ( 2.3 ) @xmath64 $ ] either + ( 2.3.1 ) @xmath65 or + ( 2.3.2 ) @xmath66 $ ] such that + @xmath67 and @xmath68    let us illustrate this definition . to show that @xmath6 is provable defeasibly we have two choices : ( 1 )",
    "we show that @xmath6 is already definitely provable ; or ( 2 ) we need to argue using the defeasible part of @xmath0 as well . in particular , we require that there must be a strict or defeasible rule with head @xmath6 which can be applied ( 2.1 ) .",
    "but now we need to consider possible `` attacks '' , that is , reasoning chains in support of @xmath23 .",
    "to be more specific : to prove @xmath6 defeasibly we must show that @xmath23 is not definitely provable ( 2.2 ) . also (",
    "2.3 ) we must consider the set of all rules which are not known to be inapplicable and which have head @xmath23 ( note that here we consider defeaters , too , whereas they could not be used to support the conclusion @xmath6 ; this is in line with the motivation of defeaters given above ) .",
    "essentially each such rule @xmath69 attacks the conclusion @xmath6 . for @xmath6 to be provable , each such rule @xmath69 must be counterattacked by a rule @xmath70 with head @xmath6 with the following properties : ( i ) @xmath70 must be applicable at this point , and ( ii ) @xmath70 must be stronger than ( i.e. superior to ) @xmath69 .",
    "thus each attack on the conclusion @xmath6 must be counterattacked by a stronger rule .",
    "78901234567890123456=    @xmath71 : if @xmath72 then + ( 1 ) @xmath73 and + ( 2 ) ( 2.1 ) @xmath74 \\ \\exists a \\in a(r ) : -\\partial a\\in p(1 .. i)$ ] or + ( 2.2 ) @xmath75 or + ( 2.3 ) @xmath76 $ ] such that + ( 2.3.1 ) @xmath77 and + ( 2.3.2 ) @xmath78 $ ] either + @xmath79 or @xmath80    to prove that @xmath6 is not defeasibly provable , we must first establish that it is not definitely provable",
    ". then we must establish that it can not be proven using the defeasible part of the theory .",
    "there are three possibilities to achieve this : either we have established that none of the ( strict and defeasible ) rules with head @xmath6 can be applied ( 2.1 ) ; or @xmath23 is definitely provable ( 2.2 ) ; or there must be an applicable rule @xmath69 with head @xmath23 such that no applicable rule @xmath70 with head @xmath6 is superior to @xmath69 .    in general the inference conditions for a negative proof tag ( i.e. , @xmath53 , @xmath71 ) explore all the possibilities to derive a literal ( with a given proof strength ) before stating that the literal is not provable ( with the same proof strength ) .",
    "thus conclusions with these tags are the outcome of a constructive proof that the corresponding positive conclusion can not be obtained . as a result",
    ", there is a close relationship between the inference rules for @xmath59 and @xmath71 , ( and also between those for @xmath49 and @xmath53 ) .",
    "the structure of the inference rules is the same , but the conditions are negated in some sense . to be more precise",
    "the inference conditions for a negative proof tag are derived from the inference conditions for the corresponding positive proof tag by applying the principle of strong negation introduced in @xcite .",
    "the strong negation of a formula is closely related to the function that simplifies a formula by moving all negations to an innermost position in the resulting formula and replaces the positive tags with the respective negative tags and vice - versa .",
    "the elements of a derivation are called _ lines _ of the derivation .",
    "we say that a tagged literal @xmath81 is _ provable _ in @xmath44 , denoted by @xmath82 , iff there is a derivation @xmath47 in @xmath0 such that @xmath81 is a line of @xmath47 .",
    "defeasible logic is closely related to several non - monotonic logics @xcite .",
    "in particular , the `` directly skeptical '' semantics of non - monotonic inheritance networks @xcite can be considered an instance of inference in @xmath83 once an appropriate superiority relation , derived from the topology of the network , is fixed @xcite .    a defeasible theory @xmath0 is _ coherent _ if for no literal @xmath2 both @xmath84 and @xmath85 , and @xmath86 and @xmath87 ; and _ relatively consistent _ if whenever @xmath88 and @xmath89 , for some @xmath2 , then also @xmath90 and @xmath91 .",
    "intuitively , coherence says that no literal is simultaneously provable and unprovable .",
    "consistency says that a literal and its negation can both be defeasibly provable only when it and its negation are definitely provable ; hence defeasible inference does not introduce inconsistency .",
    "a logic is coherent ( relatively consistent ) if the meaning of each theory of the logic , when expressed as an extension ( i.e. , when we consider the set of all the consequences of the theory ) , is coherent ( relatively consistent ) , that is it is not possible to prove a formula and its negation unless the monotonic part of the theory proves them .",
    "defeasible logic is coherent and relatively consistent .",
    "consistency and coherence address the issue whether and how it is possible to derive `` conflicts '' from defeasible theories . on the other side we can ask under which conditions defeasible theories are _ complete _ , in the sense that for every literal in the theory it is possible to decide whether the literal is provable / non provable from the theory .    in the rest of this section we will study conditions under which it is possible to guarantee completeness of a defeasible theory .    given a defeasible theory @xmath44 a literal @xmath6 is _ strictly unknowable in @xmath0 _ iff @xmath92 and @xmath93 .",
    "a literal is _ defeasibly unknowable in @xmath0 _ iff @xmath94 and @xmath95 .",
    "a literal is _ unknowable _ in @xmath0 iff it is either strictly unknowable in @xmath0 or defeasibly unknowable in @xmath0 .",
    "the _ dependency graph _ of @xmath0 , @xmath96 , is the directed graph defined as follows : the set of points of @xmath96 is @xmath97 .",
    "the set of arcs of @xmath96 is @xmath98 :    a\\in a(r)\\}}$ ] .",
    "let @xmath99 be the subgraph of @xmath96 restricted to the literals that are unknowable in @xmath0 , i.e. , the set of points of @xmath99 is @xmath100 .",
    "the next lemmata show the mutual relationships among unknowable literals in a defeasible theory , and general properties of graphs of unknowable literals .",
    "[ lem : degree ] let @xmath44 be a defeasible theory .",
    "the out - degree of @xmath99 is at least @xmath101 .",
    "we have to consider two cases : strictly unknowable literals and defeasibly unknowable literals .",
    "let @xmath6 be a strictly unknowable literal , then there is a point @xmath102 in @xmath99 .",
    "then , by definition , @xmath103 and @xmath93 .",
    "is identical .",
    "] hence @xmath104 and @xmath105\\exists a\\in    a(r)$ ] such that @xmath106 .",
    "since @xmath93 and @xmath104 , then @xmath52 $ ] such that @xmath107 @xmath108 .",
    "so @xmath52 $ ] @xmath109 such that @xmath110 and @xmath111 .",
    "thus @xmath112 is an arc in @xmath99 .    if @xmath6 is a defeasibly unknowable literal then we reason as follows : let @xmath102 be the point in @xmath99 corresponding to @xmath6",
    ". then @xmath113 and @xmath114 .",
    "since @xmath113 we have the following :    a1 ) @xmath115 and + a2 ) ne of the following three holds : + a2.1 ) @xmath116\\exists a\\in a(r ) : d\\not\\vdash + \\partial          a$ ] ; or + a2.2 ) @xmath117 ; or + a2.3 ) = @xmath118 $ ] such that + a2.3.1 ) @xmath119 , and + a2.3.2 ) = @xmath78 $ ] either + @xmath120 or @xmath121 .    since @xmath114 we have the following .",
    "b1 ) @xmath93 ; or + b2 ) ll of the following three hold : + b2.1 ) @xmath62\\forall a\\in a(r)\\",
    "d\\not\\vdash            -\\partial a$ ] , and + b2.2 ) @xmath122 , and + b2.3 ) = @xmath118 $ ] either + b2.3.1 ) @xmath123 ; or + b2.3.2 ) = @xmath66 $ ] such that + @xmath124 and @xmath68 .    by a1 ,",
    "if b1 holds then @xmath6 is strictly unknowable and we can repeat the first part of the proof .",
    "so suppose that b2 holds .    if a2.1 holds then by b2.1 @xmath125\\exists a\\in a(r)$ ] such that @xmath57 is defeasibly unknowable in @xmath0 .",
    "thus @xmath126 is an arc in @xmath99 .",
    "if a2.2 holds then by b2.2 @xmath127 is a strictly unknowable literal in @xmath0 , and we have already proved the property in this case .",
    "so suppose that a2.3 holds .",
    "if b2.3 holds then @xmath128\\exists a\\in a(s)$ ] such that @xmath57 is a defeasibly unknowable literal in @xmath0 .",
    "thus @xmath126 is an arc in @xmath99 .",
    "so suppose that b2.3.2 holds .",
    "then @xmath68 and so a2.3.2 holds .",
    "hence @xmath66\\exists a\\in a(t)$ ] such that @xmath57 is defeasibly unknowable in @xmath0 .",
    "thus @xmath126 is an arc in @xmath99 .",
    "therefore in all cases the out - degree of @xmath102 is at least 1 .    given a graph , a _ walk _ is an alternating sequence of vertices and edges , with each edge being incident to the vertices immediately preceeding and succeeding it in the sequence .",
    "the set of points in a walk @xmath129 in the dependency graph of a theory @xmath0 is denoted by @xmath130 .",
    "a walk @xmath129 _ ends in a cycle _ iff @xmath129 is finite and the last point of @xmath129 occurs at least twice .",
    "a walk is _ complete _ iff either    1 .",
    "@xmath130 is infinite ; or 2 .   a point in @xmath129",
    "has out - degree zero ; or 3 .",
    "@xmath129 ends in a cycle .",
    "[ lem : walks ] let @xmath44 be a defeasibly theory",
    ". then the following are equivalent .    1 .",
    "[ item : first ] there is a literal which is unknowable in @xmath0 .",
    "[ item : second ] @xmath99 is not empty .",
    "[ item : third ] there is a walk in @xmath99 .",
    "[ item : fourth ] there is a complete walk in @xmath99 . 5 .   [ item : fifth ] there is a complete walk in @xmath99 and whenever @xmath129 is a complete walk in @xmath99 then either @xmath130 is infinite or @xmath129 ends in a cycle .    [ item : first ] and [ item : second ] are clearly equivalent . if [ item : second ] holds then by lemma [ lem : degree ] , [ item : third ] holds .",
    "if [ item : third ] holds , then [ item : fourth ] holds since every walk can be extended to a complete walk . by lemma [ lem : degree ] , every point in @xmath99 has out - degree of at least 1 , and so if [ item : fourth ] holds , then [ item : fifth ] holds . if [ item : fifth ] holds since walks are not empty [ item : second ] holds .    a defeasible theory @xmath0 is called _ decisive _ iff the dependency graph of @xmath0 is acyclic .",
    "the following proposition provides a sufficient condition to determine completeness of a defeasible theory .    if @xmath0 is decisive , then for each literal @xmath2 :    * either @xmath90 or @xmath131 * either @xmath88 or @xmath132 .",
    "we prove the contrapositive , i.e. , suppose there are unknowable literals .",
    "if there are unknowable literals then by lemma [ lem : walks ] , there is a walk in @xmath99 such that @xmath130 is infinite or @xmath129 ends in a cycle . since there are only finitely many rules in @xmath0 , @xmath130 is finite , thus @xmath129 ends in a cycle .",
    "thus @xmath99 has a cycle and @xmath99 is a subgraph of @xmath96 , thus @xmath0 is not decisive .",
    "not every defeasible theory satisfies this property .",
    "for example , in the theory consisting of the single rule @xmath133 neither @xmath134 nor @xmath3 is provable .",
    "notice , however , that there are complete non decisive theories .",
    "if we extend the above theory with the rule @xmath135 and the superiority relation @xmath17 is defined as @xmath136 then we can prove both @xmath134 and @xmath137 , thus the resulting theory is not decisive , but complete .",
    "the proof theory provides the basis for a top - down ( backward - chaining ) implementation of the logic .",
    "in fact the _ deimos _ system @xcite is based directly on the proof theory described above . however , there are advantages to a bottom - up ( forward - chaining ) implementation .",
    "in particular this presentation of defeasible logic provides a both a set theoretic and a declarative computational model of the logic compared to the procedural characterisation of the top - down definitions .",
    "this allows us to describe a defeasible theory as an extension ( i.e. , set of all conclusions provable from it ) and to deal with finite as well as infinite theories .",
    "this is not possible in the other approach since derivations are required to be finite sequences of ( tagged ) literals and they are described in term of combinatorial constructions .",
    "furthermore , a bottom - up definition of the logic provides a bridge to later considerations . for these reasons we now provide a bottom - up definition of defeasible logic .",
    "we associate with @xmath0 an operator @xmath138 which works on 4-tuples of sets of literals .",
    "we call such 4-tuples an _ extension_.    123123456123456123456123456123456=    @xmath139 where +   + @xmath140 \\",
    "a(r ) \\subseteq { + \\delta } \\ } $ ] +   + @xmath141 \\",
    "a(r ) \\cap { -\\delta } \\neq \\emptyset \\ } ~ - ~ f ) $ ] +   + @xmath142 @xmath143 \\",
    "a(r ) \\subseteq { + \\partial } , $ ] + @xmath144 and + @xmath64 $ ] either + @xmath145 , or + @xmath146 $ ] such that + @xmath147 and @xmath148 +   + @xmath149 \\",
    "a(r ) \\cap { -\\partial } \\neq \\emptyset$ ] , or + @xmath150 , or + @xmath76 $ ] such that @xmath151 and + @xmath152 $ ] either + @xmath153 , or + @xmath154    the set of extensions forms a complete lattice under the pointwise containment ordering iff @xmath155 for @xmath156 .",
    "] , with @xmath157 as its least element .",
    "the least upper bound operation is the pointwise union - tuple of sets @xmath158 and @xmath159 the pointwise union of @xmath57 and @xmath160 is defined as follows : @xmath161 .",
    "] , which is represented by @xmath162 .",
    "the sequence of repeated applications of @xmath163 to @xmath164 , called the _",
    "kleene sequence _ of @xmath163 , is defined as follows :    * @xmath165 ; * @xmath166 ; * @xmath167 if @xmath168 is a limit ordinal .",
    "[ fixpoint ] @xmath138 is monotonic and the kleene sequence from @xmath164 is increasing .",
    "thus the limit @xmath169 of all finite elements in the sequence exists , and @xmath138 has a least fixpoint @xmath170 . when @xmath0 is a finite propositional defeasible theory @xmath171 .",
    "we prove by induction that @xmath172 is pointwise monotonic .",
    "the other properties follow from standard and well - know set theoretic arguments .",
    "the inductive base is trivial since the elements of @xmath164 are @xmath173 .",
    "for the inductive step we have four cases , where the inductive hypothesis amounts to : @xmath174 , @xmath175 , @xmath176 and @xmath177 .",
    "@xmath49 let us investigate the reasons why @xmath178 : if @xmath179 , then , trivially , for all @xmath180 @xmath181 ; hence @xmath182 .",
    "otherwise @xmath183 $ ] such that @xmath184 . by inductive hypothesis @xmath185",
    ". therefore @xmath186 .    @xmath53 trivial since @xmath187 , for some set of literals",
    "@xmath188 .",
    "@xmath59 if @xmath189 because @xmath190 , then by inductive hypothesis @xmath191 and thus @xmath192 . otherwise @xmath189 if ( i ) @xmath125 $ ] such that @xmath193 and ( ii ) @xmath194 and @xmath195 $ ] either ( iii ) @xmath196 or ( iv ) @xmath197",
    "$ ] such that @xmath198 and @xmath68 . by inductive hypothesis , if ( i ) then @xmath199 , if ( ii ) then @xmath200 , if ( iii ) then @xmath201 , and if ( iv ) then @xmath202 .",
    "therefore every time the conditions for @xmath2 being in @xmath203 are satisfied , so are those for @xmath2 being in @xmath204 .",
    "@xmath71 first of all , by definition , @xmath205 , then we have three possibilities to add a literal @xmath2 to @xmath206 .",
    "( i ) @xmath116 a(r)\\cap    -\\partial^{n-1}\\neq \\emptyset$ ] . by inductive hypothesis @xmath177 , thus @xmath207 , hence @xmath208 .",
    "( ii ) @xmath209 , but by inductive hypothesis @xmath174 , thus @xmath208 .",
    "( iii ) @xmath128 $ ] such that @xmath210 and @xmath211 $ ] either @xmath212 or @xmath213 . by inductive hypothesis @xmath176 and @xmath214 .",
    "therefore , also in this case , @xmath208 . hence @xmath208 .",
    "the extension @xmath40 captures exactly the inferences described in the proof theory .",
    "[ butd ] let @xmath0 be a finite propositional defeasible theory , @xmath6 a literal and @xmath215 is the limit of all finite elements of the kleene sequence from @xmath164 via @xmath138 .    then",
    ":    * @xmath216 iff @xmath217 * @xmath218 iff @xmath219 * @xmath220 iff @xmath221 * @xmath222 iff @xmath223    we prove the theorem by induction on the length of derivations in one direction and on the number of iterations of the operator @xmath224 in the other .",
    "inductive base @xmath30 @xmath225 .",
    "this means that either @xmath51 or that there exists a rule @xmath226 $ ] such that @xmath227 . in both cases @xmath228 . in the first case by definition , in the second since @xmath229 . by the monotonicity of @xmath224 , @xmath230 .",
    "we assume that the theorem holds for proofs of length up to @xmath231 , and @xmath232 . here",
    "we consider only the cases different from the inductive base .",
    "thus there exists a rule @xmath226 $ ] such that @xmath233 , @xmath234 . by inductive hypothesis @xmath235 .",
    "let @xmath236 be the minimal set of literals in the kleene sequence defined by @xmath224 containing all such @xmath57s",
    ". clearly @xmath237 .",
    "hence , by the monotonicity of @xmath224 , @xmath238 .",
    "if @xmath239 , then either @xmath51 or @xmath52 : a(r)\\subseteq + \\delta^0 $ ] , that is @xmath227 . in both case",
    "we have that @xmath41 is a single line proof of @xmath6 .",
    "we have that @xmath240 and the property holds up to @xmath241 . if @xmath242 because @xmath51 , then , as in the previous case , @xmath41 is a single line proof of @xmath6 .",
    "otherwise @xmath52:a(r)\\subseteq + \\delta^n$ ] . by inductive hypothesis @xmath243 , @xmath244 .",
    "let @xmath245 be an enumeration of the literals in @xmath26 , and let @xmath246 be a proof of @xmath247 .",
    "we concatenate the @xmath246s and we append @xmath41 at the end .",
    "it is immediate to verify that the sequence thus obtained is a proof of @xmath41 .",
    "inductive base @xmath30 @xmath248 iff @xmath249 and @xmath250 such that @xmath251 . on the other hand @xmath252",
    ", so the set of literals satisfying @xmath253 : a(s)\\cap -\\delta^0\\neq\\emptyset$ ] is the set of literals not appearing as the consequent in a strict rule in @xmath0 .",
    "moreover the definition of relative complement gives us @xmath254 therefore @xmath255 , and by the monotonicity of @xmath224 , @xmath256 .",
    "let us assume that the property holds up to @xmath231 and @xmath257 .",
    "this implies 1 ) @xmath249 and 2 ) @xmath258\\exists    q\\in a(r)$ ] such that @xmath259 . by inductive hypothesis , for some @xmath260 @xmath261 and",
    "so @xmath262 , thus @xmath263 and therefore by the monotonicity of @xmath224 it is in @xmath264 .",
    "as we have seen @xmath265 , thus , vacuously , we have a single line proof of @xmath42 .",
    "let us assume that the property holds up to @xmath231 , and let us suppose that @xmath266 , but @xmath267 .",
    "this implies that @xmath104 and @xmath105 :    a(r)\\cap-\\delta^n\\neq\\emptyset$ ] .",
    "this means that @xmath268 $ ] @xmath269 such that @xmath270 .",
    "let @xmath271 be a derivation of @xmath57 , and @xmath272 be the concatenation of the proofs of such @xmath57s .",
    "we append @xmath42 at the end and we obtain a proof of @xmath42 , thus @xmath273",
    ".    @xmath30 the tags @xmath59 and @xmath71 , as well as the corresponding sets of literals , depend on each other , so we will carry out the proofs simultaneously .",
    "moreover , since the tags @xmath49 and @xmath53 ( and the sets of literal corresponding to them ) are independent from @xmath59 and @xmath71 and we have already proved the theorem for them we assume , without any loss of generality , that derivations in defeasible logic consist only of defeasible tagged literals .",
    "@xmath274 this is possible if 1 ) @xmath230 , or 2 ) @xmath275 and @xmath62 $ ] such that @xmath227 and there are no rules for @xmath127 . for 1 ) by the definition of @xmath224 there exists an @xmath231 such that @xmath276 , then @xmath277 ; by the monotonicity of @xmath224 @xmath278 . for 2 ) we have that @xmath26 is included in every @xmath203 , and the condition beginning with @xmath279 $ ] is vacuously satisfied since @xmath280=\\emptyset$ ] .",
    "let @xmath281 be the minimal set in the kleene sequence generated by @xmath224 such that @xmath282 .",
    "then we can conclude that @xmath283 ; therefore @xmath278 .",
    "@xmath284 first of all , let us consider the following decomposition of @xmath206 @xmath285 where @xmath286,a(r)\\cap -\\partial^n \\neq\\emptyset\\}\\\\    -\\partial^{n+1}_{\\delta } & = \\{p\\in-\\delta^n|{\\mathnormal{\\sim}}p\\in + \\delta^n\\}\\\\    -\\partial^{n+1 } _ { > } & = \\{p\\in -\\delta^n|\\forall r\\in r_{sd}[p ]     \\begin{array}[t]{l }      \\exists s\\in r[{\\mathnormal{\\sim}}p ] : a(s)\\subseteq",
    "+ \\partial^n \\text { and}\\\\      \\forall t\\in r_{sd}[p ] : \\text { either } a(t)\\cap        -\\partial^n\\neq\\emptyset \\text { or } t\\not > s\\ }    \\end{array}\\end{aligned}\\ ] ] now @xmath284 is possible if @xmath287 and either    1 .",
    "@xmath288 or 2 .",
    "@xmath289=\\emptyset$ ] or 3 .",
    "@xmath118 : a(s)=\\emptyset$ ] and @xmath290 : t > s$ ]    from the previous cases we have @xmath291 and for 1 ) @xmath292 .",
    "let @xmath231 be the minimum number of iterations of @xmath224 such that both @xmath293 and @xmath276 ; then by construction @xmath277 .",
    "for 2 ) we obtain that @xmath294 and @xmath295 since the conditions are vacuously satisfied .",
    "finally 3 ) implies that @xmath296 for any @xmath231 and @xmath152 , t\\not > s$ ] ; thus @xmath297 for some @xmath231 such that @xmath298 .",
    "@xmath299 let us assume that the inductive hypothesis holds for derivations of length up to @xmath231 .",
    "we only show the cases different from the inductive base .",
    "this means that we have cases corresponding to clause 2 ) of the proof conditions for @xmath59 . from the inductive hypothesis we have @xmath300 for some @xmath301 $ ] ( clause 2.2 ) ,",
    "@xmath302 $ ] either @xmath303 ( clause 2.3.1 ) or @xmath304 : t > s$ ] and @xmath305 ( clause 2.3.2 ) . by the monotonicity of @xmath224",
    "we get that a minimum @xmath231 such that @xmath203 and @xmath306 that satisfy the above condition exists .",
    "therefore @xmath277 and consequently @xmath307 .",
    "@xmath308 here we have 1 ) @xmath291 , and either 2 ) @xmath309 or 3 ) the clause 2.1 of the proof condition for @xmath71 is not vacuously satisfied : in such a case @xmath116 $ ] :    1 .",
    "@xmath310 such that @xmath311 ; by inductive hypothesis @xmath312 , so for some @xmath180 , @xmath313 .",
    "2 .   @xmath118 $ ] such that * @xmath314 ; by inductive hypothesis each @xmath315 , therefore for some @xmath180 , @xmath316 ; or * @xmath152 $ ] either @xmath121 , or @xmath317 such that @xmath311 . by inductive hypothesis @xmath318 , then , for some @xmath180 @xmath319 .",
    "also in this case it is immediate to see that each condition has been reduced to the correspondent condition required for the construction of @xmath320 , therefore , for the smallest @xmath180 satisfying the above three conditions we can conclude @xmath321 , and , by the monotonicity of @xmath224 , @xmath322 .    @xmath323 if @xmath323 because it is in @xmath324 , then we have that @xmath288 .",
    "let @xmath47 be a proof of @xmath41 ; we append @xmath43 at the end of @xmath47 obtaining a proof of @xmath43 .    for the other case we have @xmath325 : a(r)=\\emptyset \\text { and } \\forall",
    "s\\in r[{\\mathnormal{\\sim}}q]\\ \\exists t\\in r[q ] : a(t)=\\emptyset , t > s\\ ] ] in this case it is easy to verify that @xmath43 is a single line proof for @xmath6 .",
    "@xmath326 here we have that @xmath291 and the following three cases :    1 .",
    "@xmath327 2 .",
    "@xmath328=\\emptyset$ ] 3 .",
    "@xmath329 : a(r)=\\emptyset$ ] and @xmath152 ,    t\\not > r$ ]    in the first case , we have already proved that @xmath330 and @xmath331 .",
    "so let @xmath47 the concatenation of the proofs of @xmath41 and @xmath42 .",
    "we append @xmath5 at the end of @xmath47 and we obtain a derivation of @xmath5 . for 2 )",
    "the sequence @xmath332 is vacuously a derivation of @xmath5 , and for 3 ) the concatenation of a proof of @xmath42 and @xmath333 satisfies condition 3 of the definition of @xmath71 .",
    "we assume that the theorem holds up to @xmath203 and @xmath306 .",
    "furthermore it is worth noting that the construction of derivation of defeasible literals in defeasible logic and the construction of the corresponding sets of literals are invertible , i.e. , each time the top - down ( procedural ) condition requires something to be provable , the bottom - up ( set - theoretic ) condition satisfies an appropriate set - theoretic condition .",
    "but we have seen that , granted the inductive hypothesis the proof - theoretic condition and the set - theoretic one coincide .",
    "@xmath277 the difference with the inductive base is that now we replace @xmath227 , @xmath334 with @xmath199 , @xmath202 , and @xmath335 . by the inductive hypothesis we have @xmath336 , @xmath337 , and @xmath338 .",
    "let @xmath47 be a concatenation of the derivations of the just mentioned tagged literals .",
    "we append @xmath43 at the end of @xmath47 and we obtain a derivation of @xmath43 .",
    "@xmath339 first of all we can use an argument similar to the previous case . here",
    "the main difference with the inductive base is that we have to consider that the set of supportive rules for @xmath6 is not empty and we have to consider the case where @xmath74 , a(r)\\cap    -\\partial^n\\neq \\emptyset$ ] . by inductive hypothesis",
    "we have that @xmath74\\exists a_r\\in a(r ) : d\\vdash -\\partial a_r$ ] . at this stage",
    "we can concatenate the derivations of such @xmath340s with the other required derivations and we append @xmath5 at the end . again",
    "we can verify that the resulting sequence is a proof for @xmath5 .",
    "the restriction of theorem [ butd ] to finite propositional theories derives from the formulation of the proof theory ; proofs are guaranteed to be finite under this restriction .",
    "defeasible logic has a constructive proof theory that guarantees the explainability of conclusions ( i.e. , for every conclusion we derive , it is possible to provide a full proof with justification of the essential steps ) .",
    "in addition the proof theory defines the classical defeasible logic of @xcite and @xcite .    on the other hand ,",
    "the bottom - up semantics does not need this restriction , and so can be used in conjunction with predicate defeasible logic rules that represent infinitely many propositional rules .",
    "this also means that under this characterisation defeasible logic can be supplemented with function symbols . in the following",
    "we will take advantage of this opportunity and provide a more elegant and general characterisation under the kunen semantics ( section 3.2 and 5.3 ) , while in the remaining sections we stick to the original definition .",
    "now that we have presented defeasible logic and have developed the technical properties that will be needed later on , we turn to the theme of this paper : establish formal connections between defeasible logic and logic programming semantics .",
    "this section presents the basics of the semantics that will be used in subsequent sections    a _ logic program _",
    "@xmath47 is a finite set of program clauses .",
    "a _ program clause _",
    "@xmath20 has the form @xmath341 where @xmath342 are positive literals .",
    "a program clause with variables is considered to represent the set of its ground instances .    in this paper",
    "we will make use of two well - known logic programming semantics : stable model semantics @xcite and kunen semantics @xcite . in the following",
    "we present them briefly for the sake of completeness .",
    "let @xmath343 be a subset of the herbrand base .",
    "we call a ground program clause @xmath344 _ irrelevant w.r.t",
    ".  @xmath343 _ if at least one @xmath345 is included in @xmath343 . given a logic program @xmath47",
    ", @xmath346 is the set of ground instances of the logic program @xmath47 , and we define the _ reduct of @xmath47 w.r.t .",
    "@xmath343 _ , denoted by @xmath347 , to be the logic program obtained from @xmath346 by    1 .   removing all clauses that are irrelevant w.r.t .",
    "@xmath343 , and 2 .   removing all premises",
    "@xmath348 from all remaining program clauses .",
    "note that the reduct @xmath347 is a definite logic program , and we are no longer faced with the problem of assigning semantics to negation , but can use the least herbrand model instead .",
    "@xmath343 is a _ stable model _ of @xmath47 iff @xmath349 , where @xmath350 is the least herbrand model of the reduct of @xmath47 .",
    "kunen semantics @xcite is a 3-valued semantics for logic programs .",
    "a _ partial interpretation _ is a mapping from ground atoms to one of the three truth values * t * , * f * and * u * , which denote true , false and unknown , respectively .",
    "this mapping can be extended to arbitrary formulas using kleene s 3-valued logic .",
    "kleene s truth tables can be summarized as follows .",
    "if @xmath351 is a boolean combination of atoms with truth value one of * t * , * f * and * u * , its truth value is * t * iff all possible ways of putting * t * or * f * for the various * u*-values lead to a value * t * being computed in ordinary ( 2-valued ) logic ; @xmath351 gets the value * f * iff @xmath352 gets the value * t * ; and @xmath351 gets the value * u * otherwise .",
    "these truth values can be extended in the obvious way to predicate logic , thinking of the quantifiers as infinite conjunctions or disjunctions .",
    "the kunen semantics of a program @xmath47 is obtained from a sequence @xmath353 of partial interpretations , defined as follows :    1 .",
    "@xmath354 * u * for every atom @xmath57 .",
    "2 .   @xmath355 * t * iff there is a program clause @xmath356 and a ground substitution @xmath357 such that @xmath358 and that @xmath359 3 .",
    "@xmath355 * f * iff for all clauses @xmath356 in the program , and all ground substitutions @xmath357 , if @xmath360 then @xmath361 4 .",
    "@xmath355 * u * if neither 2 . nor 3 . applies .",
    "we shall say that the kunen semantics of @xmath47 supports a formula @xmath351 , written @xmath362 , iff there is an interpretation @xmath363 , for some finite @xmath231 , such that @xmath364 * t*.",
    "in this section we describe a meta - program @xmath365 in a logic programming form that expresses the essence of the defeasible reasoning embedded in defeasible logic first introduced in @xcite .",
    "@xmath365consists of the following clauses .",
    "we first introduce the predicates defining classes of rules , namely    @xmath366:- + @xmath367 .",
    "+   + @xmath366:- + @xmath368 .",
    "@xmath369:- + @xmath366 .",
    "+   + @xmath369:- + @xmath370 .",
    "next we introduce the clauses defining the predicates corresponding to @xmath371 , @xmath372 , @xmath373 , and @xmath374 .",
    "these clauses specify the structure of defeasible reasoning in defeasible logic .",
    "arguably they convey the conceptual simplicity of defeasible logic more clearly than the proof theory .",
    "[ strictly1 ] @xmath375:- + @xmath376 .",
    "[ strictly2 ] @xmath375:- + @xmath377)$ ] , + @xmath378,  ,@xmath379 .",
    "[ defeasibly1 ] @xmath380:- + @xmath375 .",
    "[ defeasibly2 ] @xmath380:- + @xmath381 , + @xmath382)$ ] , + @xmath383,  ,@xmath384 , + @xmath385 .    [ overruled ] @xmath386:- + @xmath387)$ ] , + @xmath388,  ,@xmath389 , + @xmath390 .    [ defeated ] @xmath391:- + @xmath392 , + @xmath393)$ ] , + @xmath394,  ,@xmath395 .",
    "the first two clauses address definite provability , while the remainder address defeasible provability . the clauses",
    "specify if and how a rule can be overridden by another , and which rules can be used to defeat an overriding rule , among other aspects of the structure of defeasible reasoning in defeasible logic .",
    "we have permitted ourselves some syntactic flexibility in presenting the meta - program .",
    "however , there is no technical difficulty in using conventional logic programming syntax to represent this program .    finally , for a defeasible theory @xmath44 , we add facts according to the following guidelines :    1 .   @xmath396 . for each @xmath179 2 .",
    "@xmath397)$ ] . for each rule @xmath398 3 .",
    "@xmath399)$ ] . for each rule",
    "@xmath400 4 .",
    "@xmath401)$ ] . for each rule",
    "@xmath402 5 .   @xmath403 . for each pair of rules such that @xmath404",
    "we establish relationships between @xmath0 and its translation @xmath365 . to do",
    "so we must select appropriate logic program semantics to interpret @xmath405 in clauses [ defeasibly2 ] and [ overruled ] .",
    "first we consider stable model semantics .",
    "the aim of this section is twofold . on one hand it established a relationship between defeasible logic and stable semantics .",
    "this connection is obtained via the representation of the meta - program for defeasible logic as a default theory . in this way we are able to use the well - know and well - understood link between stable semantics and default logic to simplify the proofs of our results and , at the same time",
    ", it opens the way to investigations on the similarities and differences over the two non - monotonic formalisms .",
    "furthermore it will enable further studies on relationships between semantics for default logic and defeasible logic .",
    "to this end we briefly rehearse the basic definitions of default logic .",
    "a _ default _ @xmath406 has the form @xmath407 with closed formulas @xmath408 @xmath409,@xmath410 @xmath411 .",
    "@xmath351 is the _ prerequisite _",
    "@xmath412 , @xmath413 the _ justifications _",
    "@xmath414 , and @xmath411 the _ consequent _ @xmath415 of @xmath406 .    a _ default theory _",
    "@xmath416 is a pair @xmath417 consisting of a set of formulas @xmath129 and a countable set @xmath418 of defaults .",
    "let @xmath419 be a default , and @xmath420 a deductively closed set of formulas .",
    "we say that @xmath406 _ is applicable to _ @xmath420 iff @xmath421 , and @xmath422 .",
    "let @xmath423 be a finite or infinite sequence of defaults from @xmath418 without multiple occurrences ( modelling an application order of defaults from @xmath418 ) .",
    "we denote by @xmath424 $ ] the initial segment of @xmath425 of length @xmath426 , provided the length of @xmath425 is at least @xmath426 .    *",
    "@xmath427 occurs in @xmath428 , where @xmath429 denotes the deductive closure . *",
    "@xmath430 occurs in @xmath431 .",
    "@xmath425 is called a _ process of _ @xmath416 iff @xmath432 is applicable to @xmath433)$ ] , for every @xmath426 such that @xmath432 occurs in @xmath425 .",
    "@xmath425 is _ successful _",
    "iff @xmath434 , otherwise it is _",
    "@xmath425 is _ closed _ iff every default that is applicable to @xmath435 already occurs in @xmath425",
    ".    showed that reiter s @xcite original definition of extensions is equivalent to the following one : a set of formulas @xmath420 is an _ extension _ of a default theory @xmath416 iff there is a closed and successful process @xmath425 of @xmath416 such that @xmath436 .",
    "the default logic interpretation of a ground program clause @xmath437    @xmath438 is given by the default    @xmath439 we define @xmath440 , the _ default logic interpretation _ of the logic program @xmath47 , to be the default theory @xmath441 with @xmath442 and @xmath443 .",
    "let @xmath47 be a logic program , and @xmath343 a subset of the herbrand base .",
    "@xmath343 is a stable model of @xmath47 iff @xmath444 is an extension of @xmath440 .",
    "according to the previous section , the meta - program of section 4 can be equivalently viewed as the following default theory @xmath445 .",
    "the predicate logic part @xmath446 contains :    1 .",
    "@xmath447 for each @xmath179 2 .",
    "@xmath397)$ ] . for each rule @xmath398 3 .",
    "@xmath399)$ ] . for each rule",
    "@xmath400 4 .",
    "@xmath401)$ ] . for each rule",
    "@xmath402 5 .   @xmath403 . for each pair of rules such that @xmath404    and the following defaults ( actually default schemas ) are elements of @xmath448 : + @xmath449 + @xmath450)\\wedge { \\mathop{\\mathtt{definitely}}}(y_1)\\wedge\\ldots\\wedge { \\mathop{\\mathtt{definitely}}}(y_n ) : \\over { \\mathop{\\mathtt{definitely}}}(x)}$ ] + @xmath451 + @xmath452)\\wedge { \\mathop{\\mathtt{defeasibly}}}(y_1)\\wedge\\ldots\\wedge { \\mathop{\\mathtt{defeasibly}}}(y_n):\\qquad\\qquad}\\\\ \\scriptstyle\\neg { \\mathop{\\mathtt{definitely}}}({\\mathnormal{\\sim}}x ) , \\neg { \\mathop{\\mathtt{overruled}}}(r , x )   \\end{array } } \\over { \\mathop{\\mathtt{defeasibly}}}(x)}$ ] + @xmath453)\\wedge { \\mathop{\\mathtt{defeasibly}}}(u_1)\\wedge\\ldots\\wedge { \\mathop{\\mathtt{defeasibly}}}(u_n):\\neg { \\mathop{\\mathtt{defeated}}}(s,{\\mathnormal{\\sim}}x ) \\over { \\mathop{\\mathtt{overruled}}}(r , x)}$ ] + @xmath454)\\wedge { \\mathop{\\mathtt{defeasibly}}}(v_1)\\wedge\\ldots\\wedge { \\mathop{\\mathtt{defeasibly}}}(v_n ) : \\over { \\mathop{\\mathtt{defeated}}}(s , x)}$ ] + @xmath455 + @xmath456 + @xmath457 + @xmath458 + now let us prove a technical result on this default theory .",
    "it provides a condition on @xmath0 under which @xmath459 has at least one extension .",
    "let @xmath0 be a decisive defeasible theory .",
    "then @xmath459 has at least one extension .    if the atom dependency graph of @xmath0 is acyclic we can define an arbitrary total order @xmath460 on atoms which respects the dependency graph .",
    "we proceed to construct a closed and successful process @xmath425 as follows :    1 .",
    "first apply instantiations of @xmath461 and @xmath462 in any order .",
    "these defaults have no justification , so success can not be jeopardized .",
    "2 .   then proceed to prove @xmath463 or @xmath464 using the remaining defaults , in the order of @xmath460 .",
    "3 .   for each atom @xmath2 , try to apply first defaults @xmath465 , then @xmath466 , then @xmath467 and finally @xmath468 .",
    "if the defaults can be applied in this order only , the process @xmath425 can not fail .",
    "@xmath425 is closed when we have carried out step 3 for all atoms @xmath2 .",
    "the question is whether the order specified in 3 can always be respected .",
    "this is the case because @xmath469 , @xmath470 and @xmath471 use atoms appearing before @xmath472 in the total order .",
    "the argument in more detail : we analyze the situation where an instantiation of @xmath468 with @xmath2 has impact on an earlier application of @xmath467 with instantiation @xmath23 .",
    "suppose @xmath463 is derived using default @xmath468 at stage @xmath426 , and suppose it is then used to prove @xmath473 later in the process @xmath425 , where @xmath474 was derived in @xmath425 at a stage @xmath475 .",
    "but then @xmath2 occurs in the body of a rule with head predicate @xmath6 , so @xmath6 depends on @xmath2 , so it must appear _ after _",
    "@xmath2 in @xmath460 .",
    "so , according to 2 above , @xmath468 with instantiation @xmath6 can not have been applied before @xmath468 with instantiation @xmath2 , so we have a contradiction .",
    "a similar argument applies to the interplay between defaults @xmath467 and @xmath466 .    in general",
    ", @xmath459 may not have any extension if the condition of the lemma is not satisfied .",
    "for example consider @xmath0 consisting of the rules :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath476    @xmath477    @xmath478 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    let us now analyze the application of defaults in @xmath459 .",
    "because of @xmath37 we derive immediately @xmath479 using @xmath467 with instantiation @xmath480 for @xmath32 and @xmath37 for @xmath188 .",
    "@xmath37 can not be defeated using @xmath466 because there is no stronger rule .",
    "no interaction with other defaults can prevent this application of @xmath467 , so it can appear at the beginning of any process , without loss of generality .    then we can apply @xmath468 to derive @xmath463 , assuming @xmath481 .",
    "now that @xmath463 is derived , we can apply @xmath468 to derive @xmath474 , assuming @xmath482 .",
    "we apply @xmath467 with instantiation @xmath480 for @xmath188 and @xmath37 for @xmath32 to derive @xmath483 .",
    "this contradicts the previous assumption @xmath9 , so the process is failed .",
    "there is no way any defaults along the process above can be blocked by applying another default instead .",
    "so there can be no extension .",
    "we are now able to prove the main results , namely the relationships between defeasible logic and the stable semantics interpretation of the meta - program describing provability in defeasible logic .",
    "[ stable - definitely ]    * if @xmath90 then @xmath484 is included in all stable models of @xmath365 . *",
    "if @xmath131 then @xmath484 is not included in any stable model of @xmath365 .",
    "* if @xmath0 is decisive then the implications ( a ) and ( b ) are also true in the opposite direction .",
    "( a ) : proof by induction on the length of derivations @xmath47 in @xmath0 .",
    "let the claim hold for @xmath46 , and let @xmath485 .",
    "let @xmath420 be an extension of @xmath459 , and @xmath436 for a closed and successful process @xmath425 of @xmath459 .",
    "_ case 1 _ : @xmath179",
    ". then @xmath486 . since @xmath461 is applicable to @xmath435 and @xmath425",
    "is closed , we conclude @xmath487 .    _ case 2 _ : there is @xmath488 $ ] such that @xmath489 for all @xmath490 . since @xmath488",
    "$ ] we have @xmath491 ) \\in def(d)$ ] .",
    "since @xmath492 , for all @xmath493 , we conclude with induction hypothesis that @xmath494 .",
    "thus @xmath462 is applicable to @xmath435 .",
    "@xmath425 is closed so @xmath495 .",
    "( b ) : the proof goes by induction on the length of derivations @xmath47 in @xmath0 .",
    "let the claim hold for @xmath46 and let @xmath496 .",
    "further let @xmath420 be an extension of @xmath459 .",
    "then @xmath436 for a closed and successful process @xmath425 of @xmath459 .",
    "by the inference condition @xmath497 we know @xmath498 , thus @xmath499 .",
    "@xmath9    also we know @xmath258 \\exists a\\in",
    "a(r ) : -\\delta a\\in",
    "p(1 .. i)$ ] . by induction hypothesis",
    "we conclude    @xmath500 \\exists a\\in",
    "a(r ) : { \\mathop{\\mathtt{definitely}}}(a ) \\not\\in in(\\pi)\\tag{**}\\ ] ] @xmath9 and @xmath501 show that neither @xmath461 nor @xmath462 can be used to derive @xmath484 in @xmath425 .",
    "but these are , by construction of @xmath459 , the only possibilities .",
    "thus @xmath502 .    (",
    "c ) : let @xmath503 for an extension @xmath420 of @xmath459 .",
    "such an extension exists because @xmath0 is decisive .",
    "then , by part ( b ) we conclude @xmath504 .",
    "therefore @xmath90 because @xmath0 is decisive .",
    "thus the opposite of ( a ) holds .",
    "the opposite of ( b ) is shown in an analogous way .",
    "consider @xmath505 . as we have shown in section a.3",
    ", @xmath459 has no extension , so @xmath484 is included in all extensions of @xmath459 .",
    "however @xmath506 .",
    "thus the opposite of ( a ) does not hold , in general .",
    "consider the theory @xmath0 consisting only of the strict rule @xmath507 .",
    "@xmath459 has only one extension , @xmath508 , and @xmath509 .",
    "however @xmath504 .",
    "this shows that the opposite of ( b ) is not true , in general .",
    "[ stable - defeasibly ]    * if @xmath88 then @xmath463 is included in all stable models of @xmath365 . * if @xmath132 then @xmath463 is not included in any stable model of @xmath365 . * if @xmath0 is decisive then the implications ( a ) and ( b ) are also true in the opposite direction .    ( c )",
    ": let @xmath510 for an extension @xmath420 of @xmath459 .",
    "such an extension exists because @xmath0 is decisive .",
    "then , by part ( b ) we conclude @xmath511 .",
    "therefore @xmath512 because @xmath0 is decisive .",
    "thus the opposite of ( a ) holds .",
    "the opposite of ( b ) is shown in an analogous way .",
    "let @xmath0 consist of the rules : @xmath513 , @xmath514 and @xmath515 .",
    "then @xmath516 is included in the only extension of @xmath459 but @xmath517 .",
    "this shows that the opposite of ( a ) is not necessarily true if @xmath0 is not decisive .",
    "a counterexample for the opposite direction of ( b ) is the defeasible theory consisting only of the rule @xmath513 .",
    "@xmath463 is not included in the only extension of @xmath459 , however @xmath134 can not be derived from @xmath0 .",
    "parts ( a ) and ( b ) are shown concurrently by induction on the length of a derivation @xmath47 in @xmath0 .",
    "suppose ( a ) and ( b ) hold for @xmath46 ( induction hypothesis ) .",
    "consider an extension @xmath420 of @xmath459 , and let @xmath436 for a closed and successful process @xmath425 of @xmath459 .    :",
    "@xmath518 . by the inference condition @xmath519",
    "there are two cases .",
    "the first case is that @xmath520 . by theorem 5.2 , @xmath521 .",
    "then the default @xmath465 ( with instantiation @xmath2 for @xmath472 ) is applicable to @xmath435 .",
    "since @xmath425 is closed we conclude @xmath522 .",
    "the second case is as follows :    78901234567890123456= ( 1 ) @xmath523\\ \\forall a \\in a(r ) : + \\partial a\\in p(1 .. i)$ ] and + ( 2 ) @xmath63 and + ( 3 ) @xmath64 $ ] either + ( 3.1 ) @xmath65 or + ( 3.2 ) @xmath66 $ ] such that + @xmath67 and @xmath68    from ( 2 ) we conclude @xmath524 using theorem a.2 . from ( 1 ) we get @xmath525 ) \\in w(d ) \\tag{**}\\ ] ] from ( 1 ) and induction hypothesis we get @xmath526 in the following we show that @xmath527 .",
    "together with @xmath9-@xmath528 it shows that the default @xmath468 ( with instantiation @xmath2 for @xmath472 ) is applicable to @xmath435 .",
    "since @xmath425 is closed we get @xmath529 .",
    "consider @xmath530 $ ] . in case",
    "( 3.1 ) holds we have @xmath531 for an @xmath532 . by induction hypothesis",
    "we conclude @xmath533 .",
    "thus default @xmath467 can not be applied with @xmath69 instantiated for @xmath188 .    in case",
    "( 3.2 ) holds , it is easily seen that default @xmath466 can be used for the derivation of @xmath534 .",
    "thus @xmath535 , and @xmath467 can not be applied with @xmath69 instantiated for @xmath188 .",
    "overall we have shown that @xmath467 fails to derive @xmath536 .",
    ": let @xmath537 . from the @xmath538 inference condition",
    "we know @xmath539 .",
    "therefore , by theorem a.2 , @xmath540 .",
    "thus default @xmath465 can not be used to derive @xmath463 in @xmath425 .",
    "next we show that @xmath468 can not be used , either , to derive @xmath463 in @xmath425 .",
    "then @xmath541 , and we are finished . by the @xmath538 inference condition",
    "there are three cases .",
    "_ case 1 _ : @xmath116 \\exists a\\in a(r ) : -\\partial a \\in p(1 .. i)$ ] .",
    "by induction hypothesis we conclude that for every strict or defeasible rule with head @xmath2 there is at least one antecedent @xmath57 such that @xmath542 .",
    "therefore , for every possible instantiation of @xmath32 in default @xmath468 the prerequisite of @xmath468 is not in @xmath435 .",
    "thus @xmath468 can not be used to derive @xmath463 in @xmath425 .",
    "_ case 2 _ : @xmath543 .",
    "then no instantiation of @xmath468 where the consequent is @xmath463 can be applied since @xmath544 , by theorem a.2 ( and because @xmath425 is successful ) .    _ case 3 _ : there is @xmath530 $ ] such that :    1 .",
    "@xmath545 and 2 .",
    "@xmath546 : t\\not > s$ ] or @xmath547    from ( 1 ) together with induction hypothesis we get : @xmath548 ) \\wedge { \\mathop{\\mathtt{defeasibly}}}(u_1 ) \\wedge \\ldots\\wedge { \\mathop{\\mathtt{defeasibly}}}(u_n ) \\in in(\\pi ) \\tag{*}\\ ] ] let @xmath549 $ ] .",
    "_ case 3.1 _ : @xmath550 .",
    "then @xmath551 .",
    "so , @xmath466 with instantiation @xmath70 for @xmath416 can not be used to derive @xmath534 in @xmath425 .",
    "_ case 3.2 _ : @xmath552 .",
    "then , by inductive hypothesis , we have @xmath542 .",
    "again , @xmath466 with instantiation @xmath70 for @xmath416 can not be used to derive @xmath534 in @xmath425 .",
    "overall we have shown : @xmath553 from @xmath9 and @xmath501 we get that @xmath467 with instantiation @xmath69 for @xmath188 and @xmath20 for @xmath32 can be applied to @xmath435 .",
    "since @xmath425 is closed , we conclude @xmath554 .",
    "since @xmath20 was chosen arbitrarily , the default @xmath468 can not be used to prove @xmath463 in @xmath425 , thus @xmath555 .",
    "the above two theorems show that if @xmath0 is decisive , then the stable model semantics of @xmath365corresponds to the provability in defeasible logic",
    ". however part ( c ) is not true in the general case , as the following example shows .",
    "consider the defeasible theory    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath556    @xmath557 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    in defeasible logic , @xmath137 can not be proven because we can not derive @xmath558 .",
    "however , @xmath464 is a sceptical conclusion of @xmath365under stable model semantics because it is included in the only stable model of @xmath365 .",
    "if we wish to have an equivalence result without the condition of decisiveness , then we must use a different logic programming semantics , namely kunen semantics .",
    "the domain of our interpretation is given by the set of the rule - names and the set of literals occurring in a defeasible theory @xmath0 .",
    "* @xmath559 iff 1 .",
    "@xmath560 and @xmath179 ; 2 .",
    "@xmath561)$ ] and @xmath398 ; 3 .",
    "@xmath562)$ ] and @xmath400 ; 4 .",
    "@xmath563)$ ] and @xmath402 ; 5 .",
    "@xmath564 and @xmath565 . * @xmath566 iff 1 .",
    "@xmath560 and @xmath249 ; 2 .",
    "@xmath561)$ ] and @xmath567 ; 3 .",
    "@xmath562)$ ] and @xmath568 ; 4 .",
    "@xmath563)$ ] and @xmath569 ; 5 .",
    "@xmath564 and @xmath570 . * @xmath571 otherwise .",
    "the intuition behind this interpretation is that the predicates correspond to the elements of @xmath0 .",
    "it is immediate to see that @xmath572))= \\begin{cases }     \\mathbf{t } & r_i\\in r_{sd}[p]\\text { and } { \\ensuremath{q_{1},\\dots , q_{l}}\\xspace}=a(r_i)\\\\     \\mathbf{f } & \\text{otherwise } \\end{cases}\\ ] ] similarly @xmath573))= \\begin{cases }    \\mathbf{t } & r\\in r[p]\\text { and } { \\ensuremath{q_{1},\\dots , q_{l}}\\xspace}=a(r_i)\\\\    \\textbf{f } & \\text{otherwise } \\end{cases}\\ ] ]    [ kunen ]    * @xmath574 .",
    "* @xmath575 .",
    "* @xmath576 . * @xmath577 .    .",
    "we prove it by induction on the construction of @xmath49 .    .",
    "@xmath578 iff @xmath179 or @xmath579 , iff @xmath580 or @xmath581))={\\mathbf{t}}$ ] , so either one of the ground instance @xmath582 of the clause  [ strictly1 ] or @xmath583)$ ] of the clause  [ strictly2 ] implies @xmath584 .    .",
    "let us assume that the property holds up to @xmath231 , and @xmath186 .",
    "this means that either    1 .",
    "@xmath179 , for which we can repeat the same argument as the inductive base ; or 2 .",
    "@xmath183 $ ] , say @xmath585 such that @xmath586 .",
    "this implies that , for some @xmath180 @xmath587))={\\mathbf{t}}\\ , \\ ] ] and , by inductive hypothesis , for each @xmath588 @xmath589 @xmath590 thus , by clause  [ strictly2 ] , @xmath591 .    .",
    "we use induction on the steps on which @xmath484 is supported .    .",
    "in this case we have @xmath592 ) \\mbox { and } \\\\",
    "\\phantom{{\\mathop{\\mathtt{definitely}}}(p ) { \\mathrel{\\mbox{\\tt:\\!-}}}{\\mathop{\\mathtt{fact}}}(p ) \\mbox { and } }        i({\\mathop{\\mathtt{strict}}}(r , p,[\\,]))={\\mathbf{t}}\\end{cases}\\ ] ] the first case amounts to @xmath179 , but @xmath593 , for any @xmath231 , therefore @xmath594 . in the second case",
    "we have a rule @xmath20 such that @xmath227 and so @xmath185 , for any @xmath231 , hence @xmath594 .    .",
    "let us assume that the property holds up to @xmath231 , and @xmath595 this is possible if there is either a ground instance of clause  [ strictly1 ] @xmath596 , for which we repeat the argument of the inductive base , or a ground instance    @xmath484:- + @xmath597)$ ] , + @xmath598 , ",
    ", @xmath599 .",
    "of clause  [ strictly2 ] such that @xmath600))={\\mathbf{t}}\\ , \\ ] ] which implies @xmath601 $ ] , and , for each @xmath602 , @xmath603 by inductive hypothesis , for some @xmath260 @xmath604 , so @xmath605 ; therefore @xmath606 ; hence @xmath607 .    .",
    "also in this case we use induction on the construction of @xmath53 .    .    if @xmath608 then    1 .",
    "@xmath249 , but @xmath249 iff @xmath609 ; this implies that all instances of [ strictly1 ] fails ; or 2 .",
    "@xmath258(a(r)\\cap-\\delta^{0}\\neq\\emptyset)$ ] . given @xmath252 ,",
    "the sentence @xmath610 is always false , therefore the condition can be satisfied only vacuously .",
    "this means @xmath611=\\emptyset$ ] , which implies @xmath612))={\\mathbf{f}}\\ , \\ ] ] from which it follows that all ground instances of [ strictly2 ] fail .    since @xmath484 fails in all the cases we conclude @xmath613 , and @xmath614 .    .",
    "let us assume that the property holds up to @xmath231 , @xmath615 , and @xmath616 .",
    "this implies that @xmath249 , so we can repeat the above argument for the first clause .",
    "if @xmath258(a(r)\\cap\\delta^{n}\\neq\\emptyset)$ ] is satisfied , we have two cases : if it is vacuously we use the argument of the inductive base , otherwise , for each rule @xmath20 , @xmath617 . from this",
    "we know that @xmath618 , and we can apply the inductive hypothesis ; thus for some @xmath180 , @xmath619 , then @xmath620 .",
    "this happens for each instance of clause [ strictly2 ] , so @xmath621 , therefore @xmath622 .    .",
    "the proof is by induction on the step on which @xmath623 is supported .    .",
    "@xmath624{l }           i({\\mathop{\\mathtt{strict}}}(r , p,[{\\ensuremath{q_{1},\\dots , q_{l}}\\xspace}]),\\\\           \\phantom{i(xxx}{\\mathop{\\mathtt{definitely}}}(q_1),\\dots,\\\\           \\phantom{i(xxx}{\\mathop{\\mathtt{definitely}}}(q_l))={\\mathbf{f}}\\end{array }       \\end{cases}\\end{aligned}\\ ] ]    \\1 ) implies @xmath249 ; for 2 ) , since @xmath625 is not a primitive predicate @xmath626 for every @xmath2 , thus @xmath612))={\\mathbf{f}}\\ ] ] for every @xmath627 ; this implies @xmath611=\\emptyset$ ] , therefore @xmath628 .    .",
    "let us assume that it holds up to @xmath231 .",
    "we can repeat the above reasoning , but we have to consider also the case where for each rule @xmath629 $ ] and some @xmath630 , @xmath631 .",
    "so @xmath632 ; by inductive hypothesis , @xmath633 , then @xmath634 .",
    "let @xmath281 be smallest set satisfying this property .",
    "by construction we have @xmath635 , hence @xmath636 .    .",
    "the inductive base is trivial since it is easy to verify that both @xmath637 and @xmath638 are empty .    .",
    "we assume that the theorem holds up to @xmath203 and @xmath306 .    .",
    "if @xmath639 because @xmath191 , then we can use the following ground instance of clause [ strictly1 ]    @xmath640    by the inductive hypothesis @xmath641 , for some appropriate @xmath180 , hence @xmath642 .    otherwise , there is a rule @xmath643 $ ] such that ( 1 ) @xmath199 and @xmath644 , and ( 2 ) for every rule @xmath530 $ ] either ( a ) @xmath335 or ( b ) there is rule @xmath549 $ ] such that @xmath202 and @xmath68 .",
    "let us consider an appropriate ground instance of clause [ defeasibly2 ] :    @xmath645)$ ] , + @xmath646 , + @xmath647 + @xmath648    by construction @xmath649))={\\mathbf{t}}$ ] , and by the inductive hypothesis and ( 1 ) , for some appropriate @xmath180 , @xmath650 ( from @xmath644 ) , @xmath651 for all @xmath652 since @xmath199 , therefore we have to show that @xmath653 this is equivalent to @xmath654 , that means that all the bodies of the appropriate ground instances of clause [ overruled ] are false in @xmath655 . by construction for all rules",
    "@xmath656 $ ] , @xmath657))={\\mathbf{t}}$ ] .",
    "thus we have to prove that either @xmath658 or @xmath659 .",
    "let us partition @xmath660 $ ] in two sets @xmath661 :    a(s)\\cap -\\partial^n=\\emptyset\\}}$ ] and @xmath662-s'$ ] . by ( 2a ) and the inductive hypothesis we have that for every @xmath663 @xmath664 for some @xmath665 . for the rules in @xmath666 , on the other hand",
    ", we have to prove that @xmath659 . @xmath667",
    "hence we need a ground instance of clause [ defeated ] evaluated as true in @xmath655 . by ( 2b ) for every rule in @xmath666 there is a rule @xmath668 $ ] such that @xmath202 and @xmath68 . by construction",
    "we obtain @xmath669))={\\mathbf{t}}\\mbox { and } i({\\mathop{\\mathtt{supportive\\_rule}}}(t , s))={\\mathbf{t}},\\ ] ] and by the inductive hypothesis , for all @xmath670 , @xmath671 .    .",
    "we have to show that @xmath672 is supported by the kunen semantics .",
    "this means that for some @xmath180 , @xmath673 , which implies @xmath674 .",
    "accordingly we have to show that for each instance of clauses [ defeasibly1 ] and [ defeasibly2 ] an element of the body is not supported by the semantics .",
    "let us examine clause [ defeasibly1 ] :    @xmath675 .",
    "but @xmath676 , therefore @xmath677 . by the inductive hypothesis , for some @xmath180 , @xmath650 and @xmath678",
    ".    for clause [ defeasibly2 ]    @xmath679 + @xmath680),$ ] + @xmath681 + @xmath647 + @xmath648",
    "let us examine the cases that imply that @xmath208 .    if @xmath682 , then , by the inductive hypothesis @xmath683 and @xmath684 .    from the basic interpretation",
    "it is obvious that we have to consider only the rules for @xmath2 , since @xmath649))={\\mathbf{t}}$ ] only if @xmath643 $ ] .",
    "let us partition @xmath685 $ ] as follows : @xmath686 , and @xmath687 .    if @xmath688 , then by the inductive hypothesis , for some @xmath689 , @xmath690 if @xmath691 , then we have to show that , for some @xmath180 , @xmath692 .",
    "this means that @xmath693 .",
    "let us examine again a relevant instance of clause [ overruled ] :    @xmath694 + @xmath695)$ ] , + @xmath696 + @xmath697 .    since @xmath698",
    ", there is a rule @xmath69 such that @xmath699 $ ] and @xmath296 . by construction @xmath657))={\\mathbf{t}}$ ] , and by the inductive hypothesis , for every @xmath700 : @xmath701 hence we have to show that @xmath702 , i.e. @xmath703 , from which we know that all appropriate substitutions of clause [ defeated ] fail .    @xmath704 + @xmath705)$ ] , + @xmath706 , + @xmath707 .    as we have seen @xmath708\\neq\\emptyset$ ] ,",
    "thus we consider two cases : i ) @xmath709 , and ii ) @xmath710 .",
    "if @xmath709 , then , by the inductive hypothesis , there exists a @xmath711 such that @xmath712 .    if @xmath710 , since @xmath208 , we have that @xmath121 , thus @xmath713 .",
    "we have proved that @xmath714 , which then imply @xmath693 .",
    "thus , in all cases , @xmath674 and @xmath673 .    .    for the inductive base we consider the literals supported by @xmath715 ; however , according to clause [ defeasibly1 ] and clause [ defeasibly2 ] , no literal @xmath463 / @xmath672",
    "is supported by @xmath715 , thus we consider only @xmath484 and @xmath716 .",
    "if @xmath484 is supported by @xmath715 we have to analyse two cases , a successful instance of clause [ strictly1 ]    @xmath717    or a successful instance of clause [ strictly2 ] with the following form :    @xmath718 ) ) .",
    "$ ]    in the first case @xmath580 and so @xmath179 and @xmath719 , for every @xmath180 . in the second case",
    "we a rule @xmath488 $ ] such that , trivially @xmath720 .",
    "hence @xmath721 .    on the other hand @xmath614 iff @xmath613 .",
    "this means that all appropriate substitution of the clauses [ strictly1 ] and [ strictly2 ] fail . from clause [ strictly1 ]",
    "we obtain @xmath609 and so @xmath249 .",
    "the only case when [ strictly2 ] fails wrt @xmath722 is when @xmath723))$ ] is false for all @xmath724 .",
    "this implies that @xmath611=\\emptyset$ ] .",
    "it is now immediate to verify that the two conditions imply that @xmath725 , and by the monotonicity of @xmath726 , @xmath727 .    .",
    "we assume that the property holds up to @xmath363 , and we only show the cases different from the inductive base .    .",
    "let us consider the following instance of clause [ strictly2 ] :    @xmath728 + @xmath597),$ ] + @xmath729    here @xmath730))={\\mathbf{t}}$ ] , and for all @xmath689 , @xmath731 . by construction",
    "@xmath488 $ ] , and by the inductive hypothesis @xmath732 .    .",
    "besides the cases of the inductive base we have to consider all ground substitutions of [ strictly2 ] where @xmath730))={\\mathbf{t}}$ ] .",
    "it follows that for some @xmath689 , @xmath733 . by the inductive hypothesis @xmath734 , hence for some @xmath180 , for all @xmath488 $ ] , @xmath735 .",
    "hence @xmath727 .    .",
    "we have to consider two cases > the first corresponds to the following clause :    @xmath640    here @xmath736 , therefore , by the inductive hypothesis @xmath607 , thus there is an @xmath180 such that @xmath181 , and consequently @xmath737 , and @xmath738 .",
    "otherwise we have    @xmath739 + @xmath740),$ ] + @xmath741 + @xmath648    where @xmath742 , @xmath743))={\\mathbf{t}}$ ] , and for all @xmath744s , @xmath745 . by construction and the inductive hypothesis @xmath746 ,",
    "@xmath125 $ ] , and @xmath300 .",
    "moreover @xmath747 , and therefore @xmath748 .",
    "this means that all substitutions of clause [ overruled ] are evaluated as false in @xmath363 .",
    "if @xmath749))={\\mathbf{f}}$ ] , then @xmath660=\\emptyset$ ] , and then trivially @xmath738 .    otherwise we consider the substitutions such that @xmath749))={\\mathbf{t}}$ ] .",
    "for such substitutions either @xmath750 or @xmath751 in the first case , by the inductive hypothesis , @xmath752 . in the second case @xmath753 .",
    "this implies @xmath754))={\\mathbf{t}}$ ] , @xmath755 for all @xmath670 , and @xmath756 .",
    "therefore , by construction and the inductive hypothesis , we obtain @xmath757 \\text { either } a(s)\\cap -\\partial_f \\neq \\emptyset \\text { or } \\exists t\\in r_{sd}[p ] : a(t)\\subseteq + \\partial_f , t > s\\ .\\ ] ] this implies that there is a suitable @xmath180 where all those conditions are satisfied and hence @xmath758 , and consequently @xmath759 .    .    the proof of this case is analogous to the previous case .",
    "indeed the proof of @xmath672 corresponds to the constructive negation of @xmath463 , and the conditions for @xmath698 are the negation of those for @xmath639 .",
    "we motivated and presented a translation of defeasible theories into logic programs , such that the defeasible conclusions of the former correspond exactly with the sceptical conclusions of the latter under the stable model semantics , if a condition of decisiveness is satisfied .",
    "if decisiveness is not satisfied , we have to use kunen semantics instead for a complete characterization .",
    "this paper closes an important gap in the theory of nonmonotonic reasoning , in that it relates defeasible logic with mainstream semantics of logic programming .",
    "this result is particularly important , since defeasible reasoning is one of the most successful nonmonotonic reasoning paradigms in applications .",
    "preliminary version of the material included in this paper appeared at aaai99 @xcite and iclp02 @xcite .",
    "national ict australia is funded by the australian government s department of communications , information technology and the arts and the australian research council through backing australia s ability and the ict centre of excellence program .            ,",
    "billington , d. , governatori , g. , and maher , m.  j. 2000 .",
    "http://eprint.uq.edu.au/archive/00002116/01/aaai2000.pdf [ a flexible framework for defeasible logics ] . in _ proc .",
    "american national conference on artificial intelligence ( aaai-2000)_. aaai / mit press , menlo park , ca , 401405 .            ,",
    "antoniou , g. , and vlahavas , i. 2004 . : a defeasible logic system for the semantic web . in _",
    "2nd workshop on principles and practice of semantic web reasoning _",
    ", h.  j. ohlbach and s.  schaffert , eds .",
    "lncs , vol .",
    "springer , berlin , 134148 .              , dumas , m. , ter hofstede , a.  h. , and oaks , p. 2001 .",
    "http://eprint.uq.edu.au/archive/00002223/01/governatori.pdf [ a formal approach to protocols and strategies for ( legal ) negotiation ] . in _ proc .",
    "8th international conference on artificial intelligence and law ( icail01)_. acm press , 168177 .",
    "http://eprint.uq.edu.au/archive/00002248/01/ai03-final.pdf [ a defeasible logic of policy - based intention ] . in",
    "ai 2003 : advances in artificial intelligence _ , t.  d. gedeon and l.  c.  c. fung , eds .",
    "lnai , vol .",
    "springer , berlin , 414426 .",
    "[ defeasible logic : agency , intention and obligation ] . in _",
    "deontic logic in computer science _ ,",
    "a.  lomuscio and d.  nute , eds .",
    "lnai , vol .",
    "springer , berlin , 114128 .    ,",
    "rotolo , a. , and sadiq , s. 2004 .",
    "[ a model of dynamic resource allocation in workflow systems ] . in _ database technology 2004 _ , k .-",
    "schewe and h.  e. williams , eds . conference research and practice of information technology , vol",
    "australian computer science association , acs , 197206 .    , rotolo , a. , and sartor , g. 2005 .",
    "http://eprint.uq.edu.au/archive/00002279/01/ic05.pdf [ temporalised normative positions in defeasible logic ] . in _ proc .",
    "10th international conference on artificial intelligence and law ( icail05)_. acm press , new york , 2534 .        ,",
    "gandhe , m.  d. , and finin , t.  w. 2002 .",
    "sweetjess : translating damlruleml to jess . in _ proc . of the international workshop on rule markup languages for business rules on the semantic web ( ruleml 2002 _ ( 14 june 2002 ) , m.  schroeder and g.  wagner , eds .",
    "ceur workshop proceedings , vol .",
    "ceur-ws.org .    ,",
    "labrou , y. , and chan , h.  y. 1999 . a declarative approach to business rules in contracts : courteous logic programs in xml . in _ proceedings of the 1st acm conference on electronic commerce ( ec99)_. acm , acm press , new york , 6877 .",
    "weetdeal : representing agent contracts with exceptions using xml rules , ontologies , and process descriptions . in _ proc .",
    "12th international conference on world wide web_. acm press , new york , 340349 .",
    "[ an algorithm for the induction of defeasible logic theories from databases ] . in _ database technology 2003 _ , k",
    "schewe and x.  zhou , eds . conference research and practice of information technology , vol .",
    "australian computer science association , acs , 7583 .",
    "a denotational semantics of defeasible logic . in _ computational logic _ , j.  w. lloyd , v.  dahl , u.  furbach , m.  kerber , k .- k .",
    "lau , c.  palamidessi , l.  m. pereira , y.  sagiv , and p.  j. stuckey , eds .",
    "lncs , vol . 1861 .",
    "springer , berlin , 209222 .",
    "a model - theoretic semantics for defeasible logic . in _ proc .",
    "iclp2002 workshop on paraconsistent computational logic _ , h.  decker , j.  villadsen , and t.  waragai , eds .",
    "datalogiske skrifter , vol .",
    "roskilde university , roskilde , denmark , 6780 .",
    "http://eprint.uq.edu.au/archive/00002124/01/aaai99.pdf [ a semantic decomposition of defeasible logic ] . in _ proc",
    "american national conference on artificial intelligence ( aaai-99)_. aaai press , menlo park , ca , 299305 ."
  ],
  "abstract_text": [
    "<S> defeasible reasoning is a simple but efficient approach to nonmonotonic reasoning that has recently attracted considerable interest and that has found various applications . </S>",
    "<S> defeasible logic and its variants are an important family of defeasible reasoning methods . </S>",
    "<S> so far no relationship has been established between defeasible logic and mainstream nonmonotonic reasoning approaches .    in this paper </S>",
    "<S> we establish close links to known semantics of logic programs . </S>",
    "<S> in particular , we give a translation of a defeasible theory @xmath0 into a meta - program @xmath1 . </S>",
    "<S> we show that under a condition of decisiveness , the defeasible consequences of @xmath0 correspond exactly to the sceptical conclusions of @xmath1 under the stable model semantics . without decisiveness , </S>",
    "<S> the result holds only in one direction ( all defeasible consequences of @xmath0 are included in all stable models of @xmath1 ) . </S>",
    "<S> if we wish a complete embedding for the general case , we need to use the kunen semantics of @xmath1 , instead .    </S>",
    "<S> defeasible logic , stable semantics , kunen semantics , non - monotonic logic . </S>"
  ]
}
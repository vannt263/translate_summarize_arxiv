{
  "article_text": [
    "let @xmath22 be the euclidean @xmath2-dimensional space endowed with the canonical symplectic form @xmath23 .",
    "any open subset of @xmath24 is also endowed with @xmath25 .",
    "simple examples are the symplectic cylinders @xmath26 ( where @xmath27 is the open disc of area @xmath1 ) , the open symplectic ellipsoids @xmath28 and the open polydiscs @xmath29 .",
    "we denote the open ball @xmath30 ( of radius @xmath31 ) by @xmath32 and the open cube @xmath33 by  @xmath34 .",
    "since @xmath27 is symplectomorphic to an open square , @xmath35 is indeed symplectomorphic to a cube",
    ".    given two open subsets @xmath36 and @xmath37 , we say that a smooth embedding @xmath38 is a _",
    "symplectic embedding _",
    "if @xmath39 preserves @xmath25 , that is , if @xmath40 . in the sequel , we will write @xmath41 for such an embedding . since symplectic embeddings are volume preserving , a necessary condition for the existence of a symplectic embedding @xmath42 is , of course , @xmath43 , where @xmath44 . for volume preserving embeddings ,",
    "this is the only condition ( see e.g.  @xcite ) . for symplectic embeddings ,",
    "however , the situation is very different , as was detected by gromov in  @xcite . among many other things",
    ", he proved    ( gromov s nonsqueezing theorem ) there exists a symplectic embedding of the ball @xmath32 into the cylinder @xmath45 if and only if @xmath46 .",
    "notice that the volume of the cylinder @xmath45 is infinite , and that for any @xmath1 the ball @xmath32 embeds by a linear volume preserving embedding into @xmath45 .",
    "similarly , we also have    there exists a symplectic embedding of the ball @xmath32 into the cube @xmath47 if and only if @xmath46 .",
    "the above results show that symplectic embeddings are much more special and in some sense `` more rigid '' than volume preserving embeddings .",
    "a next step was to understand this rigidity better .",
    "one way of doing this is to fix a domain @xmath48 of finite volume , and to try to determine for each @xmath49 the @xmath50__-th packing number _ _",
    "@xmath51 here , @xmath52 is the disjoint union of @xmath50 equal balls @xmath32 .",
    "it follows from darboux s theorem that always @xmath53 . if @xmath54 , one says that @xmath37 admits a _ full packing _ by @xmath50 balls , and",
    "if @xmath55 , one says that there is a _ packing obstruction_. again , it is known that if we would consider volume preserving embeddings instead , then all packing numbers would always be  1 .    in imporant work by gromov  @xcite , mcduff - polterovich  @xcite and biran  @xcite",
    "all the packing numbers of the @xmath2-ball @xmath56 and the @xmath2-cube @xmath57 were determined .",
    "the result for @xmath57 is    [ cols=\"^,^,^,^,^,^,^,^,^\",options=\"header \" , ]     the proof of theorem [ thm : c(a ) on [ sigma^2,7 + 1/32 ] ] ( up to corollary [ cor : c(a ) on [ 7,7 + 1/32 ] ] ) is complete.@xmath58      [ lem : sup born on d is 13]assume that there exists a class @xmath60 such that @xmath61 for some @xmath62 $ ] with @xmath63 . then @xmath64 and @xmath65 .",
    "notice first that @xmath66 for all @xmath67 .",
    "we distinguish two cases : @xmath68 and @xmath69 .",
    "if @xmath68 , then @xmath70 . assume by contradiction that @xmath71 .",
    "then by lemma [ lem : parallel blocks ] , @xmath72 and so @xmath73 .",
    "thus , @xmath74 but this contradicts lemma [ lem : sup born on d](iv ) .    to prove that @xmath65 , notice first that by lemma [ lem : sup born on d](iii ) , @xmath75 , & \\textrm{then } \\frac{\\sigma'}{v_{m}}\\leqslant\\frac{1/2}{1/3}=\\frac{3}{2},\\vphantom{{\\displaystyle \\frac{3}{2}}}\\\\ \\textrm{if } v_{m}\\in\\left[\\frac{1}{2},\\frac{2}{3}\\right ] , & \\textrm{then } \\frac{\\sigma'}{v_{m}}\\leqslant\\frac{7/8}{1/2}=\\frac{7}{4},\\vphantom{{\\displaystyle \\frac{3}{2}}}\\\\ \\textrm{if } v_{m}\\geqslant\\frac{2}{3 } , & \\textrm{then } \\frac{\\sigma}{v_{m}}\\leqslant\\frac{3}{2}.\\vphantom{{\\displaystyle \\frac{3}{2 } } } \\end{array}\\ ] ] then , since @xmath76 , we get by lemma [ lem : sup born on d](iv ) that @xmath77 thus @xmath65 .    let now @xmath69 .",
    "notice that @xmath78 and @xmath79 by lemma [ lem : sup born on d](iv ) , we have @xmath80 since the rhs is strictly smaller than @xmath81 for all @xmath82 , we see that @xmath83 .",
    "assume now by contradiction that @xmath71 . then @xmath72 . if @xmath84 , then @xmath85 which contradicts lemma [ lem : sup born on d](iv ) .",
    "if @xmath86 , then @xmath87 and so , by lemma [ lem : parallel blocks ] , @xmath88 which contradicts lemma [ lem : first properties of mu](iii ) .",
    "[ prop : c(a)=00003dsqrt(a/2 ) for a>7 + 1/32]@xmath89 for all @xmath62 $ ] .",
    "suppose by contradiction that there exists @xmath16 and @xmath60 with @xmath61 .",
    "let @xmath90 be the maximal open interval containing @xmath1 on which @xmath91 is obstructive .",
    "then , by lemma [ lem : there exists a unique a_0 center of the class ] , there exists @xmath92 with @xmath93 and @xmath94 for all @xmath95 .    using the finite list of @xmath96 in lemma [ lem : finite list of elements in e_m for m leq 7 ]",
    "we check by hand that no class in @xmath96 is obstructive for @xmath16 .",
    "thus @xmath97 and so @xmath98 .",
    "but then @xmath99 .",
    "indeed , assume by contradiction that @xmath100 .",
    "then since @xmath101 , @xmath102 will also belong to @xmath90 .",
    "but , for all @xmath1037,7\\frac{1}{32}\\right[$ ] , @xmath104 , and this contradicts the fact that @xmath94 for all @xmath95 .",
    "now by lemma [ lem : sup born on d is 13 ] , we find that @xmath65 and @xmath64 . since there are only finitely many classes satisfying these conditions , we can compute them explicitly .",
    "we find that there is only one class satisfying the conditions , namely @xmath105 , but this class is not obstructive for @xmath16 .",
    "[ cor : c(a ) on [ 7,7 + 1/32]]@xmath106 for all @xmath107 $ ] .",
    "since the class @xmath108 gives the constraint @xmath109 for all @xmath110 , we see that @xmath106 on @xmath111 $ ] because @xmath15 is nondecreasing by lemma [ lem : scaling property of c ] .",
    "we used the computer in lemma [ lem : no other obstructive classes on [ 6 + 1/8,7 ] ] to compute @xmath15 at points @xmath113 $ ] with @xmath114 . in this section",
    ", we explain the code @xmath115}$ ] which computes for a rational number @xmath1 and a natural number @xmath116 all classes @xmath91 obstructive at @xmath1 , with @xmath117 and @xmath118 .",
    "we have just adapted the program @xmath115}$ ] given in the appendix of @xcite to our case .",
    "the modules @xmath119}$ ] , @xmath120}$ ] , @xmath121}$ ] are exactly the same as in @xcite .    ` w[a _ ] : = module[{aa = a , m , i = 2 , l , u , v } , `    ` m = continuedfraction[aa ] ; `    ` l = table[1 , { j , m[[1 ] ] } ] ; `    ` { u , v } = { 1 , aa - floor[aa ] } ; `    ` while[i < = length[m ] , `    ` l = join[l , table[v , { j , m[[i ] ] } ] ] ; `    ` { u , v } = { v , u - m[[i ] ] v } ; `    ` i++ ] ; `    ` return[l ] ] `    ` p[k _ ] : = module[{kk = k , pp , t0 , i } , `    ` t0 = table[0 , { u , 1 , k } ] ; `    ` t0p = replacepart[t0 , 1 , 1 ] ; `    ` t1 = table[1 , { u , 1 , k } ] ; `    ` t1 m = replacepart[t1 , 0 , -1 ] ; `    ` pp = { t0 , t0p , t1 , t1 m } ; `    ` return[pp ] ] `    ` difference[m _ ] : = module[{v = m , vn , v1 , l , l = { } , d , pp , i , `    ` j , n } , `    ` l = length[v ] ; `    ` if[l = = 1 , `    ` l = p[v[[1 ] ] ] `    ` ; `    ` if[l > 1 , `    ` vn = v[[-1 ] ] ; `    ` v1 = delete[v , -1 ] ; `    ` d = difference[v1 ] ; `    ` pp = p[vn ] ; `    ` i = 1 ; `    ` while[i < = length[d ] , `    ` j = 1 ; `    ` while[j < = length[pp ] , `    ` n = join[d[[i ] ] , pp[[j ] ] ] ; `    ` l = append[l , n ] ; `    ` j++ ] ; `    ` i++ ] `    ` ; `    ` return[l ] ] `    the following module @xmath122}$ ] gives for a rational number @xmath1 all vectors of the form @xmath123 with @xmath117 which satisfy the diophantine equations of proposition [ prop : characterization of e_m](i ) and such that @xmath124 .",
    "the code @xmath125}$ ] does the same thing for a class of the form @xmath126 .",
    "note that both modules do not verify whether the vectors reduce to @xmath127 by repeated cremona moves .",
    "we have just adapted the code @xmath128}$ ] of @xcite , using that in our case , the volume constraint is @xmath14 instead of @xmath129 and that for a class of the form @xmath123 the diophantine equations become    m_i=4d-1 , & m_i^2=2d^2 + 1 ,    and for a class of the form @xmath126 , they become    m_i=4d-3 , & m_i^2=2d^2 - 2d+1 .    ` `    ` sol0[a _ , d _ ] : = module[{aa = a , dd = d , m , f , d , i , v , l = { } } , `    ` m = continuedfraction[aa ] ; `    ` f = floor[((2*dd)/sqrt[2*aa ] ) w[aa ] ] ; `    ` d = difference[m ] ; `    ` i = 1 ; `    ` while[i < = length[d ] , `    ` v = sort[f + d[[i ] ] , greater ] ; `    ` sv = sum[v[[j ] ] , { j , 1 , length[v ] } ] ; `    ` if[{sv , v.v } = = { 4*dd - 1 , 2*dd^2 + 1 } & & v[[-1 ] ] > 0 & & `    ` w[aa].v/(2*dd ) > = sqrt[aa/2 ] , `    ` l = append[l , v ] `    ` ; `    ` i++ ] ; `    ` return[{{dd , dd } , union[l ] } ] ] `    ` sol1[a _ , d _ ] : = module[{aa = a , dd = d , m , f , d , i , v , l = { } } , `    ` m = continuedfraction[aa ] ; `    ` f = floor[((2*dd - 1)/sqrt[2*aa ] ) w[aa ] ] ; `    ` d = difference[m ] ; `    ` i = 1 ; `    ` while[i < = length[d ] , `    ` v = sort[f + d[[i ] ] , greater ] ; `    ` sv = sum[v[[j ] ] , { j , 1 , length[v ] } ] ; `    ` if[{sv , v.v } = = { 4*dd - 3 , 2*dd^2 - 2*d + 1 } `",
    "` l = append[l , v ] `    ` ; `    ` i++ ] ; `    ` return[{{dd , dd - 1 } , union[l ] } ] ] `    finally , we collect in the code @xmath115}$ ] the vectors @xmath91 with @xmath117 that are obstructive at @xmath1 and such that @xmath118 .    ` `    ` solless[a _ , d _ ] : = module[{aa = a , dd = d , d = 1 , ld , l = { } } , `    ` while[d",
    "< = d , `    ` ld = sol0[aa , d ] ; `    ` if[length[ld[[2 ] ] ] > 0 , `    ` l = append[l , ld ] `    ` ; `    ` ld = sol1[aa , d ] ; `    ` if[length[ld[[2 ] ] ] > 0 , `    ` l = append[l , ld ] `    ` ; `    ` d++ ] ; `    ` return[l ] ] `      in lemma [ lem : no other obstructive classes on [ 6 + 1/8,7 ] ] we used the programs @xmath132}$ ] and @xmath133}$ ] which give for @xmath134 and a natural number @xmath116 , a finite list of vectors @xmath91 with @xmath118 which can potentially be obstructive at some @xmath1356\\frac{1}{k+1},6\\frac{1}{k}\\right[$ ] . by lemma [ lem : parallel blocks ] , if a class @xmath60 is obstructive at some point @xmath112 $ ] , then we have three possibilities :    1 .",
    "@xmath136 2 .",
    "@xmath137 3 .",
    "@xmath138    the code @xmath132}$ ] treats the case ( i ) while the cases ( ii ) and  ( iii ) are covered by @xmath133}$ ] .",
    "we used the codes @xmath139}$ ] and @xmath140}$ ] exactly as they were in @xcite .",
    "@xmath139}$ ] gives for @xmath141 all vectors @xmath142 which are solution of the equations    m_i = a , & m_i^2=b ,    and @xmath140}$ ] computes the sum of the entries of a vector @xmath143 .",
    "` `    ` solutions[a _ , b _ ] : = solutions[a , b , min[a , floor[sqrt[b ] ] ] ] `    ` solutions[a _ , b _ , c _ ] : = `    ` module[{a = a , b = b , c = c , i , m , k , j , v , l = { } } , `    ` if[a^2 < b , `    ` l = { } `    ` ; `    ` if[a^2 = = b , `    ` if[a > c , `    ` l = { } , `    ` l = { { a } } `    ``    ` ; `    ` if[a^2 > b , `    ` i = 1 ; `    ` m = min[floor[sqrt[b ] ] , c ] ; `    ` while[i < = m , `    ` k = solutions[a - i , b - i^2 , i ] ; `    ` j = 1 ; `    ` while[j",
    "< = length[k ] , `    ` v = prepend[k[[j ] ] , i ] ; `    ` l = append[l , v ] ; `    ` j++ `    ` ; `    ` i++ ] `    ` ; `    ` return[union[l ] ] ] `    ` sum[l _ ] : = sum[l[[j ] ] , { j , 1 , length[l ] } ] `      we have adapted the modules @xmath120}$ ] , @xmath145}$ ] from @xcite to the fact that the first six entries of @xmath142 have to be equal instead of the first seven entries as it was the case in @xcite .",
    "the module @xmath145}$ ] becomes @xmath146}$ ] where @xmath147 in the case of a class of the form @xmath123 and @xmath148 when the class is of the form @xmath126 .",
    "as before , we have adapted the code to take into account that we have another volume constraint and other diophantine equations . note",
    "that @xcite used their lemma 2.1.7 and lemma 2.1.8 which are also true in our case as stated in lemma [ lem : parallel blocks ] and lemma [ lem : parallel blocks 2 ] .    ` `    ` p[k _ ] : = module[{kk = k , pp , t0 , i } , `    ` t0 = table[0 , { i , 6 + kk } ] ; `    ` tm = replacepart[t0 , -1 , -1 ] ; `    ` tp = replacepart[t0 , 1 , 7 ] ; `    ` pp = { tm , t0 , tp } ; `    ` return[pp ] `    ` `    ` prelist[k _ , d _ , c _ ] : = `    ` module[{kk = k , dd = d , case = c , u , v , m1 , m1 , mx , mx , f , t , `    ` pp , m , mm , i = 0 , j = 0 , s = 1 , s , t , k , l , l = { } } , `    ` u = 1/(kk + 1 ) ; `    ` v = 1/kk ; `    ` m1 = round[(sqrt[2]*dd)/sqrt[6 + v ] ] ; `    ` m1 = round[(sqrt[2]*dd)/sqrt[6 + u ] ] ; `    ` mx = floor[(sqrt[2]*dd)/sqrt[6 + v ] u ] - 1 ; `    ` mx = ceiling[(sqrt[2]*dd)/sqrt[6 + u ] v ] + 1 ; `    ` f = ceiling[sqrt[kk + 2 ] - 1 ] ; `    ` t = -f ; `    ` pp = p[kk ] ; `    ` while[i < = m1 - m1 , `    ` while[j < = mx - mx , `    ` while[s",
    "< = 3 , `    ` while[t < = f , `    ` m = join[table[m1 + i , { u , 6 } ] , table[mx + j , { u , kk } ] ] ; `    ` m = m + pp[[s ] ] ; `    ` s = sum[m[[u ] ] , { u , 7 , 7 + kk - 1 } ] ; `    ` m = append[m , m[[6 ] ] - s + t ] ; `    ` t = 1 ; `    ` if[m = = sort[m , greater ] & & m[[-1 ] ] > 0 , `    ` t = 1 , t = 0 ] ; `    ` s = sum[m ] ; `    ` if[case = = 0 , `    ` a = 4*dd - 1 - s ; `    ` b = 2*dd^2 + 1 - m.m ; `    ` ; `    ` if[case = = 1 , `    ` a = 4*dd - 3 - s ; `    ` b = 2*dd*(dd - 1 ) + 1 - m.m ; `    ` ; `    ` b = 2*dd^2 + 1 - m.m ; `    ` if[min[a , b ] < 0 , `    ` t = 0 ] ; `    ` if[t = = 1 , `    ` k = solutions[a , b , m[[-1 ] ] ] ; `    ` l = 1 ; `    ` while[l < = length[k ] , `    ` mm = join[m , k[[l ] ] ] ; `    ` while[mm[[-1 ] ] = = 0 , `    ` mm = drop[mm , -1 ] ] ; `    ` l = append[l , mm ] ; `    ` l++ ] `    ` ; `    ` t++ ] ; `    ` t = -f ; `    ` s++ ] ; `    ` s = 1 ; `    ` j++ ] ; `    ` j = 0 ; `    ` i++ ] ; `    ` return[{{dd , dd - case } , union[l ] } ] ] `    as in @xcite , the module @xmath149}$ ] reduces the number of candidates given by the code @xmath146}$ ] . as before , @xmath147 in the case of a class of the form @xmath123 and @xmath148 for a class of the form @xmath126 .    ` `    ` intersol[k _ , d _ , c _ ] : = `    ` module[{kk = k , dd = d , case = c , l , m , t , k = { } ,",
    "i = 1 , l , `    ` rest } , `    ` l = prelist[kk , dd , case][[2 ] ] ; `    ` while[i < = length[l ] , `    ` m = l[[i ] ] ; `    ` l = length[m ] ; `    ` t = 1 ; `    ` if[l < = 6 + kk + 2 , t = 0 ] ; `    ` if[m[[-2 ] ] - m[[-1 ] ] > 1 , t = 0 ] ; `",
    "` > 1 , `    ` t = 0 ] ; `    ` if[kk = = 1 & & l > = 9 , `",
    "` > 1 , `    ` t = 0 ] ] ; `    ` rest = sum[m[[j ] ] , { j , 7 + kk , l } ] ; `",
    "` if[t = = 1 , k = append[k , m ] ] ; `    ` i++ ] ; `    ` return[{{dd , dd - case } , k } ] ] `    finally , we collect all the solutions for @xmath118 in the module @xmath132}$ ] .    ` `    ` intersolless1[k _ , d _ ] : = module[{kk = k , dd = d , ll = { } , q , `    ` d = 1 } , `    ` while[d",
    "< = dd , `    ` q = intersol[kk , d , 0 ] ; `    ` if[length[q[[2 ] ] ] > 0 , `    ` ll = append[ll , q ] ] ; `    ` q = intersol[kk , d , 1 ] ; `    ` if[length[q[[2 ] ] ] > 0 , `    ` ll = append[ll , q ] ] ; `    ` d++ ] ; `    ` return[ll ] ] `    ` `      the code @xmath133}$ ] gives for @xmath134 and a natural number @xmath116 , a finite list of vectors @xmath91 with @xmath118 and @xmath150 which can potentially be obstructive at some @xmath1356\\frac{1}{k+1},6\\frac{1}{k}\\right[$ ] . by lemma [ cor : an obstructive class ( d , d-1;m ) has the same blcoks ] , if a class @xmath60 with @xmath150 is obstructive at some @xmath151 , then necessarily @xmath152 .",
    "moreover , lemma  [ lem : parallel blocks ] shows that either @xmath153 or @xmath154 . notice that the first terms of the weight expansion of some @xmath1356\\frac{1}{k+1},6\\frac{1}{k}\\right[$ ] are @xmath155 .",
    "thus the vector @xmath142 is either of the form @xmath156 or of the form @xmath157 . to find the vectors @xmath142 of the form @xmath156 , we vary @xmath158 and @xmath159 as long as @xmath160 and @xmath161 and then use the code @xmath139}$ ] from @xcite to find the solutions of the equations @xmath162 the case of a solution vector @xmath142 of the form @xmath157 is then treated similarly .    ` intersolless2[kk _ , dd _ ] : = module[{k = kk , d = dd , d , m , m , `    ` sol , i , j } , `    ` for[d = 1 , d < = d , d++ , `    ` m = 1 ; `    ` while[6*m + 1 < = 4*d - 1 & & 6*m^2 + 2*m + 1 < = 2*d^2 + 1 , `    ` m = 1 ; `    ` while [ `    ` 6*m + 1 + k*m < = 4*d - 1 & & `    ` 6*m^2 + 2*m + 1 + k*m^2 < = 2*d^2 + 1 & & m < = m , `    ` sol = `    ` solutions[4*d - 1 - ( 6*m + 1 + k*m ) , `    ` 2*d^2 + 1 - ( 6*m^2 + 2*m + 1 + k*m^2 ) ] ; `    ` if [ length[sol ] > 0 , `    ` for[i = 1 , i < = length[sol ] , i++ , `    ` if[sol[[i]][[1 ] ] < = m , `    ` for[j = 1 , j < = k , j++ , `    ` sol[[i ] ] = prepend[sol[[i ] ] , m ] ; `    ` ; `    ` for[j = 1 , j < = 5 , j++ , `    ` sol[[i ] ] = prepend[sol[[i ] ] , m ] ; `    ` ; `    ` sol[[i ] ] = prepend[sol[[i ] ] , m + 1 ] ; `    ` print[{{d , d } , sol[[i ] ] } ] ; `    ``    ``    ` ; `    ` m++ ; `    ` ; `    ` m++ ; `    ` ; `    ` m = 1 ; `    ` while[6*m - 1 < = 4*d - 1 & & 6*m^2 - 2*m + 1 < = 2*d^2 + 1 , `    `",
    "m = 1 ; `    ` while [ `    ` 6*m - 1 + k*m < = 4*d - 1 & & `    ` 6*m^2 - 2*m + 1 + k*m^2 < = 2*d^2 + 1 & & m < = m , `    ` sol = `    ` solutions[4*d - 1 - ( 6*m - 1 + k*m ) , `    ` 2*d^2 + 1 - ( 6*m^2 - 2*m + 1 + k*m^2 ) ] ; `    ` if [ length[sol ] > 0 , `    ` for[i = 1 , i < = length[sol ] , i++ , `    ` if[sol[[i]][[1 ] ] < = m , `    ` for[j = 1 , j < = k , j++ , `    ` sol[[i ] ] = prepend[sol[[i ] ] , m ] ; `    ` ; `",
    "` for[j = 1 , j < = 5 , j++ , `"
  ],
  "abstract_text": [
    "<S> recently , mcduff and schlenk determined in @xcite the function @xmath0 whose value at @xmath1 is the infimum of the size of a @xmath2-ball into which the ellipsoid @xmath3 symplectically embeds ( here , @xmath4 is the ratio of the area of the large axis to that of the smaller axis of the ellipsoid ) . in this paper </S>",
    "<S> we look at embeddings into four - dimensional cubes instead , and determine the function @xmath5 whose value at @xmath1 is the infimum of the size of a @xmath2-cube @xmath6 into which the ellipsoid @xmath3 symplectically embeds ( where @xmath7 denotes the disc in @xmath8 of area @xmath9 ) . as in the case of embeddings into balls , the structure of the graph of @xmath5 is very rich : for @xmath1 less than the square  @xmath10 of the silver ratio @xmath11 , the function @xmath5 turns out to be piecewise linear , with an infinite staircase converging to @xmath12 . </S>",
    "<S> this staircase is determined by pell numbers . on the interval </S>",
    "<S> @xmath13 $ ] , the function @xmath5 coincides with the volume constraint @xmath14 except on seven disjoint intervals , where @xmath15 is piecewise linear . finally , for @xmath16 , the functions @xmath5 and @xmath14 are equal .    for the proof </S>",
    "<S> , we first translate the embedding problem @xmath17 to a certain ball packing problem of the ball @xmath18 . </S>",
    "<S> this embedding problem is then solved by adapting the method from @xcite , which finds all exceptional spheres in blow - ups of the complex projective plane that provide an embedding obstruction .    </S>",
    "<S> we also prove that the ellipsoid @xmath3 symplectically embeds into the cube @xmath19 if and only if @xmath3 symplectically embeds into the elllipsoid @xmath20 . </S>",
    "<S> our embedding function @xmath5 thus also describes the smallest dilate of @xmath21 into which @xmath3 symplectically embeds . </S>"
  ]
}
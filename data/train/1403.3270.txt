{
  "article_text": [
    "quantum communication ( qc ) is an active area of fundamental research and technology development that makes use of the quantum properties of light to transmit and receive quantum information . @xcite",
    "it enables novel capabilities like quantum teleportation or quantum key distribution that can not be provided by means of classical communication @xcite .",
    "the design of prototype qc systems is an important step towards realizing theoretical predictions and assessing experimental performance .",
    "of course , similar issues face classical communication ( cc ) systems and we may expect qc research to leverage existing methods for system prototyping . in particular , software - defined implementations have proven useful for providing flexibility in the design and testing of conventional radio systems.@xcite in this contribution , we extend the software - defined communication paradigm to the design and development of qc systems.@xcite    software - defined communication ( sdc ) allocates signal processing tasks that nominally require specialized hardware to software implementations based on general - purpose computational power.@xcite for example , within traditional radio communications , the ideal sdc receiver would use an antenna and analog - to - digital converter ( adc ) for signal sampling before handing off the remaining waveform processing tasks to software . these tasks , including mixing , filtering , and demodulation ,",
    "are then tuned by simply reprogramming the radio .",
    "reprogrammable radios promise to be cheaper to design and build than using dedicated and fixed hardware components .",
    "more important , the ability for sdc to configure itself in real time affords the opportunity to adapt to the transmission environment , i.e. , a cognitive radio.@xcite the sdc paradigm is not restricted to radios ; similar ideas have been argued for use in optical communication systems .",
    "@xcite    although much of the physics underlying quantum communication is very different from conventional communications , the sdc paradigm can apply to building qc systems as well .",
    "this is because both domains employ many of the same processing primitives at the information ( bit ) level .",
    "this includes the de / modulation and de / coding techniques required for individual transmissions in addition to the handshaking exchanges needed to negotiate complete protocols .",
    "these common needs motivate our consideration of software - defined quantum communication systems and our evaluation of its feasibility with state of the art quantum optical hardware .",
    "of course , there are notable differences between quantum communication ( qc ) and classical communication ( cc ) .",
    "these differences manifest from how information is encoded into the photonic carrier . in particular , qc encodes information into the quantum state of a photon using any number of degrees of freedom , e.g. , polarization , quadrature phase , spatial mode , angular momentum , frequency , etc . by comparison",
    ", cc uses macroscopic amounts of photons to encode the classical state of the sames degrees of freedom .",
    "this difference leads to unique capabilities for each physical domain .",
    "@xcite    notwithstanding differences at the physical layer , quantum and classical communication share a dependence on logical control data known as _",
    "both regimes require metadata to control , manage , organize and annotate the transmitted payload . in a typical cc example",
    ", metadata may be concatenated with the payload by the transmitter and then extracted by the receiver .",
    "this information may , for example , identify the demodulation needed to recover the payload or specify the destination address needed for routing .    in the case of qc , classical metadata may either be shared through a synchronized side - channel or generated by measurement of the transmitted quantum state .",
    "an example of the latter is found in quantum key distribution ( qkd ) in which the transmitter and receiver share measurement results to determine the next steps in the key generation protocol.@xcite in the qkd example , some measurements serve the role of metadata while others represent the payload .",
    "these distinctions are not known at the time of transmission but are derived using an agreed upon cc protocol . by contrast , quantum teleportation and entanglement swapping typically require a side channel through which to share the classical measurements recorded by the transmitter and needed by the receiver to recover or relay the quantum state.@xcite similar examples include the cases of quantum memory modules or quantum routers that use dynamic addresses to store @xcite and route information @xcite , respectively . moreover ,",
    "fujiwara has shown how metadata may even be encoded into the quantum state , which would move our software paradigm into a quantum computational setting .",
    "these latter examples serve to emphasize that a quantum receiver need only operate on the transmitted states and not necessarily measure them .",
    "it is also possible to process metadata within the quantum receiver hardware .",
    "this approach has been taken previously in some qkd and quantum teleportation testbeds .",
    "@xcite    the ubiquity and importance of metadata in qc motivates consideration of how the sdc paradigm may be leveraged to build prototype systems . we will show that a typical qc transceiver can be decomposed into components that separate the physical encoding layer from the metadata control layer .",
    "these layers can then be identified as separating the concerns between the hardware and software domains while a third middleware layer interpolates between these domains .",
    "we describe implementations of all three domains that maintain a natural separation of concerns while also providing a tunable interface for qc developers .",
    "in this paper , we present a framework for defining a software - defined qc system with respect to hardware , middleware , and software layers .",
    "we elaborate on the abstraction of these different layers and provide a concrete example for the case of a point - to - point super - dense coding communication system .",
    "we include details of how the complete system can be constructed and emphasize how the software and middleware layers should interact in order to make the physics oblivious to an end user .",
    "we formalize the software - defined quantum communication ( sdqc ) framework by considering a single transmitter - receiver pair with a quantum transmitter ( tx ) and quantum receiver ( rx ) . a decomposition of each terminal is shown in fig .",
    "[ sdqc_layers ] with respect to the functional domain layers .",
    "these layers serve to separate development concerns in constructing each transceiver with respect to the hardware physics , the software protocol , and a middleware that communicates between the two domains .",
    "similar decompositions can be applied to previously developed qc systems .",
    "our objective is to show how to deliberately identify these domains at an abstract level and subsequently develop them into concrete realizations .          a concrete representation of the sdqc framework is shown in fig .",
    "[ sdqc_arch ] , in which the tx hardware layer is expressed as a quantum light source ( qls ) for preparing quantum states and accessing the quantum channel , the middleware is represented as a hardware device driver ( hdd ) , and the software layer is represented by a general purpose processor ( gpp ) running a user - defined qc program .",
    "the classical channel is assumed to be a local area network ( lan ) while the quantum channel is represented by some quantum optical modes .    in the tx of fig .",
    "[ sdqc_arch ] , the prepared states are encoded into the hilbert ( sub)space of some photonic degrees of freedom .",
    "candidates for the encoding include the polarization , orbital angular momentum , or field quadrature variables among others .",
    "the hardware layer is modeled to include all components necessary for state preparation such as polarization or phase modulators , with the physical encoding controlled by the hdd .",
    "it is the middleware that implements the interface to the qls for use by software .",
    "the software issues controls and manages the tx behavior by signaling to the qls which states to prepare . as a simple example",
    ", software can send a bit to the hdd specifying the basis to use for state preparation .",
    "the hdd middleware may then parse this bit into the appropriate sequence of qls control signals .",
    "of course , more elaborate protocols will require more elaborate interactions between the two layers , but in general the middleware and hardware do not require detailed information about the protocol implemented in software .",
    "the rx in fig .",
    "[ sdqc_arch ] is modeled similar to the tx , except that the rx software now drives a quantum light detector ( qld ) .",
    "the qld measures received photons and outputs measurement information .",
    "the rx middleware serves to sample the measurement information and relay it back to the software .",
    "it is the presence of the qld which distinguishes the rx from tx . a transceiver ( trx ) combining both qls and qld components would need only one middleware interface to implement this design .    for both the tx and rx",
    ", the software layer also serves to communicate required metadata over the lan .",
    "this includes , for example , negotiating the key protocol inherent to qkd or relaying feed - forward measurement information for quantum teleportation . because the software is assumed to be reprogrammable , techniques used in sharing metadata can be modified by the end users as needed . as an example ,",
    "classical error correction steps are important to deriving keys in qkd but the error codes used may require tuning to match the channel and observed bit error rates .",
    "@xcite these types of modifications are easily made using software - defined implementations of the user s selected protocol .    : a transmitter ( tx ) consists of a quantum light source ( qls ) driven by a hardware device driver ( hdd ) that is controlled by a general purpose processor ( gpp ) . the tx gpp communicates over a wide / local area network ( w / lan ) with a receiver rx .",
    "the rx gpp manages an hdd that monitors a quantum light detector ( qld ) .",
    "the qls / qld link defines the quantum channel . ]",
    "the hardware layer expresses components that are fundamental to the physical encoding of quantum information into the transmitted signal .",
    "many quantum light sources and detectors are available as off - the - shelf components .",
    "for example , single - photon detectors are sufficiently advanced and wide - spread in their application as to be stand - alone items from optical suppliers .",
    "similarly , weak - coherent pulses generated from attenuated output of photodiodes are easily setup for transmission .",
    "there is a significant variety in these elements with respect to wavelength , bandwidth , stability , and cost so as to warrant their consideration as a replaceable element in the qls / d design .",
    "individual applications require suitable pairing between the wavelengths of the source and detector but the modularity of system design ensures such hardware changes do not undermine the software and middleware layer .",
    "similar arguments also hold for research - grade hardware that may be tailored for specific experimental questions .",
    "the essential similarity is that both require externally accessible interfaces for the actively controlled elements and generated metadata .",
    "the engineering challenging to the development of the qls / d hardware within the sdqc framework is correctly executing the controls sent to the hardware layer .",
    "nominally , the sdqc design implies that the hardware consists of programmable elements that may be driven explicitly by the middleware .",
    "device drivers supplied with most actively controlled components , e.g. , translation stages , piezo - electric controllers , phase modulators etc . , satisfy this requirement .",
    "collectively , these device drivers and control wires define the hardware interface .",
    "the remaining challenge , therefore , is the integration and mapping of hardware control implementations into a well defined interface .",
    "for most lab - based qc experiments , this is traditionally accomplished in an ad hoc manner that is sufficient for proof of principle but not robust to updates or modifications . within sdqc , it is the role of the middleware to ease the hardware management by abstracting the interface required by software layer while enforcing the constraints imposed by hardware specification .",
    "the middleware parses metadata within the tx and rx .",
    "this includes translating metadata generated by the tx software specifying which qubits ( states ) to prepare within the hardware as well as tagging raw measurement data generated by the rx hardware .",
    "a middleware interface is defined to separate the concerns between the structure of the hardware and its expected behaviors required by the software .",
    "implementing the middleware requires knowledge of what hardware components are available and the means by which they are controlled , e.g. , via specified device drivers .",
    "several controlled components may be synthesized to implement selected software behavior , for example , state preparation or measurement in a specific basis .",
    "however , the particular methods implemented by the middleware to manage control of the hardware should be hidden from software in order to maintain separation of concerns . in addition",
    ", the middleware need only provide a library of elementary functions that can be called upon .",
    "this separates the middleware from whatever particular protocol is being implemented .",
    "similarly , the middleware relays information up to the software but it remains oblivious to its usage .",
    "the promotion of metadata from the hardware layer to the software layer requires translation between the domain specific languages native to those layers .",
    "this is built into the design of the middleware interface and determined by the level of abstraction provided .",
    "the middleware interface can and should vary with the intended use cases of the terminal .",
    "for example , a terminal could be designed such that a user - developed software is able to explicitly request that the middleware  rotate waveplate 1 to angle @xmath0 \" .",
    "the resulting middleware implementation would then relay the appropriately parsed signal to the hardware in order to prepare the specified configuration .",
    "alternatively , the middleware may be designed to accept only more abstract commands , e.g. ,  prepare a qubit in the @xmath1 basis \" , in which case the translation into the hardware language would be determined by a more sophisticated middleware implementation that included rotation of the necessary waveplates .",
    "these cases are distinguished by how much they abstract away the hardware components from the software protocols . either approach may be a useful implementation - the best choice is driven by the expected needs of the end user .      in the sdqc framework",
    ", the software layer defines the abstracted behavior of the hardware but not the implementation details .",
    "the level of abstraction and therefore control that is provided to the software layer is determined by the overall design of the terminal and especially the limitations implied by the middleware interface .",
    "depending on these design decisions , the software layer may explicitly define the type of information to be communicated as well as methods for validating transmission and negotiating classical metadata between the tx and rx .",
    "alternatively , the middleware interface may only provide access to a more limited set of behaviors , for example , how many bits to exchange between users .",
    "the flexibility in assigning these responsibilities offers a natural way to control the terminal design space .",
    "it seems necessary to justify that the demands of existing and near - term prototype qc systems can be satisfied using software control .",
    "current state of the art qc systems provide at most detection at rates of 1 gbit / sec @xcite .",
    "this upper bound on bit rate is due largely to operational limits of current light sources , which must employ trade - offs between quantum detector efficiency and response time .",
    "additional losses arising from transmission only serve to reduce observed count rates and further limit qc systems to sub - ghz rates . by comparison ,",
    "modern processors containing multiple cores have theoretical clock rates well above 10 ghz .",
    "this represents a more than 10-fold increase in processing speed over data acquisition rates .",
    "moreover , these clock rates correspond with @xmath2 floating - point operations per second ( 1 gflops ) even for commodity processors .",
    "alongside gigabit per second ( gbps ) communication links , the availability of more than 1 gflops suggest it is both possible and reasonable to carry out the computationally intensive part of many qc protocols relatively easily in near real time .",
    "of course , for detection rates beyond 1 gbps , using off - the - shelf processors may require additional design considerations .",
    "for example , the inclusion of specialized coprocessors such as graphical processing units ( gpu s ) or field - programmable array s ( fpga s ) remains an option .",
    "however , for the purpose of building reprogrammable qc systems capable of testing new protocols , it seems modern processor technology is well matched for prototyping .",
    "the design of the software layer requires a clear specification of the abstraction intended for the application programming infrastructure .",
    "this includes the application programming interface ( api ) exposed to the user as well as the supporting libraries providing the interface with the middleware .",
    "this can be accomplished using standard system software programming and device drivers as well as more elaborate integrated programming environments .",
    "as a demonstration of the sdqc framework , we present an implementation of super - dense coding @xcite . super - dense coding is a protocol whereby two users , alice and bob , begin by sharing a pair of entangled two - level systems , i.e. , qubits .",
    "the entangled qubits are initially prepared in the state @xmath3 where subscript @xmath4 denotes alice s qubit and @xmath5 denotes bob s qubit .",
    "alice has an @xmath6-bit message @xmath7 which she transmits to bob by applying to her qubit one of the four unitary operators @xmath8 .",
    "these operators have the distinction of mapping the original state within the complete set of bell states , @xmath9 the mapping between operators and bit pairs is established by alice and bob before beginning the protocol .",
    "we will use the mapping : @xmath10 where @xmath11 denotes the state prepared by alice . after applying the operator @xmath12 to her qubit",
    ", alice transmits her qubit to bob . upon receiving alice s qubit ,",
    "bob performs a joint measurement that discriminates between the four bell states .",
    "based on the outcome of the measurement , bob decodes the original two bits of message .      for our implementation of super - dense coding , the software layer is a library built within the gnu radio signal processing framework .",
    "gnu radio is a free software toolkit for deploying software - defined communications systems that offers primitive signal processing blocks for application development @xcite .",
    "we have leveraged gnu radio by creating the quantum information tool kit for application testing ( qitkat ) , a library extension that provides both c++ and python based processing blocks to support prototyping stream - based quantum communication .",
    "the qitkat library includes primitives for expressing communication protocols completely in software .",
    "this includes methods for encoding and decoding the sdc messages as well as interfaces exchanging network metadata between users .",
    "these blocks can then be connected using an inter - process communication system provided by the gnu radio run - time environment .",
    "the run - time manager is responsible for maintaining the flow of data , while the block developer is responsible for ensuring each blocks consumes and processes samples in the desired way .",
    "using qitkat and gnu radio blocks , we have developed tx and rx programs that permit alice to encode binary data and send modulated entangled states to bob , who decodes these modulations from measurements made on the entangled state .",
    "the processing flow graphs for the dense coding system are shown in figs .",
    "[ fig : alice ] and [ fig : bob ] .",
    "these diagrams describe the flow of information between the processing blocks within the system .",
    "in particular , the _ sdc message source _ block forwards binary strings to the _ sdc encode _ block , which looks up the appropriate operator based on the bit values according to the table in eq .",
    "( [ eq : sdcmap ] ) .",
    "the corresponding operator flag is sent to the _ qm server _ block , which represents the middleware interface responsible for translating operators into correct actions on the fiducial bell state .",
    "these commands are issued over a network using tcp messaging .            on the rx end ,",
    "the _ qm server _ block accepts messages returned by the hardware layer via the same tcp messaging .",
    "these messages from the hardware are actually signatures corresponding to specific detection events . after interpreting these events as specific state labels ,",
    "the _ sdc decode _ block decodes these bell - state measurement into bit pairs .",
    "these bits are then forwarded into the _ sdc message sink _ block , which serves the purpose of buffering the complete message .",
    "the _ qm server _ block serves as a visible middleware component .",
    "the encode and decode blocks issue control commands to modulate and measure the bell state , respectively .",
    "the modulations are based on application of the operator @xmath12 in eq .",
    "( [ eq : sdcmap ] ) while the measurements correspond with projections in the bell basis of eq .",
    "( [ eq : bell ] ) .",
    "this block is also responsible for the handshaking between the encode and decode blocks , which in our implementation is simply a classical transmission of packet counter to monitor the qubit sequence .",
    "this is in addition to the handshaking that underlies the classical network communications . in the current implementation ,",
    "the server resides on a separate computer and communication is managed using tcp packets .",
    "the _ qm server _ may be running local on the same host as either tx or rx clients , or on a separate device as would be a more natural case when the server is managing separate hardware .",
    "for sdc , the necessary hardware includes a source of entangled particles , a modulation mechanism , and a measurement apparatus .",
    "we will assume the use of polarization - entangled photon pair states , in which the horizontal and vertical polarizations of the photons are used to encode @xmath13 and @xmath14 , respectively .",
    "a non - deterministic source of polarization - entangled photon pairs can be constructed using the process of spontaneous parametric down conversion ( spdc ) pumped by an external laser .",
    "this approach , however , lacks a means of announcing the photon s presence .",
    "heralded pair production offers a slightly more complicated alternative but it has the advantage that each photon is tagged as being in a known time slot.@xcite    for polarization entangled biphoton states , the modulation operators are implemented using an optical wave plate for the @xmath1 , @xmath15 , and @xmath16 transformations . because the orientation determines the operator being implemented",
    ", we can mount the waveplate(s ) on an electronically driven rotator @xcite .",
    "the state of the rotator , and the photon polarization , can then be driven using computer - controlled electrical signals .",
    "the measurement of the photon pair state at the rx can be implemented partially using linear - optical bell - state measurement device @xcite . in this setup ,",
    "a static beam splitter interferes the two photons and polarization analyzers measurement the resulting state .",
    "the observed measurements can then identify 3 of the 4 possible bell states , but can not detect all of them.@xcite alternative approaches to measure all four states come at the cost of additional complexity .",
    "@xcite in our design , we assume a static optical network precedes a bank of detectors , which output a unique signature for each encoded state .",
    "we have realized our design using in an fpga board with an embedded arm processor .",
    "our implementation is based on a xilinx zynq system - on - a - chip board appended with a custom daughter board that collects ttl inputs from a bank of si - apd detectors .",
    "the zynq board supports communication over ethernet as well as serial lines or other inputs , and it can be programmed using xilinx s build tools .",
    "the zynq board serves as a convenient platform for integrating together the fpga - based control and parsing of electrical signals with the reprogrammable behavior of the arm processor .",
    "an example of the complete implementation for the rx is shown in fig .",
    "[ fig : sdchw ] . in this design ,",
    "the fpga accepts ttl signals from detectors connected through the custom daughter board .",
    "the input signals are timestamped using edge detection and an on - board clock running at 200 mhz",
    ". there are multiple input channels since the polarization analyzer used to implement the linear optical bell - state measurement makes use of multiple detectors , each indicative of a particular polarization state .",
    "thus , the input channel and the timestamp are sufficient metadata to distinguish the state of the detected photons .",
    "the fpga writes the generated metadata to an on - board memory region that is also accessible from the arm processor .",
    "the arm processor uses read / write access to the memory region during execution of user - defined code .",
    "this includes , for example , forwarding the recorded metadata to the software - layer .",
    "we use the arm to monitor the local memory buffer for metadata update and program it to respond to request from the network - connected software client .",
    "the raw timestamps may be transmitted using either a simple point - to - point udp broadcast , or they may be transmitted across larger network using the tcp protocol .",
    "the implementation reported here uses tcp .",
    "the transmitted packets include a set of timestamps and channel ids as well as the necessary network overhead , e.g. , checksums , packets i d , etc .",
    "these are received by the software client and processed by the qitkat program .",
    "for the _ sdc decode _ block , this includes correlating different channels with near simultaneous timestamps as a means of identifying a measured bell state .",
    "this task could also be assigned to the middleware , but our chosen api makes this information available to the software layer in order to provide diagnostic monitoring .        we have not yet implemented a complete build of the tx side . at present , our design suggests suing the arm - driven fpga to output control signals that drive the waveplate rotators . because the arm executes instruction received from the software - layer via a qitkat program , it can overwrite the shared memory with the fpga to modulate the rotator control signals .",
    "the more difficult engineering challenge is synchronization of the rotator configuration with the photon pair source . as mentioned above",
    ", heralded photon production would provide the necessary timing information , but these are conditional sources that will require the arm to monitor the availability of a photon pair .",
    "future on demand photon sources will alleviate this requirement .",
    "in the absence of the tx hw , we have tested the super - dense coding system design using numerical simulations of the software and middleware behavior .",
    "this includes tracking and storing individual quantum states as well as reproducing the metadata generated by a simulated measurement process .",
    "we use these studies to verify the qitkat implementation of the super - dense coding protocol by checking that an input message can be successfully encoded , decoded , and received .",
    "we use these studies to validate the interaction between the software and middleware , which is based on a client - server model .",
    "both the tx and rx sw interface with a qubit management server ( _ qm server _ ) by sending requests specific to individual qubit transmissions .    for the rx implementation , we allocated the qubit management server to the fpga+arm board .",
    "for the numerical studies , we allocate the server to a simulation program running on a separate computer .",
    "it is possible to host the client and server on the same computer , but we are explicitly interested in the networking issues that the client - server model must overcome . for each encoded bit pair ,",
    "the tx sw pushes a two - bit metadata string describing the requested data encoding operation .",
    "the server responds to this request with an identification number labeling the prepared qubit .",
    "internally , the simulation tracks only the two - bit metadata and the 32-bit integer label .",
    "similarly , the receiver requests updates from the server about available measurement results .",
    "measurements are simulated assuming an unbiased , complete bell - state measurement station .",
    "this idealization supports our effort to verify the correctness of the software layer and networking between terminals .        in fig .",
    "[ fig : ber_results ] , we present statistical measures of the flow graph from fig .",
    "[ fig : sdcrx ] using a numerical simulation of the _ qm server _ block .",
    "our simulation models transmission of the qubit through an isotropic depolarizing noise channel .",
    "the depolarizing noise channel transmits the unmodified input state with probability @xmath17 and applies each of the pauli operators @xmath18 with probability @xmath19 @xcite . for depolarizing noise , the bit error rate scales linearly in @xmath20 as @xmath21 , which is precisely the behavior recovered in the first plot of fig .",
    "[ fig : ber_results ] . in the second plot of fig .",
    "[ fig : ber_results ] , we show a snapshot of the transmission by recording the windowed bit error rate over a range of 200 consecutive samples for a fixed noise parameter @xmath22 .",
    "the bit error rate is nominally zero but spikes occasionally when an incorrectly encoded state is received .",
    "0.45   in the depolarizing noise model.,title=\"fig:\",scaledwidth=100.0% ]       0.45   in the depolarizing noise model.,title=\"fig:\",scaledwidth=100.0% ]",
    "we have extended the paradigm of software - defined communication to the context of a point - to - point qc system .",
    "we defined a layered model for the transmitter and receiver that separates each qc terminal into hardware , software , and middleware concerns .",
    "our design methodology emphasized the role of middleware for abstracting the high - level , software control language and managing the low - level hardware operations .",
    "we gave a detailed description of how each layer operates as well as a concrete implementation based on parts commonly found in existing qc designs .",
    "we have used the sdqc framework to design a super - dense coding system .",
    "our approach includes an extension of gnu radio for the software layer and an fpga+arm - based solution for the middleware layer . in the absence of experimental hardware",
    ", we have emulated the middleware behavior at each terminal using numerical simulation to model the transmission and measurement of quantum states .",
    "we tested our implementation for correctness as well as behavior with respect to the dimensionality of the transmitted quantum state .",
    "these results have been used to validate the software layer and provide insights into the classical overhead associated with implementing the protocol .",
    "the motivation for sdqc is to establish design methodologies that enable rapid prototyping of experimental systems .",
    "the availability of a reconfigurable software layer supports testing a robust family of communication protocols at significantly less expense in terms of development time .",
    "we are currently applying to the case of dense coding using error corrected transmissions @xcite .",
    "because qc is a relatively young field with a large design space , the ability to explore design parameters rapidly using prototype systems supports the testing of new theories and the assessment of existing communication strategies .",
    "the versatility of sdqc testbeds is useful for exploring new regimes in communication .",
    "our discussion of qc systems has been limited to end - user terminals .",
    "we have not discussed the implementation of the classical or quantum networks that connect users , apart from assuming that these network exist and that they have well - defined interfaces .",
    "recently , van meter and touch have discussed the design decisions underlying quantum networks and inter - networks.@xcite they provided insight into the protocols and stacks needed to support the type of interactions not included here .",
    "we anticipate it is possible to extend our present ideas to similar concerns , for example to software - defined quantum networking .",
    "t.  s.  h.  thanks henry humble for comments regarding the sdqc design in sec .",
    "[ sec : frame ] , toby flynn and laura ann anderson for help evaluating the zynq middleware , and ali ismail for initial efforts in defining the middleware interface .",
    "r. j. s. thanks the department of energy science undergraduate laboratory internships ( suli ) program for support .",
    "this work was supported by the defense threat reduction agency .",
    "this manuscript has been authored by a contractor of the u.s .",
    "government under contract no .",
    "de - ac05 - 00or22725 .",
    "kumar , p. , kwiat , p.  g. , ralph , t. , and sasaki , m. , `` editorial introduction to the special issue on quantum communications and information science , '' _ ieee journal of selected topics in quantum electronics _  * 15 * , 15451546 ( 2009 ) .",
    "bennett , c.  h. , brassard , g. , crpeau , c. , jozsa , r. , peres , a. , and wootters , w.  k. , `` teleporting an unknown quantum state via dual classical and einstein - podolsky - rosen channels , '' _ phys .",
    "lett . _   * 70 * , 18951899 ( 1993 ) .",
    "simon , c. , afzelius , m. , appel , j. , boyer de  la giroday , a. , dewhurst , s.  j. , gisin , n. , hu , c.  y. , jelezko , f. , krll , s. , mller , j.  h. , nunn , j. , polzik , e.  s. , rarity , j.  g. , de  riedmatten , h. , rosenfeld , w. , shields , a.  j. , skld , n. , stevenson , r.  m. , thew , r. , walmsley , i.  a. , weber , m.  c. , weinfurter , h. , wrachtrup , j. , and young , r.  j. , `` quantum memories , '' _ the european physical journal d - atomic , molecular , optical and plasma physics _  * 58 * , 122 ( 2010 ) .",
    "10.1140/epjd / e2010 - 00103-y .",
    "lodewyck , j. , bloch , m. , garcia - patron , r. , fossier , s. , karpov , e. , diamanti , e. , debuisschert , t. , cerf , n.  j. , tualle - brouri , r. , mclaughlin , s.  w. , and grangier , p. , `` quantum key distribution over 25 km with an all - fiber continuous - variable system , '' _ phys .",
    "* 76 * , 042305 ( 2007 ) .",
    "jouguet , p. , kunz - jacques , s. , debuisschert , t. , fossier , s. , diamanti , e. , allaume , r. , tualle - brouri , r. , grangier , p. , leverrier , a. , pache , p. , and painchault , p. , `` field test of classical symmetric encryption with continuous variables quantum key distribution , '' _ optics express _   *",
    "20*(13 ) , 1403014041 ( 2012 ) .",
    "zhang , h .- f . ,",
    "wang , j. , cui , k. , luo , c .-",
    "lin , s .- z .",
    ", zhou , l. , liang , h. , chen , t .- y . , chen , k. , and pan , j .- w .",
    ", `` a real - time qkd system based on fpga , '' _ journal of lightwave technology _  * 30*(20 ) , 32263234 ( 2012 ) .",
    "cui , k. , wang , j. , zhang , h .- f . ,",
    "l . , jin , g. , and chen , t .- y .",
    ", `` a real - time design based on fpga for expeditious error reconciliation in qkd system , '' _ ieee transactions on information forensics and security _",
    "* 8 * , 184190 ( 2013 ) .",
    "johnson , j. , grimaila , m. , humphries , j. , and baumgartner , g. , `` an analysis of error reconciliation protocols used in quantum key distribution systems , '' _ the journal of defense modeling and simulation : applications , methodology , technology _ ( 2013 ) .                            * travis humble * is co - director of the quantum computing institute at oak ridge national laboratory and an assistant professor at the university of tennessee .",
    "he received his phd in chemistry from the university of oregon in 2005 .",
    "he is the author of more than 50 journal papers .",
    "his current research interests include quantum information , communication , and computing .",
    "he is a member of spie .",
    "* ronald sadlier * is a junior at the university of rhode island .",
    "he is currently majoring in physics and math with an expected graduation data of 2014 .",
    "his current research interests include quantum information , communication , and computing ."
  ],
  "abstract_text": [
    "<S> quantum communication systems harness modern physics through state - of - the - art optical engineering to provide revolutionary capabilities . </S>",
    "<S> an important concern for quantum communication engineering is designing and prototyping these systems to evaluate proposed capabilities . </S>",
    "<S> we apply the paradigm of software - defined communication for engineering quantum communication systems to facilitate rapid prototyping and prototype comparisons . </S>",
    "<S> we detail how to decompose quantum communication terminals into functional layers defining hardware , software , and middleware concerns , and we describe how each layer behaves . using the super - dense coding protocol as an example , we describe implementations of both the transmitter and receiver , and we present results from numerical simulations of the behavior . </S>",
    "<S> we conclude that software - defined quantum communication provides a robust framework in which to explore the large design space offered by this new regime of communication .    : </S>",
    "<S> travis humble , oak ridge national laboratory , ms 6015 , one bethel valley road , oak ridge , tn , 37831 - 6015 usa ; tel : + 1 865 - 574 - 6162 ; e - mail :    2 </S>"
  ]
}
{
  "article_text": [
    "here we present an analytical framework for studying the robustness of networks that include both connectivity and dependency links .",
    "when nodes fail in a network containing both types of links , two different processes occur .",
    "( i ) connectivity links are disconnected , causing other nodes to disconnect from the network ( percolation process ) .",
    "( ii ) failing nodes cause other nodes that depend on them to also fail even though they are still connected via connectivity links ( dependency process ) .",
    "we show that the synergy between the percolation process and the dependency process leads to a cascade of failures that can fragment the entire network ( fig.[demonstration ] ) .",
    "we find that the density of dependency links , @xmath6 , plays a key role in determining the robustness of such networks . for networks containing connectivity links and a high density of dependency links ,",
    "an initial failure of even a small fraction of the network nodes disintegrates the network in a form of a first order phase transition .",
    "if however , the fraction of dependency links is reduced below a certain threshold , @xmath7 , the network disintegrates in a form of a second order phase transition .",
    "the cascading process leading to a first order transition exists for a wide range of topologies including lattices , er and sf networks , indicating it is a general property of many networks ( fig.[firstsecondtransition](a ) ) . comparing networks with both connectivity and dependency links but with different topologies ,",
    "reveals a new relation between topology and the robustness to random failure : networks with a broader degree distribution of connectivity links are more vulnerable to random failure in the presence of dependency links .",
    "this is opposed to the known result for networks containing only connectivity links , where networks with a broader degree distribution are significantly more robust to random failures .",
    "fig.[firstsecondtransition](a ) and fig.[firstsecondtransition](b ) show that when comparing er and sf networks with the same average degree , sf networks with a high density of dependent nodes are more vulnerable to random failures then er networks .",
    "next we present an analytical approach for studying the robustness to random failure of networks containing the two types of links . without loss of generality",
    "we define a model in which only pairs of nodes depend on one another , forming dependency groups of size 2 .",
    "when the dependency group contain more then two nodes the cascade effect is even more extreme and the transition from the regular second order percolation transition to a first order transition occurs even for more stable networks ( see si ) .",
    "therefore , the new properties we present for the case of dependency groups of size 2 are also valid in the general case of larger dependency groups ( see fig.1 in si ) .",
    "the model is defined as follows : a network containing @xmath0 nodes is randomly connected by connectivity links with a degree distribution @xmath8 and an average degree @xmath9 .",
    "in addition , pairs of nodes are connected by dependency links as follows : a ) a node can only have one dependency link .",
    "b ) if node @xmath10 depends on node @xmath11 then node @xmath11 depends on node @xmath10 . for this model",
    "we denote by @xmath6 the fraction of nodes that have dependencies .",
    "we start by presenting the formalism describing the iterative process of cascading failures for the simple case of @xmath12 ( see fig.1 in si ) .",
    "each iteration ( step ) includes failures that are the result of the percolation process and failures that are the result of the dependency process .",
    "the goal of the formalism is to describe the accumulated process up to step @xmath13 as an equivalent single random removal , @xmath14 , from the original network .",
    "the remaining fraction of nodes after such a removal is @xmath15 .",
    "the new network after the removal of a fraction @xmath14 of the nodes , has a giant component consisting of a fraction @xmath16 of the remaining nodes which is a fraction @xmath17 from the original network .",
    "+ the iterative process is initiated by the removal of a fraction @xmath18 of the network nodes .",
    "the remaining part of the network is @xmath19 .",
    "this initial removal will cause additional nodes to disconnect from the giant cluster due to the percolation process .",
    "the fraction of nodes that remain functional after the percolation process is @xmath20 .",
    "each node from the non functional part ( @xmath21 ) will cause the node that depends on it to also fail ( dependency process ) .",
    "the probability that a node depending on a non functional nodes has survived until now is @xmath22 .",
    "therefore the fraction of new nodes that will fail due to dependencies is @xmath23 . the accumulated failure including the initial failure of @xmath24 and @xmath25 is equivalent to a random removal of @xmath26 from the original network ( see si ) .",
    "the remaining fraction of nodes after the new removal is therefore @xmath27 .",
    "the remaining functional part of the giant component is now @xmath28 . to calculate the fraction @xmath29 of nodes that are disconnected due to dependencies at the second stage , recall that at the previous stage a fraction @xmath25 failed from @xmath22 .",
    "the remaining part of @xmath22 was therefore @xmath30 .",
    "thus @xmath31\\alpha_2 $ ] .",
    "this is equivalent to a random removal of @xmath32\\beta_1 $ ] from the original network .",
    "the remaining fraction of nodes is @xmath33 . following this approach",
    "we can construct the sequence , @xmath34 , of the remaining fraction of nodes in the network after each iteration .",
    ". + @xmath35 .",
    "+ @xmath36 ... + @xmath37 .",
    "+ following a similar approach for the general case of @xmath38 ( see si ) yields the sequence @xmath39",
    ". given , @xmath34 , the fraction of nodes in the giant cluster is @xmath40 .",
    "[ iterationsofgiantcomponent](a ) compares theory and simulations of @xmath41 , for the case of an er network .    to determine the state of the system at the end of the cascade process we analyze @xmath42 at the limit of @xmath43",
    "this limit must satisfy the equation @xmath42=@xmath44 since at the end of the process the cluster is not further fragmented . denoting @xmath45 we arrive to the equation : @xmath46 this equation",
    "can be solved graphically as the intersection of a straight line @xmath47 and a curve @xmath48 .",
    "when @xmath2 is small enough the curve increases very slowly and does not intersect with the straight line ( except at the origin which corresponds to the trivial solution ) . the critical case for which the nontrivial solution emerges",
    ", corresponds to the case when the line touches the curve at a single point @xmath49 and in this point we have the condition @xmath50 , which together with eq.([eq1 ] ) gives the solution for the critical fraction of failing nodes that will fragment the network and the critical size of the giant component .",
    "an exact analytical solution can be obtained using the apparatus of generating functions . as in refs .",
    "@xcite we introduce the generating function of the degree distribution @xmath51 .",
    "analogously , we also introduce the generating function of the underlying branching process , @xmath52 .",
    "a random removal of a fraction @xmath1 of nodes will change the degree distribution of the remaining nodes , so the generating function of the new distribution is equal to the generating function of the original distribution with the argument @xmath53 replaced by @xmath54 @xcite .",
    "the fraction of nodes that belong to the giant component after the removal of @xmath1 nodes is @xmath55 $ ] , where @xmath56 satisfies a transcendental equation @xmath57 $ ] @xcite . in the case of an er network with a poisson degree distribution @xcite",
    ", the problem can be solved explicitly since @xmath58 .",
    "accordingly , @xmath59 and @xmath60 $ ] where @xmath49 is defined in eq.([eq1 ] ) .",
    "the fraction of nodes in the giant component at the end of the cascade process is then given by @xmath61 .",
    "the equation @xmath62 has a trivial solution at @xmath63 .",
    "the non - trivial solutions of @xmath64 can be presented by the crossing points of the two curves in a system of equations that are given with respect to @xmath49 and @xmath64 : @xmath65 for the trivial solution at @xmath63 the size of the giant component is zero ( @xmath66 ) .",
    "for the solutions that are the crossing points of the two curves , @xmath67 , i.e. , @xmath68 .",
    "thus , the case where the curves tangentially intersect corresponds to a _",
    "first order _ phase transition point ( @xmath69 ) where @xmath70 abruptly jumps from a finite size above @xmath71 to zero below @xmath71 @xcite .",
    "the condition for the first order transition is that the derivatives of the equations of system ( [ system0 ] ) with respect to @xmath64 are equal .",
    "together with system ( [ system0 ] ) this yields : @xmath72+\\ln f/(f-1)^2 \\label{eq_cond1}\\ ] ] however , for a solution of system ( [ system0 ] ) where @xmath73 ( @xmath66 ) there is no jump in the size of the giant cluster and thus the transition is a _",
    "second order _ transition ( @xmath74 ) . solving system ( [ system0 ] ) for @xmath73 yields : + @xmath75 the analysis of eq.([eq_cond1 ] ) and eq.([eq_cond2 ] ) shows that the first order transition at @xmath76 occurs for networks with a high density of dependency links ( @xmath77 ) , while the second order transition at @xmath74 , occurs for networks with a low density of dependency links ( @xmath78 ) .",
    "this is confirmed by fig .",
    "4(a ) that compares theory and simulations for @xmath79 and @xmath80(q ) .",
    "the critical value of @xmath7 ( and @xmath81 ) for which the phase transition changes from first order to a second order is obtained when the conditions for both the first and second order transitions are satisfied simultaneously . applying both conditions we obtain @xmath82",
    "next , we support our analytical results by simulations . finding the transition point via simulations",
    "is always a difficult task that requires high precision . in the case of the first order transition we are able to calculate the transition point with good precision by identifying the special behavior characterizing the number of iterations ( noi ) in the cascading process .    at the first order transition point ,",
    "the noi scales as @xmath83 ( see si ) which is also demonstrated by the long plateau in fig .",
    "[ iterationsofgiantcomponent](a ) .",
    "this number sharply drops as the distance from the transition point is increased , since away from the transition point , @xmath71 , the noi scales as @xmath84 ( see si ) .",
    "thus , plotting the noi as a function of @xmath2 , provides a useful and precise method for identifying the transition point @xmath71 at the first order region .",
    "for the second order region a similar behavior exists for the size of the second largest cluster which also reaches its maximum at the transition point @xcite . fig .",
    "[ iterationsofgiantcomponent](b ) presents simulation results of the noi .",
    "the transition point , @xmath71 , can easily be identified by the sharp peek characterizing the transition point .",
    "the inset of fig .",
    "[ iterationsofgiantcomponent](b ) presents a similar behavior for the size of the second largest cluster near the second order transition point , @xmath85 .",
    "4(a ) compares simulation results and theory for the transition points @xmath86 at the first order region ( solid line ) and @xmath79 at the second order region ( dashed line ) .",
    "the transition points were obtained using the noi and the second cluster size techniques respectively .",
    "the theoretical results for different values of @xmath6 and @xmath9 were calculated by solving system ( [ system0 ] ) together with eq.([eq_cond1 ] ) or eq.([eq_cond2 ] ) respectively .",
    "[ firstsecondtransition](b ) compares the values of the transition points @xmath86 and @xmath79 respectively between sf and er networks with the same average degree . for networks with a small fraction of dependencies ( second order transition region )",
    "sf networks are more robust to random failure ( lower @xmath85 ) . for networks with a high fraction of dependencies ( first order transition region )",
    "sf networks become more vulnerable ( higher @xmath80 ) . fig .",
    "4(b ) compares simulation and theory for @xmath87 , the fraction of nodes in the giant cluster at the transition point . above @xmath7",
    ", @xmath87 is finite characterizing a first order transition , while below @xmath7 , @xmath87 is zero as expected for a second order transition .",
    "here we show that in order to properly model real networks two different type of links are needed : connectivity links and dependency links .",
    "we present an analytical formalism for a general network model including both connectivity and dependency links . according to our model , networks with high density of dependency links are extremely vulnerable to random failure and when a critical fraction of nodes fail the network disintegrates in a form of a first order phase transition .",
    "networks with a low density of dependency links are significantly more robust and disintegrate in a form of a second order phase transition . in the limit of zero fraction of dependency",
    "links our general solution yields the known results for networks with only one type of links .",
    "our framework also provides an analytical solution for the critical density of dependency links for which the phase transition changes from a first order to a second order percolation transition .",
    "we develop a powerful simulation method for accurately estimate the transition point , based on the unique behavior of the noi ( number of iterations in the iterative process of cascading failures ) that diverges at the first order transition point . using this method we are able to provide very accurate simulation results supporting our analytical results .",
    "we thanks the european epiwork project , the israel science foundation , the onr and the dtra for financial support .",
    "thanks the office of the academic affairs of yeshiva university for funding the yeshiva university high - performance computer cluster and acknowledges the partial support of this research through the dr .",
    "bernard w. gamson computational science center at yeshiva college ."
  ],
  "abstract_text": [
    "<S> current network models assume one type of links to define the relations between the network entities . </S>",
    "<S> however , many real networks can only be correctly described using two different types of relations . </S>",
    "<S> connectivity links that enable the nodes to function cooperatively as a network and dependency links that bind the failure of one network element to the failure of other network elements . here </S>",
    "<S> we present for the first time an analytical framework for studying the robustness of networks that include both connectivity and dependency links . </S>",
    "<S> we show that the synergy between the two types of failures leads to an iterative process of cascading failures that has a devastating effect on the network stability and completely alters the known assumptions regarding the robustness of networks . </S>",
    "<S> we present exact analytical results for the dramatic change in the network behavior when introducing dependency links . for a high density of dependency </S>",
    "<S> links the network disintegrates in a form of a first order phase transition while for a low density of dependency links the network disintegrates in a second order transition . </S>",
    "<S> moreover , opposed to networks containing only connectivity links where a broader degree distribution results in a more robust network , when both types of links are present a broad degree distribution leads to higher vulnerability .    </S>",
    "<S> many friendships between individuals in a social network , numerous business connections in a financial network or multiple cables between internet routers , are all examples of networks with a high density of connectivity links @xcite . </S>",
    "<S> such networks are regarded as very stable to attacks since even after a failure of many nodes the network still remains connected . </S>",
    "<S> in contrast , dependencies between the network nodes endanger the network stability since the failure of several nodes may lead to the immediate failure of many others . as an example consider a financial network : each company has trading and sales connections with other companies ( connectivity links ) . </S>",
    "<S> these connections enable the companies to interact with each other and function together as a global financial market . </S>",
    "<S> but there are also dependencies relations between companies , several companies that belong to the same owner depend on one another </S>",
    "<S> . if one company fails the owner might not be able to finance the other companies that will fail too . </S>",
    "<S> such dependencies jeopardize the network stability and are the possible cause of many major financial crises . </S>",
    "<S> another example is an online social network ( facebook or twitter ) : each individual communicates with his friends ( connectivity links ) , thus forming a social network through which information and rumors can spread . </S>",
    "<S> however , many individuals will only participate in a social network if other individuals with common interests also participate ( dependency links ) in that social network .    </S>",
    "<S> the effect of failing nodes on the network stability has been studied separately for networks containing only connectivity links @xcite and for networks containing only dependency links @xcite . </S>",
    "<S> the fundamental difference between connectivity and dependency links is that for dependency links the failure of a direct neighbor of a node leads to the direct failure ( with some probability ) of that node , but for connectivity links a node fails only when it ( or the cluster it is in ) becomes completely disconnected from the network . </S>",
    "<S> percolation theory is a major tool for studying network stability when the network is connected only with connectivity links . in a percolation process on a network of size @xmath0 , a fraction @xmath1 of the network nodes </S>",
    "<S> are removed . </S>",
    "<S> if the remaining fraction of nodes , @xmath2 , is larger then a critical value ( @xmath3 ) , a spanning cluster connecting order @xmath0 nodes exists , if however , @xmath4 , the network collapses into small clusters . at @xmath5 </S>",
    "<S> the network undergoes a second order phase transition @xcite .    </S>",
    "<S> previous studies of networks containing dependencies can be divided into two categories : ( i ) overload failures in networks containing a flow of a physical quantity . </S>",
    "<S> for example , disturbances in power transmission systems or congestion instabilities in transportation networks and internet traffic @xcite . </S>",
    "<S> these models show that when one node is overloaded and the traffic can not be routed through it , choosing alternative paths will cause other nodes to also become overloaded . </S>",
    "<S> this process may develop into a series of cascading failures that can disable the entire network . </S>",
    "<S> ( ii ) models based on local dependencies , such as decision making of interacting agents @xcite . in these models </S>",
    "<S> the state of a node depends on the state of its neighbors and therefore a failing node will cause it s neighbors to also fail and so on . </S>"
  ]
}
{
  "article_text": [
    "the relation between _ self awareness _ and _ intelligence _ is an open problem these days . despite the fact that _ self awarness _ is usually related to _",
    "emotional intelligence _ , this is not the case here .",
    "the problem described in this paper is how to model an agent which _ knows _ ( cognitive ) binary logic @xcite and which is also able to pass ( without any mistake ) a certain family of _ turing tests _ @xcite designed to verify its knowledge and its discourse about the modal states of truth @xcite ( necessary truth - denoted @xmath0 , contextual truth - denoted @xmath1 , impossibly truth / necessary false / contradiction - denoted @xmath2 , @xcite ) corresponding to well - formed formulae within the language of propositional binary logic ( @xmath3 ) .",
    "the context of this paper is given by @xcite and @xcite .",
    "more precisely , in order to improve a complex software platform for iris recognition @xcite , an inference engine is needed .",
    "the computational model of this engine will be derived from computational formalization of cognitive binary logic ( @xmath4 ) introduced in @xcite .",
    "first step in this direction is to extend @xmath4 up to an intelligent agent enabled to pass some turing tests , and this is the subject of the present paper .",
    "in order to pass the turing test , the agent must have conversational capacities .",
    "let us assume that the agent gets the input @xmath5 which _ looks _ like a well - formed formula of @xmath6 .",
    "an example of this kind is the _ liar paradox _ discussed in @xcite .",
    "the problem is that a deductive discourse @xcite depends on the given input string but it also depends on the given goal which is obvious for a human agent , but not for a software agent .    in other words , for a software agent , the input string @xmath5 can be translated into one of the following sentences : ` @xmath5 is ( always ) false ' , ` @xmath5 is ( always ) true ' , ` @xmath5 is a contextual truth ' , ` @xmath5 is false and well - formed ' , ` @xmath5 is true and well - formed ' , or into one of the following queries : ` is it @xmath5 a theorem ? ' , ` is it @xmath5 a contradiction ? ' , ` is it @xmath5 a contextual truth ? ' .",
    "the introduction of two semantic markers denoted ` ( ! ) : ' and ` ( ? ) : ' is mandatory in order to differentiate between assertions ( affirmations ) and queries ( questions ) , respectively . with these notations , in the cognitive dialect , the deductive discourses are derived from the deductive discourses written in @xmath4 by adding ` ( ! ) : ' or ` ( ? ) : ' prefix to each vertices .",
    "the second reason for introducing these markers is that in order to prove a certain degree of self awareness , an agent must be able to understand the difference between the assertions like ` i ask ' and ` i say ' and also between ` i ask myself ' , ` i say to myself ' ( ` i found ' , ` i proved ' , ` i know ' ) , ` i ask you / someone ' , ` i say to you / someone ' .",
    "when it comes to imagining a logical human - machine dialog , the most important thing is that if the human tells something to the agent , then what is told can be true or false , but anything said by the agent must be true ( or else , it is inevitably that the agent is inconsistent and , sooner or later , it will fail to pass a certain turing test ) .    also , to keep the design of our agent as simple as possible",
    ", we will consider that all assertions are _ positive _ , i.e. all of them declare that something is true : + ` it is true that @xmath5 ' : @xmath7 or ` it is true that @xmath5 is false ' , @xmath8,\\end{aligned}\\ ] ] or ` it is true that @xmath5 is a contextual truth ' : @xmath9.\\end{aligned}\\ ] ] by analogy , any query will ask for something true : + ` is it @xmath5 true ? ' : @xmath10 or ` is it true that @xmath5 is false ? ' : @xmath11,\\end{aligned}\\ ] ] or ` is it true that @xmath5 is a contextual truth ? ' : @xmath12.\\end{aligned}\\ ] ]    the third convention allows the agent to manipulate all three states of modal truth using a purely binary vocabulary .",
    "we achieve this by introducing the _ dialog function _ ( n. popescu - bodorin ) :    @xmath13    where : @xmath14 and @xmath15 are two reserved labels ( meaning that the input assertion / query is _ logical _ or _ nonsense _ , respectively ) , @xmath16 is the class of all tautologies , @xmath17 is the class of all contradictions , and @xmath18 is defined as follows : if @xmath5 is a well - formed formula of @xmath6 ( @xmath19 ) , then : @xmath20    \\in \\widehat{ci},\\ ] ] @xmath21 \\in \\widehat{ci},\\ ] ] @xmath22    \\in \\widehat{ci},\\ ] ] @xmath23 \\in \\widehat{ci}.\\ ] ]    the output of the dialog function @xmath24 is computed using the following rules :    1 .   @xmath5 is a tautology if and",
    "only if the full deductive discourse @xcite of the input assertion @xmath25 is a deductive proof @xcite . in this case , the dialog function outputs the doublet : @xmath26 i.e. the agent proves that @xmath5 is always true and the input assertion is ( logically ) well - formed .",
    "2 .   @xmath5 is a tautology if and only if the full deductive discourse of the input assertion @xmath27 is a deconstruction @xcite . in this case",
    ", the dialog function outputs the doublet : @xmath28 i.e. the agent proves that @xmath5 is always true and founds that asserting falsity for a tautology is a logical nonsense .",
    "3 .   @xmath5 is a contradiction if and only if the full deductive discourse of the input assertion @xmath25 is a deconstruction . in this case",
    ", the dialog function outputs the doublet : @xmath29 i.e. the agent proves that @xmath5 is always false and founds that asserting truth for a contradiction is a logical nonsense .",
    "@xmath5 is a contradiction if and only if the full deductive discourse of the input assertion @xmath27 is a deductive proof . in this case",
    ", the dialog function outputs the doublet : @xmath30 i.e. the agent proves that @xmath5 is always false and the input assertion is well - formed .",
    "@xmath5 is a tautology if and only if the full deductive discourse of the input query @xmath31 is a deductive proof . in this case",
    ", the dialog function outputs the doublet : @xmath26 i.e. the input question is well - formed , the agent proves that @xmath5 is always true and gives a pozitive answer to the input query .",
    "@xmath5 is a tautology if and only if the full deductive discourse of the input assertion @xmath32 is a deconstruction . in this case",
    ", the dialog function outputs the doublet : @xmath30 i.e. the input question is well - formed , the agent proves that @xmath5 is always true and gives a negative answer to the input query .",
    "@xmath5 is a contradiction if and only if the full deductive discourse of the input query @xmath31 is a deconstruction . in this case",
    ", the dialog function outputs the doublet : @xmath33 i.e. the input question is well - formed , the agent proves that @xmath5 is always false and gives a negative answer to the input query .",
    "@xmath5 is a contradiction if and only if the full deductive discourse of the input query @xmath32 is a deductive proof . in this case",
    ", the dialog function outputs the doublet : @xmath26 i.e. the input question is well - formed , the agent proves that @xmath5 is always false and gives a pozitive answer to the input query .",
    "@xmath5 is a contextual truth if and only if none of the full deductive discourses of the input assertions @xmath25 @xmath27 or of the input queries @xmath31 @xmath32 is a deductive proof . in this case , the dialog function outputs the doublet : @xmath34\\wedge[p_{f } \\rightarrow ( p \\rightarrow f)])\\ ] ] i.e. the agent find a context @xmath35 which makes the formula @xmath36 satisfiable and also finds a context @xmath37 which makes the formula @xmath38 satisfiable .    by analyzing the outputs of the _ dialog function _",
    "it can be seen that , in the _ cognitive dialect _ is legal to ask _ anything _ but it is illegal to assert falsity for a tautology or to assert truth for a contradiction .",
    "let us consider that the formula @xmath39 is given to be studied .",
    "if the input query is @xmath40 , a full deductive discourse written in _ cognitive dialect _ would be : @xmath41 @xmath42 the context which makes the formula @xmath43 satisfiable is : @xmath44.\\ ] ]    if the input query is @xmath45 , a full deductive discourse written in _ cognitive dialect _ would be : @xmath46 @xmath47 @xmath48 \\wedge ( ? ) : [ ( t \\wedge q ) \\rightarrow f]\\ ] ] the context which makes the formula @xmath49 satisfiable is : @xmath50.\\ ] ] the output of the _ dialog function _ is the following doublet : @xmath51\\wedge[\\alpha_{f } \\rightarrow ( \\alpha \\rightarrow f)])\\ ] ] hence , @xmath52 is a contextual truth .",
    "also , @xmath53 and @xmath54 describe the solutions of boolean satisfiability problems @xmath43 and @xmath49 , respectively .            in the second example , modus ponens is analyzed . for the input query : @xmath55 \\rightarrow q,\\ ] ] a full deductive discourse written in _ cognitive dialect _ would be the deductive proof presented in fig.[mp ] and the output of the _ dialog function _ is the doublet @xmath56 .",
    "+ in the third example , the contradiction @xmath57 is analyzed .",
    "for the input query : @xmath58,\\ ] ] a full deductive discourse written in _ cognitive dialect _ would be the following deductive proof : @xmath58,\\ ] ] @xmath59 @xmath60 the output of the _ dialog function _ is the doublet @xmath56 .",
    "hence , the input assertion @xmath61 $ ] will be recognized as a logical nonsense and the output of the _ dialog function _ will be the doublet @xmath62 .",
    "+ the forth example analyze the modus tollens argument .",
    "for the input query : @xmath63 a full deductive discourse written in _ cognitive dialect _ would be the following deductive proof : @xmath64\\vee f\\}\\ ] ] @xmath65 @xmath66 @xmath67 \\wedge [ ( ? ) : ( t \\wedge q \\wedge",
    "p ) \\rightarrow ( q \\vee f)]\\ ] ] hence , the output of the _ dialog function _ is the doublet @xmath56 .",
    "+ in the fifth example , we consider the tautology : @xmath68{\\bf \\rightarrow } [ ( p \\rightarrow q ) \\rightarrow ( p \\rightarrow r ) ] .\\ ] ] a deductive discourse written in _ cognitive dialect _ is presented in fig.[lk ] and the output of the _ dialog function _ is the doublet @xmath56 .",
    "the basic functionality of the proposed cognitive intelligent agent ( @xmath69 ) is described in fig.[cia ] .",
    "let us consider the turing tests containing the following type of problems : for an arbitrary formula @xmath19 , @xmath69 is required to find if the input assertion / query is or is nt a logical nonsense , and also if @xmath5 is a tautology , a contextual truth , or a contradiction .",
    "since the @xmath4 theory is sound and complete @xcite , @xmath69 will give the correct answer for any input query written in cognitive dialect .",
    "also , if the input assertion is a logical nonsense , @xmath69 will correctly recognize it .",
    "therefore , @xmath69 will pass with a success rate of 100% all sessions of turing tests designed to verify its knowledge and its discourse about the modal states of truth corresponding to formulae within the language of @xmath6 .",
    "hence , there is no doubt that as a software agent , @xmath69 demonstrate the highest possible degree of intelligence .",
    "still , the agent is not enabled to be aware of itself and of its environment or to simulate self - awareness .",
    "the basic design of an inteligent agent was proposed in this paper .",
    "it is an example of a fully intelligent agent which is not at all aware of itself .",
    "still , it is enabled to engage in simple conversations about the modal states of truth of well - formed formulae of @xmath6 , without doing any mistakes .",
    "future developments will include self - awarnes which is needed in order to enable the agent to supervize complex computations and to engage direct communication with humans on specific subjects , other than the modal truth state of the formulae of pbl .",
    "for example , we plan to gather humans  opinions about some particular iris recognition results in a similar manner with that described in @xcite where customers  emotive responses to a product are collected using a questionnaire .",
    "the goal is corelate iris recognition results obtained automaticaly with human feedback and to explore the limitations that could apear in iris recognition when using eye images captured in insufficiently constrained aquisition conditions .    on the other hand , we know that some sub - problems of iris recognition are in np ( the class of problems solvable in nondeterministic polynomial time ) , and consequently heuristic algorithms must be used in order to achieve some speed .",
    "the problem is that quantifying the quality of their results is a _",
    "matter of degree _",
    "@xcite ( in fact , the results of these heuristic algorithms are _ near solutions _ , not exact solutions ) . therefore , future developments in the direction of fuzzy logic are not excluded at all .",
    "n.  popescu - bodorin , _ exploring new directions in iris recognition _ , proc .",
    "@xmath71 international symposium on symbolic and numeric algorithms for scientific computing , synasc  09,conference publishing services - ieee computer society , pp .",
    "384 - 391 , 2010 .",
    "a.  mohais , a.  nikov , a.  sahai , s .",
    "nesil , _ a tunable swarm - optimization - based approach for affective product design _ , proc .",
    "9th wseas int . conf . on mathematical and computational methods in science and engineering , macmese07 ,",
    "pp.254 - 258 , 2007 ."
  ],
  "abstract_text": [
    "<S> the relation between _ self awareness _ and _ intelligence _ is an open problem these days . despite the fact that _ self awarness _ is usually related to _ </S>",
    "<S> emotional intelligence _ , this is not the case here . </S>",
    "<S> the problem described in this paper is how to model an agent which _ knows _ ( cognitive ) binary logic and which is also able to pass ( without any mistake ) a certain family of _ turing tests _ designed to verify its knowledge and its discourse about the modal states of truth corresponding to well - formed formulae within the language of propositional binary logic . </S>"
  ]
}
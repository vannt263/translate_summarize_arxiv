{
  "article_text": [
    "the various components in an integrated circuit communicate with each other via parallel metal wires referred to as _ interconnects _ or _ parallel buses _ @xcite .",
    "as the inter - wire spacing decreases with technology scaling , the coupling capacitance between adjacent wires increases , leading to increased crosstalk on the bus @xcite .",
    "moreover , scaling of the supply voltage renders bus transmissions susceptible to random errors .",
    "together , these two effects increase transmission energy / delay and degrade signal integrity . as a consequence , they pose a major challenge to keep up with the demand for increasing data transfer rates over interconnects .",
    "crosstalk - avoidance coding ( cac ) encodes data for transmission over a capacitively - coupled interconnect with reduced energy consumption and propagation delay .",
    "this is achieved , for example , by avoiding opposing bit transitions on adjacent bus wires @xcite .",
    "error - correction coding ( ecc ) encodes data by adding redundancy in the form of parity bits .",
    "this redundancy can then be used to detect and correct errors occurring during the transmission .",
    "such error correction is becoming increasingly important for communication over interconnects .",
    "for example , the ddr4 sdram standard uses an @xmath0-bit cyclic - redundancy code to provide error correction for @xmath1 bits of data transmitted over the bus @xcite .",
    "thus , the total number of bus wires used is @xmath2 .    since parallel buses benefit from the use of both cac and ecc , it is beneficial to try to combine them .",
    "however , this turns out to be nontrivial .",
    "the two natural approaches , which use an ecc inner code followed by a cac outer code , or which use a cac inner code followed by an ecc outer code both fail ( the former because the cac outer code can not be reliably decoded in the presence of errors , the latter since the ecc outer code destroys the crosstalk - avoidance property ) .",
    "thus , crosstalk - avoidance and error - correction coding need to be performed jointly .",
    "the best known way to combine cac and ecc is @xcite .",
    "they propose to first encode the information using a cac .",
    "next an ecc is used to generate parity bits for the output of the cac .",
    "each of these parity bits is transmitted using two wires to ensure crosstalk avoidance . as a result of this duplication ,",
    "this approach is inefficient .",
    "for example , using the above ddr4 numbers , if the @xmath1 bits are already cac encoded , then the ecc would generate an additional @xmath3 bits to carry the @xmath0 parity bits , resulting in a total of @xmath4 bus wires .",
    "we propose an efficient method to perform joint cac and ecc that uses fewer bus wires than the state - of - the - art @xcite and in addition can provide better error correction . for the ddr4 example above , our proposed scheme for joint cac and ecc uses only an additional @xmath5 bits to carry the @xmath0 parity bits , resulting in a total of @xmath6 bus wires .",
    "this constitutes a savings of @xmath7 bus wires over the state of the art @xcite .",
    "the key ingredient in our approach for joint cac and ecc is to identify what we term _",
    "free wires_. these are wires that can carry either a @xmath8 or a @xmath9 without violating the crosstalk - avoidance constraints and without influencing what can be sent over adjacent bus wires .",
    "suppose that there are @xmath10 such free wires .",
    "our joint cac and ecc then operates as follows .",
    "we first encode the information bits using a cac to form @xmath11 encoded bits , skipping the free wires during the encoding .",
    "we next generate @xmath10 parity bits for the @xmath11 cac - encoded bits using an ecc .",
    "we finally place the @xmath10 parity bits on the free wires identified earlier .",
    "notice that , by placing the parity bits on the free wires , they automatically satisfy the cac constraints , and hence we do not need to duplicate or otherwise shield them in order to protect them against crosstalk as done in @xcite . in other words ,",
    "the parities are embedded into the bits to be transmitted .",
    "we point out that identification of the free wires is possible knowing only the past bus state . hence",
    ", the receiver can correctly determine which wires carry the parity bits .",
    "once the receiver knows the location of the parity bits , it can decode the ecc and cac . here , we perform the ecc and cac decoding jointly .",
    "this joint decoding allows us to obtain better error correction than the approach proposed in @xcite , which decodes the ecc and cac separately . in this paper",
    "we use an irregular repeat - accumulate ( ira ) code @xcite as our choice of ecc .",
    "since both the ecc and cac employ local constraints we apply a modified iterative belief - propagation decoder @xcite to jointly decode the transmitted codeword .    in summary ,",
    "the proposed method has two benefits over the state - of - the - art @xcite .",
    "first , our joint cac - ecc encoding scheme at the transmitter , by identifying free wires , uses fewer bus wires for transmission of data for the same number of parity bits .",
    "second , the joint cac - ecc iterative decoding scheme at the receiver allows for better error correction .",
    "we provide a performance analysis for our proposed joint cac - ecc scheme by computing its rate , minimum distance , and iterative decoding threshold in presence of random erasures .",
    "the factor graph @xcite for our joint scheme consists of both linear ( ecc ) and nonlinear ( cac ) factor nodes .",
    "hence , the density evolution analysis is nonstandard and we believe this itself is an interesting aspect of our work .",
    "the remainder of this paper is organized as follows .",
    "section  [ sec : background ] provides background material on crosstalk - avoidance coding .",
    "section  [ sec : joint ] introduces the joint embedded cac - ecc code .",
    "sections  [ sec : analysis ] and [ sec : density ] analyze the proposed joint embedded cac - ecc code , evaluating its rate , minimum distance , and iterative decoding thresholds .",
    "the proofs of various statements are deferred to the appendices .",
    "this section provides some background material on crosstalk - avoidance coding . as mentioned earlier ,",
    "due to capacitative coupling of adjacent bus wires , certain bus transitions lead to longer transmission delays and higher energy consumption than others @xcite .",
    "this effect is particularly pronounced for opposing transitions on adjacent wires , i.e. , a first wire transitioning up ( from @xmath8 to @xmath9 ) and an immediately adjacent wire transitioning down ( from @xmath9 to @xmath8 ) .",
    "crosstalk - avoidance codes encode the data to be transmitted over the bus to avoid these opposing transitions on adjacent wires .",
    "this encoding reduces the transmission delay and energy by up to a factor @xmath12 depending on the coupling coefficient at the cost of also reducing the data rate @xcite .",
    "the analysis of such codes was pioneered in  @xcite .",
    "consider a bus with @xmath13 wires .",
    "denote by @xmath14 the past bus state .",
    "we are interested in the number of sequences @xmath15 describing the next bus state that satisfy the crosstalk - avoidance constraint with respect to @xmath16 . clearly , the number of such sequences depends on the past bus state @xmath16 .",
    "the best case is if @xmath16 is either equal to all ones or all zeros .",
    "then , there can be no opposing transitions on adjacent wires no matter what @xmath17 is , and therefore the number of sequences @xmath17 satisfying the cac constraints is @xmath18 .",
    "the worst case turns out to be if @xmath16 is an _ alternating run _ of 0 and 1 , i.e. , @xmath19 or @xmath20 , in which case the number of sequences @xmath17 satisfying the cac constraints is @xmath21 , where @xmath22 denotes the fibonacci numbers @xcite .",
    "alternating runs in @xmath16 turn out to be crucial for the rate and decoder analysis . consider a past bus state @xmath16 consisting of two alternating runs , e.g. , @xmath23 , and assume the first such alternating run has length @xmath24 and the second one @xmath25 .",
    "note that the boundary of the two alternating runs is either @xmath26 or @xmath27 .",
    "hence , there can be no opposing transition regardless of the value of @xmath17 between those two positions . more precisely ,",
    "if @xmath28 and @xmath29 denote any two vectors of @xmath24 and @xmath25 bits , respectively , that satisfy the constraints imposed by the first and second alternating runs , then the concatenation @xmath17 of @xmath28 and @xmath30 is a vector of length @xmath31 that satisfies the constraints imposed by the whole vector @xmath16 .",
    "thus , the boundary between alternating runs decouples the problem of how to choose @xmath17 into two noninteracting subproblems of choosing the first @xmath24 bits and the second @xmath25 bits of @xmath17 .",
    "consequently , the number of possible @xmath17 sequences is @xmath32 @xcite",
    ".    in general , assume @xmath16 is ( uniquely ) parsed into maximal alternating runs of lengths @xmath33 .",
    "then the number of possible @xmath17 sequences is @xmath34 @xcite .",
    "the rate @xmath35 of the cac code with past bus state @xmath16 is thus given by @xmath36    for past bus state @xmath16 generated uniformly at random over @xmath37 , it is not hard to show that the expected number of alternating runs of degree @xmath38 is @xmath39 asymptotically as @xmath40 and that the actual number of alternating runs concentrates around this distribution .",
    "thus , for this random choice of @xmath16 , the cac has asymptotic rate @xmath41 with high probability as @xmath40 .",
    "in this section we introduce our embedded joint cac and ecc scheme .",
    "one of the key concepts for this scheme are what we term free wires , which are introduced in section  [ sec : joint_free ] .",
    "the encoder and decoder operation are described in sections  [ sec : joint_encoder ] and [ sec : joint_decoder ] .",
    "assume as before that the bus has @xmath13 wires and that the past bus state is @xmath42 .",
    "we want to set the bus to its next state , denoted again by @xmath43 .",
    "a wire @xmath44 such that all the three wires , @xmath45 , @xmath46 and @xmath47 have the same value is called a _",
    "free _ wire .",
    "for such a free wire , we can set the next value @xmath48 to be either @xmath8 or @xmath9 without violating the crosstalk constraints and without affecting the values @xmath49 , @xmath50 that can be sent over the two adjacent wires .     and @xmath17 are the past and future bus state , respectively . ]",
    "the identification of the free wires is best understood using a factor graph @xcite as shown in fig .",
    "[ fig : free ] . on the top in the figure",
    "we show the past bus state @xmath16 , and on the bottom we show the next bus state @xmath17 .",
    "the wires in the next bus state @xmath17 are denoted by filled circles .",
    "the triangles in the middle represent the crosstalk - avoidance constraints imposed by the past bus state @xmath16 .",
    "for example , @xmath51 requires that @xmath52 since otherwise we would have an opposing transition on these two adjacent wires .",
    "notice that there are some values of @xmath17 that are not connected to any constraint . in fig .",
    "[ fig : free ] , the wires @xmath53 , @xmath54 , @xmath55 ( indicated by red filled circles ) do not have any constraints associated with them .",
    "these are the free wires .",
    "thus , the wires @xmath53 , @xmath54 , @xmath55 can be set to any value without affecting adjacent wires and without violating any crosstalk constraints .",
    "note that the crosstalk constraints are local : each constraint is connected to two wires of the past bus state and two wires of the next bus state .",
    "we also emphasize that the crosstalk constraints are nonlinear , since only one out of four possible values of two adjacent wires is prohibited .          the encoder architecture",
    "is shown in fig .",
    "[ fig : encoder ] . given the past state @xmath16 , the encoder first determines the positions of the free wires .",
    "the information bits are passed through the cac and placed on the non - free wires .",
    "the ecc , assumed to be a linear code here and throughout , then computes the parity bits of the data placed on the non - free wires and places them on the free wires .    more formally ,",
    "let us assume for the moment that the number of free wires is exactly equal to the desired number of parity bits . then , as shown in the fig .",
    "[ fig : encoder ] , the encoder first identifies the @xmath10 free wires .",
    "the @xmath56 information bits are encoded using a cac and are placed on the @xmath11 non - free wires .",
    "the @xmath11 cac - encoded bits are then fed to the ecc , which generates @xmath10 parity bits .",
    "these parities are then placed on the @xmath10 free wires .",
    "the combined @xmath11 cac - encoded bits and the generated @xmath10 parities are sent across the bus .",
    "if the number of free wires is more than the number of parity bits , then the selector uses some of the free wires to carry cac - encoded information bits .",
    "if the number of free wires is less than the number of parity bits , then parity bits are forced on the non - free wires by appropriately shielding them .    in practice",
    ", the channel typically operates at very high snr , and hence we can restrict ourselves to high - rate eccs , so that the number of parity bits is small",
    ". we will show later that when the past bus state @xmath16 is generated uniformly at random from @xmath37 , then the number of free wires is typically much larger than the desired number of parity bits .",
    "thus , the shielding technique would be rarely used , and our scheme will be efficient most of the time .",
    "so far , we have made no assumptions about the ecc being used except for linearity . to keep decoding complexity manageable",
    ", we would like to use a low - density ecc .",
    "however , a standard low - density parity - check ( ldpc ) code can not be directly combined with the architecture described here since the resulting code will not have vanishing probability of block error .",
    "instead , we propose to use an ira code @xcite , in which the parities are further accumulated .",
    "vector of bits to be transmitted over the bus . ]    an example of the factor graph for this construction is shown in fig .",
    "[ fig : factor2 ] . in this figure ,",
    "the parity - check constraints of the ecc are shown by black squares .",
    "an edge between a parity - check constraint and a wire in the next bus state denotes the participation of the bit ( on that wire ) in that parity - check constraint .",
    "the edges associated to the past bus state @xmath16 are half - edges , describing the ( fixed and known ) bits in the past bus state .      to explain the receiver operation we assume that the past bus state @xmath16 is known correctly at the receiver .",
    "this allows the receiver to determine the position and number of free wires .",
    "we explain only the case when the number of free wires is exactly equal to the number of parity bits .",
    "the other cases follow in a similar fashion .",
    "the receiver performs a joint iterative decoding of the cac and ecc to reliably recover the information bits .",
    "consider the joint factor graph shown in fig .",
    "[ fig : factor2 ] .",
    "the goal of the decoder is to determine the information bits in @xmath17 given the noise - corrupted bus output .",
    "we will use a modified belief - propagation decoder , which passes messages along the joint factor graph .",
    "this modification is needed to take the nonlinear cac constraints into account .",
    "joint decoding of the cac and ecc has the advantage that it provides additional error correction compared to the standard approach of only using the ecc for error correction .",
    "indeed , the cac part of the factor graph provides extrinsic information that can be used by the message - passing decoder .",
    "the @xmath13 bits in @xmath17 , encoded as mentioned above , are transmitted over the bus and face random erasures .",
    "the input of the decoder is an @xmath13-tuple with each entry in @xmath57 , where we use @xmath58 to denote erasures , describing the output of the bus .",
    "the decoder is best explained in the language of the joint factor graph consisting of various nodes ( cf . fig .",
    "[ fig : factor2 ] ) .",
    "we refer to the wires in the bus , over which the cac encoded information bits are sent , as the information variable nodes of the factor graph .",
    "the parity - bits of the ira are called parity variable nodes .",
    "the cac and ecc constraints are called cac - check and ecc - check nodes , respectively .",
    "we consider the following message updates at the different nodes in the factor graph .    * _ information and parity variable - node updates : _ send an erasure message on an outgoing edge if all the incoming messages ( including the channel value ) are erasures , otherwise send the value ( either @xmath8 or @xmath9 ) of the non - erased incoming message . *",
    "_ cac node update : _ each cac - constraint node has degree two ( cf . fig .",
    "[ fig : factor2 ] ) and has two bits of the past bus state as other inputs through half - edges .",
    "we distinguish the two ( full ) edges , connecting the current bus state , by calling them _ left edge _ and _ right edge _ , respectively .",
    "let us assume for the moment that the past bus state for that constraint node is @xmath59 ( see the first cac constraint in fig .",
    "[ fig : factor2 ] ) . if the incoming message on the left edge is @xmath9 , then the outgoing message on the right edge is set to @xmath9 because the cac constraint prohibits the value @xmath60 in the current bus state . otherwise , the outgoing message on the right edge is set to @xmath58 .",
    "if the incoming message on the left edge is @xmath8 , then the outgoing message on the right edge is set to @xmath8 again because the cac constraint prohibits the value @xmath60 in the current bus state .",
    "otherwise the outgoing message on the left edge is set to @xmath58 .",
    "the cac - update rule is analogous for past bus state @xmath60 . *",
    "_ ecc check node update : _ an outgoing message is a non - erasure ( either @xmath8 or @xmath9 ) only if all the incoming messages are non - erased , in which case the outgoing message is set to be the xor of the incoming messages . otherwise , the outgoing message is set to @xmath58 .",
    "we use the following decoding schedule :    1 .   send messages from the information variable nodes to the cac check nodes .",
    "2 .   send messages from the cac check nodes to the information variable nodes .",
    "3 .   send messages from the information variable nodes to the ecc check nodes .",
    "4 .   send messages between the ecc check nodes and the parity variable nodes until the messages converge on the accumulate chain .",
    "send messages from the ecc check nodes to the information variable nodes .",
    "this process is repeated until all messages on all edges converge .",
    "initially , the messages sent from the variable nodes to the cac check nodes are the channel observations .",
    "the final value of an information variable node is declared to be an erasure if the incoming messages on all the edges connected to that node are in erasure , otherwise it is set to the value of any non - erased incoming message .",
    "we begin with the computation of the rate of our embedded joint cac and ecc scheme . we will compare this with the rate for the shielded joint cac and ecc from  @xcite .",
    "we next analyze the minimum distance of the proposed embedded joint cac and ecc scheme .",
    "all the results in this section pertain to arbitrary linear eccs ( not necessarily ira codes ) .",
    "recall from   that @xmath35 denotes the rate of the single cac for past bus state @xmath16 .",
    "we also denote by @xmath61 the rate of the single ecc .",
    "the next theorem provides the rate of the shielded cac - ecc encoder from  @xcite .",
    "[ thm : rate_shielded ] the rate @xmath62 of the shielded joint cac - ecc encoder from  @xcite is @xmath63    the rate for the proposed embedded joint cac and ecc scheme is given by the following theorem .",
    "[ thm : rate_embedded ] assume that the past bus state @xmath16 has sufficient number of free wires to carry all ecc parities . then the rate @xmath64 of the embedded joint cac - ecc encoder proposed in this paper is @xmath65    the proofs of theorems  [ thm : rate_shielded ] and  [ thm : rate_embedded ] are provided in appendices  [ sec : proofs_shielded ] and  [ sec : proofs_embedded ]",
    ". we can now compare the two rate expressions @xmath66 for the shielded and the embedded joint cac - ecc schemes .",
    "we start with a numerical example from the ddr4 sdram standard  @xcite .",
    "[ eg : ddr4 ] the ddr4 interconnect communication standard uses a rate @xmath67 cyclic - redundancy check ecc .",
    "assuming the past bus state @xmath16 is generated uniformly over @xmath37 , the cac rate is approximately @xmath68 with high probability for large enough @xmath13 ( cf .",
    "section  [ sec : background ] ) .",
    "hence , @xmath69 assume we want to transmit @xmath70 data bits ( resulting in @xmath71 cac encoded bits as mentioned in section  [ sec : intro ] ) .",
    "the shielded joint cac - ecc encoder from  @xcite requires @xmath72 wires .",
    "the embedded joint cac - ecc encoder proposed here requires only @xmath73 wires , thereby saving @xmath7 wires for the same number of parity bits conveyed .    as can be seen from this example ,",
    "the regime of practical interest is when the error correction code has rate @xmath61 close to one .",
    "assume then that @xmath74 for some small @xmath75 .",
    "then , @xmath76    for a concrete example , assume again that @xmath16 is generated uniformly over @xmath37 so that @xmath68 with high probability for large enough @xmath13 .",
    "then the embedded approach proposed here outperforms the shielded approach from  @xcite by approximately @xmath77 ( as long as it has sufficient free wires to hold the parities for the embedding which is the case with high probability when @xmath78 ) .",
    "more generally , it can be shown that @xmath79 for any past bus state @xmath16 with sufficient number of free wires .",
    "thus , the proposed embedded joint cac - ecc scheme always outperforms the shielded joint cac - ecc scheme from  @xcite .",
    "the proof of this fact is reported in appendix  [ sec : proofs_comparison ] .",
    "denote by @xmath80 the minimum distance of the ecc .",
    "the next theorem shows that the minimum distance of the embedded joint cac - ecc code is the same as that of the ecc alone .",
    "[ thm : dmin ] assume that the past bus state @xmath16 has sufficient number of free wires to carry all ecc parities .",
    "then the minimum distance @xmath81 of the embedded joint cac - ecc encoder is @xmath82    the proof of theorem  [ thm : dmin ] is reported in appendix  [ sec : proofs_dmin ] .",
    "the theorem shows that joint cac - ecc encoding does not increase minimum distance .",
    "in other words , the additional redundancy introduced by the cac requirement does not translate into increased minimum distance .",
    "this is , of course , somewhat disappointing .",
    "however , as we will see in the next section , the cac redundancy is nonetheless beneficial for error correction , since it _ does _ increase the iterative decoding threshold .",
    "in this section we will assume that the ecc is an ira code as described in section  [ sec : joint_encoder ] .",
    "we perform a density evolution analysis @xcite of the iterative decoder described in section  [ sec : joint_decoder ] .",
    "this analysis allows us to predict the performance of our embedded encoding scheme in the presence of random erasures .",
    "we begin in section  [ sec : density_notation ] by formally introducing the ensembles over which the analysis is performed .",
    "the casual reader may wish to skip this section and proceed directly to section  [ sec : deanalysis ] , which reports the density evolution analysis .",
    "density evolution is an average analysis and predicts the probability of error when averaged over an ensemble of codes .",
    "we next describe the ensemble of codes with the help of fig .",
    "[ fig : factor2 ] in section  [ sec : joint_encoder ] .",
    "we start with the probabilistic description of the past bus state @xmath16 .",
    "a natural assumption would be that @xmath16 is generated uniformly at random from @xmath37 . as we have seen in section  [ sec : background ] , with this assumption the expected number of alternating runs in @xmath16 of length @xmath38 is asymptotically @xmath83 .",
    "unfortunately , this assumption results in a cumbersome analysis , and we instead adopt a modified assumption on the generation of @xmath16 that is easier to handle and asymptotically equivalent as @xmath40 .",
    "recall that the past state @xmath16 can be thought of as a collection of alternating runs of various lengths , with free wires being alternating runs of length one . in our modified assumption",
    ", we will generate @xmath16 as the concatenation of independently generated such alternating runs of random length .",
    "fix the rate for the ecc to be @xmath84 $ ] .",
    "generate @xmath16 as two different parts @xmath85 and @xmath86 .",
    "the first part consists of @xmath87 independently generated alternating runs .",
    "each such alternating run has random length @xmath88 with identical probability given by @xmath89    let @xmath90 be the length of this first part .",
    "the expected value of this length is @xmath91 the bits in @xmath17 corresponding to @xmath85 will be used to carry the cac encoded information bits .    the second part @xmath86 is generated as @xmath92 alternating runs of length one .",
    "thus , the length @xmath93 of this second part is @xmath94 and has expected value @xmath95 the bits in @xmath17 corresponding to @xmath86 will be used to carry the accumulated parity bits .",
    "we generate the complete past bus state @xmath16 by randomly interleaving the alternating runs in @xmath85 and in @xmath86 , i.e. , with uniform distribution over all possible interleavings of the corresponding runs .",
    "the past state @xmath16 has thus expected length @xmath96 as required .",
    "we also point out that the expected number of alternating runs in @xmath16 of degree @xmath97 is @xmath98 and of degree @xmath99 is @xmath100 thus , asymptotically as @xmath40 , we expect that around @xmath83 of alternating runs in @xmath16 have length @xmath38 for any @xmath101 .",
    "thus , the natural way of generating the past bus state as being chosen uniformly at random from @xmath37 has the same asymptotic distribution of alternating runs .",
    "this also shows that , if @xmath102 , then there are asymptotically sufficient number of free wires to hold all parities .",
    "note that so far we have only described the length of the alternating runs of @xmath16 , but not their actual values .",
    "these are chosen by selecting the first bit of @xmath16 uniformly over @xmath103 independently of everything else .",
    "the remaining bits of @xmath16 are then fully specified by the alternating run structure .",
    "we consider an ecc that is randomly selected from an ensemble of ira codes as described next .",
    "the information bits are first encoded using the cac on the wires in @xmath17 corresponding to the past bus state @xmath85 . for the purpose of analysis",
    ", we assume that the cac - encoded information bits are chosen uniformly at random from the collection of all cac codewords @xmath104 compatible with @xmath85 .",
    "these bits are then fed to the ira code as systematic bits .",
    "then , the free wires in @xmath17 corresponding to the past bus state @xmath86 are set to the parity bits of the ira using the code s parity - accumulate structure .",
    "we start with the description of the connection of cac check nodes and information variable nodes . unlike what is depicted in fig .",
    "[ fig : factor2 ] , we represent each alternating run in @xmath85 by a single cac check node of degree @xmath38 . this cac check node is connected to the corresponding @xmath38 information variable nodes in @xmath17 .",
    "we continue with the description of the accumulate structure of the ira .",
    "we generate @xmath93 ecc checks , one for each of the parity variable nodes .",
    "we pair the ecc check nodes and the parity variable nodes by connecting them with an edge .",
    "note that the number of ecc checks is a random quantity here , chosen to match the random realization of @xmath93 .",
    "we further add an accumulation structure on the parity bits as shown in fig .",
    "[ fig : factor2 ] .",
    "this accumulation structure is needed to ensure that the code has a nontrivial threshold .",
    "we next describe the construction of the ldpc code linking the @xmath90 information variable nodes with the @xmath93 ecc check nodes .",
    "the design rate of this ldpc code is @xmath105 where the second equality follows from   and where the approximation is due to the concentration of @xmath90 and @xmath93 around their expected values as @xmath40 .",
    "note that , since @xmath106 $ ] , this design rate satisfies @xmath107 $ ] .",
    "denote by @xmath108 and @xmath109 the edge - perspective degree distributions of the ldpc code .",
    "denote by @xmath110 the normalized variable and check degree distribution generator polynomials from a node perspective corresponding to the normalized degree distribution generator polynomials from an edge perspective @xmath111 .",
    "the degree distributions are chosen to satisfy the desired design rate , @xmath112 or , more succinctly , @xmath113    the ldpc code linking the ecc checks with the information variable nodes is now generated by randomly connecting the information variable nodes to the ecc check nodes as in the standard ldpc ensemble using the degree distributions @xmath114 .",
    "recall that @xmath115 denote the edge - perspective degree distributions of the irregular ldpc part of the ira ensemble , which describe the connections between the information variable nodes and the ecc check nodes .",
    "further , let @xmath116 denote the edge - perspective degree distribution of the cac part .",
    "more precisely , @xmath116 is the probability that a randomly picked edge ( in the cac part ) is connected to a cac check node of degree @xmath38 . from the previous section",
    ", the degree distribution @xmath117 can be evaluated as @xmath118    for @xmath101 , denote by @xmath119 the fibonacci numbers as before . for each @xmath120 ,",
    "@xmath121 define the polynomial @xmath122 with coefficients @xmath123        consider now the messages being passed on the factor - graph edges by the decoder .",
    "let @xmath124 , @xmath125 , @xmath126 denote the fraction of erasure messages on the various edges as indicated in fig .",
    "[ fig : messages ] .",
    "the next theorem provides the density evolution equations for these erasure probabilities .",
    "[ thm : density ] the density - evolution equations for the iterative erasure decoder are @xmath127 here the @xmath128 and @xmath129 superscripts indicate outgoing and incoming messages , respectively .",
    "the proof of theorem  [ thm : density ] is reported in appendix  [ sec : proofs_density ] .",
    "recall that for each decoding iteration the accumulation part of the decoder is run until convergence .",
    "therefore , @xmath130 in theorem  [ thm : density ] satisfies the following fixed - point equation in every iteration : @xmath131 this can be solved for @xmath130 as @xmath132 by substituting this back into the system of equations in theorem  [ thm : density ] , it is not hard to see that we obtain a one - dimensional density evolution curve tracking solely the parameter @xmath133 .",
    "[ eg : de ] choose the ldpc code as a regular @xmath134 code .",
    "the design rate of this code is @xmath135 . together with the accumulated parities , the error correcting part of the embedded joint cac - ecc scheme has rate @xmath136 by .",
    "applying theorem  [ thm : rate_embedded ] and using that @xmath68 as seen in section  [ sec : background ] , the embedded joint cac - ecc scheme has rate equal to @xmath137 with high probability for large block length @xmath13 .     ldpc code . ]",
    "[ fig : de2 ] shows the density evolution for this setting .",
    "the threshold for the erasure channel is around @xmath138 .",
    "observe that , for an optimal code and map decoding , the threshold for the ecc part _ alone _ is @xmath139 .",
    "hence , even with suboptimal codes and decoding as performed here , the _ joint _ decoding of the ecc and cac allows us to operate above this threshold .",
    "thus , while the minimum distance of the joint cac - ecc scheme is the same as the minimum distance of the ecc alone by theorem  [ thm : dmin ] , joint cac - ecc decoding nonetheless increases the decoding threshold thanks to the valuable extrinsic information provided by the cac .",
    "we complement the asymptotic analysis with simulation results for a joint cac+ecc encoder and decoder . in our simulation",
    "setting , we use a fixed block length of @xmath13 and generate the past bus state @xmath16 uniformly at random over @xmath37 .",
    "since we are interested in the asymptotic behavior , we do not handle the case with insufficient free wires and simply declare an error in this case .",
    "[ fig : perr ] shows the resulting probabilities of bit and block error for a regular @xmath134 ldpc code for @xmath140 . both error probabilities exhibit a clear phase transition at the theoretically derived threshold of @xmath138 as expected .",
    "these simulation results also validate the modified ensemble ( with variable length of the prior bus state @xmath16 ) used for the asymptotic analysis .",
    "it is worth commenting on the behavior of the curves around erasure rate @xmath141 .",
    "the error probability is not zero in this regime due to insufficient free wires being treated as error events . for @xmath142 and @xmath143 as used here , a binomial approximation estimates this error event as happening with probability @xmath144 .",
    "the simulation results for @xmath142 yield @xmath145 . as the block length increases ,",
    "this error event has exponentially decreasing probability and is no longer apparent on the plots .",
    "the shielded joint cac - ecc encoder from  @xcite has the structure shown in fig .",
    "[ fig : shielded ] . by definition , @xmath146 since",
    "the parity bits are duplicated we have , @xmath147 from the equation for @xmath61 we can solve for @xmath148 as @xmath149 now , @xmath150 so that @xmath151 as claimed .",
    "since we send @xmath56 information bits over the @xmath13-wire bus , the rate of the joint cac and ecc scheme is given by @xmath152 .",
    "we want to express this in terms of the rate of the cac and the ecc . since @xmath11 bits on the non - free wires are used to generate the @xmath10 parity bits , and since we assume that @xmath16 has a sufficient number of free wires to carry those parities , we have @xmath153    we next compute the rate of the cac encoder . recall that this rate depends on the past state @xmath16 .",
    "since the past bus state gives rise to @xmath10 free wires , the cac encoder can put any information on these @xmath10 wires without affecting the setting of bits on the non - free wires .",
    "thus , we have @xmath154 information bits @xmath13-tuples across the bus . ] encoded by the cac to @xmath13 bits ( refer to fig .  [",
    "fig : encoder ] in section  [ sec : joint ] ) .",
    "thus , we have @xmath155 from the equation for @xmath61 we can solve for @xmath156 as @xmath157 hence , @xmath158 as required .",
    "we now show that @xmath79 for all possible past bus states @xmath16 with sufficient number of free wires .",
    "we start by lower bounding @xmath35 . recall that there are @xmath10 free wires on the bus , each of which can carry one information bit .",
    "furthermore , using the shielding argument seen earlier , we can transmit at least @xmath160 bits for each alternating run in @xmath16 of any length @xmath38 .",
    "this implies that the number of information bits that the single cac can send is at least @xmath161 hence , @xmath162    since @xmath163 , this implies @xmath164 from this , we obtain that @xmath165",
    "denote by @xmath166 and @xmath167 the collection of all codewords of the ecc and cac , respectively . we have dropped the dependence of the cac on the past bus state @xmath16 from the notation , but we stress that @xmath167 depends on @xmath16 .",
    "recall the notation @xmath168 for the minimum distance of the embedded joint cac and ecc scheme . since every codeword of the joint cac - ecc is in particular an element of @xmath166",
    ", we clearly have @xmath169 .",
    "we next prove the reverse inequality . in the following we use the notation @xmath170 $ ] to denote the set @xmath171 .",
    "let @xmath172 $ ] be the location of the parity bits and set @xmath173\\setminus\\mc{p}$ ] .",
    "for a vector @xmath174 of length @xmath13 , define @xmath175 , and similarly define @xmath176 .",
    "note that , since @xmath177 are the free wires with respect to @xmath16 , we can decide if a vector @xmath174 is in @xmath167 by only considering @xmath178 . with slight abuse of notation , we can therefore write @xmath179 to mean that @xmath180 .    let @xmath181 be a nonzero codeword of minimum weight , i.e. , @xmath80 by linearity of the ecc .",
    "note that @xmath182 might not be an element of @xmath167 .",
    "however , we next prove that we can find @xmath183 such that @xmath184 if this is the case , then we can find the whole codewords @xmath185 and @xmath186 in @xmath166 by computing the necessary parities of @xmath187 and @xmath188 ( recall that the ecc is systematic with the parity bits at locations @xmath189\\setminus\\mc{i}$ ] ) . by construction , we then have @xmath190 .",
    "moreover , by linearity of the ecc , @xmath191 .",
    "hence , the distance between @xmath185 and @xmath186 is @xmath192 , which shows that @xmath193 , as required .",
    "it remains to construct @xmath183 such that holds .",
    "parse the past bus state @xmath16 into alternating runs , where each such run is a contiguous subsequence of the form @xmath19 or @xmath20 .",
    "recall from section  [ sec : background ] that the cac constraints are active only within each such run , but not across its boundaries .",
    "consequently , we can construct @xmath187 for each such run independently and then simply concatenate the resulting pieces . in the following ,",
    "we will therefore consider , without loss of generality , a past bus state @xmath16 whose restriction @xmath194 consists of a single alternating run , say @xmath19 .",
    "we explain the procedure of constructing @xmath183 with the help of an example summarized in the following table where each row corresponds to a vector of @xmath195 bits . @xmath196",
    "observe that we can parse @xmath197 into positions where the cac constraints are satisfied with respect to @xmath194 and alternating runs where the constraints are violated ( indicated in bold red in the table ) . at positions where @xmath197 satisfies the cac constraints , we set @xmath187 to @xmath8 .",
    "consider then a run of violated constraints in @xmath197 .",
    "notice that each such run has length at least @xmath198 .",
    "if required , we choose the first and last bit in this run in @xmath187 such that the cac constraints are satisfied .",
    "the remaining bits in this run in @xmath187 are set to @xmath9 . with this construction",
    ", there is at least one value of @xmath9 in every alternating position of the run of violated cac constraints .",
    "this is enough to ensure that @xmath199 satisfies the cac constraints , as needed to be shown .",
    "throughout this section , we make the assumption that the local decoding neighborhood of each node is a tree .",
    "this assumption holds with high probability asymptotically as @xmath40 .",
    "the density evolution for the ecc part of the factor graph is standard .",
    "a message from an information variable node to a ecc - check node is an erasure if and only if the variable node is erased by the channel , the message from the cac - check node is an erasure , and the messages from all ecc - check nodes over the edges other then the current one are erasures .",
    "thus , the probability of erasure is @xmath200 a message from an ecc check node to an information variable node is an erasure unless all other incoming edges carry non - erasures .",
    "the probability of erasure is @xmath201 here , the factor @xmath202 arises because each ecc - check is also connected to two additional parity bits from @xmath86 ( refer to fig .  [ fig : messages ] ) .",
    "a message from a parity variable node to an ecc - check node is an erasure if the channel and the other edge coming from the ecc - check are erasures so that @xmath203 a message from an ecc - check node to a parity variable node is an erasure unless all its incoming messages are non - erasures so that @xmath204    consider next a message from an information variable node to a cac - check node .",
    "this message is an erasure if and only if the variable node is erased by the channel and the messages from all ecc - check nodes are erasures .",
    "hence , the probability of erasure is @xmath205    consider finally a message from a cac - check node to an information variable node . recall that the probability that this edge is connected to a cac - check node of degree @xmath38 is @xmath117 .",
    "let @xmath206 be the random variable describing the message over the edge under consideration , and let @xmath88 be the random variable describing the degree of the cac - check node under consideration . then the probability of erasure is @xmath207      consider next @xmath210 and assume that the edge under consideration is the first one .",
    "there are two equally likely possible alternating runs in @xmath16 that can correspond to this cac check node , @xmath211 and @xmath5 .",
    "assume for the moment that the run is @xmath211 .",
    "the set of all possible two - bit sequences in @xmath17 satisfying the cac constraint is then @xmath212 . by construction",
    ", these three possible sequences occur with uniform probability in the code ensemble .",
    "note that @xmath206 is a non - erasure if and only if the corresponding variable node has a value that is forced by its neighboring variable node . here",
    ", this happens if the neighboring ( second ) variable node takes value @xmath8 and is not erased , which forces the first variable node to have value @xmath8 as well .",
    "this situation holds in one of the three possible sequences above , and the probability of non - erasure is @xmath213 . by symmetry ,",
    "the same reasoning is valid if the edge under consideration is the second one .",
    "finally , again by symmetry , the same conclusion holds if the alternating run in @xmath16 is @xmath5 .",
    "thus , @xmath214    consider then @xmath215",
    ". there are again two equally likely possible past bus states , @xmath216 and @xmath217 .",
    "assume for now that we are in the first case .",
    "the set of all possible three - bit sequences in @xmath17 satisfying the cac constraints are @xmath218 , and each of them has probability @xmath219 by construction .",
    "assume that the edge under consideration is the first one ( i.e. , @xmath220 ) .",
    "for the first variable node to be forced , the second variable node has to take value @xmath8 .",
    "this happens for one out of the five possible sequences , namely @xmath221 .",
    "thus , for @xmath220 , the probability of @xmath206 being a non - erasure is @xmath222 by an analogous argument , for @xmath223 , the probability of @xmath206 being a non - erasure is @xmath224    for the middle edge ( @xmath225 ) , the variable node is forced if either neighboring variable node takes value @xmath9 .",
    "there is one sequence @xmath226 for which both these neighboring variable nodes have to be erased in order for the current message to be an erasure .",
    "there are two messages @xmath227 for which only one neighboring variable node has to be erased in order for the current message to be an erasure .",
    "thus , for @xmath225 , the probability of @xmath206 being a non - erasure is @xmath228    this argument was for alternating run in @xmath16 of @xmath216 . by symmetry",
    ", the same conclusion holds if the alternating run in @xmath16 is @xmath217 .",
    "since the edge is in relative position @xmath229 with probability @xmath230 , we thus have @xmath231    consider finally the case of general @xmath232",
    ". consider first edge position @xmath220 , and without loss of generality consider an alternating run in @xmath16 of @xmath19 .",
    "there are @xmath233 possible sequences that satisfy the cac constraints with respect to this alternating run . in order for the first variable to be forced to take value @xmath8 ,",
    "the sequence must be of the form @xmath234 , where @xmath235 indicates that the corresponding value can be either @xmath8 or @xmath9 .",
    "note that the third value is forced to @xmath8 to satisfy the cac constraints .",
    "there are @xmath236 such sequences . hence , for @xmath220 , the probability of @xmath206 being a non - erasure is @xmath237 by an analogous argument , for @xmath238 , the probability of @xmath206 being a non - erasure is @xmath239    consider then @xmath240 , and without loss of generality consider an alternating run in @xmath16 of @xmath241 , where @xmath229 is the position indicated in bold red font . for the variable node @xmath229 to be constrained from both sides ,",
    "the sequence in @xmath17 has to be of the form @xmath242 .",
    "there are @xmath243 such sequences . for the variable node @xmath229",
    "to constrained from only the left , in @xmath17 has to be of the form @xmath244 .",
    "there are @xmath245 such sequences .",
    "for the variable node @xmath229 to be constrained from only the right , the sequence in @xmath17 has to be of the form @xmath246 .",
    "there are @xmath247 such sequences .",
    "hence , for @xmath240 , the probability of @xmath206 being a non - erasure is @xmath248    these probabilities do not depend on the actual realization of the alternating run in @xmath16 other than its length .",
    "since the edge is in relative position @xmath229 with probability @xmath249 , we thus have @xmath250                            s.  r. sridhara and n.  r. shanbhag , `` coding for reliable on - chip buses : a class of fundamental bounds and practical codes , '' _ ieee trans . comput",
    ".- aided design integr .",
    "circuits syst .",
    "_ , vol .  26 , pp .  977982 , may 2007 ."
  ],
  "abstract_text": [
    "<S> decreasing transistor sizes and lower voltage swings cause two distinct problems for communication in integrated circuits . </S>",
    "<S> first , decreasing inter - wire spacing increases interline capacitive coupling , which adversely affects transmission energy and delay . </S>",
    "<S> second , lower voltage swings render the transmission susceptible to various noise sources . </S>",
    "<S> coding can be used to address both these problems . </S>",
    "<S> so - called crosstalk - avoidance codes mitigate capacitive coupling , and traditional error - correction codes introduce resilience against channel errors .    </S>",
    "<S> unfortunately , crosstalk - avoidance and error - correction codes can not be combined in a straightforward manner . on the one hand , </S>",
    "<S> crosstalk - avoidance encoding followed by error - correction encoding destroys the crosstalk - avoidance property . on the other hand , </S>",
    "<S> error - correction encoding followed by crosstalk - avoidance encoding causes the crosstalk - avoidance decoder to fail in the presence of errors . </S>",
    "<S> existing approaches circumvent this difficulty by using additional bus wires to protect the parities generated from the output of the error - correction encoder , and are therefore inefficient .    in this work </S>",
    "<S> we propose a novel joint crosstalk - avoidance and error - correction coding and decoding scheme that provides higher bus transmission rates compared to existing approaches . </S>",
    "<S> our joint approach carefully embeds the parities such that the crosstalk - avoidance property is preserved . </S>",
    "<S> we analyze the rate and minimum distance of the proposed scheme . </S>",
    "<S> we also provide a density evolution analysis and predict iterative decoding thresholds for reliable communication under random bus erasures . </S>",
    "<S> this density evolution analysis is nonstandard , since the crosstalk - avoidance constraints are inherently nonlinear . </S>"
  ]
}
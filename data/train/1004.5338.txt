{
  "article_text": [
    "let @xmath4 , and let @xmath5 be a poisson random measure defined on the interval @xmath6 $ ] , with the borel @xmath7-field , and control measure @xmath8 , which we assume to have a density @xmath9 .",
    "for appropriate functions @xmath10 $ ] , the poisson stochastic integral @xmath11 is a random variable defined as the limit in probability : @xmath12 for this limit to exist , we require that kernel @xmath3 satisfies @xmath13 the characteristic function of @xmath14 is expressible in terms of the control measure and kernel , and is given by @xmath15 for more details about poisson integrals and some discussion of applications , see @xcite , chapter 3 .    it is important to note that in the case where @xmath2 is a finite measure on @xmath16 , the distribution of @xmath17 is that of a compound poisson distribution .",
    "this can be seen in the case where @xmath18 is strictly increasing and has inverse @xmath19 by making a change of variable @xmath20 in the integral in ( [ e : poischarfunc ] ) : @xmath21 where @xmath22 , which is the characteristic function of a compound poisson distribution ( see proposition 1.2.11 in @xcite ) .",
    "thus , @xmath17 in this case has a compound poisson distribution with rate @xmath23 and jump distribution with density @xmath24 , @xmath25 .",
    "a similar argument shows this for non - monotone @xmath18 , except one must construct @xmath26 carefully by breaking the integral ( [ e : firstpoisint ] ) into pieces on which @xmath18 is either flat or strictly monotone .",
    "thus , by considering stochastic integrals of this type , we are covering a large class of interesting distributions .",
    "the distribution of integrals such as ( [ e : firstpoisint ] ) would be easy to obtain if the measure @xmath1 was gaussian . in this case",
    "@xmath14 is also gaussian : @xmath27 . since @xmath1 is poisson , however , the integral @xmath14 is not in general poisson and its distribution is not easy to determine .",
    "our goal here is to study the cumulative distribution function ( cdf ) of @xmath14 , which we denote by @xmath28 and develop a convenient numerical scheme to evaluate it . in particular , we focus on the following :    * a kolmogorov - feller type evolution equation associated to @xmath29 . * smoothness properties of @xmath29 .",
    "more specifically , we show that under certain assumptions on @xmath3 and @xmath2 , @xmath29 lives in the hlder space @xmath30 , for some @xmath31 depending on @xmath3 . * a numerical method for computing @xmath29 .    at first glance , one might attempt to compute the cdf @xmath29 using the characteristic function ( [ e : poischarfunc ] ) and the integration - based inversion methods of abate and whitt @xcite . for continuous @xmath29 ,",
    "their approach boils down to computing the following integral numerically : @xmath32 however , this method is not always efficient in this setting for multiple reasons .",
    "first , evaluating the characteristic function @xmath33 is not always easy , since @xmath34 is unlikely to have a closed form , and numerically computing this integral might be difficult .",
    "this adds another source of error on top of the `` truncation '' and `` discretization '' errors associated with the integration of ( [ e : abatesmet ] ) .",
    "moreover , these errors are difficult to bound exactly .",
    "secondly , we will see in the following that @xmath29 is not differentiable in general , which translates to a slow rate of decay of @xmath33 .",
    "this makes numerical integration difficult .",
    "we propose an alternative method for computing @xmath29 which does not involve ( directly ) the characteristic function ( [ e : poischarfunc ] ) .",
    "our method has several advantages over brute - force integration of ( [ e : abatesmet ] ) .",
    "first , our method only requires knowing @xmath3 and the density of the control measure @xmath2 , and thus is much faster than integration methods which must evaluate the characteristic function ( [ e : poischarfunc ] ) .",
    "second , we provide here error bounds given general assumptions on @xmath3 and @xmath2 .",
    "third , our method generates the cdf @xmath29 on an entire interval instead of a single point .",
    "fourth , we obtain the more general cumulative distribution functions @xmath35 , @xmath36 , of the following _ stochastic process _ : @xmath37 where @xmath38 is an independent random variable with given cdf @xmath39 . in the sequel",
    ", we illustrate some of these advantages on an example .",
    "our method involves solving an evolution equation satisfied by the cdf of @xmath40 with initial condition @xmath41 .",
    "a nice way to view such an evolution equation is to consider the characteristic function @xmath42 of ( [ e : xzeroplusint ] ) ( we will from hereon drop the `` @xmath3 '' subscript from @xmath43 ) . using ( [ e : poischarfunc ] ) , we have at time @xmath44 , @xmath45 where @xmath46 is the characteristic function of @xmath38 .",
    "differentiating with respect to @xmath47 gives @xmath48 thus , the characteristic function @xmath49 can be viewed as the solution at time @xmath47 of the simple ordinary differential equation ( [ e : poisftode ] ) with initial condition @xmath50 . with this ode perspective",
    ", the naive approach of brute - force integration can be thought of as a two step process : ( i ) evolving @xmath46 under the trivial dynamics of ( [ e : poisftode ] ) to obtain @xmath51 , and then ( ii ) computing ( [ e : abatesmet ] ) to get @xmath29 .",
    "an alternative approach of obtaining an evolution equation for @xmath29 is to notice that the process @xmath52 in ( [ e : xzeroplusint ] ) is a continuous time markov process , hence it satisfies the _ kolmogorov - feller forward equation _",
    "( @xcite , section 5.1 ) . in the infinitesimal time interval @xmath53",
    ", @xmath52 may take a jump of size @xmath54 with probability @xmath55 , thus , the kolmogorov - feller equation for the single - time density @xmath56 of the process @xmath52 takes the form @xmath57 integrating this equation suggests that a similar equation should hold for @xmath29 , however some technicalities arise because @xmath58 can contain `` atoms '' .",
    "we show directly that a similar equation holds for the cdf , with the exception of points where the cdf is discontinuous .",
    "we then solve this evolution equation numerically using a finite - difference scheme .",
    "this paper is outlined as follows . in section [ s :",
    "mainthm ] , we state a theorem which gives an evolution equation of the function @xmath29 .",
    "we then study the smoothness of the function @xmath59 in section [ s : holder ] .",
    "we then describe in section [ s : methods ] a numerical method for calculating @xmath29 using a finite - difference scheme , and provide a rate of convergence for our method . in section [ s : examples ] , we apply our methods to a collection of examples and in section [ s : approx ] , we establish lemmas related to the quality of the approximation . finally , in section [",
    "s : software ] we provide a guide to the software , written in matlab , which allows the user to obtain the cumulative distribution function and density function of the integral @xmath60 for general @xmath3 .",
    "in this section we show that the cdfs @xmath35 , @xmath61 of @xmath40 satisfy a kolmogorov - feller - type equation . as mentioned in the introduction ,",
    "the form of this equation is easy to guess based on the kolmogorov - feller equation ( [ e : genkol ] ) satisfied by the density of the process @xmath40 .",
    "since we will be dealing with distribution functions , we must be mindful of discontinuities which may arise . given a cdf @xmath29 , we will let @xmath62 denote the points of continuity of @xmath29 . also , we define the _",
    "right_-time derivative as @xmath63    the following theorem specifies the equation for @xmath29 which will be used the sequel .",
    "[ t : mainthm ] let @xmath64 be a right - continuous function satisfying ( [ e : poiscond ] ) , and consider the process @xmath65 where @xmath1 is a poisson random measure with control measure @xmath66 and @xmath38 is a given random variable .",
    "let @xmath35 be the cdf of @xmath52 at time @xmath47 .",
    "then , for all @xmath67 such that @xmath68 , @xmath29 satisfies the following equation : @xmath69    let @xmath70 such that @xmath71 and let @xmath72 . consider the difference @xmath73}(x(t+h ) ) -   { \\mbox{\\boldmath$1$}}_{(-\\infty , x]}(x(t))].\\ ] ] by conditioning on the number @xmath1 of poisson arrivals in the interval @xmath74 , the expectation on the right - hand side becomes @xmath75}(x(t+h ) ) -   { \\mbox{\\boldmath$1$}}_{(-\\infty , x]}(x(t ) ) ] = \\sum_{n=0}^\\infty   \\mathbb{e } [ { \\mbox{\\boldmath$1$}}_{(-\\infty , x]}(x(t+h ) ) - { \\mbox{\\boldmath$1$}}_{(-\\infty , x]}(x(t ) ) | n = n]\\ { \\mathrm{prob}}[n = n]\\ ] ] @xmath76}(x(t ) ) | n=1 ]   \\left ( \\int_t^{t+h } n(\\tau)d\\tau \\right ) e^{-\\int_t^{t+h } n(\\tau)d\\tau } + o(h^2).\\ ] ] here we have used that facts that if @xmath77 , @xmath78 , and the probability of seeing two or more poisson arrivals in the interval @xmath74 is @xmath79 since we ve assumed @xmath2 is continuous . in the event of one arrival in @xmath74 , namely @xmath80 , we have @xmath81 , where @xmath82 is a random time with density @xmath83 conditioning on @xmath84 , ( [ e : cond ] ) now becomes @xmath85}(x(t)+{g}(s ) ) - { \\mbox{\\boldmath$1$}}_{(-\\infty , x]}(x(t ) ) \\",
    "| \\ s = s ]   f_s(s ) ds \\right ) \\left ( \\int_t^{t+h } n(\\tau)d\\tau",
    "\\right ) e^{-\\int_t^{t+h } n(\\tau)d\\tau } + o(h^2)\\ ] ] @xmath86}(x(t)+{g}(s ) ) - { \\mbox{\\boldmath$1$}}_{(-\\infty , x]}(x(t ) ) ] n(s ) ds \\right ) e^{-\\int_t^{t+h } n(\\tau)d\\tau } + o(h^2)\\ ] ] @xmath87}(x(t ) ) - { \\mbox{\\boldmath$1$}}_{(-\\infty , x]}(x(t ) ) ] n(s ) ds \\right ) e^{-\\int_t^{t+h } n(\\tau)d\\tau } + o(h^2)\\ ] ] @xmath88 now , since @xmath59 is continuous at @xmath89 , @xmath3 is right continuous , and @xmath2 is continuous , let @xmath90 and get @xmath91 which completes the proof .",
    "* remarks .",
    "*    * if @xmath29 and @xmath3 are continuous , then the right and left time derivatives of @xmath29 coincide and the left hand side of ( [ e : mainde ] ) can be replaced with @xmath92 . * if @xmath93 and @xmath94 is continuous and monotone increasing , then @xmath95 as @xmath96 and the limit in ( [ e : takelim ] ) still exists , except we have instead @xmath97 where @xmath98 is the left - continuous version of @xmath29 ,",
    "i.e.  @xmath99 .",
    "this fact will be used in the sequel . *",
    "the continuity set @xmath62 can be identified from @xmath3 and @xmath2 as follows .",
    "we can write @xmath100 where @xmath1 is a poisson random variable with mean @xmath101 . then , the atoms of @xmath14 correspond to the atoms of the random sums @xmath102 , with @xmath103 and @xmath104 are the `` poisson events '' , which are i.i.d .  with density @xmath105 the continuity set @xmath62 is the complement of this set of atoms .",
    "+ for example , if @xmath106 , @xmath107 is a constant function , and @xmath108 , then the atoms of the random sums @xmath109 , which is the set @xmath110 . * to arrive at theorem [ t : mainthm ] , we used properties of the poisson integral to derive the evolution equation ( [ e : mainde ] ) .",
    "this reasoning can also be turned on its head  this theorem can give a probabilistic interpretation to initial value problems for a class of differential - difference equations of the form @xmath111 where @xmath2 , @xmath3 and @xmath112 are given functions and @xmath113 is an unknown function of @xmath114 and @xmath47 . by computing the cdf of the poisson stochastic integral ( [ e : firstpoisint ] ) , we are essentially computing the _ fundamental solution _ of this differential - difference equation , since the solution to ( [ e : poisivp ] ) can be written as the convolution of @xmath112 with the cdf @xmath35 of the integral ( [ e : firstpoisint ] ) up to time @xmath47 : @xmath115 + to illustrate this point , consider the following example : let @xmath116 be a given smooth function with derivative @xmath117 , and recall the classical transport pde : @xmath118 where , for simplicity , the initial condition @xmath112 is some smooth and bounded function .",
    "the solution to this equation is given by @xmath119 now , let @xmath120 , and say we want to interpret the solution to the following variation of ( [ e : transport ] ) where we replace @xmath121 with a finite - difference approximation : @xmath122 notice that ( [ e : transport1 ] ) is of the form ( [ e : mainde ] ) with @xmath123 , and @xmath124 .",
    "this corresponds to the trivial poisson random integral @xmath125 which has the distribution of the random variable @xmath126)$ ] , where @xmath127)$ ] has a poisson distribution with mean @xmath128 .",
    "+ observe that in this case , ( [ e : ddtruesol ] ) can be expressed as @xmath129))$ ] which is the convolution of @xmath112 with the cdf of @xmath130)$ ] .",
    "compare this to the solution of the classical transport equation ( [ e : soldrift ] ) .",
    "our goal is to develop a numerical scheme for approximating the cdf @xmath29 which is based on the differential - difference equation ( [ e : mainde ] ) . in order to estimate the error in our approximation to the true cdf , we must have some smoothness properties for @xmath29 , and thus make some assumptions on @xmath3 .",
    "we will assume that @xmath3 has a continuous inverse .",
    "while this seems like a restrictive assumption , we discuss ways of generalizing our method to non - invertible @xmath3 in section ( [ s : extend ] ) .    in the following , we assume that @xmath3 is a non - negative , strictly monotone continuous function on @xmath131 $ ] with inverse @xmath132 .",
    "we will also suppose that @xmath133 is a bounded function .",
    "since @xmath94 , the integral @xmath134 is zero if there are no poisson events in @xmath135 , i.e.  if @xmath136 which happens with probability @xmath137 .",
    "also , @xmath138 if @xmath139 . therefore ,",
    "@xmath140 for @xmath141 , @xmath29 has a jump of size @xmath142 at @xmath143 , and @xmath144 on the interval @xmath145 ( see figure [ f : pcartoon ] ) .",
    "having identified the discontinuity at @xmath146 in the cdf of @xmath29 , we now focus on the following question : how smooth is @xmath29 for @xmath147 ?",
    "this will depend on @xmath3 .",
    "near @xmath143 with @xmath47 fixed .",
    "we see a jump of size @xmath148 at @xmath146 which equals the probability of zero poisson events in time @xmath149 . also , @xmath35 is constant in the interval @xmath145 since with one or more poisson event in @xmath149 , @xmath150 is the minimum value the integral can take .",
    ", scaledwidth=100.0% ]    let @xmath151 .",
    "for functions @xmath113 defined on @xmath152 and for @xmath153 , recall the definition of the hlder seminorm @xmath154_{c^{0,\\gamma}(u ) } $ ] and the hlder space @xmath155 defined as @xmath156_{c^{0,\\gamma } ( u ) } & = & \\sup _",
    "{ \\underset{x\\neq y } { x , y \\in u   } }   \\frac { |u(x ) - u(y)| } { |x - y|^\\gamma } \\\\",
    "c^{0,\\gamma}(u ) & = & \\ { u\\ : \\ [ u]_{c^{0,\\gamma}(u ) } < \\infty \\}.\\end{aligned}\\ ] ] the exponent @xmath157 is called the hlder exponent of @xmath113 . for more on these spaces ,",
    "see @xcite section 5.1 .",
    "the next theorem shows that @xmath35 for @xmath147 and @xmath158 lies in the same hlder space as @xmath132 .",
    "[ t : holder ] let @xmath3 be a non - negative , strictly increasing continuous function on @xmath6 $ ] with inverse @xmath132",
    ". for @xmath159 fixed , let @xmath160 $ ] , where @xmath40 is defined by @xmath161 where @xmath1 is a poisson random measure with control measure @xmath162 with @xmath2 a bounded function .",
    "let @xmath163 then , if @xmath164 with @xmath153 , then @xmath165 and @xmath166_{c^{0,\\gamma } ( 0,\\infty ) } \\leq c_{n , t } \\ [ { g}^{-1}]_{c^{0,\\gamma } ( { g}(0),{g}(t ) ) } , \\ ] ] where the constant @xmath167 is given by @xmath168    fix @xmath158 and let @xmath169 be i.i.d .",
    "random variables with density @xmath170 let @xmath171 be the cdf of @xmath84 and let @xmath172 & = & \\begin{cases }   0 \\quad x < { g}(0 )   \\\\",
    "\\mathrm{prob}[s < { g}^{-1}(x ) ] \\quad { g}(0 ) \\leq x \\leq { g}(t ) \\\\",
    "1 \\quad   x > { g}(t ) \\end{cases } \\nonumber   \\\\   & = & \\begin{cases } 0 \\quad x < { g}(0 )   \\\\",
    "\\bar{n}_t({g}^{-1}(x ) ) \\quad { g}(0 ) \\leq x \\leq { g}(t ) \\\\",
    "1 \\quad   x > { g}(t ) \\end{cases}.",
    "\\label{e : defofgnbar}\\end{aligned}\\ ] ] by conditioning on the number of arrivals @xmath1 in the interval @xmath131 $ ] , we have for @xmath173 , @xmath174 - \\mathrm{prob}[\\sum_{i=1}^n { g}(s_i ) \\leq y ] \\right ) p_n\\right|\\ ] ] where @xmath175 $ ] .",
    "let @xmath176 denote the n - fold convolution of @xmath177 with itself .",
    "now we have @xmath178 thus , for @xmath153 , @xmath179 _ { c^{0,\\gamma } ( ( 0,\\infty ) ) } \\sum_{n=1}^\\infty p_n \\\\ & = &   ( 1 - e^{-\\int_0^t n(s ) ds } )   [ g ] _ { c^{0,\\gamma } ( ( 0,\\infty ) ) } \\label{e : bound1}\\end{aligned}\\ ] ]    what remains is to show that @xmath180 _ { c^{0,\\gamma } ( ( 0,\\infty ) ) } $ ] is bounded by a constant multiple of @xmath181 _ { c^{0,\\gamma}({g}(0),{g}(t ) ) } $ ] .",
    "observe that @xmath182 where @xmath183 is defined in ( [ e : defofnbar ] ) and thus @xmath184 , where @xmath185 . in view of ( [ e : defofgnbar ] ) , the mean value theorem implies that for @xmath186 , @xmath187 _ { c^{0,\\gamma}({g}(0),{g}(t ) ) } .\\ ] ] if @xmath188 , then @xmath189 and @xmath190 _ { c^{0,\\gamma}({g}(0),{g}(t ) ) } .\\ ] ] a similar argument shows this also holds for @xmath191 . finally , if @xmath192 or @xmath193 , then @xmath194 _ { c^{0,\\gamma}({g}(0),{g}(t ) ) } .\\ ] ] thus , in all cases , @xmath195 _ { c^{0,\\gamma}({g}(0),{g}(t ) ) } .\\ ] ] hence , ( [ e : bound1 ] ) and ( [ e : bound2 ] ) imply @xmath196_{c^{0,\\gamma}((0,\\infty ) ) }   \\frac { n^{\\star}_t ( 1 - e^{-\\int_0^t n(s ) ds } ) } { \\int_0^t n(s ) ds }   [ { g}^{-1 } ] _ { c^{0,\\gamma}({g}(0),{g}(t ) ) } = c_{n , t } \\ [ { g}^{-1 } ] _ { c^{0,\\gamma}({g}(0),{g}(t ) ) }   .\\ ] ] which finishes the proof .    in the preceding theorem",
    ", we assumed @xmath18 is monotone .",
    "what happens if @xmath3 is piecewise monotone , i.e.  @xmath54 is monotone on the intervals @xmath197 , for @xmath198 ?",
    "then , the integral of @xmath3 over @xmath199 can be `` constructed '' inductively by considering the sums @xmath200 with @xmath201 . since @xmath1 is a poisson measure , the summands in ( [ e : poissummands ] )",
    "are independent random variables .",
    "hence , the full cdf of @xmath202 can be seen as the successive convolution of the cdfs of the @xmath203 s above with the cdfs of the integrals @xmath204 .",
    "we know the smoothness of the cdf of each integral , but what about the smoothness of a convolution of two such cdfs ?",
    "the following corollary shows that the hlder exponent associated to the convolution of any two of these cdfs will , at worst , be the lesser of the two hlder exponents associated to the individual cdfs .",
    "[ c : sumis ] let @xmath3 , @xmath2 and @xmath40 and @xmath29 be as in theorem ( [ t : holder ] ) , and suppose @xmath38 is a non - negative random variable independent of @xmath40 with cdf @xmath205 .",
    "then , the cdf @xmath206 of the sum @xmath207 lies in the hlder space @xmath208 , where @xmath209 , and @xmath210_{c^{0,\\bar{\\gamma}}(0,\\infty ) } \\leq \\begin{cases } [ { f}]_{c^{0,\\gamma}(0,\\infty ) } + \\max(1,[{f}_0]_{c^{0,\\gamma_0}(0,\\infty ) } ) , \\qquad \\gamma_0 > \\gamma \\\\ [ { f}]_{c^{0,\\gamma}(0,\\infty ) }   + [ { f}_0]_{c^{0,\\gamma_0}(0,\\infty ) } ,   \\qquad \\qquad \\gamma_0 = \\gamma \\\\ [ { f}_0]_{c^{0,\\gamma_0}(0,\\infty ) } + \\max(1,[{f}]_{c^{0,\\gamma}(0,\\infty ) } ) , \\qquad \\gamma_0",
    "< \\gamma \\end{cases}\\ ] ]    let @xmath211 .",
    "observe first that if @xmath212 , then @xmath213_{c^{0,\\bar{\\gamma } } } \\leq \\frac{\\ { f}(x ) - { f}(y)}{|x - y|^{\\bar{\\gamma } } } & \\leq & \\begin{cases } 1 , \\qquad |x - y| \\geq 1 \\\\",
    "\\nonumber \\displaystyle \\frac{{f}(x ) - { f}(y)}{|x - y|^{\\gamma } } , \\quad |x - y| < 1 \\end{cases } \\\\   & \\leq & \\max(1 , [ { f}]_{c^{0,\\gamma}(0,\\infty ) } ) .",
    "\\label{e : holderinq1}\\end{aligned}\\ ] ] similarly , if @xmath214 , we have @xmath215_{c^{0,\\bar{\\gamma } } } \\leq \\max(1 , [ { f}_0]_{c^{0,\\gamma_0}(0,\\infty ) } ) .",
    "\\label{e : holderinq2}\\ ] ]    to compute the hlder norm to @xmath206 , we write it as the convolution of @xmath216 and @xmath217 : @xmath218 since @xmath219 on the negative real axis , the above simplifies to @xmath220 now , theorem ( [ t : holder ] ) and ( [ e : holderinq1 ] ) imply that @xmath221_{c^{0,\\gamma}(0,\\infty ) } , \\qquad \\gamma = \\bar{\\gamma } \\\\ \\max(1 , [ { f}]_{c^{0,\\gamma}(0,\\infty ) } ) \\qquad \\gamma > \\bar{\\gamma } \\end{cases}. \\label{e : gamgamp}\\end{aligned}\\ ] ] and , ( [ e : holderinq2 ] ) implies @xmath222_{c^{0,\\gamma_0}(0,\\infty ) } , \\qquad \\gamma_0 = \\bar{\\gamma } \\\\",
    "\\max(1 , [ { f}_0]_{c^{0,\\gamma_0}(0,\\infty ) } ) \\qquad \\gamma_0 > \\bar{\\gamma } \\end{cases}. \\label{e : gam0gamp}\\ ] ] thus , ( [ e : splitfbar ] ) , together with ( [ e : gamgamp ] ) and ( [ e : gam0gamp ] ) imply the result .",
    "corollary [ c : sumis ] points to a possible `` worst case '' result about the smoothness of a convolution of two cdfs with different smoothness properties on @xmath223 by saying this convolution @xmath224 on @xmath225 will lie in the larger of two hlder spaces ( @xmath226 and @xmath227 ) .",
    "this worst case occurs if @xmath29 and @xmath41 are both discontinuous at @xmath143 , as indicated in the following corollary .",
    "[ c : worstcase ] under the assumptions of corollary [ c : sumis ] , suppose further that @xmath41 has a discontinuity at @xmath146 and that @xmath226 and @xmath227 are the smallest hlder spaces to contain @xmath29 and @xmath41 , respectively .",
    "then , @xmath208 is the smallest hlder space to contain @xmath224 .    notice that if @xmath41 and @xmath29 are discontinuous at @xmath146 , the quotients ( [ e : gamgamp ] ) and ( [ e : gam0gamp ] ) can also be bounded below as @xmath228 and thus it follows from ( [ e : splitfbar ] ) that if @xmath229 and @xmath230 are the smallest hlder spaces to contain @xmath29 and @xmath41 , respectively , then taking supremums over all @xmath114 and @xmath231 above will cause one of these two ratios to become infinite if @xmath232 .",
    "thus , ( [ e : fbar2p ] ) implies that @xmath233 is the smallest hlder space to hold @xmath224 on @xmath225 .",
    "notice that for sums like ( [ e : poissummands ] ) , the corresponding cdfs will typically contain a jump at @xmath143 , thus the `` worst case '' is actually what occurs .",
    "there are standard finite - difference schemes for solving linear pdes ( see for instance @xcite , chapter 9 ) . in this section ,",
    "we describe such a scheme which can be used to solve ( [ e : mainde ] ) iteratively on the interval @xmath234 .",
    "we also study its convergence properties .    to begin , we need to define various components of a discrete approximation of @xmath35 which we will denote @xmath235 and define as follows .",
    "fix an interval @xmath236 $ ] and subdivide it with a step size of @xmath237 .",
    "that is , consider @xmath238 where @xmath239 is the size of the mesh ( assume @xmath240 is an integer ) .",
    "we will also use a time step @xmath241 and consider the time points @xmath242 , where @xmath243 . given a mesh @xmath244 , for each integer @xmath245 define the column vector @xmath246 as @xmath247 with @xmath248 . in order to measure `` closeness '' on this mesh",
    ", we will use the following discrete @xmath249 norm defined on @xmath244 : @xmath250 recall that for a @xmath251 matrix @xmath252 , the @xmath253 norm of @xmath254 is given by its maximal absolute column sum ( @xcite , problem 4.4.11 ) : @xmath255      we begin by rewriting equation ( [ e : mainde ] ) as @xmath256 \\equiv \\frac{\\partial}{\\partial t^+ } { f}(x , t ) + n(t)({f}(x , t ) - { f}(x-{g}(t),t ) ) = 0,\\ ] ] where @xmath257 is a linear operator defined on a suitable function space .",
    "we must first choose a discrete approximation of @xmath257 .",
    "for the time derivative , we use the usual forward difference approximation : @xmath258 where the @xmath259 are defined in ( [ e : colf ] ) . for the difference @xmath260",
    ", we use a linear interpolation @xmath261 where the integer @xmath262 satisfies @xmath263 , and @xmath264 . in terms of @xmath237 and @xmath265 ,",
    "these are given by @xmath266 see figure [ f : fdcartoon ] .",
    ", @xmath267 , @xmath262 , @xmath237 and @xmath268 . ]",
    "putting these approximations together , we define the _ forward difference _",
    "operator @xmath269 as @xmath270)_j = \\frac { { f}^{i+1}_j - { f}^{i}_j}{h } + n(i h ) ( { f}^i_j - ( 1-\\lambda_i ) { f}^i_{j - k_i } + \\lambda_i ) { f}^i_{j - k_i + 1 } ) \\ ] ] where @xmath271 are defined in ( [ e : defofk ] ) . in view of ( [ e : defoff ] ) , we require the sequence @xmath272 satisfy @xmath273 = 0 , \\qquad i=1,2,\\dots.\\ ] ] from ( [ e : def_of_ff ] ) , ( [ e : forwarditer ] ) can we written as @xmath274 we can write this in matrix form . since @xmath1 is the size of time ( @xmath275 ) mesh and @xmath276 is the size of the space ( @xmath277 ) mesh , we can express ( [ e : timestepup ] ) as @xmath278 where @xmath279 is the @xmath280 matrix should be treated as a sparse matrix to avoid running out of memory ] defined as @xmath281 where @xmath282 denotes the @xmath251 identity matrix , and @xmath283 is a @xmath284 zero matrix , and the @xmath285 matrix @xmath286 is @xmath287 with this , @xmath272 is easily calculated as @xmath288 where the initial condition @xmath289 is determined by the cdf of @xmath38 and is known exactly .      in this section",
    ", we study the error associated with solving differential - difference equation ( [ e : mainde ] ) with the finite - difference method described in the previous section",
    ". we ll require the following assumptions on the kernel @xmath3 and control measure @xmath2 : @xmath290    we will see that our method gives accuracy of order @xmath291 in the discrete @xmath249 norm , where @xmath157 is the hlder exponent of @xmath132 . as above , @xmath237 is the size of the spacial mesh , and @xmath265 is the size of the temporal mesh .",
    "we first consider the error associated with the approximations used in our discretization : @xmath292 consider the meshes @xmath293 and @xmath294 .",
    "for integers @xmath295 and @xmath296 , define the absolute differences @xmath297    in order to ensure convergence in our finite - difference scheme , these two errors must approach @xmath298 `` fast enough '' as @xmath299 .",
    "bounds for @xmath300 and @xmath301 are given in lemmas [ l : slem ] and [ l : rlem ] in section [ s : approx ] .",
    "in short , these lemmas imply the following : @xmath302 , let @xmath303 be the vector of _ exact _ values of @xmath29 at time @xmath304 , i.e. @xmath305 we will now state a theorem which shows that our method converges to the exact solution to ( [ e : mainde ] ) in the discrete @xmath249 norm with a convergence rate faster than a constant multiple of @xmath306 , i.e.  that @xmath307 and @xmath308",
    ".    as the proof of the following theorem will show , we will require the following _ stability criterion _ on @xmath265 to guarantee convergence : @xmath309 where @xmath310 and @xmath265 is the time step used in the finite - difference scheme .",
    "this can always be met easily if @xmath2 is bounded .",
    "this condition makes sense since the differential equation ( [ e : mainde ] ) holds because the probability of 2 or more poisson arrivals in an infinitesimal time interval is negligible .",
    "hence , when approximating ( [ e : mainde ] ) with a finite - difference method , we must ensure that the time step we consider is small enough relative to the control measure to make this probability small .",
    "[ t : errorbound ] let @xmath3 be a positive , continuous , and strictly increasing kernel with inverse @xmath311 for some @xmath153 .",
    "suppose the control measure @xmath133 is a bounded function and set @xmath312 .",
    "let @xmath313 be defined as in ( [ e : pexact ] ) and let @xmath272 @xmath314 be the approximations given by the forward difference scheme .",
    "then , if @xmath315 , the forward difference scheme is convergent and satisfies @xmath316    at each step in the iteration , write @xmath317 , where @xmath318 is the error introduced at step @xmath275 . then , since the initial condition @xmath289 is known exactly , we have @xmath319 after subtracting @xmath320 from both sides and taking norms , ( [ e : errorseries ] ) implies @xmath321 where @xmath322 and @xmath323 are defined respectively in ( [ e : epsnorm ] ) and ( [ e : anorm ] ) . from the definition of @xmath324 in ( [ e : defofamatrix ] ) and the stability condition @xmath325 , the norm @xmath326 is given by the maximum absolute sum of the columns of @xmath279 , which in our case is @xmath327 thus , ( [ e : boundstep1 ] ) becomes @xmath328    what remains is to bound @xmath329 using the differential equation ( [ e : mainde ] ) and the definitions of the errors @xmath300 and @xmath301 in ( [ e : defofs ] ) and ( [ e : defofr ] ) , we have @xmath330 \\ } \\nonumber \\\\ & = &   { f}(x_j , t_\\ell + h ) - { f}(x_j , t_\\ell )   - h [ n ( t_\\ell ) ( ( 1- \\lambda_\\ell ) { f}(x_{j - k_\\ell},t_\\ell ) + \\lambda_\\ell { f}(x_{j    - k_\\ell+1},t_\\ell )   - { f}(x_j , t_\\ell ) ) ] \\nonumber \\\\ & = &   { f}(x_j , t_\\ell + h ) - { f}(x_j , t_\\ell )   - h [ n ( t_\\ell ) (   { f}(x_j- { g}(t_\\ell),t_\\ell )    - { f}(x_j , t_\\ell ) + r_{j,\\ell}(\\delta )   ) ] \\nonumber \\\\ & = &    { f}(x_j , t_\\ell + h ) - { f}(x_j , t_\\ell )   - h [ \\frac { \\partial { f}}{\\partial t^+}(x_j , t_\\ell ) + n(t_\\ell ) r_{j,\\ell}(\\delta ) ]   \\nonumber \\\\ & = & s_{j,\\ell}(h ) -   n(t_\\ell ) r_{j,\\ell}(\\delta ) h .      \\label{e : epsilonbound1}\\end{aligned}\\ ] ]    now , for @xmath331 fixed , consider the following partition of the mesh @xmath244 in ( [ e : defofdelta ] ) : @xmath332 notice that @xmath333 contains at most one element . using ( [ e : epsilonbound1 ] ) combined with lemmas [ l : slem ] and [ l : rlem ] and that @xmath334 , we have @xmath335 finally , since @xmath336 , ( [ e : boundstep2 ] ) and ( [ e : bigos ] ) imply @xmath337 which finishes the proof .      in order to guarantee the error bound ( [ e : errorbound ] ) , we must assume that @xmath3 is a strictly increasing , continuous function whose inverse is hlder continuous .",
    "this assumption is somewhat restrictive , as we would like to apply our method to a wider set of kernels . in this section ,",
    "we indicate how to transform a problem with a general kernel into problem which satisfies the assumptions of theorem [ t : errorbound ] .    recall that if @xmath338 are independent non - negative random variables with respective cdfs @xmath339 , then the cdf of the sum @xmath340 is given by the convolution @xmath341 if @xmath342 and @xmath343 are both defined on a mesh @xmath344 , then the convolution ( [ e : convolve ] ) can be approximated by the discrete convolution @xmath345.\\ ] ]      if @xmath3 is a strictly _ decreasing _ kernel with hlder continuous inverse , then a simple variable transform re - expresses the integral into one with a strictly increasing kernel : @xmath346 where @xmath347 and @xmath348 is a poisson random measure with control @xmath349 .",
    "if @xmath350 is a constant function , then there is no need to approximate the cdf since its distribution is known exactly : @xmath351      if @xmath3 is a negative strictly monotone increasing / decreasing kernel with hlder continuous inverse , then the negative of the integral fits the proper assumptions : @xmath352 thus , ones computes the cdf of @xmath353 with the forward difference method , and then uses the relationship @xmath354 .      combining the above three ideas , the convolution formula ( [ e : discreteconvolve ] ) and the independent increment property of the random measure @xmath1 , we can approximate integrals with _ piecewise _ increasing / flat / decreasing , positive / negative kernels , whose inverse on each non - flat piece is hlder continuous .",
    "indeed , if @xmath3 is increasing / flat / decreasing and positive / negative between each of the points @xmath355 , then we have @xmath356 this sum on the right - hand side can be computed inductively by using the integral up to @xmath357 as an initial condition , and iterating until the cdf is computed up to @xmath358 .",
    "that is , set @xmath201 , and use our method to compute @xmath359 corollary [ c : sumis ] and theorem [ t : errorbound ] imply that the rate of convergence in this method in the @xmath249 norm will depend on , at worse , the minimum of the hlder exponents of @xmath132 over each of the intervals @xmath197 .",
    "we shall demonstrate our method on some examples .",
    "we start with @xmath360 where @xmath1 is a poisson random measure with control lebesgue : i.e.   @xmath361 .",
    "this example is simple enough to compute exactly , so it serves as an useful test case .",
    "the second example is where the kernel @xmath3 is a parabola @xmath362 and the control measure is again lebesgue . in this example",
    ", the kernel @xmath3 has an inverse which lies in the hlder space @xmath363 , and thus we expect the cdf to share this property . for purposes of comparison , we also compute this cdf by approximating the integral ( [ e : abatesmet ] ) .",
    "finally , we consider an integrand which is both positive and negative : @xmath364 with control measure lebesgue .",
    "this will demonstrate some of the ideas in section [ s : extend ] .",
    "recall that in each example , we will see a jump at @xmath146 of size @xmath365 in the cdf which is the probability of no poisson arrivals .      in this example",
    ", the kernel is the identity function @xmath367 , hence the integral is given by the sum of arrival times in @xmath368 .",
    "the number of arrivals follows a poisson distribution with rate @xmath369 and in the event of @xmath370 arrivals , the times of these arrivals are given by @xmath371 i.i.d",
    ".  random variables @xmath372 which are uniform on @xmath368 .",
    "thus , the cdf @xmath29 of @xmath373 can be expressed by conditioning on the number of poisson arrivals in the interval @xmath368 : @xmath374 \\mathrm{prob } [ \\mbox{$k$ arrivals}]=    \\sum_{k=0}^\\infty \\frac{p_k(x ) e^{-1 } } { k ! } , \\ ] ] where @xmath375 is the cdf of a sum of @xmath371 i.i.d .",
    "@xmath376 random variables .",
    "each @xmath377 can written as a piecewise polynomial , and can be computed recursively as @xmath378 the first few @xmath377 are @xmath379 notice that it suffices to take the first @xmath380 terms in the sum ( [ e : exactform1 ] ) , since @xmath381 , which is much more than the precision we seek .",
    "we generated @xmath382 on the interval @xmath383 with our method with @xmath384 .",
    "this is plotted in figure [ f : intsnds ] along with a numerical approximation of the density .",
    "we must choose @xmath385 to account for the error made in computing the cdf with step size @xmath237 . ] .",
    "notice the `` kink '' at @xmath386 in the cdf and the corresponding discontinuity in the density .",
    "this is consistent with theorem [ t : holder ] , since here the inverse of the kernel is simply @xmath387 , which lies in the space @xmath388 , so here we take @xmath389 .",
    "thus , we expect that the @xmath29 is at worst lipschitz continuous .",
    "this is indeed the case , since @xmath29 is a linear combination of the @xmath390 s , and @xmath391 is clearly in @xmath392 and no smaller hlder space .    using the first @xmath380 terms in the sum ( [ e : exactform1 ] )",
    ", we also computed this cdf on the interval @xmath393 and looked at the relative error between this and the result of our method .",
    "the relative error is plotted in figure [ f : intsndserr ] .",
    "we have excellent agreement over all @xmath114 with our method .    ) .",
    "the vertical line with a dot in the plot of the density represents a discrete atom in the distribution whose mass is the height of the vertical line . to compute this",
    ", we used the forward difference method with @xmath394 . on a 1.5 ghz computer ,",
    "this computation took less than 5 seconds using matlab .",
    "notice the `` kink '' in the cdf and discontinuity in the density at @xmath386 .",
    "this is not surprising , since here @xmath389 so expect the cdf to be at worst lipschitz continuous . ]    ) computed using our method , and the true value of the cdf computed with ( [ e : exactform1 ] ) .",
    "we see that our method gives accuracy of @xmath395 over all @xmath114 considered . ]      here we consider the more complicated example where @xmath398 for @xmath399 , which is a downward facing parabola with maximum value @xmath400 and roots at @xmath298 and @xmath401 .",
    "this function is piecewise monotone on the intervals @xmath368 , and @xmath402 , so the finite difference scheme can be applied first to compute @xmath403 for @xmath404 , and then subsequently for @xmath405 by using @xmath406 as an initial condition .",
    "the density can be obtained with numerical differentiation .",
    "this is shown in figure [ f : intparnds ] .",
    "notice the sharp corner in the cdf at @xmath407 and the corresponding singularity in the density .",
    "this illustrates the results of theorem [ t : holder ] and corollary [ c : worstcase ] , that is , the cdf lies in the smallest hlder space @xmath226 which contains the inverse of @xmath18 restricted to @xmath368 and the inverse of @xmath18 restricted to @xmath402 .",
    "in this case we have @xmath408 in both of these cases , @xmath409 , and thus we expect the cdf @xmath410 as well .    for comparison purposes , we also computed this cdf using the integration method of abate and whitt discussed briefly in the introduction . since this integral is only applicable for continuous @xmath29 , we first rewrite the characteristic function @xmath411 by `` removing '' the case where there are 0 arrivals , and considering this case separately , @xmath412 e^{0 } + \\left . \\mathbb{e }",
    "\\left [ \\exp\\left (   i \\theta      \\int_0 ^ 2 { g}(s ) n(ds )    \\right ) \\right|   n \\geq 1 \\right ] \\\\ & = & e^{-2 }   + \\left [ \\exp\\left ( \\int_0 ^ 2 ( e^{i \\theta { g}(s ) }    - 1 ) ds\\right ) - e^{-2 } \\right ] \\\\ & \\equiv & e^{-2 } + \\bar{\\phi}_g(\\theta).\\end{aligned}\\ ] ] then , using ( [ e : abatesmet ] ) the cdf @xmath29 is given by @xmath413 to approximate the integral in ( [ e : phibar ] ) , we truncate the infinite limit at @xmath414 , choose a mesh size @xmath415 and use a trapezoid approximation : @xmath416 where @xmath417 is the size of the mesh .",
    "notice that computing @xmath418 for every @xmath277 involves also computing the integral @xmath419 .",
    "to do so , we used the matlab function ` quad ` .",
    "the integrand is a highly oscillating function for large @xmath420 , causing numerical approximation methods to converge slowly .",
    "this makes computing the sum in ( [ e : trap ] ) _ extremely _ time - consuming for large @xmath421 .    in figure",
    "[ f : fdintcompare ] , we plotted the cdf around the kink at @xmath386 using these two methods .",
    "we used the finite - difference method with @xmath422 and @xmath423 , and used the integration method with @xmath424 , @xmath425 and @xmath426 and @xmath427 .",
    "notice that there is a small difference between the curves generated by the finite - difference method , which implies adequate convergence has been met . on the other hand ,",
    "the results of the integration have `` smoothed '' out the kink , implying a larger @xmath428 is required . moreover , the computation time for these methods varied drastically , to generate the curves in figure [ f : fdintcompare ] , the finite - difference method required less than 2 seconds , while integration requires about 8 minutes .    .",
    "in this case , the cdf is hlder continuous for @xmath429 with hlder exponent @xmath430 . as a result",
    ", we see a sharp `` corner '' in the cdf and a singularity in the density at @xmath407 . to generate the cdf",
    ", we used @xmath431 . , scaledwidth=100.0% ]    ) and the finite - difference scheme of section [ s : methods ] , zoomed in on the kink in the cdf at @xmath386 .",
    "the integration method takes over 200 times longer to implement , and it seems that even larger @xmath428 and smaller @xmath432 is required to obtain sufficient convergence . also",
    ", important features of @xmath29 are missed with integration , such as the kink at @xmath386 which is `` smoothed '' here .",
    "the finite - difference method , on the other hand , converges quickly in @xmath237 and @xmath265 , is much faster , and captures the kink in @xmath29,scaledwidth=100.0% ]       over the interval @xmath435 .",
    ", scaledwidth=100.0% ]    we now consider the poisson integral of one period of a sine wave which is a case where the kernel is both positive and negative . to compute the cdf @xmath216 ,",
    "we split up the integral as @xmath436 and note that the summands on the right are independent and satisfy @xmath437 .",
    "thus , if @xmath438 is the cdf of @xmath439 , then @xmath440 gives the cdf of @xmath441 .",
    "taking the convolution of @xmath442 and @xmath443 we use the symmetry of @xmath439 and @xmath441 and see @xmath444 the first term appears here since @xmath443 has a discontinuity at @xmath146 with size @xmath445 this gives an approximation to the cdf of the sum in ( [ e : breakitupp ] ) .",
    "the cdf and density of @xmath446 is plotted in figure [ f : intsinsnds ] .",
    "similar to example 2 , we see at @xmath447 two sharp corners in the cdf . to understand this , notice that on the interval @xmath448 the inverses of the function @xmath449 are given by @xmath450 in both of these cases , @xmath451 since the derivative at @xmath386 does nt exist and @xmath452 thus , theorem [ t : holder ] and corollary [ c : worstcase ] imply that @xmath453 , and similar to example 2 , this is evident by a kink in in @xmath442 at @xmath386 . since @xmath440 , @xmath454 ,",
    "and we expect a kink at @xmath455 . because @xmath442 and @xmath443 both have a discontinuity at @xmath146 , the convolution in ( [ e : convpp ] )",
    "can be written in two ways :    @xmath456    since @xmath457 has a kink at @xmath407 and @xmath443 has a kink at @xmath455 , ( [ e : split1 ] ) and ( [ e : split2 ] ) explain why you see kinks at @xmath458 in the convolution .",
    "this section contains the bounds on the approximation errors @xmath459 and @xmath460 defined in section [ s : error ] .",
    "recall that @xmath459 involves an approximation of the time derivative @xmath461 and @xmath460 involves an approximation of @xmath462 .",
    "the first lemma below bounds @xmath459 in terms of @xmath463 and @xmath464 .",
    "the second lemma bounds @xmath460 in terms of @xmath465 . here",
    "@xmath157 is the hlder exponent of @xmath132 .",
    "[ l : slem ] let @xmath459 be as in ( [ e : defofs ] ) , and assume @xmath18 and @xmath2 satisfy the assumptions in ( [ e : gnassump ] ) . then @xmath466_{c^{0,\\gamma}({g}(0),{g}(t ) ) } } { 1 + \\gamma } h^{1 + \\gamma } , \\quad   x_j - { g}(t_{\\ell + 1 } ) \\geq 0 \\\\ ( \\frac{n_t^{\\star } l_n}{2 } + 2 n^{\\star}_t ) h^2 \\qquad x_j - { g}(t_\\ell ) < 0 \\end{cases}\\ ] ] where @xmath467 is defined in theorem [ t : holder ] .",
    "let @xmath468 .",
    "as in the proof of theorem [ t : mainthm ] , we have @xmath469}(x(t_{\\ell}+h ) ) - { \\mbox{\\boldmath$1$}}_{(-\\infty , x]}(x(t_{\\ell } ) ) ]   \\nonumber \\\\ & = & \\sum_{n=0}^\\infty \\mathbb{e } [ { \\mbox{\\boldmath$1$}}_{(-\\infty , x]}(x(t_\\ell+h ) ) - { \\mbox{\\boldmath$1$}}_{(-\\infty , x]}(x(t_\\ell ) ) | n = n ] p_n \\nonumber \\\\ & = & \\left (   \\int_{t_\\ell}^{t_\\ell+h } ( { f}(x_j - { g}(s),t_\\ell ) - { f}(x_j , t_\\ell ) ) n(s ) ds   \\right ) e^{-\\int_{t_\\ell}^{t_\\ell+h } n(s)ds } \\nonumber    \\\\ & \\ &   + \\sum_{n=2}^\\infty \\mathbb{e } [ { \\mbox{\\boldmath$1$}}_{(-\\infty , x]}(x(t_\\ell+h ) ) - { \\mbox{\\boldmath$1$}}_{(-\\infty , x]}(x(t_\\ell ) ) | n = n ] p_n   \\label{e : alemstep1}\\end{aligned}\\ ] ] now , using ( [ e : mainde ] ) , ( [ e : alemstep1 ] ) , and the fact that @xmath470 , we have @xmath471 to obtain ( [ e : slem ] ) , we consider the three cases separately .",
    "we will use the following elementary inequalities involving @xmath472 for @xmath473 :    @xmath474    * case 1 .",
    "* @xmath475    this case contains the `` troublesome '' point , since @xmath476 and theorem [ t : mainthm ] does not necessarily apply .",
    "however , in view of ( [ e : leftversion ] ) in remark 2 after the proof of theorem [ t : mainthm ] , we have in any case @xmath477 and , from ( [ e : alemstep1 ] ) , @xmath478 using ( [ e : ebound2 ] ) , we have @xmath479 thus , for this case , @xmath480 which is consistent with ( [ e : slem ] ) .    * case 2 * : @xmath481 .",
    "since @xmath3 is monotone increasing , @xmath482 . from theorem [ t : holder ] and the lipschitz assumptions on @xmath2 and @xmath3 imply the first term in absolute values in ( [ e : alemstep2 ] ) can be rewritten and bounded as @xmath483 @xmath484_{c^{0,\\gamma}({g}(0),{g}(t ) ) }    \\int_{t_\\ell}^{t_\\ell+h } |{g}(s ) - { g}(t)|^\\gamma ds + \\int_{t_\\ell}^{t_\\ell+h } |n(s ) - n(t_\\ell ) | ds .",
    "\\nonumber \\\\ & \\leq & n^{\\star}_t c_{n , t } [ { g}^{-1}]_{c^{0,\\gamma}({g}(0),{g}(t ) ) } l_{{g}}^\\gamma \\int_{t_\\ell}^{t_\\ell+h } |s - t_\\ell|^\\gamma ds + l_n \\int_{t_\\ell}^{t_\\ell+h } |s - t_\\ell| ds \\nonumber \\\\ & = & n^{\\star}_t c_{n , t } [ { g}^{-1}]_{c^{0,\\gamma}({g}(0),{g}(t ) ) } l_{{g}}^\\gamma \\frac{h^{1+\\gamma}}{1 + \\gamma } + l_n \\frac{h^2}{2 } \\label{e : lemp1}\\end{aligned}\\ ] ] from ( [ e : ebound1 ] ) and since @xmath485 , the second term in ( [ e : alemstep2 ] ) is bounded by @xmath486 finally , the third term in ( [ e : alemstep2 ] ) is bounded by ( [ e : lemp3 ] ) . putting ( [ e : lemp1 ] ) , ( [ e : lemp2 ] ) and ( [ e : lemp3 ] ) together , gives @xmath487_{c^{0,\\gamma}({g}(0),{g}(t ) ) } l_{{g}}^\\gamma } { 1 + \\gamma } h^{1 + \\gamma } \\ ] ] which agrees with ( [ e : slem ] ) for this case .",
    "* @xmath488    in this case , many of the terms in ( [ e : alemstep2 ] ) drop out since @xmath140 for @xmath141 and @xmath3 is assumed to be non - negative . breaking up ( [ e : alemstep2 ] ) in a similar way to case 2 , we obtain @xmath489 this confirms ( [ e : slem ] ) and finishes the proof .    [",
    "l : rlem ] let @xmath460 be as in ( [ e : defofr ] ) , and assume @xmath3 satisfies the assumptions in ( [ e : gnassump ] ) . then @xmath490_{c^{0,\\gamma}({g}(0),{g}(t ) ) } \\delta^{\\gamma},\\ ] ] where @xmath467 is defined in theorem [ t : holder ] .    by the definitions of @xmath491 and @xmath492 , and",
    "since @xmath29 and @xmath3 are non - decreasing , we have @xmath493 these inequalities and theorem [ t : holder ] now imply @xmath494_{c^{0,\\gamma}({g}(0),{g}(t ) ) } |x_{j - k_\\ell + 1 } - x_{j - k_\\ell}|^\\gamma \\nonumber \\\\ & = & c_{n , t } [ { g}^{-1}]_{c^{0,\\gamma}({g}(0),{g}(t ) ) } \\delta^\\gamma.\\end{aligned}\\ ] ] this finishes the proof .",
    "software written in matlab for computing the cdf of a poisson integral of the form ( [ e : firstpoisint ] ) is freely available from the authors .",
    "this section will go over installation and use .",
    "once the file ` poisson_integral_gui.zip ` is downloaded and decompressed , move the folder `` ` poisson_integral_gui ` '' to your desired directory .",
    "launch matlab , and enter ` path(path,your_path / poisson_integral_gui ) ` , where ` your_path ` denotes the path to the folder ` poisson_integral_gui ` .",
    "you should now be able to use the code included with the package .    to begin , type ` poisson_integral_gui ` and press return .",
    "this will open a window similar to that shown in figure [ f : gui ] .",
    "from here you may enter the parameters into the `` inputs '' panel on the top left .",
    "these are : @xmath495 the kernel function and control measure should be entered as matlab expressions in terms of @xmath496 . for example , the kernel @xmath497 and lebesgue control measure @xmath361 are entered as ` sin(2 * pi * s)\\wedge2 ` and ` 1 ` , respectively",
    ". only non - negative kernels and control measures will be accepted .",
    "once all the parameters are entered , clicking on ` compute f ` will generate the cdf of the integral @xmath498 in the upper right plot , as well as a `` quick and dirty '' approximation of the continuous part of the density in the lower right plot .",
    "the density is approximated by fitting a smoothing spline to the cdf , then computing the derivative of this spline .",
    "the slider under the density plot allows you to adjust the smoothing parameter used in computation of the density .",
    "once a cdf is computed , you may compute specific values of the cdf using the `` outputs '' panel on the left . simply enter in a desired value in the @xmath114 slot , and press return .",
    "alternatively , you may select an @xmath114-value using the slide bar at the bottom of the panel .",
    "you can also enter a value in the @xmath499 slot to compute the inverse of the cdf .",
    "the lower left panel allows you to save the cdf data to your matlab workspace . to do this , enter a variable name , and click `",
    "this will create a variable on your workspace with your chosen name .",
    "this variable is an @xmath276 by 2 array whose first column contains the @xmath114 values @xmath500 and second column contains the corresponding cdf values , i.e.  @xmath501 ( here , @xmath276 denotes the size of the spatial mesh ) .    finally ,",
    "if the user wants to avoid using the interface , the code ` poissoncdf ` will work in the command line .",
    "this function takes in the six parameters listed above and outputs a vector containing the values of the cdf on the mesh points generated .",
    "the functions @xmath18 and @xmath2 must be entered as function handles .",
    "for example , if @xmath502 and @xmath361 , the call to this function would look like      the `` ` @ ` ''",
    "symbol is necessary because the input must be a so - called `` function handle '' .",
    "the statement above will return the vector ` f ` which contains the values of the cdf of the integral @xmath503 with lebesgue control measure for the values @xmath504 . for more on this function ,",
    "read the comments in the code ."
  ],
  "abstract_text": [
    "<S> we want to compute the cumulative distribution function of a one - dimensional poisson stochastic integral @xmath0 , where @xmath1 is a poisson random measure with control measure @xmath2 and @xmath3 is a suitable kernel function . </S>",
    "<S> we do so by combining a kolmogorov - feller equation with a finite - difference scheme . </S>",
    "<S> we provide the rate of convergence of our numerical scheme and illustrate our method on a number of examples . </S>",
    "<S> the software used to implement the procedure is available on demand and we demonstrate its use in the paper . </S>"
  ]
}
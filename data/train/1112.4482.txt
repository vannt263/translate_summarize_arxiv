{
  "article_text": [
    "in the last decade , multiphysics astrophysical simulations have increased exponentially in both sophistication and size @xcite ; however , the software tools to mine those simulations have not kept pace .",
    "typically , methods for examining data suffer from a lack of agility , discouraging exploratory investigation . to accommodate this",
    ", massively parallel visualization tools such as visit and paraview @xcite have been repurposed as domain - specific astrophysical tools .",
    "this repurposing , while effective , does not benefit from domain - specific analysis or data structures .",
    "the lack of domain - specific quantitative analysis tools designed for astrophysical data leads to the development of specialized tools by individual researchers or research groups , most of which are never shared outside the research group .",
    "this can substantially inhibit collaboration between different groups  even those using the same simulation code .",
    "this fractionation of the astrophysical community demonstrates a clear need for a flexible and cross - code software package for quantitative data analysis and visualization . in this paper",
    "we present ` yt ` @xcite , a data analysis and visualization package that works with several astrophysical simulation codes . `",
    "yt ` is developed openly and is freely available at ` http://yt-project.org/ ` .",
    "it has been designed to be a common platform for simulation analysis , so that scripts can be shared across groups and analysis can be repeated by independent scientists . by making this tool available , we hope not only to encourage cross - group collaboration and validation of results , but to remove or at least greatly lower the barrier to entry for exploratory simulation analysis . ` yt ` provides mechanisms for conducting complete analysis pipelines resulting in publication quality figures and data tables , as well as the necessary components for constructing new methods for examining data .",
    "the concepts for data handling and representation in ` yt ` are certainly not new , but their application to astrophysical data enables complex , detailed analysis pipelines to be shared between individuals studying disparate phenomena using disparate methods .",
    "this enables and even encourages reproducibility and independent verification of results .",
    "we have built this analysis and visualization code in python , using numpy @xcite for fast mathematical operations , ` mpi4py ` for mpi - parallelism @xcite , and optionally matplotlib for 2d visualization @xcite .",
    "additionally , several core library routines in ` yt ` such as the amr volume rendering , multi - dimensional binning , and file access routines , are written in cython .",
    "in addition to utilizing community - developed python modules , ` yt ` is itself a python module suitable for direct scripting or access as a library .",
    "a community of users and developers has grown around the project , with over 20 committers in the history of the project , and it has been used in numerous published papers and posters .",
    "( see , for example , @xcite . )    in order to accomodate the diverse computing environments on which astrophysical simulations are run , ` yt ` was designed to use primarily off - screen rendering and scripting interfaces , although several smaller tools are provided for specific , interactive visualization tasks .",
    "the former method is well - suited to remote visualization and can be run via a job execution queue on a batch - compute cluster , such as those on which the underlying simulation are run . ` yt ` is subdivided into several sub - packages for data handling , data analysis , and plotting .",
    "this modularity encourages the creation of reusable components for multi - step analysis operations .    while work continues on the exploratory , post - processing methods of data analysis and visualization that ` yt ` was originally designed for , current development has focused on analysis during the course of a simulation , or so - called _ in situ _ analysis .",
    "this allows for high - cadence analysis to be conducted without writing data to disk .",
    "future simulations , such as those to be conducted on petascale machines , will require analysis and visualization during the simulation rather than exclusively as a post - processing technique .    in this paper",
    ", we will describe the mechanisms that ` yt ` provides for accessing data (  [ sec : mechanisms ] ) , methods of interacting with ` yt ` (  [ sec : interacting ] ) , the visualization techniques offered by ` yt ` (  [ sec : visualization ] ) , the parallelism strategy for data analysis and generation of visualizations (  [ sec : parallelism ] ) , and end with a discussion of the process of embedding ` yt ` in running simulation codes and how this will be inverted in the future (  [ sec : embedding ] ) .",
    "` yt ` primarily operates on adaptive mesh refinement ( amr ) data , where the simulation domain is divided into spatially - organized zones along a regular mesh .",
    "regions requiring higher degrees of refinement to capture shocks , collapse , instabilities and so on are replaced with higher - resolution meshes ; in this manner , a stable and accurate solution is ensured at all locations .",
    "( for more information , see one of several astrophysics papers describing amr implementations , such as @xcite . )",
    "while ` yt ` is able to analyze collisionless particles ( such as dark matter or star particles ) , it is currently ill - suited to analysis of smoothed particle hydrodynamics ( sph ) simulations ; future versions will improve support .",
    "the vast majority of amr calculations in the astrophysical literature are computed on a rectilinear grid ; while this affords a number of computational efficiencies and conveniences , astrophysical phenomena as a whole are not rectangular prisms and thus are poorly suited for analysis as rectangular prisms .",
    "this presents a fundamental disconnect between the data structures utilized by simulations and the geoemetries found in nature .",
    "furthermore , the task of selecting geometric regions in space requires substantial overhead : masking of overlapping simulation regions , selective io , data selection , and so on . ` yt ` provides a number of convenience functions and mechanisms for addressing data within astrophysical simulations that make the process of handling and manipulating data straightforward .",
    "the ` yt ` codebase has been organized along several conceptual lines , each corresponding to a set of tasks or classes in python .",
    "the primary mechanisms for handling data are contained in the python module ` yt.data_objects ` , while all code and data structures specific to a particular simulation code resides within a submodule of ` yt.frontends ` ( such as ` yt.frontends.enzo ` , ` yt.frontends.orion ` , etc ) . in the current version of ` yt ` full support is provided for accessing and reading enzo @xcite , flash @xcite , orion @xcite and nyx codes , with preliminary support for ramses , art @xcite and several others .    to open a dataset , the user creates an instance of a simulation code - specific subclass of ` staticoutput ` , a lightweight class that scans a parameter file and obtains the necessary information to orient the dataset : the current time in the simulation , the domain information , the mechanisms for converting units , and the necessary file locations on disk . a convenience function ( ` load ` ) for automatically creating such an instance",
    "is provided , such that it only requires a path on disk to the dataset of interest .",
    "however , geometric information about the manner in which data is laid out on disk or in the simulation domain is compartmentalized to a ` amrhierarchy ` object .",
    "these objects are comparatively expensive to construct , as they contain a hierarchy of ` gridpatch ` objects , all of which posses spatial and parentage information .",
    "these objects are not instantiated or constructed until requested .",
    "all data access is mediated by ` amrhierarchy ` objects , as noted below .    by relegating data handling to individual instances of classes ,",
    "we compartmentalize datasets ; because each dataset is merely a variable , the number that can be opened and simultaneously cross - compared is only limited by the available memory and processing power of the host computer .",
    "furthermore , datasets from different simulation codes can be opened and compared simultaneously in memory .    when handling astrophysical data , it is appropriate to speak of geometric regions that outline the rough boundaries of physical objects : dark matter halos as ellipsoids , protostars as spheres , spiral galaxies as cylinders , and so on .",
    "the central conceit behind ` yt ` is the presentation to the user of a series of physical objects with the underlying simulation largely abstracted . for amr data",
    ", this means hiding the language of grid patches , files on disk and their interrelationships , and instead describing only geometric or physical systems ; these intermediate steps are handled exclusively by ` yt ` , without requiring any intervention on the part of the user .",
    "for instance , to select a spherical region , the user specifies a center and a radius and the underlying ` yt ` machinery will identify grid patches that intersect that spherical region , identify which grid patches are the most highly - refined at all regions within the sphere , locate the appropriate data on disk , read it and return this data to the user . by abstracting the selection of and access to data in this manner , operations that can be decomposed spatially or that are  embarrassingly parallel \" can be transparently parallelized , without requiring the user s intervention .",
    "the data containers implemented in ` yt ` include spheres , rectangular prisms , cylinders ( disks ) , arbitrary regions based on logical operations , topologically - connected sets of cells , axis - orthogonal and arbitrary - angle rays , and both axis - orthogonal and arbitrary - angle slices .",
    "data containers provide several methods for data access .",
    "the data can be accessed directly , as in the above code listing , or through abstractions such as _ object quantities _",
    ", where bulk operations are conducted such as calculating the angular momentum vector or the total mass .",
    "the abstraction of data into data containers leads to the creation of systems of components : data containers become `` sources '' for both analysis procedures as well as visualization tasks .",
    "these analysis procedures then become reusable and the basis for chains of more complicated analysis tasks . using such chains",
    ", a user can volume render a set of halos based on their angular momentum vectors , color particles by merger history , and even calculate disk inclination angles and mass fluxes .",
    "once a region of the simulation is selected for analysis , ` yt ` must process the raw data fields themselves . its model for handling this data and processing fundamental data fields into new fields describing _ derived values _ is built on top of an object model with which we can build automatically recursive field generators that depend on other fields .",
    "all fields , including derived fields , are allowed to be defined by either a component of a data file , or a function that transforms one or more other fields .",
    "this indirection allows multiple layers of definition to exist , encouraging the user to extend the existing field set as needed , using python functions as transformation and mathematical operators .",
    "the primary interface to ` yt ` is through a programmatic api .",
    "scripts are written and then executed , either in serial or in parallel through a batch queue .",
    "interactive helper functions , implemented using ipython , are also provided for tab - completion , figure handling and so forth .",
    "we provide a command - line utility with many common functions : plotting , statistics , volume rendering , halo finding , pastebinning , image uploading , bug reporting , and even uploading a script to the yt hub ( ` http://hub.yt-project.org/ ` ) to share with other users .",
    "recently , the ability to spawn a google maps - like interface has been added , to allow interactive panning and zooming of multi - resolution datasets from a web - browser .",
    "the most recent version of yt ( 2.2 ) features a new gui , entitled `` reason , '' as seen in figure  [ fig : reason ] . at many supercomputing centers , toolkits for constructing graphical user interfaces are not available or are extremely difficult to build and install .",
    "this greatly reduces the utility of creating a traditional gui . to circumvent this limitation ` yt ` provides a fully - integrated gui written in html and javascript ( extjs ) and served by a webserver ( bottlee and rocket ) running inside ` yt ` itself . rather than a large , bulky framework within which operations could be constructed and executed",
    ", this gui will presents a simple interactive interpreter that can be accessed through a web browser .",
    "this hosted interpreter dynamically creates user interface widgets as well as enabling inline display of newly - created images .",
    "the primary user interface is a single - cell which can be submitted to execute on the server ; additional convenience features such as embedded irc , pastebin support , image upload and bug reporting are also included .",
    "as this gui requires no client - side libraries or widgets , and as python itself provides all of the necessary tools on top of which this type of gui could be built , we believe this will be more maintainable and straightforward than a traditional gui .",
    "a user creates a new server on - demand on a supercomputing center login node and connects to it through an ssh tunnel from a local machine such as a laptop .",
    "remote analysis and visualization are then guided and driven through the locally - rendered web page , with results and images passed back asynchronously and displayed inline in the same web page .",
    "future versions will allow for parallel execution in batch queues and detachment and reattachment operations .",
    "` yt ` provides methods for creating 2d and 3d visualizations of simulation data .",
    "the mechanisms for creating 2d visualizations have two primary components : the data - handling portion and the figure creation or `` pixelization '' step .",
    "the former is composed of a set of objects which provide uniform access to 2d data objects , while the latter is a simple method for making plots quickly , which can be wrapped into other convenience functions ( both created by ` yt ` and external to ` yt ` . ) the figure creation in ` yt ` is motivated by a desire for simplicity : rather than attempting to accommodate the myriad use cases and user preferences , ` yt ` seeks to provide a set of routines that can be extended easily .",
    "users requiring complex figures for specific publications can take the 2d image pixel buffers provided by ` yt ` and feed them to any plotting package , though ` yt ` integrates most naturally with the matplotlib python module @xcite . here , we first describe each of the 2d pixalization mechanisms , and then the 3d volume rendering algorithms . futher information on the simple , built - in figure generation can be found in the ` yt ` documentation .",
    "the simplest means of examining data is plotting grid - axis aligned slices through the dataset .",
    "this has several benefits - it is easy to calculate which grids and which cells are required to be read off disk ( and most data formats allow for easy striding of data off disk , which reduces this operation s io overhead ) and the process of stepping through a given dataset is relatively easy to automate .    when handling astrophysical simulation data , one often wishes to examine either the sum of values along a given sight - line or a weighted - average along a given sight - line , in a _",
    "projection_. ` yt ` provides an algorithm for generating line integrals in an adaptive fashion , such that every returned @xmath0 point does not contain data from any points where @xmath1 or @xmath2 ; the alternative to this is a simple 2d image array of fixed resolution perpendicular to the line of sight whose values are filled in by all of the cells of the source object with overlapping domains .",
    "but , by providing this list of _ all _ finest - resolution data points in a projected domain , images of any field of view can be constructed essentially instantaneously ; conversely , however , the initial projection process takes longer , for reasons described below .",
    "we term the outputs of this process _",
    "adaptive projections_. for the santa fe light cone dataset @xcite , to project the entire domain at the highest resolution would normally require an image with @xmath3 values .",
    "utilizing this adaptive projection method , we require less than @xmath4 of this amount of image storage .",
    "direct ray casting through a volume enables the generation of new types of visualizations and images describing a simulation . `",
    "yt ` has the facility to generate volume renderings by a direct ray casting method .",
    "currently the implementation is implemented to run exclusively on the cpu , rather than faster hardware - based rendering mechanisms , but this also allows for clearer descriptions of the algorithms used for compositing , calculation of the transfer function , and future advances in parallelization .",
    "furthermore , it eases the task of informing volume renderings with other analysis results : for instance , halo location , angular momentum , spectral energy distributions and other derived or calculated information . in ` yt ` , volume rendering is exposed through a `` camera '' interface that allows for camera paths , zooms , stereoscopic rendering and easier access to the underlying vector plane .",
    "transfer functions that can automatically sample colormaps as well as one that provides off - axis line integrals are supplied , as well as a transfer function whose colors correspond to johnson filter - convolved planck emission with approximate scattering terms , as in @xcite . utilizing the healpix algorithm for equal latitudinal decomposition of a sphere @xcite ` yt ` also provides the ability to render @xmath5 images , suitable both for creating outward - facing sky maps and planetarium images .    .",
    "isocontours were placed at @xmath6 and @xmath7 @xcite.,scaledwidth=46.0% ]    by allowing for detailed control over the specification of the transfer function , viewing angle and generation of images , volume renderings that contain a scientific narrative are easier to create .",
    "for instance , in figure  [ fig : vr_binary ] we have constructed a volume rendering of the population iii star formation simulation described in @xcite , where a collapsing metal - free halo has been found to fragment into two distinct clumps .",
    "this volume rendering has been aligned such that the normal vector to the image plane is aligned with the angular momentum vector of the two - clump system .",
    "furthermore , the isocontours visible in the image have been selected such that they coincide with transitions between chemical states in the cloud .",
    "additional volume renderings based on derived fields describing chemical and kinetic quantities could be constructed , as well .",
    "as the capabilities of supercomputers grow , the size of datasets grows as well .",
    "most standalone codes are not parallelized ; the process is time - consuming , complicated , and error - prone . therefore ,",
    "the disconnect between simulation time and data analysis time has grown ever larger . in order to meet these changing needs , ` yt ` has been modified to run in parallel on multiple independent processing units on a single dataset .",
    "specifically , utilizing the message passing interface @xcite via the ` mpi4py ` python module @xcite , a lightweight , numpy - native wrapper that enables natural access to the c - based routines for interprocess communication , the code has been able to subdivide datasets into multiple decomposed regions that can then be analyzed independently and joined to provide a final result .",
    "a primary goal of this process has been to preserve at all times the api , such that the user can submit an unchanged serial script to a batch processing queue , and the toolkit will recognize it is being run in parallel and distribute tasks appropriately .",
    "the tasks in ` yt ` that require parallel analysis can be divided into two broad categories : those tasks that act on data in an unordered , uncorrelated fashion ( such as weighted histograms , summations , and some bulk property calculation ) , and those tasks that act on a decomposed domain ( such as halo finding and projection ) .",
    "all objects and tasks that utilize parallel analysis exist as subclasses of ` parallelanalysisinterface ` , which provides a number of functions for load balancing , inter - process communication , domain decomposition and parallel debugging . furthermore , ` yt ` itself provides a very simple parallel debugger based on the python built - in ` pdb ` module .",
    "to parallelize unordered analysis tasks , a set of convenience functions have been implemented utilizing an initialize / finalize formalism ; this abstracts the entirety of the analysis task as a transaction .",
    "signaling the beginning and end of the analysis transaction initiates several procedures , defined by the analysis task itself , that handle the initialization of data objects and variables and that combine information across processors .",
    "these are abstracted by an underlying parallelism library , which implements several different methods useful for parallel analysis . by this means , the intrusion of parallel methods and algorithms into previously serial tasks is kept to a minimum ; invasive changes are typically not necessary to parallelize a task .",
    "this transaction follows four steps .",
    "first , the list of grids to process is obtained .",
    "this is followed by initialization of the parallelism on the data object .",
    "each grid is then processed , and a finalize process is conducted on the data object .",
    "this is implemented through the python iterator protocol ; the initialization of the iterator encompasses the first two steps and the finalization of the iterator encompasses the final step .    inside the grid selection routine , ` yt ` decomposes the relevant set of grids into chunks based on the organization of the datasets on disk .",
    "implementation of the parallel analysis interface mandates that objects implement two gatekeeper functions for both initialization and finalization of the parallel process . at the end of the finalization step",
    ", the object is expected to be identical on all processors .",
    "this enables scripts to be run identically in parallel and in serial . for unordered analysis",
    ", this process results in close - to - ideal scaling with the number of processors .    in order to decompose a task across processors , a means of assigning grids to processors",
    "is required . for spatially oriented - tasks ( such as projections )",
    "this is simple and accomplished through the decomposition of some spatial domain . for unordered analysis tasks ,",
    "the clear means by which grids can be selected is through a minimization of file input overhead .",
    "the process of reading a single set of grid data from disk requires the opening of a file , seeking to the position of the dataset in that file , the actual reading of the data , and the file close operation . for those data formats where",
    "multiple grids are written to a single file , this process can be consolidated substantially by performing multiple reads inside a single file once it has been opened .",
    "if we know the means by which the grids and fields are ordered on disk , we can simplify the seeking requirements and instead read in large sweeps across the disk . by",
    "futher pre - allocating all necessary memory , this becomes a single operation that can be accomplished in one `` sweep '' across each file . by allocating as many grids from a single `` grid output '' file on a single processor , this procedure can be used to minimize file overhead on each processor .",
    "each of these techniques are implemented where possible .    in figure",
    "[ fig : scaling ] ( left panel ) we show the results of a strong - scaling study of conducting profiles of the final dataset from the santa fe light cone @xcite project .",
    "this dataset consists of @xmath8 computational elements .",
    "the dashed black corresponds to profiling in one dimension , and the solid line corresponds to profiling in two dimensions .",
    "overplotted in thin solid lines are the ideal scaling relationships , as calibrated to the time taken by 16 processors .",
    "we see nearly ideal strong scaling up to 128 processors , at which point overhead dominates ; we are essentially starving the processors of work at this scale .",
    "the overall time taken to conduct a profile is quite low , on one of the largest amr datasets in the published literature .",
    "we note also that the substantial speed difference between the two mechanisms of profiling , which is counter - intuitive , is a result of a difference in implementation of the histogramming method ; 1d profiles use a pure - python solution to histogramming , whereas 2d profiles use a hand - coded c routine for histogramming . future versions of ` yt ` will eliminate this bottleneck for 1d profiling and we expect to regain parity between the two methods .",
    "several tasks in ` yt ` are inherently spatial in nature , and thus must be decomposed in a spatially - aware fashion .",
    "mpi provides a means of decomposing an arbitrary region across a given number of processors . through this method",
    ", the ` parallelanalysisinterface ` provides mechanisms by which the domain can be divided into an arbitrary number of subdomains , which are then realized as individual data containers and independently processed .",
    "for instance , because of the inherently spatial nature of the adaptive projection algorithm implemented in ` yt ` , parallelization requires decomposition with respect to the image plane ( however , future revisions of the algorithm will allow for unordered grid projection . ) to project in parallel , the computational domain is divided such that the image plane is distributed equally among the processors ; each component of the image plane is decomposed into rectangular prisms ( ` amrregion ` instances ) along the entire line of sight .",
    "each processor is allocated a rectangular prism of dimensions @xmath9 where the axes have been rotated such that the line of sight of the projection is the third dimension , @xmath10 is constant across processors , and @xmath11 is the entire computational domain along the axis of projection .",
    "following the projection algorithm , each processor will then have a final image plane set of points , as per usual : @xmath12 but subject to the constraints that all points are contained within the rectangular prism as prescribed by the image plane decomposition . at the end of the projection step",
    "all processors join their image arrays , which are guaranteed to contain only unique points .    in figure",
    "[ fig : scaling ] ( right panel ) we show the results of a strong - scaling study of adaptively projecting the same dataset as above .",
    "the dashed line represents a projection of the density field , whereas the solid line represents projection in the absence of disk io .",
    "clearly the algorithmic overhead dominates the cost of disk io , but we also see strong scaling between 4 and 64 processors ; at 128 processors we see deviation from this . the relatively early termination of strong scaling ( 64 processors for this dataset , but we expect this to be higher for larger datasets ) as a result of algorithmic overhead is one of the motivations behind future improvements to the projection algorithm .",
    "however , from a pragmatic perspective , because ` yt ` creates adaptive projections , the time taken to project is a one - time investment and thus not a rate - determining step for post - processed analysis . for non - adaptive projections",
    ", the process of handling all of the data , conducting parallel reductions and outputting images must be undertaken for every chosen field of view .",
    "k @xmath13 k , with densities less than 50 times the cosmic mean density .",
    "the left panels show the results of this analysis performed using 252 simulation datasets written to disk , while the right panels show the identical analysis performed at every single integration timestep with an in - situ instantiation of ` yt ` . of note",
    "are three additional input and output phases identified in the in - situ analysis that were missed with the on - disk analysis.,scaledwidth=48.0% ]    an outstanding problem in the analysis of large scale data is that of interfacing with disk storage ; while data can be written to disk , read back , and then analyzed in an arbitrary fashion , this process is not only slow but requires substantial intermediate disk space for a substantial quantity of data that will undergo severely reductionist analysis @xcite . to address this problem ,",
    "the typical solution is to insert analysis code , generation of derived quantities , images , and so forth , into the simulation code .",
    "however , the usual means of doing this is through either a substantial hand - written framework that attempts to account for every analysis task , or a limited framework that only handles very limited analysis tasks . ` yt ` provides an explicit embedding api to enable in - line analysis .    by enabling in - line analysis ,",
    "the relative quantity of analysis output is substantially greater than that enabled by disk - mediated analysis ; the cadence of analysis tasks can be increased , leading to greater time - domain resolution . removing numerous large files dumped to disk as a prerequisite for conducting analysis and generating visualization allows for a much more favorable ratio of data to analyzed data .",
    "for example , in a typical population iii star formation simulation , such as in @xcite , the size of the data dumps can be as much as 10 gigabytes per timestep ; however , the relative amount of information that can be gleaned from these outputs is significantly smaller @xcite .",
    "using smaller data output mechanisms as well as more clever streaming methods can improve this ratio ; however , by enabling in - line analysis , images of the evolution of a collapsing population iii halo can be output at every single update of the hydrodynamical time , allowing for true `` movies '' of star formation to be produced . by allowing for the creation and exporting of radial profiles and other analytical methods ,",
    "this technique opens up vast avenues for analysis while simulations are being conducted , rather than afterward .    at the opposite end of the spectrum from simulations of population iii star formation , which involve deep and complex adaptive - mesh hierarchies , cosmological simulations of the evolution of large scale structure , e.g. @xcite , are characterized by static meshes that are much simpler but vastly greater in size .",
    "the largest simulations of @xcite , which had 1024@xmath14 grid cells , required roughly 135 gb of disk space for each dataset , of which 252 evenly spaced in time were written .",
    "this allowed for the study of time - dependent phenomenon with a resolution of approximately 55 million years .",
    "one of the primary goals of @xcite was to understand the movement of matter from one `` phase '' to another over cosmic time , where a phase is determined simply by the density and temperature .",
    "the flux of material from one phase to another was calculated by comparing two consecutive datasets written to disk and identifying grid cells in each dataset in which the phase had changed .",
    "an example of this is shown in the left panels of figure [ fig : phase_flux ] , in which all of the inputs ( top ) and outputs ( bottom ) into a single phase , the diffuse warm whim , are plotted .",
    "more recently , even larger simulations of this nature , with 1536@xmath14 grid cells , were run with the identical analysis performed .",
    "however , instead of using consecutively written datadumps , the analysis was performed during the simulation at every integration timestep using the in - situ capabilities of ` yt ` with grid data stored in memory .",
    "this allowed the phase flux analysis to be performed 5000 times instead of just 252 , for a factor of 20 higher time resolution , resulting in far greater insight into the phase evolution of matter , as is illustrated in the right panels of figure [ fig : phase_flux ] .",
    "the use of in - situ analysis was all the more necessary in this simulation as each dataset requires nearly 0.5 tb of disk space . at this scale ,",
    "performing this analysis on datasets written to disk with the equivalent time resolution would have require nearly 3 pb of storage space .",
    "the python / c api allows for passage of data in - memory to an instance of the python interpreter . `",
    "yt ` has been instrumented such that it can be accessed by an embedded python interpreter inside a simulation code , such that one interpreter instance exists for every mpi task . ` yt ` provides a clear api for passing the necessary geometric information from the simulation code to the analysis package . by utilizing thin wrappers around the memory",
    "in which field values and simulation data exist , the contents of the running simulation are exposed to ` yt ` and analysis can be conducted on them . while this currently works for many relatively simple tasks ,",
    "it is not currently able to decompose data spatially ; as we are constrained by the parallel nature of most domain decomposition algorithms , we attempt to avoid passing data between mpi tasks .",
    "this means if a grid resides within mpi task 1 , it will not be passed to mpi task 2 during the analysis stage .",
    "currently this mechanism for inline analysis has been exposed to enzo simulations , and we hope to extend this in the future to additional simulation codes .",
    "inline analysis will only become more important as simulations increase in size and scope , and future development in ` yt ` will make it easier , more robust , and more memory efficient . the primary mechanism by which ` yt ` will be embedded will change ; future iterations of the inline analysis interface will rely on communication between separate mpi jobs for simulation and analysis , rather than an analysis task that shares memory space with the running simulation code .",
    "this mechanism will allow asynchronous analysis tasks to be run , enabling the simulation to proceed while the user controls the data that is examined .",
    "additionally , the method for interfacing ` yt ` and simulation codes will be provided as a single c++ library that can be linked against , allowing it to be embedded by other developers .",
    "development on ` yt ` is driven by the pragmatic needs of working astrophysics researchers .",
    "several clear goals need to be met in the future , particularly as the size and scope of simulation data increases .",
    "we also hope to work with other research groups to add support for the visualization and analysis of output from other popular astrophysics simulation codes such as art , gadget , pluto @xcite , and zeus - mp @xcite .",
    "the most relevant improvement for very large simulation datasets is to improve load balancing for parallel operations .",
    "as noted above , for some operations this can be accomplished by avoiding image - plane decomposition .",
    "several efforts are underway to this end .",
    "both the volume rendering and projection algorithms load balance through decomposition of the image plane , which often leads to poor work distribution .",
    "these shortcomings are being addressed algorithmically : adaptive projections will utilize a quad tree , enabling better load balancing , and volume rendering will utilize a kd - tree approach combined with intermediate image composition .",
    "however , experimentation in quad tree projection algorithms have indicated that the most rate - determining step shifts , from io resulting from poor load balancing to a time - consuming merger step , wherein quad trees from different processors are merged .",
    "however , an underlying problem with the parallelization as it stands is the global state ; each instance of a python interpreter running ` yt ` currently runs in either `` parallel '' or `` serial '' mode .",
    "future versions of the ` yt ` parallel analysis interface will allow this to be toggled based on the task under consideration , as well as more convenience functions for distributing work tasks between processors  for instance , scatter / gather operations on halos .",
    "we intend to implement this on top of mpi , utilizing non - blocking probes to function as a queueing and task distribution system .",
    "improvements to the communication mechanisms for parallel analysis in ` yt ` will be necessary as _ in situ _ analysis grows more pervasive in large calculations . _ in situ _ analysis is challenging as it must necessarily proceed asynchronously with the simulation ; this will require careful data transport between ` yt ` and the simulation code .",
    "abstracting and isolating the engine that drives this communication will be necessary to enable ` yt ` to be embedded in simulation codes other than enzo .",
    "to this end , we have implemented a ",
    "stream \" frontend , suitable for supplying arbitrary data to ` yt ` .",
    "this can function either as a remote endpoint for mpi intercommunicators , or as input from paraview , translating vtk objects obtained through paraview s co - processing functionality into ` yt ` objects .",
    "the process of instrumenting simulation codes for inline analysis provides additional avenues for deeper control of the simulation code .",
    "typically , the process of execution of a simulation involves an initialization step , a main loop where modules that update the physical state of the simulation are executed in sequence and the current time of the simulation is updated , and then a finalization step , where memory is de - allocated , final outputs written and the simulation is terminated .",
    "the mechanism for calling physics modules is either extremely specific to a given code or relatively cumbersome .",
    "however , once the simulation code s internal structures have been exposed to the broader runtime environment , the conversion of this loop to a higher level language becomes more practical and useful .",
    "this would enable rapid testing of components such as load balancing schemes and physics modules .",
    "the process of modifying and debugging a code would be greatly simplified , and an interactive iteration through the main loop would ease the process of inspecting and debugging a simulation .",
    "new users would be able to interactively step through the physics modules , manually inspecting the updates to physical quantities and learning how the simulation code behaves , rather than tediously examining and recompiling .",
    "additionally , this provides the opportunity to interface more readily with co - scheduled visualization tools through mpi inter - communicators .    by abstracting the interface to underlying physics modules ,",
    "individual physics modules become trivially portable . in the future",
    "we intend to position ` yt ` as the outermost control structure for simulations of tera- and peta - scale problems",
    ". this will require substantial effort ; the first steps in this will be to identify an _ de facto _ , rather than _ de jure _ common api for physics modules typically used in astrophysical simulation codes such as enzo .",
    "we are developing wrappers for fundamental physics modules using cython .",
    "file system latency and read times become problematic even on the highest performance lustre file systems at processor counts in excess of @xmath15 , which requires the usage of a static - linking of utilized python libraries as well as the usage of zipfile - based module importing .",
    "in addition to this , in order to sidestep the issue of abi incompatibilities with mismatched c++ compilers , we have eschewed the usage of matplotlib for this purpose and instead have developed a simplified png file writer that wraps both libpng and freetype for rapid inspection of colorbars and plots .    through this process",
    ", we intend to push forward in efforts to unify simulation and analysis through high - level `` glue code '' such as ` yt ` for the largest scale simulations of star formation , galaxy formation , and the evolution of galaxy clusters and the intergalactic medium .",
    "the ` yt ` project is fully free and open source software , released under the gnu general public license , with no dependencies on external code that is not also free and open source software .",
    "the development process occurs completely in the open at ` http://yt-project.org/ ` , with publicly - accessible source control systems , bug tracking , mailing lists , and regression tests . building",
    "a community of users has been a priority of the ` yt ` development team , both to encourage collaboration and to solicit contributions from new developers ; both the user and developer communities are highly distributed around the world . ` yt ` is developed using mercurial , a distributed version control system that enables local versioned development and encourages users to make and contribute changes upstream .",
    "many of the operations conducted in ` yt ` : fluid analysis , phase diagrams , volume rendering , parallelism , and in situ analysis could feasibly be applied to domains other than astrophysics .",
    "we intend to generalize the underlying code base such that it can be applied to many other data formats in astrophysics , and ultimately we hope to provide these tools and techniques to domains other than astrophysics .",
    "our first steps toward this , providing a generic and arbitrary data loader , have shown that it is feasible .",
    "future versions of ` yt ` will generalize fields and particle handling , and should make this process much easier",
    ".    the creation of a freely available , publicly inspectable platform for simulation analysis allows the community to disentangle the coding process from the scientific process .",
    "simultaneously , by making this platform public , inspectable and freely available , it can be openly improved and verified . the availability and relatively approachable nature of ` yt ` , in addition to the inclusion of many simple analysis tasks , reduces the barrier to entry for young scientists . rather than worrying about the differences between enzo and flash hierarchy formats , or row versus column ordering , or hdf4 versus hdf5 versus unformatted fortran data formats",
    ", researchers can focus on understanding and exploring their data . more generally , however , by orienting the development of an analysis framework as a community project , the fragmentation of methods and mechanisms for astrophysical data analysis is greatly inhibited .",
    "future generations of simulations and simulation codes will not only benefit from this collaboration , but they will require it .",
    "m.j.t  was supported in this work by nsf ci tracs fellowship award oci-1048505 .",
    "b.d.s  acknowledges support by nasa grants atfp nnx09-ad80 g and nnz07-ag77 g and nsf grants ast-0707474 and ast-0908199 .",
    "both authors would like to thank the users and developers of ` yt ` , in particular jeffrey s.  oishi , samuel w.  skillman , stephen skory , cameron hummels , and john h.  wise .",
    "we also thank tom abel , greg l.  bryan , berk geveci , charles law , michael l.  norman , brian w.  oshea , jorge poco , and george zagaris for thoughtful discussions . `",
    "yt ` has been supported directly or indirectly over the years by a number of different funding agencies , including nsf , doe and academic institutions , and we are grateful for their support .",
    "v.  springel , s.  d.  m. white , a.  jenkins , c.  s. frenk , n.  yoshida , l.  gao , j.  navarro , r.  thacker , d.  croton , j.  helly , j.  a. peacock , s.  cole , p.  thomas , h.  couchman , a.  evrard , j.  colberg , f.  pearce , simulations of the formation , evolution and clustering of galaxies and quasars , 435 ( 2005 ) 629636 . http://arxiv.org/abs/arxiv:astro-ph/0504097 [ ] , http://dx.doi.org/10.1038/nature03597 [ ] .",
    "m.  kuhlen , j.  diemand , p.  madau , m.  zemp , the via lactea incite simulation : galactic dark matter substructure at high resolution , journal of physics conference series 125  ( 1 ) ( 2008 ) 012008+ .",
    "http://arxiv.org/abs/0810.3614 [ ] , http://dx.doi.org/10.1088/1742-6596/125/1/012008 [ ] .",
    "d.  r. reynolds , j.  c. hayes , p.  paschos , m.  l. norman , self - consistent solution of cosmological radiation - hydrodynamics and chemical ionization , journal of computational physics 228 ( 2009 ) 68336854 . http://arxiv.org/abs/0901.1110 [ ] , http://dx.doi.org/10.1016/j.jcp.2009.06.006 [ ] .    p.  ocvirk , c.  pichon , r.  teyssier , bimodal gas accretion in the horizon - marenostrum galaxy formation simulation , 390 ( 2008 ) 13261338 . http://arxiv.org/abs/0803.4506 [ ] , http://dx.doi.org/10.1111/j.1365-2966.2008.13763.x [ ] .        a.  almgren , j.  bell , d.  kasen , m.  lijewski , a.  nonaka , p.  nugent , c.  rendleman , r.  thomas , m.  zingale , maestro , castro , and sedona  petascale codes for astrophysical applications , arxiv e - printshttp://arxiv.org / abs/1008.2801 [ ] .      b.  fryxell , k.  olson , p.  ricker , f.  x. timmes , m.  zingale , d.  q. lamb , p.  macneice , r.  rosner , j.  w. truran , h.  tufo , flash : an adaptive mesh hydrodynamics code for modeling astrophysical thermonuclear flashes , 131 ( 2000 ) 273334 . http://dx.doi.org/10.1086/317361 [ ] .",
    "g.  h. weber , s.  ahern , e.  w. bethel , s.  borovikov , h.  r. childs , e.  deines , c.  garth , h.  hagen , b.  hamann , k.  i. joy , d.  martin , j.  meredith , prabhat , d.  pugmire , o.  rbel , b.  van  straalen , k.  wu , recent advances in visit : amr streamlines and query - driven visualization , in : numerical modeling of space plasma flows : astronum-2009 ( astronomical society of the pacific conference series ) , 2010 , lbnl-3185e . to appear .",
    "m.  j. turk , b.  d. smith , j.  s. oishi , s.  skory , s.  w. skillman , t.  abel , m.  l. norman , yt : a multi - code analysis toolkit for astrophysical simulation data , 192 ( 2011 ) 9+ .",
    "[ ] , http://dx.doi.org/10.1088/0067-0049/192/1/9 [ ] .",
    "j.  d. hunter , http://dx.doi.org/10.1109/mcse.2007.55[matplotlib : a 2d graphics environment ] , computing in science & engineering 9  ( 3 ) ( 2007 ) 9095 . http://dx.doi.org/10.1109/mcse.2007.55 [ ] .",
    "d.  w. silvia , b.  d. smith , j.  m. shull , numerical simulations of supernova dust destruction .",
    "i. cloud - crushing and post - processed grain sputtering , 715 ( 2010 ) 15751590 . http://arxiv.org/abs/1001.4793 [ ] , http://dx.doi.org/10.1088/0004-637x/715/2/1575 [ ] .    j.  o. burns , s.  w. skillman , b.  w. oshea , galaxy clusters at the edge : temperature , entropy , and gas dynamics near the virial radius , 721 ( 2010 ) 11051112 .",
    "[ ] , http://dx.doi.org/10.1088/0004-637x/721/2/1105 [ ] .",
    "m.  j. turk , t.  abel , b.  oshea , the formation of population iii binaries from cosmological initial conditions , science 325 ( 2009 ) 601. http://arxiv.org/abs/0907.2919 [ ] , http://dx.doi.org/10.1126/science.1173540 [ ] .",
    "kim , j.  h. wise , m.  a. alvarez , t.  abel , galaxy formation with self - consistently modeled stars and massive black holes .",
    "i. feedback - regulated star formation and black hole growth , 738 ( 2011 ) 54+ .",
    "http://arxiv.org/abs/1106.4007 [ ] , http://dx.doi.org/10.1088/0004-637x/738/1/54 [ ] .",
    "a.  aykutalp , m.  spaans , the complexity that the first stars brought to the universe : fragility of metal - enriched gas in a radiation field , 737 ( 2011 ) 63+ .",
    "http://arxiv.org/abs/1105.5158 [ ] , http://dx.doi.org/10.1088/0004-637x/737/2/63 [ ] .",
    "l.  iapichino , w.  schmidt , j.  c. niemeyer , j.  merklein , turbulence production and turbulent pressure support in the intergalactic medium , 414 ( 2011 ) 22972308 .",
    "[ ] , http://dx.doi.org/10.1111/j.1365-2966.2011.18550.x [ ] .",
    "a.  t. myers , m.  r. krumholz , r.  i. klein , c.  f. mckee , metallicity and the universality of the initial mass function , 735 ( 2011 ) 49+ . http://arxiv.org/abs/1102.2023 [ ] , http://dx.doi.org/10.1088/0004-637x/735/1/49 [ ] .",
    "d.  c. collins , p.  padoan , m.  l. norman , h.  xu , mass and magnetic distributions in self - gravitating super - alfvnic turbulence with adaptive mesh refinement , 731 ( 2011 ) 59+ .",
    "[ ] , http://dx.doi.org/10.1088/0004-637x/731/1/59 [ ] .",
    "a.  v. kravtsov , a.  a. klypin , a.  m. khokhlov , adaptive refinement tree : a new high - resolution n - body code for cosmological simulations , 111 ( 1997 ) 73+ .",
    "http://arxiv.org/abs/arxiv:astro-ph/9701195 [ ] , http://dx.doi.org/10.1086/313015 [ ] .",
    "m.  r. krumholz , r.  i. klein , c.  f. mckee , j.  bolstad , equations and algorithms for mixed - frame flux - limited diffusion radiation hydrodynamics , 667 ( 2007 ) 626643 . http://arxiv.org/abs/arxiv:astro-ph/0611003 [ ] , http://dx.doi.org/10.1086/520791 [ ] .",
    "r.  teyssier , cosmological hydrodynamics with adaptive mesh refinement .",
    "a new high resolution code called ramses , 385 ( 2002 ) 337364 .",
    "[ ] , http://dx.doi.org/10.1051/0004-6361:20011817 [ ] .",
    "e.  j. hallman , b.  w. oshea , j.  o. burns , m.  l. norman , r.  harkness , r.  wagner , the santa fe light cone simulation project . i. confusion and the warm - hot intergalactic medium in upcoming sunyaev - zeldovich effect surveys , 671 ( 2007 ) 2739 .",
    "http://arxiv.org/abs/0704.2607 [ ] , http://dx.doi.org/10.1086/522912 [ ] .",
    "r.  kaehler , j.  wise , t.  abel , h .- c .",
    "hege , gpu - assisted raycasting for cosmological adaptive mesh refinement simulations , in : proceedings of the international workshop on volume graphics 2006 , eurographics / ieee vgtc 2006 , boston , 2006 , pp .",
    "103110 .",
    "k.  m. gorski , e.  hivon , a.  j. banday , b.  d. wandelt , f.  k. hansen , m.  reinecke , m.  bartelman , http://www.citebase.org/abstract?id=oai:arxiv.org:astro-ph/0409513[healpix  a framework for high resolution discretization , and fast analysis of data distributed on the sphere ] , the astrophysical journal 622 ( 2005 ) 759 .",
    "http://arxiv.org/abs/astro-ph/0409513      b.  d. smith , e.  j. hallman , j.  m. shull , b.  w. oshea , the nature of the warm / hot intergalactic medium .",
    "i. numerical methods , convergence , and o vi absorption , 731 ( 2011 ) 6+ .",
    "http://arxiv.org/abs/1009.0261 [ ] , http://dx.doi.org/10.1088/0004-637x/731/1/6 [ ] .",
    "a.  mignone , g.  bodo , s.  massaglia , t.  matsakos , o.  tesileanu , c.  zanni , a.  ferrari , pluto : a numerical code for computational astrophysics , 170 ( 2007 ) 228242 .",
    "[ ] , http://dx.doi.org/10.1086/513316 [ ] .",
    "j.  c. hayes , m.  l. norman , r.  a. fiedler , j.  o. bordner , p.  s. li , s.  e. clark , a.  ud - doula , m.  mac low , simulating radiating and magnetized flows in multiple dimensions with zeus - mp , 165 ( 2006 ) 188228 .",
    "[ ] , http://dx.doi.org/10.1086/504594 [ ] ."
  ],
  "abstract_text": [
    "<S> the usage of the high - level scripting language python has enabled new mechanisms for data interrogation , discovery and visualization of scientific data . </S>",
    "<S> we present ` yt ` , an open source , community - developed astrophysical analysis and visualization toolkit for data generated by high - performance computing ( hpc ) simulations of astrophysical phenomena . through a separation of responsibilities in the underlying python code , ` yt ` allows data generated by incompatible , and sometimes even directly competing , astrophysical simulation platforms to be analyzed in a consistent manner , focusing on physically relevant quantities rather than quantities native to astrophysical simulation codes . </S>",
    "<S> we present on its mechanisms for data access , capabilities for mpi - parallel analysis , and its implementation as an _ in situ _ analysis and visualization tool . </S>"
  ]
}
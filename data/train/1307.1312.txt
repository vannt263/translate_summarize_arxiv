{
  "article_text": [
    "the numerical approximation of initial value ordinary differential equations is a fundamental problem in computational science , and many integration methods for problems of different character have been developed @xcite . among different solution strategies ,",
    "this paper focuses on a class of iterative methods called spectral deferred corrections ( sdc ) @xcite , which is a variant of the defect and deferred correction methods developed in the 1960s @xcite . in sdc methods , high - order temporal approximations",
    "are computed over a timestep by discretizing and approximating a series of correction equations on intermediate substeps .",
    "these corrections are applied iteratively to a provisional solution computed on the substeps , with each iteration  or _ sweep _  improving the solution and raising the formal order of accuracy of the method , see e.g.  @xcite .",
    "the correction equations are cast in the form of a picard integral equation containing an explicitly calculated term corresponding to the temporal integration of the function values from the previous iteration .",
    "substeps in sdc methods are chosen to correspond to gaussian quadrature nodes , and hence the integrals can be stably computed to a very high order of accuracy .",
    "one attractive feature of sdc methods is that the numerical method used to approximate the correction equations can be low - order ( even first - order ) accurate , while the solution after many iterations can in principal be of arbitrarily high - order of accuracy .",
    "this has been exploited to create sdc methods that allow the governing equations to be split into two or more pieces that can be treated either implicitly or explicitly and/or with different timesteps , see e.g.  @xcite .    for high - order sdc methods constructed from low - order propagators , the provisional solution and the solution after the first few correction iterations are of lower - order compared to the final solution .",
    "hence it is possible to reduce the computational work done on these early iterations by reducing the number of substeps ( i.e. quadrature nodes ) since higher - order integrals are not yet necessary . in @xcite ,",
    "the number of substeps used in initial iterations of sdc methods is appropriately reduced to match the accuracy of the solution , and the methods there are referred to as _",
    "ladder methods_. ladder methods progress from a low - order coarse solution to a high - order fine solution by performing one or more sdc sweeps on the coarse level and then using an interpolated ( in time and possibly space ) version of the solution as the provisional solution for the next correction sweep . in",
    "both @xcite the authors conclude that the reduction in work obtained by using ladder methods is essentially offset by a corresponding decrease in accuracy , making ladder methods no more computationally efficient than non - ladder sdc methods . on the other hand , in @xcite , sdc methods for a method of lines discretizations of pdes are explored wherein the ladder strategy allows both spatial and temporal coarsening as well as the use of lower - order spatial discretizations in initial iterations .",
    "the numerical results in @xcite indicate that adding spatial coarsening to sdc methods for pdes can increase the overall efficiency of the timestepping scheme , although this evidence is based only on numerical experiments using simple test cases .",
    "this paper significantly extends the idea of using spatial coarsening in sdc when solving pdes .",
    "a general multi - level strategy is analyzed wherein correction sweeps are applied to different levels as in the v - cycles of multigrid methods ( e.g. @xcite ) . a similar strategy is used in the parallel full approximation scheme in space and time ( pfasst ) , see  @xcite and also  @xcite , to enable concurrency in time by iterating on multiple timesteps simultaneously .",
    "as in nonlinear multigrid methods , multi - level sdc applies an fas - type correction to enhance the accuracy of the solution on coarse levels .",
    "therefore , some of the fine sweeps required by a single - level sdc algorithm can be replaced by coarse sweeps , which are relatively cheaper when spatial coarsening strategies are used .",
    "the paper introduces mlsdc and discusses three such spatial coarsening strategies : ( 1 ) reducing the number of degrees of freedom , ( 2 ) reducing the order of the discretization and ( 3 ) reducing the accuracy of implicit solves . to enable",
    "the use of a high - order compact stencils for spatial operators , several modifications to sdc and mlsdc are presented that incorporate a weighting matrix .",
    "it is shown for example problems in one and two dimensions that the number of mlsdc iterations required to converge to the collocation solution can be fewer than for sdc , even when the problem is poorly resolved in space .",
    "furthermore , results from a three - dimensional benchmark problem demonstrate that mlsdc can significantly reduce time - to - solution compared to single - level sdc .",
    "the details of the mlsdc schemes are presented in this section . the original sdc method is first reviewed in  [ subsec : sdc ] , while mlsdc along with a brief review of fas corrections , the incorporation of weighting matrices and a discussion of different coarsening strategies is presented in ",
    "[ subsec : mlsdc ] .",
    "sdc methods for odes were first introduced in @xcite , and were subsequently refined and extended e.g. in  @xcite .",
    "sdc methods iteratively compute the solution to the collocation equation by approximating a series of correction equations at spectral quadrature nodes using low - order substepping methods .",
    "the derivation of sdc starts from the picard integral form of a generic ivp given by @xmath0 where @xmath1 $ ] , @xmath2 , and @xmath3 .",
    "we now focus on a single timestep @xmath4 $ ] , which is divided into substeps by defining a set of quadrature nodes on the interval . here",
    "we consider lobatto quadrature and denote @xmath5 nodes @xmath6 such that @xmath7 .",
    "we now denote the collocation polynomial on @xmath8 $ ] by @xmath9 and write @xmath10 . in order to derive equations for the intermediate solutions @xmath11",
    ", we define quadrature weights @xmath12 where @xmath13 are the lagrange polynomials defined by the nodes @xmath14 , and @xmath15 . inserting @xmath9 into   and noting that the quadrature with weights defined in   integrates the polynomial @xmath9 exactly ,",
    "we obtain @xmath16 for a more compact notation , we now define the _ integration matrix _ @xmath17 to be the @xmath18 matrix consisting of entries @xmath19 .",
    "note that because we use gauss - lobatto nodes , the first row of @xmath17 is all zeros .",
    "next , we denote @xmath20^t,\\nonumber\\ ] ] and @xmath21^t : = \\left [ f(u_0 , t_0 ) , \\ldots , f(u_m , t_m ) \\right]^t . \\nonumber\\ ] ] in order to multiply the integration matrix @xmath17 with the vector of the right - hand side values , we define @xmath22 where @xmath23 is the identity matrix and @xmath24 is the kronecker product . with these definitions , the set of equations in",
    "can be written more compactly as @xmath25 where @xmath26 .",
    "is an implicit equation for the unknowns in @xmath27 , and is also referred to as the collocation formulation . because we use gauss - lobatto nodes , the value @xmath28 readily approximates the solution @xmath29 .    here , we consider odes that can be split into stiff ( @xmath30 ) and non - stiff ( @xmath31 ) pieces so that @xmath32 sdc iterations begin by spreading the initial condition @xmath33 to each of the collocation nodes so that the provisional solution @xmath34 is given by @xmath35 $ ] .",
    "we define by @xmath36 the quadrature weights for node - to - note integration , approximating integrals over @xmath37 $ ] , and as @xmath38 the @xmath39 matrix consisting of the entries @xmath40 .",
    "note that @xmath38 can be easily constructed from the integration matrix @xmath17 .",
    "furthermore , we denote as before @xmath41 .",
    "then , the semi - implicit update equation corresponding to the forward / backward euler substepping method for computing @xmath42 is given by @xmath43 \\\\",
    "+ \\delta t_m        \\bigl [ f^i(u^{k+1}_{m+1 } , t_{m+1 } ) - f^i(u^k_{m+1 } , t_{m+1 } ) \\bigr ]      + \\delta t\\ , s^{k}_{m}\\end{gathered}\\ ] ] where @xmath44 is the @xmath45 row of @xmath46 and @xmath47 .",
    "the process of solving at each node is referred to as an _ sdc sweep _ or an _ sdc iteration _ ( see algorithm  [ alg : sdcsweep ] ) .",
    "sdc with a fixed number of @xmath48 iterations and first - order sweeps is formally @xmath49 up to the accuracy of the underlying integration rule  @xcite .",
    "when sdc iterations converge , the scheme becomes equivalent to the collocation scheme determined by the quadrature nodes , and hence is of order @xmath50 with @xmath5 lobatto nodes .",
    "@algocf@finishalgocf@finish algocf@finish@algocf@finish    @xmath51 ; @xmath52",
    "@xmath53 @xmath54    it has been shown @xcite that in certain situations ( particularly stiff equations ) the convergence of sdc iterates can slow down considerably for large values of @xmath55 . for a fixed number of iterations , this lack of convergence",
    "is characterized by order reduction . hence in this study , to allow for a reasonable comparison of sdc and mlsdc , we perform iterations until a specified convergence criterion is met .",
    "convergence is monitored by computing the sdc residual @xmath56 and the iteration is terminated when the norm of the residual drops below a prescribed tolerance .",
    "similary , if sdc or mlsdc are used to solve the collocation problem up to some fixed tolerance , one also observes a significant increase in the number of iterations required to reach a set tolerance .",
    "accelerating the convergence of sdc for stiff problems has been studied in e.g.  @xcite .      in multi - level sdc ( mlsdc ) , sdc sweeps are performed on a hierarchy of discretizations or _ levels _ to solve the collocation equation  . this section presents the details of the mlsdc iterations for a generic set of levels , and in sect . [ sec : mlsdc_spatial_coarsening ] , three different coarsening strategies are explored . for the following , we define levels @xmath57 , where @xmath58 is the discretization that is to be solved ( referred to generically as the _ fine _ level ) , and subsequent levels @xmath59 are defined by successive coarsening of a type to be specified later .      solutions on different mlsdc levels are coupled in the same manner as used in the full approximation scheme ( fas ) for nonlinear multigrid methods ( see e.g. @xcite ) . the fas correction for coarse sdc iterations is determined by considering sdc as an iterative method for solving the collocation formulation  , where the operators @xmath60 are given by @xmath61 .",
    "note that the approximations @xmath60 of the operator @xmath62 can differ substantially between levels as will be discussed in ",
    "[ sec : mlsdc_spatial_coarsening ] .",
    "furthermore , we assume that suitable restriction ( denote by @xmath63 ) and interpolation operators between levels are available , see  [ subsubsec : transfer ] . the fas correction for coarse - grid sweeps",
    "is then given by @xmath64 in particular , if the fine residual is zero ( i.e. , @xmath65 ) the fas - corrected coarse equation becomes @xmath66 so that the coarse solution is the restriction of the fine solution .",
    "note that for multi - level schemes , fas - corrections from finer levels need to be restricted and incorporated to coarser levels as well , i.e.  if on level @xmath67 the equation is already corrected by @xmath68 with @xmath69 the correction @xmath70 for level @xmath71 is then given by @xmath72 coarse levels thus include the fas corrections of all finer levels .",
    "the mlsdc scheme introduced here proceeds as follows .",
    "the initial condition @xmath33 and its function evaluation are spread to each of the collocation nodes on the finest level so that the first provisional solution @xmath73 is given by @xmath74.\\nonumber\\ ] ] a single mlsdc iteration then consists of the following steps :    1 .",
    "perform one fine sdc sweep using the values @xmath75 and @xmath76 .",
    "this will yield provisional updated values @xmath77 and @xmath78 .",
    "2 .   sweep from fine to coarse : for each @xmath79 : 1 .",
    "restrict the fine values @xmath80 to the coarse values @xmath81 and compute @xmath82 .",
    "2 .   compute the fas correction @xmath83 using @xmath84 , @xmath85 , and @xmath86 ( if available ) .",
    "3 .   perform @xmath87 sdc sweeps with the values on level @xmath67 beginning with @xmath88 , @xmath89 and the fas correction @xmath83 .",
    "this will yield new values @xmath90 and @xmath91 .",
    "sweep from coarse to fine : for each @xmath92 : 1 .",
    "interpolate coarse grid correction @xmath93 and add to @xmath90 .",
    "recompute new values @xmath91 2 .",
    "if @xmath94 , perform @xmath87 sdc sweeps beginning with values @xmath90 , @xmath91 and the fas correction @xmath83 .",
    "this will once again yield new values @xmath90 and @xmath91 .",
    "note that when interpolating from coarse to fine levels the correction @xmath95 is interpolated and subsequently added to @xmath96 instead of simply overwriting the fine values with interpolated coarse values . also note that instead of interpolating solution values @xmath97 to @xmath98 and immediately re - evaluating the function values @xmath99 , the change in the function values can be interpolated as well .",
    "doing so reduces the cost of the interpolation step , but possibly at the cost of increasing the number of mlsdc iterations required to reach convergence .",
    "since no significant increase could be observed during our tests , we skip the re - evaluation of the right - hand side and use interpolation of the coarse function values throughout this work .",
    "the above is summarized by algorithm  [ alg : mlsdc ] .",
    "@xmath100 , @xmath101 sdcsweep@xmath102      in order to achieve higher - order accuracy with finite difference discretizations in space , the use of mehrstellen discretizations is a common technique especially when using multigrid methods  @xcite . while the straightforward use of larger stencils leads to larger matrix bandwidths and higher communication costs during parallel runs ,",
    "_ high - order compact _ schemes allow for high - order accuracy with stencils of minimal extent  @xcite .",
    "the compact stencil for a given discretization is obtained by approximating the leading order error term by a finite difference approximation of the right - hand side , resulting in a weighting matrix .",
    "discretizing e.g.  the heat equation @xmath103 in space , and depend continuously on one or more spatial variables and a time variable .",
    "discretizing a pde in space by the method of lines results in an ivp with dimension @xmath104 equal to the degrees of freedom of the spatial discretization .",
    "the solution of such an ivp is a vector - valued function denoted by a lower case letter , e.g.  @xmath105 , and depends continuously on time .",
    "the numerical approximation of @xmath105 at some point in time @xmath106 is denoted by a capital letter , e.g.  @xmath107 , where @xmath48 corresponds to the iteration number . ]",
    "yields @xmath108 with system matrix @xmath62 and weighting matrix @xmath109 .",
    "formally , the discrete laplacian is given by @xmath110 .",
    "using this approach , a fourth - order approximation of the laplacian can be achieved using only nearest neighbors ( three - point stencil in 1d , nine - point - stencil in 2d , 19-point stencil in 3d ) . for further reading on compact schemes we refer to  @xcite .",
    "the presence of a weighting matrix requires some modifications to mlsdc .",
    "we start with the semi - implicit sdc update equation   given by @xmath111 \\\\",
    "+ \\delta t_m        \\bigl [ f^i(u^{k+1}_{m+1 } , t_{m } ) - f^i(u^k_{m+1 } , t_{m } ) \\bigr ]      + \\delta t\\ , s^{k}_m.\\end{gathered}\\ ] ] next , we assume a linear , autonomous implicit part @xmath112 for a spatial vector @xmath113 with sparse matrices @xmath109 and @xmath62 stemming from the discretization of the laplacian with compact stencils .",
    "furthermore , we define @xmath114 so that @xmath115 with these definitions becomes @xmath116 \\nonumber\\\\ - \\delta t_m\\ , { { w}^{-1}}au^k_{m+1 } + \\delta t\\ , s^{k}_m.\\nonumber\\end{gathered}\\ ] ] since the operator @xmath117 is not sparse , we avoid computing with it by multiplying the equation above by @xmath109 , so that @xmath118 \\\\ - \\delta t_m\\ , \\tilde{f}^i(u^k_{m+1 } ) + \\delta t\\ , \\tilde{s}^{k}_m\\end{gathered}\\ ] ] where @xmath119 now represents the @xmath45 row of @xmath120 , using @xmath121 and @xmath122 instead of @xmath123 and @xmath124 as integrands , that is @xmath125 .",
    "while this equation avoids the inversion of @xmath109 , the computation of the residual does not . by equation  , the @xmath45 component of the residual at iteration @xmath48 reads either @xmath126 or , after multiplication with @xmath109 , @xmath127 both equations require the solution of a linear system with matrix @xmath109 , either to compute the components of @xmath128 from   or to retrieve @xmath129 from @xmath130 .",
    "note that the subscript @xmath131 denotes here the @xmath45 column .",
    "thus , we either need to obtain @xmath129 from @xmath132 ( in case @xmath133 is stored during the sdc sweep ) or @xmath30 from @xmath134 ( in case @xmath31 is stored ) . in either case , solving a linear system with the weighting matrix becomes inevitable for the computation of the formally correct residual .",
    "furthermore , evaluating for the fas correction also requires the explicit use of @xmath31 and @xmath135 to compute @xmath136 .",
    "moreover , from we note that weighted sdc sweeps on coarse levels @xmath71 require the computation of @xmath137 on all coarse nodes @xmath138 so that @xmath139 can be replaced by @xmath140 . for spatial discretizations in which both parts @xmath31 and @xmath30 of the right - hand side make use of weighting matrices @xmath141 and @xmath142 or e.g.  for finite element discretizations with a mass matrix , we note that similar modifications to the mlsdc scheme as presented here must be made .",
    "the investigation of mlsdc for finite element discretizations is left for future work .",
    "the goal in mlsdc methods is to reduce the total cost of the method by performing sdc sweeps on coarsened levels at reduced computational cost . in this section",
    "we describe the three types of spatial coarsening used in the numerical examples :    1 .   reduced resolution in space : use fewer degrees of freedom for the spatial representation ( e.g. nodes , cells , points , particles , etc . ) on the coarse levels .",
    "this directly translates into significant computational savings for evaluations of @xmath143 , particularly for 3d problems .",
    "this approach requires spatial interpolation and restriction operators to transfer the solution between levels .",
    "2 .   reduced order in space : use a spatial discretization on the coarse levels that is of reduced order .",
    "lower - order finite difference stencils , for example , are typically cheaper to evaluate than higher - order ones , see  @xcite for an application of this strategy for the time - parallel parareal method .",
    "3 .   reduced implicit solve in space : use only a few iterations of a spatial solver in every substep , if an implicit or implicit - explicit method is used in the sdc sweeps . by not solving the linear or nonlinear system in each sdc substep to full accuracy",
    ", savings in execution time can be achieved .",
    "we note that a fourth possibility not pursued here is to use a simplified physical representation of the problem on coarse levels .",
    "this approach requires a detailed understanding of the problem to derive suitable coarse level models and appropriate coarsening and interpolation operators .",
    "similar ideas have been studied for parareal in  @xcite .",
    "the spatial coarsening strategies outlined above can significantly reduce the cost of a coarse level sdc substep , but do not affect the number of substeps used . in principle , it is also possible to reduce the number of quadrature nodes on coarser levels as in the ladder schemes mentioned in the introduction . in this paper ,",
    "no such temporal coarsening is applied and we focus on the application of spatial coarsening strategies which leads to a large reduction of the runtime for coarse level sweeps .      in order to apply strategy 1 and reduce the number of spatial degrees of freedom , transfer operators between different levels are required . in the tests presented here that are based on finite difference discretizations on simple",
    "cartesian meshes , the spatial degrees of freedom are aligned , so that simple injection can be used for restriction .    we have observed that the order of the used spatial interpolation has a strong impact on the convergence of mlsdc . while global information transfer when using e.g.  spectral methods does not influence the convergence properties of mlsdc , the use of local lagrangian interpolation for finite difference stencils has to be applied with care . in numerical experiments",
    "not documented here , mlsdc with simple linear interpolation required twice as many iterations as mlsdc with fifth - order spatial interpolation .",
    "further , low resolutions in space combined with low - order interpolation led to significant degradation of the convergence speed of mlsdc , while high spatial resolutions were much less sensitive . throughout the paper , strategy 1 is applied with third - order lagrangian interpolation , which has proven to be sufficient in all cases studied here .",
    "we note that the transfer operators would be different if e.g.  finite elements were used and operators between element spaces of different order and/or on different meshes would be required .",
    "stability domains for sdc are presented in e.g.  @xcite .",
    "the stability of semi - implicit sdc is addressed in  @xcite and the issue of order reduction for stiff problems is discussed .",
    "split sdc methods are further analyzed theoretically and numerically in  @xcite . a stability analysis for mlsdc",
    "is complicated by the fact that it would need to consider the effects of the different spatial coarsening strategies laid out in  [ sec : mlsdc_spatial_coarsening ] .",
    "therefore , it can not simply use dahlquist s test equation but has to resort to some well - defined pde examples in order to assess stability .",
    "hence , for mlsdc the results presented here are experimental but development of a theory for the convergence properties of mlsdc is ongoing work . however , in all examples presented below , stability properties of sdc and mlsdc appeared to be comparable , but a comprehensive analysis is left for future work .",
    "in this section we investigate the performance of mlsdc for four numerical examples .",
    "first , in order to demonstrate that the fas correction in mlsdc is not unusable for hyperbolic problems per se , performance for the 1d wave equation is studied in  [ subsec : wave_eq ] . to investigate performance for a nonlinear problem , mlsdc",
    "is then applied to the 1d viscous burgers equation in  [ subsec : visc_burg ] .",
    "a detailed investigation of different error components is given and we verify that the fas corrections allow the solutions on coarse levels to converge to the accuracy determined by the discretization on the _ finest _ level .",
    "the 2d navier - stokes equations in vorticity - velocity form are solved in  [ subsec : shear_layer ] , showing again a reduction of the number of required iterations by mlsdc , although using a coarsened spatial resolution is found to have a negative impact on convergence , if the fine level is already under - resolved . in  [ subsec : visc_burger3d ] ,",
    "a fortran implementation of mlsdc is applied to the three - dimensional burgers equation and it is demonstrated that the reduction in fine level sweeps translates into a significant reduction of computing time . throughout all examples , we make use of a linear geometric multigrid solver  @xcite with jor relaxation in 3d and sor relaxation 1d and 2d as smoothers , to solve the linear problems in the implicit part as well as to solve the linear system with the weighting matrix for the residual and the fas correction .",
    "the parallel implementation of the multigrid solver used for the last example is described in  @xcite . in the examples below",
    ", we compare the number of sweeps on the fine and most expensive level required by sdc or mlsdc to converge up to a set tolerance . for sdc , which sweeps only on the fine level ,",
    "this number is identical to the number of iterations . for mlsdc ,",
    "each iteration consists of one cycle through the level hierarchy , starting from the finest level , going up to the coarsest and then down again , with one sdc sweep on each level on the way up and down , cf .",
    "algorithm  [ alg : mlsdc ] . except for the last iteration ,",
    "the final fine sweep is also the first fine sweep of the next iteration , so that for mlsdc the number of fine sweeps is equal to the number of iterations plus one .",
    "note that a factor of two coarsening in the spatial resolution in each dimension yields a factor of eight reduction in degrees of freedom in three dimensions , which makes coarse level sweeps significantly less expensive .      for spatial multigrid ,",
    "the fas formalism is mostly derived and analyzed for stationary elliptic or parabolic problems , although there are examples of applications to hyperbolic problems as well  @xcite . here , as a first test",
    ", we investigate the performance of mlsdc for a simple 1d wave equation to verify that the fas procedure as used in mlsdc does not break down for a hyperbolic problem per se .",
    "the problem considered here , with the wave equation written as a first order system , reads @xmath144 on @xmath145 $ ] with periodic boundary conditions and @xmath146 for @xmath147 . for the spatial derivatives ,",
    "centered differences of @xmath148 order with @xmath149 points are used on the fine level and of @xmath150 order with @xmath151 points on the coarse .",
    "both sdc and mlsdc perform @xmath152 timesteps of length @xmath153 to integrate up to @xmath154 and iterations on each step are performed until @xmath155 .",
    "the average number of fine level sweeps over all steps for sdc and mlsdc is shown in table  [ tab : wave_eq ] for three different values of @xmath156 . in all cases",
    ", mlsdc leads to savings in terms of required fine level sweeps .",
    "we note that for a fine level spatial resolution of only @xmath151 points , using spatial coarsening has a significant negative effect on the performance of mlsdc ( not documented here ) : this suggests that for a problem which is spatially under - resolved on the finest level , further coarsening the spatial resolution within mlsdc might hurt performance , see also   [ subsec : shear_layer ] .",
    ".average number of fine level sweeps over all time - steps of sdc and mlsdc for the wave equation example to reach a residual of @xmath157 .",
    "the numbers in parentheses after mlsdc indicate the used coarsening strategies , see   [ sec : mlsdc_spatial_coarsening ] . [",
    "cols=\"^,^,^\",options=\"header \" , ]      to demonstrate that mlsdc can not only reduce iterations but also runtime , we consider viscous burgers equation in three dimensions @xmath158^{3 } , \\quad 0 \\leq t \\leq 1\\nonumber\\ ] ] with @xmath159 , initial value @xmath160 homogeneous dirichlet boundary condition and diffusion coefficients @xmath161 and @xmath162 .",
    "the problem is solved using a fortran implementation of mlsdc combined with a c implementation of a parallel multigrid solver ( pmg ) in space  @xcite .",
    "a single timestep of length @xmath163 is performed with mlsdc , corresponding to cfl numbers from the diffusive term on the fine level , that is @xmath164 of about @xmath165 ( for @xmath161 ) and @xmath166 ( for @xmath162 ) .",
    "the diffusion term is integrated implicitly using pmg to solve the corresponding linear system and the advection term is treated explicitly .",
    "simulations are run on @xmath167 cores on the ibm bluegene / q juqueen at the jlich supercomputing centre .",
    "mlsdc is run with @xmath168 , @xmath169 and @xmath170 gauss - lobatto nodes with a tolerance for the residual of @xmath171 .",
    "two mlsdc levels are used with all three types of coarsening applied :    1 .",
    "the fine level uses a @xmath172 point mesh and the coarse level @xmath173 .",
    "2 .   a @xmath148-order compact difference stencil for the laplacian and a @xmath174-order weno  @xcite for the advection term are used on the fine level ; a @xmath150-order stencil for the laplacian and a @xmath175-order upwind scheme for advection on the coarse .",
    "the accuracy of the implicit solve on the coarse level is varied by fixing the number of v - cycles of pmg on this level .",
    "three runs are performed , each with a different number of v - cycles on the coarse level . in the first run ,",
    "the coarse level linear systems are solved to full accuracy , whereas the second and third runs use one and two v - cycles of pmg on the coarse level , respectively , instead of solving to full accuracy .",
    "these cases are referred to as mlsdc(1,2 ) , mlsdc(1,2,3(1 ) ) , and mlsdc(1,2,3(2 ) ) . on the fine level ,",
    "implicit systems are always solved to full accuracy ( the pmg multigrid iteration reaches a tolerance of reach a tolerance of @xmath176 or stalls ) .",
    "[ [ required - iterations - and - runtimes . ] ] required iterations and runtimes .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    table  [ tab : burger3d_eq ] shows both the required fine level sweeps for sdc and mlsdc as well as the total runtimes in seconds for @xmath177 and @xmath178 for three different values of @xmath156 .",
    "mlsdc(1,2 ) and mlsdc(1,2,3(2 ) ) in all cases manage to significantly reduce the number of fine sweeps required for convergence in comparison to single - level sdc , typically by about a factor of two .",
    "these savings in fine level sweeps translate into runtime savings on the order of @xmath179 . for @xmath180 and @xmath181 quadrature nodes",
    ", there is no negative impact in terms of additional fine sweeps by using a reduced implicit solve on the coarse level and mlsdc(1,2,3(2 ) ) is therefore faster than mlsdc(1,2 ) .",
    "however , since coarse level v - cycles are very cheap due to spatial coarsening , the additional savings in runtime are small . for @xmath182 quadrature nodes , using a reduced implicit solve on the coarse level in mlsdc(1,2,3(2 ) ) comes at the price of an additional mlsdc iteration and therefore , mlsdc(1,2 ) is the fastest variant in this case .    using only a single v - cycle for implicit solves on the coarse grid in mlsdc(1,2,3(1 ) ) results in a modest to significant increase in the number of required mlsdc iterations compared to mlsdc(1,2,3(2 ) ) in almost all cases .",
    "the only exception is the run with @xmath180 nodes and @xmath161 .",
    "therefore , mlsdc(1,2,3(1 ) ) is typically significantly slower than mlsdc(1,2 ) or mlsdc(1,2,3(2 ) ) and not recommended for use in three dimensions . for @xmath182 quadrature nodes , using only a single v - cycle leads to a dramatic increase in the number of required fine sweeps and mlsdc becomes much slower than single level sdc , indicating that the inaccurate coarse level has a negative impact on convergence .",
    "method & f - sweeps & runtime ( sec ) + sdc & 9 & 39.4 + mlsdc(1,2 ) & 4 & 26.2 + mlsdc(1,2,3(2 ) ) & 4 & 25.6 + mlsdc(1,2,3(1 ) ) & 5 & 29.7 +     method & f - sweeps & runtime ( sec ) + sdc & 16 & 74.1 + mlsdc(1,2 ) & 8 & 49.1 + mlsdc(1,2,3(2 ) ) & 8 & 47.0 + mlsdc(1,2,3(1 ) ) & 8 & 46.7 +    * @xmath183 gauss - lobatto nodes *     method & f - sweeps & runtime ( sec ) + sdc & 7 & 59.5 + mlsdc(1,2 ) & 3 & 40.8 + mlsdc(1,2,3(2 ) ) & 3 & 39.8 + mlsdc(1,2,3(1 ) ) & 8 & 79.7 +     method & f - sweeps & runtime ( sec ) + sdc & 18 & 162.7 + mlsdc(1,2 ) & 9 & 105.6 + mlsdc(1,2,3(2 ) ) & 9 & 101.5 + mlsdc(1,2,3(1 ) ) & 14 & 142.8 +    * @xmath184 gauss - lobatto nodes *     method & f - sweeps & runtime ( sec ) + sdc & 5 & 82.4 + mlsdc(1,2 ) & 2 & 46.1 + mlsdc(1,2,3(2 ) ) & 3 & 57.2 + mlsdc(1,2,3(1 ) ) & 11 & 147.2 +     method & f - sweeps & runtime ( sec ) + sdc & 17 & 224.7 + mlsdc(1,2 ) & 8 & 139.5 + mlsdc(1,2,3(2 ) ) & 9 & 148.1 + mlsdc(1,2,3(1 ) ) & 44 & 560.4 +",
    "the paper analyzes the multi - level spectral deferred correction method ( mlsdc ) , an extension to the original single - level spectral deferred corrections ( sdc ) as well as ladder sdc methods .",
    "in contrast to sdc , mlsdc performs correction sweeps in time on a hierarchy of discretization levels , similar to v - cycles in classical multigrid .",
    "an fas correction is used to increase the accuracy on coarse levels .",
    "the paper also presents a new procedure to incorporate weighting matrices arising in higher - order compact finite difference stencils into the sdc method .",
    "the advantage of mlsdc is that it shifts computational work from the fine level to coarse levels , thereby reducing the number of fine sdc sweeps and , therefore , the time - to - solution .    for mlsdc to be efficient",
    ", a reduced representation of the problem on the coarse levels has to be used in order to make coarse level sweeps cheap in terms of computing time .",
    "three strategies are investigated numerically , namely ( 1 ) using fewer degrees of freedom , ( 2 ) reducing the order of the discretization , and ( 3 ) reducing the accuracy of the linear solver in implicit substeps on the coarse level .",
    "numerical results are presented for the wave equation , viscous burgers equation in 1d and 3d and for the 2d navier - stokes equation in vorticity - velocity formulation .",
    "it is demonstrated that because of the fas correction , the solutions on all levels converge up to the accuracy determined by the discretization on the finest level .",
    "more significantly , in all four examples , mlsdc can reduce the number of fine level sweeps required to converge compared to single level sdc .",
    "for the 3d example this translates directly into significantly reduced computing times in comparison to single - level sdc .",
    "one potential continuation of this work is to investigate reducing the accuracy of implicit solves on the fine level in mlsdc as well . in  @xcite , so called _ inexact _ spectral deferred corrections ( isdc ) methods are considered , where implicit solves at each sdc node are replaced by a small number of multigrid v - cycles . as with mlsdc , the reduced cost ofx implicit solves are somewhat offset by an increase in the number of sdc iterations required for convergence .",
    "nevertheless , numerical results in @xcite demonstrate an overall reduction of cost for isdc methods versus sdc for certain test cases .",
    "the optimal combination of coarsening and reducing v - cycles for sdc methods using multigrid for implicit solves appears to be problem - dependent , and an analysis of this topic is in preparation .",
    "the mlsdc algorithm has also been applied to adaptive mesh refinement ( amr ) methods popular in finite - volume methods for conservative systems . in the amr + mlsdc algorithm ,",
    "each amr level is associated with its own mlsdc level , resulting in a hierarchy of hybrid space / time discretizations with increasing space / time resolution . when a new ( high resolution ) level is added to the amr hierarchy",
    ", a new mlsdc level is created .",
    "the resulting scheme differs from traditional sub - cycling amr time - stepping schemes in a few notable aspects : fine level sub - cycling is achieved through increased temporal resolution of the mlsdc nodes ; flux corrections across coarse / fine amr grid boundaries are naturally incorporated into the mlsdc fas correction ; fine amr ghost cells eventually become high - order accurate through the iterative nature of mlsdc v - cycling ; and finally , the cost of implicit solves on all levels decreases with each mlsdc v - cycle as initial guesses improve .",
    "preliminary results suggest that the amr+mlsdc algorithm can be successfully applied to the compressible navier - stokes equations with stiff chemistry for the direct numerical simulation of combustion problems .",
    "a detailed description of the amr+mlsdc algorithm with applications is currently in preparation .",
    "finally , the impact and performance of the coarsening strategies presented here are also of relevance to the parallel full approximation scheme in space and time ( pfasst )  @xcite algorithm , which is a time - parallel scheme for odes and pdes .",
    "like mlsdc , pfasst employs a hierarchy of levels but performs sdc sweeps on multiple time intervals concurrently with corrections to initial conditions being communicated forward in time during the iterations .",
    "parallel efficiency in pfasst can be achieved because fine sdc sweeps are done in parallel while sweeps on the coarsest level are in essence done serially . in the pfasst algorithm , there is a trade - off between decreasing the cost on coarse levels to improve parallel efficiency and retaining good accuracy on the coarse level to minimize the number of parallel iterations required to converge . in",
    "@xcite it was shown that , for mesh - based pde discretizations , using a spatial mesh with fewer points on the coarse level in conjunction with a reduced number of quadrature nodes , led to a method with significant parallel speed up . incorporating the additional coarsening strategies presented here for mlsdc into pfasst would further reduce the cost of coarse levels , but it is unclear how this might translate into an increase in the number of parallel pfasst iterations required .",
    "alam , j.m . ,",
    "kevlahan , n.k.r . ,",
    "vasilyev , o.v . : simultaneous spacetime adaptive wavelet solution of nonlinear parabolic differential equations . journal of computational physics * 214*(2 ) , 829  857 ( 2006 ) .",
    "ascher , u.m . ,",
    "petzold , l.r . : computer methods for ordinary differential equations and differential - algebraic equations .",
    "siam , philadelphia , pa ( 2000 )      bolten , m. : evaluation of a multigrid solver for 3-level toeplitz and circulant matrices on blue gene / q . in : k.",
    "binder , g.  mnster , m.  kremer ( eds . ) nic symposium 2014 , pp .",
    "john von neumann institute for computing ( 2014 ) .",
    "( to appear )              chow , e. , falgout , r.d .",
    ", hu , j.j . , tuminaro , r.s .",
    ", yang , u.m .",
    ": a survey of parallelization techniques for multigrid solvers . in : parallel processing for scientific computing , siam series of software , environements and tools .",
    "siam ( 2006 )    christlieb , a. , morton , m. , ong , b. , qiu , j.m . :",
    "semi - implicit integral deferred correction constructed with additive runge  kutta methods .",
    "communications in mathematical science *",
    "9*(3 ) , 879902 ( 2011 ) .",
    "christlieb , a. , ong , b. , qiu , j.m . : comments on high - order integrators embedded within integral deferred correction methods .",
    "communications in applied mathematics and computational science *",
    "4*(1 ) , 2756 ( 2009 ) .",
    "christlieb , a. , ong , b.w . , qiu , j.m . : integral deferred correction methods constructed with high order runge - kutta integrators .",
    "mathematics of computation * 79 * , 761783 ( 2010 ) .",
    "dai , x. , le  bris , c. , legoll , f. , maday , y. : symmetric parareal algorithms for hamiltonian systems .",
    "esaim : mathematical modelling and numerical analysis * 47 * , 717742 ( 2013 ) .",
    "daniel , j.w .",
    ", pereyra , v. , schumaker , l.l .",
    ": iterated deferred corrections for initial value problems .",
    "acta cient .",
    "venezolana * 19 * , 128135 ( 1968 )      emmett , m. , minion , m.l .",
    ": efficient implementation of a multi - level parallel in time algorithm . in : proceedings of the 21st international conference on domain decomposition methods , lecture notes in computational science and engineering ( 2012 ) .",
    "( in press )    emmett , m. , minion , m.l . : toward an efficient parallel in time method for partial differential equations .",
    "communications in applied mathematics and computational science * 7 * , 105132 ( 2012 ) .",
    "hagstrom , t. , zhou , r. : on the spectral deferred correction of splitting methods for initial value problems .",
    "communications in applied mathematics and computational science *",
    "1*(1 ) , 169205 ( 2006 ) .",
    "hairer , e. , norsett , s.p . ,",
    "wanner , g. : solving ordinary differential equations i , nonstiff problems .",
    "springer - verlag , berlin ( 1987 )            huang , j. , jia , j. , minion , m. : accelerating the convergence of spectral deferred correction methods .",
    "journal of computational physics * 214*(2 ) , 633  656 ( 2006 ) .",
    "hunter , j.d .",
    ": matplotlib : a 2d graphics environment .",
    "computing in science & engineering * 9*(3 ) , 9095 ( 2007 )      layton , a.t .",
    ": on the efficiency of spectral deferred correction methods for time - dependent partial differential equations . applied numerical mathematics *",
    "59*(7 ) , 1629  1643 ( 2009 ) .",
    "layton , a.t . ,",
    "minion , m.l . :",
    "conservative multi - implicit spectral deferred correction methods for reacting gas dynamics .",
    "journal of computational physics *",
    "194*(2 ) , 697715 ( 2004 )    layton , a.t . ,",
    "minion , m.l . :",
    "implications of the choice of quadrature nodes for picard integral deferred corrections methods for ordinary differential equations .",
    "bit numerical mathematics * 45 * , 341373 ( 2005 )          minion , m.l . : a hybrid parareal spectral deferred corrections method .",
    "communications in applied mathematics and computational science *",
    "5*(2 ) , 265301 ( 2010 ) .",
    "pereyra , v. : iterated deferred corrections for nonlinear operator equations .",
    "numerische mathematik * 10 * , 316323 ( 1966 )      ruprecht , d. , krause , r. : explicit parallel - in - time integration of a linear acoustic - advection system .",
    "computers & fluids * 59*(0 ) , 72  83 ( 2012 ) . south , j.c . , brandt , a. : application of a multi - level grid method to transonic flow calculations . in : transonic flow problems in turbomachinery ,",
    ". 180206 . hemisphere ( 1977 )    speck , r. , ruprecht , d. , krause , r. , emmett , m. , minion , m. , winkel , m. , gibbon , p. : a massively space - time parallel n - body solver . in : proceedings of the international conference on high performance computing , networking , storage and analysis , sc 12 , pp .",
    "ieee computer society press , los alamitos , ca , usa ( 2012 ) .",
    "speck , r. , ruprecht , d. , minion , m. , emmett , m. , krause , r. : inexact spectral deferred corrections using single - cycle multigrid ( 2014 ) . arxiv:1401.7824 [ math.na ]            xia , y. , xu , y. , shu , c.w . : efficient time discretization for local discontinuous galerkin methods .",
    "discrete and continuous dynamical systems  series b * 8*(3 ) , 677  693 ( 2007 ) .",
    "zadunaisky , p. : a method for the estimation of errors propagated in the numerical solution of a system of ordinary differential equations . in : g.  contopoulus ( ed . ) the theory of orbits in the solar system and in stellar systems .",
    "proceedings of international astronomical union , symposium 25 ( 1964 )"
  ],
  "abstract_text": [
    "<S> the spectral deferred correction ( sdc ) method is an iterative scheme for computing a higher - order collocation solution to an ode by performing a series of correction sweeps using a low - order timestepping method . </S>",
    "<S> this paper examines a variation of sdc for the temporal integration of pdes called multi - level spectral deferred corrections ( mlsdc ) , where sweeps are performed on a hierarchy of levels and an fas correction term , as in nonlinear multigrid methods , couples solutions on different levels . </S>",
    "<S> three different strategies to reduce the computational cost of correction sweeps on the coarser levels are examined : reducing the degrees of freedom , reducing the order of the spatial discretization , and reducing the accuracy when solving linear systems arising in implicit temporal integration . </S>",
    "<S> several numerical examples demonstrate the effect of multi - level coarsening on the convergence and cost of sdc integration . </S>",
    "<S> in particular , mlsdc can provide significant savings in compute time compared to sdc for a three - dimensional problem . </S>"
  ]
}
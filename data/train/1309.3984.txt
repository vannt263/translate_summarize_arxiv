{
  "article_text": [
    "mathematical models of the distributed service provision problem have been studied thoroughly in computer science under the name of _ selfish load balancing _ @xcite and _ congestion games _ @xcite .",
    "most results apply concepts borrowed from game theory and concern worst - case analysis , in particular the computation of the so - called  price of anarchy \" , i.e. the ratio between the cost of the worst nash equilibrium ( ne ) and the optimal social cost @xcite .",
    "several works also address algorithmic issues , such as the question of designing distributed dynamics that converge to nes , their convergence time @xcite , or computational complexity @xcite . in many practical problems",
    ", service providers should be more interested in the average - case scenario , in particular in the average cost of service / resource allocations determined by the selfish behavior of users . in order to be able to compare the expected cost of different service allocations , a service provider is called to the arduous computational task of evaluating an average over the possibly huge number of different nes that are obtained as result of the allocation . in addition",
    ", service providers do not always have perfect information about the user behavior  a fact that is usually modeled by including some stochastic parameter into the problem @xcite . in the presence of stochasticity , algorithms based on monte carlo methods are extremely inefficient even for moderately large problem sizes , whereas recent works @xcite have shown that much better results can be obtained using message - passing algorithms inspired by statistical physics methods .    in our formulation",
    ", we assume that the total service capacity of the existing infrastructure can be partially adapted by activating or deactivating some of the service units . our goal is to find the configuration of active server units that achieves the best trade - off between maintenance costs for the provider and user satisfaction .",
    "for the sake of example , we assume maintenance costs expressed in terms of energy costs to keep the service unit active . for any given configuration of service units and users ,",
    "we propose to use a belief - propagation ( bp ) algorithm to evaluate the cost of every service configuration .",
    "moreover , we put forward an approximate method , also based on bp , which allows to perform the average over the stochastic parameters within the same message - passing algorithm used to average over the nes .",
    "the information obtained is then used to optimize the service units allocation .",
    "this can be done easily either exhaustively or by means of decimation methods .",
    "the service provision problem is represented by a bipartite graph @xmath0 , in which @xmath1 and @xmath2 are the sets of nodes , _ users _ and _ service units _ respectively , and @xmath3 is the set of edges @xmath4 connecting nodes @xmath5 and @xmath6 . in general",
    "the graph is not complete , i.e. , users can not connect to any service unit .",
    "in addition , every service unit @xmath7 has an operational energy cost , @xmath8 .",
    "thus , in some time periods it may be convenient to keep active only part of the existing service units ( @xmath9 ) and deactivate the others ( @xmath10 ) .",
    "the first ingredient of the model is the rational behavior of the users . in many problems , such as selfish load balancing @xcite",
    ", this is introduced by assuming that the quality of service received by a user , when selecting a service unit , depends on the load of the unit at the time of service , defining a correlation between users utilities . here ,",
    "we simplify the model assuming that users satisfaction in selecting a service unit does not depend on the state of the service unit itself ( provided it is available ) .",
    "each edge @xmath4 has a weight , @xmath11 , that represents the satisfaction obtained by user @xmath12 when selecting service unit @xmath7 .",
    "however , users decisions are not independent , as there is a limitation to the number of individuals that can be served at the same time by the same service unit .",
    "the weight in the opposite direction , @xmath13 , is the workload sustained by the service unit @xmath7 when providing the service to user @xmath12 . if we assume that each service unit @xmath7 can sustain a maximum load @xmath14 , the sum of the workloads @xmath15 of all users @xmath12 selecting unit @xmath7 should not exceed @xmath14 .",
    "this set of hard _ capacity constraints _ introduces an indirect competition between users .",
    "more precisely , suppose that user @xmath12 considers service unit @xmath7 to be the preferable one ( i.e. , @xmath16 @xmath17 ) , but adding the workload @xmath15 of @xmath12 to the total load already faced by unit @xmath7 , it would exceed @xmath14 .",
    "then we say that service unit @xmath7 is _ saturated _ for user @xmath12 and the latter has to access another of the service units accessible to her .",
    "she will thus turn to the unit with the second best weight . if this one is _",
    "available _ , user @xmath12 will make use of it , otherwise she will try the third one on her list and so on .",
    "note that multiple connections from the same user to many service units are not allowed .",
    "the second ingredient is stochasticity .",
    "we imagine that in any realistic situation the activity of the users could follow very complex temporal patterns .",
    "users could leave the system and come back , using different service units depending on their preference and the current availability .",
    "the stochastic nature of the problem is summarized into a set of stochastic parameters @xmath18 . at",
    "any given time , with probability @xmath19 the user @xmath12 is absent from the service system and @xmath20 , whereas with probability @xmath21 she is present and @xmath22 .",
    "for the moment , we can assume that the actual realization @xmath23 , @xmath24 , is known .",
    "given the bipartite graph , the configuration of active service units @xmath25 and the set of parameters @xmath18 , every user tries to maximize her own utility using the best service unit available ( i.e. , among those that are not saturated or inactive ) .",
    "such a system model can represent several different application scenarios .",
    "for example , we can represent videoconferencing , including several multipoint control units ( mcus ) or a heterogeneous wireless access network , where points of access , possibly using different technologies , are available ( e.g. , 3g / lte , wifi , wimax ) to the users . in these scenarios , indeed , it would be convenient to switch off service units when underloaded .",
    "the system outlined above poses the following service provision problem : _ at any given time period , which service units should be activated by a central controller , in order to maximize the users satisfaction and minimize the system energy consumption ? _",
    "since the decision of the central controller has to account for the rational behavior of the users , we address the optimization problem as follows .",
    "first , we consider a system configuration , where the active service units are given , and model the users association process as a game .",
    "the players of the game are the users that have to select a service unit among the active ones .",
    "we solve the game so that , for each user pattern , @xmath18 , the corresponding ne strategy profiles can be identified ; note that , given @xmath18 , there may exist multiple nes .",
    "then , in order to evaluate the performance of the system configuration , we define an objective function , which accounts for the energy cost of the active units and for the users satisfaction .",
    "since , for a given @xmath18 , different nes are reached depending on the order of arrival of the users , we average the objective function first over all nes corresponding to @xmath18 , and then over all possible realizations of the users arrival process .",
    "finally , we use the obtained result as an indication of the system configuration performance , and we select the system configuration that optimizes such an index .    let us now detail the procedure outlined above .",
    "we denote the tagged system configuration by @xmath26 , and define @xmath27 as the set of service units that can be selected by user @xmath28 .",
    "also , let @xmath29 be the set of users that can select service unit @xmath30 and let @xmath31 be the set of nodes @xmath32 with @xmath33 .    in the game ,",
    "the action of the generic user ( player ) @xmath12 consists in choosing one of the service units connected to her , e.g. , @xmath34 with @xmath33 .",
    "the payoff is @xmath35 if unit @xmath7 is active and not saturated otherwise it is @xmath36 . if no unit is chosen , @xmath37 and the payoff is @xmath38 , being @xmath39 a penalty value .",
    "more precisely : @xmath40 if instead user @xmath12 is absent , @xmath41 is the only possible value and we set @xmath42 note that , at every perturbation in the system , e.g. due to the departure of a user , a player may decide to connect to another service unit than the currently selected one , if she can increase her payoff .",
    "it is useful to represent the ne conditions in terms of _ best - response relations _ : a strategy profile @xmath43 is a pure ne if and only if , for each user @xmath12 , @xmath44 is the best response to the actions of the others , i.e. , @xmath45 in principle , the weight given to each ne should depend on specific details of the dynamics of the users ( e.g. on the order of arrival of the users and on the order according to which users unilaterally deviate from the current strategy profile if they find it convenient ) .",
    "unfortunately these details are largely unknown in any realistic setup .",
    "it is thus worth considering a simplifying hypothesis in which all the nes are weighted uniformly and the complex user dynamics is summarized in the average over the realizations of the stochastic parameters @xmath46 . in general",
    "we do not know which users are actually present in the system , but we assume to know the probability @xmath47 that user @xmath12 is present , @xmath24 .    the problem consists in optimizing the trade - off between the system energy cost and the expected users satisfaction , i.e. in finding the configuration of active service units @xmath48 which maximizes the following objective function : @xmath49 - \\alpha\\sum_{s}r_{s}x_{s }    \\nonumber\\end{aligned}\\ ] ] where @xmath50 represents the average over the values of @xmath51 that satisfy the ne conditions ( which depend implicitly on @xmath26 and @xmath46 ) .",
    "the objective function is composed of two contrasting terms : a first contribution that measures the overall quality of the service , and a second term that quantifies the total cost of active service units ( alternatively , the service provider s revenue could depend explicitly on the perceived quality of the service ) .",
    "the parameter @xmath52 is used to set the relative importance of the two objectives .",
    "we can finally formulate the optimization goal of the central controller which is , given @xmath53 , the vector of unit capacities @xmath54 , the payoff matrix @xmath55 , the vector of presence probabilities @xmath56 , and the parameter @xmath52 , to find a minimizing @xmath57 such that @xmath58 . in conclusion , the vector @xmath57 represents the system configuration that corresponds to the best tradeoff between the system energy cost and the user satisfaction .",
    "the ne conditions define a set of local hard constraints on the individual actions , such that finding a pure ne can be translated into finding a solution of a constraint - satisfaction problem ( csp ) . using the node variables @xmath59",
    ", we can formulate the associate csp over a factor graph with many small loops even when the original graph had none , which is not appropriate to develop a solution algorithm based on message passing @xcite . in the following",
    "we switch to an equivalent representation , using edge variables , that is much more convenient for message passing applications .",
    "the actions of the users can be described using three - states variables @xmath60 defined on the undirected edges @xmath61 ( see figure [ fig2 ] ) @xmath62 where `` saturated for @xmath12 '' refers to the case in which if @xmath12 connects to @xmath7 , the latter violates the capacity constraint , while `` available '' refers to the case where @xmath7 is active and able to accommodate user @xmath12 .",
    "the nes are the configurations taken by the variables @xmath63 that satisfy the following set of constraints .",
    "first , users can not have access to more than one service unit at the same time : @xmath64\\leq t_{u } \\quad ( \\forall u\\in{\\mathcal u})$ ] .",
    "second , the capacity of each service unit can not be exceeded : @xmath65 w_{su } \\leq c_s x_s \\quad ( \\forall u\\in{\\mathcal u}_s , s\\in{\\mathcal s})$ ] . and",
    "third , users try to use the best service unit available : @xmath66 .",
    "the stochastic optimization problem consists in finding the configuration of active service units @xmath26 such that it maximizes the objective function @xmath67}w_{us } \\right\\rangle \\right ] -\\alpha\\sum_{s}r_{s}x_{s}.\\ ] ] the most difficult part of this optimization problem is that of performing the average over the nes in the presence of stochasticity , that is the essential step to be able to evaluate the average costs and benefits from activating / deactivating different service units .",
    "once this is done , the optimization step over the @xmath48 becomes trivial and it can be done either exhaustively or by means of decimation methods . in the next section",
    "we describe an approximate method to perform the average over the nes and the stochastic parameters in a computationally efficient way .",
    "in general one should first average over the pure nes at fixed realization @xmath68 of the stochastic parameters and then perform the average over the distribution @xmath69 of the latter .",
    "the double average is extremely costly at a computational level .",
    "the message passing approach allows one to perform these two steps together although at the cost of introducing an approximation in the computation .",
    "highly simplifies the representation and allows to get rid of small loops .",
    "the other two types of variable nodes are blue and empty nodes , corresponding respectively to the stochastic parameters @xmath70 and the service provider s variables @xmath71 .",
    "square nodes @xmath72 and @xmath73 are standard factor nodes containing the capacity constraints and the best - response conditions.,width=377 ]    for an observable @xmath74 , the average over nes is @xmath75}{z({\\mathbf x},{\\mathbf t } ) } o({\\mathbf y},{\\mathbf x},{\\mathbf t})\\end{aligned}\\ ] ] in which @xmath76 $ ] .",
    "the numerator can be easily expressed in terms of the local constraints for the edge variables @xmath63 .",
    "if we call @xmath77 the hard constraint defined on node @xmath6 and @xmath78 that defined on @xmath5 , we have @xmath79 = \\prod_{u}i_{u}(\\{y_{us}\\}_{s\\in{\\mathcal s}_u}|t_{u})\\prod_{s}i_{s}(\\{y_{vs}\\}_{v\\in{\\mathcal u}_s}|x_{s})$ ] .",
    "the main difficulty of performing the quenched average is due to the presence of the normalization factor @xmath80 at the denominator of . a mean - field approximation , based on the factorization ansatz @xmath81 ,",
    "can be used to transform our quenched average into an easily computable annealed one . in this approximation",
    "we get @xmath82    the factor graph associated to the problem is shown in figure [ fig2 ] .",
    "in addition to the usual terms @xmath83 and @xmath84 , corresponding to hard constraints , it also contains energetic terms @xmath85 on the nodes @xmath86 .",
    "the energetic terms are unknown but can be computed implicitly introducing a new set of messages @xmath87 and @xmath88 that must be adjusted in order to have the correct probability marginal @xmath89 on each variable node @xmath90 .",
    "on such a factor graph , it is possible to derive the following set of message passing equations @xmath91 by means of which the observable @xmath92 can be approximately evaluated .",
    "the proportionality symbol means that the marginal probabilities need to be correctly normalized .",
    "a complete description of the method will be presented elsewhere @xcite .",
    "in this section , we present some numerical results obtained by our algorithm on random graphs generated with the following procedure .",
    "both the users and the service units are placed at random in the unit square of the two - dimensional euclidean space . for each user @xmath12 , only the @xmath93 nearest service units are assumed to be accessible , and , for each of these , the workload is @xmath94 , i.e. , an integer proportional to the square of the distance between @xmath7 and @xmath12 ( the proportionality constant @xmath95 is such that the maximum weight is equal to a specified value @xmath96 ) . recall that the payoff for a disconnected user is @xmath38 ( see ( [ eq : pi ] ) ) , whereas for connected users is @xmath97 .",
    "finally , the presence probabilities @xmath98 $ ] are extracted uniformly in @xmath99 $ ] .",
    "we have considered four scenarios , whose parameters are reported in table  [ tab : para ] ; the ranges for all these parameters are such that the instances are non trivial .",
    ".scenarios considered in the simulations [ cols=\"<,^,^,^\",options=\"header \" , ]      as a first test of our message passing approach , in scenario s1 we compared it to an exhaustive enumeration of the nes for fixed @xmath46 , averaging the results over a sample of values of @xmath46 .",
    "more specifically , we considered ( for a given configuration of the service units @xmath26 ) the following two observables , in terms of which one can compute the objective function we propose to use for the greedy procedure : @xmath100}w_{su}\\right\\rangle \\right]\\end{aligned}\\ ] ] which is the average ( over the realization of @xmath46 and over the nes ) of the sum of the workloads @xmath15 for the users that are present and connected to some service unit , and @xmath101 } \\right > \\right]\\end{aligned}\\ ] ] which is the average ( again , over the realization of @xmath46 and over the nes ) of the number of disconnected users .",
    "we compare the value obtained by our algorithm for @xmath102 with @xmath103 where @xmath104 is a random sample of realizations of @xmath46 extracted from @xmath105 ( and @xmath106 is the size of the sample ) and where @xmath107 is the average over the nes ( for fixed @xmath26 and @xmath46 ) of the sum of the workloads for connected users , which is computed with an exhaustive enumeration of the possible allocations @xmath108 .",
    "a similar comparison is done for @xmath109 .",
    "of course , in this scenario the number of users is limited since the exhaustive enumeration is possible only if the size of the instance is very small .",
    "scatter plots a and b in fig .",
    "[ figcomparison ] compare our algorithm with the exhaustive enumeration under scenario s1 . as the sample size @xmath110 increases ,",
    "the data points tend to collapse onto the diagonal , i.e. , as the accuracy of the sampling procedure improves , the results obtained by sampling tend to those obtained with the message passing algorithm , except for a small number of `` outliers '' ( less than one percent of the instances ) .",
    "this confirms that , even on very small instances , the two hypotheses on which our method is based , namely the decorrelation assumption of the cavity method and the factorization hypothesis for the partition function @xmath111 , are a good approximation .",
    "+        in the next scenario s2 , we compare the results obtained by our algorithm with those obtained by computing the average over the nes ( for fixed @xmath46 ) with bp , and then averaging over @xmath46 with an explicit sampling .",
    "this allows us to test , on larger instances , the factorization assumption for the partition function @xmath111 .",
    "note that our algorithm requires only one convergence of the message passing procedure to perform both averages .",
    "the explicit sampling , instead , requires @xmath112 convergences of a message passing , which is ( almost ) as complex as ours ; thus , it is roughly slower by a factor @xmath112 .",
    "this limits the number of instances that we have been able to analyze to less than 100 .",
    "again , scatter plots c and d of fig .",
    "[ figcomparison ] show that , as the sample size @xmath112 increases , the data points tend to collapse onto the diagonal , with the exception of a few cases for the estimation of @xmath102 .      finally , in scenario s3 we provide an example of optimization .",
    "we used our greedy decimation heuristic based on the message passing algorithm for a single instance .",
    "the heuristic we use to find the optimal allocation @xmath26 is the following .",
    "we start by computing the value of the objective function @xmath113}w_{us } \\right\\rangle \\right]\\end{aligned}\\ ] ] when all the service units are on ( i.e.  @xmath114 for each @xmath7 ) .",
    "then , we compute the same objective function for all the configurations obtained by switching off one service unit .",
    "we actually switch off the service unit that corresponds to the smallest drop in the objective function .",
    "the same procedure is then iterated , computing the variations in the objective function associated to switching off each of the service units that are still on , and actually switching off the one that minimizes the drop , until all the service units are off ( or we decide to stop ) .",
    "the results of this `` greedy decimation '' are shown in fig .",
    "we observe that during the first 8 steps of the decimation ( i.e. as we switch off the first 8 service units ) the value of the objective function decreases very modestly ( dropping by 0.18% overall ) , while for larger number of steps the drops are much greater .",
    "we therefore decide to stop the decimation after 8 steps .",
    "this allows to switch - off 16% of the service units ( i.e. to save 16% of the electric power ) without affecting at all the service level .",
    "in this paper , we presented a novel computationally efficient optimization approach for distributed resource allocation problems under user behavior uncertainty .",
    "we propose a belief propagation scheme to compute the costs of different service configurations .",
    "this is obtained by averaging over all the possible nash equilibrium points associated to a given system configuration .",
    "the authors acknowledge the european grants fet open 265496 , erc 267915 and italian firb project rbfr10quw4 .            e. koutsoupias and c. h. papadimitriou .",
    "worst - case equilibria .",
    "_ symp . on theoretical aspects of computer science _",
    "e. even - dar , a. kesselman , and y. mansour .",
    "convergence time to nash equilibria . in _ proc .",
    "30th international colloq . on automata , languages and programming _ , pp .",
    "502 - 513 ( 2003 ) .",
    "a. goel and p. indyk .",
    "stochastic load balancing and related problems . _",
    "symp .  on foundations of computer science _",
    "j. kleinberg , y. rabani , and e. tardos .",
    "allocating bandwidth for bursty connections .",
    "29th acm symposium on theory of computing _ ( 1997 ) .",
    "f. altarelli , a. braunstein , a. ramezanpour , and r. zecchina , stochastic matching problem , _ phys .",
    "lett . _ * 106 * ( 2011 ) m. mzard and a. montanari _ information , physics and computation_. oxford graduate texts ( 2009 ) ."
  ],
  "abstract_text": [
    "<S> we develop a computationally efficient technique to solve a fairly general distributed service provision problem with selfish users and imperfect information . </S>",
    "<S> in particular , in a context in which the service capacity of the existing infrastructure can be partially adapted to the user load by activating just some of the service units , we aim at finding the configuration of active service units that achieves the best trade - off between maintenance ( e.g.  energetic ) costs for the provider and user satisfaction . </S>",
    "<S> the core of our technique resides in the implementation of a belief - propagation ( bp ) algorithm to evaluate the cost configurations . </S>",
    "<S> numerical results confirm the effectiveness of our approach . </S>"
  ]
}
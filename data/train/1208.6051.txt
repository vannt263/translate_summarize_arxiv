{
  "article_text": [
    "the growing abundance of ( mobile ) computation and communication devices creates a rich potential for novel distributed systems and applications . unlike classical networks ,",
    "often the resulting networks and applications are characterized by a high level of churn and , especially in the case of mobile devices , a potentially constantly changing topology .",
    "traditionally , changes in a network have been studied as faults or as exceptional events that have to be tolerated and possibly repaired .",
    "however , particularly in mobile applications , dynamic networks are a typical case and distributed algorithms have to properly work even under the assumption that the topology is constantly changing .",
    "consequently , in the last few years , there has been an increasing interest in distributed algorithms that run in dynamic systems .",
    "specifically , a number of recent papers investigate the complexity of solving fundamental distributed computations and information dissemination tasks in dynamic networks , e.g. , @xcite . particularly important in the context of this paper",
    "is the synchronous , adversarial dynamic network model defined in @xcite .",
    "while the network consists of a fixed set of participants @xmath16 , the topology can change arbitrarily from round to round , subject to the restriction that the network of each round needs to be connected or satisfy some stronger connectivity requirement .",
    "we study lower bounds on the problem of disseminating a bunch of tokens ( messages ) to all the nodes in a dynamic network as defined in @xcite .",
    "initially @xmath0 tokens are placed at some nodes in the network .",
    "time is divided into synchronous rounds , the network graph of every round is connected , and in every round , each node can broadcast one token to all its neighbors . if in addition , all nodes know the size of the network @xmath1 , we can use the following basic protocol to broadcast all @xmath0 tokens to all the nodes .",
    "the tokens are broadcast one after the other such that for each token during @xmath17 rounds , every node that knows about the token forwards it . because in each round , there has to be an edge between the nodes knowing the token and the nodes not knowing it , at least one new node receives the token in every round and thus , after @xmath17 rounds ,",
    "all nodes know the token .",
    "assuming that only one token can be broadcast in a single message , the algorithm requires @xmath18 rounds to disseminate all @xmath0 tokens to all the nodes .    even though the described approach seems almost trivial , as long as we do not consider protocols based on network coding , @xmath2 is the best upper bound known . in @xcite ,",
    "token - forwarding algorithm _ is defined as an algorithm that needs to forward tokens as they are and is not allowed to combine or change tokens in any way .",
    "note that the algorithm above is a token - forwarding algorithm . in a recent paper , dutta et al .",
    "show that for deterministic token - forwarding algorithms , the described simple strategy indeed can not be significantly improved by showing a lower bound of @xmath19 rounds @xcite .",
    "their lower bound is based on the following observation .",
    "assume that initially , every node receives every token for free with probability @xmath20 ( independently for all nodes and tokens ) .",
    "now , with high probability , whatever tokens the nodes decide to broadcast in the next round , the adversary can always find a graph in which new tokens are learned across at most @xmath21 edges .",
    "hence , in each round , at most @xmath21 tokens are learned . because also after randomly assigning tokens with probability @xmath20 , overall still roughly @xmath22 tokens are missing , the lower bound follows . we extend the lower bound from @xcite in various natural directions .",
    "specifically , we make the contributions listed in the following .",
    "all our lower bounds hold for deterministic algorithms and for randomized algorithms assuming a strongly adaptive adversary ( cf.section [ sec : model ] ) .",
    "our results are also summarized in which is discussed in section [ sec : related ] .",
    "[ [ multiple - tokens - per - round ] ] multiple tokens per round : + + + + + + + + + + + + + + + + + + + + + + + + + +    assume that instead of forwarding a single token per round , each node is allowed to forward up to @xmath23 tokens in each round . in the simple token - forwarding algorithm that we described above",
    ", we can then forward a block of @xmath24 tokens to every node in @xmath17 rounds and we therefore get an @xmath25 round upper bound . we show that every ( randomized ) token - forwarding algorithm needs at least @xmath26 rounds .",
    "[ [ interval - connectivity ] ] interval connectivity : + + + + + + + + + + + + + + + + + + + + + +    it is natural to assume that a dynamic network can not change arbitrarily from round to round and that some paths remain stable for a while .",
    "this is formally captured by the notion of interval connectivity as defined in @xcite .",
    "a network is called @xmath10-interval connected for an integer parameter @xmath27 if for any @xmath10 consecutive rounds , there is a stable connected subgraph .",
    "it is shown in @xcite that in a @xmath10-interval connected dynamic network , @xmath0-token dissemination can be solved in @xmath28 rounds . in this paper , we show that every ( randomized ) token - forwarding algorithm needs at least @xmath29 rounds .",
    "[ [ vertex - connectivity ] ] vertex connectivity : + + + + + + + + + + + + + + + + + + + +    if instead of merely requiring that the network is connected in every round , we assume that the network is @xmath7-vertex connected in every round for some @xmath30 , we can also obtain a speed - up . because in a @xmath7-vertex connected graph , every vertex cut has size at least @xmath7 , if in a round all nodes that know a token @xmath31 broadcast it , at least @xmath7 new nodes are reached .",
    "the basic token - forwarding algorithm thus leads to an @xmath32 upper bound .",
    "we prove this upper bound tight up to a small factor by showing an @xmath33 lower bound .",
    "[ [ delta - partial - token - dissemination ] ] @xmath13-partial token dissemination : + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    finally we consider the basic model , but relax the requirement on the problem by requiring that every node needs to obtain only a @xmath13-fraction of all the @xmath0 tokens for some parameter @xmath34 $ ] .",
    "we show that even then , at least @xmath35 rounds are needed .",
    "this also has implications for algorithms that use forward error correcting codes ( fec ) to forward coded packets instead of tokens .",
    "we show that such algorithms still need at least @xmath36 rounds until every node has received enough coded packets to decode all @xmath0 tokens .",
    ".upper and lower bounds for token forwarding ( tf ) algorithms and network coding ( nc ) based solutions ( bounds in bold are proven in this paper ) .",
    "all tf algorithms are distributed and deterministic while all lower bounds are for centralized randomized algorithms and a strongly adaptive adversary . the nc algorithms work either in the distributed setting against a ( standard ) adaptive adversary ( 1 ) or in the centralized setting against a strongly adaptive adversary ( 2 ) . [ cols=\"<,^,^,^\",options=\"header \" , ]      +    as stated in the introduction , we use the network model introduced in @xcite .",
    "that paper studies the complexity of computing basic functions such as counting the number of nodes in the network , as well as the cost the token dissemination problem that we investigate in the present paper .",
    "previously , some basic results of the same kind were also obtained in @xcite for a similar network model .    the token dissemination problem as studied here",
    "is first considered in @xcite in a dynamic network setting .",
    "the paper gives a variant of the distributed @xmath2 token - forwarding algorithm for the case when the number of nodes @xmath1 is not known .",
    "it is also shown that @xmath10-interval connectivity and always @xmath7-vertex connectivity are interesting parameters that speed up the solution by factors of @xmath37 and @xmath38 , respectively .",
    "in addition , @xcite gives a first @xmath39 lower bound for token - forwarding algorithms in the centralized setting we study in the present paper . that lower bound is substantially improved in @xcite , where an almost tight @xmath19 lower bound is proven .",
    "as the lower bound from @xcite is the basis of our results , we discuss it in detail in section [ sec : original ] .    the fastest known algorithms for token dissemination in dynamic networks are based on random linear network coding .",
    "there , tokens are understood as elements ( or vectors ) of a finite field and in every round , every node broadcasts a random linear combination of the information it possesses . in a centralized setting , the overhead for transmitting the coefficients of the linear combination can be neglected . for this case , it is shown in @xcite that in always connected dynamic networks , @xmath0 tokens can be disseminated in optimal @xmath40 time . if messages are large enough to store @xmath24 tokens , this bound improves to again optimal @xmath41 time .",
    "it is also possible to extend these results to always @xmath7-connected networks and to the partial token dissemination problem .",
    "note that one possible solution for @xmath13-partial token dissemination is to solve regular token dissemination for only @xmath42 tokens .",
    "if the overhead for coefficients is not neglected , the best known upper bounds are given in @xcite .",
    "the best bounds for tokens of size @xmath21 , as well as the upper and lower bounds for the other scenarios are listed in .",
    "the given bound for always @xmath7-vertex connected networks is not proven in @xcite , it can however be obtained with similar techniques .",
    "note also that instead of @xmath10-interval connectivity , @xcite considers a somewhat stronger assumption called @xmath10-stability . in a @xmath10-stable network ,",
    "the network remains fixed for intervals of length @xmath10 .",
    "apart from token dissemination and basic aggregation tasks , other problems have been considered in the same or similar adversarial dynamic network models . in @xcite , the problem of coordinating actions in time",
    "is studied for always connected dynamic networks . in a recent paper ,",
    "bounds on what can be achieved if the network is not always connected are discussed in @xcite . for a model where nodes know their neighbors before communicating , @xcite studies the time to do a random walk if the network can change adversarially .",
    "further , the problem of gradient clock synchronization has been studied for an asynchronous variant of the model @xcite .",
    "in addition , a number of papers investigate a radio network variant of essentially the dynamic network model studied here @xcite .",
    "another line of research looks at random dynamic networks that result from some markov process , e.g. , @xcite .",
    "mostly these papers analyze the time required to broadcast a single message in the network . for a more thorough discussion of related work",
    ", we refer to a recent survey @xcite .",
    "lower bounds : + @xmath43 : @xcite    @xmath44 ( for very restricted class of algorithms ) : @xcite    @xmath45 : @xcite    all lower bounds hold for centralized algorithms    upper bounds :    @xmath44 @xcite    c - connected : @xmath46 ( easy extension of @xcite )    @xmath13-gossip : @xmath47 ( easy extension of @xcite )    t - interval - connectivity and t - stability : @xmath48 @xcite + nc : @xmath49 ( packet size = token size = @xmath21 )    nc t - stability : @xmath50 @xcite    nc token size / packet size = l : @xmath51 @xcite    nc centralized : @xmath52 @xcite    nc centralized c - connected : @xmath53 @xcite    network coding @xcite , random linear network coding @xcite",
    "in this section we introduce the dynamic network model and the token dissemination problem .    [ [ dynamic - networks ] ] dynamic networks : + + + + + + + + + + + + + + + + +    we follow the dynamic network model of @xcite : a dynamic network consists of a fixed set @xmath16 of @xmath1 nodes and a dynamic edge set @xmath54 .",
    "time is divided into synchronous rounds so that the network graph of round @xmath55 is @xmath56 .",
    "we use the common assumption that round @xmath57 starts at time @xmath58 and it ends at time @xmath57 . in each round @xmath57 , every node @xmath59 can send a message to all its neighbors in @xmath60 . note that we assume that @xmath61 has to send the same message to all neighbors , i.e. , communication is by local broadcast .",
    "also , we assume that at the beginning of a round @xmath57 , when the messages are chosen , nodes are not aware of their neighborhood in @xmath60 .",
    "we typically assume that the message size is bounded by the size of a fixed number of tokens .",
    "we say that a dynamic network @xmath62 is _ always @xmath7-vertex connected _ iff @xmath60 is @xmath7-vertex connected for every round @xmath57 .",
    "if a network @xmath63 is always @xmath64-vertex connected , we also say that @xmath63 is _",
    "always connected_. further , we use the definition for interval connectivity from @xcite .",
    "a dynamic network is @xmath10-interval connected for an integer parameter @xmath27 iff the graph @xmath65 is connected for every @xmath55 .",
    "hence , a graph is @xmath10-interval connected iff there is a stable connected subgraph for every @xmath10 consecutive rounds .",
    "note we do not assume that nodes know the stable subgraph . also note that a dynamic graph is @xmath64-interval connected iff it is always connected .    for our lower bound ,",
    "we assume randomized algorithms and a _ strongly adaptive adversary _ which can decide on the network @xmath60 of round @xmath57 based on the complete history of the network up to time @xmath58 as well as on the messages the nodes send in round @xmath57 .",
    "note that the adversary is stronger than the more typical _ adaptive adversary _ where the graph @xmath60 of round @xmath57 is independent of the random choices that the nodes make in round @xmath57 .",
    "[ [ the - token - dissemination - problem ] ] the token dissemination problem : + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we prove lower bounds on the following _ token dissemination problem_. there are @xmath0 tokens initially distributed among the nodes in the network ( for simplicity , we assume that @xmath0 is at most polynomial in @xmath1 ) .",
    "we consider _ token - forwarding algorithms _ as defined in @xcite . in each round , every node is allowed to broadcast @xmath66 of the tokens it knows to all neighbors . except for section [ sec : multipletokens ] ,",
    "we assume that @xmath67 .",
    "no other information about tokens can be sent , so that a node @xmath68 knows exactly the tokens @xmath68 kept initially and the tokens that were included in some message @xmath68 received .",
    "in addition , we also consider the _",
    "@xmath13-partial token dissemination _ problem .",
    "again , there are @xmath0 tokens that are initially distributed among the nodes in the network . but here , the requirement is weaker and we only demand that in the end , every node knows a @xmath13-fraction of the @xmath0 tokens for some @xmath69 $ ] .",
    "we prove our lower bounds for centralized algorithms where a central scheduler can determine the messages sent by each node in a round @xmath57 based on the initial state of all the nodes before round @xmath57 .",
    "note that lower bounds obtained for such centralized algorithms are stronger than lower bounds for distributed protocols where the message broadcast by a node @xmath68 in round @xmath57 only depends on the initial state of @xmath68 before round @xmath57 .",
    "we start our description of the lower bound by outlining the basic techniques and by giving a slightly polished version of the lower bound proof by dutta et al .  @xcite . for the discussion here , we assume that in each round , each node is allowed to broadcast a single token , i.e. , @xmath67 .    in the following ,",
    "we make the standard assumption that round @xmath57 lasts from time @xmath58 to time @xmath57 . for each node , we maintain two sets of tokens . for a time @xmath70 and a node @xmath68 , let @xmath71 be the set of tokens known by node @xmath68 at time @xmath31 .",
    "in addition the adversary determines a token set @xmath72 for every node , where @xmath73 for all @xmath70 .",
    "the sets @xmath72 are constructed such that under the assumption that each node @xmath68 knows the tokens @xmath74 at time @xmath31 , in round @xmath75 , overall the nodes can not learn many new tokens .",
    "specifically , we define a potential function @xmath76 as follows : @xmath77 note that for the token dissemination problem to be completed at time @xmath10 it is necessary that @xmath78 .",
    "assume that at the beginning , the nodes know at most @xmath79 tokens on average , i.e. , @xmath80 .",
    "for always connected dynamic graphs , we will show that there exists a way to choose the @xmath81-sets such that @xmath82 and that for every choice of the algorithm , a simple greedy adversary can ensure that the potential grows by at most @xmath21 per round .",
    "we then have @xmath83 and since the potential needs to grow to @xmath44 , we get an @xmath84 lower bound .    in each round @xmath57 , for each node @xmath68 , an algorithm can decide on a token to send .",
    "we denote the token sent by node @xmath68 in round @xmath57 by @xmath85 and we call the collection of pairs @xmath86 for nodes @xmath87 , the token assignment of round @xmath57 .",
    "note that because a node can only broadcast a token it knows , @xmath88 needs to hold .",
    "however , for most of the analysis , we do not make use of this fact and just consider all the @xmath0 possible pairs @xmath86 for a node @xmath68 .    if the graph @xmath60 of round @xmath57 contains the edge @xmath89 , @xmath68 or @xmath61 learns a new token if @xmath90 or if @xmath91 .",
    "moreover , the edge @xmath89 contributes to an increase of the potential function @xmath92 in round @xmath57 if @xmath93 or if @xmath94 .",
    "we call an edge @xmath95 _ free _ in round @xmath57 iff the edge does not contribute to the potential difference @xmath96 .",
    "in particular , this implies that an edge is free if @xmath97    to construct the @xmath81-sets we use the probabilistic method .",
    "more specifically , for every token @xmath98 and all nodes @xmath68 , we independently put @xmath99 with probability @xmath100 .",
    "the following lemma shows that then only a small number of non - free edges are required in every graph @xmath60 .",
    "[ lemma : freeedges ] if each set @xmath101 contains each token @xmath98 independently with probability @xmath100 , for every round @xmath57 and every token assignment @xmath102 , the graph @xmath103 induced by all free edges in round @xmath57 has at most @xmath21 components with probability at least @xmath104 .",
    "assume that the graph @xmath103 has at least @xmath105 components for some @xmath106 .",
    "@xmath103 then needs to have an independent set of size @xmath105 , i.e. , there needs to be a set @xmath107 of size @xmath108 such that for all @xmath109 , the edge @xmath89 is not free in round @xmath57 . using and the fact that @xmath110 for all @xmath68 and @xmath70 , an edge @xmath89 is free in round @xmath57 if @xmath111 and @xmath112 or if @xmath113 .    to argue that @xmath105 is always small we use a union bound over all @xmath114 ways to choose a set of @xmath105 nodes and all at most @xmath115 ways to choose the tokens to be sent out by these nodes .",
    "note that since two nodes sending out the same token induce a free edge , all tokens sent out by nodes in @xmath116 have to be distinct .",
    "furthermore , for any pair of nodes @xmath117 there is a probability of exactly @xmath118 for the edge @xmath89 to be free and this probability is independent for any pair @xmath119 with @xmath120 because nodes in @xmath116 send distinct tokens .",
    "the probability that all @xmath121 node pairs of @xmath116 are non - free is thus exactly @xmath122 . if @xmath123 ( assuming @xmath124 ) , the union bound @xmath125 is less than @xmath126 as desired .",
    "this shows that there is a way to choose the sets @xmath101 such that the greedy adversary always chooses a topology in which the graph @xmath103 induced by all free edges has at most @xmath127 components .",
    "based on lemma [ lemma : freeedges ] , the lower bound from @xcite now follows almost immediately .",
    "[ thm : original ] in an always connected dynamic network with @xmath0 tokens in which nodes initially know at most @xmath79 tokens on average , any centralized token - forwarding algorithm takes at least @xmath128 rounds to disseminate all tokens to all nodes .    by independently including each token with probability @xmath126 in each of the sets @xmath129",
    ", we have that @xmath130 with probability at least @xmath104 ( for sufficiently large @xmath44 ) .",
    "further , by lemma [ lemma : freeedges ] , with probability at least @xmath104 , we obtain sets @xmath129 such that the potential can only grow by @xmath21 in every round . hence , there exists set @xmath101 such that the initial potential is at most @xmath131 and in each round , the potential function does not grow by more than @xmath21 . as in the end",
    "the potential function has to reach @xmath44 , the claim then follows .",
    "we conclude our discussion of generalizations of the basic lower bound proof of section [ sec : original ] by showing two relatively simple results concerning partial token dissemination and a related problem .",
    "[ thm : deltalb ] for any @xmath132 , suppose an always connected dynamic network with @xmath0 tokens in which nodes initially know at most @xmath133 tokens on average .",
    "then , any centralized token - forwarding algorithm requires at least @xmath134 rounds to solve @xmath13-partial token dissemination .",
    "the proof is analogous to the proof in section [ sec : original ] .",
    "again , we construct the @xmath81-sets using the probabilistic method . here",
    ", we include every token in every set @xmath101 with probability @xmath135 .",
    "for sufficiently large @xmath1 , we then get that @xmath136 with probability at least @xmath104 .",
    "a potential of at least @xmath137 is needed to terminate at time @xmath10 .",
    "following the same proof as for , there exists @xmath81-sets such that in each round the potential increases by at most @xmath138 which implies a @xmath139 lower bound .",
    "let us now consider an interesting special case where initially one node knows all the tokens .",
    "in this situation , a simple way of applying coding for token dissemination is to use forward error correcting codes ( fec ) . from the @xmath0 tokens ,",
    "such a code generates a large number of code words ( of essentially the same length as one of the message ) , so that getting any @xmath0 code words allows to reconstruct all the @xmath0 messages .    any token dissemination algorithm",
    "as described above takes at least @xmath140 rounds to disseminate @xmath0 tokens .",
    "let @xmath10 be the time in which the fec - based token dissemination algorithm terminates .",
    "the total number of different fec messages sent is at most @xmath10 and every node needs to receiver at least a @xmath141 fraction of these messages . from",
    "we thus get that @xmath142 which leads to @xmath143 . as the network",
    "can be a static network of diameter linear in @xmath1 , @xmath144 is clearly also a lower bound on the time needed .",
    "together , the two bounds imply the claim of the theorem .      in this section",
    "we show that it is possible to extend the lower bound to the case where nodes can send out @xmath145 tokens in each round .",
    "note that it is a priori not clear that this can be done as for instance the related @xmath39 lower bound of @xcite breaks down completely if nodes are allowed to send two instead of one tokens in each round .    in order to prove a lower bound for @xmath145",
    ", we generalize the notion of free edges .",
    "let us first consider a token assignment for the case @xmath145 .",
    "instead of sending a single token @xmath85 , each node @xmath68 now broadcasts a set @xmath146 of at most @xmath24 tokens in every round @xmath57 .",
    "analogously to before , we call the collection of pairs @xmath147 for @xmath87 , the token assignment of round @xmath57 .",
    "we define the weight of an edge in round @xmath57 as the amount the edge contributes to the potential function growth in round @xmath57 .",
    "hence , the weight @xmath148 of an edge @xmath95 is defined as @xmath149 as before , we call an edge @xmath150 with weight @xmath151 free . given the edge weights and the potential function as in section [ sec : original ] , a simple possible strategy of the adversary works as follows .",
    "in each round , the adversary connects the nodes using an mst w.r.t .",
    "the weights @xmath148 for all @xmath152 .",
    "the total increase of the potential function is then upper bounded by the weight of the mst .    for the mst to contain @xmath153 or more edges of weight at least @xmath154",
    ", there needs to be set @xmath116 of @xmath155 nodes such that the weight of every edge @xmath89 for @xmath109 is at least @xmath154 .",
    "the following lemma bounds the probability for this to happen , assuming that the @xmath81-sets are chosen randomly such that every token @xmath98 is contained in every set @xmath101 with probability @xmath156 for some constant @xmath157 .",
    "[ lemma : cliques ] assume that each set @xmath129 contains each token independently with probability @xmath158 .",
    "then , for every token assignment @xmath159 , there exists a set @xmath116 of size @xmath155 such that all edges connecting nodes in @xmath116 have weight at least @xmath154 with probability at most @xmath160    consider an arbitrary ( but fixed ) set of nodes @xmath161 and a set of token sets @xmath162 ( we assume that the token assignment contains the @xmath155 pairs @xmath163 ) .",
    "we define @xmath164 to be the event that @xmath165 .",
    "note that whenever @xmath166 grows by more than @xmath167 , the event @xmath164 definitely happens . in order to have @xmath168 for each @xmath169 ,",
    "at least @xmath170 of the events @xmath164 need to occur .",
    "hence , for all edges @xmath171 , @xmath172 , to have weight at least @xmath154 , at least @xmath170 of the events @xmath164 have to happen . as the event @xmath164 only depends on the randomness used to determine @xmath173 ,",
    "events @xmath164 for different @xmath98 are independent .",
    "the number of events @xmath164 that occur is thus dominated by a binomial random variable @xmath174\\big)$ ] variable with parameters @xmath155 and @xmath175 $ ] .",
    "the probability @xmath176 $ ] for each @xmath98 can be bounded as follows : @xmath177 \\leq { \\ell b\\choose \\ell w/4 } \\cdot      \\left(\\frac{{\\varepsilon}}{4e b}\\right)^{\\ell w/4 } \\leq      \\left(\\frac{4e\\ell b}{\\ell w}\\right)^{\\ell          w/4}\\cdot\\left(\\frac{{\\varepsilon}}{4e b}\\right)^{\\ell w /4 } =      \\left(\\frac{{\\varepsilon}}{w}\\right)^{\\ell w /4}.\\ ] ] let @xmath178 be the number of events @xmath164 that occur .",
    "we have @xmath179 \\leq       { \\ell+1\\choose ( \\ell+1)/3}\\cdot      \\left(\\frac{{\\varepsilon}}{w}\\right)^{\\frac{\\ell w}{4}\\cdot \\frac{\\ell+1}{3 } }      \\leq      2^{\\ell+1}\\cdot      \\left(\\frac{{\\varepsilon}}{w}\\right)^{\\frac{\\ell w}{4}\\cdot \\frac{\\ell+1}{3}}.\\ ] ] the number of possible ways to choose @xmath155 nodes and assign a set of @xmath24 tokens to each node is @xmath180 the claim of the lemma now follows by applying a union bound over all possible choices @xmath161 and @xmath162 .    based on lemma [ lemma : cliques ]",
    ", we obtain the following theorem .",
    "[ thm : multipletoken ] on always connected dynamic networks with @xmath0 tokens in which nodes initially know at most @xmath79 tokens on average , every centralized randomized token - forwarding algorithm requires at least @xmath181 rounds to disseminate all tokens to all nodes .    for @xmath182 ,",
    "let @xmath183 be the size of the largest set @xmath184 , such that that edge between any two nodes @xmath185 has weight at least @xmath186 .",
    "hence , in the mst , there are at most @xmath187 edges with weight between @xmath186 and @xmath188 .",
    "the amount by which the potential function @xmath92 increases in round @xmath57 can then be upper bounded by @xmath189 by lemma [ lemma : cliques ] ( and a union bound over the @xmath190 different @xmath186 ) , for a sufficiently small constant @xmath157 , @xmath191 with high probability .",
    "the number of tokens learned in each round can thus be bounded by @xmath192 by a standard chernoff bound , with high probability , the initial potential is of the order @xmath193 .",
    "therefore to disseminate all tokens to all nodes , the potential has to increase by @xmath194 and the claim follows .",
    "while allowing that the network can change arbitrarily from round to round is a clean and useful theoretical model , from a practical point of view it might make sense to look at dynamic graphs that are a bit more stable . in particular",
    ", some connections and paths might remain reliable over some period of time . in @xcite , token dissemination and the other problems considered",
    "are studied in the context of @xmath10-interval connected graphs . for @xmath10 large enough ,",
    "sufficiently many paths remain stable for @xmath10 rounds so that it is possible to use pipelining along the stable paths to disseminate tokens significantly faster ( note that this is possible even though the nodes do not know which edges are stable ) . in the following , we show that the lower bound described in section [ sec : original ] can also be extended to @xmath10-interval connected networks .    on @xmath10-interval connected dynamic networks in which nodes initially know at most @xmath79 of @xmath0 tokens on average , every randomized token - forwarding algorithm requires at least @xmath195 rounds to disseminate all tokens to all nodes .",
    "we assume that each of the sets @xmath101 independently contains each of the @xmath0 tokens with probability @xmath196 for a sufficiently small constant @xmath157 . as before , we let @xmath85 be the token broadcast by node @xmath68 in round @xmath57 and call the set of pairs @xmath86 the token assignment of round @xmath57 . in the analysis , we will also make use of token assignments of the form @xmath197 , where @xmath198 is a set of tokens sent by some node @xmath68 .",
    "given a token assignment @xmath199 , as in the previous subsection , an edge @xmath89 is free in particular if @xmath200 .",
    "let @xmath201 be the free edges w.r.t .  a given token assignment @xmath202 .",
    "further , we define @xmath203 to be the partition of @xmath16 induced by the components of the graph @xmath204 .",
    "consider a sequence of @xmath205 consecutive rounds @xmath206 .",
    "for a node @xmath207 and round @xmath208 , @xmath209 $ ] , let @xmath210 be the set of tokens transmitted by node @xmath207 in rounds @xmath211 and let @xmath212 .",
    "as above , let @xmath213 be the free edges for the token assignment @xmath214 and let @xmath215 be the partition of @xmath16 induced by the components of the graph @xmath216",
    ". note that for @xmath217 , @xmath218 and @xmath219 is a sub - division of @xmath215 .",
    "we construct edge sets @xmath220 as follows . the set @xmath221 contains @xmath222 edges to connect the components of the graph @xmath223 . for @xmath224 , the edge set @xmath225",
    "is chosen such that @xmath226 , @xmath227 , and the graph @xmath228 is connected .",
    "note that such a set @xmath225 exists by induction on @xmath98 and because @xmath215 is a sub - division of @xmath229 .    for convenience ,",
    "we define @xmath230 . by the above construction",
    ", the number of edges in @xmath231 is @xmath232 , where @xmath233 is the number of components of the graph @xmath216 . because in each round , every node transmits only one token , the number of tokens in each @xmath234 is at most @xmath235 . by lemma [ lemma : cliques ] , if the constant @xmath236 is chosen small enough , the number of components of @xmath204 and therefore the size of @xmath231 is upper bounded by @xmath237 , w.h.p .",
    "we construct the dynamic graph as follows . for simplicity , assume that the first round of the execution is round @xmath238 . consider some round @xmath57 and let @xmath239 be the largest round number such that @xmath240 and @xmath241 . the edge set in round @xmath98 consists of the the free edges in round @xmath98 , as well as of the sets @xmath242 and @xmath243 .",
    "the resulting dynamic graph is @xmath10-interval - connected .",
    "furthermore , the number of non - free edges in each round is @xmath244 . because in each round",
    ", at most @xmath245 tokens are learned over each non - free edge , the theorem follows .",
    "[ lem : randomgraph ] for any @xmath1 and constant @xmath132 an erdoes - renyi random graph @xmath246 is @xmath144-vertex - connected with probability at least @xmath247 .",
    "do a union bound over all sizes @xmath105 and all cuts of size @xmath105 to have at least @xmath0 neighbors .    rather than requiring more connectivity over time",
    ", we now consider the case when the network is better connected in every round . if the network is @xmath7-vertex connected for some @xmath30 , in every round , each set of nodes can potentially reach @xmath7 other nodes ( rather than just @xmath64 ) . in @xcite",
    ", it is shown that for the basic greedy token forwarding algorithm , one indeed gains a factor of @xmath38 if the network is @xmath7-vertex connected in every round .",
    "we first need to state two general facts about vertex connected graphs .",
    "[ lem : cconnect ] if in a graph @xmath63 there exists a vertex @xmath61 with degree at least @xmath7 such that @xmath248 is @xmath7-vertex connected then @xmath63 is also @xmath7-vertex connected .",
    "[ lem : kconnectmindegree ] for @xmath7 , any @xmath1-node graph @xmath62 with minimum degree at least @xmath249 can be augmented by @xmath1 edges to be @xmath7-vertex connected .",
    "we specialize the much more powerful results of @xcite which characterize the minimum number of augmentation edges needed to our setting :    according to ( * ? ? ?",
    "* p41 , criterion 4 ) any graph with minimum degree at least @xmath249 is @xmath7-independent and for such a graph @xmath63 it holds that the minimum number of edges needed to make it @xmath7-vertex connected is exactly @xmath250 ( * ? ? ?",
    "* theorem 3.12 ) . here ,",
    "@xmath251 is the maximum number of connected components @xmath63 can be dissected by removing @xmath252 nodes ( which is at most @xmath253 ) and @xmath254 is at most the maximum value for @xmath255 that can be obtained for a disjoint node partitioning @xmath256 ( * ? ? ?",
    "* p33 ) . here",
    "@xmath257 is the set of nodes neighboring @xmath258 , i.e. , @xmath259 .",
    "because every node has degree at least @xmath249 , @xmath260 and thus @xmath261    we will also need the following basic result about weighted sums of bernoulli random variables .",
    "[ lem : increase ] for some @xmath7 let @xmath262 be positive integers with @xmath263 .",
    "furthermore , let @xmath264 be i.i.d .  bernoulli variables with @xmath265 = { \\mathbb{p}}[x_i = 0 ] =      1/2 $ ] for all @xmath98 . for any integer",
    "@xmath266 it holds that : @xmath267\\land               \\sum_{i \\in \\{j | x_j = 1\\ } \\cup l } \\ell_i \\geq          c\\right\\ } } > x \\right ] < 2^{-\\theta(\\frac{x\\ell}{c})}.\\ ] ] that is , the probability that @xmath268 of the random variables need to be switched to one after a random assignment in order get @xmath269 is at most @xmath270 .",
    "fix a positive integer @xmath268 .",
    "suppose without loss of generality that @xmath271 .",
    "clearly @xmath272 always holds if @xmath273 .",
    "thus , there is nothing to show unless @xmath274 for all @xmath275 and @xmath276 .",
    "for this case , consider a scaling by a factor of @xmath277 of all the values .",
    "the scaled values @xmath278 for @xmath279 are at most one and the scaled expectation of the sum is @xmath280 >       \\frac{2}{3}\\ell\\cdot\\frac{x}{c}\\cdot\\frac{1}{2}=\\frac{\\ell           x}{3c}$ ] .",
    "a standard chernoff bound then shows that @xmath281 < 2^{-\\theta(\\frac{x\\ell}{c})}$ ] .    to prove our lower bound for always @xmath7-connected graph , we initialize the @xmath81-sets as for always connected graphs , i.e. , each token @xmath98 is contained in every set @xmath101 with constant probability @xmath282 ( we assume @xmath283 in the following ) . in each round",
    ", the adversary picks a @xmath7-connected graph with as few free edges as possible . using lemmas [ lem : cconnect ] and [ lem : kconnectmindegree ]",
    ", we will show that a graph with a small number of non - free edges can be constructed as follows .",
    "first , as long as we can , we pick vertices with at least @xmath7 neighbors among the remaining nodes .",
    "we then show how to extend the resulting graph to a @xmath7-connected graph .",
    "[ lem : cconlb1 ] with high probability ( over the choices of the sets @xmath101 ) , for every token assignment @xmath159 , the largest set @xmath116 for which no node @xmath284 has at least @xmath7 neighbors in @xmath116 is of size @xmath285 .",
    "consider some round @xmath57 with token assignment @xmath286 . we need to show that for any set @xmath116 of size @xmath287 for a sufficiently large constant @xmath288 , at least one node in @xmath116 has at least @xmath7 free neighbors in @xmath116 ( i.e. , the largest degree of the graph induced by the free edges between nodes in @xmath116 is at least @xmath7 ) .",
    "we will use a union bound over all @xmath289 sets @xmath116 and all @xmath115 possibilities for selecting the tokens sent by these nodes .",
    "we want to show that if the constant @xmath288 is chosen sufficiently large , for each of these @xmath290 possibilities we have a success probability of at least @xmath291 .",
    "we first partition the nodes in @xmath116 according to the token sent out , i.e. , @xmath184 is the subset of nodes sending out token @xmath98 .",
    "note that if for some @xmath292 we have @xmath293 we are done since all edges between nodes sending the same token are free . with this , let @xmath294 be such that @xmath295 and @xmath296 .",
    "we now claim that for every @xmath297 , with probability at most @xmath298 , there does not exist a node in @xmath299 that has at least @xmath7 free edges to nodes in @xmath300 .",
    "note that the events that a node from @xmath299 has at least @xmath7 free edges to nodes in @xmath301 are independent for different @xmath292 as it only depends on which nodes @xmath68 in @xmath301 have @xmath292 in @xmath101 and on the @xmath302-sets of the nodes in @xmath299 .",
    "the claim that we have a node with degree @xmath7 in @xmath116 with probability at least @xmath303 then follows from the definition of @xmath294 .",
    "let us therefore consider a fixed value @xmath292 .",
    "we first note that for a fixed @xmath292 by standard chernoff bounds with probability at least @xmath304 , there at least @xmath305 nodes in @xmath301 that have token @xmath292 in their initial @xmath81-set . for @xmath288",
    "sufficiently large , this probability is at least @xmath306 . in the following ,",
    "we assume that there are at least @xmath307 nodes @xmath68 in @xmath301 for which @xmath308 .",
    "let @xmath309 for any @xmath310 denote the number of nodes in @xmath184 that have token @xmath292 in the initial @xmath81-set .",
    "the number of free edges to a node @xmath68 in @xmath299 is at least @xmath311 , where the random variable @xmath312 is @xmath64 if node @xmath68 initially has token @xmath98 in @xmath129 and @xmath238 otherwise ( i.e. , @xmath312 is a bernoulli variable with parameter @xmath20 ) .",
    "note that since @xmath313 , the expected value of the number of free edges to a node @xmath68 in @xmath299 is at least @xmath314 . by a chernoff bound , the probability that the number of free edges from a node @xmath68 in @xmath299 does not deviate by more than a constant factor with probability @xmath315 .",
    "note that @xmath316 since @xmath317 .",
    "for @xmath288 large enough this probability is at least @xmath318 .",
    "because the probability bound only depends on the choice of @xmath101 , we have independence for different @xmath319 .",
    "therefore , given that at least @xmath307 nodes in @xmath301 have token @xmath292 , the probability that no node in @xmath299 has at least @xmath7 neighbors in @xmath301 can be upper bounded as @xmath320 .",
    "together with the bound on the probability that at least @xmath307 nodes in @xmath301 have token @xmath292 in their @xmath302 set , the claim of the lemma follows .",
    "lemma [ lem : cconlb1 ] by itself directly leads to a lower bound for token forwarding algorithms in always @xmath7-vertex connected graphs .",
    "[ cor : simplecconn ] suppose an always @xmath7-vertex connected dynamic network with @xmath0 tokens in which nodes initially know at most a constant fraction of the tokens on average",
    ". then , any centralized token - forwarding algorithm takes at least @xmath321 rounds to disseminate all tokens to all nodes .    by lemma [ lem : cconlb1 ]",
    ", we know that there exists @xmath302-sets such that for every token assignment after adding all free edges , the size of the largest induced subgraph with maximum degree less than @xmath7 is @xmath285 . by lemma [ lem : cconnect ] , it suffices to make the graph induced by these @xmath285 nodes @xmath7-vertex connected to have a @xmath7-vertex connected graph on all @xmath1 nodes . to achieve this , by lemma [ lem : kconnectmindegree ]",
    ", it suffices to increase all degrees to @xmath249 and add another @xmath285 edges .",
    "overall , the number of non - free edges we have to add for this is therefore upper bounded by @xmath322 .",
    "hence , the potential function increases by at most @xmath322 per round and since we can choose the @xmath302-sets so that initially the potential is at most @xmath323 for a constant @xmath324 , the bound follows .",
    "as shown in the following , by using a more careful analysis , we can significantly improve this lower bound for @xmath325 .",
    "note that the bound given by the following theorem is at most an @xmath326 factor away from the simple `` greedy '' upper bound .",
    "[ lem : cconlb2 ] suppose an always @xmath7-vertex connected dynamic network with @xmath0 tokens in which nodes initially know at most a constant fraction of the tokens on average .",
    "then , any centralized token - forwarding algorithm takes at least @xmath327 rounds to disseminate all tokens to all nodes .",
    "we use the same construction as in to obtain a set @xmath116 of size @xmath328 for a sufficiently large constant @xmath329 such that @xmath116 needs to be augmented to a @xmath7-connected graph .",
    "note that we want the set to be of size @xmath105 and therefore we do not assume that in the induced subgraph , every node has degree less than @xmath7 .",
    "we improve upon by showing that it is possible to increase the potential function by adding a few more tokens to the @xmath81-sets , so that afterwards it is sufficient to add @xmath330 additional non - free edges to @xmath116 to make the induced subgraph @xmath7-vertex connected .",
    "hence , an important difference is that are not counting the number of edges that we need to add but the number of tokens we need to give away ( i.e. , add to the existing @xmath81-sets ) .",
    "we first argue that w.h.p . , it is possible to raise the minimum degree of vertices in the induced subgraph of @xmath116 to @xmath331 without increasing the potential function by too much",
    ". then we invoke and get that at most @xmath330 more edges are then needed to make @xmath116 induce a @xmath7-connected graph as desired .",
    "we partition the nodes in @xmath116 according to the token sent out in the same way as in the proof of , i.e. , @xmath184 is the subset of nodes sending out token @xmath98 .",
    "let us first assume that no set @xmath184 contains more than @xmath332 nodes .",
    "we can then divide the sets of the partition into two parts with at least @xmath332 nodes each . to argue about the sets",
    ", we rename the tokens sent out by nodes in @xmath116 as @xmath333 so that we can find a token @xmath294 for which @xmath334 and @xmath335 .",
    "we call the sets @xmath299 for @xmath336 the left side of @xmath116 and the sets @xmath299 for @xmath337 the right side of @xmath116 .",
    "if there is a set @xmath184 with @xmath338 , we define @xmath184 to be the right side and all other sets @xmath299 to be the left side of @xmath116 .",
    "we will show that we can increase the potential function by at most @xmath339 such that all the nodes on the left side have at least @xmath331 neighbors on the right side .",
    "if all sets @xmath184 are of size at most @xmath332 , increasing the degrees of the nodes on the right side is then done symmetrically .",
    "if the right side consists of a single set @xmath184 of size at least @xmath332 , for @xmath288 large enough we have @xmath340 and therefore nodes on the right side already have degree at least @xmath331 by just using free edges .",
    "we start out by adding some tokens to the sets @xmath341 for nodes @xmath68 on the right side such that for every token @xmath342 on the left side , there are at least @xmath343 nodes @xmath68 on the right side for which @xmath344 .",
    "let us consider some fixed token @xmath342 from the left side .",
    "because every node @xmath68 on the right side has @xmath308 with probability @xmath20 , with probability at least @xmath345 , at least @xmath346 nodes u on the right side have @xmath308 .",
    "for such a token @xmath292 , we do not need to do anything .",
    "note that the events that @xmath308 are independent for different @xmath292 on the left side",
    ". therefore , for a sufficiently large constant @xmath347 and a fixed collection of @xmath348 tokens @xmath292 sent by nodes on the left side , the probability that none of these tokens is in at least @xmath343 sets @xmath101 for @xmath68 on the right side is at most @xmath349 for a given constant @xmath350 .",
    "as there are at most @xmath105 tokens sent by nodes on the left side , the number of collections of @xmath348 tokens is at most @xmath351 which is less than @xmath352 for sufficiently large @xmath288 .",
    "hence , with probability at least @xmath353 , for at most @xmath348 tokens @xmath292 on the left side there are less than @xmath343 nodes @xmath68 on the right that have @xmath354 . for these @xmath21 tokens",
    "@xmath292 , we add to @xmath292 to @xmath341 for at most @xmath343 nodes @xmath68 on the right side , such that afterwards , for every token @xmath292 sent by a node on the left side , there are at least @xmath343 nodes @xmath68 on the right for which @xmath344 .",
    "note that this increases the potential function by at most @xmath355 .",
    "we next show that by adding another @xmath356 tokens to the @xmath81-sets of the nodes on the left side , we manage to get that every node @xmath68 on the left side has at least @xmath331 free neighbors on the right side . for a token @xmath342 sent by some node on the left side and a token @xmath310 sent by some node on the right side , let @xmath357 be the number of nodes @xmath358 for which @xmath344 .",
    "note that if token @xmath98 is in @xmath359 for some @xmath360 , @xmath61 has @xmath357 neighbors in @xmath184 .    using the augmentation of the @xmath341-sets for nodes on the right",
    ", we have that for every @xmath342 , @xmath361 . for every @xmath310 , with probability @xmath20 , we have @xmath362 .",
    "in addition , we add tokens additional @xmath98 to @xmath359 for which @xmath363 such that in the end , @xmath364 . by lemma [ lem :",
    "increase ] , the probability that we need to add @xmath365 tokens is upper bounded by @xmath366 .",
    "as the number of tokens we need to add to @xmath367 is independent for different @xmath61 , in total we need to add at most @xmath368 tokens with probability at least @xmath353 .",
    "note that this is still true after a union bound over all the possible ways to distributed the @xmath356 tokens among the @xmath369 nodes .",
    "using lemma [ lem : kconnectmindegree ] , we then have to add at most @xmath370 additional non - free edges to make the graph induced by @xmath116 @xmath7-vertex connected .",
    "there are at most @xmath371 ways to choose the set @xmath116 and @xmath372 ways to assign tokens to the nodes in @xmath116 .",
    "hence , if we choose @xmath373 sufficiently large , the probability that we need to increase the potential by at most @xmath374 for all sets @xmath116 and all token assignments is positive .",
    "the theorem now follows as in the previous lower bounds ( e.g. , as in the proof of theorem [ thm : original ] ) .",
    "we would like to thank chinmoy dutta , gopal pandurangan , rajmohan rajaraman , and zhifeng sun for helpful discussions and for sharing their work at an early stage .",
    "a.  f. anta , a.  milani , m.  a. mosteiro , and s.  zaks .",
    "opportunistic information dissemination in mobile ad - hoc networks : the profit of global synchrony . in _ proc .",
    "24th int .",
    "symp .  on distributed computing ( disc ) _ ,",
    "pages 374388 , 2010 .    c.  avin , m.  kouck , and z.  lotker . how to explore a fast - changing world ( cover time of a simple random walk on evolving graphs ) .",
    "in _ proc . of 35th coll .",
    "on automata , languages and programming ( icalp ) _ , pages 121132 , 2008 .",
    "a.  clementi , c.  macci , a.  monti , f.  pasquale , and r.  silvestri . flooding time in edge - markovian dynamic graphs . in _ proc . of 27th acm symp . on principles of distributed computing ( podc ) _",
    ", pages 213222 , 2008 .",
    "b.  haeupler and m.  mdard .",
    "one packet suffices - highly efficient packetized network coding with finite memory . in _ information theory proceedings ( isit ) , 2011 ieee international symposium on _ , pages 1151 1155 , 2011 .",
    "f.  kuhn , c.  lenzen , t.  locher , and r.  oshman .",
    "optimal gradient clock synchronization in dynamic networks . in _ proc . of 29th acm symp . on principles of distributed computing ( podc ) _ , pages 430439 , 2010 ."
  ],
  "abstract_text": [
    "<S> we study lower bounds on information dissemination in adversarial dynamic networks . </S>",
    "<S> initially , @xmath0 pieces of information ( henceforth called tokens ) are distributed among @xmath1 nodes . </S>",
    "<S> the tokens need to be broadcast to all nodes through a synchronous network in which the topology can change arbitrarily from round to round provided that some connectivity requirements are satisfied .    </S>",
    "<S> if the network is guaranteed to be connected in every round and each node can broadcast a single token per round to its neighbors , there is a simple token dissemination algorithm that manages to deliver all @xmath0 tokens to all the nodes in @xmath2 rounds . </S>",
    "<S> interestingly , in a recent paper , dutta et al . proved an almost matching @xmath3 lower bound for deterministic token - forwarding algorithms that are not allowed to combine , split , or change tokens in any way . in the present paper , we extend this bound in different ways .    if nodes are allowed to forward @xmath4 tokens instead of only one token in every round , a straight - forward extension of the @xmath2 algorithm disseminates all @xmath0 tokens in time @xmath5 . </S>",
    "<S> we show that for any randomized token - forwarding algorithm , @xmath6 rounds are necessary . if nodes can only send a single token per round , but we are guaranteed that the network graph is @xmath7-vertex connected in every round , we show a lower bound of @xmath8 , which almost matches the currently best @xmath9 upper bound . </S>",
    "<S> further , if the network is @xmath10-interval connected , a notion that captures connection stability over time , we prove that @xmath11 rounds are needed . </S>",
    "<S> the best known upper bound in this case manages to solve the problem in @xmath12 rounds . </S>",
    "<S> finally , we show that even if each node only needs to obtain a @xmath13-fraction of all the tokens for some @xmath14 $ ] , @xmath15 are still required . </S>"
  ]
}
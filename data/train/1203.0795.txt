{
  "article_text": [
    "the notion of one object avoiding another has been studied in permutations , words , partitions , and graphs .",
    "much recent work has been devoted to the study of pattern - avoiding permutations .",
    "given permutations @xmath1 and @xmath2 , we say that @xmath3 contains @xmath4 as a ( classical ) pattern if there exist indices @xmath5 such that @xmath6 is order - isomorphic to @xmath4 ; that is , @xmath7 if and only if @xmath8 .",
    "otherwise , @xmath3 is said to avoid @xmath4 .",
    "for example @xmath9 contains the pattern @xmath10 as evidenced by @xmath11 , @xmath12 , and @xmath13 , but @xmath3 avoids the pattern @xmath14 because @xmath3 has no decreasing subsequence of length 3 .",
    "one variation on this definition of pattern avoidance is to place the restriction @xmath15 on the indices for @xmath16 .",
    "if there exists such a subsequence of @xmath3 that is order - isomorphic to @xmath4 , then @xmath3 is said to contain @xmath4 as a _ consecutive _ permutation pattern .",
    "for each of these definitions , two natural questions arise : `` given a permutation @xmath4 , how many permutations of length @xmath17 avoid @xmath4 ? '' and `` when do two distinct permutations @xmath18 and @xmath19 yield the same avoidance generating function ? ''",
    "patterns @xmath18 and @xmath19 with this property are said to be _ wilf - equivalent_.    in this paper we consider analogous questions of pattern avoidance for plane trees .",
    "all trees in the paper are rooted and ordered .",
    "we will focus on full binary trees , that is , trees in which each vertex has 0 or 2 ( ordered ) children .",
    "two children with a common parent are _ sibling vertices_. a vertex with no children is a _ leaf _ and a vertex with 2 children is an _ internal vertex_. a binary tree with @xmath17 leaves has @xmath20 internal vertices , and the number of such trees is @xmath21 ( oeis a000108 ) . for simplicity of computation",
    ", we adopt the convention that there are zero rooted binary trees with zero leaves .",
    "the first few binary trees are depicted in figure [ f : trees ] .",
    "conceptually , a plane tree @xmath22 avoids a tree pattern @xmath23 if there is no instance of @xmath23 anywhere inside @xmath22 .",
    "pattern avoidance in vertex - labeled trees has been studied in various contexts by steyaert and flajolet @xcite , flajolet , sipala , and steyaert @xcite , flajolet and sedgewick @xcite , and dotsenko @xcite .",
    "recently , disanto @xcite studied pattern containment of caterpillar subgraphs in binary trees while khoroshkin and piontkovski @xcite considered generating functions for general unlabeled tree patterns in a different context .    in 2010 , rowland @xcite explored contiguous pattern avoidance in binary trees ( that is , rooted ordered trees in which each vertex has 0 or 2 children ) .",
    "he chose to work with binary trees because there is natural bijection between @xmath17-leaf binary trees and @xmath17-vertex trees .",
    "his study had two main objectives .",
    "first , he developed an algorithm to find the generating function for the number of @xmath17-leaf binary trees avoiding a given tree pattern ; he adapted this to count the number of occurrences of the given pattern .",
    "second , he determined equivalence classes for binary tree patterns , classifying two trees @xmath24 and @xmath23 as equivalent if the same number of @xmath17-leaf binary trees avoid @xmath24 as avoid @xmath23 for @xmath25 .",
    "he completed the classification for all binary trees with at most eight leaves , using these classes to develop replacement bijections between equivalent binary trees .    in 2012 ,",
    "gabriel , peske , tay , and the second author @xcite considered rowland s definition of tree pattern in ternary , and more generally in @xmath26-ary , trees .",
    "after generalizing rowland s algorithmic approach to compute functional equations for the avoidance generating functions of arbitrary ternary tree patterns , they explored bijections between equinumerous sets of pattern - avoiding trees . along the way they found sets of pattern - avoiding trees whose enumeration yielded a number of well - known sequences .    in this paper , we extend rowland s work in a new direction .",
    "the work of @xcite and @xcite may be seen as parallel to the definition of consecutive permutation patterns given at the beginning of this section . in those papers , tree @xmath22",
    "was said to contain tree @xmath23 as a ( contiguous ) pattern if @xmath23 was a contiguous , rooted , ordered , subtree of @xmath22 . in this paper , we modify the definition of tree pattern to mirror the idea of classical pattern avoidance in permutations . in the case of pattern - avoiding permutations , there are more wilf - classes for consecutive patterns of a given length than for classical patterns ( as a small example , there are 7 wilf classes of consecutive permutation patterns of length 4 , compared to 3 wilf classes for classical permutation patterns of length 4 ) .",
    "this parallel holds true in the case of trees .",
    "in fact , as we show in section [ s : gfs ] , there is precisely one wilf class of @xmath0-leaf patterns for any @xmath27 .    as with previous work , given any binary tree pattern @xmath23 we present a technique to compute the generating function that enumerates trees avoiding @xmath23 according to the number of leaves .",
    "this enumeration shows that there is exactly one wilf class of @xmath0-leaf patterns .",
    "we also consider trees avoiding multiple tree patterns and explore relationships between sets of pattern - avoiding trees and pattern - avoiding permutations .",
    "in this paper , a tree @xmath22 _ contains _ @xmath23 as a ( non - contiguous ) tree pattern if there is a tree @xmath28 , obtained from @xmath22 via a finite sequence of edge contractions , such that @xmath23 is a contiguous , rooted , and ordered subtree of @xmath28 .",
    "conversely , @xmath22 _ avoids _",
    "@xmath23 if there is no such @xmath28 that contains @xmath23 as a subtree .",
    "for example , consider the three trees shown in figure [ feg1 ] .",
    "@xmath22 avoids @xmath23 as a contiguous pattern , but @xmath22 contains @xmath23 non - contiguously ( contract all non - bolded edges ) . on the other hand",
    ", @xmath22 avoids @xmath24 both contiguously and non - contiguously since no vertex of @xmath22 has a left child and a right child , both of which are internal vertices .",
    "@xmath29 @xmath30 @xmath31 @xmath32 @xmath33 @xmath34    we define @xmath35 to be the set of @xmath17-leaf binary trees that avoid the pattern @xmath23 non - contiguously , and @xmath36 .",
    "we will also write @xmath37 for the set of @xmath17-leaf binary trees that avoid @xmath23 contiguously , and @xmath38",
    ". we will be particularly interested in determining the generating function @xmath39 for various tree patterns @xmath23 .    before we explore particular binary tree patterns , we list all of the 1 , 2 , 3 , and 4-leaf binary trees .",
    "we label trees with a double subscript notation .",
    "the first subscript gives the number of leaves of the tree , and the second subscript distinguishes between distinct tree patterns with the same number of leaves .",
    "we also note that if @xmath40 is the left - right reflection of tree @xmath23 , then @xmath41 by symmetry , so we omit left - right reflections .",
    "we will use these labels throughout the remainder of the paper .",
    "@xmath42 @xmath43 @xmath44 @xmath45 @xmath46 @xmath47 + @xmath48 @xmath32 @xmath49 @xmath50 @xmath51 @xmath34",
    "in this section , we find generating functions for the number of trees avoiding each of the tree patterns in figure [ f : trees ] . for each tree , we discuss the structure of trees that avoid the given tree pattern and explain how to find a recurrence and generating function from this structure .",
    "we also compare these generating functions to previously known results for contiguous tree patterns .",
    "clearly , a tree avoids @xmath52 if and only if it has no vertices .",
    "this is also true for contiguous avoidance , so we have    @xmath53    next , a tree avoids @xmath54 if and only if it has no vertex with two children . in other words",
    ", only @xmath52 avoids @xmath54 .",
    "again , we have    @xmath55    finally , we observe that tree @xmath23 avoids @xmath56 if and only if @xmath23 has no vertex whose left child is not a leaf . for each @xmath57",
    "there is precisely one such tree , so we have    @xmath58    from these few cases , it may seem that non - contiguous and contiguous avoidance is the same for many trees . the reader should suspect that this similarity does not hold for larger tree patterns based on the example of figure [ feg1 ] .",
    "this suspicion is confirmed when we consider 4-leaf tree patterns .",
    "rowland showed that for @xmath59 @xmath60 where @xmath61 is the @xmath17th motzkin number ( oeis a001006 ) .",
    "it turns out that non - contiguous avoidance is even more well - behaved for 4-leaf tree patterns .",
    "we will show that for @xmath62    @xmath63      to find @xmath64 , we consider the structure of a general @xmath17-leaf binary tree @xmath22 that avoids @xmath65 .",
    "we have two cases .",
    "let @xmath66 be the root of @xmath22 .",
    "in the first case , @xmath66 s left child has no children , while @xmath66 s right child is the root of an @xmath67-leaf subtree avoiding @xmath65 . in the second case , @xmath66 s left child has two children , but the leftmost of these children is a leaf .",
    "if the right child of @xmath66 s left child is the root of a subtree with @xmath68 leaves ( @xmath69 ) , then @xmath66 s right child is the root of a subtree with @xmath70 leaves .",
    "further , the @xmath68-leaf subtree must avoid the tree pattern @xmath56 .",
    "in the first case , we considered @xmath71 possible trees . in the second case",
    ", we considered @xmath72 trees .",
    "however , since we know that @xmath73 for @xmath74 , we have    @xmath75    together with the base case @xmath76 , we see that    @xmath77      next , we consider the structure of a general @xmath17-leaf binary tree @xmath22 that avoids @xmath78 where @xmath66 is the root of @xmath22 . again , we have two cases . as before , in the first case , @xmath66 s left child has no children , while @xmath66 s right child is the root of an @xmath67-leaf subtree avoiding @xmath78 . in the second case , @xmath66 s left child has two children , but now the rightmost of these children is a leaf .",
    "the subtree whose root is the left child of @xmath66 s left child must avoid the tree pattern @xmath79 .",
    "after a nearly identical calculation to that of avoiding @xmath65 , we see that    @xmath80      finally , we consider the structure of a general @xmath17-leaf binary tree @xmath22 that avoids @xmath81 where @xmath66 is the root of @xmath22 . again , we have two cases : either @xmath66 s left child has children or @xmath66 s right child has children , but not both .",
    "there are @xmath82 trees that fall into the first case , and @xmath82 trees that fall into the second case , which yields    @xmath83    we have @xmath84",
    "we have just seen that all 4-leaf binary tree patterns produce the same avoidance sequence when considered as non - contiguous patterns .",
    "this observation leads naturally to the main theorem of this paper , which provides a particularly clean answer to both questions stated in the introduction .",
    "namely , `` given a tree pattern @xmath23 , how many trees with @xmath17 leaves avoid @xmath23 ? '' and `` given two distinct tree patterns @xmath23 and @xmath24 , when do @xmath23 and @xmath24 produce the same avoidance sequence ? ''",
    "in fact , we see that not only is exact enumeration possible for _ any _ non - contiguous tree pattern , we see that all avoidance generating functions are rational and of a particularly attractive form",
    ".    let @xmath85 and let @xmath23 be a binary tree pattern with @xmath0 leaves .",
    "then    @xmath86 [ th1 ]    the reader can check that this indeed matches the generating functions computed in the previous section when @xmath87 .",
    "further , notice that the generating function given in theorem [ th1 ] depends only on the number of leaves of @xmath23 , and not on @xmath23 itself ; that is , there is precisely one wilf class of @xmath0-leaf tree patterns for each @xmath27 . as we will see in section [ s : multipatterns ] and the appendix , the analogous statement for pairs of trees is not true .",
    "in this section we build the necessary framework to prove theorem [ th1 ] .",
    "first , following @xcite we say that @xmath22 contains pattern @xmath88 at the root if @xmath22 contains a _ contiguous _ copy of @xmath88 where the root of @xmath88 coincides with the root of @xmath22 .",
    "now , let @xmath89 be the generating function that enumerates binary trees avoiding tree pattern @xmath23 non - contiguously and containing the contiguous tree pattern @xmath88 at their root according to number of leaves . because all binary trees have a root vertex",
    ", it follows that the generating function for all trees avoiding @xmath23 is given by @xmath90 .",
    "also , let @xmath91 and @xmath92 denote the subtrees descending from the left and right children of the root of @xmath23 respectively .",
    "since we are working with full binary trees , the root has either zero or two children .",
    "when there are zero children , we have a 1-leaf tree .",
    "when there are two children , we have a tree with pattern @xmath93 at the root .",
    "such trees are enumerated with the generating function @xmath94 .",
    "thus , we have    @xmath95    next , we determine a recurrence for @xmath94 .",
    "consider a tree @xmath22 that avoids @xmath23 and has the contiguous pattern @xmath93 at the root .",
    "either the subtree extending from the left child of the root of @xmath22 avoids @xmath91 , the subtree extending from the right child of the root of @xmath22 avoids @xmath96 , or both .",
    "inclusion - exclusion gives    @xmath97    combining equations [ eq : t11 ] and [ eq : t21 ] yields    @xmath98    now , solve for @xmath99 to obtain    @xmath100    this computation yields one immediate result :    for any tree pattern @xmath23 , @xmath99 is a rational function of @xmath101 .",
    "we have already seen that @xmath99 is rational for all tree patterns @xmath23 with @xmath87 leaves .",
    "thus , by induction and equation [ eq : genfunrec ] , the proposition follows .",
    "equation [ eq : genfunrec ] simplifies further for one particular family of binary tree patterns .",
    "let the @xmath0-leaf left comb be the unique @xmath0-leaf binary tree where every right child is a leaf .",
    "write @xmath102 for the @xmath0-leaf left comb",
    ". then @xmath103 , @xmath104 , @xmath105 , and @xmath106 .",
    "@xmath107 for @xmath108 .",
    "let @xmath109 in equation [ eq : genfunrec ] .",
    "then @xmath110 and @xmath111 .",
    "we have :    @xmath112    since @xmath113 , this simplifies to    @xmath114    this nice relationship between @xmath115 and @xmath116 seems natural because of the large overlap between copies of @xmath102 and @xmath117 .",
    "our next lemma shows that there is a simple relationship between generating functions for non - comb tree patterns as well .",
    "fix @xmath27 .",
    "let @xmath23 and @xmath24 be two @xmath0-leaf binary tree patterns .",
    "then    @xmath118    assume the lemma holds for tree patterns with @xmath119 leaves where @xmath120 . since we suppose that all @xmath119-leaf trees have the same avoidance generating function , we have that any @xmath119-leaf tree has avoidance generating function @xmath121 .",
    "suppose that tree @xmath122 has @xmath119 leaves to the left of its root and @xmath123 leaves to the right of its root .",
    "similarly , suppose that tree @xmath124 has @xmath125 leaves to the left of its root and @xmath126 leaves to the right of its root .",
    "we will show that @xmath127 .    from equation [ eq : genfunrec ] , we have    @xmath128    similarly ,    @xmath129    thus    @xmath130    since this holds for @xmath131 , by transitivity , all @xmath0-leaf tree patterns have the same non - contiguous avoidance generating function .    finally , to prove the main theorem",
    ", it suffices to show that    @xmath132    it is a straightforward induction proof , using the fact that @xmath133 to show that this formula holds in general .",
    "we have now explicitly enumerated trees avoiding any single binary tree pattern non - contiguously and determined all equivalences for when two trees exhibit the same avoidance sequence .",
    "we display the explicit generating function , first 8 sequence terms , and appropriate oeis entry for tree patterns with @xmath0 leaves where @xmath134 in table [ tableseqs ] .",
    "rate & oeis number + 1 & 0 & @xmath135 & 0 & trivial + 2 & @xmath101 & @xmath136 & 0 & trivial + 3 & @xmath137 & @xmath138 & @xmath139 & trivial + 4 & @xmath140 & @xmath141 & @xmath142 & a000079 + 5 & @xmath143 & @xmath144 & @xmath145 & a001519 + 6 & @xmath146 & @xmath147 & @xmath148 & a007051 + 7 & @xmath149 & @xmath150 & @xmath151 & a080937 + 8 & @xmath152 & @xmath153 & @xmath154 & a024175 + 9 & @xmath155 & @xmath156 & @xmath157 & a080938 +    because all generating functions @xmath99 are rational it follows that for any @xmath0-leaf binary tree @xmath23 the sequence @xmath158 satisfies a linear recurrence with constant coefficients .",
    "in fact , when tree pattern @xmath23 has @xmath159 leaves , @xmath158 grows exponentially . because there are catalan - many binary trees with @xmath17 leaves , the growth of these sequences is bounded above by @xmath160 . in table [ tableseqs ] we display also the asymptotic growth rate for @xmath161 .",
    "while we gave explicit combinatorial explanations for the recurrences satisfied by @xmath162 when @xmath23 has @xmath163 or @xmath164 leaves in section [ s : simple ] , the rest of our work has been algebraic .",
    "it is possible , however , to derive the recurrences satisfied by tree enumeration sequences through other techniques . in this section ,",
    "we give a combinatorial explanation for these recurrences by considering the structure of trees that avoid the @xmath0-leaf left comb .",
    "first , we define a many - to - one correspondence between the set of @xmath165-leaf binary trees and the set of @xmath17-leaf binary trees . given a tree @xmath23 with @xmath166 leaves , let @xmath167 be rightmost leaf whose sibling vertex is also a leaf",
    ". then , let the _ parent tree _ of @xmath23 be the @xmath17-leaf tree obtained by deleting @xmath167 and its sibling . if @xmath168 is the parent tree of @xmath23 , then we say that @xmath23 is a _ descendent tree _ of @xmath168 . while the parent tree of a tree is unique , a given tree may have multiple descendent trees .",
    "for example , @xmath169 , @xmath170 , and @xmath171 are descendent trees of @xmath172 .",
    "similarly , @xmath173 and @xmath174 are descendent trees of @xmath175 .    now , for any @xmath17-leaf tree @xmath176 , we can use this parent / descendent relationship to generate a list @xmath177 where @xmath178 , @xmath179 has @xmath68 leaves for @xmath180 and @xmath181 is a descendant tree of @xmath179 .",
    "we refer to such a sequence of trees as the _ ancestry _ of @xmath23 .",
    "because parent trees are unique , the ancestry of tree @xmath23 must be unique .",
    "for example , the tree @xmath182 has ancestry    @xmath183    given an @xmath17-leaf tree @xmath23 , we may also generate all descendent trees of @xmath23 in a systematic way . call an internal vertex @xmath66 of @xmath23 _ closed _ if @xmath66 s right child is not a leaf .",
    "the number of descendent trees of @xmath23 is equal to the number of leaves of @xmath23 that appear to the right of all closed vertices .",
    "in fact , to produce a descendent tree of @xmath23 , we need only attach a pair of children to any one such leaf . the descendent tree relationship is further articulated in the following proposition .",
    "suppose that tree @xmath23 has @xmath68 descendant trees .",
    "then those descendant trees will have @xmath184 descendant trees respectively .",
    "further , if @xmath23 has @xmath68 descendant trees then the leftmost vertex to which one may add children is the leftmost vertex in a copy of an @xmath68-leaf left comb .",
    "[ prop : descs ]    both claims in the proposition are consequences of the fact that the number of descendent trees of @xmath23 is equal to the number of leaves of @xmath23 appearing to the right of all closed vertices .",
    "let @xmath185 be the @xmath186th leaf from the right of these @xmath68 leaves .",
    "when we append two children to @xmath185 , @xmath185 s parent is closed , and this new tree has only @xmath187 descendents .",
    "further , if @xmath23 has @xmath68 leaves to the right of all closed vertices , by definition of closed , none of these leaves parents have right children that are internal vertices . the only way to arrange a collection of vertices so that no internal vertices are right children is in the shape of an @xmath68-leaf left comb .",
    "now , consider the descendant relation restricted to trees that avoid the @xmath0-leaf left comb .",
    "any tree with @xmath0 descendant trees contains an @xmath0-leaf comb , so we are only concerned with trees that have at most @xmath188 descendent trees . as in proposition",
    "[ prop : descs ] , a tree with @xmath189 descendant trees will have descendant trees with @xmath184 descendants respectively .",
    "notice further that for a tree which would have @xmath188 descendent trees , one of these descendent trees contains the @xmath0-leaf left comb , so such a tree only has @xmath190 descendent trees that avoid the @xmath0-leaf comb .",
    "consequently , for a tree with @xmath190 descendent trees , those descendents will have @xmath191 descendent trees respectively that avoid the @xmath0-leaf left comb .",
    "let @xmath192 be the number of @xmath17-leaf trees that avoid the @xmath0-leaf left comb and have exactly @xmath68 @xmath165-leaf descendants , and let @xmath193 .",
    "we have the base cases @xmath194 and @xmath195 .",
    "more generally , for @xmath196    @xmath197    @xmath198    @xmath199    @xmath200    ultimately , we seek a recurrence for @xmath193 . adding the above equations and algebraic manipulation produces the result    @xmath201    from the discussion above",
    ", trees avoiding an @xmath0-leaf comb can be constructed with a finitely labeled generating tree ( in particular with a generating tree using precisely @xmath190 labels ) , and one may use the transfer matrix method to obtain an alternate proof of theorem [ th1 ] for the case of avoiding the @xmath0-leaf left comb .",
    "as evidenced in the appendix , many sequences obtained by counting trees that avoid non - contiguous binary tree patterns are already known in the literature for other reasons . in this section",
    "we present a theorem that fully explains this connection for the case of avoiding a single binary tree pattern .    to this end , let @xmath202 denote the set of permutations of length @xmath17 . as in the introduction , given @xmath203 and @xmath204",
    "we say that @xmath3 contains @xmath4 as a pattern if there exist indices @xmath205 such that @xmath206 if and only if @xmath207 .",
    "let @xmath208 , and @xmath209 .",
    "for example , @xmath210 for @xmath25 since the only way to avoid the pattern 12 is to be the decreasing permutation of length @xmath17 .",
    "it is also well - known that if @xmath211 , then @xmath212 where @xmath213 is the @xmath17th catalan number .",
    "let @xmath23 be any binary tree pattern with @xmath108 leaves .",
    "then @xmath214 [ permpat ]    it is well known that the set of binary trees with @xmath17 leaves is in bijection with the set of permutations of length @xmath20 which avoid the pattern 231 .    to see this , label the root of tree @xmath23 with the label @xmath20 .",
    "now , suppose there are @xmath68 internal vertices to the left of the root and @xmath215 internal vertices to the right of the root .",
    "the @xmath68 vertices on the left will receive labels from the set @xmath216 and the vertices on the right will receive labels from the set @xmath217 . for each subtree , give the root the largest available label and continue recursively until each internal vertex has been labeled .",
    "now , there is a natural left - to - right ordering of the vertices of @xmath23 . read the labels of the vertices from left to right to obtain a permutation @xmath218 .",
    "necessarily , @xmath3 avoids @xmath219 because all labels to the left of a given vertex have smaller labels than all labels to the right .",
    "further , we can see that the @xmath0-leaf right comb encodes the unique decreasing permutation of length @xmath188 .",
    "it is not hard to see that if a tree avoids the @xmath0-leaf right comb , then the corresponding permutation avoids the decreasing permutation of length @xmath188 and vice versa .",
    "we note that this correspondence between @xmath220-avoiding permutations and binary trees is not new .",
    "if one ignores the leaves in our trees , the bijection given in the proof of theorem [ permpat ] is identical to the correspondence between postorder - labeled trees with inorder - read permutations found in @xcite .",
    "further work connecting permutations to binary trees in the context of sorting can be found in @xcite , @xcite , @xcite , @xcite , @xcite , and @xcite .",
    "it is worth considering when theorem [ permpat ] generalizes and how .",
    "the correspondence given in the proof of theorem [ permpat ] does not necessarily work with trees other than the right comb .",
    "for example , while @xmath221 the permutation corresponding to @xmath65 is 123 .",
    "however , @xmath222 ( @xmath223 ) while @xmath224 ( @xmath223 ) .",
    "thus even if the sequence obtained from avoiding a set of tree patterns is also the avoidance sequence for some set of pattern - avoiding permutations , there may be other bijections required to demonstrate the equivalence .",
    "it remains open to give a natural interpretation of theorem [ permpat ] for trees other than the right comb .",
    "thus far , we have analyzed generating functions and enumeration sequences for trees avoiding a single non - contiguous binary tree pattern . we will now consider trees that avoid two tree patterns simultaneously . to this end , let @xmath225 be the generating function that enumerates trees avoiding @xmath226 and @xmath227 with pattern @xmath88 at the root according to number of leaves .",
    "for brevity , we may abbreviate @xmath228 .",
    "parallel to equations [ eq : t11 ] and [ eq : t21 ] we have    @xmath229    and    @xmath230    this latter expression follows again from inclusion - exclusion .",
    "one can solve this pair of equations for @xmath231 to obtain a rational combination of rational generating functions and see that for any pair of binary trees , @xmath231 is indeed rational .    to compactly state the equivalent expression to equation [ eq:2treerec ] for trees avoiding @xmath186 binary tree patterns ( @xmath232 ) , we need to introduce more efficient notation .",
    "notice that all terms on the right hand sides of equations [ eq : t21 ] and [ eq:2treerec ] are of the form @xmath233 where for each tree @xmath179 @xmath234 , there are 3 possibilities : ( i ) @xmath235 and @xmath236 , ( ii ) @xmath237 and @xmath238 , or ( iii ) @xmath237 and @xmath236 .",
    "let @xmath239 and let @xmath240 where ( i ) if @xmath241 then @xmath235 and @xmath236 , ( ii ) if @xmath242 then @xmath237 and @xmath238 , and ( iii ) if @xmath243 then @xmath237 and @xmath236 .",
    "further , for @xmath244 , define @xmath245 .    by inclusion - exclusion",
    "we have :    @xmath246    notice that this expression is linear in @xmath247 .",
    "in fact , @xmath247 only appears in two terms : the ones corresponding to @xmath248 and @xmath249 , so we see that @xmath250 is rational for any finite set of @xmath186 tree patterns .",
    "we used equations [ eq:2treebase ] and [ eq:2treerec ] to compute @xmath231 for any pair of binary tree patterns where @xmath226 and @xmath227 have no more than 5 leaves .",
    "a summary of these results is given in the appendix .    in light of theorem [ permpat ] one might wonder if for every set of binary tree patterns @xmath251 , @xmath252 is identical to the avoidance sequence @xmath253 for some set @xmath254 of permutation patterns .",
    "this , however turns out not to be the case .",
    "for example consider the sequence    @xmath255 if this were the avoidance sequence for some set of permutation patterns @xmath254 , we see from the fact that @xmath256 that @xmath254 contains a pattern of length 3 .",
    "further , since it is known that @xmath257 for any pattern @xmath211 , @xmath254 must contain precisely two patterns of length 4",
    ". however , exhaustive checking of @xmath258 for sets of patterns @xmath254 consisting of one pattern of length 3 and two patterns of length 4 yields no match for this sequence .",
    "throughout this paper , we have investigated non - contiguous pattern avoidance in binary trees .",
    "unlike rowland s work for contiguous patterns , our avoidance generating functions are always rational , and the wilf classes obtained for avoidance of single patterns are easy to describe : two tree patterns are wilf - equivalent if and only if they have the same number of leaves . the results in this paper not only give a complete characterization of trees avoiding a single pattern , but we also present a computational technique to quickly determine the number of trees avoiding any finite set of non - contiguous tree patterns .",
    "finally we explore combinatorial proofs of our results and give an explicit bijection between certain pattern - avoiding trees and pattern - avoiding permutations .",
    "the authors thank eric rowland for assistance with generating the tree graphics for this paper and for several helpful presentation suggestions .",
    "this appendix lists pairs of binary tree patterns each of which have at most 5 leaves , classifying them by their avoidance generating function and sequence . for each class , we give the generating function @xmath259 , and we list the first 15 terms of the corresponding avoidance sequence . if the avoidance sequence for a class is listed in the online encyclopedia of integer sequences @xcite , we include the appropriate reference",
    ". for brevity , left ",
    "right reflections are omitted .",
    "p. flajolet , p. sipala , and j. m. steyaert .",
    "analytic variations on the common subexpression problem .",
    "_ automata , languages , and programming : proc . of icalp",
    "1990_. volume 443 of _ lecture notes in computer science _ , pages 220234 .",
    "springer , 1990 ."
  ],
  "abstract_text": [
    "<S> in this paper we consider the enumeration of binary trees avoiding non - contiguous binary tree patterns . </S>",
    "<S> we begin by computing closed formulas for the number of trees avoiding a single binary tree pattern with 4 or fewer leaves and compare these results to analogous work for contiguous tree patterns . </S>",
    "<S> next , we give an explicit generating function that counts binary trees avoiding a single non - contiguous tree pattern according to number of leaves and show that there is exactly one wilf class of @xmath0-leaf tree patterns for any positive integer @xmath0 . </S>",
    "<S> in addition , we enumerate binary trees that simultaneously avoid more than one tree pattern . finally , we explore connections between pattern - avoiding trees and pattern - avoiding permutations .    </S>",
    "<S> michael dairyko + department of mathematics + pomona college + claremont , ca 91711 , usa +   + lara pudwell + department of mathematics and computer science + valparaiso university + valparaiso , in 46383 , usa + lara.pudwell@valpo.edu +   + samantha tyner + department of mathematics + augustana college + rock island , il 61201 , usa +   + casey wynn </S>",
    "<S> + department of mathematics and computer science + hendrix college + conway , ar 72032 , usa </S>"
  ]
}
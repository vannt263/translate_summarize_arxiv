{
  "article_text": [
    "image segmentation has been one of the fundamental research areas in image processing .",
    "it is a process of partitioning a given image into desired regions according to the chosen image feature information such as intensity or texture .",
    "the segmentation is used with application in the field of medical imaging , tumors locating and diagnosis . over the past few decades , as image segmentation has gained much interest , various segmentation techniques have been proposed , each of which uses different induction principle .",
    "+ clustering is one of the most popular techniques used in image segmentation . in clustering ,",
    "the goal is to produce coherent clusters of pixels @xcite .",
    "the pixels in a cluster are as similar as possible with respect to the selected image feature information . while the pixels belong in the adjacent clusters are significantly different with respect to the same selected image feature information @xcite .",
    "there are variants of clustering algorithms have been used widely in image segmentation and they are k - means @xcite , fuzzy c - means ( fcm ) @xcite , and isodata @xcite .",
    "+ in the last decades , fcm has been very popularly used to solve the image segmentation problems @xcite ; @xcite .",
    "it is a fuzzy clustering method that allows a single pixel to belong to two or more clusters .",
    "the introduction of fuzziness makes this algorithm to able to retain more information from the original image than the crisp or hard clustering algorithms @xcite ; @xcite .",
    "however this sequential fcm becomes computationally intensive when segmenting large image datasets @xcite .",
    "in such a case , the algorithm becomes very inefficient .",
    "+ one - way to improve the performance of the fcm clustering algorithm is to use parallel computing methods .",
    "initially , graphic processing units ( gpus ) were specific - purpose processors that only manipulate and accelerate the creation of images intended for output to a display .",
    "however , gpus have recently shifted to general - purpose processors ( gpgpus ) to solve general concerns , such as scientific and engineering problems .",
    "data parallelism on a gpu is a powerful parallel model . in this paper ,",
    "a fast and practical parallel fcm approach on gpgpu is presented and discussed . + this paper",
    "is organized as follows : section 2 provides a background of fcm algorithm and the parallel technology used .",
    "section 3 presents related works .",
    "the proposed method is explained in detail in section 4 .",
    "the experimental results are presented and discussed in section 5 .",
    "finally , section 6 provides the conclusion and suggestions for future works .",
    "in the first sub - section , a brief introduction on fuzzy c - means ( fcm ) algorithm is presented .",
    "while in the following sub - section the parallel technology used in this work namely on general purpose computing on graphics processing units ( gpgpu ) data parallelism is discussed .",
    "fuzzy c - means was developed by @xcite .",
    "it is an iterative optimization that minimizes the objective function defined in [ eq1111 ] .",
    "the objective function consists of two main components @xmath0 and @xmath1 .",
    "@xmath2 is the membership function of a pixel , @xmath3 .",
    "it represents the probability that @xmath3 may belong to a cluster .",
    "the @xmath2 is dependent on the distance function , @xmath4 .",
    "@xmath4 is the euclidean distance measure between the pixel @xmath3 and each cluster center , @xmath5 .",
    "@xmath6 is a constant that represents the fuzziness value of the resulting clusters that are to be formed ; @xmath7 .",
    "@xmath8 with respect to : @xmath9 in image clustering , the most commonly used feature is the grey level or intensity value of the image being segmented .",
    "therefore , the objective function,@xmath10 in [ eq1111 ] is minimized when higher membership value is assigned to pixels with intensity values close to a cluster center of the corresponding cluster , while lower membership value is assigned to pixels whose intensities are far from the cluster center .",
    "@xmath11 @xmath12^\\frac{2}{m-1}}}\\ ] ] starting with random initialization of the membership values for each pixel from the manually selected clusters , the clusters are converged by recursively updating the cluster centers and membership function in [ eq113 ] and [ eq114 ] .",
    "this is to minimize the objective function in [ eq1111 ] .",
    "convergence stops when the overall difference in the membership function between the current and previous iteration is smaller than a given epsilon value , @xmath13 . after the convergence",
    ", deffuzzifaction is applied .",
    "each pixel is assigned to a specific cluster according to the maximal value of its membership function .",
    "the steps of the fuzzy c - means algorithm are illustrated in algorithm [ algo1c ] .",
    "* assumptions : image is transformed into feature space . * + step 1 : initialize the number of clusters @xmath14 , @xmath15 , and @xmath16 + step 2 : initialize the membership function , @xmath2 randomly .",
    "+ step 3 :      initially , gpu was a hardware equipped with a processor specifically designed to accelerate graphic processing . eventually , gpu applications were extended to general - purpose computations . at present , gpgpu is used in many applications typically performed using a cpu , such as analytic , engineering , and scientific applications @xcite . with the release of the massively parallel architecture called cuda in 2007 from nvidia , gpus",
    "have become widely accessible @xcite .",
    "+ a gpu is a processor or a multiprocessor device that has hundreds or even thousands of cores called scalar processors ( sps ) , which are arranged in groups named streaming multiprocessors ( sms ) , as shown in the left side of fig .",
    "[ executionmodel ] .",
    "moreover , gpus have different kinds of memories : global , local , texture , constant , shared , and register memories .",
    "global , constant , and texture memories are accessible to all threads in the grid .",
    "shared memory is visible to threads within one cuda block .",
    "it is faster than the global memory but is limited by size .",
    "register memory is visible to the thread that initialized the said memory and lasts for the lifetime of that thread .",
    "+ cuda is the parallel programming model used for nvidia gpgpus .",
    "cuda can increase the performance by harnessing the power of a gpu device .",
    "thousands of threads can be executed concurrently using cuda on gpgpu .",
    "the execution model of cuda on nvidia devices is shown in fig .",
    "[ executionmodel ] .",
    "li et al . proposed an fuzzy c - means ( fcm ) algorithm based on gpu @xcite .",
    "they modified the sequential fcm algorithm , such that the calculations of the membership and cluster center matrices are not comparable to the sequential one .",
    "they have fcm on gpu using cuda .",
    "the empirical results obtained by li et al . showed that the proposed parallel fcm on gpu is more efficient than the sequential fcm . instead of efficiency",
    ", they claimed that the proposed method exhibits improvement in the quality of the gpu segmented image .",
    "the authors achieved a 10-fold speedup with the proposed parallel fcm on nvidia gtx 260 device compared with the sequential fcm for natural images sized from 53 kb to 101 kb .",
    "+ mahmoud et al . presented a gpu - based brfcm for medical images segmentation @xcite .",
    "the brfcm is a faster variant of the sequential fcm @xcite .",
    "the gpu - based brfcm is implemented on different gpgpu cards .",
    "mahmoud et al showed that the gpu - based brfcm has a significant improvement over the parallel fcm in @xcite .",
    "the achieved speedup is up tp 23.42 fold faster than parallel fcm in @xcite for medical images of 350x350 and 512x512 dimensions .",
    "+ shalom et al .",
    "proposed a scalable fcm based on graphic hardware @xcite .",
    "on two different graphic cards , the results show that the proposed gpu - based fcm algorithm is more efficient and faster than the sequential fcm .",
    "the authors succeeded in reaching a 73-fold speedup on nvidia geforce 8500 gt .",
    "amazingly , a 140-fold speedup was achieved on nvidia geforce 8800 gtx compared with sequential fcm for 65k yeast gene expression data set of 79 dimension .",
    "+ rowinska and goclawski proposed a cuda - based fcm algorithm to accelerate image - segmentation @xcite .",
    "the proposed method has been tested on polyurethane foam with fungus color images and was compared with the sequential fcm implemented using c++ and matlab .",
    "the authors achieved a 10-fold speedup of their parallel proposal compared with the fcm implemented in c++ for object area of 310k pixels , and a 50- to 100-fold speedup compared with the fcm implemented in matlab for object area of 260k pixels .",
    "a comparison of our work and the previous related works is summarized in table [ relatedworks ] .",
    "c|l|l|c * work by * & * method * & * image dataset * & * speedup * + @xmath17 & & & 10x + @xmath18 & & & + @xmath19 & & & 140x + @xmath20 & & & 10x + this paper & & & @xmath21    [ relatedworks ]",
    "the sequential fcm algorithm has been subjected to extensive analysis in order to find out where the algorithm exhibits parallelism that we might exploit in the parallel design .",
    "the strongest data dependency in the fcm algorithm is the steps where the total summation calculation is required , as illustrated in step 3 in the sequential fcm ( algorithm [ algo1c ] ) .",
    "for instance , two sigma operations are needed to calculate the cluster centers as shown in equation [ eq113 ] .",
    "such a strong dependency makes parallelizing the sequential algorithm infeasible . according to bernstein s conditions",
    "@xcite , this type of dependency is called output dependence . in parallel computing",
    ", the reduction method is an efficient approach to remove output dependence . + the proposed parallel fcm design consists of two main parts : a sequential part executed on the cpu ( host ) and a parallel part executed on the gpu ( device ) . fig",
    "[ block ] shows the block diagram of the proposed work .",
    "the following sub - sections discuss each stages of the block diagram in fig .",
    "[ block ] .          as shown in fig .",
    "[ block ] , the first two steps are executed sequentially on the host .",
    "the membership is randomly initialized .",
    "the memories are allocated on the device global memory for the pixels of the image data , membership , and cluster centers .",
    "all the arrays are defined in a 1-d pattern . + after defining memories on the device , all the data are transferred from host to device , and then the main program loop is started .",
    "subsequently , the parallel kernels are called concurrently to manipulate the image pixels on the device .",
    "the host calls four cuda kernels one after another to calculate the cluster centers from memberships .",
    "the first cuda kernel concurrently handles the heavy calculations , such as exponential , division , and multiplication of floating points for every pixel . at this step",
    ", the final summation is not included .",
    "the numerator and denominator of equation [ eq113 ] are calculated separately for every pixel , and the results are stored in two different arrays in the device global memory .",
    "the number of spawned cuda threads in this kernel is defined to be equal to the number of image pixels , such that every thread will handle one pixel .",
    "the second cuda kernel at this phase is the reduction kernel , which computes the partial summation of the numerator of equation [ eq113 ] .",
    "the reduction technique is an efficient method to break down the dependency among the data .",
    "the computation complexity of the sequential addition of @xmath22 elements is @xmath23 .",
    "however , using parallel computing can significantly improve the computation complexity to @xmath24 @xcite@xcite .",
    "several cuda reduction methods are available , such as in @xcite@xcite@xcite .",
    "the cuda reduction method used in this work is similar to @xcite and is shown in algorithm [ algo1 ] .",
    "first , a segment of the input is loaded into the device - shared memory .",
    "this device shared memory can facilitate fast access to the image pixels @xcite@xcite . the reduction process",
    "is then performed over the shared memory .",
    "each calculated partial sum of every segment stored in the shared memory is loaded to the output in the global memory .",
    "as illustrated in algorithm [ algo1 ] , the cuda block i d ( blockidx.x ) is used as an index to store the partial sum from the device - shared memory to the global memory . fig .",
    "[ reduction ] demonstrates the reduction process performed on gpgpu using shared memory .",
    "@xmath25 @xmath26 @xmath27 _ _ shared _ _",
    "$ ] * //loading segment from the input into the shared memory : * * //reduction over the device shared memory : * * //storing the output into the device global memory : *    the actual reduction for the illustrated example in fig .",
    "[ reduction ] , reduces the addition operations from adding 16 elements to only 2 elements .",
    "another example from the conducted experiments of this work is an image with a size of 1 mb ( 1048576 bytes ) that was reduced to @xmath29 , which equals 4 kb ( 4096 bytes ) .",
    "+ the third kernel to be called in this phase ( calculating cluster centers from the membership function phase ) is another reduction kernel that calculates the partial sum of the denominator of equation [ eq113 ] .",
    "finally , the last cuda kernel calculates both final summations from the previous two kernels and computes the final result .",
    "only one thread is defined for this kernel .",
    "the reason for this one thread kernel is that instead of transferring the reduced arrays from the previous kernels to the host memory to calculate the final summations , in this proposed method the device is allowed to carry out the final summation only with one thread .",
    "lastly , all the previous four cuda kernels are called in iterative loops that are equal to the predefined number of clusters .",
    "this is to calculate the cluster centers from the membership functions as shown in fig .",
    "[ block ] .",
    "only one cuda kernel is defined to compute membership functions from the cluster centers . rather than defining cuda threads and block dimensions ,",
    "the implementation in this kernel is quite similar to the sequential algorithm .",
    "the spawned cuda threads are defined equally to the image pixels , which implies fine - grained granularity .",
    "thus , one thread will handle one pixel . in correspondence to the previous phase of the proposed work [ block ] , this kernel will be called in an iterative loop equally to the predefined number of clusters . at this stage",
    ", the computed new membership function arrays will be transferred to the host .",
    "the host will determine if the new membership function satisfies the condition as shown in fig .",
    "[ block ] .",
    "if the condition is satisfied , finally the cluster center arrays will be transferred back to the host .",
    "defuzzification is performed and the the final segmented image is obtained .",
    "in this section , the implementation design of the proposed method is introduced in the first subsection .",
    "the functionality of the proposed method is proven using both qualitative and quantitative evaluations in the next subsections .",
    "the performance analysis is discussed in the final subsection .",
    "the proposed method was implemented using c language and cuda .",
    "first , the sequential fcm algorithm was implemented in c. our sequential c version was derived from a java version available online at @xcite .",
    "the sequential fcm in c was tested on two different sequential platforms : intel core i5 - 480 cpu , windows 7 ultimate platform ( we refer to as fcm1 ) , and the second sequential platform is intel core 2 duo cpu e7300 , on linux ubuntu 12.04 lts ( we refer to as fcm2 ) .",
    "the reason of using two different sequential platforms in this work is to ensure the comparison is carried out between the fastest sequential fcm and the proposed parallel fcm . + in the proposed parallel fcm , the image pixels , memberships , and cluster center arrays are defined in a 1-d pattern .",
    "the reason is to ensure coalesced memory transactions in the gpgpu .",
    "in addition , defining those input arrays in 1-d pattern will ease the number of cuda block and grid sizes calculations .",
    "the cuda block and grid sizes are consequently defined in 1-d patterns corresponding to the input arrays .",
    "therefore , the form of the input has a significant effect on the performance of cuda kernels because of the coalescing access @xcite@xcite .",
    "figure [ arrays ] illustrates examples on the indices of arrays are modified when converting multi - dimensional arrays to 1-d arrays . in this work ,",
    "the image array was converted from 2-d to 1-d , and the membership array was converted from 3-d to 1-d .",
    "the details of the parallel platform used in this experiment are shown in table [ platform ] .",
    ".platform of the experiments [ cols= \" < , < \" , ]     [ time ]    fig . [ speedup ] shows the speedup results of the proposed parallel fcm over the sequential fcm2 . in fig .",
    "[ speedup ] , 245- to 169-fold speedup are obtained when the data size varies from 20 kb to 80 kb .",
    "when the data size is larger than 80 kb up to 300 kb , the speedup varies from 155- to 166-fold .",
    "186- to 238-fold speedup recorded when the data size goes beyond 300 kb",
    "gpgpus are vary practical parallel models because they are affordable and not expensive . in this work , we proposed an efficient gpu - based implementation for fuzzy c - means algorithm .",
    "the functionality of the proposed parallel fcm has been verified and proven by conducting qualitative and quantitative evaluations .",
    "the empirical results show that the parallel fcm works precisely as the traditional sequential fcm .",
    "in addition , high performance and speedup of approximately 245 folds have been achieved compared with sequential fcm .",
    "+ recently , new cuda devices have been released featured with the capability of launching dynamic parallel kernels . generally speaking , dynamic kernels or ( nested kernels )",
    "enables to multiple levels reduction concurrently",
    ". it would be also an interesting topic in the future to implement fcm on such powerful devices .",
    "mahmoud al - ayyoub , ansamm abu - dalo , yaser jararweh , moath jarrah , mohammad al sad , .",
    "the journal of supercomputing , doi 10.1007/s11227 - 015 - 1431-y , issn 0920 - 8542 , pages : 1 - 14 , springer us , 2015 .",
    "eschrich s. , jingwei ke , hall l.o . , goldgof d.b .",
    "in fuzzy systems , ieee transactions on vol.11 , no.2 , pages : 262 - 270 , doi 10.1109/tfuzz.2003.809902 , apr 2003 .",
    "shalom , s.a.a .",
    ", dash , m. and tue , m. .",
    "http://dx.doi.org/10.1007/s11227-015-1431-y . in proceedings of the 7th australasian data mining conference ,",
    "volume 87 , australian computer society inc , darlinghurst , australia , ausdm 08 , pp 179186 ."
  ],
  "abstract_text": [
    "<S> in this paper , a fast and practical gpu - based implementation of fuzzy c - means(fcm ) clustering algorithm for image segmentation is proposed . </S>",
    "<S> first , an extensive analysis is conducted to study the dependency among the image pixels in the algorithm for parallelization . </S>",
    "<S> the proposed gpu - based fcm has been tested on digital brain simulated dataset to segment white matter(wm ) , gray matter(gm ) and cerebrospinal fluid ( csf ) soft tissue regions . </S>",
    "<S> the execution time of the sequential fcm is 519 seconds for an image dataset with the size of 1 mb . while the proposed gpu - based fcm requires only 2.33 seconds for the similar size of image dataset . </S>",
    "<S> an estimated 245-fold speedup is measured for the data size of 40 kb on a cuda device that has 448 processors .    </S>",
    "<S> image segmentation , fuzzy c - means , parallel algorithms , graphic processing units ( gpus ) , cuda </S>"
  ]
}
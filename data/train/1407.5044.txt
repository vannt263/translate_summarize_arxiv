{
  "article_text": [
    "the _ howard s algorithm _ ( also called _ policy iteration algorithm _ ) is a classical method for solving a discrete hamilton - jacobi equation .",
    "this technique , developed by bellman and howard @xcite , is of large use in applications , thanks to its good proprieties of efficiency and simplicity .",
    "it was clear from the beginning that in presence of a space of controls with infinite elements , the convergence of the algorithm is comparable to newton s method .",
    "this was shown under progressively more general assumptions @xcite until to @xcite , where using the concept of _ slant differentiability _ introduced in @xcite , the technique can be shown to be of semi - smooth newton s type , with all the good qualities in term of superlinear convergence and , in some cases of interest , even quadratic convergence .    in this paper",
    ", we propose a parallel version of the policy iteration algorithm , discussing the advantages and the weak points of such proposal .    in order to build such parallel algorithm",
    ", we will use a theoretical construction inspired by some recent results on domain decomposition ( for example @xcite ) .",
    "anyway , for our purposes , thanks to a greater regularity of the hamiltonian , the decomposition can be studied just using standard techniques .",
    "we will focus instead on convergence of the numerical iteration , discussing some sufficient conditions , the number of iteration necessary , the speed .",
    "parallel computing applied to hamilton jacobi equations is a subject of actual interest because of the strict limitation of classical techniques in real problems , where the memory storage restrictions and limits in the cpu speed , cause easily the infeasibility of the computation , even in cases relatively easy . with the purpose to build a parallel solver , the main problem to deal with is to manage the information passing through the threads .",
    "our analysis is not the first contribution on the topic , but it is an original study of the specific possibilities offered by the policy algorithm . in particular some non trivial questions are : is convergence always guaranteed ?",
    "in finite time ?",
    "with which rate ? which is the gain respect to ( the already efficient ) classical howard s algorithm ?    in literature , at our knowledge ,",
    "the first parallel algorithm proposed was by sun in 1993 @xcite on the numerical solution of the bellman equation related to an exit time problem for a diffusion process ( i.e. for second order elliptic problems ) ; an immediately successive work is @xcite by camilli , falcone , lanucara and seghini , here an operator of the semilagrangian kind is proposed and studied on the interfaces of splitting .",
    "more recently , the issue was discussed also by zhou and zhan @xcite where , passing to a quasi variational inequality formulation equivalent , there was possible a domain decomposition .",
    "our intention is to show a different way to approach the topic . decomposing the problem directly in its differential form , effectively , it is possible to give an easy and consistent interpretation to the condition to impose on the boundaries of the sub - domains .",
    "thereafter , passing to a discrete version of such decomposed problem it becomes relatively easy to show the convergence of the technique to the correct solution , avoiding the technical problems , elsewhere observed , about the manner to exchange information between the sub - domains . in our technique ,",
    "as explained later , we will substitute it with the resolution of an auxiliary problem living in the interface of connection in the domain decomposition . in this way",
    ", data will be passed implicitly through the sub - problems .",
    "the paper is structured as follows : in section 2 we recall the classic howard s algorithm and the relation with the differential problem , focusing on the case of its control theory interpretation . in section 3 , after discussing briefly the strategy of decomposition , we present the algorithm , and we study the convergence .",
    "section 4 is dedicated to a presentation of the performances and to show the advantages with respect the non parallel version .",
    "we will end presenting some possible extensions of the technique to some problems of interest : reachability problems with obstacle avoidance , max - min problems .",
    "the problem considered is the following . let be @xmath0 bounded open domain of @xmath1 ( @xmath2 ) ; the steady , first order , _ hamilton - jacobi equation _ ( hj ) is : @xmath3 where , following its _ optimal control interpretation _ , @xmath4 is the _ discount factor _ , @xmath5 is the _ exit cost _ , and the _ hamiltonian _",
    "@xmath6 is defined by : @xmath7 with @xmath8 ( _ dynamics _ ) and @xmath9 ( _ running cost _ ) .",
    "the choice of such hamiltonian is not restrictive but useful to simplify the presentation . as extension of the techniques we are going to present ,",
    "it will be shown , in the dedicate section , as the same results can be obtained in presence of different kind of hamiltonians , as in obstacle problems or in differential games .",
    "under classical assumptions on the data ( for our purposes we can suppose @xmath10 and @xmath11 continuous , @xmath12 and @xmath13 lipschitz continuous for all @xmath14 and verified the _ soner s condition _",
    "@xcite ) , it is known ( see also @xcite , @xcite ) that the equation admits a unique continuous solution @xmath15 in the _ viscosity solutions _ sense .    the solution @xmath16 is the value function to the infinite horizon problem with exit cost , where @xmath17 is the _ first time of exit _",
    "form @xmath0 : @xmath18    numerical schemes for approximation of such problem have been proposed from the early steps of the theory , let us mention the classical finite differences schemes @xcite , semilagrangian @xcite , discontinuous galerkin @xcite and many others .    in this paper",
    "we will focus on a _ monotone _ , _ consistent _ and _ stable _ scheme ( class including the first two mentioned above ) , which will provide us the discrete problem where to apply the howard s algorithm .",
    "considered a discrete grid @xmath19 with @xmath20 points @xmath21 , @xmath22 on the domain @xmath23 , the finite @xmath20-dimensional approximation of @xmath16 , @xmath24 , will be the solution of the following discrete equation ( @xmath25 ) @xmath26 where @xmath27 , ( maximal diameter of the family of simplices @xmath28 built on @xmath19 ) is the discretization step , and related to a subset of the @xmath29 , there are included the dirichlet conditions following the obvious pattern @xmath30 we will assume on @xmath31 , some hypotheses sufficient to ensure the convergence of the discretization    * _ monotony . _ for every choice of two vectors @xmath32 such that , @xmath33 ( component - wise ) then @xmath34 for all @xmath35 . * _ stability .",
    "_ if the data of the problem are finite , for every vector @xmath24 , there exists a @xmath36 such that @xmath24 , solution of , is bounded by @xmath37 i.e. @xmath38 independently from @xmath39 .",
    "* _ consistency .",
    "_ this hypothesis , not necessary in the analysis of the convergence of the scheme , is essential to guarantee that the numerical solution obtained approximates the continuous solution .",
    "it is assumed that @xmath40 for every @xmath41 , @xmath42 , with @xmath43 , @xmath44 , and @xmath45 .    under these assumptions",
    "it has been discussed and proved @xcite that @xmath24 , solution of , converges to @xmath16 , viscosity solution of for @xmath46 .",
    "the special form of the hamiltonian @xmath47 gives us a correspondent special structure of the scheme @xmath31 , in particular , with a rearrangement of the terms , the discrete problem can be written as a resolution of a nonlinear system in the following form : @xmath48 where @xmath49 is a @xmath50 matrix and @xmath51 is a @xmath20 vector .",
    "the name @xmath51 is chosen to underline ( it will be important in the following ) that such vector there are contained information about the dirichlet conditions imposed on the boundaries .",
    "policy iteration algorithm _ ( or howard s algorithm ) consists in a two - steps iteration with an alternating improvement of the policy and the value function , as shown in table [ ha ] .",
    "it is by now known @xcite that under a monotonicity assumption on the matrices @xmath52 , ( we recall that a matrix is monotone if ans only if it is invertible and every element of its inverse are non negative ) , automatically derived from ( h1 * ) ( as shown below ) , the above algorithm is a non smooth newton method that converges superlinearly to the discrete solution of problem .",
    "the convergence of the algorithm is also discussed in the earlier work @xcite where the results are given in a more regular framework .    additionally , if @xmath53 has a finite number of elements , and this is the standard case of a discretized space of the controls , then the algorithm converges in a finite number of iterations .",
    "let us state , for a fixed vector @xmath54 the subspace of controls @xmath55    [ p:1 ] let us assume the matrix @xmath52 is invertible .",
    "if ( h1 * ) holds true , then @xmath52 is monotone and not null for every @xmath56 with @xmath54 .    for a positive vector @xmath24 ,",
    "consider a vector @xmath57 such that @xmath58 componentwise , then for h1 * @xmath59 where @xmath60 , therefore @xmath61 suppose now that the @xmath62 column of @xmath63 has a negative entry : choosing @xmath64 ( @xmath65 @xmath62 column of the identity matrix ) multiplying the previous relation for @xmath63 we have a contradiction .",
    "then @xmath66 is monotone .",
    "( 1,0)380 + howard s algorithm ( ha ) ( 1,0)380 +    inputs : @xmath67 , @xmath68 .",
    "( implicitly , the values of @xmath24 at the boundary points ) + initialize @xmath69 and @xmath70 + iterate @xmath71 :    * find @xmath72 solution of @xmath73 .",
    "+ if @xmath74 and @xmath75 , then stop .",
    "otherwise go to ( ii ) .",
    ". + set @xmath77 and go to ( i )    outputs : @xmath78 .",
    "( 1,0)380 +    it is useful to underline the conceptual distinction between the convergence of the algorithm and the convergence of the numerical approximation to the continuous function @xmath16 as discussed previously . in general",
    ", the howard s algorithm is an acceleration technique for the calculus of the approximate solution , the error with the analytic solution will be depending on the discretization scheme used .    to conclude this introductory section",
    "let us make two monodimensional basic examples .",
    "[ ex1 ] an example for the matrix @xmath52 and the vector @xmath79 is the easy case of an upwind explicit euler scheme in dimension one @xmath80 where @xmath81 is a uniform discrete grid consisting in @xmath20 knots of distance @xmath39 .",
    "moreover , @xmath82 and @xmath83 . in this case",
    "the system is @xmath84 } { h\\lambda } & -\\frac{f^+_1}{h\\lambda } & 0 & \\cdots & 0 \\\\ \\frac{f^-_2}{h\\lambda } & 1+\\frac{\\left[f^+_2-f^-_2\\right]}{h\\lambda } & -\\frac{f^+_2}{h\\lambda }   & \\cdots & 0\\\\ 0 & \\ddots & \\ddots & \\ddots & 0\\\\ 0 & \\cdots & \\cdots & \\frac{f^-_n}{h\\lambda } & 1+\\frac{\\left[f^+_n - f^-_n\\right]}{h\\lambda } \\end{array } \\right),\\ ] ] and @xmath85 it is straightforward that the solution of howard s algorithm , verifying @xmath86 , is the solution of .",
    "[ ex2 ] if we consider the standard 1d semilagrangian scheme , the matrix @xmath52 and the vector @xmath79 are @xmath87 and @xmath88 where @xmath89 and the coefficients @xmath90 are the weights of a chosen interpolation @xmath91(x_i+h f(x_i,\\alpha_j))=\\sum_{i=0}^{n+1}b_i(\\alpha_j)v_i$ ] .    despite the good performances of the policy algorithm as a _ speeding up _",
    "technique , in particular in presence of a convenient initialization ( as shown for example in @xcite ) an awkward limit appears naturally : the necessity to store data of very big size .",
    "just to give an idea of the dimensions of the data managed it is sufficient consider that for a 3d problem solved on a squared grid of side @xmath92 , for example , it would be necessary to manage a @xmath93 matrix , task which becomes soon infeasible , increasing @xmath92 .",
    "this give us an evident motivation to investigate the possibility to solve the problem in parallel , containing the complexity of the sub problems and the memory storage .",
    "the strict relation between various points of the domain displayed by equation , makes the problem to find a parallel version of the technique , not an easy task to accomplish",
    ". the main problem , in particular , will be about passing information between the threads , necessary without a prior knowledge of the characteristics of the problem .",
    "our idea is to combine the policy iteration algorithm with a domain decomposition principle for hj equations . using the theoretical framework of the resolution of partial differential equations on submanifolds , presented for example in @xcite",
    ", we consider a decomposition of @xmath0 on a collection of subdomains : @xmath94    where the interfaces @xmath95 , @xmath96 are some strata of dimension lower than @xmath97 defined as the intersection of two subdomains @xmath98 for @xmath99 .",
    "the notion of viscosity solution on the manifold , in this regular case , will be coherent with the definition elsewhere    a upper semicontinuos function @xmath100 in @xmath101 is a subsolution on @xmath101 if for any @xmath102 , any @xmath103 sufficiently small and any maximum point @xmath104 of @xmath105 is verified @xmath106 where with @xmath107 we indicate the hamiltonian @xmath47 restricted on @xmath108 .",
    "+ the definition of supersolution is made accordingly .",
    "it is useful to underline that , differently from multidomains problems ( like the already quoted @xcite ) there is no need to use a specific concept of solutions through the interfaces .",
    "thanks to the regularity of the hamiltonian , the simple definition of viscosity solution on an enlargement of @xmath101 ( called @xmath108 ) will be effective ; as described by the following result .",
    "[ t:1 ] let us consider a domain decomposition as stated in .",
    "the continuous function @xmath109 , verifying , for a @xmath103 , in the viscosity sense the system below @xmath110 is coincident with the viscosity solution @xmath111 of .",
    "it is necessary to prove the uniqueness of a continuous viscosity solution for .",
    "after that , just invoking the existence and uniqueness results for the solution @xmath16 ( solution of the original problem ) , and observing that it is also a continuous viscosity solution of the system , from coincidence on the boundary , we get thesis .    to prove the uniqueness it is possible to use the classical argument of `` doubling of variables '' .",
    "we recall the main steps of the technique for the convenience of the reader . for two continuous viscosity solutions @xmath112 of using the auxiliary function @xmath113 which has a maximum point in @xmath114 ,",
    "it is easy to see that @xmath115 now the limit @xmath116 is proved as usual deriving @xmath117 and using the properties of sub supersolution , ( for example , @xcite theo .",
    "ii.3.1 ) with the observation that no additional difficulty appears when a subsequence @xmath118 is definitely in @xmath101 because of the regularity of the hamiltonian through the same interface ; for the possibility to exchange the role between @xmath119 and @xmath120 ( both super and subsolutions ) we have uniqueness .    in the following section we propose a parallel algorithm based on the numerical resolution of the decomposed system above .",
    "this technique consists of a two steps iteration :    * use howard s algorithm to solve in parallel ( @xmath92 threads ) the nonlinear systems obtained after discretization of on the subdomains @xmath121 ( in this step the values of @xmath24 are fixed on the boundaries ) ; * update the values of @xmath24 on the interfaces of connection @xmath122 by using howard s algorithm on the nonlinear system obtained from the second equation of ( in this case the _ interior points _ of @xmath123 are constant ) .    as it is shown later",
    ", this two - step iteration permits the transfer of information through the interfaces performed by the phase ( ii ) .",
    "this procedure , anyway , is not priceless , the number of the steps necessary for its resolution will be shown to be higher than the classic algorithm ; the advantage will be in the resolution of smaller problems and the possibility of a resolution in parallel . moreover , the coupling between phase ( i ) and ( ii ) produces a succession of results convergent in finite time , in the case of a finite space of controls .",
    "the good performances of the algorithm , benefits and weak points will be discussed in details in section [ s : test ] .      to describe precisely the algorithm it is necessary to state the following .",
    "let us consider as before a uniform grid @xmath124 , the indices set @xmath125 , and a vector of all the controls on the knots @xmath126 .",
    "the domain @xmath0 is decomposed as @xmath127 , where , coherently with above @xmath128 ; this decomposition induces an similar structure in the indices set @xmath129 , where every point @xmath130 of index in @xmath131 is an `` _ _ interior point _",
    "_ '' , in the sense that for every @xmath132 ( ball centred in @xmath130 of radius @xmath39 , defined as previously ) , @xmath133 , for every @xmath134 .",
    "the set @xmath135 is the set of all the `` _ _ border points _ _ '' , which means , for a @xmath136 we have that there exists at least two points @xmath21 , @xmath137 such that @xmath138 and @xmath139 with @xmath134 .",
    "we will build @xmath92 discrete subproblems on the subdomains @xmath121 using as described before a monotone , stable and consistent scheme . in this case a discretization of the hamiltonian provides , for every subdomain @xmath121 , related to points @xmath21 , @xmath140 , a matrix @xmath141 and a vector @xmath142 .",
    "we highlighted here , the dependance of @xmath143 from the border points which are , either , points where there are imposed the dirichlet conditions ( data of the problem ) or points on the interface @xmath101 which have to be estimed",
    ".    assumed for simplicity that every @xmath131 has the same number of @xmath144 elements , called @xmath145 , we have @xmath146 , and @xmath147 , @xmath148 .    in resolution over @xmath101 we will have a matrix @xmath149 and a relative vector @xmath150 , in the spaces , respectively , @xmath151 and @xmath152 .",
    "( for the 1d case , e.g. , we can easily verify that @xmath153 ) . in this framework ,",
    "the numerical problem after the discretization of equations is the following :    find @xmath154 with @xmath155 for @xmath156 and @xmath157 , solution of the following system of nonlinear equations : @xmath158    the resolution of first and the second equation of will be called respectively _ parallel part _ and _ iterative part _ of the method . solving the parallel and",
    "the iterative part will be performed alternatively , as a double step solver .",
    "the iteration of the algorithm will generate a sequence @xmath159 solution of the two steps system    @xmath160    where @xmath161 , @xmath162 are the matrices and vectors in @xmath163 , and @xmath164 , containing @xmath165 , @xmath166 and such to return as solution the argument of @xmath167 elsewhere .",
    "evidently , @xmath161 @xmath168 with @xmath169 are : equal to @xmath170 in the @xmath171 blocks , and equal to the rows @xmath172 of the identity matrix elsewhere , @xmath173 in the @xmath174 elements of the vector and @xmath175 elsewhere , ( we call these entries , in the following _ identical arguments _ ) ; the same , in the @xmath176 block , @xmath177 elements of the vector for @xmath178 .",
    "it is clear that , despite this formal presentation , made to simplify the notation in the following , each equation of , negletting the trivial relations , is a nonlinear system on the same dimension than .",
    "clearely , a solution of is the fixed point of .    the convergence of the discrete problem above to the solution of equation , for a consistent , monotone and stable scheme was proved by souganidis in @xcite ) , other examples are @xcite .",
    "it is consequent then , the domain decomposition result stated before gives the theoretical justification to the transition .",
    "different issue will be to show the convergence of the method ; point discussed in the following .",
    "( 1,0)380 + parallel howard s algorithm ( pha ) ( 1,0)380 +    inputs : @xmath165 , @xmath179 for @xmath180 + initialize @xmath69 and @xmath181 .",
    "+ iterate @xmath71 :    1 .",
    "_ ( parallel step ) _ for each @xmath182 + call ( ha ) with inputs @xmath183 and @xmath184 + get @xmath185 2 .   _",
    "( sequential step ) _ + call ( ha ) with inputs @xmath186 and @xmath187 + get @xmath188 3 .",
    "compose the solution @xmath189 + if @xmath190 then _ exit _ , otherwise go to ( 1 ) .",
    "outputs : @xmath78    ( 1,0)380 +    it is evident that such technique can be expressed as @xmath191 where , coherently with above @xmath192_j$ ] for @xmath140 .    the hypotheses ( h1 * -h2 * ) will be naturally adapted to the new framework as below :    * _ monotony .",
    "_ for every choice of two vectors @xmath32 such that , @xmath33 ( component - wise ) then @xmath193 for all @xmath194 , and @xmath180 .",
    "* _ stability .",
    "_ if the data of the problem are finite , for every vector @xmath24 , and every @xmath57 s.t .",
    "@xmath195 , there exists a @xmath36 such that @xmath24 , solution of @xmath196 with @xmath197 and @xmath198 , is bounded by @xmath37 independently from @xmath39 .",
    "this will be sufficient , thanks also to h3 , to ensure convergence of @xmath199 solution of @xmath200 to @xmath201 for @xmath43 .    from the assumptions on the discretization scheme",
    "some specific properties of @xmath161 and @xmath168 can be derived    [ pp ] let us assume @xmath202 .",
    "let state also    * if @xmath203 then @xmath204 , for all @xmath180 , for all @xmath14 .",
    "then it holds true the following .    1 .",
    "if invertible , the matrices @xmath205 are monotone , not null for every @xmath198 , and for every @xmath206 with @xmath207 .",
    "if @xmath208 , we have that for all @xmath198 and for every @xmath209 , there exists a @xmath210 such that @xmath211 the same relation holds for @xmath212 .",
    "3 .   called @xmath213 the fixed point of , if we have @xmath214 ( resp .",
    "@xmath215 ) , then there exists a @xmath14 such that , for all @xmath216 , @xmath217    to prove @xmath218 let us just observing that the monotony of @xmath165 is sufficient end necessary for the monotony of @xmath161 , ( elsewhere @xmath161 is a diagonal block matrix with all the other blocks invertible ) , then the argument is the same of proposition [ p:1 ] , starting from two vectors @xmath219 with the only difference that we need assumption h4 to get @xmath220 or equivalently @xmath221 then the thesis .    to prove 2 , it is sufficient to see @xmath222 , then for h2 the thesis .",
    "the proof of 3 is a direct consequence of monotony assumption h1 with the definition of @xmath213 as @xmath223    here we introduce a convergence result for the ( pha ) algorithm .",
    "[ t:1 ] assume that the function @xmath224 , with @xmath225 invertible , and @xmath226 are continuous on the variable @xmath227 for @xmath216 , @xmath53 is a compact set of @xmath1 , and @xmath228 hold .",
    "then there exists a unique @xmath213 in @xmath164 solution of .",
    "moreover , the sequence @xmath229 generated by the ( pha ) has the following properties :    * every element of the sequence @xmath230 is bounded by a constant @xmath37 , i.e. @xmath231 .",
    "* if @xmath232 then @xmath233 for all @xmath71 , vice versa , if @xmath234 then @xmath235 .",
    "* @xmath236 when @xmath237 tends to @xmath238 .",
    "the existence of a solution comes directly from the monotonicity of the matrices @xmath239 , the existence of an inverse and then the existence of a solution of every system of .",
    "let us show that such solution is limited as limit of a sequence of vectors of bounded norm .",
    "observing that , @xmath240 without loss of generality we assume that @xmath241 . considering the problem @xmath242 we have for h2 that if @xmath243 is bounded then @xmath244 .",
    "adding that @xmath245 is chosen bounded , the thesis follows for induction .",
    "let us to pass now to prove the uniqueness : taken @xmath246 two solutions of , we define the vector @xmath247 equal to @xmath24 in the identical arguments of @xmath167 and equal to @xmath57 elsewhere , for a @xmath198 .",
    "we have that , for a control @xmath248 ( for proposition [ pp].3 ) , @xmath249 then @xmath250 and for monotonicity @xmath33 . exchanging the role of @xmath24 and @xmath57 , and for the arbitrary choice of @xmath251 ( in some arguments",
    "the relation above is trivial ) we get the thesis .",
    "\\(i ) to prove that @xmath72 is an increasing sequence is sufficient to prove that taken @xmath252 solution of @xmath253 with ( the opposite case is analogue ) @xmath254 , for a choice of @xmath198 is such that @xmath255 .",
    "let us observe , for a choice of @xmath256 and using of prop .",
    "[ pp ] @xmath257 then @xmath258 then @xmath255 . + we need also to prove that @xmath259 : if it should not be true , then , with a similar argument than above @xmath260 then for h4 , @xmath261 which contradicts what stated previously .",
    "it is also possible to show that the method stops to the fixed point in a finite time .",
    "this is an excellent feature of the technique ; unfortunately , the estimate which is possible to guarantee is largely for excess and , although important from the theoretical point of view , not so effective to show the good qualities of the method .",
    "the performances will checked in the through some tests in the section [ s : test ] .",
    "if @xmath262 and convergence requests of theorem [ t:1 ] are verified , then @xmath263 converges to the solution in less than @xmath264 iterative steps .",
    "the proof is slightly similar to the classic howard s case ( cf .",
    "for example @xcite ) .",
    "let us consider the abstract formulation @xmath265 , where @xmath266 is determined by @xmath267 parameter in @xmath268 , and @xmath269 , where @xmath270 is determined by @xmath271 parameter in @xmath268 .",
    "then if we consider the iteration @xmath272 and we suppose ( theorem [ t:1 ] ) @xmath273 , @xmath274 ; than called @xmath275 the @xmath276 variables in @xmath268 associated to @xmath277 we know that there exist a @xmath144 and a @xmath278 where @xmath279 , such that @xmath280 , and again @xmath281 . afterwards",
    "@xmath277 is a fixed point of .",
    "+ to restrict to our case is sufficient identify the process @xmath282 with the ( parallel ) resolution on the sub - domains and @xmath283 with the iteration on the interfaces between the sub domains .",
    "it is worth to notice that the above estimation is worse than the classical howard s case .",
    "in fact , the classical algorithm find the solution in @xmath264 , the @xmath263 will have the same number of iterative steps .",
    "this number has to be multiplied , called @xmath284 the maximum number of nodes in a sub - domain and @xmath285 the number of nodes belonging to the interface , for @xmath286 getting , at the end , a total number of simple steps equal to @xmath287 , much more than the classical case . in this analysis",
    "we do not consider anyway , the good point of the decomposition technique , the fact that any computational step is referred to a smaller and simpler problem , with the evident advantages in term of time elapsed in every thread and memory storage needed .",
    "the performances of the algorithm and its characteristics as speeding up technique will be tested in this section .",
    "we will use a standard academic example where , anyway , there are present all the main characteristics of our technique .",
    "[ [ d - problem ] ] 1d problem + + + + + + + + + +    consider the monodimensional problem @xmath288 it is well known that this equation ( _ eikonal equation _ ) modelize the distance from the boundary of the domain , scaled by an exponential factor ( _ kruzkov transform _ , cf .",
    "@xcite ) . through a standard euler discretization",
    "is obtained the problem in the form . in table",
    "[ tt:2 ] is shown a comparison , in term of speed and efficacy , of our algorithm and the classic howard s one , in the case of a two thread resolution .",
    "it is possible appreciate as the parallel technique is not convenient in all the situations .",
    "this is due to the low number of parallel threads which are not sufficient to justify the construction . in the successive test , keeping fixed the parameter @xmath289 and tuning number of threads it is possible to notice how much influential is such variable in terms of efficacy and time necessary for the resolution .",
    "c|*2c|*4c & & + dx & time & it . & t. ( par .",
    "p. ) & it .",
    "p. ) & t. ( it .",
    "p. ) & total t. + * 0.1 & e-3 & 10 & 1e-4 & 4 & 1e-5 & 1e-3 + * 0.05 & 6e-3 & 20 & 8e-4 & 5 & e-5 & 3e-3 + * 0.025 & 0.09 & 40 & 7e-3 & 6 & 2e-5 & 0.04 + * 0.0125 & 0.32 & 80 & 0.048 & 8 & 1e-4 & 0.36 + * 0.00625 & 2.22 & 160 & 0.34 & 14 & 8e-4 & 3.26 + * * * * *    c|*2c|*4c    dx=0.0125 & & + threads & t. & it . & t. ( par .",
    "p. ) & it .",
    "( par . ) & t. ( it .",
    "p. ) & total t. +    * 2 & & & 0.48 & 4 & 1e-4 & 0.36 + * 4 & & & 8e-3 & 6 & 1e-4 & 0.086 + * 8 & 0.32 & 80 & 18e-4 & 7 & 6e-4 & 0.014 + * 16 & & & 7e-4 & 10 & 4e-4 & + * 32 & & & 2e-4 & 8 & 6e-3 & 0.011 + * * * * *    in table [ tt:2 ] we compare the iterations and the time ( expressed in seconds as elsewhere in the paper ) necessary to reach the approximated solution , analysing in the various phases of the algorithm , time and iterations necessary to solve every sub - problem ( first two columns ) , time elapsed for the iterative part ( which passes the information through the threads , next column ) , finally the total time .",
    "it is highlighted the optimal choice of number of threads ( 16 thread ) ; it is evident as that number will change with the change of the discretization step @xmath289 .",
    "therefore it is useful to remark that an additional work will be necessary to tune the number of threads accordingly to the peculiarities of the problem ; otherwise the risk is to is to loose completely the gain obtained through parallel computing and to get worse performances even compared with the classical howard s algorithm .    as in the rest of the paper all the codes",
    "are developed in mathworks matlaband performed on a processor 2,8 ghz intel core i7 ; in the tests the parallelization is simulated .",
    "c|*2c|*5c    & & + dx & t. & it . & t. ( p.p . ) & it .",
    "& t. ( it.p . ) & it .",
    "( it.p . ) & total t. + * 0.1 & 0.05 & 11 & 0.009 & 8 & 0.02 & 2 & 0.04 + * 0.05 & 2.41 & 21 & 0.05 & 13 & 0.03 & 2 & 0.14 + * 0.025 & 73.3 & 40 & 2.5 & 22 & 0.15 & 3 & 7.83 + * 0.0125 & @xmath290e5 & - & 76 & 40 & 1.293 & 5 & 383.3 + * * * *    [ [ d - problem-1 ] ] 2d problem + + + + + + + + + +    the next test is in a space of higher dimension .",
    "let us consider the approximation of the scaled distance function from the boundary of the square @xmath291 , solution of the eikonal equation @xmath292 where @xmath293 is the usual unit ball .",
    "for the discretization of the problem is used a standard euler discretization .",
    "similar tests than the 1d case are performed , confirming the good features of our technique and , as already shown , the necessity of an appropriate number of threads with respect to the complexity of the resolution .",
    "-norm ( left ) and distribution of the error @xmath294 , @xmath295 threads ( right ) .",
    ", title=\"fig:\",height=170 ] -norm ( left ) and distribution of the error @xmath294 , @xmath295 threads ( right ) .",
    ", title=\"fig:\",height=170 ]    in table [ tt:3 ] performances of the classic howard s algorithm are compared with our technique . in this case",
    "the number of threads are fixed to 4 ; the parallel technique is evaluated in terms of : maximum time elapsed in one thread and max number of iterations necessary ( first and second columns ) , time and number of iterations of the iterative part ( third and fourth columns ) and total time . in both the cases",
    "the control set @xmath296 is substituted by a @xmath297points discrete version .",
    "it is evident , in the comparison , an improvement of the speed of the algorithm even larger than the simpler 1d case .",
    "this justifies , more than the 1d case , our proposal .",
    "c|*2c|*4c    dx=0.025 & & + threads & t. & it . & t. ( par .",
    "p. ) & it .",
    "( par . ) & t. ( it .",
    "p. ) & total t. +    * 4 & & & 2.5 & 22 & 0.15 & 7.83 + * 9 & & & 0.9 & 18 & 0.5 & 5.08 + * 16 & 73.3 & 40 & 0.05 & 13 & 1.6 & + * 25 & & & 0.03 & 12 & 2.4 & 2.52 + * 36 & & & 0.016 & 11 & 6.04 & 6.11 + * * * * *    in the table [ tt:4 ] are compared the performances for various choices of the number of threads , for a fixed @xmath298 . as in the 1d case",
    "is possible to see how an optimal choice of the number of threads can drastically strike down the time of convergence . in figure",
    "[ f : in ] is possible to see the distribution of the error .",
    "as is predictable , the highest concentration will correspond to the non - smooth points of the solution .",
    "it is possible to notice also how our technique apparently does not introduce any additional error in correspondence of the interfaces connecting the sub - domains .",
    "this is reasonable , although not evident theoretically . in fact , it is possible to prove the convergence of the scheme to the solution of using classical techniques @xcite but the rate of convergence could be different in the various subproblems , because of the ( possibly different ) local features of the problem .",
    "as shown in the tests , an important point of weakness of our technique is represented by the iterative part , which can be smaller and therefore easier than the ones solved in the parallel part , but it is highly influential in terms of general performances of the algorithm . in particular the number of the iterations of the coupling iterative - parallel part",
    "is sensible to a good initialization of the `` internal boundary '' points .",
    "as is shown in figure [ f : in ] a right initialization , even obtained on a very coarse grid , affects consistently the overall performances . in this section , all the tests are made with a initialization of the solution on a @xmath299-points grid , with @xmath97 dimension of the domain space .",
    "the time necessary to compute the initial solution is always negligeable with respect to the global procedure .",
    "( left ) @xmath300 ( right ) ) of the approximated solution obtained with a @xmath301 and an @xmath302threads pha . ,",
    "title=\"fig:\",height=170 ]   ( left ) @xmath300 ( right ) ) of the approximated solution obtained with a @xmath301 and an @xmath302threads pha . ,",
    "title=\"fig:\",height=170 ]    c|*2c|*5c    & & + dx & time & it . & t. ( p. p. ) & it .",
    "& t. ( it .",
    "p. ) & it .",
    "p. ) & total t. + * 0.4 & 0.004 & 4 & 0.003 & 4 & 0.002 & 1 & 0.05 + * 0.2 & 0.22 & 6 & 0.026 & 6 & 0.016 & 2 & 0.052 + * 0.1 & 164.2 & 11 & 1.102 & 8 & 2.1 & 4 & 6.78 + * 0.05 & @xmath290e5 & - & 164 & 10 & 4.98 & 3 & 494 + * * * *         [ [ d - problem-2 ] ] 3d problem + + + + + + + + + +    analogue results are obtained also in the approximation of a 3d problem .",
    "of course the effects of the increasing number of control points produces a greater complexity and will limit , for a same number of processors available , the possibility of a fine discretization of the domain . + let us consider the domain @xmath303 ^ 3 $ ] and the equation , where @xmath304 , unitary ball in @xmath305 . in figure",
    "[ fig3d ] there are shown two level sets of the solution obtained .",
    "a comparison with the performances of the classic howard s algorithm are shown in table [ tt:4 ] .",
    "[ multiloop ] with the growth of the dimensionality of the problem a special care should be dedicated to the resolution of the iterative step .",
    "suppose to simplify the procedure considering a square domain ( in dimension @xmath306 an interval , a square , a cube .. ) and a successive splitting in equal regular subdomains .",
    "calling @xmath20 the number of total variables and @xmath307 the number of the splitting ( which generates a division in @xmath308 subdomains ) the number of the elements in every thread of the parallel part is @xmath309 , and the number of the variables in the iterative part @xmath310{n}}(n_s-1)d$ ] .",
    "clearly the optimal choice of the number of threads is such that the elements of the iterative part are balanced with the nodes in each subdomain , so it is straight forward to find the following optimal relation between number of splitting and total elements @xmath311 it is evident that for a very high number of elements , ( figure [ fig4 ] ) , it is useless to use a great and non optimal number of threads .",
    "this contradiction comes from the bottleneck effect of the resolution on the interfaces of communication between the subdomains , indeed the complexity of such subproblem will grow with the number of threads instead to decrease , reducing our possibilities of resolution .",
    "the problem can be overcome with an additional parallel decomposition of the iterative pass , permitting us to decompose each subproblem to a complexity acceptable .",
    "imagine to be able to solve ( for computational reasons , memory storage , etc . )",
    "only problem of dimension `` white square '' ( we refer to figure [ fig4 ] , right ) and to want to solve a bigger problem ( `` square 1 '' ) with an arbitrary number of processors available . through our technique",
    "we will decompose the problem in a finite number of subproblems `` white square '' and a ( possibly bigger than the others ) problem `` square 2 '' .",
    "we will replicate our parallel procedure for the `` square 2 '' obtaining a collection of manageable problems and a `` square 3 '' . through a reiteration of this idea",
    "we arrive to a decomposition in subproblems of dimension desired .",
    "in this section there are shown some non trivial extensions to more general situations of the method .",
    "we will discuss , in particular , how to adapt the parallelization procedure to the case of a target problem , an obstacle problem and max - min problems , where the special structure of the hamiltonian requires some cautions and remarks .",
    "an important class of problems where is useful to extend the techniques discussed is the target problems where a trajectory is driven to arrive in a _ target set _",
    "@xmath312 optimizing a cost functional .    a easy way to modify our algorithm to this case is to change the construction procedure for @xmath49 and @xmath37 : @xmath313_i:=\\left\\{\\begin{array}{ll } \\left[b(\\alpha)\\right]_i , & \\hbox { if } x_i\\notin { { \\mathcal t } } , \\\\ \\left[\\mathbb{i}\\right]_i , & \\hbox { otherwise;}\\end{array } \\right . \\ ; c'(\\alpha)_i:=\\left\\{\\begin{array}{ll } c(\\alpha)_i , & \\hbox { if } x_i\\notin { { \\mathcal t } } , \\\\ 0 , & \\hbox { otherwise;}\\end{array } \\right.\\ ] ] this , with the classical further construction of _ ghost nodes _ outside the domain @xmath0 to avoid the exit of the trajectories from @xmath0 , will solve this case .    a question arises naturally in this modification : are the convergence results still valid ?",
    "the answer is not completely trivial because , for example , a monotone matrix modified as above is not automatically monotone ( the easiest counterexample is the identical matrix flipped vertically : it is monotone because invertible and equal to its inverse , but changing any row as in we get a non invertible matrix ) . to prove the convergence it is sufficient to start from the numerical scheme associated to such modified algorithm .",
    "it is quite direct to show verified the hypotheses ( h1-h4 ) getting as consequence the described properties of the algorithm .",
    "a well known benchmark in the field is the so - called zermelo s navigation problem , the main feature , in this case , is that the dynamic is driven by a force of comparable power with respect to our control .",
    "the target to reach will be a ball of radius equal to @xmath314 centred in the origin , the control is in @xmath315 .",
    "the other data are : @xmath316 ^ 2,\\quad \\lambda = 1 , \\quad l(x , y , a)=1.\\ ] ]    .,title=\"fig:\",height=170 ] .,title=\"fig:\",height=170 ]    in table [ tt:6 ] a comparison with the number of threads chosen is made .",
    "now we are in presence of characteristics not aligned with the grid , but the performances of the method are poorly effected .",
    "convergence is archived with performances comparable to the already described case of the eikonal equation .",
    "c|*2c|*4c    dx=0.025 & & + threads & t. & it . & t. ( par .",
    "p. ) & it .",
    "( par . ) & t. ( it .",
    "p. ) & total t. +    * 4 & & & 1.31 & 11 & 0.13 & 5.4 + * 9 & & & 0.7 & 9 & 0.7 & 4.2 + * 16 & 37.9 & 20 & 0.031 & 7 & 1.38 & + * 25 & & & 0.02 & 7 & 2.7 & 3.9 + * 36 & & & 0.01 & 8 & 5.19 & 5.28 + * * * * *      dealing with an optimal problem with constraints using the bellman s approach , various techniques have been proposed . in this section",
    "we will consider an implicit representation of the constraints through a level - set function .",
    "let us to consider the general single obstacle problem @xmath317 where the hamiltonian @xmath47 is of the form discussed in section [ s:1 ] and the standard hypothesis about regularity of the terms involved are verified .",
    "the distinctive trait of this formulation is about the term @xmath318 , assumed regular , typically stated as the opposite of the signed distance from the boudary of a subset @xmath319 .",
    "the solution of this problem is coincident , where defined , with the solution of the same problem in the space @xmath320 , explaining the name of `` obstacle problem '' ( cf .",
    "@xcite ) .    through an approximation of the problem in a finite dimensional one , in a similar way",
    "as already explained , is found the following variation of the howard s problem @xmath321 where the term @xmath57 is a sampling of the function @xmath322 on the knot of the discretization grid .    it is direct to show that changing the definition of the matrix @xmath49 and @xmath323 , is possible to come back to the problem . adding an auxiliary control to the set @xmath324 and re - defying the matrices @xmath49 and @xmath323 as @xmath325_i:=\\left\\{\\begin{array}{ll } \\left[b(\\alpha)\\right]_i , & \\hbox { if } b(\\alpha)v - c_g(\\alpha)\\geq v - w \\\\",
    "\\left[\\mathbb{i}\\right]_i , & \\hbox { otherwise;}\\end{array } \\right .   \\\\",
    "c_g'(\\alpha)_i:=\\left\\{\\begin{array}{ll } c_g(\\alpha)_i , & \\hbox { if } b(\\alpha)v - c_g(\\alpha)\\geq v - w \\\\",
    "w_i , & \\hbox { otherwise;}\\end{array } \\right .",
    "\\end{split}\\ ] ] @xmath326 ( where the @xmath327 is the @xmath328row if @xmath329 is a matrix , and the @xmath328 element if @xmath329 is a vector , and @xmath330 is the identity matrix ) , the problem becomes @xmath331 which is in the form .    even in this case",
    "the verification of hypotheses ( h1-h4 ) by the numerical scheme associated to the transformation is sufficiently easy .",
    "it is in some cases also possible the direct verification of conditions of convergence in the obstacle problem deriving them from the free of constraints case .",
    "for example if we have that the matrix @xmath52 is strictly dominant ( i.e. @xmath332 for every @xmath333 , and there exists a @xmath103 such that for every @xmath251 , @xmath334 ) , then the properties of the terms are automatically verified , ( i.e. since all @xmath225 are strictly dominant and thus monotone ) .",
    "a classical problem of interest is the optimization of trajectories modelled by @xmath335 which produces a collection of curves in the plane @xmath336 with a constraint in the curvature of the path .",
    "typically this is a simplified model of a car of constant velocity @xmath323 with a control in the steering wheel .",
    "+        the value function of the exit problem from the domain @xmath337 , @xmath338 $ ] discretized uniformly in 8 points is presented in figure [ f : dub ] .",
    "it is natural to imagine the same problem with the presence of constraints .",
    "such problem can be handled with the technique described above producing the results shown in the same figure [ f : dub ] , where there are presented some optimal trajectories ( in the space @xmath336 ) for the exit from @xmath337 in presence of some constraints . from the picture it is possible to notice also the constraint about the minimal radius of curvature contained in the dynamics .",
    "the last , more complicated extension of the howard s problem is about max - min problems of the form    ( 1,0)380 + pha ( maxmin case ) ( 1,0)380    initialize @xmath69 @xmath181 for all @xmath198 .",
    "+ k:=1 ;    1 .",
    "iterate _ ( parallel step ) _ for every @xmath182 do : + @xmath339 * find @xmath340 solution of @xmath341 .",
    "+ if @xmath342 and @xmath343 , then @xmath344 , and exit ( from inner loop ) .",
    "+ otherwise go to ( 1.ii ) .",
    "* @xmath345 .",
    "+ set @xmath346 and go to ( 1.i ) 2 .",
    "( sequential step ) _ for @xmath347 * find @xmath348 solution of @xmath349 .",
    "+ if @xmath350 and @xmath351 , then @xmath352 , and go to ( 3 ) .",
    "+ otherwise go to ( 2ii ) . * @xmath353 . +",
    "set @xmath354 and go to ( 2i ) 3 .",
    "compose the solution @xmath355 + k:=k+1 ; + if @xmath356 then _ exit _ , otherwise go to ( 1 ) .",
    "( 1,0)380    @xmath357    such a non linear equations arises in various contexts , for example in differential games and in robust control .",
    "the convergence of a parallel algorithm for the resolution of such problem is also discussed in @xcite .",
    "also in this case , a modified version of the policy iteration algorithm can be shown to be convergent ( cf .",
    "our aim in this subsection is to give some hints to build a parallel version of such procedure .",
    "let us introduce the function @xmath358 , for @xmath359 and @xmath360 defined by @xmath361 the problem , in analogy with the previous case , is equivalent to solve the following system of nonlinear equations    @xmath362    the parallel version of the howard algorithm in the case of a maxmin problem is summarized in table [ mm ] .",
    "it is worth to notice that at every call of the function @xmath363 is necessary to solve a minimization problem over the set @xmath53 , this can be performed in an approximated way , using , for instance , the classical howard s algorithm .",
    "this gives to the dimension of this set a big relevance on the performances of our technique .",
    "for this reason , if the cardinality of @xmath53 ( in the case of finite sets ) is bigger than @xmath364 , it is worth to pass to the alternative problem @xmath365 ( here there are used the isaacs conditions ) before the resolution , inverting in this way , the role of @xmath53 and @xmath364 in the resolution .",
    "one of the most known example of max - min problem is the pursuit evasion game ; where two agents have the opposite goal to reduce / postpone the time of capture .",
    "the simplest situation is related to a dynamic @xmath366 where controls are taken in the unit ball @xmath367 and capture happens when the trajectory is driven to touch the small ball @xmath368 , ( @xmath369 , in this case ) .",
    "the passage to a target problem is managed as described previously .    ,",
    "title=\"fig:\",height=170 ] , title=\"fig:\",height=170 ]    in figure [ f : pe ] the approximated value function of that problem is shown .",
    "the main difficulty in the use of the howard s algorithm , i.e. the resolution of big linear systems can be overcome using parallel computing .",
    "this is important despite the fact that we must accept an important drawback : the double loop procedure ( or multi - loop procedure as sketched in remark [ multiloop ] ) does not permit to archive a superlinear convergence , as in the classical case ; we suspect ( as in figure [ f : in ] ) that such rate is preserved looking to the ( external ) iterative step , where we have to consider , anyway , that in every step of the algorithm a resolution of a reduced problem is needed .",
    "another point influential in the technique is the manner chosen to solve every linear problem which appears in the algorithm . in this paper , being not in our intentions to show a comparison with other competitor methods rather studying the properties of the algorithm in relation of the classical case , we preferred the simplicity , using a routine based on the exact inversion of the matrix . using of an iterative solver , with the due caution about the error introduced , better performances are expected ( cf .",
    "@xcite ) .    through the paper we showed as some basic properties of the schemes used to discretized the problem bear to sufficient conditions for the convergence of the algorithm proposed",
    ", this choice was made to try to keep our analysis as general as possible . a special treatment about the possibility of a domain decomposition in presence of non monotone schemes is possible , although not investigated here .",
    "this work was supported by the european union under the 7th framework programme fp7-people-2010-itn sadco , sensitivity analysis for deterministic controller design .",
    "+ the author thanks hasnaa zidani of the uma laboratory of ensta for the discussions and the support in developing the subject .    00 , _ an efficient policy iteration algorithm for dynamic programming equations _ , pamm 13 n.1 ( 2013 ) 467468 .",
    ", optimal control and viscosity solution of hamilton - jacobi - bellman equations .",
    "birkhauser , boston heidelberg , 1997 . , _ a bellman approach for two - domains optimal control problems in @xmath164 _ , esaim contr",
    "va . , 19 n. 3 ( 2013 ) 710739 . , _ a bellman approach for regional optimal control problems in @xmath370 _ , siam j. cont .",
    ", 52 no . 3 ( 2014 ) 17121744 . ,",
    "stochastic and differential games : theory and numerical methods , birkhuser , boston , 1999 . , _ flow invariance on stratified domains _ , set - valued var .",
    ", 21 ( 2013 ) 377403 .",
    ", dynamic programming , princeton university press , princeton , nj , 1957 . , _ some convergence results for howard s algorithm _ , siam j. numer .",
    ", 47 n. 4 ( 2009 ) 30013026 .",
    ", _ a domain decomposition method for bellman equations _ , cont .",
    ", 180 ( 1994 ) 477483 . ,",
    "_ systems of convex hamilton - jacobi equations with implicit obstacles and the obstacle problem _ , comm .",
    ", 8 ( 2009 ) 12911302 .",
    ", _ a discontinuous galerkin finite element method for directly solving the hamilton - jacobi equations _ , j. comput .",
    "phys . , 223 n. 1 ( 2007 ) 398415 .",
    ", two approximations of solutions of hamilton - jacobi equations , math . comp .",
    ", 43 n. 167 ( 1984 ) 119 .",
    ", partial differential equations : graduate studies in mathematics .",
    "american mathematical society 2 , 1998 .",
    ", _ semi - lagrangian approximation schemes for linear and hamilton - jacobi equations",
    "_ , applied mathematics series , siam , 2013 .",
    ", _ advances in parallel algorithms for the isaacs equation _ , in advances in dynamic games .",
    "birkhuser boston , 2005 .",
    "515 - 544 . , dynamic programming and markov processes , the mit press , cambridge , ma , 1960 . , _ on the convergence of policy iteration in stationary dynamic programming _ , math .",
    "res . , 4 no.1 ( 1979 ) 60 - 69 . , _ convergence analysis of some algorithms for solving nonsmooth equations _ ,",
    "res . , 18 ( 1993 ) 227244 . ,",
    "_ a nonsmooth version of newton s method _ , math .",
    ", 58 ( 1993 ) 353367 . , _ hamilton - jacobi - bellman equations on multi - domains _ , in : _ control and optimization with pde constraints _ , birkhauser basel , 164 ( 2013 ) 93116 .",
    ", _ convergence properties of policy iteration _ , siam j. contr . opt .",
    ", 42 n. 6 ( 2004 ) 2094 - 2115 . ,",
    "_ optimal control problems with state - space constraints _ , siam j. contr . opt .",
    ", 24 ( 1986 ) 552562 . , _",
    "approximation schemes for viscosity solutions of hamilton - jacobi equations _ , j. differ .",
    "equations 59 n. 1 ( 1985 ) 143 . , _",
    "domain decomposition algorithms for solving hamilton jacobi - bellman equations _ , num .",
    "analysis opt .",
    ", 14 ( 1993 ) 145166 .",
    ", _ on the convergence of policy iteration in stationary dynamic programming _ , math .",
    "res . , 4 n. 1 ( 1979 ) 6069 . , _ a new domain decomposition method for an hjb equation _ , j. comput .",
    "appl . math .",
    ", 159 n. 1 ( 2003 ) 195204 ."
  ],
  "abstract_text": [
    "<S> the classic howard s algorithm , a technique of resolution for discrete hamilton - jacobi equations , is of large use in applications for its high efficiency and good performances . </S>",
    "<S> a special beneficial characteristic of the method is the superlinear convergence which , in presence of a finite number of controls , is reached in finite time . </S>",
    "<S> performances of the method can be significantly improved by using parallel computing ; how to build a parallel version of method is not a trivial point , the difficulties come from the strict relation between various values of the solution , even related to distant points of the domain . in this contribution </S>",
    "<S> we propose a parallel version of the howard s algorithm driven by an idea of domain decomposition . </S>",
    "<S> this permits to derive some important properties and to prove the convergence under quite standard assumptions . </S>",
    "<S> the good features of the algorithm will be shown through some tests and examples .    </S>",
    "<S> * keywords : * howard s algorithm ( policy iterations ) , parallel computing , domain decomposition + * 2000 msc : * 49m15 , 65y05 , 65n55 </S>"
  ]
}
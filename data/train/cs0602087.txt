{
  "article_text": [
    "message - passing iterative ( mpi ) decoding and linear programming ( lp ) decoding are very efficient methods to achieve excellent decoding performance of low - density parity - check ( ldpc ) codes on a variety of channels .",
    "while an enormous amount of work has been devoted to the understanding of ldpc codes under mpi decoding ( see e.g.  @xcite for results on thresholds ) , comparably few results on the performance of ldpc codes using the more recent lp decoding are known . in this paper",
    "we provide analytical bounds on thresholds of lp decoding ; these bounds establish necessary conditions for the existence of lp decoding thresholds .",
    "we note that the existence of such thresholds is not clear _ a priori_. in contrast to  @xcite , where we discuss cases where we can guarantee a threshold under lp decoding , here we will show cases where an lp decoding threshold does not exist .",
    "e.g. , the sequence of random codes where each entry in a parity - check matrix is drawn independently from a bernoulli distribution with arbitrary nonzero parameter @xmath0 does not possess an snr - threshold ( in the awgnc case ) or an @xmath1-threshold ( in the bsc case ) .",
    "also , there are ensembles of codes that do not show arbitrary low probability of decoding error for any snr ( awgnc ) or any positive @xmath1 ( bsc ) even if the code rate is allowed to approach zero and the variable degree is allowed to grow exponentially fast in the block length .",
    "because lp decoding and mpi decoding are essentially equivalent in the case of the binary erasure channel ( bec ) , well - known results about mpi decoding for the bec ( see e.g.  @xcite ) can be used for making statements about lp decoding thresholds and therefore we will not deal any further with the bec case here .    the paper is structured as follows . after having concluded this introduction with some remarks about our notation , we will review ml and lp decoding in sec .  [",
    "sec : ml : and : lp : decoding:1 ] .",
    "the main part of the paper will be sec .",
    "[ sec:0:neighborhood : based : bounds:1 ] where we present so - called @xmath2-neighborhood - based bounds on the lp decoding threshold . finally , in sec .",
    "[ sec:2:neighborhood : based : bounds:1 ] we will present so - called @xmath3-neighborhood - based bounds .    let us fix some notation .",
    "we let @xmath4 , @xmath5 , and @xmath6 be the set of real numbers , the set of non - negative real numbers , and the set of positive real numbers , respectively .",
    "moreover , we will use the canonical embedding of the set @xmath7 into @xmath4 .",
    "the convex hull ( see e.g  @xcite ) of a set @xmath8 is denoted by @xmath9 .",
    "if @xmath10 is a subset of @xmath11 then @xmath9 denotes the convex hull of the set @xmath10 after @xmath10 has been canonically embedded in @xmath12 .",
    "similarly , the conic hull ( see e.g  @xcite ) of a set @xmath8 will be denoted by @xmath13 and if @xmath10 is a subset of @xmath11 then @xmath13 denotes the conic hull of the set @xmath10 after @xmath10 has been canonically embedded in @xmath12 .",
    "the @xmath14-th component of a vector @xmath15 will be called @xmath16_i$ ] or @xmath17 and the element in the @xmath18-th row and @xmath14-th column of a matrix @xmath19 will be called @xmath20_{j , i}$ ] .",
    "let @xmath21 be a binary linear code defined by a parity - check matrix @xmath22 of size @xmath23 by @xmath24 . based on @xmath22",
    ", we define the sets @xmath25 , @xmath26 , @xmath27_{j , i } = 1 \\}$ ] for each @xmath28 , and @xmath29_{j , i } = 1 \\}$ ] for each @xmath30 .",
    "moreover , for each @xmath28 we define the codes @xmath31 , where @xmath32 is the @xmath18-th row of @xmath22 .",
    "note that the code @xmath33 is a code of length @xmath24 where all positions not in @xmath34 are unconstrained .",
    "for simplicity of notation , we will never indicate the parity - check matrix as an argument of @xmath35 , @xmath36 , etc . ; it will be clear from the context to what parity - check matrix we are referring to .",
    "finally , by a family of codes we will mean a sequence of ( deterministicly or randomly generated ) codes where the block length goes to infinity .",
    "let us use the above - mentioned code @xmath21 for data transmission over a binary - input discrete memoryless channel with input alphabet @xmath37 , output alphabet @xmath38 , and channel law @xmath39 . because the channel is memoryless , @xmath40 , where @xmath41 , where @xmath42 , where the random variable @xmath43 denotes the channel input at time index @xmath14 , and where the random variable @xmath44 denotes the channel output at time index @xmath14 .",
    "upon observing @xmath45 , the maximum - likelihood ( ml ) decoding rule decides for @xmath46 let the @xmath14-th log - likelihood ratio @xmath47 , @xmath30 , be the random variable @xmath48 with realization @xmath49 . then , noting that @xmath50 ml decoding can also be written as @xmath51 because the cost function is linear , and a linear function attains its minimum at the extremal points of a convex set , this is essentially equivalent to @xmath52 although this is a linear program , it can usually not be solved efficiently because its description complexity is usually exponential in the block length of the code .",
    "however , one might try to solve a relaxation of the above minimization problem .",
    "noting that @xmath53 ( which follows from the fact that @xmath54 ) , feldman , wainwright , and karger  @xcite defined the linear programming decoder ( lp decoder ) to be given by the solution of the linear program @xmath55 because of its importance , we will abbreviate the set @xmath56 by @xmath57 and call it the fundamental polytope  @xcite . the fundamental polytope @xmath58 can be expressed using inequalities as follows  @xcite + @xmath59when analyzing the decoding performance of lp decoding of a binary linear code that is used for data transmission over a binary - input output - symmetric channel , we can without loss of generality assume that the all - zeros codeword was sent .",
    "( see also  @xcite and  @xcite that discuss this so - called `` @xmath21-symmetry '' property . )",
    "we observe that a necessary ( but usually not sufficient ) condition that one decides for the all - zeros codeword in is that by @xmath60 . ]",
    "@xmath61 it can easily be seen that this condition is equivalent to the condition that @xmath62 the set @xmath63 , which is the conic hull of the fundamental polytope , is called the fundamental cone @xmath64 . in terms of inequalities",
    ", @xmath65 can be written as  @xcite @xmath66 the condition in   can then be stated as @xmath67    we will use the following definition for the block decoding error event under lp decoding : it is the complement of the event that the all - zeros vector is the unique solution in  .",
    "we focus our attention on @xmath68-regular ldpc codes , i.e.  codes defined by parity - check matrices that have uniform column weight @xmath69 and uniform row weight @xmath70 . for these type of codes , we present a technique to obtain bounds on the threshold under lp decoding which we will call @xmath2-neighborhood - based bounds ; the choice for this name will become clear later on .    in the following , we will always assume that the all - zeros codeword was sent , i.e.  we will not explicitly write the conditioning on @xmath71 when making statements involving probabilities . @xmath72    under this assumption , the log - likelihood ratios @xmath73 are i.i.d .",
    "random variables and so there is a random variable @xmath74 such that @xmath75 for all @xmath30 .",
    "moreover , let @xmath76 be the support of the pdf of @xmath74 .",
    "[ ex : gamma : for : different : channels:1 ]    let us discuss the random variable @xmath74 for three channels : the binary - input additive white gaussian channel ( awgnc ) , the binary symmetric channel ( bsc ) , and the binary erasure channel ( bec ) .    * awgnc ( with modulation map @xmath77 , @xmath78 and where the added noise has variance @xmath79 ) : @xmath80 and @xmath74 is a continuous random variable that is normally distributed with mean @xmath81 and variance @xmath82 . * bsc ( with cross - over probability @xmath1 ) : @xmath83 and @xmath74 is a discrete random variable that takes on the value @xmath84 with probability @xmath85 and the value @xmath86 with probability @xmath1 , where @xmath87 . * bec ( with erasure probability @xmath88 ) : @xmath89 and @xmath74 is a discrete random variable that takes on the value @xmath90 with probability @xmath91 and the value @xmath2 with probability @xmath88 .",
    "@xmath72    let @xmath92 be random variables with realizations @xmath93 and @xmath94 , respectively .",
    "note that @xmath95 and @xmath96 w.p .",
    "@xmath97 . @xmath72",
    "[ lemma : gammapos : gammaneg : lln:1 ]    with probability one we have @xmath98             \\cdot             { \\operatorname{pr}}(\\gamma { \\geq } 0 )          & = +             \\int_{0^{-}}^{+\\infty }               \\!\\!\\!\\!\\!\\ !",
    "\\gamma \\ ,               p_{\\gamma}(\\gamma )             { \\operatorname{d}\\!\\gamma } , \\\\      &      \\lim_{n \\to \\infty }        \\frac{{\\gamma_{\\mathrm{neg}}}}{n }          & = -             { \\operatorname{e}}[\\gamma \\ , | \\ , \\gamma { < } 0 ]             \\cdot             { \\operatorname{pr}}(\\gamma { < } 0 )          & = -             \\int_{-\\infty}^{0^{- } }               \\!\\!\\ !",
    "\\gamma \\ ,               p_{\\gamma}(\\gamma )             { \\operatorname{d}\\!\\gamma}.    \\end{aligned}\\ ] ]    follows easily from the weak law of large numbers .",
    "[ lemma : gammapos : gammaneg : ratio : bound:1 ]    consider a code with a @xmath99-regular parity - check matrix .",
    "let @xmath100 .",
    "a necessary condition that the lp decoder decides in favor of the all - zeros codeword is @xmath101    we saw in   that a necessary condition for lp decoding to decide in favor of the all - zeros codeword is that @xmath102 for all @xmath103 .",
    "let us construct a vector @xmath104 as follows : @xmath105 it can easily be seen that @xmath106 .",
    "can be seen as a generalization of the so - called canonical completion  @xcite , however instead of assigning values according to the graph distance with respect to a single node , we assign values according to the graph distance with respect to the set of nodes where @xmath107 is negative .",
    "moreover , we assign only the values @xmath97 and @xmath108 . ]",
    "we obtain the necessary condition @xmath109 which is equivalent to the necessary condition in the lemma statement .",
    "[ th : gammapos : gammaneg : ratio : bound : lln:1 ]    consider a family of codes that have @xmath99-regular parity - check matrices . in the limit @xmath110 , a necessary condition such that the lp decoder decides in favor of the all - zeros codeword with probability one is @xmath111 }           { { \\operatorname{e}}[\\gamma \\ , | \\ , \\gamma { < } 0 ] }      \\cdot      \\frac{{\\operatorname{pr}}(\\gamma { \\geq } 0 ) }           { { \\operatorname{pr}}(\\gamma { < } 0 ) }        & \\geq           { w_{\\mathrm{row}}}- 1 ,    \\end{aligned}\\ ] ] or , equivalently , @xmath112    this follows upon combining lemmas  [ lemma : gammapos : gammaneg : lln:1 ] and  [ lemma : gammapos : gammaneg : ratio : bound:1 ] .",
    "[ cor : bsc : threshold : ub:1 ]    consider the setup of th .",
    "[ th : gammapos : gammaneg : ratio : bound : lln:1 ] . if the memoryless channel is a bsc with cross - over probability @xmath1 then the necessary condition in th .",
    "[ th : gammapos : gammaneg : ratio : bound : lln:1 ] reads @xmath113    for a bsc with cross - over probability @xmath1 we obtain @xmath114 \\cdot { \\operatorname{pr}}(\\gamma { \\geq } 0 )        & = + g \\cdot ( 1-\\varepsilon ) , \\\\",
    "-{\\operatorname{e}}[\\gamma \\ , | \\ , { \\gamma } { < } 0 ] \\cdot { \\operatorname{pr}}(\\gamma { < } 0 )         & = - ( -g ) \\cdot \\varepsilon = + g \\cdot \\varepsilon    \\end{aligned}\\ ] ] where @xmath84 is defined as in ex .",
    "[ ex : gamma : for : different : channels:1 ] .",
    "therefore , the condition in th .",
    "[ th : gammapos : gammaneg : ratio : bound : lln:1 ] is that @xmath115 , i.e.  @xmath116 .",
    "[ fig : threshold : lp : reg : codes:1:1 ] tries to capture some of the implications of th .",
    "[ th : gammapos : gammaneg : ratio : bound : lln:1 ] / cor .",
    "[ cor : bsc : threshold : ub:1 ] .",
    "the circles in the plot that are to the left of the capacity curve yield non - trivial upper bounds on the error correction capability of lp decoding .",
    "( note that the designed rate of a @xmath68-regular ldpc code is @xmath117 and that the actual rate is lower bounded by this quantity . )",
    "@xmath72    [ ex : threshold : all : equal : weight : rows:1 ]    it is a surprising fact that the bounds in th .",
    "[ th : gammapos : gammaneg : ratio : bound : lln:1 ] and cor .",
    "[ cor : bsc : threshold : ub:1 ] do not depend on the variable degree @xmath69 at all .",
    "in particular , this implies that decoding would fail even if we choose extremely large variable degrees .",
    "for example we might consider a sequence of codes defined by parity - check matrices that contain _ all _ rows of a given weight @xmath70 .",
    "clearly , a specific code @xmath118 of this sequence is a @xmath119-regular code which contains either one ( @xmath120 ) or two codewords ( @xmath121 ) depending on @xmath122 being odd or even .",
    "thus , while the rate of this code sequence approaches zero , lp decoding will not succeed for @xmath123 .",
    "@xmath72    [ ex : threshold : unbounded : row : weight:1 ]    th .",
    "[ th : gammapos : gammaneg : ratio : bound : lln:1 ] and cor .",
    "[ cor : bsc : threshold : ub:1 ] can easily be extended to families of codes where the row weight grows as a function of @xmath24 ; let us call theses extensions th .",
    "[ th : gammapos : gammaneg : ratio : bound : lln:1] and cor .",
    "[ cor : bsc : threshold : ub:1]. it is clear from cor .  [",
    "cor : bsc : threshold : ub:1] that there can not be an lp decoding threshold for the bsc if the row weight grows unboundedly .",
    "moreover , coming back to the code family in ex .",
    "[ ex : threshold : all : equal : weight : rows:1 ] , if @xmath70 is allowed to grow with @xmath24 , lp decoding will fail as @xmath124 despite the variable degree being exponentially larger than the check degree .",
    "similarly , the family of random codes where entries in a parity - check matrix are drawn independently from a bernoulli(@xmath125 ) distribution will not only have poor threshold performance under lp decoding but will fail with high probability as the code length approaches infinity for _ any _ symmetric channel for which the expression @xmath111 }           { { \\operatorname{e}}[\\gamma \\ , | \\ , \\gamma { < } 0 ] }      \\cdot      \\frac{{\\operatorname{pr}}(\\gamma { \\geq } 0 ) }           { { \\operatorname{pr}}(\\gamma { < } 0 ) }    \\end{aligned}\\ ] ] is ( upper ) bounded .",
    "the result follows from the observation that the weight of the rows in @xmath22 is exponentially concentrated around @xmath126 .",
    "indeed , given a vector of log - likelihood ratios , the vector with components @xmath127 in positions where @xmath107 is non - negative and @xmath97 in the remaining positions is inside @xmath128 with high probability for @xmath129 and @xmath110 .",
    "@xmath72    while the above considerations give some insight in the asymptotic behavior of of decoding error for lp decoding , the characterization and spirit of th .",
    "[ th : gammapos : gammaneg : ratio : bound : lln:1 ] is essentially combinatorial .",
    "we saw in ex .",
    "[ ex : threshold : unbounded : row : weight:1 ] that for any family of codes where the row weight grows as a function of @xmath24 , cor .",
    "[ cor : bsc : threshold : ub:1] implies that there can not be an lp decoding threshold for the bsc .",
    "a special case , though , arises when the rate of the code family under consideration goes to @xmath97 when @xmath110 because then also the best code family under the best possible decoding algorithm can only correct a vanishing fraction of bit flips as @xmath124 .",
    "a family were the rate goes to @xmath97 as @xmath110 is the family of type - i @xmath130-based codes , cf .",
    "@xcite ; in the context of lp decoding , these codes were analyzed in  @xcite .",
    "a code from this family is indexed by @xmath131 ( where @xmath132 for some positive integer @xmath133 ) , has length @xmath134 , rate @xmath135 , and @xmath136 .",
    "[ fig : threshold : lp : pg : codes:1:1 ] shows the following : for each @xmath131 we plot the point @xmath137 , where @xmath138 is the rate of the @xmath130-based code and where @xmath139 is the lp decoding threshold upper bound from cor .",
    "[ cor : bsc : threshold : ub:1 ] for a @xmath140-regular family of codes .",
    "care must be taken when giving an interpretation to this figure since the @xmath130-based codes are finite - length codes for finite @xmath131 .",
    "@xmath72    we leave it as an exercise for the reader to generalize the results in this section to irregular ldpc codes .",
    "because the assignment of a value to @xmath141 in   was only based on the value of @xmath107 , we call the resulting bound in cor .  [ cor : bsc : threshold : ub:1 ] a @xmath2-neighborhood - based bound .",
    "( of course , the way we assigned a value to every @xmath141 in   can also be seen as a very simplistic , and usually sub - optimal way , of solving the linear program in  . )",
    "it is natural to try to formulate more sophisticated assignments of a value to @xmath141 .",
    "the next simplest approach is to formulate a rule that does not depend on @xmath107 only , but also on @xmath142 where @xmath143 ranges over all variable nodes at tanner graph distance @xmath3 from variable node @xmath14 .",
    "the resulting bounds on the threshold will therefore be called @xmath3-neighborhood - based bounds .    for @xmath30 let @xmath144 be the subset of @xmath35 that includes all variable nodes @xmath143 with tanner graph distance at most @xmath3 from @xmath14 . in the following ,",
    "we assume that the tanner graph under consideration has girth at least six . in the case of a @xmath99-regular ldpc codes",
    ", this implies that the set @xmath144 has size @xmath145 .",
    "[ fig : tg : two : neighborhood:1 ] ( left ) shows part of a @xmath146-regular code , i.e.  node @xmath14 , all check nodes at tanner graph distance @xmath97 from @xmath14 , and all variable nodes at tanner graph distance @xmath3 from @xmath14 . )    [ def:2:neighborhood : decoding : rule:1 ]    let @xmath147 be the vector that contains all the random variables @xmath148 and let @xmath149 be its realization .",
    "our new rule ( that replaces  ) for defining a vector @xmath104 is now @xmath150 , where @xmath151 for all @xmath152 is chosen such that for all possible @xmath100 we obtain a vector @xmath153 that lies in the fundamental cone .",
    "assume that we have such values @xmath154 as defined in def .",
    "[ def:2:neighborhood : decoding : rule:1 ] . with probability one with",
    "have @xmath155 where @xmath156    follows from the fact that @xmath157 depends only on finitely many @xmath142 from @xmath158 and from the use of the weak law of large numbers .",
    "consider a bsc with cross - over probability @xmath1 .",
    "an upper bound on the lp decoding threshold for the bsc is then given by the infimum of all @xmath1 were we are able to find an assignment in def .",
    "[ def:2:neighborhood : decoding : rule:1 ] such that @xmath159 is negative with probability one .",
    "finding such assignments can e.g.  be done by solving a linear program that roughly looks as follows @xmath160 where @xmath161 is an arbitrary assignment of values to @xmath149 , e.g.  @xmath162 for all @xmath163 , where @xmath84 is defined as in ex .",
    "[ ex : gamma : for : different : channels:1 ] .",
    "the tanner graph in fig .",
    "[ fig : tg : two : neighborhood:1 ] ( left ) has many symmetries that can be used to simplify the above linear program .",
    "e.g.  if there is a graph isomorphism that maps an assignments @xmath164 to an assignment @xmath165 , then without loss of generality we can assume that @xmath166 . in this way , the dimensionality of the above linear program can be reduced significantly . without going into the details ,",
    "the requirement that the resulting assignment always results in a vector in the fundamental cone can be simplified by introducing some auxiliary variables according to overlapping @xmath3-neighborhoods as is sketched in fig .",
    "[ fig : tg : two : neighborhood:1 ] ( right ) .    fig .",
    "[ fig : threshold : lp : reg : codes : neighborhood:2:1:1 ] shows the improved upper bounds for @xmath68-regular code families .",
    "@xmath72    whereas the above approach results in relatively small linear programs for small @xmath69 and @xmath70 , similar @xmath167- , @xmath168- , @xmath169- , etc . , neighborhood - based approaches seem to be computationally much more demanding",
    ". we leave it as an open question to see if there are ways to handle also these cases in an efficient numerical way .",
    "p.o.v.s research was supported by nsf grant ccf-0514801 .",
    "r.k.s research was supported by nsf grant ccf-0514869 .",
    "m.  lentmaier , d.  v. truhachev , d.  j. costello , jr . , and k.  zigangirov , `` on the block error probability of iteratively decoded ldpc codes , '' in _",
    "5th itg conference on source and channel coding _ , ( erlangen , germany ) , jan .  14 - 16 2004 .",
    "r.  koetter and p.  o. vontobel , `` on the block error probability of lp decoding of ldpc codes , '' in _ proc .",
    "inaugural workshop of the center for information theory and its applications _ , ( uc san diego , la jolla , ca , usa ) , feb",
    ".  6 - 10 2006 .",
    "j.  feldman , _ decoding error - correcting codes via linear programming_. phd thesis , massachusetts institute of technology , cambridge , ma , 2003 .",
    "available online under ` http://www.columbia.edu/ ` ` ~jf2189/pubs.html ` .",
    "r.  koetter and p.  o. vontobel , `` graph covers and iterative decoding of finite - length codes , '' in _ proc .",
    "3rd intern .",
    "symp .  on turbo codes and related topics",
    "_ , ( brest , france ) , pp .  7582 , sept .",
    "15 2003 .",
    "o. vontobel and r.  koetter , `` graph - cover decoding and finite - length analysis of message - passing iterative decoding of ldpc codes , '' _ submitted to ieee trans .  inform .",
    "theory , available online under ` http://www.arxiv.org/abs/cs.it/0512078`_ , dec .",
    "y.  kou , s.  lin , and m.  p.  c. fossorier , `` low - density parity - check codes based on finite geometries : a rediscovery and new results , '' _ ieee trans .  on inform .",
    "theory _ , vol .",
    "it47 , pp .  27112736 , nov .",
    "o. vontobel , r.  smarandache , n.  kiyavash , j.  teutsch , and d.  vukobratovic , `` on the minimal pseudo - codewords of codes from finite geometries , '' in _ proc .",
    "ieee intern .",
    "symp .  on inform .",
    "theory _ , ( adelaide , australia ) , pp .  980984 , sep .",
    "available online under ` http://www.arxiv.org/abs/cs.it/0508019 ` .",
    "o. vontobel and r.  smarandache , `` on minimal pseudo - codewords of tanner graphs from projective planes , '' in _ proc .",
    "43rd allerton conf .  on communications , control , and computing _ , ( allerton house , monticello , illinois , usa ) , sep .",
    "2830 2005 .",
    "available online under ` http://www.arxiv.org/abs/cs.it/0510043 ` ."
  ],
  "abstract_text": [
    "<S> whereas many results are known about thresholds for ensembles of low - density parity - check codes under message - passing iterative decoding , this is not the case for linear programming decoding . towards closing this knowledge gap , </S>",
    "<S> this paper presents some bounds on the thresholds of low - density parity - check code ensembles under linear programming decoding . </S>"
  ]
}
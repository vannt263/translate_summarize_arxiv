{
  "article_text": [
    "the links between statistical physics models and a variety of inference and optimization problems have been significantly strengthened over the last decade  @xcite .",
    "two aspects of these links have been exploited .",
    "macroscopically , using the statistical physics framework , one describes typical properties of the problem and provides valuable insight into its generic characteristics .",
    "microscopically , established techniques of statistical physics such as the cavity method have been used for devising efficient inference algorithms , some of which have been independently discovered and used in other research communities  @xcite .",
    "most studies so far , both within and outside the statistical physics community , have focused on cases of discrete variables . among the recently successful examples using methods of statistics - based mechanics",
    ", one can mention hard computational problems  @xcite and error - correcting codes  @xcite .",
    "statistical mechanical approaches to learning of discrete variables have also been considered on tree structures  @xcite .    on the other hand , networks of continuous variables",
    "were much less explored .",
    "one of the main reasons for this limited activity is the difficulty in applying message passing approximation algorithms  @xcite in this case , as the discrete messages passed between variables become _ functions _ of real variables . applied message passing for systems of real variables typically relies on modelling the functions using a reduced number of parameters  @xcite .    in the statistical physics community",
    "there have been recent attempts to simplify the messages for continuous variables .",
    "for example , a step forward was made in ref .",
    "@xcite to parametrize the messages using eigenfunction decomposition for special cases .",
    "furthermore , the continuous variables treated by these methods are _ localized _ on nodes , whereas many interesting problems , such as the resource allocation problem presented here ( and partially in  @xcite ) involves real variables defined on links _ between _ nodes .    in this paper",
    "we study a system with real variables that can be mapped onto a sparse graph and suggest an efficient message - passing approximation method for inference and optimization .",
    "we first formulate the problem at a general temperature ; the message - passing algorithm we present here as well as the related analysis are primarily _ general _ inference algorithms . in this paper , however , we are particularly interested in the optimal , zero temperature , solution that reduces the task to an optimization problem",
    ".    global optimization techniques , such as linear or quadratic programming  @xcite can successfully solve many of these problems .",
    "however , message - passing approaches have the potential to solve global optimization problems via _ local _ updates , thereby reducing the growth in computational complexity from cubic to linear with the system size .",
    "an even more important practical advantage is its distributive nature that is particularly suitable for distributive computation in large or evolving networks and does not require a global optimizer .",
    "we focus on a prototype for optimization , and use the example of resource allocation as a vehicle to demonstrate the potential of our method , both for gaining insights into the main properties of the system and as an efficient optimization algorithm .",
    "our method is efficient since the messages consist of only the first and second derivatives of the vertex free energies derived from our analysis .",
    "the key to the successful simplification , not needed for the simpler case of discrete variables , is that the messages passed to a target node are accompanied by information - provision messages from the target node , to first determine the working point at which the derivatives should be calculated .",
    "the problem of resource allocation is a well known network problem in the areas of computer science and operations management  @xcite .",
    "the problem itself is quite general and is applicable to typical situations where a large number of nodes are required to balance loads / resources , such as reducing internet traffic congestion and streamlining network flow of commodities  @xcite . in computer science ,",
    "many practical algorithmic solutions have been proposed to distribute computational load between computers connected in a network .",
    "they usually are heuristic and focus on practical aspects ( e.g. , communication protocols ) .",
    "the problem we are addressing here is more generic and , in the context of computer networks , is represented by nodes of some computational power that should carry out tasks ; sub - tasks are then moved around such that all demands will be satisfied while the migration of ( sub-)tasks is minimized .    in section  [ sec : model ] we will introduce the general model , followed by a replica - based analysis in section  [ sec : replica ] and subsequently by a bethe approximation - based analysis in section  [ sec : bethe ] .",
    "a message passing algorithm for the problem of resource allocation will be presented in section  [ sec : algorithm ] followed by the derivation of scaling laws in the limit of high connectivity in section  [ sec : asymptotic ] .",
    "numerical results for sections  [ sec : replica]-[sec : asymptotic ] will be presented in section  [ sec : numerical ] .",
    "we will then extend the model to the case of general cost functions in section  [ sec : generalcost ] , highlighting strengths and weaknesses of our approach .",
    "we will conclude the presentation with a summary and point to future research directions .",
    "the problem we are addressing here is a generic version of resource allocation and serves as an example of a sparsely connected system of real variables that should be optimized with respect to some general cost .",
    "it is represented by nodes of some computational power that should carry out tasks .",
    "both computational powers and tasks will be chosen at random from some arbitrary distribution .",
    "the nodes are located on a randomly chosen sparse network of some connectivity .",
    "the goal is to migrate tasks on the network such that demands will be satisfied while the migration of ( sub-)tasks is minimized .",
    "we focus here on the satisfiable case where the total computing power is greater than the demand , and where the number of nodes involved is very large .",
    "the sparse network considered has @xmath0 nodes , labelled @xmath1 .",
    "each node @xmath2 is randomly connected to @xmath3 other nodes .",
    "the connectivity matrix is given by @xmath4 for connected and unconnected node pairs respectively .",
    "a link variable @xmath5 is defined on each connected link from @xmath6 to @xmath2 .",
    "we focus on the case of intensive connectivity @xmath7 ; and restrict the problem to the fixed connectivity case although both the analysis and the algorithm devised on its basis can handle a general connectivity profile .",
    "we consider a general energy function ( cost ) @xmath8 where the summation @xmath9 is made over all node pairs , and @xmath10 is a quenched variable defined on node @xmath2 . in the context of probabilistic inference , @xmath5 may represent the coupling between observables in nodes @xmath6 and @xmath2 , @xmath11 may correspond to the logarithm of the prior distribution of @xmath5 , and @xmath12 the logarithm of the likelihood of the observables @xmath10 . since the cost is independent of the direction of the currents in many applications , we focus on the case that @xmath13 is a general even function of @xmath14 . in the context of resource allocation , @xmath15 may represent the current from node @xmath6 to @xmath2 , @xmath11 may correspond to the transportation cost , and @xmath12 the performance cost of the allocation task on node @xmath2 , dependent on the node capacity @xmath10 ; the capacity of a node is defined as its computational capability minus its computational demand , and is randomly drawn from a distribution @xmath16 .",
    "to make the analysis more concrete and strengthen the link to the resource allocation problem , we keep the term @xmath11 general and , aiming to satisfy the capacity constraints , set @xmath17 $ ] , where @xmath18 and @xmath19 is the step function .",
    "this reduces the problem to the load balancing task of minimizing the energy function ( cost ) @xmath20 , subject to the constraints on the resources of nodes @xmath2 , @xmath21    an alternative formulation is to consider the dual of the original optimization problem . introducing lagrange multipliers , the function to be minimized becomes @xmath22 optimizing @xmath23 with respect to @xmath5 , one obtains @xmath24^{-1}(\\mu_j-\\mu_i ) , \\label{yij}\\ ] ] where @xmath25 is referred to as the _ chemical potential _ of node @xmath2 , and @xmath26 is the derivative of @xmath27 with respect to its argument .",
    "this can be interpreted as the current being driven by the potential difference .",
    "since the probability of finding loops of finite lengths is vanishing in large sparse networks , the structure of a sparse network is locally a tree .",
    "thus , given a configuration of currents @xmath28 , one can set the _ current potential _",
    "@xmath29 of a node to an arbitrary value , and assign @xmath30 of its neighbors according to @xmath31 . repeating this assignment process to next nearest neighbors and so on , the current potentials of all nodes in the tree can be determined .",
    "hence , the current potentials can be considered as valid independent variables as the current variables used originally .",
    "this implies that we can consider the optimization problem in the space of the current potentials .",
    "since the energy function is invariant under the addition of an arbitrary global constant to the current potentials of all nodes , we introduce an extra regularization term @xmath32 to break the translational symmetry , where @xmath33 .",
    "( note that the current potentials @xmath34 are different from the chemical potentials @xmath35 , which are the lagrange multipliers of the dual formulation in eq .",
    "( [ lagr ] ) . only for the quadratic cost @xmath36",
    "can the current be expressed in terms of the difference in chemical potentials . even in this case",
    ", the two potentials may differ by a non - vanishing constant since the resource constraints in eq .",
    "( [ constr ] ) imply that the maximum of the lagrange multipliers is 0 , whereas the current potentials minimize @xmath37 and are unlikely to have a maximum value of 0 . )",
    "the corresponding partition function is @xmath38          \\nonumber\\\\          & & \\times\\exp \\left [ -\\beta          \\sum\\limits_{(ij ) } \\ca_{ij } \\phi(\\nu _ j -\\nu",
    "_ i )          -\\frac{\\beta\\epsilon}{2}\\sum_i\\nu_i^2 \\right ] .\\end{aligned}\\ ] ]    the replicated partition function  @xcite , at a temperature @xmath39 , averaged over all network configurations of connectivity @xmath3 and capacity distributions @xmath16 , is given by @xmath40\\biggr\\ }          \\nonumber\\\\          & & \\times\\exp\\left(-\\beta\\sum_{(ij)\\alpha }          \\ca_{ij}\\phi(\\nu_j^\\alpha-\\nu_i^\\alpha )          -\\frac{\\beta\\epsilon}{2}\\sum_{i\\alpha}(\\nu_i^\\alpha)^2\\right ) .",
    "\\label{eq : replicatedpart}\\end{aligned}\\ ] ] here @xmath41 is the total number of graphs with connectivity @xmath3 .",
    "this can be easily shown to be  @xcite @xmath42 } \\right\\}$ ] .",
    "the interaction coupling current potentials of different nodes makes it difficult to decouple them in order to define macroscopic order parameters .",
    "nevertheless , additional expansions detailed in appendix a also show that it is possible to dientangle neighboring node indices .",
    "( this justifies the formulation of the optimization in the space of the current potentials @xmath43 rather than that of the currents @xmath28 . )",
    "this leads to the following definition of the order parameters @xmath44 and its conjugate @xmath45 . following the analysis of  @xcite and averaging over the connectivity tensor @xmath46 one finds @xmath47          x^c\\biggr\\ } , \\label{zn}\\end{aligned}\\ ] ] where @xmath48 the somewhat unusual indices of the order parameters @xmath49 and @xmath45 , the vectors @xmath50 and @xmath51 , represent @xmath52-component vectors @xmath53 and @xmath54 respectively",
    "this is a result of the specific interaction considered which entangles nodes of different indices .",
    "the order parameters @xmath49 and @xmath45 are given by the extremum condition of eq .",
    "( [ zn ] ) , i.e. , via a set of saddle point equations with respect to the order parameters . to facilitate the solution , we introduce the generating function of @xmath55 and its inversion , @xmath56 eliminating @xmath45 , and substituting the saddle point equation of @xmath57 into @xmath55 in eq .",
    "( [ genf ] ) , one finds the recursion relation @xmath58          \\sum\\limits_{\\mathbf{s}_k } \\prod\\limits_{k=1}^{c-1 }          \\nonumber \\\\          & & \\times p_{\\mathbf{s}_k}(\\mathbf{\\nu } )          \\prod\\limits_{k\\alpha } \\frac{1}{s_k^\\alpha ! }          \\left.\\left(-i\\hat\\lambda_\\alpha -\\frac{d}{dy}\\right)^{s_k^\\alpha }          e^{-\\beta \\phi(y ) } \\right|_{y=\\nu_\\alpha }          \\nonumber\\\\          & & \\times\\prod\\limits_\\alpha(\\nu _ \\alpha)^{s_\\alpha } , \\label{eq : p_sdef}\\end{aligned}\\ ] ] where @xmath59 is a constant given in eq .",
    "( [ eq : dpdef ] ) .",
    "note that @xmath55 is expressed in terms of @xmath60 functions @xmath61 ( @xmath62 ) , integrated over @xmath63 and summed over @xmath64 .",
    "this structure is typical of the bethe lattice description of networks of connectivity @xmath3 , explained in section  [ sec : bethe ] , where nodes are divided into generations .",
    "each node provides input to an ancestor node and receives input from @xmath60 descendent nodes .",
    "this forms a tree structure , in which the state of a node depends on those of its subsequent generations .    in order to derive a set of recursive equations",
    "one should make an assumption about the inherent symmetries of the problem .",
    "here we employ the replica symmetric ansatz . in previous treatment of related problems , the order parameters are represented as an integral over moments of the corresponding probability distribution , incorporating the permutation invariance of the replica indices  @xcite .",
    "generalizing to the case of @xmath65 , which is an order parameter depending on the continuous variables @xmath66 , the ansatz takes the form @xmath67 where @xmath68 represents the tree terminated at the vertex node with current potential @xmath34 , providing input to the ancestor with chemical potential @xmath69 , and @xmath70 represents the average of the capacities of each node of the tree over the distribution @xmath71 .",
    "note that the replicas are coupled through their common dependence on the quenched variables @xmath72 .",
    "this is in contrast to conventional derivations , such as the sk model  @xcite , in which the dependence on the disorder is integrated out , leading to more explicit inter - replica dependencies .",
    "the resultant recursion relation for the function @xmath73 is independent of the replica indices , and hence remains valid in the @xmath74 limit .",
    "it is given by @xmath75          \\nonumber\\\\          & & \\times\\theta \\left ( { \\sum\\limits_{k=1}^{c-1 } { \\nu _ k } -c\\nu + z          + \\lambda_{v({\\mathbf t } ) } } \\right )          \\nonumber \\\\          & & \\times\\exp \\left [ { -\\frac{\\beta \\varepsilon } { 2}\\nu ^2-\\beta          \\sum_{k=1}^{c-1 } { \\phi \\left ( { \\nu -\\nu _ k } \\right ) } } \\right ] , \\label{eq : r_t}\\end{aligned}\\ ] ] where @xmath76 is a constant given in eq .",
    "( [ eq : r_td ] ) , and @xmath77 represents the tree terminated at the @xmath78th descendent of the vertex .",
    "@xmath79 is the capacity of the vertex of the tree @xmath80 .",
    "( [ eq : r_t ] ) expresses @xmath81 in terms of @xmath60 functions @xmath82 ( @xmath83 ) , integrated over @xmath84 .",
    "again , this is characteristic of the bethe lattice structure .",
    "furthermore , except for the factor @xmath85 , a self - consistent solution of @xmath73 is that it is a function of @xmath86 , which is interpreted as the current drawn from a node with current potential @xmath34 by its ancestor with current potential @xmath69 .",
    "hence we will express the function @xmath73 as the product of a _ vertex partition function _ @xmath87 and a normalization factor @xmath88 , which contains any residual dependence on @xmath34 .",
    "since @xmath89 is taken to approach zero in the analysis , it is expected that @xmath88 should approach a constant independent of @xmath34 .",
    "hence we let @xmath90 .",
    "as explained in appendix  [ sec : app_replica ] , in the limit @xmath18 , the dependence on @xmath34 and @xmath14 decouples ; this enables one to derive a recursion relation for the _ vertex free energy _",
    "@xcite @xmath91 when a current @xmath14 is drawn from the vertex of a tree @xmath68 @xcite , @xmath92\\biggr\\ }          \\nonumber\\\\          & & + \\biggl\\langle t\\ln\\biggl\\ { \\prod_{k\\!=\\!1}^c\\left(\\int          dy_k\\right ) \\theta\\left(\\sum_{k\\!=\\!1}^c y_k\\!+\\!\\lambda_v\\right )          \\nonumber\\\\          & & \\times\\exp\\left[-\\beta\\sum_{k\\!=\\!1}^c \\left(f_v(y_k|{\\mathbf t}_k )          \\!+\\!\\phi(y_k)\\right)\\right]\\biggr\\ }          \\biggr\\rangle_\\lambda .",
    "\\label{recurt}\\end{aligned}\\ ] ] in the zero temperature limit , this recursion relation reduces to @xmath93          \\nonumber\\\\          & & -\\left\\langle\\min_{\\{y_k|\\sum_{k\\!=\\!1}^c y_k+\\lambda_v\\ge 0\\ } }          \\left[\\sum_{k\\!=\\!1}^c          \\left(f_v(y_k|{\\mathbf t}_k)+\\phi(y_k)\\right)\\right ]          \\right\\rangle_\\lambda \\ .",
    "\\nonumber\\\\ \\label{recur}\\end{aligned}\\ ] ] the solution of eqs .",
    "( [ recurt ] ) or ( [ recur ] ) can be obtained numerically in a recursive manner , since the vertex free energy of a node depends on its own capacity and the disordered configuration of its descendents .    using the replica approach , and following the derivation of appendix  [ sec : app_replica ] ,",
    "the averaged free energy of the network is given by @xmath94\\biggr\\ }          \\biggr\\rangle_\\lambda .",
    "\\label{free}\\end{aligned}\\ ] ]    the current distribution and the average energy per link can be derived , using the calculated vertex free energy , by integrating the current @xmath95 in a link from one vertex to another , fed by the trees @xmath96 and @xmath97 , respectively ; the obtained expressions are @xmath98 and @xmath99 where @xmath100          ( \\bullet ) }          { \\int dy'\\exp\\left[-\\beta f_l(y'|{\\mathbf t}_1,{\\mathbf t}_2)\\right ] }          \\right\\rangle_\\lambda,\\ ] ] with @xmath101",
    "the results in section [ sec : replica ] can be interpreted using the bethe approach . since the connectivity @xmath3 is low , the probability of finding a loop of finite length on the graph is low , and the bethe approximation well describes the local environment of a node . in this approximation",
    ", a node is connected to @xmath3 branches in a tree structure , and the correlations among the branches of the tree are neglected . in each branch , nodes are arranged in generations .",
    "a node is connected to an ancestor node of the previous generation , and another @xmath102 descendent nodes of the next generation .",
    "consider a vertex @xmath103 of capacity @xmath104 , and a current @xmath14 is drawn from the vertex . at a temperature @xmath39 , one can write an expression for the free energy @xmath105 as a function of the free energies @xmath106 of its descendants , that branch out from this vertex @xmath107\\biggr\\},\\end{aligned}\\ ] ] where @xmath77 represents the tree terminated at the @xmath108 descendent of the vertex .",
    "the free energy can be considered as the sum of two parts @xmath109 where @xmath110 is the number of nodes in the tree @xmath68 , @xmath111 is the average free energy per node , and @xmath112 is the vertex free energy .",
    "this allows one to decompose the free energy into @xmath113 \\biggr\\}. \\label{eq : freebethe}\\end{aligned}\\ ] ] to determine the @xmath114 , we consider the effects of adding a vertex v which is fed by @xmath3 individual trees * * t**@xmath115 ,  , * * t**@xmath116 .",
    "the total free energy is then @xmath117 \\biggr\\ }          \\biggr\\rangle _ \\lambda .\\end{aligned}\\ ] ]    rearranging the terms one obtains a recursion relation identical to eq .",
    "( [ recurt ] ) .",
    "the average free energy per node is given by the second term of eq .",
    "( [ recurt ] ) , and has the same expression for the free energy as in the replica approach ( [ free ] )",
    ". the recursion relation can also be recast into a form reminiscent of those commonly appearing in bethe lattices of ising spin variables , such as in refs .",
    "this is achieved by considering the probability distribution of vertex free energies @xmath118 $ ] .",
    "using eq .",
    "( [ recur ] ) , @xmath119=\\int d\\lambda_v\\rho(\\lambda_v)\\sum_{k=1}^{c-1 }      \\int\\cd f_{vk}p[f_{vk } ]      \\nonumber\\\\      & & \\times\\prod_y\\delta\\biggl(-t\\ln\\biggl\\ {          \\prod_{k=1}^{c-1}\\left(\\int dy_k\\right )          \\theta\\!\\left(\\sum_{k=1}^{c-1 } y_k\\!-y+\\!\\lambda_v\\right )          \\nonumber\\\\          & & \\times\\exp\\left[-\\beta\\sum_{k=1}^{c-1 }          \\left(f_{vk}(y_k)+\\phi(y_k)\\right)\\right]\\biggr\\ }      \\nonumber\\\\      & & -\\langle f\\rangle_\\lambda - f_v(y)\\biggr).\\end{aligned}\\ ] ] comparing with bethe lattices of ising variables , the vertex free energy @xmath120 plays the role of a cavity field .",
    "the difference here is that the distribution to be iterated is no longer a function of a single cavity variable .",
    "rather , the distribution is defined in the space of cavity free energy _",
    ", since we are dealing with continuous variables .",
    "this parallelism enables us to solve the recursion relation by _",
    "population dynamics_. at each step of this approach , a new ancestor node is generated at random , and its vertex free energy is updated .",
    "it is interesting to point out that the iterative equations  ( [ recurt ] ) can be directly linked to those obtained from a principled bayesian approximation , where the logarithms of the messages passed between nodes are proportional to the vertex free energies .",
    "this is shown explicitly in appendix  [ sec : app_bayesnets ] .",
    "the local nature of the recursion relation  ( [ recurt ] ) points to the possibility that the network optimization can be solved by message passing approaches , however , in contrast to other message passing algorithms which pass conditional probability estimates of _ discrete values _ to neighboring nodes , the messages in the present context are more complex , since they are _ functions _ @xmath112 of the current @xmath14 .",
    "the derivation of the algorithm can be viewed as a minimization of the cost function with respect to current changes under the capacity constraint at the neighboring nodes .",
    "when the cost is quadratic , the impact of current changes can be described through the first and second derivatives with respect to the vertex free energy . as will be explained at the end of this section , this two - component message is sufficient to provide the exact solution , as long as the algorithm converges .",
    "we follow this route and simplify the message to two parameters , namely , the first and second derivatives of the vertex free energies .",
    "let @xmath121 be the message passed from node @xmath6 to @xmath2 .",
    "based on the messages received from the descendents @xmath122 , the vertex free energy from @xmath6 to @xmath2 can be obtained by minimizing the free energy in the space of the current adjustments @xmath123 drawn from the descendents . using eq .",
    "( [ recur ] ) , we minimize @xmath124 , \\label{fij}\\ ] ] subject to the constraint @xmath125 where @xmath126 and @xmath127 represent the first and second derivatives of @xmath13 at @xmath128 respectively . introducing the lagrange multiplier @xmath129 ,",
    "the optimal solution is given by @xmath130          ( b_{jk}+\\phi''_{jk})^{-1 } \\label{fopt}\\ ] ] where @xmath131          \\nonumber\\\\          & & + \\lambda_j - y_{ij}\\biggr ]          \\biggl[\\sum_{k\\ne i}\\ca_{jk}(b_{jk}+\\phi''_{jk})^{-1}\\biggr]^{-1 } ,          0\\biggr\\}. \\label{msgmu}\\end{aligned}\\ ] ] the first and second derivatives of @xmath132 with respect to @xmath5 lead to the forward message @xmath133 from node @xmath6 to @xmath2 , @xmath134 we note in passing that when the descendent currents @xmath135 change continuously , both the vertex free energy  ( [ fopt ] ) and the chemical potential  ( [ msgmu ] ) change continuously for functions @xmath13 with continuous first derivatives .",
    "hence for the quadratic load balancing task , defined by @xmath36 , a self - consistent solution of the recursion relation eq .",
    "( [ recur ] ) consists of vertex free energies which are piecewise quadratic with continuous slopes .",
    "this makes the 2-parameter message a very precise approximation .    in principle , if the forward messages consist of the full vertex free energy functions , then they are already sufficient for the optimization task . however , since the messages are simplified to be the first and second derivatives of the vertex free energies , each node needs to estimate the optimal currents by approximating the vertex free energy function as a quadratic function .",
    "hence , the remaining step of the algorithm is the determination of the drawn current @xmath5 at which the derivatives comprising the messages should be computed .",
    "this determination of the _ working point _ is achieved by passing additional information - provision messages among the nodes , a step not present in conventional message - passing algorithms .",
    "the following two methods are proposed for this purpose .    in the first method , when messages are sent from node @xmath6 to ancestor node @xmath2 , backward messages",
    "@xmath135 computed from the same optimization steps are sent from node @xmath6 to the descendent nodes @xmath122 , informing them of the particular arguments to be used for calculating subsequent messages . from eqs .",
    "( [ fij ] ) and ( [ conj ] ) , this backward message is given by @xmath136    in the second method , node @xmath6 first receives the messages @xmath137 and current @xmath138 from the ancestor node @xmath2 , and update the current from @xmath5 to @xmath139 by minimizing the total cost @xmath140 in eq .",
    "( [ eij ] ) , the first two terms represent the message from @xmath2 to @xmath6 , the next two terms from @xmath6 to @xmath2 , and the last two terms the transportation cost in link @xmath9 .",
    "the optimal solution is @xmath141 both methods work well for the quadratic cost function .",
    "implicit in the information - provision messages is the independent update of the currents @xmath5 and @xmath138 in the opposite directions of the same link .",
    "this allows us to use the criterion @xmath142 as a check for the convergence of the algorithm .",
    "we have used this in our simulation program by requiring the root mean square average of @xmath143 to be less than a threshold .",
    "another usage of the information - provision messages is in monitoring the optimal cost function during simulations .",
    "this saves the extra step of calculating the current associated with a link in the conventional bethe approach .",
    "an alternative distributed algorithm can be obtained by iterating the chemical potentials of the nodes .",
    "the khn - tucker condition requires that the terms @xmath144 in eq .",
    "( [ lagr ] ) vanish .",
    "eliminating @xmath5 in terms of the chemical potentials , @xmath25 can be expressed in terms of @xmath145 of its neighbors , namely , @xmath146^{-1}(\\mu_j - x)+\\lambda_i .",
    "\\label{mufunc}\\ ] ] for the quadratic load balancing task , @xmath36 and @xmath147 . \\label{itermu}\\ ] ] this provides a local iteration method for the optimization problem .",
    "we may interpret this algorithm as a price iteration scheme , by noting that the lagrangian in eq .",
    "( [ lagr ] ) can be written as @xmath148 where @xmath149 therefore , the problem can be decomposed into independent optimization problems , each for a current on a link .",
    "@xmath25 is the storage price at node @xmath2 , and each subproblem involves balancing the transportation cost on the link , and the storage cost at node @xmath2 less that at node @xmath6 , yielding the optimal solution .",
    "this provides a pricing scheme for the individual links to optimize , which simultaneously optimizes the global performance  @xcite .",
    "it can be easily verified that the message - passing algorithm , in the two - parameter approximation , yield solutions identical to the price iteration algorithm , which is exact , as long as the connectivity is sparse and the algorithms converge .",
    "indeed , simulations provided in section  [ sec : numerical ] show that the two algorithms yield excellent agreement with each other .",
    "one can proceed with the verification by noting from eq .",
    "( [ msgback ] ) that @xmath150 for all @xmath122 at the steady state . since @xmath129 is independent of the node @xmath2 receiving the message , one can write @xmath129 as @xmath145 . similarly , using eq .",
    "( [ msgab ] ) , @xmath151 .",
    "we then have @xmath152 , whose inverse relation is eq .",
    "( [ yij ] ) . the resource constraint eq .",
    "( [ constr ] ) then leads to eq .",
    "( [ mufunc ] ) .",
    "the result that the first order message converges to the exact result of the chemical potential at the steady state justifies the simplification of the message to two parameters .",
    "it illustrates that higher order messages are not required for the precision of the optimal solution , as long as the algorithm converges .",
    "this is natural for the quadratic cost , for which it can be verified that the vertex free energies are piecewise quadratic functions of the currents with continuous slopes .",
    "in addition , exact solutions can be found for other cost functions , as described in section  [ sec : generalcost ] .",
    "though the second order messages do not play a role in the final solution , they are useful in tuning the intermediate steps for faster convergence .",
    "the situation is reminiscent of the use of both gradient and curvature information in many gradient - based optimization techniques .",
    "both the recursive  ( [ recur ] ) and message - passing equations  ( [ msgmu])-([msgab ] ) can be solved numerically as will be shown in the next section .",
    "however , scaling laws of the quantities of interest can also be derived analytically in the limit of high connectivity .",
    "we restrict the analysis to the case of quadratic cost function @xmath153 . in the limit of large @xmath3 ,",
    "( [ msgab ] ) converges to the result @xmath154 and the currents scale as @xmath155 .",
    "therefore , the task of satisfying the capacity constraints is shared by a fraction of @xmath156 of the descendents . as a result",
    ", the collective effects of the descendents on a node can be expressed in terms of the statistical properties of the descendents . using this scaling property of the currents , eq .",
    "( [ msgab ] ) reduces to @xmath157,0 } \\right).\\ ] ] by virtue of the law of large numbers , it is sufficient to consider the mean @xmath158 and variance @xmath159 of the messages @xmath160 .",
    "respectively , they scale as @xmath155 and @xmath161 with @xmath162 being self - averaging .",
    "hence , we can write @xmath163    averaging over @xmath72 , drawn from a gaussian of mean @xmath164 and variance 1 used in our numerical studies , one obtains a self - consistent expression for the parameter @xmath165",
    "@xmath166      to obtain the current distribution , one considers the vertex free energies of both ends of a link . for a current @xmath5 flowing from @xmath6 to @xmath2 , the total energy is given by @xmath167 where we have approximated the working points of the messages to be @xmath168 .",
    "this is justified since the magnitudes of the messages are @xmath169 , and @xmath170 . minimizing the energy with respect to the current @xmath5",
    ", one finds @xmath171.\\end{aligned}\\ ] ] hence , the current distribution is given by @xmath172 for the gaussian distribution of capacities , one obtains @xmath173 this shows that the distribution @xmath174 , obtained by rescaling the argument by @xmath155 , is independent of @xmath3 , and depends solely on the average capacity @xmath164 through @xmath175 .",
    "in particular , the fraction of _ idle _ links is given by @xmath176 the physical picture of this scaling behavior is that the total current required by a node to satisfy its capacity constraint is shared by the links .      using eq .",
    "( [ eq : yk ] ) , the average energy per link can be written as @xmath177 for the gaussian capacity distribution , it becomes @xmath178,\\ ] ] where @xmath179 @xmath180    we are also interested in how the energy is distributed in the network .",
    "consider the average energy per link @xmath181 among those links connected to nodes of capacity @xmath72 .",
    "using eq .",
    "( [ eq : yk ] ) , @xmath182 ^ 2.\\end{aligned}\\ ] ] for the gaussian capacity distribution , this becomes @xmath183.\\ ] ]      to obtain the distribution of the chemical potentials , one follows a similar treatment and considers a central node 0 fed by @xmath3 descendents . introducing a lagrange multiplier to enforce the capacity constraint , one replaces the energy minimization problem by the lagrangian @xmath184 }          \\nonumber\\\\          & & + \\mu \\left (          { \\sum\\limits_{j=1}^c { y_{0j } } + \\lambda _ 0 } \\right).\\end{aligned}\\ ] ] the currents are given by @xmath185 , and the chemical potential by @xmath186,0 } \\right).\\ ] ] in the large @xmath3 limit , the approximated expression for @xmath35 becomes @xmath187 and the chemical potential distribution is similarly derived @xmath188          \\nonumber\\\\          & & + \\int_{cm_a}^\\infty d\\lambda~\\rho(\\lambda)\\delta(\\mu).\\end{aligned}\\ ] ] for the gaussian capacity distribution , it reduces to @xmath189 this shows that the distribution @xmath190 , obtained by rescaling the argument by @xmath155 , is independent of @xmath3 , and depends solely on the average capacity @xmath164 through @xmath191 .",
    "in particular , the fraction of unsaturated nodes is given by @xmath192      we define the resource at a node @xmath2 by @xmath193 the currents are obtained by minimizing @xmath194\\ ] ] subject to the constraints @xmath195 . introducing the lagrange multiplier @xmath25 for the constraint ,",
    "we obtain @xmath196.\\ ] ] hence , the resource distribution is given by @xmath197 for the gaussian capacity distribution , it reduces to @xmath198}{\\sqrt{2\\pi } }          \\theta(r)+h(-\\xi)\\delta(r).\\ ] ] this shows that the resource distribution becomes independent of @xmath3 in the large @xmath3 limit , confirming the picture that the current in a link scales as @xmath155 , summing up to a total current of @xmath199 satisfying the resource requirement of the nodes .",
    "to analyze the dynamics in the limit of large @xmath3 , one considers random sequential updates using the algorithm presented in section  [ sec : algorithm ] .",
    "time is divided into steps of size @xmath200 . at each time step , a directed link from node @xmath6 to @xmath2 is randomly chosen , such that each directed link is chosen exactly once in each integer interval of time , and the messages of the links are updated .",
    "the current @xmath135 , for a link feeding node @xmath6 , is updated in the backward messages corresponding to the forward ones from @xmath6 to @xmath201 .",
    "( this implies that @xmath135 is updated @xmath202 times in a time step .",
    "as will be shown , the algorithm uses information updated in the previous step to compute the optimal current .",
    "since the previous step lies in the previous interval , this approach is not the most efficient for monitoring the evolving average energy . )",
    "denote the average of message @xmath203 over all links at time @xmath204 as @xmath205 , and @xmath206 the expected value of @xmath203 when it is updated at time @xmath204 .",
    "then , for a time @xmath204 in the interval between @xmath207 and @xmath208 this leads to the dynamical equation @xmath209    suppose the link @xmath210 is updated at time @xmath204 , according to eq .",
    "( [ msgab ] ) .",
    "then the average over link @xmath210 becomes @xmath211 for the gaussian capacity distribution , this becomes @xmath212 where @xmath213 .",
    "it is convenient to convert eq .",
    "( [ eq : dma ] ) to a dynamical equation for @xmath214 @xmath215 with the initial condition @xmath216 .",
    "the dynamics of the average energy depends on whether one adopts the backward or forward information - provision method , described by eqs .",
    "( [ msgback ] ) and ( [ infoanc ] ) respectively .",
    "we first consider the case of backward information - provision .",
    "suppose the link from @xmath6 to @xmath2 is updated at time @xmath217 in the interval between @xmath218 and @xmath219 .",
    "using eq .",
    "( [ msgback ] ) , @xmath220 where @xmath221 is given by eq .",
    "( [ eq : ak1 ] ) and @xmath222 is the instant that the link from @xmath78 to @xmath6 is previously chosen for update .",
    "with probability @xmath223 , @xmath224 lies in the previous time interval between @xmath225 and @xmath218 .",
    "otherwise , @xmath224 lies between @xmath218 and @xmath217 .    to calculate the average energy @xmath226",
    ", one can express @xmath227 in terms of the moments @xmath228 , @xmath229 and @xmath230 .",
    "hence , on averaging over all descendents @xmath78 , denoted as @xmath231 , the second moment of @xmath221 is given via eq .",
    "( [ eq : ak1 ] ) by @xmath232          \\\\          & & \\times\\int d\\lambda~\\rho(\\lambda )          \\left[cm_a(t_{jk}^-)-\\lambda\\right]^2          \\theta\\left[cm_a(t_{jk}^-)-\\lambda\\right ] .",
    "\\nonumber \\label{eq : amoments}\\end{aligned}\\ ] ] for the gaussian capacity distribution , this becomes @xmath233 where @xmath234i_l(\\xi(t')).\\ ] ] averaging over @xmath9 at time @xmath219 , @xmath235 which can be simplified to @xmath236.\\end{aligned}\\ ] ]    a similar calculation follows for the second moment of @xmath237 at time @xmath219 , leading to @xmath238 for the gaussian capacity distribution .",
    "similarly , the expression for the crossed moment in the case of gaussian capacity distribution is @xmath239 which can be simplified to @xmath240          \\nonumber\\\\          & & \\times\\left[\\int_{t_0}^{t_0 + 1}dt~(t_0 + 1-t)i_1(\\xi(t))\\right ]          \\nonumber\\\\          & & + \\frac{1}{2}\\left[\\int_{t_0}^{t_0 + 1}dt~i_1(\\xi(t))\\right]^2          \\biggr\\}.\\end{aligned}\\ ] ] hence the average energy per link in the case of gaussian capacity distribution is @xmath241          \\nonumber\\\\          & & \\times\\left[\\int_{t_0}^{t_0 + 1}\\!\\!dt~(t_0 + 1-t)i_1(\\xi(t))\\right ]          \\!-\\!\\left[\\int_{t_0}^{t_0 + 1}\\!\\!dt~i_1(\\xi(t))\\right]^2          \\nonumber\\\\          & & + \\int_{t_0}^{t_0 + 1}dt~i_2(\\xi(t))\\biggr\\}. \\label{eq : mugauss}\\end{aligned}\\ ] ]    next , we consider the case of forward information - provision described by eq .  ( [ infoanc ] ) , whose large @xmath3 limit is given by @xmath242 where the link from @xmath6 to @xmath2 is updated at time @xmath217 in the time interval between @xmath218 and @xmath219 , @xmath243 and @xmath244 are respectively the instants that the links from @xmath6 to @xmath2 and from @xmath2 to @xmath6 are previously chosen for update .",
    "derivation analogous to the backward information - provision method yields @xmath245          \\left[\\int_{t_0}^{t_0 + 1}\\!\\!dt~\\overline i_1(t)\\right ]          + \\int_{t_0}^{t_0 + 1}\\!\\!dt~\\overline i_2(t)\\biggr\\},\\end{aligned}\\ ] ] which can be simplified to @xmath246          \\nonumber\\\\          & & \\times\\left[\\int_{t_0}^{t_0 + 1}\\!\\!dt~(t_0 + 1-t)i_1(t)\\right ]          -\\left[\\int_{t_0 - 1}^{t_0}\\!\\!dt~i_2(\\xi(t))\\right]^2\\biggr\\}.          \\nonumber\\end{aligned}\\ ] ] eq .",
    "( [ forhik ] ) shows that the forward information - provision method uses only outdated information to calculate the current .",
    "consequently , the convergence of the average energy is slower than that of the backward information - provision method by about half a step .",
    "to examine the accuracy of the theoretical results and the efficacy of the message passing algorithm of section  [ sec : algorithm ] we conducted a series of numerical experiments .",
    "first , we solved numerically the recursive equation ( [ recur ] ) using population dynamics for various connectivity values and obtained various quantities of interest from it , including the energy , current and chemical potential distribution .",
    "second , we carried out simulations using the algorithms of eqs .",
    "( [ msgab ] ) and ( [ msgmu ] ) and compared the results to those obtained from the numerical simulations .",
    "we then compared the scaling properties of the results with respect to the connectivity with the theoretical scaling obtained in section  [ sec : asymptotic ] .",
    "all experiments in this section have been carried out using the quadratic cost @xmath247 .",
    "to solve numerically the recursive equation ( [ recur ] ) we have discretized the vertex free energy functions @xmath112 into a vector , whose @xmath248 component is the value of the function corresponding to the current @xmath249 . to speed up the optimization search at each node",
    ", we first find the _ vertex saturation current _ drawn from a node such that : ( a ) the current drawn by each descendent node separately optimizes its own vertex free energy plus the transportation cost to the node being considered . for descendent nodes",
    "@xmath78 , this current @xmath250 is given by @xmath251.\\ ] ] ( b ) the resource of the node considered is just used up . for node @xmath6 , its vertex saturation current @xmath252 is given by @xmath253 for current below this saturation point , the vertex free energy remains constant .",
    "that is , @xmath254 for @xmath255 .",
    "hence , this provides a convenient starting point for searching the optimal solutions .",
    "the drawn current can then be increased in small discrete steps , and the optimal solution can be found , for example , using an exhaustive search , by varying the descendent currents in small discrete steps .",
    "this approach is particularly convenient for @xmath256 , where the search is confined to a single parameter . for larger values of @xmath3 , other search techniques , such as conjugate gradient search ,",
    "can be used .",
    "these recursive equations provide a discretized representation of the vertex free energy @xmath112 , from which various properties of the system can be calculated .",
    "_ average energy - _ to compute the average energy , we randomly draw @xmath102 nodes , compute the optimal current flowing between them , and repeat the sampling to obtain the average .",
    "the results of iteration for a gaussian distribution @xmath71 with variance 1 and average @xmath257 were described in @xcite .",
    "there we found that the convergence rate slows down when @xmath257 decreases towards 0 .",
    "a cusp in the relaxation rate dependence on @xmath257 exists at @xmath258 , where the fraction of saturated nodes is about 0.48 , close to the percolation threshold of 0.5 for @xmath256 .",
    "hence the cusp is probably related to the appearance of a percolating cluster of negative resources , which draws currents from increasingly extensive regions of nodes with excess resources to satisfy the demand .",
    "_ dependence on the connectivity - _ we have presented in @xcite evidence that the currents scale as @xmath155 , so that after rescaling , the average energy @xmath259 ( see fig . 1 inset ) , the current distribution @xmath174 , and the resource distribution @xmath260 become principally dependent on the average capacity @xmath257 , and only weakly dependent on the connectivity @xmath3 .",
    "the scaling property extends to the dynamics of the optimization process .",
    "all results of increasing connectivity approach those of the high connectivity limit derived in section  [ sec : asymptotic ] .    here",
    "we further study how the high connectivity limit is approached from increasing finite values of @xmath3 .",
    "we define the empirical scaling factor @xmath261 by @xmath262 @xmath261 is expected to converge to @xmath3 in the high conenctivity limit . as shown in fig .",
    "1 , the empirical scaling factor corresponding to different values of @xmath257 collapse on a linear curve with slope 1 .",
    "the best fit is @xmath263 .",
    "it is remarkable that the network behavior already converges to scaling at low values of @xmath3 .",
    "( 200,360 ) ( 0,180 ) ( 0,0 )    we make use of this empirical scaling factor to rescale the current distribution .",
    "the current distribution consists of a delta function component at @xmath264 ( fig .",
    "1(b ) inset  @xcite ) and a continuous component , whose breadth decreases with @xmath257 .",
    "excluding the delta function component , the continuous distribution after rescaling is shown in fig .",
    "the approach to the high connectivity limit is even faster when compared with that by setting the scaling factor to be @xmath102 @xcite .",
    "_ energy dependence on node capacity - _ we divide the nodes into ten groups according to their node capacities .",
    "nodes in group 1 have their capacities among the top 10% , those in group 2 the next highest 10% , and so on . for each group",
    ", we then calculate the average energy per link for those links connected to the nodes of that group .",
    "the general trend can be seen in figs .",
    "2(a - b ) .",
    "group 1 consists of the richest nodes .",
    "since they are the resource providers to the rest of the network , their connected links have high average energy . on the other hand , group 10",
    "consists of the poorest nodes .",
    "since they are the resource consumers of the network , their connected links also have high average energy . compared with group 1 ,",
    "their average energy is even higher due to the enforcement of the resource constraints , eq .",
    "( [ constr ] ) . by comparison ,",
    "the groups in between consist of relay nodes which typically receive resources from the richer ones and provide resources to the poorer ones .",
    "the energies of their connected links have intermediate averages .",
    "2(a - b ) show that these different roles played by nodes of different capacities can lead to a significant difference in the average energies of their connected links .",
    "( 200,360 ) ( 0,180 ) ( 0,0 )    furthermore , when one compares networks of different connectivities , one finds that the rescaled energy curves become only weakly dependent on the connectivity .",
    "the convergence to the high connectivity limit is rather fast .",
    "3(b ) inset shows the rescaled energy curves in the high connectivity limit for different @xmath257 .",
    "when @xmath257 increases , a plateau starts to develop among the groups of richer nodes , indicating that the rich nodes become unsaturated in their resource provision , so that the energy of their connected links become independent of their excess resources .",
    "they have @xmath265 according to eq .",
    "( [ eq : enode ] ) .",
    "simulation results for @xmath266 presented in the same figure provide support to this behavior .",
    "in fact , the development of this plateau is already visible in the simulation results of finite connectivities in fig .",
    "3(b ) , whose trend shows that the homogenization of energy among the links connected to the rich nodes is increasingly effective when the connectivity increases .",
    "_ chemical potential distribution - _ both the message - passing and price iteration algorithms allow us to study the distribution @xmath267 of the chemical potentials @xmath35 .",
    "@xmath267 consists of a delta function at @xmath268 ( fig .",
    "3 inset ) and a continuous component .",
    "the width of the continuous component increases when @xmath257 decreases .",
    "note the concurrence of low average resource and highly negative values of @xmath35 , consistent with the economic interpretation of @xmath35 as the storage cost of a node .",
    "the scaling property of the distribution is illustrated in fig .",
    "[ fig:3 ] . for @xmath257 = 0.5 and 1 , the distributions",
    "collapse well even for relatively low values of @xmath3 . for @xmath257 = 0.02 ,",
    "a considerable dependence on @xmath3 remains after rescaling .",
    "however , the approach to the high @xmath3 limit is visible .",
    "( 200,180 ) ( 0,0 )",
    "the cost used so far was the , rather simple , quadratic cost . in this section",
    "we examine the applicability of the message - passing algorithm for more general costs .",
    "two representative costs will be studied :    \\(a ) the _ anharmonic _ cost function is used to model the effects of costs rising faster than quadratic @xmath269    \\(b ) the _ frictional _ cost function is used to model the effects of frictional forces in resource allocation , which add an extra cost per unit current in a link irrespective of direction . hence it is also useful in networks with multiple classes of traffic sharing the same links .",
    "the cost function takes the form @xmath270 note that these cost functions represent two distinct cases .",
    "the former has well defined first and second derivatives for all of its arguments . in the latter case",
    ", the frictional cost function does not have a second derivative at @xmath264 .",
    "there is a kink in the cost function at the point of zero current , thus increasing the preference for idle links , or equivalently the reluctance to switch on a link .",
    "as will be shown , the convergence of the message - passing algorithm is much more difficult , and modifications are necessary .",
    "introducing lagrange multipliers for the capacity constraints , the function to be minimized is @xmath271 where @xmath272 is the set of neighboring nodes of @xmath2 .",
    "optimizing with respect to @xmath15 , one obtains the relation @xmath273{\\rm sgn}(\\mu _ j -\\mu _ i ) .\\ ] ] using the capacity constraints , the chemical potential @xmath274 is given by @xmath275 , where @xmath276 is the inverse of the function @xmath277{\\rm sgn}(\\mu _ j -x ) } + \\lambda_i .\\ ] ] this provides a price iteration scheme .",
    "we solve this equation using the bisection method , noting that the function is monotonic non - increasing .",
    "this requires one to know the solution bounds .",
    "let @xmath278 and @xmath279 be the maximum and minimum of the chemical potentials among the neighbors of node @xmath2 . examining the cases of @xmath280 and @xmath281 separately , one finds the range for the solution of @xmath282 @xmath283\\le x\\le      \\nonumber\\\\      & & \\min \\left\\ { { \\mu _ { \\max }          + \\max \\left [ { \\frac{\\lambda _",
    "i } { c}\\left ( { 1+\\frac{u\\left|          { \\lambda_i } \\right|}{c } } \\right),0 } \\right],0 } \\right\\}.\\end{aligned}\\ ] ]      since the cost function has well defined first and second derivatives for all of its arguments , the message - passing algorithm formulated in section  [ sec : algorithm ] is directly applicable : @xmath284 @xmath285 where @xmath286      \\nonumber\\\\      & & + \\lambda _ j -y_{ij }      \\biggr]\\biggl [      \\sum_{k\\in \\cl_j\\backslash\\{i\\}}(b_{jk}+\\phi _ { jk}'')^{-1}\\biggr]^{-1 }      , 0 \\biggr\\},\\ \\label{eq : anharmonic_mu}\\end{aligned}\\ ] ] and the backward message is given by @xmath287 for the anharmonic cost function , @xmath288      to study the behavior of the various algorithms in the case the anharmonic cost function , in comparison to the quadratic cost , we carried out simulation under similar conditions to those of section  [ sec : numerical ] .",
    "figure  [ fig : anharmonic](a ) shows the average energy per link as a function of iteration steps of the price iteration algorithm for the anharmonic cost function .",
    "figures  [ fig : anharmonic](b)-(d ) show the distributions , @xmath289 , @xmath260 and @xmath267 of the currents , resources and chemical potentials respectively , at the corresponding values of @xmath257 .",
    "the results obtained are very similar to those of the quadratic cost function and show the same qualitative behavior , as can be seen by comparing figs .",
    "[ fig : anharmonic](a)-(d ) with figs .",
    "[ fig:1](a ) inset , [ fig:2](a ) , [ fig:2](b ) and [ fig:3](a ) respectively .    in figs .",
    "[ fig : anharmonic_comp](a)-(d ) we compare the behavior of the price iteration and message - passing algorithms by plotting the average energy per link , the fraction of idle links @xmath290 , the fraction of saturated nodes @xmath291 , and the fraction of unsaturated nodes @xmath292 respectively , as a function of @xmath257 for both algorithms at the anharmonic strengths @xmath293 and 3 .",
    "both methods converge to the same value throughout the range examined and for the two @xmath294 values examined .",
    "to provide a more quantitative comparison of the cost functions , we also plotted in figs .",
    "[ fig : anharmonic_comp](b)-(d ) @xmath290 , @xmath291 and @xmath292 respectively , for the quadratic ( @xmath295 ) cost function .",
    "simulations have been carried out under the same conditions ( @xmath296 , @xmath256 and 1000 samples ) .",
    "it is remarkable that there is little difference between the quadratic and anharmonic cases .",
    "the different cost functions merely change the continuous components of these distributions , leaving the delta function components effectively unchanged .",
    "( 240,100 ) , @xmath297 , the anharmonic cost function with @xmath293 , and 1000 samples .",
    "( a ) @xmath298 obtained by the price iteration algorithm , utilizing eqs .",
    "( [ eq : anharmonicg ] ) and ( [ eq : anharmonic_musol ] ) , as a function of @xmath204 for @xmath299 ( top to bottom ) .",
    "( b ) the corresponding current distribution @xmath289 .",
    "( c ) the corresponding resource distribution @xmath260 .",
    "( d ) the corresponding chemical potential distribution @xmath267.,title=\"fig : \" ]   , @xmath297 , the anharmonic cost function with @xmath293 , and 1000 samples . ( a )",
    "@xmath298 obtained by the price iteration algorithm , utilizing eqs .",
    "( [ eq : anharmonicg ] ) and ( [ eq : anharmonic_musol ] ) , as a function of @xmath204 for @xmath299 ( top to bottom ) .",
    "( b ) the corresponding current distribution @xmath289 .",
    "( c ) the corresponding resource distribution @xmath260 .",
    "( d ) the corresponding chemical potential distribution @xmath267.,title=\"fig : \" ]     +    ( 240,100 ) , @xmath297 , the anharmonic cost function with @xmath293 , and 1000 samples . ( a )",
    "@xmath298 obtained by the price iteration algorithm , utilizing eqs .",
    "( [ eq : anharmonicg ] ) and ( [ eq : anharmonic_musol ] ) , as a function of @xmath204 for @xmath299 ( top to bottom ) .",
    "( b ) the corresponding current distribution @xmath289 .",
    "( c ) the corresponding resource distribution @xmath260 .",
    "( d ) the corresponding chemical potential distribution @xmath267.,title=\"fig : \" ]   , @xmath297 , the anharmonic cost function with @xmath293 , and 1000 samples . ( a )",
    "@xmath298 obtained by the price iteration algorithm , utilizing eqs .",
    "( [ eq : anharmonicg ] ) and ( [ eq : anharmonic_musol ] ) , as a function of @xmath204 for @xmath299 ( top to bottom ) .",
    "( b ) the corresponding current distribution @xmath289 .",
    "( c ) the corresponding resource distribution @xmath260 .",
    "( d ) the corresponding chemical potential distribution @xmath267.,title=\"fig : \" ]    ( 240,100 ) , @xmath297 , the anharmonic cost function , and 1000 samples . ( a ) average energy per link @xmath298 .",
    "( b ) the fraction of idle links @xmath290 .",
    "( c ) the fraction of saturated nodes @xmath291 .",
    "( d ) the fraction of unsaturated nodes @xmath292 . symbols in ( a)-(d ) : results obtained by the price iteration algorithm for the quadratic cost function ( @xmath300 ) ( @xmath301 ) , and the anharmonic cost function with @xmath293 ( @xmath302 ) and @xmath303 ( @xmath304 ) ; results obtained by the message - passing algorithm are also shown for @xmath293 ( @xmath305 ) and @xmath303 ( @xmath306).,title=\"fig : \" ]   , @xmath297 , the anharmonic cost function , and 1000 samples . ( a ) average energy per link @xmath298 .",
    "( b ) the fraction of idle links @xmath290 .",
    "( c ) the fraction of saturated nodes @xmath291 .",
    "( d ) the fraction of unsaturated nodes @xmath292 . symbols in ( a)-(d ) : results obtained by the price iteration algorithm for the quadratic cost function ( @xmath300 ) ( @xmath301 ) , and the anharmonic cost function with @xmath293 ( @xmath302 ) and @xmath303 ( @xmath304 ) ; results obtained by the message - passing algorithm are also shown for @xmath293 ( @xmath305 ) and @xmath303 ( @xmath306).,title=\"fig : \" ]     +    ( 240,100 ) , @xmath297 , the anharmonic cost function , and 1000 samples . ( a ) average energy per link @xmath298 .",
    "( b ) the fraction of idle links @xmath290 .",
    "( c ) the fraction of saturated nodes @xmath291 .",
    "( d ) the fraction of unsaturated nodes @xmath292 . symbols in ( a)-(d ) : results obtained by the price iteration algorithm for the quadratic cost function ( @xmath300 ) ( @xmath301 ) , and the anharmonic cost function with @xmath293 ( @xmath302 ) and @xmath303 ( @xmath304 ) ; results obtained by the message - passing algorithm are also shown for @xmath293 ( @xmath305 ) and @xmath303 ( @xmath306).,title=\"fig : \" ]   , @xmath297 , the anharmonic cost function , and 1000 samples . ( a ) average energy per link @xmath298 .",
    "( b ) the fraction of idle links @xmath290 .",
    "( c ) the fraction of saturated nodes @xmath291 .",
    "( d ) the fraction of unsaturated nodes @xmath292 . symbols in ( a)-(d ) : results obtained by the price iteration algorithm for the quadratic cost function ( @xmath300 ) ( @xmath301 ) , and the anharmonic cost function with @xmath293 ( @xmath302 ) and @xmath303 ( @xmath304 ) ; results obtained by the message - passing algorithm are also shown for @xmath293 ( @xmath305 ) and @xmath303 ( @xmath306).,title=\"fig : \" ]        introducing lagrange multipliers for the capacity constraints ,",
    "the function to be minimized is @xmath307 optimizing with respect to @xmath308 , one obtains @xmath309\\theta \\left [ { \\left| { \\mu          _ j -\\mu _ i } \\right|-v } \\right].\\ ] ] using the capacity constraints , the chemical potential is given by @xmath310 , where @xmath276 is the inverse of the function @xmath311      \\!\\theta\\ ! \\left",
    "[ { \\left| { \\mu          _ j -x } \\right|-v } \\right ] } + \\lambda _ i   \\ .\\ ] ] since @xmath312 is monotonic non - increasing , and piecewise linear , we have a fast way to solve the equation by finding the function at its @xmath313 turning points , located at @xmath314 . if @xmath315 , the solution is given by @xmath316 ; if @xmath317 , then among the turning points with @xmath318 , one finds the one with the minimum value of @xmath312 , and the solution is given by @xmath319 .",
    "message - passing algorithms for the currents have not been successful in this case , presumably due to the divergence of the second derivative at @xmath320 .",
    "this in turn requires some form of regularization that causes the effects of friction to be exhibited in the first , but not the second , derivative in finite systems .",
    "this inconsistency prevents the algorithm from converging .",
    "we present here an approach based on the chemical potential representation . to formulate an appropriate version of message - passing for this case , we return to the minimization of the energy of section  [ sec : algorithm ] ,",
    "namely , @xmath321 , \\end{aligned}\\ ] ] subject to the constraints @xmath322 introduced by employing the lagrange multipliers @xmath323 .",
    "the optimal solution is given by @xmath324 $ ] , where @xmath325 is the inverse of the function @xmath326          \\nonumber \\\\          & & \\times \\theta \\left [ { \\left| { b_{jk } y_{jk } -a_{jk } -x }          \\right|-v }",
    "\\right]+\\lambda _ i -y_{ij } .\\end{aligned}\\ ] ]    the forward messages become @xmath327 } } , \\nonumber\\end{aligned}\\ ] ]    to complete the algorithm , we need information - provision messages to determine the drawn current @xmath5 at which the messages should be computed . analogous to the case of quadratic cost functions ,",
    "two methods are proposed .    in the method of backward information - provision messages ,",
    "the backward messages are computed directly from the optimization of eq .",
    "( [ eq : energy_friction ] ) and sent from node @xmath6 to the descendent nodes , namely , @xmath328          \\theta\\left [ { \\left| { b_{jk } y_{jk } -a_{jk } -\\mu _ { ij } } \\right|-v }          \\right ] \\ .\\end{aligned}\\ ] ] this algorithm reduces the error at steady state to a level that is still rather high . a careful examination of the solution shows that the error is contributed by oscillatory solutions between @xmath5 and @xmath138 .",
    "hence a learning rate @xmath329 is introduced : @xmath330          \\nonumber\\\\          & & \\times\\theta\\left[\\left|          b_{jk}y_{jk}-a_{jk}-\\mu _ { ij}\\right|-v\\right ] .",
    "\\label{eq : friction_learningrate}\\end{aligned}\\ ] ] the case @xmath331 corresponds to the original algorithm .    in the method of forward information - provision messages ,",
    "a node first receives the messages from the ancestor immediately before it updates its messages .",
    "the working point is obtained by minimizing the energy @xmath332 with the optimal solution @xmath333          \\nonumber\\\\          & & \\times\\theta\\left(\\left|b_{ij}y_{ij}-a_{ij}-b_{ji}y_{ji}+a_{ji }          \\right|-v\\right).\\end{aligned}\\ ] ] for further improvement , a learning rate is introduced , namely , @xmath334          \\nonumber\\\\          & & \\times\\theta\\left(\\left|b_{ij}y_{ij}-a_{ij}-b_{ji}y_{ji}+a_{ji }          \\right|-v\\right ) .",
    "\\label{ratefor}\\end{aligned}\\ ] ]      to study the behavior of both price iteration and message passing algorithms in the case of the frictional cost function , we carried out simulations under similar conditions to those of section  [ sec : numerical ] .",
    "figure  [ fig : friction](a ) shows the average energy per link as a function of iteration steps of the price iteration algorithm .",
    "figures  [ fig : friction](b ) , ( c ) and ( d ) show the current , resource , and chemical potential distributions , @xmath289 , @xmath260 , and @xmath267 , respectively for the various @xmath164 values .",
    "the results shown in figs .  [ fig : friction](a)-(c ) exhibit a similar qualitative behavior to those of the quadratic and anharmonic cost functions .",
    "however , there is a substantial difference in the chemical potential distribution , shown in fig .",
    "[ fig : friction](d ) as a pseudogap develops in the range @xmath335 , as well as a kink at @xmath336 . from eq .",
    "( [ eq : friction_y ] ) one notices that a link becomes idle when the potential difference at its vertices is less than @xmath337 , accounting for the existence of the pseudogap .",
    "a quantitative comparison between the results obtained by price iteration ( [ eq : g_friction ] ) and message - passing  ( [ eq : ab_message_friction])- ( [ eq : backward_message_friction ] ) algorithms ( @xmath338 , no learning rate ) are presented in fig .",
    "[ fig : friction_comp ] . a comparison of the average energy per link as a function of @xmath164 , the fraction of idle links @xmath290 , and the fraction of unsaturated nodes @xmath292 are shown in figs .",
    "[ fig : friction_comp](a ) , ( b ) and ( d ) , respectively , showing good agreement between the result obtained using both algorithms .",
    "results obtained by both price iteration and message passing algorithms for a friction ( @xmath339 ) cost are also contrasted with results obtained for the quadratic ( @xmath340 ) cost in figs .",
    "[ fig : friction_comp](b ) and ( d ) .    as shown in fig .",
    "[ fig : friction_comp ] , the price iteration and the original message - passing algorithms yield results agreeing in the average energy ( a ) , the fraction of idle links ( b ) , and the fraction of unsaturated nodes(d ) . compared with the quadratic cost function",
    ", the fraction of idle links is considerably increased after introducing the friction , as shown in fig .",
    "[ fig : friction_comp](b ) .",
    "however , as shown in fig .",
    "[ fig : friction_comp](c ) , the message - passing algorithm gives values much lower than those of price iteration , and is inconsistent with the results in fig .  [",
    "fig : friction_comp](d ) .    the resource distribution in fig .",
    "[ fig : friction_eta](a ) explains the discrepancy . compared with the results in fig .",
    "[ fig : friction](c ) , the sharp peak at @xmath341 = 0 is broadened to finite values of @xmath341 .",
    "this shows that the original message - passing algorithm is not precise in computing the resources .",
    "furthermore , the chemical potential distribution in fig .",
    "[ fig : friction_eta](b ) exhibits rough features in the pseudogap , and the jumps near the edge of the pseudogap are less sharp than those in fig .",
    "[ fig : friction](d ) .",
    "( 243,100 ) , @xmath297 , the frictional cost function with @xmath339 and 1000 samples .",
    "( a ) @xmath298 obtained by the price iteration algorithm as a function of @xmath204 for @xmath342 ( top to bottom ) .",
    "( b ) the corresponding current distribution @xmath289 .",
    "( c ) the corresponding resource distribution @xmath260 .",
    "( d ) the corresponding chemical potential distribution @xmath267.,title=\"fig : \" ]   , @xmath297 , the frictional cost function with @xmath339 and 1000 samples . ( a )",
    "@xmath298 obtained by the price iteration algorithm as a function of @xmath204 for @xmath342 ( top to bottom ) .",
    "( b ) the corresponding current distribution @xmath289 .",
    "( c ) the corresponding resource distribution @xmath260 .",
    "( d ) the corresponding chemical potential distribution @xmath267.,title=\"fig : \" ]     +    ( 243,100 ) , @xmath297 , the frictional cost function with @xmath339 and 1000 samples . ( a )",
    "@xmath298 obtained by the price iteration algorithm as a function of @xmath204 for @xmath342 ( top to bottom ) .",
    "( b ) the corresponding current distribution @xmath289 .",
    "( c ) the corresponding resource distribution @xmath260 .",
    "( d ) the corresponding chemical potential distribution @xmath267.,title=\"fig : \" ]   , @xmath297 , the frictional cost function with @xmath339 and 1000 samples . ( a )",
    "@xmath298 obtained by the price iteration algorithm as a function of @xmath204 for @xmath342 ( top to bottom ) .",
    "( b ) the corresponding current distribution @xmath289 .",
    "( c ) the corresponding resource distribution @xmath260 .",
    "( d ) the corresponding chemical potential distribution @xmath267.,title=\"fig : \" ]    ( 245,100 ) , @xmath297 , the frictional cost function with @xmath339 , and 1000 samples . ( a ) average energy @xmath298 .",
    "( b ) the fraction of idle links @xmath290 .",
    "( c ) the fraction of unsaturated nodes @xmath292 .",
    "( d ) the fraction of saturated nodes @xmath291 .",
    "symbols in ( a)-(d ) : results obtained for the frictional cost function by the price iteration algorithm ( @xmath302 ) and the message - passing algorithm ( @xmath305 ) ; results obtained for the quadratic cost function ( @xmath340 ) ( @xmath304).,title=\"fig : \" ]   , @xmath297 , the frictional cost function with @xmath339 , and 1000 samples .",
    "( a ) average energy @xmath298 .",
    "( b ) the fraction of idle links @xmath290 .",
    "( c ) the fraction of unsaturated nodes @xmath292 .",
    "( d ) the fraction of saturated nodes @xmath291 . symbols in ( a)-(d ) : results obtained for the frictional cost function by the price iteration algorithm ( @xmath302 ) and the message - passing algorithm ( @xmath305 ) ; results obtained for the quadratic cost function ( @xmath340 ) ( @xmath304).,title=\"fig : \" ]     +    ( 245,100 ) , @xmath297 , the frictional cost function with @xmath339 , and 1000 samples . ( a ) average energy @xmath298 .",
    "( b ) the fraction of idle links @xmath290 .",
    "( c ) the fraction of unsaturated nodes @xmath292 .",
    "( d ) the fraction of saturated nodes @xmath291 .",
    "symbols in ( a)-(d ) : results obtained for the frictional cost function by the price iteration algorithm ( @xmath302 ) and the message - passing algorithm ( @xmath305 ) ; results obtained for the quadratic cost function ( @xmath340 ) ( @xmath304).,title=\"fig : \" ]   , @xmath297 , the frictional cost function with @xmath339 , and 1000 samples .",
    "( a ) average energy @xmath298 .",
    "( b ) the fraction of idle links @xmath290 .",
    "( c ) the fraction of unsaturated nodes @xmath292 .",
    "( d ) the fraction of saturated nodes @xmath291 .",
    "symbols in ( a)-(d ) : results obtained for the frictional cost function by the price iteration algorithm ( @xmath302 ) and the message - passing algorithm ( @xmath305 ) ; results obtained for the quadratic cost function ( @xmath340 ) ( @xmath304).,title=\"fig : \" ]    these unsatisfactory performances of the message - passing algorithm can be traced to its non - convergence . in message - passing",
    ", convergence is monitored by the root - mean - square average of @xmath343[(@xmath5 + @xmath344/2]@xmath345 , which is expected to approach 0 . as shown in fig .",
    "[ fig : friction_eta](c ) for the original algorithm ( @xmath331 ) , the convergence parameter reaches 0.04 at @xmath204 = 500 , compared with the value of 0.0003 for the price iteration algorithm .    to improve convergence , we introduce a learning rate according to eqs .",
    "( [ eq : friction_learningrate ] ) and ( [ ratefor ] ) . as shown in figs .",
    "[ fig : friction_eta](c ) and ( d ) , convergence improves for decreasing @xmath329 , but is also slowed down . comparing the two information - provision methods ,",
    "the one using forward information - provision messages converges faster .    as shown in fig .",
    "[ fig : friction_conv](a ) , better convergence is obtained by the forward information - provision messages in 500 steps .",
    "[ fig : friction_conv](b ) summarizes the improvement in the fraction of saturated nodes on introducing the learning rate for 500 steps ; results obtained using the price iteration algorithm are provided for comparison .",
    "obviously , further improvement can be made by increasing the number of time steps , and hence depends on the amount of computational resource one wishes to commit .",
    "( 240,100 ) , @xmath297 , the frictional cost function with @xmath339 , and 1000 samples .",
    "( a ) the chemical potential distribution @xmath267 for @xmath346 ( top to bottom ) .",
    "( b ) the corresponding resource distribution @xmath260 .",
    "( c)-(d ) the convergence parameter @xmath347[(@xmath5 + @xmath344/2]@xmath348 of the message - passing algorithm as a function of iteration steps and for various @xmath329 values , using backward and forward information - provision messages in ( c ) and ( d ) , respectively.,title=\"fig : \" ]   , @xmath297 , the frictional cost function with @xmath339 , and 1000 samples .",
    "( a ) the chemical potential distribution @xmath267 for @xmath346 ( top to bottom ) .",
    "( b ) the corresponding resource distribution @xmath260 .",
    "( c)-(d ) the convergence parameter @xmath347[(@xmath5 + @xmath344/2]@xmath348 of the message - passing algorithm as a function of iteration steps and for various @xmath329 values , using backward and forward information - provision messages in ( c ) and ( d ) , respectively.,title=\"fig : \" ]     +    ( 245,100 ) , @xmath297 , the frictional cost function with @xmath339 , and 1000 samples .",
    "( a ) the chemical potential distribution @xmath267 for @xmath346 ( top to bottom ) .",
    "( b ) the corresponding resource distribution @xmath260 .",
    "( c)-(d ) the convergence parameter @xmath347[(@xmath5 + @xmath344/2]@xmath348 of the message - passing algorithm as a function of iteration steps and for various @xmath329 values , using backward and forward information - provision messages in ( c ) and ( d ) , respectively.,title=\"fig : \" ]   , @xmath297 , the frictional cost function with @xmath339 , and 1000 samples .",
    "( a ) the chemical potential distribution @xmath267 for @xmath346 ( top to bottom ) .",
    "( b ) the corresponding resource distribution @xmath260 .",
    "( c)-(d ) the convergence parameter @xmath347[(@xmath5 + @xmath344/2]@xmath348 of the message - passing algorithm as a function of iteration steps and for various @xmath329 values , using backward and forward information - provision messages in ( c ) and ( d ) , respectively.,title=\"fig : \" ]",
    "the paper presents a study of inference and optimization tasks of real value edges on sparse graphs under given constraints and cost measure .",
    "a generic framework comprising of sparsely connected nodes , representing constraints , and edges representing current variables connecting them , is used as the basic framework for the inference and optimization tasks .",
    "inference of real values attributed to the graph edges has very rarely been studied before within and outside the statistical physics community . although both theoretical analysis and algorithmic solutions can be obtained for any connectivity profile , we restricted this study to the case of fixed connectivity - @xmath3 .",
    "the framework is analyzed using both the replica method and bethe approximation to obtain a set of recursive equations to be solved numerically .",
    "the solutions provide numerical results for the free energy , average energy , and the distribution of currents , resources , and chemical potentials for the various cases .",
    "the recursive equations also enabled us to obtain scaling rules for various quantities of interest as a function of the node connectivity .",
    "in addition , we have devised message - passing and price iteration algorithms for solving the optimization problem .",
    "the message - passing algorithm is based on passing first and second derivatives of the vertex free energy , representing the local contribution to the system s free energy , thus saving the need to pass the full free energy functions as messages . despite the simplicity of the two - parameter messages , they yield exact solutions in the limit of sparse connectivity as long as they converge .",
    "most numerical studies have been carried out for the case of quadratic cost that corresponds to the resource allocation problem which initiated this study . in this case",
    "we fixed the nodes capacities , representing biases in the local constraints , to quenched variables drawn from some gaussian distribution of given mean @xmath349 and unit variance .",
    "numerical results for various parameters values , @xmath3 and @xmath350 , show excellent agreement between the analytical and algorithmic approaches both for finite and asymptotic connectivity values .",
    "moreover , they expose an interesting percolation transition of the clusters of nodes with negative resources when @xmath257 varies , giving rise to a slowing down of the convergence of the saddle point equations below a certain value of @xmath257 .    to study the efficacy of our approach to other cost measures we have examined two different costs that include anharmonic and friction terms .",
    "we have applied two different algorithms in these cases based on the price iteration and message - passing .",
    "price iterations involve solving a nonlinear equation of the chemical potential at each step numerically on the other hand , message - passing involves updating the messages based on the working points estimated from the information - provision messages . while the obtained solutions are qualitatively similar to that of the quadratic cost , there are also substantial algorithmic and conceptual differences , especially in the case of friction cost . for the optimization task studied in this paper ,",
    "price iteration is simpler in implementation and converges better when compared with message - passing .",
    "however , for future extensions to inference problems at finite temperatures , we expect the message - passing approach to be more appropriate .",
    "it is also useful to adopt an adpative learning rate as a function of time to optimize the performance  @xcite .",
    "we believe this research opens a rich area for further investigations with many potential applications , especially when additional restrictions are imposed and other costs considered .",
    "more specifically , one may consider bandwidth limited links  @xcite and other nonlinear costs which are of interest in realistic networks .",
    "we expect that many nonlinear costs may exhibit replica symmetry - breaking effects , and it would be interesting to consider how the analyses and algorithms should be modified to cope with these effects .",
    "this work is partially supported by the research grant council of hong kong ( grants hkust6062/02p , dag04/05.sc25 and dag05/06.sc36 ) and evergrow , ip no .",
    "1935 in fp6 of the eu .",
    "to calculate the averaged replicated partition function  ( [ eq : replicatedpart ] ) , we employ an integral representation of the step function to obtain @xmath351      \\exp \\biggl [ -\\sum\\limits_{i\\alpha }      { i\\hat { \\lambda}_i^\\alpha }      \\sum\\limits_j { \\ca_{ij } ( \\nu _ j^\\alpha -\\nu _ i^\\alpha ) }      \\nonumber\\\\      & & -\\beta \\sum\\limits_{(ij ) } \\sum\\limits_\\alpha \\ca_{ij } \\phi      ( \\nu _ j^\\alpha -\\nu _ i^\\alpha ) \\biggr]\\ .\\end{aligned}\\ ] ] collecting terms containing @xmath352 and summing over them , one obtains @xmath353      \\nonumber \\\\      & & \\times \\prod\\limits_{(ij ) } \\biggl [ 1+z_i z_j \\exp \\biggl (      \\sum\\limits_\\alpha { ( i\\hat { \\lambda } _ i^\\alpha      -i\\hat { \\lambda } _ j^\\alpha)(\\nu _",
    "i^\\alpha -\\nu _ j^\\alpha ) }      \\nonumber\\\\      & & -\\beta \\sum\\limits_\\alpha { \\phi ( \\nu_j^\\alpha -\\nu_i^\\alpha ) }      \\biggr ) \\biggr ] \\ .\\end{aligned}\\ ] ] this includes a mixed term of @xmath2 and @xmath6 indices .",
    "an additional expansion is required to disentangle the two indices . the product over ( _ ij _ )",
    "can be written as an exponential function whose argument is @xmath354 which gives rise to the mean - field parameters @xmath355 and the conjugate parameters @xmath356 .",
    "the replicated and averaged partition function @xmath357 becomes @xmath358          \\nonumber \\\\      & & \\times \\exp \\biggl\\ { \\sqrt { cn } \\sum_{\\mathbf{r},\\mathbf{s},m }      \\hat q_{\\mathbf{r } , \\mathbf{s}}^m          \\sum\\limits_i z_i^m \\exp \\left ( \\sum\\limits_\\alpha          im\\hat\\lambda_i^\\alpha \\nu _ i^\\alpha \\right )      \\nonumber\\\\      & & \\times\\prod\\limits_\\alpha ( -im\\hat\\lambda_i^\\alpha ) ^{r_\\alpha }          ( \\nu _ i^\\alpha ) ^{s_\\alpha }      + \\sqrt { cn}\\sum\\limits_{\\mathbf{r } , \\mathbf{s } , m }          \\frac{(-)^{m-1}}{2 m }      \\frac{q_{\\mathbf{r } , \\mathbf{s}}^m }      { \\prod\\limits_\\alpha { r_\\alpha ! s_\\alpha ! } }      \\nonumber\\\\      & & \\times\\sum\\limits_j          z_j^m \\exp \\left ( \\sum\\limits_\\alpha im\\hat\\lambda_j^\\alpha          \\nu _",
    "j^\\alpha \\right )      \\prod\\limits_\\alpha ( \\nu _ j^\\alpha ) ^{r_\\alpha }      \\nonumber\\\\      & & \\times{\\left (          { -im\\hat { \\lambda } _ j^\\alpha -\\frac{d}{dy } } \\right)^{s_\\alpha          } e^{-m\\beta \\phi ( y ) } } \\biggr|_{y=\\nu _ j^\\alpha } \\biggr\\ } .\\end{aligned}\\ ] ] the integration over @xmath359 is dominated by the term @xmath360 = 1 in the @xmath361 order expansion of the exponential term that leads to eq .",
    ". both @xmath362 and @xmath363 are then given by the saddle point equations @xmath364x^{{c-1 } }      \\nonumber\\\\      & & \\times\\prod\\limits_\\alpha { ( -i\\hat { \\lambda } _",
    "\\alpha ) ^{r_\\alpha }      ( \\nu_\\alpha)^{s_\\alpha } } \\ ,          \\nonumber \\\\          & & \\sn_2 = \\frac{1}{2}\\int { d\\lambda \\rho ( \\lambda ) }          \\prod\\limits_\\alpha { \\int { d\\nu _ \\alpha } \\int_{-\\lambda } ^\\infty          { d\\lambda _ \\alpha } \\int { \\frac{d\\hat { \\lambda } _ \\alpha } { 2\\pi } } }      \\nonumber\\\\      & & \\times\\exp \\left [ { \\sum\\limits_\\alpha      { \\left ( { i\\hat { \\lambda } _ \\alpha          ( \\lambda _ \\alpha + c\\nu _",
    "\\alpha ) -\\frac{\\beta \\epsilon } { 2 }          ( \\nu_\\alpha)^2 } \\right ) } } \\right]x^{c-1 }      \\nonumber \\\\      & & \\times\\prod\\limits_\\alpha { \\frac{(\\nu _ \\alpha)^{r_\\alpha }          } { r_\\alpha ! } \\frac{1}{s_\\alpha ! } \\left .",
    "{ \\left ( { -i\\hat { \\lambda          } _ \\alpha -\\frac{d}{dy } } \\right)^{s_\\alpha } e^{-\\beta \\phi ( y ) } }          \\right| } _ { y=\\nu _ \\alpha } ,          \\nonumber\\\\          & & \\sd = \\int { d\\lambda \\rho ( \\lambda ) } \\prod\\limits_\\alpha { \\int          { d\\nu _ \\alpha } \\int_{-\\lambda } ^\\infty { d\\lambda _ \\alpha } \\int          { \\frac{d\\hat { \\lambda } _ \\alpha } { 2\\pi } } }      \\nonumber\\\\      & & \\times\\exp \\left [          { \\sum\\limits_\\alpha { \\left ( { i\\hat { \\lambda } _ \\alpha ( \\lambda          _ \\alpha + c\\nu _",
    "\\alpha ) -\\frac{\\beta \\epsilon } { 2}(\\nu _ \\alpha)^2          } \\right ) } } \\right]x^c \\ , \\end{aligned}\\ ] ] where @xmath365 is given by eq .  ( [ xx ] ) .",
    "by virtue of the saddle point equations ( [ eq : saddlepoint ] ) , one can show that @xmath366 exploiting the even nature of @xmath367 and relation ( [ eq : qqhat ] )  @xcite , the expressions for @xmath365 and @xmath368 reduce to @xmath369    to better understand the symmetry properties of the order parameters , we consider the generating function @xmath370 and its inversion in eq .",
    "( [ genf ] ) . substituting eq .",
    "( [ eq : x_expression ] ) into eq .",
    "( [ genf ] ) , we reproduce eq .",
    "( [ eq : p_sdef ] ) , with @xmath59 being @xmath371      \\sum\\limits_{\\mathbf{s}_k } \\prod\\limits_{k=1}^c      \\nonumber \\\\          & & \\times p_{\\mathbf{s}_k}(\\mathbf{\\nu } )          \\prod\\limits_{k\\alpha } \\frac{1}{s_k^\\alpha ! }          \\left.\\left(-i\\hat\\lambda_\\alpha -\\frac{d}{dy}\\right)^{s_k^\\alpha }      e^{-\\beta \\phi(y ) } \\right|_{y=\\nu_\\alpha}.      \\nonumber\\\\ \\label{eq : dpdef}\\end{aligned}\\ ] ]    once we have represented the order parameters @xmath372 using the generating function @xmath373 , we can make explicit assumptions about their symmetry properties . in particular , in the replica symmetric ansatz , we consider functions of the form eq .",
    "( [ moments ] ) .",
    "notice that the replicas in eq .",
    "( [ moments ] ) are coupled through their common dependence on the disordered distribution of @xmath374 .",
    "this is different from the sk model , in which the dependence on the disorder is integrated out , and the interaction between the replicas is explicit . using the ansatz ( [ moments ] ) , the recursion relation for @xmath370 can be replaced by a recursion relation for the function @xmath73 in eq .",
    "( [ eq : r_t ] ) , where @xmath375}\\right.\\right .          \\nonumber\\\\          & & \\left.\\left.\\times          \\theta \\left ( { \\sum\\limits_{k=1}^c { \\nu _ k } -c\\nu+\\lambda _ v }          \\right ) \\right .",
    "\\right .          \\\\",
    "& & \\times\\left .",
    "\\left .",
    "\\exp \\left [ { -\\frac{\\beta \\epsilon } { 2}\\nu ^2          -\\beta \\sum\\limits_{k=1}^c          { \\phi \\left ( { \\nu -\\nu _ k } \\right ) } } \\right ] \\right\\}^n          \\right\\rangle_\\lambda^{\\frac{1}{n } } \\ .\\nonumber\\end{aligned}\\ ] ] @xmath376 is the capacity of the vertex fed by @xmath3 trees * * t**@xmath115 ,  , * * t**@xmath116 .",
    "letting @xmath377 , we consider solutions of eq .",
    "( [ eq : r_t ] ) in the form @xmath378 separating the dependence on the current potentials from that on the currents , the extra gaussian distribution of @xmath379 in eq .",
    "( [ eq : r_td ] ) prevents the integration of @xmath379 from diverging .",
    "indeed , in the @xmath74 limit and as @xmath18 , the function @xmath380 becomes independent of @xmath69 and can be represented as @xmath381{\\frac{\\beta\\epsilon}{2\\pi}}.\\ ] ] the recursion relation involving the currents becomes decoupled to give @xmath382          \\nonumber\\\\      & & \\times\\theta \\left ( \\sum\\limits_{k=1}^{c-1 } { y_k}-y\\right .",
    "+ \\lambda _ { v({\\mathbf t})}\\biggr )      \\exp\\left[-\\beta\\sum\\limits_{k=1}^{c-1}{\\phi(y_k)}\\right ]      \\nonumber\\\\      & & \\times\\exp\\left\\{-\\left\\langle \\ln \\left\\ { \\prod\\limits_{k=1}^c          { \\left [ { \\int { dy_k z_v ( y_k \\vert { \\mathbf t}}_k ) } \\right ] }      \\right.\\right.\\right .          \\\\",
    "& & \\left.\\left.\\left.\\times      \\theta \\left ( { \\sum\\limits_{k=1}^c { y_k } + \\lambda _ v }          \\right)\\exp \\left [ { -\\beta \\sum\\limits_{k=1}^c { \\phi ( y_k ) } }          \\right ] \\right\\ } \\right\\rangle _ \\lambda\\right\\ } \\ .",
    "\\nonumber\\end{aligned}\\ ] ] let @xmath383**t * * ) be the vertex free energy when a current @xmath14 is drawn from the vertex of a tree * t * , given by @xmath384 .",
    "then the recursion relation of the free energy is given by eq .",
    "( [ recurt ] ) , which in the zero - temperature limit becomes eq .",
    "( [ recur ] ) .    to calculate the free energy in the replica approach , one returns to eq .",
    "( [ zn ] ) .",
    "in the second term of the exponential argument therein , one eliminates @xmath385 by eq .",
    "( [ eq : qqhat ] ) , expresses @xmath386 in terms of @xmath387 by eq .",
    "( [ genf ] ) and , in turn , @xmath388 by eq .",
    "( [ moments ] ) . in the third term",
    ", one expresses @xmath365 in terms of @xmath386 by eq .",
    "( [ eq : x_expression ] ) and follow similar steps .",
    "the result is @xmath389      \\biggr\\}^n \\biggr\\rangle_\\lambda      \\\\          & & + \\ln \\left\\langle \\left\\ {          \\int\\!{d\\nu } \\prod\\limits_{k=1}^c { \\left [          { \\int \\!{d\\nu_k } r(\\nu , \\nu_k \\vert { \\rm { \\bf t}}_k ) } \\right ] }      \\theta \\!\\left ( \\sum\\limits_{k=1}^c { \\nu _ k }          \\right.\\right.\\right .      \\nonumber\\\\      & & \\left.\\left .",
    "\\!-\\!c\\nu \\!\\!+\\lambda \\biggr )          \\exp \\left ( { \\!-\\!\\beta \\sum\\limits_{k=1}^c { \\phi ( \\nu          \\!-\\!\\nu_k ) } -\\frac{\\beta\\epsilon}{2}\\nu^2          } \\right ) \\right\\}^n \\right\\rangle _ \\lambda .",
    "\\nonumber\\end{aligned}\\ ] ] using the recursion relation eq .",
    "( [ eq : r_t ] ) , one can show that the sum of the first two terms in the exponential argument vanishes . in the limit @xmath390",
    "one obtains the free energy @xmath391",
    "\\theta \\left ( \\sum_{k=1}^c\\nu_k\\right.\\right.\\right .          \\nonumber\\\\      & & \\left.\\left.- c",
    "\\nu + \\lambda \\biggr )          \\exp \\left [ { -\\beta \\sum_{k=1}^c {          \\phi ( \\nu -\\nu _ k ) } -\\frac{\\beta\\epsilon}{2 } \\nu^2 } \\right ]          \\right\\ } \\right\\rangle _ \\lambda .",
    "\\nonumber\\\\ \\label{eq : freer}\\end{aligned}\\ ] ] using the vertex free energy representation , one then straightforwardly rewrites eq .",
    "( [ eq : freer ] ) as eq .",
    "( [ free ] ) ( up to a constant ) .",
    "to show that the vertex free energies are directly related to passed messages in the bayesian approximation , one resorts to formulating the problem on a bipartite graph and deriving the closed set of equations that relate to the messages passed from variables to interaction nodes and vice versa .",
    "the representation of the problem as a bipartite graph is shown in fig .  [",
    "fig : bipartite ] , with the current variables @xmath14 on the left and the interaction variables @xmath392 on the right . using conventional notations  @xcite one",
    "can easily derive the closed set of equations : @xmath393 where @xmath394 is the posterior of @xmath5 given @xmath395 , @xmath396 is the prior of @xmath5 , and @xmath397 is the likelihood of @xmath395 given @xmath5 . as shown in fig .",
    "[ fig : bipartite ] , the message from @xmath395 to @xmath5 is @xmath394 , and the message from @xmath5 to @xmath398 is @xmath397 .",
    "thus , @xmath399 using @xmath400 and substituting the expression for @xmath401 ( [ eq : q ] ) into the @xmath402 equation ( [ eq : p ] ) one obtains @xmath403 let @xmath404 . then on taking the logarithm of both sides of eq .",
    "( [ rij ] ) and normalizing , one retrieves eq .",
    "( [ free ] ) if @xmath405 is identified with the vertex free energy @xmath406 , @xmath407\\biggr\\ }          -f_{\\rm av}.      \\nonumber\\\\\\end{aligned}\\ ] ] this means that the vertex free energy @xmath406 is equivalent to @xmath408 times the logarithm of the message @xmath397 from @xmath5 to @xmath398 .                                            if @xmath13 is not an even function of @xmath14 , analyses along the lines of appendix a show that @xmath409 in the boltzmann factors of eq .",
    "( [ recurt ] ) have to be replaced by @xmath410 , where @xmath411 should be quench averaged .",
    "compared with the results in fig .",
    "2(a ) inset of @xcite , here we have an even faster convergence to the high connectivity limit , after we have separated the contribution of the continuous component at @xmath264 ."
  ],
  "abstract_text": [
    "<S> inference and optimization of real - value edge variables in sparse graphs are studied using the bethe approximation and replica method of statistical physics . </S>",
    "<S> equilibrium states of general energy functions involving a large set of _ real _ edge - variables that interact at the network nodes are obtained in various cases . when applied to the representative problem of network resource allocation , </S>",
    "<S> efficient distributed algorithms are also devised . scaling properties with respect to the network connectivity and the resource availability </S>",
    "<S> are found , and links to probabilistic bayesian approximation methods are established . </S>",
    "<S> different cost measures are considered and algorithmic solutions in the various cases are devised and examined numerically . </S>",
    "<S> simulation results are in full agreement with the theory . </S>"
  ]
}
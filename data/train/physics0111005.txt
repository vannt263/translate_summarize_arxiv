{
  "article_text": [
    "the swiss light source ( sls ) is a synchrotron light source located at the paul scherrer institute ( psi ) in switzerland .",
    "its most major component , a 2.4 gev electron storage ring , was recently commissioned and is now delivering light of high brilliance to experimenters from multiple disciplines .",
    "several high - level beam dynamics ( bd ) applications have been developed for the operation and monitoring of the sls accelerator facilities .",
    "[ fig_1 ] captures typical components required by bd applications .",
    "their number and demand on computer resources motivated , in part , a desire for a distribued computing environment . to this end , the common object request broker ( corba ) ,",
    "an emerging standard for distributed object computing ( doc ) , has been employed .",
    "its use at the sls has allowed us to realize the potential benefits of distributed computing and to simultaneously exploit features inherent to corba , such as the interoperability between objects of different race ( language ) and creed ( platform ) .",
    "complex tasks , such as the modeling of the sls accelerators , can thus be handled by dedicated computers , and developed into reusable components that can be accessed through remote method invocations .",
    "perservering with the notion of doc and developing the entire suite of bd components as corba objects , further elevates the level    0.05 cm     at which applications are designed and implemented .",
    "platforms hosting high - level software applications are no longer limited to the libraries and extensions available to the host operating system as the introduction of a corba middleware layer serves to _ extend _ the developers chosen programming language .",
    "bd application developers are , henceforth , able to focus on the specifics of the application at hand , such as determining user - friendly graphical interfaces , rather than struggle with the intricate internals of numerous application program interfaces ( apis ) and low - level communication protocols .",
    "the most fundamental component of corba is the object request broker ( orb ) whose task is to facilitate communication between objects . given an interoperable object reference ( ior ) , the orb is able to locate target objects and transmit data to and fro remote method invocations .",
    "the interface to a corba object is specified using the corba interface definition language ( idl ) .",
    "an idl compiler translates the idl definition into an application programming language , such as c++ or java , generating idl stubs and skeletons that respectively provide the framework for client - side and server - side proxy code .",
    "compilation of applications incorporating idl stubs provides a strongly - typed static invocation interface ( sii ) .",
    "conversely , a more flexible communication mechanism can be established through the use of the dynamic invocation interface ( dii ) and the dynamic skeleton interface ( dsi ) allowing objects to be created without _",
    "prior _ knowledge of the idl interface . in such cases ,",
    "a description of the interface is retrieved at runtime from an interface repository ( ifr ) , a database containing the pertinent meta - data .",
    "requests and responses between objects are delivered in a standard format defined by the internet inter - orb protocol ( iiop ) , a communications protocol which adheres to the corba general inter - orb protocol ( giop ) specification and , as such , acts as the base for corba interoperability on the internet .",
    "requests are marshaled in a platform independent format , by the client stub ( or in the dii ) , and unmarshaled on the server - side into a platform specific format by the idl skeleton ( or in the dsi ) and the object adaptor , which serves as a mediator between an object s implementation , the servant , and its orb , thereby decoupling user code from orb processing . in its mandatory version , the portable object adaptor ( poa ) provides corba objects with a common set of methods for accessing orb functions , ranging from user authentication to object activation and object persistence .",
    "it s most basic task , however , is to create object references and to dispatch orb requests aimed at target objects to their respective servants .",
    "the characteristics of the poa are defined at creation time by a set of poa policies .",
    "a server can host any number of poas , each with its own set of policies to govern the processing of requests . among the more advanced features of",
    "the poa is the servant manager which assumes the role of reactivating server objects ( servants ) as they are required .",
    "it also provides a mechanism to save and restore an object s state .",
    "this , coupled with the use of the implementation repository ( imr ) , that handles the automated start and restart of servers , realizes object persistency .",
    "requests for server reactivation can , alternatively , be delegated to a single default servant which provides implementations for many objects , thereby increasing the scalability for corba servers .",
    "0.05 cm     0.04 cm    fig .",
    "[ fig_orb ] shows the components of the corba architectural model .",
    "the orb core is implemented as a runtime library linked into client - server applications .      despite the plethora of new terms and concepts introduced , corba ,",
    "nevertheless , remains true to the doc objective of providing developers with familiar object - oriented techniques with which to program distributed applications .",
    "indeed , from the client perspective , once an ior is obtained ( typically from a naming service which maps names to object references ) a remote method invocation essentially takes on the welcoming appearance of a local function call : ` object->operation(arguments ) ; ` whilst the communication details of client - server programming are essentially hidden from the client , a more intimate involvement with the orb is required when developing servers .",
    "in particular appropriate poa policies need to be chosen to configure object adaptors that best fufill the requirements of the server .",
    "transient and persistent objects are two categories of objects that relate to the lifespan policies of the poa .",
    "a transient object is short - lived with a lifetime that is bounded by the poa in which it was created . a persistent object , on the other hand ,",
    "is long - lived with a lifetime that is unbounded .",
    "it can consequently outlive the very server process wherein it was created .",
    "this has several advantages .",
    "a server may be shutdown whenever it is not needed to save resources .",
    "server updates can be implemented transparantly by restarting the server . in developing a doc environment ,",
    "the command to start a server may be replaced with a remote shell invocation and the next server instance run remotely , without the client being aware .",
    "persistent objects also maintain their identify after a server crash . whilst the poa supports and implements persistent objects , it does not handle the administrative aspects of server activations .",
    "this is managed by the imr which stores an activation record for each server process ; it is consulted automatically whenever a ( re-)launch of a server is mandated .",
    "0.05 cm     0.04 cm    fig .",
    "[ fig_imr ] illustrates the role of the imr in the ( re-)activation of servers .",
    "the first instance of the server is started by an administrative procedure ( imr activate ) and object references , pointing to the poa mediator within the orb daemon process , are exported to the naming service .",
    "the orb daemon listens for corba client connection attempts and assists the client in connecting to its destined server .",
    "this is done through the poa mediator whose task is to intercept initial client requests , to ( re-)activate the server if so required , and to forward the actual server location to the client for all subsequent operations ( step 2 ) .",
    "thus , by virtue of the capabilities of the poa , and the activation techniques of the imr , bd applications are never starved of the servers they require .      a reactive , event - based , form of programming is also supported by the corba event service which provides services for the creation and management of corba event channels .",
    "these may be used by corba supplier / consumer clients to propagate events asynchronously on a push or pull basis .",
    "event channels are created and registered with the corba naming service allowing clients to obtain object references in the usual manner .",
    "communication is anonymous in that the supplier does not require knowledge of the receiving consumers .",
    "publicized inadequacies of the event service are a lack of explicit quality of service ( qos ) control , the necessity of propagating event data with type _",
    "corba::any _ , and the absence of event filtering . nevertheless ,",
    "by applying a few simple design techniques , these limitations can be largely circumvented and the corba event service has been usefully employed in the monitoring of hardware devices and in the distribution of recalibrated data to client consumers . the corba event service is ultimately to be replaced by the corba notification service which systematically addresses the shortcomings of the event service .",
    "server objects , typically of persistent type , have been developed using the corba product mico  @xcite , a fully compliant implementation of the corba 2.3 standard .",
    "the services these objects provide are briefly reported here .",
    "an expanded description , together with the specifications of the hardware and system components of the server hosts , appears elsewhere  @xcite .",
    "a dedicated host runs the servers that perform the computer intensive modeling of the sls accelerators .",
    "procedures utilise the complete tracy accelerator physics library , enabling clients to employ accelerator optimization procedures _ online_.      the cdev c++ class controls library provides the api to the epics - based accelerator device control system .",
    "the cdev server supplies functionality for both synchronous and asynchronous interactions with the control system .",
    "monitored devices and recalibrated data are propagated to clients through corba event channels .",
    "a database server provides access to oracle instances through the oracle template library ( otl ) and the oracle call interface ( oci ) .",
    "methods executing sql statements that perform database retrieval and modification operations have been provided .",
    "interestingly , database access through the corba interface ( _ with _ data marshaling ) takes half the time than that through the jdbc api .",
    "a corba message server has been developed using the the unix syslog logging facility , profiting directly from the reliability of standard unix services .",
    "run - time messages are sent to the logger with various priority levels , the threshold for which can be adjusted dynamically for any given servant .",
    "this is particularly useful during the development stage , where for instance , debugging can be activated without the need to recompile .",
    "several applications , written mainly in tcl / tk or java , have been successfully introduced for the commissioning and operation of the sls booster and storage rings @xcite , making ample use of the corba framework provided .",
    "server objects were extensively tested through invocations initiated by a variety of client processes .",
    "operator intervention was minimal with clients able to interact spontaneously with the many servers and to display their event data .",
    "this is exemplified by the slow global orbit feedback system ( 3 hz sampling rate ) , which is both a consumer to event generated data and a party to remote methods invocations on a variety of servers .",
    "a fast version , for which dedicated low - level hardware is to be installed ( 4 khz sampling rate ) , will challenge the reaches of our model @xcite .",
    "the corba middleware has served to extend the capabilities of the programming languages used by bd application developers , thereby elevating the level at which high - level software applications are designed and implemented .",
    "the power and flexibility of the poa , coupled with the server activation records stored within the imr , has been exploited to provide a robust and modular corba based client - server framework .",
    "the model has been proved to be both reliable and stable by the many applications deployed in the commissioning and first operation of the sls ."
  ],
  "abstract_text": [
    "<S> beam dynamics applications at the swiss light source ( sls ) have benefitted from a distributed computing environment in which the common object request broker architecture ( corba ) forms the middleware layer and access point to several different software components . </S>",
    "<S> a suite of remote corba server objects provides the client with a convenient and uniform interface to the cdev ( common device ) controls library , the tracy accelerator physics package , the oracle database , and an event - logging facility . </S>",
    "<S> use is made of methods provided by the corba portable object adaptor for accessing orb functions , such as object activation and object persistence , the implementation repository for the automatic reactivation of servers , and the corba event service for the propagation of controls and physics data . </S>",
    "<S> an account of the corba framework , as used by applications in the commissioning and first operation of the sls , is presented . </S>"
  ]
}
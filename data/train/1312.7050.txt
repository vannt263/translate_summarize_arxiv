{
  "article_text": [
    "in recent years , distributed control and optimization of multi - agent systems have drawn much research attention due to their broad applications in various fields of science , engineering , computer science , and social science .",
    "various tasks including consensus , localization , and convex optimization can be accomplished cooperatively for a group of autonomous agents via distributed algorithm design and local information exchange @xcite .",
    "distributed optimization has been widely investigated for agents to achieve a global optimization objective by cooperating with each other @xcite .",
    "furthermore , distributed optimization algorithms in the presence of adversaries have gained rapidly growing interest @xcite . for instance , a non - model based approach was proposed for seeking a nash equilibrium of noncooperative games in @xcite , while distributed methods to compute nash equilibria based on extreme - seeking technique were developed in @xcite . a distributed continuous - time set - valued dynamical system solution to seek a nash equilibrium of zero - sum games",
    "was first designed for undirected graphs and then for weight - balanced directed graphs in @xcite .",
    "it is worthwhile to mention that , in the special case of additively separable objective functions , the considered distributed nash equilibrium computation problem is equivalent to the well - known distributed optimization problem : multiple agents cooperatively minimize a sum of their own convex objective functions @xcite .    one main approach to distributed optimization is based on subgradient algorithms with each node computing a subgradient of its own objective function .",
    "distributed subgradient - based algorithms with constant and time - varying stepsizes , respectively , were proposed in @xcite with detailed convergence analysis . a distributed iterative algorithm that avoids choosing a diminishing stepsize",
    "was proposed in @xcite .",
    "both deterministic and randomized versions of distributed projection - based protocols were studied in @xcite .    in existing works on distributed optimization ,",
    "most of the results were obtained for switching weight - balanced graphs because there usually exists a common lyapunov function to facilitate the convergence analysis in this case @xcite . sometimes , the weight - balance condition is hard to preserve in the case when the graph is time - varying and with communication delays @xcite , and it may be quite restrictive and difficult to verify in a distributed setting .",
    "however , in the case of weight - unbalanced graphs , there may not exist a common ( quadratic ) lyapunov function or it may be very hard to construct one even for simple consensus problems @xcite , and hence , the convergence analysis of distributed problems become extremely difficult . recently",
    ", many efforts have been made to handle the weight unbalance problem , though very few results have been obtained on distributed optimization .",
    "for instance , the effect of the perron vector of the adjacency matrix on the optimal convergence of distributed subgradient and dual averaging algorithms were investigated for a fixed weight - unbalanced graph in @xcite .",
    "some methods were developed for the unbalanced graph case such as the reweighting technique @xcite ( for a fixed graph with a known perron vector ) and the subgradient - push methods @xcite ( where each node has to know its out - degree all the time ) . to our knowledge , there are no theoretical results on distributed nash equilibrium computation for switching weight - unbalanced graphs .    in this paper , we consider the distributed zero - sum game nash equilibrium computation problem proposed in @xcite , where a multi - agent network consisting of two subnetworks , with one minimizing the objective function and the other maximizing it .",
    "the agents play a zero - sum game .",
    "the agents in two different subnetworks play antagonistic roles against each other , while the agents in the same subnetwork cooperate .",
    "the objective of the network is to achieve a nash equilibrium via distributed computation based on local communications under time - varying connectivity .",
    "the considered nash equilibrium computation problem is motivated by power allocation problems @xcite and saddle point searching problems arising from lagrangian dual optimization problems @xcite .",
    "the contribution of this paper can be summarized as follows :    * we propose a subgradient - based distributed algorithm to compute a saddle - point nash equilibrium under time - varying graphs , and show that our algorithm with homogeneous stepsizes can achieve a nash equilibrium under uniformly jointly strongly connected ( ujsc ) weight - balanced digraphs .",
    "* we further consider the weight - unbalanced case , though most existing results on distributed optimization were obtained for weight - balanced graphs , and show that distributed homogeneous - stepsize algorithms may fail in the unbalanced case , even for the special case of identical subnetworks .",
    "* we propose a heterogeneous stepsize rule and study how to cooperatively find a nash equilibrium in general weight - unbalanced cases .",
    "we find that , for ujsc time - varying digraphs , there always exist ( heterogeneous ) stepsizes to make the network achieve a nash equilibrium .",
    "then we construct an adaptive algorithm to update the stepsizes to achieve a nash equilibrium in two standard cases : one with a common left eigenvector associated with eigenvalue one of adjacency matrices and the other with periodically switching graphs .",
    "the paper is organized as follows .",
    "section ii gives some preliminary knowledge , while section iii formulates the distributed nash equilibrium computation problem and proposes a novel algorithm .",
    "section iv provides the main results followed by section v that contains all the proofs of the results .",
    "then section vi provides numerical simulations for illustration .",
    "finally , section vii gives some concluding remarks .",
    "notations : @xmath0 denotes the euclidean norm , @xmath1 the euclidean inner product and @xmath2 the kronecker product .",
    "@xmath3 is a ball with @xmath4 the center and @xmath5 the radius , @xmath6 is the set of all @xmath7-dimensional positive stochastic vectors .",
    "@xmath8 denotes the transpose of vector @xmath4 , @xmath9 the @xmath10-th row and @xmath11-th column entry of matrix @xmath12 and diag@xmath13 the diagonal matrix with diagonal elements @xmath14 .",
    "@xmath15 is the vector of all ones with appropriate dimension .",
    "in this section , we give preliminaries on graph theory @xcite , convex analysis @xcite , and nash equilibrium .      a digraph ( directed graph )",
    "@xmath16 consists of a node set @xmath17 and an arc set @xmath18 . associated with graph @xmath19",
    ", there is a ( weighted ) adjacency matrix @xmath20 with nonnegative adjacency elements @xmath21 , which are positive if and only if @xmath22 .",
    "node @xmath11 is a neighbor of node @xmath10 if @xmath23 .",
    "assume @xmath24 for @xmath25 .",
    "a path in @xmath19 from @xmath26 to @xmath27 is an alternating sequence @xmath28 of nodes @xmath29 and arcs @xmath30 .",
    "@xmath19 is said to be bipartite if @xmath31 can be partitioned into two disjoint parts @xmath32 and @xmath33 such that @xmath34 .",
    "consider a multi - agent network @xmath35 consisting of two subnetworks @xmath36 and @xmath37 with respective @xmath38 and @xmath39 agents .",
    "@xmath35 is described by a digraph , denoted as @xmath40 , which contains self - loops , i.e. , @xmath41 for each @xmath10 . here",
    "@xmath42 can be partitioned into three digraphs : @xmath43 with @xmath44 , and a bipartite graph @xmath45 , where @xmath46 and @xmath47 .",
    "in other words , @xmath36 and @xmath37 are described by the two digraphs , @xmath48 and @xmath49 , respectively , and the interconnection between @xmath36 and @xmath37 is described by @xmath50 . here",
    "@xmath50 is called bipartite without isolated nodes if , for any @xmath51 , there is at least one node @xmath52 such that @xmath53 for @xmath54 let @xmath55 denote the adjacency matrix of @xmath56 .",
    "digraph @xmath57 is strongly connected if there is a path in @xmath57 from @xmath10 to @xmath11 for any pair node @xmath58 .",
    "a node is called a root node if there is at least a path from this node to any other node . in the sequel , we still write @xmath51 instead of @xmath59 for simplicity if there is no confusion .",
    "let @xmath60 be the adjacency matrix of @xmath57 .",
    "graph @xmath57 is weight - balanced if @xmath61 for @xmath51 ; and weight - unbalanced otherwise .",
    "a vector is said to be stochastic if all its components are nonnegative and the sum of its components is one .",
    "a matrix is a stochastic matrix if each of its row vectors is stochastic .",
    "a stochastic vector is positive if all its components are positive .",
    "let @xmath62 be a stochastic matrix .",
    "define @xmath63 as the graph associated with @xmath64 , where @xmath65 if and only if @xmath66 ( its adjacency matrix is @xmath64 ) . according to perron - frobenius theorem @xcite",
    ", there is a unique positive stochastic left eigenvector of @xmath64 associated with eigenvalue one if @xmath67 is strongly connected .",
    "we call this eigenvector the perron vector of @xmath64 .",
    "a set @xmath68 is convex if @xmath69 for any @xmath70 and @xmath71 .",
    "a point @xmath4 is an interior point of @xmath72 if @xmath73 for some @xmath5 . for a closed convex set @xmath72 in @xmath74",
    ", we can associate with any @xmath75 a unique element @xmath76 satisfying @xmath77 , where @xmath78 is the projection operator onto @xmath72 .",
    "the following property for the convex projection operator @xmath78 holds by lemma 1 ( b ) in @xcite , @xmath79 is ( strictly ) convex if @xmath80 for any @xmath81 and @xmath71 .",
    "a function @xmath82 is ( strictly ) concave if @xmath83 is ( strictly ) convex .",
    "a convex function @xmath84 is continuous .    for a convex function @xmath82",
    ", @xmath85 is a subgradient of @xmath82 at point @xmath86 if @xmath87 , @xmath88 for a concave function @xmath82 , @xmath89 is a subgradient of @xmath82 at @xmath86 if @xmath90 . the set of all subgradients of ( convex or concave )",
    "function @xmath82 at @xmath86 is denoted by @xmath91 , which is called the subdifferential of @xmath82 at @xmath86 .",
    "a function @xmath92 is ( strictly ) convex - concave if it is ( strictly ) convex in first argument and ( strictly ) concave in second one .",
    "given a point @xmath93 , we denote by @xmath94 the subdifferential of convex function @xmath95 at @xmath96 and @xmath97 the subdifferential of concave function @xmath98 at @xmath99 .",
    "a pair @xmath100 is a saddle point of @xmath101 on @xmath102 if @xmath103 the next lemma presents a necessary and sufficient condition to characterize the saddle points ( see proposition 2.6.1 in @xcite ) .",
    "[ lema1 ] let @xmath104 be two closed convex sets .",
    "then a pair @xmath105 is a saddle point of @xmath101 on @xmath102 if and only if @xmath106 and @xmath107 is an optimal solution of optimization problem @xmath108 while @xmath109 is an optimal solution of optimization problem @xmath110    from lemma [ lema1 ] , we find that all saddle points of @xmath101 on @xmath102 yield the same value .",
    "the next lemma can be obtained from lemma [ lema1 ] .",
    "[ lem01 ] if @xmath111 and @xmath112 are two saddle points of @xmath101 on @xmath102 , then @xmath113 and @xmath114 are also saddle points of @xmath101 on @xmath102 .",
    "[ lema2 ] denote by @xmath115 the set of all saddle points of function @xmath101 on @xmath116 , @xmath117 and @xmath118 the optimal solution sets of optimization problems ( [ pro1 ] ) and ( [ pro2 ] ) , respectively .",
    "then from lemma [ lema1 ] it is not hard to find that if @xmath115 is nonempty , then @xmath117 , @xmath118 are nonempty , convex , and @xmath119 .",
    "moreover , if @xmath120 and @xmath121 are convex , compact and @xmath101 is convex - concave , then @xmath115 is nonempty ( see proposition 2.6.9 in @xcite ) .",
    "the saddle point computation can be related to a zero - sum game .",
    "in fact , a ( strategic ) game is described as a triple @xmath122 where @xmath123 is the set of all players ; @xmath124 , @xmath7 is the number of players , @xmath125 is the set of actions available to player @xmath10 ; @xmath126 , @xmath127 is the payoff function of player @xmath10 .",
    "the game is said to be zero - sum if @xmath128 , where @xmath129 denotes the actions of all players other than @xmath10 . a profile action @xmath130 is said to be a nash equilibrium if @xmath131 for each @xmath132 and @xmath133 .",
    "the nash equilibria set of a two - person zero - sum game ( @xmath134 ) is exactly the saddle point set of payoff function @xmath135 .",
    "in this section , we introduce a distributed nash equilibrium computation problem and then propose a subgradient - based algorithm as a solution .    consider a network @xmath35 consisting of two subnetworks @xmath36 and @xmath37 .",
    "agent @xmath10 in @xmath36 is associated with a convex - concave objective function @xmath136 , and agent @xmath10 in @xmath37 is associated with a convex - concave objective function @xmath137 .",
    "each agent only knows its own objective function .",
    "the two subnetworks have a common sum objective function with closed convex constraint sets @xmath138 : @xmath139then the network is engaged in a ( generalized ) zero - sum game @xmath140 , where @xmath36 and @xmath37 are viewed as two players , their respective payoff functions are @xmath141 and @xmath142 .",
    "the objective of @xmath36 and @xmath37 is to achieve a nash equilibrium of the zero - sum game .    despite that the contribution of this paper is mainly theoretical , the considered model appears also in applications .",
    "here we illustrate that by discussing two practical examples in the literature . in the first example , from @xcite note that for multiple gaussian communication channels with budget constrained signal power and noise levels , the capacity of each channel is concave in signal power and convex in noise level .",
    "suppose there are two subnetworks , one of which is more critical than the other .",
    "the critical subnetwork aims to maximize its capacity by raising its transmission power while the other aims to reduce the interference to other channels by minimizing its transmission power ( and thus the capacity ) .",
    "the objective of the two subnetworks is then to find the nash equilibrium of the sum of all channels capacities , see remark 3.1 in @xcite for more details . for the second example , recall that many practical problems ( for example , distributed estimation , resource allocation , optimal flow control ) can be formulated as distributed convex constrained optimization problems , in which the associated lagrangian function can be expressed as a sum of individual lagrangian functions , which are convex in the optimization variable and linear ( hence concave ) in the lagrangian multiplier . under salter s condition ,",
    "the optimal solutions can be found by computing the saddle - points of the convex - concave lagrangian function , or equivalently , the nash equilibrium of the corresponding zero - sum game , see @xcite for further discussions .",
    "we next provide a basic assumption .",
    "* a1 * _ ( existence of saddle points ) _ for each stochastic vector @xmath143 , @xmath144 has at least one saddle point over @xmath102 .",
    "clearly , * a1 * holds if @xmath120 and @xmath121 are bounded ( see proposition 2.6.9 in @xcite for other conditions guaranteeing the existence of saddle points ) .",
    "however , in this paper we do not require @xmath120 and @xmath121 to be bounded .",
    "let @xmath145 denote the set of all saddle points of @xmath146 on @xmath102 .",
    "notice that @xmath147 is also the set of nash equilibria of the generalized zero - sum game .",
    "denote the state of node @xmath148 as @xmath149 and the state of node @xmath150 as @xmath151 at time @xmath152 .",
    "[ def1 ] the network @xmath35 is said to achieve a nash equilibrium if , for any initial condition @xmath153 and @xmath154 , there are @xmath155 and @xmath156 such that @xmath157    the interconnection in the network @xmath35 is time - varying and modeled as three digraph sequences : @xmath158 where @xmath159 and @xmath160 are the graphs to describe subnetworks @xmath36 and @xmath37 , respectively , and @xmath161 is the bipartite graph to describe the interconnection between @xmath36 and @xmath37 at time @xmath162 . for @xmath163 , denote by @xmath164 the union graph with node set @xmath165 and arc set @xmath166 , and @xmath167 the union graph with node set @xmath168 and arc set @xmath169 for @xmath170 .",
    "the following assumption on connectivity is made .    * a2 * _ ( connectivity ) _",
    "( i ) the graph sequence @xmath50 is uniformly jointly bipartite ; namely , there is an integer @xmath171 such that @xmath172 is bipartite without isolated nodes for @xmath173 .",
    "\\(ii ) for @xmath170 , the graph sequence @xmath57 is uniformly jointly strongly connected ( ujsc ) ; namely , there is an integer @xmath174 such that @xmath175 is strongly connected for @xmath173 .",
    "the agents in @xmath176 connect directly with those in @xmath177 for all the time in @xcite , while the agents in two subnetworks are connected at least once in each interval of length @xmath178 according to * a2 * @xmath179 .",
    "in fact , it may be practically hard for the agents of different subnetworks to maintain communications all the time .",
    "moreover , even if each agent in @xmath176 can receive the information from @xmath177 , agents may just send or receive once during a period of length @xmath178 to save energy or communication cost .    to handle the distributed nash equilibrium computation problem",
    ", we propose a subgradient - based algorithm , called _ distributed nash equilibrium computation algorithm _ : @xmath180 with @xmath181 where @xmath182 , @xmath183 are the stepsizes at time @xmath184 , @xmath185 is the time - varying weight of arc @xmath186 , @xmath187 is the set of neighbors in @xmath168 of node @xmath10 at time @xmath184 , and @xmath188 which is the last time before @xmath184 when node @xmath189 has at least one neighbor in @xmath190 .",
    "when all objective functions @xmath191 are additively separable , i.e. , @xmath192 , the considered distributed nash equilibrium computation problem is equivalent to two separated distributed optimization problems with respective objective functions @xmath193 , @xmath194 and constraint sets @xmath120 , @xmath121 . in this case , the set of nash equilibria is given by @xmath195 since @xmath196 and @xmath197 , algorithm ( [ 6 ] ) becomes in this case the well - known distributed subgradient algorithms @xcite .    to deal with _",
    "weight - unbalanced _ graphs , some methods , the rescaling technique @xcite and the push - sum protocols @xcite have been proposed for average consensus problems ; reweighting the objectives @xcite and the subgradient - push protocols @xcite for distributed optimization problems .",
    "different from these methods , in this paper we propose a distributed algorithm to handle weight - unbalanced graphs when the stepsizes taken by agents are not necessarily the same .",
    "different from the extreme - seeking techniques used in @xcite , our method uses the subgradient to compute the nash equilibrium .",
    "the next assumption was also used in @xcite .    * a3 * _ ( weight rule ) _ ( i ) there is @xmath198 such that @xmath199 for all @xmath200 and @xmath201 ;    \\(ii ) @xmath202 for all @xmath184 and @xmath203 ;    \\(iii ) @xmath204 for @xmath205    conditions ( ii ) and ( iii ) in * a3 * state that the information from an agent s neighbors is used through a weighted average .",
    "the next assumption is about subgradients of objective functions .",
    "* a4 * _ ( boundedness of subgradients ) _ there is @xmath206 such that , for each @xmath207 , @xmath208    obviously , * a4 * holds if @xmath120 and @xmath121 are bounded .",
    "a similar bounded assumption has been widely used in distributed optimization @xcite .",
    "note that the stepsize in our algorithm ( [ 6 ] ) is _ heterogenous _ ,",
    "i.e. , the stepsizes may be different for different agents , in order to deal with general unbalanced cases .",
    "one challenging problem is how to select the stepsizes @xmath209 and @xmath210 .",
    "the _ homogenous _ stepsize case is to set @xmath211 for @xmath212 and all @xmath184 , where @xmath213 is given as follows .",
    "* a5 * @xmath213 is non - increasing , @xmath214 and @xmath215 .",
    "conditions @xmath214 and @xmath215 in * a5 * are well - known in homogeneous stepsize selection for distributed subgradient algorithms for distributed optimization problems with weight - balanced graphs , e.g. , @xcite .",
    "while weight - balanced graphs are considered in @xcite , we consider general ( weight - unbalanced ) digraphs , and provide a heterogeneous stepsize design method for the desired nash equilibrium convergence .",
    "in this section , we start with homogeneous stepsizes to achieve a nash equilibrium for weight - balanced graphs ( in section iv.a )",
    ". then we focus on a special weight - unbalanced case to show how a homogeneous - stepsize algorithm may fail to achieve our aim ( in section iv.b ) .",
    "finally , we show that the heterogeneity of stepsizes can help us achieve a nash equilibrium in some weight - unbalanced graph cases ( in section iv.c ) .      here",
    "we consider algorithm ( [ 6 ] ) with homogeneous stepsizes @xmath216 for weight - balanced digraphs .",
    "the following result , in fact , provides two sufficient conditions to achieve a nash equilibrium under switching weight - balanced digraphs .",
    "[ thm1 ] suppose * a1**a5 * hold and digraph @xmath217 is weight - balanced for @xmath173 and @xmath170 .",
    "then the multi - agent network @xmath35 achieves a nash equilibrium by algorithm ( [ 6 ] ) with the homogeneous stepsizes @xmath213 if either of the following two conditions holds :    \\(i ) @xmath146 is strictly convex - concave ;    \\(ii ) @xmath147 contains an interior point .",
    "the proof can be found in section v.b .",
    "the authors in @xcite developed a continuous - time dynamical system to solve the nash equilibrium computation problem for fixed weight - balanced digraphs , and showed that the network converges to a nash equilibrium for a strictly convex - concave differentiable sum objective function .",
    "different from @xcite , here we allow time - varying communication structures and a non - smooth objective function @xmath146 .",
    "the same result may also hold for the continuous - time solution in @xcite under our problem setup , but the analysis would probably be much more involved .      in the preceding subsection , we showed that a nash equilibrium can be achieved with homogeneous stepsizes when the graphs of two subnetworks are weight - balanced . here",
    "we demonstrate that the homogenous stepsize algorithm may fail to guarantee the nash equilibrium convergence for general weight - unbalanced digraphs unless certain conditions about the objective function hold .",
    "consider a special case , called the completely identical subnetwork case , i.e. , @xmath36 and @xmath37 are completely identical : @xmath218 in this case , agents @xmath219 have the same objective function , neighbor set and can communicate with each other at all times .",
    "each pair of agents @xmath219 can be viewed as one agent labeled as `` @xmath10 ''",
    ". then algorithm ( [ 6 ] ) with homogeneous stepsizes @xmath213 reduces to the following form : @xmath220 for @xmath221 , where @xmath222 , @xmath223 .",
    "similar distributed saddle point computation algorithms have been proposed in the literature , for example , the distributed saddle point computation for the lagrange function of constrained optimization problems in @xcite .",
    "in fact , algorithm ( [ spe ] ) can be used to solve the following distributed saddle - point computation problem : consider a network @xmath36 consisting of @xmath38 agents with node set @xmath224 , its objective is to seek a saddle point of the sum objective function @xmath225 in a distributed way , where @xmath226 can only be known by agent @xmath10 . in ( [ spe ] ) , @xmath227 is the state of node `` @xmath10 ''",
    ". moreover , algorithm ( [ spe ] ) can be viewed as a distributed version of the following centralized algorithm : @xmath228 which was proposed in @xcite to solve the approximate saddle point problem with a constant stepsize .",
    "we first show that , algorithm ( [ 6 ] ) with homogeneous stepsizes ( or equivalently ( [ spe ] ) ) can not seek the desired nash equilibrium though it is convergent , even for _ fixed _ weight - unbalanced graphs .",
    "[ th6.3 ] suppose * a1 * , * a3**a5 * hold , and @xmath229 are strictly convex - concave and the graph is fixed with @xmath230 strongly connected .",
    "then , with ( [ spe ] ) , all the agents converge to the unique saddle point , denoted as @xmath231 , of an objective function @xmath144 on @xmath102 , where @xmath232 is the perron vector of the adjacency matrix @xmath233 of graph @xmath230 .",
    "the proof is almost the same as that of theorem [ thm1 ] , by replacing @xmath234 and @xmath235 with @xmath236 and @xmath237 , respectively .",
    "therefore , the proof is omitted .",
    "although it is hard to achieve the desired nash equilibrium with the homogeneous - stepsize algorithm in general , we can still achieve it in some cases . here",
    "we can give a necessary and sufficient condition to achieve a nash equilibrium for any ujsc switching digraph sequence .",
    "[ thmdao1 ] suppose * a1 * , * a3**a5 * hold and @xmath229 are strictly convex - concave .",
    "then the multi - agent network @xmath35 achieves a nash equilibrium by algorithm ( [ spe ] ) for any ujsc switching digraph sequence @xmath48 if and only if @xmath229 have the same saddle point on @xmath102 .",
    "the proof can be found in section v.c .",
    "the strict convexity - concavity of @xmath226 implies that the saddle point of @xmath226 is unique . from the proof we can find that the necessity of theorem [ thmdao1 ] does not require that each objective function @xmath226 is strictly convex - concave , but the strict convexity - concavity of the sum objective function @xmath238 suffices .      the results in the preceding subsections showed that the homogenous - stepsize algorithm may not make a weight - unbalanced network achieve its nash equilibrium .",
    "here we first show the existence of a heterogeneous - stepsize design to make the ( possibly weight - unbalanced ) network achieve a nash equilibrium .",
    "[ th4.4 ] suppose * a1 * , * a3 * , * a4 * hold and @xmath146 is strictly convex - concave .",
    "then for any time - varying communication graphs @xmath239 and @xmath50 that satisfy * a2 * , there always exist stepsize sequences @xmath209 and @xmath210 such that the multi - agent network @xmath35 achieves a nash equilibrium by algorithm ( [ 6 ] ) .",
    "the proof is in section v.d .",
    "in fact , it suffices to design stepsizes @xmath240 and @xmath241 as follows : @xmath242 where @xmath243 , @xmath244 , @xmath245 is the vector for which @xmath246 , @xmath247 , @xmath170 , @xmath213 satisfies the following conditions : @xmath248    [ rem4.4 ] the stepsize design in theorem [ th4.4 ] is motivated by the following two ideas . on one hand , agents need to eliminate the imbalance caused by the weight - unbalanced graphs , which is done by @xmath249 , while on the other hand , agents also need to achieve a consensus within each subnetwork and cooperative optimization , which is done by @xmath213 , as in the balanced graph case .    condition ( [ desi1 ] ) can be satisfied by letting @xmath250 for @xmath162 , @xmath251 , @xmath252 , @xmath253 . moreover ,",
    "from the proof of theorem [ th4.4 ] we find that , if the sets @xmath120 and @xmath121 are bounded , the system states are naturally bounded , and then ( [ desi1 ] ) can be relaxed as * a5*.    clearly , the above choice of stepsizes at time @xmath184 depend on the adjacency matrix sequences @xmath254 and @xmath255 , which is not so practical .",
    "therefore , we will consider how to design adaptive algorithms to update the stepsize sequences @xmath209 and @xmath210 such that the nash equilibrium can be achieved , where the ( heterogeneous ) stepsizes at time @xmath184 just depend on the local information that agents can obtain before time @xmath184 .",
    "take @xmath256 where @xmath213 satisfies ( [ desi1 ] ) .",
    "the only difference between stepsize selection rule ( [ desi3 ] ) and ( [ desi2 ] ) is that @xmath257 and @xmath258 are replaced with @xmath259 and @xmath260 , respectively .",
    "we consider how to design distributed adaptive algorithms for @xmath261 and @xmath262 such that @xmath263 and @xmath264 note that @xmath265 and @xmath266 are the perron vectors of the two limits @xmath267 and @xmath268 , respectively .",
    "the next theorem shows that , in two standard cases , we can design distributed adaptive algorithms satisfying ( [ conn ] ) and ( [ co1 ] ) to ensure that @xmath35 achieves a nash equilibrium .",
    "how to design them is given in the proof .",
    "[ th4.5 ] consider algorithm ( [ 6 ] ) with stepsize selection rule ( [ desi3 ] ) .",
    "suppose * a1**a4 * hold , @xmath146 is strictly convex - concave . for the following two cases , with the adaptive distributed algorithms",
    "satisfying ( [ conn ] ) and ( [ co1 ] ) , network @xmath35 achieves a nash equilibrium .",
    "\\(i ) for @xmath170 , the adjacency matrices @xmath269 have a common left eigenvector with eigenvalue one ;    \\(ii ) for @xmath170 , the adjacency matrices @xmath270 are switching periodically , i.e. , there exist positive integers @xmath271 and two finite sets of stochastic matrices @xmath272 such that @xmath273 for @xmath274 and @xmath275 .    the proof is given in section v.e .    regarding case ( i ) , note that for a _ fixed _",
    "graph , the adjacency matrices obviously have a common left eigenvector .",
    "moreover , periodic switching can be interpreted as a simple scheduling strategy . at each time",
    "agents may choose some neighbors to communicate with in a periodic order .",
    "in the case of a fixed unbalanced graph , the optimization can also be solved by either reweighting the objectives @xcite , or by the subgradient - push protocols @xcite , where the perron vector of the adjacency matrix is required to be known in advance or each agent is required to know its out - degree .",
    "these requirements may be quite restrictive in a distributed setting .",
    "theorem [ th4.5 ] shows that , in the fixed graph case , agents can adaptively learn the perron vector by the adaptive learning scheme and then achieve the desired convergence without knowing the perron vector and their individual out - degrees .    when the adjacency matrices @xmath276 have a common left eigenvector ,",
    "the designed distributed adaptive learning strategy ( [ de ] ) can guarantee that the differences between @xmath277 , @xmath278 and the `` true stepsizes '' @xmath279 , @xmath280 asymptotically tend to zero .",
    "the converse is also true for some cases .",
    "in fact , if the time - varying adjacency matrices are switching within finite matrices and @xmath281 , @xmath282 , then we can show that the finite adjacency matrices certainly have a common left eigenvector .",
    "moreover , when the adjacency matrices have no common left eigenvector , the adaptive learning strategy ( [ de ] ) generally can not make @xmath259 , @xmath260 asymptotically learn the true stepsizes and then can not achieve a nash equilibrium .",
    "for instance , consider the special distributed saddle - point computation algorithm ( [ spe ] ) with strictly convex - concave objective functions @xmath226 .",
    "let @xmath283 be two different positive stochastic vectors .",
    "suppose @xmath284 and @xmath285 for @xmath286 .",
    "in this case , @xmath287 , @xmath288 for all @xmath162 and then ( [ co1 ] ) is not true . according to theorem [ th6.3 ] ,",
    "the learning strategy ( [ de ] ) can make @xmath289 converge to the ( unique ) saddle point of the function @xmath290 on @xmath102 , which is not necessarily the saddle point of @xmath225 on @xmath102 .",
    "in this section , we first introduce some useful lemmas and then present the proofs of the theorems in last section .      first of all , we introduce two lemmas .",
    "the first lemma is the deterministic version of lemma 11 on page 50 in @xcite , while the second one is lemma 7 in @xcite .",
    "[ 4.1 ] let @xmath291 , @xmath292 and @xmath293 be non - negative sequences with @xmath294 . if @xmath295 holds for any @xmath184 , then @xmath296 is a finite number .    [",
    "4.2 ] let @xmath71 and @xmath291 be a positive sequence . if @xmath297 , then @xmath298 . moreover , if @xmath299 , then @xmath300 .",
    "next , we show some useful lemmas .    [ 4.3 ] for any @xmath301 , there is a stochastic matrix @xmath62 such that @xmath67 is strongly connected and @xmath302 .    _",
    "proof : _ take @xmath303 . without loss of generality , we assume @xmath304 ( otherwise we can rearrange the index of agents ) .",
    "let @xmath64 be a stochastic matrix such that the graph @xmath67 associated with @xmath64 is a directed cycle : @xmath305 with @xmath306 and @xmath307 .",
    "clearly , @xmath67 is strongly connected .",
    "then all nonzero entries of @xmath64 are @xmath308 and @xmath302 can be rewritten as @xmath309 , @xmath310 .",
    "equivalently , @xmath311 let @xmath312 with @xmath313 . clearly , there is a solution to ( [ ss ] ) : @xmath314 .",
    "then the conclusion follows .",
    "@xmath315    the following lemma is about stochastic matrices , which can be found from lemma 3 in @xcite .",
    "[ cons ] let @xmath316 be a stochastic matrix and @xmath317 then @xmath318 where @xmath319 , is called  the ergodicity coefficient \" of @xmath64 .",
    "we next give a lemma about the transition matrix sequence @xmath320 , @xmath170 , where ( i ) , ( ii ) and ( iv ) are taken from lemma 4 in @xcite , while ( iii ) can be obtained from lemma 2 in @xcite .",
    "[ lem1 ] suppose * a2 * ( ii ) and * a3 * ( i ) , ( ii ) hold .",
    "then for @xmath170 , we have    \\(i ) the limit @xmath321 exists for each @xmath322 ;    \\(ii ) there is a positive stochastic vector @xmath323 such that @xmath324 ;    \\(iii ) for every @xmath325 and @xmath322 , @xmath326 ;    \\(iv ) for every @xmath10 , the entries @xmath327 converge to the same limit @xmath328 at a geometric rate , i.e. , for every @xmath325 and all @xmath329 , @xmath330 for all @xmath331 and @xmath332 , where @xmath333 , @xmath334 , and @xmath335 .",
    "the following lemma shows a relation between the left eigenvectors of stochastic matrices and the perron vector of the limit of their product matrix .",
    "[ l1 ] let @xmath336 be a sequence of stochastic matrices .",
    "suppose @xmath337 have a common left eigenvector @xmath143 corresponding to eigenvalue one and the associated graph sequence @xmath338 is ujsc .",
    "then , for each @xmath322 , @xmath339    _ proof _ : since @xmath143 is the common left eigenvector of @xmath340 associated with eigenvalue one , @xmath341 .",
    "in addition , by lemma [ lem1 ] , for each @xmath322 , the limit @xmath342 exists .",
    "therefore , @xmath343 , which implies @xmath344 .",
    "the conclusion follows .",
    "@xmath315    basically , the two dynamics of algorithm ( [ 6 ] ) are in the same form .",
    "let us check the first one , @xmath345 by treating the term containing @xmath346 as  disturbance \" , we can transform ( [ xi - eq ] ) to a simplified model in the following form with disturbance @xmath347 : @xmath348 where @xmath349 .",
    "it follows from @xmath350 , the convexity of @xmath120 and * a3 * ( ii ) that @xmath351 . then from ( [ pro ] ) , @xmath352 .",
    "the next lemma is about a limit for the two subnetworks .",
    "denote @xmath353    [ le2 ] consider algorithm ( [ 6 ] ) with * a3 * ( ii ) and * a4*. if @xmath354 @xmath355 , then for any @xmath356 , @xmath357    _ proof _ : we will only show @xmath358 since the other one about @xmath359 can be proved similarly . at first",
    ", it follows from @xmath360 that @xmath361 . from * a4",
    "* we have @xmath362 .",
    "then from ( [ 0con ] ) and * a3 * ( ii ) we obtain @xmath363 therefore , @xmath364 and then , for each @xmath184 , @xmath365 taking the limit over both sides of the preceding inequality yields the conclusion .",
    "@xmath315    we assume without loss of generality that @xmath366 in the sequel of this subsection for notational simplicity .",
    "denote @xmath367 , @xmath368 .",
    "then system ( [ 0con ] ) can be written in a compact form : @xmath369 recall transition matrix @xmath370 therefore , for each @xmath184 , @xmath371    at the end of this section , we present three lemmas for ( [ 6 ] ) ( or ( [ 0con ] ) and the other one for @xmath372 ) .",
    "the first lemma gives an estimation for @xmath373 and @xmath374 over a bounded interval .",
    "[ con1 ] suppose * a2 * ( ii ) , * a3 * and * a4 * hold .",
    "then for @xmath170 and any @xmath375 , @xmath376 where @xmath377 , @xmath378 , @xmath379 for a constant @xmath380 given in * a2 * and @xmath381 as the upper bound on the subgradients of objective functions in * a4*.    _ proof : _ here we only show the case of @xmath382 since the other one can be proven in the same way .",
    "consider @xmath383 time intervals @xmath384 , [ t_1 , 2t_1 - 1], ...",
    ",[n_1(n_1 - 2)t_1 , ( n_1(n_1 - 2)+1)t_1 - 1]$ ] . by the definition of ujsc graph , @xmath385\\big)$ ]",
    "contains a root node for @xmath386 .",
    "clearly , the set of the @xmath383 root nodes contains at least one node , say @xmath387 , at least @xmath388 times .",
    "assume without loss of generality that @xmath387 is a root node of @xmath385\\big),t = t_0, ... ,t_{n_1 - 2}$ ] .",
    "take @xmath389 from @xmath390 .",
    "it is not hard to show that there exist a node set @xmath391 and time set @xmath392 such that @xmath393 and @xmath394 where @xmath395 and all @xmath396 belong to different intervals @xmath397 , 0\\leq r\\leq n_1 - 2 $ ] .",
    "noticing that the diagonal elements of all adjacency matrices are positive , and moreover , for matrices @xmath398",
    "with nonnegative entries , @xmath399 so we have @xmath400 . because @xmath401 is taken from @xmath390 freely , @xmath402 for @xmath403 as a result , @xmath404 for @xmath405 with * a3 * ( i ) and so @xmath406 by the definition of ergodicity coefficient given in lemma [ cons ] .",
    "according to ( [ con3 ] ) , the inequality @xmath407 , lemma [ cons ] and * a4 * , @xmath408 which shows ( [ con4 ] ) for @xmath409 .",
    "analogously , we can show ( [ con4 ] ) for @xmath170 and @xmath375 .",
    "@xmath315    [ co ] suppose * a2 * ( ii ) , * a3 * and * a4 * hold .",
    "\\(i ) if @xmath410 and @xmath411 , then @xmath412 @xmath413    \\(ii ) if for each @xmath10 , @xmath414 and @xmath415 , then the subnetworks @xmath36 and @xmath37 achieve a consensus , respectively , i.e. , @xmath416    note that ( i ) is an extension of lemma 8 ( b ) in @xcite dealing with weight - balanced graph sequence to general graph sequence ( possibly weight - unbalanced ) , while ( ii ) is about the consensus within the subnetworks , and will be frequently used in the sequel .",
    "this lemma can be shown by lemma [ con1 ] and similar arguments to the proof of lemma 8 in @xcite , and hence , the proof is omitted here .",
    "the following provides the error estimation between agents states and their average .",
    "[ con0 ] suppose * a2**a4 * hold , and @xmath417 , @xmath418 are non - increasing with @xmath410 , @xmath411 .",
    "then for each @xmath148 and @xmath419 , @xmath420 , @xmath421 where @xmath422 , @xmath423 .",
    "_ proof : _ we only need to show the first conclusion since the second one can be obtained in the same way . at first , from * a3 * ( iii ) and @xmath424 we have @xmath425 let @xmath426 be the set of all moments when @xmath427 . recalling the definition of @xmath428 in ( [ 8 ] ) , @xmath429 when @xmath430 .",
    "since @xmath431 is non - increasing and @xmath432 ( by lemma [ co ] ) , we have @xmath433 where @xmath178 is the constant in * a2 * ( i ) .",
    "thus , the preceding inequality and ( [ con11 ] ) imply @xmath434 .    since @xmath435 for all @xmath10 and @xmath121 is convex , @xmath436 .",
    "then , from the non - expansiveness property of the convex projection operator , @xmath437 based on ( [ con12 ] ) , the non - increasingness of @xmath431 and @xmath438 , we also have @xmath439 where @xmath440 , @xmath441 . since @xmath442 , the first conclusion follows .",
    "@xmath315    [ rem ] from the proof we find that lemma [ con0 ] still holds when the non - increasing condition of @xmath443 and @xmath444 is replaced by that there are an integer @xmath445 and @xmath446 such that @xmath447 and @xmath448 for all @xmath184 .",
    "we complete the proof by the following two steps .",
    "_ step 1 : _ we first show that the states of ( [ 6 ] ) are bounded",
    ". take @xmath449 . by ( [ 6 ] ) and ( [ pro ] ) ,",
    "@xmath450    it is easy to see that @xmath451 is a convex function from the convexity of @xmath0 and the convexity of scalar function @xmath452 . from this and * a3 * ( ii ) , @xmath453 . moreover , since @xmath454 is a subgradient of @xmath455 at @xmath456 , @xmath457 thus , based on ( [ th1 ] ) and * a4 * , @xmath458 again employing * a4 * , @xmath459 @xmath460 .",
    "this imply @xmath461 hence , by ( [ th2 ] ) , ( [ th3 ] ) and ( [ th4 ] ) , @xmath462 where @xmath463 .",
    "it follows from the weight balance of @xmath464 and * a3 * ( ii ) that @xmath465 for all @xmath405 .",
    "then , from ( [ th5 ] ) , we have @xmath466 analogously , @xmath467 where @xmath468 .",
    "let @xmath469 , which is nonempty by * a1*. denote @xmath470 . then adding ( [ th6 ] ) and ( [ th7 ] ) together leads to @xmath471 where @xmath472 following from @xmath473 , @xmath474 for @xmath173 since @xmath105 is a saddle point of @xmath146 on @xmath102 .",
    "moreover , by @xmath215 and lemmas [ co ] , [ con0 ] , @xmath475 therefore , by virtue of @xmath215 again , ( [ 2v ] ) , ( [ th8 ] ) and lemma [ 4.1 ] , @xmath476 is a finite number , denoted as @xmath477 .",
    "thus , the conclusion follows .",
    "@xmath315    _ step 2 : _ we next show that the limit points of all agents satisfy certain objective function equations , and then prove the nash equilibrium convergence under either of the two conditions : ( i ) and ( ii ) .    as shows in _ step 1 _ , @xmath478 are bounded",
    "moreover , it also follows from ( [ th8 ] ) that @xmath479 and then by @xmath215 and ( [ 2v ] ) we have @xmath480    the stepsize condition @xmath214 and ( [ th10 ] ) imply @xmath481 as a result , there is a subsequence @xmath482 such that @xmath483 and @xmath484 .",
    "let @xmath485 be any limit pair of @xmath486 ( noting that the finite limit pairs exist by the boundedness of system states ) . because @xmath487 are continuous and the nash equilibrium point @xmath105 is taken from @xmath488 freely",
    ", the limit pair @xmath485 must satisfy that for any @xmath489 , @xmath490    we complete the proof by discussing the proposed two sufficient conditions : ( i ) and ( ii ) .",
    "( i ) . for the strictly convex - concave function @xmath146",
    ", we claim that @xmath147 is a single - point set .",
    "if it contains two different points @xmath111 and @xmath112 ( without loss of generality , assume @xmath491 ) , it also contains point @xmath114 by lemma [ lem01 ] .",
    "thus , @xmath492 and @xmath493 for any @xmath494 , which yields a contradiction since @xmath495 is strictly convex and then the minimizer of @xmath495 is unique .",
    "thus , @xmath147 contains only one single - point ( denoted as @xmath105 )",
    ".    then @xmath496 by ( [ th11 ] ) .",
    "consequently , each limit pair of @xmath486 is @xmath105 , i.e. , @xmath497 and @xmath498 . by lemma [ co ] , @xmath499 , @xmath500 and @xmath501 , @xmath502 .",
    "moreover , @xmath503 as given in _ step 1 _ , so @xmath504 , which in return implies @xmath505 @xmath506 , @xmath500 and @xmath507 , @xmath502 .",
    "( ii ) . in _",
    "step 1 _ , we proved @xmath503 for any @xmath508 .",
    "we check the existence of the two limits @xmath509 and @xmath510 .",
    "let @xmath511 be an interior point of @xmath147 for which @xmath512 and @xmath513 for some @xmath5 . clearly , any two limit pairs @xmath514 , @xmath515 of @xmath516 must satisfy @xmath517 take @xmath518 .",
    "then for any @xmath519 , @xmath520 taking the gradient with respect to @xmath521 on both sides of ( [ th13 ] ) yields @xmath522 , namely , @xmath523 .",
    "similarly , we can show @xmath524 . thus , the limits , @xmath525 and @xmath526 , exist . based on lemma [ co ] ( ii ) , @xmath527 and @xmath528 .",
    "we claim that @xmath529 .",
    "first it follows from ( [ th6 ] ) that , for any @xmath494 , @xmath530 moreover , recalling @xmath531 , we obtain @xmath532 then @xmath533 for all @xmath494 due to @xmath534 , @xmath535 , the continuity of @xmath146 , and ( [ add1 ] ) .",
    "similarly , we can show @xmath536 for all @xmath537 .",
    "thus , @xmath538 is a saddle point of @xmath146 on @xmath102 , which implies @xmath539 .",
    "thus , the proof is completed .",
    "@xmath315      ( necessity ) let @xmath105 be the unique saddle point of strictly convex - concave function @xmath146 on @xmath102 . take @xmath540 . by lemma",
    "[ 4.3 ] again , there is a stochastic matrix @xmath541 such that @xmath542 and @xmath543 is strongly connected .",
    "let @xmath544 be the graph sequence of algorithm ( [ 6 ] ) with @xmath545 for @xmath173 and @xmath541 being the adjacency matrix of @xmath464 .",
    "clearly , @xmath48 is ujsc .",
    "on one hand , by proposition [ th6.3 ] , all agents converge to the unique saddle point of @xmath144 on @xmath102 . on the other hand ,",
    "the necessity condition states that @xmath546 and @xmath547 for @xmath221 .",
    "therefore , @xmath105 is a saddle point of @xmath144 on @xmath102 .",
    "because @xmath143 is taken from @xmath548 freely , we have that , for any @xmath549 , @xmath494 , @xmath537 , @xmath550 we next show by contradiction that , given any @xmath221 , @xmath551 for all @xmath494 .",
    "hence suppose there are @xmath387 and @xmath552 such that @xmath553 .",
    "let @xmath554 be sufficiently small such that @xmath555 and @xmath556 .",
    "consequently , @xmath557 which contradicts the second inequality of ( [ do90 ] ) .",
    "thus , @xmath551 for all @xmath494 .",
    "analogously , we can show from the first inequality of ( [ do90 ] ) that for each @xmath10 , @xmath558 for all @xmath537 .",
    "thus , we obtain that @xmath559 , @xmath560 or equivalently , @xmath105 is the saddle point of @xmath226 on @xmath102 .",
    "( sufficiency ) let @xmath105 be the unique saddle point of @xmath229 on @xmath102 . similar to ( [ th5 ] ) , we have @xmath561 where @xmath562 . merging ( [ th5 ] ) and ( [ dao12 ] ) gives @xmath563 where @xmath564 , @xmath565 . since @xmath566 and @xmath567 for all @xmath568 , the second term in ( [ dao1 ] ) is non - positive . by lemma [ 4.1 ] , @xmath569 for a finite number @xmath570 , which implies that @xmath571 are bounded",
    ".    denote @xmath572 . from ( [ dao1 ] )",
    ", we also have @xmath573 and hence @xmath574 the stepsize condition @xmath531 implies that there is a subsequence @xmath482 such that @xmath575 we assume without loss of generality that @xmath576 for some @xmath577 ( otherwise we can find a subsequence of @xmath482 recalling the boundedness of system states ) . due to the finite number of agents and the continuity of @xmath226s , there exists @xmath387 such that @xmath578 and @xmath579 .",
    "it follows from the strict convexity - concavity of @xmath580 that @xmath581 .    since the consensus is achieved within two subnetworks , @xmath582 and @xmath583 , which leads to @xmath584 based on ( [ kpsi ] ) .",
    "thus , the conclusion follows .",
    "@xmath315      we design the stepsizes @xmath240 and @xmath241 as that given before remark [ rem4.4 ] .",
    "first by lemma [ lem1 ] ( i ) and ( ii ) , the limit @xmath585 exists for each @xmath184 .",
    "let @xmath105 be the unique nash equilibrium .",
    "from ( [ th5 ] ) we have @xmath586 analogously , @xmath587 denote @xmath588 then it follows from ( [ ex1 ] ) and ( [ ex0 ] ) that @xmath589 where @xmath590 . by lemma [ lem1 ] ( iii ) , @xmath591 and",
    "then @xmath592 is a finite number .",
    "therefore , @xmath593 then ( [ ex3 ] ) can be written as @xmath594    the subsequent proof is given as follows .",
    "first , we show that the designed stepsizes ( [ desi2 ] ) can eliminate the imbalance caused by the weight - unbalanced graphs ( see the second term in ( [ ex4 ] ) ) , and then we prove that all the terms from the third one to the last one in ( [ ex4 ] ) is summable based on the geometric rate convergence of transition matrices . finally , we show the desired convergence based on inequality ( [ ex4 ] ) , as ( [ th8 ] ) for the weight - balance case in theorem [ thm1 ] .    clearly , @xmath595 . from lemma [ lem1 ] ( iv )",
    "we also have that @xmath596 for @xmath170 , every @xmath325 , @xmath329 , @xmath331 , and @xmath332 , where @xmath597 , @xmath598 .",
    "moreover , by * a4 * , @xmath599 for @xmath500 , and @xmath600 for @xmath150 . based on these observations , multiplying @xmath601 on the both sides of ( [ ex4 ] ) and taking the sum over @xmath170 yield @xmath602 where @xmath603 , @xmath604 is the sum of all terms from the third one to the last one in ( [ ne ] ) .",
    "we next show @xmath605 .",
    "first by lemmas [ co ] , [ con0 ] and remark [ rem ] , @xmath606 and hence @xmath607 .",
    "it follows from @xmath608 that for each @xmath184 , @xmath609 moreover , by lemma [ le2 ] , @xmath610 , which implies @xmath611 along with @xmath612 . from the preceding zero limit results",
    ", we have @xmath605 . then from ( [ ex6 ] ) @xmath613 . clearly , from ( [ sp ] ) @xmath614 .",
    "by the similar procedures to the proof of theorem [ thm1 ] , we can show that there is a subsequence @xmath615 such that @xmath616 , @xmath617 .",
    "now let us show @xmath618 .",
    "first it follows from @xmath605 that , for any @xmath5 , there is a sufficiently large @xmath619 such that when @xmath620 , @xmath621 .",
    "moreover , since the consensus is achieved within the two subnetworks , @xmath619 can be selected sufficiently large such that @xmath622 and @xmath623 for each @xmath10 . with ( [ ex6 ] ) , we have that , for each @xmath624 , @xmath625 which implies @xmath618",
    ". therefore , @xmath546 , @xmath148 and @xmath547 , @xmath150 .",
    "thus , the proof is completed .",
    "@xmath315      ( i ) . in this case",
    "we design a dynamics for auxiliary states @xmath626 for @xmath627 and @xmath628 for @xmath629 to estimate the respective desired stepsizes : @xmath630 with the initial value @xmath631 , @xmath632 ; @xmath633 , @xmath634 .",
    "then for each @xmath10 and @xmath184 , let @xmath277 , @xmath278 .",
    "clearly , ( [ conn ] ) holds .",
    "first by * a3 * ( i ) and algorithm ( [ de ] ) , @xmath635 and @xmath636 for each @xmath184 , which guarantees that the stepsize selection rule ( [ desi3 ] ) is well - defined .",
    "let @xmath637 be the common left eigenvector of @xmath638 associated with eigenvalue one , where @xmath639 . according to lemma [ l1 ] , @xmath640 for each @xmath184 . as a result , @xmath641 , @xmath221 ;",
    "@xmath642 , @xmath643 for all @xmath184 .",
    "let @xmath644 . from ( [ de ] )",
    "we have @xmath645 and then @xmath646 . therefore , @xmath647 for @xmath148 .",
    "similarly , @xmath648 for @xmath150 . since @xmath641 and @xmath642 for all @xmath184 , ( [ co1 ] ) holds .",
    "moreover , the above convergence is achieved with a geometric rate by lemma [ lem1 ] . without loss of generality ,",
    "suppose @xmath649 and @xmath650 for some @xmath651 , @xmath652 , and all @xmath568 .",
    "the only difference between the models in theorem [ th4.4 ] and the current one is that the terms @xmath257 and @xmath258 ( equal to @xmath653 and @xmath654 in case ( i ) , respectively ) in stepsize selection rule ( [ desi2 ] ) are replaced with @xmath655 and @xmath260 ( equal to @xmath656 and @xmath657 , respectively ) in stepsize selection rule ( [ desi3 ] ) .",
    "we can find that all lemmas involved in the proof of theorem [ th4.4 ] still hold under the new stepsize selection rule ( [ desi3 ] ) .",
    "moreover , all the analysis is almost the same as that in theorem [ th4.4 ] except that the new stepsize selection rule will yield an error term ( denoted as @xmath658 ) on the right - hand side of ( [ ex3 ] ) .",
    "in fact , @xmath659 where @xmath660 , @xmath661 . moreover , since @xmath662 , @xmath663 , @xmath664 for a sufficiently large @xmath322 .",
    "analogously , @xmath665 .",
    "then for a sufficiently large @xmath666 and any @xmath667 , @xmath668 where @xmath669 @xmath670 due to @xmath671 by lemma [ le2 ] . from the proof of theorem [ th4.4 ] , we can find that the relation ( [ l2 ] ) makes all the arguments hold and then a nash equilibrium is achieved for case ( i ) .",
    "here we design a dynamics for the auxiliary states @xmath672 , @xmath673 for @xmath627 and @xmath674 , @xmath675 for @xmath629 to estimate the respective desired stepsizes : @xmath676 with the initial value @xmath677 , @xmath678 ; @xmath679 , @xmath680 .",
    "then , for each @xmath274 , let @xmath681 for @xmath500 , @xmath673 ; let @xmath682 for @xmath502 , @xmath675 .",
    "note that * a2 * implies that the union graphs @xmath683 are strongly connected .",
    "let @xmath684 be the perron vector of @xmath685 , i.e. , @xmath686 .",
    "then for @xmath687 , @xmath688 consequently , for each @xmath274 , @xmath689 , @xmath690 , @xmath691 .",
    "moreover , from ( [ de2 ] ) and ( [ add ] ) we obtain that for @xmath692 , @xmath693 where @xmath694 , @xmath695 .",
    "then @xmath696 for @xmath148 .",
    "hence , @xmath697 analogously , we have @xmath698 moreover , the above convergence is achieved with a geometric rate .",
    "similar to the proof of case ( i ) , we can prove case ( ii ) . thus",
    ", the conclusion follows .",
    "in this section , we provide examples to illustrate the obtained results in both the balanced and unbalanced graph cases .",
    "consider a network of five agents , where @xmath699 , @xmath700 $ ] , @xmath701 and @xmath702 , @xmath703 .",
    "notice that @xmath704 and all objective functions are strictly convex - concave on @xmath705\\times [ -5,5]$ ] .",
    "the unique saddle point of the sum objective function @xmath706 on @xmath705\\times [ -5,5]$ ] is @xmath707 .",
    "take initial conditions @xmath708 and @xmath709 . when @xmath710 we take",
    "@xmath711 $ ] ; when @xmath712 we take @xmath713 .",
    "let @xmath714 , @xmath162 , which satisfies * a5*.    we discuss three examples .",
    "the first example is given for verifying the convergence of the proposed algorithm with homogeneous stepsizes in the case of weight - balanced graphs , while the second one is for the convergence with the stepsizes provided in the existence theorem in the case of weight - unbalanced graphs .",
    "the third example demonstrates the efficiency of the proposed adaptive learning strategy for periodical switching unbalanced graphs .",
    "[ exa1 ] the communication graph is switching periodically over the two graphs @xmath715 given in fig .",
    "2 , where @xmath716 , @xmath717 , @xmath162 .    , width=307 ]    denote by @xmath718 and @xmath719 the two subgraphs of @xmath720 describing the communications within the two subnetworks .",
    "similarly , the subgraphs of @xmath721 are denoted as @xmath722 and @xmath723 . here",
    "the adjacency matrices of @xmath718 , @xmath719 and @xmath722 are as follows : @xmath724 @xmath725    clearly , with the above adjacency matrices , the three digraphs @xmath718 , @xmath719 and @xmath722 are weight - balanced .",
    "let the stepsize be @xmath211 for all @xmath207 and @xmath162 .",
    "3 shows that the agents converge to the unique nash equilibrium @xmath726 .",
    "and @xmath727 ) for the time - varying weight - balanced digraphs with homogeneous stepsizes.,width=268 ]    [ exa2 ] consider the same switching graphs given in example [ exa1 ] except that a new arc @xmath728 is added in @xmath718 .",
    "the new graph is still denoted as @xmath718 for simplicity . here",
    "the adjacency matrices of the three digraphs @xmath718 , @xmath719 and @xmath722 are given by @xmath729 @xmath730 in this case , @xmath718 , @xmath719 and @xmath722 are weight - unbalanced with @xmath731 , @xmath732 and @xmath733 , @xmath734 .",
    "we design the heterogeneous stepsizes as follows : @xmath735 .",
    "4 shows that the agents converge to the unique nash equilibrium with those heterogeneous stepsizes .",
    "here we verify the result obtained in theorem [ th4.5 ] ( ii ) .",
    "consider example [ exa2 ] , where @xmath736 .",
    "design adaptive stepsize algorithms : for @xmath737 , @xmath738 where @xmath739 , @xmath740 ; for @xmath737 , @xmath741 where @xmath742 , @xmath743 .",
    "let @xmath744 , @xmath745 , @xmath746 , @xmath747 and @xmath748 fig .",
    "5 shows that the agents converge to the unique nash equilibrium under the above designed adaptive stepsizes .",
    "a subgradient - based distributed algorithm was proposed to solve a nash equilibrium computation problem as a zero - sum game with switching communication graphs .",
    "sufficient conditions were provided to achieve a nash equilibrium for switching weight - balanced digraphs by an algorithm with homogenous stepsizes . in the case of weight - unbalanced graphs , it was demonstrated that the algorithm with homogeneous stepsizes might fail to reach a nash equilibrium .",
    "then the existence of heterogeneous stepsizes to achieve a nash equilibrium was established .",
    "furthermore , adaptive algorithms were designed to update the hoterogeneous stepsizes for the nash equilibrium computation in two special cases .",
    "m. cao , a. s. morse , and b. d. o. anderson ,  reaching a consensus in a dynamically changing environment : a graphical approach , \" , vol .",
    "575 - 600 , 2008 .",
    "w. meng , w. xiao , and l. xie ,  an efficient em algorithm for energy - based sensor network multi - source localization in wireless sensor networks , \" _ ieee trans .",
    "3 , pp . 1017 - 1027 , 2011 .",
    "b. johansson , t. keviczky , m. johansson , and k. h. johansson ,  subgradient methods and consensus algorithms for solving convex optimization problems , \" in _ proc .",
    "ieee conf . on decision and control _",
    ", cancun , mexico , pp .",
    "4185 - 4190 , 2008 .",
    "m. zhu and s. martnez ,  on distributed convex optimization under inequality and equality constraints via primal - dual subgradient methods , \" _ ieee trans .",
    "151 - 164 , 2012 .",
    "y. lou , g. shi , k. h. johansson , and y. hong ,  approximate projected consensus for convex intersection computation : convergence analysis and critical error angle , \" _ ieee trans .",
    "59 , no . 7 , pp . 1722 - 1736 , 2014 .",
    "m. s. stankovic , k. h. johansson , and d. m. stipanovi ,  distributed seeking of nash equilibria with applications to mobile sensor networks , \" _ ieee trans .",
    "904 - 919 , 2012 .",
    "g. theodorakopoulos and j. s. baras ,  game theoretic modeling of malicious users in collaborative networks , \" _ ieee j. select . areas commun .",
    ", special issue on game theory in communication systems _ , vol .",
    "26 , no . 7 , pp .",
    "1317 - 1327 , 2008 .",
    "f. benezit , v. blondel , p. thiran , j. tsitsiklis , and m. vetterli ,  weighted gossip : distributed averaging using non - doubly stochastic matrices , \" in _ proc .",
    "2010 ieee international symposium on information theory _ , 2010 ."
  ],
  "abstract_text": [
    "<S> in this paper , we investigate a distributed nash equilibrium computation problem for a time - varying multi - agent network consisting of two subnetworks , where the two subnetworks share the same objective function . </S>",
    "<S> we first propose a subgradient - based distributed algorithm with heterogeneous stepsizes to compute a nash equilibrium of a zero - sum game . </S>",
    "<S> we then prove that the proposed algorithm can achieve a nash equilibrium under uniformly jointly strongly connected ( ujsc ) weight - balanced digraphs with homogenous stepsizes . </S>",
    "<S> moreover , we demonstrate that for weighted - unbalanced graphs a nash equilibrium may not be achieved with homogenous stepsizes unless certain conditions on the objective function hold . </S>",
    "<S> we show that there always exist heterogeneous stepsizes for the proposed algorithm to guarantee that a nash equilibrium can be achieved for ujsc digraphs . finally , in two standard weight - unbalanced cases , we verify the convergence to a nash equilibrium by adaptively updating the stepsizes along with the arc weights in the proposed algorithm .    </S>",
    "<S> multi - agent systems , nash equilibrium , weight - unbalanced graphs , heterogeneous stepsizes , joint connection </S>"
  ]
}
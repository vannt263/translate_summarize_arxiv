{
  "article_text": [
    "the set cover problem is that : given a ground set @xmath2 of @xmath3 elements and a collection @xmath4 of @xmath1 subsets of @xmath2 , try to find a minimum number of subsets @xmath5 in @xmath6 such that @xmath7 .",
    "if we add an additional constrain such that all subsets in the solution are pairwise disjoint , then the set cover problem becomes the mutually exclusive set cover problem .",
    "if we further assign each subset in @xmath4 a real number weight and search the solution with the minimum weight , i.e. the sum of weights of subsets in the solution is minimized , then the problem becomes the weighted mutually exclusive set cover problem .",
    "recently , the weighted mutually exclusive set cover problem has found important applications in cancer study to identify driver mutations  @xcite , i.e. somatic mutations that cause cancers . as somatic mutations will change the structures ( and therefore the functions ) of signaling proteins ; thus , perturb cancer pathways that regulate the expressions of genes in certain important biological processes , such as cell death , cell proliferation etc .",
    "the perturbations within a common cancer pathway are often found to be mutually exclusive in a single cancer cell , i.e. each tumor usually has only one perturbation on one given cancer pathways ( one perturbation is enough to cause the disease ; hence , there is no need to wait for another perturbation ) .",
    "modern lab techniques can identify somatic mutations and gene expressions of cancer cells .",
    "after preprocessing the data , we will obtain following information for important biological processes , e.g. cell death : 1)which cancer cells have disturbed the expressions of genes in the biological process ; 2 ) which genes have been mutated in those cancer cells ; 3 ) how possible each mutation is related to the given biological process ( i.e. each mutation is assigned a real number weight ) .",
    "then next step is finding a set of mutations such that each cancer cell has one and only one mutation in the solution set ( mutually exclusive ) and the sum of weights of all genes in the solution set is minimized , which is the weighted mutually exclusive set cover problem .    while there is not much research on the mutually exclusive set cover or the weighted mutually exclusive set cover problems ,",
    "the set cover problem has been paid much attention .",
    "the set cover , which is equivalent to the hitting set problem , is a fundamental np - hard problem in karp s 21 np - complete problems  @xcite .",
    "one research direction for the set cover problem is approximation algorithms , e.g. papers  @xcite gave polynomial time approximation algorithms that find solutions whose sizes are at most @xmath8 times the size of the optimal solution , where @xmath9 is a constant .",
    "second direction is using @xmath10 , the number of subsets in the solution , as parameter to design fixed - parameter tractable ( fpt ) algorithms for the equivalent problem , the hitting set problem .",
    "those algorithms have a constrain such that each element in @xmath2 is included in at most @xmath11 subsets in @xmath6 , i.e. sizes of all subsets in the hittng set problem are upper bound by @xmath11 ; it is also called the @xmath11-hitting set problem .",
    "for example , paper  @xcite gave an @xmath12 algorithm for the @xmath13-hitting set problem , and paper  @xcite further improved the time complexity to @xmath14 .",
    "the third direction is designing algorithms that use @xmath3 as parameter in the condition that @xmath3 is much less than @xmath1 .",
    "papers  @xcite designed algorithms with time complexities of @xmath15 for the problem .",
    "the paper  @xcite also extended the algorithm to solve the weighted mutually exclusive set cover problem with the same time complexity .",
    "paper @xcite improved the time complexity to @xmath16 under the condition that at least @xmath17 elements in @xmath2 are included in at most @xmath11 subsets in @xmath4 .",
    "this algorithm can also be extended to the weighted mutually exclusive set cover problem with the same time complexity . however , in the application of cancer study , neither @xmath3 is less than @xmath1 nor each element in @xmath18 is included in bounded number of subsets in @xmath4 . hence , there is a need to design new algorithms .    in this paper",
    ", we will design a new algorithm that uses @xmath1 as parameter ( in application of cancer study , @xmath1 is smaller than @xmath3 , where @xmath3 can be as large as several hundreds ) .",
    "trivially , if using @xmath1 as parameter , we can solve the problem in time of @xmath19 , where the algorithm basically just tests every combination of subsets in @xmath4 .",
    "to our best knowledge , we have not found any algorithm that is better than the trivial algorithms when using @xmath1 as parameter .",
    "this paper will give the first un - trivial algorithm with the time complexity of @xmath20 to solve the weighted mutually exclusive set cover problem .",
    "we have tested this algorithm in the cancer study , and the program can finish the computation practically when @xmath1 is less than 100 .",
    "the formal definition of the weighted mutually exclusive set cover problem is : given a ground set @xmath2 of @xmath3 elements , a collection @xmath4 of @xmath1 subsets of @xmath2 , and a weight function @xmath21 , if @xmath22 such that @xmath23 , and @xmath24 for any @xmath25 , then we say @xmath26 is a mutually exclusive set cover of @xmath2 and @xmath27 is the weight of @xmath26 ; the goal of the problem is to find a mutually exclusive set cover of @xmath2 with the minimum weight , or report that no such solution exists .",
    "as we have not found the proof of np - hardness for the weighted mutually exclusive set cover problem , in this section , we will prove that the mutually exclusive set cover problem is np - hard ; thus , prove that the weighted mutually exclusive set cover problem is np - hard .",
    "we will prove the np - hardness of the mutually exclusive set cover problem by reducing another np - hard problem , the maximum set packing problem , to it .",
    "remember that the maximum set packing problem is : given a collection @xmath4 of subsets , try to find an @xmath28 such that subsets in @xmath29 are pairwise disjoint and @xmath30 is maximized .",
    "the mutually exclusive set cover problem is np - hard .",
    "let @xmath31 be an instance of the maximum set packing problem , where @xmath32 .",
    "we create an instance of the mutually exclusive set cover problem such that :    * @xmath33 , where @xmath34 for all @xmath35 ; * @xmath36 , where @xmath37 , @xmath38 , and @xmath39 .    next , we will prove that if @xmath40 is a solution of the mutually exclusive set cover problem , then @xmath41 is a solution of the maximum set packing problem , where @xmath42 .",
    "thus we will prove that the time to solve the maximum set packing problem is bounded by the total time of transforming the maximum set packing problem into the mutually exclusive set cover , and of solving the mutually exclusive set cover problem .",
    "therefore , the mutually exclusive set cover problem is np - hard .    as subsets in @xmath43 are pairwise disjoint",
    ", it is obvious that subsets in @xmath44 are pairwise disjoint .",
    "hence , if we suppose that @xmath44 is not the solution of the maximum set packing problem , then there must exists a @xmath45 such that subsets in @xmath46 are pairwise disjoint and @xmath47 .",
    "thus we can make a new solution @xmath48 of the mutually exclusive set cover problem such that @xmath48 includes @xmath49 and other subsets in @xmath26 and @xmath50 .",
    "if let @xmath51 and @xmath52 ( note : any @xmath53 , which is not covered by a subset in @xmath54 , needs @xmath55 subsets in @xmath56 to cover it ; any @xmath57 , which is not covered by a subset in @xmath54 , needs a subset in @xmath26 to cover it ) , then @xmath58 and @xmath59 therefore @xmath60 , i.e. @xmath48 is a solution with less subsets in @xmath4 , which cases contradiction that @xmath43 is the solution of the mutually exclusive set cover problem .",
    "hence , @xmath44 is a solution of the maximum set packing problem .",
    "in this section , we will introduce our new algorithm to solve the weighted mutually exclusive set cover problem .",
    "let @xmath61 be an instance of the weighted mutually exclusive set cover problem .",
    "we can use a bipartite graph to represent @xmath61 such that all nodes on one sides are subsets in @xmath4 while nodes on the other side are elements in @xmath2 , and if an element @xmath62 of @xmath2 is in subset @xmath63 , i.e. @xmath64 , then an edge is added between @xmath62 and @xmath63 . for the convenience ,",
    "let us introduce some notations .",
    "the figure  [ fig_1 ] can help you to understand and remember following notations .",
    "for any @xmath65 , let @xmath66 , @xmath67 , @xmath68 .",
    "for any @xmath69 in @xmath70 , let @xmath71 , @xmath72 , @xmath73 .    xxxxxxxxxxxxxxxxxxxxxxxxxxxx= + * input : * an instance of the weighted mutually exclusive set cover problem , two variables , + where @xmath74 is a global variable to keep the best solution . +",
    "* output : * a minimum weight mutually exclusive set cover or  no solution \" .",
    "+   + 1 @xmath75 * then * + 1.1 @xmath76 * then * replace @xmath74 with @xmath77 ; + 2 find @xmath65 such that @xmath78 is minimized ; + 3 @xmath79 * then * * return *  no solution \" ; + 4 @xmath80 * then * wmes - cover@xmath81 ; + 5 @xmath82 for all @xmath83 * then * + 5.1 there exists @xmath84 such that @xmath85 * then * + 5.1.1 wmes - cover@xmath86 ; +   + 5.1.2  no solution \" ; + 6 @xmath87 * then * //",
    "suppose @xmath88 ; note that @xmath89 and @xmath90 .",
    "+ 6.1 wmes - cover@xmath91 ; + 6.2 wmes - cover@xmath92 ; + // ( note : @xmath93 ) + 6.3 there exists a @xmath94 such that @xmath95 * then * + 6.3.1 let @xmath96 such that @xmath97 and @xmath98 ; + 6.3.2 @xmath99 * then * //",
    "( note : @xmath100 ) + 6.3.2.1 find any @xmath101 ; + 6.3.2.2 wmes - cover@xmath102 ; + 6.3.2.3 wmes - cover@xmath103 ; +   + 6.3.2.4 find any @xmath104 ; + 6.3.2.5 wmes - cover@xmath105 ; + 6.3.2.6 wmes - cover@xmath103 ; +   + 6.3.3 find a @xmath94 ) such that @xmath106 is maximized ; + 6.3.4 find a @xmath107 ; + 6.3.5 wmes - cover@xmath108 ; + 6.3.6 wmes - cover@xmath109 ; +    the main algorithm , algorithm-1 , is shown in figure  [ algorithm_main ] .",
    "basically , the algorithm-1 first finds an @xmath65 with minimum degree and then branches at one subset in @xmath110 ( such as in step 6.2.2 and 6.2.3 ) . for the convenience ,",
    "if @xmath111 , then we say that algorithm-1 is doing a @xmath11-branch . because of steps 3,4,5 , when the program arrives at step 6 , we must have : 1 ) @xmath112 ; 2 ) for any @xmath113 , @xmath114",
    "; 3 ) there exists a @xmath115 such that @xmath116 .",
    "the algorithm-1 is basically searching the solution by going through a search tree ; hence , if knowing the number of leaves in the search tree , then we will obtain the time complexity of the algorithm-1 .",
    "next , we will estimate the number of leaves in the search tree by studying the different cases of branching .",
    "we begin from the @xmath117-branch .",
    "[ main_pr_2 ] the search tree has at most @xmath118 leaves if only the 2-branches are applied in algorithm-1 .",
    "suppose that @xmath119 and @xmath83 such that @xmath116 .",
    "let @xmath120 .",
    "in the case of @xmath97 , let @xmath121 . in the branches of choosing either @xmath122 or @xmath123 into the solution ,",
    "if @xmath69 is covered , then @xmath124 will be removed from the @xmath4 , or else if @xmath69 is not covered yet , then @xmath124 will be chosen into the solution in order to cover @xmath69 ( note : after @xmath125 are removed , @xmath126 in the new instance ( at line 6.1.1 and 6.1.2 of algorithm-1 ) ; thus , @xmath124 will be included into the solution in the next call of the algorithm-1 in this branch ) . hence , in any case , @xmath13 subsets in @xmath4 will be removed . if letting @xmath127 be the number of leaves in the search tree when @xmath128 , then we will obtain the following recurrence relation @xmath129 the characteristic equationof this recurrence relation is @xmath130 @xmath131 ; hence , we will have @xmath132 .",
    "in the case of @xmath133 , we consider following sub - cases .",
    "_ sub - case 1_. suppose @xmath134 , and @xmath135 .",
    "then at least @xmath122 and @xmath123 will be removed from @xmath4 for the branch of choosing @xmath123 into the solution ; at least @xmath122 , @xmath123 , and all subsets ( at least two ) in @xmath136 will be removed for the branch of choosing @xmath122 into the solution .",
    "thus the recurrence relation of @xmath127 is @xmath137which leads to @xmath138 .",
    "_ sub - case 2_. suppose @xmath139 .",
    "then in either branch , @xmath69 is covered by @xmath122 or @xmath123 , which is chosen into the solution .",
    "hence , @xmath125 , and all subsets ( at least two ) in @xmath136 will be removed from @xmath4 .",
    "thus we will obtain the recurrence relation @xmath140which leads to @xmath141 .    by considering all above cases",
    ", we obtain that @xmath142 .",
    "now , we consider the case of doing @xmath13-branch .",
    "remember that when algorithm-1 is doing a @xmath13-branch , @xmath143 for all @xmath144 .",
    "[ main_pr_3 ] the search tree has at most @xmath145 leaves if only the @xmath11-branches for @xmath146 are applied in algorithm-1 .",
    "the cases of @xmath117-branches are considered in the last proposition .",
    "now we consider the cases of @xmath13-branches .",
    "suppose that @xmath147 and @xmath83 such that @xmath116 .",
    "let @xmath148 .    if @xmath97 , then @xmath149 ( as @xmath150 ) .",
    "let @xmath151 .",
    "we further consider following sub - cases .",
    "_ sub - case 1_. suppose @xmath139 .",
    "let @xmath152 .",
    "the algorithm-1 branches at @xmath122 .",
    "the branch one includes @xmath122 into the solution ; thus , @xmath153 will be removed .",
    "this will further make @xmath154 .",
    "hence , @xmath155 will also be included into the solution .",
    "totally , in this branch , we will remove at least @xmath156 subsets from @xmath4 . in branch two , we will exclude @xmath122 from the solution . then either @xmath123 or @xmath157 must be included into the solution .",
    "thus @xmath69 is covered by @xmath123 or @xmath157 , and @xmath155 will not be in the solution . therefore , in this branch , we know that at least @xmath122 and @xmath155 will be removed .",
    "so we will obtain the recurrence relation @xmath158 which leads to @xmath138 .",
    "_ sub - case 2_. suppose @xmath159 .",
    "then @xmath155 will not in the solution and any one of @xmath160 ( one and only one of them must be included into the solution to cover @xmath18 ) will cover @xmath69 .",
    "the algorithm-1 will branch at any one of @xmath161 . without loss of generality , we branch at @xmath122 . in the branch of including @xmath122 into the solution ,",
    "@xmath162 will be removed , which will totally remove at least @xmath156 subsets . in the branch of excluding @xmath122 into the solution ,",
    "@xmath122 will be removed . thus @xmath117 subsets will be removed .",
    "we will obtain the following recurrence relation @xmath163 which leads to @xmath138 .",
    "in the case of @xmath133 , let @xmath164 .",
    "algorithm-1 branches at @xmath122 . in the first branch , @xmath122",
    "is included into the solution .",
    "then @xmath161 and at least @xmath117 subsets in @xmath136 will be removed . in the second branch ,",
    "@xmath122 is excluded , which will make @xmath119 in the new instance ; hence , in this branch , a @xmath117-branch will follow . thus even considering the worst case of the @xmath117-branch ( the recurrence relation ( 2 ) )",
    ", we will have @xmath165 which will lead to @xmath166 .    from all above cases and proposition  [ main_pr_2 ] , we will have @xmath166 .",
    "let us consider the case of doing @xmath11-branch for @xmath167 .",
    "[ main_pr_4 ] the search tree in algorithm-1 has at most @xmath145 leaves .",
    "we only need to consider the cases of @xmath11-branches for @xmath167 .",
    "suppose that @xmath111 and @xmath83 such that @xmath116 .",
    "let @xmath168 .    in the case of @xmath97 ,",
    "@xmath169 can only be @xmath170 or @xmath11 .",
    "_ sub - case 1_. suppose @xmath171 .",
    "then there is one and only one subset in @xmath172 .",
    "without loss of generality , we suppose @xmath173 .",
    "algorithm-1 will branch on @xmath122 such that in the branch of including @xmath122 into the solution , all @xmath11 subsets in @xmath110 and one subset in @xmath136 will be removed ( i.e. in this branch , at least @xmath174 subsets will be removed ; in the branch of excluding @xmath122 from the solution , one subset in @xmath175 will be included into the solution , which @xmath69 will be covered and the only subset in @xmath136 will be removed ( i.e. in this branch , two subsets will be removed ) .",
    "therefore , we will have following recurrence relation @xmath176 which leads to @xmath177 .",
    "_ sub - case 2_. suppose @xmath178 . without loss of generality",
    ", we suppose that algorithm-1 branches on @xmath122 . then it is easy to understand the we will have the following recurrence relation @xmath179 which leads to @xmath177 .    in the case of @xmath133 ,",
    "suppose @xmath180 and algorithm-1 branches on @xmath122 .",
    "then in the branch of including @xmath122 into the solution , all subsets in @xmath110 and @xmath136 will be removed ( at least @xmath181 subsets will be removed ) . in the branch of excluding @xmath122 into the solution , at least one subset @xmath122 will be removed .",
    "hence , we will have the recurrence relation @xmath182 which leads to @xmath183 .    considering all above cases , proposition  [ main_pr_2 ] , and proposition  [ main_pr_3 ]",
    ", we have @xmath184 .    [ main_th_2 ]",
    "the weighted mutually exclusive set cover problem can be solved by an algorithm with a time complexity of @xmath20 .",
    "let @xmath185 be an instance of the weighted mutually exclusive set cover problem , where @xmath2 is a ground set of @xmath3 elements , @xmath186 is a collection of @xmath1 subsets of @xmath2 , and @xmath21 is the weight function .",
    "now we prove that the problem can be solved by the algorithm-1 in time @xmath20 .",
    "the correctness of the algorithm is easy to understand . if there is an @xmath65 such that @xmath187 , then @xmath18 can not be covered by any subset in @xmath4 . thus , the problem has no solution .",
    "the step 3 of the algorithm-1 deals with this situation .",
    "if , for any given @xmath188 , @xmath189 , then there exists one and only one subset in @xmath4 that covers @xmath18 , i.e. @xmath110 must be included into the solution .",
    "thus @xmath18 and @xmath110 will be removed from the problem .",
    "this situation is dealt with in step 4 .",
    "if for all @xmath69 in @xmath70 , @xmath190 , then @xmath70 can only be covered by subset(s ) in @xmath110 . by the exclusivity , at most one subset in @xmath110 can be chosen into the solution .",
    "thus , if finding a subset @xmath191 in @xmath110 such that @xmath192 , then algoirhtm-1 will include @xmath191 into the solution , or else the problem has no solution .",
    "the step 5 of the algorithm-1 deals with this situation .    after",
    "the algorithm-1 reaches step 6 , we have : 1 ) for all @xmath193 , @xmath194 ( as @xmath18 is the element in @xmath2 with the minimum degree ) ; 2 ) there is a @xmath96 such that @xmath116 . if @xmath195 , then one and only one subset in @xmath110 will be in the solution .",
    "the step 6.1 and 6.2 correctly deals with this situation . for the cases after step 6.2",
    ", the algorithm-1 basically chooses one subset @xmath191 in @xmath110 and branches on @xmath191 such that one branch includes @xmath191 into the solution and the other branch excludes @xmath191 from the solution ( note : when @xmath97 , we used a small trick to include or exclude the additional subset in @xmath196 into or from the solution ; please refer to sub - case 1 and sub - case 2 in the proposition  [ main_pr_4 ] ) .",
    "therefore , algorithm-1 will go through the search tree and find the solution with the minimum weight ( if the solution exists ) , which is saved in step 1.1 .    by proposition  [ main_pr_4 ]",
    ", the search tree has at most @xmath145 leaves .",
    "hence , the time complexity of the algorithm is bounded by @xmath20 . if we further notice that the time to process each node is bounded by @xmath197 , then the more accurate time complexity of the algorithm is @xmath198 .",
    "in this paper , we first proved that the weighted mutually exclusive set cover problem is np - hard .",
    "then we designed the first non - trivial algorithm , which uses the @xmath1 as parameter , with a time complexity of @xmath199 for the problem .",
    "the weighted mutually exclusive set cover problem has been used to find the driver mutations in cancers  @xcite .",
    "our new algorithm can find the optimal solution for the problem , which is better than solutions found by the heuristic algorithms in the previous research  @xcite .",
    "the exclusivity is the extreme case . in practical applications",
    ", a cancer cell may have more than one mutation to perturb a common pathway .",
    "hence , a modified model is finding a set of mutations with minimum weight sum such that each cancer cell has at least one and at most t ( t=2 or 3 ) mutations in the solutions , which leads to the small overlapped set cover problem .",
    "also , on application , some mutations in cancer cells may not be detected because of errors .",
    "thus , it is not always ideal to find a solution mutations that cover all cancer cells .",
    "a modified model is finding a set of mutually exclusive mutations that cover at least @xmath200 percent ( @xmath201 or @xmath202 ) of cancer cells , which leads to the maximal set cover problem .",
    "our next research will design efficient algorithms for above two new problems .                            c. miller ,",
    "s. settle , e. sulman , k. aldape , a. milosavljevic , discovering functional modules by identifying recurrent and mutually ecxlusive mutational patterns in tumors , bmc medical genomics , 4 , pp .",
    "34 , 2011 ."
  ],
  "abstract_text": [
    "<S> in this paper , we will introduce an exact algorithm with a time complexity of @xmath0 for the weighted mutually exclusive set cover problem , where @xmath1 is the number of subsets in the problem . </S>",
    "<S> this problem has important applications in recognizing mutation genes that cause different cancer diseases .    </S>",
    "<S> department of biomedical informatics ,    university of pittsburgh , pittsburgh , pa 15219 , usa    email : songjian@pitt.edu , xinghua@pitt.edu </S>"
  ]
}
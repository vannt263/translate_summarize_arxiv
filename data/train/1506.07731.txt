{
  "article_text": [
    "the maximum bisection problem ( mbp ) is a well known combinatorial optimization problem . for a weighted graph @xmath0 with non - negative weights on the edges and where @xmath1 is an even number , the maximum bisection problem consists in finding a partition of the set of vertices @xmath2 in two subsets @xmath3 and @xmath4 , where @xmath5 and the sum of weights of the edges between the sets is maximal .",
    "the maximum bisection can be applied in different fields such as vlsi design @xcite , image processing @xcite , compiler optimization @xcite , etc .",
    "the maximum bisection problem is np hard as shown in @xcite .",
    "the complexity of finding optimal and good solutions of maximum bisection problem has given raise to various solution approaches ranging from application algorithms , exact methods to metaheuristics .",
    "widely used mathematical formulation with binary variables @xmath6 assigned to each vertex can be presented as    & _ i , j w_ij(1-x_ix_j ) + s.t .   &",
    "e^t x=0 + & x^2_j=1 ,  j=1,  ,n +    where @xmath7 is the column vector of all ones , and @xmath8 is the transpose operator . it should be noted that @xmath6 is either @xmath9 or @xmath10 so either @xmath11 or @xmath12 .",
    "this formulation enabled approximation algorithms based on semidefinite programming .",
    "goemans and williamson approach to maximum bisection in @xcite was extended by frize and jerrum in @xcite and produced randomized @xmath13 approximation algorithm . in @xcite ye improved performance ratio to @xmath14 with modification of frieze and jerrum approach .",
    "the approximation ratio was further improved to @xmath15 by halperin and zwick in @xcite , including some triangle inequalities in the semidefinite programming relaxations .",
    "the main goal of these approaches is the performance guarantee so they are not competitive with other methods for comparison in computational testing . in paper",
    "@xcite a proof that there is no polynomial approximation algorithm with performance ratio greater than @xmath16 is given .    beside these approximation algorithms",
    ", there are several approaches for its exact solving such as linear and semidefinite branch - and - cut methods @xcite , intersection of semidefinite and polyhedral relaxations @xcite .    in @xcite",
    "is discussed the minimum graph bisection problem and branch - and - cut approaches for finding its solution .",
    "the problem definition can be described as follows :    let @xmath17 be an undirected graph with @xmath18 and edge set @xmath19 . for given vertex weights @xmath20 , and edge costs @xmath21 , @xmath22 , a partition of the vertex set @xmath2 into two disjoint clusters @xmath3 and @xmath4 with sizes @xmath23 and @xmath24 , where @xmath25 $ ] , is called a bisection . finding a bisection such that the total cost of edges in the cut @xmath26 is minimal is the minimum bisection problem ( mb ) .",
    "if the function @xmath27 which represents the weight of nodes is equal to one for all nodes and @xmath28 is equal to @xmath29 and weights on edges @xmath30 takes negative values this problem becomes the maximum graph bisection problem . in order to apply brunch - and - cut approaches authors in @xcite presented an integer linear programming formulation .",
    "it can be assumed without loss of generality that @xmath31 contains a spanning star rooted at @xmath32 .",
    "indeed , for a selected node @xmath33 the set of edges can be extended so that @xmath32 is adjacent to all other nodes in @xmath2 , where the weights @xmath34 of new edges is equal to zero .",
    "let @xmath35 be the binary variables defined as    @xmath36    the mathematial model is formulated as follows :    & _ ij w_ijy_ij + s.t .",
    "& f_s+_vs f_v(1-y_sv)f + & _ vs f_v y_svf + & _ ijcu y_ij+_iju ( 1-y_ij)1 ,   cycle  ce , odd   uc + & y\\{0,1}^e    semidefinite programming formulation given in @xcite is very similar to the one already presented in this paper .",
    "separation routines for valid inequalities to the bisection cut polytope is developed and incorporated and incorporated into a common branch - and - cut framework for linear and semidefinite relaxations .",
    "on the basis of large sparse instances coming from vlsi design they showed the good performance of the semidefinite approach versus the mainstream linear one .    in the paper",
    "@xcite authors presented a method for finding exact solutions of the max - cut problem based on semidefinite formulation .",
    "semidefinite relaxation is used and combined with triangle inequalities , which is solved with the bundle method .",
    "this approach uses lagrangian duality to get upper bounds with reasonable computational effort .",
    "the expensive part of their bounding procedure is solving the basic semidefinite programming relaxation of the max - cut problem .",
    "authors also discussed applicability of their approach on the special case of max - cut problem where cardinality of partitions is equal i.e. maximum graph bisection problem .",
    "another set of approaches , especially for larger scale instances are metaheuristics . from the wide field of applied metaheuristics let mention some of them such as : memetic search @xcite , variable neighbeerhood search @xcite , neural networks @xcite , deterministing anealing @xcite    memetic search approach presented in @xcite integrates a grouping crossover operator and a tabu search optimization procedure .",
    "the proposed crossover operator preserves the largest common vertex groupings with respect to the parent solutions while controlling the distance between the offspring solution and its parents .",
    "experimental results indicates that the memetic algorithm improves , in many cases , the best known solutions for mbp .",
    "variable neighborhood search metaheuristic can obtain high quality solution for max - cut problems .",
    "however , comparing to max - cut problems , max - bisection problems have more complicated feasible region via the linear constraint @xmath37 .",
    "it is hard to directly apply the typical vns metaheuristic to deal with max - bisection problems . in @xcite ling et al .",
    "combined the constraint @xmath38 with the objective function and obtained a new optimization problem which is equivalent to the max - bisection problem , and then adopted a distinct greedy local search technique to the resulted problem .",
    "this modified vns metaheuristic based on the greedy local search technique is applied to solve max - bisection problems .",
    "numerical results indicate that the proposed method is efficient and can obtain high quality solutions for max - bisection problems .    in @xcite ,",
    "a new lagrangian net algorithm is proposed to solve max - bisection problems .",
    "the bisection constraints is relaxed to the objective function by introducing the penalty function method .",
    "a bisection solution is calculated by a discrete hopfield neural network ( dhnn ) .",
    "the increasing penalty factor can help the dhnn to escape from the local minimum and to get a satisfying bisection .",
    "the convergence analysis of the proposed algorithm is also presented .",
    "finally , numerical results of large - scale g - set problems show that the proposed method can find a better optimal solutions .",
    "a deterministic annealing algorithm is proposed for approximating solution of max bisection problem in @xcite .",
    "the algorithm is derived from the introduction of a square - root barrier function , where the barrier parameter behaves as temperature in an annealing procedure and decreases from a sufficiently large positive number to 0 .",
    "the algorithm searches for a better solution in a feasible descent direction , which has a desired property that lower and upper bounds on variables are always satisfied automatically if the step length is a number between 0 and 1 .",
    "it is proved that the algorithm converges to at least an integral local minimum point of the continuous problem if a local minimum point of the barrier problem is generated for a sequence of descending values of the barrier parameter with zero limit .",
    "numerical results show that the algorithm is much faster than one of the best existing approximation algorithms while they produce more or less the same quality solution .",
    "any partition of the node set @xmath2 in two sets defines a set of edges , that we call a _ cut _ , with ends in different partitions .",
    "if a graph has weight on edges , than _ weight of the cut _ is defined as the sum of weights of edges in the cut .",
    "the problem of finding a partition of the node set where the weight of the cut is maximal is called a max - cut problem . from this definition",
    "it follows that there is no restriction on the cardinality of the partitions .",
    "maximum graph bisection problem is obtained from max - cut problem if it is required that the partitions have equal cardinality . from the definition",
    "it follows that the max - cut problem is a generalization of the maximum graph bisection problem , and that maximum graph bisection problem can be solved by introducing restrictions about cardinality in max - cut problem .    in this paper a multidimensional generalization of maximum bisection problem",
    "is introduced , where weights on edges instead of numbers are @xmath39-tuples of positive real numbers .",
    "the weight of the cut is the minimum of sums of the coordinates of edge weights .",
    "the goal is to find a partition of the set of vertices @xmath2 in two sets with equal number of vertices and maximal weight of the cut .",
    "for @xmath40 we have an ordinary maximum bisection problem . from the fact that maximum bisection problem is @xmath41 hard , and that the maximum bisection problem is a special case of the multidimensional maximum bisection problem it follows",
    "that multidimensional maximum bisection problem is also @xmath41 hard .",
    "the weight of the cut in the multidimensional maximum bisection problem is calculated in two steps : firstly , the coordinates of the weight vectors on the edges of the cut are summed and secondly , the minimum of the sums is determined .",
    "this minimum is the weight of the cut .",
    "as it can be seen it is more complex than just summing the weights on the edges of the cut , which is the case in the mbp .",
    "although mmbp is a straightforward generalization of the mbp , most of the existing methods for solving the mbp can hardly be applied to the mmbp .",
    "the semidefinite mathematical formulation for the mbp can not be easily transformed to the one for the mmbp . in the mbp semidefinite formulations ,",
    "the weights of the edges directly figure in the objective function and they are treated as numbers . in the mmbp , on each edge a vector of the weights is assigned and we are not interested only in the coordinates , but in the minimum of their sums .",
    "this reason makes approximation algorithms based on semidefinite programming presented in previous discussion , notably in @xcite , @xcite , @xcite , @xcite and @xcite , inapplicable for solving mmbp .",
    "brunch and cut methods based on linear and semidefinite formulations presented in @xcite can not be applied for several reasons . in order to generate the cycles the authors in @xcite introduced the additional edges with the weights equal to zero .",
    "if this method is expanded in the multidimensional variant by introducing the additional edges , having the vectors of the weights of all zeros , a problem will appear : these new edges will be favored in the cut , since the minimum of the sums of the coordinates has to be determined .",
    "also , it is not easy to reformulate the objective function where weight of edges are used . since the semidefinite programming formulation is very similar to the one used by the approximation algorithms , the same consideration presented in the previous paragraph can also be applied in this case .",
    "the method described in @xcite requires solving the basic semidefinite programming relaxation of the max cut problem which is case of mmbp can not be applied in the case of mmbp , because in mmbp the weights are represented as vectors .    in a proposed memetic search approach presented in @xcite each individual in a population",
    "presents a bisection cut .",
    "if this approach is applied to the mmbp , the calculation of the fitness function could be pretty complicated . nevertheless ,",
    "if this approach is sill applied for solving mmbp , the calculation efforts in terms of time will be enormous .",
    "the variable neighborhood search approach proposed in @xcite combines the constraint @xmath42 with the objective function . in the case of mmbp , this approach is not applicable , because the weights are now vectors and the constraint etx=0 can not be fitted with the objective function .",
    "also , the greedy local search with a sorting procedure can not be applied in the case of mmbp since it is unclear which coordinate should be sorted .",
    "proposed lagrangian net algorithm in @xcite can not be easily applied on solution of mmbp .",
    "first of all , penalty functions will have to be modified in order to reflect the fact that weights are now vectors .",
    "second , the convergence to optimal solution could not be easily translated in a such space where weight of edges are vectors instead of numbers .",
    "a deterministic annealing algorithm from [ 19 ] can not be easilly applied , since it is not clear what `` a feasible descent direction '' means in the case of mmbp because the weights are now vectors .",
    "also , the convergence to an integral local minimum also can not be guaranteed in the case of mmbp .    like many other graph partitioning problems ,",
    "mbp is applied for solving various practical problems , such as vlsi design @xcite , image processing @xcite , compiler optimization @xcite , social network analysis etc .",
    "multidimensional maximum bisection problem appears whenever relation between entities are vectors of numbers instead of single numbers .",
    "some practical application are :    - for arbitrary pair of workers can be established several aspects of incompatibility .",
    "that aspect could be character , knowledge , experience , etc . where the higher level of incompatibility is represented with greater numbers .",
    "the problem is to divide the group of workers in two teams with equal size where the greatest part of incompatibility among workers lies between teams .    - in vlsi design electrical components also have certain aspects that might be considered such as interference , current used , interconnectedness , heat dissipation etc .",
    "the problem is to designate electrical components to one of the two boards in such way that , for example , the two warmest components are on the different boards .",
    "before the milp formulation , the formal mathematical formulation of the problem is given .",
    "let @xmath0 be an undirected graph , and @xmath34 is a function that assigns to each edge @xmath43 a @xmath44-tuple of positive real numbers @xmath45 and @xmath46 .",
    "the cut @xmath47 determined by the set @xmath3 is defined as + @xmath48 from the definition , it is obvious that the cuts @xmath47 and @xmath49 are the same sets .",
    "the weight of the cut is defined as @xmath50 the goal of the multidimensional maximum bisection problem is to find a partition of the set of vertices in two sets @xmath3 and @xmath4 where @xmath5 and where the weight of the cut @xmath51 is maximal .",
    "the multidimensional maximum bisection problem can be illustrated by the example given on the figure 1 , which optimal solution is given with the set @xmath52 .",
    "the set @xmath3 generates the cut @xmath53",
    "@xmath54 @xmath55 @xmath56 @xmath57 where the sums over coordinates are @xmath58 and the weight of the cut is @xmath59 .",
    "let @xmath46 , @xmath60 , @xmath44 be dimension of weight vector and @xmath61 be the @xmath62-th coordinate of the weight vector for the edge @xmath63 .",
    "@xmath64    @xmath65    the exact solution of the multidimensional maximum bisection problem using mixed integer linear programming can be stated as :    @xmath66    such that    @xmath67    @xmath68    @xmath69    @xmath70    @xmath71    @xmath72    a partition of set of vertices of a given graph @xmath0 in two sets @xmath3 and @xmath4 is the solution of the generalized max - bisection problem if and only if constraints ( [ og1])-([og6 ] ) and objective function are satisfied .",
    "( @xmath73 ) suppose that @xmath3 is an optimal solution and its corresponding cut is @xmath47 .",
    "it will be proved that constraints ( @xmath74)-(@xmath75 ) are fulfilled .",
    "based on the definition of weight of the cut , the constraint ( @xmath74 ) is true , and based on the goal of the multidimensional maximum bisection problem , ( [ goal ] ) also holds .    if @xmath76 than ( @xmath77 ) and ( @xmath78 ) are obviously true .",
    "if @xmath79 than the corresponding edge @xmath43 belongs to the cut , and exactly one vertex incident to the edge @xmath63 must be in the set @xmath3 , so either @xmath80 or @xmath80 and therefore constraints ( @xmath77 ) and ( @xmath78 ) holds .    the constraint ( @xmath81 ) is obviously fulfilled as it is required that the vertex set is partitioned into two set with the equal number of vertices , and the constraints ( @xmath82 ) and ( @xmath82 ) are fulfilled by the definition and the fact that maximum of the cut is to be found .",
    "( @xmath83 ) suppose that objective and constraints are satisfied .",
    "the partition of @xmath2 into two sets @xmath3 and @xmath4 is determined by the set @xmath84 , where the cut is @xmath85 .    from the constraint ( @xmath74 )",
    "it follows that @xmath86 meaning that @xmath87 and it follows from the objective function that @xmath88 is equal to the greatest weight of the cut .    from the constraint ( @xmath82 ) @xmath89 is either 0 or 1 .    if @xmath79 then from the constraints ( @xmath77 ) and ( @xmath78 ) it follows that both vertices of the edge @xmath63 are not in the same set @xmath3 nor set @xmath4 .",
    "if @xmath76 then from the constraints ( @xmath90)-(@xmath78 ) it follows that both vertices of the edge @xmath63 must be in the same partitions set ( either @xmath3 or @xmath4 ) .",
    "if vertices are in different partitions , than it can be concluded that the weight of the edge @xmath63 is not included in the weight of the cut , and therefore @xmath88 is not maximal which contradicts to the supposition that all constraints are fulfilled . from this",
    "it follows that vertices of the edge must be in the same partition .    from the constraint ( @xmath81 )",
    "it follows that @xmath91 which means that the vertex set is partitioned into two sets with the equal number of vertices .    from the constraints ( @xmath82 )",
    "it follows that each vector must be in either @xmath3 or in @xmath4 .",
    "the same applies for the edges .",
    "the experiments were conducted on an intel core i3 running on 1.7ghz with 3 gb ram using cplex 12.4 , gurobi 5.6 and total enumeration . in order to run the experiments , a set of 27 random graphs",
    "was generated : graphs with 10 vertices and 15 , 25 and 40 edges ; graphs with 20 vertices and 30 , 70 and 150 edges ; graphs with 30 vertices and 50 , 150 and 400 edges ; graphs with 50 vertices and 80 , 300 and 1000 edges ; graphs with 100 vertices and 150 , 500 and 3000 edges ; graphs with 300 vertices and 500 , 2000 , 10000 and 30000 edges ; graphs with 500 vertices and 1000 , 3000 , 10000 and 60000 edges and graphs with 1000 vertices and 1500 , 10000 , 100000 and 350000 edges .",
    "for each edge of a random graph , a @xmath92-tuple is generated where each coordinate is a random number in the range @xmath93 .",
    "the experiments were conducted using different vector dimensions : 1 , 2 , 3 , 4 , 5 , 10 , 15 and 20 of the same instances in order to confirm that the increase of the dimension of vectors over the edges significantly complicate finding of the optimal solution .",
    "all tests were run with 7200 seconds time limit .",
    "numerical results for instances where optimal solutions were found is shown in tables @xmath94 . in the tables",
    "@xmath95 numerical results are shown for the instances where optimal solutions were not found .",
    "all tables have common first two columns . in the first column , denoted with _ instance _ , the names of instances are given in the format _",
    "xxx_yyy _ where _ xxx _ is the number of the vertices and _ yyy _ is the number of the edges .",
    "for example , the instance 030_400 is a graph with @xmath96 vertices and @xmath97 edges . in the second column , denoted with @xmath44",
    ", a vector dimension is given .",
    "in the tables @xmath98 in the third column , denoted with _",
    ", the optimal result is given .",
    "the subsequent two columns contain information about total enumeration : time when optimal solution is found ( @xmath99 ) and total running time ( @xmath100 ) .",
    "the last four columns contain information about cplex and gurobi time needed for finding optimal solution and running time , denoted in the same manner .",
    "third column of the tables @xmath95 contains the maximum of the solutions found for each method ( enumeration , cplex and gurobi ) . in the subsequent two columns",
    "the solution is given ( denoted with sol ) and the time needed for finding that optimal solution ( denoted with @xmath99 ) using total enumeration .",
    "the following four columns contain information about running cplex and gurobi denoted in the same manner .",
    "as it can be seen in the table @xmath101 for instance 030_400 and @xmath102 , gurobi did nt finish their work in 7200 seconds or it run out of memory as well as cplex for @xmath103 .    in the tables",
    "@xmath95 neither of cplex , gurobi and total enumeration complete finding the optimal solutions for the given 7200 seconds for smaller instances and for larger instances because insufficient amount of memory ( instances with 1000 vertices ) .    obviously , the number of vertices and edges has great influence on the particular solver performance .",
    "for example , for the instance 030_050 with vector dimension 1 both cplex and gurobi completed finding the optimal solution for less than one second , while for the instance 030_400 it took 775.5 and 193.2 seconds respectively to find the optimal solution .",
    "the results , given in the tables @xmath104 , also indicates that the complexity highly increases with the increase of the vector dimension .",
    "for example , for the instance 040_400 where the vector dimension @xmath44 is equal to 4 , it took more than 5000 second for both cplex and gurobi to find the solution .",
    "tables @xmath104    .instances with known optimal solutions [ cols=\"^,^,^,^,^,^,^,^,^ \" , ]",
    "this paper has taken into consideration a multidimensional generalization of maximum bisection problem where weights on the edges are @xmath39-tuples .",
    "a mixed integer linear programming formulation is introduced with proof of its correctness .",
    "usability of the model is tested on the set of 27 randomly generated graphs with number of vertices ranging from @xmath105 to @xmath106 and number of edges ranging from @xmath107 to @xmath108 .",
    "the proposed formulation is tested using standard ilp solvers cplex and gurobi , on randomly generated instances .",
    "the computational results indicates that the complexity highly increases with the increase of vector dimension especially for the dense graphs",
    ".    in future work it may be useful to take into consideration @xmath39-tuples as weights in several related problems , such as max - cut , max @xmath44-cut , max @xmath44-vertex cover , etc .",
    "other direction could be developing some metaheuristics in cases of large - scale instances which is out of reach for exact methods .",
    "armbruster m. , fgenschuh m. , helmberg c. , martin a. , 2008 . a comparative study of linear and semidefinite branch - and - cut methods for solving the minimum graph bisection problem . in proc .",
    "conf . integer programming and combinatorial optimization ( ipco ) , 5035 , 112124 .",
    "goemans , m.x . , williamson , d.p . , 1995 .",
    "improved approximation algorithms for maximum cut and satisfiability problems using semidefinite programming , journal of the association for computing machinery , 42(6):1115 - 1145 ."
  ],
  "abstract_text": [
    "<S> this work introduces a multidimensional generalization of the maximum bisection problem . </S>",
    "<S> a mixed integer linear programming formulation is proposed with the proof of its correctness . </S>",
    "<S> the numerical tests , made on the randomly generated graphs , indicates that the multidimensional generalization is more difficult to solve than the original problem .    </S>",
    "<S> [ firstpage ]    _ keywords : _ graph bisection , mixed integer linear programming , combinatorial optimization .    </S>",
    "<S> acm computing classification system ( 1998 ) : g.1.6 </S>"
  ]
}
{
  "article_text": [
    "a _ @xmath0-colouring _ of a graph is an assignment of the black or white colour to the nodes so that each black node is adjacent only to white nodes , and vice versa .",
    "a _ weak @xmath0-colouring _ assigns the colours so that each non - isolated black node is adjacent to at least one white node , and vice versa .",
    "a graph can be @xmath0-coloured if and only if it is bipartite ; a weak @xmath0-colouring always exists .",
    "given a global view of the graph , it is easy to find a @xmath0-colouring of a bipartite graph and a weak @xmath0-colouring of any graph .    in a distributed setting , it is not possible to @xmath0-colour a bipartite graph without essentially global information of the whole graph .",
    "however , naor and stockmeyer  @xcite showed in 1995 that one can find a weak @xmath0-colouring with a _ constant - time _",
    "synchronous distributed algorithm , assuming that the degree of each node is _ odd _ and bounded by a constant .",
    "constant - time distributed algorithms are known as _ local algorithms _",
    "@xcite  in a local algorithm , the output of each node depends only on its local neighbourhood , and the radius of the neighbourhood does not depend on the number of nodes in the network .",
    "we present local approximation algorithms for both @xmath0-coloured and weakly @xmath0-coloured graphs .",
    "we assume that a colouring is given in the input , i.e. , that every node knows its colour .",
    "we study exactly how much this additional information helps from the perspective of local approximation algorithms .",
    "we focus on two classical problems  minimum dominating set and maximum matching .",
    "we consider bounded - degree graphs ; we assume that there is a known constant @xmath2 such that the degree of any node is at most  @xmath2 .",
    "the results are summarised in table  [ tab : results ] .",
    "all results are tight : there are matching upper and lower bounds .",
    ".the best possible approximation factors achievable by a deterministic local algorithm . [ cols=\"<,<,<,<\",options=\"header \" , ]     in particular , we show that a weak @xmath0-colouring is as good as a @xmath0-colouring from the perspective of the local approximability of the dominating set problem . furthermore , a weak @xmath0-colouring provides enough symmetry - breaking information so that an approximation of a maximum matching can be found locally .",
    "finally , with a @xmath0-colouring , the maximum matching can be approximated to within an arbitrary constant .",
    "we also look at a third problem , maximum independent set . there is a trivial local @xmath2-approximation algorithm for independent set in @xmath0-coloured graphs : take all white nodes and all isolated black nodes .",
    "however , we show that in weakly @xmath0-coloured graphs , the problem does not admit any local constant - factor approximation algorithm ( theorem  [ thm : neg - is - weak ] ) .",
    "let @xmath3 be a graph identified with a distributed system .",
    "each node @xmath4 is a device ; there is an edge @xmath5 if @xmath6 and @xmath7 can communicate with each other . to avoid trivialities , we assume that there are no isolated nodes in  @xmath8 .",
    "each node runs the same deterministic algorithm @xmath9 .",
    "communication is synchronous : on every time step , all nodes first receive messages from their neighbours , then all nodes perform local computation , and finally all nodes send messages to their neighbours .",
    "the algorithm running in the node @xmath4 knows the degree of @xmath7 .",
    "furthermore , if the node @xmath7 has a label ( such as a colour or a unique identifier ) , then @xmath9 has access to the label .",
    "if the edges are oriented , then @xmath9 knows which edges are outgoing and which edges are incoming .",
    "finally , every node knows the maximum node degree @xmath2 .",
    "the distributed algorithm @xmath9 is a local algorithm if there is a constant @xmath10 such that the algorithm completes in @xmath10 synchronous communication rounds , regardless of the input graph @xmath8 .",
    "the algorithm @xmath9 and the constant @xmath10 may depend on the degree bound @xmath2 ; however , the time @xmath10 can not depend on the number of nodes in @xmath8",
    ".    the results that we present are essentially oblivious to any other details of the model of distributed computing .",
    "all lower bounds ( impossibility results ) hold even if we use linial s  @xcite model .",
    "we can assume that each node knows the total number of nodes @xmath11 , each node is assigned a unique identifier from the set @xmath12 , local computation is free , and the size of a message is unbounded .    our upper bounds ( algorithms ) do not need to exploit any of these assumptions .",
    "the nodes do not need to know @xmath11 .",
    "local computations are simple and messages are small ; in particular , the size of a message does not depend on @xmath11 .",
    "furthermore , the algorithms do not require unique identifiers .",
    "with the exception of theorem  [ thm : pos - ds - odd ] , the algorithms only assume that there is a _ port numbering _",
    "@xcite : each node imposes an ordering on incident edges .",
    "randomised local algorithms exist for dominating set  @xcite , matching  @xcite , and independent set  @xcite . however , deterministic local approximation algorithms are scarce .",
    "the set of all nodes is a trivial @xmath13-approximation of a minimum dominating set , and there are local constant - factor approximation algorithms for dominating set in planar graphs  @xcite .",
    "some positive results are known for matchings in bounded - degree @xmath0-coloured graphs : local algorithms exist for finding a maximal matching  @xcite and a constant - factor approximation of a maximum - weight matching  @xcite .    to present the earlier negative results on which we build our lower bounds , we need the following definition : a _ numbered directed @xmath14-cycle _ @xmath15 is a directed @xmath14-cycle where each node is assigned a unique identifier from the set @xmath16 .",
    "each node has one incoming and one outgoing edge .",
    "linial s  @xcite seminal work shows that there is no local algorithm for finding a maximal independent set in @xmath15 .",
    "recently , czygrinow et al .",
    "@xcite and lenzen and wattenhofer  @xcite have extended this result to the approximability of the maximum independent set problem .",
    "we include here a proof of an adaptation of the inapproximability result , since the proofs of our lower bounds build directly upon it .",
    "we follow czygrinow et al.s  @xcite techniques . in the proof ,",
    "@xmath17-set _ is a set with @xmath17 elements .",
    "[ thm : neg - is - cycle ] for any @xmath18 and any local algorithm @xmath9 , there exists an integer @xmath19 such that for every @xmath20 there is a numbered directed @xmath14-cycle @xmath15 where @xmath9 does not produce an @xmath21-approximation for maximum independent set .",
    "denote by @xmath10 the number of synchronous communication rounds that @xmath9 takes .",
    "let @xmath22 . by ramsey",
    "s theorem  @xcite , there is a finite @xmath23 with the following property : let @xmath24 be a set with at least @xmath23 elements , and assign an arbitrary label @xmath25 to each @xmath26-set @xmath27 .",
    "then there is an @xmath28-set @xmath29 and a label @xmath30 such that @xmath31 for every @xmath26-set @xmath32 .",
    "we say that @xmath33 is an @xmath34-coloured @xmath28-subset of @xmath24 .",
    "let @xmath35 , let @xmath36 and @xmath37 .",
    "we first assign a label @xmath25 to each @xmath26-set @xmath27 .",
    "let @xmath38 with @xmath39 .",
    "consider a fragment of a numbered directed @xmath14-cycle with the unique identifiers @xmath40 , in this order ; let @xmath25 be the output of @xmath9 for the node @xmath41 , with @xmath42 denoting that the node joins the independent set .",
    "observe that the output only depends on the set  @xmath43 .",
    "let us next construct a numbered directed @xmath14-cycle @xmath15 as follows . by the choice of @xmath19 , we can find an @xmath44-coloured @xmath28-subset @xmath45 of @xmath24 for an @xmath46 . as @xmath47 , we can then find an @xmath48-coloured @xmath28-subset @xmath49 of @xmath50 for an @xmath51 , etc .",
    "overall we find @xmath52 disjoint sets @xmath53 such that @xmath54 is an @xmath55-coloured @xmath28-subset of @xmath24 .",
    "let @xmath56 with @xmath57 for each @xmath58 .",
    "let @xmath59 .",
    "assign the unique identifiers in @xmath15 in the order @xmath60    an optimal independent set of @xmath15 contains at least @xmath61 nodes ; to prove the theorem , it suffices to show that the algorithm @xmath9 outputs @xmath42 for at most @xmath62 nodes . to see this ,",
    "observe that for each @xmath58 the output of the nodes @xmath63 is @xmath55 .",
    "since they can not all be in the independent set , we have @xmath64 .",
    "hence there are at most @xmath65 nodes that output  @xmath42 . by construction , @xmath66 and @xmath67 .",
    "this immediately gives a negative result for the approximability of a maximum matching as well : given a matching @xmath68 in a numbered directed @xmath14-cycle , we can construct an independent set @xmath69 with @xmath70 .",
    "[ cor : neg - m - general ] there is no local constant - factor approximation algorithm for the maximum matching problem .",
    "in this section , we present local reductions that establish lower bounds for local approximation algorithms .",
    "all reductions are from the maximum independent set problem in numbered directed cycles ( theorem  [ thm : neg - is - cycle ] ) .",
    "the reductions yield the strongest possible negative results , as there is a matching positive result for each of them . as an introduction to the local reductions , we begin with a known result for general graphs ; theorem  [ thm : neg - ds - general ] is a restatement of the negative results for planar graphs  @xcite and unit - disk graphs  @xcite .",
    "[ thm : neg - ds - general ] for any even @xmath71 and @xmath72 , there is no local algorithm with approximation factor @xmath73 for the minimum dominating set problem .",
    "suppose that such an algorithm @xmath9 exists for some @xmath74 .",
    "let @xmath75 .",
    "we will use @xmath9 to find an independent set with at least @xmath76 nodes in numbered directed @xmath14-cycles for any @xmath14 divisible by @xmath77 .",
    "this is a contradiction with theorem  [ thm : neg - is - cycle ] .",
    "given an @xmath14-cycle @xmath15 ( figure  [ fig : reductions]a ) , we construct the @xmath78-regular graph @xmath79 ( figure  [ fig : reductions]b illustrates the case @xmath80 ) ; the node identifiers are inherited from the cycle @xmath15 .",
    "we simulate the algorithm @xmath9 in the graph @xmath8 .",
    "there is a dominating set of @xmath8 with @xmath81 nodes ; hence @xmath9 must output a dominating set @xmath82 with at most @xmath83 nodes . thus @xmath84 .",
    "the subgraph of @xmath15 induced by @xmath85 consists of paths with at most @xmath2 nodes each ; hence there are at least @xmath86 such paths .",
    "construct an independent set @xmath87 with @xmath88 by taking the first node of each such path .",
    "[ thm : neg - ds - strong ] for any @xmath71 and @xmath72 , there is no local algorithm with approximation factor @xmath89 for dominating sets in @xmath0-coloured graphs .",
    "suppose that such an algorithm @xmath9 exists .",
    "let @xmath90 .",
    "we will use @xmath9 to find an independent set with at least @xmath76 nodes in numbered directed @xmath14-cycles for any @xmath14 divisible by @xmath77 .",
    "this is a contradiction with theorem  [ thm : neg - is - cycle ] .",
    "given an @xmath14-cycle @xmath15 ( figure  [ fig : reductions]a ) , we construct a @xmath2-regular @xmath0-coloured graph @xmath8 as follows ( figure  [ fig : reductions]c shows the case @xmath91 ) . for each node @xmath7 in @xmath15 , there is a white node @xmath92 and a black node @xmath93 in @xmath8 .",
    "if the directed path from @xmath6 to @xmath7 in @xmath15 has at most @xmath94 edges , then there is an edge @xmath95 in @xmath8 .",
    "the node identifiers are inherited from the cycle  @xmath15 : for example , let @xmath96 and @xmath97 .",
    "we simulate the algorithm @xmath9 in the graph @xmath8 .",
    "there is a dominating set of @xmath8 with @xmath98 nodes ; hence @xmath9 must output a dominating set @xmath82 with at most @xmath99 nodes .",
    "let @xmath100 ; we have @xmath101 the subgraph of @xmath15 induced by @xmath102 consists of paths with at most @xmath94 nodes each ; hence there are at least @xmath103 such paths .",
    "construct an independent set @xmath87 with @xmath88 by taking the first node of each such path .",
    "[ thm : neg - m - weak ] for any @xmath104 and @xmath72 , there is no local algorithm with approximation factor @xmath89 for maximum matching in weakly @xmath0-coloured graphs .",
    "assume that such an algorithm @xmath9 exists .",
    "let @xmath105 we will use @xmath9 to find an independent set with at least @xmath76 nodes in numbered directed @xmath14-cycles for any even @xmath14 .",
    "this is a contradiction with theorem  [ thm : neg - is - cycle ] .",
    "given an @xmath14-cycle @xmath106 , we construct a weakly @xmath0-coloured graph @xmath8 as follows ( figure  [ fig : reductions]d shows the case @xmath91 ) . for each node @xmath7 in @xmath15 , there are @xmath77 nodes in @xmath8 : white nodes @xmath107 and a black node @xmath108 .",
    "each black node @xmath108 has degree @xmath2 : it is adjacent to all white nodes @xmath107 .",
    "each white node has degree @xmath109 : for each edge @xmath110 in @xmath15 , there are edges @xmath111 in @xmath8 .",
    "there is a matching with @xmath112 edges in @xmath8 . to see this ,",
    "let @xmath43 be a perfect matching in @xmath15 , with @xmath113 . construct a perfect matching in @xmath8 as follows : for each edge",
    "@xmath110 in @xmath43 , choose the edges @xmath114 , @xmath115 , and @xmath116 for each @xmath117 .",
    "we simulate the algorithm @xmath9 in the graph @xmath8 .",
    "the algorithm must output a matching @xmath68 with at least @xmath118 edges . since there are @xmath14 black nodes in @xmath8 , there are at least @xmath119 edges in @xmath68 that connect a pair of white nodes . for each @xmath120 , let @xmath121",
    "now each @xmath122 is an independent set in @xmath15 and @xmath123 .",
    "we will now use the sets @xmath122 to construct an independent set @xmath87 in @xmath15 with @xmath88 .",
    "at least one of the sets @xmath122 satisfies this condition , but a local algorithm can not find the right index @xmath58 ; hence we proceed as follows .",
    "we begin with @xmath124 . at each iteration @xmath120 , for each node @xmath125 in parallel , we ( i )  add @xmath7 to @xmath87 , and ( ii )  remove the copy of @xmath7 and its neighbours from @xmath126 .    in the end",
    ", @xmath87 is an independent set and each @xmath122 is empty .",
    "furthermore , for each node added to @xmath87 there are at most @xmath127 nodes that we removed from @xmath128 ; the worst case is that @xmath129 contains a node @xmath7 and each of @xmath130 contains the two neighbours of @xmath7 . hence @xmath131 .",
    "[ thm : neg - is - weak ] there is no local constant - factor approximation algorithm for independent set in weakly @xmath0-coloured graphs .",
    "the reduction is from an @xmath14-cycle @xmath15 to the @xmath109-regular weakly @xmath0-coloured graph @xmath8 illustrated in figure  [ fig : reductions]e .",
    "if we can find an independent set with at least @xmath17 nodes in @xmath8 , then techniques similar to those in the proof of theorem  [ thm : neg - m - weak ] can be used to construct an independent set with at least @xmath132 nodes in @xmath15 . by theorem  [ thm : neg - is - cycle ]",
    ", we must have @xmath133 .",
    "in this section we give a local algorithm to find a spanning forest of stars in a weakly @xmath0-coloured graph .",
    "once the stars are formed , it is simple to find a dominating set ( roots of the stars ) and a matching ( one edge for each star ) .    to find a small dominating set",
    ", we would prefer large ( high - degree ) stars , and to find a large matching , we would prefer small ( low - degree ) stars .",
    "nevertheless , the same approach ",
    "find _ any _ set of stars  yields the _ same _ approximation factor @xmath1 for both problems .",
    "moreover , this is the best possible ( theorems [ thm : neg - ds - strong ] and [ thm : neg - m - weak ] ) .    to build the stars , we can use an algorithm that is similar to the _ balanced_dom _ subroutine in kutten and peleg  @xcite .",
    "we first construct a forest @xmath134 of rooted trees ( figure  [ fig : weak - algo ] ) ; the directed edges in @xmath134 point towards the trees roots .",
    "the construction is simple :    1 .",
    "each black node @xmath135 chooses a white neighbour @xmath136 ; add the edge @xmath137 to  @xmath134 ( figure  [ fig : weak - algo]b ) .",
    "each white node @xmath136 which does not have any children in @xmath134 chooses a black neighbour @xmath135 ; add the edge @xmath138 to  @xmath134 ( figure  [ fig : weak - algo]c ) .",
    "at this point , every node belongs to a tree ; the depth of each tree is @xmath42 or @xmath0 .",
    "next we make local modifications within each tree , depending on its structure .",
    "let @xmath139 be the root of the tree .    1 .",
    "if all leaves are at depth @xmath42 , do nothing .",
    "2 .   if there are leaf nodes both at depth @xmath42 and at depth @xmath0 , remove all edges @xmath140 where @xmath141 is a non - leaf child .",
    "3 .   otherwise , choose arbitrarily a child @xmath142 of the root . remove all edges",
    "@xmath140 where @xmath141 is a child of the root , and @xmath143 .",
    "reverse the edge @xmath144 .",
    "now @xmath134 consists of stars , i.e. , rooted trees of depth @xmath42 ( figure  [ fig : weak - algo]d ) .",
    "each node is either a root node with at least one child , or a leaf node .",
    "the algorithm can be implemented by using only a port numbering ; unique node identifiers are not needed .",
    "the port numbers are used both for representing the forest @xmath134 ( e.g. , a child does not know the identity of the parent node , but it knows the port number of the edge that leads to the parent node ) and for breaking ties ( e.g. , when a black node has to choose one of its white neighbours ) .    next we present the applications of the stars .",
    "[ thm : pos - ds - weak ] for any @xmath145 , there is a local algorithm with approximation factor @xmath146 for dominating set in weakly @xmath0-coloured graphs .",
    "let @xmath82 be the set of the roots of the stars .",
    "the set @xmath82 is a dominating set with at most @xmath147 nodes .",
    "let @xmath148 be a minimum dominating set . since a node can not dominate more than @xmath2 neighbours , @xmath149 .",
    "therefore @xmath82 is a @xmath146-approximation of a minimum dominating set .",
    "[ thm : pos - m - weak ] for any @xmath145 , there is a local algorithm with approximation factor @xmath146 for maximum matching in weakly @xmath0-coloured graphs .",
    "let @xmath68 be the set of edges with one edge chosen arbitrarily from each star .",
    "the set @xmath68 is a matching .",
    "each star contains at most @xmath77 nodes ; hence @xmath150 . for an optimal matching @xmath151 , we have @xmath152 .",
    "hence @xmath68 is a @xmath146-approximation of a maximum matching .",
    "now we are ready to present an application of the naor  stockmeyer algorithm for weak @xmath0-colouring  @xcite and the techniques that we developed in section  [ sec : weak - algo ] . in this section",
    "we assume that the graph is not only port - numbered , but there is also an orientation : for each edge @xmath5 , exactly one direction @xmath110 or @xmath153 has been chosen .",
    "the orientation can be used to break the symmetry in some cases . specifically ,",
    "if each node of @xmath8 has an odd degree , then we can use naor and stockmeyer s algorithm to find a weak @xmath0-colouring ; the algorithm does not require unique identifiers  @xcite .",
    "theorem  [ thm : pos - ds - weak ] then provides a factor @xmath146 approximation for dominating set .    however , in this section we study the case where the degree bound @xmath2 is odd , but nothing else is known about the degrees of the graph ; that is , the case for which we have the lower bound @xmath154 from theorem  [ thm : neg - ds - general ] .",
    "a combination of weak colouring and theorem  [ thm : pos - ds - weak ] provides a matching upper bound .",
    "[ thm : pos - ds - odd ] for any odd @xmath145 , there is a local algorithm with approximation factor @xmath2 for dominating set in graphs with maximum degree  @xmath2 , assuming that there is a port numbering and an orientation .",
    "partition @xmath155 into @xmath156 such that @xmath33 consists of the odd - degree nodes , @xmath102 consists of the even - degree nodes adjacent to at least one node in @xmath33 , and @xmath157 is the rest ; in particular , the degree of each node in @xmath102 or @xmath157 is at most @xmath94 .",
    "consider the subgraph @xmath158 induced by @xmath159 . in the subgraph @xmath158 , the degree of each node in @xmath33 is odd , but",
    "some of the nodes in @xmath102 may have an even degree .",
    "construct a new graph @xmath160 by adding a new dummy node of degree @xmath42 as a neighbour of each even - degree node in the subgraph @xmath158 .",
    "now every node in @xmath160 has an odd degree , and we can use the naor  stockmeyer algorithm  @xcite to weakly @xmath0-colour it .    at this point , each node in @xmath33 is adjacent to a node of the opposite colour , but this does not necessarily hold for the nodes in @xmath102 . however , we can easily find valid colours for each node in @xmath102 in parallel : if @xmath161 and each @xmath162 adjacent to @xmath135 has the same colour as @xmath135 , then we reverse the colour of @xmath135 . now",
    "each node in @xmath102 has a neighbour with the opposite colour in @xmath33 ; furthermore , no node in @xmath33 lost a neighbour of the opposite colour .",
    "thus @xmath158 is weakly @xmath0-coloured , and we can apply the algorithm of theorem  [ thm : pos - ds - weak ] to find a dominating set @xmath163 with @xmath164 in the subgraph @xmath158 .",
    "the set @xmath165 is now a dominating set of the original graph @xmath8 .",
    "let @xmath166 be a minimum dominating set of @xmath155 .",
    "let @xmath167 and @xmath168 .",
    "since a node with a degree @xmath169 can dominate at most @xmath170 nodes , and the nodes in @xmath171 are not adjacent to the nodes in @xmath157 , the set @xmath166 must satisfy @xmath172 since @xmath173 , we have @xmath174 .    it is necessary to assume that the graph is oriented in theorem  [ thm : pos - ds - odd ] .",
    "if the nodes are anonymous and there is a port numbering but no orientation , a deterministic distributed algorithm can not have a better approximation factor than @xmath77 . to see this ,",
    "consider the complete graph @xmath175 on @xmath77 nodes .",
    "find an edge colouring of @xmath175 with @xmath2 colours  this is possible , since we assumed that @xmath2 is odd .",
    "use the edge colouring to assign the port numbers : an edge with colour @xmath17 has the port number @xmath17 in both ends .",
    "now from the perspective of distributed algorithms , the nodes are indistinguishable .",
    "any deterministic algorithm has to produce the same output for each node ; in particular , it has to output a dominating set with @xmath77 nodes , while @xmath42 node would suffice .",
    "in sections  [ sec : lower ] and  [ sec : weak - algo ] we proved that in weakly @xmath0-coloured graphs the maximum matching problem can be approximated to within a factor of @xmath176 , but not better . in this section",
    "we show that in @xmath0-coloured graphs the problem has a local approximation scheme .    given a matching @xmath68 ,",
    "an augmenting path ( w.r.t .  @xmath68 ) is a path that starts and ends at an unmatched node and whose every other edge belongs to @xmath68 .",
    "an augmenting tree is a tree whose every root ",
    "leaf path is an augmenting path . in figures  [ fig : mm - scheme]a  c , a matching , two augmenting trees ( rooted at black nodes ) , and",
    "two augmenting paths are shown .",
    "the symmetric difference of @xmath68 and an augmenting path is a new matching whose size is larger than the size of @xmath68 by  1 .",
    "if every augmenting path is longer than @xmath177 , then the size of @xmath68 is at least @xmath178 times the size of the maximum matching ( folklore ) .",
    "hence we have the following @xmath179-approximation algorithm for maximum matching : starting from an empty matching , for each @xmath180 , find repeatedly augmenting paths of length @xmath181 and augment along the paths , until no such path exists .",
    "the iteration @xmath182 is equal to finding a maximal matching , which could be done locally by hakowiak et al.s  @xcite algorithm .",
    "below we give a local algorithm that implements the iteration @xmath58 for a general @xmath183 .",
    "the algorithm uses techniques presented by balas et al .",
    "@xcite in the context of parallel algorithms .",
    "our algorithm repeatedly invokes a subroutine that removes _ some _ augmenting paths of length @xmath184 , assuming that there is no shorter augmenting path .",
    "the subroutine consists of three phases ( refer to figure  [ fig : mm - scheme ] ) .    1 .   in the _ flooding phase _",
    ", we construct a forest @xmath134 of disjoint augmenting trees , rooted at black nodes ( figure  [ fig : mm - scheme]b ) .",
    "each root  leaf path has length @xmath185 .",
    "furthermore , if there is a length-@xmath185 augmenting path in the original graph between a black node @xmath135 and a white node @xmath136 , then @xmath136 is a leaf node in a tree of @xmath134 .",
    "( however , @xmath135 may or may not be a root node in a tree of @xmath134 . )",
    "2 .   in the _ proposal phase _ , we choose one augmenting path in each tree ( figure  [ fig : mm - scheme]c ) .",
    "3 .   finally , in the _ augmenting phase _ , we augment along the paths in parallel to find a new matching ( figure  [ fig : mm - scheme]d ) .    to implement the flooding phase ,",
    "each unmatched black node considers itself as a potential root of an augmenting tree .",
    "every root node sends a message to each of its neighbours .",
    "when a white node receives messages , it chooses one of the senders as its parent , and forwards the message to its neighbour along an edge in the matching .",
    "when a black node receives a message , it chooses the sender as its parent , and forwards the message to its neighbours along each edge that is not in the matching .",
    "messages are propagated for @xmath185 hops ; messages that reach a matched white node or a dead end are simply discarded .",
    "since there is no augmenting path shorter than @xmath185 , every unmatched white node that receives a message is an endpoint of a length-@xmath185 augmenting path .",
    "conversely , all white endpoints of length-@xmath185 augmenting paths are reached by the messages .",
    "these unmatched white nodes become the leaves of the forest @xmath134 .",
    "the edges of @xmath134 are defined by the links that point towards the parent nodes .",
    "we now show that the trees of the forest @xmath134 are disjoint .",
    "to reach a contradiction , assume that @xmath186 and @xmath187 are two trees in @xmath134 and they share a node @xmath7 .",
    "let @xmath188 be the root node of the tree @xmath189 ; by assumption , @xmath190 .",
    "let @xmath191 be an augmenting path in @xmath189 that begins from @xmath188 , passes through @xmath7 , and ends at a leaf node ; let @xmath192 be the distance between @xmath188 and @xmath7 along @xmath191 . if we had @xmath193 , the message initiated by the root @xmath194 would have reached the node @xmath7 on the same time step as the message initiated by the root @xmath195 , and in our algorithm @xmath7 ( or one of its ancestors ) would have discarded one of the messages and joined only one of the trees .",
    "hence we must have @xmath196 ; but then it is possible to find an augmenting path ( in the union of @xmath197 and @xmath198 ) that is strictly shorter than @xmath185 , which contradicts our assumption .",
    "hence a local algorithm can find the forest @xmath134 with the above - mentioned properties .",
    "the other steps of the algorithm are straightforward . in the proposal phase ,",
    "messages are initiated by the leaf nodes and propagated towards the root nodes ; whenever several messages meet , all but one of them are discarded .",
    "eventually , we have chosen exactly one augmenting path in each tree . finally , in the augmenting phase , we augment along each of these paths in parallel .",
    "to analyse how many invocations of the subroutine are needed , note that a white node can be an endpoint of at most @xmath199 length-@xmath185 augmenting paths .",
    "every invocation matches the other endpoint of at least one such path .",
    "furthermore , it can be shown that no new augmenting paths with at most @xmath185 edges are created . therefore , after @xmath200 invocations , there is no augmenting path with @xmath185 edges or fewer .",
    "[ thm : pos - m - strong ] for any @xmath145 and @xmath72 , there is a local algorithm with approximation factor @xmath201 for maximum matching in @xmath0-coloured graphs .",
    "this work was supported in part by the academy of finland , grants 116547 , 118653 ( algodan ) , and 132380 , by helsinki graduate school in computer science and engineering ( hecse ) , and by the foundation of nokia corporation .",
    "http://dx.doi.org/10.1145/800141.804655[dana angluin .",
    "local and global properties in networks of processors . in _ proc .",
    "12th annual acm symposium on theory of computing ( stoc , los angeles , ca , usa , april  1980 ) _ , pages 8293 .",
    "acm press , new york , ny , usa , 1980 .",
    "]      http://dx.doi.org/10.1007/978-3-540-87779-0_6[andrzej",
    "czygrinow , micha hakowiak , and wojciech wawrzyniak . fast distributed approximations in planar graphs . in _ proc .",
    "22nd international symposium on distributed computing ( disc , arcachon , france , september  2008 ) _ , volume 5218 of _ lecture notes in computer science _ , pages 7892 .",
    "springer , berlin , germany , 2008 . ]      micha hakowiak , micha karoski , and alessandro panconesi . on the distributed complexity of computing maximal matchings . in _ proc .",
    "9th annual acm - siam symposium on discrete algorithms ( soda , san francisco , ca , usa , january  1998 ) _ , pages 219225 .",
    "society for industrial and applied mathematics , philadelphia , pa , usa , 1998 .",
    "http://dx.doi.org/10.1007/11780823_10[jaap-henk hoepman , shay kutten , and zvi lotker .",
    "efficient distributed weighted matchings on trees . in _ proc .",
    "13th international colloquium on structural information and communication complexity ( sirocco , chester , uk , july  2006 ) _ , volume 4056 of _ lecture notes in computer science _ , pages 115129 .",
    "springer , berlin , germany , 2006 . ]",
    "http://dx.doi.org/10.1145/1109557.1109666[fabian kuhn , thomas moscibroda , and roger wattenhofer .",
    "the price of being near - sighted . in _ proc .",
    "17th annual acm - siam symposium on discrete algorithms ( soda , miami , fl , usa , january  2006 ) _ , pages 980989 .",
    "acm press , new york , ny , usa , 2006 .",
    "]        http://dx.doi.org/10.1145/1378533.1378540[christoph lenzen , yvonne  anne oswald , and roger wattenhofer .",
    "what can be approximated locally ? in _ proc .",
    "20th annual acm symposium on parallelism in algorithms and architectures ( spaa , munich , germany , june  2008 ) _ , pages 4654 .",
    "acm press , new york , ny , usa , 2008 .",
    "]    http://dx.doi.org/10.1007/978-3-540-87779-0_27[christoph lenzen and roger wattenhofer . leveraging linial s locality limit . in _ proc .",
    "22nd international symposium on distributed computing ( disc , arcachon , france , september  2008 ) _ , volume 5218 of _ lecture notes in computer science _ , pages 394407 .",
    "springer , berlin , germany , 2008 . ]      http://dx.doi.org/10.1109/istcs.1995.377023[alain mayer , moni naor , and larry stockmeyer .",
    "local computations on static and dynamic graphs . in _ proc .",
    "3rd israel symposium on the theory of computing and systems ( istcs , tel aviv , israel , january  1995 ) _ , pages 268278 .",
    "ieee , piscataway , nj , usa , 1995 . ]      http://dx.doi.org/10.1109/focs.2008.81[huy  n. nguyen and krzysztof onak . constant - time approximation algorithms via local improvements . in _ proc .",
    "49th annual ieee symposium on foundations of computer science ( focs , philadelphia , pa , usa , october  2008 ) _ , pages 327336 .",
    "ieee computer society press , los alamitos , ca , usa , 2008 . ]",
    "http://dx.doi.org/10.1007/b101206[mirjam wattenhofer and roger wattenhofer .",
    "distributed weighted matching . in _ proc .",
    "18th international symposium on distributed computing ( disc , amsterdam , netherlands , october  2004 ) _ , volume 3274 of _ lecture notes in computer science _ , pages 335348 .",
    "springer , berlin , germany , 2004 . ]"
  ],
  "abstract_text": [
    "<S> a local algorithm is a distributed algorithm that completes after a constant number of synchronous communication rounds . </S>",
    "<S> we present local approximation algorithms for the minimum dominating set problem and the maximum matching problem in @xmath0-coloured and weakly @xmath0-coloured graphs . in a weakly @xmath0-coloured graph , </S>",
    "<S> both problems admit a local algorithm with the approximation factor @xmath1 , where @xmath2 is the maximum degree of the graph . </S>",
    "<S> we also give a matching lower bound proving that there is no local algorithm with a better approximation factor for either of these problems . </S>",
    "<S> furthermore , we show that the stronger assumption of a @xmath0-colouring does not help in the case of the dominating set problem , but there is a local approximation scheme for the maximum matching problem in @xmath0-coloured graphs . </S>"
  ]
}
{
  "article_text": [
    "let @xmath9 be a finite set of graphs . in an @xmath0-@xmath1-deletion problem to distinguish the parameterized version of the problem .",
    "] , we are given an @xmath12-vertex graph @xmath3 and an integer @xmath2 as input , and asked whether at most @xmath2 vertices can be deleted from @xmath3 such that the resulting graph does not contain a graph from @xmath13 as a minor .",
    "more precisely the problem is defined as follows .",
    ".96    @xmath0-@xmath1-deletion    [ cols= \" > , < \" , ]     we refer to such subset @xmath14 as @xmath9-hitting set .",
    "the @xmath0-@xmath1-deletion  problem is a generalization of several fundamental problems .",
    "for example ,",
    "when @xmath15 , a complete graph on two vertices , this is the vertex cover problem . when @xmath16 , a cycle on three vertices , this is the feedback vertex set problem .",
    "another famous cases are @xmath17 , @xmath18 and @xmath19 , which correspond to removing vertices to obtain outerplanar graphs , planar graphs and graphs of pathwidth one respectively . here",
    "@xmath20 is a complete bipartite graph with bipartitions of sizes @xmath21 and @xmath22 , @xmath23 is a complete graph on @xmath21 vertices , and @xmath24 is the graph in the left of figure  [ fig : theta_c ] . in literature",
    "these problems are known as @xmath0-outerplanar deletion set , @xmath0-planar deletion set and @xmath0-pathwidth one deletion set respectively .",
    "graphs @xmath24 , @xmath5-claw @xmath6 with @xmath25 , and @xmath10 with @xmath26,scaledwidth=90.0% ]    our interest in the @xmath0-@xmath1-deletion problem is motivated by its generality and the recent development in kernelization or polynomial time preprocessing .",
    "the parameterized complexity of this general problem is well understood . by a celebrated result of robertson and seymour ,",
    "every @xmath0-@xmath1-deletion problem is fixed - parameter tractable ( fpt ) .",
    "that is , there is an algorithm solving the problem in time @xmath27 @xcite . in this paper",
    "we study this problem from the view point of polynomial time preprocessing and approximation , when the obstruction set @xmath9 satisfies certain properties .",
    "preprocessing as a strategy for coping with hard problems is universally applied in practice and the notion of _ kernelization _ provides a mathematical framework for analyzing the quality of preprocessing strategies .",
    "we consider parameterized problems , where every instance @xmath28 comes with a _ parameter _ @xmath2 .",
    "such a problem is said to admit a _ polynomial kernel _ if every instance @xmath29 can be reduced in polynomial time to an equivalent instance with both size and parameter value bounded by a polynomial in @xmath2 .",
    "the study of kernelization is a major research frontier of parameterized complexity and many important recent advances in the area are on kernelization .",
    "these include general results showing that certain classes of parameterized problems have polynomial kernels  @xcite .",
    "the recent development of a framework for ruling out polynomial kernels under certain complexity - theoretic assumptions  @xcite has added a new dimension to the field and strengthened its connections to classical complexity . for overviews of the kernelization",
    "we refer to surveys  @xcite and to the corresponding chapters in books on parameterized complexity @xcite .    while the initial interest in kernelization was driven mainly by practical applications , the notion of kernelization appeared to be very important in theory as well .",
    "it is well known , see e.g. @xcite , that a parameterized problem is fixed parameter tractable , or belongs to the class fpt , if and only if it has ( perhaps exponential ) kernel .",
    "kernelization is a way to classify the problems belonging to fpt , the most important class in parameterized complexity , according to the sizes of their kernels .",
    "so far , most of the work done in the field of kernelization is still specific to particular problems and powerful unified techniques to identify classes of problems with polynomial kernels are still in nascent stage .",
    "one of the fundamental challenges in the area is the possibility to characterise general classes of parameterized problems possessing kernels of polynomial sizes . from this perspective",
    ", the class of the @xmath0-@xmath1-deletion problems is very interesting because it contains as special cases @xmath0-vertex cover and @xmath0-feedback vertex set problems which are the most intensively studied problems from the kernelization perspective .",
    "[ [ our - contribution - and - key - ideas . ] ] our contribution and key ideas .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    one of the main conceptual contributions of this work is the extension of protrusion techniques , initially developed in @xcite for obtaining meta - kernelization theorems for problems on sparse graphs like planar and @xmath30-minor - free graphs , to general graphs .",
    "we demonstrate this by obtaining a number of kernelization results on the @xmath0-@xmath1-deletion  problem , when @xmath1 contains a planar graph .",
    "our first result is the following theorem for graphs containing no star with @xmath5 leaves @xmath6 , see figure  [ fig : theta_c ] , as an induced subgraph .",
    "[ thm : k_1_t ]",
    "let @xmath9 be an obstruction set containing a planar graph .",
    "then @xmath0-@xmath1-deletion admits a linear vertex kernel on graphs excluding @xmath6 as an induced subgraph , where @xmath5 is a fixed integer .",
    "several well studied graph classes do not contain graphs with induced @xmath6 .",
    "of course , every graph with maximum vertex degree at most @xmath31 is @xmath6-free .",
    "the class of @xmath32-free graphs , also known as claw - free graphs , contains line graphs and de bruijn graphs .",
    "unit disc graphs are known to be @xmath33-free @xcite .",
    "we remark that the number of vertices @xmath34 in kernels of theorem  [ thm : k_1_t ] is ( up to a multiplicative constant ) optimal , unless p@xmath35np .",
    "our kernelization is a divide and conquer algorithm which finds and replaces large protrusions , that is , subgraphs of constant treewidth separated from the remaining part of the graph by a constant number of vertices , by smaller , `` equivalent '' protrusions .",
    "here we use the results from the work by bodlaender et al .",
    "@xcite that enable this step whenever the parameterized problem in question `` behaves like a regular language '' . to prove that @xmath0-@xmath1-deletion has the desired properties for this step",
    ", we formulate the problem in monadic second order logic and show that it exhibits certain monotonicity properties . as a corollary",
    "we obtain that @xmath0-feedback vertex set , @xmath0-diamond hitting set , @xmath0-pathwidth one deletion set , @xmath0-outerplanar deletion set admit linear vertex kernel on graphs excluding @xmath6 as an induced subgraph .",
    "with the same methodology we also obtain @xmath36 vertex kernel for @xmath0-disjoint cycle packing on graphs excluding @xmath6 as an induced subgraph .",
    "it is worthwhile to mention that @xmath0-disjoint cycle packing does not admit polynomial kernel on general graphs  @xcite .",
    "let @xmath10 be a graph with two vertices and @xmath37 parallel edges , see figure  [ fig : theta_c ] .",
    "our second result is the following theorem on general graphs .",
    "[ thm : thetackernel ] let @xmath9 be an obstruction set containing @xmath10 .",
    "then @xmath0-@xmath1-deletion admits a kernel of size @xmath38 .",
    "a number of well - studied np - hard combinatorial problems are special cases of @xmath0-@xmath10-deletion . when @xmath39 , this is the classical vertex cover problem  @xcite . for @xmath40 ,",
    "this is another well studied problem , the feedback vertex set problem  @xcite . when @xmath41 , this is the diamond hitting set problem  @xcite .",
    "let us note that the size of the best known kernel for @xmath40 is @xmath42 , which is very close to the size of the kernel in theorem  [ thm : thetackernel ] .",
    "also dell and van melkebeek proved that no np - hard vertex deletion problem based on a graph property that is inherited by subgraphs can have kernels of size @xmath43 unless @xmath44 @xcite and thus the sizes of the kernels in theorem  [ thm : thetackernel ] are tight up to polylogarithmic factor .",
    "the proof of theorem  [ thm : thetackernel ] is obtained in a series of non - trivial steps .",
    "the very high level idea is to reduce the general case to problem on graphs of bounded degrees , which allows us to use the protrusion techniques as in the proof of theorem  [ thm : k_1_t ] .",
    "however , vertex degree reduction is not straightforward and requires several new ideas .",
    "one of the new tools is a generic @xmath7-approximation algorithm for the @xmath0-@xmath1-deletion  problem when the class of excluded minors for @xmath1 contains at least one planar graph .",
    "more precisely , we obtain the following result , which is interesting in its own .",
    "[ thm : fapprox ] let @xmath9 be an obstruction set containing a planar graph .",
    "given a graph @xmath3 , in polynomial time we can find a subset @xmath45 such that @xmath46 $ ] contains no element of @xmath9 as a minor and @xmath47 . here",
    "@xmath8 is the minimum size of such a set @xmath14 .",
    "while several generic approximation algorithms were known for problems of minimum vertex deletion to obtain subgraph with property @xmath48 , like when @xmath48 is a hereditary property with a finite number of minimal forbidden subgraphs @xcite , or can be expressed as a universal first order sentence over subsets of edges of the graph @xcite , we are not aware of any generic approximation algorithm for the case when a property @xmath48 is characterized by a finite set of forbidden minors .",
    "we then use the approximation algorithm as a subroutine in a polynomial time algorithm that transforms the input instance @xmath49 into an equivalent instance @xmath50 such that @xmath51 and the maximum degree of @xmath52 is bounded by @xmath53 . an important combinatorial tool used in designing this algorithm",
    "is the  . for @xmath54",
    "this lemma is hall s theorem and its usage can be seen as applying crown decomposition technique  @xcite .",
    "after we manage to reduce the maximum degree of a graph , we apply protrusion techniques and prove theorem  [ thm : thetackernel ] .",
    "[ [ related - work . ] ] related work .",
    "+ + + + + + + + + + + + +    all non - trivial @xmath0-@xmath1-deletion problems are np - hard  @xcite . by one of the most well - known consequences of the celebrated graph minor theory of robertson and seymour ,",
    "the @xmath0-@xmath1-deletion  problem is fixed parameter tractable for every finite set of forbidden minors . a special case of that problem , when the set @xmath9 contains @xmath10 was studied from approximation and parameterized perspectives . in particular , the case of @xmath0-@xmath55-deletion or , equivalently ,",
    "@xmath0-vertex cover , is the most well - studied problem in parameterized complexity .",
    "different kernelization techniques were tried for it , resulting in a @xmath56-sized vertex kernel  @xcite . for the kernelization of @xmath0-feedback vertex set , or @xmath0-@xmath57-deletion ,",
    "there has been a sequence of dramatic improvements starting from an @xmath58 vertex kernel by buragge et al .",
    "@xcite , improved to @xmath59 by bodlaender  @xcite , and then finally to @xmath42 by thomass  @xcite .",
    "recently philip et al .",
    "@xcite and cygan et al .",
    "@xcite obtained polynomial kernels for @xmath0-pathwidth one deletion set .",
    "constant factor approximation algorithm are known for vertex cover and feedback vertex set  @xcite .",
    "very recently , a constant factor approximation algorithm for the diamond hitting set problem , or @xmath0-@xmath60-deletion , was obtained in @xcite .",
    "prior to our work , no polynomial kernels were known for @xmath0-diamond hitting set or more general families of @xmath0-@xmath1-deletion problems .",
    "the remaining part of the paper is organised as follows . in section  [ sec : preliminaries ] we provide preliminaries on basic notions from graph theory and logic used in the paper .",
    "section  [ sec : kernelizationk1 t ] is devoted to the proof of theorem  [ thm : k_1_t ] . in section",
    "[ sec : approx ] we give an approximation algorithms proving theorem  [ thm : fapprox ] .",
    "the proof of theorem  [ thm : thetackernel ] is given in section  [ sec : kernelization ] .",
    "we conclude with open questions in section  [ section : conclision ] .",
    "in this section we give various definitions which we use in the paper . for @xmath61 ,",
    "we use @xmath62 $ ] to denote the set @xmath63 .",
    "we use @xmath64 to denote the vertex set of a graph @xmath3 , and @xmath65 to denote the edge set .",
    "the degree of a vertex @xmath66 in @xmath3 is the number of edges incident on @xmath66 , and is denoted by @xmath67 .",
    "we use @xmath68 to denote the maximum degree of @xmath3 .",
    "a graph  @xmath52 is a _ subgraph _ of  @xmath3 if  @xmath69 and  @xmath70 .",
    "the subgraph  @xmath52 is called an _ induced subgraph _ of @xmath3 if @xmath71 .",
    "given a subset @xmath45 the subgraph induced by @xmath14 is denoted by  @xmath72 $ ] .",
    "the subgraph induced by @xmath73 is denoted by @xmath74 .",
    "we denote by @xmath75 the open neighborhood of @xmath14 , i.e. the set of vertices in @xmath76 adjacent to @xmath14 .",
    "let @xmath9 be a finite set of graphs .",
    "a vertex subset @xmath45 of a graph @xmath3 is said to be a @xmath77-_hitting set _",
    "if @xmath74 does not contain any graphs in the family @xmath9 as a minor .    by _ contracting _ an edge @xmath78 of a graph @xmath3 , we mean identifying the vertices @xmath79 and @xmath66 , keeping all the parallel edges and removing all the loops .",
    "a _ minor _ of a graph @xmath3 is a graph @xmath30 that can be obtained from a subgraph of @xmath3 by contracting edges .",
    "we keep parallel edges after contraction since the graph @xmath10 which we want to exclude as a minor itself contains parallel edges .",
    "let @xmath80 be two graphs .",
    "a subgraph @xmath52 of @xmath3 is said to be a _ minor - model _ of @xmath30 in @xmath3 if @xmath52 contains @xmath30 as a minor .",
    "the subgraph @xmath52 is a _ minimal minor - model _ of @xmath30 in @xmath3 if no proper subgraph of @xmath52 is a minor - model of @xmath30 in @xmath3 .",
    "a graph class @xmath81 is _ minor closed _ if any minor of any graph in @xmath81 is also an element of @xmath81 .",
    "a minor closed graph class @xmath81 is @xmath30_-minor - free _ or simply @xmath30_-free _ if @xmath82 .",
    "the syntax of mso on graphs includes the logical connectives @xmath83 , @xmath84 , @xmath85 , @xmath86 , @xmath87 , variables for vertices , edges , sets of vertices and sets of edges , the quantifiers @xmath88 , @xmath89 that can be applied to these variables , and the following five binary relations :    1 .",
    "@xmath90 where @xmath79 is a vertex variable and @xmath91 is a vertex set variable ; 2 .",
    "@xmath92 where @xmath93 is an edge variable and @xmath94 is an edge set variable ; 3 .",
    "@xmath95 , where @xmath93 is an edge variable , @xmath79 is a vertex variable , and the interpretation is that the edge @xmath93 is incident on the vertex @xmath79 ; 4 .",
    "@xmath96 , where @xmath79 and @xmath66 are vertex variables @xmath79 , and the interpretation is that @xmath79 and @xmath66 are adjacent ; 5 .",
    "equality of variables representing vertices , edges , set of vertices and set of edges .",
    "many common graph - theoretic notions such as vertex degree , connectivity , planarity , being acyclic , and so on , can be expressed in mso , as can be seen from introductory expositions  @xcite .",
    "of particular interest to us are @xmath0-min - mso problems . in a @xmath0-min - mso graph problem @xmath97 ,",
    "we are given a graph @xmath3 and an integer @xmath2 as input .",
    "the objective is to decide whether there is a vertex / edge set @xmath14 of size at most @xmath2 such that the mso - expressible predicate @xmath98 is satisfied .",
    "a parameterized problem @xmath97 is a subset of @xmath99 for some finite alphabet @xmath100 .",
    "an instance of a parameterized problem consists of @xmath101 , where @xmath2 is called the parameter .",
    "a central notion in parameterized complexity is _ fixed parameter tractability ( fpt ) _ which means , for a given instance @xmath101 , solvability in time @xmath102 , where @xmath103 is an arbitrary function of @xmath2 and @xmath0 is a polynomial in the input size .",
    "the notion of _ kernelization _ is formally defined as follows .",
    "[ * * kernelization , kernel ] * *  @xcite a kernelization algorithm for a parameterized problem @xmath104 is an algorithm that , given @xmath105 , outputs , in time polynomial in @xmath106 , a pair @xmath107 such that ( a ) @xmath108 if and only if @xmath109 and ( b ) @xmath110 , where @xmath111 is some computable function .",
    "the output instance @xmath112 is called the kernel , and the function @xmath111 is referred to as the size of the kernel . if @xmath113 then we say that @xmath97 admits a polynomial kernel .",
    "let @xmath3 be a graph .",
    "a _ tree decomposition _ of a graph @xmath3 is a pair @xmath114 such that    * @xmath115 , * for every edge @xmath116 there is a @xmath117 such that @xmath118 , and * for every vertex @xmath119 the subgraph of @xmath120 induced by the set @xmath121 is connected .    the _ width _ of a tree decomposition is @xmath122 and the _ treewidth _ of @xmath3 is the minimum width over all tree decompositions of @xmath3 . a tree decomposition @xmath123",
    "is called a _ nice tree decomposition",
    "_ if @xmath120 is a tree rooted at some node @xmath124 where @xmath125 , each node of @xmath120 has at most two children , and each node is of one of the following kinds :    1 .",
    "_ introduce node _ : a node @xmath5 that has only one child @xmath126 where @xmath127 and @xmath128 .",
    "forget node _ : a node @xmath5 that has only one child @xmath126 where @xmath129 and @xmath130 .",
    "3 .   _ join node _ : a node @xmath5 with two children @xmath131 and @xmath132 such that @xmath133 .",
    "base node _ : a node @xmath5 that is a leaf of @xmath5 , is different than the root , and @xmath134 .",
    "notice that , according to the above definitions , the root @xmath124 of @xmath120 is either a forget node or a join node .",
    "it is well known that any tree decomposition of @xmath3 can be transformed into a nice tree decomposition in time @xmath135 maintaining the same width  @xcite .",
    "we use @xmath136 to denote the graph induced on the vertices @xmath137 , where @xmath126 ranges over all descendants of @xmath5 , including @xmath5 .",
    "we use @xmath138 to denote @xmath139 $ ] .    given a graph @xmath3 and @xmath45",
    ", we define @xmath140 as the set of vertices in @xmath14 that have a neighbor in @xmath76 . for a set @xmath141",
    "the neighborhood of @xmath14 is @xmath142 .",
    "when it is clear from the context , we omit the subscripts .",
    "we now define the notion of a _",
    "protrusion_.    [ * @xmath124-protrusion ] * given a graph @xmath3 , we say that a set @xmath143 is an _",
    "@xmath124-protrusion _ of @xmath3 if @xmath144)\\leq r$ ] and @xmath145 .      in this section",
    "we define _",
    "@xmath5-boundaried graphs _ and various operations on them . throughout this section",
    ", @xmath5 is an arbitrary positive integer .",
    "[ * @xmath5-boundaried graphs ] * a @xmath5-boundaried graph is a graph @xmath3 with @xmath5 distinguished vertices , uniquely labeled from @xmath146 to @xmath5 . the set @xmath147 of labeled vertices is called the boundary of @xmath3 .",
    "the vertices in @xmath147 are referred to as boundary vertices or terminals .    for a graph @xmath3 and a vertex set @xmath141",
    ", we will sometimes consider the graph @xmath72 $ ] as the @xmath148-boundaried graph with @xmath149 being the boundary .",
    "[ * gluing by @xmath150 * let @xmath151 and @xmath152 be two @xmath5-boundaried graphs .",
    "we denote by @xmath153 the @xmath5-boundaried graph obtained by taking the disjoint union of @xmath151 and @xmath152 and identifying each vertex of @xmath154 with the vertex of @xmath155 with the same label ; that is , we glue them together on the boundaries . in @xmath153",
    "there is an edge between two labeled vertices if there is an edge between them in @xmath151 or in @xmath152 .",
    "in this paper , @xmath5-boundaried graphs often come coupled with a vertex set which represents a partial solution to some optimization problem . for ease of notation",
    "we define @xmath156 be to be the set of pairs @xmath157 , where @xmath3 is a @xmath5-boundaried graph and @xmath141 .    [ * replacement ] * let @xmath3 be a graph containing a @xmath124-protrusion @xmath158 .",
    "let @xmath151 be an @xmath124-boundaried graph .",
    "the act of replacing @xmath159 $ ] with @xmath151 corresponds to changing @xmath3 into @xmath160 \\oplus g_1 $ ] .",
    "[ * canonical equivalence ] * for a parameterized problem @xmath97 and two @xmath5-boundaried graphs @xmath151 and @xmath152 , we say that @xmath161 if there exists a constant @xmath11 such that for all @xmath5-boundaried graphs @xmath162 and for all @xmath2 , @xmath163    [ * finite integer index ] * we say that a parameterized problem @xmath97 has _ finite integer index _ if for every @xmath5 there exists a finite set @xmath164 of @xmath5-boundaried graphs such that for any @xmath5-boundaried graph @xmath151 there exists @xmath165 such that @xmath166 .",
    "such a set @xmath164 is called a set of representatives for @xmath167 .",
    "note that for every @xmath5 , the relation @xmath168 on @xmath5-boundaried graphs is an equivalence relation .",
    "a problem @xmath97 is finite integer index if and only if for every @xmath5 , @xmath168 is of finite index , that is , has a finite number of equivalence classes .",
    "the notion of _ strong monotonicity _ is an easy to check sufficient condition for a @xmath0-min - mso problem to have finite integer index .",
    "[ * signatures]*[def : signaturemin ] let @xmath97 be a @xmath0-min - mso problem . for a @xmath5-boundaried graph @xmath3",
    "we define the _ signature function _ @xmath169 as follows . for a pair",
    "@xmath170 , if there is no set @xmath141 ( @xmath171 ) such that @xmath172 holds , then @xmath173 .",
    "otherwise @xmath174 is the size of the smallest @xmath175 ( @xmath176 ) such that @xmath172 holds .",
    "[ * strong monotonicity]*[def : minstrongmonmin ] a @xmath0-min - mso problem @xmath97 is said to be _ strongly monotone _ if there exists a function @xmath177 such that the following condition is satisfied . for every @xmath5-boundaried graph @xmath3",
    ", there is a subset @xmath45 such that for every @xmath178 such that @xmath174 is finite , @xmath179 holds and @xmath180 .",
    "we now give mso formulations for some properties involving @xmath9 or @xmath10 that we use in our arguments . for a graph @xmath3 and a vertex set @xmath45 ,",
    "let @xmath181 denote the mso formula which states that @xmath72 $ ] is connected , and let @xmath182 denote the mso formula which states that @xmath72 $ ] is a maximal connected subgraph of @xmath3 .",
    "[ [ h - minor - models . ] ] @xmath30 minor - models .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    let @xmath9 be the finite forbidden set .",
    "for a graph @xmath3 , we use @xmath183 to denote an mso formula which states that @xmath3 contains @xmath30 as a minor  equivalently , that @xmath3 contains a minimal @xmath30 minor model .",
    "let @xmath184 .",
    "then , @xmath183 is given by :    @xmath185\\\\ ] \\end{aligned}\\ ] ]    [ [ minimum - size - cal - f - hitting - set . ] ] minimum - size @xmath9-hitting set .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    a minimum - size @xmath9-hitting set of graph @xmath3 can be expressed as :    @xmath186\\end{aligned}\\ ] ]    [ [ largest - theta_c - flower . ] ] largest @xmath10 `` flower '' .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    let @xmath66 be a vertex in a graph @xmath3 .",
    "a maximum - size set @xmath187 of @xmath10 minor - models in @xmath3 , all of which pass through @xmath66 and no two of which share any vertex other than @xmath66 , can be represented as :    @xmath188\\wedge\\phi_{c}(x\\cup\\{v\\})]\\\\ ] ] ] \\end{aligned}\\ ] ]    here @xmath52 is the graph with vertex set @xmath64 and edge set @xmath189 , and @xmath190 .",
    "@xmath14 is a system of distinct representatives for the vertex sets that constitute the elements of @xmath187 .",
    "in this section we show that if the obstruction set @xmath9 contains a planar graph then the @xmath0-@xmath1-deletion problem has a linear vertex kernel on graphs excluding @xmath6 as an induced subgraph .",
    "we start with the following lemma which is crucial to our kernelization algorithms .",
    "[ claim : treewidthbound]let @xmath9 be an obstruction set containing a planar graph of size @xmath191 . if @xmath3 has a @xmath9hitting set of @xmath14 size at most @xmath2 , then @xmath192 and @xmath193 , where @xmath194 .    by assumption",
    ", @xmath9 contains at least one planar graph .",
    "let @xmath191 be the size of the smallest planar graph @xmath30 contained in @xmath4 . by a result of robertson et al .",
    "@xcite , @xmath30 is a minor of the @xmath195-grid , where @xmath196 . in the same paper robertson et al .",
    "@xcite have shown that any graph with treewidth greater than @xmath197 contains a @xmath195-grid as a minor .",
    "let @xmath14 be a @xmath9hitting set of @xmath3 of size at most @xmath2 .",
    "since the @xmath195-grid contains @xmath30 as a minor , we have that @xmath198 .",
    "therefore , @xmath199 , where @xmath200  indeed , a tree decomposition of width @xmath201 can be obtained by adding the vertices of @xmath14 to every bag in an optimal tree decomposition of @xmath202 .",
    "this completes the proof of the lemma .",
    "wo obtain our kernelization algorithm for @xmath0-@xmath1-deletion by applying protrusion based reduction rule .",
    "that is , any large @xmath124-protrusion for a fixed constant @xmath124 depending only on @xmath9 ( that is , @xmath124 depends only on the problem ) is replaced with a smaller equivalent @xmath124-protrusion . for this",
    "we utilize the following lemma of bodlaender et al .",
    "@xcite .",
    "[ lem : red2finiteindex ] let @xmath97 be a problem that has finite integer index . then there exists a computable function @xmath203 and an algorithm that given an instance @xmath204 and an @xmath124-protrusion @xmath158 of @xmath3 of size at least @xmath205 , runs in @xmath206 time and outputs an instance @xmath207 such that @xmath208 , @xmath209 , and @xmath210 if and only if @xmath211 .",
    "* remark : * let us remark that if @xmath3 does not have @xmath6 as an induced subgraph then the proof of lemma  [ lem : red2finiteindex ] also ensures that the graph @xmath52 does not contain @xmath6 as an induced subgraph .",
    "this makes sure that even after replacement we do not leave the graph class we are currently working with .",
    "the remark is not only true about graphs excluding @xmath6 as an induced subgraph but also for any graph class @xmath212 that can be characterized by either finite set of forbidden subgraphs or induced subgraphs or minors .",
    "that is , if @xmath3 is in @xmath212 then so does the graph @xmath52 returned by the lemma  [ lem : red2finiteindex ] .    in order to apply lemma  [ lem : red2finiteindex ]",
    "we need to be able to efficiently find large @xmath124-protrusions whenever the instance considered is large enough .",
    "also , we need to prove that @xmath0-@xmath1-deletion has finite integer index . the next lemma yields a divide and conquer algorithm for efficiently finding large @xmath124-protrusions .",
    "[ lem : prottfd ] there is a linear time algorithm that given an @xmath12-vertex graph @xmath213 and a set @xmath143 such that @xmath214 , outputs a @xmath215-protrusion of @xmath3 of size at least @xmath216 . here",
    "@xmath93 is some constant .",
    "let @xmath217 .",
    "the algorithm starts by computing a nice tree decomposition of @xmath189 of width at most @xmath93 .",
    "notice that since @xmath93 is a constant this can be done in linear time  @xcite .",
    "let @xmath14 be the vertices in @xmath218 that are neighbors of @xmath158 in @xmath3 , that is , @xmath219 . the nice tree decomposition of @xmath189 is a pair @xmath220 , where @xmath120 is a rooted binary tree",
    ". we will now _ mark _ some of the nodes of @xmath120 . for every @xmath221",
    ", we mark the topmost node @xmath222 in @xmath120 such that @xmath223 . in this manner , at most @xmath224 nodes are marked .",
    "now we mark more nodes of @xmath120 by exhaustively applying the following rule : if @xmath79 and @xmath66 are marked , mark their least common ancestor in @xmath120 .",
    "let @xmath187 be the set of all marked nodes of @xmath120 .",
    "standard counting arguments on trees give that @xmath225 .",
    "since @xmath120 is a binary tree , it follows that @xmath226 has at most @xmath227 connected components .",
    "let the vertex sets of these connected components be @xmath228 , @xmath229 .",
    "for every @xmath230 , let @xmath231 and let @xmath232 . by the construction of @xmath187 , every component of @xmath226 has at most @xmath233 neighbors in @xmath187 .",
    "also for every @xmath234 and @xmath235 , we have that if @xmath236 , then @xmath66 should be contained in one of the bags of @xmath237 .",
    "in other words , @xmath238 . thus every @xmath239 is a @xmath215-protrusion of @xmath3 . since @xmath240 , the pigeon - hole principle yields that there is a protrusion @xmath239 with at least @xmath241 vertices .",
    "the algorithm constructs @xmath187 and @xmath242 and outputs the largest protrusion @xmath239 .",
    "it is easy to implement this procedure to run in linear time .",
    "this concludes the proof .",
    "no we show that @xmath0-@xmath1-deletion has finite integer index . for this",
    "we need the following lemma .",
    "[ lem : stronglymonotone]every strongly monotone @xmath0-min - mso problem has finite integer index .",
    "[ lem : jcisfii ] @xmath0-@xmath1-deletion has finite integer index .",
    "one can easily formulate @xmath0-@xmath1-deletion in mso , which shows that it is a @xmath0-min - mso problem , see section  [ sec : mso - thetac ] . to complete the proof that @xmath0-@xmath1-deletion has finite integer index",
    "we show that @xmath243 is strongly monotone .",
    "given a @xmath5-boundaried graph @xmath3 , with @xmath147 as its boundary , let @xmath244 be a minimum set of vertices in @xmath3 such that @xmath245 does not contain any graph in @xmath9 as a minor .",
    "let @xmath246 .",
    "now for any @xmath178 such that @xmath174 is finite , we have that @xmath247 $ ] does not contain any graph in @xmath9 as a minor and @xmath248 .",
    "this proves that @xmath0-@xmath1-deletion is strongly monotone . by lemma  [ lem : stronglymonotone ]",
    ", @xmath0-@xmath1-deletion has finite integer index .",
    "now we give the desired kernel for @xmath0-@xmath1-deletion .",
    "we first prove a useful combinatorial lemma .",
    "[ lem : k1tdegreebound ] let @xmath3 be a graph excluding @xmath6 as an induced subgraph and @xmath14 be a @xmath9-hitting set . if @xmath9 contains a planar graph of size @xmath191 , then @xmath249 for some function @xmath111 of @xmath191 and @xmath5 .    by lemma  [ claim : treewidthbound ] , @xmath250 for @xmath194 .",
    "it is well known that a graph of treewidth @xmath93 is @xmath251 colorable .",
    "let @xmath235 and let @xmath252 be its neighbors in @xmath74 .",
    "we first show that @xmath253 .",
    "consider the graph @xmath254 $ ] .",
    "since @xmath250 we have that @xmath255 and hence @xmath256 is @xmath251 colorable . fix a coloring @xmath257 of @xmath256 with @xmath251 colors and let @xmath258 be the size of the largest color class . clearly @xmath259 .",
    "since each color class is an independent set , we have that @xmath260 , else we will get @xmath6 as an induced subgraph in @xmath3 .",
    "this implies that @xmath253 . since @xmath66 was an arbitrary vertex of @xmath14 , we have that @xmath261 . here",
    "finally the observation that @xmath263 , yields the result .",
    "now we are ready to prove theorem  [ thm : k_1_t ] .",
    "let @xmath49 be an instance of @xmath0-@xmath1-deletion and @xmath191 be the size of a smallest planar graph in the obstruction set @xmath9 .",
    "we first apply theorem  [ thm : fapprox ] ( to be proved in next section ) , an approximation algorithm for @xmath0-@xmath1-deletion with factor @xmath7 , and obtain a set @xmath158 such that @xmath264 contains no graph in @xmath9 as a minor .",
    "if the size of the set @xmath158 is more than @xmath53 then we return that @xmath49 is a no - instance to @xmath0-@xmath1-deletion .",
    "this is justified by the approximation guarantee provided by the theorem  [ thm : fapprox ] .",
    "let @xmath93 denote the treewidth of the graph after the removal of @xmath158 , that is , @xmath265 .",
    "now we obtain the kernel in two phases : we first apply the protrusion rule selectively ( lemma  [ lem : red2finiteindex ] ) and get a polynomial kernel .",
    "then , we apply the protrusion rule exhaustively on the obtained kernel to get a smaller kernel .",
    "this is done in order to reduce the running time complexity of the kernelization algorithm . to obtain the kernel we follow the following steps .",
    "[ [ applying - the - protrusion - rule . ] ] _ applying the protrusion rule . _ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    by lemma  [ claim : treewidthbound ] , @xmath266 .",
    "we apply lemma  [ lem : prottfd ] and obtain a @xmath215-protrusion @xmath267 of @xmath3 of size at least @xmath268 . by lemma  [ lem : jcisfii ] , @xmath0-@xmath1-deletion has finite integer index .",
    "let @xmath203 be the function defined in lemma  [ lem : red2finiteindex ] . if @xmath269 , then using lemma  [ lem : red2finiteindex ] we replace the @xmath215-protrusion @xmath267 in @xmath3 and obtain an instance @xmath270 such that @xmath208 , @xmath209 , and @xmath271 is a yes - instance of @xmath0-@xmath1-deletion if and only if @xmath272 is a yes - instance of @xmath0-@xmath1-deletion .",
    "recall that @xmath256 also excludes @xmath6 as an induced subgraph .",
    "let @xmath207 be a reduced instance with hitting set @xmath158 .",
    "in other words , there is no @xmath273-protrusion of size @xmath274 in @xmath275 , and protrusion rule no longer applies .",
    "we claim that the number of vertices in this graph is bounded by @xmath53 . indeed ,",
    "since we can not apply protrusion rule , we have that @xmath276 . because @xmath277 , we have that @xmath278 , @xmath279 and thus @xmath280    this gives us a polynomial time algorithm that returns a vertex kernel of size @xmath53 .",
    "now we give a kernel of smaller size .",
    "we would like to replace every large @xmath273-protrusion in graph by a smaller one .",
    "we find a @xmath273-protrusion @xmath267 of size at least @xmath274 by guessing the boundary @xmath281 of size at most @xmath282 .",
    "this could be performed in time @xmath283 .",
    "so let @xmath207 be the reduced instance on which we can not apply the protrusion rule .",
    "if @xmath3 is a yes - instance then there is a @xmath9-hitting set @xmath158 of size at most @xmath2 such that @xmath284 .",
    "now applying the analysis above with this @xmath158 yields that @xmath285 .",
    "hence if the number of vertices in the reduced instance @xmath256 , to which we can not apply the protrusion rule , is more than @xmath34 then we return that @xmath3 is a no - instance .",
    "this concludes the proof of the theorem .",
    "@xmath0-feedback vertex set , @xmath0-diamond hitting set , @xmath0-pathwidth one deletion set , @xmath0-outerplanar deletion set admit linear vertex kernel on graphs excluding @xmath6 as an induced subgraph .",
    "the methodology used in proving theorem  [ thm : k_1_t ] is not limited to @xmath0-@xmath1-deletion .",
    "for example , it is possible to obtain an @xmath36 vertex kernel on @xmath6-free graphs for @xmath0-disjoint cycle packing , which is for a given graph @xmath3 and positive integer @xmath2 to determine if there are @xmath2 vertex disjoint cycles in @xmath3 .",
    "it is iteresting to note that @xmath0-disjoint cycle packing does not admit a polynomial kernel on general graphs  @xcite . for our kernelization algorithm ,",
    "we use the following erds - psa property  @xcite : given a positive integer @xmath222 every graph @xmath3 either has @xmath222 vertex disjoint cycles or there exists a set @xmath45 of size at most @xmath286 such that @xmath74 is a forest .",
    "so given a graph @xmath3 and positive integer @xmath2 we first apply factor @xmath233 approximation algorithm given in  @xcite and obtain a set @xmath14 such that @xmath74 is a forest .",
    "if the size of @xmath14 is more than @xmath287 then we return that @xmath3 has @xmath2 vertex disjoint cycles .",
    "else we use the fact that @xmath0-disjoint cycle packing  @xcite has finite integer index and apply protrusion reduction rule in @xmath74 to obtain an equivalent instance @xmath207 , as in theorem  [ thm : k_1_t ] . the analysis for kernel size used in the proof of theorem  [ thm : k_1_t ] together with the observation that @xmath288 shows that if @xmath49 is an yes instance then the size of @xmath289 is at most @xmath36 .",
    "@xmath0-disjoint cycle packing has @xmath36 vertex kernel on graphs excluding @xmath6 as an induced graph .",
    "next we extend the methods used in this section for obtaining kernels for @xmath0-@xmath1-deletion on graphs excluding @xmath6 as an induced graph to all graphs , though for restricted @xmath9 , that is when @xmath9 is @xmath10 .",
    "however to achieve this we need a polynomial time approximation algorithm with a factor polynomial in optimum size and not depending on the input size . for an example for our purpose",
    "an approximation algorithm with factor @xmath290 is no good .",
    "here we obtain an approximation algorithm for @xmath0-@xmath1-deletion with a factor @xmath7 whenever the finite obstruction set @xmath9 contains a planar graph . here",
    "@xmath8 is the size of a minimum @xmath9-hitting set .",
    "this immediately implies a factor @xmath291 algorithm for all the problems that can categorized by @xmath0-@xmath1-deletion .",
    "we believe this result has its own significance and is of independent interest .",
    "in this section , we present an @xmath7-approximation algorithm for the @xmath0-@xmath1-deletion  problem when the finite obstruction set @xmath1 contains at least one planar graph .",
    "[ thm : epconstructive]there is a polynomial time algorithm that , given a graph @xmath3 and a positive integer @xmath2 , either reports that @xmath3 has no @xmath9-hitting set of size at most @xmath2 or finds a @xmath9-hitting set of size at most @xmath292 .",
    "we begin by introducing some definitions that will be useful for describing our algorithms .",
    "first is the notion of a _ good labeling function_. given a nice tree decomposition @xmath114 of a graph @xmath3 , a function @xmath293 is called a _ good labeling function _ if it satisfies the following properties :    * if @xmath5 is a base node then @xmath294 ; * if @xmath5 is an introduce node , then @xmath295 , where @xmath296 is the child of @xmath5 ; * if @xmath5 is a join node , then @xmath297 , where @xmath298 and @xmath299 are the children of @xmath5 ; and * if @xmath5 is a forget node , then @xmath300 , where @xmath296 is the child of @xmath5 .    a _ max labeling function _",
    "@xmath111 is defined analogously to a good labeling function , the only difference being that for a join node @xmath5 , we have the condition @xmath301 .",
    "we now turn to the approximation algorithm .",
    "find a minimum @xmath9-hitting set @xmath267 of @xmath3 and return @xmath267 .",
    "compute an approximate tree decomposition @xmath114 of width @xmath222 .",
    "return that @xmath3 does not have @xmath9hitting set of size at most @xmath2 .",
    "convert @xmath114 to a nice tree decomposition of the same width .",
    "find a partitioning of vertex set @xmath64 into @xmath302 , @xmath303 and @xmath158 ( a bag corresponding to a node in @xmath120 ) such that @xmath304)=d$ ] as described in the proof .",
    "+ return @xmath305 hit - set - i-@xmath306)\\bigcup$ ] hit - set - i-@xmath307)\\big).$ ]    our algorithm has two phases . in the first phase we obtain a @xmath9-hitting set of size @xmath308 and in the second phase we use the hitting set obtained in the first phase to get a @xmath9-hitting set of size @xmath309 .",
    "the second phase could be thought of as `` bootstrapping '' where one uses initial solution to a problem to obtain a better solution . by assumption",
    "we know that @xmath9 contains at least one planar graph .",
    "let @xmath191 be the number of vertices in the smallest planar graph @xmath30 contained in @xmath4 . by a result of robertson et al .",
    "@xcite , @xmath30 is a minor of the @xmath310-grid , where @xmath311 .",
    "robertson et al .",
    "@xcite have also shown that any graph with treewidth greater than @xmath312 contains a @xmath313 grid as a minor . in the algorithm we set @xmath314 .",
    "we start off by describing the first phase of the algorithm , see algorithm  [ fig : jchitsetconst2apx ] .",
    "we start by checking whether a graph @xmath3 has treewidth at most @xmath93 ( the first step of the algorithm ) using the linear time algorithm of bodlaender  @xcite .",
    "if @xmath315 then we find an optimum @xmath9-hitting set of @xmath3 in linear time using a modification of lemma  [ lem : linalgtw ] .",
    "if the treewidth of the input graph is more than @xmath93 then we find an approximate tree decomposition of width @xmath222 using an algorithm of feige et al .",
    "@xcite such that @xmath316 where @xmath317 is a fixed constant .",
    "so if @xmath318 then by lemma  [ claim : treewidthbound ] , we know that the size of a minimum @xmath9-hitting set of @xmath3 is at least @xmath319 . hence from now onwards we assume that @xmath320 . in the next step",
    "we convert the given tree decomposition to a nice tree decomposition of the same width in linear time  @xcite . given a nice tree decomposition @xmath114 of @xmath3",
    ", we compute a _ partial _ function @xmath321 , defined as @xmath322 .",
    "observe that @xmath323 is a max labeling function .",
    "we compute @xmath323 in a bottom up fashion starting from base nodes and moving towards the root .",
    "we stop this computation the first time that we find a node @xmath5 such that @xmath324 .",
    "let @xmath325 , @xmath326 and @xmath327 .",
    "after this we recursively solve the problem on the graphs induced on @xmath302 and @xmath303 .",
    "let us assume that @xmath3 has a @xmath9-hitting set of size at most @xmath2 .",
    "we show that in this case the size of the hitting set returned by the algorithm can be bounded by @xmath328 .",
    "the above recursive procedure can be thought of as a rooted binary tree @xmath329 where at each non - leaf node of the tree the algorithm makes two recursive calls .",
    "we will assume that the left child of a node of @xmath329 corresponds to the graph induced on @xmath302 such that the treewidth of @xmath330 $ ] is @xmath93 .",
    "assuming that the root is at depth @xmath331 we show that the depth of @xmath329 is bounded by @xmath2 .",
    "let @xmath332 be a longest path from the root to a leaf and let @xmath333 be the graph associated with the node @xmath334 .",
    "observe that for every @xmath335 , @xmath334 has a left child , or else @xmath334 can not be a non - leaf node of @xmath329 . let the graph associated with the left child of @xmath334 , @xmath335 , be denoted by @xmath336 .",
    "observe that for every @xmath337 , @xmath338 and @xmath339 .",
    "this implies that every @xmath336 has at least one @xmath30 minor model and all of these are vertex - disjoint .",
    "this implies that @xmath340 and hence the depth of @xmath329 is bounded by @xmath2 .",
    "let us look at all the subproblems at depth @xmath21 in the recursion tree @xmath329 .",
    "suppose at depth @xmath21 the induced subgraphs associated with these subproblems are @xmath341 $ ] , @xmath342 $ ] , where @xmath343 is some positive integer . then observe that for every @xmath344 $ ] and @xmath345 , we have that @xmath346",
    ", there is no edge @xmath78 such that @xmath347 , @xmath348 , and hence @xmath349 , where @xmath350 is the size of the minimum @xmath9hitting set of @xmath341 $ ] .",
    "furthermore the number of instances at depth @xmath21 such that it has at least one @xmath30 minor model and hence contributes to the hitting set is at most @xmath2 .",
    "now lemma  [ claim : treewidthbound ] together with the factor @xmath351 approximation algorithm of feige et al .",
    "@xcite implies that the treewidth of every instance is upper bounded by @xmath352 , where @xmath350 is the size of the minimum @xmath9hitting set of @xmath341 $ ] .",
    "hence the total size of the union of sets added to our hitting set at depth @xmath21 is at most @xmath353 here @xmath354 is @xmath146 if @xmath341 $ ] contains at least one @xmath30 minor model and is @xmath331 otherwise .",
    "we have shown that for each @xmath21 the size of the union of the sets added to the hitting set is at most @xmath355 .",
    "this together with the fact that the depth is at most @xmath2 implies that the size of the @xmath9-hitting set is at most @xmath308 .",
    "hence if the size of the hitting set returned by the algorithm is more than @xmath356 then we return that @xmath3 has at no @xmath9-hitting set of size at most @xmath2 .",
    "hence when we move to the second phase we assume that we have a hitting set of size @xmath308 .",
    "this concludes the description of the first phase of the algorithm .",
    "find a minimum @xmath9-hitting set @xmath267 of @xmath3 and return @xmath267 .",
    "compute an approximate tree decomposition @xmath114 of width @xmath222 .",
    "convert it to a nice tree decomposition of @xmath3 .",
    "now compute the function @xmath357 , defined as follows : @xmath358 .",
    "return @xmath359 .",
    "find the partitioning of the vertex set @xmath64 into @xmath302 , @xmath303 and @xmath158 ( a bag corresponding to a node in @xmath120 ) as described in cases @xmath146 and @xmath233 of the proof of theorem  [ thm : epconstructive ] .",
    "return @xmath305 hit - set - ii-@xmath306,z)\\bigcup$ ] hit - set - ii-@xmath307,z)\\big).$ ]    now we describe the second phase of the algorithm .",
    "here we are given the hitting set @xmath360 of size @xmath308 obtained from the first phase of the algorithm . the algorithm is given in algorithm  [ fig : jchitsetconst3 ] .",
    "the new algorithm essentially uses @xmath360 to define a good labeling function @xmath361 which enables us to argue that the depth of recursion is upper bounded by @xmath362 .",
    "in particular , consider the function @xmath357 , defined as follows : @xmath358 .",
    "let @xmath363 , where @xmath124 is the node corresponding to the root of a fixed nice tree decomposition of @xmath3 .",
    "let @xmath117 be the node where @xmath364 and for each child @xmath126 of @xmath5 , @xmath365 . since @xmath361 is a good labeling function",
    ", it is easy to see that this node exists and is unique provided that @xmath366 .",
    "moreover , observe that @xmath5 could either be a forget node or a join node .",
    "we distinguish these two cases .",
    "* _ case 1 .",
    "_ if @xmath5 is a forget node , we set @xmath367 and @xmath368 and observe that @xmath369)\\leq \\lfloor 2k'/3\\rfloor , i=1,2 $ ] . also we set @xmath370 . * _ case 2 . _",
    "if @xmath5 is a join node with children @xmath131 and @xmath132 , we have that @xmath371 .",
    "however , as @xmath372 , we also have that either @xmath373 or @xmath374 . without loss of generality",
    "we assume that @xmath373 and we set @xmath375 , @xmath376 and @xmath377 .",
    "now we argue that if @xmath3 has a @xmath9hitting set of size at most @xmath2 then then the size of the hitting set returned by the algorithm is upper bounded by @xmath53 . as in the first phase we can argue that the size of the union of the sets added to the hitting set in the subproblems at depth @xmath21 is at most @xmath355 .",
    "observe that the recursive procedure in algorithm  [ fig : jchitsetconst3 ] is such that the value of the function @xmath378 drops by at least a constant fraction at every level of recursion .",
    "this implies that the depth of recursion is upper bounded by @xmath379 .",
    "hence the size of the hitting set returned by the algorithm is upper bounded by @xmath292 whenever @xmath3 has a @xmath9hitting set of size at most @xmath2 .",
    "thus if the size of the hitting set returned by hit - set - ii-@xmath380 is more than @xmath381 , we return that @xmath3 does not have a @xmath9hitting set of size at most @xmath2 .",
    "this concludes the proof .",
    "given a graph @xmath3 on @xmath12 vertices , let @xmath2 be the minimum positive integer in @xmath382 such that lemma  [ thm : epconstructive ] returns a @xmath9-hitting set @xmath14 when applied on @xmath49 .",
    "we return this @xmath14 as an approximate solution . by our choice of @xmath2 we know that @xmath3 does not have @xmath9-hitting set of size at most @xmath383 and hence @xmath384 .",
    "this implies that the size of @xmath14 returned by lemma  [ thm : epconstructive ] is at most @xmath385 .",
    "this concludes the proof .",
    "we now define a generic problem .",
    "let @xmath258 be a fixed constant . in the treewidth @xmath258-deletion set problem",
    ", we are given an input graph @xmath3 and the objective is to delete minimum number of vertices from a graph such that the resulting graph has treewidth at most @xmath258 .",
    "for an example treewidth @xmath146-deletion set is simply the feedback vertex set problem .",
    "we obtain the following corollary of theorem  [ thm : fapprox ] .",
    "feedback vertex set , diamond hitting set , pathwidth one deletion set , outerplanar deletion set and treewidth @xmath258-deletion set admit a factor @xmath291 approximation algorithm on general undirected graphs .",
    "in this section we obtain a polynomial kernel for @xmath0-@xmath10-deletion on general graphs . to obtain our kernelization algorithm",
    "we not only need approximation algorithm presented in the last section but also a variation of classical hall s theorem .",
    "we first present this combinatorial tool and other auxiliary results that we make use of .",
    "we need a variation of the celebrated hall s theorem , which we call the .",
    "the is a generalization of a result due to thomass  ( * ? ? ?",
    "* theorem  2.3 ) , and captures a certain property of neighborhood sets in graphs that implicitly has been used by several authors to obtain polynomial kernels for many graph problems . for @xmath54 ,",
    "the application of this lemma is exactly the well - known crown reduction rule  @xcite .",
    "[ [ the - expansion - lemma . ] ]   the expansion lemma .",
    "+ + + + + + + + + + + + + + + + + + + + +    consider a bipartite graph @xmath3 with vertex bipartition @xmath386 .",
    "given subsets @xmath387 and @xmath388 , we say that @xmath14 has @xmath224 @xmath389-stars in @xmath120 if to every @xmath390 we can associate a subset @xmath391 such that ( a ) for all @xmath390 , @xmath392 ; ( b ) for any pair of vertices @xmath393 , @xmath394 .",
    "observe that if @xmath14 has @xmath224 @xmath389-stars in @xmath120 then every vertex @xmath395 in @xmath14 could be thought of as the center of a star with its @xmath389 leaves in @xmath120 , with all these stars being vertex - disjoint .",
    "further , a collection of @xmath224 @xmath389-stars is also a family of @xmath389 edge - disjoint matchings , each saturating @xmath14 .",
    "we use the following result in our kernelization algorithm to bound the degrees of vertices .",
    "[ lem : q - expansion - lemma ] * [ the ] * let @xmath389 be a positive integer , and let @xmath396 be the size of the maximum matching in a bipartite graph @xmath3 with vertex bipartition @xmath397 . if @xmath398 , and there are no isolated vertices in @xmath399 , then there exist nonempty vertex sets @xmath400 such that @xmath14 has @xmath224 @xmath389-stars in @xmath120 and no vertex in @xmath120 has a neighbor outside @xmath14 .",
    "furthermore , the sets @xmath401 can be found in time polynomial in the size of @xmath3 .",
    "consider the graph @xmath402 obtained from @xmath403 by adding @xmath404 copies of all the vertices in @xmath405 , and giving all copies of a vertex @xmath66 the same neighborhood in @xmath399 as @xmath66 .",
    "let @xmath187 be a maximum matching in @xmath30 .",
    "in further discussions , vertices are saturated and unsaturated with respect to this fixed matching @xmath187 .",
    "let @xmath406 be the vertices in @xmath158 that are unsaturated , and @xmath407 be those that are reachable from @xmath406 via alternating paths .",
    "we let @xmath408 .",
    "let @xmath409 be the set of unsaturated vertices in @xmath399 , and let @xmath410 denote the set of partners of @xmath411 in the matching @xmath187 , that is , @xmath412 .",
    "let @xmath413 ( see figure  [ fig : expansion - lemma - proof ] ) .",
    "the construction used in the proof of the ]    for every @xmath414 , let @xmath415 be the set of all copies of @xmath66 ( including @xmath66 ) .",
    "we claim that either @xmath416 , or @xmath417 .",
    "suppose that @xmath418 but a copy of @xmath66 , say @xmath79 , is in @xmath406 .",
    "let @xmath419 . then @xmath66 is reachable from @xmath79 because @xmath420 , and hence @xmath421 is not unsaturated in @xmath187 , contradicting the assumption that @xmath422 . in the case when @xmath418 but a copy of @xmath79 is in @xmath407 ,",
    "let @xmath423 be the last edge on some alternating path from @xmath406 to @xmath79 . since @xmath424 , we have that there is also an alternating path from @xmath406 to @xmath66 , contradicting the fact that @xmath418 .",
    "let @xmath425 .",
    "then the subgraph @xmath426 $ ] contains @xmath389 edge - disjoint matchings , each of which saturates @xmath14 in g  this is because in @xmath30 , @xmath187 saturates each copy of @xmath235 separately .",
    "if no vertex in @xmath120 has a neighbor outside @xmath411 in @xmath30 , then from the construction no vertex in @xmath120 has a neighbor outside @xmath14 in @xmath3 .",
    "we now prove that no vertex in @xmath120 has a neighbor outside @xmath411 in @xmath30 . for the purpose of contradiction ,",
    "let us assume that for some @xmath427 , @xmath428 , but @xmath429 .",
    "first , consider the case when @xmath430 .",
    "suppose @xmath431 .",
    "we know that @xmath431 because there is some unsaturated vertex ( say @xmath421 ) that is connected by an alternating path to @xmath79 .",
    "this path can be extended to a path to @xmath66 using the edge @xmath432 , and can be further extended to @xmath433 , where @xmath434 .",
    "however , @xmath435 , and by construction , there is no path from @xmath422 to @xmath433 , a contradiction .",
    "if @xmath436 , then we arrive at a contradiction along the same lines ( in fact , the paths from @xmath421 to a vertex in @xmath14 will be of length two in this case ) . now consider the case when @xmath437 .",
    "again , we may arrive at @xmath79 from some @xmath422 ( if @xmath431 ) or @xmath438 is an independent edge outside @xmath187 ( if @xmath436 ) . in both cases , we have an _ augmenting _ path , contradicting the fact that @xmath187 is a maximum matching .",
    "this completes the proof .",
    "we will need the following proposition for the proof of next observation .",
    "its proof follows from definitions .",
    "[ cor : min - jc - minor - model ] for any @xmath439 , a subgraph @xmath187 of graph @xmath3 is a minimal minor - model of @xmath10 in @xmath3 if and only if @xmath187 consists of two trees , say @xmath440 and @xmath24 , and a set @xmath14 of @xmath11 edges , each of which has one end vertex in @xmath440 and the other in @xmath24 .",
    "[ obs : no - cut - pendant - vertex ] for @xmath441 , any minimal @xmath10 minor - model @xmath187 of a graph @xmath3 is a connected subgraph of @xmath3 , and does not contain a vertex whose degree in @xmath187 is less than @xmath233 , or a vertex whose deletion from @xmath187 results in a disconnected graph ( a cut vertex of @xmath187 ) .    from proposition  [ cor : min - jc - minor - model ] ,",
    "whose terminology we use in this proof , @xmath187 is connected and contains no isolated vertex .",
    "suppose @xmath395 is a vertex of degree exactly one in @xmath187 .",
    "then @xmath395 is a leaf node in one of the two trees in @xmath187 , say @xmath442 , and no edge in @xmath14 is incident on @xmath395 .",
    "removing @xmath395 from @xmath442 results in a smaller @xmath10 minor - model , contradicting the minimality of @xmath187 .",
    "it follows that every vertex of @xmath187 has degree at least two .",
    "now suppose @xmath395 is a cut vertex in @xmath187 which belongs to , say , the tree @xmath442 .",
    "let @xmath443 be the subtrees of @xmath442 obtained when @xmath395 is deleted from @xmath442 .",
    "let @xmath444 be the graph obtained by deleting @xmath395 from @xmath187 . if @xmath445 , then each @xmath446 has a leaf node , which , by the above argument , has at least one neighbor in @xmath447 .",
    "if @xmath448 , then @xmath449 .",
    "thus @xmath444 is connected in all cases , and so @xmath395 is not a cut vertex , a contradiction .    the following well known result states that every optimization problem expressible in mso has a linear time algorithm on graphs of bounded treewidth .",
    "[ prop : lineartimetwalgo]let @xmath359 be a property that is expressible in monadic second order logic . for any fixed positive integer @xmath5 , there is an algorithm that , given a graph @xmath3 of treewidth at most @xmath5 as input , finds a largest ( alternatively , smallest ) set @xmath14 of vertices of @xmath3 that satisfies @xmath359 in time @xmath450 .",
    "proposition  [ prop : lineartimetwalgo ] together with mso formulations  [ cmso : jchitset ] and  [ cmso : jcflower ] given in section  [ sec : mso - thetac ] implies the following lemma .",
    "[ lem : linalgtw]let @xmath3 be a graph on @xmath12 vertices and @xmath66 a vertex of @xmath3 .",
    "given a tree decomposition of width @xmath451 of @xmath3 , we can , in @xmath452 time , find both ( 1 ) a smallest set @xmath453 of vertices of @xmath3 such that the graph @xmath202 does not contain @xmath10 as a minor , and ( 2 ) a largest collection @xmath454 of @xmath10 minor models of @xmath3 such that for @xmath455 .",
    "now we describe the reduction rules used by the kernelization algorithm .",
    "in contrast to the reduction rules employed by most known kernelization algorithms , these rules can not always be applied on general graphs in polynomial time .",
    "hence the algorithm does not proceed by applying these rules exhaustively , as is typical in kernelization programs .",
    "we describe how to arrive at situations where these rules can in fact be applied in polynomial time , and prove that even this selective application of rules results in a kernel of size polynomial in the parameter @xmath2 .",
    "now we present a set of reduction rules which , given an input instance @xmath49 of @xmath0-@xmath10-deletion , obtains an equivalent instance @xmath50 where @xmath51 and the maximum degree of @xmath52 is at most a polynomial in @xmath2 . in the sequel",
    "a vertex @xmath66 is _ irrelevant _ if it is not a part of any @xmath10 minor model , and is _ relevant _ otherwise . for each rule",
    "below , the input instance is @xmath49 .",
    "delete all irrelevant vertices in @xmath3 .    given a graph @xmath3 and a vertex @xmath119 , an _",
    "@xmath222-flower passing through @xmath66 _ is a set of @xmath222 different @xmath10 minor - models in @xmath3 , each containing @xmath66 and no two sharing any vertex other than @xmath66 .",
    "if a @xmath456-flower passes through a vertex @xmath66 of @xmath3 , then include @xmath66 in the solution and remove it from @xmath3 to obtain the equivalent instance @xmath457 .",
    "the argument for the soundness of these reduction rules is simple and is hence omitted .",
    "one can test whether a particular vertex @xmath66 is part of any minimal minor - model corresponding to @xmath10 using the rooted minor testing algorithm of robertson and seymour  @xcite .",
    "it is not clear , however , that one might check whether a vertex is a part of @xmath456-@xmath10 flower in polynomial time .",
    "hence we defer the application of these rules and apply them only when the vertices are `` evidently '' irrelevant or finding a flower can be solved in polynomial time .",
    "now we state an auxiliary lemma which will be useful in bounding the maximum degree of the graph .",
    "[ lem : specializedhitset]let @xmath3 be a @xmath12-vertex graph containing @xmath10 as a minor and @xmath66 be a vertex such that @xmath458 does not contain @xmath10 as a minor and the maximum size of a flower containing @xmath66 is at most @xmath2 .",
    "then there exists a set @xmath459 of size @xmath34 such that @xmath460 and @xmath461 does not contain @xmath10 as a minor .",
    "moreover we can find the set @xmath459 in polynomial time .",
    "we first bound the treewidth of @xmath52 .",
    "robertson , seymour and thomas  @xcite have shown that any graph with treewidth greater than @xmath462 contains a @xmath463 grid , and hence @xmath10 , as a minor .",
    "this implies that for a fixed @xmath11 , @xmath464 .",
    "now we show the existence of a @xmath459 of the desired kind .",
    "recall the algorithm used to show the existence of a @xmath10 hitting set for a graph described in algorithm  [ fig : jchitsetconst3 ] .",
    "we use the same algorithm to construct the desired @xmath459 .",
    "let @xmath465 denote the size of the maximum flower passing through @xmath66 in @xmath3 .",
    "consider a nice tree decomposition @xmath114 of @xmath52 of width at most @xmath466 .",
    "we define the function @xmath467)$ ] .",
    "it is easy to see that @xmath361 is a good labeling function , and can be computed in polynomial time due to lemma  [ lem : linalgtw ] .",
    "observe that @xmath468 , where @xmath124 is the root node of the tree decomposition .",
    "let @xmath469 denote the size of the hitting set returned by the algorithm .",
    "thus the size of the hitting set returned by the algorithm hit - set - ii ( algorithm  [ fig : jchitsetconst3 ] ) is governed by the following recurrence : @xmath470,\\alpha k)+{\\mathcal s}(g[v_2],(1-\\alpha)k)+o(1)\\big\\}.\\ ] ] using akra - bazzi  @xcite it follows that the above recurrence solves to @xmath471 .",
    "this implies that there exists a set @xmath459 of size @xmath34 such that @xmath460 and @xmath461 does not contain @xmath10 as a minor .",
    "we now proceed to find an optimal hitting set in @xmath3 avoiding @xmath66 . to make the algorithm hit - set - ii run in polynomial time",
    "we only need to find the tree decomposition and compute the function @xmath378 in polynomial time .",
    "since @xmath472 , we can find the desired tree decomposition of @xmath3 or one of its subgraphs in linear time using the algorithm of bodlaender  @xcite .",
    "similarly we can compute a flower of the maximum size using lemma  [ lem : linalgtw ] in linear time .",
    "hence the function @xmath378 can also be computed in polynomial time .",
    "this concludes the proof of the lemma .",
    "[ [ flowers - expansion - and - the - maximum - degree . ] ] flowers , expansion and the maximum degree .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    now we are ready to prove the lemma which bounds the maximum degree of the instance .",
    "[ lem : maxdegreebound]there exists a polynomial time algorithm that , given an instance @xmath49 of @xmath0-@xmath10-deletion returns an equivalent instance @xmath50 such that @xmath51 and that the maximum degree of @xmath52 is @xmath53",
    ". moreover it also returns a @xmath10-hitting set of @xmath52 of size @xmath292 .",
    "given an instance @xmath49 of @xmath0-@xmath10-deletion , we first apply lemma  [ thm : epconstructive ] on @xmath49 .",
    "the polynomial time algorithm described in lemma  [ thm : epconstructive ] , given a graph @xmath3 and a positive integer @xmath2 either reports that @xmath3 has no @xmath10-hitting set of size at most @xmath2 , or finds a @xmath10-hitting set of size at most @xmath473 .",
    "if the algorithm reports that @xmath3 has has no @xmath10-hitting set of size at most @xmath2 , then we return that @xmath49 is a no - instance to @xmath0-@xmath10-deletion .",
    "so we assume that we have a hitting set @xmath474 of size @xmath475 .",
    "now we proceed with the following two rules .    * selective flower rule . *",
    "to apply the flower rule selectively we use @xmath474 , the @xmath10-hitting set . for a vertex @xmath476",
    "let @xmath477 and let @xmath478 . by a result of robertson et .",
    "@xcite we know that any graph of treewidth greater than @xmath462 contains a @xmath463 grid , and hence @xmath10 , as a minor . since deleting @xmath66 from @xmath479",
    "makes it @xmath10-minor - free , @xmath480 .",
    "now by lemma  [ lem : linalgtw ] , we find in linear time the size of the largest flower centered at @xmath66 , in @xmath479 .",
    "if for any vertex @xmath481 the size of the flower in @xmath479 is at least @xmath319 , we apply the flower rule and get an equivalent instance @xmath482 .",
    "furthermore , we set @xmath483 .",
    "we apply the flower rule selectively until no longer possible .",
    "we abuse notation and continue to use @xmath49 to refer to the instance that is reduced with respect to exhaustive application of the selective flower rule .",
    "thus , for every vertex @xmath476 the size of any flower passing through @xmath66 in @xmath479 is at most @xmath2 .",
    "now we describe how to find , for a given @xmath484 , a hitting set @xmath485 for all minor - models of @xmath10 that contain @xmath66 .",
    "notice that this hitting set is required to _ exclude _ @xmath66 , so @xmath486 can not be the trivial hitting set @xmath487 . if @xmath488 , then @xmath489 .",
    "on the other hand , suppose @xmath476 .",
    "since the maximum size of a flower containing @xmath66 in the graph @xmath479 is at most @xmath2 by lemma  [ lem : specializedhitset ] , we can find a set @xmath459 of size @xmath34 that does not contain @xmath66 and hits all the @xmath10 minor - models passing through @xmath66 in @xmath479 . hence in this case we set @xmath490 ( see figure  [ fig : flower - rule ] . ) .",
    "we denote @xmath491 by @xmath492 . notice that @xmath486 is defined algorithmically , that is , there could be many small hitting sets in @xmath493 hitting all minor - models containing @xmath66 , and @xmath486 is one of them .     the hitting set in selective flower rule ]    [ [ q - expansion - rule - with - qc . ] ] @xmath389-expansion rule with @xmath494 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    given an instance @xmath49 , @xmath495 , and a family of sets @xmath486 , we show that if there is a vertex @xmath66 with degree more than @xmath496 , then we can reduce its degree to at most @xmath496 by repeatedly applying the with @xmath494 .",
    "observe that for every vertex @xmath66 the set @xmath486 is also a @xmath10 hitting set for @xmath3 , that is , @xmath486 hits _ all _ minor - models of @xmath10 in @xmath3 . consider the graph @xmath497 .",
    "let the components of this graph that contain a neighbor of @xmath66 be @xmath498 .",
    "note that @xmath66 can not have more than @xmath499 neighbors into any component , else contracting the component will form a @xmath10 minor and will contradict the fact that @xmath486 hits all the @xmath10 minors . also note that none of the @xmath500 s can contain a minor model of @xmath10 .",
    "we say that a component @xmath500 is adjacent to @xmath486 if there exists a vertex @xmath501 and @xmath502 such that @xmath503 .",
    "next we show that vertices in components that are not adjacent to @xmath486 are irrelevant in @xmath3 .",
    "recall a vertex is irrelevant if there is no minimal minor model of @xmath10 that contains it . consider a vertex @xmath79 in a component @xmath504 that is not adjacent to @xmath486 .",
    "since @xmath505 $ ] does not contain any @xmath10 minor we have that if @xmath79 is a part of a minimal minor model @xmath506 , then @xmath507 and also there exists a vertex @xmath508 such that @xmath509",
    ". then the removal of @xmath66 disconnects @xmath79 from @xmath510 in @xmath187 , a contradiction to observation  [ obs : no - cut - pendant - vertex ] that for @xmath441 , any minimal @xmath10 minor model @xmath187 of a graph @xmath3 does not contain a cut vertex .",
    "applying the irrelevant vertex rule to the vertices in all such components leaves us with a new set of components @xmath511 , such that for every @xmath21 , in @xmath512 , there is at least one vertex that is adjacent to a vertex in @xmath486 .",
    "as before , we continue to use @xmath3 to refer to the graph obtained after the irrelevant vertex rule has been applied in the context described above .",
    "we also update the sets @xmath486 for @xmath119 by deleting all the vertices @xmath421 from these sets those have been removed using irrelevant vertex rule .    now , consider a bipartite graph @xmath212 with vertex bipartitions @xmath486 and @xmath94 . here",
    "@xmath513 contains a vertex @xmath514 corresponding to each component @xmath512 .",
    "we add an edge @xmath515 if there is a vertex @xmath516 such that @xmath517 . even though we start with a simple graph ( graphs without parallel edges ) it is possible that after applying reduction rules parallel edges may appear .",
    "however , throughout the algorithm , we ensure that the number of parallel edges between any pair of vertices is at most @xmath11 .",
    "now , @xmath66 has at most @xmath518 edges to vertices in @xmath486 .",
    "since @xmath66 has at most @xmath499 edges to each @xmath512 , it follows that if @xmath519 , then the number of components @xmath520 is more than @xmath518 .",
    "now by applying with @xmath494 , @xmath521 , and @xmath522 , we find a subset @xmath523 and @xmath524 such that @xmath14 has @xmath224 @xmath11-stars in @xmath120 and @xmath525 .",
    "the reduction rule involves deleting edges of the form @xmath526 for all @xmath527 , such that @xmath528 , and adding @xmath11 edges between @xmath66 and @xmath421 for all @xmath529 .",
    "we add these edges only if they were not present before so that the number of egdes between any pair of vertices remains at most @xmath11 .",
    "this completes the description of the @xmath389-expansion reduction rule with @xmath494 .",
    "let @xmath530 be the graph obtained after applying the reduction rule .",
    "the following lemma shows the correctness of the rule .",
    "[ lem : q - expansioncorrectness]let @xmath3 , @xmath14 and @xmath66 be as above and @xmath530 be the graph obtained after applying the @xmath11-expansion rule .",
    "then @xmath49 is an yes instance of @xmath0-@xmath10-deletion if and only if @xmath531 is an yes instance of @xmath0-@xmath10-deletion .",
    "we first show that if @xmath530 has hitting set @xmath360 of size at most @xmath2 , then the same hitting set @xmath360 hits all the minor - models of @xmath10 in @xmath3 .",
    "observe that either @xmath532 or @xmath533 .",
    "suppose @xmath532 , then observe that @xmath534 is the same as @xmath535 .",
    "therefore @xmath536 , a hitting set of @xmath534 is also a hitting set of @xmath535 .",
    "this shows that @xmath360 is a hitting set of size at most @xmath2 of @xmath3 .",
    "the case when @xmath533 is similar . to prove that a hitting set of size at most @xmath2 in @xmath3 implies a hitting set of size at most @xmath2 in @xmath530",
    ", it suffices to prove that whenever there is a hitting set of size at most @xmath2 , there also exists a hitting set of size at most @xmath2 that contains either @xmath66 or all of @xmath14 .",
    "consider a hitting set @xmath537 that does not contain @xmath66 , and omits at least one vertex from @xmath14 .",
    "note the @xmath224 @xmath11-stars in @xmath538 $ ] , along with @xmath66 , correspond to minor - models of @xmath10 centered at @xmath66 in @xmath3 , vertex - disjoint except for @xmath66 .",
    "thus , such a hitting set must pick at least one vertex from one of the components .",
    "let @xmath539 be the collection of components @xmath512 such that the ( corresponding ) vertex @xmath528 .",
    "let @xmath158 denote the set of all vertices of @xmath537 that appeared in any @xmath540 .",
    "consider the hitting set @xmath541 obtained from @xmath537 by removing @xmath158 and adding @xmath14 , that is , @xmath542 .",
    "we now argue that @xmath541 is also a hitting set of size at most @xmath2 .",
    "indeed , let @xmath410 be the set of vertices in @xmath14 that do not already belong to @xmath537 .",
    "clearly , for _ every _ such vertex that @xmath537 omitted , @xmath537 must have had to pick distinct vertices from @xmath539 to hit the @xmath10 minor - models formed by the corresponding @xmath11-stars .",
    "formally , there exists a @xmath543 such that there is a bijection between @xmath410 and @xmath544 , implying that @xmath545 .",
    "finally , observe that @xmath541 must also hit all minor - models of @xmath10 in @xmath3 .",
    "if not , there exists a minor - model @xmath187 that contains some vertex @xmath546 .",
    "hence , @xmath527 for some @xmath21 , and @xmath187 contains some vertex in @xmath547 .",
    "however , @xmath66 separates @xmath79 from @xmath547 in @xmath202 , contradicting observation  [ obs : no - cut - pendant - vertex ] that @xmath187 does not contain a cut vertex .",
    "this concludes the proof .",
    "observe that all edges that are added during the application of the @xmath389-expansion reduction rule have at least one end point in @xmath548 , and hence @xmath548 remains a hitting set of @xmath530 .",
    "we are now ready to summarize the algorithm that bounds the degree of the graph ( see algorithm  [ alg : bdd - degree ] ) .",
    "apply the selective flower rule apply the @xmath389-expansion reduction rule with @xmath494 .",
    "return @xmath549 .",
    "return bound - degree@xmath549 .",
    "let the instance output by algorithm [ alg : bdd - degree ] be @xmath550 .",
    "clearly , in @xmath52 , the degree of every vertex is at most @xmath551 . the routine also returns @xmath495  a @xmath10-hitting set of @xmath52 of size at most @xmath53 .",
    "we now show that the algorithm runs in polynomial time . for @xmath552 ,",
    "let @xmath553 be the number of neighbors of @xmath395 to which @xmath395 has fewer than @xmath11 parallel edges .",
    "observe that the application of @xmath389-expansion reduction rule never increases @xmath553 for any vertex and decreases @xmath553 for at least one vertex .",
    "the other rules delete vertices , which can never increase @xmath553 for any vertex .",
    "this concludes the proof .      in this section",
    "we give the desired kernel for @xmath0-@xmath10-deletion .",
    "let @xmath49 be an instance to @xmath0-@xmath10-deletion .",
    "we first bound the maximum degree of the graph by applying lemma  [ lem : maxdegreebound ] on @xmath49 .",
    "if lemma  [ lem : maxdegreebound ] returns that @xmath49 is a no - instance to @xmath0-@xmath10-deletion then we return the same .",
    "else we obtain an equivalent instance @xmath50 such that @xmath51 and the maximum degree of @xmath52 is bounded by @xmath53 .",
    "moreover it also returns a @xmath10-hitting set , @xmath158 , of @xmath52 of size at most @xmath53 .",
    "let @xmath93 denote the treewidth of the graph after the removal of @xmath158 , that is , @xmath554 .",
    "now , we obtain our kernel in two phases : we first apply the protrusion rule selectively ( lemma  [ lem : red2finiteindex ] ) and get a polynomial kernel .",
    "then , we apply the protrusion rule exhaustively on the obtained kernel to get a smaller kernel . to obtain the kernel we follow the following steps .",
    "[ [ applying - the - protrusion - rule.-1 ] ] _ applying the protrusion rule . _ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    by a result of robertson et .",
    "@xcite we know that any graph of treewidth greater than @xmath462 contains a @xmath463 grid , and hence @xmath10 , as a minor .",
    "hence @xmath555 .",
    "now we apply lemma  [ lem : prottfd ] and get a @xmath215-protrusion @xmath267 of @xmath52 of size at least @xmath268 . by lemma  [ lem : jcisfii ] , @xmath0-@xmath10-deletion has finite integer index .",
    "let @xmath203 be the function defined in lemma  [ lem : red2finiteindex ] .",
    "hence if @xmath269 then using lemma  [ lem : red2finiteindex ] we replace the @xmath215-protrusion @xmath267 of @xmath52 and obtain an instance @xmath256 such that @xmath556 , @xmath557 , and @xmath271 is a yes - instance of @xmath0-@xmath10-deletion if and only if @xmath558 is a yes - instance of @xmath0-@xmath10-deletion .    before applying the protrusion rule again , if necessary , we bound the maximum degree of the graph by reapplying lemma  [ lem : maxdegreebound ] .",
    "this is done because the application of the protrusion rule could potentially increase the maximum degree of the graph .",
    "we alternately apply the protrusion rule and lemma  [ lem : maxdegreebound ] in this fashion , until either lemma  [ lem : maxdegreebound ] returns that @xmath3 is a no instance , or the protrusion rule ceases to apply .",
    "observe that this process will always terminate as the procedure that bounds the maximum degree never increases the number of vertices and the protrusion rule always reduces the number of vertices .",
    "let @xmath207 be a reduced instance with hitting set @xmath158 .",
    "in other words , there is no @xmath273-protrusion of size @xmath274 in @xmath275 , and the protrusion rule no longer applies .",
    "now we show that the number of vertices and edges of this graph is bounded by @xmath559 .",
    "we first bound the number of vertices .",
    "since we can not apply the protrusion rule , @xmath560 . since @xmath277 this implies that @xmath561 to get the desired bound on the number of edges we first observe that since @xmath562 , we have that the number of edges in @xmath563 also the number of edges incident on the vertices in @xmath158 is at most @xmath564 .",
    "this gives us a polynomial time algorithm that returns a kernel of size @xmath559 .",
    "now we give a kernel of smaller size .",
    "to do so we apply combination of rules to bound the degree and the protrusion rule as before .",
    "the only difference is that we would like to replace any large @xmath273-protrusion in graph by a smaller one .",
    "we find a @xmath282-protrusion @xmath267 of size at least @xmath274 by guessing the boundary @xmath281 of size at most @xmath282 .",
    "this could be performed in time @xmath283 .",
    "so let @xmath207 be the reduced instance on which we can not apply the protrusion rule .",
    "then we know that @xmath565 .",
    "if @xmath3 is a yes - instance then there exists a @xmath10-hitting set @xmath158 of size at most @xmath2 such that @xmath566 . now applying the analysis above with this @xmath158 yields that @xmath567 and @xmath568 .",
    "hence if the number of vertices or edges in the reduced instance @xmath256 , to which we can not apply the protrusion rule , is more than @xmath38 then we return that @xmath3 is a no - instance .",
    "this concludes the proof of the theorem .",
    "theorem  [ thm : thetackernel ] has following immediate corollary .",
    "@xmath0-vertex cover , @xmath0-feedback vertex set and @xmath0-diamond hitting set have kernel of size @xmath38 .",
    "in this paper we gave the first kernelization algorithms for a subset of @xmath0-@xmath1-deletion problems and a generic approximation algorithm for the @xmath0-@xmath1-deletion problem when the set of excluded minors @xmath569 contains at least one planar graph .",
    "our approach generalizes and unifies known kernelization algorithms for @xmath0-vertex cover and @xmath0-feedback vertex set . by the celebrated result of robertson and seymour ,",
    "every @xmath0-@xmath1-deletion problem is fpt and our work naturally leads to the following question : does every @xmath0-@xmath1-deletion problem have a polynomial kernel ?",
    "can it be that for some finite sets of minor obstructions @xmath570 the answer to this question is no ?",
    "even the case @xmath571 , vertex deletion to planar graphs , is an interesting challenge .",
    "another interesting question is if our techniques can be extended to another important case when @xmath1 contains a planar graph .                      , _ a cubic kernel for feedback vertex set _ , in proceedings of 24th annual symposium on theoretical aspects of computer science ( stacs 2007 ) , vol .",
    "4393 of lecture notes in comput .",
    "sci . , springer , 2007 , pp .",
    "320331 .    height 2pt depth -1.6pt width 23pt , _ kernelization : new upper and lower bound techniques _ , in proceedings of the 4th workshop on parameterized and exact computation ( iwpec 2009 ) , vol .",
    "5917 of lecture notes in computer science , springer , 2009 , pp .",
    "1737 .            , _ the undirected feedback vertex set problem has a poly(_k _ ) kernel _ , in proceedings of 2nd international workshop on parameterized and exact computation ( iwpec 2006 ) , vol .",
    "4169 of lecture notes in comput .",
    "sci . , springer , 2006 , pp .",
    "192202 .      , _ linear kernels in linear time , or how to save @xmath2 colors in @xmath572 steps _ , in proceedings of the 30th international workshop on graph - theoretic concepts in computer science ( wg 2004 ) , vol .  3353 of lncs , springer , 2004 , pp .",
    "257269 .          , _ the expression of graph properties and graph transformations in monadic second - order logic _ , in handbook of graph grammars and computing by graph transformations , volume 1 : foundations , g.  rozenberg , ed . , world scientific , 1997 , ch .  5 .      , _ improved fpt algorithm and quadratic kernel for pathwidth one vertex deletion _ , in proceedings of the 5th international symposium on parameterized and exact computation ( ipec 2010 ) , lecture notes in comput .",
    "sci . , springer , 2010 , p.  to appear .    , _ greedy localization , iterative compression , and modeled crown reductions : new fpt techniques , an improved algorithm for set splitting , and a novel @xmath56  kernelization for vertex cover _ , in proceedings of the first international workshop on parameterized and exact computation ( iwpec 2004 ) , vol .",
    "3162 of lecture notes in comput .",
    "sci . , springer , 2004 , pp .  271280 .            ,",
    "_ hitting diamonds and growing cacti _ , in proceedings of the 14th conference on integer programming and combinatorial optimization ( ipco 2010 ) , vol .",
    "6080 of lecture notes in comput .",
    "sci . , springer , 2010 , pp .",
    "191204 .                    , _ polynomial kernelizations for min f@xmath573pi@xmath574 and max np _ , in proceedings of the 26th international symposium on theoretical aspects of computer science ( stacs 2009 ) , vol .  3 of ( lipics ) , schloss dagstuhl",
    "leibniz - zentrum fuer informatik , 2009 , pp .",
    "601612 .      , _ the approximation of maximum subgraph problems _ , in proceedings of the 20th international colloquium automata , languages and programming ( icalp 1993 ) , vol .  700 of lecture notes in comput .",
    "sci . , springer , 1993 , pp .",
    "4051 .        , _ solving dominating set in larger classes of graphs : fpt algorithms and polynomial kernels _ , in proceedings of the 17th annual european symposium on algorithms ( esa 2009 ) , vol .",
    "5757 of lecture notes in comput .",
    "sci . , springer , 2009 , pp ."
  ],
  "abstract_text": [
    "<S> we study a general class of problems called @xmath0-@xmath1-deletion problems . in an @xmath0-@xmath1-deletion problem </S>",
    "<S> , we are asked whether a subset of at most @xmath2 vertices can be deleted from a graph @xmath3 such that the resulting graph does not contain as a minor any graph from the family @xmath4 of forbidden minors . </S>",
    "<S> we obtain a number of algorithmic results on the @xmath0-@xmath1-deletion  problem when @xmath1 contains a planar graph . we give    * a linear vertex kernel on graphs excluding @xmath5-claw @xmath6 , the star with @xmath5 leves , as an induced subgraph , where @xmath5 is a fixed integer . * </S>",
    "<S> an approximation algorithm achieving an approximation ratio of @xmath7 , where @xmath8 is the size of an optimal solution on general undirected graphs .    </S>",
    "<S> finally , we obtain polynomial kernels for the case when @xmath9 contains graph @xmath10 as a minor for a fixed integer @xmath11 . </S>",
    "<S> the graph @xmath10 consists of two vertices connected by @xmath11 parallel edges . even though this may appear to be a very restricted class of problems it already encompasses well - studied problems such as vertex cover , feedback vertex set and diamond hitting set . </S>",
    "<S> the generic kernelization algorithm is based on a non - trivial application of protrusion techniques , previously used only for problems on topological graph classes . </S>"
  ]
}
{
  "article_text": [
    "a combinational network , or simply network , is represented by a directed acyclic graph @xmath1 where :    * @xmath2 is the vertex set .",
    "* @xmath3 is the set of unit - capacity directed edges .",
    "* @xmath4 is the source set , meaning the set of vertices with in - degree @xmath5 .",
    "* @xmath6 is the receiver set , meaning the set of vertices with out - degree @xmath5 and without loss of generality , we assume @xmath7 . * @xmath8 is a finite field with @xmath0 elements and the alphabet used for communication .    in a network @xmath9 ,",
    "the sources originate messages and send them through the network via the edges of @xmath9 , which represent error - free point - to - point communication channels . the communication requirements of a network @xmath9 are nonempty subsets @xmath10 for @xmath11 that represent collections of sources from which @xmath12 must receive a message .",
    "a multicast network is a directed acyclic graph @xmath13 with communication requirements @xmath14 for every receiver @xmath15 , meaning that every receiver demands the message sent by every source .    for a given network @xmath9 ,",
    "a collection of requirements @xmath16 is achievable if there exist an alphabet @xmath8 and a communication technique for which each receiver can reconstruct the messages sent by the sources it demands .",
    "examples of communication techniques are routing and network coding . in routing ,",
    "vertices of a network forward a choice of their incoming messages .",
    "network coding generalizes routing , and vertices can forward combinations of their incoming messages .",
    "linear network coding is a special case of network coding where messages are vectors of @xmath17 and vertices forward @xmath8-linear combinations of their incoming messages .",
    "we briefly explain how to achieve the requirements of a multicast network and describe some open problems in this area . for a more detailed explanation of the subject",
    ", we refer the interested reader to @xcite .",
    "let @xmath9 be a multicast network with only one receiver @xmath12 .",
    "then its communication requirement is achieved by routing the messages if and only if @xmath18 .",
    "this is a consequence of the result known as the edge - connectivity version of menger s theorem @xcite , which states that @xmath19 is equal to the maximum number of edge - disjoint paths between the source set @xmath20 and the receiver @xmath12 .",
    "if the multicast network has multiple receivers , then a necessary condition for the communication requirements to be achieved is that @xmath21 this constant is called the capacity of a multicast network and corresponds to the maximum number of messages that every receiver might be able to reconstruct from the communication .",
    "it it evident that achieving the capacity of a multicast network is equivalent to achieving its communication requirements .",
    "routing does not generally achieve capacity for multicast networks .",
    "the network in figure [ butterflynetwork ] with the requirements that both receivers receive the messages from both sources , is the simplest nontrivial example of a multicast network with multiple sources and multiple receivers for which routing does not achieve capacity .",
    "this network is called the butterfly network and was first introduced in @xcite . in order for the communication to achieve capacity ,",
    "it is necessary for the vertex connected to both @xmath22 and @xmath23 to combine its incoming messages , meaning that it performs network coding .",
    "li _ et al .",
    "_ in @xcite prove that the capacity of a multicast network is achieved by linear network coding .",
    "let @xmath24 be the number of receivers of a given multicast network . in @xcite , ktter and mdard",
    "prove that linear network coding suffices to achieve capacity using vector spaces over any finite field @xmath8 with size @xmath25 . in @xcite , ho _",
    "_ showed that the capacity of a multicast network is achieved with high probability if the linear combinations are taken uniformly at random from a large finite field .",
    "although every finite field of size @xmath25 is enough to achieve the capacity of every multicast network with @xmath24 receivers , it is believed that this bound is not tight .    for a given multicast network ,",
    "let @xmath26 denote the smallest finite field size for which network capacity is achievable using linear network coding .",
    "it is important to note that achievability of capacity over @xmath8 does not automatically imply achievability of capacity over larger fields . indeed ,",
    "_ showed that there exists a family of multicast networks such that @xmath26 is bounded below by a constant times @xmath27 , but for which capacity is not achieveable over every field @xmath8 with @xmath28 @xcite .",
    "in particular , they give a multicast network where capacity is achievable over @xmath29 but not over @xmath30 .",
    "we return to this example in section [ s : vector_labeling ] .",
    "therefore , in addition to determining @xmath26 , it is an important problem in multicast network communication to understand the set of @xmath0 with @xmath31 for which capacity is achievable using linear network coding over the finite field @xmath8 .",
    "the aim of this work is to concisely provide different representations of the multicast network problem for researchers to approach this problem from various viewpoints .",
    "the main background reference for this paper is the monograph @xcite .    for the rest of the work ,",
    "we restrict to multicast networks for which capacity is achievable , meaning that the number of sources is equal to the capacity of the network .",
    "this condition is equivalent to the existence for each receiver @xmath11 of a set of edge - disjoint paths @xmath32 , where @xmath33 is a path from @xmath34 to @xmath12 .",
    "the paper is organized as follows . in section [",
    "s : coding_pts ] , we define coding points as the bottlenecks of the network where the linear combinations occur .",
    "we provide an integer optimization algorithm that , given a network , returns the subgraph of the network corresponding to a choice of paths between sources and receivers that uses the smallest possible number of coding points .",
    "section [ s : code_graph ] is dedicated to code graphs , which may be thought of as skeletons of multicast networks .",
    "more precisely , a code graph is a labeled directed graph whose vertices correspond to sources and coding points , with vertex labels representing the edge - disjoint paths from sources to receivers .",
    "we give properties for a labeled , directed acyclic graph to be the code graph of a multicast network . in the multicast network problem we label sources with vectors over @xmath8 and specify how incoming messages combine at coding points .",
    "capacity is achievable if and only if there is a labeling where these combinations satisfy certain linear independence conditions . in section [",
    "s : vector_labeling ] , we describe how these conditions translate to conditions on the vector labelings of the code graph of the network .",
    "this leads to the study of matrices over @xmath8 with prescribed linear dependence and independence conditions , and then to the study of @xmath8-rational points on certain varieties .",
    "we discuss the problem of determining the set of finite fields @xmath8 for which such an @xmath8-vector labeling of a code graph exists , and how to understand the collection of all such labelings as the solutions to systems of algebraic equations .",
    "let @xmath35 be the underlying directed acyclic graph of a multicast network . in this section , we study the coding points of @xmath9 , which are the directed edges transmitting nontrivial linear combinations of the messages received at their tails .",
    "we are interested in choosing the set of edge - disjoint paths that uses the smallest possible number of coding points .",
    "[ d : coding_point ] let @xmath9 be the underlying directed graph of a multicast network and for each @xmath15 let @xmath32 be a set of edge - disjoint paths , where @xmath33 denotes a path from @xmath34 to @xmath12 .",
    "a _ coding point _ of @xmath9 is an edge @xmath36 such that :    * there are distinct sources @xmath34 , @xmath37 and distinct receivers @xmath12 , @xmath38 such that @xmath39 appears in both @xmath40 and @xmath41 , and * if @xmath42 and @xmath43 , then @xmath44 .",
    "[ coding_points_example ] consider the multicast network with four sources and three receivers shown in figure [ f : coding_pt_network ] . to make the figure more readable",
    ", we omit from the network the directed edges to @xmath45 from @xmath22 and @xmath46 , to @xmath47 from @xmath22 and @xmath23 , and to @xmath48 from @xmath23 , @xmath49 , and @xmath46 . for each receiver in this network , there is exactly one set of edge - disjoint paths from the sources to that receiver ; these are shown in , , and . using definition [ d : coding_point ] , we note that the coding points of the network are precisely the edges depicted in figure [ f : coding_pt_network_cp ]",
    ".    0.48    0.48    0.48    0.48    network coding has been studied using linear programming . the ford - fulkerson algorithm from @xcite",
    "can be used to find the maximum flow of a unicast network , meaning a network with a source and a receiver .",
    "it can also be adapted to the case of a multicast network with only one receiver . in section 3.5 of @xcite ,",
    "the authors specify a linear optimization problem to maximize the flow of a network when using network coding .",
    "our goal is to specify an integer linear optimization problem whose solution corresponds to a set of paths @xmath50 , one for each @xmath15 , with the minimal number of coding points .    without loss of generality ,",
    "write @xmath51 where @xmath52 and @xmath53 for @xmath54 and @xmath55",
    "let @xmath56 be the adjacency matrix of the directed graph @xmath9 .",
    "for every choice of @xmath57 and @xmath58 , construct the @xmath59 matrix @xmath60 where @xmath61 is obtained from @xmath56 by replacing each nonzero entry in position @xmath62 by the variable @xmath63 .",
    "let @xmath64 be the vector of ones of size @xmath65 .",
    "[ t : optimization ] let @xmath66 be the underlying graph of a multicast network where @xmath67 , @xmath68 and @xmath69 .",
    "consider the following integer optimization problem : @xmath70^t\\\\ \\label{09.30.16.05 } x_{k\\ell ij } , z_{ij}&\\in&\\left\\{0,1\\right\\}\\\\ \\label{09.30.16.03}\\sum_{k'=1}^n x_{k'\\ell ij}&\\leq & 1,\\\\ \\label{09.30.16.04 } z_{ij}&\\leq&4-x_{k\\ell i'i}-x_{k\\ell ij}-x_{k^\\prime\\ell^\\prime i''i}-x_{k^\\prime\\ell^\\prime ij},\\\\ \\nonumber & & \\qquad \\qquad \\forall \\ \\ k^\\prime > k,\\ \\ell^\\prime\\neq\\ell ;    \\ ( v_{i'},v_i)\\neq(v_{i''},v_i)\\in \\mathcal{e}\\end{aligned}\\ ] ] where the @xmath71 s and the @xmath72 s are variables .",
    "a solution @xmath73 of this optimization problem corresponds to a collection of sets of edge - disjoint paths , one for each @xmath74 , @xmath75 where @xmath76 is a path from @xmath77 to @xmath78 .",
    "the number of coding points of @xmath9 used by these collections of paths is @xmath79 no other choice of paths gives a smaller number of coding points .",
    "observe that variables @xmath80 run over @xmath57 , @xmath58 and @xmath62 where @xmath81 .",
    "we begin by analyzing the meaning of each constraint of the optimization problem . throughout the proof",
    "we say that an edge @xmath82 has value @xmath83 if the corresponding entry of the solution @xmath84 is equal to @xmath83 , for a given source @xmath77 and receiver @xmath78 and for a solution @xmath85 of the optimization problem .",
    "* constraint consists of @xmath86 linear systems of equations , and its solutions correspond to paths between sources and receivers .",
    "+ a given system of @xmath87 represents the constraints of the communication flow between source @xmath57 and receiver @xmath58 .",
    "the system has @xmath88 equations .",
    "each equation corresponds to the flow of a vertex of the network , meaning the sum of the values of its outgoing edges minus the sum of the values of its incoming edges .",
    "these equations divide into three types : * * the first @xmath24 equations correspond to the flow starting from the @xmath24 sources .",
    "the only equation that is equal to @xmath83 is the @xmath89^th^ equation and the remaining are zero .",
    "this means that , given a solution of the system , the only edges with possibly nonzero value are the ones leaving source @xmath77 . since a solution has only entries in \\{0,1 } and the @xmath89^th^ equation sums those entries to @xmath83 , a solution has entry @xmath83 corresponding to only one of the edges leaving @xmath77 and @xmath5 otherwise . * * the last @xmath90 equations correspond to the flow getting into the @xmath90 receivers .",
    "the only equation that is equal to @xmath91 is the @xmath74^th^ equation and the remaining are zero .",
    "this means that , given a solution of the system , the only edges with possibly nonzero value are the ones leaving source @xmath78 . since a solution has only entries in \\{0,1 } and the @xmath74^th^ equation subtracts those entries to @xmath91 , a solution has entry @xmath83 corresponding to one of the edges leaving @xmath78 and @xmath5 otherwise .",
    "t * * the remaining equations are always equal to zero and correspond to the conservation of flow .",
    "this means that , at each remaining vertex , the number of incoming edges with value @xmath83 equals the number of outgoing edges with value @xmath83 .",
    "+ it follows that every solution of the system is a path @xmath92 and that every path @xmath92 satisfies the previous conditions .",
    "* constraint says that , given a receiver @xmath78 and an edge @xmath82 , as we vary over all of the sources , that is , vary over all values of @xmath89 , at most one of the entries of the solution @xmath84 has value @xmath83 .",
    "this inequality implies that the sets @xmath93 with @xmath94 obtained from the solution consists of edge - disjoint paths .    since @xmath9 is a multicast network by hypothesis , there",
    "exist sets of edge - disjoint paths @xmath95 , one for each @xmath58 .",
    "this implies that a solution of the linear optimization system satisfying , and exists .",
    "constraint deals with the coding points . from definition",
    "[ d : coding_point ] , if @xmath81 is a coding point for a solution @xmath85 , then there exist distinct sources @xmath96 distinct receivers @xmath97 , and distinct edges @xmath98 such that @xmath99 . as a consequence @xmath100 . instead , if @xmath81 is not a coding point for a solution @xmath85 then @xmath101 .",
    "condition combined with constraints and implies that @xmath100 if @xmath81 is a coding point and @xmath102 otherwise .",
    "therefore , the number of coding points for a fixed assignment of the variables @xmath84 is @xmath79    we illustrate the algorithm with an example .",
    "[ butterfly_ex ] consider the modified butterfly network of figure [ modifiedbutterfly ] .",
    "0.48    0.48    0.24    0.24    0.24    0.24    in this case , we have @xmath103 sources and @xmath104 receivers .",
    "as explained in the discussion leading up to the statement of theorem [ t : optimization ] , for each @xmath105 we define the matrix @xmath106 constraint gives the following four linear systems of equations : @xmath107\\\\ \\label{11.30.2}x_{12}\\cdot{\\bf 1}&=&\\left[1 , 0 , 0 , 0,0 , -1\\right]\\\\ \\label{11.30.3}x_{21}\\cdot{\\bf 1}&=&\\left[0 , 1 , 0 , 0 , -1 , 0\\right]\\\\ \\label{11.30.4}x_{22}\\cdot{\\bf 1}&=&\\left[0 , 1 , 0 , 0 , 0 , -1\\right].\\end{aligned}\\ ] ]    constraint imposes the solutions of the system to be in @xmath108 .",
    "it holds that :    * system  ( [ 11.30.1 ] ) has two solutions ( see figure [ modifiedbutterfly_a ] ) : @xmath109 * system  ( [ 11.30.2 ] ) has two solutions ( see figure [ modifiedbutterfly_b ] ) : @xmath110 * system  ( [ 11.30.3 ] ) has one solution ( see figure [ modifiedbutterfly_c ] ) : @xmath111 * system  ( [ 11.30.4 ] ) has two solutions ( see figure [ modifiedbutterfly_d ] ) : @xmath112    combining with constraint  , we obtain three possible solutions : @xmath113 finally , for every edge @xmath62 of the network , we define the variable @xmath114 the expression in tells us which of one the solutions @xmath115 or @xmath116 has the minimum number of coding points .",
    "if we take @xmath117 then constraint @xmath118 says that @xmath119 since @xmath120 there is no restriction on the remaining @xmath121 s for @xmath22 , meaning that each one can be either @xmath5 or @xmath83 .",
    "then the minimum value of @xmath122 is @xmath123 .",
    "this implies that @xmath124 is a choice of paths with one coding point , @xmath125 .",
    "if we take either @xmath126 or @xmath127 then constraint @xmath118 implies that there are no restrictions on the @xmath121 s .",
    "thus , the minimum value of @xmath122 is @xmath128 this implies that @xmath126 and @xmath116 are two choices of paths without coding points .",
    "the algorithm in theorem [ t : optimization ] returns either @xmath126 or @xmath116 .",
    "[ reduced - network_definition ] let @xmath129 be a multicast network .",
    "we say @xmath9 is _ reduced _ if every edge and vertex of @xmath9 appears in some path @xmath33 .",
    "note that the multicast network of figure [ f : coding_pt_network ] , where @xmath130 , @xmath131 and @xmath132 are as shown in figures [ f : coding_pt_network_paths_a ] , [ f : coding_pt_network_paths_b ] , and [ f : coding_pt_network_paths_c ] , respectively , is reduced since every edge and vertex appears in some path .",
    "however , the modified butterfly network shown in figure [ modifiedbutterfly ] is not reduced for any choice of paths . for any of the collections of paths @xmath115 , or @xmath116 from example [ butterfly_ex ] ,",
    "there is at least one edge of the modified butterfly network that does not appear .",
    "therefore , the modified butterfly network is not reduced .    every multicast network @xmath9 with a choice of a set of paths @xmath133 , contains a reduced multicast network @xmath134 as a subgraph .",
    "it is obtained from @xmath9 by omitting the unused edges and vertices .",
    "the multicast network @xmath9 and its reduced form @xmath134 have the same properties with respect to linear network coding .    for the rest of this paper , we assume that @xmath135 is a reduced multicast network and for which the set @xmath136 corresponds to a choice of sets of edge - disjoint paths with a minimal number of coding points .",
    "in this section we introduce the code graph of a multicast network , which is a directed graph with labeled vertices that preserves the information essential to understanding the properties of the network with respect to linear coding .",
    "we want the edges in this new graph to correspond to paths in the original network along which the message being passed is constant .",
    "a maximal such path must originate either at a source or at the tail of a coding point .",
    "this motivates the next definition .",
    "[ coding - direct - path_definition ] let @xmath137 be a multicast network .",
    "a _ coding - direct path _ in @xmath9 from @xmath138 to @xmath139 is a path in @xmath9 from @xmath140 to @xmath141 that does not pass through any coding point in @xmath9 , except possibly a coding point with tail @xmath140 .    given a multicast network ,",
    "we now construct our desired vertex - labeled directed graph that preserves the essential coding properties of the network .",
    "[ code - graph_lemma ] let @xmath142 be a multicast network and let @xmath143 be its set of coding points .",
    "let @xmath144 be the vertex - labeled directed graph constructed as follows :    * the vertex set of @xmath145 is @xmath146 , i.e. , there is one vertex in @xmath145 for each source and for each coding point of @xmath9 . given a vertex @xmath147 of @xmath145 we call the corresponding source or coding point of @xmath9 the _",
    "@xmath9-object _ of @xmath147 . *",
    "the edge set of @xmath145 is the set of all ordered pairs of vertices of @xmath145 such that there is a coding - direct path in @xmath9 between the corresponding @xmath9-objects . *",
    "each vertex @xmath147 of @xmath145 is labeled with a subset @xmath148 of the set @xmath149 . a receiver @xmath11 is contained in @xmath148 if and only if there is a coding - direct path in @xmath9 from the @xmath9-object of @xmath147 to @xmath12 .",
    "the following properties hold :    1 .",
    "@xmath145 is an acyclic graph .",
    "the in - degree of every vertex in @xmath145 is either @xmath5 or at least @xmath150 .",
    "moreover , the @xmath9-object of a vertex @xmath147 of @xmath145 is a source in @xmath9 if and only if the in - degree of @xmath147 is @xmath5 .",
    "3 .   for each @xmath11",
    "it holds that * the cardinality of the set @xmath151 of vertices in @xmath145 for which @xmath152 is @xmath153 , and * the set @xmath154 , where @xmath155 is a path in @xmath145 from @xmath34 to @xmath156 corresponding to the path @xmath33 in @xmath9 from @xmath34 to @xmath12 , consists of @xmath153 vertex - disjoint paths .       1 .",
    "suppose the vertices @xmath157 form a cycle in @xmath145 .",
    "then the coding - direct paths in @xmath9 joining the corresponding @xmath9-objects form a cycle in @xmath9 , which is impossible since @xmath9 is acyclic .",
    "2 .   let @xmath147 be a vertex of @xmath145 .",
    "the @xmath9-object of @xmath147 in @xmath9 is either a source or a coding point of @xmath9 .",
    "if it is a source @xmath158 , then the in - degree of @xmath34 in @xmath9 is 0 .",
    "thus @xmath34 can not be the end of a coding - direct path in @xmath9 , and so @xmath147 can not be the head of an edge in @xmath145 .",
    "thus the in - degree of @xmath147 is 0 .",
    "+ on the other hand , if the @xmath9-object of @xmath147 is a coding point @xmath159 , then there are distinct sources @xmath160 and distinct receivers @xmath161 such that @xmath162 appears in both paths @xmath163 and @xmath164 in @xmath9 .",
    "if @xmath162 is the first coding point appearing in the path @xmath163 , then there is a coding - direct path in @xmath9 from @xmath34 to the tail of @xmath162 .",
    "hence there is an edge in @xmath145 from @xmath34 to @xmath147 .",
    "otherwise , there is some other coding point along the path @xmath33 such that there is a coding - direct path in @xmath9 from that coding point to @xmath147 , and so there is an edge in @xmath145 from that coding point to @xmath147 . in either case , there is an incoming edge to @xmath147 from the path @xmath33 , and the same holds for the path @xmath165 .",
    "thus the in - degree of @xmath147 is at least 2 , as desired .",
    "3 .   fix @xmath11 and",
    "let @xmath158 . if @xmath33 is a coding - direct path , then @xmath166",
    "otherwise , let @xmath167 , ",
    ", @xmath168 be the coding points in @xmath33 in order of appearance .",
    "this implies @xmath169 .",
    "the set @xmath170 is the set of vertices of @xmath145 whose @xmath9-objects have a coding - direct path to @xmath12 .",
    "+ if @xmath33 is a coding - direct path , then @xmath155 is the empty path consisting of the single vertex @xmath34 in @xmath145 .",
    "otherwise , there is a path @xmath155 in @xmath145 from @xmath34 to @xmath168 since in @xmath9 there is a coding - direct path from the @xmath9-object of @xmath34 to the @xmath9-object of @xmath167 and from the @xmath9-object of @xmath171 to the one of @xmath172 for @xmath173 .",
    "let @xmath174 be the collection of these paths .",
    "+ since the paths in @xmath50 are edge - disjoint , no coding point can appear in more than one path @xmath33 .",
    "thus the corresponding paths in @xmath174 are vertex - disjoint . as a consequence @xmath175 .",
    "let @xmath142 be a multicast network .",
    "the graph @xmath144 constructed in lemma  [ code - graph_lemma ] is called the _ code graph _ of @xmath9 . to refer to a code graph and its associated data succinctly",
    ", we often say that @xmath176 is the code graph of @xmath9 .",
    "figure [ 5a ] shows the butterfly network ; its code graph is shown in figure [ 5b ] .",
    "note that the code graph has three vertices since the butterfly network has two sources @xmath22 and @xmath23 , and one coding point , which we call @xmath162 .",
    "there is an edge between the vertex corresponding to @xmath22 and the vertex corresponding to @xmath162 since there is a coding - direct path in the butterfly network between @xmath22 and @xmath162 .",
    "there is a similar edge coming from the vertex corresponding to @xmath23 .",
    "finally , the vertex corresponding to @xmath22 is labeled with the receiver @xmath45 since there is a coding - direct path in the butterfly network from @xmath22 to @xmath45 .",
    "the vertices corresponding to @xmath23 and to @xmath162 are labeled similarly .",
    "figure [ 5c ] shows the multicast network of figure [ f : coding_pt_network ] ( recall that there are edges of the network not shown in this figure ) , where @xmath130 , @xmath131 and @xmath132 are as shown in figures [ f : coding_pt_network_paths_a ] , [ f : coding_pt_network_paths_b ] , and [ f : coding_pt_network_paths_c ] .",
    "its code graph is shown in figure [ 5d ] .",
    ".45 [ 5a ]    .45 [ 5b ]    .45 [ 5c ]    .45 [ 5d ]    the following proposition characterizes the directed acyclic graphs that occur as the code graph of a multicast network .",
    "[ code - graph_is_network_proposition ] let @xmath177 be a vertex - labeled , directed acyclic graph where each vertex @xmath147 is labeled with a finite set @xmath148 .",
    "let @xmath178 , @xmath179 , and @xmath149 the union of the sets @xmath148 .",
    "suppose    * @xmath20 and @xmath149 are non - empty ; * the in - degree of every vertex in @xmath143 is at least 2 ; * each @xmath11 appears as a label of exactly @xmath153 distinct vertices ; and * for each @xmath11 , there is a set @xmath180 of vertex - disjoint paths such that @xmath155 starts at @xmath34 and ends at a vertex labeled with @xmath12 , and every vertex and every edge of @xmath145 is contained @xmath155 for at least one pair @xmath181 .",
    "then @xmath145 is the code graph for a reduced multicast network whose sources , coding points , and receivers are in one - to - one correspondence with the elements of @xmath20 , @xmath143 , and @xmath149 , respectively .",
    "construct a directed graph @xmath9 as follows :    * create one vertex of @xmath9 for every @xmath158 and for every @xmath182 , and create two vertices in @xmath9 , @xmath183 and @xmath184 , for every @xmath185 .",
    "in other words , writing @xmath186 and @xmath187 , the vertex set of @xmath9 is @xmath188 . *",
    "the edge set @xmath3 of @xmath9 consists of five types of edges : 1 .   for each @xmath189 ,",
    "create an edge in @xmath9 from @xmath183 to @xmath184 .",
    "2 .   for each edge in @xmath145 from @xmath158 to @xmath189 , create an edge in @xmath9 from @xmath34 to @xmath183 .",
    "3 .   for each edge in @xmath145 from @xmath190 to @xmath191 , create an edge in @xmath9 from @xmath192 to @xmath193 .",
    "4 .   let @xmath11 and @xmath158 . if @xmath166 , create an edge in @xmath9 from @xmath34 to @xmath12 .",
    "let @xmath11 and @xmath189 .",
    "if @xmath194 , create an edge in @xmath9 from @xmath184 to @xmath12 .",
    "then for each @xmath11 , the set @xmath174 of vertex - disjoint paths in @xmath145 induces a set @xmath50 of edge - disjoint paths in @xmath9 from the elements of @xmath20 to @xmath12 , and @xmath195 is a multicast network .",
    "moreover , the code graph of @xmath9 is @xmath145 .",
    "we must show :    1 .",
    "@xmath20 is precisely the set of vertices of @xmath9 of in - degree 0 ; 2 .",
    "@xmath149 is precisely the set of vertices of @xmath9 of out - degree 0 ; 3 .",
    "@xmath9 is a directed acyclic graph ; 4 .   for each @xmath11",
    ", @xmath174 induces a set of edge - disjoint paths @xmath196 , where @xmath163 is a path in @xmath9 from @xmath34 to @xmath12 ; and 5 .",
    "the code graph of @xmath195 is @xmath145 .",
    "we do each of these in turn .    1 .   by construction , every @xmath158 has in - degree 0 in @xmath9 , and every @xmath11 and every @xmath197 has strictly positive in - degree in @xmath9 .",
    "let @xmath198 come from the vertex @xmath162 of @xmath145 . if @xmath183 has in - degree 0 , then @xmath162 has in - degree 0 , and so @xmath199 , a contradiction .",
    "thus , @xmath20 is precisely the set of vertices of @xmath9 of in - degree 0 . 2 .   by construction ,",
    "every @xmath11 has out - degree 0 in @xmath9 . for every @xmath158",
    ", there is a path in @xmath145 from @xmath34 to some vertex of @xmath145 labeled with @xmath12 for each @xmath182 ; in particular this means that the out - degree of @xmath34 in @xmath9 can not be 0 . by construction ,",
    "no @xmath200 can have out - degree 0 in @xmath9 .",
    "let @xmath201 come from the vertex @xmath162 of @xmath145 .",
    "since every vertex and every edge of @xmath145 is contained @xmath155 for at least one pair @xmath181 , there exist some @xmath11 such that either there is an edge in @xmath145 from @xmath162 to some @xmath202 or @xmath162 is labeled in @xmath145 with @xmath12 . in either case , the out - degree of @xmath184 in @xmath9 is strictly positive .",
    "hence , @xmath149 is precisely the set of vertices of @xmath9 of out - degree 0 .",
    ".   suppose there is a cycle in @xmath9 .",
    "since every @xmath203 has in - degree 0 in @xmath9 and every @xmath11 has out - degree 0 in @xmath9 , this cycle can include only vertices in @xmath204 and hence only edges of types ( a ) and ( c ) .",
    "this means that , writing the cycle in terms of its vertices , it must have the form @xmath205 this yields a cycle @xmath206 in @xmath145 , contradicting the fact that @xmath145 is acyclic .",
    "4 .   let @xmath11 and let @xmath180 be the set of vertex - disjoint paths in @xmath145 from the sources to @xmath12 .",
    "since every vertex in @xmath20 has in - degree 0 and every vertex in @xmath149 has out - degree 0 , for each @xmath158 there are vertices @xmath207 such that @xmath208 and that path @xmath155 in @xmath145 consists of the following vertices in order : @xmath209 this gives the path @xmath33 in @xmath9 consisting of @xmath210 since for @xmath211 the paths @xmath155 and @xmath212 in @xmath145 are vertex - disjoint , we have that @xmath33 and @xmath165 are edge - disjoint paths in @xmath9 .",
    "thus @xmath213 is the set of edge - disjoint paths in @xmath9 we seek .",
    "it is clear from lemma  [ code - graph_lemma ] that @xmath145 is the code graph of @xmath9 .",
    "note that the proof of proposition [ code - graph_is_network_proposition ] provides a method to construct a multicast network with a given code graph .",
    "we begin this section by recalling the goal of linear network coding on a multicast network .",
    "we have a set @xmath20 of sources that transmit their messages along the edges of a network to a set @xmath149 of receivers .",
    "certain edges , those corresponding to coding points , can be used by multiple paths between sources and receivers .",
    "these edges combine inputs in such a way that the output can be decoded .",
    "messages sent by sources are represented by elements of @xmath214 .",
    "when incoming messages combine along a coding edge the output is a linear combination of these input vectors .",
    "each receiver must obtain the message sent by each source , which motivates linear independence constraints on these vectors .",
    "let @xmath9 be a multicast network with source set @xmath20 and receiver set @xmath149 , and let @xmath215 be its corresponding code graph .",
    "each @xmath216 is labeled with a subset @xmath217 .",
    "let @xmath170 denote the set of @xmath218 such that @xmath152 .",
    "* the vectors assigned to the source nodes of the code graph are linearly independent . * for each @xmath11 the vectors assigned to the vertices of @xmath170 are linearly independent . * the vector assigned to a coding point @xmath221 is in the span of the vectors assigned to the tails of the directed edges terminating at @xmath162 .",
    "let @xmath9 be a multicast network and let @xmath145 be its corresponding code graph .",
    "the capacity of @xmath9 is achievable over @xmath8 if and only if there exists an @xmath8-vector labeling of @xmath145 .",
    "the first question has been studied extensively in the literature ; see for example @xcite .",
    "previous work on this problem has taken the approach of labeling the messages for the source nodes of the multicast network directly .",
    "when messages pass through a common edge of the network , the edge is assigned a transfer matrix , which takes a linear combination of the incoming vectors . the condition that each receiver obtains the message from each source corresponds to the transfer matrices being invertible .",
    "see @xcite for a characterization of when the capacity of a multicast network is achievable over @xmath8 in terms of linear combinations of determinants of these matrices .",
    "the definition of @xmath8-vector labeling allows us to bypass transfer matrices and work directly with linear dependence and independence conditions of a single matrix .",
    "[ butterfly_label ] consider the butterfly network and its code graph @xmath145 , which are given in figure [ butterflynetworkwithcodegraph ] .",
    "there are two source nodes @xmath22 and @xmath23 , and one coding node @xmath162 .",
    "we label each of these three vertices with a vector in @xmath226 .",
    "call these @xmath227 , and @xmath228",
    ". then @xmath229 and @xmath230 must be linearly independent , and @xmath231 .",
    "since @xmath22 and @xmath162 share the receiver label @xmath45 , we have that @xmath229 and @xmath228 are linearly independent . similarly , @xmath23 and",
    "@xmath162 share the receiver label @xmath47 , so @xmath230 and @xmath228 are linearly independent .",
    "we see that for a fixed @xmath0 , the set of @xmath8-vector labelings of @xmath145 are in bijection with those elements of @xmath232 satisfying that each of the three @xmath233 minors are nonzero .",
    "this condition is equivalent to saying that no two columns are scalar multiples of each other .",
    "there are precisely @xmath234 ways to choose such a matrix . for @xmath235",
    "these six ways correspond to the six ways to permute the columns of the matrix @xmath236 .",
    "we see that @xmath242 .",
    "two nonzero columns of a @xmath243 matrix are linearly dependent if and only if they define the same point in @xmath244 .",
    "so , in example [ butterfly_label ] we need only count the number of ways to pick three distinct points in @xmath244 , and then multiply by @xmath245 to account for possible scalings of each column .",
    "[ vector_label_ex2 ] let @xmath145 be the code graph from figure [ 5d ] .",
    "there are @xmath246 vertices of @xmath145 , four of which correspond to sources .",
    "number these vertices so that # 1 - 4 are the nodes in the top row , in order ; # 5 - 7 are the nodes in the middle row , in order ; and # 8 is the bottom - most node .",
    "an @xmath8-vector labeling gives an element of @xmath247 with columns @xmath248 satisfying the following conditions :    1 .",
    "the labels of the source nodes are linearly independent , and the labels of every set of nodes labeled with a common receiver are linearly independent .",
    "therefore , the submatrices with the following sets of columns are invertible : @xmath249 2 .",
    "the label of every vertex is in the span of the labels of the vertices that are tails of those directed edges terminating at that vertex , which implies : @xmath250    without loss of generality , we may label the source nodes so that the matrix with columns @xmath251 is the identity matrix .",
    "this leads to a @xmath252 matrix of the form @xmath253 subject to the additional constraint that @xmath254 , and that each of the matrices @xmath255 is invertible .",
    "this implies @xmath256 the condition that @xmath257 can be written as @xmath258 for some @xmath259 .",
    "we now simplify these algebraic conditions .",
    "since @xmath260 , we see that @xmath261 and @xmath262 . if @xmath263 , then @xmath264 , contradicting the condition that @xmath265 .",
    "therefore , @xmath266 .",
    "we conclude that @xmath267 we now have @xmath268 from which we conclude @xmath269 .",
    "we also have @xmath270 from which we conclude that @xmath271 .",
    "therefore , @xmath8-vector labelings of @xmath145 where the source nodes are labeled with the standard basis vectors are in bijection with the set of nonzero choices for @xmath272 , which implies that there are @xmath273 such labelings . in particular , there exist such labelings over every finite field @xmath8 , and the unique labeling over @xmath274 is given by the matrix @xmath275    example [ vector_label_ex2 ] shows that even for relatively small code graphs the computations necessary to understand the set of @xmath8-vector labelings can become intricate . however , it is straightforward to find the set of @xmath8-labelings for every particular @xmath0 using a computer algebra system .",
    "[ fq_poly_thm ] let @xmath145 be a code graph with @xmath153 nodes corresponding to sources and @xmath276 nodes corresponding to coding points .",
    "the set of @xmath8-vector labelings of @xmath145 is in bijection with an open subset of a closed affine algebraic subset of @xmath277 .",
    "[ lem1 ] fix @xmath278 with @xmath279 . for every @xmath280 , write @xmath281 for the set of columns of @xmath282 indexed by the coordinates of @xmath283 .",
    "then @xmath284 is the complement of a hypersurface in @xmath285 .",
    "note that @xmath224 is identified with the affine space @xmath285 .",
    "the determinant of the @xmath286 submatrix with columns given by @xmath281 is a polynomial of degree @xmath287 in the matrix entries .",
    "setting this polynomial equal to zero gives a hypersurface in @xmath285 .",
    "[ lem2 ] let @xmath288 with @xmath289 and fix @xmath290 with @xmath291 .",
    "for every @xmath280 , write @xmath292 for the set of columns of @xmath282 indexed by the coordinates of @xmath293 and let @xmath294 denote the @xmath295^th^ column of @xmath282",
    ". then @xmath296 is an open subset of a closed subvariety of @xmath285 .",
    "that is , there are two collections of polynomials @xmath297 and @xmath298 in the @xmath299 entries of the vectors @xmath300 such that @xmath301 if and only if each @xmath302 simultaneously vanishes and none of the @xmath303 vanish .      if the matrix with columns @xmath292 has rank @xmath306 , then @xmath307 if and only if the matrix with columns @xmath308 also has rank @xmath306 .",
    "this condition holds if and only if each of the @xmath309 minors of this @xmath310 matrix simultaneously vanishes .",
    "the set of @xmath310 matrices of rank @xmath306 is an open subset of the closed subvariety of @xmath310 matrices of rank at most @xmath306 .",
    "suppose @xmath145 is a code graph with @xmath153 nodes corresponding to sources and @xmath276 nodes corresponding to coding points .",
    "an @xmath8-vector labeling of @xmath145 gives an element @xmath311 such that a finite collection of subsets of @xmath153 columns are linearly independent , and there are finitely many collections of subsets of columns @xmath308 such that @xmath312 . combining lemmas [ lem1 ] and [ lem2 ] completes the proof .",
    "suppose @xmath145 is a code graph with @xmath153 vertices corresponding to sources and @xmath276 vertices corresponding to coding points .",
    "let @xmath311 be the matrix corresponding to an @xmath8-vector labeling of @xmath145 .",
    "scaling every column of @xmath282 gives another @xmath8-vector labeling , so in order to completely understand the set of @xmath8-labelings we need only understand this set up to scalings of columns .",
    "let @xmath313 be the subspace spanned by the rows of @xmath282 .",
    "choosing a different basis for this subspace gives another @xmath8-labeling of @xmath145 .",
    "this motivates studying @xmath8-labelings in terms of subsets of a grassmannian .",
    "let @xmath147 be a vector space over a field .",
    "for positive integers @xmath314 , let @xmath315 be the set of @xmath89-dimensional linear subspaces of @xmath147 .",
    "this set has the structure of an algebraic variety and is called the _",
    "grassmannian_.      let @xmath315 be the grassmannian of @xmath89-dimensional subspaces of @xmath17 .",
    "let @xmath316 be the vector whose @xmath317^th^ coordinate is @xmath83 , and the other coordinates are zero .",
    "for @xmath318 let @xmath319 .",
    "let @xmath320 be a function from the subsets of @xmath321 to @xmath322 .",
    "an @xmath8-vector labeling of @xmath145 gives an element of @xmath311 . since the columns corresponding to the source nodes are linearly independent , the row span of @xmath282 is @xmath153-dimensional , and @xmath282 gives an element of @xmath327 .",
    "[ strata_prop ] let @xmath145 be a code graph with @xmath153 nodes corresponding to sources and @xmath276 nodes corresponding to coding points .",
    "the @xmath8-vector labelings of @xmath145 are in bijection , up to a choice of basis , with the @xmath8-points of @xmath328 for some union of functions @xmath320 from the subsets of @xmath329 to @xmath322 determined by @xmath145 .",
    "let @xmath311 be the matrix corresponding to an @xmath8-labeling of @xmath145 .",
    "let @xmath330 denote the @xmath317^th^ column of @xmath282 .",
    "let @xmath313 be the subspace generated by the rows of @xmath282 .      1 .",
    "subsets @xmath278 with @xmath279 such that the set of columns @xmath281 indexed by the coordinates of @xmath283 gives an invertible @xmath331 matrix .",
    "subsets @xmath288 with @xmath289 and @xmath290 with @xmath291 such that @xmath312 , where @xmath292 denotes the set of columns of @xmath282 indexed by the coordinates of @xmath293      once @xmath336 is large , analyzing how the number of @xmath8-points of @xmath323 varies as a function of @xmath0 becomes intricate .",
    "let @xmath337 be a prime",
    ". given @xmath338 and any closed projective algebraic set over @xmath339 , a version of mnv s universality theorem says that there exists @xmath336 and @xmath320 such that @xmath340 is isomorphic to the zariski closure of @xmath323 under the action of the diagonal matrices @xcite .",
    "this implies that for large values of @xmath89 and @xmath336 the function counting @xmath8-points of @xmath323 can become difficult to understand . in examples [ butterfly_label ] and [ vector_label_ex2 ] we saw code graphs for which the number of @xmath8-labelings was given by a polynomial in @xmath0 .",
    "we give one more example to show that this does not always occur and that the number of @xmath8-vector labelings of @xmath145 does not have to increase monotonically with @xmath0 .",
    "note that the multicast network in the example is not reduced and the presented code graph does not have the minimal number of coding points .",
    "nonetheless , this example demonstrates interesting algebraic properties and has already occurred in the network coding literature .",
    "we consider a particular example of a class of networks called _ combination networks_. these networks are described in general in @xcite , and we consider the example for @xmath341 .",
    "this is a multicast network with @xmath342 sources , @xmath343 coding points , and @xmath344 receivers .",
    "this leads to the code graph @xmath145 of figure [ f : combination_codegraph ] where the source nodes are labeled with the empty set and each coding node @xmath345 is labeled with a set @xmath346 of @xmath347 receivers such that :      choosing the standard basis vectors for the labels of the three source nodes , and scaling each column so that its first nonzero entry is equal to @xmath83 , leads to an element of @xmath350 of the form @xmath351 subject to the constraints that each @xmath352 and @xmath353 @xmath354    the @xmath8-vector labelings of @xmath145 are therefore in bijection with the complement of a ( reducible ) hypersurface in a @xmath343-dimensional affine space over @xmath8 . using a computer algebra system such as sage or magma , one can compute the number of @xmath8-vector labelings over small finite fields .",
    "if there were a polynomial formula for the number of such labelings it would have degree at most @xmath343 . computing the number of @xmath8-vector labelings for each @xmath355 shows that no such polynomial formula exists .",
    "[ [ an - open - question - on - mathbb - f_q - vector - labelings - of - code - graphs ] ] an open question on @xmath8-vector labelings of code graphs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    let @xmath9 be a multicast network with @xmath24 receivers and code graph @xmath145 . in the introduction we mentioned the result of ho _ et al .",
    "_ , which implies that the capacity of @xmath9 is achievable over all finite fields @xmath8 with @xmath356 @xcite .",
    "the proof of this theorem shows that there is an @xmath8-vector labeling of @xmath145 for all @xmath357 .",
    "in particular , this means that for every multicast network and every prime @xmath337 there exists a valid @xmath358-vector labeling for all sufficiently large @xmath89 .",
    "consider a finite collection @xmath359 of @xmath287-element subsets of @xmath321 and a finite collection @xmath360 of pairs @xmath361 such that @xmath293 is a subset of @xmath321 not including @xmath89 .",
    "proposition [ strata_prop ] shows that the set of matrices @xmath280 , up to a choice of basis , such that each element of @xmath359 gives a linearly independent set of columns , and each subset @xmath360 gives a set of columns where @xmath362 is in the span of the columns corresponding to @xmath293 , leads in a natural way to finite unions of sets of the form @xmath363 .",
    "we argue that not every union of sets of the form @xmath323 can arise from a multicast network .",
    "we describe a finite collection of algebraic conditions on the columns of a @xmath364 matrix such that the number of matrices @xmath365 satisfying these conditions is zero for all odd @xmath0 , but is nonzero for all even @xmath0 .",
    "these conditions come from the _ fano plane _ , a special configuration of @xmath366 points and @xmath366 lines , with each line containing exactly @xmath342 of the points .",
    "figure [ fano ] represents this incidence structure of the points and lines of the fano plane . the circle connecting points @xmath367 counts as a line .",
    "let @xmath365 have columns @xmath368 .",
    "we consider the set of @xmath282 such that the following conditions hold : @xmath369 and all other collections of @xmath342 vectors @xmath370 not occuring in this list are linearly independent ; in other words , the linear dependencies are determined by the lines of the fano plane .",
    "choosing an appropriate basis for the @xmath342-dimensional subspace of @xmath371 spanned by the rows of @xmath282 we may assume that @xmath372 since @xmath373 , multiplying by an appropriate scalar we may further assume that @xmath374 . similarly , we may assume that @xmath375 and @xmath376 .",
    "the condition that @xmath377 implies that , in @xmath8 , @xmath378 such a matrix can only arise in characteristic @xmath150 , a result that is discussed in detail in the projective geometry literature ; see , e.g. , @xcite . since the matrix problem specified by the fano plane does not have solutions over all sufficiently large finite fields @xmath8 , it can not ` come from ' the @xmath8-vector labelings of a code graph .",
    "linear codes , strata of grassmannians , and the problems of segre . in _",
    "coding theory and algebraic geometry ( luminy , 1991 ) _ , volume 1518 of _ lecture notes in math .",
    "_ , pages 210223 .",
    "springer , berlin , 1992 ."
  ],
  "abstract_text": [
    "<S> we approach the problem of linear network coding for multicast networks from different perspectives . </S>",
    "<S> we introduce the notion of the coding points of a network , which are edges of the network where messages combine and coding occurs . </S>",
    "<S> we give an integer linear program that leads to choices of paths through the network that minimize the number of coding points . </S>",
    "<S> we introduce the code graph of a network , a simplified directed graph that maintains the information essential to understanding the coding properties of the network . </S>",
    "<S> one of the main problems in network coding is to understand when the capacity of a multicast network is achieved with linear network coding over a finite field of size @xmath0 . </S>",
    "<S> we explain how this problem can be interpreted in terms of rational points on certain algebraic varieties . </S>"
  ]
}
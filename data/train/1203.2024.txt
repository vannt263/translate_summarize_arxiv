{
  "article_text": [
    "the link scheduling problem for wireless networks has received considerable attention in the recent past . in a wireless network with shared spectrum , interference from neighboring nodes prevents all nodes in the network from transmitting simultaneously at full interference free rate .",
    "a link scheduler chooses a set of links to deactivate at every time instant to eliminate their interference on other links and only active links transmit data .",
    "an important performance objective of a scheduler is throughput optimality , _",
    "i.e. , _ for any given network , the scheduler should keep all the queues in the network stable for the largest set of arrival rates that are stabilizable for that network .    for wireless networks",
    "in which a set of link activation vectors are defined according to a general binary interference model , the maxweight policy or the dynamic back - pressure policy is known to be throughput optimal @xcite .",
    "maxweight type policies have also been shown to be throughput optimal for wireless networks with fading channels , where the link rates vary over time @xcite",
    ". however , the maxweight policy suffers from high computational complexity ( np - hard in many cases , including @xmath0-hop interference models , k@xmath11 ) @xcite , and has therefore motivated the study of schedulers that have low complexity , are amenable to distributed implementation and also offer provable performance guarantees .",
    "examples of such schedulers include greedy maximal scheduling ( gms)@xcite and maximal scheduling@xcite , which have been widely studied for wireless networks with static channels .",
    "there has been a number of studies that analyze the performance of gms as a function of the network topology .",
    "the main parameter of focus has been efficiency , which is defined as the largest fraction of the network capacity region guaranteed to be stable under gms . in @xcite , efficiency has been evaluated as a function of the local pooling factor of a network graph ( lpf ) , which depends on the network topology and interference constraints . later , using the lpf , gms has been shown to be throughput optimal for a wide class of network graphs under the node exclusive interference model @xcite .",
    "the performance analysis of the aforementioned low complexity schedulers does not however , carry over to the scenario with fading , in which link rates are time - varying .",
    "for instance , unlike a static network , one can not conclude in a network with time - varying links that satisfying local pooling under gms implies throughput optimality .",
    "it is only known that in the case of the node - exclusive interference model , gms can achieve at least half the network stability region .",
    "thus , it is of interest to investigate if for networks with time varying link rates , gms performs as well as it does in networks with fixed link rates .",
    "@xcite .    in this paper",
    ", we develop a greedy link scheduler , gfs , for wireless networks with fading channels , which , although not throughput optimal , has low computational complexity and offers provably good performance guarantees .",
    "we show that the performance of our greedy scheduler can be related to the lpf of a network graph .",
    "we then conjecture that the performance of gfs is a lower bound on the performance of gms for wireless networks with time - varying link rates .",
    "and @xmath2 , occurring with probability @xmath3 and @xmath4 .",
    "the network stability region region , @xmath5 is the interior of the region enclosed by the solid lines . ]",
    "we consider a wireless network modeled as a graph @xmath6 with edges representing links .",
    "we assume a single hop traffic model where each edge represents a source - destination pair .",
    "time is divided into slots and packets arrive at the source node following an i.i.d .",
    "process with a finite mean at the start of each time slot .",
    "let @xmath7 denote the number of packets arriving during time slot @xmath8 .",
    "@xmath7 has a mean @xmath9 .",
    "the vector of channel states across all links in the network is assumed to be fixed over the duration of a time slot but changing after every time slot .",
    "the set of channels in the network can assume a state @xmath10 according to stationary probability @xmath11 .",
    "in each time slot @xmath8 , the achievable rate of link @xmath12 , denoted by @xmath13 , assumes value @xmath14 if the network is in fading state @xmath15 at time slot @xmath8 . the expected rate of a link , denoted by @xmath16 is given by @xmath17 .",
    "we assume a generalized binary interference model , in which each link @xmath18 is associated with an interference set , denoted by @xmath19 .",
    "set @xmath20 consists of the set of links that can not be active whenever link @xmath18 is active .",
    "let @xmath21 denote a @xmath22 rate allocation vector for a network that is in channel state @xmath15 , where @xmath23 is the rate allocated to link @xmath24 .",
    "any rate allocation vector @xmath21 must satisfy the following properties :    * @xmath25 implies @xmath26 , for all @xmath27 , where @xmath28 * there exists no link @xmath29 such that @xmath30 and @xmath31 for all @xmath18 satisfying @xmath25 . in other words",
    "there exists no link that does not interfere with any other active link and is yet not scheduled .",
    "let @xmath32 denote the set of all feasible rate allocation vectors for a wireless network graph when the network is in channel state @xmath15 .",
    "similarly , @xmath33 is the set of all feasible rate allocation vectors on the subgraph @xmath34 .",
    "the stability region of the network  @xcite@xcite is then given by the interior of the set @xmath35 , where @xmath36 , with @xmath37 representing the convex hull of the set @xmath32 , and @xmath38 denoting component - wise inequality .",
    "[ fig : capacity - region ] shows an example of a simple two link network with two fading states , with the associated network stability region under a node - exclusive interference model . figs .",
    "[ fig : capacity - region](a ) and figs .",
    "[ fig : capacity - region](b ) illustrate the achievable rate regions in state @xmath39 and @xmath2 respectively .",
    "the network stability region @xmath5 is shown in fig .",
    "[ fig : capacity - region](c ) .    in related work , @xcite considered a queueing model analogous to a cellular network with @xmath40 links , where the network channel state followed an irreducible discrete time markov chain with a finite state space .",
    "it was shown that the policy which selects the queue with the highest weight .",
    "@xmath41 in each time slot , where @xmath42 is the queue size for link @xmath18 was throughput optimal for this network . in @xcite",
    ", it was shown that a maxweight - type scheduling policy was throughput optimal for power allocation in wireless networks with time varying channels .",
    "similarly , @xcite also showed throughput optimality of a class of maxweight type policies for wireless networks with fading channels .",
    "before we describe our greedy scheduler , we discuss the performance of non - opportunistic schedulers in the following section .",
    "in particular , we focus on a scheduler that utilizes only the mean link rates , instead of instantaneous link rates . for this scheduler , we illustrate that when arrivals are correlated with channel states , the non - opportunistic policy can potentially keep serving links that are experiencing poor channel states , leading to a loss in throughput .      we show that a scheduler that utilizes the mean link rates , instead of instantaneous link rates could perform arbitrarily worse in certain cases .",
    "to illustrate this , we consider the two link network graph shown in fig .",
    "[ fig : capacity - region ] . in this example , each link @xmath18 has one queue @xmath43 , into which packets arrive according to an iid process .",
    "suppose that the rates of the two links in each of the channel states are given by @xmath44 , and @xmath45 respectively .",
    "also , let @xmath3 be the probability with which the network assumes channel state 1 , and @xmath4 be the probability for network channel state 2 .",
    "in each time slot , the greedy non - opportunistic scheduler that we consider serves the queue which maximizes the quantity @xmath46 .",
    "we will now construct an arrival traffic for this network under which the queues for both links grow unbounded under the non - opportunistic scheduling scheme .",
    "let the initial queue lengths be @xmath47 . at the beginning of each time slot , packets arrive according to the following statistics :    * if the network channel state is 1 , then with probability @xmath48 , for an arbitrary @xmath49 , @xmath50 packets arrive into the queue @xmath51 , and none into @xmath52 ; with probability @xmath53 , @xmath54 packets arrive into the queue of link 1 , and @xmath55 packets arrive into the queue of link 2 respectively .",
    "@xmath56 is a fixed positive quantity . *",
    "if the network channel state is 2 , then with probability @xmath48 , @xmath50 packets arrive into the queue @xmath52 , and none into @xmath57 ; with probability @xmath53 , @xmath58 packets arrive into the queue of link 1 , and @xmath59 packets arrive into the queue of link 2 respectively .    under this arrival statistic ,",
    "we show that the end of each time slot , the length of each queue either remains unchanged or increases by a fixed quantity @xmath60 . at the beginning of the first time slot ,",
    "all queues are assumed to be empty .",
    "the non - opportunistic scheduler then serves the queue with the highest weight , _",
    "i.e. , _ the queue into which @xmath50 or @xmath61 packets have arrived . at the end of each time slot ,",
    "the queue lengths remain unchanged with probability @xmath48 , or increase by a fixed quantity @xmath60 with probability @xmath53",
    ". moreover , the queue lengths are also equal at the end of each time slot and of the form @xmath62 , where @xmath0 is a nonnegative integer .",
    "since the queue length process is non - decreasing , and the event that the queue length increases by a fixed positive quantity occurs infinitely often , the network is unstable under the greedy non - opportunistic scheduler .",
    "the arrival rate vector of our proposed arrival traffic is determined as @xmath63   +   \\pi^1\\delta[{\\scriptstyle c/\\bar{c_1}}\\qquad { \\scriptstyle c/\\bar{c_{2 } } } ]   + \\pi^2(1-\\delta)[0\\qquad\\epsilon ]   + \\pi^2\\delta[{\\scriptstyle c/\\bar{c_1 } } \\qquad { \\scriptstyle c/\\bar{c_{2}}}]$ ] , which simplifies to @xmath64 +   \\delta[\\frac{{\\scriptstyle c}(\\pi^1+\\pi^2)}{\\bar{c_1}}-\\epsilon\\pi^1 \\qquad   \\frac{{\\scriptstyle c}(\\pi^1+\\pi^2)}{\\bar{c_2}}-\\epsilon\\pi^2\\right]$ ] .",
    "thus , when @xmath50 is small , the greedy non - opportunistic scheduler is unable to support arrival rates that are within a fraction @xmath50 of the stability region .",
    "note that in the above example , the arrival process is correlated with the network channel state process .",
    "the greedy scheduler that we propose is similar to gms except that it requires each link to have a virtual queue corresponding to every channel state of the network , _",
    "i.e. , _ each link has a set of @xmath65 virtual queues . in each time slot , packets arriving into a link @xmath18 are placed into one of the @xmath65 queues . in practice , each link could maintain only one real first - in first - out queue , into which packets arrive and depart , and counters for the virtual queues which keep track of the number of packets in the virtual queue .",
    "the gfs scheduler would use the values of the counters to make the scheduling decision . using such counters ,",
    "also known as shadow queues have been effective in reducing queueing complexity and delay @xcite .",
    "let @xmath66 be the virtual queue of link @xmath18 corresponding to fading state @xmath15 and @xmath67 denote its size at time @xmath8 .",
    "let @xmath68 denote the real fifo queue of link @xmath18 .",
    "we now describe our greedy scheduler :    * at the beginning of time slot @xmath8 , packet arrivals @xmath69 are placed in queue @xmath66 with probability @xmath70 . * in time slot @xmath8 , let the network be in fading state @xmath15 .",
    "gfs observes only the queues corresponding to fading state @xmath15 , in order to select the rate allocation vector .",
    "the scheduler first selects the link with highest weight @xmath71 removes all links in @xmath72 from the set of potential links to be scheduled at time @xmath8 , and repeats the process until there are no more non - interfering links that remain to be selected .    at the end of this procedure gfs selects a rate allocation vector that belongs to @xmath32 , when the network channel state is @xmath15 .",
    "note that the gfs policy becomes identical to gms in the case of networks with static link rates .",
    "also , the application of the gfs policy on the queues corresponding to fading state @xmath15 , requires the knowledge of the network fading state at every node in the network .",
    "the departure process for the virtual queues can now be described as follows : for any link @xmath18 , @xmath73 packets depart from virtual queue @xmath74 , while @xmath75 packets depart from the real fifo queue @xmath42 .",
    "we now give the main result of this paper , which uses the lpf of a network graph to evaluate the stability region achievable using gfs . before we state our result , we define the following static wireless network : given any wireless network graph @xmath6 with time varying link rates , we associate with @xmath76 a static wireless network @xmath77 , whose link rates are fixed at @xmath78 .",
    "let @xmath79 denote the set of all feasible rate allocation vectors for the network graph @xmath80 .",
    "we also define @xmath81 to be a static network whose link rates are fixed at @xmath82 .",
    "finally , we let @xmath5 and @xmath83 denote the network stability regions of the networks @xmath76 and @xmath84 respectively . note that @xmath85 , since the lpf for the network graph @xmath84 can then be defined as follows @xcite :    [ def : def1]let @xmath86 be any subgraph of @xmath84",
    ". then @xmath86 satisfies @xmath87-local pooling if , for any given pair @xmath88 , where @xmath89 and @xmath90 are convex combinations of the rate vectors in @xmath91 , we have @xmath92 .",
    "+ the lpf @xmath93 , for the network is then defined as : @xmath94    the lpf of a network graph depends only on the topology of the network graph and therefore is identical for @xmath84 and @xmath95 .",
    "[ th1 ] let @xmath93 be the lpf of a network @xmath84 .",
    "then , the network @xmath76 is stable under the gfs policy for all arrival rate vectors @xmath96 satisfying @xmath97 , where @xmath98 is the stability region of the corresponding network graph @xmath99 .",
    "theorem 1 provides performance guarantees for our scheduling policy for any wireless network in terms of the stability region of an associated identical static network whose link rates are fixed at their expected rates .",
    "note that an lpf of 1 implies that the associated greedy policy can guarantee stability for any arrival rate in @xmath98 .",
    "examples of network graphs which have @xmath100 include tree network graphs under the @xmath0-hop interference model for @xmath101 . in @xcite ,",
    "all network graphs with @xmath100 under the node - exclusive interference model are identified .",
    "we prove theorem 1 by first establishing the stability of the virtual queues .",
    "we then provide lemma [ lemma3 ] to establish stability of the real fifo queues as well .",
    "we consider the fluid limit model of the system .",
    "let @xmath102 denote the cumulative arrival process into queue @xmath103 and @xmath104 denote the cumulative service process for @xmath66 until time slot @xmath8 .",
    "for the arrival and service processes , we use @xmath105 , and @xmath106 for the queue process",
    "@xmath67 , we employ linear interpolation .",
    "we now consider a sequence of scaled queuing systems @xmath107 .",
    "where we apply the scaling @xmath108 with the queue process satisfying @xmath109 .",
    "then , using the techniques to establish fluid limit in @xcite , one can show that a fluid limit exists almost surely , _",
    "i.e , _ for almost all sample paths and for any positive @xmath110 , there exists a sub - sequence @xmath111 with @xmath112 such that following convergence holds uniformly over compact sets : for all @xmath113 @xmath114 , @xmath115 , and @xmath116 , where @xmath117 and @xmath104 are the fluid limits for the queue length processes and the service rate processes respectively .",
    "the fluid limit is absolutely continuous and hence the derivative of @xmath118 exists almost everywhere @xcite satisfying : @xmath119^{+ } & \\mathit{q}_{l}^{j}(t)>0\\\\ 0 & \\mbox{otherwise}\\end{cases}}\\label{diffeq } \\ ] ]    where @xmath120 .",
    "consider the times @xmath8 when the derivative @xmath121 exists for all @xmath122 .",
    "let @xmath123 denote the set of queues with the largest weight , _",
    "@xmath124 where @xmath125 is the set of all queues in the network .",
    "let @xmath126 denote the set of queues from @xmath123 , which have the maximum derivative of the weights , _",
    "i.e. , _ @xmath127 the set @xmath126 can then be expressed as @xmath128 , where @xmath129    since @xmath118 is absolutely continuous , there exists a small @xmath49 such that in the interval @xmath130 , the weight of queues in @xmath131 dominates the weight of other queues , whenever the network channel state is @xmath15 .",
    "hence , gfs gives priority to queues belonging to @xmath131 in @xmath130 .",
    "we now provide the following two lemmas to characterize the arrival rates and service rates for the queues in @xmath131 .",
    "let @xmath132 denote the set of links whose queues are in @xmath131 .",
    "thus @xmath133 denotes the set of all feasible rate allocation vectors for the subgraph @xmath134 .",
    "let @xmath135 be the @xmath136 dimensional arrival rate vector whose each element @xmath137 represents the arrival rate into queue @xmath138 .",
    "for any @xmath136 vector @xmath139 , the projection of @xmath139 on a subset of edges @xmath140 , denoted by @xmath141 , is defined as the @xmath142 dimensional vector obtained by restricting @xmath139 to the edges in @xmath140 .",
    "[ lemma1 ] consider any fading state @xmath143 such that @xmath144 .",
    "if the arrival rate vector @xmath145 , then @xmath135 , the arrival rate into the queues @xmath146 , when projected on to the set of links @xmath147 can be expressed as @xmath148 where @xmath89 is a convex combination of the rate allocation vectors in @xmath149    since @xmath145 , it satisfies @xmath150 , for some @xmath151 , where @xmath152 , and @xmath153 .",
    "one can then write the arrival rate into a link @xmath18 as @xmath154 where @xmath155 is the indicator function .",
    "the arrival rate into queue @xmath66 is then given by @xmath156 which yields @xmath157 , for all @xmath158 we can then write the arrival rate vector @xmath135 in terms of rate allocation vectors in @xmath159 as @xmath160 since if @xmath161 , or @xmath162 .",
    "it follows that @xmath163 , where @xmath89 is a convex combination of the rate allocation vectors in @xmath149    [ lemma2 ] consider any fading state @xmath143 such that @xmath144 .",
    "then the service rate vector @xmath164 , projected onto the links in @xmath147 , can be expressed as @xmath165 where @xmath90 is a convex combination of the rate allocation vectors in @xmath149    the full proof is similar to that in @xcite and @xcite and is omitted here .",
    "consider all queues belonging to @xmath131 .",
    "since the queues in @xmath131 have the highest weight in @xmath130 when the network is in state @xmath15 , the gfs scheduler gives priority queues in @xmath131 whenever the network channel state enters state @xmath15 in the time interval @xmath130 .",
    "consequently , the rate allocation vectors selected by gfs in network channel state @xmath15 , when projected on the set of links @xmath134 yields an element from the set @xmath166 .",
    "therefore , under the gfs policy , the service rate vector @xmath164 for the set of queues @xmath167 , projected onto @xmath168 is a convex combination of the elements of @xmath133 . from the ergodicity of the network channel state process",
    ", gfs serves elements in @xmath166 a fraction @xmath11 of the time .",
    "it follows that @xmath169 .",
    "from lemma [ lemma1 ] and lemma [ lemma2 ] , the arrival rate @xmath170 as well as the service rate @xmath171 can be expressed in terms of the convex combinations of elements in @xmath166 . since @xmath84 satifies @xmath93 local pooling , @xmath134 being a subgraph of @xmath172 satisfies @xmath93 local pooling .",
    "it follows from the definition of @xmath87-local pooling that there exists a link @xmath173 such that its queue @xmath138 satisfies @xmath174 , for some @xmath175 . since @xmath176 for any pair @xmath177",
    ", we obtain @xmath178 , for all @xmath179 .",
    "we now consider the lyapunov function @xmath180 the derivative of @xmath181 is given by : @xmath182 the negative drift of the lyapunov function implies that the fluid limit model of the system is stable and hence by theorem 4.2 in @xcite , the original system is also stable .",
    "[ lemma3 ] consider any sequence of arrivals @xmath183 for all @xmath12 . then under the gfs policy , we have @xmath184 , where @xmath185 is a bounded positive number .    without loss of generality ,",
    "we assume @xmath186 .",
    "suppose at the beginning of time slot @xmath187 , we have @xmath188 .",
    "let @xmath15 denote the network state in time slot @xmath8 .",
    "then , if @xmath189 and @xmath190 denote the packets departing in time slot @xmath8 from the real fifo queue @xmath42 and the virtual queue @xmath191 respectively , the following must be true : if @xmath192 , then in time slot @xmath193 , we have @xmath194 , since both @xmath195 and @xmath196 are incremented by the same number of arrivals @xmath7 .",
    "similarly , if @xmath197 , then it again implies that @xmath198 .",
    "finally , if @xmath199 , it implies that @xmath200 .",
    "consequently , @xmath195 empties and @xmath201 .",
    "since @xmath202 is satisfied at @xmath203 , we obtain the desired condition at any time @xmath8 .",
    "lemma 3 shows that if the virtual queues are stable then the corresponding real fifo queue is also stable .",
    "in this section we simulate the performance of gfs for the four link network graph shown in fig .",
    "[ fig : four - link graph ] .",
    "each link independently assumes one of four different states in each time slot , where the link states correspond to rates 1 , 2 , 3 and 4 units per time slot .",
    "the probability distribution of the link states are independent and non - identical across links , with the average link rates being @xmath204 respectively . in fig .",
    "[ fig : gfscomparison ] , we plot the total queue sizes as we uniformly increase the arrival rate into all links .",
    "the plots show that gfs is able to sustain a load of atleast 1 unit per link . since the network in fig .",
    "[ fig : four - link graph ] has lpf value of 1 , gfs can stabilize the region @xmath98 .",
    "gfs therefore guarantees a per - link symmetric rate of at least 1 , since the arrival rate @xmath205 $ ] lies inside @xmath98 . while the performance of gms is better than gfs in the plot of fig .",
    "[ fig : gfscomparison ] , the current known performance guarantee of gms is only half the network stability region @xmath5 under the one - hop interference model , which corresponds to a symmetric load of 0.5 per link . based on simulations , we conjecture that the performance of gfs is a lower bound on the performance of greedy maximal scheduling in time varying wireless networks .",
    "the performance guarantees for gfs thus motivates the analysis of gms for time varying networks as our future work .",
    "we develop a greedy scheduler , gfs , for wireless networks with time varying channel states and provide provable performance guarantees for this scheduler .",
    "our greedy scheduler , though suboptimal , has low computational complexity and performs better than non - opportunistic schedulers that do not exploit instantaneous channel state information .",
    "the performance guarantees , along with simulations , also paint an optimistic picture of the performance of gms in wireless networks with fading channels , and we conjecture the stability region guaranteed under gfs for any wireless network to be a lower bound on the stability region of gms .",
    "l.tassiulas , and a.ephremides , stability properties of constrained queueing systems and scheduling policies for maximum throughput in multi - hop radio networks , ieee transactions on automatic control , pages 1936 - 1948 , december 1992 .",
    "m. andrews , k. kumaran , k. ramanan , a. stolyar , r. vijayakumar , and p. whiting ,  scheduling in a queuing system with asynchronously varying service rates . \"",
    "18 , 2 ( april 2004),191 - 217 .            c. joo , x. lin and ness .",
    "b. shroff , `` greedy maximal matching : performance limits for arbitrary network graphs under the node - exclusive interference model '' ieee transactions on automatic control , vol .",
    "12 , pp . 27342744 , dec .",
    "2009 .    c. joo , x. lin and ness .",
    "b. shroff , `` greedy maximal matching : performance limits for arbitrary network graphs under the node - exclusive interference model '' ieee transactions on automatic control , vol .",
    "12 , pp . 27342744 , dec .",
    "2009 .",
    "a. dimakis and j. walrand , sufficient conditions for stability of longest - queue - first scheduling : second order properties using fluid limits , advances in applied probability , vol .",
    "2 , pp.505 - 521 , 2006 .",
    "l. georgiadis , m. neely , and l. tassiulas .",
    "resource allocation and cross layer control in wireless networks ( foundations and trends in networking , v. 1 , no .",
    "1 ) . now publishers inc .",
    ", hanover , ma , usa ."
  ],
  "abstract_text": [
    "<S> we consider the problem of link scheduling for wireless networks with fading channels , where the link rates are varying with time . </S>",
    "<S> due to the high computational complexity of the throughput optimal scheduler , we provide a low complexity greedy link scheduler gfs , with provable performance guarantees . </S>",
    "<S> we show that the performance of our greedy scheduler can be analyzed using the local pooling factor ( lpf ) of a network graph , which has been previously used to characterize the stability of the greedy maximal scheduling ( gms ) policy for networks with static channels . </S>",
    "<S> we conjecture that the performance of gfs is a lower bound on the performance of gms for wireless networks with fading channels . </S>"
  ]
}
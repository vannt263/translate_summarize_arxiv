{
  "article_text": [
    "=    2    _ title of program : _ _ feynarts _    _ catalogue identifier : _",
    "_ program obtainable from : _ cpc program library , queen s university of belfast , n. ireland , and http://www.feynarts.de    _ computer for which the program is designed and others on which is has been tested : _",
    "+ _ designed for : _ platforms on which _ mathematica _  and java are available + _ tested on : _ intel - based pcs , dec alpha workstations    _ operating systems or monitors under which the program has been tested : _ linux , tru64 unix    _ programming language used : _ _ mathematica _ , java    _ memory required to execute with typical data : _ 8 m words    _ no .  of bits in a word : _ 8    _ no .  of processors used : _ 1    _ has the code been vectorized or parallelized ? _ no    _ no .  of bytes in distributed program , including test data ,",
    "etc . : _ @xmath1 400 k bytes    _ distribution format : _ gzipped tar archive    _ keywords : _ feynman diagrams , perturbation theory , quantum field theory , green s functions , @xmath0-matrix elements .",
    "_ nature of the physical problem : _ feynman - diagrammatic computations in field theory .",
    "_ method of solution : _ _ feynarts _  works in three steps : 1 ) creation of the topologies , 2 ) insertion of fields into the topologies , 3 ) application of the feynman rules to produce feynman amplitudes .",
    "information about the physical model , such as the feynman rules , is provided in a so - called model file .",
    "_ typical running time : _ about a minute to generate all amplitudes for a one - loop , @xmath2 process in the electroweak standard model .",
    "_ unusual features of the program : _ _ feynarts _  can produce high - quality images of the feynman diagrams e.g.  in postscript or latex  format for inclusion in publications .",
    "_ restrictions on the complexity : _ currently diagrams up to three loops can be generated .",
    "model files other than the standard model and qcd ( and soon also the minimal supersymmetric standard model ) are not contained in _",
    "feynarts _  and must be set up by the user .",
    "much as field theorists would love to abandon them in favour of a less laborious technique , feynman diagrams @xcite are unlikely to become extinct in the forseeable future .",
    "adding to the amount of work , increasingly precise experimental data nowadays mandate calculations involving substantial numbers of feynman diagrams . beginning in the 1960s",
    ", people started following up on the rather obvious idea of letting the computer do all those involved calculations , and indeed one of the first computer - algebra systems , schoonschip , was invented for precisely this purpose by nobel - laureate martinus veltman .",
    "this paper describes another part of this quest : the _ mathematica _  package _ feynarts _ , used for the generation and visualization of feynman diagrams and amplitudes .",
    "it performs the first step of a field - theoretic perturbative calculation , leaving simplification and numerical evaluation of the amplitudes to other programs , e.g.  @xcite .",
    "programs with a similar functionality are qgraf @xcite , the grc part of grace @xcite , comphep @xcite , and to a lesser extent madgraph @xcite .    a bit of history : _ feynarts _  started out in 1990 as a macsyma code written by eck and kblbeck which could produce diagrams in the standard model @xcite , but it soon was ported to the _ mathematica _  platform . in 1995 ,",
    "eck and kblbeck designed the second version to be a fully general diagram generator . to achieve this",
    ", they implemented some decisive new ideas @xcite , the most important one being the generation of diagrams in three levels .",
    "the program was taken up again in 1998 by hahn who developed version 2.2 .",
    "the well - designed conceptual framework was kept , but the actual code was reprogrammed almost entirely to make it more efficient and a user - friendly topology editor was added .",
    "the current third version features in particular significantly improved graphics . for example , it is now very easy to include feynman diagrams produced by _ feynarts _  in a latexdocument .    the main features of _ feynarts _  are :    * the generation of diagrams is possible in three levels : generic fields , classes of fields , or specific particles . *",
    "the model information is contained in two special files : the _ generic model file _ defines the representation of the kinematical quantities like spinors or vector fields .",
    "the _ classes model file _ sets up the particle content and specifies the actual couplings . since the user can create own model files , the applicability of _ feynarts _  is virtually unlimited within perturbative quantum field theory . * in addition to ordinary diagrams , _ feynarts _  can generate counter - term diagrams and diagrams with placeholders for one - particle irreducible vertex functions ( skeleton diagrams ) . *",
    "_ feynarts _  employs the so - called `` flipping - rule '' algorithm @xcite to concatenate fermion chains .",
    "this algorithm is unique in that it works also for majorana fermions and for the fermion - number - violating couplings they entail and hence allows supersymmetric models to be implemented .",
    "* restrictions of the type `` field @xmath3 is not allowed in loops '' can be applied .",
    "this is necessary e.g.  for the background - field formulation of a field theory .",
    "* vertices of arbitrary adjacency , required for effective theories , are allowed . * mixing propagators , such as appear in non-@xmath4-gauges , are supported . *",
    "_ feynarts _  produces publication - quality feynman diagrams in postscript or latex  in a format that allows easy customization .",
    "these features have been introduced in version 2 and some of them have received considerable improvements in version 3 .",
    "the user interface , on the other hand , has through the versions suffered only minor and mostly backward - compatible changes , and the major functions can still be used in essentially the same way as in version 1 .",
    "this paper is divided into two parts : sect .  [",
    "sect : usage ] gives a brief survey of the main functions from a user s perspective .",
    "the concepts of the computer - algebraic generation of feynman diagrams and amplitudes and their implementation in _ feynarts _  are discussed in sect.[sect : concepts ] .",
    "( 190,275)(35,16 ) ( 150,411)(150,380 ) ( 150,335)(150,308 ) ( 150,251)(150,222 ) ( 150,175)(150,148 ) ( 150,101)(150,72 )    ( 200,50)(280,50 ) ( 279,50)(280,50 ) ( 180,32.8)[lb]further ( 180,28.8)[lt]processing    ( 210,260)(100,90,27 ) ( 210,300)(100,-90,-27 )    ( 62,410)(238,488).9 ( 90,280.8)[b]find all distinct ways ( 90,270.4)[b]of connecting incoming ( 90,260)[b]and outgoing lines ( 90,257.6)[t](createtopologies ) ( 150,360)(25,65)(0)1 ( 90,215.2)[]topologies ( 65,250)(235,310).9 ( 90,174.4)[b]determine all allowed ( 90,164)[b]combinations of fields ( 90,161.6)[t](insertfields ) ( 248,250)(377,310).9 ( 187,169.6)[b]draw the results ( 187,165.6)[t](paint ) ( 150,200)(25,65)(0)1 ( 90,119.2)[]diagrams ( 55,100)(245,150).9 ( 90,76.8)[b]apply the feynman rules ( 90,72.8)[t](createfeynamp ) ( 150,50)(25,65)(0)1 ( 90,29.6)[]amplitudes    -15bp    _ feynarts _  works in the three basic steps sketched in fig .",
    "[ fig : feynarts ] .",
    "the first step is to create all different topologies for a given number of loops and external legs .",
    "the following call to createtopologies creates for example all one - particle - irreducible ( 1pi ) one - loop topologies for a @xmath5 process .",
    "this is done by generating all one - loop @xmath5 topologies and then excluding the reducible ones :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .... top = createtopologies[1 , 1 - > 2 , excludetopologies - > internal ] .... _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    the output of createtopologies is an internal data structure called a topologylist . as an example , the first topology in the topologylist just created is shown here :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .... topology[1 ] [ propagator[incoming][vertex[1][1 ] , vertex[3][4 ] ] ,                propagator[outgoing][vertex[1][2 ] , vertex[3][5 ] ] ,                propagator[outgoing][vertex[1][3 ] , vertex[3][6 ] ] ,                propagator[loop[1]][vertex[3][4 ] , vertex[3][5 ] ] ,                propagator[loop[1]][vertex[3][4 ] , vertex[3][6 ] ] ,                propagator[loop[1]][vertex[3][5 ] , vertex[3][6 ] ] ] .... _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    a much nicer way to visualize the topologylist in top is to paint it with paint[topxmath6    ( 0.,10.)(6.6,10.)(0.,)/straight0 ( 20.,15.)(14.,14.)(0.,)/straight0 ( 20.,5.)(14.,6.)(0.,)/straight0 ( 6.6,10.)(14.,14.)(0.,)/straight0 ( 6.6,10.)(14.,6.)(0.,)/straight0 ( 14.,14.)(14.,6.)(0.,)/straight0 ( 6.6,10.)0 ( 14.,14.)0 ( 14.,6.)0    ( 0.,10.)(6.6,10.)(0.,)/straight0 ( 20.,15.)(14.,10.)(0.,)/straight0 ( 20.,5.)(14.,10.)(0.,)/straight0 ( 6.6,10.)(14.,10.)(0.8,)/straight0 ( 6.6,10.)(14.,10.)(-0.8,)/straight0 ( 6.6,10.)0 ( 14.,10.)0    ( 0.,10.)(11.,8.)(0.,)/straight0 ( 20.,15.)(13.,14.)(0.,)/straight0 ( 20.,5.)(11.,8.)(0.,)/straight0 ( 13.,14.)(11.,8.)(0.8,)/straight0 ( 13.,14.)(11.,8.)(-0.8,)/straight0 ( 13.,14.)0 ( 11.,8.)0    ( 0.,10.)(9.,13.)(0.,)/straight0 ( 20.,15.)(9.,13.)(0.,)/straight0 ( 20.,5.)(11.5,6.5)(0.,)/straight0 ( 11.5,6.5)(9.,13.)(0.8,)/straight0 ( 11.5,6.5)(9.,13.)(-0.8,)/straight0 ( 11.5,6.5)0 ( 9.,13.)0 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    in the second step , the actual particles in the model have to be distributed over the topologies in all allowed ways .",
    "for example , the diagrams for @xmath7 are produced with    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _",
    ".... ins = insertfields[top , v[2 ] - > { f[4,{3 } ] , -f[4,{3 } ] } ,          model - > sm , insertionlevel - > { classes } ] .... _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    where f[4,3 ] is the @xmath8-quark , -f[4,3 ] its antiparticle , and ` v[2 ] ` the @xmath9 boson . the model information is taken from the file sm.mod .",
    "the insertion level tells insertfields how detailed each inserted field should be specified : classes means that classes of fields should not be expanded . in the standard model , for example",
    ", the fermions are arranged in classes , so there will be only one diagram for e.g.  an up - type quark @xmath10 instead of three for its members @xmath11 , @xmath12 , @xmath13 ( see sect .",
    "[ sect : levels ] for more information on field levels ) .",
    "the output of insertfields is again a topologylist which is now supplemented with the field information .",
    "its printed form is lengthy and looks rather unappealing , but it can be drawn with paint[ins ] which results inxmath14    ( 0.,10.)(6.6,10.)(0.,)/sine0 ( 3.3,8.93)[t]@xmath9 ( 20.,15.)(14.,14.)(0.,)/straight-1 ( 16.7452,15.5489)[b]@xmath8 ( 20.,5.)(14.,6.)(0.,)/straight1 ( 16.7452,4.45109)[t]@xmath8 ( 6.6,10.)(14.,14.)(0.,)/straight1 ( 9.85274,13.2354)[br]@xmath8 ( 6.6,10.)(14.,6.)(0.,)/straight-1 ( 9.85274,6.76457)[tr]@xmath8 ( 14.,14.)(14.,6.)(0.,)/scalardash0 ( 15.024,10.)[l]@xmath15 ( 6.6,10.)0 ( 14.,14.)0 ( 14.,6.)0    ( 0.,10.)(6.6,10.)(0.,)/sine0 ( 3.3,8.93)[t]@xmath9 ( 20.,15.)(14.,14.)(0.,)/straight-1 ( 16.7452,15.5489)[b]@xmath8 ( 20.,5.)(14.,6.)(0.,)/straight1 ( 16.7452,4.45109)[t]@xmath8 ( 6.6,10.)(14.,14.)(0.,)/straight1 ( 9.85274,13.2354)[br]@xmath8 ( 6.6,10.)(14.,6.)(0.,)/straight-1 ( 9.85274,6.76457)[tr]@xmath8 ( 14.,14.)(14.,6.)(0.,)/scalardash0 ( 15.024,10.)[l]@xmath16 ( 6.6,10.)0 ( 14.,14.)0 ( 14.,6.)0    ( 0.,10.)(6.6,10.)(0.,)/sine0 ( 3.3,8.93)[t]@xmath9 ( 20.,15.)(14.,14.)(0.,)/straight-1 ( 16.7452,15.5489)[b]@xmath8 ( 20.,5.)(14.,6.)(0.,)/straight1 ( 16.7452,4.45109)[t]@xmath8 ( 6.6,10.)(14.,14.)(0.,)/straight1 ( 9.85274,13.2354)[br]@xmath10 ( 6.6,10.)(14.,6.)(0.,)/straight-1 ( 9.85274,6.76457)[tr]@xmath10 ( 14.,14.)(14.,6.)(0.,)/scalardash-1 ( 15.274,10.)[l]@xmath17 ( 6.6,10.)0 ( 14.,14.)0 ( 14.,6.)0    ( 0.,10.)(6.6,10.)(0.,)/sine0 ( 3.3,8.93)[t]@xmath9 ( 20.,15.)(14.,14.)(0.,)/straight-1 ( 16.7452,15.5489)[b]@xmath8 ( 20.,5.)(14.,6.)(0.,)/straight1 ( 16.7452,4.45109)[t]@xmath8 ( 6.6,10.)(14.,14.)(0.,)/scalardash0 ( 9.97162,13.0155)[br]@xmath15 ( 6.6,10.)(14.,6.)(0.,)/scalardash0 ( 9.97162,6.9845)[tr]@xmath16 ( 14.,14.)(14.,6.)(0.,)/straight-1 ( 15.274,10.)[l]@xmath8 ( 6.6,10.)0 ( 14.,14.)0 ( 14.,6.)0    ( 0.,10.)(6.6,10.)(0.,)/sine0 ( 3.3,8.93)[t]@xmath9 ( 20.,15.)(14.,14.)(0.,)/straight-1 ( 16.7452,15.5489)[b]@xmath8 ( 20.,5.)(14.,6.)(0.,)/straight1 ( 16.7452,4.45109)[t]@xmath8 ( 6.6,10.)(14.,14.)(0.,)/scalardash0 ( 9.97162,13.0155)[br]@xmath16 ( 6.6,10.)(14.,6.)(0.,)/scalardash0 ( 9.97162,6.9845)[tr]@xmath15 ( 14.,14.)(14.,6.)(0.,)/straight-1 ( 15.274,10.)[l]@xmath8 ( 6.6,10.)0 ( 14.,14.)0 ( 14.,6.)0    ( 0.,10.)(6.6,10.)(0.,)/sine0 ( 3.3,8.93)[t]@xmath9 ( 20.,15.)(14.,14.)(0.,)/straight-1 ( 16.7452,15.5489)[b]@xmath8 ( 20.,5.)(14.,6.)(0.,)/straight1 ( 16.7452,4.45109)[t]@xmath8 ( 6.6,10.)(14.,14.)(0.,)/scalardash1 ( 9.85274,13.2354)[br]@xmath17 ( 6.6,10.)(14.,6.)(0.,)/scalardash-1 ( 9.85274,6.76457)[tr]@xmath17 ( 14.,14.)(14.,6.)(0.,)/straight-1 ( 15.274,10.)[l]@xmath10 ( 6.6,10.)0 ( 14.,14.)0 ( 14.,6.)0    ( 0.,10.)(6.6,10.)(0.,)/sine0 ( 3.3,8.93)[t]@xmath9 ( 20.,15.)(14.,14.)(0.,)/straight-1 ( 16.7452,15.5489)[b]@xmath8 ( 20.,5.)(14.,6.)(0.,)/straight1 ( 16.7452,4.45109)[t]@xmath8 ( 6.6,10.)(14.,14.)(0.,)/straight1 ( 9.85274,13.2354)[br]@xmath8 ( 6.6,10.)(14.,6.)(0.,)/straight-1 ( 9.85274,6.76457)[tr]@xmath8 ( 14.,14.)(14.,6.)(0.,)/sine0 ( 15.274,10.)[l]@xmath18 ( 6.6,10.)0 ( 14.,14.)0 ( 14.,6.)0    ( 0.,10.)(6.6,10.)(0.,)/sine0 ( 3.3,8.93)[t]@xmath9 ( 20.,15.)(14.,14.)(0.,)/straight-1 ( 16.7452,15.5489)[b]@xmath8 ( 20.,5.)(14.,6.)(0.,)/straight1 ( 16.7452,4.45109)[t]@xmath8 ( 6.6,10.)(14.,14.)(0.,)/straight1 ( 9.85274,13.2354)[br]@xmath8 ( 6.6,10.)(14.,6.)(0.,)/straight-1 ( 9.85274,6.76457)[tr]@xmath8 ( 14.,14.)(14.,6.)(0.,)/sine0 ( 15.274,10.)[l]@xmath9 ( 6.6,10.)0 ( 14.,14.)0 ( 14.,6.)0    ( 0.,10.)(6.6,10.)(0.,)/sine0 ( 3.3,8.93)[t]@xmath9 ( 20.,15.)(14.,14.)(0.,)/straight-1 ( 16.7452,15.5489)[b]@xmath8 ( 20.,5.)(14.,6.)(0.,)/straight1 ( 16.7452,4.45109)[t]@xmath8 ( 6.6,10.)(14.,14.)(0.,)/straight1 ( 9.85274,13.2354)[br]@xmath10 ( 6.6,10.)(14.,6.)(0.,)/straight-1 ( 9.85274,6.76457)[tr]@xmath10 ( 14.,14.)(14.,6.)(0.,)/sine-1 ( 15.274,10.)[l]@xmath19 ( 6.6,10.)0 ( 14.,14.)0 ( 14.,6.)0    ( 0.,10.)(6.6,10.)(0.,)/sine0 ( 3.3,8.93)[t]@xmath9 ( 20.,15.)(14.,14.)(0.,)/straight-1 ( 16.7452,15.5489)[b]@xmath8 ( 20.,5.)(14.,6.)(0.,)/straight1 ( 16.7452,4.45109)[t]@xmath8 ( 6.6,10.)(14.,14.)(0.,)/scalardash0 ( 9.97162,13.0155)[br]@xmath15 ( 6.6,10.)(14.,6.)(0.,)/sine0 ( 9.85274,6.76457)[tr]@xmath9 ( 14.,14.)(14.,6.)(0.,)/straight-1 ( 15.274,10.)[l]@xmath8 ( 6.6,10.)0 ( 14.,14.)0 ( 14.,6.)0    ( 0.,10.)(6.6,10.)(0.,)/sine0 ( 3.3,8.93)[t]@xmath9 ( 20.,15.)(14.,14.)(0.,)/straight-1 ( 16.7452,15.5489)[b]@xmath8 ( 20.,5.)(14.,6.)(0.,)/straight1 ( 16.7452,4.45109)[t]@xmath8 ( 6.6,10.)(14.,14.)(0.,)/scalardash1 ( 9.85274,13.2354)[br]@xmath17 ( 6.6,10.)(14.,6.)(0.,)/sine-1 ( 9.85274,6.76457)[tr]@xmath19 ( 14.,14.)(14.,6.)(0.,)/straight-1 ( 15.274,10.)[l]@xmath10 ( 6.6,10.)0 ( 14.,14.)0 ( 14.,6.)0    ( 0.,10.)(6.6,10.)(0.,)/sine0 ( 3.3,8.93)[t]@xmath9 ( 20.,15.)(14.,14.)(0.,)/straight-1 ( 16.7452,15.5489)[b]@xmath8 ( 20.,5.)(14.,6.)(0.,)/straight1 ( 16.7452,4.45109)[t]@xmath8 ( 6.6,10.)(14.,14.)(0.,)/sine0 ( 9.85274,13.2354)[br]@xmath9 ( 6.6,10.)(14.,6.)(0.,)/scalardash0 ( 9.97162,6.9845)[tr]@xmath15 ( 14.,14.)(14.,6.)(0.,)/straight-1 ( 15.274,10.)[l]@xmath8 ( 6.6,10.)0 ( 14.,14.)0 ( 14.,6.)0    ( 0.,10.)(6.6,10.)(0.,)/sine0 ( 3.3,8.93)[t]@xmath9 ( 20.,15.)(14.,14.)(0.,)/straight-1 ( 16.7452,15.5489)[b]@xmath8 ( 20.,5.)(14.,6.)(0.,)/straight1 ( 16.7452,4.45109)[t]@xmath8 ( 6.6,10.)(14.,14.)(0.,)/sine1 ( 9.85274,13.2354)[br]@xmath19 ( 6.6,10.)(14.,6.)(0.,)/scalardash-1 ( 9.85274,6.76457)[tr]@xmath17 ( 14.,14.)(14.,6.)(0.,)/straight-1 ( 15.274,10.)[l]@xmath10 ( 6.6,10.)0 ( 14.,14.)0 ( 14.,6.)0    ( 0.,10.)(6.6,10.)(0.,)/sine0 ( 3.3,8.93)[t]@xmath9 ( 20.,15.)(14.,14.)(0.,)/straight-1 ( 16.7452,15.5489)[b]@xmath8 ( 20.,5.)(14.,6.)(0.,)/straight1 ( 16.7452,4.45109)[t]@xmath8 ( 6.6,10.)(14.,14.)(0.,)/sine1 ( 9.85274,13.2354)[br]@xmath19 ( 6.6,10.)(14.,6.)(0.,)/sine-1 ( 9.85274,6.76457)[tr]@xmath19 ( 14.,14.)(14.,6.)(0.,)/straight-1 ( 15.274,10.)[l]@xmaththe fields , their propagators , and their couplings are defined in a special file , the model file , which the user can supply or modify .",
    "the following model files are included in _",
    "feynarts _ : the electroweak standard model ( sm.mod ) @xcite , the same including qcd ( smqcd.mod ) , and in the background - field formulation ( smbgf.mod ) @xcite .",
    "these model files all include the full set of one - loop counter terms .",
    "a model file for the minimal supersymmetric standard model ( mssm ) will be available soon .    the graphics output of paint",
    "can be saved in a file with the standard _",
    "mathematica _",
    "functions display and export , e.g.  the following two lines draw the diagrams contained in the variable ins and save them in a postscript file :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .... diags = paint[ins ] ; display[\"diags.ps \" , diags ] .... _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    finally , the analytic expressions for the diagrams are obtained by    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .... amp = createfeynamp[ins ] .... _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    the output of createfeynamp requires a detailed discussion which is deferred to sect .",
    "[ sect : frules ] .",
    "needless to say , many details have been omitted in this brief survey of _",
    "feynarts_. all functions and their options are however fully documented in the _ feynarts _  manual which is included in the _ feynarts _  package ( see sect.[sect : download ] for download information ) .",
    "createtopologies generates all distinct topologies for a given number of loops and external legs .",
    "this is a purely topological process with essentially no physics input .",
    "( if a model allows vertices of a degree larger than four , this has to be specified explicitly . )    ( 255,150)(-30,-30 ) ( -40,-5 ) ( 30,50)15    ( -52,-5 ) ( 72,50)[l]@xmath20    ( -64,-5 ) ( 130,50)15 ( 130,35)(130,10 ) ( 130,35)2    ( -74,-5 ) ( 172,75)[l]@xmath21 ( 172,50)[l]@xmath20 ( 172,25)[l]@xmath22    ( -75,15 ) ( 210,80)(235,80 ) ( 250,80)15 ( 265,80)(290,80 )",
    "( 235,80)2 ( 265,80)2    ( 210,30)(260,30 ) ( 275,30)15 ( 260,30)2 ( 210,50)(235,30 ) ( 235,30)2    ( 250,-20)15 ( 210,-35)(250,-35 ) ( 250,-35)(290,-35 ) ( 250,-35)2    -15bp    the topologies are created with a recursive algorithm @xcite : it takes pre - defined topologies with zero external legs , the so - called starting topologies , and successively adds legs until the desired number of external legs is reached ( see fig .  [",
    "fig : topalg ] for an example ) .",
    "the starting topologies have to be entered once for every loop order , and by default , _ feynarts _",
    "knows the tree - level , one - loop , two - loop , and three - loop starting topologies .",
    "note that this algorithm is not self - contained because it depends on external input in the form of starting topologies .",
    "the available numbers of loops are however quite sufficient for most applications in theories like the electroweak standard model .",
    "createtopologies has two companion functions , createcttopologies and createvftopologies , for creating counter - term topologies and topologies with placeholders for one - particle irreducible vertex functions ( skeleton diagrams ) , respectively .",
    "they use the same algorithm as createtopologies .",
    "in contrast to the ordinary topologies , however , these topologies may contain two - vertices ( e.g.  for propagator - type counter terms ) , and the number of such vertices is not topologically restricted by the input parameters ( number of loops and external legs ) .",
    "therefore , one has to keep track of the total order of a diagram , i.e.  loop order plus counter - term / vertex - function order .",
    "this is solved in _ feynarts _  by defining additional counter - term starting topologies .",
    "for example , in addition to the two - loop starting topologies there exist starting topologies with one loop and first - order counter terms , and tree - level starting topologies with one second - order or two first - order counter terms .    finally , after generating all possible topologies , the topologically equivalent ones have to be weeded out and the symmetry factors of the remaining ones adjusted accordingly .",
    "to this end , the topologies are sorted into some canonical order and then compared . however",
    ", this simple procedure may fail to detect equivalent graphs if there are groups of vertices whose permutation does not change the graph . in that case",
    ", the indices of these symmetrical vertices ( which are especially tagged in the starting topologies for this purpose ) have to be permuted to give all topologically equivalent versions .",
    "it is this `` power set '' of each topology that is actually compared . while this sounds like an uncomfortably slow procedure , the actual performance is not so bad .",
    "for example , a modern pc takes about 10 seconds to generate all 2214 two - loop @xmath2 topologies .",
    "the symmetry factor of a topology is determined in the following way : the starting topology carries an integer @xmath23 , the inverse of its symmetry factor .",
    "the starting topology always has the highest @xmath23 because adding legs can only diminish its symmetry .",
    "after adding each leg , the topologically equivalent versions are gathered in the result and replaced by one representative whose @xmath23 is divided by the number of versions found .",
    "an important feature of _ feynarts _  is that it distinguishes three levels of fields :     _ generic level _",
    ", e.g.  the fermion f ,     _ classes level _ ,",
    "e.g.  the down - type quark f[4 ] ,     _ particles level _ , e.g.  the @xmath8-quark f[4,3 ] .",
    "this is a quite natural concept in field theory ( compare e.g.  the feynman rules in @xcite ) and has three enormous benefits in practical calculations .",
    "the kinematical structure of a coupling is fixed once the generic fields are specified .",
    "for example , all fermion  fermion ",
    "scalar couplings are of the form @xmath24 where @xmath25 are the chirality projectors .",
    "this means that most algebraic simplifications , like the tensor reduction , need to be carried out on the generic - level amplitude only .",
    "the classes level saves further cpu time because the sum over a particle index ( e.g.  a fermion - generation index ) can be performed much more efficiently , say in a fortran program , than the full computation of the proportionate number of diagrams at particles level .",
    "thirdly , since the kinematical structure of a coupling is dictated by the choice of representation of the poincar group ( which is not often changed ) , it is very profitable to store the kinematical structure apart from the actual coupling constants so that it can be used with more than one model .",
    "_ feynarts _  stores the kinematical structure of the couplings in a file called the _ generic model file_. for example , the entry corresponding to eq .   is    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ` analyticalcoupling [  s1  f[i , mom1 ] ,  s2  f[j , mom2 ] ,  s3  s[k , mom3 ]  ]  = = ` + `  g[1][s1  f[i ] ,  s2  f[j ] ,  s3  s[k ] ]  . `",
    "+ `  noncommutative[chiralityprojector[-1 ] ] , ` + `  noncommutative[chiralityprojector[+1 ] ]  ` _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    like eq .  , the right - hand side of this equation is the dot product of an as yet unspecified vector of coupling constants @xmath26 with the kinematical vector @xmath27 , i.e.  the components of @xmath26 in this case provide the prefactors of @xmath28 and @xmath29 , respectively .",
    "the actual coupling vector @xmath26 is then specified in the _ classes model file _",
    ", e.g.  the @xmath30-coupling in the electroweak standard model is defined as    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ` c [  -f[2,j1 ] ,  f[1,j2 ] ,  s[3 ]  ]  = =  ` + `  -i  el/(sqrt[2 ]  sw )  mass[f[2,j1]]/mw  indexdelta[j1 ,  j2 ]  ` + `  1 ,  dze1  -  dsw1/sw  +  dmwsq1/(2  mw^2 )  +  dmf1[2,j1]/mass[f[2,j1 ] ]  - ` + `  1/2  ( conjugate[dzfr1[2,j1 ] ]  +  dzfl1[1,j1 ] ) , ` + `  0 ,  0  ` _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    the outer braces on the right - hand side delimit the coupling vector , with components corresponding to @xmath28 and @xmath29 , while the inner braces host the orders of the coupling , e.g.  1 for the tree - level coupling and ( dze1- ... ) for the first - order counter term .",
    "an overall factor ( -iel ... ) is pulled out for clarity , but of course multiplies all components . incidentally",
    ", the neutrino s left - handedness can clearly be seen from the fact that the second component of @xmath26 , multiplying @xmath29 , is zero in all orders .",
    "_ feynarts _  puts almost no restrictions on what can appear in a coupling .",
    "indeed , most of the symbols appearing in the example have been chosen by the model file s creator and have no specific meaning to _",
    "note that as yet the class indices are specified ( e.g.  f[1 ] ) , but not the particle indices ( j1 ) .",
    "no extra model file is needed for particles level , however  the replacement of the remaining particles indices by integers is trivial enough to be performed without further input .",
    "the computer - algebraic generation of feynman diagrams corresponds to the distribution of fields over the topologies in such a way that the resulting diagrams possess the external fields the user has chosen and contain only couplings allowed by the model .",
    "this process is called `` inserting fields into a topology '' and is performed by the insertfields function .    as would be expected from the level - concept of fields ,",
    "the insertion of fields is a three - stage process , with functions for the insertion of generic- , classes- , and particles - level fields nested inside each other .",
    "it suffices however to describe the main insertion function which is eventually invoked at all levels .",
    "this function works as follows : it is called for each propagator and receives as input the fields coming in at either end of the propagator , @xmath31 and @xmath32 , and the field running on the propagator itself , @xmath33 :    ( 100,45)(0,-5 ) ( 20,20)(80,20 ) ( 50,25)[b]@xmath33 ( 20,20)(10,30 ) ( 5,32)[b]@xmath34 ( 20,20)(10,20 ) ( 4,21)[]@xmath35 ( 20,20)(10,10)2 ( 5,15)[t]@xmath36 ( 80,20)(90,30 ) ( 97,32)[b]@xmath37 ( 80,20)(90,20 ) ( 97,21)[]@xmath38 ( 80,20)(90,10)2 ( 97,15)[t]@xmath36 ( 20,20)2 ( 80,20)2    all of this field information is specified as precisely as known at that stage of the insertion process . the insertion function",
    "then looks up which particles are allowed for @xmath33 , given that it joins @xmath39 at the left end , and similarly for the right end . taking the intersection of these two `` allowed '' lists yields the possible choices for @xmath33 .",
    "mixing propagators introduce a slight complication : instead of the field @xmath33 itself , _ feynarts _  has to take the left and right partner of @xmath33 for look - up at the left and right end , respectively .",
    "for example , the left and right partners of a @xmath18@xmath9 mixing field are @xmath18 and @xmath9 .",
    "the look - up tables used for finding the allowed fields obviously play a very important role .",
    "they are built during the model - initialization phase and account for most of the speed of the insertfields function .",
    "both the bare topologies of createtopologies and the inserted diagrams of insertfields can be drawn with the paint function .",
    "the output of paint , displayed also on screen by default , can be rendered in postscript , latex , or any other graphics format known to _ mathematica _",
    ", e.g.  gif , jpeg , pdf , etc .",
    "the most useful output formats are however `` tex '' ( latex ) , `` ps '' ( postscript ) , and `` eps '' ( encapsulated postscript ) .",
    "the latex  format is probably the most convenient one for including the diagrams in publications .",
    "for example , the diagram    ( 100,100)(1,1 ) ( 0.,10.)(6.,10.)(0.,)/sine0 ( 3.,8.93)[t]@xmath18 ( 20.,10.)(14.,10.)(0.,)/sine0 ( 17.,11.07)[b]@xmath18 ( 6.,10.)(14.,10.)(0.8,)/scalardash-1 ( 10.,5.73)[t]@xmath17 ( 6.,10.)(14.,10.)(-0.8,)/scalardash1 ( 10.,14.27)[b]@xmath17 ( 6.,10.)0 ( 14.,10.)0    has the latex  representation    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .... \\begin{feynartspicture}(100,100)(1,1 ) \\fadiagram { } \\faprop(0.,10.)(6.,10.)(0.,){/sine}{0 } \\falabel(3.,8.93)[t]{$\\gamma$ } \\faprop(20.,10.)(14.,10.)(0.,){/sine}{0 } \\falabel(17.,11.07)[b]{$\\gamma$ } \\faprop(6.,10.)(14.,10.)(0.8,){/scalardash}{-1 } \\falabel(10.,5.73)[t]{$\\phi$ } \\faprop(6.,10.)(14.,10.)(-0.8,){/scalardash}{1 } \\falabel(10.,14.27)[b]{$\\phi$ } \\favert(6.,10.){0 } \\favert(14.,10.){0 } \\end{feynartspicture } .... _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    such fragments can be inserted into a latex  document , thus eliminating external files for the figures .",
    "it is also fairly easy to change or move around diagrams with any text editor .",
    "the only requirement is to include the feynarts.sty style in which the latex  commands used in the _ feynarts _  output are defined .    as of version 3 , _ feynarts _  possesses a custom postscript prologue  a piece of postscript code that explains to the postscript interpreter how to draw propagators , vertices , and labels .",
    "the prologue makes it possible to produce latex  output of the form shown above and indeed , feynarts.sty consists mostly of the prologue . as a nice side - effect , the postscript files generated by",
    "_  3 are smaller by a factor of 5 or more compared with older versions .",
    "the shapes of the diagrams are not automatically designed by _",
    "feynarts_. that is a matter of human taste and too complicated for a computer program .",
    "each time a diagram is drawn , _",
    "feynarts _  looks up its shape in a database , and if no shape is found , calls up the topology editor in which the user can arrange the vertices , propagators , and labels with the mouse .",
    "the topology editor is the only part of _ feynarts _  not written in _",
    "mathematica _  but in java .",
    "once the possible combinations of fields have been determined by insertfields , the feynman rules must be applied to produce the actual amplitudes .",
    "this is done by createfeynamp .",
    "the feynman rules , more specifically , consist of the expressions for the propagators and vertices defined in the model files , a prefactor which includes symmetry factors and usually depends on the number of loops , and the rules for the concatenation and signs of fermion chains .",
    "the output of createfeynamp is intentionally very symbolic to make it easier for other programs to locate certain parts of the amplitude .",
    "for example , the amplitude resulting from the photon self - energy diagram painted in the last section is    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ feynamp [ +  graphid[topology  = =  1 ,  generic  = =  1 ] , +  integral[q1 ] , +  ( @xmath40  relativecf +  feynampdenominator[@xmath41}^2}$ ] , +  @xmath42}^2}$ ] ] +  ( p1  -  2  q1)[lor1 ]  ( -p1  +  2  q1)[lor2 ] +  ep[v[1],p1,lor1 ]  ep@xmath43[v[1],k1,lor2 ] +  g@xmath44[(mom[1]-mom[2])[ki1[3 ] ] ] +  g@xmath44[(mom[1]-mom[2])[ki1[3 ] ] ] ) , +  mass[s[gen3 ] ] ,  mass[s[gen4 ] ] , +  g@xmath45[(mom[1]-mom[2])[ki1[3 ] ] ] , +  g@xmath45[(mom[1]-mom[2])[ki1[3 ] ] ] , +  relativecf  - > +  insertions[classes][mw ,  mw ,  i  el ,  -i  el ,  2 ] + ] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    the feynamp function has four arguments : an identifier , the integration momenta , the generic amplitude  , and replacement rules for transforming the generic amplitude into a classes or particles amplitude .",
    "the generic amplitude has the following elements : a numeric pre - factor ( relativecf stands for relative combinatorial factor and is specified for each diagram by the replacement rules ) , the denominators of loop propagators collected in a function feynampdenominator , the kinematic structure of the two scalar  scalar  vector couplings , the polarization vectors of the external photons , and the generic coupling constants of both vertices .    to turn the generic amplitude into a classes or particles amplitude ,",
    "all generic objects must be replaced by their concrete values at the particular level .",
    "this replacement is specified by the rules .",
    "for example , for the first ( and in this simple example only ) classes diagram , mass[s[gen3 ] ] becomes mw .",
    "in general , one generic amplitude will of course fan out into several derived classes or particles amplitudes , so the insertions function will have several entries .    even though this method of keeping the generic amplitude apart from the replacement rules has the advantages outlined in sect .",
    "[ sect : levels ] , it is possible to obtain the more conventional feynman amplitudes by picking out one level ( i.e.  applying the replacement rules ) with the function picklevel .    from the appearance of polarization vectors it is clear that the sample amplitude shown above is part of an @xmath0-matrix element .",
    "just as well it is possible to produce amplitudes for green s functions by selecting truncated - > true as an option in createfeynamp .",
    "supersymmetric theories in general contain majorana fermions and hence fermion - number - violating couplings ( e.g.  quark  squark  gluino ) .",
    "the textbook prescription of ordering the dirac matrices opposite to their occurrence along the arrows on fermionic lines obviously breaks down in this case since one can not define a fermion - number flow .",
    "put differently , majorana - fermion lines have no arrow .",
    "in fact , _ feynarts _  has to address this problem for all fermions , not just for majorana ones , because the amplitude is constructed at generic level and generic fermion fields are defined to be undirected .",
    "the implemented solution is the `` flipping - rule '' algorithm @xcite : instead of traversing the fermion lines along the fermion - number flow imposed from the outside , _ feynarts _  chooses a direction for each fermion chain .",
    "if it turns out later that , for a dirac fermion , the chosen direction is opposite to the actual fermion flow , it `` flips '' the coupling , i.e.  it derives the coupling appropriate for the reversed fermion flow from the known coupling .",
    "this is in fact nothing but a charge ( as opposed to hermitian ) conjugation of the coupling and the flipping rules , which act on elements of the dirac algebra , are actually quite simple , e.g.  @xmath46",
    "the _ feynarts _  package can be downloaded from http://www.feynarts.de and includes a comprehensive manual which explains installation and usage .",
    "_ feynarts _  requires _ mathematica _  3 or above . for the topology editor ,",
    "a java vm and the j / link package are needed , both of which can be obtained free of charge ( see the instructions on the web site ) .",
    "_ feynarts _  is an open - source program and stands under the gnu library general public license .",
    "the development of _ feynarts _  2.2 has been supported by the deutsche forschungsgemeinschaft ( forschergruppe `` quantenfeldtheorie , computeralgebra und monte - carlo simulation '' ) under contract number ku 502/81 .",
    "the new graphics functions of _ feynarts _  3 have been developed on a visiting scholar grant of wolfram research , inc . , and i am grateful in particular to m.  malak and l.  dandria for discussions on how to get the most out of _ mathematica_. i thank a.  denner and w.  hollik for proofreading the manuscript ."
  ],
  "abstract_text": [
    "<S> this paper describes the _ mathematica _  package _ feynarts _  used for the generation and visualization of feynman diagrams and amplitudes . </S>",
    "<S> the main features of version 3 are : generation of diagrams in three levels , user - definable model files , support for supersymmetric models , and publication - quality feynman diagrams in postscript or latex . + pacs numbers : 02.70.c , 07.05.bx , 89.80.+h . </S>",
    "<S> + keywords : feynman diagrams , perturbation theory , quantum field theory , green s functions , @xmath0-matrix elements . </S>"
  ]
}
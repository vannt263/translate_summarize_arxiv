{
  "article_text": [
    "photographs captured with long exposure times using hand - held cameras are often degraded by blur due to camera shake .",
    "the ability to reverse this degradation and recover a sharp image is attractive to photographers , since it allows rescuing an otherwise acceptable photograph .",
    "moreover , if this ability is _ consistent _ and can be relied upon post - acquisition , it gives photographers more flexibility at the time of capture , for example , in terms of shooting with a zoom - lens without a tripod , or trading off exposure time with iso in low - light settings .",
    "beginning with the seminal work of fergus _ et al . _",
    "@xcite , the last decade has seen considerable progress  @xcite in the development of effective blind motion deblurring methods that seek to estimate camera motion in terms of the induced blur kernel , and then reverse its effect .",
    "this progress has been helped by the development of principled evaluation on standard benchmarks  @xcite , that measure performance over a large and diverse set of images .",
    "some deblurring algorithms  @xcite emphasize efficiency , and use inexpensive processing of image features to quickly estimate the motion kernel . despite their speed",
    ", these methods can yield remarkably accurate kernel estimates and achieve high - quality restoration for many images , making them a practically useful post - processing tool for photographers .",
    "however , due to their reliance on relatively simple heuristics , they also have poor outlier performance and can fail on a significant fraction of blurred images .",
    "other methods are iterative  they reason with parametric prior models for natural images and motion kernels , and use these priors to successively improve the algorithm s estimate of the sharp image and the motion kernel .",
    "the two most successful deblurring algorithms fall  @xcite in this category , and while they are able to outperform previous methods by a significant margin , they also have orders of magnitude longer running times .    in this work",
    ", we explore whether discriminatively trained neural networks can match the performance of traditional methods that use generative natural image priors , and do so without multiple iterative refinements .",
    "our work is motivated by recent successes in the use of neural networks for other image restoration tasks ( _ e.g. _ ,  @xcite ) .",
    "this includes methods  @xcite for _ non - blind _",
    "deconvolution , _",
    "i.e. _ ,  restoring a blurred image when the blur kernel is known .",
    "while the estimation problem in blind deconvolution is significantly more ill - posed than the non - blind case , these works provide insight into the design process of neural architectures for deconvolution .",
    "hradi _ et al . _",
    "@xcite explored the use of neural networks for blind deconvolution on images of text .",
    "since text images are highly structured  two - tone with thin sparse contours  a standard feed - forward architecture was able to achieve successful restoration .",
    "meanwhile , sun _",
    "et al . _",
    "@xcite considered a version of the problem with restrictions on motion blur types , and were able to successfully train a neural network to identify the blur in an observed natural image patch from among a small discrete set of oriented box blur kernels of various lengths .",
    "recently , schuler _ et al . _",
    "@xcite tackled the general blind motion deblurring problem using a neural architecture designed to mimic the computational steps of traditional iterative deblurring methods .",
    "they designed learnable layers to carry out extraction of salient local image features and kernel estimation based on these features , and stacked multiple copies of these layers to enable iterative refinement .",
    "remarkably , they were able to train this multi - stage network with relative success .",
    "however , while their initial results are very encouraging , their current performance still significantly lags behind the state of the art  @xcite  especially when the unknown blur kernel is large .    in this paper , we propose a new approach for blind deconvolution of natural images degraded by arbitrary motion blur kernels due to camera shake . at the core of our algorithm is a neural network trained to restore individual image patches .",
    "this network differs from previous architectures in two significant ways :    1 .   rather than formulate the prediction task as blur kernel estimation through iterative refinement ( as in @xcite ) , or as direct regression to deblurred intensity values ( as in @xcite )",
    ", we train our network to output the complex fourier coefficients of a _ deconvolution _ filter to be applied to the input patch .",
    "we use a multi - resolution frequency decomposition to encode the input patch , and limit the connectivity of initial network layers based on locality in frequency ( analogous to convolutional layers that are limited by locality in space ) .",
    "this leads to a significant reduction in the number of weights to be learned during training , which proves crucial since it allows us to successfully train a network that operates on large patches , and therefore can reason about large blur kernels ( _ e.g. _ ,  in comparison to @xcite ) .    for whole image restoration ,",
    "the network is independently applied to every overlapping patch in the input image , and its outputs are composed to form an initial estimate of the latent sharp image . despite reasoning with patches independently and not sharing information about a common global motion kernel , we find that this procedure by itself performs surprisingly well .",
    "we show that these results can be further improved by using the restored image to compute a global blur kernel estimate , which is finally used for non - blind deconvolution .",
    "evaluation on a standard benchmark  @xcite demonstrates that our approach is competitive when considering accuracy , robustness , and running time .",
    "let @xmath0 $ ] be the observed image of a scene blurred due to camera motion , and @xmath1 $ ] the corresponding latent sharp image that we wish to estimate , with @xmath2 indexing pixel location .",
    "the degradation due to blur can be approximately modeled as convolution with an unknown blur kernel @xmath3 : @xmath4 = ( x * k)[n ] + \\epsilon[n],\\quad k[n ] \\geq 0 , \\sum_n k[n ] = 1,\\ ] ] where @xmath5 denotes convolution , and @xmath6 $ ] is i.i.d .",
    "gaussian noise .    as shown in fig .",
    "[ fig : system ] , the central component of our algorithm is a neural network that carries out restoration locally on individual patches in @xmath0 $ ] .",
    "formally , our goal is to design a network that is able to recover the sharp intensity values @xmath7:n\\in p\\}$ ] of a patch @xmath8 , given as input a larger patch @xmath9:n\\in p^+\\}$ ] , @xmath10 from the observed image .",
    "the larger input is necessary since values in @xmath11 $ ] , especially near the boundaries of @xmath8 , can depend on those outside @xmath12 $ ] . in practice , we choose @xmath13 to be of size @xmath14 , with its central @xmath15 patch corresponding to @xmath8 . in this section ,",
    "we describe our formulation of the prediction task for this network , its architecture and connectivity , and our approach to training it .      as depicted in fig .",
    "[ fig : system ] , the output of our network are the complex discrete fourier transform ( dft ) coefficients @xmath16 \\in{\\mathbb{c}}$ ] of a deconvolution filter , where @xmath17 indexes two - dimensional spatial frequencies in the dft .",
    "this filter is then applied dft @xmath18 $ ] of the input patch @xmath19 $ ] : @xmath20 = g_{{p^+}}[z]~\\times~y_{{p^+}}[z].\\ ] ] our estimate @xmath21 $ ] of the sharp image patch is computed by taking the inverse discrete fourier transform ( idft ) of @xmath22 $ ] , and then cropping out the central patch @xmath23 . since @xmath1 $ ] and @xmath0 $ ] are both real valued and @xmath3 is unit sum , we assume that @xmath16 = g_{{p^+}}^*[-z]$ ] , and @xmath24 = 1 $ ] .",
    "therefore , the network only needs to output @xmath25 unique complex numbers to characterize @xmath26 , where @xmath27 is the number of pixels in @xmath13 .",
    "our training objective is that the output coefficients @xmath16 $ ] be optimal with respect to the quality of the final sharp intensities @xmath21 $ ] .",
    "specifically , the loss function for the network is defined as the mean square error ( mse ) between the predicted and true sharp intensity values @xmath21 $ ] and @xmath11 $ ] : @xmath28-x_p[n])^2.\\ ] ] note both the idft and the filtering in are linear operations , and therefore it is trivial to back - propagate the gradients of to the outputs @xmath16 $ ] , and subsequently to all layers within the network .    [ [ motivation . ] ] motivation .",
    "+ + + + + + + + + + +    as with any neural - network based method , the validation of the design choices in our approach ultimately has to be empirical . however , we attempt to provide the reader with some insight into our motivation for making these choices .",
    "we begin by considering the differences between predicting deconvolution filter coefficients and regressing directly to pixel intensities @xmath11 $ ] , as was done in most prior neural restoration methods  @xcite . indeed , since we use the predicted coefficients to estimate @xmath11 $ ] and define our loss with respect to the latter , our overall formulation _ can _ be interpreted as a regression to @xmath11 $ ] . however , our approach enforces a specific parametric form being enforced on the learned mapping from @xmath19 $ ] to @xmath11 $ ] . in other words , the notion that the sharp and blurred image patches are related by convolution is `` baked - in '' to the network s architecture . additionally , providing",
    "@xmath18 $ ] separately at the output alleviates the need for the layers within our network to retain a linear encoding of the input patch all the way to the output .",
    "another alternative formulation could have been to set - up the network to predict the blur kernel @xmath3 itself like in @xcite , which also encodes the convolutional relationship between the network s input and output .",
    "however , remember that our network works on local patches independently .",
    "for many patches , inferring the blur kernel may be impossible from local information alone  for example , a patch with only a vertical edge would have no content in horizontal frequencies , making it impossible to infer the horizontal structure of the kernel .",
    "but in these cases , it would still be possible to compute an optimal deconvolution filter and restored image patch ( in our example , the horizontal frequency values of @xmath16 $ ] would not matter ) .",
    "moreover , our goal is to recover the restored image patch and estimating the kernel solves only a part of the problem , since non - blind deconvolution is not trivial .",
    "in contrast , our predicted deconvolution filter can be directly applied for restoration , and because it is trained with respect to restoration quality , the network learns to generate these predictions by reasoning both about the unknown kernel and sharp image content .    it may be helpful to consider what the optimal values of @xmath16 $ ] should be .",
    "one interpretation for these values can be derived from wiener deconvolution  @xcite , in which ideal restoration is achieved by applying a filter using with coefficients given by @xmath29 = \\left(\\left|k[z]\\right|^2s_{{p^+}}[z]+\\sigma_\\epsilon^2\\right)^{-1 } k^*[z]s_{{p^+}}[z].\\ ] ] here , @xmath30 $ ] is the dft of the kernel @xmath3 , and @xmath31 $ ] is the spectral profile of @xmath32 $ ] ( _ i.e. _ ,  a dft of its auto - correlation function ) .",
    "note that in blind deconvolution , both @xmath31 $ ] and @xmath30 $ ] are unknown and iterative algorithms can be interpreted as explicitly estimating these quantities through sequential refinement .",
    "in contrast , our network is discriminatively trained to directly predict the ratio in .",
    ", @xmath33 ) , and high - pass @xmath34 frequency components .",
    "higher frequencies are sampled at a coarser resolution , and computed from a smaller patch centered on the input .",
    "( b ) our network regresses from this input encoding to the complex fourier coefficients of a restoration filter , and contains seven hidden layers ( each followed by a relu activation ) .",
    "the connectivity of the initial layers is limited to adjacent frequency bands .",
    "( c ) our network is trained with randomly generated synthetic motion blur kernels of different sizes.,scaledwidth=90.0% ]      our network needs to work with large input patches in order to successfully handle large blur kernels .",
    "this presents a challenge in terms of the number of weights to be learned and the feasibility of training since , as observed by @xcite and by us in our own experiments , the traditional strategy of making the initial layers convolutional with limited support performs poorly for deconvolution .",
    "this why the networks for blind deconvolution in @xcite have either used only fully connected layers  @xcite , or large oriented on - dimensional convolutional layers  @xcite .    we adopt a novel approach to parameterizing the input patch and defining the connectivity of the initial layers in our network .",
    "specifically , we use a multi - resolution decomposition strategy ( illustrated in fig .",
    "[ fig : arch ]  ( a ) ) where higher spatial frequencies are sampled with lower resolution .",
    "we compute dfts at three different levels , corresponding to patches of three different sizes ( @xmath35 and @xmath14 ) centered on the input patch , and from each retain the coefficients corresponding to @xmath36 .",
    "here , @xmath37 represents the larger magnitude of the two components ( horizontal and vertical ) of the frequency indices in @xmath17 .",
    "this decomposition gives us @xmath38 independent complex coefficients ( or @xmath39 scalars ) from each dft level that we group into `` bands '' .",
    "note that the indices @xmath17 correspond to different spatial frequencies @xmath40 for different sized dfts , with coefficients from the smaller - size dfts representing a coarser sampling in the frequency domain .",
    "therefore , the three bands above correspond to high- and band - pass components of the input patch .",
    "we also construct a low - pass band by including the coefficients corresponding to @xmath41 from the largest ( _ i.e. _ ,  , @xmath14 ) decomposition .",
    "this band only has @xmath42 scalar components ( @xmath43 complex coefficients and a scalar dc coefficient ) . as suggested in @xcite ,",
    "we apply a de - correlating linear transform to the coefficients of each band , based on their empirical covariance on input patches in the training set .",
    "note that our decomposition also entails a dimensionality reduction  the total number of coefficients in the four bands is lower than the size of the input patch .",
    "such a reduction may have been problematic if the network were directly regressing to patch intensities",
    ". however , we find this approximate representation suffices for our task of predicting filter coefficients , since the full input patch @xmath19 $ ] ( in the form of its dft ) is separately provided to for the computation of the final output @xmath21 $ ] .    as depicted in fig .",
    "[ fig : arch ]  ( b ) , we use a feed - forward network architecture with seven hidden layers to predict the coefficients @xmath16 $ ] from our encoding of the observed blurry input patch .",
    "units in the first layer are only connected to input coefficients from pairs of adjacent frequency bands  with groups of @xmath44 units connected to each pair .",
    "note that these groups do not share weights .",
    "we adopt a similar strategy for the next layer , connecting units to pairs of adjacent groups from the first layer .",
    "each group in this layer has @xmath45 units . restricting connectivity in this way , based on locality in frequency ,",
    "reduces the number of weights in our network , while still allowing good prediction in practice .",
    "this is not entirely surprising , since many iterative algorithms ( including @xcite ) also divide the inference task into sequential coarse - to - fine reasoning at individual scales .",
    "all remaining layers in our network are fully connected with @xmath46 units each .",
    "units in all hidden layers have relu activations  @xcite .",
    "our network was trained on a synthetic dataset that is entirely disjoint from the evaluation benchmark  @xcite .",
    "this was constructed by extracting sharp image patches from images in the pascal voc 2012 dataset  @xcite , blurring them with synthetically generated kernels , and adding gaussian noise .",
    "we set the noise standard deviation to @xmath47 to match the noise level in the benchmark  @xcite .",
    "the synthetic motion kernels were generated by randomly sampling six points in a limited size grid ( we generate an equal number of kernels from grid sizes of @xmath48 , @xmath49 , and @xmath50 ) , fitting a spline through these points , and setting the kernel values at each pixel on this spline to a value sampled from a gaussian distribution with mean one and standard deviation of half .",
    "we then clipped these values to be positive , and normalized the kernel to be unit sum .",
    "there is an inherent phase ambiguity in blind deconvolution",
    " one can apply equal but opposite translations to the blur kernel and sharp image estimates to come up with equally plausible explanations for an observation .",
    "while this ambiguity need not be resolved globally , we need our local @xmath16 $ ] estimates in overlapping patches to have consistent phase .",
    "therefore , we ensured that the training kernels have a `` canonical '' translation by centering them so that each kernel s center of mass ( weighted by kernel values ) is at the center of the window .",
    "figure  [ fig : arch ]  ( c ) shows some of the kernels generated using this approach .",
    "we constructed separate training and validation sets with different sharp patches and randomly generated kernels .",
    "we used about 520,000 and 3,000 image patches and 100,000 and 3,000 kernels for the training and validation sets respectively .",
    "while we extracted multiple patches from the same image , we ensured that the training and validation patches were drawn from different images .",
    "to minimize disk access , we loaded the entire set of sharp patches and kernels into memory .",
    "training data was generated on the fly by selecting random pairs of patches and kernels , and convolving the two to create the input patch .",
    "we also used rotated and mirrored versions of the sharp patches .",
    "this gave us a near inexhaustible supply of training data .",
    "validation data was also generated on the fly , but we always chose the same pairs of patches and kernels to ensure that validation error could be compared across iterations .",
    "we used stochastic gradient descent for minimizing the loss function , with a batch - size of 512 and a momentum value of 0.9 .",
    "we trained the network for a total of 1.8 million iterations , which took about 3 days using an nvidia titan x gpu .",
    "we used a learning rate of 32 ( higher rates caused gradients to explode ) for the first 800k iterations , at which point validation error began to plateau .",
    "for the remaining iterations , we dropped the rate by a factor of @xmath51 every 100k iterations .",
    "we kept track of the validation error across iterations , and at the end of training , used the weights that yielded the lowest value of that error .",
    "given an observed blurry image @xmath0 $ ] , we consider all overlapping patches @xmath52 in the image , and use our trained network to compute estimates @xmath53 of their latent sharp versions .",
    "we then combines these restored patches to form an initial an estimate @xmath54 $ ] of the sharp image , by setting @xmath54 $ ] to the average of its estimates @xmath21 $ ] from all patches @xmath55 that contain it , using a hanning window to weight the contributions from different patches .",
    "while this feed - forward and purely local procedure achieves reasonable restoration , we have so far not taken into account the fact that the entire image has been blurred by the same motion kernel .",
    "to do so , we compute an estimate of the global kernel @xmath56 $ ] , by relating the observed image @xmath0 $ ] to our neural - average estimate @xmath54 $ ] . formally , we estimate this kernel @xmath56 $ ] as @xmath57 subject to the constraint that @xmath56 > 0 $ ] and @xmath58 = 1 $ ] .",
    "we do not assume that the size of the kernel is known , and always estimate @xmath56 $ ] within a fixed - size support ( @xmath59 as is standard for the benchmark  @xcite ) . here ,",
    "@xmath60 $ ] are various derivative filters ( we use first and second order derivatives at 8 orientations ) .",
    "like in @xcite , we only let strong gradients participate in the estimation process by setting values of @xmath61 to zero except those at the two percent pixel locations with the highest magnitudes .",
    "this approach to estimating a global kernel from an estimate of the latent sharp image is fairly standard .",
    "but while it is typically used repeatedly within an iterative procedure that refines the estimates of the sharp image as well ( _ e.g. _ ,  in @xcite ) , we estimate the kernel only once from the neural average output .",
    "we adopt a relatively simple and fast approach to optimizing under the positivity and unit sum constraints on @xmath3 .",
    "specifically , we minimize @xmath62 regularized versions of the objective : @xmath63|,\\ ] ] for a small range of values for the regularization weight @xmath64 .",
    "this optimization , for each value of @xmath64 , can be done very efficiently in the fourier domain using half - quadratic splitting  @xcite .",
    "we clip each kernel estimate @xmath65 $ ] to be positive , set very small or isolated values to zero , and normalize the result to be unit sum .",
    "we then pick the kernel @xmath65 $ ] which yields the lowest value of the original un - regularized cost in .",
    "given this estimate of the global kernel , we use epll  @xcite  a state - of - the - art _ non - blind _ deconvolution algorithm  to deconvolve @xmath0 $ ] and arrive at our final estimate of the sharp image @xmath1 $ ] .",
    "we evaluate our approach on the benchmark dataset of sun _ et al . _",
    "@xcite , which consists of 640 blurred images generated from 80 high quality natural images , and 8 real motion blur kernels acquired by levin _",
    "et al . _",
    "we begin by analyzing patch - wise predictions from our neural network , and then compare the performance of our overall algorithm to the state of the art .    $ ] ( in terms of log - magnitude ) , the predicted filter coefficients @xmath66 $ ] from our network , the dft of the resulting restored patch @xmath67 $ ] , and the restored patch in the spatial domain . as comparison",
    ", we also show the ground truth sharp image patch and its dft , as well as the common ground truth kernel of the network and its dft . ]",
    "figure  [ fig : ffts ] illustrates the typical behavior of our trained neural network on individual patches . all patches in the figure are taken from the same image from  @xcite , which means that they were all blurred by the same kernel ( the kernel , and its fourier coefficients , are also shown ) . however , we see that the predicted restoration filter coefficients are qualitatively different across these patches .    while some of this variation is due to the fact that the network is reasoning with these patches independently , remember from sec .  [",
    "sec : form ] that we expect the ideal restoration filter to vary based on image content .",
    "the predicted filters in fig .",
    "[ fig : ffts ] can be understood in that context as attempting to amplify different subsets of the frequencies attenuated by the blur kernel , based on which frequencies the network believes were present in the original image . comparing the fourier coefficients of the ground truth sharp patch to our restored outputs",
    ", we see that our network restores many frequency components attenuated in the observed patch , without amplifying noise .",
    "these examples also validate our decision to estimate a restoration filter instead of the blur kernel from individual patches .",
    "most patches have no content in entire ranges of frequencies even in their ground - truth sharp versions ( most notably , the patch in the last row that is nearly flat ) , which makes estimating the corresponding frequency components of the kernel impossible .",
    "however , we are still able to restore these patches since that just requires identifying that those frequency components are absent .",
    "looking at the restored patches in the spatial domain , we note that while they are sharper than the input , they still have a lot of high - frequency information missing",
    ". however , remember that even our direct neural estimate @xmath54 $ ] of the sharp image is composed by averaging estimates from multiple patches at each pixel ( see fig .",
    "[ fig : system ] , and the supplementary material for examples of these estimates ) .",
    "moreover , our final estimates are computed by fitting a global kernel estimate to these locally restored outputs , benefiting from the fact that correctly restored frequencies in all patches are coherent with the same ( true ) blur kernel .",
    "next , we evaluate our overall method and compare it to several recent algorithms  @xcite on the sun _",
    "et al . _",
    "benchmark  @xcite .",
    "deblurring quality is measured in terms of the mse between the estimated and the ground truth sharp image , ignoring a fifty pixel wide boundary on all sides in the latter , and after finding the crop of the restored estimate that aligns best with this ground truth .",
    "performance on the benchmark is evaluated  @xcite using quantiles of the _ error ratio _",
    "@xmath68 between the mse of the estimated image and that of the deconvolving the observed image with the ground truth kernel using epll  @xcite .",
    "results with @xmath69 are considered to correspond to `` successful '' restoration  @xcite .     for different methods on the sun _",
    "et al . _",
    "@xcite benchmark .",
    "these errors were computed after using epll  @xcite for blind deconvolution using the global kernel estimates from each algorithm .",
    "the only exception is the `` neural average '' version of our method , where the errors correspond to those of our initial estimates computed by directly averaging per - patch neural network outputs , without reasoning about a global kernel . ]",
    "figure  [ fig : perfmet ] shows the cumulative distribution of the error - ratio for all methods on the benchmark .",
    "we also report specific quantiles of the error ratio ",
    "mean , and outlier performance in terms of @xmath70-ile and maximum value  as well as the success rate of each method in table  [ tab : rgt ] .",
    "the results for @xcite and @xcite were provided by their authors , while those for all other methods are from @xcite .",
    "results for all methods were obtained using epll for blind - deconvolution based on their kernel estimates , and are therefore directly comparable to those of our overall method .",
    "we also report the performance of our initial estimates from just the direct neural averaging step in fig .  [",
    "fig : perfmet ] and table  [ tab : rgt ] , which did not involve any global kernel estimation or the use of non - blind deconvolution with epll .",
    "the performance of the full version of our method performs is close to that of the two state - of - the - art methods of michaeli and irani  @xcite and sun _ et al .",
    "_  @xcite .",
    "while our mean errors are higher than those of both and @xcite and @xcite , we have a near identical success rate and better outlier performance than @xcite .",
    "note that our method outperforms the remaining algorithms by a significant margin on all metrics .",
    "the best amongst these is the efficient approach of xu and jia  @xcite which is able to perform well on many individual images , but has higher errors and succeeds less often on average than our approach and that of @xcite .",
    "figure  [ fig : scdiff ] compares the success rate of different methods over individual kernels in the benchmark , to study the effect of kernel size .",
    "we see that the previous neural approach of @xcite suffers a sharp drop in accuracy for larger kernel sizes .",
    "in contrast , our method s performance is more consistent across the whole range of kernels in @xcite ( albeit , our worst performance _ is _ with the largest kernel ) .",
    "in addition to accuracy , table [ tab : rgt ] also reports the running time for kernel estimation for all methods .",
    "we see that while our method has nearly comparable performance to the two state - of - the - art methods @xcite , it offers a significant advantage over them in terms of speed .",
    "a matlab implementation of our method takes a total of only 65 seconds for kernel estimation using an nvidia titan x gpu .",
    "the majority of this time , 45 seconds , is taken to compute the initial neural - average estimate @xmath71 .",
    "on the other hand , @xcite and @xcite take 91  minutes and 38 minutes respectively , using the matlab / c implementations of these methods provided by their authors on an i-7 3.3ghz cpu with 6 cores .    while @xcite s running times could potentially be improved if they are reimplemented to use a gpu , their ability to benefit from parallelism is limited by the fact that both are iterative techniques whose computations are largely sequential ( in fact , we only saw speed - ups of 1.4x and 3.5x in @xcite and @xcite , respectively , when going from one to six cpu cores ) .",
    "in contrast , our method maps naturally to parallel architectures and is able to fully saturate the available cores on a gpu .",
    "batched forward passes through a neural network are especially efficient on gpus , which is what the bulk of our computation involves  applying the local network _ independently _ and in - parallel on all patches in the input image .",
    "some methods in table [ tab : rgt ] are able to use simpler heuristics or priors to achieve lower running times .",
    "but these are far less robust and have lower success rates@xcite has the best performance amongst this set .",
    "our method therefore provides a new and practically useful trade - off between reliability and speed .    in fig .",
    "[ fig : res ] , we show some examples of estimated kernels and deblurred outputs from our method and those from @xcite . in general , we find that most of the failure cases of @xcite correspond to scenes that are a poor fit to their hand - crafted generative image priors_e.g . _ ,  most of @xcite s failure cases correspond to images that lack well - separated strong edges .",
    "our discriminatively trained neural network derives its implicit priors automatically from the statistics of the training set , and is relatively more consistent across different scene types , with failure cases corresponding to images where the network encounters ambiguous textures that it ca nt generalize to .",
    "we refer the reader to the supplementary material and our project website at http://www.ttic.edu/chakrabarti/ndeblur for more results .",
    "the matlab implementation of our method , along with trained network weights , is also available at the latter .",
    "in this paper , we introduced a neural network - based method for blind image deconvolution .",
    "the key component of our method was a neural network that was discriminatively trained to carry out restoration of individual blurry image patches .",
    "we used intuitions from a frequency - domain view of non - blind deconvolution to formulate the prediction task for the network and to design its architecture .",
    "for whole image restoration , we averaged the per - patch neural outputs to form an initial estimate of the sharp image , and then estimated a global blur kernel from this estimate .",
    "our approach was found to yield comparable performance to state - of - the - art iterative blind deblurring methods , while offering significant advantages in terms of speed .",
    "we believe that our network can serve as a building block for other applications that involve reasoning with blur .",
    "given that it operates on local regions independently , it is likely to be useful for reasoning about spatially - varying blur_e.g .",
    "_ ,  arising out of defocus and subject motion .",
    "we are also interested in exploring architectures and pooling strategies that allow efficient sharing of information across patches .",
    "we expect that such sharing can be used to communicate information about a common blur kernel , to exploit `` internal '' statistics of the image ( which forms the basis of the method of @xcite ) , and also to identify and adapt to texture statistics of different scene types ( _ e.g. _ ,  @xcite demonstrated improved performance when training and testing on different image categories ) ."
  ],
  "abstract_text": [
    "<S> we present a new method for blind motion deblurring that uses a neural network trained to compute estimates of sharp image patches from observations that are blurred by an unknown motion kernel . instead of regressing directly to patch intensities , this network learns to predict the complex fourier coefficients of a deconvolution filter to be applied to the input patch for restoration . for inference , we apply the network independently to all overlapping patches in the observed image , and average its outputs to form an initial estimate of the sharp image . </S>",
    "<S> we then explicitly estimate a single global blur kernel by relating this estimate to the observed image , and finally perform non - blind deconvolution with this kernel . </S>",
    "<S> our method exhibits accuracy and robustness close to state - of - the - art iterative methods , while being much faster when parallelized on gpu hardware .    </S>",
    "<S> = 1 </S>"
  ]
}
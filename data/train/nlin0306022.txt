{
  "article_text": [
    "the virtual ant is a system defined by c. langton  @xcite on the two - dimensional square lattice : each cell is in one of two states , _ to - left _ or _ to - right_. the ant is an arrow between two adjacent cells .",
    "it moves one cell forward at each time step , in the direction it is heading .",
    "that direction is changed according to the state of the cell where the ant arrives ( it turns to the left or to the right ) ; the state of the cell is changed after the ant s visit . the ant may be seen as a cellular automaton with von neumann s neighborhood , or as the head of a two - dimensional turing machine .",
    "interesting behavior follows : a single ant , starting with all cells in _ to - left _ state , has a more or less symmetric trajectory in the first 500 steps ; then it goes seemingly randomly for about 10,000 steps , until it suddenly starts building an infinite diagonal `` highway '' ( a periodic motion with drift ) .",
    "the complex behavior of such a `` simple '' system motivated several studies , both experimental and analytical , as well as some generalizations and variants .",
    "the rule has been generalized to allow more than two states of the cell @xcite , and to consider several ants @xcite .",
    "it has also been adapted to different regular lattices @xcite and to planar finite graphs @xcite .",
    "the ant has been studied as a paradigm for signal propagation in random media , in particular as a model of a particle in 2d lorentz lattice gases when the particle interacts with the scatterers that occupy the space and affect its trajectory  @xcite .",
    "a * decision problem * is one where the solution , for a given instance , is yes or no .",
    "it is said to be @xmath0 if there is an algorithm which answers the question in a finite time .",
    "decidable problems are classified in * complexity classes * , which describe the amount of work needed to solve them . an important class is @xmath1 : problems whose solution can be found in polynomial time . a problem to which any problem in @xmath1 can be reduced",
    "is called @xmath1-hard ; if it also belongs to @xmath1 , is called @xmath1-complete .",
    "thus , to show that a problem is @xmath1-hard , it s enough to reduce a @xmath1-complete problem to it . here",
    "we say that a problem @xmath2 is reduced to a problem @xmath3 ( equivalently , that @xmath3 reduces @xmath2 ) , if there is a function @xmath4 computable using a logarithmic amount of space in the size of the input , such that @xmath5 is a positive instance of @xmath2 iff @xmath6 is one of @xmath3 .",
    "we say that a * system * is @xmath7 if it may simulate a universal turing machine .",
    "this notion of universality implies , in particular , the existence of undecidable problems .",
    "the complexity and undecidability of problems associated to a dynamical system , as well as the existence of some kind of universality in it , are ways to measure the unpredictability of the system . for definitions and results from complexity",
    "theory , we refer to @xcite .",
    "there are very few results concerning the dynamics of the ant .",
    "the main one says that _ for any initial configuration , the trajectory of the ant is unbounded .",
    "this has been generalized to the following : the set of cell that are visited infinitely often by the ant ( for a given initial configuration ) has no _ corners _",
    "a corner of a set is a cell where at least two neighbors are not in the set , and these are not opposite to each other .",
    "unfortunately , it does nt tell us anything else about the behavior of the ant in the long term . the experiments , however , suggest that the long - term behavior of the ant , although unbounded , is unbounded in a highly repetitive way .",
    "specifically , it is conjectured : _ for any initial configuration with finite support , the ant eventually starts building the periodic highway , in some unobstructed direction . _",
    "( here , a configuration is said to have finite support if all but a finite number of cells are in the same state ) .",
    "if the conjecture is true , then any problem associated to the ant , whose input is an initial configuration with finite support , is decidable , for in that case , it suffices to iterate on the configuration until the highway appears",
    ". the question may be answered at that point , since the future dynamics is easily predicted .",
    "we will present a construction that will allow the representation of any boolean circuit as a finite configuration in the lattice .",
    "the input variables are represented with the states of certain cells , the calculation of the circuit is performed by the trajectory of a single ant , and the result is written , again , as the states of certain cells .",
    "the first consequence of this construction is a lower bound for the complexity of the system :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ there exists a problem ( `` does the ant ever visit this given cell ? '' ) which reduces a @xmath1-complete problem ( the calculation of a boolean circuit ) and therefore is @xmath1-hard . _",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    on the other hand , the construction allows us to simulate any linear cellular automaton for configurations where only a finite number of cells change their states at each time .",
    "the consequences are two :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ the system is capable of universal computation , since it is able to simulate the dynamics of a universal turing machine . _",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ there are undecidable problems associated to the behavior of the ant . _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _",
    "given any boolean circuit , we ll show how to build a configuration , where the input variables are represented by states at certain locations , and the result is calculated by the trajectory of a single ant ( and is written in a predetermined location ) .",
    "for technical reasons , each of our one - bit input and output registers consist of two horizontally adjacent cells rather than one ; this makes it possible for the ant to visit a register without visiting any other nearby cells in that row , and will be seen later to facilitate the re - use of the output register of one logic gate as an input register to a later gate .",
    "we construct logical gates with the form described in figure [ fig : gate ] .    at the top of the gate , we have some cells whose states represent the input . at the bottom ,",
    "some cells represent the output ; at the beginning , all output cells are in the _ to - left _ state which will represent the logical value false .",
    "the ant enters the gate from the left , follows some path inside of the gate , and exits the gate heading to the right .",
    "while being in the gate , the ant visits the input cells , and visits ( and switches ) the correct output cells , according to the function which the gate represents .",
    "the changes are done _ from inside _",
    ", thus allowing the output cell to be used as the input cell for another gate .    to compute a boolean circuit we just put the input variables in some cells at the top of the configuration ( see figure [ fig : circ ] ) , and for the consecutive stages of evaluation we put consecutive rows of logical gates",
    ". the ant will go through every row , starting with the upper one . after going through the last row",
    ", the state of the last output cell will contain the evaluation of the circuit for the given input ( to change from one row to the next we must construct right - to - left versions of the gates , thus allowing the ant to compute alternate rows in different directions ) .",
    "after that , we assure that the ant will never return to this cell by leading it to a `` highway seed '' ( see figure [ fig : high ] ) .    to write a boolean circuit it is enough to have the not and the and functions . to construct the circuit we also use gates that allow us to duplicate , cross and copy variables .    the way to design the gates is represented in figure [ fig : not ]",
    "let us describe how the not gate works .",
    "the ant visits the input cell , and depending on its state the ant will follow different paths .",
    "if the input cell is in the _ to - left _ state ( logical value false ) , the ant goes to the output cell and changes its state from false to true , and then exits .",
    "if the input cell is in the _ to - right _ state ( logical value true ) , the ant goes directly to the exit .",
    "this is the general scheme of the gates : some of the allowed trajectories pass through the output register(s ) and some do not , before they rejoin .",
    "the ant chooses its path through the gate in accordance with the input registers , either passes through the output register(s ) ( changing the states ) or not , and then exits the gate .",
    "now , let us see how the gates can be embedded in the lattice .",
    "figure [ fig : dev ] shows the configurations for three kinds of crossings ( a , b , c ) , the junction ( j ) , and the paths .    *",
    "* a : * if the ant first enters at 1 , it exits at 2 .",
    "if afterwards it enters at 3 , it exits at 4 ( see figure [ fig : dev ] ) . *",
    "* b : * if the ant first enters at 1 , it exits at 2 .",
    "if afterwards it enters at 3 , it exits at 4 .",
    "but if it enters first at 3 , it also exits at 4 .",
    "* * c : * it works as * b * , but with different relative positions of the input cells . *",
    "* j : * if the ant enters by 1 or by 2 , it exits by 3 . *",
    "* path : * is the configuration that forces the ant to follow a determined trajectory , allowing it to visit the input and the output cells in the required way .",
    "a double line with a free extremity may be used as a bent path , since the ant will use both sides , turning around the extrem .",
    "figures  [ fig : grid1 ] , [ fig : grid2 ] and [ fig : grid3 ] show the final version of the logical gates .",
    "the following problem is known to be @xmath1-complete @xcite :    * ( b ) * given a boolean circuit ( bc ) and a truth assignment . does the truth assignment satisfy ( bc ) ?    in the previous section we established a function that transforms an instance of * ( b ) * into an instance of the following problem :    * ( p ) * given a finite initial configuration of @xmath8 , a given initial position of the ant and a cell @xmath9 .",
    "does the ant ever visit @xmath9 ?    since an instance of * ( b ) * is positive",
    "if and only if its image in * ( p ) * is positive , the transformation is a reduction from * ( b ) * to * ( p)*. this reduction is polynomial : the number of rows in the gate is bounded by two times the height @xmath10 of the bc plus the number of crossings , i.e. , @xmath11 , where @xmath12 is the width of the bc .",
    "the number of gates in each row is bounded by @xmath12 .",
    "that implies that the number of _ to - right _ cells ( @xmath13 ) necessary to simulate an @xmath14 bc is bounded by @xmath15 .",
    "the algorithm that defines the simulating configuration in @xmath8 needs only logarithmic space ; all it has to do is to read and translate the boolean circuit .",
    "for this purpose , it has to memorize numbers such as the position of the symbol that is being translated and the current height of the circuit ; these numbers are bounded by the size of the input , and can be recorded in polynomial space .",
    "the output of this `` drawing '' algorithm is the list of coordinates of cells in the _ to - right _ state , and is polynomial in the length of the input .",
    "this is all we need to legitimate the reduction , and we conclude that * ( p ) * is @xmath1-hard .    in a cellular automata ( ca ) , a _ quiescent state _ is defined by the following property : if a cell and all its neighbors are in the quiescent state , the cell remains in it at the next iteration . hence , all the dynamics of the system takes place at the cells in non - quiescent states and their neighbors . an initial configuration with a finite support ( number of non - quiescent states ) will keep this property through the iterations of the ca .",
    "remember that the ca transition rule can be calculated with a multi - output finite boolean circuit .",
    "so , for a given linear ca with quiescent state , we can define an initial configuration on the lattice consisting of infinitely many copies of this circuit , arranged in an infinite trapezoidal array with top row of length @xmath16 , as shown in figure  [ fig : ca ] .",
    "any initial configuration of the ca whose support has width less than @xmath16 can be written as the input of the first row , and the ant simulates the ca .",
    "for widths bigger than @xmath16 , just put the initial configuration in a lower row , and let the ant start running from the appropriate cell .",
    "it follows that the undecidability of some ca problems is inherited by the ant system .",
    "for instance , the problem of knowing whether a given ( finite ) word @xmath17 will ever appear in the evolution of a given linear ca , for a given initial configuration with ( finite ) support @xmath18 , is reduced to the problem of deciding whether a given ( finite ) block ever appears in the evolution of the ant , for a given ( infinite ) initial configuration of the lattice . since a turing machine can be simulated by a linear ca with quiescent state ,",
    "the ant is also universal .",
    "the construction given here leads us to the following results about the dynamics of a single langton s ant :    * the system is @xmath1-hard , in the sense that it admits a @xmath1-hard problem .",
    "the @xmath1-hard problem that was shown is associated with initial configurations with finite support . *",
    "the system is capable of universal computation . in spite of being a rather weak notion of universality ( which requires an infinite but finitely described configuration )",
    ", it shows that the dynamics of the system is highly unpredictable . *",
    "a direct consequence of the previous point is the existence of undecidable problems .",
    "we notice that this result refers to problems associated with initial configurations with infinite support .",
    "there are some open issues related to these results .",
    "one of them relates to the complexity ; the existence of universal computation suggest that p - hardness is far from being a tight lower bound , and it would be interesting to reduce some @xmath19-complete problem to a problem of our system .    on the other hand , the decidability of problems whose input is a configuration with finite support remains an open question .",
    "a positive answer would be given if the conjecture stated in [ previous ] is found to be true .    9    o. beuret , m. tomassini , behaviour of multiple generalized langton s ants , _ artificial life v _ ( 1997 ) 4550 .",
    "l. bunimovich , s. troubetzkoy , recurrence properties of lorentz lattice gas cellular automata , _ j. of stat . physics._*67 * ( 1992 ) 289302 .",
    "l. bunimovich , s. troubetzkoy , topological dynamics of flipping lorentz lattice gas models , _ j. of stat . physics._*72 * ( 1993 ) 297302 .",
    "l. bunimovich , s. troubetzkoy , rotators , periodicity , and absence of diffusion in cyclic cellular automata , _ j. of stat . physics._*74 * ( 1994 ) 110 .",
    "b. chopard , complexity and cellular automata models , in : s. ciliberto , t. dauxois , m. droz eds . , _ physics of complexity _ , ( editions frontieres , gif - sur - yvette , 1995 ) .",
    "e. cohen , new types of diffusion in lattice gas cellular automata , in : m. mareschal , b. holian , eds . , _ microscopic simulations of complex hydrodynamic phenomena _ , ( plenum press , 1992 ) .",
    "a. gajardo , e. goles , ant s evolution in a one - dimensional lattice , preprint , 1998 .",
    "a. gajardo , j. mazoyer , langton s ant on @xmath20 graphs , preprint , 1999 .",
    "d. gale , the industrious ant , _ the mathematical intelligencer._*15(2 ) * ( 1993 ) 5458 .",
    "d. gale , j. propp , further ant - ics , _ the mathematical intelligencer._*16(1 ) * ( 1994 ) 3742 .",
    "d. gale , j. propp , s. sutherland , s. troubetzkoy , further travels with my ant , _ the mathematical intelligencer._*17(3 ) * ( 1995 ) 4856 .",
    "d. gale , _ tracking the automatic ant and other mathematical explorations _ ( springer verlag , n.y . , 1998 ) .",
    "p. grosfils , j. p. boon , e. cohen , l. bunimovich , propagation and organization in a lattice random media , preprint , 1999 .",
    "x. kong , e. cohen , diffusion and propagation in a triangular lorentz lattice gas cellular automata , _ j. of stat .",
    "physics._*62 * ( 1991 ) 737 .",
    "c. langton , studying artificial life with cellular automata , _",
    "physica d._*22 * ( 1986 ) 120149 .",
    "a. moreira , a. gajardo , e. goles , langton s ant on planar finite graphs , preprint , 2000 .    c. papadimitriou , _ computational complexity _",
    "( addison - wesley , 1994 ) .",
    "m. sipser , _ introduction to the theory of computation _",
    "( pws publishing company , 1996 ) .",
    "s. troubetzkoy , lewis ",
    "parker lecture 1997 the ant , _ alabama journal of mathematics._*21(2 ) * ( 1997 ) .",
    "f. wang , _ ph.d .",
    "dissertation _ , ( the rockefeller university , 1995 ) .",
    "* figure 1 : * a sketch of a gate .",
    "the ant computes the logical gate and changes the states of the output cells . at the beginning the output cells are in the _ to - left _ state , representing the logical value _",
    "false_.    * figure 2 : * the xor function , built upon and , not , cross , copy and duplicate gates .",
    "the ant computes the logical circuit ( @xmath21 ) row by row .",
    "the circuit is satisfied iff the ant visits the output cell , for the given input .",
    "* figure 3 : * highway seed . after entering at the indicated point",
    ", the ant never crosses the bold lines again , and starts building a highway in the direction of the diagonal arrow .",
    "white stands for the _ to - left _ state , black for _ to - right_.            * figure 8 : * copy and duplicate gates .",
    "the location of the output in the copy gate can be changed in the horizontal axis , allowing us to fit the positions of the output variables of a row into the inputs of the following row .",
    "* figure 9 : * the ant simulates each iteration of the ca in a row of gates , crosses the repetitions of the outputs ( preparing the next input ) and goes to the next row .",
    "@xmath4 stands for the circuit that calculates the rule ."
  ],
  "abstract_text": [
    "<S> the virtual ant introduced by c. langton has an interesting behavior , which has been studied in several contexts . here </S>",
    "<S> we give a construction to calculate any boolean circuit with the trajectory of a single ant . </S>",
    "<S> this proves the p - hardness of the system and implies , through the simulation of one dimensional cellular automata and turing machines , the universality of the ant and the undecidability of some problems associated to it . </S>",
    "<S> + complements and applet at http://www.dim.uchile.cl/  agajardo / langton </S>"
  ]
}
{
  "article_text": [
    "modern computer architectures result from a rapidly growing evolution that can be traced back to the 1960 s , when moore observed that the number of transistors per integrated circuit displayed an exponential growth and predicted that this trend would continue  @xcite .",
    "the so - called moore s law has indeed been maintained during the last 40 years , as transistor density doubled approximately every 18 months .",
    "consequently , today computer processors rely on amazingly high numbers of transistors : the widespread intel   pentium   4 contains 42 million transistors but the more recent itanium   2 possesses 410 million of them .",
    "furthermore , a constant of this evolution is that processor speed ( especially , its clock rate ) by far outperforms memory operations .",
    "hence , most recent advances in the field have mainly aimed at hiding memory latencies using engineering solutions ( parallel executions , pipelining , cache memory systems ) . but this necessarily came with further increases of the processor complexity . + as a consequence , predicting the precise performance of microprocessors ( the number of instructions executed each second ) during execution of programs running on modern computer architectures has become increasingly difficult .",
    "for instance , one efficient way to optimize computer performance for a given program consists in fine - tuning the compiler options to adapt the compiler work to the considered architecture .",
    "yet the complexity of modern architectures is such that rational optimizations , guided by a thorough knowledge of the architecture , are now less efficient , up to the point that more systematic automated search methods based on machine - learning  @xcite , genetic algorithms  @xcite or iterative trial - and - error techniques  @xcite are being investigated as possible replacements .",
    "+ hence , on the basis of the high number of their components dedicated to performance improvement and the intricacy of their interactions , the instantaneous performance of modern microprocessors may be viewed as a complex system . as a consequence ,",
    "performance recordings during the execution of certain programs can be highly variable  @xcite and difficult to predict  @xcite . analyzing and predicting performance ( i.e.",
    "the rate at which the microprocessor will execute a given program ) has proven increasingly difficult .",
    "+ early on , computer architects dismissed modeling as inappropriate because it was too inaccurate to capture the slight performance differences between two architecture mechanisms .",
    "for instance , even modeling of a single non - trivial architecture component such as a cache memory spawned decades of research  @xcite , and proved only partially successful a few years ago for a range of programs with fairly regular behavior and simplistic architectures  @xcite . instead , computer architects have always relied upon detailed simulators which describe the architecture behavior on every cycle  @xcite . as a consequence ,",
    "simulators execute a program about 10000 times slower than on a real architecture , and this technique is now becoming overly time - consuming and inappropriate for complex processors and future processors with a large number of cores .",
    "consequently , novel approaches to understanding and anticipating system behavior are currently sought in the computer architecture community  @xcite .",
    "+ in the present paper , we study the time - evolution of the performance during execution of several prototypical programs on prototypical modern microprocessors .",
    "we record several metrics characterizing execution performance ( number of instruction executed at each processor cycle ) and memory operations ( cache misses ) . treating these traces as time - varying signals",
    ", we analyze them using current techniques from nonlinear time series analysis . besides regular periodic behaviors , we evidence highly variable performance evolutions for several programs .",
    "more interestingly , we show that , although the high variability displayed by several programs can be attributed to stochastic - like sources , the evolution of performance during the execution of several others displays clear evidences of deterministic chaos , with sensitivities to initial conditions that are comparable to textbook chaotic systems .",
    "+ the remaining of the paper is organized as follows .",
    "section  [ sec : trace ] describes the setup and methodologies used to obtain the time series we analyzed . because of the interdisciplinary relevance of this work and considering that we applied a variety of methods , we present in section  [ sec : timeseries ] a rapid overview of the time series analysis techniques we employed .",
    "section  [ sec : bzip2 ] illustrates the existence of chaotic performance trace with the example of the execution of the program ` bzip2 ` .",
    "stochastic - like performances are also evidenced in section  [ sec : vpr ] and the example of the program ` vpr ` .",
    "finally , we present for comparison in section  [ sec : applu ] the performance displayed during ` applu ` execution , as a prototype of regular periodic evolution .",
    "section  [ sec : conclusion ] discusses possible explanations for the observed behaviors and present potential implications in practical applications .",
    "the time series shown in this article were obtained using a processor _",
    "simulator_. a simulator is a large program that implements a detailed description of the computer microarchitecture ( at the level of a clock cycle and bits ) , and it is the tool used by computer architects to design and try out various processor options .",
    "the simulator is fed with an instruction trace , corresponding to a given program executing a given data set .",
    "and the purpose of the simulator is to understand how many cycles are necessary to execute this instruction trace , as well as to expose the internal operations of the processor for analysis .",
    "+ a real processor , such as the pentium 4 , also embeds hardware counters that collect some statistics on its internal operations",
    ". however statistics are sampled infrequently ( and thus too coarsely ) in order to avoid disrupting normal processor operations , which is not appropriate in our case .",
    "also , such counters make it hard to distinguish between the multiple programs ( and the operating system ) which time - share the processor , so that it is not obvious or just impossible to reconstruct the time series for a single program",
    ". + still , the simulator we used , called simplescalar  @xcite , corresponds to the architecture of a typical modern superscalar processor ( the pentium 4 is also a superscalar processor ) .",
    "it is currently used in more than 50% of computer architecture research articles .",
    "it has been validated at 15% accuracy against a fairly recent superscalar processor ( the hp alpha 21264 ) used in many servers  @xcite .",
    "+ on this simulator , we ran the 26 spec benchmark programs composing the so - called spec suite ( we used the spec2000 version of the benchmark suite ) .",
    "a benchmark is a program selected as `` representative '' of an application domain .",
    "and the spec benchmark suite is the most widely used to evaluate and compare the performance of new computer and processor architectures .",
    "each benchmark comes with three data sets , with two data sets being voluntarily small and medium size ( respectively labeled ` test ` and ` train ` ) .",
    "all experiments in this article were conducted with the third and most realistic data set , called ` ref ` ( for `` reference '' ) . in some cases ( e.g. ` bzip2 ` ) , the ` ref ` data set proposes several input data .",
    "+ during the execution , we collected 3 performance metrics : the ipc , the l1 and l2 miss rates .",
    "the ipc stands for the average number of _ instructions per cycle _ and is the typical global performance metric for superscalar processors .",
    "l1 and l2 respectively correspond to the first - level and second - level cache , small and fast memories used in all processors and aiming at hiding the main memory latency .",
    "the l1 and l2 form a memory hierarchy , with the l1 being closer to the processor , and smaller but faster than the l2 .",
    "the miss rate is the percentage of processor requests that can not be served by the cache ( the request is then sent to the lower level of the hierarchy ) , and it thus characterizes the cache efficiency .",
    "the cache behavior has a strong impact on performance , so besides the global ipc metric , the caches miss rates are key performance metrics .",
    "+ running an entire program requires the execution of several billion instructions , so that it is technically impossible to handle execution traces that would both cover the entire program execution and display the value of the chosen metric for _ each clock cycle_. furthermore , modern microprocessors rely heavily on speculative execution : upon encounter of a conditional branching , the microprocessor begins to execute one of the branch alternative before the outcome of the conditional branch test is known ( i.e. before the microprocessor knows which branch should actually be taken ) .",
    "in other words , at a given clock cycle , the microprocessor might be executing several instructions that can possibly be discarded from the program flow a moment later . in this framework , measuring performance is meaningful only if measurements are time averages .",
    "accordingly , our execution traces present _ averages of the metric _ over a certain number @xmath0 of consecutively executed instructions ( where we have used @xmath1 instructions ) .",
    "nonlinear time series methods are based around dynamical systems ( continuous - time ordinary differential equations and iterated maps ) .",
    "hence , they can be powerful tools for analyzing microprocessor behaviors only if they display the same computation power as microprocessors . more specifically , because microprocessors are capable of universal computing ( they are turing machines ) , they should also be universal .",
    "recent works have clearly stated that dynamical systems are indeed capable of universal computation .",
    "for instance , discrete - time dynamical systems are computationally universal , as several of them have been demonstrated to be able to simulate the computation of a turing machine .",
    "this is the case of piecewise - linear maps in @xmath2  @xcite , cellular automata  @xcite , and neural networks ( especially recurrent networks with rational or real weights and saturated linear  @xcite or sigmoid  @xcite activation function ) .",
    "universal computation has also been evidenced for several continuous - time dynamical systems , including ordinary differential equations  @xcite , partial differential equations  @xcite , and continuous - time hopfield neural networks  @xcite .",
    "hence , analysis techniques based on dynamical systems , such as nonlinear time series methods , are susceptible to be powerful tools for analyzing microprocessor behaviors .",
    "+ the program traces were analyzed using a variety of methods for nonlinear time series analysis that we briefly present in this section .",
    "note that for most of these methods , we used the tisean routine package  @xcite .",
    "+ let @xmath3 be the time series under consideration .",
    "each value @xmath4 of the time series is the average of the metric over a number @xmath0 of consecutively executed instructions ( see  [ sec : timeseries ] ) . in other words",
    ", @xmath4 represents the average value of the metric between the execution of instruction number @xmath5 and that of instruction number @xmath6 . for this reason",
    ", we can reasonably consider that the state - space of our time series is continuous .",
    "accordingly , the continuous nature of our measurements can readily be judged from visual inspection of these time series .",
    "indeed , in every figure of the paper , we plot the obtained values as isolated dots , i.e. _ we do not join successive values with lines_. hence , the continuous aspect of the curves plotted on figure  [ fig:1 ] a & b , for instance , is not a plotting artifact , but reflects the continuity of the values adopted by the successive values of the time series .      to study the presence of temporal correlations amongst time series , we used two complementary methods : spectral analysis and detrended fluctuation analysis .",
    "spectral analysis is based on the fourier spectrum of the time series .",
    "if a sequence has long - range ( power - law ) correlations , its power spectrum @xmath7 is related to the frequency @xmath8 through a power law @xmath9 where @xmath10 is the spectral exponent .",
    "uncorrelated white noise contains all possible frequencies and is characterized by the exponent @xmath11 .",
    "so called `` fractal '' time series display strictly positive @xmath10 .",
    "for instance , @xmath12-noise defines signals with @xmath13 while @xmath14 for brown noise  @xcite .",
    "+ contrarily to spectral analysis , detrended fluctuation analysis ( dfa ) permits the detection of long - range correlations in nonstationary data ( i.e. signals that do not display a constant mean value ) and avoids spurious detections of apparent long - range correlations that are possible with spectral analysis  @xcite .",
    "the time series is first integrated : @xmath15 $ ] , where @xmath16 is the @xmath17th value of the time series and @xmath18 its average over the series .",
    "the integrated time series is then divided into time windows of equal duration @xmath19 . in each window ,",
    "the least - squares fitted line ( the local trend ) is computed .",
    "the @xmath20 coordinate of the straight line segments is denoted by @xmath21 .",
    "the integrated signal @xmath22 is next detrended by subtracting the local linear trend @xmath21 in each window .",
    "the average root - mean - square fluctuation of this integrated and detrended time series is computed as @xmath23 ^ 2}\\ ] ] the procedure is repeated over all time scales ( window duration ) @xmath19 . typically for fractal time",
    "series , @xmath24 increases as a power - law of @xmath19 @xmath25 a value of @xmath26 characterizes an uncorrelated signal , such as a white noise , whereas @xmath27 indicates the presence of long - range positive ( persistent ) temporal correlations .",
    "note that periodic signals have @xmath28 for time scales larger than their period of repetition . + these tests are complementary because it has been evidenced that , using one of these methods alone , the presence of long - range correlations may be artifactually detected , while agreement between independently obtained values of @xmath29 and @xmath10 according to theoretically derived relationships limits the risk of spurious determinations  @xcite .",
    "most dynamical systems possess many degrees of freedom and take place in multi - dimensional phase space . yet ,",
    "the vast majority of real - life time series are single - valued , and even if multiple simultaneous measurements are available , they rarely are in sufficient number to cover all the degrees of freedom of the system .",
    "however the missing information can be recovered by reconstructing the original attractor on the basis of a single - valued time series .",
    "actually , the evolution of any single variable of a dynamical system is determined by the other variables with which it interacts .",
    "the basic idea of embedding methods for attractor reconstruction is thus that information about the relevant variables is implicitly contained in the history of any single variable .",
    "a delay reconstruction with delay time @xmath30 and embedding dimension @xmath31 is obtained by forming a new vector time series @xmath32 in an @xmath31-dimensional embedding space according to @xmath33 takens embedding theorem  @xcite states that , for sufficiently large @xmath31 , the geometry of @xmath32 in the embedding space captures the topological properties of the original attractor in its natural phase - space .",
    "hence , characterization methods originally dedicated to the original attractor can identically be applied to the reconstructed one  @xcite .",
    "+ the determination of `` optimal '' values for the embedding parameters is a delicate step in attractor reconstruction because this procedure can amplify noise in real - life time series  @xcite .",
    "there are currently two major methods for estimating the time delay @xmath30 .",
    "the first consists in setting @xmath30 as the time necessary to cancel the correlation between two time series values and thus selecting the first zero - crossing of the signal auto - correlation function or the time at which it has dropped to @xmath34 of its initial value  @xcite .",
    "an alternative approach sets @xmath30 as the first minimum of the time delayed ( average ) mutual information function  @xcite .",
    "the question of which of these two methods should be used is still an open problem  @xcite . in this paper , we estimated for each data sets both the first zero - crossing of the autocorrelation function and the first minimum of the average mutual information . in the rare cases where the corresponding estimates were not similar , we set @xmath30 to the value given by the latter method .",
    "+ the most frequent method for determining the embedding dimension @xmath31 is called the _ false nearest neighbor _ method  @xcite . briefly ,",
    "suppose the correct embedding dimension is @xmath35 , i.e. for @xmath36 , the reconstructed attractor is a one - to - one image of the original one .",
    "if one attempts to embed the time series in a @xmath31-dimensional space with @xmath37 , the topology of the attractor will not be conserved , so that several points will be projected into neighborhoods of other points , to which they would not belong in higher dimensions .",
    "hence , if two points are found in proximity in the embedding space , this can be due either to the dynamics that brought them close , or to an overlap resulting from the projection of the attractor to an insufficient dimension , in which case these points are referred to as ` false neighbors ' . by comparing the euclidean distance between two points in consecutive embedding dimensions @xmath31 and @xmath38 , it is possible to quantify the percentage of false neighbors at embedding dimension @xmath31  @xcite .",
    "the optimal dimension is then defined as the minimal dimension for which the percentage of false neighbors is zero or at least , sufficiently small .",
    "recurrence plots are graphical representations suited to qualitatively assess the presence of patterns and nonlinearities , even in short and nonstationary time series  @xcite .",
    "it consists in computing the distances between all pairs of vectors in the embedded time series , applying a threshold @xmath39 to the resulting distance matrix @xmath40 where @xmath41 is the number of points of the attractor , @xmath42 is the heaviside threshold function : @xmath43 and @xmath44 denotes 2-norm .",
    "recurrence plots are two - dimensional graphical representations of this thresholded distance matrix that assign `` black '' dots to the value one , and `` white '' dots to the zero value .",
    "the value of the threshold @xmath39 was estimated according to zbilut _",
    "et al . _ , 2002  @xcite . in the case of a deterministic signal ,",
    "whenever a point @xmath45 is found close to another point @xmath46 in the embedding space , then the points @xmath47 will likely be close to @xmath48 .",
    "hence , deterministic signals are characterized by recurrence plots with black diagonal lines parallel to the minor diagonal . alternatively , stochastic processes manifest as single isolated black points forming more homogeneous and random patterns .",
    "chaotic signals are deterministic systems with high sensitivity to initial conditions ( see below ) .",
    "accordingly , their recurrence plots are characterized by broken diagonal lines beside single isolated points .",
    "plots with fading to the upper left and lower right corner usually indicate a drift , i.e. nonstationarity in the time series .",
    "the goal of poincar section is also to detect structures in the attractor .",
    "it consists in building @xmath49-dimensional cross - sections transverse to the @xmath31-dimensional attractor and collecting the corresponding successive intersections according to one direction ( crossing from the `` bottom '' side to the `` top '' side for example ) .",
    "the corresponding poincar map ( or first - return map ) is obtained as a plot of each intersection as a function of the next one .",
    "alternatively , it is possible to define the cross - section surface by the zero crossing of the temporal derivative of the signal , thus collecting maxima or minima  @xcite . in the present paper , poincar maps",
    "were constructed using minima .",
    "roughly speaking , poincar maps of stochastic systems show homogeneously distributed and space filling patterns while deterministic components form extended low - dimensional structures .",
    "chaotic trajectories in dissipative systems must overcome two opposite constraints in the phase space .",
    "in the one hand , dissipation contracts volume elements under the action of the dynamics , so that the distance between two neighbors in the phase space must globally diminish with the dynamics . on the other hand",
    ", these systems display a high sensitivity to initial conditions ( see below ) , meaning that two neighbor trajectories in the phase space diverge exponentially with time ( at least locally ) .",
    "hence , to accommodate these two constraints , most strange attractors present a heavily folded and complex structure , which is very often self - similar and fractal .",
    "the correlation dimension @xmath50 is one measure of the attractor fractality and is usually determined by computing the correlation sum .",
    "briefly , it consists in determining the average probability to find two data points belonging to the attractor in a neighborhood of size @xmath51 in the @xmath31-dimensional embedding space @xmath52 note the similarity with the definition of the recurrence plots ( eq .  [ eq : rp ] ) .",
    "indeed , estimation of correlation dimension and entropy on the basis of recurrence plots has recently been proposed  @xcite .",
    "+ if the time series is characterized by an ( possibly strange ) attractor , then for sufficiently small @xmath51 values and when @xmath53 @xmath54 alternatively , stochastic systems form trajectories that uniformly fill the @xmath31-dimensional embedding space so that in this case , the correlation sum is expected to scale with the embedding dimension @xmath55 .",
    "hence , log - log representations of the correlation sums @xmath56 against @xmath51 for increasing @xmath31 values should display linear zones with saturating slopes at high @xmath31 ( scaling region ) in the case of chaotic dynamics , or increasingly large ones in the case of stochastic dynamics .",
    "a more accurate way to detect these scaling regions is to estimate the corresponding local slopes given by @xmath57 and plot them against the corresponding @xmath51 values  @xcite . in the case of chaotic dynamics ,",
    "the corresponding curves at various @xmath31 should collapse onto an @xmath31 and @xmath51-independent behavior ( in the scaling regions ) that directly yields @xmath50 . such a collapse",
    "is not observed with stochastic signals .",
    "note that an important precaution in computing the correlation sums is to exclude temporally correlated points from the pair counting in eq.[eq : corsum ]  @xcite by ignoring all pairs of points with time indices differing by less than @xmath58 ( the so - called theiller windows @xmath58 ) . in this paper , we have used @xmath59 million instructions .",
    "+ another quantifier of the attractor is the correlation ( order-2 rny ) entropy @xmath60 , which is obtained through the @xmath31-dependence of eq  [ eq : corsumscaling ] inside the scaling regime .",
    "the correlation entropy is usually considered as a lower bound of the sum of the positive lyapunov exponents  @xcite .",
    "sensitivity to initial conditions is a hallmark of chaotic systems .",
    "its implies that two trajectories found in an arbitrary small neighborhood of the phase ( or embedding ) space diverge exponentially with time , thus abolishing predictability in these systems .",
    "consider two neighbor points @xmath45 and @xmath46 in the embedding space and denote their distance @xmath61 .",
    "after a time @xmath62 , their distance @xmath63 is expected to grow exponentially @xmath64 where @xmath65 is the largest lyapunov exponent . in general , in a @xmath31-dimensional space , the rate of expansion and contraction of the trajectories is described for each dimension by a different lyapunov exponent .",
    "however , estimation of the largest one is both much easier to compute than the whole spectrum and sufficient to decide about the presence of deterministic chaos in the data ( i.e. the largest lyapunov exponent is expected to quickly dominate the distance growth ) . to estimate @xmath65 , kantz",
    "s method  @xcite consists in selecting a point @xmath45 and searching all the points @xmath46 present in a neighborhood @xmath66 of @xmath45 .",
    "one then computes the average quantity @xmath67 ( stretching factor ) @xmath68 where @xmath69 is the number of points in @xmath66 and @xmath51 its size , and @xmath70 indicates averaging over all the points in the time series . in the case of chaotic dynamics ,",
    "a plot of @xmath71 against time @xmath62 will yield a linear increase at short times for a reasonable range of @xmath51 and sufficiently large @xmath31 .",
    "the slope of this linear regime can be used as an estimate of the largest lyapunov exponent @xmath65 .",
    "an alternative method , proposed by rosenstein  @xcite , only considers the closest point @xmath46 of each reference point @xmath45 in eq  [ eq : slmax ] .",
    "surrogate data testing is a method to statistically infer the presence of nonlinear processes in time series .",
    "the idea is to generate artificial linear time series ( surrogates ) with the same power spectrum , the same correlations , and the same distribution of values than the series to be tested  @xcite .",
    "the two time series are then characterized by a statistics that quantifies nonlinearity in time series with a single number . in the present work ,",
    "we have used two statistics : a nonlinear ( locally constant ) predictor error statistics and a time - reversal asymmetry ( third order ) one  @xcite .",
    "these results are then used to perform a statistical test in which the null hypothesis states that the series to be tested could be generated by a linear process such as that used to generate the surrogate  @xcite .",
    "figure  [ fig:1 ] displays performance statistics for the program ` bzip2 ` acting on the ` source ` input of the ` ref ` data set ( see  [ sec : trace ] ) .",
    "we focus here on three statistics that are particularly relevant to computer performance : the number of instruction executed at each computer cycle ( ipc ) , the instantaneous rate of l1 cache miss rate ( l1 ) and that concerning l2 cache ( l2 ) . for readability , we only display in figure  [ fig:1]a the traces obtained for the first 54 billion executed instructions ( i.e. approximately one half of the total program execution ) .",
    "the three traces show two distinct phases : a first one with higher variability and lower frequency ( up to circa 43 billion instructions ) , followed by a phase characterized by higher frequency and lower variability ( from 43 to 54 billion instructions ) .",
    "note that the second part of the total execution trace ( not presented in figure  [ fig:1 ] ) essentially consists of a repetition of these two consecutive phases . in the remaining of this section we treat the entire ( @xmath72 billion instruction long ) trace as a single entity .",
    "note however that we have also studied the two ` bzip2 ` execution phases separately ( i.e. restraining the time series to the first phase , from 1 to 50 billion instructions , or to the second one , from 50 to 54 billion instructions ) and obtained qualitatively similar results ( though sensitivity to initial conditions seems higher in the second phase ) .",
    "+        although some regularity is readily seen in these time series , the two phases clearly display irregular or noisy dynamics .",
    "this is especially visible from the enlargement displayed figure  [ fig:1]b .",
    "the dynamics present bounded and somewhat regular variations together with a large amount of variability .",
    "in particular , this figure evidences a major period of repetition of @xmath73 instructions .",
    "figure  [ fig:1]c and d show projections of these dynamics in the ipc - l2 and l1-ipc phase plans .",
    "the resulting attractor projections display a characteristic mixture of regular structured zones together with `` cloudy '' areas , hence confirming the high variability of the time series .",
    "+ the observed variability could be imputed to a noise source ( as part of the dynamics itself or resulting from the sampling method ) .",
    "alternatively , it could be a direct result of deterministic chaotic dynamics . to discriminate between both possibilities ,",
    "several tests are available in the time series analysis literature .",
    "these tests are usually individually conclusive when employed on long and perfect synthetic time series .",
    "real world time series however , usually incorporate high levels of noise stemming from experimental measurements , and are often much smaller , so that conclusive decisions generally need the investigation of the results provided by several of these tests .",
    "thus , several converging approaches are necessary to identify nonlinear patterns and avoid spurious determinations .",
    "+ we first sought for long term correlations in the time series of figure  [ fig:1 ] using spectral and detrended fluctuation analysis ( see  [ sec : spectral ] ) .",
    "figure  [ fig:1]e shows the power spectrum @xmath7 variations with the frequency @xmath8 on a log - log scale .",
    "first , we note that the power spectrum has a broadband characteristic , typical of stochastic and chaotic signals .",
    "furthermore , for the three statistics tested , the power spectrum scales as a power - law of the frequency , for frequencies @xmath74 ( i.e. for periods lower than the major period of repetition ) with spectral exponent @xmath75 .",
    "detrended fluctuation analysis for the three time series is presented figure  [ fig:1]f . here again , for time scales lower than the major period of repetition , we observe for the three time series a power - law relationship between @xmath24 and @xmath19 , with an exponent @xmath76 .",
    "note that the two independently - obtained exponent values satisfy the relationship @xmath77  @xcite , which is an indication of the consistency of these values  @xcite .",
    "+ these results first show that ` bzip2 ` performance statistics display @xmath78-noise .",
    "this reveals the absence of a characteristic time scale for the duration and recurrence of the performance variations ( at least for those variations with time - scales shorter than the major period of repetition ) . hence ` bzip2 ` performance time series display a high level of self - similarity .",
    "furthermore , the value obtained for @xmath29 is greater than 0.5 ( and @xmath79 ) .",
    "this is a sign of the existence of persistent long - range correlations inside the time series i.e. a large ( compared to the average ) ipc or cache miss rate value is more likely to be followed by a large ipc or cache miss rate value and vice versa .",
    "the presence of these correlations is a first argument to exclude the possibility of ( noncorrelated ) noise as a source of variability of the traces .",
    "+ to study further the dynamics , we reconstructed its attractor through embedding of the ipc time series .",
    "the embedding parameters ( delay @xmath80 and dimensions @xmath31 see  [ sec : embedding ] ) were estimated to @xmath81 million instructions and @xmath82 .",
    "figure  [ fig:2]a presents the thresholded recurrence plot .",
    "we first note that the two consecutive phases displayed by ` bzip2 ` ( see figure  [ fig:1]a ) are clearly recognizable from the recurrence plot , indicating that their recurrence rates may be significantly different .",
    "interestingly , the plot presents many interrupted diagonal lines beside single isolated points . furthermore ,",
    "these lines exhibit some level of periodicity , which could be a sign that the system contains unstable periodic orbits ( upos )  @xcite .",
    "this kind of structure is typical of chaotic systems  @xcite .",
    "we also present in figure  [ fig:2]b the first - return map of the poincar section at ipc minima of the reconstructed attractor .",
    "the map is highly structured , with several mono - dimensional parts , which is another sign of low dimensional chaotic dynamics .",
    "+ thus , these first elements plead in favor of a chaotic component in ` bzip2 ` performance time series .",
    "chaotic dynamics being a manifestation of nonlinear systems , we next sought the presence of nonlinearities in this time series using surrogates data ( see  [ sec : surr ] ) .",
    "figure  [ fig:2]c shows a segment of the time series ( upper trace ) together with the corresponding surrogate ( lower trace ) .",
    "visual comparison of these two signals already suggests their dissimilarity . to confirm visual inspection",
    ", we performed statistical tests , quantifying nonlinearity with two different statistics .",
    "the null hypothesis was that the ipc trace could be generated by a linear , possibly rescaled , gaussian random process .",
    "both quantification statistics yield to reject the null hypothesis at the 95% level of significance , hence confirming the nonlinear nature of the ipc execution trace .",
    "+ to study the reconstructed attractor in more details , we next characterized its geometrical properties .",
    "figure  [ fig:3]a displays a log - log plot of the correlation sums @xmath83 obtained for various dimensions @xmath31 , versus the neighborhood size @xmath51 .",
    "a power - law regime between @xmath84 and @xmath85 is apparent for high @xmath31 values .",
    "furthermore , the corresponding slopes in this regime ( the exponents of the power - laws ) seem to tend to a rather constant value at high @xmath31 .",
    "this scaling is confirmed in figure  [ fig:3]b that shows the local slopes @xmath57 of the curves of figure  [ fig:3]a .",
    "for @xmath86 and @xmath87 , the local slopes collapse to a @xmath31- and @xmath51-independent value of @xmath88 .",
    "the occurrence of such a scaling regime is a strong sign that the observed variability in the dynamics is not caused by a random source , thus confirming the hypothesis of a chaotic behavior .",
    "the value in the scaling regime is an estimation of the correlation dimension of the attractor , @xmath89 .",
    "the correlation dimension is one measure of the attractor fractality .",
    "thus , its non - integer value might be an indication that the attractor for ` bzip2 ` performance dynamics is a fractal object , like most of the chaotic strange attractors .",
    "however , as is very often the case with real - life systems , our estimation of @xmath50 is not precise enough to exclude an integer value , so that the attractor fractality can not be asserted in the light of our present results .",
    "however , the ( low ) value of @xmath50 remains a strong indication the ` bzip2 ` performance displays low - dimensional chaos .",
    "+        the correlation sums can also be used to estimate the corresponding correlation entropy @xmath60 .",
    "figure  [ fig:3]c presents the resulting estimates as a function of @xmath51 and for @xmath31 varying from 7 to 25 .",
    "the value of @xmath60 can be estimated in the scaling regime observed in figure  [ fig:3]b , but must be extrapolated at large @xmath31 .",
    "accordingly , our estimate on the basis of figure  [ fig:3]c ( dashed line ) yields @xmath90 bits / billion instructions . + a very strong indication of chaotic dynamics is sensitivity to initial conditions ( sci ) . to quantify sci in our systems , we tried to estimate the largest lyapunov exponent from our reconstructed attractor ( figure  [ fig:3]c ) using both kantz s  @xcite ( top four curves ) and rsensteins@xcite ( bottom curve ) methods .",
    "the occurrence of a positive lyapunov exponent is amongst the strongest indications of chaotic dynamics .",
    "both methods result in similar curve shapes .",
    "although the data are far from ideal , a linear part at short times can be distinguished in all these curves .",
    "the slope of these linear parts provides us with an estimate for the largest lyapunov exponent @xmath91 bits / billion instructions .",
    "alternatively , the largest lyapunov exponent can also be measured from the poincar map .",
    "our estimations on the basis of figure  [ fig:2]b ( data not shown ) yield a somewhat higher , but comparable estimate ( @xmath92 bits / billion instructions ) .",
    "these estimates can be compared to the correlation entropy @xmath60 , which is a lower bound of the sum of all the positive lyapunov exponents of the system ( see  [ sec : correl ] ) .",
    "hence our estimates for @xmath60 and @xmath65 are readily comparable , thereby further supporting the consistency of our measurements .",
    "+ the measurements and analysis presented so far were essentially obtained on the basis of a reconstruction of the attractor using the ipc time series .",
    "we also carried out most of these analyzes using the other two time series ( l2 and l1 cache miss rates ) for attractor reconstruction and varied the averaging window @xmath0 ( @xmath93 instructions , see  [ sec : trace ] ) .",
    "all these conditions yielded comparable values and confirmed that ` bzip2 ` performance dynamics display low dimensional deterministic chaos .",
    "furthermore , we analyzed ` bzip2 ` performance dynamics with another data input ( namely , the ` program ` input of the ` ref ` data set , see  [ sec : trace ] ) .",
    "although these dynamics displayed possibly lower sci ( @xmath94 bits / billion instructions ) , all tested indicators confirmed the presence of chaotic dynamics , indicating that their origin is more probably rooted into the program / architecture interaction than to be found in a data - dependent mechanism .",
    "+ the magnitude of the largest lyapunov exponent quantifies the attractor s dynamics in information theoretic terms . as a crude interpretation",
    ", it measures the rate at which the system destroys information .",
    "for instance , suppose one knows the number of instruction executed per cycle for ` bzip2 ` at some initial time @xmath95 with good accuracy , say @xmath96 ( 13 bits ) . because of the intrinsic sensitivity to initial conditions ( say , in average , @xmath97 bits/@xmath98 instructions ) , 0.9 bits of this information will be lost , in average , every billion instructions .",
    "in other words , after 15 billion instructions ( i.e. @xmath99 of the total program execution length ) , the ipc number would be no more predictable .",
    "note however that the magnitudes of the lyapunov exponents quantify _ average _ convergence or divergence rates ( over the phase space ) , but in fact , the degree of predictability can vary considerably throughout phase space  @xcite .",
    "hence it is possible to loose predictability exponentially fast in some part of the dynamics , while regaining it later on .",
    "+ to compare with other chaotic systems , these values must be related to the duration of an average orbit around the attractor , which is @xmath100 million instructions , yielding a value ranging from 0.26 to 0.52 bits / average orbit .",
    "although lower than that of the lorenz system ( @xmath101 bits / orbits ) , this value is comparable to that obtained for the rssler system ( @xmath102 bits / orbits )  @xcite , a classical model for deterministic chaos .",
    "+ finally , we note that this kind of dynamics is not restricted to ` bzip2 ` . amongst the tested spec benchmarks ,",
    "we evidenced deterministic chaos with other programs including ` galgel ` and ` fma3d ` , and obtained some indications of it ( albeit not conclusively ) for ` gzip ` and ` ammp ` .",
    "evolution of the three studied performance statistics for the program ` vpr ` are shown figure  [ fig:4 ] .",
    "as compared to ` bzip2 ` , the dynamics are much more variable and lack real regular behaviors . likewise , the projections onto phase plans display clouds of points lacking clear inner structures .",
    "we reconstructed the attractor of the dynamics through embedding of the ipc time series ( with @xmath103 million instructions and @xmath104 ) .",
    "+ figure  [ fig:5]a presents the thresholded recurrence plot for this embedding . in opposition to the recurrence plot obtained for ` bzip2 ` ( figure  [ fig:2]a ) , vpr recurrence plot only displays isolated points ( no diagonal lines ) that are much more homogeneously distributed ( distribution structures are not easily visible ) .",
    "likewise , the poincar map presented figure  [ fig:5]b displays a rather homogeneous scattering of the points over the first diagonal .",
    "the aspect of these two figures are first indications that vpr variability is neither periodic , nor the result of chaotic dynamics . in agreement with these conclusions ,",
    "we note that , even if the corresponding surrogates ( figure  [ fig:5]c ) are visually similar to the original ipc time series , statistical tests for the presence of nonlinearities in vpr performance dynamics could not decide between the presence or the absence of nonlinearity in the original trace .",
    "this can be considered as a first indication that , while not chaotic nor periodic , this time series might neither result from a really stochastic process .",
    "+ figure  [ fig:6 ] shows the corresponding correlation sums for @xmath31 ranging ( from top to bottom ) from 1 to 20 .",
    "although a regime with power - law behavior is observed for each curve , the slopes of the corresponding linear parts do not seem to saturate to a constant value with increasing @xmath31 .",
    "this is confirmed by examination of the respective local slopes presented figure  [ fig:6]b . in opposition to the corresponding plot for ` bzip2 ` ( figure  [ fig:3]b ) , this figure fails to show any scaling regime , whatever the @xmath51- or @xmath31-range considered .",
    "absence of saturation of the correlation sum exponents at high @xmath31 is another indication that , contrarily to ` bzip2 ` , the high variability and irregularity of ` vpr ` performance dynamics are not imputable to chaotic dynamics , but result from some `` high dimensional '' non chaotic process .",
    "+ amongst the spec benchmarks we inspected , a similar behavior was also observed for ` art ` , and suspected for several other programs , such as ` crafty ` , and ( albeit to a lesser extend ) ` ammp ` , ` gcc ` , or ` gzip ` .",
    "our last example concerns the program ` applu ` , a scientific computing application .",
    "a simple inspection of the time series is enough to evidence the regularity of the three performance statistics ( figure  [ fig:7]a and b ) .",
    "projections in the phase plans ( figure  [ fig:7]c and d ) provide a striking representation of a multiply folded one - dimensional attractor , reminiscent of multi - dimensional limit cycles .",
    "these periodic oscillations are so regular that the folded attractors display an almost null noise level . in agreement with these observations",
    "the power spectra for the three statistics ( figure  [ fig:7]e ) are typical of periodic patterns , with a major frequency ( @xmath105 instructions corresponding to a period of @xmath106 billion instructions , compare with figure  [ fig:7]b ) and its harmonics dominating the spectrum . + taken together , these results unambiguously show the existence of programs with highly regular performance traces .",
    "besides ` applu ` , such a behavior was also evidenced for other spec benchmark programs such as ` apsi ` .",
    "an intriguing result of this paper is that the performance traces of several program are not periodic nor chaotic , but display a high level of aperiodic fluctuations ( such as ` vpr ` ) , that appear similar to stochastic dynamics from the point of view of the nonlinear methods we used .",
    "this may sound counterintuitive because the underlying microprocessor operations are deterministic by nature .",
    "several sources of aperiodic variability in the performances can be evoked .",
    "+ first , a potential source of aperiodicity resides in the simulated programs themselves . a great number of the programs from the spec benchmark are scientific codes and many of them use pseudo - random numbers . albeit pseudo - random number generators are also purely deterministic routines , their output is hardly distinguishable from truly random numbers .",
    "this could in part be implied in the apparently stochastic behaviors we observed .",
    "second , one must not forget that the metrics we studied are indirect measurements of the microprocessor state .",
    "in other words , while the microprocessor deterministically processes the program flow , we only record its performance .",
    "it has recently been remarked that the correlation between the code being executed and the performance can vary widely  @xcite . in other words , for some programs , performance metrics are highly dependent on the execution history , so that two executions of the same code piece during a single program can have performance metrics that vary considerably .",
    "this source of variability could also in part explain the behavior of `` high dimensional '' traces such as ` vpr ` .",
    "+ furthermore , recall that to distinguish between chaotic and stochastic signals , nonlinear time series methods usually make use of the fact that , contrarily to stochastic dynamics , chaotic ones are `` bounded '' ( their attractor have a finite dimension ) . in the same way that these methods could not distinguish purely random numbers from pseudo - random numbers generated by modern libraries , the ` vpr ` traces could abusively appear stochastic to them .",
    "in fact , even simple deterministic processes can yield behaviors that appear stochastic to visual inspections ( see for example chapter 4 in  @xcite ) .",
    "incidentally , we note that the ipc time series of ` vpr ` is strikingly similar to the apparently stochastic fluctuations of the simple deterministic recursive iteration presented page 130 ( bottom trace ) in  @xcite . hence ,",
    "what can rigorously be said of the ` vpr ` case is that it is highly fluctuating , and that these fluctuations are neither regular ( periodic ) nor chaotic , but result of a `` high dimensional '' process .",
    "the other specific conclusion drawn by this study is that the high variability in the time - evolution of the performances during the execution of several programs can be imputed to deterministic chaos .",
    "this result seems important because it implies that performance predictability based on short sampled sequences might be impossible and because in a more general perspective , it reveals the high intricacy of the processes determining instantaneous microprocessor performances .",
    "however , its interpretation must be handled with great care .",
    "first , the obtained results apply to instantaneous performances _ only _ and do not imply _ other _ aspects of microprocessor operations .",
    "for instance , they neither imply that program execution itself ( i.e. the instruction flow handled by the processor ) is chaotic or unpredictable . in particular , they do not imply that the program final result might be variable nor unpredictable .",
    "+ chaotic dynamics are known to occur in systems where the variables are in great number and/or interact through nonlinear relationships .",
    "modern microprocessors include a large number of hardware mechanisms that are dedicated to improve performance ( speculative execution , branch predictors , prefetchers , memory and instruction caches , pipelines ... ) . as a result , the precise number of cycles needed to execute a given instruction sequence depends on a huge number of internal states of hardware components .",
    "for instance , the precise number of clock cycles needed to execute a simple instruction sequence including at least one conditional branch and one load / store instruction depends , among others , on the state of the branch predictor mechanism ( which is usually history - dependent ) corresponding to this branch , on the states of the different caches of the memory hierarchy ( presence or absence of the data ) , the precise state of all instructions in all stages of the execution pipeline and in the numerous buffers included in the processors .",
    "furthermore , these different internal states are usually related through nonlinear relationships ( for instance , a branch prediction error can lead to a complete flush of the execution pipeline , which may , in turn modify this branch predictor state ) .",
    "+ hence , exact knowledge of the state of the set of performance - determining mechanisms at a given time is unattainable .",
    "this property is so strong that it has recently been used to build powerful pseudo - random number generators based on the unpredictability of the internal microprocessor states  @xcite . as a result",
    ", two states of the performance - determining mechanisms that appear arbitrarily close with respect to the partial information possessed by the observer , can in fact be different .",
    "because performance critically depends on the _ global _ state , the performance evolutions starting from these two seemingly similar states can be highly different .",
    "this might account for the observed sensitivity to initial conditions ( i.e. chaos ) .",
    "note however that further work is needed to understand why these properties manifest during the execution of certain programs only , while it seems not to be prominent for others .",
    "finally our results may have some practical importance in the field of performance modeling .",
    "to predict the effect of a given hardware mechanism , computer architects use detailed simulations of the microprocessor performance during program execution .",
    "because these detailed simulations are highly demanding on calculation time , several methods have been developed to estimate the average performance on the basis of a subsample of the entire execution trace .",
    "our result that several program traces ( such as vpr ) display dynamics that are closed to stochastic ones could be useful in this framework .",
    "indeed , this usually means that the obtained surrogates data are very similar to the corresponding real traces ( see figure 5c , for instance ) .",
    "hence , for these programs , it is possible to consider generating long surrogates data ( at very low computational costs ) from a short sample of the real trace , and use these synthetic traces to estimate the average metric ( average ipc , for example ) during a real execution of the program .",
    "+ conversely , our results indicate that for those programs endowed with chaotic behaviors ( such as bzip2 or galgel ) , it might be very delicate to predict the actual evolution of the considered performance metric on the basis of extrapolations from a short sequence of the real trace .",
    "hence , for these programs , our results suggest that an efficient strategy for predicting the actual average value of the metric under consideration on the ground of a sample of its real trace would be to base the estimation on several samples extracted from the real trace , even in a random way .",
    "actually this method is used by one of the most powerful tool developed for performance prediction  @xcite .",
    "yet , it should be recalled that variations on a strange attractor are bounded so that the existence of these difficulties does not exclude the possibility to predict accurate _",
    "average _ values , which is the aim of most of these methods  @xcite . finally , the necessity to adapt the performance simulation / sampling technique as a function of the program under consideration has recently been pointed out  @xcite .",
    "we think our results might account for a rationale of this necessity ."
  ],
  "abstract_text": [
    "<S> modern computer microprocessors are composed of hundreds of millions of transistors that interact through intricate protocols . </S>",
    "<S> their performance during program execution may be highly variable and present aperiodic oscillations . in this paper </S>",
    "<S> , we apply current nonlinear time series analysis techniques to the performances of modern microprocessors during the execution of prototypical programs . </S>",
    "<S> our results present pieces of evidence strongly supporting that the high variability of the performance dynamics during the execution of several programs display low - dimensional deterministic chaos , with sensitivity to initial conditions comparable to textbook models . taken together , </S>",
    "<S> these results show that the instantaneous performances of modern microprocessors constitute a complex ( or at least complicated ) system and would benefit from analysis with modern tools of nonlinear and complexity science .    * </S>",
    "<S> modern microprocessor architectures rely on impressive numbers of transistors ( up to a billion ) that interact through intricate rules . as a consequence , the performance of these microprocessors during the execution of certain programs displays complex non - repetitive variations that challenge traditional analysis . yet </S>",
    "<S> , comparable complex behaviors are observed in many other systems ranging from physics to biology and social sciences and have been successfully described using nonlinear and chaotic data analysis . in this paper , we apply these methods to analyze modern microprocessor performances . </S>",
    "<S> we collect several measures characterizing the architectural state and performance during the execution of several prototypical programs and apply current techniques of nonlinear analysis to the resulting time - varying signals . </S>",
    "<S> our results show that for several programs , the complex and highly variable dynamics observed result from deterministic chaos . </S>",
    "<S> this suggests that detailed predictions of microprocessor performance is unlikely with these programs . </S>",
    "<S> taken together , these results show that the instantaneous performances during program executions on modern microprocessor architectures form a byzantine system that should benefit from analysis with modern tools of nonlinear and complexity science . * </S>"
  ]
}
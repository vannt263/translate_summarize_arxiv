{
  "article_text": [
    "maxsat is an optimization version of the well - known decision problem sat : given a boolean formula in cnf , we ask for an assignment which satisfies the maximum number of clauses .",
    "the applications for maxsat range over such fields as combinatorial optimization , artificial intelligence and database - systems as mentioned in @xcite .",
    "we put our focus on max-2-sat , where every formula is constrained to have at most two literals per clause , to which problems as maximum cut and maximum independent set are reducible . therefore max-2-sat is -complete .      .",
    "the best published upper bound of @xmath2 has been achieved by kulikov and kutzov in @xcite consuming only polynomial space .",
    "they build up their algorithm on the one of kojevnikov and kulikov  @xcite who were the first who used a non - standard measure yielding a run time of @xmath3 .",
    "if we measure the complexity in the number @xmath4 of variables the current fastest algorithm is the one of r. williams @xcite having run time @xmath5 , where @xmath6 is the matrix - multiplication exponent .",
    "a drawback of this algorithm is its requirement of exponential space .",
    "scott and sorkin @xcite presented a @xmath7-algorithm consuming polynomial space , where @xmath8 is the average degree of the variable graph .",
    "max-2-sat has also been studied with respect to approximation @xcite and parameterized algorithms @xcite .      .",
    "the major result we present is an algorithm solving max-2-sat in time @xmath0 .",
    "basically it is a refinement of the algorithm in @xcite , which also in turn builds up on the results of @xcite .",
    "the run time improvement is twofold . in @xcite an upper bound of @xmath9",
    "is obtained if the variable graph is cubic . here",
    "@xmath4 denotes the number of variables .",
    "we could improve this to @xmath10 by a more accurate analysis .",
    "secondly , in the case where the maximum degree of the variable graph is four , we choose a variable for branching according to some heuristic priorities .",
    "these two improvements already give a run time of @xmath11 .",
    "moreover we like to point out that these heuristic priorities can be implemented such that they only consume @xmath12 time . the authors of @xcite",
    "improve the algorithm of @xcite by having a new branching strategy when the variable graph has maximum degree five .",
    "now combining our improvements with the ones from @xcite gives the claimed run time .      .",
    "let @xmath13 be the set of variables of a given boolean formula @xmath14 .",
    "for @xmath15 by @xmath16 we denote the negation of @xmath17 .",
    "if @xmath17 is set , then it will be assigned the values * true *   or * false*. by the word _ literal _ , we refer to a variable or its negation .",
    "a _ clause _ is a disjunction of literals .",
    "we consider formulas in _ conjunctive normal form ( cnf ) _ , that is a conjunction of clauses .",
    "we allow only 1- and 2-clauses , i.e. , clauses with at most two literals .",
    "the weight of @xmath17 , written @xmath18 , refers to the number of 2-clauses in which @xmath17 or @xmath16 occurs .",
    "for a set @xmath19 we define @xmath20 . if @xmath17 or @xmath16 occurs in some clause @xmath21 we write @xmath22 .",
    "a set @xmath23 of literals is called _ assignment _ if for every @xmath24 it holds that @xmath25 . loosely speaking if @xmath26 for a literal @xmath27 , than @xmath27 receives the value * true*. we allow the formula to contain truth - clauses of the form \\{@xmath28 } that are always satisfied .",
    "furthermore , we consider a max-2-sat instance as multiset of clauses .",
    "a @xmath29 is a _ neighbor _ of @xmath17 , written @xmath30 , if they occur in a common 2-clause",
    ". let @xmath31:=n(v)\\cup \\{v\\}$ ] .",
    "the _ variable graph _",
    "@xmath32 is defined as follows : @xmath33 and @xmath34 .",
    "observe that @xmath35 is a undirected multigraph and that it neglects clauses of size one .",
    "we will not distinguish between the words `` variable '' and `` vertex '' .",
    "every variable in a formula corresponds to a vertex in @xmath35 and vice versa . by writing @xmath36",
    "$ ] , we mean the formula which emerges from @xmath14 by setting @xmath17 to * true *   the following way : first , substitute all clauses containing @xmath17 by \\{@xmath28 } , then delete all occurrences of @xmath16 from any clause and finally delete all empty clauses from @xmath14 . @xmath37 $ ] is defined analogously : we set @xmath38 to * false*.",
    "[ rr ] we state well - known reduction rules from previous work @xcite : +   * rr-1 * replace any 2-clause @xmath21 with @xmath39 , for a literal @xmath27 , with \\{@xmath28}. + * rr-2 * if for two clauses @xmath40 and a literal @xmath27 we have @xmath41 , then substitute @xmath21 and @xmath42 by @xmath43 and \\{@xmath28}. + * rr-3 * a literal @xmath27 occurring only positively ( negatively , resp . )",
    "is set to * true *  ( * false * ) .",
    "+ * rr-4 * if @xmath44 does not occur in more 2-clauses than @xmath27 in 1-clauses , such that @xmath27 is a literal , then set @xmath27 to * true*. + * rr-5 * let @xmath45 and @xmath46 be two variables , such that @xmath45 appears at most once in another clause without @xmath46 . in this case , we call @xmath46 the _ companion _ of @xmath45 . * rr-3 * or * rr-4 * will set @xmath45 in @xmath47 $ ] to @xmath48 and in @xmath49 $ ] to @xmath50 , where @xmath51 . depending on @xmath48 and @xmath50 ,",
    "the following actions will be carried out :    if @xmath52 , @xmath53 , set @xmath45 to * false*.    if @xmath54 , @xmath55 , set @xmath45 to * true*.    if @xmath54 , @xmath53 , substitute every occurrence of @xmath45 by @xmath46 .",
    "if @xmath52 , @xmath55 , substitute every occurrence of @xmath45 by @xmath56 .    from now on we will only consider reduced formulas @xmath14 .",
    "this means that to a given formula @xmath14 we apply the following procedure : * rr - i * is always applied before * rr - i+1 * , each reduction rule is carried out exhaustively and after * rr-5 * we start again with * rr-1 * if the formula changed . a formula for which this procedure does not apply",
    "will be called _",
    "reduced_. concerning the reduction rules we have the following lemma  @xcite :    [ lem0 ]    1 .   if @xmath57 , then @xmath17 will be set .",
    "[ obs1][cor1 ] [ lem01 ] 2 .   for any @xmath58 in a reduced formula with @xmath59",
    "we have @xmath60.[lem03a ] 3 .",
    "if the variables @xmath61 and @xmath38 are neighbors and @xmath62 , then in at least one of the formulas @xmath63 $ ] and @xmath64 $ ] , the reduction rules set @xmath61.[lem03b ]    we need some auxiliary notions : a sequence of distinct vertices @xmath65 + ( @xmath66 ) is called _ lasso _ if @xmath67 for @xmath68 , @xmath69 , @xmath70 and @xmath71 $ ] is a cycle .",
    "quasi - lasso _ is a lasso with the difference that @xmath72 .",
    "a lasso is called _ 3-lasso _",
    "4-lasso ) if @xmath73 ( @xmath74 , resp . ) .",
    "_ 3-quasi - lasso _ and _ 4-quasi - lasso _ are defined analogously .",
    "[ obs2 ]    1 .",
    "let @xmath75 be pairwise distinct with @xmath76 such that there are clauses @xmath77 with @xmath78 and @xmath79 .",
    "then either @xmath17 is set or the two common edges of @xmath80 and @xmath17 will be contracted in @xmath35.[lem02 ] 2 .",
    "the reduction rules delete the variables @xmath81 of a lasso ( quasi - lasso , resp . ) and the weight of @xmath82 drops by at least two ( one , resp.).[lemlem ]    1 .",
    "if @xmath17 is not set it will be substituted by @xmath80 or @xmath83 due to * rr-5*. the emerging clauses @xmath84 will be reduced either by * rr-1 * or become 1-clauses .",
    "also we have an edge between @xmath80 and @xmath85 in @xmath35 as now @xmath86 .",
    "we give the proof by induction on @xmath87 . in the lasso case for @xmath88 , there must be a 2-clause @xmath89 , which will be deleted by * rr-1 * , so that the initial step is shown .",
    "so now @xmath90 .",
    "then on any @xmath91 , @xmath68 , we can apply * rr-5 * with any neighbor as companion , so , w.l.o.g .",
    ", it is applied to @xmath92 with @xmath82 as companion .",
    "* rr-5 * either sets @xmath92 , then we are done with lemma  [ lem0].[cor1 ] , or @xmath92 will be substituted by @xmath82 . by applying *",
    "rr-1 * , this leads to the lasso @xmath93 in @xmath35 and the claim follows by induction . in the quasi - lasso case for @xmath88 , the arguments from above hold . for @xmath94 , item",
    "@xmath95 is sufficient . for @xmath96 ,",
    "the induction step from above also applies here .",
    "we set @xmath97 . to measure the run time , we choose a non standard measure approach with the measure @xmath98 defined as follows : + @xmath99 + clearly , @xmath100 never exceeds the number of clauses @xmath1 in the corresponding formula .",
    "so , by showing an upper bound of @xmath101 we can infer an upper bound @xmath102 .",
    "we set @xmath103 , @xmath104 for @xmath105 . concerning the @xmath106 s we have @xmath107 for @xmath108 and @xmath109 .",
    "the algorithm presented in this paper proceeds as follows : after applying the above - mentioned reduction rules exhaustively , it will branch on a variable @xmath17 .",
    "that is , we will reduce the problem to the two formulas @xmath36 $ ] and @xmath37 $ ] . in each of the two branches , we must determine by",
    "how much the original formula @xmath14 will be reduced in terms of @xmath100 .",
    "reduction in @xmath100 can be due to branching on a variable or to the subsequent application of reduction rules . by an _ @xmath110-branch _ , we mean that in the @xmath111-th branch @xmath100 is reduced by at least @xmath112 .",
    "i - th component _ of a branch refers to the search tree evolving from the @xmath111-th branch ( i.e. , @xmath112 ) . by writing @xmath113-branch we mean a @xmath114-branch where @xmath115 with @xmath116 .",
    "a @xmath117-branch _ dominates _ a @xmath118-branch if @xmath119 for @xmath120 .",
    "if the maximum degree of @xmath35 is four , variables @xmath17 with @xmath121 will be called _ limited _ if there is another variable @xmath80 appearing with @xmath17 in two 2-clauses ( i.e. , we have two edges between @xmath17 and @xmath80 in @xmath35 ) .",
    "we call such @xmath122 a _ limited pair_. note that also @xmath80 is limited and that at this point by * rr-5 * no two weight 4 variables can appear in more than two clauses together .",
    "we call @xmath123 a _ limited sequence _ if @xmath124 and @xmath125 with @xmath126 are limited pairs .",
    "a _ limited cycle _ is a limited sequence with @xmath127 . to obtain an asymptotically fast algorithmic behavior we introduce heuristic priorities ( * hp * ) , concerning the choice of the variable used for branching .    1 .",
    "choose any @xmath17 with @xmath128 .",
    "2 .   choose any @xmath17 with @xmath129 , preferably with @xmath130 .",
    "3 .   choose any @xmath17 with @xmath131 , preferably with @xmath132 .",
    "4 .   choose any unlimited @xmath17 with @xmath121 and a limited neighbor .",
    "5 .   choose the vertex @xmath133 in a limited sequence or cycle . 6 .",
    "pick a limited pair @xmath134 .",
    "let @xmath135 with @xmath136 maximal . if @xmath137 , then choose the unique vertex in @xmath138 , else choose @xmath133 .",
    "7 .   from @xmath139",
    "choose @xmath17 , preferably such that @xmath140 is maximal .",
    "choose any @xmath17 , with @xmath121 , preferably with @xmath141 .",
    "choose any @xmath17 , with @xmath76 , such that there is @xmath142 , which forms a triangle @xmath143 and @xmath144 $ ] ( we say @xmath17 has _ pending triangle _",
    "@xmath143 ) .",
    "choose any @xmath17 , such that we have a @xmath145- or a @xmath146-branch .",
    "from now on @xmath17 denotes the variable picked according to * hp*.    * procedure : * solmax2sat(@xmath14 )    apply solmax2sat on every component of @xmath35 separately .",
    "apply the reduction rules exhaustively to @xmath14 .",
    "search exhaustively on any sub - formula being a component of at most 9 variables .",
    "@xmath147 choose a variable @xmath17 according to * hp*. @xmath148),\\mbox{solmax2sat}(f[\\bar{v}])\\}$ ] .",
    "the main idea is to have some priorities on the choice of a weight 4 variable such that the branching behavior is beneficial .",
    "for example limited variables tend to be unstable in the following sense : if their weight is decreased due to branching they will be reduced due to lemma  [ obs2].[lem02 ] .",
    "this means we can get an amount of @xmath149 instead of @xmath150 . in a graph lacking limited vertices",
    "we want a variable @xmath17 with a weight 3 neighbor @xmath80 such that @xmath151 . in the branch on @xmath17 where @xmath80 is set ( lemma  [ lem0].[lem03b ] )",
    "we can gain some extra reduction ( at least @xmath150 ) from @xmath152 .",
    "if we fail to find a variable according to priorities 5 - 7 we show that either @xmath17 as four weight 4 variables and that the graph is 4-regular , or otherwise we have two distinct situations which can be handled quite efficiently .",
    "further , the most critical branches are when we have to choose @xmath17 such that all variables in @xmath31 $ ] have weight @xmath106 .",
    "then the reduction in @xmath100 is minimal ( i.e. , @xmath153 ) .",
    "we analyze this regular case together with its immediate preceding branch .",
    "thereby we prove a better branching behavior compared to a separate analysis . in @xcite",
    "similar ideas were used for max-2-csp .",
    "we are now ready to present our algorithm , see alg .",
    "[ algo1 ] .",
    "reaching step 7 we can rely on the fact that @xmath35 has at least 10 vertices . we call this the _ small component property ( _ scp _ ) _ which is crucial for some cases of the analysis .",
    "in this section we investigate the cases when we branch on vertices picked according to items 1 - 10 of * hp*. for each item we will derive a branching vector which upper bounds this case in terms of @xmath1 . in the rest of this section",
    "we show :          if @xmath154 , we first obtain a reduction of @xmath155 because @xmath17 will be deleted . secondly , we get an amount of at least @xmath156 as the weights of @xmath17 s neighbors each drops by at least one and we have @xmath107 .",
    "thus , @xmath98 is reduced by at least 7 in either of the two branches ( i.e. , we have a @xmath157-branch ) .",
    "+ _ regular branches _ we call a branch _ h - regular _ if we branch on a variable @xmath17 such that for all @xmath158 $ ] we have @xmath159",
    ". we will handle those in a separate part . during our considerations",
    "a @xmath160-regular branch will have exactly four neighbors as otherwise this situation is handled by priority 4 of * hp*. the following subsections handle _ non - regular _ branches , which means that we can find a @xmath161 with @xmath162 .",
    "note that we already handled @xmath163-regular branches for @xmath164 .",
    "choosing @xmath15 with @xmath129 there is a @xmath161 with @xmath165 due to non - regularity . then by deletion of @xmath17",
    ", there is a reduction by @xmath166 and another of at least @xmath167 , resulting from the dropping weights of the neighbors .",
    "especially , the weight of @xmath80 must drop by at least @xmath168 .",
    "this leads to a @xmath169-branch .",
    "if @xmath170 , the same observations as in the last choice lead to a reduction of at least @xmath171 . thus we have a @xmath172-branch .",
    "let @xmath173 be the limited variable .",
    "@xmath133 forms a limited pair with some @xmath174 . after branching on @xmath17 ,",
    "the variable @xmath133 has weight at most 3 . at this point",
    ", @xmath133 appears only with one other variable @xmath85 in a 2-clause .",
    "then , * rr-5 * is applicable to @xmath133 with @xmath174 as its companion .",
    "according to lemma  [ obs2].[lem02 ] , either @xmath133 is set or the two edges of @xmath133 and @xmath174 will be contracted . in the first case , we receive a total reduction of at least @xmath175 , in the second of at least @xmath176 .",
    "thus , a proper estimate is a @xmath177-branch , i.e. , a @xmath178-branch .",
    "if @xmath179 is a limited cycle , then @xmath180 due to _ scp_. by * rr-5 * this yields a @xmath181-branch .",
    "if @xmath182 is a limited sequence , then due to priority 4 the neighbors of @xmath183 lying outside the sequence have weight 3 . by * rr-5 * the branch on @xmath133 is a @xmath184-branch , i.e , a @xmath185-branch .      at this point",
    "every limited variable @xmath133 has two neighboring variables @xmath186 with weight 3 and a limited neighbor @xmath174 with the same properties ( due to priorities 4 and 5 ) .",
    "we now examine the local structures arising from this fact and by the values of @xmath187 and @xmath188 .    1",
    ".   we rule out @xmath189 due to _ scp_. 2 .",
    "@xmath190 : then , @xmath191 and @xmath192 , see figure  [ prio62 ] . in this case",
    "we branch on @xmath85 as @xmath193 and @xmath194 . then due to * rr-5 * @xmath195 and @xmath133 disappear ; either by being set or replaced . thereafter due to *",
    "rr-1 * and lemma  [ lem0].[obs1 ] @xmath174 will be set .",
    "additionally we get an amount of @xmath196 from @xmath197 .",
    "this depends on whether @xmath198 or @xmath199 and in the second case on the weight of @xmath200 . if @xmath201 we get a reduction of @xmath202 due to setting @xmath200 . in total",
    "we have at least a @xmath203-branch .",
    "analogous is the case @xmath204 .",
    "@xmath205 : here two possibilities occur : + _ ( a ) _ @xmath206 , @xmath207 , see figure  [ prio63a ] : then w.l.o.g . , we branch on @xmath85 .",
    "similarly to item @xmath208 we obtain a @xmath203-branch .",
    "+ _ ( b ) _",
    "@xmath209 , @xmath192 , see figure  [ prio63b ] : w.l.o.g .",
    ", we branch on @xmath85 .",
    "basically we get a total reduction of @xmath210 .",
    "that is @xmath211 from @xmath195 and @xmath85 , @xmath149 from @xmath133 and @xmath212 from @xmath213 and @xmath174 . in the branch where @xmath195 is set ( lemma  [ lem0].[lem03b ] ) we additionally get @xmath150 from @xmath200 and @xmath149 from @xmath174 as it will disappear ( lemma  [ lem0].[lem03a ] )",
    "this is a @xmath214-branch .",
    "@xmath215 , see figure  [ prio63c ] : we branch on @xmath85 yielding a @xmath203-branch .",
    "analogous is the case @xmath216 .",
    "@xmath217 : in this case we chose @xmath133 for branching .",
    "essentially we get a reduction of @xmath218 . in the branch setting @xmath85 we receive an extra amount of @xmath219 from @xmath85 s two neighbors outside @xmath220 . hence we have a @xmath221-branch .",
    "we need further auxiliary notions : a _ 3-path _ ( _ 4-path _ , resp . ) for an unlimited weight 4 vertex @xmath17 is a sequence of vertices @xmath224 ( @xmath225 , resp . )",
    "forming a path , such that @xmath226 ( @xmath227 , resp . ) , @xmath228 for @xmath229 , @xmath230 for @xmath229 ( @xmath230 for @xmath231 , resp . ) and @xmath232 ( @xmath233 , resp . ) . due to the absence of limited vertices ,",
    "every vertex @xmath17 , chosen due to priority 7 , must have a 3- or 4-path .",
    "3-path : :     if @xmath234 we basically get a reduction of    @xmath235 . in the branch where    @xmath133 is set",
    ", @xmath236 will be also    set due to lemma  [ lem0].[lem01 ] .",
    "therefore , we gain an extra amount of    at least @xmath212 from @xmath237 and    @xmath238 , leading to a    @xmath239-branch . +    if @xmath240 then in @xmath36 $ ] and in    @xmath37 $ ] , @xmath241 is a    lasso . so by lemma  [ obs2].[lemlem ] , @xmath242 are    deleted and the weight of @xmath237 drops by 2 .",
    "if    @xmath243 this yields a reduction of    @xmath244 . if @xmath245    the reduction is @xmath246 but then    @xmath237 is set .",
    "it is not hard to see that this yields a    bonus reduction of @xmath150 ( see appendix  [ addarg ] ) .",
    "thus , we have a    @xmath247-branch .",
    "4-path : :    we get an amount of @xmath248    by deleting @xmath17 . in the branch",
    "where @xmath133 is    set we get a bonus of @xmath150 from @xmath237 .",
    "further @xmath249 will be deleted completely .",
    "hence we have a    @xmath250-branch .",
    "the first branch is worst for @xmath251 , the second and third for @xmath252 ( as @xmath251 is impossible ) .",
    "thus , we have @xmath253-branch for the second and a @xmath254-branch for the first and third case which is sharp .      if we have chosen a variable @xmath17 with @xmath121 according to priority 8 , such that @xmath141 , then we have two distinct situations . by branching on @xmath17 , we get at least a @xmath203-branch .",
    "( see appendix  [ prooflem02 ] ) .",
    "the part of the algorithm when we branch on variables of weight @xmath255 will be called _ h - phase_. branching according to priorities 4 - 8 is the _",
    "4-phase _ , according to priorities 9 and 10 the _ 3-phase_.    in the following we have @xmath256 . any @xmath163-regular branch which was preceded by a branch from the @xmath257-phase can be neglected .",
    "this situation can only occur once on each path from the root to a leaf in the search tree .",
    "hence , the run time is only affected by a constant multiple .",
    "we now classify @xmath163-regular branches : an _ internal h - regular branch _ is a @xmath163-regular branch such that another @xmath163-regular branch immediately follows in the search tree in at least one component .",
    "final h - regular branch _ is a @xmath163-regular branch such that no @xmath163-regular branch immediately succeeds in either of the components .",
    "when we are forced to do an @xmath163-regular branch , then according to * hp * the whole graph must be @xmath163-regular at this point .          by observation  [ regreduce ] for @xmath261 this yields at least a @xmath262-branch as @xmath17 must have 4 different weight 4 neighbors due to * hp*. if both components are followed by an @xmath163-regular branch we get a total reduction of @xmath263 in both cases . the same way we can analyze internal @xmath264- and @xmath265-regular branches .",
    "this yields @xmath266- , @xmath267- , @xmath268- and @xmath269-branches as for any @xmath15 we have @xmath270 .",
    "we now analyze a final @xmath163-regular @xmath271-branch with its preceding @xmath272-branch .",
    "the final @xmath163-regular branch might follow in the first , the second or both components of the @xmath272-branch .",
    "so , the _ combined analysis _ would be a @xmath273 , a @xmath274- and a @xmath275-branch .",
    "we will apply a combined analysis for both branches .",
    "due to observation  [ regreduce ] @xmath259 will be deleted in the corresponding component of the preceding branch . due to appendices  [ 5reg ] and [ 6reg ]",
    "the least amount we can get by deleting @xmath259 is @xmath278 in case @xmath279 and @xmath280 in case @xmath281 .",
    "hence , we get four different branches : a @xmath282- , a @xmath283- , a @xmath284- and a @xmath285-branch , respectively .",
    "we must analyze a final 4-regular branch together with any possible predecessor .",
    "these are all branches derived from priorities 4 - 8 .",
    "see appendix  [ oc4reg ] for omitted cases .",
    "+ * internal 4-regular branch * the two corresponding branches are a @xmath288-branch and a @xmath289-branch .",
    "+ * priorities 4 , 5 and 8 * are all dominated by a @xmath290-branch .",
    "analyzing these cases together with a succeeding final 4-regular branch gives a @xmath291-branch and a @xmath292-branch .",
    "+ * priority 7 * let @xmath293 be the number of weight 4 vertices from @xmath259 and the 3- or 4-path , respectively . if in one component a final 4-regular branch follows then the worst case is when @xmath294 as any weight 4 vertex would be deleted completely and @xmath295 .",
    "on the other hand if there is a component without an immediate 4-regular branch succeeding then the worst case appears when @xmath293 is maximal as @xmath296 .",
    "so in the analysis we will consider for each case the particular worst case even though both together never appear .",
    "3-path with @xmath297 _",
    ": first if there is a weight 4 variable in @xmath298 we have at least the following branches : @xmath299 @xmath300 , @xmath301 @xmath302 and @xmath303 @xmath304 . any of those is upper bounded by @xmath11 .",
    "now suppose for all @xmath305 we have @xmath306 .",
    "table  [ labb ] captures the derived branches for certain combinations . here",
    "we will also consider the weights of @xmath237 and @xmath249 ."
  ],
  "abstract_text": [
    "<S> in maxsat , we ask for an assignment which satisfies the maximum number of clauses for a boolean formula in cnf . </S>",
    "<S> we present an algorithm yielding a run time upper bound of @xmath0 for max-2-sat ( each clause contains at most 2 literals ) , where @xmath1 is the number of clauses . </S>",
    "<S> the run time has been achieved by using heuristic priorities on the choice of the variable on which we branch . </S>",
    "<S> the implementation of these heuristic priorities is rather simple , though they have a significant effect on the run time . </S>",
    "<S> also the analysis uses a non - standard measure . </S>"
  ]
}
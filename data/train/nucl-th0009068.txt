{
  "article_text": [
    "the basic idea of the diffusion monte carlo ( dmc ) algorithm is to solve for the ground state of the hamiltonian @xmath0 by evolving the imaginary time schrdinger equation @xmath1 \\psi({\\bf x},t ) \\label{imsch}\\ ] ] to large time@xcite . here ,",
    "@xmath2 and @xmath3 denote the coordinate and the laplacian of the @xmath4-particle system . in order for the algorithm to be practical , capable of handling rapidly varying potentials",
    ", it is essential to implement important sampling as suggested by kalos@xcite .",
    "this means that instead of solving for @xmath5 , one evolves the product wave function @xmath6 according to@xcite @xmath7   + e_l({\\bf x } ) \\rho({\\bf x},t),\\label{impeq } \\\\   & & = \\bigr [ t + d + e_l ] \\rho({\\bf x},t)=\\tilde h\\rho({\\bf x},t ) , \\label{impop}\\end{aligned}\\ ] ] where @xmath8 is the _ local energy _ @xmath9 is the _ drift velocity _ and @xmath10 $ ] is the trial ground state wave function .",
    "eq.([impop ] ) has the formal operator solution @xmath11^n\\rho ( 0 ) .",
    "\\label{eop1}\\ ] ] various dmc algorithms correspond to different approximations to the short time evolution operator @xmath12 .",
    "initial implementations@xcite of the dmc algorithm correspond to essentially approximating @xmath13 which is at most first order in @xmath14 . by use of various clever tricks ,",
    "this error can be reduced substantially in specific applications@xcite .",
    "however , it was recognized by chin@xcite that in order to have a general second order dmc algorithm , one must simulate the embedded fokker - planck evolution operator @xmath15 , _",
    "i.e. _ the fokker - planck equation @xmath16=l\\rho({\\bf x},t ) , \\label{fk}\\ ] ] correctly to second order .",
    "the reason for this is clear . in the limit",
    "when the trial function is the exact ground state wave function @xmath17 , the local energy is the exact ground state energy , which is just a constant .",
    "the convergence of the dmc algorithm would then coincide with the convergence of the langevin algorithm for simulating the fokker - planck equation .",
    "thus in order to have a second order dmc algorithm@xcite , one must have a second order langevin algorithm , for example , by approximating @xmath18",
    "this idea of operator factorization seemed promising for generating higher order dmc algorithms .",
    "however , suzuki@xcite proved in 1991 that , beyond second order , it is impossible to factorize @xmath19 = \\prod_{i=1}^n\\exp[a_i\\epsilon a]\\exp[b_i\\epsilon b ]   \\label{facab}\\ ] ] without having some coefficients @xmath20 and @xmath21 being negative . since @xmath22 is the diffusion kernel , a negative @xmath20 would imply a diffusion process backward in time , which is impossible to simulate .",
    "thus higher than second order dmc algorithms can not be based on obvious factorizations of the form ( [ facab ] ) .    in this work ,",
    "we show how to derive a number of distinct quartic dmc algorithms by factorizing the operator @xmath12 to fourth order with positive coefficients .",
    "we first review how each factorized operator can be simulated in section ii , followed by a derivation of a fourth order dmc algorithm in section iii .",
    "the backbone of this algorithm is a 4th order langevin algorithm , which is of importance in its own right . in section",
    "iv we examine the working details of this algorithm and check its quartic convergence on various systems including the practical case of liquid helium . in section v we discuss alternative quartic algorithms by considering the unrestricted factorization of @xmath12 .",
    "the convergences of two alternative 4th algorithms are also tested on liquid helium .",
    "our conclusions and suggestions for future work are contained in section vi .",
    "the method of operator factorization depends on the fact that each component factor can be simulated exactly or to the required order .",
    "the effect of @xmath23 on @xmath24 is to evolve the latter forward in time according to the _ diffusion _ equation @xmath25 for a set of points @xmath26 distributed according to @xmath24 , this can be exactly simulated by updating each point according to @xmath27 where @xmath28 is a set of gaussian distributed random numbers with zero mean and unit variance .",
    "the operator @xmath29 evolves @xmath24 forward in time according to the _ continuity _ equation @xmath30 , \\label{tdterm}\\ ] ] where @xmath31 is the particle current density with drift velocity field @xmath32 .",
    "this can also be exactly simulated by setting @xmath33 where @xmath34 is the exact trajectory determined by @xmath35 with the initial condition @xmath36 . in practice",
    ", one can only solve this trajectory equation to the required order of accuracy .",
    "the operator @xmath37 evolves @xmath24 forward in time according to the _ rate _",
    "equation @xmath38 the exact solution @xmath39 can be simulated by updating the _ weight _ @xmath40 associated with the configuration @xmath41 by @xmath42}w_k .",
    "\\label{wterm}\\ ] ] a uniform constant @xmath43 is usually added to keep the weights near unity .",
    "there are various methods@xcite of keeping track of weights , the original and simplest method@xcite is just to replicate the configuration @xmath44 on the average @xmath45}$ ] times .",
    "we use a method which is intermediate between that of @xcite and @xcite .",
    "our algorithm is , however , independent of any specific method of weight tracking .",
    "thus the second order factorization of @xmath46 leads to the following second order dmc algorithm : @xmath47 where the final position @xmath48 is to be weighted by @xmath49},\\ ] ] and where each @xmath50 needs to be solved at least to second order by any convenient method .",
    "following @xcite this algorithm will be referred to as dmc2b .",
    "for a fourth order factorization of @xmath51 $ ] with positive coefficients , suzuki@xcite has shown that it is necessary to retain as a factor , the exponential of either double commutators @xmath52 $ ] or @xmath53 $ ] .",
    "recently , chin@xcite has derived three such factorization schemes , two of which were also found previously by suzuki@xcite . to decompose @xmath54 to fourth order",
    ", one possibility is to keep the langevin operator @xmath55 intact . in this case , the double commutator @xmath56\\right ]   = \\left[e_l,\\left [ t , e_l \\right]\\right ] = ( \\partial_ie_l)(\\partial_i e_l),\\ ] ] is the square of the gradient of the local energy , which is a manageable coordinate function . since the langevin operator is complicated to simulate , we must choose a fourth order factorization of @xmath57 which minimizes the appearance of @xmath55 .",
    "we choose the following factorization as given by refs.@xcite , @xmath58 with @xmath59 given by @xmath60\\right ] = e_l + { 1\\over 48 } \\epsilon^2 \\left\\vert \\nabla e_l \\right\\vert^2 . \\label{dmc4p1b}\\ ] ] thus to the extend that the local energy @xmath61 is a smooth function , the double commutator correction will be negligible .",
    "the weights in ( [ dmc41 ] ) have a simple structure .",
    "if @xmath62 is the initial configuration , @xmath63 the langevin evolved configuration time step @xmath64 later , and @xmath65 the langevin evolved configuration a time step @xmath64 later still , then we assign the final configuration @xmath65 a weight of @xmath66}.\\ ] ]    the demanding part of this dmc algorithm is the simulation the fokker - planck equation ( [ fk ] ) .",
    "the resulting langevin algorithm is an important simulation algorithm with numerous applications in statistical and chemical physics@xcite .",
    "since we have recently given a detailed derivation of a fourth order langevin algorithm@xcite , we will be brief here in summarizing its essential features . to obtain a fourth order langevin algorithm",
    ", we again seek to decompose @xmath67 to fourth order . in this case",
    ", we keep the double commutator @xmath68 $ ] , which is at most a second order differential operator , and factorize the fokker - planck operator as@xcite , @xmath69 @xmath70={1\\over\\sqrt{3}}t+ { \\epsilon^2\\over 24}(2-\\sqrt{3 } ) [ \\partial_i \\partial_j f_{i , j } + \\partial_i v_{i } ] , \\label{ttid}\\ ] ] where subscripts indicate partial differentiations , and @xmath71 by appropriate normal ordering , the double commutator term can be regarded as a non - uniform gaussian random walk . however , in order to be able to sample the non - uniform gaussian in cases where @xmath72 has negative eigenvalues , we implement the normal ordering as follows so that the full covariance matrix is always positive definite in the limit of small @xmath14 , @xmath73 \\right\\ } \\exp\\left ( { \\epsilon\\over 2\\sqrt{3 } } t\\right ) \\nonumber\\\\ & & =                                                                      { \\cal n } \\left\\ { \\exp\\left [ { \\epsilon\\over 2\\sqrt{3 } }   \\left(- { 1\\over 2 } \\partial_i \\partial_j \\delta_{i , j}\\right )   + { \\epsilon^3\\over 24}\\left(2 - \\sqrt{3}\\right ) \\left(\\partial_i",
    "\\partial_j f_{i , j } + \\partial_i v_i \\right ) \\right ] \\right\\ } \\exp\\left ( { \\epsilon\\over 2\\sqrt{3 } } t\\right),\\end{aligned}\\ ] ] where @xmath74 denotes the normal ordering of all derivative operators to the left .",
    "factorization ( [ dmc4p2 ] ) can now be simulated as @xmath75     \\xi_j^{\\prime\\prime},\\nonumber\\\\ x_i^\\prime & = & z_i(\\epsilon/2 )         + \\xi^{\\prime\\prime\\prime}_i        \\sqrt{{\\epsilon\\over 2 } \\left(1-{1\\over\\sqrt{3}}\\right ) } , \\label{dmc4al } \\end{aligned}\\ ] ] where @xmath76 to @xmath77 are four sets of independent gaussian random numbers with zero mean and unit variance . here",
    ", the two trajectory equations @xmath78 , @xmath79 must be solved correctly to at least fourth order .",
    "empirically one observes that the more accurately one solves the trajectory equation , the smaller is the fourth order error coefficient .",
    "however , in practice one must weight improved convergence , which allows larger time steps to be used , against greater computational effort . in the present case , we solve the trajectory equation by the standard 4th order runge - kutta algorithm .",
    "eq.([dmc41 ] ) is our basic 4th order dmc algorithm and will be referred to as dmc4 .",
    "we will first explore its workings in some detail before considering alternative algorithms .",
    "we begin by verifying that dmc4 is indeed quartic by solving the 3-d harmonic oscillator @xmath80 both analytically with the help of mathematica and by direct monte carlo simulation .",
    "the trial function used is @xmath81 with a deliberate poor choice of the trial parameter @xmath82 . in fig.1",
    "we plot the ground state energy from the mixed expectation @xmath83 as a function of the step size @xmath14 used .",
    "the lines are analytical functions from mathematica and the plotting symbols are monte carlo simulation results .",
    "we have included one first order , two second order , and one first order rejection dmc algorithm for comparison .",
    "the detail descriptions of dmc1 , dmc2a and dmc2b can be found in ref.@xcite .",
    "the rejection algorithm uses a first order langevin algorithm together with a generalized metropolis acceptance - rejection step so that the square of the trial function is exactly sampled at all step sizes@xcite . for this case",
    ", we have no analytical result and the plotted line is just a 6th order polynomial fit .",
    "the 4th order algorithm is indeed quartic , as can be verified analytically .",
    "it is distinct from lower order algorithms even in monte carlo simulations .",
    "we next test dmc4 by solving the 3-d morse potential with hamiltonian , @xmath84 , \\label{morh}\\ ] ] with @xmath85 , @xmath86 and @xmath87 .",
    "these values ensure that the ground state is high up in the potential and that the ground state wave function is not well approximated by a gaussian .",
    "we use a trial function of the form @xmath88 with @xmath89 , @xmath90 and variational energy -11.1774 .",
    "this is to be compared with the exact ground state energy of -12.5@xmath91 .",
    "the convergence of various dmc algorithms are compared in fig.2 . the quartic convergence of dmc4 is again verified .",
    "its convergence is clearly distinct from lower order results and is nearly flat . in this case",
    ", we have no analytical results and all lines are just least square fits to the data .    to demonstrate that dmc4 can be used to solve realistic physical problems",
    ", we use it to solve for ground state properties of bulk liquid helium described by the many - body hamiltonian @xmath92 where @xmath93 with potential @xmath94 determined by aziz _ et al _ @xcite . instead of the usual mcmillan trial function , we use a trial function of the form , @xmath95\\}. \\label{chinw}\\ ] ] with @xmath96 and @xmath97 , this trial function gives a slightly better energy of 5.886(5 ) k / particle .",
    "since the standard calculation details@xcite are well known , we will just describe the results as summarized in fig.3 .",
    "again , the convergence of our 4th order algorithm is clearly quartic .",
    "the extrapolated values are -7.114(2 ) @xmath98 for our 4th order algorithm and -7.111(2 ) @xmath98 for the second order algorithm dmc2a .",
    "both are in agreement with boronat and casullerass@xcite second order dmc result of -7.121(10 ) @xmath98 .",
    "note that very large steps can be used with algorithm dmc4 , roughly ten times as large as those of second order algorithms .    in fig.4",
    ", we show the resulting radial density distribution @xmath99 from our 4th order calculation at @xmath100 and @xmath101 .",
    "the distribution is virtually unchanged even at these large time steps and both are in excellent agreement with the experimental distribution of svensson _ et al .",
    "_ @xcite .    in fig.5",
    "we show dmc4 s thermalization toward the exact ground state from the variational trial wave function . starting from the initial variational energy ,",
    "we plot the population averaged energy as a function of iterated time for various time step sizes .",
    "this plot shows that each iteration of the algorithm at @xmath101 is indistinguishable from multiple iterations at smaller time steps having the same time interval .",
    "moreover , it demonstrates that the algorithm converges to the ground state inversely proportional to the step size used , up to @xmath101 .",
    "that is , only five iterations are needed at @xmath101 to reach the exact ground state near @xmath102 and 20 iterations at @xmath103 , etc .. thus our 4th order algorithm can project out the ground state with ten times fewer updates than a second order algorithm .",
    "more important than the thermalization time is the observable correlation time . in a monte carlo calculation , it is highly desirable to have uncorrelated configurations for an accurate estimate of the statistical errors .",
    "the correlation coefficient for an observable @xmath104 is defined by @xmath105 in fig.6 , we show the ground state energy correlation function of liquid helium as computed by our 4th order algorithm .",
    "the correlation time is roughly @xmath106 , at which point the correlation coefficient dropped to zero .",
    "this plot shows that the correlation time depends only on the total time separation .",
    "thus if the algorithm remains accurate at large time steps , then fewer iterations are needed to produce uncorrelated configurations .    in implementing the fourth order langevin algorithm , we used the standard fourth order runge - kutta algorithm to solve the trajectory equation ( [ traject ] ) .",
    "when the step size is large , the 4th order error in the runge - kutta algorithm can greatly overshadow the intrinsic 4th order step size error of the langevin and that of the dmc algorithm , causing both to fail prematurely . to guard against this from happening , we monitor the difference between the results of the fourth order runge - kutta and its embedded second order algorithm .",
    "if the square of this difference is larger than some tolerance , say @xmath107 , we recalculate the trajectory twice at half the time step size . even at the largest step size used ,",
    "only a few percent of trajectories need to be recalculated , incurring only a small additional overhead .",
    "this additional effort greatly extended the flatness of the convergence curve as shown in fig.3 .",
    "the total calculation time running on a single processor of an origin 2000 is 51 hours , about 5 times as long the second order algorithm .",
    "our dmc4 algorithm ( [ dmc41 ] ) , which preserves the fokker - planck operator @xmath55 intact , may not be the most efficient fourth order algorithm possible .",
    "consider the limit in which the trial function approaches the exact ground state , @xmath108 .",
    "in this ideal case the local energy becomes an irrelevant constant , @xmath109 , and the algorithm is just @xmath110 which is the running of the 4th order langevin algorithm twice , at half the time step .",
    "it seems plausible that one should be able to derive a 4th order dmc algorithm which reduces to a single run of the 4th order langevin algorithm in the same limit .",
    "we are thus led to consider the general factorization , to fourth order , of a three - operator exponential @xmath111 .",
    "there are now 9 double commutators to be considered : 6 are the generalizations of the two operator case , @xmath112,\\quad [ d,[t , d]],\\quad   [ d,[e_l , d]],\\quad [ e_l,[d , e_l]],\\quad   [ e_l,[t , e_l]],\\quad [ t,[e_l , t]],\\nonumber\\ ] ] and three new ones related by the jacobi identity , @xmath113+[d,[e_l , t]]+[e_l,[t , d]]=0.\\ ] ] thus only two of the last three commutators are independent . note also that for the present form of the operators , @xmath114=0 $ ] .",
    "we have examined all these commutators in the case of liquid helium to determine which one is doable and can be kept . to explore the many possible factorizations ,",
    "we have devised a mathematica program to combine the exponential of operators symbolically . with the help of this program ,",
    "we have explored an extensive list of distinct 4th order algorithms .",
    "since there are many operators in each such factorization , it is too cumbersome to write out the explicit exponential form .",
    "moreover , since the factorization will always be left - right symmetric , there is no need to repeat operators on the left side . in the following , we will only indicate the exponential operators symbolically beginning with the _ central _ one and list only operators to the _",
    "right_. for example , algorithm dmc4 ( [ dmc41 ] ) will be denoted as @xmath115 { + { 1\\over 6 } e_l } . \\label{newnot}\\end{aligned}\\ ] ] each update of this algorithm requires the evaluation of , in decreasing order of computational complexity , 4@xmath116 s , 2@xmath117 s , 1@xmath118 , 1@xmath119 and 4@xmath120 s .",
    "( the last @xmath119 from the last update can be used as first @xmath119 of the current update . ) since @xmath116 is the most computationally intensive operator , followed by @xmath117 , @xmath118 , etc .",
    ", we would like to minimize their appearance in that order .",
    "below , we will describe two alternative algorithms that are computationally more economical than dmc4 in solving for the ground state of liquid helium .",
    "one possible 4th order algorithm is to retain the same double commutators @xmath68 $ ] and @xmath121 $ ] as in dmc4 , but allow @xmath122 to be broken up : @xmath123 here , @xmath117 and @xmath124 given by @xmath125 , \\label{ttil}\\ ] ] @xmath126 .",
    "\\label{etill}\\ ] ] this algorithm requires 4@xmath116 s , but only 1@xmath117 , 1@xmath118 , 2@xmath119 s and 4@xmath120 s .",
    "we will denote this algorithm as dmc4a .",
    "this algorithm is roughly 10% faster dmc4 and its quartic convergence is clearly demonstrated in fig.[fthree ] .",
    "however , its convergence range is only about half of dmc4 .",
    "the actual running time for this algorithm is 46 hours .    to reduce the number of @xmath116 operators",
    ", one must pay the price of retaining additional double commutators .",
    "we will refer to the following algorithm with only two @xmath116 operators as dmc4b : @xmath127 where @xmath128 , @xmath129 and @xmath130+[d,[e_l , d]]\\bigr ) + ( c_0-{a_0\\over { \\sqrt{3}}})[e_l,[t , e_l ] ] \\right ] \\nonumber \\\\ & & + { 1\\over 2 \\sqrt{3}}a_0 t . \\label{tttid}\\end{aligned}\\ ] ] the additional commutator @xmath131=-g_i\\nabla_i[g_j\\nabla_j e_l({\\bf x } ) ] , \\label{ded}\\ ] ] is a calculable function involving higher derivative of @xmath132 and @xmath119 . in this algorithm ,",
    "we have placed all the double commutators at the center so that they are evaluated only once per update .",
    "this is done by splitting @xmath133 in eq.([tttid ] ) , meaning that we first do half of required gaussian random walk , evaluate all double commutators , then complete the remaining half of the gaussian walk including the effect of @xmath134 $ ] as it is done in the langevin algorithm .",
    "the ubiquitous irrational coefficients are roots of quadratic equations which force unwanted double commutators to vanish .",
    "one can check by inspection that as @xmath108 and @xmath109 , ( [ dmc4b ] ) reduces to just the 4th order langevin algorithm ( [ dmc4p2 ] ) .",
    "the results of this algorithm for liquid helium are shown in fig.[fthree ] as asterisks .",
    "the ground state energy is correctly obtained , but because these higher derivatives are rapidly varying functions , we have not been able to stabilize the population of weights beyond @xmath135 . while this algorithm may not work as well as dmc4 and dmc4a for liquid helium ,",
    "its economy of requiring only two trajectories per update may be of utility in other applications .",
    "the calculation time for data points shown is 36 hours .",
    "in this work , we have derived a number of distinct fourth order dmc algorithms by factorizing the imaginary time schrdinger evolution operator to fourth order .",
    "this is a notable advance in algorithm development , made possible only by the recent progress in understanding positive coefficient operator factorization .",
    "our work illustrates a global view of algorithms as products of factorized operators .",
    "such a perspective gives order and insight into the working of the diffusion monte carlo algorithm .",
    "it would have been very difficult to derive such a high order algorithm without such a conceptual structure .",
    "we have further demonstrated the practicality of these algorithms by using them to solve for the ground state of liquid helium .",
    "the quartic convergences of dmc4 and dmc4a have been verified and both yielded ground state energy and radial density distribution in excellent agreements with experiment . despite the fact that these algorithms are rather complicated to program requiring higher order derivatives , they allow very large step sizes to be used , virtually eliminate the time step size error and greatly reduce statistical correlations between successive updated configurations .",
    "since this is only the first demonstration of quartic algorithms , there is room for further improvements .",
    "for example , we have shown how the factorization of a three - operator exponential can lead to a number of distinct four order dmc algorithms .",
    "a more systematic categorization of various fourth order factorizations would help in obtaining the most efficient algorithm .",
    "secondly , the retainment of some double commutators is necessary , however , it has not been studied in detail where they should be placed so as to minimize the 4th order error coefficient or computational effort .",
    "it is observed that the step size convergence curve is flatter when the trajectory equation is solved more exactly . in this work ,",
    "we have only used the 4th order runge - kutta algorithm in solving for the deterministic trajectory .",
    "future study may explore the effects of using alternative numerical methods , such as symplectic algorithms@xcite , for solving the trajectory equation ."
  ],
  "abstract_text": [
    "<S> by decomposing the important sampled imaginary time schrdinger evolution operator to fourth order with positive coefficients , we derived a number of distinct fourth order diffusion monte carlo algorithms . </S>",
    "<S> these sophisticated algorithms require higher derivatives of the drift velocity and local energy and are more complicated to program . however , they allowed very large time steps to be used , converged faster with lesser correlations , and virtually eliminated the step size error . </S>",
    "<S> we demonstrated the effectiveness of these quartic algorithms by solving for the ground state properties of bulk liquid helium . </S>"
  ]
}
{
  "article_text": [
    "the linear support vector machine ( svm ) @xcite aims to find a hyperplane to separate a set of data points .",
    "it was orginally designed for binary classifications .",
    "motivated by texture classification and gene expression analysis , which usually have a large number of variables but only a few relevant , certain sparsity regularizers such as the @xmath0 penalty @xcite , need to be included in the svm model to control the sparsity pattern of the solution and achieve both classification and variable selection . on the other hand",
    ", the given data points may belong to more than two classes . to handle the more complex multiclass problems ,",
    "the binary svm has been generalized to multicategory classifications @xcite .",
    "the initially proposed multiclass svm ( msvm ) methods construct several binary classifiers , such as `` one - against - one '' @xcite , `` one - against - rest '' @xcite and `` directed acyclic graph svm '' @xcite .",
    "these models are usually solved by considering their dual formulations , which are quadratic programs often with fewer variables and can be efficiently solved by quadratic programming methods .",
    "however , these msvms may suffer from data imbalance ( i.e. , some classes have much fewer data points than others ) which can result in inaccurate predictions .",
    "one alternative is to put all the data points together in one model , which results in the so - called `` all - together '' msvms ; see @xcite and references therein for the comparison of different msvms .",
    "the `` all - together '' msvms train multi - classifiers by solving one large optimization problem , whose dual formulation is also a quadratic program . in the applications of microarray classification ,",
    "variable selection is important since most times only a few genes are closely related to certain diseases .",
    "therefore some structure regularizers such as @xmath0 penalty @xcite and @xmath1 penalty @xcite need to be added to the msvm models . with the addition of the structure regularizers ,",
    "the dual problems of the aforementioned msvms can be difficult to formulate and hard to solve by standard second - order optimization methods . in this paper",
    ", we focus on three `` all - together '' regularized msvms . specifically , given a set of samples",
    "@xmath2 in @xmath3-dimensional space and each @xmath4 with a label @xmath5 , we solve the constrained optimization problem @xmath6 where is generalized hinge loss function ; @xmath7 equals _ one _ if @xmath8 and _ zero _ otherwise ; @xmath9_+=\\max(0,t)$ ] ; @xmath10 denotes the @xmath11th column of @xmath12 ; @xmath13 denotes the vector of appropriate size with all _ _ one__s ; @xmath14 ; @xmath15 is some regularizer specified below .",
    "usually , the regularizer can promote the structure of the solution and also avoid overfitting problems when the training samples are far less than features .",
    "the constraints @xmath16 are imposed to eliminate redundancy in @xmath17 and are also necessary to make the loss function @xmath18 fisher - consistent @xcite .",
    "the solution of gives @xmath19 linear classifiers @xmath20 .",
    "a new coming data point @xmath21 can be classified by the rule @xmath22 .",
    "we consider the following three different forms of @xmath15 :    [ reguw ] @xmath23    where @xmath24 denotes the @xmath11th row of @xmath12 .",
    "they fit to data with different structures and can be solved by a _",
    "unified _ algorithmic framework . note that we have added the term @xmath25 in .",
    "a positive @xmath26 will make our algorithm more efficient and easier to implement .",
    "the extra term usually does not affect the accuracy of classification and variable selection as shown in @xcite for binary classifications . if @xmath26 happens to affect the accuracy",
    ", one can choose a tiny @xmath26 .",
    "model includes as special cases the models in @xcite and @xcite by letting @xmath27 be the one in and respectively and setting @xmath28 . to the best of our knowledge , the regularizer has not been considered in msvm before .",
    "it encourages group sparsity of the solution @xcite , and our experiments will show that can give similar results as those by .",
    "our main contributions are : ( i ) the development of a unified algorithmic framework based on the admm that can solve msvms with the three different regularizers defined in ; ( ii ) the proper use of the woodbury matrix identity @xcite which can reduce the size of the linear systems arising during the solution of ; ( iii ) computational experiments on a variety of datasets that practically demonstrate that our algorithms can solve large - scale multiclass classification problems much faster than state - of - the - art second order methods .",
    "we use @xmath13 and @xmath29 to denote a vector and a matrix with all _ _ one__s , respectively .",
    "@xmath30 is used for an identity matrix .",
    "their sizes are clear from the context .",
    "the rest of the paper is organized as follows .",
    "section [ sec : application ] gives our algorithm for solving .",
    "numerical results are given in section [ sec : numerical ] on both synthetic and real data .",
    "finally , section [ sec : conclusion ] concludes this paper .",
    "in this section we extend admm into the general optimization problems described by . due to lack of space",
    "we refer the reader to @xcite for details of admm .",
    "we first consider with @xmath15 defined in and then solve it with @xmath15 in and in a unified form .",
    "the parameter @xmath26 is always assumed positive . one can also transform the msvms to quadratic or second - order cone programs and use standard second - order methods to solve them",
    ". nevertheless , these methods are computationally intensive for large - scale problems . as shown in section [ sec : numerical ] , admm is , in general , much faster than standard second - order methods .",
    "introduce auxiliary variables @xmath31 and @xmath32 , where @xmath33\\in{\\mathbb{r}}^{p\\times n}$ ] . using the above auxiliary variables we can equivalently write with @xmath15 defined in as follows @xmath34_++\\lambda_1\\|{\\mathbf{u}}\\|_1+\\frac{\\lambda_2}{2}\\|{\\mathbf{w}}\\|_f^2+\\frac{\\lambda_3}{2}\\|{{\\bf b}}\\|_2 ^ 2\\\\[0.1 cm ]          \\text{s.t .",
    "} & { \\mathbf{a}}={\\mathbf{x}}^\\top{\\mathbf{w}}+{{\\bf e}}{{\\bf b}}^\\top+{\\mathbf{e}},\\ { \\mathbf{u}}={\\mathbf{w } } , { \\mathbf{w}}{{\\bf e}}=\\mathbf{0},\\ { { \\bf e}}^\\top{{\\bf b}}=0.\\vspace{-0.2 cm }          \\end{array}\\ ] ] the augmented lagrangian in the augmented lagrangian , but instead we include them in @xmath35-subproblem ; see the update .",
    "] of is @xmath36_++\\lambda_1\\|{\\mathbf{u}}\\|_1+\\frac{\\lambda_2}{2}\\|{\\mathbf{w}}\\|_f^2+\\frac{\\lambda_3}{2}\\|{{\\bf b}}\\|_2 ^ 2+\\langle{{\\boldsymbol{\\lambda } } } , { \\mathbf{w}}-{\\mathbf{u}}\\rangle\\\\[0.1 cm ]          & + \\frac{\\mu}{2}\\|{\\mathbf{w}}-{\\mathbf{u}}\\|_f^2          + \\langle{{\\boldsymbol{\\pi } } } , { \\mathbf{x}}^\\top{\\mathbf{w}}+{{\\bf e}}{{\\bf b}}^\\top-{\\mathbf{a}}+{\\mathbf{e}}\\rangle\\\\[0.1 cm ]          & + \\frac{\\alpha}{2}\\|{\\mathbf{x}}^\\top{\\mathbf{w}}+{{\\bf e}}{{\\bf b}}^\\top-{\\mathbf{a}}+{\\mathbf{e}}\\|_f^2 ,          \\end{array}\\]]where @xmath37 are lagrange multipliers and @xmath38 are penalty parameters . the admm approach for can be derived by minimizing @xmath39 alternatively with respect to @xmath35 and @xmath40 and updating the multipliers @xmath37 , namely , at iteration @xmath41 ,    [ admm : elastic ] @xmath42    where @xmath43 .",
    "the updates and are simple .",
    "we next discuss how to solve and .",
    "define @xmath44\\in { \\mathbb{r}}^{j\\times(j-1)}$ ] .",
    "let @xmath45 be the submatrix consisting of the first @xmath46 columns of @xmath12 and @xmath47 be the subvector consisting of the first @xmath46 components of @xmath48 .",
    "then it is easy to verify that @xmath49 and problem is equivalent to the unconstrained optimization problem @xmath50              & + \\langle{{\\boldsymbol{\\pi}}}^{(k ) } , { \\mathbf{x}}^\\top\\hat{{\\mathbf{w}}}{\\mathbf{p}}^\\top+{{\\bf e}}\\hat{{{\\bf b}}}^\\top{\\mathbf{p}}^\\top\\rangle + \\frac{\\alpha}{2}\\|{\\mathbf{x}}^\\top\\hat{{\\mathbf{w}}}{\\mathbf{p}}^\\top+{{\\bf e}}\\hat{{{\\bf b}}}^\\top{\\mathbf{p}}^\\top-{\\mathbf{a}}^{(k)}+{\\mathbf{e}}\\|_f^2 .",
    "\\end{array}\\]]the first - order optimality condition of is the linear system @xmath51where @xmath52 .",
    "the size of is @xmath53 and when @xmath3 is small , we can afford to directly solve it .",
    "however , if @xmath3 is large , even the iterative method for linear system ( e.g. , preconditioned conjugate gradient ) can be very expensive . in the case of `` large @xmath3 ,",
    "small @xmath54 '' , we can employ the _ woodbury matrix identity _",
    "( e.g. , @xcite ) to efficiently solve .",
    "in particular , let @xmath55 and @xmath56 $ ] .",
    "then the coefficient matrix of is @xmath57 , and by the _",
    "woodbury matrix identity _",
    ", we have @xmath58-\\frac{1}{j}{\\mathbf{e}}$ ] and @xmath59    note @xmath60 is diagonal , and thus @xmath61 is simple to compute .",
    "@xmath62 is @xmath63 and positive definite .",
    "hence , as @xmath64 , can be solved by solving a much smaller linear system and doing several matrix - matrix multiplications . in case of large @xmath54 and @xmath3",
    ", one can perform a proximal gradient step to update @xmath12 and @xmath48 , which results in a proximal - admm @xcite . to the best of our knowledge ,",
    "this is the first time that the woodbury matrix identity is used to substantially reduce , we found that using the woodbury matrix identity can be about 100 times faster than preconditioned conjugate gradient ( pcg ) with moderate tolerance @xmath65 for the solving the linear system . ]",
    "the computational work and allow admm to efficiently solve large - scale multiclass svms",
    ". solve by multiplying @xmath66 to both sides .",
    "letting @xmath67 and @xmath68 gives the solution of .",
    "note that @xmath69 and @xmath70 are independent of each other as @xmath12 and @xmath48 are fixed .",
    "hence we can separately update @xmath69 and @xmath70 by @xmath71_++\\frac{\\alpha}{2}\\big\\|{\\mathbf{x}}^\\top{\\mathbf{w}}^{(k+1)}+{{\\bf e}}({{\\bf b}}^{(k+1)})^\\top+\\frac{1}{\\alpha}{{\\boldsymbol{\\pi}}}^{(k)}+{\\mathbf{e}}-{\\mathbf{a}}\\big\\|_f^2\\\\[-0.1 cm ]              & { \\mathbf{u}}^{(k+1)}=\\underset{{\\mathbf{u}}}{\\operatorname*{argmin}}\\lambda_1\\|{\\mathbf{u}}\\|_1+\\frac{\\mu}{2}\\big\\|{\\mathbf{w}}^{(k+1)}+\\frac{1}{\\mu}{{\\boldsymbol{\\lambda}}}^{(k)}-{\\mathbf{u}}\\big\\|_f^2 .",
    "\\end{aligned}\\]]both the above problems are separable and have closed form solutions @xmath72where @xmath73and @xmath74 . putting the above discussions together , we have algorithm [ alg : elastic ] for solving with @xmath27 defined in .",
    "@xmath54 sample - label pairs @xmath75 .",
    "@xmath38 and @xmath76 .",
    "firstly , we write with @xmath15 defined in and in the unified form of @xmath77where @xmath78 for and @xmath79 for . introducing auxiliary variables",
    "@xmath31 , @xmath32 , and @xmath80 , we can write equivalently to @xmath81_++\\lambda_1\\|{\\mathbf{u}}\\|_1+\\overset{p}{\\underset{j=1}{\\sum}}\\lambda_2\\|{{\\bf v}}^j\\|_q+\\frac{\\lambda_3}{2}\\|{{\\bf b}}\\|^2\\\\[0.1 cm ]      \\text{s.t . } & { \\mathbf{a}}={\\mathbf{x}}^\\top{\\mathbf{w}}+{{\\bf e}}{{\\bf b}}^\\top+{\\mathbf{e}},\\ { \\mathbf{u}}={\\mathbf{w}},\\ { \\mathbf{v}}={\\mathbf{w}},\\ { \\mathbf{w}}{{\\bf e}}=\\mathbf{0},\\ { { \\bf e}}^\\top{{\\bf b}}=0 .      \\vspace{-0.2cm}\\end{array}\\ ] ] the augmented lagrangian of is @xmath82_++\\lambda_1\\|{\\mathbf{u}}\\|_1+\\overset{p}{\\underset{j=1}{\\sum}}\\lambda_2\\|{{\\bf v}}^j\\|_q+\\frac{\\lambda_3}{2}\\|{{\\bf",
    "b}}\\|_2 ^ 2\\nonumber\\\\[-0.1 cm ]      & \\hspace{-2.5cm}+\\langle{{\\boldsymbol{\\pi } } } , { \\mathbf{x}}^\\top{\\mathbf{w}}+{{\\bf e}}{{\\bf b}}^\\top-{\\mathbf{a}}+{\\mathbf{e}}\\rangle+\\frac{\\alpha}{2}\\|{\\mathbf{x}}^\\top{\\mathbf{w}}+{{\\bf e}}{{\\bf b}}^\\top-{\\mathbf{a}}+{\\mathbf{e}}\\|_f^2\\nonumber\\\\[-0.1 cm ]      & \\hspace{-2.5cm}+\\langle{{\\boldsymbol{\\lambda } } } , { \\mathbf{w}}-{\\mathbf{u}}\\rangle+\\frac{\\mu}{2}\\|{\\mathbf{w}}-{\\mathbf{u}}\\|_f^2+\\langle{{\\boldsymbol{\\gamma } } } , { \\mathbf{w}}-{\\mathbf{v}}\\rangle+\\frac{\\nu}{2}\\|{\\mathbf{w}}-{\\mathbf{v}}\\|_f^2,\\label{eq : spqnorm2_lagrangian }          \\end{aligned}\\]]where @xmath83 are lagrange multipliers and @xmath84 are penalty parameters .",
    "the admm updates for can be derived as    [ admm : spqnorm ] @xmath85    the subproblem can be solved in a similar way as discussed in section [ sec : solveelastic ] .",
    "specifically , first obtain @xmath86 by solving @xmath87 where @xmath88 and then let @xmath89 . to solve note that @xmath90 and @xmath91 are independent of each other and can be updated separately .",
    "the update of @xmath69 and @xmath70 is similar to that described in section [ sec : solveelastic ] .",
    "we next discuss how to update @xmath91 by solving the problem @xmath92let @xmath93 .",
    "according to @xcite , the solution of for @xmath78 is @xmath94          \\frac { \\|{{\\bf z}}^j\\|_2-\\lambda_2/\\nu}{\\|{{\\bf z}}^j\\|_2}{{\\bf z}}^j , & \\text { otherwise }          \\end{array}\\right.,\\forall j.\\]]for @xmath79 , the solution of can be computed via algorithm [ alg : spqnorm_v ] ( see @xcite for details ) . putting the above discussions together ,",
    "we have algorithm [ alg : splasso_inf ] for solving with @xmath15 given by and .    @xmath95 and @xmath93 .",
    "let us denote the @xmath41th iteration of the objectives of and as @xmath96 and define @xmath97              { \\mathbf{z}}_2^{(k)}=\\big({\\mathbf{w}}^{(k)},{{\\bf b}}^{(k)},{\\mathbf{a}}^{(k)},{\\mathbf{u}}^{(k)},{\\mathbf{v}}^{(k)},{{\\boldsymbol{\\pi}}}^{(k)},{{\\boldsymbol{\\lambda}}}^{(k)},{{\\boldsymbol{\\gamma}}}^{(k)}\\big).\\end{array}\\ ] ]    [ thm : svms ] let @xmath98 and @xmath99 be the sequences generated by and , respectively .",
    "then @xmath100 , @xmath101 , and @xmath102 all converge to _ zero _ , where @xmath103 and @xmath104 are the optimal objective values of and , respectively .",
    "in addition , if @xmath105 in , then @xmath106 converges linearly .    the proof is based on @xcite and due to the lack of space we omit it",
    "we now test the three different regularizers in on two sets of synthetic data and two sets of real data .",
    "as shown in @xcite the @xmath107 regularized msvm works better than the standard `` one - against - rest '' msvm in both classification and variable selection . hence , we choose to only compare the three regularized msvms . the admm algorithms discussed in section [ sec : application ]",
    "are used to solve the three models . until the preparation of this paper",
    ", we did not find much work on designing specific algorithms to solve the regularized msvms except @xcite which uses a path - following algorithm to solve the @xmath107 msvm . to illustrate the efficiency of admm",
    ", we compare it with sedumi @xcite which is a second - order method .",
    "we call sedumi in the cvx environment @xcite .",
    "@xmath54 sample - label pairs @xmath75 .",
    "@xmath84 , set @xmath108 and initialize @xmath109 .",
    "all our code was written in matlab , except the part of algorithm [ alg : spqnorm_v ] which was written in c with matlab interface .",
    "we used @xmath110 for all three models . in our experiments",
    ", we found that the penalty parameters were very important for the speed of admm . by running a large set of random tests",
    ", we chose @xmath111 in and @xmath112 in .",
    "origins were used as the starting points .",
    "as did in @xcite , we terminated admm for , that is , with @xmath15 in , if @xmath113and admm for , that is , with @xmath15 in and , if @xmath114 in addition , we set a maximum number of iterations @xmath115 for admm .",
    "default settings were used for sedumi .",
    "all the tests were performed on a pc with an i5 - 2500 cpu and 3-gb ram and running 32-bit windows xp .      the first test is a five - class example with each sample @xmath21 in a 10-dimensional space .",
    "the data was generated in the following way : for each class @xmath11 , the first two components @xmath116 were generated from the mixture gaussian distribution @xmath117 where for @xmath118 @xmath119,\\ ] ] and the remaining eight components were independently generated from standard gaussian distribution .",
    "this kind of data was also tested in @xcite .",
    "we first chose best parameters for each model by generating @xmath120 samples for training and another @xmath120 samples for tuning parameters .",
    "for elastic net , we fixed @xmath121 since it is not sensitive and then searched the best @xmath122 over @xmath123 .",
    "the parameters @xmath122 and @xmath124 for group lasso and supnorm were selected via a grid search over @xmath125 . with the tuned parameters , we compared admm and sedumi on @xmath120 randomly generated training samples and @xmath126 random testing samples , and the whole process was independently repeated 100 times .",
    "the performance of the compared models and algorithms were measured by accuracy ( i.e. , @xmath127 ) , running time ( sec ) , the number of correct zeros ( cz ) , the number of incorrect zeros ( iz ) and the number of non - zero rows ( nr ) .",
    "we counted cz , iz and nr from the truncated solution @xmath128 , which was obtained from the output solution @xmath12 such that @xmath129 if @xmath130 and @xmath131 otherwise . the average results are shown in table [ table : syn1 ] , from which we can see that admm produces similar results as those by sedumi within less time .",
    "elastic net makes slightly lower prediction accuracy than that by the other two models .",
    "the second test is a four - class example with each sample in @xmath3-dimensional space .",
    "the data in class @xmath11 was generated from the mixture gaussian distribution @xmath132 .",
    "the mean vectors and covariance matrices are @xmath133 , and @xmath134this kind of data was also tested in @xcite for binary classifications .",
    "we took @xmath135 and @xmath136 in this test . as did in last test",
    ", the best parameters for all models were tuned by first generating @xmath137 training samples and another @xmath137 validation samples .",
    "then we compared the different models solved by admm and sedumi with the selected parameters on @xmath137 randomly generated training samples and @xmath138 random testing samples .",
    "the comparison was independently repeated 100 times .",
    "the performance of different models and algorithms were measured by prediction accuracy , running time ( sec ) , the number of incorrect zeros ( iz ) , the number of nonzeros in each column ( nz1 , nz2 , nz3 , nz4 ) , where iz , nz1 , nz2 , nz3 , nz4 were counted in a similar way as that in last test by first truncating the output solution @xmath12 .",
    "table [ table : syn2 ] lists the average results , from which we can see that the elastic net msvm tends to give best predictions .",
    "admm is much faster than sedumi , and interestingly , admm also gives higher prediction accuracies than those by sedumi .",
    "this is probably because the solutions given by sedumi are sparser and have more izs than those by admm",
    ".      this subsection tests the three different msvms on microarray classifications .",
    "two real data sets were used .",
    "one is the children cancer data set in @xcite , which used cdna gene expression profiles and classified the small round blue cell tumors ( srbcts ) of childhood into four classes : neuroblastoma ( nb ) , rhabdomyosarcoma ( rms ) , burkitt lymphomas ( bl ) and the ewing family of tumors ( ews ) .",
    "the other is the leukemia data set in @xcite , which used gene expression monitoring and classified the acute leukemias into three classes : b - cell acute lymphoblastic leukemia ( b - all ) , t - cell acute lymphoblastic leukemia ( t - all ) and acute myeloid leukemia ( aml ) .",
    "the original distributions of the two data sets are given in table [ table : distribution ] .",
    "both the two data sets have been tested before on certain msvms for gene selection ; see @xcite for example .",
    "each observation in the srbct dataset has dimension of @xmath139 , namely , there are 2308 gene profiles .",
    "we first standardized the original training data in the following way .",
    "let @xmath140 $ ] be the original data matrix .",
    "the standardized matrix @xmath141 was obtained by @xmath142similar normalization was done to the original testing data .",
    "then we selected the best parameters of each model by three - fold cross validation on the standardized training data .",
    "the search range of the parameters is the same as that in the synthetic data tests .",
    "finally , we put the standardized training and testing data sets together and randomly picked 63 observations for training and the remaining 20 ones for testing .",
    "the average prediction accuracy , running time ( sec ) , number of non - zeros ( nz ) and number of nonzero rows ( nr ) of 100 independent trials are reported in table [ table : srbct ] , from which we can see that all models give similar prediction accuracies . admm produced similar accuracies as those by sedumi within less time while sedumi tends to give sparser solutions because sedumi is a second - order method and more accurately solves the problems .",
    "the leukemia data set has @xmath143 gene profiles .",
    "we standardized the original training and testing data in the same way as that in last test .",
    "then we rank all genes on the standardized training data by the method used in @xcite .",
    "specifically , let @xmath33 $ ] be the standardized data matrix .",
    "the relevance measure for gene @xmath144 is defined as follows : @xmath145where @xmath146 denotes the mean of @xmath147 and @xmath148 denotes the mean of @xmath149 .",
    "according to @xmath150 , we selected the 3,571 most significant genes",
    ". finally , we put the processed training and tesing data together and randomly chose 38 samples for training and the remaining ones for testing .",
    "the process was independently repeated 100 times .",
    "table [ table : srbct ] tabulates the average results , which show that all three models give similar prediction accuracies .",
    "admm gave better prediction accuracies than those given by sedumi within far less time .",
    "the relatively lower accuracies given by sedumi may be because it selected too few genes to explain the diseases .",
    "we have developed an efficient unified algorithmic framework for using admm to solve regularized msvs . by effectively using the woodbury matrix identity",
    "we have substantially reduced the computational effort required to solve large - scale msvms .",
    "numerical experiments on both synthetic and real data demonstrate the efficiency of admm by comparing it with the second - order method sedumi .",
    "bottou  l. , cortes  c. , denker  j.s .",
    ", drucker  h. , guyon  i. , jackel  l.d . , lecun  y. , muller u.a .",
    ", sackinger e. , simard p. , et  al . :",
    "comparison of classifier methods : a case study in handwritten digit recognition . in proceedings of the 12th iapr international conference on pattern recognition , volume  2 , pages 7782 ( 1994 ) .",
    "bradley p.s . and mangasarian o.l .",
    ": feature selection via concave minimization and support vector machines . in proceedings of the fifteenth international conference of machine learning ( icml98 ) , pages 8290 ( 1998 ) .",
    "chen x. , pan w. , kwok j.t . , and carbonell j.g .",
    ": accelerated gradient method for multi - task sparse learning problem . in proceedings of the ninth international conference on data mining ( icdm09 ) , pages 746751 .",
    "ieee ( 2009 ) .",
    "golub  t.r .",
    ", slonim  d.k . , tamayo  p. , huard  c. , gaasenbeek  m. , mesirov  j.p .",
    ", coller  h. , loh  m.l . , downing  j.r .",
    ", caligiuri  m.a . ,",
    "bloomfield  c.d . , and lander  e.s .",
    ": molecular classification of cancer : class discovery and class prediction by gene expression monitoring . , 286(5439):531537 ( 1999 ) .",
    "khan j. , wei j.s .",
    ", ringnr m. , saal l.h . , ladanyi m. , westermann f. , berthold f. , schwab m. , antonescu c.r . , peterson c. , et  al . : classification and diagnostic prediction of cancers using gene expression profiling and artificial neural networks . , 7(6):673679 ( 2001 ) .",
    ", chen y. , and xie x. : efficient variable selection in support vector machines via the alternating direction method of multipliers . in proceedings of the international conference on artificial intelligence and statistics ( 2011 ) ."
  ],
  "abstract_text": [
    "<S> the support vector machine ( svm ) was originally designed for binary classifications . </S>",
    "<S> a lot of effort has been put to generalize the binary svm to multiclass svm ( msvm ) which are more complex problems . </S>",
    "<S> initially , msvms were solved by considering their dual formulations which are quadratic programs and can be solved by standard second - order methods . however , the duals of msvms with regularizers are usually more difficult to formulate and computationally very expensive to solve . </S>",
    "<S> this paper focuses on several regularized msvms and extends the alternating direction method of multiplier ( admm ) to these msvms . using a splitting technique , </S>",
    "<S> all considered msvms are written as two - block convex programs , for which the admm has global convergence guarantees . </S>",
    "<S> numerical experiments on synthetic and real data demonstrate the high efficiency and accuracy of our algorithms </S>",
    "<S> .    [ section ] [ section ] [ section ] [ section ] [ section ]    = 0 </S>"
  ]
}
{
  "article_text": [
    "identification of influential nodes in a network is a topic of interest in network analysis , enjoying numerous applications . for example",
    ", a removal or immunization of an influential node may suppress spreading of an infectious disease that may occur later .",
    "a viral information spreading campaign starting from an influential node may be more successful than a campaign starting from other nodes .",
    "there are various notions of influential nodes , as evinced by a multitude of definitions of node s centrality corresponding to the aforementioned and other applications @xcite . among them , a major criterion of the influential node is that the removal of a node , or immunization , efficiently fragments the network into small pieces .",
    "because the problem of finding the minimal set of nodes to be immunized to fragment the network is np - hard @xcite , various immunization algorithms to determine the order of the nodes to be removed to realize efficient fragmentation of the network have been proposed  @xcite , sometimes with the constraint that the information about the network is only partially available  @xcite .",
    "notably , although immunizing hubs ( i.e. , nodes with a large degree ) first is intuitive and much better than randomly selecting nodes to be immunized @xcite , many immunization algorithms outperform the hub - first immunization algorithm .",
    "morone and makse proposed a scalable and powerful algorithm to sequentially remove nodes and fragment the network into small components as early as possible  @xcite .",
    "founded on the message passing approach and theory of non - backtracking matrices , the method calculates the so - called collective influence ( ci ) for each node to rank the nodes for prioritization . their method , which is referred to as the ci algorithm , outperforms various other known methods in model and empirical networks . in the present study",
    ", we propose a new ci - based immunization algorithm that is designed to perform well when the network has community structure .",
    "the ci algorithm assumes that the given network is locally tree - like .",
    "in fact , a majority of empirical networks are not locally tree - like . at a microscopic level , empirical networks are usually clustered , i.e. , full of triangles   @xcite . at a mesoscopic level , many networks are composed of communities such that links are dense within communities and sparse across different communities @xcite . although the ci algorithm also seems to work efficiently in loopy networks unless loops are not excessive @xcite , the performance of the ci algorithm on networks with community structure is unclear .",
    "some extant immunization algorithms are explicitly or implicitly informed by community structure  @xcite .",
    "the immunization algorithms using the betweenness centrality are effective on networks with community structure  @xcite .",
    "however , they are not scalable due to a high computational cost of calculating the betweenness centrality @xcite . for other immunization algorithms exploiting community structure of networks ,",
    "their performance relative to the ci algorithm is unknown in general @xcite or at least for networks with community structure @xcite . yet",
    "other community - based immunization algorithms impose that only local information about the network is available , mimicking realistic constraints @xcite .",
    "this constraint naturally limits the performance of an immunization algorithm .",
    "we develop an immunization algorithm by formulating a ci algorithm for a coarse - grained network , in which a node represents a community , and a weighted link represents the number of links between different communities .",
    "we compare the performance of the proposed algorithm with that of the ci algorithm @xcite , and the conventional algorithm targeting hubs @xcite , and others  @xcite when networks have community structure .",
    "consider an undirected and unweighted network having @xmath0 nodes .",
    "the aim of an immunization algorithm is to sequentially remove nodes to fragment the network as soon as possible , i.e. , with a small number of removed nodes .",
    "the ci algorithm is based on the scoring of nodes according to the ci value  @xcite .",
    "the ci of node @xmath1 is defined as @xmath2 where @xmath3 @xmath4 is the degree of node @xmath1 , and @xmath5 is the set of nodes at distance @xmath6 from node @xmath1 . when @xmath7 , the ci is equivalent to the degree as long as the rank order is concerned .",
    "the ci algorithm calculates the @xmath8 value of all nodes and removes the node with the largest ci value in one step .",
    "then , the ci values of all the remaining nodes are recalculated , and the same procedure is repeated .",
    "in fact , we use the order of nodes to be removed determined above as a tentative order . to improve the overall performance ,",
    "we reorder the nodes by reinserting them as follows .",
    "we start from the situation in which the fraction of nodes in the largest connected component ( lcc ) is equal to or less than 0.01 for the first time .",
    "then , we calculate for each removed node @xmath1 the number of components that node @xmath1 connects if it is reinserted in the current network .",
    "next , we add back the node that connects the smallest number of connected components .",
    "we repeat this procedure until all the removed nodes are reinserted such that the initial network is restored .",
    "the computation time of the ci algorithm is evaluated as follows @xcite .",
    "the calculation of @xmath9 requires @xmath10 time for one node , and hence @xmath11 time for all nodes .",
    "because sorting the @xmath9 values consumes @xmath12 time , each step of the ci algorithm consumes @xmath12 time .",
    "therefore , the total computation time until @xmath11 nodes are removed is evaluated as @xmath13 . however , by exploiting the fact that the ci values of only @xmath10 nodes are affected by the removal of a single node , one can accelerate the same algorithm with a max - heap data structure , yielding @xmath12 total computation time  @xcite .      community structure may make a network not locally tree - like .",
    "we propose an immunization algorithm by running a weighted - network variant of the ci algorithm on a coarse - grained network in which a community constitutes a supernode .",
    "we first run a community detection algorithm .",
    "denote by @xmath14 the number of communities and by @xmath15 the @xmath16 coarse - grained weighted adjacency matrix whose @xmath17 element is equal to the number of links that connect communities @xmath18 and @xmath19 ( @xmath20 ) .",
    "we use lowercases ( e.g. , @xmath1 , @xmath21 ) to denote individual nodes and uppercases ( e.g. , @xmath18 , @xmath19 ) to denote supernodes , i.e. , communities , throughout the text .",
    "the diagonal elements of @xmath15 are set to zero .",
    "assume that the coarse - grained network is locally tree - like . by taking into account the fact that the coarse - grained network is generally a weighted network , we define the ci of community @xmath18 in the coarse - grained network by @xmath22 where @xmath23ball@xmath24 denotes the set of the communities whose distance from community @xmath18 is equal to @xmath6 in the coarse - grained network .",
    "we set @xmath25 this definition is analogous to @xmath26 in eq .  . with this definition of @xmath27 ,",
    "the ci of community @xmath18 is equal to zero when @xmath18 has only one neighbor , as in the original ci  @xcite .",
    "we set @xmath28 where @xmath19 is a community that is at distance @xmath6 from @xmath18 , and @xmath29 is the community that is at distance @xmath30 from @xmath18 and on the path between @xmath18 and @xmath19 ( fig .  [",
    "fig : schematic](a ) ) . it should be noted that @xmath31 is equal to zero if @xmath29 is the only neighbor of @xmath19 .",
    "it should also be noted that , when every community consists of only one node in the original network , @xmath32 for @xmath33 .",
    "equation   is ill - defined for @xmath7 . to be consistent with the original definition of the ci ,",
    "we define @xmath34 for @xmath7 .",
    "then , @xmath35 is large when node @xmath18 has a large degree in the coarse - grained network .",
    "let @xmath36 be the adjacency matrix of the original network .",
    "equation   is rewritten as @xmath37 where @xmath38 is the community adjacent to @xmath18 ( hence distance one from @xmath18 ) through which @xmath19 is reached from @xmath18 ( fig .  [",
    "fig : schematic](b ) ) .",
    "on the basis of eq .  , we define the community - based collective influence ( cbci ) of node @xmath1 , denoted by @xmath39 , as @xmath40 where node @xmath1 belongs to community @xmath18 . in eq .",
    ", the importance of a node stems from three factors .",
    "first , @xmath41 is proportional to @xmath42 , which is essentially the number of inter - community links of the community to which @xmath1 belongs .",
    "second , @xmath41 is large if @xmath18 has many high - degree nodes at distance @xmath43 in the coarse - grained network ( i.e. , sum of @xmath31 ) .",
    "third , @xmath41 is large if node @xmath1 has many inter - community links relative to the total number of inter - community links that community @xmath18 has ( i.e. , @xmath44 ) .",
    "we set @xmath45 in the following numerical simulations .",
    "when @xmath46 , @xmath38 in eqs .   and",
    "coincide with @xmath29 in eq .",
    "[ fig : schematic](b ) ) .",
    "we remove the node with the largest cbci value .",
    "if there are multiple nodes with the same largest cbci value , we select the node having the largest degree .",
    "if there are multiple nodes with the same largest cbci and degree , we break the tie at random .",
    "then , we recalculate the cbci for all remaining nodes , remove the node with the largest cbci , and repeat the same procedure until the size of the lcc becomes equal to or less than @xmath47 .",
    "we further optimize the obtained order of node removal by reinsertion , as in the ci algorithm .",
    "we use the coarse - grained network , not the original network , to inform the reinsertion process in the cbci algorithm . in other words ,",
    "the number of communities that belong to the same component as the reinserted node is measured for each tentatively reinserted node .",
    "we decide to reinsert the node whose presence connects the least number of communities ( fig .",
    "[ fig : schematic](c ) ) .    given a partitioning of the network into communities ,",
    "the calculation of @xmath39 for one node consumes @xmath10 time .",
    "therefore , if we adapt the original implementation of the ci algorithm @xcite to the case of the cbci , sorting of @xmath39 dominates the computation time of the cbci algorithm .",
    "the time complexity of the cbci algorithm is the same as that of the ci algorithm in ref .",
    "@xcite , i.e. , @xmath48 , if community detection is not a bottleneck .",
    "the use of the max - heap data structure makes the cbci algorithm run in @xmath12 time if @xmath49 such that the cbci values of @xmath10 nodes are affected by the removal of a single node . generally speaking",
    ", the cbci algorithm with the max - heap data structure runs in @xmath50 time .",
    "we use the following six algorithms for community detection : ( i ) infomap @xcite , requiring @xmath51 time @xcite , where @xmath52 is the number of links , and hence @xmath11 time for sparse networks ; ( ii ) walktrap , which requires @xmath48 for most empirical networks  @xcite ; ( iii ) the label - propagation algorithm , requiring nearly linear time in @xmath0  @xcite ; ( iv ) a fast greedy algorithm for modularity maximization , requiring @xmath53 time for sparse networks  @xcite ; ( v ) modularity maximization based on simulated annealing , which is practical up to @xmath54 nodes in the original paper  @xcite and time - consuming because modularity must be maximized in a parameter - dependent manner @xcite ; ( vi ) the louvain algorithm , which practically runs in @xmath11 time  @xcite .",
    "the last three algorithms intend to maximize the modularity , denoted by @xmath55 .",
    "the first three algorithms detect communities according to different criteria .    except for the simulated annealing algorithm ,",
    "the computational cost is at most that for the cbci algorithm given the partitioning of the network , i.e. , @xmath48 .",
    "therefore , if the cbci algorithm is naively implemented , community detection is not a bottleneck in terms of the computation time when any of these five community detection algorithms is used . if @xmath56 and we implement the cbci algorithm using the max - heap data structure , a community detection algorithm requiring more than @xmath12 time presents a bottleneck . in this case , the infomap when the network is sparse ( i.e. , @xmath57 ) , label - propagation algorithm , and louvain algorithm retain @xmath12 total computation time of the cbci algorithm .",
    "the total computation time with any of the other three community detection algorithms is governed by that of the community detection algorithm .",
    "in this section , we compare the performance of the cbci algorithm with the ci and other immunization algorithms ( see methods ) on two model networks and 12 empirical networks .",
    "let @xmath58 be the fraction of removed nodes .",
    "the size of the lcc after @xmath59 nodes have been removed , divided by @xmath0 , is denoted by @xmath60 .",
    "we start by testing various immunization algorithms on a scale - free network model with built - in community structure ( methods ) .",
    "we sequentially remove nodes from this network according to each immunization algorithm and track the size of the lcc .",
    "we use the community structure imposed by the model to inform the cbci and cbdi algorithms .",
    "the results for a range of immunization algorithms are shown in fig .",
    "[ fig : bamodel](a ) . both cbci and cbdi algorithms",
    "considerably outperform the ci algorithm .",
    "the cbci algorithm performs better than the cbdi algorithm .",
    "the performance of the cbci algorithm is close to the betweenness algorithm .",
    "it should be noted that the betweenness algorithm , while efficient , is not scalable to larger networks .",
    "next , we consider a scale - free network without community structure , which is generated by the original ba model with @xmath61 and @xmath62 ( the parameters of the model are equal to @xmath63 ) .",
    "we run the cbci and cbdi strategies by applying a community detection algorithm to the generated network although the ba model lacks community structure .",
    "in fact , all but the label - propagation algorithm returns a partitioning result .",
    "the performance of the different immunization algorithms for this network is compared in fig .  [ fig : bamodel](b ) .",
    "the cbci algorithm combined with infomap or walktrap outperforms the degree and lsp algorithms .",
    "the performance of the cbci algorithm is close to that of the ci algorithm except in an early stage of node removal .",
    "a different community - based immunization algorithm , cbdi , lacks this feature .",
    "this result suggests that the cbci algorithm combined with infomap or walktrap can work efficiently even when the network does not have community structure .",
    "the results for the cbci and cbdi algorithms combined with the other four community detection algorithms are shown in fig .",
    "[ fig : comp13data](a ) .",
    "the figure suggests that the cbci algorithm combined with infomap or walktrap performs better than when it is combined with a different community detection algorithm .      in this section",
    ", we run the cbci and other algorithms on the following 12 empirical networks with community structure .",
    "( i ) two networks of autonomous systems of the internet constructed by the university of oregon route views project  @xcite : a node is an autonomous system .",
    "the network collected on 2 january 2000 and that on 31 march 2001 are referred to as as-1 and as-2 , respectively .",
    "( ii ) pretty good privacy network ( pgp )  @xcite : two persons are connected by a link if they share confidential information using the pgp encryption algorithm on the internet . (",
    "iii ) world wide web ( www )  @xcite : a network of websites connected by hyperlinks , which is originally a directed network .",
    "( iv ) email - based communication network at kiel university ( referred to as email - uni )  @xcite : e - mail sending activity among students , which provides a directed link , recorded over a period of 112 days .",
    "( v ) email - based communication network in enron corporation ( email - enron )  @xcite : two e - mail users in the data set are connected by an unweighted directed link if at least one e - mail has been sent from one user to the other user .",
    "( vi ) collaboration networks in general relativity and quantum cosmology ( ca - grqc ) , astro physics , ( ca - astroph ) , and condensed matter , ( ca - condmat ) categories  @xcite and high energy physics  phenomenology ( ca - hepph ) and high energy physics  theory ( ca - hepth ) categories in arxiv  @xcite . by definition ,",
    "two authors are adjacent if they coauthor a paper .",
    "( vii ) high - energy physics citation network within the hep - th category of arxiv ( hep )  @xcite , which is originally a directed network . for each network , we removed the link weight , self - loops , and direction of the link , and submitted the lcc to the following analysis .",
    "summary statistics of these networks including the modularity , @xmath55 , are shown in tables  [ tab : datadescription ] and  [ tab : nc_q ] .",
    "we do not investigate the betweenness immunization algorithm due to its high computational cost ( i.e. , @xmath64 time for calculating the betweenness centrality of all nodes @xcite , hence @xmath65 time for removing @xmath11 nodes ) .",
    "the performance of the different immunization algorithms is compared on two empirical networks in fig .",
    "[ fig : comp_enron_www ] . among the 12 empirical networks that we tested ,",
    "these two networks yielded the smallest and largest modularity values as maximized by the louvain algorithm .",
    "the figure indicates that the cbci algorithm combined with infomap or walktrap performs better than the previously proposed algorithms including the ci algorithm in both networks .",
    "the cbci algorithm performs better than the ci algorithm in many other empirical networks as well ( fig .",
    "[ fig : comp13data](b)(m ) ) .",
    "furthermore , the cbci algorithm combined with a different community detection algorithm also outperforms the ci algorithm in most of the networks ( fig .",
    "[ fig : comp13data](b)(m ) ) .    to be quantitative ,",
    "we measure the fraction of removed nodes at which the network fragments into sufficiently small connected components , i.e. , @xmath66 where we remind that @xmath60 is the size of the lcc normalized by @xmath0 .",
    "we set @xmath67 .",
    "we calculate @xmath68 for each combination of a network and an immunization algorithm .",
    "the value of @xmath68 for each immunization algorithm normalized by the @xmath68 value for the ci algorithm is plotted in fig .",
    "[ fig : scatter_main_qc ] .",
    "a symbol represents a network .",
    "a small normalized value of @xmath68 implies a high efficiency of the immunization algorithm .",
    "as expected , the degree immunization algorithm performs worse than the ci in all the tested networks ( fig .",
    "[ fig : scatter_main_qc](c ) ) . for the cbci algorithm combined with infomap , @xmath68 is smaller by 15.0% to 49.7% than that for the ci algorithm ( fig .",
    "[ fig : scatter_main_qc](a ) ) .",
    "the cbci algorithm combined with walktrap shows a similar performance for all but one networks ( fig .  [",
    "fig : scatter_main_qc](b ) ) . the cbci algorithm combined with three of the other four community detection algorithms performs better than the ci algorithm for networks with relatively strong community structure ( fig .",
    "[ fig : scatter_si_qc ] ) . the cbdi algorithm combined with infomap performs better than the ci algorithm for all networks , but",
    "to a lesser extent than the cbci algorithm combined with infomap does ( fig .",
    "[ fig : scatter_main_qc](d ) ) . the cbdi algorithm combined with walktrap ( fig .",
    "[ fig : scatter_main_qc](e ) ) and the other four community detection algorithms ( fig .",
    "[ fig : scatter_si_qc ] ) performs worse than the ci algorithm . the lsp algorithm performs worse than the ci algorithm in a majority of the networks ( fig .",
    "[ fig : scatter_main_qc](f ) ) .",
    "even if two immunization algorithms yield the same @xmath68 value on the same network , @xmath60 may considerably drop at a smaller @xmath58 value with one immunization algorithm than the other algorithm . to quantify the performance of immunization algorithms in this sense ,",
    "we measure the size of the lcc integrated over @xmath58 values  @xcite , i.e. , @xmath69 it should be noted that @xmath70 is the area under the curve when @xmath60 is plotted against @xmath58 and ranges between 0 and @xmath71 .",
    "a small @xmath70 value implies a good performance of an immunization algorithm .    the value of @xmath70 for each immunization algorithm normalized by that for the ci algorithm",
    "is plotted in fig .",
    "[ fig : scatter_main_g ] .",
    "the cbci algorithm combined with infomap outperforms the ci algorithm in 11 out of the 12 networks in terms of @xmath70 ( fig .",
    "[ fig : scatter_main_g](a ) ) .",
    "similarly , the cbci algorithm combined with walktrap outperforms the ci algorithm in ten out of the 12 networks ( fig .",
    "[ fig : scatter_main_g](b ) ) .",
    "the cbci combined with any of the other four community detection algorithms outperforms the ci algorithm in roughly half of the networks and tends to be efficient for networks having large modularity values as determined by the louvain algorithm ( fig .",
    "[ fig : scatter_si_g ] ) .",
    "in particular , for the three networks with the largest modularity , the cbci algorithm combined with any of the six community detection algorithms outperforms the ci algorithm .",
    "the degree , cbdi , and lsp algorithms are less efficient than the ci algorithm in terms of @xmath70 ( figs .",
    "[ fig : scatter_main_g](c)(f ) and  [ fig : scatter_si_g ] ) .",
    "we have shown that the cbci algorithm is more efficient when it is combined with infomap or walktrap , in particular infomap , than with the other four community detection algorithms . to explore why , we start by measuring the clustering coefficient @xcite of the unweighted version of the coarse - grained networks .",
    "we do so because in theory the ci assumes locally tree - like networks @xcite .",
    "high clustering in the coarse - grained network may discourage the cbci algorithm .",
    "for each empirical network , we measure the pearson correlation coefficient between the clustering coefficient and @xmath68 normalized by the value for the ci algorithm .",
    "we use the result for each community detection algorithm as a data point such that the correlation coefficient is calculated on the basis of six data points .",
    "the results are shown in table  [ tab : corr_givennet_qc ] .",
    "we find that the clustering coefficient is not consistently correlated with the normalized @xmath68 .",
    "the results are qualitatively the same with a weighted clustering coefficient  @xcite ( table  [ tab : corr_givennet_qc ] ) .",
    "we obtain similar results if @xmath70 instead of @xmath68 is used as a performance measure ( table  [ tab : corr_givennet_g ] ) . it should be noted that different community detection algorithms yield sufficiently different clustering coefficient values including large values ( fig .",
    "[ fig : regress_givennet](a ) ) .",
    "we conclude that the lack of local tree - like structure in the coarse - grained networks is not a strong determinant of the performance of the cbci algorithm .",
    "this result does not contradict those for the original ci algorithm , which assumes local tree - like networks , because the ci algorithm is practically efficient on loopy networks as well @xcite .",
    "we have set @xmath46 , thus ignoring the contribution of nodes in coarse - grained networks three or more hops away from a focal node .",
    "in fact , large coarse - grained networks may have a large mean path length and deteriorate the performance of the cbci algorithm .",
    "therefore , we calculate the correlation coefficient between @xmath72 , i.e. , the number of the detected communities , and @xmath73 , and between the mean path length in the unweighted coarse - grained network and @xmath73 ( table  [ tab : corr_givennet_qc ] ) .",
    "the correlation efficient between @xmath70 and either @xmath72 or the mean path length is also measured ( table  [ tab : corr_givennet_g ] ) .",
    "the tables indicate that the performance of a community detection algorithm is not consistently correlated with the mean path length .",
    "it is correlated with @xmath72 , but in the manner such that the performance of the cbci algorithm improves as @xmath72 increases , contrary to the aforementioned postulated mechanism .",
    "therefore , the use of @xmath46 does not probably explain the reason why a community detection algorithm marries the cbci algorithm better than another .",
    "in fact , the cbci algorithm performs well when the detected communities have relatively similar sizes . to show this",
    ", we measure the entropy in the partitioning , which is defined by @xmath74 , where @xmath75 is the number of nodes in the @xmath76th community .",
    "the entropy ranges between 0 and @xmath77 .",
    "a large entropy value implies that the partitioning of the network is relatively egalitarian .",
    "the correlation coefficient between the entropy and the normalized @xmath68 is shown in table  [ tab : corr_givennet_qc ] for each network .",
    "the entropy and @xmath68 are negatively correlated with each other for all networks and strongly so for most of the networks .",
    "this result is robust when we normalize the entropy by the largest possible value , i.e. , @xmath77 ( table  [ tab : corr_givennet_qc ] ) , and when the performance measure is replaced by @xmath70 ( table  [ tab : corr_givennet_g ] ) .    to assess the robustness of this finding",
    ", we calculate the same correlation coefficient between either the unnormalized or normalized entropy and one of the two performance measures , but for each community detection algorithm .",
    "now each empirical network constitutes a data point based on which the correlation coefficient is calculated .",
    "the correlation coefficient values are shown in table  [ tab : corr_givenalg ] .",
    "although the correlation is weaker than in the previous case , the correlation between the entropy and either the normalized @xmath73 or @xmath70 is largely negative , which is consistent with the results shown in tables  [ tab : corr_givennet_qc ] and [ tab : corr_givennet_g ] . the correlation coefficient between @xmath55 and each of the performance measure is also shown in table  [ tab : corr_givenalg ] .",
    "the entropy provides a weaker determinant of the performance as compared to @xmath55 , which is expected because the cbci algorithm is designed for networks with community structure .",
    "nevertheless , the entropy provides a larger ( i.e. , more negative ) correlation value than @xmath55 does in some cases ( table  [ tab : corr_givenalg ] ) .",
    "infomap tends to detect a large number of communities ( table [ tab : nc_q ] ) whose size is less heterogeneously distributed than the case of the other community detection algorithms ( figs .",
    "[ fig : regress_givennet](i ) and ( k ) ) .",
    "we consider that this is a main reason why infomap is effective when combined with the cbci algorithm . roughly speaking",
    ", the label - propagation algorithm tends to yield a similarly large number of communities , @xmath72 ( table [ tab : nc_q ] ) .",
    "however , the size of the community is more heterogeneously distributed with the label - propagation algorithm than with infomap , as quantified by the entropy measures ( figs .",
    "[ fig : regress_givennet](i ) and ( k ) ) .",
    "we showed that the cbci immunization algorithm outperforms the ci and some other algorithms when a given network has community structure .",
    "the algorithm aims to pinpoint nodes that connect different communities at a reasonable computational cost .",
    "the cbci algorithm is in particular efficient when infomap @xcite is used for detecting communities beforehand .",
    "infomap runs sufficiently fast at least for sparse networks @xcite such that the entire cbci algorithm runs as fast as the ci algorithm at least asymptotically in terms of the network size .",
    "the walktrap community detection algorithm @xcite is the second best among the six candidates to be combined with the cbci algorithm in terms of the quality of immunization .",
    "however , walktrap is slower than infomap .",
    "walktrap consumes longer time than the main part of the cbci algorithm , i.e. , sequential node removal , when the max - heap data structure is used for implementing the cbci algorithm . in this case , the community detection before starting the node removal is the bottleneck of the entire cbci algorithm , and the cbci algorithm is slower than the ci algorithm . to our numerical efforts , we recommend infomap to be combined with the cbci algorithm .",
    "we argued that infomap works better in combination with the cbci algorithm than the other community detection algorithms do mainly because infomap yields a relatively egalitarian distribution of the community size .",
    "however , the distribution of the community size is usually skewed even with infomap  @xcite .",
    "the cbci algorithm may work even better if we use a community detection algorithm that imposes that the detected communities are of the equal or similar sizes .",
    "this problem is known as @xmath78-balanced partitioning , where @xmath78 refers to the number of communities .",
    "although @xmath78-balanced partitioning for general @xmath78 is notoriously hard to solve , there are various approximate algorithms for this problem @xcite .",
    "combining these algorithms with the cbci algorithm may be profitable .",
    "we partitioned the network just once in the beginning of the cbci algorithm and used the obtained community structure throughout the node removal procedure .",
    "this property is shared by the cbdi algorithm @xcite and another immunization algorithm  @xcite .",
    "we may be able to improve the performance of immunization by updating the community structure during the node removal .",
    "our preliminary numerical simulations did not yield an improvement of the cbci algorithm with online updating of community structure ( section  [ sec : community_update ] in the si ) .",
    "we should also bear in mind the computational cost of community detection , which would be repeatedly applied in the case of online updating .",
    "nevertheless , this line of improvement may be worth investigating .",
    "the ci assumes locally tree - like networks @xcite .",
    "although the ci algorithm is practically efficient in moderately loopy networks as well @xcite , many empirical networks are abundant in triangles and short cycles such that they are highly loopy @xcite .",
    "dense connectivity within a community implies that there tend to be many triangles and short cycles in a network with community structure @xcite .",
    "then , coarse graining effectively coalesces many triangles and short cycles into one supernode , possibly suppressing their detrimental effects . at the same time , however , coarse - grained networks tend to have a large clustering coefficient ( fig .",
    "[ fig : regress_givennet](a ) )",
    ". we may be able to improve the performance of the cbci algorithm by suppressing the effect of short cycles in coarse - grained networks .",
    "recently , a method has been proposed to improve the accuracy of estimating the percolation threshold using non - backtracking matrices , where redundant paths are suppressed in the counting of the paths @xcite .",
    "this method applied to both ci and cbci algorithms may enhance their performance in the immunization problem .",
    "the recently proposed collective influence propagation ( ci@xmath79 ) algorithm , which can be interpreted as the ci algorithm in the limit of @xmath80 , generally yields better solutions than the ci algorithm does @xcite .",
    "given that we have not implemented the ci@xmath79 algorithm in the present article , we are not arguing that the cbci algorithm is better than the ci@xmath79 algorithm .",
    "it should also be noted that we may be able to combine the cbci algorithm with the idea of the ci@xmath79 algorithm ( i.e. , using the leading left and right eigenvectors of the non - backtracking matrix ) to devise a new algorithm .",
    "we compare the performance of the ci and cbci algorithms against the following immunization algorithms .    *",
    "high degree adaptive ( abbreviated as degree )  @xcite : we sequentially remove the node having the largest degree .",
    "if multiple nodes have the largest degree , we break the tie by selecting one of the largest - degree nodes at random .",
    "we recalculate the degree after each node has been removed .",
    "* community - based dynamical importance ( cbdi )  @xcite : this method exploits the community structure of a network , similar to the cbci algorithm , but calculates the importance of a community in the coarse - grained network in terms of the so - called dynamical importance  @xcite .",
    "the cbdi algorithm needs a community detection algorithm .",
    "we use each of the six community detection algorithms used in the cbci algorithm .",
    "the cbdi algorithm runs as follows  @xcite .",
    "we denote by @xmath81 and @xmath82 the largest eigenvalue and the corresponding eigenvector of @xmath15 , respectively . owing to the perron - frobenius theorem",
    ", it holds true that @xmath83 and @xmath84 ( @xmath85 ) . the number of links between node @xmath1 and to the @xmath19th community",
    "is denoted by @xmath86 .",
    "we define @xmath87 , where @xmath18 is the community to which node @xmath1 belongs .",
    "the cbdi of node @xmath1 is defined by @xmath88 .",
    "we remove the nodes in descending order of the cbdi .",
    "if there are multiple nodes that have the same largest cbdi value , we break the tie by selecting the node that has the largest number of intra - community links .",
    "we recalculate the cbdi values of all the remaining nodes after removing each node .",
    "once all the communities are disconnected , we sequentially remove the nodes in descending order of @xmath89 .",
    "we recalculate @xmath89 of all the remaining nodes after removing each node . *",
    "the laplacian spectral partitioning ( lsp ) algorithm runs as follows  @xcite : 1 .   for the largest connected component ( lcc ) , calculate the fiedler vector , i.e. , the eigenvector associated with the smallest positive eigenvalue of the laplacian , @xmath90 , where @xmath91 denotes the @xmath92 diagonal matrix whose @xmath93 element is equal to the degree of the @xmath1th node in the lcc , @xmath94 is the number of nodes in the lcc , and @xmath95 is the adjacency matrix of the lcc .",
    "2 .   partition the @xmath94 nodes into two non - empty groups by thresholding on the value of the element in the fiedler vector .",
    "group 1 ( group 2 ) consists of the nodes whose corresponding element in the fiedler vector is higher ( lower ) than a threshold .",
    "there are @xmath96 possible ways to bipartition the nodes .",
    "3 .   calculate @xmath97 for each bipartition , where @xmath98 and @xmath99 are the numbers of intra - group and inter - group links , respectively . @xmath100 and @xmath101 represent the sum of the nodes degrees in groups 1 and 2 , respectively .",
    "4 .   find the partition that maximizes @xmath102 .",
    "5 .   given the partition ,",
    "remove the node that has the largest number of inter - group links .",
    "then , recalculate the number of inter - group links for each remaining node .",
    "repeat the node removal until the two groups are disconnected .",
    "repeat steps 15 until the size of the lcc becomes less than @xmath103 , where @xmath104 .",
    "* high betweenness centrality adaptive ( abbreviated as betweenness ) @xcite : we remove the node with the largest betweenness centrality .",
    "if multiple nodes have the same largest betweenness centrality value , the node having the largest degree is removed .",
    "we recalculate the betweenness of all nodes every time we remove a node .",
    "we excluded the dynamical importance @xcite because it is less successful than the ci on various networks @xcite and than the cbdi on networks with community structure @xcite .",
    "we also excluded the immunization algorithms on the basis of the pagerank , closeness centrality , and _ k_-core , which had been shown to be outperformed by the ci algorithm @xcite .",
    "this is because these algorithms do not particularly exploit community structure of the network such that there is no reason for believing that they would perform competitively on networks with community structure .",
    "we constructed a scale - free network with built - in community structure as follows  @xcite .",
    "we first generate a coarse - grained network whose node is regarded as community , using the barabsi - albert ( ba ) model  @xcite having @xmath105 nodes and mean degree six .",
    "the initial network is the clique composed of @xmath106 nodes , and each added node has @xmath107 links . after generating a coarse - grained network ,",
    "we assign 50 nodes to each community , resulting in @xmath108 nodes in total . for each community , the intra - community network is given by the ba model with @xmath109 , which yields the mean within - community degree equal to @xmath110/n = 7.6 $ ] .",
    "additionally , if communities @xmath18 and @xmath19 are adjacent in the coarse - grained network , then nodes @xmath111 and @xmath112 are connected with probability @xmath113 .",
    "this guarantees that a node is adjacent to @xmath114 nodes in different communities on average .",
    "we set @xmath115 .",
    "the mean degree of the entire network is equal to @xmath116 .    10    newman , m. e.  j. .",
    "oxford university press , oxford ( 2010 ) .",
    "altarelli , f. , braunstein , a. , dallasta , l. , wakeling , j.  r. , and zecchina , r. containing epidemic outbreaks by message - passing techniques .",
    ", 021024 ( 2014 ) .",
    "restrepo , j.  g. , ott , e. , and hunt , b.  r. weighted percolation on directed networks . , 058701 ( 2008 ) .",
    "chen , y. , paul , g. , havlin , s. , liljeros , f. , and stanley , h.  e. .",
    ", 058701 ( 2008 ) .",
    "masuda , n. immunization of networks with community structure .",
    ", 123018 ( 2009 ) .",
    "salath , m. and jones , j.  h. dynamics and control of diseases in networks with community structure .",
    ", e1000736 ( 2010 ) .",
    "schneider , c.  m. , mihaljev , t. , havlin , s. , and herrmann , h.  j. suppressing epidemics with a limited amount of immunization units .",
    ", 061911 ( 2011 ) .",
    "zhao , d. et al .",
    "immunization of epidemics in multiplex networks .",
    ", e112018 ( 2014 ) .",
    "morone , f. and makse , h.  a. influence maximization in complex networks through optimal percolation .",
    ", 6568 ( 2015 ) .",
    "zahedi , r. and khansari , m. a new immunization algorithm based on spectral properties for complex networks . in _",
    "the 7th conference on information and knowledge technology ( ikt ) _",
    ", 15 ( 2015 ) .",
    "requio  da cunha , b. , gonzlez - avella , j.  c. , and gonalves , s. fast fragmentation of networks using module - based attacks . , e0142824 ( 2015 ) .",
    "mugisha , s. and zhou , h .- j . identifying optimal targets of network attack by belief propagation .",
    ", 012305 ( 2016 ) .",
    "cohen , r. , havlin , s. , and ben - avraham , d. .",
    ", 247901 ( 2003 ) .",
    "gallos , l.  k. , liljeros , f. , argyrakis , p. , bunde , a. , and havlin , s. improving immunization strategies . , 045104(r ) ( 2007 ) .",
    "gong , k. at al .",
    "an efficient immunization strategy for community networks . , e83489 ( 2013 ) .",
    "hbert - dufresne , l. , allard , a. , young , j .-",
    "g . , and dub , l.  j. global efficiency of local immunization on complex networks .",
    ", 2171 ( 2013 ) .",
    "liu , y. , deng , y. , and wei , b. local immunization strategy based on the scores of nodes .",
    ", 013106 ( 2016 ) .",
    "albert , r. , jeong , h. , and barabsi , a .-",
    ", 378382 ( 2000 ) .",
    "callaway , d.  s. , newman , m. e.  j. , strogatz , s.  h. , and watts , d.  j. .",
    ", 54685471 ( 2000 ) .",
    "cohen , r. , erez , k. , ben - avraham , d. , and havlin , s. . , 36823685 ( 2001 ) .",
    "fortunato , s. community detection in graphs .",
    ", 75174 ( 2010 ) .",
    "holme , p. , kim , b.  j. , yoon , c.  n. , and han , s.  k. .",
    ", 056109 ( 2002 ) .",
    "ueno , t. and masuda , n. . , 655666 ( 2008 ) .",
    "brandes , u. . , 163177 ( 2001 ) .",
    "morone , f. , min , b. , bo , l. , mari , r. , and makse , h.  a. .",
    "( 2016 ) .",
    "karrer , b. , newman , m. e.  j. , and zdeborov , l. percolation on sparse networks .",
    ", 208702 ( 2014 ) .",
    "rosvall , m. and bergstrom , c.  t. maps of random walks on complex networks reveal community structure .",
    ", 11181123 ( 2008 ) .",
    "rosvall , m. , axelsson , d. , and bergstrom , c.  t. the map equation .",
    ", 1323 ( 2010 ) .",
    "pons , p. and latapy , m. computing communities in large networks using random walks . in computer and information sciences -",
    "iscis 2005 , yolum , p. , gngr , t. , grgen , f. , and zturan , c. , editors , volume 3733 of _ lecture notes in computer science _ , 284293 .",
    "springer berlin heidelberg ( 2005 ) .",
    "raghavan , u.  n. , albert , r. , and kumara , s. near linear time algorithm to detect community structures in large - scale networks .",
    ", 036106 ( 2007 ) .",
    "clauset , a. , newman , m. e.  j. , and moore , c. finding community structure in very large networks .",
    ", 066111 ( 2004 ) .    sales - pardo , m. , guimer , r. , moreira , a.  a. , and amaral , l. a.  n. extracting the hierarchical organization of complex systems .",
    ", 1522415229 ( 2007 ) .",
    "lancichinetti , a. and fortunato , s. community detection algorithms : a comparative analysis . , 056117 ( 2009 ) .",
    "blondel , v.  d. , guillaume , j .- l .",
    ", lambiotte , r. , and lefebvre , e. fast unfolding of communities in large networks . , p10008 ( 2008 ) .",
    "leskovec , j. , kleinberg , j. , and faloutsos , c. graphs over time : densification laws , shrinking diameters and possible explanations . in _ proceedings of the eleventh acm sigkdd international conference on knowledge discovery in data mining _",
    ", 177187 .",
    "acm , ( 2005 ) .",
    "jure , l. , and andrej , k. stanford network analysis project .",
    "( date of access : 19/01/2016 ) .",
    "university of oregon route views project .",
    "( date of access : 19/01/2016 ) .",
    "bogu , m. , pastor - satorras , r. , daz - guilera , a. , and arenas , a. models of social networks based on social distance attachment .",
    ", 056122 ( 2004 ) .",
    "albert , r. , jeong , h. , and barabsi , a .-",
    "internet : diameter of the world - wide web .",
    ", 130131 ( 1999 ) .",
    "ebel , h. , mielsch , l.  i. , and bornholdt , s. . , 035103(r ) ( 2002 ) .",
    "klimt , b. and yang , y. the enron corpus : a new dataset for email classification research . in _",
    "machine learning : ecml 2004 _ , 217226 .",
    "springer ( 2004 ) .",
    "leskovec , j. , lang , k.  j. , dasgupta , a. , and mahoney , m.  w. community structure in large networks : natural cluster sizes and the absence of large well - defined clusters .",
    ", 29123 ( 2009 ) .",
    "leskovec , j. , kleinberg , j. , and faloutsos , c. graph evolution : densification and shrinking diameters . , 2 ( 2007 ) .",
    "batagelj , v. , and mrvar , a. pajeck datasets ( 2006 ) , http://vlado.fmf.uni - lj.si / pub / networks / data/. ( data of access : 19/01/2016 ) .",
    "schneider , c.  m. , moreira , a.  a. , andrade , j.  s. , havlin , s. , and herrmann , h.  j. mitigation of malicious attacks on networks .",
    ", 38383841 ( 2011 ) .",
    "watts , d.  j. and strogatz , s.  h. collective dynamics of ` small - world ' networks .",
    ", 440442 ( 1998 ) .",
    "radicchi , f. and castellano , c. beyond the locally treelike approximation for percolation on real networks . , 030302(r ) ( 2016 ) .",
    "onnela , j .-",
    "p . , saramki , j. , kertsz , j. , and kaski , k. intensity and coherence of motifs in weighted complex networks . , 065103 ( 2005 ) .",
    "saramki , j. , kivel , m. , onnela , j .-",
    "p . , kaski , k. , and kertsz , j. generalizations of the clustering coefficient to weighted complex networks . , 027105 ( 2007 ) .",
    "lancichinetti , a. , kivel , m. , saramki , j. , and fortunato , s. characterizing the community structure of complex networks . , e11976 ( 2010 ) .",
    "andreev , k. and racke , h. balanced graph partitioning .",
    ", 929939 ( 2006 ) .",
    "krauthgamer , r. , naor , j.  s. , and schwartz , r. partitioning graphs into balanced components . in _ proceedings of the twentieth annual acm - siam symposium on discrete algorithms _ , soda  09 , 942949 ( 2009 ) .",
    "feldmann , a.  e. and foschini , l. balanced partitions of trees and applications .",
    ", 354376 ( 2015 ) .",
    "radicchi , f. , castellano , c. , cecconi , f. , loreto , v. , and parisi , d. defining and identifying communities in networks .",
    ", 26582663 ( 2004 ) .",
    "palla , g. , dernyi , i. , farkas , i. , and vicsek , t. uncovering the overlapping community structure of complex networks in nature and society .",
    ", 814818 ( 2005 ) .",
    "barabsi , a .-",
    "l . and albert , r. emergence of scaling in random networks .",
    ", 509512 ( 1999 ) .",
    "n.m . acknowledges the support provided through jst , crest , and jst , erato , kawarabayashi large graph project . t.k .",
    "acknowledges financial support from the japan society for the promotion of science kakenhi grants no .  25780203 , 15h01948 , and 16k03551 .",
    "we thank flaviano morone and taro takaguchi for providing codes for the ci algorithm .",
    "t.k . and n.m .",
    "conceived the research . t.k . conducted the analysis",
    "t.k . and n.m .",
    "discussed the results and wrote the manuscript .",
    "the authors declare no competing financial interests .     and @xmath31 for @xmath117 , in which case @xmath118 .",
    "a line represents a link in the original network .",
    "the dashed circle represents the @xmath18th community .",
    "( c ) schematic of community - based reinsertion .",
    "a dashed circle represents a community .",
    "suppose that we will reinsert either node @xmath1 or @xmath21 .",
    "if reinserted , node @xmath1 and @xmath21 would have a path to two and three communities , respectively .",
    "therefore , we reinsert node @xmath1 . ]    , plotted against the fraction of removed nodes , @xmath58 , in model networks with @xmath61 .",
    "a curve corresponds to an immunization algorithm .",
    "see methods for the abbreviations .",
    "( a ) scale - free network with prescribed community structure .",
    "( b ) ba model . ]      , for an immunization algorithm divided by the value for the ci algorithm .",
    "( a ) cbci combined with infomap .",
    "( b ) cbci combined with walktrap .",
    "( c ) high degree adaptive ( degree ) .",
    "( d ) cbdi combined with infomap .",
    "( e ) cbdi combined with walktrap .",
    "( f ) laplacian spectral partitioning ( lsp ) .",
    "a symbol represents a network .",
    "the cross represents the model network used in fig .",
    "[ fig : bamodel](a ) .",
    "the modularity value , @xmath55 , is determined by the louvain algorithm . ]",
    "value normalized by that for the ci algorithm .",
    "( a ) cbci combined with infomap .",
    "( b ) cbci combined with walktrap .",
    "( c ) degree .",
    "( d ) cbdi combined with infomap .",
    "( e ) cbdi combined with walktrap .",
    "( f ) lsp .",
    "the @xmath55 value is determined by the louvain algorithm . ]",
    "lp2cmp2cmp2cmp2cmp2cmp2 cm & & & & & & + as-1 & @xmath119 & @xmath120 & @xmath121 & @xmath122 & @xmath123 & @xmath124 + as-2 & @xmath125 & @xmath126 & @xmath127 & @xmath128 & @xmath129 & @xmath130 + pgp & @xmath131 & @xmath132 & @xmath133 & @xmath134 & @xmath135 & @xmath136 + www & @xmath137 & @xmath138 & @xmath139 & @xmath140 & @xmath141 & @xmath142 + email - uni & @xmath143 & @xmath144 & @xmath145 & @xmath146 & @xmath147 & @xmath148 + email - enron & @xmath149 & @xmath150 & @xmath151 & @xmath152 & @xmath153 & @xmath154 + ca - grqc & @xmath155 & @xmath156 & @xmath157 & @xmath158 & @xmath159 & @xmath160 + ca - astroph & @xmath161 & @xmath137 & @xmath162 & @xmath163 & @xmath164 & @xmath165 + ca - condmat & @xmath166 & @xmath167 & @xmath168 & @xmath169 & @xmath170 & @xmath171 + ca - hepph & @xmath172 & @xmath173 & @xmath174 & @xmath175 & @xmath176 & @xmath136 + ca - hepth & @xmath177 & @xmath178 & @xmath179 & @xmath180 & @xmath181 & @xmath182 + hep & @xmath183 & @xmath184 & @xmath185 & @xmath186 & @xmath187 & @xmath188 +    lp2cmp2cmp2cmp2cmp2cmp2 cm & & & & & & + as-1 & @xmath189 & @xmath190 & @xmath191 & @xmath192 & @xmath191 & @xmath193 + as-2 & @xmath194 & @xmath195 & @xmath196 & @xmath197 & @xmath198 & @xmath199 + pgp & @xmath200 & @xmath201 & @xmath202 & @xmath203 & @xmath204 & @xmath205 + www & @xmath206 & @xmath207 & @xmath208 & @xmath209 & @xmath210 & @xmath211 + email - uni & @xmath212 & @xmath213 & @xmath214 & @xmath215 & @xmath216 & @xmath217 + email - enron & @xmath218 & @xmath219 & @xmath220 & @xmath221 & @xmath222 & @xmath223 + ca - grqc & @xmath224 & @xmath225 & @xmath226 & @xmath227 & @xmath228 & @xmath229 + ca - astroph & @xmath230 & @xmath231 & @xmath232 & @xmath233 & @xmath234 & @xmath235 + ca - condmat & @xmath236 & @xmath237 & @xmath238 & @xmath239 & @xmath240 & @xmath241 + ca - hepph & @xmath242 & @xmath243 & @xmath244 & @xmath245 & @xmath246 & @xmath247 + ca - hepth & @xmath248 & @xmath249 & @xmath250 & @xmath251 & @xmath252 & @xmath253 + hep & @xmath181 & @xmath254 & @xmath255 & @xmath256 & @xmath257 & @xmath258 +    lp1.8cmp1.8cmp1.8cmp1.8cmp1.8cmp1.8 cm & & & + ( lr)2 - 3 ( lr)4 - 5 ( lr)6 - 7 & @xmath259 & @xmath260 & @xmath259 & @xmath260 & @xmath259 & @xmath260 + infomap & @xmath261 & @xmath262 & @xmath263 & @xmath264 & @xmath265 & @xmath266 + walktrap & @xmath267 & @xmath268 & @xmath269 & @xmath270 & @xmath271 & @xmath272 + label propagation & @xmath273 & @xmath274 & @xmath275 & @xmath276 & @xmath277 & @xmath278 + fast greedy & @xmath279 & @xmath280 & @xmath281 & @xmath282 & @xmath283 & @xmath284 + simulated annealing & @xmath285 & @xmath286 & @xmath287 & @xmath288 & @xmath289 & @xmath290 + louvain & @xmath291 & @xmath292 & @xmath293 & @xmath294 & @xmath295 & @xmath294 +"
  ],
  "abstract_text": [
    "<S> a practical approach to protecting networks against epidemic processes such as spreading of infectious diseases , malware , and harmful viral information is to remove some influential nodes beforehand to fragment the network into small components . because determining the optimal order to remove nodes is a computationally hard problem , </S>",
    "<S> various approximate algorithms have been proposed to efficiently fragment networks by sequential node removal . </S>",
    "<S> morone and makse proposed an algorithm employing the non - backtracking matrix of given networks , which outperforms various existing algorithms . </S>",
    "<S> in fact , many empirical networks have community structure , compromising the assumption of local tree - like structure on which the original algorithm is based . </S>",
    "<S> we develop an immunization algorithm by synergistically combining the morone - makse algorithm and coarse graining of the network in which we regard a community as a supernode . in this way </S>",
    "<S> , we aim to identify nodes that connect different communities at a reasonable computational cost . </S>",
    "<S> the proposed algorithm works more efficiently than the morone - makse and other algorithms on networks with community structure . + </S>",
    "<S> * keywords * : network ; community structure ; epidemics </S>"
  ]
}
{
  "article_text": [
    "progress in information technology has enabled us to handle easily commercial objects ( such as movies , musics , customers data ) in a digital form .",
    "this increased our convenience dramatically , however as the amount of such digital contents constantly grows , information leakage and counterfeiting , in particular those caused by authorized users , have become a serious concern .",
    "prevention of such illegal copying is often difficult by either technological or social reason .",
    "an alternative solution is to embed user identification information into each content by watermarking technique , making the guilty user ( called a pirate  ) traceable from the leaked content without decreasing convenience for innocent users too much . for this purpose ,",
    "it was pointed out ( @xcite ) that the embedded information should be designed securely against collusion - attacks  , that is a kind of modification of embedded information by a group of pirates .",
    "@xmath2-secure code _ provides such identification information which is secure against @xmath2 pirates or less .",
    "it is known that tardos s",
    "probabilistic @xmath2-secure code @xcite ( tardos code ) has length of theoretically minimal order among all possible @xmath2-secure codes with respect to @xmath2 .",
    "the frequency of @xmath3s and @xmath4s in the codewords is decided by outputs of certain probability distribution , which is referred to as the _ bias distribution _ in this paper .",
    "tardos s work is a milestone in this research area because of the theoretical impact , however there are some hurdles for practical implementation , due to the property that tardos s bias distributions are continuous .",
    "an explicit implementation of continuous distributions would be impossible , while effects of approximation of bias distributions on the security performance have not yet been evaluated .",
    "moreover , ( approximated values of ) the outputs of the bias distribution , which should be of high accuracy to make the code @xmath2-secure , are supposed to be recorded throughout .",
    "thus large amount of extra memory is required for a practical use .",
    "a simple solution is to replace the continuous bias distributions with _",
    "finite _ ones .",
    "for instance , a bias distribution with @xmath5 possible outputs needs only @xmath6 bits of memory to record one output , i.e.  to record which of the four  .",
    "this solution was first explored by hagiwara , hanaoka and imai in @xcite ; they established a formula of sufficient code length in terms of a given ( finite ) bias distribution and desired security performance .",
    "they also proposed a @xmath2-indistinguishability  condition for suitable bias distributions , with three concrete examples that reduce the code lengths to about @xmath7 of tardos codes .",
    "however , it has not yet been discussed whether their choice of bias distributions is optimal for the purpose of reducing extra memory amount . moreover , a problem concerning practical implementation is left unsolved as well : their code requires calculation of some score  of each user , which can not be explicitly representable in general by usual number systems on computers ( e.g.  floating - point numbers ) , however effects of approximation of scores have not been evaluated so far .    the aim of this paper is to solve the abovementioned problems .",
    "first , we exhibit a strong evidence that the code lengths decrease substantially due to @xmath2-indistinguishability condition .",
    "thus , we may restrict our attention to bias distributions satisfying this condition .",
    "secondly , we determine the set of @xmath2-indistinguishable bias distributions , together with the set of the optimal ones among them ( namely , those with minimal number of possible outputs ) .",
    "we show that the optimal distribution has only @xmath8 possible outputs , where @xmath9 denotes as usual the smallest integer @xmath10 with @xmath11 ; thus only @xmath12-bits memory are required to record one output .",
    "( table [ tab : memory ] gives a numerical example , where bias distributions for tardos codes are approximated by single - precision binary floating - point numbers . )",
    "this shows that our result reduces the extra memory amount significantly ; in particular , it even makes such extra memory needless when @xmath13 .",
    "moreover , we improve the code length formula in @xcite to reduce code lengths further and to evaluate effects of approximation of users scores .",
    "the combination of our new formula and our optimal distributions provides much shorter code lengths than tardos codes and than @xcite ( see figure [ fig : length ] ) .",
    "we also investigate the asymptotic behavior of our code length ; the ratio of our code length relative to tardos code converges to about @xmath1 as @xmath14 .",
    "case 1 : @xmath6 pirates , @xmath15 users , @xmath16 .",
    "+ case 2 : @xmath5 pirates , @xmath17 users , @xmath16 .",
    "+    .a comparison of required extra memory amount [ cols=\"^,^,^,^,^\",options=\"header \" , ]     these examples show that our result in this paper indeed reduces the code lengths .",
    "at the time when the preliminary version of this paper was written , our code lengths given in section [ sec : length ] were to our best knowledge the shortest among known @xmath2-secure codes ( at least for @xmath18 ) .",
    "after that , some recent works @xcite on tardos code have succeeded to reduce the code lengths , by strictly improving the evaluation of tracing error probabilities and slightly modifying some parameters or even the tracing algorithm itself ; their new code lengths are in fact shorter than ours . however ,",
    "in their works , the problems such as large memory amount and impossibility of explicit implementation , mentioned and solved in this paper , are not concerned .",
    "for instance , their schemes still use continuous bias distributions but they did not show suitable ways to implement or approximate their continuous distributions for practical use . + therefore , these recent results do not completely supersede the work in this paper , in particular , the most significant part regarding reduction of extra memory amount .",
    "in fact , these results show that there remains a room for reducing the length of our code .",
    "indeed , we would like to announce that our recent successive study has achieved code lengths even shorter than the abovementioned works , by using ( approximation of ) the gl distributions , improving our tracing algorithm , and tightly evaluating its tracing error probability .",
    "the details of the successive result will be presented in a forthcoming paper .",
    "we have discussed the problems of tardos s fingerprinting code @xcite regarding its practical use , such as large required memory and impossibility of explicit implementation , mainly due to continuity of probability distributions used in its codeword generation .",
    "we investigated the finite probability distributions used in the preceding improvement @xcite of tardos code , and determined the optimal distributions for the purpose of reducing memory amount .",
    "as table [ tab : memory ] shows , the memory amount is indeed reduced dramatically by our result .",
    "we also reduced the code lengths significantly by improving the formula of code lengths given in @xcite ; and evaluated effects of approximation on security performance of our codes in a practical setting .",
    "the authors would like to express their gratitude to kazuto ogawa and satoshi fujitsu at japan broadcasting corporation ( nhk ) , and to takashi kitagawa , rui zhang and kirill morozov at national institute of advanced industrial science and technology ( aist ) , for several significant comments .",
    "99    d.  boneh and j.  shaw , collusion - secure fingerprinting for digital data ,  _ ieee trans .",
    "_ , vol .  44 - 5 , pp .  18971905 , sept .",
    "1998 .    n.  l.  carothers , _ real analysis_. cambridge university press , 2000 .",
    "h.  engels , _ numerical quadrature and cubature_. academic press : london , 1980 .",
    "k.  j.  frster and k.  petras , on estimates for the weights in gaussian quadrature in the ultraspherical case , ",
    "_ , vol .",
    "55 , pp .  243264 , july 1990 .",
    "l.  gatteschi , una nuova disuguaglianza per gli zeri dei polinomi di jacobi ,  _ atti accad .",
    "torino , cl .",
    "fis .  mat .",
    "_ , vol .",
    "103 , pp .  259265 , 1968 .",
    "m.  hagiwara , g.  hanaoka and h.  imai , a short random fingerprinting code against a small number of pirates ,  in _ proc .",
    "aaecc _ , 2006 , lncs 3857 , pp .",
    "193202 .",
    "t.  isogai and h.  muratani , reevaluation of tardos s code ,  in _ ieice technical report , isec2006 - 96 _ , 2006 , pp . 712 .",
    " , an evaluation of tardos s asymptotic code length ,  presented at the 2007 symposium on crypto .  and inform .",
    "security ( scis2007 ) , sasebo , japan , 2007 .",
    "b.  skori , s.  katzenbeisser and m.  u.  celik .",
    "( 2007 feb . ) .",
    "symmetric tardos fingerprinting codes for arbitrary alphabet sizes .",
    "[ online ] .",
    "available : http://eprint.iacr.org/2007/041    b.  skori , t.  u.  vladimirova , m.  u.  celik and j.  c.  talstra .",
    "( 2006 , july ) .",
    "tardos fingerprinting is better than we thought .",
    "[ online ] .",
    "available : http://www.arxiv.org/abs/cs/0607131    g.  szeg , _",
    "orthogonal polynomials_. american mathematical society , 1939 .",
    "g.  tardos , optimal probabilistic fingerprint codes ,  _",
    "j.  acm _ , to be published .",
    "preliminary version : in _ proc .",
    "stoc _ , 2003 , pp .",
    "here we give the proofs of our results in section [ subsec : c - ind_property ] .    [",
    "proof of proposition [ prop : c - ind_exiszero ] ] first , the following property is easily derived from ( [ eq : relation_ex_f ] ) : @xmath19 \\geq 0 $ ] for all @xmath20 and @xmath21 if and only if @xmath22 \\leq 0 $ ] for all @xmath20 and @xmath21 .",
    "thus the first claim follows from remark [ rem : c - ind ] .",
    "the other claims are also straightforward by ( [ eq : relation_ex_f ] ) .",
    "[ proof of lemma [ lem : relation_f ] ] first , an elementary analysis shows that @xmath23 therefore the second claim follows from the equality @xmath24 now the first claim is also derived from the relation @xmath25 .",
    "[ proof of proposition [ prop : c - ind_requal ] ] by the assumption on @xmath26 , we have @xmath27 $ ] for any @xmath28 .",
    "thus lemma [ lem : relation_f ] infers that @xmath29 $ ] for any @xmath20 , therefore we have @xmath30 by proposition [ prop : c - ind_exiszero ] .",
    "hence @xmath31 $ ] , as desired .",
    "[ proof of lemma [ lem : c - ind_triangle ] ] we have @xmath32 = e_p \\left[f_{\\ell',x'}(p)\\right ] + e_p \\left[f_{\\ell',x'+1}(p)\\right]$ ] by lemma [ lem : relation_f ] ; thus all of the three terms become zero whenever any two of them are .",
    "[ proof of proposition [ prop : c - ind_oddtoeven ] ] since @xmath26 is @xmath2-ind , proposition [ prop : c - ind_exiszero ] infers that ( [ eq : c - ind_exiszero ] ) is satisfied for all parameters of the form @xmath33 with @xmath20 and for @xmath34 , where @xmath35 .",
    "thus by lemma [ lem : c - ind_triangle ] and induction on @xmath36 , it follows for all @xmath36 that ( [ eq : c - ind_exiszero ] ) is satisfied for parameters of the form @xmath37 .",
    "hence @xmath26 is @xmath38-ind by claim 1 of proposition [ prop : c - ind_exiszero ] .",
    "[ proof of proposition [ prop : c - ind_criterion ] ] by proposition [ prop : c - ind_oddtoeven ] , it suffices for both of the two claims to prove that @xmath26 is @xmath39-ind .",
    "first , we argue the claim 1 . by the assumption and claim 3 of proposition [ prop : c - ind_exiszero ] , the condition ( [ eq : c - ind_exiszero ] ) is satisfied for all parameters @xmath40 with @xmath41 , therefore lemma [ lem : c - ind_triangle ] infers that it is also satisfied for all parameters @xmath42 with @xmath43 .",
    "similarly , it is inductively derived that ( [ eq : c - ind_exiszero ] ) is satisfied for all parameters @xmath33 with @xmath44 and @xmath45 .",
    "thus @xmath26 is @xmath39-ind by claim 1 of proposition [ prop : c - ind_exiszero ] .",
    "secondly , we prove the claim 2 .",
    "the assumption and proposition [ prop : c - ind_oddtoeven ] infer that @xmath26 is @xmath46-ind , thus ( [ eq : c - ind_exiszero ] ) is satisfied for all parameters @xmath42 with @xmath43 . since ( [ eq : c - ind_exiszero ] ) is satisfied for the parameter @xmath47 in the statement , the same argument as proposition [ prop : c - ind_oddtoeven ] shows that ( [ eq : c - ind_exiszero ] ) is also satisfied for all parameters @xmath40 with @xmath41 .",
    "hence @xmath26 is @xmath39-ind by claim 1 of proposition [ prop : c - ind_exiszero ] .",
    "here we give the proof of theorem [ thm : srvandqs ] .",
    "first , we show that @xmath48 is a @xmath2-ind bias distribution for any symmetric qs @xmath49 of degree @xmath50 .",
    "a straightforward calculation can show that this @xmath26 is indeed a finite probability distribution ; the outputs of @xmath26 lie in the interval @xmath51 since @xmath52 is a subset of the interval @xmath53 ; and @xmath26 is symmetric since @xmath49 is symmetric .",
    "thus the remaining task is , by claim 2 of proposition [ prop : c - ind_criterion ] , to show that @xmath54 = 0 $ ] for all @xmath20 .",
    "now recall the relation @xmath55 .",
    "since @xmath56 is a polynomial of degree @xmath57 ( @xmath58 ) , we have @xmath59\\nonumber\\\\ & & = \\sum_{\\xi \\in x } \\sqrt { \\frac{1+\\xi}{2 } \\cdot \\frac{1-\\xi}{2 } } \\",
    "g_{\\ell,1}\\!\\left ( \\frac{1+\\xi}{2 } \\right ) \\cdot \\frac { \\omega(\\xi ) } { c \\sqrt { 1-\\xi^2 } } \\nonumber\\\\ & & = \\frac{1}{2c } \\sum_{\\xi \\in x } \\omega(\\xi)g_{\\ell,1}\\!\\left ( \\frac { 1+\\xi } { 2 } \\right)\\nonumber\\\\ & & = \\frac{1}{2c } \\int_{-1}^{1 } g_{\\ell,1}\\!\\left ( \\frac { 1+t } { 2 } \\right)dt\\label{eq : srvandqs_1_1}\\\\ & & = \\frac{1}{c } \\int_{0}^{1 } g_{\\ell,1}(z)\\,dz\\nonumber\\\\ & & = 0\\label{eq : srvandqs_1_2}\\end{aligned}\\ ] ] ( here ( [ eq : srvandqs_1_1 ] ) follows since @xmath49 is a qs of degree @xmath50 , while ( [ eq : srvandqs_1_2 ] ) is derived from ( [ eq : expressionofg ] ) ) .",
    "thus @xmath60 is @xmath2-ind .",
    "secondly , we show that @xmath61 is a symmetric qs of degree @xmath50 for any @xmath2-ind distribution @xmath26 .",
    "the set @xmath52 is included in the interval @xmath53 since @xmath62 for all @xmath63 , while @xmath49 is symmetric since @xmath26 is symmetric .",
    "thus the remaining task is to show that @xmath64 for any polynomial @xmath65 of degree less than or equal to @xmath50 .",
    "now observe that any such @xmath65 can be expressed as a linear combination of the polynomials @xmath66 of degree @xmath57 for @xmath20 and a constant polynomial @xmath4 , while @xmath67 by definition .",
    "thus it suffices to show the above claim only for @xmath68 with @xmath20 .",
    "for this claim , we have @xmath69\\label{eq : srvandqs_2_2}\\\\ & { } = { } & c ' \\sum_{i=1}^{k } \\omega(\\xi_i ) g_{\\ell,1}\\!\\left(\\frac { 1+\\xi_i } { 2 } \\right)\\nonumber\\end{aligned}\\ ] ] ( here ( [ eq : srvandqs_2_1 ] ) is derived from ( [ eq : expressionofg ] ) , while ( [ eq : srvandqs_2_2 ] ) follows from claim 1 of proposition [ prop : c - ind_exiszero ] ) .",
    "thus @xmath70 is a symmetric qs of degree @xmath50 .",
    "here we give the proof of theorem [ thm : gldistribution ] .",
    "put @xmath75 which is proportional to @xmath76 .",
    "first , note that @xmath77 if and only if @xmath78 , thus the set of outputs of @xmath79 with @xmath80 is ( by definition ) the set of zeroes of @xmath81 , which coincides with the set of zeroes of @xmath76 and consists of @xmath36 elements ( see theorem [ thm : gl_quadrature ] ) .",
    "now note that @xmath82 if @xmath83 , while @xmath84 where @xmath85 is some constant .",
    "thus the probability of @xmath86 taking the value @xmath83 with @xmath87 is @xmath88 hence the claim follows , since the factor @xmath89 above is common for all @xmath90 , concluding the proof .",
    "here we give the proof of theorem [ thm : approximation ] by evaluating the probabilities of false - negative and of false - positive .",
    "this will be done by basically the same argument as @xcite except for some slight modifications .    in what follows ,",
    "let @xmath91 and @xmath92 be two positive parameters , and put @xmath93 and @xmath94 . before giving our proof",
    ", we recall the following fundamental tool in probability theory which is used in our argument ( as well as in @xcite ) :    [ markov s inequality ] [ lem : markovinequality ] let @xmath95 be a finite positive random variable and @xmath96",
    ". then we have @xmath97}{t } \\mbox { and } prob(y \\geq t ) \\leq \\frac{e\\left[y\\right]}{t } \\enspace , \\ ] ] where @xmath98 $ ] denotes the expected value of @xmath95 .",
    "* lemma 1 ) ] [ prop : hhi_innocent ] let @xmath99 be an innocent user .",
    "for any fixed @xmath100 , any fixed @xmath101 and any @xmath96 , we have @xmath102 where the probability is taken over the codewords of @xmath99 chosen according to the @xmath103 .",
    "the proof is almost the same as that of ( * ? ? ?",
    "* lemma 1 ) , except for some differences explained below .",
    "first , ( * ? ? ?",
    "* lemma 1 ) showed an inequality similar to ( [ eq : hhi_innocent ] ) for the probability @xmath104 under the assumption that @xmath105 ( note that @xmath91 is simply denoted by @xmath106 in @xcite ) ; however , the same proof is actually able to prove the same inequality for a slightly larger probability @xmath107 under the weaker assumption that @xmath108 .",
    "this follows from the observation that the bound @xmath109 used in the original proof is indeed a",
    "_ strict _ inequality . secondly , ( * ? ? ? *",
    "lemma 1 ) was originally proved only when @xmath110 is the threshold , however a careful reading of the proof can reveal that the property of @xmath110 _ being the threshold _ is not used in there ; therefore that proof is still valid even if @xmath110 is just an _ arbitrary _ positive parameter .",
    "now our claim follows by combining these two observations .",
    "[ rem : hhi_proof ] the proof of ( * ? ? ?",
    "* lemma 1 ) is still valid ( so is that of the above proposition ) even if @xmath111 is an _",
    "arbitrary _ codeword with @xmath112 _ which need not satisfy the marking assumption _",
    ", only the required property of @xmath111 is that it is independent of the codeword of @xmath99 ( see assumption [ asmp : piratesknowledge ] ) .",
    "* lemma 2 ) ] [ prop : hhi_guilty ]",
    "let @xmath113 be the pirates with @xmath114 , and @xmath96 .",
    "then for any fixed pirates strategy , we have @xmath115 \\leq e^ { \\beta ( c\\beta r(\\hat{x}_2 ) - \\mathcal{r}_{\\ell,\\mathcal{p } } ) m } \\enspace , \\ ] ] where the expected value is taken over all @xmath103 , all codewords of pirates and all @xmath111 , which are chosen according to @xmath26 , @xmath103 and the pirates strategy , respectively . hence by markov s inequality , we have @xmath116 / e^{-\\beta \\ell t } \\nonumber\\\\ & { } \\leq { } & e^ { \\beta ( c\\beta r(\\hat{x}_2 ) - \\mathcal{r}_{\\ell,\\mathcal{p } } ) m + \\beta \\ell t } \\enspace .\\nonumber\\end{aligned}\\ ] ]    the proof is basically the same as ( * ? ? ?",
    "* lemma 2 ) ; it also works in our situation by noticing the following points only .",
    "first , the original proof allows the pirates strategy to be probabilistic , though it was not clarified . secondly ,",
    "although @xcite only considers the restricted case that @xmath111 contains no bit @xmath117 , an argument appeared in @xcite can generalize the proof in @xcite to our situation where @xmath111 may contain @xmath117.    now we start to prove theorem [ thm : approximation ] . first , recall that in the approximated tracing algorithm given in definition [ defn : approximated_tracing ] , a user is outputted",
    "if and only if @xmath118 where @xmath119 denotes the approximated score . now @xmath118 infers @xmath120 and @xmath121 infers @xmath122 by definition of @xmath123 ; thus to achieve @xmath124 , where @xmath125 is an arbitrarily fixed innocent user , and to achieve @xmath126 as well , it suffices to satisfy the following two bounds @xmath127 where @xmath128 denotes an arbitrarily fixed innocent user s true score and @xmath129 ( with @xmath114 ) denote the @xmath130 pirates true scores .",
    "now by propositions [ prop : hhi_innocent ] and [ prop : hhi_guilty ] , the following conditions yield ( [ eq : securitywithapproximation_1_1 ] ) and ( [ eq : securitywithapproximation_1_2 ] ) : @xmath131 moreover , since the values @xmath132 , @xmath110 , @xmath133 and @xmath123 are all nonnegative , the following conditions @xmath134 also yield ( [ eq : securitywithapproximation_1_1 ] ) and ( [ eq : securitywithapproximation_1_2 ] ) . now",
    "if we solve equations ( [ eq : securitywithapproximation_2_1 ] ) and ( [ eq : securitywithapproximation_2_2 ] ) in @xmath132 and @xmath110 , where @xmath91 and @xmath92 are determined by @xmath135 for @xmath136 and @xmath137 and @xmath133 are determined as above , then the code length @xmath132 and the threshold @xmath110 are given by @xmath138 ( where @xmath139 ) and @xmath140 which generalize the formula in @xcite ( the original is recovered by putting @xmath141 , @xmath142 and @xmath143 ) .",
    "moreover , if we take the values @xmath144 , @xmath145 and @xmath146 ( @xmath136 ) as in section [ subsec : length_formula ] , and determine the modified code length @xmath147 and threshold @xmath148 by @xmath149 then by comparing the pair of ( [ eq : newlength_precise_1 ] ) and ( [ eq : newlength_precise_2 ] ) with the pair of ( [ eq : newlength_approx_1 ] ) and ( [ eq : newlength_approx_2 ] ) , we can show that conditions ( [ eq : securitywithapproximation_1_1 ] ) and ( [ eq : securitywithapproximation_1_2 ] ) are satisfied with @xmath150 replaced by @xmath151 where @xmath152 since @xmath153 and @xmath154 ( @xmath136 ) by definition , we have @xmath155 by the choice of @xmath146 .",
    "thus the code length @xmath147 and threshold @xmath148 , which are precisely those chosen in theorem [ thm : approximation ] ( see ( [ eq : newformula_length ] ) and ( [ eq : newformula_threshold ] ) ) , provide the desired security performance .",
    "hence the proof of theorem [ thm : approximation ] is concluded .      here",
    "we give the proof of theorem [ thm : boundoflength_general ] .",
    "first , we have @xmath224 by proposition [ prop : boundforr ] ( see also proposition [ prop : c - ind_requal ] ) and @xmath225 by proposition [ prop : limit_p0 ] when @xmath14 .",
    "thus the parameter @xmath106 , which is determined by @xmath226 , converges when @xmath227 to @xmath228 given in the statement ( note that the continuous function @xmath229 is strictly increasing for @xmath230 and its image is the whole infinite interval @xmath231 , therefore such @xmath228 is uniquely determined ) .",
    "similarly , the other parameter @xmath232 converges to @xmath233 when @xmath14 , since @xmath234 .",
    "now by ( [ eq : newformula_length ] ) , we have @xmath235 while the above argument shows that @xmath236 when @xmath14 .",
    "moreover , by the assumption on value @xmath237 we have that @xmath238 thus we have @xmath239 therefore the claim follows .",
    "hence the proof of theorem [ thm : boundoflength_general ] is concluded .",
    "[ lem : monotoneconvergence ] let @xmath156 be a sequence of nonnegative continuous functions on the same open interval @xmath157 , whose sum @xmath158 converges to a continuous function @xmath159 at every point in @xmath160 . if all of the improper integrals @xmath161 and @xmath162 exist and converge , then @xmath163 .",
    "[ dini s theorem ; see e.g.  @xcite ] [ lem : dinistheorem ] let @xmath164 $ ] be a closed interval , and let @xmath165 be an increasing sequence of continuous functions @xmath166 on @xmath160 which converges to another continuous function @xmath167 at every point in @xmath160 ; i.e.  @xmath168 when @xmath169 .",
    "then the convergence is uniform ; i.e.  for any @xmath170 , there is an index @xmath10 such that @xmath171 for every @xmath172 and @xmath169 .",
    "[ see e.g.  ( * ? ? ?",
    "* theorem 10.5 ) ] [ lem : integral_uniform_convergence ] let @xmath165 be a sequence of continuous functions on the same closed interval @xmath164 $ ] which converges uniformly to a function @xmath167 on @xmath160",
    ". then @xmath173 converges to @xmath174 when @xmath175 .",
    "now we start to prove lemma [ lem : monotoneconvergence ] .",
    "first , note that the function @xmath159 is nonnegative on @xmath160 by the assumption .",
    "then , given an arbitrary @xmath170 , the assumption on convergence of the improper integral @xmath162 infers that @xmath176 for some @xmath177 .",
    "now by the assumption , the sequence @xmath165 defined by @xmath178 is an increasing sequence of continuous functions on the closed interval @xmath179 $ ] which converges to the continuous function @xmath159 at every point in @xmath180 . thus lemma [ lem : dinistheorem ]",
    "infers that the convergence is uniform ; it follows that @xmath181 when @xmath175 by lemma [ lem : integral_uniform_convergence ] .",
    "therefore there is an index @xmath10 such that @xmath182 by combining ( [ eq : monotoneconvergence_1 ] ) and ( [ eq : monotoneconvergence_2 ] ) , we have @xmath183 for any @xmath172 ( note that @xmath184 for each @xmath63 ) .",
    "this means that @xmath173 converges to @xmath162 when @xmath175 , as desired .",
    "hence the proof of lemma [ lem : monotoneconvergence ] is concluded .",
    "here we give the proof of proposition [ prop : boundforr ] .",
    "first , let @xmath185 denote the gauss - legendre qs of order @xmath10 ( see section [ subsec : c - ind_optimal ] for definition ) , therefore the set @xmath186 consists of @xmath10 zeroes of the legendre polynomial @xmath187 . in our proof of proposition",
    "[ prop : boundforr ] , we use the following result , which is directly derived from the latter part of inequality ( 2.18 ) in ( * ? ? ?",
    "* corollary 1 ) by choosing the parameter @xmath188 :      now we start the proof of proposition [ prop : boundforr ] . recall that @xmath2 is now assumed to be even ; put @xmath192 . first , by combining proposition [ prop : c - ind_requal ] and theorem [ thm : srvandqs ]",
    ", we have @xmath193 \\nonumber\\\\ & { } = { } & \\sum_{\\xi \\in x_n } \\sqrt { \\frac { 1+\\xi } { 2 } \\cdot \\frac { 1-\\xi } { 2 } } \\cdot \\frac { \\omega_n(\\xi ) } { c_n\\sqrt { 1-\\xi^2 } } \\nonumber\\\\ & { } = { } & \\frac{1}{2c_n } \\sum_{\\xi \\in x_n } \\omega_n(\\xi ) = \\frac{1}{c_n } \\enspace , \\nonumber\\end{aligned}\\ ] ] where @xmath194 .",
    "now lemma [ lem : legendre_bessel_2 ] gives us that @xmath195 , thus the former claim follows .    for the proof of the latter claim , it suffices to show that @xmath196 .",
    "now it follows that @xmath197 for @xmath198 , therefore we have @xmath199 ( here ( [ eq : limitofr_bound ] ) follows from the fact that the qs @xmath200 is of degree @xmath201 ) . now owing to lemma [ lem : monotoneconvergence ] in appendix [ sec : appendix_monotoneconvergence ] with @xmath202 and @xmath203 , the value ( [ eq : limitofr_bound ] ) converges to @xmath204 when @xmath205 , while @xmath206 also converges to @xmath207 .",
    "thus we have @xmath196 , as desired .",
    "hence the proof of proposition [ prop : boundforr ] is concluded .",
    "here we give the proof of proposition [ prop : limit_p0 ] .",
    "first , we define @xmath208 to be the unique value such that @xmath209 and @xmath210 is the smallest zero of the legendre polynomial @xmath187 ( recall that the zeroes of @xmath187 lie in the open interval @xmath53 )",
    ". then we have the following result , which will be used in the proof of proposition [ prop : limit_p0 ] :      from now , we prove proposition [ prop : limit_p0 ] .",
    "first , by the definitions of @xmath214 and @xmath208 , theorem [ thm : srvandqs ] infers that @xmath215 therefore @xmath216 .",
    "thus by lemma [ lem : legendre_bessel_1 ] , we have @xmath217 where @xmath218 ( namely @xmath219 and @xmath220 ) .",
    "moreover , an elementary analysis gives us @xmath221 for @xmath222 , which converges to @xmath223 when @xmath14 .",
    "hence the claim of proposition [ prop : limit_p0 ] follows , concluding the proof ."
  ],
  "abstract_text": [
    "<S> it is known that tardos s collusion - secure probabilistic fingerprinting code ( tardos code ; stoc03 ) has length of theoretically minimal order with respect to the number of colluding users . </S>",
    "<S> however , tardos code uses certain continuous probability distribution in codeword generation , which creates some problems for practical use , in particular , it requires large extra memory . </S>",
    "<S> a solution proposed so far is to use some finite probability distributions instead . in this paper </S>",
    "<S> , we determine the optimal finite distribution in order to decrease extra memory amount . by our result </S>",
    "<S> , the extra memory is reduced to @xmath0 of the original , or even becomes needless , in some practical setting . moreover , </S>",
    "<S> the code length is also reduced , e.g.  to about @xmath1 of tardos code asymptotically . finally , we address some other practical issues such as approximation errors which are inevitable in any real implementation .    </S>",
    "<S> collusion - secure code , tardos code , memory optimization , digital rights managements </S>"
  ]
}
{
  "article_text": [
    "in the field of numerical simulation of fluids and structures , there is traditionally considered to be a tension between the computational efficiency and ease of implementation of structured grid models , and the flexible geometry and resolution offered by unstructured meshes .",
    "in particular , one of the grand challenges in simulation science is modelling the ocean and atmosphere for the purposes of predicting the weather or understanding the earth s climate system . the current generation of large - scale operational atmosphere and ocean models",
    "almost all employ structured meshes @xcite .",
    "however , requirements for geometric flexibility as well as the need to overcome scalability issues created by the poles of structured meshes has led in recent years to a number of national projects to create unstructured mesh models @xcite .",
    "the ocean and atmosphere are thin shells on the earth s surface , with typical domain aspect ratios in the thousands ( oceans are a few kilometres deep but thousands of kilometres across ) .",
    "additionally the direction of gravity and the stratification of the ocean and atmosphere create important scale separations between the vertical and horizontal directions .",
    "the consequence of this is that even unstructured mesh models of the ocean and atmosphere are in fact only unstructured in the horizontal direction , while the mesh is composed of aligned layers in the vertical direction . in other words ,",
    "the meshes employed in the new generation of models are the result of extruding an unstructured two - dimensional mesh to form a layered mesh of prismatic elements .",
    "this layered structure was exploited in @xcite to create a numbering for a finite volume atmospheric model such that iteration from one cell to the next within a vertical column required only direct addressing .",
    "they show that when only paying the price of indirect addressing on the base mesh there is less than 5% performance difference between two implementations of an atmospheric model which treat the same icosahedral mesh first as fully structured and then as partially structured ( extruded ) .",
    "one of the caveats of that comparison is that the underlying mesh is fully structured in both cases which presents an advantage to the indirect addressing scheme which is not present for more general unstructured meshes .    exploiting the anisotropic nature of domains",
    "has seen various software developments in various fields .",
    "for example ` p6est ` ( @xcite and @xcite ) , a package for 2 + 1 dimensional adaptive mesh refinement , was developed to maintain columnwise numbering for numerical reasons in ice sheet modelling , but does not support general unstructured base meshes .",
    "the dune - prismgrid module  @xcite provides extruded meshes for any base dune grid , but does not describe a degree of freedom numbering or provide detailed performance characteristics of the iteration on extruded meshes . the model for prediction across scales ( mpas ) uses a column innermost numbering for their c - grid atmospheric and ocean model @xcite .",
    "their implementation is limited to the single discretisation employed by that model .    a key motivation for this work was to provide an efficient mechanism for the implementation of the layered finite element numerics which have been adopted by the uk met office s gung ho programme to develop a new atmospheric dynamical core .",
    "the algorithms here have been adopted by the met office for this purpose @xcite .",
    "while geophysical applications motivate this work , the algorithms and their implementation in firedrake @xcite are more general and could be applied to any high aspect ratio domain .      * we generalize the numbering algorithm in @xcite to the full range of finite element discretisations . *",
    "we demonstrate the effectiveness of the algorithm with respect to absolute hardware performance limits .",
    "in this section we briefly restate the data model for unstructured meshes introduced in @xcite . in",
    "we rigorously define a _ mesh _ , explain mesh topology , geometry and numbering . in we explain how data may be associated with meshes .",
    "when describing a mesh , we need some way of specifying the neighbours of a given entity .",
    "this is always possible using _ indirect addressing _ in which the neighbours are explicitly enumerated , and sometimes possible with _ direct addressing _ where a closed form mathematical expression suffices .    in what follows",
    "we start with a _ base mesh _ which we will _ extrude _ to form a mesh of higher topological dimension . due to geophysical considerations , we refer to the plane of the base mesh as the _ horizontal _ and to the layers as the _ vertical_.    we will also employ the definition of a _ graph _ as a set @xmath0 and a set @xmath1 of edges where each edge represents the relationships between the elements of the set @xmath0 .      a mesh is a decomposition of a simulation domain into non - overlapping polygonal or polyhedral cells .",
    "we consider meshes used in algorithms for the automatic numerical solution of partial differential equations .",
    "these meshes combine topology and geometry .",
    "the topology of a mesh is composed of mesh entities ( such as vertices , edges , cells ) and the adjacency relationships between them ( cells to vertices or edges to cells ) .",
    "the geometry of the mesh is represented by coordinates which define the position of the mesh entities in space .",
    "every mesh entity has a topological dimension given by the minimum number of spatial dimensions required to represent that entity .",
    "we define @xmath2 to be the minimum number of spatial dimensions needed to represent a mesh and all its entities .",
    "a vertex is representable in zero - dimensional space , similarly an edge is a one - dimensional entity and a cell a @xmath2-dimensional entity . in a two - dimensional mesh of triangles , for example , the entities are the vertices , edges and triangle cells with topological dimensions @xmath3 , @xmath4 and @xmath5 respectively . the minimum number of geometric dimensions needed to represent the mesh and all its entities is @xmath6 .",
    "a mesh can be represented by several graphs .",
    "each graph consists of a multi - type set @xmath0 and a typed adjacency relationship @xmath7 between @xmath8- and @xmath9-typed elements in @xmath0 .",
    "the type of an entity in @xmath0 is simply its dimension .",
    "the adjacency graphs will always map from a set of uniform dimension to a set of uniform dimension . attaching types to elements of @xmath0 enables graphs to capture the relationships between different mesh entities , for example cells and vertices , edges and vertices .",
    "we write @xmath10 to mean the set of mesh entities of topological dimension @xmath11 where @xmath12 : @xmath13 where @xmath14 is the number of entities of dimension @xmath11 .",
    "the set @xmath0 is then simply the union of the @xmath15s : @xmath16    every mesh entity has a number of adjacent entities .",
    "the mesh - element connectivity relationships are used to specify the way mesh entities are connected . for a given mesh of topological dimension @xmath2",
    "there are @xmath17 different types of adjacency relationships . to define the mesh , only a minimal subset of relationships from which all the others can be derived is required . for example",
    ", as shown in @xcite , the complete set of adjacency relationships may be derived from the cell - vertex adjacency .",
    "we write @xmath18 to specify the entities @xmath19 adjacent to @xmath20 .    in a mesh with a very regular topology",
    ", there may be a closed form mathematical expression for the adjacency relationship @xmath21 .",
    "such meshes are termed _",
    "structured_. however since we are also interested in supporting more general _ unstructured meshes _ , we must store the lists of adjacent entities explicitly .",
    "every mesh entity has a number of values associated with it .",
    "these values are also known as _ degrees of freedom _ and they are the discrete representation of the continuous data fields of the domain . as the degrees of freedom",
    "are uniquely associated with mesh entities , the mesh topology can be used to access the degrees of freedom local to any entity using the connectivity relationships .",
    "a _ finite element discretisation _ associates a number of degrees of freedom with each entity of the mesh . a _ function space _ uses the discretisation to define a numbering for all the degrees of freedom .",
    "multiple different function spaces may be defined on a mesh and each function space may have several data fields associated with it . in the case of a triangular mesh for example , a piecewise linear function space will associate a degree of freedom with every vertex of the mesh while a cubic function space will associate one degree of freedom with every vertex , two degrees of freedom with every edge and one degree of freedom with every cell . in the former case",
    "there will be three degrees of freedom adjacent to a cell , and a total of ten in the latter case .",
    "the data associated with the mesh also needs to be numbered .",
    "the choice of numbering can have a significant effect on the computational efficiency of calculations over the mesh @xcite .",
    "the most common operation performed on meshes is the local application of a function or _",
    "kernel _ while traversing , or _ iterating _ over a homogeneous subset of mesh entities .",
    "the kernel is executed once for each such mesh entity and acts on the degrees of freedom in a _ stencil _ composed of the mesh entities adjacent to the the iterated entity .",
    "for example , a finite element operator evaluating an integral over the domain would iterate over the mesh cells and access data through a stencil comprising the degrees of freedom on that cell and its adjacent facets , edges , and vertices . for a more in - depth discussion on the construction of stencils on unstructured meshes ,",
    "the reader is referred to @xcite and @xcite . in theory , this requires cell - to - facets , cell - to - edges , and cell - to - vertices adjacency relationships ( cell - to - cell is implicit ) . in practice the three different relationships may be composed into a single adjacency relationship which references the data associated with all the different adjacent entity types .    in the unstructured case , we store an explicit list ( also known as a _ map _ )",
    "@xmath22 for each type of stencil operation which given a topological entity @xmath23 returns the set of degrees of freedom in the stencil at that entity .",
    "in we introduce extruded meshes and in we show how the entities and the data are to be numbered . in",
    "we present the extruded mesh iteration algorithm and the offset computation for the direct addressing scheme along the vertical direction .",
    "an extruded mesh consists of a base mesh which is replicated a fixed number of times in a layered structure .",
    "a mesh of topological dimension @xmath2 becomes an extruded mesh of topological dimension @xmath24 .",
    "the mesh definition can be extended to include extruded meshes .",
    "let mesh @xmath25 be a non - extruded mesh where @xmath26 stands for all the valid adjacency relationships of @xmath27 .",
    "an extruded mesh which has @xmath27 as the base mesh can be defined as a triple @xmath28 where @xmath29 is the set of valid adjacency relationships and @xmath30 is the number of intervals over which the mesh is extruded .",
    "this implies that there are @xmath31 vertices in the extruded direction . before we can define @xmath32 and @xmath29 several concepts have to be introduced .",
    "the effect of the extrusion process on the base mesh can always be captured by associating a line segment with the vertical direction .",
    "we write @xmath33 for the topological dimension of the base mesh while the topological dimension of the vertical mesh is always equal to @xmath4 .    as a consequence ,",
    "the cells of the extruded mesh are prisms formed by taking the tensor product of the base mesh cell with the vertical line segment .",
    "for example , each triangle becomes a triangular prism .",
    "the construction of tensor product cells and finite element spaces on them is considered in more detail in @xcite .",
    "the extrusion process introduces new types of mesh entities reflecting the connectivity between layers .",
    "the pairs of corresponding entities of dimension @xmath11 in adjacent layers are connected using entities of dimension @xmath34 . in a triangular mesh for example ( )",
    ", the corresponding vertices are connected using vertical edges , edges contained in each layer are connected by quadrilateral facets and the 2d triangle faces are connected by a 3d triangular prism ( ) .",
    "the topological dimension on its own is no longer enough to distinguish between the different types of entities and their orientation .",
    "instead entities are characterised by a pair composed of the horizontal and vertical dimensions . in the case of a 2d triangular base",
    "mesh the set of dimensions is @xmath35 .",
    "the line segment of the vertical can be described by the set of dimensions @xmath36 .",
    "the cartesian product of the two sets yields a set of pairs ( ) which can be used to uniquely identify mesh entities .",
    "@xmath37 we refer to the components of each pair as the _ horizontal _ and _ vertical _ dimension of the entity respectively .",
    "shows the mapping between the mesh entity types and their descriptor .",
    ".topological dimensions of extruded mesh entities .",
    "@xmath33 denotes the topological dimension of the base mesh.[tab : ext - mesh - dimensions ] [ cols=\"<,<\",options=\"header \" , ]     on sandy bridge , the proportion of peak theoretical floating point throughput is between 71 and 85% , while on haswell it is between 71 and 92% .",
    "in contrast , the proportion of peak bandwidth achieved varies between 7 and 51% on sandy bridge and 9 and 75% on haswell .",
    "the higher , and much more consistent peak flop results lead us to the conclusion that we are in an operation- rather than bandwidth - limited regime .",
    "the performance figures are therefore presented with respect to this metric .      when the base mesh is well ordered ( ) ,",
    "the number of layers required to reach a performance plateau is between 10 and 20 for all discretisations . when the base mesh is badly ordered ( )",
    "the plateau is frequently not reached even with 100 layers .",
    "a striking feature of both and is that cases in which the local kernel calculations are identical produce very similar achieved flop rates , despite having different data sharing patterns .",
    "this supports the hypothesis that the results are operation bound .    [",
    "0.48 ]   integral computation with varying number of layers and number of processes on a well - ordered base mesh .",
    "the star - shaped markers show the performance of the 1-layer badly - ordered mesh for comparison .",
    "the horizontal line is the base flop throughput for @xmath38 and the number of physical cores used.,title=\"fig : \" ] [ 0.48 ]   integral computation with varying number of layers and number of processes on a well - ordered base mesh .",
    "the star - shaped markers show the performance of the 1-layer badly - ordered mesh for comparison .",
    "the horizontal line is the base flop throughput for @xmath38 and the number of physical cores used.,title=\"fig : \" ]    [ 0.48 ]   integral computation with varying number of layers and number of processes on a well - ordered base mesh .",
    "the star - shaped markers show the performance of the 1-layer badly - ordered mesh for comparison .",
    "the horizontal line is the base flop throughput for @xmath38 and the number of physical cores used.,title=\"fig : \" ] [ 0.48 ]   integral computation with varying number of layers and number of processes on a well - ordered base mesh .",
    "the star - shaped markers show the performance of the 1-layer badly - ordered mesh for comparison .",
    "the horizontal line is the base flop throughput for @xmath38 and the number of physical cores used.,title=\"fig : \" ]    [ 0.48 ]   integral computation with varying number of layers and number of processes on a badly - ordered base mesh .",
    "the horizontal line is the base flop throughput for @xmath38 and the number of physical cores used.,title=\"fig : \" ] [ 0.48 ]   integral computation with varying number of layers and number of processes on a badly - ordered base mesh .",
    "the horizontal line is the base flop throughput for @xmath38 and the number of physical cores used.,title=\"fig : \" ]    [ 0.48 ]   integral computation with varying number of layers and number of processes on a badly - ordered base mesh .",
    "the horizontal line is the base flop throughput for @xmath38 and the number of physical cores used.,title=\"fig : \" ] [ 0.48 ]   integral computation with varying number of layers and number of processes on a badly - ordered base mesh .",
    "the horizontal line is the base flop throughput for @xmath38 and the number of physical cores used.,title=\"fig : \" ]     integral computation on different data discretisations with varying number of layers on the haswell architecture for a well - ordered base mesh .",
    "the star - shaped markers show the performance of the 1-layer badly - ordered mesh for comparison .",
    "the horizontal line is the base flop throughput for @xmath38 and the number of physical cores used . ]",
    "the performance of the extruded mesh iteration is constrained by the properties of the mesh and the kernel computation .",
    "the total number of computations is based on the number of degrees of freedom per cell .",
    "the range of discretisations used in this paper ( ) leads to four cases : one , two , three or six degrees of freedom per cell . in compute bound situations , discretisations with the same number of computations",
    "have the same performance , see and ) .",
    "the numbering algorithm ensures good temporal locality between vertically aligned cells .",
    "any degrees of freedom which are shared vertically are reused when the iteration algorithm visits the next element .",
    "the reuse distance along the vertical is therefore minimal .    for @xmath39 discretisations , where degrees of freedom are shared horizontally with other vertical columns , the overall performance depends on the ordering of cells in the base mesh . assuming a perfect ordering of the base mesh , the numbering algorithm ensures a minimal reuse distance while guaranteeing a minimum number of indirect accesses and satisfying all the previously introduced spatial and temporal locality requirements .    and demonstrate the combined impact of horizontal mesh ordering and extrusion . in the extreme case",
    "the flop rate increases up to 14 times between the badly ordered single - layer case and the 100 layer well ordered case .",
    "this is consistent with the widely held belief that unstructured mesh models are an order of magnitude slower than structured mesh models .",
    "the difference between well- and badly - ordered mesh performance outlines the benefits responsible for the boost in performance .",
    "horizontal data reuse dominates performance for low number of layers while spatial locality and vertical temporal locality ( ensured by the numbering and iteration algorithms ) are responsible for most of the performance gains as the number of layers increases .    we note , once again , that these results are for the lowest order spaces which represent a worst case .",
    "higher - order methods both access more contiguous data in each column and require many more flops . as a result",
    ", we would expect to reach performance plateaus at lower numbers of layers .",
    "in this paper we have presented efficient , locality - aware algorithms for numbering and iterating over extruded meshes . for a sufficient number of layers ,",
    "the cost of using an unstructured base mesh is amortized .",
    "achieved performance ranges from 70% to 90% of our best estimate for the hardware s performance capabilities and current level of kernel optimisation .",
    "benefits of spatial and temporal locality vary with number of layers : as the number of layers is increased the benefits of spatial locality increase while those of temporal locality decrease .",
    "this paper employed two simplifying constraints : that there are a constant number of layers in each column , and that the number of degrees of freedom associated with each entity type is a constant .",
    "these assumptions are not fundamental to the numbering algorithm presented here , or to its performance .",
    "we intend to relax those constraints as they become important for the use cases for which firedrake is employed .",
    "the current code generation scheme can be extended to include inter - kernel vectorization ( an optimisation mentioned in @xcite ) for the operations which can not be vectorised at intra - kernel level .",
    "the efficiency of such a generic scheme applicable to different data discretisations is currently being explored .    in future work",
    "we intend to generalize some of the optimisations which extrusion enables for both residual and jacobian assembly : inter - kernel optimisations , grouping of addition of contributions to the global system and exploiting the vertical alignment at the level of the sparse representation of the global system matrix .",
    "in addition to the cpu results presented in this paper , we also plan to explore the performance portability issues of extruded meshes on graphical processing units and intel xeon phi accelerators .",
    "this work was supported by an engineering and physical sciences research council prize studentship [ ref .",
    "1252364 ] , the grantham institute and climate - kic , the natural environment research council [ grant numbers ne / k006789/1 , ne / k008951/1 , and ne / m013480/1 ] and the department of computing , imperial college london .",
    "the authors would like to thank j. ( ram ) ramanujam at louisiana state university for the insightful discussions and feedback during the writing of this paper .",
    "we are thankful to francis russell at imperial college london for the feedback on this paper .",
    "the packages used to perform the experiments have been archived using zenodo : @xcite ; @xcite ; @xcite ; @xcite ; @xcite ; @xcite ; @xcite ; and @xcite .",
    "the source code repositories as well as the archived versions are publicly available .      the scripts used to perform the experiments as well as the results are archived using zenodo : sandy bridge @xcite and haswell @xcite .",
    "the meshes used in the experiments are available also @xcite .",
    "the archives are publicly available .",
    "gheorghe - teodor bercea designed the generalized extrusion algorithm , performed the extension of the firedrake and pyop2 packages to support extruded meshes , the performance evaluation and the preparation of the graphs and tables .",
    "andrew t. t. mcrae extended components of the firedrake toolchain to support the finite element types used in the experiments , and made minor contributions to the extruded mesh iteration functionality .",
    "david a. ham was the proponent of a generalized extrusion algorithm .",
    "lawrence mitchell , florian rathgeber and fabio luporini developed related features and framework improvements in firedrake , pyop2 and coffee .",
    "luigi nardi is responsible for the use of the floating point balance metric .",
    "david a. ham and paul h. j. kelly are the principal investigators for this paper .",
    "gheorghe - teodor bercea prepared the manuscript with contributions from all the authors .",
    "all authors contributed with feedback during the paper s write - up process .",
    "rupert ford , matthew glover , david  a. ham , chris maynard , stephen pickles , and graham riley . .",
    "technical report frtr587 , met office , fitzroy road , exeter , ex1 3pb ,",
    "november 2013 .",
    "url http://www.metoffice.gov.uk/media/pdf/8/o/frtr587tagged.pdf .",
    "christoph gersbacher . .",
    "in andreas dedner , bernd flemisch , and robert klfkorn , editors , _ advances in dune : proceedings of the dune user meeting , held in october 6th8th 2010 in stuttgart , germany _ , pages 3344 , berlin , heidelberg , 2012 .",
    "springer berlin heidelberg .",
    "isbn 978 - 3 - 642 - 28589 - 9 .",
    "doi : 10.1007/978 - 3 - 642 - 28589 - 9_3 .",
    "tobin isaac .",
    "_ scalable , adaptive methods for forward and inverse problems in continental - scale ice sheet modeling_. phd thesis , university of texas at austin , 2015 .",
    "url http://hdl.handle.net/2152/31372 .",
    "fabio luporini , ana  lucia varbanescu , florian rathgeber , gheorghe - teodor bercea , j.  ramanujam , david  a. ham , and paul h.  j. kelly . .",
    "_ acm transactions on architecture and code optimization _ , 110 ( 4):0 57:157:25 , 2015 .",
    "doi : 10.1145/2687415 .",
    "alexander  e. macdonald , jacques middlecoff , tom henderson , and jin - luen lee . .",
    "_ international journal of high performance computing applications _ ,",
    "250 ( 4):0 392403 , november 2011 .",
    "doi : 10.1177/1094342010385019 .",
    "t.  t. mcrae , gheorghe - teodor bercea , lawrence mitchell , david  a. ham , and colin  j. cotter . .",
    "_ siam journal on scientific computing _ , 2016 .",
    "http://arxiv.org/abs/1411.2940[`arxiv:1411.2940 [ math.na ] ` ] .",
    "to appear .",
    "philip  j. mucci , shirley browne , christine deane , and george ho . .",
    "in _ proceedings of the department of defense hpcmp users group conference _ ,",
    "pages 710 , 1999 .",
    "url http://www.icl.utk.edu/sites/icl/files/publications/1999/icl-utk-58-1999.pdf .",
    "georg ofenbeck , ruedi steinmann , victoria caparros , daniele  g. spampinato , and m.  pschel . .",
    "in _ ieee international symposium on performance analysis of systems and software ( ispass ) _ , pages 7685 , march 2014 .",
    "doi : 10.1109/ispass.2014.6844463 .",
    "florian rathgeber , david  a. ham , lawrence mitchell , michael lange , fabio luporini , andrew t.  t. mcrae , gheorghe - teodor bercea , graham  r. markall , and paul h.  j. kelly . .",
    "_ acm transactions on mathematical software _ , 2016 .",
    "http://arxiv.org/abs/1501.01809[`arxiv:1501.01809 [ cs.ms ] ` ] .",
    "to appear .",
    "abhinav sarje , sukhyun song , douglas jacobsen , kevin huck , jeffrey hollingsworth , allen malony , samuel williams , and leonid oliker . .",
    "_ procedia computer science _ , 51:0 20162025 , 2015 .",
    "doi : 10.1016/j.procs.2015.05.466 .",
    "julia slingo , kevin bates , nikos nikiforakis , matthew piggott , malcolm roberts , len shaffrey , ian stevens , pier  luigi vidale , and hilary weller . .",
    "_ philosophical transactions of the royal society of london a : mathematical , physical and engineering sciences _ , 3670 ( 1890):0 815831 , 2009 .",
    "doi : 10.1098/rsta.2008.0207 ."
  ],
  "abstract_text": [
    "<S> we present a generic algorithm for numbering and then efficiently iterating over the data values attached to an extruded mesh . </S>",
    "<S> an extruded mesh is formed by replicating an existing mesh , assumed to be unstructured , to form layers of prismatic cells . </S>",
    "<S> applications of extruded meshes include , but are not limited to , the representation of 3d high aspect ratio domains employed by geophysical finite element simulations . </S>",
    "<S> these meshes are structured in the extruded direction . </S>",
    "<S> the algorithm presented here exploits this structure to avoid the performance penalty traditionally associated with unstructured meshes . </S>",
    "<S> we evaluate the implementation of this algorithm in the firedrake finite element system on a range of low compute intensity operations which constitute worst cases for data layout performance exploration . </S>",
    "<S> the experiments show that having structure along the extruded direction enables the cost of the indirect data accesses to be amortized after 10 - 20 layers as long as the underlying mesh is well - ordered . </S>",
    "<S> we characterise the resulting spatial and temporal reuse in a representative set of both continuous - galerkin and discontinuous - galerkin discretisations . on meshes with realistic numbers of layers </S>",
    "<S> the performance achieved is between 70% and 90% of a theoretical hardware - specific limit .    </S>",
    "<S> = 1 </S>"
  ]
}
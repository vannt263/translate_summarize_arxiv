{
  "article_text": [
    "graph drawing addresses the issue of constructing geometric representations of graphs in a way to gain better understanding and insights into the graph structures .",
    "surveys on graph drawing can be found in @xcite .",
    "if the given data is hierarchical ( such as a file system ) , then it can often be expressed as a rooted tree . among existing algorithms in the literature for drawing rooted trees ,",
    "the work of @xcite developed a popular method for drawing binary trees .",
    "the idea behind @xcite is to recursively draw the left and right subtrees independently in a bottom - up manner , then shift the two drawings along the @xmath0-direction as close to each other as possible while centering the parent of the two subtrees one level up between their roots .",
    "different from the conventional ` triangular ' tree drawing of @xcite , @xmath1-drawings @xcite , radial drawings @xcite and balloon drawings @xcite are also popular for visualizing hierarchical graphs .",
    "since the majority of algorithms for drawing rooted trees take linear time , rooted tree structures are suited to be used in an environment in which real - time interactions with users are frequent .",
    "consider figure  [ fgillustration ] for an example .",
    "a _ balloon drawing _",
    "@xcite of a rooted tree is a drawing having the following properties :    * all the children under the same parent are placed on the circumference of the circle centered at their parent ; * there exist no edge crossings in the drawing ; * the radius of the circle centered at each node along any path from the root node reflects the number of descendants associated with the node ( i.e. , for any two edges on a path from the root node , the farther from the root an edge is , the shorter its drawing length becomes ) .    in the balloon drawing of a tree ,",
    "each subtree resides in a _",
    "wedge _ whose end - point is the parent node of the root of the subtree .",
    "the ray from the parent node to the root of the subtree divides the wedge into two _ sub - wedges_. depending on whether the two sub - wedge angles are required to be identical or not , a balloon drawing can further be divided into two types : drawings with _ even sub - wedges _ ( see figure  [ fgillustration](a ) ) and drawings with _ uneven sub - wedges _ ( see figure  [ fgillustration](b ) ) .",
    "one can see from the transformation from figure  [ fgillustration](a ) to figure  [ fgillustration](b ) that a balloon drawing with uneven sub - wedges is derived from that with even sub - wedges by shrinking the drawing circles in a bottom - up fashion so that the drawing area is as small as possible @xcite . another way to differentiate",
    "the two is that for the even sub - wedge case , it is required that the position of the root of a subtree coincides with the center of the enclosing circle of the subtree .    _ aesthetic criteria _ specify graphic structures and properties of drawing , such as minimizing number of edge crossings or bends , minimizing area , and so on , but the problem of simultaneously optimizing those criteria is , in many cases , np - hard .",
    "the main aesthetic criteria on the angle sizes in balloon drawings are _ angular resolution _ , _ aspect ratio _ , and _ standard deviation of angles_. note that this paper mainly concerns the angle sizes , while it is interesting to investigate other aesthetic criteria , such as the drawing area , total edge length , etc . given a drawing of tree @xmath2 , an angle formed by the two adjacent edges incident to a common node @xmath3 is called an angle incident to node @xmath3 .",
    "note that an angle in a balloon drawing consists of two sub - wedges which belong to two different subtrees , respectively ( see figure  [ fgillustration ] ) .",
    "with respect to a node @xmath3 , the _ angular resolution _ is the smallest angle incident to node @xmath3 , the _ aspect ratio _ is the ratio of the largest angle to the smallest angle incident to node @xmath3 , and the _ standard deviation of angles _ is a statistic used as a measure of the dispersion or variation in the distribution of angles , equal to the square root of the arithmetic mean of the squares of the deviations from the arithmetic mean .    the _ angular resolution _ ( resp .",
    ", _ aspect ratio _ ; _ standard deviation of angles _ ) of a drawing of @xmath2 is defined as the minimum angular resolution ( resp .",
    ", the maximum aspect ratio ; the maximum standard deviation of angles ) among all nodes in @xmath2 . the angular resolution ( resp . ,",
    "aspect ratio ; standard deviation of angles ) of a tree drawing is in the range of @xmath4 ( resp . ,",
    "@xmath5 and @xmath6 ) .",
    "a tree layout with a large angular resolution can easily be identified by eyes , while a tree layout with a small aspect ratio or standard deviation of angles often enjoys a very balanced view of tree drawing .",
    "it is worthy of pointing out the fundamental difference between aspect ratio and standard deviation .",
    "the aspect ratio only concerns the deviation between the largest and the smallest angles in the drawing , while the standard deviation deals with the deviation of all the angles .    with respect to a balloon drawing of a rooted tree , changing the order in which the children of a node are listed or flipping the two sub - wedges of a subtree affects the quality of the drawing .",
    "for example , in comparison between the two balloon drawings of a tree under different tree orderings respectively shown in figures  [ fgexperiments](a ) and [ fgexperiments](b ) , we observe that the drawing in figure  [ fgexperiments](b ) displays little variations of angles , which give a very balanced drawing .",
    "hence some interesting questions arise : _ how to change the tree ordering or flip the two sub - wedge angles of each subtree such that the balloon drawing of the tree has the maximum angular resolution , the minimum aspect ratio , and the minimum standard deviation of angles ? _    throughout the rest of this paper , we let _ re _ , _ ra _ , and _ de _ denote the problems of optimizing angular resolution , aspect ratio , and standard deviation of angles , respectively . in this paper",
    ", we investigate the tractability of the re , ra , and de problems in a variety of cases , and our main results are listed in table  [ tb - results ] , in which trees with ` flexible ' ( resp . , ` fixed ' ) uneven sub - wedges refer to the case when sub - wedges of subtrees are ( resp . , are not ) allowed to flip ; a ` semi - ordered ' tree is an unordered tree where only the circular ordering of the children of each node is fixed , without specifying if this ordering is clockwise or counterclockwise in the drawing .",
    "note that a semi - ordered tree allows to flip uneven sub - wedges in the drawing , because flipping sub - wedges of a node in the bottom - up fashion of the tree does not modify the circular ordering of its children .",
    "see figure  [ fgexperiments ] for an experimental example with the drawings which achieve the optimality of ra1ra4 . in table  [ tb - results ] , with the exception of re1 and ra1 ( which were previously obtained by lin and yen in @xcite ) , all the remaining results are new .",
    "we also give 2-approximation algorithms for ra3 and ra4 , and @xmath7-approximation algorithms for de3 and de4 .",
    "finding improved approximation bounds for those intractable problems remains an interesting open question .",
    "clcccc & & denotation & complexity & reference + &    ( 0,0)(0,-8 )    unordered trees with     ( 0,0)(0,-8 )    & angular resolution & re1 & @xmath8 & @xcite + &  even sub - wedges & aspect ratio & ra1 & @xmath8 & @xcite + & & standard deviation & de1 & @xmath8@xmath9 & [ thm [ thm - de1 ] ] + &    ( 0,0)(0,-8 )    semi - ordered trees with     ( 0,0)(0,-8 )    & angular resolution & re2 & @xmath10@xmath9 & [ thm [ thm - re2 ] ] + &  flexible uneven sub - wedges & aspect ratio & ra2 & @xmath11@xmath9 & [ thm [ thm - ra2 ] ] + & & standard deviation & de2 & @xmath10@xmath9 & [ thm [ thm - de2 ] ] + &    ( 0,0)(0,-8 )    unordered trees with     ( 0,0)(0,-8 )    & angular resolution & re3 & @xmath8@xmath9 & [ thm [ thm - re3 ] ] + &  fixed  uneven sub - wedges & aspect ratio & ra3 & npc@xmath9 & [ thm [ thm - ra3 ] , [ thm - ra3-approx ] ] + & & standard deviation & de3 & npc@xmath9 & [ thm [ thm - de3 ] , [ thm - de3-approx2 ] ] + &    ( 0,0)(0,-8 )    unordered trees with     ( 0,0)(0,-8 )    & angular resolution & re4 & @xmath8@xmath9 & [ thm [ thm - re4 ] ] + &  flexible uneven sub - wedges & aspect ratio & ra4 & npc@xmath9 & [ thm [ thm - ra4 ] , [ thm - ra4-approx ] ] + & & standard deviation & de4 & npc@xmath9 & [ thm [ thm - de4 ] , [ thm - de4-approx2 ] ] +    the rest of the paper is organized as follows .",
    "some preliminaries are given in section  [ sec : preliminary ] .",
    "the problems for cases c1 and c2 are investigated in section  [ sec : c1c2 ] .",
    "the problems for cases c3 and c4 are investigated in section  [ sec : c3c4 ] .",
    "the approximation algorithms for those intractable problems are given in section  [ sec : approx ] .",
    "finally , a conclusion is given in section  [ sec : conclusion ] .",
    "in this section , we first introduce two conventional models of balloon drawing , then define our concerned problems , and finally introduce some related problems .",
    "there exist two models in the literature for generating _ balloon drawings _ of trees .",
    "given a node @xmath3 , let @xmath12 be the radius of the drawing circle centered at @xmath3 . if we require that @xmath12 = @xmath13 for arbitrary two nodes @xmath3 and @xmath14 that are of the same depth from the root of the tree , then such a drawing is called a balloon drawing under the _ fractal model _ @xcite .",
    "the fractal drawing of a tree structure means that if @xmath15 and @xmath16 are the lengths of edges at depths @xmath17 and @xmath18 , respectively , then @xmath19 where @xmath20 is the predefined ratio ( @xmath21 ) associated with the drawing under the fractal model .",
    "clearly , edges at the same depth have the same length in a fractal drawing . unlike the fractal model",
    ", the _ subtrees with nonuniform sizes _ ( abbreviated as _ sns _ ) model @xcite allows subtrees associated with the same parent to reside in circles of different sizes ( see also figure  [ fgillustration](a ) ) , and hence the drawing based on this model often results in a clearer display on large subtrees than that under the fractal model . given",
    "a rooted ordered tree @xmath2 with @xmath22 nodes , a balloon drawing under the sns model can be obtained in @xmath10 time ( see @xcite ) in a bottom - up fashion by computing the edge length @xmath23 and the angle @xmath24 between two adjacent edges respectively according to @xmath25 and @xmath26 ( see figure  [ fgillustration](a ) ) where @xmath23 is the radius of the inner circle centered at node @xmath27 ; @xmath28 is the circumference of the inner circle ; @xmath29 is the radius of the outer circle enclosing all subtrees of the @xmath30-th child of @xmath27 , and @xmath31 is the radius of the outer circle enclosing all subtrees of @xmath27 ; since there exists a gap between @xmath28 and the sum of all diameters , we can distribute to every @xmath24 the gap between them evenly , which is called a free arc , denoted by @xmath32 .",
    "note that the balloon drawing under the sns model is our so - called balloon drawing with even sub - wedges .",
    "a careful examination reveals that the area of a balloon drawing with even sub - wedges ( generated by the sns model ) may be reduced by shrinking the free arc between each pair of subtrees and shortening the radius of each inner circle in a bottom - up fashion @xcite , by which we can obtain a smaller - area balloon drawing with uneven sub - wedges ( e.g. , see the transformation from figure  [ fgillustration](a ) to figure  [ fgillustration](c ) ) .      in what follows",
    ", we introduce some notation , used in the rest of this paper .",
    "circular permutation _",
    "@xmath33 is expressed as : @xmath34 where for @xmath35 , @xmath36 is placed along a circle in a counterclockwise direction .",
    "note that @xmath37 is adjacent to @xmath38 ; @xmath39 denotes @xmath40 ; @xmath41 denotes @xmath42 .",
    "due to the hierarchical nature of trees and the ways the aesthetic criteria ( measures ) for balloon drawings are defined , an algorithm optimizing a _ star graph _ can be applied repeatedly to a general tree in a bottom - up fashion @xcite , yielding an optimum solution with respect to a given aesthetic criterion .",
    "thus , it suffices to consider the balloon drawing of a star graph when we discuss these problems .",
    "a star graph is characterized by a root node @xmath27 together with its @xmath22 children @xmath43 , each of which is the root of a subtree located entirely in a _",
    "wedge _ , as shown in figure  [ fgillustration](a ) ( for the even sub - wedge type ) and figure  [ fgunevennotation ] ( for the uneven sub - wedge type ) . in",
    "what follows , we can only see figure  [ fgunevennotation ] because the even sub - wedge type can be viewed as a special case of the uneven sub - wedge type .",
    "the ray from @xmath44 to @xmath45 further divides the associated wedge into two sub - wedges @xmath46 and @xmath47 with sizes of angles @xmath48 and @xmath49 , respectively .",
    "note that @xmath48 and @xmath49 need not be equal in general .",
    "an _ ordering _ of @xmath44 s children is simply a circular permutation @xmath50 , in which @xmath51 for each @xmath30 .",
    "there are two dimensions of freedom affecting the quality of a balloon drawing for a star graph .",
    "the first is concerned with the ordering in which the children of the root node @xmath27 are drawn . with",
    "a given ordering , it is also possible to alter the order of occurrences of the two sub - wedges associated with each child of the root . with respect to child @xmath45 and its two sub - wedges @xmath52 and @xmath47",
    ", we use @xmath53 to denote the index of the first sub - wedge encountered in a counterclockwise traversal of the drawing . for convenience ,",
    "we let @xmath54 .",
    "we also write @xmath55 ( @xmath56 ) , which is called the _ sub - wedge assignment _",
    "( or simply _ assignment _ ) . as shown in figure  [ fgunevennotation ] , the sequence of sub - wedges encountered along the cycle centered at @xmath27 in a counterclockwise direction can be expressed as : @xmath57    if @xmath58 for each @xmath59 , then the drawing is said to be of _ even sub - wedge type _ ; otherwise , it is of _ uneven sub - wedge type_. as mentioned earlier , the order of the two sub - wedges associated with a child ( along the counterclockwise direction ) affects the quality of a drawing in the uneven sub - wedge case . for the case of uneven sub - wedge type ,",
    "if the assignment @xmath60 is given _ a priori _ , then the drawing is said to be of _ fixed _ uneven sub - wedge type ; otherwise , of _ flexible _ uneven sub - wedge type ( i.e. , @xmath60 is a design parameter ) .",
    "as shown in figure  [ fgunevennotation ] , with respect to an ordering @xmath61 and an assignment @xmath60 in circular permutation  ( [ e - subwedge - uneven ] ) , @xmath62 and @xmath63 , @xmath64 , are neighboring nodes , and the size of the angle formed by the two adjacent edges @xmath65 and @xmath66 is @xmath67 . hence , the _ angular resolution _ ( denoted by @xmath68 ) , the _ aspect ratio _ ( denoted by @xmath69 ) , and the _ standard deviation of angles _ ( denoted by @xmath70 ) can be formulated as @xmath71 we observe that the first and third terms inside the square root of the above equation are constants for any circular permutation @xmath61 and assignment @xmath60 , and hence , the second term inside the square root is the dominant factor as far as @xmath70 is concerned .",
    "we denote by @xmath72 the sum of products of sub - wedges , which can be expressed as : @xmath73 we are now in a position to define the re , ra and de problems in table  [ tb - results ] for four cases ( c1 , c2 , c3 , and c4 ) in a precise manner .",
    "the four cases depend on whether the circular permutation @xmath61 and the assignment @xmath60 in a balloon drawing are fixed ( i.e. , given a priori ) or flexible ( i.e. , design parameters ) .",
    "for example , case c3 allows an arbitrary ordering of the children ( i.e. , the tree is unordered ) , but the relative positions of the two sub - wedges associated with a child node are fixed ( i.e. , flipping is not allowed ) .",
    "the remaining three cases are easy to understand .",
    "we consider the most flexible case , namely , c4 , for which both @xmath61 and @xmath60 are design parameters , which can be chosen from the set @xmath74 of all circular permutations of @xmath75 and the set @xmath76 of all @xmath22-bit binary strings , respectively . the re and ra problems , respectively , are concerned with finding @xmath61 and @xmath60 to achieve the following : @xmath77 the de problem is concerned with finding @xmath61 and @xmath60 to achieve the following : @xmath78 as stated earlier , @xmath79 is closely related to the sop problem , which is concerned with finding @xmath61 and @xmath60 to achieve the following : @xmath80      before deriving our main results , we first recall two problems , namely , the _ two - station assembly line problem _ ( 2sal ) and the _ cyclic two - station workforce leveling problem _ ( 2slw ) that are closely related to our problems of optimizing balloon drawing under a variety of aesthetic criteria .",
    "consider a serial assembly line with two stations , say @xmath81 and @xmath82 , and a set @xmath83 of @xmath22 jobs .",
    "each job @xmath84 consists of two tasks processed by the two stations , respectively , where @xmath85 ( resp . , @xmath86 )",
    "is the workforce requirement at @xmath81 ( resp . , @xmath82 ) .",
    "assume the processing time of each job at each station is the same , say @xmath87 .",
    "consider a circular permutation @xmath88 of @xmath89 where @xmath90 is a circular permutation of @xmath91 .",
    "at any time point , a single station can only process one job .",
    "we also assume that the two stations are always busy . during the first time range",
    "@xmath92 $ ] , @xmath93 and @xmath94 are processed by @xmath82 and @xmath81 , respectively , and the workforce requirement is @xmath95 .",
    "similarly , for each @xmath30 , during the time range @xmath96 $ ] , @xmath97 and @xmath98 are processed at @xmath82 and @xmath81 stations respectively , and the workforce requirement is @xmath99 .",
    "for example , consider @xmath100 where @xmath101 , @xmath102 , @xmath103 , and @xmath104 .",
    "for a certain circular permutation @xmath105 of @xmath89 , the workforce requirements for each period of time as well as the jobs served at the two stations are given in figure  [ fgworkforceplanning ] , where the largest workforce requirement is 11 ; the range of the workforce requirements among all the time periods is [ 3,11 ] .       [",
    "cols=\"^,^,^,^\",options=\"header \" , ]     the @xmath106 and @xmath107 problems are defined as follows :    * * 2sal * : given a set of @xmath22 jobs , find a circular permutation of the @xmath22 jobs such that the largest workforce requirement is minimized . * * 2slw * ( decision version ) : given a set of @xmath22 jobs and a range @xmath108 $ ] of workforce requirements , decide whether a circular permutation exists such that the workforce requirement for each time period is between @xmath109 and @xmath110 .",
    "it is known that 2sal is solvable in @xmath111 time @xcite , while 2slw is np - complete @xcite .",
    "first of all , we investigate the de1 problem ( sop1 problem ) , i.e. , finding a balloon drawing optimizing @xmath112 for case c1 ( i.e. , unordered trees with even sub - wedges ) . in this case , the two sub - wedges associated with a child node in a star graph are of the same size . for notational convenience ,",
    "we order the set of wedge angles @xmath113 ( note that in this case @xmath58 for each @xmath30 ) in ascending order as either @xmath114 for some @xmath115 , where @xmath116 ( resp . , @xmath117 )",
    "is the @xmath30-th minimum ( resp . , maximum ) among all , and @xmath118 is the median if the number of elements is odd . note that the size of each angle between two edges in the drawing may be one of the forms @xmath119 , @xmath120 , @xmath121 , or @xmath122 for some @xmath123 , and hence , there may exist more than one angle with the same value . in what follows ,",
    "we are able to solve the de1 problem by applying procedure  [ alg : c1 ] .",
    "* input : * a star graph @xmath124 with @xmath22 child nodes of nonuniform sizes + * output : * a balloon drawing of @xmath124 optimizing standard deviation of angles +    sort @xmath113 in ascending order as either equation  ( [ e - subwedge - c1-even ] ) , if @xmath125 , or equation  ( [ e - subwedge - c1-odd ] ) , if @xmath126 for convenience , let the child node with wedge @xmath127 , @xmath118 or @xmath128 be also denoted by @xmath127 , @xmath118 or @xmath128 , respectively output @xmath129 output @xmath130 output @xmath131 output @xmath132    [ thm - de1 ] the de1 problem is solvable in @xmath8 time .    in what follows ,",
    "we show that procedure  [ alg : c1 ] , which clearly runs in @xmath8 time , can be applied to correctly producing the optimum solution .",
    "we only consider an output case in procedure  [ alg : c1 ] : @xmath133 i.e. , @xmath134 and @xmath115 is odd ; the remaining cases are similar ( in fact , simpler ) .",
    "note that @xmath135 , for this output case .",
    "we proceed by induction on an integer number @xmath30 , for @xmath136 to @xmath115 , to prove that , with respect to the sop measure , no circular permutations perform better than a certain circular permutation @xmath137 which contains the sequence @xmath138 if the above holds , then no circular permutations perform better than a certain circular permutation @xmath137 which contains sequence @xmath139 . that is , no circular permutations perform better than circular permutation @xmath140 , as required .    for @xmath136 , we show that no circular permutations perform better than a certain circular permutation @xmath137 which contains sequence @xmath141 .",
    "contrarily suppose that there exists a circular permutation @xmath142 in which @xmath143 is not adjacent to @xmath144 so that @xmath145 .",
    "we assume that @xmath143 ( resp . ,",
    "@xmath144 ) is adjacent to @xmath146 ( resp . , @xmath147 ) in @xmath142 where @xmath148 , @xmath149 , and @xmath150 .",
    ", let @xmath142 be @xmath151 where @xmath152 @xmath153",
    ". consider circular permutation @xmath154 where @xmath155 is the reverse of @xmath156 .",
    "then @xmath157 , which is a contradiction .",
    "suppose that no circular permutations perform better than a certain circular permutation which contains sequence @xmath158 .",
    "we show that no circular permutation perform better than a certain circular permutation @xmath159 which contains sequence @xmath160 . in the following ,",
    "we only consider the case when @xmath30 is even ( i.e. , @xmath161 ) ; the other case is similar .",
    "contrarily suppose that there exists a circular permutation @xmath162 which perform better than @xmath159 , i.e. , @xmath163 . by the inductive hypothesis , @xmath164 for some circular permutation @xmath165 which contains sequence @xmath158 .",
    ", suppose that @xmath166 where @xmath167 and @xmath168 @xmath169 ; the other cases are similar .",
    "assume @xmath170 , @xmath171 , @xmath172 where @xmath173 .",
    "let @xmath174 where @xmath175 for each @xmath176 .",
    "consider @xmath177 .",
    "then @xmath178 .",
    "hence , @xmath179 , which is a contradiction .",
    "now consider case c2 ( semi - ordered trees with flexible uneven angles ) . in this case , the ordering of children of the root , @xmath180 , is fixed , and only the assignment of @xmath181 needs to be specified .",
    "our solutions for re2 , ra2 and de2 are based on dynamic programming approaches .",
    "those results are given as follows :    [ thm - re2]the re2 problem can be solved in @xmath10 time .",
    "w.l.o.g . ,",
    "assume @xmath182 .",
    "recall from equation  ( [ e - subwedge - uneven ] ) that if @xmath183 is the assignment of sub - wedges , then the sequence of sub - wedges encountered in a counterclockwise direction is @xmath184 @xmath185 .",
    "we define @xmath186 as follows : @xmath187 that is , the solution maximizes the minimum sum of adjacent sub - wedge pairs for the first @xmath30 children , given @xmath188 and @xmath189 as the outer sub - wedges of first child and @xmath30-th child , respectively . notice that @xmath190 is not included in calculating @xmath186 , meaning that the first child is not considered to be adjacent to the @xmath30-th child .",
    "we can observe that @xmath191 can be formulated as the following dynamic programming formula : @xmath192 finally , we have : @xmath193 it is easy to see that the above algorithm gives the correct answer and runs in linear time .",
    "[ thm - ra2]the ra2 problem can be solved in @xmath11 time .    since only flipping subwedges is allowed in this case , @xmath194 and @xmath195 can be the neighbors of @xmath196 and @xmath197 for each @xmath198 , resulting in four possible angles , i.e. , @xmath199 , @xmath200 , @xmath201 , @xmath202 .",
    "that is , @xmath203 and @xmath204 can be neighbored with @xmath205 and @xmath206 ; @xmath205 and @xmath206 can be neighbored with @xmath207 and @xmath208 ; @xmath171 ; @xmath209 and @xmath210 can be neighbored with @xmath203 and @xmath204 .",
    "hence , there are @xmath211 possible angles in total for a given sequence of sub - wedges .",
    "we assume the angle @xmath212 formed by each pair @xmath213 of sub - wedges to be the ` largest ' angle in a drawing . then by using the dynamic programming approach of theorem  [ thm - re2 ] in @xmath10 time , we can obtain the smallest angle @xmath214 in the drawing , and",
    "hence the aspect ratio for this drawing is @xmath215 .",
    "then @xmath216 can be obtained after considering all the @xmath211 possible angles , so the time complexity is @xmath217 .",
    "note that the use of dynamic programming allows us to reduce the running time of re2 and ra2 from @xmath218 in @xcite to @xmath10 and @xmath11 , respectively .",
    "[ thm - de2]the de2 problem can be solved in @xmath10 time .",
    "similar to the proof in theorem  [ thm - re2 ] , we define @xmath219 which can be formulated as the following dynamic programming formula : @xmath220 then , we have @xmath221 finally , by equation  ( [ e - stddev2 ] ) , the solution of the de2 problem can be obtained as follows : @xmath222 note that the first and third terms inside the square root of the above equation are constants .",
    "in this section , we consider cases c3 and c4 ( unordered trees with fixed / flexible _ uneven _ sub - wedges ) . for notational convenience ,",
    "we order all the sub - wedges @xmath223 in equation  ( [ e - subwedge - uneven ] ) in ascending order as @xmath224 where @xmath116 ( resp . , @xmath117 )",
    "is the @xmath30-th minimum ( resp . , maximum ) among all .",
    "that is , @xmath225 for @xmath226 in equation  ( [ e - subwedge - uneven ] ) may be one of the forms @xmath227 , @xmath228 , @xmath229 , or @xmath230 for some @xmath231 . for convenience ,",
    "each @xmath116 ( resp . , @xmath117 ) is said a type-@xmath17 ( resp .",
    ", type-@xmath232 ) sub - wedge .    for cases c3 and c4 , we consider a bipartite graph @xmath233 and a function @xmath234 in which    * for case c3 , @xmath235 , @xmath236 ; for case c4 , @xmath237 , @xmath238 ; * the cost of each edge @xmath239 is @xmath240 for re , ra and de problems ; @xmath241 for sop problem ; the cost of a matching @xmath242 for @xmath243 is @xmath244 .",
    "note that , for convenience , each node in @xmath245 is also denoted by its @xmath246 function value .    in case",
    "c3 ( unordered tree with fixed uneven sub - wedges ) , for each @xmath247 , sub - wedge @xmath248 in @xmath249 must be adjacent to ( matched with ) sub - wedge @xmath250 for some @xmath251 in @xmath252 in any solution of our concerned problems , and hence the optimal solution must be a perfect matching @xmath242 for @xmath253 .    in case",
    "c4 ( unordered tree with flexible uneven sub - wedges ) , we have the following observation .",
    "[ obs : mmsolution ] for the re4 , ra4 , de4 or sop4 problem , there must exist an optimal solution in which each type-@xmath17 sub - wedge is adjacent to ( matched with ) a certain type-@xmath232 sub - wedge .",
    "the above observation must hold ; otherwise , there must exist @xmath115 pairs of adjacent type-@xmath17 sub - wedges and @xmath115 pairs of adjacent type-@xmath232 sub - wedges for some @xmath254 in the optimal drawing @xmath255 .",
    "but one can easily verify that any of our concerned aesthetic criteria of drawing @xmath255 must be no better than the drawing where each of the @xmath256 type-@xmath17 sub - wedges is altered to be adjacent to a certain of the @xmath256 type-@xmath232 sub - wedges in drawing @xmath255 ( i.e. , a drawing in observation  [ obs : mmsolution ] ) .",
    "such an optimal solution in observation  [ obs : mmsolution ] must be a perfect matching @xmath242 for @xmath257 .    if @xmath258 denotes the set of the edges corresponding to each pair @xmath259 for @xmath260 ( note that @xmath261 @xmath243 in case c3 ; @xmath261 @xmath262 in case c4 ) , then @xmath263 forms a hamiltonian cycle for @xmath245 .",
    "two examples for the same problem instance but under different cases are shown in figure  [ fgbipartite ] , where the edges in @xmath242 ( resp . , @xmath258 )",
    "are represented by dash ( resp . , solid ) lines . as a result , the re ( resp .",
    ", ra ; de ) problem is equivalent to finding a matching @xmath264 for @xmath265 such that @xmath266 is a hamiltonian cycle of @xmath245 and the smallest edge cost in @xmath264 is maximal ( resp .",
    ", the ratio of the largest and the smallest edge costs in @xmath264 is minimal ; the standard deviation of the edge costs in @xmath264 is minimal ) .    before showing our results , we introduce some notation as follows .",
    "we place all the nodes in @xmath249 ( resp . ,",
    "@xmath252 ) on the line @xmath267 ( resp . ,",
    "@xmath268 ) of the @xmath269-plane . given any matching @xmath242 with two edges @xmath270 and @xmath271 in @xmath243 , an _ exchange _ on @xmath272 and @xmath273",
    "returns a matching @xmath274 such that @xmath275 .",
    "denote by @xmath276 the edge incident to node @xmath3 in @xmath242 .",
    "[ thm - re3][thm - re4]the re3 and re4 problems can be solved in @xmath111 time .",
    "( sketch ) first consider the re3 problem .",
    "a careful examination reveals that the re3 problem and the 2sal problem are rather similar in nature .",
    "hence , algorithm  [ alg : re3-re4 ] ( a slight modification of the algorithm for the 2sal ) @xcite is sufficient to solve the re3 problem in @xmath111 time .",
    "construct a bipartite graph @xmath277 for re3 ( resp .",
    ", @xmath278 for re4 ) + sort the sizes of the sub - wedges in @xmath249 in nonincreasing order as @xmath279 + sort the sizes of the sub - wedges in @xmath252 in nondecreasing order as @xmath280 + consider a matching @xmath242 in which @xmath281 is matched with @xmath282 for each @xmath283 . stop order @xmath284 , in nonincreasing order + @xmath285 + @xmath286 + @xmath287    the reader is referred to @xcite for more details on the proof of the correctness of the algorithm . a brief explanation for the correctness is given as follows . from @xcite",
    ", we have the following proposition and property :    * proposition 1 .",
    "* _ a matching @xmath242 determines a solution for re3 if @xmath263 is a unique cycle . _    * property 1 . *",
    "_ let @xmath288 be the optimal solution for re3 .",
    "then @xmath289 , where @xmath290 ; @xmath291 ; @xmath292 ; @xmath293 .",
    "_    see algorithm  [ alg : re3-re4 ] .",
    "if @xmath263 is a unique cycle at the end of line  7 , then proposition 1 and property 1 implies optimality ; otherwise , lines  815 are executed . at each iteration of the loop in lines  1015 ,",
    "no matter whether @xmath287 is executed or not , the cases discussed in @xcite can be tailored to show that the cost of each matched edge in @xmath242 is no less than @xmath294 .",
    "hence , the solution produced by algorithm  [ alg : re3-re4 ] must be no less than @xmath288 .",
    "the time complexity of the algorithm is explained briefly as follows .",
    "it is easy to see that lines  18 can be executed in @xmath111 time . at the end of line  7 ,",
    "the nodes of each various cycle are stored in a linked list in @xmath10 time .",
    "let @xmath295 be a stack storing the labels @xmath281 top to bottom , in nonincreasing order of @xmath296 .",
    "stack @xmath295 is used to detect which two cycles we merge next .",
    "this is done by checking if the endpoints of the edge @xmath297 , corresponding to top element @xmath282 of stack @xmath295 , belong to different cycles .",
    "if they do , the two cycles are merged next ; otherwise , the element at the top of the stack is discarded .",
    "therefore , it takes @xmath10 time to detect which cycles to merge .",
    "the exchanging operation in line  13 is done in @xmath298 time . but also , merging two cycles is equivalent to merging two linked lists , which is done in @xmath298 time as well . as a result ,",
    "the time complexity of algorithm  [ alg : re3-re4 ] is @xmath111 .    in what follows",
    ", we consider the re4 problem . by observation",
    "[ obs : mmsolution ] , we find an optimal solution for the re4 problem where each type-@xmath17 sub - wedge is adjacent to a certain type-@xmath232 sub - wedge , i.e. , a perfect matching @xmath242 for @xmath299 . by viewing @xmath127 ( resp .",
    ", @xmath128 ) as @xmath281 ( resp . , @xmath282 ) for each @xmath300 , the re4 problem is similar to the re3 problem . as a result ,",
    "algorithm  [ alg : re3-re4 ] can also be applied to solving the re4 problem in @xmath111 time .",
    "we now turn our attention to the ra3 and ra4 problems .",
    "we consider a decision version of the ra3 ( resp .",
    ", ra4 ) problem :    the ra3 ( resp . ,",
    "ra4 ) decision problem .",
    "+ given a balloon drawing of an unordered tree with fixed ( resp .",
    ", flexible ) uneven sub - wedges , does there exist a circular permutation @xmath61 of @xmath75 ( resp .",
    ", a circular permutation @xmath61 of @xmath75 and a sub - wedge assignment @xmath60 ) so that the size of each angle is between @xmath301 and @xmath302 ? if the answer returns yes , then @xmath303 .    taking advantage of the analogy between ra3 ( ra4 ) and 2slw , we are able to show :    [ thm - ra3][thm - ra4]both the ra3 and ra4 problems are np - complete .",
    "( sketch ) ra3 and 2slw bear a certain degree of similarity .",
    "recall that given a set of @xmath22 jobs and a range @xmath108 $ ] , the 2slw problem decides wether a circular permutation exists such that the workforce requirement ( i.e. , the sum of the workforce requirements for two jobs respectively executed at two stations at the same time ) for each time period is between @xmath109 and @xmath110 .",
    "given a balloon drawing of an unordered tree with fixed uneven sub - wedges , the ra3 decision problem decides whether a circular permutation so that the size of each angle ( i.e. , the sum of two adjacent subwedges respectively from two various children ) is between @xmath301 and @xmath302 .",
    "it is obvious that the decision version of the ra3 problem can be captured by the 2slw problem ( and vice versa ) in a straightforward way , hence np - completeness follows .    as for the ra4 problem ,",
    "since the upper bound ( i.e. , in np ) for the ra4 problem is easy to show , we show the ra4 problem to be np - hard by the reduction from the 2slw problem as follows .",
    "the idea of our proof is to design an ra4 instance so that one can not obtain any better solution by flipping sub - wedges . to this end , from a 2slw instance  a set @xmath304 of jobs and two numbers @xmath305 where @xmath84 for each @xmath300 , we construct a ra4 instance  a set of sub - wedges @xmath306 and two numbers @xmath301 and @xmath302 in which we let @xmath307 and @xmath308 ; @xmath309 and @xmath310 for each @xmath300 ; @xmath311 and @xmath312 .",
    "now we show that there exists a circular permutation @xmath313 of @xmath89 so that the workforce requirement for each time period is between @xmath109 and @xmath110 if and only if there exist a circular permutation @xmath61 of @xmath75 and a sub - wedge assignment @xmath60 so that the size of each angle in the ra4 instance is between @xmath301 and @xmath302 .",
    "we are given a 2slw instance with a circular permutation @xmath314 of @xmath89 so that the workforce requirement for each time period is between @xmath109 and @xmath110 .",
    "it turns out that @xmath315 for each @xmath300 .",
    "it implies that @xmath316 for each @xmath300 .",
    "consider @xmath317 and @xmath318 in the ra4 instance constructed above . since @xmath319 and @xmath320 for each @xmath300 in the construction , thus @xmath321 .",
    "that is , @xmath322 for each @xmath300 .",
    "conversely , we are given a ra4 instance with a circular permutation @xmath61 of @xmath75 and a sub - wedge assignment @xmath60 so that the size of each angle in the ra4 instance is between @xmath301 and @xmath302 .",
    "for any @xmath323 , since @xmath324 , hence @xmath325 . in the ra4 instance",
    ", the size of each angle can be @xmath326 , @xmath327 , or @xmath328 for some @xmath329 . for convenience , the angle with size @xmath326 ( resp .",
    ", @xmath327 ; @xmath328 ) for some @xmath330 is called a type-00 ( resp . ,",
    "01 ; 11 ) angle ( note that the order of @xmath30 and @xmath331 is not crucial here ) .",
    "if there exists a type-00 angle in the ra4 instance , then there must exist at least one type-11 angle in this instance ; otherwise , all the angles are type-01 angles .    in the case",
    "when there exists a type-00 angle with size @xmath326 so that there exists a type-11 angle with size @xmath332 for some @xmath333 , then w.l.o.g . , the sub - wedge sequence of the instance is expressed as a circular permutation @xmath334 where @xmath335 ",
    "@xmath336 are sub - wedge subsequences ; the number of sub - wedges in each of @xmath335 and @xmath336 ( resp . , @xmath337 )",
    "is odd ( resp . , even ) .",
    "let @xmath338 be the reverse of @xmath337 .",
    "consider a new circular permutation @xmath339 , in which the size of each angle is between @xmath301 and @xmath302 , because the size of each angle in @xmath340 and @xmath338 is originally between @xmath301 and @xmath302 ; @xmath341 ( since @xmath342 and @xmath343 ) ; similarly , @xmath344 .",
    "if there still exists a type-00 angle in the new circular permutation , then we repeat the above procedure until we obtain a circular permutation @xmath137 where all the angles are type-01 angles . by doing this , the size of each angle in @xmath137 is between @xmath301 and @xmath302 , and the sub - wedge assignment @xmath60 in the drawing achieved by @xmath137 is @xmath345 or @xmath346 . in the case of @xmath347 ,",
    "we let @xmath348 , then @xmath60 becomes @xmath349 .",
    "consider the 2slw instance ( constructed above ) corresponding to the circular permutation @xmath137 . in the 2slw instance , for each @xmath350 , workforce requirement @xmath351 .",
    "hence , @xmath352 , which implies @xmath353 .    we can utilize a technique similar to the reduction from _ hamiltonian - circle problem on cubic graphs _",
    "( hc - cg ) to 2slw ( @xcite ) to establish np - hardness for de3 and de4 .",
    "hence , we have the following theorem , whose proof is given in appendix because it is too cumbersome and our main result for the de3 and de4 problems is to design their approximation algorithms .",
    "[ thm - de3][thm - de4]both the de3 and de4 problems are np - complete .",
    "we have shown ra3 and ra4 to be np - complete .",
    "the results on approximation algorithms for those problems are given as follows .",
    "[ thm - ra3-approx][thm - ra4-approx]algorithm  @xmath354 is a @xmath355-approximation algorithm for ra3 and ra4 .",
    "let @xmath356 ( resp .",
    ", @xmath357 and @xmath358 ) be the minimal angle ( resp .",
    ", the maximal angle and the aspect ratio ) among the circular permutation generated by algorithm  [ alg : re3-re4 ] . denote @xmath359 ( resp . ,",
    "@xmath360 and @xmath361 ) as the maximum of the minimal angle ( resp . , the minimum of the maximal angle and the optimal aspect ratio ) among any circular permutation . since @xmath362 where @xmath0 is the sub - wedge adjacent to @xmath144 in the circular permutation with the minimum of the maximal angle",
    ", we have @xmath363 . by theorem  [ thm - re3 ] , we have @xmath364 . therefore , @xmath365 .    next , we design approximation algorithms for the np - complete de problems . here",
    "we only consider the approximation algorithms for the sop4 and de4 problems because the approximation algorithms for the sop3 and de3 problems are similar and simpler .",
    "recall that the sop4 problem is equivalent to finding a matching @xmath264 for bipartite graph @xmath243 , such that @xmath366 is the minimal , where @xmath367 .",
    "consider a matching @xmath368 for bipartite graph @xmath243 in which @xmath128 is matched with @xmath127 for each @xmath30 , i.e. , @xmath369 assume that @xmath370 consists of @xmath371 subcycles for @xmath372 , in which we recall that @xmath258 denotes the set of the edges corresponding to each pair @xmath373 for @xmath374 . according to matching @xmath368 , we have that each subcycle in @xmath370 contains at least one matched edge between @xmath128 and @xmath127 for some @xmath30 .",
    "let the _ exchange graph _",
    "@xmath375 for bipartite graph @xmath243 be a complete graph in which    * each node in @xmath376 corresponds to a subcycle of @xmath370 , i.e. , @xmath377 ; * each edge @xmath378 in @xmath379 corresponding to two subcycles @xmath380 and @xmath381 in @xmath370 has cost @xmath382 @xmath383 , @xmath384 .",
    "( in fact , the cost represents the least cost of exchanging edges @xmath385 and @xmath386 in @xmath387 . )    when @xmath388 for some @xmath389 , we denote @xmath390 and @xmath391 .",
    "let @xmath392 be a minimum spanning tree over @xmath393 . with exchange graph @xmath393 and its minimum spanning tree @xmath394 as the input of algorithm  [ alg : sop4 ]",
    ", we can show that algorithm  [ alg : sop4 ] is a 2-approximation algorithm for the sop4 problem .",
    "construct the exchange graph @xmath375 for @xmath395 find the minimum spanning tree @xmath396 of exchange graph @xmath393 where @xmath377 let @xmath397 for each edge @xmath398 ( noticing that if @xmath388 for some @xmath389 , then @xmath390 and @xmath391 ) , where each @xmath399 is said to correspond to @xmath160 ( i.e. , there are @xmath400 ) let @xmath401 find a set @xmath402 that includes element @xmath0 but is not considered before append the elements in set @xmath402 to the end of set @xmath403 ( i.e. , the duplicate elements are not deleted ) let both edges @xmath399 and @xmath404 correspond to @xmath403 , where edges @xmath399 and @xmath404 in @xmath394 correspond to @xmath403 and @xmath402 , respectively @xmath405 for each set in @xmath124 , remove the duplicate elements in each set order the elements in each set @xmath160 , and then denote the new set as @xmath406 where @xmath407 ( resp . , @xmath408 ) is the @xmath30-th minimum ( resp . , maximum ) in @xmath160 ; the cardinality of @xmath409 is @xmath410 + @xmath411 is matched with @xmath412 for @xmath413 @xmath414 is matched with @xmath415 output such a matching @xmath416 for @xmath243    figure  [ fgalgsop4 ] gives an example to illustrate how the algorithm works .",
    "figure  [ fgalgsop4](a ) is @xmath370 where the solid lines ( resp .",
    ", dash lines ) are the edges in @xmath258 ( resp . , in @xmath368 ) .",
    "figure  [ fgalgsop4](b ) is its exchange graph @xmath393 , and we assume that figure  [ fgalgsop4](c ) is the minimum spanning tree @xmath394 for @xmath393 where each edge @xmath399 in @xmath394 has weight @xmath417 .",
    "we illustrate each @xmath160 after each modification in line  11 of algorithm  [ alg : sop4 ] as follows :    * initial : @xmath418 , @xmath419 , @xmath420 , @xmath421 , @xmath422 . * the elements in @xmath423",
    "is appended to the end of @xmath335 : + @xmath424 , @xmath419 , @xmath425 @xmath426 , @xmath422 . * the elements in @xmath427",
    "is appended to the end of @xmath335 : + @xmath428 @xmath420 .",
    "based on the above , algorithm  [ alg : sop4 ] returns @xmath416 , and @xmath429 is shown in figure  [ fgalgsop4](d ) .",
    "in fact , algorithm  [ alg : sop4 ] provides a 2-aproximation algorithm for sop4 .",
    "a slight modification also yields a 2-approximation algorithm for sop3 .    before showing our result , we need the following notation and lemma . a _ permutation _ @xmath33 is a 1-to-1 mapping of @xmath75 onto itself , which can be expressed as : @xmath430 or in compact form in terms of _ factors_. ( note that it is different from the circular permutation used previously . ) if @xmath431 for @xmath432 , and @xmath433 , then @xmath434 is called a _ factor _ of the permutation @xmath33 . a factor with @xmath435",
    "is called a nontrivial factor .",
    "note that a matching @xmath242 for the bipartite graph @xmath387 constructed above can be viewed as a permutation @xmath436 .",
    "[ lemma - perm ] for @xmath437 , let @xmath438 ( resp .",
    ", @xmath439 ) where @xmath440 ( resp . ,",
    "@xmath441 ) is the @xmath30-th maximum ( resp . , minimum ) among all .",
    "let @xmath442 be a @xmath443-to-@xmath443 mapping , i.e. , a permutation of @xmath444 . if @xmath445 is a permutation consisting of only a nontrivial factor with size @xmath22 , then @xmath446 where @xmath447 for any @xmath448 .",
    "moreover , if @xmath449 for each @xmath450 and @xmath451 , then @xmath452 note that the difference between equation  @xmath453 and inequality  @xmath454 is that inequality  @xmath454 can be applied only when the factor size @xmath22 is known .",
    "we proceed by induction on the size of @xmath445 . if @xmath455 , @xmath456 holds .",
    "suppose that the required two inequalities hold when @xmath457 . when @xmath458 , @xmath459 where @xmath460 is a size-@xmath115 permutation consisting of a nontrivial factor with size @xmath115",
    ". then , @xmath461    for proving equation  ( [ e - lemma - perm-1 ] ) , we replace the first term in equation  ( [ e - lemma - perm-3 ] ) by the inductive hypothesis of equation  ( [ e - lemma - perm-1 ] ) , and then obtain : @xmath462 since @xmath463 and @xmath464 .    for proving equation  ( [ e - lemma - perm-2 ] ) ,",
    "we replace the first term in equation  ( [ e - lemma - perm-3 ] ) by the inductive hypothesis of equation  ( [ e - lemma - perm-2 ] ) , and then obtain : @xmath465 since @xmath466 by the premise of equation  ( [ e - lemma - perm-2 ] ) ( note that the permutation consists of a nontrivial factor of size @xmath22 , and hence the case @xmath467 does not occur except for @xmath455 ) .",
    "now , we are ready to show our result :    [ thm - de4-approx1]there exist @xmath355-approximation algorithms for sop3 and sop4 , which run in @xmath11 time .",
    "recall that given an unordered tree with fixed ( resp . , flexible )",
    "subwedges , the sop3 ( resp . ,",
    "sop4 ) problem is to find a circular permutation @xmath61 of @xmath468 ( resp .",
    ", a circular permutation @xmath61 of @xmath468 and a sub - wedge assignment @xmath60 ) so that the sum of products of adjacent subwedge sizes ( @xmath72 ) is as small as possible .",
    "we only consider sop4 ; the proof of sop3 is similar and simpler . in what follows ,",
    "we show that algorithm  [ alg : sop4 ] correctly produces the 2-approximation solution for sop4 in @xmath8 time . from @xcite , we have @xmath469 , which is explained briefly as follows . from @xcite , we have that @xmath368 can be transformed from @xmath264 by a sequence of exchanges @xmath470 which can be constructed as follows .",
    "let @xmath471 denote the matching transformed by the sequence of exchanges @xmath472 for @xmath473 .",
    "we say a node @xmath3 in @xmath249 is _ satisfied _ in @xmath471 if its adjacent node in @xmath471 is the same as its adjacent node in @xmath368 . for @xmath474 , if the sub - wedge @xmath128 is satisfied , then @xmath440 is a null exchange .",
    "otherwise , if the node adjacent to @xmath128 in @xmath475 is adjacent to the sub - wedge @xmath476 in @xmath264 for @xmath477 ( i.e. , @xmath128 is not adjacent to @xmath127 in @xmath475 ) , then let @xmath440 be the exchange between the edges respectively incident to @xmath128 and @xmath476 in @xmath475 . here , by observing each non - null exchange @xmath440 , @xmath478 .",
    "hence , @xmath479 .",
    "let @xmath480 we claim that @xmath481 . since @xmath266 is a hamiltonian cycle transformed from @xmath370 consisting of @xmath371 subcycles , there exist at least @xmath482 times of merging subcycles during the transformation ( the sequence of exchanges ) .",
    "we can view @xmath264 as a permutation with several factors .",
    "there must exist a set @xmath483 of @xmath484 edges in @xmath379 forming a spanning tree for exchange graph @xmath393 such that each edge in @xmath483 must correspond to an edge in @xmath264 which can not be in a trivial factor of permutation @xmath264 , i.e. , it can not be @xmath485 for some @xmath30 .",
    "therefore , by inequality  ( [ e - lemma - perm-1 ] ) of lemma  [ lemma - perm ] , @xmath486 since @xmath487 is the edge set of minimum spanning tree of @xmath393 .",
    "in what follows , we show the approximation ratio to be 2 .",
    "note that @xmath416 denotes the matching generated by algorithm  [ alg : sop4 ] .",
    "let @xmath488 and @xmath489 in algorithm  [ alg : sop4 ] .",
    "@xmath490 the last inequality above holds since @xmath485 for any @xmath491 never presents in the first summation term more than twice ; otherwise we can find another spanning tree with cost strictly less than that of @xmath394 .",
    "for example , we consider figure  [ fgalgsop4](c ) .",
    "suppose that the cost of edge @xmath492 in @xmath394 is @xmath493 , rather than @xmath494 , i.e. , @xmath495 is used three times by @xmath272 , @xmath492 , and @xmath496 ( with costs @xmath497 , @xmath493 , and @xmath498 , respectively ) .",
    "we can obtain a contradiction by considering a spanning tree @xmath2 replacing edge @xmath496 by edge @xmath499 with cost @xmath500 , which is less than @xmath498 in general .",
    "( the cost of @xmath2 is less than that of @xmath394 . )",
    "recall that @xmath501 and @xmath502 .",
    "hence , combining the first and third terms of the above inequality , we obtain : @xmath503 the above inequality holds due to @xmath504 for any @xmath505 .",
    "since @xmath506 in every @xmath409 , we obtain : @xmath507    in what follows , we explain how the algorithm runs in @xmath11 time .    in line 1",
    ", the exchange graph can be constructed in @xmath11 time as follows .",
    "it takes @xmath11 time to construct a complete graph @xmath393 with @xmath508 nodes in which the nodes corresponds @xmath371 subcycles in @xmath263 , and the cost of each edge is assumed to be infinity .",
    "then , it takes @xmath509 time to compute all possible @xmath510 for any @xmath511 .",
    "consider each @xmath512 .",
    "if @xmath513 and @xmath514 belong to two different subcycles in @xmath263 , say @xmath380 and @xmath381 , respectively , and @xmath515 for their corresponding edge @xmath378 in graph @xmath393 , then @xmath516 . obviously , after considering all possible @xmath512 in @xmath11 time , graph @xmath393 is the required exchange graph .    in line 2 ,",
    "it is well - known that the minimum spanning tree for graph @xmath393 can be found in @xmath8 time .",
    "line  3 runs in @xmath10 time since each element is denoted only once .",
    "line  4 is done in @xmath10 time .",
    "we explain how lines  513 can be done in @xmath10 time as follows",
    ". note that in line  3 , in addition that each set includes four elements , we record that each element knows which set includes it .",
    "hence , in line  7 , any set @xmath402 including element @xmath0 can be found in @xmath298 time .",
    "line  8 is done in @xmath298 time , since each set is a linked list .",
    "note that in line  7 all the sets that includes element @xmath0 will be considered at the end of line  12 , because in line  8 a duplicate element of @xmath0 is appended to @xmath403 and will be considered again in later iteration .",
    "lines  9 and 10 are done in @xmath298 time .",
    "therefore , lines  710 are done in @xmath298 time .",
    "we observe from lines 5 , 6 , 8 , 10 that each element in @xmath335 , ",
    ", @xmath517 is considered once at the end of line  12 . since the number of elements in @xmath518 is @xmath519 ,",
    "there are @xmath519 iterations , each of which is done in @xmath298 time .",
    "hence , lines  512 are done in @xmath520 time . in line  13 , by scanning each set in @xmath124 , all duplicate elements are deleted in @xmath10 time .",
    "line 14 can be done in @xmath10 time , because the ordering of @xmath521 @xmath522 is known .",
    "lines  1518 are done in @xmath10 time , because each element is matched only once .",
    "note that algorithm  [ alg : sop4 ] is a 2-approximation algorithm for the sop4 problem rather than the de4 problem because the approximation ratio is incorrect when the minus of the first and third items inside the square root of equation  ( [ e - stddev2 ] ) is negative .",
    "therefore , we rewrite equation  ( [ e - stddev2 ] ) as : @xmath523 note that the combination of first and fourth items inside the square root of the above equation is the variance of @xmath524 , and hence must be positive .",
    "therefore , the de4 problem is equivalent to minimizing the sum of the second and third items , i.e. , to minimize @xmath525 algorithm  [ alg : de4 ] provides an @xmath7-approximation algorithm for de4 .",
    "a slight modification also yields an @xmath7-approximation algorithm for de3 .",
    "figure  [ fgalgde4](a ) is an example for algorithm  [ alg : de4 ] .",
    "the algorithm is almost the same as algorithm  [ alg : sop4 ] except lines  1518 in algorithm  [ alg : sop4 ] is replaced as follows : + 13 : * for each * @xmath409 with @xmath526 ( otherwise trivially ) * do * + 14 :  let @xmath527 and @xmath528 + 15 :  an element is said to be _ available _ if it is not matched yet + 16 :  * for each * @xmath529 * do * + 17 :  * if * @xmath530 * do * + 18 :  the available maximum is matched with the available second minimum + 19 :  * else * + 20 :  the available minimum is matched with the available second maximum + 21 :  * end if * + 22 :  * end for * +    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _   23 :  @xmath531 is matched with @xmath532 ; @xmath533 is matched with @xmath534 , where @xmath531 and @xmath534 are the remaining elements excluded in the above condition for some @xmathend for *    [ thm - de3-approx2 ] [ thm - de4-approx2]there exist @xmath7-approximation algorithms for de3 and de4 , which run in @xmath11 time",
    ".    recall that given an unordered tree with fixed ( resp . , flexible )",
    "subwedges , the de3 ( de4 ) problem is to find a circular permutation @xmath61 of @xmath468 ( resp .",
    ", a circular permutation @xmath61 of @xmath468 and a sub - wedge assignment @xmath60 ) so that the standard deviation of angles ( @xmath70 ) is as small as possible .",
    "we only concern de4 ; the proof of de3 is similar and simpler .    in what follows ,",
    "we show that algorithm  [ alg : de4 ] correctly produces @xmath7-approximation solution in @xmath111 time .",
    "let @xmath264 be the matching for @xmath395 witnessing the optimal solution of the de4 problem , and @xmath416 be the matching generated by algorithm  [ alg : de4 ] . from theorem  [ thm - de4-approx1 ] , @xmath481 , and hence @xmath536 since @xmath504 for every edge @xmath537 .",
    "observing the matching @xmath538 for each @xmath409 generated by algorithm  [ alg : de4 ] ( e.g. , see also figure  [ fgalgde4](a ) ) , without lose of generality , we assume that @xmath539 and @xmath540 is odd such that in @xmath409 , @xmath541    inequality ( [ e - jrelation ] ) is explained as follows .",
    "since line  17 in algorithm  [ alg : de4 ] considers the relationship between @xmath542 and @xmath543 for @xmath529 , thus , without loss of generality , we use @xmath544 numbers ( i.e. , @xmath545 ) to classify all @xmath542 data .",
    "then the data is alternately expressed as inequality ( [ e - jrelation ] ) , in which @xmath546 , @xmath547 ,  are local minimal ; @xmath548 , @xmath549 , @xmath550 ,  are local maximal .",
    "then , @xmath551 therefore , @xmath552 consider figure  [ fgalgde4](b ) for an example .",
    "the above multiplication relationship of those @xmath553 and @xmath554 for figure  [ fgalgde4](a ) is given in figure  [ fgalgde4](b ) .",
    "figure  [ fgalgde4pattern ] shows how to transform from figure  [ fgalgde4](a ) to figure  [ fgalgde4](b ) .    by inequality  ( [ e - jrelation ] ) , since @xmath555 for @xmath556 or @xmath557 or @xmath171 or @xmath558 or @xmath559 or @xmath171 or @xmath560 , we obtain : @xmath561 considering figure  [ fgalgde4](b ) for an example , @xmath562 .    by inequalities  ( [ e - de4 - 1 ] ) and ( [ e - de4 - 2 ] ) , we have @xmath563    in what follows",
    ", we explain how the algorithm runs in @xmath11 time .",
    "it suffices to explain lines  1324. lines  14 and 15 are just notations for the proof of correctness , not being executed . in line 17",
    ", @xmath542 and @xmath543 can be calculated in @xmath298 time .",
    "hence , lines  1324 in algorithm  [ alg : de4 ] runs in @xmath10 time , because the concerned availability ( available maximum , minimum , second maximum , second minimum ) is recorded and updated at each iteration in @xmath298 time ( noticing that @xmath252 and @xmath249 have been sorted , so has @xmath409 ) ; each element is recorded as the concerned availability at most @xmath298 and matched only once .",
    "this paper has investigated the tractability of the problems for optimizing the angular resolution , the aspect ratio , as well as the standard deviation of angles for balloon drawings of ordered or unordered rooted trees with even sub - wedges or uneven sub - wedges .",
    "it turns out that some of those problems are np - complete while the others can be solved in polynomial time .",
    "we also give some approximation algorithms for those intractable problems .",
    "a line of future work is to investigate the problems of optimizing other aesthetic criteria of balloon drawings .    10 url # 1`#1`urlprefix    g.  d. battista , p.  eades , r.  tammassia , i.  g. tollis , graph drawing : algorithms for the visualization of graphs , prentice hall , 1999 .",
    "j.  carri@xmath564re , r.  kazman , research report : interacting with huge hierarchies : beyond cone trees , in : iv 95 , ieee cs press , 1995 .",
    "p.  eades , drawing free trees , bulletin of institute for combinatorics and its applications ( 1992 ) 1036 .    c.  jeong , a.  pang , reconfigurable disc trees for visualizing large hierarchical information space , in : infovis 98 , ieee cs press , 1998 .",
    "kao , m.  sanghi , an approximation algorithm for a bottleneck traveling salesman problem , journal of discrete algorithms 7  ( 3 ) ( 2009 ) 315326 .",
    "k.  kaufmann , d.  wagner ( eds . ) , drawing graphs : methods and models , vol .",
    "2025 of lncs , springer , 2001 .",
    "h.  koike , h.  yoshihara , fractal approaches for visualizing huge hierarchies , in : vl 93 , ieee cs press , 1993 .",
    "lee , g.  l. vairaktarakis , workforce planning in mixed model assembly systems , operations research 45  ( 4 ) ( 1997 ) 553567 .",
    "lin , h .- c .",
    "yen , on balloon drawings of rooted trees , journal of graph algorithms and applications 11  ( 2 ) ( 2007 ) 431452 .",
    "g.  melanon , i.  herman , circular drawing of rooted trees , reports of the centre for mathematics and computer sciences , report number ins-9817 .",
    "e.  reingold , j.  tilford , tidier drawing of trees , ieee trans .",
    "software eng .",
    "se-7  ( 2 ) ( 1981 ) 223228 .",
    "y.  shiloach , arrangements of planar graphs on the planar lattice , ph.d .",
    "thesis , weizmann institute of science ( 1976 ) .",
    "g.  l. vairaktarakis , on gilmore - gomory s open question for the bottleneck tsp , operations research letters 31  ( 6 ) ( 2003 ) 483391 .",
    "@xmath565 * on proof of theorem [ thm - de4 ] * + recall that the de problem is concerned with minimizing the standard deviation , which involves keeping all the angles as close to each other as possible .",
    "such an observation allows us to take advantage of what is known for the 2slw problem ( which also involves finding a circular permutation to bound a measure within given lower and upper bounds ) to solve our problems .",
    "it turns out that , like 2slw , de3 and and de4 are np - complete .",
    "even though de3 , de4 and 2slw bear a certain degree of similarity , a direct reduction from 2slw to de3 or de4 does not seem obvious .",
    "instead , we are able to tailor the technique used for proving np - hardness of 2slw to showing de3 and de4 to be np - hard . to this end , we first briefly explain the intuitive idea behind the np - hardness proof of 2slw shown in @xcite to set the stage for our lower bound proofs .",
    "the technique utilized in @xcite for the np - hardness proof of 2slw relies on reducing from the _ hamiltonian - circle problem on cubic graphs _",
    "( hc - cg ) ( a known np - complete problem ) .",
    "the reduction is as follows . for a given cubic graph @xmath566 with @xmath22 nodes ,",
    "we construct a complete bipartite graph @xmath567 consisting of @xmath22 _ blocks _ in the following way .",
    "( for convenience , @xmath249 ( resp . , @xmath252 ) is called the upper ( resp .",
    ", lower ) side . ) for each node @xmath568 adjacent to @xmath569 , @xmath570 , @xmath571 in cubic graph @xmath566 , a _ block",
    "_ @xmath572 of 14 nodes ( 7 on each side ) is associated to @xmath568 , where the upper side ( resp .",
    ", lower side ) contains three @xmath3-nodes ( resp .",
    ", @xmath573 nodes ) corresponding to @xmath569 , @xmath570 , @xmath571 , and each side has a pair of @xmath574-nodes , as well as a pair of @xmath575-nodes ( as shown in figure  [ fig : fg2slw ] ) .",
    "for the three blocks @xmath576 , @xmath577 , and @xmath578 associated with nodes @xmath569 , @xmath570 , and @xmath571 , respectively , each has a @xmath3-node corresponding to @xmath568 ( because @xmath568 is adjacent to @xmath569 , @xmath570 , and @xmath571 ) .",
    "these three @xmath3-nodes are labelled as @xmath579 , @xmath580 , and @xmath581 . in the construction ,",
    "nodes in @xmath249 and @xmath252 correspond to those tasks to be performed in stations @xmath582 and @xmath583 , respectively , in 2slw .",
    "as shown in figure  [ fig : fg2slw ] , the nodes on the upper and lower sides in @xmath572 from the left to the right are associated with the following values @xmath584respectively , where @xmath585 and @xmath586 is any integer @xmath587 ; @xmath588 and @xmath589 . each edge in @xmath567",
    "has weight equal to the sum of the values of its end points .",
    "the instance of 2slw consists of @xmath590 jobs , in which @xmath591 jobs associated with pairs of @xmath575-nodes are @xmath592 , @xmath593 , @xmath594 jobs associated with @xmath3-nodes are @xmath595 , @xmath596 , @xmath597 , and @xmath591 jobs associated with pairs of @xmath574-nodes are @xmath598 , @xmath599 .",
    "note that @xmath600 is a perfect matching for @xmath567 , and such a matching is called a _",
    "city matching_.    the crux of the remaining construction is based on the idea of relating a permutation of the @xmath590 jobs @xmath601 } , j_{[2 ] } , ... , j_{[7n]})$ ] in the constructed 2slw instance to a perfect matching in @xmath567 in such a way that @xmath6022 } , w_{[(i \\ mod \\",
    "7n)+1]1})$ ] , @xmath603 , are matches .",
    "note that @xmath6042 } , w_{[i+1]1}$ ] are the two tasks performed by stations @xmath582 and @xmath583 , respectively , simultaneously at a certain time .",
    "one can easily observe that , because of bounds @xmath109 and @xmath110 , any matching @xmath242 as a solution for 2slw can not involve a edge connecting two different blocks , and the only edges which can be included in @xmath242 in each block are the dash lines in figure  [ fig : fg2slw ] .",
    "such a perfect matching @xmath242 is called a _ transition",
    "matching_. if @xmath263 forms a hamiltonian cycle for @xmath567 , then it is called _ complementary hamiltonian cycle _ ( chc ) .",
    "we use notation @xmath605 ( resp . , @xmath606 $ ] ) to indicate an edge of a city matching ( resp . , transition matching ) . consider a special transition matching @xmath607 : i = 1 , ... , n , j = 1 , ... , 7\\}$ ] .",
    "@xmath370 consists of a master @xmath574-subcycle @xmath608 ( \\lambda_1',\\lambda_{2 } ) ... [ \\lambda_{i},\\lambda_i ' ] ( \\lambda_i',\\lambda_{i\\oplus 1 } ) ... [ \\lambda_{n},\\lambda_n ' ] ( \\lambda_n',\\lambda_1)$ ] , @xmath22 @xmath3-subcycles @xmath609 for @xmath610 ( e.g. , @xmath611(u_{11},v_{12})[v_{12},u_{12}](u_{12},v_{13})[v_{13},u_{13}](u_{13},v_{11})$ ] ) , and @xmath591 @xmath575-subcycles @xmath612(b_i , b_i')$ ] for @xmath610 .",
    "hence , a chc for @xmath567 is formed by combining the @xmath613 subcycles . from @xcite , in order to yield a chc for @xmath567 , there are exactly three possible transaction matchings for @xmath572 as shown in figure  [ fig : fg4matching ] .",
    "the design is such that edge @xmath614 ( resp . ,",
    "@xmath615 and @xmath616 ) is in a hc of g if figure  [ fig : fg4matching](i ) ( resp .",
    ", ( ii ) and ( iii ) ) is the chosen permutation for the constructed 2slw instance . following a somewhat complicated argument , @xcite proved that there exists a hamiltonian cycle ( hc ) for the cubic graph @xmath566 if and only if there exists a chc for @xmath567 , and such a chc for @xmath567 in turn suggest a sufficient and necessary condition for a solution for 2slw .    .",
    "( sketch ) now we are ready to show the theorem .",
    "we only consider the de4 problem ; the de3 problem is similar and in fact simpler . recall that the de4 problem is equivalent to finding a balloon drawing optimizing @xmath112 .",
    "consider the following decision problem :    @xmath617 : :    given a star graph with flexible uneven angles specified by    equation  ( [ e - subwedge - uneven ] ) and an integer @xmath110 ,    determine whether a drawing ( i.e. , specified by the permutation    @xmath618 and the assignments ( 0 or 1 ) for @xmath619    ( @xmath620 ) ) exists so that    @xmath621 .",
    "it is obvious that the problem is in np ; it remains to show np - hardness , which is established by a reduction from hc - cg . in spite of",
    "the similarity between our reduction and the reduction from hc - cg to 2slw ( @xcite ) explained earlier , the correctness proof of our reduction is a lot more complicated than the latter , as we shall explain in detail shortly .    in the new setting ,",
    "equations  ( [ e-2slw - valuea ] ) and ( [ e-2slw - valueb ] ) become : @xmath622for @xmath247 where @xmath623 , @xmath437 , and @xmath624 where @xmath128 ( resp . , @xmath127 )",
    "is the @xmath30-th maximum ( resp . , minimum ) among the @xmath625 values .",
    "( note that such a setting satisfies the premise of inequality  ( [ e - lemma - perm-2 ] ) in lemma  [ lemma - perm ] , and hence can utilize the inequality . )",
    "hence , we have that : @xmath626 note that the above implies that the @xmath331-th upper ( resp .",
    ", lower ) node in @xmath572 is @xmath627 ( resp .",
    ", @xmath628 ) for @xmath629 and @xmath630 .",
    "define @xmath631 and @xmath632 in @xmath572 . hence ,",
    "@xmath633 which are often utilized throughout the remaining proof .",
    "if @xmath634 is a set of transition edges , the sum of the transition edge weights is denoted by @xmath635 . if @xmath636 is a chc for @xmath567 where @xmath258 ( resp . , @xmath242 )",
    "is the city matching ( resp . , transition matching ) of the chc and @xmath637 for @xmath610 ( i.e.",
    ", flipping sub - wedges is not allowed ) , then @xmath638 where @xmath639 is the weight of the transition edge @xmath640 .",
    "now based on the above setting , we show that there exists a hc for the cubic graph @xmath566 if and only if there exists a chc @xmath641 for the instance @xmath567 of the de4 problem such that @xmath642 .",
    "suppose that @xmath566 has a hamiltonian cycle @xmath643 .",
    "let @xmath644},v_{[2 ] } , ... , v_{[n]}$ ] .",
    "the construction of a solution for @xmath645 is the same as @xcite , as explained in the following . initiating with @xmath646}$ ] , there exists a pair ( @xmath647 } , v_{[2]}$ ] ) of nodes in @xmath243 corresponding to @xmath648 } \\in g$ ] because @xmath649}$ ] is connected with @xmath648}$ ] . from @xcite , we have that @xmath650",
    "is merged with @xmath651 , @xmath652 , and @xmath653 respectively in figure  [ fig : fg4matching ] ( i ) , ( ii ) , and ( iii ) .",
    "hence , considering the order of @xmath654},b_{[2]}, ...",
    ",b_{[n]}$ ] , in iteration @xmath30 , by choosing the appropriate transition matching , say @xmath655}$ ] , of @xmath572 from the three possible matchings in figure  [ fig : fg4matching ] , @xmath655}$ ] merges @xmath656}$ ] with the master subcycle @xmath657 .",
    "besides , since the two @xmath575-subcycles in each @xmath572 also are merged with @xmath650 in any matching of figure  [ fig : fg4matching ] , we can obtain a complementary cycle traversing all nodes in @xmath645 .",
    "we need to check @xmath642 .",
    "in fact , we show that @xmath658 as follows . it suffices to show that @xmath659 for any @xmath260 where @xmath475 is the transition matching for @xmath572 . denote @xmath660 .",
    "we can prove that @xmath661 for every matching in figure  [ fig : fg4matching ] .",
    "case  ( i ) is shown as follows , and the others are similar : @xmath662 from the above computation , one should notice that if @xmath476 is matched with a sub - wedge larger than @xmath663 and @xmath664 is matched with a sub - wedge less than @xmath665 for @xmath666 , then @xmath667 includes @xmath668 .",
    "the converse , i.e. , showing the existence of a chc @xmath669 for the instance @xmath567 of de4 with @xmath642 implies the presence of a hc in @xmath566 , is rather complicated .",
    "the key relies on the following three claims .    1 .",
    "( _ bipartite _ ) there are no transition edges in @xmath242 between any pairs of upper ( resp . , lower ) nodes in @xmath643 .",
    "( _ block _ ) there are no transition edges in @xmath242 between two blocks in @xmath643 .",
    "( _ matching _ ) there is only one of @xmath652 , @xmath653 , and @xmath651 merged with the master subcycle @xmath650 in each @xmath572 .",
    "( recall that each node @xmath568 is adjacent to @xmath569 , @xmath570 , @xmath571 in @xmath566 , and hence the statement implies the presence of a hc in @xmath566 . )      claim 1 : :    ( see @xcite ) given two transition matchings @xmath242 and    @xmath274 between @xmath249 and @xmath252 , there    exists a sequence of exchanges which transforms @xmath242 to    @xmath274 .",
    "claim 2 : :    if @xmath242 is a transition matching between @xmath249    and @xmath252 and involves two edges @xmath272 and    @xmath273 crossing each other , then @xmath670    for @xmath671 .",
    "( claim 2 can be proved by easily checking @xmath672 . )",
    "it is very important to notice that claim 2 can be adapted even when @xmath673 may not be a chc .",
    "the transition matching where @xmath476 is matched with @xmath663 for every @xmath331 ( every transition edge is visually vertical ) is denoted by @xmath368 , i.e. , @xmath674 .",
    "note that if each edge in @xmath242 is between @xmath249 and @xmath252 , we can obtain @xmath675 by repeatedly using claim 2 in the order from the leftmost node to the rightmost node of @xmath249 , similar to the technique in the proof of claim 1 @xcite .    . supposing that there exits @xmath676 transition edges between pairs of upper nodes in @xmath643 , then there must exist @xmath677 transition edges between pairs of lower nodes in @xmath643 , by pigeonhole principle .",
    "select one of the upper ( resp .",
    ", lower ) transition edges , say @xmath678 , ( resp . , say @xmath679 ) .",
    "consider @xmath680 .",
    "then @xmath681 . hence , @xmath682 .",
    "by the same technique , we can find @xmath683 where each edge in @xmath683 is between @xmath252 and @xmath249 such that @xmath684 , which is impossible . .",
    "by statement ( s-1 ) , each edge in the transition matching of @xmath643 is between @xmath249 and @xmath252 .",
    "suppose there exists at least one transition edge between two blocks .",
    "assume there are @xmath685 blocks , @xmath686 , with transition edges across two blocks .",
    "let @xmath687 .",
    "consider @xmath688 is the transition edge between @xmath689 and @xmath690 for @xmath691 , and @xmath692 .",
    "then there must exist a transition edge connecting to one of the lower nodes of @xmath689 , say @xmath693 , by pigeonhole principle , and we say the edge @xmath694 where @xmath693 and @xmath514 are respectively from @xmath689 and @xmath695 for @xmath696 and @xmath697 .",
    "note that @xmath273 must cross @xmath272 because @xmath513 and @xmath693 are in @xmath689 , i.e. , @xmath698 and @xmath699 . besides , we have @xmath700 and @xmath701 because two end points of edge belong to different blocks . consider @xmath702 .",
    "then @xmath703 for @xmath437 .",
    "that is , @xmath704 , which is a contradiction . .",
    "recall that @xmath705 in every @xmath572 involves subcycles @xmath652 , @xmath650 , @xmath706 , @xmath653 , @xmath707 , @xmath651 , @xmath650 from the leftmost to the rightmost .",
    "if there exists a chc @xmath636 for the instance @xmath567 , each @xmath575-subcycle in @xmath572 has to be merged with some subcycle in the same @xmath572 by statements ( s-1 ) and ( s-2 ) .",
    "@xmath667 is at least 5 due to the merging of @xmath575-subcycles from the following four cases ( here it suffice to discuss the merging of @xmath575-subcycles with their adjacent subcycles because @xmath667 in others cases are larger ) :    1 .   @xmath706 merged with @xmath650 and @xmath707 merged with @xmath653 : @xmath708 2 .   @xmath706 merged with @xmath650 and @xmath707 merged with @xmath651 : @xmath709 3 .   @xmath706 merged with @xmath653 and @xmath707 merged with @xmath653 : @xmath710 4 .   @xmath706 merged with @xmath653 and @xmath707 merged with @xmath651 : @xmath711    recall that there are @xmath712 subcycles in @xmath713 . hence we require at least @xmath594 times of merging subcycles to ensure these subcycles to be merged as a chc . since we have discussed that two @xmath575-subcycles have to be merged in each @xmath572 ( i.e. , the total times of merging @xmath575-subcycles are @xmath591 ) , we require at least @xmath22 more times of merging subcycles to obtain a chc .",
    "in fact , the @xmath22 times of merging subcycles is because each @xmath572 contributes once of merging subcycles . as a result , statement ( s-3 )",
    "is proved if we can show that after merging two @xmath575-subcycles in each @xmath572 , the third merging subcycles in @xmath572 is to merge one of @xmath714 , @xmath715 , and @xmath716 with @xmath717 .      * if @xmath719 , then @xmath720 . *",
    "if @xmath721 and the transition matching of @xmath572 is one of the matchings in figure  [ fig : fg4matching ] , then @xmath722 . * if @xmath721 and the transition matching of @xmath572 is not any of the matchings in figure  [ fig : fg4matching ] , then @xmath723 . * if @xmath724 , then @xmath725 . * if @xmath726 , then @xmath727 . *",
    "if @xmath728 , then @xmath729 .",
    "if the above statements on @xmath718 hold , then statement ( s-3 ) hold .",
    "the reason is as follows .",
    "remind that we need @xmath594 times of merging subcycles to be a chc .",
    "therefore , if there exists a transition matching of @xmath572 with @xmath730 for some @xmath30 ( i.e. , there are exactly two times of merging subcycles in @xmath572 ) , then there must exists a @xmath576 for some @xmath331 with @xmath731 .",
    "then @xmath732 , which is impossible because this results in the total @xmath733 larger than @xmath590 .    .",
    "note that the transition matching of every @xmath572 can be viewed as a permutation of @xmath734 ( a mapping from @xmath249 to @xmath252 ) , and hence different ordering or different times of merging subcycles lead to a permutation with different factors , e.g , the permutation for figure  [ fig : fg4matching](i ) is @xmath735 .",
    "if we let @xmath736 be a nontrivial factor of the permutation for @xmath475 , then @xmath737 by equation  ( [ e - lemma - perm-1 ] ) in lemma  [ lemma - perm ] . here",
    "we concern the value @xmath738 induced by @xmath739 ( which is denoted by @xmath740 ) because it can be viewed as a lower bound of @xmath667 .",
    "if a factor @xmath739 includes @xmath476 but excludes @xmath664 , then we say that @xmath739 has a _ lack _ at @xmath664 . we observe that if the permutation @xmath741 for @xmath572 has a lack , then we can find a permutation @xmath742 for @xmath572 consisting of the factors without any lacks such that @xmath743 in which the number of factors of @xmath742 is the same as that of @xmath741 and the size of each factor is also the same .",
    "the reason is as follows .",
    "assume that @xmath741 has a factor @xmath744 with a lack at @xmath664 ( i.e. , @xmath745 ) and the minimum number appearing in the factor is @xmath746 .",
    "let @xmath742 be almost the same as @xmath741 except the factor @xmath739 in @xmath741 is modified as a factor without any lacks involving @xmath664 but excluding @xmath746 in @xmath742 . then by equation  ( [ e - lemma - perm-1 ] ) in lemma  [ lemma - perm ] , @xmath747 . in the similar way , we can find a permutation with factors without any lacks .    in light of the above",
    ", it suffices to consider the permutation for @xmath572 consisting of the factors without any lacks when discussing the lower bound of @xmath748 .",
    "thus , in the following , when we say that the permutation for @xmath572 has a factor @xmath739 , this implies that @xmath739 has no lacks , so lemma  [ lemma - perm ] can be applied to @xmath739 .",
    "now we are ready to prove the statements on @xmath718 .",
    "the statement of @xmath730 holds because @xmath748 is increased by at least 5 when two @xmath575-subcycles have to be merged in each @xmath572 . as for the statement of @xmath749 , note that merging six subcycles implies a permutation with a factor of size seven .",
    "thus , by equation  ( [ e - lemma - perm-1 ] ) in lemma  [ lemma - perm ] , @xmath750 , as required .",
    "let @xmath751 for the convenience of the following discussion . as for the statement of @xmath752 , the permutation involves two nontrivial factors after five times of merging subcycles .",
    "note that one of the two factors has size at least four , and hence the factor @xmath753 contributes @xmath754 by equation  ( [ e - lemma - perm-2 ] ) in lemma  [ lemma - perm ] .",
    "therefore , by equation  ( [ e - lemma - perm-1 ] ) in lemma  [ lemma - perm ] , @xmath755 for some @xmath756 .",
    "( note that @xmath757 suggests that @xmath758 and @xmath759 are in different factors . ) since @xmath760 , hence @xmath761 , as required .",
    "as for the statement of @xmath762 , by equation  ( [ e - lemma - perm-1 ] ) , @xmath763 for some @xmath764 and @xmath149 .",
    "discuss all possible cases of pair @xmath213 as follows .",
    "consider one of @xmath765 is 2 or 3 .",
    "we assume that @xmath766 , and the other case is similar .",
    "hence , @xmath767 .",
    "since @xmath768 and there exists a factor with size at least three in this case , @xmath769 by equation  ( [ e - lemma - perm-2 ] ) , as required .",
    "the remaining cases are @xmath770 , and @xmath771 .",
    "consider one of @xmath765 is 1 or 6 .",
    "we assume that @xmath772 , and the other case is similar .",
    "hence @xmath773 . since @xmath774 and there exists a factor with size at least four or two factors with size at least three in this case , @xmath775 by equation  ( [ e - lemma - perm-2 ] ) , as required .",
    "last , consider @xmath776 , namely , @xmath777 and @xmath778 ( resp",
    ". , @xmath778 and @xmath779 ) are in different factors .",
    "hence , @xmath778 can not be matched with @xmath780 nor @xmath781 , i.e. , subcycle @xmath707 can not be merged with adjacent subcycles @xmath653 , @xmath651 . since merging @xmath707 with @xmath706",
    "induces the smallest cost @xmath782 in this case , and the other two times of merging subcycles must induce cost more than 2 , hence @xmath667 is at least 9 .    as for the two statements of @xmath783 , by equation  ( [ e - de4proof - if ] ) , @xmath667 in the case when @xmath475 is one of the matchings in figure  [ fig : fg4matching ] is exactly seven , as required .",
    "then we consider the case when @xmath475 is not in figure  [ fig : fg4matching ] in the following . by equation  ( [ e - lemma - perm-1 ] ) , @xmath784 for some @xmath785 and @xmath786 since it is necessary to merge @xmath575-subcycles , which contributes at least 5 .",
    "it suffices to consider the cases when @xmath787 , which may violate our required .",
    "that is , @xmath788 may be 1 , 2 , 3 or 6 . by considering four possible cases of merging @xmath575-subcycles , one may easily check that whatever @xmath788 is , @xmath667 must be either larger than 7 or in figure  [ fig : fg4matching ] ."
  ],
  "abstract_text": [
    "<S> in a _ balloon drawing _ of a tree , all the children under the same parent are placed on the circumference of the circle centered at their parent , and the radius of the circle centered at each node along any path from the root reflects the number of descendants associated with the node . among various styles of tree drawings reported in the literature </S>",
    "<S> , the balloon drawing enjoys a desirable feature of displaying tree structures in a rather balanced fashion . for each internal node in a balloon drawing , the ray from the node to each of its children divides the wedge accommodating the subtree rooted at the child into two sub - wedges . depending on whether the two sub - wedge angles are required to be identical or not , a balloon drawing can further be divided into two types : _ even sub - wedge _ and _ uneven sub - wedge _ types . in the most general case , </S>",
    "<S> for any internal node in the tree there are two dimensions of freedom that affect the quality of a balloon drawing : ( 1 ) altering the order in which the children of the node appear in the drawing , and ( 2 ) for the subtree rooted at each child of the node , flipping the two sub - wedges of the subtree . in this paper </S>",
    "<S> , we give a comprehensive complexity analysis for optimizing balloon drawings of rooted trees with respect to _ angular resolution _ </S>",
    "<S> , _ aspect ratio _ and _ standard deviation of angles _ under various drawing cases depending on whether the tree is of even or uneven sub - wedge type and whether ( 1 ) and ( 2 ) above are allowed . </S>",
    "<S> it turns out that some are np - complete while others can be solved in polynomial time . </S>",
    "<S> we also derive approximation algorithms for those that are intractable in general .    </S>",
    "<S> tree drawing , graph drawing , graph algorithms </S>"
  ]
}
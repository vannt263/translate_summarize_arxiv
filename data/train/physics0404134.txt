{
  "article_text": [
    "in a previous paper  @xcite , we expose the physical character of information , making it clear that every information must be represented by a physical system .",
    "however , another question that may arise is how to interfere on the information being represented ?",
    "this subject will be studied in this article , under the viewpoints of both classical and quantum computation .",
    "sections [ sec : classical ] and [ sec : quantum ] give an introduction to two different models of computation .",
    "the former is the traditional circuit model , compatible with the idea of turing machines , but more adequate to the purposes of this paper .",
    "the latter is the corresponding concept that uses properties of quantum mechanics , instead of classical mechanics .",
    "as soon as we learn how to perform simple operations with a certain physical system , it is very important to learn how to keep these operations reliable . in section  [ sec : ec ] , we briefly introduce classical and quantum error detection and correction .    here",
    ", we assume that the reader already has a certain backgroung on quantum information . if necessary",
    ", we recommend the reading of  @xcite or  @xcite before starting reading section  [ sec : quantum ] .",
    "the turing machine is an important concept , developed by the british mathematician alan turing  @xcite .",
    "any calculation using a classical physical system , can be carried out by a turing machine , according to the church - turing thesis  @xcite :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ `` any process that is effective or algorithmic in nature defines a mathematical function belonging to a specific well - defined class , known variously as the recursive , the @xmath0-definable , or the turing computable functions . ''",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    here , we use a different , yet equivalent formalism , which is the circuit of gates and wires .",
    "the proof for the equivalence between turing machines and circuits can be achieved through the notion of _ uniform circuit family_. the reader may found this proof in many books on computer science or quantum computation , including  @xcite .",
    "we shall begin our study of the classical circuits by introducing the notion of boolean functions .",
    "a function @xmath1 is called a boolean function , due to the english mathematician george boole .",
    "interesting information on this subject can be found in  @xcite , specially in the section on combinational logics .",
    "another good reference is the book by andrew tanenbaum  @xcite .",
    "we can define a boolean function @xmath2 which is equal to @xmath3 if @xmath4 and is equal to @xmath5 if @xmath6 .",
    "this function corresponds to the logical operation * not*. we can write the result of @xmath2 as @xmath7 or @xmath8 .    another interesting function should be @xmath9 , which is equal to @xmath5 if @xmath10 , and @xmath3 otherwise .",
    "this is the logical gate * and*. similarly , we could define a function @xmath9 , equal to @xmath3 if @xmath11 and @xmath5 otherwise , which corresponds to the logical gate * or*. we can also write an and operation as a product and an or operation as a sum . for instance , @xmath12 , meaning `` @xmath13 and @xmath14 '' , or @xmath15 , meaning `` @xmath13 or @xmath14 '' .",
    "these functions can be represented by a table , called the truth table .",
    "see tables [ tab : not ] , [ tab : and ] and [ tab : or ] , for the functions not , and and or , respectively .",
    "we can build any circuit with these three logical operations .",
    ".logical operation not .",
    "[ cols=\"^,^\",options=\"header \" , ]     at this point we should finally introduce the circuit of gates and wires . in this model each gate has a graphical representation .",
    "wires carry 0 s and 1 s , through space or time .",
    "see fig.[fig : gates ] , for the functions not , or and and",
    ".        the output of a gate can be the input of another gate .",
    "so , let @xmath2 be a boolean function corresponding to the not logical operation , and let @xmath16 be a boolean function corresponding to the and logical gate . we can define a function @xmath17 .",
    "this function is very important in computer science , and is called nand .",
    "graphically , it can be represented by putting a small circle in the outcome of the and gate , meaning that this result is negated ( see fig .",
    "[ fig : nand - univ ] ) .",
    "any classical logical circuit can be designed using only the nand logical gate , and the fanout .",
    "another interesting logical gate is the nor , defined as @xmath18 , that is , an or logical gate with its outcome inverted . as well as the nand gate ,",
    "this gate can also be used to build any logical circuit .",
    "we can not expect to create quantum circuits in a straightfoward way by simply using the same techniques of classical circuits .",
    "firstly , because in classical circuits the universal gate is nand , which is irreversible , while in quantum circuits all gates must be reversible .",
    "not even fanout is possible in quantum mechanics , because of the non - cloning theorem  @xcite .",
    "similarly to classical computation , there must be a mathematical representation for the operations performed in the quantum physical system .",
    "computer scientists are used to represent logical operations by boolean functions . however , in quantum computation we will use a slightly different formalism , which will be more suitable .",
    "the reader must be familiar with linear algebra , because that is what we will use from now on .",
    "a quantum state is represented by a vector in a hilbert space ( a complex vector space with inner product ) .",
    "hence , if we consider an orthonormal basis composed by the states @xmath19 and @xmath20 , the quantum state can be any of the form @xmath21 , where @xmath22 and @xmath23 are complex numbers called amplitudes . since this state must be a unit vector , we know that @xmath24 .",
    "we can represent our computational basis by the state vectors    @xmath25 \\mbox { and }      for example .",
    "this representarion may help the understanding of the calculations carried out in this section .",
    "operations on a quantum state must preserve its norm , so they are described by unitary matrices . in order to represent a logical operation on a qubit",
    ", one should find a unitary matrix that gives the desired result when applied to the qubit .",
    "@xmath26    to illustrate that , let us observe the equivalent of the not classical logic gate . we must find a unitary operator u , such that    @xmath27    and , since u is a linear operator ,    @xmath28    the operator    @xmath29,\\ ] ]    one of the three pauli matrices , corresponds to the unitary matrix that we are looking for .",
    "note that if we apply the operator @xmath30 twice , we keep the original value of the qubit .",
    "@xmath31                            \\left [                                       \\begin{array}{cc }                                            0 & 1\\\\                                            1 & 0                                     \\end{array }                            \\right]=                            \\left [                                       \\begin{array}{cc }                                            1 & 0\\\\                                            0 & 1                                     \\end{array }                            \\right]\\ ] ]    which is the identity matrix .",
    "another interesting operator is the hadamard gate :    @xmath32.\\label{eq : hadamard}\\ ] ]    this gate is able to create superpositions in a qubit .",
    "note that @xmath33 and @xmath34 .",
    "another interesting type of operator that we can not forget mentioning is the controlled operator .",
    "when we have at least two qubits ( a quantum register ) , we can define an operator that will interfere in a particular qubit if and only if some requirement is observed .",
    "for instance , let @xmath35 be an operator that applies the not logic operation in the qubit @xmath36 if and only if the qubit @xmath37 is @xmath20 .",
    "@xmath38    in this case , we say that qubit @xmath36 is the `` target qubit '' and qubit @xmath37 is the `` control qubit '' .",
    "this gate is called cnot and , similarly , it may be expressed as a unitary matrix .",
    "@xmath39.\\ ] ]    similarly to classical computation , there are gates in quantum computation that can be used to build any possible circuit .",
    "it can be proven that an arbitrary unitary matrix @xmath40 can be decomposed into a product of two - level unitary matrices , i.e. , matrices that act non - trivially on * no more than * two vector componets .",
    "one could also prove that single qubit gates and cnots can be used to achieve any two - level unitary matrix .",
    "hence , it can be proven that single qubit gates and cnot gates can implement an arbitrary operation and , therefore , they are universal in quantum computation .",
    "the proof for the last paragraph is not straightfoward and would spend a reasonable space in this paper .",
    "if the reader is interested in studying this subject deeper , the main reference is  @xcite .",
    "an important area of computer science concerns the detection and correction of errors . if we intend to build a computer , no matter if a classical or a quantum - mechanical one , we have to deal with its errors , so that the calculations can be trusted .    in a classical digital computer",
    ", we can consider one single kind of error .",
    "suppose we wish to send a bit through a channel . if there is noise in this channel , a bit @xmath3 can be changed to @xmath5 , with probability @xmath41 , and a bit @xmath5 can be changed to @xmath3 , with probability @xmath42 .",
    "so , the bit @xmath3 will keep correct with probability @xmath43 , and the bit 1 with probability @xmath44 .",
    "normally , we consider @xmath45 . in this case , both bits @xmath3 and @xmath5 have the same probability @xmath41 of being affected by the noise , and the same probability @xmath43 of being sent correctly .",
    "this channel is called a _ binary symmetric channel_.    classical schemes for error detection and correction use some kind of redundancy .",
    "a very simplistic example would be repeating the same bit @xmath46 times .",
    "for instance    @xmath47    with @xmath48 .    in this case ,",
    "if we wish to represent the number 5 ( 101 in the binary system ) , we must repeat each logical bit three times :    @xmath49    if some noise inverts a single bit in a triplet , we can easily repair the information . for instance , if the above number is changed to @xmath50 , we know that the triplets @xmath51 and @xmath52 are wrong .",
    "we can recover the information by performing the _ majority vote_. so , the triplet @xmath51 was originally @xmath53 and the triplet @xmath52 was @xmath54",
    ". one could easily prove that the majority vote works properly whenever @xmath55 .    in quantum mechanics ,",
    "errors are not so simple .",
    "firstly , we can not simply copy the quantum bits , because of the non - cloning theorem . moreover , even if we could copy qubits , we would not be able to detect errors by simply measuring them .",
    "these limitations are enough to show us that our techniques must me changed if we wish to handle the quantum - mechanical world .",
    "but , if we wish to go a little further , we must consider that different kinds of errors may occur in this case .",
    "a qubit can suffer a phase flip , when @xmath56 is changed to @xmath57 .",
    "besides , we must remember that a qubit is continuous , so it can suffer a small error .",
    "imagine a bloch sphere where the state is accidentally rotated by a small angle .",
    "this error would not be detected if we consider only bit flips and phase flips .",
    "how can we protect our quantum computers against all these threats ?",
    "peter shor , who created the code to correct arbitrary errors on a single qubit , answered this question  @xcite . nowadays",
    ", this code is known as the _ shor code_. in order to understand it , we will analyze two `` modules '' : the three - qubit bit flip code and the three - qubit phase flip code .",
    "the shor code is a combination of these two `` modules '' .    before the explanation of these modules",
    ", it should be important to have a brief digression on the third postulate of quantum mechanics , which concerns to measurements .",
    "a measurement is characterized by an observable , @xmath58 , such that @xmath59 .",
    "so , the spectral decomposition of @xmath58 is :    @xmath60    according to this postulate , the possible outcomes that may occur in an experiment are the eigenvalues of @xmath58 , i.e. , @xmath61 .",
    "if the state before the measurement is @xmath62 , then the probability that a result @xmath61 occurs is    @xmath63    and the state after the measurement is    @xmath64    now , we shall return to the study of the shor code .      at first , we must encode our qubits , as follows :    @xmath65 is encoded as @xmath66 .",
    "if we wish to check if some error occurred , we use a measurement called _",
    "syndrome diagnosis_. its result is called the _ error syndrome_. we use four projection operators , each one corresponding to a bit flip in a specific qubit .    @xmath67    note that , when we measure an state @xmath68 using the operator @xmath69 , ( @xmath70 ) , we obtain @xmath5 if the @xmath71-th qubit is corrupted , and @xmath3 otherwise .",
    "similarly , if we use the operator @xmath72 , we obtain @xmath5 if the three qubits are correct , and @xmath3 otherwise . after the measurement ,",
    "the qubit is not modified !",
    "this is possible because the syndrome diagnosis does not give us any information about the qubit _ per si _",
    "( i.e. , the values of @xmath22 and @xmath23 ) .",
    "the three - qubit bit flip code protects our qubit against the simplest kind of error .",
    "however , as we mentioned before , quantum bits are subject to much more errors than simple flips .",
    "the second type of noise that we will analyze is the phase flip .",
    "this error may change a qubit @xmath73 into @xmath74 .",
    "the idea behind the three - qubit phase code is very similar to that used in the three - qubit bit flip code . instead of encoding the qubit according to equations  [ eq : enc1 ] and  [ eq : enc2 ] , we must use    @xmath75 and @xmath76",
    "the only difference is that , in this code , we use the basis @xmath77 to encode the qubit , instead of the basis@xmath78 .",
    "remember that we can use the hadamard operator ( eq .",
    "[ eq : hadamard ] ) to change between one basis and the other .    to perform the syndrome measurement",
    ", we only need to use the correct operators for the new basis",
    ".    @xmath79    if the reader is interested in demonstrations for the subject exposed so far in this section , we recommend the references  @xcite and  @xcite .",
    "the shor code is a _ concatenation _ of the two codes explained before . in the first step ,",
    "we encode the qubit using the phase flip code ( eq .  [ eq : enc3 ] and eq .",
    "[ eq : enc4 ] ) .",
    "consequently , we will have three qubits from this point on . in the second step ,",
    "we encode each of the three resulting qubits using the bit flip code ( eq .  [ eq : enc1 ] and eq .",
    "[ eq : enc2 ] ) . finally , we have nine qubits representing the initial qubit .",
    "@xmath80 conclusions -----------",
    "this paper is an introduction to one of the most important topics in computer science .",
    "whenever we wish to perform a computation , we must know how to store a certain initial value , and then manipulate it until we achieve a result , when we can finally measure the system and obtain an answer .",
    "we began by showing how we can perform simple operations in physical system , with classical and quantum logic gates .",
    "then , we showed how to keep it reliable , with error detection and correction codes .",
    "naturally , this is a vast area of knowledge , which could not be completely described in one single article .",
    "however , our goal here is to introduce this subject in a simple but effective way , helping to students and researchers from different areas of knowledge .",
    "the references mentioned throughout this paper can be used to improve the comprehension of the subject .",
    "the authors thank prof . j.a .",
    "helayl - neto ( cbpf ) and dr . j.l .",
    "acebal ( puc - minas ) for reading the manuscripts , and for providing helpful discussions .",
    "we thank the group of quantum computation at lncc , in particular drs .",
    "r.  portugal and f.  haas , for the courses and stimulating discussions .",
    "we also thank the brazilian institution cnpq and the pibic program , for the financial support .",
    "barenco , a. , bennett , c.h . , cleve , r. , divicenzo , d.p . ,",
    "margolus , n. , shor , p. , sleator , t. , smolin , j. and weinfurter , h. , `` elementary gates for quantum computation '' , phys.rev.a , 52:3457 - 3467 .",
    "( 1995 ) . also available in www.arxiv.org/quant-ph/9503016"
  ],
  "abstract_text": [
    "<S> this article is a short review on the concept of information . </S>",
    "<S> we show the strong relation between information theory and physics , and the differences between classical and quantum information , with emphasis in their manipulation through logical gates.this paper is intended to be read by non - specialists and undergraduate students of computer science , mathematics and physics , with knowledge in linear algebra and quantum mechanics . </S>",
    "<S> + * keywords : * logical gates , quantum computation , computer science . </S>"
  ]
}
{
  "article_text": [
    "[ [ the - problem . ] ] the problem .",
    "+ + + + + + + + + + + +    let @xmath3 be a collection of @xmath0 non - vertical lines in @xmath4 in _ general position_. in particular , we assume that no two lines in @xmath3 intersect , that the @xmath5-projections of no pair of the lines are parallel , and those of no three of the lines are concurrent . for any pair @xmath6 of lines in @xmath3 , we say that @xmath7  passes _ above _ @xmath8 ( equivalently , @xmath8 passes _ below _",
    "@xmath7 ) if the unique vertical line that meets both @xmath7 and @xmath8 intersects @xmath7 at a point that lies higher than its intersection with  @xmath8 .",
    "we denote this relation as @xmath9 .",
    "the relation @xmath10 is total ( under our assumptions ) , but in general it need not be transitive , so it may contain _ cycles _ of the form @xmath11 , for some @xmath12 .",
    "we call this a _ @xmath13-cycle _ , and refer to @xmath13 as the _ length _ of the cycle . cycles of length three are called _",
    "triangular_. see figure  [ ccwcyc ] .",
    "if we cut the lines of @xmath3 at a finite number of points , we obtain a collection of lines , segments , and rays .",
    "we can extend the definition of the relation @xmath10 to the new collection in the obvious manner , except that it is now only a partial relation .",
    "our goal is to cut the lines in such a way that @xmath10 becomes a _",
    "partial order _ , in which case we call it a _",
    "depth order_. we note that it is trivial to construct a depth order with @xmath14 cuts : simply cut each line near every point whose @xmath5-projection is a crossing point with another projected line .",
    "it is desirable though to minimize the number of cuts .",
    "a long - standing conjecture , open since  1980 , is that one can always construct a depth order with a _",
    "number of cuts . in this paper",
    "we finally settle this conjecture , in a strong , almost worst - case tight manner ; see below for precise details .",
    "[ [ background . ] ] background .",
    "+ + + + + + + + + + +    the main motivation for studying this problem comes from _ hidden surface removal _ in computer graphics .",
    "a detailed description of this motivation can be found , e.g. , in the earlier paper of aronov et al .",
    "briefly , a conceptually simple technique for rendering a scene in computer graphics is the so - called painter s algorithm , which renders the ( pairwise openly disjoint ) objects in the scene on the screen in a back - to - front manner , painting each new object over the portions of earlier objects that it hides . for this , though , one needs an acyclic depth relation among the objects with respect to the viewing point ( which , as we assume in this paper , without loss of generality , lies at @xmath15 ) .",
    "when there are cycles in the depth relation , one would like to cut the objects into a small number of pieces , so as to eliminate all cycles , and then paint the pieces in the above manner , obtaining a correct rendering of the scene ; see @xcite for more details .",
    "the study of depth cycles in a set of lines ( or , more generally , of segments ) in @xmath4 was in a rather poor state circa 1990 , where only very weak combinatorial and algorithmic bounds were available .",
    "the situation is reviewed in de berg s 1992 dissertation ( * ? ? ?",
    "* chapter 9 ) ( where he summarizes the state of affairs before the results described in his thesis and those of chazelle et al .",
    "@xcite were obtained ; see the discussion below ) . at that time",
    "it was not even known how to compute a depth order among @xmath0 line segments in 3-space in subquadratic time , assuming that such an order exists , or how to verify in subquadratic time that a given order of @xmath0 segments is acyclic .",
    "the study of subquadratic bounds for depth cycles goes back to chazelle et al .",
    "@xcite , who have shown that , if the @xmath5-projections of a collection of @xmath0 segments in 3-space form a `` grid '' ( see figure  [ grid ] for an illustration and the paper for a formal definition ) ,        then all cycles defined by this collection can be eliminated with @xmath16 cuts .",
    "another significant development is due to aronov et al .",
    "@xcite , who have considered the problem of triangular cycles , and established the rather weak ( albeit subquadratic ) @xmath17 upper bound on the number of _ elementary triangular _ cycles ( namely , cycles whose @xmath5-projections as a spatial geometric object ; it is the unique closed polygonal path whose edges alternate between segments along the lines and vertical jumps between consecutive lines that connect the unique pairs of co - vertical points on those lines .",
    "this realization will be defined formally in section  [ sec : cut ] . ]",
    "form triangular faces in the arrangement of the projected lines ) .",
    "they also showed that @xmath18 cuts suffice to eliminate all triangular cycles .",
    "finally , combining this bound with earlier algorithmic techniques of solan @xcite and of har - peled and sharir @xcite , they have obtained an algorithm that eliminates all triangular cycles by making roughly @xmath19 cuts .",
    "however , their results did not apply to general ( non - triangular ) cycles , and , in addition to the very weak bounds just stated , the proof technique was very involved . just as the analysis of chazelle et al .",
    "@xcite , it used , as a major ingredient , the impossibility of certain `` weaving patterns '' of lines in space , an interesting and intriguing topic in itself",
    ". unfortunately , it appears that arguments based on forbidden weaving patterns lead to fairly weak bounds .    in another ,",
    "more recent development , aronov et al .",
    "@xcite have shown that finding the minimum number @xmath20 of cuts needed to eliminate all cycles in a collection of segments in @xmath4 is np - complete .",
    "they have also presented a deterministic polynomial - time approximation algorithm that constructs @xmath21 cuts .",
    "more details are given below .",
    "[ [ our - contribution . ] ] our contribution .",
    "+ + + + + + + + + + + + + + + + +    in this paper we settle the general problem and show that _ all _ cycles in a set of @xmath0 lines can be eliminated with @xmath1 cuts . a simple and well - known construction , reviewed below , yields a scenario where @xmath22 cuts have to be made , implying that ours is the best possible worst - case bound , up to the polylogarithmic factor .",
    "the proof of the new bound is embarrassingly straightforward .",
    "it uses tools from algebraic geometry , in the spirit of much recent work that exploited similar ideas ; see , e.g. , the simple proofs in @xcite for the corresponding worst - case tight bound of @xmath23 on the number of so - called _ joints _ in a collection of @xmath0 lines in 3-space . at the heart of the construction",
    "lies a recent result of guth @xcite , which extends the basic _ polynomial partitioning _ technique of guth and katz @xcite to higher - dimensional objects ( lines or curves in our case ) .    as a matter of fact ,",
    "the algebraic approach to this problem is fairly versatile and can be extended to the elimination of cycles involving more general objects . in this paper",
    "we also discuss such extensions to the cases of line segments ( this is in fact a trivial extension ) and of constant - degree algebraic arcs .",
    "furthermore , in both cases , by combining our technique with standard tools for constructing output - sensitive cuttings in the plane , we obtain improved bounds on the number of cuts necessary to eliminate all cycles , which depend on the number of intersections among the @xmath5-projections of the segments or arcs .",
    "see theorems  [ thm : segments ] and [ thm : arcs ] for further details .",
    "we note that the practical motivation arising from computer graphics involves data sets consisting of pairwise openly - disjoint triangles .",
    "eliminating cycles in the depth relation of a collection of triangles ( with a subquadratic number of cuts ) is a considerably more difficult problem , which so far has barely been touched .",
    "the case of lines , as studied in this paper and in the previous cited works , is a simpler instance of the problem , which already turned out to be a very challenging question .",
    "it is our hope that the technique presented in this paper could be extended to tackle this case too , and we are presently investigating such an extension .",
    "we also note that the problem studied here is different from most of the combinatorial geometry questions tackled so far by the new algebraic approach , in that these former problems involve _ incidences _ between points , lines , and other objects .",
    "in contrast , in this paper the lines are not incident to one another , and the configurations that we want to capture involve certain non - contact spatial ( here , `` above / below '' ) relationships between them .",
    "it is our hope that this study will find applications to additional problems involving relations more general than incidences .",
    "our proof is constructive , and leads , in principle , to an efficient algorithm for performing the cuts .",
    "the only currently missing ingredient is an efficient construction of guth s partitioning polynomial , a step that we leave as a topic for further research .",
    "( the problematic aspects of effectively constructing a partitioning polynomial , already for the simpler case of a set of points , and techniques for overcoming these issues are discussed by agarwal et al .",
    "@xcite ; one hopes that an extension of these techniques could also be used for effectively partitioning lines or curves , and we plan to investigate this question further . )    alternatively , to identify the cuts sufficient to eliminate all cycles , one could also use the earlier algorithms of har - peled and sharir @xcite or of solan @xcite .",
    "our analysis implies that they perform @xmath24 cuts ( using the algorithm of @xcite ; the one in @xcite generates a slightly larger number of cuts ) , in expected time @xmath25 , for any @xmath26 , significantly improving previous bounds , but still falling short of the ideal goal of achieving a running time close to the worst - case optimal number of cuts .",
    "another approach is to use the deterministic approximation algorithm of aronov et al .",
    "* theorem 3.1 ) , mentioned earlier .",
    "it constructs @xmath21 cuts that eliminate all cycles , where @xmath20 is the smallest number of such cuts , in @xmath27 time , where @xmath28 is the exponent of matrix multiplication . in view of our main result ,",
    "this algorithm produces @xmath1 cuts ( where the power in the polylogarithmic factor is slightly larger than that in theorem  [ thm : cuts ] ) .",
    "this is probably the best algorithm one can offer at the present state of affairs .",
    "its only drawback is its rather large running time ( which is @xmath29 ) ; the algorithms of @xcite are much faster , but they produce a larger number of cuts .    [",
    "[ paper - organization . ] ] paper organization",
    ". + + + + + + + + + + + + + + + + + + +    section  [ sec : cut ] presents the main result on the number of cuts sufficient to eliminate all depth cycles among lines in @xmath4 .",
    "section  [ sec : alg ] discusses the algorithmic aspects of efficiently finding such a set of cuts .",
    "finally , section  [ sec : ext ] discusses the extensions of our technique to the cases of line segments and of constant - degree algebraic arcs .",
    "we first introduce a few definitions .",
    "let @xmath3 be a collection of @xmath0 non - vertical lines in @xmath4 in general position . for each @xmath30 , denote by @xmath31 the @xmath5-projection of @xmath7 and by @xmath32 the collection of the @xmath0 resulting projections .",
    "the general position assumption on @xmath3 implies that @xmath32 is also in general position , in the traditional sense , that is , with no two lines parallel and no three concurrent .",
    "consider the planar arrangement @xmath33 of @xmath32",
    ".    recall that @xmath13 distinct lines @xmath34 , for @xmath12 , form a _ @xmath13-cycle _",
    "@xmath35 if @xmath36",
    ". we can interpret @xmath35 as a spatial object as follows .",
    "for each @xmath37 , let @xmath38 and @xmath39 ( with indices treated @xmath40 ) be the two unique points on these lines that are vertically above each other ( informally , @xmath35 `` jumps upwards '' from @xmath41 on @xmath42 to @xmath43 on @xmath44 ) .",
    "we associate with @xmath35 the closed directed polygonal path @xmath45 let @xmath46 denote the segment @xmath47 on @xmath42",
    ". then @xmath48 alternates between the segments @xmath46 and the vertical jumps @xmath49 ; see figure  [ fig : cycle - and - projection ] .",
    "( thick lines ) , with the corresponding path @xmath48 ( in dashed brown ) , and its projection @xmath50 ( solid blue ) . ]",
    "we say that @xmath35 is _ eliminated _ if at least one of the non - vertical edges @xmath47 of @xmath48 is cut .",
    "it is an easy ( yet crucial ) observation that if we cut the lines of @xmath3 at some discrete set of points , so that all cycles in @xmath3 are eliminated , in the above sense , then the collection of lines , rays , and segments resulting from the cuts has an acyclic depth relation .",
    "the @xmath5-projection @xmath50 of @xmath48 ( or , with a slight abuse of notation , of @xmath35 ) is a closed polygonal path contained in @xmath51 .",
    "that is , it is the concatenation of the projections @xmath52 of the segments @xmath46 ( the vertical segments disappear , or rather shrink to points , in the projection )",
    ".    the path @xmath50 can be fairly arbitrary , non - convex , and even self - crossing .",
    "nevertheless , we claim that , for the purposes of eliminating all cycles , it suffices to consider only _ simple cycles _ , of the cycle @xmath35 to be simple , rather than @xmath35 itself . ] that is , cycles @xmath35 for which @xmath50 is non - self - crossing .",
    "this is because any other cycle @xmath35 can be shortcut to a cycle @xmath53 , such that ( a )  @xmath53 has fewer edges than @xmath35 , and ( b )  @xmath54 .",
    "clearly , any cut that eliminates @xmath53 also eliminates @xmath35 .",
    "we repeat this reduction until we obtain a simple cycle ( in the extreme , we reach the case where @xmath53 is triangular , and thus simple ) . indeed ,",
    "if @xmath50 is self - crossing , let @xmath55 be a point where @xmath50 crosses itself , and let @xmath7 , @xmath8 be the lines whose projections cross at @xmath55 ; see figure  [ fig : shortcut ]",
    ". then @xmath50 is naturally split at @xmath55 into two shorter closed paths , and it is easily checked that one of them is the projection of a cycle @xmath53 in @xmath3 that satisfies the properties claimed above .    in what follows",
    "we thus restrict ourselves to simple cycles only .",
    "two ( simple ) cycles @xmath56 , @xmath57 _ overlap _ if @xmath58 and @xmath59 share an edge of @xmath33 ; for example , in figure  [ fig : shortcut ] , cycles @xmath35 and @xmath53 overlap .",
    "( thick lines , with corresponding path @xmath48 in dotted green ) , whose projection @xmath50 ( solid blue ) crosses itself .",
    "we shortcut it to a new triangular cycle @xmath60 , indicating the corresponding path @xmath61 in dash - dotted brown and its projection @xmath62 in dash - dotted purple.,scaledwidth=60.0% ]    the following is the main result of the paper .",
    "[ thm : cuts ] let @xmath3 be a collection of @xmath0 non - vertical lines in @xmath4 in general position .",
    "the lines of @xmath3 can be cut at @xmath1 points so that the depth relation on the resulting pieces ( lines , rays , and segments ) has no cycles .",
    "this bound is almost tight in the worst case , since @xmath22 cuts are sometimes necessary .",
    "theorem  [ thm : cuts ] also provides the same upper bound on the maximum size of any family  @xmath63 of pairwise non - overlapping cycles in @xmath3 , because a distinct cut is required to eliminate each cycle of  @xmath63 .",
    "as argued above , it suffices to cut all simple cycles .",
    "we fix some degree @xmath64 , which depends on @xmath0 and whose value will be set below , and construct a non - zero trivariate polynomial @xmath65 $ ] of degree at most @xmath66 , such that each of the @xmath67 open connected components ( _ cells _ ) of @xmath68 is intersected by at most @xmath69 lines of @xmath3 , where @xmath70 denotes the zero set of @xmath71 , and @xmath72 is an absolute constant . by the aforementioned recent result of guth @xcite , such a polynomial does exist , for some suitable constant @xmath72 .",
    "( as already noted , effective and efficient construction of such a polynomial remains to be worked out , and is the only reason this proof is not entirely polynomial - time constructive . )",
    "let @xmath73 be the cells of @xmath68 , and , for each @xmath74 , let @xmath75 denote the set of lines of @xmath3 that intersect @xmath76 .    in what follows",
    "we want to exclude situations where @xmath70 fully contains a vertical segment ( and therefore , a line ) .",
    "we can guarantee that this does not happen , by applying a sufficiently small generic `` tilting '' to the coordinate frame , ensuring that this property holds , and that every simple cycle in @xmath3 remains a ( simple ) cycle .",
    "define the _ level _ @xmath77 of a point @xmath78 with respect to @xmath70 to be the number of intersection points of @xmath70 with the downward - directed open vertical ray @xmath79 emanating from  @xmath80 .",
    "formally , let @xmath81 be the coordinates of @xmath80 , and consider the univariate polynomial @xmath82 .",
    "the level @xmath77 of @xmath80 is the number of real zeros of @xmath63 in @xmath83 , counted with multiplicity .",
    "denote by @xmath84 the minimum number of cuts needed to eliminate all ( simple ) cycles in the given set @xmath3 of lines , and put @xmath85 , where the maximum is taken over all collections @xmath3 of @xmath0 non - vertical lines in general position in @xmath4 .",
    "[ [ the - procedure - for - cutting - the - lines . ] ] the procedure for cutting the lines .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the procedure is recursive and follows the partitioning induced by @xmath70 .",
    "it consists of the following steps .    *",
    "( i ) * we cut each line @xmath30 not fully contained in @xmath70 at all its intersection points with @xmath70 .",
    "the number of such cuts is at most @xmath66 per line , for a total of @xmath86 cuts .    *",
    "( ii ) * for each line @xmath30 not fully contained in @xmath70 , let @xmath87 be the vertical plane containing  @xmath7 , and let @xmath88 be the bivariate polynomial obtained by restricting @xmath71 to @xmath87 . more formally , parametrize @xmath87 by orthogonal coordinates @xmath89 , where @xmath90 is horizontal , and each @xmath89 represents a point @xmath91 in @xmath87 , where @xmath92 , @xmath93 are appropriate linear functions depending on  @xmath7 .",
    "then @xmath88 is given by @xmath94 ; it is a bivariate polynomial of degree at most @xmath66 . by removing repeated factors",
    ", we may assume that @xmath88 is square - free .",
    "we then cut @xmath7 , in addition to the cuts made in step  ( i ) , at each point that lies directly above a singular point , or a point of vertical tangency , of @xmath95 . a simple application of bzout s theorem implies that the number of such points is @xmath96 , because each such point is a common zero of @xmath88 and @xmath97 .",
    "note that to apply bzout s theorem , we need to ensure that @xmath88 and @xmath97 do not have a common factor , which is indeed the case since @xmath88 is square - free .",
    "hence we perform in this step @xmath96 cuts of each line , for a total of @xmath98 cuts .    *",
    "( iii ) * assume next that @xmath99 ; since @xmath70 contains no vertical lines , @xmath100 .",
    "let @xmath88 be the ( square - free ) bivariate polynomial defined in step ( ii ) .",
    "then @xmath101 is an irreducible component of @xmath102 . by removing the linear factor corresponding to  @xmath7",
    ", we replace @xmath88 by another square - free polynomial @xmath103 , of degree smaller than @xmath66 , whose zero set does not fully contain @xmath7 .",
    "we then cut @xmath7 at each point where it meets @xmath104 ( this is a variant of step ( i ) ) , and at each point that lies directly above a critical point of @xmath103 , as defined earlier ( a variant of step ( ii ) ) .",
    "as before , the number of such cuts of  @xmath7 is @xmath96 , for a total of @xmath98 cuts .    *",
    "( iv ) * we now proceed recursively : for each cell @xmath76 of the partition , we recurse on the corresponding subset @xmath75 of lines .",
    "the bottom of the recursion is at cells @xmath76 for which @xmath105 .",
    "for such cells we apply the nave procedure , noted in the introduction , which cuts the lines of @xmath75 into @xmath106 pieces , so that all cycles in @xmath75 are trivially eliminated .",
    "[ cutok ] the procedure described above eliminates all the cycles in @xmath3 .",
    "the proof is by induction on the size of the input .",
    "the claim holds at the bottom of recursion , because we make all possible cuts there , thereby eliminating all cycles .",
    "consider then any non - terminal instance of the recursion , involving some subset of lines , which , for convenience , we again call @xmath3 .",
    "as argued above , it suffices to show that we have cut all simple cycles .",
    "let @xmath35 be a simple cycle in @xmath3 , formed by some @xmath13 lines @xmath34 , with @xmath107 , and @xmath12 .",
    "let @xmath50 denote the @xmath5-projection of  @xmath35 , which is a simple polygon with @xmath13 sides @xmath108 , so that , for @xmath37 , @xmath109 is the @xmath5-projection of the corresponding segment @xmath110 of the path @xmath48 .",
    "if @xmath70 does not intersect @xmath48 then @xmath48 is fully contained in some cell @xmath76 , and therefore all the lines @xmath34 belong to @xmath75 , since they all intersect  @xmath76 . by induction",
    ", the cycle  @xmath35 will be eliminated by the recursive call to the line - cutting procedure on  @xmath75 .",
    "assume then , in what follows , that @xmath70 intersects @xmath48 .",
    "assume first that @xmath70 does not fully contain any of the lines @xmath34 .",
    "if @xmath70 intersects ( but does not contain ) one of the segments @xmath46 , for @xmath37 , then this intersection point , at which we have cut @xmath7 in step ( i ) , eliminates the cycle  @xmath35 .    assume next that none of the lines @xmath34 is fully contained in @xmath70 , and that none of the segments @xmath111 is crossed by @xmath70 . in this case , the crossing points of @xmath48 with @xmath70 must all lie on the vertical edges of @xmath48 . recall that we have ensured that @xmath70 does not fully contain any such segment .",
    "trace @xmath48 in a circular fashion , as in its definition , and keep track of the level @xmath77 in @xmath70 of the point @xmath80 being traced . by our general position assumption , and by the tilting performed above , the level is well defined , and it can change only either ( i ) at the vertical jumps of @xmath48 , or ( ii ) at a discrete set of points @xmath80 on the edges @xmath46 of @xmath48 at which the univariate restriction of @xmath71 to the vertical line through @xmath80 has a multiple real root ( recall that , by assumption , @xmath70 does not intersect any @xmath46 ) ; see below for a discussion of this statement .",
    "each time we go up along one of the vertical segments of @xmath48 , the level either increases or stays the same , and , by assumption , it strictly increases at least once along the cycle , when @xmath48 intersects @xmath70 .",
    "since the levels at the beginning and at the end of the tour are the same , the level must go down at least once , as we trace one of the segments @xmath46 , @xmath37 .",
    "suppose , without loss of generality , that the level goes down as we trace @xmath112 .",
    "this must happen at a point @xmath113 at which the univariate restriction of @xmath71 to the vertical line through @xmath80 has a multiple real root .",
    "that is , @xmath80 lies vertically above a point at which @xmath114 , where @xmath115 refers here to the original version of the restriction of @xmath71 to @xmath116 .",
    "now if @xmath115 is square - free , we are done , since , by construction , we have cut @xmath117 at @xmath80 , and thus @xmath35 got eliminated by this cut . if @xmath115 is not square - free , it is possible that @xmath114 along a one - dimensional curve , so this property holds for a continuum of points @xmath80 on @xmath117 .",
    "however , in such a case ( i ) the multiplicity of the root does not cause the level to change at @xmath80 , and ( ii ) this vanishing on a one - dimensional curve does not occur for the square - free version of @xmath115 .",
    "this implies that the change in level must occur at a criticality of the square - free version of @xmath115 , and @xmath117 has been cut above every such criticality , implying that @xmath35 has been eliminated in this case as well .",
    "finally , consider the case where one ( or more ) of the lines @xmath34 is fully contained in  @xmath70 ; say @xmath117 is such a line .",
    "if one of the edges @xmath46 of @xmath35 has been cut by steps ( i)(iii ) , we are done , so assume that this did not happen .",
    "as a point @xmath80 traces @xmath48 , as above , the level  @xmath77 goes up at least once , when we go up from @xmath118 to @xmath119 ( at @xmath119 we count @xmath117 ( i.e. , @xmath120 ) in its level , whereas at @xmath118 we do not ) .",
    "since the level can not go down along any of the vertical upward edges of  @xmath48 , it must go down when @xmath80 traverses some edge @xmath46 of @xmath35 . therefore , arguing as above , @xmath80 must lie directly above a critical point of the square - free version of the restricted polynomial  @xmath121 , or of its reduced version @xmath122 if @xmath123 ( @xmath117 falls into this latter case ) , for some @xmath124 . in either case , @xmath42 has been cut at @xmath80 and @xmath35 has been eliminated .",
    "having covered all cases , the lemma follows .    it remains to bound the number of cuts . collecting the bounds from each step of our construction and maximizing over @xmath3 produces the recurrence @xmath125 where @xmath72 is the absolute constant from guth s construction , mentioned above , and @xmath126 is another suitable absolute constant .",
    "setting @xmath127 , the termination condition @xmath128 becomes @xmath129 , in which case no cuts are needed .",
    ", which is why , up to this point , we have not committed to a particular choice of  @xmath64 ; see the remark below and section  [ sec : alg ] for more details . ]",
    "that is , @xmath130 , and for @xmath131 we have @xmath132 for another absolute constant @xmath133 .",
    "since the depth of recursion is @xmath134 , its solution is easily seen to be @xmath135 , where @xmath136 is a constant that depends only on the absolute constant @xmath137 .",
    "this completes the proof of the upper bound .",
    "[ [ lower - bound . ] ] lower bound .",
    "+ + + + + + + + + + + +    the near - tightness of the bound follows from the grid - like construction of @xmath23 _ joints _ ( points incident to at least three non - coplanar lines ) in a collection of @xmath0 ( or rather @xmath138 ) lines , where the joints are the vertices of the @xmath139 integer grid , and the lines are the @xmath138 axis - parallel lines of the grid ; see , e.g. , @xcite . by slightly perturbing ( translating and tilting ) each of the lines , and by appropriately tilting the coordinate frame , each joint is mapped to a small elementary triangular cycle in the arrangement of @xmath140 lines in general position in @xmath4 .",
    "as the cycles do not overlap , each requires a separate cut .",
    "\\(1 ) setting @xmath66 to a sufficiently large constant , rather than a function of @xmath0 , in the above argument allows us to avoid having to work with polynomials whose degree depends on  @xmath0 , at the expense of slightly weakening the upper bound to @xmath141 , where @xmath142 depends on the choice of @xmath66 and can be made arbitrarily small .",
    "of course , the implied constant in the big - oh grows with  @xmath66 .",
    "\\(2 ) in the opposite direction , sharpening the bound further by increasing @xmath66 does not work in the present setting , because of step ( ii ) of the construction ( and the corresponding portion of step ( iii ) ) , where each line is cut at @xmath96 points .",
    "if only step ( i ) were sufficient , the non - recursive overhead would have been only @xmath86 , and then we could choose @xmath143 , skipping the recursion altogether , to obtain the worst - case optimal bound @xmath144 .",
    "it is an interesting challenge to improve the bound along these lines .",
    "we now outline and discuss several algorithms for eliminating cycles . notice that identifying a smallest possible set of cuts to eliminate all cycles for a given family of line segments is shown in aronov et al .",
    "@xcite to be np - complete .    [",
    "[ implementing - the - procedure - in - the - proof - of - theoremthmcuts . ] ] implementing the procedure in the proof of theorem  [ thm : cuts ] .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the most straightforward way to obtain the required cuts would be to implement the mostly - constructive proof of theorem  [ thm : cuts ] , except that we set @xmath66 to be a sufficiently large constant ( see the remark after the proof ) , in order to control the cost of the algebraic calculations that are needed to determine the cutting points .",
    "however , this would require an effective and efficient construction of the partitioning polynomial of guth @xcite , the existence which is currently an open problem .",
    "one may hope that the techniques developed in agarwal et al .",
    "@xcite for effective construction of `` approximate partitioning polynomials '' for sets of points would be helpful here as well , especially since the degree @xmath66 is now assumed to be a constant .",
    "however , the machinery employed by guth to prove the existence of the said polynomial is sufficiently different to make an extension to this case a serious challenge .    the rest of the algorithm would proceed as in the proof of theorem  [ thm : cuts ] .",
    "one needs to assume a suitable model of algebraic computation that supports constant - time execution of each of the various primitive algebraic operations required by the algorithm ( such as finding the intersections of a line with @xmath70 , finding the critical points of the polynomials @xmath88 , etc . ) for constant - degree polynomials .",
    "see , e.g. , basu et al.@xcite for a discussion of the existing machinery for implementing operations of this kind .",
    "[ [ the - algorithms - of - har - peled - and - sharir - and - of - solan . ] ] the algorithms of har - peled and sharir and of solan .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    alternatively , we can use the algorithms of har - peled and sharir@xcite or of solan@xcite , specifically designed to eliminate cycles in the depth relation . given a collection  @xmath3 of @xmath0  lines ( or line segments ) in @xmath4 , these algorithms work on the arrangement @xmath33 of the @xmath5-projections of the lines , and partition the plane into regions , either by a cutting ( in solan @xcite ) , or by incrementally refining regions into subregions ( in har - peled and sharir @xcite ) , exploiting the fact that one can efficiently detect the presence of a depth cycle in a collection of line segments in @xmath4 using an algorithm of de  berg et al .",
    "both algorithms generate close to @xmath145 cuts , where @xmath20 is the minimum number of cuts required to eliminate all cycles in the given set of segments .",
    "concretely , the slightly improved randomized algorithm in @xcite makes @xmath146 cuts in expectation ( the bound in solan s algorithm @xcite is slightly worse ) , and runs in expected time @xmath147 , for any @xmath26 ; see ( * ? ? ?",
    "* theorem  6.1 ) and ( * ? ? ?",
    "* theorem  2.1 ) ; here @xmath148 is the inverse ackermann function .",
    "therefore , we may conclude :    there exists a randomized algorithm that , given a set of @xmath0  lines in  @xmath4 , can find a set of @xmath24 cuts sufficient to eliminate all cycles in the depth relation among the lines , in expected time @xmath25 , for any @xmath26 .    clearly , the algorithm falls short of the ideal double goal of ( a )  finding a set of cuts close to the minimum possible size ( or just of size close to @xmath2 ) , as in the ( not yet fully polynomial - time ) construction in the proof of theorem  [ thm : cuts ] , and ( b )  doing it in time close to @xmath2 .",
    "the main merit of this approach is its efficiency , as it runs in subquadratic time .",
    "[ [ the - approximation - algorithm - of - aronov - et - al . ] ] the approximation algorithm of aronov et al .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the third algorithm , at the present state of affairs , appears to be the best of the three approaches .",
    "it is due to aronov et al .",
    "* theorem 3.1 ) , and is based on an approximation algorithm of even et al .",
    "@xcite for feedback vertex cover .",
    "it is a deterministic algorithm that produces a set of @xmath21 cuts that eliminate all cycles , where @xmath20 is the smallest size of such a set , and runs in @xmath149 time , where @xmath28 is the exponent of matrix multiplication .",
    "that is , this yields a ( not very efficient but still ) polynomial - time algorithm that gets very close to the minimum number of cuts needed . in particular",
    ", it generates @xmath1 cuts ( where the power in the polylogarithmic factor is slightly larger than the one in theorem  [ thm : cuts ] ) .",
    "in this section we discuss two extensions of our technique , to sets of line segments and of constant - degree algebraic arcs .",
    "consider a non - degenerate set @xmath150 of @xmath0 non - vertical line segments in @xmath4 , and let @xmath151 be the arrangement formed by their @xmath5-projections ; as we assume general position , each vertex of @xmath151 is either the projection of an endpoint of a segment in @xmath150 , or a proper crossing of two projected segments .",
    "let @xmath152  denote the number of vertices of the latter kind ; we refer to them as _ proper _ vertices .    of course ,",
    "suitably perturbed , @xmath150 can be extended to a set of lines in general position , and therefore all cycles in @xmath150 can be eliminated using @xmath1 cuts , by theorem  [ thm : cuts ] .",
    "we want to refine this bound , to make it depend on @xmath152 .",
    "clearly the case @xmath153 requires no cuts , and if @xmath154 , we cut every segment @xmath155 near each point projecting to a proper vertex of @xmath151 , thereby making @xmath156 cuts and eliminating all cycles .    for larger values of @xmath152 , set @xmath157 , and",
    "construct a @xmath158-cutting of @xmath159 with @xmath160 trapezoids , each crossed by at most @xmath161 segments in @xmath159 @xcite .",
    "cut every segment of @xmath150 at each point lying vertically above the boundary of a trapezoid of the cutting , thereby making @xmath162 cuts .",
    "now apply the bound of theorem  [ thm : cuts ] over each trapezoid separately , concluding that @xmath163 cuts are sufficient to eliminate all cycles . combining the two cases and using the algorithms of har - peled and sharir@xcite or of solan@xcite , or of aronov et al .",
    "@xcite , we conclude :    [ thm : segments ] the number of cuts sufficient to eliminate all cycles in a family of @xmath0 non - vertical line segments in general position in @xmath4 is @xmath164 , where @xmath152  is the number of pairs of segments whose @xmath5-projections cross",
    ".    one can compute ( i )  @xmath165 cuts that eliminate all cycles , in expected time @xmath166 , for any @xmath26 , or ( ii )  @xmath167 cuts that eliminate all cycles , in deterministic time @xmath168 , where @xmath169 is the matrix multiplication exponent .",
    "our argument can be extended , with fairly minor adjustments , to a similar bound on the number of cuts needed to eliminate all cycles in a collection of @xmath0 constant - degree algebraic curves or arcs , with a suitable general position assumption .",
    "we do not spell out all the details of this extension , which can be found in a subsequent work of sharir and zahl  @xcite . here",
    "we only highlight the necessary modifications .",
    "first , in the case of curves or arcs , one can have cycles of length  @xmath170 ( a curve passing above itself ) or  @xmath171 ( two twisted curves , each passing above the other ) .",
    "this however does not affect the argument in any significant manner .",
    "guth s polynomial partitioning technique  @xcite also applies for constant - degree algebraic curves , with the same performance parameters ( albeit with potentially larger constants of proportionality that depend on the maximum degree of the curves ) .",
    "this allows us to run the same recursive cutting procedure , and use analogous reasoning to show that it does indeed eliminate all cycles .",
    "( the aforementioned follow - up application of our technique by sharir and zahl  @xcite spells out the algebraic issues that arise in such an extension . )",
    "it results in a similar recurrence ( with different constants ) , that solves to the same bound @xmath172 , albeit with a larger exponent @xmath136 which now depends on the maximum degree of the arcs .    finally , to obtain a bound that depends on the number of intersecting pairs of arc projections",
    ", we can first construct a @xmath158-cutting of @xmath173 , exactly as in the case of segments , and apply the bound on the number of cuts within each `` pseudo - trapezoid '' of the cutting separately , resulting in the following summary result ( again , for the detailed and rigorous proof , see  @xcite ) .",
    "[ thm : arcs ] the number of cuts sufficient to eliminate all cycles in a family of @xmath0 constant - degree algebraic curves or arcs in general position in @xmath4 is @xmath164 , where @xmath152  is the number of pairs of arcs whose @xmath5-projections cross , and where the constant of proportionality and the exponent of the polylogarithmic factor depend on the degree of the input arcs .    both the algorithms of har - peled and sharir@xcite and of solan @xcite rely on a subroutine for quickly checking if a set of lines or line segments has an acyclic depth relation .",
    "analogous tools would have to be developed in order to yield an efficient construction of a small set of cuts to eliminate all cycles , for the case of algebraic arcs and/or curves .    concerning the other approach of aronov et al .",
    "@xcite , we do not know whether the reduction to feedback vertex cover employed there extends to the more general case of algebraic arcs .",
    "if it does , it would imply the existence of a polynomial - time approximation algorithm for this case as well .",
    "p. agarwal , b. aronov , and m. sharir , on the complexity of many faces in arrangements of pseudo - segments and of circles , _ discrete and computational geometry  the goodman - pollack festschrift _ , b. aronov , s. basu , j. pach , and m. sharir ( eds . ) , springer - verlag , heidelberg , 2003 , pp . 123 ."
  ],
  "abstract_text": [
    "<S> given @xmath0 non - vertical lines in 3-space , their vertical depth ( above / below ) relation can contain cycles . we show that the lines can be cut into @xmath1 pieces , such that the depth relation among these pieces is now a proper partial order . </S>",
    "<S> this bound is nearly tight in the worst case .    </S>",
    "<S> previous results on this topic could only handle restricted cases of the problem ( such as handling only triangular cycles , by aronov , koltun , and sharir ( 2005 ) , or only cycles in grid - like patterns , by chazelle et al .  </S>",
    "<S> ( 1992 ) ) , and the bounds were considerably weaker  much closer to the trivial quadratic bound .    </S>",
    "<S> our proof uses a recent variant of the polynomial partitioning technique , due to guth , and some simple tools from algebraic geometry . </S>",
    "<S> it is much more straightforward than the previous `` purely combinatorial '' methods .    </S>",
    "<S> our technique can be extended to eliminating all cycles in the depth relation among segments , and among constant - degree algebraic arcs . </S>",
    "<S> we hope that a suitable extension of this technique could be used to handle the much more difficult case of pairwise - disjoint triangles .    </S>",
    "<S> we also discuss several algorithms for constructing a small set of cuts so as to eliminate all depth - relation cycles among the lines ( minimizing such a set , for the case of line segments , is known to be np - complete ) . </S>",
    "<S> the performance of these algorithms improves due to our new bound , but , so far , none of them both ( a )  produce close to @xmath2 cuts , and ( b )  run in time close to @xmath2 , in the worst case .    </S>",
    "<S> our results almost completely settle a 35-year - old open problem in computational geometry , motivated by hidden - surface removal in computer graphics . </S>"
  ]
}
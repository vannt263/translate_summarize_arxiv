{
  "article_text": [
    "network structures have appeared for a long time , and along with them are those who behave abnormally within the system .",
    "we refer to these people or their illegal activities as anomalies . with respect to financial transactional networks",
    ", anomalies can include those who execute fraudulent transactions . in these networks ,",
    "a common goal is to detect those anomalies to prevent future illegal actions .",
    "people really care about detecting the anomalies due to increasing theft rates , both specifically in the bitcoin network and in other financial networks .",
    "bitcoin is a special type of transaction system ; more information about it can be found in @xmath2 $ ] .",
    "we seek to use anomaly detection as a proxy for suspicious users / activities detection .",
    "similarly , anomaly detection is used to detect fradulent purchases in credit card systems or network congestion in computer networks . however , in this anonymous network , nodes ( i.e. users , transactions ) are unlabeled and there is no confirmation as to whether or not a given node is actually conducting illicit activities .    in this project , we focus particularly on the problem of detecting anomalies in the bitcoin transaction network , which is certainly related to the study of fraud detection in all types of financial transaction systems . since this problem can be generalized to those in other network settings , which may or may not involve financial transactions , we are examining the more general problem of anomaly detection in networks .    the rest of the paper is organized as follows .",
    "section @xmath3 presents related work .",
    "section @xmath4 describes our methods , including data collection and parsing , feature extraction , and mathematical descriptions of the network analysis techniques .",
    "section @xmath5 discusses evaluation methods .",
    "section @xmath6 presents the results we obtain by running these techniques on the network - type data set we generated .",
    "section @xmath7 evaluates our methods and results .",
    "section @xmath8 mentions future works .",
    "section @xmath9 concludes our study .",
    "there are many research studies that concern anomaly detection , and these studies use a variety of techniques including machine learning and network analysis techniques . for the purpose of this paper , we will review related network analysis results only .",
    "leskovec et al .",
    "( @xmath10 $ ] ) describe the properties of graph evolution over time , which are different from what many previous papers would predict .",
    "one key idea is the densification power law which states that in log - log scale , most graphs densify with the number of edges being a linear function of the number of nodes .",
    "leskovec et al .",
    "then discuss forest fire model , which reproduces many key properties of real networks including densification power law , heavy tailed in / out - degrees , etc .",
    "the comment given out is that the graphs are abnormal if these laws and characteristics fail to satisfy .",
    "this is the motivation for our first analysis that uses densification power law and power law degree distribution on the bitcoin network .",
    "we will also use the power law degree distribution for other features other than in - degree and out - degree . if we detect any structures induced by users activities that deviate significantly from these laws",
    ", we may conclude that there is something abnormal in the network .",
    "we will use this as the preliminary anomaly detection method to see if anomalous structures actually exist in the network .",
    "smith et al .",
    "( @xmath11 $ ] ) make use of clustering techniques to detect anomalies .",
    "the main idea is that these methods should be able to group normal users / activities together and separate from abnormal ones .",
    "smith et al .",
    "use k - means clustering , self - organizing maps , and the expected maximization algorithm to develop methods for the detection process .",
    "motivated by this , we think we can have a good use of k - means clustering method on the bitcoin dataset .",
    "however , we will not use k - means as a real method to detect anomalies because clustering in its deep sense is for grouping purposes .",
    "instead , we will use it as a baseline model .",
    "since we expect outliers ( i.e. anomalies ) to stay far away from the centroids found by @xmath1-means , @xmath1-means can be used to assess our true method . in the same sense ,",
    "@xmath1-means is helpful for visualization purposes .",
    "most importantly , without @xmath1-means to find the centroids , we can not calculate lof indices in the next part , which defines our notion of anomalies ; the connection between @xmath1-means clustering method and lof method will be discussed in more details in the methods section .",
    "breunig et al .",
    "( @xmath12 $ ] ) propose the local outlier factor ( lof ) method to detect outliers in a dataset .",
    "this method relies on the concept of local density , with locality defined by @xmath1 nearest neighbors and density estimated by distances .",
    "basically , they compare the local density of a point ( a node ) to that of its neighbors to identify regions of similar density and points that have substantially higher densities than their neighbors ; these points are then labeled as outliers .",
    "we find this method suitable for our study because not only outliers can be understood as anomalies , but also we do not need labelled data to feed in the calculations .",
    "thus , we will use this method as our main methodology to detect anomalies in the bitcoin network .",
    "we then use k - means clustering results discussed above to verify our findings .",
    "in this section , we will first data collection and parsing . then , we describe feature extraction , and finally we provide mathematical explanations for the social network analysis techniques we will use .      we use the bitcoin transaction data set obtained from stanford network analysis project .",
    "all bitcoin transactions are documented in a public ledger and are in the currency unit called the bitcoin ( btc ) .",
    "the data set contains all bitcoin transactions beginning from the network s creation until april 7th , 2013 . for each transaction",
    ", there can be multiple sender and receiver addresses .",
    "furthermore , multiple addresses can belong to a single user .",
    "finally , users are also anonymous in that there are no names or personal information associated with a given user .",
    "the data set is quite large : there are @xmath13 users with @xmath14 transactions .",
    "we parse the data in two ways .",
    "the first way , which we will call the _ user graph _ , is quite intuitive : users ( where each user owns a list of addresses ) are nodes and transactions between users are edges . the second way , which we will call the _ transaction graph _",
    ", models transactions as nodes and bitcoin flow between transactions as edges .    in our analysis , we will use both graph types to investigate the bitcoin network .",
    "the user graph will help us detect suspicious users , while the transaction graph will help us detect suspicious transactions .",
    "using these two graph representations , we can not only find out both abnormal users and abnormal activities , but also check if our methods are consistent in the sense that suspicious transactions should belong to suspicious users .      in order to use @xmath1-means as a baseline and",
    "calculate the local outlier factor ( lof ) , for each node in the graph we extract a set of features .",
    "note that for the two afore - mentioned network representations of the data , the set of features are not the same ; even if they share the same feature names , those names may mean very different things .      for the user graph",
    ", we choose the set of features from the followings :    * in - degree : number of transactions received by a given user .",
    "* out - degree : number of transactions sent by a given user . *",
    "unique in - degree : number of unique users a given user has received transactions from . *",
    "unique out - degree : number of unique users a given user has sent transactions to . * average in - transaction : average number of bitcoins received per incoming transaction . *",
    "average out - transaction : average number of bitcoins sent per outgoing transaction .",
    "* average time interval between in - transactions .",
    "* average time interval between out - transactions . *",
    "number of public keys owned by a given user .",
    "* balance : net number of bitcoins retained by user . * clustering coefficient : measure of connectivity amongst neighbors of a given user . * creation date : timestamp of first transaction associated with a given user . *",
    "active duration : time difference between first and most recent transactions associated with a given user . *       for the transaction graph",
    ", we choose the set of features from the followings :    * in - degree : number of transactions ( i.e. nodes ) that tak money from a given transaction ( i.e. a given node ) .",
    "* out - degree : number of transactions that a given transaction takes money from . *",
    "unique in - degree : number of unique transactions that take money from a given transaction .",
    "* unique out - degree : number of unique transactions that a given transaction takes money from . *",
    "average in - transaction : average number of bitcoins on each incoming edge to a given transaction . *",
    "average out - transaction : average number of bitcoins on each outgoing edge from a given transaction .",
    "* average time interval between in - transactions .",
    "* average time interval between out - transactions .",
    "* number of users a given transaction is associated with .",
    "* balance : net number of bitcoins for a given transaction considering all in- and out - going edges from that transaction . * clustering coefficient : measure of connectivity amongst neighbors of a given transaction . * creation date : timestamp of first edge associated with a given transaction . *",
    "active duration : time difference between first and most recent edges associated with a given transaction . *       we will use three methods to discover and detect anomalies in the bitcoin network .",
    "these methods should be also suited for anomaly detection in any network setting systems .",
    "generally , the densification power law states that @xmath15 where @xmath16 and @xmath17 are numbers of nodes and edges at time @xmath18 , and @xmath19 is some positive constant .",
    "the power law degree states that in many real world network , @xmath20 where @xmath21 is the fraction of nodes that have degree @xmath1 and @xmath22 is some positive constant .",
    "hence in a normal network , @xmath23 is a linear function of @xmath24 .",
    "we expect this relation to hold when nodes degrees are replaced by their in - degrees , their out - degrees , and in the bitcoin system that we consider , their balances , average transaction sizes , and total amounts of transactions as well .",
    "the purpose of the @xmath1-means clustering method is to partition @xmath25 points ( i.e. @xmath25 nodes in the graph ) into @xmath1 groups of similar characteristics .",
    "the optimal choice of @xmath1 for the bitcoin data will be determined in the results section .    for this method to work , we first need to represent each node as a multi - dimensional vector in the euclidean space ; each dimension of a node is a feature that we choose from the list described in part @xmath26 . for runtime purposes",
    ", we did not use the entire list of features per node ; instead we select a subset of features for each node . for the user - as - node graph",
    ", we use the following six features .    * in - degree * out - degree * mean incoming transaction value * mean outgoing transaction value * mean time interval * clustering coefficient    for the transaction - as - node network , we use three features :    * in - degree * out - degree * total value of the transaction    this procedure produces a set of @xmath25 points ( i.e. nodes ) @xmath27 for which @xmath28 for each @xmath29 . here @xmath30 or @xmath4 .",
    "we seek to partition these @xmath25 points into @xmath1 clusters @xmath31 to solve @xmath32 where @xmath33 is the mean of the points in @xmath34 for each @xmath35 .",
    "we use the @xmath1-means clustering algorithm as a heuristic method to solve this problem . the algorithm in details",
    "can be found in @xmath36 $ ] .",
    "our final note in this part is that to account for the power law nature of the feature values , we use the normalized log of feature values .",
    "we denote by @xmath37 the distance between two points @xmath38 and @xmath39 .",
    "furthermore , we denote by @xmath1-distance(a ) the distance of the point @xmath38 to its @xmath1-th nearest neighbor .",
    "we also define the set of @xmath1-th nearest neighbors of a point @xmath38 : @xmath40    then , we define _ reachability distance _ : @xmath41    in other words , the _ reachability distance _",
    "indexed @xmath1 of a point @xmath38 from a point @xmath39 is the true distance between the two points , but this distance must be at least the @xmath1-distance of @xmath39 . note that the reachability distance is not symmetric .",
    "then , we can define the most important definition in this part , the _ local reachability density _ of a point @xmath38 , to be @xmath42    intuitively , it is the inverse of the average reachability distance of the point @xmath38 from its neighbors .",
    "then , we use these quantities to calculate @xmath43 , which is defined by the average local reachability density of @xmath38 s neighbors divided by the @xmath38 s own local reachability density , i.e. @xmath44",
    "so if @xmath45 for some point @xmath38 , then we imply that @xmath38 is comparable to its neighbors and therefore @xmath38 is not an outlier ; if @xmath46 , then we imply a denser region and we conclude that @xmath38 might be an inlier ; and if @xmath47 , we indicate @xmath38 as an outlier .",
    "a final remark in this part is about what we meant earlier about using @xmath1-means clustering to calculate the lof indices .",
    "technically , we do not need the results obtained by @xmath1-means clustering to determine the lof indices ; instead , we need @xmath1-nearest - neighbors .",
    "when implementing the lof method , however , we use @xmath1-means clustering results to narrow down the list of potential @xmath1-nearest - neighbors for a given node . basically , using k - means ,",
    "once we obtain the list of nodes for each cluster , we can ( somewhat reasonably ) search for a given node s @xmath1-nearest - neighbors within the cluster it is grouped in - this saves computational time by a factor of @xmath48 for computing the lof indices .",
    "with unlabeled data , evaluating our methods is a major challenge . due to the nature of the network - type data",
    "set we have , we propose three evaluation methods .    * using @xmath1-means as a baseline",
    ", we can calculate the relative distances between the detected outliers with the centroids .",
    "if these values are small , then we conclude that our ( lof ) method might not be a good method of anomaly detection .",
    "we call this `` visualization evaluation . ''",
    "* since we represent our data in two ways with nodes and edges somehow exchanging , we can test if our methods are consistent by checking if detected suspicious users match with detected suspicious transactions .",
    "we call this  dual evaluation . \"",
    "+ specifically , with the user - as - node representation we can get the top @xmath49 user outliers and with the transaction - as - node representation we can get the top @xmath50 transaction outliers . in this paper , we choose @xmath51 .",
    "we then determine @xmath52 - the set of transactions corresponding to the top @xmath49 node outliers and @xmath53 - the set of users corresponding to the top @xmath50 transaction outliers defined above .",
    "we define + @xmath54 + and @xmath55 + finally , we define the dual evaluation metric @xmath56 by @xmath57 note that @xmath58 $ ] , and the bigger it is the more accurate our method is . *",
    "finally , there are around @xmath59 revealed thieves in the bitcoin network . we can check if they belong to our detected suspicious user and transaction sets .",
    "we apply our network analysis techniques for both the network representations of the data .",
    "we implement these methods using the full dataset .",
    "we first look at the densification power law for the two graph types .",
    "( see figures @xmath60 . )",
    "+            the densification power law does not seem to be so well satisfied for the user - as - node graph , but perfectly satisfied for the transaction - as - node graph type .",
    "a straight line for the transaction graph indicates that the number of edges ( i.e. the number of transactions connecting with one another ) is a reliable exponential function of the number of nodes ( i.e. the number of transactions in the network ) over time .",
    "this says , either there is nothing wrong with the network or people just try to hide the abnormal activities through seemingly legitimate transactions .",
    "if thieves are available , they will certainly put in every effort to make their transactions look licit in this easiest sense - the number of money flows among transactions is exponentially proportional to the number of transactions .",
    "otherwise , they can easily be detected .",
    "the corresponding plot for the user graph is different . in this plot , although the plot has the shape of a straight line , it bends in the middle and at the end of the line .",
    "this might indicate that some users enter the network and make an unusual number of transactions ; in other words , thieves are well available .",
    "to explain for the first two plots , we observe that thefts in fact occur in the network ; and while thieves can control for the legitimate appearance of the number of money flows among transactions , they can not control for the number of transactions they make ; when both of these are normal , they can not win free money .",
    "now , we investigate the power law degree distribution for various measures including in - degree , out - degree , balance , and average transaction size for the user - as - node graph type and in - degree , out - degree , total amount of transaction for the transaction - as - node graph .",
    "( see figures @xmath61 . )",
    "first , we observe the user graph .",
    "( figure @xmath4 . ) the log - log plot of the in - degree distribution fits quite well the power degree law as there seems to be a straight line going through the points on the plot .",
    "so there would not be any problem with this distribution .",
    "now we turn to the log - log plot of the out - degree distribution .",
    "the linear relation starts to appear broken as many points are unusually out of the core . as we have explained above , since thieves can not control for the number of transactions they make ( which correspond well to the degrees of nodes in the user graph ) the power degree law",
    "should be violated for this distribution when there are thefts in the network .",
    "the log - log plots of the average transaction size and balance are even a more obvious sign of the existence of abnormal activities in the network .",
    "there appear to be many points in these plots which stay randomly and far away from the main core lines .",
    "these plots do not look fit for any usual kind of degree distribution and thus , the unusual points here correspond to suspicious users in the network .",
    "we now turn to the transaction graph .",
    "( figure @xmath5 . )        for this graph type the in - degree and out - degree appear quite alright , which makes sense with our straight line observation of the densification power law for transaction - as - node graph .",
    "however , the plot for total amount ( for each transaction ) behaves abnormally .",
    "there is a significant portion of points in the plot which stay far away from the core line ; these points correspond to the suspicious transactions in the network .    by the power degree @xmath0 densification laws , we conclude that there are apparent anomalies in the network ; in other words , there exist users who conduct illegal activities .",
    "next , we will use @xmath1-means clustering method and local outlier factor method to figure out who those users might be .      following xiong et al .",
    "( @xmath62 $ ] ) , to find the optimal value of @xmath1 we calculate the entropy measure and choose the integer @xmath1 corresponding to the smallest entropy . being mindful of computational time , we limit our selection of @xmath1 to be between @xmath3 and @xmath63 .",
    "we run the clustering algorithm and find that for the user graph , at @xmath64 we obtain the lowest entropy measure between clusters , which indicates that @xmath64 is optimally selected for this graph type .",
    "( figure @xmath6 . ) for the transaction graph , the optimal @xmath1 is @xmath65 .",
    "however , for the sake of the dual evaluation method , we will choose @xmath64 for both graph types .    .",
    "]    now we plot these @xmath64 clusters for each graph type .",
    "( figures @xmath66 . )",
    "-means clustering of average inbound value versus in - degree .",
    "( user graph ) ]    -means clustering of total value versus out - degree .",
    "( transaction graph ) ]    visualizing all points and their respective cluster assignments , we see that one cluster comprises the vast majority of the data points .",
    "the remaining six clusters are composed of users who are further away from this major cluster , but still comprise significantly large and significantly homogeneous groups in order to be clustered .",
    "figures @xmath7 and @xmath8 are plots in two dimensions of the clusters found by our algorithm for two graph types .",
    "figure @xmath7 is the plot for the user graph in two dimensions of in - degree and inbound value while figure @xmath8 is the plot for the transaction graph with two dimensions being out - degree and total value .",
    "we can certainly plot over all pairs of features we use in @xmath1-means method , but for visualizing purpose we believe that these two plots are sufficient .    in table",
    "@xmath67 , we report the list of cluster centroids ( for @xmath64 ) for the user graph .",
    "( the corresponding table for the transaction graph is not quite illustrative so we will not present it here . )",
    "we find that all cluster centroids have relatively low cluster coefficients , implying that few users have high cluster coefficients , and the ones who do are not relatively similar to others .",
    "other measures like in - degree , out - degree , mean in value , mean out value vary in values across the centroids .",
    "hence , these measures not good indicators to tell whether some users are likely to be anomalies or not .",
    ".list of cluster centroids for @xmath64 .",
    "( user graph ) [ cols=\"^,^,^,^,^ \" , ]     we proceed by plotting the detected outliers using the lof method together with @xmath1-means clusters for the two graph types .",
    "( figures @xmath68 . )",
    "figure @xmath9 is the plot for the user graph on two dimensions of the in - degree and average in - value .",
    "we observe that detected outliers ( suspicious users ) lie at the border surrounding the normal nodes .",
    "the nodes with extremely high value of the average in - value measure appear highly likely to be anomalies .",
    "the same conclusion is drawn for node with extremely low value of the in - degree measure .",
    "some other detected outliers have values of these measures in between , though other measures should be really extreme instead",
    ".    -means clustering of in - degree versus average in - value .",
    "user outliers are represented by larger circles . ]",
    "figure @xmath69 is the plot for the transaction graph on two dimensions of the out - degree and total value .",
    "similarly to the user graph , we observe that detected outliers ( suspicious transactions ) lie at the border of the plot .",
    "the nodes with extremely low and high value of the out - degree measure appear highly likely to be anomalies .",
    "likewise , nodes with extremely high value of the total value ( for each transaction ) are likely to be detected as anomalies .",
    "-means clustering of total value versus out - degree .",
    "transaction outliers are represented by larger circles ]    recall that in the result section of power law degree distribution @xmath0 densification power law , any measures related to money ( balance , transaction size , total amount or value , etc . )",
    "behave abnormally with many extreme points staying out of the core shape of the plots .",
    "that observation is consistent with the detected outliers we get through the lof method here in the sense that points with extreme values are likely to be anomalies .",
    "we follow the three proposed evaluation methods to evaluate our findings .    * using @xmath1-means clustering method , we get @xmath1 clusters with corresponding @xmath1 centroids . for each graph type ( for the lof method ) , we calculate the average of the ratios of detected anomaly distances to corresponding centroids over max distances from those centroids to their assigned points for the top @xmath70 outliers .",
    "+ for the lof method , we get @xmath71 for the user graph and @xmath72 for the transaction graph .",
    "these values are as large as we expect them to be since by observations in the results section , detected anomalies appear to be extreme points . * to evaluate the agreement between the two graph types , we compute @xmath73 and @xmath74 , resulting in @xmath75 .",
    "the value of @xmath56 is quite high , indicating that the lof method is consistent . * using the lof method",
    ", we detect one known theft via a trojan keylogger that occurred in @xmath76 .",
    "the anomalous transaction was one in a series of transactions that obtained a total of @xmath77 bitcoins from @xmath78 various addresses and funneled them to a single address .",
    "the biggest challenge for problems with unlabelled data is testing . there is no obvious , universally agreed way to do testing for any kind of algorithms for such problems .",
    "in this project , besides using the publicly revealed thefts we propose two metrics with the hope to evaluate our methodology . though with these evaluation methods we can somewhat evaluate the consistency of our ( lof ) anomaly detection method , in no way we can evaluate its accuracy .    in the future",
    ", we would like to go deeper into this issue .",
    "specifically , we will find better evaluation methods .",
    "one direction is to generate similar data but with labels , and we test our methods on the newly generated data and finding results for the original data .",
    "once better evaluation methods are proposed , we would also like to investigate better approaches to solving the anomaly detection problem .",
    "the lof method is nice , but it is by no means the universally best one .",
    "in fact , literature has observed several modifications of this method as well as totally new ones in this area .",
    "we would like to look into the methods that can deal efficiently with network type data .    regarding the bitcoin network , we can also improve on getting better features out of the data .",
    "one possible way is to segment transaction network into time slices .",
    "we can also detect smaller communities within the bitcoin network and work explicitly within each community .",
    "in this paper , we investigate the bitcoin network . we first represent the data with two focuses : users and transactions .",
    "we then use three main social network techniques to detect anomalies , which are potential anomalous users and transactions . while the agreement metrics are not high , we are able to detect one known case of theft , out of the 30 known cases we have .",
    "since these techniques apply in other network settings , we in fact worked on a bigger problem of anomaly detection in networks .",
    "[ 1 ] https://bitcoin.org/en/ + [ 2 ] j. leskovec , j. kleinberg , c. faloutsos .",
    "_ graph evolution : densification and shrinking diameters .",
    "_ acm tkdd , 2007 .",
    "+ [ 3 ] lloyd , stuart p. ( 1982 ) , _ least squares quantization in pcm _ , ieee transactions on information theory 28 ( 2 ) : 129 - 137 . + [ 4 ] breunig , m. m. ; kriegel , h .-",
    "p . ; ng , r. t. ; sander , j. ( 2000 ) . _",
    "lof : identifying density - based local outliers .",
    "_ proceedings of the 2000 acm sigmod international conference on management of data .",
    "sigmod : 93 - 104 .",
    "+ [ 5 ] xiong , h. et al . _",
    "k - means clustering versus validation measures : a data distribution perspective .",
    "_ kdd06 , august 20 - 23 , 2006 . + [ 6 ] smith , r. , a. bivens , m. embrechts , c. palagiri and b. szymanski , 2002 .",
    "_ clustering approaches for anomaly based intrusion detection .",
    "_ proceedings of the walter lincoln hawkins graduate research conference , october 2002 , new york , usa . , pp : 579 - 584 ."
  ],
  "abstract_text": [
    "<S> the problem of anomaly detection has been studied for a long time , and many network analysis techniques have been proposed as solutions . although some results appear to be quite promising , no method is clearly to be superior to the rest . in this paper , we particularly consider anomaly detection in the bitcoin transaction network . our goal is to detect which users and transactions are the most suspicious ; in this case , anomalous behavior is a proxy for suspicious behavior . to this end , we use the laws of power degree @xmath0 densification and local outlier factor ( lof ) method ( which is proceeded by @xmath1-means clustering method ) on two graphs generated by the bitcoin transaction network : one graph has users as nodes , and the other has transactions as nodes .    </S>",
    "<S> we remark that the methods used here can be applied to any type of setting with an inherent graph structure , including , but not limited to , computer networks , telecommunications networks , auction networks , security networks , social networks , web networks , or any financial networks . </S>",
    "<S> we use the bitcoin transaction network in this paper due to the availability , size , and attractiveness of the data set . </S>"
  ]
}
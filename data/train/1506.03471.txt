{
  "article_text": [
    "since early human history , centralization has been a major competitive advantage .",
    "societies with centralized governance were able to develop more advanced technology , accumulate more resources and increase their population faster @xcite .",
    "as societies evolved , the negative effects of centralization of power were revealed : corruption , inequality , preservation of the status quo and abuse of power .",
    "as it turns out , some ` separation of powers ' @xcite is necessary . in modern times",
    ", we strive to find a balance between the models , maximizing output and efficiency with centralized control , guarded by checks and balances of decentralized governance .",
    "the original narrative of the web is one of radical decentralization and freedom@xcite . during the last decade ,",
    "the web s incredible growth was coupled with increased centralization .",
    "few large companies now own important junctures of the web , and consequently a lot of the data created on the web .",
    "the lack of transparency and control over these organizations reveals the negative aspects of centralization once again : manipulation @xcite , surveillance @xcite , and frequent data breaches @xcite .",
    "bitcoin @xcite and other blockchains @xcite ( e.g. , ethereum ) promise a new future .",
    "internet applications can now be built with a decentralized architecture , where no single party has absolute power and control .",
    "the public nature of the blockchain guarantees transparency over how applications work and leaves an irrefutable record of activities , providing strong incentives for honest behavior .",
    "bitcoin the currency was the first such application , initiating a new paradigm to the web .    the intense verification and public nature of the blockchain limits potential use cases , however .",
    "modern applications use huge amounts of data , and run extensive analysis on that data .",
    "this restriction means that only ` fiduciary code ' can run on the blockchain @xcite .",
    "the problem is , much of the most sensitive parts of modern applications require heavy processing on private data . in their current design",
    ", blockchains can not handle privacy at all .",
    "furthermore , they are not well - suited for heavy computations .",
    "their public nature means private data would flow through every full node on the blockchain , fully exposed .",
    "there is a strange contradiction in this setup .",
    "the most sensitive , private data can only be stored and processed in the centralized , less transparent and insecure model .",
    "we have seen this paradigm lead to catastrophic data leaks and the systematic lack of privacy we are currently forced to accept in our online lives .",
    "enigma is a decentralized computation platform with guaranteed privacy .",
    "our goal is to enable developers to build privacy by design , end - to - end decentralized applications , without a trusted third party .",
    "* enigma is private*. using _ secure multi - party computation _ ( _ smpc _ or _ mpc _ ) , data queries are computed in a distributed way , without a trusted third party .",
    "data is split between different nodes , and they compute functions together without leaking information to other nodes .",
    "specifically , no single party ever has access to data in its entirety ; instead , every party has a meaningless ( i.e. , seemingly random ) piece of it .",
    "* enigma is scalable*. unlike blockchains , computations and data storage are not replicated by every node in the network . only a small subset perform each computation over different parts of the data .",
    "the decreased redundancy in storage and computations enables more demanding computations .",
    "the key new utility enigma brings to the table is the ability to run computations on data , without having access to the raw data itself .",
    "for example , a group of people can provide access to their salary , and together compute the average wage of the group .",
    "each participant learns their relative position in the group , but learns nothing about other members salaries .",
    "it should be made clear that this is only a motivating example . in practice",
    ", any program can be securely evaluated while maintaining the inputs a secret .",
    "today , sharing data is an irreversible process ; once it is sent , there is no way to take it back or limit how it is used . allowing access to data for secure computations is reversible and controllable , since no one but the original data owner(s ) ever see the raw data .",
    "this presents a fundamental change in current approaches to data analysis .",
    "enigma is designed to connect to an existing blockchain and off - load private and intensive computations to an off - chain network .",
    "all transactions are facilitated by the blockchain , which enforces access - control based on digital signatures and programmable permissions .",
    "code is executed both on the blockchain ( public parts ) and on enigma ( private or computationally intensive parts ) .",
    "enigma s execution ensures both _ privacy _ and _ correctness _ , whereas a blockchain alone can only ensure the latter .",
    "proofs of correct execution are stored on the blockchain and can be audited .",
    "we supply a scripting language for designing end - to - end decentralized applications using _ private contracts _ , which are a more powerful variation of _ smart contracts _ that can handle private information ( i.e. , their state is not strictly public ) .",
    "the scripting language is also turing - complete , but this is not as important as its scalability .",
    "code execution in blockchains is decentralized but not distributed , so every node redundantly executes the same code and maintains the same public state . in enigma , the computational work is efficiently distributed across the network .",
    "an interpreter breaks down the execution of a private contract , as is illustrated in figure [ fig : code_exec ] , resulting in improved run - time , while maintaining both privacy and verifiability .",
    "= [ draw , text width=5em , text centered , minimum height=2.5em ] = [ sensor , text width=6em , minimum height=12em , rounded corners ]    at ( 6,2.7 ) ( x0 ) [ naveqs ] blockchain ; at ( 9,2.7 ) ( x1 ) [ naveqs ] enigma ; at ( 2,1 ) @xmath0 ;    \\(r ) at ( 2,4 ) @xmath1 ;    ( r.north west)(r.three west ) ; ( r.three east)(r.south east ) ; ( @xmath2 ) to[out=-180,in=240 ] + + ( 0,1.5 ) to [ out=40,in=120]node[above , midway]public(x0 ) ; ( @xmath3 ) to [ out=-60,in=-120]node[below , midway]private(x1 ) ;    the off - chain network solves the following issues that blockchain technology alone can not handle :    1 .",
    "* storage*. blockchains are not general - purpose databases .",
    "enigma has a decentralized off - chain _ distributed hash - table _ ( or _ dht _ ) that is accessible through the blockchain , which stores references to the data but not the data themselves .",
    "private data should be encrypted on the client - side before storage and access - control protocols are programmed into the blockchain .",
    "enigma provides simple apis for these tasks in the scripting language .",
    "2 .   * privacy - enforcing computation*. enigma s network can execute code without leaking the raw data to any of the nodes , while ensuring correct execution .",
    "this is key in replacing current centralized solutions and trusted overlay networks that process sensitive business logic in a way that negates the benefits of a blockchain .",
    "the computational model is described in detail in section [ sec : computation ] .",
    "* heavy processing*. even when privacy is not a concern , the blockchain can not scale to clearing many complex transactions .",
    "the same off - chain computational network is used to run heavy publicly verifiable computations that are broadcast through the blockchain .",
    "off - chain nodes construct a distributed database .",
    "each node has a distinct view of shares and encrypted data so that the computation process is guaranteed to be privacy - preserving and fault tolerant .",
    "it is also possible to store large public data ( e.g. , files ) unencrypted and link them to the blockchain .",
    "figure [ fig : node_view ] illustrates the database view of a single node .",
    "( rect ) at ( 2,4)shares ;    on a network level , the distributed storage is based on a modified kademlia dht protocol @xcite with added persistence and secure point - to - point channels , simulated using a broadcast channel and public - key encryption .",
    "this protocol assists in distributing the shares in an efficient manner . when storing shares , the original kademlia distance metric is modified to take into account the preferential probability of a node .",
    "in this section , we describe enigma s computational model . we begin with a brief introduction to publicly verifiable secure mpc based on state - of - the - art advances in cryptography .",
    "then , we describe a series of performance improvements to secure mpc that makes the technology practical even when the network is large : hierarchical secure mpc , network reduction and adaptable circuits .    to use enigma , developers write high - level code , where public parts are executed on the blockchain and private parts are run off - chain , on enigma s platform .",
    "we call these _ private contracts _ , since they are smart contracts that can handle private information .",
    "yao introduced the first solution to secure two - party computation protocols in 1982 @xcite . in the same paper",
    ", yao suggested the popular _ millionaire problem _ , describing two millionaires interested in knowing which one of them is richer , without revealing their actual net worth . in the decades since",
    ", the two - party problem has been generalized to mpc , which refers to the @xmath4-party case . for general - purpose mpc ,",
    "in which every protocol could be composed from a circuit of elementary mpc gates , two major approaches have been developed over the years : yao s garbaled ( boolean ) circuits @xcite and mpc based on secret sharing .",
    "the latter has been more commonly used in production systems ( e.g. , @xcite and @xcite ) and is our focus as well .",
    "a threshold cryptosystem is defined by @xmath5 , where @xmath4 is the number of parties and @xmath6 is the minimal number of parties required to decrypt a secret encrypted with threshold encryption .",
    "secret sharing is an example of a threshold cryptosystem , where a secret @xmath7 is divided among @xmath4 , s.t .",
    "at least @xmath6 are required to reconstruct @xmath7 .",
    "any subset of @xmath8 parties can not learn anything about the secret . a _ linear secret - sharing scheme _ ( or _ lsss _ )",
    "partitions a secret to shares such that the shares are a linear combination of the secret . _",
    "shamir s secret sharing _ ( or _ sss _ ) is an example of a lsss , which uses polynomial interpolation and is secure under a finite field @xmath9 @xcite . specifically , to share a secret @xmath7",
    ", we select a random @xmath8 degree polynomial @xmath10     @xmath11    the shares",
    "are then given by @xmath12_{p_i } = q(i).\\ ] ]    then , given any @xmath6 shares , @xmath10 could be trivially reconstructed using lagrange interpolation and the secret @xmath7 recovered using @xmath13 . since sss is linear , it is also additively homomorphic , so addition and multiplication by a scalar operations could be performed directly on the shares without interaction . formally ",
    "@xmath14_{p_i } \\}_{i \\in n}^{t+1}),\\\\      s_1 + s_2 = reconstruct ( \\ { [ s_1]_{p_i } + [ s_2]_{p_i } \\}_{i \\in n}^{t+1}).\\end{aligned}\\ ] ]    multiplication of two secrets @xmath15 and @xmath16 is somewhat more involved .",
    "if each party would attempt to locally compute the product of two secrets , they would collectively obtain a polynomial of degree @xmath17 , requiring a polynomial reduction step ( @xmath18 ) .",
    "for an information theoretic setting , this result adds an honest majority constraint ( i.e. , @xmath19 ) on privacy and correctness .",
    "if we bound the adversary s computational power , both properties are assured for any number of corrupted parties , but fairness and deciding on an output still requires an honest majority @xcite .    as to performance ,",
    "a re - sharing step is required in the degree reduction step , implying all parties must interact with all other parties ( @xmath20 communications ) .",
    "this makes mpc impractical for anything larger than a small constant number of parties @xmath4 .",
    "while optimized solutions exist for improving the amortized complexity , they are based on assumptions that restrict functionality in practice .",
    "conversely , we describe a generic solution to this problem for any functionality in section [ sec : hmpc ] , which makes secure mpc feasible for arbitrarily large networks .    note that with secure addition and multiplication protocols , we can construct a circuit for any arithmetic function . for turing - completeness",
    ", we need to handle control flow as well . for conditional statements involving secret values",
    ", this means evaluating both branches and for dynamic loops we add randomness to the execution .",
    "our general - purpose mpc interpreter is based on these core concepts and other optimizations presented throughout the paper .",
    "so far we have discussed the _ privacy _ property .",
    "_ liveness _ , namely  that computations will terminate and the system will make progress , is also implied given an honest majority , since it is all that is needed for reconstruction of intermediate and output values .",
    "however , in the current framework there are no guarantees about the _ correctness _ of the output ; party @xmath21 could send an invalid result throughout the computation process which may invalidate the output . while bgw @xcite presented an information - theoretic solution to verifiable mpc , its practical complexity could be as bad as @xmath22 , given a naive implementation @xcite .",
    "therefore , our goal is to design an mpc framework that is secure against malicious adversaries but has the same complexity of the semi - honest setting ( @xmath20 ) .",
    "later , we would further optimize this as well .",
    "very recently , baum et al . developed a publicly auditable secure mpc system that ensures correctness , even when all computing nodes are covertly malicious , or all but a single node are actively malicious @xcite .",
    "their state - of - the - art results are based on a variation of spdz ( pronounced _ speedz _ ) @xcite and depend on a public append - only bulletin board , which stores the trail of each computation .",
    "this allows any auditing party to check the output is correct by comparing it to the public ledger s trail of proofs .",
    "our system uses the blockchain as the bulletin board , thus our overall security is reduced to that of the hosting blockchain .    *",
    "spdz*. a protocol secure against malicious adversaries ( with dishonest majority ) , providing correctness guarantees for mpc .",
    "in essence , the protocol is comprised of an expensive offline ( pre - processing ) step that uses _ somewhat homomorphic encryption _ ( or _ she _ ) to generate shared randomness .",
    "then , in the online stage , the computation is similar to the passive case and there is no expensive public - key cryptography involved . in the online stage , every share is represented by the additive share and its mac , as follows :    @xmath23_{p_i } , [ \\gamma(s)]_{p_i}),\\ s.t.\\       \\gamma(s ) = \\alpha s,\\end{aligned}\\ ] ]    where @xmath24 is a fixed secret shared mac key and @xmath25 denotes the modified secret sharing scheme which is also additively homomorphic . @xmath25-sharing works without opening the shares of the global mac key @xmath24 , so it can be reused .",
    "as before , multiplication is more involved .",
    "multiplication consumes @xmath26 triplets , s.t .",
    "@xmath27 , that are generated in the pre - processing step ( many such triplets are generated ) . then , given two secrets @xmath15 and @xmath16 , that are shared using @xmath25-sharing , secret - sharing the product @xmath28 is achieved by consuming a triplet as follows ",
    "@xmath29    as mentioned , generating the triplets is an expensive process based on she . the full protocol including security proofs is found in @xcite .",
    "verification is achieved by solving ",
    "@xmath30    where @xmath7 is the secret that , without loss of generality , can be the reconstructed result of any secure computation .",
    "intuitively , this is just a comparison of the computation over the mac against the computed result times the secret mac key .",
    "the reason we are not performing actual comparison is so that @xmath24 remains secret and can be reused .",
    "we can now see that @xmath25-sharing has similar properties to sss , namely  it is additively homomorphic and requires a re - sharing round for multiplication ( @xmath20 communication complexity ) , but in addition ",
    "it ensures correctness against up to @xmath31 active adversaries . the offline round",
    "is easily amortized over many computations and can be computed in parallel while other computations are running , so it does not significantly affect the overall efficiency .    * publicly verifiable spdz*. in the publicly verifiable case ,",
    "macs and commitments are stored on the blockchain , therefore making the scheme secure even if all @xmath4 computing parties are malicious .",
    "we follow the representation of @xcite , which defines @xmath32-sharing , as ",
    "@xmath33    where @xmath7 is the secret , @xmath34 is a random value and @xmath35 is the pedersen commitment , with @xmath36 serving as generators . @xmath32-sharing preserves additive homomorphic properties , and with a slightly modified multiplication protocol we can re - use the same idea of generating triplets ( @xmath37 ) offline .",
    "a key observation here is that the nodes only need to compute over @xmath25-shared values and not over the commitments .",
    "these are stored on the blockchain and could later be addressed by any public validator that has the output . even if a single node has broken its commitment , it would be evident to the auditor .",
    "information - theoretic results show that secure mpc protocols require each computing node to interact with all other nodes ( @xmath20 communication complexity ) and a constant number of rounds . in the case of a lsss",
    ", this computational complexity applies to every multiplication operation , whereas addition operations can be computed in parallel , without intercommunication .",
    "as previously mentioned , secure addition and multiplication protocols are sufficient to construct a general - purpose interpreter that securely evaluates any code @xcite .",
    "cohen et al @xcite recently proposed a method of simulating an @xmath4-party secure protocol using a log - depth formula of constant - size mpc gates , as illustrated in figure [ fig : builder2 ] .",
    "we extend their result to lsss and are able to reduce the communication - complexity of multiplication from quadratic to linear , at the cost of increased computation complexity , which is parallelized .",
    "figure [ fig : mpc_sim2 ] illustrates how vanilla mpc is limited by the number of parties , while our implementation scales up to arbitrarily large networks .              to maximize the computational power of the network ,",
    "we introduce a network reduction technique , where a random subset of the entire network is selected to perform a computation .",
    "the random process preferentially selects nodes based on load - balancing requirements and accumulated reputation , as is measured by their publicly validated actions .",
    "this ensures that the network is fully utilized at any given point .",
    "code evaluated in our system is guaranteed not to leak any information unless a dishonest majority colludes ( @xmath38 ) .",
    "this is true for the inputs , as well as any interim variables computed while the code is evaluated .",
    "an observant reader would notice that as a function is evaluated from inputs to outputs , the interim results generally become less descriptive and more aggregative .    for simple functions or functions involving very few inputs , this may not hold true , but since these functions are fast to compute -",
    "no additional steps are needed .",
    "however , for computationally expensive functions , involving many lines of code and a large number of inputs , we can dynamically reduce the number computing nodes as we progress , instead of having a fixed @xmath4 for the entire function evaluation process .",
    "specifically , we design a feed - forward network ( figure [ fig : ffnet ] ) that propagates results from inputs to outputs . the original code is reorganized so that we process addition gates on the inputs first , followed by processing multiplication gates .",
    "the interim results are then secret - shared with @xmath39 nodes , and the process is repeated recursively .",
    "= [ < -,shorten < = 1pt ] = [ circle , fill = black!25,minimum size=17pt , inner sep=0pt ] = [ neuron , fill = green!50 ] ; = [ neuron , fill = red!50 ] ;",
    "= [ neuron , fill = blue!50 ] ; = [ text width=4em , text centered ]    / in 1, ... ,5 ( i- ) at ( 0,- ) ;    / in 1, ... ,5 node[hidden neuron ] ( h- ) at ( , -cm ) ;    / in 1, ... ,3 node[input neuron ] ( h1- ) at ( 2*,-cm ) ;    / in 1, ... ,3 node[hidden neuron ] ( h2- ) at ( 3*,-cm ) ;    \\(o ) ;    in 1, ... ,5 in 1, ... ,5 ( i- ) edge ( h- ) ;    in 1, ... ,5 in 1, ... ,3 ( h- ) edge ( h1- ) ;    in 1, ... ,3 in 1, ... ,3 ( h1- ) edge ( h2- ) ;    in 1, ... ,3 ( h2- ) edge ( o ) ;    ( il ) addition layer@xmath40 ; ( hl ) mult .",
    "layer@xmath40 ; ( hl1 ) addition layer@xmath41 ; ( hl2 ) mult .",
    "layer@xmath41 ; ( ol ) output layer ;      as previously mentioned , end - to - end decentralized apps are developed using _ private contracts _ , which are further partitioned to on - chain and off - chain execution .",
    "off - chain code returns results privately , while sending correctness proofs to the blockchain . for simplicity , the scripting language is similar in syntax to well - known programming languages .",
    "there are two major additions to the scripting language that require more detail .",
    "developers should use the _ private _ keyword to specify private objects .",
    "this automatically ensures that any computation involving those objects remains secure and private .",
    "when working with private objects , the data themselves are not locally available , but rather a reference of them .",
    "there are three distinct decentralized databases living in the system , each accessible through a global singleton dictionary . specifically     1 .",
    "* public ledger*. the blockchain s public ledger can be accessed and manipulated using @xmath42 .",
    "for example , @xmath43 \\gets 1 $ ] would update key @xmath44 for all nodes .",
    "since the ledger is completely public and append - only , the entire history is stored as well and ( read - only ) accessible using @xmath45 .",
    "2 .   * dht*. off - chain data are stored on the dht and accessible in the same way the public ledger is . by default",
    ", data are encrypted locally before transmission and only the signing entity can request the data back . otherwise , using @xmath46 , where @xmath44 is the key",
    ", @xmath47 is the value and @xmath48 is a predicate , namely ",
    "@xmath49 , sets @xmath47 to be accessible through @xmath44 if and only if @xmath48 is satisfied .",
    "we supply several built - in predicates in the language such as limiting access to a list of public keys .",
    "if encryption is turned off , the default predicate is @xmath50 , so the data are public but distributed off - chain .",
    "* mpc*. syntactically , using mpc is equivalent to dht , but the underlying process differs . in particular , executing @xmath51 secret shares @xmath47 .",
    "the shares are distributed to potential computing parties that store their shares in their local view .",
    "now @xmath48 can be used to specify who can reference the data for computation using @xmath52 $ ] , without revealing @xmath47 . by default",
    ", only the original dealer can ask for the raw data back by running @xmath53 , which similar to the sharing process , collects shares from the various parties and reconstructs the secret value locally .",
    "in addition , any other entities belonging to the same shared identity can reference the data for computation . for details about shared identities see section [ sec : identities ] .",
    "note that for simplicity , we addressed all keys in @xmath42 , @xmath54 and @xmath55 dictionaries as using a single namespace , whereas in practice finer granularity is available , so that they can be segmented to databases , tables , and finer hierarchies .",
    "in this section we show how enigma interoperates with a blockchain .",
    "specifically , we detail how complex identities are formed using digital signatures , which are automatically compatible with blockchains .",
    "we then continue to describe in detail the core protocols linking enigma s off - chain storage and computation to a blockchain .",
    "a recent survey paper divided blockchain - inspired technologies into two : fully decentralized permission - less ledgers ( e.g. , bitcoin , ethereum ) and semi - centralized permissioned ledgers ( e.g. , ripple ) @xcite . in the paper ,",
    "the author argues that there is an inherent trade - off between having a pseudo - anonymous system , where no one is trusted and all information must remain public , and having a somewhat centralized system with trusted nodes that can verify true underlying identities . with an off - chain technology linked to a blockchain , this trade - off can be avoided while the network remains fully decentralized .",
    "for this to work , we define an extended version of identities , one that captures _",
    "shared identities _ across multiple entities and their semantic meaning .",
    "formally , the pseudo - anonymous portion of a shared identity is a @xmath56-tuple     @xmath57    where @xmath4 denotes the number of parties",
    ". it should be clear that for @xmath58 we revert to the special pseudo - identity case .    to complete our definition of shared identities , we incorporate the idea of meta - data .",
    "meta - data encapsulates the underlying semantic meaning of an identity .",
    "primarily , these include public access - control rules defined by the same predicates mentioned earlier , which the network uses to moderate access - control , along with any other public or private data that is relevant .",
    "for example , alice may want to share with bob her height , but not her weight .",
    "alternatively , she may not even want to tell bob her exact height , but will allow him to use her height in aggregate computations . in this case ,",
    "alice and bob can establish a shared identity for this purpose .",
    "alice invokes a private contract that shares her height using @xmath59 = alice\\_height$ ] , which bob can reference for computations , without accessing alice s height value directly .",
    "the default mpc predicate establishes that alice s pseudonym is the owner of the shared information and that bob has restricted access to it .",
    "the predicate , shared identity s list of addresses and a reference to the data are stored on the blockchain and collectively define the public meta - data , or in other words - information related to the identity that is not sensitive but should be used to publicly verify access rights .",
    "any additional meta - data that is private , or in other words that only alice , bob and perhaps several others should have access to could be securely stored off - chain using the dht .",
    "it should now be clear how our system solves the need for trusted nodes .",
    "as always , public transactions are validated through the blockchain . with shared identities and predicates governing access - control stored on the ledger , the blockchain can moderate access to any off - chain resources . for anything else involving private meta - data , the off - chain network can act as a trustless privacy - preserving verifier .",
    "we now discuss the core protocols linking the blockchain to off - chain resources .",
    "specifically , we elaborate on how identities are formed and stored on the ledger ; and how off - chain storage ( dht ) and computation ( mpc ) requests are routed through the blockchain , conditional on satisfying predicates .",
    "protocol [ alg : shared_identity ] describes the process of creating a shared identity and protocol [ alg : check_policy ] implements the publicly - verifiable contract for satisfying predicates .",
    "@xmath60 parties , @xmath61 ledger @xmath42 stores reference to the shared identity .",
    "@xmath62 @xmath63 @xmath64 @xmath65 @xmath66 \\gets a[p_i]$ ] @xmath67 * send * signed tx(m ) to the network + @xmath68 \\gets acl$ ]    @xmath69the requesting party signature , @xmath70 the shared identity s address , @xmath71  a predicate verifying if @xmath21 has sufficient access rights . @xmath72 . @xmath73",
    "@xmath74 $ ] @xmath75 * return * @xmath7      storing and loading data for direct access via the dht are shown in protocol [ alg : data ] . for storing data ,",
    "write permissions are examined with the given @xmath76 predicate .",
    "the storing party can provide a custom predicate for verifying who can read the data .",
    "this is the underlying process that is abstracted away using the @xmath54 singleton object in the scripting language .",
    "@xmath69 , @xmath70 , @xmath77 ( data ) , @xmath78  a predicate for verifying future read access .",
    "if successful , returns @xmath79  the pointer to the data ( predicate ) , or @xmath80 o.w .",
    "@xmath81a_x = ( addr_p x)@xmath81l[a_x]q_read^(x)@xmath81dht[a_x ] x@xmath82a_x@xmath83@xmath84pk^(p_i)_sig@xmath85addr_p@xmath85a_x@xmath86x@xmath87@xmath88q_read^(x ) l[a_x]@xmath89 * return * @xmath90 $ ] * return * @xmath80      share and compute , illustrated in protocol [ alg : share ] , are the mpc equivalent of store and load protocols , since they enable processing .",
    "internally , they store and load shares from the dht and allow working with references to the data while keeping the data secure .",
    "@xmath69 , @xmath70 , @xmath77 ( data ) , @xmath91  reference for computation , @xmath92  predicate verifying computation rights . if successful , returns pointer to @xmath91 for future computation , or @xmath80 o.w .",
    "@xmath93_p \\gets vss(n , t)$ ] @xmath94 sample @xmath4 peers * send * @xmath93_p^{(peer)}$ ] to @xmath95 on a secure channel * return * @xmath96    @xmath69 , @xmath70 , @xmath97  reference data address , @xmath98  unsecure code to be rewritten as a secure protocol .",
    "if successful , returns @xmath99 without revealing @xmath77 , or @xmath80 o.w .",
    "@xmath100 @xmath101 generate secure computation protocol from @xmath98 * return * @xmath102 * return * @xmath80",
    "since enigma is not a cryptocurrency or a blockchain , the incentive scheme is based on fees rather than mining rewards , where nodes are compensated for providing computational resources .",
    "full nodes are required to provide a security deposit , making malicious behaviour punishable .",
    "a possible attack on mpc protocols takes advantage of the lack of guaranteed fairness in the protocol . under certain conditions ,",
    "a malicious party can learn the output and abort the protocol before other parties learn the output as well . while this attack , when carried out by a majority , can not be prevented , it can be penalized .",
    "using bitcoin security deposits for punishing malicious nodes in mpc has been investigated by several scholars recently @xcite .",
    "we use a similar model , and extend it to penalize other malicious behaviors such as breaking correctness , which is validated by the spdz protocol ( see section [ sec : comp_correct ] ) .    to participate in the network , store data , perform computations and receive fees , every full - node must first submit a security deposit to a private contract . after each computation",
    "is completed , a private contract verifies correctness and fairness were maintained .",
    "if a node is found to lie about their outcome or aborts the computation prematurely , it loses the deposit which is split between the other honest nodes .",
    "the computation is continued without the malicious node ( e.g. , by setting its share of the data to 0 ) .",
    "every request in the network for storage , data retrieval , or computation has a fixed price , similar to the concept of ` gas ' in ethereum . unlike ethereum where every computation is run by every node , in enigma",
    "different nodes execute different parts of each computation and need to be compensated according to their contribution , which is measured in rounds .",
    "recall that every function is reduced to a circuit of addition and multiplication gates , each of which takes one or more rounds .",
    "a node participating in a computation is paid the weighted sum of the number of rounds it contributed to and the operations it performed ( addition , multiplication ) .",
    "since the platform is turing - complete the exact cost of a request can not always be pre - calculated .",
    "therefore , once the computation is finalized , the cost of each request is deducted from an account balance each node maintains . a request will not go through unless the account balance is over a minimum threshold .",
    "fees for data storage are market based and time limited",
    ". the hosting contract is automatically renewed using the owner s account balance . if the balance is too low , access to the data will be restricted and unless additional funds are deposited , the data will be deleted within a certain amount of time .",
    "direct consumer to business marketplace for data . with guaranteed privacy , autonomous control and increased security , consumers will sell access to their data . for example , a pharmaceutical company looking for patients for clinical trials can scan genomic databases for candidates .",
    "the marketplace would eliminate tremendous amounts of friction , lower costs for customer acquisition and offer a new income stream for consumers .",
    "many companies today store large amounts of customer data .",
    "they use the data to provide personalized services , match individual preferences , target ads and offers , etc . with enigma , companies can use the data for the same purposes they do today , without actually storing or processing the data on their servers , removing security risks and assuring the privacy of their customers .",
    "large organizations can use enigma to protect their data and trade secrets from corporate espionage and rogue employees .",
    "employees can still use and analyze data for the benefit of the organization , but wont be able to steal any data .",
    "productivity inside organizations would be improved since more people can have access to more data , and costs on security would be lower .",
    "voice , face and fingerprint recognition stored and computed on enigma . only the user ever has access to these data .",
    "policies for when and if additional keys are required can be set inside a private contract , unexposed to any potential attacker .",
    "authenticating and securely storing identities in a fully anonymous , yet provably correct , fashion is trivial on enigma and requires as little as several lines of code .",
    "the process is simple  a user secret - shares her personal information required for authentication .",
    "when the user logs in , an authenticating private contract is executed , validating the user and linking her real identity with a public pseudo - identity .",
    "the process is completely trust - less and privacy - preserving .          store and share data with third parties while maintaining control and ownership . set specific policies for each service with private contracts .",
    "identity is truly protected since the decision to share data is always reversible - services have no access to raw data , all they can do is run secure computations on it .      run a full - service crypto bank without exposing private internal details .",
    "users can take loans , deposit cryptocurrencies or buy investment products with the autonomous control of the blockchain , without publicly revealing their financial situation .",
    "votes on anything , from political elections to company board meetings , without exposing anything besides the final outcome .",
    "not only is the privacy of each voter is maintained , even the actual vote - count can remain private .",
    "for example , if the elections require any kind of majority vote , but no details about the distribution , a unanimous decision would be indistinguishable from one decided by a single vote .      1 .",
    "decentralized private key generation ",
    "multiple enigma nodes locally create a segment of the key , whereas the full key is only ever assembled by the user .",
    "no trail of evidence is left anywhere .",
    "decentralized transaction signing  transactions signed without ever exposing the private key or leaving a trail .",
    "3 .   decentralized controls - set spending limits , multi - sig , checklocktimeverify like controls , and more with a private script .",
    "lock time , limits or number of required signatures are completely invisible to a potential attacker .",
    "clark , joseph bonneau andrew miller jeremy , arvind narayanan joshua a. kroll edward , and w. felten .",
    "`` sok : research perspectives and challenges for bitcoin and cryptocurrencies . '' , security and privacy ( sp ) , 2015 ieee symposium on .",
    "ieee , 2015 .",
    "ben - or , michael , shafi goldwasser , and avi wigderson .",
    "`` completeness theorems for non - cryptographic fault - tolerant distributed computation .",
    "'' proceedings of the twentieth annual acm symposium on theory of computing .",
    "acm , 1988 ."
  ],
  "abstract_text": [
    "<S> a peer - to - peer network , enabling different parties to jointly store and run computations on data while keeping the data completely private . </S>",
    "<S> enigma s computational model is based on a highly optimized version of secure multi - party computation , guaranteed by a verifiable secret - sharing scheme . for storage , </S>",
    "<S> we use a modified distributed hashtable for holding secret - shared data . </S>",
    "<S> an external blockchain is utilized as the controller of the network , manages access control , identities and serves as a tamper - proof log of events . </S>",
    "<S> security deposits and fees incentivize operation , correctness and fairness of the system . </S>",
    "<S> similar to bitcoin , enigma removes the need for a trusted third party , enabling autonomous control of personal data . for the first time , users are able to share their data with cryptographic guarantees regarding their privacy . </S>"
  ]
}
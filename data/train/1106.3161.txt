{
  "article_text": [
    "there is little question that the computer has caused a profound change in society . at our fingertips",
    "are devices that are performing billions of computations a second , and the same is true of embedded devices in all manner of things . in the same way that much of mathematics was developed to understand the physics of the world around us , developing mathematics to understand computation is an imperative .",
    "it is little wonder that the famous @xmath0 question is one of the clay prize questions and is regarded by some as the single most important problem in mathematics .",
    "this question is one in _ complexity theory _ which seeks to understand the _ resources _ ( such as time or space ) needed for computation .",
    "the goal of this paper is to describe the methods and development of an area of complexity theory called _",
    "parameterized complexity_. this is a _ fine - grained _ complexity analysis which is often more attuned to analyzing computational questions which arise _ in practice _ than traditional worst case analysis .",
    "the idea here is that if you are working in some computational science and wish to understand what is _",
    "_ feasible _ _ in your area , then perhaps this is the methodology you should know .    as articulated by the first author in  @xcite",
    ", people working in the area tend to be a bit schizophrenic in that , even in computer science , paper reviews range from saying that `` parameterized complexity is now well known so why are you including this introductory stuff ? '' , to the other extreme where reviewers say that they have never heard about it .",
    "whilst the use of parameterized complexity in applications has been growing at a very fast rate , there still remain significant groups who seem unaware of the techniques and ideas of the area .",
    "everyone , apparently , is aware of np - completeness and seems vaguely aware of randomized or approximation techniques .",
    "however , this seems not to be the case yet for parameterized complexity and/or algorithms .",
    "moreover , it is certainly not the case that parameterized complexity has become part of the standard curriculum of theoretical computer science as something all researchers in complexity should know .      in the first book on the subject by downey and fellows",
    "@xcite , much is made of the issue `` what is the role of complexity theory ? '' .",
    "after the work of alan turing and others in the mid-20th century , we understand what it means for something to be computable .",
    "but for _ _ actual _ _ computations , it is not enough to know that the problem is computable in theory . if we need to compute something it is not good if the running time will be so large that no computer ever conceived will be able to run the computation in the life time of the universe",
    "hence , the _ _ goal _ _ is to understand what is _ _",
    "feasible__. the point is that for _ _ any _ _ combinatorial problem , we will deal with only a small finite fraction of the universe , so how do we quantify this notion of feasibility ?",
    "classically , this is achieved by identifying _ _ feasibility _ _ with _ _ polynomial - time computability . _ _",
    "when we first learn of this , many of us immediately think of polynomial like @xmath1 and say `` surely that is not feasible ! '' .",
    "we tend to forget that , because of such intuitive objections , the original suggestions that asymptotic analysis was a reasonable way to measure complexity and polynomial time was a reasonable measure of feasibility , were initially quite controversial .",
    "the reasons that the now central ideas of asymptotic polynomial time ( p - time ) and np - completeness have survived the test of time are basically two .",
    "firstly , the methodologies associated with polynomial - time and p - time reductions have proved to be readily amenable to mathematical analysis in most situations . in a word",
    ", p has good closure properties .",
    "it offers a readily negotiable mathematical currency . secondly , and even more importantly",
    ", the ideas seem to work _ _ in practice _ _ :",
    "for `` natural '' problems the universe seems _ _ kind _ _ in the sense that ( at least historically ) if a `` natural '' computational problem is in p then usually we can find an algorithm having a polynomial running time with small degree and small constants .",
    "this last point , while seeming a religious , rather than a mathematical , statement , seems the key driving force behind the universal use of p as a classification tool for `` natural '' problems .    even granting this ,",
    "the use of things like np - completeness is a very coarse tool .",
    "we are given some problem and show that it is np - complete .",
    "what to do ? as pointed out in garey and johnson @xcite , this is only an initial foray .",
    "all such a result says is that our hope for an exact algorithm for the general problem which is feasible is likely in vain .",
    "the problem with the standard approach of showing np - completeness is that it offers no methodology of seeking practical and feasible algorithms for more restricted versions of the problem which might be both relevant and feasible .",
    "as we will see , parameterized complexity seeks to have a conversation with the problem which enables us to do just that .",
    "the idea behind parameterized complexity is that we should look more deeply into the actual _ _ structure _ _ of the problem in order to seek some kind of hidden feasibility .",
    "classical complexity views a problem as an instance and a question .",
    "the running time is specified by the input s size .",
    "+ _ question : _ when will the input of a problem coming from `` real life '' have no more structure than its size ?    _ answer : _ _ never ! _ + for real - world computations we _ _ always _ _ know more about the problem .",
    "the problem is planar , the problem has small width , the problem only concerns small values of the parameters .",
    "cities are regular , objects people construct tend to be built in some comprehensible way from smaller ones constructed earlier , people s minds do not tend to work with more than a few alternations of quantifiers , etc .",
    "thus , _ _ why not have a complexity theory which exploits these structural parameters ? _ _ _ _ why not have a complexity theory more _ _ fine - tuned _ _ to actual applications ? _ _",
    "before we launch into examples and definitions , we make some remarks about what this article offers .",
    "the area of parameterized complexity ( as an explicit discipline ) has been around for around 20 years .",
    "the group or researchers who have adopted the methodology most strongly are those ( particularly in europe ) who are working in _ _ applications__. what has emerged is a very rich collection of distinctive positive techniques which should be known to researchers in computational applications in areas as diverse as linguistics , biology , cognition , physics , etc .",
    "the point here is that once you focus on a an extended `` computational dialog '' with the problem new techniques emerge around this .",
    "these techniques vary from simple ( and practical ) local reduction rules ( for example karsten weihe s solution to the `` europe train station problem '' @xcite ) to some which are highly theoretical and use some very deep mathematics ( for example , the recent proof that topological embedding is fixed - parameter tractable by grohe , kawarabayashi , marx , and wollan @xcite , which uses most of the structure theory of the graph minors project of robertson and seymour  @xcite ) .",
    "the second part of this article looks at these positive techniques systematically , and we hope that the reader will find useful tools there . this area is still rapidly developing , and there are many internal contests amongst the researchers to develop techniques to beat existing bounds .",
    "for further details , the reader can see the web site http://fpt.wikidot.com/[http://fpt.wikidot.com/ ]  .    the first part of the article is devoted to limitations .",
    "it is worth mentioning that the area is concerned with tractability _ _ within polynomial time . _",
    "_ hence classical methods do not readily apply .",
    "the question is `` how does the problem resides in polynomial time '' . to illustrate this , we begin with the basic motivating examples .",
    "+ vertex cover - vertex cover , but this seems unnecessarily notational .",
    "we will usually supress the aspect of the problem being regarded as a parameter , or even that the problem is considered as a parameterized one when the context is clear .",
    "we believe that this will aide the general readability of the paper . ]",
    "+ _ instance : _",
    "a graph @xmath2 .",
    "+ _ parameter : _ a positive integer @xmath3 .",
    "+ _ question : _  does @xmath4 have a vertex cover of size @xmath5 ?",
    "( a _ vertex cover _ of a graph @xmath4 is a set @xmath6 such that for all edges @xmath7 of @xmath4 , either @xmath8 or @xmath9 . )",
    "+ dominating set + _ instance : _ a graph @xmath4 .",
    "+ _ parameter : _ a positive integer @xmath3 .",
    "+ _ question : _ does @xmath4 have a dominating set of size @xmath3 ? ( a _ dominating set _ is a set @xmath6 where , for each @xmath10 there is a @xmath11 such that @xmath12 . )",
    "+ of course both of these problems ( without the parameter ) are famously np - complete by the work of karp  @xcite . with the parameter _",
    "_ then both of the problems are in polynomial time simply by trying all of the @xmath13 subsets of size @xmath3 where @xmath14 is the number of vertices of the input graph @xmath4 .",
    "what we now know is that there is an algorithm running in time @xmath15 ( see @xcite ) ( i.e. , linear time for a fixed @xmath3 and with an additive component that is mildly exponential in @xmath3 ) , whereas the only known algorithm for dominating set is to try all possibilities .",
    "this takes time more or less @xmath16 .",
    "moreover , we remark that the methods for solving vertex cover are simple reduction rules which are `` industrial strength '' in that they run extremely well in practice ( e.g. @xcite ) , even for @xmath3 beyond which would seem reasonable , like @xmath17 .",
    "the reader might wonder : does this matter ?",
    "table [ table3 ] from the original book @xcite illustrates the difference between a running time of @xmath18 ( that is , where exaustive search is necessary ) and a running time of @xmath19 .",
    "the latter has been achieved for several natural parameterized problems .",
    "( in fact , as we have seen above , the constant @xmath20 can sometimes be significantly improved and its contribution can sometimes even be additive . )    even before we give the formal definitions , the intent of the definitions will be clear . if we have algorithms running in time @xmath21 , for some @xmath22 that is independent of @xmath3 , we regard this as being ( fixed - parameter ) tractable , and if @xmath22 increases with @xmath3 , then this problem is regarded as being intractable . in the latter case ,",
    "we can not usually prove intractability as it would separate p from np , as it would in the case of dominating set , for example .",
    "but we can have a _ _ completeness programme _ _ in the same spirit as np - completeness .",
    "we mention that the methodology has deep connections with classical complexity .",
    "for example , one of the more useful assumptions for establishing lower bounds in classical complexity is what is called the _ _ exponential time hypothesis _ _ ( eth ) which is that not only is @xmath14-variable 3sat not in polynomial time , but in fact it does not have an algorithm running in subexponential time .",
    "( impagliazzo , paturi and zane @xcite ) . with this hypothesis ,",
    "many lower bounds can be made rather sharp . recently",
    "chen and grohe demonstrated an isomorphism between subexponential time complexity and parameterized complexity @xcite .",
    "the connection between subexponential time complexity and parameterized complexity was noticed long ago by abrahamson , downey and fellows @xcite .",
    "another notable connection is with _ _",
    "polynomial time approximation schemes__. here the idea is to give a solution which is approximate to within @xmath23 of the correct solution .",
    "often the pcp theorem allows us to show that no such approximation scheme exists unless p@xmath24np .",
    "but sometimes they do , but can have awful running times .",
    "for example , here is a table from downey @xcite :    * arora @xcite gave a @xmath25 ptas for euclidean tsp * chekuri and khanna @xcite gave a @xmath26 ptas for multiple knapsack * shamir and tsur @xcite gave a @xmath27 ptas for maximum subforest * chen and miranda @xcite gave a @xmath28 ptas for general multiprocessor job scheduling * erlebach _ et al . _",
    "@xcite gave a @xmath29 ptas for maximum independent set for geometric graphs .",
    "table [ table1 ] below calculates some running times for these ptas s with a 20% error .",
    ".the running times for some recent ptas s with 20% error . [ cols=\">,>\",options=\"header \" , ]     downey @xcite argues as followsby anyone s measure , a running time of @xmath30 is bad and @xmath31 is even worse .",
    "the optimist would argue that these examples are important in that they prove that ptas s exist , and are but a first foray .",
    "the optimist would also argue that with more effort and better combinatorics , we will be able to come up with some @xmath32 ptas for the problems .",
    "for example , arora @xcite also came up with another ptas for euclidean tsp , but this time it was nearly linear and practical . _    but this situation is akin to p vs np .",
    "why not argue that some exponential algorithm is just the first one and with more effort and better combinatorics we will find a feasible algorithm for satisfiability ?",
    "what if a lot of effort is spent in trying to find a practical ptas s without success ? as with p vs np , what is desired is either an _ efficient - approximation algorithm that runs in @xmath33 steps .",
    "if , additionally , @xmath34 is a polynomial function then we say that we have a _ fully polynomial - time approximation scheme ( fptas)_. ] _ ptas ( eptas ) , or a proof that no such ptas exists .",
    "a primary use of np - completeness is to give compelling evidence that many problems are unlikely to have better than exponential algorithms generated by complete search . ",
the methods of parameterized complexity allow us to address the issue . clearly , the bad running times are caused by the presence of @xmath35 in the exponent .",
    "what we could do is parameterize the problem by taking the parameter to be @xmath36 and then perform a reduction to a kind of core problem ( see subsection  [ ptasc ] ) . if we can do this , then _ _ not only the particular algorithm is infeasible , but moreover , there can not be a feasible algorithm unless something unlikely ( like a miniature p@xmath24np ) occurs . _ _",
    "finally , before we move to formal definitions , we mention other strategies which attempt to understand what is feasible .",
    "one that springs to mind is the theory of average - case complexity .",
    "this has not really been widely applied as the distributions seem rather difficult to apply .",
    "similar comments apply to the theory of smoothed analysis .",
    "in fact one of the reasons that parameterized complexity has been used so often in practice is that it is widely applicable .",
    "we also mention that often it can be used to explain unexpected tractability of algorithms .",
    "sometimes they seem to work because of underlying hidden parameters in the input .",
    "for example , the number of `` lets '' in some structured programming languages in practice is usually bounded by some constant , and sometimes engineering considerations make sure that , for example , the number of wafers in vlsi design is small .",
    "it is even conceivable there might be a parametric explanation of the tractability of the simplex algorithm .",
    "if the reader finds this all useful , then we refer him / her to two recent issues of the _ _ the computer journal _ _ @xcite devoted to aspects and applications of parameterized complexity , to the survey of downey and mccartin @xcite on parameterized algorithms , the ( somewhat dated ) survey downey @xcite for issues in complexity , and other articles such as @xcite as well as the books by downey and fellows @xcite , niedermeier @xcite and flum and grohe @xcite .",
    "the paper is organized as follows :    in section [ preliminaries ] we will give the basic definitions and some examples to show the kinds of parameterizations we can look at .",
    "we consider as fortunate the fact that a problem can have different parameterizations with different complexities .    in section [ intract ]",
    ", we will introduce some of the basic hardness classes , and in particular the _ _ main standard _ _ of hardness , the class @xmath37 $ ] .",
    "the gold standard is established by an analog of the cook - levin theorem discussed in subsection [ analog ] .",
    "parameterized reductions are more refined than the corresponding classical ones , and , for instance , it would appear that natural parameterized versions of 3-cnf sat and cnf sat do _ _",
    "not _ _ have the same parameterized complexity . in subsection [ w_hiera ]",
    "we see how this gives rise to a hierarchy based on logical depth .",
    "we also mention the flum - grohe @xmath38 $ ] hierarchy which is another parameterized hierarchy of problems based on another measure of logical depth . in subsections [ ptasc ] and [ optimality ]",
    "we look at ptas s , approximation , and lower bounds based on strong parameterized hypotheses . in subection  [ ocapp ]",
    "we look at other applications to classical questions which are sensitive to combinatorics in polynomial time , and in subsections  [ opcla ] and [ parapp ] look at other parameterized classes such as counting classes and the notion of parameterized approximation .",
    "( the latter seeks , for example , an fpt - algorithm which on input @xmath3 either delivers a `` no size @xmath3 dominating set '' or produces one of size @xmath39 . ) subsection  [ limker ] deals with an important recent development . one of the most important practical techniques _ _ kernelization . _ _ here one takes a problem specified by @xmath40 and produces , typically in polynomial time , a small version of the problem : @xmath41 such that @xmath42 is a yes iff @xmath41 is a yes , and moreover @xmath43 and usually @xmath44 .",
    "this technique is widely used in practice as it usually relies on a number of easily implementable reduction rules as we will discuss in subsection [ kernelization ] .",
    "we will look at recent techniques which say when this technique can be used to give @xmath45 as above with @xmath46 polynomially bounded .",
    "the final part of the complexity section deals with _ _ some _ _ of the other classes we have left out .    in section [ algorithms ] , we turn to techniques for the design of parameterized algorithms .",
    "we will focus mainly on graphs ; for to lack of space we do not discuss too many applications , except _ _ en passant__.    the principal contributor of high running times in classical algorithms comes from branching , and large search trees .",
    "for this reason we begin by looking at methods which restrict the branching in subection [ derand ] , including bounded search trees and greedy localization .",
    "then in subection [ fasoc ] we look at the use of automata and logic in the design of parameterized algorithms .    in turn",
    "this leads to meta - theoretical methods such as applications of courcelle s theorem on graphs of bounded treewidth , and other methods such as local treewidth and first order logic ( fol ) .",
    "this is discussed in subection [ cource ] and [ ftpfol ] .    in subections [ graphminors ] and [ irrelevant ]",
    "we look at the highly impractical , but powerful methods emerging from the graph minors project .",
    "later , we examine how these methods can be sped up .",
    "having worked in the stratosphere of algorithm design we return to focus on singly - exponential algorithm design techniques such as iterative compression , bidimensionality theory , and then in subsection [ kernelization ] move to kernelization , and finish with variations .    of course , often we will use all of this in combination . for example , we might kernelize , then begin a branch tree of some bounded size , and the rekernelize the smaller graphs .",
    "it is often the case that this method is provably faster and certainly this is how it it is often done in practice .",
    "however , we do not have space in this already long paper to discuss such refinements in more detail .",
    "the first thing to do is to define a proper notion of tractability for parameterized problems .",
    "this induces the definition of the parametrized complexity class fpt , namely the class of fixed - parameter tractable problems .",
    "a _ parameterized problem _ ( also called _ parameterized language _ ) is a subset @xmath47 of @xmath48 where @xmath49 is some alphabet . in the input @xmath50 of a parameterized problem ,",
    "we call @xmath51 as the",
    "_ main part of the input _ and @xmath3 as the _ parameter of the input_. we also agree that @xmath52 .",
    "we say that @xmath47 is _ fixed parameter tractable _ if there exists a function @xmath53 and an algorithm deciding whether @xmath54 in @xmath55 steps , where @xmath22 is a constant not depending on the parameter @xmath3 of the problem .",
    "we call such an algorithm _ fpt - algorithm _ or , more concretely , to visualize the choice of @xmath34 and @xmath22 , we say that @xmath56-fpt . we define the parameterized class fpt as the one containing all parameterized problems that can be solved by an fpt - algorithm .    observe that an apparently more demanding definition of an fpt - algoritm would ask for algorithms runnning in @xmath57 steps , since then the exponential part would be additive rather than multiplicative .",
    "however , this would not define a different parameterized complexity class . to see this , suppose that some parameterized problem @xmath58 can be solved by an algorithm @xmath59 that can decide whether some @xmath60 belongs in @xmath47 in @xmath61 steps . in case @xmath62 , the same algorithm requires @xmath63 steps , while if @xmath64 , the algorithm runs in less than @xmath65 steps . in both cases , @xmath59 solves @xmath47 in at most @xmath66 steps where @xmath67 and @xmath68 .",
    "time bounds for parameterized algorithms have two parts .",
    "the @xmath69 is called _",
    "parameter dependence _ and , is typically a super - polynomial function .",
    "the @xmath21 is a polynomial function and we will call it _ polynomial part_. while in classic algorithm design there is only polynomial part to improve , in fpt - algorithms it appears to be more important to improve the parameter dependence . clearly , for practical purposes , an @xmath57 step fpt - algorithm is more welcome than one running in @xmath70 steps .",
    "notice that a problem of classic complexity whose input has several integers has several parameterizations depending on which one is chosen to be the parameter .",
    "we complement the name of a parameterized problem so to indicate the parameterization that we choose .",
    "in many cases , the parameterization refers to a property of the input . as a driving example we consider the following problem : + dominating set + _ instance : _ a graph @xmath4 and an integer @xmath3 + _ question _ : does @xmath4 have a dominating set of size at most @xmath3 ?",
    "+ dominating set has several parameterizations .",
    "the most popular one is the following one : + @xmath3-dominating set + _ instance : _ a graph @xmath4 and an integer @xmath3 .",
    "+ _ parameter : _ @xmath3 .",
    "+ _ question : _ does @xmath4 have a dominating set of size at most @xmath3 ?",
    "+ moreover , one can define parameterizations that do not depend on integers appearing explicitly in the input of the problem . for this , one may set up a `` promise '' variant of the problem based on a suitable restriction of its inputs .",
    "that way , we may define the following parameterization of dominating set : + @xmath71-dominating set + _ instance : _ a graph @xmath4 with maximum degree @xmath71 and an integer @xmath3 .",
    "+ _ parameter : _ @xmath71 .",
    "+ _ question : _ does @xmath4 have a dominating set of size at most @xmath3 ?",
    "+ in the above problem the promise - restriction is `` with maximum degree @xmath71 '' . in general , we often omit this restriction as it is becomes clear by the chosen parameterization .",
    "finally , we stress that we can define the parameterization by combining a promise restriction with parameters that appear in the input . as an example",
    ", we can define the following parameterization of dominating set : + @xmath71-@xmath3-dominating set + _ instance : _ a graph @xmath4 with maximum degree @xmath71 and an integer @xmath3 .",
    "+ _ parameter : _",
    "+ _ question : _ does @xmath4 have a dominating set of size at most @xmath3 ? + finally , the promise - restriction can be just a property of the main part of the input .",
    "a typical example is the following parameterized problem .",
    "+ @xmath3-planar dominating set + _ instance : _ a planar graph @xmath4 and an integer @xmath3 .",
    "+ _ parameter : _ @xmath3 .",
    "+ _ question : _ does @xmath4 have a dominating set of size at most @xmath3 ? + certainly , different parameterizations may belong to different parameterized complexity classes .",
    "for instance , @xmath71-@xmath3-dominating set belongs to @xmath73-@xmath74 , using the bounded search tree method presented in subsection  [ subs_boundedst ] .",
    "also , as we will see in subsection  [ subexpalg ] , @xmath3-planar dominating set belongs to @xmath75-@xmath74 . on the other side , @xmath71-dominating set @xmath76 , unless @xmath77 .",
    "this follows by the well known fact that dominating set is np - complete for graphs of maximum degree @xmath78 and therefore , not even an @xmath79-algorithm is expected to exist for this problem .",
    "the parameterized complexity of @xmath3-dominating set needs the definition of the w - hierarchy ( defined in subsection  [ w_hiera ] ) .",
    "while the problem can be solved in @xmath80 steps , it is known to be complete for the second level of the @xmath81-hierarchy .",
    "this indicates that an fpt - algorithm is unlikely to exist for this parameterization .",
    "in this section we will look at some basic methods of establishing apparent parameterized intractability .",
    "we begin with the class @xmath82 $ ] and the @xmath81-hierarchy , and later look at variations , including the @xmath83 and @xmath84 hierarchies , connections with approximation , bounds on kernelization and the like .",
    "the role of the theory of np - completeness is to give some kind of outer boundary for tractability .",
    "that is , if we identify p with `` feasible '' , then showing that a problem is np - complete would suggest that the problem is computationally intractable .",
    "moreover , we would believe that a deterministic algorithm for the problem would require worst - case exponential time .    however , showing that some problem is in p does not say that the problem is feasible .",
    "good examples are the standard parameterizations of dominating set or independent set for which we know of no algorithm significantly better than trying all possibilities . for a fixed @xmath3 ,",
    "trying all possibilities takes time @xmath18 , which is infeasible for large @xmath14 and reasonable @xmath3 , _ _ in spite of the fact that the problem is in @xmath85__. of course , we would like to prove that there is _ no _ fpt  algorithm for such a problem , but , as with classical complexity , the best we can do is to formulate some sort of completeness / hardness program . showing that @xmath3-dominating set is not in fpt  would also show , as a corollary , that @xmath86    a hardness program needs three things .",
    "first , it needs a notion of easiness , which we have : fpt .",
    "second , it needs a notion of reduction , and third , it needs some core problem which we believe to be intractable .",
    "following naturally from the concept of fixed - parameter tractability is an appropriate notion of reducibility that expresses the fact that two parameterized problems have comparable parameterized complexity .",
    "that is , if problem ( language ) @xmath87 reduces to problem ( language ) @xmath88 , and problem @xmath88 is fixed - parameter tractable , then so too is problem @xmath87 .",
    "a _ parameterized reduction can be arbitrary , rather than computable , for other non - uniform versions .",
    "we give the reduction most commonly met . ] _ from a parameterized language @xmath89 to a parameterized language @xmath90 ( symbolically @xmath91 ) is an algorithm that computes , from input consisting of a pair @xmath92 , a pair @xmath93 such that :    1 .",
    "@xmath94 if and only if @xmath95 , 2 .",
    "@xmath96 is a computable function depending only @xmath3 , and 3 .",
    "the computation is accomplished in time @xmath97 , where @xmath14 is the size of the main part of the input @xmath51 , @xmath3 is the parameter , @xmath22 is a constant ( independent of both @xmath14 and @xmath3 ) , and @xmath34 is an arbitrary function dependent only on @xmath3 .",
    "if @xmath98 and @xmath99 , then we say that @xmath87 and @xmath88 are _ fpt - equivalent , _ and write @xmath100 .    a simple example of an fpt  reduction is the fact that @xmath3-independent set @xmath101 @xmath3-clique .",
    "( henceforth , we will usually drop the parameter @xmath3 from the name of problems and will do so when the parameter is implicit from the context . )",
    "namely , @xmath4 has a clique of size @xmath3 iff the complement of @xmath4 has an independent set of size @xmath3 .",
    "a simple _ non - example _ is the classical reduction of independent set to vertex cover : @xmath4 will have a size @xmath3 independent set iff @xmath4 has a size @xmath102 vertex cover , where @xmath14 is the number of vertices of @xmath4 .",
    "the point of this last example is that the _ parameter _ is not fixed .",
    "we need the final component for our program to establish the apparent parameterized intractability of computational problems : the identification of a `` core '' problem to reduce from .    in classical np - completeness",
    "this is the heart of the cook - levin theorem : the argument that a nondeterministic turing machine is such an opaque object that it does not seem reasonable that we can determine in polynomial time if it has an accepting path from amongst the exponentially many possible paths . building on earlier work of abrahamson , ellis , fellows and mata @xcite , the idea of downey and fellows was to define reductions and certain core problems which have this property . in the fundamental papers @xcite , a parameterized version of circuit acceptance .",
    "the classic version of this problem has as instance a boolean circuit and the question is whether some value assignment to the input variables leads to a yes .",
    "as is well known , this corresponds to turing machine acceptance , at least classically .",
    "downey and fellows @xcite combined with cai , chen , downey and fellows @xcite allows for a turing machine core problem : + short non - deterministic turing machine acceptance + _ instance : _  a nondeterministic turing machine @xmath103 ( of arbitrary degree of non - determinism ) .",
    "+ _ parameter : _ a positive integer @xmath3 .",
    "+ _ question : _  does @xmath103 have a computation path accepting the empty string in at most @xmath3 steps ? + in the same sense that np - completeness of the @xmath104-step non - deterministic turing machine acceptance , where @xmath104 is a polynomial in the size of the input , provides us with very strong evidence that no np - complete problem is likely to be solvable in polynomial time , using short non - deterministic turing machine acceptance as a hardness core provides us with very strong evidence that no parameterized language @xmath89 , for which short non - deterministic turing machine acceptance@xmath105 , is likely to be fixed - parameter tractable . that is ,",
    "if we accept the idea behind the basis of np - completeness , then we should also accept that the short non - deterministic turing machine acceptance problem is not solvable in time @xmath106 for some fixed @xmath22 .",
    "our intuition would again be that all computation paths would need to be tried .",
    "we remark that the hypothesis `` short non - deterministic turing machine acceptance is not in fpt '' is somewhat stronger than p@xmath107np .",
    "furthermore , connections between this hypothesis and classical complexity have recently become apparent .",
    "if short non - deterministic turing machine acceptance _ is _ in fpt , then we know that the exponential time hypothesis , which states that @xmath14-variable 3sat is not in subexponential time ( dtime@xmath108 ) , fails .",
    "see impagliazzo , paturi and zane @xcite , cai and juedes @xcite , and estivill - castro , downey , fellows , prieto - rodriguez and rosamond @xcite ( and our later discussion of @xmath109 $ ] ) for more details . as we will later see the eth is a bit stronger than the hypothesis that short non - deterministic turing machine acceptance is not in fpt , but is equivalent to an apparently stronger hypothesis that `` @xmath109\\neq { { \\sf fpt}}$ ] '' .",
    "the precise definition of @xmath109 $ ] will be given later , but the idea here is that , as most researchers believe , not only is @xmath110 , but @xmath111 problems like non - deterministic turing machine acceptance require substantial search of the available search space , and hence do not have algorithms running in deterministic subexponential time such as @xmath112 .",
    "the class of problems that are fpt - reducible to short non - deterministic turing machine acceptance is called @xmath82 $ ] , for reasons discussed below .",
    "the parameterized analog of the classical cook - levin theorem ( that cnf sat is np - complete ) uses the following parameterized version of 3sat : + weighted cnf sat + _ instance : _  a cnf formula @xmath113 ( i.e. , a formula in conjunctive normal form ) .",
    "+ _ parameter : _ a positive integer @xmath3 .",
    "+ _ question : _  does @xmath113 have a satisfying assignment of weight @xmath3 ? + here the _ weight _ of an assignment is its hamming weight , that is , the number of variables set to be true . + similarly , we can define weighted @xmath14cnf sat , where the clauses have only @xmath14 variables and @xmath14 is some number fixed in advance . weighted @xmath14cnf sat , for any fixed @xmath114 , is complete for @xmath82 $ ] .    for any fixed @xmath115 , weighted @xmath14cnf sat@xmath116 [ ccdf ] short non - deterministic turing machine acceptance .    as we will see , there are many well - known problems hard for @xmath82 $ ] . for example",
    ", clique and independent set are basic @xmath82$]-complete problems .",
    "an example of a @xmath82$]-hard problem subset sum which classically has as input a set @xmath117 of integers , a positive integers and an integer @xmath118 and asks if there is a set of members of @xmath117 which add to @xmath118 . in parametric form",
    ", the question asks where there exist @xmath3 members of @xmath117 which add to @xmath118 . a similar problem is exact cheap tour which asks for a weighted graph whether there is a tour through @xmath3 nodes of total weight @xmath118 .",
    "another example is the finite state automata intersection which has parameters @xmath119 and @xmath3 and asks for a set @xmath120 of finite state automata over an alphabet @xmath49 whether there is a string @xmath113 of length @xmath119 accepted by each of the @xmath121 , for @xmath122 there are a number of problems related to the least common subsequence which are hard according to various parameterizations , and notably a @xmath82$]-hard parameterized version of steiner tree . here , and",
    "later , we will refer the reader to the various monographs and compendia such as the one currently maintained by marco cesati :    http://bravo.ce.uniroma2.it/home/cesati/research/compendium/[http://bravo.ce.uniroma2.it/home/cesati/research/compendium/ ]    the original proof of theorem [ ccdf ] involves a generic simulation of a turing machine by a circuit and then in the other direction involves combinatorial arguments to have parametric reductions from certain kinds of circuits ( `` weft 1 '' , see below ) to independent set .    since the original downey - fellows work",
    ", hundreds of problems have been shown to be @xmath82$]-hard or @xmath82$]-complete .",
    "a classical graph theoretical problem which is @xmath82$]-complete ( see  @xcite ) is the following .",
    "+ @xmath71-red - blue nonblocker + _ instance : _ a 2-coloured graph @xmath123 of ( fixed ) maximum degree @xmath124 , and a positive integer @xmath3 .",
    "+ _ parameter : _ a positive integer @xmath3 .",
    "+ _ question : _ is there a set of red vertices @xmath125 of cardinality @xmath3 such that each blue vertex has at least one neighbour not belonging to @xmath126 ? .",
    "+ this problem seems to be useful for proving hardness results such as the proof that various coding problems are hard for @xmath82 $ ] in downey , fellows , vardy , and whittle @xcite . in that problem , using a reduction from red - blue nonblocker downey et .",
    "show the following natural problem is hard for @xmath82 $ ] .",
    "+ weight distribution + _ instance : _ a binary @xmath127 matrix @xmath128 .",
    "+ _ parameter : _ an integer @xmath129 .",
    "+ _ question : _ is there a set of at most @xmath3 columns of @xmath128 that add to the all zero vector ?",
    "+ as a consequence , the related problem of maximum likelihood decoding where there is a target vector @xmath118 is also @xmath82 $ ] hard .",
    "two notorious open questions remain in this area . + shortest vector + _ instance : _ a basis @xmath130 for a lattice @xmath131 .",
    "+ _ parameter : _ an integer @xmath129 .",
    "+ _ question : _ is there a nonzero vector @xmath132 such that @xmath133 ?",
    "+ even set ( also known as minimum distance ) + _ instance : _ a red / blue graph @xmath134 .",
    "+ _ parameter : _ a positive integer @xmath3 .",
    "+ _ question : _ is there a set of at most @xmath129 red vertices all of which have an even number of blue neighbours ? + both of these are conjectured in @xcite as being @xmath82 $ ] hard .",
    "the unparameterized version of the latter is known to be np - complete and of the former is famously open , a question of peter van emde boas from 1980 .",
    "we refer the reader to @xcite for more details and other related problems such as theta series .",
    "the original theorems and hardness classes were first characterized in terms of boolean circuits of a certain structure .",
    "these characterizations lend themselves to easier _ membership _ proofs , as we now see .",
    "this uses the model of a _ decision circuit_. this has boolean variables as inputs , and a single output .",
    "it has _ and _ and _ or _ gates and _ inverters_. we designate a gate as _ large _ or _ small _ depending on the fan - in allowed , where small will be some fixed number .",
    "for example a 3cnf formula can be modeled by a circuit consisting of @xmath14 input variables ( of unbounded fanout ) one for each formula variable , possibly inverters below the variable , and a large _ and _ of small _ or _ s ( of size 3 ) with a single output line . for a decision circuit , the _ depth _ is the maximum number of gates on any path from the input variables to the output line , and the _ weft _ is the `` large - gate depth '' .",
    "more precisely , the weft is defined to be the maximum number of large gates on any path from the input variables to the output line , where a gate is called large if its fan - in exceeds some pre - determined bound .",
    "the _ weight _ of an assignment to the input variables of a decision circuit is the hamming weight , i.e. , the number of variables set to true by the assignment .",
    "let @xmath135 be a family of decision circuits .",
    "associated with @xmath136 is a basic parameterized language @xmath137    we will denote by @xmath138 the parameterized language associated with the family of weft @xmath139 , depth @xmath140 , decision circuits .",
    "[ @xmath141  downey and fellows @xcite ] [ w_1 ] we define a language @xmath89 to be in the class @xmath142 , t\\geq 1 $ ] if there is a parameterized reduction from @xmath89 to @xmath138 , for some @xmath140 .",
    "we think of the inputs of weighted cnf sat as circuits consisting of conjunctions of disjunctions of literals .",
    "hence weighted cnf sat is in @xmath143 $ ] .",
    "extending this idea , a typical example of a formula in @xmath144 $ ] would be a conjunction of disjunctions of conjunctions of literals .",
    "more generally , we can define weighted @xmath139-normalized sat as the weighted satisfiability problem for a formula @xmath113 where @xmath113 is a conjunction of disjunctions of conjunctions of disjunctions @xmath145 with @xmath139 alternations .",
    "this allows for the following basic result .    for all @xmath146 ,",
    "weighted @xmath139-normalized sat is complete for @xmath142 $ ] .",
    "there are problems complete for other @xmath142 $ ] levels such as dominating set being complete for @xmath143 $ ] , but as with many situations in logic and computer science , natural problems at levels above @xmath78 tend to be rare .",
    "cesati @xcite gave machine - based problems for various levels and his approach ( via turing machines ) can allow for easier proofs , such as his proof of the @xmath82$]-completeness of perfect code ( @xcite ) .",
    "as an illustrative example , we will give one of the basic reductions .",
    "dominating set @xmath147 weighted cnf sat .",
    "we sketch the proof of the hardness direction that weighted cnf sat @xmath148 dominating set .",
    "let @xmath113 be a boolean expression in conjunctive normal form consisting of @xmath119 clauses @xmath149 over the set of @xmath14 variables @xmath150 .",
    "we show how to produce in polynomial - time by local replacement , a graph @xmath2 that has a dominating set of size @xmath39 if and only if @xmath113 is satisfied by a truth assignment of weight @xmath3 .",
    "a diagram of the gadget used in the reduction is given in figure  [ dominating ] .",
    "the idea of the proof is as follows .",
    "there are @xmath3 of the gadgets arranged in a circle , where we regard them as ordered from first to last .",
    "each of the gadgets has 3 main parts .",
    "taken clockwise from top to bottom , these are the _ truth setting clique , _ the _ gap selection _ part ( achieved by the gap selection cliques ) and the _ gap enforcement _ part ( achieved by the gap enforcement line ) .    the pigeonhole principle combined with the",
    "so - called _ _ enforcers _ _ are used to force one vertex from each of the truth cliques and one vertex from each of the next set of cliques , which form the gap enforcement part .",
    "the intuition is that the truth selection cliques represent a choice of a particular vertex to be selected to be true , and the gap selection represents the gap till the next selected true vertex .",
    "the interconnections between the truth setting cliques and the gap selection means that they align , and the gap enforcement line makes all the selections consistent . finally because of the _ _ clause variables _ _ which also need to be dominated",
    ", we will ensure that the dominating set corresponds to a truth assignment .    in more detail ,",
    "the truth selection component is a clique and the gap selection consists of @xmath14 cliques which we call _ columns_. our first action is to ensure that in _ any _ dominating set of @xmath39 elements , we must pick one vertex from each of these two components .",
    "this goal is achieved by the @xmath39 sets of @xmath151 enforcers ( which are independent sets ) .",
    "for example , for each truth selection clique , @xmath151 enforcers are connected to every vertex in this clique and nowhere else and then it will follow by the pigeonhole principle that in any size @xmath39 dominating set for the final graph , to dominate these enforcers , _ some vertex _ in the truth selection clique must be chosen .",
    "similarly , it follows that we must pick _ exactly _ one vertex from each of the truth selection cliques , and one of the gap selection cliques to dominate the enforcers .",
    "the truth selection component of the @xmath152-th gadget is denoted by @xmath153 , @xmath154 .",
    "each of these @xmath3 components consists of a clique of @xmath14 vertices labeled @xmath155 .",
    "the intention is that if the vertex labeled @xmath156 is picked , this represents variable @xmath156 being set to true in the formula @xmath113 .",
    "we denote by @xmath157 the gap selection part of the @xmath152-th gadget , @xmath154 .",
    "as explained above , this part consists of @xmath14 columns ( cliques ) where we index the columns by @xmath158 .",
    "the intention is that column @xmath156 corresponds to the choice of variable @xmath156 in the preceding @xmath153 .",
    "the idea then is the following .",
    "we join the vertex @xmath159 $ ] corresponding to variable @xmath160 in @xmath153 , to all vertices in @xmath157 _ except _ those in column @xmath156 .",
    "this means that the choice of @xmath156 in @xmath153 will cover all vertices of @xmath157 except those in this column .",
    "it follows since we have only @xmath39 to spend , that we _ must _ choose the dominating element from this column and nowhere else .",
    "( there are no connections from column to column . ) the columns are meant to be the gap selection saying how many @xmath161 s there will be till the next positive choice for a variable .",
    "we finally need to ensure that if we choose variable @xmath156 in @xmath153 and gap @xmath162 in column @xmath156 from @xmath157 then we need to pick @xmath163 in @xmath164 .",
    "this is fulfilled by the gap enforcement component which consists of a set of @xmath14 vertices .",
    "we denote by @xmath165 $ ] , @xmath166 the set of vertices in this gap - enforcement line in the @xmath152-th gadget @xmath154 .    for @xmath167 ,",
    "the method is to connect vertex @xmath162 in column @xmath156 of @xmath157 to all of the @xmath14 vertices @xmath165 $ ] @xmath168 to @xmath169 $ ] _ _ provided that @xmath170__. ( for @xmath171 simply connect vertex @xmath162 in column @xmath156 of @xmath157 to all of the @xmath14 vertices @xmath165 $ ] except to @xmath169 $ ] since this will need to `` wrap around '' to @xmath172 . ) the first point of this process is that if we choose vertex @xmath162 in column @xmath156 with @xmath173 then _ _ none _ _ of the vertices in the enforcement line are dominated .",
    "since there is only a single edge to the corresponding vertex in @xmath164 , there can not possibly be a size @xmath39 dominating set for such a choice .",
    "it follows that we must choose some @xmath162 with @xmath170 in any dominating set of size @xmath174 .",
    "the main point is that if we choose @xmath162 in column @xmath156 we will dominate all of the @xmath165 $ ] except @xmath169 $ ] .",
    "since we will only connect @xmath165 $ ] additionally to @xmath175 $ ] and nowhere else , to choose an element of @xmath176 $ ] and still dominate all of the @xmath165 $ ] we must actually choose @xmath177 $ ] .",
    "thus the above provides a selection gadget that chooses @xmath3 true variables with the gaps representing false ones .",
    "we enforce that the selection is consistent with the clauses of @xmath113 via _ clause vertices _",
    "@xmath178 one for each clause @xmath179 .",
    "these are connected in the obvious ways .",
    "one connects a choice in @xmath180 $ ] or @xmath181 $ ] corresponding to making a clause @xmath182 true to the vertex @xmath183 .",
    "then if we dominate all the clause variables too , we must have either chosen in some @xmath180 $ ] a positive occurrence of a variable in @xmath182 or we must have chosen in @xmath181 $ ] a gap corresponding to a negative occurrence of a variable in @xmath182 , and conversely .",
    "the formal details can be found in downey and fellows @xcite .",
    "there are notable problems which are @xmath142$]-hard for all @xmath139 , such as bandwidth , below .",
    "+ bandwidth + _ instance : _ a graph @xmath2 .",
    "+ _ parameter : _ a positive integer @xmath3 .",
    "+ _ question : _ is there a 1 - 1 layout @xmath184 such that @xmath185 implies @xmath186 ? + the @xmath187 $ ] ( for all @xmath139 ) hardness of bandwidth was proven by bodlaender , fellows and hallett @xcite via a rather complex reduction .",
    "it is unknown what , say , bandwidth @xmath188 $ ] ( or even @xmath189 $ ] ) would imply either parametrically or classically . on general grounds , it seems unlikely that such a containment is possible .    at even higher levels",
    ", we can define weighted sat to be the weighted satisfiability problem where inputs correspond to unrestricted boolean formulas and finally weighted circuit sat to be the most general problem whose inputs are all polynomial sized circuits .",
    "notice that , in theorem [ ccdf ] , we did _ not _ say that weighted cnf sat is @xmath82$]-complete .",
    "the reason for this is that we do not believe that it is ! in fact , we believe that @xmath143\\neq { \\sf w}[1].$ ]    that is , classically , using a padding argument , we know that cnf sat @xmath190 @xmath78cnf sat",
    ". however , the classical reduction _ does not _ define a parameterized reduction from weighted cnf sat to weighted @xmath78cnf sat , it is not structure - preserving enough to ensure that parameters map to parameters .",
    "in fact , it is conjectured @xcite that there is _ no _ parameterized reduction at all from weighted cnf sat to weighted @xmath78cnf sat .",
    "if the conjecture is correct , then weighted cnf sat is _ not _ in the class @xmath82 $ ] .",
    "the point here is that parameterized reductions are more refined than classical ones , and hence we believe that we get a wider variety of apparent hardness behaviour when intractable problems are classified according to this more fine - grained analysis .",
    "these classes form part of the basic hierarchy of parameterized problems below .",
    "@xmath191 \\subseteq { \\sf w}[2 ] \\subseteq \\cdots \\subseteq { \\sf w}[t ] \\subseteq { \\sf w}[sat ] \\subseteq { \\sf w}[{\\sf p } ] \\subseteq { \\sf aw}[t]\\subset { \\sf aw}[{\\sf p } ] \\subseteq { \\sf { \\sf xp}}\\ ] ]    this sequence is commonly termed `` the _ @xmath81-hierarchy _ '' .",
    "the complexity class @xmath82 $ ] can be viewed as the parameterized analog of np , since it suffices for the purpose of establishing likely parameterized intractability .",
    "the classes @xmath192 $ ] , @xmath189 $ ] and the @xmath193 classes were introduced by abrahamson , downey and fellows in @xcite .",
    "the class @xmath192 $ ] is the collection of parameterized languages @xmath74-reducible to weighted sat .",
    "the class @xmath189 $ ] is the collection of parameterized languages fpt - equivalent to weighted circuit sat , the weighted satisfiability problem for a decision circuit @xmath194 that is unrestricted .",
    "a standard translation of turing machines into circuits shows that @xmath195-weighted circuit sat is the same as the problem of deciding whether or not a deterministic turing machine accepts an input of weight @xmath3 .",
    "it is conjectured that the containment @xmath192 \\subseteq { \\sf w}[{\\sf p}]$ ] is proper @xcite .    another way to view",
    "@xmath189 $ ] is the following .",
    "consider the problem short circuit sat defined as follows .",
    "+ short circuit sat + _ instance : _ a decision circuit @xmath194 with at most @xmath14 gates and @xmath196 inputs .",
    "+ _ parameter : _ a positive integer @xmath3 .",
    "+ _ question : _ is there a setting of the inputs making @xmath194 true ? +    short circuit sat is @xmath189$]-complete .",
    "the proof of this result uses the `` @xmath197 '' trick introduced by abrahamson , downey and fellows @xcite . to see that the problem is @xmath189$]-hard , take an instance @xmath51 of weighted circuit satisfiability with parameter @xmath3 and inputs @xmath198 .",
    "let @xmath199 be new variables .",
    "using lexicographic order and in polynomial time we have a surjection from this set to the @xmath3-element subsets of @xmath200 . representing this as a circuit and putting this on the top of the circuit for @xmath51 defines our new circuit @xmath194 .",
    "the converse is equally easy .",
    "@xmath201 $ ] captures the notion of _",
    "@xmath201 $ ] is the collection of parameterized languages @xmath74-reducible to parameterized quantified circuit sat@xmath202 , the weighted satisfiability problem for an unrestricted decision circuit that applies _ alternating quantifiers _ to the inputs , defined here .",
    "+ parameterized quantified circuit sat@xmath202    _ instance : _",
    "a weft @xmath139 decision circuit @xmath194 whose inputs correspond to a sequence @xmath203 of pairwise disjoint sets of variables .",
    "+ _ parameter : _ @xmath204 .",
    "+ _ question : _  is it the case that there exists a size @xmath205 subset @xmath206 of @xmath207 , such that for every size @xmath208 subset @xmath209 of @xmath210 , there exists a size @xmath211 subset @xmath212 of @xmath213 , such that @xmath145 ( alternating quantifiers ) such that , when @xmath214 are set to true , and all other variables are set to false , @xmath194 is satisfied ?",
    "+ the idea here is to look at the analog of pspace .",
    "the problem is that in the parameterized setting there seems no natural analog of savitch s theorem or the proof that qbfsat is pspace - complete , and it remains an interesting problem to formulate a true analog of parameterized space .    the approach taken by @xcite was to look at the parameterized analog of qbfsat stated above .",
    "one of the fundamental theorems proven here is that the choice of @xmath139 is irrelevant :    @xmath201={\\sf aw}[1]$ ] for all @xmath215 .",
    "many parameterized analogs of game problems are complete for the @xmath216 $ ] , such as the parameterized analog of geography . + short geography + _ instance : _ a directed graph @xmath217 and a specified vertex @xmath218 .",
    "+ _ parameter : _ a positive integer @xmath3 .",
    "+ _ question : _ does player 1 have a winning strategy in the following game ?",
    "each player alternatively chooses a new arc from @xmath219 .",
    "the first arc must have its tail as @xmath218 , and each vertex subsequently chosen must have as its tail the head of the previously chosen arc .",
    "the first player unable to choose loses .",
    "+ the class @xmath220 , introduced in @xcite , is the collection of parameterized languages @xmath89 such that the _ @xmath3-th slice _ of @xmath89 ( the instances of @xmath89 having parameter @xmath3 ) is a member of @xmath221 .",
    "@xmath220 is provably distinct from @xmath74 and seems to be the parameterized class corresponding to the classical class @xmath222 ( exponential time ) .",
    "there are problems complete for @xmath220 including the game of @xmath3-cat and mice .",
    "the problem here is played on a directed graph @xmath2 and begins with a distinguished vertex @xmath218 called the cheese , a token @xmath22 on one vertex called the cat , and @xmath3 tokens ( called mice ) on other vertices .",
    "players cat and the team of mice play alternatively moving one token at a time .",
    "a player can move a token along an arc at each stage .",
    "team of mice wins if one mouse can reach the cheese ( by occupying it even if the cat is already there ) before the cat can eat one of the mice by occupying the same vertex .",
    "it is conjectured that all of the containments given so far are proper , but all that is currently known is that fpt  is a proper subset of @xmath220 .",
    "there are hundreds of complete problems for the levels of the hierarchy .",
    "here is a short list .",
    "the reader is referred to @xcite for references and definitions . as stated @xmath220 has @xmath3-cat and mouse game and many other games ; @xmath189 $ ] has linear inequalities , short satisfiability , weighted circuit satisfiability and minimum axiom set .",
    "there are a number of quite important problems from combinatorial pattern matching which are @xmath142 $ ] hard for all @xmath139 : longest common subsequence ( @xmath223 number of sequences , @xmath224-two parameters ) , feasible register assignment , triangulating colored graphs , bandwidth , topological bandwidth , proper interval graph completion , domino treewidth and bounded persistence pathwidth .",
    "some concrete problems complete for @xmath143 $ ] include weighted @xmath225 integer programming , dominating set , tournament dominating set , unit length precedence constrained scheduling ( hard ) , shortest common supersequence ( hard ) , maximum likelihood decoding ( hard ) , weight distribution in linear codes ( hard ) , nearest vector in integer lattices ( hard ) , short permutation group factorization ( hard ) .",
    "finally a collection of @xmath82$]-complete problems : @xmath3-step derivation for context sensitive grammars , short ntm computation , short post correspondence , square tiling , weighted @xmath226cnf satisfiability , vapnik  chervonenkis dimension , longest common subsequence ( @xmath3 , @xmath227 length of common subseq . ) , clique , independent set , and monotone data complexity for relational databases .",
    "this list is merely representative , and new areas of application are being found all the time .",
    "there are currently good compendia of hardness and completeness results as can be found at the web    http://bravo.ce.uniroma2.it/home/cesati/research/compendium/[http://bravo.ce.uniroma2.it/home/cesati/research/compendiuma/ ]    for older material , see the appendix of the monograph by downey and fellows @xcite , as well as the many surveys and the recent issue of the _ computer journal _ @xcite .",
    "there remain several important structural questions associated with the @xmath81-hierarchy such as how it relates to the @xmath83-hierarchy below , and whether any collapse may propagate .",
    "+ _ open questions : _ does @xmath142={\\sf w}[t+1 ]   $ ] imply @xmath142={\\sf w}[t+2]$ ] ? does @xmath142={{\\sf fpt}}$ ] imply @xmath228={{\\sf fpt}}?$ ]      there have been several attempts towards simplification of this material , notably by flum and grohe @xcite .",
    "their method is to try to make the use of logical depth and logic more explicit . to do",
    "this flum and grohe take a detour through the logic of finite model theory .",
    "close inspection of their proofs reveals that similar combinatorics are hidden .",
    "their view is that _ _ model checking _ _ should be viewed as the fundamental viewpoint of complexity .    to this end , for a class of first order formula @xmath229 with @xmath118-ary free relation variable , we can define @xmath230 as the problem : + @xmath230 + _ instance : _ a structure @xmath231 with domain @xmath87 and an integer @xmath3 .",
    "+ _ parameter : _ @xmath3 .",
    "+ _ question : _ is there a relation @xmath232 with @xmath233 such that @xmath234 + this idea naturally extends to _ classes _ @xmath235 of formulae @xmath235 .",
    "then we define @xmath236 to be the class of parameterized problems @xmath230 for @xmath237 .",
    "it is easy to show that @xmath238 ( strictly , we should write @xmath239 but the formulae considered here are first order . ) then to recast the classical @xmath81-hierarchy at the finite levels , the idea is to _ define _ for @xmath215 , @xmath240=[p\\mbox{-\\sc wd}({\\pi_t})]^{{{\\sf fpt}}},\\ ] ] where , given a parameterized problem @xmath113 , @xmath241^{{{\\sf fpt}}}$ ] denotes the parameterized problems that are @xmath74-reducible to @xmath113 .",
    "flum and grohe have similar logic - based formulations of the other w - hierarchy classes .",
    "we refer the reader to @xcite for more details .",
    "we remark that the model checking approach leads to other hierarchies .",
    "one important hierarchy found by flum and grohe is the @xmath83-hierarchy which is also based on alternation like the aw - hierarchy but works differently . for a class @xmath235 of formulae , we can define the following parameterized problem .",
    "+ @xmath242 + _ instance : _ a structure @xmath243 and a formula @xmath244 .",
    "+ _ parameter : _ @xmath245 .",
    "+ _ question : _ decide if @xmath246 where this denotes the evaluation of @xmath247 in @xmath243 . +",
    "then flum and grohe define @xmath248=[p\\mbox{\\sc -mc}(\\sigma_t)]^{{{\\sf fpt}}}.\\ ] ] for instance , for @xmath249 , @xmath3-clique can be defined by @xmath250 in the language of graphs , and the interpretation of the formula in a graph @xmath4 would be that @xmath4 has a clique of size @xmath3 . thus the mapping @xmath251 is a fpt  reduction showing that parameterized clique is in @xmath252.$ ] flum and grohe populate various levels of the @xmath87-hierarchy and show the following .",
    "the following hold :    * @xmath252={\\sf w}[1].$ ] * @xmath38\\subseteq { \\sf w}[t]$ ] .    clearly @xmath38\\subseteq { \\sf xp}$ ] , but no other containment with respect to other classes of the @xmath81-hierarchy is known .",
    "it is conjectured by flum and grohe that no other containments than those given exist , but this is not apparently related to any other conjecture .",
    "if we compare classical and parameterized complexity it is evident that the framework provided by parameterized complexity theory allows for more finely - grained complexity analysis of computational problems .",
    "it is deeply connected with algorithmic heuristics and exact algorithms in practice .",
    "we refer the reader to either the survey @xcite , or those in two recent issues of _ the computer journal _",
    "@xcite for further insight",
    ".    we can consider many different parameterizations of a single classical problem , each of which leads to either a tractable , or ( likely ) intractable , version in the parameterized setting .",
    "this allows for an extended dialog with the problem at hand .",
    "this idea towards the solution of algorithmic problems is explored in , for example , @xcite .",
    "a nice example of this extended dialog can be found in the work of iris van rooij and her co - authors , as discussed in van rooij and wareham @xcite .",
    "the reader may note that parameterized complexity is addressing intractability _ within polynomial time_. in this vein , the parameterized framework can be used to demonstrate that many classical problems that admit a ptas do not , in fact , admit any ptas with a practical running time , unless @xmath82={{\\sf fpt}}$ ] .",
    "the idea here is that if a @xmath253 has a running time such as @xmath254 , where @xmath23 is the error ratio , then the ptas is unlikely to be useful .",
    "for example if @xmath255 then the running time is already @xmath14 to the 10th power for an error of @xmath256 .",
    "what we could do is regard @xmath35 as a parameter and show that the problem is @xmath82$]-hard with respect to that prameterization . in that case",
    "_ there would likely be no method of removing the @xmath35 from the exponent in the running time and hence no _ efficient _ ptas _ , a method first used by bazgan @xcite .",
    "for many more details of the method we refer the reader to the survey @xcite .",
    "a notable application of this technique is due to cai et .",
    "@xcite who showed that the method of using planar formulae tends to give ptas s that are never practical . the exact calibration of ptas s and parameterized complexity comes through yet another hierarchy called the @xmath84-hierarchy .",
    "the breakthrough was the realization by cai and juedes @xcite that the collapse of a basic sub - hierarchy of the @xmath81-hierarchy was deeply connected with approximation .",
    "the base level of the hierarchy is the problem @xmath109 $ ] defined by the core problem below .",
    "+ _ instance : _ a cnf circuit @xmath194 ( or , equivalently , a cnf formula ) of size @xmath196 .",
    "+ _ parameter : _ a positive integer @xmath3 .",
    "+ _ question : _ is @xmath194 satisfiable ?",
    "+ that is , we are parameterizing the _ size _ of the problem rather than some aspect of the problem .",
    "the idea naturally extends to higher levels for that , for example , m[2 ] would be a product of sums of product formula of size @xmath196 and we are asking whether it is satisfiable .",
    "the basic result is that @xmath257\\subseteq { \\sf w}[1]$ ] .",
    "the hypothesis @xmath258 $ ] is _ equivalent to _ eth .",
    "in fact , as proven in @xcite , there is an isomorphism , the so - called _ miniaturization _ , between exponential time complexity ( endowed with a suitable notion of reductions ) and xp ( endowed with fpt reductions ) such that the respective notions of tractability correspond , that is , subexponential time on the one and fpt  on the other side .",
    "the reader might wonder why we have not used a turing machine of size @xmath196 in the input , rather than a cnf circuit .",
    "the reason is that whilst we can get reductions for small version of problems , such as @xmath196-vertex cover and the like , to have the same complexity as the circuit problem above , we do not know how to do this for turing machines .",
    "it remains an open question whether the @xmath196-sized circuit problem and the @xmath196-sized turing machine problem have the same complexity .    for more on this topic and other connections with classical exponential algorithms",
    "we refer the reader to the survey of flum and grohe @xcite .",
    "related to the material of the last section are emerging programmes devoted to proving tight lower bounds on parameterized problems , assuming various non - collapses of the parameterized hierarchies . for this section ,",
    "it is useful to use the @xmath259 notation for parameterized algorithms .",
    "this is the part of the running time which is exponential .",
    "for example , a running time of @xmath260 would be written as @xmath261    one example of a lower bound was the original paper of cai and juedes @xcite who proved the following definitive result .",
    "[ ethvc ]    @xmath3-planar vertex cover , @xmath3-planar independent set , @xmath3-planar dominating set , and @xmath3-planar red / blue dominating set can not be in @xmath262-@xmath74 unless @xmath263 $ ] ( or , equivalently , unless eth fails ) .",
    "the optimality of theorem  [ ethvc ] follows from the fact that all above problems have been classified in @xmath264-fpt as proved in  @xcite ( see also subsection  [ subexpalg ] ) .",
    "we can ask for similar optimality results for any fpt  problem .",
    "see for example , chen and flum @xcite .",
    "we will meet another approach to fpt  optimality in subsection [ boundedx ] where we look at classes like ept meant to capture how problems are placed in fpt  via another kind of completeness programme .",
    "another example of such optimality programmes can be found in exciting resent work on xp optimiality .",
    "this programme represents a major step forward in the sense that it regards the classes like @xmath82 $ ] as artifacts of the basic problem of proving hardness under reasonable assumptions , and strikes at membership of @xmath220 .    here",
    "are some examples . we know that independent set and dominating set are in @xmath220 .    the following hold :    * independent set can not be solved in time @xmath265 unless @xmath263.$ ] * dominating set can not be solved in time @xmath265 unless @xmath266 $ ] .",
    "a beautiful development in this area is the resent paper by marx on the closest substring problem .",
    "we refer to marx @xcite for more details , and to chen and meng @xcite for other related results .",
    "there remains a lot of work to be done here and these programmes appear to be exciting developments , see e.g. , @xcite .",
    "similar techniques have been used to solve a significant open question about techniques for formula evaluation when they were used to show `` resolution is not automizable '' unless @xmath189={{\\sf fpt}}$ ] ( alekhnovich and razborov @xcite , eickmeyer , grohe and grber @xcite . ) parameterized complexity assumptions can also be used to show that the large hidden constants ( various towers of two s ) in the running times of generic algorithms obtained though the use of algorithmic meta - theorems can not be improved upon ( see @xcite . )",
    "one illustration is obtained through the use of _ local treewidth _ ( which we will discuss in subection [ ftpfol ] ) .",
    "the notions of treewidth and branchwidth are by now ubiquitous in algorithmic graph theory ( the definition of branchwidth is given in subsection  [ cource ] ) .",
    "suffice to say is that it is a method of decomposing graphs to measure how `` treelike '' they are , and if they have small treewidth / branchwidth , as we see in subection [ cource ] , we can run dynamic programming algorithms upon them .",
    "local _ treewidth of a _ class _ @xmath267 of graphs is called bounded iff there a function @xmath34 such that for all graphs @xmath268 and all vertices @xmath269 the neighborhood of @xmath270 of distance @xmath3 from @xmath270 has treewidth @xmath69 ( see subsection [ ftpfol ] ) .",
    "examples include planar graphs and graphs of bounded maximum degree .",
    "the point is that a class of graphs of bounded local treewidth is automatically fpt  for a wide class of properties .",
    "deciding first - order statements is fpt  for every fixed class of graphs of bounded local treewidth .",
    "one problem with this algorithmic meta - theorem is that the algorithm obtained for a fixed first - order statement @xmath229 can rapidly have towers of twos depending on the quantifier complexity of the statement , in the same way that this happens for courcelle s theorem on decidability of monadic second order statements ( as discussed in subsection [ cource ] ) for graphs of bounded treewidth .",
    "what frick and grohe @xcite showed is that such towers of two s can not be removed unless @xmath189={{\\sf fpt}}.$ ]    another use of parameterized complexity is to give an indirect approach to proving likely intractability of problems which are not known to be np - complete .",
    "a classic example of this is the following problem .",
    "+ precedence constrained @xmath3-processor scheduling + _ instance : _ a set @xmath271 of unit - length jobs and a partial ordering @xmath272 on @xmath271 , a positive deadline @xmath273 and a number of processors @xmath3 .",
    "+ _ parameter : _ a positive integer @xmath3 .",
    "+ _ question : _ is there a mapping @xmath274 such that for all @xmath275 , @xmath276 , and for all @xmath156 , @xmath277 , @xmath278 .",
    "+ in general this problem is np - complete and is known to be in p for 2 processors .",
    "the question is what happens for @xmath279 processors . for us",
    "the question becomes whether the problem is in xp for @xmath279 processors .",
    "this remains one of the open questions from garey and johnson s famous book @xcite ( open problem 8) , but we have the following .    precedence constrained @xmath3-processor scheduling is @xmath143$]-hard .",
    "the point here is that _ even if _  precedence constrained @xmath3-processor scheduling is in xp , there seems no way that it will be feasible for large @xmath3 .",
    "researchers in the area of parameterized complexity have long wondered whether this approach might be applied to other problems like composite number or graph isomorphism .",
    "for example , luks @xcite has shown that graph isomorphism can be solved in @xmath280 for graphs of maximum degree @xmath3 , but any proof that the problem was @xmath82 $ ] hard would clearly imply that the general problem was not feasible . we know that graph isomorphism is almost certainly not np - complete , since proving that would collapse the polynomial hierarchy to 2 or fewer levels ( see the work of schning in  @xcite ) .",
    "similar comments can be applied to graphs of bounded treewidth by bodlaender @xcite .",
    "there have been other parameterized analogs of classical complexity analyzed .",
    "for example mccartin @xcite and flum and grohe @xcite each analyzed parameterized counting complexity . here",
    "we can define the class @xmath281 $ ] for instance ( with the core problem being counting the number of accepting paths of length @xmath3 in a nondeterministic turing machine ) , and show that counting the number of @xmath3 cliques is @xmath281$]-complete .",
    "notably flum and grohe proved the following analog to valiant s theorem on the permanent .    counting",
    "the number of cycles of size @xmath3 in a bipartite graph is @xmath281$]-complete .",
    "one of the hallmark theorems of classical complexity is toda s theorem which states that @xmath282 contains the polynomial time hierarchy .",
    "there is no known analog of this result for parameterized complexity .",
    "one of the problems is that all known proofs of toda s theorem filter through probabilistic classes . whilst there are known analogs of valiant s theorem ( downey , fellows and regan @xcite , and mller @xcite ) , there is no known method of `` small '' probability amplification .",
    "( see montoya @xcite for a thorough discussion of this problem . )",
    "this seems the main problem and there is really no satisfactory treatment of probability amplification in parameterized complexity .",
    "for example , suppose we wanted an analog of the operator calculus for parameterized complexity .",
    "for example , consider @xmath283 $ ] , as an analog of @xmath284 .",
    "we can define @xmath285 $ ] to mean that @xmath286 iff @xmath287 where @xmath45 is a circuit with ( e.g. ) @xmath288 inputs and the number of accepting inputs is odd .",
    "we need that there is a language @xmath289 iff there is a language @xmath290 such that for all @xmath42 , @xmath291 a problem will appear as soon as we try to prove the analog basic step in toda s theorem : @xmath189\\subseteq { \\sf bp}\\cdot \\oplus { \\sf w}[{\\sf p}].$ ] the first step in the usual proof of toda s theorem , which _ can _ be emulated , is to use some kind of random hashing to result in a @xmath292 $ ] circuit with either no accepting inputs , or exactly one accepting input , the latter with _ nonzero _ probability .",
    "so far things work out okay . however , the next step in the usual proof is to amplify this probability : that is , do this a polynomial number of times independently to amplify by majority to get the result in the @xmath293 class .",
    "the problem is that if this amplification uses _ _ many _ _ independently chosen instances , then the number of input variables goes up and the the result is no longer a @xmath189 $ ] circuit since we think of this as a polynomial sized circuit with _ only @xmath196 many inputs .",
    "_ there is a fundamental question : _ is it possible to perform amplification with only such limited nondeterminism ? _    notable here are the following :    for all @xmath139 , there is a randomized fpt - reduction from @xmath142 $ ] to unique @xmath142 $ ] .",
    "( analog of of the valiant - vaziarini theorem )    @xmath189\\cdot { \\sf bpfpt}$ ] ( an analog of @xmath294 ) has weakly uniform derandomization ( `` weakly uniform '' is an appropriate technical condition ) iff there is a polynomial time computable unbounded function @xmath295 with @xmath296 , where @xmath297 denotes bpp with only access to @xmath298 nondeterministic bits .",
    "moritz mller s result says that , more or less , parameterized derandomization implies nontrivial classical derandomization",
    ". other interesting work on randomization in parameterized complexity is to be found in the work of mller .",
    "for instance , in @xcite , he showed that there is a valiant - vaziarini type lemma for most @xmath142$]-complete problems , including e.g .. the only other work in this area is in the papers of montoya , such as @xcite . in @xcite",
    ", montoya showed that it is in a certain sense unlikely that bp@xmath299w[p ] , an analogue of the classical arthur - merlin class , allows probability amplification .",
    "( that is , amplification with @xmath196 bits of nodeterminism is in a sense unlikely . )",
    "much remains to do here .",
    "perhaps due to the delicacy of material , or because of the focus on practical computation , there is only a little work on what could be called parameterized _ structural _ complexity . by this we mean analogs of things like ladner s theorem ( that if @xmath300 then there are sets of intermediate complexity ) ( see @xcite ) , mahaney s theorem that if there is a sparse @xmath301 complete set then @xmath302 ( cesarti and fellows @xcite , the pcp theorem , toda s theorem etc .",
    "there is a challenging research agenda here .",
    "one other fruitful area of research has been the area of _ parameterized approximation _ , beginning with three papers at the same conference ! ( cai and huang @xcite , chen , grohe and grber @xcite , and downey , fellows and mccartin @xcite ) .",
    "parameterized approximation was part of the folklore for some time originating with the dominating set question originally asked by fellows .",
    "for parameterized approximation , one inputs a problem and asks for either a solution of size @xmath69 or a statement that there is no solution of size @xmath3 .",
    "this idea was originally suggested by downey and fellows , inspired by earlier work of robertson and seymour on approximations to treewidth .",
    "of course , we need to assume that @xmath303 $ ] for this to make sense . a classical example taken from garey and",
    "johnson @xcite is bin packing where the first fit algorithm either says that no packing of size @xmath3 exists or gives one of size at most @xmath39 . as observed by downey",
    ", fellows and mccartin  @xcite most @xmath142 $ ] hard problems do not have approximations with an additive factor ( i.e. @xmath304 ) unless @xmath142={\\sf fpt}.$ ] one surprise from that paper is the following .    the problem independent dominating set which asks if there is a dominating set of size @xmath3 which is also an independent set , has no parameterized approximation algorithm for _ any _ computable function @xmath69 unless @xmath143={{\\sf fpt}}.$ ]    subsequently , eickmeyer , grohe grber showed the following in @xcite .",
    "if @xmath89 is a `` natural '' @xmath189$]-complete language then @xmath89 has no parameterized approximation algorithm unless @xmath189={\\sf fpt}.$ ]    the notion of `` natural '' here is indeed quite natural and covers all of the known @xmath189$]-complete problems , say , in the appendix of downey and fellows @xcite .",
    "we refer the reader to @xcite for more details .",
    "one open question asks whether there is any multiplicative fpt  approximation for dominating set .",
    "this question of mike fellows has been open for nearly 20 years and asks in its oldest incarnation whether there is an algorithm which , on input @xmath305 either says that there is no size @xmath3 dominating set , or that there is one of size @xmath39 .",
    "there has been important recent work concerning limitations of parameterized techniques .",
    "one of the most important techniques is that of _ kernelization . _ we will see in subsection [ kernelization ] that this is one of the basic techniques of the area , and remains one of the most practical techniques since usually kernelization is based around simple reduction rules which are both local and easy to implement .",
    "( see , for instance abu - khzam , et .",
    "@xcite , flum and grohe @xcite , or guo and niedermeier @xcite . )",
    "the idea , of course , is that we shrink the problem using some polynomial time reduction to a small one whose size depends only on the parameter , and then do exhaustive search on that kernel .",
    "naturally the latter step is the most time consuming and the problem becomes how to find small kernels .",
    "an important question is therefore : when is it possible to show that a problem has _ no polynomial kernel ? _ a formal definition of kernelization is the following :    [ definition : kernelization]a _ kernelization algorithm _ , or in short , a _ kernel _ for a parameterized problem @xmath306 is an algorithm that given @xmath307 , outputs in @xmath308 time a pair @xmath309 such that    * @xmath310 , * @xmath311 ,    where @xmath34 is an arbitrary computable function , and @xmath312 a polynomial .",
    "any function @xmath34 as above is referred to as the _ size _ of the kernel .",
    "we frequently use the term `` kernel '' for the outputs @xmath313 of the kernelization algorithm and , in case @xmath34 is a polynomial ( resp .",
    "linear ) function , we say that we have a _ polynomial ( resp .",
    "linear ) kernelization algorithm _ or , simply , a _ polynomial ( resp .",
    "linear ) kernel_.    clearly , if @xmath77 , then all problems have constant size kernels so some kind of complexity theoretical hypothesis is needed to show that something does not have a small kernel .",
    "the key thing that the reader should realize is that the reduction to the kernel is a _ polynomial time _",
    "reduction for both the problem _ and _ parameter , and not an fpt algorithm . limiting",
    "results on kernelization mean that this often used practical method can not be used to get fpt algorithms . sometimes showing that problems do not have small kernels ( modulo some hypothesis )",
    "can be extracted from work on approximation , since a small kernel is , itself , an approximation .",
    "thus , whilst we know of a @xmath39 kernel for @xmath3-vertex cover  @xcite , we know that unless @xmath77 , we can not do better than size @xmath314 using dinur and safra @xcite , since the pcp theorem provides a 1.36-lower bound on approximation ( see also  @xcite ) .    to show that certain problems do not have polynomial kernels modulo a reasonable hypothesis , we will need the following definition , which is in classical complexity .",
    "( it is similar to another definition of harnik and noar @xcite ) .",
    "[ definition : distillation]an _ or - distillation algorithm _ for a classical problem @xmath315 is an algorithm that    * receives as input a sequence @xmath316 , with @xmath317 for each @xmath318 , * uses time polynomial in @xmath319 , * and outputs a string @xmath320 with 1 .",
    "@xmath321 for some @xmath322 .",
    "@xmath323 is polynomial in @xmath324 .",
    "we can similarly define _ and - distillation _ by replacing the second last item by `` @xmath321 for _ all _ @xmath322 . ''",
    "bodlaender , downey , fellows and hermelin @xcite showed that an np - complete problem has an or - distillation algorithm iff all of them do . on general kolmogorov complexity grounds",
    ", it seems very unlikely that np - complete problems have either distillation algorithms . following a suggestion of bodlaender , downey , fellows and hermelin , fortnow and santhanam related or - distillation to the polynomial time hierarchy as follows .",
    "[ lemma : no distillation for np_complete]if any np - complete problem has an or - distillation algorithm then co-@xmath325poly and hence the polynomial time hierarchy collapses to 3 or fewer levels .    at the time of writing , there is no known version of lemma [ lemma : no distillation for np_complete ] for and - distillation and it remains an important open question , whether np - complete problems having and - distillation implies any classical collapse of the polynomial time hierarchy .",
    "this material all relates to kernelization as follows .",
    "[ definition : composition]an _ or - composition algorithm _ for a parameterized problem @xmath326 is an algorithm that    * receives as input a sequence @xmath327 , with @xmath328 for each @xmath322 , * uses time polynomial in @xmath329 , * and outputs @xmath330 with 1 .",
    "@xmath331 for some @xmath322 .",
    "@xmath332 is polynomial in @xmath3 .",
    "again we may similarly define _ and - composition .",
    "_ the key lemma relating the two concepts is the following , which has an analogous statement for the and - distillation case :    [ lemma : combining composition and kernelization]let @xmath89 be a or - compositional parameterized problem whose unparameterized version @xmath333 is np - complete . if @xmath89 has a polynomial kernel , then @xmath333 is also or - distillable .",
    "distillation of one problem within another has also been discussed in chen , flum and mller @xcite .",
    "using lemma [ lemma : combining composition and kernelization ] , bodlaender , downey , fellows and hermelin @xcite proved that a large class of graph - theoretic fpt  problems including @xmath3-path , @xmath3-cycle , various problems for graphs of bounded treewidth , etc .",
    ", all have no polynomial - sized kernels unless the polynomial - time hierarchy collapses to three or fewer levels .",
    "for and - composition , tying the distillation to something like the fortnow - santhanam material would be important since it would say that important fpt  problems like treewidth and cutwidth would likely not have polynomial size kernels , and would perhaps suggest why algorithms such as bodlaender s linear time fpt  algorithm @xcite ( and other treewidth algorithms ) is so hard to run . since the original paper  @xcite , there have been a number of developments such as the bodlaender , thomass , and yeo @xcite use of reductions to extend the arguments above to wider classes of problems such as disjoint paths , disjoint cycles , and hamilton cycle parameterized by treewidth . in the same direction , chen , flum and mller @xcite used this methodology to further explore the possible sizes of kernels .",
    "one fascinating application was by fernau et .",
    "they showed that the following problem was in  fpt , by showing a kernel of size @xmath334 .",
    "+ rooted @xmath3-outleaf branching + _ instance : _ a directed graph @xmath217 with exactly one vertex of indegree @xmath161 called the _ root_. + _ parameter : _ a positive integer @xmath3 .",
    "+ _ question : _ is there an oriented subtree @xmath271 of @xmath273 with exactly @xmath3 leaves spanning @xmath273 ?",
    "+ however , for the _ unrooted version _",
    "they used the machinery from  @xcite to demonstrate that it has _ no _ polynomial - size kernel unless some collapse occurs , but clearly by using @xmath14 independent versions of the rooted version the problem has a _ polynomial - time turing kernel_. we know of no method of dealing with the non - existence of polynomial time turing kernels and it seems an important programmatic question .",
    "all of the material on lower bounds for or distillation tend to use reductions to things like large disjoint unions of graphs having or composition .",
    "thus , problems sensitive to this seemed not readily approachable using the machinery .",
    "very recently , stefan kratsch @xcite discovered a way around this problem using the work dell and van melkebeek @xcite .    the fpt problem @xmath3-ramsey which asks if a graph @xmath4 has either an independent set or a clique of size @xmath3 , has no polynomial kernel unless np@xmath335poly .",
    "the point here is that a large collection of disjoint graphs would have a large independent set , hence new ideas were definitely needed .",
    "the ideas in kratsch s proof are quite novel and use co - nondetermism in compositions and communication complexity in a quite novel way . perhaps they might allow us to attack other such problems .    finally ,",
    "we remark in passing that as an important spinoff of the question from parameterized complexity , the fortnow - santhanam lemma has been used by burhmann and hitchcock @xcite to show that unless the polynomial - time hierarchy collapses , np - hard languages must be exponentially dense ( meaning that hard instances must occur very often ) , perhaps suggesting a connection between parameterized complexity and density of hard instances .    for further techniques on lower bounds on kernels , see @xcite .",
    "another direction exploring the fine structure of fpt  was taken by flum , grohe and weyer @xcite who suggested that the important problems were those where the constants were small .",
    "if @xmath89 is fptthen the question `` @xmath336 '' is decidable in time @xmath337 , for some computable function @xmath34 .",
    "but as we have seen @xmath34 could be anything .",
    "flum , grohe and weyer argue that the correct classes to focus upon are those with membership algorithms of the form @xmath338 , @xmath339 , and @xmath340 these classes are called subept , ept and expt , respectively . as a group",
    "they are referred to as _ bounded _",
    "interestingly , the reductions may be different for the different classes , because the idea is to give the maximum power possible to the reductions and yet still remain within the class . for putting this idea in a general framework ,",
    "we mention downey , flum , grohe and weyer @xcite .    of course , any reduction @xmath287 which is polynomial in both variables will keep the problem within the relevant class . as an example , one of the most useful reductions here is the _ ept reduction _ which asks that there is a function @xmath341 so that @xmath45 is computable in time @xmath337 and there is a constant @xmath71 such that @xmath342 .",
    "it is easy to see that ept is closed under ept reductions .",
    "concentrating on ept as a representative example , the next step is to introduce classes akin to the @xmath81-hierarchy for the bounded theory .",
    "for example , a _",
    "nondeterministic @xmath343-restricted turing machine _ is one for which there is a function @xmath344 that for each run on input @xmath345 the machine performs at most @xmath346 many steps such that at most @xmath347 are nondeterministic . using this as the core problem , and closing under ept reductions defines the class @xmath348 $ ] .",
    "more generally , it is possible to extend this definition to define another hierarchy akin to the @xmath81-hierarchy called the @xmath349-hierarchy .",
    "it is , of course , easy to show that the classes ept , expt , subept are all distinct by diagonalization .",
    "but what the new hierarchy allows for is to show that various problems which are all @xmath82$]-hard , say , differ on the new hierarchy , aligning with our intuition that they should be . as an illustration",
    ", there is a problem from computational learning theory called the vapnik - chervonenkis dimension which is proven to be @xmath82$]-complete by combining downey , evans and fellows @xcite and downey and fellows @xcite . the hardness proof in  @xcite used explicitly non - polynomial fpt  reductions .",
    "it turns out that vapnik - chervonenkis dimension is complete for @xmath350 $ ] , and yet the problem tournament dominating set which is @xmath143$]-complete is complete for the class @xmath351 $ ] .",
    "little is known here",
    ". it would be fascinating if a central fpt  problem with infeasible algorithms at present , such as treewidth could be shown to be complete for , say , @xmath351 $ ] , which would suggest no possible _ reasonable _ fpt  algorithm .",
    "the current algorithms only put treewidth into expt .    from @xcite one example of this phenomenon is first - order model - checking over words :",
    "it is in fpt  but even eaw[*]-hard ( a bounded analog of @xmath193 ) .",
    "in such a short article , we do not really have space to devote to the many areas of applications for this hardness theory .",
    "suffice to say , it has been applied in relational databases , phylogeny , linguistics , vlsi design , graph structure theory , cognitive science , nash equilibria , voting schemes , operations research , etc .",
    "we can only point at the various survey articles , the books by niedermeier s @xcite , fernau @xcite , and flum and grohe  @xcite as well as the _ computer journal _ issues mentioned earlier  @xcite .    also we have not really had space to devote neither to many other natural hierarchies based on various aspects of logical depth such as the @xmath352 , @xmath353 and other hierarchies , nor to issues like parameterized parallelism . here",
    "we refer the reader to flum and grohe @xcite .",
    "finally , we have not really developed all of the models which have been used .",
    "what we hope the reader has gotten is the general flavor of the parameterized complexity subject and some appreciation of the techniques .",
    "the diversity of problems and areas where parameterized algorithms have been developed is enormous . in this section",
    "we make an , unavoidably incomplete , presentation of the main techniques and results on the design of parameterized algorithms .",
    "to facilitate our description , we are mainly focusing on problems on graphs .",
    "some basic notational conventions on graphs follow : given a graph , @xmath4 we denote the vertex and edge set of @xmath4 by @xmath354 and @xmath355 respectively . given a vertex @xmath269",
    "we denote the set of its neighbors by @xmath356 .",
    "when a graph @xmath4 is the input of a parameterized problem , we always denote by @xmath14 the number of its vertices .",
    "parameterized algorithm design requires a wider viewpoint that the classic one of polynomial algorithm design .",
    "the reason is that we now permit time complexities that are super - polynomial .",
    "however , we have to make sure that this super - polynomial overhead depends only on the parameter .",
    "a wide family of techniques in parameterized algorithm design can be seen as ways to turn some polynomial non - deterministic algorithms to a deterministic one where the resulting super - polynomial overhead is independent of the main part of the problem .",
    "the most ubiquitous de - nondeterminization technique is the _ bounded search tree technique_. we present it on one of the most extensively studied problems in parameterized algorithms and complexity : + @xmath3-vertex cover    _ instance : _  a graph @xmath4 and a non - negative integer @xmath3 .",
    "+ _ parameter : _ @xmath3 .",
    "+ _ question : _  does @xmath4 have a vertex set @xmath117 of size at most @xmath3 that intersects all the edges of @xmath4 ? + this problem can be solved by the following non - deterministic algorithm :    * 1 . * set @xmath357 and @xmath358 , + * 2 . * while = @xmath359 and @xmath360 , + consider some edge @xmath361 of @xmath4 , + guess _ non - deterministically _ one , say @xmath345 , of the two endpoints of @xmath362 , + set @xmath363 , @xmath364 + * 3 . *",
    "if @xmath365 then return yes + * 4 . *",
    "if @xmath366 , then return no    clearly , this algorithm is based on the fact that for each edge , one of its endpoints should be a vertex of every vertex cover .",
    "it makes at most @xmath3 non - deterministic choices each requiring @xmath367 deterministic steps .",
    "this polynomial non - deterministic algorithm can be reverted to an ( exponential ) deterministic one as follows .",
    "notice that the above algortihm makes @xmath373 recursive calls and the depth of the recursion is @xmath5 .",
    "therefore it takes @xmath374 steps and is an fpt - algorithm .",
    "this implies that @xmath3-vertex cover@xmath375 .",
    "notice that the algorithm is based on the transformation of a non - deterministic algorithm to a deterministic one in a way that the exponential blow - up ( i.e. , the size of the search tree ) depends exclusively on the parameter @xmath3 .",
    "this idea traces back to the paper of buss and goldsmith in  @xcite and the corresponding technique is called the _ bounded search tree technique_.",
    "can we do better ?",
    "a positive answer requires a better combination of non - deterministic guesses . as an example , instead of an edge one may pick a path p with vertices @xmath376 , and @xmath377 . then",
    "every vertex cover of @xmath4 will contain some of the pairs @xmath378 , @xmath379 , @xmath380 .",
    "that way , each recursive call has now @xmath78 calls but also guesses 2 vertices and therefore the depth of the recursion is at most @xmath381 . in case @xmath4",
    "does not contain a path of length @xmath78 , then @xmath4 is a forest of stars and in such a case the @xmath3-vertex cover can be solved in linear time . summing all this together",
    ", we have a @xmath382 step fpt - algorihtm for the @xmath3-vertex cover which improves the previous one , as @xmath383 .",
    "an even faster algorithm can be designed if we exploit the fact that the @xmath3-vertex cover can be solved in linear time for graphs of maximum degree @xmath373 .",
    "then , as long as there is a vertex @xmath270 with at least 3 neighbors , we know that a vertex cover should contain @xmath270 or all its neighbors .",
    "an elementary analysis implies that the size @xmath384 of the search tree satisfies the relation @xmath385 .",
    "as the biggest root of the characteristic polynomial @xmath386 is less than @xmath387 , we have an fpt - algorithm for the the @xmath3-vertex cover that runs in @xmath388 steps .    especially for @xmath3-vertex cover ,",
    "there is a long sequence of improvements of the running time , based on even more refined search trees .",
    "the first non - trivial results dates back to the @xmath389 step algorithm of balasubramanian , fellows , and raman  @xcite .",
    "this result was improved in  @xcite and , currently , the fastest parameterized algorithm for @xmath3-vertex cover runs in @xmath390 steps by chen , kanj , and xia  @xcite . for applications of the same technique on restricted versions of the same problem ,",
    "see  @xcite .",
    "we stress that the bounded search tree technique is strongly linked to the design of exact algorithms , as fpt - algorithms can be seen as exact algorithms where the parameter is not any more restricted .",
    "for instance , the @xmath390 step algorithm of @xcite implies an @xmath391 stepexact algorithm for vertex cover .",
    "however , the existence of fast exact algorithms does not imply directly the existence of a parameterized one with the same parameter dependence .",
    "for example vertex cover can be solved in @xmath392 steps by an algorithm of robson  @xcite ( see also  @xcite for a simpler one running in @xmath393 steps ) . + the bounded search tree technique is an unavoidable ingredient of most parameterized algorithms",
    ". typical examples of problems where this technique has been applied are feedback vertex set @xcite ( @xmath394 steps  see also  @xcite ) , cluster editing @xcite ( @xmath395 steps  see also  @xcite ) , dominating set  @xcite , and partial covering problems @xcite .",
    "a step further in the branching approach is to combine it with some non - deterministic guess of some part of the solution .",
    "this idea is known as the _ greedy localization technique _ and was introduced in  @xcite and  @xcite .",
    "we will briefly present the idea using the following problem . + @xmath3-triangle packing    _ instance : _  a graph @xmath4 and a non - negative integer @xmath3 .",
    "+ _ parameter : _ @xmath3 .",
    "+ _ question : _  does @xmath4 have at least @xmath3 mutually vertex disjoint triangles ? + again , we describe the fpt - algorithm for this problem in its non - deterministic version .",
    "we use the term _ partial triangle _ for any vertex or edge of @xmath4 and we will treat it as a potential part of a triangle in the requested triangle packing . the first step is to find in @xmath4 a maximal set of disjoint triangles @xmath396 . this greedy step justifies the name of the technique and can be done in polynomial time .",
    "if @xmath397 then return yes and stop . if not , let @xmath398 be the graph formed by the disjoint union of the triangles in @xmath399 and and observe that @xmath400 .",
    "the key observation is that if there exists a solution @xmath401 to the problem ( @xmath402 ) , then each @xmath403 should intersect some triangle in @xmath399 , ( because of the maximality of the choice of @xmath399 ) .",
    "these intersections define a partial solution @xmath404 of the problem .",
    "the next step of the algorithm is to _ guess _ them : let @xmath117 be a subset of @xmath405 such that @xmath406 $ ] has at least @xmath3 connected components ( if such a set does not exist , the algorithm returns no and stops ) .",
    "let @xmath407 be these connected components and observe that each @xmath408 is a partial triangle of @xmath4 .",
    "we also denote by @xmath409 the set of vertices in the elements of @xmath410 .",
    "then , the algorithm intends to extend this partial solution to a full one using the following non - deterministic procedure branch@xmath411 :    _ procedure _",
    "@xmath412 + * 1 . *",
    "@xmath413 , @xmath414 + * 2 . * while  = @xmath415 + there exists  partial triangle @xmath88 of @xmath416 + such that @xmath417 $ ] is a triangle , + @xmath418 , @xmath419 + goto step * 4 * + * 3 . * * return * yes and stop .",
    "* let * = @xmath420 be the set containing each vertex @xmath421 + such that @xmath422 is a ( partial ) triangle .",
    "* if * @xmath423 , * then * * return * no and stop , + @xmath424 and + @xmath425 .    in step * 2 * , the procedure checks greedily for a possible extension of @xmath410 to a full triangle packing .",
    "if it succeeds , it enters step * 3 * and returns yes .",
    "if it fails at the @xmath156-th iteration of step * 2 * , this means that one of the vertices used for the current extension ( these are the vertices in @xmath420 constructed in step * 4 * ) should belong to the extension of @xmath408 ( if such a solution exists ) .",
    "so we further _ guess _ which vertex of @xmath87 should be added to @xmath408 and we recurse with this new collection of partial triangles ( if such a vertex does not exist , return a negative answer ) .",
    "this algorithm has two non deterministic steps : one is the initial choice of the set @xmath117 and the other is the one in step * 5 * of @xmath412 .",
    "the first choice implies that @xmath412 is called @xmath426 times ( recall that @xmath427 ) .",
    "each call of @xmath412 has @xmath428 recursive calls and the depth of the recursion is upper bounded by @xmath39 , therefore the size of the search tree is bounded by @xmath426 .",
    "summing up , we have that @xmath3-triangle packing is in @xmath429-fpt .",
    "the greedy localization technique has been used to solve a wide variety of problems .",
    "it was applied for the standard parameterizations of problems such as @xmath152-dimensional matching in  @xcite , @xmath152-set packing in  @xcite , @xmath128-graph packing in  @xcite .",
    "also , similar ideas , combined with other techniques , have been used for various problems such as the ( long - standing open ) directed feedback vertex set  @xcite by and others such as the bounded length edge disjoint paths in @xcite .",
    "the main drawback of this method is that the parameter dependence of the derived fpt - algorithm is typically @xmath430 .",
    "_ instance : _",
    "a graph @xmath4 and a non - negative integer @xmath3 .",
    "+ _ parameter : _ @xmath3 .",
    "+ _ question : _  does @xmath4 have cutwidth at most @xmath3 ?",
    "i.e. , is there a vertex layout @xmath431 of @xmath4 such that for every @xmath432 the number of edges of @xmath4 with one endpoint in @xmath433 and one in @xmath434 is at most @xmath3 ?",
    "+ in what follows we denote the cutwidth of a graph @xmath4 by @xmath435 .",
    "this problem belongs to the category of _ layout problems _ and the technique we present applies to many of them .",
    "the standard approach uses the parameter of pathwidth defined as follows .",
    "given a graph @xmath4 , we say that a sequence @xmath436 of vertex sets from @xmath4 is a _ path decomposition _ of @xmath4 if every vertex or edge of @xmath4 belongs entirely in some @xmath437 and if for every vertex @xmath438 the set @xmath439 is a set of consecutive indices from @xmath440 .",
    "the _ width _ of a path - decomposition is equal to @xmath441 .",
    "the _ pathwidth _ of a graph is the minimum @xmath3 for which @xmath4 has a path - decomposition of width at most @xmath3 .",
    "it follows from the results in  @xcite that the following problem is in @xmath442-fpt : + @xmath3-pathwidth + _ instance : _  a graph @xmath4 and a non - negative integer @xmath3 .",
    "+ _ parameter : _",
    "+ _ question : _  does @xmath4 have pathwidth at most @xmath3 ? + moreover , the aforementioned fpt - algorithm for @xmath3-pathwidth is able to construct the corresponding path - decomposition , in case of a positive answer .",
    "_ instance : _  a graph @xmath4 of pathwidth @xmath444 and a non - negative integer @xmath3 .",
    "+ _ parameter : _ @xmath445 .",
    "+ _ question : _  does @xmath4 have cutwidth at most @xmath3 ? + an fpt - algorithm for @xmath443-@xmath3-cutwidth is based on the construction , for any @xmath446 , of a _ non - deterministic finite state automaton _ that receives @xmath4 as a word encoded in terms of a path decomposition of width at most @xmath447 and decides whether a graph @xmath4 has cutwidth at most @xmath3 .",
    "the number of states of this automaton depends exclusively on the parameters @xmath3 and @xmath447 and , of course , this is also the case when we revert it to a deterministic one .",
    "before we proceed with the definition of the automaton we need some more definitions .",
    "a path decomposition is _ nice _",
    "if @xmath448 , and for every @xmath449 , the symmetric difference of @xmath450 and @xmath437 contains only one vertex .",
    "moreover , if this vertex belongs to @xmath437 we call it _ insert vertex _ for @xmath437 and if it belongs to @xmath450 we call it",
    "_ forget vertex _ for @xmath437 .",
    "given a nice path decomposition @xmath436 of @xmath4 of width at most @xmath447 , it is easy to construct an @xmath451-coloring @xmath452 of @xmath4 such that vertices in the same @xmath437 have always distinct colors ( we refer to these colors using bold characters ) . if @xmath437 has an introduce vertex then set @xmath453 where @xmath454 and @xmath455}(v))$ ] ( if @xmath456 then @xmath457 ) .",
    "if @xmath437 has a forget vertex then set @xmath458 where @xmath459 .",
    "we encode @xmath460 as a string @xmath461 whose @xmath156-th letter is @xmath462 , @xmath463 .",
    "let @xmath49 be an alphabet consisting of all possible @xmath464 and @xmath465 ( notice that the size of @xmath49 depends only on @xmath447 ) and denote @xmath466 .",
    "we also set up a set of labels @xmath467 where bold numbers represent colors and `` '' represents the absence of a vertex .",
    "@xmath470 $ ] , @xmath471 , and for any @xmath472 and @xmath473 or @xmath474 , the value of the transition function @xmath475 is defined as follows : @xmath476 and @xmath477 in the definition of @xmath478 , @xmath479 _ guesses _ the position @xmath156 where the vertex colored by @xmath480 is being inserted in the already guessed layout .",
    "bodlaender , fellows , and thilikos proved the following in  @xcite .      in the above lemma",
    ", @xmath483 is the language recognized by the automaton @xmath87 .",
    "notice that in @xmath479 the definition of @xmath475 does not require any knowledge of @xmath4 .",
    "this is because the adjacency information codified in the string @xmath461 is enough for the definition of @xmath475 .",
    "however , the number @xmath484 of the states still depends on the size of @xmath4 . to explain how this problem can be overcome we give an example .",
    "suppose we have a substring @xmath485 in some state of @xmath486 .",
    "then notice the following : if the automaton accepts the string @xmath461 and during its operation enters this state and proceeds by `` spliting '' the number @xmath487 then it will also accept the same string if it `` splits '' instead the number @xmath488 .",
    "this essentially means that it is not a problem if we `` forget '' 7 from this state . as a consequence of this observation",
    ", we can reduce the length of the strings in @xmath486 by suitably `` compressing '' them ( see  @xcite ) . to explain this we first need some definitions .",
    "let @xmath489 .",
    "we say that a @xmath490 is a _ portion _ of @xmath491 if it is a maximal substring of @xmath491 that does not contain symbols from @xmath492 .",
    "we say that a portion of @xmath491 is _ compressed _ if it does not contain a sub - sequence @xmath493 such that either @xmath494 or @xmath495 . the operation of replacing in a portion",
    "any such a subsequence by @xmath496 is called _ compression _ of the portion .",
    "we also call _ compression of _ @xmath489 the string that appears if we compress all portions of @xmath491 .",
    "we define @xmath497 as the set occurring from @xmath486 if we replace each of its strings by their compressions .",
    "this replacement naturally defines an equivalence class in @xmath486 where two strings are equivalent if they have the same compression .",
    "that , way , @xmath497 defines a `` _ set of characteristics _ '' of @xmath486 in the sense that it contains all the useful information that an automaton needs in order to operate .",
    "the good news is that the size of @xmath497 is now depending _ only _ on @xmath447 and @xmath3 . indeed , in  @xcite it was proved that @xmath498 and this makes it possible to construct an automaton that does not depend on the input graph @xmath4 . in particular define the non - deterministic finite state automaton @xmath499 . here",
    "@xmath500 where @xmath501 is the function that receives a set of members of @xmath486 and outputs the set of all their compressions .",
    "the following holds :      as mentioned , the construction of the automaton @xmath503 depends only on @xmath447 and @xmath3 .",
    "moreover , as the input is a string of length @xmath367 the decision can be made non - deterministically in linear time .",
    "as for every non - deterministic finite state automaton one can construct an equivalent deterministic one ( notice that the state explosion will be an exponential function on @xmath3 and @xmath447 ) , we deduce the following :        an fpt - algorithm for @xmath3-cutwidth follows easily from theorem  [ pw - cut - check ] by taking into account that if the input graph @xmath4 has cutwidth at most @xmath3 then it also has a path decomposition of width at most @xmath3 ( see  @xcite ) . recall that @xmath3-pathwidth belongs to @xmath442-fpt@xcite . using this algorithm",
    ", we check whether the pathwidth of @xmath4 is at most @xmath3 and , in case of a negative answer , we report a negative answer for cutwidth as well .",
    "otherwise , the same algorithm outputs a path decomposition of @xmath4 of width at most @xmath3 .",
    "then we may solve @xmath3-cutwidth by applying the fpt - algorithm of theorem  [ pw - cut - check ] .",
    "the above technique is known as the _",
    "characteristic sequences technique _ and appeared for the first time in  @xcite ( for pathwidth and treewidth ) and has further been developed in  @xcite ( for linear - width , branchwidth , cutwidth , and carving - width ) .",
    "its automata interpretation appeared in  @xcite and derived fpt - algoroithms for weighted and directed variants of pathwidth , cutwidth , and modified - cutwidth ( see also  @xcite for a survey ) .",
    "finally , an extension of the same technique for more general parameters appeared by berthom and nisse in  @xcite .      by the term _ algorithmic meta - theorem _ we mean a theorem than provides generic conditions concerning the problem itself that enable us to guarantee the existence ( constructive or not ) of an algorithm .",
    "in a sense , ( constructive ) meta - algorithmic results provide algorithms that receive as input the problem and output an algorithm to solve it .",
    "such results usually require a combinatorial condition on the inputs of the problem and a logical condition on the statement of the problem .",
    "this is a `` _ dream ideal algorithm - design technique _ '' since we automatically obtain an algorithm given just the specification of the problem .",
    "we remark that these methods are so general that , in most of the cases , they not produce very good algorithms , especially in terms of the constants . as we mentioned in subsection  [ ocapp ] , sometimes this impracticality is provable .",
    "paradoxically , this impracticality is often proved using parameterized complexity classes like @xmath37 $ ] . however , at least for courcelle s theorem , the methods work well for problems of small quantifier depth , and the principle impediment here is a really good algorithm for finding tree ( or other ) decompositions",
    ". we will also discuss efforts towards speeding up those algorithms in subsection  [ ffpta ] .",
    "we also remark that the ideas have been applied beyond graphs , for example to _",
    "_ matrices _ _ and _ _ matroids _ _ via the work of , for example , petr hlien @xcite or geelen , gerards , and whittle @xcite .",
    "we do not have the space or expertise to present their ideas , and refer the reader to their work for more details .",
    "the logical condition is related to the monadic second order logic on graphs ( msol ) .",
    "its syntax requires an infinite supply of individual variables , usually denoted by lowercase letters x , y , z and an infinite supply of set variables , usually denoted by uppercase letters x , y , z .      * atomic formulas @xmath505 , @xmath506 and @xmath507 ( for set variables @xmath113 and individual variables @xmath345 ) by using the usual boolean connectives @xmath508 ( negation ) , @xmath509 ( conjuction ) , @xmath510(disjunction ) , @xmath511 ( implication ) , and @xmath512 ( bi - implication ) and * existential quantification @xmath513 and universal quantification @xmath514 over individual variables and set variables .",
    "individual variables range over vertices of a graph and set variables are interpreted by sets of vertices .",
    "the atomic formula @xmath505 express adjacency , the formula @xmath506 expresses equality and @xmath507 means that the vertex @xmath345 is contained in the set @xmath113 .",
    "the semantics of the monadic - second order logic are defined in the obvious way . as an example of an msol property on graphs , we give the following formula @xmath515 and observe that @xmath516 ( @xmath4 _ models _",
    "@xmath247 ) if and only if @xmath4 is 3-colorable ( the two first lines ask for a partition of the vertices of @xmath4 into three sets @xmath517 , @xmath518 , and @xmath88 and the two last lines ask for the non - existence of an edge between vertices of the same part of this partition ) .      a _ branch decomposition _ of a graph",
    "@xmath4 is a pair @xmath519 , where @xmath271 is a ternary tree ( a tree with vertices of degree one or three ) and @xmath520 is a bijection from @xmath521 to the set of leaves of @xmath271 .",
    "clearly , every edge @xmath362 of @xmath271 defines a partition @xmath522 of @xmath355 where , for @xmath523 , @xmath524 contains the leaves of the connected components of @xmath525 . the _ middle set function _",
    "@xmath526 of a branch decomposition maps every edge @xmath362 of @xmath271 to the set ( called _ middle set _ ) containing every vertex of @xmath4 that is incident _ both _ to some edge in @xmath527 and to some edge in @xmath528 .",
    "the _ branchwidth _ of @xmath519 is equal to @xmath529 and the _ branchwidth _ of @xmath530 , @xmath531 , is the minimum width over all branch decompositions of @xmath530 .",
    "now we are ready to define the following parameterized meta - problem .",
    "+ @xmath532-@xmath247-model checking for @xmath247 + _ instance : _  a graph @xmath4 .",
    "+ _ parameter : _ @xmath533 .",
    "+ _ question : _  @xmath516 ? + at this point we must stress that branchwidth can be interchanged with its `` twin '' parameter of treewidth , @xmath534 , for most of their applications in parameterized algorithm design .",
    "the reason is that for every graph @xmath4 , it holds that @xmath535 , where by @xmath534 we denote the treewidth of @xmath4  @xcite",
    ". therefore , there is not much difference in the @xmath532-@xmath247-model checking for @xmath247 problem if we use treewidth instead of branchwidth        a proof of the above theorem can be found in  ( * ? ? ?",
    "* chapter 6.5 ) and ( * ? ? ?",
    "* chapter 10 ) and similar results appeared by arnborg , lagergren , and seese in  @xcite and borie , parker , and tovey in  @xcite .",
    "also , an alternative game theoretic - proof has appeared recently in  @xcite .",
    "in fact , theorem  [ courcelle : th ] holds also for the more general monadic second order logic , namely msol@xmath537 , where apart from quantification over vertex sets we also permit quantification over edge sets .",
    "it also has numerous generalizations for other extensions of msol ( see  @xcite ) .",
    "theorem  [ courcelle : th ] and its extensions can be applied to a very wide family of problems due to the expressibility power of msol . as a general principle ,",
    "`` most normal '' problems in @xmath111 can be expressed in msol@xmath537 , and hence they are classified in fpt for graphs of bounded width .    _ _ however , _",
    "_ there are still graph problems that remain parameterized - intractable even when parameterized in terms of the branchwidth of their inputs . as examples , we mention list coloring , equitable coloring , precoloring extension  @xcite , and bounded length edge - disjoint paths  @xcite .    in  @xcite , courcelle , makowski , and rotics extended theorem  [ courcelle : th ] for the more general parameter of rankwidth",
    "( see also  @xcite ) .",
    "the definition of rankwidth is quite similar to the one of branch - width : a _ rank decomposition _ of a graph @xmath4 is again a pair @xmath519 with the difference that now @xmath520 is a bijection from @xmath538 to the set of leaves of @xmath271 . for each edge @xmath362 of @xmath271 ,",
    "the partition @xmath539 is a partition of @xmath354 which , in turn , defines a @xmath540 matrix @xmath541 over the field @xmath542 with entries @xmath543 for @xmath544 where @xmath545 if @xmath546 , otherwise @xmath547 .",
    "the _ rank - order _ @xmath548 of @xmath362 is defined as the row rank of @xmath541 .",
    "similarly to the definition of branch - width , the _ rankwidth _ of @xmath519 is equal to @xmath549 and the _ rankwidth _ of @xmath530 , @xmath550 , is the minimum width over all rank decompositions of @xmath530 .",
    "rank - width is a more general parameter than branchwidth in the sense that there exists a function @xmath34 were @xmath551 for every graph @xmath4 , as proved by oum and seymour in  @xcite .",
    "consider now the following parameterized meta - problem .",
    "+ @xmath552-@xmath247-model checking for @xmath247 + _ instance : _  a graph @xmath4 .",
    "+ _ parameter : _ @xmath553 .",
    "+ _ question : _",
    "+ we can now present the following extension of theorem  [ courcelle : th ] .",
    "actually the original statement of theorem  [ ext : more ] used yet another width metric , called cliquewidth , instead of rankwidth .",
    "however , we avoid the definition of cliquewidth and we use rankwidth instead , in order to maintan uniformity with the definition of branchwidth . in what concerns the statement of the theorem , this makes no difference as rankwidth and cliquewidth are parametrically equivalent : as proved in  @xcite , for every graph @xmath4 , @xmath554 ( where @xmath555 is the cliquewidth of @xmath4 ) .",
    "it is interesting to observe that theorem  [ ext : more ] is not expected to hold for msol@xmath537 formulas .",
    "indeed , fomin , golovach , lokshtanov , and saurabh , proved in  @xcite that there are problems , such as graph coloring , edge dominating set , and hamiltonian cycle that can be expressed in msol@xmath537 but not in msol , that are [ 1]-hard for graphs of bounded cliquewidth ( or rankwidth ) .      while the parameterized tractability horizon of msol - expressible problems is restricted to graphs of bounded branchwidth",
    ", one can do much more for problems that can be expressed in first order logic ( fol ) .",
    "first order formulas are defined similarly to msol formulas with the ( essential ) restriction that no quantification on sets of variables is permitted any more .",
    "a typical example of a parameterized fol - formula is the following : @xmath556 the formula @xmath557 expresses the fact that @xmath4 has a dominating set of size @xmath3 .",
    "+ let @xmath558 be a class of graphs .",
    "we consider the following parameterized meta - problem . + @xmath247-model checking for fol in @xmath558    _ instance : _  a graph @xmath559 and a fol - formula @xmath247 .",
    "+ _ parameter : _ @xmath560 .",
    "+ _ question : _  @xmath516 ? + a graph @xmath128 is a",
    "_ minor _ of a graph @xmath4 , we denote it by @xmath561 , if there exists a partial function @xmath562 that is surjective and such that      given a graph @xmath128 we say that a graph class @xmath568 is _ @xmath128-minor free _ if none of the graphs in @xmath568 contain @xmath128 as a minor .",
    "intuitively , @xmath128 is a minor of @xmath4 if @xmath128 can be obtained from a subgraph of @xmath4 after applying a ( possibly empty ) sequence of edge contractions .",
    "if in the definition of the minor relation we further restrict each @xmath564 $ ] to have radius at most @xmath152 , for some @xmath569 , then we say that @xmath128 is a _",
    "@xmath152-shallow minor _ of @xmath4 and we denote it by @xmath570 .",
    "the _ grad _ ( greatest reduced average density ) _ of _ _ rank _ @xmath152 of a graph @xmath4 is equal to the maximum average density over all @xmath152-shallow minors of @xmath4 and is denoted by @xmath571 .",
    "we say that a graph class @xmath568 has _ bounded expansion _ if there exists a function @xmath572 such that @xmath573 for every integer @xmath574 and for every graph in @xmath568 .",
    "the notion of bounded expansion was introduced by neetil and ossona de mendez in  @xcite and was studied in  @xcite .",
    "examples of classes of graphs with bounded expansion include proper minor - closed classes of graphs is _",
    "( proper ) minor - closed _ if it ( does not contain all graphs and ) is closed under taking minors .",
    "] , classes of graphs with bounded maximum degree , classes of graphs excluding a subdivision of a fixed graph , classes of graphs that can be embedded on a fixed surface with bounded number of crossings per each edge and many others ( see  @xcite ) .",
    "many meta - algorithmic results from proper minor - closed classes of graphs to classes of graphs with bounded expansion , see  @xcite .",
    "these include the classes of graphs of bounded local treewidth .",
    "the reader will recall that a class of graphs @xmath267 of graphs has bounded local treewidth iff there a function @xmath34 such that for all graphs @xmath268 and all vertices @xmath269 the neighbourhood of @xmath270 of distance @xmath3 from @xmath270 has treewidth @xmath69 .",
    "if @xmath568 is a graph class of bounded expansion , then @xmath247-model checking for fol in @xmath558 belongs to fpt .",
    "in particular , there exists a computable function @xmath53 and an algorithm that , given a @xmath14-vertex graph @xmath575 and a fol - formula @xmath247 as input , decides whether @xmath516 in @xmath576 steps .",
    "actually , there is an extension of the above for the even more general case where @xmath568 has _ locally bounded expansion _ , that is there exists a function @xmath577 such that @xmath578 for every integer @xmath574 and for every graph that is a subgraph of the @xmath71-neighborhood of a vertex of a graph from in @xmath568 . in this case , according to  @xcite , the algorithm runs in @xmath579 steps , for every @xmath580 .",
    "the graph minor theory has been developed by robertson and seymour towards proving the long - standing wagner s conjecture : _ graphs are well quasi - ordered under the minor relation _ ( see theorem  [ rste ] below ) .",
    "the contribution of the results and the methodologies derived by this theory to the design and analysis of parameterized algorithms , was fundamental . in this subjection and the next one we present some of the main contributions in this direction .",
    "a _ graph parameter _ is a recursive function @xmath581 mapping graphs to non - negative integers .",
    "a graph parameter @xmath581 is _ minor - closed _ if @xmath582 implies @xmath583 .",
    "given a graph parameter @xmath581 and @xmath584 , we define its _ @xmath3-th obstruction _ @xmath585 as the set of all minor - minimal graphs of the set @xmath586 .",
    "the following lemma is a direct consequence of the definitions .",
    "part of the graph minors series was the study of the parameterized complexity of the following problem and its generalizations .",
    "+ @xmath128-minor checking + _ instance : _  two graphs @xmath4 and @xmath128 .",
    "+ _ parameter : _ @xmath592 .",
    "+ _ question : _  is @xmath128 a minor of @xmath4 ?      to demonstrate the importance of the above results to fpt - algorithm design , we consider the following meta - problem . +   + _ instance : _   a graph @xmath530 and an integer @xmath594 .",
    "+ _ parameter : @xmath595 _ + _ question : _   * p*(g)@xmath596 ? + it is now easy to check that lemma  [ easy ] , corollary  [ finitecor ] , and theorem  [ checking ] imply the following meta - algorithmic theorem .",
    "notice that the above theorem implies the _ existence _ of an fpt - algorithm for and _ not _ its constructibility .",
    "the construction of the algorithm for some specific parameter @xmath581 is possible only when @xmath588 can be constructed for all @xmath584 .",
    "moreover , the general problem of computing @xmath588 is not recursively solvable , as has been noticed in  @xcite ( see also  @xcite ) ; see also the results of friedman , robertson , and seymour  @xcite on the non - constructibility of the robertson and seymour theorem .",
    "our first example of the applicability of theorem  [ metaena ] concerns vertex cover .",
    "we define @xmath598 as the minimum size of a vertex cover in @xmath4 .",
    "notice that @xmath599 is minor - closed and therefore , theorem  [ metaena ] can be applied . moreover , in  @xcite , dinneen and lai proved that each graph in @xmath588 has at most @xmath151 vertices and this implies the constructibility of @xmath588 for a given @xmath3 : just enumerate all graphs of at most @xmath151 vertices and filter those that are minor minimal . as a consequence , we can construct an fpt - algorithm for vertex cover .",
    "our next example concerns the following problem .",
    "+   + _ instance : _   a graph @xmath530 and an integer @xmath600 . + _ parameter : @xmath595 _ + _ question : _ does @xmath4 contain a feedback vertex set of size @xmath5 ( i.e. , a set of at most @xmath3 vertices meeting all its cycles ) ?",
    "+ we define @xmath601 as the minimum size of a feedback vertex set of @xmath4 .",
    "it is easy to observe that @xmath602 is minor - closed , therefore belongs to @xmath603 .",
    "unfortunately , this approach is not able to construct the algorithm as there is no known upper bound on the size of @xmath604 for all @xmath605 ( for @xmath606 , @xmath604 has been found in  @xcite ) . to make the result constructive , we need some more results .",
    "we call a parameter @xmath581 _ treewidth - bounded _ , if @xmath607 for some recursive function @xmath34 .",
    "we also call @xmath581 _ msol - definable _ if , for every @xmath584 , the class of graphs @xmath608 is definable by an msol formula @xmath557 ( the length of the formula depends on @xmath3 ) .",
    "the following lemma was proved by adler , grohe , and kreutzer in  @xcite ( see also  @xcite ) .",
    "it is easy to observe that @xmath610 .",
    "therefore , corollary  [ metaduo ] implies that one may construct an algorithm computing @xmath604 and this , in turn , implies that one can construct an fpt - algorithm for feedback vertex set .",
    "+ our next example is more complicated .",
    "a planar graph @xmath128 is a _",
    "@xmath3-fold planar cover _ of a graph @xmath4 if there is a surjection @xmath611 such that      we consider the following parameterized problem .",
    "+   + _ instance : _   a graph @xmath530 and an integer @xmath600 .",
    "+ _ parameter : @xmath595 _ + _ question : _ does @xmath4 have a @xmath3-fold planar cover ?",
    "+ let @xmath618 be the minimum @xmath3 for which @xmath4 has a @xmath3-fold planar cover . for completeness we set @xmath619 if such a cover does not exists .",
    "it is easy to observe ( see e.g.  @xcite ) that @xmath618 is minor - closed , therefore , from theorem  [ metaena ] @xmath620 .",
    "however this result still remains non - constructive as , so far , there is no known procedure to construct @xmath621 for @xmath249 .",
    "[ simpletomore ] there is an algorithm that , given two classes @xmath622 , @xmath623 of finite graphs represented by their obstruction sets @xmath624 and @xmath625 , computes the set of excluded minors for the union @xmath626 .    the above theorem , can be useful for making the meta - algorithm of theorem  [ metaena ] constructive . for this",
    "consider two graph parameters @xmath627 and @xmath628 .",
    "we define the _ union _ of @xmath627 and @xmath628 as the parameter @xmath581 where @xmath629 .",
    "a direct consequence of theorem  [ simpletomore ] is the following :    [ corpars ] let @xmath627 and @xmath628 be minor - closed parameters for which @xmath630 is constructively in @xmath631 for @xmath523 . then the is also constructively in fpt , where @xmath581 is the union of @xmath627 and @xmath628 .",
    "an interesting problem is to extend as much as possible the collection of parameters where corollary  [ corpars ] can be made constructive .",
    "another running project is to find ( when possible ) counterparts of the algorithm of theorem  [ checking ] for other partial relations on graphs .",
    "an important step in this direction was done by grohe , kawarabayashi , marx , and wollan @xcite for the relations of topological minor and immersion .",
    "one of the most important contributions of the graph minors project to parameterized algorithm design was the proof , in  @xcite , that the following problem is in @xmath632-@xmath74 ( a faster , @xmath633 step algorithm appeared recently in  @xcite ) .",
    "+   + _ instance : _   a graph @xmath4 with @xmath3 pairs of terminals @xmath634 .",
    "+ _ parameter : @xmath595 _ + _ question : _ are there @xmath3 pairwise vertex disjoint paths @xmath635 in @xmath4 such that @xmath636 has endpoints @xmath637 and @xmath638 ? + the algorithm for the above problem is based on an idea known as the _ irrelevant vertex technique _ and revealed strong links between structural graph theory and parameterized algorithms . in general the idea",
    "is described as follows .",
    "let @xmath639 be an input of the @xmath3-disjoint paths .",
    "we say that a vertex @xmath269 is _ solution - irrelevant _ when @xmath639 is a yes - instance if only if @xmath640 is a yes - instance .",
    "if the input graph @xmath4 violates some structural condition , then it is possible to find a vertex @xmath270 that is solution - irrelevant .",
    "one then repeatedly removes such vertices until the structural condition is met which means that the graph has been simplified and a solution is easier to be found .",
    "in  @xcite robertson and seymour proved , for some specific function @xmath642 , that if the input graph @xmath4 contains some @xmath643 as a minor , then @xmath4 contains some solution - irrelevant vertex that can be found in @xmath644 steps .",
    "this permits us to assume that every input of the problem is @xmath643-minor free , thus enforcing structural condition ( i )",
    ". of course , such graphs may still be complicated enough and do not necessarily meet condition  ( ii ) . using a series of ( highly non - trivial ) structural results  @xcite , robertson and seymour",
    "proved that there is some function @xmath645 such that every @xmath643-minor free graph with treewidth at least @xmath646 contains a solution - irrelevant vertex that can be found in @xmath647 steps .",
    "this enforces structural property ( ii ) and then @xmath3-disjoint paths can be solved in @xmath442 steps , using courcelle s theorem ( theorem  [ courcelle : th ] ) .",
    "actually the above idea was used in  @xcite to solve a more general problem that contains both @xmath3-disjoint paths and @xmath128-minor checking .",
    "the only `` drawback '' of this algorithm is that its parametric dependence , i.e. , the function @xmath34 is immense . towards lowering the contribution of @xmath34 , better combinatorial bounds where provided by kawarabayashi and wollan in  @xcite .",
    "also , for planar graphs a better upper bound was given in  @xcite .",
    "the irrelevant vertex technique has been used extensively in parameterized algorithm design . for a sample of results that use this technique ,",
    "see  @xcite .",
    "clearly the fpt - algorithms presented in the previous subsection are far from being practical as their parameter dependence may be huge .",
    "a big part of research has been devoted to the reduction of their parameter dependence or at least to the detection of classes of their instances where such a simplification is possible .      while the parameter dependence of the algorithms derived by theorem  [ courcelle : th ] are huge ( see  @xcite ) , they usually can be considerably improved with the use of dynamic programming . in what follows",
    ", we describe the general approach and provide two simple examples .",
    "suppose that @xmath4 is a graph and let @xmath519 be a branch decomposition of it of width at most @xmath3 .",
    "for applying dynamic programming on @xmath519 we consider the tree @xmath271 to be _ rooted _ at one of its leaves .",
    "let @xmath648 be this leaf and let @xmath649 be the edge of @xmath271 that contains it . also , we slightly enhance the definition of a branch decomposition so that no edge of @xmath4 is assigned to @xmath648 and thus @xmath650 ( for this",
    ", we take any edge of the branch decomposition , subdivide it and then connect the subdivision vertex with a new ( root ) leaf @xmath651 , using the edge @xmath649 ) .",
    "the edges of @xmath271 can be oriented towards the root @xmath649 , and for each edge @xmath652 we denote by @xmath653 the edges of @xmath4 that are mapped to leaves of @xmath271 that are descendants of @xmath362 .",
    "we also set @xmath654 $ ] and we denote by @xmath655 the edges of @xmath271 that are incident to leaves of @xmath271 that are different than @xmath648 .",
    "given an edge @xmath362 heading at a non - leaf vertex @xmath270 , we denote by @xmath656 the two edges with tail @xmath270 .",
    "_ instance : _",
    "a graph @xmath4 and a non - negative integer @xmath657 .",
    "+ _ parameter : _ @xmath658 .",
    "+ _ question : _  does @xmath4 have a vertex set @xmath117 of size at most @xmath657 that intersects all the edges of @xmath4 ?",
    "+ let @xmath4 be a graph and @xmath659 where @xmath660 .",
    "we say that @xmath661 if @xmath4 contains a vertex cover @xmath117 where @xmath662 and @xmath663 .",
    "let @xmath664 the set @xmath665 book - keeps all pairs @xmath666 certifying the existence , in @xmath667 , of a vertex cover of size @xmath668 whose restriction in @xmath669 is @xmath113 .",
    "observe that @xmath670 iff @xmath671 .",
    "for each @xmath652 we can compute @xmath665 by using the following dynamic programming formula : @xmath672 note that for each @xmath652 , @xmath673 .",
    "therefore , the above algorithm can check whether @xmath670 in @xmath674 steps .",
    "using the fact that every @xmath14-vertex graph has at most @xmath675 edges , we obtain that @xmath676 . as @xmath677",
    ", the above dynamic programming algorithm implies that @xmath532-vertex cover belongs to @xmath678-fpt .",
    "+ our second example is a dynamic programming algorithm for the following problem : + @xmath532 - 3-coloring + _ instance : _  a graph @xmath4 .",
    "+ _ parameter : _ @xmath658 .",
    "+ _ question : _  does @xmath4 have a proper 3-coloring ? + we will consider 3-coloring functions of the type @xmath679 and , for @xmath680 , we use the notation @xmath681 and @xmath682 .    given a rooted branch decomposition @xmath519 an edge @xmath683 , we use the notation @xmath684 for all functions @xmath685 and the notation @xmath686 for all proper 3-colorings of @xmath667 .",
    "we define @xmath687 the set @xmath688 stores the restrictions in @xmath669 of all proper 3-colorings of @xmath667 .",
    "notice that for each @xmath652 , @xmath689 and observe that @xmath4 has a 3-coloring iff @xmath690 ( if @xmath691 , then it contains the empty function ) .",
    "for each @xmath652 we can compute @xmath665 by using the following dynamic programming formula : @xmath692 clearly , this simple algorithm proves that @xmath532 - 3-coloring belongs to @xmath693-fpt .",
    "a straightforward extension implies that @xmath532-q - coloring belongs to @xmath694-fpt .    in both above examples",
    ", we associate to each edge @xmath652 some _ characteristic structure _ , that , in case of @xmath532-vertex cover and @xmath532 - 3-coloring , is @xmath665 and @xmath688 respectively .",
    "this structure is designed so that its value for @xmath649 is able to determine the answer to the problem . then , it remains to give this structure for the leafs of @xmath271 and then provide a recursive procedure to compute bottom - up all characteristic structures from the leaves to the root .",
    "this dynamic programming machinery has been used many times in parameterized algorithm design and for much more complicated types of problems . in this direction ,",
    "the algorithmic challenge is to reduce as much as possible the information that is book - kept in the characteristic structure associated to each edge of @xmath271 .",
    "usually , for simple problems as those examined above , where the structure encodes subsets ( or a bounded number of subsets ) of @xmath669 , it is easy to achieve a single - exponential parametric dependence .",
    "typical examples of such problems are dominating set , max cut and independent set , parameterized by treewidth / branchwidth , where the challenge is to reduce as much as possible the constant hidden in the @xmath695-notation of their @xmath696-parameter dependence . apart from tailor - made improvements for specific problems such as @xmath697-dominating set and @xmath697-vertex cover ( see e.g.  @xcite ) , substantial progress in this direction has been done using the fast matrix multiplication technique , introduced by dorn in  @xcite and the results of rooij , bodlaender , and rossmanith in  @xcite , where they used the generalized subset convolution technique ( introduced by of bjrklund , husfeldt , kaski , and koivisto in  @xcite ) .",
    "recently , some lower bounds on the parameterized complexity of problems parameterized by treewidth were given by lokshtanov , marx , and saurabh in  @xcite . according to  @xcite ,",
    "unless sat is solvable in @xmath698 steps , @xmath532-independent - set does not belong to @xmath699-fpt , @xmath532-max cut does not belong to @xmath700-fpt , @xmath532-dominating - set does not belong to @xmath700-fpt , @xmath532-odd cycle transversal does not belong to @xmath700-fpt , and @xmath532-q - coloring does not belong to @xmath701-fpt . the assumption that @xmath702-time ,",
    "is known as the _ strong exponential time hypothesis _ ( seth ) and was introduced by impagliazzo and paturi in  @xcite .    for more complicated problems , where the characteristic encodes pairings , partitions , or packings of @xmath669 the parametric dependence of the known fpt  algorithms is of the type @xmath703 or worst .",
    "usually , these are problems involving some global constraint such as connectivity on the certificate of their solution .",
    "recent complexity results of lokshtanov , marx , and saurabh  @xcite show that for problems such as the disjoint paths problem no @xmath704-algorithm exists unless eth fails . on the other hand ,",
    "a technique was recently introduced by cygan , nederlof , m. pilipczuk , m. pilipczuk , van rooij , and wojtaszczyk in  @xcite , solved many problems of this type in @xmath705 steps by randomized monte carlo algorithms .",
    "this includes problem as  hamiltomian path , feedback vertex set and connected dominating set . for planar graphs it is still possible to design @xmath706 step dynamic programming algorithms using the the _ catalan structures _",
    "technique introduced by dorn , penninkx , bodlaender , and fomin in  @xcite .",
    "this technique uses a special type of branch decomposition called _ sphere cut decompositions _ introduced in  @xcite . in such decompositions , the vertices of @xmath669",
    "are virtually arranged on a closed curve of the surface where the input graph is embedded . in case",
    "the characteristic structure encodes non - crossing pairings , its size is proportional to the @xmath3-th catalan number that is single - exponential in @xmath3 .",
    "this fact yields the @xmath706 time bound to the corresponding dynamic programming algorithms .",
    "the same technique was extended by dorn , fomin , and thilikos in  @xcite for bounded genus graphs and in  @xcite for every graph class that excludes some graph as a minor .",
    "finally , ru , sau , and thilikos  in  @xcite extended this technique to wider families of problems .",
    "in  @xcite cai and juedes proved that @xmath3-vertex cover can not be solved in @xmath707 steps unless eth collapses .",
    "the linear parameter dependence of the standard reductions from @xmath3-vertex cover to other problems such as @xmath3-dominating set or @xmath3-feedback vertex set imply that the same lower bound holds for these problems as well . in other words , for a wide class of parameterized problems membership in the parameterized class  ept ( containing all problems solvable in @xmath708 steps as defined in subsection  [ boundedx ] ) is the best we may expect .",
    "however , to prove membership in ept is not always easy . in fact",
    "none of the the techniques described so far guarantees that the derived algorithms will have single - exponential parameter dependence .",
    "we describe two general techniques that yield such bounds .      as a technique ,",
    "iterative compression dates back to the parameterized algorithm given by reed , smith , and vetta in  @xcite for the problem odd cycle transversal that , given a graph @xmath4 and an integer @xmath3 , asks whether there is a set @xmath117 of at most @xmath3 vertices meeting all odd cycles of @xmath4 ( see also  @xcite ) . before  @xcite",
    ", this was a popular open problem and iterative compression appeared to be just the correct approach for its solution . in what follows",
    "we will give a generic example of this technique .",
    "let @xmath47 be a graph property that is _ hereditary _ i.e. , if @xmath128 is an induced subgraph of @xmath4 and @xmath709 , then also @xmath710 .",
    "we define the following meta - problem :    @xmath3-vertex deletion distance from @xmath47 + _ instance : _  a graph @xmath4 and a non - negative integer @xmath3 .",
    "+ _ parameter : _ @xmath3 .",
    "+ _ question : _  is there an @xmath6 of size at most @xmath3 such that @xmath711 ? ( here we denote by @xmath712 the graph @xmath713 $ ] . ) + our intention is to solve this problem for several choices of @xmath47 . clearly , if @xmath47 is `` being edgeless '' , the above problem is vertex cover",
    ". also , if @xmath47 is  being acyclic \" the above problem defines feedback vertex set , while if @xmath47 is  being bipartite \" , it defines odd cycle transversal .",
    "in fact , iterative compression reduces algorithmically the problem to its annotated version below with the additional restrictions that ( a ) @xmath714\\in\\pi$ ] and ( b ) @xmath715 .    @xmath3-annotated vertex deletion distance from @xmath47 + _",
    "instance : _  a graph @xmath128 , a set @xmath716 , and a non - negative integer @xmath3 .",
    "+ _ parameter : _ @xmath3 .",
    "+ _ question : _  does @xmath128 have a vertex set @xmath717 of size at most @xmath3 such that @xmath718 and @xmath719 ? + we now present the following routine that , given a graph @xmath4 and a non - negative integer @xmath3 , returns either a vertex cover @xmath117 of size at most @xmath3 or no which means that no such solution exists .    _ procedure _ @xmath305 + * 1 . * if @xmath720 , then return @xmath721 . +",
    "pick = a vertex @xmath269 and + if = @xmath722no , then return no .",
    "let @xmath723 @xmath724 + * 4 . * if @xmath725 then return @xmath117 .",
    "+ * 5 . * for =",
    "all @xmath726 such that @xmath727\\in \\pi$ ] , + let @xmath728 , @xmath729 $ ] , @xmath730 , and check whether + the @xmath3-annotated vertex deletion distance from @xmath47 + with input @xmath128 , @xmath486 , and @xmath332 has a solution @xmath517 where @xmath718 .",
    "+ if this solution @xmath517 exists , then return @xmath731 . +",
    "* return no    the above procedure considers a vertex ordering @xmath732 of @xmath4 and solves the problem by considering the graphs @xmath733 $ ] , @xmath734 .",
    "if @xmath735 , then , as returned in line * 2 * , the empty set is a solution .",
    "assume now that a solution @xmath736 for @xmath589 is known , which , by the hereditarity of @xmath47 , implies that @xmath737 is a solution for @xmath738 of size @xmath739 .",
    "if @xmath725 , then @xmath117 is a solution also for @xmath589 , as is decided in step * 4*. in step * 5 * the algorithm is trying to find a solution in @xmath4 that does not intersect @xmath726 and contains @xmath740 for all possible @xmath741 choices of @xmath742 .",
    "certainly , this is not possible if @xmath743\\not\\in \\pi$ ] as indicated by the filtering condition of this loop . in what remains",
    ", one has to solve the annotated version of the problem of @xmath128 and for @xmath332 with @xmath486 as annotated set . to find such a solution one may use the additional properties that @xmath744 and @xmath714\\in \\pi$ ] ( recall that @xmath728 which means that @xmath714=g[q]\\in\\pi$ ] ) . from now on ,",
    "the technique is specialized to each particular problem .",
    "for instance , for vertex cover , the graph @xmath128 is a bipartite graph with parts @xmath742 and @xmath486 .",
    "the question is whether some subset @xmath745 of @xmath486 meets all the edges of @xmath128 , which essentially asks whether the non - isolated vertices of @xmath486 are at most @xmath332 .",
    "as this can be decided is polynomial time , the only non - polynomial load of the whole procedure is the one of step * 5 * , and this yields an @xmath746 step algorithm . the analogous question for the case of feedback vertex set needs more effort as now @xmath742 and @xmath486 induce forests in @xmath128 . in  @xcite",
    ", it was shown that the annotated version of the feedback vertex set ( where the requested solution is a subset of @xmath486 ) can be reduced to an equivalent one where if there exists a solution , then the annotated set has at most @xmath747 vertices .",
    "as @xmath748 , the solution of the annotated version adds a @xmath696 overhead to the @xmath741 contribution of step * 5 * which results to an @xmath749 step algorithm .",
    "the technique we describe bellow is able to design fpt - algorthms for these three problems such as feedback vertex set @xcite , directed feedback vertex set @xcite , almost 2-sat @xcite , and cluster vertex deletion @xcite ( see also the survey of guo , h. moser , and r. niedermeier  @xcite on results using the iterative compression technique ) .",
    "one of the most beautiful ideas in parameterized algorithm design is color - coding , introduced by alon , yuster , and zwick in  @xcite .",
    "this technique was first applied to the following problem .",
    "+ @xmath3-path    _ instance : _  a graph @xmath4 and a non - negative integer @xmath3 .",
    "+ _ parameter : _ @xmath3 .",
    "+ _ question : _  does @xmath4 contain a path of at least @xmath3 vertices ? + the above problem can be solved in @xmath750 steps using dynamic programming techniques ( see subsection  [ dynamicpr ] ) . however , an ept - algorithm for this problem was highly welcome .",
    "the main reason for this is that it resolved the conjecture of papadimitriou and yannakakis who conjectured , in  @xcite , that it is possible to check in polynomial whether a @xmath14-vertex graph contains a path of length @xmath751 .",
    "the first step for solving @xmath3-path , is to consider a function @xmath752 coloring the vertices of @xmath4 with @xmath3 distinct colors . given a path p of @xmath4 , we denote by @xmath753 the set of colors of the vertices in p. we call a path p of @xmath4 _",
    "@xmath615-colorful _ , or simply _ colorful _",
    ", if all its colors are pairwise distinct . we also use the term _",
    "@xmath156-path _ for a path of @xmath156 vertices .",
    "we now define the following variant of the original problem : + @xmath3-colorful path    _ instance : _  a graph @xmath4 , a positive integer @xmath3 , and a coloring @xmath752 .",
    "+ _ parameter : _ @xmath3 .",
    "+ _ question : _  does @xmath4 contain a colorful @xmath3-path ? + @xmath3-colorful path can be solved by the following dynamic programing procedure .",
    "first we fix a vertex @xmath754 and then for any @xmath269 , and @xmath755 , we define + @xmath756 notice that @xmath757 stores sets of colors in paths of length @xmath758 between @xmath118 and @xmath270 , instead of the paths themselves .",
    "clearly , @xmath4 has a colorful @xmath595-path starting from @xmath118 iff @xmath759 .",
    "the dynamic programming is based on the following relation : @xmath760 notice that @xmath761 and , for all @xmath269 , @xmath757 can be computed in @xmath762 steps ( here , @xmath119 is the number of edges in @xmath4 ) . for all @xmath269 , one can compute @xmath763 in @xmath764 steps .",
    "we conclude that one can check whether @xmath4 colored by @xmath615 has a colorful path of length @xmath3 in @xmath765 steps ( just apply the above dynamic programming for each possible starting vertex @xmath754 ) .",
    "+ a _ family of @xmath3-perfect hash functions _ is a family @xmath136 of functions from @xmath766 onto @xmath767 such that for each @xmath768 with @xmath769 , there exists an @xmath770 that is bijective when restricted to @xmath771 .",
    "there is a lot of research on the construction of small size families of @xmath3-perfect hash functions dating back to the work of fredman , j. komls , and e. szemerdi  @xcite ( see also  @xcite ) .",
    "a construction of such a family of size @xmath772 was given in  @xcite .",
    "however , the hidden constant in the @xmath695-notation of this bound is quite big .",
    "instead , we may use the recent results of chen , lu , sze , and zhang in  @xcite that give a family of @xmath3-perfect hash functions @xmath136 where @xmath773 .",
    "moreover , according to  @xcite , this collection can be constructed in @xmath774 steps .",
    "@xcite gives also lower bounds on the size of a family of @xmath3-perfect hash functions indicating somehow the limits of the color - coding technique .",
    "clearly @xmath4 contains a @xmath3-path if and only if there is a @xmath770 such that @xmath4 , colored by @xmath615 , contains a @xmath615-colorful @xmath3-path .",
    "this equivalence reduces the @xmath3-path problem to the @xmath3-colorful path problem : just run the above dynamic programming procedure for @xmath3-colorful path for all colorings in @xmath136 . as @xmath773 , we conclude that @xmath3-path@xmath775-fpt .",
    "color - coding has been used extensively in parameterized algorithm design .",
    "applications of the same technique can be found in  @xcite ( see also  @xcite ) .",
    "also novel developments of the color - coding idea appeared recently in  @xcite .",
    "our next step is to deal with the classification of parameterized problems in the class subept .",
    "we present techniques that provide algorithms with subexponential parameter dependence for variants of parameterized problems where the inputs are restricted by some sparsity criterion .",
    "the most common restriction for problems on graphs is to consider their _ planar _ variants where the input graph is embeddible in a sphere without crossings .",
    "as mentioned in theorem  [ ethvc ] , in subsection  [ optimality ] , @xmath3-planar dominating set does not belong to @xmath776-fpt , unless @xmath777={{\\sf fpt}}$ ] and the same holds for several other problems on planar graphs such as planar vertex cover , planar independent set , planar dominating set , and planar red / blue dominating set  @xcite ( see also  @xcite ) .",
    "this implies that for these problems , when the sparsity criterion includes planar graphs , the best running time we may expect is @xmath75 . the first sub - exponential parameterized algorithm on planar graphs appeared by alber , h. bodlaender , fernau , and niedermeier in  @xcite for dominating set , independent dominating set , and face cover .",
    "after that , many other problems were classified in @xmath778-fpt , while there was a considerable effort towards improving the constant @xmath22 for each one of them  @xcite .",
    "bidinensionality theory was proposed in  @xcite as a meta - algorithmic framework that describes when such optimal subexponential fpt algorithms are possible .",
    "our first step is to illustrate the idea of bidimensionality for the following problem . + @xmath3-planar longest cycle    _ instance : _  a planar graph @xmath4 and a nonnegative integer @xmath3 .",
    "+ _ parameter : _ @xmath3 .",
    "+ _ question : _  does @xmath4 contain a cycle of length at least @xmath3 ?",
    "+ we define the graph parameter @xmath779 where @xmath780 our subexponential algorithm for @xmath3-planar longest cycle will be based on the win / win technique whose main combinatorial ingredient is the following result of gu and tamaki .",
    "notice that @xmath779 is closed under taking of minors ; the contraction / removal of an edge in a graph will not cause a bigger cycle to appear .",
    "this means that if @xmath4 is a planar graph and @xmath785 , none of the minors of @xmath4 can contain a cycle of length @xmath786 .",
    "as the @xmath787-grid contains a cycle of length @xmath786 , we conclude that @xmath4 does not contain an @xmath787-grid as a minor . from proposition",
    "[ planarexcl ] , @xmath788 . in other words , @xmath789 .      *",
    "we compute an optimal branch decomposition of @xmath4 . according to  @xcite ,",
    "this can be done in @xmath790 steps ( the result in  @xcite is an improvement of the algorithm of seymour and thomas in  @xcite ) .",
    "* we check whether @xmath791 .",
    "if this is the case then @xmath792 and we can safely return that @xmath4 contains a cycle of length @xmath3 . *",
    "if @xmath793 , then we solve the following problem by using dynamic programming .",
    "_ instance : _  a planar graph @xmath4 and a non - negative integer @xmath447 .",
    "+ _ parameters : _ @xmath794 .",
    "+ _ question : _  does @xmath4 contain a cycle of length at least @xmath447 ?",
    "+ what we have done so far is to reduce the @xmath3-planar longest cycle to its bounded branchwidth counterpart . for general graphs ,",
    "dynamic programming for this problem requires @xmath795 steps .",
    "however , for planar graphs , one may use the technique introduced in  @xcite yielding a @xmath708 step dynamic programming .",
    "in fact , according to  @xcite , @xmath532-planar longest cycle can be solved in @xmath796 steps .",
    "we conclude that @xmath3-planar longest cycle belongs to @xmath797-subept .",
    "notice that , in order to apply the above machinery , we made the following two observations on the parameter @xmath779 : ( 1 ) it is closed under taking of minors and ( 2 ) its value with the @xmath787-grid as input is @xmath798 , i.e. a certificate of the solution for the @xmath139-planar longest cycle problem spreads along _ both _ dimensions of a square grid ( i.e. it virtually spreads _ bidimensionally _ on the grid ) .",
    "these two observations apply to a wide range of parameters where the same approach can be used for the corresponding problems on planar graphs .",
    "bidimensionality theory was introduced in  @xcite and used the above observations in order to derive subexponential algorithms for graphs embeddible in surfaces of bounded genus ( see also  @xcite ) .",
    "later , the same theory was developed for parameters that are closed under contractions  @xcite and for classes of graphs excluding specific graphs as a minor  @xcite .",
    "consider the following parameterized meta - problem where @xmath558 is a class of graphs .",
    "+   + _ instance : _   a graph @xmath799 and an integer @xmath594 .",
    "+ _ parameter : @xmath595 _ + _ question : _   * p*(g)@xmath596 ? + briefly",
    ", this theory can be summarized by the following meta - algorithmic framework .",
    "notice that theorem  [ thm : bidiminor ] can be applied to maximization and minimization problems .",
    "we provide a typical example of its application on a maximization problem through @xmath3-path . here , the associated parameter is @xmath804 it is easy to check that conditions * ( i ) * and * ( ii ) * are satisfied .",
    "indeed , no bigger path occurs if we remove or contract an edge and the @xmath782-grid has a ( hamiltonian ) path of length @xmath805 .",
    "let @xmath568 be any @xmath128-minor free graph class .",
    "condition  * ( iii ) * holds for @xmath568 , because of the results in  @xcite .",
    "therefore , @xmath3-path restricted to graphs in @xmath568 belongs to @xmath803-subept .",
    "problems for which theorem  [ thm : bidiminor ] proves subept - membership for graphs excluding some graph as a minor are @xmath3-vertex cover , @xmath3-feedback vertex set , , @xmath3-cycle packing , @xmath3-path , @xmath3-cycle , @xmath3-d - degree - bounded connected subgraph , @xmath3-minimum maximal matching , and many others .",
    "+ we say that a graph @xmath128 is a _ contraction _ of a graph @xmath4 if @xmath128 can be obtained from @xmath4 after applying a ( possibly empty ) sequence of edge contractions[multiblock footnote omitted ] .",
    "a parameter * p * is _ contraction closed _ if @xmath806 implies that @xmath583 .    clearly , there are parameters escaping the applicability of theorem  [ thm : bidiminor ] due to the fact that they are not minor - closed .",
    "the most typical example of such a parameter is the dominating set number : take a path @xmath807 of length @xmath784 and connect all its vertices with a new vertex . clearly , the resulting graph has a dominating set of size @xmath808 , while it contains @xmath807 as a minor ( actually it contains it as a subgraph ) and every dominating set of @xmath807 has size at least @xmath3 .",
    "however , the dominating set number is contraction closed and the good news is that there is a counterpart of theorem  [ thm : bidiminor ] for contraction closed parameters .",
    "before we state this result , we need two more definitions . an _ apex _ graph is defined to be a graph that becomes planar after the removal of a vertex .",
    "a graph class @xmath568 is _ apex - minor free _ if it is @xmath128-minor free for some apex graph @xmath128 .",
    "an apex - minor free graph can be seen as having some big enough `` flat region '' , provided that the graph has big treewidth .",
    "graph classes that are apex - minor free are the graph classes of bounded genus and the classes of graphs excluding some single - crossing graph as a minor  @xcite .",
    "the graph @xmath809 is the graph obtained from the @xmath782-grid by triangulating internal faces of the @xmath782-grid such that all internal vertices become of degree @xmath810 , all non - corner external vertices are of degree 4 , and one corner is joined by edges with all vertices of the external face ( the _ corners _ are the vertices that in the underlying grid have degree two ) . for the graph @xmath811 ,",
    "see figure  [ fig - gamma - k ] .",
    "problems for which theorem  [ thm : bidi_revised ] ( but not theorem  [ thm : bidiminor ] ) proves subept - membership for apex - minor free graph classes are @xmath3-dominating set , @xmath3-r - distance dominating set , @xmath3-face cover ( for planar graphs ) , @xmath3-edge dominating set , @xmath3-clique - transversal set , @xmath3-connected dominating set , and others .    for surveys on the application of bidimensionality theory on the design of sub - exponential parameterized algorithms , see  @xcite ( see  @xcite ) .",
    "finally , further applications of bidimensionality , appeared in  @xcite .",
    "finally , we should stress that bidimensionality is not the only technique to derive subexponential parameterized algorithms .",
    "alternative approaches have been proposed in  @xcite .",
    "kernelization ( see definition  [ definition : kernelization ] in subsection  [ limker ] ) appears to be one of the most rapidly growing fields of parameterized computation . in this section",
    "we will describe some of the most characteristic techniques and results in this field .",
    "all kernels that we present are polynomial .",
    "we start with an easy case .",
    "consider the following problem . +   + _ instance : _   a graph @xmath530 and an integer @xmath600 .",
    "+ _ parameter : @xmath595 _ + _ question : _ does @xmath4 contain a set @xmath117 of at least @xmath3 vertices such that each vertex in @xmath117 has a neighbor that is not in @xmath117 ? + a kernelization algorithm for the above problem runs as follows .",
    "the first step is to remove from @xmath4 all isolated vertices ( clearly , they can not be part of a solution ) .",
    "then , in the remaining graph @xmath813 , pick some vertex @xmath814 from each of its connected components and define a partition of @xmath354 into two sets @xmath815 and @xmath816 such that @xmath815 ( resp .",
    "@xmath816 ) contains all vertices of @xmath813 whose distance from some vertex @xmath814 is even ( resp .",
    "we assume that @xmath817 ( otherwise , swap their indices ) . if @xmath818 then we know that @xmath815 is a solution to the problem and we return a yes - instance such as @xmath819 .",
    "otherwise we return @xmath820 that is a kernel whose graph has at most @xmath821 vertices .",
    "+ currently the best known kernel for @xmath3-non - blocker has size @xmath822  @xcite .",
    "we remark that the _ dual _ of the problem is the same problem parameterized by @xmath823 .",
    "this problem is equivalent to the dominating set problem that is [ 2]-complete and therefore the existence of a kernel for this problem is unlikely .    in the above example",
    "the kernelization algorithm makes a very elementary preprocessing of the input .",
    "however , in other cases things are more complicated and the kernelization algorithm needs first to discard some parts or simplify the input in order to reduce it to an equivalent one of polynomial ( on @xmath3 ) size .",
    "our next example concerns a non - trivial case of this type .",
    "we now proceed with an example where the construction of a kernel requires some more work .",
    "consider the following problem : +   + _ instance : _",
    "three disjoint sets @xmath824 , a collection of triples @xmath825 and an integer @xmath600 .",
    "+ _ parameter : @xmath595 _ + _ question : _ if there a subset @xmath826 where @xmath827 and such that no two triples in @xmath828 share a common element ( i.e. @xmath828 is a matching of @xmath399 ) ? + let @xmath829 be a maximal matching of @xmath399 .",
    "clearly , such a matching can be found greedily in polynomial time .",
    "if @xmath830 then we are done ( in this case , return a trivial yes - instance ) .",
    "therefore , we assume that @xmath831 and let @xmath117 be the set of all elements in the triples of @xmath832 . certainly , @xmath833 and , by the maximality of @xmath832 , @xmath117 will intersect every triple in @xmath399 .",
    "suppose now that @xmath399 contains a sub - collection @xmath59 with at least @xmath834 triples that agree in two of their coordinates .",
    "we assume that @xmath835 for some @xmath836 .",
    "our first reduction rule is to replace @xmath837 by @xmath838 where @xmath839 .",
    "we claim that this reduction rule is _ safe _ , i.e. the new instance @xmath838 is equivalent to the old one . obviously , every matching of @xmath840 is also a matching of @xmath399 .",
    "suppose now that @xmath828 is a matching of @xmath399 that is not any more a matching of @xmath841 .",
    "then we show that @xmath828 can be safely replaced by another one that is in @xmath841 . indeed",
    ", if @xmath828 is not a matching of @xmath841 , then one of the triples in @xmath828 is missing from @xmath841 and therefore is of the form @xmath842 for some @xmath843 .",
    "notice that if one of the triples in @xmath844 intersects a triple in @xmath845 , then this intersection will be a vertex in @xmath846 .",
    "as @xmath847 , one , say @xmath848 of the @xmath3 triples in @xmath845 will not be intersected by the triples in @xmath844 . therefore , @xmath849 is a matching of @xmath840 and the claim follows as @xmath850 .",
    "notice that the first rule simply `` truncates '' all but @xmath3 triples agreeing in the same two coordinates .",
    "we now assume that @xmath399 is a collection of triples where no more than @xmath3 of them agree in the same two coordinates .",
    "suppose now that @xmath399 contains a sub - collection @xmath851 with more than @xmath852 triples , all agreeing to one coordinate .",
    "we assume that the agreeing coordinate is the first one .",
    "the second reduction rule removes from @xmath399 all but @xmath852 of the elements of @xmath851 . again using a pigeonhole argument",
    ", it follows that in the @xmath852 surviving triples of @xmath851 there is a subset @xmath558 of @xmath853 triples where each two of them disagree in both second and third coordinate . again , if a discarded triple is used in a solution @xmath828 , then the @xmath854 other triples can not intersect more than @xmath821 triples of @xmath558 and therefore a `` surviving '' one can substitute the discarded one in @xmath828 . therefore , the second truncation is also safe and leaves an equivalent instance @xmath841 where no more than @xmath852 of them agree in the same coordinate",
    ". recall now that the elements of the set @xmath117 intersect all triples in @xmath399 . as @xmath855 , we obtain that , in the equivalent instance @xmath838 , @xmath841 has at most @xmath856 triples . we conclude that @xmath312 - 3-dimensional - matching has a polynomial size kernel .",
    "the above kernelization was proposed by fellows , knauer , nishimura , ragde , rosamond , stege , thilikos , and whitesides in  @xcite and , combined with the color coding technique , gave algorithms of total complexity @xmath857 for a wide variety of packing and matching problems .",
    "for other related results , see  @xcite .",
    "perhaps the first appearance of the kernelization idea can be traced to the work of nemhauser and trotter for vertex cover  @xcite .",
    "it leads to a kernel of size @xmath39 and it was proposed as an alternative way to obtain a 2-approximation for the vertex cover of a graph .",
    "to explain the idea of this kernelization we need to express the problem as an integer programming problem :      any integer solution to the above problem assigns , for each @xmath269 , an integer value from @xmath225 to the corresponding variable @xmath859 and yields to a solution to the vertex cover problem .",
    "when we relax the problem so that the variables lie in the real interval @xmath860 $ ] the resulting lp can be solved in polynomial time . moreover , the value of the optimal lp solution is clearly a lower bound on the minimum size of a vertex cover .",
    "however , these solutions do not represent any more an actual solution to the vertex cover problem . in  @xcite",
    ", it was proved that every real solution can be transformed , in polynomial time , to a _ half - integer _",
    "one where for each @xmath269 , @xmath861 .",
    "such a , still non - integer , solution defines a partition of @xmath354 into three sets @xmath815 , @xmath862 and @xmath816 . as shown in  @xcite",
    "( see also  @xcite ) , these sets satisfy the following properties :      observe that no edges in @xmath4 have both endpoints in @xmath815 or one endpoint in @xmath815 and the other in @xmath865 .",
    "this fact , together with property ( 2 ) , implies that if @xmath117 is an optimal solution , then @xmath866 and @xmath867 is a vertex cover of @xmath868 $ ]",
    ". therefore @xmath869)+|v_{1}|$ ] . moreover , if @xmath870 is a vertex cover of @xmath868 $ ] , then @xmath871 is a vertex cover of @xmath4 , which implies that @xmath872)+|v_{1}|$ ] .",
    "we conclude that : @xmath873)+|v_{1}| .",
    "\\nonumber\\end{aligned}\\ ] ] the above relation reduces the problem of computing @xmath598 to the one of computing @xmath874)$ ] .",
    "recall that , from property ( 1 ) , @xmath875)\\leq |v_{\\frac{1}{2}}|$ ] .",
    "therefore , the size of @xmath865 is a @xmath373-approximation of @xmath874)$ ] and thus @xmath876 is a @xmath373-approximation of @xmath598 .",
    "however , this type of approximation provides also a kernel of size @xmath39 for vertex cover as follows .",
    "we first compute , in polynomial time , @xmath865 and @xmath816 and we ask whether @xmath877 . if the answer is negative , then , again from property ( 1 ) , we have that @xmath874 ) > k-|v_{1}|$ ] .",
    "this implies that @xmath878 and we can safely report that @xmath4 has no vertex cover of size @xmath5 or , more formally , just return a no - instance such as @xmath879 . if @xmath877 then we output @xmath880,k-|v_{1}|)$ ] as an equivalent instance whose graph has size at most @xmath39 .",
    "a natural question is whether it is possible to produce a linear kernel of @xmath747 vertices for some @xmath881 .",
    "notice that any such kernel would imply a `` better than two '' approximation for the vertex cover .    as mentioned in subsection  [ limker ] the non - approximability results of  @xcite",
    "imply that we can not expect a kernel with less than @xmath882 vertices for vertex cover .",
    "better lower bounds can be derived for the case of planar vertex cover . using a technique developed in  @xcite",
    ", it follows easily that , for every @xmath580 , there is no kernel with a planar graph of size @xmath883 for this problem , unless p@xmath24np .",
    "an intriguing question is to prove the existence of a polynomial kernel for the following meta - problem . +   + _ instance : _   a graph @xmath530 and an integer @xmath600 .",
    "+ _ parameter : @xmath595 _ + _ question : _ does @xmath4 contain a subset @xmath117 of at most @xmath3 vertices such that @xmath712 does not contain @xmath128 as a minor ?",
    "+ clearly , the above problem is vertex cover when @xmath884 and feedback vertex set when @xmath885 and these are the only two cases where a polynomial kernel is known .",
    "actually , the research on a kernel for the feedback vertex set was quite extended ( see  @xcite ) and the best up to now result is the @xmath886 kernel provided by thomass in  @xcite .",
    "recently , a polynomial kernel was devised for the case where @xmath128 is the @xmath887 graph , that is two vertices connected with @xmath22 parallel edges  @xcite . for more general cases of @xmath128",
    "the problem remains open .",
    "many polynomial kernels make strong use of results in extremal graph theory . an easy , though characteristic , example is the following problem : +   + _ instance : _   a connected graph @xmath530 and an integer @xmath600 .",
    "+ _ parameter : @xmath595 _ + _ question : _ does @xmath4 contain a spanning tree with at least @xmath3 leaves ? + the above problem is np - complete  @xcite . a kernel of at most @xmath888 vertices for this problem is the procedure that repetitively applies the following reduction rules until none of them applies more :    * if @xmath4 contains a vertex @xmath270 of degree @xmath808 with a neighbor of degree 2 then set @xmath889 . *",
    "if @xmath4 contains two vertices @xmath270 and @xmath890 of degree 1 with the same neighbor , then set @xmath891 . * if @xmath4 contains a chain of length at least 4 then set @xmath892 where @xmath813 is the graph obtained if we contract some of the edges of this chain .",
    "( a _ chain _ is a path of length at least 2 , where all internal vertices have degree 2 , and with endpoints of degree greater than 2 . )",
    "it is not hard to see that all rules above are producing ( simpler ) equivalent instances .",
    "a _ reduced instance _",
    "@xmath893 , is an instance of the problem where none of the above rules can be applied any more . what remains to prove",
    "is that if in a reduced instance @xmath893 , @xmath813 has least @xmath894 vertices , then @xmath893 is a no - instance .",
    "we denote by @xmath816 , @xmath895 , and @xmath896 the set of vertices of @xmath813 with degrees 1 , 2 , or @xmath897 respectively . because of the first rule , vertices in @xmath816 are adjacent only with vertices in @xmath898 and , from the second rule",
    ", we have that @xmath899 .",
    "moreover , from the third rule , all the chains of @xmath813 have length at most @xmath78 .",
    "we aim to prove that if @xmath900 , then @xmath813 contains a spanning tree of @xmath332 leaves . for this",
    ", we construct , using @xmath813 , an auxiliary graph @xmath128 by removing all vertices of degree 1 and by replacing all chains of @xmath813 by chains of length 2 .",
    "notice that @xmath128 does not have vertices of degree 1 and all its vertices of degree 2  we call them _ subdivision vertices _  are internal vertices of some chain of length 2 .",
    "we denote by @xmath901 and @xmath902 the vertices of @xmath128 that have degree 2 or @xmath897 respectively . notice that @xmath903 which , combined with the fact that @xmath899 , implies that @xmath904 .",
    "moreover , each vertex in @xmath901 corresponds to at most two vertices of @xmath895 .",
    "therefore @xmath905 .",
    "we conclude that @xmath906 . as @xmath900",
    ", we conclude that @xmath907 .",
    "we call two subdivided edges of @xmath128 _ siblings _ if they have the same neighborhood .",
    "we add edges between siblings so that @xmath128 is transformed to a graph @xmath908 with minimum degree 3 .",
    "it is easy to see that if @xmath908 contains a spanning tree with at least @xmath332 leaves then also @xmath128 contains a spanning tree with at least @xmath332 leaves . as @xmath909 ,",
    "then from the main result of kleitman and west in  @xcite we have that @xmath908 ( and therefore @xmath128 ) contains a spanning tree of with least @xmath332 leaves . by the construction of @xmath128",
    ", it easily follows that this spanning tree of @xmath128 can be extended to a spanning tree in @xmath813 with at least the same number of leaves and we are done .",
    "clearly , the correctness of the above kernel is based on the combinatorial result of @xcite . by using more reduction rules and more refined arguments it is possible to construct even better kernels for .",
    "for instance , in  @xcite estivill - castro , fellows , langston , and rosamond give a @xmath910 kernel for this problem .",
    "notice that the parameterized complexity of the problem changes drastically if we ask for a spanning tree with _ at most _",
    "@xmath3 leaves . even for @xmath911",
    ", this is an np - complete problem .",
    "therefore there is no @xmath912 algorithm for this parametrization , unless @xmath77 .",
    "clearly , one can not expect that a kernel exists for a problem that is hard for some level of the w - hierarchy .",
    "however , such problems may become fixed parameter tractable when their instances are restricted to sparse structures . in case of graph - theoretic problems such",
    "a sparsity criterion is usually planarity or the exclusion of certain types of graphs as a minor .",
    "the prototype of such a problem was planar dominating set that , as we mentioned in subsection  [ subexpalg ] , belongs to subfpt .",
    "the first kernel for this problem was given by the celebrated result of alber , fellows , and niedermeier in  @xcite and was of size @xmath913 .",
    "the kernel of  @xcite is using the fact that the sphere in which the input graph is embedded , can be decomposed into a set of @xmath914 regions such that each vertex inside a region is in the neighborhood of its boundary vertices .",
    "this last property , makes it possible to apply a suitable reduction in each region and reduce its vertices to a constant size .",
    "because of planarity , there are @xmath914 regions in total and this implies the existence of a linear kernel . based on the same idea and a more refined analysis ,",
    "this kernel was improved to one of size @xmath915 in  @xcite .",
    "the idea of a region decomposition was further extended in  @xcite for several problems such as connected vertex cover , minimum edge dominating set , maximum triangle packing , and efficient dominating set on planar graphs .",
    "while in all the above results the reduction rules were particular for each problem , it appeared that the whole idea can be vastly extended to a general meta - algorithmic framework that we will describe in the rest of this section .",
    "let @xmath916 be the family of all graphs that can be embedded in a surface @xmath49 of euler - genus at most @xmath917 . given a graph @xmath4 embedded in a surface @xmath49 of euler - genus @xmath917 , and a set @xmath117",
    ", we define @xmath918 to be the set of all vertices of @xmath4 whose radial distance from some vertex of @xmath117 is at most @xmath152 .",
    "the _ radial distance _ between two vertices @xmath919 is the minimum length of an alternating sequence of vertices and faces starting from @xmath345 and ending in @xmath920 , such that every two consecutive elements of this sequence are incident to each other .",
    "we consider parameterized problems where @xmath921 , i.e. we impose bounded genus as a promise condition .",
    "we say that a parameterized problem @xmath921 is _ _ compact _ _ if there exists an integer @xmath152 such that for all @xmath922 , there is an embedding of @xmath4 in a surface @xmath49 of euler - genus at most @xmath917 and a set @xmath923 such that @xmath924 and @xmath925 .",
    "the compactness condition is what makes it possible to construct a region decomposition for the instances of a parameterized problem .",
    "the region decomposition is constructed on the surface where the input graph is embedded . for the automation of the reduction rules that are applied in the regions we demand the expressibility of the problem by a certain logic .",
    "counting monadic second - order logic ( cmsol ) is an extension of msol defined in  subsection  [ ftpfol ] where , in addition to the usual features of monadic second - order logic , we have atomic formulas testing whether the cardinality of a set is equal to @xmath14 modulo @xmath312 , where @xmath14 and @xmath312 are integers such that @xmath926 and @xmath927 ( see  @xcite ) .",
    "so essentially cmsol is msol with atomic formulas of the following type :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ if @xmath928 denotes a set @xmath113 , then @xmath929 if and only if @xmath930 is @xmath931 . _",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    in a @xmath3-min - cmsol parameterized graph problem @xmath921 , we are given a graph @xmath2 and an integer @xmath3 as input .",
    "the objective is to decide whether there is a vertex / edge set @xmath117 of size at most @xmath3 such that the cmsol - expressible predicate @xmath932 is satisfied .",
    "the _ _ annotated _ _ version @xmath933 of a @xmath3-min / eq / max - cmsol problem @xmath47 is defined as follows .",
    "the input is a triple @xmath934 where @xmath4 is a graph , @xmath935 is a set of black vertices , and @xmath3 is a non - negative integer . in the _ annotated version _ of a @xmath3-min - cmsol graph problem",
    ", @xmath117 is additionally required to be a subset of @xmath518 . finally , for a parameterized problem @xmath936 , let @xmath937 denote the set of all no - instances of @xmath47 .      the first meta - algorithmic results on kernels appeared by bodlaender , fomin , lokshtanov , penninkx , saurabh , and thilikos in  @xcite and by fomin , lokshtanov , saurabh , and thilikos in  @xcite .",
    "as a sample , we present the following one :    [ cor : antonormal ] let @xmath938 be an np - complete @xmath3-min - cmsol parameterized problem such that either @xmath47 or @xmath939 is compact and @xmath933 is in @xmath940 . then @xmath47 admits a polynomial kernel .",
    "the above theorem is essentially a corollary of the fact , proven in  @xcite , that if @xmath938 is a @xmath3-min - cmsol parameterized problem and either @xmath47 or @xmath939 is compact , then its annotated version @xmath933 admits a quadratic kernel .",
    "another condition that , together with the compactness condidtion , allows the derivation of a linear kernel for a @xmath3-min - cmsol parameterized problem is the one having _ finite integer index _",
    ", introduced in  @xcite .",
    "this condition , combined with bidimensionality theory ( presented in subsection  [ subexpalg ] ) was used in  @xcite in order to derive kernelization meta - theorems for more general graph classes , namely classes excluding some graph ( apex or general ) as a minor .",
    "theorem  [ cor : antonormal ] immediately implies the existence of polynomial kernels for a wide family of problems .",
    "however , the potential of this type of meta - algorithmic results has not been fully investigated yet .",
    "we conclude our kernelization subsection by mentioning that it can not be more than incomplete . for a small sample of recent results on the existence of polynomial kernels for several parameterized problems ,",
    "see  @xcite .",
    "certainly , there are many issues on parameterized algorithm design that are not ( and can not be ) covered here . among them",
    ", we should mention parameterized algorithms for counting problems  @xcite , parameterized approximation  @xcite , and parameterized parallelization  @xcite .",
    "also we should mention that new powerful techniques emerge quite rapidly in parameterized algorithm design , such as the use of _ important seprators _ for the fpt - algorithm proposed for the @xmath3-edge multicut and the @xmath3-vertex multicut problems by dniel marx and igor razgon in  @xcite ( see also  @xcite ) .",
    "k.  abrahamson , m.  fellows , j.  ellis , and m.  mata . on the complexity of fixed parameter problems . in _",
    "30th annual ieee symposium on foundations of computer science ( focs 89 ) _ , pages 210215 , los alamitos , ca , usa , 1989 .",
    "ieee computer society .",
    "f.  abu - khzam . a quadratic kernel for 3-set packing . in j.",
    "chen and s.  cooper , editors , _ theory and applications of models of computation _ ,",
    "volume 5532 of _ lecture notes in computer science _ , pages 8187 .",
    "springer berlin / heidelberg , 2009 .",
    "f.  abu - khzam , r.  l. collins , m.  r. fellows , m.  a. langston , w.  h. suters , and c.  t. symons .",
    "kernelization algorithms for the vertex cover problem : theory and experiments . in _",
    "alenex / analc _ , pages 6269 , 2004 .",
    "i.  adler , m.  grohe , and s.  kreutzer .",
    "computing excluded minors . in _ proceedings of the nineteenth annual acm - siam symposium on discrete algorithms _ , soda 08 , pages 641650 , philadelphia , pa , usa , 2008 .",
    "society for industrial and applied mathematics .",
    "i.  adler , s.  g. kolliopoulos , p.  k. krause , d.  lokshtanov , s.  saurabh , and d.  m. thilikos .",
    "tight bounds for linkages in planar graphs . in _ proceedings of the 38th international colloquium on automata , languages and programming ( icalp 2011 ) _ , 2011 .",
    "j.  alber , h.  l. bodlaender , h.  fernau , and r.  niedermeier .",
    "fixed parameter algorithms for planar dominating set and related problems . in",
    "_ 6th scandinavian workshop on algorithm theory ",
    "swat 2000 ( bergen ) _ , pages 97110 .",
    "springer , berlin , 2000 .",
    "j.  alber , f.  dorn , and r.  niedermeier . experimental evaluation of a tree decomposition - based algorithm for vertex cover on planar graphs .",
    ", 145(2):219  231 , 2005 .",
    "structural decompositions , width parameters , and graph labelings .",
    "j.  alber and r.  niedermeier .",
    "improved tree decomposition based algorithms for domination - like problems . in s.",
    "rajsbaum , editor , _ latin 2002 : theoretical informatics _ , volume 2286 of _ lecture notes in computer science _ , pages 221233 .",
    "springer berlin / heidelberg , 2002 .",
    "n.  alon , g.  gutin , e.  j. kim , s.  szeider , and a.  yeo .",
    "solving max - r - sat above a tight lower bound . in _ proceedings of the twenty - first annual acm - siam symposium on discrete algorithms _ , soda 10 , pages 511517 , philadelphia , pa , usa , 2010 .",
    "society for industrial and applied mathematics .",
    "n.  alon , d.  lokshtanov , and s.  saurabh .",
    "fast fast . in s.  albers , a.  marchetti - spaccamela , y.  matias , s.  nikoletseas , and w.  thomas , editors , _ automata , languages and programming _ , volume 5555 of _ lecture notes in computer science _ , pages 4958 .",
    "springer berlin / heidelberg , 2009 .",
    "o.  amini , f.  fomin , and s.  saurabh .",
    "implicit branching and parameterized partial cover problems ( extended abstract ) . in r.",
    "hariharan , m.  mukund , and v.  vinay , editors , _ iarcs annual conference on foundations of software technology and theoretical computer science ( fsttcs 2008 ) _ , dagstuhl , germany , 2008 .",
    "schloss dagstuhl - leibniz - zentrum fuer informatik , germany .",
    "s.  arora .",
    "polynomial time approximation schemes for euclidean tsp and other geometric problems . in _",
    "37th annual symposium on foundations of computer science ( burlington , vt , 1996 ) _ , pages 211 .",
    "ieee comput .",
    "press , los alamitos , ca , 1996 .",
    "s.  arora .",
    "nearly linear time approximation schemes for euclidean tsp and other geometric problems . in _ proceedings of the 38th annual symposium on foundations of computer science _ ,",
    "pages 554 , washington , dc , usa , 1997 .",
    "ieee computer society .",
    "n.  betzler , m.  fellows , c.  komusiewicz , and r.  niedermeier .",
    "parameterized algorithms and hardness results for some graph motif problems . in p.",
    "ferragina and g.  landau , editors , _ combinatorial pattern matching _ , volume 5029 of _ lecture notes in computer science _ , pages 3143 .",
    "springer berlin / heidelberg , 2008 .",
    "s.  bcker , s.  briesemeister , q.  bui , and a.  truss .",
    "going weighted : parameterized algorithms for cluster editing . in b.  yang , d .- z .",
    "du , and c.  wang , editors , _ combinatorial optimization and applications _ , volume 5165 of _ lecture notes in computer science _ , pages 112 .",
    "springer berlin / heidelberg , 2008 .",
    "h.  bodlaender . a cubic kernel for feedback vertex set . in w.",
    "thomas and p.  weil , editors , _ stacs 2007 _ , volume 4393 of _ lecture notes in computer science _ , pages 320331 .",
    "springer berlin / heidelberg , 2007 .",
    "h.  bodlaender , f.  fomin , d.  lokshtanov , e.  penninkx , s.  saurabh , and d.  thilikos .",
    "( meta ) kernelization . in _ proc . of the 50th annual ieee symposium on foundations of computer science , ( focs 2009 ) _ , 2009",
    ".          h.  l. bodlaender , m.  r. fellows , and m.  t. hallett . beyond np - completeness for problems of bounded width ( extended abstract ) : hardness for the w hierarchy . in _ proceedings of the twenty - sixth annual acm symposium on theory of computing _ , stoc 94 , pages 449458 , new york , ny , usa , 1994 .",
    "h.  l. bodlaender , b.  m.  p. jansen , and s.  kratsch . .",
    "in t.  schwentick and c.  drr , editors , _ 28th international symposium on theoretical aspects of computer science ( stacs 2011 ) _ , volume  9 of _ leibniz international proceedings in informatics ( lipics ) _ , pages 165176 , dagstuhl , germany , 2011 .",
    " leibniz - zentrum fuer informatik .",
    "h.  l. bodlaender , b.  m.  p. jansen , and s.  kratsch .",
    "preprocessing for treewidth : a combinatorial analysis through kernelization . in _ proceedings of the 38th international colloquium on automata , languages and programming ( icalp 2009 ) _ , 2011 .",
    "h.  l. bodlaender and d.  m. thilikos .",
    "constructive linear time algorithms for branchwidth . in _",
    "automata , languages and programming ( bologna , 1997 ) _ , volume 1256 of _ lecture notes in computer science _ , pages 627637 .",
    "springer , berlin , 1997 .",
    "h.  l. bodlaender , s.  thomass , and a.  yeo .",
    "analysis of data reduction : transformations give evidence for non - existence of polynomial kernels .",
    "technical report uu - cs-2008 - 030 , department of information and computing sciences , utrecht university , 2008 .",
    "r.  b. borie , r.  g. parker , and c.  a. tovey .",
    "automatic generation of linear - time algorithms from predicate calculus descriptions of problems on recursively constructed graph families .",
    ", 7:555581 , 1992 .",
    "k.  burrage , v.  estivill - castro , m.  fellows , m.  langston , s.  mac , and f.  rosamond .",
    "the undirected feedback vertex set problem has a poly(@xmath3 ) kernel . in h.",
    "bodlaender and m.  langston , editors , _ parameterized and exact computation _ , volume 4169 of _ lecture notes in computer science _ , pages 192202 .",
    "springer berlin / heidelberg , 2006 .",
    "l.  cai and x.  huang .",
    "fixed - parameter approximation : conceptual framework and approximability results . in h.",
    "bodlaender and m.  langston , editors , _ parameterized and exact computation _ , volume 4169 of _ lecture notes in computer science _ , pages 96108 .",
    "springer berlin / heidelberg , 2006 .",
    "l.  cai and d.  juedes .",
    "subexponential parameterized algorithms collapse the @xmath943-hierarchy . in _",
    "automata , languages and programming _ , volume 2076 of _ lecture notes in comput .",
    "_ , pages 273284 .",
    "springer , berlin , 2001 .",
    "m.  cesati and m.  d. ianni .",
    "parameterized parallel complexity . in _ proceedings of the 4th international euro - par conference on parallel processing _ , euro - par 98 , pages 892896 , london , uk , 1998 .",
    "springer - verlag .      c.  chekuri and s.  khanna .",
    "a ptas for the multiple knapsack problem . in _ proceedings of the eleventh annual acm - siam symposium on discrete algorithms ( san francisco , ca , 2000 )",
    "_ , pages 213222 , new york , 2000 .",
    "acm .",
    "j.  chen , i.  kanj , l.  perkovic , e.  sedgwick , and g.  xia .",
    "genus charactterizes the complexity of graph problems : some tight results . in _ proc . of the 30th international colloquium on automata , languages , and programming icalp , eindhoven , 2003_. springer verlag , lecture notes in computer science , vol . 2719 , 2003 .",
    "j.  chen , s.  lu , s .- h .",
    "sze , and f.  zhang . improved algorithms for path , matching , and packing problems . in _ proceedings of the eighteenth annual acm - siam symposium on discrete algorithms _ , soda 07 , pages 298307 , philadelphia , pa , usa , 2007 .",
    "society for industrial and applied mathematics .",
    "y.  chen , j.  flum , and m.  mller .",
    "lower bounds for kernelizations and other preprocessing procedures . in k.  ambos - spies , b.  lwe , and w.  merkle , editors , _ mathematical theory and computational practice _ , volume 5635 of _ lecture notes in computer science _ , pages 118128 .",
    "springer berlin / heidelberg , 2009 .",
    "y.  chen , m.  grohe , and m.  grber .",
    "on parameterized approximability . in h.",
    "bodlaender and m.  langston , editors , _ parameterized and exact computation _ , volume 4169 of _ lecture notes in computer science _ , pages 109120 .",
    "springer berlin / heidelberg , 2006 .",
    "r.  crowston , g.  gutin , m.  jones , e.  kim , and i.  ruzsa .",
    "systems of linear equations over @xmath945 and problems parameterized above average . in h.",
    "kaplan , editor , _ algorithm theory - swat 2010 _ , volume 6139 of _ lecture notes in computer science _ , pages 164175 .",
    "springer berlin / heidelberg , 2010 .",
    "m.  cygan , m.  pilipczuk , m.  pilipczuk , and j.  o. wojtaszczyk .",
    "kernelization hardness of connectivity problems in d - degenerate graphs . in _ proceedings of the 36th international conference on graph - theoretic concepts in computer science _",
    ", wg10 , pages 147158 , berlin , heidelberg , 2010 .",
    "springer - verlag .",
    "a.  dawar and s.  kreutzer .",
    "domination problems in nowhere - dense classes . in _",
    "iarcs annual conference on foundations of software technology and theoretical computer science ( fsttcs 2009 ) _ , pages 157168 , 2009",
    ".      f.  k. h.  a. dehne , m.  r. fellows , m.  a. langston , f.  a. rosamond , and k.  stevens .",
    "an @xmath946 fpt algorithm for the undirected feedback vertex set problem . in _ proc . of the 11th annual international conference on computing and combinatorics ( cocoon 2005 ) _ , volume 3595 of _ lecture notes in computer science _ , pages 859869 , berlin , 2005 .",
    "springer .",
    "h.  dell and d.  van melkebeek .",
    "satisfiability allows no nontrivial sparsification unless the polynomial - time hierarchy collapses . in _ proceedings of the 42nd acm symposium on theory of computing",
    ", stoc 10 , pages 251260 , new york , ny , usa , 2010 .",
    "acm .",
    "e.  d. demaine and m.  hajiaghayi .",
    "bidimensionality : new connections between fpt algorithms and ptass . in _ proc . of the 16th annual acm - siam symposium on discrete algorithms ( soda 2005 ) _ , pages 590601 , new york , 2005 .",
    "acm - siam .",
    "e.  d. demaine , m.  hajiaghayi , and d.  marx .",
    "09511 abstracts collection ",
    "parameterized complexity and approximation algorithms . in e.",
    "d. demaine , m.  hajiaghayi , and d.  marx , editors , _ parameterized complexity and approximation algorithms _ , number 09511 in dagstuhl seminar proceedings , dagstuhl , germany , 2010 .",
    "schloss dagstuhl - leibniz - zentrum fuer informatik , germany .",
    "m.  dom , d.  lokshtanov , and s.  saurabh .",
    "incompressibility through colors and ids . in s.  albers ,",
    "a.  marchetti - spaccamela , y.  matias , s.  nikoletseas , and w.  thomas , editors , _ automata , languages and programming _ , volume 5555 of _ lecture notes in computer science _ , pages 378389 .",
    "springer berlin / heidelberg , 2009 .",
    "f.  dorn , f.  v. fomin , d.  lokshtanov , v.  raman , and s.  saurabh . beyond bidimensionality : parameterized subexponential algorithms on directed graphs . in _ proceedings of the 27th international symposium on theoretical aspects of computer science ( stacs 2010 ) _ , volume  5 of _ lipics _ , pages 251262 .",
    "schloss dagstuhl - leibniz - zentrum fuer informatik , 2010 .",
    "f.  dorn , f.  v. fomin , and d.  m. thilikos .",
    "fast subexponential algorithm for non - local problems on graphs of bounded genus . in _ proc . of the 10th scandinavian workshop on algorithm theory ( swat 2006 )",
    "_ , lecture notes in computer science , pages 172183 , berlin , 2006 .",
    "springer .",
    "f.  dorn , f.  v. fomin , and d.  m. thilikos .",
    "catalan structures and dynamic programming in @xmath128-minor - free graphs . in _ proc . of the acm - siam symposium on discrete algorithms ( soda 2008 ) _ , pages 631640 , 2008 .",
    "r.  downey and m.  fellows .",
    "fixed - parameter tractability and completeness .",
    "iii . some structural aspects of the @xmath943 hierarchy . in _ complexity theory _ , pages 191225 .",
    "cambridge univ . press ,",
    "cambridge , 1993 .",
    "r.  downey , m.  fellows , and c.  mccartin .",
    "parameterized approximation problems . in h.",
    "bodlaender and m.  langston , editors , _ parameterized and exact computation _ , volume 4169 of _ lecture notes in computer science _ , pages 121129 .",
    "springer berlin / heidelberg , 2006 .",
    "r.  g. downey , v.  estivill - castro , m.  fellows , e.  prieto , and f.  a. rosamund .",
    "cutting up is hard to do : the parameterised complexity of @xmath3-cut and related problems .",
    ", 78:209  222 , 2003 .",
    "cats03 , computing : the australasian theory symposium .",
    "r.  g. downey , p.  a. evans , and m.  r. fellows .",
    "parameterized learning complexity . in",
    "_ proceedings of the sixth annual conference on computational learning theory _ , colt 93 , pages 5157 , new york , ny , usa , 1993 .",
    "r.  g. downey and m.  r. fellows .",
    "fixed - parameter tractability and completeness . in _ proc . of the twenty - first manitoba conference on numerical mathematics and computing ( winnipeg , mb , 1991 )",
    "_ , volume  87 , pages 161178 , 1992 .",
    "r.  g. downey and m.  r. fellows .",
    "parameterized computational feasibility . in _",
    "feasible mathematics , ii ( ithaca , ny , 1992 ) _ , volume  13 of _ progr .",
    "appl . logic _ , pages 219244 .",
    "birkhuser boston , boston , ma , 1995 .",
    "r.  g. downey and m.  r. fellows . parameterized complexity after ( almost ) ten years : review and open questions . in _",
    "combinatorics , computation & logic 99 ( auckland ) _ , volume  21 of _ aust .",
    "_ , pages 133 .",
    "springer , singapore , 1999 .",
    "r.  g. downey , m.  r. fellows , and u.  stege .",
    "parameterized complexity : a framework for systematically confronting computational intractability . in",
    "_ contemporary trends in discrete mathematics ( tin castle , 1997 ) _ , volume  49 of _ dimacs ser",
    ". discrete math .",
    "_ , pages 4999 .",
    "soc . , providence , ri , 1999 .",
    "z.  dvorak , d.  kral , and r.  thomas .",
    "deciding first - order properties for sparse graphs . in _ proceedings of the 2010 ieee 51st annual symposium on foundations of computer science _ , focs 10 , pages 133142 , washington , dc , usa , 2010 .",
    "ieee computer society .",
    "m.  fellows , p.  heggernes , f.  rosamond , c.  sloper , and j.  a. telle . finding @xmath3 disjoint triangles in an arbitrary graph . in _",
    "graph - theoretic concepts in computer science _ ,",
    "volume 3353 of _ lecture notes in comput .",
    "_ , pages 235244 .",
    "springer , berlin , 2004 .",
    "m.  r. fellows . parameterized complexity : the main ideas and some research frontiers . in _ algorithms and computation ( christchurch , 2001 ) _ ,",
    "volume 2223 of _ lecture notes in comput .",
    "_ , pages 291307 .",
    "springer , berlin , 2001 .",
    "m.  r. fellows . parameterized complexity : the main ideas and connections to practical computing . in _",
    "experimental algorithmics _ , volume 2547 of _ lecture notes in comput .",
    "_ , pages 5177 .",
    "springer , berlin , 2002 .",
    "m.  r. fellows . new directions and new challenges in algorithm design and complexity ,",
    "parameterized . in _",
    "algorithms and data structures _ , volume 2748 of _ lecture notes in comput .",
    "_ , pages 505519 .",
    "springer , berlin , 2003 .",
    "m.  r. fellows , c.  knauer , n.  nishimura , p.  ragde , f.  rosamond , u.  stege , d.  m. thilikos , and s.  whitesides .",
    "faster fixed - parameter tractable algorithms for matching and packing problems .",
    ", 52(2):167176 , 2008 .        m.  r. fellows and m.  a. langston .",
    "an analogue of the myhill - nerode theorem and its use in computing finite - basis characterisations ( extended abstract ) . in _ proc . of the 30th annual ieee symposium on foundations of computer science , focs 1989 _ , pages 520525 , 1989 .",
    "h.  fernau .",
    "graph separator algorithms : a refined analysis . in _ the 28th international workshop on graph - theoretic concepts in computer science(wg 2002 ) _",
    ", page to appear .",
    "springer , lecture notes in computer science , berlin , 2002 .",
    "h.  fernau , f.  v. fomin , d.  lokshtanov , d.  raible , s.  saurabh , and y.  villanger .",
    "kernel(s ) for problems with no kernel : on out - trees with many leaves . in s.  albers and j .- y .",
    "marion , editors , _",
    "26th international symposium on theoretical aspects of computer science ( stacs 2009 ) _ , volume  3 of _ leibniz international proceedings in informatics ( lipics ) _ , pages 421432 , dagstuhl , germany , 2009 .",
    " leibniz - zentrum fuer informatik .",
    "h.  fernau and d.  juedes",
    ". a geometric approach to parameterized algorithms for domination problems on planar graphs . in _ proc . of the 29th international symposium on mathematical foundations of computer ( mfcs 2004 )",
    "_ , volume 3153 of _ lecture notes in comput .",
    "_ , pages 488499 .",
    "springer , berlin , 2004 .",
    "j.  flum and m.  grohe .",
    "the parameterized complexity of counting problems . in _ proceedings of the 43rd symposium on foundations of computer science _ , focs 02 , pages 538 , washington , dc , usa , 2002 .",
    "ieee computer society .",
    "f.  fomin , p.  golovach , d.  lokshtanov , and s.  saurabh .",
    "algorithmic lower bounds for problems parameterized with clique - width , proceedings of acm - siam symposium on discrete algorithms . in _",
    "soda 2010 _ , pages 493502 , 2010 .",
    "f.  v. fomin , p.  a. golovach , d.  lokshtanov , and s.  saurabh .",
    "clique - width : on the price of generality . in _",
    "soda 09 : proc . of the twentieth annual acm - siam symposium on discrete algorithms _ , pages 825834 , philadelphia , pa , usa , 2009 .",
    "society for industrial and applied mathematics .",
    "f.  v. fomin , d.  lokshtanov , n.  misra , g.  philip , and s.  saurabh . .",
    "in t.  schwentick and c.  drr , editors , _ 28th international symposium on theoretical aspects of computer science ( stacs 2011 ) _ , volume  9 of _ leibniz international proceedings in informatics ( lipics ) _ , pages 189200 , dagstuhl , germany , 2011 .",
    " leibniz - zentrum fuer informatik .",
    "f.  v. fomin , d.  lokshtanov , s.  saurabh , and d.  m. thilikos .",
    "bidimensionality and kernels . in m.",
    "charikar , editor , _ twenty - first annual acm - siam symposium on discrete algorithms ( soda 2010 ) , austin , texas _ , pages 503510 .",
    "siam , 2010 .",
    "m.  l. fredman , j.  komls , and e.  szemerdi . storing a sparse table with @xmath952 worst - case access time . in _ proceedings of the 23rd annual ieee symposium on foundations of computer science _ , pages 165169 , 1982 .",
    "m.  frick and m.  grohe .",
    "deciding first - order properties of locally tree - decomposable graphs . in j.",
    "wiedermann , p.  van emde  boas , and m.  nielsen , editors , _ automata , languages and programming _ , volume 1644 of _ lecture notes in computer science _ , pages 7272 .",
    "springer berlin / heidelberg , 1999 .",
    "h.  friedman , n.  robertson , and p.  seymour .",
    "the metamathematics of the graph minor theorem . in _ logic and combinatorics ( arcata , calif . , 1985 )",
    "_ , volume  65 of _ contemp .",
    "_ , pages 229261 .",
    "soc . , providence , ri , 1987 .",
    "p.  golovach and d.  thilikos .",
    "paths of bounded length and their cuts : parameterized complexity and algorithms . in _",
    "parameterized and exact computation _ ,",
    "volume 5917 of _ lecture notes in comput .",
    "_ , pages 210221 .",
    "springer , berlin , 2009 .",
    "a. golovach , m.  kamiski , d.  paulusma , and d.  m. thilikos .",
    "induced packing of odd cycles in a planar graph . in _ proc .",
    "of the 20th international symposium on algorithms and computation ( isaac 2009 ) _ , volume 5878 of _ lecture notes in comput .",
    "_ , pages 514523 .",
    "springer , berlin , 2009 .",
    "gu and h.  tamaki .",
    "improved bounds on the planar branchwidth with respect to the largest grid minor size . in o.",
    "cheong , k .- y .",
    "chwa , and k.  park , editors , _ algorithms and computation _ , volume 6507 of _ lecture notes in computer science _ , pages 8596 .",
    "springer berlin / heidelberg , 2010 .",
    "j.  guo , h.  moser , and r.  niedermeier .",
    "iterative compression for exactly solving np - hard minimization problems . in j.",
    "lerner , d.  wagner , and k.  zweig , editors , _ algorithmics of large and complex networks _ ,",
    "volume 5515 of _ lecture notes in computer science _ , pages 6580 .",
    "springer berlin / heidelberg , 2009 .",
    "j.  guo and r.  niedermeier .",
    "linear problem kernels for np - hard problems on planar graphs . in _",
    "automata , languages and programming _ , volume 4596 of _ lecture notes in comput .",
    "_ , pages 375386 .",
    "springer , berlin , 2007 .",
    "g.  gutin , l.  van iersel , m.  mnich , and a.  yeo .",
    "every ternary permutation constraint satisfaction problem parameterized above average has a kernel with a quadratic number of variables .",
    ", in press , corrected proof: , 2011 .",
    "d.  hermelin , c .- c .",
    "huang , s.  kratsch , and m.  wahlstrm .",
    "parameterized two - player nash equilibrium . in",
    "_ proceedings of the 37th international workshop on graph - theoretic concepts in computer science ( wg 2011 ) _ , lecture notes in computer science , page to appear .",
    "springer , 2011 .",
    "f.  hffner .",
    "algorithm engineering for optimal graph bipartization . in s.",
    "e. nikoletseas , editor , _ experimental and efficient algorithms _ ,",
    "volume 3503 of _ lecture notes in computer science _ , pages 1118 .",
    "springer berlin / heidelberg , 2005 .",
    "r.  impagliazzo and r.  paturi .",
    "the complexity of k - sat . in _",
    "coco 99 : proc . of the fourteenth annual ieee conference on computational complexity _",
    ", page 237 , washington , dc , usa , 1999 .",
    "ieee computer society .",
    "k.  jansen .",
    "parameterized approximation scheme for the multiple knapsack problem . in _ proceedings of the twentieth annual acm - siam symposium on discrete algorithms",
    "_ , soda 09 , pages 665674 , philadelphia , pa , usa , 2009 . society for industrial and applied mathematics .",
    "i.  kanj and l.  perkovi . improved parameterized algorithms for planar dominating set . in _ mathematical foundations of computer science ",
    "mfcs 2002 ( warsaw , poland ) _ , volume 2420 , pages 399410 .",
    "springer , lecture notes in computer science , berlin , 2002 .",
    "k.  kawarabayashi .",
    "the disjoint paths problem : algorithm and structure . in n.",
    "katoh and a.  kumar , editors , _ walcom : algorithms and computation _ , volume 6552 of _ lecture notes in computer science _ , pages 27 .",
    "springer berlin / heidelberg , 2011 .",
    "k.  kawarabayashi and y.  kobayashi . the induced disjoint path problem . in _",
    "integer programming and combinatorial optimization _ ,",
    "volume 5035 of _ lecture notes in comput .",
    "_ , pages 4761 .",
    "springer , berlin , 2008 .",
    "t.  kloks , c.  m. lee , and j.  liu .",
    "new algorithms for @xmath3-face cover , @xmath3-feedback vertex set , and @xmath3-disjoint cycles on plane and planar graphs . in _ proc . of the 28th international workshop on graph",
    "theoretic concepts in computer science ( wg 2002 ) _ , volume 2573 of _ lecture notes in comput .",
    "_ , pages 282295 .",
    "springer , berlin , 2002 .      y.  kobayashi and k.  kawarabayashi .",
    "algorithms for finding an induced cycle in planar graphs and bounded genus graphs . in _ proceedings of the twentieth annual acm - siam symposium on discrete algorithms ( soda 2009 ) _ , pages 11461155 .",
    "acm - siam , 2009 .",
    "s.  kratsch , d.  marx , and m.  wahlstrm .",
    "parameterized complexity and kernelizability of max ones and exact ones problems . in _ proceedings of the 35th international conference on mathematical foundations of computer science _",
    ", mfcs10 , pages 489500 , berlin , heidelberg , 2010 .",
    "springer - verlag .",
    "m.  a. langston , a.  d. perkins , a.  m. saxton , j.  a. scharff , and b.  h. voy .",
    "innovative computational methods for transcriptomic data analysis : a case study in the use of fpt for practical algorithm design and implementation . , 51(1):2638 , 2008 .",
    "y.  liu , s.  lu , j.  chen , and s .- h .",
    "greedy localization and color - coding : improved matching and packing algorithms . in h.",
    "bodlaender and m.  langston , editors , _ parameterized and exact computation _ , volume 4169 of _ lecture notes in computer science _ , pages 8495 .",
    "springer berlin / heidelberg , 2006 .",
    "l.  mathieson , e.  prieto , and p.  shaw .",
    "packing edge disjoint triangles : a parameterized view . in r.",
    "downey , m.  fellows , and f.  dehne , editors , _ parameterized and exact computation _ ,",
    "volume 3162 of _ lecture notes in computer science _ , pages 127137 .",
    "springer berlin / heidelberg , 2004 .",
    "n.  misra , v.  raman , s.  saurabh , and s.  sikdar . the budgeted unique coverage problem and color - coding . in a.",
    "frid , a.  morozov , a.  rybalchenko , and k.  wagner , editors , _ computer science - theory and applications _ ,",
    "volume 5675 of _ lecture notes in computer science _ , pages 310321 .",
    "springer berlin / heidelberg , 2009 .",
    "m.  mller .",
    "randomized approximations of parameterized counting problems . in h.",
    "bodlaender and m.  langston , editors , _ parameterized and exact computation _ , volume 4169 of _ lecture notes in computer science _ , pages 5059 .",
    "springer berlin / heidelberg , 2006 .",
    "m.  mller .",
    "parameterized derandomization . in _ proceedings of the 3rd international conference on parameterized and exact computation _ , iwpec08 , pages 148159 , berlin , heidelberg , 2008 .",
    "springer - verlag .",
    "m.  naor , l.  j. schulman , and a.  srinivasan .",
    "splitters and near - optimal derandomization . in _ proceedings of the 36th annual symposium on foundations of computer science _ , focs 95 , pages 182 , washington , dc , usa , 1995 .",
    "ieee computer society .",
    "g.  philip , v.  raman , and s.  sikdar . solving dominating set in larger classes of graphs : fpt algorithms and polynomial kernels . in _ proceedings of the 17th annual european symposium on algorithms ( esa 2009 ) _ , volume 5757 of _ lecture notes in computer science _ ,",
    "pages 694705 .",
    "springer , 2009 .",
    "e.  prieto and c.  sloper .",
    "looking at the stars . in r.",
    "downey , m.  fellows , and f.  dehne , editors , _ parameterized and exact computation _ ,",
    "volume 3162 of _ lecture notes in computer science _ , pages 138148 .",
    "springer berlin / heidelberg , 2004 .",
    "n.  robertson and p.  d. seymour .",
    "graph minors  a survey . in _",
    "surveys in combinatorics 1985 ( glasgow , 1985 ) _ , volume 103 of _ london math .",
    "lecture note ser .",
    "_ , pages 153171 .",
    "cambridge univ . press ,",
    "cambridge , 1985 .",
    "u.  schning .",
    "graph isomorphism is in the low hierarchy . in f.",
    "brandenburg , g.  vidal - naquet , and m.  wirsing , editors , _ stacs 87 _ , volume 247 of _ lecture notes in computer science _ , pages 114124 .",
    "springer berlin / heidelberg , 1987 .",
    "r.  shamir and d.  tsur .",
    "the maximum subforest problem : approximation and exact algorithms ( extended abstract ) . in _ proceedings of the ninth annual acm - siam symposium on discrete algorithms ( san francisco , ca , 1998 ) _ , pages 394399 , new york , 1998 .",
    "acm .",
    "d.  m. thilikos . fast sub - exponential algorithms and compactness in planar graphs . in _ proceedings of the 19th annual european symposium on algorithms ( esa 2011 ) _ , lecture notes in computer science .",
    "springer , 2011 .",
    "d.  m. thilikos , m.  j. serna , and h.  l. bodlaender .",
    "constructive linear time algorithms for small cutwidth and carving - width . in _ algorithms and computation ( taipei , 2000 )",
    "_ , volume 1969 of _ lecture notes in comput .",
    "_ , pages 192203 .",
    "springer , berlin , 2000 .",
    "s.  thomass . a quadratic kernel for feedback vertex set . in _ proceedings of the twentieth annual acm - siam symposium on discrete algorithms",
    "_ , soda 09 , pages 115119 , philadelphia , pa , usa , 2009 . society for industrial and applied mathematics .",
    "m.  thurley .",
    "kernelizations for parameterized counting problems . in _ proceedings of the 4th international conference on theory and applications of models of computation _ , tamc07 , pages 705714 , berlin , heidelberg , 2007 .",
    "springer - verlag ."
  ],
  "abstract_text": [
    "<S> one approach to confronting computational hardness is to try to understand the contribution of various parameters to the running time of algorithms and the complexity of computational tasks . </S>",
    "<S> almost no computational tasks in real life are specified by their size alone . </S>",
    "<S> it is not hard to imagine that some parameters contribute more intractability than others and it seems reasonable to develop a theory of computational complexity which seeks to exploit this fact . </S>",
    "<S> such a theory should be able to address the needs of practicioners in algorithmics . </S>",
    "<S> the last twenty years have seen the development of such a theory . </S>",
    "<S> this theory has a large number of successes in terms of a rich collection of algorithmic techniques both practical and theoretical , and a fine - grained intractability theory . </S>",
    "<S> whilst the theory has been widely used in a number of areas of applications including computational biology , linguistics , vlsi design , learning theory and many others , knowledge of the area is highly varied . </S>",
    "<S> we hope that this article will show both the basic theory and point at the wide array of techniques available . </S>",
    "<S> naturally the treatment is condensed , and the reader who wants more should go to the texts of downey and fellows @xcite , flum and grohe @xcite , niedermeier @xcite , and the upcoming undergraduate text downey and fellows @xcite .    </S>",
    "<S> parameterized complexity , parameterized algorithms </S>"
  ]
}
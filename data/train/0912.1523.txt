{
  "article_text": [
    "after grover s seminal paper @xcite , it is known that a quantum computer can search an element in a non - structured database quadratically faster compared to a classical computer .",
    "recently many other search algorithms were developed based on the discrete - time quantum walk model @xcite .",
    "they differ from grover s algorithm in many aspects and may be better suited for practical implementation @xcite .",
    "quantum walks can be seen as a quantum counterpart of classical random walks @xcite .",
    "they have been successfully applied in several quantum algorithms @xcite .",
    "it is possible to describe an _ abstract search algorithm _",
    "@xcite in a generic regular graph by using a discrete - time quantum walk with a modified coin operator to search for a marked vertex .",
    "grover s algorithm can be seen as the simplest example of this procedure .",
    "the shenvi - kempe - whaley ( skw ) algorithm can be seen as an implementation of the abstract search algorithm to an @xmath0dimensional hypercube @xcite and the ambainis - kempe - rivosh ( akr ) algorithm is an application to two - dimensional grids @xcite .",
    "decoherence and gate imperfections are unavoidable side - effects in any implementation of a quantum computer .",
    "one approach to deal with this problem , with considerable overhead in quantum resources , consists in using redundant encoding and several layers of error - correction codes .",
    "another approach consists in designing algorithms that are robust against certain types of errors which may be dominant in a given implementation .",
    "this requires a detailed knowledge of the effect that different kinds of noise have on the performance of the algorithm .",
    "it seems likely that a real quantum computer will take advantage of both approaches .",
    "decoherence in quantum walks has been considered in previous works , see for instance @xcite .    in this work",
    ", we study the effect of three different noise models on the akr and skw algorithms without quantum error correction . in two of them",
    "we assume phase errors affecting the modified coin operator . in the other case , we assume broken - link imperfections affecting the shift operator .",
    "the influence of errors in the akr algorithm has not been analyzed before .",
    "this work presents the first results in this direction .",
    "li and collaborators @xcite have analyzed the effect on the skw algorithm of gate errors in the coin operator assuming a perfect shift operator . in this work",
    "we complement those results by analyzing errors in the shift operator .",
    "the structure of the paper is as follows . in section  2 ,",
    "we review grover s algorithm and introduce the notation used in this work . in section  3 we review some basic concepts of search algorithms based on discrete - time quantum walks . in section  4 , we describe the noise models studied in this work and review the broken - link type of noise @xcite . in section  5 , we review the skw algorithm . in section  6",
    "we review the akr algorithm . in section  7",
    ", we describe the methodology used to study each of the noise models and give the results of the numerical simulations we performed for the skw algorithm . in section  8 , we present the results of the numerical simulations for the akr algorithm . in section  9 , we present our conclusions .",
    "in this section we briefly review grover s algorithm @xcite and the notation used in this paper .",
    "for further details see @xcite . consider a quantum computer of @xmath1 quantum bits ( qubits ) .",
    "quantum mechanics tells us that its state is described by a unit vector in a vector space of dimension @xmath2 .",
    "the simplest orthonormal basis for this vector space is @xmath3 , where @xmath4 is a vector of @xmath5 entries all of them zero except the entry @xmath6 which is 1 .",
    "this basis is called _ computational basis_.",
    "suppose that the state of the quantum computer in a given instant of time is the vector @xmath7 , then @xmath8 where the coefficients @xmath9 are complex numbers that must obey the constraint @xmath10 it is possible to prepare the quantum computer at the beginning of an algorithm in any state @xmath4 .",
    "the algorithm must be a sequence of applications ( multiplications ) of @xmath11 unitary operators ( matrices ) @xmath12 .",
    "so , at time @xmath13 , the state of the quantum computer is @xmath14 a matrix @xmath15 is unitary if @xmath16 , where @xmath17 is the transpose conjugate of @xmath15 and @xmath18 is the identity matrix .",
    "since the quantum computer is a physical system , one can perform measurements to determine the state @xmath7 .",
    "quantum mechanics tells us that the result of a complete measurement in the computational basis will be @xmath19 with probability @xmath20 .",
    "the measurement does not allow one to find the coefficients @xmath9 , that are needed to describe the vector @xmath7 .",
    "instead , one gets a random number in the set @xmath21 with the corresponding probability distribution @xmath22 .",
    "a complete measurement means that all qubits are measured yielding either 0 or 1 each .",
    "one gets a binary number that is converted to the decimal notation .",
    "a partial measurement consists in measuring a fraction of the qubits .",
    "a search algorithm , such as grover s algorithm , aims to determine whether an element @xmath23 belongs to non - structured database or to determine the position of an element in a non - sorted database .",
    "the easiest way to pose this problem is in the following form .",
    "suppose that the domain of function @xmath24 is @xmath21 and the image is @xmath25 suppose that we ask a friend to implement the function @xmath24 in a classical computer and there is only one value of @xmath26 such that @xmath27 .",
    "we can obtain the image of any input value by employing @xmath24 .",
    "what is the complexity of the best algorithm that finds the value of @xmath26 such that @xmath27 ?",
    "the complexity in this case is measured by the number of times we employ the function @xmath24 . if we do not know any equation for @xmath24 nor any details of the implementation of @xmath24 , the only way to find out that @xmath28 is through an exhaustive search .",
    "the complexity of the best classical algorithm is @xmath29 .    in a quantum computer",
    ", the implementation of function @xmath24 must be performed through a unitary matrix , which we call @xmath30 .",
    "the definition of @xmath30 is @xmath31 we suppose that the quantum computer has @xmath32 qubits .",
    "so the output of the function @xmath24 is added to a second register of 1 qubit .",
    "we again ask our friend to implement @xmath30 , this time in a quantum computer . what is the complexity of the best quantum algorithm that finds the value of @xmath33 ?",
    "grover s algorithm requires @xmath34 applications of @xmath30 to determine the value @xmath23 with a very small margin of error .",
    "the idea behind the algorithm is to start the quantum computer in a known state , then apply a sequence of unitary matrices that results in a state that has a large overlap with state @xmath35 .",
    "if the state of the quantum computer @xmath7 has a large overlap with @xmath35 , that is @xmath36 , the result of the measurement will be @xmath23 with high probability .",
    "the notation @xmath37 means the transpose conjugate of @xmath7 .",
    "grover s algorithm works as follows .",
    "prepare a @xmath38-qubit quantum computer in state @xmath39 .",
    "apply @xmath40 to @xmath41 .",
    "@xmath42 is the hadamard matrix and @xmath43 is the tensor product , see @xcite .",
    "the result is @xmath44 , where @xmath45 and @xmath46 [ u_grover ] now apply @xmath47 to @xmath48 , where @xmath49 in the last step , measure the first register to obtain @xmath23 with probability @xmath50 .",
    "quantum walks generalize the concept of classical random walk .",
    "a classical walk is a prescription of how to move , conditioned to the value of a random variable .",
    "if the walker lives in a regular graph of degree @xmath51 , the random variable must have @xmath51 values , usually with the same probability @xmath52 ( a balanced walk ) .",
    "the edges of the graph incident to a vertex @xmath53 must have labels from 0 to @xmath54 .",
    "if the walker is in vertex @xmath53 and the result of the random variable is @xmath55 , than the walker moves to the vertex @xmath56 that is connected to @xmath53 by an edge of label @xmath55 .",
    "this procedure is repeated again and again .",
    "the result is a random walk on the graph . in a one - dimensional lattice",
    ", one can toss a coin and move to the right if the result is heads , or to the left if the result is tails .    in a quantum setting",
    ", both the toss of a coin and the shift of the walker must be performed by unitary operators . in a regular graph of degree @xmath51 ,",
    "the vector space where the walk takes place is @xmath57 , where @xmath58 is the hilbert space spanned by @xmath59 representing the coin space and @xmath60 is the hilbert space spanned by @xmath61 representing the vertex space , where @xmath62 is the number of vertices .",
    "the usual form of the evolution operator is @xmath63here , @xmath64 is a @xmath65 matrix that acts only on the coin space , @xmath18 is the identity in the vertex space and @xmath66 is the shift operator given by @xmath67 where @xmath56 is the vertex that is connected to @xmath53 by edge @xmath55 .",
    "note that the coin operator @xmath64 is the same for all vertices .",
    "the walker starts at some initial configuration called @xmath41 and at time @xmath13 its state is @xmath68 .",
    "quantum walk search algorithms are based on a modification of some standard quantum walk given by @xmath15 .",
    "the analysis of the new walk depends on what happens in the original non - modified walk .",
    "suppose that we would like to search for vertex @xmath69 .",
    "that vertex must be marked somehow .",
    "one marks this vertex using a modified coin operator .",
    "the new coin operator must distinguish the marked vertex from the rest the new coin is defined by @xmath70this new coin operation @xmath71 defines a new evolution operator given by @xmath72 .",
    "the most used coin is called grover s coin and it is the real unitary operator farthest from the identity @xcite .",
    "it is defined as @xmath73 , where @xmath74 is the uniform superposition , @xmath75 for this coin , all directions have the same weight .",
    "using grover s coin in eq .",
    "( [ cprime ] ) , one obtains @xmath76 it is possible to perform a very general analysis of search algorithms on graphs if one demands some properties from @xmath15 @xcite .",
    "these properties are : ( 1 ) @xmath15 must be a real unitary matrix , ( 2 ) @xmath15 must have only one eigenvector with eigenvalue 1 , and ( 3 ) this eigenvector must be the initial state of the algorithm . this _ abstract search algorithm _ works as follows .",
    "suppose that @xmath77 and let @xmath78 be the eigenvalue of @xmath79 with the smallest angle among all eigenvalues of @xmath79 . if @xmath79 has eigenvalue 1 , the initial condition and the evolution of the walk must be in a space orthogonal to the eigenspace associated with eigenvalue 1 .",
    "the algorithm consists in applying @xmath80 to @xmath81 and measuring the vertex space .",
    "grover s algorithm is the simplest example of form ( [ uprime ] ) .",
    "two new search algorithms in this framework have been analyzed in detail .",
    "the first one is a search on hypercubes ( skw ) , which we describe in sec .",
    "[ sec : skw ] .",
    "the second one is a search on two dimensional grids ( akr ) , which we describe in sec .",
    "[ sec : akr ] .",
    "in an actual physical implementation , operators are error - prone .",
    "it is important to determine the robustness of an algorithm to errors in its implementation . in quantum search algorithms , there are three key operators : the original coin ( @xmath64 ) , the coin used in the marked vertex ( @xmath82 ) and the shift ( @xmath66 ) .",
    "we analyze the impact that errors on each of these operators have on the algorithm s performance .",
    "phase errors on the coin operator affecting the marked node can be implemented by replacing @xmath82 by @xmath83 with @xmath84 $ ] . the perfect coin operator @xmath82 on the marked vertex is recovered for @xmath85 .",
    "we say that the error is systematic when the phase error @xmath86 is constant in each step ( model  i ) , and that the error is random when the phase error @xmath86 in each step is a gaussian random variable with zero mean and standard deviation @xmath87 ( model  ii ) .",
    "phase errors on the coin operator for the unmarked nodes can be implemented by rewriting @xmath64 as @xmath88 with @xmath84 $ ] .",
    "the grover coin operator is recovered for @xmath85 .",
    "the effect of phase errors in the original grover s algorithm was analyzed by long and collaborators and , later on by shenvi and collaborators @xcite .",
    "the latter authors investigated the importance of the scaling of phase errors with the size of the database , @xmath5 .",
    "in a recent work , li and collaborators @xcite studied the effect of an imperfect @xmath64 on the skw algorithm .",
    "the operators @xmath82 ( acting on the marked vertex ) and @xmath66 were supposed to have no errors .",
    "errors in the shift operator @xmath66 can be implemented by randomly opening links between connected vertices with probability @xmath89 per unit time ( model  iii ) .",
    "this broken - link noise model has been previously considered for a quantum walk on a line and on a plane @xcite , and on the hypercube @xcite . to implement this kind of error",
    "we generalize the shift operator @xmath66 such that no probability flux is transferred across a broken link .",
    "this modified shift operator is unitary for any number of broken links in the lattice . at each time step , the topology of the graph is defined , opening each link with probability @xmath89 and performing the shift to the neighboring vertex only if the link is not broken .",
    "the original @xmath66 operator is recovered for @xmath90 .",
    "the quantum search on @xmath1-dimensional hypercubes has a hilbert space @xmath91 , where @xmath92 is a @xmath1-dimensional hilbert space associated with a `` quantum coin '' and @xmath93 is a @xmath94-dimensional hilbert space associated with the vertices of the hypercube .",
    "a basis for @xmath95 is @xmath96 , for @xmath97 and a basis for @xmath93 is @xmath98 , for binary @xmath99 . in a hypercube",
    "two vertices are connected if , and only if , the corresponding binary strings differ by one bit .",
    "the generic state of the quantum walker is @xmath100 where @xmath101 and @xmath102 .",
    "the evolution operator for one step of the walk is @xmath103 , where @xmath66 is the shift operator and @xmath64 the coin operator acting in @xmath95 and @xmath18 is the identity in @xmath93 .",
    "the shift operator can be written as @xmath104 where @xmath105 is the bitwise binary sum between binary vectors , and @xmath106 is a null vector except for a single @xmath107 entry in the @xmath51-th component .",
    "the coin operator is given by @xmath108 where @xmath109 is the uniform superposition over all directions .",
    "in the skw search algorithm , the initial state is the uniform superposition of coin and spatial eigenstates , _",
    "i.e. _ , @xmath110 , where @xmath111 is the uniform superposition over the @xmath94 nodes of the hypercube . note that a single searched state is contained in @xmath111 with an amplitude @xmath112 .",
    "the initial state @xmath41 is an eigenstate of @xmath15 with eigenvalue 1 .",
    "the quantum search ( skw ) , as proposed by @xcite , is based on a modified coin operator of the form @xmath113 without loss of generality , we assume that the searched node is labeled @xmath114 .",
    "the detailed analysis of this algorithm shows that after @xmath115 iterations , a measurement of the position of the walker yields the marked state with success probability @xmath116 @xcite .",
    "the quantum search on a @xmath117 grid has a four - dimensional hilbert space @xmath95 for the coin and a @xmath5-dimensional hilbert space @xmath93 for the @xmath5 lattice sites .",
    "a basis for @xmath95 is @xmath118 , for @xmath119 and @xmath120 .",
    "variable @xmath51 sets the direction of the walk , @xmath121 for horizontal shift and @xmath122 for vertical shift .",
    "variable @xmath55 sets whether the walker moves forwards ( @xmath123 ) or backwards ( @xmath124 ) .",
    "a basis for @xmath93 is @xmath125 , for @xmath126 .",
    "the boundary conditions are periodic .",
    "the generic state of the quantum walker is @xmath127 the action of the shift operator on the computational basis is @xmath128 where @xmath105 is the binary sum .",
    "notice that there is an inversion from backwards to forwards and vice - versa after the action of the shift operator .",
    "this is a modification of the standard shift operator and it is absolutely necessary to have a quadratic speedup over the optimal classical algorithm .",
    "the initial state is the uniform superposition of coin and spatial eigenstates , _",
    "i.e. _ , @xmath129 , where @xmath111 is the uniform superposition over the @xmath5 sites of the grid and @xmath130 the coin operator on unmarked vertices is given by eq .",
    "( [ eq : grover - coin ] ) and the modified coin operator is @xmath131 where @xmath132 is the marked vertex .",
    "the evolution operator is @xmath72 and must be applied @xmath133 times .",
    "the overlap between the final state and the marked vertex is @xmath134 . in order to improve the probability of finding the marked vertex , it is necessary @xmath135 rounds of the algorithm yielding an overall complexity of @xmath136 .",
    "a very recent paper @xcite improved the overall complexity to @xmath133 .",
    "[ fig : prob - vs - it ] shows the probability of finding the walker at the marked node as function of the number of steps , for each noise model . in the left panel",
    "we compare the results for the ideal case , without noise , with those for noise models  i and  ii . in the right panel",
    "we compare the ideal case with the evolution under noise model  iii .",
    "all plots correspond to a hypercube of dimension @xmath137 . for model",
    "i , we took a phase error @xmath138 , the standard deviation in model  ii was @xmath139 and the probability of broken links per unit time ( model  iii ) was @xmath140 .",
    "note that the peak of probability for the systematic error ( model  i ) occurs earlier than in the ideal case with zero noise .",
    "the behavior of the algorithm under noise from model  i affecting the coin operator at the marked node @xmath141 is similar to the one observed in @xcite , in which the operator @xmath64 was affected .",
    "although random models  ii and  iii correspond to different kinds of noise , they result in similar patterns . in both cases",
    "the first maximum in the probability occurs approximately at the same number of steps as in the case with no noise , and it reaches a lower value .",
    "subsequent peaks undergo a gradual attenuation with the number of steps @xmath142 .     comparing the ideal case with both systematic ( @xmath138 ) and random ( @xmath139 ) errors .",
    "right panel : the same for broken - link errors with @xmath140.,title=\"fig:\",scaledwidth=40.0% ]    comparing the ideal case with both systematic ( @xmath138 ) and random ( @xmath139 ) errors .",
    "right panel : the same for broken - link errors with @xmath140.,title=\"fig:\",scaledwidth=40.0% ]    the stopping time in the case without noise corresponds to the first maximum and this point is @xmath143 , for @xmath137 . in the presence of noise it is better to stop the algorithm before this point and to rerun to find the correct result .",
    "if the probability to obtain the correct result in one run is @xmath89 , then the expected number of times of trials is @xmath144 .",
    "if the computational complexity of one run is @xmath34 then the overall complexity is @xmath145 .",
    "if @xmath89 does no depend on @xmath5 , it is not going the change the complexity .",
    "let us define the algorithmic cost @xmath146 as the overall cumulative number of steps needed to find the desired state , @xmath147 where @xmath142 the number of steps before the final measurement is taken in one run of the algorithm . in fig .",
    "[ fig : cost ] we show the cost function , @xmath146 , for the different noise models . in the case of a systematic phase error ,",
    "the cost function has a well - defined minimum at @xmath148 .",
    "it is clearly convenient to stop the algorithm before the peak probability is reached , in either the ideal case or in the case with noise . for the other noise models , and",
    "also in the case without noise , the cost function has a very shallow minimum , and it increases very slowly with step number after its minimum .",
    "however , even in these cases , these results suggest that it is advantageous to stop the algorithm before the noiseless probability peak is reached , and to repeat it more times , as needed .     from eq .",
    "( [ cost ] ) , vs. number of steps , for the noiseless search algorithm and for the algorithm with the three different noise models described in the text .",
    "the hypercube considered has dimension @xmath137 .",
    ", scaledwidth=45.0% ]    in fig .",
    "[ fig : probability - vs - noise ] we observe the probability of reaching the marked vertex as a function of the noise strength , as represented by the three upper curves . in the left  ( right ) panel we have the results for model  i  ( model  ii ) .",
    "note that the optimal phase is @xmath85 or @xmath149 , i.e. , when @xmath82 is used in the marked node as in the standard algorithm .",
    "the plot also shows that the algorithm is very sensitive to noise from operational errors , if no error correction code is used .",
    "the three lower curves represent the highest probability among the unmarked vertices .",
    "we observe that , as the phase error increases , the difference between the maximum probabilities at marked and unmarked nodes becomes smaller . in this case",
    ", we can not distinguish the right solution and the algorithm is no longer useful .",
    "the noise generated by systematic errors ( left panel ) seems to play a more significant role in the algorithm than the noise generated by random errors ( right panel ) .    .",
    "lower three curves : highest probability at the unmarked vertices , using the same convention for the dependence of the dimension of the hypercube.,title=\"fig:\",scaledwidth=40.0% ]   .",
    "lower three curves : highest probability at the unmarked vertices , using the same convention for the dependence of the dimension of the hypercube.,title=\"fig:\",scaledwidth=40.0% ]    in fig .",
    "[ fig : probability - vs - blnoise ] we have the results for model  iii . in the left panel , we observe the highest probability at marked vertex as a function of the broken - link rate  @xmath89 , as represented by the three upper curves .",
    "the three lower curves represent the highest probability among the unmarked vertices . in the right panel , we have the highest probability at the marked vertex as a function of the dimension @xmath1 of the hypercube . in this case , the probabilities decay as the dimension of the hypercube is increased , which is similar to the result obtained in @xcite for noise affecting the coin operator at unmarked sites .     as a function of the broken - link rate .",
    "right panel : highest probability at marked vertex as a function of the dimension @xmath1 of the hypercube.,title=\"fig:\",scaledwidth=40.0% ]    as a function of the broken - link rate .",
    "right panel : highest probability at marked vertex as a function of the dimension @xmath1 of the hypercube.,title=\"fig:\",scaledwidth=40.0% ]    in order to estimate how errors of model  ii change the complexity of the algorithm we use a formula that scales with @xmath5 in the form @xmath150 in eq .",
    "( [ cv0 ] ) . in fig .",
    "[ fig : cost - vs - dim - err2 ] we plot the scaled cost , which is the logarithm to base @xmath5 of the algorithmic cost given by eq .",
    "( [ cost ] ) , against error parameter @xmath151 for several values of @xmath1 .",
    "recall that the complexity of skw algorithm is @xmath152 and its success probability is @xmath153 .",
    "hence , for large values of  @xmath151 and  @xmath5 , we should obtain a scaled cost close to @xmath154 , corresponding to the complexity of the noiseless skw algorithm .",
    "our plot shows a scaled cost close to @xmath155 , which is consistent with the values of @xmath5 considered .",
    "this means that for @xmath156 , the skw algorithm with error has the same complexity of the noiseless skw algorithm . for @xmath157 , the noise rate increases and the algorithm gradually looses efficiency in relation to the noiseless search . for @xmath158 ,",
    "the scaled cost is close to  @xmath107 , which means that the quantum algorithm has the same complexity of the classical search , @xmath29 .",
    "for @xmath159 , the scaled cost is higher than @xmath107 , which means that the performance of the quantum search is worse than the classical search .    ) of the algorithmic cost as a function of scaling parameter  @xmath151 for model  ii comparing different dimensions.,scaledwidth=50.0% ]",
    "the behaviour of the maximum probability at the marked node in the akr algorithm follows a similar pattern as in the skw algorithm . the main difference being that for akr the maximum probability decreases as @xmath5 increases , while for skw the maximum probability remains close to @xmath160 . the numerical results for",
    "the cost in the akr algorithm also show that in the presence of imperfections it is better to stop the algorithm before the theoretical stopping time .",
    "[ fig : probability - vs - noise - akr ] shows the maximum probability at the marked node as function of the noise strength . in the left  ( right ) panel",
    "we have the results for model  i  ( model  ii ) . this figure",
    "should be compared to fig .",
    "[ fig : probability - vs - noise ] .",
    "note that the number of nodes of the grids corresponds to the number of nodes of the hypercubes .",
    "the curves for the akr algorithm are very similar to those for the skw algorithm and we draw similar conclusions for both cases . the main difference is the distance between the curves , a consequence of the fact that in the akr algorithm the maximum probability at the marked node drops when we increase @xmath5 .        in fig .",
    "[ prob - vs - rate - err3 ] we show the results for model  iii . in the left panel",
    ", we observe the highest probability at the marked vertex as a function of the broken - link rate  @xmath89 . in the right panel",
    ", the horizontal axis is in log scale .",
    "these results should be compared with fig .",
    "[ fig : probability - vs - blnoise ] .",
    "the probability drops faster in the akr algorithm than in the skr .",
    "this was predicted in @xcite , where it is shown that the probability at the marked node scales as @xmath161 .     of the @xmath117 grid.,title=\"fig:\",scaledwidth=31.0% ]    of the @xmath117 grid.,title=\"fig:\",scaledwidth=31.0% ]    in fig .",
    "[ fig : cost - vs - dim - akr ] we plot the scaled cost @xmath162 against @xmath151 , which is the analogue of fig .",
    "[ fig : cost - vs - dim - err2 ] for the akr algorithm .",
    "recall that the cost in the akr algorithm is @xmath163 .",
    "hence , for large values of  @xmath151 and  @xmath5 , we should obtain a scaled cost a little bit above @xmath154 , corresponding to the complexity of the noiseless akr algorithm .",
    "the scaled cost is not exactly the power of @xmath5 because the cost has the term @xmath164 .",
    "our plot shows a scaled cost close to @xmath165 , which is consistent with the values of @xmath5 considered . from the figure we see that for @xmath166 , the akr algorithm with error has the same complexity as the noiseless akr algorithm . for @xmath167 ,",
    "the noise rate increases fast enough such that the algorithm looses efficiency in relation to the noiseless search .",
    "when we decrease @xmath151 , the scaled cost approaches 1 , which means that the quantum algorithm has the same complexity of the classical search , @xmath29 . for @xmath168 , the scaled cost is higher than @xmath107 , which means that the performance of the quantum search is worse than the classical search .",
    "note that @xmath169 is the transition point in the akr algorithm , while @xmath170 is the transition point in the skw algorithm . for comparison ,",
    "note that @xcite obtained @xmath171 as the transition point in the original grover s algorithm .    ) of the algorithmic cost as a function of scaling parameter  @xmath151 for model  ii comparing different dimensions in akr algorithm.,scaledwidth=50.0% ]",
    "in this work , the effect of imperfect quantum operators on search algorithms based on quantum walks has been investigated .",
    "we have considered both systematic and random phase errors in the coin operator .",
    "the effect of randomly broken links affecting the shift operator has also been considered .",
    "this kind of error directly affects the spatial propagation of the walker .",
    "we have considered the search of a marked vertex on hypercubes ( skw algorithm ) and two - dimensional grids ( akr algorithm ) .    for the skw algorithm",
    ", we found that the overall effect of noise in the coin operator for the marked node is similar to that for the imperfect coin operator acting on unmarked nodes considered in @xcite .",
    "there are also many similarities with the akr algorithm .",
    "the overall qualitative effect of noise seems to be similar in all search algorithms considered . on the other hand , we have obtained quantitative results for the tolerance of the algorithms to errors .    in the context of grover s search algorithm ,",
    "it was shown analytically that phase errors @xmath86 scaling as @xmath172 , for @xmath173 , modify the complexity of the algorithm to @xmath174 @xcite . for @xmath175 ,",
    "the complexity of grover s algorithm with errors is equal to the complexity of the noiseless case , @xmath34 . if @xmath176 , the advantage over a classical search , @xmath29 , is progressively reduced . if @xmath177 , _ i.e. _ , constant error , the complexity of grover s algorithm is equal to the complexity of the classical search .",
    "we have also considered this setup in the context of the skw and akr search algorithms .",
    "our numerical simulations show that the transition point for akr is around @xmath169 and for skw it is around @xmath170 . for @xmath151 below these threshold values , the algorithm gradually looses efficiency until becoming worse than the classical case at around @xmath177 .",
    "our numerical results show that it is possible to improve the efficiency in all cases ( with or without noise ) if we stop the search algorithm before the number of steps predicted theoretically . in this case , more than one round of the algorithm is needed , keeping the overall cost smaller than when using the theoretical stopping point .",
    ", a.c.o . and r.p .",
    "acknowledge financial support of cnpq .",
    "g.a . and r.d .",
    "acknowledge support from pedeciba - uruguay .",
    "we acknowledge support from _ edital ct - info _ n.07/2007  _ grandes desafios da cincia da computao no brasil 2006 - 2016_.          andris ambainis , julia kempe , and alexander rivosh , _ coins make quantum walks faster _ , soda 05 : proceedings of the sixteenth annual acm - siam symposium on discrete algorithms ( philadelphia , pa , usa ) , society for industrial and applied mathematics , 2005 , pp .",
    "10991108 .",
    "c.  moore and a.  russell , _ quantum walks on the hypercube _ , proceedings of 6th international workshop on randomization and approximation techniques ( random 2002 ) , vol .",
    "2483 of lecture notes in computer science ( lncs ) ( cambridge , ma ) ( j.  d.  p. rolim and s.  vadhan , eds . ) , springer - verlag , berlin , 2002 , 2002 , pp .  164178 ."
  ],
  "abstract_text": [
    "<S> recently several quantum search algorithms based on quantum walks were proposed . </S>",
    "<S> those algorithms differ from grover s algorithm in many aspects . </S>",
    "<S> the goal is to find a marked vertex in a graph faster than classical algorithms . since the implementation of those new algorithms in quantum computers or in other quantum devices is error - prone , it is important to analyze their robustness under decoherence . in this work </S>",
    "<S> we analyze the impact of decoherence on quantum search algorithms implemented on two - dimensional grids and on hypercubes .    </S>",
    "<S> recentemente , vrios algoritmos qunticos de busca baseados em passeios aleatrios qunticos foram apresentados . </S>",
    "<S> estes algoritmos so diferentes do algoritmo de grover em vrios aspectos . </S>",
    "<S> o objetivo  encontrar um vrtice marcado em um grafo mais rpido do que algoritmos clssicos . </S>",
    "<S> uma vez que a implementao destes novos algoritmos em computadores qunticos ou qualquer outro dispositivo quntico est sujeito a erros ,  importante analisar a robustez em relao  descoerncia . </S>",
    "<S> neste trabalho , analisamos a descoerncia dos algoritmos qunticos de busca em malhas bi - dimensionais e hipercubos . </S>"
  ]
}
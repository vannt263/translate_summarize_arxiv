{
  "article_text": [
    "an epidemic working through a population , cascading electrical power failures , product adoption , and the spread of a mutant gene are all examples of diffusion processes that can happen in multi - agent systems structured as complex networks .",
    "these network processes have been studied in a variety of disciplines , including computer science  @xcite , biology  @xcite , sociology  @xcite , economics  @xcite , and physics  @xcite .",
    "much existing work in this area is based on pre - existing models in sociology and economics  in particular the work of  @xcite .",
    "however , recent examinations of social networks  both analysis of large data sets and experimental  have indicated that there may be additional factors to consider that are not taken into account by these models .",
    "these include the attributes of nodes and edges , competing diffusion processes , and time . in this paper ,",
    "we outline seven design criteria ( section  [ sec : criteria ] ) for such a framework and introduce @xmath0 ( section  [ prelimsec ] ) , which is to the best of our knowledge the first logical language for modeling diffusion in complex networks that meets these criteria .",
    "@xmath0 is a rule - based framework ( inspired by logic programming ) that can richly express how agents adopt or fail to adopt certain behaviors , and how these behaviors cascade through a network .",
    "we also introduce fixed - point based algorithms that allow for the calculation of the result of the diffusion process in section  [ fpsec ] .",
    "note that these algorithms are proven not only to be correct , but also to run in polynomial time .",
    "hence , our approach can not only better express many aspects of cascades in complex networks , but it can do so in a reasonable amount of time .",
    "we conclude by discussing applications of @xmath0 in section  [ sec : learn ] .",
    "_ proofs of all results stated in this paper can be found in the appendix .",
    "_      we begin by identifying a set of criteria that we believe a framework for reasoning about cascades in complex networks should satisfy .    * 1 .",
    "multiply labeled and weighted nodes and edges . *",
    "many existing frameworks for studying diffusion in complex networks assume that there is only one type of vertex that may become `` active ''  @xcite or may `` mutate ''  @xcite and only one possible relationship between nodes . in reality ,",
    "nodes and edges often have different properties .",
    "for instance , labels on edges can be used to differentiate between strong and weak ties ( edge types )  a concept that is well studied  @xcite .",
    "recently , such attributes of nodes have been shown to impact influence in a network  @xcite .    *",
    "2 .  explicit representation of time . *",
    "most work in the literature assumes static models , with the exception of the recent developments in  @xcite , which assume the existence of a timestamped log referring to actions taken in the network in order to learn how nodes influence each other . though  @xcite tackles the problem of predicting the time at which a certain node will take an action , the authors make several simplifying assumptions such as monotonicity of probability functions , probabilistic independence , sub - modularity and , most importantly for this criterion , a modeling of time solely based on temporal decay of influence .",
    "we seek a richer model of temporal relationships between conditions in the network structure , the current state of the cascades in process , and how influence propagates .    *",
    "non - markovian temporal relationships . *",
    "apart from time being explicitly represented , the temporal dependencies should be able to span multiple units of time .",
    "hence , the `` memoryless '' mode of a standard markov process , where only the information of the current state is required , is insufficient . here , we strive to create a framework where dependencies can be from other earlier time steps .",
    "this issue has been previously studied with respect to more general logic programming frameworks such as  @xcite , but to our knowledge has not been applied to social networks .    *",
    "representation of uncertainty . * as in practice it is not always possible to judge the attributes of all individuals in a network , an element of uncertainty must be included .",
    "however , in connection with point  7 , this should not be at the expense of tractability .",
    "for instance , the probabilistic models of  @xcite are normally addressed with simulation ( and hence do not scale well ) as the computation of the expected number of activated nodes is a @xmath1-hard problem  @xcite .    *",
    "competing cascades . * often , in real - world situations there will be competing cascading processes .",
    "for example , in evolutionary graph theory  @xcite , `` mutants '' and `` residents '' compete for nodes in the network  the success of one hinges on the failure of the other .",
    ".  non - monotonic cascades . *",
    "in much existing work on cascades in complex networks , the number of nodes attaining a certain property at each time step can only increase .",
    "however , if we allow for competing cascades in the same model , we can not have such a strong restriction as the success of one cascade may come at the expense of another .    *",
    "7 .  tractability . * the social networks of interest in today s data mining problems often have millions of nodes .",
    "it is reasonable to expect that soon billion - node networks will be commonplace .",
    "any framework for dealing with these problems must be solvable in a reasonable amount of time and offer areas for practical improvement for further scalability .",
    "the above criteria can be summarized as the desire to design the most expressive language for network cascades possible while still allowing computation of the outcome of a diffusion process to be completed in a tractable amount of time . as a comparison ,",
    "let us briefly describe some relevant related work .",
    "perhaps the best known general model for representing diffusion in complex networks is the independent cascade / linear threshold ( ic / lt ) model of  @xcite .",
    "however , although this framework was shown to be capable of expressing a wide variety of sociological models , it assumes the markov property and does not allow for the representation of multiple attributes on vertices and edges .",
    "a more recent framework , social network optimization problems ( snops )  @xcite uses logic programming to allow for the representation of attributes , but this framework does not allow for competing processes or non - monotonic cascades . a related logic programming framework , competitive diffusion ( cd )  @xcite allows for competitive diffusion and non - monotonic processes but does not explicitly represent time and also makes markovian assumptions .",
    "further , we also note that the semantics of cd yields a `` most probable interpretation '' that is not a unique solution .",
    "hence , a given model in that framework can lead to multiple and possibly contradictory , outcomes to a cascade ( this problem is avoided in @xmath0 ) .",
    "another popular class of models is evolutionary graph theory ( egt )  @xcite , which is highly related to the voter model ( vm )  @xcite .",
    "although this framework allows for competing processes and non - monotonic diffusion , it also makes markovian assumptions while not explicitly representing time .",
    "further , determining the outcome of a cascade in those models is np - hard , while determining the outcome in @xmath0 can be accomplished in polynomial time .",
    "table  [ rwtab ] lists how these models compare to @xmath0 when considering our design criteria .    [",
    "cols=\"<,^,^,^,^,^,^\",options=\"header \" , ]     we define a @xmath0 interpretation as follows .    a @xmath0 interpretation @xmath2 is a mapping of natural numbers in the interval @xmath3 $ ] to network interpretations , i.e. , @xmath4 . let @xmath5 be the set of all possible interpretations .",
    "first , we define what it means for an interpretation to satisfy a fact and a rule .",
    "an interpretation @xmath2 * satisfies * @xmath0 fact @xmath6 $ ] , written @xmath7 $ ] , iff @xmath8 $ ] , @xmath9 .",
    "[ satfactex ] consider interpretation @xmath10 , where @xmath11 ( from example  [ niex ] ) , and @xmath0 facts @xmath12 and @xmath13 from example  [ ex3 ] . in this case ,",
    "@xmath14 and @xmath15 .    for non - fluent facts ,",
    "we introduce the notion of strict satisfaction , which enforces the bound in the interpretation to be set to exactly what the fact dictates .",
    "interpretation @xmath2 * strictly satisfies * @xmath0 fact @xmath16 $ ] iff @xmath8 $ ] , @xmath17 .    next , we define what it means for an interpretation to satisfy an integrity constraint .",
    "an interpretation @xmath2 * satisfies * integrity constraint @xmath18 iff for all @xmath19 and @xmath20 , @xmath21 .",
    "before we define what it means for an interpretation to satisfy a rule , we require two auxiliary definitions that are used to define the bound enforced on a label by a given rule , and the set of time points that are affected by a rule .",
    "[ bounddef ] for a given rule @xmath22 , node @xmath23 , and network interpretation @xmath24 , @xmath25 @xmath26 where @xmath27 @xmath28 and @xmath29 @xmath30    intuitively , the bound returned by the function depends on the influence function and the number of qualifying and eligible nodes that influence it .    for interpretation @xmath2 , node @xmath23 , and",
    "rule @xmath22 , the _ target time set _ of @xmath31 is defined as follows : @xmath32 \\ ; | \\ ;   i(t-\\delta t)(v ) \\models f\\big\\}\\ ] ] we also extend this definition to a program @xmath33 , for a given @xmath20 and @xmath34 , as follows ; @xmath35    @xmath36 \\ ; | \\ ; ( \\<l,\\bnd\\>,c):[t_1,t_2 ] \\in p\\big\\}\\ ] ] @xmath37    we can now define satisfaction of a rule by an interpretation .",
    "an interpretation @xmath2 * satisfies * a rule @xmath38 iff for all @xmath39 and @xmath40 it holds that @xmath41    [ satrule ] let @xmath10 be the interpretation from example  [ satfactex ] .",
    "suppose that @xmath42\\ > \\in i(1)(5)$ ] . in this case ,",
    "let @xmath44 be equivalent to @xmath10 except that we have @xmath45\\ > \\in i_2(1)(3)$ ] .",
    "in this case , @xmath46 .",
    "we now define satisfaction of programs , and introduce _",
    "canonical interpretations _ , in which time points that are not `` targets '' retain information from the last time step .    for interpretation @xmath2 and program @xmath33 :    @xmath2 is a * model * for @xmath33 iff it satisfies all rules , integrity constraints , and fluent facts in that program , strictly satisfies all non - fluent facts in the program , and for all @xmath47 @xmath20 and @xmath48 , @xmath49\\ > \\in i(c)(t)$ ] .",
    "@xmath2 is a * canonical model * for @xmath33 iff it satisfies all rules , integrity constraints , and fluent facts in @xmath33 , strictly satisfies all non - fluent facts in @xmath33 , and for all @xmath47 @xmath50 and @xmath48 , @xmath49\\ > \\in i(c)(t)$ ] when @xmath51 and @xmath52 where @xmath53 , otherwise .",
    "[ canonex ] following from previous examples , if we consider interpretation @xmath10 and program @xmath54 , we have that @xmath55\\>$ ] must be in @xmath56 in order for @xmath10 to be canonical .      in this section",
    "we discuss consistency and entailment in @xmath0 programs , and explore the use of minimal models towards computing answers to these problems .",
    "a @xmath0 program @xmath33 is ( canonically ) consistent iff there exists a ( canonical ) model @xmath2 of @xmath33 .    a @xmath0 program @xmath33 ( canonically ) entails @xmath0 fact @xmath57 iff for all ( canonical ) models @xmath2 of @xmath33",
    ", it holds that @xmath58 .",
    "now we define an ordering over models and define the concept of minimal model .",
    "we then show that if we can find a minimal model then we can answer consistency , entailment , and tight entailment queries .",
    "to do so , we first define a pre - order over interpretations .",
    "given interpretations @xmath59 we say @xmath60 if and only if for all @xmath61 if there exists @xmath62 then there must exist @xmath63 s.t .",
    "@xmath64 .",
    "next , we define an equivalence relation for interpretations denoted with @xmath65 ; we will use the notation @xmath66 $ ] for the set of all interpretations equivalent to @xmath2 w.r.t .",
    "this allows us to define a partial ordering .",
    "two interpretations @xmath67 are * equivalent * ( written @xmath68 ) iff for all @xmath69 , @xmath70 iff @xmath71 .    given classes of interpretations @xmath66,[i']$ ] that are equivalent w.r.t .",
    "@xmath65 , we say that @xmath66 $ ] precedes @xmath72 $ ] , written @xmath66 \\sqsubseteq [ i']$ ] , iff @xmath60 .",
    "the partial ordering is clearly reflexive , antisymmetric , and transitive .",
    "note that we will often use @xmath73 as shorthand for @xmath66 \\sqsubseteq [ i']$ ] .",
    "we define two special interpretations , @xmath74 and @xmath75 , such that @xmath76 , @xmath77 and there exists network atom @xmath78 .",
    "clearly , no other interpretation can be below @xmath74 as the @xmath79 $ ] bound on all network atoms for each time step and each component is @xmath80 $ ] ; similarly , no other interpretation is above @xmath75 , since for any interpretation @xmath2 for which there exists @xmath81 where @xmath82 , we have @xmath83",
    ". we can prove ( see the full version of the paper for details ) that with @xmath75 and @xmath74 , @xmath84 is a complete lattice .",
    "we can now arrive at the notion of _ minimal model _ for a @xmath0 program .",
    "given program @xmath33 , the minimal model of @xmath33 is a ( canonical ) interpretation @xmath2 s.t .",
    "@xmath70 and for all ( canonical ) interpretation @xmath85 s.t .",
    "@xmath71 , we have that @xmath73 .",
    "suppose we have some algorithm @xmath86 that takes as input a program @xmath33 and returns an interpretation @xmath2 ( where @xmath2 does not necessarily satisfy @xmath33 ) s.t .  for all @xmath85 where @xmath71 , @xmath73 .",
    "it is easy to show that if @xmath87 then @xmath33 is consistent . likewise ,",
    "if @xmath88 then @xmath33 is inconsistent , as all models must then have a tighter weight bound for the network atoms than an invalid interpretation ( hence , making such an interpretation invalid as well ) .",
    "clearly , any such algorithm @xmath86 would provide a sound and complete answer to the consistency problem . likewise",
    ", if we consider the entailment problem , it is easy to show that for fact @xmath89 $ ] , @xmath33 ( canonically ) entails @xmath57 iff the minimal model of @xmath33 ( canonically ) satisfies @xmath57 .",
    "this is because for minimal model @xmath90 of @xmath33 , for any time @xmath91 $ ] , if @xmath92 then there is network atom @xmath93 s.t .",
    "we note that for any other interpretation @xmath2 of @xmath33 with @xmath94 we have that @xmath95 .",
    "hence , having a minimal model allows us to solve any entailment query .",
    "we can think of a minimal model of a @xmath0 program as the outcome of a diffusion process in a multi - agent system modeled as a complex network .",
    "hence , a question such as `` how many agents will adopt the product with a weight of at least @xmath96 in two months ? '' can be easily answered once the minimal model is obtained .",
    "in this section we introduce a fixed - point operator that produces the non - canonical minimal model of a @xmath0 program in polynomial time .",
    "this is followed by an algorithm to find a canonical minimal model also in polynomial time .",
    "first , we introduce three preliminary definitions .    for a given @xmath0 program @xmath33 , @xmath20 , @xmath34 , and @xmath97 we define function @xmath98",
    "@xmath99\\in p\\textit { s.t .",
    "} t \\in [ t_1,t_2]}\\bnd\\ ] ]    [ ibound ] for a given @xmath0 program @xmath33 , @xmath20 , @xmath34 , and @xmath97 we define function @xmath100 @xmath101    given @xmath0 program @xmath33 , interpretation @xmath2 , @xmath39 , @xmath34 , and @xmath97 , we define @xmath102 @xmath103    we can now introduce the operator .    for a given @xmath0 program @xmath33",
    ", we define the operator @xmath104 as follows : for a given @xmath2 , for each @xmath19 , @xmath105 , and @xmath34 , add @xmath106 to @xmath107 where @xmath108 is defined as : @xmath109 where @xmath110 .",
    "it is easy to show that @xmath111 can be computed in polynomial time ( the proof is in the full version ) .",
    "next , we introduce notation for repeated applications of @xmath111 .    given natural number @xmath112 , interpretation @xmath2 , and program @xmath33 , we define @xmath113 , the multiple applications of @xmath111 , as follows : @xmath114    we can prove that the iterated @xmath111 operator converges after a polynomial number of applications :    [ gammapolyconverge ] given interpretation @xmath2 and program @xmath33 , there exists a natural number @xmath115 s.t.@xmath116 , and @xmath117 where @xmath118 is the maximum in - degree in the network .    for a given vertex @xmath119",
    ", we will use the notation @xmath120 to denote the number of incoming neighbors ( of any edge type ) .",
    "first note that for a given @xmath121 and @xmath34 , a given rule @xmath122 can tighten the bound on a network atom formed with @xmath123 no more than @xmath124 times . at each application of @xmath111",
    ", at least one network atom must tighten .",
    "hence , as there are only @xmath125 tightenings possible , this is also the bound on the number of applications of @xmath111 .    in the following ,",
    "we will use the notation @xmath126 to denote the iterated application of @xmath111 after a number of steps sufficient for convergence ; theorem  [ gammapolyconverge ] means that we can efficiently compute @xmath126 .",
    "we also note that as a single application of @xmath111 can be computed in polynomial time , this implies that we can find a minimal model of a @xmath0 program in polynomial time .",
    "we now prove the correctness of the operator .",
    "we do this first by proving a key lemma that , when combined with a claim showing that for consistent program @xmath33 , @xmath126 is a model of @xmath33 , tells us that @xmath126 is a minimal model for @xmath33 .",
    "following directly from this , we have that @xmath33 is inconsistent iff @xmath127 .",
    "[ boundlemma ] if @xmath70 and @xmath128 then @xmath129 .",
    "[ minmodelgamma ] if program @xmath33 is consistent then @xmath126 is a minimal model for @xmath33 .    these results ,",
    "when taken together , prove that tight entailment and consistency problems for @xmath0 can be solved in polynomial time , which is precisely what we set out to accomplish as part of our desiderata described in section  [ sec : criteria ] .",
    "next , we develop an algorithm for the _ canonical _ versions of consistency and tight entailment , and show that we can bound the running time of the algorithm with a polynomial .",
    "we also note that subsequent runs of the convergence of @xmath111 will likely complete quicker in practice , as the initial interpretation is the last interpretation calculated ( cf .  line  [ recalcline ] ) .",
    "we also show that the interpretation produced by the algorithm is a canonical minimal model .",
    "following from that , a program is inconsistent iff the algorithm returns @xmath75 .",
    "program @xmath33 interpretation @xmath2    [ bigfor ] [ condline ] [ vlloop][insideforbegin ] [ insideforend ] [ recalcline ] [ newcurfree ] @xmath2    algorithm performs no more than @xmath130 calculations of the convergence of @xmath111 .",
    "[ canonsound ] if @xmath33 is consistent , then @xmath131 is the minimal canonical model of @xmath33 .",
    "in this section , we will briefly discuss work in progress on how  can be applied in real world settings .",
    "it is widely acknowledged that modeling influence in multi - agent systems ( most usefully modeled as complex networks ) is highly desirable for many practical problems as varied as viral marketing , prevention of drug use , vaccination , and power plant failure .",
    "though  programs are a rich model to work with , the acquisition of rules is the principal hurdle to overcome ; this is mainly due to this richness of representation , since for each rule we must provide a set of conditions on the agents being influenced , conditions on their neighbors and their ties to their neighbors , and how capable these neighbors are of influencing them .",
    "a domain expert is likely able to provide important insights into these components , but the best way to obtain these rules is undoubtedly to leverage the presence of large amounts of data in domains like twitter ( with about 340 m messages sent per day , available through public apis ) , facebook ( over 950 m users with more complex information ; not publicly available , but data can be requested through apps ) , and blogging and photo hosting sites such as blogger and flickr ( which have millions of users as well ) .    concretely , we have begun working towards this goal by extracting several time - series , multi - attribute network data sets on which to apply @xmath0 . for instance , to study the proliferation of research on different topics , we looked at research on `` niacin '' indexed by thomson reuters web of knowledge ( http://wokinfo.com ) .",
    "this topic was chosen due to its interest to a variety of disciplines , such as medicine , biology , and chemistry ; this gives the data more variety compared with more discipline - specific topics .",
    "we extracted an author - paper bipartite network consisting of @xmath132 papers with @xmath133 authors and @xmath134 edges ( cf .",
    "figure  [ fig : papers12 ] ) ; from this data we can easily focus on various kinds of networks ( co - author , citation , etc . ) .",
    "we have also collected attribute and time - series data for this network , as well as the subjects of the papers ; the propagation of these subjects is a good starting point to test methods for the acquisition of @xmath0 rules .",
    "we are harvesting larger datasets from various online social networks .",
    "further details can be found in the full version of the paper .    * a proposed learning architecture .",
    "* we are currently developing a  learning architecture ( depicted in fig .",
    "[ fig : architecture ] ) based on the use of state - of - the - art data analysis , clustering , and influence learning techniques as building blocks for the acquisition of  rules from data sets .",
    "the key question is not just the identification of the best techniques to adopt , but how to adapt them and combine them in such a way as to produce meaningful and useful outputs .",
    "consider the diagram in fig .",
    "[ fig : architecture ] : the data first flows from raw data sources to the _ cluster identification _ component , which has the goal of identifying sets of agents behaving as groups ( for instance , teens influencing other teens of the same sex in the consumption of music , or scientists of a certain field influencing the research topics of others in a related field )  @xcite ; the main output here is a set of conditions on nodes and edges that characterize groups of nodes .",
    "once clusters are identified , the _ influence recognition _ component will make use of both the clusters and the data sources to recognize what kind of influence is present in the system  @xcite ; the main output of this component is the influence function to be used in the  rules .",
    "the _ rule generation _ component then takes the output of the cluster identification and influence recognition components , along with the raw data ( _ e.g. _ , to analyze time stamps ) and produces  rules ; the output of this component is involved in a refinement cycle with experts who can provide feedback on the rules being produced ( such as possible combinations of rules , identification of cases of overfitting , etc . ) .",
    "in this paper , we presented the @xmath0 language for modeling cascades in multi - agent systems organized in the form of complex networks .",
    "we started by establishing seven criteria in the form of desiderata for such a formalism , and proved that @xmath0 meets all of them ; to the best of our knowledge , this has not been accomplished by any previous model in the literature .",
    "we also note that @xmath0 is the first language of its kind to consider network structure in the semantics , potentially opening the door for algorithms that leverage features of network topology in more efficiently answering queries .",
    "our current work involves implementing the algorithms described in this paper , as well as the real - world applications described in section  [ sec : learn ] ; though our algorithms have polynomial time complexity , it is likely that further optimizations will be needed in practice to ensure scalability for very large data sets .    in the near future",
    ", we shall also explore various types of queries that have been studied in the literature , such as finding agents of maximum influence , identifying agents that cause a cascade to spread more quickly , and identifying agents that can be influenced in order to halt a cascade .",
    "p.s . is supported by the army research office ( project 2gdatxr042 ) .",
    "is supported under ( uk ) epsrc grant ep / j008346/1  proqaw .",
    "the opinions in this paper are those of the authors and do not necessarily reflect the opinions of the funders , the u.s .",
    "military academy , or the u.s .",
    "10    s.  aral and d.  walker . .",
    ", 337(6092):337341 , 2012 .",
    "m.  broecheler , p.  shakarian , and v.  subrahmanian .",
    "a scalable framework for modeling competitive diffusion in social networks . in _ proc .  of socialcom_. ieee , 2010 .",
    "w.  chen , c.  wang , and y.  wang .",
    "scalable influence maximization for prevalent viral marketing in large - scale social networks . in _ proc .  of kdd 10",
    "_ , pages 10291038 .",
    "acm , 2010 .",
    "a.  goyal , f.  bonchi , and l.  lakshmanan .",
    "discovering leaders from community actions . in _ proc .",
    "of cikm _ , pages 499508 .",
    "acm , 2008 .",
    "a.  goyal , f.  bonchi , and l.  lakshmanan .",
    "learning influence probabilities in social networks . in _ proc .",
    "of wsdm _ , pages 241250 .",
    "acm , 2010 .",
    "a.  goyal , f.  bonchi , and l.  lakshmanan .",
    "a data - based approach to social influence maximization .",
    ", 5(1):7384 , 2011 .",
    "m.  granovetter . .",
    ", 78(6):13601380 , 1973 .",
    "m.  granovetter .",
    "threshold models of collective behavior . , 83(6):14201443 , 1978 .",
    "a.  jain .",
    "data clustering : 50 years beyond k - means .",
    ", 31(8):651666 , 2010 .",
    "d.  kempe , j.  kleinberg , and e.  tardos . maximizing the spread of influence through a social network . in _ proc .  of kdd 03",
    "_ , pages 137146 .",
    "acm , 2003 .",
    "e.  lieberman , c.  hauert , and m.  a. nowak .",
    "evolutionary dynamics on graphs . , 433(7023):312316 , 2005 .",
    "t.  c. schelling . .",
    "w.w . norton and co. , 1978 .",
    "p.  shakarian , a.  parker , g.  i. simari , and v.  s. subrahmanian .",
    "annotated probabilstic temporal logic .",
    ", 12(2 ) , 2011 .",
    "p.  shakarian , v.  subrahmanian , and m.  l. sapino . .",
    "in _ proc .  of iclp ( tech .",
    "comm . ) _ , 2010 .",
    "v.  sood , t.  antal , and s.  redner .",
    "voter models on heterogeneous networks .",
    ", 77(4):041121 , 2008 .",
    "t.  warren  liao .",
    "clustering of time series data  a survey .",
    ", 38(11):18571874 , 2005 .",
    "let @xmath135 be a subset of @xmath5 . we can create @xmath136 as follows .",
    "we build interpretation @xmath85 . for each @xmath137 , let @xmath138 be the least of the set @xmath139 \\ >",
    "\\in i(t)(c),\\<l , [ \\ell , u ) \\ > \\in",
    "i(t)(c ) \\}$ ] and @xmath140 be the least of the set @xmath141 \\",
    "i(t)(c),\\<l , ( \\ell , u ) \\ > \\in i(t)(c ) \\}$ ] . then , for each @xmath137 let @xmath142 be the greatest element of the set @xmath143 \\ > \\in i(t)(c),\\<l , ( \\ell , u ] \\ > \\in i(t)(c ) \\}$ ] + and @xmath144 be the greatest of the set + @xmath145 . if there is any interpretation @xmath2 in @xmath5 where there is not some @xmath108 s.t .",
    "@xmath146 then add @xmath147 \\>$ ] to @xmath148 .",
    "if @xmath149 and @xmath150 then add @xmath151 \\>$ ] to @xmath148 .",
    "if @xmath149 and @xmath152 then add @xmath153 to @xmath148 .",
    "if @xmath154 and @xmath152 then add @xmath155 to @xmath148 . finally , if @xmath154 and @xmath150 then add @xmath156 \\>$ ] to @xmath148",
    "clearly , @xmath157 .    in the next part of the proof ,",
    "we show we can create @xmath158 as follows .",
    "we build interpretation @xmath85 . for",
    "each @xmath137 let @xmath138 be the greatest of the set + @xmath139 \\",
    "\\in i(t)(c),\\<l , [ \\ell , u ) \\ > \\in",
    "i(t)(c ) \\}$ ] and @xmath140 be the greatest of the set + @xmath141 \\ >",
    "\\in i(t)(c),\\<l , ( \\ell , u ) \\ > \\in i(t)(c ) \\}$ ] . then , for each @xmath137 let @xmath142 be the least element of the set @xmath143 \\ > \\in i(t)(c),\\<l , ( \\ell , u ] \\ > \\in i(t)(c ) \\}$ ] and @xmath144 be the least of the set @xmath145 . if @xmath159 or @xmath160 then add @xmath161 to @xmath148 . if @xmath154 and @xmath162 then add @xmath151 \\>$ ] to @xmath148",
    ". if @xmath154 and @xmath163 then add @xmath153 to @xmath148 . if @xmath149 and @xmath163 then add @xmath155 to @xmath148 . finally , if @xmath149 and @xmath162 then add @xmath156 \\>$ ] to @xmath148",
    "clearly , @xmath164 . + as both @xmath136 and @xmath158 exist and are clearly in @xmath5 then the statement follows .",
    "[ [ a - single - application - of - gamma - can - be - computed - in - polynomial - time ] ] a single application of @xmath111 can be computed in polynomial time ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    for interpretation @xmath2 , @xmath165 can be computed by conducting @xmath166 satisfaction checks where @xmath118 is the maximum in - degree of a node in the network .",
    "( this combined with the assumption that the influence function is computed in constant time results in polynomial time computation for a single application of @xmath111 . )",
    "we note that a given rule will require the most satisfaction checks , as a rule will potentially affect a network atom of a certain label for each vertex - time point pair . by the definition of @xmath167",
    ", a given rule clearly causes no more than @xmath168 satisfaction checks .",
    "as the number of rules is no more than @xmath169 , the statement follows .        for a given vertex @xmath119",
    ", we will use the notation @xmath120 to denote the number of incoming neighbors ( of any edge type ) and @xmath170 .",
    "first we show that for a given @xmath121 and @xmath34 , a given rule @xmath122 can tighten the bound on a network atom formed with @xmath123 no more than @xmath124 times .",
    "this is because a given rule adjusts the bound on a network atom based on the number of eligible and qualifying neighbors , which are bounded by @xmath171 respectively . at each application of @xmath111",
    ", at least one network atom must tighten .",
    "hence , as there are only @xmath172@xmath125 tightenings possible , this is also the bound on the number of applications of @xmath111 .",
    "suppose , bwoc , that @xmath173 . then , there exists some @xmath34 , @xmath97 and @xmath20 s.t .",
    "@xmath174 , @xmath175 , and @xmath176 s.t .",
    "@xmath177 and @xmath95 .",
    "there are four things that affect @xmath178 : facts , rules , integrity constraints and @xmath179 . clearly , we need not consider the effect that either facts or @xmath179 have on @xmath178 , as @xmath2 satisfies all facts and @xmath128",
    ". we also note that a given integrity constraint imposed by definition  [ ibound ] can tighten @xmath178 no more than the associated bound in any model .",
    "hence , there must be some rule @xmath180 that causes @xmath178 to become less than @xmath108 .",
    "as @xmath181 , we know that @xmath182 . as a result , we have @xmath183 and @xmath184 .",
    "further , as @xmath185 and no rule can modify a non - fluent atom , we have                claim : if program @xmath33 is consistent then @xmath126 is a model of @xmath33 .",
    "+ suppose , bwoc , that there is a fact in @xmath33 that @xmath126 does not satisfy .",
    "however , by the definition of @xmath111 and the definition of a fact , @xmath126 must satisfy all facts as the bound on the weight associated with each fact is included in the intersection .",
    "further , we can also see by the definition of @xmath111 that @xmath126 strictly satisfies all non - fluent facts in @xmath33 .",
    "we also note that the final application of the @xmath111 operator ensures that all integrity constraints are satisfied by @xmath126 . now ,",
    "suppose , bwoc , that there is a rule in @xmath33 that @xmath126 does not satisfy .",
    "however , with each application of @xmath111 , for each rule , we include the bound on the weight returned by the @xmath193 function for each time step in the target time step associated with that rule . as @xmath111 is applied to convergence , and new bounds are intersected with each application , then we know that all time points in any associated target time set are considered in the intersection .",
    "+ proof of theorem : the above claim tells us that @xmath194 . now consider interpretation @xmath2 s.t .",
    "as @xmath195 , multiple applications of lemma  [ boundlemma ] tell us that @xmath196 .",
    "hence , the statement follows .",
    "claim 1 : if @xmath33 is consistent , then @xmath131 is a canonical model of @xmath33 .",
    "+ clearly , @xmath197 satisfies all facts and integrity constraints in @xmath33 .",
    "hence , we shall consider programs that only consist of rules in this proof .",
    "we say @xmath2 @xmath123-canonically satisfies @xmath33 iff @xmath2 canonically satisfies @xmath198 .",
    "clearly , @xmath2 canonically satisfies @xmath33 if for all @xmath199 , @xmath33 @xmath123-canonically satisfies by @xmath2 .",
    "we say that @xmath2 is an @xmath200-canonically consistent interpretation if for @xmath20 , for the first @xmath201 , @xmath202 where @xmath203 .",
    "consider some @xmath204 and @xmath20 .",
    "clearly , @xmath2 is an @xmath205-model for @xmath33 .",
    "let us assume , for some value @xmath206 , that @xmath2 is an @xmath207 model for @xmath33 .",
    "let time point @xmath208 be the @xmath206-th element of @xmath209 .",
    "consider the time step before time @xmath208 is considered in the for - loop at line  [ bigfor ] of , which causes the condition at line  [ condline ] to be true . by line  [ newcurfree ] , @xmath210[l]$ ] .",
    "this means that @xmath208 is a member of both . hence ,",
    "when @xmath208 is considered at line  [ bigfor ] , the condition at line  [ condline ] is true , causing @xmath211 and as the element @xmath53 is not changed here , we have shown the @xmath2 is an @xmath200-model for @xmath33 . by the for - loop at line  [ vlloop ] , for all @xmath199 and @xmath212",
    ", @xmath2 is an @xmath200-model for @xmath33 .",
    "hence , at the for - loop at line  [ bigfor ] , we can be assured that for @xmath199 and @xmath212 that @xmath2 @xmath213 satisfies @xmath33  which means that @xmath2 canonically satisfies @xmath33 + claim 2 : if @xmath2 is a canonical model for @xmath33 , + @xmath214 is an interpretation that also strictly satisfies all non - fluent facts in @xmath33 , and @xmath215 is @xmath216 after being manipulated in lines  [ insideforbegin]-[insideforend ] of , then @xmath217 .",
    "we note that by the definition of satisfaction of a non - fluent fact , and the fact that both @xmath216 and @xmath2 must strictly satisfy all non - fluent facts in @xmath33 , we know that for all @xmath20 and @xmath34 that : @xmath218 let us assume that lines  [ insideforbegin]-[insideforend ] of the algorithm are changing @xmath216 when the outer loop is considering time @xmath208 and that the condition at line  [ condline ] is true . clearly , @xmath219 as a result , for any @xmath220 pair considered at this point by the algorithm , if @xmath221 and @xmath222 then we have @xmath223 . by the algorithm ,",
    "if we have @xmath224 and @xmath225 we have that @xmath226 . as + @xmath227 , we know that @xmath228 . as a result , we have @xmath217 , completing the claim .",
    "proof of theorem : as initially @xmath229 and @xmath196 by theorem  [ minmodelgamma ] , we note that the algorithm changes + @xmath216 either by applying @xmath111 or manipulating it in lines  [ insideforbegin]-[insideforend ] , which tells us ( by claim 2 ) that for all models @xmath2 of @xmath33 that + @xmath230 . since by claim 1 we know that + @xmath231 , the statement of the theorem follows .      one way in which  can be used is looking at proliferation of research on different topics .",
    "we look at research conducted on niacin , an organic compound commonly used for increasing levels of high density lipoproteins ( hdl ) . using thomson reuters web of knowledge ( http://wokinfo.com )",
    "we were able to extract information on @xmath232 articles about niacin .",
    "this information was then processed using the science of science ( sci@xmath233 ) tool ( http://sci2.cns.iu.edu ) to extract numerous different networks such as author by paper networks , citation networks , and paper by subject networks .",
    "each paper has attributes about when it was published , what journal it was published in , and what subjects the paper was about . during the first time period there is a total of @xmath234 papers with @xmath235 different authors and @xmath236 connections based on an author being cited as an author of a given paper . during the second time period , there is a total of @xmath132 papers with @xmath133 different authors and @xmath237 connections ."
  ],
  "abstract_text": [
    "<S> the modeling of cascade processes in multi - agent systems in the form of complex networks has in recent years become an important topic of study due to its many applications : the adoption of commercial products , spread of disease , the diffusion of an idea , etc . in this paper , we begin by identifying a desiderata of seven properties that a framework for modeling such processes should satisfy : the ability to represent attributes of both nodes and edges , an explicit representation of time , the ability to represent non - markovian temporal relationships , representation of uncertain information , the ability to represent competing cascades , allowance of non - monotonic diffusion , and computational tractability . </S>",
    "<S> we then present the @xmath0 language , a formalism based on logic programming that satisfies all these desiderata , and focus on algorithms for finding minimal models ( from which the outcome of cascades can be obtained ) as well as how this formalism can be applied in real world scenarios . </S>",
    "<S> we are not aware of any other formalism in the literature that meets all of the above requirements .    </S>",
    "<S> [ representation languages ] </S>"
  ]
}
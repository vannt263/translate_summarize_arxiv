{
  "article_text": [
    "in @xcite , p.  lecomte and i have defined a _ numeration system _ as being a triple @xmath4 where @xmath0 is an infinite regular language over a totally ordered alphabet @xmath1 .",
    "the lexicographic ordering of @xmath0 gives a one - to - one correspondence @xmath5 between the set of the natural numbers @xmath6 and the language @xmath0 .",
    "for a given subset @xmath7 of @xmath6 , a question arise naturally .",
    "is it possible to find a numeration system @xmath8 such that @xmath9 is recognizable by finite automata ?",
    "( in this case , @xmath7 is said to be _",
    "@xmath8-recognizable_. ) for example , the set @xmath10 is @xmath8-recognizable for some @xmath8 and the arithmetic progressions @xmath11 are @xmath8-recognizable for any @xmath8 .",
    "an interesting question is thus the following : is there a system @xmath8 such that the set of primes is @xmath8-recognizable ?    to answer this question i show that a subset of @xmath6 is @xmath8-recognizable if and only if its characteristic sequence can be generated by an ` automatic ' method .",
    "the term automatic refers , as we shall see further , to a generalization of the @xmath3-automatic sequences for numeration systems on a regular language .",
    "the @xmath3-automatic sequences are well - known and have been extensively studied since the 70 s @xcite .",
    "the construction of this kind of sequences is based on the representation of the integers in the base @xmath3 . for a given integer @xmath12 ,",
    "one represents this number in base @xmath3 using the greedy algorithm and obtains a word @xmath13_{k}$ ] over the alphabet @xmath14 .",
    "next one gives @xmath13_{k}$ ] to a deterministic finite automaton with output and obtains the @xmath15 term of a sequence which is said to be a @xmath3-automatic sequence .",
    "these sequences have been already generalized in different ways @xcite . in particular ,",
    "a method used by j. shallit to generalize the @xmath3-automatic sequences is to consider some kind of linear numeration system instead of the standard numeration system with integer base @xmath3 @xcite .",
    "two properties of the systems encountered in @xcite are precisely that the set of all the representations is regular and that the lexicographic ordering is respected .    here , instead of giving @xmath13_{k}$ ] to a deterministic finite automaton with output , we feed it with @xmath16 to obtain an output which is the @xmath15 term of an _",
    "@xmath8-automatic sequence _ for a numeration system @xmath8 .",
    "having thus introduced the concept of @xmath8-automatic sequences , we can follow two paths .",
    "learn their intrinsic properties but also use them as a tool to check if a subset of @xmath6 is @xmath8-recognizable .",
    "our article has the following articulation . in the first section , we recall some definitions and we introduce a teaching example which could be very instructive for the reader not familiar with automatic sequences . in the second section ,",
    "we adapt the classical results concerning the fiber and the kernel of an automatic sequence .",
    "initially , a. cobham showed the equivalence between the @xmath3-automatic sequences and the sequences obtained by iterating a uniform morphism ( also called uniform tag system @xcite ) . in the third section , we show that an @xmath8-automatic sequence is always generated by a substitution ( i.e. , an iterated non - uniform morphism followed by one application of another morphism ) . from this , we deduce that the number of distinct factors of length @xmath17 in an @xmath8-automatic sequence is in @xmath18 .",
    "we also show how to construct @xmath8-automatic sequences with at least the same complexity that infinite words obtained by iterated morphisms .    in the last section",
    ", we will be able to show that for any numeration system @xmath8 , the set of primes is never @xmath8-recognizable .",
    "we use the fact that to be @xmath8-recognizable , the characteristic sequence of the set must be generated by a substitution .",
    "hence we use some results of c.  mauduit about the density of the infinite words obtained by substitution @xcite .",
    "in this paper , capital greek letters represent finite alphabet .",
    "we denote by @xmath19 the set of the words over @xmath20 ( @xmath21 is the empty word ) and by @xmath22 the set of the infinite words over @xmath20 .",
    "if @xmath23 is a set then @xmath24 denotes the cardinality of @xmath23 and if @xmath25 is a string then @xmath26 denotes the length of @xmath25 . for @xmath27 , @xmath28 is the @xmath29 letter of @xmath25 .",
    "the same notation holds for infinite words , in this case @xmath30 .",
    "first , recall some definitions about the numeration systems we are dealing with . for more about these systems see @xcite .",
    "a _ numeration system _ @xmath8 is a triple @xmath31 where @xmath0 is an infinite regular language over the totally ordered alphabet @xmath1 .    for each @xmath32 , @xmath16 denotes the @xmath33 word of @xmath0 with respect to the lexicographic ordering and is called the _ @xmath8-representation _ of @xmath12 .",
    "remark that the map @xmath34 is an increasing bijection . for @xmath35 , we set @xmath36 .",
    "we call @xmath37 the _ numerical value _ of @xmath25 .",
    "examples of such systems are the numeration systems defined by a recurrence relation whose characteristic polynomial is the minimum polynomial of a pisot number @xcite .",
    "( indeed , with this hypothesis , the set of representations of the integers is a regular language . )",
    "the standard numeration systems with integer base and also the fibonacci system belong to this class .",
    "let @xmath8 be a numeration system .",
    "a subset @xmath7 of @xmath6 is _",
    "@xmath8-recognizable _ if @xmath9 is recognizable by finite automata .",
    "let us introduce the concept of @xmath8-automatic sequence which naturally generalizes the @xmath3-automatic sequences based on the representation of the integers in base @xmath3 . for more about @xmath3-automatic sequences",
    "see for instance @xcite .    a _ deterministic finite automaton with output _",
    "( dfao ) @xmath38 is a @xmath39-uple @xmath40 where @xmath23 is the finite set of the states , @xmath41 is the start state , @xmath20 is the input alphabet , @xmath42 is the transition function , @xmath43 is the output alphabet and @xmath44 is the output function .",
    "let @xmath45 be a numeration system .",
    "a sequence @xmath46 is _",
    "@xmath8-automatic _ if there exists a dfao @xmath47 such that for all @xmath48 , @xmath49 if the context is clear , we write @xmath50 in place of @xmath51 .",
    "a subset @xmath52 is @xmath8-recognizable if and only if its characteristic sequence @xmath53 is @xmath8-automatic .    in the following",
    "we will often encounter two more ` classical ' ways of obtaining infinite sequences .",
    "let @xmath54 be a morphism of monoid such that for some @xmath55 , @xmath56 .",
    "the word @xmath57 is a fixed point of @xmath58 and we say that @xmath59 is _ generated by an iterated morphism_.    a morphism is _ uniform _ if @xmath60 , @xmath61 .    a _ substitution _",
    "@xmath62 is a triple @xmath63 such that @xmath54 and @xmath64 are morphisms of monoids .",
    "moreover @xmath65 , @xmath66 and for any @xmath67 , @xmath68 or @xmath69 ( @xmath70 is said to be a _ weak coding _ ) .",
    "we said that the word @xmath71 over @xmath43 is _ generated by the substitution _",
    "@xmath62 .",
    "if @xmath68 for some @xmath72 then @xmath70 is said to be _ erasing _ otherwise @xmath70 is said to be _ non - erasing_.      we consider the numeration system @xmath73 , the alphabets @xmath74 , @xmath75 and the following dfao        as usual the start state is indicated by an unlabeled arrow .",
    "the first words of @xmath76 are @xmath77 and thus feeding the automaton with these words we obtain the first terms of the sequence @xmath46 , @xmath78    the sequence @xmath79 is not ultimately periodic .",
    "one can observe that the distance between two occurrences of the block ` @xmath80 ' is not bounded .",
    "indeed , @xmath81 thus a block ` @xmath80 ' comes from two consecutive words @xmath82 and @xmath83 , @xmath84 and the number of words of length @xmath12 in @xmath76 is @xmath85 , @xmath48 .",
    "the sequence @xmath79 is not generated by an iterated morphism @xmath58 .",
    "first observe that @xmath86 suppose that there exists a morphism @xmath58 such that @xmath87 .",
    "\\1 ) if @xmath88 then the block ` @xmath89 ' must appear at least twice in @xmath79 since ` @xmath90 ' appears twice in @xmath79 .",
    "if the first ` @xmath90 ' of the block is obtained from a word @xmath91 with @xmath84 then the second ` @xmath90 ' is obtained from @xmath92 which leads to a contradiction in view of ( [ eq1 ] ) .",
    "if the first ` @xmath90 ' is obtained from @xmath93 with @xmath94 then the second ` @xmath90 ' come from @xmath95 and we have @xmath96 .",
    "the ` @xmath97 ' is obtained from @xmath98 which also leads to a contradiction .",
    "\\2 ) if @xmath99 then in view of the first terms of @xmath79 , @xmath100 .",
    "we show that ` @xmath101 ' appears only once in @xmath79 .",
    "suppose that we can find another block of this kind .",
    "thus the last two ` @xmath90 ' come from words @xmath82 and @xmath83 with @xmath102 . since we consider all the words of @xmath103 lexicographically ordered , the first ` @xmath90 ' of the block come from @xmath104 which is in contradiction with ( [ eq1 ] ) .",
    "\\3 ) if @xmath105 then @xmath106 and @xmath107 . the block ` @xmath108 ' appears at least twice in @xmath109 but we know that ` @xmath101 ' appears only once .",
    "we shall see further that @xmath79 is generated by a substitution .",
    "some classical results about @xmath3-automatic sequences can be easily restated @xcite .",
    "let @xmath110 and @xmath45 , the _ @xmath8-fiber",
    "_ @xmath111 of a sequence @xmath112 is defined as follows @xmath113    let @xmath79 be an infinite sequence over @xmath43 and @xmath45 .",
    "the sequence @xmath79 is @xmath8-automatic if and only if for all @xmath114 , @xmath111 is a regular subset of @xmath0 .",
    "_ if @xmath79 is @xmath8-automatic then we have a dfao @xmath47 which is used to generate @xmath79 .",
    "let @xmath115 be the language recognized by the dfa @xmath116 where the set of final states @xmath117 only contains the states @xmath3 such that @xmath118 .",
    "therefore @xmath111 is regular since it is the intersection of the two regular sets @xmath115 and @xmath0 .",
    "the condition is sufficient .",
    "let @xmath119 . remark that if @xmath120 , @xmath121 and @xmath122 . for all @xmath123",
    ", @xmath124 is accepted by a dfa @xmath125 . from these automata",
    "we construct a dfao @xmath47 to generate @xmath79 using the numeration system @xmath8 .",
    "the set @xmath23 is @xmath126 , the initial state is @xmath127 .",
    "for all states @xmath128 and for all @xmath55 , @xmath129 .",
    "if there is a unique @xmath130 such that @xmath131 then @xmath132 otherwise the state can not be reached by a word of @xmath0 and the output is not important .",
    "the sequence @xmath79 is obtained from @xmath8 and the dfao @xmath38 thus @xmath79 is @xmath8-automatic .",
    "@xmath133    the notion of @xmath3-kernel of a @xmath3-automatic sequence can be transposed as follows .",
    "let @xmath45 and @xmath79 be an infinite sequence .",
    "for each @xmath134 , we set @xmath135 one can enumerate @xmath136 lexicographically with respect to @xmath2 , @xmath137 .",
    "thus for each @xmath134 , one can construct the subsequence @xmath138 ( remark that the subsequence can be finite or even empty ) .",
    "let @xmath4 .",
    "a sequence @xmath46 is @xmath8-automatic if and only if @xmath139 is finite .",
    "_ if @xmath79 is @xmath8-automatic , we have a dfao @xmath47 used to generate @xmath79 and we define the equivalence relation @xmath140 over @xmath19 by @xmath141 if and only if @xmath142 .",
    "in the same way , the minimal automaton of @xmath0 provides an equivalence relation @xmath143 .",
    "the two relations have a finite index thus the relation @xmath144 given by @xmath145 if and only if @xmath141 and @xmath146 has also a finite index .",
    "remark that each class of @xmath144 gives one of the sequences @xmath147 .",
    "indeed , @xmath148 implies that @xmath149 thus @xmath150 and @xmath151 with the same @xmath152 .",
    "the condition is sufficient .",
    "we show how to construct a dfao .",
    "the states are the subsequences @xmath153 .",
    "the initial state is @xmath154 ( i.e. , the subsequence obtained from the empty word )",
    ". the transition function @xmath155 is given by @xmath156 and the output function @xmath157 is given by @xmath158 .",
    "the complexity function @xmath159 of an infinite sequence @xmath79 maps @xmath160 to the number @xmath161 of distinct factors of length @xmath12 which occur at least once in @xmath79 . in this section",
    ", we will show that the complexity of an @xmath8-automatic sequence is in @xmath162 as a consequence that every @xmath8-automatic sequence is generated by a substitution .",
    "recall that an infinite word @xmath25 generated by iterated morphism has a complexity such that @xmath163 where @xmath164 is one of the following functions @xmath165 , @xmath12 , @xmath166 , @xmath167 or @xmath168 @xcite . for a survey on the complexity function ,",
    "see for example @xcite .",
    "the next remark shows that an @xmath8-automatic sequence can reach at least the same complexity as a word generated by morphism .",
    "[ remcomplex ]    for every infinite word @xmath25 generated by an iterated morphism @xmath58 over an alphabet @xmath43 we can construct an @xmath8-automatic sequence @xmath79 such that @xmath169 @xmath170 .    we show how to proceed on the following example , @xmath171 it is well - known that @xmath172 is such that @xmath173 is of complexity @xmath174 @xcite . to the morphism @xmath58",
    ", we associate a finite automaton @xmath38 ( if the morphism is not uniform then @xmath38 is not deterministic ) .",
    "the set of states is @xmath43 , all the states are final and the transition function @xmath155 is obtained by reading the productions of @xmath58 from left to right . for this purpose , we introduce a new ordered alphabet @xmath20 such that @xmath175 . here , @xmath90 gives the initial state ( for we consider the word @xmath176 ) and @xmath165 the other state .",
    "thus with @xmath177 , we have @xmath178_1 = 0 $ ] , @xmath179_2=   1 $ ] , @xmath180 and @xmath181 is then        as is customary , the final states are denoted by double circles .",
    "the language accepted by @xmath181 is @xmath182 .",
    "the numeration system @xmath8 is thus @xmath183 .",
    "this kind of construction can also be found in @xcite .",
    "now from @xmath38 we simply construct a dfao @xmath184        the way we find the output can be easily understood .",
    "the third state can have any output for this state is never reached with a word belonging to @xmath0 .",
    "one remarks that the @xmath8-automatic sequence obtained with @xmath184 and @xmath8 is @xmath185 and thus every factor of @xmath186 belongs to @xmath79 .",
    "we now show that every @xmath8-automatic sequence is generated by a substitution .",
    "[ setat ] let @xmath187 , @xmath188 be a dfa and @xmath189 .",
    "the morphism @xmath190 defined by @xmath191 produces the sequence @xmath59 of the states reached by the words of @xmath19 i.e. , @xmath192 , @xmath193 where @xmath28 is the @xmath29 element of @xmath194 .",
    "_ one can check easily by constructing @xmath195 , @xmath196 , @xmath197 ( which are prefixes of @xmath59 ) that @xmath59 satisfies the property . @xmath133",
    "[ sub ] every @xmath8-automatic sequence is generated by a substitution .",
    "_ let @xmath4 , @xmath198 be a dfa accepting @xmath0 and @xmath79 be an @xmath8-automatic sequence obtained with the dfao @xmath199 .",
    "from these two automata , we construct the product automaton @xmath200 where @xmath201 .",
    "we do not give explicitly the final states of @xmath38 .",
    "by lemma [ setat ] , we associate to this automaton a morphism @xmath202 .",
    "to conclude the proof , we construct the erasing morphism @xmath203 defined by @xmath204 indeed , @xmath205 is the sequence of the states reached by the words of @xmath19 in @xmath38 but we are only interested in the words belonging to @xmath0 and in the corresponding output of @xmath206 .",
    "thus @xmath79 is generated by @xmath207 .",
    "@xmath133    dealing with erasing morphisms whenever one wants to determine the complexity function of a sequence is painful .",
    "so the next lemma permits to get rid of erasing morphisms .",
    "[ efface ] @xcite if @xmath208 and @xmath209 are arbitrary morphisms with @xmath210 an infinite word , then there exists a non - erasing morphism @xmath3 and a coding @xmath70 ( i.e. , a letter - to - letter morphism @xmath70 ) such that @xmath211 . @xmath133    the complexity of an automatic sequence is in @xmath162 .",
    "moreover , there exists an automatic sequence @xmath212 and a positive constant @xmath213 such that @xmath214 , @xmath215 .",
    "_ let @xmath79 be an @xmath8-automatic sequence .",
    "by proposition [ sub ] , @xmath79 is generated by a substitution @xmath216 and by lemma [ efface ] we can suppose that @xmath70 is non - erasing .",
    "the word @xmath217 is generated by an iterated morphism and thus @xmath218 . to conclude , since @xmath219 , recall that if @xmath212 , @xmath25 are two infinite words and if @xmath70 is a non - erasing morphism such that @xmath220 then there exist positive constants @xmath221 , @xmath222 such that @xmath223 @xcite .",
    "\\2 ) we show that there exist a language @xmath0 over an ordered alphabet and a dfao such that the corresponding automatic sequence @xmath212 has a complexity function @xmath224 .",
    "the morphism @xmath225 generates the word @xmath172 .",
    "since @xmath97 is a bounded letter ( i.e. , @xmath226 is bounded ) and @xmath227 is a factor of @xmath25 for an arbitrary @xmath12 , there exists a positive constant @xmath213 such that @xmath228 ( see @xcite ) . using the same technique as in remark [ remcomplex ]",
    ", we construct an @xmath8-automatic sequence @xmath212 such that @xmath229 .",
    "one find easily that the regular language used in the numeration system @xmath8 is @xmath230 .",
    "@xmath133    to conclude this section , we refine in a very simple way proposition [ sub ] to give a characterization of the @xmath8-automatic sequences .",
    "let @xmath231 and @xmath232 be two substitutions such that @xmath54 , @xmath64,@xmath233 and @xmath234 .",
    "a morphism of substitutions @xmath235 is a surjective morphism @xmath236 such that    1 .",
    "@xmath237 , @xmath238 , @xmath239 2 .",
    "@xmath240 , @xmath241 3 .",
    "@xmath242 , @xmath241 .    for a regular language @xmath0 on the totally ordered alphabet @xmath1 and for a dfao @xmath47",
    ", one can construct the _ canonical substitution @xmath243 _ by proceeding in the same way as in proposition [ sub ] with @xmath244 equals to the minimal automaton of @xmath0 and the dfao @xmath206 equals to a reduced and accessible copy of @xmath38 .    to reduce @xmath38",
    ", one have to merge the states @xmath245 , @xmath246 such that for all @xmath247 , @xmath248 .",
    "a substitution @xmath62 is an _",
    "@xmath249-substitution _ if there exists a morphism @xmath250 .",
    "this kind of construction has already been introduced in @xcite for linear numeration systems based on a pisot number .",
    "the next theorem is obvious and we state it without proof .",
    "let @xmath4 .",
    "the sequence @xmath251 is @xmath8-automatic if and only if @xmath79 is generated by a @xmath249-substitution for some dfao @xmath38 . @xmath133",
    "proposition [ sub ] gives a necessary condition for a set @xmath7 of integers to be @xmath8-recognizable .",
    "the characteristic sequence @xmath252 has to be generated by a substitution .",
    "thus this proposition can be used as an interesting tool to show that a subset of @xmath6 is not @xmath8-recognizable for any numeration system @xmath8 .    in the following @xmath253",
    "is the set of primes and @xmath254 is its characteristic sequence .",
    "we show that @xmath253 is never @xmath8-recognizable but first we construct by hand a subset of @xmath6 which can not be @xmath8-recognizable for its characteristic sequence is too complex .    for @xmath255 , consider the @xmath256 words belonging to @xmath257 which contains exactly three ` @xmath165 ' and concatenate these words lexicographically ordered to obtain the word @xmath258 . to conclude consider the infinite word @xmath259 by construction , it is obvious that for all positive constants @xmath260 , there exists @xmath261 such that @xmath262 .",
    "thus @xmath25 can not be generated by a substitution and the corresponding subset @xmath263 such that @xmath264 , @xmath265 is never @xmath8-recognizable .",
    "for any numeration system @xmath8 , @xmath253 is not @xmath8-recognizable .",
    "_ in @xcite , c.  mauduit shows using some density arguments that @xmath266 is not generated by a substitution @xmath216 where @xmath70 sends all the letters on @xmath90 except one . a slight adaptation of the proof leads to the conclusion for any letter - to - letter morphism @xmath70",
    "the author would like to warmly thank j .-",
    "allouche for pointing out very useful references and for some fruitful comments and also p.  lecomte for his support and for fruitful conversations ."
  ],
  "abstract_text": [
    "<S> let @xmath0 be an infinite regular language on a totally ordered alphabet @xmath1 . </S>",
    "<S> feeding a finite deterministic automaton ( with output ) with the words of @xmath0 enumerated lexicographically with respect to @xmath2 leads to an infinite sequence over the output alphabet of the automaton . </S>",
    "<S> this process generalizes the concept of @xmath3-automatic sequence for abstract numeration systems on a regular language ( instead of systems in base @xmath3 ) . here </S>",
    "<S> , i study the first properties of these sequences and their relations with numeration systems . </S>"
  ]
}
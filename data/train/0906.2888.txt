{
  "article_text": [
    "chebyshev series are series of the form @xmath0 where @xmath1 denotes the @xmath2th chebyshev polynomial of the first kind .",
    "these polynomials can be defined by @xmath3 so that these series behave like fourier series .",
    "thus in particular , this series converges pointwise to  @xmath4 on  @xmath5 $ ] if @xmath4 is continuous there , while the convergence is uniform if  @xmath4 satisfies a dini - lipschitz condition or is of bounded variation ( and _ a fortiori _ if it is differentiable ) , see , e.g.  @xcite .",
    "then truncations of the series provide polynomials with good approximation properties on the interval @xmath5 $ ] , which makes these series an interesting data structure for real functions  @xcite .",
    "orthogonality of the  @xmath1 leads to the following integral representation of the coefficients : @xmath6 we say that  @xmath4 _ admits a chebyshev expansion _",
    "@xmath7 when these integrals converge , the symbol  @xmath8 accounting for the factor  @xmath9 in front of  @xmath10 in  .    in the frequent case",
    "when  @xmath4 is a solution to a linear differential equation , clenshaw  @xcite has given a numerical scheme to compute the coefficients  @xmath11 without computing all these integrals .",
    "in that case , the coefficients  @xmath11 obey a linear recurrence equation . a method for the computation of this recurrence",
    "has been showed by several authors , first for small orders  @xcite , then in more generality by paszkowski  @xcite and in the context of ( early ) symbolic computation by geddes  @xcite .",
    "we call this method `` paszkowski s algorithm '' .",
    "the use of this recurrence to compute the coefficients numerically is discussed in  @xcite .",
    "paszkowski s method has been further improved by lewanowicz  @xcite who gave an algorithm computing a smaller order recurrence in some cases .",
    "however , lewanowicz s algorithm is not much discussed in the literature since it looks complicated ( see the original article and the comment in @xcite ) .",
    "more recently , other methods have been given by rebillard  @xcite and rebillard and zakrajek  @xcite .",
    "in this work , we give a simple unified presentation of most of these algorithms , and design a faster one for large orders . postponing the proofs and rigorous definitions ,",
    "the basic idea can be presented by analogy with the computation of a recurrence for coefficients of taylor series .",
    "the monomial basis  @xmath12 satisfies @xmath13 the analogous relations on the chebyshev polynomials are easily derived from   and trigonometry : @xmath14 given a series @xmath15 , leads to expressions for the coefficient of @xmath16 in  @xmath17 and @xmath18 : multiplication by  @xmath19 maps to a negative shift on the indices ; differentiation maps to a positive shift of the index followed by multiplication by  @xmath20 .",
    "algebraically , we thus get an algebra morphism mapping  @xmath19 to  @xmath21 and @xmath22 to  @xmath23 , with @xmath24 , @xmath25 . here",
    ", @xmath26 denotes the shift operator : @xmath27 , that does not commute with multiplication by  @xmath2 .",
    "now , if @xmath4 is solution of a linear differential equation @xmath28 we deduce a recurrence operator @xmath29 for its taylor coefficients .",
    "the simplest example is the exponential , for which @xmath30 translates into  @xmath31 ( @xmath32 denotes identity ) , which gives the recurrence @xmath33 satisfied by  @xmath34 .",
    "the procedure for a series  @xmath35 starts similarly : multiplication by  @xmath19 maps to @xmath36 the difference comes from the factor  @xmath37 in  .",
    "the operation of differentiation followed by multiplication by  @xmath37 is readily seen to map to  @xmath38 , but no simple linear operation for the chebyshev coefficients of @xmath18 exists .",
    "the idea at this stage is to divide by @xmath39 afterwards by introducing a _ formal inverse _ of  @xmath40 .",
    "thus we write  @xmath41 .",
    "this can be further simplified since @xmath42 , so that @xmath43 we call such an expression a _ fraction of recurrence operators_.    [ example exp ] for the exponential , we now get @xmath44 the last term is an analogue of reduction to the same denominator .",
    "the final factor will be called the numerator of the fraction",
    ". it corresponds to the recurrence @xmath45 it turns out that in this example , the chebyshev coefficients are known : @xmath46 , where  @xmath47 is the modified bessel function of the first kind , and they do satisfy  .",
    "this example generalizes .",
    "we show here that all the algorithms mentioned above can be interpreted as first rewriting the input linear differential equation in one way or another , then applying the morphism above and finally returning the numerator of the result . in the case of lewanowicz s algorithm",
    "the fraction is normalized ( its numerator and denominator are relatively prime ) , which is why its output may have smaller order .    in section  [ sec : ore ] , we give the formal setting for fractions of recurrence operators , together with the basic algorithms .",
    "this is then applied to the specific case of chebyshev series in section  [ sec : chebyshev ]",
    ". then we give a compact presentation of paszkowski s and rebillard s algorithms , provide a complexity analysis and design a faster algorithm in section  [ sec : algo ] .",
    "we briefly comment on the different approach taken by rebillard and zakrajek in   [ rebillard - zakrajsek ] .",
    "we conclude in section  [ sec : examples ] with a few examples .",
    "we use ore s framework of non - commutative polynomials  @xcite , that we now recall .",
    "the rings of linear differential operators and of linear recurrence operators are special cases of rings of ore polynomials .",
    "they possess the commutation rules @xmath48 more generally , a ring of polynomials in an indeterminate  @xmath49 with coefficients in a field  @xmath50 is an _ ore polynomial ring _ when its product is defined by associativity from @xmath51 where for all @xmath52 and @xmath53 in  @xmath50 , @xmath54 the ring is denoted  @xmath55 .",
    "linear differential operators are obtained with  @xmath56 and  @xmath57 ; linear recurrences operators with  @xmath58 and  @xmath59 .",
    "the main property of these rings is that the degree ( with respect to  @xmath49 ) of a product is the sum of the degrees of its factors .",
    "( in particular , there are no zero - divisors ) .",
    "from there , it is not difficult to write an algorithm for euclidean division on the right .",
    "once right euclidean division is available , the euclidean algorithm and its extended version follow and can be used to compute : greatest common right divisors , denoted gcrd ; least common left multiples , denoted lclm ; the corresponding cofactors for the bzout identity and for the lclm  @xcite .",
    "when  @xmath60 is invertible , we also get euclidean division on the left , and from there greatest common left divisors ( gcld ) , least common right multiples ( lcrm ) and the corresponding cofactors by the euclidean algorithm .",
    "if moreover @xmath59 , as is the case for recurrence operators , it is also possible to define laurent polynomials with  @xmath61 and @xmath62 .",
    "these are denoted  @xmath63 .",
    "the rings we use in this work are the ring of linear differential operators denoted @xmath64 and the ring of linear recurrence operators @xmath65 ( with a different meaning for both  @xmath26 ) .",
    "apart from their non - commutativity , ore polynomials generally behave like ordinary polynomials .",
    "a notable exception is divisibility .",
    "the recurrence operator @xmath66 is relatively prime with  @xmath67 , but @xmath68 is a right divisor of @xmath69 .    still , the following property holds ( and similarly for gcrd s when they exist ) : @xmath70 indeed , @xmath71 is a left divisor of  @xmath72 and the remaining factor has to be a left divisor of both  @xmath73 and  @xmath74 .",
    "the converse divisibility is clear .    in order to distinguish the action of an operator from the product in these rings of operators , which corresponds to composition of actions",
    ", we use the notation  @xmath75 for the former .",
    "thus  @xmath76 , @xmath77 .      ore s construction of fractions parallels the commutative case . given two non - zero polynomials  @xmath78 and  @xmath79 , by definition of the lclm ,",
    "there exist two polynomials  @xmath80 and  @xmath81 such that @xmath82 with this notation , the pairs  @xmath83 and  @xmath84 are called equivalent when @xmath85 .",
    "this can be verified to be an equivalence relation and the class is called a fraction and denoted  @xmath86 ( which is equal to @xmath87 ) .",
    "this construction makes the set of fractions a non - commutative field .",
    "reduction to the same denominator for sums is given by @xmath88 as can be checked by left multiplication with  @xmath89 .",
    "to compute the reduction of a product of two fractions @xmath90 , the starting point is the lclm of  @xmath79 and the numerator  @xmath91 .",
    "there exist two polynomials  @xmath92 and  @xmath93 such that @xmath94 then , @xmath95 and @xmath96 , so that finally @xmath97      having in mind our use of fractions for recurrence operators , we now concentrate on the case when  @xmath60 is invertible , so that gcld s are available .",
    "the results here are probably known , but we did not find them in the literature .",
    "a fraction  @xmath98 is called _ irreducible _ when @xmath99 .",
    "assume @xmath60 is invertible and let  @xmath100 be a fraction",
    ". then there exists an irreducible fraction equal to @xmath100",
    ". moreover , its numerator and denominator are unique up to a factor in  @xmath50 .",
    "existence follows from dividing out numerator and denominator by  @xmath101 .",
    "assume @xmath102 and @xmath103 .",
    "by definition of equivalence , @xmath85 , where @xmath104 .",
    "moreover this lclm relation implies @xmath105 .",
    "now , @xmath106 where we use  .",
    "but since @xmath105 , necessarily @xmath107 and then @xmath108 and @xmath109 .",
    "the following lemma is useful in the computation of recurrences for chebyshev series .",
    "[ lemirred ] assume  @xmath60 is invertible and let @xmath87 be an irreducible fraction and @xmath91 a polynomial .",
    "then @xmath110 with @xmath111 is irreducible and equal to @xmath112 .",
    "we have @xmath113 by definition of the @xmath114 .",
    "the polynomial @xmath115 is a left divisor of @xmath116 , and therefore is a left divisor of @xmath117 thus @xmath118 is a left divisor of both @xmath119 and @xmath120 , hence is  @xmath32 .",
    "we now have the theoretical tools to prove that a morphism from linear differential operators to linear recurrence operators produces fractions whose numerators give recurrences for the coefficients of chebyshev series solutions .",
    "the algorithms then become easy to state , their algorithmic difficulty being concentrated in the euclidean algorithm in the previous section .",
    "we define a morphism of  @xmath121-algebras from @xmath122\\langle\\partial_x;\\operatorname{id},d / dx\\rangle$ ] to the field of fractions of @xmath123 by @xmath124 the proof that @xmath125 is a well - defined morphism of non - commutative rings reduces to checking the commutation @xmath126 . indeed , @xmath127",
    "@xmath128 @xmath129 such that @xmath130 @xmath131 @xmath132 compute @xmath133 .",
    "@xmath135 @xmath129      [ horner ] let  @xmath136 be a linear differential operator in @xmath122\\langle\\partial_x;\\operatorname{id},d / dx\\rangle$ ] .",
    "the evaluation of @xmath137 by horner s rule @xmath138 using eqs .",
    "and   for the computation of sums and products produces a fraction  @xmath98 that is irreducible .",
    "the algorithm deduced from this statement ( algorithm  [ algo : lewanowicz ] ) is due to lewanowicz .",
    "it is made very clear by the use of fractions of recurrence operators . the proof that the numerator of its output gives a recurrence for the chebyshev coefficients is given in the next section .",
    "we prove that each iteration of the loop produces  @xmath129 that are relatively prime and such that @xmath139 initially , @xmath140 and @xmath141 is a polynomial , so that @xmath142 and the property holds .",
    "if it holds for  @xmath143 , the next stage of the loop computes @xmath144 .",
    "recall that  @xmath145 . then let @xmath133 .",
    "lemma  [ lemirred ] applied to the inverse @xmath146 implies that  @xmath147 .",
    "it follows that  @xmath148 .",
    "again by lemma  [ lemirred ] applied to the inverse , multiplying by  @xmath149 on the right preserves irreducibility and the property holds for  @xmath150 .",
    "we quote without proof the following result .",
    "[ prop : lewanowicz ] when the leading coefficient @xmath151 of the differential equation does not vanish at  @xmath32 or  @xmath152 , then all the gcrd s are trivial , @xmath153 at step  @xmath154 and the resulting  @xmath68 is  @xmath155 .    this is related to the fact that  @xmath156 .",
    "we now prove our main result : the morphism defined above behaves as expected with respect to chebyshev expansions .",
    "[ main ] let @xmath157 be a linear differential operator of order  @xmath158 with polynomial coefficients .",
    "let @xmath159 - 1,1\\right[)$ ] be such that either of the following hypotheses holds : @xmath160 then @xmath4 admits a chebyshev expansion @xmath161 , @xmath162 admits a chebyshev expansion @xmath163 and the sequences @xmath164 and @xmath165 are related by @xmath166 , for any  @xmath129 such that @xmath167 . in particular ,",
    "if  @xmath168 , then the chebyshev coefficients of  @xmath4 satisfy @xmath169 for any numerator of  @xmath137 .",
    "the easy case is when ( h ) holds .",
    "hypothesis ( h ) makes it possible to deal with some functions that are singular at @xmath170 , but whose singularities are not `` too bad '' : they are regular singular points .",
    "first , convergence of the integral in ( h ) or ( h ) implies convergence of the analogous integral where @xmath171 is replaced by  @xmath172 for  @xmath173 as well as the integrals where these functions are multiplied by  @xmath174 , @xmath175 .",
    "this shows that both  @xmath4 and  @xmath162 admit chebyshev expansions .",
    "if the result holds for any numerator of  @xmath137 then in particular it has to hold for the numerator of its irreducible form .",
    "conversely , if  @xmath166 , then @xmath176 for any  @xmath177 , so that it is also sufficient to prove the result for an irreducible  @xmath178 .    under the same hypotheses , the result holds for @xmath179 a constant times identity , @xmath180 , @xmath181 if ( h ) holds , @xmath182 if ( h ) holds .    if @xmath183 is a constant times identity then @xmath184 , @xmath142 and @xmath185 clearly holds .",
    "if @xmath180 , eq .",
    "implies @xmath186    if @xmath181 and ( h ) holds , we use the following variant of eq .",
    "when @xmath187 @xmath188 that can be checked from  .",
    "the continuity of @xmath18 and the convergence of the integral in ( h ) imply that integrating by parts is possible and this gives @xmath189_{-1}^1 \\frac{2}{\\pi}\\int_{-1}^1{\\frac{f'(x)(t_{n-1}(x)-t_{n+1}(x))}{2n\\sqrt{1-x^2}}\\,dx } = d^{-1}\\cdot v_n.\\end{aligned}\\ ] ] both limits of the term between brackets are  0 , by convergence of the integral  @xmath190 .",
    "the case when @xmath191 reduces to checking @xmath192 , that does not depend on  @xmath4 .",
    "if @xmath182 and ( h ) holds , we start from @xmath193 an argument similar to the previous one then gives @xmath194 which proves the result since  @xmath195 .",
    "[ product ] assume the result holds for  @xmath196 with  @xmath4 , as well as for another operator  @xmath197 with @xmath198 .",
    "let  @xmath199 and  @xmath200 , these fractions being irreducible .",
    "let @xmath201 , and assume @xmath202 is irreducible .",
    "then the result holds for  @xmath203 with  @xmath4 .",
    "let @xmath204 be related by @xmath205 , @xmath206 .",
    "then @xmath207 whence the result .    as a consequence ,",
    "the result holds when  @xmath208 is a monomial , by induction .",
    "[ sum]assume the result holds for an operator  @xmath179 with @xmath4 and for a polynomial  @xmath209 with the same  @xmath4 .",
    "then it holds for @xmath210 with @xmath4 .",
    "let @xmath211 be irreducible . if  @xmath166 , @xmath212 , then @xmath213 this proves the property for @xmath210 since @xmath214 .",
    "the result now holds for  @xmath179 an arbitrary polynomial , as a sum of its monomials .",
    "let finally @xmath215 if ( h ) holds and @xmath216 if ( h ) does . in both cases ,",
    "@xmath179 can be written @xmath217 with polynomial @xmath218 .",
    "the hypothesis on  @xmath4 implies that the result holds for  @xmath219 with @xmath220 for @xmath221 and therefore also for @xmath222 with @xmath220 by lemma  [ product ] .",
    "let @xmath223 and @xmath224 for @xmath173 .",
    "let @xmath225 be irreducible .",
    "we prove by induction that the result holds for @xmath226 with @xmath227 . for @xmath140",
    ", the result has just been proved . if the result holds for  @xmath228 with @xmath229",
    ", then we obtain an irreducible @xmath230 : when @xmath215 this follows from lemma  [ product ] , while when  @xmath216 , @xmath228 itself is a polynomial ( by induction ) .",
    "thus the result holds for  @xmath231 with @xmath227 .",
    "since it also holds for @xmath232 with @xmath227 and @xmath232 is a polynomial , we get the result for their sum by lemma  [ sum ] .",
    "thus by induction the result holds for  @xmath233 with  @xmath4 , which concludes the proof of theorem  [ main ] .      the function @xmath234 satisfies ( h ) for any  @xmath158 .",
    "this proves the recurrence   computed in example  [ example exp ] .",
    "[ ex-5 ] the function @xmath235 is annihilated by  @xmath236 .",
    "hypothesis ( h ) does not hold , but ( h ) does .",
    "application of the morphism gives @xmath237 , @xmath238 , so that the theorem asserts that the chebyshev coefficients satisfy @xmath239 the actual values can be computed by standard properties of the beta integrals and indeed @xmath240    [ ex arccos ] the function @xmath241 gives an example showing that analytic hypothesis such as ( h ) or ( h ) are necessary .",
    "this function is annihilated by @xmath242 .",
    "direct application of the morphism gives @xmath243 , @xmath142 , which would suggest that the recurrence is @xmath244 .",
    "however , neither ( h ) nor ( h ) holds in this case",
    ". left multiplying @xmath179 by @xmath37 gives a new operator such that ( h ) holds .",
    "then the theorem proves that the coefficients are annihilated by @xmath245 this can be checked against the actual coefficients : @xmath246",
    "we now cast the algorithms of paszkowski @xcite and rebillard  @xcite as computations of the numerator of a fraction of recurrence operators .",
    "we also propose a new faster algorithm .",
    "all three algorithms compute the same recurrence .",
    "starting from @xmath247 they avoid the need for fractions by replacing differentiations by integrations , exploiting the polynomial @xmath248 these algorithms compute the polynomial  @xmath249 , that is a numerator of  @xmath250 .",
    "thus , by theorem  [ main ] , their result is a recurrence operator annihilating the coefficients of chebyshev series solutions of  @xmath179 .",
    "if  @xmath251 , proposition  [ prop : lewanowicz ] shows that  @xmath252 is the denominator of the irreducible fraction and therefore in that case all algorithms compute the irreducible fraction .",
    "otherwise , the result of these algorithms may have larger order than that returned by lewanowicz algorithm .    the function @xmath235 has been dealt with in example  [ ex-5 ] .",
    "lewanowicz algorithm returns the second order recurrence  .",
    "the numerator returned by the other algorithms has order  4 : @xmath253 it is however possible to recover the smaller order recurrence : the gcld of @xmath254 with @xmath255 is @xmath255 , so that @xmath71 factors as @xmath256 with  @xmath257 as in example  [ ex-5 ] .    more generally , dividing out the result of the computation of @xmath258 on the left by the gcld with  @xmath252 yields the result of lewanowicz s algorithm .",
    "the starting point of paszkowski s algorithm is to rewrite  @xmath179 from   as @xmath259 the polynomials  @xmath260 can be computed inductively starting with  @xmath261 and subtracting  @xmath262 to produce a smaller order operator",
    ". then @xmath263 algorithm  [ alg p1 ] follows .",
    "@xmath264 @xmath265 compute @xmath260 s such that @xmath266 @xmath267 @xmath268 @xmath177      the starting point of rebillard s algorithm is the identity @xmath269 that follows from an easy induction .",
    "from there , he deduces @xmath270 algorithm  [ alg reb ] follows .",
    "@xmath264 @xmath265 compute @xmath271 , @xmath221 @xmath272 @xmath273 @xmath177      we now give a complexity analysis of paszkowski s , rebillard s and lewanowicz algorithms .",
    "this reveals a source of inefficiency for large orders , that we correct in our new algorithm in the next section .",
    "we need to consider the size of polynomials in two variables  @xmath2 and  @xmath26 .",
    "we say that a polynomial has _",
    "@xmath274 in @xmath275 when it has degree  @xmath276 in  @xmath2 and @xmath209 in  @xmath26 .",
    "first , we state more precisely the shape of  @xmath277 .",
    "[ di ] for all @xmath278 , @xmath279 where @xmath280 , @xmath281 and we use the pochhammer symbol @xmath282 .    in particular , the bidegree of  @xmath283 in @xmath275 is  @xmath284 .",
    "the proof is a tedious but easy induction that we omit here . from this formula",
    "follows a precise estimate of the size of the polynomial we are computing .    [ coro : size]if @xmath179 in   has bidegree  @xmath285 in  @xmath286 , then @xmath287 is a polynomial of bidegree in  @xmath275 at most @xmath288 .    first , @xmath179 can be rewritten as in paszkowski s algorithm @xmath289 with @xmath290 .",
    "the identity @xmath291 shows that this is a polynomial in  @xmath2 .",
    "each term of the sum is the product of a polynomial of bidegree  @xmath292 , a polynomial of bidegree @xmath284 , a polynomial of bidegree at most  @xmath293 .",
    "thus each summand has bidegree at most @xmath294 , whence the result .",
    "[ theopasz]given @xmath179 as above for input , paszkowski s algorithm requires  @xmath295 arithmetic operations in  @xmath121 .    the first step is the computation of the  @xmath260 s from the  @xmath296 s .",
    "the inductive method requires only @xmath297 arithmetic operations . using ideas from  @xcite",
    ", it is actually possible to decrease this complexity further to @xmath298 operations  @xcite ( here , @xmath299 is the complexity of polynomial product , see , e.g. , @xcite ) .",
    "the next step is the loop .",
    "the main cost in step @xmath154 is the multiplication of @xmath300 by @xmath301 .",
    "we multiply a polynomial of bidegree @xmath284 , with a polynomial in @xmath26 only , of degree  @xmath302 .",
    "the cost of this multiplication is @xmath303 arithmetic operations .",
    "summing for @xmath154 up to  @xmath158 gives the result .",
    "in the same conditions , rebillard s algorithm requires @xmath304 arithmetic operations .",
    "the first step is the computation of the @xmath271 .",
    "the polynomial @xmath305 has bidegree @xmath306 in @xmath275 .",
    "then each @xmath271 can be computed in @xmath307 operations and all of them in @xmath308 operations .",
    "the cost of the @xmath154th step of the loop is dominated by the cost of the multiplication of @xmath309 by @xmath277 .",
    "the polynomial @xmath310 has bidegree @xmath311 in @xmath275 , while @xmath277 has bidegree @xmath312 .",
    "naive multiplication then requires @xmath313 operations .",
    "summing over @xmath158 gives the result .",
    "the output of lewanowicz algorithm is different in general .",
    "we give a comparison in the cases when it coincides .    in the same conditions , and",
    "if all the gcrd during its execution are trivial , lewanowicz algorithm requires @xmath295 arithmetic operations .",
    "we only give a sketch .",
    "when all gcrd s are trivial , it turns out that the computation of lclm s and cofactors is of the same order of complexity as the computation of the product  @xmath314 , where moreover  @xmath315 .",
    "this is the same as in the analysis of paszkowski s algorithm .",
    "we now give another algorithm for the same operator @xmath265 .",
    "the design of our algorithm is motivated by computational complexity issues . in the analyses above , most of the complexity comes from the fact that during the computations , the bidegrees of the intermediate polynomials grow linearly and they are multiplied by polynomials of fixed degree . instead , we aim at balancing degrees so as to make use of the recent fast algorithm for the product of linear differential operators  @xcite , that we denote fft - mult .",
    "we achieve the following complexity .",
    "[ complexity ] algorithm [ alg new ] computes the recurrence operator  @xmath265 in @xmath316 arithmetic operations .    here , @xmath317 is a feasible exponent for matrix multiplication with coefficients in @xmath121 ( see , e.g. , @xcite ) .",
    "we now prove this result .",
    "@xmath318 @xmath319 @xmath320 @xmath321 compute recursively @xmath322 and @xmath323 . @xmath324 .",
    "starting from  , we write @xmath325 we choose  @xmath326 and apply the same idea recursively .",
    "the time consuming part of the computation is the product @xmath327 , for which we give a specialized algorithm .",
    "@xmath328 and @xmath329 @xmath330 decompose @xmath257 as in eq .",
    "@xmath331 @xmath332 @xmath333 .    to simplify the presentation , assume  @xmath334 .",
    "corollary  [ coro : size ] implies that  @xmath335 has degree  @xmath336 in  @xmath26 , @xmath323 has degree at most @xmath337 in @xmath26 .",
    "they have rational function coefficients whose degrees are also bounded by this result .",
    "if @xmath338 is large , the degrees in  @xmath26 are unbalanced , so we first decompose @xmath339 where the  @xmath340 s have degree at most  @xmath336 in  @xmath26 .",
    "note that this decomposition is only an extraction of coefficients and does not use any arithmetic operation .",
    "we are thus left with the product of  @xmath335 with the  @xmath340 s .",
    "although both have rational function coefficients and thus can not be multiplied directly by fft - mult , we also have that @xmath341 has polynomial coefficients in @xmath2 of degree at most  @xmath342 and therefore so does @xmath343 . to perform the product efficiently ,",
    "we make use of the fact that fft - mult proceeds by evaluation and interpolation : during the evaluation phase , we evaluate the _ rational function _ coefficients of  @xmath340 as if they were polynomials ( and within the same complexity thanks to our degree bounds ) , avoiding the zeros  @xmath344 of their denominators ; similarly , we evaluate the polynomial coefficients of  @xmath345",
    ". then we compute the necessary products . with the bounds on the degree in  @xmath2 we have for the _ polynomial _ coefficients in the result ,",
    "the interpolation phase then returns the result .",
    "the complexity of each of these multiplications is thus @xmath346 operations .",
    "the algorithm for this multiplication is summarized in algorithm  [ fast - mult ] .",
    "note also that a constant factor can be saved by not recomputing the `` fft '' of @xmath345 at each time .",
    "the cost of multiplying @xmath328 by @xmath347 with  @xmath348 using algorithm  [ fast - mult ] is @xmath349 arithmetic operations .",
    "we have seen that each multiplication  @xmath343 has complexity @xmath346 .",
    "this is performed @xmath350 times .",
    "right multiplication by powers of  @xmath26 does not use any arithmetic operations .",
    "the additions require a smaller number of operations , whence the result .    now , let @xmath351 be the complexity of algorithm  [ alg new ] . using this proposition ,",
    "we get @xmath352 the complexity estimate in theorem  [ complexity ] follows from the convergence of the geometric series .",
    "( again , a constant factor can be saved by computing the powers of  @xmath353 only once . )      in  @xcite , an algorithm of a different nature is proposed .",
    "it does not compute a numerator of  @xmath178 , but manages in some cases to derive a smaller order recurrence corresponding to a right factor of the numerator of  @xmath178 .",
    "we plan to come back to this algorithm in connexion to minimality issues in future work . here",
    ", we merely give a few indications and comments on special cases .",
    "the following is taken from  @xcite .",
    "starting from the differential operator @xmath354 , the computation of  @xmath178 by lewanowicz s algorithm leads to a numerator of order  4 , whereas the algorithm in  @xcite produces one of order only  3 .",
    "we note that this operator can also be obtained by lewanowicz s algorithm , applied to  @xmath355 instead of  @xmath179 . in many cases",
    ", this technique applies .    since the algorithm in  @xcite computes a right factor of the numerator of  @xmath178 , analytic hypotheses such as ( h ) or ( h ) in our theorem  [ main ] are necessary .",
    "in the case of @xmath356 , the numerator of @xmath178 is a constant ( see example  [ ex arccos ] ) , so that this is also the result of the algorithm in  @xcite .",
    "starting from @xmath357 , we obtained an operator of order  4 in ex .",
    "[ ex arccos ] . on this operator ,",
    "the algorithm in  @xcite returns an operator of order  2 .",
    "the fast algorithm does not lend itself easily to an efficient implementation in maple , since it relies on fast evaluation / interpolation and fast matrix product .",
    "we have however implemented the slow algorithms in maple and show how other algorithms from computer algebra can sometimes be applied to the resulting recurrences , so that nice expression for the coefficients can be recovered .",
    "we have also implemented variants of horner - like evaluations that seem to perform well , see  @xcite .",
    "starting from @xmath358 , we get @xmath359 the initial conditions are computed by maple as @xmath360 and @xmath361 , @xmath362 . the recurrence",
    "can then be solved by petkovek s algorithm and we get @xmath363    starting from @xmath364 , we get a more complicated recurrence : @xmath365 a closed form is known to be @xmath366 but it seems that the algorithms in computer algebra are not strong enough to find this automatically , yet .    starting from @xmath367 , we get @xmath368 by computing the numerator of  @xmath178 .",
    "although neither of our hypotheses ( h ) or ( h ) holds here , this result is correct , as can be checked from the expansion @xmath369 again , this suggests that more work on obtaining a recurrence of minimal order is necessary .",
    "alin bostan , frdric chyzak , and nicolas le  roux .",
    "products of ordinary differential operators by evaluation and interpolation . in david",
    "j. jeffrey , editor , _ issac08 : proceedings of the twenty - first international symposium on symbolic and algebraic computation _ , pages 2330 .",
    "acm , 2008 .",
    "k.  o. geddes .",
    "symbolic computation of recurrence equations for the chebyshev series solution of linear ode s . in carl",
    "m. andersen , editor , _ proceedings of the 1977 macsyma user s conference _ , pages 405423 , 1977 .",
    "nasa cp-2012 .",
    "l.  rebillard and h.  zakrajek .",
    "recurrence relations for the coefficients in hypergeometric series expansions . in ilias",
    "kotsireas and eugene zima , editors , _ computer algebra 2006 .",
    "latest advances in symbolic algorithms _ , pages 158180 .",
    "world scientific , 2006 ."
  ],
  "abstract_text": [
    "<S> a chebyshev expansion is a series in the basis of chebyshev polynomials of the first kind . </S>",
    "<S> when such a series solves a linear differential equation , its coefficients satisfy a linear recurrence equation . </S>",
    "<S> we interpret this equation as the numerator of a fraction of linear recurrence operators . </S>",
    "<S> this interpretation lets us give a simple view of previous algorithms , analyze their complexity , and design a faster one for large orders . </S>"
  ]
}
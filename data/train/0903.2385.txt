{
  "article_text": [
    "an important fact motivating the study of the statistical properties of dynamical systems is that the pointwise long time prediction of a chaotic system is not possible , while the estimation or forecasting of averages and other long time statistical properties is sometimes possible .",
    "this often corresponds in mathematical terms to computing invariant measures , or estimating some of their properties .    giving a precise meaning to the computation of a continuous object like",
    "a measure is not a completely obvious task and involves the definition of effective versions of several concepts from mathematical analysis .",
    "our approach will be mainly based on the concept of computable metric space . to give a first example ,",
    "let us consider the set @xmath0 of real numbers .",
    "beyond @xmath1 there are many other real numbers that can be handled by algorithms : @xmath2 or @xmath3 for instance can be approximated _ at any given precision _",
    "( with rational numbers ) by an algorithm . hence these numbers can be identified with the algorithm which is able to calculate them ( more precisely , with the string representing the program which approximates it ) .",
    "this set of points is called the set of _ computable real numbers _ and was introduced in the famous paper @xcite",
    ".    this kind of construction can then be generalized to many other metric spaces , considering a dense countable set that plays the same role as the rationals in the above example .",
    "then , _ computable _ or _ recursive _ counterparts of many mathematical notions can be defined , and rigorous statements about the algorithmic approximation of abstract objects can be made , also obtaining algorithmic versions of many classical theorems ( see section 2 ) .",
    "in particular , this general approach also gives the possibility to treat in a simple way measures spaces , define computable measures and computable functions between measure spaces ( transfer operators ) , which will be the main theme of this paper .",
    "the paper is devoted to the problem of computation of invariant measures in discrete time dynamical systems . by discrete time dynamical system",
    "we mean a system @xmath4 were @xmath5 is a metric space and @xmath6 is a borel measurable transformation . here",
    "an invariant measure is a borel measure @xmath7 on @xmath5 such that for each measurable set @xmath8 it holds @xmath9 .",
    "such measures contain information on the statistical behavior of the system @xmath4 and on the possible behavior of averages of observables along typical trajectories of the system .",
    "the map @xmath10 moreover induces a function @xmath11 , where @xmath12 is the set of borel probability measures over @xmath5 and will be endowed with a suitable metric ( for details see section [ meas ] ) .",
    "@xmath13 is called the transfer operator associated to @xmath10 ( basic results about this are reminded in section [ ds ] ) .    before entering into details about the computation of measures and invariant measures in particular",
    ", we remark that whatever we mean by approximating a measure by an algorithm , there are only countably many measure approximating algorithms  whereas , in general , a dynamical system may have uncountably many invariant measures ( usually an infinite dimensional set ) .",
    "so , most of them will not be algorithmically describable .",
    "this is not a serious problem because we can put our attention on the most meaningful  ones .",
    "an important part of the theory of dynamical systems is indeed devoted to the understanding of physically  relevant invariant measures , among these , srb measures play an important role ] .",
    "these measures are good candidates to be computed .",
    "the existence and uniqueness of srb measures is a widely studied problem ( see @xcite ) , which has been solved for some important classes of dynamical systems .",
    "let us precise the concept of computable measure . as mentioned before",
    ", the framework of computable analysis can be applied to abstract spaces as the space @xmath12 .",
    "a measure @xmath14 is then _ computable _ if it is a computable point of that measure space . in this case",
    "there is an algorithm such that , for each rational @xmath15 given as input , outputs a `` finite '' measure ( a finite rational convex combination of dirac measures supported on rational  points ) which is @xmath15-close to @xmath14 .",
    "in the literature , there are several works dealing with the problem of approximating invariant measures , more or less informally from the algorithmic point of view ( see e.g. @xcite , @xcite , @xcite , @xcite , @xcite ) . in these works the main technique",
    "consists in an adequate discretization of the problem .",
    "more precisely , in several of the above works the transfer operator associated to the dynamics ( see subsection [ pf ] ) is approximated by a finite dimensional one and the problem is reduced to the computation of the corresponding relevant eigenvectors ( some convergence result then validates the quality of the approximation ) .",
    "another strategy to face the problem of computation of invariant measures consist in following the way the measure @xmath14 can be constructed and check that each step can be realized in an effective way . in some interesting examples we can obtain the srb measure as limit of iterates of the lesbegue measure @xmath16 where @xmath17 is the lesbegue measure and @xmath18 is the transfer operator associated to @xmath10 . to prove computability of @xmath14",
    "the main point is to recursively estimate the speed of convergence to the limit .",
    "this sometimes can be done using the decay of correlations ( see @xcite where computability of srb measures in uniformly hyperbolic systems is proved in this way , see @xcite for general relations between convergence of measures and decay of correlations with a point of view similar to the one of the present paper ) .",
    "let us illustrate the main results of the paper . informally speaking , a function @xmath19 is said to be computable if its behavior can be described by some algorithm ( for the precise definitions see sections [ cms ] and [ comp_meas ] ) . in this case",
    "the pair @xmath4 is called a computable dynamical system . in this context , the general problem we are facing can be stated in the following terms :    [ probl ]    1 .   given a computable dynamical system @xmath4 does the set of invariant measures contain computable points ? 2 .",
    "can they be found in an algorithmic way , starting from the description of the system ?",
    "we will see that , in general , even the above question a ) does not always have a positive answer .",
    "however , in many interesting situations , both of the above problems can be positively solved .",
    "we will take a general point of view finding the interesting invariant measure as a fixed point of the transfer operator , giving general conditions ensuring its computability",
    ". the following theorem will be the main tool ( see thm .",
    "[ comp_inv ] ) .    *",
    "* theorem a * * _ _  let @xmath5 be a computable metric space and @xmath10 a function which is computable on @xmath20 .",
    "let us consider the dynamical system @xmath4 .",
    "suppose there is a recursively compact set of probability measures @xmath21 such that for every @xmath22 , @xmath23 holds .",
    "then every invariant measure isolated ( in the weak topology ) in @xmath24 is computable . _ _    the precise meaning of computability on @xmath20 will be given in section [ cms ] however the intuitive meaning of the above proposition is that : if the function @xmath10 is computable outside some singular set @xmath25 ( the discontinuity set for example ) and we look for invariant measures in a set @xmath26 of measures giving no weight to the set @xmath25 ( some class of regular measures e.g. ) and in the set @xmath24 there is a unique invariant measure , then this measure can be computed",
    ".    this will give as a consequence that the srb measure is computable in many examples of computable systems ( uniquely ergodic systems , piecewise expanding maps in one dimensions , systems having an indifferent fixed point and many other systems having an unique absolutely continuous invariant measure , see theorem [ comp_meas ] and prop .",
    "[ 2 ] ) .",
    "observe that any object which is computable  in some way ( as @xmath27 in the theorem ) admits a finite description ( a finite program ) .",
    "theorem a is actually _ uniform _ : there is a _ single _ algorithm which takes finite descriptions of @xmath10 and @xmath24 and which , as soon as the hypothesis in theorem a are satisfied and @xmath14 is a unique invariant measure in @xmath24 , outputs a finite description of @xmath14 ( see remark [ comprem ] and the above item b ) of problem [ probl ] ) . observe that the algorithm can not decide whether the hypotheses are satisfied or not , but computes the measure whenever they are fulfilled .",
    "after such general statements , one could conjecture that , in computable dynamical systems , srb measures are always computable .",
    "this is not true , and reveals some subtlety about the general problem of computing an invariant measure . in section [ lst ]",
    "we will see that :    * * examples * * _ _  there exists a computable dynamical system having no computable measure at all .",
    "moreover , there exists a computable dynamical system on the unit interval having an srb measure which is not computable . _ _    the interest of the second example comes from the fact that any computable map of the interval must have some computable invariant measure .",
    "the example shows that important invariant measures can still be missed .",
    "to further motivate these results , we finally remark that from a technical point of view , computability of the considered measure is a requirement in several results about relations between computation , probability , randomness and pseudo - randomness ( see e.g. @xcite , @xcite , @xcite,@xcite ) .      in section 2",
    "we give a compact and self contained introduction to the prerequisites about computable analysis which are necessary to work with dynamical systems on metric spaces . in this section",
    "we also prove some general statements about solutions of equations on metric spaces which will be used to `` find '' the interesting invariant measures as fixed points of the transfer operator ( theorem , [ computable_fixed ] ) .",
    "in section 3 we develop the computable treatment of the space of probability measures on a given ( computable ) metric space .",
    "some results of these initial sections are new and should be of independent interest . their usefulness is demonstrated in the next sections .    in section 4",
    "we start considering dynamical systems .",
    "a direct application of the results of the previous sections allow us to establish general assumptions under which the transfer operator is computable ( on a suitable subset , theorem [ l_comp ] ) .",
    "we then use the framework and tools introduced before to face problem [ probl ] .",
    "we prove theorem a above ( which also becomes a simple application of previous results ) and show how to apply it in order to prove the computability of many interesting invariant measures .    in section 6",
    "we construct the two counter - examples already announced .",
    "a way to approach several problems from mathematical analysis by computational tools is to approximate the `` infinite '' mathematical objects ( elements of non countable sets , as real numbers or a functions ) involved in the problem by some algorithm which constructs an approximating sequence of `` finite '' objects ( rational numbers , polynomials with rational coefficients ) which are `` treatable '' by the computer .",
    "usually , the algorithm has to manipulate and decide questions about the various mathematical objects involved , and convergence results should be provided in order to choose the suitable level of accuracy for the finite approximation . the actual implementation of the algorithm and the various decisions are , in most cases , subjected to round off errors which can produce additional approximation errors , wrong decisions or undecidable situations if the error is not considered rigorously ( how to decide @xmath28 when @xmath29 ? ) .",
    "sometimes , estimates ( for these errors ) can be obtained under suitable conditions , but this is in general a further and often nontrivial task ( see e.g. @xcite ) . in this paper",
    "we will work in a framework where the algorithmic abilities of the computer to represent and manipulate infinite mathematical objects are taken into account from the beginning . in this framework",
    "( often referred to as computable analysis ) one can rigorously determine which objects can be algorithmically approximated at any given accuracy ( these will be called _ computable _ objects ) , and which can not .    here",
    ", the word _ computable _ is used , but may be adapted to each particular situation : for instance , `` computable '' functions from @xmath30 to @xmath30 are called _ recursive _ functions , `` computable '' subsets of @xmath30 are called r.e sets , etc .",
    "the starting point of recursion theory was to give a mathematical definition making precise the intuitive notions of _ algorithmic _ or _ effective procedure _ on symbolic objects .",
    "every mathematician has a more or less clear intuition of what can be computed by algorithms : the multiplication of natural numbers , the formal derivation of polynomials are simple examples .",
    "several very different formalizations have been independently proposed ( by post , church , kleene , turing , markov  ) in the 30 s , and have proved to be equivalent : they compute the same functions from @xmath30 to @xmath30 .",
    "this class of functions is now called the class of _ recursive functions_. as an algorithm is allowed to run forever on an input , these functions may be _ partial _ , i.e.  not defined everywhere .",
    "the _ domain _ of a recursive function is the set of inputs on which the algorithm eventually halts .",
    "a recursive function whose domain is @xmath30 is said to be _",
    "total_. for formal definitions see for example  @xcite .    with this intuitive description it is more or less clear that there exists an effective procedure to enumerate the class of all partial recursive functions , associating to each of them its _ * gdel number*_. hence there exists a _",
    "universal _ recursive function @xmath31 satisfying for all @xmath32 , @xmath33 where @xmath34 is the gdel number of @xmath35 and @xmath36 is some recursive bijection .",
    "the notion of recursive function induces directly an important computability notion on the class of subsets of @xmath30 : a set of natural numbers is said to be _ * recursively enumerable * _ ( _ * r.e * _ for short ) if it is the range of some partial recursive function .",
    "that is if there exists an algorithm listing ( or enumerating ) the set .",
    "we denote by @xmath37 the r.e set associated to @xmath35 , namely : @xmath38 , where @xmath39 is the universal recursive function .",
    "let @xmath40 be a family of r.e subsets of @xmath30 .",
    "we say that @xmath41 is r.e _ * uniformly in @xmath42 * _ if there is a single recursive function @xmath43 such that @xmath44 .",
    "taking @xmath45 the universal recursive function yields an enumeration @xmath40 of all the r.e subsets of @xmath30 , such that @xmath41 is r.e uniformly in @xmath46 .",
    "more generally , once a computability notion has been defined for some class of objects in the following form :    [ computable_object ] an object @xmath47 is _ computable _ if there is a ( partial or total ) recursive function @xmath48 which computes @xmath47 in some sense .",
    "a uniform version will be implicitly defined and intensively used :    objects from a family @xmath49 of @xmath5 are _ uniformly _ computable if there is a single ( total or partial ) recursive function @xmath43 such that @xmath50 computes @xmath51 for each @xmath46 .",
    "strictly speaking , recursive functions only work on natural numbers , but this can be extended to the objects ( thought of as `` finite '' objects ) of any countable set , once a numbering of its elements has been chosen .",
    "a _ * numbered set * _ @xmath52 is a countable set together with a surjection @xmath53 called the _",
    "* numbering*_. we write @xmath54 for @xmath55 and call @xmath56 a _ * name * _ of @xmath54",
    ".    the set @xmath1 of rational numbers can be injectively numbered @xmath57 in an _ effective _ way : the number @xmath46 of a rational @xmath58 can be computed from @xmath59 and @xmath60 , and vice versa .",
    "we fix such a numbering .",
    "a subset @xmath8 of a numbered set @xmath52 is _ * recursively enumerable ( r.e ) * _ if there is a r.e set @xmath61 such that @xmath62 .",
    "uniformity for r.e subsets of @xmath52 is defined as uniformity for r.e subsets of @xmath30 .",
    "the following notion was already introduced by turing in @xcite .",
    "let @xmath47 be a real number .",
    "we say that :    @xmath63 @xmath47 is _ * lower semi - computable * _ if the set @xmath64 is r.e . ,    @xmath63 @xmath47 is _ * upper semi - computable * _ if the set @xmath65 is r.e .",
    ",    @xmath63 @xmath47 is _ * computable * _ if it is lower and upper semi - computable .",
    "the following classical characterization may be more intuitive : a real number is computable if and only if there exists a recursive function @xmath43 computing a sequence of rational numbers converging exponentially fast to @xmath47 , that is @xmath66 , for all @xmath46 .",
    "we remark that as there exists subsets of integers which are recursively enumerable but not recursive ( see @xcite ) , there also exists semi - computable numbers which are not computable .    in the following section",
    "we will see how these notions can be generalized to separable metric spaces , which inherit the computable structure of @xmath67 via the metric .      in this section",
    "we introduce the basic tools of computable analysis on metric spaces .",
    "most of the results of this section and several of the following one have been already obtained by weihrauch , brattka , presser and others in the framework of `` type-2 theory of effectivity '' , which is based in the notion of `` representation '' ( infinite binary codes ) of mathematical objects . a standard reference book on this approach to computable analysis",
    "is @xcite , and a specific paper on computability of subsets of metric spaces is @xcite .",
    "our approach to computable analysis only uses the notion of recursive function ( see subsection [ background ] ) .",
    "it is intended to emphasize the fact that computability notions are just the `` effective '' versions of classical ones . in this way",
    "we obtain a theory syntactically familiar to most mathematicians and computability results can be proved in a transparent and compact way .",
    "a computable metric space is a metric space with a dense numbered set such that the distance on this set is algorithmically compatible with the numbering ( distances between numbered points can be uniformly computed up to arbitrary precision ) . from this point of view the real line ( with euclidean distance )",
    "has a natural structure of computable metric space , whit the rationals as a numbered set .    a _ * computable metric space * _ ( cms ) is a triple @xmath68 , where    @xmath63 @xmath69 is a separable complete metric space ,    @xmath63 @xmath70 is a dense subset of @xmath5 ( the numbered set of _ * ideal points * _ ) ,    @xmath63 the real numbers @xmath71 are all computable , uniformly in @xmath72 .",
    "symbolic spaces , euclidean spaces , functions spaces and manifolds with a suitable metrics can be endowed with the structure of computable metric spaces .",
    "see for example @xcite .",
    "if @xmath73 and @xmath74 are two computable metric spaces , then the product @xmath75 with @xmath76 is a computable metric space .",
    "the numbered set of ideal points @xmath77 induces the numbered set of _ * ideal balls * _ @xmath78 .",
    "we denote by @xmath79 the ideal ball @xmath80 .",
    "let @xmath73 be a computable metric space .",
    "the computable structure of @xmath5 assures that the whole space can be `` reached '' using algorithmic means .",
    "since ideal points ( the finite objects of @xmath81 ) are dense , they can approximate any @xmath47 at any finite precision .",
    "then , every point @xmath47 has a neighborhood basis consisting of ideal balls , denoted @xmath82 and called its _ * ideal neighborhood basis*_.    a point @xmath83 is said to be _ * computable * _ if its ideal neighborhood basis @xmath84 is r.e .    as in the case of reals",
    "we have the following characterization : [ fasttt ] @xmath47 is computable if and only if there is a ( total ) recursive function @xmath48 such that @xmath85 .",
    "ideal balls are also useful to describe open sets .",
    "we say that the set @xmath86 is _ * recursively open * _ if there is some r.e set @xmath8 of ideal balls such that @xmath87 .",
    "that is , if there is some r.e set @xmath88 such that @xmath89 .",
    "we remark that the collection of r.e .",
    "open sets can be algorithmically enumerated .",
    "let @xmath90 be a sequence of r.e .",
    "open sets .",
    "we say that the sequence is _ * uniformly r.e .",
    "* _  or that @xmath91 is r.e .",
    "open _ * uniformly in @xmath56 * _ if there exists an r.e",
    ".  set @xmath92 such that for all @xmath56 we have @xmath93 , where @xmath94 .",
    "let @xmath95 be a sequence of open sets such that @xmath96 is uniformly recursively open .",
    "then the union @xmath97 is a recursively open set .",
    "the universal recursive function @xmath98 induces an enumeration of the collection @xmath99 of all the recursively open sets .",
    "indeed , define @xmath100 .",
    "then @xmath101 where @xmath102 .",
    "the numbered set @xmath99 is closed under finite unions and finite intersections . furthermore , these operations are _ effective _ in the following sense : there exists recursive functions @xmath103 and @xmath104 such that for all @xmath105 , @xmath106 and the same holds for @xmath104 .",
    "equivalently : @xmath107 is recursively open uniformly in @xmath108 ( see  @xcite e.g. ) .",
    "[ functions ] a function @xmath109 is said to be _ * computable * _ if @xmath110 is recursively open uniformly in @xmath34 .",
    "it follows that computable functions are continuous . since we will work with functions which are not necessarily continuous everywhere",
    ", we shall consider functions which are computable on some subset of @xmath5 .",
    "more precisely :    a function @xmath10 is said to be _ * computable on c * _ ( @xmath111 ) if there is @xmath112 recursively open uniformly in @xmath56 such that @xmath113 the set @xmath114 is called the _ * domain of computability * _ of @xmath10 .    as an example",
    "we show that a monotone real function whose values over the rationals are computable , is computable everywhere .",
    "this lemma will also be used later .",
    "[ upup]if @xmath115\\rightarrow \\lbrack 0,1]$ ] is increasing and @xmath116 can be computed uniformly , for each rational @xmath117 then @xmath118 is computable .",
    "let @xmath119 .",
    "we remark that @xmath120 this allows to find a r.e .",
    "cover of the interval @xmath121 .",
    "the case of a general r.e .",
    "open set is straightforward .",
    "[ lsfunctions ] a function @xmath122 is said to be _ * lower semi - computable * _ if @xmath123 is recursively open uniformly in @xmath56 .",
    "it is known that there exists a recursive enumeration of all lower semi - computable functions @xmath124 .",
    "from the definition follows that lower semi - computable functions are lower semi - continuous .",
    "_ * lower semi - computability on d * _ is defined as for computable functions .",
    "a function @xmath118 is _ * upper semi - computable * _ if @xmath125 is lower semi - computable .",
    "it is easy to see that a real function @xmath118 is computable if and only if it is upper and lower semi - computable .    given a probability measure @xmath7 , we say that a function is _ * ( lower semi- ) computable almost everywhere * _ if its domain of computability has @xmath7-measure one .",
    "we will give some general results about solutions of equations concerning functions computable on some subset .",
    "as in many other mathematical situations , to prove the existence of certain solutions we are helped by a suitable notion of compactness . in order to the solution be computable",
    ", we will need a recursive version of compacity .",
    "roughly , a compact set is recursively compact if the fact that it is covered by a finite collection of ideal balls can be tested algorithmically ( for equivalence with the @xmath126-net approach see definition [ pree ] and proposition [ pree2 ] ) .",
    "this kind of notion and the related basic results are already present in the literature in various forms , or particular cases , we give a very compact self contained introduction based on the previously introduced notions .",
    "a set @xmath127 is _ * recursively compact * _ if it is compact and there is a recursive function @xmath128 such that @xmath129 halts if and only if @xmath130 is a covering of @xmath131 .",
    "let @xmath132 be the collection of r.e open sets ( with its uniform enumeration ) .",
    "it is easy to see that a set @xmath131 is recursively compact iff @xmath133 is semi - decidable , uniformly in @xmath46 .    here are some basic properties of recursively compact sets :    [ p.compact-basic]let @xmath131 be a recursively compact subset of @xmath5 .    1 .   a singleton @xmath134 is recursively compact if and only if @xmath47 is a computable point .",
    "[ core_compact ] if @xmath135 is rec .",
    "compact then so is @xmath136 .",
    "if @xmath137 is recursively open , then @xmath138 is rec compact .",
    "the diameter of @xmath131 is upper semi - computable .",
    "the distance to @xmath131 : @xmath139 is lower - computable 6 .   [ supinf_compact ] if @xmath140 is lower - computable then so is @xmath141 7 .",
    "if @xmath140 is upper - computable then so is @xmath142",
    "\\(1 ) a point @xmath47 is computable iff @xmath143 is semi - decidable uniformly in @xmath46 .",
    "( 2 ) @xmath144 iff @xmath145 and @xmath146 . ( 3 ) remark that @xmath147 and @xmath148 is recursively open uniformly in @xmath137 and @xmath24 .",
    "( 4 ) @xmath149 .",
    "( 5 ) for @xmath83 and @xmath150 define @xmath151 , which is a constructive ( in @xmath47 ) open set .",
    "then @xmath152 is lower - computable .",
    "( 6 ) @xmath153 .",
    "( 7 ) @xmath154 .",
    "the arguments are uniform . in point 1 ) for instance , this means that there is an algorithm which takes a program computing @xmath47 and outputs a program testifying the rec .",
    "compacity of @xmath134 , and vice - versa .    when @xmath5 itself is rec .",
    "compact , a subset @xmath131 is rec .",
    "compact iff @xmath155 is lower - computable .",
    "indeed , @xmath156 .",
    "[ c.countable-intersection ] if @xmath157 are uniformly recursively compact sets , then so is @xmath158 .",
    "the complements of recursively compact sets are r.e open",
    ". then by proposition [ p.compact-basic ] , part ( [ core_compact ] ) the set @xmath159 is recursively compact .",
    "it is important to remark that a recursively compact set needs not contain computable points .",
    "this will be used in section [ lst ] .",
    "[ p.no-comp ] there exists a nonempty recursively compact set @xmath160 $ ] containing no computable points .",
    "let @xmath161 be an enumeration of all the rational intervals and @xmath162 be a rational number .",
    "put @xmath163 .",
    "@xmath164 is a r.e .",
    "subset of @xmath165 .",
    "let @xmath166 : @xmath167 .",
    "let @xmath168 $ ] be a computable real number .",
    "there is a total recursive function @xmath169 such that @xmath170 and @xmath171 for all @xmath56 .",
    "hence @xmath172 , so @xmath173 .",
    "hence @xmath137 contains all computable points . as @xmath174 $ ] is recursively compact ,",
    "so is @xmath175\\setminus u$ ] .",
    "now we start to show that many statements about topology and calculus on metric spaces can be easily translated to the computable setting : the first one says that the image of a recursively compact is still a recursively compact .",
    "[ p.stability ] let @xmath176 be a computable function defined on a recursively compact set @xmath131 .",
    "then @xmath177 is recursively compact .",
    "indeed , @xmath178 . as @xmath179 where @xmath43 is a total recursive function , @xmath180 .",
    "remark that the argument is uniform : if @xmath181 is a sequence of uniformly recursively compact subsets of @xmath5 on which @xmath118 is defined , then @xmath182 is a sequence of uniformly recursively compact subsets of @xmath183 .",
    "we will say that @xmath177 is recursively compact _ uniformly in @xmath131_.    as a first simple example of application , we observe that in some cases the global attractor of a ( computable ) dynamical system can be approximated by an algorithm to any given accuracy .",
    "[ c.rec.compact.attractor ] let @xmath5 be a recursively compact computable metric space and @xmath10 a computable dynamics on it .",
    "then the set : @xmath184 is recursively compact .    by proposition",
    "[ p.stability ] and corollary [ c.countable-intersection ]    we remark that these and other frameworks of `` exact computability and rigorous approximation '' have been previously used to study the computability of several similar objects such as julia or mandelbrot sets ( @xcite , @xcite ) , or the existence and some basic properties of lorentz attractor ( @xcite ) .",
    "here is a computable version of heine s theorem .",
    "a function @xmath185  between metric spaces is _ * recursively uniformly continuous * _ if there is a recursive @xmath186 such that for all @xmath162 , @xmath187 and @xmath188 , @xmath189    let @xmath5 and @xmath183 be two computable metric spaces .",
    "let @xmath127 be recursively compact and @xmath190 be a computable function .",
    "then @xmath118 is recursively uniformly continuous .",
    "first , @xmath191 is a recursively compact subset of @xmath192 . for each rational number @xmath193",
    ", define @xmath194 and @xmath195 : they are respectively recursively open and recursively compact , uniformly in @xmath196 .",
    "hence , the function @xmath197 is lower semi - computable ( proposition [ supinf_compact ] ) .",
    "now , @xmath118 is uniformly continuous if and only if @xmath187 for each @xmath162 . by the classical heine s theorem",
    ", this is the case , so by lower semi - computability of @xmath198 , one can compute from @xmath126 some positive @xmath199 .",
    "[ computable_zero ] let @xmath131 be a recursively compact subset of @xmath5 and @xmath200 be a computable function .",
    "then every isolated zero of @xmath118 is computable .",
    "let @xmath201 be an isolated zero of @xmath118 .",
    "let @xmath202 be an ideal point and a positive rational number such that @xmath203 and the only zero of @xmath118 lying in @xmath204 is @xmath201 .",
    "the set @xmath205 is recursively open in @xmath131 ( that is , @xmath206 with @xmath137 recursively open ) , so @xmath207 is recursively compact by proposition [ p.compact-basic ] .",
    "hence , @xmath201 is a computable point .",
    "[ rmk3]observe that the argument is uniform in @xmath118 and an ideal ball isolating the zero . in particular , there is an algorithm which takes a finite description of @xmath118 and the ball and outputs his zero if it is unique .",
    "[ computable_fixed ] let @xmath131 be a recursively compact subset of @xmath5 and @xmath208 be a computable function .",
    "then every isolated fixed point of @xmath118 is computable .",
    "apply the preceding theorem to the function @xmath209 defined by @xmath210 .      in this subsection",
    "we prove the equivalence between the notion of recursive compactness given above and another natural approach ( which will be used later ) to recursive compactness , where it is supposed the existence of an algorithm to construct @xmath196-nets .",
    "[ pree ] a cms is _ * recursively precompact * _ if there is a total recursive function @xmath211 such that for all @xmath56 , @xmath212 computes a @xmath213-net : that is @xmath214 where @xmath215 is a @xmath213-net .",
    "here is a computable version of a classical theorem :    [ pree2 ] let @xmath5 be a cms .",
    "@xmath5 is recursively compact if and only if it is complete and recursively precompact .",
    "if @xmath5 is recursively compact then we define the following algorithm : it takes @xmath56 as input , then enumerates all the @xmath216 , and tests if @xmath217 is a covering of @xmath5 ( this is possible by recursive compacity ) . as @xmath5 is compact , hence precompact , such a covering exists and",
    "will be eventually enumerated : output it .",
    "the algorithm makes @xmath5 recursively precompact .",
    "suppose that @xmath5 is complete and recursively precompact .",
    "let @xmath218 be ideal balls : we claim that @xmath218 covers @xmath5 if and only if there exists @xmath56 such that each point @xmath219 of the @xmath213-net given by recursive precompactness lies in a ball @xmath220 satisfying @xmath221 .",
    "the procedure which enumerates all the @xmath56 and semi - decides this halts if and only if the initial sequence of balls covers @xmath5 .",
    "we leave the proof of the claim to the reader ( take @xmath56 such that @xmath213 is less than the lebesgue number of the finite covering ) .",
    "the following observation is also worth noticing .",
    "let @xmath5 be a computable metric space .",
    "if @xmath5 ( as a subset of @xmath5 ) is recursively compact , then the set @xmath222 of continuous functions from @xmath5 to @xmath67 with the distance induced by the uniform norm is a computable metric space .",
    "the function @xmath223 mapping @xmath224 to @xmath225 is computable .",
    "let @xmath183 be a computable metric space : for every computable function @xmath226 , the function @xmath227 mapping @xmath228 to @xmath229 is computable .      from the computability viewpoint ,",
    "the properties of recursively closed sets are , in a sense , complementary to those of recursively compact sets .",
    "a closed set @xmath230 is _ * recursively closed * _ if the set @xmath231 is r.e .",
    "a closed set @xmath230 is recursively closed if @xmath232 is semi - decidable for r.e open sets @xmath137 .",
    "it is easy to see that the union of two recursively closed sets is also recursively closed .",
    "the closure of any recursively open set is recursively closed : @xmath233 .",
    "the following proposition will be used later .",
    "[ p.comp-closed ] let @xmath230 be a recursively closed subset of @xmath5 .",
    "then there exists a sequence of uniformly computable points @xmath234 which is dense in @xmath230 .",
    "since @xmath235 is r.e , given some ideal ball @xmath236 intersecting @xmath230 , the set @xmath237 is also r.e .",
    "then we can effectively construct an exponentially decreasing sequence of ideal balls intersecting @xmath230 .",
    "hence @xmath238 is a computable point lying in @xmath230 .",
    "we remark that by this , proposition [ p.no-comp ] shows a recursive compact which is not recursively closed . for the sake of completeness ,",
    "let us state some useful simple properties .",
    "let @xmath230 be a recursively closed subset of @xmath5 . then :    * the diameter of @xmath230 is lower semi - computable , uniformly in @xmath230 . *",
    "if @xmath239 is lower semi - computable , then so is @xmath240 . *",
    "if @xmath239 is upper semi - computable , then so is @xmath241 .",
    "\\(1 ) let @xmath242 be the complement of the closed ball @xmath243 , that is @xmath244 : this is a recursively open set , uniformly in @xmath245 .",
    "then @xmath246 . ( 2 ) @xmath247 .",
    "( 3 ) apply ( 2 ) to @xmath125 .",
    "let @xmath131 be recursively closed and recursively compact subset of @xmath5 .",
    "if @xmath248 is a computable function , then so are @xmath249 and @xmath250 .",
    "let us consider the space @xmath12 of borel probability measures over @xmath5 .",
    "we recall that @xmath12 can be seen as the dual of the space @xmath251 of continuous functions with compact support over @xmath5 and recall the notion of weak convergence of measures :    @xmath252 is said to be _ * weakly convergent * _ to @xmath14 if @xmath253 for each @xmath254 .",
    "let us introduce the wasserstein - kantorovich distance between measures .",
    "let @xmath255 and @xmath256 be two probability measures on @xmath5 and consider :    @xmath257    where @xmath258 is the space of 1-lipschitz functions on @xmath5 .",
    "we remark that since adding a constant to the test function @xmath118 does not change the above difference @xmath259 then the supremum can be taken over the set of 1-lipschitz functions mapping a distinguished ideal point @xmath260 to @xmath261 .",
    "the distance @xmath262 has moreover the following useful properties which will be used in the following    [ ambros ]    1 .",
    "@xmath262 is a distance and if @xmath5 is bounded , separable and complete , then @xmath263 with this distance is a separable and complete metric space .",
    "2 .   if @xmath5 is bounded , a sequence is convergent for the @xmath262 metrics if and only if it is convergent for the weak topology .",
    "if @xmath5 is compact @xmath12 is compact with this topology .    item ( 1 ) has an effective version : @xmath12 inherits the computable metric structure of @xmath5 .",
    "indeed , given the set @xmath264 of ideal points of @xmath5 we can naturally define a set of ideal points @xmath265 in @xmath12 by considering finite rational convex combinations of the dirac measures @xmath266 supported on ideal points @xmath267 .",
    "this is a dense subset of @xmath12 .",
    "the proof of the following proposition can be found in ( @xcite )    if @xmath5 bounded then @xmath12 with the @xmath262 distance ( and @xmath265 as a set of ideal points ) is a computable metric space .",
    "a measure @xmath14 is then computable if there is a fast sequence @xmath268 converging to @xmath14 ( see remark [ fasttt ] ) in the @xmath262 metric ( and hence for the weak convergence ) .",
    "now , point ( 3 ) of proposition [ ambros ] also has an effective version :    [ recomp]if @xmath5 is a recursively precompact metric space , then @xmath12 with the @xmath262 distance is a recursively precompact metric space .",
    "we will show how to effectively find an @xmath269net for each @xmath117 of the form @xmath270 .",
    "let us consider the set @xmath271 subdividing the unit intervals in equal segments .",
    "let us also consider an @xmath117-net @xmath272 constructed by recursive compactness of @xmath273 now let us consider the set @xmath274 of measures with support in @xmath275 given by @xmath276this is a @xmath277 net in @xmath12 . to see this",
    "let us consider a measure @xmath14 on @xmath5 and a ball @xmath278 centered in @xmath279 .",
    "let us consider the measure @xmath255 defined by    @xmath280    for each measurable set @xmath281 .",
    "the measure @xmath255 is obtained transporting the mass contained in the ball @xmath278 to its center .",
    "then @xmath282 . let us now consider the sequence of measures @xmath283 where @xmath255 is as before and the other ones are given by@xmath284at the end @xmath285 is a measure with support in @xmath275 and by the triangle inequality @xmath286    now @xmath285 has the same support as the measures in @xmath274 and there is @xmath287 such that @xmath288 for each @xmath289 , hence @xmath290 and then @xmath291 and this proves the statement .",
    "we now use the recursive enumeration of lower semi - computable functions @xmath292 to characterize computability on @xmath12 ( see @xcite corollary 4.3.1 ) :    [ comp_meas]let @xmath5 be a bounded computable metric space and @xmath293 be any subset of @xmath12 , then :    1 .   @xmath294 is computable iff the function @xmath295 is lower semi - computable , uniformly in @xmath46 , 2 .",
    "@xmath296 is computable on @xmath293 iff the function @xmath297 is lower semi - computable on @xmath293 , uniformly in @xmath46 .",
    "this gives :    [ comp_d ] if @xmath298 is a uniform sequence of functions which are lower semi - computable on @xmath20 , then @xmath299 is lower semi - computable on @xmath300 uniformly in @xmath46 .    for each @xmath46 , one can construct a lower semi - computable function @xmath301 satisfying @xmath302 on @xmath303 ( see @xcite , subsection 3.1 ) . since the function @xmath304 is lower semi - computable , uniformly in @xmath46 and @xmath305 , we have that on @xmath306 it coincides with @xmath304 , which is then lower semi - computable on @xmath307 , uniformly in @xmath46 .",
    "an interesting remark about computable measures is that they must have computable points in the support .",
    "this will be used in section [ example2 ] .",
    "[ compoint ] if @xmath7 is a computable probability measure , then there exists computable points in the support of @xmath7",
    ".    the sequence of functions @xmath308 ( the indicator functions of ideal balls ) are uniformly lower semi - computable . by lemma [ comp_meas ] ,",
    "the numbers @xmath309 are uniformly lower semi - computable .",
    "hence , the set @xmath310 is recursively enumerable .",
    "in other words , the support of @xmath7 is a recursively closed set .",
    "proposition [ p.comp-closed ] allows to conclude .",
    "let @xmath5 be a metric space , let @xmath311 be a borel measurable map .",
    "let @xmath14 be an invariant measure .",
    "a set a @xmath8 is called @xmath10-invariant if @xmath312 . the system @xmath313",
    "is said to be ergodic if each @xmath10-invariant set has total or null measure . in such systems",
    "the famous birkhoff ergodic theorem says that time averages computed along @xmath14 typical orbits coincides with space average with respect to @xmath314 more precisely , for any @xmath315 it holds @xmath316for @xmath14 almost each @xmath47 , where @xmath317    this shows that in an ergodic system , the statistical behavior of observables , under typical realizations of the system is given by the average of the observable made with the invariant measure .    in case @xmath5",
    "is a manifold ( possibly with boundary ) .",
    "we say that a point @xmath47 belong to the basin of an invariant measure @xmath14 if equation [ birkhoff ] holds at @xmath47 for each continuous @xmath118 ( the average on the @xmath47 orbit represent the average under the measure ) .",
    "an srb measure is an invariant measure having a positive lebesgue measure basin ( for more details and a general survey see @xcite ) .    in the applied literature the most common method to simulate or understand the above statistical behaviors is to compute and study some trajectory .",
    "this method has three main theoretical problems which motivates the search of another approach :    * numerical error , * tipicality of the sample , * how many sample points are necessary ?    the first ( and widely known ) problem is the amplification of the numerical error ( if the system is sensitive to initial conditions as most interesting systems are ) . here",
    "the shadowing results are often invoked to justify the correctness of simulations , but rigorous results are proved only for a small class of systems ( see e.g.@xcite ) and moreover the mere existence of a shadowing orbit does not say anything about its typicality ( see e.g. @xcite for a further discussion on numerical errors ) .    the second problem is indeed that this method should compute , in order to be useful , a trajectory which shows the `` typical '' behavior of the system : a behavior which take place with large or full probability in some sense .",
    "the main problem here is the fact that the set of initial conditions the computer has access to , being countable , has probability zero .",
    "hence , there is no guarantee that what we see on the screen is typical in some sense . on the contrary , in a chaotic system , typical orbits are far from being describable by a finite program .",
    "it is true for example that in an ergodic system having positive entropy @xmath318 a typical @xmath56 step orbit segment needs approximatively a program which is @xmath319 bits long to be described ( up some approximation @xmath196 , see e.g. @xcite for the original result or @xcite and @xcite for a version in the framework of computable analysis ) .",
    "we remark , however , that if one looks for points which behave as typical for birkhoff averages ( hence they behave as typical for some given particular aspect ) there are some rigorous results partly supporting this way to proceed : in several classes of systems there are computable initial conditions which behave as typical with respect to birkhoff averages ( see @xcite for a precise result ) .",
    "the third problem however remains . even if you find a program describing a typical orbit of the system : how many iterations should be considered to be near to the limit behavior , so that the orbit represents the invariant measure up to a certain approximation ?",
    "although this problem can be approached rigorously in some cases ( see @xcite e.g. ) we will not adopt this point of view .",
    "we will study the system s statistical behavior by directly computing the invariant measure as fixed points of a certain transfer operator .",
    "a function @xmath10 between metric spaces naturally induces a function between probability measure spaces .",
    "this function @xmath13 is linear and is called transfer operator ( associated to @xmath10 ) .",
    "measures which are invariant for @xmath10 invariant measures are fixed points of @xmath13 .",
    "let us consider a computable metric space @xmath5 endowed with a borel probability measure @xmath7 and with a dynamics defined by a measure - preserving function @xmath19 .",
    "let us also consider the space @xmath12 of borel probability measures on @xmath273    let us define the function @xmath320 by duality in the following way : if @xmath294 then @xmath321 is such that    @xmath322    for each @xmath254 . in next sections , invariant measures will be found as solutions of the equation @xmath323 to apply theorem [ computable_zero ] and corollary [ computable_fixed ] to this equation we need that @xmath324 is computable .",
    "we remark that if @xmath10 is not continuous then @xmath324 is not necessarily continuous ( this can be realized by applying @xmath324 to some delta measure placed near a discontinuity point ) hence not computable .",
    "still , we have that @xmath324 is continuous ( and its modulus of continuity is computable ) at all measures @xmath14 which are far enoughfrom the discontinuity set @xmath25 .",
    "this is technically expressed by the condition @xmath305 .",
    "we remark that with the general tools introduced before , the proof is immediate .",
    "[ l_comp ] let @xmath5 be a computable metric space and @xmath19 be a function which is computable on @xmath20 .",
    "then @xmath18 is computable on the set of measures @xmath325    note that if @xmath118 is lower semi - computable , then @xmath326 is lower semi - computable on @xmath20 .",
    "the result then follows from lemmas [ comp_d ] and [ comp_meas ] .    in particular , if @xmath10 is computable on the whole space @xmath5 then @xmath324 is computable on all @xmath12 .",
    "the above tools allow to ensure the computability of @xmath18 on a large class of measures .",
    "this will allow to apply corollary [ computable_fixed ] and see an invariant measure as a fixed point .",
    "[ comp_inv ] let @xmath5 be a computable metric space and @xmath10 be a function which is computable on @xmath20 .",
    "suppose there is a recursively compact set of probability measures @xmath327 such that for every @xmath328 , @xmath305 holds .",
    "then every invariant measure isolated in @xmath24 is computable .    by theorem [ l_comp ]",
    ", @xmath18 is computable on @xmath24 .",
    "since @xmath24 is recursively compact , theorem [ computable_zero ] allows to compute any invariant isolated measure in @xmath24 as a solution of the equation @xmath329 .",
    "[ comprem ] this theorem is uniform : there is an algorithm which takes as inputs finite descriptions of @xmath330 and an ideal ball in @xmath331 which isolates an invariant measure @xmath7 , and outputs a finite description of @xmath7 ( see the above proof and remark [ rmk3 ] ) .",
    "a trivial consequence of theorem [ comp_inv ] is the following :    if a computable system as above is uniquely ergodic and its invariant measure @xmath7 satisfy @xmath305 , then it is a computable measure .",
    "the main problem in the application of theorem [ comp_inv ] is the requirement that the invariant measure we are trying to compute , should be isolated in @xmath24 . in general the space of invariant measures in a given dynamical system",
    "could be very large ( an infinite dimensional convex in @xmath12 ) to isolate a particular measure we can restrict and consider a subclass of `` regular '' measures .",
    "let us consider the following _ seminorm _ :    @xmath332    [ 1]if @xmath5 is recursively compact then @xmath333is recursively compact .",
    "@xmath334 is recursively open .",
    "indeed , @xmath335 iff there exists @xmath336 for which @xmath337 .",
    "as @xmath338 is lower semi - computable uniformly in @xmath202 , the sets @xmath339 are uniformly recursively open subsets of @xmath12 .",
    "hence , @xmath340 is recursively open .",
    "now , @xmath341 .",
    "as @xmath12 is recursively compact ( see lemma [ recomp ] ) and @xmath137 is recursively open , then proposition [ p.compact-basic ] part ( 3 ) allows to conclude .",
    "in theorem [ comp_inv ] we require that @xmath305 holds .",
    "this is automatically true in many examples when the measure is regular and the set @xmath25 is reasonably small .",
    "[ 2]let @xmath5 be recursively compact and @xmath10 be computable on @xmath342 , with @xmath343 .",
    "then any invariant measure isolated in @xmath344 with @xmath345 is computable .",
    "let us first prove that @xmath305 for all @xmath346 . for all @xmath193 ,",
    "there is a covering @xmath347 of @xmath25 satisfying @xmath348 .",
    "hence @xmath349 .",
    "as this is true for each @xmath193 , @xmath305 .",
    "the result then follows from the fact that @xmath344 is recursively compact and theorem [ comp_inv ] .",
    "once again , this is uniform in @xmath350 .",
    "the above general proposition allows to obtain as a corollary the computability of many absolutely continuous invariant measures . for",
    "the sake of simplicity , let us consider maps on the interval .    if @xmath351 $ ] , @xmath10 is computable on @xmath20 , with @xmath352 and @xmath4 has an unique a.c.i.m .",
    "@xmath14 with bounded density , then @xmath14 is computable .",
    "the result follows from the above proposition [ 2 ] and the fact that if @xmath14 is absolutely continuous and the density of @xmath14 is @xmath353 $ ] then @xmath354 we have to check that there could be not other measures having a finite @xmath355 norm and not being absolutely continuous .",
    "if we suppose that @xmath356 is finite , then @xmath7 is absolutely continuous , with bounded density @xmath357 .",
    "indeed , let us consider the conditional expectation @xmath358 $ ] of @xmath7 to the dyadic @xmath56-th grid @xmath359 .    if @xmath360 a fortiori implies @xmath361\\leq l$ ] a.e .. by the first doobs martingale convergence it follows that @xmath358 $ ] has an a.e .",
    "pointwise limit @xmath118 and @xmath357 a.e .. since @xmath118 is bounded then it is a density for @xmath7 .",
    "@xmath362-dimensional submanifolds of @xmath363 can naturally be endowed with a natural structure of computable metric spaces ( see @xcite ) .",
    "considering a dyadic grid on @xmath364 and chart diffeomorphisms it is straightforward to prove , in the same way as before    let @xmath5 be a recursively compact @xmath362 dimensional @xmath365 submanifold of @xmath366 ( with or without boundary ) . if @xmath10 is computable on @xmath20 , with @xmath367 and @xmath4 has a unique a.c.i.m .",
    "@xmath14 with bounded density , then @xmath7 is computable .    as it is well known , interesting examples of systems having an unique a.c.i.m .",
    "( with bounded density as required ) are topologically transitive _ piecewise expanding maps _ on the interval or _ expanding maps _ on manifolds ( see @xcite for precise definitions ) .",
    "provided that the dynamics is computable we then have by the above propositions that the a.c.i.m . is computable too .",
    "the above results ensure computability of measures having an a.c.i.m . with bounded density . if we are interested in situations where the density is unbounded , we can consider a new norm , `` killing '' singularities .",
    "let us hence consider a computable function @xmath368  and    @xmath369    propositions [ 1 ] and [ 2 ] also hold for this norm . if @xmath118 is such that @xmath370 when @xmath371 this can let the norm to be finite when the density diverges .",
    "as an example , where this can be applied , let us consider the manneville pomeau maps on the unit interval .",
    "these are maps of the type @xmath372 .",
    "when @xmath373 the dynamics has an unique a.c.i.m .",
    "@xmath374 having density @xmath375 which diverges in the origin as @xmath376 and it is bounded elsewhere ( see @xcite section 10 and @xcite section 3 e.g. ) .",
    "if we consider the norm @xmath377 with @xmath378 we have that @xmath379 is finite for each such @xmath380 . by this",
    "it follows that the measure @xmath374 is computable .",
    "we have seen that the technique presented above proves the computability of many a.c.i.m . which are also srb measures .",
    "as we have seen in the introduction , with other techniques it is possible to prove the computability of other srb measures ( axiom a systems e.g. , see @xcite ) .",
    "this raises naturally the following question : a computable systems does necessarily have a computable invariant measure ?",
    "what about ergodic srb measures ?",
    "let us consider a system on the unit interval given as follows .",
    "let @xmath381 be a lower semi - computable real number which is not computable .",
    "there is a computable sequence of rational numbers @xmath382 such that @xmath383 . for each @xmath46 , define @xmath384 and @xmath385 .",
    "the functions @xmath386 are uniformly computable so @xmath10 is also computable .",
    "the system @xmath389,t)$ ] is hence a computable dynamical system .",
    "this system has a srb ergodic invariant measure which is @xmath390 , the dirac measure placed on @xmath391 .",
    "the measure is srb because @xmath392 attracts all the interval at its left .",
    "since @xmath391 is not computable then @xmath393 is not computable .",
    "we remark that coherently with the previous theorems @xmath393 is not isolated .",
    "we remark that by a simple dichotomy argument we can prove that a computable function from @xmath174 $ ] to itself must have a computable fixed point .",
    "hence it is not possible to construct a system over the interval having no computable invariant measure ( we always have the @xmath394 over the fixed point ) . with some more work",
    "we will see that such an example can be constructed on the circle .          on @xmath395 ,",
    "there is a computable map with no computable invariant probability measure .",
    "we construct such a map @xmath398\\to{\\mathbb{r}}$ ] satisfying @xmath399 , and consider its quotient on the unit circle .    from proposition [ p.no-comp ] we know that there is a non - empty recursively compact set @xmath131 containing no computable point .",
    "let @xmath400 : this is a r.e .",
    "open set , so there are computable sequences @xmath401 ( @xmath402 ) such that @xmath403 and @xmath404 .",
    "let us define non - decreasing , uniformly computable functions @xmath405\\to[0,1]$ ] such that @xmath406 if @xmath407 and @xmath408 otherwise .",
    "for instance , @xmath409 on @xmath410 $ ] and @xmath411 on @xmath412 $ ] .      as neither @xmath261 nor @xmath355 belongs to @xmath131",
    ", there is a rational number @xmath162 such that @xmath413 $ ] .",
    "let us define @xmath115\\to { \\mathbb{r}}$ ] by @xmath414 on @xmath415 $ ] , @xmath416 on @xmath417 $ ] and @xmath418 on @xmath419 $ ] .",
    "we then define the map @xmath398\\to { \\mathbb{r}}$ ] by @xmath420 .",
    "@xmath10 is computable and non - decreasing , and @xmath387 if and only if @xmath421\\setminus k$ ] . as @xmath422",
    ", we can take the quotient of @xmath10 modulo @xmath355 .          if @xmath427 then @xmath428 .",
    "indeed , if @xmath429 , @xmath430 is a fixed point so @xmath10 is constant on @xmath431 $ ] ( @xmath10 is non - decreasing ) .",
    "let @xmath432 be any rational number in @xmath433 : @xmath434 is then computable , but does not belong to @xmath435 : impossible .",
    "let @xmath421 $ ] : the trajectory of @xmath47 is `` non - decreasing '' and converges to the first point above @xmath47 which is not in @xmath137 , @xmath436\\setminus u)$ ] or to @xmath437 if @xmath438 . more precisely , there are two cases : ( i ) if @xmath439 then @xmath47 is a fixed point ( unstable on the right ) , ( ii ) if @xmath173 then the trajectory of @xmath47 converges to a lower semi - computable fixed point ( non - computable , as it does not belong to @xmath137 ) .",
    "obviously @xmath441 because @xmath261 is not periodic .",
    "let @xmath442 be an interval from the description of @xmath137 . since @xmath443 and @xmath444 tends to some non computable @xmath445",
    "( and then are not stationary , as they are computable ) , the interval @xmath446 is wandering .",
    "hence , by poincar recurrence theorem it has null measure .",
    "( of proposition [ bomb ] ) we can conclude : let @xmath7 be a computable invariant probability measure : by the above lemma its support is then included in the complement of @xmath435 .",
    "but the support of a computable probability measure always contains computable points ( see proposition [ compoint ] ) : contradiction .    actually , the set of invariant measures is exactly the set of measures which give null weight to @xmath435 .",
    "it is easy to see that in the above system the set of invariant measures is a convex recursive compact set .",
    "indeed , the function @xmath447 is lower semi - computable , so @xmath448 is a recursive open set .",
    "its complement is then a recursive compact set , as the whole space of probability measures is a recursive compact set .",
    "the above example hence shows an example of a convex , and recursive compact set whose extremal points are not computable .",
    "chazottes , p. collet and b. schmitt .",
    "_ statistical consequences of the devroye inequality for processes .",
    "applications to a class of non - uniformly hyperbolic dynamical systems _ 2005 nonlinearity 18 2341 - 2364 .",
    "p. gcs , m. hoyrup , c. rojas .",
    "randomness on computable probability spaces - a dynamical point of view . in susanne albers and jean - yves",
    "marion , editors , _",
    "26th international symposium on theoretical aspects of computer science ( stacs 2009 ) _ , pages 469480 , dagstuhl , germany , 2009 .",
    "schloss dagstuhl - leibniz - zentrum fuer informatik , germany ."
  ],
  "abstract_text": [
    "<S> we consider the question of computing invariant measures from an abstract point of view . </S>",
    "<S> we work in a general framework ( computable metric spaces , computable measures and functions ) where this problem can be posed precisely . </S>",
    "<S> we consider invariant measures as fixed points of the transfer operator and give general conditions under which the transfer operator is ( sufficiently ) computable . in this case </S>",
    "<S> , a general result ensures the computability of isolated fixed points and hence invariant measures ( in given classes of `` regular '' measures ) . </S>",
    "<S> this implies the computability of many srb measures .    </S>",
    "<S> on the other hand , not all computable dynamical systems have a computable invariant measure . </S>",
    "<S> we exhibit two interesting examples of computable dynamics , one having an srb measure which is not computable and another having no computable invariant measure at all , showing some subtlety in this kind of problems . </S>"
  ]
}
{
  "article_text": [
    "we consider a permutation to be simply an arrangement of the numbers @xmath4 for some positive @xmath5 .",
    "we use @xmath6 to denote the length of permutation @xmath7 .",
    "a permutation @xmath8 is said to be * contained * in , or to be a * subpermutation * of , another permutation @xmath7 if @xmath7 has a subsequence whose terms have the same relative ordering as @xmath8 .",
    "it can be helpful to consider permutations graphically , and from the graphical perspective , @xmath7 contains @xmath8 if the plot of @xmath8 results from erasing some points from the plot of @xmath7 and then `` shrinking '' the axes appropriately .",
    "if @xmath7 does not contains @xmath8 , we say that @xmath7 * avoids * @xmath8 .",
    "for example , 31567482 contains 1324 ( see figure  [ figpermutation ] ) but avoids 1243 .",
    "@xmath9      {    \\foreach \\x in { 1, ... ,8 } \\draw[very thin ] ( \\x,.5)--(\\x,8.5 ) ( .5,\\x)--(8.5,\\x ) ;    \\foreach \\y [ count=\\x ] in { 3,1,5,6,7,4,8,2 } \\fill[radius=0.275 ] ( \\x,\\y ) circle ;    \\draw[thick ] ( .5,.5 ) rectangle ( 8.5,8.5 ) ; }      \\draw [ thin ] ( 2,1 ) circle [ radius=0.4 ] ;      \\draw [ thin ] ( 4,6 ) circle [ radius=0.4 ] ;      \\draw [ thin ] ( 6,4 ) circle [ radius=0.4 ] ;      \\draw [ thin ] ( 7,8 ) circle [ radius=0.4 ] ;    \\end{tikzpicture}\\ ] ]    clearly , the containment relation is a partial order on the set of all permutations .",
    "a classical * permutation class * ( or `` pattern class '' ) is a set of permutations closed downwards ( a _ down - set _ ) in this partial order . from a graphical perspective",
    ", this means that erasing points from the plot of a permutation in a permutation class @xmath10 always results in the plot of another permutation in @xmath10 when the axes are rescaled appropriately .    given a permutation class @xmath10 , we denote by @xmath11 the set of permutations in @xmath10 of length @xmath5 .",
    "the ( ordinary ) generating function of @xmath10 is thus @xmath12 .",
    "it is common to define a permutation class @xmath10 `` negatively '' by stating the minimal set of permutations @xmath13 that do _ not _ occur in the class . in this case",
    ", we write @xmath14 ( where av signifies `` avoids '' ) .",
    "@xmath13 is called the * basis * of @xmath10 .",
    "the basis of a permutation class is an _ antichain _ ( a set of pairwise incomparable elements ) and may be infinite .",
    "@xmath15      {    \\foreach \\y [ count=\\x ] in { 3,1,5,6,7,4,8,2 } \\fill[radius=0.275 ] ( \\x,\\y ) circle ;    \\draw[thick ] ( .5,.5 ) rectangle ( 8.5,8.5 ) ; }        \\draw[thick ] ( 5.5,.5 ) -- ( 5.5,8.5 ) ;        \\draw[thick ] ( .5,2.5 ) -- ( 8.5,2.5 ) ;    \\end{tikzpicture }    \\quad\\ ;    \\begin{tikzpicture}[scale=0.20 ]      {    \\foreach \\y [ count=\\x ] in { 3,1,5,6,7,4,8,2 } \\fill[radius=0.275 ] ( \\x,\\y ) circle ;    \\draw[thick ] ( .5,.5 ) rectangle ( 8.5,8.5 ) ; }        \\draw[thick ] ( 5.5,.5 ) -- ( 5.5,8.5 ) ;        \\draw[thick ] ( .5,3.5 ) -- ( 8.5,3.5 ) ;    \\end{tikzpicture }    \\quad\\ ;    \\begin{tikzpicture}[scale=0.20 ]      {    \\foreach \\y [ count=\\x ] in { 3,1,5,6,7,4,8,2 } \\fill[radius=0.275 ] ( \\x,\\y ) circle ;    \\draw[thick ] ( .5,.5 ) rectangle ( 8.5,8.5 ) ; }        \\draw[thick ] ( 5.5,.5 ) -- ( 5.5,8.5 ) ;        \\draw[thick ] ( .5,4.5 ) -- ( 8.5,4.5 ) ;    \\end{tikzpicture }    \\quad\\ ;    \\begin{tikzpicture}[scale=0.20 ]      {    \\foreach \\y [ count=\\x ] in { 3,1,5,6,7,4,8,2 } \\fill[radius=0.275 ] ( \\x,\\y ) circle ;    \\draw[thick ] ( .5,.5 ) rectangle ( 8.5,8.5 ) ; }        \\draw[thick ] ( 4.5,.5 ) -- ( 4.5,8.5 ) ;        \\draw[thick ] ( .5,4.5 ) -- ( 8.5,4.5 ) ;    \\end{tikzpicture }    \\quad\\ ;    \\begin{tikzpicture}[scale=0.20 ]      {    \\foreach \\y [ count=\\x ] in { 3,1,5,6,7,4,8,2 } \\fill[radius=0.275 ] ( \\x,\\y ) circle ;    \\draw[thick ] ( .5,.5 ) rectangle ( 8.5,8.5 ) ; }        \\draw[thick ] ( 3.5,.5 ) -- ( 3.5,8.5 ) ;        \\draw[thick ] ( .5,4.5 ) -- ( 8.5,4.5 ) ;    \\end{tikzpicture }    \\quad\\ ;    \\begin{tikzpicture}[scale=0.20 ]      {    \\foreach \\y [ count=\\x ] in { 3,1,5,6,7,4,8,2 } \\fill[radius=0.275 ] ( \\x,\\y ) circle ;    \\draw[thick ] ( .5,.5 ) rectangle ( 8.5,8.5 ) ; }        \\draw[thick ] ( 2.5,.5 ) -- ( 2.5,8.5 ) ;        \\draw[thick ] ( .5,4.5 ) -- ( 8.5,4.5 ) ;    \\end{tikzpicture }    \\quad\\ ;    \\begin{tikzpicture}[scale=0.20 ]      {    \\foreach \\y [ count=\\x ] in { 3,1,5,6,7,4,8,2 } \\fill[radius=0.275 ] ( \\x,\\y ) circle ;    \\draw[thick ] ( .5,.5 ) rectangle ( 8.5,8.5 ) ; }        \\draw[thick ] ( 2.5,.5 ) -- ( 2.5,8.5 ) ;        \\draw[thick ] ( .5,5.5 ) -- ( 8.5,5.5 ) ;    \\end{tikzpicture }    \\vspace{-6pt}\\ ] ]    the monotone * grid class * @xmath0 is a permutation class defined by a matrix @xmath16 , all of whose entries are in @xmath17 , which specifies the acceptable `` shape '' for plots of permutations in the class .",
    "each entry of @xmath16 corresponds to a * cell * in a `` gridding '' of a permutation .",
    "if the entry is @xmath18 , any points in the cell must form an increasing sequence ; if the entry is @xmath19 , any points in the cell must form a decreasing sequence ; if the entry is @xmath20 , the cell must be empty . for greater clarity ,",
    "we denote grid classes by * cell diagrams * rather than by their matrices ; for example , @xmath21      \\draw[very thin ] ( 0,0 ) grid ( 3,2 ) ;      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,-1,0 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,1+.5-.32*\\d)--(\\i-.18,1+.5+.32*\\d ) ; } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,-1,1 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,0+.5-.32*\\d)--(\\i-.18,0+.5+.32*\\d ) ; }    \\end{tikzpicture } } } } = \\begin{gridmx}1&-1&0\\\\0&-1&1\\end{gridmx}$ ]",
    ". a permutation may have multiple possible griddings in a grid class ( see figure  [ figgriddings ] for an example ) .",
    "recent years have seen much progress on understanding enumerative and structural properties of permutation classes .",
    "the use of grid classes has proven particularly fruitful .",
    "one focus of research has been the enumeration of permutation classes that have small bases ( see  @xcite ) . in this context",
    "the first use of grid classes ( but not using that term ) was by atkinson  @xcite , who determined that @xmath22      \\draw[very thin ] ( 0,0 ) grid ( 5,5 ) ;      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,0,1 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,4+.5-.32*\\d)--(\\i-.18,4+.5+.32*\\d ) ; } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,1,0,0 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,3+.5-.32*\\d)--(\\i-.18,3+.5+.32*\\d ) ; } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,0,0,0,0 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,2+.5-.32*\\d)--(\\i-.18,2+.5+.32*\\d ) ; } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,1,0,0,0 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,1+.5-.32*\\d)--(\\i-.18,1+.5+.32*\\d ) ; } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,1,0 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,0+.5-.32*\\d)--(\\i-.18,0+.5+.32*\\d ) ; }    \\end{tikzpicture } } } } \\cup { \\raisebox{-15.00pt } { {    \\begin{tikzpicture}[scale=0.25 ]      \\draw[very thin ] ( 0,0 ) grid ( 5,5 ) ;      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,0,1 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,4+.5-.32*\\d)--(\\i-.18,4+.5+.32*\\d ) ; } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,0,0,0,0 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,3+.5-.32*\\d)--(\\i-.18,3+.5+.32*\\d ) ; } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,1,0 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,2+.5-.32*\\d)--(\\i-.18,2+.5+.32*\\d ) ; } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,1,0,0,0 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,1+.5-.32*\\d)--(\\i-.18,1+.5+.32*\\d ) ; } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,1,0,0 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,0+.5-.32*\\d)--(\\i-.18,0+.5+.32*\\d ) ; }    \\end{tikzpicture } } } } \\ ] ] and used the fact to enumerate this class of permutations .",
    "more recently , albert , atkinson and brignall  @xcite and albert , atkinson and vatter  @xcite have demonstrated the practical uses of grid classes for permutation class enumeration by determining the generating functions of seven permutation classes whose bases consist of two permutations of length four .",
    "another primary area of exploration has concerned the _ growth rates _ of permutation classes .",
    "marcus and tardos  @xcite proved the conjecture of stanley and wilf that for any permutation class @xmath10 except the class of all permutations there exists a constant @xmath23 such that @xmath24 for all @xmath5 .",
    "thus , every permutation class with non - empty basis has finite lower and upper exponential growth rates defined , respectively , by @xmath25 if the lower and upper growth rates coincide , then @xmath10 has a * growth rate * , which we denote @xmath26 .",
    "( it is widely conjectured that _ every _ permutation class has a growth rate . ) in  @xcite , vatter investigated the possible values of permutation class growth rates , and used generalised grid classes to characterize all the ( countably many ) permutation classes with growth rates below @xmath27 .",
    "he also established that there are uncountably many permutation classes with growth rate @xmath28 , and in a separate paper  @xcite , showed that there are permutation classes having every growth rate above @xmath29 .",
    "( the behaviour between @xmath28 and @xmath30 is the subject of ongoing research . )",
    "grid classes have also been a subject of investigation themselves .",
    "the first to be studied was the class of _ skew - merged _ permutations @xmath31      \\draw[very thin ] ( 0,0 ) grid ( 2,2 ) ;      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { -1,1 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,1+.5-.32*\\d)--(\\i-.18,1+.5+.32*\\d ) ; } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,-1 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,0+.5-.32*\\d)--(\\i-.18,0+.5+.32*\\d ) ; }    \\end{tikzpicture } } } } \\!$ ] . stankova  @xcite and kdzy , snevily and",
    "wang  @xcite proved that this class is @xmath32 , and atkinson  @xcite determined its generating function .",
    "more recently , waton , in his phd thesis  @xcite , enumerated @xmath31      \\draw[very thin ] ( 0,0 ) grid ( 2,2 ) ;      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,1 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,1+.5-.32*\\d)--(\\i-.18,1+.5+.32*\\d ) ; } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,0 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,0+.5-.32*\\d)--(\\i-.18,0+.5+.32*\\d ) ; }    \\end{tikzpicture } } } } \\!$ ] .",
    "in addition to these enumerations , some structural results have also been established .",
    "atkinson  @xcite proved that grid classes whose matrices have dimension @xmath33 have a finite basis .",
    "waton  @xcite proved the same for @xmath31      \\draw[very thin ] ( 0,0 ) grid ( 2,2 ) ;      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,1 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,1+.5-.32*\\d)--(\\i-.18,1+.5+.32*\\d ) ; } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,1 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,0+.5-.32*\\d)--(\\i-.18,0+.5+.32*\\d ) ; }    \\end{tikzpicture } } } } \\!$ ] , a result which has been extended by albert , atkinson and brignall  @xcite to all @xmath34 grid classes .",
    "( it is generally believed that _ all _ grid classes have a finite basis , but this has not yet been proven ; see  @xcite conjecture 2.3 . )",
    "associated with each grid class is a bipartite graph known as its `` row - column '' graph , which encapsulates certain structural information about the class .",
    "( we present its definition later in section  [ sectgridclasses ] . ) particularly of note , murphy and vatter  @xcite have shown that a grid class is _ partially well - ordered _ ( contains no infinite antichains ) if and only if its row - column graph has no cycles .",
    "moreover , albert , atkinson , bouvel , rukuc and vatter  @xcite proved a result that implies that if a grid class has an acyclic row - column graph then the generating function of the class is a rational function ( the ratio of two polynomials ) .",
    "our focus in this paper is on the growth rates of grid classes .",
    "we prove the following theorem :    thmgrowthrate the growth rate of a monotone grid class of permutations exists and is equal to the square of the spectral radius of its row - column graph .",
    "the bulk of the work required to prove this theorem is concerned with carefully counting certain families of tours on graphs , in order to give bounds on their sizes . in particular , we consider `` balanced '' tours , in which the number of times an edge is traversed in one direction is the same as the number of times it is traversed in the other direction . as a consequence , we prove the following new result concerning tours on graphs :    thmbalancedequalseven the growth rate of the family of balanced tours on a connected graph is the same as that of the family of all tours of even length on the graph .    as a consequence of theorem  [ thmgrowthrate ] , by using the machinery of spectral graph theory ,",
    "we are able to deduce a variety of supplementary results .",
    "we give a characterisation of grid classes whose growth rates are no greater than @xmath35 ( in a similar fashion to vatter s characterisation of `` small '' permutation classes in  @xcite ) .",
    "we also fully characterise all _ accumulation points _ of grid class growth rates , the least of which occurs at 4 .",
    "other results include :    coralgebraicinteger the growth rate of every monotone grid class is an algebraic integer .",
    "corcycle a monotone grid class whose row - column graph is a cycle has growth rate  4 .",
    "corsmallgrowthrates if the growth rate of a monotone grid class is less than 4 , it is equal to @xmath36 for some @xmath37 .",
    "coraccumulationpoints for every @xmath38 there is a monotone grid class with growth rate arbitrarily close to @xmath3 .    the remainder of this paper is structured as follows : in section  [ secttours ] , we introduce the particular families of tours on graphs that we study and present our results concerning these tours , culminating in the proof of theorem  [ thmbalancedequalseven ] .",
    "this is followed , in section  [ sectgridclasses ] , by the application of these results to prove our grid class growth rate result , theorem  [ thmgrowthrate ] .",
    "section  [ sectconsequences ] , contains a number of consequences of theorem  [ thmgrowthrate ] that follow from known spectral graph theoretic results .",
    "we conclude with a few final remarks .",
    "in this section , we investigate families of tours on graphs , parameterised by the number of times each edge is traversed . we determine a lower bound on the size of families of `` balanced '' tours and an upper bound on families of arbitrary tours .",
    "applying the upper bound to tours of even length gives us an expression compatible with the lower bound .",
    "combining this with the fact that any balanced tour has even length enables us to prove theorem  [ thmbalancedequalseven ] which reveals that even - length tours and balanced tours grow at the same rate .",
    "these bounds are subsequently used in section  [ sectgridclasses ] to relate tours on graphs to permutation grid classes .    to establish the lower and upper bounds , we first enumerate tours on trees .",
    "we then present a way of associating tours on an arbitrary connected graph @xmath39 with tours on a related `` partial covering '' tree , which we employ to determine bounds for families of tours on arbitrary graphs .",
    "let us begin by introducing the tours that we will be considering .",
    "a _ walk _ , of length @xmath5 , on a graph is a non - empty alternating sequence of vertices and edges @xmath40 in which the endvertices of @xmath41 are @xmath42 and @xmath43 .",
    "neither the edges nor the vertices need be distinct .",
    "we say that such a walk * traverses * edges @xmath44 and * visits * vertices @xmath45 .",
    "a _ tour _ ( or _ closed _ walk ) is a walk which starts and ends at the same vertex ( i.e. @xmath46 ) .",
    "our interest is restricted to tours .",
    "in what follows , when considering a graph with @xmath47 edges , we denote its edges @xmath48 . in any particular context",
    ", we can choose the ordering of the edges so as to simplify our presentation .",
    "we denote the edges incident to a given vertex @xmath49 by @xmath50 , where @xmath51 is the _ degree _ of @xmath49 ( number of edges incident to @xmath49 ) .",
    "again , we are free to choose the order of the edges incident to a vertex so as to clarify our arguments .",
    "our interest is in families of tours that are parameterised by the number of times each edge is traversed . given non - negative integers @xmath52 and some vertex @xmath53 of a graph @xmath39 , we use @xmath54 to denote the family of tours on @xmath39 which start and end at @xmath53 and traverse each edge @xmath41 exactly @xmath55 times .",
    "( we use @xmath56 rather than @xmath57 for families of tours to avoid confusion when considering tours on trees . )",
    "we use @xmath58 for the number of traversals of edges incident to a vertex @xmath49 in @xmath59 .",
    "so , if @xmath49 and @xmath60 are the endvertices of @xmath41 , @xmath55 has two aliases @xmath61 and @xmath62 for some @xmath63 and @xmath64 .",
    "we use @xmath65 to denote the number of these tours .",
    "note that for some values of @xmath66 , the family @xmath59 is empty .",
    "in particular , if @xmath67 is the set of edges visited by tours in the family , and @xmath68 $ ] is the subgraph of @xmath39 induced by these edges , then if @xmath69 is disconnected or does not contain @xmath53 , we have @xmath70 . a family of tours may also be empty for `` parity '' reasons ; for example , if @xmath71 is a tree , then @xmath72 if any of the @xmath55 are odd .",
    "our counting arguments must remain valid for these empty families .    of particular interest to us",
    "are tours in which the number of times an edge is traversed in one direction is the same as the number of times it is traversed in the other direction .",
    "we call such tours * balanced*.    given non - negative integers @xmath73 and some vertex @xmath53 of a graph @xmath39 , we use @xmath74 to denote the family of balanced tours on @xmath39 which start and end at @xmath53 , and traverse each edge @xmath41 exactly @xmath75 times _ in each direction_. note that we parameterise balanced tours by _ half _ the number of traversals of each edge .",
    "we use @xmath76 for the number of traversals in either direction of edges incident to a vertex @xmath49 in @xmath77 .",
    "so , if @xmath49 and @xmath60 are the endvertices of @xmath41 , @xmath75 has two aliases @xmath78 and @xmath79 for some @xmath63 and @xmath64    we use @xmath80 to denote the number of these balanced tours .    as with @xmath59",
    ", @xmath77 may be empty .",
    "observe also that , since any tour on a forest is balanced , @xmath81 for any forest @xmath82 and @xmath83 .",
    "moreover , for any graph @xmath39 , we have @xmath84 , with equality if and only if the component of @xmath69 containing @xmath53 , if present , is acyclic , where @xmath69 is the subgraph of @xmath39 induced by the edges that are actually traversed by tours in the family .      we use @xmath85 to denote the number of * visits * to @xmath49 of any tour on @xmath39 in some family ( specified by the context ) . in practice , this notation is unambiguous because we only consider one family of tours on a particular graph at a time .",
    "observe that any tour in @xmath59 visits vertex @xmath86 exactly @xmath87 times , and that for balanced tours in @xmath77 we have @xmath88 .",
    "if @xmath85 is positive , then separating the visits to @xmath49 are @xmath89 `` subtours '' starting and ending at @xmath49 ; we refer to these subtours as * excursions * from @xmath49 .      in our calculations ,",
    "we make considerable use of _ multinomial coefficients _ , with their combinatorial interpretation , for which we use the standard notation @xmath90 to denote the number of ways of distributing @xmath91 distinguishable objects between @xmath92 ( distinguishable ) bins , such that bin @xmath93 contains exactly @xmath75 objects ( @xmath94 ) .",
    "we make repeated use of the fact that a multinomial coefficient can be decomposed into a product of binomial coefficients as follows : @xmath95 we consider a multinomial coefficient that has one or more negative terms to be _",
    "zero_. this guarantees that the monotonicity condition @xmath96 holds for all possible sets of values .",
    "we begin by establishing bounds on the size of families of tours on _ trees_. as we noted above , all such tours are balanced .",
    "we start with star graphs , giving an exact enumeration of any family :    [ lemmastar ] if @xmath97 is the star graph @xmath98 with central vertex @xmath53 , then @xmath99    @xmath100 consists of all possible interleavings of @xmath75 excursions from @xmath53 out - and - back along each @xmath41 .",
    "it is possible to extend our exact enumeration to those families of balanced tours on trees in which every internal ( non - leaf ) vertex is visited at least once .",
    "these families are never empty .",
    "[ lemmatree ] if @xmath71 is a tree , @xmath101 and , for each @xmath86 , @xmath102 is the edge incident to @xmath49 that is on the unique path between @xmath53 and @xmath49 , and if @xmath103 is positive for all internal vertices @xmath49 of @xmath71 , then @xmath104    we use induction on the number of internal vertices . note that the multinomial coefficient for a leaf vertex simply contributes a factor of 1 to the product .",
    "lemma  [ lemmastar ] provides the base case .",
    "given a tree @xmath71 with @xmath47 edges @xmath105 , and a leaf @xmath49 of @xmath71 ,",
    "let @xmath106 be the tree `` grown '' from @xmath71 by attaching @xmath92 new pendant edges @xmath107 to @xmath49 .",
    "if @xmath108 is positive , since @xmath49 is a leaf , each tour in @xmath109 visits @xmath49 exactly @xmath108 times , with @xmath110 excursions from @xmath49 along @xmath111 separating these visits .",
    "any such tour can be extended to a tour in @xmath112 by arbitrarily interleaving @xmath113 new excursions out - and - back along each new pendant edge @xmath114 ( @xmath115 ) with the existing @xmath110 excursions from @xmath49 along @xmath111 .",
    "this exact enumeration can be used to generate the following general bounds on the number of tours on trees :    [ cortreebounds ] if @xmath71 is a tree , then for any vertex @xmath101 , @xmath116 satisfies the following bounds : @xmath117    if all the @xmath75 are positive , then this follows directly from lemma  [ lemmatree ] .",
    "if one or more of the @xmath75 is zero , then the lower bound is trivially true , because one of the multinomial coefficients is zero .",
    "the upper bound also holds trivially if there are no tours in the family .",
    "otherwise , let @xmath118 be the subtree of @xmath71 induced by the vertices actually visited by tours in @xmath119",
    ". then @xmath120 .",
    "but we know that @xmath121 as a result of lemma  [ lemmatree ] and the fact that @xmath122 for all edges @xmath123 incident to unvisited vertices @xmath124 .      in order to establish the lower and upper bounds for tours on arbitrary connected graphs , we relate tours on a connected graph @xmath39 to ( balanced ) tours on a related tree which we call a * treeification * of @xmath39 .",
    "the process of treeification consists of repeatedly breaking cycles until the resulting graph is acyclic .",
    "this creates a sequence of graphs @xmath125 where @xmath71 is a tree .",
    "we call this sequence a * treeification sequence*.    formally , we define a treeification of a connected graph to be the result of the following ( nondeterministic ) process that transforms a connected graph into a tree with the same number of edges .",
    "@xmath126        \\draw [ thick ] ( 1.1,0)--(0,0 ) ;        \\draw [ thick ] ( 0,0 ) -- ( .31,.95 ) ;        \\draw [ thick ] ( -.63,.36)--(0,0)--(-.57,-.57 ) ;        \\draw [ thick ] ( 0,0)--(.14,-.79 ) ;        \\draw [ dashed , thick , ] ( 1,0 ) to [ out=0,in=-45 ] ( 1.46,1.06 ) node[left]{$c$ } to [ out=135,in=72 ] ( .31,.95 ) ;        \\draw [ fill ] ( 0,0 ) circle [ radius=0.044 ] ;        \\draw [ fill ] ( 1.1,0 ) circle [ radius=0.044 ] ;        \\draw [ fill ] ( .31,.95 ) circle [ radius=0.044 ] ;        \\node at ( -.2,0 ) { $ v\\:$ } ;        \\node at ( 1.1,0.2 ) { $ x$ } ;      \\end{tikzpicture }      \\qquad      \\raisebox{.45 in }          { \\begin{tikzpicture}\\draw [ ->,ultra thick](0,0)--(.6,0);\\end{tikzpicture } }      \\qquad      \\raisebox{.4in}{$g_{j+1}\\!:\\;\\:$ }      \\begin{tikzpicture}[scale=1.36,rotate=-36 ]        \\draw [ thick ] ( 1.1,0)--(.2,0 ) ;        \\draw [ thick ] ( 0,0 ) -- ( .31,.95 ) ;        \\draw [ thick ] ( -.63,.36)--(0,0)--(-.57,-.57 ) ;        \\draw [ thick ] ( 0,0)--(.14,-.79 ) ;        \\draw [ dashed , thick , ] ( 1,0 ) to [ out=0,in=-45 ] ( 1.46,1.06 ) to [ out=135,in=72 ] ( .31,.95 ) ;        \\draw [ fill ] ( 0,0 ) circle [ radius=0.044 ] ;        \\draw [ fill ] ( .2,0 ) circle [ radius=0.044 ] ;        \\draw [ fill ] ( 1.1,0 ) circle [ radius=0.044 ] ;        \\draw [ fill ] ( .31,.95 ) circle [ radius=0.044 ] ;        \\node at ( -.2,0 ) { $ v\\:$ } ;        \\node at ( .26,.21 ) { $ v'$ } ;        \\node at ( 1.1,0.2 ) { $ x$ } ;      \\end{tikzpicture }      \\vspace{-3pt}\\ ] ]    to treeify a connected graph @xmath127 , we first give an ( arbitrary ) order to its vertices .",
    "then we apply the following vertex - splitting operation in turn to each @xmath128 to create @xmath129 ( @xmath130 ) , until no cycles remain :    1 .",
    "let @xmath49 be the first vertex ( in the ordering ) that occurs in some cycle @xmath131 of @xmath128 .",
    "2 .   split vertex @xmath49 by doing the following ( see figure  [ figvertexsplitting ] ) : 1 .",
    "delete an edge @xmath132 from @xmath133 ( there are two choices for vertex @xmath134 ) .",
    "2 .   add a new vertex @xmath135 ( to the end of the vertex ordering ) .",
    "3 .   add the pendant edge @xmath136 ( making @xmath135 a leaf ) .",
    "@xmath137        \\draw [ thick ] ( 0,2)--(0,0)--(2,0)--(2,1 ) ;        \\draw [ thick ] ( 1,0)--(1,2)--(2,2 ) ;        \\draw [ thick ] ( 1,2)--(0,2 ) ;        \\draw [ thick ] ( 1,1)--(2,1 ) ;        \\draw [ thick ] ( 2,2)--(2,1 ) ;        \\draw [ thick ] ( 0,1)--(1,1 ) ;        \\draw [ fill ] ( 0,0 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 0,1 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 0,2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 1,0 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 1,1 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 1,2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 2,0 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 2,1 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 2,2 ) circle [ radius=0.075 ] ;        \\node at ( 1,-.5 ) { $ g = g_0 $ } ;        \\node at ( -.25,2 ) { $ { } _ 1 $ } ;        \\node at ( 2.25,1 ) { $ { } _ 2 $ } ;        \\node at ( 2.25,0 ) { $ { } _ 3 $ } ;        \\node at ( 1.2,.75 ) { $ { } _ 4 $ } ;      \\end{tikzpicture }      \\qquad      \\begin{tikzpicture}[scale=0.8 ]        \\draw [ thick ] ( 0,2)--(0,0)--(2,0)--(2,1 ) ;        \\draw [ thick ] ( 1,0)--(1,2)--(2,2 ) ;        \\draw [ thick ] ( 1,2)--(0.2,2.2 ) ;        \\draw [ thick ] ( 1,1)--(2,1 ) ;        \\draw [ thick ] ( 2,2)--(2,1 ) ;        \\draw [ thick ] ( 0,1)--(1,1 ) ;        \\draw [ fill ] ( 0,0 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 0,1 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 0,2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 0.2,2.2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 1,0 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 1,1 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 1,2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 2,0 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 2,1 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 2,2 ) circle [ radius=0.075 ] ;        \\node at ( 1,-.5 ) { $ g_1 $ } ;        \\node at ( -.25,2 ) { $ { } _ 1 $ } ;        \\node at ( 2.25,1 ) { $ { } _ 2 $ } ;        \\node at ( 2.25,0 ) { $ { } _ 3 $ } ;        \\node at ( 1.2,.75 ) { $ { } _ 4 $ } ;      \\end{tikzpicture }      \\qquad      \\begin{tikzpicture}[scale=0.8 ]        \\draw [ thick ] ( 0,2)--(0,0)--(2,0)--(2,1 ) ;        \\draw [ thick ] ( 1,0)--(1,2)--(2,2 ) ;        \\draw [ thick ] ( 1,2)--(0.2,2.2 ) ;        \\draw [ thick ] ( 1,1)--(1.8,1.2 ) ;        \\draw [ thick ] ( 2,2)--(2,1 ) ;        \\draw [ thick ] ( 0,1)--(1,1 ) ;        \\draw [ fill ] ( 0,0 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 0,1 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 0,2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 0.2,2.2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 1,0 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 1,1 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 1,2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 2,0 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 2,1 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 1.8,1.2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 2,2 ) circle [ radius=0.075 ] ;        \\node at ( 1,-.5 ) { $ g_2 $ } ;        \\node at ( -.25,2 ) { $ { } _ 1 $ } ;        \\node at ( 2.25,1 ) { $ { } _ 2 $ } ;        \\node at ( 2.25,0 ) { $ { } _ 3 $ } ;        \\node at ( 1.2,.75 ) { $ { } _ 4 $ } ;      \\end{tikzpicture }      \\qquad      \\begin{tikzpicture}[scale=0.8 ]        \\draw [ thick ] ( 0,2)--(0,0)--(2,0)--(2,1 ) ;        \\draw [ thick ] ( 1,0)--(1,2)--(2,2 ) ;        \\draw [ thick ] ( 1,2)--(0.2,2.2 ) ;        \\draw [ thick ] ( 1,1)--(1.8,1.2 ) ;        \\draw [ thick ] ( 2,2)--(2.2,1.2 ) ;        \\draw [ thick ] ( 0,1)--(1,1 ) ;        \\draw [ fill ] ( 0,0 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 0,1 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 0,2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 0.2,2.2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 1,0 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 1,1 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 1,2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 2,0 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 2,1 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 1.8,1.2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 2.2,1.2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 2,2 ) circle [ radius=0.075 ] ;        \\node at ( 1,-.5 ) { $ g_3 $ } ;        \\node at ( -.25,2 ) { $ { } _ 1 $ } ;        \\node at ( 2.25,.9 ) { $ { } _ 2 $ } ;        \\node at ( 2.25,0 ) { $ { } _ 3 $ } ;        \\node at ( 1.2,.75 ) { $ { } _ 4 $ } ;      \\end{tikzpicture }      \\qquad      \\begin{tikzpicture}[scale=0.8 ]        \\draw [ thick ] ( 0,2)--(0,0)--(2,0)--(2,1 ) ;        \\draw [ thick ] ( 1,0)--(1,2)--(2,2 ) ;        \\draw [ thick ] ( 1,2)--(0.2,2.2 ) ;        \\draw [ thick ] ( 1,1)--(1.8,1.2 ) ;        \\draw [ thick ] ( 2,2)--(2.2,1.2 ) ;        \\draw [ thick ] ( 0,1)--(0.8,1.2 ) ;        \\draw [ fill ] ( 0,0 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 0,1 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 0,2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 0.2,2.2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 1,0 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 1,1 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 0.8,1.2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 1,2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 2,0 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 2,1 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 1.8,1.2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 2.2,1.2 ) circle [ radius=0.075 ] ;        \\draw [ fill ] ( 2,2 ) circle [ radius=0.075 ] ;        \\node at ( 1,-.5 ) { $ g_4=t$ } ;        \\node at ( -.25,2 ) { $ { } _ 1 $ } ;        \\node at ( 2.25,.9 ) { $ { } _ 2 $ } ;        \\node at ( 2.25,0 ) { $ { } _ 3 $ } ;        \\node at ( 1.2,.75 ) { $ { } _ 4 $ } ;      \\end{tikzpicture}\\ ] ]    note that if a vertex @xmath49 is split multiple times when treeifying a graph @xmath39 , these splits occur contiguously ( because of the ordering placed on the vertices of @xmath39 ) .",
    "thus , if @xmath49 is split @xmath92 times , there is a contiguous subsequence @xmath138 of the treeification sequence that corresponds to the splitting of @xmath49 .",
    "see figure  [ figtreeify ] for an example of a treeification sequence .",
    "there is a natural way to establish a relationship between tours on different graphs in a treeification sequence @xmath139 .",
    "the treeification process induces _ graph homomorphisms _",
    "( edge preserving maps ) between the graphs in such a sequence . for all @xmath140 ,",
    "there is a _ surjective _ homomorphism from @xmath128 onto @xmath141 .",
    "this homomorphism is also _ locally injective _ since it maps neighbourhoods of @xmath128 injectively into neighbourhoods of @xmath141 . a locally injective map such as this is also known as a",
    "partial cover_. in particular , for each @xmath142 , there is a partial cover of @xmath129 onto @xmath128 that maps the new pendant edge @xmath136 to the edge @xmath132 that it replaces .",
    "these homomorphisms impart a natural correspondence between families of tours on different graphs in the treeification sequence , which we will employ later to determine our bounds .",
    "although the concept of treeification is a very natural one , these particular `` partial covering trees '' do not appear to have been studied before ; their only previous use seems to be by yarkony , fowlkes and ihler to address a problem in computer vision @xcite . for a general introduction to graph homomorphisms ,",
    "see see the monograph by hell and neetil  @xcite . for more on partial maps and other locally constrained graph homomorphisms ,",
    "see the survey article by fiala and kratochvl  @xcite .",
    "if we have a treeification sequence @xmath143 for a connected graph @xmath39 , we can use a three - stage process to establish a lower or upper bound for a family of tours on @xmath39 . in the first stage",
    "( `` splitting once '' ) , we relate the number of tours in the family on @xmath128 ( @xmath142 ) to the number of tours in a related family on @xmath129 . in the second stage",
    "( `` fully splitting one vertex '' ) , for a vertex @xmath49 , we consider the subsequence @xmath144 that corresponds to the splitting of @xmath49 and , iterating the inequality from the first stage , relate the number of tours on @xmath128 to the number of tours on @xmath145 .",
    "finally ( `` fully splitting all vertices '' ) , iterating the inequality from the second stage , we relate the number of tours on @xmath127 to the number of tours on @xmath146 , and employ the bounds on tours on @xmath71 from corollary  [ cortreebounds ] to determine the bound for the family of tours on @xmath39 .    in subsection  [ sectlowerbound ]",
    ", we use this three - stage process to produce a lower bound on @xmath147 .",
    "then , in subsection  [ sectupperbound ] , we use the same three - stage process to establish an upper bound on @xmath148 .",
    "our lower bound is on the number of _ balanced _ tours .",
    "we only consider the families in which _ every _ edge is traversed at least once in each direction . on a connected graph , these families are never empty .",
    "[ lemmalowerbound ] if @xmath39 is a connected graph with @xmath47 edges and @xmath149 are all positive , then for any vertex @xmath150 , @xmath151    this lower bound does not hold in general for a _ disconnected _ graph since there are no tours possible if there is any positive @xmath75 in a component not containing @xmath53 .",
    "let @xmath71 be some treeification of @xmath39 with treeification sequence @xmath143 in which vertex @xmath53 is never split .",
    "( this is possible by positioning @xmath53 last in the ordering on the vertices . )    by exhibiting a surjection from @xmath77 onto @xmath119 that is consistent with the homomorphism from @xmath71 onto @xmath39 induced by the treeification process , we determine an inequality relating the number of tours in the two families .",
    "our first stage is to associate a number of tours on @xmath128 , in @xmath152 , to each tour on @xmath129 , in @xmath153 .    to simplify the notation ,",
    "let @xmath154 and @xmath155 for some @xmath142 .",
    "let @xmath49 be the vertex of @xmath156 that is split in @xmath157 , and let @xmath135 be the leaf vertex in @xmath157 added when splitting @xmath49 .",
    "let @xmath158 be the ( only ) edge incident to @xmath135 in @xmath157 ; we also use @xmath158 to refer to the corresponding edge ( incident to @xmath49 ) in @xmath156 ( see figure  [ figsplittinglb ] ) .    @xmath159        \\draw [ thick ] ( 1.1,0)--(.2,0 ) node[midway , below]{$e_1 $ } ;        \\draw [ thick ] ( 1,.2)--(.55,.2 ) node[very near end , right]{$\\;k_1 $ } ;        \\draw [ thick ] ( .55,.2 ) to [ out=180,in=90](.5,.15 ) to [ out=-90,in=180](.55,.1 ) ;        \\draw [ < -,thick ] ( 1,.1)--(.55,.1 ) ;        \\draw [ thick ] ( 0,0 ) -- ( .31,.95 ) ;        \\draw [ thick ] ( -.63,.36)--(0,0)--(-.57,-.57 ) ;        \\draw [ thick ] ( 0,0)--(.14,-.79 ) ;        \\draw [ dashed , thick , ] ( 1,0 ) to [ out=0,in=-45 ] ( 1.46,1.06 ) to [ out=135,in=72 ] ( .31,.95 ) ;        \\draw [ fill ] ( 0,0 ) circle [ radius=0.044 ] ;        \\draw [ fill ] ( .2,0 ) circle [ radius=0.044 ] ;        \\draw [ fill ] ( 1.1,0 ) circle [ radius=0.044 ] ;        \\draw [ fill ] ( .31,.95 ) circle [ radius=0.044 ] ;        \\node at ( -.2,0 ) { $ v\\:$ } ;        \\node at ( .26,.21 ) { $ v'$ } ;      \\end{tikzpicture }      \\qquad      \\raisebox{.45 in }          { \\begin{tikzpicture}\\draw [ ->,ultra thick](0,0)--(.6,0);\\end{tikzpicture } }      \\qquad      \\raisebox{.4in}{${h_0}=g_j\\!:\\;\\:$ }      \\begin{tikzpicture}[scale=1.36,rotate=-36 ]        \\draw [ thick ] ( 1.1,0)--(0,0 ) node[midway , below]{$e_1 $ } ;        \\draw [ ->,thick ] ( .95,.1)--(.45,.1 ) ;        \\draw [ < -,thick ] ( .95,.2)--(.45,.2 ) node[very near end , right]{$\\;k_1 $ } ;        \\draw [ thick ] ( 0,0 ) -- ( .31,.95 ) ;        \\draw [ thick ] ( -.63,.36)--(0,0)--(-.57,-.57 ) ;        \\draw [ thick ] ( 0,0)--(.14,-.79 ) ;        \\draw [ dashed , thick , ] ( 1,0 ) to [ out=0,in=-45 ] ( 1.46,1.06 )          to [ out=135,in=72 ] ( .31,.95 ) ;        \\draw [ fill ] ( 0,0 ) circle [ radius=0.044 ] ;        \\draw [ fill ] ( 1.1,0 ) circle [ radius=0.044 ] ;        \\draw [ fill ] ( .31,.95 ) circle [ radius=0.044 ] ;        \\node at ( -.2,0 ) { $ v\\:$ } ;      \\end{tikzpicture }      \\vspace{-3pt}\\ ] ]    any tour in @xmath160 visits vertex @xmath49 exactly @xmath161 times and visits vertex @xmath135 ( along @xmath158 ) @xmath162 times . the corresponding tour on @xmath156 visits @xmath49 exactly @xmath163 times . of these visits",
    "there are @xmath162 which arrive along @xmath158 and then depart along @xmath158",
    ".    since @xmath164 is positive , separating the visits are @xmath165 excursions from @xmath49 . depending on whether the final visit to @xmath49 departs along @xmath158 or",
    "not , either @xmath166 or @xmath162 of these excursions begin with a traversal of @xmath158 ; these are interleaved with the other @xmath161 or @xmath167 excursions which begin with a traversal of some other edge .    changing the interleaving of these two sets of excursions ( without altering their internal ordering ) produces at least @xmath168 \\;\\geqslant\\ ; \\binom{{\\psi({h_0},v)}-2}{k_1 - 1}\\ ] ] distinct tours in @xmath169 .",
    "note that there is only one interleaving of the sets of excursions that corresponds to a valid tour in @xmath160 : the one in which the excursions beginning with a traversal of @xmath158 away from @xmath49 are arranged so they occur immediately following a traversal of @xmath158 towards  @xmath49 .",
    "hence we can deduce that @xmath170      for a given vertex @xmath49 , let @xmath171 be the subsequence of graphs that corresponds to the splitting of @xmath49 .",
    "in our second stage , we relate the number of tours on @xmath172 to the number of tours on @xmath173 .",
    "note that @xmath174 and @xmath175 since the splitting of other vertices can not affect the number of visits to @xmath49 .",
    "let @xmath176 be the new pendant edges in @xmath173 , and hence also in @xmath71 , added when @xmath49 is split , and let @xmath176 also denote the corresponding edges in @xmath39 .",
    "then @xmath177 for @xmath94 , and thus @xmath178 , and in particular @xmath179 .",
    "hence , by iterating inequality  , @xmath180 = \\;\\ ; & \\prod_{i=1}^r\\binom{{\\psi(t , v)}+\\big(\\sum_{j = i}^r k_j\\big)-2}{k_i-1 } { \\hspace{0.1 em}}{w^{{}^{\\text{\\textsf{\\textbf{b}}}}}}_{h_r}((k_i);u ) \\nonumber\\\\[10pt ] \\geqslant\\;\\ ; & \\prod_{i=1}^r\\binom{{\\psi(t , v)}+\\big(\\sum_{j = i}^r ( k_j-1)\\big)-1}{k_i-1 } { \\hspace{0.1 em}}{w^{{}^{\\text{\\textsf{\\textbf{b}}}}}}_{h_r}((k_i);u ) \\nonumber\\\\[10pt ] = \\;\\ ; & \\binom{{\\psi(g , v)}-(r+1)}{{\\psi(t , v)}-1,\\,k_1 - 1,\\,k_2 - 1,\\,\\ldots,\\,k_r-1 } { \\hspace{0.1 em}}{w^{{}^{\\text{\\textsf{\\textbf{b}}}}}}_{h_r}((k_i);u).\\end{aligned}\\ ] ]      finally , our third stage is to relate the number of tours on @xmath39 to the number of tours on @xmath71 and then apply the tree bounds to establish the required lower bound .    for each @xmath181 ,",
    "let @xmath182 be the number of times @xmath49 is split .",
    "note that @xmath182 is less than the degree of @xmath49 in @xmath39 since @xmath183 .",
    "thus , with a suitable indexing of the edges around each vertex , if we iterate inequality   and combine with the lower bound on @xmath184 from corollary  [ cortreebounds ] , we get @xmath185 \\geqslant\\;\\ ; & \\prod_{v\\in v(g ) } \\binom{{\\psi(g , v)}-(r(v)+1)}{{\\psi(t , v)}-1,\\,{k^v_1}-1,\\,\\ldots,\\,{k^v_{r(v)}}-1 } \\binom{{\\psi(t , v)}-{d}_t(v)}{{k^v_{r(v)+1}}\\!-\\!1,\\,\\ldots,\\,{k^v_{{d}_g(v)}}\\!-\\!1 } \\\\[10pt ] \\;\\;\\geqslant\\;\\ ; & \\prod_{v\\in v(g ) } \\binom{{\\psi(g , v)}-{d}_g(v)}{{k^v_1}-1,\\,{k^v_2}-1,\\,\\ldots,\\,{k^v_{{d}_g(v)}}-1}\\end{aligned}\\ ] ] concluding the proof of lemma  [ lemmalowerbound ] .",
    "our upper bound applies to arbitrary families of tours @xmath59 , without any restriction on the values of the @xmath55 .",
    "subsequently , we will apply this result to families of tours of even length .",
    "[ lemmaupperbound ] if @xmath39 is a connected graph with @xmath47 edges and @xmath53 is any vertex of @xmath39 , then @xmath186 for some @xmath187 $ ] @xmath188 , where @xmath189 is the length of the tours in the family and @xmath190 are the @xmath75 corresponding to edges incident to @xmath49 .",
    "let @xmath71 be some treeification of @xmath39 with treeification sequence @xmath143 in which vertex @xmath53 is never split .",
    "( this is possible by positioning @xmath53 last in the ordering on the vertices . )",
    "we relate the number of ( arbitrary ) tours in @xmath59 to the number of ( balanced ) tours in @xmath119 , for some @xmath75 not much greater than @xmath191 .",
    "this is achieved by exhibiting a surjection from @xmath119 onto @xmath59 that is consistent with the homomorphism from @xmath71 onto @xmath39 induced by the treeification process .",
    "the proof is broken down into the same three stages as for the proof of the lower bound .",
    "initially , we restrict ourselves to the case in which all the @xmath85 are positive .",
    "the case of unvisited vertices is addressed in an additional stage at the end .",
    "our first stage is to associate to each tour on @xmath128 a number of tours on @xmath129 .",
    "however , unlike in the proof of the lower bound , the relationship is not between classes with the same parameterisation .",
    "rather , we relate tours in @xmath192 to slightly longer tours in @xmath193 , for some @xmath194 such that , for each @xmath93 , @xmath195 .    as we did for the lower bound , let @xmath154 and @xmath155 for some @xmath142 .",
    "let @xmath49 be the vertex of @xmath156 that is split in @xmath157 , and let @xmath135 be the leaf vertex in @xmath157 added when splitting @xmath49 .",
    "again , let @xmath158 be the ( only ) edge incident to @xmath135 in @xmath157 ; we also use @xmath158 to refer to the corresponding edge ( incident to @xmath49 ) in @xmath156 .",
    "let @xmath131 be some cycle in @xmath156 containing @xmath158 , and let @xmath196 be the other edge on @xmath131 that is incident to @xmath49 ( in both @xmath156 and @xmath157 ) .",
    "@xmath197        \\draw [ thick ] ( 1.1,0)--(0,0 ) node[midway , below]{$e_1 $ } ;        \\draw [ < ->,thick ] ( .95,.1)--(.45,.1 ) node[very near end , right]{$\\;h_1 $ } ;        \\draw [ thick ] ( 0,0 ) -- ( .31,.95 ) node[midway , above]{$e_2\\;$ } ;        \\draw [ thick ] ( -.63,.36)--(0,0)--(-.57,-.57 ) ;        \\draw [ thick ] ( 0,0)--(.14,-.79 ) ;        \\draw [ dashed , thick , ] ( 1,0 ) to [ out=0,in=-45 ] ( 1.46,1.06 ) node[left]{$c$ } to [ out=135,in=72 ] ( .31,.95 ) ;        \\draw [ fill ] ( 0,0 ) circle [ radius=0.044 ] ;        \\draw [ fill ] ( 1.1,0 ) circle [ radius=0.044 ] ;        \\draw [ fill ] ( .31,.95 ) circle [ radius=0.044 ] ;        \\node at ( -.2,0 ) { $ v\\:$ } ;      \\end{tikzpicture }      \\qquad      \\raisebox{.45 in }          { \\begin{tikzpicture}\\draw [ ->,ultra thick](0,0)--(.6,0);\\end{tikzpicture } }      \\qquad      \\raisebox{.4in}{$h = g_{j+1}\\!:\\;\\:$ }      \\begin{tikzpicture}[scale=1.36,rotate=-36 ]        \\draw [ thick ] ( 1.1,0)--(.2,0 ) node[midway , below]{$e_1 $ } ;        \\draw [ thick ] ( 1,.2)--(.55,.2 ) node[very near end , right]{$\\;k_1 $ } ;        \\draw [ thick ] ( .55,.2 ) to [ out=180,in=90](.5,.15 ) to [ out=-90,in=180](.55,.1 ) ;        \\draw [ < -,thick ] ( 1,.1)--(.55,.1 ) ;        \\draw [ thick ] ( 0,0 ) -- ( .31,.95 ) node[midway , above]{$e_2\\;$ } ;        \\draw [ thick ] ( -.63,.36)--(0,0)--(-.57,-.57 ) ;        \\draw [ thick ] ( 0,0)--(.14,-.79 ) ;        \\draw [ dashed , thick , ] ( 1,0 ) to [ out=0,in=-45 ] ( 1.46,1.06 ) to [ out=135,in=72 ] ( .31,.95 ) ;        \\draw [ fill ] ( 0,0 ) circle [ radius=0.044 ] ;        \\draw [ fill ] ( .2,0 ) circle [ radius=0.044 ] ;        \\draw [ fill ] ( 1.1,0 ) circle [ radius=0.044 ] ;        \\draw [ fill ] ( .31,.95 ) circle [ radius=0.044 ] ;        \\node at ( -.2,0 ) { $ v\\:$ } ;        \\node at ( .26,.21 ) { $ v'$ } ;      \\end{tikzpicture }      \\vspace{-3pt}\\ ] ]    given a tour on @xmath156 , we want to modify it so that the result is a valid tour on @xmath157 . for a tour on @xmath156 to be valid on @xmath157 , each traversal of @xmath158 towards @xmath49 must be immediately followed by a traversal of @xmath158 from @xmath49 .",
    "see figure  [ figsplittingub ] .    to achieve this ,",
    "we make three kinds of changes to excursions from @xmath49 :    1 .",
    "reverse the direction of some of the excursions .",
    "add one or two additional excursions ( around @xmath131 ) .",
    "3 .   modify the interleaving of excursions .    to manage the details , given a tour on @xmath156 , we consider the @xmath165 excursions from @xmath49 to be partitioned into subsets as follows :    [ cols= \" >",
    ", < \" , ]     we also refer to and excursions as * 1-initial * , and and excursions as * * .",
    "we refer to the edge traversed in arriving for the first visit to @xmath49 as the * arrival edge * and to the edge traversed in departing from the last visit to @xmath49 as the * departure edge*. we call their traversals the * arrival * and the * departure * respectively . to account for these ,",
    "we define @xmath198 to be @xmath199 if the departure edge is @xmath158 and to be @xmath200 otherwise , and define @xmath201 to be @xmath202 if the arrival edge is @xmath158 and to be @xmath203 otherwise .",
    "so , to transform a tour on @xmath156 into one on @xmath157 , we perform the following three steps :    1 .   if @xmath204 , reverse the direction of the last @xmath205 of the excursions ( making them ) . + on the other hand , if @xmath206 , reverse the direction of the last @xmath207 of the excursions ( making them ) .",
    "+ update the values of @xmath200 and @xmath203 to reflect these reversals ; we now have @xmath208 or @xmath209 .",
    "2 .   if @xmath210 is even ( @xmath211 is even ) or @xmath212 ( the departure edge _ is nt _",
    "@xmath158 ) , add a new excursion consisting of a tour around the cycle @xmath131 ( returning to @xmath49 along @xmath196 ) ; this should be added following all the existing excursions . + also , if @xmath210 is even ( @xmath211 is even ) or @xmath213 ( the departure edge _ is _",
    "@xmath158 ) , add a new excursion consisting of a tour around the cycle @xmath131 ( departing from @xmath49 along @xmath196 ) ; this should be added following all the existing excursions .",
    "+ update the values of @xmath200 and @xmath203 to reflect the presence of the new excursion(s ) ; we now have @xmath214 .",
    "3 .   change the interleaving of the 1-initial excursions with the excursions so that each visit to @xmath49 along @xmath158 returns immediately along @xmath158 .",
    "this is always possible ( see below ) and there is only one way of doing it .",
    "we now have a valid tour on @xmath157 .     & -1&3 - 2&3 - 1&@xmath215**1 - 1**@xmath215&3 - 1&2 - 1&2 - 1&3 - 2&@xmath215**1 - 3**@xmath215&3 - 1&2 - 2&@xmath215**1 - 1**@xmath215&&2- + step  1&-1&3 - 2&3 - 1&@xmath215**1 - 1**@xmath215&3 - 1&2 - 1&@xmath216**_1 - 2_**@xmath216&3 - 2&@xmath215**1 - 3**@xmath215&@xmath216**_1 - 3_**@xmath216&2 - 2&@xmath215**1 - 1**@xmath215&&2- + step  2&-1&3 - 2&3 - 1&@xmath215**1 - 1**@xmath215&3 - 1&2 - 1&@xmath215**1 - 2**@xmath215&3 - 2&@xmath215**1 - 3**@xmath215&@xmath215**1 - 3**@xmath215&2 - 2&@xmath215**1 - 1**@xmath215&@xmath215**1 - 2**@xmath215&2- + step  3&-1&@xmath215**1 - 1**@xmath215&@xmath215**1 - 2**@xmath215&3 - 2&3 - 1&@xmath215**1 - 3**@xmath215&3 - 1&@xmath215**1 - 3**@xmath215&2 - 1&@xmath215**1 - 1**@xmath215&@xmath215**1 - 2**@xmath215&3 - 2&2 - 2&2- +     & -3&@xmath215**1 - 1**@xmath215&@xmath215**1 - 3**@xmath215&@xmath215**1 - 3**@xmath215&3 - 1&@xmath215**1 - 2**@xmath215&3 - 3&@xmath215**1 - 2**@xmath215&2 - 1&@xmath215**1 - 1**@xmath215&3 - 1&2 - 3&@xmath215**1 - 1**@xmath215&&&1- + step  1&-3&@xmath215**1 - 1**@xmath215&@xmath215**1 - 3**@xmath215&@xmath215**1 - 3**@xmath215&3 - 1&@xmath215**1 - 2**@xmath215&3 - 3&@xmath215__2 - 1__@xmath215&2 - 1&@xmath215**1 - 1**@xmath215&3 - 1&2 - 3&@xmath215**1 - 1**@xmath215&&&1- + step  2&-3&@xmath215**1 - 1**@xmath215&@xmath215**1 - 3**@xmath215&@xmath215**1 - 3**@xmath215&3 - 1&@xmath215**1 - 2**@xmath215&3 - 3&2 - 1&2 - 1&@xmath215**1 - 1**@xmath215&3 - 1&2 - 3&@xmath215**1 - 1**@xmath215&@xmath215**1 - 2**@xmath215&2 - 1&1- + step",
    "3&-3&3 - 1&@xmath215**1 - 1**@xmath215&@xmath215**1 - 3**@xmath215&3 - 3&2 - 1&@xmath215**1 - 3**@xmath215&2 - 1&@xmath215**1 - 2**@xmath215&3 - 1&@xmath215**1 - 1**@xmath215&@xmath215**1 - 1**@xmath215&@xmath215**1 - 2**@xmath215&2 - 3&2 - 1&1- +    figure  [ figmodifyexcursions ] shows two examples of this process .",
    "the two - digit entries in the table represent the initial and final edges traversed by excursions from @xmath49 ; the single - digit entries give the arrival and departure edges ; @xmath217 is an additional edge incident to @xmath49 .",
    "1-initial excursions ( whose interleaving with the excursions is modified by step  3 ) are shown in bold . in step  1 ,",
    "excursions which are reversed are shown in italics .",
    "if we consider the 1-initial excursions and the excursions as two separate lists , with the excursions ( together with the arrival and departure ) as `` fixed '' , then we can insert 1-initial excursions into the list of excursions as follows :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ following each excursion ( and the arrival if it is along @xmath158 ) , place the next unused excursion together with any unused 1 - 1 excursions that precede it .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    this procedure is successful , and ensures that each visit to @xmath49 along @xmath158 returns immediately along @xmath158 as along as the number of traversals of @xmath158 towards @xmath49 equals the number of traversals of @xmath158 away from @xmath49 , unless either    * the departure edge is _ not _ @xmath158 and the last 1-initial excursion is a 1 - 1 excursion ( the minimal example being  , using the notation of figure  [ figmodifyexcursions ] ) , or * the departure edge _ is _ @xmath158 and the last excursion is a excursion ( the minimal example being ) .    the rules controlling the addition of new final and excursions in step  2 guarantee both that the number of traversals of @xmath158 towards @xmath49 is the same as the number of traversals of @xmath158 away from @xmath49 , and also that neither of the two exceptional cases occur .",
    "thus step  3 is always valid .",
    "step  2 can add at most two additional excursions from @xmath49 ( around @xmath131 ) , so given a tour in @xmath218 , this process produces a tour in @xmath219 where @xmath220 , and for each @xmath93 , @xmath195 .",
    "after completing step  1 , there are @xmath221 ways in which it could be undone ( reverse no more than @xmath200 excursions , reverse no more than @xmath203 excursions , or do nothing ) . since @xmath222",
    ", this does not exceed @xmath223 .",
    "also , after step  3 , there are either @xmath162 or @xmath166 excursions that begin with a traversal of @xmath158 that could , prior to the step , have been arbitrarily interleaved with those that do nt .",
    "thus we see that there are no more than @xmath224 \\;\\leqslant\\ ; 2{\\hspace{0.1 em}}k_1\\binom{{\\psi(h , v)}+k_1}{k_1}\\ ] ] distinct tours in @xmath218 that generate any specific tour in @xmath219 .    hence , @xmath225    note also that either @xmath226 or @xmath227 ( depending on whether @xmath211 is even or odd ) , and so @xmath228 furthermore , @xmath161 is positive , since the additional excursion(s ) ensure that @xmath229 is positive .      for a given vertex @xmath49 , let @xmath171 be the subsequence of graphs that corresponds to the splitting of @xmath49 . in the second stage of our proof , we relate the number of tours on @xmath172 to the number of tours on @xmath173 .",
    "note again that @xmath174 and @xmath175 since the splitting of other vertices can not affect the number of visits to @xmath49 .",
    "we assume that @xmath85 is positive , and hence that @xmath230 are all positive too .",
    "let @xmath176 be the new pendant edges in @xmath71 added when @xmath49 is split , and let @xmath176 also denote the corresponding edges in @xmath39 .",
    "then , by  , for some @xmath231 such that @xmath232 , we have @xmath233 , and thus @xmath234 hence , by iterating inequality  , if @xmath235 for @xmath94 , then for some @xmath236 such that @xmath237 , @xmath238 < \\;\\ ; & 2^r { \\hspace{0.1 em}}\\bigg(\\prod_{i=1}^r k_i{\\hspace{0.1 em}}\\binom{{\\psi(t , v)}+\\sum_{j = i}^r k_j}{k_i}\\!\\bigg ) { \\hspace{0.1 em}}w_{h_r}((h'_i);u ) \\nonumber \\\\[10pt ] = \\;\\ ; & 2^r { \\hspace{0.1 em}}\\big(\\prod_{i=1}^rk_i\\big ) { \\hspace{0.1 em}}\\binom{{\\psi(t , v)}+ \\sum_{i=1}^r k_i }",
    "{ { \\psi(t , v)},\\,k_1,\\,\\ldots,\\,k_r } { \\hspace{0.1 em}}w_{h_r}((h'_i);u).\\end{aligned}\\ ] ]      in the third stage of the proof , we relate the number of tours on @xmath39 to the number of tours on @xmath71 and then apply the tree bounds to establish the required upper bound for the case in which all the @xmath85 are positive .    for each @xmath181 , let @xmath182 be the number of times @xmath49 is split .",
    "also , let @xmath189 be the length of the tours in @xmath59 .",
    "thus , with a suitable indexing of the edges around each vertex , if we iterate inequality   and combine with the upper bound on @xmath184 from corollary  [ cortreebounds ] , we get , for some @xmath149 such that @xmath239 , @xmath240 \\leqslant\\;\\ ; & ( h+2m)^m \\prod_{v\\in v(g ) } \\binom{{\\psi(t , v)}+ \\sum_{i=1}^{r(v ) } k^v_i } { { \\psi(t , v)},\\,k^v_1,\\,\\ldots,\\,k^v_{r(v ) } } { \\hspace{0.1 em}}\\binom{{\\psi(t , v)}}{{k^v_{r(v)+1}},\\,\\ldots,\\,{k^v_{{d}_g(v ) } } } \\\\[10pt ] = \\;\\ ; & ( h+2m)^m \\prod_{v\\in v(g ) } \\binom { k^v_1+\\ldots+k^v_{{d}(v ) } } { k^v_1,\\,\\ldots,\\,k^v_{{d}(v)}},\\end{aligned}\\ ] ] using the fact that for each @xmath93 , we have @xmath241 .      thus we have the desired result for the case in which all the @xmath85 are positive . to complete the proof",
    ", we consider families of tours in which some of the vertices are not visited .",
    "if not all the @xmath85 are positive , then let @xmath69 be the subgraph of @xmath39 induced by the vertices actually visited by tours in @xmath59",
    ". then @xmath242 .",
    "but we know that @xmath243 \\;\\leqslant\\;\\ ; & ( h+2m)^m \\prod_{v\\in v(g ) } \\binom { k^v_1+\\ldots+k^v_{{d}(v ) } } { k^v_1,\\,\\ldots,\\,k^v_{{d}(v)}}\\end{aligned}\\ ] ] because the inclusion of the unvisited vertices in @xmath244 can not decrease the value of the product .",
    "so the bound holds for any family @xmath59 .",
    "this concludes the proof of lemma  [ lemmaupperbound ] .      in this subsection",
    ", we consider the family of all tours of _ even length _ on a graph and prove that it grows at the same rate as the more restricted family of all balanced tours .",
    "to do this , we make use of the fact that the growth rate of a collection of objects does not change if we make `` small '' changes to what we are counting .",
    "this follows directly from the definition of the growth rate .",
    "we will also use this observation when we consider the relationship between permutation grid classes and families of tours on graphs in the next section .",
    "[ obsgrpolysum ] if @xmath245 is a collection of objects , containing @xmath246 objects of each size @xmath5 , that has a finite growth rate , then for any positive polynomial @xmath247 and fixed non - negative integers @xmath248 with @xmath249 , @xmath250    we can employ our upper bound for @xmath148 to give us an upper bound for tours of a specific even length .",
    "we use @xmath251 to denote the number of tours of length @xmath252 starting and ending at vertex @xmath53 .",
    "[ lemmaupperboundnew ] if @xmath39 is a connected graph with @xmath47 edges and @xmath53 is any vertex of @xmath39 , then the number of tours of length @xmath253 on @xmath39 starting and ending at vertex @xmath53 is bounded above as follows : @xmath254    from lemma  [ lemmaupperbound ] , for any vertex @xmath53 of a graph @xmath39 with @xmath47 edges , we know that @xmath255 & \\leqslant & ( 2k+2m)^m \\displaystyle \\sum\\limits_{h_1+\\ldots+h_m\\,=\\,2k } { \\hspace{0.1 em}}{\\hspace{0.1 em}}\\prod\\limits_{v\\in v(g)}\\dbinom{{k^v_1}+{k^v_2}+\\ldots+{k^v_{{d}(v ) } } } { { k^v_1},\\,{k^v_2},\\,\\ldots,\\,{k^v_{{d}(v ) } } } \\end{array}\\ ] ] where each @xmath75 is dependent on the sequence @xmath256 with @xmath239",
    ".    there are no more than @xmath257 different values of the @xmath55 that give rise to any specific set of @xmath75 , and we have @xmath258 , so @xmath259    now , drawing together our upper and lower bounds enables us to deduce that the family of balanced tours on a graph @xmath39 grows at the same rate as the family of all tours of even length on @xmath39 .",
    "we use @xmath260 for the family of all balanced tours on @xmath39 and @xmath261 for the family of all tours of even length on @xmath39 , where , in both cases , we consider the size of a tour to be _ half _ its length .",
    "[ thmbalancedequalseven ] the growth rate of the family of balanced tours ( @xmath260 ) on a connected graph is the same as growth rate of the family of all tours of even length ( @xmath261 ) on the graph .    from lemma  [ lemmalowerbound ] , we know that @xmath262 substitution in the inequality in the statement of lemma  [ lemmaupperboundnew ] then yields the following relationship between families of even - length and balanced tours : @xmath263 where @xmath264 is the number of balanced tours of length @xmath265 on @xmath39 starting and ending at @xmath53 . combining this with observation  [ obsgrpolysum ] and the fact that @xmath266 produces the result @xmath267 .",
    "finally , before moving on to the relationship with permutation grid classes , we determine the value of the growth rate of the family of even - length tours @xmath261 .",
    "this requires only elementary algebraic graph theory .",
    "we recall here the relevant concepts .",
    "the * adjacency matrix * , @xmath268 of a graph @xmath39 has rows and columns indexed by the vertices of @xmath39 , with @xmath269 or @xmath270 according to whether vertices @xmath93 and @xmath63 are adjacent ( joined by an edge ) or not .",
    "the * spectral radius * @xmath271 of a graph @xmath39 is the largest eigenvalue ( which is real and positive ) of its adjacency matrix .",
    "[ lemmagreven ] the growth rate of @xmath261 exists and is equal to the square of the spectral radius of @xmath39 .    if @xmath39 has @xmath91 vertices , then @xmath272 where the @xmath273 are the ( real ) eigenvalues of @xmath274 , the adjacency matrix of @xmath39 , since the diagonal entries of @xmath275 count the number of tours of length @xmath253 starting at each vertex .",
    "thus , @xmath276 now the spectral radius is given by @xmath277 so we can conclude that @xmath278 thus , @xmath279 .",
    "in this section , we prove our main theorem , that the growth rate of a monotone grid class of permutations is equal to the square of the spectral radius of its row - column graph .",
    "the proof is as follows : first , we present an explicit expression for the number of _ gridded permutations _ of a given length .",
    "then , we use this to show that the class of gridded permutations grows at the same rate as the family of tours of even length on its row - column graph .",
    "finally , we demonstrate that the growth rate of a grid class is the same as the growth rate of the corresponding class of gridded permutations .",
    "let us begin by formally introducing the relevant permutation grid class concepts .",
    "when defining grid classes , to match the way we view permutations graphically , we index matrices from the lower left corner , with the order of the indices reversed from the normal convention . for example , @xmath280 is the entry in the second column from the left in the bottom row of @xmath16 .",
    "@xmath15      {    \\foreach \\y [ count=\\x ] in { 3,1,5,6,7,4,8,2 } \\fill[radius=0.275 ] ( \\x,\\y ) circle ;    \\draw[thick ] ( .5,.5 ) rectangle ( 8.5,8.5 ) ; }        \\draw[thick ] ( 5.5,.5 ) -- ( 5.5,8.5 ) ;        \\draw[thick ] ( .5,2.5 ) -- ( 8.5,2.5 ) ;    \\end{tikzpicture }    \\vspace{-6pt}\\ ] ]    if @xmath16 is a @xmath281 matrix with @xmath282 columns and @xmath53 rows , then an * @xmath16-gridding * of a permutation @xmath7 of length @xmath5 is a pair of sequences @xmath283 ( the * column dividers * ) and @xmath284 ( the * row dividers * ) such that for all @xmath285 and @xmath286 , @xmath287 and @xmath288 and the subsequence of @xmath7 with indices between @xmath289 and @xmath290 and values between @xmath291 and @xmath292 is increasing if @xmath293 , decreasing if @xmath294 , and empty if @xmath295 . for example , in figure  [ figgridding ] , @xmath296 and @xmath297 .    the * grid class * @xmath0 is then defined to be the set of all permutations that have an @xmath16-gridding .",
    "the * griddings * of a permutation in @xmath0 are its @xmath16-griddings .",
    "we say that @xmath0 has * size * @xmath47 if its matrix @xmath16 has @xmath47 non - zero entries .",
    "the concept of a grid class of permutations has been generalised , permitting arbitrary permutation classes in each cell ( see vatter  @xcite ) .",
    "we only consider _ monotone _ grid classes in this paper , which we simply call `` grid classes '' .",
    "an interactive demonstration of grid classes is available online  @xcite .",
    "sometimes we need to consider a permutation along with a specific gridding . in this case",
    ", we refer to a permutation together with an @xmath16-gridding as an * @xmath16-gridded permutation*. we use @xmath298 to denote the class of all @xmath16-gridded permutations , every permutation in @xmath0 being present once with each of its griddings .",
    "we use @xmath299 for the set of @xmath16-gridded permutations of length @xmath5 .",
    "if @xmath16 has @xmath282 rows and @xmath53 columns , the * row - column graph * , @xmath1 , of @xmath0 is the _ bipartite _",
    "graph with vertices @xmath300 and an edge between @xmath301 and @xmath302 if and only if @xmath303 ( see figure  [ figrowcolumngraph ] for an example ) .",
    "note that any bipartite graph is the row - column graph of some grid class , and that the size ( number of edges ) of the row - column graph is the same as the size ( number of non - zero cells ) of the grid class .",
    "@xmath304      \\draw[very thin ] ( 0,0 ) grid ( 4,3 ) ;           {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { -1 , 1,0 , 0 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,2+.5-.32*\\d)--(\\i-.18,2+.5+.32*\\d ) ; }      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0 , 1,0,-1 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,1+.5-.32*\\d)--(\\i-.18,1+.5+.32*\\d ) ; }      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,-1,1 , 0 }      \\draw[very thick , color = black!\\shade!white ] ( \\i-.82,0+.5-.32*\\d)--(\\i-.18,0+.5+.32*\\d ) ; }       \\end{tikzpicture } }    \\qquad\\quad    \\raisebox{-.15 in } {    \\begin{tikzpicture}[scale=0.5 ]        \\draw [ thick ] ( 4,0)--(1,0)--(1,1)--(2,1)--(2,0 ) ;        \\draw [ thick ] ( 0,0)--(1,0 ) ;          \\fill[radius=0.17 ] ( 0,0 ) circle ;          \\fill[,radius=0.17 ] ( 1,0 ) circle ;          \\fill[radius=0.17 ] ( 2,0 ) circle ;          \\fill[,radius=0.17 ] ( 3,0 ) circle ;          \\fill[radius=0.17 ] ( 4,0 ) circle ;          \\fill[,radius=0.17 ] ( 2,1 ) circle ;          \\fill[radius=0.17 ] ( 1,1 ) circle ;          \\node[below]at(0,-.1){$c_3 $ } ;          \\node[below]at(1,-.1){$r_3 $ } ;          \\node[below]at(2,-.1){$c_2 $ } ;          \\node[below]at(3,-.1){$r_2 $ } ;          \\node[below]at(4,-.1){$c_4 $ } ;          \\node[above]at(1,1.1){$c_1 $ } ;          \\node[above]at(2,1.1){$r_1 $ } ;      \\end{tikzpicture } }      \\vspace{-6pt}\\ ] ]    the row - column graph of a grid class captures a good deal of structural information about the class , so it is common to apportion properties of the row - column graph directly to the grid class itself , for example speaking of a connected , acyclic or unicyclic grid class rather than of a grid class whose row - column graph is connected , acyclic or unicyclic .",
    "we follow this convention .",
    "it is possible to give an explicit expression for the number of gridded permutations of length @xmath5 in any specified grid class .",
    "observe the similarity to the formulae for numbers of tours .",
    "[ lemmacountgriddings ] if @xmath305 is the row - column graph of @xmath0 , where @xmath39 has @xmath47 edges @xmath105 , then the number of gridded permutations of length @xmath5 in @xmath298 is given by @xmath306 where @xmath190 are the @xmath75 corresponding to edges incident to @xmath49 in @xmath39 .",
    "a gridded permutation in @xmath298 consists of a number of points in each of the cells that correspond to a non - zero entry of @xmath16 . for every permutation ,",
    "the relative ordering of points ( increasing or decreasing ) within a particular cell is fixed by the value of the corresponding matrix entry .",
    "however , the relative interleaving between points in distinct cells in the same row or column can be chosen arbitrarily and independently for each row and column .",
    "now , each vertex in @xmath39 corresponds to a row or column in @xmath16 , with an incident edge for each non - zero entry in that row or column .",
    "thus , the number of gridded permutations with @xmath75 points in the cell corresponding to edge @xmath41 for each @xmath93 is given by the following product of multinomial coefficients : @xmath307 the result follows by summing over values of @xmath75 that sum to @xmath5 .",
    "as an immediate consequence , we have the fact that the enumeration of a class of gridded permutations depends only on its row - column graph :    [ corgrhasheqforsamercgraph ] if @xmath308 , then @xmath309 for all @xmath5 .      we now use lemmas  [ lemmalowerbound ] and  [ lemmaupperboundnew ] to relate the number of gridded permutations of length @xmath5 in @xmath298 to the number of tours of length @xmath253 on @xmath1 .",
    "we restrict ourselves to permutation classes with connected row - column graphs .",
    "[ lemmagrsequal ] if @xmath1 is connected , the growth rate of @xmath298 exists and is equal to the growth rate of @xmath310 .",
    "if matrix @xmath16 has @xmath47 non - zero entries ( and thus @xmath1 has @xmath47 edges ) , then for any vertex @xmath53 of @xmath1 , combining lemmas  [ lemmacountgriddings ] and  [ lemmalowerbound ] , gives us @xmath311 & \\;\\leqslant\\ ; \\displaystyle \\sum_{k_1+\\ldots+k_m\\,=\\,k } w_{g(m)}(2k_1 + 2,2k_2 + 2,\\ldots,2k_m+2;u ) \\nonumber\\\\[4pt ] & \\;\\leqslant\\ ; w_{g(m)}(2k+2m).\\end{aligned}\\ ] ]    on the other hand , from lemma  [ lemmaupperboundnew ] , for any vertex @xmath53 of a graph @xmath39 with @xmath47 edges , @xmath254    let @xmath312 be the number of tours of length @xmath252 on @xmath39 ( starting at any vertex ) .",
    "now @xmath313 , so , using lemma  [ lemmacountgriddings ] , if @xmath1 has @xmath91 vertices and @xmath47 edges , we have latexmath:[\\[w_{g(m)}(2k ) \\;\\leqslant\\ ; n{\\hspace{0.1 em}}(m+1)^m{\\hspace{0.1 em}}(2k+2m)^m \\displaystyle\\sum_{j = k}^{k+m^2 }    inequality is a polynomial in @xmath5 .",
    "hence , using inequality   and observation  [ obsgrpolysum ] , we can conclude that @xmath315 if @xmath1 is connected .",
    "we nearly have the result we want .",
    "the final link is the following lemma of vatter which tells us that , as far as growth rates are concerned , classes of gridded permutations are indistinguishable from their grid classes .",
    "[ lemmagrgriddings ] the growth rate of a monotone grid class @xmath0 exists and is equal to the growth rate of the corresponding class of gridded permutations @xmath298 .",
    "suppose that @xmath16 has dimensions @xmath316 .",
    "every permutation in @xmath0 has at least one gridding in @xmath298 , but no permutation in @xmath0 of length @xmath5 can have more than @xmath317 griddings in @xmath298 because @xmath318 is the number of possible choices for the row and column dividers ( see subsection  [ sectgridclassdefs ] ) .",
    "since @xmath318 is a polynomial in @xmath5 , the result follows from observation  [ obsgrpolysum ] .",
    "thus , by corollary  [ corgrhasheqforsamercgraph ] :    [ corgreqforsamercgraph ] monotone grid classes with the same row - column graph have the same growth rate",
    ".      we now have all we need for the proof of our main theorem .    [ thmgrowthrate ]",
    "the growth rate of a monotone grid class of permutations exists and is equal to the square of the spectral radius of its row - column graph .    for connected grid classes ,",
    "the result follows immediately from lemmas  [ lemmagreven ] ,  [ lemmagrsequal ] and  [ lemmagrgriddings ] .",
    "a little more work is required to handle the disconnected case .    if @xmath1 is disconnected , then the growth rate of @xmath0 is the maximum of the growth rates of the grid classes corresponding to the connected components of @xmath1 ( see proposition 2.10 in vatter  @xcite ) .    similarly , the spectrum of a disconnected graph is the union ( with multiplicities ) of the spectra of the graph s components ( see theorem 2.1.1 in cvetkovi , rowlinson and simi  @xcite ) .",
    "thus the spectral radius of a disconnected graph is the maximum of the spectral radii of its components .    combining these facts with lemmas  [ lemmagreven ] ,  [ lemmagrsequal ] and  [ lemmagrgriddings ] yields @xmath319 as required .",
    "as a consequence of theorem  [ thmgrowthrate ] , results concerning the spectral radius of graphs can be translated into facts about the growth rates of permutation grid classes .",
    "so we now present a number of corollaries that follow from spectral graph theoretic considerations .",
    "the two recent monographs by cvetkovi , rowlinson and simi  @xcite and brouwer and haemers  @xcite provide a valuable overview of spectral graph theory , so , where appropriate , we cite the relevant sections of these ( along with the original reference for a result ) .    as a result of corollary  [ corgreqforsamercgraph ] , changing the sign of non - zero entries in matrix @xmath16",
    "has no effect on the growth rate of @xmath0 .",
    "for this reason , when considering particular collections of grid classes below , we choose to represent them by * grid diagrams * in which non - zero matrix entries are represented by a @xmath320      \\draw[very thin ] ( 0,0 ) grid ( 1,1 ) ;      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.18)--(\\i-.18,0+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.82)--(\\i-.18,0+.18 ) ;    } }    \\end{tikzpicture } } } } \\!$ ] . as with grid classes ,",
    "we freely apportion properties of a row - column graph to corresponding grid diagrams .",
    "@xmath321      \\draw[very thin ] ( 0,0 ) grid ( 3,3 ) ;      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,1,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,2+.18)--(\\i-.18,2+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,2+.82)--(\\i-.18,2+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,1,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,1+.18)--(\\i-.18,1+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,1+.82)--(\\i-.18,1+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,0,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.18)--(\\i-.18,0+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.82)--(\\i-.18,0+.18 ) ;    } }    \\end{tikzpicture } } } }      \\quad      { \\raisebox { -7.67pt } { {    \\begin{tikzpicture}[scale=0.25 ]      \\draw[very thin ] ( 0,0 ) grid ( 3,3 ) ;      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,1,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,2+.18)--(\\i-.18,2+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,2+.82)--(\\i-.18,2+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,1,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,1+.18)--(\\i-.18,1+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,1+.82)--(\\i-.18,1+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,1,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.18)--(\\i-.18,0+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.82)--(\\i-.18,0+.18 ) ;    } }    \\end{tikzpicture } } } }      \\quad      { \\raisebox { -7.67pt } { {    \\begin{tikzpicture}[scale=0.25 ]      \\draw[very thin ] ( 0,0 ) grid ( 3,3 ) ;      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,1,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,2+.18)--(\\i-.18,2+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,2+.82)--(\\i-.18,2+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,0,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,1+.18)--(\\i-.18,1+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,1+.82)--(\\i-.18,1+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,0,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.18)--(\\i-.18,0+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.82)--(\\i-.18,0+.18 ) ;    } }    \\end{tikzpicture } } } }      \\quad      { \\raisebox { -7.67pt } { {    \\begin{tikzpicture}[scale=0.25 ]      \\draw[very thin ] ( 0,0 ) grid ( 3,3 ) ;      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,1,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,2+.18)--(\\i-.18,2+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,2+.82)--(\\i-.18,2+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,0,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,1+.18)--(\\i-.18,1+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,1+.82)--(\\i-.18,1+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,0,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.18)--(\\i-.18,0+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.82)--(\\i-.18,0+.18 ) ;    } }    \\end{tikzpicture } } } }      \\quad      { \\raisebox { -7.67pt } { {    \\begin{tikzpicture}[scale=0.25 ]      \\draw[very thin ] ( 0,0 ) grid ( 3,3 ) ;      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,1,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,2+.18)--(\\i-.18,2+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,2+.82)--(\\i-.18,2+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,1,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,1+.18)--(\\i-.18,1+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,1+.82)--(\\i-.18,1+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,1,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.18)--(\\i-.18,0+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.82)--(\\i-.18,0+.18 ) ;    } }    \\end{tikzpicture } } } }      \\quad      { \\raisebox { -7.67pt } { {    \\begin{tikzpicture}[scale=0.25 ]      \\draw[very thin ] ( 0,0 ) grid ( 3,3 ) ;      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,1,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,2+.18)--(\\i-.18,2+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,2+.82)--(\\i-.18,2+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,1,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,1+.18)--(\\i-.18,1+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,1+.82)--(\\i-.18,1+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,1,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.18)--(\\i-.18,0+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.82)--(\\i-.18,0+.18 ) ;    } }    \\end{tikzpicture } } } }      \\quad\\quad\\quad      \\raisebox{-.07in}{\\begin{tikzpicture}[scale=0.4 ]        \\draw [ thick ] ( 2,1)--(0,1)--(0,0)--(2,0 ) ;        \\draw [ thick ] ( 1,0)--(1,1 ) ;        \\draw [ fill ] ( 0,0 ) circle [ radius=0.15 ] ;        \\draw [ fill ] ( 1,0 ) circle [ radius=0.15 ] ;        \\draw [ fill ] ( 2,0 ) circle [ radius=0.15 ] ;        \\draw [ fill ] ( 0,1 ) circle [ radius=0.15 ] ;        \\draw [ fill ] ( 1,1 ) circle [ radius=0.15 ] ;        \\draw [ fill ] ( 2,1 ) circle [ radius=0.15 ] ;      \\end{tikzpicture}}\\ ] ]    since transposing a matrix or permuting its rows and columns does not change the row - column graph of its grid class , there may be a number of distinct grid diagrams corresponding to a specific row - column graph ( see figure  [ figgriddiags ] for an example ) .    in many cases ,",
    "we illustrate a result by showing a row - column graph and a corresponding grid diagram .",
    "we display just one of the possible grid diagrams corresponding to the row - column graph .",
    "our first result is the following elementary observation , which specifies a limitation on which numbers can be grid class growth rates .",
    "this is a consequence of the fact that the spectral radius of a graph is a root of the characteristic polynomial of an integer matrix .",
    "[ coralgebraicinteger ] the growth rate of a monotone grid class is an algebraic integer ( the root of a monic polynomial ) .      using results concerning graphs with small spectral radius , we can characterise grid classes with growth rates no greater than  @xmath35 .",
    "this is similar to vatter s characterisation of `` small '' permutation classes ( with growth rate less than @xmath322 ) in  @xcite .",
    "first , we recall that the growth rate of a disconnected grid class is the maximum of the growth rates of its components ( see the proof of theorem  [ thmgrowthrate ] ) , so we only need to consider connected grid classes .",
    "c@@xmath323c@@xmath323c@@xmath323c@@xmath323c &    ( 0,0)(6,0 ) ; ( 0,1)(0,0)(0,-1 ) ; ( 6.0,1)(6,0)(6.0,-1 ) ; in 0, ...",
    ",6 ( , 0 ) circle [ radius=0.15 ] ; ( 0,1 ) circle [ radius=0.15 ] ; ( 0,-1 ) circle [ radius=0.15 ] ; ( 6,1 ) circle [ radius=0.15 ] ; ( 6,-1 ) circle [ radius=0.15 ] ;    &    ( 0,0)(4,0 ) ; ( 2,0)(2,2 ) ; in 0, ... ,4 ( , 0 ) circle [ radius=0.15 ] ; ( 2,1 ) circle [ radius=0.15 ] ; ( 2,2 ) circle [ radius=0.15 ] ;    & & + & & & &    the connected graphs with spectral radius 2 are known as the * smith * graphs .",
    "these are precisely the _ cycle _ graphs , the @xmath157 graphs ( paths with two pendant edges attached to both endvertices , including the star graph @xmath324 ) , and the three other graphs shown in figure  [ figsmith ] .",
    "c@@xmath323c@@xmath323c@@xmath323c@@xmath323c &    ( 0,0)(5,0 ) ; ( -.5,.866)(0,0)(-.5,-.866 ) ; in 0, ... ,5 ( , 0 ) circle [ radius=0.15 ] ; ( -.5,.866 ) circle [ radius=0.15 ] ; ( -.5,-.866 ) circle [ radius=0.15 ] ;    & & & + & & & &    similarly , the connected proper subgraphs of the smith graphs are precisely the _ path _ graphs , the @xmath325 graphs ( paths with two pendant edges attached to one endvertex ) and the three other graphs in figure  [ figsubsmith ] . for details , see smith  @xcite and lemmens and seidel  @xcite ; also see  @xcite theorem 3.11.1 and  @xcite theorem 3.1.3 .    with these",
    ", we can characterise all grid classes with growth rate no greater than 4 :    [ corsmith ] if the growth rate of a connected monotone grid class equals 4 , then its row - column graph is a smith graph .",
    "if the growth rate of a connected monotone grid class is less than 4 , then its row - column graph is a connected proper subgraph of a smith graph .",
    "in particular , we have the following :    [ corcycle ] a monotone grid class of any size whose row - column graph is a cycle or an h graph has growth rate 4 .    in appendix  a of  @xcite , vatter considers * staircase * grid classes , whose row - column graphs are paths ( see the leftmost grid diagram in figure  [ figsubsmith ] ) . the spectral radius of a path graph has long been known ( lovsz and pelikn  @xcite ;",
    "also see  @xcite theorem 8.1.17 and  @xcite 1.4.4 ) , from which we can conclude :    [ corpath ] a monotone grid class of size @xmath47 ( having @xmath47 non - zero cells ) whose row - column graph is a path has growth rate @xmath326 .",
    "this is minimal for any connected grid class of size @xmath47 .",
    "a @xmath325 graph of size @xmath47 has spectral radius @xmath327 , and the spectral radii of the three other graphs at the right of figure  [ figsubsmith ] are @xmath328 , @xmath329 , and @xmath330 , from left to right ( see  @xcite 3.1.1 ) .",
    "thus we have the following characterisation of growth rates less than  4 :    [ corsmallgrowthrates ] if the growth rate of a monotone grid class is less than 4 , it is equal to @xmath36 for some @xmath37 .",
    "the only grid class growth rates no greater than 3 are @xmath18 , @xmath331 , @xmath332 , and @xmath333 .",
    "@xmath334      \\draw [ thick ] ( 0,0)--(2,0 ) ;      \\draw [ thick , dashed ] ( 4.1,0)--(2,0 ) ;      \\draw [ thick ] ( 4.1,0)--(5.1,0 ) ;      \\draw [ thick ] ( 2,1)--(1,1)--(0,0)--(1,-1)--(2,-1 ) ;      \\draw [ thick ] ( 3.75,1)--(4.75,1 ) ;      \\draw [ thick ] ( 4.45,-1)--(5.45,-1 ) ;      \\draw [ thick , dashed ] ( 3.75,1)--(2,1 ) ;      \\draw [ thick , dashed ] ( 4.45,-1)--(2,-1 ) ;      \\draw [ fill ] ( 0,0 ) circle [ radius=0.15 ] ;      \\foreach \\x in { 1,2,3.75,4.75 } \\draw [ fill ] ( \\x,1 ) circle [ radius=0.15 ] ;      \\foreach \\x in { 1,2,4.1,5.1 } \\draw [ fill ] ( \\x,0 ) circle [ radius=0.15 ] ;      \\foreach \\x in { 1,2,4.45,5.45 } \\draw [ fill ] ( \\x,-1 ) circle [ radius=0.15 ] ;    \\end{tikzpicture } }    \\quad\\quad\\quad\\quad    \\begin{tikzpicture}[scale=0.4 ]      \\draw [ thick ] ( -0.35,0)--(0.65,0 ) ;      \\draw [ thick , dashed ] ( 1,0)--(2.75,0 ) ;      \\draw [ thick ] ( 2.75,0)--(4.75,0 ) ;      \\draw [ thick ] ( 3.75,0)--(3.75,1 ) ;      \\draw [ thick , dashed ] ( 4.75,0)--(6.5,0 ) ;      \\draw [ thick ] ( 6.5,0)--(8.5,0 ) ;      \\draw [ thick ] ( 7.5,0)--(7.5,1 ) ;      \\draw [ thick , dashed ] ( 8.5,0)--(10.95,0 ) ;      \\draw [ thick ] ( 10.95,0)--(11.95,0 ) ;      \\foreach \\x in { -0.35,0.65,2.75,3.75,4.75,6.5,7.5,8.5,10.95,11.95 } \\draw [ fill ] ( \\x,0 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 3.75,1 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 7.5,1 ) circle [ radius=0.15 ] ;    \\end{tikzpicture}\\ ] ]    in order to characterise grid classes with growth rates slightly greater than 4 , let an @xmath335 graph be a tree consisting of three paths having one endvertex in common , and an @xmath82 graph be a tree consisting of a path with a pendant edge attached to each of two distinct internal vertices ( see figure  [ figefgraphs ] ) .",
    "then , results of brouwer and neumaier  @xcite and cvetkovi , doob and gutman  @xcite imply the following ( also see  @xcite theorem 3.11.2 ) :    if a connected monotone grid class has growth rate between 4 and @xmath336 , then its row - column graph is an @xmath335 or @xmath82 graph .",
    "thus , since @xmath337 can not be an eigenvalue of any graph ( see  @xcite p.  93 ) , we can deduce the following :    [ corpropercycle ] if a monotone grid class properly contains a cycle then its growth rate exceeds @xmath336 .    more recently , woo and neumaier  @xcite have investigated the structure of graphs with spectral radius no greater than @xmath338 ( also see  @xcite theorem 3.11.3 ) . as a consequence , we have the following :    if the growth rate of a connected monotone grid class is no greater than @xmath35 , then its row - column graph is one of the following :    1 .   a tree of maximum degree 3 such that all vertices of degree 3 lie on a path , 2 .   a unicyclic graph of maximum degree 3 such that all vertices of degree 3 lie on the cycle , or 3 .   a tree consisting of a path with three pendant edges attached to one endvertex .",
    "using graph theoretic results of hoffman and shearer , it is possible to characterise _ all _ accumulation points of grid class growth rates .",
    "as we have seen , the growth rates of grid classes whose row - column graphs are paths and @xmath325 graphs grow to 4 from below ; 4 is the least accumulation point of growth rates .",
    "the following characterises all accumulation points below @xmath336 ( see hoffman  @xcite ) :    for @xmath339 , let @xmath340 be the positive root of @xmath341 and let @xmath342",
    ". then @xmath343 are all the accumulation points of growth rates of monotone grid classes smaller than @xmath336 .",
    "the approximate values of the first eight accumulation points are : 4 , 4.07960 , 4.14790 , 4.18598 , 4.20703 , 4.21893 , 4.22582 , 4.22988 .    at @xmath336 , things change dramatically ; from this value upwards grid class growth rates are dense ( see shearer  @xcite ) :    [ coraccumulationpoints ] every @xmath2 is an accumulation point of growth rates of monotone grid classes .",
    "@xmath344      \\draw[very thin ] ( 0,0 ) grid ( 20,16 ) ;       {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,15+.18)--(\\i-.18,15+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,15+.82)--(\\i-.18,15+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,14+.18)--(\\i-.18,14+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,14+.82)--(\\i-.18,14+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,13+.18)--(\\i-.18,13+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,13+.82)--(\\i-.18,13+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,12+.18)--(\\i-.18,12+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,12+.82)--(\\i-.18,12+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,11+.18)--(\\i-.18,11+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,11+.82)--(\\i-.18,11+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,10+.18)--(\\i-.18,10+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,10+.82)--(\\i-.18,10+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 9+.18)--(\\i-.18 , 9+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 9+.82)--(\\i-.18 , 9+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 8+.18)--(\\i-.18 , 8+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 8+.82)--(\\i-.18 , 8+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 7+.18)--(\\i-.18 , 7+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 7+.82)--(\\i-.18 , 7+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 6+.18)--(\\i-.18 , 6+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 6+.82)--(\\i-.18 , 6+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 5+.18)--(\\i-.18 , 5+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 5+.82)--(\\i-.18 , 5+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 4+.18)--(\\i-.18 , 4+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 4+.82)--(\\i-.18 , 4+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 3+.18)--(\\i-.18 , 3+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 3+.82)--(\\i-.18 , 3+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 2+.18)--(\\i-.18 , 2+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 2+.82)--(\\i-.18 , 2+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 1+.18)--(\\i-.18 , 1+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 1+.82)--(\\i-.18 , 1+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 0+.18)--(\\i-.18 , 0+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82 , 0+.82)--(\\i-.18 , 0+.18 ) ;    } }      \\end{tikzpicture } } \\quad\\quad\\quad \\raisebox{.5in}{\\begin{tikzpicture}[scale=0.4 ]    \\draw [ thick ] ( 0,0)--(19,0 ) ;    \\foreach \\x in { 0, ...",
    ",19 } \\draw [ fill ] ( \\x,0 ) circle [ radius=0.15 ] ;    \\foreach \\x in { 4,6,10,13,15,17 }    { \\draw [ fill ] ( \\x,-1 ) circle [ radius=0.15 ] ; \\draw [ thick ] ( \\x,0)--(\\x,-1 ) ; }    \\foreach \\x in { 10,17,5,9,12,14 }    { \\draw [ fill ] ( \\x,1 ) circle [ radius=0.15 ] ; \\draw [ thick ] ( \\x,0)--(\\x,1 ) ; }    \\foreach \\x in { 0.5,1.5 }    {      \\draw [ fill ] ( \\x,.866 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( \\x,-.866 ) circle [ radius=0.15 ] ;      \\draw [ thick ] ( 1,0)--(\\x,.866 ) ;      \\draw [ thick ] ( 1,0)--(\\x,-.866 ) ;    } \\end{tikzpicture}}\\ ] ]    thus , for every @xmath345 , there is a grid class with growth rate arbitrarily close to @xmath3 .",
    "indeed , for @xmath346 , shearer s proof provides an iterative process for generating a sequence of grid classes , each with a row - column graph that is a _ caterpillar _ ( a tree such that all vertices of degree 2 or more lie on a path ) , with growth rates converging to @xmath3 from below .",
    "an example is shown in figure  [ figcaterpillar ] .",
    "we now consider the effect on the growth rate of making small changes to a grid class .",
    "firstly , growth rates of connected grid classes satisfy a _",
    "strict _ monotonicity condition ( see  @xcite proposition 1.3.10 ) :    [ coraddcell ] adding a non - zero cell to a connected monotone grid class while preserving connectivity increases its growth rate .    on the other hand ,",
    "particularly surprising is the fact that grid classes with _ longer internal _ paths or cycles have _ lower _ growth rates .",
    "an edge @xmath347 of @xmath39 is said to lie on an * endpath * of @xmath39 if @xmath348 is disconnected and one of its components is a ( possibly trivial ) path .",
    "an edge that does not lie on an endpath is said to be * internal*. note that a graph has an internal edge if and only if it contains either a cycle or non - star @xmath157 graph .",
    "@xmath349      \\draw[very thin ] ( 0,0 ) grid ( 3,2 ) ;      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,1,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,1+.18)--(\\i-.18,1+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,1+.82)--(\\i-.18,1+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,1,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.18)--(\\i-.18,0+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.82)--(\\i-.18,0+.18 ) ;    } }    \\end{tikzpicture } } } }      \\quad      \\raisebox{-0.09in}{\\begin{tikzpicture}[scale=0.4 ]      \\draw [ thick ] ( 0,0)--(1,0)--(1.707,0.707)--(2.414,0)--(1.707,-0.707)--(1,0 ) ;      \\draw [ fill ] ( 0,0 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 1,0 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 2.414,0 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 1.707,0.707 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 1.707,-0.707 ) circle [ radius=0.15 ] ;      \\end{tikzpicture } }      \\quad\\quad\\quad\\quad      { \\raisebox { -7.67pt } { {    \\begin{tikzpicture}[scale=0.25 ]      \\draw[very thin ] ( 0,0 ) grid ( 4,3 ) ;      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,1,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,2+.18)--(\\i-.18,2+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,2+.82)--(\\i-.18,2+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,1,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,1+.18)--(\\i-.18,1+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,1+.82)--(\\i-.18,1+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,1,0,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.18)--(\\i-.18,0+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.82)--(\\i-.18,0+.18 ) ;    } }    \\end{tikzpicture } } } }      \\quad      \\raisebox{-0.12in}{\\begin{tikzpicture}[scale=0.4 ]      \\draw [ thick ] ( 0,0)--(1,0)--(1.5,0.866)--(2.5,0.866)--(3,0)--(2.5,-0.866)--(1.5,-0.866)--(1,0 ) ;      \\draw [ fill ] ( 0,0 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 1,0 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 3,0 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 1.5,0.866 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 2.5,0.866 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 1.5,-0.866 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 2.5,-0.866 ) circle [ radius=0.15 ] ;      \\end{tikzpicture } }      \\quad\\quad\\quad\\quad      { \\raisebox{-11.33pt } { {    \\begin{tikzpicture}[scale=0.25 ]      \\draw[very thin ] ( 0,0 ) grid ( 5,4 ) ;      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,1,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,3+.18)--(\\i-.18,3+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,3+.82)--(\\i-.18,3+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,1,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,2+.18)--(\\i-.18,2+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,2+.82)--(\\i-.18,2+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 0,0,0,1,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,1+.18)--(\\i-.18,1+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,1+.82)--(\\i-.18,1+.18 ) ;    } } {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,1,0,0,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.18)--(\\i-.18,0+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.82)--(\\i-.18,0+.18 ) ;    } }    \\end{tikzpicture } } } }      \\quad      \\raisebox{-0.19in}{\\begin{tikzpicture}[scale=0.4 ]      \\draw [ thick ] ( 0,0)--(1,0)--(1.383,0.924)--(2.307,1.307)--(3.23,0.924)--(3.613,0)--(3.23,-0.924)--(2.307,-1.307)--(1.383,-0.924)--(1,0 ) ;      \\draw [ fill ] ( 0,0 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 1,0 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 3.613,0 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 1.383,0.924 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 1.383,-0.924 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 3.23,0.924 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 3.23,-0.924 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 2.307,1.307 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 2.307,-1.307 ) circle [ radius=0.15 ] ;      \\end{tikzpicture } }      \\vspace{-3pt}\\ ] ]    an early result of hoffman and smith  @xcite shows that the subdivision of an internal edge _ reduces _ the spectral radius ( also see  @xcite proposition 3.1.4 and  @xcite theorem 8.1.12 ) .",
    "hence , we can deduce the following unexpected consequence for grid classes :    [ corsubdivision ] if @xmath0 is connected , and @xmath350 is obtained from @xmath1 by subdividing an internal edge , then @xmath351 unless @xmath1 is a cycle or an @xmath157 graph .",
    "for an example , see figure  [ figsubdivision ] .",
    "finally , we briefly consider grid classes with maximal or minimal growth rates for their size .",
    "@xmath352      \\draw[very thin ] ( 0,0 ) grid ( 7,1 ) ;      {    \\foreach \\d [ count=\\i , evaluate=\\d as \\shade using 100*\\d*\\d ] in { 1,1,1,1,1,1,1 }    {      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.18)--(\\i-.18,0+.82 ) ;      \\draw[thick , color = black!\\shade!white ] ( \\i-.82,0+.82)--(\\i-.18,0+.18 ) ;    } }    \\end{tikzpicture } } } }    \\quad\\quad\\quad    \\raisebox{-.16in}{\\begin{tikzpicture}[scale=0.40 ]      \\draw [ thick ] ( .716,-.898)--(0,0)--(.716,.898 ) ;      \\draw [ thick ] ( -.256,-1.121)--(0,0)--(-.256,1.121 ) ;      \\draw [ thick ] ( -1.036,-.499)--(0,0)--(-1.036,.499 ) ;      \\draw [ thick ] ( 0,0)--(1,0 ) ;      \\draw [ fill ] ( 0,0 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( 1,0 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( .716,-.898 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( -.256,-1.121 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( -1.036,-.499 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( .716,.898 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( -.256,1.121 ) circle [ radius=0.15 ] ;      \\draw [ fill ] ( -1.036,.499 ) circle [ radius=0.15 ] ;    \\end{tikzpicture } }    \\vspace{-3pt}\\ ] ]    we call a grid class of a @xmath33 matrix a * skinny * grid class",
    ". the row - column graph of a skinny grid class is a _ star _ ( see figure  [ figskinny ] ) .",
    "stars have maximal spectral radius among trees ( see  @xcite theorem 8.1.17 ) .",
    "this yields :    [ corskinny ] among all connected acyclic monotone grid classes of size @xmath47 , the skinny grid classes have the largest growth rate ( equal to @xmath47 ) .    we have already seen ( corollary  [ corpath ] ) that the connected grid classes with _ smallest _ growth rates are those whose row - column graph is a path . for unicyclic grid classes",
    ", we have the following ( see  @xcite theorem 8.1.18 ) :    [ corcyclemin ] among all connected unicyclic monotone grid classes of size @xmath47 , those whose row - column graph is a single cycle of length @xmath47 have the smallest growth rate ( equal to 4 ) .",
    "there are many additional results known concerning graphs with extremal values for their spectral radii , especially for graphs with a small number of cycles . for an example , see the two papers by simi  @xcite on the largest eigenvalues of unicyclic and bicyclic graphs .",
    "results like these can be translated into further facts concerning the growth rates of grid classes .",
    "in light of theorem  [ thmgrowthrate ] , it seems likely to be worthwhile investigating whether there are other links between spectral graph theory and permutation grid classes , or indeed permutation classes in general .",
    "specifically , are there properties of grid classes which are associated with other eigenvalues of the adjacency or laplacian matrices of the row - column graph ? and can algebraic graph theory be used to help determine the growth rate of an arbitrary permutation class ( e.g. specified by its basis ) ?    closely related to grid classes are _ geometric _ grid classes , as investigated by albert , atkinson , bouvel , rukuc and vatter  @xcite . the geometric grid class @xmath353 is a subset of @xmath0 , permutations in @xmath353 satisfying an additional `` geometric '' constraint .",
    "recently , the present author  @xcite has proved a result similar to theorem  [ thmgrowthrate ] for the growth rates of geometric grid classes .",
    "specifically , the growth rate of geometric grid class @xmath353 exists and is equal to the square of the largest root of the _ matching polynomial _ of the row - column graph of what is known as the `` double refinement '' of matrix @xmath16 .",
    "this value coincides with @xmath354 for acyclic classes , @xmath353 and @xmath0 being identical when @xmath1 is a forest .",
    "grateful thanks are due to robert brignall for numerous discussions related to this work , and for much helpful advice and thorough feedback on earlier drafts of this paper , and also to an anonymous referee whose very thorough comments led to some significant improvements in the presentation ."
  ],
  "abstract_text": [
    "<S> monotone grid classes of permutations have proven very effective in helping to determine structural and enumerative properties of classical permutation pattern classes . associated with grid class @xmath0 </S>",
    "<S> is a graph , @xmath1 , known as its `` row - column '' graph . </S>",
    "<S> we prove that the exponential growth rate of @xmath0 is equal to the square of the spectral radius of @xmath1 . </S>",
    "<S> consequently , we utilize spectral graph theoretic results to characterise all slowly growing grid classes and to show that for every @xmath2 there is a grid class with growth rate arbitrarily close to @xmath3 . to prove our main result </S>",
    "<S> , we establish bounds on the size of certain families of tours on graphs . in the process , we prove that the family of tours of even length on a connected graph grows at the same rate as the family of `` balanced '' tours on the graph ( in which the number of times an edge is traversed in one direction is the same as the number of times it is traversed in the other direction ) . </S>"
  ]
}
{
  "article_text": [
    "in this paper , we describe a relaxed scheduling paradigm for operations that maintain the mesh of a deforming surface .",
    "we prove the correctness of this paradigm for skin surfaces .",
    "[ [ background . ] ] background .",
    "+ + + + + + + + + + +    in 1999 , edelsbrunner @xcite showed how a finite collection of spheres or weighted points can be used to construct a @xmath1-continuous surface in @xmath0 .",
    "it is referred to as the _ skin _ or the _ skin surface _ of the collection .",
    "if the spheres represent the atoms of a molecule then the appearance of that surface is similar to the molecular surface used in structural biology @xcite .",
    "the two differ in a number of details , one being that the former uses hyperboloids to blend between sphere patches while the latter uses tori .",
    "the skin surface is not @xmath2-continuous , but its maximum normal curvature , @xmath3 , is continuous .",
    "this property is exploited by cheng _",
    "et al . _",
    "@xcite , who describe an algorithm that constructs a triangular mesh representing the skin surface . in this mesh ,",
    "the sizes of edges and triangles are inversely proportional to the maximum normal curvature .",
    "the main idea of the algorithm is to maintain the mesh while gradually growing the skin surface to the desired shape , as illustrated in figure [ fig : deformation ] .",
    "the algorithm thus reduces the construction to a sequence of restructuring operations .",
    "there are _ edge flips _ , which maintain the mesh as the restricted delaunay triangulation of its vertices , _ edge contractions _ and _ vertex insertions _ , which maintain a sampling",
    "whose local density is proportional to the maximum normal curvature , and _",
    "metamorphoses _ , which adjust the mesh connectivity to reflect changes in the surface topology .",
    "some of these operations are easier to schedule than others , and the most difficult ones are the edge contractions and vertex insertions .",
    "they depend on how the sampled points move with the surface as it deforms .",
    "the quality of the mesh is guaranteed by maintaining size constraints for all edges and triangles .",
    "when an edge gets too short we contract it , and when a triangle gets too large we insert a point near its circumcenter .",
    "both events can be recognized by finding roots of fairly involved functions .",
    "scheduling edge contractions and vertex insertions thus becomes a bottleneck , both in terms of the robustness and the running time of the algorithm .",
    "[ [ result . ] ] result .",
    "+ + + + + + +    in this paper , we study how fast edges and triangles vary their size , and we use that knowledge to schedule these elements in a relaxed fashion . in other words",
    ", we do not determine when exactly an element violates its size constraint , but we catch it before the violation happens .",
    "of course , the danger is now that we either update perfectly well - shaped elements or we waste time by checking elements unnecessarily often . to avoid the former , we introduce intervals or gray zones in which the shapes of the elements are neither good nor unacceptably bad . to avoid unnecessarily frequent checking , we prove lower bounds on how long an element stays in the gray zone before its shape becomes unacceptably bad .",
    "these bounds are different for edges and for triangles .",
    "consider first an edge @xmath4 .",
    "let @xmath5 be its half - length and @xmath6 the smaller radius of curvature at its endpoints .",
    "we use judiciously chosen constants @xmath7 , @xmath8 and @xmath9 and call the edge @xmath10 the middle interval is what we called the gray zone above . assuming @xmath4 is acceptable , we prove it will not become unacceptable within a time interval of duration @xmath11 , where @xmath12 in the worst case , @xmath13 is barely larger than @xmath14 , so we have @xmath15 as a worst case bound .",
    "we will see that @xmath16 , @xmath17 and @xmath18 are feasible choices for the constants , and that for these we get @xmath19 and @xmath20 .",
    "consider next a triangle @xmath21 .",
    "let @xmath13 be the radius of its circumcircle , and @xmath22 the smallest radius of curvature at its vertices .",
    "we call @xmath21 @xmath23 assuming @xmath21 is acceptable , we prove it will not become unacceptable within a time interval of duration @xmath11 , where @xmath24{r / ( c q_1 \\varrho ) } .\\end{aligned}\\ ] ] in the worst case , @xmath13 is barely smaller than @xmath25 , so we have @xmath26{q_0 / q_1}$ ] . for the above values of @xmath7 , @xmath8 and @xmath9 ,",
    "this gives @xmath27 and @xmath28 .",
    "it seems that triangles can get out of shape about twice as fast as edges , but we do not know whether this is really the case because our bounds are not tight .",
    "[ [ outline . ] ] outline .",
    "+ + + + + + + +    section [ sec2 ] reviews skin surfaces and the dynamic triangulation algorithm .",
    "section [ sec3 ] introduces relaxed scheduling as a paradigm to keep track of moving or deforming data .",
    "section [ sec4 ] analyzes the local distortion within the mesh and derives the formulas needed for the relaxed scheduling paradigm .",
    "section [ sec5 ] concludes the paper .",
    "in this section , we introduce the necessary background from @xcite , where skin surfaces were originally defined , and from @xcite , where the meshing algorithm for deforming skin surfaces was described .    [ [ skin - surfaces . ] ] skin surfaces .",
    "+ + + + + + + + + + + + + +    we write @xmath29 for the sphere with center @xmath30 and radius @xmath31 and think of it as the zero - set of the weighted square distance function @xmath32 defined by @xmath33 .",
    "the square radius is a real number and the radius is either a non - negative real or a non - negative multiple of the imaginary unit . we know how to add functions and how to multiply them by scalars .",
    "for example , if we have a finite collection of spheres @xmath34 and scalars @xmath35 then @xmath36 is again a weighted square distance function , and we denote by @xmath37 the sphere that defines it .",
    "the _ convex hull _ of the @xmath34 is the set of such spheres obtained using only non - negative scalars : @xmath38 we also shrink spheres and write @xmath39 , which is the zero - set of @xmath40 .",
    "the _ skin surface _ defined by the @xmath34 is then the envelope of the spheres in the convex hull , all scaled down by a factor @xmath41 , and we write this as @xmath42 .",
    "equivalently , it is the zero - set of the point - wise minimum over all functions @xmath40 , over all @xmath43 , where @xmath44 is the weighted square distance function defined by @xmath45 . at first glance , this might seem like an unwieldy surface , but we can completely describe it as a collection of quadratic patches obtained by decomposing the surface with what we call the mixed complex .",
    "its cells are minkowski sums of voronoi vertices , edges , polygons and polyhedra with their dually corresponding delaunay tetrahedra , triangles , edges and vertices , all scaled down by a factor @xmath46 . instead of formally describing this construction ,",
    "we illustrate it with a two - dimensional example in figure [ fig : mixed ] .        depending on the dimension of the contributing delaunay simplex , we have four types of mixed cells . because of symmetry , we have only two types of surface patches , namely pieces of spheres and of hyperboloids of revolution , which we frequently put in standard form : @xmath47 where the plus sign gives the one - sheeted hyperboloid and the minus sign gives the two - sheeted hyperboloid .",
    "[ [ meshing . ] ] meshing .",
    "+ + + + + + + +    the meshing algorithm triangulates the skin surface using edges and triangles whose sizes adapt to the local curvature .",
    "let us be more specific .",
    "at any point @xmath48 , let @xmath49 be the maximum normal curvature at @xmath50 .",
    "in contrast to other notions of curvature , @xmath3 is continuous over the skin surface and thus amenable to controlling the local size of the mesh .",
    "call @xmath51 the _ local length scale _ at @xmath50 .",
    "the vertices of the mesh are points on the surface . for an edge @xmath4 ,",
    "let @xmath52 be half its length , and for a triangle @xmath21 , let @xmath53 be the radius of its circumcircle .",
    "the algorithm obeys the lower and upper size bounds that require edges not be too short and triangles not be too large :    [ l ] : :    @xmath54 for every edge    @xmath4 , and [ u ] : :    @xmath55 for every triangle    @xmath21 ,    where @xmath56 is the larger of @xmath57 and @xmath58 , @xmath59 is the minimum of @xmath57 , @xmath58 and @xmath60 , and @xmath7 and @xmath61 are judiciously chosen positive constants .",
    "the particular algorithm we consider in this paper is dynamic , in the sense that it maintains the mesh while the surface deforms .",
    "we can use this algorithm to construct a mesh by starting with the empty surface and growing it into the desired shape .",
    "this is precisely the scenario in which our results apply . to model the growth process",
    ", we use a time parameter and let @xmath62 be the @xmath63-th sphere at time @xmath64 .",
    "we start at @xmath65 , at which time all radii are imaginary and the surface is empty , and we end at @xmath66 , at which time the surface has the desired shape .",
    "this particular growth model is amenable to efficient computation because it does not affect the mixed complex , which stays the same at all times .",
    "each patch of the surface sweeps out its mixed cell . at any moment",
    ", we have a collection of points sampled on the surface , and the mesh is the restricted delaunay triangulation of these points , as defined in @xcite . given the surface and the points , this triangulation is unique . as the surface deforms , we move the points with it and update the mesh as required . from global and less frequent to local and more frequent these operations are :    1 .",
    "topology changes that affect the local and global connectivity of the surface and the mesh , 2 .",
    "edge contractions and vertex insertions that locally remove or add points to coarsen or refine the mesh , and 3 .",
    "edge flips that locally adjust the mesh without affecting the point distribution or the surface topology .    for the particular growth model introduced above , the topology changes are easily predicted using the filtration of alpha complexes as described in @xcite . to predict where and when we need to coarsen or refine the mesh is more difficult and",
    "depends on how the points move to follow the deforming surface .",
    "this is the topic of this paper and will be discussed in detail in the subsequent sections .",
    "finally , edge flips are relatively robust operations , which can be performed in a lazy manner , without any sophisticated scheduling mechanism .",
    "[ [ point - motion . ] ] point motion . + + + + + + + + + + + + +    to describe the motion of the points sampled on the skin surface , it is convenient to consider the trajectory of the surface over time .",
    "note that the @xmath63-th sphere at time @xmath67 is @xmath68 .",
    "similarly , the convex combination defined by coefficients @xmath69 at time @xmath67 is @xmath70 , where @xmath71 .",
    "we can represent the skin surface in the same manner by introducing the function @xmath72 defined as the point - wise minimum of the functions representing the shrunken spheres .",
    "more formally , @xmath73 , where the minimum is taken over all spheres @xmath43 and @xmath74 is the center of @xmath45 .",
    "the skin surface at time @xmath67 is then @xmath75 , so it is appropriate to call the graph of @xmath76 the _ trajectory _ of the skin surface .",
    "we see that growing the surface in time is equivalent to sweeping out its trajectory with a three - dimensional space that moves through time .",
    "it is natural to let the points sampled on @xmath77 move normal to the surface . for a point @xmath78^t$ ] on a sphere or hyperboloid in standard form @xmath79 , the gradient is @xmath80^t$ ] .",
    "the point @xmath50 moves in the direction of the gradient with a speed that is inversely proportional to the length .",
    "in other words , the velocity vector at a point @xmath50 is @xmath81 the speed of @xmath50 is therefore @xmath82 .",
    "the implementation of the relaxed scheduling paradigm crucially depends on the properties of this motion .",
    "we use the remainder of this section to describe a symmetry property of the velocity vectors that is instrumental in the analysis of the motion . consider two mixed cells that share a common face .",
    "the standard forms of the two corresponding surface patches differ by a single sign , and so do the gradients .",
    "if we reflect points in one cell across the plane of the common face into the other cell then we preserve the velocity vector , as illustrated in figure [ fig : reflection ] .",
    "is reflected across face shared by the two mixed cells , height=182 ]    we use this observation about adjacent mixed cells to relate the velocity vectors of points in possibly non - adjacent cells .",
    "consider points @xmath83 and @xmath84 and let @xmath85 be the intersection points with faces of mixed cells encountered as we travel along the edge from @xmath83 to @xmath84 .",
    "starting at @xmath86 , we work backward and reflect the portion of the edge beyond @xmath87 across the face that contains @xmath87 . in the general case ,",
    "this portion is a polygonal path that leads from @xmath87 to the possibly multiply reflected image @xmath88 of @xmath84 .",
    "after @xmath89 reflections we have a polygonal path from @xmath83 to the final @xmath88 .",
    "the length of the path is equal to the length of the initial edge , and hence @xmath90 .",
    "we note that @xmath88 does not necessarily lie in the mixed cell of @xmath83 , but its velocity vector  which is the same as that of @xmath84  is consistent with the family of spheres or hyperboloids that sweeps out that mixed cell . in other words ,",
    "the motion of @xmath83 and @xmath88 is determined by the same quadratic function .",
    "in this section , we introduce relaxed scheduling as a paradigm for maintaining moving or deforming data . it is designed to cope with situations in which the precise moment for an update is either not known or too expensive to compute .",
    "[ [ correctness - constraints . ] ] correctness constraints .",
    "+ + + + + + + + + + + + + + + + + + + + + + + +    in the context of maintaining the triangle mesh of a skin surface , we use relaxed scheduling to determine when to contract an edge and when to insert a new vertex . since determining when the size of an edge or triangle stops to be acceptable",
    "is expensive , we introduce a gray zone between acceptability and unacceptability and update an element when we catch it inside that gray zone . that this course of action is even conceivable",
    "is based on the correctness proof of the dynamic skin triangulation algorithm for a range of its controlling parameters .",
    "the first three conditions defining that range refer to @xmath91 , @xmath7 and @xmath61 . we have seen the latter two before in the formulation of the two size bounds [ l ] and [ u ] : @xmath7 controls how well the mesh approximates the surface , and @xmath61 controls the quality of the mesh . both are related to @xmath91 , which quantifies the sampling density .",
    "( i ) : :    we require    @xmath92 ,    where    @xmath93    is a root of    @xmath94 .",
    "( ii ) : :    @xmath95 .",
    "( iii ) : :    @xmath96 ,    where    @xmath97 .",
    "it is computationally efficient to select the loosest possible bound for the sampling density : @xmath98",
    ". then we get @xmath99 and , as noted in @xcite , we may choose @xmath100 and @xmath101 to satisfy conditions ( i ) to ( iii ) .",
    "alternatively , we may lower @xmath7 to @xmath102 and are then free to pick @xmath61 anywhere inside the interval from @xmath103 to @xmath104 .",
    "the two choices of parameters are marked by a hollow dot and a white bar in figure [ fig : chart ] .",
    "the last two conditions refer to @xmath105 , @xmath106 and @xmath107 .",
    "all three parameters control how metamorphoses that add or remove a handle are implemented .",
    "since the curvature blows up at the point and time of a topology change , we use a special and relatively coarse sampling inside spherical neighborhoods of such points . assuming a unit radius of such neighborhoods",
    ", we turn the special sampling strategy on and off when the skin surface enters and leaves the smaller spherical neighborhood of radius @xmath108 .",
    "if the skin enters as a two - sheeted hyperboloid we triangulate it using two @xmath106-sided pyramids inside the unit sphere neighborhood . if it enters as a one - sheeted hyperboloid we triangulate it as an @xmath107-sided drum with a waist .",
    "the conditions are stated in terms of the edges @xmath109 , @xmath110 and @xmath111 and the triangles @xmath112 and @xmath113 , as defined in figure [ fig : dv ] .",
    "their sizes can all be expressed in terms of @xmath105 , @xmath106 and @xmath107 , and we refer to ( * ? ? ?",
    "* section 10 ) for the formulas .",
    "( iv ) : :    @xmath114 . ( v ) : :    @xmath115 .    [ [ quality - buffer . ] ] quality buffer .",
    "+ + + + + + + + + + + + + + +    the key technical insight about the dynamic skin triangulation algorithm is that we can find constants @xmath91 , @xmath7 , @xmath105 , @xmath106 , @xmath107 and @xmath116 such that conditions ( i ) to ( v ) are satisfied for all @xmath117 $ ] .",
    "this is illustrated in figure [ fig : chart ] , which shows the feasible region of points @xmath118 assuming fixed values for @xmath91 , @xmath105 , @xmath106 and @xmath107 .     for @xmath98 , @xmath119 , @xmath120 and @xmath121 . for @xmath16 this region",
    "contains the interval @xmath122 $ ] .",
    "the bounding curves are labeled by the corresponding constraints .",
    "redundant constraints are not shown , height=220 ]    instead of fixing @xmath61 and contracting an edge when its size - scale ratio reaches @xmath123 , we suggest to contract the edge any time its ratio is in the interval @xmath124 $ ] . after the ratio enters this interval at @xmath125 it can either leave again at @xmath125 or it can get contracted , but it is not allowed to reach @xmath126 .",
    "vertex insertions are treated symmetrically .",
    "specifically , a triangle is removed by adding a vertex near its circumcenter , and this can happen at any moment its size - scale ratio is in @xmath127 .",
    "the ratio can enter and leave the interval at @xmath128 , but it is not allowed to reach @xmath129 .",
    "we call @xmath124 $ ] and @xmath127 the _ lower _ and _ upper size buffers_. the quality of the mesh is guaranteed because all edges and triangles satisfy the two size bounds [ l ] and [ u ] for @xmath130 .",
    "symmetrically , the correctness of the triangulation is guaranteed because edge contractions and vertex insertions are executed only if the same bounds are violated for @xmath131 .",
    "[ [ early - warning . ] ] early warning .",
    "+ + + + + + + + + + + + + +    recall that an edge is borderline iff its size - scale ratio is contained in the lower size buffer , and it becomes unacceptable at the moment it reaches @xmath126 .",
    "similarly , a triangle is borderline iff its size - scale ratio is contained in the upper size buffer , and it becomes unacceptable at the moment it reaches @xmath129 .",
    "the relaxed scheduling paradigm depends on an early warning algorithm that reports an element before it becomes unacceptable .",
    "that algorithm might err and produce false positives , but it may not let any element slip by and become unacceptable .",
    "false positives cost time but do not cause any harm , while unacceptable elements compromise the correctness of the meshing algorithm . in figure",
    "[ fig : buffers ] , false positives are marked by hollow dots and deletions are marked by filled black dots .",
    "all false positive tests of edges are represented by dots above the lower size buffer . to get a correct early warning algorithm",
    "we just need to test each edge often enough so that its size - scale ratio can not cross the entire lower size buffer between two contiguous tests .",
    "the symmetric rule applies to triangles .",
    "bounds on the amount of time it takes to cross the size buffers will be given in section [ sec4 ] .",
    "note that we have selected the parameters to obtain a fairly long interval @xmath132 $ ] .",
    "it is not clear whether or not this is a good idea or whether a shorter interval would lead to a more efficient algorithm .",
    "an argument _ for _ a long interval is that the implied large size buffers let us get by with less frequent and therefore fewer tests .",
    "an argument _ against _ a long interval is that large size buffers are more likely to cause the deletion of elements that are on their way to better health but did not recover fast enough and get caught before they could leave the buffers",
    ". it might be useful to optimize the length of the intervals through experimentations after implementing the relaxed schedule as part of the skin triangulation algorithm .",
    "in this section , we derive lower bounds on the amount of time it takes for an edge or triangle to change its size by more than some threshold value . from these",
    "we will derive lower bounds on the time it takes an element to pass through the entire size buffer .",
    "we begin by studying the motion of a single point .",
    "we recall that the speed of a point @xmath83 on the skin surface is @xmath133 , assuming we write the patch that contains it in standard form .",
    "the distance traveled by @xmath83 in a small time interval is therefore maximized if it heads straight toward the origin , which for example happens if @xmath83 lies on a shrinking sphere .",
    "starting the motion at point @xmath134 , which is the point @xmath83 at time @xmath135 , we get @xmath136 for the point @xmath83 at time @xmath67 .",
    "this implies @xmath137 , so we see that @xmath83 reaches the origin at time @xmath138 .",
    "more generally , we reach the point @xmath139 between @xmath134 and the origin at time @xmath140 . since the above analysis assumes the fastest way @xmath83 can possibly travel , this implies that within an interval of duration @xmath141 , the point @xmath134 can not travel further than a distance @xmath142 .",
    "we use @xmath143 as a convenient intermediate quantity that gives us indirect access to the important quantity , which is @xmath144 .",
    "recall from the curvature variation lemma of @xcite that the difference in length scale between two points is at most the euclidean distance .",
    "if that distance is @xmath145 then the length scale at @xmath146 is between @xmath147 and @xmath148 times the length scale at @xmath134 .",
    "it follows that if we travel for a duration @xmath149 , we can change the length scale only by a factor @xmath150 the lower bound is tight , and the upper bound can not be reached because the distance @xmath151 from @xmath134 can only be achieved if the length scale shrinks",
    ". we will also be interested in the integral of @xmath152 , which is again maximized if @xmath83 moves straight toward the origin : @xmath153 denoting the above integral by @xmath154 and choosing @xmath155 , as before , we have @xmath156      consider two points @xmath83 and @xmath84 on the skin surface during a time interval @xmath157 $ ] .",
    "we assume that both points follow their trajectories undisturbed by any mesh maintenance operations .",
    "let @xmath134 and @xmath146 be the point @xmath83 at times @xmath135 and @xmath158 and , similarly , let @xmath159 and @xmath160 be the point @xmath84 at these two moments .",
    "we prove that if the time interval is short relative to the length scale of the points then the distance between them can not shrink or grow by much .",
    "the derivative of the distance between points @xmath83 and @xmath84 with respect to time is @xmath165 for example if @xmath83 and @xmath84 lie on a common sphere patch then @xmath166 , @xmath167 and @xmath168 , which implies @xmath169 we prove below that in the general case , the distance derivative stays between these two extremes : @xmath170 where @xmath171 . to get the final result from ( [ eqn : derivative ] )",
    ", we divide by @xmath172 , multiply by @xmath173 , and use @xmath174 to get @xmath175 next we integrate over @xmath157 $ ] and exponentiate to eliminate the natural logarithm : @xmath176 the claimed pair of inequalities follows from ( [ eqn : exponential ] ) and the observation that the upper bound for @xmath154 can not be realized when the distance derivative is positive . to prove ( [ eqn : length - bounds ] ) for general points @xmath83 and @xmath84 , it suffices to show that the length of @xmath177 is at most @xmath178 .",
    "we have seen that this is true if @xmath83 and @xmath84 belong to a common sphere patch .",
    "it is also true if @xmath83 and @xmath84 belong to a common hyperboloid patch because @xmath179 where the primed and unprimed vectors are the same , except that they have a different sign in the third coordinate .",
    "we need a slightly more elaborate argument if @xmath83 and @xmath84 do not belong to the same mixed cell .",
    "we then reflect @xmath84 across the faces of mixed cells that intersect the edge @xmath4 . as described in section [ sec2 ]",
    ", such a sequence of reflections does not affect the velocity vector .",
    "the distance between @xmath83 and the image @xmath88 of @xmath84 under the composition of reflections is at most that between @xmath83 and @xmath84 .",
    "hence , @xmath180 as required .",
    "consider an edge @xmath4 , whose half - length at time @xmath135 is @xmath181 .",
    "as before , let @xmath134 and @xmath159 be the points @xmath83 and @xmath84 at time @xmath135 .",
    "let @xmath161 .",
    "we follow the two points during the time interval @xmath157 $ ] , whose duration is @xmath162 .",
    "the length lemma implies that at time @xmath158 , the length of the edge satisfies @xmath182 our goal is to choose @xmath143 such that the edge at time @xmath158 is guaranteed to satisfy the lower size bound for @xmath130 . using @xmath183 from ( [ eqn : low_bnd_edge_shrink ] ) and @xmath184 from ( [ eqn : length_scale ] ) , we note that @xmath185 is implied by @xmath186 . in other words",
    ", @xmath187 is sufficiently small .",
    "the corresponding time interval during which we can be sure that the edge @xmath4 does not become unacceptably short has duration @xmath188 . to get a better feeling for what these results mean , let us write the half - length of @xmath189 as a multiple of the lower bound in [ l ] for @xmath131 : @xmath190 with @xmath191 .",
    "we then get @xmath192 and @xmath144 from @xmath143 as before .",
    "table [ tab : edge_constants ] shows the values of @xmath143 and @xmath144 for a few values of @xmath193 ."
  ],
  "abstract_text": [
    "<S> we introduce relaxed scheduling as a paradigm for mesh maintenance and demonstrate its applicability to triangulating a skin surface in @xmath0 . </S>"
  ]
}
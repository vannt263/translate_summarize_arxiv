{
  "article_text": [
    "in 1998 , blaze , bleumer and strauss @xcite proposed a cryptographic primitive where a semi - trusted proxy is given some information that allows turning s signature on a message into bob s signature on the same message . these _ proxy re - signatures _",
    "( prs )  not to be confused with proxy signatures @xcite  require that the proxy be unable to sign on behalf of alice or bob on its own .",
    "the last few years saw a renewed interest in proxy re - cryptography @xcite .",
    "+ this paper presents the first constructions of _ multi - use _ _ unidirectional _ proxy re - signature wherein the proxy can only translate signatures in one direction and messages can be re - signed a polynomial number of times .",
    "our constructions are efficient and demand new ( but falsifiable ) diffie - hellman - related intractability assumptions in bilinear map groups .",
    "one of our contributions is a secure scheme in the standard model ( _ i.e. _ without resorting to the random oracle model ) .",
    "related work .",
    "the delegator  can easily designate a proxy translating signatures computed using bob s secret key  the delegatee  into one that are valid w.r.t .",
    "her public key by storing her secret key at the proxy . upon receiving bob s signatures ,",
    "the proxy can check them and re - sign the message using alice s private key .",
    "the problem with this approach is that the proxy can sign arbitrary messages on behalf of alice .",
    "proxy re - signatures aim at securely enabling the delegation of signatures without fully trusting the proxy .",
    "they are related to proxy signatures , introduced in @xcite and revisted in @xcite , in that any prs can be used to implement a proxy signature mechanism but the converse is not necessarily true . + in 1998 , blaze _",
    "@xcite gave the first example of prs where signing keys remain hidden from the proxy .",
    "the primitive was formalized in 2005 by ateniese and hohenberger @xcite who pinned down useful properties that can be expected from proxy re - signature schemes .",
    "+    1 .   re - signature keys can only be used for delegation in one direction ; 2 .",
    "a message can be re - signed a polynomial number of times ; 3 .",
    "re - signature keys can be kept secret by an honest proxy ; 4 .",
    "a user may not even know that a proxy exists ; 5 .",
    "a re - signature can not be linked to the one from which it was generated ; 6 .",
    "a user is only required to store a constant amount of secret data ; 7 .",
    "the delegatee does not act in the delegation process ; 8 .",
    "the proxy can not re - delegate signing rights ;    [ fig : properties ]    blaze _ et al .",
    "_ s construction is _ bidirectional _ ( _ i.e. _ the proxy information allows `` translating '' signatures in either direction ) and _ multi - use _ ( _ i.e. _ the translation of signatures can be performed in sequence and multiple times by distinct proxies without requiring the intervention of signing entities ) .",
    "unfortunately , ateniese and hohenberger @xcite pinpointed a flaw in the latter scheme : given a signature / re - signature pair , anyone can deduce the re - signature key that has been used in the delegation ( _ i.e. _ the _ private proxy _ property is not satisfied ) .",
    "another issue in @xcite is that the proxy and the delegatee can collude to expose the delegator s secret .",
    "+ to overcome these limitations , ateniese and hohenberger proposed two constructions based on bilinear maps .",
    "the first one is a quite simple multi - use , bidirectional protocol built on boneh - lynn - shacham ( bls ) signatures @xcite .",
    "their second scheme is unidirectional ( the design of such a scheme was an open problem raised in @xcite ) but single - use .",
    "it involves two different signature algorithms : _ first - level _ signatures can be translated by the proxy whilst _ second - level _ signatures can not .",
    "a slightly less efficient variant was also suggested to ensure the privacy of re - signature keys kept at the proxy .",
    "the security of all schemes was analyzed in the random oracle model @xcite .",
    "+ our contributions .",
    "ateniese and hohenberger left as open challenges the design of multi - use unidirectional systems and that of secure schemes in the standard security model .",
    "the present paper solves both problems :    * we present a simple and efficient system ( built on the short signature put forth by boneh _",
    "@xcite ) which is secure in the random oracle model under a reasonable extension of the diffie - hellman assumption ; * using an elegant technique due to waters @xcite , the scheme is easily modified so as to achieve security in the standard model .",
    "to the best of our knowledge , this actually provides the first unidirectional prs that dispenses with random oracles and thereby improves a recent bidirectional construction @xcite .",
    "both proposals additionally preserve the privacy of proxy keys ( with an improved efficiency w.r.t .",
    "@xcite in the case of the first one ) .",
    "they combine almost all of the above properties . as in prior unidirectional schemes , proxies are not completely transparent since signatures have different shapes and lengths across successive levels .",
    "the size of our signatures actually grows linearly with the number of past translations : signatures at level @xmath1 ( i.e. that have been translated @xmath2 times if the original version was signed at level @xmath3 ) consist of about @xmath4 group elements . in spite of this blow - up",
    ", we retain important benefits :    * signers may want to tolerate a limited number ( say @xmath5 ) of signature translations for specific messages . then",
    ", if at most @xmath6 translations are permitted in the global system , users can directly generate a signature at level @xmath7 . *",
    "the conversion of a @xmath8 level signature is indistinguishable from one generated at level @xmath9 by the second signer .",
    "the original signer s identity is moreover perfectly hidden and the verifier only needs the new signer s public key .",
    "the simplicity of our schemes makes them attractive for applications that motivated the search for multi - use unidirectional systems in @xcite .",
    "one of them was to provide a proof that a certain path was taken in a directed graph : for instance , u.s .",
    "customs only need one public key ( the one of the immigration agent who previously validated a signature on an e - passport ) to make sure that a foreign visitor legally entered the country and went through the required checkpoints .",
    "another application was the conversion of certificates where valid signatures for untrusted public keys can be turned into signatures that verify under trusted keys . as exemplified in @xcite , unidirectional schemes are quite appealing for converting certificates between _ ad - hoc _ networks : using the public key of network b s certification authority ( ca ) , the ca of network a can non - interactively compute a translation key and set up a proxy converting certificates from network b within its own domain without having to rely on untrusted nodes of b. +    roadmap .",
    "in the forthcoming sections , we recall the syntax of unidirectional prs schemes and the security model in section [ sec : model ] .",
    "section [ sec : bilinear ] explains which algorithmic assumptions we need .",
    "section [ bls - version ] describes our random - oracle - using scheme .",
    "section [ waters - version ] details how to get rid of the random oracle idealization .",
    "we first recall the syntactic definition of unidirectional prs schemes from @xcite .",
    "a ( unidirectional ) proxy re - signature ( prs ) scheme for @xmath10 signers and @xmath6 levels ( where @xmath10 and @xmath6 are both polynomial in the security parameter @xmath11 ) consists of a tuple of ( possibly randomized ) algorithms @xmath12 where :    @xmath13 : : :    is a randomized algorithm ( possibly run by a trusted party ) that takes    as input a security parameter @xmath11 and produces a set    of system - wide public parameters @xmath14 .",
    "@xmath15 : : :    is a probabilistic algorithm that , on input of public parameters    @xmath14 , outputs a signer s private / public key pair    @xmath16 . @xmath17 : : :    on input of public parameters @xmath18 , signer    @xmath3 s public key @xmath19 and signer    @xmath20 s private key @xmath21 , this ( ideally    non - interactive ) algorithm outputs a re - signature key    @xmath22 that allows translating @xmath3 s    signatures into signatures in the name of @xmath20 .",
    "@xmath23 : : :    on input of public parameters @xmath14 , a message    @xmath24 , a private key @xmath25 and an integer    @xmath26 , this ( possibly probabilistic )    algorithm outputs a signature @xmath27 on behalf of signer    @xmath3 at level @xmath1 .",
    "@xmath28 : : :    given common parameters @xmath14 , a level    @xmath29 signature @xmath27 from signer    @xmath30 and a re - signature key    @xmath22 , this ( possibly randomized ) algorithm first    checks that @xmath27 is valid w.r.t @xmath19 .",
    "if    yes , it outputs a signature @xmath31 which verifies at    level @xmath9 under public key @xmath32 .",
    "@xmath33 : : :    given public parameters @xmath14 , an integer    @xmath26 , a message @xmath24 , an    alleged signature @xmath27 and a public key    @xmath19 , this deterministic algorithm outputs    @xmath34 or @xmath35 .",
    "for all security parameters @xmath36 and system - wide parameters @xmath14 output by @xmath13 , for all couples of private / public key pairs @xmath37 , @xmath38 produced by @xmath15 , for any @xmath26 and message @xmath24 , we should have @xmath39    to lighten notations , we sometimes omit to explicitly include public parameters @xmath14 that are part of the input of all but one algorithms .",
    "+ the security model of @xcite considers the following two orthogonal notions termed _ external _ and _ insider security_.    external security : : :    is the security against adversaries outside the system ( that differ    from the proxy and delegation partners ) .",
    "this notion demands that the    next probability be a negligible function of the security parameter    @xmath11 : @xmath40},\\\\ & & ( i^\\star , l , m^\\star,\\sigma^\\star ) \\leftarrow    { \\mathcal{a}}^{\\mathcal{o}_{sign}(.),\\mathcal{o}_{resign}(.)}(\\{pk_i\\}_{i\\in    [ 1,n ] } ) : \\\\ & & \\mathsf{verify}(l , pk_{i^\\star},m^\\star,\\sigma^\\star )    \\wedge ( i^\\star , m^\\star ) \\not\\in q ] \\end{aligned}\\ ] ] where    @xmath41 is an oracle taking as input a    message and an index @xmath42 to return a    first level signature    @xmath43 ; the oracle    @xmath44 takes as input indices    @xmath45 and a level @xmath1 signature    @xmath27 and returns the output of    @xmath46 ;    and @xmath47 denotes the set of ( signer , message ) pairs    @xmath48 queried to @xmath41 or    such that a tuple @xmath49 , with    @xmath50 , was queried to    @xmath44 .",
    "this notion only makes sense if    re - signing keys are kept private by the proxy . + internal security : : :    the second security notion considered in @xcite strives to protect    users , as much as possible , against dishonest proxies and colluding    delegation partners . three security guarantees should be ensured .",
    "+    +    * * limited proxy security : * this notion captures the proxy s inability    to sign messages on behalf of the delegatee or to create signatures    for the delegator unless messages were first signed by one of the    latter s delegatees .",
    "formally , we consider a game where adversaries    have all re - signing keys but are denied access to signers private    keys .",
    "the following probability should be negligible :    @xmath51},~ \\{r_{ij }    \\leftarrow   \\mathsf{rekeygen}(pk_i , sk_j )    \\}_{i , j \\in [ 1,n ] } ,   & &      \\\\   ( i^\\star , l , m^\\star,\\sigma^\\star ) \\leftarrow    { \\mathcal{a}}^{\\mathcal{o}_{sign } ( . , . ) }    \\big(\\{pk_i\\}_{i\\in [ 1,n ] } ,   \\{r_{ij }    \\}_{i , j \\in [ 1,n ] }   \\big ) : & & \\\\    \\mathsf{verify}(l , pk_{i^\\star},m^\\star,\\sigma^\\star ) \\wedge m^\\star    \\not\\in q \\big]\\end{aligned}\\ ] ] where    @xmath52 is an oracle taking as input a    message and an index @xmath42 to return a    first level signature    @xmath43 and    @xmath47 stands for the set of messages @xmath24 queried    to the signing oracle . +    * * delegatee security : * informally , this notion protects the delegatee    from a colluding delegator and proxy .",
    "namely , the delegatee is    assigned the index @xmath34 .",
    "the adversary is provided with an    oracle returning first level signatures on behalf of @xmath34    and is also granted access to re - signature keys and @xmath25 , with    @xmath53 , and the definition can be simplified . in the    general case ,",
    "they remain part of the adversary s input . ]",
    "@xmath54 for all @xmath53 ( but not    @xmath55 for any @xmath3 ) .",
    "her probability of    success @xmath56 } ,    \\\\ & & \\{r_{ij }    \\leftarrow   \\mathsf{rekeygen}(pk_i , sk_j )    \\}_{i \\in   \\{0,\\ldots , n\\},j \\in \\{1,\\ldots , n\\ } }   \\\\ & &   ( l , m^\\star,\\sigma^\\star ) \\leftarrow    { \\mathcal{a}}^{\\mathcal{o}_{sign}(0 , . ) }    \\big(pk_0,\\{pk_i , sk_i\\}_{i\\in [ 1,n]},\\{r_{ij }    \\}_{i \\in   \\{0,\\ldots , n\\},j \\in \\{1,\\ldots , n\\ } } \\big ) :   \\\\    & &   \\mathsf{verify}(l , pk_{0},m^\\star,\\sigma^\\star ) \\wedge m^\\star",
    "\\not\\in q ~\\big],\\end{aligned}\\ ] ] where @xmath47 is the set of    messages queried to @xmath57 , should be    negligible .",
    "+    * * delegator security : * this notion captures that a collusion between    the delegatee and the proxy should be harmless for the honest    delegator .",
    "namely , we consider a target delegator with index    @xmath34 .",
    "the adversary is given private keys of all other    signers @xmath42 as well as _ all _    re - signature keys including @xmath55 and    @xmath54 for @xmath42 .",
    "a signing    oracle @xmath57 also provides her with    first level signatures for @xmath34 . yet",
    ", the following    probability should be negligible , @xmath58 } ,   \\{r_{ij } \\leftarrow   \\mathsf{rekeygen}(pk_i , sk_j )    \\}_{i , j \\in [ 0,n ] } , & & \\\\   ( 1,m^\\star,\\sigma^\\star ) \\leftarrow    { \\mathcal{a}}^{\\mathcal{o}_{sign}(0 , . ) }    \\big(pk_0,\\{pk_i , sk_i\\}_{i\\in [ 1,n ] } ,   \\{r_{ij}\\}_{i , j \\in [ 0,n ] } ,    \\big ) : & & \\\\",
    "\\mathsf{verify}(1,pk_{0},m^\\star,\\sigma^\\star ) \\wedge m^\\star    \\not\\in q \\big],\\end{aligned}\\ ] ] meaning she has little chance of    framing user @xmath34 at the first level .",
    "an important difference between external and limited proxy security should be underlined . in the former ,",
    "the attacker is allowed to obtain signatures on the target message @xmath59 for signers other than @xmath60 . in the latter",
    ", the target message can not be queried for signature at all ( knowing all proxy keys , the attacker would trivially win the game otherwise ) .",
    "bilinear groups . groups @xmath61 of prime order @xmath62 are called _ bilinear map groups _ if there is a mapping @xmath63 with the following properties :    1 .",
    "bilinearity : @xmath64 for any @xmath65 and @xmath66 ; 2 .",
    "efficient computability for any input pair ; 3 .",
    "non - degeneracy : @xmath67 whenever @xmath68 .    in these groups",
    ", we assume the hardness of the well - known computational diffie - hellman ( cdh ) problem which is to compute @xmath69 given @xmath70 and @xmath71 .",
    "flexible diffie - hellman problems .",
    "our signatures rely on new generalizations of the diffie - hellman problem . to motivate them ,",
    "let us first recall the definition of the _ 2-out - of-3 diffie - hellman _",
    "problem @xcite .    in a prime order group @xmath72 ,",
    "the * @xmath73-out - of-@xmath74 diffie - hellman * problem ( @xmath75-@xmath76-cdh ) is , given @xmath77 , to find a pair @xmath78 with @xmath79 .",
    "we introduce a potentially harder version of this problem that we call @xmath35-flexible diffie - hellman problem :    the * @xmath80-flexible diffie - hellman * problem ( @xmath35-flexdh ) is , given @xmath81 , to find a triple @xmath82 .",
    "the unforgeability of our multi - use unidirectional proxy re - signatures is proved assuming the intractability of a relaxed variant of this problem where more flexibility is permitted in the choice of the base @xmath83 for the diffie - hellman computation .",
    "the * @xmath84-flexible diffie - hellman * problem ( @xmath1-flexdh ) is , given @xmath81 , to find a @xmath85-uple @xmath86 where @xmath87 for @xmath88 .",
    "a given instance has many publicly verifiable solutions : a candidate @xmath89-tuple @xmath90 is acceptable if @xmath91 , @xmath92 for @xmath93 and @xmath94 .",
    "the @xmath1-flexdh assumption is thus falsifiable according to naor s classification @xcite .    in generic groups ,",
    "the general intractability result given by theorem @xmath35 of @xcite by kunz - jacques and pointcheval implies the generic hardness of @xmath1-flexdh . for completeness , appendix [ generic ] gives an adaptation of this result in generic _ bilinear _ groups .",
    "the _ knowledge - of - exponent assumption _ ( kea1 ) @xcite was introduced in 1991 by damgrd @xcite .",
    "roughly speaking , kea1 captures the intuition that any algorithm which , given elements @xmath95 , computes a pair @xmath96 must `` know '' @xmath97 . under kea1 , the intractability of the @xmath1-flexible diffie - hellman problem is easily seen to be boil down to the diffie - hellman assumption .",
    "given @xmath98 , an adversary outputting @xmath99 necessarily `` knows '' @xmath100 and thus also @xmath101 as well as @xmath102 , which in turn successively yields logarithms of @xmath103 .",
    "although the kea1 assumption is inherently non - falsifiable , it holds in generic groups @xcite and our results can be seen as resting on the combination cdh+kea1 .",
    "modified diffie - hellman problem .",
    "the second assumption that we need is that the cdh problem @xmath104 remains hard even when @xmath105 is available .",
    "the * modified computational diffie - hellman * problem ( mcdh ) is , given @xmath106 , to compute @xmath107 .",
    "in fact , we use an equivalent formulation of the problem which is to find @xmath108 given @xmath109 ( the equivalence is readily observed by defining @xmath110 , @xmath111 , @xmath112 ) .",
    "to provide a better intuition of the underlying idea of our scheme , we first describe its single - hop version before extending it into a multi - hop system .",
    "+ our approach slightly differs from the one in @xcite where signers have a `` strong '' secret and a `` weak '' secret that are respectively used to produce first and second level signatures . in our scheme ,",
    "users have a single secret but first and second level signatures retain different shapes .",
    "another difference is that our re - signature algorithm is probabilistic .",
    "+ we exploit the idea that , given @xmath113 for some @xmath114 , one can hardly generate a diffie - hellman triple @xmath115 without knowing the corresponding exponent @xmath116 @xcite .",
    "a valid bls signature @xcite @xmath117 can be blinded into @xmath118 using a random exponent @xmath5 .",
    "an extra element @xmath119 then serves as evidence that @xmath120 actually hides a valid pair .",
    "this technique can be iterated several times by adding two group elements at each step . to translate signatures from signer @xmath3 to signer @xmath20 ,",
    "the key idea is to have the proxy perform an appropriate change of variable involving the translation key during the blinding .",
    "the scheme is obviously not strongly unforgeable in the sense of @xcite ( since all but first level signatures can be publicly re - randomized ) but this `` malleability '' of signatures is not a weakness whatsoever .",
    "it even turns out to be a desirable feature allowing for the unlinkability of translated signatures w.r.t .",
    "original ones .",
    "+      in this scheme , signers public keys consist of a single group element @xmath121 .",
    "their well - formedness is thus efficiently verifiable by the certification authority that just has to check their membership in @xmath72 .",
    "this already improves @xcite where public keys @xmath122 ( @xmath123 and @xmath124 being common parameters ) must be validated by testing whether @xmath125 .",
    "@xmath126 : : :    this algorithm chooses bilinear groups    @xmath61 of prime order    @xmath127 .",
    "a generator    @xmath128 and a hash function    @xmath129 ( modeled as a    random oracle in the security proof ) are also chosen .",
    "public    parameters only consist of    @xmath130 @xmath126 : : :    user @xmath3 s public key is set as @xmath131    for a random @xmath132 . @xmath133 : : :    this algorithm outputs the proxy key    @xmath134 which allows turning    signatures from @xmath3 into signatures from    @xmath20 .",
    "+ @xmath135 : : :    to sign @xmath136 at level @xmath35 ,    compute @xmath137 .",
    "+ @xmath138 : : :    to sign @xmath136 at level @xmath75 , choose    @xmath139 and compute    @xmath140 @xmath141 : : :    on input of @xmath136 , the re - signature key    @xmath142 , a signature    @xmath143 and public keys    @xmath144 , check the validity of    @xmath145 w.r.t signer @xmath3 by testing    @xmath146 . if valid ,    @xmath145 is turned into a signature on behalf of    @xmath20 by choosing @xmath147    and computing @xmath148 if we set    @xmath149 , we have @xmath150 @xmath151 : : :    this algorithm accepts if    @xmath146 .",
    "+ @xmath152 : : :    a second level signature    @xmath153 is accepted    for the public key @xmath154 if the following conditions are    true .",
    "@xmath155    relations ( [ yes - ca - marche-1 ] ) and ( [ yes - ca - marche-2 ] ) show that translated signatures have exactly the same distribution as signatures directly produced by signers at level @xmath75 . + in comparison with the only known unidirectional prs with private re - signing keys ( suggested in section 3.4.2 of @xcite ) , this",
    "one features shorter second level signatures that must include a schnorr - like @xcite proof of knowledge in addition to @xmath76 group elements in @xcite . on the other hand , signatures of @xcite",
    "are strongly unforgeable unlike ours . + it is also worth mentioning that the above scheme only requires the @xmath35-flexible diffie - hellman assumption which is more classical than the general @xmath1-flexdh .",
    "the above construction can be scaled up into a multi - hop prs scheme if we iteratively apply the same idea several times . to prevent the linkability of signatures between successive levels @xmath9 and @xmath156 , the re - signature algorithm performs a re - randomization using random exponents @xmath157 .",
    "@xmath158 : : :    to sign @xmath136 at the    @xmath159 level , user @xmath3    chooses    @xmath160    and outputs    @xmath161 where @xmath162 @xmath163 : : :    on input of a message @xmath136 , the re - signature    key @xmath142 , a valid    @xmath164 level signature    @xmath165 and public keys @xmath144 , check the    validity of @xmath27 under @xmath154 . if valid ,    @xmath27 is turned into a    @xmath166 level signature on behalf of    @xmath20 by drawing    @xmath167    and computing    @xmath168    where @xmath169 if we define    @xmath170 and    @xmath171 for @xmath172 ,    we observe that    @xmath173 @xmath174 : : :    the validity of    @xmath175 at level @xmath176 is checked    by testing if these equalities simultaneously hold :    @xmath177      [ bls - proof ] the @xmath6-level scheme is a secure unidirectional proxy re - signature under the @xmath178-flexdh and mcdh assumptions in the random oracle model .",
    "_ limited proxy security .",
    "_ we show that an adversary @xmath179 with advantage @xmath180 implies an algorithm @xmath181 solving an @xmath178-flexdh instance @xmath182 with probability @xmath183 , where @xmath184 is the number of signing queries made by @xmath179 .",
    "system parameters : : :    @xmath179 is challenged on parameters    @xmath185 where    @xmath186 is the random oracle controlled by the    simulator @xmath187 . public key generation",
    ": : :    when @xmath179 asks for the creation of user    @xmath188 , @xmath181 responds with a    newly generated public key @xmath189 , for a    random @xmath132 , which virtually    defines user @xmath3 s private key as @xmath190 . for    all pairs @xmath191 , re - signature keys @xmath22    are calculated as @xmath192 . + oracle queries : : :    @xmath179 s queries are tackled with as follows .    following a well - known technique due to coron @xcite , a binary coin    @xmath193 with expected value    @xmath194 $ ] decides whether    @xmath181 introduces the challenge in the output    of the random oracle or an element of known signature . for the optimal    value of @xmath195 ,",
    "this introduces the loss factor    @xmath196 in the success probability .",
    "+    +    * _ random oracle queries _ : to respond to these queries ,    @xmath181 maintains a list ( referred to as the    @xmath197-list ) of tuples @xmath198 as follows :",
    "if the query @xmath24 already appears in the    @xmath197-list , then @xmath181 returns    @xmath124 ;    2 .",
    "otherwise , @xmath181 generates a random bit    @xmath199 such that @xmath200 = \\zeta$ ] ;    3 .",
    "it picks uniformly at random    @xmath201 and computes    @xmath202",
    "if @xmath203 and    @xmath204 otherwise ;    4 .",
    "it adds the 4-uple @xmath198 to the    @xmath197-list and returns @xmath124 as the answer to the    random oracle query .    *",
    "_ signing queries _ : when a signature of signer @xmath3 is    queried for a message @xmath24 , @xmath181    runs the random oracle to obtain the 4-uple @xmath198    contained in the @xmath197-list . if @xmath205 then    @xmath181 reports failure and aborts",
    "otherwise ,    the algorithm @xmath181 returns    @xmath206 as a valid signature on    @xmath24 .    after a number of queries , @xmath179 comes up with a message @xmath207 , that was never queried for signature for any signer , an index @xmath208 and a @xmath209 level forgery @xmath210 . at this stage",
    ", @xmath181 runs the random oracle to obtain the 4-uple @xmath211 contained in the @xmath197-list and fails if @xmath212 .",
    "otherwise , if @xmath213 is valid , it may be written @xmath214 which provides @xmath181 with a valid tuple @xmath215 , where @xmath216 , so that @xmath217 for @xmath218 . a similar analysis to @xcite gives the announced bound on @xmath181 s advantage if the optimal probability @xmath219 is used when answering hash queries .",
    "+    [ [ delegatee - security . ] ] delegatee security .",
    "+ + + + + + + + + + + + + + + + + + +    we also show how to break the @xmath178-flexdh assumption out of a delegatee security adversary @xmath220 . given an input pair @xmath221 , the simulator @xmath222 proceeds as @xmath181 did in the proof of limited proxy security .",
    "system parameters and public keys : : :    the target delegatee s public key is set @xmath223 . for    @xmath224 ,",
    "other public keys are defined as    @xmath131 for a random @xmath225 . to generate re - signature keys    @xmath22 , @xmath222 sets",
    "@xmath142 when @xmath226 and    @xmath227 for    @xmath228 .",
    "+ queries : : :    @xmath220 s hash and signing queries are handled    exactly as in the proof of limited proxy security .",
    "namely ,    @xmath222 fails if @xmath220    asks for a signature on a message @xmath24 for which    @xmath229 and responds consistently otherwise .",
    "+    when @xmath220 outputs her forgery @xmath230 at level @xmath6 , @xmath222 is successful if @xmath231 , for some @xmath232 , and extracts an admissible @xmath233-uple as done in the proof of limited proxy security . +    [ [ delegator - security . ] ] delegator security .",
    "+ + + + + + + + + + + + + + + + + + +    this security property is proven under the mcdh assumption .",
    "given an adversary @xmath234 with advantage @xmath180 , we outline an algorithm @xmath235 that has probability @xmath183 of finding @xmath236 given @xmath237 .",
    "public key generation : : :    as previously , the target public key is defined as    @xmath223 .",
    "remaining public keys are set as    @xmath131 for a random @xmath238 for @xmath224 .",
    "this time ,    @xmath234 aims at producing a first level forgery    and is granted _ all _ re - signature keys , including @xmath239    and @xmath240 . for indexes @xmath191 s.t .",
    "@xmath226 , @xmath235 sets    @xmath142 . if @xmath241 , it calculates    @xmath227 .",
    "if @xmath242 ( and    thus @xmath243 ) , @xmath235 computes    @xmath244 to    @xmath234 .",
    "hash and signing queries are dealt with exactly as for previous adversaries .",
    "eventually , @xmath234 produces a first level forgery @xmath245 for a new message @xmath59 .",
    "then , @xmath235 can extract @xmath236 if @xmath246 for some @xmath247 , which occurs with probability @xmath248 using coron s technique @xcite .",
    "otherwise , @xmath235 fails .",
    "+    [ [ external - security . ] ] external security .",
    "+ + + + + + + + + + + + + + + + + +    we finally show that an external security adversary @xmath249 also allows breaking the @xmath178-flexdh assumption almost exactly as in the proof of limited proxy security .",
    "the simulator @xmath250 is given an instance @xmath182 .",
    "as previously , @xmath250 must `` program '' the random oracle @xmath197 hoping that its output will be @xmath231 ( where @xmath251 is known ) for the message @xmath59 that the forgery @xmath252 pertains to .",
    "the difficulty is that @xmath250 must also be able to answer signing queries made on @xmath59 for all but one signers .",
    "therefore , @xmath250 must guess which signer @xmath60 will be @xmath249 s prey beforehand . at the outset of the game , it thus chooses an index @xmath253 .",
    "signer @xmath60 s public key is set as @xmath254 .",
    "all other signers @xmath255 are assigned public keys @xmath131 for which @xmath250 knows the matching secret @xmath256 and can thus always answer signing queries .",
    "+ hash queries and signing queries involving @xmath60 are handled as in the proof of limited proxy security . when faced with a re - signing query from @xmath3 to @xmath20 for a valid signature @xmath257 at level @xmath26",
    ", @xmath250 ignores @xmath257 and simulates a first level signature for signer @xmath20 .",
    "the resulting signature @xmath258 is then turned into a @xmath164 level signature and given back to @xmath249 .",
    "a re - signing query thus triggers a signing query that only causes failure if @xmath259 differs from @xmath260 for a known @xmath201 .",
    "+ when @xmath249 forges a signature at level @xmath6 , @xmath250 successfully extract a @xmath233-flexible diffie - hellman tuple ( as @xmath181 and @xmath222 did ) if @xmath261 and if it correctly guessed the identity @xmath60 of the target signer . if @xmath249 s advantage is @xmath180 , we find @xmath262 as a lower bound on @xmath250 s probability of success , @xmath263 and @xmath264 being the number of signature and re - signature queries respectively .",
    "several extensions of bls signatures have a standard model counterpart when waters technique supersedes random oracle manipulations ( e.g. @xcite ) .",
    "likewise , we can very simply twist our method and achieve the first unidirectional prs scheme ( even including single hop ones ) that avoids the random oracle model .",
    "_ mutatis mutandis _ , the scheme is totally similar to our first construction and relies on the same assumptions .",
    "+      as in @xcite , @xmath265 denotes the length of messages to be signed .",
    "arbitrary long messages can be signed if we first apply a collision - resistant hash function with @xmath265-bit outputs , in which case @xmath265 is part of the security parameter .",
    "+ the scheme requires a trusted party to generate common public parameters .",
    "however , this party can remain off - line after the setup phase .",
    "@xmath266 : : :    given security parameters @xmath267 , this algorithm    chooses bilinear groups @xmath61 of    order @xmath127 , generators    @xmath268 and a random    @xmath269-vector    @xmath270 .",
    "the latter defines a function    @xmath271 mapping    @xmath265-bit strings @xmath272    ( where @xmath273 for all @xmath274 ) onto    @xmath275 . the public parameters are    @xmath276 @xmath126 : : :    user @xmath3 sets his public key as @xmath131    for a random @xmath132 .",
    "@xmath133 : : :    given user @xmath20 s private key @xmath277 and user    @xmath3 s public key @xmath154 , generate the    re - signature key @xmath134 that    will be used to translate signature from @xmath3 into    signatures from @xmath20 .",
    "@xmath278 : : :    to sign a message    @xmath279 at the first    level , the signer picks @xmath280 at    random and computes @xmath281 @xmath282 : : :    to generate a second level signature on    @xmath279 , the signer    chooses @xmath283 and computes    @xmath284 @xmath285 : : :    on input of a message @xmath286 , the    re - signature key @xmath142 , a signature    @xmath287 and public keys @xmath144 , check the    validity of @xmath27 w.r.t signer @xmath3 by    testing if @xmath288    if @xmath145 is a valid , it can be turned into a    signature on behalf of @xmath20 by choosing    @xmath289 and computing    @xmath290    where @xmath291 . if we set    @xmath149 , we observe that    @xmath292 @xmath293 : : :    the validity of a first level signature    @xmath294 is checked by testing    if relation ( [ validity-1 ] ) holds .",
    "+ @xmath295 : : :    a second level signature    @xmath296 is    accepted for the public key @xmath154 if the following    conditions are true .",
    "@xmath297    to the best of our knowledge , the above scheme is the first unidirectional prs in the standard model and solves another problem left open in @xcite where all constructions require the random oracle model . like the scheme of section [ bls - version ] , this extension of waters signature @xcite is scalable into a multi - hop prs .      at levels @xmath298 , algorithms @xmath299 , @xmath300 and @xmath301",
    "are generalized as follows .",
    "+    @xmath302 : : :    to sign @xmath286 at level    @xmath9 , user @xmath3 picks    @xmath303 ,    @xmath160    and outputs    @xmath304 where @xmath305 @xmath306 : : :    on input of a message @xmath307 , the    re - signature key @xmath142 , a purported    @xmath164 level signature    @xmath308 and public keys @xmath144 , check the    correctness of @xmath309 under    @xmath154 .",
    "if valid , @xmath309 is    translated for @xmath310 by sampling    @xmath311 ,    @xmath167    and setting    @xmath312    where @xmath313 if we define    @xmath170 , @xmath314 and @xmath171 for    @xmath172 , we observe that    @xmath315 @xmath316 : : :    a candidate signature    @xmath317 is    verified by testing if the following equalities hold :    @xmath318      [ waters - proof ] the scheme with @xmath6 levels ( and thus at most @xmath319 hops ) is a secure unidirectional prs under the @xmath178-flexdh and mcdh assumptions .",
    "the proof is very similar to the one of theorem [ bls - proof ] and replaces random oracle manipulations by the tricks of @xcite .",
    "we prove the limited proxy and delegatee security properties under the @xmath178-flexdh assumption .",
    "the delegator security is demonstrated under the mcdh assumption .",
    "[ [ limited - proxy - security . ] ] limited proxy security .",
    "+ + + + + + + + + + + + + + + + + + + + + + +    we consider an adversary @xmath179 with advantage @xmath180 .",
    "we describe an algorithm @xmath181 solving a @xmath178-flexdh instance @xmath221 with probability @xmath320 , where @xmath184 is the number of signing queries made by @xmath179 , within a comparable time .",
    "system parameters : : :    the simulator @xmath181 prepares common public    parameters as follows .",
    "it first sets @xmath321 .",
    "the    @xmath269-vector    @xmath322 is defined by choosing    @xmath323 and    @xmath324 for    @xmath325 using random vectors    @xmath326 ,    @xmath327 , where    @xmath328 is randomly chosen and    @xmath329 . for any message    @xmath330",
    ", we have    @xmath331 for functions    @xmath332 ,    @xmath333 respectively    defined as    @xmath334    and @xmath335 . as in    @xcite",
    ", @xmath181 will be successful if    @xmath336 for the message    @xmath337 of the forgery stage whereas    @xmath338 for all messages    @xmath339 queried for signature .",
    "since @xmath340 , we have    @xmath341 with non - negligible    probability @xmath342 .",
    "the adversary    @xmath179 is challenged on parameters    @xmath343 .",
    "+ key generation : : :    for user @xmath42 ,    @xmath181 defines a public key as    @xmath189 , for a random    @xmath132 , which virtually defines    user @xmath3 s private key as @xmath190 . for pairs    @xmath191 ,",
    "re - signature keys are chosen as    @xmath192 .",
    "+ signing queries : : :    when a signature of signer @xmath3 is queried for a message    @xmath344 , @xmath181 fails if    @xmath345 .",
    "otherwise , following the    technique of @xcite , it can construct a signature by picking    @xmath346 and computing    @xmath347 which is returned to    @xmath348 .",
    "if we define    @xmath349 , @xmath27    has the correct distribution as @xmath350    and    @xmath351 .",
    "+    after polynomially many queries , @xmath179 comes up with a message , that was never queried for signature for any signer , and index @xmath208 and a forgery    @xmath352    at level @xmath6 . at this stage",
    ", @xmath181 fails if @xmath353 .",
    "otherwise , if @xmath354 is valid , @xmath355 which provides @xmath181 with a valid @xmath233-uple @xmath356 a completely similar analysis to @xcite shows that @xmath357 with probability @xmath358 , which yields the bound on @xmath181 s advantage . +    [ [ delegatee - security.-1 ] ] delegatee security .",
    "+ + + + + + + + + + + + + + + + + + +    a delegatee security adversary @xmath220 also implies a breach in the @xmath178-flexdh assumption . the simulator @xmath222 is given @xmath221 and uses a strategy that is completely analogous to the one of simulator @xmath181 in the proof of limited proxy security .",
    "system parameters and public keys : : :    @xmath222 prepares public parameters exactly as in    the proof of limited proxy security .",
    "the public key of the target user    is defined as @xmath223 .",
    "the attacker    @xmath220 must be provided with private keys for    all the delegators of that user . for @xmath224 ,",
    "other    public keys are therefore chosen as @xmath131 for    randomly picked @xmath132 .",
    "the    adversary @xmath220 then receives    @xmath359 as well as    re - signature keys @xmath22 for    @xmath360 and @xmath361 .",
    "these are set as    @xmath227 and    @xmath142 if @xmath243 . + signing queries : : :    for all signers @xmath53 , @xmath220    can generate signatures on her own . when a signature of the target    signer is requested for a message @xmath344 ,    @xmath222 proceeds as    @xmath181 did when facing the limited proxy    adversary @xmath179 .",
    "it fails if    @xmath345 and can answer the query    otherwise . +    when @xmath220 eventually outputs a forgery @xmath362 at level @xmath6 , @xmath222 is successful if @xmath357 and extracts an admissible @xmath233-uple as @xmath181 did .",
    "+    [ [ delegator - security.-1 ] ] delegator security .",
    "+ + + + + + + + + + + + + + + + + + +    a delegator security adversary @xmath234 having advantage @xmath180 after @xmath184 signing queries is finally shown to imply an algorithm @xmath235 to solve a problem which is equivalent ( under linear time reduction ) to the mcdh problem with probability @xmath363 .",
    "given @xmath237 , this problem is to find out @xmath236 .",
    "public parameters and public key generation : : :    again , system parameters are prepared as in the proof of limited proxy    security .",
    "namely , @xmath235 defines    @xmath364 and chooses @xmath365 so    as to have    @xmath366    for some functions    @xmath367 where    @xmath368 cancels with non - negligible probability .",
    "the public    key of the target delegator is set as @xmath223 . for    @xmath224 , remaining public keys",
    "are set as    @xmath131 for a random    @xmath132 .",
    "the adversary    @xmath234 receives    @xmath359 .",
    "this    time , she is provided with _",
    "all _ re - signature keys ( including    @xmath239 and @xmath240 ) and attempts to produce    a first level forgery . for pairs @xmath191",
    "such that    @xmath226 , @xmath235 sets    @xmath142 .",
    "if @xmath241 , it defines    @xmath227 . if @xmath242 ( and    thus @xmath243 ) , @xmath235 calculates    @xmath244 and hands    @xmath369 to @xmath234 . + signing queries : : :    when @xmath234 asks for a signature from the    target delegator for a message @xmath344 ,    @xmath235 fails if    @xmath345 and can answer the query    exactly as in the proof of limited proxy security otherwise .",
    "+    eventually , @xmath234 produces a first level forgery @xmath370 for a message @xmath371 that was never queried for signature . if @xmath372 , @xmath235 fails",
    ". otherwise , given that @xmath373 , @xmath235 finds out @xmath374 . +    [ [ external - security.-1 ] ] external security .",
    "+ + + + + + + + + + + + + + + + + +    we consider an adversary @xmath249 with advantage @xmath180 .",
    "we describe an algorithm @xmath250 solving a @xmath178-flexdh instance @xmath221 with probability @xmath375 within comparable time , where @xmath184 and @xmath264 are is the number of signing and re - signing queries .",
    "system parameters : : :    the simulator @xmath376 prepares common public    parameters as in the limited proxy security proof .",
    "in addition , it    picks at random an integer    @xmath377 .",
    "+ public key generation : : :    when @xmath249 asks for the creation of user    @xmath42 , @xmath250    responds +    +    * with a newly generated public key @xmath131 , for a    random @xmath132 if    @xmath378 ( s.t .",
    "@xmath256 , user    @xmath3 s private key , is known to the simulator ) ;    * with @xmath379 if @xmath380    ( which virtually defines user @xmath3 s private key as    @xmath116 ) . + oracle queries : : :    @xmath249 s queries are tackled with as follows",
    ". +    +    * _ signing queries _ : when a signature of signer @xmath3 is    queried for a message @xmath344 ,    * * @xmath250 uses its knowledge of    @xmath256 to produce the signature if    @xmath378 ;    * * @xmath250 uses the simulation from the limited    proxy security proof if @xmath380 ( and therefore    fails if @xmath345 ) .",
    "* _ re - signing queries _",
    ": for such a query on input    @xmath381 ,    @xmath250 checks if @xmath257    is a valid @xmath8 level signature on    @xmath344 for some    @xmath382 with respect to the public key    @xmath3 .",
    "if yes , @xmath250 produces a    first level signature on @xmath344 for user    @xmath20 ( using the previous simulation strategy ) , increases    its level up to @xmath9 ( for the same public key ) using    the re - signing algorithm ( with re - signature key simply equal to    @xmath123 ) and outputs the resulting    @xmath164 level signature .",
    "the simulation    only fails if @xmath383 and @xmath384 .",
    "after polynomially many queries , @xmath249 comes up with a message @xmath371 , an index @xmath385 and a forgery @xmath386 at level @xmath6 . recall that @xmath371 can not have been queried to signer @xmath387 .",
    "again , @xmath250 fails if @xmath353 or @xmath388 .",
    "otherwise , if @xmath389 is valid , @xmath250 produces a valid @xmath178-flexdh - tuple as in the limited proxy security proof . a completely similar analysis to",
    "this proof ends up with the announced bound on @xmath250 s advantage .",
    "we described the first multi - use unidirectional proxy re - signatures , which solves a problem left open in 2005 .",
    "the random - oracle - based proposal also offers efficiency improvements over existing solutions at the first level .",
    "the other scheme additionally happens to be the first unidirectional prs in the standard model .",
    "+ two major open problems remain .",
    "first , it would be interesting to see if multi - level unidirectional prs have efficient realizations under more classical intractability assumptions .",
    "a perhaps more challenging task would be to find out implementations of such primitives where the size of signatures and the verification cost grow sub - linearly with the number of translations .    10    m.  abe , s.  fehr .",
    "perfect nizk with adaptive soundness . in _ tcc07 _ , _ lncs _ 4392 , pages 118136 .",
    "springer , 2007 .",
    "an , y.  dodis , and t.  rabin . on the security of joint signature and encryption . in _ eurocrypt02 _ , _ lncs _ 2332 , pages 83107 .",
    "springer , 2002 .",
    "g.  ateniese , k.   fu , m.  green , s.  hohenberger .",
    "improved proxy re - encryption schemes with applications to secure distributed storage . in _ ndss _ , 2005 .",
    "g.  ateniese , k.   fu , m.  green , s.  hohenberger .",
    "improved proxy re - encryption schemes with applications to secure distributed storage . in _",
    "acm tissec _ , 9(1 ) : pp .",
    "130 , 2006 .",
    "g.  ateniese , s.  hohenberger .",
    "proxy re - signatures : new definitions , algorithms , and applications . in _",
    "acm ccs05 _ ,",
    "pages 310319 , acm press , 2005    m. bellare , a. palacio : the knowledge - of - exponent assumptions and 3-round zero - knowledge protocols . proc . of crypto04 , springer lncs vol .",
    "3152 , 273289 ( 2004 )    m.  bellare , p.  rogaway .",
    "random oracles are practical : a paradigm for designing efficient protocols . in _",
    "acm ccs93 _ , pages 6273 , acm press , 1993 .",
    "m.  blaze , g.  bleumer , m.  strauss .",
    "divertible protocols and atomic proxy cryptography . in _ eurocrypt98 _ , _ lncs _ 1403 , pages 127144 , 1998 .",
    "a.  boldyreva , a.  palacio , b.  warinschi .",
    "secure proxy signature schemes for delegation of signing rights .",
    "cryptology eprint archive : report 2003/096 , 2003 .",
    "d.  boneh , x.  boyen .",
    "efficient selective - id secure identity based encryption without random oracles . in _ eurocrypt04 _",
    ", _ lncs _ 3027 , pp .",
    "springer , 2004 .",
    "d.  boneh , b.  lynn , h.  shacham .",
    "short signatures from the weil pairing . in _ asiacrypt01 _ , volume 2248 of _ lncs _ , pages 514532 .",
    "springer , 2002 .",
    "r.  canetti , s.  hohenberger .",
    "chosen - ciphertext secure proxy re - encryption . in _",
    "acm ccs07_. pages 185194 .",
    "acm press , 2007 .",
    "j .- s . coron . on the exact security of full domain hash . in _ crypto00 _ ,",
    "volume 1880 of _ lncs _ , pages 229235 .",
    "springer , 2000 .",
    "i. damgrd : towards practical public key systems secure against chosen ciphertext attacks . proc . of crypto91 , springer lncs vol .",
    "576 , 445456 ( 1991 )    a. dent .",
    "the hardness of the dhk problem in the generic group model .",
    "cryptology eprint archive : report 2006/156 , 2006 .",
    "y.  dodis , a .-",
    "proxy cryptography revisited . in _ ndss03 _ , 2003 .",
    "m.  green , g.  ateniese .",
    "identity - based proxy re - encryption . in _ acns07 _ , _ lncs _ 4521 , pages 288306 .",
    "springer , 2007 .",
    "s.  hohenberger .",
    "advances in signatures , encryption , and e - cash from bilinear groups . ph.d .",
    "thesis , mit , may 2006 .",
    "s.  hohenberger , g.  n.  rothblum , a.  shelat , v.  vaikuntanathan . securely obfuscating re - encryption . in _ tcc07 _ ,",
    "_ lncs _ 4392 , pages 233252 .",
    "springer , 2007 .",
    "s.  kunz - jacques , d.  pointcheval . about the security of mti / c0 and mqv . in _ scn06 _ , _ lncs _ 4116 , pages 156172 , springer , 2006 .",
    "s.  lu , r.  ostrovsky , a.  sahai , h.  shacham , b.  waters .",
    "sequential aggregate signatures and multisignatures without random oracles . in _ eurocrypt06 _ , volume 4004 of _ lncs _ , pages 465485 , springer , 2006 .",
    "t.  malkin , s.  obana and m.  yung . the hierarchy of key evolving signatures and a characterization of proxy signatures . in _",
    "eurocrypt04 _ ,",
    "volume 3027 of _ lncs _ , pages 306322 , springer , 2004 .",
    "m.  mambo , k.  usuda , e.  okamoto .",
    "proxy signatures for delegating signing operation . in _",
    "acm ccs96 _ ,",
    "pages 4857 .",
    "acm press , 1996 .",
    "m.  naor . on cryptographic assumptions and challenges . in _ crypto03 _ ,",
    "_ lncs _ 2729 pages 96109 .",
    "springer - verlag , 2003 .",
    "j.  shao , z.  cao , l.  wang , x.  liang .",
    "proxy re - signature schemes without random oracles . in _ indocrypt07 _ , _ lncs _ 4859 , pages 197209 .",
    "springer , 2007 .",
    "c.  p. schnorr .",
    "efficient identification and signatures for smart cards . in _",
    "crypto89 _ ,",
    "volume 435 of _ lncs _ , pages 239252 .",
    "springer , 1989 .    b.  waters .",
    "efficient identity - based encryption without random oracles . in _ eurocrypt05 _ , _ lncs _ 3494 , pages 114127 .",
    "springer 2005 .",
    "to provide more confidence in the @xmath1-flexdh assumption we prove a lower bound on the computational complexity of the @xmath1-flexdh problem for generic groups equiped with bilinear maps . in @xcite ,",
    "kunz - jacques and pointcheval define a family of computational problems that enables to study variants of the cdh problem in the generic group model .",
    "let @xmath390 be an adversary in this model and @xmath391 be a multivariate polynomial whose coefficients might depend on @xmath390 s behaviour . for values of @xmath392 chosen by the simulator , and knowing their encodings , the goal of @xmath390 is to compute the encodings of @xmath393 such that @xmath394 all elements manipulated by @xmath390 are linear polynomials in @xmath392 and some new random elements introduced through the group oracle .",
    "let us denote @xmath395 the polynomial corresponding to @xmath396 ( it is a random variable ) , kunz - jacques and pointcheval proved the following result .",
    "the choice @xmath402 implies the generic hardness of the problem @xmath1-flexdh in groups .",
    "the purpose of this section is to prove that kunz - jacques and pointcheval result also holds in generic bilinear groups and therefore that the problem @xmath1-flexdh is intractable in these groups .",
    "let @xmath397 and @xmath403 be an upper bound for the probability @xmath399\\ ] ] then the probability that @xmath390 wins after @xmath400 oracle queries to the group operations in @xmath72 , @xmath404 to the bilinear map @xmath405 satisfies @xmath406    in the following @xmath407 and @xmath408 , denote the set @xmath409 and are used to represent elements of @xmath72 and @xmath404 respectively . following @xcite , in the generic bilinear group model",
    ", an adversary @xmath390 has access to    * an oracle @xmath410 that , on input @xmath411 , answers with the representation of @xmath412 in @xmath407 , where @xmath413 is the representation of @xmath414 and @xmath415 the representation of @xmath416 .",
    "* an oracle @xmath417 that , on input @xmath418 , answers with the representation of @xmath412 in @xmath408 , where @xmath413 is the representation of @xmath414 and @xmath415 the representation of @xmath416 . * an oracle @xmath419 that , on input @xmath411 , answers with the representation of @xmath412 in @xmath408 , where @xmath413 is the representation of @xmath414 and @xmath415 the representation of @xmath416 .    the connection between representations and elements of @xmath420 is managed by the simulator through two lists @xmath421 and @xmath422 of pairs @xmath423 associating an element with its representation .",
    "a representation @xmath413 in an oracle query input does not need to correspond to an element of @xmath420 in @xmath421 or @xmath424 ; if it does , the corresponding element is used , otherwise a random element @xmath414 is drawn by the simulator in @xmath420 and bound to @xmath413 , that is , @xmath425 is added to @xmath421 or @xmath424 .",
    "the same rule applies for the answer to the query : if @xmath426 with @xmath427 in @xmath421 or @xmath424 , @xmath428 is answered . otherwise , a random representation @xmath428 , is chosen and @xmath427 is added to @xmath421 or @xmath424 , and the answer to the oracle query is @xmath428 .",
    "overall , each oracle query adds at most 3 pairs to @xmath421 or @xmath424 .    for our problem , initially we have @xmath429 and @xmath390 is given @xmath430 .",
    "@xmath390 s goal is to output @xmath431 corresponding to @xmath432 in @xmath420 that , together with the @xmath256 s , cancel @xmath433 .",
    "the last queries of @xmath390 are assumed to be of the form @xmath434 .",
    "@xmath390 has won if @xmath435 where @xmath436 .    to prove the generic hardness of the problem",
    ", we consider a simulator @xmath437 where random values in @xmath420 are replaced by formal unknowns @xmath154 .",
    "represents of elements of @xmath72 ( _ resp .",
    "_ @xmath404 ) correspond to linear combinations ( _ resp .",
    "_ quadratic polynomials ) of these unknowns with coefficients in @xmath420 .",
    "the simulation is similar to the one given in @xcite and @xmath390 s goal is to output @xmath431 corresponding to linear polynomials @xmath438 in @xmath439 $ ] that , together with the unknowns @xmath154 s , cancel @xmath433 .",
    "the difference between @xmath390 s success probability in the two simulation occurs only if @xmath437 s simulation , the representations of different polynomials ( linear or quadratic ) @xmath440 and @xmath441 collide in @xmath442 s simulation .",
    "the number of polynomials in @xmath421 and @xmath422 is upper - bounded by @xmath443 and their degrees is at most two .",
    "therefore , the difference appears with probability at most @xmath444 . as in @xcite ,",
    "the success criterion in @xmath437 s simulation is stricter than in @xmath442 s simulation and as above the probability that @xmath390 succeeds in @xmath442 s simulation but not in @xmath437 s simulation is upper - bounded by @xmath445 ( since @xmath433 is of degree @xmath446 and the @xmath395 s are linear polynomial ) ."
  ],
  "abstract_text": [
    "<S> in 1998 , blaze , bleumer , and strauss suggested a cryptographic primitive named _ proxy re - signatures _ where a proxy turns a signature computed under alice s secret key into one from bob on the same message . </S>",
    "<S> the semi - trusted proxy does not learn either party s signing key and can not sign arbitrary messages on behalf of alice or bob . at ccs 2005 , ateniese and hohenberger </S>",
    "<S> revisited the primitive by providing appropriate security definitions and efficient constructions in the random oracle model . </S>",
    "<S> nonetheless , they left open the problem of designing a _ multi - use unidirectional _ scheme where the proxy is able to translate in only one direction and signatures can be re - translated several times . </S>",
    "<S> + this paper solves this problem , suggested for the first time @xmath0 years ago , and shows the first _ multi - hop _ _ unidirectional _ proxy re - signature schemes . </S>",
    "<S> we describe a random - oracle - using system that is secure in the ateniese - hohenberger model . </S>",
    "<S> the same technique also yields a similar construction in the _ standard model _ </S>",
    "<S> ( i.e. without relying on random oracles ) . both schemes are efficient and require newly defined  but falsifiable  diffie - hellman - like assumptions in bilinear groups </S>",
    "<S> .    * keywords . * </S>",
    "<S> multi - use proxy re - signatures , unidirectionality , pairings . </S>"
  ]
}
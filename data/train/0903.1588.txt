{
  "article_text": [
    "recently , codes have been intensively studied due to their near - shannon - limit performance under iterative belief - propagation decoding .",
    "binary regular codes were first proposed by gallager in 1963 @xcite . in the last decade the capability of irregular codes to outperform regular ones in the waterfall region of the performance curve and to asymptotically approach ( or even achieve ) the communication channel capacity has been recognized and deeply investigated ( see for instance @xcite ) .    it is usual to represent an code as a bipartite graph , i.e. , as a graph where the nodes are grouped into two disjoint sets , namely , the and the , such that each edge may only connect a to a .",
    "the bipartite graph is also known as a tanner graph @xcite . in the tanner graph of an code",
    ", a generic degree-@xmath1 can be interpreted as a length-@xmath1 repetition code , as it repeats @xmath1 times its single information bit towards the .",
    "similarly , a degree-@xmath2 of an code can be interpreted as a length-@xmath2 code , as it checks the parity of the @xmath2 connected to it .",
    "the growth rate of the weight distribution of gallager s regular codes was investigated in @xcite .",
    "the analysis demonstrated that , provided that the smallest degree is at least 3 , the ensemble has good growth rate behavior , i.e. a code randomly chosen from the ensemble contains an asymptotically small expected number of small linear - weight codewords .",
    "more recently , the study of the weight distribution of binary codes has been extended to irregular ensembles",
    ". pioneering works in this area are @xcite . in @xcite",
    "a complete solution for the growth rate of the weight distribution of binary irregular codes was developed .",
    "one of the main results of @xcite is a connection between the expected behavior of the weight distribution of a code randomly chosen from the ensemble and the parameter @xmath3 , @xmath4 and @xmath5 being the edge - perspective and degree distributions , respectively .",
    "more specifically , it was shown that for a code randomly chosen from the ensemble , one can expect an exponentially small number of small linear - weight codewords if @xmath6 , and an exponentially large number of small linear - weight codewords if @xmath7 .",
    "this result establishes a connection between the statistical properties of the weight distribution of binary irregular codes and the stability condition of binary irregular codes over the @xcite .",
    "if @xmath8 denotes the asymptotic iterative decoding threshold over the , the stability condition states that we always have @xmath9^{-1}.\\end{aligned}\\ ] ]    prior to the rediscovery of codes , binary codes were introduced by tanner in 1981 @xcite .",
    "a code generalizes the concept of an code in that a degree-@xmath2 may in principle be any @xmath10 linear block code , @xmath2 being the code length and @xmath11 the code dimension .",
    "such a accounts for @xmath12 linearly independent parity - check equations .",
    "a associated with a linear block code which is not a code is said to be a _",
    "generalized _ . in @xcite",
    "_ regular _ codes ( also known as tanner codes ) were investigated , these being codes where the are all repetition codes of the same length and the are all linear block codes of the same type .",
    "the growth rate of the weight distribution of binary codes was investigated in @xcite . in @xcite the growth rate",
    "is calculated for tanner codes with bch check component codes and length-2 repetition , leading to an asymptotic lower bound on the minimum distance .",
    "the same lower bound is developed in @xcite assuming hamming and length-2 repetition . both works",
    "extend the approach developed by gallager in ( * ? ? ?",
    "* chapter 2 ) to show that these ensembles have good growth rate behavior .",
    "the growth rate of the number of small weight codewords for codes with a uniform set ( all of the same type ) and an irregular set ( repetition with different lengths ) is investigated in @xcite .",
    "it is shown that the ensemble has good growth rate behavior when either the uniform set is composed of linear block codes with minimum distance at least @xmath13 , or the minimum length of the repetition is 3 . on the other hand , if the minimum distance of the and the minimum length of the repetition are both equal to 2 , the goodness or otherwise of the growth rate behavior of the ensemble depends on the sign of the first order coefficient in the growth rate taylor series expansion .",
    "the results developed in @xcite were further extended in @xcite to ensembles with an irregular set ( of different types ) .",
    "it was there proved that , provided that there exist with minimum distance @xmath0 , a parameter @xmath14 , generalizing the parameter @xmath3 of code ensembles , plays in the context of the weight distribution of codes the same role played by @xmath3 in the context of the weight distribution of codes .",
    "the parameter @xmath15 is defined in section  [ section : further_def_&_notation ] .",
    "interestingly , this latter results extends to binary codes the same connection between the statistical properties of the weight distribution of irregular codes and the stability condition over the .",
    "in fact , it was shown in @xcite that the stability condition of binary irregular codes over the is given by @xmath16^{-1}.\\end{aligned}\\ ] ]    generalized codes represent a promising solution for low - rate channel coding schemes , due to an overall rate loss introduced by the generalized @xcite .",
    "doubly - generalized ldpc ( d - gldpc ) codes generalize the concept of codes while facilitating much greater design flexibility in terms of code rate @xcite ( an analogous idea may be found in the previous work @xcite ) . in a d - gldpc code ,",
    "the as well as the may be of any generic linear block code types .",
    "a degree-@xmath1 may in principle be any @xmath17 linear block code , @xmath1 being the code length and @xmath18 the code dimension .",
    "such a is associated with @xmath18 d - gldpc code bits .",
    "it interprets these bits as its local information bits and interfaces to the set through its @xmath1 local code bits .",
    "a which corresponds to a linear block code which is not a repetition code is said to be a _",
    "generalized _ .",
    "a d - gldpc code is said to be _ regular _ if all of its are of the same type and all of its are of the same type and is said to be _ irregular _ otherwise .",
    "the structure of a d - gldpc code is depicted in fig .",
    "[ fig : dgldpc ] .",
    "a related class of bipartite - graph codes was considered in @xcite where both and were generalized , but where the code bits were associated directly with the _ edges _ of the tanner graph ( and thus the generator matrices associated with were irrelevant ) . in this work",
    "it was shown that in certain regular code ensembles with the same local code of minimum distance @xmath19 at every and , asymptotically good codes exist in the ensemble which meet the gilbert - varshamov bound .",
    "these ensembles are generalizations of _ expander code",
    "_ ensembles @xcite .",
    "also , @xcite presented similar results in the context of regular _ hypergraph _ codes with random coding at the nodes ( for a fixed hypergraph ) , random hypergraphs ( with the same local code at every and ) , and random selection of both hypergraph and local codes .",
    "also , @xcite investigates the asymptotic weight enumerators of many -like codes including turbo codes and repeat - accumulate codes .    in this paper the growth rate of the weight distribution of binary irregular d - gldpc codes",
    "is analyzed for small weight codewords .",
    "it is shown that a given irregular d - gldpc code ensemble has good growth rate behavior when there are no with minimum distance @xmath0 , and likewise when there are no with minimum distance @xmath0 .",
    "it is also shown that , in the case where there exist both and with minimum distance @xmath0 , a parameter @xmath20 discriminates between an asymptotically small and an asymptotically large expected number of small linear - weight codewords ( the function @xmath21 is defined in section  [ section : further_def_&_notation ] ) .",
    "the parameter @xmath20 generalizes the above mentioned parameters @xmath3 and @xmath14 to the case where both generalized and generalized are present .",
    "the obtained result also represents the extension to the d - gldpc case of the previously recalled connection with the stability condition over the .",
    "in fact , it was proved in ( * ? ? ? * theorem 2 ) that the stability condition of d - gldpc codes over the is given by @xmath22 the paper is organized as follows .",
    "section  [ section : irregular_d_gldpc ] defines the d - gldpc ensemble of interest , and introduces some definitions and notation pertaining to this ensemble .",
    "section  [ section : further_def_&_notation ] defines further terms regarding the and which compose the d - gldpc codes in the ensemble .",
    "section  [ section : growth_rate ] presents the main result of the paper regarding the growth rate of the weight distribution , together with several corollaries .",
    "section  [ section : proof_of_main_result ] proves this main result , and section  [ section : conclusion ] concludes the paper .",
    "we define a d - gldpc code ensemble @xmath23 as follows , where @xmath24 denotes the number of .",
    "there are @xmath25 different types @xmath26 , and @xmath27 different types @xmath28 . for each type @xmath29 , we denote by @xmath30 , @xmath31 and @xmath32 the dimension , length and minimum distance , respectively . for each type @xmath33 , we denote by @xmath34 , @xmath35 and @xmath36 the dimension , length and minimum distance , respectively . for @xmath29 , @xmath37 denotes the fraction of edges connected to of type @xmath38 .",
    "similarly , for @xmath33 , @xmath39 denotes the fraction of edges connected to of type @xmath38 .",
    "note that all of these variables are independent of @xmath24 .",
    "the polynomials @xmath5 and @xmath4 are defined by @xmath40 and @xmath41 if @xmath42 denotes the number of edges in the tanner graph , the number of of type @xmath43 is then given by @xmath44 , and the number of of type @xmath45 is then given by @xmath46 . denoting as usual @xmath47 and @xmath48 by @xmath49 and @xmath50 respectively",
    ", we see that the number of edges in the tanner graph is given by @xmath51 and the number of is given by @xmath52 .",
    "therefore , the fraction of of type @xmath29 is given by @xmath53 and the fraction of of type @xmath33 is given by @xmath54 also the length of any d - gldpc codeword in the ensemble is given by @xmath55 note that this is a linear function of @xmath24 .",
    "similarly , the total number of parity - check equations for any d - gldpc code in the ensemble is given by @xmath56 a code in the irregular d - gldpc ensemble then corresponds to a permutation on the @xmath42 edges connecting to .",
    "the _ design rate _ of the d - gldpc ensemble is given by @xmath57 where for @xmath29 ( resp .",
    "@xmath33 ) , @xmath58 is the local code rate of ( resp . ) of type @xmath38 .",
    "each code in the ensemble has a code rate larger than or equal to @xmath59 .",
    "the growth rate of the weight distribution of the irregular d - gldpc ensemble sequence @xmath60 is defined by @xmath61 \\label{eq : growth_rate_result}\\ ] ] where @xmath62 denotes the expectation operator over the ensemble @xmath23 , and @xmath63 denotes the number of codewords of weight @xmath64 of a randomly chosen d - gldpc code in the ensemble @xmath23 .",
    "the limit in ( [ eq : growth_rate_result ] ) assumes the inclusion of only those positive integers @xmath24 for which @xmath65 and @xmath66 $ ] is positive ( i.e. , where the expression whose limit we seek is well defined ) .",
    "note that the argument of the growth rate function @xmath67 is equal to the ratio of d - gldpc codeword length to the number of ; by ( [ eq : dg_ldpc_codeword_length ] ) , this captures the behaviour of codewords linear in the block length , as in @xcite for the case .",
    "let @xmath67 be the growth rate of the weight distribution of an irregular d - gldpc ensemble sequence .",
    "the _ critical exponent codeword weight ratio _ is defined as @xmath68 .",
    "also , the ensemble sequence is said to have _ good growth rate behavior _ if @xmath69 , and _ bad growth rate behavior _ if @xmath70 .",
    "[ def : critical_exponent ]    thus an irregular d - gldpc code ensemble sequence has good growth rate behavior if and only if it contains an asymptotically small expected number of small linear - weight codewords . note that an ensemble with good growth rate behavior must necessarily contain asymptotically good code sequences .",
    "the present definition of the critical exponent codeword weight ratio may also be found in @xcite .",
    "we next define the concepts of _ assignment _ and _ split assignment_. the concept of _ assignment _ was used in @xcite to develop an expression for the growth rate of the weight distribution of irregular code ensembles .",
    "the concept of split assignment is introduced in this paper .",
    "an _ assignment _ is a subset of the edges of the tanner graph .",
    "an assignment is said to have _ weight _",
    "@xmath18 if it has @xmath18 elements .",
    "an assignment is said to be _ check - valid _ if the following condition holds : supposing that each edge of the assignment carries a @xmath71 and each of the other edges carries a @xmath72 , each recognizes a valid local codeword .",
    "a _ split assignment _ is an assignment , together with a subset of the d - gldpc code bits ( called a _ codeword assignment _ ) .",
    "a split assignment is said to have _ split weight _",
    "if its assignment has weight @xmath74 and its codeword assignment has @xmath75 elements .",
    "a split assignment is said to be _ check - valid _ if its assignment is check - valid .",
    "a split assignment is said to be _ variable - valid _ if the following condition holds : supposing that each edge of its assignment carries a @xmath71 and each of the other edges carries a @xmath72 , and supposing that each d - gldpc code bit in the codeword assigment is set to @xmath71 and each of the other code bits is set to @xmath72 , each recognizes a local input word and the corresponding valid local codeword .",
    "note that for any d - gldpc code , there is a bijective correspondence between the set of d - gldpc codewords and the set of split assignments which are both variable - valid and check - valid .",
    "the weight enumerating polynomial for type @xmath29 is given by @xmath76 here @xmath77 denotes the number of weight-@xmath75 codewords for of type @xmath38 . note that @xmath78 for all @xmath29",
    "also , for each @xmath29 , corresponding to the polynomial @xmath79 we denote the sets @xmath80 and @xmath81    the bivariate weight enumerating polynomial for type @xmath33 is given by @xmath82 here @xmath83 denotes the number of weight-@xmath74 codewords generated by input words of weight @xmath75 , for of type @xmath38 .",
    "also , for each @xmath33 , corresponding to the polynomial @xmath84 we denote the sets @xmath85 and @xmath86 we also define @xmath87    we denote the smallest minimum distance over all types by @xmath88 and the set of types with this minimum distance by @xmath89 we define the parameter @xmath90 and note that we have @xmath91 with equality if and only if @xmath92 .",
    "we define the parameter @xmath93 we also define @xmath94 as the smallest integer @xmath95 such that there exists some cn with a non - zero number of weight-@xmath96 codewords : @xmath97 the parameter @xmath94 represents the second smallest minimum distance over all types .",
    "similarly , we denote the smallest minimum distance over all types by @xmath98 and the set of types with this minimum distance by @xmath99 we also define @xmath100 as the smallest integer @xmath101 such that there exists some vn with a non - zero number of weight-@xmath102 codewords : @xmath103 the parameter @xmath100 represents the second smallest minimum distance over all types .    for each @xmath104 ,",
    "define @xmath105 and define the parameter @xmath106 and the set @xmath107 we also define the parameter @xmath108 since @xmath91 with equality if and only if @xmath109 , and @xmath110 for all @xmath104 , it follows that @xmath111 with equality if and only if @xmath112 . also , for @xmath113 , define @xmath114 note that in the specific case @xmath115 , we have @xmath116 and @xmath117 , and we may write @xmath118 where @xmath119 for each @xmath120  note that these sets are nonempty .",
    "we define the polynomials @xmath121 and @xmath122 since all of the coefficients of @xmath123 and @xmath124 are positive , these polynomials are both monotonically increasing on @xmath125 and therefore their inverses , denoted by @xmath126 and @xmath127 respectively , are well - defined and unique on this interval . note that in the case @xmath112 , we have @xmath128 where @xmath129 also note that in the case @xmath112 , ( [ eq : c_definition ] ) becomes @xmath130 and we define @xmath131 as the counterpart of the parameter @xmath15 in the variable node domain . here",
    "@xmath132 is the total number of weight-@xmath0 codewords for of type @xmath38 .",
    "note that in this case the parameter @xmath15 depends only on the with minimum distance @xmath0 , and the parameter @xmath133 and the polynomial @xmath21 depend only on the with minimum distance @xmath0 .",
    "also note that while the polynomial @xmath21 given by ( [ eq : pofx_definition ] ) depends on the _ representations _",
    "( i.e. generator matrices ) , the parameter @xmath133 given by ( [ eq : v_definition ] ) does not .    throughout this paper , we make use of the following standard notation .",
    "let @xmath134 be a nonnegative real - valued function , and let @xmath135 be a real - valued function .",
    "we say that @xmath135 is @xmath136 , writing @xmath137 , if and only if there exist positive real numbers @xmath18 and @xmath138 , both independent of @xmath139 , such that @xmath140 let @xmath141 and @xmath142 be two real - valued sequences , where @xmath143 for all @xmath24 , and let @xmath144 .",
    "we say that @xmath141 is _ asymptotically equal _ to @xmath142 as @xmath145 , writing @xmath146 , if and only if @xmath147 .",
    "finally , throughout this paper , the notation @xmath148 denotes napier s number .",
    "the following theorem constitutes the main result of the paper .",
    "consider an irregular d - gldpc code ensemble sequence @xmath23 .",
    "the growth rate of the weight distribution is given by @xmath149 + o(\\alpha^{\\xi } ) \\ ; , \\label{eq : growth_rate_general}\\ ] ] where @xmath150 [ thm : growth_rate ]    this theorem is proved in section [ section : proof_of_main_result ] .",
    "we next provide a series of corollaries to this result ; this serves to illustrate the manner in which several related results in the literature follow as special cases of theorem [ thm : growth_rate ] .    in the case where either @xmath151 or @xmath152 , the growth rate of the weight distribution is given by @xmath153 where @xmath154 .",
    "[ cor:1 ]    thus if either @xmath151 or @xmath152 , we have @xmath155 and the ensemble sequence exhibits good growth rate behavior .",
    "this generalizes results along this line in @xcite .",
    "a special case of corollary [ cor:1 ] is as follows .",
    "suppose @xmath151 or @xmath152 and also @xmath156 for a single point @xmath157 , i.e. a single point @xmath157 achieves the minimum in ( [ eq : t ] ) although this @xmath157 may be manifest in different types @xmath113 .",
    "then @xmath158 where @xmath159 is given by @xmath160 - \\frac{t}{\\psi } \\ ; .",
    "\\label{eq : k}\\ ] ] [ cor:2 ]    this result follows by making the appropriate substitutions in theorem [ thm : growth_rate ] and noting that in this case @xmath123 and @xmath124 are monomials satisfying @xmath161 .",
    "consider a code ensemble with irregular set and irregular set ( i.e. different degrees ) .",
    "let @xmath162 denote the smallest minimum distance of the , and @xmath163 denote the minimum degree .",
    "then @xmath164 where @xmath165 where @xmath166 represents the fraction of vns of degree @xmath163 .",
    "[ cor:3 ]    in this case , each vn type @xmath33 satisfies @xmath167 .",
    "let @xmath168 represent the vn type with minimum length ( degree ) , i.e. , @xmath169 , and note that @xmath170 ; then @xmath171 and @xmath172 .",
    "application of corollary [ cor:2 ] then directly yields the required result , where we use the fact that @xmath173 in this case .",
    "this provides a generalization of the result of @xcite which derived ( [ eq : growth_rate_gldpc_general ] ) for the case of codes with _",
    "regular _ sets and irregular degrees , and which did not include the result ( [ eq : k_gldpc ] ) regarding the evaluation of the parameter @xmath159 .",
    "consider a d - glpdc code ensemble @xmath23 satisfying @xmath112",
    ". then the growth rate of the weight distribution is given by @xmath174 + o(\\alpha^{\\xi } ) \\ ; , \\label{eq : growth_rate_case_1}\\ ] ] where the polynomial @xmath21 and the parameter @xmath15 are given by ( [ eq : pofx_definition ] ) and ( [ eq : c_definition_revisited ] ) respectively , and where @xmath175 [ cor:4 ]    when @xmath112 , we have @xmath176 and @xmath177 ; also by ( [ eq : chi_definition ] ) we have @xmath178 which implies that @xmath179 .",
    "also , it may be verified that @xmath180 in this case .",
    "corollary [ cor:4 ] first appeared in @xcite .",
    "a necessary and sufficient condition for a d - gldpc ensemble satisfying @xmath112 to have good growth rate behavior follows in a straightforward manner as shown next .    consider a d - glpdc code ensemble @xmath23 satisfying @xmath112 . then , a necessary and sufficient condition for @xmath23 to have good growth rate behavior is @xmath181 where @xmath15 and @xmath133 are given by ( [ eq : c_definition_revisited ] ) and ( [ eq : v_definition ] ) respectively .",
    "[ cor:5 ]    from ( [ eq : growth_rate_case_1 ] ) the necessary and sufficient condition is @xmath182 ; rearranging and using the monotonicity of @xmath21 yields the result .",
    "it is worth noting that an analogous theorem to theorem [ thm : growth_rate ] holds also for the stopping set size distribution of irregular d - gldpc codes .",
    "the proof is almost identical to that of theorem [ thm : growth_rate ] and is outlined in appendix [ app : stopping_sets ] .",
    "[ lb ] [ lt]@xmath183 [ lt ] [ c ] [ tc ] [ c ]   plane .",
    "the illustration is for a smallest cn minimum distance of @xmath184 , so @xmath185 .",
    "the sets @xmath186 for the two vn types @xmath187 are illustrated by open circles and filled diamonds respectively . the line @xmath188 has a fixed point at @xmath189 and is rotated in an anticlockwise fashion until it touches any of these points . in this example",
    ", this occurs at the point @xmath190 .",
    "therefore in this example @xmath191 , @xmath192 , @xmath193 and for small values of @xmath194 the dominating contribution to the growth rate comes from weight-@xmath13 local codewords of the type-@xmath71 vns generated by weight-@xmath13 local input words.,title=\"fig:\",width=13 ]    from theorem  [ thm : growth_rate ] and from the definitions of @xmath123 and @xmath124 given in and respectively , we observe that the triples @xmath195 ( or , equivalently , vn input - output weight enumerating function coefficients @xmath196 ) such that @xmath157 lies in one of the sets @xmath197 ( @xmath113 ) make a dominating contribution to the growth rate for values of @xmath194 close to zero .",
    "we will refer to the set of such triples as the _",
    "dominant set_. note that the dominant set may equivalently be described as the set of triples @xmath195 such that @xmath198 for some @xmath33 , @xmath199 .",
    "interestingly , the dominant set admits an instructive graphical interpretation and may be easily identified using a very simple geometric construction . in the @xmath157 plane",
    ", a line @xmath188 through the fixed point @xmath189 is rotated in an anticlockwise fashion until it comes in contact with one or more of the points @xmath200 .",
    "the slope of the line @xmath188 at this point is the parameter @xmath201 defined in  , the set of @xmath33 which have points @xmath202 is the set defined as @xmath203 , and for each such @xmath38 the set of such points on @xmath188 is the set @xmath197 defined in  .",
    "note that due to  , the position of the fixed point @xmath189 depends only on the smallest cn minimum distance @xmath162 , and always lies somewhere on the line segment joining @xmath204 and @xmath205 , including the latter endpoint .",
    "this interpretation is illustrated in fig .",
    "[ fig : geometric_construction ] for an example d - gldpc code with two vn types @xmath206 .",
    "type @xmath207 ( open circles ) corresponds to the hamming code of length @xmath208 , dimension @xmath209 , minimum distance @xmath210 and represented by the systematic generator matrix @xmath211 $ ] .",
    "type @xmath212 ( filled diamonds ) corresponds to the first - order reed - muller code of length @xmath213 , dimension @xmath214 , minimum distance @xmath215 and represented by the generator matrix @xmath216 $ ] . in the specific case of fig .",
    "[ fig : geometric_construction ] we have @xmath217 , which corresponds to @xmath184 .",
    "hamming codes , and assuming @xmath218 and @xmath219 , through this would represent a rate @xmath220 ensemble . ]",
    "it may be deduced from the figure that for values of @xmath194 close to zero the growth rate @xmath67 is dominated by weight-@xmath13 local codewords of the hamming vns associated with weight-@xmath13 local input words .    from corollary [ cor:4 ]",
    "we observe that in the special case where @xmath112 , the growth rate depends only on the and with minimum distance equal to @xmath0 , and ( [ eq : growth_rate_case_1 ] ) is a first - order taylor series around @xmath221 which directly generalizes the results of @xcite and @xcite ( for irregular and codes respectively ) to the case of irregular d - gldpc codes .",
    "note that the error term in is @xmath222 , which is different to the error term @xmath223 reported in previous literature ( theorem 4.1 in @xcite , theorem 5 in @xcite ) ; this difference is manifest in the case where @xmath112 and either @xmath224 or @xmath225 .",
    "corollary [ cor:4 ] indicates that in the analysis of the asymptotic growth rate of the weight distribution , the parameter @xmath226 in the context of d - gldpc codes plays an analagous role to the parameter @xmath227 for irregular codes , and to the parameter @xmath14 for irregular codes .",
    "it discriminates between ensemble sequences with good growth rate behavior , for which @xmath228 , and ensemble sequences with bad growth rate behavior , for which @xmath229 .",
    "in this section , theorem [ thm : growth_rate ] is proved . for ease of presentation , the proof is broken into four parts .",
    "consider @xmath231 of the same type @xmath29 .",
    "using generating functions , the number of check - valid assignments ( over these ) of weight @xmath230 is given by be the number of ways of obtaining an outcome @xmath232 in experiment @xmath233 , and let @xmath234 be the number of ways of obtaining an outcome @xmath235 in experiment @xmath236 . also let @xmath237 be the number of ways of obtaining an outcome @xmath157 in the combined experiment @xmath238 with sum @xmath239 .",
    "then the generating functions @xmath240 , @xmath241 and @xmath242 are related by @xmath243 . ]",
    "@xmath244\\ ] ] where @xmath245 $ ] denotes the coefficient of @xmath246 in the polynomial @xmath247 .",
    "we now use the following result , the proof of which appears in ( * ? ? ? * appendix a ) :    let @xmath248 , where @xmath249 , be a polynomial satisfying @xmath250 and @xmath251 for all @xmath252 . for a fixed positive rational number @xmath253 ,",
    "consider the set of positive integers @xmath254 such that @xmath255 and @xmath256 > 0 $ ] .",
    "then either this set is empty , or it has infinite cardinality ; if @xmath38 is one such @xmath254 , then so is @xmath257 for every positive integer @xmath102 . in the latter case ,",
    "the following limit is well defined and exists : @xmath258 = \\max_{{{\\mbox{\\scriptsize \\boldmath $ \\beta$ } } } } \\sum_{i \\in u } \\beta_i \\log \\left ( \\frac{a_i}{\\beta_i } \\right)\\ ] ] where @xmath259 , @xmath260 , and the maximization is subject to the constraints @xmath261 , @xmath262 and @xmath263 for all @xmath264 .    applying this lemma by substituting @xmath265 , @xmath266 and @xmath267",
    ", we obtain that with @xmath268 fixed , as @xmath269 @xmath270   \\label{eq : nct_epsilon_start } \\\\ { \\stackrel{m}{\\approx}}\\exp \\left\\ { m \\gamma \\max_{{{\\mbox{\\scriptsize \\boldmath $ \\beta$}}}^{(t ) } } \\sum_{i \\in u_t } \\beta^{(t)}_{i } \\log \\left ( \\frac{a^{(t)}_{i}}{\\beta^{(t)}_{i } } \\right ) \\right\\ }   \\label{eq : nct_epsilon_mid } \\\\",
    "\\triangleq \\exp \\left\\ { m w^{(\\gamma)}_t(\\epsilon ) \\right\\ } \\label{eq : nct_epsilon_end}\\end{aligned}\\ ] ] where the maximization over @xmath271 is subject to the constraints @xmath272 , @xmath273 and @xmath274 for all @xmath275 ( recall that the sets @xmath276 and @xmath277 are given by ( [ eq : ut ] ) and ( [ eq : ut- ] ) ) .",
    "next we derive an expression , valid asymptotically , for the number of check - valid assignments of weight @xmath278 . for each @xmath29 , let @xmath279 denote the portion of the total weight @xmath278 apportioned to of type @xmath38 . then @xmath280 for each @xmath29 , and @xmath281 .",
    "also denote @xmath282 .",
    "the number of check - valid assignments of weight @xmath278 satisfying the constraint @xmath283 is obtained by multiplying the numbers of check - valid assignments of weight @xmath279 over @xmath284 of type @xmath38 , for each @xmath29 , @xmath285 where the fraction @xmath286 of of type @xmath29 is given by ( [ eq : gamma_t_definition ] ) .    the number of check - valid assignments of weight @xmath278 , which we denote @xmath287 , is equal to the sum of @xmath288 over all admissible vectors @xmath283 ; therefore , as @xmath289 @xmath290 where we have used ( [ eq : nct_epsilon_end ] ) and ( [ eq : nc_epsilon ] ) .",
    "however , the asymptotic expression as @xmath289 is dominated by the distribution @xmath283 which maximizes the argument of the exponential , @xmath291 .",
    "therefore as @xmath289 @xmath292 where @xmath293 the maximization over @xmath283 is subject to the constraint @xmath294 and for each @xmath29 the maximization over @xmath271 is subject to the constraints @xmath295 @xmath296 and @xmath297 next , for each @xmath29 we define @xmath298 we then have the following lemma .",
    "the expression @xmath299 is @xmath300 for any @xmath301 satisfying the optimization constraints  ( [ eq : sum_epsilont_constraint])([eq : nonnegative_betat_constraint ] ) .",
    "[ lemma : o2_term_check ]    a proof of this lemma is given in appendix [ app : proof_lemma ] .",
    "it follows from lemma [ lemma : o2_term_check ] that the expression @xmath299 is @xmath300 for the maximizing @xmath301 .",
    "therefore @xmath302 \\\\ & = & \\max_{{{\\mbox{\\scriptsize \\boldmath $ \\epsilon$ } } } } \\sum_{t \\in i_c } \\gamma_t \\max_{{{\\mbox{\\scriptsize \\boldmath $ \\beta$}}}^{(t ) } } \\sum_{i \\in u_t^{- } } \\beta^{(t)}_{i } \\log \\left ( \\frac{e a^{(t)}_{i}}{\\beta^{(t)}_{i } } \\right ) + o(\\delta^2 ) \\end{aligned}\\ ] ] where the maximization over @xmath303 ( for each @xmath29 ) is subject to the constraint  ( [ eq : sum_t_betat_constraint ] ) together with @xmath304 for all @xmath305 . in",
    "what follows , for convenience of presentation we shall temporarily omit the @xmath300 term in the expression for @xmath306 .",
    "next we make the substitution @xmath307 for all @xmath29 , @xmath305 .",
    "this yields @xmath308 where the maximization over @xmath309 ( for each @xmath29 ) is subject to the constraints @xmath310 and @xmath311 for all @xmath305 .",
    "we observe that this maximization may be recast as @xmath312 where by  ( [ eq : sum_epsilont_constraint ] ) the maximization , which is now over @xmath313 , is subject to the constraints @xmath314 and @xmath311 for all @xmath29 , @xmath305 .",
    "making the substitution @xmath315 for all @xmath29 , @xmath305 , we obtain @xmath316 where the maximization over @xmath317 is subject to the constraints @xmath318 and @xmath319 for all @xmath29 , @xmath305 .    solving the constrained optimization ( [ eq : w_defn_for_lagrange ] ) using lagrange multipliers yields @xmath320 where @xmath321 is the lagrange multiplier . substituting ( [ eq : lagrange_mult_cn1 ] ) into ( [ eq : sum_i_upsilon_constraint ] ) and defining @xmath322 yields @xmath323 we may write this as @xmath324 from which we obtain ( since all coefficients are positive and @xmath325 ) @xmath326 and therefore @xmath327 is valid for all @xmath328 . thus @xmath329 recalling the definition @xmath330 , ( [ eq : lagrange_mult_cn1 ] ) and ( [ eq : z_o_inverse_r ] ) together",
    "imply that @xmath331    next , since the value of @xmath332 which achieves the maximum in ( [ eq : w_defn_for_lagrange ] ) satisfies ( [ eq : lagrange_mult_cn1 ] ) , we may develop ( [ eq : w_defn_for_lagrange ] ) as @xmath333 where in the second line we have used the constraint ( [ eq : sum_i_upsilon_constraint ] ) .",
    "now , the constraint ( [ eq : sum_i_upsilon_constraint ] ) may be written as @xmath334 so @xmath335 also , we may write by ( [ eq : lagrange_mult_cn1 ] ) @xmath336 multiplying by @xmath162 and summing over all @xmath337 yields @xmath338 extracting @xmath321 yields @xmath339 where we have used ( [ eq : sum_i_upsilon_constraint ] ) in the final line . substituting ( [ eq : sumupsilon ] ) and ( [ eq : lambda_cn ] ) back into ( [ eq : w_cn ] ) yields @xmath340 \\\\ & = & \\left ( \\frac{\\delta}{r } \\right ) \\log \\left ( \\frac{e c}{\\delta \\int \\rho } \\right ) - \\left ( \\frac{\\delta}{r } \\right ) \\left [ \\sum_{t , i \\ ; : \\ ; i > r } ( i - r ) \\upsilon_i^{(t ) } + \\log \\left ( 1 - \\sum_{t , i \\ ; : \\ ; i > r } i \\upsilon_i^{(t ) }",
    "\\right ) \\right ] \\\\ & = & \\left ( \\frac{\\delta}{r } \\right ) \\log \\left ( \\frac{e c}{\\delta \\int \\rho } \\right ) + o(\\delta^{\\bar{r}/r})\\end{aligned}\\ ] ] where in the second line we have used ( [ eq : c_definition ] ) , and in the final line we have used ( [ eq : o_notation ] ) and the fact that @xmath341 ( also recall the definition ( [ eq : rbar_definition ] ) ) .    substituting this expression for @xmath306 into ( [ eq : n_c_max ] )",
    "while recalling the @xmath300 term in the expression for @xmath306 , we have that as @xmath289 @xmath342 \\right\\ } \\ ; . \\label{eq : number_of_check_valid_assign}\\ ] ] note that  ( [ eq : number_of_check_valid_assign ] ) generalizes ( * ? ? ?",
    "( 30 ) ) to the case of a generalized set .",
    "consider @xmath344 of the same type @xmath33 .",
    "we now evaluate the number of variable - valid split assignments ( over these ) of split weight @xmath343 . using generating functions ,",
    "this is given by be the number of ways of obtaining an outcome @xmath345 in experiment @xmath233 , and let @xmath346 be the number of ways of obtaining an outcome @xmath347 in experiment @xmath236 .",
    "also let @xmath348 be the number of ways of obtaining an outcome @xmath349 in the combined experiment @xmath238 with sums @xmath350 and @xmath351",
    ". then the generating functions @xmath352 , @xmath353 and @xmath354 are related by @xmath355 . ]",
    "@xmath356\\ ] ] where @xmath357 $ ] denotes the coefficient of @xmath358 in the bivariate polynomial @xmath359 .",
    "we make use of the following result , the proof of which appears in ( * ? ? ? *",
    "appendix a ) :    let @xmath360 where @xmath361 and @xmath249 , be a bivariate polynomial satisfying @xmath362 for all @xmath363 , @xmath364 . for fixed positive rational numbers @xmath253 and @xmath365 , consider the set of positive integers @xmath254 such that @xmath255 , @xmath366 and @xmath367 > 0 $ ] .",
    "then either this set is empty , or has infinite cardinality ; if @xmath38 is one such @xmath254 , then so is @xmath257 for every positive integer @xmath102 .",
    "assuming the latter case , the following limit is well defined and exists : @xmath368   = \\max_{{{\\mbox{\\scriptsize \\boldmath $ \\eta$ } } } } \\sum_{(i , j ) \\in s } \\eta_{i , j } \\log \\left ( \\frac{b_{i , j}}{\\eta_{i , j } } \\right)\\ ] ] where @xmath369 , @xmath370 , and the maximization is subject to the constraints @xmath371 , @xmath372 , @xmath373 and @xmath374 for all @xmath375 .",
    "[ lemma : optimization_2d ]    applying this lemma by substituting @xmath376 , @xmath377 , @xmath378 and @xmath379 , we obtain that with @xmath268 fixed , as @xmath145 @xmath380   \\label{eq : nvt_tau_sigma_start } \\\\ { \\stackrel{n}{\\approx}}\\exp \\left\\ { n \\gamma \\max_{{{\\mbox{\\scriptsize \\boldmath $ \\eta$}}}^{(t ) } } \\sum_{(i , j ) \\in s_t } \\eta^{(t)}_{i , j } \\log \\left ( \\frac{b^{(t)}_{i , j}}{\\eta^{(t)}_{i , j } } \\right ) \\right\\ }   \\label{eq : nvt_tau_sigma_mid } \\\\",
    "\\triangleq \\exp \\left\\ { n x^{(\\gamma)}_t(\\tau , \\sigma ) \\right\\ } \\label{eq : nvt_tau_sigma_end}\\end{aligned}\\ ] ] where the maximization over @xmath381 is subject to the constraints @xmath382 , @xmath383 , @xmath384 and @xmath385 for all @xmath386 ( recall that the sets @xmath387 and @xmath388 are given by ( [ eq : st ] ) and ( [ eq : st- ] ) ) .",
    "recall that the number of check - valid assignments of weight @xmath278 is @xmath287 ; also , the total number of assignments of weight @xmath278 is @xmath389 .",
    "therefore , the probability that a randomly chosen assignment of weight @xmath278 is check - valid is given by @xmath390 here we adopt the notation @xmath391 ; also we have @xmath392 .",
    "the binomial coefficient may be asymptotically approximated using the fact , based on stirling s approximation , that as @xmath145 @xcite @xmath393 \\right\\}\\ ] ] ( valid for @xmath394 ) which yields , in this case , @xmath395 \\right\\}\\ ] ] as @xmath145 . applying this together with the asymptotic expression ( [ eq : number_of_check_valid_assign ] ) , we find that as @xmath145 ( exploiting the fact that @xmath396 ) @xmath397 where @xmath398    next , we note that the expected number of d - gldpc codewords of weight @xmath399 in the ensemble @xmath23 is equal to the sum over @xmath400 of the expected number of split assignments of split weight @xmath401 which are both check - valid and variable - valid , denoted @xmath402 : @xmath403 = \\sum_{\\beta } \\mathbb{e}_{{{\\mathcal{m}}}_n } [ n^{v , c}_{\\alpha n , \\beta n } ] \\ ; .\\ ] ] this may then be expressed as @xmath403 = \\sum_{\\beta } p_{\\mbox{\\scriptsize valid}}(\\beta n ) \\sum_{\\substack{\\sum \\alpha_t = \\alpha \\\\",
    "\\sum \\beta_t = \\beta } } \\left [ \\prod_{t \\in i_v } n_{v , t}^{(\\delta_t",
    "n)}(\\alpha_t n , \\beta_t n ) \\right]\\ ] ] where the fraction @xmath404 of of type @xmath33 is given by ( [ eq : delta_t_definition ] ) and the second sum is over all partitions of @xmath194 and @xmath400 into @xmath27 elements , i.e. , we have @xmath405 for all @xmath33 , and @xmath406 , @xmath407 .",
    "now , using ( [ eq : nvt_tau_sigma_start])-([eq : nvt_tau_sigma_end ] ) , as @xmath145 we have for each @xmath33 @xmath408 where , for each @xmath33 , @xmath409 and the maximization over @xmath381 is subject to the constraints @xmath410 @xmath411 @xmath412 and @xmath413 therefore , recalling ( [ eq : pvalid_limit ] ) , we have that as @xmath145 , @xmath403 { \\stackrel{n}{\\approx}}\\sum_{\\beta } \\sum_{\\substack{\\sum \\alpha_t = \\alpha \\\\ \\sum \\beta_t = \\beta } } \\exp \\left\\ { n \\left [ \\sum_{t \\in i_v } x^{(\\delta_t)}_t(\\alpha_t , \\beta_t ) + y(\\beta ) \\right ] \\right\\ } \\ ; . \\label{eq : sum_of_exp}\\ ] ] next , for each @xmath33 we define @xmath414 note that the expression ( [ eq : sum_of_exp ] ) is dominated as @xmath145 by the term which maximizes the argument of the exponential . thus using  ( [ eq : y_of_beta ] ) and  ( [ eq : x_function ] ) we may write @xmath415 \\\\ + \\frac{\\beta}{r } \\log \\left ( \\frac{e c}{\\beta \\int \\lambda } \\right ) -",
    "\\beta \\log \\left ( \\frac{e}{\\beta \\int \\lambda } \\right ) + o \\left(\\beta^{\\min\\{\\bar{r}/r,2\\}}\\right ) \\bigg\\ } \\label{eq : growth_rate_with_o_notation}\\end{gathered}\\ ] ] where the maximization over @xmath416 ( for each @xmath33 ) is subject to constraints ( [ eq : sum_xi_constraint ] ) and ( [ eq : sum_theta_constraint ] ) together with @xmath385 for all @xmath199 .",
    "we next have the following lemma .",
    "the expression @xmath417 is @xmath223 for any @xmath418 satisfying the optimization constraints  ( [ eq : eta_sum_constraint])-([eq : nonnegative_eta_constraint ] ) .",
    "[ lemma : o2_term ]    the proof of this lemma follows the same lines as the proof of lemma [ lemma : o2_term_check ] , and is therefore omitted .",
    "it follows from lemma [ lemma : o2_term ] that the expression @xmath417 is @xmath223 for the maximizing @xmath418 .",
    "also , since @xmath419 is bounded between two positive constants , any expression which is @xmath420 must necessarily also be @xmath421 ( where @xmath422 )",
    ". therefore @xmath423 + o \\left(\\alpha^{\\min\\{\\bar{r}/r,2\\}}\\right)\\end{gathered}\\ ] ] where the optimization is ( as before ) subject to the constraints ( [ eq : sum_xi_constraint ] ) and ( [ eq : sum_theta_constraint ] ) together with @xmath385 for all @xmath199 . in",
    "what follows , for convenience of presentation we shall temporarily omit the @xmath424 term in the expression for the growth rate .",
    "next we make the substitution @xmath425 for all @xmath33 , @xmath199 .",
    "this yields @xmath426\\ ] ] where the maximization over @xmath427 ( for each @xmath33 ) is subject to the constraints @xmath428 , @xmath429 , and @xmath430 for all @xmath199 .",
    "we observe that this maximization may be recast as @xmath431\\ ] ] where the maximization , which is now over @xmath432 , is subject to the constraints @xmath433 and @xmath430 for all @xmath33 , @xmath199 , and where @xmath434 making the substitution @xmath435 for all @xmath33 , @xmath199 , we obtain @xmath436 \\label{eq : g_defn}\\end{gathered}\\ ] ] where the maximization over @xmath437 is subject to the constraint @xmath438 as well as @xmath439 for all @xmath33 , @xmath199 , and where @xmath440 by solving ( [ eq : g_defn ] ) directly using lagrange multipliers , one shows that @xmath441 holds for all @xmath33 , @xmath199 ; here @xmath321 denotes the lagrange multiplier . substituting ( [ eq : lagrange_soln_1 ] ) back into ( [ eq : g_defn ] ) yields @xmath442 \\nonumber \\\\ & + & \\frac{z({{\\mbox{\\boldmath $ \\nu$}}})}{r } \\log \\left ( \\frac{e c}{\\alpha z({{\\mbox{\\boldmath $ \\nu$ } } } ) \\int \\lambda } \\right ) - z({{\\mbox{\\boldmath $ \\nu$ } } } ) \\log \\left ( \\frac{e}{\\alpha z({{\\mbox{\\boldmath $ \\nu$ } } } ) \\int \\lambda } \\right ) \\bigg ) \\nonumber \\\\ & = & \\alpha \\left [ \\sum_{t \\in i_v } \\sum_{(i , j ) \\in s_t^{- } } \\nu^{(t)}_{i , j } + \\lambda + \\frac{z({{\\mbox{\\boldmath $ \\nu$}}})}{r } - z({{\\mbox{\\boldmath $ \\nu$ } } } ) \\right ] \\nonumber \\\\ & = & \\alpha \\left [ \\lambda + \\sum_{t \\in i_v } \\sum_{(i , j ) \\in s_t^{- } } \\nu^{(t)}_{i , j } \\left ( 1 + \\frac{j}{r } - j \\right ) \\right ] \\nonumber \\\\ & = & \\alpha \\left [ \\lambda - \\frac{1}{\\psi } \\sum_{t \\in i_v } \\sum_{(i , j ) \\in s_t^{- } } \\nu^{(t)}_{i , j } \\left ( j-\\psi \\right ) \\right ] \\ ; , \\label{eq : g1}\\end{aligned}\\ ] ] where in the second line we have used ( [ eq : lm_constraint ] ) and ( [ eq : z_defn ] ) . note that ( [ eq : lagrange_soln_1 ] ) may be rearranged as @xmath443 where @xmath444 is a positive real number . substituting this solution into ( [ eq : z_defn ] ) (",
    "i.e. into the definition of @xmath445 ) and using yields @xmath446 and similarly the constraint ( [ eq : lm_constraint ] ) may be written as @xmath447    we next proceed by proving an upper bound on all terms @xmath448 such that @xmath195 does not lie in the dominant set discussed in section [ subsection : graphical_interpretation ] , i.e. , on all terms @xmath448 where @xmath33 , @xmath199 and @xmath449 . to this",
    "end , fix @xmath450 , @xmath451 with @xmath452 , and consider arbitrary @xmath33 , @xmath199 ( for which we have @xmath453 ) . then applying ( [ eq : lagrange_soln_1 ] ) in the two pertinent cases yields @xmath454\\ ] ] and @xmath455 \\ ; .\\ ] ] equating these two expressions for @xmath321 we obtain @xmath456 where we define the function @xmath457 \\ ; . \\label{eq : fijt_definition}\\ ] ] for every @xmath33 , @xmath199 ( it is easy to check that this is indeed a function of @xmath194 ) .",
    "note that @xmath445 is bounded above and below as @xmath458 ; this may be easily shown since and imply @xmath459 and @xmath460 respectively .",
    "thus it follows that for any @xmath33 , @xmath199 , the function @xmath461 given by is bounded above and below as @xmath458 .",
    "therefore @xmath462 where @xmath463 for every @xmath33 , @xmath199 .",
    "we next write as @xmath464 where for conciseness we have defined @xmath465 substituting into we obtain @xmath466 which in particular implies ( since all terms involved are nonnegative , and @xmath467 for all @xmath113 , @xmath468 ) @xmath469 if we now define @xmath470 , the previous inequality leads to @xmath471 since , for every triple @xmath195 , @xmath461 is bounded above and below , so are @xmath472 and @xmath473",
    ". therefore , the previous inequality implies @xmath474 which holds for any @xmath475 , @xmath476 , i.e. , for any triple @xmath477 lying in the dominant set . recalling , for general @xmath478 we have @xmath479    next observe that may be used to upper bound @xmath480 . in fact , it may be seen that applying for any triple @xmath195 and taking into account leads to @xmath481 i.e. , @xmath482    next , implies that @xmath483 \\nonumber \\\\ & = & \\frac{t}{\\psi } + \\frac{1}{\\psi } \\sum_{t \\in i_v } \\sum_{(i , j):t_{i , j}>t } i(t_{i , j}-t ) \\nu^{(t)}_{i , j } \\nonumber \\\\ & = & \\frac{t}{\\psi } + o \\left(\\alpha^\\frac{\\chi}{\\psi}\\right ) \\ ; . \\label{eq : part_i_solution}\\end{aligned}\\ ] ] where in the second line we have used , and in the final line we have used and also recalled the definition of the parameter @xmath484 .    next note that , recalling and , equations ( [ eq : omega_eqn_1 ] ) and ( [ eq : omega_eqn_2 ] ) may be written as @xmath485 and @xmath486 respectively , where we define @xmath487 @xmath488^i\\ ] ] and @xmath489^i \\ , .\\ ] ] note that since @xmath445 is bounded below as @xmath458 , from we have @xmath490 and @xmath491 . recalling that @xmath480 , from we obtain the following expression for the lagrange multiplier @xmath321 : @xmath492 from and this latter expression",
    "may be written as @xmath493 -\\log \\left[q_1^{-1 } ( 1-\\mathsf{f_1(\\alpha)})\\right]\\ , .\\ ] ] using the taylor series of @xmath494 around @xmath495 , we have @xmath496 where @xmath497 note that since @xmath498 , we also have @xmath499 . substituting the obtained expression for @xmath500 into the previous expression for @xmath321 we obtain @xmath501 -\\log \\left[q_1^{-1}(1 ) + \\mathsf{g}_1(\\alpha)\\right]\\ , .\\ ] ] we may now develop @xmath502 using the taylor series for @xmath503 around @xmath495 and @xmath504 $ ] using the taylor series for @xmath505 around @xmath495 .",
    "we obtain @xmath506 where @xmath507 and @xmath508=\\log q_1^{-1}(1 ) + \\mathsf{h}_1(\\alpha)\\ ] ] where @xmath509 again , note that since @xmath510 , we have @xmath511 and @xmath512 .",
    "therefore , we have @xmath513 + \\log \\frac{1}{q_1^{-1}(1 ) } - \\mathsf{h}_1(\\alpha)\\ , .\\ ] ] finally , we develop @xmath514 $ ] using the taylor series for @xmath515 $ ] around @xmath495 .",
    "we obtain @xmath516 = \\log q_2(q_1^{-1}(1 ) ) + \\mathsf{h}_2(\\alpha)\\ ] ] where @xmath517 using this expression we obtain @xmath518 since @xmath511 and @xmath519 , we have @xmath520 ; hence , we obtain @xmath521    finally , substituting and into and recalling the @xmath424 term completes the proof of the theorem .",
    "a compact expression for the asymptotic growth rate of the weight distribution of irregular d - gldpc codes for small linear - weight codewords has been derived .",
    "ensembles with check or variable node minimum distance greater than @xmath0 are shown to have good growth rate behavior , while for other ensembles an important parameter is identified which discriminates between good and bad growth rate behavior of the ensemble .",
    "this generalizes known results for ldpc codes and gldpc codes , and also generalizes the corresponding connection with the stability condition over the bec .",
    "consider any @xmath301 which satisfies the optimization constraints  ( [ eq : sum_epsilont_constraint])([eq : nonnegative_betat_constraint ] ) . from constraint  ( [ eq : sum_epsilont_constraint ] ) , @xmath522 small implies that @xmath523 is small for every @xmath29 . from constraint ( [ eq : sum_t_betat_constraint ] ) we conclude that @xmath524 is small for every @xmath29 , @xmath305 , and so @xmath525 is close to @xmath71 for all @xmath29 .",
    "formally , for any @xmath29 the term in the sum over @xmath275 in ( [ eq : w ] ) corresponding to @xmath526 may be written as ( here we use ( [ eq : betat_sum_constraint ] ) , and the taylor series of @xmath527 around @xmath495 ) @xmath528 therefore we have @xmath529 i.e. @xmath530 for some @xmath531 independent of @xmath532 .",
    "it follows that @xmath533 where @xmath534 for each @xmath29 . also , by ( [ eq : sum_t_betat_constraint ] ) we have @xmath535 and therefore @xmath536 denote @xmath537 ; then , combining ( [ eq : f_t_ineq_1 ] ) and ( [ eq : f_t_ineq_2 ] ) , @xmath538 and thus the expression @xmath299 is @xmath300 , as desired .",
    "this appendix illustrates how the approach developed to analyze the growth rate of the weight distribution of d - gldpc codes can also be used to analyze the growth rate of the stopping set size distribution .",
    "the concept of stopping set was introduced in @xcite within the context of iterative decoding of ldpc codes over the .",
    "a stopping set of an ldpc code is defined as any subset of the such that if a is connected to it , it is connected to it at least twice . over the",
    ", stopping sets under iterative decoding play the same role as codewords under maximum likelihood decoding .",
    "stopping sets can also be defined within the context of d - gldpc codes over the .",
    "in contrast to the case of ldpc codes however , here the definition of stopping set is not unique as it depends on the decoding algorithm used at the and to locally recover from erasures . in the following , we assume erasure decoding is used at both the and the .",
    "consider an @xmath539 linear block code and a generator matrix @xmath540 for this code .",
    "moreover , consider a @xmath18-bit information word @xmath541 containing erasures .",
    "encoding of this information word produces an @xmath24-bit word @xmath542 containing erasures , where the non - erasure encoded bits are those depending only on the non - erasure information bits ( through the relationship @xmath543 ) .",
    "we say that the erasure pattern on the encoded bits is _ induced _ by the erasure pattern on the information bits .",
    "consider an @xmath10 of a d - gldpc code over the , and let @xmath540 denote a generator matrix for this .",
    "a _ local stopping set _ for this is a subset of the local code bits such that , if all of these bits are erased , decoding can not recover any of these bits .",
    "this occurs if and only if each column of @xmath540 corresponding to erased bits is linearly independent of the columns of @xmath540 corresponding to the non - erased bits .",
    "the _ size _ of the local stopping set for the is equal to the number of erased local code bits .",
    "next consider a @xmath17 of a d - gldpc code over the , and let @xmath540 denote the generator matrix for this , i.e. @xmath540 expresses the relationship between the local information word and the local codeword whose bits are associated with the tanner graph edges .",
    "a _ local stopping set _ for this is a subset of the local information bits , together with a subset of the local code bits , such that if all of these bits are erased , decoding at the can not recover any of these bits . since decoding over the consists of running gaussian elimination on the @xmath544 matrix @xmath545 $ ] , where @xmath546 is the @xmath547 identity matrix",
    ", this occurs if and only if each column of @xmath548 corresponding to an erased bit is linearly independent of the columns of @xmath548 corresponding to the non - erased bits .",
    "the _ split size _ of a stopping set is equal to @xmath549 where there are @xmath75 erasures among the local information bits , and @xmath74 erasures among the local code bits .",
    "the concepts of _ assignment _ and _ split assignment _ remain valid also within the present context of stopping sets",
    ". however we redefine the concepts of check - valid assignment , check - valid split assignment and variable - valid split assignment as follows .",
    "[ def : assignment_stopping_set ] an assignment is said to be _ check - valid _ if the following condition holds : supposing that each edge of the assignment carries an erasure and each of the other edges carries a non - erasure , each recognizes a local stopping set .",
    "[ def : split_assignment_stopping_set ] a split assignment is said to be _ check - valid _ if its assignment is check - valid .",
    "a split assignment is said to be _ variable - valid _ if the following holds .",
    "supposing that each edge of its assignment carries an erasure and each of the other edges carries a non - erasure , and supposing that each d - gldpc code bit in the codeword assignment is set to an erasure and each of the other code bits to a non - erasure , each recognizes a local stopping set , where the erasure pattern on its local code bits is that induced by the erasure pattern on its local information bits .    a stopping set of a d - gldpc code may be defined as a codeword assignment such that the split assignment formed by the codeword assignment and the corresponding induced assignment is both variable - valid and check - valid .",
    "the _ size _ of such a stopping set is equal to the number of elements in the codeword assignment .",
    "the growth rate of the stopping set size distribution is defined as in , where in this context @xmath550 denotes the number of stopping sets of size @xmath399 .",
    "we define the stopping set size enumerating polynomial for type @xmath29 by @xmath551 where @xmath552 denotes the number of local stopping sets of size @xmath75 for of type @xmath38 . letting @xmath553 denote any generator matrix for type @xmath38 , note that @xmath552 is equal to the number of ways of choosing @xmath75 columns of @xmath553 such that each of the selected columns is linearly independent of the @xmath554 non - selected columns .",
    "we also define the bivariate stopping set split size enumerating polynomial for type @xmath33 by @xmath555 where @xmath556 denotes the number of local stopping sets of split size @xmath549 for of type @xmath38 . letting @xmath553 denote the generator matrix for type @xmath38 , note that @xmath556 is the number of ways of choosing @xmath75 columns of @xmath557 and @xmath74 columns of @xmath553 such that each of the selected columns is linearly independent of the @xmath558 non - selected columns of @xmath559 $ ] .    with these definitions in place , the analog of theorem [ thm : growth_rate ]",
    "may be developed in an identical manner for the growth rate of the stopping set size distribution .",
    "the proof is identical to that developed in section  [ section : proof_of_main_result ] for the growth rate of the weight distribution , with the stopping set size enumerators in place of the weight enumerators , the new definitions of check- and variable - validity , and `` stopping set size '' in place of `` codeword weight '' . in particular",
    ", we have the following result for the case @xmath112 , which is the most important case in practice .",
    "[ theorem : growth_rate_stopping_sets ] consider a d - glpdc code ensemble @xmath23 satisfying @xmath112 . assume the code is transmitted over the , and it is decoded via iterative decoding with erasure decoding at the and .",
    "the growth rate of the stopping set size distribution is given by @xmath174 + o(\\alpha^{3/2 } ) \\label{eq : growth_rate_stopping_sets}\\ ] ] where the polynomial @xmath21 and the parameter @xmath15 are given by ( [ eq : pofx_definition ] ) and ( [ eq : c_definition_revisited ] ) respectively .",
    "the proof of this result is completed by observing that , if @xmath112 , we have @xmath560 for each @xmath337 and @xmath561 for each @xmath120 , @xmath562 .",
    "note that , in contrast to ( [ eq : growth_rate_case_1 ] ) , the error term is always @xmath563 in ( [ eq : growth_rate_stopping_sets ] ) because in the context of stopping sets , @xmath564 implies @xmath565 .    finally , note that generalizes to d - gldpc codes the expression @xmath566 obtained in @xcite for the growth rate of the stopping set size distribution of ldpc codes .",
    "the authors would like to thank a. barg , m. lentmaier and v. skachek for helpful discussions .",
    "they would also like to thank the anonymous reviewers for their comments which helped to significantly improve an earlier draft of the paper .",
    "s.  y.  chung , g.d .",
    "forney , t.  richardson and r.  urbanke , `` on the design of low - density parity - check codes within 0.0045 db of the shannon limit '' _ ieee commun .",
    "_ , vol .  5 , no .  2 , pp .",
    "5860 , feb .",
    "2001 .",
    "h.  pfister and i.  sason , `` accumulate - repeat - accumulate codes : capacity - achieving ensembles of systematic codes for the erasure channel with bounded complexity , '' _ ieee trans .",
    "inform . theory _",
    "53 , no .  6 , pp .  20882115 , june  2007",
    ".                j.  p.  tillich , `` the average weight distribution of tanner code ensembles and a way to modify them to improve their weight distribution , '' in _ proc . of 2004 ieee int .",
    "symp . on information theory _ ,",
    "chicago , il , usa , june / july  2004 .",
    "e.  paolini , m.  chiani and m.  fossorier , `` on the growth rate of gldpc codes weight distribution , '' in _ proc . of 2008 ieee int .",
    "symp . on spread spectrum techniques and applications _ ,",
    "isssta 2008 , bologna , italy , aug .",
    "2008 .                    m.  f.  flanagan , e.  paolini , m.  chiani , and m.  fossorier , `` on the growth rate of the weight distribution of irregular doubly - generalized ldpc codes , '' in _ proc .",
    "2008 allerton conf . on communications , control & computing _ , monticello , il , usa , sept ."
  ],
  "abstract_text": [
    "<S> in this paper , an expression for the asymptotic growth rate of the number of small linear - weight codewords of irregular doubly - generalized ldpc ( d - gldpc ) codes is derived . </S>",
    "<S> the expression is compact and generalizes existing results for ldpc and generalized ldpc ( gldpc ) codes . </S>",
    "<S> ensembles with check or variable node minimum distance greater than @xmath0 are shown to be have good growth rate behavior , while for other ensembles a fundamental parameter is identified which discriminates between an asymptotically small and an asymptotically large expected number of small linear - weight codewords . </S>",
    "<S> also , in the latter case it is shown that the growth rate depends only on the check and variable nodes with minimum distance @xmath0 . </S>",
    "<S> an important connection between this new result and the stability condition of d - gldpc codes over the bec is highlighted . </S>",
    "<S> such a connection , previously observed for ldpc and gldpc codes , is now extended to the case of d - gldpc codes . </S>",
    "<S> finally , it is shown that the analysis may be extended to include the growth rate of the stopping set size distribution of irregular d - gldpc codes .    </S>",
    "<S> doubly - generalized ldpc codes , irregular code ensembles , weight distribution . </S>"
  ]
}
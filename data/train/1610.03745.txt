{
  "article_text": [
    "in our previous paper @xcite we consider fair division of ( private , divisible ) items under linear preferences , represented for convenience by additive utilities .",
    "we explain there the appeal of this domain restriction for the practical implementation of division rules vindicated by theoretical analysis .",
    "we focus there on the _ competitive rule _ ( aka competitive equilibrium with equal incomes ) to divide the items , and contrast its behavior when we divide _ goods _ ( assets , such as family heirlooms , real estate , land , stocks ) , and when we divide _ bads _ ( chores , workloads , liabilities , noxious substances or facilities ) .",
    "several normative properties of this rule are identical in both contexts , e. g. , _ no envy _ and a simple version of maskin monotonicity that we call _ independence of lost bids_. however the unexpected finding is that several aspects of the rule are very different in the two contexts : dividing _ bads _ is not a mirror image of dividing _ goods . _",
    "the competitive rule picks a unique welfare profile when it divides goods , but for dividing bads it often proposes many ( up to exponentially many in the number of agents and bads ) allocations with different welfare consequences ; in the former case the competitive welfare profile is continuous in the marginal rates of substitution , in the latter case such continuity is not feasible .",
    "also the rule makes every participant benefit from an increase in the goods to divide , a monotonicity property that is out of reach when we divide bads .",
    "here we generalize this analysis to fair division problems involving ( non disposable ) _ mixed items , _",
    "i. e. , both goods and bads , or even items about which participants disagree whether they are _ good _ or _",
    "bad_. an inheritance may include good and bad real estate ( e. g. , heavily mortgaged or not ) , divorcing couples must allocate jewellery as well as obnoxious pets , workers sharing a multiple jobs relish certain jobs and loath others ; and managers facing the division of onerous tasks may deliberately add some desirable items to sweeten  the deal of the workers .    for a start",
    "we show that , upon adapting the standard definition to allow for the coexistence of positive and negative prices and for individual budgets of arbitrary sign , the competitive rule is always non empty , and its basic normative properties ( _ no envy , independence of lost bids _ , _ _ core from equal split _ _ ) are preserved .",
    "the _ status quo ante _",
    "situation with nothing to divide delivers in our model zero utility to each participant .",
    "if all items are good , any feasible allocation brings ( weakly ) positive utilities , so that the arrival of the manna  is good news for everyone ; similarly the task of dividing non disposable , undesirable items is a chore for everyone bringing weakly negative utilities to all . with mixed items ,",
    "some good , some bad , allocations where some participants enjoy positive utility and others negative utility are of course feasible , and  some interpretations of fairness pick such divisions ( see an example below ) .",
    "remarkably the competitive rule never does : in _ any _ problem mixing goods and bads , _ either _ it weakly improves the welfare of _ all _ agents above the status quo ex ante , _ or _ it weakly decrease everyone s welfare below this benchmark .",
    "the rule enforces a strong solidarity among agents : the task of dividing any bundle of non disposable items is either unanimously good news or unanimously bad news .",
    "[ [ the - result ] ] the result + + + + + + + + + +    we call a problem _ positive _ if the zero utility profile is strictly below the efficient utility frontier ; _ negative _ if it is strictly above ; and _ null _ if it is on this frontier . in a positive problem the competitive rule ( cr for short ) picks the unique allocation maximizing the nash product of utilities among positive profiles : it behaves _ as if _ there are only goods , selects a unique utility profile , and enjoys the same regularity and monotonicity properties as in the all - goods case ( within the class of positive problems ) . in a negative problem",
    "the cr picks all the critical points of the product of _ _ dis__utilities over the efficient negative profiles : it behaves _ as if _ there are only bads , in particular it may pick many different utility profiles , and loses its regularity and monotonicity properties . in a null problem",
    "the rule implements the null utility profile .",
    "note that the familiar _ fair share _",
    "utility still sets a lower bound on each agent competitive utility , but these utilities are no longer a useful benchmark as they can be of different signs in the same problem ( see an example below ) .    [",
    "[ some - simple - examples ] ] some simple examples + + + + + + + + + + + + + + + + + + + +    here is a two - agent , two - item example where @xmath0 is a good and @xmath1 is a bad:@xmath2there is one unit of each item to share .",
    "so @xmath0 is very good for agent @xmath3 compared to @xmath1 , while @xmath1 is very bad relative to @xmath0 for agent @xmath4 .",
    "fair share utilities obtain by giving one half unit of each item to each agent : @xmath5 .",
    "the familiar egalitarian rule equalizes the utility gains above this benchmark relative to the maximal feasible gain:@xmath6combined with efficiency this gives @xmath7 : see figure  [ fig1 ] .",
    "thus the division task is good news for agent @xmath3 but not for agent @xmath4 . by contrast the competitive rule focuses on the interval of strictly positive and efficient utility profiles corresponding to the allocations@xmath8it picks the midpoint @xmath9 with corresponding utilities @xmath10 , where agent @xmath3 gets only her fair share utility .",
    "our next example is a negative problem@xmath11where the efficient allocations with strictly negative utility profiles cover the interval@xmath12so the competitive allocation is at @xmath13 with utilities @xmath14 , where again agent @xmath3 gets only her fair share utility .",
    "the er utilities are @xmath15 .    in section 5",
    "we compute the competitive division in a sequence of problems with two agents , two bads , and a third item starting as a good and becoming increasingly bad .",
    "the initial problem is positive , then becomes negative ; the number of competitive allocations takes all values from 1 to 4 .",
    "we stress another key difference between the competitive and egalitarian rules , implied by independence of lost bids .",
    "if an object @xmath0 is a good for some agents and a bad for others , efficiency implies that only the former agents eat it .",
    "the cr ignores the detailed disutilities of the latter agents : nothing changes if we set those disutilities to zero , so that @xmath0 becomes a good .",
    "this means that we need only to consider problems where items are either ( at least weakly ) good for everyone , or ( at least weakly ) bad for everyone .",
    "obviously this simplification does not apply to the er .",
    "the set of agents is @xmath16 with cardinality @xmath17 , that of objects is @xmath18 .",
    "a problem is @xmath19 where the utility matrix @xmath20 has no null column .    with the notation @xmath21 , and @xmath22 for the vector in @xmath23 with @xmath24 for all@xmath1 , we define a feasible allocation as @xmath25 such that @xmath26 .",
    "let @xmath27 be the set of feasible allocations , and @xmath28 the corresponding set of utility profiles .",
    "we always omit @xmath29 if it is clear from the context .",
    "we call a feasible utility profile _ efficient _ if it is not pareto dominated , and if @xmath30 and @xmath31 , then @xmath32 . ] ; also a feasible allocation is efficient if it implements an efficient utility profile .    the following two partitions , of @xmath16 and @xmath18 respectively , are critical:@xmath33@xmath34when no confusion may arise , we call an object in @xmath35 _ good _ , one in @xmath36 _ bad _ , and one in @xmath37 _ neutral",
    ". _    * definition 1 : * _ for any problem _ @xmath29 _ _  a competitive division is a triple _ _ @xmath38 _ where _ @xmath39 _ is the competitive allocation , _ @xmath40 _ _  is the price and _",
    "_ @xmath41 _ _  the budget .",
    "the allocation _",
    "_ @xmath42 _ _  maximizes _ _ @xmath43 _ _ s utility in the budget set _ _ @xmath44 : _ _  _ _ @xmath45_moreover _ @xmath42 _ _  minimizes _",
    "_ @xmath43 _ _ s wealth in her demand set__@xmath46    _ the competitive rule selects at each problem _ @xmath29 _ the set _",
    "@xmath47 _ of all competitive allocations_.    in addition to the usual demand property ( [ 3 ] ) , we insist that an agent spends as little as possible for her competitive allocation .",
    "this requirement appears already in @xcite : in its absence some satiated agents in @xmath48 may inefficiently eat some objects useless to themselves but useful to others . for instance in the two agents - two item problem @xmath49",
    "the inefficient allocation @xmath50 meets ( [ 3 ] ) for the prices _ _  _ _ @xmath51 and budget @xmath52 .",
    "however @xmath53 guarantees the same ( zero ) utility to agent @xmath4 and costs zero , so it fails ( [ 12 ] ) .",
    "the only competitive division according to the definition is @xmath54 for @xmath55 .",
    "check that in a competitive division we have@xmath56if the first statement fails an agent who likes @xmath0 would demand an infinite amount ; if the second fails no one would demand @xmath1 .",
    "if the third fails with @xmath57 the only agents who demand @xmath0 have @xmath58 , so that eating some @xmath0 violates ( [ 12 ] ) ; if it fails with @xmath59 an agent such that @xmath60 gets an arbitrarily cheap demand by asking large amounts of @xmath0 , so ( [ 12 ] ) fails again .",
    "here is another consequence of ( [ 12 ] ) , the importance of which is illustrated by the above example:@xmath61indeed if @xmath43 eats some @xmath62 and @xmath58 , she gets a cheaper competitive demand by ignoring @xmath0 ; and if @xmath63 her allocation is not competitive ( recall @xmath57 ) .",
    "we recall three standard normative properties of an allocation @xmath64 .",
    "it is _ non envious _",
    "iff @xmath65 for all @xmath66 ; it guarantees the _",
    "fair share _",
    "utilities iff @xmath67 for all @xmath68 .",
    "it is in the _ weak core from equal split _ if for all @xmath69 and all @xmath70 such that @xmath71 there is at least one @xmath72 such that @xmath73 .",
    "when we divide goods competitive allocations meet these three properties , even in the much larger arrow - debreu preference domain .",
    "* lemma 1 * _ a competitive allocation is efficient ; it meets no envy , guarantees the fair share utilities , and is in the weak core from equal split .",
    "_    * proof*.    _ efficiency_. the classic argument by contradiction can be adapted here .",
    "let @xmath39 be a competitive allocation pareto inferior to the feasible allocation @xmath74 .",
    "some agent @xmath75 strictly prefers @xmath76 to @xmath77 which implies @xmath78 by ( [ 3 ] ) .",
    "so if we show @xmath79 for all @xmath43 , we contradict @xmath80 by summing up these inequalities .",
    "note that we can assume that @xmath74 itself is efficient which will be useful below .",
    "first we have @xmath81 for @xmath82 , or @xmath43 could buy more of an object in @xmath35 he likes ; moreover @xmath43 prefers strictly @xmath42 to any @xmath83 such that @xmath84 , and weakly if @xmath85 .",
    "so @xmath79 for all @xmath82 .",
    "it remains to show @xmath86 for all @xmath87 .",
    "we distinguish two cases . if @xmath88 we have @xmath89 ( the best feasible utility for @xmath90 ) and @xmath91 as well . at @xmath39 agent @xmath90",
    "can only consume objects in @xmath37 : by ( [ 2 ] ) @xmath90 eats no item in @xmath35 and eating in @xmath36 strictly lowers her utility ; agent @xmath90 eats no object in @xmath35 at @xmath74 either by efficiency of @xmath74 , and by @xmath92 she eats nothing in @xmath36 as well .",
    "objects in @xmath37 are free ( ( [ 1 ] ) ) so @xmath93 .",
    "now if @xmath94 an agent @xmath90 in @xmath48 must eat some objects in @xmath36 that he dislikes hence his competitive demand @xmath95 has @xmath96 and as above he strictly prefers @xmath95 to @xmath97 if @xmath98 : so @xmath86 as desired .",
    "_ other properties_. no envy is clear and it implies fair share by additivity of utilities .",
    "we use again the standard argument to check the weak core property .",
    "assume coalition @xmath99 has an objection @xmath74 to the competitive division @xmath100 where everybody in @xmath101 strictly benefits .",
    "so @xmath70 and @xmath102 for all @xmath72 . if @xmath88 , this inequality is impossible for @xmath103 because @xmath104 ( see above ) , so @xmath105",
    ". then we sum over @xmath101 the inequalities @xmath106 to get@xmath107which contradicts @xmath108 .",
    "if @xmath94 we have @xmath81 for all @xmath43 , which simplifies the argument.@xmath109    _ remark 1 : _ for positive problems a competitive allocation may fail the standard core from equal split property , where coalition @xmath101 blocks allocation @xmath39 if it can use its endowment @xmath110 to make everyone in @xmath101 weakly better off and at least one agent strictly more .",
    "this is because equal split  gives resources to the agents in @xmath48 that they have no use for .",
    "say three agents share one unit of item @xmath0 with @xmath111 .",
    "here cr splits @xmath0 between agents @xmath3 and @xmath4 , which coalition @xmath112 blocks by giving @xmath113 of @xmath0 to agent @xmath3 .",
    "_ remark 2 : _ it is easy to check that cr meets _ independence of lost bids , _ the translation of maskin monotonicity under linear preferences : see the precise definition in @xcite . just as in proposition 2 of that paper ,",
    "cr is characterized by , essentially , combining this property with efficiency .",
    "the key to classify our problems when @xmath16 and @xmath18 are given is the relative position of the set of feasible utility profiles @xmath114 and the cone @xmath115 , which can only be of three types .",
    "write the relative interior of @xmath116 as @xmath117 .",
    "* definition 2 * _ we call the problem _ @xmath118    _ positive if _ @xmath119 ;    _ negative if _ @xmath120 ;    _ null if _ @xmath121 .",
    "we fix @xmath29 and check that these three cases are exhaustive and mutually exclusive .",
    "this amounts to show that @xmath122 and @xmath123 together imply @xmath124 .",
    "pick @xmath125 non zero in @xmath126 and derive a contradiction .",
    "let @xmath127 for the agents in @xmath128 and @xmath129 for those in @xmath130 .",
    "if some @xmath131 eats some @xmath0 he likes ( @xmath132 ) , he must also eat some @xmath1 he dislikes ( @xmath133 ) : then let someone in @xmath134 take a small amount of @xmath1 from @xmath43 and we get a new @xmath135 where @xmath136 is larger than @xmath134 .",
    "if no @xmath90 in @xmath137 eats any @xmath0 she likes ( so she does not eat any she dislikes either ) , we pick any @xmath138 and an item @xmath0 she likes ; @xmath0 must be eaten at @xmath125 exclusively by some agents in @xmath139 ; if some @xmath140 eats @xmath0 we let @xmath90 give a small amount of @xmath0 to @xmath43 and we have found @xmath135 with a larger @xmath141 ; if some @xmath142 in @xmath48 eats some @xmath0 we have @xmath143 so again @xmath142 can give his share of @xmath0 to @xmath43 and @xmath134 increases . repeating this construction until @xmath144 we reach @xmath145 , the desired contradiction .",
    "given a smooth function @xmath146 and a closed convex @xmath147 we say that @xmath148 _ _  is a critical point of _ _ @xmath146 _ _  in _ _",
    "@xmath147 if the supporting hyperplane of the upper contour of @xmath146 at @xmath149 supports @xmath147 as well:@xmath150this holds in particular if @xmath149 maximizes or minimizes @xmath146 in @xmath147 .    in the statement we write @xmath151 for the set of efficient utility profiles , and @xmath152 for the interior of @xmath153 .    * theorem * _ fix a problem _ @xmath154 .",
    "@xmath155 _ _  the problem _ _ @xmath29 _ has a _ _ competitive division with a positive budget if and only if it is positive . in this case",
    "an allocation is competitive iff it maximizes the product _ @xmath156 _ _  over _ _ @xmath157 _ _ ; thus the corresponding utility profile is unique , positive in _ _ @xmath158 _ and zero in _ @xmath48__. _ _    @xmath159 _ _  the problem _",
    "_ @xmath29 _ has a competitive division with a negative budget if and only if it is negative . in this case",
    "an allocation is competitive iff it is a critical point of the product _ @xmath160 _ _  in _",
    "_ @xmath114 _ that belongs to _ @xmath161 .",
    "_  all utilities are negative in any competitive allocation . _    @xmath162 _ _  the problem _",
    "_ @xmath29 _ has a competitive allocation with a zero budget if and only if it is null . in this case _ _ an allocation is competitive iff its utility profile is zero . _",
    "note that the theorem implies in particular that @xmath163 is non empty for all @xmath29 .",
    "first we give a closed form description of the competitive demands per definition 1 , i. e. , the solutions of ( [ 3 ] ) plus ( [ 12 ] ) .",
    "* lemma 2 * _ fix _ @xmath29 _ a budget _ @xmath164 _ _  and a price _ _ @xmath40 _ _  such that _ _ @xmath57 _ _  in _ _ @xmath35 _ _ , _ _ @xmath165 _ _  in _ _ @xmath36 _ _ , and _ _ @xmath166 _ _  in",
    "_ _ @xmath37__. _ _",
    "@xmath155 _ if _ @xmath103 _ _  and _ _ @xmath88 _ _ , the allocation _",
    "_ @xmath167 _ _  is competitive iff _ _",
    "@xmath168 _ _  ( for instance _ _ @xmath169 _ _ ) _ _    @xmath159 _ _  if _ _ @xmath103 _ _  and _ _ @xmath94 _ _ , _ _ @xmath167 _ _  is competitive iff _ _ @xmath170 _ _ , _ _ @xmath171 _ _  on _ _ @xmath35 _ _ , _ _ @xmath172 _ _  on _ _ @xmath37__only if _ _",
    "@xmath58 _ _ , and__@xmath173@xmath162 _  if _ @xmath82 _ _  the problem ( [ 3 ] ) has a bounded solution iff__@xmath174__then the allocation _ _ @xmath42 _ _  is competitive iff _ _ @xmath175 _ _ , and _",
    "_ @xmath42 _ meets ( [ 8 ] ) and the two following properties :",
    "_    @xmath176    @xmath177    statement @xmath155 is clear upon noticing that eating some object in @xmath37 is free so that ( [ 12 ] ) holds . for @xmath159",
    "observe that to meet the budget constraint @xmath43 must be buying some @xmath178 ; if @xmath43 buys some @xmath179 she can increase her utility by buying less of @xmath1 and of @xmath0 ; and ( 12 ) still holds because objects in @xmath37 are free .",
    "property ( [ 8 ] ) simply says that she buys objects in @xmath36 with the smallest disutility per unit of ( fiat ) money .",
    "for statement @xmath162 pick agent @xmath43 in @xmath180 and note that a budget balanced purchase of both objects @xmath62 and @xmath178 increases strictly @xmath43 s utility iff @xmath181 , in which case ( [ 3 ] ) has no bounded solution .",
    "as already noted in the proof of lemma 1 , @xmath43 can buy some object he likes in @xmath35 with any slack budget , therefore @xmath81 , which implies ( [ 12 ] ) .",
    "properties ( [ 8 ] ) follow as for agents in @xmath48 and ( [ 7 ] ) is similar .",
    "finally if @xmath43 eats both @xmath62 and @xmath178 , inequality @xmath182 implies that a budget neutral reduction of @xmath183 and @xmath184 increases @xmath185 : thus we need ( [ 9 ] ) as well .",
    "@xmath109    * proof of the theorem *    _ step 1 _ : _ statement _ @xmath186__. _ _ _ let _",
    "@xmath154 _ _  be a positive problem__._we show that the maximization of the nash product on _ @xmath187 _",
    "_  finds a competitive allocation with a positive budget . _",
    "_    as @xmath187 is compact and convex , there is a unique @xmath188 maximizing in @xmath187 the product @xmath189 ; clearly @xmath190 for all @xmath82 .",
    "let @xmath191 be an allocation implementing @xmath192 . by efficiency the items in @xmath193 are only eaten by agents in @xmath180 and/or @xmath48 , who do not care about them ( @xmath58 ) ; this implies@xmath194(with the notation @xmath195 ) .    by efficiency",
    "the items in @xmath35 are eaten in full by @xmath180 ( property ( [ 2 ] ) ) ; ditto for the items in @xmath36 because for such items and any @xmath196 , we have @xmath63 and @xmath197 .",
    "we define prices as follows:@xmath198and @xmath199 on @xmath37 .",
    "pick any @xmath62 and @xmath82 eating @xmath0 ( such @xmath43 exists by the argument above ) : then @xmath132 by efficiency , so the foc of the maximization program implies @xmath200 @xmath201 for all @xmath202 .",
    "this is property ( [ 7 ] ) . checking ( [ 8 ] ) is similar : assume @xmath82 eats @xmath203 and recall @xmath133 , so the focs give @xmath204 for all @xmath202 .",
    "now we fix @xmath205 and apply ( [ 7 ] ) , ( [ 8]):@xmath206summing up numerator and denominator over the support of @xmath207 ( the items he eats ) and invoking ( [ 4 ] ) as well as @xmath199 on @xmath37 , we get@xmath208  as required by lemma 2 .    if @xmath36 is non empty , there is at least one agent @xmath82 eating @xmath209 and @xmath178 .",
    "for any such @xmath43 property ( [ 6 ] ) gives @xmath210 , which proves ( [ 9 ] ) , and latexmath:[\\[\\text{for all } a^{\\prime } \\in a_{+},b^{\\prime } \\in a_{-}:\\frac{u_{ia^{\\prime } } } { p_{a^{\\prime } } } \\leq u_{i}^{\\ast } \\leq \\frac{|u_{ib^{\\prime } } |}{%     _ step 2 : statement _ @xmath186__. suppose the problem _",
    "_ @xmath154 _ has a competitive division _ @xmath212__.",
    "we show that _ _",
    "@xmath29 _ is positive and _ @xmath39__maximizes the nash product as in step 1 . _",
    "_    because @xmath169 is in the budget set , all agents in @xmath48 must get zero utility .",
    "if they consume anything , it must be an object in @xmath37 by assumption ( [ 2 ] ) .",
    "each @xmath43 in @xmath180 can buy some amount of any object , so at @xmath39 her utility is positive : @xmath213 .",
    "therefore @xmath214 is positive .",
    "fix @xmath82 and recall objects in @xmath37 , if any , have zero price ( assumption ( [ 1 ] ) ) .",
    "thus if @xmath43 eats some @xmath215 we have @xmath58 , otherwise @xmath43 benefits by simply stop eating @xmath0 .",
    "this gives @xmath216 ( as in ( [ 4 ] ) ) , and @xmath217 as well .",
    "we also know that @xmath40 is positive on @xmath35 and negative on @xmath36 , and that @xmath218 for all @xmath82 ( by efficiency of @xmath39 ) .",
    "write the sets of objects @xmath43 eats in @xmath219as @xmath220 : @xmath221 is non empty because @xmath127 ( @xmath222 can be empty ) . by lemma 2 @xmath223 is constant on @xmath224 , and equal to @xmath225(where the first equality uses @xmath226 ) .",
    "therefore@xmath227then ( [ 7 ] ) implies @xmath228 for all @xmath62 while ( [ 10 ] ) implies @xmath229 for all @xmath230 .",
    "these two facts together give for all @xmath82:latexmath:[\\[\\frac{u_{ia}}{u_{i}}\\leq p_{a}\\text { for all } a\\in a_{+}\\text { and }",
    "\\frac{%    this we derive that @xmath125 maximizes @xmath232 in @xmath233 , or equivalently that it is critical for the product of utilities in @xmath187 : the restriction to @xmath180 of any feasible utility profile is below the hyperplane supporting @xmath189 at ( the restriction of ) @xmath125:@xmath234pick @xmath235 implementing @xmath236 and use ( 15 ) to compute ( recalling that @xmath40 is zero on @xmath37)@xmath237    _ step 3 : statement _ @xmath238 .",
    "@xmath239 _ _  be a negative problem__. _",
    "we show there exists a critical point _ @xmath192 _ of the product _ @xmath160 _ _  in _ _ @xmath114 _ that belongs to _ @xmath240 . _ the profile _",
    "@xmath192 _ we construct maximizes this product on _",
    "@xmath241 _ _ , and any allocation _ _ @xmath242 _ _  implementing it is competitive .",
    "_ _    _ substep 3.1 : if _ @xmath243 _ is a critical point of _ @xmath160 _ _  in _ _ @xmath244 _ _ , then any _",
    "_ @xmath245 _",
    "_  implementing _",
    "_ @xmath192 _ _  is competitive . _ _",
    "we pick an allocation @xmath245 implementing @xmath192 and mimick the argument in step 1 above . while objects in @xmath35 are still eaten exclusively by @xmath180 , those in @xmath36 are eaten by anyone ( and everyone eats at least one object in @xmath36 ) . if @xmath62 and @xmath246 for @xmath82 , a transfer of some @xmath0 from @xmath43 to @xmath202 leaves the allocation on the same side of @xmath247 as @xmath114 , i. e. , below : this implies @xmath248 ; if @xmath249 for @xmath178 ( and @xmath250 ) , we consider similarly a transfer of some @xmath1 from @xmath43 to @xmath90 to get @xmath251 .",
    "then we define @xmath40 in @xmath252 as in ( [ 5 ] ) , upon replacing @xmath192 by @xmath253 and minimizing over all @xmath16 instead of just @xmath180 when defining @xmath40 in @xmath36 .",
    "the analog of ( [ 6 ] ) follows , with the same changes , and the same computation yields @xmath254 , this time for all @xmath43 .    setting @xmath199 on @xmath37 , we now use lemma 2 to check as in step 1 that @xmath255 is @xmath43 s competitive for @xmath40 and @xmath94 .",
    "_ substep 3.2 : we show that the profile _ @xmath192 _ _  maximizing _ _",
    "_ _ @xmath256 _ is a critical point of this product  in _ @xmath114 ( and is in @xmath257 ) .",
    "we have @xmath258 for every @xmath250 , else the allocation @xmath259 yields utilities in @xmath116 .",
    "consider the set @xmath260 of utility profiles dominated by @xmath114 : @xmath261 .",
    "this set is closed and convex , and contains all points in @xmath262 that are sufficiently far from the origin : any @xmath263 such that @xmath264 is dominated by the utility profile of @xmath265 .",
    "fix @xmath266 and consider the upper contour of the nash product at @xmath267 : @xmath268 .",
    "for sufficiently large @xmath269 the closed convex set @xmath270 is contained in @xmath260 .",
    "let @xmath271 be the minimal @xmath269 with this property .",
    "negativity of @xmath29 implies that @xmath260 is bounded away from @xmath272 so that @xmath271 is strictly positive . by definition of @xmath271 the set @xmath273 touches the boundary of @xmath260 at some @xmath192 with strictly negative coordinates",
    "let @xmath247 be a hyperplane supporting @xmath260 at @xmath192 . by the construction",
    ", this hyperplane also supports @xmath274 , therefore @xmath192 is a critical point of the nash product on @xmath260 : that is , @xmath188 maximizes @xmath275 over all @xmath276 .",
    "so @xmath192 belongs to pareto frontier of @xmath260 , which is clearly contained in the pareto frontier of @xmath114 thus @xmath192 is a critical point of the nash product on @xmath114 and belongs to @xmath277 .",
    "any @xmath125 in the interior of @xmath274 is clearly dominated by some @xmath236 in @xmath278 , hence by some @xmath279 : so @xmath192 maximizes the nash product on @xmath280 .    _",
    "remark 3 : _ note that the supporting hyperplane @xmath247 to @xmath114 at @xmath188 is unique because it is also a supporting hyperplane to @xmath281 that is unique .",
    "this means that @xmath192 belongs to a face of a polytope @xmath114 of maximal dimension .",
    "_ step 4 : statement _ @xmath238 .",
    "_  suppose the problem _",
    "@xmath154 _ has a competitive division _ @xmath282__. we show that _ _",
    "@xmath29 _ is negative and the corresponding utility profile _ @xmath125 _ _  is a critical point of the product _ _ @xmath160 _ _  in _",
    "_ @xmath114 _ that belongs to _ @xmath161 .",
    "the utility of any agent in @xmath48 at @xmath39 is negative : goods in @xmath37 are free ( ( [ 1 ] ) ) , he does not eat any object in @xmath35 ( ( [ 2 ] ) ) , and his budget is negative .",
    "applying lemma 2 to an agent in @xmath180 we see , as in step 2 , that the ratio @xmath223 is constant on @xmath224 , and equal to @xmath283 on @xmath222 the same computation ( 11 ) gives @xmath284 , so @xmath285 in @xmath180 as well . by lemma 1",
    "the negative profile @xmath125 is efficient , so @xmath114 can not intersect @xmath286 and @xmath29 is negative .",
    "we derive now the criticality of @xmath125 for @xmath160 much like we did in step 2 .",
    "the difference is that now _ everyone",
    "_ eats some object in @xmath287 , and @xmath43 in @xmath180 may or may not eat some object in @xmath35 ( but @xmath43 in @xmath48 still does nt ) .    from @xmath288 on @xmath224 , @xmath289 on @xmath222",
    "we get ( [ 12 ] ) ( for all @xmath43 , and with @xmath290 instead of @xmath185 ) . because any @xmath250 must eat some @xmath291 in @xmath36 , properties ( [ 8 ] ) and ( [ 12 ] ) yield latexmath:[$|u_{i}|=\\frac{|u_{ib^{\\ast } } |}{%    @xmath178",
    ". then ( [ 10 ] ) gives @xmath293 for all @xmath62 , and this implies the analog of property ( [ 15 ] ) : for all @xmath250@xmath294 for @xmath295 in @xmath114 means now that all feasible utility profiles are below the hyperplane supporting @xmath296 at @xmath125latexmath:[\\[\\text{for all } u^{\\prime } \\in \\phi : \\sum_{i\\in n}\\frac{u_{i}^{\\prime } } { %    @xmath296 on all of @xmath244 ) .",
    "the derivation of this inequality from ( [ 16 ] ) proceeds exactly as in step 2 .",
    "_ step 5 : statement _ @xmath162__. let _ _ @xmath118 _",
    "_  be a null problem .",
    "we show there exists a price _",
    "_ @xmath40 _ _  such that _ _ @xmath298 _ _  is competitive iff _ _",
    "@xmath299 for all @xmath43 .    as @xmath124",
    "we can separate the projection of @xmath114 on @xmath300 from @xmath301 : there exists @xmath302 such that @xmath303 for all @xmath304 . if @xmath305 for some @xmath306 we pick @xmath202 such that @xmath307 and the allocation where @xmath90 eats an object she likes and @xmath43 eats all the rest yields a contradiction .",
    "thus @xmath308 is strictly positive .",
    "pick any @xmath309 implementing @xmath310 : it is efficient therefore @xmath311 .",
    "we have@xmath312@xmath313we define the price @xmath40 as@xmath314and as usual @xmath315 in @xmath37 .",
    "clearly @xmath40 is positive on @xmath35and negative on @xmath36 . on the support of @xmath207",
    "we have@xmath316implying @xmath317 .",
    "the definition of @xmath40 implies @xmath318 and @xmath319 .",
    "this implies ( [ 10 ] ) at once ; together with ( [ 17 ] ) it gives ( [ 7 ] ) ; the proof of ( [ 8 ] ) and ( [ 9 ] ) is similar .",
    "_ step 6 : statement _ @xmath320 . _",
    "suppose the problem _",
    "@xmath154 _ has a competitive division _ @xmath298__. we show that _ _",
    "@xmath29 _ is null .",
    "_    let @xmath125 be the utility profile of @xmath39 .",
    "clearly @xmath321 for @xmath103 .",
    "fix @xmath82 such that @xmath322 : because @xmath323 ( lemma 2 ) @xmath43 must eat at least one object in @xmath35 and one in @xmath36 . by lemma 2",
    "again we have @xmath324 for all @xmath325 . writing @xmath326 for this common ratio , we have@xmath327and we conclude @xmath310 . as @xmath328 the intersection @xmath329 contains nothing more .",
    "9 bogomolnaia , a. , moulin , h. , sandomirskiy , f. , and e. yanovskaya , 2016 , _ dividing goods or bads under additive utilities _ , arxiv:1608.01540 [ cs.gt ] , ( june 2016 ) .",
    "+ https://arxiv.org/abs/1608.01540    mas - colell , a. , 1982 , _ equilibrium theory with possibly satiated preferences _ , in equilibrium and dynamics : essays in honor of david gale , m. majumdar editor , macmillan press .",
    "we have @xmath330 , @xmath331 and@xmath332and @xmath308 takes all integer values from @xmath333 to @xmath334 . the first two problems , for @xmath335 are positive ; for @xmath336 the problem is null , then negative from @xmath337 to @xmath334 ."
  ],
  "abstract_text": [
    "<S> when utilities are additive , we uncovered in our previous paper @xcite many similarities but also surprising differences in the behavior of the familiar _ competitive rule _ ( with equal incomes ) , when we divide ( private ) _ goods _ or _ _  </S>",
    "<S> bads__.the rule picks in both cases the critical points of the product of utilities ( or disutilities ) on the efficiency frontier , but there is only one such point if we share goods , while there can be exponentially many in the case of bads .    </S>",
    "<S> we extend this analysis to the fair division of _ mixed items _ : each item can be viewed by some participants as a good and by others as a bad , with corresponding positive or negative marginal utilities . </S>",
    "<S> we find that the division of mixed items boils down , normatively as well as computationally , to a variant of an _ all goods _ problem , or of an _ all bads _ problem : in particular the task of dividing the non disposable items must be either good news for everyone , or bad news for everyone .    </S>",
    "<S> if at least one feasible utility profile is positive , the competitive rule picks the unique maximum of the product of ( positive ) utilities . </S>",
    "<S> if no feasible utility profile is positive , this rule picks all critical points of the product of _ _ dis__utilities on the efficient frontier . </S>"
  ]
}
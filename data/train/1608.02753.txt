{
  "article_text": [
    "we are interested in the optimal allocation of service rates in a system with an infinite number of parallel servers and finite service capacity .",
    "customers join the fastest server available , without jockeying if a faster server becomes available at a later time .",
    "this model is appropriate for a system with servers at different physical locations and no possibility to accommodate waiting customers .",
    "for example this may be the case in a distributed ( cloud ) computing system with jobs arriving at a central router that immediately sends them to the best available server . in this setting an allocation is given by a infinite series of service rates .",
    "every such service - rate series determines the probabilistic traits of the system .",
    "our objective is to minimize the stationary expected delay ( service time ) faced by arrivals .    from a practical point of view",
    "the infinite - server setting is of course aimed to be a good approximation of large - scale systems .",
    "it is important to note that in this respect the model presented here does indeed capture the behaviour of such systems when the capacity allocation is a `` sensible '' one . in particular , for service - rate series that satisfy certain stability and delay conditions that will be defined in the next sections the overflow probability ( from finite sub - systems ) goes to zero very fast with the number of servers .",
    "this means that for a large finite system the probability of an arrival facing a full system is negligible .",
    "the model assumed is an ordered gi / m/@xmath0 system : independent and identically distributed inter - arrival times , exponential service times with heterogeneous rates and customers routed to the fastest idle server upon their arrival .",
    "an in - depth analysis of an m / m/@xmath0 with identical servers that are ordered ( geographically ) , including heavy traffic approximations , can be found in @xcite .",
    "the assumption that servers are identical implies that the service capacity is infinite and the focus in @xcite is on distributional properties such as how many of the first @xmath1 servers are busy .",
    "the finite - capcity system studied in this paper is therefore very different and the analysis relies on the probability of blocking and overflows from finite heterogeneous server loss sub - systems .",
    "in particular , our methods rely on @xcite where the overflow distribution in a homogenous multi - server system with non - markovian arrivals is characterized , and the extensions of @xcite and @xcite that account for heterogeneous servers .",
    "a key feature for our analysis is that blocking probabilities can be written as a product of laplace - stieljes transforms ( lst ) corresponding to the overflow times from subsets of the system .",
    "we leverage this structure to derive the expected delay in our infinite server system .",
    "an important issue that arises in the infinite server model with finite service capacity is that the stability of the system depends on the allocation of service rates , and it is not enough to assume that the external arrival rate is lower than the total capacity ( i.e.  @xmath2 ) .",
    "this is because the system is not work conserving in the sense that fast servers may be idle while customers are being served by slower servers .",
    "intuitively , the service allocation needs to balance between fast rates at the good ( fast ) servers while still leaving enough capacity to handle overflows to the bad ( slow ) servers .",
    "these issues are addressed in detail in section [ sec : stability ] , where conditions for stability and finite expected delay are established . in particular",
    "we show that the service - rate series can not decay faster then a geometric series with a decay parameter that is determined by the overflow probabilities .    the trade - off between the rate of capacity assignment , i.e.  how much of the remaining capacity is assigned to a server when sequentially allocating from the fastest to the slowest , and the overflow probabilities is also at the core of the delay - minimization problem .",
    "while the input of the problem is quite simple : the inter - arrival distribution , a single parameter if the arrival process is poisson , the decision variable is an infinite sequence .",
    "this leads to analytical as well as computational challenges .",
    "we formulate the optimal capacity allocation problem as an infinite dynamic program .",
    "however the dynamic program is intractable because of the elaborate state and actions spaces . to this end",
    "we derive an asymptotically optimal geometric tail of the service - rate series .",
    "the asymptotic optimal geometric rate is shown to be the square - root of the term in the product representing the aforementioned overflow ( blocking ) probabilities .",
    "furthermore , we use the geometric approximation of the tail in order to define a finite dynamic program which can be solved efficiently .",
    "numerical analysis suggests that the optimal service - rate series is very close to geometric from the start .",
    "this means that the instead of solving the original capacity allocation problem we can approximate the solution by the single parameter problem of finding the optimal geometric service - rate series .",
    "moreover , in the special case of a poisson arrival process the simple heuristic of choosing a geometric service - rate series with decay rate @xmath3 is quite close to the approximated optimal solution .",
    "the research of ordered service systems with heterogeneous servers has mostly focused on analysing the blocking probability in loss systems , and their minimization in particular . in @xcite",
    "it was shown that the optimal allocation of service rates in terms of minimizing blocking in an ordered markovian system is heterogeneous .",
    "in @xcite it was shown that the optimal series of service rates , in terms of minimizing blocking probabilities , is decreasing .",
    "analysis of an ordered system with a general arrival process , along with the comparison methods for different entry order regimes , can be found in @xcite and @xcite .",
    "an interesting observation made in @xcite is that the policy of _ fastest server first _ is not necessarily optimal , for example when the slower server has a lower variance of service time .",
    "optimal assignment to an ordered system with heterogeneous customer types that can only be served by some of the servers was studied in @xcite .",
    "the work presented here is related to @xcite which analysed the capacity allocation and pricing in a loss system possibly with heterogeneous servers .",
    "the objective function considered in that paper is different from the others because the objective is maximizing profit and not minimizing blocking probabilities .",
    "this objective required analysis of the expected waiting times , which will also be important in the analysis presented here . in @xcite routing policies",
    "were analysed with the goal of minimizing holding costs .",
    "approximation analysis of ordered homogeneous - server systems can be found in @xcite and @xcite , and heteregenous servers with parallel queues ( including a waiting buffer ) under the _ join the shortest queue _ policy appeared in @xcite . another related work is @xcite that considers a service capacity allocation problem for a system of parallel queues and heterogeneous customer types using a heavy - traffic approximation .",
    "[ [ paper - outline ] ] paper outline : + + + + + + + + + + + + + +    in section [ sec : model ] we present the model and mention some of its known properties .",
    "we define system stability along with necessary conditions for finite expected delay in section [ sec : stability ] . in section [ sec : geometric ] we introduce the special class of service - rate series that decreases geometrically .",
    "we prove that the tail of the optimal service - rate series is of this type .",
    "this fact is due to the product form of the blocking probabilities . in section [ sec : opt ]",
    "we formally define our optimization objective as an infinite horizon dynamic program and suggest a numerical method to approximate its solution using the fact that the tail of the optimal series is geometric .",
    "we then proceed to present numerical analysis and examples of the optimal service - rate series in section [ sec : numerical ] .",
    "the numerical results suggest that the optimal service - rate series is very close to geometric from the start , and not just at the tail .",
    "finally , section [ sec : discussion ] features concluding remarks and a brief discussion of straightforward extensions of our analysis aimed at optimizing other performance measures of the system , apart from expected delay .",
    "customers arrive at a service system according to a renewal process with mean inter - arrival time @xmath4 .",
    "the system is comprised of an infinitely large number of parallel exponential servers that are ordered according to service - rate ; @xmath5 , such that @xmath6 .",
    "every arriving customer joins the fastest server available , and does not switch server even if a faster server later becomes available while he is still in the system . for a given @xmath7 ,",
    "our goal in this paper is to find a sequence of service rates that minimizes the stationary expected sojourn time ( delay ) of an arriving customer .",
    "let @xmath8 be the random sequence of server indicators ( zero if idle and one if busy ) at arrival times in the limit , and let @xmath9 denote the respective random variable of the fastest available server .",
    "the random variables and distributional properties discussed in this work are dependent on the service - rate series @xmath10 , but we omit this from the notations for the sake of brevity .",
    "let @xmath11 denote the stationary delay faced by an arbitrary arriving customer .",
    "the expected delay is the expected service time at the fastest idle server upon arrival , @xmath12    the state of any server @xmath13 depends only on the arrival process and on the service process at servers @xmath14 . for example , if the arrival process is poisson then @xmath15 the distribution of @xmath16 is obtained from the blocking probabilities of consecutive sub - systems , @xmath17 where @xmath18 is the blocking probability in a gi / m@xmath19 system with heterogeneous ordered servers .",
    "figure [ fig : diagram ] illustrates the flow of customers in the system . in the following analysis we use the more compact notation : @xmath20    at ( 0,0 ) ( a ) arrival ; at ( 6,-1.5 ) ( d ) departure ;    at ( 3,0 ) ( s1 ) s1 ; at ( 3,-1.5 ) ( s2 ) s2 ; at ( 3,-3 ) ( s3 ) s3 ; at ( 3,-4.5 ) ( s4 ) s4 ; at ( 3,-5.3 ) ( dots ) ;    \\(a ) to node[above ] @xmath21 ( s1 ) ; ( s1 ) to node[left ] @xmath22 ( s2 ) ; ( s2 ) to node[left ] @xmath23 ( s3 ) ; ( s3 ) to node[left ] @xmath24 ( s4 ) ;    ( s1 ) to node[above ] @xmath25 ( d ) ; ( s2 ) to node[above ] @xmath26 ( d ) ; ( s3 ) to node[above ] @xmath27 ( d ) ; ( s4 ) to node[above ] @xmath28 ( d ) ;    we are interested in computing , which can be re - written as @xmath29 . if the servers are homogeneous then the well - known erlang loss formula can be applied for the blocking probabilities , but this is not possible for an infinite server system with finite capacity . otherwise , the blocking probabilities are given in @xcite : @xmath30 where @xmath31 is the lst of the exogenous inter - arrival distribution , and @xmath32 is the laplace - stieljes transform ( lst ) of the stationary time between overflows at server @xmath1 , @xmath33 . specifically , @xmath33 is the time between two consequtive arrivals that find the first @xmath1 servers busy , with respect to the stationary distribution .",
    "the recursive formula generally relies on a palm - type theorem for the renewal process of overflows at station @xmath1 , that is , the probability at overflow times as opposed to the time - average distribution which is different as the counting process of overflows is not poisson .",
    "the original result for homogeneous servers appeared in @xcite ( see also p.37 of @xcite ) .",
    "a genralization to heterogenoues service rates appeared in @xcite and a similar model with waiting spots was considered in @xcite .",
    "the derivative of is @xmath34 and thus the mean overflow time from server @xmath1 is @xmath35 yielding @xmath36    we next state a technical lemma that will be useful in the following analysis .",
    "we do not prove the lemma as these properties are straightforward extensions or rephrasing of known results .",
    "[ lemma : lst_properties ] the functions @xmath37 satisfy the following properties :    1 .",
    "@xmath37 is strictly non - increasing with @xmath38 , with @xmath39 and @xmath40 .",
    "2 .   @xmath41 for any @xmath42 and @xmath43 .",
    "( proof in @xcite ) 3 .   if @xmath44 then the decreasing series @xmath45 is convex in the discrete sense : @xmath46 .",
    "( proof in @xcite )    in the following sections we use the notation @xmath47 .",
    "we will also make frequent use of the sign @xmath48 to indicate that the two series , @xmath49 and @xmath50 , have the same tail behaviour .",
    "formally , this means that there exists a constant @xmath51 such that @xmath52 we use @xmath53 to indicate that @xmath54 . in the numerical analysis",
    "we will use @xmath55 when numerical results are close ( in a non - accurate sense ) to some value .",
    "in an infinite - server system with infinite capacity , as in the homogeneous server gi / m/@xmath0 model , the system is always stable .",
    "normally a queueing system with finite capacity is stable if @xmath2 , in the sense that the number of customers in the system does not explode ( and the underlying embedded markov process is positive recurrent ) .",
    "however this is not sufficient for our model because the service allocation may cause the effective arrival rate to a subset of the system to exceed its service capacity .",
    "for example if the arrival process is poisson then @xmath56 , further if @xmath57 then the effective arrival rate to the system excluding server @xmath58 is @xmath59 , which is larger than @xmath60 when @xmath60 is chosen small enough .",
    "this paper does not directly address the issue of positive recurrence of the underlying process which seems to require a different approach than the blocking probability and delay computations employed here .",
    "rather , we define two different levels of stability : the first simply states that all subsystems have a greater capacity than their external rate , and the second is finite expected delay - a stronger condition than positive recurrence of the underlying process .    as a first reasonable condition , and",
    "as we will show a necessary one as well , we would like a service - rate series @xmath10 to satisfy @xmath61    that is , the effective arrival rate into the system excluding the first @xmath1 servers is smaller than the remaining service capacity .",
    "note that if condition is satisfied for some @xmath62 then it is satisfied for all @xmath63 as well . in the memoryless arrival example , the first condition for @xmath64 is @xmath65 , or equivalently , @xmath66    a service - rate series @xmath10 is feasible if it satisfies condition .",
    "denote the set of feasible service - rate series by @xmath67    [ lemma : feasible ] for any @xmath68 there exists a feasible service - rate series ( @xmath69 ) that is decreasing .",
    "if @xmath70 then the range for @xmath25 given by @xmath71 let @xmath72 be the solution to @xmath73 . recall that @xmath74 and that @xmath70 , therefore there exists a unique solution @xmath75 .",
    "this argument is illustrated in figure [ fig : stability_solution ] .",
    "any point @xmath25 in the interior of the interval @xmath76 satisfies the stability condition for @xmath64 , in particular @xmath77 , where @xmath78 .",
    "( , )  ( , ) node[right ] @xmath25 ; ( , )  ( , ) ; at ( , ) [ below ] @xmath79 ; at ( 1 , ) [ below ] @xmath7 ; at ( 0.6255 , ) [ below ] @xmath72 ; at ( , 1 ) [ left ] @xmath7 ; at ( , 0.7 ) [ left ] @xmath21 ; at ( , 0.2575156 ) [ left ] @xmath80 ;    plot ( , 1- ) ; plot ( , 0.7*exp(- ) ) ;    ( 0.6255,)(0.6255,0.3745 ) ; ( , 0.2575156)(1,0.2575156 ) ; ( 1,)(1,0.2575156 ) ;    at ( 0.49,0.73 ) @xmath81 ; at ( 0.97,0.47 ) @xmath82 ;    suppose that @xmath83 is a decreasing series that satisfies , then by applying the product form of we have that condition is satisfied for @xmath84 if @xmath85 or equivalently @xmath86    let @xmath87 be the unique solution to @xmath88 . repeating the argument illustrated in figure [ fig : stability_solution ] , the solution is unique and positive because @xmath89 $ ] and condition is satisfied for @xmath1 . we thus conclude that any @xmath90 satisfies .",
    "in particular @xmath91 , where @xmath78 , is non - increasing and feasible .",
    "note that regardless of whether the service - rate series is feasible , the sub - system of the first @xmath1 servers is ergodic for every finite @xmath1 , hence the limit probabilities @xmath45 and @xmath92 exist for any service - rate series .",
    "[ lemma : l_limit ] for every service - rate series @xmath10 there exists a limit @xmath93.\\ ] ]    from we have @xmath94 by applying lemma [ lemma : lst_properties](a ) we get @xmath95 the series @xmath96 converges to zero and @xmath97 is a continuous function with respect to @xmath38 , and therefore the term on the right - hand side converges to @xmath58 .",
    "hence , the series @xmath98 is either monotone non - increasing or increasing at a rate that converges to zero .",
    "furthermore , the series is trivially bounded from above by @xmath58 ( lemma [ lemma : lst_properties]a ) , and from below by @xmath99 , which is obtained using the recursion of : @xmath100 we conclude that there exists a finite limit for the series .",
    "we now turn our attention to the expected delay , @xmath101    a service - rate series @xmath10 satisfies finite delay ( fd ) if it belongs to @xmath102    from and we have @xmath103 that is , a non - homogeneous geometric distribution .",
    "let @xmath104 for @xmath13 , @xmath105 and @xmath106 .",
    "if @xmath107 then the geometric term tends to the constant @xmath108 , i.e.  the tail is as of a memoryless distribution .",
    "[ lemma : l_p_limit ] for any external arrival distribution @xmath109 and service series @xmath10 ,    1 .",
    "@xmath110 , 2 .",
    "@xmath111 , 3 .",
    "@xmath112 @xmath16 is heavy - tailed : @xmath113 , 4 .",
    "@xmath114 .",
    "@xmath115    1 .   by , @xmath116 .",
    "for any positive series @xmath117 the convergence of the product @xmath118 to a non - zero and finite limit is equivalent to the convergence of the sum @xmath119 ( see @xcite , p. 209 ) , hence @xmath120 if and only if @xmath121 .",
    "2 .   if @xmath107 then clearly @xmath121 , hence by the previous property we have that @xmath122 .",
    "an equivalent condition for @xmath16 being heavy - tailed is given by theorem 2.6 of @xcite : @xmath123 as @xmath124 , this is equivalent by the stolz - cesro theorem ( discrete version of lhopital s rule ) to @xmath125 and as @xmath126 , we conclude that @xmath127 converges to zero if and only if @xmath128 .",
    "4 .   recall the definition of the lst , @xmath129 , then by applying jensen s inequality and we conclude that @xmath130    lemma [ lemma : l_p_limit ] suggests that the tail behaviour of the lst series @xmath98 , and its limit in particular , is a key component in analysing the stability and expected delay in the system .",
    "the following proposition summarizes the relationship between feasibility , finite expected delay and the tail behaviour of the lst series . in particular we obtain a necessary and sufficient condition for finite expected delay : any feasible service - rate series that satisfies @xmath107 with slower decay rate than @xmath108",
    ". this will be useful for the optimization problem in the following sections .",
    "[ prop : equivalence ] let @xmath21 and @xmath10 be the arrival rate and service - rate series , such that @xmath6",
    ". then the following properties are satisfied :    1 .",
    "@xmath131 , 2 .",
    "@xmath132 , 3 .",
    "if @xmath107 , such that @xmath133 then @xmath134 , 4 .   @xmath135 .",
    "@xmath136    1 .",
    "this can be seen directly from as the right - hand side tends to zero due to the capacity constraint .",
    "the sum of the service - rate series converges to a finite sum , therefore its tail decays faster than that of the harmonic series . without loss of generality",
    "we assume this is the case for all @xmath13 : @xmath137 the expected delay then satisfies @xmath138 if @xmath107 then @xmath139 by , and @xmath140 hence , @xmath128 implies that @xmath141 .",
    "in other words , @xmath107 is a necessary condition for finite delay .",
    "if @xmath107 then by lemma [ lemma : l_p_limit]c @xmath16 is not heavy tailed : there exists @xmath142 such that @xmath143 if we further assume that @xmath144 then the tail of the service - rate series decays even faster than the exponential term , i.e. , @xmath145 equivalently we can say that @xmath146 for @xmath147 . if @xmath148 such that @xmath149 then @xmath150 contradicting the assumption that @xmath141 .",
    "hence , if @xmath107 and the service - rate series decays slower than @xmath151 then the expected delay is finite .",
    "if @xmath152 then the tail of the service - rate series is on the boundary of the feasible range given by , @xmath153 such a series is feasible as it converges to the boundary without reaching it .",
    "any non - feasible series decays at least as fast as @xmath151 and therefore induces infinite expected delay .",
    "proposition [ prop : equivalence ] yields a convenient necessary condition for a feasible services series to satisfy @xmath154 : @xmath155    we conclude this section by pointing out a few open questions and additional refinements of the stability analysis that can be considered in future work on this model .",
    "[ remark : conj_l1_ew ] we conjecture that a stronger result than proposition [ prop : equivalence ] holds , namely that @xmath156 proposition [ prop : equivalence]c establishes that if @xmath96 decays slowly enough then @xmath107 is sufficient for @xmath157 .",
    "furthermore , if @xmath107 and @xmath141 such that @xmath158 , where @xmath159 , then @xmath160 , and by lemma [ lemma : l_p_limit]d we conclude that @xmath161 , a contradiction .",
    "that is , if the service - rate series decays faster than the blocking probability then @xmath128 and the expected delay is infinite .",
    "we are left with checking the case of @xmath162 , where @xmath163 .",
    "we believe that in this case @xmath161 as well , and this belief is supported by numerical tests , but have no proof .",
    "in such a case @xmath161 at a slow rate ( in the sense of lemma [ lemma : l_p_limit]a ) . if this is true then indeed @xmath164 , but we leave this issue as an open question .    [",
    "remark : fd_exist ] an additional open question is whether for any @xmath70 there exists a feasible service - rate series @xmath10 such that @xmath154 , i.e.  @xmath165 .",
    "we conjecture that this is the case , but have no proof .",
    "note that for any finite @xmath62 it is possible to construct a series @xmath166 such that @xmath96 decays at a slower rate than @xmath45 ( by some positive factor ) , but the difficulty lies in showing that the rates do nt coincide when taking @xmath167 .",
    "[ remark : fixed_blocking ] little s law implies that a finite expected delay , @xmath154 , is equivalent to a finite expected number of customers in the system .",
    "this means that a feasible service - rate series and @xmath107 are both necessary , but not sufficient , conditions for the expected number of customers in the system to be finite , which in itself is sufficient but not necessary for general system stability ( in terms of positive recurrence of the underlying process ) .",
    "nevertheless , the probability that a customer that arrives at server @xmath1 , after being blocked by the previous servers , finds it busy is @xmath168 .",
    "this can be seen by considering the blocking probability of the first server in a system with external arrival distribution @xmath169 . from lemma [ lemma : l_limit ]",
    "we have that for any service - rate series , @xmath170 this gives us an interesting result : `` bad '' servers , i.e.  large @xmath1 and slow service - rate @xmath96 , block a fixed proportion of arrivals to them .",
    "a very natural capacity allocation to consider is using a simple geometric series determined by a single parameter .",
    "this is especially called for in light of proposition [ prop : equivalence]c that established that in order to achieve finite delay the service - rate series can not decay faster than a geometric series with rate @xmath108 .",
    "moreover , such service - rate series satisfy properties that will be useful for dealing with the capacity allocation problem .",
    "namely , the stability and finite delay conditions have a simple form and the tail of the optimal solution is indeed approximately geometric under some invariance conditions which will be elaborated .",
    "suppose that the service - rate series is determined by a single parameter representing the service capacity allocated to the first server .",
    "if we assume without loss of generality that @xmath171 ( and then @xmath172 ) , then the class of such service - rate series is @xmath173 in this formulation , the single parameter is the service allocation of the first server , @xmath174 .    for any @xmath175",
    "we have that @xmath176 , and therefore the feasibility condition is simply @xmath177 and the finite delay condition is @xmath178    let @xmath179 and @xmath180 . in figure [",
    "fig : l_alpha ] the series of functions @xmath181 are illustrated for the case of poisson arrivals and @xmath182 .",
    "there are several interesting observations to be made from this figure , all of which are robust for different values of @xmath183 and other external inter - arrival distributions .",
    "( , )  ( , ) node[right ] @xmath184 ; ( , )  ( , ) node[above ] @xmath181 ; in 0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1 at ( , ) [ below ] ; in 0,0.5,1 at ( , ) [ left ] ; at ( , 0.14 ) [ left ] ; at ( , 0.22 ) [ left ] ;    ( , 0.166667)(1,0.166667 ) ; ( , 0.2)(1,0.2 ) ;    ( 0,1) ( 0.01,0.952381) ( 0.02,0.9090909) ( 0.03,0.8695652) ( 0.04,0.8333333) ( 0.05,0.8) ( 0.06,0.7692308) ( 0.07,0.7407407) ( 0.08,0.7142857) ( 0.09,0.6896552) ( 0.1,0.6666667) ( 0.11,0.6451613) ( 0.12,0.625) ( 0.13,0.6060606) ( 0.14,0.5882353) ( 0.15,0.5714286) ( 0.16,0.5555556) ( 0.17,0.5405405) ( 0.18,0.5263158) ( 0.19,0.5128205) ( 0.2,0.5) ( 0.21,0.4878049) ( 0.22,0.4761905) ( 0.23,0.4651163) ( 0.24,0.4545455) ( 0.25,0.4444444) ( 0.26,0.4347826) ( 0.27,0.4255319) ( 0.28,0.4166667) ( 0.29,0.4081633) ( 0.3,0.4) ( 0.31,0.3921569) ( 0.32,0.3846154) ( 0.33,0.3773585) ( 0.34,0.3703704) ( 0.35,0.3636364) ( 0.36,0.3571429) ( 0.37,0.3508772) ( 0.38,0.3448276) ( 0.39,0.3389831) ( 0.4,0.3333333) ( 0.41,0.3278689) ( 0.42,0.3225806) ( 0.43,0.3174603) ( 0.44,0.3125) ( 0.45,0.3076923) ( 0.46,0.3030303) ( 0.47,0.2985075) ( 0.48,0.2941176) ( 0.49,0.2898551) ( 0.5,0.2857143) ( 0.51,0.2816901) ( 0.52,0.2777778) ( 0.53,0.2739726) ( 0.54,0.2702703) ( 0.55,0.2666667) ( 0.56,0.2631579) ( 0.57,0.2597403) ( 0.58,0.2564103) ( 0.59,0.2531646) ( 0.6,0.25) ( 0.61,0.2469136) ( 0.62,0.2439024) ( 0.63,0.2409639) ( 0.64,0.2380952) ( 0.65,0.2352941) ( 0.66,0.2325581) ( 0.67,0.2298851) ( 0.68,0.2272727) ( 0.69,0.2247191) ( 0.7,0.2222222) ( 0.71,0.2197802) ( 0.72,0.2173913) ( 0.73,0.2150538) ( 0.74,0.212766) ( 0.75,0.2105263) ( 0.76,0.2083333) ( 0.77,0.2061856) ( 0.78,0.2040816) ( 0.79,0.2020202) ( 0.8,0.2) ( 0.81,0.1980198) ( 0.82,0.1960784) ( 0.83,0.1941748) ( 0.84,0.1923077) ( 0.85,0.1904762) ( 0.86,0.1886792) ( 0.87,0.1869159) ( 0.88,0.1851852) ( 0.89,0.1834862) ( 0.9,0.1818182) ( 0.91,0.1801802) ( 0.92,0.1785714) ( 0.93,0.1769912) ( 0.94,0.1754386) ( 0.95,0.173913) ( 0.96,0.1724138) ( 0.97,0.1709402) ( 0.98,0.1694915) ( 0.99,0.1680672) ( 1,0.168 ) ;    ( 0,1) ( 0.01,0.9506984) ( 0.02,0.9034033) ( 0.03,0.8586987) ( 0.04,0.8168501) ( 0.05,0.7779197) ( 0.06,0.7418449) ( 0.07,0.7084919) ( 0.08,0.6776894) ( 0.09,0.6492504) ( 0.1,0.622986) ( 0.11,0.5987133) ( 0.12,0.5762593) ( 0.13,0.5554638) ( 0.14,0.5361797) ( 0.15,0.5182731) ( 0.16,0.5016225) ( 0.17,0.4861183) ( 0.18,0.4716618) ( 0.19,0.4581639) ( 0.2,0.4455446) ( 0.21,0.4337317) ( 0.22,0.4226604) ( 0.23,0.4122722) ( 0.24,0.4025141) ( 0.25,0.3933386) ( 0.26,0.3847026) ( 0.27,0.3765669) ( 0.28,0.3688963) ( 0.29,0.3616586) ( 0.3,0.3548248) ( 0.31,0.3483681) ( 0.32,0.3422646) ( 0.33,0.3364921) ( 0.34,0.3310306) ( 0.35,0.3258617) ( 0.36,0.3209687) ( 0.37,0.3163362) ( 0.38,0.3119502) ( 0.39,0.3077978) ( 0.4,0.3038674) ( 0.41,0.3001481) ( 0.42,0.2966302) ( 0.43,0.2933046) ( 0.44,0.2901632) ( 0.45,0.2871984) ( 0.46,0.2844036) ( 0.47,0.2817725) ( 0.48,0.2792996) ( 0.49,0.27698) ( 0.5,0.2748092) ( 0.51,0.2727832) ( 0.52,0.2708987) ( 0.53,0.2691528) ( 0.54,0.2675429) ( 0.55,0.2660671) ( 0.56,0.264724) ( 0.57,0.2635123) ( 0.58,0.2624317) ( 0.59,0.2614819) ( 0.6,0.2606635) ( 0.61,0.2599774) ( 0.62,0.2594252) ( 0.63,0.2590089) ( 0.64,0.2587315) ( 0.65,0.2585962) ( 0.66,0.2586075) ( 0.67,0.2587704) ( 0.68,0.259091) ( 0.69,0.2595764) ( 0.7,0.2602348) ( 0.71,0.2610761) ( 0.72,0.2621114) ( 0.73,0.2633539) ( 0.74,0.2648186) ( 0.75,0.2665234) ( 0.76,0.2684886) ( 0.77,0.2707385) ( 0.78,0.273301) ( 0.79,0.2762095) ( 0.8,0.2795031) ( 0.81,0.2832285) ( 0.82,0.2874417) ( 0.83,0.29221) ( 0.84,0.2976157) ( 0.85,0.3037593) ( 0.86,0.310766) ( 0.87,0.3187927) ( 0.88,0.3280389) ( 0.89,0.3387625) ( 0.9,0.3513022) ( 0.91,0.366112) ( 0.92,0.3838143) ( 0.93,0.4052866) ( 0.94,0.4318063) ( 0.95,0.4653076) ( 0.96,0.5088659) ( 0.97,0.5676848) ( 0.98,0.6513213) ( 0.99,0.7794425) ( 1,1 ) ;    ( 0,1) ( 0.01,0.9448419) ( 0.02,0.8817015) ( 0.03,0.8152662) ( 0.04,0.7501043) ( 0.05,0.6893876) ( 0.06,0.6347124) ( 0.07,0.5864956) ( 0.08,0.5444608) ( 0.09,0.5080059) ( 0.1,0.4764279) ( 0.11,0.4490386) ( 0.12,0.4252174) ( 0.13,0.4044264) ( 0.14,0.3862104) ( 0.15,0.370188) ( 0.16,0.3560417) ( 0.17,0.3435074) ( 0.18,0.3323652) ( 0.19,0.3224316) ( 0.2,0.3135528) ( 0.21,0.3055995) ( 0.22,0.2984626) ( 0.23,0.2920497) ( 0.24,0.2862818) ( 0.25,0.2810918) ( 0.26,0.2764219) ( 0.27,0.2722224) ( 0.28,0.2684505) ( 0.29,0.2650691) ( 0.3,0.2620461) ( 0.31,0.2593536) ( 0.32,0.2569674) ( 0.33,0.2548667) ( 0.34,0.2530333) ( 0.35,0.2514516) ( 0.36,0.2501082) ( 0.37,0.2489918) ( 0.38,0.2480929) ( 0.39,0.2474037) ( 0.4,0.246918) ( 0.41,0.2466312) ( 0.42,0.24654) ( 0.43,0.2466426) ( 0.44,0.2469388) ( 0.45,0.2474297) ( 0.46,0.2481178) ( 0.47,0.2490074) ( 0.48,0.2501043) ( 0.49,0.2514162) ( 0.5,0.2529527) ( 0.51,0.2547255) ( 0.52,0.256749) ( 0.53,0.2590399) ( 0.54,0.2616184) ( 0.55,0.264508) ( 0.56,0.2677364) ( 0.57,0.271336) ( 0.58,0.2753446) ( 0.59,0.2798066) ( 0.6,0.2847737) ( 0.61,0.2903067) ( 0.62,0.2964768) ( 0.63,0.3033671) ( 0.64,0.3110756) ( 0.65,0.3197168) ( 0.66,0.3294254) ( 0.67,0.3403584) ( 0.68,0.3526992) ( 0.69,0.36666) ( 0.7,0.3824843) ( 0.71,0.4004472) ( 0.72,0.4208524) ( 0.73,0.444024) ( 0.74,0.4702887) ( 0.75,0.4999447) ( 0.76,0.5332132) ( 0.77,0.5701682) ( 0.78,0.6106479) ( 0.79,0.6541577) ( 0.8,0.6997927) ( 0.81,0.7462202) ( 0.82,0.7917651) ( 0.83,0.8346171) ( 0.84,0.8731272) ( 0.85,0.9061012) ( 0.86,0.9329859) ( 0.87,0.9538818) ( 0.88,0.9694007) ( 0.89,0.9804442) ( 0.9,0.9879912) ( 0.91,0.9929479) ( 0.92,0.996071) ( 0.93,0.9979488) ( 0.94,0.9990156) ( 0.95,0.9995789) ( 0.96,0.9998475) ( 0.97,0.9999577) ( 0.98,0.9999928) ( 0.99,0.9999996) ( 1,1 ) ;    ( 0,1) ( 0.01,0.9313838) ( 0.02,0.8224342) ( 0.03,0.6966364) ( 0.04,0.5866296) ( 0.05,0.5029612) ( 0.06,0.4416951) ( 0.07,0.3964939) ( 0.08,0.3624161) ( 0.09,0.3361206) ( 0.1,0.3154035) ( 0.11,0.2987926) ( 0.12,0.285281) ( 0.13,0.2741615) ( 0.14,0.2649248) ( 0.15,0.2571959) ( 0.16,0.2506923) ( 0.17,0.245198) ( 0.18,0.2405445) ( 0.19,0.2365988) ( 0.2,0.2332546) ( 0.21,0.2304257) ( 0.22,0.2280419) ( 0.23,0.2260453) ( 0.24,0.2243877) ( 0.25,0.2230291) ( 0.26,0.2219359) ( 0.27,0.2210797) ( 0.28,0.2204367) ( 0.29,0.2199868) ( 0.3,0.2197131) ( 0.31,0.2196015) ( 0.32,0.2196402) ( 0.33,0.2198198) ( 0.34,0.2201325) ( 0.35,0.2205725) ( 0.36,0.2211355) ( 0.37,0.2218188) ( 0.38,0.2226211) ( 0.39,0.2235427) ( 0.4,0.2245853) ( 0.41,0.2257523) ( 0.42,0.2270486) ( 0.43,0.2284809) ( 0.44,0.2300579) ( 0.45,0.2317906) ( 0.46,0.2336924) ( 0.47,0.23578) ( 0.48,0.2380736) ( 0.49,0.2405979) ( 0.5,0.2433831) ( 0.51,0.2464663) ( 0.52,0.2498936) ( 0.53,0.2537222) ( 0.54,0.2580247) ( 0.55,0.2628935) ( 0.56,0.2684484) ( 0.57,0.2748469) ( 0.58,0.2822995) ( 0.59,0.2910928) ( 0.6,0.301624) ( 0.61,0.3144544) ( 0.62,0.3303907) ( 0.63,0.3506086) ( 0.64,0.3768276) ( 0.65,0.4115238) ( 0.66,0.4580563) ( 0.67,0.5202795) ( 0.68,0.6006668) ( 0.69,0.696066) ( 0.7,0.7937596) ( 0.71,0.8758926) ( 0.72,0.9321922) ( 0.73,0.964998) ( 0.74,0.9823219) ( 0.75,0.9910825) ( 0.76,0.9954699) ( 0.77,0.9976799) ( 0.78,0.9988048) ( 0.79,0.9993829) ( 0.8,0.999682) ( 0.81,0.9998371) ( 0.82,0.9999175) ( 0.83,0.9999588) ( 0.84,0.9999799) ( 0.85,0.9999904) ( 0.86,0.9999956) ( 0.87,0.999998) ( 0.88,0.9999992) ( 0.89,0.9999997) ( 0.9,0.9999999) ( 0.91,1) ( 0.92,1) ( 0.93,1) ( 0.94,1) ( 0.95,1) ( 0.96,1) ( 0.97,1) ( 0.98,1) ( 0.99,1) ( 1,1 ) ;    ( 0,1) ( 0.01,0.8773251) ( 0.02,0.6045782) ( 0.03,0.4433516) ( 0.04,0.362446) ( 0.05,0.3153774) ( 0.06,0.285186) ( 0.07,0.2645996) ( 0.08,0.2499853) ( 0.09,0.2393241) ( 0.1,0.2314022) ( 0.11,0.2254458) ( 0.12,0.2209378) ( 0.13,0.2175195) ( 0.14,0.2149348) ( 0.15,0.2129963) ( 0.16,0.2115641) ( 0.17,0.2105322) ( 0.18,0.2098196) ( 0.19,0.2093633) ( 0.2,0.2091147) ( 0.21,0.2090355) ( 0.22,0.2090961) ( 0.23,0.2092731) ( 0.24,0.2095485) ( 0.25,0.2099084) ( 0.26,0.2103423) ( 0.27,0.2108421) ( 0.28,0.2114023) ( 0.29,0.212019) ( 0.3,0.2126896) ( 0.31,0.2134133) ( 0.32,0.2141898) ( 0.33,0.2150201) ( 0.34,0.2159061) ( 0.35,0.2168502) ( 0.36,0.2178558) ( 0.37,0.218927) ( 0.38,0.2200687) ( 0.39,0.2212867) ( 0.4,0.2225875) ( 0.41,0.2239788) ( 0.42,0.2254695) ( 0.43,0.2270698) ( 0.44,0.2287917) ( 0.45,0.2306488) ( 0.46,0.2326574) ( 0.47,0.2348367) ( 0.48,0.2372094) ( 0.49,0.2398031) ( 0.5,0.2426512) ( 0.51,0.2457953) ( 0.52,0.2492874) ( 0.53,0.2531945) ( 0.54,0.2576044) ( 0.55,0.2626358) ( 0.56,0.2684555) ( 0.57,0.275308) ( 0.58,0.2835742) ( 0.59,0.2938961) ( 0.6,0.3074777) ( 0.61,0.3269357) ( 0.62,0.3592813) ( 0.63,0.4295247) ( 0.64,0.6426961) ( 0.65,0.9501217) ( 0.66,0.9966039) ( 0.67,0.9996207) ( 0.68,0.9999377) ( 0.69,0.9999869) ( 0.7,0.9999968) ( 0.71,0.9999991) ( 0.72,0.9999997) ( 0.73,0.9999999) ( 0.74,1) ( 0.75,1) ( 0.76,1) ( 0.77,1) ( 0.78,1) ( 0.79,1) ( 0.8,1) ( 0.81,1) ( 0.82,1) ( 0.83,1) ( 0.84,1) ( 0.85,1) ( 0.86,1) ( 0.87,1) ( 0.88,1) ( 0.89,1) ( 0.9,1) ( 0.91,1) ( 0.92,1) ( 0.93,1) ( 0.94,1) ( 0.95,1) ( 0.96,1) ( 0.97,1) ( 0.98,1) ( 0.99,1) ( 1,1 ) ;    ( 0,1) ( 0.01,0.8255251) ( 0.02,0.5089066) ( 0.03,0.3784658) ( 0.04,0.3155066) ( 0.05,0.2794492) ( 0.06,0.2567722) ( 0.07,0.241683) ( 0.08,0.2312803) ( 0.09,0.2239482) ( 0.1,0.2187146) ( 0.11,0.2149602) ( 0.12,0.2122723) ( 0.13,0.2103668) ( 0.14,0.2090428) ( 0.15,0.2081556) ( 0.16,0.2075993) ( 0.17,0.207296) ( 0.18,0.2071876) ( 0.19,0.2072309) ( 0.2,0.2073937) ( 0.21,0.2076521) ( 0.22,0.2079884) ( 0.23,0.2083898) ( 0.24,0.2088469) ( 0.25,0.2093534) ( 0.26,0.2099048) ( 0.27,0.2104987) ( 0.28,0.2111338) ( 0.29,0.2118097) ( 0.3,0.2125272) ( 0.31,0.2132876) ( 0.32,0.2140929) ( 0.33,0.2149457) ( 0.34,0.215849) ( 0.35,0.2168066) ( 0.36,0.2178226) ( 0.37,0.2189017) ( 0.38,0.2200495) ( 0.39,0.2212721) ( 0.4,0.2225764) ( 0.41,0.2239704) ( 0.42,0.2254631) ( 0.43,0.2270649) ( 0.44,0.2287879) ( 0.45,0.2306458) ( 0.46,0.2326551) ( 0.47,0.2348348) ( 0.48,0.2372078) ( 0.49,0.2398017) ( 0.5,0.2426499) ( 0.51,0.245794) ( 0.52,0.249286) ( 0.53,0.253193) ( 0.54,0.2576028) ( 0.55,0.2626344) ( 0.56,0.2684554) ( 0.57,0.2753128) ( 0.58,0.2835968) ( 0.59,0.2939825) ( 0.6,0.3078125) ( 0.61,0.3284095) ( 0.62,0.3677338) ( 0.63,0.5111726) ( 0.64,0.9736529) ( 0.65,0.9996681) ( 0.66,0.9999843) ( 0.67,0.9999985) ( 0.68,0.9999998) ( 0.69,1) ( 0.7,1) ( 0.71,1) ( 0.72,1) ( 0.73,1) ( 0.74,1) ( 0.75,1) ( 0.76,1) ( 0.77,1) ( 0.78,1) ( 0.79,1) ( 0.8,1) ( 0.81,1) ( 0.82,1) ( 0.83,1) ( 0.84,1) ( 0.85,1) ( 0.86,1) ( 0.87,1) ( 0.88,1) ( 0.89,1) ( 0.9,1) ( 0.91,1) ( 0.92,1) ( 0.93,1) ( 0.94,1) ( 0.95,1) ( 0.96,1) ( 0.97,1) ( 0.98,1) ( 0.99,1) ( 1,1 ) ;    at ( 0.99,0.09 ) ; at ( 0.9,0.5 ) ; at ( 0.85,0.65 ) ; at ( 0.75,0.78 ) ; at ( 0.59,0.72 ) ; at ( 0.58,0.87 ) ;    plot ( , 1- ) ; at ( 0.31,0.75 ) ;    ( 0.553,0)(0.553,0.265 ) ; at ( 0.62,0.1 ) ; ( 0.62,0.08)(0.56,0.01 ) ;    [ [ observations - on - mathbfell_nboldsymbolalphamathbf ] ] observations on @xmath185 : + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    1 .   for every @xmath186 , the function @xmath181 is unimodal ( attaining a minimum ) and @xmath187 . furthermore , the slope of the functions at @xmath188 is decreasing with @xmath1 , which can be verified by recalling that the derivative of the lst at zero equals the negative of the overflow expectation given by : @xmath189 .",
    "this implies that for every @xmath13 there exists an @xmath78 such that @xmath190 .",
    "it appears that this is the case also for the limit @xmath191 , which implies the finite delay condition , but we currently have no proof to this effect",
    ". a proof of this would resolve the open question described in remark [ remark : fd_exist ] in the previous section .",
    "2 .   the function @xmath181 appears to have region of invariance as @xmath1 grows , specifically : the function starts at @xmath192 , sharply decreases after zero , has an interval @xmath193 which it is almost constant @xmath194 , and then sharply increases back to @xmath195 for @xmath196 $ ] . in the case of a poisson arrival process",
    "we observe that @xmath197 and @xmath198 .",
    "the latter value is the explicit solution of @xmath199 , i.e.  the @xmath184 value where the first and second functions intersect .",
    "interestingly , it appears that all of the functions intersect at around the same point .",
    "the invariance of the limit function @xmath191 also has implications on the delay - minimization problem : if @xmath200 for all @xmath193 then the tail of the objective function has a very simple form , @xmath201 , and the optimal @xmath184 can be computed as described below .",
    "suppose now that the blocking probability for all @xmath13 is @xmath202 , and consequently @xmath203 .",
    "we already established in lemma [ lemma : l_limit ] and proposition [ prop : equivalence ] that this is a reasonable approximation for the tail behaviour of the expected delay for any feasible service with finite delay . in the sequel ( specifically in lemma [ lemma : l_invariance ] ) we will also show that if @xmath134 then @xmath108 has a certain degree of invariance to the tail of @xmath10 , thus providing additional justification for the use of approximation of the optimal solution with a fixed @xmath108 .",
    "the optimal service - rate series for such a system is the solution to an infinite dimensional convex program on a simplex : @xmath204",
    "we refer to as the tail approximation program ( tap ) .",
    "the following proposition asserts that the solution to the tap is in @xmath205 with @xmath206 .",
    "this solution resembles the square - root optimal capacity allocation in a jackson network ( see @xcite , p. 329 ) , but there is no direct link between the models . the program is a convex infinite horizon program , in the sense of @xcite ( for general optimality conditions see @xcite , p. 153 ) , which allows us to find the optimal solution as a limit of finite dimensional programs .",
    "[ prop : tap ] the solution to is @xmath207 , @xmath208 .",
    "first of all we argue that the optimal service - rate series is non - increasing by applying a simple interchange argument .",
    "suppose that @xmath10 is an optimal service - rate series such that @xmath209 for some @xmath210 .",
    "the contribution of elements @xmath211 and @xmath212 to the objective function is @xmath213 if @xmath210 then @xmath214 , which means that a greater weight is given to @xmath215 which is bigger than @xmath216 .",
    "hence , we can improve the objective without deviating from the capacity constraint by switching the values of @xmath217 and @xmath218 .",
    "this contradicts the assumption that the series is optimal .",
    "the objective function is an infinite sum of convex single - variable functions .",
    "we first consider the finite program for an integer @xmath219 , @xmath220 every element of the objective function is unbounded as @xmath221 and therefore the solution is in the interior of the constraint set .",
    "this means that every element satisfies the first - order condition @xmath222 where @xmath223 is the lagrange multiplier for the equality constraint @xmath224 simple algebra then yields @xmath225 and by applying the capacity constraint , @xmath226 we derive that @xmath227 .",
    "finally , by taking @xmath228 we conclude that the optimal solution to is @xmath207 .",
    "we are interested in solving the mathematical program , @xmath229    this program can be formulated as an infinite horizon markov decision process with state and action dependent discount factor ( see @xcite ) .",
    "the idea is that at every step @xmath1 we consider a new system with inter - arrival distribution given by the overflows from server @xmath230 and the remaining capacity constraint .",
    "the discount factor at step @xmath1 will be given by the blocking probability when a customer overflows to server @xmath1 , @xmath98 .",
    "first we define the mapping @xmath231 where @xmath232 is the space of non - increasing functions from @xmath233 to @xmath234 $ ] . for any @xmath13 ,",
    "given the overflow distribution @xmath235 we take advantage of the recursive form of @xmath92 in to obtain @xmath236 where by , @xmath237 the objective function of can then be written as @xmath238 therefore , an equivalent program to is given by the bellman equation @xmath239\\}}\\left\\lbrace\\big(1-l(x)\\big)\\frac{1}{x}+l(x)v\\big(\\mu - x,\\hat{l}(x , l)\\big)\\right\\rbrace,\\ ] ] with the objective @xmath240 . in every step @xmath7",
    "is the total available capacity and @xmath241 is the lst defining the external arrival process to the system . while has an elegant form it is not straightforward to solve even numerically .",
    "this is due to the infinite dimensional state space @xmath232 , which is a space of continuous functions .",
    "we next suggest an equivalent program with a simpler state space that includes the server index and the capacities that have been allocated .    for any given exogenous arrival distribution @xmath242 we can compute the values of @xmath97 given the series @xmath243 using the recursive formula .",
    "the program with capacity constraint @xmath7 can then be defined by the bellman equation @xmath244 where @xmath245 .",
    "the overall objective is @xmath246 .",
    "unfortunately there is an additional problem of computational complexity .",
    "specifically , computing @xmath92 requires computing the recursion for @xmath98 which is of the magnitude of @xmath247 steps . in the sequel we propose a numerical approximation method that relies on the solution of for a small number of steps with the tap solution as an initial condition .",
    "observe that there is no direct restriction for the solution of to be non - increasing , which is necessary if customers always go to the fastest server available .",
    "we next argue that the optimal series is indeed non - increasing , even without the explicit constraint .",
    "[ lemma : dp_decreasing ] the solution @xmath10 of is a non - increasing series .",
    "suppose that @xmath10 is an optimal solution such that @xmath248 for some @xmath13 .",
    "the average expected delay is @xmath249 if the rates of server @xmath1 and @xmath84 are interchanged then first summand is unchanged , while the second is decreased because all blocking probabilities @xmath250 for @xmath251 decrease ( see @xcite ) , thus , contradicting the optimality of the series .",
    "a nice property of decreasing service - rate series is given to us by lemma [ lemma : lst_properties](c ) , which states that the series of blocking properties @xmath45 is discrete convex : @xmath252 recall that @xmath253 , so in terms of the lst series this is equivalent to @xmath254 and thus @xmath255 this means that the series @xmath256 is decreasing , hence the weights of the increasing series of expected service times , @xmath257 , in the objective function of is decreasing .",
    "if @xmath107 then gives us a geometric approximation of the tail behaviour of the blocking probabilities @xmath258 .",
    "thus , for large @xmath219 we set @xmath259 due to proposition [ prop : tap ] we have that if the series @xmath260 does not vary by much then a good approximation for the optimal solution is given by a geometric service - rate series with decay rate @xmath261 .",
    "specifically , the optimal tail series is @xmath262 and the approximate optimal residual is @xmath263    for small values of @xmath219 ( @xmath264 ) we can accurately compute @xmath265 and approximate the optimal residual by using the tap solution .",
    "this yields the approximation @xmath266 where @xmath267 and @xmath268 .    according to proposition [ prop : equivalence]b , @xmath107 for any series with finite delay .",
    "a finite - horizon dynamic program that approximates can now be formulated : for @xmath269 , @xmath270 with initial condition @xmath271 and the objective @xmath272 .",
    "we can increase @xmath219 until @xmath273 is lower than some tolerance parameter , or alternatively until the change in the @xmath98 series is smaller than some parameter .",
    "the tail series @xmath274 needs to satisfy the capacity constraint , @xmath275 which according to yields @xmath276    in an optimal allocation will have an equality , as there is no gain from not allocating all of the capacity .",
    "lemma [ lemma : lst_properties](a ) implies that for every @xmath277 there is a unique @xmath278 for which an equality holds .",
    "therefore , the dynamic program effectively only has @xmath279 steps .    in the tap the blocking probability",
    "is assumed to be constant , specifically the limit @xmath108 .",
    "for this to be a good approximation the tail of the series @xmath104 needs to be somehow insensitive to changes in the tail of the service - rate series .",
    "this behaviour appeared in observation 2 in section [ sec : geometric ] and was illustrated in figure [ fig : l_alpha ] . to strengthen the justification of this approximation",
    "we further show that the tail of any service - rate series with finite delay is decreasing and is bounded from below by an increasing series .",
    "[ lemma : l_invariance ] if @xmath134 then the series @xmath280 has a decreasing tail , and is bounded from below by an increasing series @xmath281 .",
    "according to lemma [ lemma : l_limit ] the lst series has a lower bound of @xmath99 , i.e.  the external input lst with all of the capacity .",
    "this argument can be repeated for every overflow distribution @xmath169 into server @xmath1 , when the remaining capacity is @xmath282 .",
    "and so at any step @xmath1 of the dynamic program we have @xmath283 by , @xmath284 and as @xmath285 and the denominator is smaller than one we have that @xmath286 hence the series of lower bounds , @xmath287 , is increasing with @xmath1 .",
    "furthermore , if the series @xmath10 is non - increasing and has finite delay then the series @xmath288 converges to zero and is therefore decreasing at the tail . using , this implies that for large @xmath1 : @xmath289 which yields @xmath290 the last inequality comes from the finite delay condition in proposition [ prop : equivalence]c that demands that the decay of the service - rate series be slower than that of the blocking probabilities .",
    "we therefore conclude that @xmath291 at the tail .    to summarize , for all reasonable service - rate series , that is non - increasing and with finite delay , the series @xmath260 is decreasing and is also bounded from below by an increasing series .",
    "this shows that changing the service - rate series at the tail has a small , or bounded , effect on the limit @xmath108 , as long as the finite delay condition is met . in figure",
    "[ fig : ld ] the lower bound series is illustrated alongside the lst series for the approximated optimal solution for an example set of parameters .",
    "indeed , @xmath260 approaches the lower bound series @xmath287 very quickly . in this example",
    "we have that @xmath292 , which indicates that the error term is very accurate even for @xmath293 . for other examples similar behaviour",
    "was observed , and , as expected , for higher levels of @xmath183 a bigger @xmath219 was required to achieve good accuracy .",
    "( , ) node[right ] @xmath1 ; ( , )  ( , ) ; in 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 at ( , ) [ below ] ; in 0.2,0.3,0.4,0.5,0.6 at ( , ) [ left ] ;    ( 1,0.2857) ( 2,0.3103) ( 3,0.3338) ( 4,0.3557) ( 5,0.3759) ( 6,0.3942) ( 7,0.4105) ( 8,0.4247) ( 9,0.4369) ( 10,0.4473) ( 11,0.456) ( 12,0.4631) ( 13,0.469) ( 14,0.4737) ( 15,0.4774 ) ;    ( 1,0.5741) ( 2,0.563) ( 3,0.5528) ( 4,0.5435) ( 5,0.535) ( 6,0.5273) ( 7,0.5204) ( 8,0.5142) ( 9,0.5089) ( 10,0.5042) ( 11,0.5003) ( 12,0.497) ( 13,0.4942) ( 14,0.492) ( 15,0.4902 ) ;    at ( 11,0.38 ) @xmath287 ; at ( 11,0.55 ) @xmath260 ;",
    "in this section we assume @xmath171 and that the external inter - arrival distribution is erlang@xmath294 . in this case",
    "the overall utilization is @xmath295 and the variance of the exogenous inter - arrival times is @xmath296 .",
    "we can therefore examine different levels of utilization and variance by changing @xmath183 and @xmath297 . for high levels of @xmath183",
    "this analysis is quite general as the blocking probabilities in the heavy - traffic approximation of the gi / m/@xmath0 are known to depend only on the first two moments of the arrival distribution ( see @xcite ) .    in figure",
    "[ fig : opt ] we illustrate the approximate optimal service - rate series by solving for different parameter values with @xmath293 .",
    "the first thing to observe is that in all examples the optimal service - rate series is very close to geometric .",
    ".48    ( , ) ",
    "( , ) node[right ] @xmath1 ; ( , )  ( , ) node[above ] @xmath96 ; in 1,2,3,4,5,6,7,8,9,10 at ( , ) [ below ] ; in 0,0.2,0.4,0.6,0.8 at ( , ) [ left ] ;    ( 1,0.5157474146) ( 2,0.2497520189) ( 3,0.1209430609) ( 4,0.0585669899) ( 5,0.0283612163) ( 6,0.0137339923) ( 7,0.0066507213) ( 8,0.003220629) ( 9,0.0015595979) ( 10,0.0007552393 ) ;    in ( 1,0.5157474146 ) , ( 2,0.2497520189 ) , ( 3,0.1209430609 ) , ( 4,0.0585669899 ) , ( 5,0.0283612163 ) , ( 6,0.0137339923 ) , ( 7,0.0066507213 ) , ( 8,0.003220629 ) , ( 9,0.0015595979 ) , ( 10,0.0007552393 ) at ;    ( 1,0.6587197696618) ( 2,0.2248080347185) ( 3,0.0767225378706) ( 4,0.0261838853966) ( 5,0.0089360424393) ( 6,0.003049694622) ( 7,0.0010408004831) ( 8,0.0003552046286) ( 9,0.0001212243175) ( 10,0.000041371463 ) ;    in ( 1,0.6587197696618 ) , ( 2,0.2248080347185 ) , ( 3,0.0767225378706 ) , ( 4,0.0261838853966 ) , ( 5,0.0089360424393 ) , ( 6,0.003049694622 ) , ( 7,0.0010408004831 ) , ( 8,0.0003552046286 ) , ( 9,0.0001212243175 ) , ( 10,0.000041371463 ) at ;    ( 1,0.786405776378319) ( 2,0.167971731257131) ( 3,0.0358777915282566) ( 4,0.0076632890267385) ( 5,0.0016368342700547) ( 6,0.0003496183451097) ( 7,0.0000746764589876) ( 8,0.0000159504602803) ( 9,0.00000340692618) ( 10,0.0000007276997523 ) ;    in ( 1,0.786405776378319 ) , ( 2,0.167971731257131 ) , ( 3,0.0358777915282566 ) , ( 4,0.0076632890267385 ) , ( 5,0.0016368342700547 ) , ( 6,0.0003496183451097 ) , ( 7,0.0000746764589876 ) , ( 8,0.0000159504602803 ) , ( 9,0.00000340692618 ) , ( 10,0.0000007276997523 ) at ;    ( 1,0.839907672099729) ( 2,0.134462774447742) ( 3,0.0215264585772682) ( 4,0.00344622086508361) ( 5,0.00055171352074972) ( 6,0.00000883251018708771) ( 7,0.00000141401711705373) ( 8,0.00000022637329195996) ( 9,0.00000003624062728432) ( 10,0.00000000580184638651 ) ;    in ( 1,0.839907672099729 ) , ( 2,0.134462774447742 ) , ( 3,0.0215264585772682 ) , ( 4,0.00344622086508361 ) , ( 5,0.00055171352074972 ) , ( 6,0.00000883251018708771 ) , ( 7,0.00000141401711705373 ) , ( 8,0.00000022637329195996 ) , ( 9,0.00000003624062728432 ) , ( 10,0.00000000580184638651 ) at ;    .48    ( , )  ( , ) node[right ] @xmath1 ; ( , )  ( , ) node[above ] @xmath96 ; in 1,2,3,4,5,6,7,8,9,10 at ( , ) [ below ] ; in 0,0.2,0.4,0.6 at ( , ) [ left ] ;    ( 1,0.3055711) ( 2,0.2121974) ( 3,0.147356) ( 4,0.1023283) ( 5,0.0710597) ( 6,0.0493459) ( 7,0.0342672) ( 8,0.0237961) ( 9,0.0165247) ( 10,0.0114753 ) ;    in ( 1,0.3055711 ) , ( 2,0.2121974 ) , ( 3,0.147356 ) , ( 4,0.1023283 ) , ( 5,0.0710597 ) , ( 6,0.0493459 ) , ( 7,0.0342672 ) , ( 8,0.0237961 ) , ( 9,0.0165247 ) , ( 10,0.0114753 ) at ;    ( 1,0.4023266) ( 2,0.24045991) ( 3,0.14371649) ( 4,0.08589552) ( 5,0.05133747) ( 6,0.03068304) ( 7,0.01833844) ( 8,0.0109604) ( 9,0.00655074) ( 10,0.0039152 ) ;    in ( 1,0.4023266 ) , ( 2,0.24045991 ) , ( 3,0.14371649 ) , ( 4,0.08589552 ) , ( 5,0.05133747 ) , ( 6,0.03068304 ) , ( 7,0.01833844 ) , ( 8,0.0109604 ) , ( 9,0.00655074 ) , ( 10,0.0039152 ) at ;    ( 1,0.497898927) ( 2,0.249995585) ( 3,0.125523052) ( 4,0.063025259) ( 5,0.03164505) ( 6,0.015889014) ( 7,0.007977891) ( 8,0.004005708) ( 9,0.00201127) ( 10,0.001009861 ) ;    in ( 1,0.497898927 ) , ( 2,0.249995585 ) , ( 3,0.125523052 ) , ( 4,0.063025259 ) , ( 5,0.03164505 ) , ( 6,0.015889014 ) , ( 7,0.007977891 ) , ( 8,0.004005708 ) , ( 9,0.00201127 ) , ( 10,0.001009861 ) at ;    ( 1,0.54123667) ( 2,0.248299537) ( 3,0.1139107225) ( 4,0.0522580624) ( 5,0.0239740827) ( 6,0.01099843) ( 7,0.0050456764) ( 8,0.0023147713) ( 9,0.0010619322) ( 10,0.0004871755 ) ;    in ( 1,0.54123667 ) , ( 2,0.248299537 ) , ( 3,0.1139107225 ) , ( 4,0.0522580624 ) , ( 5,0.0239740827 ) , ( 6,0.01099843 ) , ( 7,0.0050456764 ) , ( 8,0.0023147713 ) , ( 9,0.0010619322 ) , ( 10,0.0004871755 ) at ;    .48    ( , )  ( , ) node[right ] @xmath1 ; ( , )  ( , ) node[above ] @xmath96 ; in 1,2,3,4,5,6,7,8,9,10 at ( , ) [ below ] ; in 0,0.1,0.2,0.3,0.4 at ( , ) [ left ] ;    ( 1,0.159331) ( 2,0.133944) ( 3,0.112603) ( 4,0.094662) ( 5,0.079579) ( 6,0.0669) ( 7,0.056241) ( 8,0.04728) ( 9,0.039747) ( 10,0.033414 ) ;    in ( 1,0.159331 ) , ( 2,0.133944 ) , ( 3,0.112603 ) , ( 4,0.094662 ) , ( 5,0.079579 ) , ( 6,0.0669 ) , ( 7,0.056241 ) , ( 8,0.04728 ) , ( 9,0.039747 ) , ( 10,0.033414 ) at ;    ( 1,0.212008) ( 2,0.167061) ( 3,0.131642) ( 4,0.103733) ( 5,0.081741) ( 6,0.064411) ( 7,0.050755) ( 8,0.039995) ( 9,0.031516) ( 10,0.024834 ) ;    in ( 1,0.212008 ) , ( 2,0.167061 ) , ( 3,0.131642 ) , ( 4,0.103733 ) , ( 5,0.081741 ) , ( 6,0.064411 ) , ( 7,0.050755 ) , ( 8,0.039995 ) , ( 9,0.031516 ) , ( 10,0.024834 ) at ;    ( 1,0.2649144) ( 2,0.1947348) ( 3,0.1431467) ( 4,0.1052251) ( 5,0.0773494) ( 6,0.0568585) ( 7,0.0417958) ( 8,0.0307235) ( 9,0.0225844) ( 10,0.0166015 ) ;    in ( 1,0.2649144 ) , ( 2,0.1947348 ) , ( 3,0.1431467 ) , ( 4,0.1052251 ) , ( 5,0.0773494 ) , ( 6,0.0568585 ) , ( 7,0.0417958 ) , ( 8,0.0307235 ) , ( 9,0.0225844 ) , ( 10,0.0166015 ) at ;    ( 1,0.289094) ( 2,0.2055187) ( 3,0.1461044) ( 4,0.1038665) ( 5,0.0738393) ( 6,0.0524928) ( 7,0.0373175) ( 8,0.0265292) ( 9,0.0188598) ( 10,0.0134075 ) ;    in ( 1,0.289094 ) , ( 2,0.2055187 ) , ( 3,0.1461044 ) , ( 4,0.1038665 ) , ( 5,0.0738393 ) , ( 6,0.0524928 ) , ( 7,0.0373175 ) , ( 8,0.0265292 ) , ( 9,0.0188598 ) , ( 10,0.0134075 ) at ;    .48    ( , )  ( , ) node[right ] @xmath1 ; ( , )  ( , ) node[above ] @xmath96 ; in 1,2,3,4,5,6,7,8,9,10 at ( , ) [ below ] ; in 0,0.05,0.1,0.15 at ( , ) [ left ] ;    ( 1,0.06693) ( 2,0.06245) ( 3,0.05827) ( 4,0.05437) ( 5,0.05073) ( 6,0.04734) ( 7,0.04417) ( 8,0.04121) ( 9,0.03845) ( 10,0.03588 ) ;    in ( 1,0.06693 ) , ( 2,0.06245 ) , ( 3,0.05827 ) , ( 4,0.05437 ) , ( 5,0.05073 ) , ( 6,0.04734 ) , ( 7,0.04417 ) , ( 8,0.04121 ) , ( 9,0.03845 ) , ( 10,0.03588 ) at ;    ( 1,0.08488) ( 2,0.07768) ( 3,0.07108) ( 4,0.06505) ( 5,0.05953) ( 6,0.05448) ( 7,0.04985) ( 8,0.04562) ( 9,0.04175) ( 10,0.0382 ) ;    in ( 1,0.08488 ) , ( 2,0.07768 ) , ( 3,0.07108 ) , ( 4,0.06505 ) , ( 5,0.05953 ) , ( 6,0.05448 ) , ( 7,0.04985 ) , ( 8,0.04562 ) , ( 9,0.04175 ) , ( 10,0.0382 ) at ;    ( 1,0.10255) ( 2,0.09204) ( 3,0.0826) ( 4,0.07413) ( 5,0.06652) ( 6,0.0597) ( 7,0.05358) ( 8,0.04808) ( 9,0.04315) ( 10,0.03873 ) ;    in ( 1,0.10255 ) , ( 2,0.09204 ) , ( 3,0.0826 ) , ( 4,0.07413 ) , ( 5,0.06652 ) , ( 6,0.0597 ) , ( 7,0.05358 ) , ( 8,0.04808 ) , ( 9,0.04315 ) , ( 10,0.03873 ) at ;    ( 1,0.11064) ( 2,0.0984) ( 3,0.08751) ( 4,0.07783) ( 5,0.06922) ( 6,0.06156) ( 7,0.05475) ( 8,0.04869) ( 9,0.0433) ( 10,0.03851 ) ;    in ( 1,0.11064 ) , ( 2,0.0984 ) , ( 3,0.08751 ) , ( 4,0.07783 ) , ( 5,0.06922 ) , ( 6,0.06156 ) , ( 7,0.05475 ) , ( 8,0.04869 ) , ( 9,0.0433 ) , ( 10,0.03851 ) at ;    [ legend entries= @xmath298,@xmath299,@xmath300,@xmath301,legend columns=-1,legend style=/tikz / every even column/.append style = column sep=0.8 cm ]    in table [ tbl : opt ] we present the approximated optimal values of @xmath302 and the respective tail approximations @xmath273 . for high levels of @xmath183 the contribution of the tail approximation is substantial and is likely to be less accurate . however , we find that the series of @xmath98 stabilizes very quickly and therefore the approximation @xmath303 is quite accurate , suggesting the error terms provide a decent approximation .",
    "the series of lst of the approximated optimal service - rate series are illustrated in figure [ fig : lst ] . in all examples",
    "the series indeed stabilizes very fast , hence the tail approximation using the value of @xmath304 is appropriate .",
    "this stability was further verified by running simulations for a large number of servers using the approximate optimal service - rate series .",
    ".48    ( , ) ",
    "( , ) node[right ] @xmath1 ; ( , )  ( , ) node[above ] @xmath98 ; in 1,2,3,4,5,6,7,8,9,10 at ( , ) [ below ] ; in 0,0.2,0.4,0.6,0.8 at ( , ) [ left ] ;    ( 1,0.2902) ( 2,0.2772) ( 3,0.2663) ( 4,0.2577) ( 5,0.2513) ( 6,0.2468) ( 7,0.2439) ( 8,0.2421) ( 9,0.241) ( 10,0.2404 ) ;    in ( 1,0.2902 ) , ( 2,0.2772 ) , ( 3,0.2663 ) , ( 4,0.2577 ) , ( 5,0.2513 ) , ( 6,0.2468 ) , ( 7,0.2439 ) , ( 8,0.2421 ) , ( 9,0.241 ) , ( 10,0.2404 ) at ;    ( 1,0.1431) ( 2,0.1414) ( 3,0.1387) ( 4,0.1362) ( 5,0.1345) ( 6,0.1335) ( 7,0.133) ( 8,0.1327) ( 9,0.1326) ( 10,0.1326 ) ;    in ( 1,0.1431 ) , ( 2,0.1414 ) , ( 3,0.1387 ) , ( 4,0.1362 ) , ( 5,0.1345 ) , ( 6,0.1335 ) , ( 7,0.133 ) , ( 8,0.1327 ) , ( 9,0.1326 ) , ( 10,0.1326 ) at ;    ( 1,0.05593) ( 2,0.06067) ( 3,0.06066) ( 4,0.05998) ( 5,0.05958) ( 6,0.05941) ( 7,0.05935) ( 8,0.05933) ( 9,0.05933) ( 10,0.05933 ) ;    in ( 1,0.05593 ) , ( 2,0.06067 ) , ( 3,0.06066 ) , ( 4,0.05998 ) , ( 5,0.05958 ) , ( 6,0.05941 ) , ( 7,0.05935 ) , ( 8,0.05933 ) , ( 9,0.05933 ) , ( 10,0.05933 ) at ;    ( 1,0.04869) ( 2,0.03571) ( 3,0.02868) ( 4,0.02609) ( 5,0.02529) ( 6,0.02505) ( 7,0.02498) ( 8,0.02496) ( 9,0.02496) ( 10,0.02495 ) ;    in ( 1,0.04869 ) , ( 2,0.03571 ) , ( 3,0.02868 ) , ( 4,0.02609 ) , ( 5,0.02529 ) , ( 6,0.02505 ) , ( 7,0.02498 ) , ( 8,0.02496 ) , ( 9,0.02496 ) , ( 10,0.02495 ) at ;    .48    ( , )  ( , ) node[right ] @xmath1 ; ( , )  ( , ) node[above ] @xmath98 ; in 1,2,3,4,5,6,7,8,9,10 at ( , ) [ below ] ; in 0,0.2,0.4,0.6,0.8 at ( , ) [ left ] ;    ( 1,0.5674) ( 2,0.5574) ( 3,0.5485) ( 4,0.5404) ( 5,0.5332) ( 6,0.5268) ( 7,0.521) ( 8,0.516) ( 9,0.5116) ( 10,0.5078 ) ;    in ( 1,0.5674 ) , ( 2,0.5574 ) , ( 3,0.5485 ) , ( 4,0.5404 ) , ( 5,0.5332 ) , ( 6,0.5268 ) , ( 7,0.521 ) , ( 8,0.516 ) , ( 9,0.5116 ) , ( 10,0.5078 ) at ;    ( 1,0.4435) ( 2,0.4298) ( 3,0.4185) ( 4,0.4091) ( 5,0.4013) ( 6,0.3947) ( 7,0.3893) ( 8,0.3849) ( 9,0.3814) ( 10,0.3787 ) ;    in ( 1,0.4435 ) , ( 2,0.4298 ) , ( 3,0.4185 ) , ( 4,0.4091 ) , ( 5,0.4013 ) , ( 6,0.3947 ) , ( 7,0.3893 ) , ( 8,0.3849 ) , ( 9,0.3814 ) , ( 10,0.3787 ) at ;    ( 1,0.3315) ( 2,0.316) ( 3,0.3047) ( 4,0.2961) ( 5,0.2893) ( 6,0.284) ( 7,0.2801) ( 8,0.2772) ( 9,0.2753) ( 10,0.274 ) ;    in ( 1,0.3315 ) , ( 2,0.316 ) , ( 3,0.3047 ) , ( 4,0.2961 ) , ( 5,0.2893 ) , ( 6,0.284 ) , ( 7,0.2801 ) , ( 8,0.2772 ) , ( 9,0.2753 ) , ( 10,0.274 ) at ;    ( 1,0.2827) ( 2,0.2682) ( 3,0.2585) ( 4,0.2515) ( 5,0.2461) ( 6,0.2421) ( 7,0.2393) ( 8,0.2373) ( 9,0.2361) ( 10,0.2353 ) ;    in ( 1,0.2827 ) , ( 2,0.2682 ) , ( 3,0.2585 ) , ( 4,0.2515 ) , ( 5,0.2461 ) , ( 6,0.2421 ) , ( 7,0.2393 ) , ( 8,0.2373 ) , ( 9,0.2361 ) , ( 10,0.2353 ) at ;    .48    ( , )  ( , ) node[right ] @xmath1 ; ( , )  ( , ) node[above ] @xmath98 ; in 1,2,3,4,5,6,7,8,9,10 at ( , ) [ below ] ; in 0,0.2,0.4,0.6,0.8 at ( , ) [ left ] ;    ( 1,0.7903) ( 2,0.7865) ( 3,0.7826) ( 4,0.7788) ( 5,0.775) ( 6,0.7713) ( 7,0.7676) ( 8,0.764) ( 9,0.7605) ( 10,0.7571 ) ;    in ( 1,0.7903 ) , ( 2,0.7865 ) , ( 3,0.7826 ) , ( 4,0.7788 ) , ( 5,0.775 ) , ( 6,0.7713 ) , ( 7,0.7676 ) , ( 8,0.764 ) , ( 9,0.7605 ) , ( 10,0.7571 ) at ;    ( 1,0.7225) ( 2,0.7159) ( 3,0.7093) ( 4,0.7029) ( 5,0.6966) ( 6,0.6906) ( 7,0.6849) ( 8,0.6794) ( 9,0.6742) ( 10,0.6693 ) ;    in ( 1,0.7225 ) , ( 2,0.7159 ) , ( 3,0.7093 ) , ( 4,0.7029 ) , ( 5,0.6966 ) , ( 6,0.6906 ) , ( 7,0.6849 ) , ( 8,0.6794 ) , ( 9,0.6742 ) , ( 10,0.6693 ) at ;    ( 1,0.6552) ( 2,0.6452) ( 3,0.6356) ( 4,0.6263) ( 5,0.6176) ( 6,0.6096) ( 7,0.6021) ( 8,0.5953) ( 9,0.589) ( 10,0.5834 ) ;    in ( 1,0.6552 ) , ( 2,0.6452 ) , ( 3,0.6356 ) , ( 4,0.6263 ) , ( 5,0.6176 ) , ( 6,0.6096 ) , ( 7,0.6021 ) , ( 8,0.5953 ) , ( 9,0.589 ) , ( 10,0.5834 ) at ;    ( 1,0.6246) ( 2,0.613) ( 3,0.6018) ( 4,0.5914) ( 5,0.5818) ( 6,0.573) ( 7,0.5651) ( 8,0.558) ( 9,0.5516) ( 10,0.5459 ) ;    in ( 1,0.6246 ) , ( 2,0.613 ) , ( 3,0.6018 ) , ( 4,0.5914 ) , ( 5,0.5818 ) , ( 6,0.573 ) , ( 7,0.5651 ) , ( 8,0.558 ) , ( 9,0.5516 ) , ( 10,0.5459 ) at ;    .48    ( , ) ",
    "( , ) node[right ] @xmath1 ; ( , ) ",
    "( , ) node[above ] @xmath98 ; in 1,2,3,4,5,6,7,8,9,10 at ( , ) [ below ] ; in 0,0.2,0.4,0.6,0.8 at ( , ) [ left ] ;    ( 1,0.9228) ( 2,0.9224) ( 3,0.922) ( 4,0.9216) ( 5,0.9212) ( 6,0.9208) ( 7,0.9204) ( 8,0.92) ( 9,0.9195) ( 10,0.9191 ) ;    in ( 1,0.9228 ) , ( 2,0.9224 ) , ( 3,0.922 ) , ( 4,0.9216 ) , ( 5,0.9212 ) , ( 6,0.9208 ) , ( 7,0.9204 ) , ( 8,0.92 ) , ( 9,0.9195 ) , ( 10,0.9191 ) at ;    ( 1,0.9018) ( 2,0.9011) ( 3,0.9004) ( 4,0.8996) ( 5,0.8989) ( 6,0.8981) ( 7,0.8974) ( 8,0.8966) ( 9,0.8958) ( 10,0.895 ) ;    in ( 1,0.9018 ) , ( 2,0.9011 ) , ( 3,0.9004 ) , ( 4,0.8996 ) , ( 5,0.8989 ) , ( 6,0.8981 ) , ( 7,0.8974 ) , ( 8,0.8966 ) , ( 9,0.8958 ) , ( 10,0.895 ) at ;    ( 1,0.8811) ( 2,0.88) ( 3,0.8789) ( 4,0.8777) ( 5,0.8765) ( 6,0.8753) ( 7,0.8741) ( 8,0.8728) ( 9,0.8715) ( 10,0.8702 ) ;    in ( 1,0.8811 ) , ( 2,0.88 ) , ( 3,0.8789 ) , ( 4,0.8777 ) , ( 5,0.8765 ) , ( 6,0.8753 ) , ( 7,0.8741 ) , ( 8,0.8728 ) , ( 9,0.8715 ) , ( 10,0.8702 ) at ;    ( 1,0.8717) ( 2,0.8704) ( 3,0.869) ( 4,0.8676) ( 5,0.8662) ( 6,0.8647) ( 7,0.8632) ( 8,0.8616) ( 9,0.86) ( 10,0.8584 ) ;    in ( 1,0.8717 ) , ( 2,0.8704 ) , ( 3,0.869 ) , ( 4,0.8676 ) , ( 5,0.8662 ) , ( 6,0.8647 ) , ( 7,0.8632 ) , ( 8,0.8616 ) , ( 9,0.86 ) , ( 10,0.8584 ) at ;    [ legend entries= @xmath298,@xmath299,@xmath300,@xmath301,legend columns=-1,legend style=/tikz / every even column/.append style = column sep=0.8 cm ]    in the special case of poisson arrivals ( @xmath298 ) it is interesting to observe that @xmath305 , as seen in figure [ fig : mu1_rho ] .",
    "thus , a reasonable rough approximation for the optimal service - rate series given by @xmath306 the value @xmath3 appeared in two places before : ( 1 ) the solution to the equation @xmath307 is @xmath308 , as was elaborated in observation 2 of section [ sec : geometric ] ( see also figure [ fig : l_alpha ] ) .",
    "this seems to be a critical point for the limit function @xmath191 for geometric service - rate series ( with rate @xmath184 ) .",
    "( 2 ) the optimal tail decay rate given in proposition [ prop : tap ] is @xmath261 , where in the poisson case we observe that @xmath309 where @xmath310 is a constant that was in the range of @xmath311 in all examples computed .",
    "( , )  ( , ) node[right ] @xmath183 ; ( , )  ( , ) ; in 0.2,0.4,0.6,0.8,1 at ( , ) [ below ] ; in 0,0.2,0.4,0.6,0.8,1 at ( , ) [ left ] ;    plot ( , 1-sqrt ( ) ) ;    ( 0.001,0.9 )  ( 0.05,0.76211) ( 0.1,0.65953) ( 0.15,0.57994) ( 0.2,0.50975) ( 0.25,0.45226) ( 0.3,0.39805) ( 0.35,0.3446) ( 0.4,0.30389) ( 0.45,0.26407) ( 0.5,0.22542) ( 0.55,0.19067) ( 0.6,0.15887) ( 0.65,0.13086) ( 0.7,0.1069) ( 0.75,0.08578) ( 0.8,0.06824) ( 0.85,0.05196) ( 0.9,0.03623) ( 0.95,0.01991 ) ;    at ( 0.8,0.23 ) @xmath312 ; at ( 0.6,0.1 ) @xmath25 ;    let @xmath313 and let @xmath314 denote the effective utilization of the sub - system excluding the first @xmath1 servers for @xmath13 . in figure",
    "[ fig : rho ] we see that the effective utilization series , given the optimal service - rate series , is decreasing with @xmath1 for all parameter values .",
    "an interesting result is that in all examples the tail of the utilization level series decays geometrically .",
    "the rate of decay is slightly higher than @xmath315 , that is to say the effective utilization decreases at a slower rate than the service - rate series , as expected .",
    ".48    ( , ) ",
    "( , ) node[right ] @xmath1 ; ( , )  ( , ) node[above ] @xmath316 ; in 1,2,3,4,5,6,7,8,9,10 at ( , ) [ below ] ; in 0,0.2,0.4,0.6,0.8 at ( , ) [ left ] ;    ( 1,0.2) ( 2,0.1183860622) ( 3,0.066929141) ( 4,0.0363566839) ( 5,0.0191111039) ( 6,0.0097963413) ( 7,0.0049325924) ( 8,0.0024542598) ( 9,0.0012120319) ( 10,0.000595864 ) ;    in ( 1,0.2 ) , ( 2,0.1183860622 ) , ( 3,0.066929141 ) , ( 4,0.0363566839 ) , ( 5,0.0191111039 ) , ( 6,0.0097963413 ) , ( 7,0.0049325924 ) , ( 8,0.0024542598 ) , ( 9,0.0012120319 ) , ( 10,0.000595864 ) at ;    ( 1,0.2) ( 2,0.083551161774) ( 3,0.034490599154) ( 4,0.01396840367) ( 5,0.005555948128) ( 6,0.002182029091) ( 7,0.00085062238) ( 8,0.000330321406) ( 9,0.000128035905) ( 10,0.000049586148 ) ;    in ( 1,0.2 ) , ( 2,0.083551161774 ) , ( 3,0.034490599154 ) , ( 4,0.01396840367 ) , ( 5,0.005555948128 ) , ( 6,0.002182029091 ) , ( 7,0.00085062238 ) , ( 8,0.000330321406 ) , ( 9,0.000128035905 ) , ( 10,0.000049586148 ) at ;    ( 1,0.2) ( 2,0.050896041773024) ( 3,0.014050493688186) ( 4,0.00387822799766) ( 5,0.001058526862528) ( 6,0.000286968208044) ( 7,0.00007757915149) ( 8,0.000020952016892) ( 9,0.00000565675961) ( 10,0.000001527098582 ) ;    in ( 1,0.2 ) , ( 2,0.050896041773024 ) , ( 3,0.014050493688186 ) , ( 4,0.00387822799766 ) , ( 5,0.001058526862528 ) , ( 6,0.000286968208044 ) , ( 7,0.00007757915149 ) , ( 8,0.000020952016892 ) , ( 9,0.00000565675961 ) , ( 10,0.000001527098582 ) at ;    ( 1,0.2) ( 2,0.060113988117692) ( 3,0.0132504723393969) ( 4,0.00234555499039934) ( 5,0.000377668558325819) ( 6,0.00000589468822303439) ( 7,0.00000091149741375569) ( 8,0.00000014055816846642) ( 9,0.00000002165737996784) ( 10,0.000000033362039986 ) ;    in ( 1,0.2 ) , ( 2,0.060113988117692 ) , ( 3,0.0132504723393969 ) , ( 4,0.00234555499039934 ) , ( 5,0.000377668558325819 ) , ( 6,0.00000589468822303439 ) , ( 7,0.00000091149741375569 ) , ( 8,0.00000014055816846642 ) , ( 9,0.00000002165737996784 ) , ( 10,0.000000033362039986 ) at ;    .48    ( , )  ( , ) node[right ] @xmath1 ; ( , )  ( , ) node[above ] @xmath316 ; in 1,2,3,4,5,6,7,8,9,10 at ( , ) [ below ] ; in 0,0.2,0.4,0.6,0.8 at ( , ) [ left ] ;    ( 1,0.4) ( 2,0.326547) ( 3,0.26189) ( 4,0.206649) ( 5,0.160665) ( 6,0.123246) ( 7,0.093401) ( 8,0.070016) ( 9,0.051978) ( 10,0.038258 ) ;    in ( 1,0.4 ) , ( 2,0.326547 ) , ( 3,0.26189 ) , ( 4,0.206649 ) , ( 5,0.160665 ) , ( 6,0.123246 ) , ( 7,0.093401 ) , ( 8,0.070016 ) , ( 9,0.051978 ) , ( 10,0.038258 ) at ;    ( 1,0.4) ( 2,0.296834) ( 3,0.2134753) ( 4,0.1494922) ( 5,0.1023365) ( 6,0.0687102) ( 7,0.0453788) ( 8,0.0295585) ( 9,0.0190363) ( 10,0.0121489 ) ;    in ( 1,0.4 ) , ( 2,0.296834 ) , ( 3,0.2134753 ) , ( 4,0.1494922 ) , ( 5,0.1023365 ) , ( 6,0.0687102 ) , ( 7,0.0453788 ) , ( 8,0.0295585 ) , ( 9,0.0190363 ) , ( 10,0.0121489 ) at ;    ( 1,0.4) ( 2,0.263689722) ( 3,0.165729294) ( 4,0.100438556) ( 5,0.059141343) ( 6,0.034026925) ( 7,0.019221192) ( 8,0.010706464) ( 9,0.005903001) ( 10,0.003231593 ) ;    in ( 1,0.4 ) , ( 2,0.263689722 ) , ( 3,0.165729294 ) , ( 4,0.100438556 ) , ( 5,0.059141343 ) , ( 6,0.034026925 ) , ( 7,0.019221192 ) , ( 8,0.010706464 ) , ( 9,0.005903001 ) , ( 10,0.003231593 ) at ;    ( 1,0.4) ( 2,0.246085861) ( 3,0.143626829) ( 4,0.080812862) ( 5,0.044233484) ( 6,0.023696777) ( 7,0.012487959) ( 8,0.006502927) ( 9,0.003358763) ( 10,0.001725664 ) ;    in ( 1,0.4 ) , ( 2,0.246085861 ) , ( 3,0.143626829 ) , ( 4,0.080812862 ) , ( 5,0.044233484 ) , ( 6,0.023696777 ) , ( 7,0.012487959 ) , ( 8,0.006502927 ) , ( 9,0.003358763 ) , ( 10,0.001725664 ) at ;    .48    ( , )  ( , ) node[right ] @xmath1 ; ( , )  ( , ) node[above ] @xmath316 ; in 1,2,3,4,5,6,7,8,9,10 at ( , ) [ below ] ; in 0,0.2,0.4,0.6,0.8 at ( , ) [ left ] ;    ( 1,0.6) ( 2,0.56397) ( 3,0.52753) ( 4,0.49104) ( 5,0.45485) ( 6,0.41927) ( 7,0.38461) ( 8,0.35113) ( 9,0.31907) ( 10,0.28861 ) ;    in ( 1,0.6 ) , ( 2,0.56397 ) , ( 3,0.52753 ) , ( 4,0.49104 ) , ( 5,0.45485 ) , ( 6,0.41927 ) , ( 7,0.38461 ) , ( 8,0.35113 ) , ( 9,0.31907 ) , ( 10,0.28861 ) at ;    ( 1,0.6) ( 2,0.54996) ( 3,0.49948) ( 4,0.44947) ( 5,0.4008) ( 6,0.35423) ( 7,0.31037) ( 8,0.26967) ( 9,0.23244) ( 10,0.19881 ) ;    in ( 1,0.6 ) , ( 2,0.54996 ) , ( 3,0.49948 ) , ( 4,0.44947 ) , ( 5,0.4008 ) , ( 6,0.35423 ) , ( 7,0.31037 ) , ( 8,0.26967 ) , ( 9,0.23244 ) , ( 10,0.19881 ) at ;    ( 1,0.6) ( 2,0.53466) ( 3,0.469166) ( 4,0.405514) ( 5,0.345406) ( 6,0.290131) ( 7,0.240515) ( 8,0.196945) ( 9,0.159436) ( 10,0.127717 ) ;    in ( 1,0.6 ) , ( 2,0.53466 ) , ( 3,0.469166 ) , ( 4,0.405514 ) , ( 5,0.345406 ) , ( 6,0.290131 ) , ( 7,0.240515 ) , ( 8,0.196945 ) , ( 9,0.159436 ) , ( 10,0.127717 ) at ;    ( 1,0.6) ( 2,0.527194) ( 3,0.454568) ( 4,0.384824) ( 5,0.320138) ( 6,0.261998) ( 7,0.211188) ( 8,0.167877) ( 9,0.131766) ( 10,0.102239 ) ;    in ( 1,0.6 ) , ( 2,0.527194 ) , ( 3,0.454568 ) , ( 4,0.384824 ) , ( 5,0.320138 ) , ( 6,0.261998 ) , ( 7,0.211188 ) , ( 8,0.167877 ) , ( 9,0.131766 ) , ( 10,0.102239 ) at ;    .48    ( , )  ( , ) node[right ] @xmath1 ; ( , )  ( , ) node[above ] @xmath316 ; in 1,2,3,4,5,6,7,8,9,10 at ( , ) [ below ] ; in 0,0.2,0.4,0.6,0.8 at ( , ) [ left ] ;    ( 1,0.8) ( 2,0.7912) ( 3,0.7821) ( 4,0.7729) ( 5,0.7634) ( 6,0.7537) ( 7,0.7438) ( 8,0.7336) ( 9,0.7233) ( 10,0.7129 ) ;    in ( 1,0.8 ) , ( 2,0.7912 ) , ( 3,0.7821 ) , ( 4,0.7729 ) , ( 5,0.7634 ) , ( 6,0.7537 ) , ( 7,0.7438 ) , ( 8,0.7336 ) , ( 9,0.7233 ) , ( 10,0.7129 ) at ;    ( 1,0.8) ( 2,0.7887) ( 3,0.777) ( 4,0.7649) ( 5,0.7523) ( 6,0.7394) ( 7,0.726) ( 8,0.7123) ( 9,0.6982) ( 10,0.6838 ) ;    in ( 1,0.8 ) , ( 2,0.7887 ) , ( 3,0.777 ) , ( 4,0.7649 ) , ( 5,0.7523 ) , ( 6,0.7394 ) , ( 7,0.726 ) , ( 8,0.7123 ) , ( 9,0.6982 ) , ( 10,0.6838 ) at ;    ( 1,0.8) ( 2,0.7856) ( 3,0.7705) ( 4,0.7547) ( 5,0.7383) ( 6,0.7213) ( 7,0.7036) ( 8,0.6854) ( 9,0.6667) ( 10,0.6476 ) ;    in ( 1,0.8 ) , ( 2,0.7856 ) , ( 3,0.7705 ) , ( 4,0.7547 ) , ( 5,0.7383 ) , ( 6,0.7213 ) , ( 7,0.7036 ) , ( 8,0.6854 ) , ( 9,0.6667 ) , ( 10,0.6476 ) at ;    ( 1,0.8) ( 2,0.7843) ( 3,0.7677) ( 4,0.7503) ( 5,0.7321) ( 6,0.7132) ( 7,0.6936) ( 8,0.6734) ( 9,0.6525) ( 10,0.6311 ) ;    in ( 1,0.8 ) , ( 2,0.7843 ) , ( 3,0.7677 ) , ( 4,0.7503 ) , ( 5,0.7321 ) , ( 6,0.7132 ) , ( 7,0.6936 ) , ( 8,0.6734 ) , ( 9,0.6525 ) , ( 10,0.6311 ) at ;    [ legend entries= @xmath298,@xmath299,@xmath300,@xmath301,legend columns=-1,legend style=/tikz / every even column/.append style = column sep=0.8 cm ]    [ [ summary - of - numerical - results ] ] summary of numerical results : + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    1 .",
    "the approximated optimal service - rate series is close to geometric with decay rate @xmath315 .",
    "2 .   in the special case of a poisson arrival process :",
    "@xmath305 and @xmath108 was slightly larger than @xmath183 .",
    "lower variance of the exogenous arrival stream leads to a higher service - rate for the first server , along with a faster decline to zero .",
    "the service capacity is allocated more `` uniformly '' ( with a lower decay rate ) as @xmath183 increases .",
    "the effective utilization series of sub - systems , @xmath316 , under the optimal service - rate series is decreasing . furthermore , this series has a geometric tail with a slower decay rate than the optimal service - rate series .",
    "the series of overflow lst @xmath98 stabilizes very fast , suggesting that our approximation scheme using its limit is accurate even for a small number of dp steps @xmath219 .",
    "this may provide some explanation as to why the optimal series seems geometric from the start . if the series @xmath98 is more or less constant from the start then the solution to the tap from proposition [ prop : tap ] is close to optimal",
    ". it would be interesting to find an analytical explanation for why the optimal service - rate series comes with a stable overflow lst series .",
    "this paper analyses stability and expected delay in an infinite - server system with finite service capacity .",
    "in particular , the expected service - time minimizing allocation of service - rates is examined .",
    "it is shown that the optimal service - rate series is geometrically decreasing at the tail .",
    "numerical analysis suggests that the optimal allocation is very close to geometric throughout the series , and not just at the tail .",
    "this property is related to the product form of the blocking probabilities from finite sub - systems .",
    "an interesting numerical observation is that in the poisson case we have that @xmath317 ( the limiting term in the blocking probability product ) and consequentially the optimal tail decay is simply @xmath3 .",
    "an open challenge is to find analytical justification for this phenomenon .      1 .",
    "multi - objective optimization : suppose that the system administrator can choose the number of servers as well as the capacity allocation .",
    "if @xmath1 servers are used then the system has a customer loss probability of @xmath45 .",
    "the administrator may seek an optimal allocation with a constraint on the loss probability , e.g. @xmath318 .",
    "the other way around is also an option : minimize @xmath45 subject to a constraint on the delay , @xmath319 .",
    "2 .   suppose that the system administrator wants to maximize the number of users that wait less than some @xmath320 time threshold .",
    "this could be an exogenous performance measure or the case if customers do not pay if their delay is too long .",
    "the objective is now @xmath321 3 .",
    "customers are heterogeneous with respect to the utility from the speed of service , and balk from the system if the fastest available server is slower than their value .",
    "assume that customers are distributed according to a continuous distribution with a convex cdf @xmath322 such that @xmath323 .",
    "if the system wants to minimize the blocking probability then the objective becomes @xmath324 in this case the overflow distribution also requires a modification to @xmath325 , in order to take into account the balking customers .",
    "4 .   in general",
    ", our analysis can be applied to any convex function of the service rate .",
    "it would be interesting to study the asymptotic optimal control problem of this system using heavy - traffic analysis , i.e.  scaling the parameters by an appropriate rate function @xmath326 , @xmath327 a questions that arises is whether there is an asymptotic analog to the optimal geometric series we have presented here , perhaps even in closed form .",
    "detailed heavy - traffic analysis for the homogeneous ranked m / m/@xmath0 system can be found in @xcite and @xcite , and approximation analysis of blocking probabilities in multi - server systems can be found in @xcite .",
    "approximating our model requires the analysis of systems with non - homogeneous servers ( see @xcite ) .",
    "stability analysis in the probabilistic sense of the underlying process @xmath328 is also of interest .",
    "specifically , establishing necessary and sufficient conditions for the process to be positive recurrent .",
    "this can perhaps be achieved by considering the embedded markov chain at arrival times . for the markovian m / m/@xmath0 ordered system , lower - bound and upper - bound systems with simpler dynamics",
    "can possibly be constructed and analysed using matrix - analytic methods ."
  ],
  "abstract_text": [
    "<S> we consider a service system with an infinite number of exponential servers sharing a finite service capacity . </S>",
    "<S> the servers are ordered from the fastest to the slowest , and arriving customers join the fastest idle server . </S>",
    "<S> a capacity allocation is an infinite decreasing series of service rates . </S>",
    "<S> we study the probabilistic properties of this system by considering overflows from sub - systems with a finite number of servers . </S>",
    "<S> several stability measures are suggested and analysed . </S>",
    "<S> the tail of the series of service rates that minimizes the average expected delay ( service time ) is shown to be approximately geometrically decreasing . </S>",
    "<S> we use this property in order to approximate the optimal allocation of service rates by constructing an appropriate dynamic program . </S>"
  ]
}
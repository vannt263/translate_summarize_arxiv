{
  "article_text": [
    "comparison between experimental observation and theoretical analysis is a crucial step in condensed matter physics researches .",
    "temperature dependence of the specific heat and the magnetic susceptibility , for example , has been studied to extract nature of low energy excitations and magnetic interactions among electrons , respectively , through comparison with the landau s fermi liquid theory @xcite and curie - weiss law @xcite .    for flexible and quantitative comparison with experimental data ,",
    "an exact diagonalization approach @xcite , which can simulate quantum lattice models without any approximations is one of the most reliable numerical tools .",
    "most numerical methods for general quantum lattice problems , which is not accompanied by the negative sign difficulty , are not exact and reliable error estimate for them is difficult . this drawback is serious especially when one wants to compare the results with experiments",
    "therefore , exact methods are valuable though they are usually available only for small size problems .",
    "they are important in two ways ; as a tool for obtaining reliable answers to the original problem ( when the original problem is a small size problem ) and as a generator of reference data with which one can compare the results of other numerical methods ( when the original problem is beyond the applicable range of the exact methods ) .    for the last few decades ,",
    "the numerical diagonalization package for quantum spin hamiltonians , titpack @xcite has been widely used in the condensed matter physics community .",
    "based on titpack , other numerical diagonalization packages such as kobepack @xcite and spinpack @xcite have also been developed .",
    "there is another program performing such a calculation in the alps project ( algorithms and libraries for physics simulations ) @xcite .",
    "however , the size of the target system is limited for titpack , kobepack , and alps because they do not support the distributed memory parallelization .",
    "although spinpack supports such parallelization and an efficient algorithm with the help of symmetries , this program package can not handle the general interactions such as the dzyaloshinskii - moriya and the kitaev interactions that recently receive extensive attention .",
    "in addition , advances in quantum statistical mechanics @xcite open a new avenue for exact methods to finite - temperature calculations without the ensemble average .",
    "this development enables us to calculate finite - temperature properties of quantum many - body systems with computational costs similar to calculations of ground state properties .",
    "now , it is possible to quantitatively compare theoretical predictions for temperature dependence of , for example , the specific heat and the magnetic susceptibility with experimental results @xcite .",
    "however , the above program packages have not support this calculation yet . to perform the large - scale calculations directly relevant to experiments by utilizing the parallel computing architectures with small bandwidth and distributed memory ,",
    "a user - friendly , multifunctional , and parallelized diagonalization package is highly desirable .",
    "@xmath0 [ _ aitch - phi _ ] , a flexible diagonalization package for solving a wide range of quantum lattice models , has been developed to overcome the problems in the previous program packages . in @xmath0",
    ", we implement the lanczos method for calculating the ground state and properties of a few excited states , thermal pure quantum ( tpq ) states @xcite for finite - temperature calculations , and full diagonalization method for checking results of lanczos and tpq methods at small clusters , with an easy - to - use and flexible user interface . by using @xmath0",
    ", one can analyze a wide range of quantum lattice models including conventional hubbard and heisenberg models , multi - band extensions of the hubbard model , exchange couplings that break su(2 ) symmetry of quantum spins such as the dzyaloshinskii - moriya and the kitaev interactions , and the kondo lattice models describing itinerant electrons coupled to quantum spins .",
    "it is easy to calculate a variety of physical quantities such as the internal energy , specific heat , magnetization , charge and spin structure factors , and arbitrary one - body and two - body static green s functions at zero temperature or finite temperatures .",
    "as we mention above , one of the aims of developing @xmath0 is to make a flexible diagonalization program package that enables us to directly compare the theoretical calculations and experimental data .",
    "in addition to the simple model hamiltonians introduced in textbooks of quantum statistical physics , more complicated hamiltonians inevitably appear to quantitatively describe electronic properties of real compounds . in the lanczos and the tpq simulation of the quantum lattice model in the condensed matter physics , the most time - consuming part is the multiplication of the hamiltonian to a wavefunction . excepting the case for the very small system , it is unrealistic to store all non - zero elements of the hamiltonian in memory",
    ". therefore we perform the multiplication by constructing the matrix elements of the hamiltonian on the fly . to carry out the lanczos and tpq calculations efficiently ,",
    "we implement two algorithms for massively parallel computation ; one is the conventional parallelization based on the butterfly - structured communication pattern @xcite ( the butterfly method ) and the other is newly developed method [ the continuous - memory - access ( cma ) method ] . because the numerical cost of the butterfly method is proportional to the number of terms in the second quantized hamiltonian , it requires very long time to simulate the complicated hamiltonian relevant to the real compounds .",
    "in contrast to the conventional algorithm , the newly developed method can realize the continuous memory access and numerical cost which does not depend on the number of terms during multiplication between the hamiltonians and a wavefunction . in this paper",
    ", we also explain these two algorithms and compare their computational speed .",
    "this paper is organized as follows : in sec .",
    "2 , we introduce the basic usage of @xmath0 . how to download and build @xmath0 are explained in sec .",
    "2.1 , and how to use @xmath0 is explained in sec .",
    "we also explain what types of models can be treated by using @xmath0 in sec .",
    "2.3 . in sec . 3",
    ", we detail algorithms implemented in @xmath0 .",
    "the representation of the hilbert space adopted in @xmath0 is explained in sec .",
    "3.1 . how to implement multiplication of the hamiltonian to a wavefunction",
    "is explained in sec .",
    "implementation of full diagonalization method , the lanczos method , and the tpq method is explained in sec .",
    "3.3 , sec . 3.4 .",
    "3.5 , respectively . in sec . 4",
    ", we explain the parallelization of multiplication of the hamiltonian to a wavefunction . how to distribute the wavefunction for each process is explained in sec .",
    "4.1 . in sec .",
    "4.2 , we explain the conventional butterfly algorithm for parallelizing the hamiltonian - wavefunction multiplication .",
    "we also explain another parallelization method ( the cma method ) , which is suitable for treating complicated quantum lattices models . in sec . 5 , we show the benchmark results of @xmath0 . in sec .",
    "5.1 , we examine the validity of the tpq method by using @xmath0 . in sec .",
    "5.2 , we show the benchmark results of parallelization efficiency for 18-site hubbard model and 36-site heisenberg model on supercomputers .",
    "we also show the benchmark results of the cma method in sec .",
    "finally , sec . 6",
    "is devoted to the summary .",
    "the gzipped tar file , which contains the source codes , samples , and manuals , can be downloaded from the @xmath0 download site @xcite . for building @xmath0 , a c compiler and the blas",
    "/ lapack library@xcite are prerequisite . to enable the parallel computations , the message passing interface ( mpi ) library @xcite is also required .    for building @xmath0 ,",
    "the cmake utility @xcite can be used as follows :    .... $ cd $ home / build / hphi $ cmake $ pathtohphi $ make ....    here , one builds @xmath0 in ` $ home / build / hphi ` and it is assumed that the environment variable , ` $ pathtohphi ` , is set to the path to the source tree path of @xmath0 ( the top directory of @xmath0 ) . if the cmake utility can not find the mpi library on the system , the @xmath0 executable is automatically compiled without the mpi library . in this example , cmake will choose a c compiler automatically .",
    "instead , one can specify the compiler explicitly as follows :    .... $ cmake -dconfig=$config $ pathtohphi   $ make ....    where ` $ config ` is chosen from the following configurations :    * ` gcc ` : gcc * ` intel ` : intel compiler + mkl library * ` sekirei ` : intel compiler + mkl library on issp system - b ( sekirei ) * ` fujitsu ` : fujitsu compiler + ssl2 library on issp system - c ( maki )    for a system which does not have the cmake utility , we provide another way to generate makefile s using ` hphiconfig.sh ` shell script .",
    "one can run ` hphiconfig.sh ` in the @xmath0 top directory as follows :    .... $ bash hphiconfig.sh gcc $ make hphi ....    once the compilation finishes successfully , one can find the executable , ` hphi ` , in ` src/ ` subdirectory .      here , we briefly explain how to use @xmath0 . @xmath0 has two modes ; standard mode and expert mode .",
    "the difference between them is the format of input files . for expert mode",
    ", one has to prepare the files in the four categories below .",
    "+ ( 1 ) * parameter files for specifying the model : * in these files , one specifies the transfer integrals , interactions , and types of electronic state ( local spins or itinerant electrons ) .",
    "+ ( 2 ) * parameter files for specifying the calculation condition : * in these files , one specifies the calculation methods ( full diagonalization , lanczos method , and tpq method ) , the target of models ( spin , kondo , and hubbard models ) , number of sites and electrons , and the convergence criteria .",
    "+ ( 3 ) * parameter files for correlation functions : * by using these input files , one specifies one - body and two - body equal - time green s functions to be calculated .",
    "+ ( 4 ) * file for list of above input files : * in this file , one should list the names of all the files that are necessary in the calculations .    for typical models in the condensed matter physics , such as the heisenberg model and the hubbard model , one can use @xmath0 in standard mode .",
    "in standard mode , one can specify all the input parameters by a single file with a few lines , from which the files described above are generated automatically before starting the calculation .",
    "it is thus much more easier to simulate and analyze these models in standard mode as long as the model and the lattice is supported in standard mode .",
    "the models supported in standard mode will be explained in the following sections .",
    "a typical flow of calculations in @xmath0 is shown as follows :    1 .",
    "make input files + an example of input file is shown for standard mode below : + .... l        = 4 w        = 4   model    = \" spin \" method   = \" lanczos \" lattice = \" square lattice \" j        = 1.0 2sz      = 0 .... + here ` l ` and ` w ` are a linear extents of square lattice , in @xmath2 and @xmath3 directions , respectively . `",
    "spin ` means the heisenberg model , and ` j ` is the exchange coupling . by using this input file",
    ", one can obtain the ground state of the heisenberg model for @xmath4 sites by performing the lanczos method .",
    "details of keywords in the input files can be found in the manuals @xcite . in expert mode , it is necessary to prepare all the files that specify the method , model parameters , and other input parameters .",
    "all the names of input files are listed in ` namelist.def ` .",
    "details of the input files are also found in the manuals @xcite .",
    "2 .   run + after preparing the input files , run a executable ` hphi ` in terminal by setting option  ` -s ` \" ( or `` ` --standard ` '' ) for standard mode and  ` -e ` \" for expert mode as follows : * standard mode + ` $ ./hphi -s stdface.def ` * expert mode + ` $ ./hphi -e namelist.def ` 3 .",
    "log and results + log files and calculation results are output in the ` output ` directory which is automatically generated in the working directory .",
    "for the lanczos and the full diagonalization methods , @xmath0 calculates and outputs the energy , the one - body green s functions , and the two - body green s functions from obtained eigenvectors . for the tpq method , the inverse temperature ,",
    "the energy and its variance are also obtained at each tpq step .",
    "the specified one - body and two - body green s functions are output at specified interval .      here , we explain what types of models can be treated in @xmath0 . in expert mode , the target models can be generally defined by the following hamiltonian , @xmath5 where @xmath6 is a generalized transfer integral between site @xmath7 with spin @xmath8 and site @xmath9 with spin @xmath10 and @xmath11 is the generalized two - body interaction which annihilates a spin @xmath10 particle at site @xmath9 and a spin @xmath12 particle at site @xmath13 , and creates a spin @xmath8 particle at site @xmath7 and a spin @xmath14 particle at site @xmath15 . here , @xmath16",
    "( @xmath17 ) is the creation ( annihilation ) operator of an electron on site @xmath7 with spin @xmath18 or @xmath19 . for the hubbard and kondo models ,",
    "the 1/2-spin fermions are only allowed .",
    "note here that any system of localized spins can be regarded as a special case of the above hamiltonian .",
    "therefore , one can use @xmath0 for solving such quantum spin models by straight - forward interpretation of the spin interaction in terms of @xmath20 and @xmath21 in the above expressions .",
    "@xmath0 also has a capability of handling spins higher than @xmath22 .    in standard mode ,",
    "@xmath0 can treat the following models .",
    "( the titles of the following items are the corresponding keys for the ` model ` parameter in a standard input file . here , the keys , ` \" fermion hubbardgc \" ` , ` \" spingc \" ` and ` \" kondogc \" ` are the grand - canonical version of ` \" fermion hubbard \" ` , ` \" spin \" ` and ` \" kondo \" ` , respectively . )",
    "\\i ) ` \" fermion hubbard\"/ \" fermion hubbardgc \" ` + the hamiltonian is given by @xmath23 where @xmath24 is the chemical potential , @xmath25 is the transfer integral between site @xmath7 and site @xmath9 , @xmath26 is the on - site coulomb interaction , @xmath27 is the long - range coulomb interaction between @xmath7 and @xmath9 sites .",
    "@xmath28 is the number operator at site @xmath7 with spin @xmath29 and @xmath30 .",
    "+   + ii ) ` \" spin\"/ \" spingc \" ` + the hamiltonian is given by @xmath31 where @xmath32 is the longitudinal magnetic field , @xmath33 is the transverse magnetic field , and @xmath34 is the single - site anisotropy parameter .",
    "@xmath35 is the coupling constant between the @xmath36 component of spins at site @xmath7 and site @xmath9 , and @xmath37 is the coupling constant between the @xmath36 component of the spin at site @xmath7 and the @xmath38 component of the spin at site @xmath9 , where @xmath39 .",
    "@xmath40 is the @xmath36-axis spin operator at site @xmath7 .",
    "+   + iii ) ` \" kondo\"/ \" kondogc \" ` + the hamiltonian is given by @xmath41 where @xmath24 , @xmath25 , @xmath26 , and @xmath27 are the same as those in the `` ` fermion hubbard ` '' .",
    "@xmath42 is the coupling constant between spins of an itinerant electron and a localized one .      here",
    ", we explain available lattice structures in @xmath0 . in expert mode ,",
    "arbitrary lattice structures can be treated by specifying connections of sites .",
    "in contrast to expert mode , one can easily specify the conventional lattice structures by using standard mode .",
    "standard mode supports the chain lattice , the ladder lattice , the square lattice (",
    "examples are shown in insets of figs .",
    "[ fig_fdvstpq ] and [ fig_hubbard_speed ] ) , the triangular lattice ( fig .",
    "[ fig_triangular ] ) , the honeycomb lattice ( fig .",
    "[ fig_latticegp ] ) , and the kagome lattice ( an example of kagome lattice is shown inset of fig .",
    "[ fig_kagome ] ) . in standard mode",
    ", one can construct the above two - dimensional lattices by specifying four integer parameters , ` a0w ` , ` a0l ` , ` a1w ` , and ` a1l ` and two unit lattice vectors @xmath43 and @xmath44 . by using these parameters and unit vectors ,",
    "a superlattice spanned by @xmath45 and @xmath46 is specified .",
    "we show an example of triangular lattice in fig .",
    "[ fig_triangular ] .",
    "( purple dashed arrow ) and @xmath47 ( green dashed arrow ) becomes the supercell to be calculated ( 10 sites ) .",
    "red solid arrows ( @xmath43 and @xmath44 ) are unit lattice vectors . , width=151 ]      there are some sample input files and reference results in ` samples/ ` directory .",
    "for example , ` samples / standard / hubbard / square/ ` is the directory containing files for the computation of the hubbard model on the @xmath48-site square lattice",
    ". we can perform the calculation of the ground state by running @xmath0 as standard mode as follows : ,    .... $ ./hphi -s stdface.def ....    while running , @xmath0 dumps information to the standard output .",
    "we can check the geometry of the calculated system by using ` lattice.gp ` which is generated by @xmath0 ; it is read by ` gnuplot ` @xcite as follows :    .... $ gnuplot lattice.gp ....        then , ` gnuplot ` displays the shape of the system and indices of sites ( see fig .",
    "[ fig_latticegp ] as an example .",
    "this figure is obtained by using ` samples / standard / spin / kitaev / stdface.def ` ) .",
    "the calculated results are written in ` output/ ` . in ` output / zvo_energy.dat ` the total energy , the number of doublons ( sites occupied by two electrons with opposite spins ) , and the magnetization along the @xmath49 axis are output .",
    "we can compare it with the reference data in ` output_lanczos / zvo_energy.dat ` below ` samples / standard / spin / kitaev/ ` .",
    "correlation functions are obtained in ` output / zvo_cisajs.dat ` and ` output / zvo_cisajscktalt.dat ` . when executed in standard mode",
    ", @xmath0 creates various input files , such as calcmod.def and modpara.def , that can be used in expert mode .",
    "editing those files may be the easiest way of using @xmath0 for models not supported in standard mode .",
    "to do so , after making all the necessary modifications , run @xmath0 by the following command :    .... $ ./hphi -e namelist.def ....    by using expert mode , one can perform more flexible calculations .",
    "in @xmath0 , we implement the following three methods ; full diagonalization , exact diagonalization by the lanczos method for ground state calculation , the tpq method for calculation of physical properties at finite temperatures . in this section ,",
    "we first explain the internal representation of the hilbert space in @xmath0 and how to implement the multiplication of the hamiltonian to a wavefunction in @xmath0 .",
    "next , we explain above three methods .      to specify a state of a site in @xmath0",
    ", we use an @xmath50-ary , which takes one of @xmath50 different values .",
    "for example , in the case of an itinerant electronic system , the local site may take four states , @xmath51 , and @xmath52 , and therefore it is natural to represent it by a 4-ary . in this representation ,",
    "a basis @xmath53 is labeled by @xmath54_{4}{=[0123]_4}= 0\\cdot4 ^ 3 + 1\\cdot4 ^ 2 + 2\\cdot4 ^ 1 + 3\\cdot4 ^ 0 $ ] as @xmath55_4 \\rangle$ ] . here ,",
    "@xmath56_{n}=[a_{m-1}\\cdots a_1 a_0]_n$ ] @xmath57 represents the @xmath58-digit @xmath50-ary number , i.e. , @xmath59_{n}=[a_{m-1}\\cdots a_1 a_0]_n=    \\sum_{j=0}^{m-1 } a_{j}\\cdot n^{j}.\\end{aligned}\\ ] ] to use the standard bitwise operations ( _ e.g. _ logical disjunction and exclusive or ) , we decompose the 4-ary representations as the following example : a basis @xmath53 of the 4-site system is indexed by a quartet of @xmath60-digit binary numbers as @xmath61_2,[01]_2,[10]_2,[11]_2\\right]_{4 } } \\notag \\\\ & = { [ \\overbrace{0,0}^{0},\\overbrace{0,1}^{\\uparrow},\\overbrace{1,0}^{\\downarrow},\\overbrace{1,1}^{\\uparrow\\downarrow}]_{2 } } \\notag \\\\ & = 0\\cdot2^{7}+0\\cdot2 ^ 6 + 0\\cdot2 ^ 5 + 1\\cdot2 ^ 4 \\notag \\\\ & + 1\\cdot2 ^ 3 + 0\\cdot2 ^ 2 + 1\\cdot2 ^ 1 + 1\\cdot2 ^ 0 .    \\notag\\end{aligned}\\ ] ] for the kondo system , the local sites are classified into itinerant electron part and localized spin part .",
    "however , for simplicity , we use 4-ary representations likewise for the itinerant electronic system , i.e. , we represent a localized spin by @xmath62_2]_{4}\\rangle$ ] or @xmath63_2]_{4}\\rangle$ ] .    for localized spin-@xmath64 systems ( @xmath65 ) , to represent hilbert spaces we use @xmath66-ary representation .",
    "for example , in a spin-1 system the wavefunction is represented as @xmath67_{3}\\rangle$ ] . to treat the spin-@xmath64 system , we used bogoliubov representation shown in [ bogo ] . in @xmath0",
    ", we can treat the more complicated spin systems such as the spin angular momentums have different values at each site ( mixed spin systems ) .    in general , at @xmath7-th site with the spin angular momentum @xmath68 , the hilbert space at @xmath7-th site",
    "is represented by @xmath69-ary number and the hilbert space of the system is represented by @xmath70 where @xmath71 and @xmath72 is the whole number of sites . by using the multiplications of the @xmath50-ary number , we represent the mixed spin systems as follows : @xmath73    we note that , when the canonical system is selected by the input file , @xmath0 automatically constructs the restricted hilbert space @xmath74 that has the specified particle number or total @xmath75 . to perform the efficient reverse lookup in the restricted hilbert space",
    ", we use the two - dimensional search method @xcite .",
    "we also use the algorithm quoted in @xcite as `` finding the next higher number after a given number that has the same number of 1-bits '' to perform an efficient two - dimensional search method .",
    "we generate the matrix of @xmath76 by using above - mentioned basis set @xmath77 ( @xmath78 , @xmath79 is the dimension of the hilbert space ) : @xmath80 . by diagonalizing this matrix ,",
    "we can obtain all the eigenvalues @xmath81 and normalized eigenvectors @xmath82 ( @xmath83 ) . in the diagonalization ,",
    "we use lapack routine such as ` dsyev ` or ` zheev ` .",
    "we also calculate and output the expectation values @xmath84 .",
    "these values are used for the finite - temperature calculations .    from @xmath84",
    ", we calculate finite - temperature properties by using the ensemble average @xmath85 in the actual calculation , the ensemble averages are performed as a postprocess .      here , we explain the main operation in @xmath0 , multiplying the hamiltonian to the wavefunctions . because the dimension of the wavefunction becomes exponentially large by increasing the number of sites",
    ", it is impossible to store the whole matrix in the actual calculations .",
    "thus , in the lanczos ( sec .",
    "3.4 ) and the tpq ( sec . 3.5 ) methods , we only store the wavefunctions and calculate the matrix elements at each interaction on the fly .",
    "we explain the procedure of multiplying the hamiltonian to the wavefunctions by taking the 4-site heisenberg model with @xmath22 on the chain with periodic boundary condition as an example .",
    "the hamiltonian is block - diagonalized with blocks being characterized by the total magnetization , @xmath86 .",
    "for the block satisfying @xmath87 , the wavefunction can be represented by using the simultaneous eigenvectors of all @xmath88 s as @xmath89 here , the quartet of up or down arrows , which we call a `` configuration '' in what follows , specifies a basis vector . in the actual calculations , we store the list of the configurations .",
    "the hamiltonian is defined as @xmath90 where @xmath91 and @xmath92 are defined as follows , @xmath93 to reduce the numerical cost , we store diagonal elements such as @xmath91 for each configuration . in contrast to the diagonal terms",
    ", @xmath94 changes the configuration , e.g. , @xmath95 in @xmath0 , if the exchange operation is possible , the operation is performed by bit operations as follows : @xmath96_{2 } \\text{\\^~ } [ 1010]_{2 } = [ 1001]_{2},\\end{aligned}\\ ] ] where ^   represents the  bitwise exclusive or \" . before performing the exchange operator",
    ", we count bits in the configuration and judge whether the exchange operation is possible or not . if the exchange operation is not possible , we do not perform the operation and regard the contribution from the configuration as zero , i.e. , @xmath97 we note that the sign arises from the exchange relation between fermion operators in the itinerant electrons systems such as hubbard models , while the sign does not appear in the localized spin systems . to obtain the sign ,",
    "it is necessary to count the parity of the given bit sequences .",
    "we use the algorithm for parity counting that is explained in the literature @xcite .",
    "for the sake of completeness , we briefly review the principle of the lanczos method . for more details see , for example , the titpack manual [ 2 ] and the textbook by m. sugihara and k. murota @xcite .",
    "the lanczos method is based on the power method . in the power method , by successive operations of the hamiltonian @xmath98 to the arbitrary vector @xmath99 , we generate bases @xmath100 .",
    "the obtained linear space @xmath101 is called the krylov subspace .",
    "the initial vector is represented by the superposition of the eigenvectors @xmath102 ( corresponding eigenvalues are @xmath81 ) of @xmath98 as @xmath103 we note that all the eigenvalues are real number because hamiltonian is a hermitian operator . by operating @xmath104 to the initial vector , we obtain the relation as @xmath105,\\end{aligned}\\ ] ] where we assume that @xmath106 has the maximum absolute value of the eigenvalues .",
    "this relation shows that the eigenvector of @xmath106 becomes dominant for sufficiently large @xmath50 .",
    "we note that the krylov subspace does not change under the constant shift of the hamiltonian @xcite , i.e. , @xmath107 where @xmath21 is the identity matrix and @xmath108 is a constant . by taking constant @xmath108 as the large positive value ,",
    "the leading part of @xmath109 becomes the maximum eigenvectors and vice versa .",
    "thus , by constructing the krylov subspace , we can obtain eigenvalues around both the maximum and the minimum eigenvalues .    in the lanczos method",
    ", we successively generate the normalized orthogonal basis @xmath110 from the krylov subspace @xmath111 .",
    "we define the initial vector and associated components as @xmath112 , @xmath113 . from this initial condition ,",
    "we can obtain the normalized orthogonal basis as follows : @xmath114 from these definitions , it is obvious that @xmath115 and @xmath116 are real number .    in the subspace spanned by these normalized orthogonal basis ,",
    "the hamiltonian is transformed as @xmath117 here , @xmath118 is the matrix whose column vectors are @xmath119 .",
    "we note that @xmath120 ( @xmath121 is an @xmath122 identity matrix ) .",
    "@xmath123 is a tridiagonal matrix and its diagonal elements are @xmath124 and subdiagonal elements are @xmath125 .",
    "it is known that the eigenvalues of @xmath98 are well approximated by the eigenvalues of @xmath123 for sufficiently large @xmath50 .",
    "the original eigenvectors of @xmath98 is obtained by @xmath126 , where @xmath127 are the eigenvectors of @xmath123 . from @xmath118",
    ", we can obtain the eigenvectors of @xmath98 . however , in the actual calculations , it is difficult to keep @xmath118 because its dimension is too large to store [ dimension of @xmath118 = ( dimension of the total hilbert space ) @xmath128 ( number of lanczos iterations ) ] .",
    "thus , to obtain the eigenvectors , in the first lanczos calculation , we keep @xmath127 because its dimension is small ( upper bound of the dimensions of @xmath127 is the number of lanczos iterations ) .",
    "then , we again perform the same lanczos calculations after we obtain the eigenvalues from the lanczos methods . from this procedure",
    ", we obtain the eigenvectors from @xmath118 .    in the lanczos method , by successive operations of the hamiltonian on the initial vector , we obtain accurate eigenvalues around the maximum and minimum eigenvalues and associated eigenvectors by using only two vectors whose dimensions are the dimension of the total hilbert space . in @xmath0 , to reduce the numerical cost , we store two additional vectors ; a vector for accumulating the diagonal elements of the hamiltonian , and another vector for the list of the restricted hilbert space explained in sec . [",
    "sec : multiply ] .",
    "the dimension of these vectors is that of the hilbert space .",
    "as detailed below , to obtain the eigenvector by the lanczos method , one additional vector is necessary . within some number of iterations ,",
    "we obtain accurate eigenvalues near the maximum and minimum eigenvalues .",
    "the necessary number of iterations is small enough compared to the dimensions of the total hilbert space .",
    "we note that it is shown that the errors of the maximum and minimum eigenvalues become exponentially small as a function of lanczos iterations ( for details , see ref .",
    "details of generating the initial vectors and convergence conditions are shown in [ ape : inilz ] and [ ape : convergencelz ] , respectively .      in some cases ,",
    "the accuracy of obtained eigenvectors by the lanczos method is not enough for calculating the correlation functions . to improve the accuracy of the eigenvectors",
    ", we implement the inverse iteration method in @xmath0 , which is also implemented in titpack @xcite .    by using the approximate value of the eigenvalues @xmath129 , by successively operating @xmath130 to the initial vector @xmath131",
    ", we can obtain the accurate eigenvector for @xmath129 . the linear simultaneous equation for such procedure",
    "is given by @xmath132 by solving this equation by using the conjugate gradient ( cg ) method , we can obtain the eigenvector .",
    "we note that we take @xmath131 as the eigenvector obtained by the lanczos method and add small positive number to @xmath129 for stabilizing the cg method .",
    "although we can obtain more accurate eigenvector by using this method , additional four vectors are necessary to perform the cg method .",
    "the method of the tpq states is based on the fact @xcite that it is possible to calculate the finite - temperature properties from a few wavefunctions ( in the thermodynamic limit , only one wavefunction is necessary ) without the ensemble average . in what follows",
    "we describe the prescription proposed in @xcite , which we adopt in @xmath0 .",
    "such wavefunctions that replace the ensemble average are called tpq states . because a tpq state can be generated by operating the hamiltonian to the random initial wavefunction",
    ", we directly use the routine of the lanczos method to the tpq calculations . here , we explain how to construct the tpq state , which offers a simple way for finite - temperature calculations .",
    "let @xmath133 be a random initial vector . how to generate @xmath133",
    "is described in [ ape : initpq ] . by operating @xmath134 ( @xmath13 is a constant",
    ", @xmath135 represents the number of sites ) to @xmath133 , we obtain the @xmath15-th tpq states as @xmath136 , we estimate the corresponding inverse temperature @xmath116 as @xmath137 where @xmath138 is the internal energy .",
    "arbitrary local physical properties at @xmath116 are also estimated as @xmath139    in a finite - size system , a finite statistical fluctuation is caused by the choice of the initial random vector . to estimate the average value and the error of the physical properties , we perform some independent calculations by changing @xmath133 .",
    "usually , we regard the standard deviations of the physical properties as the error bars .",
    "in the calculation of the exact diagonalization based on the lanczos method or the finite - temperature calculations based on the tpq state , we have to store the many - body wavefunction on the random access memory ( ram ) .",
    "this wavefunction becomes exponentially large with increasing the number of sites .",
    "for example , when we compute the 40-site @xmath140 spin system in the @xmath75 unconserved condition , its dimension is @xmath141 and its size in ram becomes about 17.6 tb ( double precision complex number ) .",
    "such a large wavefunction can be treated by distributing it to many processes by utilizing distributed memory parallelization . in @xmath0 ,",
    "the ranks of the processes are labeled by using the leftmost bits in the bit representation of the wavefunction basis . when the leftmost bits corresponding to a @xmath142-site subsystem are chosen to label the ranks of the processes , the number of processes have to be @xmath143 ( for spin systems ) or @xmath144 ( for itinerant electron systems ) .",
    "then , each process keeps partial wavefunction of the complementary @xmath145-site subsystem .",
    "distribution of wavefunctions of an @xmath146 spin-1/2 system is illustrated in fig .",
    "[ fig_parallel ] .",
    "we note that the configuration of the @xmath147 sites is fixed in the same process .",
    "-site @xmath140 spin system in the @xmath75 unconserved condition .",
    "each process has the wavefunction having @xmath148 component ; we can obtain the wavefunction of the entire system by connecting local wavefunction in all processes .",
    ", width=340 ]    for example , we show the distribution of the wavefunction of the @xmath149-site @xmath140 spin system in the @xmath75 unconserved condition in fig .",
    "[ fig_parallel ] ( the number of processes is @xmath150 ) .",
    "each process has the wavefunction having @xmath148 components and we can obtain the wavefunction of the entire system by connecting local wavefunctions of all processes .",
    "the most time - consuming procedure in a calculation of the lanczos method or the tpq state is the multiplication of the hamiltonian with a vector ( @xmath151 ) , where @xmath152 and @xmath153 are wavefunctions distributed to all the processes .",
    "we parallelize this procedure with the aid of message passing interface ( mpi ) @xcite . here",
    ", we explain the parallelization procedure by taking a spin exchange term as an example .",
    "because the spin exchange occurs between two sites , we use one of the following three procedures according to the type of the two sites ( see fig . [ fig_commun ] ) .",
    "when the numbers specifying the both sites are smaller than @xmath154 , we can perform this exchange independently in each process ; there is no inter - process communication [ fig . [ fig_commun](a ) ] .",
    "if one of two sites has an index equal to or larger than @xmath154 , first the local wavefunction is communicated between two processes connected with the exchange operator and stored in a buffer .",
    "then we compute the remaining exchange operator [ fig . [",
    "fig_commun](b ) ] .",
    "we employ this procedure also when both sites are equal to or larger than @xmath154 [ fig . [ fig_commun](c ) ] . in this case",
    ", some processes do not participate the calculation ; it causes a load imbalance .",
    "however , it is not so serious problem ; the computational time of this case is shorter than those time of the previous two cases because the arrays are accessed sequentially in this case .",
    "numerical costs become smaller if all operations can be done similar to fig .",
    "[ fig_commun](a ) in which the memory access is limited within each process .",
    "in addition , if we can apply simultaneously the all terms in the second quantized hamiltonian acting to the part of wavefunctions continuously stored in the cpu - cache memory , the numerical cost becomes small and independent from the number of the terms .",
    "indeed , we can partially convert the conventional algorithm into an efficient algorithm by employing a permutation of the bits . by the permutation",
    ", we can also achieve continuous memory access , which is usually faster than random access happening inevitably in the conventional algorithm ( sec .",
    "[ parahvprod ] ) . in this section ,",
    "we explain the newly developed algorithm to realize the continuous memory access and to enhance the computing efficiency .",
    "any partial hamiltonians acting on the rightmost @xmath155 bits are represented by a @xmath156 by @xmath156 matrix that acts on @xmath156 successive components , namely , @xmath157 th to @xmath158-th components , of the wavefunction .",
    "then , if the @xmath159 ( @xmath160 ) rightmost bits are permuted in the bit representation of the basis as , @xmath161_2\\rangle    \\nonumber\\\\    & \\rightarrow &    |[\\sigma_{w-1}\\cdots\\sigma_{1}\\sigma_{0}\\sigma_{n_{\\rm s}-1}\\cdots\\sigma_{w+1}\\sigma_{w}]_2\\rangle,\\end{aligned}\\ ] ] where @xmath162 ( @xmath163 ) , the partial hamiltonians acting on the @xmath159 th bit , @xmath164 th bit , and so on , are again represented by a matrix that acts on the successive components of the wavefunction .",
    "if we find an integer @xmath159 that satisfies @xmath165 and decompose the total hamiltonian into the partial hamiltonians that act on sets of @xmath155 successive bits that overlap each other , the multiplication of the hamiltonian is implemented with continuous memory access by repeating the @xmath159-bits permutation .",
    "when the wavefunctions are distributed in many processes , the @xmath159-bits permutation is achieved by the following steps .",
    "first , we permute the components in the wavefunction within the rank @xmath166 process , @xmath167 ( @xmath168 ) , with a buffer @xmath169 as @xmath170_2}^ { ( [ { \\sigma}_{n_{\\rm s}-1 } \\cdots { \\sigma}_{n_{\\rm s}-n_{\\rm p } } ] _ 2 ) } \\\\ & = v _ { [ { \\sigma}_{n_{\\rm s}-n_{\\rm p}-1 } \\cdots { \\sigma}_{w } { \\sigma}_{w-1 } \\cdots { \\sigma}_{w - n_{\\rm p } } { \\sigma}_{w - n_{\\rm p}-1 } \\cdots { \\sigma}_{0 } ] _ 2}^ { ( [ { \\sigma}_{n_{\\rm s}-1 } \\cdots { \\sigma}_{n_{\\rm s}-n_{\\rm p } } ] _",
    "2)}. \\end{array}\\end{aligned}\\ ] ] then , we call an mpi all - to - all routine to transfer the components in the buffer @xmath171 to another buffer @xmath172 in other processes as @xmath173_2}^ { ( [ { \\sigma}_{w-1 } \\cdots { \\sigma}_{w - n_{\\rm p}}]_2 ) } \\\\ & = u _ { [ { \\sigma}_{w-1 } \\cdots { \\sigma}_{w - n_{\\rm p } } { \\sigma}_{w - n_{\\rm p}-1 } \\cdots { \\sigma}_{0 } { \\sigma}_{n_{\\rm s}-n_{\\rm p}-1 } \\cdots { \\sigma}_{w}]_2}^ { ( [ { \\sigma}_{n_{\\rm s}-1 } \\cdots { \\sigma}_{n_{\\rm s}-n_{\\rm p } } ] _",
    "2)}. \\end{array}\\end{aligned}\\ ] ] finally , the following permutation of the components of the wavefunctions completes the @xmath159-bit permutation of the distributed wavefunction : @xmath174_2}^ { ( [ { \\sigma}_{w-1 } \\cdots { \\sigma}_{w - n_{\\rm p}}]_2 ) } \\\\ & = { u ' } _ { [ { \\sigma}_{n_{\\rm s}-1 } \\cdots { \\sigma}_{n_{\\rm s}-n_{\\rm p } } { \\sigma}_{w - n_{\\rm p}-1 } \\cdots { \\sigma}_{0 } { \\sigma}_{n_{\\rm s}-n_{\\rm p}-1 } \\cdots { \\sigma}_{w}]_2}^ { ( [ { \\sigma}_{w-1 } \\cdots { \\sigma}_{w - n_{\\rm p}}]_2)}. \\end{array}\\end{aligned}\\ ] ] details of the continuous access will be reported elsewhere @xcite .",
    "the cma method is implemented in standard mode for @xmath22 spins without total @xmath75 conservation in the present version of @xmath0 . ) , the algorithm has not been implemented for other systems yet . ]",
    "in this section , we show benchmark results of @xmath0 .",
    "first , we examine the accuracy of the finite - temperature calculations based on the tpq algorithm @xcite by comparing the results with the exact ensemble averages calculated by the full diagonalization . for small system sizes",
    ", we can easily perform the same calculation on our own pcs .",
    "second , we show the parallelization efficiency of @xmath0 for large system sizes on supercomputers . we have carried out tpq simulations of two typical models , namely , an 18-site hubbard model on a square lattice and a 36-site heisenberg model on a kagome lattice , with changing numbers of threads and cpu cores , where the number of cpu cores equals the number of threads times the number of mpi processes .",
    "we also show performance of the cma method .      to examine the validity of the tpq calculation",
    ", we compute the temperature dependence of the doublon density of the hubbard model ( @xmath175 ) for an 8-site cluster with the periodic boundary condition .",
    "the shape of the cluster is illustrated in the inset of fig .",
    "[ fig_fdvstpq ] .",
    "the hubbard model is defined by setting @xmath176 , @xmath177 , @xmath178 for the nearest - neighbor pairs of sites , @xmath179 , and @xmath180 for further neighbor pairs of sites .",
    "an example of the input file for the 8-site hubbard model used in this calculation is shown as follows :    .... a0w      = 2 a0l      = 2 a1w      = -2 a1l      = 2 model    = \" fermion hubbard \" method   = \" tpq \" lattice = \" square lattice \" t        = 1.0 u        = 8.0 ....        in fig .",
    "[ fig_fdvstpq ] , we show the temperature dependence of the doublon density , @xmath181 , calculated by the tpq state and by the canonical ensemble .",
    "we confirm that the tpq calculations well reproduce the results of the canonical ensemble average .",
    "in addition to the finite - temperature calculations , we perform the ground state calculations by the lanczos method and the calculated doublon density at zero temperature is plotted by the dashed line .",
    "we also confirm that doublon density at low temperature well converges to the value of the ground state .",
    "all the results show the validity of the tpq method .      here",
    ", we carry out tpq simulations for large system sizes with changing numbers of threads and processes to examine parallelization efficiency of @xmath0 .",
    "we choose two typical models ; a half - filled 18-site hubbard model on a square lattice and a 36-site heisenberg model on a kagome lattice .",
    "the speedup of the simulation for the 18-site hubbard model with up to 3,072 cores is measured on sgi ice xa ( sekirei ) at issp ( table [ tbl_spec ] ) .",
    "the speedup of the large - scale simulation for the 36-site heisenberg model with up to 32,768 cores is examined by using the k computer at riken aics ( table [ tbl_spec ] ) .    [ cols=\"^,^,^\",options=\"header \" , ]      we perform the tpq simulations for the half - filled 18-site hubbard model on the square lattice illustrated in the inset of fig .",
    "[ fig_hubbard_speed ] . here",
    ", we employ the subspace of the hilbert space that satisfies @xmath182 .",
    "then , the dimension of the subspace is @xmath183 , where @xmath184 represents the binomial coefficient .",
    "the input file used in this calculations is shown below :    .... a0w      = 3 a0l      = 3 a1w      = -3 a1l      = 3 model    = \" fermion hubbard \" method   = \" tpq \" lattice = \" square lattice \" t        = 1.0 u        = 8.0 nelec    = 18 2sz      = 0 ....    in fig .",
    "[ fig_hubbard_speed ] , we can see significant acceleration caused by the increase of cpu cores .",
    "this acceleration is almost linear up to 192 cores , and is weakened as we further increase the number of cores .",
    "this weakening of the acceleration comes from the load imbalance in the @xmath1 conserved simulation .",
    "for example , when we use 3 openmp threads and 1024 mpi processes , the number of sites associated with the ranks of processes ( @xmath147 in sec .",
    "[ sec_dist_wave ] ) becomes 5 , and the number of sites in the subsystem in each process ( @xmath154 in sec .",
    "[ sec_dist_wave ] ) becomes 13 .",
    "each process has different numbers of up- and down- spin electrons . in the process which has the largest hilbert space , there are six up - spin electrons and six down - spin electrons , and",
    "the hilbert space becomes @xmath185 .",
    "on the other hand , the process which has the smallest hilbert space has nine up - spin electrons , nine down - spin electrons and the @xmath186 dimensional hilbert space .",
    "this large difference of the hilbert - space dimension between each process causes a load imbalance .",
    "this effect becomes large as we increase the number of processes .",
    "when we fix the total number of cores ( for examples 1536 cores ) , we can find that the process - major computation ( 256 processes with 6 threads ) is faster than the thread - major computation ( 64 processes with 24 threads ) . since the numerical performance of both of them",
    "are equivalent , this behavior seems strange at first sight .",
    "the origin of difference might be explained as follows : when we double the number of processes , the amount of data communicated by each process at once becomes a half of the original size , and the communication time decreases . on the other hand the communicated data - amount and the communication time is unchanged even if we double the number of threads .",
    "in other words , the algorithm described in sec . [ parahvprod ] parallelizes calculation and also communication .",
    "( @xmath187 ) and total @xmath75 conservation ( @xmath182 ) as functions of the total number of cores .",
    "we note that , due to changes in size of data transfer between mpi process , the thread number affects the tpq steps per hour even when the total number of cores is fixed .",
    "the squares , circles , upward triangles , and downward triangles represent the results with 3 threads , 6 threads , 12 threads , and 24 threads , respectively .",
    "the inset shows the shape of the 18-site cluster used in this benchmark calculations.,width=264 ]      we perform the tpq calculations for the 36-site heisenberg model on the kagome lattice with hybrid parallelization by using up to 32,768 cores . here",
    ", we employ the @xmath188-dimensional ( @xmath189 ) hilbert space without the @xmath1 conservation .",
    "although the canonical ( @xmath1 conserved ) calculation is faster than the grand - canonical ( @xmath1 unconserved ) calculation , we sometimes employ the latter for the tpq calculation .",
    "the finite - size effect is much smaller in the grand - canonical tpq state than in the canonical tpq state @xcite .",
    "figure [ fig_kagome ] shows the speedup of this calculation on the k computer .",
    "in contrast to the canonical calculation in the previous section , we obtain the almost linear scaling even we use the very large number of cores ( more than ten thousands cores ) . in the grand - canonical calculation",
    ", each process has a hilbert space of the same size .",
    "therefore , there is no load imbalance that appears prominently in the canonical calculation . due to the high throughput of the inter - node data transfer on the k computer , the parallelization efficiency from 4,096 cores to 32,768 cores reaches 82% and",
    "change in number of mpi processes does not largely affect the speed .",
    "except for some cases ( open symbols in fig .",
    "[ fig_kagome ] ) , in the group of the same number of cores ( for example , 16384 cores ) , we can not find any significant difference between the performance of the thread - major computation ( 2048 processes with 8 threads ) and that of the process - major computation ( 16384 processes with 1 thread ) . on the other hand when we calculate the same system by using 3,072 cores on sekirei , the speed of the computation by using 128 processes with 24 threads and that speed by using 1024 processes with 3 threads become 29 steps / hour and 71 steps / hour , respectively",
    "; we can find the advantage of the process - major computation on sekirei as in the previous section .",
    "it is thought that because the communication time on sekirei is longer than that on the k computer , the parallelization of the communication by increasing the number of processes is more effective on sekirei than on the k computer .",
    "for some cases the speed becomes exceptionally slow ( corresponding conditions are shown as open symbols ) .",
    "this slowdown occurs when the number of processes is 8,192 , and it remains even if we change the lattice to the one - dimensional chain .",
    "we consider the reason of the slowdown as follows .",
    "there are three effects on the computational speed by increasing processes : first , the numerical cost per single process and the data size per single communication decrease in inversely proportional to the number of processes ( positive effect ) , second , the frequency of communication increases ( negative effect ) , and , finally , the load balancing becomes worse ( negative effect ) .",
    "therefore we consider the slowdown comes from the competition of these effects .",
    "conservation as functions of the total number of cores .",
    "the squares , circles , upward triangles , and downward triangles represent the results with 1 thread , 2 threads , 4 threads , and 8 threads , respectively .",
    "the inset shows the shape of the 36-site cluster used in this benchmark calculations.,width=264 ]      in this section , we show benchmark results of the continuous - memory - access parallelization algorithm , namely , the cma method in @xmath0 , which is briefly explained in sec . [ ca ] .",
    "the cma method is particularly advantageous when the hamiltonian does not possess the u(1 ) symmetry or the su(2 ) symmetry that make the total charge and the total magnetization good quantum numbers .",
    "a typical example is the kitaev model discussed below . for such hamiltonians",
    ", we can not use the canonical mode .",
    "especially , the cma method is much faster than the conventional parallelization scheme explained in sec.[parahvprod ] when inter - site interactions are dense and complicated .",
    "this is because the cost for the computation and memory - transfer for the bit permutation does not depend on the number of terms or the complexity of the hamiltonian as long as the range of interaction is not too long , while , in the conventional parallelization scheme , the cost for the hamiltonian operations increases as it has more terms . to compare performance of the cma method and the conventional parallelization scheme , here , we carried out tpq simulations of a spin hamiltonian with complicated spin - spin interactions .",
    "we show the benchmark results of the tpq simulation for a spin hamiltonians of iridium oxide , na@xmath190iro@xmath191 , which was derived by utilizing _",
    "ab initio _ electronic band structures and many - body perturbation theory @xcite .",
    "the hamiltonian is defined on a honeycomb structure and has complicated inter - site spin - spin interactions that can be classified into five parts as follows : @xmath192 where the first term @xmath193 represents the kitaev hamiltonian @xcite , the second term @xmath194 describes diagonal exchange couplings between nearest - neighbor ( n.n . ) spins , and the third term @xmath195 describes complicated off - diagonal spin - spin interactions .",
    "the fourth term @xmath196 and the fifth term @xmath197 describe the second neighbor ( 2nd n. ) interactions and the third neighbor ( 3rd n. ) interactions , respectively .",
    "details of the hamiltonians are given in the previous study @xcite .",
    "in the lower panel of fig .",
    "[ fig_na2iro3 ] , elapsed time per tpq step for the conventional and the cma method is shown for a kitaev hamiltonian , @xmath193 , a kitaev - heisenberg hamiltonian , @xmath198 , a n.n .",
    "hamiltonian , @xmath199 , a hamiltonian including 2nd n. interactions , @xmath200 , and the _ ab initio _ hamiltonian @xmath201 .",
    "here , we use 16 nodes ( 24 cores per node ) on sekirei at issp the tpq simulation with 3 threads and 128 processes . even when the number of the coupling term increases , from the sparse kitaev hamiltonian @xmath193 to the dense and complicated hamiltonian of na@xmath190iro@xmath191 , @xmath202 , the elapsed time per tpq step of the cma method does not show significant increase while the elapsed time of the conventional scheme shows significant increase .",
    "although , for the sparse kitaev hamiltonian @xmath193 , the conventional scheme shows slightly better performance than that of the cma method , the cma method is three times faster than the conventional one even for the n.n .",
    "hamiltonian @xmath203 .",
    "furthermore , even though , from @xmath203 to @xmath200 , the number of the bonds clearly increases , the elapsed time per tpq step of the cma method only shows slight increase .",
    "( upper panel ) and elapsed time per tpq step for the conventional butterfly and the cma method ( lower panel ) .",
    "the three different nearest - neighbor ( n.n . ) bonds , @xmath204 , @xmath205 , and @xmath206 , the second neighbor ( 2nd n. ) bonds @xmath207 , and the third neighbor ( 3rd n. ) bonds @xmath208 are illustrated in the upper panel . in the lower panel , the ( cyan )",
    "squares denote the elapsed time per tpq step of the conventional scheme and the ( red ) circles denote the elapsed time per tpq step of the cma method.,width=264 ]",
    "to summarize , we explain the basic usage of @xmath0 in sec .",
    "2 . by preparing one file within ten lines , for typical models in the condensed matter physics",
    ", one can easily perform the exact diagonalization based on the lanczos method or finite - temperature calculations based on the tpq method . by using the same file",
    ", one can also perform the large - scale calculations on modern supercomputers . by properly editing the intermediate input files generated by standard mode execution",
    ", it is also easy to perform the similar calculations for complicated hamiltonians that describe the low - energy physics of real materials .",
    "this flexibility and user - friendly interface are the main advantage of @xmath0 and we expect that @xmath0 will be a useful tool for broad spectrum of scientists including experimentalists and computer scientists .    in sec .",
    "3 , we explain the basic algorithms implemented in @xmath0 . although the lanczos method and the tpq method are detailed in the literature , to make our paper self - contained , we explain the essence of these methods . furthermore , in sec . 4",
    ", we detail the parallelization methods of the multiplication of hamiltonian to the wavefunctions ; one is the conventional butterfly method and another one is the newly developed method .",
    "we also show the benchmark results of @xmath0 on supercomputers in sec .",
    "the results indicate that parallelization of @xmath0 works well on these supercomputers and the computational time is drastically reduced .",
    "we also introduce the new algorithm for parallelization , i.e. , the ( cma ) method .",
    "the main advantage of this method is that the speed does not depend on the number of terms in the hamiltonians , while the computational cost of the conventional butterfly method is proportional to the number of terms in the hamiltonians .",
    "thus , the cma method is suitable for treating the complicated hamiltonians for real materials .",
    "actually , for the low - energy model of na@xmath209iro@xmath210 , we show that the speed of the cma method is about six times faster than that of the conventional method .",
    "so far , the cma method is applicable to the limited class of hamiltonians and lattice geometries .",
    "in addition , its efficiency largely depends on the models .",
    "it is a remaining challenge to remove the limitation from the cma method .",
    "recent development of the theoretical tools for obtaining the low - energy models of real materials enable us directly compare the theoretical results and experimental results .",
    "although the limitation of the system size is severe , the exact analyses based on the lanczos method or the tpq method offer a firm basis for examining the validity of the theoretical results .",
    "the present version of @xmath0 can calculate only the static physical quantities , which is difficult to be directly measured in experiments . extending @xmath0 to calculate dynamical properties such as the dynamical spin / charge structure factors and",
    "the optical conductivity is a promising way to make @xmath0 more useful .",
    "such an extension will be reported in the near future .",
    "we would like to express our sincere gratitude to prof .",
    "hidetoshi nishimori and mr .",
    "daisuke tahara .",
    "implementation of the lanczos algorithm in @xmath0 written in c is based on the pioneering diagonalization package titpack ver . 2 written in fortran by prof .",
    "nishimori . for developing the user interface of @xmath0",
    ", we follow the design concept of the user interface in the program for variational monte carlo method developed by mr .",
    "tahara . a part of the user interface in @xmath0 is based on his original codes .",
    "we would also like to thank the support from  _ project for advancement of software usability in materials science _ \" by the institute for solid state physics , the university of tokyo , for development of @xmath0 ver.1.0 .",
    "we thank the computational resources of the k computer provided by the riken advanced institute for computational science through the general trial use project ( hp160242 ) .",
    "this work was also supported by grant - in - aid for scientific research ( 15k17702 , 16h06345 , and 16k17746 ) and building of consortia for the development of human resources in science and technology from the mext of japan and supported by presto , jst .",
    "we also thank numerical resources from the supercomputer center of the institute for solid state physics , the university of tokyo .",
    "in the spin system , the spin indices in input files of ` transfer ` , ` interall ` , and correlation functions are specified by using the bogoliubov representation .",
    "spin operators are written by using creation / annihilation operators as follows : @xmath211      in the lanczos method , an initial vector is specified with ` initial_iv`(@xmath212 ) defined in an input file for standard mode or a modpara file for expert mode . a type of an initial vector can be selected from a real number or complex number by using ` initialvectype ` in a modpara file .    * for canonical ensemble and ` initial_iv ` @xmath213 + a non - zero component of a target of hilbert space is given by @xmath214 where @xmath215 is a total number of the hilbert space and @xmath216 is added to avoid selecting the special configuration for a default value ` initial_iv ` @xmath217 .",
    "when a type of an initial vector is selected as a real number , a coefficient value is given by @xmath218 , while as a complex number , the value is given by @xmath219 .",
    "* for grand canonical ensemble or ` initial_iv ` @xmath220 + an initial vector is given by using a random generator , i.e. coefficients of all components for the initial vector is given by random numbers .",
    "the seed is calculated as @xmath221 where @xmath222 is a number given by an input file ( parameter ` initial_iv ` ) , @xmath223 is the thread i d , @xmath224 is the number of threads , and @xmath225 is the process i d .",
    "therefore the initial vector depends both on ` initial_iv ` and the number of processes .",
    "random numbers are generated by using simd - oriented fast mersenne twister ( dsfmt ) @xcite .      in @xmath0 , we use ` dsyev ` ( routine of lapack ) for diagonalization of @xmath123 .",
    "we use the energy of the first excited state of @xmath123 as a criteria of convergence . in the standard",
    "setting , after five lanczos step , we diagonalize @xmath123 every two lanczos step",
    ". if the energy of the first excited states agrees with the previous energy within the required accuracy , the lanczos iteration finishes .",
    "the accuracy of the convergence can be specified by ` lanczoseps ` ( modpara file in expert mode ) .    after obtaining the eigenvalues",
    ", we again perform the lanczos iteration to obtain the eigenvector . from the eigenvectors @xmath226",
    ", we calculate energy @xmath227 and variance @xmath228 .",
    "if @xmath129 agrees with the eigenvalues obtained by the lanczos iteration and @xmath229 is smaller than the specified value , we finish the diagonalization .",
    "if the accuracy of lanczos method is not enough , we perform the cg method to obtain the eigenvector . as an initial vector of the cg method",
    ", we use the eigenvectors obtained by the lanczos method in the standard setting .",
    "this often accelerates the convergence .      for tpq method ,",
    "an initial vector is given by using a random number generator , i.e. coefficients of all components for the initial vector are given by random numbers .",
    "the seed is calculated as @xmath230 where @xmath222 , @xmath223 , @xmath224 , and @xmath225 are the same as those for the lanczos method [ eqn .",
    "( [ fml_initialguess_lanczos ] ) ] .",
    "@xmath231 indicates the counter of trials , which is equal to or less than the total number of trials ` numave ` in an input file for standard mode or a modpara file for expert mode . we can select a type of initial vector from a real number or complex number by using ` initialvectype ` in a modpara file .",
    "@xmath232 indicate the thread i d , the number of threads , the process i d , respectively ; the initial vector depends both on ` initial_iv ` and the number of processes .",
    "b.  bauer , l.  d. carr , h.  g. evertz , a.  feiguin , j.  freire , s.  fuchs , l.  gamper , j.  gukelberger , e.  gull , s.  guertler , a.  hehn , r.  igarashi , s.  v. isakov , d.  koop , p.  n. ma , p.  mates , h.  matsuo , o.  parcollet , g.  pawwski , j.  d. picon , l.  pollet , e.  santos , v.  w. scarola , u.  schollwck , c.  silva , b.  surer , s.  todo , s.  trebst , m.  troyer , m.  l. wall , p.  werner , s.  wessel , journal of statistical mechanics : theory and experiment 2011  ( 05 ) ( 2011 ) p05001 .",
    "http://stacks.iop.org/1742-5468/2011/i=05/a=p05001[[link ] ] .",
    "j.  jakli   , p.  prelov   ek , phys .",
    "b 49 ( 1994 ) 50655068 . http://dx.doi.org/10.1103/physrevb.49.5065 [ ] , http://link.aps.org/doi/10.1103/physrevb.49.5065[[link ] ] .",
    "http://link.aps.org/doi/10.1103/physrevb.49.5065    a.  hams , h.  de  raedt , phys .",
    "e 62 ( 2000 ) 43654377 . http://dx.doi.org/10.1103/physreve.62.4365 [ ] , http://link.aps.org/doi/10.1103/physreve.62.4365[[link ] ] .",
    "http://link.aps.org/doi/10.1103/physreve.62.4365            e.  anderson , z.  bai , c.  bischof , l.  blackford , j.  demmel , j.  dongarra , j.  du  croz , a.  greenbaum , s.  hammarling , a.  mckenney , d.  sorensen , lapack users guide , 3rd edition , society for industrial and applied mathematics , 1999 ."
  ],
  "abstract_text": [
    "<S> @xmath0 [ _ aitch - phi _ ] is a program package based on the lanczos - type eigenvalue solution applicable to a broad range of quantum lattice models , i.e. , arbitrary quantum lattice models with two - body interactions , including the heisenberg model , the kitaev model , the hubbard model and the kondo - lattice model . </S>",
    "<S> while it works well on pcs and pc - clusters , @xmath0 also runs efficiently on massively parallel computers , which considerably extends the tractable range of the system size . </S>",
    "<S> in addition , unlike most existing packages , @xmath0 supports finite - temperature calculations through the method of thermal pure quantum ( tpq ) states . in this paper , we explain theoretical background and user - interface of @xmath0 . </S>",
    "<S> we also show the benchmark results of @xmath0 on supercomputers such as the k computer at riken advanced institute for computational science ( aics ) and sgi ice xa ( sekirei ) at the institute for the solid state physics ( issp ) .    </S>",
    "<S> 02.60.dc numerical linear algebra,71.10.fd lattice fermion models,75.10.kt quantum spin liquids    * program summary *    _ manuscript title : _ quantum lattice model solver @xmath0 + _ authors : _ mitsuaki kawamura , kazuyoshi yoshimi , takahiro misawa , youhei yamaji , synge todo , naoki kawashima + _ program title : _ @xmath0 + _ journal reference : _ + _ catalogue identifier : _ </S>",
    "<S> + _ program summary url : _ + http://ma.cms-initiative.jp/en/application-list/hphi + _ licensing provisions : _ gnu general public license , version 3 or later + _ programming language : _ </S>",
    "<S> c + _ computer : _ any architecture with suitable compilers including pcs and clusters . </S>",
    "<S> + _ operating system : _ unix , linux , os x. + _ ram : _ problem dependent . </S>",
    "<S> for example , less than one gb for a few - site system , and 3.8 tb for the 36-site heisenberg model computed in this study . </S>",
    "<S> + _ number of processors used : _ problem dependent . </S>",
    "<S> we use up to 4,096 processors ( 32,768 cores ) in this study . </S>",
    "<S> + _ keywords : _ </S>",
    "<S> 02.60.dc numerical linear algebra , 71.10.fd lattice fermion models , 75.10.kt quantum spin liquids + _ classification : _ 4.8 linear equations and matrices , 7.3 electronic structure + _ external routines / libraries : _ mpi , blas , lapack + _ nature of problem : _ + physical properties ( such as the magnetic moment , the specific heat , the spin susceptibility ) of strongly correlated electrons at zero- and finite temperature . + _ solution method : _ + application software based on the full diagonalization method , the exact diagonalization using the lanczos method , and the microcanonical thermal pure quantum state for quantum lattice model such as the hubbard model , the heisenberg model and the kondo model . </S>",
    "<S> + _ restrictions : _ </S>",
    "<S> + system size less than about 20 sites for a itinerant electronic system and 40 site for a local spin system . </S>",
    "<S> + _ unusual features : _ + finite - temperature calculation of the strongly correlated electronic system based on the iterative scheme to construct the thermal pure quantum state . </S>",
    "<S> this method is efficient for highly frustrated system which is difficult to treat with other methods such as the unbiased quantum monte carlo . + _ running time : _ </S>",
    "<S> + problem dependent . </S>",
    "<S> for example , when we compute the heisenberg model on the kagome lattice without @xmath1 conservation , we can perform 400 iterations per hour . </S>"
  ]
}
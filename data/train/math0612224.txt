{
  "article_text": [
    "we consider closed queueing networks containing a server station and @xmath0 client stations .",
    "the server station is an infinite server queueing system with identical servers .",
    "client stations are single - server queueing systems with an autonomous service mechanism , where customers ( units ) are served only at random instants generated by a strictly stationary and ergodic sequence of random variables .",
    "queueing systems with an autonomous service mechanism were introduced and originally studied by borovkov @xcite , @xcite .",
    "the formal definition of these systems in the simplest case of single arrivals and departures is as follows .",
    "let @xmath6 denote an arrival point process , let @xmath7 denote a departure point process , and let @xmath8 be a queue - length process , and all of these processes are started at zero ( @xmath9 ) .",
    "then the autonomous service mechanism is defined by the equation : @xmath10 the queueing systems with an autonomous service mechanism have been studied in many papers ( e.g. abramov @xcite , @xcite , @xcite , fricker @xcite , @xcite , gelenbe and iasnogorodski @xcite ) .",
    "the structure of queueing systems or networks with autonomous service and their analysis is much easier than those structure and analysis of  usual \" systems with generally distributed service times .",
    "queueing systems and networks with autonomous service , because of their simple construction , are studied under general settings on dependent inter - arrival and inter - departure times , and their analysis is often based on methods of stochastic calculus and the theory of martingales .",
    "the corresponding results for usual markovian queueing systems or networks follow as a particular case of the corresponding results for queueing systems or networks with poisson input and autonomous service . for different applications of queueing systems ( networks ) with autonomous service see e.g. @xcite , @xcite , @xcite and @xcite .    the assumption that the queueing mechanism is autonomous substantially simplify the analysis . however , according to sample - path results of @xcite this assumption can be removed .",
    "so , all of the main results remain valid for quite general client / server networks without the special assumption that the service mechanism is autonomous .    in the present paper we study",
    "client / server networks in a semi - markov environment .",
    "there has been an increasing attention to queueing systems in a random environment in the literature ( e.g. @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite and others ) .",
    "however , most of these papers mainly develop the theory and remain far from real - world applications .",
    "the aim of the present paper is twofold .",
    "first , we establish new theoretical results for client / server networks in semi - markov environment describing the behavior of queue - length processes of this network .",
    "second , we show how these theoretical results can be applied to solve real - world problems .",
    "some of these problems are solved in the present paper .",
    "other ones will be solved in the future .",
    "the model of the network , which is considered in this paper , is very close to the models considered in @xcite and @xcite ( see figure 1 ) . for a more general construction of network with two types of node and multiple customer classes",
    "see @xcite .",
    "the description of the present model is based on that of the model of @xcite . for other papers studying the models of client / server networks",
    "see also @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite and other papers .",
    "the previous assumptions of @xcite , that are also used in the present paper , are repeated below .",
    "the departure instants in the @xmath3th client station ( @xmath11 ) are denoted by @xmath12 , @xmath13 , @xmath14 ,  , and    @xmath15 each sequence @xmath16 forms a strictly stationary and ergodic sequence of random variables .",
    "the corresponding point process associated with departures from the client station @xmath3 is denoted @xmath17    the total number of units in the network is @xmath1 .",
    "the number @xmath1 is a large parameter , and we assume that @xmath1 increases indefinitely .",
    "this means that we assume that @xmath1 is a series parameter , and the series of models ( with different @xmath1 ) are considered on the same probability space .",
    "it was assumed in @xcite that the service time of each unit in the server station is an exponentially distributed random variable with a _ given _ parameter @xmath18 . in the present paper ,",
    "the assumption is another . under the assumption that an environment is random ( markov or semi - markov ) , the parameter @xmath18 is not longer a _",
    "constant value_. it is a random variable , taking values in dependence of environment states .",
    "( by environment states we mean the states of the corresponding markov chain , which is described later . ) the same is noted regarding the routing probability matrix .    there were the standard assumptions in @xcite that after a service completion at the server station , a unit was transmitted to the client station @xmath3 with probability @xmath4 , @xmath19 , and @xmath20=1 .",
    "these assumptions are not longer valid in the case of the system considered in this paper .",
    "the routing probabilities are assumed to be random , taking the values in dependence of the environment states as well .",
    "let us first describe _ markov states _ of semi - markov environment , and then latter we describe the notion of semi - markov environment as well .",
    "the network is assumed to be complete in the following sense .",
    "the server station and @xmath0 client stations communicate by links .",
    "the number of links is @xmath0 . therefore , the markov chain of the environment states is defined as follows .",
    "the number of possible environment states is assumed to be finite or countable infinite .",
    "these states are denoted by @xmath21 , @xmath22 . for the markov or semi - markov environment",
    "considered later we shall also use the notation @xmath23 .",
    "the meaning of this notation is the state of markov chain in time @xmath24 .",
    "the initial state is denoted by @xmath25 or @xmath26 .",
    "the completeness of the network means that    @xmath15 for any @xmath3=1,2 , ",
    ", @xmath0 there exists @xmath27 , such that @xmath28 .",
    "this assumption is not used in our proofs explicitly .",
    "nevertheless , it must be mentioned .",
    "if @xmath29 for all @xmath27 , then the station @xmath3 becomes isolated and therefore not representative . in the above assumption by @xmath30 we mean the value of probability @xmath31 when the network is in state @xmath21 .",
    "it is assumed additionally that for any @xmath22 , the sum of probabilities @xmath32 = 1 .",
    "the notation with similar meaning is used for parameter @xmath18 .",
    "namely , @xmath33 is assumed to be strictly positive for any state @xmath21 , however @xmath34 = @xmath35 can be equal to 0 ( because @xmath30 need not be strictly positive in general ) .",
    "the results of @xcite are associated with the asymptotic analysis of a closed client / server network with a bottleneck station as @xmath1 increases indefinitely .",
    "one of the main results of @xcite was then developed in @xcite for networks containing two types of node and multiple customer classes , where one of client stations was bottleneck .",
    "the results obtained in @xcite , @xcite , @xcite as well as in preceding paper @xcite all are a theoretical contribution to the theory of client / server computer networks with bottlenecks .",
    "the aim of the present paper is another . we follow towards performance analysis , and",
    "are aimed to use the known theoretical results of @xcite and @xcite .",
    "however , the known theoretical results obtained in these papers are scanty for their immediate application to real telecommunication systems , whose parameters can change in time . therefore , for the purpose of performance analysis , a substantial development of the earlier results related to this model is required . therefore , before studying the behaviour of queueing networks in semi - markov environment , we first study the behaviour of this network in its special case of piece - wise deterministic environment .",
    "then the results are extended to the more general situation of semi - markov environment .",
    "the paper is organized as follows . in section [ motivation ] , the paper is motivated by formulating the concrete real - world problems , where the results of the present paper can be applied . in section [ definitions ] , necessary notions of piece - wise deterministic , markov and semi - markov environments as well as classification of bottleneck stations are defined . in section",
    "[ semi - martingale ] , the semi - martingale decomposition for the queue - length process in semi - markov environment is derived .",
    "then in section [ piece - wise deterministic ] , the queue - length processes in piece - wise deterministic environment are studied .",
    "in fact we study  usual \" closed client / server networks under general assumptions . in section [ semi - markov ] ,",
    "the results are extended to the case of semi - markov environment . in section",
    "[ application ] , an example of an application of the main theorems of the present paper to client / server computer network with failing client stations is considered . in section [ discussion ] , new problems and monotonicity conditions associated with these problems for the case of markov environment are discussed . in section [ numerical example ] , the example of numerical study for the simplest network is considered .",
    "the results of the paper are concluded in section [ concluding remarks ] .",
    "in this section we motivate our study by real - world problems associated with performance analysis of the network , its separate stations or a subset of those stations .",
    "the main results of the present paper are the subject for many concrete practical problems having significant value .",
    "two of them are considered in @xcite , @xcite .",
    "article @xcite assumes that client stations all are identical and subject to breakdowns .",
    "article @xcite discusses the similar problem for not identical client stations . as a client station",
    "is breakdown the parameters of the network are changed .",
    "one or other breakdown leads to bottleneck and risk of a destruction of the network performance .",
    "the aforementioned articles @xcite , @xcite establish confidence intervals helping to avoid with a given high probability that performance destruction . some results of these articles are outlined in section [ application ] of this paper .",
    "another circle of problems is as follows .    if a computer network operates for a given fixed time interval ( 0 , @xmath36 ) , then its performance characteristic ( for example , payment for the increasing a given level of queue in a given client station , or in a subset of client stations ) depends on the characteristics of this network at the initial time @xmath37 . using the terminology of the present paper , these characteristics at the initial time @xmath37 specify the initial condition of the environment .",
    "for one initial condition , the measure of time that the queue - length is greater than a given fixed level @xmath38 is @xmath39 , and we must pay , say @xmath40 . for other initial condition ,",
    "this measure of time is @xmath41 and the corresponding payment is @xmath42 .    on the other hand ,",
    "the cost for initialization the first initial condition related to the above client station of the network is @xmath43 , and that cost for initialization the second initial condition is @xmath44 .",
    "so , the total expenses in the first case are @xmath43 + @xmath40 , and in the second case @xmath44 + @xmath42 .",
    "if @xmath43 + @xmath45 + @xmath42 , then we say that the first _ strategy _ is more profitable than the second one . in practical context",
    ", the first strategy can mean _ the first type repair _ of the network , or a failing client station , or a subset of failing client stations of the network , and the second strategy - _ the second type repair _ of that network , or a failing client station , or a subset of failing client stations correspondingly .",
    "for example , the first type repair can contain an additional prophylactical service and therefore to be more expensive that the second type repair ( i.e. @xmath46 ) .",
    "let us now define a semi - markov environment in mathematical terms",
    ". for each state @xmath47 of the markov chain let us define the sequence of independent and identically distributed random variables : @xmath48    [ defn - semimi]let @xmath49 be a markov chain with finite or countable infinite states space @xmath50 .",
    "let @xmath51 be a random process , and let @xmath52 be an increasing sequence of random points , i.e. @xmath53 .",
    "suppose that the process @xmath51 is defined as follows : @xmath54 , and @xmath55 for all @xmath56 .",
    "suppose also that the increments @xmath57 , @xmath58=0,1,2 ,  , coincide in distribution with @xmath59 , where the equality @xmath60 defines the index @xmath61 .",
    "then the process @xmath51 is called _ semi - markov environment_.    the above semi - markov environment @xmath51 is assumed to be given on special probability space @xmath62 , which in turn is contained in the common filtered probability space @xmath63 , @xmath64 , @xmath65 ) , @xmath66 .",
    "the two significant special cases of semi - markov environment are as follows .",
    "[ defn - piece - wise - det ] a semi - markov environment is called piece - wise deterministic , if    @xmath15 the sequences of all are deterministic , i.e. @xmath67 , where @xmath68 is the same constant for all @xmath69 .",
    "@xmath15 the parameters of networks are not randomly dependent of the environment states , i.e. @xmath70 , @xmath71 ,  , @xmath72 , ",
    ", for all @xmath3=1,2 ,  , @xmath0 , where @xmath73 , @xmath74 ,  all are non - random constants .    in other words ,",
    "a piece - wise deterministic environment defines time dependent closed client / server network with fixed piece - wise constant parameters depending on time .",
    "[ defn - mi ] in the case where the sequences consist of independent and exponentially distributed random variables with rates @xmath68 , @xmath61=1,2 ,  , then the semi - markov environment @xmath51 is called _",
    "markov environment_.    another equivalent definition of markov environment and independent of definition [ defn - semimi ] is as follows .",
    "let @xmath51 be a homogeneous markov process with initial state @xmath26 and transition probabilities @xmath75 from the state @xmath76 to the state @xmath77 ( @xmath78 ) during a small time interval ( @xmath24 , @xmath79 ) , and there is probability @xmath80 to stay in the same state @xmath76 during the same time interval ( @xmath24 , @xmath81 ) .    in many papers on queueing theory , telecommunication systems , inference of stochastic processes , statistics and other areas ,",
    "the above markov environment is often associated with _",
    "markov modulated poisson process_. the phrases _ markov environment _ , _ piece - wise deterministic environment _ and _ semi - markov environment _ are more appropriate in the context of the present paper .",
    "there was mentioned that @xmath23 denotes the state of the semi - markov environment in time @xmath24 .",
    "for example , the equality @xmath82 means that in time @xmath83 the associated markov chain is in state @xmath84 .",
    "we also use the following notation : @xmath85 .    in the sequel",
    "we shall also use the notation @xmath86 , @xmath87 and correspondingly , @xmath88 .",
    "it is worth noting , that the definition of @xmath86 and @xmath89 and consequently @xmath90 and @xmath91 have the different meaning . in general",
    "@xmath89 @xmath92 and @xmath91 @xmath93 .",
    "@xmath88 and @xmath91 both are random parameters , and @xmath94 where @xmath95 , while @xmath96 where @xmath97 .",
    "( in the sequel this dependence upon @xmath98 will be always implied , but shown explicitly only in the cases where it is necessary . )",
    "more specific explanation of the above difference is as follows .",
    "if at the initial time moment @xmath37 all of units are in the server station , then the input rate to the @xmath3th client station is @xmath99 .",
    "( @xmath100 is the individual rate of each unit arriving to the client station @xmath3 , and therefore the rate between arrivals is @xmath99 . )",
    "the time parameter 0 in parentheses is associated with the state of markov environment in time 0 . specifically ,",
    "if at the initial time moment @xmath37 all of units are in the server station , then @xmath101 . if the network is considered without markov or semi - markov environment , then that initial arrival rate is @xmath102 which is associated with the individual rate @xmath103 of each unit of the server station . if at the initial time moment there are @xmath104 units in the server station , @xmath105 , then for arrival process to any client station @xmath3 of a standard network ( without random environment ) we also use the notation @xmath100 . however , the meaning of @xmath100 is not longer the individual rate of each unit at time @xmath37 arriving to the station @xmath3 .",
    "more specifically , @xmath106 , where @xmath103 is the individual rate of each unit at time @xmath37 arriving to the station @xmath3 .",
    "the meaning of @xmath90 is similar .",
    "the only difference that it is said about an arbitrary time @xmath24 .",
    "for example , if there are @xmath107 units in the server station in time @xmath24 , @xmath108 , then @xmath109 . resuming the above ,",
    "@xmath91 is associated with individual service rate of each unit , while @xmath90 is a recalculated ( relative ) rate depending on the state of the queue - length processes in time @xmath24 , as explained above .",
    "regarding the departure ( service ) rates our assumption in the paper is as follows .",
    "the departure rate of the @xmath3th client station is assumed to be independent of semi - markov environment as well as of input rates @xmath90 .",
    "specifically ,    @xmath15 it is assumed that the the expectation of service ( inter - departure ) time in the @xmath3th client station is @xmath110 for all @xmath111=1,2 , ",
    "therefore , if at the initial time moment @xmath37 all of units are in the server station , then the load parameter of the @xmath3th client station is @xmath112 , and in the case where there is no semi - markov environment , @xmath113 .    in the case of network in markov environment ,",
    "the meaning of the notation @xmath90 is the same as well .",
    "if there are @xmath114 units in the server station in time @xmath24 , @xmath108 , and the rate of arrival of a unit from the server to the client station @xmath3 is @xmath91 , then @xmath90 = @xmath115 .",
    "then the load of the @xmath3th client station in time @xmath24 is @xmath116 .    now introduce necessary definitions .",
    "the first two definitions are related to both standard client / server networks and client / server networks in semi - markov environment .    [ defn1 ] the client station @xmath3 is called _ locally non - bottleneck _ in time @xmath24 if @xmath117 . otherwise , the @xmath3th client station is called _ locally bottleneck _ in time @xmath24 . a client station locally ( non- ) bottleneck in time 0 will be also called _ initially ( non- ) bottleneck_.    [ defn2 ] the client station @xmath3 is called _ non - bottleneck _ in time interval [ @xmath118 if it is locally non - bottleneck in all points of this interval",
    "otherwise , if there is a point @xmath119 such that @xmath120 , then the client station is called _ bottleneck _ in time interval [ @xmath118 . a client station is called _ ( non- ) bottleneck _ if it is ( non- ) bottleneck for all @xmath24 .",
    "the special definition for standard client / server networks ( without semi - markov environment ) is as follows .",
    "[ defn3 ] a client station is called _ absolutely non - bottleneck _ if it is a locally non - bottleneck station at the moment when all of units are in the server station .",
    "otherwise , a client station is called _",
    "absolutely bottleneck_.    clearly , that absolutely non - bottleneck client station @xmath3 is a non - bottleneck client station , because then for all @xmath24 we have @xmath121 . in the next section",
    "we prove that absolutely bottleneck client station is a bottleneck client station as well .",
    "that is , if a client station is currently locally bottleneck station , then it never can become a locally non - bottleneck .",
    "this means that the client station is forever bottleneck",
    ".    definition [ defn3 ] can be extended to network stations in semi - markov environment for an arbitrary time @xmath24 .",
    "specifically , we have the following definition .",
    "[ defn4 ] the client station @xmath3 of a network in random environment is called absolutely non - bottleneck in time @xmath24 if @xmath122 . in other words ,",
    "the client station @xmath3 is absolutely non - bottleneck in time @xmath24 if in that time @xmath24 the network belongs to some state @xmath47 of the environment , i.e. @xmath23 = @xmath47 , and in this state @xmath123 . otherwise , this client station is called absolutely bottleneck in time @xmath24 .",
    "the last notion enables us to judge on the behavior of client stations in random intervals [ @xmath124 ) , where the network is in given state @xmath76 .",
    "recall that @xmath125 is a time instant when the state of semi - markov environment is changed .",
    "so , during the random interval [ @xmath124 ) the network is in a fixed state of the semi - markov environment .",
    "consider a client station @xmath3 ( @xmath11 ) .",
    "let @xmath126 denote a queue - length there in time @xmath24 .",
    "assume that at the initial time instant @xmath37 , all of units are in the server station , i.e. @xmath127 for all @xmath11 .",
    "this is the simplest case , and we start from its study . for @xmath128 , @xmath129 where @xmath130 is the arrival process to client station",
    "@xmath3 , and @xmath131 is the departure process from that client station @xmath3 .",
    "the equation for departure process is as follows .",
    "let @xmath132 be a point process associated with consecutive departures from the @xmath3th client station .",
    "then , @xmath133 the definition of the departure process given by is as in @xcite . however , the construction of arrival process is more difficult .",
    "specifically , @xmath134 the processes @xmath135 , @xmath136 , appearing in relation are a collection of conditionally independent poisson processes with parameters depending on @xmath98 .",
    "this means the following .",
    "assume that for a given realization @xmath98 we have a sequence : 0@xmath137  , and for some @xmath58 , @xmath138 .",
    "assume that @xmath139 .",
    "then @xmath135 , @xmath136 , is the sequence of poisson processes with the parameter @xmath140 .",
    "that is the rate of poisson process depends on the state of semi - markov environment in time @xmath141 .",
    "this is just the main difference between the consideration of @xcite , where @xmath103 , @xmath11 , were non - random constants .",
    "relation can be then rewritten @xmath142 where @xmath143 is an associated sequence of ( conditionally ) independent poisson process with parameter depending on the state of the semi - markov environment @xmath144 .",
    "( here in and later we use the standard notation for a minimum of two numbers : @xmath145 . )    relations and enable us to write the following representation for the queue - length process @xmath126 : @xmath146 this implies that @xmath126 is the normal reflection of the process @xmath147 at zero .",
    "more accurately , @xmath126 is a nonnegative solution of the skorokhod problem ( see @xcite as well as @xcite , @xcite , @xcite and others ) on the normal reflection of the process @xmath148 at zero ( for the detailed arguments see @xcite ) . recall that according to the skorokhod problem , @xmath149 and @xmath126 has the representation @xmath150 in the sequel , it is convenient to use the notation : @xmath151 for any cdlg function @xmath152 satisfying @xmath153 ( see e.g. @xcite ) . according to this notation , can be rewritten @xmath154 .",
    "next , we take into account that the process @xmath130 is a semimartingale adapted with respect to the filtration @xmath155 .",
    "let @xmath156 denote the compensator of @xmath130 and @xmath157 denote the square integrable martingale of @xmath130 in the doob - meyer semimartingale decomposition : @xmath130 = @xmath156 + @xmath157 , @xmath11 .",
    "then , the process @xmath148 given by can be represented @xmath158 where @xmath159 the details for last formula can be obtained from @xcite or @xcite , theorem 1.6.1 .",
    "let us now study asymptotic properties of the normalized queue - lengths @xmath160 = @xmath161 as @xmath162 . for normalized processes we will use small latin letters . for example , @xmath163 , @xmath164 , and so on .",
    "then , from we have @xmath165 let us derive a relation for @xmath166 .",
    "( @xmath167 denotes the limit in probability . )    from lenglart - rebolledo inequality ( e.g. liptser and shiryayev @xcite ) , we have : @xmath168 where @xmath169 = @xmath170 vanishes such that @xmath171 . then , by virtue of , the term @xmath172 = @xmath173 vanishes as well , and for any small @xmath174 the fraction @xmath175 vanishes",
    ". therefore , @xmath176 for all @xmath11 and @xmath177 .    next , according to the assumption above , @xmath178",
    ".    therefore , @xmath179\\mbox{d}s . \\end{aligned}\\ ] ] representation is the extension of the similar result of @xcite for queue - length processes in client stations of standard client / server networks . recall that the representation obtained in @xcite and @xcite is @xmath180\\mbox{d}s.\\ ] ]    as we can see , the representations given by and are similar .",
    "the only difference is in the presence of infinite sum containing the integrals with random upper and lower bounds , and is a particular case of .",
    "in this section we discuss the behavior of the queue - length processes in a large closed client / server network in the case of piece - wise constant environment . for this case relation",
    "reduces to @xmath181\\mbox{d}s\\\\ & & + \\int_{\\sigma_{r}}^{t } \\left[\\lambda_j\\left\\{1-\\sum_{i=1}^k \\phi_s(x_i)\\right\\}-\\mu_j\\right]\\mbox{d}s,\\nonumber\\end{aligned}\\ ] ] where @xmath182 is the number of the state changes before time @xmath24 .",
    "therefore , the bottleneck analysis of the network in piece - wise constant environment reduces to the analysis of the network in traditional formulation ( without random environment ) in some given time intervals such as [ @xmath183 ) , @xmath111=1,2,  ,@xmath182 , or [ @xmath184 ) .",
    "notice , that the bottleneck analysis of the markovian client / server model has been originally studied by kogan and liptser @xcite .",
    "then these results were extended for the case of autonomous service mechanism in client stations in @xcite . however , the results obtained in both of these papers are related to a single special case and are not enough for the purpose of our performance analysis .",
    "therefore we will study all possible cases including the behaviour of the network under different initial lengths of queues in client stations and several absolutely bottleneck and absolutely non - bottleneck client stations .    in @xcite and @xcite",
    "there has only been considered the case where in the initial time moment @xmath37 all of units are in the server station ( i.e. the client stations all are empty ) and only one ( the @xmath0th ) client station is a bottleneck station .",
    "( in this particular case the notions of ( non-)bottleneck and absolutely ( non-)bottleneck client station coincide . )",
    "specifically , there has been proved the following result in @xcite .",
    "[ prop1 ] let @xmath185 , and @xmath126 denotes the queue - length in the @xmath3th client station in time @xmath24 .",
    "under the assumption that the @xmath0th client section is bottleneck , for @xmath186 and for any @xmath128 we have : @xmath187=0\\}=1-\\rho_j(t),\\label{ba1 - 1}\\\\ & & \\lim_{n\\to\\infty}\\int_0^t\\rho_j(s)\\mathbb{p}\\{q_{j , n}(s)=l\\}\\mbox{d}s\\nonumber\\\\ & & = \\lim_{n\\to\\infty}\\int_0^t \\mathbb{p}\\{q_{j , n}[s_{j , n}^*(s)]=l+1\\}\\mbox{d}s,\\label{ba1 - 2}\\\\ & & \\ \\ \\ l=0,1,\\ldots,\\nonumber\\end{aligned}\\ ] ] where @xmath188,\\label{ba2 - 1}\\\\ q(t)&=&\\left(1-\\frac{1}{\\rho_k(0)}\\right)(1-\\mbox{e}^{-\\rho_k(0)\\mu_kt}).\\label{ba2 - 2}\\end{aligned}\\ ] ]    in the case of markovian network , relations , can be resolved explicitly , and queue - length distribution in the non - bottleneck stations is the time - dependent geometric distribution @xcite , @xcite .",
    "the meaning of @xmath189 in is the limiting fraction of units remaining at the server station in time @xmath24 as @xmath162 .",
    "for example , in the case where @xmath190 this fraction remains the same at any time @xmath24 as initially , that is , as @xmath1 large , the number of units in the server station remains asymptotically equivalent to @xmath1 .",
    "however , if @xmath191 , then the number of units in the server station in time @xmath24 is asymptotically equivalent to @xmath192 $ ] .",
    "then , the number of units remaining in bottleneck station in time @xmath24 is asymptotically equivalent to @xmath193 .",
    "let us study various cases of the client / server network with bottlenecks .",
    "these cases will be studied in order of increasing complexity .",
    "we possibly shorten the proofs .    assuming that the initial condition of the network is the same as in proposition [ prop1 ] ( i.e. at the initial time @xmath37 all of units are at the server station ) ,",
    "let us study the case where the client stations 1,2,  ,@xmath194 are non - bottleneck , while the rest client stations @xmath195 are bottleneck . in this case",
    "we have the following result .",
    "[ prop2 ] under the assumption that the client sections @xmath195 are bottleneck , for @xmath196 and for any @xmath128 we have : @xmath187=0\\}=1-\\rho_j(t),\\label{ba3 - 1}\\\\ & & \\lim_{n\\to\\infty}\\int_0^t\\rho_j(s)\\mathbb{p}\\{q_{j , n}(s)=l\\}\\mbox{d}s\\nonumber\\\\ & & = \\lim_{n\\to\\infty}\\int_0^t \\mathbb{p}\\{q_{j , n}[s_{j , n}^*(s)]=l+1\\}\\mbox{d}s,\\label{ba3 - 2}\\\\ & & \\ \\ \\ l=0,1,\\ldots,\\nonumber\\end{aligned}\\ ] ] where @xmath188,\\label{ba4 - 1}\\\\ q(t)&=&\\left(1-\\frac{\\sum_{v = k_0 + 1}^k\\mu_v}{\\sum_{v = k_0 + 1}^k\\lambda_v}\\right ) \\left(1-\\exp\\left[-t\\sum_{v = k_0 + 1}^k\\lambda_v\\right]\\right).\\label{ba4 - 2}\\end{aligned}\\ ] ]    note , that equations and are the same as and , and the main difference between proposition [ prop1 ] and proposition [ prop2 ] is only in the expression for @xmath197 .",
    "the difference between expressions , and , can be easily explained in the framework of the proof of proposition [ prop2 ] .",
    "considering all of the bottleneck client stations as a separate subsystem , one can notice that the arrival rate to this subsystem is @xmath198 , and the service rate ( the sum of reciprocals of the expected inter - departure times ) is @xmath199 .",
    "this subsystem can be thought as a bottleneck station with the load @xmath200 to be specific , note the method of sections 2 , 3 , and 4 of @xcite leads to the same equations , and the equations for normalized queue - lengths in the bottleneck stations all are an elementary extension of the case considered in @xcite .",
    "therefore proposition [ prop2 ] is an elementary extension of proposition [ prop1 ] and its proof is the same as in @xcite or @xcite .",
    "notice , that the number of units remaining at the bottleneck station @xmath69 , @xmath201 in time @xmath24 is asymptotically equal to @xmath202t-\\lambda_v\\int_0^tq(s)\\mbox{d}s\\right).\\ ] ]    recall the main elements of the known proof for the representation @xmath197 given by , and consequently explain the proof of .",
    "we use the notation similar to that of the earlier papers @xcite and @xcite .    the difference between arrival and departure processes in the @xmath3th client station",
    "is denoted @xmath203 and its normalization @xmath163 .",
    "let @xmath204 , @xmath11 , denote the limit in probability of @xmath205 , as @xmath162 .",
    "the queue - length in the @xmath3th client station in time @xmath24 is denoted @xmath126 , its normalization is denoted @xmath206 , and the limit of @xmath160 in probability , as @xmath162 , is denoted @xmath207 .",
    "next , let @xmath208 for any cdlg function @xmath43 satisfying the condition @xmath153 .",
    "the functional @xmath209 has been introduced in @xcite .",
    "it characterizes a solution of the skorokhod problem on normal reflection at zero .",
    "therefore @xmath210 , being the functional @xmath211 applied to the function @xmath204 , describes the dynamic of normalized queue - length in the @xmath3th client station under the ",
    "usual \" initial conditions given in propositions [ prop1 ] and [ prop2 ] . under these ",
    "usual \" conditions , the functions @xmath204 , @xmath11 satisfy the system of equations : @xmath212-\\mu_j\\right\\}\\mbox{d}s , \\ \\ \\ j=1,2,\\ldots , k.\\ ] ] note , that the normalized functions @xmath204 , @xmath11 are usual ( non - random ) continuous functions , and characterizes a usual system of linear differential equations .    the statement of proposition [ prop1 ] is based on the solution of the system of these equations .",
    "( it is proved in @xcite that there is a unique solution of the system of equations . ) more specifically , in the case where the node @xmath0 is bottleneck , @xmath213 , and we therefore have @xmath214 . in other words ,",
    "@xmath215 can be replaced by @xmath216 in these equations of .",
    "the solution of the system of equations is @xmath204=0 for the non - bottleneck stations @xmath186 , and @xmath217 for the bottleneck station @xmath218 , where @xmath197 is given by . in the case of several bottleneck stations ,",
    "we write the similar equation for the dynamic of the normalized cumulated queue - length process in all of the bottleneck stations .",
    "specifically , @xmath219-\\sum_{v = k_0 + 1}^k\\mu_v\\right\\}\\mbox{d}s,\\ ] ] gives solution for @xmath197 in the similar statement of proposition [ prop2 ] .",
    "then , the solution of system for the bottleneck client stations @xmath69=@xmath220,@xmath221  , @xmath0 is given by @xmath222 where @xmath197 is defined by , and the queue - lengths in the bottleneck stations are asymptotically evaluated by relation .",
    "now , we discuss the behavior of the network , in which the client stations are not initially empty .",
    "this is the next step of the extension of the original result of proposition [ prop1 ] .",
    "the analysis of cases related to initially not empty queues is much more difficult .",
    "therefore , we start from the simplest case of the network containing only one client station , i.e. @xmath223 .",
    "let @xmath224 be a positive real number , and let us assume that the initial number of units in this client station is asymptotically equivalent to @xmath225 .",
    "consider the following two cases : ( i ) the client station is initially bottleneck , i.e. @xmath226 , and ( ii ) the client station is initially non - bottleneck , i.e. @xmath227",
    ".    case ( i ) is relatively simple .",
    "it is a simple extension of the cases considered above .",
    "specifically , we have the following system of equations : @xmath228-\\mu_1\\right\\}\\mbox{d}s . \\end{aligned}\\ ] ] from we have the following solution : @xmath229 the normalized queue - length @xmath230 in this client station is @xmath231 .    case ( i )",
    "can be easily extended to a more general case of @xmath0 initially bottleneck client stations .",
    "let @xmath232 , @xmath11 , denote nonnegative real numbers , and @xmath233 + @xmath234 + ",
    "+ @xmath235 .",
    "assume then that the initial number of units in the @xmath3th client station is asymptotically equivalent to @xmath236 .",
    "let @xmath197 denote the cumulated normalized queue - length in all of client stations .",
    "[ prop3 ] assume that all client stations are initially bottleneck , and the initial queue - lengths in client stations are asymptotically equivalent to @xmath225 , @xmath237 , ",
    ", @xmath238 correspondingly ( @xmath239 ) , as @xmath162 . then ,",
    "@xmath240\\right ) , \\end{aligned}\\ ] ] and the normalized queue - length in the @xmath3th client station is defined as @xmath241t-\\lambda_j(0)\\int_0^t r(s)\\mbox{d}s\\right).\\ ] ]    let us now discuss case ( ii ) .",
    "this case is also described by system of equations , and the dynamic of the process @xmath242 is therefore similar to the case considered above . however , this case is more delicate .",
    "the client station is initially non - bottleneck , i.e. @xmath227 , and the function @xmath242 is therefore decreasing in the right side of 0 .",
    "according to the convention , the initial value of queue is asymptotically equivalent to @xmath243 , and therefore @xmath244 .",
    "then the meaning of @xmath245 is a maximally possible rate of units arriving from the server station to client station , when all of units are in the server station and the client station is empty .",
    "then the client station is absolutely non - bottleneck if @xmath246 , and it is absolutely bottleneck if @xmath247 .",
    "consider first the case of an absolutely bottleneck station , i.e. @xmath247 . in this case , from the solution given by we have @xmath248 the meaning of the last result is the following .",
    "let @xmath249 be an asymptotic value of the queue - length in the client station , when this queue station ( at the first time ) becomes a locally bottleneck station . then , according to the normalized queue - length in the client station approaches to this level @xmath250 as @xmath251 .",
    "notice , that the same level for normalized queue - length is achieved for an initially bottleneck station in case ( i ) .",
    "the result of is also supported by results and of proposition [ prop1 ] .",
    "thus , for a bottleneck station , the same level is asymptotically achieved independently of an initial queue - length .",
    "for this reason for any absolutely bottleneck station in which @xmath247 we do not distinguish between two cases @xmath252 and @xmath253 , and absolutely bottleneck client station is always a bottleneck station .",
    "consider now the case of an absolutely non - bottleneck client station ( and therefore non - bottleneck client station ) where @xmath246 .",
    "then , according to the same calculation as in we have @xmath254 therefore , there exists the time instant @xmath255 when the normalized queue - length becomes at the first time empty . for this time instant",
    "we have the equation @xmath256    let us extend the result of case ( ii ) for a network with @xmath0 initially non - bottleneck client stations , all satisfying the condition @xmath252 , @xmath11 .",
    "it is assumed that the initial number of units in the @xmath3th client station is asymptotically equivalent to @xmath236 ( @xmath233 + @xmath234 + ",
    "+ @xmath235 ) as @xmath162 . assume also that the first @xmath194 client stations are ( absolutely ) non - bottleneck , i.e. @xmath257 = @xmath103(0)(1@xmath258 ) @xmath259 , @xmath196 , while the rest @xmath260 client stations are ( absolutely ) bottleneck , i.e. @xmath261 = @xmath262(0)(1@xmath263 ) @xmath264 , @xmath265 .",
    "similarly to we have the following system of equations @xmath266 and for @xmath267 we have the solution @xmath268\\right).\\ ] ]    then for @xmath204 , @xmath11 , we have the following solutions : @xmath269 ( recall that @xmath270 , @xmath11 . )",
    "however , since the first @xmath194 client stations are non - bottleneck , then the equality @xmath271 for the normalized queue - lengths in client stations is valid only for the values @xmath24 of the interval @xmath272 , where the value @xmath255 can be found from as @xmath273 let @xmath274 = @xmath275 .",
    "then the normalized queue - length process @xmath276 is as follows . for @xmath272 , @xmath277 , and for @xmath278",
    "it satisfies the equation @xmath279\\mbox{d}s,\\ ] ] where @xmath280 .    together with for all remaining @xmath3 = 1,2 ,  ,",
    "@xmath281 , @xmath282 ,  ,",
    "@xmath0 and @xmath278 we have : @xmath283 and similarly to for @xmath267 we have the solution @xmath284\\right).\\ ] ] therefore for @xmath3 = 1,2 ,  , @xmath274 - 1 , @xmath274 + 1 ,  , @xmath0 and @xmath278 we obtain @xmath285 and since @xmath286 is nonnegative , for @xmath287 and @xmath278 we obtain @xmath288    thus the dimension of the system is decreased by 1 , and the procedure can be repeated similarly . specifically , again since the client stations @xmath3 = 1,2 ,  , @xmath281 , @xmath282 ,  , @xmath194 all are non - bottleneck stations ,",
    "then the equality @xmath271 for the normalized queue - length processes is valid for all @xmath289 , where @xmath290 is defined as @xmath291 setting now @xmath292 one can continue this procedure to find @xmath293 ,  , @xmath294 and then to know the behaviour of the queue - length processes in all of ( non - bottleneck and absolutely bottleneck ) client stations for all @xmath24 .",
    "the considered extension of case ( ii ) is in fact the general case in which amongst @xmath0 client stations there are @xmath194 non - bottleneck client stations , and the rest @xmath260 stations are absolutely bottleneck ( i.e. part of them can be initially non - bottleneck ) , and all @xmath0 client stations are with arbitrarily large initial queue - lengths .",
    "the result can be formulated as follows .",
    "[ thm1 ] assume that there are @xmath0 client stations , where @xmath194 client stations ( non necessarily the first ones ) are absolutely non - bottleneck , and the initial normalized queue - length in all of these @xmath0 client stations are @xmath232 in limit as @xmath162 correspondingly ( @xmath11 ) .",
    "then there are time instants @xmath295 when the normalized queue - lengths in these @xmath194 absolutely non - bottleneck stations correspondingly achieves zero and remains then to stay at zero .",
    "these points as well as the normalized queue - lengths in time @xmath24 in the rest @xmath260 stations are defined according to scheme [ alg1 ] below .",
    "[ alg1 ] consider the system @xmath296 where @xmath297 , and @xmath298\\right).\\ ] ] then , @xmath299 and the argument @xmath24 in and belongs to the interval [ 0,@xmath255 ] . in this case",
    "the normalized queue - length at the @xmath3th client station , @xmath271 for all @xmath3=1,2,  ,@xmath0 .",
    "let @xmath274 = @xmath301 .",
    "then @xmath276=0 for all @xmath278 .    in the next step ,",
    "we consider the system of @xmath302 equations , and @xmath278 ( the equation for @xmath286 , @xmath278 , is excluded ) : @xmath303 where @xmath304\\right).\\ ] ] then , @xmath305 and the argument @xmath24 in and belongs to the interval [ @xmath255,@xmath290 ] , and subscript @xmath3 in these equations is @xmath307 . in this case @xmath271 , and @xmath308 for all @xmath309 .    consequently excluding equations one - by - one , then the @xmath111th instant @xmath310 , @xmath311 , is defined from the system @xmath312 where @xmath313\\right ) .",
    "\\end{aligned}\\ ] ] then , @xmath314 and the argument @xmath24 in and belongs to the interval [ @xmath315,@xmath310 ] , and subscript @xmath3 in these equations takes the values from 1 to @xmath0 but @xmath274 , @xmath317 ,  , @xmath318 .",
    "in this case the normalized queue - lengths @xmath271 , and @xmath319=0 for all @xmath320 .",
    "theorem [ thm1 ] containing scheme [ alg1 ] is easily applied to networks with piece - wise deterministic environment .",
    "specifically , the theorem is applied to each of the intervals [ @xmath183 ) , @xmath321 and [ @xmath184 ) .",
    "the statement of theorem [ thm1 ] is easily adapted to client / server networks in semi - markov environment .",
    "the difference between the approach to the piece - wise deterministic environment and semi - markov environment is only that the points @xmath322 are random , and general relation rather than must be used .",
    "for example , considering the first term of , we have @xmath323\\mbox{d}s\\\\ & = \\int_{0}^{\\sigma_{1}\\wedge t}\\left[\\lambda_j(\\mathcal{e}(0))\\left\\{1-\\sum_{i=1}^k \\phi_s(x_j)\\right\\}-\\mu_j\\right]\\mbox{d}s , \\end{aligned}\\ ] ] and the extension the above theory of section [ piece - wise deterministic ] is elementary .",
    "for example one can make the assumption about arbitrary initial conditions in client stations and arbitrary number of bottleneck stations .",
    "the same theory of section [ piece - wise deterministic ] can be developed for any interval with random lower and upper bounds as well , such that @xmath324\\mbox{d}s,\\ ] ] resulting in adaptation of the theory of section [ piece - wise deterministic ] to client / server networks in semi - markov environment .",
    "the theorem below is the adaptation of theorem [ thm1 ] to the case of a random interval [ @xmath325 , @xmath326 ) .",
    "( the extension of theorem [ thm1 ] to the other intervals [ @xmath327 , @xmath328 ) , @xmath111=1,2 , ",
    ", is similar . )",
    "[ thm2 ] assume that amongst @xmath0 client stations , there are @xmath194 absolutely non - bottleneck in time 0 , and the rest @xmath260 client stations are absolutely bottleneck in time 0 .",
    "assume that the initial normalized queue - lengths in all of these @xmath0 client stations are @xmath232 in limit as @xmath162 correspondingly ( @xmath11 ) .",
    "then there are time instants @xmath295 which are defined recurrently by scheme [ alg1 ] of theorem [ thm1 ] .",
    "we only take into account the values @xmath329 satisfying the inequality @xmath330 , i.e. we set @xmath331 = @xmath332 .",
    "then , the only instants @xmath333 @xmath334  @xmath335 are taken into account in this theorem .",
    "the main relation of scheme [ alg1 ] now looks @xmath336 where @xmath297 , and @xmath337\\right).\\ ] ] the other relations of this theorem are defined similarly to the corresponding relations of scheme [ alg1 ] where only argument @xmath24 is replaced by @xmath338 in the corresponding places .",
    "specifically , now looks @xmath339 where @xmath267 is defined by , and now looks @xmath340 where @xmath267 is defined by , and @xmath341 .",
    "in this section we discuss application of the above main theorem for symmetric large closed client server computer networks .",
    "we consider a network with @xmath0 identical servers .",
    "we assume that all of the processes started at zero , i.e. @xmath342 , and the following other assumptions and notation are used .",
    "the service time of each unit in the server station is exponentially distributed with parameter @xmath18 .",
    "there are @xmath0 client stations in total , and each of client stations is a subject to breakdown .",
    "a lifetime of each client station has the probability distribution @xmath343 . in this case",
    "the moments of breakdown are associated with change states of semi - markov environment , and this example is one of applications of the above theory .    the process @xmath344 satisfies the condition @xmath345 ( the equivalent form of condition is considered in section [ definitions ] .",
    "it is assumed here that @xmath346 . )    the relations between parameters @xmath18 , @xmath347 and @xmath0 are assumed to be @xmath348 and @xmath349 condition means that all of the client stations are initially non - bottleneck .",
    "condition means that after one of other breakdown all of the client stations become bottleneck .",
    "denote @xmath350 the maximum number of available client stations when the client stations all are bottleneck .",
    "then for all @xmath351 the rest @xmath111 client stations will be bottleneck as well .",
    "let @xmath105 be a given positive number .",
    "we say that the network is _ at risk _ if the total number of units in client stations exceeds the value @xmath104 . assuming that at the initial time moment all of the units are in the server stations , the aim of this section is to find a confidence interval [ 0 , @xmath352 ) such that with a given high probability @xmath353 ( say @xmath354 ) the network will not be at risk during that time interval [ 0 , @xmath352 ) .",
    "the parameter @xmath1 is assumed to be large .",
    "therefore we study asymptotic solution of this problem as @xmath162 , that is we study limiting ( as @xmath162 ) normalized cumulative queue - length process in client stations .",
    "this problem is hard in general .",
    "here we consider a particular case of @xmath355 .",
    "the limiting normalized queue - length process is denoted @xmath197 . at the initial time moment @xmath37",
    "there are @xmath0 available client stations .",
    "let @xmath255 , @xmath290,  ,@xmath356 be the moments of their breakdown , @xmath357 .",
    "the above moments of breakdown are associated with the behavior of the time dependent network , which can be considered as a network in semi - markov environment .",
    "let us then apply theorems [ thm1 ] and [ thm2 ] .",
    "( last theorem [ thm2 ] is used consequently from one random interval to another .",
    "here we do not explain the details of this application assuming that they are clear . )",
    "the random time interval [ 0 , @xmath356 ] is the lifetime of the entire system .",
    "therefore @xmath197 is to be considered during the aforementioned random interval [ 0 , @xmath356 ] .",
    "we assume that @xmath355 .",
    "therefore , according to theorem [ thm1 ] and theorem [ thm2 ] we obtain that in the random interval [ 0 , @xmath359 ) , @xmath360 , while in the random interval [ @xmath359 , @xmath356 ) the equation for @xmath197 is @xmath361 where @xmath362 is given by @xmath363 in the last endpoint @xmath356 we set @xmath364    we have the following relationships : @xmath365^i[g(t)]^{k - i},\\ ] ] @xmath366\\sum_{i=1}^{k-1}\\binom{k-1}{i}[1-g(t - t_\\gamma)]^i[g(t - t_\\gamma)]^{k - i-1 } , \\end{aligned}\\ ] ] where @xmath367 is such the value of @xmath24 under which @xmath368    the value @xmath367 is found from the relation @xmath369\\sum_{i=1}^{k-1}\\binom{k-1}{i}[1-g(t - t_\\gamma)]^i[g(t - t_\\gamma)]^{k - i-1}\\mbox{d}t } { \\int_0^\\infty\\sum_{i=2}^{k}\\binom{k}{i}[1-g(t - t_\\gamma)]^{i}[g(t - t_\\gamma)]^{k - i}\\mbox{d}t}=p,\\ ] ] and then from one can find the corresponding value @xmath370 .",
    "if the value of @xmath370 is not greater than @xmath371 , then the value @xmath352 of the interval [ @xmath359 , @xmath352 ) is to be taken @xmath372 .",
    "otherwise , if @xmath373 , then the value @xmath352 is to be taken @xmath374 .    in the particular case of",
    "@xmath375 we have the following results",
    ". relations , and reduces correspondingly to @xmath376 ^ 2,\\ ] ] @xmath377[1-g(t - t_\\gamma ) ] , \\end{aligned}\\ ] ] and @xmath378[1-g(t - t_\\gamma)]\\mbox{d}t } { \\int_0^\\infty[1-g(t - t_\\gamma)]^2\\mbox{d}t}=p.\\ ] ]      we consider the following example for @xmath375 : @xmath379 , @xmath380 , @xmath381 , @xmath354 , @xmath382 . from we",
    "have : @xmath383 solution of the equation @xmath384 yields @xmath385 . from we obtain : @xmath386 this value of @xmath370 is less than @xmath381 , and therefore this value @xmath387 is a required value for parameter , which defines a desired confidence interval .",
    "theorem [ thm2 ] looks very complicated , and its further analysis is very difficult to make a conclusion on the behavior of queue - length processes . for example , it seems very difficult to obtain any numerical characteristics of normalized queue - length processes analytically , @xmath388 for example .",
    "therefore , the numerical work should be based on simulation of semi - markov environment in order to obtain required performance characteristics of the process .",
    "( by simulation of semi - markov environment we mean a multiple realizations for a markov process in order to calculate required numerical performance characteristics of the process . )    for the purpose of performance analysis we also should restrict the class of networks and processes describing the behavior of queue - length processes in client stations .",
    "this restriction is related to application of the results rather than development of the theory . in many practical examples",
    "the quality characteristics of networks are changed monotonically resulting in one or other strategy of repair mentioned in section [ motivation ] .",
    "the aforementioned comparing of two different strategies for fixed interval ( 0 , @xmath36 ) requires application of theorem [ thm2 ] , and the problem can be solved without any additional assumption requiring monotonicity . however , under general settings we can not answer to many significant questions .",
    "one of them is _ how behave this criteria when the considered time interval is changed ? _ for example , we have two strategies corresponding two different initial conditions of semi - markov environment , and suppose we concluded that the first strategy is more profitable than the second one for specific time interval ( 0 , @xmath36 ) .",
    "_ is this conclusion remains correct ( or becomes not correct ) for another time interval ( 0 , @xmath389 ) ? _",
    "another typical question is as follows .",
    "again , we have two strategies corresponding two different initial conditions of semi - markov environment .",
    "suppose we established that for an interval ( 0 , @xmath36 ) the both strategies are equivalent .",
    "let @xmath390 be a new time instant , and @xmath391 .",
    "_ which one of the strategies is now more profitable in the new time interval ( 0 , @xmath390 ) , the first or second one ?",
    "_ the same question can be asked under the opposite inequality @xmath392 .",
    "these questions can be answered in the case when the class of the processes studied numerically has a monotone stricture and is described by the properties listed below .",
    "then in certain cases the behavior of queue - length processes in client stations and consequently a conclusion about better strategy for other time intervals can be established as well .",
    "assuming for simplicity that the environment is _ markov _ , then aforementioned properties are as follows .",
    "\\(1 ) for any two positive integers @xmath393 assume that @xmath394 .",
    "recall that @xmath395 + @xmath396 ( @xmath78 ) are the transition probabilities from the state @xmath76 to the state @xmath77 of a homogeneous markov process for a small time interval ( @xmath24 , @xmath79 ) .",
    "\\(2 ) @xmath397 for all @xmath11 , and @xmath393 .",
    "property ( 1 ) means that the markov process @xmath51 is an increasing process in the following sense : for two time moments @xmath398 and @xmath399 we have @xmath400 , which means that the state of a markov process in time @xmath398 is not greater ( in stochastic sense ) than that state in time @xmath399 for any integer positive @xmath111 . the above property remains correct for any @xmath401 , i.e. @xmath402 .    property ( 1 ) also means that for two markov processes @xmath403 and @xmath404 having the same transition probabilities , but different initial conditions satisfying @xmath405 , we also have @xmath406 , @xmath407 .",
    "( for details of the proof of these properties see e.g. kalmykov @xcite . )",
    "consequently , from property ( 2 ) we have @xmath408 for all @xmath11 and any integer positive @xmath111 .",
    "moreover , for all @xmath11 and any @xmath401 we have @xmath409 .",
    "thus the rates @xmath91 are increasing in time . as a result ,",
    "the queue - length processes in client stations increase sharper than in the case of fixed @xmath103 of  usual \" network , and more extended problems mentioned in this section seem can be solved as well .",
    "we however do not provide their solutions in the present paper .    in the next section , numerical investigation for concrete client server networks in a given markov environment ,",
    "satisfying the above two properties is provided .",
    "in this section we do not intend to challenge a problem of comparing two different strategies or finding an optimal strategy .",
    "we only show ( step - by - step ) how to study the behavior of queue - lengths in client stations numerically .",
    "however , the detailed explanations of the given example can help to solve some of the aforementioned problems of section [ motivation ] .",
    "the example models a markov environment , i.e. in our example we simulate exponentially distributed random variables describing the state changes in the markov environment .",
    "( in the given case by simulation we mean one realization of the process in order to study numerically a specific sample path of normalized queue - length process . )    we consider the simplest case of markov transition matrix of the order 4 @xmath410 associated with the continuous markov process @xmath51 . in this matrix @xmath411 , @xmath412 , and @xmath413=1 .",
    "this means that if the initial state of the process is @xmath414 , then the next state is @xmath415 .",
    "consequently , @xmath416 , and @xmath417",
    ". then @xmath418 for all @xmath419 .",
    "assume also that @xmath420 , @xmath412 , so that @xmath421 = 1 ,  @xmath111=1,2,3 .    for simplicity",
    ", the network contains only 2 client stations .",
    "assume that @xmath422=1 , @xmath423=2 , and for @xmath111=3,4 , @xmath424=@xmath425 .",
    "we also assume that @xmath424 = @xmath426 for @xmath427 . the values @xmath428",
    "= @xmath429 = 2 .",
    "@xmath233 = @xmath234 = 0.1 , i.e. at the initial time moment each client station contains 10% of all units in the queue .",
    "we set @xmath36=3 , and study behavior of queue - length processes in client station in the time interval ( 0 , 3 ) . by simulation we obtained the",
    "following exponentially distributed random variables : 0.5488 , 1.0892 and 1.8734 .",
    "the sum of these 3 random variables is greater than 3 , so this quantity of exponentially distributed random variables is enough for our experiment .",
    "note , that @xmath430 . there",
    "three time intervals : [ 0 , 0.5488 ) , [ 0.5488 , 1.6380 ) , [ 1.6380 , 3 ) .    for the time interval [ 0 , 0.5488 ) the two client stations are absolutely non - bottleneck because @xmath431=0.5 , and we have the following equations : @xmath432 therefore , from we obtain : @xmath433 substituting 0.5488 for @xmath24 in one can see that @xmath434 the endpoints are negative , therefore we are to find such the values @xmath255 and @xmath290 such that @xmath435=0 and @xmath436=0 . in our case @xmath255 = @xmath437 .",
    "this means that @xmath438 for all @xmath439 of the given interval [ 0 , 0.5488 ) .",
    "therefore , in the endpoint of this interval @xmath440 .",
    "consider now the time interval [ 0.5488 , 1.6380 ) . in point 0.5488",
    "we now set @xmath441=0 .",
    "therefore , @xmath442 = @xmath443 = 2 , and the both client stations are bottleneck in [ 0.5488 , 1.6380 ) .",
    "since @xmath444=1 , @xmath445 , then @xmath242 and @xmath446 are equal to zero in this interval , and @xmath230 = @xmath447 = 0 in this interval as well .",
    "we arrive at the last time interval [ 1.6380 , 3 ) .",
    "similarly to the above , we have @xmath448=0 , and @xmath449=3 , and the both client stations are bottleneck in [ 1.6380 , 3 ) .",
    "however , in the both client stations we have @xmath450=1.5 , @xmath445 . therefore , after a little algebra we have the following equations : @xmath451 for all @xmath24 from the interval [ 1.6380 , 3 ) .",
    "in the present paper we introduced a class of client / server networks in order to study performance measures of real client / server networks . our analysis was based on the results of earlier papers related to closed queueing networks with bottleneck .",
    "however , for purpose of real applications , we developed the earlier results and provided complete analysis of standard bottleneck client / server networks .",
    "we then extended our results for client / server networks in semi - markov environment .",
    "the results obtained in this paper are then used for analysis of confidence intervals of client / server networks with failing client stations .",
    "numerical study given in this paper will help to clearly understand solution for many related problems .",
    "the future work can be related to application of the theoretical results of this paper to concrete technological problems similar to those formulated in section [ motivation ] .",
    "the research was supported by the australian research council , grant # dp0771338 .",
    "krichagina , e.v . , liptser , r.sh . and",
    "puhalskii , a.a .",
    "diffusion approximation for a system that an arrival stream depends on queue and with arbitrary service .",
    "_ theory of probability and its applications _ , 33 , 114 - 124 ."
  ],
  "abstract_text": [
    "<S> the paper studies closed queueing networks containing a server station and @xmath0 client stations . </S>",
    "<S> the server station is an infinite server queueing system , and client stations are single - server queueing systems with autonomous service , i.e. every client station serves customers ( units ) only at random instants generated by a strictly stationary and ergodic sequence of random variables . </S>",
    "<S> the total number of units in the network is @xmath1 . </S>",
    "<S> the expected times between departures in client stations are @xmath2 . </S>",
    "<S> after a service completion in the server station , a unit is transmitted to the @xmath3th client station with probability @xmath4 @xmath5 , and being processed in the @xmath3th client station , the unit returns to the server station . </S>",
    "<S> the network is assumed to be in a semi - markov environment . </S>",
    "<S> a semi - markov environment is defined by a finite or countable infinite markov chain and by sequences of independent and identically distributed random variables . </S>",
    "<S> then the routing probabilities @xmath4 @xmath5 and transmission rates ( which are expressed via parameters of the network ) depend on a markov state of the environment . </S>",
    "<S> the paper studies the queue - length processes in client stations of this network and is aimed to the analysis of performance measures associated with this network . </S>",
    "<S> the questions risen in this paper have immediate relation to quality control of complex telecommunication networks , and the obtained results are expected to lead to the solutions to many practical problems of this area of research . </S>"
  ]
}
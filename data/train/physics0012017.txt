{
  "article_text": [
    "understanding the dynamics of quantum evolution is of fundamental importance in all fields of physics and chemistry .",
    "basic improvement in algorithms for solving the time - dependent schrodinger equation can therefore impact many areas of basic research . among numerical techniques developed for solving the time - dependent schrdinger equation@xcite ( see t. n. truong _",
    "et al._@xcite for earlier references ) , the method of split - operator@xcite , or its higher order variant , the method of symplectic integrator@xcite , has the advantage of being unitary , remain applicable in higher dimensions and easily generalizable to higher order .",
    "the disadvantage is that the time step size needed for convergence seemed to be small and many iterations are required for evolving system forward in time . in this work , we show that the method of factorizing the evolution operator to fourth order with purely _ positive _ coefficients , which have yielded a new class of gradient symplectic integrators for solving classical dynamical problems@xcite , also produces algorithms capable of solving the time - dependent schrdinger equation with time steps 5 to 10 times as large as before .",
    "the quantum state is evolved forward in time by the schrdinger evolution operator @xmath1 where @xmath2 , and @xmath3 , @xmath4 are the kinetic and potential energy operators respectively .",
    "( for clarity of presentation , we will work in atomic units such that the kinetic energy operator has this standard form . ) in the split operator approach , the short - time evolution operator ( [ exph ] ) is factorized to second order in the product form @xmath5 where we have indicated the error term as @xmath6 .",
    "thus @xmath7 evolves the system according to the hamitonian @xmath8 which deviates from the original hamiltonian by an error term second order in @xmath9 .",
    "since the kinetic energy operator is diagonal in momentum space , the split operator approach shuffles the wavefunction back and forth between real and fourier space .",
    "( see detailed discussion by takahashi and ikeda@xcite . )",
    "every occurrence of @xmath10 requires two fast fourier transforms ( ffts ) , one direct and one inverse . in this approach ,",
    "the generalization to higher dimension is straightforward , limited only by the expense of higher dimensional fourier transforms .",
    "moreover , every factorization of the evolution operator @xmath11 in the above form is unitary .",
    "one advantage of the split operator approach is that higher order algorithms can be constructed easily .",
    "for example , the evolution operator can be factorized to arbitrarily high order in the form@xcite @xmath12 with coefficients @xmath13 determined by the required order of accuracy .",
    "this factorization process is identical to the derivation of symplectic algorithms for solving classical dynamical problems@xcite .",
    "however , suzuki@xcite has proved that , beyond second order , any factorization of the form ( [ fact ] ) must produce some negative coefficients in the set @xmath13 , corresponding to some steps in which the system is evolved backward in time . while this is not detrimental in solving classical or quantum mechanical problems , it is observed that in the classical case the resulting higher order symplectic algorithms converge only for very small ranges of @xmath14 and is far from optimal@xcite . as we will show below",
    ", the same is true for quantum algorithms . in this work ,",
    "we show that insisting on factorizing the the schrdinger evolution operator to 4th order with purely _ positive _ time steps yielded algorithms with excellent convergent properties at large time steps .",
    "an example of 4th order splitting with negative coefficient is the ruth - forest@xcite scheme , @xmath15 where @xmath16 is chosen to cancel the @xmath17 error term in @xmath18 and @xmath19 rescales the sum of forward - backward - forward time steps back to @xmath9 .",
    "this factorization scheme has been independently derived many times in the context of symplectic integrators@xcite .",
    "the above derivation was first published by by creutz and gocksch@xcite in 1989 .",
    "suzuki@xcite and yoshida@xcite independent published the same constructions in 1990 .",
    "identical construction can be applied to generate a @xmath20th order algorithm @xmath21 from a triplet products of @xmath22 s , @xmath23 with @xmath24 .",
    "the ruth - forest ( rf ) algorithm requires 6 ffts . the alternative algorithm with operators @xmath25 and @xmath26 interchanged is also possible , but would have required 8 ffts per iteration .",
    "recently , suzuki@xcite and chin@xcite have derive a number of 4th order splitting schemes with only positive coefficients . in order to circumvent suzuki s  no positive coefficient \" proof , these factorizaztions require the use of an additional operator @xmath27=\\sum_i|\\nabla_iv|^2 $ ] , which means that these new algorithms require knowing the gradient of the potential .",
    "the two schemes derived by both susuki and chin , using different methods , are : @xmath28 with @xmath29 given by @xmath30 , \\label{superv}\\ ] ] and @xmath31 with @xmath32 given by @xmath33 .",
    "\\label{duperv}\\ ] ] note that scheme a , remarkably , only requires 4 ffts .",
    "chin s splitting scheme c , @xmath34 which minimizes the appearance of @xmath25 for the derivation of symplectic algorithms , has 4 @xmath26 operators , corresponding to 8 ffts .",
    "this is undesirable in the current context .",
    "it is however easy to derive an alternate 4th order scheme with only 3 @xmath26 operators by splitting the operator product at midpoint and concatenate the ends together to yield @xmath35 this  split and splice \" operation only works on scheme c because this scheme was originally derived by symmetrizing the splitted product .",
    "scheme d is just the other way of symmetrizing the same product .",
    "these two algorithms gave identical results in the scattering problem solved below .",
    "obviously then , algorithm 4d is preferable with two fewer ffts .",
    "to gauge the effectiveness of these new algorithms , we test them on a one dimensional scattering problem , where a gaussian wave pocket @xmath36 , \\label{gwave}\\ ] ] is impinged on a smooth sech - square potential . the hamiltonian is given by @xmath37 this choice of the potential is dictated by the fact that its transmission coefficient is known analytically@xcite @xmath38 we choose @xmath39 so that when the initial energy @xmath40 is equal to @xmath41 , the transmission coefficient is 0.520001 , which is practically 0.52 for our purpose .",
    "to compute the transmission coefficient , we evolve the gaussian wave pocket initially sufficiently far from the barrier and then integrate the transmitted wave pocket after a time of @xmath42 , when the latter is well separated from the reflected wave .",
    "we use @xmath43 grid points over a length of 600 , yielding a discretization spacing of @xmath44 . using more grid points than this has no measurable impact on the final results .",
    "we found that in order to reproduce the analytical transmission coefficient , it is necessary to use a very flat gaussian incident wave pocket .",
    "we therefore take @xmath45 and place the wave pocket initially at @xmath46 .    fig .",
    "1 shows the resulting transmission coeffcient for various algorithms as a function of the time step size @xmath14 at an incident energy of @xmath47 .",
    "even with such a flat gaussian incident wave pocket , at the smallest time step for the best algorithm , the transmission coefficient converges only to @xmath48 . while this value is still slightly below the exact value due to a finite sized guassian wave pocket , it is a perfectly acceptable benchmark to compare all algorithms with identical starting conditions .",
    "the second order results ( [ second ] ) , denoted by asterisks , can be accurately fitted by @xmath49 for @xmath50 , demonstrating its quadratic convergence .",
    "the results of the ruth - forest scheme ( [ rf ] ) , can also be well fitted by @xmath51 over the same range as shown , verifying it quartic convergence .",
    "however , it is clearly obvious that the range of convergence of the rf algorithm is not substantially greater than that of the second order algorithm , perhaps at most a factor of three greater . in comparison ,",
    "the four 4th order algorithms with positive splitting coefficients are distinctly superior . whereas the fourth order error coefficient of the ruth - forest algorithm is 74 , the corresponding coefficients for algorithms 4a , 4b , 4c and 4d are respectively , -1.07 , -0.38 , 0.14 and 0.14 respectively .",
    "algorithm 4c and 4d yielded identical results .",
    "algorithm 4d s error cofficient is more than 500 times smaller than that of rf , and can achieve the same accuracy by using step sizes nearly 5 times as large .",
    "the comparison with second order results is even more favorable ; the step size can be 10 - 15 times as large . to compare the computational effort involve , we timed each algorithm for 160 iterations on a pentium ii 450 mh processor using a fortran compiler .",
    "the second order algorithm took @xmath52s .",
    "relative to this time , the time required by algorithms rf , 4a , 4b , 4c , 4d are respectively , 2.98@xmath53 , 2.22@xmath53 , 3.37@xmath53 , 3.97@xmath53 , and 3.26@xmath53 respectively , which roughly scale with the number of ffts used in each algorithm .",
    "algorithm 4a is specially notable in that it is roughly 1/3 faster than rf but converges at time steps nearly 10 times as large .",
    "we have used algorithm 4a at time step size @xmath54 to compute the transmission coefficient as a function of the incident energy . over the range of @xmath55 to 1.2 , where the transmission coefficient goes from 0.0016 to 0.9974 ,",
    "the results are in agreement with the exact value ( [ tc ] ) to at least three decimal places .    at present , no 6th order factorization with positive coefficients are known .",
    "however , one can use the triplet construction ( [ higher ] ) to build a 6th order algorithm by iterating on three 4th order algorithms .",
    "2 shows the resulting convergence curves for various 6th order algorithms .",
    "the solid triangles corresponds to iterating on the rf algorithm to 6th order ( rf6 ) .",
    "there is no visible improvement in the convergence range .",
    "this algorithm requires 18 ffts .",
    "the asterisks are yoshidas@xcite 6th order algorithm a ( y6a ) , which is a product of 7 second order algorithms ( [ second ] ) some with negative coefficients , requiring 14 ffts .",
    "its convergence range is about twice that of the rf6 algorithm .",
    "the hollow diamonds , hollow circles , and solid circles are 6th order results based on algorithms 4a , 4b , and 4d respectively , and will be referred to as due to algorithms 6a , 6b , and 6d respectively .",
    "note that algorithm 6a only requires 12 ffts . by fitting a polynomial of orders 6 to 12 in @xmath14 , we extracted the 6th order error coefficients for each algorithms .",
    "for algorithms rf6 , y6a , 6a , 6b and 6d , the error coefficients are -7675 , -171 , -17.42 , -6.887 , and 5.819 respectively .",
    "the new , gradient algorithms are orders of magnitude better than previous 6th order algorithms .",
    "algorithm 6b s results are so flat that they can be fitted by a polynomial in @xmath56 alone . for comparsion",
    ", we have also replotted the 4th order results due algorithm 4d as a dashed line .",
    "algorithms rf6 and y6a are not even better than 4d .",
    "since all these 6th order algorithms , with the exception of y6a , are just the product of three 4th order algorithms , their running time simply triple that of their respective 4th order algorithm s running time .",
    "y6a s time is obviously 7@xmath53 , which is faster than all other algorithms except 6a .",
    "in this work , we have demonstrated that 4th order split operator algorithms , with no negative intermediate time steps , are superior to existing second order or fourth order algorithms for solving the time - dependent schrdinger equation .",
    "it is straighforward to generalize these algorithms to higher dimension by using higher dimensional ffts .",
    "these new algorithms require calculating the gradient of the potential , but converge at much large time step sizes .",
    "they should be useful for rapid simulation of large quantum systems with relatively simple potentials .",
    "our comparison of 6th order algorithms suggests that higher order algorithms with intermediate negative time steps are far from optimal .",
    "algorithms rf6 and y6a , which uses more negative time steps , are inferior to algorithm 6a , 6b , or 6d .",
    "this is the same conclusion drawn recently when higher order symplectic algorithms are compared in solving the kepler problem@xcite .",
    "this will impact current interests in implementing higher order symplectic algorithms to study quantum dynamics@xcite .",
    "this work suggests that the continual search for purely positive coefficients factorization schemes may produce better converged algorithms for solving both classical and quantum dynamical problems",
    ". currently , there are no known 6th order splitting schemes with purely positive coefficients ."
  ],
  "abstract_text": [
    "<S> we show that the method of splitting the operator @xmath0 to fourth order with purely positive coefficients produces excellent algorithms for solving the time - dependent schrdinger equation . </S>",
    "<S> these algorithms require knowing the potential and the gradient of the potential . </S>",
    "<S> one 4th order algorithm only requires four fast fourier transformations per iteration . in a one dimensional scattering problem , </S>",
    "<S> the 4th order error coefficients of these new algorithms are roughly 500 times smaller than fourth order algorithms with negative coefficient , such as those based on the traditional ruth - forest symplectic integrator . </S>",
    "<S> these algorithms can produce converged results of conventional second or fourth order algorithms using time steps 5 to 10 times as large . </S>",
    "<S> iterating these positive coefficient algorithms to 6th order also produced better converged algorithms than iterating the ruth - forest algorithm to 6th order or using yoshida s 6th order algorithm a directly .    </S>",
    "<S> pacs : 31.15.-p , 02.70.hm , 03.65.-w + keywords : time - dependent schrdinger equation , operator splitting , symplectic integrators . </S>"
  ]
}
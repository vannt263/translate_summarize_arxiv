{
  "article_text": [
    "link scheduling algorithms for packet switches have been studied extensively , e.g. , @xcite , however , little is known about the impact of link scheduling in large networks with long end - to - end paths . as a case in point ,",
    "the packet dispersion of a cbr traffic flow at an overloaded first - in - first - out ( fifo ) link with cross traffic @xcite is given by @xmath0 where @xmath1 is the constant - rate link capacity , @xmath2 is the arrival rate of cbr cross traffic , and @xmath3 and @xmath4 , respectively , are the arrival and output rate of the traffic flow ( with @xmath5 ) . considering a path of a large number of overloaded fifo links ( with homogeneous cross traffic and link capacities ) , the output rate was shown in @xcite to converge to @xmath6 { }    \\left [ c - r_{c } \\right]_+ \\ , \\notag \\end{aligned}\\ ] ] where @xmath7 is the number of traversed links and @xmath8_+ = \\max \\{x,0\\}$ ] .",
    "this is the same output rate observed in a network with priority scheduling where cross traffic is given higher priority .",
    "thus , the question arises whether the role of link scheduling diminishes on long paths in more general settings .",
    "this paper develops an analysis that can assess the impact of a broad class of link scheduling algorithms on end - to - end performance .",
    "taking a network calculus approach @xcite , we characterize traffic in terms of _ envelope _ functions and service by _ service curve _ functions .",
    "we present bounds on end - to - end performance metrics for statistical , as well as worst - case assumptions on traffic .",
    "our study considers all scheduling algorithms for which the transmission order of backlogged packets is entirely determined by the difference of their arrival times .",
    "these schedulers , referred to as @xmath9-schedulers , include fifo , priority scheduling , and deadline based scheduling .",
    "a key contribution of this paper is a significantly sharpened method for computing a statistical bound on the service given to a flow on an entire network path from statistical characterizations of the service at each node of the path . for traffic models that are characterized by a long - term rate and a short - term burst ,",
    "we derive closed - form expressions for statistical and worst - case bounds on end - to - end delay and backlog .",
    "we evaluate the tightness of the bounds by computing performance metrics for specific adversarial arrival scenarios . in some cases ,",
    "e.g. , for backlog bounds for some of the considered schedulers , we are able to show that our bounds are optimal .    the analysis in this paper is made possible by two advances in the network calculus .",
    "the first is a tight description of schedulers by service curves at a single nodes from @xcite .",
    "the second is presented here .",
    "we advance the state - of - the - art of the stochastic network calculus @xcite by improving methods for concatenating statistical per - node service descriptions to achieve service descriptions for an entire network path .",
    "compared to the best available methods @xcite , we achieve significantly improved end - to - end performance bounds for many scheduling algorithms . for the special case of deterministic scenarios ( i.e. , where bounds are never violated )",
    ", we recover worst - case end - to - end delay bounds known for fifo networks @xcite , while extending these bounds to more complex scheduling algorithms . for fifo scheduling",
    ", researchers have found conditions when the output of a node has similar characteristics as the input , justifying a decomposition analysis where each node can be analyzed in isolation @xcite .",
    "our results indicate that the conditions for decomposition are often met in non - fifo networks , as long as the scheduling in the network is sufficiently distinct from a network with strict priorities .",
    "our study provides new insight into the role of scheduling algorithms in networks with long paths . for a network that is not permanently overloaded , we find that the differences between delay and backlog bounds at a single node persist in a multi - node setting .",
    "in fact , for the traffic and service models considered in this paper , the differences between bounds for various schedulers grow proportionally with the path lengths .",
    "the remaining sections of this paper are structured as follows . in sec .  [",
    "sec : calculus ] , we discuss the probabilistic traffic and service characterization in the network calculus , with traffic envelopes and service curves , and present our result of a new network service characterization . in sec .",
    "[ sec : delta ] , we describe the class of @xmath9-scheduling algorithms , and derive a network service description for a path of nodes with such schedulers . in sec .",
    "[ sec : bounds ] , we derive closed - form end - to - end bounds on backlog , delay and the burstiness of output from a network . in sec .",
    "[ sec : tight ] , we derive lower bounds , thus enabling a discussion of the tightness of our results .",
    "we present numerical examples in sec .",
    "[ sec : eval ] and conclude the paper in sec .",
    "[ sec : conclusions ] .",
    "we take a network calculus modeling and analysis approach where arrivals and service of a flow are expressed in terms of deterministic or probabilistic bounds , referred to as _ traffic envelopes _ and _ service curves _",
    ", respectively @xcite .",
    "we next discuss needed definitions and concepts of the deterministic and stochastic network calculus .",
    "the last subsection contains the key contribution of this paper : a new result to compute statistical service curves for a network path , that enables us to provide a sharpened analysis of end - to - end performance bounds .",
    "consider a buffered link with a link scheduling algorithm , referred to as a node .",
    "using a left - continuous time model , a sample path of the arrivals to the node in the time interval @xmath10 is denoted by @xmath11 ) .",
    "we assume that traffic arrivals can be described by a stationary random process , or at least satisfy stationary bounds .",
    "traffic departing from a node in @xmath10 is denoted by @xmath12 .",
    "both @xmath13 and @xmath14 are nondecreasing functions with @xmath15 , and we have @xmath16 for all @xmath17 . for brevity",
    ", we use the notation @xmath18 and @xmath19 for arrivals and departures in the time interval @xmath20    we characterize arrivals to a node in terms of bounds on sample paths .",
    "a _ deterministic sample path envelope _",
    "@xmath21 provides a worst - case description of traffic in the sense that it satisfies for all @xmath17 @xmath22 with @xmath23 if @xmath24 . by definition ,",
    "traffic arrivals never violate a deterministic envelope .    for a statistical network analysis",
    "we need a probabilistic analogue , i.e. , a bound for all sample paths of the arrivals which may be violated with a small probability .",
    "a _ statistical sample path envelope _",
    "@xmath25 is a function that satisfies for all @xmath26 @xmath27    where @xmath28 represents one or several parameters , and @xmath29 is a bounding function .",
    "further , @xmath30 if @xmath31",
    ". we can view @xmath32 as a bound on the probability of violating the envelope .",
    "the notation @xmath33 and @xmath32 indicate that both the envelope and the bounding function depend on the same parameter(s ) . setting",
    "@xmath34 recovers a deterministic sample path envelope .    for numerical evaluations and optimizations",
    ", we will use a parsimonious envelope characterization for traffic flows consisting of a rate parameter @xmath35 and a burst parameter @xmath36 , such that for all @xmath37 , @xmath38 a deterministic sample path bound for such an arrival characterization is given by the envelope @xmath39 ( for @xmath40 ) .",
    "this bound corresponds to the maximal output of a leaky bucket traffic regulator with rate @xmath41 and burst size @xmath28 .",
    "the probabilistic version of this bound takes the form that for all @xmath37 , @xmath42 which can be read as the probability that the arrivals violate a long - term rate @xmath41 by more than @xmath28 being bounded by @xmath43 .",
    "when we assume that @xmath43 has an exponential decay , i.e. , @xmath44 for given constants @xmath45 and @xmath46 , we obtain the exponential bounded burstiness ( ebb ) traffic model @xcite , which is related to the linear envelope characterization by chang @xcite .",
    "we will write @xmath47 to indicate that @xmath48 is an ebb flow with parameters @xmath41 , @xmath46 , and @xmath45 .",
    "the ebb model can express non - trivial processes , such as markov - modulated on - off processes @xcite , but it does not apply to heavy - tailed or long - range correlated traffic .",
    "extensions of the ebb traffic model have been proposed for bounding functions with faster than polynomial decay @xcite and even heavy - tailed decay @xcite .    while a bound as in eq .",
    "is not a statistical sample path envelope ( satisfying eq .  ) , such an envelope can be constructed with an application of the union bound @xcite . for the ebb traffic model",
    "this yields a statistical sample path envelope @xmath49 for any choice of @xmath50 , where @xmath51 can be viewed as a rate relaxation .",
    "we use the concept of a service curve @xcite to describe a lower bound on the service available to a flow at a node or sequence of nodes .",
    "a node offers a _",
    "deterministic service curve _ @xmath52 , if the input - output relationship of traffic is such that for all @xmath17 @xmath53 the term on the right - hand side is referred to as min - plus convolution of @xmath48 and @xmath52 , and denoted by ` @xmath54 ' .",
    "simple examples of service curves describe constant rate links , with @xmath55 , and latency - rate servers , with @xmath56_+$ ] , for suitable non - negative constants @xmath57 and @xmath58 .",
    "a probabilistic extension of this concept leads to the formulation of a _ statistical service curve _ which satisfies for all @xmath59 that @xmath60 where the violation probability and the service curve may depend on one or more parameters indicated by @xmath28 .",
    "the network calculus seeks to provide upper bounds on the delay , backlog , and output burstiness for a flow at a node or network path . for arrival and departure functions @xmath48 and @xmath61 , the backlog @xmath62 and the delay @xmath63 at time @xmath64",
    "are given by @xmath65 the backlog @xmath66 and the delay @xmath67 can be depicted , respectively , as the vertical and horizontal distance between the graphs of the arrival and departure functions .",
    "we use the term _ output burstiness _ to characterize a bound on the output process  @xmath61 .",
    "bounds on the above metrics can be formulated using the min - plus deconvolution operator ` @xmath68 ' , which for any non - negative functions @xmath69 and @xmath70 is defined as @xmath71 . for deterministic arrival and service characterizations , given by eqs .   and  , such bounds can be found in @xcite .",
    "below we provide the corresponding expressions for statistical arrival envelopes and service curves  @xcite .",
    "the service curve definition in @xcite is not identical to that in eq .  .",
    "at the same time , the proof of the bounds are close enough to be omitted here .",
    "given a flow with a statistical sample path envelope with @xmath72 and @xmath73 , and a statistical service curve with @xmath74 and @xmath75 .",
    "then with bounding function @xmath76 the following bounds hold for all @xmath77 with @xmath78 .",
    "@xmath79 where @xmath80 setting @xmath81 yields the deterministic worst - case bounds of the deterministic network calculus .",
    "the main advantage of working with service curves is the ability to express the end - to - end service available on a network path as a min - plus convolution of the service available at each node of the path . in the deterministic network calculus , if each node on a path of @xmath7 nodes offers a service curve of @xmath82 ( @xmath83 ) , a service curve for the entire path is given by @xmath84 .",
    "we refer to @xmath85 as _ network service curve_.    finding a network service curve in a statistical setting is difficult , and generally requires to introduce additional assumptions @xcite .",
    "a main result of this paper is a novel convolution theorem for a statistical network service curve , which will enable us to create improved statistical end - to - end bounds for many scheduling algorithms .",
    "[ thm : convolve ] consider a flow passing though a sequence of @xmath7 nodes .",
    "assume that at each node , the flow receives a statistical service curve @xmath86 with bounding function @xmath87 , where @xmath88 is a single non - negative parameter . for each @xmath89",
    ", assume that the bounding functions satisfy the tail estimate @xmath90 and that the service curves @xmath82 are non - increasing in @xmath88 with @xmath91_+\\,.\\end{aligned}\\ ] ] let @xmath92 and @xmath93 be arbitrary positive parameters .",
    "then , for the entire path , the flow is guaranteed the statistical service curve @xmath94_+\\ , , \\ ] ] with bounding function @xmath95    in the theorem , the function @xmath96 is defined as @xmath97 for a constant @xmath98",
    ". the min - plus convolution of a function @xmath69 with @xmath96 corresponds to a right - shift of the function by @xmath99 , that is , @xmath100 .    in case of a deterministic bound , obtained by first setting @xmath101 for all @xmath102 , and then taking @xmath103",
    ", we recover the classical deterministic convolution result for composing a network service curve .",
    "the theorem above generalizes a convolution theorem from  @xcite , by allowing more freedom in the construction of service curves . in @xcite ,",
    "service curves have the specific form @xmath104_+$ ] , but ( * ? ? ?",
    "* theorem  1 ) performs the convolution of service curves only for the functions @xmath105 , without the @xmath88 s . in contrast",
    ", the @xmath88 s enter into the convolution of eq .  . while carrying these parameters",
    "increases the complexity of the convolution , it yields network service curves that can more closely describe the behavior of certain schedulers .    in applications",
    ", we will make specific choices for @xmath106 and @xmath107 that simplify the computation .",
    "we will also choose @xmath108 as explicit functions of a single parameter @xmath28 .",
    "the impact of the new convolution on end - to - end delay computations is evaluated in sec .",
    "[ sec : eval ] .",
    "we first show without using the assumption in eq .",
    "( [ eq : s - property ] ) , that a network service curve is given by @xmath109 where the infimum ranges over the set @xmath110 , and the bounding function is as in the statement of the theorem .",
    "the claim follows from there by observing that @xmath111 in the argument of @xmath112 , and then using eq .",
    "( [ eq : s - property ] ) .    to establish eq .",
    "( [ eq : conv - proof-1 ] ) , we proceed by induction . for @xmath113 , there is nothing to show . for @xmath114 nodes ,",
    "we need to show that @xmath115 satisfies @xmath116 to see this , note that for every sample path where @xmath117 , there exists exists a point @xmath118 such that @xmath119 if , additionally , @xmath120 then , since @xmath121 , it follows that @xmath122 we claim that the event in eq .",
    "( [ eq : conv - samplapath ] ) occurs at least with probability @xmath123 . by definition ,",
    "the probability that the event in eq .",
    "( [ eq : conv - proof-3 ] ) fails is bounded by @xmath124 to estimate the event in eq .",
    "( [ eq : conv - proof-4 ] ) , we discretize the time variable @xmath125 by choosing an integer @xmath126 such that @xmath127 . if eq .",
    "( [ eq : conv - proof-4 ] ) fails , then the monotonicity of @xmath128 , @xmath129 , and @xmath130 implies that there exists a @xmath126 such that @xmath131 we conclude with the union bound that eq .",
    "( [ eq : conv - proof-4 ] ) fails with probability at most @xmath132 eq .  ( [ eq : conv - proof-2 ] ) follows with another application of the union bound .    for the inductive step , let @xmath133 , and assume that eq .",
    "( [ eq : conv - proof-1 ] ) holds for every sequence of @xmath134 nodes .",
    "given @xmath7 nodes , we first apply the inductive hypothesis to obtain for the last @xmath134 nodes the service curve @xmath135 where the infimum ranges over @xmath136 , and the bounding function is @xmath137 and then use the @xmath114 case with @xmath138 and @xmath139 in place of @xmath140 and @xmath141 .     and cross traffic . ]",
    "in this section , we obtain a statistical network service curve that describes the service available on an end - to - end path of network links , where each link realizes a packet scheduling algorithm . to characterize link schedulers",
    ", we use a general description of scheduling algorithms , referred to as @xmath9-scheduling , recently developed in @xcite .      consider a buffered link with a fixed capacity of rate @xmath1 and without buffer size constraints as shown in fig .",
    "[ fig : experiment_setup_1hop ] .",
    "we are interested in describing the performance of a ( through ) flow with arrival function @xmath142 at this link .",
    "the flow experiences cross traffic from a flow with arrival function @xmath143",
    ". we do not assume independence of through and cross traffic .",
    "on the contrary , the traffic can be correlated in an adversarial fashion .",
    "a scheduling algorithm at the link determines the order of transmission of backlogged traffic .",
    "we consider the class of work - conserving scheduling algorithms whose operation can be entirely described by a set of constants @xmath144 where @xmath145 and @xmath146 indicate flow indices . for two backlogged packets @xmath147 and @xmath148 from flows @xmath145 and @xmath146 , the scheduler selects @xmath147 over @xmath148 for transmission , if @xmath148 arrives more than @xmath144 time units after @xmath147 .",
    "schedulers that can be described in this fashion are referred to as _",
    "@xmath9-schedulers_. special cases are fifo ( @xmath149 ) and static priority ( @xmath150 , if the priority of flow  @xmath145 is lower than that of flow @xmath146 , and @xmath151 , if the priority of flow  @xmath145 is higher than that of flow  @xmath146 ) .",
    "a @xmath9-scheduler with non - zero but finite values of @xmath144 can be implemented by an algorithm that tags each packet arrival with a timestamp consisting of the sum of the arrival time and a flow - specific value ( e.g. , a target delay ) , and transmits packets in the order of timestamps . here , the value of @xmath144 is the difference of the tags assigned to through and cross traffic .",
    "for example , the earliest - deadline - first can be realized by setting @xmath152 , where @xmath153 and @xmath154 are the a priori delay bounds of flows @xmath145 and @xmath146 .    for any @xmath9-scheduler operating at a buffered link with capacity @xmath1 where the cross traffic is bounded by a statistical sample path envelope given by @xmath155 and @xmath156 ,",
    "it was shown in  @xcite that , for any choice of @xmath157 , the function [ eq - leftover - srvcrv ] ",
    "( t ; ) = _ + i_t >  , is a statistical service curve with bounding function @xmath158 , and @xmath159 denotes the indicator function , with @xmath160 if the expression ` @xmath161 ' is true , and @xmath162 otherwise .",
    "also , @xmath163 , where @xmath9 is the constant for the precedence of the through traffic with arrival function @xmath142 relative to the cross traffic with arrival function @xmath143 .",
    "( note : we denote @xmath164 since we only work with the constant for arrivals @xmath142 relative to @xmath143 . ) for a single node , the service curve characterization from eq .   was shown to yield a tight delay analysis , provided that cross traffic and through traffic are characterized by concave deterministic sample path envelopes @xcite .",
    "we next apply theorem  1 to construct a network service curve for @xmath9-schedulers along a network path as shown in fig .",
    "[ fig : case - study ] , where the through flow traverses a tandem of @xmath7 buffered links with @xmath9-scheduling , and with cross traffic .",
    "the arrivals of the cross flow and the @xmath9-scheduler can be different at each link .",
    "we use @xmath165 to denote the constant of the @xmath9-scheduler at the @xmath166-th node .",
    "arrivals to the cross flow at the @xmath166-th node , @xmath167 , conform to an ebb model , as given by eq .",
    "( [ eq : sample - path - sigma ] ) , with rate @xmath168 and exponentially decaying violation probability @xmath169 .    inserting the statistical sample - path envelope for an ebb cross flow from eq .   into eq .",
    "( [ eq - leftover - srvcrv ] ) , we obtain for the through flow at node  @xmath166 the service curve and the bounding function @xmath170_+i_{t>\\theta_h } , \\\\",
    "\\eps_h(\\sigma_h )   & = m_h e\\bigl(1+\\frac{\\rho_h}{\\gamma}\\bigr )      e^{-\\alpha_h\\sigma_h}\\,.\\end{aligned}\\ ] ] here , @xmath50 is an arbitrary constant . to simplify the computation of the convolution",
    ", we replace this service curve with the lower bound @xmath171_+\\bigr]_+i_{t>\\theta_h}.\\end{aligned}\\ ] ] the replacement comes without loss for @xmath172 , and a reduction by at most @xmath173_-$ ] for @xmath174 , where we use @xmath8_- = \\max \\{-x , 0\\}$ ] .",
    "the key point is that the right hand side of eq .",
    "( [ eq - per - node - srv - crv - appx ] ) is concave and strictly increasing in @xmath64 as soon as it is positive .",
    "we apply theorem  [ thm : convolve ] with the free parameters set to @xmath175 and @xmath176 for @xmath177 , where @xmath178 and @xmath51 are chosen below . by eq .",
    "( [ eq : conv - formula ] ) , @xmath179_+\\\\    & \\ge \\left [ \\s_1 * \\cdots * \\s_h - ( h-1)\\gamma t\\right]_+ * \\delta_{\\tau_{\\rm net}}(t ) -(h\\!-\\!1)\\gamma\\tau_{\\rm net}\\ , , \\label{eq : snet - delta}\\end{aligned}\\ ] ] where we use @xmath28 to mean @xmath180 . to evaluate the term inside the square brackets in the second line , we may equivalently convolve the functions @xmath181_+$ ] . for each of these factors ,",
    "we write @xmath182_+   = \\left [ ( c_h-(h\\!-\\!1)\\gamma)t    -   [ ( \\rho_h\\!+\\!\\gamma)(t\\!-\\!\\theta_h\\!+\\!\\delta^h(\\theta_h ) ) + \\sigma_h]_+\\right]_+i_{t>\\theta_h }   \\,.\\ ] ] if we choose @xmath183 large enough so that @xmath184_+ } _ { = : u_h}\\ge 0\\ , , \\label{eq : formula - uh } \\end{aligned}\\ ] ] then we can re - write eq .   as @xmath185_+   = \\widetilde \\s_h * \\delta_{\\theta_h}(t)\\ , , \\ ] ] with @xmath186 since",
    "each of the @xmath187 is concave and strictly increasing in  @xmath64 , their convolution is given by the pointwise minimum @xmath188 using the associativity and commutativity of the min - plus convolution , we obtain from eq .",
    "the network service curve @xmath189 the bounding function is computed with theorem  [ thm : convolve ] as @xmath190    a probabilistic network service curve for a cascade of @xmath9-schedulers has been computed in @xcite by applying a convolution theorem for service curves from @xcite .",
    "this required to bring the service curves into the form @xmath104_+$ ] , which resulted in a pessimistic service curve of the form @xmath191_+ - \\sigma_h\\right]_+\\!i_{t>\\theta_h } \\!.",
    "\\end{aligned}\\ ] ] while the difference in the placement of @xmath88 compared to eq .   may appear subtle , the evaluation in sec .",
    "[ sec : eval ] will show that the service curve together with the new convolution theorem ( theorem  [ thm : convolve ] ) results in substantially improved bounds .",
    "in this section , we apply the performance bounds ( from sec .",
    "[ subsec : bounds ] ) with the network service curve for @xmath9-schedulers ( from sec .",
    "[ sec : e2e - analysis ] ) to a through flow that traverses a network as shown in fig .",
    "[ fig : case - study ] .",
    "we will make choices for the free parameters  @xmath183 appearing in eq .",
    "( [ eq - leftover - srvcrv ] ) , so that we can obtain explicit bounds on the distribution of the output burstiness from the last node , the end - to - end backlog , and the end - to - end delay .",
    "the bounds apply to both deterministic ( worst - case ) and statistical assumptions .",
    "consider the same network as described in sec .",
    "[ sec : delta ] .",
    "the through traffic is an ebb flow with arrival function @xmath192 .",
    "we assume that the stability condition @xmath193 holds , and choose @xmath51 such that @xmath194    to formulate the performance bounds , we need to introduce some more notation .",
    "let @xmath195    and choose    @xmath196    for any given value of @xmath28 , the smallest value of @xmath183 that makes @xmath197 for all @xmath40 ( see eq .  ) is given by @xmath198_+}{c_h-(h-1)\\gamma}\\right\\}\\,,\\ ] ] and the corresponding value for @xmath199 is given by @xmath200_-\\,.\\ ] ]    for the network in fig .",
    "[ fig : case - study ] , let @xmath201 denote the output of the through traffic from the last ( @xmath7-th ) node .",
    "let @xmath202 and @xmath203 , respectively , denote the total backlog and delay of the through traffic in the network of @xmath7 nodes .",
    "[ thm : closed - form ] with the above notation and definitions , the following bounds hold .",
    "@xmath204 output burstiness : @xmath205 where    @xmath206    @xmath204 end - to - end backlog : @xmath207    @xmath204 end - to - end delay : @xmath208 where @xmath209    the output bound shows that the departing traffic satisfies the ebb model . in the expressions for @xmath210 and @xmath211 ,",
    "the second term quantifies the contribution of the through flow s burstiness to the delay at the bottleneck link , and the last term sums up the contributions of the burstiness of the cross flows . on long paths ,",
    "i.e. , for @xmath7 large , the last term will dominate the second term .",
    "an important observation is that all bounds increase with  @xmath165 , and that the difference between end - to - end delay and backlog bounds for different schedulers grows linearly with the number of nodes .",
    "this clearly indicates that the impact of the scheduling algorithm on end - to - end performance bounds does not diminish on long network paths for these schedulers .    in a discrete - time",
    "setting ( where @xmath212 ) , the bounds in the theorem hold with @xmath213 , and with eq .",
    "( [ eq : mnet ] ) replaced by @xmath214    we insert the network service curve from theorem  1 into the performance bounds from sec .  [ subsec : bounds ] .",
    "since @xmath215 , the bounding function evaluates to @xmath216    the backlog bound is given by @xmath217 . for @xmath218 , we compute this deconvolution as @xmath219_+\\!(0)\\\\ \\label{eq : bsigma } & \\le   \\g_0 \\bigl(\\tau_{\\rm net } + \\sum_{h=1}^{h}\\theta_h\\bigr )   + ( h-1)\\gamma \\tau_{\\rm net}\\,.\\end{aligned}\\ ] ] in the first line , we have used our representation for the network service curve from eq .  .",
    "the key step is the second line , where we use that @xmath220 is concave and @xmath221 is convex for @xmath40 , and that @xmath222 for @xmath64 is sufficiently large by the stability condition and our choice of @xmath51 . plugging in @xmath223 , we obtain the desired backlog bound .",
    "the same computation gives the bound on the output burstiness .",
    "we turn to the delay bound . for @xmath224 , the delay bound from theorem  [ thm : closed - form ]",
    "is given by @xmath225 by eq .",
    "( [ eq : snet - tildesnet ] ) , and using as above the concavity of @xmath220 and the stability assumption , we arrive at @xmath226 expressing the function @xmath220 in terms of the @xmath227 , we see that the minimum is assumed for @xmath228 inserting @xmath223 and @xmath229 for @xmath230 completes the proof .",
    "we note that @xmath223 is the optimal choice for the backlog and output bounds . to see this , observe that a selection in the range @xmath231 decreases @xmath187 , resulting in a smaller network service curve . on the other hand , from eq .",
    "( [ eq : bsigma ] ) it is apparent that @xmath210 increases for @xmath232 .",
    "we will see in the next section that the backlog bound is highly accurate , and in many cases tight .    for the delay bound in eq .  , the optimal choice for  @xmath183 is not obvious , since  @xmath199 can be increased by taking  @xmath232 , which may result in a smaller value for @xmath211 .",
    "the choice @xmath223 is clearly suboptimal when @xmath233 is small and the path is short , i.e. , when the cross traffic consumes most of the bandwidth . in the case of a single node ( @xmath113 ) and deterministic arrival bounds , choosing @xmath234 recovers known necessary and sufficient conditions for delay bounds",
    "e.g. , @xcite . for long paths ( @xmath235 large )",
    ", it is plausible that the choice @xmath223 , which is optimal for backlog and output , also leads to acceptable delay bounds .",
    "we will see in the next section that this is indeed the case .",
    "stronger delay bounds than those stated in the theorem can be obtained by solving the following optimization problem : @xmath236 subject to the constraints that @xmath237 and    @xmath238    where @xmath199 and @xmath239 are defined in eqs .   and  .",
    "this optimization problem is convex if all @xmath165 are non - positive , but convexity does not hold if @xmath240 for at least one node . nevertheless , the problem is tractable , because the objective function is linear in the variables @xmath241 and @xmath242 .",
    "we will see in the evaluation that this optimization sometimes ( i.e. , for @xmath7 small ) improves the closed - form delay bound of theorem  [ thm : closed - form ] . for fifo networks ( all @xmath243 ) and deterministic traffic ( @xmath244 )",
    "the optimization recovers existing deterministic end - to - end delay bound for feedforward networks in @xcite .",
    "we now address the tightness of the bounds in theorem  [ thm : closed - form ] .",
    "we consider the same network as in the previous section , but assume a deterministic context , where the arrivals of the through traffic and cross traffic at the @xmath166-th node satisfy the deterministic sample path envelopes @xmath245 and @xmath246 ( @xmath247 ) , respectively .",
    "we denote a deterministic sample path envelope for the departing through traffic at the @xmath7-th node by @xmath248 .",
    "we obtain worst - case bounds by setting @xmath249 in the expressions for @xmath250 in eq .   and @xmath251 in eq .  , yielding @xmath252_+}{c_h}\\right\\}\\,,\\ ] ] and @xmath253_-\\,.\\ ] ] also ,",
    "setting @xmath249 in theorem  [ thm : closed - form ] , we obtain the following bounds , denoted by @xmath254 , and @xmath255 .",
    "* output burstiness : @xmath256 * end - to - end backlog : @xmath257 * end - to - end delay : @xmath258    for the special cases of priority scheduling where through traffic has lower priority ( @xmath259 ) or higher priority ( @xmath260 ) , we obtain @xmath261 these bounds are known to be tight , which can be verified with elementary methods of the deterministic network calculus  @xcite .    in the remainder of this section , we evaluate the tightness of the bounds for @xmath9-schedulers with finite values of @xmath9 . for this , we consider specific adversarial sample path scenarios for through and cross traffic , and compute the maximal observed end - to - end delay and backlog . for any specific arrival scenario ,",
    "let @xmath262 and @xmath263 denote the maximal end - to - end backlog and delay , respectively , of the through traffic .",
    "clearly , any @xmath264 and @xmath265 , respectively , are lower bounds for the worst - case end - to - end backlog and delay .    for @xmath266",
    ", there exists a scenario of through and cross traffic that satisfies the assumptions stated above , such that @xmath267 with @xmath268_+ - c_h[\\delta^h]_-]_+}{c_h } \\right\\ } .",
    "\\end{aligned}\\ ] ]    the theorem implies that the backlog bound in eq .   is sharp when @xmath269 for @xmath230 , and , in particular , for fifo . for @xmath270 , observe that eq .",
    "implies that @xmath271_- \\ .\\ ] ] here , the deviation @xmath272 is due to the relaxation of the service curve in eq .  .",
    "the delay bound , although not sharp , describes actual delays in adversarial scenarios rather well , particularly on long paths .",
    "we conjecture that an optimal choice of the @xmath183 would result in a delay bound that is as good as the backlog bound .    for the arrivals at the first node , we set @xmath273 we time the cross traffic to have a maximal burst just before time @xmath274 , if @xmath275 , and just before @xmath276 , if @xmath277 , resulting in @xmath278_-)\\,,\\ ] ] where @xmath279 is an infinitesimally small number .    a careful analysis of the backlog from the cross flow at time @xmath280_+$ ] , yields that the first bit of the through flow experiences a latency of @xmath281 .",
    "we can construct similar scenarios for cross traffic arrivals at subsequent nodes . for the @xmath166-th node",
    ", we time the arrival of a cross traffic burst relative to the arrival of the first bit of through traffic , by setting    @xmath282_-\\bigr)\\,.\\ ] ] then , the initial latency of the through flow is increased at the @xmath166-th node by  @xmath283 .",
    "it follows that the first bit of the through flow departs from the last node at time @xmath284 , and so    @xmath285 proving eq .  .",
    "now , consider the delay of the initial burst of the through flow . from the backlog analysis , we know that the first bit of the burst experiences a delay of @xmath286 . since the rest of the burst can not be transmitted faster than at the rate of the slowest link , we obtain eq .  .",
    "we present a numerical evaluation of the end - to - end bounds derived in this paper for deterministic and statistical arrival scenarios .",
    "we consider a network as in fig .",
    "[ fig : case - study ] , where we assume for simplicity that all nodes have the same capacity of @xmath287  mbps and use the same @xmath9-scheduler .",
    "we use a discrete - time setting with a step size of 1  ms .",
    "the traffic arrivals of a flow follow an alternation of on and off phases , where , in the on phase , a flow transmits at rate @xmath288  mbps , and the long term average arrival rate is @xmath289  mbps .",
    "the total traffic load at each node is set to 600  flows with @xmath290 through flows and @xmath291 cross flows , resulting in a link utilization of @xmath292% .    for deterministic arrival scenarios ,",
    "we characterize flows by a deterministic sample path envelope @xmath293 .",
    "we choose the value of @xmath28 such that the aggregate burstiness of all cross flows is 300  kb , and likewise for the through flows .",
    "( selecting equal burst sizes for aggregate through and cross traffic provides a good separation of our upper and lower bounds for worst - case end - to - end delays . ) note that the deterministic scenario does not account for statistical multiplexing , i.e. , the burst size of @xmath294 flows is @xmath294 times the burst of one flow .    for statistical traffic , we assume that the arrivals of each flow are given by a discrete - time markov - modulated on - off process , with an on state ( @xmath295 ) and an off state ( @xmath296 ) .",
    "the probabilities to change states are given by @xmath297 and @xmath298 .",
    "the ebb characterization for the aggregate through and cross traffic can be obtained using the effective bandwidth @xmath299 from ( e.g. , @xcite , page 292 ) , resulting in ebb parameters for the aggregate through traffic of @xmath300 , @xmath301 , and @xmath302 selected to achieve high statistical multiplexing gain .",
    "the parameters for the cross traffic are chosen accordingly .",
    "we assume that the through flows are independent of each other , and that the cross flows are independent ; however , through and cross traffic is not independent .",
    "thus , we observe statistical multiplexing for the group of through flows and the group of cross flows , but not across the groups .    for the discussion of the examples , recall that @xmath303 corresponds to fifo , @xmath304 to priority scheduling with low priority for through traffic , and @xmath305 to priority scheduling with high priority for through traffic .",
    "we evaluate the tightness of our delay bounds for the deterministic arrival scenario described above .",
    "we compute the end - to - end delay bounds of the through traffic for different @xmath9-schedulers as a function of the number of nodes  @xmath7 .",
    "we present the closed - form delay bound @xmath255 according to eq .",
    ", the bound computed with the optimization according to eq .",
    "( with @xmath306 , since we are in a deterministic scenario ) , and the lower bound for the worst - case delay from eq .  .",
    "the results are shown in fig .",
    "[ fig : det_e2e_delay ] .",
    "the closed - form delay bounds track the bounds from the optimization very closely , and are virtually identical for long paths . both upper bounds are highly accurate compared to the lower bound on the worst - case delay .",
    "note that the differences between the delay bounds for different scheduling algorithms increase proportionally to the number of traversed nodes .",
    "thus , in contrast to the scenario discussed in the introduction of the paper , we observe that the impact of scheduling is just as strong on long paths as on a single node .    ) . ]      for the remaining examples , we use the statistical traffic scenario .",
    "we first evaluate the benefit our convolution result , by comparing statistical delay bounds computed with the previously best convolution result from @xcite , to the delay bounds obtained with the new convolution result in theorem  1 .",
    "the delay bound computation for @xmath9-schedulers with the convolution result from @xcite uses an optimization , which is described in @xcite . for delay bounds computed with theorem  1",
    ", we evaluate the closed - form expression from theorem  [ thm : closed - form ] , as well as the optimization in eq .  .",
    "we use a fixed violation probability of @xmath307 .    in fig .",
    "[ fig : convolution ] , we show the end - to - end delay bounds of the through traffic for different @xmath9-schedulers for increasing path length . in all cases ,",
    "the closed - form delay bounds are very close to the bounds obtained by the optimization . for @xmath304 ,",
    "i.e. , a priority scheduler where through traffic has lowest priority , the delay bounds obtained with the new convolution theorem give the same results as @xcite .",
    "otherwise , the new convolution theorem results in dramatically improved delay bounds , especially for long paths .",
    "our results clearly motivate the need for our new statistical network service curve expression for schedulers with @xmath308 .",
    "in fact , the delay bounds obtained with the ` old ' convolution method for service curves show a similar growth rate for large @xmath7 , thus , systematically underestimating the difference between schedulers .    ) . ]    ) . ]",
    "[ fig : backlog_violationp ] shows the tail distribution for the backlog of the through traffic for a path of @xmath309  nodes .",
    "the graph shows that the backlog distribution divides the @xmath9-schedulers into two groups : one for large values of @xmath9 , and one for small and negative values of @xmath9 . in the first group , through traffic",
    "is treated effectively as low - priority traffic .",
    "the second group has a backlog distribution similar to fifo ( @xmath303 ) , indicating that this desirable property of fifo scheduling extends to some non - fifo algorithms .      studying the burstiness of the output traffic further corroborates the findings of the previous example . here , we compute bounds for the output of the through traffic for different choices of @xmath9 and @xmath7 , by applying the closed - form bound for @xmath201 from theorem  2 .    in fig .",
    "[ fig : decompose ] we show the burst size of the output bound for a violation probability @xmath310 in a bar chart .",
    "( the rate values are omitted since the long - term traffic rate does not change at the output of a link . ) for comparison , the leftmost bar shows the burst of the through traffic arrivals at the first node . for large values of @xmath9 , we see that the burstiness increases sharply . for values of @xmath9",
    "close to zero or negative , we observe only a modest increase of the burstiness at the output , even when the number of nodes is large . as a result ,",
    "the arrival process at downstream nodes is not markedly different from that at the first node .",
    "since modest increases of output burstiness are an important condition for a network decomposition analysis , e.g. , see @xcite , our work suggests that conditions for decomposition may not be limited to fifo networks .",
    "the analytical methods and closed - form expression developed in this paper vastly enhance available methods for end - to - end performance analysis in networks with deterministic and statistical traffic . with our analysis",
    ", it is now possible to make conclusive statements about the role of link scheduling in large networks .",
    "contrary to conventional wisdom , we showed that the impact of link scheduling generally does not diminish on long network paths .",
    "we also shed light on a group of scheduling algorithms that provide service differentiation without the penalties of strict priority scheduling in terms of buffer requirements and deterioration of the burstiness of traffic ."
  ],
  "abstract_text": [
    "<S> we study how the choice of packet scheduling algorithms influences end - to - end performance on long network paths . </S>",
    "<S> taking a network calculus approach , we consider both deterministic and statistical performance metrics </S>",
    "<S> . a key enabling contribution for our analysis is a significantly sharpened method for computing a statistical bound for the service given to a flow by the network as a whole . for a suitably parsimonious traffic model we develop closed - form expressions for end - to - end delays , backlog , and output burstiness . </S>",
    "<S> the deterministic versions of our bounds yield optimal bounds on end - to - end backlog and output burstiness for some schedulers , and are highly accurate for end - to - end delay bounds . </S>"
  ]
}
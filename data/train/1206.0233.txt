{
  "article_text": [
    "colouring a graph is the problem of finding the minimal number of colours required to assign each vertex a colour such that no adjacent vertices have the same colour .",
    "it is a classic problem in computer science and one of karp s  21 np - complete problems @xcite .",
    "colouring remains np - complete if bounded to three colours @xcite .",
    "also , if a 3-colourable graph is given , it remains np - hard to find a colouring , even if four colours are allowed @xcite .",
    "dually chordal graphs are closely related to chordal graphs , hypertrees and @xmath2-acyclic hypergraphs , which also explains the name of this graph class ( see @xcite for more ) .",
    "section  [ sec : duallychordal ] will show , that colouring is np - complete for dually chordal graphs if bounded to four colours .",
    "so the aim of this paper is to find a linear time algorithm for the 3-colouring problem .",
    "next to the classic vertex colouring problem , there are the problems of colouring only edges or edges and vertices of a graph . for",
    "dually chordal graphs they have been investigated by de  figueiredo et  al .  @xcite .",
    "let @xmath3 be a graph with the vertex set @xmath4 , the edge set @xmath5 . for this paper ,",
    "any graph is finite , undirected , connected and without loops or multiple edges . for a set @xmath6 , @xmath7",
    "$ ] denotes the induced subgraph of @xmath0 with the vertex set @xmath8 .",
    "let @xmath9 be the complement of @xmath0 , such that @xmath10 .",
    "a set of vertices @xmath11 is a _ clique _ if for each pair @xmath12 ( @xmath13 ) , @xmath14 and @xmath15 are adjacent .",
    "a clique of size @xmath16 is denoted as @xmath17 .",
    "the number of vertices in a maximum clique in @xmath0 is the _ clique number @xmath18 _ of @xmath0 .",
    "diamond _ be a graph with four vertices and five edges .",
    "the edge connecting the vertices with degree 3 is called _ mid - edge_. a _ chordless cycle _ @xmath19 has @xmath20 vertices @xmath21 and the edges @xmath22 ( index arithmetic modulo @xmath20 ) .",
    "if a chordless cycle has at least five vertices , it is also called @xmath23 . a _ wheel _",
    "@xmath24 is a @xmath19 plus a vertex @xmath25 and the edges @xmath26 ( @xmath27 ) . a chordless cycle @xmath19 or wheel @xmath24 is _ odd _",
    "if @xmath20 is odd .    let @xmath28 denote the _ open _ and @xmath29 : = n(v ) \\cup \\{v\\}$ ] the _ closed neighbourhood _ of the vertex @xmath15 .",
    "a graph is _ locally connected _ if for all vertices @xmath15 the open neighbourhood @xmath30 is connected .",
    "a vertex @xmath31 $ ] is a _",
    "maximum neighbour _ of @xmath15 , if for all @xmath32 $ ] , @xmath33 \\subseteq n[u]$ ] holds .",
    "note that @xmath34 is not excluded .",
    "a vertex ordering @xmath35 is a _",
    "maximum neighbourhood ordering _",
    "if every @xmath36 ( @xmath37 ) has a maximum neighbour in @xmath38 $ ] .",
    "a vertex @xmath15 is an articulation point of @xmath0 if @xmath39 $ ] is not connected . if a graph has no articulation point it is _ biconnected _ ( or _ 2-connected _ ) .",
    "maximal biconnected subgraphs are called _",
    "blocks_. any connected graph can decomposed into a block tree .",
    "if two blocks intersect , they have exactly one common vertex which is an articulation point .",
    "an _ independent set _ is a vertex set @xmath40 such that for all vertices @xmath41 , @xmath42 holds . a graph is _",
    "@xmath20-colourable _ if @xmath4 can be partitioned into @xmath20 independent sets @xmath43 with @xmath44 and @xmath45 ( @xmath46 ) .",
    "the _ chromatic number _",
    "@xmath47 of a graph @xmath0 is the lowest @xmath20 such that @xmath0 is @xmath20-colourable .",
    "the _ @xmath20-colourability _ problem asks if a graph is @xmath20-colourable .",
    "accordingly the _ colourability _ problem asks for the chromatic number of a graph .",
    "it is easy to see , that 2-colourability can be solved in linear time for each graph .",
    "a graph @xmath0 is _ perfect _ if for each induced subgraph @xmath48 of @xmath0 the chromatic and the clique number are equal ( @xmath49 ) .",
    "chudnovsky et  al .",
    "@xcite have shown that a graph is perfect if and only if it is @xmath50-free for all @xmath51 .",
    "this is known as the strong perfect graph theorem .",
    "perfect graphs can be recognised and coloured in polynomial time @xcite@xcite .    for a graph @xmath0",
    ", @xmath52 denotes the _ clique graph _ of @xmath0 , where each vertex in @xmath52 represents a maximal clique of @xmath0 and two vertices are connected if the corresponding cliques have a common vertex , i.e. @xmath53 with @xmath54 and @xmath55 .",
    "a graph @xmath0 is _ chordal _ if it is @xmath19-free ( @xmath56 ) .",
    "a graph is _ clique - chordal _ if its clique graph is chordal .",
    "dually chordal graphs are originally defined by a maximum neighbourhood ordering .",
    "a graph is _ dually chordal _ if and only if it has a maximum neighbourhood ordering .",
    "brandstdt et  al .",
    "@xcite give an overview of characterisations for dually chordal graphs .",
    "one of it allows to recognise graphs of this class in linear time ( with an algorithm by tarjan and yannakakis  @xcite ) .",
    "another characterisation was developed in  @xcite :    [ theo : dcdef ] let @xmath57 the set of vertices on the path from @xmath14 to @xmath15 in the tree @xmath1 , with @xmath58 . for a graph @xmath3 the following conditions are equivalent :    1 .",
    "@xmath0 is dually chordal .",
    "[ item : dcdefcliquetree ] there is a spanning tree @xmath1 of @xmath0 such that every maximal clique of @xmath0 induces a subtree in @xmath1 .",
    "[ item : dcdefpathtree ] there is a spanning tree @xmath1 of @xmath0 such that for every edge @xmath59 the following holds : @xmath60    [ lem : cliquetreeequalpathtree ] the spanning trees in conditions  [ item : dcdefcliquetree ] and [ item : dcdefpathtree ] of lemma  [ theo : dcdef ] are equal .    since @xmath57 does not include the vertices @xmath14 and @xmath15 , ( according to the notation for the open and closed neighbourhood ) let @xmath61 : = p_t(u , v ) \\cup \\{u , v\\}$ ] .    if @xmath59 then @xmath61 $ ] is a clique .",
    "is is easy to see that an arbitrary graph becomes dually chordal if a vertex adjacent to all vertices is added .",
    "this leads to a reduction for several np - complete problems , including colourability .",
    "the idea for this method was already given by brandstdt et  al .",
    "@xcite .",
    "[ theo:4coldc ] 4-colourability is np - complete for dually chordal graphs .",
    "let @xmath3 be an arbitrary graph .",
    "thus , @xmath62 with @xmath63 is dually chordal .",
    "it follows that @xmath0 is 3-colourable if and only if @xmath64 is 4-colourable .",
    "because 3-colourability is np - complete in general  @xcite , 4-colourability is np - complete for dually chordal graphs .",
    "obviously a graph has to be @xmath65-free to be 3-colourable .",
    "so this section investigates @xmath65-free dually chordal graphs .    for this section let @xmath3 be a @xmath65-free dually chordal graph .",
    "the spanning tree @xmath66 of @xmath0 and the set @xmath61 $ ] are defined as in condition  [ item : dcdefpathtree ] of theorem  [ theo : dcdef ] and the paragraph after lemma  [ lem : cliquetreeequalpathtree ] .",
    "[ cor : k4freepedges ] if @xmath59 then @xmath67| \\leq 3 $ ] , i.e. @xmath68 .    for the next lemma the notion of a _ route _ is defined :    a _ route _ on @xmath0 is a list of vertices @xmath69 such that @xmath70 or @xmath71 for all @xmath72 .",
    "[ lem : circlewheel ] let @xmath73 be a @xmath19 in @xmath0 with @xmath56 .",
    "there is a vertex @xmath74 such that @xmath73 and @xmath74 form a wheel .",
    "also no edge of @xmath73 is in @xmath1 .",
    "let @xmath73 be a chordless cycle with the vertices @xmath75 ( @xmath56 ) and the edges @xmath76 ( index arithmetic modulo @xmath20 ) . based on corollary  [ cor : k4freepedges ] for every edge",
    "there is the set of vertices @xmath77 = \\",
    "{ c_i , w_i , c_{i+1 } \\}$ ] with @xmath78 if and only if @xmath79 .",
    "thus , it is possible to build a route @xmath80 on @xmath1 ( see figure  [ fig : circlewheel ] ) .",
    "and the route @xmath81 ( waved ) . ]    because all the edges of @xmath81 are in @xmath1 , @xmath81 also induces a tree .",
    "therefore @xmath81 can be eliminated by removing leaves .",
    "let @xmath82 be a subroute of @xmath81 and @xmath36 a leaf .",
    "thus , if @xmath83 and @xmath84 then @xmath85 , so @xmath86 or @xmath87 can also removed from @xmath81 with @xmath36 .    now assume that no vertex of @xmath73 is a leaf . in this case",
    "a vertex @xmath88 is a leaf .",
    "so it follows , that @xmath89 . therefore there must be a leaf @xmath90 and also @xmath91 ( otherwise @xmath92 )",
    "this allows to remove @xmath90 and @xmath88 from @xmath81 .    continuing this procedure",
    ", it follows that @xmath93 and @xmath94 for all @xmath16 .",
    "thus , no edge @xmath76 is an edge of @xmath1 and there is a vertex @xmath74 , such that @xmath73 and @xmath74 form a wheel .",
    "[ theo:3coliffperfect ] a dually chordal graph @xmath0 is 3-colourable if and only if @xmath0 is perfect and @xmath65-free .",
    "@xmath95 by definition of perfect graphs .",
    "@xmath96 @xmath0 is 3-colourable , so it is @xmath65-free .",
    "let @xmath97 .",
    "it is easy to see , that no @xmath98 is 3-colourable .",
    "therefore , @xmath0 has no @xmath98 . from the 3-colourability it also follows that there is no odd wheel in @xmath0 and by lemma  [ lem : circlewheel ] no odd hole ] .",
    "thus , by the strong perfect graph theorem , @xmath0 is perfect ( recall , @xmath99 ) .",
    "theorem  [ theo:3coliffperfect ] now leads to a polynomial time algorithm for 3-colourability of dually chordal graphs .",
    "after showing that there is a polynomial time algorithm , this section presents a linear time algorithm for 3-colourability of dually chordal graphs based on the following theorem :    [ theo : locconconstruction ] each connected locally connected graph can be constructed by starting with an arbitrary edge and then add only vertices that has at least two adjacent neighbours in the already constructed graph .",
    "let @xmath100 be the ordering the vertices are added to construct a locally connected graph @xmath3 starting with an edge @xmath101 . also let @xmath102 with @xmath103 and @xmath104",
    ".    now let @xmath105 $ ] ( @xmath106 ) be a locally connected subgraph of @xmath0 .",
    "assume , there is no vertex  @xmath74 adjacent to two vertices in @xmath107 . then @xmath0 is not connected or @xmath74 has only one neighbour  @xmath108 in @xmath107 . in second case , because @xmath0 is locally connected , there is a vertex set @xmath109 connecting @xmath74 with the neighbours of @xmath108 that are already in @xmath107 .",
    "thus , there is a vertex @xmath110 adjacent to @xmath108 and a neighbour of @xmath108 in @xmath107 .",
    "therefore , set @xmath111 .",
    "theorem  [ theo : locconconstruction ] allows to colour graphs whose blocks are locally connected by using the following strategy : select an uncoloured vertex with a minimal number of available colours and give it an available one . repeat this until all vertices are coloured or there is no available colour for a vertex .",
    "algorithm  [ algo:3colloccon ] describes this more detailed :    [ algo:3colloccon ]   + * input : * a graph @xmath3 whose blocks are locally connected . +",
    "* output : * a 3-colouring for @xmath0 if and only if @xmath0 is 3-colourable .    1 .",
    "give every vertex @xmath15 a set of available colours @xmath112 . also every vertex gets the possibility to get marked as coloured . at the beginning",
    "no vertex is marked .",
    "2 .   * while * there are uncoloured vertices 1 .   select an uncoloured vertex  @xmath15 for which @xmath113 is minimal .",
    "if @xmath114 , * stop : * @xmath0 is not 3-colourable .",
    "3 .   disable all but one colour in @xmath115 and mark @xmath15 as coloured .",
    "4 .   disable @xmath115 for all neighbours of @xmath15 ( @xmath116 ) .",
    "[ theo:3collocconalog ] algorithm  [ algo:3colloccon ] works correctly and can be implemented in linear time .",
    "_ correctness_. after selecting the first two vertices , the algorithm only selects vertices with two adjacent neighbours , i.e. with @xmath117 , until all vertices of a locally connected block are coloured ( theorem  [ theo : locconconstruction ] ) .",
    "therefore , the colouring is unique for a locally connected block .    also , if a vertex  @xmath15 with @xmath118 and the coloured neighbour  @xmath14 is selected , @xmath14 is an articulation point .",
    "this allows to treat @xmath14 and @xmath15 as the first coloured vertices of a locally connected graph .",
    "therefore , each available colour for @xmath15 leads to a correct colouring .",
    "_ complexity_. it is easy to see , that line  1 runs in linear time and line  2(b ) in constant time such as line  2(c ) .",
    "line  2(d ) is bounded by the number of neighbours . because @xmath119 , the full time needed ( overall iterations ) for line  2(d ) is in @xmath120 .",
    "line  2(a ) can be implemented by using three doubly linked lists as queues .",
    "the lists include the uncoloured vertices .",
    "one is for vertices with @xmath121 , one for @xmath118 and one for @xmath117 .",
    "if there is also a pointer from each vertex to its entry in the list , adding and removing a vertex can be done in constant time .",
    "thus , line  2(a ) runs in constant time .    another linear time algorithm for 3-colourability of locally connected graphs",
    "was presented by kochol  @xcite , but is more complicated .",
    "dually chordal graphs are a subclass of clique - chordal graphs @xcite .",
    "the next lemma will show , that a 3-colouring for clique - chordal graphs can be be found with algorithm  [ algo:3colloccon ] .",
    "each block of a clique - chordal graphs is locally connected .",
    "let @xmath122 be a clique - chordal graph and @xmath123 its clique graph .",
    "assume that @xmath0 has a block which is not locally connected .",
    "then there is a vertex  @xmath15 such that its neighbourhood is not connected and it is no articulation point .",
    "therefore , there is a chordless cycle @xmath124 fulfilling the conditions that there is no path in @xmath125 $ ] connecting the two neighbours of @xmath15 in @xmath124 .",
    "let @xmath126 be the smallest @xmath124 and using the following notation : @xmath14 , @xmath15 , @xmath74 and @xmath127 , @xmath128 , @xmath129 are vertices of @xmath126 with @xmath130 , @xmath131 , @xmath132 , @xmath133 , @xmath134 , @xmath135 and @xmath136 . if @xmath126 is a @xmath137 , then @xmath138 and @xmath139 .",
    "figure  [ fig : cycleproofcliquechordal ] illustrates this notation .     and the vertex  @xmath140 . ]",
    "there is no clique in @xmath0 that contains two edges of @xmath126 , otherwise @xmath126 would not be chordless .",
    "thus , each edge represents another clique of @xmath0 .",
    "let @xmath141 , @xmath142 , @xmath143 and @xmath144 denote these cliques .",
    "because the cliques have a common vertex if the corresponding edges have one , they are forming a cycle @xmath145 in @xmath146 .",
    "@xmath146 is chordal .",
    "therefore , @xmath145 has at least one chord . without loss of generality ,",
    "let @xmath147 be such a chord .",
    "thus , @xmath141 and @xmath144 have a common vertex  @xmath140 that is adjacent to @xmath14 , @xmath15 , @xmath128 and @xmath129 .    if @xmath148 , @xmath140 is adjacent to @xmath74 .",
    "if @xmath149 , the sequence @xmath150 induces a chordless cycle smaller than @xmath126 . in both cases",
    "@xmath126 is not the smallest cycle  @xmath124 such that there is no path in @xmath125 $ ] connecting the two neighbours of @xmath15 in  @xmath124 .",
    "therefore , @xmath0 is nearly locally connected .",
    "it follows :    the 3-colourability problem can be solved in linear time for dually chordal and clique chordal graphs .",
    "after introducing dually chordal graphs and investigating the connection between @xmath65-free dually chordal and perfect graphs , this paper presented a linear time algorithm to find a 3-colouring by using the structure of locally connected graphs .",
    "this algorithm also computes a correct 3-colouring for each graph whose blocks are locally connected .",
    "grtschel , m. , lovsz , l. , schrijver , a. : polynomial algorithms for perfect graphs . in : berge ,",
    "c. , chvtal , v. ( eds . ) topics on perfect graphs , north - holland mathematics studies , vol .",
    "north - holland ( 1984 )        kochol , m. : linear algorithm for 3-coloring of locally connected graphs . in : jansen , k. , margraf , m. , mastrolilli , m. , rolim , j. ( eds . ) experimental and efficient algorithms , pp .",
    "2647 in lecture notes in computer science , springer berlin / heidelberg ( 2003 )        tarjan , r.e . , yannakakis , m. : simple linear - time algorithms to test chordality of graphs , test acyclicity of hypergraphs , and selectively reduce acyclic hypergraphs .",
    "siam j. comput .",
    "13 , 566579 ( 1984 )"
  ],
  "abstract_text": [
    "<S> a graph @xmath0 is dually chordal if there is a spanning tree @xmath1 of @xmath0 such that any maximal clique of @xmath0 induces a subtree in @xmath1 . </S>",
    "<S> this paper investigates the colourability problem on dually chordal graphs . </S>",
    "<S> it will show that it is np - complete in case of four colours and solvable in linear time with a simple algorithm in case of three colours . </S>",
    "<S> in addition , it will be shown that a dually chordal graph is 3-colourable if and only if it is perfect and has no clique of size four . </S>"
  ]
}
{
  "article_text": [
    "the result of sampling and quantization of a monochromic n - by - n image is a matrix of real numbers@xcite    @xmath4   \\label{1}\\ ] ]    each element of this matrix is called _",
    "pixel_. the pixel @xmath5 is a gray - level value .",
    "the value @xmath6 is proportional to brightness or energy .",
    "let column vector    @xmath7    , where @xmath8 represents the transpose of a vector .",
    "the digital image @xmath9 can be expressed as formula    @xmath10   \\label{3}\\ ] ]    fig .",
    "1 illustrates the conception of digital image .    [ cols=\"^ \" , ]      +   +",
    "is represented by the right @xmath11 matrix .",
    "each element of this matrix is called _",
    "pixel_. the pixel value @xmath5 is a gray - level value .",
    "the value @xmath6 is proportional to brightness or energy .",
    "the more @xmath5 is large , the more corresponding point in image is bright.,width=302,height=151 ]                                    : the initial state @xmath20 is rotated in the subspace @xmath21 by @xmath22  towards the superposition @xmath23  of all solutions to the search .",
    "initially , it is inclined at angle @xmath24  from @xmath25 , a state orthogonal to @xmath26 .",
    "the product operation @xmath27 reflects the state about the state @xmath28 , then the operation @xmath29 reflect it about @xmath30 in the subspace @xmath31.,width=363,height=311 ]"
  ],
  "abstract_text": [
    "<S> discrete cosine transform ( dct ) is very important in image compression . </S>",
    "<S> classical 1-d dct and 2-d dct has time complexity @xmath0 and @xmath1 respectively . </S>",
    "<S> this paper presents a quantum dct iteration , and  constructs a quantum 1-d and 2-d dct algorithm for image compression by using the iteration . </S>",
    "<S> the presented 1-d and 2-d dct has time complexity @xmath2 and @xmath3 respectively . </S>",
    "<S> in addition , the method presented in this paper generalizes the famous grover s algorithm to solve complex unstructured search problem . </S>"
  ]
}
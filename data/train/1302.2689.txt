{
  "article_text": [
    "implicit - explicit ( imex ) time integration schemes are becoming increasingly popular for solving multiphysics problems with both stiff and nonstiff components , which arise in many application areas such as mechanical and chemical engineering , astrophysics , meteorology and oceanography , and environmental science .",
    "examples of multiphysics problems with both stiff and nonstiff components include advection - diffusion - reaction equations , fluid - structure interactions , and navier - stokes equations .",
    "such problems can be expressed concisely as the system of ordinary differential equations ( odes ) @xmath0 where @xmath1 corresponds to the nonstiff term , and @xmath2 corresponds to the stiff term . in case of systems of partial differential equations ( pdes )",
    "the system appears after semi - discretization in space .",
    "an imex scheme treats the nonstiff term explicitly and the stiff term implicitly , therefore combining the low cost of explicit methods with the favorable stability properties of implicit methods .",
    "imex linear multistep methods have been developed in @xcite , and imex runge - kutta methods have been built in @xcite .",
    "the general linear method ( glm ) family proposed by j.c butcher @xcite generalizes both runge - kutta and linear multistep methods .",
    "the added complexity improves the flexibility to develop methods with better stability and accuracy properties .",
    "while runge - kutta and linear multistep methods are special cases of glms , the framework allows for the construction of many other methods as well .",
    "here we focus on the diagonally implicit multistage integration methods ( dimsim ) @xcite , which are both efficient and accurate , and great potentials for practical use .",
    "glm can overcome the limitations of both linear multistep methods ( lack of a - stability at high orders ) and of runge - kutta methods ( low stage order f leading to order reduction ) .",
    "a complete treatment of glms can be found in the book of jackiewicz @xcite .    in this study",
    "we develop the concept of partitioned dimsim methods , and develop an order conditions theory for a family of such methods .",
    "this shows that partitioned glm is a great framework for developing multi - methods .",
    "next , we propose a new family of implicit - explicit methods based on pairs of dimsims , and develop second and third order methods on this class .    in our earlier work @xcite we have developed second order imex - glm schemes . while this paper was under study , we became aware of an effort to construct imex - glm schemes for hamiltonian systems @xcite .",
    "the paper is organized as follows .",
    "section [ sec : glm ] reviews the class of general linear methods .",
    "the new concept of partitioned dimsim schemes is proposed in section [ sec : partitioned - glm ] , and the order conditions theory is developed .",
    "imex - dimsim schemes are constructed in section [ sec : imex - schemes ] .",
    "linear stability is analizes in section [ sec : pr - convergence ] , and prothero - robinson convergence in section [ sec : pr - convergence ] .",
    "imex methods of second and third order are built in sections [ sec : imex - order2 ] and [ sec : imex - order3a ] , respectively .",
    "numerical results for van der pol system and for the two dimensional gravity waves equations are presented in section [ sec : results ] .",
    "section [ sec : conclusions ] draws conclusions and points to future work .",
    "consider the initial value problem for an autonomous system of differential equations in the form @xmath3 with @xmath4 and @xmath5 .",
    "glms @xcite for ( [ eqn : ivp ] ) can be represented by the abscissa vector @xmath6 , and four coefficient matrices @xmath7 , @xmath8 , @xmath9 and @xmath10 which can be represented compactly in the following tableau    [ cols=\"^,^\",options=\"header \" , ]     .    on the uniform grid @xmath11 , @xmath12 , @xmath13 , one step of the glm reads    [ eqn : glms ] @xmath14 } , \\ : i=1,\\dots , s,~ \\\\",
    "y_i^{[n]}&= & h\\sum_{j=1}^s b_{i , j } \\ , f(y_j ) + \\sum_{j=1}^r v_{i , j } \\ , y_j^{[n-1 ] } , \\ : i=1,\\dots , r,~\\end{aligned}\\ ] ]    where @xmath15 is the number of internal stages and r is the number of external stages . here",
    ", @xmath16 is the step size , @xmath17 is an approximation to @xmath18 and @xmath19}$ ] is an approximation to the linear combination of the derivatives of @xmath20 at the point @xmath21 .",
    "the method can be represented in vector form    [ eqn : glms_vector ] @xmath22},~ \\\\",
    "y^{[n ] } & = & h \\",
    ", \\left ( \\mathbf{b } \\otimes \\mathbf{i}_{d \\times d } \\right ) \\ , f(y ) + \\left(\\mathbf{v } \\otimes   \\mathbf{i}_{d \\times d } \\right)\\ , y^{[n-1]},\\end{aligned}\\ ] ]    where @xmath23 is an identity matrix of the dimension of the ode system .",
    "the linear stability of method is analyzed in terms of its stability matrix @xmath24 and the corresponding stability function @xmath25 where @xmath26 .",
    "a desirable property is the inherited runge - kutta stability @xcite .",
    "this means that the stability function has the form @xmath27 where @xmath28 is the stability function of runge kutta method of order @xmath29 .",
    "we assume that the components of the input vector @xmath30}$ ] for the next step in satisfy @xmath31 } = \\sum_{k=0}^p q_{i , k } h^k \\ , y^{(k ) } ( t_{n-1 } ) + \\mathcal{o}(h^{p+1 } ) , \\quad i = 1,\\dots , r,\\ ] ] for some real parameters @xmath32 , @xmath33 , @xmath34 .    the method has _",
    "order _ @xmath35 if the output vector @xmath19}$ ] satisfies @xmath36 } = \\sum_{k=0}^p q_{i , k } h^k",
    "y^{(k ) } ( t_n ) + \\mathcal{o}(h^{p+1 } ) , \\quad i = 1,\\dots , r,\\ ] ] for the same parameters @xmath32 of .",
    "the method has _ stage order _ @xmath37",
    "if the internal stage vectors @xmath38}$ ] are approximations of order @xmath37 to the solution at the time points @xmath39 @xmath40 } = y(t_{n-1}+c_i \\ , h ) + \\mathcal{o}(h^{q+1 } ) ,",
    "\\quad i = 1,\\dots , s\\,.\\ ] ] we collect the parameters @xmath32 in the matrix @xmath41 for convenience @xmath42 = \\left [ \\begin{tabular}{c c c c } $ q_{1,0}$ & $ q_{1,1}$ & $ \\cdots$ & $ q_{1,p}$ \\\\   $ q_{2,0}$ & $ q_{2,1}$ & $ \\cdots$ & $ q_{2,p}$ \\\\ $ \\vdots$ & $ \\vdots$ & $ \\ddots$ & $ \\vdots$ \\\\",
    "$ q_{r,0}$ & $ q_{r,1}$ & $ \\cdots$ & $ q_{r , p}$ \\\\",
    "\\end{tabular } \\right].\\ ] ]    assume that @xmath43}$ ] satisfies ( [ eqn : glm - order_assumption ] ) .",
    "then the glm ( [ eqn : glms ] ) has order @xmath35 ( [ eqn : glm - order ] ) and stage order @xmath44 ( [ eqn : glm - stage - order ] ) if and only if    [ eqn : glm - order_conditions ] @xmath45 where @xmath46^t\\ , , \\quad w(z)= \\sum_{j=0}^p \\mathbf{q}_j \\ , z^j\\,.\\ ] ] for stage order @xmath47 condition is replaced by @xmath48    see butcher @xcite and jackiewicz ( * ? ? ?",
    "* section 2.4 ) .",
    "it is shown in @xcite that a glm has order @xmath35 and stage order @xmath37 with @xmath49 if and only if @xmath50 where the matrices @xmath51 are defined by @xmath52 with @xmath53      assumption requires to compute the initial vector @xmath54}$ ] by a starting procedure satisfying @xmath55 } = \\sum_{k=0}^p q_{i , k } h^k y^{(k ) } ( t_0 ) + \\mathcal{o}(h^{p+1 } ) , \\quad i = 1,\\dots , r\\,.\\ ] ] dense output is based on derivative approximations of the form @xmath56 } , \\quad k=0,1,\\dots , r\\,.\\ ] ] it is shown in @xcite that is accurate within @xmath57 if and only if @xmath58^t e^z = z \\widetilde{\\mathbf{b } } e^{cz } + \\widetilde{\\mathbf{v } } w(z ) + \\mathcal{o}(z^{p+1})\\ ] ] where @xmath59 $ ] and @xmath60 $ ] .",
    "the termination procedure uses with @xmath61 to generate the solution at the last step @xmath62}.\\ ] ]      diagonally implicit multistage integration methods ( dimsims ) are a subclass of glms characterized by the following properties",
    "@xcite :    1 .",
    "@xmath63 is lower triangular with the same element @xmath64 on the diagonal ; 2 .",
    "@xmath65 is a rank-1 matrix with the nonzero eigenvalue equal to one to guarantee preconsistency ; 3 .",
    "the order @xmath35 , stage order @xmath37 , number of external stages @xmath66 , and number of internal stages @xmath15 are related by @xmath67 and @xmath68 .    in this work",
    "we focus on dimsims with @xmath69 , @xmath70 , and @xmath71 , where @xmath72 @xcite .",
    "dimsims can be categorized into four types according to @xcite .",
    "type 1 or type 2 methods have @xmath73 for @xmath74 and are suitable for a sequential computing environment , while type 2 and type 3 methods have @xmath73 for @xmath75 and are suitable for parallel computation",
    ". methods of type 1 and 3 are explicit ( @xmath76 ) , while methods of type 2 and 4 are implicit ( @xmath77 ) and potentially useful for stiff systems .",
    "consider the partitioned system of odes @xmath78 } ' = { \\left [ \\begin{array}{c }   f_{\\{1\\ } } ( y_{\\{1\\}},\\dots , y_{\\{n\\ } } ) \\\\ \\vdots \\\\",
    "f_{\\{n\\ } } ( y_{\\{1\\}},\\dots , y_{\\{n\\ } } )   \\end{array } \\right ] } = f(y)\\,,\\ ] ] where the solution vector is separated into components @xmath79 , @xmath80 , each of which may be itself a vector .",
    "a _ partitioned general linear method _ solves by applying a different glm to each component .",
    "if not explicitly stated otherwise , we use the subscript @xmath81 to denote the coefficients specific to the @xmath82-th component of the partitioned system .",
    "we have the following    one step of a partitioned glm has the form    [ eqn : partitoned_glm ] @xmath83 } , \\ : i=1,\\dots , s , \\\\",
    "\\label{eqn : partitoned_glm_final }   y_{\\{m\\}i}^{[n ] } & = & h\\sum_{j=1}^s b_{\\{m\\}i , j } \\ , f_{\\{m\\ } } ( y_{\\{1\\}j},y_{\\{2\\}j},\\dots , y_{\\{n\\}j } ) \\\\",
    "\\nonumber   & & + \\sum_{j=1}^r v_{\\{m\\}i , j } \\ ,",
    "y_{\\{m\\}j}^{[n-1 ] } , \\ : i=1,\\dots , r,\\end{aligned}\\ ] ]    where @xmath84 , and @xmath85 for @xmath80 represent the coefficients of @xmath86 different glms .",
    "a partitioned glm is _ internally consistent _",
    "if all component methods share the same abscissae , @xmath87 for @xmath80 .",
    "internal consistency means that all stage components approximate the solution components at the same time point , i.e. , @xmath88 \\approx y(t_n+c_j h)$ ] , for all @xmath89 .",
    "an internally consistent partitioned glm method can be represented compactly as @xmath90 \\hline      \\mathbf{b}_{\\{m\\ } } & \\vspace*{2pt } \\mathbf{v}_{\\{m\\ } }   \\end{array }   \\,.\\ ] ]    assume that each component of the input vector satisfies @xmath91 } = \\sum_{k=0}^p q_{\\{m\\ } i , k } h^k \\ , y_{\\{m\\}}^{(k ) } ( t_{n-1 } ) + \\mathcal{o}(h^{p+1 } ) , \\quad i = 1,\\dots , r\\,.\\ ] ] the partitioned glm has order @xmath35",
    "if each component of the output vector satisfies @xmath92 } = \\sum_{k=0}^p q_{\\{m\\}\\,i , k } h^k y_{\\{m\\}}^{(k ) } ( t_n ) + \\mathcal{o}(h^{p+1 } ) , \\quad i = 1,\\dots , r \\ , , \\quad m=1,\\dots , n\\,,\\ ] ] for the same parameters @xmath93 as in .",
    "the partitioned glm has stage order @xmath37 if each component of the internal stages @xmath38}$ ] satisfies @xmath94 } = y_{\\{m\\}}(t_{n-1}+c{_{\\{m\\}i } } \\ , h ) + \\mathcal{o}(h^{q+1 } ) , \\quad i = 1,\\dots , s\\ , , \\quad m=1,\\dots , n \\,.\\ ] ]    assume that each component @xmath95}$ ] satisfies ( [ eqn : glm - order_assumption ] ) .",
    "then the internally consistent partitioned glm has order @xmath35 and stage order @xmath96 if and only if each component method @xmath97 has order @xmath35 and stage order @xmath37 .",
    "each component method needs to independently meet its own order conditions .",
    "no additional `` coupling '' conditions are needed for the partitioned glm ( i.e. , no order conditions contain coefficients from multiple component schemes ) .",
    "we first prove the `` only if '' part : if the partitioned glm satisfies  with order @xmath35 stage order @xmath96 , then each component method satisfies its own order conditions  with the same @xmath35 and @xmath37 .",
    "this can be seen immediately by employing the same component method for all partitions , @xmath98 @xmath99 @xmath97 for @xmath100 .",
    "the partitioned method is the traditional glm method @xmath101 , @xmath102 , @xmath103 , @xmath104 and has to satisfy the traditional order conditions and .",
    "we next prove the `` if '' part : if each component method satisfies  with order @xmath35 stage order @xmath96 , then the partitioned glm has order @xmath35 and stage order @xmath37 .",
    "denote @xmath105 and @xmath106    consider the stage equations of the individual method @xmath82 with exact solution arguments @xmath107 the error size is given by the stage order @xmath37 of each individual method . using the assumption each component of the sum @xmath108",
    "can be replaced by the numerical approximations @xmath109}$ ] , which differ from their exact counterparts by @xmath57 ; therefore their use in does not change the asymptotical error size .",
    "the @xmath82-th component of relation then reads @xmath110 } + \\mathcal{o}\\left(h^{q+1}\\right ) , ~~ i=1,\\dots , s\\ , .",
    "\\end{aligned}\\ ] ] subtracting from the stage equation gives @xmath111 and therefore @xmath112 where @xmath113 is the lipschitz constant of @xmath114 .",
    "it follows that @xcite @xmath115 for all sufficiently small step sizes @xmath116 equation proves the stage order of the partitioned glm method .",
    "continuing , implies that @xmath117 where we have used the fact that @xmath118 .",
    "consider the solution step of the individual method @xmath82 with exact solution arguments @xmath119 for @xmath120 , where the size of the error term reflects the fact that each individual method has order @xmath35 .",
    "use and the assumption into the @xmath82-th component of to obtain @xmath121}+ \\mathcal{o}\\left(h^{p+1}\\right)\\ , , \\\\ & = &   y_{\\{m\\}i}^{[n ] } + \\mathcal{o}\\left(h^{p+1}\\right)\\ , \\quad i=1,\\dots , r , \\ ] ] the last equality follows from the partitioned method solution equation .",
    "this establishes the order @xmath35 of the partitioned glm .",
    "the derivation of imex - glm schemes relies on the partitioned glm theory developed in section [ sec : partitioned - glm ] .",
    "we transform the additively partitioned system into a component partitioned system via the following transformation @xcite    @xmath122    equation ( [ eqn : nonstiff ] ) is discretized with an explicit ( type 1 ) glm    [ eqn : ex_glm ] @xmath123 } , \\quad i=1,\\dots , s,~\\\\ x_i^{[n ] } & = & h\\sum_{j=1}^s { b}_{i , j } \\ ,",
    "f(x_j+z_j ) + \\sum_{j=1}^r { v}_{i , j } \\ , x_j^{[n-1 ] } , \\quad i=1,\\dots , r\\,.\\end{aligned}\\ ] ]    similarly , equation ( [ eqn : stiff ] ) is discretized with an implicit ( type 2 ) glm    [ eqn : im_glm ] @xmath124 } , \\ ; i=1,\\dots , s,~ \\\\ & & z_i^{[n]}= h\\sum_{j=1}^s \\widehat{b}_{i , j } \\ ,",
    "g(x_j+z_j ) + \\sum_{j=1}^r \\widehat{v}_{i , j } \\ , z_j^{[n-1 ] } , \\ ; i=1,\\dots , r.~\\end{aligned}\\ ] ]    combining ( [ eqn : ex_glm ] ) and ( [ eqn : im_glm ] ) we obtain    [ eqn : com_glm ] @xmath125 } + \\widehat{u}_{i , j}\\ , z_j^{[n-1 ] } \\right ) \\ , , ~~ i=1,\\dots , s,~ \\\\   x_i^{[n ] } + z_i^{[n ] }   & = &   h \\left ( \\sum_{j=1}^s { b}_{i , j } \\ , f(x_j+z_j )   +   \\sum_{j=1}^s \\widehat{b}_{i , j } \\ , g(x_j+z_j ) \\right )   \\\\",
    "\\nonumber & & + \\sum_{j=1}^r \\left ( { v}_{i , j } \\ , x_j^{[n-1 ] }   + \\widehat{v}_{i , j } \\ , z_j^{[n-1 ] } \\right)\\ , , ~~ i=1,\\dots , r,~\\end{aligned}\\ ] ]    we consider pairs of explicit and implicit schemes that    * share the same abscissa vector @xmath126 such that the partitioned glm is internally consistent , and * share the same coefficient matrices @xmath127 and @xmath128 .    for this class of schemes all internal stage vectors can be combined .",
    "specifically , let @xmath129 and @xmath130 .",
    "the scheme becomes the following method/    one step of an implicit - explicit general linear method applied to advances the solution using    [ eqn : imex_glm ] @xmath131 } \\ , , ~~i=1,\\dots , s,~ \\\\",
    "y_i^{[n ] }   & = &    h\\sum_{j=1}^s   \\left (    { b}_{i , j } \\ ,",
    "f(y_j ) +   \\widehat{b}_{i , j } \\ , g(y_j )   \\right )   +   \\sum_{j=1}^r v_{i , j } \\ , y_j^{[n-1 ] }   \\ , , ~~ i=1,\\dots , r\\,.\\end{aligned}\\ ] ]    we note that in ( [ eqn : imex_glm ] ) @xmath132}$ ] and @xmath133}$ ] need not to be known individually once they are initialized ine the first step .",
    "the combined solution @xmath19}=x_i^{[n]}+z_i^{[n]}$ ] is advanced at each step as regular glms do .",
    "the imex - glm is represented compactly by the butcher tableau @xmath134      an imex glm of order @xmath35 requires a starting procedure that approximates linear combinations of derivatives as follows @xmath135 } = \\sum_{k=0}^r { q}_{i , k } h^k x^{(k)}(t_0 )   + \\mathcal{o}(h^{p } ) \\quad \\textnormal{and } \\quad   z_i^{[0 ] } = \\sum_{k=0}^r \\widehat{q}_{i , k } h^k z^{(k)}(t_0 ) + \\mathcal{o}(h^{p})\\ ] ] respectively , where @xmath136 thus @xmath137 } & = & x_i^{[0]}+z_i^{[0 ] } \\\\ & = & x(t_0)+z(t_0 ) + { q}_{i,1 } h x'(t_0 ) + \\widehat{q}_{i,1 } h z'(t_0 ) \\\\ & & + \\sum_{k=2}^{r } { q}_{i , k } h^k x^{(k)}(t_0 ) + \\sum_{k=2}^{r } \\widehat{q}_{i , k } h^k z^{(k)}(t_0 ) \\\\ &",
    "= & y_0 + { q}_{i,1 } h f(y_0 ) + \\widehat{q}_{i,1 } h g(y_0 ) \\\\ & & + \\sum_{k=2}^{r } { q}_{i , k } h^k x^{(k)}(t_0 ) + \\sum_{k=2}^{r } \\widehat{q}_{i , k } h^k z^{(k)}(t_0).\\end{aligned}\\ ] ] evaluation of the first three terms is straightforward . but",
    "approximations of the other terms containing derivatives @xmath138 and @xmath139 for @xmath140 requires additional work if their analytical expressions are difficult to obtain .    to initialize an imex glm we approximate _ independently _ the vectors @xmath141 , @xmath142 , @xmath143 , using finite differences and the solution information provided by several steps of an imex runge - kutta method .    for better accuracy ,",
    "the imex rk method uses a small step size @xmath144 , and produces the numerical solutions @xmath145 . in the following",
    "we show how to compute the terms @xmath146 ; each of these terms is then rescaled by @xmath147 to reflect the integration step @xmath16 .",
    "we have that @xmath148 } =   \\tau \\mathbf{d } { \\left [ \\begin{array}{c } x'(t_0 ) \\\\",
    "x'(t_1)\\\\ \\vdots \\\\",
    "x'(t_r ) \\end{array } \\right ] } + \\mathcal{o}(\\tau^{r+1 } ) = \\tau \\mathbf{d } { \\left [ \\begin{array}{c } f(y_0 ) \\\\",
    "f\\left(y^{\\rm start}_1\\right)\\\\ \\vdots \\\\ f\\left(y^{\\rm start}_r\\right ) \\end{array } \\right ] } + \\mathcal{o}(\\tau^{r+1})\\ ] ] where the coefficient matrix @xmath149 is derived by expanding the right hand side in taylor series and comparing the coefficients of each term . for the cases",
    "@xmath150 and @xmath151 the coefficients are @xmath152\\quad \\textnormal{and } \\quad   \\mathbf{d}_{(r=3)}=\\left [ \\begin{tabular}{c c c }     $ 1 $ & $ 0 $ & $ 0 $   \\\\      $ -3/2 $ & $ 2 $ & $ -1/2 $ \\\\     $ 1 $ & $ -2 $ & $ 1 $ \\end{tabular } \\right]\\,,\\ ] ] respectively . the same procedure is applied to obtain @xmath153 .",
    "we note that the initialization procedure requires the function values @xmath154 and @xmath155 evaluated at the starting solution steps @xmath156 , and that there is no need to compute @xmath157 or @xmath158 separately .      to generate the solution at the last time step @xmath159 using ( [ eqn : solution ] )",
    "a general termination procedure reads    [ eqn : imex_glm_termination ] @xmath160 } \\\\",
    "\\nonumber   & & + \\sum_{i=0}^s \\widehat{\\beta}_{0,i } g(y_i ) + \\sum_{j=0}^r \\widehat{\\gamma}_{0,j } z_j^{[n-1 ] } \\,.\\end{aligned}\\ ] ] in order to avoid separate evaluations of @xmath161}$ ] and @xmath162}$ ] we require that @xmath163 for all @xmath164 . in this case the termination procedure reads @xmath165 }   \\,.\\end{aligned}\\ ] ]    for explicit ( type 1 ) glms , choosing the first abscissa coordinate @xmath166 implies that @xmath167 and @xmath168 for @xmath169 due to order conditions .",
    "the first element of the output vector is exactly the solution at the current step , @xmath170}_1 \\approx y(t_n)$ ] . in this case , @xmath171 is equal to the first row of the coefficient matrix @xmath172 , and @xmath173 is the first row of @xmath65 .    for implicit ( type 2 ) glms , there are usually sufficiently many free parameters in @xmath174 and @xmath175 that remain after satisfying ( [ eqn : coeb ] ) .",
    "these free parameters could be chosen in such a way that the implicit glm shares the same coefficients @xmath173 with the explicit glm .",
    "the difficulty of computing terms @xmath161}$ ] and @xmath162}$ ] individually can therefore be avoided .",
    "for convenience , we write the imex - glm ( [ eqn : imex_glm ] ) in the vector form    [ eqn : imex_dimsim_vector ] @xmath176 } \\\\   y^{[n ] } & = & h \\mathbf{b } f(y ) + h \\widehat{\\mathbf{b } } g(y ) + \\mathbf{v}\\ , y^{[n-1]}\\,.\\end{aligned}\\ ] ]    we consider the generalized linear test equation @xmath177 where @xmath178 and @xmath179 are complex numbers .",
    "we consider @xmath180 to be the nonstiff term and @xmath181 the stiff term , and denote @xmath182 and @xmath183 .",
    "applying ( [ eqn : imex_dimsim_vector ] ) to the test equation leads to    @xmath184 } , \\\\     y^{[n ] } & = & h \\left ( \\xi \\mathbf{b } + \\widehat{\\xi } \\widehat{\\mathbf{b } } \\right )   y + \\mathbf{v } \\ , y^{[n-1 ] } \\ , .",
    "\\end{aligned}\\ ] ]    assuming @xmath185 is nonsingular we obtain @xmath186 } = \\mathbf{m}(w,\\widehat{w})\\ , y^{[n-1]},\\ ] ] where the stability matrix is defined by @xmath187 let @xmath188 and @xmath189 be the stability regions of the explicit glm and of the implicit glm , respectively .",
    "the _ combined stability region _ is defined by @xmath190 for a practical analysis of stability we define a _ desired stiff stability region _ ,",
    "e.g. , @xmath191 and compute numerically the corresponding non - stiff stability region : @xmath192 the imex - glm method is stable if the constrained non - stiff stability region @xmath193 is non - trivial ( has a non - empty interior ) and is sufficiently large for a prescribed ( problem - dependent ) value of @xmath194 , e.g. , @xmath195 .",
    "we now study the possible order reduction for very stiff systems .",
    "we consider the prothero - robinson ( pr ) @xcite test problem written as a split system @xmath196 where the exact solution is @xmath197 .",
    "a numerical method is said to be pr - convergent with order @xmath35 if its application to ( [ prothero - robinson ] ) gives a solution whose the global error decreases as @xmath198 for @xmath199 and @xmath200 .",
    "[ thm : pr - convergence ] consider the imex glm method ( [ eqn : imex_glm ] ) . without loss of generality we consider that @xmath201 .",
    "the explicit part is of order @xmath35 and stage order @xmath202 , and the implicit part has order @xmath203 and stage order @xmath204 .",
    "assume that @xmath205 for all @xmath206 .",
    "then the imex glm method ( [ eqn : imex_glm ] ) is pr - convergent with order @xmath207 .",
    "if the explicit stage order is @xmath208 , then the pr order of convergence is @xmath35 .",
    "it is convenient to construct imex glm methods ( [ eqn : imex_glm ] ) with explicit stage order @xmath44 , even if @xmath209 , as such methods do not suffer from stiff order reduction on the pr problem .",
    "let @xmath210 } =   \\phi\\left(t_{n-1 } + \\mathbf{c}\\ , h \\right ) = \\left [   \\phi(t_{n-1 } + c_1\\ , h ) , \\ldots,\\phi(t_{n-1 } + c_s\\ , h ) \\right]^t\\,.\\ ] ] and @xmath211 } =    \\left [   \\phi(t_{n-1}),h\\ , \\phi'(t_{n-1}),\\ldots , h^p\\ , \\phi^{(p)}(t_{n-1 } ) \\right]^t\\,.\\ ] ] the method applied to ( [ prothero - robinson ] ) reads :    [ eqn : imex_glm_pr ] @xmath212 } & = &   h \\,{\\mathbf{a } } \\ , \\phi'^{[n ] }   + h\\ , \\mu\\ , \\widehat{\\mathbf{a } } \\ ,   \\left(y^{[n ] } - \\phi^{[n ] } \\right )   + \\mathbf{u}\\ ,   y^{[n-1 ] } \\ , ,   \\\\ \\label{eqn : imex_glm_pr_final } y^{[n ] }   & = &    h \\ , { \\mathbf{b}}\\ ,   \\phi'^{[n ] }   + h\\ , \\mu\\ , \\widehat{\\mathbf{b } } \\ ,   \\left(y^{[n ] } - \\phi^{[n ] } \\right )   +   \\mathbf{v } \\ , y^{[n-1]}\\,.\\end{aligned}\\ ] ]    consider the global stage errors @xmath213 } & = & y^{[n ] } - \\phi^{[n]}\\,.\\end{aligned}\\ ] ] to obtain the global error in @xmath170}$ ] we consider separately the global errors in the nonstiff and stiff components : @xmath214 } - \\sum \\mathbf{q}_k \\ , h^k\\ , x^{(k)}(t_n)\\ , , \\\\",
    "e^{\\rm stiff}_n & = & z^{[n ] } - \\sum \\widehat{\\mathbf{q}}_k \\ , h^k\\ , z^{(k)}(t_n)~ , \\\\   & = & \\phi^{[n]}-x^{[n ] } - \\sum \\widehat{\\mathbf{q}}_k \\ , h^k\\ , \\left ( \\phi^{(k ) } - x^{(k ) } \\right ) ( t_n ) \\\\   & = & \\phi^{[n]}-x^{[n ] } \\end{aligned}\\ ] ] since the exact solution of the nonstiff system is @xmath215 . consequently , the total error is @xmath216 }   - \\sum \\mathbf{q}_k \\ , h^k\\ , \\phi^{(k)}(t_n ) \\\\ & = & \\phi^{[n ] } - \\mathbf{w}\\ , \\psi^{[n]}\\,.\\end{aligned}\\ ] ] write the stage equation in terms of the exact solution and global errors @xmath217 } + \\phi^{[n ] } & = &   h \\,\\mathbf{a } \\ , \\phi'^{[n ] }",
    "+ h\\ , \\mu\\ , \\widehat{\\mathbf{a } } \\ , e^{[n ] } + e_{n-1 } + \\mathbf{u}\\,\\sum_{k=0}^p \\mathbf{q}_k \\ , h^k\\ , \\phi^{(k)}(t_{n-1 } ) \\ , ,   \\end{aligned}\\ ] ] to obtain @xmath218}&= & e_{n-1 }   + h\\ , \\mathbf{a}\\ , \\phi'\\left(t_{n-1 } + \\mathbf{c}\\ , h \\right ) \\\\",
    "\\nonumber & & \\displaystyle + \\mathbf{u}\\ , \\sum_{k=0}^p \\mathbf{q}_k \\ , h^k\\ , \\phi^{(k)}(t_{n-1 } ) - \\phi(t_{n-1}+\\mathbf{c } h)\\ , .",
    "\\end{aligned}\\ ] ] the exact solution is expanded in taylor series about @xmath219 : @xmath220 inserting the above taylor expansions in leads to @xmath221}&= & e_{n-1 } -\\mathbf{1}_s\\,\\phi(t_{n-1 } ) + \\mathbf{u}\\mathbf{q}_0\\,\\phi(t_{n-1 } ) \\notag\\\\ & & + \\sum_{k=1}^\\infty \\left ( k\\ , \\mathbf{a}\\,\\mathbf{c}^{k-1 } + k!\\ , \\mathbf{u}\\,\\mathbf{q}_k - \\mathbf{c}^k \\right)\\ , \\frac{h^k } { k!}\\phi^{(k)}(t_{n-1})\\notag\\\\ & = & e_{n-1 } + { \\cal o}\\left(h^{q+1}\\right)\\end{aligned}\\ ] ] where @xmath37 is the stage order of the explicit method .",
    "we have used the facts that @xmath222 , @xmath223 , and the order conditions and for the cases where @xmath44 and @xmath47 , respectively .",
    "similarly , we write the solution equation in terms of the exact solution and global errors : @xmath224 }   +   \\mathbf{v } \\ , e_{[n-1 ] } \\\\ & & + \\mathbf{v } \\sum_{k=0}^p \\mathbf{q}_k \\ , h^k\\ , \\phi^{(k)}(t_{n-1 } )   \\,.\\end{aligned}\\ ] ] after rearranging the expression we obtain @xmath225 by taylor series expansion we have @xmath226 and therefore @xmath227 the order condition of the nonstiff scheme reads @xmath228 identification of powers of @xmath229 leads to @xmath230 the error recurrence becomes @xmath231 assume that the initial error is @xmath232 .",
    "the error amplification matrix @xmath233 is the stability matrix of the implicit method .",
    "therefore its spectral radius is uniformly bounded below one for all argument values @xmath234 of interest . by standard numerical ode arguments @xcite",
    "the equation ( [ eqn : pr - error - reccurence - mod ] ) implies convergence of global errors to zero at a rate @xmath235 .",
    "we now construct imex - dimsim methods as summarized in section [ sec : dimsim ] .",
    "specifically , we focus on dimsims with @xmath69 , @xmath70 , and @xmath71 , where @xmath72 @xcite .      the pair of explicit and implicit schemes developed in @xcite is named imex - dimsim-2a and consists of a type 2 dimsim from @xcite with the same stability of sdirk method of order 2 , and a type 1 derived dimsim .",
    "both of them share the same abscissa vector @xmath237^t$ ] and the same coefficient matrix @xmath65 .",
    "the imex - dimsim-2a coefficients in the tableau representation are @xmath238    the choice of @xmath239 ensures the type implicit part of imex - dimsim-2a is l - stable .",
    "inherited runge - kutta stability is a desirable property , but there are not enough free parameters to enforce this property on both methods of the imex pair at the same time .    for a given implicit scheme",
    "we construct the explicit method by maximizing the constrained stability region .",
    "we have observed that simply maximizing the explicit stability region @xmath240 is insufficient and can lead to a very poor constrained stability region for the imex method .",
    "the matrix @xmath172 can be determined by @xmath63 , @xmath241 and @xmath65 according to the order condition ( [ eqn : coeb ] ) .",
    "the only free parameter is @xmath242 in matrix @xmath63 , and it is chosen such as to maximize imex stability .",
    "first , we use a matlab differential evolution package as a heuristic for global optimization to generate a starting point .",
    "then we run the matlab routine ` fminsearch ` multiple times until the result converges ; each run is initialized with the previous result .",
    "the resulting stability regions are reported in figure [ fig : sta_reg_ord2 ] .",
    "this procedure led to another explicit scheme that maximizes the imex stability @xmath243 @xmath244 and @xmath65 are the same .",
    "we call the new pair imex - dimsim-2b",
    ". the termination procedure has the following parameters @xmath245 solving the condition ( [ eqn : bv ] ) gives @xmath246 the choice of the free parameter @xmath247 leads to @xmath248 , @xmath249 , and .",
    "we construct two implicit - explicit pairs named imex - dimsim-3a and imex - dimsim-3b starting from two existing implicit methods .",
    "all coefficients are obtained from the numerical solution of order conditions using mathematica .",
    "the calculations are performed with 24 digits of accuracy such as to reduce the impact of roundoff errors on the resulting coefficient values .    [",
    "[ imex - dimsim-3a . ] ] imex - dimsim-3a .",
    "+ + + + + + + + + + + + + + +    according to @xcite there are five a - stable type 2 dimsims with the choice @xmath251 and @xmath252^t$ ] .",
    "we select the implicit component in table [ tab : order-3a - implicit - coefficients ] which has a balanced set of coefficients .",
    "the explicit component is obtained by a numerical maximization of the constrained stability region , as discussed in the previous section .",
    "the resulting coefficients are shown in table [ tab : order-3a - explicit - coefficients ] .",
    "the imex stability regions are drawn in figure [ fig : sta_reg_ord3a ] .",
    "the termination procedure is given by @xmath253    [ [ imex - dimsim-3b . ] ] imex - dimsim-3b .",
    "+ + + + + + + + + + + + + + +    the choice of @xmath254 and @xmath252^t$ ] leads to the l - stable type 2 dimsim reported in @xcite .",
    "the coefficients of the implicit component are presented in table [ tab : order-3b - implicit - coefficients ] .",
    "the type 1 component is shown in table [ tab : order-3b - explicit - coefficients ] .",
    "the imex stability regions are drawn in figure [ fig : sta_reg_ord3b ] .",
    "the coefficients @xmath255 and @xmath256 of the termination procedure are equal to the first rows of matrices @xmath172 and @xmath65 , respectively . in addition @xmath257",
    "we test the imex - glm methods on two test problems .",
    "the first one is the van der pol equation , a commonly used small ode system that emphasizes convergence under stiffness .",
    "the second test is a pde problem arising in atmospheric modeling .",
    "we implemented our algorithms in a discontinuous galerkin finite element model developed by blaise et al .",
    "@xcite , which has efficient parallel scalability .",
    "we report the results obtained with imex - dimsim-2b and imex dimsim-3b methods , since they have the better accuracy and stability properties among their peers of the same order .",
    "we consider the nonlinear van der pol equation with a split right hand side @xmath258 } = f(y , z)+g(y , z)={\\left [ \\begin{array}{c } z \\\\0 \\end{array } \\right ] } + { \\left [ \\begin{array}{c } 0 \\\\ \\left((1- y^2)z    -y\\right)/\\varepsilon \\end{array } \\right]}\\ ] ] on the time interval @xmath259 $ ] , with initial values @xmath260 we consider @xmath261 , a stiff case in which many methods suffer from order reduction @xcite .",
    "the initialization was done using the analytic derivatives .",
    "the reference solution is obtained with radau-5 , a stiffly accurate method @xcite , with very tight tolerances of @xmath262 .",
    "we compare the new methods with imex dirk@xmath263 , a l - stable , three - stage , third - order imex runge - kutta method proposed in @xcite .",
    "figure [ fig : vdp ] shows the global error , measured in the @xmath264 norm , against step size @xmath16 . a geometric sequence of step sizes , @xmath265 , @xmath266 , @xmath267 and so on , were used .",
    "order reduction can be clearly observed for the imex runge - kutta method , which yields second - order convergence .",
    "the imex dimsim converges at the theoretical third order and gives more accurate result than the imex runge - kutta method .",
    "second - order imex dimsims also produced no order reduction ; detailed results have been reported in @xcite .",
    "these results indicate that the high stage order of imex dimsims make them particularly attractive for solving stiff problems , where runge - kutta methods may suffer from order reduction .",
    "consider the dynamics of gravity waves , which is governed by the compressible euler equation in the conservative form @xcite    [ eqn : gw ] @xmath268 where @xmath269 is the density , @xmath270 is the velocity , @xmath271 is the potential temperature , and @xmath272 is a @xmath273 identity matrix .",
    "the prognostic variables are @xmath274 . the pressure @xmath35 in the momentum equation",
    "is computed by the equation of state @xmath275    to maintain the hydrostatic state , we follow the splitting introduced in @xcite @xmath276 where the reference ( overlined ) values are in hydrostatic balance .",
    "the gravity wave equation can be rewritten as    [ eqn : new - gravity - wave ] @xmath277 closed by the equation of state @xmath278    the 2d mesh is generated by the software gmsh @xcite .",
    "the spatial discretization uses discontinuous galerkin finite elements and was developed by blaise et al .",
    "figure [ fig : snapshots ] shows the density , velocity , potential temperature , and pressure variables after @xmath279 seconds of simulation time .",
    "the advantage of implicit - explicit time - stepping over explicit time - stepping schemes for this problem has been demonstrated in @xcite .",
    "to apply imex integration the right - hand side of is additively split into linear and nonlinear parts .",
    "the linear term @xmath280 with the pressure linearized as @xmath281 is solved implicitly , while the remaining ( nonlinear ) terms are solved explicitly .",
    "all the experiments are performed on a workstation with @xmath282 intel xeon e5 - 2630 processors ( 24 cores in total ) using @xmath283 mpi threads .",
    "note that the parallelization is not implemented at time - stepping level but at the spatial discretization level , therefore the parallel performance does not be affect the comparison of various time integrators .",
    "here we compare the performance of imex methods for a simulation window of @xmath284 seconds .",
    "the second order methods are imex - dimsim-2b and l - stable , two - stage , second - order imex dirk@xmath285 @xcite .",
    "the third order methods are imex - dimsim-3b and imex dirk@xmath263 @xcite .",
    "the integrated @xmath264 errors for all prognostic variables are measured against a reference solution .",
    "the reference solution was obtained by applying an explicit rk method to solve the original ( non - split ) model with a very small time step @xmath286 .    the error versus computational effort diagrams are shown in figure [ fig : gw ] .",
    "all the methods display the theoretical orders of convergence .",
    "imex dimsims and imex rk methods perform similarly , with imex dimsims yielding slightly better accuracy when the same time steps are chosen .",
    "also , imex dimsims are slightly more efficient in terms of cpu time than the imex rk methods of the same order .",
    "note that this specific dg implementation requires the solution to be recovered at each time step , therefore the termination procedure has been applied after each each time step .",
    "the implementation can be optimized such as to apply the termination procedure only once at the end of the simulation ; this would result in additional savings in computational cost .",
    "as the order increases , the number of stages required by an imex rk method grows rapidly due to order conditions , while an imex dimsim typically uses a number of stages equal to its order .",
    "consequently , we expect that imex dimsim methods will become even more competitive for higher orders .",
    "in this paper introduce a new family of partitioned time integration methods based on high stage order general linear methods .",
    "we prove that the general linear framework is well suited for the construction of multi - methods .",
    "specifically , owing to the high stage orders , no coupling conditions are needed to ensure the order of accuracy of the partitioned glm .",
    "we apply the partitioned general linear framework to construct new implicit - explicit glm pairs , together with appropriate starting and ending procedures .",
    "the linear stability analysis proposes the use of constrained stability functions to quantify the joint stability of the imex pair .",
    "a prothero - robinson convergence analysis reveals that the order of an imex glm scheme on very stiff problems is dictated by the stage order of its non - stiff component ; in particular , no order reduction appears if the explicit method has a full stage order .",
    "this result indicates that imex glms are particularly attractive for solving stiff problems , where other multistage methods may suffer from order reduction .",
    "we discuss the construction of practical imex glm pairs starting from known implicit schemes and adding an appropriate explicit counterpart .",
    "this strategy is applied to build second and third order imex diagonally - implicit - explicit multi - stage integration methods .",
    "numerical experiments with the van der pol equation confirm the fact that imex glms converge at full order while imex rk methods suffer from order reduction .",
    "the two dimensional gravity wave system is an important step towards solving real pde - based problems .",
    "the new imex - dimsim schemes perform slightly better than the imex rk methods of the same order .",
    "future work will develop imex - glms of higher orders , will endow them with adaptive time stepping capabilities , and will study their advantages compared to other existing imex familiess .",
    "there are also implementation issues that deserve further exploration .",
    "the authors wish to thank dr .",
    "sebastien blaise for making his gmsh / dg code , and the implementation of the gravity waves problem , available for this work .",
    "we also thank him for his continuous support during our study .",
    "this work has been supported in part by nsf through awards nsf oci-8670904397 , nsf ccf-0916493 , nsf dms-0915047 , nsf cmmi-1130667 , nsf ccf  1218454 afosr fa95501210293def , fosr 12 - 2640 - 06 , dod g&c 23035 , and by the computational science laboratory at virginia tech .",
    "r.  dambrosio , j.  butcher , multivalue numerical methods for partitioned differential problems : from second order odes to separable hamiltonians , presentation given at auckland numerical ordinary differential equations anode 2013 ( celebration of the 80th birthday of john butcher ) ( january 2013 ) .",
    "s.  blaise , a.  st - cyr , a dynamic hp - adaptive discontinuous galerkin method for shallow - water flows on the sphere with application to a global tsunami simulation , monthly weather review 140 ( 2012 ) 978996 .",
    "f.  giraldo , m.  restelli , m.  luter , semi - implicit formulations of the navier ",
    "stokes equations : application to nonhydrostatic atmospheric modeling , siam journal on scientific computing 32  ( 6 ) ( 2010 ) 33943425 .    c.  geuzaine ,",
    "remacle , gmsh : a 3-d finite element mesh generator with built - in pre- and post - processing facilities , international journal for numerical methods in engineering 79  ( 11 ) ( 2009 ) 13091331 .",
    "b.  seny , j.  lambrechts , r.  comblen , v.  legat , j .- f .",
    "remacle , multirate time stepping for accelerating explicit discontinuous galerkin computations with application to geophysical flows , international journal for numerical methods in fluids 71  ( 1 ) ( 2013 ) 4164 ."
  ],
  "abstract_text": [
    "<S> implicit - explicit ( imex ) time stepping methods can efficiently solve differential equations with both stiff and nonstiff components . </S>",
    "<S> imex runge - kutta methods and imex linear multistep methods have been studied in the literature . in this paper </S>",
    "<S> we study new implicit - explicit methods of general linear type ( imex - glms ) . </S>",
    "<S> we develop an order conditions theory for high stage order partitioned glms that share the same abscissae , and show that no additional coupling order conditions are needed . </S>",
    "<S> consequently , glms offer an excellent framework for the construction of multi - method integration algorithms . </S>",
    "<S> next , we propose a family of imex schemes based on diagonally - implicit multi - stage integration methods and construct practical schemes of order three . </S>",
    "<S> numerical results confirm the theoretical findings .    </S>",
    "<S> * keywords : * implicit - explicit integration , general linear methods , dimsim </S>"
  ]
}
{
  "article_text": [
    "resource and battery lifetime are important issues for networks such as wireless sensor networks ( wsns ) .",
    "energy harvesting ( eh ) @xcite can enable wsn operation in environments where maintenance is impractical or too costly . energy harvesting ( eh ) extends reliable operation lifetime @xcite , @xcite . energy may be harvested from the environment in many different ways ( solar , kinetic , etc . )",
    "since energy harvesters generally depend on uncontrollable energy resources and the amount of harvested energy is generally low @xcite , wsns need robust , environmentally adaptive , energy efficient policies for their operations .    in this paper",
    ", we consider a wsn where a fusion center ( fc ) collects data from @xmath0 eh sensor nodes by assigning the nodes to @xmath1 orthogonal communication channels in each time slot .",
    "it is assumed that each node always has data to transmit ( i.e. , nodes are data backlogged ) .",
    "each node has a battery ( of a certain capacity , and without leakage ) to store harvested energy .",
    "it is also assumed that the multi - access communication is error - free and there is no fading .",
    "if a node is scheduled , it will be assigned one of the channels .",
    "when a node is scheduled to transmit , it can transmit data to the fc if it has sufficient energy to send a packet .",
    "the transmission of each packet lasts an entire time slot .",
    "the objective of the fc is to maximize the total throughput over a finite or infinite problem horizon .    in practice",
    ", battery states of nodes could be made available to the fc through some additional cost ( i.e. feedback ) and complexity .",
    "however , it is interesting from a practical perspective to consider the case where the fc makes scheduling decisions without knowledge of the instantaneous battery states at nodes , or their statistics .",
    "fortunately , it turns out that this lack of knowledge has little effect on performance .",
    "we will observe that by knowing only the outcomes of previous transmission attempts , the fc can schedule almost as efficiently as an omniscient scheduler .",
    "this problem may be formulated as a partially observable markov decision process ( pomdp ) , and dynamic programming ( dp ) @xcite can be employed for optimal solution .",
    "however , dp has exponential complexity with respect to number of nodes @xmath0 @xcite .",
    "furthermore , the state space of dp should be very large to get a good approximation to the problems with continuous state variables like energy .",
    "therefore , complexity of dp becomes excessively high for the eh scheduling problem with large number of nodes .",
    "a second approach for solving this scheduling problem is reinforcement learning by considering the problem as a pomdp .",
    "q - learning @xcite is the easiest to implement and the most effective model - free algorithm among reinforcement learning algorithms .",
    "q - learning guarantees convergence to optimal for a generic model . however , q - learning is not applicable for problems with large - state space because its convergence is slow @xcite .",
    "in fact , many algorithms can guarantee the convergence to optimal behavior @xcite .",
    "however , in many practical applications , a policy which achieves near optimality quickly is preferable to the policy which converges slowly to exact optimality @xcite .",
    "as the discount factor gets closer to 1 ( i.e. the undiscounted case ) , the convergence rate of q - learning decreases more .",
    "there are approaches such as r - learning @xcite which maximize average reward ; however , the convergence of r - learning has not been proven .",
    "also , reinforcement learning has a very important problem : _ the trade - off between exploration and exploitation _",
    "therefore , q - learning and generally reinforcement learning do not seem to be suitable for obtaining an efficient and practical solution to this scheduling problem , especially a large number of sensors and a continuous state variable , energy , is considered .",
    "another approach for this scheduling problem is to consider it as a restless multi - armed bandit problem ( rmab ) which is a special version of pomdp .",
    "rmab is an extension to classical multi - armed bandit problem which is solved optimally by gittins @xcite and an optimal solution is proposed under certain assumptions by whittle @xcite .",
    "papadimitriou and tsitsiklis show that finding optimal solution to a general rmab is pspace - hard and it has a very high computational complexity @xcite .",
    "considering memory limits of sensors , a much more applicable policy is required .",
    "therefore , a simpler approach called a myopic policy ( mp ) is suggested for rmab problems and proven to be optimal in limited cases for the sensor management problems in @xcite , @xcite , @xcite . however , a myopic policy is not generally optimal since mp concentrates only on the present and not consider the future @xcite , @xcite .",
    "a channel probing problem is studied in @xcite and it is shown that mp is not always optimal .",
    "the assumption that the scheduling decision does not affect transition probabilities was an appropriate one for the problems addressed in @xcite .",
    "however , for the eh scheduling problem at hand , this is not a reasonable assumption , as energy is a flexible resource that can be stored without any discount ( ignoring battery leakage which is very minor in practice @xcite ) and can be used whenever desired .",
    "therefore , the solutions presented in @xcite papers are not directly applicable to our problem .",
    "the closest works in the literature to the problem at hand are the scheduling problems studied in @xcite .",
    "we have posed essentially the same problem , with the exception that no battery and unit sized batteries at nodes are assumed in @xcite and @xcite , respectively . in both @xcite and @xcite ,",
    "the scheduling problem is formulated as a pomdp where the focus is on immediate reward instead of future rewards . in @xcite ,",
    "a single - hop wireless sensor network which consists of eh transmitter nodes with a unit sized battery and a central receiver node with multi server is considered as a restless multi - armed bandit problem ( rmab ) .",
    "optimality of whittle index policy which is generally suboptimal for rmab @xcite is proven for a certain case under certain assumptions on the eh process . in @xcite , the optimality of a round - robin based myopic policy",
    "is proved under the assumption that each node has only unit sized battery and the ratio between the number of transmitter nodes and the number of communication channels of the central node is an integer ( @xmath2 is an integer ) . in @xcite ,",
    "the problem is formulated as pomdp and the optimality of mp is proven for two cases : 1 ) the nodes are not able to harvest and transmit simultaneously , and the eh process transition probabilities are affected by the scheduling decisions , and 2 ) the nodes have no battery . since myopic policies proposed in @xcite and @xcite are based on round - robin(rr ) scheme , assuming that @xmath3 is an integer is important ( also period of rr policy).these assumptions are somewhat restrictive for real life implementation .    to set up the problem , a model about the generation and usage of energy",
    "is needed .",
    "first , energy in a node s battery decreases if the node sends a data packet .",
    "second , energy in a battery increases in a continuous fashion by harvested energy .",
    "third , battery leakage is neglected .",
    "this assumption follows from examining typical batteries in use today for which leakage is negligibly small for over durations of several minutes .",
    "based on these mild assumptions about energy , a suitable performance measure for a policy can be average reward over the finite and the infinite horizon rather than expected total discounted reward for this scheduling problem which is a delay - insensitive communication problem @xcite . in communication network problems ,",
    "delay issue is investigated as average delay not as discount . in applications ,",
    "eh sources may use vibrational or kinetic energy , the behavior of which is typically not predictable @xcite , @xcite .",
    "optimal scheduling for this continuous , independent eh process becomes a hard problem , and the problem requires good near - optimal solutions .    by taking a deterministic approach , a near - optimal transmission scheduling policy , uniforming random ordered policy ( urop ) , is developed by assuming that each sensor has an infinite capacity battery ( it will be shown that if the sensors have a reasonable - sized finite battery , urop has almost same efficiency as its efficiency under a reasonable - sized finite battery assumption ) .",
    "it is also guaranteed that urop is _ asymptotically optimal _ for a general case of energy arrival process under the infinite battery assumption ( larger than unit battery ) as the horizon length increases . in comparison with the myopic policies in @xcite and @xcite",
    ", urop can still guarantee near - optimal performance when @xmath3 is not an integer .",
    "the rest of this paper is organized as follows . the system model and problem formulation",
    "are described in section ii . in section iii , we study the scheduling capacity . in section iv , we show that round - robin based policies can not guarantee 100% throughput under many non - uniform energy harvesting process for nodes .",
    "we show the optimal omniscient solution for this problem in section v. in section vi , we suggest a novel , low - complexity scheduling policy which is nearly throughput optimal for quite general eh processes ( uniform , non - uniform , independent , correlated ) in a finite horizon problem under an infinite battery assumption .",
    "next , efficiency bounds on urop are obtained .",
    "section vii extends the results from finite horizon to infinite horizon . in section viii ,",
    "we compare the performance of urop with that of a round - robin policy and the myopic policy in @xcite through simulations .",
    "section ix concludes the paper .",
    "we consider a single - hop wireless network in which @xmath0 energy harvesting ( eh)-capable sensors have circularly symmetric distribution around a fusion center ( fc ) and send data packets to fc ( see figure 1 ) .",
    "the wsn operates in a time - slotted fashion over time slots ( tss ) of equal duration . in each ts , fc schedules @xmath1 of @xmath0 sensors for data transmission by assigning each one of @xmath1 orthogonal channels .",
    "we assume that each sensor always has data to transmit ( i.e. data is backlogged as in @xcite and @xcite ) during the problem horizon of @xmath4 tss .",
    "data packets have equal size and require _ unit energy _ for transmission .        the eh processes are assumed to be independent for each node . the total energy harvested by sensor @xmath5 by time @xmath6",
    "is denoted by @xmath7 , and the increment of this energy harvested during the ts @xmath6 is denoted as @xmath8 .",
    "the energy present in the battery at @xmath6 ( stored minus used ) is @xmath9 .",
    "we denote by @xmath10 and @xmath11 , the set of all sensors and the set of orthogonal channels , respectively . the amount of data sent by node @xmath5 in ts @xmath6 is denoted by @xmath12 where @xmath13 is the indicator function of event a , and @xmath14 is the set of @xmath1 nodes scheduled at @xmath6 .",
    "the set @xmath15 is determined by a policy @xmath16 .",
    "two definitions are in order : a _ fully efficient policy _ ( alternatively , a _",
    "@xmath17 efficient policy _ ) ensures that the nodes use up all of the harvested energy by the end of the problem horizon , more precisely , @xmath18 for @xmath19 .",
    "an _ optimal policy _ is one that maximizes data throughput for the given sequence of energy harvests . for certain energy harvest processes",
    ", an optimal policy may not be fully efficient , as we will be clear in the next section .",
    "consistently with previous literature , the general objective is to maximize the expected discounted reward over the problem horizon : @xmath20\\ ] ] where @xmath21 is the discount factor , which reduces the value of data sent later .",
    "the discount factor corresponds to placing lower value on data that is delayed .",
    "however , note that the problem at hand assumes infinite backlog and is therefore delay insensitive by nature .",
    "the discount could also be considered to model battery leakage that happens as transmission is withheld .",
    "therefore , average reward criterion is more suitable measure for delay - insensitive communication problems like this scheduling problem than discounted reward criterion @xcite .",
    "consistently with our assumptions about infinite data buffers , and no battery leakage , we shall set @xmath22 and convert the objective function in ( [ 1 ] ) to that in ( [ 2 ] ) , which is an average reward criterion .",
    "@xmath23\\ ] ] we propose an algorithm , urop , which achieves nearly 100% throughput ( and 100% efficiency whenever a fully efficient schedule is feasible ) in a broad class of energy harvesting ( arrival ) process under infinite battery assumption . in this work ,",
    "efficiency of a policy @xmath24 ( @xmath25 ) is defined as ratio of total throughput by the policy @xmath24 to total throughput by fully efficient policy @xmath26 on the problem horizon ( @xmath27 ) . in section iii",
    ", it is proven that efficiency of an arbitrary round robin policy with quantum=1 @xmath28 is very close to that of myopic policy @xmath29 ( @xmath30 ) proposed in @xcite and @xcite .",
    "therefore , the efficiency of urop @xmath31 ( @xmath32 ) will be compared with that of an arbitrary round robin policy with quantum=1 @xmath33 ( @xmath34 ) in section vii for simplicity .",
    "an arrival process is called _ admissible _ if a fully efficient schedule is possible . by the analogy with admissible processes in these problems",
    ", we introduce four new terms which we use for the eh scheduling problem in the rest of paper . _ density of sensor i _ ,",
    "@xmath35 , is the total number of packets sent by the sensor @xmath5 with @xmath26 normalized by @xmath36 during problem horizon @xmath4 . _",
    "partial density of sensor _",
    "@xmath5 , @xmath37 , is the total number of packets sent by the sensor @xmath5 with @xmath26 normalized by @xmath38 in the interval @xmath39 $ ] .",
    "_ density _ @xmath40 is the average of densities of all sensors during problem horizon @xmath4 ( see equation ( [ 3 ] ) ) . _",
    "partial density _ ( @xmath41 ) is the average of partial densities of all sensors in the interval @xmath39 $ ] ( see equation ( [ 4 ] ) ) . by definition ,",
    "to find a robust , efficient scheduling policy , we need to consider scheduling capacity of the fc .",
    "scheduling capacity corresponds to the maximum number of nodes which can be scheduled by the fc in one ts .",
    "since fc has @xmath1 orthogonal channels , the scheduling capacity of the fc is @xmath1 . if the amount of average harvested energy is so high that the scheduling capacity is exceeded , no 100% efficient policy exists and energy will keep accumulating ( there is an energy surplus ) . considering finite batteries ,",
    "this will cause overflow in the batteries of nodes .",
    "theorem 1 explores the region of energy harvest rates such that a 100% efficient policy is feasible .",
    "we shall now make some definitions that will be used in the rest of this section and the paper .",
    "we denote by @xmath45 and @xmath46 , the energy available to sensor @xmath5 in the interval @xmath47 $ ] and the average of this over all sensors in this time interval , respectively . also , we denote by @xmath48 the total energy available @xmath47 $ ] : @xmath49 @xmath50 @xmath51    * theorem 1 ( scheduling capacity theorem ) : * for @xmath52 ,    _ ( i )",
    "if @xmath53 , all possible policies will have efficiency below 100% and battery levels of some sensors grow unboundedly ( in practice , considering finite batteries , they will overflow . ) _    _",
    "( ii ) if @xmath54 , a 100% efficient policy that maximizes throughput while keeping battery levels of all sensors finite , exists . _    * _ proof of theorem 1 : _ *    _ ( i ) _ in this case , @xmath55    as the total uplink rate available is k data packets per slot , fc can accumulate at most @xmath56 packets from the nodes in the interval @xmath47 $ ] .",
    "suppose that there is a policy @xmath24 which can achieve up to scheduling capacity .",
    "then , efficiency of @xmath24 equals to the maximum efficiency in the conditions ( [ 10 ] ) , and it is represented as below : @xmath57    if ( [ 10 ] ) is satisfied , the scheduling capacity is exceeded in the interval @xmath47 $ ] . by ( [ 10 ] ) , @xmath58 .",
    "hence , there is no 100% efficient policy which lets fc receive @xmath48 packets from the nodes . by definition of @xmath41 , ( [ 10 ] ) is equivalent to @xmath59 .",
    "define excess energy as @xmath60 . by definition of @xmath41 , @xmath61 .",
    "@xmath59 , and @xmath62 , battery levels of some sensors grow unboundedly .    _",
    "( ii ) _ in this case , @xmath63 fc can receive maximum @xmath56 data packets from the nodes in the interval @xmath47 $ ] .",
    "an omniscient policy could fill up all channels in all time slots as long as there is a sensor with available energy .",
    "trivially , this achieves 100% efficiency if @xmath64 ( equivalent to [ 14 ] ) .",
    "it is summarized below : @xmath65 by ( [ 15 ] ) , @xmath66 .",
    "hence , there is a fully efficient ( 100% efficient ) policy which makes fc receive @xmath48 packets .",
    "battery levels of all sensors are kept finite .",
    "hence when @xmath64 , there is an optimal policy which is 100% efficient .",
    "the scheduling problem in this paper are also studied in @xcite and @xcite for certain specific cases .",
    "both papers propose rr - based policies with quantum=1 which are myopic policies .",
    "then , they prove the optimality of these policies under certain specific cases .",
    "first , we will investigate the efficiency of rr - based policies by theorem 2 .",
    "then , we will prove by theorem 3 that there is only a slight difference between the efficiencies of any two rr - based policies in long problem horizon @xmath67 .",
    "hence , the efficiency of rr - based myopic policies in @xcite and @xcite are investigated .",
    "it is shown that the policies in @xcite and @xcite are generally suboptimal .",
    "for the cases that each node has a battery larger than unit size , there is no known myopic policy in the literature .",
    "therefore , we will compare urop only with the policies in @xcite and @xcite , and the optimal policy in this paper .",
    "* theorem 2 : * _ suppose that @xmath68 and @xmath69 .",
    "if there are some sensors @xmath70 such that @xmath71 , all rr - based policies with quantum=1 will have efficiency below 100% although a fully efficient policy ( @xmath26 ) exists .",
    "moreover , batteries of some sensors will overflow .",
    "* _ proof of theorem 2 : _ * in this proof , what is implied by rr policy is rr - based policies with quantum=1 .",
    "we investigate efficiency of rr in the two possible cases :    \\i .",
    "if @xmath72 , rr allocates each node @xmath73 tss for transmission .",
    "\\ii . if @xmath74 , rr allocates some nodes @xmath75 tss and other nodes @xmath76 tss .",
    "assume that there are some nodes @xmath70 such that @xmath71 .",
    "we denote by @xmath77 the set of these sensors . by definition @xmath78 for nodes @xmath79 .    * case i : * if the fc schedules @xmath0 sensors by rr policy in the problem horizon @xmath4 , rr policy allocates each node @xmath80 tss equally .",
    "although @xmath69 , each sensor @xmath79 can transmit maximum @xmath81 data but can not transmit @xmath82 data due to rr policy . on the other hand , each of other sensors @xmath83 can transmit all @xmath45 packets . by analogy with scheduling capacity , the efficiency of a rr policy can be represented as below :    @xmath84    considering the definition of @xmath37 , @xmath34 can also be represented as below : @xmath85    since @xmath78 for @xmath79 , @xmath86 . hence , suboptimality of rr policy is proven for the first case although there exists an 100% efficient policy by theorem 1 .",
    "* case ii : * if the fc schedules @xmath0 sensors by rr policy in the problem horizon @xmath4 , rr policy allocates some nodes @xmath87 tss and other nodes @xmath76 tss for transmission where @xmath74 and @xmath88 . to maximize efficiency of rr policy , we assume that each sensor @xmath79 can transmit maximum @xmath75 data",
    ". however , each of these sensors can not transmit @xmath89 data due to rr policy although @xmath69 . on the other hand , each of other sensors @xmath83 can transmit all @xmath45 data . by the analogy with scheduling capacity",
    ", the efficiency of rr policy can be represented as below :    @xmath90    considering the definition of @xmath37 , @xmath34 can also be represented as below : @xmath91    it is known that @xmath78 for @xmath79 and @xmath92 since @xmath93",
    ". therefore , @xmath86 .",
    "hence , suboptimality of rr policy is also proven for the second case although there exists an 100% efficient policy by theorem 1 . from ( [ 23 ] ) , ( [ 29 ] ) and theorem 1 , efficiency of rr be as low as @xmath94 .",
    "this worst case efficiency of @xmath94 occurs when @xmath1 of the nodes always have sufficient energy to transmit a packet in each ts and the remaining ones have no energy .    for a sufficiently long problem horizons",
    ", these results can be extended to rr - based policies with larger quanta .",
    "the following remark , used in the rest of the paper , is a consequence of the assumption there is no battery leakage .",
    "* remark 1 ( no battery leakage ) : * _ let @xmath95 $ ] and @xmath96 . if @xmath5 is not scheduled ( selected ) in interval",
    "@xmath97 $ ] , @xmath98 where @xmath99 is the energy remaining in battery of sensor @xmath5 at the end of ts @xmath6 .",
    "that is , @xmath99 does not decrease unless @xmath5 transmits data . _",
    "theorem 2 states that rr - based policies become suboptimal when @xmath78 even for one node .",
    "the myopic policies ( mp ) in @xcite and @xcite are rr policies with quantum=1 . in theorem 3",
    ", it is shown that the mps have almost same efficiency as any other rr policy with quantum=1 .    * theorem 3 ( upper and lower bounds on rr throughput ) :* _ assume that @xmath100 . in problem horizon",
    "@xmath4 , _ @xmath101 _ where @xmath102 and @xmath103 are the minimum and maximum throughput which can be achieved under a rr policy with quantum=1 , respectively .",
    "_    * _ proof of theorem 3 : _ * there are three cases for the problem horizon @xmath4 : 1 ) @xmath104 , 2)@xmath105 and @xmath106 , and 3 ) @xmath107 and @xmath108    * case 1 : * if @xmath109 , @xmath110 . since @xmath111 and @xmath112 , @xmath113 .",
    "this proves the statement for this case .    * case 2 : * denote by @xmath114 the nodes scheduled in ts @xmath115 where @xmath116 and @xmath117 .",
    "all rr policies have same length period @xmath118 . denoted by @xmath119 the @xmath120 period of rr , namely , @xmath121 $ ] .",
    "assume that @xmath122 and @xmath96 where @xmath123 and @xmath124 are the tss when a node @xmath125 is scheduled @xmath120 time by the fc under two different myopic policies , @xmath33 and @xmath126 , respectively .    by remark 1 , efficiency of @xmath126 in @xmath124",
    "is not lower than that of @xmath33 in @xmath123 for the node @xmath125 since @xmath126 schedules the node later than @xmath33 does . by remark 1 ,",
    "if a node @xmath125 can not send data in @xmath123 and can send in @xmath124 , then it would certainly have data to send when it is scheduled in @xmath127 instead of @xmath124 .",
    "therefore , @xmath128 for @xmath129 .",
    "this means that giving each node one more ts , any rr policy can achieve maximum throughput achieved by most efficient rr .",
    "in other words , the least efficient rr can achieve the throughput of the most efficient rr by continuing only one period more . note that since @xmath130 is the nodes scheduled last under a rr policy , they achieve maximum throughput which can be achieved under rr policy by remark 1 .",
    "therefore , the least efficient rr uses only @xmath131 tss more than other rr policies to guarantee same throughput . by using the extra @xmath131 tss which the least efficient rr used",
    ", the most efficient rr policy can have throughput @xmath131 more than it has . by giving an example for this situation , theorem 3",
    "will be proved for this case .",
    "considering the last period @xmath132 $ ] , the worst performance of rr occurs when the set of nodes @xmath114 can transmit no data in ts @xmath133 ; however , they get ready for transmission(@xmath134 ) in ts @xmath135 . since there is no next ts for @xmath130 , nodes of @xmath130 can not improve their battery states .",
    "therefore , the throughput difference is determined by nodes @xmath136 . since @xmath137",
    ", the difference is @xmath131 .",
    "this concludes the proof .",
    "* case 3 : * assume that @xmath138 where @xmath139 , @xmath140 . in case 2",
    ", it is shown that the maximum difference is @xmath131 in ts @xmath141 . in the interval",
    "@xmath142 $ ] , @xmath143 is scheduled . for the nodes @xmath144 , @xmath145 in ts @xmath141 . if @xmath146 @xmath147 , the throughput difference remains as @xmath131 .",
    "unless @xmath146 @xmath147 , the difference remains same or decreases depending on other nodes @xmath148 .",
    "hence , it is proved .",
    "for the eh scheduling problem , @xcite,@xcite propose rr - based myopic policy ( mp ) and prove that the mp is optimal for certain specific cases .",
    "however , theorem 2 and theorem 3 state that rr - based policies with quantum=1 ( including the mp in @xcite,@xcite ) become suboptimal when @xmath149 for some sensor @xmath115 although an 100% efficient policy exists ( @xmath150 ) .",
    "the eh scheduling problem resembles a simplified unicast switch scheduling problem . like unicast switch scheduling problems , this problem has input queues ( energy queues ) and feasible activation sets are such that at most @xmath1 users are scheduled .",
    "different from usual unicast switch scheduling problem setups , buffer ( battery ) states are not known in this problem ; therefore , switch scheduling policies that assume the availability of state information can not be applied directly . however ,",
    "these provide intuition for finding an _ omniscient scheduling _ policy ( i.e. one which knows the current battery states ) for the eh scheduling problem .    for unicast switch scheduling problems ,",
    "the following approaches are well - known : maximum size matching ( msm ) and maximum weight matching ( mwm ) @xcite , @xcite .",
    "maximum size matching selects in each ts an activation set with the max number of nonempty queues . on the contrary",
    ", maximum weight matching also respects queue size not only whether queues are empty or not .",
    "maximum size matching may sometimes cause starvation due to head - of - line ( hol ) blocking which limits its throughput to below 100% in some cases @xcite and @xcite . on the other hand",
    ", maximum weight matching policies always guarantee 100% throughput for all admissible traffic ( with analogy , @xmath150 in our problem ) and two mwm algorithms are offered to achieve 100% throughput in @xcite . however , due to lower computational complexity , msm policies are sometimes preferred @xcite .    different from unicast switch scheduling problems , there is no preffered output for packets in the eh scheduling problem .",
    "all @xmath1 lines correspond to the same output port to which any packet can be sent .",
    "this implies that hol blocking does not occur in the eh scheduling problem , so both msm and mwm will provide 100% throughput in our problem . due to lower computational complexity",
    ", msm is preferable . to find an omniscient policy for the eh scheduling problem",
    ", we assume that fc knows whether each node can transmit data or not in any ts . with this knowledge",
    ", there is no unique optimal omniscient policy for this problem .",
    "we shall concentrate on one optimal policy which provides intuition to find a near optimal , nonomniscient , online policy later .    to find such a policy ,",
    "we map the problem onto a variation of block - packing game tetris .",
    "a different tetris model which we are inspired by was previously used in multicast switch scheduling problems @xcite and @xcite . in this model , packets from same input are sent to different output ports . in our case ,",
    "different from the tetris model of @xcite and @xcite , the packets from same input are sent to same output port if the input is scheduled to transmit data to that output port in our model ( the model is shown in figure 2 . ) . that is the critical point which provide us intuition to find a near optimum , nonomniscient , online policy in the next section .",
    ", @xmath151 during the interval @xmath152 $ ] .",
    "dark colored tss represent busy slots labeled by node i d using the slot , and the white ones represent idle ones .",
    "3 of 30 slots are idle even under an optimum omniscient policy ( up ) ( @xmath153 ) .",
    "up allocates the slots in order to leave the least number of slots idle : resembling a tetris game .",
    "note that each node can use only one channel at a time.,scaledwidth=80.0% ]    based on our tetris model , we propose an omniscient , optimum scheduling policy , _ uniformizing policy ( up ) _ for all admissible eh process .",
    "considering nonuniform eh processes at all @xmath0 nodes , up uses the empty output ports to schedule the nodes in each ts . if there are some nodes which are scheduled in previous ts but does not have enough energy to transmit data in current ts , up schedules new nodes . by scheduling new nodes , up",
    "prevents output ports to remain idle and balances the load in each of @xmath1 output ports . hence , up _",
    "uniformizes _ the nonuniform eh processes of @xmath0 nodes such that all packets are scheduled in each of @xmath1 output port almost equally . by this almost equal partition of the packets sent by nodes , up makes _ uniformization _ and provides 100% throughput under all admissible uniform and non - uniform eh processes .",
    "the operation of up is summarized below :    \\1 .",
    "order the nodes arbitrarily and use this order throughout problem horizon .",
    "schedule the first @xmath1 nodes in the ordering that have enough energy to transmit a packet .",
    "\\3 . at the beginning of the next ts ,",
    "check the @xmath1 nodes that were just scheduled .",
    "replace those without energy to transmit a packet with new ones , respecting the initial order . if less than @xmath1 nodes with enough energy can be found , schedules those nodes only .",
    "continue in a cyclic way .",
    "assuming that all eh process is known in previous section , an optimal omniscient solution is proposed for the eh scheduling problem .",
    "however , the battery states of the nodes are not known in the exact eh scheduling problem .",
    "therefore , we propose a near - optimal online scheduling policy by using lemma 1 ( stated below ) for all admissible eh processes @xmath154 .",
    "@xmath154 means that there exists always idle tss over a problem horizon even if an optimal policy is applied .",
    "lemma 1 states that if a scheduled node can not transmit data in ts @xmath6 , an 100% efficient policy is applied to that node until ts @xmath6 .",
    "therefore , we propose urop which uses the idle tss to determine battery state of the scheduled nodes ( whether a node has enough energy to transmit data or not ) .    since eh processes are completely unpredictable for some eh sources @xcite , urop orders the nodes randomly before starting to schedule them .",
    "urop operates as below :    \\1 .",
    "schedule the first @xmath1 nodes according to initially determined random order .",
    "if a scheduled node transmits data to fc in that ts , then it continues to be scheduled .",
    "\\3 . otherwise , fc starts to schedule the nodes which have highest priority in the cyclic random order instead of the leaving ones .    to schedule all nodes once",
    ", fc uses @xmath0 nodes to complete a period ( all nodes are scheduled once ) . as @xmath155 , the ratio of idle tss over whole problem horizon decreases .",
    "the algorithm , urop , whose operation is described above is hence an adaptive and near optimal policy . in this section",
    ", the efficiency of urop is investigated by assuming that no node behaves as _ an elephant node _",
    "( defined below ) . in section vii",
    ", it is shown that urop is asymptotically optimal over infinite horizon for all admissible eh processes .",
    "_ definition 1 ( elephant node ) : _ if the node who is next in line for selection by the fc happens to be already transmitting continuously since its last selection , the node is said to behave as an _ elephant node _ between the previous selection ( scheduling ) time and the current selection time . in this case , fc selects the next node to schedule for one of the empty channels and the elephant node continues to transmit on its assigned channel as before .",
    "figure 3 represents an elephant node .",
    ", @xmath151 during the interval @xmath156 $ ] .",
    "dark colored tss represent busy slots labeled by node i d , and the white ones represent idle ones .",
    "node 4 behaves as an elephant node since it does not idle within a round continues transmission from @xmath157 , until @xmath158 .",
    "note that it has already transmitted data in @xmath159 when it is next supposed to be scheduled.,scaledwidth=70.0% ]      in this part , the efficiency of urop is investigated in general case of eh process .",
    "first , several lemmas are stated and proved .",
    "then , they are used to prove theorem 4 and theorem 5 .",
    "* lemma 1 ( partial optimality ) : * _ if @xmath160 for a sensor @xmath5 at the end of ts @xmath6 , an optimal policy has been applied for sensor @xmath5 and efficiency is 100% for sensor @xmath5 up to @xmath6 . _    * _ proof of lemma 1 : _ * the number of data packets which could be sent by sensor @xmath5 with the remaining energy in ts @xmath6 is @xmath161 . since @xmath162 , @xmath163 . by ts",
    "@xmath6 , @xmath5 has transmit all data which could be sent with @xmath7 , and efficiency is 100% for node @xmath5 until ts @xmath6 .",
    "* remark 2 : * _ if @xmath7 is the total amount of harvested energy in sensor @xmath5 until ts @xmath6 and @xmath164 is the number of packets ( throughput ) which could be sent by sensor @xmath5 until ts @xmath6 under @xmath165 , @xmath166 .",
    "recall that @xmath167 for @xmath168_.    now , we will define some new parameters which will be used in lemma 2 , lemma 3 , lemma 4 and theorem 4 .",
    "remember that @xmath169 is the set of mutually orthogonal channels of fc .",
    "@xmath170 is the @xmath120 idle ts for @xmath171 , the @xmath172 channel of the fc . in this ts @xmath170",
    ", fc drops a node using @xmath172 channel and start to schedule another node in same channel .",
    "@xmath173 let s denote by @xmath174 the idle tss for @xmath171 , the @xmath172 channel of the fc . in these tss",
    ", fc drops some of the @xmath1 nodes and starts to schedule other nodes in their place .",
    "@xmath175 is the set which consists of all pairs @xmath176 where @xmath177 , @xmath178 .",
    "figure 4 represents the pairs ( idle tss in 2-dimension ) .",
    "let s denote by @xmath179 and @xmath180 the idle tss when fc starts to schedule node @xmath5 for the last time and for the second last time , respectively .",
    "if @xmath181 and @xmath182 , @xmath183 and @xmath184 are the set of all pairs @xmath185 such that @xmath186 for a @xmath70 and the set of all pairs @xmath185 such that @xmath187 for a @xmath70 .",
    "there are @xmath0 nodes so @xmath188 . if @xmath189 and @xmath190 , @xmath191 is the set of all pairs @xmath192 such that @xmath193 for @xmath70 .",
    "moreover , @xmath194 is the set of all pairs @xmath192 such that @xmath193 and @xmath195 for @xmath70 . in other words , @xmath196 and @xmath197 .",
    "channels over problem horizon @xmath4 .",
    "dark colored tss represent busy slots , and the white ones represent idle ones.,scaledwidth=60.0% ]    * lemma 2 : * _ if @xmath198 _ ,    _ i. there exists no @xmath199 such that @xmath200 for @xmath201 _    _ ii .",
    "there exists no @xmath202 such that @xmath200 for @xmath203 _    * _ proof of lemma 2 : _ *    * _ part i : _ * assume that there is a pair @xmath199 such that @xmath200 for @xmath204 . since @xmath193 for @xmath205 , the node @xmath206 which is selected by the fc in ts @xmath207 will be selected by the fc at least once more ( @xmath208 ) . according to urop ,",
    "a node @xmath206 which is selected in ts @xmath123 can not be selected by the fc in ts @xmath124 unless @xmath209 are selected in the interval@xmath210 $ ] . since @xmath211 for @xmath212 ,",
    "these nodes can not be selected by the fc in @xmath213 $ ] . therefore , there exists no @xmath199 such that @xmath200 for @xmath201    * _ part ii : _ * @xmath196 and @xmath214 . replacing @xmath215 and @xmath184 with @xmath175 and @xmath183 , respectively , in case 1 , we can said that there exists no @xmath202 such that @xmath216 for @xmath217 . by case 1 of lemma 2",
    ", there exists no @xmath218 such that @xmath216 for @xmath219 .",
    "therefore , there exists no @xmath202 such that @xmath200 for @xmath203 .",
    "* lemma 3 : * _ if @xmath220 is the idle ts when fc stops to schedule node @xmath125 for the last time and @xmath221 is the set of the idle tss @xmath220 , @xmath222 . _    * _ proof of lemma 3 : _ * recall that @xmath223 .",
    "it can be said that fc starts to schedule a node iff it leaves ( stops to schedule ) another node .",
    "@xmath224 includes two consecutive time ( the last and second last time ) when fc starts to schedule a node for all nodes .",
    "assume that fc schedules a node @xmath5 .",
    "unless fc stops to schedule the node @xmath5 , it can not start to schedule the node @xmath5 again .",
    "therefore , @xmath224 includes at least one departure time for each node . since @xmath224 includes the latest @xmath225 idle tss and at least one departure time for each node , @xmath226 for @xmath227 . hence , @xmath222 .",
    "now , we write lemma 4 and lemma 5 which will help us find the lower bound of efficiency .",
    "* lemma 4 : * _ assume that @xmath228 is the set of @xmath1 nodes which are scheduled last by the fc in problem horizon @xmath4 , each node @xmath229 transmits @xmath230 data in the interval @xmath231 $ ] . _",
    "* _ proof of lemma 4 : _ * if @xmath228 is the set of last @xmath1 nodes which are scheduled by the fc in problem horizon @xmath4 , there will be no other selection so no idle ts until deadline of problem horizon @xmath4 . since each node can transmit at most one packet in each ts , each node @xmath229 transmits @xmath232 data in the interval @xmath231 $ ] .",
    "* lemma 5 : * _ assume that @xmath233 $ ] and @xmath96 .",
    "if @xmath5 is not scheduled in interval @xmath210 $ ] , @xmath234 where @xmath164 is the number of packets ( throughput ) which could be sent by sensor @xmath5 until ts @xmath6 under optimal policy @xmath165 . _    * _ proof of lemma 5 : _ * by remark 2 , @xmath235 and @xmath236 can be written as below : @xmath237    from remark 1 ( no battery leakage ) , the inequality below is written for @xmath205 @xmath238 @xmath239    by putting ( [ 30 ] ) into ( [ 32 ] ) , @xmath240    by using ( [ 33 ] ) , it is shown that @xmath234 is possible ; however , @xmath241 is not possible .",
    "there are three cases as below :    _ _ i)__@xmath242 since @xmath243    _ _ ii)__@xmath244 since @xmath245 , @xmath246 and @xmath247    _ _ iii)__@xmath248 since @xmath245 , @xmath246 and @xmath247 this situation contradicts with ( [ 32 ] ) .",
    "hence,@xmath243 for @xmath19 and @xmath234 for @xmath19 .",
    "* theorem 4 ( efficiency bounds of urop ) : * _ last departure time of the node @xmath249 which satisfies @xmath250 for @xmath251 is denoted by @xmath252 . in problem horizon",
    "@xmath4 , the efficiency of urop is bounded as below : _",
    "@xmath253 _ where @xmath254 is the number of packets ( throughput ) which could be transmitted by sensor @xmath5 until ts @xmath6 ( included ) under optimal policy @xmath165 .",
    "_    * _ proof of theorem 4 : _ * @xmath255 is the number of packets ( throughput ) which have been sent by sensor @xmath5 until ts @xmath6 .",
    "@xmath256 is the number of packets ( throughput ) which could be transmitted by sensor @xmath5 in the interval @xmath257 $ ] .",
    "@xmath258 can be written for @xmath205 . by lemma 1",
    ", @xmath259 is the throughput in ts @xmath260 until when an optimum policy @xmath165 is applied to node @xmath5 .",
    "therefore , @xmath256 is the only factor for throughput loss of node @xmath261 .",
    "for @xmath262 , the throughput loss by @xmath256 decreases by @xmath263 by lemma 4 .",
    "hence , the efficiency of urop in problem horizon @xmath4 can be written as below : @xmath264    by using lemma 4 , the term @xmath265 is added to numerator in ( [ 34 ] ) since @xmath262 are not considered to be left by the fc in ts @xmath4 .",
    "it is assumed that @xmath266 for @xmath267 .    by ( [ 34 ] ) , we can upper bound @xmath32 .",
    "upper bound for efficiency of urop _ *    efficiency of a policy can not be more than 100% ( @xmath268 ) . from ( [ 34",
    "] ) , @xmath269 only if the equality ( [ 35 ] ) is satisfied : @xmath270    ( [ 35 ] ) comes true only if ( [ 36 ] ) is satisfied : @xmath271    if sensors harvest energy such that ( [ 36 ] ) is satisfied , @xmath269 . therefore , upper bound of @xmath32 is 100% , namely , @xmath272 .    by ( [ 34 ] ) , let s find the lower bound of @xmath32 .",
    "lower bound for efficiency of urop _ *    the inequalities below can be written for a long problem horizon @xmath4 .",
    "@xmath273    to find the lower bound of @xmath32 , we will define a loss function @xmath274 in ( [ 38 ] ) according to ( [ 34 ] ) and maximize @xmath274 by considering the worst case .",
    "@xmath275    in ( [ 38 ] ) , @xmath274 can be maximized by minimizing @xmath265 .",
    "since @xmath276 for @xmath267,@xmath277 .",
    "this occurs only if @xmath278 for @xmath267 .    by equation ( [ 5 ] ) , @xmath279 . since @xmath277",
    ", @xmath274 is maximized if @xmath280 .",
    "then ( [ 38 ] ) converts into ( [ 41 ] ) . @xmath281    we denote by @xmath282 the set of @xmath1 nodes which satisfy @xmath283 for @xmath284 and @xmath285 . @xmath274 can be written as follows : @xmath286    while maximizing @xmath274 , ( [ 43 ] ) must be considered for @xmath205 from theorem 1 .",
    "@xmath287    from ( [ 43 ] ) , fc can accumulate maximum @xmath1 data .",
    "this scheduling capacity can be achieved if there is an energy harvesting process such that @xmath1 of @xmath0 nodes can transmit 1 data in each ts and the remaining nodes can transmit no data .    in this case",
    ", @xmath274 becomes maximum when each sensor @xmath288 harvests 1 unit energy and the other sensors @xmath285 harvest almost no energy in each ts.it can be shown as below in ( [ 44 ] ) . by putting ( [ 41 ] ) in ( [ 42 ] ) , ( [ 44 ] ) can be written as below : @xmath289    last departure time of the node @xmath249 which satisfies @xmath283 for @xmath251 is denoted by @xmath252 . by using lemma 5 , we write an upper bound for @xmath274 as below in ( [ 45 ] ) : @xmath290    to maximize @xmath274 , maximizing @xmath291 will be enough so take @xmath292 . to satisfy this equality ,",
    "we assume that @xmath293 for @xmath288 . by using ( [ 43 ] ) ,",
    "the inequality ( [ 46 ] ) can be written @xmath294 @xmath295 @xmath296 @xmath297\\nonumber \\\\",
    "+ \\sum_{s_i\\in s_m - s_k^{(lf ) } } \\left[v_i^{(t_0)}(t)-v_i^{(f)}\\left(\\zeta_i^{(f)}\\right)+ v_i^{(f)}\\left ( \\zeta_i^{(f ) } \\right)\\right ] \\leq k(n - t_0 ) \\end{aligned}\\ ] ]    since @xmath298 for all @xmath288 , @xmath299 for all @xmath288 .",
    "hence , the inequality converts into ( [ 50 ] ) , @xmath300 \\nonumber \\\\",
    "+ \\sum_{s_i\\in s_m - s_k^{(lf)}}\\left[v_i^{(f)}\\left ( \\zeta_i^{(f ) } \\right)\\right ] \\leq k(n - t_0)\\end{aligned}\\ ] ]    by using ( [ 42 ] ) and ( [ 45 ] ) for @xmath291 in ( [ 50 ] ) , ( [ 51 ] ) can be written as below : @xmath301",
    "\\leq k(n - t_0)\\ ] ]    since @xmath302 for all @xmath285 , by lemma 5 , ( [ 52 ] ) can be written @xmath303 @xmath304 @xmath305    by ( [ 51 ] ) , to maximize @xmath291 , @xmath306 $ ] should be minimized . by ( [ 54 ] ) ,",
    "if @xmath308 , ( [ 51 ] ) converts into ( [ 56 ] ) , @xmath309 by using ( [ 45 ] ) and ( [ 56 ] ) , @xmath310    by ( [ 34 ] ) , efficiency of urop can be written as below : @xmath311    recall that @xmath277 . from ( [ 37 ] ) , @xmath312 , @xmath313    hence , theorem 4 is proven and the efficiency of urop is bounded as below : @xmath314    _ when elephant nodes are present : _",
    "regular nodes scheduled by urop , give rise to at least one idle ts in a period ( frame ) .",
    "however , this does not hold for elephant nodes .",
    "if there are nodes that behave as elephant nodes in a period , these do leave any ts empty in that period . consequently , for these nodes urop behaves as up , which does not give up ts to determine the battery states of nodes . hence , efficiency bounds in theorem 4 are also valid in case of elephant nodes .",
    "considering _ the worst case _ in theorem 4 , we found lower and upper bounds for the efficiency of urop in terms of parameters . @xmath1 is known and @xmath254 can be found for each node @xmath5 by remark 2 .",
    "however , the parameter @xmath315 can not be determined unless all details of scheduling in problem horizon is known .",
    "due to the incertainty of @xmath315 , theorem 4 does not give sufficient information about efficiency of urop . as we mentioned in section",
    "ii , expected average reward is a suitable performance measure for the eh scheduling policy over finite or infinite horizon @xcite . considering @xmath315 ( and the other departure times of nodes ) as ergodic processes depending on eh processes , we take expectation of the bounds of urop in theorem 5 . hence , the bounds of urop can be determined in expected manner .",
    "* theorem 5 : * _ for @xmath316 , expected efficiency of urop is bounded as below : _",
    "@xmath317 _ where @xmath318 and @xmath1 are density , problem horizon length , number of the sensors , number of the orthogonal channels of the fc , respectively . _    * _ proof of theorem 5 : _ * by theorem 4 , the efficiency of urop can be written as below : @xmath319",
    "@xmath320 @xmath321 @xmath322 we denote by @xmath323 and @xmath324 , elapsed time between two consecutive selection of same sensor @xmath5 and elapsed time between two consecutive departure of same sensor @xmath5 . for long problem horizons , @xmath325=@xmath326 . by lemma 3 , @xmath222 . by lemma 2 ,",
    "none of nodes @xmath261 can be selected ( started to schedule ) more than twice by the fc in the interval @xmath327 $ ] ; therefore , @xmath328 .",
    "none of the nodes @xmath262 can be left ( stopped to schedule ) more than once by the fc in interval @xmath329 $ ] ; therefore , @xmath330 .",
    "hence , ( [ 69 ] ) is converted into ( [ 70 ] ) : @xmath331 let denote by @xmath332 and @xmath333 , density during problem horizon @xmath4 and the number of orthogonal channels of the fc . by definition of @xmath332 , @xmath334 .",
    "@xmath335 @xmath336 @xmath337 @xmath338 * _ note : _ * since @xmath339 means no harvested energy in the whole network , it is trivial case and not considered in our calculations .",
    "@xmath340 means that there is no idle ts if fc apply the 100% efficient policy ( @xmath26 ) . however , urop benefits from idle tss to schedule the sensors . from theorem 1",
    ", no @xmath26 exists for @xmath341 .",
    "therefore , we investigate @xmath316 in this paper .",
    "as in ( [ 23 ] ) and ( [ 29 ] ) , efficiency of rr - based policies ( also mp in @xcite and @xcite ) depend on not only sensor densities @xmath332 and @xmath41 but also partial sensor densities @xmath35 and @xmath37 and can not improve as problem horizon goes to infinity .",
    "also , it is proved that batteries of nodes for which @xmath342 and @xmath78 will overflow over infinite horizon .",
    "however , efficiency of urop in finite horizon case improves as the problem horizon increase and goes to infinity . by theorem 5 and the relation @xmath343 ,",
    "efficiency of urop is , for @xmath316 , @xmath344 hence , @xmath345 , which shows that urop is _ asymptotically optimal _ in the infinite horizon for general eh processes .",
    "in this section , efficiency achieved by rr and urop policies are compared for independent ( poisson ) and correlated ( markovian ) eh processes under high density ( d=0.975 ) and low density ( d=0.2 ) eh processes first .",
    "rr and urop are then compared under a fairness criterion for independent ( poisson ) and correlated ( markovian ) eh processes under high density ( d=0.975 ) .",
    "finally , computational complexities of rr , urop and up ( the omniscient policy proposed in section v ) are compared .",
    "we focus on the region @xmath64 so @xmath346 .    to begin with ,",
    "we compare efficiencies of these policies under both infinite and finite battery assumption for four cases . to create a realistic scenario , we take @xmath347 , @xmath348 , @xmath349 for both policies",
    ". we also investigate the efficiency of urop by taking @xmath350 and @xmath348 .",
    "note that we compare efficiency of urop with an arbitrary rr since @xmath351 for long problem horizons ( theorem 3 ) .",
    "we investigate the efficiencies of both policies under a nonuniform eh process ( both achieve nearly 100% efficiency for uniform eh processes ) .",
    "nonuniform , high density traffic is formed by taking @xmath352 for 25 of the nodes and @xmath353 for the remaining ones . moreover , low density , nonuniform traffic is formed by taking @xmath354 for 5 nodes and @xmath355 for the remaining nodes .",
    "independent eh processes are modelled as poisson .",
    "markov eh process are modelled by a state space @xmath356 , @xmath357 and a @xmath358 transition matrix @xmath359 such that @xmath360 @xmath361 and @xmath362 for @xmath363 . the harvested energy for node @xmath5 in ts @xmath6 , @xmath8 ,",
    "is determined by @xmath364 such that @xmath365 ( note that each transmission requires unit energy . ) .    in figure 5 ( low density , independent eh process ) , urop has nearly 100% efficiency whereas rr has approximately 80% efficiency . in figure 6 ( high density , independent eh process )",
    ", urop continues to attain nearly 100% efficiency whereas the efficiency of rr has dropped below 50% .",
    "this is an expected result since theorem 2 states that as the number of nodes s.t .",
    "@xmath342 increases , efficiency of rr decreases . by ( [ 20 ] ) , efficiency of rr is expected to be @xmath366 and @xmath367 for the low and high density eh process , respectively .    in figure 7",
    "( low density , markov eh process ) , urop has nearly 100% efficiency whereas rr has nearly 70% efficiency . in figure 8 ( high density , markov eh process ) ,",
    "urop has nearly 100% efficiency whereas rr has nearly 50% efficiency .",
    "when the eh process has memory , we observe similar results , except that the performance of rr drops further .",
    "the efficiency of urop is more robust to memory in harvest process , as compared to rr ( note that @xmath360 , @xmath361 ) .    considering all four figures , we wish to make three additional remarks .",
    "first , the efficiency of urop converges to 100% @xmath368 , as shown in section vii ( urop is asymptotically optimal ) .",
    "secondly , efficiency of urop with a reasonable - sized finite battery @xmath369=50 is almost same as that with infinite battery .",
    "finally , urop can achieve nearly 100% throughput both for @xmath370 and @xmath371 cases , while rr needs @xmath370 assumption for optimality .",
    "we conclude that urop is more adaptive and efficient than rr ( and mp proposed in @xcite by theorem 3 ) .",
    "in addition to throughput , the performances of rr and urop are also compared in terms of fairness , which is often an important issue for scheduling policies .",
    "we apply jain s fairness index @xcite , @xmath372 ^ 2}{m \\sum_{i=1}^m x_i^2(t)}$ ] where @xmath373 is the @xmath374 user allocation up to ts @xmath6 .",
    "adopting the _ proportionate progress _ ( p - fairness ) criterion in @xcite , we scale the allocation @xmath375 over users .    rr is usually known as a fair policy since it schedules users periodically .",
    "rr is 100% fair for uniform eh processes .",
    "however , rr may not be very fair for nonuniform eh processes .",
    "in fact , from [ 23 ] and [ 29 ] the efficiency of rr is expected to be @xmath376 for high density @xmath377 , nonuniform arrivals . on the other hand , urop schedules the users proportionally to their loads as well as respecting same or periodically .",
    "consequently , urop can achieve 100% fairness for general case of eh process .",
    "this is evident on figure 9 and figure 10 .",
    "it is also observed that urop is nearly 100% fair also for @xmath2 noninteger case .",
    "in addition to throughput and fairness , the policies are compared in terms of computational complexity .",
    "rr has complexity @xmath378 .",
    "besides achieving almost 100% throughput and 100% fairness for various eh processes , urop has low - complexity as well . in each ts ,",
    "urop checks the @xmath1 nodes which are scheduled in previous ts thus it makes only @xmath1 computations in each ts .",
    "therefore , computational complexity of urop is @xmath379 .",
    "it is also interesting to compare urop with up in terms of computational complexity .",
    "up is an optimal omniscient policy . in each ts ,",
    "up checks the @xmath1 nodes scheduled in previous ts and looks for replacement nodes if some of the @xmath1 nodes can not transmit data in that ts .",
    "number of computation which up makes in each ts is between @xmath1 and @xmath0 .",
    "hence , up has a computational complexity between @xmath379 and @xmath380 .",
    "the results show that to achieve 100% throughput , up may have complexity @xmath380 whereas up may have complexity @xmath379 .",
    "this implies that up may have @xmath381 times more computation than urop to achieve the same throughput performance .",
    "in other words , urop achieves the same performance as up with up to @xmath381 times lower complexity .",
    "this paper investigated a scheduling problem for a single - hop wsn where a fusion center(fc ) schedules a set of eh nodes to receive data from them .",
    "fc does not know the instantaneous battery states of nodes .",
    "batteries get recharged according to random energy harvesting processes , whose statistics are not available to the fc , and there is no leakage from the batteries . under an infinite battery capacity assumption ,",
    "we exhibit a near - optimal online scheduling policy for a broad set of eh processes ( markovian , independent , uniform , nonuniform , etc . )",
    "the scheduling problem is set up as an expected undiscounted reward maximization problem .",
    "it is shown that round robin ( rr ) based policies are generally suboptimal(do not guarantee 100% throughput ) for nonuniform eh processes .",
    "it is also shown that policies proposed in previous literature ( namely , myopic policies in @xcite and @xcite have almost equal efficiency as any other rr policy with quantum=1 .",
    "next , a low - complexity scheduling policy , urop , is proposed .",
    "it is shown that urop is asymptotically optimal regardless of traffic , in the infinite horizon . even in the finite horizon",
    ", urop achieves nearly 100% throughput without requiring feedback about battery states of nodes . as this is a type of restless multi - armed bandit problem , the simple self - adapting scheduling technique of urop could find potential applications in problems other than communication networks , whenever the performance measure is average reward and the queues store a flexible ( time insensitive ) resource such as energy .",
    "j. a. paradiso and t. starner , `` energy scavenging for mobile and wireless electronics '' , _ ieee pervasive computing _ , pp .",
    "18 - 27 , jan .",
    "2005 a. kansal , j. hsu , s. zahedi , and m. b. srivastava , `` power management in energy harvesting sensor networks '' , in _ acm transactions on embedded computing systems ( tecs ) _ , vol . 6 , no .",
    "4 , p.32-es , september 2007 . c. f. garca - hernndez , p. h. ibargengoytia - gonzlez , j. garca - hernndez , j. a. prez - daz , `` wireless sensor networks and applications : a survey '' , _ ijcsns internacional journal of computer science and network security _ , vol . 7 , no .",
    "3 , march 2007 , pp . 264 - 273 .",
    "s. sudevalayam , p. kulkarni , `` energy harvesting sensor nodes : survey and implications , '' _ ieee communications surveys & tutorials _ ,",
    "vol.13 , no.3 , pp.443 - 461 , third quarter 2011 .",
    "r. e. bellman , _ dynamic programming_. princeton , n.j .",
    ": princeton university press , 1957 c. j. watkins , `` learning from delayed rewards '' , _ ph.d .",
    "dissertation _ , university of cambridge , psychology dep .",
    ", 1989 l. p. kaelbling , michael l. littman , andrew w. moore,``reinforcement learning : a survey '' , _ journal of artificial intelligence research _",
    ", v.4 n.1 , january 1996 , pp.237 - 285 c. j. watkins , p. dayan ( 1992 ) .",
    "`` q - learning '' .",
    "_ machine learning _ ,",
    "8 ( 3 ) , pp .",
    "279 - 292 s. mahadevan , `` average reward reinforcement learning : foundations , algorithms , and empirical results , '' _ machine learning , special issue on reinforcement learning _ ,",
    "159 - 196 , 1996 r.s .",
    "sutton , a.g .",
    "barto , _ reinforcement learning : an introduction_. mit press , cambridge , ma , 1998 j. c. gittins , `` bandit processes and dynamic allocation indices ( with discussion ) '' , _",
    "soc . _ series b , vol .",
    "41 , no.2 ( 1979 ) pp .",
    "148 - 177 .",
    "whittle , p. ( 1988 ) .",
    "`` restless bandits : activity allocation in a changing world .",
    "_ in a celebration of applied probability _ j. gani ( ed . ) , j. appl .",
    "25a 287 - 298 c. h. papadimitriou and j. n. tsitsiklis , ' ' the complexity of optimal queueing network control `` , _ math .",
    "_ , vol 24 , may 1999 , pp .",
    "293 - 305 s. h. a. ahmad , m. liu , t. javidi , q. zhao and b. krishnamachari , ' ' optimality of myopic sensing in multi -channel opportunistic access `` _ ieee trans .",
    "inf . theory _ , vol 55 , no .",
    "9 , pp . 4040 - 4050 , sept .",
    "s. h. a. ahmad , l. mingyan , ' ' multi - channel opportunistic access : a case of restless bandits with multiple plays , `` _ in proc .",
    "allerton conf .",
    ", comput . , _ monticello , il , pp .",
    "1361 - 1368 , sept .",
    "k. liu and q. zhao , ' ' indexability of restless bandit problems and optimality of whittle index for dynamic multichannel access , `` _ ieee trans . inf .",
    "theory _ , vol 56 , no .",
    "5547 - 5567 , nov .",
    "2010 a. hero , d. castanon , d. cochran , k. kastella , _ foundations and applications of sensor management _ , chapter 6 , springer , us , 2007 p. blasco , d.gunduz , and m. dohler , ' ' low - complexity scheduling policies for energy harvesting communication networks `` , _ ieee international symposium on information theory ( isit)_,istanbul , turkey , july 2013 , pp .",
    "1 - 5 m. johnston , e. modiano , i. keslassy ' ' channel probing in communication systems : myopic policies are not always optimal `` , _ ieee international symposium on information theory ( isit)_,istanbul , turkey , july 2013 , pp . 1 - 5",
    "f. iannello , o. simeone , and u. spagnolini , ' ' optimality of myopic scheduling and whittle indexability for energy harvesting sensors , `` _ in 46th annual conference on information sciences and systems(ciss ) _ , princeton , nj , usa , march 2012 , pp .",
    "16 j. gittins , k. glazerbrook , r. weber , _ multi - armed bandit allocation indices_. west sussex , uk , wiley , 2011 .",
    "a. arapostathis , v. s. borkar , e. fernndez - gaucherand , m. k. ghosh , and s. i. marcus , ' ' discrete - time controlled markov processes with average cost criterion : a survey , `` _ siam j. control optim .",
    "31 , no . 2 , 1993 ,",
    ". n. mckeown , a. mekkittikul , v. anantharam , j. walrand . , ' ' achieveing 100% throughput in an input - queued switch `` , _ ieee transactions on communications _",
    "47 , no . 8 , pp . 1260 - 1267 , august 1999 . yanming shen , s. panwar , and h. j. chao , ' ' design and performance analysis of a practical load - balanced switch , `` _ ieee transactions on communications _ ,",
    "2420 - 2429 , 2009 i. keslassy , r. z. shen , and n. mckeown , ' ' maximum size matching is unstable for any packet switch , `` _ ieee communications letters _",
    ", vol . 7 , pp .",
    "496 - 498 , oct .",
    "2003 a. mekkittikul and n. mckeown , ' ' a practical scheduling algorithm to achieve 100% throughput in input - queued switches , `` _ in proceedings of ieee infocom _ , vol .",
    "2 , san francisco , ca , apr . 1998 , pp . 792 - 799 .",
    "b. prabhakar , n. mckeown , and j. mairesse : ' ' tetris models for multicast switches `` , _ proc .",
    "of the 30th annual conference on information sciences and systems _ , princeton .",
    "1996 b. prabhakar , n. mckeown and r. ahuja , ' ' multicast scheduling for input - queued switches , `` _ ieee journal of selected areas communication _ , vol .",
    "855 - 866 , may 1997 .",
    "r.jain , d - m .",
    "chiu and w. hawe , ' ' a quantitative measure of fairness and discrimination for resource allocation in shared conputer systems , `` _ technical report tr-301 , dec research report _ ,",
    "september , 1984 s. k. baruah , n. k. cohen , c. g. plaxton , and d. a. varel , ' ' proportionate progress : a notion of fairness in resource allocation , \" _ algorithmica _ , 15(6):600625 , 1996 ."
  ],
  "abstract_text": [
    "<S> this paper considers a single - hop wireless network where a central node ( or fusion center , fc ) collects data from a set of @xmath0 energy harvesting ( eh ) nodes ( e.g. nodes of a wireless sensor network ) . in each time slot , @xmath1 of @xmath0 nodes </S>",
    "<S> can be scheduled by the fc for transmission over @xmath1 orthogonal channels . </S>",
    "<S> fc has no knowledge about eh processes and current battery states of nodes ; however , it knows outcomes of previous transmission attempts . the objective is to find a low complexity scheduling policy that maximizes total throughput of the data backlogged system using the harvested energy , for all types ( uniform , non - uniform , independent , correlated ( i.e. markovian ) , etc . ) eh processes . </S>",
    "<S> energy is assumed to be stored losslessly in the nodes batteries , up to a storage capacity ( the infinite capacity case is also considered . ) the problem is treated in finite and infinite problem horizons . a low - complexity policy , urop ( _ uniformizing random ordered policy _ ) is proposed , whose near optimality is shown . </S>",
    "<S> numerical examples indicate that under a reasonable - sized battery capacity , urop uses the arriving energy with almost perfect efficiency . </S>",
    "<S> as the problem is a restless multi - armed bandit ( rmab ) problem with an average reward criterion , urop may have a wider application area than communication networks .    </S>",
    "<S> shell : bare demo of ieeetran.cls for journals    communication networks , decision theory , energy harvesting , scheduling algorithms , wireless sensor network </S>"
  ]
}
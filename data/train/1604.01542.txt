{
  "article_text": [
    "robust optimization is a popular paradigm to handle optimization problems contaminated with uncertain data , see , e.g. , @xcite and references therein .",
    "starting from conservative robustness models requiring that the robust solution is feasible for any of the possible scenarios , new concepts have been developed , see @xcite for a recent survey .",
    "these concepts allow to relax this conservatism and to control the _ price of robustness _ , i.e. , the loss of objective function value one has to pay in order to obtain a robust solution , see @xcite . in many real - world problems",
    "these new robustness concepts have been successfully applied .",
    "motivated by two - stage stochastic programs , one class of such new models includes the so called _ recoverable robustness _ introduced in @xcite and independently also used in @xcite .",
    "recoverable robustness is a two - stage approach that does not require the robust solution to be feasible for all scenarios .",
    "instead , a recoverable - robust solution comes together with a _ recovery strategy _ which is able to adapt the solution to make it feasible for every scenario .",
    "such a recovery strategy can be obtained by modifying the values of the solution or by allowing another resource or spending additional budget , as soon as it becomes known which scenario occurs .",
    "unfortunately , a recoverable - robust solution can only be determined efficiently for simple problems with special assumptions on the uncertainties and on the recovery algorithms ( see @xcite ) , and the recoverable - robust counterpart is known to be np - hard even in simple cases @xcite .",
    "_ our contributions .",
    "_ in this paper we analyze the two main goals in recoverable robustness : obtaining a good objective function value in the worst case while minimizing the recovery costs .",
    "we consider the @xmath0-constrained version as a geometric problem , which allows to interpret robustness as a location planning problem , and derive results on pareto efficient solutions and how to compute them .",
    "_ overview .",
    "_ the remainder of the paper is structured as follows .    in the next section",
    "we sketch classic and more recent robustness concepts before we introduce the biobjective version of recoverable robustness in section  [ sec - recrob ] .",
    "we then analyze how to solve the scalarization of the recoverable - robust counterpart in section  [ sec : solve ] , and consider reduction approaches in section  [ sec - infinite ] . after discussing numerical experiments in section  [ sec :",
    "exp ] , we conclude with a summary of results and an outlook to further research in section  [ sec - conclusion ] .",
    "we consider optimization problems that can be written in the form @xmath1 where @xmath2 is a closed set , @xmath3 describes the @xmath4 constraints and @xmath5 is the objective function to be minimized .",
    "we assume @xmath6 and @xmath7 to be continuous . in practice",
    ", the constraints and the objective may both depend on parameters which are in many cases not exactly known . in order to accommodate such uncertainties , the following class of problems is considered instead of @xmath8 .    an _ uncertain optimization problem _ is given as a parameterized family of optimization problems @xmath9 where @xmath10 and @xmath11 are continuous functions for any fixed @xmath12 , @xmath13 being the _ uncertainty set _ which contains all possible scenarios @xmath14 which may occur ( see also @xcite ) .    a scenario @xmath15 fixes the parameters of @xmath6 and @xmath7 .",
    "it is often known that all scenarios that may occur lie within a given uncertainty set @xmath16 , however , it is not known beforehand which of the scenarios @xmath15 will be realized .",
    "we assume that @xmath16 is a closed set in @xmath17 containing at least two elements ( otherwise , no uncertainty would affect the problem ) .",
    "contrary to the setting of stochastic optimization problems , we do not assume a probability distribution over the uncertainty set to be known .",
    "the set @xmath18 contains constraints which do not depend on the uncertain parameter @xmath19 .",
    "these may be technological or physical constraints on the variables ( e.g. , some variables represent non - negative magnitudes , or there are precedence constraints between two events ) , or may refer to modeling constraints ( e.g. , some variables are boolean , and thus they can only take the values 0 and 1 ) .    in short , the uncertain optimization problem corresponding to p(@xmath19 ) is denoted as @xmath20 we denote @xmath21 as the feasible set of scenario @xmath15 and @xmath22 as the optimal objective function value for scenario @xmath19 ( which might be @xmath23 if it does not exist ) .",
    "note that @xmath24 is closed in @xmath25 , as we assumed @xmath18 to be closed , and @xmath26 to be continuous . in the following",
    "we demonstrate the usage of @xmath14 for the case of linear optimization",
    ". in the simplest case , @xmath19 _ coincides with the uncertain parameters _ of the given optimization problem .",
    "[ ex - linear ] consider a linear program @xmath27 with a coefficient matrix @xmath28 , a right - hand side vector @xmath29 and a cost vector @xmath30 .",
    "if @xmath31 , and @xmath32 are treated as uncertain parameters , we write @xmath33 i.e. , @xmath34 with @xmath35    however , in ( [ uncertain ] ) we allow a more general setting , namely that the unknown parameters @xmath36 may depend on ( other ) uncertain parameters @xmath14 .",
    "for example , there might be @xmath37 parameter @xmath38 which determines all values of @xmath36 .",
    "as an example imagine that the temperature determines the properties of different materials .",
    "in such a case we would have @xmath39 where @xmath40 and @xmath41 .",
    "we now summarize several concepts to handle uncertain optimization problems .",
    "the first formally introduced robustness concept is called _ strict robustness _ here .",
    "it has been first mentioned by soyster @xcite and then formalized and analyzed by ben - tal , el ghaoui , and nemirovski in numerous publications , see @xcite for an extensive collection of results .",
    "a solution @xmath42 to the uncertain problem ( [ uncertain ] ) is called _ strictly robust _ if it is feasible for all scenarios in @xmath16 , i.e. , if @xmath43 for all @xmath15 .",
    "the set of strictly robust solutions with respect to the uncertainty set @xmath16 is denoted by @xmath44 .",
    "the _ strictly robust counterpart _ of ( [ uncertain ] ) is given as @xmath45 the objective follows the pessimistic view of minimizing the worst case over all scenarios .",
    "often the set of strictly robust solutions is empty , or all of the strictly robust solutions lead to undesirable solutions ( i.e. , with considerably worse objective values than a nominal solution would achieve ) .",
    "recent concepts of robustness hence try to overcome the `` over - conservative '' nature of the previous approach . in this paper",
    "we deal with recoverable robustness which is described in the next section .",
    "other less conservative approaches include the approach of bertsimas and sim @xcite , reliability @xcite , light robustness @xcite , adjustable robustness @xcite ( which will be used in section  [ sec - relations ] ) , and comprehensive robustness @xcite . for a more detailed recent overview on different robustness concepts we refer to @xcite .",
    "our paper extends the recently published concepts of _ recoverable robustness_. as before , we consider a parameterized problem @xmath46 the idea of recoverable robustness ( see @xcite ) is to allow that a solution can be recovered to a feasible one for every possible scenario .",
    "there , a solution @xmath42 is called _ recoverable - robust _ if there is a function @xmath47 such that for any possible scenario @xmath15 , the solution @xmath48 is not too different from the original solution @xmath49 .",
    "this includes on the one hand the costs for changing the solution @xmath49 to the solution @xmath50 , and on the other hand the objective function value of @xmath50 compared to the objective function value of @xmath49 . the solution @xmath50 is called the _ recovery solution _ for scenario @xmath19 .",
    "examples include recoverable - robust models for linear programming @xcite , shunting @xcite , timetabling @xcite , platforming @xcite , the empty repositioning problem @xcite , railway rolling stock planning @xcite and the knapsack problem @xcite .",
    "an extensive investigation can be found in @xcite .",
    "note that the model has the drawback that even for simple optimization problems an optimal recoverable - robust solution is usually hard to determine .",
    "various goals may be followed when computing a recoverable - robust solution : on the one hand , the new solution should be recoverable to a good solution @xmath51 for every scenario @xmath15 .",
    "on the other hand , also the costs of the recovery are important : a new solution has to be implemented , and if @xmath49 differs too much from @xmath50 this might be too costly .",
    "we assume that the recovery costs can be measured by a metric @xmath52 .",
    "an example for metric recovery costs can be found , e.g. , for shunting in @xcite ; recovery costs defined by norms are also used frequently , e.g. , in timetabling @xcite , in recoverable - robust linear programming @xcite , or in vehicle scheduling problems @xcite .    our biobjective model for recoverable robustness can be formulated as follows : @xmath53 we look for a recoverable robust solution @xmath49 together with a recovery solution @xmath51 for every scenario @xmath15 .",
    "note that if @xmath16 is infinite , ( rec ) is not a finite - dimensional problem . in the objective function",
    "we consider    * the quality @xmath54 of the recovery solutions , which will finally be implemented , in the worst case , and * the costs of the recovery @xmath55 ,",
    "i.e. , changing @xmath49 to @xmath50 , again in the worst case .    as usual in multi - criteria optimization we are interested in finding pareto efficient solutions to this problem",
    ". recall that a solution @xmath56 is weakly pareto efficient if there does not exist another solution @xmath57 such that @xmath58 if there does not even exist a solution @xmath59 for which one of the two inequalities holds with equality , then @xmath60 is called pareto efficient .",
    "we call @xmath49 _ recoverable - robust _ for ( rec ) if there exists @xmath61 such that @xmath62 is pareto efficient for ( rec ) .",
    "@xmath50 is called the recovery solution for scenario @xmath19 .",
    "we are interested in finding recoverable - robust solutions @xmath49 .",
    "note that ( rec ) depends on the uncertainty set @xmath16 .",
    "this dependence is studied in section  [ sec - infinite ] .    in ( rec ) , the worst - case objective @xmath63 does not depend on @xmath49 .",
    "this is because we assume that @xmath49 is always modified to the appropriate solution @xmath50 when the scenario is revealed .",
    "we remark , that even if @xmath49 or @xmath64 is fixed , the resulting problem ( rec ) is still challenging .",
    "if @xmath49 is given , we still have to solve a biobjective problem and choose @xmath50 either with a good objective function value in scenario @xmath19 or with small recovery costs close to @xmath49 .",
    "if @xmath64 is given , ( rec ) reduces to a single - objective problem in which a point is searched which minimizes the maximum distance to all points @xmath65 .",
    "our first result is negative : pareto efficient solutions need not exist even for a finite uncertainty set and bounded recovery costs as the following example demonstrates .",
    "consider the uncertain program @xmath66 where @xmath67 is the uncertainty set and @xmath68 .",
    "the feasible sets of scenario @xmath69 and scenario @xmath70 are given by : @xmath71 both feasible sets are depicted in figure  [ figexamplesets ] . for the objective function @xmath72 ,",
    "the problem does not have any pareto efficient solution .     with only two scenarios .",
    "[ figexamplesets],scaledwidth=50.0% ]    it is known that all weakly pareto efficient solutions are optimal solutions of one of the two @xmath0-constraint scalarizations which are given by bounding one of the objective functions while minimizing the other one .    the first scalarization bounds the recovery costs and minimizes the objective function value in the first place , i.e. , @xmath73 this problem has been introduced as _ recoverable robustness _",
    "( see @xcite ) and solved in several special cases , e.g. , in @xcite .",
    "it is hence denoted as the _ classic _ scalarization approach .    in our paper",
    "we look at the other scalarization in which we minimize the recovery costs while requiring a minimal quality of the recovery solutions : @xmath74 note that constraints   and of this second scalarization do _ not _ depend on @xmath49 . to determine feasibility of ( rec(@xmath0 ) ) , we hence check if for every @xmath15 there exists @xmath50 such that @xmath75 i.e. , if the sets @xmath76 are not empty for all @xmath15 . to extend some given @xmath49 to a feasible solution",
    ", we choose some @xmath77 which is closest to @xmath49 w.r.t the metric @xmath78 .",
    "this is possible since @xmath79 is closed : we define @xmath80 where the minimum exists whenever @xmath81 .    with @xmath82 ,",
    "we can now rewrite ( rec(@xmath0 ) ) to an equivalent problem in the ( finitely many ) @xmath49-variables only : @xmath83 i.e. , @xmath49 is an optimal solution to ( rec(@xmath0 ) ) if and only if @xmath62 with @xmath84 is optimal for ( rec(@xmath0 ) ) .      in a classic location problem ( known as the _ weber problem",
    "_ or as the _ fermat - torricelli problem _ , see e.g. , @xcite ) we have given a set of points , called _ existing facilities _ , and we look for a new point minimizing a measure of distance to these given points .",
    "if the distance to the farthest point is considered as the objective function , the problem is called _",
    "center location problem_. we have already seen that for given @xmath61 , our biobjective problem ( rec ) reduces to the problem of finding a location @xmath49 which minimizes the maximum distance to the set @xmath85 , i.e. , a classic center location problem .    we now show that also the @xmath0-constrained version ( rec(@xmath0 ) ) of recoverable robustness @xmath86 can be interpreted as the following location problem : the existing facilities are not points but the sets @xmath87 .",
    "( rec(@xmath0 ) ) looks for a new location in the metric space @xmath18 , namely a point @xmath42 which minimizes the maximum distance to the given sets . for a finite uncertainty set @xmath16 ,",
    "such location problems have been studied in @xcite for the center objective function and in @xcite for median or ordered median objective functions .",
    "we adapt the notation of location theory and call such a point ( which then is an optimal solution to ( rec(@xmath0 ) ) a _ center _ with respect to @xmath88 and the distance function @xmath78 . in our further analysis",
    "we consider ( rec(@xmath0 ) ) from a location s point of view . to this end , let us denote the objective function of ( rec(@xmath0 ) ) by @xmath89 and let us call @xmath90 the ( recovery ) radius of @xmath49 with respect to @xmath0 and @xmath16 .",
    "let @xmath91 denote the best possible recovery radius over @xmath18 ( if it exists ) .",
    "for a center location @xmath92 we then have @xmath93 .",
    "the algorithmic advantage drawn from the connection between ( rec(@xmath0 ) ) and ( point ) location problems becomes clear for specific shapes of the sets @xmath94 for instance , let @xmath95 be given as @xmath96 for some norm @xmath97 and @xmath98 .",
    "then the sets @xmath79 are scaled and translated unit balls of the norm @xmath97 , i.e. , @xmath99 in this case we obtain that @xmath100 and it turns out that the center of the location problem with existing ( point ) facilities @xmath101 is an optimal solution to ( rec(@xmath0 ) ) and hence weakly pareto efficient for ( rec ) .",
    "we first point out the relation between ( rec ) and the concept of strict robustness of @xcite . to this end recall from section  [ sec : strict ] that @xmath102 is the set of strictly robust solutions and rc(@xmath103 is the strictly robust counterpart of @xmath104 .",
    "let an uncertain problem @xmath105 be given .",
    "then we have :    1 .",
    "if @xmath106 is an optimal solution to rc(@xmath16 ) then @xmath107 with @xmath108 is a lexicographically minimal solution to ( rec ) w.r.t @xmath109 .",
    "2 .   let @xmath107 be a lexicographically minimal solution to ( rec ) w.r.t @xmath110 .",
    "then @xmath111 if and only if @xmath112 and in this case @xmath107 is optimal to rc(@xmath16 ) .    1 .",
    "let @xmath106 be an optimal solution to rc(@xmath16 ) .",
    "define @xmath113 for all @xmath15 . then @xmath112 .",
    "now assume @xmath107 is not lexicographically minimal",
    ". then there exists @xmath114 with @xmath115 and @xmath116 .",
    "the first condition yields that @xmath117 for all @xmath15 , hence @xmath118 for all @xmath15 , and @xmath119 .",
    "using @xmath118 , the second condition implies @xmath120 , a contradiction to the optimality of @xmath106 for rc(@xmath16 ) .",
    "2 .   now let @xmath107 be lexicographically minimal to ( rec ) .",
    "* let @xmath112 .",
    "then @xmath121 , i.e. , @xmath122 for all @xmath15 .",
    "hence @xmath123 for all @xmath15 , i.e. , @xmath124 . * on the other hand , if @xmath125 there exists @xmath126 for all @xmath15 .",
    "we define @xmath127 for all @xmath15 and obtain @xmath128 . since @xmath107 is lexicographically minimal this implies @xmath112 .",
    "+ finally , if @xmath112 we already know that @xmath122 for all @xmath15 and @xmath129 , i.e. , feasible for rc(@xmath16 ) .",
    "the lexicographic optimality then guarantees that @xmath106 is an optimal solution to rc(@xmath16 ) .",
    "sorting the criteria in the objective function in the other order , i.e. , minimizing first @xmath130 and then @xmath131 is not directly related to any known robustness concept .",
    "this lexicographically minimal solution @xmath62 realizes an optimal solution @xmath50 in every scenario , and among these optimal solutions minimizes the recovery costs .",
    "let @xmath62 be a solution to ( rec ) which is lexicographically minimal w.r.t @xmath132 .",
    "then @xmath133 for all @xmath15 .",
    "we now turn our attention to ( rec(@xmath0 ) ) and show that this scalarization can be interpreted as adjustable robustness as in @xcite . motivated by stochastic programming",
    ", the variables in this concept are decomposed into two sets : the values for the _ here - and - now variables _ have to be found in the robust optimization algorithm while the decision about the _ wait - and - see variables _ can wait until the actual scenario @xmath15 becomes known . for an uncertain problem @xmath105 ,",
    "recall that ( rec(@xmath0 ) ) is given as @xmath134 we can rewrite this problem in the following way : @xmath135 which has the same structure as an adjustable robust problem . as an example , for a problem with linear objective function @xmath40 , linear constraints @xmath136 , and @xmath137 as recovery norm , we may write @xmath138 note that this is a problem _ without _ fixed recourse , such that most of the results in @xcite are _ not _ applicable . however , we are still able to apply their results on using heuristic , affinely adjustable counterparts , and theorem 2.1 from @xcite :    let @xmath105 be an uncertain linear optimization problem , and let the uncertainty be constraint - wise",
    ". furthermore , let there be a compact set @xmath139 such that @xmath140 for all @xmath12 .",
    "then , ( rec(@xmath0 ) ) is equivalent to the following problem @xmath141    note that problem is a strictly robust problem , which is considerably easier to solve than problem .",
    "furthermore , @xcite show that there is a semidefinite program for ellipsoidal uncertainty sets which is equivalent to problem .",
    "problem ( rec(@xmath0 ) ) can also be interpreted as a strictly robust problem in @xmath49 ( see ) .",
    "however , the function @xmath142 has in general not much properties such that most of the known results can not be directly applied .",
    "nevertheless , our geometric interpretation gives rise to the results of the next section , in particular within the biobjective setting .",
    "in this section we investigate the new scalarization ( rec(@xmath0 ) ) . after a more general analysis of this optimization problem in section  [ sec41 ]",
    ", we turn our attention to the case of a finite uncertainty set in section  [ sec - finite ] where we consider problems with convex and with linear constraints .",
    "let us now describe some general properties of problem ( rec(@xmath0 ) ) . since @xmath78 is a metric we know that @xmath143 hence the optimal value of ( rec(@xmath0 ) ) is bounded by zero from below , although it is @xmath144 if all points @xmath49 have infinite radius @xmath145 this event may happen even when all sets @xmath79 are non - empty .",
    "indeed , consider , for instance , @xmath146 @xmath147 for all @xmath148 one has , however , that finiteness of @xmath149 at one point @xmath150 and one @xmath0 implies finiteness of @xmath151 for all @xmath42 and for all @xmath152 . in that case",
    "we obtain lipschitz - continuity of the radius , as shown in the following result .",
    "let an uncertain optimization problem @xmath153 be given .",
    "suppose there exists @xmath154 such that @xmath155 then , @xmath156 for all @xmath157 and for all @xmath152 .",
    "in such a case , the function @xmath158 is lipschitz - continuous with lipschitz constant @xmath159 for every @xmath152 .",
    "take @xmath157 and @xmath160 let @xmath161 such that @xmath162 we have that @xmath163 hence , @xmath164 and therefore , @xmath149 is finite everywhere .",
    "since @xmath165 for all @xmath152 we also have finiteness if we increase @xmath0 .",
    "we now show that @xmath166 is also lipschitz - continuous .",
    "let @xmath167 , and let @xmath168 take @xmath169 such that @xmath170 since @xmath171 is closed , take also @xmath172 such that @xmath173    then , @xmath174 since this inequality holds for any @xmath175 we obtain @xmath176 , hence the function @xmath177 is lipschitz - continuous with lipschitz constant 1 .",
    "in what follows we assume finiteness of the optimal value of ( rec(@xmath0 ) ) , and thus lipschitz - continuity of @xmath178 hence , ( rec(@xmath0 ) ) may be solved by using standard lipschitz optimization methods @xcite .    for a given @xmath157 let us call @xmath15 a _ worst - case scenario _ with respect to @xmath49 ( and @xmath16 ) if @xmath179 and let @xmath180 be the set of all worst - case scenarios , i.e. , scenarios @xmath15 yielding the maximal recovery distance for the solution @xmath49",
    ". under certain assumptions , any optimal solution @xmath92 to ( rec(@xmath0 ) ) has a set @xmath181 with at least two elements , as shown in the following result .",
    "[ le : geq2 ] let an uncertain optimization problem @xmath182 be given .",
    "suppose that @xmath16 is finite ( with at least two elements ) and @xmath183 .",
    "fix some @xmath0 and assume that ( rec(@xmath0 ) ) attains its optimum at some @xmath184 then , @xmath185 .",
    "finiteness of @xmath16 implies that the maximum of @xmath186 must be attained at some @xmath187 hence , @xmath188 .    in the case that @xmath189 , we have that @xmath190 .",
    "thus , let @xmath191 .    in the case that @xmath192 for only one scenario",
    "@xmath193 we can construct a contradiction by finding a different @xmath49 with a better radius : take @xmath194 such that @xmath195 and , for @xmath196,$ ] define @xmath197 as @xmath198 since , by assumption , @xmath192 and @xmath16 is finite , there exists @xmath167 such that @xmath199 let us show that , for @xmath200 close to zero , @xmath197 has a strictly better objective value than @xmath201 which would be a contradiction .",
    "first we have @xmath202 for the remaining scenarios @xmath203 @xmath204 hence , for @xmath205 , we would have that @xmath206",
    "contradicting the optimality of @xmath207    if the finiteness assumption of lemma [ le : geq2 ] is dropped , not much can be said about the cardinality of @xmath208 since this set can be empty or a singleton :    let @xmath209 and let @xmath210 .",
    "let @xmath211 and choose @xmath212 .",
    "it is easily seen that @xmath213 \\\\ { \\mathcal{g}}_{\\varepsilon}(1,\\xi_2 ) = { \\mathcal{f}}(1,\\xi_2 ) & = & [ 1-\\frac{1}{\\xi_2},1 ] \\end{array}\\ ] ] for @xmath214 @xmath215 but there is no @xmath12 with @xmath216 . in other words ,",
    "@xmath217      in this section we assume that @xmath16 is finite , @xmath218 this simplifies the analysis , since we can explicitly search for a solution @xmath219 for every scenario @xmath220 . using the @xmath221 as variables we may formulate ( rec(@xmath0 ) ) as @xmath222",
    "we can write ( rec(@xmath0 ) ) equivalently as @xmath223 assuming that the distance used is the euclidean @xmath224 , the function @xmath225 is known to be _",
    "_ for closed sets @xmath226 @xcite , i.e. , it can be written as a difference of two convex functions , and then the powerful tools of d.c .",
    "programming may be used to find a globally optimal solution if ( rec(@xmath0 ) ) is low - dimensional @xcite , or to design heuristics for more general cases @xcite .",
    "we start with optimization problems @xmath227 that have convex sets @xmath79 for all @xmath15 .",
    "this is the case if the functions @xmath7 and @xmath6 of @xmath227 are quasiconvex for all fixed scenarios @xmath19 , and @xmath18 is convex .",
    "we furthermore assume that @xmath78 is convex , which is the case , e.g. , when @xmath78 has been derived from a norm , i.e. @xmath228 for some norm @xmath97 .",
    "let us fix @xmath19 .",
    "then the function @xmath229 describes the distance between a point and a convex set and is hence convex .",
    "we conclude that also @xmath149 is convex , being the maximum of a finite set of convex functions .",
    "[ lem - convex ] consider an uncertain optimization problem @xmath105 with quasiconvex objective function @xmath230 and quasiconvex constraints @xmath26 for any fixed @xmath19 .",
    "let @xmath2 be convex , @xmath16 be a finite set and @xmath78 be convex .",
    "then problem ( rec(@xmath0 ) ) is a convex optimization problem .    in order to solve ( rec(@xmath0 ) ) one can hence apply algorithms suitable for convex programming , e.g. , subgradient or bundle methods @xcite . in particular , if ( rec(@xmath0 ) ) is unconstrained in @xmath49 , a necessary and sufficient condition for a point @xmath92 to be an optimal solution is @xmath231 i.e. , if @xmath232 is contained in the subdifferential of @xmath166 at the point @xmath92 . by construction of @xmath233",
    "we obtain @xmath234 where @xmath181 is the set of worst - case scenarios ( see @xcite ) , and @xmath235 is the subdifferential of @xmath236 at @xmath92 .",
    "now , @xmath235 can be written in terms of the subdifferential of the distance used , see @xcite , where also easy representations for polyhedral norms or the euclidean norm are presented .",
    "although we do not know much a priori about the number of worst - case scenarios , we do not need to investigate all possible subsets but may restrict our search to sets which do not have more than elements as is shown in our next result .",
    "this may be helpful in problems with a large number of scenarios but low dimension @xmath237 for the decisions .",
    "[ theo - helly ] let @xmath16 be finite with cardinality of at least @xmath238 .",
    "let @xmath239 .",
    "suppose ( rec(@xmath0 ) ) attains its optimum at some @xmath92 , and that for each @xmath19 the functions @xmath26 and @xmath230 are quasiconvex .",
    "let @xmath78 be convex .",
    "then there exists a subset @xmath240 of scenarios with @xmath241 such that @xmath242    let @xmath92 be optimal for ( rec(@xmath0 ) ) .",
    "the result is trivial if @xmath243 : take any collection of @xmath238 scenarios .",
    "hence , we may assume @xmath244 which implies that @xmath92 does not belong to all sets @xmath94    by lemma [ le : geq2 ] , @xmath245 . if @xmath246 then we are done .",
    "otherwise , @xmath247 we have by the optimality of @xmath92 and convexity of the functions @xmath248 that @xmath234 by carathodory s theorem , @xmath181 contains a subset @xmath249 @xmath250 such that @xmath251 such @xmath252 clearly satisfies the conditions stated .      as in the section",
    "before , we assume a finite uncertainty set @xmath253 .",
    "let us now consider the case that all sets @xmath254 , @xmath255 are polyhedral sets .",
    "more precisely , we consider problems of type @xmath256 with a finite uncertainty set @xmath253 , linear constraints @xmath257 for every @xmath15 , a linear objective function @xmath258 and a polyhedron @xmath259    furthermore , let us assume that the distance @xmath78 is induced by a block norm @xmath97 , i.e. , a norm whose unit ball is a polytope , see  @xcite .",
    "the most prominent examples for block norms are the manhattan ( @xmath260 ) and the maximum ( @xmath261 ) norm , which both may be suitable to represent recovery costs : in the case that the recovery costs are obtained by adding single costs of each component , the manhattan norm is the right choice .",
    "the maximum norm may represent the recovery time in the case that a facility has to be moved along each coordinate ( or a schedule has to be updated by a separate worker in every component ) and the longest time determines the time for the complete update .",
    "we also remark that it is possible to approximate any given norm arbitrarily close by block norms , since the class of block norms is a dense subset of all norms , see @xcite .",
    "thus , the restriction to the class of block norms may not be a real restriction in a practical setting .",
    "the goal of this section is to show that under the assumptions above , ( rec(@xmath0 ) ) is a linear program .",
    "we start with some notation . given a norm @xmath97 , let @xmath262 denote its unit ball .",
    "recall that the unit ball of a block norm @xmath97 is a full - dimensional convex polytope which is symmetric with respect to the origin .",
    "since such a polytope has a finite number @xmath263 of extreme points , we may denote in the following the extreme points of @xmath264 as @xmath265 since @xmath264 is symmetric with respect to the origin , @xmath266 is always an even number and for any @xmath267 there exists another @xmath268 such that @xmath269 .",
    "its dual ( or polar ) norm defined as @xmath270 has the unit ball @xmath271 it is known that @xmath272 is again a polyhedral norm with extreme points @xmath273 where @xmath274 is the number of facets of @xmath264 ( see , e.g. , @xcite ) .",
    "the following property is crucial for the linear programming formulation of ( rec(@xmath0 ) ) .",
    "it shows that it is sufficient to consider only the extreme points @xmath275 of either the unit ball @xmath264 of the block norm , or of the unit ball @xmath272 of its polar norm in order to compute @xmath276 for any point @xmath277 .",
    "[ thm : poly - distance ] let @xmath278 be the extreme points of a block norm @xmath97 with unit ball @xmath264 and let @xmath279 be the extreme points of its polar norm with unit ball @xmath272",
    ". then @xmath97 has the following two characterizations : @xmath280 and @xmath281    lemma  [ thm : poly - distance ] implies that we can compute @xmath282 for any pair @xmath283 by linear programming .",
    "thus , our assumptions on the sets @xmath254 and lemma  [ thm : poly - distance ] give rise to the following linear formulations of ( rec(@xmath0 ) ) , if @xmath18 is a polyhedron : @xmath284 note that constraints ( [ lp1 ] ) and ( [ lp1b ] ) are just the definition of the sets @xmath254 .",
    "furthermore , ( [ lp2 ] ) and ( [ lp3 ] ) together ensure that @xmath285 for all @xmath255 .",
    "hence , the linear program is equivalent to the formulation   for a finite set of scenarios each of them having a polyhedron as feasible set and if a block norm is used as distance measure . in this case",
    "we have hence shown that ( rec(@xmath0 ) ) can be formulated as a linear program . in order to use the second characterization of block norms in lemma  [ thm : poly - distance ]",
    "we replace ( [ lp2 ] ) and ( [ lp3 ] ) by @xmath286 to ensure that the value of @xmath287 is correctly computed .",
    "we summarize our findings in the following result .",
    "[ theo - finite ] consider an uncertain linear optimization problem @xmath105 let @xmath288 be a finite set and let @xmath78 be induced by a block norm .",
    "let @xmath2 be a polyhedron . then ( rec(@xmath0 ) )",
    "can be solved by linear programming .    if the number of constraints defining @xmath18 , and either the number of extreme points of @xmath264 or the number of facets of @xmath264 depend at most polynomially on the dimension @xmath237 , then ( rec(@xmath0 ) ) can be solved in polynomial time .",
    "we note that block norms may be generalized to the broader class of polyhedral gauges where the symmetry assumption on the unit ball is dropped ( see e.g. , @xcite ) .",
    "nevertheless it is readily shown that lemma  [ thm : poly - distance ] applies to polyhedral gauges as well .",
    "hence , it follows that theorem  [ theo - finite ] also holds for distance functions derived from polyhedral gauges .",
    "we consider a special case in which ( rec(@xmath0 ) ) can be rewritten as a linear program , even though the distance measure does not need to be derived from a block norm , namely if the sets @xmath79 are all hyperplanes or halfspaces .",
    "before we show the resulting linear program for this case , we consider some situations in which this happens :    let @xmath78 be a distance derived from a norm , and let @xmath183 .    1 .   for feasibility problems of type @xmath289 with @xmath290 , @xmath291 we obtain @xmath292 for all @xmath212 .",
    "the same holds for problems @xmath293 if @xmath24 is a hyperplane for each @xmath15 and @xmath294 for all @xmath126 .",
    "3 .   for unconstrained uncertain linear optimization of the form",
    "@xmath295 the resulting sets @xmath296 are halfspaces .",
    "let us first consider the case of hyperplanes : for @xmath297 , let @xmath298 be a hyperplane .",
    "then ( rec(@xmath0 ) ) is given by @xmath299 recall the point - to - hyperplane distance @xcite @xmath300 where @xmath301 denotes the dual norm to @xmath302 .",
    "as the values of @xmath303 can be precomputed and the absolute value linearized , we gain a linear program @xmath304    for halfspaces @xmath305 instead of hyperplanes , the distance is given by @xmath306 where @xmath307 , resulting in the linear program @xmath308    consider an uncertain optimization problem with finite uncertainty set and sets @xmath79 that are hyperplanes or halfspaces .",
    "let @xmath183 and let @xmath78 be derived from a norm @xmath302 . then ( rec(@xmath0 ) ) can be formulated as linear program ( see and ) and be solved in polynomial time , provided that the dual norm of @xmath302 can be evaluated in polynomial time .",
    "in this section we analyze recoverable - robust solutions for different uncertainty sets @xmath16 , and hence write rec(@xmath16 ) , @xmath309 and @xmath310 to emphasize the uncertainty set that is considered : @xmath311 recall that a solution @xmath49 is _ recoverable - robust with respect to @xmath16 _ if there exists @xmath61 such that @xmath62 is pareto - efficient for rec(@xmath16 ) .",
    "the main goal of this section is to reduce the set @xmath16 to a smaller ( maybe even finite ) set @xmath312 , such that the set of recovery - robust solutions does not change .",
    "this is the case if we can extend any feasible solution @xmath313 for rec(@xmath314 ) to a feasible solution @xmath62 for rec(@xmath16 ) without changing the objective function values .",
    "[ lem - reductionlemma ] let @xmath312 .",
    "if for all feasible solutions @xmath313 of rec(@xmath314 ) there exists @xmath47 such that    * @xmath62 is feasible for rec(@xmath16 ) , i.e. , @xmath315 for all @xmath15 , and * @xmath316 and @xmath317    then rec(@xmath16 ) and rec(@xmath314 ) have the same recoverable - robust solutions .    let @xmath62 be feasible for rec(@xmath16 ) .",
    "define @xmath318 then @xmath313 is feasible for rec(@xmath314 ) and @xmath319 , @xmath320 .",
    "together with the assumption of this lemma pareto optimality follows since a solution can be improved by switching between rec(@xmath16 ) and rec(@xmath314 ) :    * let @xmath49 be recoverable - robust w.r.t @xmath16",
    ". then there exists @xmath61 such that @xmath62 is pareto efficient for rec(@xmath16 ) .",
    "define @xmath321 .",
    "then @xmath313 is pareto - efficient for rec(@xmath314 ) : assume that @xmath322 dominates @xmath313 .",
    "due to the assumption of this lemma there exists @xmath323 which is feasible for rec(@xmath16 ) and @xmath324 and @xmath325 , i.e. , @xmath323 then dominates @xmath62 , a contradiction . *",
    "let @xmath49 be recoverable - robust w.r.t @xmath314 .",
    "then there exists @xmath326 such that @xmath313 is pareto - efficient for rec(@xmath314 ) .",
    "choose @xmath64 according to the assumption of this lemma .",
    "then @xmath62 is pareto - efficient for rec(@xmath16 ) : assume that @xmath323 dominates @xmath62 .",
    "then @xmath327 is feasible for rec(@xmath314 ) and @xmath328 and @xmath329 , i.e. , @xmath327 then dominates @xmath313 , a contradiction .",
    "we now use lemma  [ lem - reductionlemma ] to reduce the set of scenarios @xmath16 .",
    "our first result is similar to the reduction rules for set covering problems @xcite .",
    "if p(@xmath330 ) is a relaxation of p(@xmath331 ) for two scenarios @xmath332 , then rec(@xmath16 ) and rec(@xmath333 ) have the same recoverable robust solutions , i.e. , scenario @xmath330 may be ignored .",
    "we check the condition of lemma  [ lem - reductionlemma ] : let @xmath313 be feasible for rec(@xmath334 ) .",
    "define @xmath335 then @xmath62 is feasible since @xmath315 for all @xmath336 and @xmath337 since @xmath338 and p(@xmath330 ) is a relaxation of p(@xmath331 ) .",
    "furthermore , @xmath339 implies @xmath340 finally , @xmath341 , hence @xmath342    note that depending on the definition of the optimization problem and the uncertainty set @xmath16 , often large classes of scenarios may be dropped .",
    "this is in particular the case if the sets @xmath24 are nested .    in the following we are interested in identifying a kind of _ core set _",
    "@xmath312 containing a _",
    "finite _ number of scenarios which are sufficient to consider in order to solve the recoverable - robust counterpart .",
    "more precisely , we look for a finite set @xmath314 such that rec(@xmath103 and rec(@xmath343 have the same recoverable - robust solutions .    in the following we consider a polytope @xmath16 with a finite number of extreme points @xmath344 ,",
    "i.e. , let @xmath345    then many robustness concepts have ( under mild conditions ) the following property : instead of investigating _ all _ @xmath15 , it is enough to investigate the extreme points @xmath344 of @xmath16 .",
    "for example , for the strictly robust counterpart rc@xmath346 of an uncertain optimization problem ( @xmath347 ) , rc@xmath346 is equivalent to rc@xmath348 , if @xmath349 is convex for all @xmath42 .",
    "unfortunately , a similar result for the recoverable - robust counterpart does not hold .",
    "this means that the set of pareto efficient solutions of rec(@xmath314 ) does in general not coincide with the set of pareto efficient solutions of rec(@xmath16 ) with respect to the larger set @xmath350 as demonstrated in the following example .",
    "[ exa1 ]    consider the following uncertain optimization problem : @xmath351 where @xmath352 let the recovery distance be the euclidean distance",
    ". then @xmath353 , the midpoint of the incircle of the triangle that is given by the intersections of the respective feasible solutions , is a pareto efficient solution of rec(@xmath343 , as it is the unique minimizer of the recovery distance ( see figure [ example - a ] ) .",
    "on the other hand , this solution is not pareto efficient when the convex hull of @xmath314 is taken into consideration . indeed , by elementary geometry",
    ", one finds that @xmath354 where @xmath355 ( see figure  [ example - b ] ) .",
    "therefore , solving rec(@xmath343 does not give the set of pareto efficient solutions for rec(@xmath103 .",
    "however , assuming more problem structure , we can give the following result .",
    "[ th : quasiconvex ] consider an uncertain optimization problem with uncertainty set @xmath350 with @xmath356 .",
    "let @xmath7 consist of @xmath4 constraints with @xmath357 , @xmath358 and @xmath359 be jointly quasiconvex in the arguments @xmath360 .",
    "let @xmath361 be quasiconvex .",
    "let @xmath18 be convex .",
    "then rec(@xmath16 ) and rec(@xmath314 ) have the same set of recoverable - robust solutions .",
    "let @xmath313 be feasible for rec(@xmath314 ) .",
    "we first define @xmath61 .",
    "let @xmath15 .",
    "then there exist @xmath362 such that @xmath363 with @xmath364 and @xmath365 .",
    "we set @xmath366 .",
    "note that this implies @xmath367 for all @xmath368 .",
    "we now check the conditions of lemma  [ lem - reductionlemma ] .    for every constraint @xmath369",
    "the joint quasiconvexity implies that @xmath370 where the last inequality holds since @xmath367 and @xmath313 is feasible for rec(@xmath314 ) .",
    "we hence have that @xmath62 is feasible for rec(@xmath16 ) .",
    "analogously , joint quasiconvexity of @xmath6 implies @xmath371 for all @xmath15 , hence @xmath372 finally , for the recovery distance @xmath78 we assumed quasiconvexity in its second argument which implies @xmath373 ,",
    "hence @xmath374    an important particular case of theorem [ th : quasiconvex ] is the case in which @xmath375 for a convex @xmath376 and concave @xmath377 ( i.e. , the uncertainty is in the right - hand side ) , since @xmath7 is then jointly quasiconvex in @xmath378 .",
    "[ theo - right - hand ] let @xmath379 be an uncertain optimization problem with uncertainty set @xmath350 with @xmath356 .",
    "let @xmath380 with a convex function @xmath381 and a concave function @xmath382 .",
    "let @xmath383 be jointly quasiconvex , @xmath18 be convex , and let @xmath361 be quasiconvex .",
    "then rec(@xmath103 and rec(@xmath343 have the same recoverable - robust solutions .",
    "we remark that @xmath376 must not depend on the scenario @xmath19 .",
    "example  [ exa1 ] shows that corollary  [ theo - right - hand ] is not even true for a linear function @xmath41 : if the matrix @xmath384 is dependent on @xmath19 , we can not conclude that rec(@xmath103 and rec(@xmath343 have the same recoverable - robust solutions .",
    "note that corollary  [ theo - right - hand ] applies in particular for the special case where @xmath385 , i.e. , for uncertain convex optimization problems of the type @xmath386 in particular we know for p(@xmath377 ) that the center with respect to some finite set @xmath314 solves the uncertain problem with respect to @xmath350 .",
    "this means we can use the finite set @xmath314 instead of @xmath16 when solving ( rec ) if the conditions of the previous theorem apply .",
    "this is summarized next .",
    "[ cor - right - hand ] let @xmath379 be an uncertain optimization problem with uncertainty set @xmath350 with @xmath356 and with constraints @xmath380 with a convex function @xmath381 and a concave function @xmath382 .",
    "let @xmath2 be convex , let @xmath6 be jointly convex , and let @xmath361 be convex .",
    "then ( rec ) can be formulated as the following convex biobjective program : @xmath387    combining this corollary with theorem  [ theo - finite ] from section  [ sec - poly - finite ] , we obtain the following result : the recoverable - robust counterpart of an optimization problem with convex uncertainty which is only in its right - hand side and with polyhedral uncertainty set can be formulated as a linear program if a block norm is used to measure the recovery costs . in particular , the recoverable - robust counterpart of such a linear program under polyhedral uncertainty sets and block norms as distance functions remains a linear program .",
    "[ theo - together ] let @xmath379 be an uncertain linear program with concave uncertainty only in the right - hand side , and @xmath350 with @xmath356 .",
    "let @xmath78 be derived from a block norm .",
    "then , ( rec ) can be formulated as a linear biobjective program .    if the terms defining @xmath18 and either the number of extreme points or the number of facets of the unit ball of the block norm depend at most polynomially on the dimension @xmath237 , then the problem ( rec(@xmath0 ) ) be solved in polynomial time .    according to theorem  [ theo - right - hand ]",
    "we can replace @xmath16 by the finite set @xmath314 in the recoverable - robust counterpart , i.e. , we consider rec(@xmath314 ) instead of rec(@xmath16 ) .",
    "we are hence left with a problem for which the assumptions of theorem  [ theo - finite ] are satisfied yielding a formulation as linear program .",
    "note that many practical applications satisfy the conditions of theorem  [ theo - together ] . among these",
    "are scheduling and timetabling problems where the uncertainty is the length of the single tasks to be completed and hence in the common linear formulations in the right - hand side .",
    "we refer to @xcite for applications in timetabling , to @xcite for project scheduling , to @xcite for container repositioning , and to @xcite for knapsack problems .",
    "in the following , we analyze the difference between our scalarization ( rec(@xmath0 ) ) and the  classic  scalarization ( rec@xmath388(@xmath389 ) ) to calculate the pareto front of an uncertain portfolio optimization problem using computational experiments .",
    "we consider a portfolio problem of the form @xmath390 where variable @xmath391 denotes the amount of investment in opportunity @xmath392 with profit @xmath393 .",
    "we assume that profits are uncertain and stem from a finite uncertainty set @xmath394 .",
    "the biobjective recoverable - robust model we would like to solve is the following : @xmath395 in this setting , we would like to fix some choice of investment @xmath49 now , but can modify it , once the scenario becomes known .",
    "our aim is to maximize the resulting worst - case profit , and also to minimize the modifications to our investment , which we measure by using the euclidean distance .",
    "we compare the two @xmath0-constraint approaches , where either a fixed budget on @xmath78 is given ( rec@xmath388(@xmath389 ) ) , or a budget on @xmath396 is given ( rec(@xmath0 ) ) .    moreover , we consider the following iterative _ projection method _ as another solution approach to ( rec(@xmath0 ) ) it is based on the method of alternating projections .",
    "say we have some candidate solution @xmath49 available . for every scenario @xmath397",
    ", we want to find a solution @xmath398 that is as close to @xmath49 as possible , and also respects a desired profit bound @xmath399 .",
    "the resulting problems are independent for every @xmath397 . for a fixed @xmath397",
    ", it can be formulated as the following quadratic program : @xmath400 having calculated all points @xmath398 , we then proceed to find a new solution @xmath401 that is as close to all points @xmath398 as possible : @xmath402 we then repeat the calculation of closest points , until the change in objective value is sufficiently small . in this setting , the projection method is known to converge to an optimal solution ( see , e.g. , @xcite )      we consider instances with @xmath403 and @xmath404 , where we generate 100 instances for each setting of @xmath237 and @xmath405 ( i.e. , a total of @xmath406 instances were generated ) .",
    "an instance is generated by sampling uniformly randomly values for @xmath407 in the range @xmath408 .",
    "for each instance , we first calculate the two lexicographic solutions with respect to recovery distance and profit .",
    "then the following problems were solved :    * we solve the classic scalarization , ( rec@xmath388(@xmath389 ) ) , i.e. , ( rec ) with bounds on the recovery distance , where the bounds are calculated by choosing 50 equidistant points within the relevant region given by the lexicographic solutions .",
    "this approach is denoted as rec - p . * for solving the new scalarization , i.e. , ( rec(@xmath0 ) ) , we used three different approaches : * * using also 50 equidistant bounds on the profit , we solve recoverable - robust problems ( rec(@xmath0 ) ) directly .",
    "this approach is denoted as rec - d . * * in the same setting as for rec - d , we use the iterative projection algorithm instead of solving the recovery problem directly with cplex .",
    "this is denoted as rec - it .",
    "* * finally , as preliminary experiments showed that rec - it is especially fast if the bound on the profit @xmath399 is large , we used a mixed approach that uses rec - d for the 2/3 smallest bounds on @xmath399 , and rec - it for the 1/3 largest bounds on @xmath399 .",
    "this is denoted as rec - m .",
    "we used cplex v.12.6 to solve the resulting quadratic programs .",
    "the experiments were conducted on a computer with a 16-core intel xeon e5 - 2670 processor , running at 2.60 ghz with 20 mb cache , and ubuntu 12.04 .",
    "processes were pinned to one core .",
    "we show the average computation times for the biobjective portfolio problem in table  [ tabresults ] .",
    ".average computation times in @xmath409 to calculate pareto solutions . [ cols=\">,>,>,>,>,>\",options=\"header \" , ]     the best average computation time per row is printed in bold .",
    "note that rec - it requires higher computation times than any other approach ; however , in combination with rec - d ( i.e. , rec - m ) , it is highly competitive . while rec - p performs well for smaller instances , rec - d and rec - m perform best for larger instances .",
    "there are some surprises in table  [ tabresults ] , which are not due to outliers . for rec - p and @xmath410",
    ", one can see that solving @xmath411 takes longer than solving @xmath412 .",
    "the same holds for @xmath413 , @xmath412 and @xmath414 .",
    "also , for @xmath415 , we find that rec - p is faster for @xmath416 than for @xmath417 ( the same holds for rec - d ) .",
    "this behavior disappears for large @xmath237 and @xmath405 .    summarizing ,",
    "our experimental results show that switching perspective from the classic recoverable - robust approach ( rec@xmath388(@xmath389 ) ) that maximizes the profit subject to some fixed recovery distance to the ( rec(@xmath0 ) ) approach we suggest , in which the distance is minimized subject to some bound on the profit , results in improved computation times .",
    "these computation times are further improved by applying methods from location theory , that can allow the ( rec(@xmath0 ) ) version to be solved more efficiently .",
    "in this paper , we introduced a location - analysis based point of view to the problem of finding recoverable - robust solutions to uncertain optimization problems .",
    "table  [ tab-1 ] summarizes the results we obtained .",
    "p2cm|p2cm|p2cm|p2cm|p2.2cm|p4 cm uncertainty & constraints & uncertainty & rec .",
    "costs & deterministic & results + set @xmath16 & @xmath418 & @xmath419 & @xmath78 & constraints @xmath18 & + & & & & & + finite & quasiconvex & arbitrary & convex & convex and closed & - ( rec(@xmath0 ) ) convex problem ( lemma  [ lem - convex ] ) + & & & & @xmath183 & - reduction to ( rec(@xmath420 ) for smaller sets @xmath420 ( theorem  [ theo - helly ] ) + & & & & & + finite & linear & arbitrary & block norm & polyhedron & - ( rec(@xmath0 ) ) linear problem ( theorem  [ theo - finite ] ) + & & & & + & & & & + polyhedron & & convex & closed & - pareto solution w.r.t .",
    "extreme points of @xmath16 is pareto ( theorem  [ th : quasiconvex ] ) + & & & & & + polyhedron & convex & quasiconvex , right - hand & convex & closed & - solution w.r.t extreme points of @xmath16 is pareto ( corollary  [ theo - right - hand ] ) + & & side & & convex and closed & - ( rec(@xmath0 ) ) convex problem ( corollary  [ cor - right - hand ] ) + & & & & & + polyhedron & linear & quasiconvex , right - hand side & block norm & polyhedron & - ( rec(@xmath0 ) ) linear problem ( theorem  [ theo - together ] ) +    the following variation of ( rec ) should be mentioned : in many cases it might not be appropriate to just look at the worst - case objective function of the recovered solutions , because there might be one very bad scenario which is the only relevant one .",
    "pareto efficient solutions would hence neglect the objective function values of all other scenarios .",
    "this might lead to another goal , namely to be as close as possible to an optimal solution in _ all _ scenarios instead of only looking at a few scenarios which will be very bad anyway .",
    "this leads to the following problem in which we bound the difference between the objective value of the recovered solution and the best possible objective function value in the worst case :      the new objective function @xmath422 in ( @xmath423 ) can be interpreted as a minmax - regret approach as described in @xcite .",
    "again , we can look at the scalarizations of this problem . instead of ( rec(@xmath0))we receive        note that the lexicographic solution of ( @xmath426 ) with respect to ( @xmath427 ) requires to find optimal solutions for each scenario @xmath15 which can be reached with minimal recovery costs",
    ". it can be found by solving @xmath428 .",
    "this is exactly the robustness approach _ recovery - to - optimality _ which has been described in @xcite , see @xcite for scenario - based approaches for its solution . on the other hand , the lexicographic solution of ( @xmath426 ) with respect to ( @xmath429 )",
    "is related to minmax regret robustness .",
    "ongoing research includes the analysis of other special cases of ( rec ) as well as its application to other types of problems e.g. from traffic planning or evacuation .",
    "we also work on generalizations to multi - objective uncertain optimization problems as already done for several minmax robustness concepts @xcite .",
    "bouman , j.m .",
    "van  den akker , and j.a .",
    "recoverable robustness by column generation . in c.  demetrescu and m.  m. halldrsson , editors , _ algorithms  esa 2011 _ , volume 6942 of _ lecture notes in computer science _ , pages 215226 .",
    "springer berlin heidelberg , 2011 .",
    "s.  cicerone , g.  dangelo , g.  di stefano , d.  frigioni , and a.  navarra . .",
    "in _ proc . of the 7th workshop on algorithmic approaches for transportation modeling , optimization , and systems ( atmos07 ) _ , pages 175190 , 2007 .",
    "s.  cicerone , g.  dangelo , g.  di stefano , d.  frigioni , a.  navarra , m.  schachtebeck , and a.  schbel .",
    "recoverable robustness in shunting and timetabling . in _ robust and online large - scale optimization _",
    ", number 5868 in lecture notes in computer science , pages 2860 .",
    "springer , 2009 .",
    "m.  fischetti and m.  monaci .",
    "light robustness . in r.",
    "k. ahuja , r.h .",
    "mhring , and c.d .",
    "zaroliagis , editors , _ robust and online large - scale optimization _ ,",
    "volume 5868 of _ lecture note on computer science _ , pages 6184 .",
    "springer , 2009 .",
    "m.  goerigk and a.  schbel .",
    "an empirical analysis of robustness concepts for timetabling . in thomas erlebach and marco lbbecke , editors ,",
    "_ proceedings of atmos10 _ , volume  14 of _ openaccess series in informatics ( oasics ) _ , pages 100113 , dagstuhl , germany , 2010 .",
    "m.  goerigk and a.  schbel . a scenario - based approach for robust linear optimization . in _ proceedings of the first international icst conference on theory and practice of algorithms in ( computer ) systems _ , tapas11 , pages 139150 , berlin , heidelberg , 2011 .",
    "springer - verlag .",
    "m.  goerigk and a.  schbel .",
    "algorithm engineering in robust optimization . in l.",
    "kliemann and p.  sanders , editors , _ algorithm engineering : selected results and surveys _ , volume 9220 of _ lncs state of the art_. springer , 2016 .",
    "final volume for dfg priority program 1307 .              c.  liebchen , m.  lbbecke , r.  h. mhring , and s.  stiller .",
    "the concept of recoverable robustness , linear programming recovery , and railway applications . in r.",
    "k. ahuja , r.h . mhring , and c.d .",
    "zaroliagis , editors , _ robust and online large - scale optimization _ ,",
    "volume 5868 of _ lecture note on computer science _ , pages 127 .",
    "springer , 2009 ."
  ],
  "abstract_text": [
    "<S> finding robust solutions of an optimization problem is an important issue in practice , and various concepts on how to define the robustness of a solution have been suggested . </S>",
    "<S> the idea of recoverable robustness requires that a solution can be recovered to a feasible one as soon as the realized scenario becomes known . </S>",
    "<S> the usual approach in the literature is to minimize the objective function value of the recovered solution in the nominal or in the worst case .    </S>",
    "<S> as the recovery itself is also costly , there is a trade - off between the recovery costs and the solution value obtained ; we study both , the recovery costs and the solution value in the worst case in a biobjective setting .    to this end , we assume that the recovery costs can be described by a metric . we demonstrate that this leads to a location planning problem , bringing together two fields of research which have been considered separate so far .    </S>",
    "<S> we show how weakly pareto efficient solutions to this biobjective problem can be computed by minimizing the recovery costs for a fixed worst - case objective function value and present approaches for the case of linear and quasiconvex problems for finite uncertainty sets . </S>",
    "<S> we furthermore derive cases in which the size of the uncertainty set can be reduced without changing the set of pareto efficient solutions .    </S>",
    "<S> [ [ keywords ] ] keywords + + + + + + + +    robust optimization ; location planning ; biobjective optimization </S>"
  ]
}
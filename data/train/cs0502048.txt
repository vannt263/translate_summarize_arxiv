{
  "article_text": [
    "that quantum  mechanical phenomena can be effectively exploited for the storage , manipulation and exchange of information is now a widely recognised fact .",
    "the whole field of quantum information poses new challenges for the information theory community and involves several novel applications , especially with respect to cryptology .",
    "recent interest in quantum cryptography has been stimulated by the fact that quantum algorithms , such as shor s algorithms for integer factorization and discrete logarithm @xcite , threaten the security of classical cryptosystems .",
    "a range of quantum cryptographic protocols for key distribution , bit commitment , oblivious transfer and other problems @xcite have been extensively studied .",
    "furthermore , the implementation of quantum cryptographic protocols has turned out to be significantly easier than the implementation of quantum algorithms : although practical quantum computers are still some way in the future , quantum cryptography has already been demonstrated in non - laboratory settings @xcite and is well on the way to becoming an important technology .",
    "quantum cryptographic protocols are designed with the intention that their security is guaranteed by the laws of quantum physics .",
    "naturally it is necessary to prove , for any given protocol , that this is indeed the case .",
    "the most notable result in this area is mayers proof @xcite of the unconditional security of the quantum key distribution protocol bb84  @xcite .",
    "this proof guarantees the security of bb84 in the presence of an attacker who can perform any operation allowed by quantum physics ; hence the security of the protocol will not be compromised by future developments in quantum computing .",
    "mayers result , and others of the same kind @xcite , are extremely important contributions to the study of quantum cryptography .",
    "however , a mathematical proof of security of a _ protocol _ does not in itself guarantee the security of an implemented _ system _ which relies on the protocol .",
    "experience of classical cryptography has shown that , during the progression from an idealised protocol to an implementation , many security weaknesses can arise .",
    "for example : the system might not correctly implement the desired protocol ; there might be security flaws which only appear at the implementation level and which are not visible at the level of abstraction used in proofs ; problems can also arise at boundaries between systems and between components which have different execution models or data representations .",
    "we therefore argue that it is worth analysing quantum cryptographic systems at a level of detail which is closer to a practical implementation .",
    "computer scientists have developed a range of techniques and tools for the analysis and verification of communication systems and protocols .",
    "those particularly relevant to security analysis are surveyed by ryan _",
    "this approach has two key features .",
    "the first is the use of formal languages to precisely specify the behaviour of the system and the properties which it is meant to satisfy .",
    "the second is the use of automated software tools to either verify that a system satisfies a specification or to discover flaws .",
    "these features provide a high degree of confidence in the validity of systems , and the ability to analyse variations and modifications of a system very easily .    in this paper we present the results of applying the above methodology to the bb84 quantum key distribution protocol .",
    "we have carried out an analysis using prism , a probabilistic model - checking system .",
    "our results confirm the properties which arise from mayers security proof ; more significantly , they demonstrate the effectiveness of the model - checking approach and the ease with which parameters of the system can be varied .    our model could easily be adapted to describe variations and related protocols , such as b92  and ekert s protocol ( @xcite  describe these protocols in detail ) .",
    "also , our model can be modified to account for implementation ",
    "level concerns , such as imperfections in photon sources , channels , and detectors .",
    "the objective of _ key distribution _ is to enable two communicating parties , alice and bob , to agree on a common secret key @xmath0 , without sharing any information initially .",
    "once a common secret key has been established , alice and bob can use a symmetric cryptosystem to exchange messages privately . in a classical ( i.e. non  quantum ) setting , it is quite impossible to perform key distribution securely unless assumptions are made about the enemy s computational power @xcite .",
    "the use of quantum channels , which can not be tapped or monitored without causing a noticeable disturbance , makes unconditionally secure key distribution possible .",
    "the presence of an enemy is made manifest to the users of such channels through an unusually high error rate .",
    "we will now describe the bb84 scheme for quantum key distribution , which uses polarised photons as information carriers .",
    "bb84 assumes that the two legitimate users are linked by two specific channels , which the enemy also has access to :    1 .   a classical , possibly public channel , which may be passively monitored but not tampered with by the enemy ; 2 .   a quantum channel which may be tampered with by an enemy . by its very nature",
    ", this channel prevents passive monitoring .",
    "the first phase of bb84 involves transmissions over the quantum channel , while the second phase takes place over the classical channel .",
    "the pair of quantum states @xmath1 is the _ rectilinear basis _ of the hilbert space @xmath2 , and is denoted by @xmath3 .",
    "the pair of quantum states @xmath4 is the _ diagonal basis _ of the hilbert space @xmath2 , and is denoted by @xmath5 .",
    "the encoding function @xmath6 where @xmath7 @xmath8 is defined as follows : @xmath9    the bb84 protocol can be summarised as follows :    1 .   first phase ( quantum transmissions ) 1 .   alice generates a random string of bits @xmath10 , and a random string of bases @xmath11 , where @xmath12 .",
    "2 .   alice places a photon in quantum state @xmath13 for each bit @xmath14 in @xmath15 and @xmath16 in @xmath17 , and sends it to bob over the quantum channel .",
    "3 .   bob measures each @xmath18 received , with respect to either @xmath3 or @xmath5 , chosen at random .",
    "bob s measurements produce a string @xmath19 , while his choices of bases form @xmath20 .",
    "second phase ( public discussion ) 1 .   for each bit",
    "@xmath14 in @xmath15 : 1 .",
    "alice sends the value of @xmath16 to bob over the classical channel .",
    "2 .   bob responds by stating whether he used the same basis for measurement .",
    "if @xmath21 , both @xmath14 and @xmath22 are discarded .",
    "2 .   alice chooses a subset of the remaining bits in @xmath15 and discloses their values to bob over the classical channel .",
    "if the result of bob s measurements for any of these bits do not match the values disclosed , eavesdropping is detected and communication is aborted .",
    "the common secret key , @xmath23 , is the string of bits remaining in @xmath15 once the bits disclosed in step _",
    "2b ) _ are removed .",
    "there are two points to note in order to understand bb84 properly .",
    "firstly , measuring with the incorrect basis yields a random result , as predicted by quantum theory .",
    "thus , if bob chooses the @xmath5 basis to measure a photon in state @xmath24 , the classical outcome will be either 0 or 1 with equal probability ; if the @xmath3 basis was chosen instead , the classical outcome would be 1 with certainty . secondly , in step _",
    "2b ) _ of the protocol , alice and bob perform a test for eavesdropping .",
    "the idea is that , wherever alice and bob s bases are identical ( i.e. @xmath25 ) , the corresponding bits should match ( i.e.  @xmath26 ) . if not , an external disturbance has occurred , and on a noiseless channel this can only be attributed to the presence of an eavesdropper . for more information ,",
    "the reader is referred to @xcite .",
    "we turn now to the formal security requirements for bb84 . among other things , a protocol such as bb84",
    "must ensure that an enemy s presence is always made manifest to the legitimate users and that , if a key does result from the procedure , it is unpredictable and common to both users .",
    "but most importantly , the protocol must ensure _ privacy : _ an enemy must never be able to obtain the value of the key .",
    "moreover , even if an enemy is able to obtain a certain quantity of information @xmath27 by trying to monitor the classical channel , that quantity has to be minimal ; meanwhile , the enemy s uncertainty about the key , @xmath28 , must be maximised .",
    "the conditional entropy of the key @xmath29 ( of length @xmath30 ) given the view @xmath27 is defined as : @xmath31    such requirements are usually expressed in terms of _ security parameters_. for quantum key distribution , the security parameters are conventionally written @xmath32 and @xmath33 .",
    "the parameter @xmath32 is the number of quantum states transmitted , while @xmath33 denotes collectively the tolerated error rate , the number of bits used to test for eavesdropping , and related quantities @xcite .",
    "we use the parameter @xmath32 instead of the key length @xmath30 , as these are assumed to be linearly related .",
    "for instance , the value of @xmath28  is some function of @xmath32 and @xmath33 : @xmath34 .",
    "the proof @xcite stipulates that @xmath28  should be exponentially small in @xmath32 and @xmath33 .",
    "formally , @xmath35 noting that the choice of @xmath32 over @xmath30 as the parameter only changes the value of the constant @xmath36 , and not the functional relationship",
    ". we will demonstrate later for bb84 that , the probability that an enemy succeeds in obtaining more than @xmath37 key bits correctly is a function of the form ( [ decaying - expo ] ) .",
    "mayers security proof of bb84  formalises the notion of privacy by defining a quantum key distribution protocol as @xmath38private ,  if , for every strategy adopted by an enemy , the average of the quantity @xmath39 is less than or equal to some constant @xmath38 .",
    "this definition of privacy merely requires the key to be uniformly distributed , when the key length @xmath30 is known .",
    "a more conventional privacy definition would have required that the mutual information @xmath40 be less than or equal to @xmath41 , but this is not entirely satisfactory @xcite .",
    "the theoretical proof of bb84 s security is a significant and valuable result .",
    "however , to prove a similar result for a different scheme or cryptographic task is far from trivial and is likely to involve new , ever more specialised derivations .",
    "a more flexible approach to analysing the security of quantum cryptographic protocols is clearly desirable .",
    "manufacturers of commercial quantum cryptographic systems @xcite , for instance , require efficient and rigorous methods for design and testing .",
    "a suitable approach should allow for modelling implementation ",
    "level details and even minor protocol variations with relative ease .",
    "we believe that _ model  checking _ is such an approach , and we will demonstrate its application to bb84 .    model  checking is an automated technique for verifying a finite  state system against a given temporal specification @xcite . using a specialised software tool ( called a _ model  checker _ ) , a system implementor can mechanically prove that the system satisfies a certain set of requirements . to do this , an abstract model , denoted @xmath42 ,",
    "is built and expressed in a description language ; also , the desired behaviour of the system is expressed as a set of temporal formulae , @xmath43 .",
    "the model and the formulae are then fed into the model ",
    "checker , whose built  in algorithms determine conclusively whether @xmath42 satisfies the properties defined by the @xmath43 ( i.e. whether @xmath44 for each property @xmath43 ) .",
    "checking should not be confounded with computer  based simulation techniques , which do not involve an exhaustive search of all possibilities .    for systems which exhibit probabilistic behaviour ,",
    "a variation of this technique is used ; a _ probabilistic model ",
    "checker , _ such as prism @xcite ,  computes the probability @xmath45 for given @xmath42 and @xmath43 .",
    "prism  models are represented by probabilistic transition systems , and are written in a simple guarded  command programming language .",
    "system properties for prism models are written in probabilistic computation tree logic ( pctl ) .",
    "prism allows models to be parameterised : @xmath46 .",
    "thus the probability ( [ el - probabilidad ] ) may be computed for different values of @xmath47 ; this is termed an _ experiment_. by varying one parameter at a time , it is possible to produce a meaningful plot of the variation of ( [ el - probabilidad ] ) .",
    "we have built a model of bb84 for use with prism .",
    "it is not possible to present the source code for this model here , due to space limitations ; however , the full source code is available online , and is discussed extensively in @xcite .",
    "a system description in prism is a computer file containing module definitions , each module representing a component of the system . in our description of bb84",
    ", there is a module corresponding to each party involved in the protocol and a module representing the quantum channel .",
    "each module has a set of local variables and a sequence of actions to perform ; an action typically takes one of the following two forms : @xmath48\\text { \\ } g\\text { } \\rightarrow\\text { } ( v_{1}:=\\mathrm{val}_{1});\\label{firstcase}\\\\ & [ s]\\text { \\ } g\\text { } \\rightarrow0.5:(v_{1}:=\\mathrm{val}_{1})+0.5:(v_{1}:=\\mathrm{val}_{2});\\label{secondcase}\\ ] ]    in ( [ firstcase ] ) , the variable @xmath49 is assigned the value @xmath50 ; in ( [ secondcase ] ) , @xmath49 is assigned either the value @xmath50 or @xmath51  with equal probability .",
    "part of the expressive power of prism comes from the ability to specify arbitrary probabilities for actions ; for example , one could model a bias in alice s choice of polarisation basis , in bb84 , with an action such as : @xmath52\\text { } \\mathbf{true}\\rightarrow0   & .7:(\\mathit{al\\_basis}:=\\boxplus)\\label{varyingalicebasis}\\\\ + 0   &   .3:(\\mathit{al\\_basis}:=\\boxtimes);\\nonumber\\end{aligned}\\ ] ]    in this example , alice is biased towards choosing the rectilinear basis .",
    "knowledge of this syntax is sufficient for an understanding of the prism description of bb84 . in what follows",
    ", we will discuss the properties which we have been able to investigate .    as discussed in section [ bb84-sec",
    "] , there are two security requirements for bb84 of interest :    1 .",
    "_ an enemy s presence must not go unnoticed ; _ if the legitimate users know that an enemy is trying to eavesdrop , they can agree to use privacy amplification techniques [ 20 ] and/or temporarily abort the key establishment process .",
    "2 .   _ any quantity of valid information which the enemy is able to obtain through eavesdropping must be minimal .",
    "_    we can use our model of bb84 , denoted henceforth by @xmath53 , to compute the probability @xmath54    where @xmath43 is a given pctl property",
    " formula .",
    "therefore , in order to verify that bb84 satisfies the security requirements just mentioned , we have to reformulate these requirements in terms of probability .",
    "firstly , we should be able to compute exactly what the probability of detecting an enemy is . in our prism model",
    ", we can vary @xmath32 , the number of photons transmitted in a trial of bb84 , and so this probability is a function of @xmath32 .",
    "let us write the probability of detecting an enemy as @xmath55    in ( [ dudakis ] ) , @xmath56 represents the pctl formula whose boolean value is @xmath57 when an enemy is detected .",
    "before we give the definition of @xmath56 , we should state the random event @xmath58 that occurs when an enemy is detected ; this will allow us to write @xmath59 as a classical probability @xmath60 .    in bb84 , an enemy , eve ,",
    "is detected as a result of the disturbance inevitably caused by some of her measurements .",
    "just as bob , eve does not know which polarisation bases were used to encode the bits in alice s original bit string .",
    "eve has to make a random choice of basis , denoted @xmath61 , which may or may not match alice s original choice , @xmath16 . if @xmath62 , eve is guaranteed to measure the @xmath63-th photon correctly ; otherwise , quantum theory predicts that her measurement result will only be correct with probability 0.5 .    in a so  called _ intercept ",
    "resend attack , _ eve receives each photon on the quantum channel , measures it with her basis @xmath64 , obtaining bit value @xmath65 , and then transmits to bob a new photon , which represents @xmath65 in the @xmath64 basis .",
    "if eve s basis choice is incorrect , her presence is bound to be detected .",
    "but for detection to occur , bob must choose the correct basis for his measurement .",
    "whenever bob obtains an incorrect bit value despite having used the correct basis , this is because an enemy has caused a disturbance .",
    "note that we are assuming a perfect quantum channel here ; an imperfect channel would produce noise , causing additional disturbances .",
    "so , to summarise , an enemy s presence is made manifest as soon as the following event occurs : @xmath66    or equivalently , as soon as : @xmath67    therefore , the probability of detecting an enemy s presence in bb84 may be written : @xmath68    the corresponding pctl formula for prism is : @xmath69    the prism model of bb84 uses elaborate variable names , e.g. @xmath70 instead of @xmath71 , and @xmath72 instead of @xmath14 .    the value of @xmath73 for @xmath74 has been calculated with prism , which computes ( [ dudakis ] ) ; the result is shown in figure 1 .",
    "( 1500,750)(0,0 ) ( 181.0,123.0 )    ' '' ''    ( 161,123)(0,0)[r]0 ( 181.0,254.0 )    ' '' ''    ( 161,254)(0,0)[r ] ( 181.0,385.0 )    ' '' ''    ( 161,385)(0,0)[r ] ( 181.0,515.0 )    ' '' ''    ( 161,515)(0,0)[r ] ( 181.0,646.0 )    ' '' ''    ( 161,646)(0,0)[r ] ( 181.0,777.0 )    ' '' ''    ( 161,777)(0,0)[r ] ( 181.0,123.0 )    ' '' ''    ( 181,82)(0,0 ) ( 391.0,123.0 )    ' '' ''    ( 391,82)(0,0 ) ( 600.0,123.0 )    ' '' ''    ( 600,82)(0,0 ) ( 810.0,123.0 )    ' '' ''    ( 810,82)(0,0 ) ( 1020.0,123.0 )    ' '' ''    ( 1020,82)(0,0 ) ( 1229.0,123.0 )    ' '' ''    ( 1229,82)(0,0 ) ( 1439.0,123.0 )    ' '' ''    ( 1439,82)(0,0 ) ( 40,450)(0,0)@xmath75 ( 810,21)(0,0)@xmath76 ( 391,442 ) ( 433,483 ) ( 475,520 ) ( 516,552 ) ( 558,580 ) ( 600,605 ) ( 642,626 ) ( 684,645 ) ( 726,662 ) ( 768,676 ) ( 810,689 ) ( 852,700 ) ( 894,709 ) ( 936,718 ) ( 978,725 ) ( 1020,732 ) ( 1062,737 ) ( 1104,742 ) ( 1145,747 ) ( 1187,750 ) ( 1229,754 ) ( 1271,757 ) ( 1313,759 ) ( 1355,761 ) ( 1397,763 ) ( 1439,765 ) ( 228.69,215.14 ) ( 239.13,233.07 ) ( 249.57,251.01 ) ( 260.16,268.85 ) ( 293.87,321.20 ) ( 305.91,338.10 ) ( 318.44,354.65 ) ( 330.54,371.51 ) ( 343.40,387.79 ) ( 356.89,403.56 ) ( 370.48,419.25 ) ( 384.00,435.00 ) ( 398.67,449.67 ) ( 413.21,464.48 ) ( 427.73,479.29 ) ( 443.30,493.02 ) ( 459.14,506.43 ) ( 474.62,520.24 ) ( 491.07,532.90 ) ( 507.26,545.88 ) ( 524.06,558.04 ) ( 541.57,569.17 ) ( 558.74,580.83 ) ( 576.77,591.09 ) ( 594.54,601.81 ) ( 612.71,611.84 ) ( 631.27,621.08 ) ( 649.77,630.43 ) ( 668.97,638.29 ) ( 688.00,646.58 ) ( 707.11,654.57 ) ( 726.54,661.81 ) ( 746.05,668.86 ) ( 765.89,674.97 ) ( 785.64,681.35 ) ( 805.46,687.49 ) ( 825.40,693.17 ) ( 845.61,697.90 ) ( 865.80,702.72 ) ( 886.02,707.39 ) ( 906.21,712.19 ) ( 926.60,715.98 ) ( 946.97,719.92 ) ( 967.36,723.75 ) ( 987.86,726.98 ) ( 1008.36,730.21 ) ( 1028.86,733.48 ) ( 1049.48,735.69 ) ( 1069.97,738.99 ) ( 1090.66,740.59 ) ( 1111.24,743.19 ) ( 1131.83,745.67 ) ( 1152.51,747.46 ) ( 1173.20,749.09 ) ( 1193.89,750.68 ) ( 1214.58,752.35 ) ( 1235.28,753.94 ) ( 1255.96,755.61 ) ( 1276.66,757.20 ) ( 1297.38,758.00 ) ( 1318.08,759.47 ) ( 1338.78,761.00 ) ( 1359.50,761.73 ) ( 1380.23,762.40 ) ( 1400.93,763.99 ) ( 1421.66,764.64 ) ( 1439,765 ) ( 181.0,123.0 )    ' '' ''    ( 181.0,123.0 )    ' '' ''    the first requirement for bb84 , namely that it should be possible to detect an enemy s presence , clearly is satisfied .",
    "as we can see from figure 1 , as the number of photons transmitted is increased , the probability of detection tends toward 1 , i.e. we conclude that @xmath77    we will now consider the second security requirement .",
    "let @xmath78 denote the event in which eve measures the @xmath63-th photon transmitted correctly .",
    "the probability that eve measures all photons correctly , and hence is able to obtain the secret key , is the product @xmath79    we will examine the variation of a quantity proportional to @xmath80 , namely the probability @xmath81 that eve measures _ more than half _ the photons transmitted correctly .",
    "according to the second security requirement for bb84 , the amount of valid information obtained by an enemy must be minimised ; we will investigate the variation of the probability @xmath82    as a function of the number of photons transmitted .",
    "we expect this quantity to grow smaller and smaller with @xmath32 .",
    "the prism model of bb84 includes a counter variable , ` nc ` , whose value is the number of times that eve makes a correct measurement .",
    "the formula @xmath83 may be written in terms of this variable : @xmath84    given @xmath53 and @xmath83 , prism produces the plot shown in figure 2 ; it can be seen from the figure that @xmath81 decays exponentially with @xmath32 .",
    "( 1500,750)(0,0 ) ( 181.0,123.0 )    ' '' ''    ( 161,123)(0,0)[r]0 ( 181.0,254.0 )    ' '' ''    ( 161,254)(0,0)[r ] ( 181.0,385.0 )    ' '' ''    ( 161,385)(0,0)[r ] ( 181.0,515.0 )    ' '' ''    ( 161,515)(0,0)[r ] ( 181.0,646.0 )    ' '' ''    ( 161,646)(0,0)[r ] ( 181.0,777.0 )    ' '' ''    ( 161,777)(0,0)[r ] ( 181.0,123.0 )    ' '' ''    ( 181,82)(0,0 ) ( 391.0,123.0 )    ' '' ''    ( 391,82)(0,0 ) ( 600.0,123.0 )    ' '' ''    ( 600,82)(0,0 ) ( 810.0,123.0 )    ' '' ''    ( 810,82)(0,0 ) ( 1020.0,123.0 )    ' '' ''    ( 1020,82)(0,0 ) ( 1229.0,123.0 )    ' '' ''    ( 1229,82)(0,0 ) ( 1439.0,123.0 )    ' '' ''    ( 1439,82)(0,0 ) ( 40,450)(0,0)@xmath85 ( 810,21)(0,0)@xmath76 ( 391,534 ) ( 433,458 ) ( 475,479 ) ( 516,418 ) ( 558,428 ) ( 600,378 ) ( 642,383 ) ( 684,341 ) ( 726,344 ) ( 768,309 ) ( 810,310 ) ( 852,281 ) ( 894,281 ) ( 936,257 ) ( 978,257 ) ( 1020,236 ) ( 1062,237 ) ( 1104,219 ) ( 1145,219 ) ( 1187,204 ) ( 1229,204 ) ( 1271,192 ) ( 1313,192 ) ( 1355,181 ) ( 1397,181 ) ( 1439,172 ) ( 181,718 ) ( 181.00,718.00 ) ( 194.59,702.31 ) ( 208.28,686.72 ) ( 222.81,671.90 ) ( 237.12,656.88 ) ( 251.80,642.20 ) ( 266.47,627.53 ) ( 281.59,613.30 ) ( 296.42,598.80 ) ( 312.27,585.39 ) ( 327.87,571.71 ) ( 343.53,558.09 ) ( 359.39,544.70 ) ( 375.72,531.90 ) ( 392.20,519.32 ) ( 408.83,506.90 ) ( 425.52,494.57 ) ( 442.58,482.75 ) ( 460.06,471.58 ) ( 476.97,459.56 ) ( 494.64,448.68 ) ( 512.07,437.42 ) ( 530.14,427.22 ) ( 548.18,416.98 ) ( 566.22,406.73 ) ( 584.50,396.89 ) ( 602.96,387.41 ) ( 621.49,378.08 ) ( 640.15,369.01 ) ( 659.00,360.31 ) ( 677.86,351.64 ) ( 697.11,343.88 ) ( 716.10,335.54 ) ( 735.35,327.79 ) ( 754.73,320.34 ) ( 774.23,313.26 ) ( 793.73,306.16 ) ( 813.24,299.15 ) ( 832.98,292.78 ) ( 852.74,286.42 ) ( 872.56,280.29 ) ( 892.64,275.08 ) ( 912.40,268.72 ) ( 932.47,263.51 ) ( 952.41,257.83 ) ( 972.64,253.16 ) ( 992.81,248.30 ) ( 1013.03,243.61 ) ( 1033.20,238.72 ) ( 1053.43,234.06 ) ( 1073.80,230.12 ) ( 1094.18,226.28 ) ( 1114.50,222.08 ) ( 1134.81,217.88 ) ( 1155.31,214.62 ) ( 1175.76,211.13 ) ( 1196.14,207.29 ) ( 1216.63,203.98 ) ( 1237.16,200.90 ) ( 1257.76,198.50 ) ( 1278.27,195.34 ) ( 1298.76,192.04 ) ( 1319.39,189.86 ) ( 1340.00,187.54 ) ( 1360.52,184.38 ) ( 1381.18,182.52 ) ( 1401.76,179.94 ) ( 1422.37,177.61 ) ( 1439,176 ) ( 181.0,123.0 )    ' '' ''    ( 181.0,123.0 )    ' '' ''    figures 1 and 2 each contain two superimposed plots : the data points marked with crosses are actual values produced by prism , and the dotted curves are nonlinear functions to which the data points have been fitted .",
    "we have used the levenberg ",
    "marquardt nonlinear fitting algorithm to compute values @xmath86 and @xmath87 such that : @xmath88\\\\ p_{>1/2}(n )   &   \\approx c_{3}\\exp[-c_{4}n]\\end{aligned}\\ ] ]    in particular , the values obtained are ( to three decimal places ) : @xmath89 , @xmath90 , @xmath91 , and @xmath92 .",
    "it is evident that , increasing the number of photons transmitted , or equivalently , the length of the bit sequence generated by alice , increases bb84 s capability to avert an enemy : the probability of detecting the enemy increases exponentially , while the amount of valid information the enemy has about the key decreases exponentially .",
    "these results are in agreement with mayers claim ( see @xcite ) , that in an information  theoretic setting , which is our case , a quantity @xmath93 such as the amount of shannon s information available to eve must decrease exponentially fast as @xmath30 increases .",
    "remember , we have assumed that the number of transmissions , @xmath32 , is linearly related to @xmath30 .",
    "variations in the protocol can be accommodated easily by modifying the prism model .",
    "for example , in @xcite a bias in alice s choice of basis is introduced , and this can be described by a prism action such as ( [ varyingalicebasis ] ) .",
    "this influences the performance of bb84 ; it alters the variation of both @xmath73 and @xmath81 .",
    "it is also possible to vary _ a posteriori _ probabilities with prism , such as the probability that , for any given transmission , the enemy s choice of measurement basis matches alice s original choice .",
    "this probability is not usually taken into consideration in manual proofs , and is likely to be useful for modelling more sophisticated eavesdropping attacks .",
    "it should be noted that the results presented here are not as general as mayers. for instance , we have assumed that a noiseless channel is being used , and we have only considered a finite number of cases ( namely , where @xmath74 ) .",
    "related techniques from computer science , which are better suited for a full proof of unconditional security , do exist ; the most appropriate of these is _ automated theorem proving _",
    "@xcite ; we will leave this for future work .",
    "this technique is not restricted to finite scenarios , and can provide the generality needed for a more extensive analysis .",
    "in this paper we have analysed the security of the bb84 protocol for quantum key distribution by applying _",
    "formal verification techniques , _ which are well  established in theoretical computer science . in particular , an automated model - checking system , prism , was used to obtain results which corroborate mayers unconditional security proof of the protocol . compared to manual proofs of security ,",
    "our approach offers several advantages .",
    "firstly , it is easily adapted to cater for other quantum protocols .",
    "it also allows us to analyse composite systems , which include both classical and quantum ",
    "mechanical components .",
    "finally , we are not only able to model abstract protocols  as presented here  but concrete implementations as well ."
  ],
  "abstract_text": [
    "<S> this paper discusses the use of computer  aided verification as a practical means for analysing quantum information systems ; specifically , the bb84 protocol for quantum key distribution is examined using this method . </S>",
    "<S> this protocol has been shown to be unconditionally secure against all attacks in an information  theoretic setting , but the relevant security proof requires a thorough understanding of the formalism of quantum mechanics and is not easily adaptable to practical scenarios . </S>",
    "<S> our approach is based on _ probabilistic model  </S>",
    "<S> checking ; _ we have used the prism model  </S>",
    "<S> checker to show that , as the number of qubits transmitted in bb84 is increased , the equivocation of the eavesdropper with respect to the channel decreases exponentially . </S>",
    "<S> we have also shown that the probability of detecting the presence of an eavesdropper increases exponentially with the number of qubits . </S>",
    "<S> the results presented here are a testament to the effectiveness of the model  </S>",
    "<S> checking approach for systems where analytical solutions may not be possible or plausible . </S>"
  ]
}
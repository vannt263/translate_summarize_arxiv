{
  "article_text": [
    "recall , that artin braid group on @xmath0 strands is the group given by the following generators and relations : @xmath1=1 , |i - j| \\ge 2 ; x_ix_{i+1}x_i = x_{i+1}x_ix_{i+1 } \\right>.\\ ] ]    the braid group admits a geometric presentation which we shall use throughout this paper .",
    "we refer to @xcite for details .",
    "the idea is to associate to every word in the @xmath2 s a plane diagram , which is obtained by successively concatenating the diagrams of letters , they are given by figure [ pic : cross ] .",
    "we shall make use of another definition , closely linked to the geometric presentation of braids .",
    "if two strands cross , then this we call a crossing ( on figure [ pic : cross ] the crossings of the @xmath3-th and the @xmath4-th strands are shown ) . to every letter @xmath5 of a braid word @xmath6 we associate a ` crossing ' of two strands .",
    "consider the diagram of @xmath7 .",
    "the letters of @xmath7 are in one - to - one correspondence with the crossings of the diagram of @xmath7 .",
    "so , depending on the position of the letter @xmath5 in the word @xmath7 the crossing corresponding to @xmath5 may be different .",
    "for instance , to the letter @xmath8 in the word @xmath9 corresponds the crossing of the first and the second strand , while in the word @xmath10 the crossing linked to @xmath8 is the crossing of the first and the third strands ( see figure [ pic:1 ] ) .",
    "depending on the sign of the generator the sign of crossing can be positive or negative .",
    "let @xmath11 denote the crossing of the @xmath12-th and the @xmath13-th strands .",
    "thus the crossing is completely defined when we fix the numbers @xmath12 and @xmath13 and the sign .",
    "we say that a crossing is negative , whenever the corresponding letter of the word is the inverse of one of the generators @xmath14 and positive otherwise .",
    "thus , the natural notion of the _ ` sign ' _ @xmath15 of a crossing arises .    from the foregoing discussion",
    "we conclude that braid words can be treated as sequences of crossings .",
    "note that any crossing , consider @xmath16 , for instance , can correspond to different generators @xmath17 , depending on the word and the position of a generator in the word ( see figure [ pic:2 ] ) .",
    "furthermore , we offer the reader to check that the following remark holds    let @xmath18 be an arbitrary crossing .",
    "then there exists a braid word @xmath19 and a letter @xmath5 in @xmath19 so that the crossing corresponding to @xmath5 in @xmath19 is @xmath20 , here @xmath21 .",
    "we next formulate the main result of the current paper .",
    "[ thm : nf ] let @xmath22 be the braid group on @xmath0 strands . every element @xmath23 can be uniquely written in the form @xmath24 where for every @xmath25 the words @xmath26 are freely reduced and the crossings involved into @xmath26 are the crossings of the form @xmath27 ( @xmath28 ) only .",
    "this is roughly saying that for given braid there exists a unique braid , which is equivalent to the initial one and is ` constructed ' in the following way : first one entangles the first and the second strand @xmath29 times and the first and the second strands do not cross further .",
    "then one entangles the third strand with the second and the first ( this is @xmath30 ) so that furtheron there are no crossings of the first and the second strands with the third strand , then one entangles the fourth strand with the third , the second and the first ( this is @xmath31 ) and so on .",
    "let @xmath32 , @xmath33 . then normal form ( [ eq : nf ] ) of the word @xmath7 is @xmath34 , see figure [ pic : expl1 ] .",
    ", width=415,height=188 ]    in the case of @xmath35 theorem [ thm : nf ] can be reformulated as follows :    [ cor : b3 ] every element @xmath36 can be uniquely written in the form @xmath37 here @xmath38 , @xmath39 , @xmath40 is even if and only if @xmath12 is even and is odd if and only if @xmath12 is odd .",
    "we draw reader s attention to the fact that in the normal form given in the above corollary the power of the first letter @xmath8 has an arbitrary degree @xmath29 and that the terminal letter of @xmath19 may be any letter ( @xmath8 or @xmath41 ) in any power @xmath42 .",
    "consider the word @xmath43 , where @xmath44 is an odd integer and @xmath45 .",
    "this braid is in normal form , since only the third strand is entangled .",
    "if we now look at @xmath19 as a word written as in corollary [ cor : b3 ] , we have @xmath46 and , since @xmath8 is the terminal letter of @xmath19 , it may be in an arbitrary power ( not necessarily even ) .    moreover , the word @xmath47 , where @xmath48 , is in normal form .    in paper @xcite e.  artin ( and a.  markov in @xcite )",
    "proves that every pure braid can be transformed into the form ( [ eq : nf ] ) .",
    "he suggests to introduce a normal form in the braid group @xmath22 as follows .",
    "every element of @xmath22 can be written as a product of a pure braid and a coset representative of @xmath22 modulo the group of pure braids @xmath49 .",
    "normal form ( [ eq : nf ] ) , therefore , generalises artin - markoff normal form ( see @xcite and @xcite ) to all ( not necessarily pure ) braids and admits a natural geometric description .",
    "moreover , in section [ sec : proof ] , we construct a gathering process which transforms a given word into the form ( [ eq : nf ] ) .",
    "as mentioned above in the case when @xmath19 is a pure braid , normal form ( [ eq : nf ] ) coincides with artin - markoff normal form , given by theorem 17 , @xcite ( see as well @xcite ) . for the sake of convenience and completeness we expose this theorem below .    by the definition set @xmath50 for @xmath51 set @xmath52    [ thm : art ]",
    "the @xmath53 s are generators of the group of pure braids .",
    "every pure braid can be uniquely written in the form : @xmath54 where each @xmath55 is a uniquely determined power product of the @xmath56 using only those with @xmath57 .    in @xcite",
    "the author reads the words from right to left and draws diagrams moving upwards .",
    "the diagrams ( in our interpretation ) of elements @xmath58 take the form shown on figure [ pic : aij ] .    in @xcite",
    "the author introduces the elements @xmath56 s to make normal form ( [ eq : nf ] ) a unique word in the @xmath56 s ( however the elements @xmath56 s can be presented by different braid words ) . choose the word representative of the element @xmath56 to be @xmath59 , where @xmath60 .",
    "notice next that in this case the braid word @xmath56 entangles the @xmath61-th strand only , leaving the other @xmath62 strands unentangled ( see figure [ pic : aij ] ) .",
    "finally , minding the insignificant difference in the geometric interpretation of braid words and noticing that the elements @xmath63 in ( [ eq : art ] ) are uniquely determined elements of @xmath22 ( in @xcite the @xmath55 s are words in the symbols @xmath56 s ) , we conclude that for pure braids the elements @xmath64 in normal form ( [ eq : nf ] ) coincide with , correspondingly , @xmath63 in equation ( [ eq : art ] ) .    ,",
    "in this section we prove theorem [ thm : nf ] .",
    "we also provide an algorithm ( a gathering process ) for constructing normal form ( [ eq : nf ] ) .",
    "we first prove that every braid word @xmath23 can be taken to the word in the form ( [ eq : nf ] ) . and then prove that there exists only a unique word of the form ( [ eq : nf ] ) equal to @xmath19 in @xmath22 .",
    "we say that a crossing that involves the @xmath0-th strand is _",
    "big_. otherwise we term a crossing _",
    "small_.    in the following by @xmath65 we shall mean the equality in the free group and by @xmath66 we denote cancellation - free multiplication of two words .      below we introduce a gathering process that takes the word @xmath19 into the form ( [ eq : nf ] ) .",
    "first we transform the word @xmath19 into the form in which every big crossing is gathered in the end of the word , @xmath67 .",
    "then we apply a similar process to @xmath68 and take it in the form in which every crossing that involves the @xmath62-th strand is collected in the end of the word , @xmath69 and so on .    before we begin to give a formal description of our algorithm we give a less formal description of the idea it uses .",
    "given an arbitrary word @xmath70 we consider it as a sequence of crossings .",
    "take the first small crossing @xmath71 in @xmath19 so that there are big crossings preceding @xmath71 ( i.e. the corresponding letters are closer to the beginning of @xmath19 ) .",
    "the word @xmath19 then has the following form @xmath72 .",
    "where in @xmath73 all the crossings are small , in @xmath74 all the crossings are big , @xmath75 is a letter and the corresponding crossing is @xmath71 and @xmath76 is simply the rest of the word .",
    "we then , using transformations given by figures [ pic : pv ] and [ pic : repl ] , move this crossing upwards ( preserving the braid ) till there are no big crossings in @xmath19 preceding @xmath71 . applying the same procedure to every small crossing in @xmath19",
    "we get its decomposition in the form @xmath77    we begin to construct a gathering process that transforms an arbitrary braid word @xmath19 into the form @xmath67 , where every crossing in @xmath78 is big and every crossing in @xmath68 is small .    by the diagram shown on figure [ pic:3 ] we denote an arbitrary braid on @xmath0 strands .",
    "let us agree that the @xmath0-th strand is designated bold .",
    "by the diagram shown on figure [ pic:4 ] we denote a braid , in which no small crossings occur .        and",
    "by the diagram shown on figure [ pic:5 ] we denote a braid , in which no big crossings occur .",
    "now , an arbitrary braid word @xmath19 can be represented as follows : @xmath79 where the corresponding braid diagram takes the form shown on figure [ pic:6 ] .",
    "note that between @xmath73 and @xmath74 , @xmath74 and @xmath75 , @xmath75 and @xmath76 no free cancellation occurs .",
    "i.e. @xmath73 is a word in which only small crossings occur . in @xmath74",
    "every crossing involves the @xmath0-th strand and therefore is big .",
    "the word @xmath75 is a letter , the corresponding crossing @xmath71 is small and @xmath76 is the rest of the braid word @xmath19 .",
    "we shall further move the only crossing in @xmath75 , that is @xmath71 , upwards ( towards the beginning of the word ) . thereby obtaining the following word @xmath80 , where @xmath81 is a word",
    "in which every crossing is small and @xmath82 counts as many small crossings as @xmath76 .",
    "-decomposition.,width=302,height=453 ]    we prove the statement using double induction .",
    "first is on the length @xmath61 of the word @xmath74 ( the number of big crossings preceding small crossing @xmath71 ) and the second one on the number @xmath42 of letters in @xmath76 that correspond to small crossings ( the number of small crossings that stand further from the beginning of the word than @xmath71 ) .",
    "consider two cases .",
    "the letter @xmath75 commutes with the terminal letter in @xmath74 .",
    "in which case we permute the letter @xmath75 and the terminal letter in @xmath74 then freely reduce the word and obtain the new word @xmath83 ( or @xmath84 , provided that @xmath85 ) and , therefore , the number @xmath61 is decreased and the statement follows by induction .",
    "the terminal letter in @xmath74 does not commute with @xmath75 . since every crossing in @xmath73 and @xmath75 is small and",
    "every crossing in @xmath74 is big the only possibilities for @xmath75 and the two crossings preceding @xmath75 are shown on figure [ pic : pv ] .",
    "replace the configurations shown on figure [ pic : pv ] by the corresponding braid on figure [ pic : repl ] and then freely reduce the obtained word .",
    "denote by @xmath86 the following word @xmath87 , where @xmath88 . in terms of words",
    "the transformations shown on figures [ pic : pv ] and [ pic : repl ] can be rewritten as follows .",
    "@xmath89 @xmath90 @xmath91 @xmath92 @xmath93 @xmath94 @xmath95 @xmath96    furthermore , in the constructed procedure whenever the letter @xmath75 commutes with the terminal letter in @xmath74 we permute the letter @xmath75 and the terminal letter in @xmath74 . in this case",
    "the word @xmath74 may consist of a single letter .",
    "this transformation rewrites in terms of words as follows : @xmath97 where @xmath98 and @xmath99 is possibly empty .",
    "finally on the frontier of either @xmath86 ( or @xmath99 ) or @xmath76 or @xmath100 and the replaced segment free cancellation might occur .",
    "for the sake of completeness , we write the expression of free reduction @xmath101 we leave the reader to check that equations ( [ eq : i1])-([eq : ii4 ] ) , ( [ eq : com1 ] ) and ( [ eq : cancel ] ) are in fact equalities in the braid group .",
    "suppose that after a step of the procedure from the initial word @xmath19 we obtain a new word @xmath102 , and consider its @xmath103-decomposition .",
    "in the obtained @xmath104-decomposition the length @xmath61 of @xmath74 is lower , provided that the crossing @xmath71 is not in @xmath73 ( in which case the statement follows by induction on @xmath42 ) .",
    "the word @xmath75 is a letter and it corresponds to the same crossing @xmath71 , provided that the letter @xmath75 has not cancelled with a letter from @xmath73 . finally ,",
    "since all of the above replacements do not create any new small crossings in @xmath19 ( though replacements given by expressions ( [ eq : i3 ] ) , ( [ eq : i4 ] ) , ( [ eq : ii3 ] ) , ( [ eq : ii4 ] ) create new big crossings ) , the above process stops and the statement follows by induction on @xmath42 .    as an output we obtain the following decomposition of an arbitrary braid @xmath67 , where in the word @xmath68 every crossing is small and in @xmath78 all big crossings of @xmath19 are collected .",
    "we next apply a similar process to @xmath68 and take it in the form in which all crossings involving the @xmath62-th strand are gathered in its end , @xmath69 and so on .",
    "finally , we obtain a word in the form ( [ eq : nf ] ) .      below",
    "we show that if @xmath105 and @xmath106 are two braid words written in the form ( [ eq : nf ] ) and @xmath107 in the braid group @xmath22 then @xmath108 .",
    "firstly , note that , on account of theorem [ thm : art ] ( theorem 17 , @xcite ) or theorem 6 in section 11 , @xcite if @xmath105 and @xmath106 are two pure braid words written in the form ( [ eq : nf ] ) and @xmath107 then @xmath108 .    consider two braid words @xmath109 and @xmath110 written in the form ( [ eq : nf ] ) .",
    "denote @xmath111 and @xmath112 by , correspondingly , @xmath113 and @xmath114 .",
    "note that @xmath113 and @xmath114 consist of small crossings only , while @xmath115 and @xmath19 of big crossings only .    in the above notation we have @xmath116 where by ` @xmath117 ' we denote the concatenation ( without free reduction ) of words .",
    "we next want to show that the subword @xmath118 of the word @xmath119 is a pure braid every crossing in which is small and that the subword @xmath120 of the word @xmath119 is a pure braid every crossing in which is big .",
    "obviously @xmath121 is a braid in which every crossing is small ( by the definition both @xmath114 and @xmath113 involve letters @xmath122 and their inverse only ) .",
    "[ rem : sb ] let @xmath7 be a braid every crossing in which is big ( in which case the initial letter of @xmath7 is @xmath123 ) and let @xmath124 be an arbitrary braid every crossing in which is small ( in which case @xmath124 does not contain the letter @xmath125 ) . then in the word @xmath126",
    "every crossing in the subword @xmath124 is small , while every crossing in the subword @xmath7 is big .     is big regardless of the initial segment of the word @xmath127 , provided that every crossing in @xmath124 is small , width=476,height=192 ]    by the definition the braid @xmath7 entangles the @xmath0-th strand , leaving the first @xmath62 strands parallel ( regardless of the permutation defined by the subword @xmath124 of the word @xmath128 ) , see figure [ pic : rem ] .",
    "we next show that every crossing in the subword @xmath120 of the word @xmath119 is big .",
    "since every crossing in @xmath115 is big , by remark [ rem : sb ] , every crossing in the subword @xmath115 of the word @xmath129 is big .",
    "we are left to show that every crossing in the @xmath130 passage of the word @xmath119 is big . to show the latter we need to study the structure of crossings of the inverse of a braid that entangles the @xmath0-th strand only .",
    "consider a braid @xmath7 so that every its crossing is big ( it therefore entangles the @xmath0-th strand , leaving the first @xmath62 strands unentangled ) and so that the permutation defined by @xmath7 takes the @xmath0-th strand into the @xmath42-th position then the inverse @xmath131 entangles the @xmath42-th strand only , leaving the other @xmath62 strands unentangled .",
    "furthermore , by the definition , the permutation defined by @xmath131 is the inverse of the permutation defined by @xmath7 and consequently the permutation defined by @xmath131 takes the @xmath42-th strand of @xmath131 into the @xmath62-th position .",
    "the above argument can also be illustrated by the following diagrams .",
    "the diagram of an arbitrary braid word @xmath7 has the form given on figure [ pic : w ] ( two strands are designated and a corner is marked to demonstrate the connections between a braid and its inverse )        and , consequently , the diagram of the word @xmath130 has the form given on figure [ pic : winv ] ,        i.e. the diagram of the word @xmath131 is a two times reflected diagram of @xmath7 .",
    "let us consider an example .",
    "let @xmath33 , the respective diagram is given by figure [ pic : expl2 ] .",
    "the inverse of @xmath7 is @xmath132 and the corresponding diagram is given by figure [ pic : expl3a ] .    ,",
    "width=72,height=118 ]    , width=77,height=114 ]    we now return to the consideration of the word @xmath133 .",
    "recall that , by our assumption , the word @xmath115 takes the @xmath0-th strand into the @xmath42-th position .",
    "since @xmath134 thus the permutations defined by @xmath135 and @xmath136 coincide , and both @xmath115 and @xmath19 permute the @xmath0-th strand into the @xmath42-th position .",
    "now , from the foregoing discussion we know that :    * every crossing in @xmath137 is small , * every crossing in @xmath115 is big , * the word @xmath130 entangles the @xmath42-th strand only .    consequently , in the word @xmath119 the subword @xmath130 entangles the strand , which is on the @xmath42-th position . by remark [ rem : sb ] , since every crossing in the braid @xmath121 is small and since the permutation defined by the word @xmath115 takes the @xmath0-th strand into the @xmath42-th position , so does the permutation defined by the word @xmath138 .",
    "we thereby obtain that all crossings in the @xmath118 subword of the word @xmath119 are small and all the crossings in the subword @xmath120 are big .",
    "the latter argument can be illustrated by diagrams .",
    "the diagrams corresponding to equation ( [ eq : uniq ] ) take the form shown on figure [ pic : diag ] .     and @xmath139,width=476,height=384 ]    from figure [ pic : diag ] we see that , since the permutation defined by the word @xmath119 is the identity and since @xmath118 defines a permutation of the first @xmath62 strands , while @xmath120 entangles the @xmath0-th strand only both @xmath118 and @xmath120 are pure braids .",
    "from the above discussion , since @xmath140 is a pure braid , by theorem [ thm : art ] ( theorem 17 , @xcite ) or theorem 6 in section 11 , @xcite , the equality @xmath141 therefore implies that @xmath142 using induction on the number of strands @xmath0 we may assume that the equality @xmath143 in @xmath144 implies that @xmath145 .",
    "finally , we are left to show that if the braid @xmath146 is trivial , every its crossing is big and the word @xmath146 is freely reduced then @xmath146 is the empty word .",
    "since @xmath146 is a pure braid every crossing of which is big , it can be written as a product of the following words @xmath147 by the definition @xmath148",
    ". consequently normal form ( [ eq : art ] ) of a pure braid @xmath146 is @xmath149 ( in the notation of theorem [ thm : art ] ) .",
    "therefore , since @xmath150 , on behalf of theorem [ thm : art ] ( theorem 17 , @xcite ) or theorem 6 in section 11 , @xcite , @xmath146 is the empty word and @xmath151 .",
    "consequently , normal form ( [ eq : nf ] ) is unique .",
    "in this section we explain another approach to the computation of normal form ( [ eq : nf ] ) .",
    "this approach turns out to be efficient in the actual implementation of the algorithm on a computer .",
    "the current and the following sections are less formal and hold some of our ideas and comments on the issue .    in the actual implementation of the algorithm for computing the normal form ( [ eq : nf ] ) of a braid word @xmath7 it is more convenient to treat elements of @xmath22 as sequences of crossings .",
    "let us consider an example .",
    "let @xmath33 .",
    "this element rewrites in terms of crossings as follows : @xmath152 on the other hand , given a proper sequence of crossings , we can form the corresponding braid word .",
    "let us consider the following sequence of crossings : @xmath153 it is fairly obvious that the corresponding braid word is @xmath154 .",
    "the correspondence between sequences of crossings and braid words is not one - to - one .",
    "let @xmath155 be a sequence of crossings .",
    "there is no braid word @xmath124 corresponding to the sequence @xmath156 .",
    "[ rem : seqcrreg ] the set of all sequences of crossings that represent elements of a fixed braid group @xmath144 is regular , i. e. recoginsed by a finite automaton .    the automaton has @xmath157 states which are numbered by the elements of the group of permutations @xmath158 on @xmath62 symbols .",
    "the initial state is the one that corresponds to the trivial permutation , and all the states are fail states .",
    "there are two edges , which are labelled by crossings @xmath159 from a state labelled @xmath160 to a state labelled @xmath161 whenever @xmath162 , for some @xmath163 .",
    "we leave the reader to check that this automaton recognises the set of all sequences of crossings that correspond to braid words ( not necessarily freely reduced ) .",
    "we next rewrite the replacements given by figures [ pic : pv ] and [ pic : repl ] ( equations ( [ eq : i1 ] ) - ( [ eq : ii4 ] ) ) in terms of sequences of crossings .",
    "let @xmath164 , @xmath165 and let @xmath166 .",
    "replacements given by figures [ pic : pv ] and [ pic : repl ] ( equations ( [ eq : i1 ] ) - ( [ eq : ii4 ] ) ) take the form ( we assume that @xmath164 ) : @xmath167 @xmath168 @xmath169 @xmath170    recall that in subsection [ ss : exist ] we used yet another transformation of a braid . in the @xmath72 decomposition of a braid",
    "if the letter @xmath75 commutes with the terminal letter in @xmath74 we permute the letter @xmath75 and the terminal letter in @xmath74 and obtain the new word @xmath171 , see equation ( [ eq : com1 ] ) . to perform such a transformation we introduce the following transformation of sequences of crossings .",
    "let @xmath172 and @xmath173 ; @xmath174 and let @xmath175 .",
    "the transformation mentioned in subsection [ ss : exist ] takes the form : @xmath176 we , therefore replace the sequence of crossings @xmath177 by @xmath178 , whenever @xmath71 and @xmath179 commute and @xmath179 is ` smaller ' than @xmath71 .",
    "finally , since in subsection [ ss : exist ] we used reduction in the free group ( see equation ( [ eq : cancel ] ) ) we need to introduce the following transformation of sequences of crossings : @xmath180    we next reformulate theorem [ thm : nf ] for elements of braid groups viewed as sequences of crossings .",
    "[ thm : nfcr ] every sequence of crossings which corresponds to an element @xmath181 can be taken ( by the means of transformations ( [ eq : i1])([eq : d ] ) ) to the form @xmath182 where for every @xmath183 the words @xmath26 do not contain subwords of the form @xmath184 , @xmath15 . under the above assumptions presentation in the form ( [ eq : nfcr ] ) is unique .",
    "[ rem : preserve ] let @xmath19 be an arbitrary sequence of crossings , which represents a braid word @xmath7 .",
    "suppose next that in @xmath7 there is a subword , which coincides with one of the left - hand sides of rules ( [ eq : i1])([eq : d ] ) .",
    "then the word @xmath185 , which is obtained from @xmath7 by replacing the left - hand side of a rule ( [ eq : i1])([eq : d ] ) by the respective right - hand side , is a sequence of crossings which rewrites into a braid word .",
    "i. e. rules ( [ eq : i1])([eq : d ] ) preserve the property of being a representative of a braid word .",
    "not only did the above approach turned out to be very useful in actual implementation of the algorithm of computation of normal form ( [ eq : nf ] ) , but also hints at us the idea to construct a term rewriting system ( a knuth - bendix like algorithm ) for elements of braid groups viewed as sequences of crossings .",
    "we suppose that normal form ( [ eq : nf ] ) can be generalised and a similar normal form can be constructed for an arbitrary artin group @xmath186 of finite type .",
    "first one needs to fix an ordering of the natural generators of the corresponding ( to @xmath186 ) coxeter group @xmath187 .",
    "next one needs to rewrite an arbitrary word @xmath188 as a sequence of elements of @xmath187 . then transform the element @xmath124 ( agreeing with the introduced order ) to a form whose presentation as a sequence of generators of @xmath187 is in some sense small ( an analogue of the form ( [ eq : nf ] ) ) . and",
    "consequently there exist a nice geometric normal form for an arbitrary artin group of finite type .",
    "below , in section [ sec : ex ] , we show how one can construct such a form for the group @xmath189 .",
    "one of the most important problems in a struggle to construct cryptography on braid groups is to give a method for generating a random braid ( see @xcite ) .",
    "we , therefore , can not but notice that theorem [ thm : nf ] gives a method of generating a random braid .    a naive approach to generating a random braid is to generate a random freely reduced word and claim this a random braid .",
    "however there is a dramatic difference between a random braid and a random freely reduced word .",
    "for example , the results of @xcite and @xcite show that a random braid has got a nontrivial centraliser ( its centraliser differs from the center of @xmath22 ) with a non - zero probability , while computational results show , that the centraliser of a random reduced word in the free group , treated as an element of @xmath22 is trivial .    to generate a random braid on @xmath0 strands we can use theorem [ thm : nf ] , for instance , as follows .",
    "here we use the ideas of @xcite , whereto we refer the reader for details and justification of the method .",
    "we do not in any way insist that the suggested method is better than any other method known , though we believe that it may turn out to be useful for computer scientists .",
    "we suggest the following random process with weak interferences .",
    "one has : @xmath190    * 1*. we generate a random power of @xmath8 as follows , thus entangling the first two strands .",
    "we start at the identity element of @xmath22 and either do nothing with probability @xmath191 $ ] and then go to step * 2 * or move to one of the two elements @xmath8 or @xmath192 with equal probabilities @xmath193 .",
    "if we are at an element @xmath194 we either stop at @xmath114 with probability @xmath195 ( and proceed to step * 2 * ) , or move , with probability @xmath196 to the vertice @xmath197 , if @xmath198 and to the vertice @xmath199 , if @xmath200 .",
    "* 2*. on this step we generate @xmath201 ( in the notation of equation ( [ eq : nf ] ) ) , thus entangling the third strand into the first two .",
    "this process can be treated as a discrete random walk on two points , which are linked to the first and the second strands .",
    "we start at the identity element of @xmath22 and either do nothing with probability @xmath202 $ ] and then go to step * 3 * or move to one of the two elements @xmath41 or @xmath203 with equal probabilities @xmath204 .",
    "if we are at an element @xmath205 , @xmath38 we either stop at @xmath114 with probability @xmath206 ( and proceed to step * 3 * ) , or : * a*. if @xmath207 and @xmath208 is odd , move , with probability @xmath209 , to one of the vertices @xmath210 or @xmath211 or @xmath212 . * b*. if @xmath207 and @xmath213 is odd , move , with probability @xmath209 , to one of the vertices @xmath214 or @xmath211 or @xmath212 . * c*. if @xmath207 and @xmath208 is even , move , with probability @xmath215 , to the vertice @xmath216 . *",
    "d*. if @xmath207 and @xmath213 is even , move , with probability @xmath215 , to the vertice @xmath217 .",
    "* e*. if @xmath218 and @xmath208 is odd , move , with probability @xmath215 , to the vertice @xmath219 .",
    "* f*. if @xmath218 and @xmath213 is odd , move , with probability @xmath215 , to the vertice @xmath217 .",
    "* g*. if @xmath218 and @xmath213 is even , move , with probability @xmath209 , to one of the vertices @xmath220 or @xmath221 or @xmath222 .",
    "* h*. if @xmath218 and @xmath208 is even , move , with probability @xmath209 , to one of the vertices @xmath223 or @xmath221 or @xmath222 .",
    "* 3*. on this step we generate @xmath224 ( in the notation of equation ( [ eq : nf ] ) ) , thus entangling the fourth strand into the first three .",
    "this process can be treated as a discrete random walk on three points , which are linked to the first three strands .",
    "we start at the identity element of @xmath22 and either do nothing with probability @xmath225 $ ] and then go to step * 4 * or move to one of the two elements @xmath226 or @xmath227 with equal probabilities @xmath228 .",
    "if we are at an element @xmath229 we either stop at @xmath114 with probability @xmath230 ( and proceed to step * 4 * ) , or : * a*. if @xmath231 and @xmath198 is odd , move , with probability @xmath209 , to one of the vertices @xmath232 or @xmath233 or @xmath234 .",
    "* b*. if @xmath231 and @xmath200 is odd , move , with probability @xmath209 , to one of the vertices @xmath235 or @xmath233 or @xmath234 . *",
    "c*. if @xmath231 and @xmath198 is even , move , with probability @xmath215 , to the vertices @xmath232 .",
    "* d*. if @xmath231 and @xmath200 is even , move , with probability @xmath215 , to the vertices @xmath235 .",
    "* e*. if @xmath207 and @xmath198 is odd , move , with probability @xmath209 , to one of the vertices @xmath236 or @xmath237 or @xmath238 .",
    "* f*. if @xmath207 and @xmath200 is odd , move , with probability @xmath209 , to one of the vertices @xmath239 or @xmath237 or @xmath238 . *",
    "g*. if @xmath207 and @xmath198 is even , move , with probability @xmath209 , to one of the vertices @xmath236 or @xmath240 or @xmath241 .",
    "* h*. if @xmath207 and @xmath200 is even , move , with probability @xmath209 , to one of the vertices @xmath239 or @xmath240 or @xmath241 .",
    "* i*. if @xmath218 and @xmath198 is odd , move , with probability @xmath215 , to the vertice @xmath242 . *",
    "j*. if @xmath218 and @xmath200 is odd , move , with probability @xmath215 , to the vertice @xmath243 .",
    "* k*. if @xmath218 and @xmath198 is even , move , with probability @xmath209 , to one of the vertices @xmath242 or @xmath244 or @xmath245 .",
    "* l*. if @xmath218 and @xmath200 is even , move , with probability @xmath209 , to one of the vertices @xmath243 or @xmath244 or @xmath245 .",
    "* 4*. and so on .    in other words on the * @xmath42 *",
    "-th step we generated the word @xmath246 , thus entangling the @xmath247-th strand into the first @xmath42 . since the words @xmath248 s from equation ( [ eq : nf ] ) are determined uniquely and since , by the construction , the obtained words @xmath248 s are freely reduced , we obtain a ` random ' braid .",
    "in this section we view elements of @xmath22 as sequences of crossings , which we for the most part will refer as strings .",
    "we construct a confluent string rewriting system , whose output will be a string in the form ( [ eq : nfcr ] ) .    to construct a rewriting system",
    "one is to define the strings and the rules . in our case , strings are the sequences of crossings that correspond to braid words and the rules of the rewriting system are the rules given by ( [ eq : i1])([eq : d ] ) .",
    "we also term these rules by transformations or rewrites .",
    "let us number all the crossings for the group @xmath22 as follows : @xmath249 ; naturally @xmath250 .",
    "we now prove that the rewriting system defined on the set of all sequences of crossings that correspond to braids by transformations ( [ eq : i1])([eq : d ] ) is confluent , i. e. that any chain of rewrites terminates and that there is the only residue and that it is the one corresponds to normal form ( [ eq : nfcr ] ) .    to prove the confluence of our rewriting system we first prove that for any string one can sequentially apply only a finite number of transformations .",
    "first of all note that all rewrites ( [ eq : i1])([eq : d ] ) either have the form @xmath251 where @xmath252 are strings of crossings that involve crossings @xmath253 and their inverses only , @xmath254 , or the form @xmath255 where @xmath256 and @xmath257 .",
    "denote by @xmath258 the maximal length of a chain of transformations applied to a string @xmath19 , so that @xmath258 is either a positive integer or the symbol @xmath259 , in the case that the length of chains of transformations is not bounded above .",
    "let @xmath260 be a presentation of a sequence of crossings @xmath19 so that no free cancellation between @xmath114 and @xmath115 occurs and @xmath261",
    ". then @xmath262 .",
    "we now intend to prove the following    [ lem : bound ] let @xmath263 be the set of rules of the form ( [ eq : rules ] ) and ( [ eq : rules2 ] ) .",
    "let @xmath19 be an arbitrary string then any sequence of transformations of the string @xmath19 terminates .",
    "suppose first that a string involves @xmath264 and its inverse only .",
    "then any chain of transformations has transformations given by equation ( [ eq : rules2 ] ) only , and is clearly finite .",
    "thus , without loss of generality , we may assume that any chain of transformations of any sequence of crossings that involves @xmath265 ( and their inverses ) only counts a finite number of steps .",
    "we now use induction on the number of occurrences of @xmath266 in a string . if @xmath267 does not occur in a string , the statement is straightforward .",
    "consider next a sequence of crossings @xmath268 , @xmath269 . by the induction assumption , @xmath258 and @xmath270",
    "are finite .",
    "consider an arbitrary chain of transformations of @xmath113 .",
    "suppose that the @xmath113-th rewrite involves the @xmath271 and the string rewrites as follows @xmath272 .",
    "where @xmath273 is a substring of @xmath274 and @xmath275 and @xmath276 . applying a similar argument to the word @xmath277 and noticing that @xmath278 or the length of @xmath279 is strictly lower than the one of @xmath19 ( for example if @xmath280 ) or both , we conclude that any chain of transformations of this sequence of crossings terminates .",
    "consider next an arbitrary string with @xmath42 occurrences of @xmath281 and write it in the form : @xmath282 by induction we may assume that for the sequence of crossings @xmath283 is finite . consider an arbitrary chain of transformations of @xmath19 .",
    "suppose that its @xmath113-th step involves the @xmath284 and the string rewrites as follows @xmath285 , where @xmath279 is a subword of @xmath102 and thus @xmath275 , and @xmath286 . applying a similar argument to @xmath287 the statement follows .",
    "indeed , either @xmath288 is strictly lower than @xmath289 or the length of @xmath279 is strictly lower than the length of @xmath290 or both and @xmath291 is always finite , the procedure , therefore , terminates .",
    "the set of rules ( [ eq : i1])([eq : d ] ) gives rise to a confluent term rewriting system on the set of sequences of crossings , which represent braid words .    by the definition , a rewriting system is confluent whenever the order of application of rules does not matter ,",
    "i. e. we have the following diagrams : @xmath292 @xmath293 @xmath294 here @xmath295 and @xmath296 , @xmath297 and @xmath298 , @xmath299 and @xmath296 are left parts of the rules , @xmath300 and @xmath301 are right - hand sides of the rules and @xmath302 is the residue of @xmath19 , i.e. such a word to which no transformation can be applied .",
    "this is roughly saying that if there is a choice of which rule to apply then there exists a common residue of the resulting words .    to show that our term rewriting system is confluent suppose that there exist two distinct residues @xmath303 and @xmath304 of a string @xmath19",
    ". by theorem [ thm : nfcr ] there exist a residue @xmath305 of @xmath19 in the form ( [ eq : nfcr ] ) ( since none of the rules ( [ eq : i1])([eq : d ] ) can be applied to @xmath305 ) .",
    "since @xmath306 at least one of them does not coincide with @xmath305 .",
    "suppose that @xmath307 .",
    "then , by remark [ rem : preserve ] , @xmath303 corresponds to a braid , and therefore , on account of theorem [ thm : nf ] ( see also section [ ss : exist ] ) , we can take @xmath303 to @xmath305 by the means of the rules ( [ eq : i1])([eq : d ] )  a contradiction .",
    "@xmath308    the set of all sequences of crossings that correspond to normal form ( [ eq : nfcr ] ) of elements of the braid group @xmath22 is regular .    by remark [ rem : seqcrreg ]",
    "the set of all sequences of crossings that correspond to elements of @xmath22 is regular .",
    "since the collection of rules ( [ eq : i1])([eq : d ] ) is finite , the set of all sequences of crossings that do not contain the left - hand sides of rules is regular .",
    "the statement now follows , for the intersection of two regular sets is regular .",
    "in this section we show how one can obtain an analogue of the form ( [ eq : nf ] ) for an artin group of finite type @xmath309 .",
    "any artin group of type @xmath310 embeds into a braid group on sufficiently many strands and the embedding is fairly natural , see @xcite for details .",
    "for example , the group @xmath186 embeds into @xmath35 as follows : @xmath311 . using this embedding and",
    "the normal form constructed in this paper one can obtain similar geometric normal forms for @xmath186 ( and any other artin group of type @xmath310 ) .",
    "however , we want to explicitly demonstrate the generalisation of the idea used to construct normal forms in braid groups and show how one can construct normal forms in @xmath186 ` barehanded ' .",
    "consider the corresponding coxeter group @xmath187 . as it is well - known ,",
    "see for instance @xcite , @xmath187 can be treated as a group , generated by the following reflections of a square : @xmath312 and @xmath313 , where the corresponding square has the form : @xmath314 we use this notation to express , that @xmath315 is the reflection of the square that permutes vertices @xmath316 and @xmath317 and @xmath318 is the reflection of the square that permutes @xmath316 with @xmath319 , and @xmath317 with @xmath320 : @xmath321    we next consider every element of @xmath186 as a sequence of elements of @xmath187 .",
    "the group @xmath187 consists of @xmath322 elements : @xmath323 , @xmath324 , @xmath325 , @xmath326 , @xmath327 , @xmath328 , @xmath329 .",
    "all the above elements , but @xmath330 involve the @xmath320-th vertice of the square .    in the case of braid groups ,",
    "the crossing @xmath331 of two strands can correspond to any generator ( since all the permutations @xmath332 are conjugate in the coxeter group , which corresponds to the braid group , i. e. the group of permutations on @xmath0 symbols ) .",
    "however , only the elements @xmath331 and @xmath324 of the group @xmath187 can correspond to the generator @xmath333 ( treated as a subword of a word of @xmath186 ) , since @xmath331 is the image of @xmath333 in @xmath187 and @xmath324 is the only element of @xmath187 conjugate to @xmath331 .",
    "we next prove the following theorem    in the above notation , every element @xmath334 can be taken to the form @xmath335 where @xmath336 is freely reduced and the reflections , which correspond to the letters in @xmath336 are the following @xmath337 , @xmath325 , @xmath338 , @xmath339 , @xmath340 , @xmath341 only .",
    "the proof of the theorem repeats the argument given in subsection [ ss : exist ] .",
    "we only need to introduce analogues of transformations ( [ eq : i1])-([eq : ii4 ] ) and figures [ pic : pv ] and [ pic : repl ] .",
    "algebraic analogues of figures [ pic : pv ] and [ pic : repl ] take the form : @xmath342 @xmath343 @xmath344 @xmath345 @xmath346 @xmath347 @xmath348 @xmath349 @xmath350 @xmath351 in terms of words analogues of transformations ( [ eq : i1])-([eq : ii4 ] ) take the form : @xmath352 @xmath353 @xmath354 @xmath355 @xmath356 one can see that each rule in the list above moves the reflection @xmath357 to the beginning of the word and is so that in the right - hand side of the rules there is only one occurrence of @xmath333 , which corresponds to the reflection @xmath358 .",
    "furthermore , the rules above enumerate all the possibilities , when @xmath357 corresponds to the terminal letter of a subword of a word from @xmath186 and so that only the following elements of @xmath187 correspond to the @xmath319 letters preceding the letter that corresponds to @xmath359 : @xmath360 @xmath308    we did not show that the form ( [ eq : nf1 ] ) is unique . to prove the uniqueness of normal form ( [ eq : nf ] ) for braids we used results of e. artin .",
    "we do not know similar results for arbitrary artin groups of finite type .",
    "however , it may be derived from the fact that @xmath186 embeds into some braid group .",
    "in the current section we list some of the questions that arose in our work .",
    "we also briefly discuss some of advantages and disadvantages of normal form ( [ eq : nf ] ) .    in section [ sec : rb ]",
    "we have given a description of a procedure of generating a random braid .",
    "that procedure involves @xmath62 random walks , each of which is defined by a parameter @xmath361 .",
    "choose the @xmath361 s so that the obtained word generator would be useful for practical needs of computer scientists .",
    "we suppose that a solution of this problem can be piloted by papers @xcite and @xcite .",
    "[ q:2 ] i. consider two geodesic words @xmath369 from a braid group @xmath144 such that @xmath370 .",
    "is the list of transformations @xmath362 sufficient to obtain the word @xmath105 from the word @xmath106 ?",
    "\\ii . let @xmath369 be arbitrary words from a braid group @xmath144 .",
    "assume that @xmath105 is written in geodesic form and @xmath370 .",
    "is the list of transformations @xmath362 sufficient to obtain the word @xmath105 from the word @xmath106 ?",
    "[ q:3 ] we presume that the introduced normal forms do not form an automatic structure ( this was conjectured in our conversation with g. a. noskov ) .",
    "let @xmath7 be a braid word .",
    "our experiments show that normal form ( [ eq : nf ] ) @xmath371 of @xmath7 may have an exponential length on the length of the input word ( consider the word @xmath372 and its powers , for instance ) . in what follows that this normal form can not be automatic ( see @xcite ) .",
    "however , resulting from our experiments , we conjecture that in the class of words conjugate to @xmath7 ( and even among all cyclic permutation of @xmath7 ) there exists an element @xmath124 so that its normal form @xmath373 is polynomial ( linear ) on the length of its geodesic form @xmath156 .",
    "as mentioned in question [ q:3 ] normal form ( [ eq : nf ] ) @xmath371 of @xmath7 may have an exponential length on the length of the input word .",
    "is it true that normal form ( [ eq : nf ] ) of @xmath7 is generically polynomial ( linear ) on the length of a geodesic word @xmath374 ? for a detailed explanation of the term ` generically polynomial ' the reader may consult @xcite .      _",
though it has been proved that every braid can be transformed to a similar normal form the writer is convinced that any attempt to carry this out on a living person would only lead to violent protests and discrimination against mathematicians .",
    "he would therefore discourage such an experiment .",
    "_ e. artin
  ],
  "abstract_text": [
    "<S> in this paper we construct a gathering process by the means of which we obtain new normal forms in braid groups . </S>",
    "<S> the new normal forms generalise artin - markoff normal forms and possess an extremely natural geometric description . in the two last sections of the paper we discuss the implementation of the introduced gathering process and the questions that arose in our work . </S>",
    "<S> this discussion leads us to some interesting observations , in particular , we offer a method of generating a random braid . </S>"
  ]
}
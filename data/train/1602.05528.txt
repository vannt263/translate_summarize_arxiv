{
  "article_text": [
    "organisms frequently search to find targets whose position is unknown to them .",
    "for example , animals search for food or mates in ways that balance both speed and low energy expenditure  @xcite .",
    "in addition , the dynamics of biomolecules can be modeled as a search process .",
    "recently , experiments and modeling studies have identified biochemical processes whose kinetics involve the search for a reaction partner , due to the small number of reactive molecules  @xcite .",
    "regardless of the context of searches , it is often desirable to minimize the amount of time needed to find the target , and this is the most common measure of search efficiency  @xcite",
    ".    there are two particularly well studied models of random search processes : passive diffusion and intermittent search .",
    "passive diffusion to a small target in a confined domain is a common model of molecular transport at the biomolecular scale  @xcite .",
    "a distinct advantage of this framework is that the average time to find the target can be formulated as the solution to a mean first passage time ( mfpt ) problem  @xcite .",
    "however , this model is not appropriate in all situations .",
    "in particular , foraging organisms and biomolecules that move ballistically often employ an intermittent search strategy , wherein diffusive search periods are punctuated by rapid displacement phases during which no search occurs  @xcite .",
    "such intermittent strategies can be optimized to obtain a minimal mfpt by balancing time spent in the moving and searching phases  @xcite .",
    "in contrast to such previous work , one could also consider strategies wherein search is persistent and ballistic .",
    "the searcher then proceeds according to a velocity - jump process , moving ballistically and then switching direction at random times  @xcite .",
    "the diffusion limits of velocity - jump processes are given by linear transport systems , specific cases of the boltzmann equation  @xcite .",
    "recently , this model has been used to analyze the statistics of foraging insect movement  @xcite .",
    "presuming an animal can detect targets while moving ballistically  @xcite , search and travel can be modeled as a single process .",
    "one well studied experimental paradigm wherein an animal searches persistently is the morris water navigation task , in which a rodent must locate a platform in a circular pool  @xcite .",
    "visual search in psychophysics tasks is another example of persistent search , where the focal point of gaze moves ballistically in search of a visual target  @xcite .",
    "thus , concrete quantitative models are needed to understand the dynamics of persistent search and identify optimal strategies .",
    "we analyze an idealized model of persistent search , which considers movements of the searcher to be ballistic trajectories with constant speed .",
    "for simplicity , we consider two - dimensional circular domains with reflecting boundaries along with circular targets with absorbing boundaries .",
    "initially , we develop an asymptotic theory for approximating the time to find the target when the searcher only turns when encountering the domain boundary .",
    "this allows us to understand how the placement of the target impacts the average time to locate it .",
    "we extend our analysis to the case where the searcher turns on the domain interior with finite probability , showing this decreases the mfpt for low - probability of turning .",
    "lastly , we introduce a model of persistent search on multiple disjoint domains . when the transit time between subdomains is nonzero , there is an optimal rate of transition between domains that balances domain coverage with the time penalty for traveling between domains . in all cases ,",
    "we identify how search and domain parameters impact the mfpt .",
    ") , the searcher moves ballistically between locations on the boundary @xmath2 . a subsequent boundary location @xmath3",
    "is selected based on the current one @xmath4 by drawing from the probability density function @xmath5 .",
    "( * b * ) in the case of interior turning ( @xmath6 ) , the searcher s trajectories are no longer wholly determined by the deflection angles at the boundary .",
    "the search concludes when the target domain @xmath7 is encountered.,title=\"fig:\",width=226 ] ) , the searcher moves ballistically between locations on the boundary @xmath2 . a subsequent boundary location @xmath3 is selected based on the current one @xmath4 by drawing from the probability density function @xmath5 .",
    "( * b * ) in the case of interior turning ( @xmath6 ) , the searcher s trajectories are no longer wholly determined by the deflection angles at the boundary .",
    "the search concludes when the target domain @xmath7 is encountered.,title=\"fig:\",width=226 ]    consider the following model for the stochastically evolving position @xmath8 of a persistent searcher .",
    "we construct a model of a particle searching for a hidden target in a bounded , circular domain @xmath9 of radius @xmath10 , i.e. @xmath11 . the hidden target is also defined by a circular region with radius @xmath12 : @xmath13 where @xmath14 denotes the centroid of the target domain .",
    "note , we will restrict @xmath15 , so the entire target is contained in the domain @xmath9 .",
    "furthermore , due to the rotation symmetry of the circular domain , we exclusively consider targets with coordinates along the right horizontal radius , @xmath16 .",
    "all other cases can be reduced to this form by an axial rotation .",
    "the searcher s position evolves according to a velocity - jump process  @xcite . on the interior of the domain @xmath17",
    ", the searcher moves ballistically with velocity @xmath18 with constant speed @xmath19 and angle @xmath20 .",
    "transitions in the velocity angle @xmath21 are governed by a continuous - time markov process with turning rate @xmath22 . in the limit @xmath23 ,",
    "the distribution of ballistic path - lengths is @xmath24 .",
    "note that as @xmath25 , @xmath26 and the searcher will exhibit brownian motion  @xcite . in the other extreme , @xmath27 , the searcher s probability of turning in finite time decreases to zero , maintaining its initial velocity @xmath28 until encountering the boundary @xmath2 .",
    "on the domain boundary @xmath29 , the searcher uses a separate rule for turning . for simplicity",
    ", we denote the searcher s position on the boundary according to its angle @xmath4 on the circular domain boundary @xmath30 .",
    "it then selects a new heading direction by drawing a random variable @xmath3 for the new boundary location it will move towards ( fig .",
    "[ modelscheme]*a * ) .",
    "this random variable is chosen from the probability density function @xmath5 , an even symmetric function of the argument @xmath31 .",
    "in particular , this is a probability density function over @xmath3 , so that @xmath32 for all @xmath33 .",
    "a search ends once the target has been hit , which occurs when the searcher encounters the absorbing target boundary @xmath34 ( fig .",
    "[ modelscheme]*b * ) .",
    "an alternate description of searcher motion is studied in section [ spiralsect ] , where we consider spiral paths of motion into and out of the domain center .",
    "the mfpt for both spiral path and random ballistic path strategies are compared therein .",
    "furthermore , we will consider extensions of this single domain model in section [ multidomain ] , when we incorporate movements of the searcher between multiple subdomains . in this case ,",
    "movement on the subdomain interiors will proceed as before , but encounters with the boundary can lead to switches between subdomains .",
    "we begin by analyzing the model in the case of no turning on the domain interior ( @xmath35 ) .",
    "the searcher proceeds from one point on the domain boundary to another along straight trajectories , unless it encounters the target domain @xmath7 . for a trajectory from the domain location @xmath4 to @xmath3 ,",
    "there is probability @xmath36 of passing through the target domain @xmath7 .",
    "since a collision with the target always results in absorption , this means @xmath37 is an indicator function , equaling 1 if the trajectory from @xmath4 to @xmath3 passes through the target and 0 otherwise .",
    "marginalizing over all possible paths , we can compute average probability of passing through @xmath7 , which we define as @xmath38 . to compute @xmath38",
    ", we integrate : @xmath39 the boundary conditions of the velocity - jump process on @xmath40 imply that @xmath36 is weighted by the probability of sampling @xmath3 given @xmath4 , defined to be @xmath41 .",
    "the domain is radially symmetric , and we assume a uniformly random initial conditions @xmath42 along the boundary @xmath2 .",
    "subsequent angles @xmath4 could be non - uniformly distributed on the boundary , but this does not substantially impact our approximations .    typically , the limiting quantity in search problems is the average search time  @xcite .",
    "we start by computing the average time of a single path from one boundary location to another . without loss of generality",
    ", we rescale our domain and target sizes ( @xmath10 and @xmath12 ) so the constant search velocity is @xmath43 in new coordinates .",
    "thus , we need only find the average distance of a path by calculating the chord length of a circle of radius @xmath10 from angle @xmath4 to @xmath3 , given by @xmath44 . assuming uniform distributions of angle locations @xmath4",
    ", the average chord length of each path will be @xmath45 where we have applied the change of variables @xmath46 .",
    "we can utilize eqs .",
    "( [ ava ] ) and ( [ avch ] ) to help us determine the average time it will take until the searcher reaches the target domain @xmath7 .",
    "our approximation assumes the target absorption probability @xmath47 is fixed across all paths . in the limit of small target sizes",
    "@xmath48 , the distribution of boundary locations over @xmath4 will remain near uniform after the searcher makes a single path between trajectories . with this in mind",
    ", we can compute the average time to hit the target by treating absorption into the target as a markov process .",
    "let @xmath49 denote the probability of hitting the escape domain @xmath7 on the @xmath50 path across the domain , and let @xmath51 denote the average distance of all paths to the target that end on the @xmath50 pass .",
    "we can compute the mfpt for the absorption of the searcher into the target using the weighted sum : @xmath52 note , the time to find the target increases as the likelihood of finding it in a single path @xmath47 decreases .",
    "furthermore , increasing the size of the domain @xmath10 increases the time to find the target via @xmath53 and @xmath38 .",
    "we can gain further insight by studying the effects of target size on the probability @xmath47 .    , where @xmath54 .",
    "( b ) mfpts for different forms of the probability density @xmath5 .",
    "results for uniform densities @xmath55 $ ] are shown as well as for the nonconstant function @xmath56 .",
    "the domain radius is @xmath57 .",
    "each circle is the mfpt from @xmath58 numerical simulations of the process in section [ model ] with @xmath59.,title=\"fig:\",width=188 ] , where @xmath54 .",
    "( b ) mfpts for different forms of the probability density @xmath5 .",
    "results for uniform densities @xmath55 $ ] are shown as well as for the nonconstant function @xmath56 .",
    "the domain radius is @xmath57 .",
    "each circle is the mfpt from @xmath58 numerical simulations of the process in section [ model ] with @xmath59.,title=\"fig:\",width=302 ]    by fixing the target in the center of the domain , the probability of hitting the target is the same for any boundary location , so @xmath37 only depends on the difference @xmath31 between the angles of a path s endpoints . in particular",
    ", the searcher is absorbed in a region of arc length @xmath60 , so @xmath61 if @xmath62 and @xmath63 otherwise ( fig . [ centertarget]a ) .",
    "we also assume a new search direction is chosen uniformly from a symmetric region oriented toward the center , @xmath64 if @xmath65 and @xmath66 otherwise .",
    "this simplifies the average hitting probability @xmath47 as follows @xmath67 for @xmath68 .",
    "since the target is small ( @xmath48 ) , we expect @xmath69 .",
    "the arclength @xmath60 can be found using trigonometry to be @xmath70 , so that @xmath71 .    furthermore , the average chord length @xmath53 is computed by marginalizing against the probability density function of paths from @xmath4 to @xmath3 , yielding @xmath72 fixing the target in the center of the domain @xmath9 and choosing a uniform distribution for the density @xmath5 produces an approximate mfpt as @xmath73 which matches well with numerical simulations of the velocity - jump process ( fig .",
    "[ centertarget]b ) . for a smaller search arclength @xmath74 ,",
    "the mfpt decreases , since there is a higher probability of heading toward the target @xmath7 from the boundary @xmath2 .",
    "we also demonstrate that eq .",
    "( [ mfptcenter ] ) is monotone in each parameter by taking partial derivatives .",
    "first , we show the mfpt decreases with the target radius @xmath12 . differentiating eq .",
    "( [ mfptcenter ] ) with respect to @xmath12 yields @xmath75 ^ 2 } < 0,\\end{aligned}\\ ] ] so larger targets are found faster .",
    "second , note that @xmath76}{\\gamma^2 } , \\end{aligned}\\ ] ] so when @xmath77 , we have @xmath78 and the mfpt decreases as @xmath74 is decreased from @xmath79 ( fig . [ centertarget]b ) . finally , we can show that the mfpt increases as the domain radius @xmath10",
    "is increased by differentiating @xmath80 ^ 2 } \\right ]   + 1 , \\end{aligned}\\ ] ] so if we plug in @xmath77 , we find @xmath81 ^ 2 } \\right ] >   1 - \\frac{4}{\\pi } + \\frac{2}{\\sin^{-1 } ( r / r ) } >   1,\\end{aligned}\\ ] ] since @xmath82 , so @xmath83 .    now , considering the searcher may have an increased likelihood of searching toward the domain interior , we examine @xmath84 , which peaks at @xmath85 , the center of the domain .",
    "the average probability of hitting the target is then @xmath86 = \\frac{r}{r}.\\end{aligned}\\ ] ] furthermore , the average chord length is @xmath87 applying eq .",
    "( [ binapp ] ) for the mfpt , we have @xmath88 as before , eq .",
    "( [ centersine ] ) is monotone decreasing in @xmath12 since @xmath89 , whereas it is increasing in @xmath10 since @xmath90 and @xmath82 ( fig . [",
    "centertarget]b ) .",
    "thus , our approximation using the expansion in eq .",
    "( [ binapp ] ) shows us explicitly that the mfpt decreases with target size @xmath12 and increases with domain size @xmath10 .",
    "in addition , we note the mfpt approximations can be further truncated to the asymptotic form @xmath91 ( with constant @xmath92 ) in the @xmath48 limit , which still provides the appropriate form observed in fig .",
    "[ centertarget]b .     of the target .",
    "( a ) off - center targets are shifted to location @xmath93 .",
    "the target angle @xmath94 is smaller on the far side of the boundary than on the close side @xmath95 .",
    "( b ) mfpt as a function of the eccentricity @xmath96 comparing theory ( solid line ) using hitting probability @xmath97 given by eq .",
    "( [ targaoff ] ) to numerical simulations ( circles ) .",
    "the angle of search from the boundary is drawn from the density function @xmath98 $ ] .",
    ", title=\"fig:\",width=188 ]   of the target .",
    "( a ) off - center targets are shifted to location @xmath93 .",
    "the target angle @xmath94 is smaller on the far side of the boundary than on the close side @xmath95 .",
    "( b ) mfpt as a function of the eccentricity @xmath96 comparing theory ( solid line ) using hitting probability @xmath97 given by eq .",
    "( [ targaoff ] ) to numerical simulations ( circles ) .",
    "the angle of search from the boundary is drawn from the density function @xmath98 $ ] .",
    ", title=\"fig:\",width=302 ]      we now study the time to hit off - center targets ( @xmath99 ) .",
    "interestingly , we find the mfpt decreases as the target nears the domain boundary @xmath2 ( as @xmath96 increases ) . in this case , the discrepancy between the largest and smallest angle from the boundary containing the target grows with @xmath96 ( fig .",
    "[ offcenter]a ) . nevertheless , we can marginalize and frame the target finding problem in terms of a markov chain with constant probability of absorption , across realizations .",
    "however , due to the asymmetry introduced by placing the target away from the center , the indicator function @xmath37 now depends on both variables independently .",
    "the angle containing the target can be derived by applying the law of sines to the triangle with : ( a ) one leg being the radius @xmath10 from the center to the boundary angle @xmath4 ; ( b ) another leg being the segment from the domain center to the target center , having length @xmath100 ; and ( c ) the segment connecting ( a ) and ( b ) . the angle @xmath101 of the triangle emanating from the boundary is then given by @xmath102 where @xmath103 is the length of the leg described by ( c ) . solving the system eq .",
    "( [ offlawsines ] ) , we find that @xmath104 and @xmath105 . as before , we use the leg length @xmath103 to compute the target angle @xmath106 from the angle @xmath4 on the boundary . for boundary search direction distribution",
    "@xmath107 $ ] , the average probability of finding the target with each path is approximated @xmath108 d \\theta ' d \\theta \\nonumber \\\\ & = \\frac{1 } { \\pi } \\int_0^{2 \\pi } \\sin^{-1 } \\left [ \\frac{r}{r \\sqrt{1 - 2 \\epsilon \\cos \\theta + \\epsilon^2 } } \\right ] d \\theta .",
    "\\label{targaoff}\\end{aligned}\\ ] ] eq .",
    "( [ targaoff ] ) converges to @xmath109 in the limit @xmath110 . in the limit of small targets @xmath48 , the average chord length is approximately same as in the center target case , eq .",
    "( [ chordgamma ] ) .",
    "thus , we can use @xmath111 . plugging these eqs .",
    "( [ chordgamma ] ) and ( [ targaoff ] ) into the asymptotic approximation eq .",
    "( [ binapp ] ) yields our asymptotic approximation ( fig .",
    "[ offcenter]b ) .    for small @xmath96 , we can show the hitting probability @xmath112 increases with @xmath96 , implying the mfpt decrease with @xmath113 ( fig .",
    "[ offcenter]b ) .",
    "note , @xmath114 is an even function , due to the circular symmetry of @xmath9 .",
    "therefore , the @xmath115 term is the first term in a regular perturbation beyond @xmath116 . taking the second derivative at @xmath117 yields @xmath118}{\\displaystyle 2 \\left ( 1 - \\frac{r^2}{r^2 } \\right)^{3/2 } }",
    "d \\theta = \\frac{r}{\\displaystyle 2 \\pi r \\left ( 1 - \\frac{r^2}{r^2 } \\right)^{3/2 } } . \\label{abareps}\\end{aligned}\\ ] ] since @xmath119 , @xmath120 , so the probability @xmath114 will increase with @xmath96 when @xmath121 . furthermore , we can write the asymptotic approximation @xmath122 in sum , we have shown that a binomial expansion in hitting probabilities per path provide a reasonably accurate approximation of the mfpt for a purely ballistic search process . in the next section ,",
    "we extend these results to account for the case of a searcher that makes turns on the interior of the domain @xmath9 .",
    "we now explore how turning on the interior of the domain @xmath9 affects the average time to find the target .",
    "thus far , we have only considered searchers that turn on the boundary @xmath2 .",
    "interior turning is now incorporated according to a velocity - jump process . for infinitesimal timesteps",
    "@xmath123 , the probability of a velocity - direction change between @xmath124 and @xmath125 is @xmath126 .",
    "velocity changes are sampled from a uniform distribution so that the probability of selecting a new velocity with angle @xmath127 is @xmath128 . for an unbounded domain ( @xmath23 )",
    ", this would lead to trajectories made of ballistic step - lengths @xmath129 over the distribution @xmath130 for normalized velocity @xmath131 .    for low turning probability @xmath132 ,",
    "we asymptotically approximate the hitting probability for a single path between boundary points @xmath133 .",
    "such paths are no longer necessarily comprised of a single straight segment ; paths can be made up of two or more straight segments .",
    "however , we only focus on the change in hitting probability arising due to incorporating paths made of two straight segments . to begin , note the probability of not turning ( number of turns @xmath134 ) along a segment of length @xmath135 is given @xmath136 so a searcher heading towards the target will not turn with approximate probability @xmath137 .",
    "thus , the likelihood that the searcher is absorbed into the target by following a single segment from the boundary is @xmath138 where we assume @xmath139 $ ] .",
    "next , we approximate the likelihood that the searcher is absorbed into the target by following two segments connected by a single turn . the likelihood of making at least one turn before hitting the boundary is given by subtracting the survival probability over the average chord length @xmath140 from 1 : @xmath141 note also that the likelihood of more than one turn is @xmath142 when @xmath132 , since @xmath143 where @xmath144 and @xmath145 are the maximal lengths of each segment .",
    "therefore , we approximate the probability of there being a single turn by eq .",
    "( [ oneturn ] ) .    ) .",
    "( a ) to approximate the hitting probability @xmath146 over a single path , we account for the new probability of hitting after turning @xmath147 .",
    "( b ) mfpt decreases as a function of @xmath22 , as demonstrated both by the theory ( solid curve ) in eq .",
    "( [ lambdahit ] ) and numerical simulations ( circles ) .",
    "( c ) hitting probability for a single path between boundary points increases slightly with @xmath22 according to theory eq .  ( [ lambdahit ] ) and numerical simulations .",
    "( d ) average path length also increases slightly with @xmath22 , as computed in eq .",
    "( [ lambdachord ] ) . note @xmath148$].,title=\"fig:\",width=188 ] ) .",
    "( a ) to approximate the hitting probability @xmath146 over a single path , we account for the new probability of hitting after turning @xmath147 .",
    "( b ) mfpt decreases as a function of @xmath22 , as demonstrated both by the theory ( solid curve ) in eq .",
    "( [ lambdahit ] ) and numerical simulations ( circles ) .",
    "( c ) hitting probability for a single path between boundary points increases slightly with @xmath22 according to theory eq .",
    "( [ lambdahit ] ) and numerical simulations .",
    "( d ) average path length also increases slightly with @xmath22 , as computed in eq .",
    "( [ lambdachord ] ) .",
    "note @xmath148$].,title=\"fig:\",width=226 ] + ) .",
    "( a ) to approximate the hitting probability @xmath146 over a single path , we account for the new probability of hitting after turning @xmath147 .",
    "( b ) mfpt decreases as a function of @xmath22 , as demonstrated both by the theory ( solid curve ) in eq .",
    "( [ lambdahit ] ) and numerical simulations ( circles ) .",
    "( c ) hitting probability for a single path between boundary points increases slightly with @xmath22 according to theory eq .",
    "( [ lambdahit ] ) and numerical simulations .",
    "( d ) average path length also increases slightly with @xmath22 , as computed in eq .",
    "( [ lambdachord ] ) .",
    "note @xmath148$].,title=\"fig:\",width=207 ] ) .",
    "( a ) to approximate the hitting probability @xmath146 over a single path , we account for the new probability of hitting after turning @xmath147 .",
    "( b ) mfpt decreases as a function of @xmath22 , as demonstrated both by the theory ( solid curve ) in eq .",
    "( [ lambdahit ] ) and numerical simulations ( circles ) .",
    "( c ) hitting probability for a single path between boundary points increases slightly with @xmath22 according to theory eq .",
    "( [ lambdahit ] ) and numerical simulations .",
    "( d ) average path length also increases slightly with @xmath22 , as computed in eq .",
    "( [ lambdachord ] ) .",
    "note @xmath148$].,title=\"fig:\",width=207 ]    once a single turn has been made , the probability of selecting a new direction which results in hitting the target is given by marginalizing across all possible locations of turns @xmath149 d x d \\theta \\nonumber \\\\ & + \\frac{\\lambda}{{{\\mathcal}n } \\pi } \\int_{0}^{\\alpha } \\int_0^{r - r } \\e^{- \\lambda x}\\sin^{-1 } \\left [ \\frac{r}{r \\sqrt{1 + ( x / r)^2 - 2 x \\cos ( \\theta)/ r } } \\right ] d x d \\theta \\nonumber \\\\ = & { { \\mathcal}h}(r , r ) ,   \\label{hitoneturn}\\end{aligned}\\ ] ] where @xmath54 and the total normalization is given by integrating over the probability density @xmath150 : @xmath151 .",
    "note that the angle of trajectories that will hit the target is larger for turns that occur closer to the target ( fig .",
    "[ intturning]a ) .",
    "this may account for the slight increase in hitting probability due to turning ( fig .",
    "[ intturning]c ) .",
    "therefore , the total likelihood of hitting the target along a single path between boundary points can be linearly approximated by ( a ) subtracting the probability due to turning away from the target given by eqs .",
    "( [ noturn ] ) and ( [ hitnoturn ] ) and ( b ) adding the probability due to turning towards the target as computed in eqs .",
    "( [ oneturn ] ) and ( [ hitoneturn ] ) : @xmath152 this provides a new estimate for the probability of hitting in a single path , which we plot in fig .",
    "[ intturning]c .",
    "furthermore , we can compute the average length of a single path between boundary points .",
    "this will no longer be given by the average chord length @xmath53 .",
    "rather , our approximation will average in the paths consisting of two segments .",
    "utilizing the probabilities of turning and not turning computed in eq .",
    "( [ noturn ] ) and ( [ oneturn ] ) , we can then appropriately weight the average lengths of one and two segment paths . first , note that paths with no turns will have an new length given by @xmath153 with normalization constant @xmath154 .",
    "paths with a single turn will have length specified by their initial search angle @xmath4 , first segment length @xmath129 , and new angle @xmath21 following a turn .",
    "given paths that start at @xmath155 , the turning point will be @xmath156 and the new intersection point with the boundary will be @xmath157 for small targets ( @xmath48 ) , the effect of absorptions by the target will have a small effect on the average path length , so we marginalize over all three variables @xmath4 , @xmath129 , and @xmath21 : @xmath158 d \\phi dx d \\theta \\label{avoneturn}\\end{aligned}\\ ] ] with normalization constant @xmath159 .",
    "combining eq .",
    "( [ avoneturn ] ) with the average chord length , given no turns eq .",
    "( [ avnoturn ] ) , we have the following estimate for the average path length @xmath160 shown in fig .",
    "[ intturning]d .",
    "incorporating eqs .",
    "( [ lambdahit ] ) and ( [ lambdachord ] ) into eq .",
    "( [ binapp ] ) , the formula for the mfpt , we can account for the effects of interior turning : @xmath161 the main contribution to the reduction of the mfpt is due to a slight increase in the hitting probability @xmath162 as shown in fig .",
    "[ intturning]c .",
    "however , increasing turning @xmath22 is does not significantly impact the time to find the target ( fig .",
    "[ intturning]b ) . even for larger values of @xmath22 ,",
    "the mfpt remains relatively unchanged as opposed to the case @xmath59 .",
    "both insects and mammals may utilize spiral patterned trajectories as search paths to locate a target  @xcite .",
    "this can be more efficient and even optimal , since it can reduce the time spent in previously visited patches of the environment  @xcite .",
    "however , spiral search may lead to unnecessarily long times needed to find the target if the spacing between rotations is too large or too small  @xcite .",
    "we consider search trajectories described by an archimedean spiral @xmath163 within the circular domain @xmath9 . here",
    "@xmath164 is the closest distance between points along the same radius , effectively the width of the spiral .",
    "were the radius of the target @xmath12 known to the searcher , the optimal coefficient could be chosen @xmath165 .",
    "this leads to no overlap in the environment searched while also ensuring that the target will be hit in a single search path . in cases",
    "where @xmath166 , the target is sure to be hit ( fig .",
    "[ spiralfig]a ) , but the searcher overlaps previously searched regions . if @xmath167 , the searcher may not hit the target during a single search path , since it will only hit targets with centers up to a distance @xmath12 away from its path ( fig .",
    "[ spiralfig]b ) . for uniformly randomly located targets",
    ", there will be a probability of approximately @xmath168 the target will be hit on a single uniformly randomly initiated spiral path .",
    "unwrapping the spiral search path would reveal the searcher passes over an approximately rectangular strip of width @xmath164 , but it can only spot targets whose centers are within a strip @xmath169 about its path .",
    "this approximation worsens as the domain shrinks or the target size grows .",
    ", the searcher finds the target in a single path .",
    "( b ) when the spiral width @xmath167 , the searcher may miss the target , so a new spiral path begins at @xmath170 .",
    "( c ) mfpt to find the target is non - monotonic in the spiral width @xmath164 , with a minimum at @xmath171 the diameter of the target , as given by eqs .",
    "( [ spirepstime1 ] ) and ( [ spirepstime2 ] ) .",
    "( d ) mfpt always decreases with target radius @xmath12 . with an ideal spiral width @xmath171 ,",
    "search takes less time than ballistic search , but search times can be longer than for ballistic search .",
    "the probability of starting at angle @xmath4 on the boundary is uniform over @xmath172 as is the probability of drawing a search direction from the center .",
    "domain has radius @xmath57.,title=\"fig:\",width=264 ] , the searcher finds the target in a single path .",
    "( b ) when the spiral width @xmath167 , the searcher may miss the target , so a new spiral path begins at @xmath170 .",
    "( c ) mfpt to find the target is non - monotonic in the spiral width @xmath164 , with a minimum at @xmath171 the diameter of the target , as given by eqs .",
    "( [ spirepstime1 ] ) and ( [ spirepstime2 ] ) .",
    "( d ) mfpt always decreases with target radius @xmath12 . with an ideal spiral width @xmath171",
    ", search takes less time than ballistic search , but search times can be longer than for ballistic search .",
    "the probability of starting at angle @xmath4 on the boundary is uniform over @xmath172 as is the probability of drawing a search direction from the center .",
    "domain has radius @xmath57.,title=\"fig:\",width=264 ] + , the searcher finds the target in a single path .",
    "( b ) when the spiral width @xmath167 , the searcher may miss the target , so a new spiral path begins at @xmath170 .",
    "( c ) mfpt to find the target is non - monotonic in the spiral width @xmath164 , with a minimum at @xmath171 the diameter of the target , as given by eqs .",
    "( [ spirepstime1 ] ) and ( [ spirepstime2 ] ) .",
    "( d ) mfpt always decreases with target radius @xmath12 . with an ideal spiral width @xmath171 , search takes less time than ballistic search , but search times can be longer than for ballistic search .",
    "the probability of starting at angle @xmath4 on the boundary is uniform over @xmath172 as is the probability of drawing a search direction from the center .",
    "domain has radius @xmath57.,title=\"fig:\",width=264 ] , the searcher finds the target in a single path .",
    "( b ) when the spiral width @xmath167 , the searcher may miss the target , so a new spiral path begins at @xmath170 .",
    "( c ) mfpt to find the target is non - monotonic in the spiral width @xmath164 , with a minimum at @xmath171 the diameter of the target , as given by eqs .",
    "( [ spirepstime1 ] ) and ( [ spirepstime2 ] ) .",
    "( d ) mfpt always decreases with target radius @xmath12 . with an ideal spiral width @xmath171 ,",
    "search takes less time than ballistic search , but search times can be longer than for ballistic search .",
    "the probability of starting at angle @xmath4 on the boundary is uniform over @xmath172 as is the probability of drawing a search direction from the center .",
    "domain has radius @xmath57.,title=\"fig:\",width=264 ]    any spiral search path that begins at angle @xmath173 on the interior and ends at @xmath174 on the periphery has length : @xmath175 .",
    "\\label{spirlength}\\end{aligned}\\ ] ] for instance , in the case that @xmath176 and the search path has interior end point at @xmath177 and periphery end point @xmath178 , we have @xmath179 so the circular domain can be approximately partitioned by the search path to form a rectangle of width @xmath164 and length @xmath180 .",
    "we can apply the formula in eq .",
    "( [ spirlength ] ) to approximate the mfpt to find the target .",
    "uniformly randomly choosing a location on the boundary @xmath181 , we consider a circular target of radius @xmath12 at a location @xmath182 where @xmath183 . for @xmath184 , the time to find the target can be computed as @xmath185 .",
    "note , the mfpt will decrease as @xmath164 is increased to @xmath169 as less time is wasted examining previously explored regions . on the other hand ,",
    "the searcher may choose a spiral width @xmath186 , so @xmath168 approximates the probability of hitting the target in a single spiral .",
    "the mfpt to find the target is calculated by computing @xmath187 the likelihood of hitting the target after @xmath188 full spirals and @xmath189 the associated path length .",
    "the searcher starts at the periphery ( at angle @xmath190 ) and the target center is at angular location @xmath191 , so after @xmath188 full spiral paths the probability of locating the target is @xmath192 with path - length : @xmath193 assembling these terms into an infinite sum , the average search path length is @xmath194 assuming the target is always fixed at location @xmath195 .",
    "so far , we have assumed the target location @xmath182 to be fixed across realizations .",
    "however , targets may tend to appear randomly at any location in the domain @xmath9 . using rotation symmetric",
    ", we project target locations to to @xmath182 such that @xmath196 $ ] . marginalizing in the case @xmath197 we find @xmath185 and : @xmath198 where @xmath199 . \\label{fspiral}\\end{aligned}\\ ] ] when @xmath167 , we average eq .",
    "( [ largebtime ] ) over the uniform density of @xmath200 $ ] so @xmath201 } { 2 - \\alpha } + \\frac{\\displaystyle ( 1- \\alpha ) l \\left ( 0 ,   \\frac{2 \\pi r}{b } \\right)}{\\alpha}.   \\label{spirepstime2}\\end{aligned}\\ ] ] we compare the theoretical approximations to the results from numerical simulations in fig.[spiralfig]c , d . as a function of @xmath164 , the mfpt given by eqs .",
    "( [ spirepstime1 ] ) and ( [ spirepstime2 ] ) are non - monotonic with a minimum at @xmath171 ( fig .",
    "[ spiralfig]c ) .",
    "thus far , we have focused on search problems in a single bounded domain , but often organisms forage or search for shelter in patchy domains without searching between patches  @xcite .",
    "if patches are close together , an organism may frequently move between them to maximize search coverage of the environment .",
    "however , if patches are further apart , the organism may dwell in single patches for longer before moving on to search elsewhere . in light of this , we extend our analysis to the case of multiple disconnected subdomains @xmath202 ( @xmath203 ) , where there is a mean travel time @xmath0 between subdomains .",
    "there is only one target , located in the center of single subdomain @xmath204 such that @xmath205 , so searching in non - target subdomains ( @xmath202 , @xmath206 ) will not yield a target hit .",
    "thus , we introduce another free parameter into the strategy of our searcher @xmath207 , the rate the searcher leaves its current subdomain @xmath208 ( @xmath209 ) .",
    "the searcher may only depart at subdomain boundaries @xmath210 , and we assume it enters one of the other subdomains with equal probability @xmath211 ( fig .",
    "[ switchdiagram ] ) . in our analysis",
    ", we aim to identify the optimal strategy for searching the disconnected domain for the single target , especially as it relates to the domain - switching rate @xmath207 .",
    "disconnected subdomains with a single target in subdomain @xmath212",
    ". the total rate of transition out of each subdomain is @xmath207 , and there is an equal likelihood of transitioning to one of the other two subdomains .",
    "the searcher can only locate the target when it is in subdomain @xmath212 . transitions between subdomains take time @xmath213 on average.,width=377 ]    we now compute the mfpt to find the target of radius @xmath12 in a multiple subdomain environment @xmath214 where each subdomain is a circle of identical radius @xmath10 . assuming the searcher chooses a uniformly distributed random search angle , the likelihood of hitting the target along a single ballistic path , when inside the subdomain @xmath204 is @xmath215 . if the searcher is not in the subdomain with the target , the likelihood of hitting the target is zero .",
    "the probability of transitioning out of the target subdomain @xmath204 before hitting the target @xmath216 ( @xmath217 : probability of hitting target ) is then @xmath218 once the searcher leaves the target subdomain , it may transition between several non - target subdomains before returning .",
    "note the probability of transitioning from a non - target subdomain to another non - target subdomain is @xmath219 .",
    "thus , the average number of non - target subdomains visited before returning to @xmath204 is @xmath220 to determine the average amount of time spent searching , we need to compute the average time spent searching per visit to the target subdomain when finding the target @xmath221 and not finding the target @xmath222 furthermore , the average amount of time spent in a single non - target subdomain before departing is @xmath223 so along with eq .",
    "( [ numbnontar ] ) , the average time between trips to the target subdomain is @xmath224 we pair these times along with the probability of hitting the target on the @xmath188th visit to the target domain . for the time being ,",
    "we focus on the case where @xmath225 , so in the case where the searcher begins in the target subdomain , the time to find the target is @xmath226 = \\frac{1 - \\zeta}{\\zeta } \\left [ { { \\mathcal}t}_{na } + { { \\mathcal}t}_{tl } \\right ] + { { \\mathcal}t}_{tf } \\\\ & = \\frac{\\beta(1- \\bar{a})}{\\bar{a } } \\left [   \\frac{(n-1 ) \\overline{{\\rm ch}}}{\\beta } + \\frac{\\overline{{\\rm ch}}}{\\bar{a } + \\beta ( 1- \\bar{a } ) } \\right ] + \\frac{\\overline{{\\rm ch } } ( 1- \\bar{a } ) ( 1- \\beta)}{\\bar{a } + \\beta ( 1 - \\bar{a } ) } + r - r \\\\ & = n \\overline{{\\rm ch } } \\left ( \\frac{1}{\\bar{a } } -1 \\right )   + r - r.\\end{aligned}\\ ] ] when the searcher begins in a non - target subdomain , the time to find the target is @xmath227 = \\frac{1 - \\zeta}{\\zeta } \\left [ { { \\mathcal}t}_{na } + { { \\mathcal}t}_{tl } \\right ] +   { { \\mathcal}t}_{na } + { { \\mathcal}t}_{tf } \\\\ & = \\frac{\\beta(1- \\bar{a})}{\\bar{a } } \\left [   \\frac{(n-1 ) \\overline{{\\rm ch}}}{\\beta } + \\frac{\\overline{{\\rm ch}}}{\\bar{a } + \\beta ( 1- \\bar{a } ) } \\right ] +   \\frac{(n-1 ) \\overline{{\\rm ch}}}{\\beta } +   \\frac{\\overline{{\\rm ch } } ( 1- \\bar{a } ) ( 1- \\beta)}{\\bar{a } + \\beta ( 1 - \\bar{a } ) } + r - r    \\\\ & = n \\overline{{\\rm ch } } \\left ( \\frac{1}{\\bar{a } } -1 \\right ) +   \\frac{(n-1 ) \\overline{{\\rm ch}}}{\\beta }    + r - r.\\end{aligned}\\ ] ] if initial conditions are uniformly distributed across subdomains , the probability of starting in the target subdomain is @xmath228 , so the generalized mfpt is @xmath229 + r - r .   \\label{mfptnotransit}\\end{aligned}\\ ] ] in the case of instantaneous transits between subdomains @xmath230 , the best strategy is to transition at every boundary encounter , @xmath231 , allowing rapid coverage of the domain .",
    "this is due to the fact that the searcher has no knowledge of the location of target until it has been located , and transitions proceed randomly between subdomains .    .",
    "( a ) in a dual subdomain ( @xmath232 ) environment , the mfpt is non - monotonic in @xmath207 , obtaining a minimum at the value given by eq .",
    "( [ betmin ] ) .",
    "numerical simulations ( circles ) match well with the theory ( solid line ) given by eq .",
    "( [ fullmfptmulti ] ) . as the average transit time @xmath0",
    "is increased , the optimal transition rate @xmath233 decreases .",
    "@xmath0 was distributed according to a uniform distribution of length 4 , a standard normal distribution centered at 4 , and an exponential distribution translated 4 time units with scaling parameter 3 , giving mean transit times @xmath234 respectively .",
    "( b ) as the number of domains @xmath235 is increased , so does the mfpt .",
    "however , the optimal transition rate @xmath233 remains roughly the same .",
    "we chose target radius is @xmath236 and the search direction at the boundary is @xmath98 $ ] .",
    "the mean transit time @xmath0 was distributed normally with mean 4 and variance 1 for all domain curves.,title=\"fig:\",width=245 ] .",
    "( a ) in a dual subdomain ( @xmath232 ) environment , the mfpt is non - monotonic in @xmath207 , obtaining a minimum at the value given by eq .",
    "( [ betmin ] ) .",
    "numerical simulations ( circles ) match well with the theory ( solid line ) given by eq .",
    "( [ fullmfptmulti ] ) . as the average transit time @xmath0",
    "is increased , the optimal transition rate @xmath233 decreases .",
    "@xmath0 was distributed according to a uniform distribution of length 4 , a standard normal distribution centered at 4 , and an exponential distribution translated 4 time units with scaling parameter 3 , giving mean transit times @xmath234 respectively .",
    "( b ) as the number of domains @xmath235 is increased , so does the mfpt .",
    "however , the optimal transition rate @xmath233 remains roughly the same .",
    "we chose target radius is @xmath236 and the search direction at the boundary is @xmath98 $ ] .",
    "the mean transit time @xmath0 was distributed normally with mean 4 and variance 1 for all domain curves.,title=\"fig:\",width=245 ]    now , we introduce random transit times @xmath237 given by a rectified gaussian distribution @xmath238 , capturing the variability possible in organisms time to move from patch to patch .",
    "considering nonzero transit times @xmath239 and how this augments the mfpt eq .",
    "( [ mfptnotransit ] ) , we note that when the searcher begins in the target subdomain the additional time due to transit will be @xmath240 = \\beta n \\langle t \\rangle \\left ( \\frac{1}{\\bar{a } } - 1 \\right),\\end{aligned}\\ ] ] whereas when it begins in a non - target subdomain , the additional transit time is @xmath241 =   \\beta n \\langle t \\rangle \\left ( \\frac{1}{\\bar{a } } - 1 \\right ) + ( n-1 ) \\langle t \\rangle,\\end{aligned}\\ ] ] so the updated mfpt is @xmath242 + r - r .",
    "\\label{fullmfptmulti}\\end{aligned}\\ ] ] to identify the optimal switching rate @xmath243 that minimizes the mfpt @xmath244 , we differentiate @xmath245 and note @xmath246 for @xmath247 .",
    "thus , any critical points occurring when @xmath247 are minima . to identify the minimum , we set @xmath248 and solve for @xmath249 thus , the optimal switching rate @xmath233 is inversely proportional to @xmath250 , so the switching rate should decrease as the transit time increases ( fig . [ multimfpt]a ) .",
    "this allows for a more thorough search of a single subdomain before transitioning .",
    "interestingly , eq .  ( [ betmin ] ) is roughly constant in the variable @xmath235 as it is increased ( fig .",
    "[ multimfpt]b ) .",
    "thus , even for a very large number of domains @xmath251 , the parameters that determine the best switching rate are the chord length @xmath53 , probability of hitting the target @xmath38 , and the transition time @xmath0 .",
    "we have studied a velocity - jump process model of persistent search in bounded domains .",
    "initially , we considered a searcher that only turned on the domain boundary .",
    "paths of the searcher are partitioned into segments that link points on the boundary . to derive the average mfpt to find the target , we approximated the average probability of hitting the target in a single segment @xmath38 . pairing this with our approximation of an average segment - length @xmath53",
    ", we then marginalized over all possible search path lengths .",
    "importantly , we modeled the search process as memoryless , so each segment was assumed to have been drawn from the same distribution . applying this to single domains",
    ", we found the time to find the target decreases for targets closer to the boundary .",
    "when searchers had a small probability of turning on the interior of the domain , the time to find the target decreases slightly , due to an increase in the hitting probability of a single segment .",
    "lastly , in domains comprised of multiple disconnected subdomains , a key parameter in determining the optimal search strategy is the time it takes the searcher to move between subdomains . ultimately , we found the searcher should move between domains less often when subdomain transitions take longer .",
    "our study provides an idealized model of an organism s search for a target in a confined domain .",
    "this model could apply to animals foraging in a patchy environment  @xcite or looking for shelter in controlled experiments  @xcite as well as their natural habitat  @xcite .",
    "furthermore , the velocity - jump process can produce long spatial correlations  @xcite , similar to those often observed in statistical analyses of organismal motion  @xcite .",
    "our analysis revealed that low - probability ( @xmath132 ) turning on the interior of a bounded domain can lead to a decrease in the time to find the target .",
    "it would be interesting to develop theory for analyzing the case in which there is a high probability of turning ( @xmath252 ) . in this limit",
    ", the velocity - jump process can be approximated by a diffusion process  @xcite , so it may be possible to perturb around this limit to approximate the effects of lengthening the spatial correlations in random walk segments .",
    "theory for diffusion to a small target in planar domains is well understood , so we could leverage some of these previous results  @xcite .    also , the theory we developed for the case of multiple disconnected subdomains could be extended to other search processes .",
    "for instance , intermittent search processes with non - reactive and reactive phases are a better model of foraging processes in some situations  @xcite . in this case , we could still separate the search process into time spent in non - target and target domains .",
    "the main difference would be that the likelihood of hitting the target within the target domain be computed in the case where the searcher is intermittently reactive .",
    "similar extensions could be applied to diffusive search .",
    "time spent in each subdomain would then be characterized by finding the mean time for the searcher to complete a random walk that starts and ends at the boundary .",
    "this work was supported by nsf grants ( dms-1517629 and dms-1311755 ) .",
    "10 url # 1#1urlprefix[2][]#2 charnov e  l 1976 _ theoretical population biology _ * 9 * 129136"
  ],
  "abstract_text": [
    "<S> we analyze velocity - jump process models of persistent search for a single target on a bounded domain . </S>",
    "<S> the searcher proceeds along ballistic trajectories and is absorbed upon collision with the target boundary . </S>",
    "<S> when reaching the domain boundary , the searcher chooses a random direction for its new trajectory . for circular domains and targets , we can approximate the mean first passage time ( mfpt ) using a markov chain approximation of the search process . </S>",
    "<S> our analysis and numerical simulations reveal that the time to find the target decreases for targets closer to the domain boundary . </S>",
    "<S> when there is a small probability of direction - switching within the domain , we find the time to find the target decreases slightly with the turning probability . </S>",
    "<S> we also extend our exit time analysis to the case of partitioned domains , where there is a single target within one of multiple disjoint subdomains . </S>",
    "<S> given an average time of transition between domains @xmath0 , we find that the optimal rate of transition that minimizes the time to find the target obeys @xmath1 .    date submitted    _ keywords _ : mean first passage time , persistent search , velocity - jump process </S>"
  ]
}
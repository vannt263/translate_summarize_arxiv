{
  "article_text": [
    "a real or complex matrix @xmath0 is called _ skew - symmetric _ ( or _ anti - symmetric _ ) , if @xmath1 , where @xmath2 denotes the transpose .",
    "the determinant @xmath3 of such a skew - symmetric matrix is the square of a polynomial in the matrix entries , the _ pfaffian _",
    "@xmath4 : @xmath5 in other words , the pfaffian of a skew - symmetric matrix is a unique choice for the sign of the root of the determinant :    @xmath6    pfaffians arise in various fields of physics , such as in the definition of topological charges @xcite , electronic structure quantum monte carlo @xcite , the two - dimensional ising spin glass @xcite , or in the definition of a trial wave function for the @xmath7 fractional quantum hall state @xcite .",
    "it also arises naturally from gaussian grassmann integration , and as such finds applications for example in quantum chaos @xcite or lattice quantum field theory @xcite .",
    "the pfaffian for a @xmath8 skew - symmetric matrix is defined as @xmath9 where @xmath10 is the group of permutations of sets with @xmath11 elements .",
    "the pfaffian of an odd - dimensional matrix is defined to be zero , as in this case also @xmath12 ( @xmath13 ) .",
    "while eq .   can be used to compute the pfaffian directly for small matrices , its computational cost @xmath14 is prohibitively expensive for larger matrices .",
    "analogous to the numeric computation of the determinant , a promising strategy is thus to find a transformation of the original matrix into a form that allows an easier evaluation of the pfaffian .",
    "particularly useful in this context is the recursive definition of the pfaffian , @xmath15 where @xmath16 is the matrix a without the rows and columns 1 and @xmath17 .",
    "( note that the pfaffian of a @xmath18 matrix is defined as 1 ) .",
    "further , for an arbitrary @xmath8 real or complex matrix @xmath19 , @xmath20    from the recursive definition of the pfaffian it is obvious that the pfaffian of a @xmath8 skew - symmetric tridiagonal matrix @xmath21 is given as @xmath22 furthermore , a closer inspection of eq .   shows that also a matrix that has only a partial tridiagonal form with @xmath23 only for odd @xmath17 and @xmath24 ( i.e. a matrix that would be tridiagonal , if every _ even _ row and column would be removed ) , @xmath25 allows for an easy evaluation of the pfaffian , as @xmath26 .",
    "our goal is therefore to find for a skew - symmetric matrix @xmath0 a suitable transformation @xmath19 such that @xmath27 with @xmath28 tridiagonal or tridiagonal in every odd row and column .",
    "it has been known for a while that the pfaffian of a skew - symmetric @xmath29 matrix @xmath0 can be computed in @xmath30 time , using a skew - symmetric form of gaussian elimination ( adding multiples of rows and columns in a symmetric fashion ) @xcite .",
    "such an skew - symmetric gaussian elimination computes a factorization of the matrix in the form with @xmath31 where @xmath32 is a permutation matrix and @xmath33 a unit lower triangular matrix . for brevity",
    ", we will refer to this type of decomposition as @xmath34 decomposition .",
    "gaussian elimination requires pivoting for numerical stability , hence the need for the permutation @xmath32 .",
    "below , we will formulate this approach in a way that allows for an efficient computer implementation .",
    "another gaussian based elimination technique is the @xmath35 decomposition where @xmath0 is reduced to @xmath36 , a matrix with only skew - symmetric @xmath37-blocks on the diagonal @xcite .",
    "this approach has also been suggested for computing the pfaffian recently @xcite .",
    "we will not persue this approach here , but show that the @xmath34 decomposition allows for computing the pfaffian in the same number of operations and can be formulated more easily to use level-3 matrix operations .    as an alternative to the gaussian elimination based techniques",
    ", we also develop algorithms using unitary ( orthogonal in the real case ) transformations that are also known to allow for a stable numerical computation in @xmath30 for dense matrices .",
    "this approach doe not require pivoting for numerical stability and can more easily make use of the bandedness of a matrix .",
    "we will describe how to compute a unitary matrix @xmath38 such in order to tridiagonalize ( either fully or partially ) @xmath0 , @xmath39 or equivalently @xmath40 , where @xmath41 denotes the hermitian conjugate and @xmath42 complex conjugation .",
    "note that such a _ unitary congruence transformation _ is for the complex case quite different from the usual unitary similarity transformations usually encounters , which are of the form @xmath43 . in the real case",
    ", the transformation reduces to the usual orthogonal similarity transformation .",
    "apart from computing allowing for an efficient computation of the pfaffian , the tridiagonal form of a skew - symmetric matrix under unitary congruence is also relevant for computing the canonical form of this matrix .",
    "a skew - symmetric matrix has a particularly simple canonical form under a unitary congruence transformation . for every skew - symmetric matrix @xmath0 there exists a unitary matrix @xmath44 such that @xcite @xmath45 where @xmath46 , @xmath47 denotes the direct sum , and @xmath48 this canonical form has been used in the physics context for example to prove the kramer s degeneracy of transmission eigenvalues @xcite and the degeneracy of andreev reflection eigenvalues @xcite .",
    "the problem of computing the canonical form of an even - dimensional skew - symmetric tridiagonal matrix has been discussed in @xcite , the reduction of the problem with on odd - dimensional matrix to the even - dimensional case in @xcite . for a @xmath8 skew - symmetric tridiagonal matrix as defined eq .",
    ", the values of @xmath49 , @xmath50 are given by the @xmath51 non - zero singular values of the bidiagonal matrix @xmath52 for completeness , we give details and a self - contained derivation in appendix [ canonical ] .    the canonical form of a skew - symmetric matrix under unitary congruence is also connected to certain eigenvalue problems : in the real case ,",
    "the eigenvalues of @xmath0 are given by @xmath53 .",
    "in the complex case , the matrix @xmath54 has doubly degenerate eigenvalues @xmath55 .",
    "both the computation of the pfaffian and of the canonical form are ultimately connected to the problem of tridiagonalizing a skew - symmetric matrix .",
    "here we give an overview of existing solutions ( with implementations ) that could be used to solve parts of the problem , and discuss the need for a new comprehensive implementation .    for real skew - symmetric matrices , the unitary congruence transformation reduces to an ordinary orthogonal similarity transformation and hence established decompositions can be used @xcite : the hessenberg decomposition of a skew - symmetric matrix reduces to tridiagonal form , and the real schur decomposition to the canonical form ( implemented , for example in lapack @xcite ) . however , none of these decompositions make use of the structure of the problem which would be desirable for precision and speed , nor can they be used for complex skew - symmetric matrices .    ward and gray have developed and implemented algorithms to compute the tridiagonal form and the eigenvalues ( and as an intermediate step , the canonical form ) of a real dense , skew - symmetric matrix , making use of the structure of the problem @xcite .",
    "a complex version is however not available .",
    "the accompanying matlab code @xcite to @xcite contains a skew - symmetric @xmath35 decomposition that can be used to compute pfaffians , but according to the authors is not designed for efficiency .",
    "very recently , gonzlez - ballestero , robledo and bertsch have developed a library for the numerical computation of the pfaffian of a dense skew - symmetric matrix @xcite , but do not give access to the transformation matrix ( e.g. needed for computing the canonical form ) .",
    "they present algorithms based on a @xmath35 decomposition ( called aitken block diagonalization in @xcite ) and on householder tridiagonalization .",
    "however , their approach does not make use of the full symmetry of the problem .",
    "none of the existing approaches ( with the exception of lapack that does not exploit the skew - symmetry of the problem ) makes use of block algorithms that are rich in level-3 operations and desirable for a more favorable memory access pattern . below",
    "we will show that such block algorithms can give rise to a considerable increase in speed .",
    "moreover , none of the above approaches makes use of the sparsity of a banded matrix , a structure that however often arises in practice .",
    "below we will also consider this case in particular .",
    "the goal of this work is thus to develop and implement algorithms for tridiagonalizing a real or complex skew - symmetric matrix , making use of the skew - symmetry and possibly the bandedness of the matrix .",
    "the remainder of the paper is organized as follows . in sec .",
    "[ tridi ] we discuss algorithms to tridiagonalize a dense or banded skew - symmetric matrix using gauss transformations , householder reflections and givens rotations .",
    "further , in sec .  [ impl ] we discuss the details of our implementation , and present benchmarks and an exemplary application in sec .",
    "[ examples ] . in the appendix",
    ", we give a self - contained derivation on the computation of the canonical form of a tridiagonal , skew - symmetric matrix .",
    "moreover , we discuss blocked versions of our tridiagonalization algorithms for dense matrices and give technical details about the fortran implementation .",
    "summarizing the discussion above , for a given skew - symmetric @xmath56 matrix @xmath0 we seek a ( invertible ) transformation @xmath19 such that @xmath57 with @xmath28 in tridiagonal form tridiagonal ( or in partial tridiagonal for ) .",
    "below we consider first an algorithm for dense matrices based on gauss transformations requiring pivoting .",
    "then we focus on algorithms bases on unitary transformations where we consider both dense and banded matrices .",
    "the discussion is presented for the case of complex matrices , but it carries over to the real case unchanged .      for symmetric or hermitian matrices there exist efficient algorithms to compute a @xmath34 or @xmath35 decomposition ( for an overview , see @xcite ) .",
    "it has been shown by bunch that those decompositions can in principle also be generalized and computed stably for skew - symmetric matrices @xcite .",
    "below we reformulate the algorithm for the @xmath34 decomposition of a symmetric matrix due to parlett and reid @xcite such that it is suitable for skew - symmetric matrices .",
    "the parlett - reid algorithm is usually not the method of choice in the symmetric case , as there are more efficient alternatives @xcite .",
    "however , as we will discuss below , the parlett - reid algorithm can be used to compute the _",
    "pfaffian _ just as effective .    a @xmath58 matrix of the form @xmath59 where @xmath60 is the @xmath58 identity matrix and @xmath61 the @xmath51-th unit vector in @xmath62 ,",
    "is called a _ gauss transformation _ if the first @xmath51 entries of @xmath63 are zero .",
    "given a vector @xmath64 and taking @xmath65 , @xmath66 can be used to eliminate the entries @xmath67 in @xmath68 , @xmath69 , provided that @xmath70 .",
    "a gauss transformation can thus be used to zero the entries in a column or row of @xmath0 below a chosen point @xmath51 . in order to avoid divisions by a small number or zero , a permutation @xmath71 interchanging entry @xmath51 with another nonzero , typically the largest entry in @xmath67 is performed .",
    "the numerical stability of this pivoting strategy is discussed in @xcite .",
    "hence , a series of gauss transformations and permutations can be used to tridiagonalize a skew - symmetric matrix @xmath0 . to demonstrate the mechanism ,",
    "assume that after applying @xmath72 gauss transformations and permutations , the matrix @xmath73 is already in tridiagonal form in the first @xmath72 columns and rows and hence has the form @xmath74 with @xmath75 , @xmath76 , @xmath77 , @xmath78 , and @xmath79 , @xmath80 ( transformations of the form @xmath81 maintain skew - symmetry ) .",
    "now choose a permutation matrix @xmath82 such that the maximal entry in @xmath83 is permuted to the top , i.e. @xmath84 where @xmath85 .",
    "if the maximal element at this step is zero , @xmath86 and @xmath87 is already tridiagonal in the first @xmath51 columns and we set @xmath88 .",
    "otherwise , we take @xmath89 and @xmath90 with @xmath91 with @xmath92 .",
    "then we obtain @xmath93 then @xmath94 and @xmath95 is tridiagonal in its first @xmath51 rows and columns . defining @xmath96",
    "we find @xmath97 the cross - term @xmath98 vanishes due to the skew - symmetry of @xmath99 .",
    "note that in this skew - symmetric outer product update , the matrix @xmath100 remains actually unchanged in the first column and row due to the structure of @xmath101 and @xmath102 .",
    "the outer product update is dominating the computational cost of each step and can be computed in @xmath103 flops , if the symmetry is fully accounted for .",
    "[ ltl_and_householder ] shows the structure of a tridiagonalization step schematically for a particular example .",
    "@xmath104    after @xmath105 steps , the decomposition can be written as @xmath106 with permutation @xmath107 , skew - symmetric tridiagonal @xmath108 , and lower unit triangular matrix @xmath109 as in the symmetric parlett - reid algorithm , the first column of @xmath33 is @xmath110 , and the @xmath51-th column below the diagonal a permuted version of @xmath63 .",
    "the computation of the updated matrix , eq .  , is a level-2 matrix operation .",
    "it is possible to regroup these updates in a way that allows to operate with level-3 matrix operations that have a more favorable memory access pattern .",
    "the details of this block version of the parlett - reid algorithm are given in appendix [ blockhouse ] .",
    "the full skew - symmetric @xmath34 decomposition can be computed in @xmath111 flops .",
    "it is however readily generalized to compute only a partial tridiagonal form as in eq .   by skipping every other row and column elimination .",
    "this partial @xmath112 decomposition can thus be computed in @xmath113 flops . since @xmath114 and @xmath115 can be computed in @xmath116 steps , computing the pfaffian of a skew - symmetric matrix with the parlett - reid algorithm",
    "thus requires a total of @xmath113 flops .",
    "this is a factor of 10 less than the unsymmetric hessenberg decomposition .    for computing a full tridiagonalization ,",
    "the parlett - reid algorithm requires twice as many flops as other approaches : aasen s algorithm @xcite computes a ( complete ) @xmath34 decomposition using a different order of operations in @xmath113 flops , as does the bunch - kaufmann algorithm @xcite for computing a ( complete ) @xmath35 decomposition .",
    "both algorithms can be generalized to the skew - symmetric case .",
    "given the fact that computing the pfaffian requires less information than a full tridiagonalization , it might seem feasible to compute the pfaffian in @xmath117 flops . however , neither aasen s algorithm ( which is based on the fact that @xmath118 is upper hessenberg and hence @xmath28 fully tridiagonal ) , nor the bunch - kaufmann algorithm ( which relies on the block - diagonal structure of @xmath36 ) are easily amended to compute a suitable partial factorization .",
    "thus , for computing the pfaffian , the parlett - reid algorithm is competitive .",
    "it remains an open question if it is possible to compute the pfaffian of a dense skew - symmetric matrix in less than @xmath113 flops .",
    "dense symmetric or hermitian matrices are commonly reduced to tridiagonal form by householder transformations @xcite , and we adopt this approach to the skew - symmetric case here .",
    "an order @xmath119 _ householder _ transformation @xmath120 is a matrix of the form @xmath121 where @xmath122 and @xmath123 chosen such that @xmath124 for a given @xmath125 . here @xmath126 denotes the norm of a vector , @xmath127 is the first unit vector in @xmath128 and @xmath129 . for example , @xmath130 , if one chooses @xmath131 when @xmath132 , but there is a certain degree of freedom in choosing the householder vector @xmath133 which can be exploited to maximize stability ( for an overview , see @xcite ) .",
    "note that @xmath120 is unitary ( though not necessarily hermitian ) and can also be numerically calculated such that it is unitary up to machine precision @xcite .",
    "householder transformations can thus be applied to a matrix to zero all the elements of a column ( or row ) below a chosen point , just as gauss transformations , but without the need for pivoting . as a consequence ,",
    "the structure of the tridiagonalization procedure is analogous to the @xmath34 decomposition .",
    "assume that after step @xmath72 the matrix @xmath134 is already tridiagonal in the first @xmath72 columns and rows and partitioned as defined in eq .  .",
    "then an order @xmath135 householder matrix @xmath136 is chosen such that @xmath137 and the full transformation is set to @xmath138 .",
    "writing @xmath139 and defining @xmath140 we find @xmath141 the main difference to the @xmath34 decomposition is the fact that the computation of @xmath102 now involves a full matrix - vector multiplication . hence , the total computational cost of the outer product update in eq .",
    "is @xmath142 flops . the structure of a householder tridiagonalization step is also shown schematically in fig .  [ ltl_and_householder ] .",
    "the outer product updates of eq .   can be rearranged to increase the fraction of level-3 matrix operations .",
    "the block version of the householder algorithm is detailed in app .",
    "[ blockhouse ] .",
    "complete tridiagonalization with householder matrices requires in total @xmath143 flops .",
    "this can reduced to @xmath144 for computing the pfaffian by skipping every other row / column elimination to compute only a partial tridiagonal form .    for the computation of the pfaffian we also need to compute the determinant of the transformation matrix @xmath145 .",
    "the determinant of a single householder transformation @xmath146 is given as @xmath147 for the particular choice @xmath148 , @xmath149 , i.e. @xmath32 is a reflection , but other choices of @xmath150 are equally viable .",
    "in particular , if the matrix is already tridiagonal in certain column and row ( which can happen frequently for very structured matrices ) , it is advantageous to use @xmath151 . moreover , any complex skew - symmetric matrix may be reduced to a purely real tridiagonal matrix using appropriate householder transformations with complex @xmath150 @xcite .",
    "because of this , the determinant of each householder reflection must be computed separately .",
    "the task of computing @xmath152 still only scales as @xmath153 and is thus negligible compared to the tridiagonalization cost .    in summary , for computing",
    "the pfaffian householder tridiagonalization is twice as costly as the parlett - reid algorithm and thus usually not competitive .",
    "it has however a right on its own given its connection to computing the canonical form of a skew - symmetric matrix .",
    "the dense algorithms of the previous two sections are not easily amended to matrices with a finite band width . in the case of the parlett - reid algorithm",
    ", the symmetric pivoting can lead to an uncontrolled growth of the band width depending on the details of the matrix . in the householder tridiagonalization",
    ", the outer product matrix update always introduces values outside the band , leading to a fast - growing band width .    for symmetric matrices , @xmath34 or @xmath35 decomposition algorithms respecting the band width",
    "have only been introduced recently @xcite .",
    "in contrast , banded tridiagonalization with unitary transformations is well established for symmetric matrices , and we adopt this approach for the skew - symmetric case below .",
    "instead of zeroing a whole column or row as is done in the householder approach , for banded matrices it is of advantage to use a more selective approach .",
    "the method of choice for this case in the symmetric or hermitian case are givens rotations @xcite , and we will extend this approach to th skew - symmetric case .",
    "a _ givens _",
    "rotation @xmath154 is a modification of the identity matrix that is only different in the @xmath17th and @xmath155th row and column .",
    "it is defined as @xmath156 with @xmath157 , @xmath158 and @xmath159 and thus clearly unitary .",
    "choosing @xmath160 and @xmath161 such that @xmath162 it is possible to selectively zero one element of a vector .",
    "again , a givens rotation can be computed numerically such that it is orthogonal up to machine precision .",
    "@xmath163    a banded skew - symmetric matrix can be brought into tridiagonal form by givens rotations of the form @xmath164 .",
    "the structure induced in the process of applying @xmath164 from the left and right is shown schematically in fig .",
    "[ givens_struct ] . applying a givens rotation @xmath164 ( @xmath165 ) from the left ( right ) only modifies the @xmath17th and @xmath166th rows ( columns ) . due to the skew - symmetry ,",
    "if @xmath164 zeroes the @xmath166 entry in column @xmath155 , @xmath165 zeroes the @xmath166 entry in row @xmath155 .",
    "furthermore , each givens rotation only introduces at most one additional nonzero entry outside the band in a row and column @xmath167 .",
    "this nonzero entry can thus be moved further down the band by a sequence of givens transformations until it is `` chased '' beyond the end of the matrix .",
    "the structure of the skew - symmetric tridiagonalization routine is thus identical to the symmetric or hermitian case .",
    "the main difference is in the update of the diagonal @xmath37-block that is affected by both givens rotations from left and right : due to the skew - symmetry , the diagonal blocks are invariant under these transformations , @xmath168 kaufman @xcite has presented a variant of the symmetric band matrix approach of ref .",
    "@xcite that allows to work on more data in a single operation , which allows a more favorable memory access pattern .",
    "these modifications carry over unchanged to the skew - symmetric case .    the tridiagonalization of an @xmath58 skew - symmetric matrix with bandwidth @xmath169 using givens transformations scales as @xmath170 .    the determinant of any single givens rotation @xmath171 , and thus the determinant of the full transformation @xmath172 , too . in the complex case",
    "the resulting tridiagonal matrix can be chosen to be purely real , in this case the determinant of total unitary transformations ( the givens transformations and row / columns - scalings with a phase factor ) obey @xmath173 .",
    "we have implemented the algorithms described in this manuscript as a comprehensive set of fortran routines for real and complex variables as well as single and double precision . because of the conceptional similarity of the skew - symmetric problem to the symmetric and hermitian problem , these routines are designed analogous to to the corresponding symmetric and hermitian counterparts in lapack . moreover",
    ", our implementation also makes use of the lapack framework for computing , applying , and accumulating householder and givens transformations , which was designed for numerical stability and which is available in an optimized form for any common computer architecture .",
    "dense skew - symmetric matrices are stored as ordinary two - dimensional fortran matrices , but only the strictly lower or upper triangle needs to be set ( for differences in the implementation between lower and upper triangular storage see app .",
    "[ upper_vs_lower ] ) . for banded skew - symmetric matrices ,",
    "only the strictly upper or lower diagonals are stored in a @xmath174 array @xmath175 , where @xmath176 is the number of non - zero off - diagonals and @xmath177 the size of the matrix .",
    "the @xmath178-th column of the matrix @xmath0 is stored in the @xmath178-th column of @xmath175 as    * @xmath179 for @xmath180 , if the upper triangle is stored , * @xmath181 for @xmath182 , if the lower triangle is stored .",
    "note that in this scheme , also the zero diagonal is explicitly stored .",
    "this was done to keep the design identical to the storage scheme of symmetric and hermitian band matrices in lapack .",
    ".overview of the computational routines in the fortran implementation . in the fortran77 interface",
    "the routine name must be preceded by either ` s ` ( single precision ) , ` d ` ( double precision ) , ` c ` ( complex single precision ) , or ` z ` ( complex double precision ) . [ cols=\"<,<\",options=\"header \" , ]     our library includes stand - alone routines for the tridiagonalization of a skew - symmetric dense matrix ( ` sktrf ` and ` sktf2 ` using the parlett - reid algorithm , ` sktrd ` and ` sktd2 ` using the householder approach ) and banded matrices ( ` skbtrd ` ) .",
    "we also include functions to compute the pfaffian of a skew - symmetric dense ( ` skpfa ` and ` skpf10 ` ) and banded matrices ( ` skbpfa ` and ` skbpf10 ` ) , which are based on the tridiagonalization functions .",
    "as the determinant , the pfaffian of a large matrix is prone to floating point over- or underflow . because of that , we have included routines that return the pfaffian in the form @xmath183 , where @xmath184 is real or complex , and @xmath169 is always real and integer ( ` skpfa10 ` and ` skbpf10 ` ) .",
    "both a fortran95 and a fortran77 interface are provided . in the fortran77 version of the code",
    "the routine name is preceded by either ` s ` ( single precision ) , ` d ` ( double precision ) , ` c ` ( complex single precision ) , or ` z ` ( complex double precision ) .",
    "the computational routines and their purpose are summarized in table  [ overview ] .",
    "the block versions of the algorithm have an internal parameter controlling the block size . by default ,",
    "the routines use the same block sizes as their symmetric counterpart from the lapack library .",
    "however , this internal parameter may be changed by the user to optimize for a specific architecture .",
    "apart from the documentation here , all routines ( including the auxiliary ones ) are documented extensively in the respective files . due to our routines using lapack and blas , both libraries must be also linked .      while most compiled languages ( including ` c ` and ` c++ ` ) are easily interfaced with a fortran library , interpreted languages such as ` python ` or programs such as matlab or mathematica require somewhat more effort .",
    "for this reason we have included stand - alone versions of the tridiagonalization of dense skew - symmetric matrices using householder reflections implemented in ` python ` , matlab and mathematica .",
    "those implementations , being of course slower than the fortran counterpart , are useful especially for situations where speed is not critical .",
    "both implementations also make use of the fact that for computing the pfaffian , only the odd rows and columns need to be tridiagonalized , but always work on the full matrix instead of a single triangle .    again , more extensive documentation for both implementations may be found in the respective files .",
    "to demonstrate the effectiveness of our methods , we have performed benchmark computations of the pfaffian of large , random matrices on various architectures . in table  [ benchmark ]",
    "we compare our approach with the other available software that can also be used to calculate the pfaffian in certain situations ( see sec .  [ others ] ) . for this benchmark",
    "we have compiled our fortran implementation , and the implementations of refs .",
    "@xcite and @xcite using the same compiler and compilation options , and chose a machine - optimized version of the lapack library @xcite .",
    "householder&regular householder&givens for band matrix & ` dgehrd ` ( lapack ) @xcite&`trizd ` from @xcite & ` pfaffianh ` from @xcite & ` pfaffianf ` from @xcitereal @xmath185 , dense&5.1&5.9&9.4&10.5&-&24.7&383.4&54.5&120.8real @xmath185 , banded , @xmath186&0.9&0.7&9.3&10.5&2.1&24.8&383.2&54.3&121.7complex @xmath187 , dense&3.5&4.4&7.6&8.2&-&-&-&32.2&50.1complex @xmath187 , banded @xmath186&0.8&0.7&7.6&8.1&2.0&-&-&31.9&50.2real @xmath185 , dense&3.5&8.3&8.4&12.4&-&30.7&105.3&76.3&49.4real @xmath185 , banded , @xmath186&0.7&0.5&8.4&12.2&1.4&30.4&105.4&75.9&48.5complex @xmath187 , dense&3.5&5.0&7.5&8.3&-&-&-&48.3&28.3complex @xmath187 , banded , @xmath186&0.8&0.7&7.5&8.2&3.0&-&-&49.3&26.3    from the benchmark results we can see that the block approach is always faster than the unblocked version .",
    "the relative speed - up depends strongly on the architecture , but can reach up to 60% .",
    "we also observe that the relative speed - up of the parlett - reid algorithm is larger than of the householder tridiagonalization , reflecting the fact that the level-3 content of the former is larger ( see app .  [ blockhouse ] ) .",
    "for the banded random matrices we observe that the parlett - reid algorithm performs surprisingly well .",
    "although it is not designed to make use of the bandedness of the matrix , the implementation of the skew - symmetric outer product update takes into account zeros in the vectors of the update .",
    "the householder tridiagonalization does not benefit as much , as for the matrices here the band width growth in the householder approach is faster than in the parlett - reid algorithm .",
    "it should be stressed however that the performance of these algorithms in the banded case depends on the actual values of the matrix .",
    "for example , band width growth is stronger in the parlett - reid algorithm , if the largest entries sit at the edge of the band .",
    "the specialized approach for banded matrices using givens transformations is still slightly slower than the parlett - reid algorithm for the matrix sizes considered here .",
    "the main benefit of the specialized algorithm for pfaffian calculations is hence its much lower memory requirement .",
    "in fact , typically memory limits the matrix sizes that can be handled , not computational time .",
    "the banded givens - based approach however is considerably faster than the householder tridiagonalization which makes it very attractive for computing the canonical form ( or eigenvalues in the real case ) .    comparing to other approaches",
    ", we observe that our routines are always faster , typically by a factor of about 10 or more .",
    "in particular in the real case , our specialized approach is considerably faster than using the real hessenberg reduction , although we do not always reach the full speed - up of a factor of 10 that can be expected from the operation count , which is due to the optimization of the lapack library used .",
    "the implementation for real matrices of ref.@xcite is particularly slow as its memory access pattern is somewhat unfavorable for modern computer architectures .",
    "finally , we apply our approach to computing the pfaffian to a physical example , namely the numerical computation of the topological charge of a disordered nanowire .",
    "a nanowire made out of a topological superconductor supports at its two ends andreev bound states pinned at the fermi energy @xcite . because of particle - hole symmetry , those states are majorana fermions ",
    "particles that are their own anti - particle  and may allow for topologically protected quantum computing @xcite .",
    "in contrast , an ordinary ( trivial ) superconducting wire does not support such states .",
    "the recent proposal to realize a topological superconductor using ordinary semiconducting and superconducting materials @xcite has stirred a lot of interest towards majorana physics in condensed matter .",
    "a topological charge @xmath38 is a quantity that indicates whether a system is in the trivial or topological state , and hence signifies the absence or existence of majorana bound states .",
    "a superconducting system exhibits particle - hole symmetry which allows the hamiltonian to be written in the form @xcite @xmath188 where @xmath0 is a skew - symmetric matrix , and @xmath189 , @xmath190 majorana operators with @xmath191 , @xmath192 and @xmath193 .",
    "below we further specialize to the case where particle - hole symmetry is the only remaining symmetry , i.e.  broken time - reversal and spin - rotation symmetry , which puts the system into class d of the general symmetry classification scheme @xcite .",
    "kitaev has shown that for a translationally invariant wire , @xmath194 { \\mathrm{pf}}[a(\\pi / a_{\\rm uc})]\\ ] ] is a topological charge that signifies the absence ( @xmath195 ) or existence ( @xmath196 ) of majorana bound states at the ends . in this expression , @xmath197 is the hamiltonian in ( bloch ) momentum space written in the majorana basis .",
    "@xmath197 is a matrix with a size corresponding to the size of the unit cell , the unit cell length is denoted by @xmath198 .",
    "note that the pfaffian needs only be evaluated at two values of momenta which correspond to closing the unit cell with periodic ( @xmath199 ) and anti - periodic ( @xmath200 ) boundary conditions .    for a clean system ,",
    "the size of @xmath197 is @xmath201 , where @xmath202 is the width of the wire , and eq .",
    "has been used previously to compute the topological charge @xcite .",
    "a disordered system can be considered ( up to finite size effects , see below ) in eq .   as a large , disordered supercell repeated periodically .",
    "in this case , the size of @xmath197 is @xmath203 , where @xmath33 is the length of the supercell .",
    "this implies that @xmath197 in a disordered system will be a very large matrix , and we are not aware of any application of eq .   for such as system .",
    "however , the sparse structure of @xmath0 , in particular its bandedness , allows the application of the special algorithms developed in this work , and allows for the first time applying to large , disordered systems .",
    "recently , an alternative definition of the topological charge for class d systems has been shown @xcite .",
    "in contrast to eq .   which is based on properties of the hamiltonian , this alternative definition is based on transport properties : @xmath204 where @xmath205 is the reflection matrix .",
    "this definition is equally applicable to clean and disordered systems .",
    "below we show numerically the equivalence of the definitions and .",
    "for this we use the model of refs .",
    "@xcite with a normal state rashba hamiltonian @xmath206 where @xmath207 is the effective mass of the two - dimensional electron gas , @xmath208 the rashba spin - orbit coupling , and @xmath209 the zeeman splitting due to an external magnetic field .",
    "characteristic length and energy scales are @xmath210 and @xmath211 .",
    "the electrons are then confined into a nanowire of width @xmath202 and length @xmath33 in the @xmath212-plane . for the numerical treatment ,",
    "the hamiltonian is discretized on a square grid with lattice constant @xmath184 and thus represented by a matrix @xmath213 , where @xmath17 , @xmath155 denote lattice sites , and @xmath214 , @xmath215 the spin degrees of freedom .",
    "disorder is introduced as a random on - site potential taken from the uniform distribution @xmath216 $ ] .",
    "the hamiltonian of the system in contact with a s - wave superconductor then reads @xmath217 where @xmath218 is the proximity - induced pair potential .",
    "defining majorana operators as @xmath219 and @xmath220 we can transform eq .   into the form with a skew - symmetric matrix @xmath0",
    "( whose bandwidth is reduced for the numerics with a bandwidth reduction algorithm @xcite ) .    in fig .",
    "[ results_q ] we show the numerical results for the topological charge as defined in eqs .   and . for the computation of the pfaffian in",
    "we apply the givens based method from sec .",
    "[ givens ] , for computing the reflection matrix the numerical method of ref .",
    "@xcite .",
    ", @xmath221 , @xmath222 , @xmath223 , and @xmath224 . ]    in all cases , clean and disordered , both definitions of @xmath38 agree very well .",
    "in particular , both definitions predict a vanishing of the topological phase for the largest disorder in the region @xmath225 .",
    "there are only very small differences in the exact value of @xmath226 where the topological charges change sign .",
    "these differences can be explained by finite size effects : at these points the bulk of the nanowire has a significant conductance ( @xmath227 ) which in turn means that the different geometry of eqs .",
    "( infinite repetition of a supercell ) and ( single supercell connected to metallic leads ) matter .",
    "in contrast , in the regime where the bulk of the wire is fully insulating ( @xmath228 ) , both definitions agree fully .",
    "the algorithmic developments in this work have allowed to evaluate eq .   for a fairly large disordered system .",
    "the bandwidth of the respective skew - symmetric matrix @xmath0 scales @xmath201 , and hence the cost of tridiagonalization as @xmath229 .",
    "in contrast , the definition of the topological charge from transport properties scales @xmath230 @xcite .",
    "hence , from a computational viewpoint , eq .",
    "is more favorable .",
    "it is thus reassuring that our numerical experiments showed the equivalence of both definitions .",
    "we have shown that both the computation of the pfaffian and the canonical form of a skew - symmetric matrix can be solved easily once the matrix is reduced to skew - symmetric ( partial ) tridiagonal form . to find this form ,",
    "we have then developed tridiagonalization algorithms based on gauss transformations , using a skew - symmetric , blocked version of the parlett - reid algorithm , and based on unitary transformations , using block householder reflections and givens rotations , applicable to dense and skew - symmetric matrices , respectively .",
    "these algorithms have been implemented in a comprehensive numerical library , and its performance has been proven to be superior to other approaches in benchmark calculations . finally , we have applied our numerical method for computing the pfaffian to the problem of computing the topological charge of a disordered nanowire , showing numerically the equivalence of different methods based on the hamiltonian or the scattering matrix of the system .",
    "mw acknowledges stimulating discussions with f. hassler , i.c .",
    "fulga , a.r .",
    "akhmerov , c.w .",
    "groth and c.w.j .",
    "beenakker , as well as support from the german academic exchange service daad .",
    "the problem of computing the canonical form of an even - dimensional skew - symmetric matrix has been discussed in @xcite ( the odd - dimensional problem can be reduced to an even - dimensional one by a series of givens rotations @xcite ) . here",
    "we give a self - contained derivation for completeness .    a @xmath8 skew - symmetric matrix @xmath0",
    "can be reduced to tridiagonal form @xmath231 with @xmath38 unitary ( orthogonal in the real case ) and @xmath28 tridiagonal as given in eq .  .",
    "this tridiagonal matrix can be rewritten as @xmath232 with @xmath233 as given in eq .   and",
    "@xmath32 the permutation @xmath234 from the singular value decomposition ( svd ) of @xmath235 , with @xmath236 , @xmath237 , @xmath238 , and @xmath44 , @xmath239 unitary ( orthogonal in the real case ) matrices , we then obtain @xmath240 but since @xmath241 and @xmath242 with @xmath243 defined in eq .  , we find the canonical form of @xmath0 as @xmath244 with @xmath245    in practice , it suffices to implement the svd for real @xmath233 , as any complex matrix can be reduced to real tridiagonal form using unitary transformations . for the computation of the svd one can make use of the computational routines for bidiagonal matrices from lapack @xcite .",
    "the application of the gauss and householder transformations in the update operations eqs .   and are inherently level-2 matrix operations .",
    "it is however possible to accumulate transformations and apply those simultaneously in a block representations @xcite which has a higher level-3 fraction .",
    "this procedure is also used for the tridiagonalization of symmetric matrices @xcite and we describe its application to the skew - symmetric case below .",
    "both algorithms are based on transformations of the form @xmath246 and the update operation is of the form @xmath247 with @xmath248 .",
    "assume that the matrix after the @xmath51-th update is given as @xmath249 where @xmath250 and @xmath251 are @xmath252-matrices .",
    "for @xmath253 , @xmath254 and @xmath255 .",
    "the @xmath256-th update can then be written as @xmath257 where @xmath258 and @xmath259 , and @xmath260 can also be computed without forming @xmath95 explicitly .",
    "of course , while it may not be necessary to compute the full @xmath95 explicitly , the determination of the vectors @xmath261 and @xmath262 requires the knowledge of the @xmath256-th row or column of @xmath95 . in practice , the matrix @xmath0 is therefore partitioned into panels of @xmath205 rows and columns .",
    "successive householder reflections are then computed and applied one by one to the @xmath205 rows and columns in the current panel , but not to the remaining matrix . instead , they are accumulated as described above and the remaining part of the matrix is updated in one block update of the form which is rich in level-3 matrix operations .    in the case of the parlett - reid algorithm , @xmath263 is a unit vector and hence the computation of @xmath264 has little cost . in this case",
    "the computational cost is dominated by the outer product update and hence the block version consists almost entirely of level-3 matrix operations .",
    "this is not the case for the householder tridiagonalization where the matrix - vector multiplication to compute @xmath264 remains inherently a level-2 matrix operation .",
    "in order to make full use of the skew - symmetry of the problem , it is essential that an algorithm only works with either the lower or upper triangle of the matrix .",
    "this is done in the fortran implementation . however , in this case it is also mandatory to use mainly column instead of row operations , as fortran matrices are stored contiguously in memory column - by - column .",
    "for this reason , the fortran code implements the algorithms described in this paper verbatimly only if the lower triangle of the matrix is provided .",
    "below we briefly describe the differences when the upper triangle is used .",
    "if a partial tridiagonalization is computed , it is not of the form , but has @xmath23 only for @xmath17 even and @xmath265 .",
    "this amounts to interchanging rows and columns @xmath266 and @xmath116 , @xmath267 and @xmath268 , @xmath269 , @xmath270 and @xmath271 in eq . .",
    "however , since the determinant of this permutation is equal to one , the value of the pfaffian does not change .",
    "e. anderson , z. bai , c. bischof , s. blackford , j. demmel , j. dongarra , j. du  croz , a. greenbaum , s. hammarling , a. mckenney , and d. sorensen , _ lapack users guide _ , 3rd  edition ( society for industrial and applied mathematics , philadelphia , pa , 1999 ) ."
  ],
  "abstract_text": [
    "<S> computing the pfaffian of a skew - symmetric matrix is a problem that arises in various fields of physics . both computing the pfaffian and a related problem , computing the canonical form of a skew - symmetric matrix under unitary congruence , </S>",
    "<S> can be solved easily once the skew - symmetric matrix has been reduced to skew - symmetric tridiagonal form . </S>",
    "<S> we develop efficient numerical methods for computing this tridiagonal form based on gauss transformations , using a skew - symmetric , blocked form of the parlett - reid algorithm , or based on unitary transformations , using block householder transformations and givens rotations , that are applicable to dense and banded matrices , respectively . </S>",
    "<S> we also give a complete and fully optimized implementation of these algorithms in fortran , and also provide python , matlab and mathematica implementations for convenience . </S>",
    "<S> finally , we apply these methods to compute the topological charge of a class d nanowire , and show numerically the equivalence of definitions based on the hamiltonian and the scattering matrix . </S>"
  ]
}
{
  "article_text": [
    "quantum simulations are very important tools to study transport phenomena in the nanoscale , both for electrons and phonons .",
    "there are mainly two numerical approaches for quantum transport simulations , one is the widely used non - equilibrium green s function ( negf ) method @xcite and the other is the kubo - greenwood method @xcite . both methods have been widely used to study the electronic properties of graphene , a two - dimensional sheet of carbon atoms @xcite . despite this , the field of electronic transport in graphene has remained very actively debated .",
    "so far , the negf method has been mostly used to simulate relatively small systems , due to the cubic scaling of the computational effort associated with matrix inversion .",
    "although an efficient iterative method @xcite enables the simulation of very long systems , this method is still restricted to studying quasi - one - dimensional ( 1d ) systems , such as carbon nanotubes and graphene nanoribbons ( gnrs ) .",
    "the application of the negf method to realistically sized two - dimensional ( 2d ) graphene is still not feasible .",
    "in contrast , for the kubo - greenwood method , a real - space linear - scaling method has been developed @xcite and used to study transport properties of both quasi-1d systems @xcite and 2d graphene sheets @xcite .",
    "moreover , this method has been generalized to studying thermal conductivity @xcite . besides the real - space kubo method @xcite , which expresses the conductivity as a time - derivative of the mean square displacement , another seemingly different approach @xcite , which expresses the conductivity as a time - integration of the velocity auto - correlation function , has also been used to study the electronic transport properties of large - scale single - layer @xcite and multi - layer @xcite graphene sheets , and disordered graphene antidot lattices @xcite .",
    "although both of the above methods are based on the kubo - greenwood formula , no connection has been made between them .",
    "one of our purposes is to identify the time - derivative approach and the time - integration approach as an einstein relation and the corresponding green - kubo relation , and demonstrate their equivalence numerically .",
    "furthermore , a thorough validation of kubo - greenwood formula based quantum transport methods for all the transport regimes is also absent .",
    "we thus aim to perform a comprehensive evaluation of the applicability of the linear - scaling kubo - greenwood quantum transport simulation method for all three transport regimes : the ballistic , diffusive , and localized regimes .    to achieve the above , we find that an efficient implementation is very desirable . despite the linear - scaling nature of these numerical methods",
    ", they are still computationally demanding in most cases . nowadays",
    ", the use of graphics processing units ( gpus ) have played a more and more important role in computational physics ; finding the solutions to many problems in computational physics has become impressively accelerated by using a single or multiple gpus @xcite . in this work",
    ", we consider the implementation of the kubo - greenwood quantum transport simulation on the gpu , with a unified treatment of the various involved theoretical formalisms and numerical techniques .",
    "we will evaluate the performance and correctness of our implementation , as well as the applicability of the method itself .",
    "this paper is organized as follows . in section [ section :",
    "formalism ] , we present the theoretical background of the kubo - greenwood formula and the green - kubo and einstein relations which are both derived . in section [ section :",
    "implementation ] , we give a detailed discussion of the involved numerical techniques and their gpu implementations . after making a performance evaluation in section [ section : performance ] , we thoroughly evaluate the computational method in different transport regimes in section [ section : validation ] .",
    "section [ section : conclusion ] concludes .",
    "the kubo - greenwood formula @xcite for dc conductivity @xmath0 as a function of the energy @xmath1 at zero temperature is @xmath2.\\ ] ] where @xmath3 is the reduced plank constant , @xmath4 is the electron charge , @xmath5 is the system volume , @xmath6 is the velocity operator in the @xmath7-direction , @xmath8 is the hamiltonian of the system , and tr denotes the trace .",
    "the factor of two results from spin degeneracy . for simplicity ,",
    "we only consider transport along one direction .",
    "then , the above formula can be simplified to be @xmath9.\\ ] ]    by fourier transforming one of the @xmath10 functions in the above formula , @xmath11 we have @xmath12,\\ ] ] or equivalently , @xmath13.\\ ] ] due to the remaining @xmath10 function . through a change of variables , @xmath14 , we get the following green - kubo formula @xcite , which expresses the running electrical conductivity ( rec ) as a time - integration of the velocity auto - correlation ( vac ) @xmath15 , @xmath16 @xmath17 }                { \\textmd{tr}\\left[\\frac{2 } { \\omega}\\delta(e - h)\\right]},\\ ] ] @xmath18,\\ ] ] where @xmath19 is the velocity operator in the heisenberg representation , and @xmath20 the density of states ( dos ) .",
    "the green - kubo relation constitutes essentially the formalism used by yuan _",
    "_ @xcite .    for a specific green - kubo formula ,",
    "there is generally a corresponding einstein formula . by integrating the green - kubo formula ,",
    "we obtain the following einstein formula , which expresses the rec as a time - derivative of the mean square displacement ( msd ) @xmath21 , @xmath22 @xmath23 } { \\textmd{tr}\\left[\\frac{2 } { \\omega}\\delta(e - h)\\right]},\\ ] ] where @xmath24 is the position operator in the heisenberg representation . an alternative definition , in which the derivative in the above equation is replaced by a division , @xmath25 is frequently used , since it gives smoother curves for the rec than @xmath26 does .",
    "the above einstein relation is exactly the real - space kubo method @xcite .",
    "we will demonstrate the equivalence of the green - kubo formalism and the einstein formalism numerically .",
    "specifically , we will show that @xmath26 and @xmath27 are equivalent , while @xmath28 deviates from the other two to some degree .    by going from the kubo - greenwood formalism to the green - kubo or the einstein formalism",
    ", the conductivity becomes a function of not only the energy @xmath1 , but also the correlation time @xmath29 .",
    "usually , one takes the following large time limit : @xmath30 however , the convergence of this limit is only ensured for diffusive transport , in which case the vac decays to zero and the msd becomes proportional to @xmath29 , resulting in a converged rec . for ballistic transport ,",
    "the vac oscillates around a fixed value and the msd increases quadratically with increasing @xmath29 , resulting in a divergent rec .",
    "in the localized regime , the vac develops negative values and the slope of the msd decreases , resulting in a decaying rec .    in this paper , we take graphene as our test system .",
    "we use @xmath31 to represent the number of dimer lines located along the zigzag edge and @xmath32 to represent the number of zigzag - shaped chains across the armchair edge .",
    "thus , an @xmath33 graphene sample has @xmath34 carbon atoms , and the lengths in the zigzag and armchair directions are @xmath35 and @xmath36 , respectively , where @xmath37 nm is the carbon - carbon bond length used . for 2d graphene ,",
    "periodic boundary conditions are applied in both directions ; for quasi-1d armchair graphene nanoribbon ( agnr ) and zigzag graphene nanoribbon ( zgnr ) , we use periodic boundary conditions along the transport ( longitudinal ) direction , and non - periodic boundary conditions along the perpendicular direction .",
    "we use a nearest - neighbor @xmath38 orbit tight - binding hamiltonian for pristine systems : @xmath39 where the hopping parameter @xmath40 is chosen to be 2.7 ev . with this notation , the position and velocity operators can be expressed as @xmath41 @xmath42 = \\frac{i}{\\hbar}\\sum_{\\langle mn \\rangle }   ( x_n - x_m ) h_{mn } |m\\rangle \\langle n|.\\ ] ]    we also consider systems with random single vacancies , which are modeled by removing carbon atoms randomly according to the prescribed defect concentrations . the defect concentration @xmath43 is determined by the system size @xmath44 and the number of vacancies @xmath45 as @xmath46 .",
    "based on the discussion of the last section , we see that the quantities that need to be calculated are @xmath47 , @xmath48 , and @xmath49 . to facilitate the numerical calculation , we firstly rewrite @xmath48 and @xmath49 in the following symmetric forms ( using the cyclic properties of the trace ) : @xmath50 \\right]\\ ] ] @xmath51^{\\dagger}\\delta(e - h ) [ x , u(t)]\\right].\\ ] ]",
    "the reason for this will be apparent when we consider the gpu - implementation . to achieve linear - scaling",
    ", we have to make three approximations presented below .",
    "the first approximation is to use a random vector @xmath52 to evaluate the trace @xcite : @xmath53 \\approx",
    "\\langle \\phi | a |\\phi \\rangle,\\ ] ] where @xmath54 is an arbitrary matrix operator , and @xmath52 is normalized to the matrix dimension @xmath44 , @xmath55 . with this approximation , we have @xmath56 @xmath57,\\ ] ] @xmath58^{\\dagger } \\delta(e - h)[x , u(t)]|\\phi \\rangle.\\ ] ] the error introduced by this approximation decreases with increasing @xmath44 . for a given @xmath44 , the accuracy",
    "can also be increased by using a higher number of random vectors .",
    "quantitatively , the relative error is of order @xmath59 @xcite , where @xmath60 is the number of random vectors .",
    "the second approximation is related to the @xmath10 function .",
    "there are various kinds of methods to approximate this , including the lanczos recursion method ( lrm ) @xcite , the fourier transform method ( ftm ) @xcite , and the kernel polynomial method ( kpm ) @xcite .",
    "the lrm and the kpm has been compared in ref .",
    "@xcite . in this work",
    ", we use the ftm and the kpm and give a comparison of them .    in the ftm @xcite , the @xmath10 function",
    "is approximated by a truncated discrete fourier series expansion , and we can rewrite eqs .",
    "( [ equation : trace_dos]-[equation : trace_msd ] ) as @xmath61 @xmath62,\\ ] ] @xmath63 where @xmath64 , @xmath65 , and @xmath66 are the fourier moments : @xmath67 @xmath68 @xmath69^{\\dagger } u(n \\delta \\tau ) [ x , u(t)]|\\phi \\rangle.\\ ] ] note that a window function should be applied before performing the fourier transform to suppress the unwanted gibbs oscillation .",
    "usually , a hanning window @xmath70\\ ] ] is used @xcite .",
    "we will discuss the choice of the time step @xmath71 used in the above fourier transforms when we compare the relative performance of the ftm and the kpm in the next section .    in the kpm @xcite , the @xmath10 function",
    "is approximated by a truncated chebyshev polynomial expansion , and we can rewrite eqs .",
    "( [ equation : trace_dos]-[equation : trace_msd ] ) as @xmath72 @xmath73,\\ ] ] @xmath74 where @xmath75 is the @xmath43th order chebyshev polynomial of the first kind and @xmath76 , @xmath77 , and @xmath78 are the chebyshev moments : @xmath79 @xmath80 @xmath81^{\\dagger } t_n(h ) [ x , u(t)]|\\phi \\rangle.\\ ] ] similarly , a damping factor should be applied before performing the chebyshev summation in order to suppress the gibbs oscillation .",
    "usually , the jackson damping @xcite @xmath82 where @xmath83 is used .",
    "note that the above chebyshev expansions assume that @xmath8 has been scaled and shifted @xcite so that the spectrum lies in the interval @xmath84 $ ] .",
    "both the fourier and the chebyshev moments can be evaluated iteratively .",
    "detailed algorithms will be presented when we consider the gpu - implementation .",
    "the third approximation is to evaluate the application of the time - evolution operators on state vectors using a finite - term polynomial expansion . from the discussion above",
    ", we see that there are three kinds of time - evolution operators : @xmath85 , @xmath86 , and @xmath87 $ ] .",
    "their operations can be evaluated very accurately and efficiently in a linear - scaling way by using the chebyshev polynomial expansion @xcite : @xmath88 @xmath89   \\approx \\sum_{m=0}^{n_p-1 } ( 2-\\delta_{0 m } ) ( -i)^m j_m\\left ( \\frac{\\delta t}{\\hbar } \\right )   [ x , t_m(h)],\\ ] ] where @xmath90 is the @xmath91th order bessel function of the first kind .",
    "time - evolution of quantum states has also been considered with regard to gpu computation in other contexts @xcite .",
    "the above expansions assume that the spectrum of @xmath8 lies in the interval @xmath84 $ ] . for a hamiltonian with spectrum beyond this range , we need to shift and scale it , with a corresponding opposite scaling of the time interval @xmath92 .",
    "the order of expansion @xmath93 depends on the time interval @xmath92 and the desired accuracy .",
    "the above summations can be efficiently evaluated by using the following recursion relations ( @xmath94 ) : @xmath95 @xmath96 = 2[x , h ] t_{m-1}(h ) + 2h [ x , t_{m-1}(h ) ] - [ x , t_{m-2}],\\ ] ] @xmath97 @xmath98 = 0 , \\quad   [ x , t_1(h ) ] = [ x , h].\\ ] ]      in this subsection , we consider the gpu implementation of the algorithms .",
    "we use cuda @xcite as our developing tool .",
    "we only discuss the relevant techniques of our cuda implementation when appropriate ; the reader is referred to the official programming guide @xcite for more details .    to achieve high performance ,",
    "we implement nearly all of the algorithms on the gpu , minimizing data transfer between the cpu and the gpu . here",
    "we present the pseudo codes for calculating @xmath47 , @xmath48 , and @xmath49 in algorithms [ algorithm : dos ] , [ algorithm : dos_times_vac ] , and [ algorithm : dos_times_msd ] , respectively .",
    "while for @xmath47 , we only need to calculate one set of moments , for @xmath48 and @xmath49 , we have to calculate a set of moments at each correlation time @xmath99 @xmath100 .",
    "thus , calculating the conductivity is generally much more demanding than calculating the dos .",
    "note that we only calculate the moments in the gpu , and copy their results to the cpu for performing the fourier transform or the chebyshev summation .",
    "we could do all the calculations in the gpu , but it does not result in a significant gain in the overall performance , since the calculation of the moments takes the majority of the computation time .",
    "in the previous subsection , we have written @xmath48 and @xmath49 in symmetric forms .",
    "the advantage is that we can use the following iteration relations to calculate the conductivity at different correlation times : @xmath101 @xmath102 @xmath103   |\\phi\\rangle = u(\\delta t ) [ x , u(t)]|\\phi\\rangle + [ x , u(\\delta t ) ] u(t ) |\\phi\\rangle.\\ ] ]    calculate @xmath64 in eq .",
    "( [ equation : f_n_dos ] ) in the gpu copy the @xmath64 data from the gpu to the cpu calculate @xmath20 in the cpu using eq .",
    "( [ equation : ftm_dos ] ) calculate @xmath76 in eq .",
    "( [ equation : c_n_dos ] ) in the gpu copy the @xmath76 data from the gpu to the cpu calculate @xmath20 in the cpu using eq .",
    "( [ equation : kpm_dos ] )    @xmath52 is the initial random vector calculate @xmath104 iteratively using eq .",
    "( [ equation : iteration_1 ] ) calculate @xmath105 iteratively using eq .",
    "( [ equation : iteration_2 ] ) calculate @xmath106 in eq .",
    "( [ equation : f_n_vac ] ) in the gpu copy the @xmath106 data from the gpu to the cpu calculate @xmath107 in the cpu using eq .",
    "( [ equation : ftm_vac ] ) calculate @xmath108 in eq .",
    "( [ equation : c_n_vac ] ) in the gpu copy the @xmath108 data from the gpu to the cpu calculate @xmath109 in the cpu using eq .",
    "( [ equation : kpm_vac ] )    @xmath52 is the initial random vector calculate @xmath110|\\phi\\rangle$ ] iteratively using eq .",
    "( [ equation : iteration_3 ] ) calculate @xmath111 in eq .",
    "( [ equation : f_n_msd ] ) in the gpu copy the @xmath111 data from the gpu to the cpu calculate @xmath112 in the cpu using eq .",
    "( [ equation : ftm_msd ] ) calculate @xmath113 in eq .",
    "( [ equation : c_n_msd ] ) in the gpu copy the @xmath113 data from the gpu to the cpu calculate @xmath112 in the cpu using eq .",
    "( [ equation : kpm_msd ] )    the calculation of the moments in both the ftm and the kpm used in the above three algorithms can also be carried out iteratively .",
    "we note that the fourier moments in equations ( [ equation : f_n_dos ] - [ equation : f_n_msd ] ) can be expressed in a unified way : @xmath114 different moments only differ in @xmath115 and @xmath116 : for dos , @xmath117 ; for vac , @xmath118 and @xmath119 ; for msd , @xmath120|\\phi\\rangle$ ] .",
    "similarly , the chebyshev moments in equations ( [ equation : c_n_dos ] - [ equation : c_n_msd ] ) can be expressed uniformly as @xmath121 thus , we can present the calculations of these different moments in a unified way , as shown in algorithms [ algorithm : moments_ftm ] and [ algorithm : moments_kpm ] .",
    "kernel : @xmath122 kernel : @xmath123 calculate @xmath124 in the gpu kernel : @xmath125 kernel : @xmath122 calculate @xmath126 in the gpu kernel : @xmath127    kernel : @xmath128 kernel : @xmath129 kernel : @xmath130 kernel : @xmath131 kernel : @xmath132 kernel : @xmath133    we next consider the time - evolution of quantum states . in algorithms",
    "[ algorithm : evolve ] and [ algorithm : evolvex ] , we present the algorithms for evaluating @xmath134 and @xmath135|\\phi_{\\textmd{in}}\\rangle$ ] , according to eq .",
    "( [ equation : cheb_1 ] ) and eq .",
    "( [ equation : cheb_2 ] ) , respectively . in algorithm",
    "[ algorithm : evolve ] , besides the input vector @xmath136 , and the output vector @xmath137 , we need three auxiliary vectors , @xmath138 , @xmath139 , and @xmath140 . in algorithm",
    "[ algorithm : evolvex ] , we need another set of auxiliary vectors , @xmath141 , @xmath142 , and @xmath143 .",
    "all of these vectors should be defined in global memory in order to pass data between kernels .",
    "kernel : @xmath144 kernel : @xmath130 kernel : @xmath145 kernel : @xmath146 kernel : @xmath147 permute pointers : @xmath148 , @xmath149 , @xmath150    kernel : @xmath144 kernel : @xmath151 kernel : @xmath130 kernel : @xmath152 |\\phi_{\\textmd{in}}\\rangle$ ] kernel : @xmath153 kernel : @xmath146 kernel : @xmath154 |\\phi_1\\rangle                     + 2 h |\\phi_1^x\\rangle - |\\phi_0^x\\rangle$ ] kernel : @xmath155 permute pointers : @xmath148 , @xmath149 , @xmath150 permute pointers : @xmath156 , @xmath157 , @xmath158    an examination of algorithms [ algorithm : evolve ] and [ algorithm : evolvex ] reveals that , apart from some simple linear transformations , the only nontrivial calculations are the matrix - vector multiplications , @xmath159 and @xmath160|\\phi_{\\textmd{in}}\\rangle$ ] . in algorithm [ algorithm : apply_hamiltonian ] , we present the pseudo code of the cuda kernel which evaluates @xmath159 ; the evaluation of @xmath160|\\phi_{\\textmd{in}}\\rangle$ ] is very similar .",
    "the strategy in algorithm [ algorithm : apply_hamiltonian ] is to use one thread for one element of the output vector . by using a block size of @xmath161 ,",
    "the number of blocks in the kernel is @xmath162 , where @xmath44 is the number of sites in the system .",
    "thus , this kernel is executed with the configuration of @xmath163 . the *",
    "if * statement on line 1 is necessary to avoid manipulating invalid memory in the case of @xmath44 not being an integer multiple of @xmath161 .",
    "lines 2 - 7 are devoted to the calculation of @xmath164 $ ] , where the variable temp is used to reduce the global memory access , which is very time - consuming .",
    "we use a neighbor list to specify the hamiltonian , denoting the number of neighbors to site @xmath43 as nn@xmath165 , and indexing the @xmath166th neighbor of site @xmath43 as nl@xmath167 . for a sparse hamiltonian , nn@xmath165 is much smaller than the total number of sites @xmath44 .",
    "the nl@xmath167 data should be coded in such a way that the indices of the @xmath166th neighbor sites for all the sites are stored consecutively , i.e. , in the order of nl@xmath168 , nl@xmath169 , nl@xmath170 , @xmath171 , nl@xmath172 , nl@xmath173 , nl@xmath174 , @xmath171 , nl@xmath175 , nl@xmath176 , nl@xmath177 , @xmath171 .",
    "this special order ensures coalescing in global memory access , which means that consecutive threads access consecutive data in the global memory .",
    "this requirement has also been noticed in our previous work on molecular dynamics simulations @xcite .",
    "@xmath178 $ ] is the @xmath91th component of @xmath136 @xmath164 $ ] is the @xmath43th component of @xmath137 @xmath43 = blockidx.x * blockdim.x + threadidx.x @xmath44 is the number of sites in the system nn@xmath165 is the total number of neighbor sites of site @xmath43 nl@xmath167 is the index of the @xmath166th neighbor site of site @xmath43 temp @xmath179 @xmath180 temp @xmath181 temp + @xmath182 $ ] @xmath164 \\leftarrow$ ] temp",
    "in this section , we compare the relative performance of our gpu and cpu implementations , and the relative performance of the ftm and the kpm .      we firstly evaluate the relative performance of our gpu implementation with respect to our cpu implementation .",
    "the comparison is made between a tesla k20 gpu card and an intel xeon e5 - 1620 @ 3.60 ghz cpu core .",
    "the serial cpu code is implemented in c / c++ and is compiled with an o3 optimization mode . although the algorithms in the previous section are presented by using a complex number notation , in both the cpu and the gpu implementation , we use two real vectors for a complex state vector , which can save nearly half of the calculations compared with a naive use of the intrinsic complex number .",
    "both the cpu and the gpu code use double - precision arithmetics .",
    "the major computation which scales linearly with the system size is the chebyshev iteration , which is used for both the time - evolution and the kpm .",
    "we thus present a performance evaluation of the chebyshev iteration part of the code in some detail .",
    "we chose to present the testing results for @xmath183 ; those for @xmath184 |\\phi_1\\rangle + 2 h",
    "|\\phi_1^x\\rangle - |\\phi_0^x\\rangle$ ] are similar .",
    "figure [ figure : cpu_vs_gpu ] shows the results of the performance evaluation of the chebyshev iteration part , where the speedup factor is defined as the computation time in the cpu over that in the gpu .",
    "the computational time in the cpu scales linearly with respect to the simulation size , which reflects the linear - scaling nature of the algorithm .",
    "the computation time in the gpu also scales linearly approximately .",
    "the speedup factor increases from about 10.5 to about 16.5 with the number of atoms in the simulated system increasing from 0.2 million to 1.6 million and nearly saturates thereafter .",
    "for all the other calculations such as the evaluation of the inner products , we also obtained a comparable speedup factor .",
    "the overall speedup factor of our gpu implementation over our cpu implementation is observed to be about 16 .",
    "this speedup factor seems to be not very impressive .",
    "indeed , in our recent work on exact diagonalization of the hubbard model using the lrm on the gpu @xcite , a speedup factor of about 60 is obtained using double - precision .",
    "the difference in the speedup factor results from the different computational intensities of the problems .",
    "for example , in the hubbard model , for a hamiltonian size of 853776 ( 12 spin sites ) , the computation times for one lanczos iteration in the cpu and the gpu are about 120 ms and 2 ms , respectively , giving a speedup factor of 60 @xcite . in comparison , for our tight - biding model with a hamiltonian size of @xmath185 , the computation times for one chebyshev iteration in the cpu and the gpu are about 12.8 ms and 0.8 ms , giving a speedup factor of 16 .",
    "we see that for a given hamiltonian size , the hubbard model is about 10 times more computationally intensive than the single - particle tight - binding model and attains a higher speedup factor .",
    "similar dependence of the speedup factor on the computational intensity has also been observed in our recent work on molecular dynamics simulation @xcite .     in the cpu and the gpu and ( b ) the corresponding speedup factor as a function of the system size .",
    "double - precision is used for both the cpu and the gpu code.,width=3 ]       ( using 10 random vectors ) with defect density @xmath186 calculated by the kpm with @xmath187 and the ftm with @xmath188 .",
    ", width=3 ]    we then give a comparison of the relative performance of the kpm and the ftm .",
    "for the ftm , the calculation of each fourier moment involves a time - evolution with a time step @xmath71 .",
    "the choice of the time step used in the ftm is related to the nyquist sampling rates used in digital signal analysis : it should not be too large to give aliasing errors , and not too small to reduce the energy resolution @xcite . the optimal value of @xmath71 corresponding to a maximum bandwidth @xmath189 of the energy spectrum without aliasing error can be fixed to be @xmath190 for a scaled hamiltonian with spectrum @xmath84 $ ]",
    ", we have @xmath191 and @xmath192 . then , the dimensionless argument in the bessel function is @xmath193 , which determines the number of chebyshev iterations in the time evolution operator @xmath194 to be about @xmath195 for an accuracy of @xmath196 .",
    "in contrast , the calculation of each chebyshev moment in the kpm only involves one chebyshev iteration .    to give a fair comparison of the relative efficiency",
    ", we should also consider the energy resolution @xmath197 , which is related to the number of moments @xmath198 in the ftm and @xmath199 in the kpm .",
    "quantitatively , we have @xmath200 in the ftm @xcite and @xmath201 in the kpm @xcite , respectively .",
    "figure [ figure : kpm_vs_ftm ] gives a comparison of the doss calculated by the the kpm with @xmath187 and the ftm with @xmath188 .",
    "we see that they give consistent results and the ftm indeed has a higher energy resolution when using the same number of moments .    by combining the above analysis",
    ", we come to the conclusion that the kpm is about @xmath202 times as efficient as the ftm for achieving the same energy resolution .",
    "however , for the transport simulations , this difference of efficiency only matters in the diffusive regime , where the correlation time step @xmath92 should be relatively small , and the computation time is dominated by the calculation of the @xmath10 function . in the localized regime , where the correlation time step is usually chosen to be very large , the computation time is dominated by the time - evolution @xmath87|\\phi\\rangle$ ] , and the relative efficiency of the kpm over the ftm does not lead to a significant gain in performance for the whole simulation",
    "in this section , we validate our gpu code by studying the transport properties of 2d graphene and quasi-1d graphene nanoribbons in both the ballistic , the diffusive and the localized regimes .       as a function of the correlation time for pristine graphene with different sizes and different boundary conditions along the transport direction ( the zigzag direction ) : periodic ( pbc ) and non - periodic ( npbc ) .",
    "the solid and dashed horizontal lines indicate the sample lengths along the transport direction : 126 nm and 252 nm for @xmath203 graphene and @xmath204 graphene , respectively.,width=3 ]      +        for ballistic transport without any scattering , the vac does not decay with time , resulting in a divergent conductivity .",
    "a finite conductance can only be deduced by introducing a length scale . while there is no intrinsic definition of length in the green - kubo and the einstein formulas , a definition of length in terms of the msd",
    ", @xmath205 is frequently used @xcite .",
    "the conductance of a system with width @xmath206 can be defined as @xmath207 although the correlation time @xmath29 appears in the above equation , a converged time - independent ( length - independent ) value of @xmath208 can be obtained within a short correlation time .",
    "we note that the factor of 2 in the above length definition is necessary to obtain correct results if we use the correct definition of conductivity , @xmath26 , rather than the alternative , @xmath28 , which is half of @xmath26 in the ballistic regime .    to justify the factor of 2 in eq .",
    "( [ equation : length ] ) , we examine the time - dependence of the length for pristine graphene with different sizes and different boundary conditions along the transport direction , which is chosen to be the zigzag direction . by applying periodic boundary conditions in the transport direction , there is no noticeable difference in the results obtained by using a longer sample ( 252 nm for @xmath204 graphene ) and a shorter sample ( 126 nm for @xmath203 graphene ) , which reflects the small finite size effect in green - kubo - like formulas @xcite . in contrast , by imposing a non - periodic boundary condition in the transport direction , the diffusion of electrons is confined by the sample size , with the maximum diffusion length as defined in eq .",
    "( [ equation : length ] ) being the length of the sample .",
    "the factor of 2 can also be understood intuitively : @xmath209 is the absolute diffusion distance in one direction , and the factor of 2 accounts for the diffusion in the opposite direction .",
    "we now study the ballistic transport properties of a @xmath210 pure zgnr by comparing the results with those obtained by the negf method . as can be seen from fig .",
    "[ figure : ballistic ] ( a ) , the overall plateaus of the quantized conductance can be correctly produced by eq .",
    "( [ equation : ballistic_conductance ] ) , but the conductances around the band edges are overestimated .",
    "et al_. @xcite also noticed this problem and argued that the overshoots near the band edges originate from the nonequivalence between the expectation values of @xmath211 and the square root of the expectation value of @xmath212 . here , we give an analysis of this problem from the numerical perspective .",
    "in the ballistic regime , the vac oscillates around some value ( see fig . [",
    "figure : ballistic ] ( d ) for an example ) , and an average value of @xmath212 can be well established over a short correlation time .",
    "thus we can express the msd as @xmath213 , which results in the following expression for the conductance : @xmath214 fig .",
    "[ figure : ballistic ] ( b ) presents the calculated dos and fig .",
    "[ figure : ballistic ] ( c ) presents the deduced @xmath215 .",
    "we see that both @xmath20 and @xmath215 are singular near the band edges .",
    "thus , the calculation of ballistic conductance in the einstein formalism involves multiplications of big and small numbers , which is numerically unstable . since the msd and the vac",
    "are squared quantities , we obtain an overestimation rather than an underestimation of the conductance .",
    "we now turn to discuss the diffusive transport regime .",
    "we consider 2d graphene of size @xmath216 with defect concentration @xmath186 .",
    "we use both the green - kubo formula and the einstein formula .",
    "the time step is chosen to be @xmath217 fs , small enough to exhibit the detailed features of the ballistic - to - diffusive transition .",
    "figure [ figure : diffusive ] ( a - c ) shows the vacs for different energies as a function of correlation time .",
    "we see that the vac does not decay monotonically . for the dirac point",
    "@xmath218 ev , the vac decays to zero within one fs and then develops negative values up to 5 fs , after which the vac stays at zero for a relatively long time . for higher energies , @xmath219 ev and 1.0 ev ,",
    "apart from the expected exponential decay , there is also an oscillatory component .",
    "this oscillation has been discussed by de laissardiere _ el al . _",
    "@xcite , and is attributed to the zitterbewegung effect .",
    "a spectral analysis shows that the frequency @xmath220 of the oscillation is directly related to the electron energy by @xmath221 , which is consistent with the oscillation factor @xmath222 in the vac @xcite . by going from the green - kubo to the einstein formalism",
    ", these oscillations are smoothed out , as shown by the msd curves in figure [ figure : diffusive ] ( d - f ) . the ballistic - to - diffusive transition",
    "is featured by the decay of the vac in the green - kubo formalism , or the quadratic - to - linear transition of the msd in the einstein formalism .    from the vac and the msd , we can calculate recs , @xmath27 , @xmath26 , and @xmath28 , as shown in fig .",
    "[ figure : diffusive ] ( g - i ) .",
    "we see that the derivative - based definition of the rec in the einstein formalism is equivalent to the rec defined in the green - kubo formalism : @xmath223 .",
    "in contrast , the division - based definition of the rec in the einstein formalism deviates from the other two in the ballistic - to - diffusive regime .",
    "one may note that for the dirac point , @xmath26 has large fluctuations when @xmath224 fs .",
    "this reflects the numerical difficulty of calculating the derivative in eq .",
    "( [ equation : rec_e1 ] ) , especially for small time steps , and is probably the reason for the preference of using @xmath28 instead of @xmath26 in some previous works .",
    "however , we stress that @xmath28 is a wrong definition in principle and should be used with caution .",
    "the most interesting quantity in the diffusive regime is the semi - classical conductivity , @xmath225 , which is conventionally defined @xcite to be the maximum value of the rec : @xmath226 using this definition , the calculated @xmath227 ( the solid line in fig . [ figure : diffusive_sigma ] ) exhibits a plateau of minimum conductivity @xmath228 in the range of @xmath229 0.25 ev , along with a peak around the dirac point .",
    "similar results have been obtained by yuan _",
    "_ using the green - kubo formula @xcite and by cresti _",
    "_ using the einstein formula @xcite .",
    "one may note that the peaks found by yuan _",
    "@xcite are much lower than those found by cresti _",
    "this difference partly results from the different numerical approaches , but the major reason is that cresti _",
    "( [ equation : sigma_sc_maximum ] ) to calculate @xmath227 , while yuan _",
    "et al . _ just integrate the vac to some given correlation time .    a comment on the connection and difference between the green - kubo method in our work and the numerical approach developed by yuan _",
    "_ is in order .",
    "after some algebra , we can rewrite their formula for dc conductivity ( eq .",
    "( 41 ) in ref .",
    "@xcite ) using our notations as : @xmath230,\\ ] ] which is equivalent to eq . ( [ equation : rec_gk ] ) and eq .",
    "( [ equation : trace_vac ] ) in our work .",
    "the difference between our approach and their is mainly related to the numerical implementations .",
    "they firstly precompute all the `` quasi - eigenstates '' @xmath231 for a given number of energy points @xmath232 and then store them in memory , before calculating @xmath233 using eq .",
    "( [ equation : yuan2010 ] ) .",
    "this strategy may be very efficient , but is not economic in terms of memory usage , restricting the number of energy points considered in one simulation to be around 64 @xcite .",
    "although eq .",
    "( [ equation : sigma_sc_maximum ] ) has been widely used , there is no rigorous justification for using it .",
    "the reason for choosing this definition may be related to the unavoidable localization effects @xcite in most of the problems studied by this method .",
    "when localization takes place , the rec decays with increasing correlation time after achieving the diffusive regime , and it is difficult to apply eq .",
    "( [ equation : limit ] ) to find a time - independent ( length - independent ) @xmath227 .",
    "although eq .",
    "( [ equation : sigma_sc_maximum ] ) works fine for higher energies , it is problematic near the dirac point . from fig .",
    "[ figure : diffusive ] ( g ) we see that , the correctly defined rec drops abruptly from 1 fs to 5 fs and much more slowly when @xmath224 fs . while the latter slow decay is a sign of weak localization , which is usually a precursor of strong localization , the earlier fast decay can not be attributed to a localization effect .",
    "thus , the peak value around 1 fs ( corresponding to a length of about 1 nm ) can not be taken as the value of @xmath227 .",
    "alternatively , we define @xmath227 as the average value over an appropriate time block @xmath234 : @xmath235 the time block should be chosen to represent the plateau to which @xmath236 saturates to before the onset of localization .",
    "this kind of averaging has been widely used in the study of thermal conductivity using the green - kubo method @xcite . using this alternative definition , the calculated @xmath227 ( the dashed line in fig .",
    "[ figure : diffusive_sigma ] ) does not show a peak value around the dirac point , and is consistent with that obtained by eq .",
    "( [ equation : sigma_sc_maximum ] ) in the range of @xmath237 ev .",
    "the existence of the peak for semi - classical conductivity is also not supported by the work of ferreira _ et al .",
    "they directly evaluate the kubo - greenwood formula ( eq .",
    "( 2 ) ) by expanding both of the @xmath10-functions using the kpm @xcite .",
    "since the kpm is equivalent to the ftm , as demonstrated earlier , their method is also equivalent to fourier transforming both of the @xmath10-functions , @xmath238 @xmath239 which is in turn equivalent to applying an extra window function on the vac before integrating it up to a given correlation time ( proportional to @xmath199 ) in the green - kubo formalism . the extra window function ( or damping factor , in the context of the kpm )",
    "suppresses the localization effect and this direct method provides a more unambiguous way of determining the semi - classical conductivity .",
    "our new definition of @xmath227 is more or less equivalent to this direct method .",
    "( using 30 random vectors ) with defect concentration @xmath186 calculated by eq .",
    "( [ equation : sigma_sc_maximum ] ) ( labeled by `` maximum '' ) and eq .",
    "( [ equation : sigma_sc_average ] ) ( labeled by `` average '' ) , using @xmath240 .",
    "the horizontal line denotes the value of @xmath241 .",
    ", width=3 ]      although the green - kubo formula and the einstein formula have been demonstrated to be equivalent , we should point out that the green - kubo formula is not practical in the localization regime , for the reason presented below . to obtain the rec by integrating the vac",
    ", the time step should be very small ; otherwise , the integration can not be accurately evaluated with even very small fluctuations in the vac data .",
    "however , observing localization requires a very long total correlation time , and a large number of steps when using a small time step . at each time step , we need to calculate the @xmath10 function , which is very time - consuming . thus , the necessity of using a small time step in the green - kubo formula makes it impractical in the localized regime .",
    "this probably explains why the results obtained by integrating ( or summing ) the vac show no evidence of localization even for a relatively high ( @xmath242 ) level of resonant disorder @xcite .",
    "in contrast , the einstein formula is more suitable for studying the localization behavior , since the numerical evaluation of the derivative - based rec does not require a small time step .",
    "we thus only use the einstein formula in the following discussions of localization .",
    "we begin with a comparison of the results obtained by the einstein formula with those by the non - equilibrium green s function ( negf ) method @xcite . to our knowledge ,",
    "a serious comparison of the two methods in the strongly localized regime is still absent .",
    "we consider agnrs with a fixed width ( @xmath243 nm ) and a defect concentration of @xmath186 . in the negf method ,",
    "the lengths are set by imposing two conducting leads along the transport direction . in the einstein formula , we take a sample size of @xmath244 ( which is long enough to eliminate any finite size effect in the transport direction ) and calculate the lengths by eq .",
    "( [ equation : length ] ) .    due to the efficiency of our gpu implementation",
    ", we can explore the strongly localized regime by cheaply calculating the correlation function up to hundreds of picoseconds for the first time , eventually observing the saturation of the msd . when the msd saturates , small fluctuations of the msd can cause large fluctuations of the rec , @xmath26 .",
    "fortunately , we note that the later part of the msd can be fitted very well by a pad approximant of order @xmath245 $ ] : @xmath246 usually , @xmath247 is enough to obtain a good fitting .",
    "an example of the fitting is shown in fig .",
    "[ figure : localized_gnr_fit ] ( a ) for the energy @xmath248 ev .    without fitting , the rec @xmath26 calculated by eq .",
    "( [ equation : rec_e1 ] ) can even develop negative values .",
    "in contrast , the rec @xmath28 calculated by eq . ( 11 ) exhibits a very smooth behavior even by using the raw data of the msd ( fig .",
    "[ figure : localized_gnr_fit ] ( b ) ) .",
    "in fact , there is no noticeable difference between the fitted and the raw data when using the division - based definition @xmath28 .",
    "however , in the strongly localized regime where @xmath249 , the two definitions can lead to a difference of several orders of magnitude for the conductivity ( fig .",
    "[ figure : localized_gnr_fit ] ( b ) ) .",
    "( using 12 random vectors ) with defect concentration @xmath186 at @xmath248 ev .",
    "( a ) raw and fitted msd as a function of correlation time .",
    "( b ) conductivity as a function of correlation time .",
    "data marked by e1 and e2 correspond to @xmath250 defined by eq .",
    "( 9 ) and @xmath251 defined by eq . ( 11 ) , respectively . for @xmath251 ,",
    "results calculated from the raw and the fitted msd are compared .",
    "for @xmath250 , only the results calculated from the fitted msd are presented ; those from the raw msd have large fluctuations and can not be shown completely in the same plot.,width=3 ]    with a reliable fitting method for obtaining smooth curves of the msd and the rec , we can give a quantitative comparison of the length - dependent conductances as calculated by @xmath252 with those calculated by the negf method , as shown in fig .",
    "[ figure : localized_gnr_conductance ] . in the negf method",
    ", the typical conductance @xcite @xmath253 is used to represent the ensemble average over @xmath254 realizations of the defects .",
    "as expected , the conductances calculated by the negf method decay exponentially with the sample length @xcite @xmath255 where @xmath256 is the localization length and @xmath257 the number of transport modes in the ribbon multiplied by the conductance quantum @xmath258 .",
    "the conductances calculated by the einstein formula also exhibit an exponential decay up to @xmath259 . within this range , the correct definition of the rec , @xmath26 , results in a very good agreement between the einstein formula and the negf method .",
    "however , for @xmath260 , the einstein formula fails to capture the length - dependence of the conductance by using either definition of the rec . in this strongly localized regime ,",
    "the conductances calculated by the einstein formula decay `` super - exponentially '' with increasing length .    a better characterization of the range within which the einstein formalism and the negf method give consistent results can be obtained by plotting the conductances as a function of the reduced length @xmath261 , where the localization length @xmath256 is deduced from the negf results . the length definition @xmath262 in the einstein formalism",
    "can only be trusted within this range . as shown in the insets of fig .",
    "[ figure : localized_gnr_conductance ] , this range can be determined to be @xmath263 , independent of the energy .",
    "this discrepancy puts the definition of length in the einstein formalism into question . indeed , as seen from fig .",
    "[ figure : localized_gnr_fit ] , the msd will finally saturate with increasing correlation time , which means that the length defined in eq . ( [ equation : length ] ) does not increase after the saturation .",
    "thus , the maximum length that can be probed by the einstein formula is bounded from above .",
    "in fact , by solving eq .",
    "( [ equation : length ] ) , eq .",
    "( [ equation : conductance_localized ] ) , eq .",
    "( [ equation : rec_e1 ] ) and eq .",
    "( [ equation : conductance_decay ] ) simultaneously , we can get analytical expressions for the length and the msd : @xmath264 where @xmath265 and @xmath266 are two positive parameters depending on the energy , and @xmath267 is an energy - dependent length parameter .",
    "however , our simulation results do not support this solution : the calculated msd saturates much faster than logarithmically .",
    "conceptually , one unambiguous way to define the length of a simulated sample is to connect it with two semi - infinite leads along the transport direction , which affect the effective hamiltonian of the sample by adding the `` self energies '' arising from the interactions between the sample and the leads .",
    "this inevitably leads to the `` mesoscopic kubo - greenwood formula '' @xcite , or equivalently , the negf method @xcite .",
    "in summary , we have developed an efficient quantum transport simulation code fully implemented on the gpu , which attains a speedup factor of 16 ( using double - precision ) compared with an optimized serial cpu code .",
    "this seemingly relatively small speedup factor is obtained by considering the simplest tight - binding model for graphene , with only three off - diagonal elements in each row ( or column ) of the hamiltonian .",
    "we expect that much higher speedup factors can be obtained when considering more complicated tight - binding models .",
    "only electronic transport has been considered in this work ; extension of our gpu implementation to thermal transport @xcite should be straightforward and a higher acceleration rate can be expected due to the higher computational intensity resulting from the denser phonon hamiltonian .",
    "our methods can also be extended to study other properties such as local density of states @xcite , which serves an alternative method for studying anderson localization . for the interested reader ,",
    "our gpu code is available upon request .",
    "starting from the kubo - greenwood formula , we have presented a unified picture of the green - kubo formula based on the velocity auto - correlation and the einstein formula based on the mean square displacement for dc electrical conductivity and demonstrated their equivalence for diffusive transport .",
    "we also compared the kernel polynomial method and the fourier transform method for approximating the @xmath10 function and found that they can be equally used but the former is more efficient .",
    "the demonstration of the equivalence between the green - kubo and the einstein formula and that between the kernel polynomial method and the fourier transform method validates our implementation non - trivially .    using the developed gpu code",
    ", we performed a comprehensive evaluation on the applicability of the method by studying transport properties of graphene systems in the ballistic , diffusive and localized regimes .",
    "in all the transport regimes , we found that the division - based definition of the conductivity in the einstein formalism is not equivalent to the correct derivative - based definition , and should be used with caution .",
    "in the ballistic regime , we justified the definition of length in the einstein formalism : @xmath268 , where @xmath21 is the mean square displacement .",
    "we found that the quantized conductance for graphene nanoribbons can be accurately calculated except for the band edges . around the band edges ,",
    "the conductance is overestimated .",
    "we pointed out that this overestimation arises from the difficulty of correctly calculating the density of states and the velocity , which are both singular around the band edges .    in the diffusive regime , we proposed a new way of finding the semi - classical conductivity and compared it with other approaches . especially , we established a connection between our methods and a method which directly evaluates the kubo - greenwood formula by expanding both of the @xmath10 functions using the kernel polynomial method .",
    "although the green - kubo formula is equivalent to the einstein formula in the diffusive regime , the former is not as practical as the latter in the localized regime .",
    "the reason is that the former is based on a time - integration and thus requires a small time step , while the latter is based on a time - derivative and does not require a small time step .    in the localized regime",
    ", the einstein formula can produce results which are consistent with those obtained by the negf method up to some critical length , @xmath269 , where @xmath256 is the localization length .",
    "although the definition of length can only be trusted when @xmath269 , in practice , this is enough to observe the weak - to - strong localization transition .",
    "more work is needed to clarify the still controversial topics of anderson localization in graphene .",
    "we thank aires ferreira , aurlien lherbier , stephan roche , and shengjun yuan for helpful discussions .",
    "this research has been supported by the academy of finland through its centres of excellence program ( project no .",
    "251748 ) .",
    "h. ishii , n. kobayashi , and k. hirose , order-@xmath44 electron transport calculations from ballistic to diffusive regimes by a time - dependent wave - packet diffusion method : application to transport properties of carbon nanotubes , phys .",
    "b * 82 * , ( 2010 ) 085435 .",
    "a. lherbier , b. biel , y .- m .",
    "niquet , and s. roche , transport length scales in disordered graphene - based materials : strong localization regimes and dimensionality effects , phys .",
    "lett . * 100 * , ( 2008 ) 036803 .",
    "n. leconte , a. lherbier , f. varchon , p. ordejon , s. roche , and j .- c .",
    "charlier , quantum transport in chemically modified two - dimensional graphene : from minimal conductivity to anderson localization , phys .",
    "b * 84 * ( 2011 ) 235420 .",
    "a. cresti , f. ortmann , t. louvet , d. van tuan , and s. roche , broken symmetries , zero - energy modes , and quantum transport in disordered graphene : from supermetallic to insulating regimes , phys .",
    "lett . * 110 * , ( 2013 ) 196601 .",
    "z. fan , t. siro , and a. harju , accelerated molecular dynamics force evaluation on graphics processing units for thermal conductivity calculations , computer physics communications , * 184 * , ( 2013 ) 1414 - 1425 .",
    "a. ferreira , j. viana - gomes , j. nilsson , e. r. mucciolo , n. m. r. peres , and a. h. castro neto , unified description of the dc conductivity of monolayer and bilayer graphene at finite densities based on resonant scatterers , phys .",
    "b * 83 * , ( 2011 ) 165402 ."
  ],
  "abstract_text": [
    "<S> we implement , optimize , and validate the linear - scaling kubo - greenwood quantum transport simulation on graphics processing units by examining resonant scattering in graphene . </S>",
    "<S> we consider two practical representations of the kubo - greenwood formula : a green - kubo formula based on the velocity auto - correlation and an einstein formula based on the mean square displacement . </S>",
    "<S> the code is fully implemented on graphics processing units with a speedup factor of up to 16 ( using double - precision ) relative to our cpu implementation . </S>",
    "<S> we compare the kernel polynomial method and the fourier transform method for the approximation of the dirac delta function and conclude that the former is more efficient . in the ballistic regime , the einstein formula can produce the correct quantized conductance of one - dimensional graphene nanoribbons except for an overshoot near the band edges . in the diffusive regime , the green - kubo and the einstein formalisms are demonstrated to be equivalent . </S>",
    "<S> a comparison of the length - dependence of the conductance in the localization regime obtained by the einstein formula with that obtained by the non - equilibrium green s function method reveals the challenges in defining the length in the kubo - greenwood formalism at the strongly localized regime .    </S>",
    "<S> graphene , quantum transport , kubo - greenwood formula , chebyshev polynomial expansion , graphics processing unit , cuda </S>"
  ]
}
{
  "article_text": [
    "the following list shows a complete list of commands from singularity theory that have so far been implemented in singularity :    * ` verify ` ; section [ secverify ] , * ` normalform ` ; section [ secnormalform ] , * ` universalunfolding ` ; section [ secuniversalunfolding ] , * ` recognitionproblem ` ; section [ secrecognitionproblem ] , * ` checkuniversal ` ; subsection [ seccheckuniversal ] , * ` transformation ` ; section [ sectransformation ] , * ` transitionset ` ; subsection [ sectransitionset ] , * ` persistentdiagram ` ; subsection [ secpersistentdiagram ] , * ` nonpersistent ` ; subsection [ secnonpersistent ] , * ` intrinsic ` ; section [ secintrinsic ] , * ` algobjects ` , ` rt ` , ` t ` , ` p ` , ` s ` , ` tangentperp ` , ` sperp ` , ` intrinsicgen ` ; section [ secalgobjects ] .",
    "+    the following enlists all implemented tools from computational algebraic geometry :    * ` multmatrix ` ; section [ secmultmatrix ] , * ` division ` ; section [ secdivision ] , * ` standardbasis ` ; section [ secstandardbasis ] , * ` colonideal ` ; section [ seccolonideal ] , * ` normalset ` ; section [ secnormalset ] .",
    "+    in this user guide we will explain the capabilities , options and how each of these commands work .",
    "after installing singularity on maple software running on your computer , the above list is accessible by using the command ` with(singularity ) ` .",
    "in fact , maple enlists all the commands in the above two tables as its output .",
    "the terminology `` singularity theory '' has been used to deal with many different problems in different mathematical disciplines .",
    "singularity theory here refers the methodologies in dealing with the qualitative behavior of local zeros @xmath0 where @xmath1 is a state variable and @xmath2 is a distinguished parameter .",
    "the cases of multi - dimensional parameters are dealt with through the notions of unfolding .",
    "singularity will be soon enhanced to deal with the cases of multi - dimensional state variables .    in many real life problems at certain solutions ,",
    "@xmath3 is _ singular _",
    ", i.e. , @xmath4 a singular germ @xmath3 subjected to smooth changes demonstrates surprising changes in the _ qualitative properties _ of the solutions , e.g. , changes in the number of solutions .",
    "this phenomenon is called a _ bifurcation_.",
    "we define the _ qualitative properties _ as the invariance of an equivalence relation .",
    "the equivalence relation used in singularity is _ contact equivalence _ and is defined by @xmath5 where @xmath6 while @xmath7 is locally a diffeomorphism such that @xmath8 and @xmath9 .",
    "in this section we describe how to determine the permissible computational ring and the truncation degree .",
    "in fact , each smooth germ with a nonzero - infinite taylor series expansion must be truncated at certain degree .",
    "further , there are four different options in singularity for computational rings , i.e. , polynomial , fractional , formal power series and smooth germ rings , that they each can be used by commands in singularity for bifurcation analysis of each singular germ .",
    "the command ` verify(g ) ` derives the following information about the singular germ @xmath10 for correct and efficient computations :    1 .",
    "the permissible computational rings for the germ @xmath10 .",
    "the least permissible truncation degree @xmath11 for computations involving the germ @xmath10 .",
    "in other words , the computations modulo degrees of higher than ( but not equal to ) @xmath11 does not lead to error .",
    "3 .   our recommended computational ring .",
    "we are also interested in the above information for the following purposes :    * a list of germs @xmath12 in two variables for either division , standard basis computations , multiplication matrix , or intrinsic part of an ideal . * a parametric germ @xmath13 with @xmath14 for either transition set computation or persistent bifurcation diagram classification .",
    "+    l|x * command * & * description * + ` verify`(@xmath10 ) & derives the permissible computational rings and permissible truncation degree .",
    "+ default upper bound for truncation & a permissible truncation degree is computed as long as it is less than or equal to @xmath15      * ` ideal ` ; ` persistent ` ; the command ` verify`(@xmath12 , ` ideal ` , ` vars ` ) deals with an ideal @xmath16 generated by @xmath12 , i.e. , @xmath17 where @xmath12 is a list of germs .",
    "it returns the permissible computational ring and a permissible truncation degree when the ideal @xmath16 is of finite codimension .",
    "otherwise , it remarks that  the ideal is of infinite codimension .",
    "\" however , the command ` verify`(@xmath18 , ` persistent ` , ` vars ` ) determines the least permissible truncation degree @xmath11 so that the computations associated with either persistent bifurcation diagram classification or transition sets would be correct . * ` fractional ` ; ` formal ` ; ` smoothgerms ` ; ` polynomial ` ; the command uses either the rings of fractional germs , formal power series or ring of smooth germs . *",
    "upper bound for truncation degree @xmath19 ; this lets the user to change the default upper bound truncation degree from @xmath20 to @xmath19 .    `",
    "verify`(@xmath21 ) gives    the following rings are allowed as the means of computations :    ring of smooth germs    ring of formal power series    ring of fractional germs    the truncation degree must be : 3    ` verify`(@xmath21 , 2 ) gives the following warning message :    `` increase the upper bound for the truncation degree ! ''    ` verify`(@xmath22 , \\verb\"ideal \" , [ x , \\lambda]$ ] ) gives    the following rings are allowed as means of computations :    ring of smooth germs    ring of formal power series    ring of fractional germs    the truncated degree must be : 4    command ` verify`(@xmath21 , ` persistent ` , @xmath23 $ ] ) gives the least permissible truncation degree to be 2 .",
    "a germ @xmath24 is called a normal form for the singular germ @xmath3 when @xmath25 has a minimal set of monomial terms in its taylor expansion among all contact - equivalent germs to @xmath10 .",
    "therefore , it is easier to analyze the solution set of @xmath25 while it has the same qualitative behavior as zeros of @xmath10 do .",
    "+    l|x * command / the default options * & * description * + ` normalform`(@xmath10 ) & this function derives a normal form for @xmath10 .",
    "+ the computational ring & the default ring is the ring of fractional germs . + verify / warning / suggestion & it automatically verifies if fractional germ ring is sufficient for normal form computation of the input germ @xmath26 otherwise , it writes a warning note along with a cognitive suggestion for the user .",
    "+ truncation degree & it , by default , detects the maximal degree @xmath11 in which @xmath27 thus , normal forms are computed modulo degrees higher than or equal to @xmath28 + input germ & it , by default , takes the input germ @xmath10 as a polynomial or a smooth germ .",
    "it truncates the smooth germs modulo the degree @xmath28      * @xmath29 specifies the degree @xmath11 so that computations are performed modulo degree @xmath30 .",
    "when the input degree @xmath11 is too small for the input singular germ @xmath10 , the computation is not reliable .",
    "thus , an error warning note is returned to inform the user of the situation along with cognitive suggestions to circumvent the problem . * ` fractional ` , ` formal ` , ` smoothgerms ` ; ` polynomial ` ; the command uses either the rings of fractional germs , formal power series or ring of smooth germs .",
    "when it is necessary , warning / cognitive suggestions are given accordingly .",
    "* ` list ` ; this generates a list of possible normal forms for the germ @xmath10 .",
    "different normal forms may only occur due to possible alternative eliminations in intermediate order terms .",
    "` normalform`(@xmath21 , 10 , ` smoothgerms ` ) generates x^3- . while ` normalform`(@xmath31 , 10 , ` formal ` ) gives rise to x^4-^2 . using ` normalform`(@xmath32 , 10 , ` polynomial ` ) gives the following suggestion and warning note .",
    "warning : the polynomial germ ring is not suitable for normal form computations .",
    "suggestion : use the command ` verify ` to find the appropriate computational ring .",
    "the following output might be wrong .",
    "the germ is an infinite codimensional germ .",
    "in fact the above statement is wrong since the high order term ideal contains ^6+^4+^2 .    now",
    "the command ` verify`(@xmath33 gives rise to    fractional germ ring ; formal power series ring ; smooth germ ring .",
    "thus , we use ` normalform`(@xmath32 , 10 , ` fractional ` ) to obtain    x^5+x^3+^2 .",
    "generally in dealing with singular problems , extra complications are experienced in the laboratory data than what are predicted by the modeling theoretical analysis . the problem here is due to _ modeling imperfections _ ; natural phenomena can not be perfectly modeled by a mathematical model .",
    "in fact one usually neglects the impact of many factors like friction , pressure , and/or temperature , etc . , to get a manageable mathematical model .",
    "otherwise one will end up with a mathematical modeling problem with too many or infinite number of parameters .",
    "the imperfections around singular points may cause dramatic qualitative changes in the solution set of the model .",
    "universal unfolding gives us a natural way to circumvent the problem of imperfections .",
    "a parametric germ @xmath34 is called an _ unfolding _ for @xmath3 when @xmath35 an unfolding @xmath34 for @xmath10 is called a _",
    "versal unfolding _",
    "when for each unfolding @xmath36 of @xmath3 there is a smooth germ @xmath37 so that @xmath18 is contact - equivalent to @xmath38 roughly speaking , a versal unfolding is a parametric germ that contains a contact - equivalent copy of all small perturbations of @xmath3 .",
    "a versal unfolding with insignificant parameters is not suitable for the bifurcation analysis .",
    "so , we are interested in a versal unfolding that has a minimum possible number of parameters , that is called _",
    "universal unfolding_. in other words , universal unfolding has the minimum possible number of parameters so that they accommodate all possible qualitative types that small perturbations of @xmath3 may experience .",
    "l|x * command / the default options * & * description * + ` universalunfolding`(@xmath10 ) & this function computes a universal unfolding for @xmath10 .",
    "+ the computational ring & by default , singularity uses the ring of fractional germs . + verify / warning / suggestion & this automatically derives the least sufficient degree for truncations and also verifies if fractional germ ring is sufficient for computation .",
    "otherwise , it writes a warning note along with guidance on the suitable rings for computations and hints at other possible capabilities of singularity .",
    "+ degree & it , by default , detects the maximal degree @xmath11 in which terms of degree higher than or equal to @xmath30 can be ignored .",
    "thus , the computations are performed modulo degree @xmath28 + input germ & the default input germ @xmath10 is a polynomial or a smooth germ . for an input smooth germ ,",
    "the default procedure ` universalunfolding ` truncates the smooth germs modulo @xmath39 i.e. , modulo degrees higher than and equal to @xmath28      * ` normalform ` ; a universal unfolding for normal form of @xmath10 is derived by this option . * ` list ` ; this function provides the list of possible universal unfoldings for @xmath10 . * @xmath11 ; the degree @xmath11 determines the truncation degree so that all computations are performed modulo @xmath28 for low degrees of @xmath40 it may derive wrong results .",
    "thus , it gives a warning error and a suggestion for the user when @xmath11 must be a larger number for correct result .",
    "* ` fractional ` ; ` formal ` ; ` smoothgerms ` ; ` polynomial ` ; this determines the computational ring .",
    "the command ` universalunfolding ` gives a warning note when the user s choice of computational ring is not suitable for computations involving the input germ @xmath10 and writes a suggestion to circumvent the problem .    `",
    "universalunfolding`@xmath41 gives rise to & x^3-x+ _ 1+_2 & + & x^3-x+ _ 1+_2 x^2 . & ` universalunfolding`@xmath42 leads to & x^3-x+_2x^2+_1 & + & x^3-x+_2+_1 . & now consider @xmath43    ` universalunfolding`@xmath44 gives the following warning error and suggestion :    _ warning : the ring of polynomial germs is not suitable for normal form computations of @xmath26 _",
    "_ suggestion :",
    "the permissible computational ring options are _ ` fractional ` , ` smoothgerms ` _ and _ ` formal ` .",
    "we describe the command ` recognitionproblem ` on how it answers the recognition problem , that is , what kind of germs have the same normal form or universal unfolding for a given germ @xmath10 ?      *",
    "* low order terms*. low order terms refer to the monomials in @xmath45 which do not appear in any contact - equivalent copy of @xmath10 . *",
    "* high order terms*. the ideal @xmath46 represents the space of negligible terms that are called high order terms .",
    "these terms are eliminated in normal form of @xmath26 * * intermediate order terms*. a monomial term are called an intermediate order term when it is neither low order nor high order term .",
    "intermediate order terms may or may not be simplified in normal form computation of smooth germs .",
    "the answer for the recognition problem for normal form of a germ @xmath10 is a list of zero and nonzero conditions for certain derivatives of a hypothetical germ @xmath47 when these zero and nonzero conditions are satisfied for a given germ @xmath48 the germ @xmath25 and @xmath10 are contact - equivalent .",
    "each germ with a minimal list of monomial terms in its taylor expansion constitutes a normal form for @xmath26      consider a parametric germ @xmath34 and a germ @xmath49 then , @xmath12 is usually a universal unfolding for @xmath10 when @xmath50 and certain matrix associated with @xmath12 has a nonzero determinant .",
    "thus , the answer of the recognition problem for universal unfolding is actually a matrix whose components are derivatives of a hypothetical parametric germ @xmath12 satisfying @xmath50 .",
    "+    l|x * command/ default * & * description * + ` recognitionproblem`(@xmath10 ) & returns a list of zero and nonzero conditions on certain derivatives of a hypothetical germ @xmath25 . a given germ @xmath25 is contact - equivalent to @xmath10 when those conditions are satisfied .",
    "+ computational ring & the default is fractional germ ring .",
    "the lack of warning notes is a confirmation that the fractional germ ring is suitable for computation .",
    "+ truncation degree & it automatically computes an optimal truncation degree @xmath11 and performs the remaining computations modulo degrees of higher than ( but not equal to ) @xmath11 .",
    "+ verification / warning & a warning note of possible errors is given when the computational ring is not suitable for the germ @xmath26 the truncation degree is also checked and if it is not sufficiently large enough , a warning note is given .",
    "warning notes are accompanied with cognitive suggestions to circumvent the problem .",
    "* @xmath11 ; this number represents the truncation degree . * computational ring : ` fractional ` , ` formal ` , ` smoothgerms ` ; ` polynomial ` ; the command accordingly uses either the rings of fractional germs , formal power series or smooth germs . * ` universalunfolding ` ; it returns a matrix .",
    "the matrix components consists of certain derivatives of a hypothetical parametric germ @xmath12 .",
    "then , a parametric germ @xmath34 is a universal unfolding for @xmath3 when @xmath50 and the associated matrix has a nonzero determinant .",
    "` recognitionproblem`(@xmath51 , 6 , ` formal ` ) gives rise to    `` nonzero condition= '' , @xmath52 $ ] + `` zero condition= '' , @xmath53 $ ] .    ` recognitionproblem`(@xmath54 , universalunfolding , 6 , ` smoothgerms ` ) gives rise to (    ccccc 0 & 0 & 0 & g_x , x , x(0 ) & g_x , x,(0 ) + 0 & g _ , ( 0 ) & 0 & g_x , x,(0 ) & g_x , , ( 0 )",
    "+ g__1(0 ) & g _ , _",
    "1(0 ) & g_x , _",
    "1(0 ) & g_x , x , _",
    "1(0 ) & g_x , , _",
    "1(0 ) + g__2(0 ) & g _ , _ 2(0 ) & g_x , _",
    "2(0 ) & g_x , x , _ 2(0 ) & g_x , , _",
    "2(0 ) + g__3(0 ) & g _ , _",
    "3(0 ) & g_x , _",
    "3(0 ) & g_x , x , _",
    "3(0 ) & g_x , , _",
    "3(0 ) +    ) 0 . +    let @xmath55 be a parametric germ where @xmath56 .",
    "+    l|x * command * & * description * + ` checkuniversal`(@xmath12 ) & this function checks if a parametric germ @xmath12 is a universal unfolding for @xmath57    ` checkuniversal`(@xmath58 ) gives    `` yes ''",
    "for each two contact - equivalent germs @xmath25 and @xmath59 there are diffeomorphic germs @xmath60 and smooth germ @xmath6 such that @xmath61 @xmath9 and @xmath62 . +    l|x * command / option * & * description * + ` transformation`(@xmath10 ) & this function computes the smooth germs @xmath63 transforming the germ @xmath10 into its normal form modulo degree @xmath40 where terms of degree higher than or equal to @xmath11 are high order terms .",
    "+ transformation(@xmath64 ) & this function computes suitable smooth maps @xmath63 for transforming the germ @xmath10 into @xmath25 modulo high order terms .",
    "* @xmath29 this number specifies a degree @xmath11 so that computations are performed modulo degrees of higher or equal to @xmath11 .",
    "when @xmath11 is less than the degrees of high order terms a warning note is given .    `",
    "transformation`(@xmath65 ) gives rise to x&=&x++x + ^2 , ( ) = , + s&=&1 - 3x^2 - 3x -^2 - 3x^3 - 9 x^2 - 9x ^2 - 3 ^3 .",
    "bifurcation diagram analysis of a parametric system is performed by the notion of _ persistent _ and _ non - persistent _ bifurcation diagrams .",
    "bifurcation diagram of is defined by @xmath66 a bifurcation diagram is called _ persistent _ when the bifurcation diagrams subjected to small perturbations in parameter space remain self contact - equivalent .      the classification of persistent bifurcation diagrams are performed by the notion of transition sets . in fact , a subset of parameter space is called _ transition set _ when the associated bifurcation diagrams are non - persistent . _",
    "transition set _ is denoted by @xmath67 and is usually a hypersurface of codimension one for germs of finite codimension .",
    "then , one choice from each connected components of the complement of the transition set @xmath67 makes a complete persistent bifurcation diagram classification of a given parametric germ .",
    "this provides a comprehensive insight into the persistent zero solutions of a parametric germ .",
    "the parameters associated with non - persistent bifurcation diagrams are split into three categories : _ bifurcation _ , _ hysteresis _ , and _",
    "double limit point_. these are defined and denoted by @xmath68 the transition set @xmath67 is now given by @xmath69 .",
    "suppose that @xmath18 is a singular parametric germ .",
    "+    l|x * command / the default options * & * description * + ` transitionset`(@xmath13 ) & this function estimates the transition set in terms of parameters of @xmath70 the default is to eliminate @xmath71 and @xmath2 variables from the equations given by @xmath72 .",
    "+ truncation degree & for non - polynomial input germs , by default , it automatically computes a suitable truncation degree @xmath11 and truncates the input germ at degree @xmath11 , i.e. , preserving degrees of less than and equal to @xmath11 .",
    "* @xmath73 $ ] ; this hints to derive the transition set in terms of these variables while the attempts are best made to eliminate the rest of variables from the equations ( as many as possible ) . * ` plot ` ; this function plots / animates transition set in parameter space . *",
    "@xmath74 ; when codimension is more than or equal to three 3 , some parameters @xmath75 will be taken as fixed by default .",
    "this option refines the ` plot`/`animate ` option by allowing to change the fixed parameters to @xmath76 * @xmath11 ; determines the truncation degree .",
    "the user may use the command ` verify ` to find an appropriate degree @xmath77    here , we bring two examples from ( * ? ? ?",
    "* page 206 ) .    ` transitionset`(@xmath78 $ ] ) gives rise to & : = & \\{(_1 , _ 2 , _ 3)|_2 ^ 4+_2 ^ 2_3+_1=0 } , + & : = & \\{(_1 , _ 2 , _ 3)|128_2",
    "^ 2_3 ^ 3 + 3_3 ^ 4 + 72_1_3 ^ 2 + 432_1 ^ 2=0 } , + & : = & \\{(_1 , _ 2 , _",
    "3)|-_3 ^ 2 + 4_1=0,_30}.    ` transitionset`(@xmath79 $ ] ) derives & : = & , + & : = & \\{(_1 , _ 2 , _ 3)|-81_1 _ 3 ^ 4 + 27_2 ^ 2_3 ^ 3 + 360_1 ^ 2_3 ^ 2 + & & -540_1_2 ^ 2_3 + 135 _ 2 ^ 4 - 400_1 ^ 3=0 } , + & : = & \\{(_1 , _ 2 , _ 3)|-16_3 ^ 6 + 224_1_3 ^ 4 - 88_2 ^ 2_3 ^ 3 + & & -1040_1 ^ 2_3 ^ 2 + 360 _",
    "1_2 ^ 2_3 + 135_2 ^ 4 + 1600_1 ^ 3=0}.    ` transitionset`(@xmath80 , [ x , \\lambda , \\alpha_1 , \\alpha_2 ] , 5 $ ] ) generates figure [ 1 ] .",
    "` transitionset`(@xmath81 , [ x , \\lambda , \\alpha_1 , \\alpha_2 , \\alpha_3]$ ] ) creates an animation ending at figure [ 2 ] .",
    "the command @xmath82 follows the following table .",
    "+    l|x * command / the default options * & * description * + ` persistentdiagram`(@xmath18 ) & this function plots / animates bifurcation diagrams in @xmath83 plane by passing through the parameter space .",
    "the default path is a circle around the singular point and it may include at most two parameters .",
    "* @xmath74 ; for parameter space of dimension more than two , it chooses three values for @xmath84 , i.e. , a negative , zero and a positive value for @xmath74 .",
    "then , it plots / animates bifurcation diagrams in @xmath83 plane by passing ( circular path by default ) through parameter space for fixed parameter @xmath84 . * @xmath85 ; this function animates bifurcation diagrams in @xmath83 plane by passing through the given path ( @xmath85 ) . * ` shortlist ` ; ` intermediatelist ` ; ` completelist ` ; either of these generates a list of points associated persistent bifurcation diagrams . * ` plot ` ; this option plots the persistent bifurcation diagrams associated with parameter points output of the previous option , i.e. , ` shortlist ` ; ` intermediatelist ` ; ` completelist ` . *",
    "@xmath11 ; determines the truncation degree of the germ @xmath70    now we present how the command ` persistentdiagram ` works .    `",
    "persistentdiagram`(@xmath86 , ` plot ` , ` completelist ` , @xmath87 $ ] ) generates a list from which the list of inequivalent bifurcation diagrams are chosen in figure [ fig2 ]",
    ".      extra sources of non - persistent is caused by singular boundary conditions of a parametric scalar map restricted to a bounded domain .",
    "let @xmath88 be a closed disk and @xmath89 be two closed intervals .",
    "next , consider @xmath90 where @xmath91 and @xmath92 ; see ( * ? ? ?",
    "* pages 154 - 158 ) .",
    "the new non - persistent sources are defined by _",
    "c&:= & \\{wf(x,,)=0 ( x , ) ul } , + _ sh&:= & \\{wf = f_x=0 ( x , ) ul } , + _ sv&:= & \\{wf = f_x=0 ( x , ) ul } , + _ t&:= & \\{wf = f_=0 ( x , ) ul } , _ 1&:= & \\{wf=0 ( x_0 , , ) ( x_0,)u l , + & & x_0x f = f_x=0 ( x , , ) ( x , ) u l } , + _ 2&:= & \\{w(x_1 , ) , ( x_2 , ) ul ,",
    "x_1x_2 f = 0 + & & ( x_i , , ) i=1 , 2 } , & : = & \\{wf = f_x = f_=0 ( x , , ) + & & ( x , ) ul } , + & : = & \\{wf = f_x = f_xx=0 ( x , , ) + & & ( x , ) ul } , + _ d&:= & \\{w(x_1 , ) , ( x_2 , ) ul , x_1x_2 f= f_x=0 + & & ( x_i , , ) i=1,2}. in this case , the transition set is given by @xmath93 , here & : = & _ c_sh_sv_t , + & : = & _ d_1_2 . for a finite codimension singular germ ,",
    "@xmath67 is a hypersurface of codimension one and each two choices from a connected component in the complement of @xmath67 are contact - equivalent .",
    "therefore , we can classify the persistent bifurcation diagrams by merely choosing one representative parameter from each components of the complement set of @xmath67 and plotting the associated bifurcation diagrams .",
    "the command ` nonpersistent ` is designed for this purpose .",
    "+    l|x * command / default option * & * description * + ` nonpersistent`(@xmath94 , @xmath95 , @xmath96 ) & this function computes transition set for @xmath94 where bifurcation diagrams are limited on @xmath97 . here ,",
    "@xmath95 and @xmath96 are only taken as closed intervals .",
    "further , it plots the transition set .",
    "+ box of figures & it plots transition set in @xmath98\\times [ -1 , 1]$ ] by default .",
    "* @xmath99 ; this option enforces that the computed transition set is plotted in @xmath100 instead of the default square @xmath98\\times [ -1 , 1]$ ] . * ` vertical ` ( ` horizontal ` is also similar ) ; this assumes that the boundary conditions is @xmath101 i.e. , there is only singular boundary conditions on vertical boundary lines .    `",
    "nonpersistent`(@xmath102 , [ 1,3]$ ] ) gives rise to _ c&= & ( _ 1 , _ 2 , _",
    "3)| _ 1 + 18 + 4_3+_2=0 , _ 1 + 22 + 4_3 + 3_2=0 , + & & _ 1 + 14 + 4_3+_2=0 , _ 1 + 10 + 4_3 + 3_2=0 , + _ sh&= & ( _ 1 , _ 2 , _ 3)| 4_2_3-_1 + 32_2 + 4_3 + 48=0 , 4_2_3+_1 + & & + 32_2 - 4_3 - 48=0 , + _ sv&=&(_1 , _ 2 , _ 3)| 16_1_3 ^ 4 + 16_2_3 ^ 4 - 128_1 ^ 2_3 ^ 2 - 256_1_2_3 ^ 2 -128_2 ^ 2_3 ^ 2 + & & + 256_1 ^ 3 + 768_1 ^ 2_2 + 768_1_2 ^ 2 + 256_2 ^ 3 - 4_3 ^ 3 + 144_1_3 + 144_2_3 - 27=0 , + & & 16_1_3 ^ 4 + 48_2_3 ^ 4 - 128_1 ^ 2_3 ^ 2 - 768_1_2_3 ^ 2 -1152_2 ^",
    "2_3 ^ 2 + 256_1 ^ 3 + 2304_1 ^ 2_2 + & & + 6912_1_2 ^ 2 + 6912_2 ^ 3 - 36_3 ^ 3 + 1296_1_3 + 3888_2_3 - 2187=0 , + _ t&= & ( _ 1 , _ 2 , _",
    "3)| _ 2 + 2=0 , 4_3 + 16+_1=0 , _ 2 - 2=0 , 4_3 + 16+_1=0 , + _ 1&= & ( _ 1 , _ 2 , _",
    "3)|4_2 ^ 2_3 ^ 3 + 80_2 ^ 2_3 ^ 2 + 16_2_3 ^ 3 - 72_1_2_3 + 512_2 ^ 2_3 + & & + 32_2_3 ^ 2 + 16_3 ^ 3 + 27_1 ^ 2 -320_1_2 + 72_1_3 + 1024_2 ^ 2 - 384_2_3 + & & + 176_3 ^ 2 + 224_1 - 1024_2 + 640_3 + 768 , 4_2 ^ 2_3 ^ 3 + 80_2 ^ 2_3 ^ 2 - 16_2_3 ^ 3 + & & + 72_1_2_3 + 512_2 ^ 2_3 - 32_2_3 ^ 2 + 16_3 ^ 3 + 27_1 ^ 2 + 320_1_2 + 72_1_3 + & & + 1024_2 ^ 2 + 384_2_3 + 176_3 ^ 2 + 224_1 + 1024_2 + 640_3 + 768=0 , + _ 2&= & ( _ 1 , _ 2 , _ 3)|4_3 + 16+_1=0 , + & = & ( _ 1 , _ 2 , _ 3)| _ 2 ^ 4+_2 ^ 2 _ 3+_1=0 , + & = & ( _ 1 , _ 2 , _",
    "3)| 128_2 ^ 2_3 ^ 3 + 3_3 ^ 4 + 72_1_3 ^ 2 + 432_1 ^ 2=0 , + _ d&= & ( _ 1 , _ 2 , _ 3)| _ 3 ^ 2 - 4_1=0 .",
    "+ generates figure [ fig3 ] .    in this section",
    "we describe how to compute some tools from computational algebraic geometry ; see @xcite for more information .",
    "let @xmath103 be either of the rings of germs @xmath104 @xmath105,$ ] @xmath106_{\\langle x , \\lambda\\rangle}$ ] or @xmath107 $ ] ; see @xcite .",
    "now we describe how to compute the multiplication matrix defined by [ mult ] _ u , j : , _ u , j(f+j):= uf+ j , where @xmath108 is an ideal generated by a finite set @xmath109 i.e. , @xmath110 , and @xmath111 is a monomial ; also see ( * ? ? ? * equation 3.4 ) .",
    "+    l|x * command / option * & * description * + ` multmatrix`(@xmath112 , @xmath111 ) & this function derives @xmath113 where @xmath111 is a monomial , @xmath113 is defined by equation .",
    "+ default computational ring & the fractional germ ring .",
    "+ truncation degree & when the input set of germs @xmath112 only includes polynomials , ` multmatrix`(@xmath112 , @xmath111 ) does not need truncation degree .",
    "however , for non - polynomial input germs , a truncation degree @xmath11 needs to be included .",
    "+      * @xmath11 ; determines the truncation degree .",
    "the user is advised to use the command ` verify ` to find an appropriate truncation degree @xmath77 * computational ring : ` fractional ` , ` formal ` , ` smoothgerms ` ; ` polynomial ` ; the command uses either the rings of fractional germs , formal power series or ring of smooth germs .",
    "the command ` verify ` is an appropriate tool to find / verify the appropriate computational ring .",
    "the command ` multmatrix`(@xmath114 , x , 6 , \\verb\"formal\"$ ] ) gives rise to    (    ccccccccc 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 + 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 + 1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 + 0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0 + 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 + 0 & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0 + 0 & 0 & 0 & 0 & 0 & 1 & 0 & 0 & - + 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 + 0 & 0 & 0 & 0 & 0 & 0 & 0 & 1 & 0 +    ) .",
    "the following table describes how to use the command ` division ` to divide a germ @xmath10 by a set of germs @xmath115 where all these germs are in terms of the variables in ` vars ` .",
    "note that the ordering in the list of variables ` vars ` is important and determines how anti - lexicographical ordering is defined .",
    "+    l|x * command * & * description * + ` division`(@xmath10 , @xmath12 , ` vars ` ) & this divides the germ @xmath10 by the germs in @xmath12 using anti - lexicographical ordering .",
    "+      * ` formal ` ; ` smoothgerms ` ; ` polynomial ` ; ` fractional ` ; this determines the computational germ ring . in order to verify /",
    "check the computational ring for the division , one is advised to use the command ` verify`(g , ` ideal ` , ` vars ` ) and find the permissible computational ring .",
    "* @xmath11 ; this option enforces the computations modulo degrees higher than or equal to @xmath28 the command ` verify`(g , ` ideal ` , ` vars ` ) also suggests an optimal permissible truncation degree @xmath11 .    for an example we use",
    "` division`(@xmath116,$ ] @xmath117 , 8,\\verb\"smoothgerms\"$ ] ) .",
    "this returns -1as the remainder of ( x^7)-1divided by \\{x^5+x^6 ( ) , xy^3-x^6-x^7 , ( x^7)}using the anti - lexicographical ordering with @xmath118 .",
    "now we describe how to compute a standard basis for a set of germs in either of the following local rings : fractional germs @xmath106_{\\langle x , \\lambda\\rangle}$ ] , formal power series @xmath105,$ ] and ring of smooth germs @xmath119 ; see @xcite .",
    "the command ` standardbasis ` follows the table and options described below .",
    "note that ` vars ` denotes an order list of variables and the germs in @xmath12 are in terms of the variables in ` vars ` .",
    "the anti - lexicographical ordering is here used while it is determined by the ordering of variables in ` vars ` .",
    "+    l|x * command * & * description * + ` standardbasis`(@xmath12 , ` vars ` ) & computes the standard basis of the polynomial germs in @xmath12 in the fractional germ ring .",
    "+ default computational ring & fractional germ ring .",
    "+ default input & the default germs in @xmath12 must be polynomial germs . for the cases of non - polynomials , it needs a truncation degree @xmath77      * @xmath11 ; this determines the truncation degree . *",
    "consider the cases that the option @xmath11 is used .",
    "a warning note is given when the truncation degree @xmath11 is not sufficiently high to guarantee that the output is correct .",
    "a warning note is given like `` the truncation degree is not sufficiently high and thus , the following results might be wrong . '' in this case , for an appropriate truncation degree @xmath120 is given .",
    "* ` formal ` ; ` smoothgerms ` ; ` fractional ` ; this determines the computational germ ring and computes the standard basis accordingly .",
    "for an example , the command ` standardbasis`(@xmath121 , [ x , \\lambda ] , 7 , \\verb\"smoothgerms\"$ ] ) computes the standard basis of the set of germs \\{x^5+x^2(+x)+^2 , x^3 ^ 2+()x , ^6+x^4-x}as @xmath122",
    "the colon ideal @xmath123 refers to the ideal defined by i : g_= \\{f : f g_i}. using the arguments on ( * ? ? ?",
    "* page 22 ) , we have @xmath124 where @xmath125 is a standard basis for the ideal @xmath126}.$ ] the command ` colonideal ` follows this . +    l|x * command * & * description * + ` colonideal`(@xmath16 , @xmath10 ) & computes the colon ideal @xmath127 for @xmath10 in @xmath119 .",
    "` colonideal`(@xmath128,\\lambda$ ] ) leads to the ideal generated by .",
    "for computing universal unfolding of a singular germ @xmath10 , we need to compute a basis for a complement vector space for the tangent space @xmath129 associated with @xmath26 this is equivalent to computing a basis for the quotient space @xmath130 more generally , the command ` normalset`(@xmath16 ) computes a monomial basis for @xmath131 , when @xmath16 is either an ideal or a vector space with finite codimension in the local ring @xmath119 .",
    "+    l|x * command * & * description * + ` normalset`(@xmath112 ) & computes a monomial basis for @xmath131 , when @xmath112 is a list of germs generating an ideal @xmath132 .",
    "for example the command ` normalset`(@xmath133 $ ] ) returns as a list of monomials for the complement of @xmath16 in @xmath134    a user who is not interested in technical details and their commands may simply skip this section .",
    "in this section we describe how to compute the intrinsic part of an ideal or a vector space .",
    "let @xmath112 and @xmath135 be two lists indicating the generators of an ideal and a vector space , respectively .",
    "we intend to compute the maximal intrinsic ideal contained in @xmath136 +    l|x * command / option * & * description * + ` intrinsic`(@xmath112 ) & computes intrinsic part of the ideal generated by @xmath112 . it remarks when the ideal is of infinite codimension .",
    "+ ` intrinsic`(@xmath137 ) & computes intrinsic part of a vector space given by @xmath138 it remarks when the vector space is of infinite codimension .",
    "+ computational ring & the default computational ring is the ring of fractional germs .",
    "+ verify / warning / suggestion & by default , ` intrinsic ` checks and verifies whether the fractional germ ring is sufficient for computation of the intrinsic part of the ideal or vector space spanned by @xmath112 ( and @xmath135 ) .",
    "if fractional germ ring is not sufficient , it gives a warning note of possible errors and a suggestion to circumvent the problem .",
    "` intrinsic ` remarks when the problem might be of infinite codimension . despite possible warning errors , ` intrinsic ` computes the intrinsic part using the fractional germ ring .",
    "* @xmath11 ; this option enforces that the computations are performed modulo degree @xmath77 * ` formal ` ; ` smoothgerms ` ; ` polynomial ` ; ` fractional ` ; this determines the computational germ ring .",
    "it checks and verifies the computations .",
    "it gives warning notes of possible errors and alternative suggestions when it finds them necessary .",
    "for an example ` intrinsic`@xmath139,$ ] @xmath140 @xmath141 leads to m^3+^2 . as for a second example",
    "` intrinsic`(@xmath142 , [ \\lambda x^3 + 2\\lambda^2 , x^3 + 2\\lambda , x^4+\\frac{3}{5}\\lambda x^2 , \\lambda^2 , x^5]$ ] ) results in m^5+m^3+^2 .",
    "singularity theory defines and uses many algebraic objects in the bifurcation analysis of zeros of smooth germs .",
    "these include restricted tangent space @xmath143 , tangent space @xmath144 , high order term ideal @xmath145 , smallest intrinsic ideal associated with a singular germ @xmath146 , a basis for complement of the tangent space @xmath147 , and low order terms @xmath148 ; see @xcite .",
    "these can be computed in singularity using the command ` algobjects ` as well as the individual commands ` rt ` , ` t ` , ` p ` , and ` tangentperp ` .",
    "the individual commands ` rt ` , ` t ` , and ` p ` have the same default and non - default options as ` algobjects ` has as follows .",
    "+    l|x * command / option * & * description * + ` algobjects`(@xmath10 ) & this function computes @xmath143 , @xmath144 , @xmath145 , @xmath147 , @xmath146 , @xmath148 and intrinsic generators of @xmath146 for given @xmath10 . + ` rt`(g ) & this derives the restricted tangent space associated with a scalar smooth germ @xmath10 . + ` t`(g ) & this command provides a nice representation of the tangent space associated with the singular smooth germ @xmath26 the representation uses intrinsic ideal representation as for the intrinsic part of @xmath129 .",
    "+ ` p`(g ) & this computes the high order term ideal associated with the germ @xmath10 .",
    "+ ` tangentperp`(g ) & this first computes @xmath129 , i.e. , the tangent space of the germ @xmath59 and then returns a monomial basis for the complement space of @xmath129 . + ` s`(g ) & computes the smallest intrinsic ideal containing the germ @xmath10 .",
    "+ ` sperp`(g ) & this derives a set of monomials of low order terms for the germ @xmath10 .",
    "+ ` intrinsicgen`(g ) & this derives the intrinsic generators of @xmath149 that determine the nonzero conditions for recognition problem for normal forms .",
    "+ computational ring & the default computational ring is the ring of fractional germs .",
    "+ default degree @xmath11 & for non - polynomial input germs , it computes the least degree @xmath11 so that truncations at degree @xmath11 is permissible .",
    "next , the germ @xmath10 is truncated and all algebraic objects are computed modulo degrees higher than or equal to @xmath30 .      * @xmath11 ; this option enforces the computations modulo degree @xmath28 * ` formal ` ; ` smoothgerms ` ; ` polynomial ` ; ` fractional ` ; this determines the computational germ ring .",
    "it checks and verifies / gives warning notes of possible errors .",
    "now we present three examples of singular germs of high codimension ; see and compare these examples with the examples in ( * ? ? ?",
    "* page 4 ) .",
    "for example we consider a codimension 10 singularity and use ` algobjects`(@xmath150 ) .",
    "it gives & = & m^6+m^3 , + rt & = & m^6+m^3 + x^4 , 3 ^ 2x^3 + 5x^5 , ^2x^3+x^5+^3 , + t&= & m^5+^3+^2x^2+x^4 , x^3+^2 , + /t & = & 1 , , x , ^2 , x^2 , x^3 , x^2 , ^2 x , ^2x^2 , x , + & = & m^5+^3 , + ^ & = & 1 , , x , ^2 , x^2 , x^3 , x^4 , x^2 , ^2 x , ^2 x^2 , x , x^3 , + & = & x^5 , ^3 .",
    "a codimension 20 singularity : ` tangentperp`(@xmath151 ) derives the following t&= & m^9+^3+x^7 , x^8 , x^7 , -2 ^ 2 , + & = & 1 , , x , x^2 , x^3 , x^4 , x^5 , x^6 , x , x^2 , x^3 , x^6 , + & & ^2 x , ^2 x^2 , ^2 x^5 , x^3 ^ 2 , x^4 , x^4 ^ 2 , x^5 , x^6 ^ 2 ."
  ],
  "abstract_text": [
    "<S> this is a user guide for the first version of our developed maple library , named singularity . </S>",
    "<S> the first version here is designed for the qualitative study of local real zeros of scalar smooth maps . </S>",
    "<S> this library will be extended for symbolic bifurcation analysis and control of different singularities including autonomous differential singular systems and local real zeros of multidimensional smooth maps . </S>",
    "<S> many tools and techniques from computational algebraic geometry have been used to develop singularity . </S>",
    "<S> however , we here skip any reference on how this library is developed . </S>",
    "<S> this package is useful for both pedagogical and research purposes . </S>",
    "<S> singularity will be updated as our research progresses and will be released for public access once our draft paper @xcite is peer - reviewed in a refereed journal .    </S>",
    "<S> this is a user guide on how to use the first version of our developed maple library ( named singularity ) for local bifurcation analysis of real zeros of scalar smooth maps ; see @xcite for the main ideas . </S>",
    "<S> we remark that the term _ singularity theory _ has been used in many different mathematics disciplines with essentially different objectives and tools but yet sometimes with similar terminologies ; for examples of these see @xcite . for more detailed information , definitions , and related theorems in what we call here _ </S>",
    "<S> singularity theory _ , we refer the reader to @xcite .    </S>",
    "<S> * verification and warning note*. ` singularity ` is able to check and verify all of its computations . </S>",
    "<S> however , this sometimes adds an extra computational cost . </S>",
    "<S> this happens mainly for finding out the correct and suitable truncation degree and computational ring . </S>",
    "<S> therefore , it is beneficial to skip the extra computations when it is not necessary . for an instance of benefit , </S>",
    "<S> consider that you need to obtain certain results for a large family of problems arising from the same origin . </S>",
    "<S> therefore , you might be able to only check a few problems and conclude about the suitable truncation degree and computational ring for the whole family . </S>",
    "<S> thereby , the commands of ` singularity ` check and verify the output results unless it requires extra computation . in this case , a warning note of not verified output or possible errors is given ; in these cases , a recommendation is always provided on how to verify or circumvent the problem . </S>",
    "<S> lack of warning notes always indicates that the output results have been successfully verified . </S>"
  ]
}
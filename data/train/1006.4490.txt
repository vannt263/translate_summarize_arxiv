{
  "article_text": [
    "a rich diversity in network latency and packet loss rates have become essential for experimental evaluation of bittorrent and other communication protocols used in the internet .",
    "the need for such a diversity in network latency and packet loss rates is because of the heterogeneous nature of the internet  @xcite .",
    "the heterogeneity of the internet is the primary motivation for the creation of testbeds such as planetlab  @xcite .",
    "however , due to the shared nature of the planetlab platform , the results of the experiments performed on planetlab are not reproducible  @xcite . in contrast , dedicated clusters , such as grid5000  @xcite , not only offer a reproducible environment but also enable the scaling of bittorrent experiments by supporting a large number of bittorrent instances on a single machine .",
    "the primary shortcoming of experiments performed on clusters is the absence of the diverse network latency and packet loss rates that can be found in the internet . as _ the impact of the network latency and packet loss on bittorrent performance is not known _ , there exists _ a dilemma while selecting a testbed for the bittorrent experiments_.    the bittorrent protocol uses tcp to efficiently distribute the _ pieces _ of a file to a large number of peers using peer - to - peer ( p2p ) connections  @xcite .",
    "the peers contribute to the file distribution by uploading the pieces that have been downloaded . during the file download , the peers exchange control messages to select the pieces of the file to upload and the peers to whom these pieces are to be uploaded .",
    "bittorrent also allows the users to limit the rate at which data is uploaded and downloaded .",
    "these rate limits allow the users to restrict the network bandwidth that bittorrent can compete for during a bittorrent session . as the users can control the upload process by limiting the upload rates , and bittorrent uses control messages to decide the connections to upload to , bittorrent is inherently different from other tcp based file transfer protocols such as http and ftp .    over the years bittorrent performance",
    "has received considerable attention  @xcite .",
    "as these studies do not evaluate the interaction between tcp and bittorrent , the impact of network latency and packet loss rates on bittorrent performance is not known .",
    "network latency and packet loss introduce a _ ramp - up _ period which is required by tcp to attain the maximum upload rate that can be achieved  @xcite .",
    "bittorrent users that limit the upload rate can therefore limit the impact of tcp ramp - up .",
    "apart from the tcp throughput , the bittorrent performance is also dependent on the control messages exchanged by the peers .",
    "the control messages generated by a peer can generate a delayed response at a remote peer because of the network latency and the packet losses .",
    "the delayed response can affect the various algorithms used by bittorrent , such as the peer selection algorithm which is used to decide the peer to upload to .",
    "due to the above reasons , the analytical models for tcp can not be directly used to provide the impact of network latency and packet loss on bittorrent performance .    in this paper",
    ", we use the download completion time , i.e , the time required to download a file using bittorrent , as a metric to study the impact of network latency and packet loss . in our experiments , we observe that network latency and packet loss have a marginal impact ( less than 15% ) on the download completion time of a file .",
    "we first study the impact of network latency without packet loss .",
    "network latency causes not only delays in receiving control messages but also tcp ramp - up .",
    "we therefore study the impact of network latency by studying the impact of the delays in receiving control messages and tcp ramp - up on the download completion time .",
    "we observe that the download completion time , when the round - trip time ( rtt ) between _ any two peers _ in the torrent is 1000  ms , is not more than 15% of the download completion time when the rtt is 0  ms .",
    "we then study the impact of network latency with packet loss .",
    "we observe that an rtt of 400  ms _ between any two peers _ and a packet loss rate of 5% does not increase the download completion time by more than 15% of the download completion time observed when the rtt is 0  ms and the packet loss rate is 0% .",
    "we also observe that an rtt of 1000  ms _ between any two peers _ with a packet loss rate of 5% can increase the download completion time by more than 15% of the download completion time observed when the rtt is 0  ms and the packet loss rate is 0% . as an rtt greater than 400  ms between _ any two peers _",
    "is unrealistic , our results show that for upload rates typically seen in the internet , the download completion time is not sensitive to the network conditions that can be found in the internet ; _ dedicated clusters , such as grid5000 , can be used to perform bittorrent experiments_.    the remainder of this paper is structured as follows .",
    "the network topologies and the technique used to emulate the latency and packet loss are presented in section  [ sec : methodology ] .",
    "we first present the impact of latency without packet loss on download completion time . in section  [ sec : homogeneouslatency ] , we emulate the same latency between any pair of peers in the torrent .",
    "we use this topology to study the impact of tcp ramp - up and the impact of the delays in receiving the bittorrent control messages on the download completion time . in section",
    "[ sec : heterogeneouslatency ] , we emulate torrents to study the impact of network latency when the condition of same network latency between any two peers is relaxed",
    ". we then study the impact of network latency and packet loss in section  [ sec : impactlosses ] .",
    "we finally conclude in section  [ sec : conclusion ] .",
    "in this paper , we use the terminology used by the bittorrent community .",
    "a _ torrent _ , also known as a bittorrent session or a swarm , consists of a set of peers that are interested in having a copy of the given file .",
    "a peer in a torrent can be in two states : the _ leecher _ state when it is downloading the file , and the _ seed _ state when it has a copy of the file being distributed .",
    "the peers distribute the file in chunks called _ pieces _ ; a piece is further split into _ blocks _ to facilitate the piece upload and download .",
    "a peer is said to _ unchoke _ a remote peer if it is uploading the blocks of a piece .",
    "a _ tracker _ is a server that keeps track of the peers present in the torrent . for our experiments ,",
    "we use a private torrent with one tracker , one initial seed ( henceforth called the seed ) , and 300 leechers .",
    "we use the _ download completion time _ , the time required by the leechers to download the file distributed using bittorrent , as the metric to study the impact of network latency and packet loss .",
    "all the experiments were performed using an instrumented version of the _ bittorrent mainline client _",
    "@xcite on machines running linux as the host operating system .",
    "the bittorrent mainline client internally uses tcp .",
    "we used tcp cubic  @xcite , the default tcp implementation for the current series of the linux kernel , for our experiments . the latest version of utorrent , a bittorrent client , is based on utp which uses udp as the transport layer protocol  @xcite . as in the case of tcp",
    ", utp has a window based congestion control mechanism .",
    "the design of utp also ensures that utp ramp - up is not faster than tcp  @xcite .",
    "the control messages generated by utorrent using utp are similar to those that are present in bittorrent clients that use tcp .",
    "hence , we believe that the results presented in this paper are valid for bittorrent clients using utp .    in this section , we first present the various scenarios used in the experiments .",
    "we then present the procedure to emulate the network latency and packet loss .",
    "this is followed by an overview of grid5000 , the experimental platform we used . finally , we present the parameters used while performing the experiments .",
    "we now enumerate the scenarios used to study the impact of network latency and packet loss on the download completion time of a file",
    ".    1 .   _ scenario of homogeneous latency .",
    "_ in this scenario , we emulate _ a fixed network latency between any two peers _ in the torrent .",
    "the fixed network latency , though unrealistic , provides a controlled environment to study the impact of network latency on the download completion time of a file .",
    "we use this scenario to get an insight on the threshold of network latency beyond which the network latency affects the download completion time .",
    "the scenario also gives the download completion time when the maximum latency between any two peers in a torrent in known .",
    "the results of this study can also be used to give the impact of network latency when the hosts are geographically distributed and are connected with links that have negligible packet loss .",
    "scenario of heterogeneous latency .",
    "_ in this scenario we relax the condition of fixed network latency to emulate a more realistic network topology .",
    "we use this scenario to confirm that the results obtained in the scenario of homogeneous latency are valid even when the condition of fixed network latency between any two peers is relaxed . for this scenario ,",
    "we group peers that have the same network latency among themselves in an emulated autonomous system ( as ) .",
    "we assume these ases to be fully meshed and that the inter - as latency is greater than the intra - as latency ; we assume the network latency between the peers in a given as is the same .",
    "bittorrent allows its users to limit the upload and download rate .",
    "these rate limits restrict the network bandwidth that bittorrent can compete for with other applications such as web browsers . in this paper",
    ", we do not place any restrictions on the download rate .",
    "we set the upload rate limit of the peers from a wide range of values , from 10  kb / s to 100  kb / s .",
    "we use this range of upload rates as choffnes  _ et  al . _",
    "@xcite show that 90% of the hosts present in public torrents upload at rates that are smaller than 100  kb / s . in our experiments",
    ", we assume the same upload rate limit at all the leechers while studying the impact of network latency and packet loss .",
    "we use the following torrent configurations to set the limit on the upload rate of the peers .    1 .   _ slow seed and slow leechers .",
    "_ in this scenario , we assume all the peers in the torrent have a low upload rate .",
    "we also assume the same upload rate at the seed and leechers .",
    "we performed two experiments for this scenario ; we limit the upload to 10  kb / s for the first experiment and 20  kb / s for the second experiment .",
    "fast seed and slow leechers . _",
    "some torrents have seeds that upload faster than the leechers .",
    "public torrents are also known to have leechers that are capable of high upload and download rates . in torrents where the seed favors fast leechers  @xcite , these leechers are able to download the file faster than their slower peers .",
    "as these leechers are capable of downloading pieces faster than their slower peers , they act like a fast seed to the slow peers in their peer - set .",
    "we emulate torrents that have a fast seed by limiting the upload rate of the seed to 50  kb / s and the upload rate of the leechers to 20  kb / s .",
    "fast seed and fast leechers .",
    "_ we perform these experiments to emulate torrents where all the peers are capable of high upload rates .",
    "we performed two experiments for this scenario ; we limit the upload to 50  kb / s for the first experiment and 100  kb / s for the second experiment .",
    "we use the network emulation ( netem ) module for the linux kernel  @xcite to emulate the network latency and packet loss between the peers .",
    "the netem module operates between the tcp / ip implementation and the device driver for the network device . in our experiments ,",
    "the peers used the ethernet and the loopback device to communicate with each other .",
    "the netem module emulates network latency by en - queuing the packets at the ingress interface and the egress interface of a network device ; packets losses are emulated by dropping the packets at the ingress and egress interfaces . when the loss is on the egress interface , due to cross - layer optimizations performed by the tcp implementation in linux , tcp retransmits the packet without considering it as a loss in the network . to avoid such retransmissions , we introduce packet losses on the ingress interface of the network device .",
    "a shortcoming of netem is that the network latency and packet losses are _ inherently _ bound to the network device .",
    "netem can be used to emulate network latency and losses for each connection , however such topologies are hard to verify and manage . in this paper",
    "we set the network latency and packet loss rates for a particular network device .",
    "the network latency between a pair of peers is the sum of the network latency at the devices used ; the loss rate seen by a packet is the loss rate at the ingress interface of the destination .",
    "we use the publicly available iplane measurements  @xcite to obtain the values of the network latency and loss rate to emulate .",
    "figure  [ fig : iplanemeasurements ] shows the distribution of rtt and loss rate observed in 5 iplane samples ; each sample contains the measurement of about @xmath0 links . in figure",
    "[ fig : latencyinternet ] , we observe that 98% of the links have an rtt less than 400  ms , and 99.8% of the links have an rtt less than 1000  ms .",
    "we use these results to emulate a wide range of rtt values , from 0  ms to 1000  ms , between a pair of peers in the torrent . in figure",
    "[ fig : lossrateinternet ] , we observe that 95% of the links probed have a loss rate less than 0.05 , i.e , 5% packet loss .",
    "we emulate a 5% packet loss on the ingress of each interface of the machines while studying the impact of packet losses .",
    "we performed our experiments on the grid5000 experimental testbed  @xcite .",
    "grid5000 consists of a grid of clusters that are geographically distributed across france .",
    "each cluster consists of several machines connected by a dedicated and high speed lan ; these clusters are inter - connected by high speed links .",
    "we performed our experiments on _ a single cluster of grid5000_. in this cluster , we observe an rtt of less than 1  ms between a pair of machines when network latency is not emulated . due to the very small network latency and the absence of packet loss between the machines in the lan",
    ", the cluster does not reflect the network conditions present in the internet . unlike other testbeds such as planetlab ,",
    "the machines in the cluster are not shared .",
    "grid5000 thus provides a reliable and robust platform for performing reproducible experiments .",
    "we scale our experiments by running 100 leechers on a single machine of the cluster .",
    "we performed the following test to ensure that the machines can support up to 100 leechers while emulating the desired network latency .",
    "we distribute a 50  mb file in a private torrent with a single seed and a single tracker .",
    "the seed and tracker ran on one of the machines of the cluster .",
    "we used another machine in the cluster to run the leechers .",
    "we limit the upload rate of each of the peers to 100  kb / s and we vary the number of leechers running on a machine from 2 to 100 . to study the impact of the number of leechers , we monitor the rtt estimate of tcp in the following manner .",
    "all the peers in the torrent use the socket interface of tcp to communicate with each other .",
    "the ` send ` method of this interface is used by the peers to send data to other peers in the torrent . on each call of ` send ` , we sample the rtt estimate of tcp by using the ` tcp_info ` option of the ` getsockopt ` method .",
    "figure  [ fig : impnumnodes ] shows the average rtt estimate of tcp when we emulate an rtt of 0  ms , 400  ms , and 1000  ms , between the peers ; the error bars represent the minimum and maximum rtt estimate observed in five iterations .",
    "we observe that the number of leechers running on a given machine has a less than 15% impact on the average rtt estimate of tcp .",
    "the netem module buffers the tcp frames which are in flight for a time period equal to the rtt being emulated .",
    "an rtt of 1 second ( 1000  ms ) for an upload rate of 100  kb / s would require 100  frames of 1  kb to be in flight . for our experiments , we use a buffer size of @xmath1 frames to support 1000 frames of each of the 100 peers to be in flight .",
    "we perform our experiments in a private torrent with one tracker , one initial seed ( henceforth called the seed ) , and a flash crowd of 300 leechers .",
    "we distribute a 50 mb file in this torrent . for our experiments , we assume that the peers remain in the torrent until all the leechers have finished downloading the file .",
    "as shown in  figure  [ fig : grid5ktopology ] , we use one machine for the tracker and the seed .",
    "we use three machines for the 300 leechers ; each machine runs 100 instances of the leechers .",
    "a pair of peers in the torrent use either the loopback interface or the ethernet interface to communicate with each other .",
    "the maximum segment size ( mss ) of tcp specifies the maximum payload length that can be exchanged over a connection  @xcite .",
    "one factor that contributes to the mss is the maximum transmission unit which is typically 1500 bytes for devices used in lans .",
    "the mtu is set to 16436 bytes for the loopback interface on many linux distributions . to ensure that the payload length exchanged by the peers does not depend the interface used by the connection",
    ", we set the mtu on the loopback interface to 1500 bytes . despite this limit",
    ", we observed that a significant number of tcp segments have a size larger than the mss negotiated during connection establishment .",
    "we observe these large segments because of tcp segmentation offloading ( tso ) which is enabled by default in the 2.6 series ( the current series ) of the linux kernel .",
    "tcp segmentation offloading ( tso ) enables the host machine to offload some of the tcp / ip implementation , such as segmentation , and calculation of ip checksum , to the network device .",
    "tso also supports the exchange of data in frames of sizes that can be greater that the underlying mtu size  @xcite .",
    "the increase in the frame size can result in significant improvement in throughput ; the improvement depends on various factors such as cpu processing power and the amount of data being transferred  @xcite .",
    "clusters , such as those present in grid5000 , include hosts that support tso .",
    "we now study the impact of rtt on the tcp payload length when tso is enabled .",
    "we use four machines to create a private torrent with 300 leechers , one tracker , and one initial seed , to distribute a 50  mb file .",
    "we assume the same rtt between any two peers for the results presented in figure  [ fig : pktlentsoenabled ] and figure  [ fig : pktlentsodisabled ] .",
    "we also limit the upload rate to 20  kb / s .",
    "figure  [ fig : pktlentsoenabled ] shows the distribution of payload length for different rtt values when tso is enabled ; the results present the distribution of the payload lengths observed in 5 iterations .",
    "we observe that an increase in the network latency between the peers results in an increase in the number of tcp segments with a large payload length .",
    "this was observed when the mtu was set to 1500 bytes indicating that tso can result in payload lengths greater than the mtu value specified .",
    "figure  [ fig : pktleninternet ] shows the payload lengths from the publicly available traces of the internet traffic observed in the wide backbone  @xcite ; the values presented are from the sample taken on the wide backbone on november 29 , 2009 . in figure",
    "[ fig : pktlentsoenabled ] and figure  [ fig : pktleninternet ] , we observe that the maximum payload length of the packets sent over the internet is smaller than the maximum payload length observed in grid5000 when tso is enabled .",
    "we observe small payload lengths in figure  [ fig : pktleninternet ] because hardware support on all the intermediate devices is essential for exchange of large segments .",
    "when tso is disabled and the mtu is set to 1500 bytes , figure  [ fig : pktlentsodisabled ] shows the distribution of the payload length for different rtt values ; the results present the distribution of the payload lengths observed in 5 iterations .",
    "we observe that when tso is disabled and the mtu is set to 1500 bytes , the maximum payload length is similar to that observed in the internet .",
    "we set the mtu to 1500 bytes on the loopback interfaces and disabled tso on the ethernet and loopback interface for the experiments presented in the section  [ sec : homogeneouslatency ] and section  [ sec : heterogeneouslatency ] .",
    "the outcome of the experiments with tso enabled are discussed with the impact of packet loss in section  [ sec : impactlosses ] .",
    "]    in this section , we assume the same network latency between any two peers in the torrent because _ this scenario gives the worst case impact of a given network latency for a given upload rate limit_. the same network latency results in the same rtt between any two peers in the torrent because the sum of the other delays , such as queuing delays at the intermediate routers , is less than 1  ms in a grid5000 cluster . in each experiment , we choose an rtt to emulate from a wide range of values , from 0  ms to 1000  ms . in section  [ sec : emullatency ] , we observed that 99.8% of the internet links have an rtt less than 1000  ms .",
    "_ an rtt of 1000  ms between any two peers thus gives a worst case impact of the network latency that can be observed in the internet_. we use a wide range of values , from 10  kb / s to 100  kb / s , to set the upload rate limit of the peers in the torrent ; we assume the same upload rate limit for all the leechers in the torrent .",
    "for a given upload rate limit , figure  [ fig : symmetricdownloadcompletion ] shows the impact of the rtt between any two peers on the download completion time . each point on the plot",
    "is the average download completion time in 10 iterations ; the error bars indicate the minimum and maximum download completion time observed in 10 iterations .",
    "the two factors that can be affected by network latency and cause an increase in the download completion time are tcp ramp - up and the delays in receiving the control messages .",
    "we study the impact of network latency on the download completion time by studying the impact of network latency on these two factors in section  [ sec : impactrampup ] and section  [ sec : controlmessagesimpact ] respectively .    in figure",
    "[ fig : symmetricdownloadcompletion ] , for a given upload rate limit from 10  kb / s to 100  kb / s , we observe that an rtt of up to 1000  ms between any two peers does not increase the average download completion time by more than 15% of the average download completion time when the rtt is 0  ms .",
    "when the maximum upload rate of the seed and leechers is limited to 10  kb / s , figure  [ fig : symmetricdownloadcompletion ] shows that the download completion time increases when the rtt is greater than 200  ms . in section  [ sec : impactrampup ] , we show how tcp ramp - up is responsible for this increase in the download completion time .",
    "when the upload rate of all the peers is limited to 20  kb / s , in figure  [ fig : symmetricdownloadcompletion ] , we observe that the download completion time is not a monotonous function of the rtt . peers having an rtt of 1000  ms have a lower download completion time compared to peers having an rtt of 400  ms .",
    "we show that this is the impact of network latency on the delays in receiving bittorrent control messages in section  [ sec : controlmessagesimpact ] .",
    "an rtt of 1000  ms between any two peers gives the worst case impact of network latency .",
    "figure  [ fig : symmetricdownloadcompletion ] thus shows that _ network latency has a marginal impact , less than 15% , on the average download completion time for the upload rates observed in public torrents_.      the bittorrent application uses the ` send ` system call of the socket interface of tcp to upload the pieces of a file .",
    "bittorrent limits the upload rate for a given tcp connection by periodically calling the ` send ` system call .",
    "the time between successive calls of ` send ` is high when the upload rate is low .",
    "each call of ` send ` typically results in creation of a tcp segment which is transmitted .",
    "if the acknowledgment for the transmitted segment arrives before the subsequent call of ` send ` , then the upload rate of the application does not require a congestion window ramp - up . _",
    "a ramp - up is required on the tcp connections where the time between successive calls of _ ` send ` _ is smaller than the rtt_. bittorrent also enables a peer to simultaneously upload pieces of the file to many peers of a torrent in parallel . an increase in the number of parallel unchokes results in an increase in the time between successive calls of ` send ` .",
    "this is because the upload rate limit is divided over the connections used for the unchoke .",
    "we present the distribution for the time between successive calls of the ` send ` at all the leechers ( over 5 iterations ) in figure  [ fig : iatleecher ] ; the rtt between any two peers is 0  ms in figure  [ fig : leecher0 ] and 400  ms in figure  [ fig : leecher400 ] . for an upload rate of 10  kb / s , in figure  [ fig : leecher0 ] and figure  [ fig : leecher400 ] , we observe that the time between successive ` send ` calls is greater than 200  ms for a significant number of calls . for these calls , when the rtt between the peers is less than or equal to 200  ms a ramp - up shall not be required . due to the absence of ramp - up , in figure  [ fig : symmetricdownloadcompletion ] for an upload rate limit of 10  kb / s , we observe that an rtt less than or equal to 200  ms does not increase the average download completion time by more than 5% of the average download completion time observed when the rtt is 0  ms .",
    "for the upload rate limit of 10  kb / s , an rtt larger than 200  ms may require a tcp ramp - up .",
    "similarly , for the upload rate limits of 20  kb / s , 50  kb / s , and 100  kb / s , in figure  [ fig : iatleecher ] , we observe that ramp - up may be required for an rtt greater than 120  ms , 20  ms , and 20  ms respectively . hence , for an upload rate limit in the range of 10  kb / s to 100  kb / s , tcp ramp - up will be required for an rtt greater than 200  ms . in figure",
    "[ fig : symmetricdownloadcompletion ] for an rtt of up to 1000  ms , we observe that tcp ramp - up does not increase the average download completion time by more than 15% of the download completion time observed the rtt is 0  ms .",
    "tcp ramp - up has a marginal impact , less than 15% , on the average download completion time for the upload rates observed in public torrents_.      in figure  [ fig : symmetricdownloadcompletion ] for an upload rate of 20  kb / s , we observe that the download completion time is not a monotonous function of the rtt .",
    "the download completion time when the rtt is 1000  ms is smaller than the download completion time when the rtt is 400  ms .",
    "we now present the reasons for this behavior .",
    "we would like to comment that this discussion is specific to the implementation of the bittorrent client we used in the experiments and that _ these observations may not be true for other bittorrent clients that are available_.    once every 10 seconds , a seed selects from its peer - set a set of leechers to unchoke .",
    "the leechers are selected based on their download rate and time since the start of their last unchoke . during an unchoke , the leecher downloading the piece requests for multiple blocks of a piece to pipeline the blocks for the unchoke .",
    "the number of blocks requested is a function of the estimated download rate at the leecher .",
    "this estimate of the download rate is a moving average and it grows slowly to attain the rate at which the seed uploads to the given leecher .",
    "this growth is even slower if the connection requires a tcp ramp - up .",
    "the slow growth in the estimated download rate thus results in a slow increase in the number of blocks that are in the pipeline at the seed .",
    "we observe that this slow increase , along with the latency in receiving the block requests , results in time periods during which the seed unchoking the leecher is idle , i.e. , awaiting block requests . if the leecher selection algorithm of the seed is invoked during these _ idle periods _ , then the leecher _ will not be selected _ for an unchoke resulting in an abrupt termination of the unchoke .",
    "we observe that this abrupt termination of the unchoke occurs frequently when the upload rate limit is 20  kb / s and when the rtt between the peers is greater than 120  ms and less than 800  ms .",
    "we now show how the abrupt termination of an unchoke affects the availability of pieces at the leechers .",
    "once a piece is downloaded , the leecher can then upload this piece to other leechers in its peer - set .",
    "after the piece download , the leecher sends a _ have _ message with the piece identifier to the peers in its peer - set .",
    "the _ have _ message indicates that the piece can be downloaded from this leecher . in figure",
    "[ fig : rtthaveimpact ] , we use the _ have _ messages sent by the leechers to show the evolution of the average number of pieces ( over 10 iterations ) that are available at the leechers . for reasons mentioned above",
    ", when the upload rate limit of the seed and leechers is 20  kb / s , an rtt of 400  ms between the seed and a leecher typically results in the abrupt termination of the unchoke .",
    "the abrupt termination results in an incomplete download of a piece and affects the availability of pieces as shown in figure  [ fig : have20 ] .",
    "we do not observe abrupt termination of the unchoke when the rtt is 0  ms and when the rtt is 1000  ms .",
    "hence , the average download completion time when the rtt is 400  ms is greater than the average download completion observed when the rtt is 1000  ms .",
    "we do not observe abrupt termination of unchokes when we have a fast seed ( upload rate limited to 50  kb / s ) in a torrent with slow leechers ( upload rate limited to 20  kb / s ) ; figure  [ fig : have5020 ] shows the evolution of pieces for this torrent configuration .",
    "we observe a similar evolution for the _ have _ messages when the upload rate at the peers is limited to 50  kb / s and 100  kb / s .      in this section , we emulated a large range of rtt values , from 0  ms to 1000  ms , to study the impact of network latency on the download completion time .",
    "we use an rtt of 1000  ms to give the worst case impact of network latency for a given upload rate .",
    "we observe that an rtt of up to 1000  ms between any two peers has a marginal impact , less than 15% , on the average download completion time of a file .",
    "for an upload rate of 20  kb / s , we observe that the download completion time is not a monotonous function of the rtt .",
    "this behavior emphasizes _ that the models for tcp throughput can not be directly used to study the impact of network latency on the time required to download a file using bittorrent_.    in the next section , we relax the condition of same latency between any two peers in the torrent to confirm that the scenario of same latency gives us the worst case impact of network latency .",
    "we now present results to confirm that the observations made in section  [ sec : homogeneouslatency ] are valid even when the condition of fixed latency is relaxed .",
    "we relax the condition of same latency between any two peers by emulating ases in the following manner .",
    "public torrents have peers that are spread out geographically .",
    "a pair of peers in the same as typically have a smaller network latency compared to a pair of peers that are present in different ases . for our experiments",
    ", we use a private torrent with peers distributed in emulated ases . for our experiments ,",
    "we emulate an as using one machine .",
    "we assume the same intra - as latency and we also assume that the intra - as latency is less than the inter - as latency .",
    "we assume that all the ases are fully meshed .",
    ".latency values on the loopback and ethernet device while emulating an as on a machine .",
    "[ cols=\"^,^,^ \" , ]     in section  [ sec : homogeneouslatency ] , we observed the impact of network latency when tso is disabled and packet loss is not emulated .",
    "we observe that for an rtt of up to 1000  ms , tcp ramp - up and the delays in receiving the control messages have a marginal impact , less than 15% , on the average download completion time of a file .    when tso in enabled and packet losses are not emulated , we observe that the impact of network latency on the download completion time is similar to that observed in the case of homogeneous latency , which has been presented in section  [ sec : homogeneouslatency ] .",
    "these results show that _ bittorrent experiments performed on clusters that support tso shall produce results that are similar to those performed on clusters that do not support tso_.    we now discuss the scenario of homogeneous latency with packet loss when tso is disabled .",
    "while emulating a packet loss , each packet en - queued by netem is dropped with a probability controlled by the loss rate . a packet loss result in retransmission of the packet by the source .",
    "the source reduces the congestion window in response to the loss and then ramps - up its congestion window to attain the desired upload rate .",
    "we observe that for an upload rate limit of 20  kb / s and 50  kb / s , an rtt of 1000  ms and a loss rate of @xmath2 between any two peers does not increase the average download completion time by more than @xmath3 of the average download completion time observed when _ neither latency nor packet loss was emulated_. however , when the upload rate limit is 10  kb / s or 100  kb / s , the rtt between any two peers is 1000  ms , and when the loss rate is 5% , we observe that the average download completion time is more than 15% of the download completion time when the rtt is 0  ms and the loss rate is 0% .",
    "an rtt of 1000  ms between any two peers is unrealistic as 99.8% links probed by iplane have an rtt less than 1000  ms .",
    "however , _ an rtt of up to 400  ms is realistic _ as 98% of the links probed by iplane have an rtt less than 400  ms . for the upload rate limit from 10  kb / s to 100",
    "kb / s , when the rtt between any two peers is 400  ms and the loss rate is 5% , we observe that the download completion time is not more than 15% of the download completion time observed when the rtt is 0  ms and loss rate is 0% . in section  [ sec : heterogeneouslatency ] we observe that the scenario of homogeneous latency gives an upper bound on the impact of a given network latency .",
    "therefore , the results presented in table  [ tab : impactlosstso ] show that , for an upload rate limit from 10  kb / s to 100  kb / s , _ a loss rate of up to 5% and an rtt of up to 400  ms between any two peers in the torrent has a marginal impact , less than 15% , on the average download completion time of a file . _",
    "in this paper we present the impact of network latency and packet loss on the download completion time of a file distributed using bittorrent .",
    "we use the download completion time as the metric for evaluation because the bittorrent users are primarily interested in the download completion time of a file .",
    "we first studied the impact of network latency on the download completion time . for a given upload rate limit",
    ", we emulated the same latency among the peers to give a worst case impact of network latency on the download completion time .",
    "the download completion time can be affected by tcp ramp - up and the delays in receiving the bittorrent control messages .",
    "we therefore studied the impact of network latency on the download completion time by studying the impact of network latency on tcp ramp - up and the delays in receiving the control messages . for our experiments",
    ", we varied the upload rate limit from 10  kb / s to 100  kb / s and the rtt from 0  ms to 1000  ms .",
    "we observe that the tcp ramp - up and the delays in receiving the bittorrent control messages only have a marginal impact , less than 15% , on the average download completion time .",
    "the high rtt values used in our experiments also emulate torrents with peers that are not only geographically apart but also connected with high capacity links that support the bittorrent upload rate without causing congestion .",
    "our results show that _ experiments performed on grid5000 give results similar to those performed on testbeds such as planetlab that have geographically distributed hosts that are connected by high capacity links_. we also study the impact of network latency on the delays in receiving the control messages ; this impact can not be captured using the traditional models for tcp throughput .",
    "we then studied the impact of packet loss by emulating a loss rate of 5% . for the upload rates seen in public torrents , from 10  kb / s to 100  kb / s",
    ", we observe that realistic rtt values of up to 400  ms and a packet loss rate up to 5% , have a marginal impact , less than 15% , on the average download completion time .",
    "we performed our experiments over a wide range of rtt values , from 0  ms to 1000  ms , and a wide range of packet loss rates , from 0% to 5% , to study the impact of network latency and packet loss .",
    "our results show that _ experiments can be performed on dedicated clusters , such as those present in grid5000 , without explicitly emulating latency and packet loss between the peers in a torrent_.    we also studied the impact of using devices that support tso on the outcome of bittorrent experiments performed on clusters .",
    "our results show that bittorrent experiments performed on clusters that support tso produce results that are similar to those performed on dedicated clusters that do not support tso .",
    "our main conclusion is that , for upload rates seen in public torrents , network latency and packet loss have a marginal impact on the download completion time of a file , hence , dedicated clusters such as grid5000 can be safely used to perform realistic and reproducible bittorrent experiments .",
    "experiments presented in this paper were carried out using the grid5000 experimental testbed , being developed under the inria aladdin development action with support from cnrs , renater and several universities as well as other funding bodies ( see https://www.grid5000.fr ) .",
    "m.  dischinger , a.  haeberlen , i.  beschastnikh , p.  k. gummadi , and s.  saroiu , `` satellitelab : adding heterogeneity to planetary - scale network testbeds , '' in _",
    "sigcomm 08 : proceedings of the acm sigcomm 2008 conference on data communication_.1em plus 0.5em minus 0.4emnew york , usa : acm , 2008 , pp .",
    "315326 .",
    "d.  qiu and r.  srikant , `` modeling and performance analysis of bittorrent - like peer - to - peer networks , '' in _",
    "sigcomm 04 : proceedings of the 2004 conference on applications , technologies , architectures , and protocols for computer communications_.1em plus 0.5em minus 0.4emnew york , ny , usa : acm , 2004 , pp .",
    "367378 .",
    "a.  r. bharambe , c.  herley , and v.  n. padmanabhan , `` analyzing and improving a bittorrent networks performance mechanisms , '' in _",
    "infocom 2006 .",
    "25th ieee international conference on computer communications .",
    "_ , april 2006 , pp . 1 12 .",
    "a.  legout , n.  liogkas , e.  kohler , and l.  zhang , `` clustering and sharing incentives in bittorrent systems , '' in _ proceedings of the 2007 acm sigmetrics international conference on measurement and modeling of computer systems_.1em plus 0.5em minus 0.4emacm , 2007 , pp .",
    "301312 .",
    "h.  madhyastha , t.  isdal , m.  piatek , c.  dixon , t.  anderson , a.  krishnamurthy , and a.  venkataramani , `` iplane : an information plane for distributed services , '' in _ proceedings of osdi _ , 2006 , pp .",
    "367380 .",
    "d.  freimuth , e.  hu , j.  lavoie , r.  mraz , e.  nahum , p.  pradhan , and j.  tracey , `` server network scalability and tcp offload , '' in _",
    "atec 05 : proceedings of the usenix annual technical conference_.1em plus 0.5em minus 0.4emberkeley , ca , usa : usenix association , 2005 , pp . 1515 ."
  ],
  "abstract_text": [
    "<S> network latency and packet loss are considered to be an important requirement for realistic evaluation of peer - to - peer protocols . </S>",
    "<S> dedicated clusters , such as grid5000 , do not provide the variety of network latency and packet loss rates that can be found in the internet . </S>",
    "<S> however , compared to the experiments performed on testbeds such as planetlab , the experiments performed on dedicated clusters are reproducible , as the computational resources are not shared . in this paper , we perform experiments to study the impact of network latency and packet loss on the time required to download a file using bittorrent . in our experiments , </S>",
    "<S> we observe a less than 15% increase on the time required to download a file when we increase the round - trip time between any two peers , from 0  ms to 400  ms , and the packet loss rate , from 0% to 5% . </S>",
    "<S> our main conclusion is that the underlying network latency and packet loss have a marginal impact on the time required to download a file using bittorrent . </S>",
    "<S> hence , dedicated clusters such as grid5000 can be safely used to perform realistic and reproducible bittorrent experiments .    </S>",
    "<S> bittorrent , experiment , performance , clusters , latency , loss rate . </S>"
  ]
}
{
  "article_text": [
    "transmission delays are intrinsic to any process that exchange information . while in many applications",
    "these time delays are small enough to be neglected , in other cases they have a critical influence on the dynamics .",
    "examples of connected dynamical systems appear frequently in physics , engineering and natural sciences @xcite .",
    "a problem of interest in the dynamical systems community is the synchronization of coupled oscillators .",
    "some progress has been made to understand the synchronization of oscillators when an identical time delay is present on every connection of a coupled system @xcite .",
    "otherwise , the problem of synchronization with nonidentical time delays spreaded accross a network is still open . in an effort to simplify the analysis of such networks , a new method called componentwise time - shift transformation",
    "@xcite has been developed in order to transform the time delays of the network .",
    "this transformation allows to change the time delays on the network following some precise rules without affecting the dynamics of the system @xcite .",
    "the purpose of the transformation is to set @xmath0 time delays to zero , being @xmath1 the number of vertices of the network .",
    "a brief summary is described in the next section .    here",
    "we take on this idea and propose a new formulation of this transformation that allows to use common optimization algorithms to reduce the number of time delays on a network .",
    "our results show that on networks with different topologies , the number of time delays that can be reduced to zero is larger that @xmath0 .",
    "we claim that in most cases the number @xmath2 of zero time delays can be larger than the lower bound @xmath3 .",
    "moreover , within our framework we can devise other optimization strategies to find a suitable configuration of time delays given a specific need .",
    "the technique described in @xcite hinges on the observation that we can change the time delays in a network with a single cycle of length @xmath1 without altering the dynamics as long as the sum of the time delays around the cycle is conserved .",
    "this property can be generalized over arbitrary networks .",
    "first , we reformulate the fundamental property of conservation of the time delays over a loop using algebraic graph theory . the problem of finding minimal time delays on the network is next transformed into a linear optimization problem .",
    "we show that the simplex optimization algorithm @xcite provides a solution for the transformed time delays where at least @xmath0 time delays are set to zero .",
    "we consider a graph @xmath4 with a collection of @xmath5 oriented edges @xmath6 and @xmath1 vertices @xmath7 . at each vertex",
    "we have a very general dynamical system in the form of a system of @xmath1 coupled delay differential equations @xmath8 with @xmath9 and @xmath10 is the set of indices @xmath11 such that the edges @xmath12 connects the vertex @xmath13 to the vertex @xmath14 .",
    "we assume a discrete time delay @xmath15 on the edge @xmath12 .    the previous system in eq .  ( [ sys_din ] )",
    "can be transformed with a redefinition of the time delays @xmath15 without changing the dynamical properties of the system .",
    "we set @xmath16 with the following change of variables @xmath17 being @xmath18 constants and @xmath19 is the source vertex of the edge @xmath11 and @xmath20 the target vertex of the same edge .",
    "the authors in  @xcite noticed that the _",
    "_ a__lgebraic sum of the time delay around any cycle of the network is constant for every choice of the time - shifts @xmath18 . the term _ _",
    "a__lgebraic sum means here that the time delay should be summed up or substracted according to the relative orientation of the edges around a cycle .",
    "now the problem is to find the time - shifts @xmath18 associated to each vertex for a desired configuration of time delays @xmath21 .",
    "the topology of the graph can be described in terms of algebraic structures associated to the topology @xcite .",
    "we first give some definitions to set the context of the work .",
    "we define @xmath22 as a directed and connected graph , where @xmath23 is a set of @xmath1 vertices and @xmath24 a set of @xmath5 directed edges . before going into the details ,",
    "we need to renumber the edges from 1 to @xmath5 and we note @xmath25 as the time delay of the edge @xmath12 .    to represent the connectivity , we define the incidence matrix @xmath26 that relates the vertices to the edges .",
    "the elements @xmath27 of the matrix @xmath28 are expressed in the following way : @xmath29 if the edge @xmath30 points towards the vertex @xmath13 and @xmath31 if the edge points outwards .",
    "all other entries are zero .",
    "all the information about the connections of the network is contained in this matrix .",
    "it is also possible to develop the method for multiple edges connecting two vertices .",
    "we restrain here the case to a maximum of two edges to represent a bidirectional connection .",
    "if the graph is connected , or weakly connected , we can define an acyclic subgraph called spanning tree that connects all the vertices and have exactly @xmath0 edges .",
    "this structure is important for the decomposition of the graph @xmath4 into elementary cycles . given a spanning tree @xmath32 and an edge @xmath33 not in @xmath32 , there is a unique cycle in @xmath4 containing only edges of @xmath32 and @xmath33 . as a consequence",
    ", we can decompose the network into @xmath34 independent cycles .",
    "this decomposition can be expressed as a matrix @xmath35 that expresses the cycle space associated to the tree @xmath32 .",
    "first , we set the orientation of the cycle as the direction of the edge _",
    "_ n__ot in @xmath32 .",
    "being @xmath36 an element of @xmath37 , we set @xmath38 if the edge @xmath11 is in the cycle @xmath13 with the same direction , and @xmath39 if the orientations are opposite .",
    "all other numbers are zero .",
    "this matrix @xmath37 is of special interest for our study since the sum of time delays around each cycle is given by a simple matrix multiplication @xmath40 where @xmath41 is the column vector of the time delay @xmath11 associated to the edge @xmath12 and @xmath42 denotes the transpose of the vector @xmath43 .",
    "the vector @xmath44 is what matters for the dynamics of the coupled system of delay differential equations .",
    "the time delays can be shuffled and changed into a new vector @xmath45 , but the vector @xmath44 should be constant , so that @xmath46 this is the key property of the graph that we need to explore the space of possible solutions of @xmath47 .    the last necessary step to obtain the full characterization of the system is to derive the time - shifts @xmath18 in eq .",
    "( [ delay_shift ] ) that can lead us back to the time series of the original configuration of eqs .",
    "( [ sys_din ] ) .",
    "these time - shifts @xmath48 associated to the vertex @xmath13 in the network is computed from a recursive relation on the spanning tree @xmath32 @xcite , @xmath49 with @xmath19 the source vertex of the edge @xmath11 and @xmath20 the target vertex of the same edge . since the time - shifts are defined up to a constant , we can choose the value @xmath50 as a reference for all the other vertices .",
    "the rest of the time - shifts can be obtained from the incidence matrix @xmath28 restricted to the edges of the spanning tree .",
    "the columns of the incidence matrix contain exactly the values @xmath19 and @xmath20 for any edge @xmath11 .",
    "if we partition the edges into two subsets of edges in and out of the spanning tree , we can rearrange the incidence matrix in two blocks : @xmath51.\\ ] ] the first matrix @xmath52 contains the information on the edges in the spanning tree .",
    "we also we split the time delays in two similar sets @xmath53 and @xmath54 and we define a column vector with the time - shifts @xmath55 . from the recursive relation given in eq .",
    "( [ eq_rec ] ) , we can infer that @xmath56 however , we are looking for the time - shifts @xmath57 as a function of the time delays of the tree @xmath32 . noticing that the matrix @xmath58 as a rank @xmath0 and that the vector @xmath57 has @xmath0 unknown since @xmath50",
    ", we can construct a full rank square matrix @xmath59 by removing the first column of @xmath58 .",
    "we define the vector @xmath60 and transform the last equation into : @xmath61 now we have a fully determined linear system : @xmath62    the matrices @xmath28 and @xmath37 in eq .",
    "( [ split_incidence ] ) and ( [ eq : lineal_del ] ) are straightforward to derive and have a strong dependence to each other @xcite .",
    "notice also that the matrices @xmath58 , @xmath63 and @xmath37 depend on the initial chosen spanning tree .",
    "we can demonstrate that this choice does not affect the space of possible solutions that can be reached with eq .",
    "( [ eq : lineal_del ] ) .",
    "any spanning tree can give us a valid basis to reconfigure the time delays in the network .",
    "the main problem is stated in eq .",
    "( [ eq : lineal_del ] ) where all the possible vectors @xmath64 are contained .",
    "we have to restrain however the problem to positive time delays @xmath25 to avoid complications with negative time delays .",
    "it consists of finding a vector @xmath64 that will minimize the sum of the time delays over the network .",
    "this problem takes naturally the form of a standard linear program , that is , @xmath65 this standard linear program can be solved with conventional techniques such as the simplex optimization algorithm @xcite .",
    "we show that the simplex method reduces the time delays of the network with at least @xmath0 zero time delays .    using the simplex algorithm",
    ", we can guarantee that there is a feasible solution @xmath64 to the problem in eq .",
    "( [ lp_pb ] ) such that _ _ a__t least @xmath0 time delays in the vector @xmath64 are set to zero .    in the simplex algorithm , there is a first search for a basic feasible solution to the problem in a @xmath5-dimensional space .",
    "for such a solution , the columns of the matrix @xmath37 are rearranged into @xmath66 $ ] where @xmath67 is an invertible @xmath68 matrix and @xmath69 is a @xmath70 matrix .",
    "the vector @xmath71 solution to the equation @xmath72 can be decomposed into @xmath73 and @xmath74 a vector with all zeros .",
    "being @xmath0 the size of the vector @xmath75 , we have a valid reduction of the network with @xmath0 time delays set to zero .",
    "the other part @xmath76 contains only positive time delays .",
    "the existence of one basic feasible solution gives us a valid reduction , however the algorithm looks further for an optimal solution minimizing the sum of the time delays .",
    "the solver will find in general a better solution with more time delays equal to zero or at least with a total sum of the time delays below or equal than the initial sum of the time delays @xmath77 .",
    "there are plenty of efficient implementations of the simplex algorithm to solve linear programs @xcite , and we can obtain the reduction of the network in a polynomial time .",
    "we now have all the ingredients to construct a optimized network .",
    "all we need is any spanning tree @xmath32 , the incidence matrix @xmath28 and a fundamental loop matrix @xmath37 of the graph @xmath4 .",
    "here we apply the previous optimization method to networks with different topologies and we measure the efficiency of the optimal solution of the time delay reduction .",
    "we focus on three popular random networks : erds - renyi , small - world and scale - free networks @xcite .",
    "we distribute the time delays randomly accross the network using two types of statistical distributions : discrete and continuous uniform distributions .",
    "the discrete distribution consists in picking randomly integers from 1 to 10 .",
    "the continuous distribution is a uniform random distribution in @xmath78 $ ] .",
    "we apply the algorithm to networks with @xmath79 vertices and a number of edges that varies with the mean vertex degree @xmath80 .",
    "the results have been averaged over 100 network realizations .",
    "we first detail the results for the discrete time delay distribution on the three types of topology .",
    "* reduction of time delays for different network topologies*. number of zero time delays @xmath2 against the mean degree of the vertices in the network @xmath80 .",
    "the scale - free network presents a clear improvement in terms of @xmath2 while there is almost no difference between the erds - renyi and the small - world topology , width=302 ]    the numerical optimization shows some unexpected results .",
    "first , the optimal solution is different depending on the topology of the network .",
    "the scale - free topology gives better results in the sense that @xmath2 is higher for this topology for a given value of @xmath80 .",
    "on the other hand , the random erds - renyi and small - world network give similar results . in the three cases the solution is on average well above the lower bound @xmath81 .",
    "the source of the differences between the distinct cases is unclear , however it is seemingly linked to the topology of the networks .",
    "however , this improvement in @xmath2 drops dramatically if we consider a continuous distribution or a discrete distribution with a large number of elements . when the time delays are distributed following a continuous distribution , it is almost impossible to find a solution with @xmath82 .",
    "the simplex method finds only the basic feasible solution @xmath83 .",
    "the reason is that it is difficult to find a linear combination of random real numbers equal to zero . on the contrary",
    ", it happens much more frequently when the time delays are taken from a small set of integers .",
    "* reduction ratio for the three topologies .",
    "* reduction ratio computed as @xmath84 .",
    "there are significant differences between the distinct topologies , being the small - world topology the worse candidate.,width=302 ]    if we measure the ratio @xmath85 between the total sum of the time delays before and after the optimization defined as @xmath86 we can see that there is a substantial reduction in the process . if we look closer at the simulations shown in fig .",
    "[ fig2 ] , the improvement also varies from one distribution to another .",
    "as the average degree @xmath80 increases , it also seems that it is difficult to improve the ratio @xmath85 .",
    "the previous examples focus on the properties of the networks and do not involve any specific dynamical system .",
    "we present an application where a network of kuramoto phase oscillators is coupled with time delays @xcite .",
    "the phase oscillator model is a very simple abstraction of the essential properties of limit cycle oscillators .",
    "we can use this model to test our optimization method on a complex network of simple dynamical systems .",
    "the setup consists of a unidirectional erds - renyi network with average degree @xmath80 , where the vertices represent kuramoto oscillators with an identical intrinsic frequency @xmath87 .",
    "the edges of the network represent a time delayed interaction chosen randomly according to a statistical distribution .",
    "the coupled delay differential equation can be written as @xmath88 where @xmath10 is the set of edges inciding from vertex @xmath13 to the vertex @xmath14 and @xmath89 is the coupling strength .",
    "we distribute the time delays @xmath25 following a uniform distribution in the continous interval @xmath90 $ ] .",
    "notice however that since we integrate the equation numerically , we have to discretize this interval due to the finite time step size of the algorithm . in order to test the validity of the reduction in a dynamical system , we use the average frequency of the network since",
    "this measurement is independent of the initial history of the delay differential equation @xcite .",
    "we let evolve the network in time and we compute the average frequency @xmath91 of each oscillator over a finite interval of time @xmath32 @xmath92 then we compute the average network frequency @xmath93 in this manner @xmath94 this last frequency is independent of the chosen initial conditions and should be the same for both the original network and the reduced network given by eq .",
    "( [ lp_pb ] ) . in fig .",
    "[ fig3 ] , we show an example where a network of @xmath95 oscillators has been simulated with a realization of the random time delays . the average frequency of the original and reduced network are consistent in both simulations showing that the asymptotic behavior is the same .",
    "other measures such as the order parameter are unsuitable to make comparisons since the time - shifts @xmath18 will alter the value .",
    "* average network network frequency @xmath93 of a coupled network of kuramoto phase oscillators coupled with time delays . * the curves , that are superposed ,",
    "represent the average network frequency for the original ( dot markers ) and reduced network ( cross markers ) . for each dot",
    "the average network frequency has been computed and averaged for several initial histories of the network to avoid numerical artifacts caused by the integration method . both the original and reduced network lead to the same asymptotic frequency .",
    "parameters are : @xmath96 , @xmath97 , @xmath98 $ ] , @xmath95 , @xmath99.,width=302 ]    the simulations have been performed with the programming language julia @xcite using lightgraphs , jump and coin - or linear programming ( clp ) packages .",
    "reorganizing the time delays in a network does not seem an easy task at first sight .",
    "but once the basic mechanisms of time delay conservation are understood , it is possible to change the time delays and at the same time conserving the dynamical properties of the network . our formulation along with the componentwise time - shift transformation technique opens a way to reduce even further the time delay space . when the problem is stated in the form of a linear program , the simplex algorithm gives in general a higher number of zero time delays than the theoretical lower bound @xmath2 , that corresponds to the dimension of the cycle space of the network .",
    "it also finds the solution with the lowest sum of time delays , which can represent a reduction up to 60% of the initial sum of the time delays .",
    "this work points into a new direction for speeding up the numerical integration of coupled dynamical systems with time delays .",
    "the presence of different time delays among the network usually involves a high computational and storage cost . it may be possible to optimize the network to reduce this computational load .",
    "another possible application is to modify the fitness function of the optimization algorithm such that the time delays fit a desired distribution more suitable to the problem at glance .",
    "it has been shown in @xcite that the cyclic motifs play an important role in the dynamics of networks of coupled phase oscillators with time delay .",
    "it is an interesting observation when contrasted with the fact that in this paper the time delay around fundamental loops plays a central role in the dynamics .",
    "financial support from the spanish ministry of economy and competitiveness under project no .",
    "fis2016 - 76883-p is acknowledged ."
  ],
  "abstract_text": [
    "<S> time delays may cause dramatic changes to the dynamics of interacting oscillators . </S>",
    "<S> coupled networks of interacting dynamical systems can behave unexpectedly when the signal between the vertices are time delayed . </S>",
    "<S> it has been shown for a very general class of systems that the time delays can be rearranged as long as the total time delay over the constitutive loops of the network is conserved . </S>",
    "<S> this fact allows to reduce the number of time delays of the problem without loss of information . </S>",
    "<S> there is a theoretical lower bound for this number , but in many cases we can find a numerical solution that beats this limit . here </S>",
    "<S> we propose a formulation of the problem and a numerical method to even further reduce the number of time delays in a network . </S>"
  ]
}
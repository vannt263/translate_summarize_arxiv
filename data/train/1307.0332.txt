{
  "article_text": [
    "in economics and computer science , one of the most fundamental problems is the allocation of profits or costs based on contributions of the nodes in a network .",
    "the problem has assumed even more importance as networks have become ubiquitous . in this paper , we address this problem by simultaneously studying two concepts that can be traced to lloyd s. shapley  the _ shapley value _ and _ matching games_.    lloyd s. shapley is one of the most influential game theorists in history . among his numerous contributions ,",
    "two of them are the following : ( i ) formulating the _ assignment game _ as a rich and versatile class of cooperative games  @xcite , and ( ii ) proposing the _ shapley value _ as a highly desirable solution concept for cooperative games  @xcite .",
    "both contributions have had far - reaching impact and were part of shapley s nobel prize winning achievements .",
    "the assignment game is a cooperative game based on bipartite graphs , and models the interaction between buyers and sellers .",
    "it is the _ transferable utility _ version of the well - known stable marriage setting and is a fundamental model that is used for modelling exchange markets and auctions  @xcite .",
    "assignment games were later generalized to _ matching games _ , for _ non_-bipartite graphs  ( see * ? ? ?",
    "* ; * ? ? ?",
    "the main idea of a matching game is that each node represents an agent and the value of a coalition of nodes is the weight of the maximum weight matching in the subgraph induced by the coalition of nodes .",
    "whereas the matching game is one of the most natural and important cooperatives game , the shapley value has been termed `` the most important normative payoff division scheme '' in cooperative game theory  @xcite .",
    "it is based on the idea that the payoff of an agent should be proportional to his marginal contributions to the payoff for the set of all players . for an excellent overview of the concept ,",
    "we refer the reader to ( chapter 5 , * ? ? ?",
    "the shapley value is the only solution concept that satisfies simultaneously the following properties : efficiency , symmetry , additivity , and dummy player property . in this paper",
    "we address a gap in the computational cooperative game theory literature , and we initiate research on the computational aspects of the shapley value in matching games .",
    "this gap is surprising on two fronts : ( i ) computational aspects of shapley values have been extensively studied for a number of cooperative games  ( see * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "* ) . and ( ii ) matching games are a well - established class of cooperative games , and the structure and computational complexity of computing important solution concepts such as the core , least core , and nucleolus have been examined in - depth for matching games  ( see * ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "[ [ our - results . ] ] our results .",
    "+ + + + + + + + + + + +    we study the algorithmic aspects and computational complexity of the shapley value for matching games for the first time .",
    "we establish first some general insights and some particular special cases for which the exact shapley value can be computed in polynomial time for : graphs with a constant size decomposition into clique and coclique modules ( these include e.g. , complete @xmath0-partite graphs , for @xmath0 constant ) , and for graphs with maximum degree two .",
    "the non - trivial algorithm required for graphs of maximum degree two illustrates that exact computation of the shapley value quickly becomes rather complex , even for very simple graph classes .",
    "we then move on to the central results of this paper , which concerns the general problem : we prove that the computational complexity of computing the shapley value of matching games is # p - complete even if the graph is unweighted .",
    "the proof relies on berge s lemma and the fact that a certain matrix related to the pascal triangle has a non - zero determinant .",
    "we subsequently present an _ fpras _",
    "( i.e. , a _ fully polynomial time randomized approximation scheme _ ) for computing the shapley value of ( weighted ) matching games . in view of our # p - completeness result ,",
    "the fpras is best possible result we can hope for .",
    "due to space limitations , some proofs in this text have been deferred to the appendix .",
    "[ [ related - work . ] ] related work .",
    "+ + + + + + + + + + + + +    the complexity of computing the shapley value of important classes of cooperative games has been the topic of detailed studies . @xcite and @xcite presented polynomial - time algorithms to compute the shapley value of _ graph games _ and _ marginal contribution nets _ respectively . on the other hand , computing the shapley value",
    "is known to be intractable for a number of cooperative games  ( see * ? ? ?",
    "* ; * ? ? ?",
    "* ) .    among the classes of cooperative games ,",
    "matching games are one of the most well - studied .",
    "@xcite characterized the core of the matching games and showed that various problems regarding the core and the least core of matching games can be solved in polynomial time . for matching games ,",
    "there has been considerable algorithmic research on the _ nucleolus _ : an alternative single valued solution concept(see * ? ? ?",
    "* ; * ? ? ?",
    "the shapley value of a vertex in a matching game indicates the ability of a vertex to match with other vertices .",
    "it may thus also be viewed as a centrality index of a vertex .",
    "centrality indices of graphs have received immense interest  ( see * ? ? ?",
    "we work throughout this text with undirected weighted graphs @xmath2 , where @xmath3 is the vertex set , @xmath4 is the edge set , and @xmath5 is a weight function . for @xmath6 ,",
    "we denote by @xmath7 the subgraph of @xmath8 induced by @xmath9 , i.e. , the graph @xmath10 .",
    "some essential basic notions related to graphs and matchings may be found in the appendix .",
    "we assume for the remainder of this text that the reader is familiar with these .    a _ cooperative game _ consists of a set @xmath3 of @xmath11 players and a characteristic function @xmath12 associating a value @xmath13 to every subset @xmath14 . a subset of @xmath3 is referred to as a _ coalition _ in this context .",
    "a central question in the theory of cooperative games is to distribute the value @xmath15 among the players in a fair and stable manner .    a _ matching game _ is a cooperative game @xmath16 induced by an undirected weighted graph @xmath2 ( with vertex set @xmath3 , edge set @xmath4 , and weight function @xmath17 ) such that for any @xmath6",
    ", @xmath13 is the weight of a maximum weight matching of the subgraph @xmath7 . for a given graph @xmath8",
    ", we will denote by @xmath18 the matching game corresponding to graph @xmath8 .",
    "an _ unweighted _ matching game is a matching game for which all weights are @xmath19 in the associated graph . in unweighted matching games",
    ", it holds that @xmath20 for all @xmath21 , @xmath22 .",
    "if , for an unweighted matching game @xmath16 , a player @xmath23 , and a coalition @xmath24 , it holds that @xmath25 , then we say that player @xmath26 is _ pivotal _",
    "( for coalition @xmath9 , in game @xmath16 ) .",
    "similarly , if @xmath27 is a permutation on @xmath3 , and @xmath26 is pivotal for set of players @xmath28 ( i.e. , the players occurring before @xmath26 in @xmath29 ) is pivotal , then we say that @xmath29 is pivotal for @xmath26 .",
    "for the general case of weighted matching games , when @xmath9 is a coalition not containing player @xmath26 , we refer to the value @xmath30 as _ the marginal contribution of @xmath26 to @xmath9 .",
    "_ when @xmath29 is a permutation of @xmath3 , we refer to the value @xmath31 as _ the marginal contribution of @xmath26 to @xmath29 . _",
    "the _ shapley value _ of a player @xmath32 in a cooperative game @xmath16 is denoted by @xmath33 , and is defined as follows .",
    "@xmath34 @xmath35 is called the _ raw shapley value_. it is well - known and straightforward to obtain that the raw shapley value can be written as @xmath36 where @xmath37 is the set of permutations on the player set @xmath3 . for an unweighted matching game ,",
    "the raw shapley value of a player is thus equal to the number of pivotal permutations .",
    "we refer to the vectors @xmath38 and @xmath39 respectively as the shapley value and the raw shapley value of the game _ @xmath16_.    the players @xmath40 are called _ symmetric _ in @xmath16 if @xmath41 for any coalition @xmath42 .",
    "a player @xmath32 is a _ dummy _ if @xmath43 for all @xmath14 .",
    "the shapley value satisfies the following properties : ( i ) _ efficiency _ : @xmath44 ; ( ii ) _ symmetry _ :",
    "if @xmath40 are symmetric , then @xmath45 ; ( iii ) _ dummy _ : if @xmath26 is a dummy , then @xmath46 ; ( iv ) _ additivity _ : @xmath47 for all @xmath32 ; and @xmath48 on the same player set is defined in the standard way : as @xmath49 for all @xmath6 . ] and ( v ) _ anonymity _ : relabeling the agents does not affect their shapley value .",
    "we are interested in the following computational problem .",
    "+   + shapley + instance : a weighted graph @xmath50 and a specified player @xmath51 + question : compute @xmath52      in this subsection , we gain some general insights about the shapley value of matching games .",
    "first , if the graph is not connected , then the problem of computing the shapley value of the graph reduces to computing the shapley value of the respective connected components .",
    "[ lemma : components ] let @xmath2 be a weighted graph with @xmath0 connected components , and let the respective vertex sets of these connected components be @xmath53 .",
    "let @xmath54 be the characteristic function of the matching game @xmath18 on that graph , and let @xmath55 $ ] be the function that maps a vertex @xmath26 to the number @xmath0 such that @xmath56 . , we write @xmath57 $ ] to denote @xmath58 .",
    "] then , for every vertex @xmath26 it holds that @xmath59 , where @xmath60 denotes the characteristic function of the matching game on the subgraph induced by @xmath61 .",
    "it is rather straightforward to see that a vertex has a shapley value zero if and only if it is not connected to any other vertex .",
    "[ zeroshapley ] a player in a matching game has a non - zero shapley value if and only if there is an edge in the graph that contains the player .",
    "it can thus be decided in linear time whether a player in a matching game has a shapley value of zero .",
    "next , we present another lemma concerning the shapley value of unweighted matching games .",
    "[ lemma : basic ] consider an unweighted matching game @xmath16 .",
    "if for each @xmath62 $ ] , the number of coalitions of size @xmath63 for which player @xmath26 is pivotal in @xmath16 can be computed in time @xmath64 for some function @xmath65 , then the shapley value of @xmath26 can be computed in time @xmath66 .",
    "some classes of matching games for which computing the shapley value is trivial are symmetric graphs ( e.g. cliques and cycles ) , and graphs with a constant number of vertices .",
    "we proceed to prove this for two additional special cases : graphs that admit constant size ( co)clique modular decompositions , and graphs with degree at most two .",
    "an important concept in the context of undirected graphs is that of a _",
    "module_. a subset of vertices @xmath6 is a module if all members of @xmath9 have the same set of neighbors in @xmath67 .",
    "we can extend this notion to weighted graphs by requiring that all members of @xmath9 are connected to the same set of neighbors , by edges of the same weight .",
    "a _ modular decomposition _ is a partition of the vertex set into modules .",
    "a _ clique module _ ( resp . _ coclique module _ ) of a weighted graph is a module of which the vertices are pairwise connected by edges of the same weight ( resp .",
    "pairwise disconnected ) .",
    "note that every graph has a trivial modular decomposition into cliques ( and cocliques ) : the partition of @xmath3 into singletons .",
    "we prove that if an unweighted graph @xmath8 has a size @xmath0 modular decomposition consisting of only cliques or only cocliques , then the shapley value of @xmath18 can be found in polynomial time .",
    "in fact , we will show that this holds for the more general class of _ subgraph - based _ games : we call a cooperative game @xmath16 _ subgraph - based _ if there exists a weighted graph @xmath2 such that for @xmath68 , it holds that @xmath69 if @xmath7 and @xmath70 are isomorphic .    [",
    "th : modules ] consider a subgraph - based cooperative game @xmath16 .",
    "then , the shapley value of @xmath16 can be computed in polynomial time if the following conditions hold : i. ) the weighted graph @xmath2 associated to @xmath16 is given or can be computed from @xmath16 in polynomial time ; 2 . ) there exists a modular decomposition @xmath71 into @xmath0 cocliques or @xmath0 cliques and @xmath8 is unweighted in the latter case ; and iii . )",
    "@xmath13 can be computed in polynomial time for all @xmath6 .",
    "note first that one can find for @xmath8 in polynomial time a minimum cardinality modular decomposition into cocliques : simply check for each pair of vertices whether they are disconnected and connected to identical sets of vertices through edges with identical weights .",
    "if so , then they can be put in the same module .",
    "similarly , a minimum cardinality modular decomposition into cliques can be found in polynomial time in case the graph is unweighted , by finding a minimum cardinality modular decomposition into cocliques in the complement of @xmath8 ( i.e. , the graph that contains only those edges not in @xmath4 ) .",
    "a set of players @xmath9 is said to be of the same _ player type _",
    "if all players in @xmath9 are pairwise symmetric .",
    "we first show that all players in the same module of @xmath71 are of the same player type .",
    "let @xmath72 be two players in the same module @xmath73 in @xmath71 .",
    "then , for every coalition @xmath74 , the subgraphs @xmath75 and @xmath76 are isomorphic ( because @xmath77 is a clique or coclique ) , so @xmath78 .",
    "therefore , we know that the vertices can be divided into a constant number @xmath0 of player types .",
    "@xcite showed that any cooperative game in which the value of a given coalition can be computed in polynomial time , and there is known size @xmath0 partition of the players into sets of the same player type , then the shapley value can be computed in polynomial time via dynamic programming .",
    "the number of player types in our game is constant number @xmath0 of clique and coclique modules , and therefore the result of @xcite can be applied , and proves our claim .    for matching games ,",
    "the function @xmath54 can be evaluated using any polynomial time maximum weight matching algorithm .",
    "therefore , the above result implies that computing the shapley value can be done in polynomial time for classes of graphs where we can find efficiently a size @xmath0 modular decomposition into cliques or cocliques .",
    "this includes the class of complete @xmath0-partite graphs and any strong product and @xmath79 is defined as the graph @xmath80 , where @xmath81 .",
    "] of an arbitrary size clique ( or coclique ) with a graph on @xmath0 vertices .",
    "[ th : kpartite ] for matching games based on complete @xmath0-partite graphs , where @xmath0 is a constant , the shapley value can be computed in polynomial time .",
    "theorem  [ th : modules ] also applies to cooperative games such as @xmath63-@xmath82 vertex connectivity games and min - cost spanning tree games  @xcite , as these are subgraph - based games .",
    "we first examine _ linear graphs _ ( or : `` paths '' ) , i.e. , connected graphs in which two vertices have out - degree one and the remaining vertices have out - degree two .    [ lemma : line ] the shapley value of a player in a matching game on an unweighted linear graph can be computed in @xmath83 time .",
    "assume without loss of generality that the vertex set is @xmath84 $ ] and the edge set is @xmath85\\}$ ] , and that @xmath86 $ ] is the player of whom we want to compute the shapley value . fix any @xmath62 $ ] , and let @xmath87 be the number of coalitions of size @xmath63 for which vertex @xmath26 is pivotal .",
    "we compute @xmath87 by subdividing in separate cases and taking the sum of them :    * the number @xmath88 . intuitively : the number of coalitions @xmath9 where @xmath26 is pivotal such that adding @xmath26 to @xmath9 extends the left of a line segment . * the number @xmath89 . *",
    "the number @xmath90 .",
    "intuitively : the number of coalitions @xmath9 where @xmath26 is pivotal , such that @xmath26 connects two line segments .",
    "* @xmath91 .",
    "it is immediate that @xmath92 , since adding @xmath26 to a coalition @xmath9 not containing @xmath93 nor @xmath94 results in a coalition forming a subgraph in which @xmath26 is an isolated vertex . for the remaining three values , @xmath95 , @xmath96 , and @xmath97",
    ", we show below how to compute them efficiently .    * for @xmath95 , observe that adding a vertex to the left of a ( non - empty ) line segment @xmath98 increases the cardinality of a maximum matching if and only if @xmath98 has an even number of edges ( and thus an odd number of vertices ) .",
    "therefore , define @xmath99 to be the number of coalitions @xmath9 of size @xmath63 for which @xmath26 is pivotal such that @xmath9 contains the line segment @xmath100 , and does not contain @xmath101 .",
    "the number @xmath99 is easy to determine : @xmath102 \\backslash \\{i - 1 , \\ldots , i+k+2\\}|}{s - |\\{i - 1 , \\ldots , i+k+1\\ } \\cap [ n]| } & \\text { otherwise . }",
    "\\end{cases}\\ ] ] we can then express @xmath95 as @xmath103 .",
    "there is only a linear number of terms in this sum , and all of them can be computed in linear time .",
    "* @xmath96 is computed in an analogous fashion . * for @xmath97 , observe that adding a vertex @xmath26 to a coalition such that @xmath26 connects two line segments @xmath104 and @xmath105 , increases the cardinality of a maximum matching if and only if @xmath104 and @xmath105 do not both have an odd number of edges ( or equivalently : not both have an even number of vertices ) .",
    "therefore , define @xmath106 to be the number of coalitions @xmath9 of size @xmath63 for which @xmath26 is pivotal such that @xmath9 contains the line segments @xmath107 and @xmath108 , and does not contain @xmath109 .",
    "the number @xmath106 is easy to determine : @xmath110 \\backslash ( \\{i - k - 2 , \\ldots , i+k+2\\}|}{s - |\\{i - k - 1 , \\ldots , i+k+1\\ } \\cap [ n]| } & \\text { otherwise . } \\end{cases}\\ ] ] we can then express @xmath97 as @xmath111 the number of terms in this sum is quadratic , and all of these terms can be computed in linear time .",
    "we can thus compute @xmath97 in @xmath112 time .",
    "the claim now follows from lemma [ lemma : basic ] .    for graphs with maximum degree @xmath113 ,",
    "the shapley value can be computed in polynomial time .",
    "a graph with degree at most two is a disjoint union of cycles and linear graphs . from lemma  [ lemma : components ]",
    ", we can compute the shapley value of the connected components separately . from lemma  [ lemma : line ] , we know that the shapley value of linear graphs can be computed in polynomial time .",
    "due to anonymity , the shapley value of a cycle is uniform .",
    "the above proof for linear graphs demonstrates nicely that computation of the shapley value of a matching game already becomes intricate for even the simplest of graph structures",
    ". we would be interested in seeing an extension of this result that enables us to exactly compute the shapley value in _ any _ non - trivial class of graphs that contains a vertex of degree at least three .",
    "in this section , we examine the computational complexity of the general problem of computing the shapley value for matching games . as we mentioned in section [",
    "sec : preliminaries ] , shapley is equivalent to the problem of counting the number of pivotal permutations for a player in an unweighted matching game , and is therefore a counting problem .",
    "it is moreover easy to see that this counting problem is a member of the complexity class @xmath1 .",
    "is the class of computational problems that correspond to counting the number of accepting paths on a non - deterministic turing machine .",
    "we refer the reader to any introductory text on complexity theory . ]    for certain cooperative games such as weighted voting games  @xcite , intractability of computing the shapley value can be established by proving that even checking whether a player gets non - zero shapley value is @xmath114-complete .",
    "proposition [ zeroshapley ] tells us that this is not the case for matching games .",
    "before we proceed , we establish some notation .",
    "let @xmath115 be a graph .",
    "let @xmath116 be the number of vertex sets @xmath6 such that @xmath117 and the subgraph @xmath7 of @xmath8 induced by @xmath9 admits a perfect matching .",
    "then @xmath118 is the number of subsets @xmath6 of size @xmath0 such that @xmath7 does not admit a perfect matching . in order to characterize the complexity of shapley",
    ", we first define the following problem . +   + # matchablesubgraphs@xmath119 + instance : undirected and unweighted graph @xmath115 and an even integer @xmath0 .",
    "+ question : compute @xmath116 .",
    "[ lemma : countinghard ] # matchablesubgraphs@xmath119 is @xmath1-complete .",
    "@xcite proved that the following problem is @xmath1-complete : given an undirected and unweighted bipartite graph @xmath120 , compute the number of subsets of @xmath121 , such that @xmath122 admits a perfect matching .",
    "that does not admit a perfect matching , appears to be open . ]",
    "the problem is equivalent to # matchablesubgraphs@xmath123 .",
    "computing the shapley value of a matching game on an unweighted graph is @xmath1-complete .",
    "we present a polynomial - time turing reduction from # matchablesubgraphs@xmath119 to shapley .",
    "let @xmath124 be the graph in which a new vertex @xmath125 is added to @xmath126 that is connected to all vertices in @xmath3 .",
    "for @xmath127 , let @xmath128 be @xmath124 with @xmath26 additional vertices @xmath129 and @xmath26 additional edges @xmath130\\}$ ] .",
    "the first part of the proof consists of showing that the following set of equations hold :    _ y_i(mg(g_i ) ) = & i [ eq : reductioneven ] + & i [ eq : reductionodd ]    where @xmath131    define a _ type 1 pivotal coalition for @xmath132 in @xmath133 _ as a pivotal coalition for @xmath26 in @xmath133 that _ does not _ contain all players @xmath134 .",
    "define a _ type 2 pivotal coalition for @xmath132 in @xmath133 _ as a pivotal coalition for @xmath132 in @xmath133 that _ does _",
    "contain all players @xmath134 .",
    "denote by @xmath135 ( resp .",
    "@xmath136 ) the set of type 1 ( resp .",
    "type 2 ) pivotal coalitions for @xmath26 in @xmath133 that are of size @xmath63 . from ( [ eq : rawshapley1 ] ) , it follows that @xmath137    first we characterize the coalitions in @xmath136 .",
    "[ lem : char ] if @xmath26 is even , a coalition @xmath9 of @xmath133 is in @xmath136 if and only if @xmath138 is not perfectly matchable ( and @xmath139 ) .",
    "if @xmath26 is odd , a coalition @xmath9 of @xmath133 is in @xmath136 if and only if @xmath138 is perfectly matchable ( and @xmath139 ) .",
    "the proof of lemma [ lem : char ] is deferred to the appendix . from the above lemma , it follows that the coalitions in @xmath136 are precisely the coalitions of the form @xmath140 , where @xmath141 is such that for even @xmath26 , @xmath70 is not perfectly matchable , and for odd @xmath26 , @xmath70 is perfectly matchable .",
    "therefore @xmath142 for even @xmath26 and @xmath143 for odd @xmath26 , and this implies : @xmath144 in words : the second summation of ( [ eq : rawshapleytypes ] ) equals the summation of ( [ eq : reductioneven ] ) when @xmath26 is even , and the summation of ( [ eq : reductionodd ] ) when @xmath26 is odd .",
    "therefore , it suffices to prove that the first summation of ( [ eq : rawshapleytypes ] ) equals @xmath145 .    for this sake ,",
    "define @xmath146 for @xmath147 $ ] as @xmath148 .",
    "observe that @xmath149 is a partition of @xmath135 .",
    "for a given @xmath0 and @xmath63 , note that the set @xmath146 consists of all coalitions of the form @xmath150 , where @xmath151 , @xmath152 .",
    "hence , @xmath153 ( defining @xmath154 whenever @xmath155 or @xmath156 ) . therefore : @xmath157 this shows that ( [ eq : reductioneven ] ) and ( [ eq : reductionodd ] ) hold .    the second part of the proof consists of showing that all @xmath158 $ ] can be computed from @xmath159 in polynomial time , using ( [ eq : reductioneven ] ) and ( [ eq : reductionodd ] ) , for @xmath86 \\cup \\{0\\}$ ] .",
    "this is sufficient to complete the proof , because the graphs @xmath160 can clearly be constructed from @xmath8 in polynomial time , hence a polynomial time algorithm that computes @xmath161 from @xmath162 $ ] is a polynomial turing reduction .",
    "let @xmath163 for even @xmath26 and let @xmath164 for odd @xmath26",
    ". we can represent ( [ eq : reductioneven ] ) and ( [ eq : reductionodd ] ) for @xmath86 \\cup \\{0\\}$ ] as the following system of equations : @xmath165    denote by @xmath166 the @xmath167 matrix in the above equation . recall that a scalar multiplication of a column by a constant @xmath168 multiplies the determinant by @xmath168 .",
    "therefore , @xmath166 is nonsingular if and only if nonsingularity also holds for the @xmath167 matrix @xmath169 , defined by @xmath170 .",
    "@xmath169 is a matrix that is related to pascal s triangle , and it is known that its determinant is equal to @xmath171  @xcite .",
    "it follows that @xmath166 is nonsingular , so our system of equations ( [ eq : system ] ) is linearly independent and has a unique solution .",
    "note that all entries in the system can be computed in polynomial time ( assuming that the shapley value of a matching game is polynomial time computable ) : the constants @xmath145 consist of polynomially many terms , and all factorials and binomial coefficients that occur in ( @xmath172 ) are taken over numbers of magnitude polynomial in @xmath173 .",
    "therefore , we can use gaussian elimination to solve ( [ eq : system ] ) in @xmath112 time .",
    "it follows that for all @xmath86 $ ] , @xmath174 can be computed in polynomial time , and hence @xmath175 can be computed in polynomial time .",
    "therefore , if there exists an algorithm that solves shapley in polynomial time , then it can also be used to solve # matchablesubgraphs@xmath119 in polynomial time .",
    "in this section , we show that although computing exactly the shapley value of matching games is a hard problem , approximating it is much easier .",
    "let @xmath176 be a finite alphabet in which we agree to describe our problem instances and solutions .",
    "fully polynomial time randomized approximation scheme ( fpras ) _ for a function @xmath177 is an algorithm that takes input @xmath178 and a parameter @xmath179 , and returns with probability at least @xmath180 a number in between @xmath181 and @xmath182 .",
    "moreover , an fpras is required to run in time polynomial in the size of @xmath183 and @xmath184 .",
    "the probability of @xmath180 is chosen arbitrarily : by a standard amplification technique , it can be replaced by an arbitrary number @xmath185 $ ] .",
    "the resulting algorithm would then run in time polynomial in @xmath186 , and @xmath187 .",
    "we will now formulate an algorithm that approximates the raw shapley value of a player in a weighted matching game , and show that it is an fpras .",
    "note that we can not utilize approximation results in @xcite and @xcite since matching games are neither convex nor simple .",
    "our fpras is based on monte carlo sampling , and works as follows : let @xmath188 be the input , where @xmath8 is the weighted graph representing matching game @xmath18 , @xmath23 is a player in @xmath18 , and @xmath189 is the precision parameter . for notational convenience ,",
    "we write @xmath35 as a shorthand for @xmath190 .",
    "the algorithm first determines whether @xmath191 ( observation [ zeroshapley ] ) .",
    "if so , then it outputs @xmath192 and terminates . if not , then it samples @xmath193 permutations of the player set uniformly at random . denote this multiset of sampled permutations by @xmath194 .",
    "the algorithm then outputs the average marginal contribution of player @xmath26 over the permutations in @xmath194 and terminates .",
    "note that this average marginal contribution is efficiently computable : it is given by @xmath195 times the sum of the marginal contributions of player @xmath26 to each of the sampled permutations . determining these marginal contributions can be done in polynomial time , using any maximum weight matching algorithm .",
    "denote our sampling algorithm by _ matchinggame - sampler_.    matchinggame - sampler resembles the algorithms in @xcite : the differences are that the algorithm takes a different number of samples , and that it determines whether the shapley value of player @xmath26 is @xmath192 prior to running the sampling procedure .",
    "moreover , its proof of correctness requires different insights .",
    "matchinggame - sampler is an fpras for the raw shapley value in a weighted matching game .",
    "denote by @xmath196 the output of the algorithm .",
    "if @xmath191 , then matchinggame - sampler is guaranteed to output the right solution , so assume that @xmath197 .",
    "let @xmath198 be the maximum weight among the edges attached to @xmath26 , and let @xmath199 be an edge that is attached to @xmath26 such that @xmath200 .",
    "let @xmath201 be a random variable that takes the value of @xmath202 times the marginal contribution of player @xmath26 in a uniformly randomly sampled permutation of the players .",
    "note that @xmath203 = \\kappa_i$ ] .",
    "note that the marginal contribution of a player in any permutation is at most @xmath198 , so @xmath201 is at most @xmath204 .",
    "let @xmath205 be the neighbor of @xmath26 connected by @xmath206 .",
    "observe that any permutation in which @xmath205 is positioned first , and @xmath26 is positioned second , is a permutation for @xmath26 in which the marginal contribution of @xmath26 is @xmath198 .",
    "there are @xmath207 such permutations , so the raw shapley value @xmath35 of @xmath26 is at least @xmath208 . for the variance of @xmath201",
    "we obtain @xmath209 & = \\mathbf{e}[x^2 ] - \\mathbf{e}[x]^2 \\leq \\mathbf{e}[x^2 ] \\leq ( w_i^{\\max})^2 n!^2 \\leq n^2 ( n-1)^2 \\kappa_i^2 . \\ ] ] observe that @xmath196 is a random variable that is equal to @xmath210 where @xmath211 are independent random variables with the same distribution as @xmath201 . from this",
    "we obtain that @xmath212 = \\mathbf{e}[x ] = \\kappa_i$ ] .",
    "the desired approximation guarantee then follows from chebyshev s inequality , and completes the proof : @xmath213 & \\leq & \\frac{\\mathbf{var}[\\bar{\\kappa}_i]}{\\epsilon^2 \\kappa_i^2 }   = \\frac{\\mathbf{var}\\left[\\frac{1}{\\lceil",
    "4n^2(n-1)^2 / \\epsilon^2 \\rceil}\\sum_{j = 1}^{\\lceil 4n^2(n-1)^2 / \\epsilon^2 \\rceil } x_j\\right]}{\\epsilon^2 \\kappa_i^2 } \\\\ & = & \\frac{\\left(\\frac{\\mathbf{var}[x]}{\\lceil 4n^2(n-1)^2 / \\epsilon^2 \\rceil}\\right)}{\\epsilon^2 \\kappa_i^2 } \\leq   \\frac{n^2(n-1)^2\\kappa_i^2}{(4n^2(n-1)^2 / \\epsilon^2 ) \\cdot \\epsilon^2 \\kappa_i^2 } \\leq \\frac14 .\\end{aligned}\\ ] ]    the algorithm that runs matchinggame - sampler and returns its output scaled down by @xmath214 , is an fpras for the shapley value of a weighted matching game .",
    "observe that matchinggame - sampler is an fpras in the strong sense that its running time does not depend on the weights of the edges . due to the @xmath1-completeness result stated in theorem [ lemma : countinghard ] , this fpras is the best one can hope for , and provides us with a complete answer to the precise complexity of this problem ( based on our best judgment ) .    [",
    "[ acknowledgements . ] ] acknowledgements .",
    "+ + + + + + + + + + + + + + + + +    the authors thank ross kang for various helpful discussions .",
    "22 [ 1]#1 [ 1]`#1 ` urlstyle [ 1]doi : # 1    a.  alkan and d.  gale . the core of the matching game .",
    "_ games and economic behavior _ , 20 ( 3):0 203212 , 1990 .",
    "h.  aziz , o.  lachish , m.  paterson , and r.  savani .",
    "power indices in spanning connectivity games . in _ proc .",
    "of 5th international conference on algorithmic aspects in information and management ( aaim ) _ , volume 5564 of _ lncs _ , pages 5567 .",
    "springer , 2009 .",
    "r.  bacher .",
    "determinants of matrices related to the pascal triangle . _ journal de thorie des nombres de bordeaux _ , 14:0 1941 , 2002 .",
    "y.  bachrach , e.  markakis , e.  resnick , a.  d. procaccia , j.  s. rosenschein , and a.  saberi . approximating power indices : theoretical and empirical analysis .",
    "_ autonomous agents and multi - agent systems _ , 20:0 105122 , 2010 .",
    "u.  brandes and t.  erlebach , editors . _",
    "network analysis _ ,",
    "volume 3418 of _",
    "lncs_. springer , 2005 .",
    "c.  j. colbourn , j.  s. provan , and d.  vertigan .",
    "the complexity of computing the tutte polynomial on transversal matroids .",
    "_ combinatorica _ , 150 ( 1):0 110 , 1995 .",
    "x.  deng and z.  fang .",
    "algorithmic cooperative game theory . in a.",
    "chinchuluun , p.  m. pardalos , a.  migdalas , and l.  pitsoulis , editors , _ pareto optimality , game theory and equilibria _ , volume  17 of _ springer optimization and its applications_. springer - verlag , 2008 .",
    "x.  deng and c.  h. papadimitriou . on the complexity of cooperative solution concepts .",
    "_ mathematics of operations research _ , 120 ( 2):0 257266 , 1994 .",
    "x.  deng , t.  ibaraki , and h.  nagamochi .",
    "algorithmic aspects of the core of combinatorial optimization games .",
    "_ mathematics of operations research _ , 240 ( 3):0 751766 , 1999 .",
    "j.  edmonds .",
    "paths , trees and flowers .",
    "_ canadian journal of mathematics _ , 17:0 449467 , 1965 .",
    "e.  elkind , l.  a. goldberg , p.  w. goldberg , and m.  wooldridge .",
    "on the computational complexity of weighted voting games .",
    "_ annals of mathematics and artificial intelligence _ , 560 ( 2):0 109131 , 2009 .",
    "s.  ieong and y.  shoham .",
    "marginal contribution nets : a compact representation scheme for coalitional games . in _ proc .  of 6th acm - ec conference _ , pages 193202 .",
    "acm press , 2005 .",
    "w.  kern and d.  paulusma .",
    "matching games : the least core and the nucleolus .",
    "_ mathematics of operations research _ , 280 ( 2):0 294308 , 2003 .    d.  liben - nowell , a.  sharp , t.  wexle , and k.  woods . computing shapley value in supermodular coalitional games . in _ proc .  of 18th cocoon _",
    ", 2011 .    i.  mann and l.  s. shapley .",
    "values of large games , iv : evaluating the electoral college by montecarlo techniques .",
    "technical report rm-2651 , rand corporation , 1960 .",
    "h.  moulin .",
    "_ fair division and collective welfare_. the mit press , 2003 .",
    "a.  roth and m.  a.  o. sotomayor .",
    "_ two - sided matching : a study in game theoretic modelling and analysis_. cambridge university press , 1990 .",
    "l.  s. shapley . a value for n - person games .",
    "_ annals of math studies _ , 28:0 307317 , 1953 .",
    "l.  s. shapley and m.  shubik . .",
    "_ international journal of game theory _",
    ", 1:0 111130 , 1972 .",
    "t.  solymosi and t.  e.  s. raghavan .",
    "an algorithm for finding the nucleolus of assignment games . _",
    "international journal of game theory _ , 23:0 119143 , 1994 .",
    "s.  ueda , m.  kitaki , a.  iwasaki , and m.  yokoo .",
    "concise characteristic function representations in coalitional games based on agent types . in t.",
    "walsh , editor , _ proc .",
    "of 22nd ijcai _ , pages 393399 .",
    "aaai press , 2011 .",
    "e.  winter . .",
    "handbook of game theory with economic applications _ , chapter  53 , pages 20252054 .",
    "elsevier , 2002 .",
    "[ [ graphs - and - matchings - basics . ] ] graphs and matchings basics .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + +    given an undirected graph @xmath126 ( with vertex set @xmath3 and edge set @xmath4 ) , a _ matching _ of @xmath8 is a subset @xmath73 of @xmath4 such that @xmath215 when @xmath216 , @xmath217 .",
    "when discussing a particular matching @xmath73 , we refer to the edges of a matching @xmath73 as _ matched edges _ , and those outside @xmath73 as _ unmatched edges_. a _ matched graph _ is a pair @xmath218 where @xmath8 is a graph and @xmath73 is a matching of @xmath8 .",
    "a _ maximum matching _ of @xmath8 is a matching of maximum cardinality among the set of all matchings of @xmath8 .",
    "we call a vertex @xmath26 _ exposed _ or _ unmatched _ in @xmath218 when @xmath26 is not in any edge of @xmath73 . otherwise , we call @xmath26 _ matched_. an _ alternating path _ @xmath194 in @xmath218 is a path in @xmath8 where the edges of @xmath194 alternate between edges in @xmath73 and edges in @xmath219 .",
    "an _ augmenting path _",
    "@xmath194 ( with respect to a matching @xmath73 ) is an alternating path in @xmath8 of which the endpoints are both exposed vertices .",
    "an augmenting path thus has odd length , starts with an unmatched edge , and ends with an unmatched edge .",
    "the following lemma is fundamental to matching theory :      suppose we have a matching @xmath73 for a graph @xmath8 that is not a maximum matching .",
    "then by the above lemma , there is an augmenting path @xmath194 .",
    "it can be seen that removing from @xmath73 the matched edges of @xmath194 and adding to @xmath73 the unmatched edges of @xmath194 , gives us a bigger matching ( i.e. , a matching with one additional edge ) .",
    "we refer to this as the operation of _ augmenting @xmath73 along @xmath194_. likewise , it is possible to augment a matching along an even - length alternating path with one exposed vertex and one matched vertex as endpoints .",
    "augmenting along such a path does not increase the cardinality of the matching .",
    "observe that if @xmath194 is an alternating path that is not augmenting , then it still possible to augment the matching along @xmath194 iff one of the endpoints of @xmath194 is an exposed vertex .",
    "edmonds blossom algorithm  @xcite is a polynomial time algorithm for finding a maximum weight matching in a graph .",
    "let @xmath221 and @xmath222 be two distinct maximum matchings for an unweighted graph @xmath220",
    ". then @xmath222 can be obtained from @xmath221 by a sequence of augmentations along mutually disjoint even - length alternating paths and even - length alternating cycles .",
    "a rough sketch of a proof for this is as follows : we investigate the symmetric difference @xmath223 of @xmath221 and @xmath222 , and conclude that @xmath223 must be a collection of disjoint even - length paths and even length cycles of which the edges alternate between edges in @xmath221 and edges in @xmath222 .",
    "a cycle in @xmath223 must be an alternating cycle in @xmath221 , and a path in @xmath223 must be an alternating path in @xmath221 . after augmenting @xmath221 along such a cycle or path ,",
    "we obtain a matching @xmath224 such that the symmetric difference between @xmath224 and @xmath222 is @xmath223 minus the cycle or path that we augmented . so by augmenting along all paths and cycles in @xmath223",
    ", we obtain @xmath222",
    ".        therefore , let @xmath227 and @xmath228 be the vertex sets of the two connected components of @xmath8 , and let @xmath229 and @xmath230 denote the matching game obtained by removing from the graph all edges among vertices in respectively @xmath227 and @xmath228 .",
    "note that @xmath231 is the sum of @xmath232 and @xmath233 .    by the additivity property of the shapley value",
    ", it therefore holds for every player @xmath26 that @xmath234 .",
    "it suffices to show that @xmath235 for all @xmath236 and that @xmath237 for all @xmath238 .",
    "we do this by showing that @xmath239 , where @xmath205 is an arbitrary player from @xmath240 .",
    "the claim for @xmath241 then follows by induction and symmetry .",
    "( @xmath245 ) let @xmath73 be a maximum matching for @xmath246 .",
    "@xmath9 is pivotal , so @xmath73 is not a perfect matching .",
    "we can assume though , that all vertices @xmath247 are matched to each other in the matched graph @xmath248 , because @xmath249 is a linear graph with an even number of vertices , and is thus perfectly matchable .",
    "it follows that the exposed nodes of @xmath248 are all in @xmath3 , and therefore the matching @xmath73 restricted to @xmath3 is a maximum matching for @xmath250 that is non - perfect .",
    "( @xmath251 ) let @xmath73 be a maximum ( non - perfect ) matching for @xmath138 and let @xmath252 be an exposed vertex of @xmath253 .",
    "then @xmath254 is a maximum matching for @xmath246 , by berge s lemma ( lemma [ bergeslemma ] ) , as it is clear that there is no augmenting path in @xmath255 .",
    "moreover , observe that in @xmath255 there is an even - length alternating path from @xmath252 to @xmath256 . therefore , there is in @xmath257 an augmenting path from @xmath252 to @xmath132 , and it follows again by berge s lemma that @xmath9 is pivotal .",
    "( @xmath245 ) let @xmath258 be a maximum matching for @xmath246 .",
    "@xmath9 is pivotal , so in @xmath259 there is an even - length alternating path @xmath194 from an exposed node @xmath252 to @xmath256 . obtain the matching @xmath73 by augmenting @xmath258 along @xmath194 .",
    "@xmath73 is then a maximum matching for @xmath246 in which @xmath256 is exposed .",
    "@xmath249 is a linear graph and @xmath73 is maximum , so it follows that @xmath256 is the only exposed node in @xmath260 among @xmath261 .",
    "therefore @xmath262 must be matched to each other in @xmath263 ( for otherwise , in @xmath260 there would be an augmenting path from @xmath256 to an exposed node of @xmath262 , contradicting the fact that @xmath73 is a maximum matching for @xmath246 ) .",
    "it follows that @xmath138 is perfectly matchable .",
    "( @xmath251 ) let @xmath73 be a maximum perfect matching for @xmath138 .",
    "let @xmath258 be a maximum matching for @xmath249 in which @xmath256 is the only exposed node .",
    "then @xmath264 is a matching for @xmath246 in which @xmath256 is the only exposed node .",
    "@xmath264 is clearly a maximum matching , and in @xmath265 the edge @xmath266 is exposed .",
    "so @xmath9 is pivotal ."
  ],
  "abstract_text": [
    "<S> this paper concerns the analysis of the _ shapley value _ in _ matching games_. matching games constitute a fundamental class of cooperative games which help understand and model auctions and assignments . in a matching game , the value of a coalition of vertices is the weight of the maximum size matching in the subgraph induced by the coalition . </S>",
    "<S> the shapley value is one of the most important solution concepts in cooperative game theory .    after establishing some general insights , </S>",
    "<S> we show that the shapley value of matching games can be computed in polynomial time for some special cases : graphs with maximum degree two , and graphs that have a small modular decomposition into cliques or cocliques ( complete @xmath0-partite graphs are a notable special case of this ) . </S>",
    "<S> the latter result extends to various other well - known classes of graph - based cooperative games .    </S>",
    "<S> we continue by showing that computing the shapley value of unweighted matching games is @xmath1-complete in general . </S>",
    "<S> finally , a fully polynomial - time randomized approximation scheme ( fpras ) is presented . </S>",
    "<S> this fpras can be considered the best positive result conceivable , in view of the @xmath1-completeness result . </S>"
  ]
}
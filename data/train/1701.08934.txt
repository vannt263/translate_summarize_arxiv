{
  "article_text": [
    "solving the time - independent schrdinger equation for an arbitrary potential energy function @xmath0 is difficult .",
    "there are no generally applicable analytical methods . in one dimension",
    "it is straightforward to integrate the equation numerically , starting at one end of the region of interest and working across to the other . for bound - state problems where one does not know the energy in advance ,",
    "the integration must be repeated for different energies until the correct boundary condition at the other end is met ; this algorithm is called the shooting method.@xcite    for an irregular potential in two or more dimensions , however , the shooting method does not work because there are boundary conditions that must be met on all sides .",
    "one can still use matrix methods,@xcite but the amount of computation required can be considerable and the diagonalization routines are mysterious black boxes to most students .",
    "this paper describes a numerical method for obtaining the ground state and low - lying excited states of a bound system in two or more dimensions , based on the variational principle .",
    "the algorithm is closely related to the relaxation method@xcite for solving poisson s equation , with the added complication that the equation being solved depends on the energy , which is not known in advance .",
    "the algorithm is reasonably intuitive and easy to code .",
    "the following section explains the most basic version of the algorithm , while sec .",
    "iii derives the key formula using the variational method .",
    "section  iv presents an implementation of the algorithm in mathematica .",
    "section  v generalizes the algorithm to find low - lying excited states , and sec .",
    "vi presents two nontrivial examples .",
    "the last two sections briefly discuss other related algorithms and how such calculations can be incorporated into the undergraduate physics curriculum .",
    "a standard exercise in computational physics@xcite is to solve poisson s equation , @xmath1 where @xmath2 is a known function , by the method of _ relaxation _ : discretize space with a rectangular grid and , starting with an arbitrary function @xmath3 that matches the desired boundary conditions , repeatedly loop over all the grid points that are not on the boundaries , adjusting each @xmath4 value in relation to its nearest neighbors to satisfy a discretized version of poisson s equation . to obtain that discretized version ,",
    "write each term of the laplacian operator in the form @xmath5 where @xmath6 is the grid spacing and @xmath7 is a unit vector in the @xmath8  direction . solving the discretized poisson equation for @xmath3 then gives the needed formula , @xmath9 where @xmath10 and @xmath11 are the values of @xmath4 and @xmath12 at @xmath13 ( the `` current '' grid location ) , @xmath14 is the dimension of space , and @xmath15 is the average of the @xmath4 values at the @xmath16 nearest - neighbor grid locations . as this formula",
    "is applied repeatedly at all grid locations , the array of @xmath4 values `` relaxes '' to the desired self - consistent solution of poisson s equation that matches the fixed boundary conditions , to an accuracy determined by the grid resolution .",
    "what is far less familiar is that this method can be adapted to solve the time - independent schrdinger equation . to see the correspondence ,",
    "write the equation with only the laplacian operator term on the left - hand side : @xmath17 where @xmath18 is the energy eigenvalue , @xmath0 is the given potential energy function , and i am using natural units in which @xmath19 and the particle mass are equal to  1 . discretizing the derivatives gives a formula of the same form as eq .",
    "( [ discretepoisson ] ) , @xmath20 where the subscripts carry the same meanings as in eq .",
    "( [ discretepoisson ] ) .",
    "the appearance of @xmath21 on the right - hand side creates no difficulty at all , because we can solve algebraically for @xmath21 : @xmath22 the more pressing question is what to do with @xmath18 , the energy eigenvalue that we do not yet know .",
    "the answer is that we can replace it with the energy expectation value @xmath23 where @xmath24 is the hamiltonian operator , updating this expectation value after each step in the calculation .",
    "( the denominator in eq .",
    "( [ averagee ] ) is needed because the algorithm does not maintain the normalization of  @xmath25 . )",
    "as the relaxation process proceeds @xmath26 will steadily decrease , and we will eventually obtain a self - consistent solution for the ground - state energy and wave function .    the inner products in eq .",
    "( [ averagee ] ) are integrals , but we can compute them to sufficient accuracy as ordinary sums over the grid locations .",
    "the denominator is simply @xmath27 where the index @xmath28 runs over all grid locations and i have assumed that @xmath25 is real .",
    "similarly , the potential energy contribution to the numerator is @xmath29 to obtain the kinetic energy ( @xmath30 ) contribution we again discretize the derivatives as in eq .",
    "( [ secondderivapprox ] ) , arriving at the expression @xmath31 each of these inner products must be updated after every change to one of the @xmath32 values , but there is no need to evaluate them from scratch",
    ". when we change @xmath33 to @xmath34 , the corresponding changes to the inner products are @xmath35 where the factor of 2 in the first term of the third expression arises because there is an identical contribution of this form from the terms in the sum of eq .",
    "( [ intpsikpsi ] ) in which @xmath28 is one of the neighboring grid locations .    the algorithm , then , is as follows :    1 .   discretize space into a rectangular grid , placing the boundaries far enough from the region of interest that the ground - state wave function will be negligible there .",
    "2 .   initialize the array of @xmath25 values to represent a smooth , nodeless function such as the ground state of an infinite square well or a harmonic oscillator .",
    "all the @xmath25 values on the boundaries should be zero and will remain unchanged .",
    "3 .   use eqs .",
    "( [ intpsisquared ] ) through ( [ intpsikpsi ] ) to calculate @xmath36 , @xmath37 , and @xmath26 for the initial @xmath25 array .",
    "loop over all interior grid locations , setting the @xmath25 value at each location to @xmath38 also use eqs .",
    "( [ intpsisquaredchange ] ) through ( [ intpsikpsichange ] ) to calculate the changes to @xmath37 and @xmath36 that result from this change to @xmath21 , and use these to update the value of  @xmath26 before proceeding to the next grid location .",
    "repeat step 4 until @xmath26 and @xmath39 no longer change , within the desired accuracy .",
    "the simplest procedure , as just described , is to update each @xmath25 value `` in place , '' so that a change at one grid location immediately affects the calculation for the next grid location . in the usual terminology of relaxation methods , this approach",
    "is called the _ gauss - seidel _",
    "in the previous section i asserted , but did not prove , that @xmath26 will steadily decrease during the relaxation process . to see why this happens , it is instructive to derive eq .",
    "( [ psi0formula ] ) using the variational method of quantum mechanics.@xcite the idea is to treat each local value @xmath21 as a parameter on which the function @xmath39 depends , and adjust these parameters , one at a time , to minimize the energy expectation value @xmath26 .",
    "so let us consider how the expression for @xmath26 in eq .",
    "( [ averagee ] ) depends on  @xmath21 .",
    "focusing first on the denominator of eq .",
    "( [ averagee ] ) , we discretize the integral as in eq .",
    "( [ intpsisquared ] ) , but rewrite the sum as @xmath40 where @xmath41 is an abbreviation for all the terms in the sum that do not depend on  @xmath21 .",
    "similarly , the discretization of eqs .",
    "( [ intpsivpsi ] ) and ( [ intpsikpsi ] ) allows us to write the numerator of eq .",
    "( [ averagee ] ) as @xmath42 where the factor of 2 in the first term is the same as in eq .",
    "( [ intpsikpsichange ] ) and @xmath43 is an abbreviation for all the terms that do not depend on  @xmath21 .        inserting eqs .",
    "( [ denominator ] ) and ( [ numerator ] ) into eq .",
    "( [ averagee ] ) gives @xmath44 where i have written the @xmath43 and @xmath41 terms first because they are larger than the others by a factor on the order of the total number of lattice points.@xcite we are looking for the value of @xmath21 that minimizes this expression .",
    "differentiating with respect to  @xmath21 and setting the result equal to  0 gives a complicated equation , but in the limit of a large lattice it is a valid approximation to keep only the leading terms in @xmath41 and  @xmath43 . with that approximation , after some algebra , the extremization condition reduces to @xmath45 the ratio @xmath46 is equal to @xmath26 in the limit of a large lattice , so this result is effectively the same as eq .",
    "( [ psi0formula ] ) . by similarly focusing on the leading nontrivial terms in powers of @xmath41 and @xmath43",
    "it is straightforward to show that this extremum is a minimum , so long as the lattice spacing  @xmath6 is sufficiently small .",
    "we can therefore be confident that each step of the algorithm will reduce the value of  @xmath26 .",
    "this result suggests , but does not prove , that the algorithm will converge to the system s ground state .",
    "in fact there can be situations in which the algorithm converges ( or almost converges ) to an excited state instead of the ground state .",
    "but if the initial wave function is sufficiently similar to the ground state that the algorithm will bring @xmath26 below every excited - state energy , then the ground state is the only possible result after sufficiently many iterations .",
    "figure 1 shows a basic implementation of the variational - relaxation algorithm in mathematica,@xcite for a two - dimensional potential well .",
    "translating this example to other computer languages should be straightforward .",
    "the first few lines of code define the size of the lattice ( here @xmath47 ) , initialize the wave function to the ground state of an infinite square well of this size , and then plot the initial wave function using a custom plotting function that maps the array of lattice points to the square in the @xmath48 plane extending from 0 to  1 in each direction .",
    "notice that the array size is actually one element larger in each dimension than the nominal lattice size ( that is , @xmath49 in this case ) , so that the edges can be mapped to exactly 0 and  1 , where the wave function will be held fixed throughout the calculation .",
    "notice also that an offset of  1 is required when indexing into the array , because mathematica array indices start at 1 rather than  0 .",
    "the next two lines define and plot an array of values to represent the potential energy function . here , for testing purposes , that function is a harmonic oscillator potential with a classical angular frequency of 40 natural units in the @xmath8 direction and 60 in the @xmath50 direction .",
    "the rest of the code is sufficiently versatile , however , that virtually any potential energy function can be used , so long as its discrete representation will be reasonably accurate .",
    "the next six lines of code calculate the inner products @xmath36 and @xmath37 , according to eqs .",
    "( [ intpsisquared ] ) through  ( [ intpsikpsi ] ) . because the width of the two - dimensional space is one unit , the lattice spacing  @xmath6 is the reciprocal of the lattice size ( 1/50 ) .",
    "for @xmath36 and @xmath51 it is easiest to use mathematica s list arithmetic capabilities , but to compute @xmath52 we resort to explicit looping and array indexing .",
    "the last line in this group displays the initial value of  @xmath26 .",
    "the algorithm itself is implemented in the ` relax ` function , whose argument is the number of times to iterate the algorithm for each lattice site . for each iteration step",
    "we loop over all the lattice sites and for each site , save the old wave function value , calculate the new value from eq .",
    "( [ psi0formula ] ) , and update the inner products @xmath36 and @xmath37 via eqs .",
    "( [ intpsisquaredchange ] ) through ( [ intpsikpsichange ] ) .",
    "when everything is finished we display the final value of @xmath26 and then plot the final wave function . to actually execute this function we type something like ` relax[100 ] ` for 100 iteration steps .",
    "we can do this repeatedly , checking the results for convergence .    in this case , 100 iteration steps results in an energy value of 49.97 , within less then 0.1% of the analytically known value of 50 in natural units ( that is , @xmath53 times the sum of the @xmath8 and @xmath50 frequencies ) .",
    "after another 100 steps the energy converges to 49.94 .",
    "the calculated wave function has the familiar gaussian shape . on a typical laptop computer",
    ", mathematica can execute 100 iteration steps for a @xmath47 lattice in just a few seconds .",
    "an easy trick for speeding up the algorithm is to use _ over - relaxation_,@xcite in which we try to anticipate subsequent iterations by `` stretching '' each change to a @xmath25 value by a factor between 1 and  2 .",
    "so if we call the value of expression ( [ psi0formula ] ) @xmath54 , then the formula to update @xmath21 becomes @xmath55 where the `` stretch factor '' @xmath56 is called the over - relaxation parameter .",
    "figure  2 shows how the rate of convergence depends on  @xmath56 , for the two - dimensional harmonic oscillator example described in the preceding section .     as a function of the iteration number , for the two - dimensional harmonic oscillator example used in sec .",
    "the different data sets are for different values of the over - relaxation parameter  @xmath56 .",
    "the basic algorithm without over - relaxation corresponds to @xmath57 . in this example , with a lattice size of @xmath47 , the optimum @xmath56 is about  1.8.,width=302 ]    after finding the ground state of a particular system , we can go on to find the first excited state with only a minor modification of the algorithm .",
    "the idea is the same as with other variational solutions,@xcite namely , to restrict our trial wave function to be orthogonal to the ground state . to do this ,",
    "we periodically project out any contribution of the ground state to the trial function during the course of the calculation .",
    "more explicitly , the procedure is as follows :    1 .   normalize and save the just - determined ground - state wave function as @xmath58 .",
    "2 .   initialize a new trial wave function  @xmath25 that crudely resembles the first excited state , with a single node .",
    "the first excited state of an infinite square well or a harmonic oscillator would be a reasonable choice .",
    "it may be necessary to try different orientations for the node of this function .",
    "proceed as in the basic algorithm described in sec .",
    "ii , but after each loop through all the grid locations , calculate the @xmath58 component of the trial function as the inner product @xmath59 multiply this coefficient by @xmath58 and subtract the result from @xmath25 ( point by point ) . then recalculate the inner products @xmath36 and @xmath37 before proceeding with the next iteration .",
    "the orientation of the initial state s node matters because we want it to resemble the first excited state more than the second .",
    "for example , the first excited state of the anisotropic harmonic oscillator potential used in sec .",
    "iv has a node line parallel to the @xmath50  axis , so a good choice for the initial state would be @xmath60 , rather than the orthogonal state @xmath61 .",
    "if the latter state is used the algorithm will get stuck , for a rather long time , on the second excited state ( with energy 110 ) before finally converging on the first excited state ( with energy 90 ) .    after finding the first excited state we can find the second excited state in a similar way , this time projecting out both the ground - state contribution and the first - excited - state contribution after each loop through all the grid locations",
    "we could then go on to find the third excited state and so on , but if many states are needed it may be easier to use matrix methods.@xcite",
    "and the well depth is 200 in natural units .",
    "the wave function energies are measured up from the bottom of the well.,width=321 ]    to illustrate the versatility of the variational - relaxation algorithm , fig .",
    "3 shows results for an intricate but contrived potential energy well based on an image of the weber state university `` flaming w '' logo.@xcite as before , the units are such that @xmath19 , the particle mass , and the width of the square grid region are all equal to  1 . in these units the sine - wave starting function ( that is , the ground state of an infinite square well of this size ) has a kinetic energy of @xmath62 , so the well depth of 200 units is substantially larger than this natural energy scale .",
    "all three of the states shown are bound , with energies less than 200 . as expected ,",
    "the ground - state wave function spreads to fill the oddly shaped potential well , but is peaked near the center .",
    "the two lowest excited states are relatively close together in energy , with nodal curves that are roughly orthogonal to each other .    ) .",
    "the grid resolution is @xmath47 and the maximum potential energy is 80 in natural units.,width=321 ]    for a second example , note that the schrdinger equation for a single particle in two dimensions is mathematically equivalent to that for two equal - mass particles in one dimension .",
    "we can therefore adapt our results to the latter system by simply renaming @xmath63 .",
    "consider , then , a pair of equal - mass ( but distinguishable ) particles trapped in a one - dimensional infinite square well , exerting a repulsive force on each other .",
    "a smooth potential for modeling such a force is a gaussian,@xcite @xmath64 and for illustration purposes i will take @xmath65 and @xmath66 in natural units .",
    "this potential and its three lowest - energy stationary states are shown in fig .",
    "4 . interpreting these two - particle wave function plots takes a little practice ; for example , the two peaks in the ground - state wave function correspond not to the two particles , but rather to two equally probable configurations for both particles , one with particle  1 near @xmath67 and particle  2 near @xmath68 , and the other with the particles interchanged .",
    "this is an `` entangled '' state , because a measurement of one particle s position changes the probability distribution for the other particle s position .",
    "notice that the first excited state , with a node along @xmath69 , has an almost identical probability density and only slightly more energy , as is typical of double - well potentials .",
    "the second excited state , however , tends to put one particle or the other near the middle of the well and has considerably more energy .",
    "these two examples are merely meant to suggest the wide range of possible uses of the variational - relaxation algorithm .",
    "the algorithm should be applicable to real - world systems such as quantum dots@xcite and other nano - structures that can be modeled as two - dimensional or three - dimensional potential wells . for a system of two particles in one dimension",
    ", one could investigate other interaction potentials , repulsive or attractive , as well as other confining potentials .",
    "the algorithm described in this paper can not possibly be new , because it is such a minor adaptation of the familiar relaxation algorithm for poisson s equation .",
    "however , i have been unable to find a published description of it.@xcite    giordano and nakanishi@xcite describe a closely related algorithm that also uses a rectangular lattice and the variational principle , but takes a monte carlo approach . instead of looping over all lattice points in order",
    ", they choose successive lattice points at random . and instead of calculating the value of @xmath21 that minimizes @xmath26 via eq .",
    "( [ psi0formula ] ) , they consider a random change to @xmath21 , calculate the effect of this change on @xmath26 , and then accept the change if @xmath26 will decrease but reject it if @xmath26 would increase .",
    "this monte carlo approach inspired the improved algorithm described in this paper .",
    "however , the monte carlo algorithm is much less efficient , at least when fixed , uniform distributions are used for the random numbers .",
    "koonin and meredith@xcite describe an alternative algorithm that evolves an initial trial function in imaginary time , according to the schrdinger - like equation @xmath70 whose formal solution is @xmath71 if we imagine expanding @xmath72 as a linear combination of eigenfunctions of the hamiltonian  @xmath73 , then we see that the ground - state term in the expansion decreases the most slowly ( or grows the most rapidly if its energy is negative ) , so eventually this evolution in `` fake time '' will suppress all the remaining terms in the expansion and yield a good approximation to the ground state .",
    "the fake - time evolution can be carried out using standard numerical techniques for solving initial - value partial differential equations such as the time - dependent schrdinger equation or the heat equation .",
    "this algorithm avoids the need to calculate and update the global quantity @xmath26 at every step in the calculation . based on my limited trials using basic first - order time integration",
    ", this algorithm seems to be about as efficient as the variational - relaxation algorithm without over - relaxation .",
    "students in a computational physics course should be able to code the variational - relaxation algorithm themselves , perhaps after practicing on the ordinary relaxation algorithm for poisson s or laplace s equation .",
    "coding the algorithm in just one spatial dimension can also be a good warm - up exercise , keeping in mind that it is easier to solve one - dimensional problems by the shooting method .    in an upper - division undergraduate",
    "course in quantum mechanics , it may be better to provide students with the basic code shown in fig .  1 ( or its equivalent in whatever programming language they will use ) .",
    "typing the code into the computer gives students a chance to think about each computational step .",
    "after verifying that the algorithm works for a familiar example such as the two - dimensional harmonic oscillator , students can be asked to modify it to handle other potential energy functions , over - relaxation , and low - lying excited states .    even in a lower - division `` modern physics '' course or the equivalent , i think there is some benefit in showing students that the two - dimensional time - independent schrdinger equation , for an arbitrary potential energy function , can be solved .",
    "general - purpose numerical algorithms can help put the focus on the laws of physics themselves , avoiding an over - emphasis on idealized problems and specialized analytical tricks .              w. h. press , s. a. teukolsky , w. t. vetterling , and b. p. flannery , _ numerical recipes _ , third edition ( cambridge university press , cambridge , 2007 ) , < http://numerical.recipes>[<http://numerical.recipes > ] , sec .  18.1 .",
    "f. marsiglio , `` the harmonic oscillator in quantum mechanics : a third way , '' am . j. phys . * 77*(3 ) , 253258 ( 2009 ) ; r. l. pavelich and f. marsiglio , `` calculation of 2d electronic band structure using matrix mechanics , '' am . j. phys . *",
    "84*(12 ) , 924935 .",
    "r. schmied , _ introduction to computational quantum mechanics _",
    "( unpublished lecture notes , 2016 ) , < https://atom.physik.unibas.ch/teaching/compqm.pdf>[<https://atom.physik.unibas.ch/teaching/compqm.pdf > ] .",
    "the variational method is discussed in most quantum mechanics textbooks .",
    "especially thorough treatments can be found in c. cohen - tannoudji , b. diu , and f. lalo , _ quantum mechanics _",
    "( wiley , new york , 1977 ) , vol .",
    "ii , complement e@xmath74 ; e. merzbacher , _ quantum mechanics _ , third edition",
    "( wiley , new york , 1998 ) , sec .  8.1 ; and r. shankar , _ principles of quantum mechanics _ , second edition ( springer , new york , 1994 ) , sec .  16.1 .",
    "each of these texts shows more generally that every discrete stationary state is an extremum of the energy functional  @xmath26 .    the claim that @xmath43 is much larger than the other terms in the numerator of eq .",
    "( [ explicitaveragee ] ) is true if @xmath0 is always positive .",
    "the potential energy can always be shifted so that this condition holds .        for simulation results of scattering interactions between two particles in one dimension interacting via a gaussian potential , see j. j. v. maestri , r. h. landau , and m. j. pez , `` two - particle schrdinger equation animations of wave packet - wave packet scattering , '' am .",
    "j. phys . *",
    "68*(12 ) , 11131119 ( 2000 ) .    for other approaches to analyzing quantum dots ,",
    "see z. m. schultz and j. m. essick , `` investigation of exciton ground state in quantum dots via hamiltonian diagonalization method , '' am . j. phys . *",
    "76*(3 ) , 241249 ( 2008 ) ; b. j. riel , `` an introduction to self - assembled quantum dots , '' am . j. phys . *",
    "76*(8 ) , 750757 ( 2008 ) ; d. zhou and a. lorke , `` wave functions of elliptical quantum dots in a magnetic field , '' am .",
    "* 83*(3 ) , 205209 ( 2015 ) .",
    "section 18.3 of _ numerical recipes _",
    ", ref .  , presents a very general relaxation algorithm for systems of _ ordinary _ differential equations , and section 18.0.1 shows how to treat eigenvalue problems by adding another equation to the system . for the special case of the one - dimensional time - independent schrdinger equation",
    "the approach taken in this paper is vastly simpler . _ numerical recipes",
    "_ does not discuss eigenvalue problems for partial differential equations .",
    "see , for example , w. f. ames , _ numerical methods for partial differential equations _",
    ", second edition ( academic press , new york , 1977 ) .",
    "this standard reference includes a section on eigenvalue problems for partial differential equations , but does not describe any algorithm that i can recognize as equivalent to the one in this paper ."
  ],
  "abstract_text": [
    "<S> i describe a simple algorithm for numerically finding the ground state and low - lying excited states of a quantum system . </S>",
    "<S> the algorithm is an adaptation of the relaxation method for solving poisson s equation , and is fundamentally based on the variational principle . </S>",
    "<S> it is especially useful for two - dimensional systems with irregular potentials , for which simpler techniques are inapplicable yet the computation time is minimal . </S>",
    "<S> ( submitted to the american journal of physics . ) </S>"
  ]
}
{
  "article_text": [
    "a central research area in the domain of randomized algorithms is the _ occupancy problem _ for _ balls - into - bins _ processes  @xcite .",
    "the framework of the problem involves the analysis of the online allocation , wherein a set of independent balls is to be assigned to a set of bins .",
    "the occupancy problem helps to model several realistic problems into a formal mathematical structure , and hence opens an active area of work in probability theory as well as in computer science .    in the classical `` balls - into - bins '' problem ,",
    "@xmath0 balls are sequentially thrown into @xmath1 bins , where each ball is placed into one of the bins independently and uniformly at random ( i.u.r . ) .",
    "the natural question then is to analyze the maximum load in any of the bins .",
    "mapping the problem to the application domain , we may consider the balls to be jobs or tasks and the bins to be servers .",
    "the problem then reduces to scheduling the jobs with balanced load allocations among the servers .",
    "probably one of the earliest applications of randomized load balancing is in the context of @xmath13 . for the chaining method during hash clash ,",
    "the length of the lists in the hash buckets are a measure of the retrieval complexity . for a uniform hash function ,",
    "the length of the lists follow the same distribution as the number of balls in a bin in this case .",
    "the advent of parallel and distributed systems required efficient online load balancing among the servers to improve the throughput of the system .",
    "dependence on a centralized environment for uniform load balancing is highly undesirable for such systems due to high communication complexity . with the introduction of the _ cloud computing _ paradigm ,",
    "the placement of virtual machines ( vms ) on servers provided a new dimension to the applicability of the randomized balanced allocation study .",
    "other applications such as the design of multimedia or data servers use disk arrays where a data unit is partitioned and stored in a distributed fashion .",
    "these applications demand even ( balanced ) access of the disks on retrieval  @xcite and karp in  @xcite discusses applications in video - on - demand ( termed _ k - orientability _",
    "the balls into bins problem accurately describes these applications only when the balls have uniform weights .",
    "other applications assume the loads to be of different weights to model its various dimensions .",
    "this paper tackles the problem of sequential online allocation of balls into bins .",
    "assuming we have @xmath1 bins and @xmath0 balls arriving one at a time are to be thrown into these bins , the problem is to devise an efficient algorithm such that the allocation of the balls is nearly balanced among all the bins .",
    "in formal terms , the load in each of the bins should be as close to the average , ( @xmath14 ) as possible .",
    "we initially study the case of single - dimensional sequential placement of uniform weighted balls into bins problem and then extend it for the general weighted case .",
    "finally we also observe that @xmath7 provides the same result w.h.p . for multi - dimensional balls - into - bins problem for @xmath12 .    in this context",
    ", we define _ gap _ to be the difference between the heaviest loaded bin and the average load .",
    "the currently best known algorithm bounds @xmath15 to @xmath16 with high probability using the symmetric _ d - choice _ placement strategy  @xcite . in the d - choice method",
    ", each ball selects @xmath2 bins i.u.r . among the @xmath1 bins and",
    "is allocated to the least loaded bin among them .",
    "it is well - known that if @xmath4 choice , the gap is @xmath5  @xcite .    in this paper",
    "we propose a novel algorithm , _ improved d - choice with estimated average _ , ( @xmath7 ) for efficient placement of the balls in the bins .",
    "we prove that this technique provides a _ * constant * _ @xmath15 with high probability ( w.h.p . ) even when @xmath2 is kept constant , albeit with an expected constant number of retries or rounds per ball .",
    "we further extend the result to show that the guarantee also holds true for the heavily loaded case , i.e. @xmath9 w.h.p . our technique is different from the typical greedy @xmath2-choice process in that it places the ball in the bin that has load equal - to or lower than the _ estimated average _ of that bin . using _ expected _ constant number of retries such a bin can be found for each ball and hence the load in each bin tends towards the estimated average which also tends towards the actual average , resulting in constant upper bound on the gap .",
    "our strategy is also different from the typical asymmetric strategy  @xcite where in case of tie over the load , the leftmost bin gets the ball .",
    "our result can have profound implication both theoretically and practically on the online load balancing algorithms .",
    "the outline of the paper is as follows : section  [ sec : rel ] presents an introduction to the known works and results in this domain . in section  [ sec : algo ]",
    "we propose the detailed outline of the @xmath7 algorithm for allocating the balls into the bins .",
    "section  [ sec : proof ] provides the theoretical proof for bounding the @xmath15 to a constant quantity with high probability .",
    "section  [ sec : disc ] provides insights into the execution of the @xmath7 algorithm .",
    "section  [ subsec : ext_weight ] depicts its extension for the general weighted balls case , section  [ subsec : ext_multi ] exhibits similar results for the multi - dimensional scenario , and section  [ subsec : parallel ] proposes the protocol for achieving the same results for the parallel scenario . finally , section  [ sec : conc ] concludes the paper .",
    "the study of `` balls - into - bins '' problem dates back to the study of hashing by gonnet .",
    "he showed that when @xmath1 balls are thrown into @xmath1 bins i.u.r .",
    ", the fullest bin has an expected load of @xmath17  @xcite .",
    "the maximum loaded bin in this approach was shown to be @xmath18 w.h.p .",
    "it was also shown that for @xmath19 balls , a bin can have a maximum load of @xmath20 .",
    "azar et al .",
    "@xcite showed that if the balls chose sequentially from @xmath21 bins i.u.r .",
    "( called _ greedy[d ] _ algorithm ) and greedily selected the bin currently with the lowest load , the @xmath15 could be bounded by @xmath22 w.h.p .",
    "however , the solution worked only for the case when @xmath12 .",
    "they also showed that the bound is stochastically optimal , i.e. any other greedy approach using the placement information of the previous balls to place the current ball majorizes to their approach .",
    "however , if the alternatives are drawn from separate groups with different rules for tie breaking , it results in different allocations .",
    "@xcite presents such an _ asymmetric _ strategy and using witness tree based analysis proves that this leads to an improvement in the load balance to @xmath23 w.h.p .",
    "where , @xmath24 is the golden ratio and @xmath25 is a simple generalization .",
    "our algorithm is different from both these techniques in that it uses the _ estimated gap _ as the criterion for choosing the bin and makes potentially multiple retries , where in each retry @xmath2 bins are chosen i.u.r .    for the heavily loaded case , @xmath9 , the bound of @xmath22 w.h.p .",
    "was later proven in  @xcite using sophisticated techniques in two main high level steps . in the first step , they show that when the number of balls is polynomially bounded by the number of bins the gap can be bounded by @xmath26 , using the concept of layered induction and some additional tricks . in particular ,",
    "they consider the entire distribution of the bins in the analysis ( while in typical @xmath27 case the bins with load smaller than the average could be ignored ) . in the second step ,",
    "they extend this result to general @xmath28 case , by showing that the multiple - choice processes are fundamentally different from the classical single - choice process in that they have _ short memory_. this property states that given some initial configuration with gap @xmath29 , after adding @xmath30 more balls the initial configuration is _ forgotten_.",
    "the proof of the short memory property is done by analyzing the mixing time of the underlying markov chain describing the load distribution of the bins .",
    "the study of the mixing time is via a new variant of the coupling method ( called _ neighboring coupling _ ) .",
    "it was also shown that when @xmath4 the gap becomes @xmath5  @xcite .",
    "cole et al .",
    "@xcite showed that the two - choice paradigm can be applied effectively in a different context , namely , that of routing virtual circuits in interconnection networks with low congestion .",
    "they showed how to incorporate the two - choice approach to a well - studied paradigm due to valiant for routing virtual circuits to achieve significantly lower congestion .",
    "kunal et.al .",
    "@xcite prove that for weighted balls ( weight distribution with finite fourth moment ) and @xmath28 , the expected gap is independent of the number of balls and is less than @xmath31 , where @xmath32 depends on the weight distribution .",
    "they first prove the weak gap theorem which says that w.h.p @xmath33 .",
    "since in the weighted case the @xmath2 choice process is not dominated by the one choice process , they prove the weak gap theorem via a potential function argument . then , the _ short memory theorem _ is proved .",
    "while in  @xcite the short memory theorem is proven via coupling ,  @xcite uses similar coupling arguments but defines a different distance function and use a sophisticated argument to show that the coupling converges .",
    "the @xmath34-choice scheme  @xcite proved that if a ball chooses with @xmath35 probability the least loaded bin of @xmath36 randomly chosen bin , and otherwise i.u.r .",
    "a single bin , the @xmath15 becomes independent of @xmath0 and is given by @xmath37 .",
    "in the parallel setting ,  @xcite showed that a constant bound on the gap is possible with @xmath38 communication rounds .",
    "adler et.al .",
    "@xcite consider parallel balls and bins with multiple rounds .",
    "they present analysis for @xmath39 bound on the gap ( for @xmath27 ) using @xmath40 rounds of communication .    for offline balls - into - bins problem , using maximum flow computations it was shown that the maximum load of a bin w.h.p .",
    "is @xmath41 .",
    "@xcite showed that for @xmath42 balls , where @xmath32 is a sufficiently large constant , a perfect distribution of the balls was possible w.h.p .",
    "however , no such similar result is found in the literature for the online sequential case for constant @xmath2 choice .",
    "mitzenmacher et .",
    "al . in  @xcite addresses both the single choice and d - choice paradigm for multidimensional balls and bins under the assumption that the balls are uniform d - dimensional ( 0 , 1 ) vectors , where each ball has exactly @xmath11 populated dimensions .",
    "they show that the gap for multidimensional balls and bins , using the two - choice process , is bounded by o(log log(nd ) ) . we provide",
    "a better bound of @xmath5 w.h.p . for @xmath12 case .    in this paper",
    ", we study a novel online sequential allocation algorithm for balls - into - bins based on a constant _ d - choice _ strategy and prove a constant gap bound both for @xmath12 and the heavily loaded case @xmath28 along with for the general weighted balls and multi - dimensional scenario .",
    "in this section we discuss the execution of the _ improved d - choice with estimated average _",
    "( @xmath7 ) algorithm .",
    "we consider there are @xmath1 bins and @xmath0 balls which arrive in an online fashion .",
    "we initially assume that the balls are of uniform weights and are numbered according to the order of their arrival . in hashing applications , the number of the balls based on their arrival order plays no role in assisting better or faster retrieval .",
    "hence , this assumption does not decrease the complexity of the problem at hand .",
    "later we also provide a blueprint of the case when such a numbering of the balls in not allowed and the weighted balls case with the weights of the balls drawn from an arbitrary distribution with finite variance .",
    "number of bins ( @xmath1 ) , number of balls ( @xmath0 ) and maximum iteration ( @xmath43 ) balanced allocation of balls - into - bins    initialize the load , @xmath44 and estimated average , @xmath45 to @xmath46    @xmath47 choose @xmath2 bins , @xmath48 i.u.r . from the @xmath1 bins break",
    "* while * @xmath49    place ball @xmath50 in the bin , @xmath51 having the lowest estimated gap , @xmath52 @xmath53    @xmath54 @xmath55    @xmath56    given each bin has an accurate knowledge of the average number of balls in the system , @xmath14 it is easy to distribute the balls so as to obtain a perfectly balanced allocation .",
    "@xmath7 operates on the above principle , where each bin independently calculates a fairly good estimate of the current average number of balls in the system .",
    "each bin is then loaded nearly equal to its estimated average value . in the remainder of this section we show how each bin independently estimates its average which we later prove , with a high probability , to be very close to the actual average , @xmath14 . we also show that each bin is then loaded close to its estimated average value , giving a maximum load of @xmath8 with a constant gap allocation w.h.p .",
    "the @xmath7 algorithm initially works as in the d - choice algorithm . on arrival of a ball @xmath50 , it i.u.r .",
    "chooses @xmath2 bins ( @xmath2 is constant ) as its possible candidates for placement .",
    "each bin , @xmath57 $ ] is characterised by two parameters : ( i )  _ current load _ , @xmath58 , and ( ii )  _ current estimated average _ , @xmath59 .",
    "for each bin we define its _ estimated gap _ , @xmath60 as the difference between its current load and its current estimated average .",
    "formally , @xmath61 .    the ball @xmath50 is then allocated to the bin having the lowest value of @xmath60 among the @xmath2 chosen bins . given the definition of @xmath15 ( in section  [ sec : intro ] ) we would like to place the ball in a bin with _ negative _ or _",
    "zero _ @xmath62 .",
    "this would ensure that the loads in the bins be close to their estimated average values and thus lead to a lower @xmath15 .",
    "hence , if in the @xmath2 choice a ball selects no bin with negative or zero @xmath63 , it re - chooses its candidate @xmath2 bins . to boost the probability of a ball choosing a bin having such @xmath63 , this",
    "re - choosing will be carried out @xmath43 times , where @xmath43 will later be shown to be approximately a constant .    the current estimated average for each of the @xmath2 bins finally selected by the ball is then incremented by @xmath64 . in the next paragraph",
    "we discuss the selection of such an increment value .",
    "we intuitively argue that for each bin if @xmath65 is finally close to the actual average ( @xmath14 ) w.h.p . , and its load @xmath66 is nearly equal to its estimated average , the overall @xmath15 in the system will be minimized and the maximum load of a bin will be @xmath8 .",
    "the pseudo - code of @xmath7 algorithm is shown in algorithm  [ algo : idea ] .",
    "the probability that a bin is chosen by a ball in its @xmath2 choice is given by @xmath67 .",
    "so when @xmath1 balls arrive a bin will be chosen @xmath2 times on expectation .",
    "for each such choice the estimated average of the bin is incremented by @xmath64 ( algorithm  [ algo : idea ] ) . hence",
    ", its final estimated average will be @xmath68 , which is indeed the actual average of the system .",
    "however , from lemma[lem : ping ] we observe that a bin might be chosen @xmath69 times or lesser w.h.p . since we increase the estimated average by @xmath64 , the estimated average may increase beyond @xmath68 in such cases .",
    "hence the estimated average of a bin may be greater that @xmath68 in two situations : +",
    "( i )  not more than @xmath1 balls have arrived , but the bin has been chosen close to @xmath69 times , or + ( ii )  more than @xmath1 balls have arrived . + for case ( i ) , the estimated average of the bin should still remain @xmath68 , while in the other case , the estimated average should be increased as usual .",
    "it is here that the numbering of the balls come into effect .",
    "if the estimated average of a bin goes beyond @xmath68 and the next ball which selects this bin has a number less than @xmath1 , the bin knows that it may be chosen @xmath69 times and hence refrains from increasing its estimated average until a ball with number more than @xmath1 selects it .",
    "similarly when the estimated average of a bin increases beyond @xmath70 , it checks if the next ball selecting it has a number greater than @xmath71 .",
    "thus the balls communicate their numbers as well while choosing the @xmath2 candidate bins .",
    "however in the scenario where numbering of the balls is forbidden , to differentiate between the two cases , we use the sampling technique among the bins .",
    "a bin with estimated average just above @xmath72 , in this case chooses @xmath73 bins i.u.r . and communicates with them for their estimated average .",
    "if the average of the estimated averages of the sampled bins is less than @xmath68 , the bin comprehends that case ( i ) has happened , i.e. , it is receiving more than @xmath2 balls out of @xmath1 balls and thus refrains from increasing its estimated average .",
    "however , if the average of the estimated averages are @xmath68 , the bin decides that more than @xmath71 balls are arriving and increases its estimated value as usual .",
    "the probability that the error in the sampled average is greater than @xmath74 , a small constant , is given by @xmath75 for _ constant _ number of samples when @xmath76 and by @xmath73 sampled choice for @xmath77 scenario ( _ sampling theorem _ ) . hence w.h.p .",
    "of @xmath78 we obtain the right decision for each bin . in appendix",
    "[ sec : sampling ] we discuss in detail the proof for this claim , and also show that the total number of such sampling done is less than communication done if @xmath79 .",
    "more intelligent sampling methods as that of _ reservoir sampling _",
    "@xcite , _ subset - sum sampling _",
    "@xcite or a combination of _ sampling _ and _ sketching _",
    "@xcite may be used to obtain a better estimates .",
    "the study and effects of such methods are not discussed as a part of this paper .",
    "hence , we find that @xmath7 dynamically adapts its estimated average to be closer to the actual average of the system . in either case , the estimated average of a bin is increased by at most @xmath68 for every @xmath1 balls .",
    "in this section , we provide a theoretical proof of the constant gap performance of the @xmath7 algorithm .",
    "first , we bound the number of balls that may select each bin .",
    "we then establish that each ball in the @xmath7 algorithm chooses at least one bin having negative @xmath62 with a high probability , which makes the load of each bin converge to its estimated average value . finally , we bound the @xmath15 of the system to a constant value w.h.p .",
    "we assume @xmath0 balls to arrive in an online fashion and there are @xmath1 bins .",
    "[ lem : ping ] if each ball chooses @xmath2 bins i.u.r . out of @xmath1 bins ,",
    "each bin is chosen by @xmath80 balls on expectation , and by at most @xmath81 balls with high probability .",
    "define @xmath82 to be indicator random variables corresponding to balls @xmath83 respectively .",
    "let @xmath84 represent the event that the ball @xmath85 chose bin @xmath86 as one of its @xmath2 candidate bins , otherwise @xmath87 , @xmath88 $ ] .",
    "since the balls choose @xmath2 bins i.u.r .",
    ", the probability that bin @xmath86 is chosen among the @xmath2 bins , or @xmath89 , is given by @xmath67 .",
    "let @xmath90 be a random variable depicting the number of balls that chose @xmath86 among its @xmath2 candidate bins .",
    "hence , @xmath91 .",
    "the expected value of @xmath90 is , applying chernoff s bound on @xmath90 we obtain , hence , bin @xmath86 is chosen by at most @xmath81 balls with a high probability of @xmath92    [ lem : av ] at any iteration , the estimated average of each bin is approximately equal to the current average with high probability .",
    "we assume here that @xmath93 balls have already arrived and have been placed among the @xmath1 bins .",
    "the number of balls that chose bin @xmath86 among its @xmath2 candidates is @xmath94 on expectation , since each bin can be chosen by a ball with a probability of @xmath95 . the number of such balls is also bounded by @xmath96 with high probability ( by lemma  [ lem : ping ] ) .",
    "however , a bin does not increment its estimated average by more than @xmath2 times for every @xmath1 balls . for each choice",
    "the bin @xmath86 increases its estimated average by @xmath97 .",
    "hence the current value of @xmath98 is given by , hence , the estimated average @xmath99 of any bin is nearly equal to the actual average w.h.p .",
    "[ obs : var ] the variance of the estimated average of a bin @xmath86 for @xmath1 balls is ,    [ lem : gap ] the amortized sum of the estimated gap , @xmath62 over all the bins is zero after every @xmath1 balls .",
    "each ball chooses @xmath2 candidate bins i.u.r . and",
    "is finally allocated to the bin having the least estimated gap .",
    "hence for all the @xmath2 chosen bins , their estimated average is increased by @xmath64 . the bin which receives the ball witness an increase in its actual load by @xmath68 . hence , overall its estimated gap increases by @xmath100 . however , for the remaining @xmath101 bins their loads remain the same , and thus their estimated gap decreases by @xmath64 .",
    "hence the overall change in estimated gap over the @xmath2 chosen bins is @xmath102 .",
    "initially , since the sum of the estimated gaps of the bins was @xmath46 , the lemma holds .    considering a batch of @xmath1 balls arriving in the system ,",
    "a bin may be selected more than @xmath2 times ( lemma  [ lem : ping ] ) . in such case , the bin samples other bins for their current estimated average value , and depending on it may or may not increase its estimated average as discussed in section  [ sec : algo ] .",
    "as such the change in the overall estimated gaps in this round will not add up to @xmath46 .",
    "such a scenario occurs when a bin is selected more than @xmath2 times in the batch of @xmath1 balls .",
    "such a bin may not increase its estimated average , and @xmath7 experiences a positive change in the overall estimated gap of the system for such a round .",
    "however , it can be observed that for a batch of @xmath1 balls , the total number of bins that are selected by the balls is exactly @xmath103 . since we consider a bin to have been selected more than @xmath2 times , there exists at least one bin which was selected less than @xmath2 times .",
    "bank _ to exist , which loans a unit credit to the bin , selected more than @xmath2 times for @xmath1 balls , per extra selection .",
    "if such a bin is selected @xmath104 times over a period of @xmath1 incoming balls , the total credit units in the bank is exactly @xmath32 .",
    "however , since the number of selections are fixed , the total _ holes _ in the system will also be exactly be equal to @xmath32 .",
    "_ hole _ in a bin refers to the difference of @xmath2 and the number of times the bin has been selected by @xmath1 balls , for bins selected less than @xmath2 times .",
    "each such bin can be considered to have extra unit credit points per hole , which it returns to the bank after @xmath1 balls have been allocated to the system .",
    "since the number of credits in the bank is exactly equal to the number of extra credits held by the bins in the system , after @xmath1 balls the total credit points of the bank will be @xmath46 .",
    "it can easily be observed that the total credits in the system is always a non - negative quantity . since the bins are chosen by the balls i.u.r .",
    ", all the bins are selected nearly the same number of times over a period of @xmath1 balls , no bins tends to accumulate a large quantity of extra credits that it always keeps returning to the bank .",
    "this factor helps to maintain the estimated average of each bin close to the actual average of the system .",
    "hence , combining both the settings , we prove that on an _ amortized _ notion , the sum of the estimated gap in all the bins is @xmath46 after every @xmath1 balls .",
    "[ cor : gap_zero ] the sum of the _ estimated gap _ over all bins is zero for arbitrary small number of balls allocated in the system .    let the number of balls being allocated in the system be a function of @xmath1 , @xmath105 .",
    "given the constraint that the value of @xmath105 is not a constant , the arguments of lemma  [ lem : gap ] still holds true .",
    "consider , @xmath106 , where @xmath74 is arbitrary small respecting the constraint that @xmath105 is not a constant .",
    "thus , the sum of the estimated gap in the system is @xmath46 after @xmath105 balls have been allocated to the bins .",
    "[ lem : negbins ] the number of bins having a _ zero _ or _ negative _ estimated gap , @xmath62 is @xmath107 .    in lemma  [ lem : gap ] and",
    "[ cor : gap_zero ] , we show that the sum of the estimated gap of the bins is @xmath46 even when arbitrarily small number of balls are allocated to the bins .",
    "as such the number of bins with positive estimated gap can not increase by more than @xmath108 .",
    "let there be @xmath72 bins with positive @xmath62 , @xmath109 bins with negative estimated gap , and @xmath110 bins having @xmath46 estimated gap .",
    "hence , @xmath111 . we would like to establish a lower bound on @xmath112 . in order to have minimum number of bins with negative or zero @xmath62 , the value of the gap should be minimum for bins with a positive gap and maximum for bins with a negative gap .",
    "the minimum positive estimated gap for a bin is @xmath113 when @xmath114 balls have arrived in the system , of which only @xmath93 balls have been committed into the bin .",
    "the maximum negative estimated average that a bin may have in this case is @xmath115 .",
    "hence , as @xmath111 , we have @xmath116 .",
    "hence , the number of bins with zero or negative @xmath62 is @xmath107 .    for each round of @xmath105 balls ,",
    "the number of bins with zero or negative estimated gap may decrease by @xmath105 .",
    "consider that in round @xmath117 , the number of bins with zero or negative gap is @xmath118 .",
    "in the @xmath119 round , the number of such bins may become @xmath120 .",
    "however , as @xmath105 is considered to be very small , in the order notation the number of such bins still remains @xmath107 .",
    "we contradict the existence of any additive influence of @xmath105 per round by the argument of amortized analysis in the above lemma and its corresponding corollary .",
    "[ lem : negchoice ] each ball chooses at least one bin having negative estimated gap among its @xmath2 choices w.h.p . in @xmath43 rounds .",
    "each ball selects independently and uniformly at random @xmath2 candidate bins for its placement among the @xmath1 bins .",
    "hence the probability that bin @xmath121 is chosen as a candidate for ball @xmath50 is , @xmath122 .",
    "let there be @xmath32 bins with zero or negative @xmath62 .",
    "the probability that neither of these bins are selected as candidate by a ball @xmath123 .",
    "the ball may re - select its candidates at most @xmath43 times .",
    "therefore , the probability that neither of the @xmath32 bins are selected in any of the @xmath43 tries @xmath124 .",
    "hence the probability that at least one bin with negative @xmath62 is selected in the @xmath43 iteration is given by , for @xmath36 and @xmath125 , we obtain a probability of around @xmath126 .",
    "however , with @xmath127 , the probability becomes nearly @xmath128 .",
    "further , we can show that approximately constant number of retries suffice .",
    "let the number of bins with positive gap at any point of time be @xmath129 , where @xmath130 .",
    "the probability @xmath131 with which a bin with a zero or negative gap is chosen in @xmath43 iterations is given by , for a zero or a negative bin to be chosen with a high probability , we need @xmath132 , where @xmath133 .",
    "hence for @xmath134 .",
    "thus , @xmath135 .",
    "hence , at least one such bin is chosen by each ball in approximately constant @xmath43 re - polls or rounds per ball w.h.p .    in the next lemma",
    ", we show that in practice only a couple of retries are needed to get a bin with zero or negative estimated gap .",
    "[ lem : constgamma ] the expected number of rounds , @xmath43 per ball to find a bin with zero or negative estimated gap is constant .",
    "let @xmath136 denote the probability that we find a zero or a negative bin at iteration @xmath137 .",
    "therefore , we have where @xmath138 is the probability of selecting a bin with a positive estimated gap and @xmath139 is the probability of selecting a bin with a zero or negative gap .",
    "the expected number of rounds per ball , @xmath43 to find a zero or a negative gap is given by , given the number of bins having negative of zero estimated gap to always remain @xmath107 , the number of retries per balls remains constant throughout the execution of the @xmath7 algorithm .",
    "[ lem : load ] the load of each bin tends to its estimated average .",
    "@xmath7 places each ball into a bin with zero or negative @xmath62 , with high probability @xmath140 ( lemma  [ lem : negchoice ] ) using @xmath43 retries . when a ball is placed in a bin , its @xmath62 increases .",
    "thus , the probability that this bin will again get a ball lowers . on the other hand ,",
    "the bins that had been chosen but the ball was not placed in them have a decrease in their estimated gap .",
    "hence , the probability that a ball is placed in them increases .",
    "so , a bin with a negative or zero @xmath62 has a higher probability of a ball being allocated to it , whereby its estimated gap tends towards @xmath46 ( in case of negative estimated gap - ed bins ) . on the other hand ,",
    "bins with positive estimated gap receive a ball with low probability even when chosen as candidates , and their estimated gap decreases towards @xmath46 .",
    "hence , we observe that the estimated gap of any bin tends towards @xmath46 . since , estimated gap is the difference of the load and the estimated average of a bin and the gap tends to zero , the load of the bins becomes nearly equal to their estimated average w.h.p .",
    "[ th : constgap ] the maximum load in any bin is @xmath141 w.h.p using the @xmath7 allocation algorithm for the sequential , on - line and unweighted balls - into - bins problem .    using the above lemmas we observe that the estimated average of each bin finally becomes @xmath8 and the load in each bin is equal to its estimated average w.h.p .",
    "hence the maximum load in any bin is @xmath141 w.h.p .",
    "[ cor : load ] the @xmath7 algorithm provides a perfectly balanced allocation with constant gap .    since the maximum loaded bin has a load of @xmath141 w.h.p .",
    "( theorem  [ th : constgap ] ) , the _ gap _ is of @xmath142 providing a perfectly balanced allocation for the balls - into - bins problem with constant gap .",
    "we note that the _ greedy[d ] _ algorithm can also retry @xmath43 times to find a bin of even lower total number of balls that what it could do in a single round .",
    "still , the distribution of the balls in bins will be different than the @xmath7 algorithm because the @xmath7 algorithm explicitly uses the _ expected gap _ to make the decision of where the ball is placed .",
    "the key question is can the greedy[d ] algorithm give a constant gap and the answer is negative for a single retry because of the well known lower bound of @xmath26  @xcite , while for multiple retries @xmath43 has to be @xmath143  @xcite to achieve a constant gap .",
    "@xmath7 however requires only constant ( @xmath144 ) retries in the expectation ( lemma  [ lem : constgamma ] ) , to achieve the constant gap .",
    "further , it requires @xmath145 retries with high probability ( lemma  [ lem : negchoice ] ) .    a bin , @xmath86 is chosen by @xmath2 balls among @xmath1 balls on expectation .",
    "however , the bin may be chosen @xmath146 times , @xmath147 among the first @xmath148 balls that arrive .",
    "as such , the @xmath149 $ ] choice algorithm will place the balls in empty or lesser loaded bins if available . in the remaining balls",
    ", @xmath86 is chosen @xmath150 times .",
    "now , for large values of @xmath72 , even if all these balls are placed in it , @xmath86 will have a load far less than the average of the system .",
    "so the @xmath15 increases .",
    "however , for @xmath7 with large @xmath72 values , the estimated average for @xmath86 will be large and hence its estimated gap will be significantly lower than the other bins .",
    "so , it has a higher probability of a ball being allocated to it . thus , when the remaining balls arrive and a small fraction of them are placed in @xmath86 , its load will still be closer to the actual average as compared to the d - choice algorithm .",
    "this sensitivity towards skewness in the random choices also enables @xmath7 to arrive at a better allocation than the d - choice .",
    "in this section we consider the weighted case of the balls - into - bins problem where the balls have weights drawn from a distribution @xmath151 with an expected weight @xmath152 , such that the weight of any ball @xmath153 has a finite variance and can be bounded by @xmath154 , where @xmath117 is a constant .",
    "we apply the @xmath7 algorithm and show that the gap is also constant w.h.p . in such scenarios .",
    "[ th : wconstgap ] the maximum load in any bin is @xmath155 w.h.p using the @xmath7 allocation algorithm for the sequential , on - line and weighted balls - into - bins problem .    reworking the lemmas stated in section  [ sec : proof ]",
    "we observe that the estimated average of each bin converges to @xmath156 and that the load in each bin tends to its estimated average w.h.p .",
    "hence the maximum load in any bin is given by @xmath155 w.h.p .",
    "the complete proofs of the lemmas for the weighted case is provided in appendix  [ sec : wproof ] .",
    "[ cor : wload ] the @xmath7 algorithm provides a perfectly balanced weighted allocation with constant gap even for the general weighted case of the balls - into - bins problem .    from theorem  [ th : wconstgap ] we observe that as the maximum load is @xmath155 . hence @xmath7 provides a perfectly balanced allocation for the weighted case w.h.p . having a constant gap of @xmath157 .      in this section ,",
    "we consider the multidimensional ( md ) , variant of the balls and bins problem . one multidimensional variant , proposed by  @xcite is as follows : consider throwing @xmath0 balls into @xmath1 bins , where each ball is a uniform d - dimensional ( 0 - 1 ) vector of weight @xmath11 . here , each ball has exactly @xmath11 non - zero entries chosen uniformly among all @xmath158 possibilities .",
    "the average load in each dimension for each bin is given as @xmath159 .",
    "let @xmath160 be the load in the dimension @xmath161 for the @xmath162 bin .",
    "the gap in a dimension ( across the bins ) is given by @xmath163 , where @xmath164 is the average load in the dimension @xmath161 .",
    "the maximum gap across all the dimensions , @xmath165 , then determines the load balance across all the bins and the dimensions .",
    "thus , for the multidimensional balanced allocation problem , the objective is to minimize the maximum gap ( across any dimension ) .",
    "we refer to the multidimensional ball as md - ball and the multidimensional bin as md - bin .    in another variation of multidimensional balanced allocation the constraint of uniform distribution for populated entries",
    "is removed . here",
    "again , each ball is a d dimensional 0 - 1 vector and each ball has exactly @xmath11 populated dimensions , but these populated dimensions can have an arbitrary distribution . in the third variation that is most general of the three",
    ", the number of populated dimensions , @xmath11 , may be different across the balls , where @xmath11 then is a random variable with an appropriate distribution .",
    "each md - ball has @xmath11 populated dimensions , where @xmath11 could be constant across the balls or a random variable with a given distribution .",
    "let , @xmath166 denote the sum of the loads ( minus corresponding dimension averages ) across all @xmath10 dimensions for the bin @xmath137 at time @xmath167 , expressed as @xmath168 .",
    "this reduces the problem to that of the _ scalar weighted case_. the @xmath7 algorithm works based on the sum of the dimensions for each bin . also , for each choice of the bin , its estimated average is now incremented by @xmath169 .",
    "[ th : multi_constgap ] for the multi - dimensional scenario , the @xmath7 algorithm provides a constant gap for uniform distribution of the @xmath11 populated dimensions for each ball with @xmath12 .    following the analysis in section  [ subsec : ext_weight ] ,",
    "the @xmath15 in the system is bounded by @xmath142 .",
    "hence , the difference of the number of balls in the maximum bin and the actual average of the system is constant . for @xmath12 ,",
    "the average is @xmath68 and so the number of balls in the maximum bin is also a constant . given a uniform distribution of the @xmath11 populated dimensions of each ball over @xmath10 , the @xmath15 is bounded by @xmath142 .      in this section",
    "we describe the algorithmic protocol to extend @xmath7 for the parallel balls - into - bins scenario . in the parallel scenario",
    "multiple balls are allocated to bins simultaneously in a single round .",
    "the remain balls are considered for allocation in the next round .",
    "this process is repeated until all the balls are allocated .",
    "later in this section we will show that the proposed protocol ensures that the algorithm completes in a finite number of rounds .",
    "we consider that in any round , @xmath170 , a bin may accept only one ball .",
    "let @xmath171 balls be simultaneously allocated in round @xmath170 .",
    "we observe that the outcome of round @xmath170 can be obtained by sequentially allocating @xmath171 balls by @xmath7 .",
    "hence any round in the parallel case can be replaced by a series of sequential processes of @xmath7 .",
    "hence the gap remains _ constant _ even in the parallel case with @xmath7 .",
    "number of bins ( @xmath1 ) , number of choices per ball ( @xmath2 ) parallel execution of @xmath7    step 1 .",
    "each ball , @xmath121 chooses @xmath2 bins as candidates for allocation , and stores the choices as @xmath172 .",
    "ball @xmath121 queries its chosen bins ( @xmath172 ) for the _ estimated gap_. step 3 .",
    "the bins queries returns their estimated gap to the corresponding balls .",
    "ball @xmath121 selects the bin @xmath85 with the lowest estimated gap among its chosen bins and sends a confirmation message , @xmath173 .",
    "step 5 . a bin @xmath50 receiving a @xmath173 message confirms allocation of ball @xmath121 and sends it a message @xmath174 .",
    "if a bin receives multiple @xmath173 messages , it arbitrarily selects one of them .",
    "ball @xmath121 after receiving @xmath174 sends message @xmath175 to all its @xmath2 chosen bins ( @xmath172 ) and commits to bin @xmath50 .",
    "all the bins in @xmath172 receiving @xmath175 message increments their estimated average by @xmath97",
    ".    the communication protocol , as given in algorithm  [ algo : parallel ] ensures that there is no deadlock in the system and that each bin accepts at most one ball in each round . since the allocation of a ball into a bin is done by _ two - way handshaking _ between the ball and the bin , a bin may receive multiple confirmations from the balls but will accept only one of them , and since each ball makes a single choice of the bin where it prefers to be allocated , deadlock in the system is avoided .",
    "the update of the _ estimated average _ of the bins receiving the @xmath175 message is similar to that of the sequential @xmath7 with the use of sampling .",
    "we now prove that the algorithm terminates in finite number of rounds to guarantee a constant gap .",
    "[ th : parallel ] @xmath7 in the parallel scenario using the communication protocol described in algorithm  [ algo : parallel ] provides a constant gap in expected @xmath16 rounds .",
    "since each round of the parallel case of @xmath7 can be simulated with multiple sequential processes of it , @xmath7 along with the communication protocol described above provides a constant gap .",
    "we observe that the execution of @xmath7 is identical to that of the ordinary d - choice algorithm except for the parameter on which the allocations of the balls are done .",
    "hence theorem 21 of  @xcite stating that the _",
    "threshold(1 ) _ for parallel cases terminates after at most @xmath176 steps , holds in our case as well .",
    "however , each ball will select a bin zero or negative estimated gap in @xmath43 retries .",
    "hence the total number of rounds taken by @xmath7 in the parallel setting will be given by @xmath177 .",
    "the expected value of @xmath43 is a constant ( lemma  [ lem : constgamma ] ) .",
    "hence the expected number of rounds for the algorithm to terminate is given by @xmath16 .",
    "it can easily been observed that this protocol still provides a constant gap even for the heavily loaded case when @xmath9 .",
    "this paper proposes the _ improved d - choice with estimated average _ , @xmath7 algorithm which w.h.p . provides a perfectly balanced allocation for the sequential , online and uniform weighted balls - into - bins problem .",
    "we propose a better metric for greedy placement of the balls using the estimated average of the system for each bin .",
    "we show that for a constant @xmath2 choice and expected constant number of rounds per ball , the maximum loaded bin in @xmath7 is @xmath141 w.h.p .",
    "this result holds for @xmath12 case as well as the heavily loaded scenario where @xmath9 .",
    "we also extends the solution for the general weighted case ( with @xmath9 ) to show similar results for balls with weights taken from an arbitrary distribution with finite variance and for the multi - dimensional case with @xmath12 for uniform distribution of @xmath11 populated dimensions over the @xmath10 total dimensions .",
    "we also propose a communication protocol which in conjunction with @xmath7 provides a constant gap with expected @xmath16 rounds .",
    "allocation of balls - into - bins for a single choice procedure has a _ poisson _ distribution approximately .",
    "we leverage this fact for the @xmath2 choice scenario to show that the sampling done by the @xmath7 algorithm fairly accurately updates the estimated average of the bins w.h.p .",
    "let @xmath178 be the mean of the number of times a bin is chosen .",
    "hence @xmath179 . also assume the sample size to be @xmath180 .",
    "define @xmath90 to be the sum of the number of times the sampled bins to have been chosen .",
    "since the number of times a bin is chosen is a random variable that follows poisson s distribution ( for a single choice process ) and the choices of the bins are independent poisson distributions each with mean @xmath181 , the characteristics of the sample of size @xmath180 , also follows a poisson distribution with mean @xmath182 .",
    "we would like @xmath90 to be bounded in the region @xmath183 $ ] w.h.p .",
    ", where @xmath109 is arbitrarily close to @xmath68 .",
    "applying chernoff s bound we have , @xmath184 given poisson s tail bound , @xmath185 substituting @xmath186 for some large @xmath187 , eq .",
    "becomes equal to @xmath188 .",
    "approximating @xmath189 to be less than @xmath190 for small values of @xmath171 , we observe that the above fraction is less than @xmath68 .",
    "replacing the fraction with @xmath191 , where @xmath192 and substituting it in eq .   with the expected value of @xmath178",
    ", we have , @xmath193 for @xmath76 , eq .",
    "becomes @xmath194 } \\nonumber\\end{aligned}\\ ] ] hence , we observe that a _ constant _ number of samples suffices to guarantee high probability for bounding @xmath90 within the factor of @xmath109 when @xmath195 .",
    "however when @xmath77 , we need @xmath196 samples for the same guarantee to hold .",
    "similar results can thus be obtained for @xmath197 . hence eq",
    ".   becomes , @xmath198 therefore , @xmath7 needs to sample _ constant _ or @xmath73 bins for the cases @xmath77 or @xmath76 respectively , for efficiently and accurately updating the estimated average of each bin to be close to that of the actual average of the system w.h.p .",
    "we also calculate the total number of samplings ( amount of communication ) done by the @xmath7 algorithm in the case @xmath199 . on arrival of @xmath1 balls , the expected number of times a bin is chosen is given by @xmath2 .",
    "however , this is bounded by @xmath200 w.h.p .",
    "a bin will sample @xmath180 other bins only when it is chosen more than @xmath2 times when @xmath1 balls have been thrown . using the poisson s tail bound , in the general case",
    "when @xmath201 balls have been thrown ( @xmath202 $ ] ) the probability of a bin being chosen @xmath203 times ( @xmath204 ) is given by @xmath205 , where @xmath206 is the expected number of times a bin is chosen when @xmath201 balls have been thrown .",
    "hence , the expected number of total samplings , @xmath207 $ ] done when total @xmath208 balls have been thrown is given by , @xmath209 = \\sum_{k=1}^{\\log n } nd~pr_{(k ) } < nd \\qquad \\qquad \\text{[by algebraic manipulations ] } \\nonumber\\end{aligned}\\ ] ] since , @xmath2 is a constant , the expected number of samplings done by idea is @xmath210 and the total communication done by @xmath7 is less than that in the naive case when @xmath79 .",
    "in this section , we provide a theoretical proof of the constant gap performance of the weighted version of the @xmath7 algorithm .",
    "we follow the same proof sketch as in the case of ball with unit weight .",
    "further , we too assume here @xmath0 balls and @xmath1 bins , @xmath211 .",
    "we assume here that @xmath93 balls have already arrived and have been placed among the @xmath1 bins .",
    "the number of balls that chose bin @xmath86 among its @xmath2 candidates is @xmath94 on expectation , since each bin can be chosen by a ball with a probability of @xmath95 . the number of such balls is also bounded by @xmath212 with high probability ( by lemma  [ lem : ping ] ) .",
    "however , a bin does not increment its estimated average by more than @xmath2 times when @xmath1 balls are thrown . for each selection of bin @xmath86 ,",
    "it increases its estimated average by @xmath213 , which is bounded by @xmath214 .",
    "hence the current value of @xmath98 is given by , hence , the estimated average @xmath99 of any bin is nearly equal to the actual average w.h.p .",
    "each ball chooses @xmath2 candidate bins uniformly and randomly and is finally allocated to the bin having the lowest estimated gap .",
    "hence for all the @xmath2 chosen bins , their estimated average increases by @xmath215 . the load of @xmath101 bins which do not receive the ball remains same , and thus their estimated gap decreases by the above factor .",
    "however , for the bin in which the ball is placed , its load increases by @xmath68 and its estimated gap increases by @xmath216 .",
    "applying the arguments presented in the proof of lemma  [ lem : gap ] and cor .",
    "[ cor : gap_zero ] , we observe that the sum of change of the estimated gap over the @xmath2 chosen bins in any iteration is @xmath217 . using similar analysis applied in the proof of lemma [ lem : gap ] it can be shown that the sum of the estimated gap is zero by amortized analysis .          using the arguments presented in the above lemmas",
    ", we provide a sketch of the proof below similar to that of lemma  [ lem : negbins ] .",
    "let there be @xmath72 bins with positive @xmath62 , @xmath109 bins with negative estimated gap , and @xmath110 bins having @xmath46 estimated gap .",
    "hence , @xmath111 .",
    "we would like to establish a lower bound on @xmath112 . in order to have minimum number of bins with negative or zero @xmath62 ,",
    "the value of the gap should be minimum for bins with a positive gap and maximum for bins with a negative gap .",
    "the minimum positive estimated gap for a bin is @xmath218 when @xmath114 balls have arrived in the system , of which only @xmath93 balls have been committed into the bin .",
    "we have @xmath219 .",
    "the maximum negative estimated average that a bin may have in this case is @xmath220 .",
    "hence , further , @xmath111 . hence , d@xmath221 .",
    "so , the number of bins with zero or negative @xmath62 is @xmath107 ."
  ],
  "abstract_text": [
    "<S> balanced allocation of online balls - into - bins has long been an active area of research for efficient load balancing and hashing applications . </S>",
    "<S> there exists a large number of results in this domain for different settings , such as parallel allocations  @xcite , multi - dimensional allocations  @xcite , weighted balls  @xcite etc . for sequential multi - choice allocation , where @xmath0 balls are thrown into @xmath1 bins with each ball choosing @xmath2 ( constant ) bins independently uniformly at random , the maximum load of a bin is @xmath3 with high probability  @xcite . </S>",
    "<S> this offers the current best known allocation scheme . </S>",
    "<S> however , for @xmath4 , the gap reduces to @xmath5  @xcite . </S>",
    "<S> a similar constant gap bound has been established for parallel allocations with @xmath6 communication rounds  @xcite .    in this paper </S>",
    "<S> we propose a novel multi - choice allocation algorithm , _ improved d - choice with estimated average _ ( @xmath7 ) achieving a constant gap with a high probability for the sequential single - dimensional online allocation problem with constant @xmath2 . </S>",
    "<S> we achieve a maximum load of @xmath8 with high probability for constant @xmath2 choice scheme with _ expected _ constant number of retries or rounds per ball . </S>",
    "<S> we also show that the bound holds even for an arbitrary large number of balls , @xmath9 . </S>",
    "<S> further , we generalize this result to ( i )  the weighted case , where balls have weights drawn from an arbitrary weight distribution with finite variance , ( ii )  multi - dimensional setting , where balls have @xmath10 dimensions with @xmath11 randomly and uniformly chosen filled dimension for @xmath12 , and ( iii )  the parallel case , where @xmath1 balls arrive and are placed parallely in the bins . </S>",
    "<S> we show that the gap in these case is also a constant w.h.p . </S>",
    "<S> ( independent of @xmath0 ) for constant value of @xmath2 with expected constant number of retries per ball . </S>"
  ]
}
{
  "article_text": [
    "the aim of this paper is to design and analyze the use of virtual element methods ( in short , vem ) for the approximate solution of general linear second order elliptic problems in two dimensions . in particular we shall deal with diffusion - convection - reaction problems with variable coefficients .    for the simpler case of laplace operator in two dimensions the virtual element method in the primal form ( see @xcite )",
    "could be seen essentially as a re - formulation ( in a simpler , more elegant and easier to analyze manner ) of the mimetic finite difference method as presented in @xcite for the lowest order case , and extended to arbitrary order in @xcite .",
    "actually , in more recent times both mimetic finite differences and virtual element methods have been growing very fast , allowing a much wider type of discretizations ( arbitrary degree , arbitrary continuity , nonconforming or discontinuous variants ) as well as different types of applications .",
    "see in particular , for mimetic finite differences , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , and mostly @xcite , @xcite ( and the references therein ) , and @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite for virtual elements .",
    "we point out , on the other hand , that the use of polygonal and polyhedral meshes for the approximate solution of partial differential equations , but also for several other branches of scientific computing , is surely not reduced to mimetic finite differences or virtual element methods .",
    "indeed , polygonal ( and then polyhedral ) decompositions have already a long story , and often are based on approaches that are substantially different from mfds or vems .",
    "we recall for instance @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite .",
    "most of these methods use trial and test functions of a rather complicate nature , that often could be computed ( and integrated ) only in some approximate way .",
    "the same is ( even more ) true for virtual element methods where trial and test functions are solutions of pde problems inside each element .",
    "however , these local problems are not solved , not even in an approximate way , and the general idea is ( roughly speaking ) to try to compute _ exactly _ the values of the local ( stiffness ) bilinear form when one of the two entries is of polynomial type , and then stabilize the rest , in a rather brutal way . keeping this in mind ,",
    "it is clear that for virtual element methods the extension from the constant coefficients to the variable ones is less trivial than for other methods , and in particular , simple minded approaches to variable coefficients can lead to a loss of optimality , especially for higher order methods , as we show with numerical evidence at the end of this paper .    in more recent times",
    "several other methods for polygonal decompositions have been introduced in which the trial and test functions are _ pairs of polynomial _",
    "( instead of a single non - polynomial function ) .",
    "see @xcite , @xcite , @xcite , @xcite , , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite . though different , these methods surely have many points in common with each other , and with virtual element methods .",
    "the main difference is that in the virtual element methods we have indeed , on each element , both boundary and internal degrees of freedom , but they refer to _ the same function _ ( as it is normal for traditional finite element methods ) , that however is not a polynomial , while in these other methods we have _ two different functions _ that are both polynomials",
    ".    however we could consider that the internal degrees of freedom refer to a different ( polynomial ) function , that has the same moments as the vem one ( as it is done for instance in mimetic finite differences , where the degrees of freedom are treated more as _ co - chains _ rather than values attached to a specific function ) . in this respect ,",
    "the relationships among all these methods definitely deserves a deeper analysis .",
    "the most recent virtual element approach ( already hinted in @xcite for dealing with laplace operator in three dimensions and later extended to mixed formulations in @xcite ) consists in a tricky way to make the @xmath0-projection operator computable in an exact way starting from the degrees of freedom , with the idea to use , as often as possible , the @xmath0-projection of test and trial functions in place of the functions themselves .",
    "a question that often arises when presenting virtual element approximations is : `` since the approximate solution is not explicitly known inside the elements , how can it be represented ? and/or how can we compute its value at points of interest that are internal to elements ? '' what we suggest is simply to use the @xmath1projection of the vem - solution onto piecewise polynomials of degree @xmath2 . in section [ num - exp ]",
    "we provide numerical results showing the general behavior of the error , and also the error in some internal point following this path .",
    "an outline of the paper is as follows . after stating the problem and its formal adjoint in section [ problem ] , we recall in section [ primal ] the variational formulation .",
    "then , in section [ vem - primal ] we introduce the virtual element approximation .",
    "section [ sec : pri : est ] is devoted to prove optimal error estimates in @xmath3 and in @xmath0 , given in theorem [ risultato - primal ] and theorem [ stima - l2-primal ] , respectively .",
    "finally , numerical results are presented in section [ num - exp ] .    throughout the paper",
    "we will use the standard notation @xmath4 or @xmath5 to indicate the @xmath0 scalar product . whenever confusion may arise",
    ", we will underline the domain explicitly ; for instance @xmath6 will denote the @xmath7 scalar product on a generic polygon @xmath8 .",
    "for every geometrical object @xmath9 and for every integer @xmath10 we denote by @xmath11 the set of polynomials of degree @xmath12 on @xmath9 , with @xmath13 , as usual . whenever no confusion may arise",
    ", we will simply use @xmath14 , without declaring explicitly the domain .",
    "let @xmath15 be a bounded convex polygonal domain with boundary @xmath16 , let @xmath17 and @xmath18 be smooth functions @xmath19 with @xmath20 for all @xmath21 , and let @xmath22 be a smooth vector valued function @xmath23",
    ". in the sequel @xmath24 and @xmath25 will denote the ( @xmath26like ) norm of the coefficients @xmath27 , respectively .",
    "assume that the problem @xmath28 is solvable for any @xmath29 , and that the estimates @xmath30 and @xmath31 hold with a constant @xmath32 independent of @xmath33 .",
    "we point out that these assumptions imply , among other things , that existence and uniqueness hold , as well , for the ( formal ) adjoint operator @xmath34 given by @xmath35 moreover , for every @xmath36 there exists a unique @xmath37 such that @xmath38 , and @xmath39 for a constant @xmath40 independent of @xmath41 .",
    "as we shall see , the 2-regularity and is not strictly necessary in order to get the results of the present work , and an @xmath42-regularity with @xmath43 would be sufficient .",
    "here however we are not interested in minimizing the regularity assumptions .",
    "we also point out that the choice of having a scalar diffusion coefficient was done just for simplicity . having a full diffusion tensor would not change the analysis in a substantial way .",
    "actually , in the numerical results presented in section [ num - exp ] a full tensor is used .",
    "set : @xmath44 and define @xmath45 the variational formulation of problem is @xmath46    [ exuniq ] it is immediate to check that our assumptions on the coefficients imply that the bilinear form @xmath47 verifies @xmath48 and hence @xmath49 it is also easy to check that this , together with , implies that @xmath50 for some constant @xmath51 independent of @xmath52 . on the other hand",
    "it is also well known that and imply existence and uniqueness of the solution of problem .",
    "in the present section we introduce the virtual element discretization of .",
    "let @xmath53 be a decomposition of @xmath54 into star - shaped polygons @xmath8 , and let @xmath55 be the set of edges @xmath56 of @xmath53 .",
    "[ rem : mesh ] to be precise , we assume that ( i ) every element @xmath8 is star - shaped with respect to every point of a disk @xmath57 of radius @xmath58 ( where @xmath59 is the diameter of @xmath8 ) , and ( ii ) that every edge @xmath56 of @xmath8 has lenght @xmath60 .",
    "the first assumption could be relaxed in order to allow unions of star - shaped elements and the second one could be essentially avoided ; since such technical generalizations are beyond the scope of the present work , we prefer to keep the simpler conditions stated above .",
    "when considering a _ sequence _ of decompositions @xmath61 we will obviously assume @xmath62 for some @xmath63 independent of @xmath8 and of the decomposition .",
    "as usual , @xmath64 will denote the maximum diameter of the elements of @xmath53 .",
    "following @xcite , for every integer @xmath65 and for every element @xmath8 we start by defining a _ preliminary _ local space : @xmath66 on @xmath67 the following set of linear operators are well defined . for all @xmath68 :    * the values @xmath69 at the vertices @xmath70 of @xmath8 ,    and for @xmath71    * the edge moments @xmath72 , @xmath73 , on each edge @xmath56 of @xmath8 , * the internal moments @xmath74 , @xmath75 .    we point out that for each element @xmath8 and for all @xmath2 the operators @xmath76@xmath77 satisfy the following property : @xmath78 property implies that on each element @xmath8 we can easily construct a projection operator from @xmath79 to @xmath14 that depends only on @xmath76@xmath77 and is explicitly computable starting from them .",
    "let us see how .",
    "let @xmath80 be the number of vertices of @xmath81 , and let @xmath82 be the `` cardinality '' of @xmath76@xmath77 ( with obvious meaning ) .",
    "consider the mapping from @xmath67 to @xmath83 defined by @xmath84@xmath85 , and choose a bilinear symmetric positive form @xmath86 on @xmath87 ( for instance , the euclidean scalar product on @xmath83 ) .",
    "for every @xmath88 we define @xmath89 as the unique solution of @xmath90 it is obvious that @xmath91 for every @xmath92 , and also that @xmath93 depends only on the values of @xmath94 , @xmath95 , and @xmath96",
    ". it can be rather easily proved that _ every projection operator @xmath97 depending only on the values of @xmath76@xmath77 can be obtained by for a suitable choice of the bilinear form @xmath86_. it is also obvious that collecting all the local projection operators we can construct every global projection operator from @xmath79 to the space of piecewise @xmath14 functions .    here",
    "however ( both for _ historical _ reasons and for convenience of computation ) we will focus our attention on a particular choice of projection operator . for this",
    "we recall from @xcite the definition of the operator @xmath98 : for any @xmath99 , the function @xmath100 on each element @xmath8 is a polynomial in @xmath101 , defined by @xmath102 this operator is well defined on @xmath67 and , most important , for all @xmath68 the polynomial @xmath103 can be computed using only the values of the operators ( d ) calculated on @xmath104 .",
    "this follows easily with an integration by parts , see for instance @xcite .",
    "we are now ready to introduce our local virtual space @xmath105 where the space @xmath106 denotes the polynomials in @xmath101 that are @xmath7 orthogonal to @xmath107 .",
    "the corresponding global space is : @xmath108 let now @xmath109 denote the @xmath1 projection onto @xmath14 , defined locally , as usual , by @xmath110 for simplicity of notation , in the following we will denote by the same symbol also the @xmath1 projection of vector valued functions onto the polynomial space @xmath111 ^ 2 $ ] .",
    "we note that it can be proved , see again @xcite that the set of linear operators @xmath112 are a set of degrees of freedom for the virtual space @xmath113 .",
    "clearly the degrees of freedom @xmath112 define an _ interpolation operator _ that associates to each smooth enough function @xmath114 its _ interpolant _ @xmath115 that shares with @xmath114 the values of the degrees of freedom .",
    "moreover , the virtual space @xmath113 satisfies the following four properties :    * @xmath116 ( trivial to check ) ; * for all @xmath117 , the function @xmath100 can be explicitly computed from the degrees of freedom @xmath112 of @xmath118 ( see @xcite ) ; * for all @xmath117 , the function @xmath119 can be explicitly computed from the degrees of freedom @xmath112 of @xmath118 ( see @xcite ) ; * for all @xmath117 , the vector function @xmath120 can be explicitly computed from the degrees of freedom @xmath112 of @xmath118 ( see below ) .",
    "while the second and third properties above can be found in the literature , and thus are not detailed here , we need to spend some words on the last one . in order to compute @xmath120 , for all @xmath121 we must be able to calculate @xmath122 ^ 2 .\\ ] ]",
    "an integration by parts , denoting by @xmath123 the outward unit normal to the element boundary @xmath124 , gives @xmath125 the first term in the right hand side above clearly depends only on the moments of @xmath118 appearing in @xmath126 .",
    "the second term can also be computed since @xmath118 is a polynomial of degree @xmath2 on each edge and therefore @xmath127 is uniquely determined by the values of @xmath128 and @xmath129 .",
    "needless to say , all the above properties extend in an obvious way to the global space . in particular , we point out that , for a smooth function @xmath130 , its global interpolant @xmath131 is in @xmath132 .",
    "we end this section by showing some simple bounds on the operator @xmath98 .",
    "applying for @xmath133 we have @xmath134 giving immediately @xmath135 moreover , always from the definition , @xmath136 giving @xmath137      we now introduce the discrete bilinear forms that will be used in the method . since we will mostly work on a generic element @xmath8 , we will denote by @xmath138 and @xmath139 the restriction to @xmath8 of the corresponding bilinear forms defined in - .",
    "let @xmath140 be a symmetric bilinear form on @xmath141 that scales like @xmath142 on the kernel of @xmath98 .",
    "more precisely , we assume that @xmath143 independent of @xmath64 with @xmath144 such that @xmath145 examples on how to build the bilinear form above can be found in @xcite .",
    "note that , due to the symmetry of @xmath146 , this implies , for all @xmath147 with @xmath148 , @xmath149 we can now define , on each element @xmath121 and for every @xmath52 , @xmath104 in @xmath113 , the local forms and loading term : @xmath150\\cdot[{\\pi^0_{k-1}}\\nabla { q}]\\,{{\\rm d}x}+ s^{{e}}(({i}-{{\\pi^\\nabla_k}}){p},({i}-{{\\pi^\\nabla_k}}){q } ) \\\\",
    "& b^{{e}}_h({p},{q}):=-{\\int_{e}}[{\\pi^0_{k-1}}{p}]\\,[{{\\bf b}}\\cdot { \\pi^0_{k-1}}\\nabla { q}]\\,{{\\rm d}x},\\\\ & c^{{e}}_h({p},{q}):={\\int_{e}}{\\gamma}[{\\pi^0_{k-1}}{p}]\\,[{\\pi^0_{k-1}}{q}]\\,{{\\rm d}x } , \\quad ( f_h , { q})_{{e}}:=   \\int_{{e } }   f\\ ; { \\pi^0_{k-1}}{q}\\ , { { \\rm d}x},\\\\ & b^{{e}}_h({p},{q}):=a^{{e}}_h({p},{q})+b^{{e}}_h({p},{q})+c^{{e}}_h({p},{q } ) .",
    "\\end{aligned}\\ ] ] we just recall that , since @xmath98 is a projection , then @xmath151 and thus , since @xmath146 is symmetric , the @xmath152 term will vanish whenever one of the two entries of @xmath153 is a polynomial in @xmath14 .",
    "then we set for all @xmath154 @xmath155 and @xmath156 the approximate problem is : @xmath157    the bilinear forms @xmath158 and @xmath159 in are well defined for all @xmath160 , as well as the global forms @xmath161 and @xmath162 , which are well defined on the whole @xmath163 .",
    "this does not hold for @xmath164 , due to the presence of the stabilizing term @xmath152 that is defined only on @xmath113 .",
    "[ rem - sm ] we recall that the choice indicated in @xcite would have suggested to define @xmath165\\cdot[\\nabla { { \\pi^\\nabla_k}}{q}]\\,{{\\rm d}x}+ s^{{e}}(({i}-{{\\pi^\\nabla_k}}){p},({i}-{{\\pi^\\nabla_k}}){q } ) .\\ ] ] actually , it can be easily seen that for @xmath166 this coincides with our choice .",
    "this is not the case for @xmath71 . in particular ,",
    "a deeper analysis shows heavy losses in the order of convergence for @xmath167 . in section [ num - exp ]",
    "we provide an example for @xmath168 . on the other hand",
    ", it can be shown that if @xmath169 happens to be a gradient the choice does work .",
    "in the present section we derive error estimates for the proposed method .",
    "we now present some preliminary results useful in the sequel .",
    "we start by the following approximation lemma , that mainly comes from the mesh regularity assumptions in remark [ rem : mesh ] and standard approximation results on polygonal domains ( see for instance @xcite )",
    ".    here and in the sequel @xmath32 will denote a generic positive constant independent of @xmath64 , with different meaning in different occurrencies , and generally depending on the coefficients of the operator @xmath170 . whenever needed to better follow the steps of the proofs , for a smooth scalar or vector - valued function @xmath171 , we shall use @xmath172 to denote a constant depending on @xmath171 and possibly on its derivatives up to the needed order .",
    "there exists a positive constant @xmath173 such that , for all @xmath8 in @xmath53 and all smooth enough functions @xmath114 defined on @xmath8 , it holds @xmath174    we also have the following continuity lemma .    [ cont - primal ] the bilinear form @xmath175 is continuous in @xmath176 , that is , @xmath177 with @xmath178 a positive constant depending on @xmath179 but independent of @xmath64 .",
    "the continuity of @xmath161 and @xmath162 is obvious , and actually holds on the whole @xmath163 space .",
    "we have @xmath180 the continuity of @xmath181 is proved upon observing that , thanks to and , @xmath182 thus : @xmath183 and the result follows .    in many occasions we will need to estimate the difference between continuous and discrete bilinear forms .",
    "this is done once and for all in the following preliminary lemma .",
    "[ general ] let @xmath121 , let @xmath184 be a smooth function on @xmath8 , and let @xmath185 denote smooth scalar or vector - valued functions on @xmath8 . for a generic @xmath186 ( or in @xmath187 ) we define @xmath188",
    "then we have the estimate : @xmath189 where @xmath190 is a constant depending on @xmath184 .    for simplifying the notation we will set @xmath191 .",
    "by adding and subtracting terms , and by the definition of projection we have @xmath192 and the result follows by cauchy - schwarz inequality with @xmath193 .",
    "the following result follows immediately by a direct application of lemma [ general ] .",
    "[ bh - b ] for all @xmath194 it holds @xmath195 @xmath196 @xmath197    in the next lemma we evaluate the consistency error .",
    "[ lemma - cons ] for all @xmath52 sufficiently regular and for all @xmath198 it holds @xmath199    from the definition of @xmath200 and @xmath201 we have @xmath202 we first observe that when @xmath203 , then obviously we have @xmath204 , @xmath205 , and then by the term containing @xmath146 vanishes .",
    "therefore , a direct application of implies @xmath206 for all @xmath207 .",
    "the first factor in the right - hand side of can be easily bounded by @xmath208 and the second factor can by simply bounded by @xmath209 .",
    "thus , @xmath210 with similar arguments we have , for instance , @xmath211 consequently , @xmath212 the proof follows by inserting and in .",
    "we point out that holds for a generic @xmath198 , for which only @xmath3 regularity can be used .",
    "if for instance @xmath213 , that is , @xmath214 is the interpolate of a more regular function , can be improved .",
    "indeed , looking e.g. at we would have @xmath215 and in we would gain an extra power of @xmath64 : @xmath216    before going to study the error estimates for our problem , we have to prove a final technical lemma .",
    "[ dual - per - ah ] for every @xmath217 there exists a @xmath218 such that @xmath219 moreover , there exists a constant @xmath32 , independent of @xmath64 , such that @xmath220    we first remark that , by definition of projection , we have @xmath221 since @xmath222 is a ( vector ) polynomial of degree @xmath223 .",
    "hence , for @xmath224 and for every integer @xmath225 : @xmath226 and this immediately implies that has a unique solution , and that , using , we also have @xmath227 . in order to show the second part of we shall use duality arguments .",
    "let @xmath228 be the solution of @xmath229 and let @xmath230 be its interpolant , for which it holds @xmath231 we have easily that , for every @xmath232 ( and obvious notation for @xmath233 ) @xmath234 and similarly @xmath235 by recalling and the definition of the projectors , then using standard approximation estimates , we easily get @xmath236 summation on the elements and give @xmath237 on the other hand , both @xmath238 and @xmath239 are just bounded by , say , @xmath240 . then , using , , and ( with and ) we obtain @xmath241 and the result follows",
    "we have the following discrete stability lemma .",
    "[ ellipt - primal ] the bilinear form @xmath175 satisfies the following condition ( discrete counterpart of ): there exists an @xmath242 and a constant @xmath243 such that , for all @xmath244 : @xmath245    in order to prove we follow schatz @xcite . for @xmath246 , from we have @xmath247 thanks to lemma [ dual - per - ah ] , the problem @xmath248 has a unique solution , that satisfies @xmath249 then , @xmath250 from and we have @xmath251 while an integration by parts and again yield @xmath252 moreover from with @xmath253 @xmath254 similarly , from we deduce @xmath255 choosing then @xmath256 we obviously have for @xmath257 , @xmath258 hence , for @xmath259 , @xmath260 and the proof is concluded .    clearly , if @xmath261 and @xmath262 , holds for any @xmath64 ( and , indeed , we are back at the situation of lemma [ dual - per - ah ] ) .",
    "we are now ready to prove the following theorem .",
    "[ risultato - primal ] for @xmath64 sufficiently small , problem has a unique solution @xmath246 , and the following error estimate holds : @xmath263 with @xmath32 a constant depending on @xmath264 and @xmath18 but independent of @xmath64 .    the existence and uniqueness of the solution of problem , for @xmath64 small , is a consequence of lemma [ ellipt - primal ] . to prove the estimate ,",
    "using we have that for @xmath257 there exists a @xmath265 verifying @xmath266 recalling that @xmath267 , and @xmath268 , adding and subtracting @xmath269 some simple algebra yields : @xmath270 the first term in the right hand side of is bounded by the cauchy - schwarz inequality and standard approximation estimates on the load @xmath33 . the second and fourth term",
    "are bounded similarly using the continuity of @xmath271 and @xmath272 combined with approximation estimates for @xmath273 .",
    "finally , the third term is bounded using lemma [ lemma - cons ] on each element @xmath8 .",
    "we get @xmath274 and the proof is concluded .",
    "it is immediate to check that , by the same proof , also the following refined result holds : @xmath275      we have the following result .    [ stima - l2-primal ] for @xmath64 sufficiently small , the following error estimate holds : @xmath276 where @xmath32 is a constant depending on @xmath264 and @xmath18 but independent of @xmath64 .",
    "once more , we shall use duality arguments .",
    "let @xmath228 be the solution of the adjoint problem ( see ) @xmath277 and let @xmath230 be its interpolant , for which it holds @xmath278 then : @xmath279 next : @xmath280 from with @xmath281 , and @xmath282 and from  with @xmath283 , adding and subtracting @xmath52 , @xmath284 hence , @xmath285    as it can be easily seen from our proofs , the extension to the three - dimensional case would not present major difficulties .",
    "we chose to skip it here in order to avoid the use of a heavier notation and a certain amount of technicalities .",
    "we will consider problem on the unit square with @xmath286 and with right hand side and dirichlet boundary conditions defined in such a way that the exact solution is @xmath287 we will show , in a loglog scale , the convergence curves of the error in @xmath0 and @xmath3 between @xmath288 and the solution @xmath289 given by the virtual element method . as the vem solution @xmath289 is not explicitly known inside the elements , we compare @xmath288 with the @xmath1projection of @xmath290 onto @xmath14 , that is , with @xmath291 .",
    "we will also show the behaviour of @xmath292 at the maximum point of @xmath288 which is approximately at @xmath293 .      for the convergence test we consider four sequences of meshes .",
    "the first sequence of meshes ( labelled ` lloyd-0 ` ) is a random voronoi polygonal tessellation of the unit square in 25 , 100 , 400 and 1600 polygons .",
    "the second sequence ( labelled ` lloyd-100 ` ) is obtained starting from the previous one and performing 100 lloyd iterations leading to a centroidal voronoi tessellation ( cvt ) ( see e.g. @xcite ) .",
    "the 100-polygon mesh of each family is shown in fig .",
    "[ fig : lloyd-0 ] ( ` lloyd-0 ` ) and in fig .",
    "[ fig : lloyd-100 ] ( ` lloyd-100 ` ) respectively .            the third sequence of meshes ( labelled ` square ` ) is simply a decomposition of the domain in 25 , 100 , 400 and 1600 equal squares , while the fourth sequence ( labelled ` concave ` ) is obtained from the previous one by subdividing each small square into two non - convex ( quite nasty ) polygons . as before , the second meshes of the two sequences are shown in fig .",
    "[ fig : square ] and in fig .",
    "[ fig : concave ] respectively .",
    "we start to show the convergence results for @xmath166 . in figs .",
    "[ fig : errl2-k=1-p0km1_nabla ] and [ fig : errh1-k=1-p0km1_nabla ] we report the relative error in @xmath0 and @xmath3 , respectively , for the four mesh sequences . in fig .",
    "[ fig : errp - k=1-p0km1_nabla ] we report the relative error at the maximum point @xmath294 .",
    "finally , fig .",
    "[ fig : errl2-k=1-nabla_pnk ] shows the relative error in @xmath0 obtained with the method ( that is , the simple - minded extension of @xcite ) . as observed in remark [ rem - sm ] , @xmath295 for @xmath166 , hence the graphs of fig .",
    "[ fig : errl2-k=1-p0km1_nabla ] and of fig .",
    "[ fig : errl2-k=1-nabla_pnk ] are identical .",
    "we show the convergence results for @xmath296 ; we proceed as done in the case @xmath166 . in figs .",
    "[ fig : errl2-k=4-p0km1_nabla ] and [ fig : errh1-k=4-p0km1_nabla ] we report the relative error in @xmath0 and in @xmath3 , respectively , on the four mesh sequences . in fig .",
    "[ fig : errp - k=4-p0km1_nabla ] we report the relative error at the maximum point @xmath294 .",
    "the last figure ( fig .",
    "[ fig : errl2-k=4-nabla_pnk ] ) shows the relative error in @xmath0 obtained with the method .",
    "as announced , a heavy loss in the order of convergence is produced .",
    "m.  arroyo and m.  ortiz , _ local maximum - entropy approximation schemes _ , meshfree methods for partial differential equations iii , lect .",
    "notes comput .",
    "57 , springer , berlin , 2007 , pp .",
    "116 .",
    "p.  b. bochev and j.  m. hyman , _ principles of mimetic discretizations of differential operators _ , compatible spatial discretizations , i m a vol . math . appl .",
    "142 , springer , new york , 2006 , pp .",
    "89119 .",
    "f.  brezzi , k.  lipnikov , and m.  shashkov , _ convergence of mimetic finite difference method for diffusion problems on polyhedral meshes with curved faces _ , math .",
    "models methods appl .",
    "* 16 * ( 2006 ) , no .  2 , 275297 .",
    "f.  brezzi , k.  lipnikov , m.  shashkov , and v.  simoncini , _ a new discretization methodology for diffusion problems on generalized polyhedral meshes _ ,",
    "methods appl .",
    "mech . engrg .",
    "* 196 * ( 2007 ) , no .",
    "37 - 40 , 36823692 .",
    "b.  cockburn , j.  gopalakrishnan , and r.  lazarov , _ unified hybridization of discontinuous galerkin , mixed , and continuous galerkin methods for second order elliptic problems _ , siam j. numer .",
    "* 47 * ( 2009 ) , no .  2 , 13191365 .",
    "d.  di  pietro , a.  ern , and s.  lemaire , _ an arbitrary - order and compact - stencil discretization of diffusion on general meshes based on local reconstruction operators _ , comput .",
    "methods appl . math . * 14 * ( 2014 ) , no .  4 , 461472 .",
    "j.  droniou , r.  eymard , t.  gallout , and r.  herbin , _ a unified approach to mimetic finite difference , hybrid finite volume and mixed finite volume methods _ , math .",
    "models methods appl .",
    "* 20 * ( 2010 ) , no .  2 , 265295 .",
    "to3em , _ gradient schemes : a generic framework for the discretisation of linear , nonlinear and nonlocal elliptic and parabolic equations _",
    "models methods appl .",
    "* 23 * ( 2013 ) , no .  13 , 23952432 .",
    "a.  l. gain , c.  talischi , and g.  h. paulino , _ on the virtual element method for three - dimensional linear elasticity problems on arbitrary polyhedral meshes _ ,",
    "methods appl .",
    "engrg . * 282 * ( 2014 ) , 132160 .",
    "a.  gerstenberger and w.  a. wall , _ an extended finite element method / lagrange multiplier based approach for fluid - structure interaction _",
    "methods appl .",
    "* 197 * ( 2008 ) , no .",
    "19 - 20 , 16991714 .",
    "t.  rabczuk , s.  bordas , and g.  zi , _ on three - dimensional modelling of crack growth using partition of unity methods _ , computers & structures * 88 * ( 2010 ) , no .",
    "2324 , 1391  1411 , special issue : association of computational mechanics  united kingdom .",
    "c.  talischi and g.  h. paulino , _ addressing integration error for polygonal finite elements through polynomial projections : a patch test connection _ , math .",
    "models methods appl .",
    "* 24 * ( 2014 ) , no .  8 , 17011727 .    c.  talischi , g.  h. paulino , a.  pereira , and i.  f.  m. menezes , _ polygonal finite elements for topology optimization : a unifying paradigm _ ,",
    "methods engrg .",
    "* 82 * ( 2010 ) , no .  6 , 671698 ."
  ],
  "abstract_text": [
    "<S> we consider the discretization of a boundary value problem for a general linear second - order elliptic operator with smooth coefficients using the virtual element approach . as in @xcite the problem </S>",
    "<S> is supposed to have a unique solution , but the associated bilinear form is not supposed to be coercive . </S>",
    "<S> contrary to what was previously done for virtual element methods ( as for instance in @xcite ) , we use here , in a systematic way , the @xmath0-projection operators as designed in @xcite . </S>",
    "<S> in particular , the present method _ does not _ reduce to the original virtual element method of @xcite for simpler problems as the classical laplace operator ( apart from the lowest order cases ) . </S>",
    "<S> numerical experiments show the accuracy and the robustness of the method , and they show as well that a simple - minded extension of the method in @xcite to the case of variable coefficients produces , in general , sub - optimal results . </S>"
  ]
}
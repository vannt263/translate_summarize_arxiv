{
  "article_text": [
    "many complex systems in nature , society and technology display a modular structure , i.e. they appear as a combination of compartments that are fairly independent of each other . in the graph representation of complex systems  @xcite , where the elementary units of a system are described as nodes and their mutual interactions as links , such modular structure is revealed by the existence of groups of nodes , called _ communities _ or _ modules _ , with many links connecting nodes of the same group and comparatively few links joining nodes of different groups  @xcite .",
    "communities reveal a non - trivial internal organization of the network , and allow to infer special relationships between the nodes , that may not be easily accessible from direct empirical tests .",
    "communities may be groups of related individuals in social networks  @xcite , sets of web pages dealing with the same topic  @xcite , biochemical pathways in metabolic networks  @xcite , etc .",
    "detecting communities in networks is a big challenge .",
    "many methods have been devised over the last few years , within different scientific disciplines such as physics , biology , computer and social sciences .",
    "this race towards the ideal method aims at two main goals , i.e. improving the accuracy in the determination of meaningful modules and reducing the computational complexity of the algorithm .",
    "the latter is a well defined objective : in many cases it is possible to compute analytically the complexity of an algorithm , in others one can derive it from simulations of the algorithm on systems of different sizes .",
    "the main problem is then to estimate the accuracy of a method and to compare it with other methods .",
    "this issue of testing is in our opinion as crucial as devising new powerful algorithms , but till now it has not received the attention it deserves .",
    "testing an algorithm essentially means analyzing a network with a well defined community structure and recovering its communities .",
    "ideally , one would like to have many instances of real networks whose modules are precisely known , but this is unfortunately not the case .",
    "therefore , the most extensive tests are performed on computer generated networks , with a built - in community structure .",
    "the most famous benchmark for community detection is a class of networks introduced by girvan and newman ( gn )  @xcite .",
    "each network has @xmath0 nodes , divided into four groups with @xmath1 nodes each .",
    "the average degree of the network is @xmath2 and the nodes have approximately the same degree , as in a random graph . at variance with a random graph ,",
    "nodes tend to be connected preferentially to nodes of their group : a parameter @xmath3 indicates what is the expected number of links joining each node to nodes of different groups ( external degree ) . when @xmath4 each node shares more links with the other nodes of its group than with the rest of the network .",
    "in this case , the four groups are well defined communities and a good algorithm should be able to identify them .",
    "this benchmark is regularly used to test algorithms .",
    "however , there are several caveats that one has to consider :    * all nodes of the network have essentially the same degree ; * the communities are all of the same size ; * the network is small .",
    "the first two remarks indicate that the gn benchmark can not be considered a proxy of a real network with community structure .",
    "real networks are characterized by heterogeneous distributions of node degree , whose tails often decay as power laws .",
    "such heterogeneity is responsible for a number of remarkable features of real networks , such as resilience to random failures / attacks  @xcite , and the absence of a threshold for percolation  @xcite and epidemic spreading  @xcite .",
    "therefore , a good benchmark should have a skewed degree distribution , like real networks .",
    "likewise , it is not correct to assume that all communities have the same size : the distribution of community sizes of real networks is also broad , with a tail that can be fairly well approximated by a power law  @xcite .",
    "a reliable benchmark should include communities of very different sizes .",
    "a variant of the gn benchmark with communities of different size was introduced in  @xcite . finally , the gn benchmark was a network of a reasonable size for most existing algorithms at the time when it was introduced . nowadays , there are methods able to analyze graphs with millions of nodes  @xcite and it is not appropriate to compare their performances on small graphs . in general ,",
    "an algorithm should be tested on benchmarks of variable size and average degree , as these parameters may seriously affect the outcome of the method , and reveal its limits , as we shall see .    in this paper",
    "we propose a realistic benchmark for community detection , that accounts for the heterogeneity of both degree and community size .",
    "detecting communities on this class of graphs is a challenging task , as shown by applying well known community detection algorithms .",
    "we assume that both the degree and the community size distributions are power laws , with exponents @xmath5 and @xmath6 , respectively .",
    "the number of nodes is @xmath7 , the average degree is @xmath8 .    in the gn benchmark",
    "a node may happen to have more links outside than inside its community even when @xmath4 , due to random fluctuations , which raises a conceptual problem concerning the natural classification of the node .",
    "the construction of a realization of our benchmark proceeds through the following steps :    1 .",
    "each node is given a degree taken from a power law distribution with exponent @xmath5 .",
    "the extremes of the distribution @xmath9 and @xmath10 are chosen such that the average degree is @xmath8 .",
    "the configuration model  @xcite is used to connect the nodes so to keep their degree sequence .",
    "2 .   each node shares a fraction @xmath11 of its links with the other nodes of its community and a fraction @xmath12 with the other nodes of the network ; @xmath12 is the _ mixing parameter_. 3 .",
    "the sizes of the communities are taken from a power law distribution with exponent @xmath6 , such that the sum of all sizes equals the number @xmath7 of nodes of the graph .",
    "the minimal and maximal community sizes @xmath13 and @xmath14 are chosen so to respect the constraints imposed by our definition of community : @xmath15 and @xmath16 .",
    "this ensures that a node of any degree can be included in at least a community .",
    "4 .   at the beginning ,",
    "all nodes are homeless , i.e. they are not assigned to any community . in the first iteration , a node is assigned to a randomly chosen community ; if the community size exceeds the internal degree of the node ( i.e. the number of its neighbors inside the community ) , the node enters the community , otherwise it remains homeless . in successive iterations we place a homeless node to a randomly chosen community : if the latter is complete , we kick out a randomly selected node of the community , which becomes homeless .",
    "the procedure stops when there are no more homeless nodes .",
    "5 .   to enforce the condition on the fraction of internal neighbors expressed by",
    "the mixing parameter @xmath12 , several rewiring steps are performed , such that the degrees of all nodes stay the same and only the split between internal and external degree is affected , when needed . in this way the ratio between external and internal degree of each node in its community can be set to the desired share @xmath12 with good approximation .",
    "the prescription we have given leads to fast convergence . in fig .",
    "[ fig1b ] we show how the time to completion scales with the number of links of the graphs .",
    "the latter is expressed by the average degree , as the number of nodes of the graphs is kept fixed .",
    "the curves clearly show a linear relation between the computer time and the number of links of the graph",
    ". therefore our procedure allows to build fairly large networks ( up to @xmath17 nodes ) in a reasonable time .",
    "study of the complexity of our algorithm .",
    "the plots show the scaling of the computer time ( in seconds ) with the average degree of the graph .",
    "the curves correspond to different choices for the exponents @xmath5 and @xmath6 and the value of @xmath12 .",
    "the two panels reproduce graphs with @xmath18 ( a ) and @xmath19 nodes ( b ) .",
    "the calculations were performed on opteron processors.,title=\"fig : \" ]   study of the complexity of our algorithm .",
    "the plots show the scaling of the computer time ( in seconds ) with the average degree of the graph .",
    "the curves correspond to different choices for the exponents @xmath5 and @xmath6 and the value of @xmath12 .",
    "the two panels reproduce graphs with @xmath18 ( a ) and @xmath19 nodes ( b ) .",
    "the calculations were performed on opteron processors.,title=\"fig : \" ]    due to the strong constraints we impose to the system , in some instances convergence may not be reached . however , this is very unlikely for the range of parameters we have used . for the exponents we have taken typical values of real networks : @xmath20 , @xmath21 .",
    "our algorithm tries to set the @xmath12-value of each node to the predefined input value , but of course this does not work in general , especially for nodes of small degree , where the possible values of @xmath12 are just a few and clearly separated .",
    "so , the distribution of @xmath12-values for a given benchmark graph can not be a @xmath22-function , but it will have a bell - shaped curve , with a pronounced peak ( fig .  [ fig1c ] ) .",
    "distribution of the @xmath12-values for benchmark graphs obtained with our algorithm for different choices of the exponents and system size . ]",
    "we have used our benchmark to test the performance of two methods to detect communities in networks , i.e. modularity optimization  @xcite , probably the most popular method of all , and the algorithm based on the potts model introduced by reichardt and bornholdt  @xcite .    for modularity ,",
    "the optimization was carried out through simulated annealing , as in  @xcite , which is not a fast technique but yields good estimates of modularity maxima . in fig .",
    "[ fig2 ] we plot the performance of the method as a function of the external degree of the nodes for the gn benchmark .",
    "test of modularity optimization on the benchmark of girvan and newman . ]    to compare the built - in modular structure with the one delivered by the algorithm we adopt the _ normalized mutual information _ , a measure of similarity of partitions borrowed from information theory , which has proved to be reliable  @xcite .",
    "as we can see from the figure , the natural partition is always found up until @xmath23 , then the method starts to fail , although it finds good partitions even when communities are fuzzy ( @xmath24 ) . meanwhile , many algorithms are able to achieve comparable performances , so the benchmark can hardly discriminate between different methods . as we can see from the figure , for @xmath25 we are close to the top performance and there seems to be little room for improvement .    in fig .",
    "[ fig3 ] we show what happens if one optimizes modularity on the new benchmark , for @xmath26 .",
    "the four panels correspond to four pairs for the exponents @xmath27 .",
    "we have chosen combinations of the extremes of the exponents ranges in order to explore the widest spectrum of graph structures .",
    "for each pair of exponents , we have used three values for the average degree @xmath28 .",
    "each curve shows the variation of the normalized mutual information with the mixing parameter @xmath12 .",
    "test of modularity optimization on the new benchmark .",
    "the number of nodes @xmath26 .",
    "the results clearly depend on all parameters of the benchmark , from the exponents @xmath5 and @xmath6 to the average degree @xmath29 .",
    "the threshold @xmath30 ( dashed vertical line in the plots ) marks the border beyond which communities are no longer defined in the strong sense , i.e. such that each node has more neighbors in its own community than in the others  @xcite .",
    "each point corresponds to an average over @xmath31 graph realizations . ]",
    "test of modularity optimization on the new benchmark .",
    "the number of nodes is now @xmath32 , the other parameters are the same as in fig .",
    "each point corresponds to an average over @xmath33 graph realizations . ]    in general , from fig .",
    "[ fig3 ] we can infer that the method gives good results . however , we find that it begins to fail even when communities are only loosely connected to each other ( small @xmath12 ) .",
    "this is due to the fact that modularity optimization has an intrinsic resolution limit that makes small communities hard to detect  @xcite .",
    "our benchmark is able to disclose this limit .",
    "we have explicitely verified that the modularity of the natural partition of the graph is lower than the maximum obtained from the optimization , and that the partition found by the algorithm has systematically a smaller number of clusters , due to the merge of small communities into larger groups .",
    "we also see that the performance of the method is the better the larger the average degree @xmath8 , whereas it gets worse when the communities are more similar to each other in size ( larger @xmath6 ) .",
    "test of potts model clustering on the new benchmark .",
    "the number of nodes @xmath26 .",
    "the results clearly depend on all parameters of the benchmark , from the exponents @xmath5 and @xmath6 to the average degree @xmath29 .",
    "each point corresponds to an average over @xmath31 graph realizations . ]",
    "test of potts model clustering on the new benchmark .",
    "the number of nodes @xmath32 , the other parameters are the same as in fig .",
    "each point corresponds to an average over @xmath34 graph realizations . ]    to check how the performance is affected by the network size , we have tested the method on a set of larger graphs ( fig .",
    "[ fig4 ] ) .",
    "now @xmath32 , whereas the other parameters are the same as before .",
    "curves corresponding to the same parameters are similar , but shifted towards the bottom for the larger systems .",
    "we conclude that the performance of the method worsens if the size of the graph increases .",
    "if we consider that networks with @xmath35 nodes are much smaller than many graphs one would like to analyze , modularity optimization may give inaccurate results in practical cases , something which could not be inferred from tests on existing benchmarks .",
    "we have repeated the same analysis for the potts model algorithm .",
    "we closely followed the implementation suggested by the authors of  @xcite : we set the number of spin states equal to the number of nodes of the network , the ferromagnetic coupling @xmath36 was set to @xmath37 , whereas the antiferromagnetic coupling @xmath5 equals the density of links of the network .",
    "the results are shown in figs .",
    "[ fig5 ] and  [ fig6 ] .",
    "the performance of the method is fair , and it worsens for larger system sizes , like for modularity optimization , which proves superior .",
    "we have introduced a new class of graphs to test algorithms identifying communities in networks .",
    "these new graphs extend the gn benchmark by introducing features of real networks , i.e. the heterogeneity in the distributions of node degree and community size .",
    "we found that these elements pose a harder test to existing methods .",
    "we have tested modularity optimization and a clustering technique based on the potts model against the new benchmark . from the results",
    "the resolution limit of modularity emerges immediately .",
    "furthermore , we have seen that the size of the graph and the density of its links have a sizeable effect on the performance of the algorithm , so it is very important to study this dependence when testing a new algorithm .",
    "the new benchmark is suitable for this type of analysis , as the graphs can be constructed very quickly , and one can span several orders of magnitude in network size .",
    "a software package to generate the benchmark graphs can be downloaded from _",
    "http://santo.fortunato.googlepages.com / benchmark.tgz_.                              l. danon , j. duch , a. arenas and a. daz - guilera , in _ large scale structure and dynamics of complex networks : from information technology to finance and natural science _ , eds . g. caldarelli and a. vespignani ( world scientific , singapore , 2007 ) , pp 93114 ."
  ],
  "abstract_text": [
    "<S> community structure is one of the most important features of real networks and reveals the internal organization of the nodes . </S>",
    "<S> many algorithms have been proposed but the crucial issue of testing , i.e. the question of how good an algorithm is , with respect to others , is still open . </S>",
    "<S> standard tests include the analysis of simple artificial graphs with a built - in community structure , that the algorithm has to recover . however , the special graphs adopted in actual tests have a structure that does not reflect the real properties of nodes and communities found in real networks . here </S>",
    "<S> we introduce a new class of benchmark graphs , that account for the heterogeneity in the distributions of node degrees and of community sizes . </S>",
    "<S> we use this new benchmark to test two popular methods of community detection , modularity optimization and potts model clustering . </S>",
    "<S> the results show that the new benchmark poses a much more severe test to algorithms than standard benchmarks , revealing limits that may not be apparent at a first analysis . </S>"
  ]
}
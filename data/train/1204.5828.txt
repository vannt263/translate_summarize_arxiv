{
  "article_text": [
    "in the euclidean traveling salesman problem ( tsp ) , given a set of points in the plane , one seeks a shortest _ tour _ ( closed curve ) that visits each point . in the path variant ,",
    "one seeks a shortest _ path _ ( open curve ) that visits each point .",
    "if now each point is replaced by a ( possibly disconnected ) region , one obtains the so - called tsp with _ neighborhoods _ ( tspn ) , first studied by arkin and hassin  @xcite .",
    "a tour for a set of neighborhoods is also referred to as a tsp tour .",
    "a path for a set of neighborhoods is also referred to as a tsp path .    for the case of neighborhoods that are ( infinite ) straight lines ,",
    "an optimal tour can be computed in @xmath2 time  @xcite ( see also  @xcite ) , and a @xmath3-approximation can be computed in @xmath4 time  @xcite . for the case of neighborhoods that are ( half - infinite ) rays ,",
    "no polynomial time algorithm is known for computing an optimal tour , and a @xmath3-approximation can be computed in @xmath4 time  @xcite . in this paper",
    "we present linear - time approximation algorithms with improved ratios for these problems .",
    "the obvious motivation is to provide faster and conceptually simpler algorithmic solutions . as mentioned above , while for the case of rays no polynomial time algorithm is known , for the case of lines , the known algorithms reduce the problem of computing an optimal tour of the lines to that of computing an optimal watchman tour in a simple polygon for which the existent algorithms are quite involved and rather slow for large @xmath0  @xcite .    in this paper",
    "we present four improved linear - time approximation algorithms for tsp , for two cases of neighborhoods , that are straight lines , and respectively , straight rays in the plane .",
    "we consider two variants of the problem : that of computing a shortest tour and that of computing a shortest path visiting the input set .",
    "our algorithms are all based on solving low - dimensional linear programs .",
    "our results are summarized in table  [ table ] .",
    "[ t1 ] given a set of @xmath0 lines in the plane : ( i ) a tsp tour that is at most @xmath5 times longer than the optimal can be computed in @xmath4 time .",
    "( ii ) a tsp path that is at most @xmath6 times longer than the optimal can be computed in @xmath4 time .    for lines ,",
    "the previous best approximations obtained in linear time were @xmath7 and @xmath8 , respectively  @xcite .",
    "[ t2 ] given a set of @xmath0 rays in the plane : ( i ) a tsp tour that is at most @xmath5 times longer than the optimal can be computed in @xmath4 time .",
    "( ii ) a tsp path that is at most @xmath9 times longer than the optimal can be computed in @xmath4 time .    for rays ,",
    "the previous best approximation for tours was @xmath7  @xcite ( obtained also in linear time , however this was the only approximation known ) , while for paths there was no approximation known .    [ cols=\"^,^,^,^,^\",options=\"header \" , ]     [ [ preliminaries . ] ] preliminaries .",
    "+ + + + + + + + + + + + + +    we use the following terms and notations .",
    "we denote by @xmath10 and @xmath11 the @xmath12 and @xmath13-coordinates of a point @xmath14 .",
    "we say that point @xmath15 dominates point @xmath14 if @xmath16 and @xmath17 . for a segment @xmath18 , @xmath19 and @xmath20 denote the lengths of its horizontal and vertical projections .",
    "the convex hull of a planar set @xmath21 is denoted by @xmath22 .",
    "the euclidean length of a curve @xmath23 is denoted by @xmath24 . for a polygon @xmath25 ,",
    "let @xmath26 denote its perimeter .",
    "for a rectangle @xmath27 , let @xmath28 denote the length of a longest side of @xmath27 .",
    "for a ray @xmath29 , let @xmath30 denote its supporting line .",
    "the inputs to the two variants of tsp we consider are a set of lines or a set of rays .",
    "let @xmath31 be a given set of @xmath0 lines , and let @xmath32 be an optimal tour ( circuit ) of the lines in @xmath31 .",
    "let @xmath33 be a given set of @xmath0 rays , and let @xmath34 be an optimal tour ( circuit ) of the rays in @xmath33 .",
    "following the terminology from  @xcite , a polygon is an _ intersecting polygon _ of a set of regions in the plane if every region in the set intersects the interior or the boundary of the polygon .",
    "the problem of computing a minimum - perimeter intersecting polygon ( mpip ) for the case when the regions are line segments was first considered by rappaport  @xcite in 1995 . as of now , mpip ( for line segments ) is not known to be polynomial , nor it is known to be np - hard .    since both lines and rays are infinite ( , unbounded regions ) finding optimal tours @xmath32 and @xmath34 are equivalent to finding minimum - perimeter intersecting polygons ( mpips ) for @xmath31 and @xmath33 respectively .",
    "we can assume without loss of generality that not all lines in @xmath31 are concurrent at a common point ( this can be easily checked in linear time ) , thus @xmath35 .",
    "the same assumption can be made for the rays in @xmath33 , thus @xmath36 .",
    "the following two facts are easy to prove ; see also  @xcite .",
    "[ o1 ] if @xmath37 is an intersecting polygon of @xmath31 , and @xmath37 is contained in another polygon @xmath38 , then @xmath38 is also an intersecting polygon of @xmath31 .",
    "the same statement holds for @xmath33 .",
    "[ o2 ] @xmath32 is a convex polygon with at most @xmath0 vertices .",
    "similarly , @xmath34 is a convex polygon with at most @xmath0 vertices .",
    "a key fact in the analysis of the approximation algorithms for computing tours is the following lemma .",
    "this inequality is implicit in  @xcite ; a more direct proof can be found in  @xcite .",
    "[ l1 ] let @xmath25 be a convex polygon .",
    "then the minimum - perimeter rectangle @xmath27 containing @xmath25 satisfies @xmath39 .",
    "in this section we prove theorem  [ t1 ] .    [ [ tsp - tours . ] ] tsp tours .",
    "+ + + + + + + + + +    we present a @xmath40-approximation algorithm for computing a minimum - perimeter intersecting polygon of a set @xmath31 of @xmath0 lines , running in @xmath4 time .",
    "if we set @xmath41 , we get the approximation ratio @xmath5 . for technical reasons ( see below )",
    "we choose @xmath42 $ ] uniformly at random , and the approximation ratio remains @xmath5 .",
    "the algorithm combines ideas from  @xcite . as in  @xcite , we first use the fact ( guaranteed by lemma  [ l1 ] ) that every convex polygon @xmath25 is contained in some rectangle @xmath43 that satisfies @xmath44 . in particular , this holds for the optimal tours @xmath32 and @xmath34 .",
    "then we use linear programming to compute a @xmath45-approximation for the minimum - perimeter intersecting rectangle of @xmath31 ( as in @xcite ; see also  @xcite ) .",
    "* algorithm  a1 . *",
    "* let @xmath46 . for each direction",
    "@xmath47 , @xmath48 , compute a minimum - perimeter intersecting rectangle @xmath49 of @xmath31 with orientation @xmath50 . return the rectangle with the minimum perimeter over all @xmath51 directions .",
    "we now show how to compute the rectangle @xmath49 by linear programming . by a suitable rotation ( by angle @xmath50 ) of the set @xmath31 of lines in each iteration @xmath52",
    ", we can assume that the rectangle @xmath49 is axis - parallel .",
    "this can be obtained in @xmath4 time ( per iteration ) .",
    "let @xmath53 be the four vertices of @xmath49 in counterclockwise order , starting with the lower leftmost corner as in figure  [ f2 ] .",
    "as in  @xcite , let @xmath54 be the partition of @xmath31 into lines of negative slope and lines of positive slope . by setting @xmath42 $ ] uniformly at random , in each iteration @xmath55 , with probability @xmath56 there are no vertical lines in ( the rotated set ) @xmath31 .",
    "observe ( as in  @xcite ) , that a line in @xmath57 intersects @xmath49 if and only if @xmath58 and @xmath59 are separated by @xmath60 ( points on @xmath60 belong to both sides of @xmath60 ) .",
    "similarly , a line in @xmath61 intersects @xmath49 if and only if @xmath62 and @xmath63 are separated by @xmath60 .",
    "the objective of minimum perimeter is naturally expressed as a linear function .",
    "the resulting linear program has @xmath64 variables @xmath65 for the rectangle @xmath66 \\times [ y_1,y_2]$ ] , and @xmath67 constraints .",
    "@xmath68    let @xmath69 be a minimum - perimeter intersecting rectangle of @xmath31 . to account for the error made by discretization",
    ", we need the following easy fact ; see  ( * ? ? ?",
    "* lemma 2 ) .",
    "[ l2 ] there exists an @xmath70 such that @xmath71 .    by observations  [ o1 ] and  [ o2 ] , and by lemmas  [ l1 ] and  [ l2 ]",
    ", the algorithm a1 computes a tour that is at most @xmath5 longer than the optimal .",
    "the algorithm solves a constant number of @xmath64-dimensional linear programs , each in @xmath4 time  @xcite .",
    "the overall time is @xmath4 .",
    "[ [ tsp - paths . ] ] tsp paths .",
    "+ + + + + + + + + +    the key to the improvement is offered by the following .",
    "[ o3 ] let @xmath27 be a rectangle .",
    "then @xmath27 intersects a set of lines @xmath31 if and only if any three sides of @xmath27 intersect @xmath31 .",
    "fix any three sides of @xmath27 : @xmath72 ( each @xmath73 is a closed segment ) .",
    "now if @xmath60 is a line intersecting @xmath27 , then @xmath60 intersects at least two sides of @xmath27 , hence it intersects at least one element of @xmath72 , as required .",
    "the next lemma gives a quantitative upper bound on the total length of three shorter sides of a rectangle enclosing a curve .",
    "[ l3 ] any open curve of length @xmath1 can be included in a rectangle @xmath27 , so that @xmath74 .",
    "this inequality is the best possible .",
    "let @xmath23 be an open curve of length @xmath75 , and let @xmath76 be the two endpoints of @xmath23 .",
    "we can assume w.l.o.g .  that @xmath77 is a horizontal segment , and let @xmath78 be a minimal axis - aligned rectangle containing @xmath23 .",
    "write @xmath79 .",
    "let @xmath80 and @xmath81 the lengths of the horizontal and vertical sides of @xmath27 , respectively ( , the width and height of @xmath27 ) .",
    "it suffices to show that @xmath82 .    by construction @xmath23",
    "meets each side of @xmath27 .",
    "we trace @xmath23 from @xmath83 to @xmath84 and subdivide it into a finite number of open sub - curves @xmath85 ; the endpoints of each sub - curve @xmath85 belong to two distinct sides of @xmath27 .",
    "we denote by @xmath73 the segment connecting the two endpoints of @xmath85 . by concatenating these segments ( in the same traversal order )",
    "we get a polygonal curve connecting @xmath83 and @xmath84 .",
    "we call this ( not necessarily unique ) curve , a polygonal curve induced by @xmath23 ; see figure  [ f1 ] .",
    "= 3.1 in    for any segment @xmath18 , we have @xmath86 : indeed , @xmath87 , by a well - known trigonometric inequality ( here @xmath88 $ ] ) . by adding the above inequalities for all segments @xmath73 ( and sub - curves @xmath85 ) we obtain @xmath89 on the other hand we have @xmath90 : indeed",
    ", @xmath23 starts at @xmath83 and meets the left and right sides of @xmath27 before returning to @xmath84 , hence the horizontal projections of the segments @xmath73 sum up to at least @xmath91 .",
    "similarly , we have @xmath92 : indeed , @xmath23 starts at @xmath83 and meets the top and bottom sides of @xmath27 before returning to @xmath84 .",
    "since @xmath83 and @xmath84 have the same @xmath13-coordinate , the vertical projections of the segments @xmath73 cover twice the height of @xmath27 .",
    "consequently , we have @xmath93 putting   and   together yields @xmath94 as required .    to see that this inequality is tight , let @xmath23 be a two - segment polygonal path made from the two unit sides of an isosceles right triangle .",
    "then @xmath95 , while the rectangle @xmath27 enclosing @xmath23 has sides @xmath96 and @xmath97 respectively .",
    "the lengths of its three shorter sides sum up to @xmath98 .",
    "it can be verified that the sum of the three smallest sides of any other enclosing rectangle is larger ( details in the appendix ) , hence the rectangle @xmath27 constructed in our proof is optimal for @xmath23 .",
    "the proof of lemma  [ l3 ] is now complete .    to compute a tsp path for a set of @xmath0 lines",
    ", we use the algorithm a2 we describe next .",
    "this algorithm is similar to algorithm a1 , described earlier .",
    "a2 computes a rectangle in each direction from a given sequence .",
    "the only difference in the linear program is that instead of minimizing the perimeter of an intersecting rectangle , @xmath99 , it minimizes the sum of the lengths of three sides , namely @xmath100 .",
    "the objective function is not symmetric with respect to the two coordinates axes , and so the number of directions @xmath51 , from algorithm a1 , is @xmath101 in algorithm a2 .",
    "let now @xmath69 be an intersecting rectangle of @xmath31 with minimum sum of the lengths of three sides .",
    "analogous to lemma  [ l2 ] we have    [ l4 ] there exists an @xmath70 such that @xmath102    by lemma  [ l3 ] and lemma  [ l4 ] the approximation ratio is @xmath103 , and we set @xmath104 ( or slightly smaller , as before ) , to obtain the approximation ratio @xmath6 .",
    "this completes the proof of theorem  [ t1 ] .",
    "as noted in  @xcite : if the lines are replaced by line segments the problem of finding an optimal tour becomes np - hard .",
    "should the lines be replaced by rays , we get a variant of the problem that lies somewhere in between the variant for lines and that for line segments , and whose complexity is open . in this section",
    "we prove theorem  [ t2 ] .",
    "[ [ tsp - tours.-1 ] ] tsp tours .",
    "+ + + + + + + + + +    the algorithm a1 from section  [ sec : lines ] can be adapted to compute a @xmath40-approximate tour for a set @xmath33 of @xmath0 rays .",
    "let @xmath46 .",
    "the resulting algorithm a3 for computing an approximate tour for @xmath0 given rays computes a minimum - perimeter rectangle intersecting all rays over all @xmath51 directions . as before , assume that in the @xmath55th iteration , the rectangle @xmath105 is axis - parallel . a ray in @xmath33 is said to belong to the @xmath55th quadrant , @xmath106 , if its head belongs to the @xmath55th quadrant when placed with its apex at the origin .",
    "let @xmath107 be the partition of the rays in @xmath33 ( after rotation ) as dictated by the four quadrants .",
    "see figure  [ f2 ] .",
    "= 2.3 in    observe that :    * a ray @xmath108 intersects @xmath49 if and only if @xmath58 and @xmath59 are separated by @xmath30 , and the apex ( endpoint ) of @xmath29 is dominated by @xmath63 . *",
    "a ray @xmath109 intersects @xmath49 if and only if @xmath62 and @xmath63 are separated by @xmath30 , and the apex of @xmath29 lies right and below @xmath59 . *",
    "a ray @xmath110 intersects @xmath49 if and only if @xmath58 and @xmath59 are separated by @xmath30 , and the apex of @xmath29 dominates @xmath62 .",
    "* a ray @xmath111 intersects @xmath49 if and only if @xmath62 and @xmath63 are separated by @xmath30 , and the apex of @xmath29 lies left and above @xmath58 .",
    "the constraints listed above correct an error in the old @xmath3-approximation algorithm from  @xcite , where it was incorrectly demanded that the apexes of the rays must lie in the rectangle @xmath49 .",
    "indeed , this condition is not necessary , and moreover , may prohibit finding an approximate solution with the claimed guarantee of @xmath3 .    observe that these intersection conditions can be expressed as linear constraints in the four variables , @xmath65 .",
    "the algorithm a3 computes a minimum - perimeter rectangle intersecting all rays over all @xmath51 directions .",
    "for each of these directions , the algorithm solves a linear program with four variables and @xmath4 constraints , as described above .",
    "as such , the algorithm takes @xmath4 time  @xcite .",
    "the approximation ratio is @xmath40 , and we set @xmath41 ( or slightly smaller , as before ) , to obtain the approximation ratio @xmath5 .",
    "[ [ tsp - paths.-1 ] ] tsp paths .",
    "+ + + + + + + + + +    we need an analogue of lemma  [ l2 ] for open curves .",
    "this is lemma  [ l5 ] below which is obviously also of independent interest .",
    "[ l5 ] any open curve of length @xmath1 can be included in a rectangle @xmath27 , so that @xmath112 .",
    "this inequality is the best possible .",
    "let @xmath23 be an open curve of length @xmath75 , and let @xmath76 be the two endpoints of @xmath23 .",
    "we can assume w.l.o.g .  that @xmath77 is a horizontal segment , and",
    "let @xmath78 be a minimal axis - aligned rectangle containing @xmath23 .",
    "let @xmath80 and @xmath81 be the lengths of the horizontal and vertical sides of @xmath27 , respectively ( , the width and height of @xmath27 ) .    it suffices to show that @xmath113 .",
    "write @xmath114 , where @xmath115 .",
    "the case @xmath116 corresponds to a degenerate enclosing rectangle , when @xmath23 is a line segment , and for which @xmath117 .",
    "we can therefore assume in the following that @xmath118",
    ". by construction @xmath23 meets each side of @xmath27 .",
    "arbitrarily select a point of @xmath23 on each of these sides to obtain a polygonal open curve @xmath119 connecting @xmath83 and @xmath84 and passing through these intermediate points ( and still enclosed in @xmath27 ) . by construction ,",
    "the intermediate points are visited in the same order by @xmath23 and @xmath119 . by the triangle inequality , @xmath120 .",
    "successively reflect the rectangle @xmath27 with respect to the sides containing the intermediate points in the order of traversal . see figure  [ f3 ] for an illustration",
    "let @xmath121 be the final reflection of the end - point @xmath84 of @xmath23 .",
    "the segments composing @xmath119 can be retrieved in the reflected rectangles ; they make up a polygonal path @xmath122 connecting @xmath83 and @xmath121 . by construction",
    "we have @xmath123 .",
    "= 5.2 in    it is easily seen that @xmath124 and @xmath125 . by pythagoras theorem ,",
    "@xmath126 since the shortest distance between two points is a straight line , @xmath127 .",
    "it follows that @xmath128 obviously , @xmath129 , thus from   we deduce that @xmath130 substituting @xmath114 in   yields @xmath131 , hence @xmath132 it follows that @xmath133 consider the function @xmath134 its derivative is @xmath135 it can be easily verified that @xmath136 vanishes at @xmath137 , and that @xmath138 is increasing on the interval @xmath139 $ ] and decreasing on the interval @xmath140 .",
    "hence @xmath138 attains its maximum at @xmath137 , that is , @xmath141 .",
    "according to  , we have @xmath142 , as desired .    to see that this inequality is tight , let @xmath23 be a two - segment polygonal path made from the two equal sides of an isosceles triangle with sides @xmath56 , @xmath56 , and @xmath143 .",
    "in this case , @xmath144 and @xmath145 .",
    "it can be verified that the perimeter of any other enclosing rectangle is larger ( details in the appendix ) , hence the rectangle @xmath27 enclosing @xmath23 constructed in our proof has minimum perimeter .",
    "the proof of lemma  [ l5 ] is now complete .",
    "given @xmath33 , we compute an approximation of the optimal tsp path by using algorithm a3 .",
    "let now @xmath23 be an optimal tsp path for the rays in @xmath33 , where @xmath75 .",
    "since every ray in @xmath33 intersects @xmath23 , every ray in @xmath33 intersects the rectangle @xmath78 , as defined in the proof of lemma  [ l5 ] .",
    "for each of the @xmath51 directions , the algorithm a3 computes a minimum - perimeter rectangle ( of that orientation ) intersecting each ray in @xmath33 .",
    "thus a3 computes a rectangle ( , a closed path ) that is a @xmath45-approximation of the minimum - perimeter rectangle intersecting each ray in @xmath33 . for @xmath146 ,",
    "its perimeter is at most @xmath147 , as claimed .",
    "this completes the proof of theorem  [ t2 ] .",
    "interesting questions remain open regarding the structure of optimal tsp tours for lines and rays , and the degree of approximation achievable for these problems . for instance , the following two problems ( one new and one old ) deserve attention .    * is there a polynomial - time algorithm for computing a shortest tour ( or path ) for a given set of rays in the plane ? * can one compute a good approximation of a shortest tsp tour ( or path ) for a given set of lines in @xmath148-space ?",
    "note that this variant with parallel lines reduces to the euclidean tsp for points in the plane ( namely the points of intersection between the given lines and an orthogonal plane ) , so it is np - hard .",
    "see also  @xcite .    99    e.  m. arkin and r.  hassin , approximation algorithms for the geometric covering salesman problem , _ discrete appl .",
    "_ , * 55 * ( 1994 ) , 197218 .",
    "s.  carlsson , h.  jonsson and b.  j. nilsson , finding the shortest watchman route in a simple polygon , _ discrete comput .",
    "geom . _ * 22(3 ) * ( 1999 ) , 377402 .    a. dumitrescu and m. jiang , minimum - perimeter intersecting polygons , _ algorithmica _ , * 63(3 ) * ( 2012 ) , 602615 .",
    "a. dumitrescu and j. mitchell , approximation algorithms for tsp with neighborhoods in the plane , _ journal of algorithms _ , * 48(1 ) * ( 2003 ) , 135159 .",
    "h. jonsson , the traveling salesman problem for lines in the plane , _ inform .",
    "_ , * 82(3 ) * ( 2002 ) , 137142 .",
    "n.  megiddo , linear programming in linear time when the dimension is fixed , _ journal of acm _ , * 31 * ( 1984 ) , 114127 .",
    "d. rappaport , minimum polygon transversals of line segments , _ internat .",
    "j. comput .",
    "* 5(3 ) * ( 1995 ) , 243265 .",
    "x.  tan , t.  hirata and y.  inagaki , corrigendum to ` an incremental algorithm for constructing shortest watchman routes ' , _ internat .",
    "j. comput .",
    "_ , * 9(3 ) * ( 1999 ) , 319323 .",
    "x.  tan , fast computation of shortest watchman routes in simple polygons , _ inform . process .",
    "_ , * 77(1 ) * ( 2001 ) , 2733 .",
    "e. welzl , the smallest rectangle enclosing a closed curve of length @xmath149 , manuscript , 1993 .",
    "available at ` http://www.inf.ethz.ch/personal/emo ` ` /smallpieces.html ` .",
    "[ [ a - tight - bound - for - lemmal3 . ] ] a tight bound for lemma  [ l3 ] .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + +    let @xmath27 be a minimal rectangle containing @xmath150 , whose width and height are @xmath80 and @xmath81 , respectively .",
    "let @xmath151 , where @xmath152 .",
    "it suffices to show that @xmath153 . by the minimality of @xmath27",
    ", at least one vertex of @xmath154 must coincide with a corner of @xmath27 , say the lower left corner @xmath62 . if @xmath155 , then @xmath27 is a unit square , thus @xmath156 .",
    "assume now that @xmath157 , as in figure  [ f4 ] .",
    "we have @xmath158 and @xmath159 , where @xmath160 $ ] .",
    "hence @xmath161 .",
    "consider the function @xmath162 , where @xmath160 $ ] .",
    "its derivative , @xmath163 vanishes at @xmath164 , and is positive on @xmath165 and negative on @xmath166 .",
    "hence @xmath167 attains its minimum at one of the endpoints of the interval @xmath168 $ ] .",
    "we have @xmath169 and @xmath170 , therefore @xmath171 for @xmath160 $ ] .      again ,",
    "let @xmath27 be a minimal rectangle containing @xmath150 , whose width and height are @xmath80 and @xmath81 , respectively .",
    "let @xmath151 , where @xmath172 .",
    "it suffices to show that @xmath173 . by the minimality of @xmath27",
    ", at least one of the two vertices @xmath83 and @xmath84 of @xmath154 must coincide with a corner of @xmath27 , say the lower left corner @xmath62 .",
    "we have @xmath157 , as in figure  [ f5 ] .",
    "we distinguish two cases :      _ case 1 . _",
    "the vertex @xmath84 lies on the right side of @xmath27 , and @xmath174 lies on the top side of @xmath27 , as in figure  [ f5](left ) .",
    "we have @xmath175 and @xmath176 , where @xmath177 $ ] , and @xmath178 .",
    "this yields @xmath179 it follows that @xmath180 consider the function @xmath181 , where @xmath182 $ ] .",
    "its derivative , @xmath183 vanishes at @xmath184 , and is positive on @xmath185 and negative on @xmath186 .",
    "hence @xmath167 attains its minimum at one of the endpoints of the interval @xmath187 $ ] .",
    "we have @xmath188 and @xmath189 , therefore @xmath190 for @xmath182 $ ] .",
    "equivalently , @xmath191 in this case .",
    "( it may be noted that the rectangle with perimeter @xmath192 corresponding to @xmath193 is flush with the unit side @xmath194 . )    _ case 2 . _",
    "the vertex @xmath84 coincides with the upper right corner of @xmath27 , and @xmath174 lies in the interior of @xmath27 , as in figure  [ f5](right ) . by symmetry",
    ", we can assume that @xmath195 .",
    "we have @xmath196 and @xmath197 , where @xmath198 , and @xmath199 $ ] .",
    "this yields @xmath200 the above expression attains its minimum at @xmath201 , thus @xmath202 in this second case ."
  ],
  "abstract_text": [
    "<S> in the euclidean tsp with neighborhoods ( tspn ) , we are given a collection of @xmath0 regions ( neighborhoods ) and we seek a shortest tour that visits each region . in the path variant , </S>",
    "<S> we seek a shortest path that visits each region . </S>",
    "<S> we present several linear - time approximation algorithms with improved ratios for these problems for two cases of neighborhoods that are ( infinite ) lines , and respectively , ( half - infinite ) rays . along the way we derive a tight bound on the minimum perimeter of a rectangle enclosing an open curve of length @xmath1 .    </S>",
    "<S> * keywords * : traveling salesman problem with neighborhoods , linear programming , minimum - perimeter rectangle , approximation algorithm , lines , rays . </S>"
  ]
}
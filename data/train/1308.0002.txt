{
  "article_text": [
    "in networked control systems ( ncss ) communication between controller(s ) and plant(s ) is made through unreliable and rate - limited communication links such as wireless networks and the internet ; see e.g. , @xcite many interesting challenges arise and successful ncs design methods need to consider both control and communication aspects .",
    "in particular , so - called _ packetized predictive control _ ( ppc ) has been shown to have favorable stability and performance properties , especially in the presence of packet - dropouts @xcite . in ppc ,",
    "the controller output is obtained through solving a finite - horizon cost function on - line in a receding horizon manner .",
    "each control _ packet _ contains a sequence of tentative plant inputs for a finite horizon of future time instants and is transmitted through a communication channel .",
    "packets which are successfully received at the plant actuator side , are stored in a buffer to be used whenever later packets are dropped .",
    "when there are no packet - dropouts , ppc reduces to model predictive control . for ppc to give desirable closed loop properties , the more unreliable the network is , the larger the horizon length ( and thus the number of tentative plant input values contained in each packet ) needs to be chosen .",
    "clearly , in principle , this would require increasing the network bandwidth ( i.e. , its bit - rate ) , unless the transmitted signals are suitably compressed .    to address the compression issue mentioned above , in the present work we investigate the use of _ sparsity - promoting optimizations _ for ppc .",
    "such techniques have been widely studied in the recent signal processing literature in the context of _ compressed sensing _ ( aka _ compressive sampling _ ) @xcite .",
    "the aim of compressed sensing is to reconstruct a signal from a small set of linear combinations of the signal by assuming that the original signal is sparse .",
    "the core idea used in this area is to introduce a sparsity index in the optimization . to be more specific ,",
    "the sparsity index of a vector @xmath1 is defined by the amount of nonzero elements in @xmath1 and is usually denoted by @xmath2 , called the `` @xmath0 norm . ''",
    "the compressed sensing problem is then formulated by an @xmath0-norm optimization , which , being combinatorial is , in principle hard to solve @xcite .",
    "since sparse vectors contain many 0-valued elements , they can be easily compressed by only coding a few nonzero values and their locations .",
    "a well - known example of this kind of sparsity - inducing compression is jpeg @xcite .",
    "the purpose of this work is to adapt sparsity concepts for use in ncss over erasure channels .",
    "a key difference between standard compressed sensing applications and ncss is that the latter operate in closed loop .",
    "thus , time - delays need to be avoided and stability issues studied , see also@xcite . to keep time - delays bounded ,",
    "we adopt an iterative greedy algorithm called _ orthogonal matching pursuit _ ( omp ) @xcite for the on - line design of control packets .",
    "the algorithm is very simple and known to be dramatically faster than exhaustive search . in relation to stability in the presence of bounded packet - dropouts ,",
    "our results show how to design the cost function to ensure asymptotic stability of the ncs .",
    "our present manuscript complements our recent conference contribution@xcite , which adopted an @xmath3-regularized @xmath4 optimization for ppc .",
    "a limitation of the approach in@xcite is that for open - loop unstable systems , asymptotic stability can not be obtained in the presence of bounded packet - dropouts ; the best one can hope for is practical stability .",
    "our current paper also complements the extended abstract @xcite , by considering bit - rate issues and also presenting a detailed technical analysis of the scheme , including proofs of results . to the best of our knowledge ,",
    "the only other published works which deal with sparsity and compressed sensing for control are @xcite which studies compressive sensing for state reconstruction in feedback systems , and @xcite which focus on sampling and command generation for remote applications .",
    "the remainder of this work is organized as follows : section  [ sec : plant - model - control ] revises basic elements of packetized predictive control . in section [ sec : design ] , we formulate the design of the sparse control packets in ppc based on sparsity - promoting optimization . in section",
    "[ sec : stability ] , we study stability of the resultant networked control system . based on this , in section [ sec : relax ] we propose relaxation methods to compute sparse control packets which leads to asymptotic ( or practical ) stability .",
    "a numerical example is included in section [ sec : examples ] .",
    "section [ sec : conclusion ] draws conclusions .",
    "we write @xmath5 for @xmath6 , @xmath7 refers to modulus of a number . the identity matrix ( of appropriate dimensions )",
    "is denoted via @xmath8 . for a matrix ( or a vector ) @xmath9 , @xmath10 denotes the transpose . for a vector @xmath11^{\\top}\\in{{\\mathbb{r}}}^n$ ] and a positive definite matrix @xmath12 , we define @xmath13 and also denote @xmath14 . for any matrix @xmath15 , @xmath16 and",
    "@xmath17 denote the maximum and the minimum eigenvalues of @xmath15 , respectively ; @xmath18 .",
    "we consider discrete - time ( lti ) plants with a scalar input : @xmath19 where @xmath20 , @xmath21 and @xmath22 is the plant noise . throughout this work , we assume that the pair @xmath23 is reachable .",
    "we are interested in an ncs architecture where the controller communicates with the plant actuator through an erasure channel , see fig .",
    "[ fig : ncs ] .",
    "this channel introduces packet - dropouts , which we model via the dropout sequence @xmath24 in : @xmath25    with ppc , as described , for instance , in @xcite , at each time instant @xmath26 , the controller uses the state @xmath27 of the plant ( [ eq : plant ] ) to calculate and send a control packet of the form @xmath28^{\\top}\\!\\!\\in{{\\mathbb{r}}}^n\\ ] ] to the plant input node .    to achieve robustness against packet dropouts ,",
    "buffering is used .",
    "more precisely , suppose that at time instant @xmath26 , we have @xmath29 , i.e. , the data packet @xmath30 is successfully received at the plant input side .",
    "then , this packet is stored in a buffer , overwriting its previous contents .",
    "if the next packet @xmath31 is dropped , then the plant input @xmath32 is set to @xmath33 , the second element of @xmath30 .",
    "the elements of @xmath30 are then successively used until some packet @xmath34 , @xmath35 is successfully received .",
    "in ppc discussed above , the control packet @xmath30 is transmitted at each time @xmath36 through an erasure channel ( see fig .  [",
    "fig : ncs ] ) .",
    "it is often the case that the bandwidth of the channel is limited , and hence one has to compress control packets to a smaller data size , see also@xcite . to design packets which are easily compressible",
    ", we adapt techniques used in the context of _ compressed sensing _",
    "@xcite to design sparse control vectors @xmath37 .",
    "since sparse vectors contain many @xmath38-valued elements , they can be highly compressed by only coding their few nonzero components and locations , as will be illustrated in section  [ sec : examples ] .",
    "thus , the control objective in this paper is to find _ sparse _ control packets @xmath30 which ensure that the ncs with bounded packet dropouts is _ asymptotically stable_.    we define the sparsity of a vector @xmath39 by its @xmath0 `` norm , '' @xmath40 and introduce the following sparsity - promoting optimization : @xmath41 where we omit the dependence on @xmath26 , and @xmath42^\\top        \\end{split}\\ ] ] are plant state and input predictions .",
    "the matrices @xmath12 , @xmath43 , and @xmath44 are chosen such that the feedback system is asymptotically stable .",
    "the procedure of choosing these matrices is presented in section [ sec : stability ] .    at each time",
    "instant @xmath36 , the controller uses the current state @xmath27 to solve the above optimization with @xmath45 thus providing the optimal control packet @xmath30 .",
    "this ( possibly sparse ) packet can be effectively compressed before it is transmitted to the buffer at the plant side .",
    "in this section , we show that if    * @xmath46 , * the matrices @xmath15 , @xmath47 , and @xmath48 in the proposed optimization ( [ eq : opt0 ] ) or ( [ eq : optm ] ) are appropriately chosen , * and the maximum number of consecutive dropouts is bounded ,    then the ncs is asymptotically stable . the proof is omitted due to limitation of space .    0      since stability",
    "is unavoidably linked to feasibility , we begin our analysis by introducing the feasible set for the optimization ( [ eq : optm ] ) :    for @xmath49 , the feasible set @xmath50 of the optimization ( [ eq : optm ] ) is defined by @xmath51 @xmath52    clearly , for given matrices @xmath53 and @xmath54 , the feasible set @xmath50 will be non - empty if the matrix @xmath48 is `` large '' enough . to elucidate this issue further , we first recall an associated least - squares solution .    consider ( cf .",
    "( [ eq : optm ] ) ) @xmath55 and define the matrix @xmath56 be such that @xmath57 we call @xmath58 the _ least squares solution _ for @xmath50 , and @xmath59 the _ smallest covariance matrix _ for @xmath50.@xmath52    the `` smallest '' @xmath48 which ensures that @xmath60 is , thus , given by @xmath59 .",
    "in fact , we have :    for any @xmath61 , we have @xmath62 . moreover , if @xmath61 , then the feasible set @xmath50 is closed , convex , and non - empty subset in @xmath63 .    0",
    "suppose @xmath61 .",
    "then @xmath64 and hence @xmath62 .",
    "this also implies that @xmath50 is non - empty for any @xmath61 .",
    "closedness and convexity of @xmath50 are obvious since the set is defined by a quadratic form ( i.e. , the set is a closed ellipsoid in @xmath63 ) .",
    "based on this lemma , we hereafter assume that @xmath65 it is well - known that the least squares solution can be obtained in closed form via the moore - penrose generalized inverse @xcite .",
    "[ lem : feasible_solutions ] consider the generalized inverse of @xmath53 , @xmath66 .",
    "then @xmath67 and @xmath68 .    since @xmath23 is reachable , @xmath69 and hence @xmath70 .",
    "this and the fact that @xmath71 imply that @xmath72 has full column rank ( i.e. , @xmath73 ) .",
    "therefore , @xmath74 is invertible and @xmath75 is well - defined .",
    "direct manipulations provide the result .",
    "the least squares solution @xmath58 and the smallest covariance matrix @xmath59 are also characterized by the notion of optimal control .",
    "the following lemma is a well - known result in dynamic programming ( * ? ? ?",
    "* chapter 3 ) .",
    "[ lem : ric ] suppose that the discrete - time algebraic riccati equation @xmath76 has a positive definite solution @xmath12 and let @xmath77 then @xmath78 moreover , the matrices @xmath15 and @xmath79 satisfy @xmath80    in what follows , we write the feasible set for  ( [ eq : optm ] ) by @xmath81 instead of @xmath50 for simplicity .",
    "@xmath81 can be characterized as follows :    [ lem : eps_bound ] consider @xmath82 .",
    "then there exists @xmath83 such that , see ( [ eq : eps ] ) , @xmath84    let @xmath82 .",
    "first , by using the relation @xmath85 , or @xmath86 , we can easily show that two vectors @xmath87 and @xmath88 are orthogonal .",
    "it follows that @xmath89 and hence @xmath90 this gives the representation ( [ eq : ueps ] ) .",
    "the error term @xmath91 in  ( [ eq : ueps ] ) may be interpreted as a `` penalty charge '' for sparsifying the vector ( control packet ) @xmath39 , since the term @xmath92 with the sparse control @xmath93 will be larger than with the least squares one , @xmath94.@xmath52    by ( [ eq : ustar ] ) and  ( [ eq : ueps ] ) , all feasible control vectors @xmath95^\\top \\in{{\\mathcal{f}}}({{{\\boldsymbol{x}}}})\\ ] ] can be written as @xmath96 where @xmath97 is the @xmath98-th element of @xmath91 satisfying the inequality in ( [ eq : ueps ] ) .",
    "the associated predictions are @xmath99 where @xmath100 by using the definition ( [ eq : k ] ) of the matrix @xmath79 , we have @xmath101{{{\\boldsymbol{\\varepsilon}}}}({{{\\boldsymbol{x}}}})\\\\     & = \\frac{{b}^\\top p\\phi_i}{{b}^\\top p{b}}{{{\\boldsymbol{\\varepsilon}}}}({{{\\boldsymbol{x}}}}),\\quad i=0,1,\\ldots , n-1 ,   \\end{split}\\ ] ] where @xmath102 is the @xmath98-th row block of the matrix @xmath103 , i.e. , @xmath104.\\ ] ]      our subsequent analysis , uses the following quadratic function : @xmath105    [ lem : openloop_stability ] suppose @xmath43 is chosen arbitrarily , @xmath12 is the solution of the riccati equation ( [ eq : ric ] ) , and @xmath44 is such that @xmath106 .",
    "let @xmath107 .",
    "then there exists a constant @xmath108 such that @xmath109 also , there exist constants @xmath110 and @xmath111 such that @xmath112    by substituting the state @xmath113 given in ( [ eq : trajectory ] ) into @xmath114 , and using ( [ eq : ric2 ] ) and ( [ eq : orthogonal ] ) , we have @xmath115{{{\\boldsymbol{x}}}}_{i}\\\\     & ~      + 2{{{\\boldsymbol{x}}}}_i^\\top \\underbrace{(a+{b}{k})^\\top p{b}}_{=0~\\text{by ( \\ref{eq : orthogonal})}}w_i({{{\\boldsymbol{x } } } } )      + { b}^\\top p{b}\\left|w_i({{{\\boldsymbol{x}}}})\\right|^2\\\\     & = v({{{\\boldsymbol{x}}}}_i ) -{{{\\boldsymbol{x}}}}_i^\\top q { { { \\boldsymbol{x}}}}_i + { b}^\\top p{b}\\left|w_i({{{\\boldsymbol{x}}}})\\right|^2 .",
    "\\end{split}\\ ] ] by the definition of @xmath116 in ( [ eq : wi ] ) , we have @xmath117 where the last inequality is due to lemma [ lem : eps_bound ] , and @xmath118 thus we have the inequality ( [ eq : openloop_stability1 ] ) .",
    "then this inequality gives @xmath119 where @xmath120 since @xmath121 , we have @xmath110 . by mathematical induction ,",
    "we obtain @xmath122 putting @xmath123 establishes ( [ eq : openloop_stability2 ] ) .    to consider the stability of the networked system affected by packet dropouts , we follow akin to what was done in@xcite and denote the time instants where there are no packet - dropouts , i.e. , where @xmath29 , as @xmath124 whereas the number of consecutive packet - dropouts is denoted via : @xmath125 note that @xmath126 , with equality if and only if no dropouts occur between instants @xmath127 and @xmath128 .",
    "when packets are lost , the control system unavoidably operates in open - loop .",
    "thus , to ensure desirable properties of the networked control system , one would like the number of consecutive packet - dropouts to be bounded . in particular , to establish asymptotic stability , we make the following assumption :    [ ass : dropouts ] the number of consecutive packet - dropouts is uniformly bounded by the prediction horizon minus one , that is , @xmath129 , @xmath130 .",
    "we also assume that the first control packet @xmath131 is successfully transmitted , that is , @xmath132 . @xmath52    theorem  [ thm : stability ] stated below shows how to design the matrices @xmath15 , @xmath47 , and @xmath48 in  ( [ eq : opt0 ] ) to ensure asymptotic stability of the networked control system in the presence of bounded packet dropouts . before proceeding ,",
    "we introduce the matrices : @xmath133 which allow us to re - write ( [ eq : opt0 ] ) in vector form via @xmath134 where @xmath135 and @xmath136 .",
    "[ thm : stability ] suppose that assumption [ ass : dropouts ] holds and that the matrices @xmath15 , @xmath47 , and @xmath48 are chosen by the following procedure :    1 .",
    "choose @xmath43 arbitrarily .",
    "2 .   solve the following riccati equation to obtain @xmath12 : @xmath137 3 .",
    "compute constants @xmath110 and @xmath111 via @xmath138 4 .   choose @xmath139 such that @xmath140 .",
    "5 .   compute @xmath141 and set @xmath142",
    ".    then the sparse control packets @xmath30 , @xmath36 , which is the solution of the optimization ( [ eq : opt0 ] ) or ( [ eq : optm ] ) with the above matrices , lead to asymptotic stability of the networked control system .    0    fix @xmath143 and note that at time instant @xmath127 , the control packet is successfully transmitted to the buffer .",
    "then until the next packet is received at time @xmath128 , @xmath144 consecutive packet - dropouts occur . by the ppc strategy ,",
    "the control input becomes @xmath145 , @xmath146 , and the states @xmath147 are determined by these open - loop controls . since , by assumption",
    ", we have @xmath148 , lemma [ lem : openloop_stability ] gives @xmath149 for @xmath150 .",
    "also , for @xmath151 , the next instant when the control packet is successfully transmitted , we have @xmath152 it follows that at the time instants @xmath153 ( no - dropout instants ) , @xmath154 strictly decreases , and hence @xmath155 as @xmath156",
    ". then , by ( [ eq : vxk ] ) , for @xmath157 ( consecutive dropout instants ) , @xmath158 is bounded by @xmath159 .",
    "since the latter converges to zero , we conclude that @xmath160 as @xmath161 .    0    in the second step in theorem [ thm : stability ] , there may exist no positive definite solution for the riccati equation ( [ eq : ric ] ) . in this case , one can instead consider a slightly modified riccati equation @xmath162 where @xmath163 is a sufficiently small positive number .",
    "then , since @xmath23 is assumed reachable and @xmath163 , the positive definite solution exists@xcite and can be used for @xmath15 .",
    "@xmath52    in summary , the networked control system affected by packet dropouts is asymptotically stable with the sparse control packets obtained by the optimization ( [ eq : opt0 ] ) or ( [ eq : optm ] ) if @xmath15 , @xmath47 , and @xmath48 are computed as per theorem  [ thm : stability ] .",
    "in this section , we consider the optimization @xmath164 the optimization @xmath165 is in general extremely complex since it requires a combinatorial search that explores all possible sparse supports of @xmath166 .",
    "in fact , it is proved to be np hard @xcite . for such problem ,",
    "there have been proposed alternative algorithms that are much more tractable than exhaustive search ; see , e.g. , the books @xcite .",
    "one approach to the combinatorial optimization is an iterative greedy algorithm called _ orthogonal matching pursuit _ ( omp ) @xcite .",
    "the algorithm is very simple and dramatically faster than the exhaustive search .",
    "in fact , assuming that @xmath167 and the solution @xmath168 of @xmath165 satisfies @xmath169 , then the omp algorithm requires @xmath170 operations , while exhaustive search requires @xmath171 @xcite . the omp algorithm for our control problem",
    "is shown in algorithm [ alg : omp ] . in this algorithm",
    ", @xmath172 is the support set of a vector @xmath173^\\top$ ] , that is , @xmath174 , and @xmath175 denotes the @xmath176-th column of the matrix @xmath53 .",
    "@xmath49 @xmath93 @xmath177 .",
    "@xmath178:={{{\\boldsymbol{0}}}}$ ] .",
    "@xmath179:=h{{{\\boldsymbol{x}}}}-g{{{\\boldsymbol{u}}}}[0]=h{{{\\boldsymbol{x}}}}$ ] .",
    "@xmath180:=\\operatorname*{supp}\\{{{{\\boldsymbol{x}}}}[0]\\}=\\emptyset$ ] .",
    "@xmath181}{\\|{{{\\boldsymbol{g}}}}_j\\|_2 ^ 2}=\\operatorname*{arg\\,min}_{z\\in{{\\mathbb{r } } } } \\| { { { \\boldsymbol{g}}}}_jz - { { { \\boldsymbol{r}}}}[k ] \\|_2 ^ 2 $ ] .",
    "@xmath182\\|_2 ^ 2 $ ] .",
    "find a minimizer @xmath183 $ ] such that @xmath184 , for all @xmath185 $ ] .",
    "@xmath186 : = { { \\mathcal{s}}}[k ] \\cup \\{j_0\\}$ ] @xmath187:=\\operatorname*{arg\\,min}_{\\operatorname*{supp}\\{{{{\\boldsymbol{u}}}}\\}={{\\mathcal{s}}}[k+1]}\\|g{{{\\boldsymbol{u}}}}-h{{{\\boldsymbol{x}}}}\\|_2 ^ 2 $ ] .",
    "@xmath188:=h{{{\\boldsymbol{x}}}}-g{{{\\boldsymbol{u}}}}[k+1]$ ] .",
    "@xmath190 $ ] .",
    "next , we study stability of the ncs with control packets computed by algorithm [ alg : omp ] .",
    "since algorithm [ alg : omp ] always returns a feasible solution for @xmath165 , we have the following result based on theorem [ thm : stability ] .",
    "[ thm : omp ] suppose that assumption [ ass : dropouts ] holds and that the matrices @xmath15 , @xmath47 , and @xmath48 are chosen according to the procedure given in theorem [ thm : stability ] .",
    "then , the control packets @xmath191 , @xmath36 obtained by the omp algorithm [ alg : omp ] provide an asymptotically stable ncs .",
    "consequently , when compared to the method used in @xcite , algorithm  [ alg : omp ] has the following main advantages :    * it is simple and fast , * it returns control packets that asymptotically stabilize the networked control system    we note that in conventional transform based compression methods e.g. , jpeg , the encoder maps the source signal into a domain where the majority of the transform coefficients are approximately zero and only few coefficients carry significant information .",
    "one therefore only needs to encode the few significant transform coefficients as well as their locations . in our case , on the other hand , we use the omp algorithm to sparsify the control signal in its original domain , which simplifies the decoder operations at the plant side . to obtain a practical scheme for closed loop control ,",
    "we employ memoryless entropy - constrained scalar quantization of the non - zero coefficients of the sparse control signal and , in addition , send information about the coefficient locations .",
    "we then show , through computer simulations , that a significant bit - rate reduction is possible compared to when performing memoryless entropy - constrained scalar quantization of the control signal obtained by solving the standard quadratic control problem for ppc as in @xcite .",
    "to assess the effectiveness of the proposed method , we consider the following continuous - time plant model : @xmath192,\\\\    b_c&=\\left[\\begin{array}{r }     -0.3\\\\      0\\\\     -17\\\\      0\\\\    \\end{array}\\right ] .",
    "\\end{split }   \\label{eq : example - model}\\ ] ] this model is a constant - speed approximation of some of the linealized dynamics of a cessna citation 500 aircraft , when it is cruising at an altitude of 5000 ( m ) and a speed of 128.2 ( m / sec ) ( * ? ? ?",
    "* section 2.6 ) . to obtain a discrete - time model",
    ", we discretize by the zero - order hold with sampling time @xmath193 ( sec ) .",
    "we set the horizon length ( or the packet size ) to @xmath194 .",
    "we choose the weighting matrix @xmath47 in ( [ eq : opt0 ] ) as @xmath195 , and choose the matrix @xmath48 according to the procedure shown in theorem [ thm : stability ] with @xmath196 .",
    "we first simulate the ncs in the noise - free case where @xmath46 .",
    "we consider the proposed method using the omp algorithm and also the @xmath197 optimization of@xcite : @xmath198 where @xmath199 is a positive constant . to compare these two sparsity - promoting methods with traditional ppc approaches",
    ", we also consider a finite - horizon quadratic cost function @xmath200 where @xmath201 is a positive constant , yielding the @xmath4-optimal control @xmath202 to choose the regularization parameters @xmath199 in @xmath203 and @xmath201 in @xmath204 , we empirically compute the relation between each parameter and the control performance , as measured by the @xmath4 norm of the state @xmath205 .",
    "[ fig : norm_vs_nu ] shows this relation .     versus control performance @xmath206 for @xmath203 ( solid ) and @xmath204 ( dash ) .",
    "the circles show the chosen parameters @xmath199 and @xmath201 . ]    by this figure , we first find the optimal parameter for @xmath207 that optimizes the control performance , i.e. , @xmath208 .",
    "then , we seek @xmath199 that gives the same control performance , namely , @xmath209 .",
    "furthermore , we also investigate the ideal least - squares solution @xmath58 that minimizes @xmath210 .    with these parameters ,",
    "we run 500 simulations with randomly generated ( markovian ) packet - dropouts that satisfy assumption [ ass : dropouts ] , and with initial vector @xmath211 in which each element is independently sampled from the normal distribution with mean 0 and variance 1 . fig .",
    "[ fig : sparsity ] shows the averaged sparsity of the obtained control vectors .     with regularization parameter @xmath208 , omp ( solid ) , @xmath197 with @xmath209 ( dash - dot ) and @xmath212 ( dash ) .",
    "]    the @xmath197 optimization with @xmath209 always produces much sparser control vectors than those by omp .",
    "this property depends on how to choose the regularization parameter @xmath213 .",
    "in fact , if we choose smaller @xmath212 , the sparsity changes as shown in fig .",
    "[ fig : sparsity ] . on the other hand ,",
    "if we use a sufficiently large @xmath213 , then the control vector becomes @xmath214 .",
    "this is indeed the sparsest control , but leads to very poor control performance : the state diverges until the control vector becomes nonzero ( see @xcite ) .    fig .",
    "[ fig : control_performance ] shows the averaged 2-norm of the state @xmath27 as a function of @xmath26 for all 5 designs .",
    "we see that , with exception of the @xmath197 optimization based ppc , the ncss are nearly exponentially stable .",
    "in contrast , if the @xmath197 optimization of@xcite is used , then only practical stability is observed .",
    "the simulation results are consistent with corollary [ thm : omp ] and our previous results in@xcite .",
    "note that the @xmath197 optimization with @xmath212 shows better performance than that with @xmath209 , while @xmath209 gives a much sparser vector .",
    "this shows a tradeoff between the performance and the sparsity .",
    "for the four ppc designs : log plot ( above ) and linear plot ( below ) . ]    fig .",
    "[ fig : cpu_time ] shows the associated computation times .",
    "the @xmath197 optimization is faster than omp in many cases .",
    "note that the ideal and the @xmath4 optimizations are much faster , since they require just one matrix - vector multiplication .",
    "we next investigate bit - rate aspects for a gaussian plant noise process @xmath215 . to keep the encoder and decoder simple",
    ", we will be using memoryless entropy - constrained uniform scalar quantization ; see @xcite .",
    "thus , the non - zero elements of the control vector are independently encoded using a scalar uniform quantizer followed by a scalar entropy coder . in the simulations ,",
    "we choose the step size of the quantizer to be @xmath216 , which results in negligible quantization distortion .",
    "we first run 1000 simulations with 100 time steps and use the obtained control vectors for designing entropy coders .",
    "a separate entropy coder is designed for each element in the control vector .",
    "for the first @xmath217 elements in the vector , we always use a quantizer followed by entropy coding . for the remaining @xmath217 elements ,",
    "we only quantize and entropy code the non - zero elements .",
    "we then send additional @xmath217 bits indicating , which of the @xmath217 elements have been encoded .",
    "the total bit - rate for each control vector is obtained as the sum of the codeword lengths for each individual non - zero codeword @xmath218 bits . for comparison",
    ", we use the same scalar quantizer with step size @xmath219 and design entropy coders on the data obtained from the @xmath4 optimization .",
    "since the control vectors in this case are non - sparse , we separately encode _ all _ @xmath220 elements and sum the lengths of the individual codewords to obtain the total bit - rate . in both of the above cases , the entropy coders are huffman coders .",
    "moreover , the system parameters are initialized with different random seeds for the training and test situations , respectively .",
    "the average rate per control vector for the omp case is @xmath221 bits , whereas the average rate for the @xmath4 case is @xmath222 bits .",
    "thus , due to sparsity , a @xmath223 percent bit - rate reduction is on average achieved .     with gaussian noise .",
    "]        fig .",
    "[ fig : performance-2 ] shows the 2-norm of the state @xmath27 and fig .",
    "[ fig : sparsity-2 ] shows the sparsity .",
    "we can also see the tradeoff between the performance and the sparsity in this case .",
    "we have studied a packetized predictive control formulation with a sparsity - promoting cost function for error - prone rate - limited networked control system .",
    "we have given sufficient conditions for asymptotic stability when the controller is used over a network with bounded packet dropouts .",
    "simulation results indicate that the proposed controller provides sparse control packets , thereby giving bit - rate reductions when compared to the use of , more common , quadratic cost functions .",
    "future work may include further study of performance aspects and the effect of plant disturbances .",
    "d.  e. quevedo and d.  nei , `` input - to - state stability of packetized predictive control over unreliable networks affected by packet - dropouts , '' _ ieee trans .",
    "56 , pp .  370375 ,",
    "d.  e. quevedo , j.  stergaard , and d.  nei , `` packetized predictive control of stochastic systems over bit - rate limited channels with packet loss , '' _ ieee trans .",
    "56 , pp .",
    "28542868 , dec .",
    "g.  pin and t.  parisini , `` networked predictive control of uncertain constrained nonlinear systems : recursive feasibility and input - to - state stability analysis , '' _ ieee trans .",
    "56 , pp .  7287 , jan .",
    "2011 .",
    "y.  c. pati , r.  rezaiifar , and p.  s. krishnaprasad , `` orthogonal matching pursuit : recursive function approximation with applications to wavelet decomposition , '' in _ proc .",
    "the 27th annual asilomar conf .  on signals , systems and computers _ , pp .  4044 , nov .",
    "m.  nagahara , d.  e. quevedo , and j.  stergaard , `` sparsely - packetized predictive control by orthogonal matching pursuit ( extended abstract ) , '' in _",
    "20th international symposium on mathematical theory of networks and systems ( mtns ) _ , july 2012 . to be presented .",
    "m.  nagahara , d.  e. quevedo , t.  matsuda , and k.  hayashi , `` compressive sampling for networked feedback control , '' in _ proc .",
    "ieee int .",
    "acoust .  speech signal process ( icassp ) _ , pp .  27332736 , mar .",
    "d.  e. quevedo , j.  stergaard , and d.  nei , `` packetized predictive control of stochastic systems over bit - rate limited channels with packet loss , '' _ ieee trans .",
    "56 , no .  11 , 2011"
  ],
  "abstract_text": [
    "<S> we study a networked control architecture for linear time - invariant plants in which an unreliable data - rate limited network is placed between the controller and the plant input . </S>",
    "<S> the distinguishing aspect of the situation at hand is that an unreliable data - rate limited network is placed between controller and the plant input . to achieve robustness with respect to dropouts </S>",
    "<S> , the controller transmits data packets containing plant input predictions , which minimize a finite horizon cost function . in our formulation </S>",
    "<S> , we design sparse packets for rate - limited networks , by adopting an an @xmath0 optimization , which can be effectively solved by an orthogonal matching pursuit method . </S>",
    "<S> our formulation ensures asymptotic stability of the control loop in the presence of bounded packet dropouts . </S>",
    "<S> simulation results indicate that the proposed controller provides sparse control packets , thereby giving bit - rate reductions for the case of memoryless scalar coding schemes when compared to the use of , more common , quadratic cost functions , as in linear quadratic ( lq ) control . </S>"
  ]
}
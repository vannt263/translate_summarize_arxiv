{
  "article_text": [
    "in the * shortest superstring problem * , we are given a finite set @xmath0 of strings and we would like to construct their shortest superstring , which is the shortest possible string such that every string in @xmath0 is a proper substring of it .",
    "the task of computing a shortest common superstring appears in a wide variety of application related to computational biology ( see . e.g.  @xcite and @xcite ) .",
    "intuitively , short superstrings preserve important biological structure and are good models of the original dna sequence . in context of computational biology , dna sequencing is the important task of determining the sequence of nucleotides in a molecule of dna .",
    "the dna can be seen as a double - stranded sequence of four types of nucleotides represented by the alphabet @xmath1 .",
    "identifying those strings for different molecules is an important step towards understanding the biological functions of the molecules .",
    "however , with current laboratory methods , it is quite impossible to extract a long molecule directly as a whole .",
    "in fact , biochemists split millions of identical molecules into pieces each typically containing at most @xmath2 nucleotides .",
    "then , from sometimes millions of these fragments , one has to compute the superstring representing the whole molecule .    from the computational point of view ,",
    "the shortest superstring problem is an optimization problem , which consists of finding a minimum length superstring for a given set @xmath0 of strings over a finite alphabet @xmath3 .",
    "the underlying decision version was proved to be @xmath4-complete  @xcite .",
    "however , there are many applications that involve relatively simple classes of strings . motivated by those applications , many authors have investigated whether the shortest superstring problem becomes polynomial time solvable under various restrictions to the set of instances .",
    "gallant et al .",
    "@xcite proved that this problem in the exact setting is still @xmath4-complete for strings of length three and polynomial time solvable for strings of length two . on the other hand ,",
    "timkovskii  @xcite studied the shortest superstring problem under restrictions to the orbit size of the letters in @xmath3 .",
    "the orbit size of a letter is the number of its occurrences in the strings of @xmath0 .",
    "timkovskii proved that this problem restricted to instances with maximal orbit size two is polynomial time solvable .",
    "he raised the question about the status of the problem with maximal orbit size @xmath5 for any constant @xmath6 .",
    "it is known that the shortest superstring problem remains @xmath4-hard for the following strongly restricted instances , such as    1 .",
    "all strings have length four and the maximal orbit size is six  @xcite , 2 .",
    "the size of the alphabet of the instance is exactly two  @xcite , and 3 .",
    "all strings are of the form @xmath7 , where @xmath8  @xcite .    in order to cope with the exact computation intractability",
    ", approximation algorithms were designed to deal with this problem .",
    "the first polynomial time approximation algorithm with a constant approximation ratio was given by blum et al .  .",
    "it achieves an approximation ratio @xmath9 .",
    "this factor was improved in a series of papers yielding approximation ratios of @xmath10 by teng and yao  @xcite ; @xmath11 by czumaj et al .",
    "; @xmath12 by kosaraju , park , and stein  @xcite ; @xmath13 by armen and stein  @xcite ; @xmath14 by armen and stein  @xcite ; @xmath15 by breslauer , jiang , and jiang  @xcite and @xmath16 by sweedyk  @xcite .",
    "the currently best known approximation algorithm is due to mucha  @xcite and yields an approximation ratio of @xmath17 .    on the lower bound side , blum et al .",
    "proved that approximating the shortest superstring problem is @xmath18-hard .",
    "however , the constructed reduction produces instances with arbitrarily large alphabets . in  @xcite ,",
    "ott provided the first explicit approximation hardness result and proved that the problem is @xmath18-hard even if the size of the alphabet is two .",
    "in fact , ott proved that instances over a binary alphabet are @xmath4-hard to approximate with an approximation ratio @xmath19 for every @xmath20 . in 2005 , vassilevska  @xcite gave an improved approximation lower bound of @xmath21 by using a natural construction .",
    "the constructed instances of the shortest superstring problem have maximal orbit size @xmath22 and the length of the strings is exactly @xmath23 .    in this paper , we prove that even instances of the shortest superstring problem with maximal orbit size @xmath24 and all strings having length @xmath23 are @xmath4-hard to approximate with less than @xmath25 .",
    "+   + * maximal compression problem*. we are given a collection of strings @xmath26 .",
    "the task is to find a superstring for @xmath0 with maximum compression , which is the difference between the sum of the lengths of the given strings and the length of the superstring .    in the exact",
    "setting , an optimal solution to the shortest superstring problem is an optimal solution to this problem , but the approximate solutions can differ significantly in the sense of approximation ratio .",
    "the maximal compression problem arises in various data compression problems ( cf .",
    "@xcite ,  @xcite and  @xcite ) .",
    "the decision version of this problem is @xmath4-complete  @xcite .",
    "tarhio and ukkonen  @xcite and turner  @xcite gave approximation algorithms with approximation ratio @xmath27 .",
    "the best known approximation upper bound is @xmath28   by reducing it to the max - atsp problem , which is defined below .    on the approximation",
    "lower bound side , blum et al .   proved the @xmath18-hardness of the maximal compression problem . the first explicit approximation lower bounds were given by ott  @xcite , who proved that it is @xmath4-hard to approximate this problem with an approximation factor @xmath29 for every @xmath30 .",
    "this hardness result was improved by vassilevska  @xcite implying a lower bound of @xmath31 for any @xmath30 , unless @xmath32  @xmath33  @xmath4 . in this paper , we prove that approximating the maximal compression problem with an approximation ratio less than @xmath34 is @xmath4-hard .",
    "+   + * maximum asymmetric traveling salesperson ( max - atsp ) problem*. we are given a complete directed graph @xmath35 and a weight function @xmath36 assigning each edge of @xmath35 a nonnegative weight .",
    "the task is to find a closed tour of maximum weight visiting every vertex of @xmath35 exactly once .",
    "this problem has various applications and in fact , a good approximation algorithm for max - atsp yields a good approximation algorithm for many other optimization problems such as the shortest superstring problem , the maximum compression problem and the minimum asymmetric @xmath37-traveling salesperson ( min-@xmath37-atsp ) problem .",
    "the latter problem is the restricted version of the minimum asymmetric traveling salesperson problem , in which we restrict the weight function @xmath36 to weights one and two .",
    "the max - atsp problem can be seen as a generalization of the min-@xmath37-atsp problem in the sense that any @xmath38-approximation algorithm for the former problem transforms in a @xmath39- approximation algorithm for the latter problem . due to this reduction",
    ", all negative results concerning the approximation of the min-@xmath37-atsp problem imply hardness results for the max - atsp problem .",
    "since min-@xmath37-atsp is @xmath18-hard  @xcite , there is little hope for polynomial time approximation algorithms with arbitrary good precision for the max - atsp problem . on the other hand ,",
    "the first approximation algorithm for the max - atsp problem with guaranteed approximation performance is due to fisher , nemhauser , and wolsey  @xcite and achieves an approximation factor of @xmath27 .",
    "after that kosaraju , park , and stein  @xcite gave an approximation algorithm for that problem with performance ratio @xmath40 .",
    "this result was improved by blser  @xcite who obtained an approximation upper bound of @xmath41 .",
    "lewenstein and sviridenko  @xcite were able to improve the approximation upper bound for that problem to @xmath42 .",
    "then , kaplan et al .   designed an algorithm for the max - atsp problem yielding the best known approximation upper bound of @xmath43 .    on the approximation hardness side ,",
    "engebretsen  @xcite proved that , for any @xmath30 , there is no ( @xmath44)-approximation algorithm for min-@xmath37-atsp , unless @xmath32   @xmath33   @xmath4 , which yields an approximation lower bound of @xmath45 for the max - atsp problem .",
    "the negative result was improved by engebretsen and karpinski  @xcite to @xmath46 for the min-@xmath37-atsp problem .",
    "it implies the best known approximation lower bound of @xmath47 , unless @xmath32   @xmath33   @xmath4 . in this paper , we prove that approximating the max - atsp problem with an approximation ratio less than @xmath34 is @xmath4-hard .",
    "in the following , we introduce some notation and abbreviations .",
    "+   + throughout , for @xmath48 , we use the abbreviation @xmath49 $ ] for the set @xmath50 .",
    "given an finite alphabet @xmath3 , a string is an element of @xmath51 . given two strings @xmath52 and @xmath53 over @xmath3 , we denote the length of @xmath54 by @xmath55 .",
    "furthermore , @xmath54 is a substring of @xmath36 , if @xmath56 and there exists a @xmath57 such that for all @xmath58 $ ] , @xmath59 .",
    "@xmath36 is said to be a superstring of @xmath54 if @xmath54 is a substring of @xmath36 . given a set of strings @xmath60",
    ", a string @xmath61 is a superstring for @xmath0 if @xmath62 is a superstring of every @xmath63 . given a superstring @xmath62 for @xmath0 , the compression of @xmath62 , denoted @xmath64 , is defined as @xmath65 in addition , we introduce the notion of the maximal orbit size of @xmath0 being the maximal number of occurences of a character in @xmath0 .",
    "we are ready to give the definition of the shortest superstring problem and the maximal compression problem .    given an alphabet @xmath3 and a set of strings @xmath60 such that no string in @xmath0 is a substring of another string in @xmath0 , in the shortest superstring problem we have to find a string @xmath62 for @xmath0 of minimum length , whereas in the maximum compression problem , we have to find a superstring @xmath62 for @xmath0 with maximum compression .    in the following ,",
    "we concentrate on the traveling salesperson problems .",
    "we begin with the definition of the max - atsp problem . for this reason ,",
    "we introduce the notion of a _",
    "hamiltonian tour_. given a directed graph @xmath66 , a hamiltonian tour is a cycle in @xmath35 visiting each vertex of @xmath35 exactly once .",
    "given a complete directed graph @xmath66 and a weight function @xmath36 assigning each edge of @xmath35 a nonnegative weight , the max - atsp problem consists of finding a hamiltonian tour of maximum weight in @xmath35 .",
    "next , we give the definition of the min-@xmath37-atsp problem , which is closely related to the max - atsp problem .    in the min-@xmath37-atsp problem , we are given a complete directed graph @xmath66 and a weight function @xmath67 .",
    "the task is to find a hamiltonian tour of minimum weight in @xmath35 .",
    "in the following , we present some results related to the problems studied in this paper . in particular , we describe briefly some reductions , which we use later on .",
    "+   + the following theorem is due to vassilevska  @xcite and deals with best known approximation lower bounds for the shortest superstring problem as well as for the maximal compression problem .    for any @xmath20 , it is @xmath4-hard to approximate the shortest superstring problem and the maximal compression problem restricted to instances with equal length strings in polynomial time within a factor of    * @xmath68 and * @xmath69 , respectively .",
    "in addition , the maximal orbit size of the constructed instances in  @xcite is @xmath22 and all strings have length four . in the same paper , it was proved that the shortest superstring problem is the hardest to approximate on instances over a binary alphabet .",
    "suppose the shortest superstring problem can be approximated by a factor @xmath70 on instances over a binary alphabet .",
    "then , the shortest superstring problem can be approximated by a factor @xmath70 on instances over any alphabet .",
    "given an instance @xmath0 of the shortest superstring problem , consider the associated weighted complete graph , in which the vertices are represented by the strings in @xmath0 and the weight of an edge is given by the the number of maximum overlapped letters of the corresponding strings .",
    "then , the optimal compression is equivalent to the weight of a maximum hamiltonian path . by introducing a special vertex representing the start and the end of the hamiltonian cycle",
    ", the maximal compression problem is equivalent to the max - atsp problem on this graph .",
    "this fact was used in   in order to obtain an improved approximation algorithm for the maximal compression problem .",
    "[ redmaxtspmaxcomp ] an @xmath70-approximation algorithm for the max - atsp problem implies an @xmath70-approximation algorithm for the maximal compression problem .",
    "another interesting relation can be derived by replacing all edges with weight two of an instance of the min-@xmath37-atsp problem by edges of weight zero and then , computing a hamiltonian tour of maximum weight .",
    "vishwanathan@xcite proved that this transformation relates the min-@xmath37-atsp problem to the max - atsp problem in the following sense .",
    "[ sspredminmax ] an @xmath71- approximation algorithm for the max - atsp problem implies an @xmath39- approximation algorithm for the min-@xmath37-atsp problem .    due to this reduction ,",
    "every hardness result concerning the min-@xmath37-atsp problem can be transformed into a hardness result for the max - atsp problem .",
    "the best known approximation lower bound for the min-@xmath37-atsp problem is proved in  @xcite and it yields the following hardness result .    for any constant @xmath20 ,",
    "it is @xmath4-hard to approximate the min-@xmath37-atsp problem with an approximation ratio @xmath72 .    according to theorem  [ sspredminmax ]",
    ", it implies the hardness result for the max - atsp problem stated below .    for any constant @xmath20 , it is @xmath4-hard to approximate the max - atsp problem within @xmath72 .",
    "in their paper on approximation hardness of bounded occurrence instances of several combinatorial optimization problems , berman and karpinski  @xcite introduced the hybrid problem and proved that this problem is @xmath4-hard to approximate with some constant .    given a system of linear equations mod 2 containing n variables , @xmath73 equations with exactly two variables , and @xmath74 equations with exactly three variables , find an assignment to the variables that satisfies as many equations as possible .    in the aforementioned paper ,",
    "berman and karpinski proved the following hardness result .",
    "[ ssphybridsatz ] for any constant @xmath20 , there exists instances of the hybrid problem with @xmath75 variables , @xmath76 equations with exactly two variables , and @xmath77 equations with exactly three variables such that :    1 .",
    "each variable occurs exactly three times .",
    "2 .   either there is an assignment to the variables that leaves at most @xmath78 equations unsatisfied , or else every assignment to the variables leaves at least @xmath79 equations unsatisfied .",
    "3 .   it is @xmath4-hard to decide which of the two cases in item @xmath80 above holds .    analyzing the details of their construction",
    ", it can be seen that every instance of the hybrid problem produced by it has an even more special structure .",
    "the equations containing three variables are of the form @xmath81 .",
    "those equations arise from the theorem of hstad  @xcite concerning the hardness of approximating equations with exactly three variables called the max - e3-lin problem , which can be seen as a special instance of the hybrid problem .",
    "+     + for every variable @xmath82 of the original instance @xmath83 of the max - e3-lin problem , they introduced a corresponding set of variables @xmath84 . if the variable @xmath82 occurs @xmath85 times in @xmath83 , then , @xmath84 contains @xmath86 variables @xmath87 .",
    "furthermore , the variables in @xmath84 are connected by equations of the form @xmath88 with @xmath89 $ ] and @xmath90 .",
    "this construction induces the circle @xmath91 on the variables @xmath84 .",
    "in addition to it , every circle @xmath91 possesses an associated matching @xmath92 .",
    "the variables contained in @xmath93\\ }   \\}$ ] are called _ contact variables _ , whereas the variables in @xmath94 are called _ checker variables_.",
    "let @xmath83 be an instance of the max - e3-lin problem and @xmath95 be its corresponding instance of the hybrid problem .",
    "we denote by @xmath96 the set of variables which occur in the instance @xmath83 .",
    "then , @xmath95 can be represented graphically by @xmath97 circles @xmath91 with @xmath98 containing the variables @xmath99 as vertices .",
    "the edges are identified by the equations included in @xmath95 .",
    "the equations with exactly three variables are represented by hyperedges @xmath100 with cardinality @xmath101 .",
    "the equations @xmath88 induce a circle containing the vertices @xmath102 and the matching equations @xmath103 with @xmath104 induce a perfect matching on the set of checker variables .",
    "an example of an instance of the hybrid problem is depicted in figure[fig : hybridssp ] .    in summary",
    ", we notice that there are four type of equations in the hybrid problem @xmath105 the circle equations @xmath88 with @xmath89 $ ] , @xmath80 circle border equations @xmath106 , @xmath107 matching equations @xmath108 with @xmath104 , and @xmath109 equations with three variables of the form @xmath110 .",
    "+ in the remainder , we assume that equations of the form @xmath81 contain only unnegated variables due to the transformation @xmath111 .",
    "we now formulate our main result .",
    "[ hauptsatzssp ] given an instance @xmath95 of the hybrid problem with @xmath112 circles , @xmath73 equations with two variables and @xmath74 equations with exactly three variables with the properties described in theorem  [ ssphybridsatz ] , we construct in polynomial time an instance @xmath113 of the shortest superstring problem and maximal compression problem with the following properties :    1 .",
    "if there exists an assignment @xmath114 to the variables of @xmath95 which leaves at most @xmath115 equations unsatisfied , then , there exist a superstring @xmath116 for @xmath113 with length at most @xmath117 .",
    "2 .   from every superstring @xmath62 for @xmath118 with length @xmath119",
    ", we can construct in polynomial time an assignment @xmath120 to the variables of @xmath95 that leaves at most @xmath115 equations in @xmath95 unsatisfied .",
    "if there exists an assignment @xmath114 to the variables of @xmath95 which leaves at most @xmath115 equations unsatisfied , then , there exist a superstring @xmath116 for @xmath113 with compression at least @xmath121 .",
    "4 .   from every superstring @xmath62 for @xmath118 with compression @xmath122",
    ", we can construct in polynomial time an assignment @xmath120 to the variables of @xmath95 that leaves at most @xmath115 equations in @xmath95 unsatisfied .",
    "the maximal orbit size of the instance @xmath113 is @xmath24 and the length of each string in @xmath113 is @xmath23 .",
    "the former theorem can be used to derive an explicit approximation lower bound for the shortest superstring problem by reducing instances of the hybrid problem of the form described in theorem  [ ssphybridsatz ] to the shortest superstring problem .    for every @xmath123",
    ", it is @xmath4-hard to approximate the shortest superstring problem with an approximation factor @xmath124 .",
    "first of all , we choose constants @xmath125 and @xmath126 such that @xmath127 holds .",
    "given an instance @xmath83 of the max - e3-lin problem , we generate @xmath5 copies of @xmath83 and produce an instance @xmath95 of the hybrid problem .",
    "then , we construct the corresponding instance @xmath113 of the shortest superstring problem with the properties described in theorem  [ hauptsatzssp ] .",
    "we conclude according to theorem  [ ssphybridsatz ] that there exist a superstring for @xmath113 with length at most @xmath128 or the length of a superstring for @xmath113 is bounded from below by @xmath129 from theorem  [ ssphybridsatz ] , we know that the two cases above are @xmath4-hard to distinguish . hence , for every @xmath30 , it is @xmath4-hard to find a solution to the shortest superstring problem with an approximation ratio @xmath127 .",
    "analogously , theorem  [ hauptsatzssp ] can be used to derive an approximation lower bound for the maximal compression problem .",
    "for every @xmath123 , it is @xmath4-hard to approximate the maximal compression problem with an approximation factor @xmath130 .    by applying fact  [ redmaxtspmaxcomp ]",
    ", we obtain the following hardness result for the max - atsp problem .    for every @xmath123 ,",
    "it is @xmath4-hard to approximate the max - atsp problem with an approximation factor @xmath130 .",
    "in this section , we present the proof of theorem  [ hauptsatzssp ] . but before we describe the approximation preserving reduction , we first prove a slightly weaker result .",
    "the first approach uses strings with length @xmath131 simulating equations with exactly three variables . in section  [ sec : improvapproach ] , we will introduce smaller gadgets for equations with exactly three variables implying the claimed inapproximability results .",
    "+   + let us state the properties of our first approach .",
    "[ hauptsatzsspi ] given an instance @xmath95 of the hybrid problem with @xmath112 circles , @xmath73 equations with two variables and @xmath74 equations with exactly three variables with the properties described in theorem  [ ssphybridsatz ] , we construct in polynomial time an instance @xmath113 of the shortest superstring problem and maximal compression problem with the following properties :    1 .",
    "if there exists an assignment @xmath114 to the variables of @xmath95 which leaves at most @xmath115 equations unsatisfied , then , there exist a superstring @xmath116 for @xmath113 with length at most @xmath132 .",
    "2 .   from every superstring @xmath62 for @xmath118 with length @xmath133",
    ", we can construct in polynomial time an assignment @xmath120 to the variables of @xmath95 that leaves at most @xmath115 equations in @xmath95 unsatisfied .",
    "if there exists an assignment @xmath114 to the variables of @xmath95 which leaves at most @xmath115 equations unsatisfied , then , there exist a superstring @xmath116 for @xmath113 with compression at least @xmath134 .",
    "4 .   from every superstring @xmath62 for @xmath118 with compression @xmath135",
    ", we can construct in polynomial time an assignment @xmath120 to the variables of @xmath95 that leaves at most @xmath115 equations in @xmath95 unsatisfied .",
    "the maximal orbit size of the instance @xmath113 is eight and the length of a string in @xmath113 is bounded by six .    combining theorem  [ ssphybridsatz ] with theorem  [ hauptsatzsspi ] , we obtain the following explicit lower bound for the shortest superstring problem .",
    "it is @xmath4-hard to approximate the shortest superstring problem with an approximation factor less than @xmath136 .",
    "before we proceed to the proof of theorem  [ hauptsatzsspi ] , we describe the reduction from a high - level view and try to build some intuition .",
    "given an instance of the hybrid problem @xmath95 , we want to transform @xmath95 into an instance of the shortest superstring problem . fortunately , the special structure of the linear equations in the hybrid problem is particularly well - suited for our reduction , since a part of the equations with two variables form a circle and every variable occurs exactly three times . for every equation @xmath137 included in this circle ,",
    "we introduce a set @xmath138 containing two strings , which can be aligned advantageously in two natural ways .",
    "if those fragments corresponding to two successively following equations @xmath139 and @xmath88 use the same natural alignment , we are able to overlap those fragments by one letter . from a high level view , we can construct an associated superstring for each circle in @xmath95 , which contains the natural aligned strings .",
    "in fact , we define for every equation @xmath140 an associated set of strings @xmath141 and the corresponding natural alignments . the instance @xmath113 of the shortest superstring problem is given by the union of all sets @xmath141 .",
    "due to the construction of the sets @xmath141 , there is a particular way to interpret an alignment of the strings in @xmath141 included in the resulting superstring as an assignment to the variables in the hybrid instance .",
    "the major challenge in the proof of correctness is to prove that every superstring for @xmath113 can be interpreted as an assignment to the variables in the hybrid instance @xmath95 with the property that the number of satisfied equations is connected to the length of the superstring .",
    "given an instance of the hybrid problem @xmath95 , we are going to construct the corresponding instance @xmath142 of the shortest superstring problem .",
    "furthermore , we introduce some notations and conventions .",
    "+   + for every equation @xmath140 , we define a set @xmath141 of corresponding strings .",
    "the corresponding instance @xmath143 of the shortest superstring problem is given by @xmath144 .",
    "the strings in the set @xmath141 differ by the type of considered equation @xmath140 .",
    "let us start with the description of @xmath145 .",
    "therefore , we need to specify the instance of the hybrid problem more precisely .",
    "+ let @xmath83 be an instance of the max - e3-lin problem and @xmath95 its corresponding instance of the hybrid problem with @xmath112 circles .",
    "for every variable @xmath98 , there is an associated circle @xmath91 .",
    "each circle consists of @xmath146 circle equations @xmath147 with @xmath148 $ ] , a circle border equation @xmath149 and @xmath150 matching equations @xmath151 with @xmath152 .",
    "furthermore , we have @xmath74 equations @xmath153 with exactly three variables .",
    "we are going to specify the sets @xmath141 differing by the type of equation @xmath154 .",
    "in particular , we distinguish four types of equations contained in @xmath95 .    1 .",
    "circle equations 2 .   matching equations 3 .",
    "circle border equations 4 .   equations with exactly three variables    let us begin with the description of the strings corresponding to circle border equations",
    ".      given an instance of the hybrid problem @xmath95 , a circle @xmath91 in @xmath95 and its circle border equation @xmath155 , we introduce six associated strings , that are all included in the set @xmath156 . due to the construction of the circle @xmath91 ,",
    "the variable @xmath157 is a contact variable .",
    "this means that @xmath157 appears in an equation @xmath153 with exactly three variables .",
    "the strings in the set @xmath156 differ by the type of equation @xmath153 .",
    "we begin with the case @xmath158 .",
    "+   + the string @xmath159 is used as the initial part of the superstring corresponding to this circle , whereas @xmath160 is used as the end part .",
    "furthermore , we introduce strings that represent an assignment that sets either the variable @xmath161 to @xmath162 or the variable @xmath157 to @xmath163 .",
    "the corresponding two strings are @xmath164 finally , we define the last two strings of the set @xmath156 @xmath165 having a similar interpretation . both pairs of strings can be overlapped by two letters .",
    "those natural alignments have a crucial influence during the process of constructing a superstring .",
    "for this reason , we introduce a notation for this alignments . by the _ @xmath162-alignment _ of the strings in @xmath156",
    ", we refer to the following alignment of the four strings . in the following",
    ", @xmath166 will denote the overlapping of the strings .",
    "+   +   + on the other hand , we the define the _ @xmath163-alignment _ of the strings in @xmath156 as follows .",
    "+   +   + both ways to join the four strings are called _ simple _ alignments .",
    "+   + after having described how the strings corresponding to @xmath156 in case of @xmath158 are defined , we are going to deal with the case @xmath167 . + as before , we use @xmath159 as the initial part of the superstring corresponding to this circle , whereas @xmath160 is used as the end part .",
    "furthermore , we define the remaining four strings contained in @xmath156 by the following .",
    "+   +   + both pairs of strings can be overlapped by two letters .",
    "we introduce a notation for this alignments .",
    "+   +   + the former introduced alignment is called the _",
    "@xmath162-alignment _ of the strings in @xmath156 . on the other hand",
    ", we the define the _",
    "@xmath163-alignment _ of the strings in @xmath156 as follows .",
    "+   +   + in the remainder , we refer to both ways to overlap the four strings as _ simple _ alignments .",
    "next , we describe the strings corresponding to matching equations .",
    "let @xmath91 be a circle in @xmath95 and @xmath92 its associated perfect matching .",
    "let @xmath168 be an edge in @xmath92 and @xmath169 the associated matching equation .",
    "we now define the corresponding set @xmath170 consisting of two strings assuming @xmath171 .",
    "then , we introduce two strings of the form @xmath172 corresponding to the matching equation .",
    "there are two ways to align those two strings to obtain an overlap of two letters . in the remainder",
    ", we refer to those alignments as _",
    "simple_. +   +   + the first way to overlap the strings is called the _",
    "@xmath162-alignment _ , whereas the second one is called the _ @xmath163-alignment_. next , we describe the strings corresponding to circle equations .",
    "let @xmath91 be a circle in @xmath95 and @xmath92 its associated matching .",
    "furthermore , let @xmath173 and @xmath174 be both contained in @xmath92 .",
    "we assume that @xmath171 .",
    "then , we introduce the corresponding strings for @xmath175 .",
    "if @xmath176 , we have @xmath177 otherwise @xmath178 , we have @xmath179 in case of @xmath180 and @xmath181 , we use @xmath182 finally , if @xmath180 and @xmath176 , we introduce @xmath183 let @xmath184 be a variable in @xmath95 contained in an equation @xmath153 with three variables .",
    "we now define the corresponding strings for the equations @xmath185 and @xmath186 .",
    "we assume that @xmath187 and @xmath174 are both included in @xmath92 .",
    "furthermore , we assume @xmath188 and @xmath176 .",
    "if the equation @xmath153 is of the form @xmath189 , we introduce @xmath190 for @xmath185 .",
    "furthermore , for @xmath186 , we use the strings @xmath191 on the other hand , if the equation @xmath153 is of the form @xmath192 , we introduce @xmath193 corresponding to the equation @xmath185 . for @xmath186",
    ", we use the strings @xmath194 accordingly , we introduce the notation of simple alignments for the strings in @xmath195 . for the strings",
    "@xmath196 we define the following alignments as simple . @xmath197 the the former alignment is called the @xmath163-alignment and the latter one is called the @xmath162-alignment .",
    "next , we describe the strings corresponding to equations with three variables .",
    "we now concentrate on equations with exactly three variables .",
    "let @xmath153 be an equation with three variables in @xmath95 .",
    "for every equation @xmath153 , we define two corresponding sets @xmath198 and @xmath199 both containing exactly three strings .",
    "finally , the set @xmath200 is defined by the union @xmath201 .",
    "we distinguish whether @xmath153 is of the form @xmath202 or @xmath203 .",
    "the description starts with the former case .",
    "+   + an equation of the form @xmath204 is represented by @xmath198 containing the strings @xmath205 and by @xmath199 containing the strings @xmath206 on the other hand , for equations of the form @xmath207 , we introduce @xmath198 containing the following strings .",
    "@xmath208 furthermore , we give the definition of @xmath199 including the following strings .",
    "@xmath209 the strings in the set @xmath198 can be aligned in a cyclic fashion in order to obtain different strings which we will use in our reduction .",
    "every specific alignment possesses its own abbreviation given below .",
    "+   +   + analogously , the strings in @xmath199 can also be aligned in a cyclic fashion .",
    "we are going to define the abbreviations for these alignments .",
    "+   +   + the strings in @xmath199 and @xmath198 can be overlapped in a special way that corresponds to assigning the value @xmath162 to @xmath82 . +   + in the remainder",
    ", we call this alignment the @xmath210-alignment of @xmath200 and use the abbreviation @xmath211 for this string .      given an assignment @xmath114 to the variables of @xmath95",
    ", we are going to construct the associated superstring @xmath116 for the instance @xmath145 .",
    "+   + for every @xmath140 , we formulate rules for aligning the corresponding strings in @xmath141 according to the assignment @xmath114 .",
    "we start with sets corresponding to circle border equations and circle equations .",
    "afterwards , we show how the actual fragments can be overlapped with strings from the sets corresponding to matching equations and equations with three variables .",
    "furthermore , we analyze the relation between the assignment @xmath114 and the length of the obtained superstring @xmath116 .",
    "we begin with the description of the alignment of strings corresponding to circle border equations in @xmath95 .",
    "let @xmath91 be a circle in @xmath95 and @xmath212 its circle border equation .",
    "furthermore , we assume that @xmath157 is contained in a equation with three variables of the form @xmath213 .",
    "first , we set the string @xmath159 as the initial part of our superstring corresponding to the circle @xmath91 .",
    "then , we use the @xmath214-alignment of the strings @xmath215 in this condition , one of the strings @xmath216 can be overlapped from the left side with @xmath159 by one letter .",
    "the other string @xmath217 will be joined from the right side with @xmath160 by one letter .",
    "this construction will help us to check whether @xmath114 assigns the same value to the variable @xmath157 as to @xmath161 .",
    "the string @xmath217 can be interpreted as the @xmath214-alignment of the strings corresponding to @xmath218 , since the first letter of @xmath217 is either @xmath219 or @xmath220 .",
    "+   + the parts corresponding to a circle border equation with @xmath221 can be constructed analogously .",
    "next , we are going to align strings corresponding to circle equations .",
    "let @xmath88 be a circle equation contained in @xmath95 .",
    "furthermore , let the corresponding strings are given by @xmath222 in dependence of the given assignment @xmath114 , we use simple alignments to overlap the considered strings .",
    "more precisely , we make use of the @xmath223-alignment . for every pair of associated strings , we derive an overlap of two letters .",
    "we are going to align those fragments with strings corresponding to matching equations and equations with three variables .",
    "let @xmath224 be a matching equation in @xmath95 .",
    "let us assume that @xmath171 .",
    "we define the alignment of the strings in @xmath170 according to the value of @xmath225 .",
    "more precisely , we use the @xmath225-alignment of the strings @xmath226 due to this alignment , we obtain an overlap of two letters .",
    "we are going to analyze the length of the resulting superstring in dependence of the assignment @xmath114 to the variables @xmath227 , @xmath228 , @xmath229 and @xmath230 .",
    "we start with the case @xmath231 .",
    "+   + * case @xmath231 : * + we use the @xmath163-alignment of the strings @xmath232 and @xmath233 . the situation is depicted below .",
    "( the two triangle notation @xmath234 and @xmath235 will be explained hereafter . ) +   +   + the actual superstring @xmath62 is denoted by the following sequence . @xmath236",
    "the part @xmath237 represents a simple alignment of the strings corresponding to @xmath238 ending with the letter @xmath239 , which means @xmath240 the letter in the box emphasizes the letter which can be used to overlap from the right side with other strings . furthermore , the string @xmath241 denotes @xmath242 .",
    "analogously , @xmath243 is a simple alignment of the strings corresponding to @xmath244 , where @xmath245 .",
    "furthermore , we use @xmath246 to denote @xmath247 . finally , @xmath248 , @xmath249 and @xmath100 are sequences of letters , which we do not specify in detail .",
    "they define the remaining parts of the superstring @xmath62 .",
    "+ if @xmath250 holds , we align @xmath237 with @xmath251 to achieve an additional overlap of one letter .",
    "an analogue situation holds for @xmath252 and @xmath246 .",
    "all in all , we obtain an overlap of three letters if @xmath253 and @xmath254 holds .",
    "otherwise , we lose an overlap of one letter per unsatisfied equation .",
    "+   + * case @xmath255 : * + we use the @xmath162-alignment of the strings @xmath232 and @xmath233 .",
    "+   +   + in this case , we use @xmath256 as an abbreviation for @xmath257 and @xmath258 for @xmath259 . if @xmath260 holds , we align @xmath237 with @xmath256 and gain an additional overlap of one letter .",
    "an analogue situation holds for @xmath252 and @xmath261 .",
    "hence , we obtain an overlap of three letters if @xmath262 and @xmath263 holds .",
    "if the corresponding equation with two variables is not satisfied , we lose an overlap of one letter .",
    "+   + * case @xmath264 : * + in this case , we use the @xmath162-alignment of the strings @xmath232 and @xmath233 .",
    "+   +   + we attach @xmath265 at the end of our actual solution @xmath116 without having any overlap with the so far obtained superstring .",
    "notice that we obtain in each case an additional overlap of one letter if the corresponding equation with two variables is satisfied , i.e. @xmath260 and @xmath266 .",
    "+   + * case @xmath267 : * + according to @xmath114 , we use the @xmath163-alignment of the strings @xmath232 and @xmath233 .",
    "+   +   + we join @xmath268 from the right side with @xmath269 and obtain an overlap of one letter .",
    "this reduces the length of the superstring by one letter independent of the assignment @xmath270 . in case of @xmath250",
    ", we achieve another overlap of one letter , since we are able to align @xmath271 from the right side with @xmath268 .",
    "it corresponds to the satisfied equation @xmath88 .",
    "hence , we obtain at least the same number of overlapped letters as satisfied equations . +   + in summary",
    ", we note that we are able to achieve an overlap of at least one letter in each case if the corresponding equation is satisfied by @xmath114 .",
    "hence , we obtain an overlap of at most three letters .",
    "+   + the other cases concerning equations @xmath108 with @xmath180 can be analyzed analogously .",
    "next , we are going to align strings corresponding to equations with three variables .",
    "let @xmath272 be an equation with three variables @xmath82 , @xmath273 and @xmath274 .",
    "furthermore , let @xmath275 , @xmath276 , @xmath277 , @xmath278 , @xmath279 and @xmath280 be the equations with two variables , in which the variables @xmath82 , @xmath273 and @xmath274 occur . given the assignment @xmath114 to @xmath82 , @xmath273 and @xmath274",
    ", we are going to define the alignment of the corresponding strings .",
    "let us start with equations of the form @xmath281 .",
    "then , we define the rule for aligning strings in @xmath198 and @xmath199 as follows , whereby we handle the cases @xmath282 separately starting with @xmath283 .",
    "+   + * case @xmath283 : * + in this case , we align the strings in @xmath200 in such a way that we obtain the former introduced strings @xmath284 and @xmath285 .",
    "the situation , which we want to analyze , is depicted below .",
    "+   +   + similarly to the situations that we discussed concerning matching equations , we define the actual superstring @xmath62 in the way described below .",
    "@xmath286 here , @xmath248 , @xmath287 , @xmath73 and @xmath100 denote parts of @xmath62 , which we do not specify in detail to emphasize the parts corresponding to the equation with three variables .",
    "+ the string @xmath288 denotes the @xmath223-alignment of the corresponding strings in @xmath195 .",
    "the strings @xmath289 and @xmath290 are defined analogously . in this situation ,",
    "we want to analyze the cases @xmath291 , @xmath292 and @xmath293 .",
    "we infer that we obtain an overlap of four letters if all equations with two variables are satisfied .",
    "otherwise , we lose an overlap of one letter per unsatisfied equation with two variables .",
    "+   + * case @xmath294 : * + let @xmath295 be variables such that @xmath296 holds .",
    "then , we use the @xmath297-alignment and @xmath298-alignment of the strings in @xmath198 and @xmath199 breaking ties arbitrary .",
    "we display exemplary the situation for @xmath299 .",
    "+   +   + in this case , we achieve an overlap of five letters if all equations with two variables are satisfied .",
    "otherwise , we lose an overlap of one letter per unsatisfied equation with two variables .",
    "+   + * case @xmath300 : * + if @xmath301 holds , we align the strings in @xmath199 and @xmath198 to obtain @xmath302 and @xmath303 . otherwise , we make use of the strings @xmath304 and @xmath305 .",
    "we display the situation for @xmath306 .",
    "+   +   + notice that we obtain an overlap of four letters if the equations with two variables are satisfied , i.e. @xmath307 , @xmath308 and @xmath309 .",
    "otherwise , we lose an overlap of one letter per unsatisfied equation with two variables .",
    "+   + * case @xmath310 : * + in this case , we use the @xmath210-alignment of the strings in @xmath200 .",
    "the situation is displayed below .",
    "+   +   + here , we are able to achieve an overlap of five letters if all equations with two variables are satisfied , i.e. @xmath307 , @xmath308 and @xmath311 . +   + in summary",
    ", we state that we can achieve an overlap of at least one letter independent of the assignment @xmath114 .",
    "additionally , we gain another overlap of one letter if the corresponding equation is satisfied by @xmath114 .",
    "+   + the situation for equations of the form @xmath312 can be analyzed analogously .",
    "we are going to define the assignment @xmath120 , which is associated to a given superstring for @xmath113 .      given a superstring @xmath62 for @xmath113",
    ", we are going to define the associated assignment @xmath120 to the variables of @xmath95 . in order to deduce the values assigned to the variables in @xmath95 from @xmath62 , we have to normalize the given superstring @xmath62 .",
    "for this reason , we define rules that transform a superstring for @xmath113 into a normed superstring for @xmath113 without increasing the length .",
    "+   + first , we introduce the definition of a normed superstring for @xmath113 .",
    "let @xmath95 be an instance of the hybrid problem , @xmath113 the corresponding instance of the shortest superstring problem and @xmath62 a superstring for @xmath113 .",
    "we refer to @xmath62 as a normed superstring for @xmath113 if for every @xmath140 , the superstring @xmath62 contains @xmath313 as a proper substring , whereby @xmath313 is resulted due to a simple alignment of the strings included in @xmath141 .",
    "after having defined a normed superstring , we are going to state rules which transform a superstring for @xmath113 into a normed superstring for @xmath113 without increasing the length of the underlying superstring .",
    "all transformation can be performed in polynomial time . once accomplished to generate a normed superstring , we are able to define the assignment @xmath120 and analyze the number of overlapped letters in dependence of the number of satisfied equations in @xmath95 by @xmath120 .",
    "let us start with transformations of strings corresponding to circle equations and circle border equations .",
    "let @xmath88 be a circle equation in @xmath95 .",
    "furthermore , let @xmath314 and @xmath315 be its corresponding strings .",
    "we observe that these strings can have an overlap of at most one letter from the left side as well as from the right side with other strings in @xmath113 . given a superstring @xmath62 for @xmath113",
    ", we obtain at least the same number of overlapped letters if we use one of the simple alignments in @xmath62 .",
    "in particular , we have to use the simple alignment that maximizes the number of overlapped letters .",
    "+   + given a superstring @xmath62 for @xmath113 , we separate the strings @xmath314 and @xmath315 from @xmath62 .",
    "consequently , this results in at most three strings @xmath316 , @xmath317 and @xmath318 such that @xmath319 then , we define the transformed superstring @xmath320 with at least the same number of overlapped letters by @xmath321 in order to define the simple alignment , which is used in @xmath62 by the strings in @xmath195 , we are going to state a criterion .",
    "+   + let @xmath62 be a superstring for @xmath113 and @xmath147 a circle equation .",
    "let the corresponding strings are given by @xmath314 and @xmath315 .",
    "then , we say that the strings in @xmath195 use a @xmath163-alignment in @xmath62 if there are more strings @xmath322 in @xmath323 such that either @xmath322 is overlapped by one letter from the right side with @xmath324 or @xmath322 is overlapped by one letter from the left side with @xmath314 in @xmath62 than strings @xmath325 in @xmath323 such that either @xmath325 is overlapped by one letter from the left side with @xmath324 or @xmath325 is overlapped by one letter from the right side with @xmath314 in @xmath62 .",
    "otherwise , the strings in @xmath195 use a @xmath162-alignment in @xmath62 .",
    "+   + given a superstring @xmath62 for @xmath113 , we define informally a part of the backbone of our transformed superstring by the strings @xmath313 , where @xmath313 is resulted due to a simple alignment used in @xmath62 of the strings @xmath141 for every circle equation @xmath140 .",
    "afterwards , we use this construction to align them with strings corresponding to matching equations , equations with three variables and circle border equations .",
    "moreover , it will help us to define the assignment @xmath120 and relate the number of satisfied equations to the number of overlapped letters . but",
    "first , we concentrate on circle border equations .",
    "+   + let @xmath212 be a circle border equation . furthermore , let the corresponding strings are given by @xmath326 since the simple alignments of the strings in @xmath156 achieve an overlap of two letters for each pair @xmath327 and",
    "@xmath328 , we argue as before that these strings can be rearranged in a given superstring for @xmath113 such that the pairs use a simple alignment without increasing the length of the underlying superstring for @xmath113 .",
    "in this situation , we are able to overlap one of the pairs using a simple alignment with @xmath159 from the left side and the other one with @xmath329 from the right side without increasing the length . this construction checks whether the variables @xmath161 and @xmath157 have the same assigned value , which is rewarded by another overlap of one letter of the corresponding strings using a simple alignment . +   + for any fixed order of the circles @xmath91 in @xmath95 , we build the backbone of our superstring consisting of the concatenation of the strings @xmath330 , where the string @xmath331 is associated to its circle @xmath91 . furthermore , @xmath331",
    "consists of the corresponding simple alignments of the strings in @xmath332 used in @xmath62 and the order of the strings is given by the order of the variables in @xmath91 .",
    "the string @xmath331 starts with the letter @xmath333 and ends with @xmath334 .",
    "+   + notice that similar transformations can be applied to strings corresponding to matching equations and to equations with three variables , but we are going to define the transformation for those strings in detail while analyzing the upper bound of overlapped letters for simple aligned strings corresponding to circle equations , which are contained in a given superstring @xmath62 for @xmath113 .",
    "+   + before we start our analysis , we define the assignment @xmath335 based on the actual superstring @xmath62 for @xmath113 , which is not necessarily a normed superstring for @xmath113 . by applying the transformations , which we are going to define ,",
    "the assignment @xmath120 will change in dependence to the actual considered superstring .",
    "@xmath336 due to the transformations for the strings corresponding to circle and circle border equations , the assignment @xmath120 is well - defined .",
    "let @xmath98 , @xmath91 be the corresponding circle in @xmath95 and @xmath92 its associated perfect matching .",
    "furthermore , let @xmath337 , @xmath338 , @xmath339 , @xmath340 and @xmath341 be equations in @xmath95 , where @xmath104 and @xmath171 holds .",
    "let @xmath62 be a superstring for @xmath113 such that the strings corresponding to circle and circle border equations are using a simple alignment in @xmath62 .",
    "based on the simple alignments of the strings corresponding to @xmath342 , @xmath147 , @xmath343 and @xmath344 , which are used in the superstring @xmath62 , we are going to define the assignment to the variables @xmath184 and @xmath345 .",
    "furthermore , we analyze the number of overlapped letters that can be achieved given the simple aligned strings and relate them to the number of satisfied equations in @xmath95 by @xmath120 .",
    "+   + in the remainder , we will assume that the underlying superstring for @xmath113 contains simple aligned strings corresponding to circle and circle border equations .",
    "before we start our analysis , we introduce the notation of a constellation that denotes which of the simple alignments are used by the strings corresponding to the equations @xmath346 , @xmath147 , @xmath347 and @xmath344 in @xmath62 .",
    "+   + given a superstring @xmath62 for @xmath118 and @xmath104 , a _ constellation _",
    "@xmath348 is defined by @xmath349 with @xmath350 , where @xmath351 if and only if the strings in @xmath352 use the @xmath163-alignment in @xmath62 for @xmath353 .",
    "we call a constellation @xmath348 inconsistent if there is an entry @xmath354 with @xmath355 .",
    "otherwise , @xmath348 is called consistent .",
    "+   + based on the given constellations , we are going to define @xmath120 .",
    "let @xmath95 be an instance of the hybrid problem , @xmath113 its corresponding instance of the superstring problem and @xmath62 a superstring for @xmath113 .",
    "given the constellation @xmath356 , we define @xmath120 in the following way .    1 .",
    "@xmath357 and @xmath358 if @xmath359 and @xmath348 is consistent 2 .",
    "@xmath357 and @xmath358 if @xmath360 3 .",
    "@xmath361 and @xmath358 if @xmath359 and @xmath362 4 .",
    "@xmath357 and @xmath363 if @xmath359 , @xmath364 and @xmath365    we are going to analyze the the different constellations and discuss the cases @xmath105-@xmath109 of the definition of @xmath120 .",
    "we start with case @xmath105 .",
    "+   + * case @xmath105  @xmath359 and @xmath348 is consistent : * + there are two constellations , which we have to analyze , namely @xmath366 and @xmath367 .",
    "starting with the former constellation , we obtain the scenario depicted below .",
    "the string @xmath237 with @xmath368 represents a simple alignment of the strings in @xmath369 .",
    "analogously , the string @xmath370 represents a simple alignment of the strings in @xmath195 . since we know that using the most profitable simple alignment of the strings in @xmath170 does not increase the length of the superstring , we make use of the @xmath163-alignment and transform the superstring @xmath62 in the superstring @xmath320 , which are both depicted below .",
    "+   +   + let us derive an upper bound on the number of overlapped letters . more precisely , we are interested in the number of overlapped letters being additional to the overlap of two letters due to the simple alignment . in both cases ,",
    "either by using the @xmath163-alignment or the @xmath162-alignment of the strings in @xmath170 , we can not obtain more than an overlap of two letters .",
    "it corresponds to the number of satisfied equations , which are @xmath88 and @xmath371 .",
    "+   + in case of the constellation @xmath367 , we separate the strings @xmath232 and @xmath233 from the superstring @xmath62 .",
    "then , we attach the aligned string @xmath372 at the end of the actual solution . the considered situation is depicted below .",
    "+   +   + in this scenario , the best that we are able to obtain is an overlap of two letters .",
    "this corresponds to the number of satisfied equations , namely @xmath88 and @xmath371 .",
    "+   + * case @xmath80   @xmath373 :* + let us start with the constellation @xmath374",
    ". in this case , we set @xmath375 and @xmath376 . given the strings @xmath377 , @xmath378 , @xmath379 and @xmath380 with @xmath381 and @xmath382 , we obtain the following scenario : +   +   + the most advantageous simple alignment in this case is the @xmath162-alignment of the strings in @xmath170 .",
    "if @xmath383 holds , which means @xmath384 , we obtain another overlap of one letter by aligning @xmath385 with @xmath386 .",
    "a similar argument holds for @xmath387 .",
    "notice that the equation @xmath388 is satisfied by @xmath120 . in summary",
    ", we state that we obtain an overlap of one additional letter per satisfied equation .",
    "hence , we obtain an overlap of three letters according to the satisfied equations @xmath389 , @xmath388 and @xmath390 .",
    "+   + consider the constellation @xmath391 .",
    "hence , we are given the strings @xmath392 , @xmath378 , @xmath393 and @xmath380 with @xmath381 and @xmath382 .",
    "we obtain the scenario displayed below .",
    "+   +   + in this case , we use the @xmath163-alignment of the strings in @xmath170 . if @xmath394 holds , which means @xmath395",
    ", we obtain another overlap of one letter by aligning @xmath396 in case of @xmath397 , we may apply a similar argument .",
    "notice that the equation @xmath388 is satisfied by @xmath120 . in summary",
    ", we state that we obtain an overlap of one additional letter per satisfied equation .",
    "hence , we obtain an overlap of three letters according to the satisfied equations @xmath389 , @xmath388 and @xmath390 .",
    "+   + * case @xmath107   @xmath359 and @xmath362 : * + let us begin with the constellation @xmath398 .",
    "we consider the scenario depicted below , in which we are given the strings @xmath392 , @xmath386 , @xmath399 and @xmath380 with @xmath400 .",
    "+   +   + instead of using the @xmath163-alignment of the strings in @xmath332 , we rather switch to the @xmath162-alignment , i.e. we obtain the string @xmath401 and define @xmath402 .",
    "it results directly in gaining two additional satisfied equations and an overlap of one additional letter . as a matter of fact",
    ", we might lose an overlap of one letter , because the string @xmath403 might have been aligned from the right side with another string .",
    "furthermore , the equation @xmath139 might be unsatisfied . but all in all , we obtain at least @xmath404 additional satisfied equations by switching the value without increasing the superstring .",
    "notice that we may achieve an additional overlap of one letter if @xmath405 holds , which means that @xmath120 satisfies the equation @xmath371 .",
    "+   + the next constellation , we are going to analyze , is @xmath406 .",
    "hence , we are given the strings @xmath377 , @xmath407 , @xmath393 and @xmath380 , with @xmath400 .",
    "the situation is displayed below .",
    "+   +   + we obtain a similar situation , in which we switch @xmath377 to @xmath408 .",
    "accordingly , we define @xmath409 .",
    "we obtain at least one additional satisfied equation by switching the value without increasing the length of the superstring .",
    "notice that we may achieve an additional overlap of one letter if @xmath410 holds .",
    "it corresponds to the satisfied equation @xmath371 . +   + * case @xmath109   @xmath359 , @xmath364 and @xmath365 : * + starting our analysis with the constellation @xmath411 , we obtain the following scenario .",
    "+   +   + in this case , we argue that we switch the string @xmath412 to @xmath413 .",
    "this means that we set @xmath376 .",
    "this transformation yields an overlap of at least the same number of letters , since we might lose an overlap of one letter from the left side . on the other hand",
    ", we align the string @xmath414 from the right side by one letter .",
    "notice that we gain at least one additional satisfied equation .",
    "+   + the last constellation , we are going to analyze , is @xmath415 .",
    "the corresponding situation is depicted below .",
    "+   +   + in this case , we switch the string @xmath413 to @xmath412 . similarly to the former case , this transformation does not increase the length of the superstring . by defining @xmath416",
    ", we achieve at least one more satisfied equation . +   + in summary",
    ", we note that we achieve at least the same number of satisfied equations as the number of overlapped letters . by applying the defined transformations",
    ", the actual superstring contains only strings corresponding to matching equations using a simple alignment .",
    "matching equations @xmath108 with @xmath180 can be analyzed analogously .",
    "+   + we are going to define the assignment for contact variables .",
    "let @xmath417 be an equation with exactly three variables in @xmath95 .",
    "given a simple alignment of the strings corresponding to the equations @xmath418 , @xmath419 , @xmath420 , @xmath421 , @xmath422 , and @xmath423 , we are going to define an assignment based on the underlying simple alignments and analyze the number of satisfied equations in dependence of the number of overlapped letters in the superstring .",
    "+   + for a given superstring @xmath62 for @xmath113 and equation @xmath424 , we define a _ constellation _ @xmath348 given by @xmath425 with @xmath426 , where @xmath427 with @xmath428 if and only if the strings in the corresponding set are using a @xmath163-alignment in @xmath62 .",
    "a constellation denotes which of the simple alignments is used by the strings in @xmath62 .",
    "we call a constellation inconsistent if there is an entry @xmath354 such that @xmath355 .",
    "otherwise , @xmath348 is called consistent .",
    "+   + based on a constellation for a given superstring and an equation @xmath153 with three variables , we are going to define the assignment @xmath120 for the variables in @xmath153 .",
    "let @xmath95 be an instance of the hybrid problem , @xmath113 its corresponding instance of the superstring problem , @xmath62 a superstring for @xmath113 and @xmath424 an equation with three variables in @xmath95 .",
    "for the associated constellation @xmath429 , we define @xmath120 in the following way .    1 .",
    "if @xmath348 is consistent , then , we define @xmath430 , @xmath431 and @xmath432 2 .   otherwise , let @xmath354 be an entry in @xmath348 with @xmath355 and @xmath433 its corresponding variable .",
    "furthermore , let @xmath434 and @xmath435 be variables associated with the entry @xmath436 and @xmath437 , respectively .",
    "if @xmath438 holds , we define @xmath439 , @xmath440 and @xmath441 .",
    "3 .   otherwise , we have @xmath442 . then , we define @xmath443 , @xmath440 and @xmath441 .    we are going to analyze the following three cases and",
    "define the transformations for the actual superstring for @xmath113 .    1 .",
    "@xmath444 and @xmath348 is consistent 2 .",
    "@xmath445 and @xmath348 is inconsistent 3 .",
    "@xmath444 and @xmath348 is inconsistent    let us begin with case @xmath105 .",
    "+   + * case @xmath105  @xmath444 and @xmath348 is consistent : * + in this case , we start with the constellation @xmath446 .",
    "we depict the considered situation below .",
    "+   +   + according to the definition of @xmath120 , we have @xmath447 .",
    "notice that the equation @xmath203 is unsatisfied . on the other hand ,",
    "the assignment @xmath120 satisfies the equations @xmath448 , @xmath449 and @xmath450 .",
    "+ we note that a string corresponding to @xmath198 or @xmath199 using a simple alignment can have an overlap of at most one letter from the right side as well as from the left side .",
    "therefore , the best we can hope for is to overlap the string @xmath451 with @xmath452 and @xmath453 by one letter in each case .",
    "the same holds for the string @xmath454 .",
    "consequently , we conclude that the number of overlapped letters is bounded from above by four . +   + in case of @xmath455 , we analyze exemplary the constellation @xmath456 .",
    "we set @xmath457 , @xmath458 and @xmath459 .",
    "this situation is displayed below .",
    "+   +   + due to the @xmath460-alignment of the strings in @xmath199 , we obtain an overlap of two letters .",
    "additionally , we align the string @xmath461 from the left with @xmath462 .",
    "the same holds for @xmath463 and @xmath464 .",
    "notice that it is not more advantageous to align the string @xmath465 with @xmath461 , since we lose the overlap of one letter with @xmath466 .",
    "hence , we are able to get an overlap of at most four letters , which corresponds to the satisfied equations @xmath448 , @xmath449 and @xmath450 .",
    "+   + * case @xmath445 and @xmath348 is inconsistent : * + first , we concentrate on the constellations with the property @xmath467 .",
    "exemplary , we analyze the constellation @xmath468 depicted below . +   +   + the strings @xmath469 and @xmath470 can be used to align from the right side with @xmath471 and @xmath451 , respectively .",
    "it yields an overlap of two letters .",
    "if the corresponding equations with two variables are satisfied , which means @xmath472 , @xmath473 and @xmath474 , we gain an overlap of one letter per satisfied equation .",
    "notice that using the @xmath475-alignment of @xmath200 does not yield more overlapped letters . in summary",
    ", it is possible to attain an overlap of at most five letters , which corresponds to the constellation @xmath476 .",
    "an analogue argumentation holds for the constellations @xmath477 and @xmath478 .",
    "+   + next , we discuss constellations with the property @xmath479 . for this reason , we consider the constellation @xmath480 .",
    "+   +   + recall that @xmath481 denotes the @xmath210-alignment of @xmath200 .",
    "this string can be aligned from the left with @xmath482 .",
    "if @xmath472 holds , we achieve another overlap of one letter .",
    "furthermore , the string @xmath483 can be aligned from the right with @xmath484 if and only if @xmath485 holds .",
    "a similar argumentation can be applied to the strings @xmath486 and @xmath487 .",
    "finally , we note that we can not benefit by aligning the string @xmath488 with @xmath489 .",
    "consequently , we see that using the string @xmath490 is generally more profitable .",
    "all in all , we gain an additional overlap of one letter for satisfying @xmath203 and another overlap of one letter if the equation with two variables corresponding to the considered variable is satisfied .",
    "+   + * case @xmath444 and @xmath348 is inconsistent : * + let us start with constellations satisfying @xmath491 .",
    "exemplary , we analyze the constellation @xmath492 . due to the definition of @xmath120 , we set @xmath493 , @xmath494 and @xmath457 .",
    "notice that @xmath120 satisfies the equation @xmath495 . by switching the value @xmath496 from @xmath497 to @xmath498 , the equation",
    "@xmath499 might become unsatisfied .",
    "furthermore , we might lose an overlap of one letter by flipping the @xmath163-alignment of the strings corresponding to @xmath500 to the @xmath162-alignment .",
    "on the other hand , we gain an overlap of one letter by aligning the string @xmath501 from the right side with @xmath502 .",
    "this transformation yields at least one more satisfied equation .",
    "in addition , the strings @xmath503 and @xmath471 can be aligned by one letter with @xmath504 and @xmath505 , respectively .",
    "if @xmath474 and @xmath473 holds , we achieve another overlap of one letter in each case .",
    "the situation is depicted below .",
    "+   +   + the other constellations satisfying @xmath491 can be analyzed analogously . +   + the remaining constellations @xmath425 to be discussed satisfy @xmath506 and are inconsistent .",
    "exemplary , we analyze the constellation @xmath507 . for @xmath507 ,",
    "we set @xmath493 , @xmath431 and @xmath432 . the scenario is depicted below .",
    "+   +   + by flipping the @xmath162-alignment of the strings corresponding to @xmath500 to the @xmath163-alignment , we can overlap @xmath508 from the left side with @xmath509 and with @xmath510 from the right side .",
    "this transformation achieves an overlap of at most one more letter .",
    "moreover , we obtain at least one more satisfied equation .",
    "if @xmath474 and @xmath485 holds , it yields an overlap of three additional letters , which corresponds to the constellation @xmath511 . +   + in summary",
    ", we note that it is possible to achieve an overlap of at least one letter in each case .",
    "in addition to it , the assignment @xmath120 yields at least the same number of satisfied equations as the number of overlapped letters .",
    "this means that if @xmath120 satisfies the equations @xmath153 , @xmath512 , @xmath513 and @xmath514 , the corresponding strings in @xmath62 can have an overlap of at most five letters .",
    "given an instance @xmath95 of the hybrid problem with @xmath112 circles , @xmath73 equations with two variables and @xmath74 equations with exactly three variables with the properties described in theorem  [ ssphybridsatz ] , we construct in polynomial time an instance @xmath113 of the shortest superstring problem with the properties described in section  [ sspconstr ] .",
    "let @xmath114 be an assignment to the variables of @xmath95 which leaves at most @xmath115 equations unsatisfied . according to section  [ sspgivenphi ] ,",
    "the length of the superstring @xmath116 is at most @xmath515 since the length of the superstring increases by at most one letter for every unsatisfied equation of the assignment . regarding the compression measure , we obtain the following .",
    "@xmath516 on the other hand , given an superstring @xmath62 for @xmath118 with length @xmath517 we can construct in polynomial time an normed superstring @xmath320 without increasing the length of it by applying the transformations defined in section  [ sspassignment ] .",
    "this enables us to define an assignment @xmath120 to the variables of @xmath95 according section  [ sspassignment ] that leaves at most @xmath115 equations in @xmath95 unsatisfied .",
    "a similar argumentation leads to the conclusion that given a superstring @xmath62 for @xmath118 with compression @xmath518 we construct in polynomial time an assignment to the variables in @xmath95 such that at most @xmath115 equations are unsatisfied .",
    "+   + next , we are going to describe smaller gadgets for equations with three variables implying an improved explicit lower bound and give the proof of theorem  [ hauptsatzssp ] .",
    "given an equation with three variables @xmath519 , we introduce the sets @xmath520 and @xmath521 including the following strings .",
    "@xmath522 @xmath523 in addition , we introduce new strings for the equation @xmath524 . on the other hand ,",
    "the strings corresponding to @xmath525 , @xmath526 , @xmath527 , @xmath528 and @xmath529 remain the same .",
    "let us define the strings for @xmath524 : @xmath530 these three strings can be aligned each by two letters in a cyclic fashion .",
    "accordingly , we obtain three combinations that can be used to overlap with other strings by one letter from the left side as well as from the right side .",
    "note that we have only two combinations if we consider only the left most position of the combined strings .",
    "for example , the combination @xmath531 can be used to overlap from the right side with strings in @xmath521 , whereas @xmath532 can be aligned with strings contained in @xmath520 .",
    "therefore , we may apply the same arguments as in the proof of theorem  [ hauptsatzssp ] .",
    "the strings corresponding to equations of the form @xmath533 can be constructed analogously .",
    "+   + given an instance @xmath95 of the hybrid problem with @xmath112 circles , @xmath73 equations with two variables and @xmath74 equations with exactly three variables with the properties described in theorem  [ ssphybridsatz ] , we construct in polynomial time an instance @xmath113 of the shortest superstring problem .",
    "let @xmath114 be an assignment to the variables of @xmath95 which leaves at most @xmath115 equations unsatisfied .",
    "then , it is possible to construct a superstring @xmath116 with length @xmath534 since the length of the superstring increases by at most one letter for every unsatisfied equation of the assignment . regarding the compression measure , we obtain the following .",
    "@xmath535 on the other hand , given an superstring @xmath62 for @xmath118 with length @xmath536 we can construct in polynomial time a normed superstring @xmath320 without increasing the length of it .",
    "the corresponding assignment @xmath537 to the variables of @xmath95 leaves at most @xmath115 equations in @xmath95 unsatisfied .",
    "a similar argumentation leads to the conclusion that given a superstring @xmath62 for @xmath118 with compression @xmath538 we construct in polynomial time an assignment to the variables in @xmath95 such that at most @xmath115 equations are unsatisfied .",
    "it seems that a new method is needed now in order to obtain better approximation lower bounds .",
    "perhaps direct pcp constructions are the natural next step for proving stronger approximation hardness results for the problems considered in this paper .",
    "alpha c. armen and c. stein , _ improved length bounds for the shortest superstring problem _ , proc .",
    "5th wads ( 1995 ) , lncs 955 , 1995 , pp .",
    "494505 . c. armen , c. stein , _ a @xmath539 superstring approximation algorithm _",
    ", discrete applied mathematics 88 ( 1998 ) , pp .",
    "2957 .",
    "m. blser , _ an @xmath540 approximation algorithm for the asymmetric max - tsp _ , proc .",
    "13th soda ( 2002 ) , 6473 .",
    "a. blum , t. jiang , m. li , j. tromp , and m. yanakakis , _ linear approximation of shortest superstrings _ , j. acm 41 ( 1994 ) , pp .",
    "d. breslauer , t. jiang , and z. jiang , _ rotations of periodic strings and short superstrings _ , j. algorithms 24 ( 1997 ) , pp .",
    "a. czumaj , l. gasieniec , m. piotrow , and w. rytter , _ parallel and sequential approximations of shortest superstrings _ , proc .",
    "1st swat ( 1994 ) , lncs 824 , 1994 , pp . 95106 .",
    "l. engebretsen , _ an explicit lower bound for tsp with distances one and two _ , algorithmica 35 ( 2003 ) , pp .",
    ". l. engebretsen and m. karpinski , _ tsp with bounded metrics _ , j. comput",
    "72 ( 2006 ) , pp .",
    ". m.  fisher , g.  nemhauser and l.  wolsey , _ an analysis of approximations for finding a maximum weight hamiltonian circuit _ ,",
    "res . 27 ( 1979 ) , pp . 799809 .",
    "v.  timkovskii , _ complexity of common subsequence and supersequence problems and related problems _ ,",
    "cybernetics and systems analysis 25 ( 1990 ) , pp .",
    "565580 ; translated from kibernetika 25 ( 1989 ) , pp . 113 ."
  ],
  "abstract_text": [
    "<S> we study the approximation hardness of the shortest superstring , the maximal compression and the maximum asymmetric traveling salesperson ( max - atsp ) problem . </S>",
    "<S> we introduce a new reduction method that produces strongly restricted instances of the shortest superstring problem , in which the maximal orbit size is eight ( with no character appearing more than eight times ) and all given strings having length at most four . based on this reduction method </S>",
    "<S> , we are able to improve the best up to now known approximation lower bound for the shortest superstring problem and the maximal compression problem by an order of magnitude . </S>",
    "<S> the results imply also an improved approximation lower bound for the max - atsp problem . </S>"
  ]
}
{
  "article_text": [
    "partitioning of a linear system for its parallel solution typically aims at satisfying the two standard objectives : _ minimizing the communication volume _ and _ maintaining the load balance _ among different processors .",
    "both of these requirements are motivated by considerations of the efficiency of the parallel matrix - vector multiplications , which lie in the heart of the iterative solution methods .",
    "once the partitioning is performed , the obtained partitions are further used for constructing parallel preconditioners  another crucial ingredient , contributing into the overall performance of the computational scheme .",
    "however , the quality of the resulting preconditioner may depend significantly on the given partition , which , while targeting the efficiency of the parallel matrix - vector multiplication , ignores the nature of the employed preconditioning strategy .",
    "the latter often leads to preconditioners of a poor quality , especially in the cases , where the coefficient matrices have entries with large variations in magnitudes .    in the current work ,",
    "we suggest to remove the requirement on the communication volume and , instead , consider partitionings , which favor the quality of the resulting preconditioner .",
    "in particular , we focus on the additive schwarz ( as ) preconditioners , see , e.g. ,  @xcite , for symmetric positive definite ( spd ) linear systems , and present a partitioning algorithm , which aims at optimizing the quality of the as procedure by attempting to minimize the condition number of the preconditioned matrix , while maintaining the load balance .    the problem of partitioning of a linear system @xmath0 is commonly formulated in terms of the adjacency graph @xmath1 of the coefficient matrix @xmath2 . here",
    ", @xmath3 is the set of vertices ( nodes ) corresponding to the equations / unknowns of the linear system , and @xmath4 is the set of edges @xmath5 , where @xmath6 iff @xmath7 . throughout",
    ", we assume that @xmath8 is spd , i.e. , @xmath9 , which , in particular , implies that the graph @xmath10 is undirected . the _ standard _ goal is to partition @xmath10 into @xmath11 `` nonoverlapping '' subgraphs @xmath12 , where @xmath13 and @xmath14 , such that @xmath15 imposing the additional constraint that the edge cut between @xmath16 is kept to a minimum , while the cardinalities of the vertex sets @xmath17 are approximately the same , i.e. , @xmath18 .",
    "equations and unknowns with numbers in @xmath17 are then typically mapped to the same processor .",
    "the requirement on the small edge cut between @xmath16 aims at reducing the cost of communications coming from the parallel matrix - vector multiplication .",
    "the condition @xmath18 attempts to ensure the load balancing .",
    "the solution of the above - described graph partitioning problem is np - complete .",
    "however , there exist a variety of heuristics , which have been successfully applied to the problem ; see , e.g. ,  @xcite for an overview .",
    "efficient implementations of relevant algorithms are delivered by a number of graph partitioning software packages , e.g. , chaco  @xcite and metis  @xcite .",
    "we note that alternative approaches for partitioning of linear systems are known , e.g. , based on bipartite graph  @xcite or hypergraph model  @xcite , however , we do not consider them in this paper .",
    "if the preconditioner quality becomes an objective of the partitioning , then along with the adjacency graph @xmath10 , it is reasonable to consider weights @xmath19 assigned to the edges @xmath20 , where @xmath19 are determined by the coefficients of the matrix @xmath8 .",
    "the corresponding algorithm should then be able to take these weights into account and properly use them to perform graph partitioning .",
    "an example of such an algorithm has been discussed in  @xcite .    indeed ,",
    "if one considers partitioning as an `` early phase '' of a preconditioning procedure ( which , in the purely algebraic setting , is based solely on the knowledge of @xmath8 ) , then the use of the coefficients of @xmath8 at the partitioning step , e.g. , through the weights @xmath19 , represents a natural option .",
    "this approach , however , faces a number of issues .",
    "for example , given a preconditioning strategy , how does one assign the weights ?",
    "what are the proper partitioning objectives",
    "? how can the partitioning be performed in practice ?    in this work ,",
    "we address these three question for the case of an spd linear system and a simple domain decomposition ( dd ) type preconditioner ",
    "the _ nonoverlapping _ as . in particular , for a given @xmath8 , the proposed approach is based on the idea of constructing a ( bi)partition , which attempts to minimize an upper bound on the condition number of the preconditioned coefficient matrix over all possible balanced ( bi)partitions .",
    "the resulting algorithm relies on the computation of eigenvectors corresponding to the smallest eigenvalues of generalized eigenvalue problems , which simultaneously involve the weighted and standard graph laplacians .",
    "although the formal discussion is focused on the case of the _ nonoverlapping _ as , we show numerically that , in practice , adding several `` layers '' of neighboring nodes to the obtained sets @xmath17 in  ( [ eqn : partn ] ) leads to decompositions of @xmath21 , which provide a good quality of the _ overlapping _ as preconditioning .    the paper is organized as following . in section  [ sec : bdiag ] , we recall several known results concerning the block - diagonal preconditioning for spd matrices .",
    "these results motivate the new partitioning scheme , presented in section  [ sec : cbs_partn ] .",
    "the relation of the introduced approach to the existing graph partitioning schemes is discussed in section  [ sec : other_spectral ] .",
    "finally , in section  [ sec : numer ] , we report on a few numerical examples .",
    "let us consider @xmath8 as a block @xmath22-by-@xmath22 matrix , i.e. , @xmath23 where the diagonal blocks @xmath24 and @xmath25 are square of size @xmath26 and @xmath27 , respectively ; the off - diagonal block @xmath28 is @xmath26-by-@xmath27 .",
    "let @xmath29 be a block - diagonal preconditioner , @xmath30 where @xmath31 , @xmath32 .",
    "the dimensions of @xmath33 and @xmath34 are same as those of @xmath24 and @xmath25 , respectively .",
    "since both @xmath8 and @xmath29 are spd , the convergence of an iterative method for @xmath0 , such as , e.g. , the the preconditioned conjugate gradient method ( pcg ) , is fully determined by the spectrum of the preconditioned matrix @xmath35 . if no information on the exact location of eigenvalues of @xmath35 is available , then the worst - case convergence behavior of pcg is traditionally described in terms of the condition number @xmath36 of @xmath35 ; @xmath37 with @xmath38 and @xmath39 denoting the largest and the smallest eigenvalues of the preconditioned matrix , respectively",
    ". the question which arises is how we can bound @xmath36 for an arbitrary @xmath8 and a block - diagonal @xmath29 .",
    "the answer to this question is given , e.g. , in  ( * ? ? ?",
    "* chapter 9 ) .",
    "below , we briefly state the main result . in the subsequent sections , we will need this statement to justify the new partitioning algorithm .",
    "[ def : cbs ] let @xmath40 and @xmath41 be finite dimensional spaces , such that @xmath8 in  ( [ eqn : bk_sys ] ) is partitioned consistently with @xmath40 and @xmath41 .",
    "the constant @xmath42 where @xmath43 and @xmath44 are subspaces of the form @xmath45 is called the cauchy - bunyakowski - schwarz ( cbs ) constant .    in  ( [ eqn : cbsa ] )",
    ", @xmath46 denotes the standard inner product .",
    "we note that @xmath47 can be interpreted as a cosine of an angle between subspaces @xmath43 and @xmath44 .",
    "thus , since , additionally , @xmath48 , it is readily seen that @xmath49 .",
    "also we note that @xmath47 is the smallest possible constant satisfying the strengthened cauchy - schwarz - bunyakowski inequality @xmath50 which motivates its name .",
    "the cbs constant @xmath47 , defined by  ( [ eqn : cbsa ] ) , turns to play an important role in estimating the condition number @xmath36 for the class of spd matrices @xmath8 and block - diagonal preconditioners @xmath29 .",
    "[ thm : a1 ] if @xmath51 and @xmath52 in  ( [ eqn : bk_prec ] ) , and @xmath8 in  ( [ eqn : bk_sys ] ) is spd , then @xmath53    the bound given by theorem  [ thm : a1 ] is sharp . in what follows ,",
    "we use the cbs constants to construct a new approach for graph partitioning .",
    "given decomposition @xmath54 of the set @xmath55 ( possibly with overlapping @xmath17 ) , we consider the as preconditioning for an spd linear system @xmath56 .",
    "the preconditioning procedure is given in algorithm  [ alg : as ] .",
    "by @xmath57 we denote a submatrix of @xmath8 located at the intersection of rows with indices in @xmath58 and columns with indices in @xmath17 .",
    "similarly , @xmath59 denotes the subvector of @xmath60 , containing entries from positions @xmath17 .",
    "[ alg : as ] input : a , r , @xmath61 .",
    "output : @xmath62 .    1 .   for @xmath63 , do 2 .",
    "set @xmath64 , @xmath65 , and @xmath66 .",
    "3 .   solve @xmath67 .",
    "4 .   set @xmath68 .",
    "5 .   enddo 6 .",
    "@xmath69 .    in this section ,",
    "we focus on the case , where sets ( subdomains ) @xmath61 are nonoverlapping , i.e. ,  ( [ eqn : partn ] ) holds .",
    "algorithm  [ alg : as ] then gives a nonoverlapping as preconditioner , which is a form of the block jacobi iteration .",
    "indeed , let @xmath70 be a permutation matrix , which corresponds to the reordering of @xmath21 according to the partition @xmath61 , where the elements in @xmath71 are labeled first , in @xmath72 second , etc .",
    "then the as preconditioner @xmath29 , given by algorithm  [ alg : as ] , can be written in the matrix form as @xmath73 where @xmath74 .",
    "thus , algorithm  [ alg : as ] results in the block - diagonal , or block jacobi , preconditioner , up to a permutation of its rows and columns .    in the following subsection",
    "we define an optimal _ bipartitioning _ for algorithm  [ alg : as ] with two nonoverlapping subdomains .",
    "let us assume that @xmath75 and consider a _ bipartition _ of @xmath76 , where @xmath77 and @xmath78 are nonempty , such that @xmath79 the following theorem provides a relation between a given bipartition and the condition number of the preconditioned matrix .",
    "let @xmath80 in  ( [ eqn : partitij ] ) be a bipartition of @xmath21 , where @xmath81 .",
    "let @xmath29 be the as preconditioner for linear system @xmath0 with an spd matrix @xmath8 , given by algorithm  [ alg : as ] , with respect to the bipartition @xmath80 .",
    "then , @xmath82 where @xmath83 the spaces @xmath84 and @xmath85 are the subspaces of @xmath86 with dimensions @xmath26 and ( @xmath87 ) , respectively , such that @xmath88    according to  ( [ eqn : reorder ] ) , for the given bipartition @xmath89 in  ( [ eqn : partitij ] ) , the preconditioner @xmath29 , constructed by algorithm  [ alg : as ] , is of the form @xmath90 where @xmath91 , @xmath92 , and @xmath70 is a permutation matrix corresponding to the reordering of @xmath21 with respect to the partition @xmath89 . in particular , for any @xmath93 , the vector @xmath94 is such that @xmath95 , i.e. , the entries of @xmath93 with indices in @xmath96 become the first @xmath26 components of @xmath97 , while the entries with indices in @xmath98 get positions from @xmath99 through @xmath100 .",
    "we observe that the condition number of the matrix @xmath35 is the same as the condition number of the matrix @xmath101 , where @xmath102 and @xmath103 in  ( [ eqn : prec2x2 ] ) . indeed , since a unitary similarity transformation @xmath104 preserves the eigenvalues of @xmath35 , we have @xmath105 , where @xmath106 .",
    "the matrix @xmath107 represents a symmetric permutation of @xmath8 with respect to the given bipartition @xmath89 , and , thus , can be written in the @xmath22-by-@xmath22 block form , @xmath108 where @xmath91 , @xmath92 , and @xmath109 . since @xmath107 is spd and the preconditioner @xmath103 in  ( [ eqn : prec2x2 ] ) is the block diagonal of @xmath107",
    ", we apply theorem  [ thm : a1 ] to get the upper bound on the condition number @xmath110 , and hence bound  ( [ eqn : kappa ] ) on @xmath36 , where , according to definition  [ def : cbs ] , the cbs constant @xmath111 is given by @xmath112 the matrix @xmath113 defines the permutation that is the `` reverse '' of the one corresponding to @xmath70 .",
    "thus , the substitution @xmath114 and @xmath115 leads to expression  ( [ eqn : cbsc])([eqn : wij ] ) for @xmath116 , where the @xmath84 and @xmath85 contain vectors , which can have nonzero entries only at positions defined by @xmath96 or @xmath98 , respectively .    while no reasonably simple expression for the condition number of @xmath36 is generally available ,  ( [ eqn : kappa])([eqn : wij ] ) provides a sharp upper bound .",
    "this suggests that instead of choosing the bipartition which directly minimizes @xmath36 , we look for @xmath80 , such that the _ upper bound _ in  ( [ eqn : kappa ] ) is the smallest .    the function @xmath117 is monotonically increasing .",
    "therefore , the optimal value of @xmath118 in  ( [ eqn : kappa ] ) is attained for a bipartition @xmath80 corresponding to the smallest value of the cbs constant @xmath116 .",
    "since the targeted partitions are also required to be balanced , throughout this section , we request @xmath100 to be even , which guarantees the existence of _ fully balanced _",
    "bipartitions @xmath119 in  ( [ eqn : partitij ] ) , i.e. , such that @xmath120 .",
    "the latter , however , will not be a restriction for the practical algorithm described below .",
    "thus , we suggest an optimal bipartition @xmath121 for the nonoverlapping as preconditioner to be such that @xmath122 where @xmath84 and @xmath85 are the subspaces defined in  ( [ eqn : wij ] ) .      in the previous subsection",
    ", we have shown that the cbs constant @xmath123 in  ( [ eqn : cbsc ] ) provides a reasonable quantification of the quality of the bipartition @xmath89 in terms of the nonoverlapping as preconditioner with respect to the two subdomains . however",
    ", finding an optimal bipartition @xmath121 ( possibly not unique ) according to  ( [ eqn : opt ] ) , represents a challenging task .",
    "therefore , we further construct bipartitions which _ attempt to approximate _ the minimizer @xmath124 of  ( [ eqn : opt ] ) , rather than determine it exactly . in particular , we use the following approach .    let @xmath125 , with @xmath116 in  ( [ eqn : cbsc ] ) , be the objective function defined on all possible fully balanced bipartitions @xmath80 in  ( [ eqn : partitij ] ) .",
    "let @xmath126 be some other ( simpler ) function , which behaves similarly to @xmath127 , i.e. , the values of @xmath128 and @xmath116 change compatibly with respect to different bipartitions @xmath129 , and @xmath130 then , instead of @xmath131 , we attempt to minimize @xmath126 .",
    "the constructed minimizer is used to define the bipartition for @xmath0 under the nonoverlapping as preconditioning , given in algorithm  [ alg : as ] .",
    "below , we suggest the choice of @xmath132 , and describe the resulting bipartitioning procedures .    given a bipartition @xmath80 in  ( [ eqn : partitij ] ) , @xmath120 , let us consider a set of pairs @xmath133 where @xmath134 denotes the unit vector with @xmath135 at position @xmath136 and zeros elsewhere . by  ( [ eqn : cbsc ] )",
    ", the computation of the cbs constant @xmath116 for this bipartition involves finding the maximum in @xmath137 and @xmath138 of the quantity @xmath139 instead , we suggest to evaluate  ( [ eqn : qty ] ) on the pairs of the unit vectors @xmath140 in  ( [ eqn : sample ] ) , and then find the mean of the values which result from this `` sampling '' , i.e. , define @xmath141 , such that @xmath142    we note that , in terms of the adjacency graph @xmath10 of @xmath8 , @xmath143 is equal to the edge cut between vertex sets @xmath96 and @xmath98 , i.e. , @xmath144 .",
    "the expression above can be written as @xmath145 where @xmath146 is the weighted cut with @xmath147 denoting the weights assigned to the edges of @xmath10 .",
    "thus , instead of the objective function @xmath125 , which according to  ( [ eqn : opt ] ) , results in optimal bipartitions , we suggest to minimize @xmath126 in  ( [ eqn : subopt ] ) , i.e. , find the minimizer @xmath148 of @xmath149    minimization  ( [ eqn : min_subopt ] ) represents the problem of bipartitioning of the graph @xmath10 , which has the prescribed edge weights @xmath150 , with respect to the objective of minimizing the weighted cut normalized by the standard cut . since , by our assumption @xmath8 is spd , the weights @xmath19 are well - defined . the solution of  ( [ eqn : min_subopt ] ) is then expected to approximate the optimal partition @xmath151 , i.e. , the minimizer of problem  ( [ eqn : opt ] ) , which leads to the nonoverlapping as preconditioner of the optimal quality , in terms of minimizing the upper bound on the condition number of the preconditioned matrix .",
    "let us reformulate optimization problem  ( [ eqn : min_subopt ] ) in terms of bilinear forms involving graph laplacians .",
    "first , we introduce the @xmath100-dimensional indicator vector @xmath152 with the components @xmath153 such that @xmath154 then , for the given bipartition @xmath80 , @xmath155 where @xmath156 is the weighted degree of the vertex @xmath157 ; @xmath158 denotes the set of vertices adjacent to the vertex @xmath157 .",
    "the weighted cut @xmath159 can then be written as a bilinear form evaluated at the indicator vector @xmath152 , @xmath160 where @xmath161 is the weighted degree matrix , @xmath162 is the weighted adjacency matrix ( @xmath163 , @xmath164 ) of @xmath10 , and @xmath165 is the corresponding ( weighted ) graph laplacian .",
    "similarly , for the same bipartition @xmath80 , we repeat the above derivations with @xmath166 to get the expression for the ( unweighted ) cut , i.e , @xmath167 where @xmath168 is the diagonal degree matrix , @xmath169 is the adjacency matrix ( @xmath170 , iff @xmath6 , and @xmath171 otherwise , @xmath172 ) of @xmath10 , and @xmath173 is the standard graph laplacian .    using expressions  ( [ eqn : wcut])([eqn : cut ] ) , minimization problem  ( [ eqn : min_subopt ] ) can be written as @xmath174 where the minimum is searched over all possible indicator vectors @xmath152 .",
    "the condition @xmath175 imposes the requirement that @xmath120 ; @xmath176 is @xmath100-vector of ones .    in order to find an approximate solution of  ( [ eqn : rq_discrete ] ) , we relax the requirement on @xmath152 to be the vectors of @xmath177 , and",
    "embed the problem into the real space .",
    "thus , instead of  ( [ eqn : rq_discrete ] ) , we attempt to find @xmath178 , such that @xmath179 where @xmath165 and @xmath173 are the weighted and the standard graph laplacians of the adjacency graph of @xmath8 , respectively .",
    "both @xmath165 and @xmath173 are symmetric positive semi - definite .",
    "we assume for simplicity that the adjacency graph @xmath10 is connected , i.e. , the nullspace of @xmath173 is one - dimensional and is spanned by the vector @xmath180 .",
    "we also note that @xmath180 is in the nullspace of @xmath165 .",
    "problem  ( [ eqn : rq ] ) then corresponds to the minimization of the generalized rayleigh quotient @xmath181 on the subspace @xmath182 .",
    "since @xmath173 is spd on @xmath182 , the minimum in  ( [ eqn : rq ] ) exists and is given by the smallest eigenvalue of the symmetric generalized eigenvalue problem on @xmath182 , @xmath183 the minimizer , i.e. , the eigenvector corresponding to the smallest eigenvalue of  ( [ eqn : evp ] ) , can be viewed as an approximation to the minimizer of the discrete problem  ( [ eqn : rq_discrete ] ) from the real vector space .",
    "the solution of  ( [ eqn : evp ] ) is delivered by eigensolvers , which can be applied to the problem , preferably , without factorizing the matrix @xmath173 , and which can be configured to perform iterations on the subspace @xmath182 . in our numerical tests in section  [ sec : numer ] , we use the locally optimal block preconditioned conjugate gradient ( lobpcg ) method ; see  @xcite .",
    "a number of possible approaches can be used to define an indicator vector and , hence , the related partition , based on the given eigenvector @xmath184 corresponding to the smallest eigenvalue of problem  ( [ eqn : evp ] ) .",
    "for example , if the strict requirement on load balancing is enforced , i.e. , @xmath120 ( or @xmath185 if , in practice , @xmath100 is odd ) , then the set @xmath96 is formed by assigning the indices of @xmath186 smallest components of @xmath184 .",
    "the indices of the remaining components form the set @xmath98 .    in general",
    ", however , the requirement on the full load balancing may be restrictive . for example , a slight imbalance in the cardinalities of @xmath96 and @xmath98 may lead to a significant improvement in the preconditioner quality .",
    "in such cases , ignoring the explicit requirement on the load balancing , one can , e.g. , consider all the _ negative _ components of @xmath184 as approximations to @xmath187 , and assign their indices to the set @xmath96 .",
    "the _ nonnegative _ components are then considered as approximations to @xmath135 , and their indices are put in @xmath98 .",
    "thus , the sets @xmath96 and @xmath98 can be defined as @xmath188    similarly , @xmath96 and @xmath98 can be formed as @xmath189 where @xmath190 is a component of @xmath184 with the median value . a known generalization of this approach is to consider , say , @xmath191 `` candidate '' partitions @xmath192 , such that @xmath193 where the values @xmath194 are some chosen components of the vector @xmath195 , e.g. , @xmath196 ; @xmath197 .",
    "the vector @xmath198 is obtained by sorting the eigenvector @xmath184 in the ascending order , and determines a linear search order .",
    "all @xmath191 partitions @xmath192 are used to evaluate  ( [ eqn : subopt ] ) .",
    "the resulting bipartition @xmath80 is chosen to be the one , which delivers the smallest value of  ( [ eqn : subopt ] ) , i.e. , corresponds to the minimizer of  ( [ eqn : min_subopt ] ) over the @xmath191 `` candidate '' bipartitions in  ( [ eqn : linorder_extr ] ) .    in the partitioning algorithm below , we introduce a parameter _ loadbalance _ , which controls the sizes of the resulting sets @xmath96 and @xmath98 .",
    "in particular , the parameter defines a smallest possible size , say @xmath199 , of the sets @xmath96 and @xmath98 , so that the indices of the @xmath26 smallest and @xmath26 largest components of the eigenvector @xmath184 are moved into the sets @xmath96 and @xmath98 , respectively .",
    "the indices of the rest @xmath200 components are distributed among @xmath96 and @xmath98 similarly to  ( [ eqn : linorder_extr ] ) , with @xmath201 , where @xmath202 and @xmath203 is a given parameter .",
    "let @xmath80 be the bipartition of the set @xmath204 resulting from the approach , based on the eigenvalue problem  ( [ eqn : evp ] ) , discussed in the previous subsection .",
    "a natural way to construct further partitions is to apply the bipartitioning process separately to @xmath96 and @xmath98 , then to the resulting partitions and so on , until all the computed subpartitions are sufficiently small .",
    "the obtained procedure is similar to the well - known recursive spectral bisection ( rsb ) algorithm , see , e.g. ,  @xcite , which is based on computing the fiedler vector  @xcite , i.e. , the eigenvector corresponding to the smallest eigenvalue of @xmath205    each of the subgraphs associated with the sets @xmath96 and @xmath98 , which are determined by  ( [ eqn : evp ] ) , can be , and often is , disconnected .",
    "this constitutes an important difference between bipartitions delivered by eigenvalue problems  ( [ eqn : evp ] ) and  ( [ eqn : fiedler ] ) . at the same time , the assumption on the connectedness is crucial for eigenvalue problem  ( [ eqn : evp ] ) to be well - posed for the given graph . indeed ,",
    "if a graph has more then one ( trivial ) connected component , then the dimension of the nullspace of the corresponding graph laplacian @xmath173 is larger than one , i.e. , the nullspace of @xmath173 is no longer spanned only by the vector @xmath180 . in this case , @xmath173 becomes symmetric positive _ semidefinite _ on @xmath182 , and hence  ( [ eqn : evp ] ) does not lead to a correct symmetric eigenvalue problem on @xmath182 .",
    "the latter complication can be simply avoided by searching for the connected components in the subgraphs corresponding to @xmath96 and @xmath98 , and further treating the detected components as separate subpartitions in the suggested recursive procedure .",
    "therefore , it is important to realize that the bipartitioning step corresponding to problem  ( [ eqn : evp ] ) may result in more than two connected components .",
    "finally , we note that if the weights @xmath206 take a single nonzero value , i.e. , are the same for all edges , then the weighted and the standard graph laplacians @xmath165 and @xmath173 represent the multiples of each other .",
    "this happens for matrices @xmath8 with a very special , `` regular '' , behavior of entries , e.g. , as for the discrete laplace operator with constant ( diffusion ) coefficients . in such cases",
    ", the eigenvector @xmath184 , which is used to define the bipartition , corresponds to the only nonzero eigenvalue of  ( [ eqn : evp ] ) of multiplicity @xmath207 .",
    "this observation implies that _ any _ bipartition can be expected , and , hence , the results of the approach based on  ( [ eqn : evp ] ) are highly uncertain . in these situations , we simply replace  ( [ eqn : evp ] ) , e.g. , by eigenvalue problem  ( [ eqn : fiedler ] ) , or use any other ( bi)partitioning scheme , which targets to satisfy the standard criteria of minimizing the edge cut and maintaining the load balance .",
    "let us now summarize the discussion into the following partitioning algorithm .",
    "[ alg : partn1 ] input : @xmath10 , @xmath8 .",
    "output : partition @xmath208 of @xmath209 .    1 .",
    "assign weights @xmath147 to the edges of @xmath10 .",
    "if @xmath19 are the same for all edges , then construct the bipartition @xmath80 using a standard approach , e.g. , based on the fiedler vector , and go to step @xmath210 with @xmath211 and @xmath212 .",
    "2 .   construct graph laplacians @xmath213 and @xmath214 .",
    "3 .   find the eigenpair corresponding to the smallest eigenvalue of problem  ( [ eqn : evp ] ) .",
    "4 .   define the bipartition @xmath215 based on the computed eigenvector .",
    "the sizes of @xmath96 and @xmath98 are controlled by the parameter _",
    "loadbalance_. 5 .",
    "find connected components @xmath216 in the subgraphs of @xmath10 corresponding to the vertex sets @xmath96 and @xmath98 .",
    "6 .   for all @xmath217 with @xmath218 , apply cbspartition(@xmath217,@xmath219 ) .",
    "if all @xmath220 , then return @xmath208 .",
    "the parameters _ loadbalance _ and _ maxsize _ in algorithm  [ alg : partn1 ] are provided by the user .",
    "the connected components can be detected by the standard algorithms based on the breadth - first search ( bfs ) or the depth - first search ( dfs ) ; see , e.g. ,  @xcite .",
    "note that every weight @xmath19 assigned to the edge @xmath5 is the same at every level of the recursion in algorithm  [ alg : partn1 ] , and , in practice , is assigned only once , i.e. , when constructing the adjacency graph @xmath10 of the whole matrix @xmath8 .",
    "in the previous section , we have used the idea of minimizing the cbs constant @xmath116 to define the edge weights for the matrix adjacency graph and obtain objective  ( [ eqn : min_subopt ] ) for graph partitioning , which aims at increasing the quality of the as preconditioner in algorithm  [ alg : as ] .",
    "below , we show that similar considerations can lead to the problems of graph partitioning with well - known objectives , such as the ( weighted ) cut minimization and the min - max cut  @xcite .      given a partition @xmath80 in  ( [ eqn : partitij ] ) , @xmath120 ,",
    "let us consider the set @xmath221 where @xmath134 denotes the unit vector with @xmath135 at position @xmath136 and zeros elsewhere .    unlike  ( [ eqn : sample ] ) , the set @xmath222 in  ( [ eqn : sample_mincut ] ) contains _ all _ pairs @xmath223 with @xmath224 and @xmath225 , i.e. , including those , which correspond to @xmath226 . thus , instead of maximizing  ( [ eqn : qty ] ) to compute the cbs constant @xmath116 in  ( [ eqn : cbsc ] ) for the given bipartition @xmath89 , we sample  ( [ eqn : qty ] ) at all @xmath227 pairs in  ( [ eqn : sample_mincut ] ) and then find the mean value .",
    "in other words , we define the quantity @xmath228 , such that @xmath229 where @xmath159 is the weighted cut , and @xmath147 are the weights assigned to the edges of the adjacency graph of @xmath8 .",
    "thus , following the pattern of the previous subsection , instead of the objective function @xmath125 , which gives an optimal bipartition , we suggest to minimize @xmath230 in  ( [ eqn : subopt_mincut ] ) , i.e. , find such a bipartition @xmath231 that @xmath232    it is readily seen that  ( [ eqn : min_subopt_mincut ] ) represents the well - known problem of graph partitioning , which aims at finding equal - sized vertex sets @xmath96 and @xmath98 with the minimal ( weighted ) edge cut . in particular , repeating the derivations in subsection  [ subsec : uv ] for this problem , we can define the bipartition @xmath89 according to the components of the eigenvector corresponding to the smallest eigenvalue of @xmath233 where @xmath165 is the _ weighted _ graph laplacian .",
    "the recursive application of this procedure leads to the partitioning scheme , which is similar to the standard rsb algorithm with the difference that now edge weights @xmath234 are encapsulated into the graph laplacian .",
    "let us further assume that the matrix @xmath8 is diagonally scaled , i.e. , @xmath235 in this case , the diagonal entries of @xmath8 are all equal to @xmath135 , and the off - diagonal elements are less than one . in particular , we note that the weights @xmath19 defined in the previous sections simply coincide with the entries of the scaled matrix .    given a partition @xmath80 in  ( [ eqn : partitij ] ) of @xmath204 ,",
    "let us consider the set of pairs @xmath236 where @xmath237 and @xmath134 denotes the unit vector with @xmath135 at position @xmath136 and zeros elsewhere .",
    "the vectors @xmath238 in @xmath239 are defined to have components @xmath240 , such that @xmath241 similarly , the vectors @xmath242 in @xmath243 are such that @xmath244    now , following the approach exploited throughout this paper , instead of maximizing  ( [ eqn : qty ] ) to compute the cbs constant @xmath116 in  ( [ eqn : cbsc ] ) for the given bipartition @xmath89 , we sample  ( [ eqn : qty ] ) at all @xmath100 pairs in  ( [ eqn : sample_mcut ] ) and find the mean value . in particular , recalling that the diagonal entries of @xmath8 are equal to @xmath135 after the diagonal scaling , we get @xmath245^{1/2 } } + \\displaystyle \\sum_{j \\in j } \\frac{\\displaystyle \\sum_{i \\in i } |a_{ji}|}{\\left[\\displaystyle \\sum_{k , l \\in i } a_{kl } \\mbox{sign}(a_{jl } ) \\mbox{sign}(a_{jk } ) \\right]^{1/2 } }   \\right )   \\geq    \\\\ \\displaystyle \\frac{1}{n } \\left(\\displaystyle \\sum_{i \\in i } \\frac{\\displaystyle \\sum_{j \\in j } |a_{ij}|}{\\left[\\displaystyle \\sum_{k , l \\in j } |a_{kl}| \\right]^{1/2 } } + \\displaystyle \\sum_{j \\in j } \\frac{\\displaystyle",
    "\\sum_{i \\in i } |a_{ji}|}{\\left[\\displaystyle \\sum_{k , l \\in i } |a_{kl}|    \\right]^{1/2 } }   \\right )   \\geq     \\frac{1}{n } \\left (   \\frac{\\displaystyle \\sum_{i \\in i , j \\in j } |a_{ij}|}{\\displaystyle \\sum_{k , l \\in j } |a_{kl}| } + \\frac{\\displaystyle \\sum_{j \\in j , i \\in i } |a_{ji}|}{\\displaystyle \\sum_{k , l \\in i } |a_{kl}| }   \\right ) , \\end{array}\\ ] ] and define the quantity @xmath246 , such that @xmath247 where @xmath248 is the weighted cut between sets @xmath96 and @xmath98 with edge weights @xmath249 ; @xmath250 and @xmath251 .",
    "thus , instead of the objective function @xmath125 , which gives an optimal bipartition , one can attempt to minimize @xmath252 in  ( [ eqn : subopt_mcut ] ) , i.e. , find the minimizer @xmath253 of @xmath254    minimization  ( [ eqn : min_subopt_mcut ] ) represents the problem of finding the so - called min - max cut ( mcut ) ; see  @xcite .",
    "we note that the explicit requirement @xmath255 has been dropped in  ( [ eqn : min_subopt_mcut ] ) , however , the mcut is known to target balanced partitions .",
    "the corresponding algorithm , which attempts to construct @xmath89 satisfying  ( [ eqn : min_subopt_mcut ] ) , is based on finding the eigenpair corresponding to the smallest eigenvalue of the problem @xmath256 where @xmath165 is the weighted graph laplacian and @xmath257 is the diagonal weighted degree matrix .",
    "the recursive application of this procedure delivers the actual partitioning scheme .",
    "we remark that eigenvalue problem  ( [ eqn : evp_mcut ] ) is also used to construct the normalized cuts ( ncuts ) , introduced in  @xcite .",
    "in this section , we present the results of graph partitioning with respect to the new objective  ( [ eqn : min_subopt ] ) , and demonstrate the effects of the proposed partitioning strategy on the quality of preconditioning . in our numerical experiments , we apply algorithm  [ alg : partn1 ] ( cbspartition ) , introduced in subsection  [ subsec : recur ] , to a number of test problems with spd coefficient matrices .",
    "the resulting partitions ( subdomains ) are passed as an input to the as preconditioner in algorithm  [ alg : as ] , which is used to accelerate the convergence of the pcg method .",
    "we refer to this solution scheme as pcg  as .    in order to assess the quality of the constructed as preconditioners , we consider the iteration counts of pcg  as for different partitioning schemes . in particular ,",
    "we compare pcg  as with partitions resulting from algorithm  [ alg : partn1 ] versus pcg  as with the standard partitioning based on the rsb algorithm .",
    "we also provide the comparisons for pcg  as with partitioning schemes based on the ( weighted ) mincut and mcut objectives , discussed in section  [ sec : other_spectral ] .",
    "although , throughout the paper , the formal discussion has been concerned only with the case of the nonoverlapping as procedure , in some of our numerical examples , we skip this theoretical limitation and expand the obtained partitions with several `` layers '' of neighboring nodes .",
    "this allows considering the effects of the partitioning strategies on the quality of the _ overlapping _ as preconditioners .    in all the tests ,",
    "the right - hand side and the initial guess vectors are randomly chosen .",
    "we apply pcg  as to the diagonally scaled linear systems , so that the corresponding coefficient matrices have @xmath135 on the diagonal ; see  ( [ eqn : dscale ] ) . in this case , the weights @xmath19 , assigned to the edges of the adjacency graph , are equal to the entries of the scaled matrix . for all partitioning schemes ,",
    "the parameter _ loadbalance _ , which controls the load balancing , is set to @xmath258 ; _ loadbalance _ @xmath259 .",
    "the partitioning algorithms that we consider in the current paper are based on finding the eigenvectors of certain eigenvalue problems , i.e. , represent the _ spectral _ partitioning techniques .",
    "we recall that algorithm  [ alg : partn1 ] computes an eigenpair of problem  ( [ eqn : evp ] ) .",
    "the rsb algorithm targets the fiedler vector in  ( [ eqn : fiedler ] ) .",
    "the approaches based on the ( weighted ) mincut and mcut use the eigenvectors of problems  ( [ eqn : evp_mincut ] ) and  ( [ eqn : evp_mcut ] ) , respectively . in our numerical examples , as an underlying eigensolver , we use the lobpcg method , which allows to handle generalized symmetric eigenvalue problems , such as  ( [ eqn : evp ] ) , without any factorizations of the matrices @xmath165 and @xmath173 , and can be easily configured to perform iterations on the subspace @xmath182 .",
    "the lobpcg algorithm is a form of a ( block ) three - term recurrence , which performs the local minimization of the rayleigh quotient ; see  @xcite for more details .",
    "the method is known to be practical for large - scale eigenvalue computations , if a good preconditioner is provided to accelerate the convergence to the desired eigenpairs . for",
    "all lobpcg runs , we construct preconditioners using incomplete cholesky ( ic ) factors with the drop tolerance @xmath260 of matrices @xmath261 ( for problems  ( [ eqn : evp ] ) ,  ( [ eqn : evp_mincut ] ) , and  ( [ eqn : evp_mcut ] ) ) and @xmath262 ( for problem ( [ eqn : fiedler ] ) ) .",
    "the parameter @xmath263 is assigned with a small value , @xmath264 in our examples , to ensure that the ic procedure is correctly applied to the spd matrices . for problems ( [ eqn : fiedler ] ) , ( [ eqn : evp_mincut ] ) , and  ( [ eqn : evp_mcut ] ) , we remove the orthogonality constraints on @xmath184 , and perform the block iteration , with the block size @xmath22 .",
    "the solution is then given by the eigenpair corresponding to the second smallest eigenvalue .",
    "for problem  ( [ eqn : evp ] ) , however , we run a single vector iteration , choosing the initial guess from @xmath182 and ensure that the residuals are projected back to @xmath182 after the ic preconditioning . in all the tests ,",
    "the lobpcg residual norm tolerance is set to @xmath265 .    as a model problem",
    "we choose the @xmath22d diffusion equation @xmath266 \\times [ 0,1]\\ ] ] with zero dirichlet boundary conditions .",
    "the functions @xmath267 and @xmath268 are piecewise constants with jumps in the specified subregions . for all tests ,",
    "we use the standard @xmath269-point fd discretization on @xmath270-by-@xmath270 uniform grid to obtain a ( diagonally scaled ) linear systems of size @xmath271 .",
    "we consider two geometries for the location of jumps in coefficients @xmath267 and @xmath268 . in the first case",
    ", the jumps occur in the subregion @xmath272 of the domain .",
    "the second case is more complex , with jumps located in the `` checkerboard '' fashion ( `` @xmath269-by-@xmath269 black - white checkerboard '' ) .    in the following example",
    ", we assume that _ both _",
    "coefficients @xmath267 and @xmath268 have jumps in the subregion @xmath272 of the problem s domain , such that @xmath273 figure  [ fig : j_xy ] shows the result of a single step , i.e. , the bipartitioning , performed by algorithm  [ alg : partn1 ] ( top left ) , the standard rsb approach ( top right ) , as well as the weighted mincut ( bottom left ) and the mcut ( bottom right ) algorithms .",
    "+    we observe that , unlike the rest , the partition resulting from algorithm  [ alg : partn1 ] does not perform `` cuts '' within the jump region .",
    "in fact , this is consistent with the well - established computational experience , which suggests that the subdomains with different physics phenomena should be `` segmented '' out of the original domain .",
    "similarly , we apply the bipartitioning step of all four approaches to the model problem , where the jump occurs only in the coefficient @xmath267 , i.e. , @xmath274 the resulting bipartitions are illustrated in figure  [ fig : j_x ] .",
    "we note that the partitions given by algorithm  [ alg : partn1 ] ( top left ) , the weighted mincut ( bottom left ) and the mcut ( bottom right ) algorithms do not discard the mesh edges in the @xmath97-direction within the jump region .",
    "the border between the subdomains is of a `` smoother '' shape for the mincut and mcut , which is preferable in terms of minimizing the communication volume .",
    "however , as suggested by the numerical experiments below , the partitions based on algorithm  [ alg : partn1 ] typically guarantee a smaller number of steps of the iterative scheme as the number of the desired subdomains becomes larger .",
    "we also remark that , although independent of the matrix coefficients , the partitions resulting from the standard rsb approach may not be unique , see figures  [ fig : j_xy ] and  [ fig : j_x ] ( top right ) , if the targeted eigenvalue has multiplicity greater than one .",
    "+    in figure  [ fig : ev1 ] , we plot the components of the eigenvectors , corresponding to the smallest eigenvalues of  ( [ eqn : evp ] ) , at the grid points . according to algorithm  [ alg : partn1 ] ,",
    "such eigenvectors are used to construct the bipartition . indeed , the components of the eigenvectors are well - separated , which allows to easily determine the partitions and detect the `` weak '' connection between the grid nodes to be discarded in order to obtain the resulting bipartition .",
    "figure  [ fig : j_x_cv ] demonstrates the effects of partitioning schemes on the quality of the nonoverlapping as preconditioners . in figure",
    "[ fig : j_x_cv ] ( left ) , we consider the pcg  as runs for the model problem with coefficients in  ( [ eqn : j_xy ] ) , where the as preconditioners are constructed with respect to the partitions delivered by different algorithms .",
    "the parameter _ maxsize _ , which determines the largest possible size of a single subdomain , is set to @xmath275 in this example . in figure",
    "[ fig : j_x_cv ] ( right ) , we apply pcg  as for the model problem with coefficients in  ( [ eqn : j_x ] ) . here , the parameter _ maxsize _ ,",
    "is set to @xmath276 .",
    "this corresponds to a more realistic situation , where each subdomain is significantly smaller than the original domain .",
    "the results in figure  [ fig : j_x_cv ] suggest that pcg  as with the partitioning scheme in algorithm  [ alg : partn1 ] requires a noticeably smaller number of iterations to get the solution .",
    "we remark that the quality of the as preconditioning with respect to the partitions delivered by algorithm  [ alg : partn1 ] may often depend on the value of the parameter _",
    "maxsize_. for example , in the case of the model problem with coefficients in  ( [ eqn : j_xy ] ) , a small value of _ maxsize _ forces algorithm  [ alg : partn1 ] to perform the partitioning inside the jump region , i.e. , inside the subdomain marked with `` o '' s in figure  [ fig : j_xy ] ( top left ) .",
    "this , clearly , can lead to less remarkable gains in the use of algorithm  [ alg : partn1 ] compared to the other partitioning approaches .    in the following pair of examples",
    ", we assume the `` checkerboard '' pattern for the jump regions ( `` @xmath269-by-@xmath269 black - white checkerboard '' ) .",
    "first , we consider jumps in both @xmath267 and @xmath268 in `` black '' positions , i.e. , @xmath277 in `` black '' , and @xmath278 in `` white '' .",
    "the corresponding bipartitions resulting from different partitioning schemes are given in figure  [ fig : j_xy_checker ] .",
    "+    similarly , figure  [ fig : j_x_checker ] demonstrates the bipartitions corresponding to the second case , with jumps only in @xmath267 , i.e. , @xmath279 in `` black '' , and @xmath280 in `` white '' , @xmath281 .",
    "+    we recall that the bipartitioning step of algorithm  [ alg : partn1 ] may deliver two _ disconnected _ subdomains , i.e. , two subgraphs which possibly contain more than one connected component .",
    "each of these connected components is then processed separately in the recursive partitioning procedure .",
    "this explains the presence of more than two subdomains in ( top left ) figures  [ fig : j_xy_checker ] and [ fig : j_x_checker]the nodes of each connected component , resulting from a single step of algorithm  [ alg : partn1 ] , are plotted as separate regions .",
    "we also note that the recursive bipartitioning given by algorithm  [ alg : partn1 ] may generate a number of small connected subdomains of sizes much smaller than the value of the _ maxsize _ parameter .",
    "such subdomains should be treated with care when being assigned to parallel processors .    in figure  [ fig :",
    "ev2 ] , we plot the components of the eigenvectors corresponding to the smallest eigenvalues of  ( [ eqn : evp ] ) at the grid points for the `` checkerboard '' example .",
    "it is possible to see that , as in the previous examples , both eigenvectors attempt to capture the discontinuities in the coefficients of the model problem .    in figure",
    "[ fig : j_x_checker_cv ] , we compare the convergence behavior of pcg  as with different partitioning schemes .",
    "figure  [ fig : j_x_checker_cv ] ( left ) corresponds to the case of the jumps in both @xmath267 and @xmath268 in `` black '' positions .",
    "we observe that for this relatively complex geometry of the jump locations , all partitioning schemes which use the information on the matrix coefficients result in the as preconditioners of a better quality . in this example",
    ", the number of pcg  as iterations is typically similar for the partitioning techniques in algorithm  [ alg : partn1 ] , the weighted mincut , and mcut .",
    "figure  [ fig : j_x_checker_cv ] ( right ) demonstrates the runs of pcg  as applied to the model problem with the jump only in @xmath267 in `` black '' positions . in this case",
    ", the iterative scheme with partitions resulting from algorithm  [ alg : partn1 ] gives the fastest convergence . in",
    "both , figure  [ fig : j_x_checker_cv ] ( left ) and figure  [ fig : j_x_checker_cv ] ( right ) , the _ maxsize _ parameter has been set to @xmath276 .    finally , we apply the partitioning schemes , discussed in this paper , to a set of test problems from the university of florida sparse matrix collection . in particular , we consider ill - conditioned spd matrices arising in structural engineering and computational fluid dynamics . in tables",
    "[ tbl : ufl ] and  [ tbl : ufl_ovlp ] , we report the numbers of iterations ( averaged after @xmath282-@xmath283 sample runs ) required by pcg  as to reach the tolerance @xmath284 in the residual norm ( relative to the norm of the right - hand side vectors ) for _ nonoverlapping _ and _ overlapping _ as procedures , respectively .",
    ".iteration numbers of the * nonoverlapping * pcg  as with different partitioning schemes applied to test problems from the university of florida sparse matrix collection . [ cols=\"^,^,^,^,^,^ \" , ]",
    "in the present paper , we have shown that using matrix coefficients for graph partitioning allows to achieve a noticeable decrease in the number of iterations performed by an iterative scheme . for a class of spd matrices and as preconditioners , we have suggested an approach for assigning weights to the edges of the adjacency graph and formulated a new partitioning objective , which aims at approximately minimizing the cbs constant . the resulting partitioning algorithm is based on computing the eigenpairs corresponding to the smallest eigenvalues of the sequence of generalized eigenvalue problems , which involve both weighted and standard graph laplacians . in particular , this means that the proposed technique inherits all specificities of spectral partitioning algorithms , such as good quality of partitions , on the one hand , and the computational expenses related to finding eigenvectors , on the other hand .",
    "thus , in order to obtain highly efficient graph partitioning schemes , it is important to study all aspects of the occurring eigencomputations , such as , e.g. , preconditioning , the use of alternative eigenvalue solvers , possible ways to replace the eigenvalue problems by linear systems .",
    "other approaches for satisfying the suggested partitioning objective may be delivered , e.g. , by ( multilevel ) combinatorial graph partitioning techniques or by certain extensions of greedy algorithms .",
    "we note that methods for reaching the new partitioning objective may be combined with the communications minimizing techniques .",
    "as one could conclude from this work , it is likely that different choices of iterative methods and preconditioning strategies may require different schemes for graph partitioning with matrix coefficients . in the current paper , we have considered the case of pcg with the as preconditioning .",
    "exploring the partitioning for other forms of parallel preconditioning ( e.g. , incomplete factorizations and multigrid ) is a natural continuation of the research in this direction .",
    "constructing partitioning algorithms with matrix coefficients for nonsymmetric problems is also of a particular interest .                            , _",
    "non - standard parallel solution strategies for distributed sparse linear systems _ , in parallel computation : proc . of acpc99 , a.  u.  p.  zinterhof , m. vajtersic , ed . , lecture notes in computer science , berlin , 1999 , springer - verlag ."
  ],
  "abstract_text": [
    "<S> prior to the parallel solution of a large linear system , it is required to perform a partitioning of its equations / unknowns . </S>",
    "<S> standard partitioning algorithms are designed using the considerations of the efficiency of the parallel matrix - vector multiplication , and typically disregard the information on the coefficients of the matrix . </S>",
    "<S> this information , however , may have a significant impact on the quality of the preconditioning procedure used within the chosen iterative scheme . in the present paper , </S>",
    "<S> we suggest a spectral partitioning algorithm , which takes into account the information on the matrix coefficients and constructs partitions with respect to the objective of increasing the quality of the additive schwarz preconditioning for symmetric positive definite linear systems . </S>",
    "<S> numerical results for a set of test problems demonstrate a noticeable improvement in the robustness of the resulting solution scheme when using the new partitioning approach .    graph partitioning , iterative linear system solution , preconditioning , cauchy - bunyakowski - schwarz ( cbs ) constant , symmetric positive definite , spectral partitioning    15a06 , 65f08 , 65f10 , 65n22 </S>"
  ]
}
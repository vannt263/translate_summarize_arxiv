{
  "article_text": [
    "a modern processor can dynamically set it s speed while it s active , and can make a transition to sleep state when required .",
    "when the processor is operating at a speed @xmath0 , the energy consumed per unit time is given by a convex power function @xmath1 having the property that @xmath2 and @xmath3 for all values of @xmath0 .",
    "therefore , some energy is consumed even if the processor is not scheduling any job in the active state . on the other hand ,",
    "no energy is consumed when the processor is in the sleep state .",
    "however , @xmath4 units of energy is required to make a transition from the sleep state to the active state and therefore it is not always fruitful to go asleep when there is no work to be processed at some point of time .",
    "we assume that no energy is required to make a transition from the active state to the sleep state , as we can always include this energy requirement in the sleep to active state transition .",
    "a number of problems have been studied under this model , e.g. , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite .",
    "the jobs are specified by their arrival time , deadline and the processing volume .",
    "we consider a scheduling problem where each job has to be scheduled within their arrival time and deadline , and the goal is to minimize the total energy consumption required to process these jobs .",
    "albers et .",
    "al . @xcite proved the np - hardness of this problem by reducing an instance of an np - hard _ partition problem _",
    "( defined below ) to an instance of this scheduling problem .",
    "the instance of this scheduling problem consists of the arrival time , the deadline and the processing volume for each of the jobs , in addition to @xmath1 and @xmath6 that depends on the problem instance of the partition problem . as a result ,",
    "this proof of np - hardness does nt remain valid when we are given any fixed convex function @xmath1 and a positive number @xmath6 . in this paper , we prove that the problem remains np - hard for any fixed positive number @xmath6 and convex function @xmath5 satisfying @xmath2 and @xmath3 for all values of @xmath0 .",
    "we would do the reduction from the following np - hard _ partition problem _ : given a finite set @xmath7 of @xmath8 positive integers @xmath9 , the problem is to decide whether there exists a subset @xmath10 such that @xmath11 .",
    "it s assumed that @xmath12 ; otherwise , the problem becomes trivial .",
    "let us start with a few definitions and notations .",
    "the _ density _ of an interval is defined as the total workload of the jobs that completely lie in an interval divided by the length of the interval .",
    "the critical speed @xmath13 for @xmath1 is defined as the minimum speed that minimizes @xmath14 .",
    "note that the critical speed is not well - defined if @xmath14 decreases monotonically .",
    "however , this is not a realistic case as this would mean we can schedule all jobs at an infinite speed to get the schedule that requires the minimum amount of energy consumption .",
    "therefore , we assume that @xmath14 decreases for @xmath15 and attains the minimum at @xmath16 . under this assumption ,",
    "the following property can be easily observed easily .",
    "[ lemma1 ] @xmath17 for @xmath18 and @xmath19 .",
    "the derivative of the function @xmath14 is @xmath20 .",
    "since @xmath14 decreases for @xmath15 , we have @xmath21 for @xmath22 with equality only when @xmath16 .",
    "given the function @xmath1 , a non - negative number @xmath6 , and an instance @xmath23 of the _ partition problem _",
    ", i.e. , the integers @xmath24 , let s define the parameters which would be used to construct an instance @xmath25 of the scheduling problem .",
    "+   + @xmath26 .",
    "+   + @xmath27 where @xmath28 , and @xmath29 .",
    "+   + @xmath30 where @xmath31 .",
    "+   + @xmath32 .",
    "+   + the structure of @xmath33 is the same as the one used by albers et .",
    "al . @xcite . the job set in @xmath33",
    "is partitioned into three levels . in level @xmath34 , there is only one job having a processing volume equal to @xmath35 .",
    "level @xmath36 comprises of @xmath8 jobs ; the @xmath37-th job has a processing volume @xmath38 and @xmath39 time units to process it",
    ". there are @xmath40 jobs in level @xmath41 , with each job having a processing volume of @xmath42 and @xmath43 time units to process it , thereby making the density of each of these jobs equal to @xmath13 .    in the rest of this section",
    ", we establish a few lemmas that would be useful in our proof of np - hardness .",
    "[ lemma2 ] @xmath44 .",
    "since @xmath45 , we obtain @xmath46 .",
    "we also note that @xmath47 and @xmath48 .",
    "furthermore , we obtain from lemma [ lemma1 ] that @xmath49 , and @xmath50 for @xmath51 .    along with the properties established above",
    ", @xmath52 implies that the following relationship holds .",
    "@xmath53    [ lemma3 ] @xmath54    it can be easily seen from figure [ figure2 ] that @xmath55 @xmath56 @xmath57 slope of line @xmath58 . since @xmath59 , it follows that @xmath60 .",
    "[ figure2 ]    we would now show that our choices of @xmath38 and @xmath39 satisfy the trivial constraints @xmath61 . we would also that the density of all the intervals except those corresponding to level @xmath41 jobs are strictly less than @xmath13 .",
    "[ lemma4 ] @xmath62 for all @xmath37 .",
    "we first prove that @xmath63 for all @xmath37 .",
    "note that @xmath64 since @xmath65 , it suffices to show that @xmath66 .",
    "as shown below , it can be easily seen using lemma [ lemma2 ] , @xmath67 and @xmath68 .",
    "@xmath69 in order to show that @xmath70 , we observe that @xmath71 since @xmath72 , it suffices to show that @xmath73 .",
    "we show it below using lemma [ lemma2 ] and lemma [ lemma3 ] .",
    "@xmath74 note that the last inequality follows from our choice of @xmath68 .",
    "[ lemma5 ] the density of all the intervals except those corresponding to level @xmath41 jobs are strictly less than @xmath13 .",
    "let s first consider the intervals corresponding to level @xmath36 jobs .",
    "the density of such an interval is @xmath75 .",
    "observe that @xmath76 since @xmath77 , the density of an interval corresponding to a level @xmath36 job is strictly less than @xmath13 .",
    "this also proves that the density of any interval corresponding to the union of a proper subset of the level @xmath36 and level @xmath41 jobs is less than @xmath13 , since such jobs are non - overlapping and the density of any interval corresponding a level @xmath41 job is exactly @xmath13 .",
    "finally , we consider the interval that starts from the first arrival of the level @xmath34 job and lasts till it s deadline .",
    "the density of this interval is @xmath78 .",
    "this quantity is less than @xmath13 since @xmath79 the last inequality is true since @xmath80 .",
    "let us introduce the functions @xmath81 and @xmath82 , and establish some of their properties .",
    "[ lemma6 ] @xmath83 and @xmath84 intersect at two different points for any @xmath37 .",
    "consider @xmath85 .",
    "note that @xmath86    the last - but - one inequality follows from lemma [ lemma2 ] .",
    "the last inequality follows since @xmath87 .",
    "next , we would show that @xmath88 decreases for @xmath89 , attains minimum at @xmath90 and then finally increases .",
    "note that @xmath91 .",
    "the following inequalities follow easily from lemma [ lemma1 ] and from the fact that @xmath3 .",
    "@xmath92 by lemma [ lemma1 ] , the inequalities above would be strict since @xmath89 .",
    "+   + we complete the proof by showing that @xmath93 . since @xmath94 is a strictly convex function ( note that @xmath95 ) , it would eventually intersects the @xmath96-axis at some point @xmath97 .",
    "[ lemma7 ] @xmath98 .",
    "it can be easily seen that @xmath99 .",
    "the following calculation also shows that @xmath100 . @xmath101 \\\\ & = & \\frac { k}{a_{i } } [ p(d ) l_{i } - \\frac{p(s*)}{s * } l_{i } - c ] \\\\ & = & \\frac{k}{a_{i } } [ p(d ) l_{i } - \\frac{p(s*)}{s * } d l_{i } + \\frac{p(s*)}{s * } \\frac{a_{i}}{k } - c ] \\\\ & = & \\frac{k}{a_{i } } r(d ) l_{i } + \\frac{p(s*)}{s * } - \\frac{ck}{a_{i } }   \\\\ & = & \\frac{k}{a_{i } } r(d)e - \\frac{k}{a_{i } } r(d ) f",
    "a_{i } + \\frac { p(s*)}{s * } - \\frac{ck}{a_{i } } \\\\ & = & \\frac{k}{a_{i } } c + r'(d ) + \\frac{p(s*)}{s * } - \\frac{ck}{a_{i } } \\\\ & = & p'(d ) - \\frac{p(s*)}{s * } + \\frac{p(s*)}{s * }   \\\\ & = & p'(d).\\end{aligned}\\ ] ]    let @xmath102 and @xmath103 be the two roots of the equation @xmath104 such that @xmath105 .",
    "we establish the following two lemmas .",
    "[ lemma8 ] @xmath106 , where @xmath107 is the first intersection of @xmath108 and @xmath109 .",
    "since @xmath110 is strictly convex at every @xmath96 , we obtain @xmath111 the lemma follows since @xmath112 .",
    "[ lemma9 ] @xmath113 .",
    "assume for the sake of contradiction that @xmath114 .",
    "it can be seen from figure [ figure4 ] that it implies @xmath115 @xmath116 .",
    "however , this leads to a contradiction since @xmath77 , and @xmath117 by lemma [ lemma1 ] . on the other hand ,",
    "it s easy to see that @xmath118 .",
    "in this section , we would complete the proof of the np - hardness of the _ speed scaling with power down _ problem .",
    "we would be using the following result by irani et al .",
    "@xcite along with the results derived in the previous section .      *",
    "a job @xmath119 must be scheduled at a constant speed @xmath120 + * suppose that the arrival time and the deadline of a job @xmath119 is @xmath121 and @xmath122 , respectively .",
    "if another job @xmath123 is scheduled in the interval @xmath124 $ ] , then @xmath125 . + * the jobs in the intervals having density at least @xmath13 are scheduled according to the yds algorithm @xcite .",
    "the yds algorithm is an iterative algorithm . in each iteration ,",
    "an interval with the maximum density is identified and an _ earliest - deadline - first _ policy is used to construct a schedule for the jobs that lie completely in that interval . after an iteration , the yds algorithm removes the jobs that lie completely in the maximum density interval corresponding to that iteration , and updates the arrival time and deadline of any job that overlaps with that interval .",
    "let @xmath131 be the set of i corresponding to the solution of partition problem , i.e. , @xmath132 .",
    "let @xmath133 denote the portion of the workload of level 0 job scheduled in gap @xmath134 .",
    "it can be seen that @xmath135 .",
    "we set the @xmath136 s as follows :      our schedule executes any level @xmath41 jobs with speed @xmath13 between it s release time and deadline .",
    "this is feasible since the density of any such job is equal to @xmath13 .",
    "therefore , a total workload of @xmath138 has to be scheduled in each gap @xmath139 corresponding to an @xmath140 .",
    "we schedule both the jobs in gap @xmath141 with speed @xmath142 . in the rest of the gaps , the level @xmath36 jobs are scheduled at speed @xmath13 .",
    "the processor transitions to the sleep state at the completion of the job in such gaps , and wakes up at the release time of a level @xmath41 job . since the density of any interval corresponding to a level @xmath36 job is less than @xmath13 , we get a feasible schedule .",
    "let us calculate the total energy consumed by the jobs at every level .",
    "first of all , the total energy consumed by the level 2 jobs is @xmath143 . in the gaps corresponding to @xmath144",
    ", we note that the jobs are proceeded at a speed @xmath145 for @xmath39 units of time .",
    "the energy consumption in such a gap equals @xmath146 , which is the same as @xmath147 . in a gap corresponding to @xmath148 ,",
    "a total @xmath38 units of workload are scheduled at speed @xmath149 and then the processor transitions to sleep state .",
    "therefore , the energy consumed is given by @xmath150 , which is the same as @xmath151 .",
    "from lemma [ lemma7 ] , @xmath147 can be written as @xmath152 .",
    "+   + let @xmath153 denote the total energy consumed by the level @xmath34 and level @xmath36 jobs .",
    "we obtain the following .",
    "@xmath154 + the last equality follows since @xmath155 .",
    "hence , we get a feasible schedule whose total energy consumption is @xmath156 .",
    "let @xmath159 denote the lower envelope of the functions @xmath83 and @xmath110 , represented by solid curve in figure [ figure5 ] .",
    "let slope(x ) denote the slope of the line joining @xmath160 and @xmath161 . for @xmath162 ,",
    "@xmath163 can be written as @xmath164 .",
    "we note that the slope(x ) is minimum at @xmath165 and the minimum value is @xmath166 ( by lemma [ lemma7 ] ) which is independent of @xmath37 .",
    "consider an optimal schedule @xmath167 satisfying the properties of lemma [ lemma10 ] and let @xmath168 units of workload of level 0 job be scheduled in the gaps @xmath169 , respectively .",
    "let @xmath170 .",
    "+   + * case 1 . *",
    "@xmath171 for some @xmath172 +   + since the workload @xmath173 is greater than @xmath107 and less than @xmath174 , it is beneficial to schedule it at the speed @xmath175 ( rather than to schedule it with the speed @xmath13 ) and then transition to sleep state . from lemma [ lemma10 ]",
    ", it follows that the ratio @xmath175 must be the same for all @xmath172 in the schedule @xmath176 .",
    "take @xmath172 corresponding to @xmath177 .",
    "we show below that @xmath178 must also be equal to @xmath179 for all @xmath180 in an optimal schedule .",
    "@xmath181    lemma [ lemma10 ] says that all the intervals having density greater than or equal to s * must be scheduled according to yds in the schedule @xmath182 .",
    "also , lemma [ lemma1 ] tells that all the intervals except those corresponding to level 2 jobs are having density less than s*. therefore , in the schedule @xmath182 , all level 2 jobs must be scheduled at s*. thus , the total energy consumed by the level 2 jobs is @xmath183 .",
    "let us again denote the total energy required by the level 0 and level 1 jobs as @xmath184 . in a gap corresponding to @xmath185 ,",
    "it is optimal to schedule the job at speed @xmath13 and then transition to sleep state than scheduling at the speed @xmath175 .",
    "when this is feasible , the energy consumption in the gap would be given by @xmath186 . when it s not ( i.e. , if @xmath187 ) , the energy consumption in the gap would be greater than @xmath188 .",
    "therefore , we obtain the following lower bound on @xmath184 .",
    "@xmath189    if @xmath190 , it implies that @xmath191 , which contradicts our assumption that a solution of the partition problem does not exist . therefore , @xmath192 , which implies that @xmath193 .",
    "the following calculation completes the proof of case @xmath36 .",
    "@xmath194 +   + * case 2 . * @xmath195 for all @xmath140 +   + in this case , the following calculation completes the proof .",
    "@xmath196          p. baptiste .",
    "scheduling unit tasks to minimize the number of idle periods : a polynomial time algorithm for offline dynamic power management .",
    "17th annual acm - siam symposium on discrete algorithms , 364 - 367 , 2006 .",
    "n. bansal , h. l. chan , k. pruhs and d. katz . improved bounds for speed scaling in devices obeying the cube - root rule .",
    "36th international colloqium on automata , languages and programming _ , 144 - 155 , 2009 ."
  ],
  "abstract_text": [
    "<S> a modern processor can dynamically set it s speed while it s active , and can make a transition to sleep state when required . </S>",
    "<S> when the processor is operating at a speed @xmath0 , the energy consumed per unit time is given by a convex power function @xmath1 having the property that @xmath2 and @xmath3 for all values of @xmath0 . </S>",
    "<S> moreover , @xmath4 units of energy is required to make a transition from the sleep state to the active state . </S>",
    "<S> the jobs are specified by their arrival time , deadline and the processing volume .    </S>",
    "<S> we consider a scheduling problem , called _ speed scaling with sleep state _ , where each job has to be scheduled within their arrival time and deadline , and the goal is to minimize the total energy consumption required to process these jobs . </S>",
    "<S> albers et . </S>",
    "<S> al . @xcite </S>",
    "<S> proved the np - hardness of this problem by reducing an instance of an np - hard _ partition problem _ to an instance of this scheduling problem . </S>",
    "<S> the instance of this scheduling problem consists of the arrival time , the deadline and the processing volume for each of the jobs , in addition to @xmath5 and @xmath6 . since @xmath5 and @xmath6 depend on the instance of the _ partition problem _ , this proof of the np - hardness of the _ speed scaling with sleep state _ problem does nt remain valid when @xmath5 and @xmath6 are fixed . in this paper , we prove that the _ speed scaling with sleep state _ problem remains np - hard for any fixed positive number @xmath6 and convex @xmath5 satisfying @xmath2 and @xmath3 for all values of @xmath0 .    </S>",
    "<S> * keywords : * energy efficient algorithm , scheduling algorithm , np - hardness </S>"
  ]
}
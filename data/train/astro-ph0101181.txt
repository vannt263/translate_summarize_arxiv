{
  "article_text": [
    "the cambridge infrared survey instrument ( cirsi ) is a near - ir mosaic imager that contains a 2 x 2 array of rockwell hawaii i 1024 x 1024 detectors ( beckett et al .",
    "1996 ; mackay et al .",
    "cirsi has been in operation for about two years and we have obtained almost 1 terabyte of imaging data .",
    "the uniquely wide field accessible by cirsi on a 24 m class telescope makes it ideal for large - area surveys to moderate depth .",
    "two such surveys are currently in progress with preliminary results including the measurement of galaxy clustering at intermediate redshift ( mccarthy et al .",
    "2001 ) , and the demonstration of a reddening - independent quasar selection technique based on combined deep optical and near - ir color diagrams ( sabbey et al .",
    "2001 ) .",
    "however , the cirsi data reduction poses several challenges . with the large data rate ( 510 gb of data taken per night , @xmath0 nights per year , and a significant data backlog currently ) the software has to be very efficient and",
    "completely automated .",
    "also , the software should handle diverse data sets , from galactic center observations to very sparse fields at high galactic latitude .",
    "we generate wide - field , deep mosaic images from thousands of individual images taken over many nights . with the gaps between detectors comparable to detector size , we make filled mosaic images using the coadded dither sets from different chips and telescope pointings",
    ". thus weight maps and accurate astrometry are crucial and the common simplification of clipping the dither sets to their intersection region is not appropriate .",
    "although we use existing software packages when possible ( see below ) , we decided to write the core image processing routines ourselves to satisfy certain design requirements .",
    "for example , we wanted a two pass reduction with object masks derived from the first pass coadded dither sets , subpixel image registration and coaddition that uses full weight maps and does not clip images , optimizations for cpu / disk efficiency , customized artifact cleaning ( destriping and defringing ) , and reusable tools ( from having stand - alone tasks to glue together using a high level scripting language , to making c library calls , or even extracting portions of source code ) . the basic processing steps , described below , are : flatfield correction , running sky frame subtraction , dither offsets measurement , dither set coaddition , and mosaic image creation .",
    "flatfield images are produced by subtracting the stack median of lamp - off domeflats from the stack median of lamp - on domeflats .",
    "the flatfield images are divided by the mode of the chip 1 flatfield to produce a gain map per chip .",
    "bad pixels are automatically identified in the gain maps ( and set to 0.0 ) by looking for outliers ( @xmath1 from the median in 15x15-pixel blocks ) or pixels with extremely low or high sensitivity ( @xmath2% from the median gain ) . because bad pixels often occur in clumps we eliminate bad pixels during image coaddition rather than by interpolation in an initial cleaning pass .",
    "the data frames are multiplied by the inverse of the gain map .",
    "the image stacking is done using cubemean.c , which calculates the median , robust standard deviation , or robust mean plane with a choice of weights ( none , scalar , or maps ) and image scaling or zero offsets using the image modes .",
    "this is not a general purpose tool like iraf s imcombine , but for the specific task of calculating the median plane was found to be 2.5 times faster ( for a stack of 50 of our data frames ) .",
    "the flatfield image is converted to a gain map and bad pixels identified using gainmap.c .",
    "the data are flatfield corrected using flat.c .      for each data frame",
    ", a sky image is constructed from the robust mean of the 8 nearest frames in the observation sequence and subtracted ( skyfilter.c ) .",
    "objects detected in the coadded dither sets from the first pass reduction are masked out during sky frame creation in the second pass .",
    "the object masks are produced using the checkimage objects option to sextractor ( bertin and arnouts 1996 ) , which produces a fits image with non - object pixels set to 0 .",
    "this is simpler and more effective than building masks from a catalog of object coordinates and shape parameters .",
    "the object regions ( detection isophotes ) generated by sextractor are then expanded by a multiplicative factor of 1.5 ( using dilate.c ) , thereby growing the mask regions for large objects more than small objects .",
    "the object masks for individual frames are obtained on the fly using pixel offsets ( i.e. , the dither offsets ) into the master dither set masks .    running sky frame subtraction is normally a significant bottleneck in processing infrared imaging , so optimizations are important .",
    "to do running sky frame subtraction for a stack of n images , the program skyfilter.c uses a sliding window ( circular buffer of image pointers ) to only require n image reads and n image mode calculations .",
    "in contrast , putting this logic into a script normally involves n @xmath3 m image reads and mode calculations , where m is the width of the sky filter in frames .",
    "also , the disk i / o ( and storage ) for non - coadded data uses short integers ( 2 bytes deep ) , even though most calculations are done in floating point ( 4 bytes ) .",
    "some calculations work with short integer data however to allow optimizations .",
    "for example , the almost trivial distribution sort can be used to obtain an image histogram , sorted image array , and median value in @xmath4 time ( @xmath5 times faster than running an optimized median routine on our data images ) .",
    "a typical dither sequence consists of nine observations in a @xmath6 grid with offsets in each direction of @xmath7 arcsec .",
    "the approximate dither offsets stored in the fits header wcs information are refined using cross - correlation analysis ( offsets.c ) .",
    "the non - zero ( object ) pixels of the reference frame object mask ( sextractor objects image ) are stored in a pixel list ( x , y , brightness ) , and this list is cross - correlated against the object mask images of the following frames in the dither set .",
    "the sextractor objects image conveniently removes the background ( important for cross - correlation methods ) and identifies the object pixels more reliably than a simple thresholding algorithm ( e.g. , especially in images with a non - flat background , large noise , and cosmic rays ) . using an object list in the cross - correlation",
    "focuses on the pixels that contribute to the cross - correlation signal and is faster than cross - correlating two images .",
    "the cross - correlation technique uses coordinate , magnitude , and shape information , and was found to be more reliable than matching object coordinate lists ( the improvement was noticed in extreme cases , like galactic center images and nearly empty fields with an extended galaxy ) .",
    "a subpixel offset measurement accuracy of about @xmath8 pixels is obtained by fitting a parabola to the peak of the cross - correlation image . in terms of speed , this cross - correlation method was found to be @xmath9 times faster ( for typical survey data and a relatively large search box of 100 pixels ) than iraf stsdas crosscor . although the success rate is @xmath10% , failure is indicated by an offset measurement corresponding exactly to the border of the search area , or a small fraction of object pixels overlapping in the aligned data images .",
    "a weight map is generated on the fly for each data frame with the weight for pixel @xmath11 given by : @xmath12 , where @xmath13 is the gain for pixel @xmath11 ( 0.0 for bad pixels ) , @xmath14 is the exposure time , and @xmath15 is the image variance .",
    "the data frames and corresponding weight maps in the dither set are registered using bi - linear interpolation modified to account for bad pixels and image weights . each output ( interpolated ) pixel value @xmath16 is calculated from the weighted average of the four overlapping input pixels @xmath11 of the input ] where @xmath17 are the pre - calculated fractional areas of overlap of @xmath16 with @xmath11 , and @xmath18 are the image weights for @xmath11 .",
    "the weight maps are registered similarly but using a weighted sum to calculate the weight @xmath19 for pixel @xmath16 .",
    "a different registration method that people sometimes recommended is to replicate each pixel of an image into n x n pixels and do an integer shift in units of these new pixels .",
    "although this will approximate the above bi - linear interpolation scheme as n becomes large , it requires more work for less precision .",
    "we have not tested higher order interpolators ( e.g. , devillard 2000 ) , although our default approach is fast and reasonable , especially given the low signal - to - noise ratio of our individual data frames .",
    "the dither frames are combined by calculating the weighted mean pixel value at each @xmath20 position of the dither stack , with pixel values @xmath21 from the median at each position rejected .",
    "images borders are added during registration to avoid clipping the data to the intersection of the dither frames . the standard deviation ( @xmath22 ) at each position is calculated from @xmath23 , where mad is the median absolute deviation from the median ( we do not use a simpler method such as minmax rejection because we often take averages of small numbers of values , e.g. , 59 frames per dither set ) .",
    "the weight maps are combined by calculating the sum at each @xmath20 position of the stack of weight maps ( for pixels not clipped during coaddition ) .",
    "the program used for the above is dithercubemean.c .",
    "the current astrometry pipeline is a small perl script that runs sextractor to produce an object catalog for each coadded dither set , runs apmcat ( a stand - alone c program available from www.ast.cam.ac.uk/@xmath24apmcat/ ) to download over the network the apm sky coordinates of objects in each field of view , then runs imwcs from wcstools ( mink 1999 ) to calculate the astrometry fit and update the wcs information in the fits headers .",
    "the coadded dither sets and weight maps from different chips , telescope pointings , and nights are then drizzled onto a wide - field mosaic image using eis drizzle ( available from www.eso.org/eis ) .",
    "the astrometry residuals between the mosaic image and the apm catalogue show a random error of @xmath25 arcsec without significant systematic effects .",
    "beckett , m.g .",
    ", et al . 1996 , spie , 2871 , 1152 bertin , e. , and arnouts , s. 1996 , a&as , 117 , 393 devillard , n. 2000 , the messenger , 100 , 48 mackay , c.d .",
    ", et al .",
    "2001 , spie , 4008 , 1317 mccarthy , p. , et al .",
    "2001 , in eso `` deep field '' workshop , held in garching , germany , october 2000 , astro - ph/0011499 mink , d. , 1999 , in asp conf .",
    "172 , adass viii , eds .",
    "mehringer , r.l .",
    "plante & d.a .",
    "roberts ( san francisco : asp ) , 498 sabbey , c.n . , et al .",
    "2001 , in new era of wide field astronomy , held in preston , england , august 2000 , astro - ph/0012294"
  ],
  "abstract_text": [
    "<S> we describe the infrared data reduction ( irdr ) software package , a small ansi c library of fast image processing routines for automated pipeline reduction of infrared ( dithered ) observations . </S>",
    "<S> we developed the software to satisfy certain design requirements not met in existing packages ( e.g. , full weight map handling ) and to optimize the software for large data sets ( non - interactive tasks that are cpu and disk efficient ) . </S>",
    "<S> the software includes stand - alone c programs for tasks such as running sky frame subtraction with object masking , image registration and coaddition with weight maps , dither offset measurement using cross - correlation , and object mask dilation . </S>",
    "<S> although we currently use the software to process data taken with cirsi ( a near - ir mosaic imager ) , the software is modular and concise and should be easy to adapt / reuse for other work . </S>",
    "<S> irdr is available from anonymous ftp to ftp.ast.cam.ac.uk in pub / sabbey . </S>"
  ]
}
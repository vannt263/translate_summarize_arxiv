{
  "article_text": [
    "given a family of sets @xmath6 , a graph @xmath7 with vertex set @xmath8 and edge set @xmath9 is said to be an `` intersection graph of sets from @xmath6 '' if @xmath10 such that for distinct @xmath11 , @xmath12 .",
    "when @xmath6 is the set of all closed intervals on the real line , it defines the well - known class of interval graphs .",
    "@xmath0-interval _ is the union of @xmath0 intervals on the real line .",
    "when @xmath6 is the set of all @xmath0-intervals , it defines the class of graphs called _",
    "@xmath0-interval graphs_. this class was first defined and studied by trotter and harary  @xcite . given @xmath0 parallel lines ( or tracks ) , if each element of @xmath6 is the union of @xmath0 intervals on different lines , one defines the class of _",
    "@xmath0-track graphs_. it is easy to see that this class forms a subclass of @xmath0-interval graphs .    these classes of graphs received a lot of attention , for both their theoretical simplicity and their use in various fields like scheduling  @xcite or computational biology  @xcite .",
    "west and shmoys  @xcite showed that recognizing @xmath0-interval graphs for @xmath13 is np - complete .",
    "given a circle , the intersection graphs of arcs of this circle forms the class of _ circular arc graphs_. we introduce similar generalizations of circular arc graphs .",
    "if @xmath7 has an intersection representation using @xmath0 arcs on a circle per vertex , then @xmath7 is called a _",
    "@xmath0-circular interval _ graph .",
    "if instead , @xmath7 has an intersection representation using @xmath0 circles and exactly one arc on each circle corresponding to each vertex of @xmath7 , then @xmath7 is called a _",
    "@xmath0-circular track _ graph .",
    "note that in this case , the class of @xmath0-circular track graphs may not be a subclass of the class of @xmath0-circular interval graphs .",
    "one can see after cutting the circles , that @xmath0-circular interval graphs and @xmath0-circular track graphs are respectively contained in @xmath14- and @xmath15-interval graphs .",
    "for all these intersection families of graphs , one can define a subclass where all the intervals or arcs have the same length .",
    "we respectively call those subclasses _ unit @xmath0-interval _ , _ unit @xmath0-track _ , _ unit @xmath0-circular interval _ , and _",
    "unit @xmath0-circular track graphs_.    maximum weighted clique is the problem of deciding , given a graph @xmath7 with weighted vertices and an integer @xmath16 , whether @xmath7 has a clique of weight @xmath16 .",
    "the case where all the weights are 1 is maximum clique .",
    "zuckerman  @xcite showed that unless p = np , there is no polynomial time algorithm that approximates the maximum clique within a factor @xmath17 , for any @xmath18 .",
    "maximum clique has been studied for many intersection graphs families .",
    "it has been shown to be polynomial for interval filament graphs  @xcite , a graph class including circle graphs , chordal graphs and co - comparability graphs .",
    "it has been shown to be np - complete for @xmath19-vpg graphs  @xcite ( intersection of strings with one bend and axis - parallel parts  @xcite ) , and for segment graphs  @xcite ( answering a conjecture of kratochvl and neetil  @xcite ) .",
    "maximum clique is polynomial for interval graphs ( folklore ) and for circular interval graphs  @xcite",
    ". however , butman et al .",
    "@xcite showed that maximum clique is np - complete for @xmath0-interval graphs when @xmath1 .",
    "for @xmath0-track graphs , maximum clique is polynomial - time solvable when @xmath4 and np - complete when @xmath3  @xcite .",
    "butman et al . also showed a polynomial - time @xmath20 factor approximation algorithm for maximum clique in @xmath0-interval graphs .",
    "koenig  @xcite observed that a similar approximation algorithm with a slightly better approximation ratio @xmath21 exists for maximum clique in @xmath0-track graphs .",
    "butman et al .",
    "asked the following questions :    * is maximum clique np - hard in 2-interval graphs ? *",
    "is it apx - hard in @xmath0-interval graphs for any constant @xmath13 ? * can an algorithm with a better approximation ratio than @xmath20 be achieved for @xmath0-interval graphs ?",
    "we answer all of these questions in the affirmative .",
    "as far as the third question is concerned , kammer , tholey and voepel  @xcite have already presented an improved polynomial - time approximation algorithm that achieves an approximation ratio of @xmath5 for @xmath0-interval graphs . in this paper ( section  [ sec : approx ] ) , we present a linear time @xmath22-approximation algorithm , and a polynomial time @xmath0-approximation algorithm for maximum weighted clique in @xmath0-interval graphs ( and thus in @xmath0-track graphs ) , @xmath0-circular interval graphs , and @xmath0-circular track graphs . then we show in section  [ sec : apx - h ] that maximum clique is apx - complete for many of these families ( including 2-interval graphs ) . in section",
    "[ sec : np - h ] , we show that for some of the remaining classes ( including unit 2-interval graphs ) maximum clique is np - complete . in section  [ sec : comp ] we give some apx - hardness results for several problems restricted to the complement class of @xmath0-interval graphs .",
    "finally , we conclude with some remarks and open questions .",
    "consider a circle @xmath23 of length @xmath24 with a distinguished point @xmath25 .",
    "the coordinate of a point @xmath26 is the length of the arc going clockwise from @xmath25 to @xmath27 .",
    "given two reals @xmath27 and @xmath28 , @xmath29 $ ] is the arc of @xmath23 going clockwise from the point with coordinate @xmath27 to the one with coordinate @xmath28 . in the following ,",
    "coordinates are understood modulo @xmath24 .",
    "a _ representation _ of a @xmath0-interval graph @xmath7 is a set of @xmath0 functions , @xmath30 , assigning each vertex in @xmath8 to an interval of the real line . for @xmath0-track graphs we have @xmath0 lines @xmath31 , and",
    "each @xmath32 assigns intervals from @xmath33 .",
    "similarly , for a representation of @xmath0-circular interval graphs ( resp .",
    "@xmath0-circular track graphs ) we have a circle @xmath23 ( resp .",
    "@xmath0 circles @xmath34 ) and @xmath0 functions @xmath32 , assigning each vertex in @xmath8 to an arc of @xmath23 ( resp . of @xmath35 ) .",
    "the first approximation algorithms for the maximum clique in @xmath0-interval graphs and @xmath0-track graphs  @xcite are based on the fact that any @xmath0-interval representation ( resp . @xmath0-track representation ) of a clique admits a transversal ( i.e. a set of points touching at least one interval of each vertex ) of size @xmath36 ( resp .",
    "@xmath37 )  @xcite . scanning the representation of a graph @xmath7 from left to",
    "right ( in time @xmath38 ) one passes through the points of the transversal of a maximum clique @xmath39 of @xmath7 . at some of those points there",
    "are at least @xmath40 intervals forming a subclique of @xmath39 .",
    "thus , this gives an @xmath38-time @xmath41-approximation .",
    "butman et al .",
    "improved this ratio by 2 by considering every pair of points in the representation .",
    "the intervals at these points induce a co - bipartite graph , for which computing the maximum clique is polynomial ( as computing a maximum independent set of a bipartite graph is polynomial )",
    ". then one can see that this gives a polynomial time @xmath42-approximation algorithm .",
    "this actually gives a polynomial exact algorithm for the maximum clique in @xmath43-track graphs  @xcite , as @xmath44 in this case .",
    "for the other cases , kammer et al .",
    "@xcite greatly improved the approximation ratios from roughly @xmath45 to @xmath5 , using the new notion of @xmath16-perfect orientability . using transversal arguments",
    ", we can easily improve this ratio for some subclasses .",
    "a representation is _ balanced _ if for each vertex , all its intervals ( or arcs ) have the same length .    in any balanced @xmath0-interval ( resp .",
    "@xmath0-track , @xmath0-circular interval , or @xmath0-circular track ) representation of a clique , the @xmath22 interval extremities of the vertex with the smallest intervals form a transversal . thus , in those classes of graphs maximum clique admits a linear time @xmath22-approximation algorithm , and a polynomial time @xmath0-approximation algorithm .",
    "we shall now show how to achieve the same approximation ratio without restraining to balanced representations .",
    "[ thm : approx ] there is a linear time @xmath22-approximation algorithm , and a polynomial time @xmath0-approximation algorithm for maximum weighted clique on @xmath0-interval graphs , @xmath0-track graphs , @xmath0-circular interval graphs , and @xmath0-circular track graphs .",
    "the problem is polynomial when @xmath2 , we thus assume that @xmath46 .",
    "let us prove the theorem for @xmath0-interval graphs , the proofs for the other classes are exactly the same .",
    "let @xmath7 be a weighted @xmath0-interval graph with weight function @xmath47 on its vertices , and let @xmath39 be a maximum weighted clique of @xmath7 .",
    "let @xmath30 form a @xmath0-interval representation of @xmath7 such that for any vertex @xmath48 , @xmath49 $ ] .",
    "for any edge @xmath50 there exists a @xmath51 and a @xmath52 $ ] such that the point @xmath53 belongs to @xmath54 , or such that @xmath55 .",
    "one can thus orient and color the edges of @xmath7 in such a way that @xmath50 goes from @xmath56 to @xmath57 in color @xmath51 if @xmath58 for some @xmath59 . in @xmath39",
    "there is a vertex @xmath56 with more weight on its out - neighbors in @xmath39 than on its in - neighbors in @xmath39 .",
    "indeed , this comes from the fact that in the oriented graphs obtained from @xmath39 by replacing each vertex @xmath56 by @xmath47 vertices @xmath53 and by putting an arc @xmath60 if and only if there is an arc @xmath50 in @xmath39 , there is a vertex @xmath53 with @xmath61 , which is equivalent to @xmath62 .",
    "thus there exists two distinct values @xmath51 and @xmath59 such that @xmath56 has at least weight @xmath63 on its out - neighbors in color @xmath51 , and at least @xmath64 out - neighbors in color @xmath51 or @xmath59 .",
    "the vertex @xmath56 and its out - neighbors in a given color clearly induce a clique of @xmath7 ( they intersect at @xmath53 ) . thus scanning the representation from left to right looking for the point with the more weights",
    "gives a clique of weight at least @xmath65 , which is a @xmath22-approximation .",
    "then the graph induced by @xmath56 and its out - neighbors in color @xmath51 or @xmath59 being co - bipartite one can compute its maximum weighted clique in polynomial time ( as computing a maximum weighted independent set of a bipartite graph is polynomial ) .",
    "this clique has weight at least @xmath66 ( the weight of the subclique of @xmath39 induced by @xmath56 and its neighbors in color @xmath51 or @xmath59 ) .",
    "thus , for each vertex @xmath56 of the graph and any pair @xmath53 and @xmath67 of interval left end , if we compute the maximum weighted clique of the corresponding co - bipartite graph , we obtain a @xmath0-approximation .",
    "the complement of a graph @xmath7 is denoted by @xmath68 . given a graph @xmath7 on @xmath69 vertices with @xmath70 and @xmath71 , and a positive integer @xmath72 , we define @xmath73 to be the graph obtained by subdividing each edge of @xmath7 @xmath72 times . if @xmath74 and @xmath75 where @xmath76 , we define @xmath77 and @xmath78 ( as if @xmath79 and @xmath80 were respectively the left and the right end of @xmath81 ) . in the following we subdivide edges 2 or 4 times . in @xmath82 ( resp .",
    "@xmath83 ) , the vertices subdividing @xmath81 are @xmath84 and @xmath85 ( resp . @xmath86 and @xmath87 )",
    "and they are such that @xmath88 ( resp .",
    "@xmath89 ) is the subpath of @xmath82 ( resp .",
    "@xmath83 ) corresponding to @xmath81 . to prove apx - hardness results we need the following structural theorem , which is of independent interest .",
    "[ thm : subd ] given any graph @xmath7 ,    * @xmath90 is a 2-interval graph , * @xmath91 is a unit 3-interval graph , * @xmath91 is a 3-track graph , * @xmath91 is a unit 4-track graph , * @xmath91 is a unit 2-circular interval graph ( and thus a 2-circular interval graph ) , * @xmath91 is a 2-circular track graph , and * @xmath91 is a unit 4-circular track graph .",
    "furthermore , such representations can be constructed in linear time .    since",
    "maximum independent set is apx - hard even when restricted to degree bounded graphs  @xcite , chlebk and chelbkov  @xcite observed that maximum independent set is apx - hard even when restricted to @xmath92-subdivisions of 3-regular graphs for any fixed integer @xmath93 . taking the complement graphs , we thus have that maximum clique is apx - hard even when restricted to the set @xmath94 any graph @xmath95 , for any fixed integer @xmath93 .",
    "thus , since maximum clique is approximable for all the graph classes considered in theorem  [ thm : subd ] , we clearly have the next result .",
    "[ thm : apx ] maximum clique is apx - complete for :    * 2-interval graph , * unit 3-interval graph , * 3-track graph , * unit 4-track graph , * unit 2-circular interval graph ( and thus for 2-circular interval graphs ) , * 2-circular track graph , and * unit 4-circular track graph .    to prove that maximum clique is np - hard on @xmath19-vpg graphs , middendorf and pfeiffer  @xcite proved that for any graph @xmath7 , @xmath96-vpg .",
    "one can thus see that maximum clique is actually apx - hard for this class of graphs .",
    "we prove theorem  [ thm : subd ] in the following subsections .",
    "[ thm:2-int ] given any graph @xmath7 , @xmath90 is a 2-interval graph and a 2-interval representation for it can be constructed in linear time .",
    "recall that each edge @xmath75 of @xmath7 where @xmath76 , corresponds to the path @xmath97 in @xmath83 .",
    "we define the representation @xmath98 of @xmath90 as follows ( see also figure  [ fig:2i ] ) . for @xmath99 and @xmath100 :    @xmath101\\\\ i_1(x_i)&=&[mi , mn+mi]\\\\ i_2(a_k)&=&[mn+ml(k)+1,4mn+m - ml(k)-k+1]\\\\ i_1(b_k)&=&[m(l(k)-1)+k , mn+m - k]\\\\ i_1(c_k)&=&[mn+m - k+1,3mn+m - mr(k)-k+1]\\\\ i_1(d_k)&=&[3mn+m - mr(k)-k+2,4mn+mr(k)]\\\\ i_2(b_k)&=&[4mn+m - ml(k)-k+2,5mn+k]\\\\ i_2(x_i)&=&[4mn+mi+1,5mn+mi+1]\\\\ i_2(d_k)&=&[5mn+mr(k)+k+1,6mn+m+1]\\\\ i_2(c_k)&=&[5mn+k+1,5mn+mr(k)+k ] \\end{array } $ ]    . ]",
    "figure  [ fig:2i ] ( and the other figures of this kind ) should be understood in the following way .",
    "the leftmost block labeled @xmath84 corresponds to the intervals @xmath102 , and its shape , together with the label @xmath103 on the arrow mean that ,    * the left end of the intervals @xmath102 are the same ( coordinate 0 ) , and that * the right end of the intervals @xmath102 are ordered ( from left to right ) accordingly to @xmath104 , and in case of equality , accordingly to @xmath16 .    here",
    "we can see that this block is close to the blocks @xmath105 , and @xmath106 .",
    "the left end of the interval @xmath105 is also ordered ( from left to right ) accordingly to @xmath103 .",
    "such situation means that @xmath102 intersects every @xmath107 such that @xmath108 , i.e. such that @xmath109 or such that @xmath110 and @xmath111 .",
    "note that since , between @xmath112 and @xmath113 we have the opposite situation , for any vertex @xmath84 , @xmath84 is adjacent to every @xmath114 , except @xmath85 .    the left end of the interval @xmath106 is ordered ( from left to right ) accordingly to @xmath51 .",
    "such situation means that @xmath102 intersects every @xmath106 such that @xmath115 .",
    "note that since , between @xmath106 and @xmath112 we have the opposite situation , for any vertex @xmath84 , @xmath84 is adjacent to every @xmath79 , except @xmath116 .",
    "we claim that @xmath117 and @xmath118 together form a valid 2-interval representation for @xmath90 .",
    "one can check it with figure  [ fig:2i ] , but we give a full proof for this first construction .",
    "for any two vertices @xmath56 and @xmath57 of @xmath90 , we will show that @xmath50 is an edge of @xmath90 if and only if @xmath119 intersects @xmath120 .",
    "we first consider the case where @xmath50 is an edge .",
    "@xmath121 and @xmath122 @xmath123\\subseteq i_1(x_i ) \\cap i_1(x_j)$ ] .",
    "@xmath121 and @xmath124 , where @xmath125 if @xmath126 , then @xmath127 . if on the other hand , @xmath128 , then @xmath129",
    "@xmath121 and @xmath130 @xmath131 .",
    "@xmath121 and @xmath132 @xmath133 .",
    "@xmath121 and @xmath134 , where @xmath135 if @xmath136 , then @xmath137 and if @xmath138 , then @xmath139 .    @xmath140 and @xmath141 @xmath142 .",
    "@xmath140 and @xmath143 , where @xmath144 if @xmath145 , then @xmath146 and if @xmath147 , then @xmath148 .",
    "suppose @xmath110 .",
    "now , if @xmath149 , then @xmath150 and if @xmath151 , then @xmath152 .    @xmath140 and @xmath153 @xmath154 .",
    "@xmath140 and @xmath155 @xmath156 .",
    "@xmath157 and @xmath143 @xmath158 .",
    "@xmath157 and @xmath153 , where @xmath144 if @xmath159 , then @xmath160 .",
    "@xmath157 and @xmath155 @xmath161 .",
    "@xmath162 and @xmath153",
    "@xmath163\\subseteq i_1(c_k)\\cap i_1(c_{k'})$ ] .",
    "@xmath162 and @xmath155 , where @xmath144 if @xmath164 , then @xmath165 and if @xmath166 , then @xmath167 .",
    "suppose @xmath168 .",
    "now , if @xmath159 , @xmath169 and if @xmath149 , then @xmath170 .",
    "@xmath171 and @xmath155 @xmath172 .",
    "let us now consider the case where @xmath50 is not an edge . in particular , let us show that @xmath173 , where @xmath174<[v , v']$ ] means that @xmath175 .",
    "@xmath121 and @xmath124 , where @xmath77 @xmath176 .",
    "@xmath121 and @xmath134 , where @xmath177 @xmath178 .",
    "@xmath140 and @xmath130 @xmath179 .",
    "@xmath157 and @xmath132 @xmath180 .",
    "@xmath162 and @xmath134 @xmath181 .",
    "therefore , we have a valid 2-interval representation of @xmath90 and this representation can obviously be constructed in linear time .    ' '' ''      [ thm : unit-3-int ] given any graph @xmath7 , @xmath91 is a unit 3-interval graph and a unit 3-interval representation for it can be constructed in linear time .",
    "recall that each edge @xmath75 of @xmath7 where @xmath76 , corresponds to the path @xmath182 in @xmath82 .",
    "we define @xmath117 , @xmath118 and @xmath183 as follows ( see also figure  [ fig : u3i ] ) . here again , @xmath99 and @xmath100 .",
    "@xmath184\\\\ i_1(a_k)&=&[m(l(k)-1)+m^2+k+1,m(l(k)-1)+2m^2+k+1]\\\\ i_1(x_i)&=&[mi+2m^2 + 2,mi+3m^2 + 2]\\\\ i_2(b_k)&=&[mr(k)+3m^2+k+2,mr(k)+4m^2+k+2]\\\\ i_2(x_i)&=&[mi+4m^2+m+3,mi+5m^2+m+3]\\\\ i_2(a_k)&=&[ml(k)+5m^2+m+k+3,ml(k)+6m^2+m+k+3]\\\\ i_3(b_k)&=&[ml(k)+6m^2+m+k+4,ml(k)+7m^2+m+k+4]\\\\ i_3(a_k)&=&[15m^2,16m^2]\\\\ i_3(x_i)&=&[17m^2,18m^2 ] \\end{array } $ ]    .",
    "]    this representation can be constructed in linear time and it is easy to verify that @xmath117 , @xmath118 and @xmath183 assign intervals of length @xmath185 to the vertices of @xmath91",
    ". then one can also easily check in the figure that this is a valid unit 3-interval representation of @xmath91 .    ' '' ''      [ thm:3-track ] given any graph @xmath7 , @xmath91 is a 3-track graph and a 3-track representation for it can be constructed in linear time .",
    "we define a 3-track representation for @xmath91 as follows ( see also figure  [ fig:3 t ] ) . for @xmath99 and @xmath186 :    @xmath187\\\\ i_1(x_i)&=&[i+1,n+i+1]\\\\ i_1(b_k)&=&[n+r(k)+2,2n+3]\\\\ i_2(x_i)&=&[0,i]\\\\ i_2(a_k)&=&[l(k)+1,n+k]\\\\ i_2(b_k)&=&[n+k+1,m+n+2]\\\\ i_3(a_k)&=&[0,m+1-k]\\\\ i_3(b_k)&=&[m+2-k , m+r(k)]\\\\ i_3(x_i)&=&[m+i+1,m+n+2 ] \\end{array } $ ]    . ]",
    "this representation can be constructed in linear time and one can easily check in the figure that this is a valid 3-track representation of @xmath91 .    ' '' ''      [ thm : unit-4-track ] given any graph @xmath7 , @xmath91 is a unit 4-track graph and a unit 4-track representation for it can be constructed in linear time .",
    "we define @xmath117 , @xmath118 , @xmath183 and @xmath188 as follows ( see also figure  [ fig : u4 t ] ) . as usual , @xmath99 and @xmath100 .",
    "@xmath189\\\\ i_1(x_i)&=&[mi+m^2 + 1,mi+2m^2 + 1]\\\\ i_1(b_k)&=&[2m^2+mr(k)+k+1,3m^2+mr(k)+k+1]\\\\ i_2(b_k)&=&[m(r(k)-1)+k , m(r(k)-1)+m^2+k]\\\\ i_2(x_i)&=&[mi+m^2 + 1,mi+2m^2 + 1]\\\\ i_2(a_k)&=&[2m^2+ml(k)+k+1,3m^2+ml(k)+k+1]\\\\ i_3(a_k)&=&[k , k+m^2]\\\\ i_3(b_k)&=&[k+m^2 + 1,k+2m^2 + 1]\\\\ i_3(x_i)&=&[5m^2,6m^2]\\\\ i_4(b_k)&=&[k , k+m^2]\\\\ i_4(a_k)&=&[k+m^2 + 1,k+2m^2 + 1]\\\\ i_4(x_i)&=&[5m^2,6m^2 ] \\end{array } $ ]",
    ". ]    this representation can be constructed in linear time and it is easy to verify that @xmath117 , @xmath118 , @xmath183 and @xmath188 assign intervals of length @xmath185 to the vertices of @xmath91 .",
    "then one can also easily check in the figure that this is a valid unit 4-track representation of @xmath91 .    ' '' ''      [ thm : unit-2-circint ] given any graph @xmath7 , @xmath91 is a unit 2-circular interval graph and a unit 2-circular interval representation for it can be constructed in linear time .",
    "let @xmath23 be a circle of circumference @xmath190 .",
    "the mappings @xmath117 and @xmath118 , which map @xmath8 to arcs on this circle , are defined as follows ( see also figure  [ fig : u2ci ] ) .",
    "@xmath191\\\\ i_1(a_k)&=&[m(l(k)-1)+m^2+k+1,m(l(k)-1)+2m^2+k+1]\\\\ i_1(x_i)&=&[mi+2m^2 + 2,mi+3m^2 + 2]\\\\ i_2(b_k)&=&[mr(k)+3m^2+k+2,mr(k)+4m^2+k+2]\\\\ i_2(x_i)&=&[mi+4m^2+m+3,mi+5m^2+m+3]\\\\ i_2(a_k)&=&[ml(k)+5m^2+m+k+3,ml(k)+6m^2+m+k+3 ] \\end{array } $ ]    . ]",
    "note that this representation is almost the same as the unit 3-interval representation given for @xmath91 in the proof of theorem  [ thm : unit-3-int ] , the only difference being that @xmath105 and @xmath192 have now been fused to form @xmath105 of the unit 2-circular interval representation being constructed .",
    "this representation can be constructed in linear time and it is easy to verify that the arcs have length @xmath185",
    ". then one can also easily check in the figure that this is a valid unit 2-circular interval representation of @xmath91 .    ' '' ''      [ thm:2-circtrack ] given any graph @xmath7 , @xmath91 is a 2-circular track graph and a 2-circular track representation for it can be constructed in linear time .",
    "we define a 2-circular track representation using circles @xmath193 and @xmath194 , each having circumference at least @xmath195 , and mappings @xmath117 and @xmath118 defined as follows ( see also figure  [ fig:2ct ] ) .",
    "@xmath196\\\\ i_1(a_k)=[l(k)+n+1,l(k)+2n]\\\\ i_1(b_k)=[l(k)+2n+1,r(k)-1]\\\\ i_2(x_i)=[i , i+n]\\\\ i_2(b_k)=[r(k)+n+1,r(k)+2n]\\\\ i_2(a_k)=[r(k)+2n+1,l(k)-1 ] \\end{array } $ ]    . ]    clearly , this representation can be constructed in linear time , and as before , it can be checked that the circles @xmath193 and @xmath194 together with the mappings @xmath117 and @xmath118 form a valid 2-circular track representation of @xmath91 .    ' '' ''",
    "valiant  @xcite has shown that every planar graph of degree at most 4 can be drawn on a grid of linear size such that the vertices are mapped to points of the grid and the edges to piecewise linear curves made up of horizontal and vertical line segments whose endpoints are also points of the grid .",
    "it is immediately clear that every planar graph @xmath7 has a subdivision @xmath197 that is an induced subgraph of a grid graph such that each edge of @xmath7 corresponds to a path of length at most @xmath198 ( see figure  [ fig : embed ] ) .",
    "note that here , some paths have even length and some have odd length .",
    "an _ even subdivision _",
    "_ odd subdivision _ ) of @xmath7 is a graph obtained from @xmath7 by subdividing each edge @xmath199 of @xmath7 an even ( resp .",
    "odd ) number of times , and at most @xmath200 times .",
    "koenig  @xcite explains that 2-track graphs have a polynomial - time algorithm for maximum clique because for any 2-track representation of a clique , there is a transversal of size 2 ( i.e. two points such that for every vertex , at least one of its intervals contains one of these points ) .",
    "we note that this is not true for unit 2-circular track graphs as the complete graph on 5 vertices has a unit 2-circular track representation in which each circular track induces a cycle on 5 vertices .",
    "this representation clearly does not have a transversal of size 2 .",
    "yonatan aumann , moshe lewenstein , oren melamud , ron y. pinter , and zohar yakhini .",
    "dotted interval graphs and high throughput genotyping . in _ proc . of the 16th annual symposium on discrete algorithms",
    "_ , soda 05 , 339348 , 2005 .",
    "piotr berman , and toshihiro fujito . on approximation properties of the independent set problem for degree 3 graphs . in _ proceedings of the 4th workshop on algorithms and data structures _ , wads 95 , lncs vol .",
    "955 , springer - verlag , pages 449460 , 1995 .",
    "ayelet butman , danny hermelin , moshe lewenstein , and dror rawitz .",
    "optimization problems in multiple - interval graphs . in _ proceedings of the eighteenth annual acm - siam symposium on discrete algorithms",
    "_ , soda 07 , pages 268277 , 2007 .",
    "maxime crochemore , danny hermelin , gad landau , dror rawitz , and stphane vialette . approximating the 2-interval pattern problem . in _ proc . of the 13th annual european symposium on algorithms",
    "_ , esa 05 , 426437 , 2005 .",
    "frank kammer , torsten tholey , and heiko voepel .",
    "approximation algorithms for intersection graphs . in _ proceedings of the 13th international workshop on approximation algorithms for combinatorial optimization problems and 14th international workshop on randomization and computation _ , approx / random10 , pages 260273 , berlin , heidelberg , 2010 .",
    "springer - verlag ."
  ],
  "abstract_text": [
    "<S> multiple interval graphs are variants of interval graphs where instead of a single interval , each vertex is assigned a set of intervals on the real line . </S>",
    "<S> we study the complexity of the maximum clique problem in several classes of multiple interval graphs . </S>",
    "<S> the maximum clique problem , or the problem of finding the size of the maximum clique , is known to be np - complete for @xmath0-interval graphs when @xmath1 and polynomial - time solvable when @xmath2 . the problem is also known to be np - complete in @xmath0-track graphs when @xmath3 and polynomial - time solvable when @xmath4 . </S>",
    "<S> we show that maximum clique is already np - complete for unit 2-interval graphs and unit 3-track graphs . </S>",
    "<S> further , we show that the problem is apx - complete for 2-interval graphs , 3-track graphs , unit 3-interval graphs and unit 4-track graphs . </S>",
    "<S> we also introduce two new classes of graphs called @xmath0-circular interval graphs and @xmath0-circular track graphs and study the complexity of the maximum clique problem in them . on the positive side , </S>",
    "<S> we present a polynomial time @xmath0-approximation algorithm for weighted maximum clique on @xmath0-interval graphs , improving earlier work with approximation ratio @xmath5 . </S>"
  ]
}
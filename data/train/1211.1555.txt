{
  "article_text": [
    "it is well - known that in any symmetric monoidal category , there are useful intrinsic notions of _ duality _ and _ trace _ ; see , for example ,  @xcite .",
    "one of the original motivating examples is that traces in the stable homotopy category compute fixed - point indices , an observation which leads directly to the lefschetz fixed point theorem .",
    "the search for generalizations and converses of the lefschetz fixed point theorem has led to various generalizations and refinements of the fixed - point index , such as the reidemeister trace  @xcite . in this paper",
    "we present an abstract framework for constructing refinements of traces in symmetric monoidal categories , which produces the reidemeister trace as a particular example .",
    "other examples , which we will not discuss here , include equivariant  @xcite , relative  @xcite , and fiberwise  @xcite generalizations of the lefschetz number and reidemeister trace .",
    "these refinements arise from generalizations of duality and trace to _ indexed _",
    "symmetric monoidal categories .",
    "an indexed symmetric monoidal category is a family of symmetric monoidal categories @xmath0 , one for each object @xmath1 of a cartesian monoidal base category @xmath2 , equipped with base change functors induced by the morphisms of @xmath2 .",
    "the simplest case is when @xmath2  is the category of sets and @xmath0 the category of @xmath1-indexed families of objects of some fixed symmetric monoidal category , such as abelian groups or chain complexes .",
    "we can also allow @xmath2  to consist of groupoids or higher groupoids .",
    "the prototypical example in homotopy theory , which will give rise to the reidemeister trace , is when @xmath2  is the category of topological spaces and @xmath0 is the homotopy category of parametrized spectra over @xmath1 , as in  @xcite .",
    "more generally , @xmath2  could be any category of spaces , or of schemes , or a topos , and @xmath0 a category of sheaves of abelian groups , modules , spaces , or parametrized spectra on @xmath1 , or a derived category thereof .    in any such context",
    "we can , of course , consider duality and trace in the individual symmetric monoidal categories @xmath0 .",
    "following  @xcite we call these notions _ fiberwise _ , since in examples they are usually equivalent to duality and trace acting on each fiber or stalk separately .",
    "thus , if @xmath3 is fiberwise dualizable , any endomorphism @xmath4 has a fiberwise trace , which is an endomorphism of the unit object @xmath5 of @xmath0 . in examples ,",
    "this trace essentially calculates the ordinary traces of the induced endomorphisms @xmath6 of the fibers @xmath7 , for all @xmath8 .",
    "our first theorem gives a refinement of this fiberwise symmetric monoidal trace .",
    "[ thm : intro - fiberwise ] if @xmath9 is fiberwise dualizable and @xmath4 is any endomorphism , then the symmetric monoidal trace of @xmath10 factors as a composite @xmath11{$\\langle$ }       \\makebox[0mm]{$\\langle$}\\hspace{1mm}{a}\\makebox[1mm]{$\\rangle$ }       \\makebox[0mm]{$\\rangle$ } } } } \\xto{{\\ensuremath{\\operatorname{tr}}}(\\widehat{f } ) } i_a.\\ ] ]    ( in fact , we prove a stronger theorem about `` partial traces '' whose domains and codomains are `` twisted '' by an additional object . )    the first morphism in this factorization is defined purely in terms of @xmath1 , while the second morphism contains the information about @xmath3 and @xmath10 .",
    "thus , this theorem refines @xmath12 by lifting its domain to a potentially larger one . in examples ,",
    "the refined trace @xmath13 also includes the traces of the composites of the fiberwise endomorphisms @xmath14 with the action of `` loops '' in @xmath1 on the fibers of @xmath3 ( in cases where @xmath1 is something which contains loops , like a groupoid or a topological space ) .",
    "often , however , we are in a somewhat different situation : we want to extract trace - like information ( such as fixed point invariants ) from an endomorphism @xmath15 in some _ cartesian _ monoidal category @xmath2 , such as sets , groupoids , or spaces .",
    "since there are no nontrivial dualities in a cartesian monoidal category , the standard approach is to choose a non - cartesian monoidal category @xmath16  ( such as abelian groups , chain complexes , or spectra ) , apply a functor @xmath17 ( such as the free abelian group or suspension spectrum ) , and then consider the symmetric monoidal trace of @xmath18 in @xmath16 .",
    "the trace obtained from the free abelian group functor in this way simply counts the number of fixed points of a set - endofunction , while that obtained from the suspension spectrum functor is exactly the classical fixed - point index .",
    "now , it turns out that in most examples where this is done , there is actually an indexed symmetric monoidal category over @xmath2 , such that @xmath19 is the category indexed by the terminal object of @xmath2 .",
    "moreover , the functor @xmath20 is definable in terms of this structure : @xmath21 is the `` pushforward '' to @xmath22 of the unit object of @xmath0 .",
    "for example , the free abelian group functor arises from `` set - indexed families of abelian groups '' , and the suspension spectrum functor arises from spectra parametrized over spaces .",
    "our second theorem gives a refinement of the trace of @xmath18 in this situation .",
    "we need a slightly stronger hypothesis , however : rather than requiring @xmath21 to be dualizable in @xmath22 ( the requirement in order for @xmath18 to have a trace ) , we need to assume that @xmath5 is _ totally dualizable _ in @xmath0 .",
    "total duality is a new type of duality , not reducible to symmetric monoidal duality , which can be defined in any good indexed symmetric monoidal category ; it was first noticed in the case of parametrized spectra by costenoble and waner  @xcite , and studied further in  @xcite .",
    "total dualizability of @xmath5 implies ordinary dualizability of @xmath21 in @xmath22 , and in examples it seems to be not much stronger than this ( if at all ) .    [ thm : intro - total ] if @xmath5 is totally dualizable and @xmath23 is an endomorphism in @xmath2 , then the symmetric monoidal trace of @xmath18 factors as a composite @xmath24{$\\langle$ }       \\makebox[0mm]{$\\langle$}\\hspace{1mm}{a_f}\\makebox[1mm]{$\\rangle$ }       \\makebox[0mm]{$\\rangle$ } } } } { \\ensuremath{\\overset{}{\\longrightarrow}}}i_\\star.\\ ] ]    here , it is the _ first _ morphism in the factorization which should be regarded as a refined trace of @xmath10 , while the second morphism forgets the additional information contained therein ( although in this case , the intermediate object @xmath25{$\\langle$ }       \\makebox[0mm]{$\\langle$}\\hspace{1mm}{a_f}\\makebox[1mm]{$\\rangle$ }       \\makebox[0mm]{$\\rangle$}}}}$ ] also depends on @xmath10 ) . in examples ,",
    "the object @xmath25{$\\langle$ }       \\makebox[0mm]{$\\langle$}\\hspace{1mm}{a_f}\\makebox[1mm]{$\\rangle$ }       \\makebox[0mm]{$\\rangle$}}}}$ ] is `` generated by '' the `` fixed - point classes '' of @xmath10 , and the refined trace @xmath26 separates out the contributions to the fixed - point index of @xmath10 depending on which fixed - point class they belong to . in particular ,",
    "in the case of spectra parametrized over spaces , we obtain the reidemeister trace , and says that the reidemeister trace refines the fixed - point index .    as with , is a special case of a stronger theorem about `` partial traces '' and arbitrary totally dualizable objects .",
    "we can also exploit this generalization to describe a further connection to the classical symmetric monoidal theory .",
    "perhaps the most important `` partial '' or `` twisted '' trace is the trace of the composite @xmath27 which is a map @xmath28 called the * transfer of @xmath10 * ( or the `` trace of @xmath10 with respect to @xmath29 '' ) .",
    "the transfer of @xmath10 is also a refinement of @xmath30 , in that when composed with the augmentation @xmath31 it reproduces the symmetric monoidal trace of @xmath10 .",
    "the generalized version of then implies that @xmath26 refines not only @xmath30 , but also the trace of @xmath10 with respect to @xmath29 .",
    "[ thm : intro - total2 ] in the situation of , the transfer of @xmath10 factors as a composite @xmath24{$\\langle$ }       \\makebox[0mm]{$\\langle$}\\hspace{1mm}{a_f}\\makebox[1mm]{$\\rangle$ }       \\makebox[0mm]{$\\rangle$ } } } } { \\ensuremath{\\overset{}{\\longrightarrow}}}\\sigma(a).\\ ] ]    although they may seem different on the surface , theorems [ thm : intro - fiberwise ] and [ thm : intro - total][thm : intro - total2 ] actually apply in _ formally dual _ situations ( although their conclusions and proofs are not dual ) .",
    "this observation is originally due to may and sigurdsson  @xcite , who constructed a _",
    "bicategory _ out of parametrized spectra , and identified fiberwise and costenoble - waner duality as cases of the general notion of duality in this bicategory ( which comes in dual flavors , since composition in a bicategory is not symmetric ) . in  @xcite ,",
    "the second author generalized their construction to any indexed symmetric monoidal category .",
    "part of proving the above theorems , therefore , will be to extend the results of  @xcite on duality to the case of a general indexed symmetric monoidal category .",
    "the consideration of _ traces _ for bicategorical duality , on the other hand , requires an additional structure called a _ shadow _ , introduced by the first author in  @xcite and studied further in  @xcite .",
    "thus , another necessary preliminary will be to prove that the bicategory arising from any indexed symmetric monoidal category has a canonical shadow .",
    "this done , we will be able to identify the morphisms @xmath13 and @xmath26 as traces relative to the bicategorical incarnations of fiberwise and total duality , respectively , and deduce theorems [ thm : intro - fiberwise ] , [ thm : intro - total ] , and [ thm : intro - total2 ] .",
    "finally , there is one further ingredient in this paper : the use of a _ string diagram _ calculus for indexed monoidal categories . in general ,",
    "string diagram calculus is a `` poincar dual '' way of drawing composition in categorical structures , which tends to make complicated computations much more visually evident . in particular , many basic equalities , such as the naturality of tensor products ,",
    "are realized by simple isotopies .",
    "string diagrams for monoidal categories and bicategories are described in  @xcite , and a generalization for bicategories with shadows was given in  @xcite .",
    "several of the results of this paper require fairly involved computations which are made much more tractable by an appropriate string diagram calculus .",
    "however , for clarity of exposition , we postpone the introduction of string diagrams ( along with the proofs which depend on them , of course ) to the very end of the paper .",
    "thus , the reader can avoid string diagrams altogether by stopping after  [ sec : total ] .",
    "the organization of this paper is as follows . in   [ sec : shad - from - mono][sec : indexed - coproducts ] we introduce indexed symmetric monoidal categories . then in  [ sec : smc - traces ] we recall the classical notion of trace in symmetric monoidal categories , and construct the functor @xmath32 referred to above . in  [",
    "sec : shadows ] we describe the construction of a bicategory with a shadow from an indexed symmetric monoidal category .    in  [ sec : fiberwise ] we state the `` fiberwise '' duality and trace theorems and its generalizations  although the proofs are postponed until ",
    "[ sec : fiberwise - proofs ] .",
    "next ,  [ sec : base - change ] is devoted to the consideration of `` base change objects '' , an additional bit of structure that exists in bicategories arising from indexed monoidal categories .",
    "this is then used in ",
    "[ sec : total ] , where we state and prove the `` total '' duality and trace theorems , [ thm : intro - total ] and [ thm : intro - total2 ] and their generalizations .",
    "the proofs in this case are actually easier than the fiberwise case , although some calculations still have to be postponed to ",
    "[ sec : tdproofs ] .    finally , in ",
    " [ sec : string - diagrams][sec : colored - strings ] we introduce our string diagram calculus , and in   [ sec : fiberwise - proofs][sec : tdproofs ] we apply it to the postponed calculations .    throughout the paper , we make use of three primary examples :    1 .   @xmath33 sets , @xmath34 @xmath1-indexed families of abelian groups",
    "@xmath33 topological spaces , @xmath34 spectra parametrized over @xmath1 .",
    "@xmath33 groupoids , @xmath34 @xmath1-indexed diagrams of chain complexes .",
    "the first is a `` toy '' example , which is easy to compute with , but which is so degenerate that it fails to display all of the interesting phenomena .",
    "the second is the motivating example which matters most in applications ( together with various generalizations ) , but it is technically fairly complicated , so we omit all proofs relating to it ; many of them can be found in  @xcite .",
    "( in particular , no knowledge of spectra is necessary to read this paper . )",
    "the third is an intermediate example which is easier to understand , but which still displays most of the interesting phenomena .",
    "we would like to thank david corfield , todd trimble , and daniel schppi for helpful suggestions about string diagrams and monoidal bicategories .",
    "the second - named author gratefully acknowledges the hospitality of the university of kentucky .",
    "we begin with the following standard definition ( cf .  for instance  @xcite or  ( * ? ? ? * b1.2 ) ) .",
    "let @xmath2  be a category .",
    "an * @xmath2-indexed category * @xmath35  is a pseudofunctor from @xmath36 to @xmath37 .    in elementary terms , this means we have a category for each object @xmath38 , which we write as @xmath0 , and a functor for each morphism @xmath39 in @xmath2 , which we write as @xmath40 , such that composition and identities are preserved up to coherent natural isomorphism .",
    "we sometimes refer to @xmath2  as the _ base category _ and the @xmath0 as the _ fiber categories _ , and we refer to the functors @xmath41 as _ reindexing functors_.    [ eg : ring - ind - mod ] if @xmath42 is the category of rings , there is an @xmath2-indexed category sending a ring @xmath1 to @xmath43 , with @xmath41 given by restriction of scalars .",
    "there are similar examples using chain complexes , dgas , or ring spectra .",
    "[ eg : families ] for any category @xmath16 , there is a @xmath44-indexed category sending each set @xmath1 to the category @xmath45 of @xmath1-indexed families of objects of @xmath16 .",
    "[ eg : spaces - over - spaces ] if @xmath2  has finite limits , then there is an @xmath2-indexed category sending each object @xmath1 to its slice category @xmath46 , with the functors @xmath41 given by pullback .    in the important special case",
    "when @xmath2  is the category @xmath47  of topological spaces , we also have a `` homotopy '' version @xmath48 , in which we invert the weak homotopy equivalences in each fiber category .",
    "see  @xcite for an extensive formal development of this example .",
    "similar examples can be constructed whenever @xmath2  has a `` homotopy theory '' ( e.g.  when it is a quillen model category ) .",
    "`` derived '' examples such as the last one are of particular interest to us . here",
    "are two more such examples .",
    "[ eg : spectra - over - spaces ] if @xmath47  denotes a suitably nice category of topological spaces , there is a @xmath47-indexed category defined by @xmath49 , where @xmath50 denotes a point - set  level category of spectra parametrized over @xmath1 , such as the parametrized orthogonal spectra used in  @xcite .",
    "we can similarly invert the weak equivalences of spectra to obtain a derived @xmath47-indexed category @xmath51 .",
    "[ eg : derived - families ] if the category @xmath16  in has a homotopy theory , then we can pass to homotopy categories in that example to obtain another @xmath44-indexed category @xmath52 .",
    "however , since @xmath53 for any set @xmath1 , we gain no extra generality thereby .",
    "we will see in later sections that qualitatively different phenomena arise in `` derived '' situations , when the base category @xmath2  also has a `` homotopy theory '' which is taken into account somehow in the fibers .",
    "this is the case in examples  [ eg : spaces - over - spaces ] and  [ eg : spectra - over - spaces ] , but not in . since examples  [ eg : spaces - over - spaces ] and  [ eg : spectra - over - spaces ] are somewhat technically complicated , it will be useful to have a simpler example which exhibits some of the same derived phenomena .",
    "we can obtain such examples by replacing spaces by groupoids ( which , up to homotopy , can be identified with homotopy 1-types ) .",
    "[ eg : gpds ] if @xmath54 is the category of groupoids and @xmath16  is any category , we can define @xmath55 to be the category of functors from the groupoid @xmath1 to @xmath16 . for simplicity , we usually take @xmath16  to be abelian groups .",
    "this is an enlargement of , if we consider sets as discrete groupoids . on the other hand ,",
    "if @xmath1 is a one - object groupoid , i.e. a group @xmath56 , then @xmath57 can be identified with the category of modules over the group ring @xmath58 $ ] .",
    "[ eg : hogpds ] we have `` derived phenomena '' in even when @xmath16  does not have its own homotopy theory , because the construction automatically `` sees '' the homotopy theory of groupoids .",
    "( for instance , we have @xmath59 whenever @xmath60 are _ equivalent _ groupoids , not only when they are isomorphic )",
    ". however , we can also `` derive it further '' if @xmath16  _ does _ have a homotopy theory , obtaining a @xmath61-indexed category with @xmath62 , where we invert the objectwise weak equivalences in @xmath45 . to maximize concreteness and familiarity , we may take @xmath63 to be the category of ( unbounded ) chain complexes , with its usual homotopy theory .    note",
    "that in contrast to , when @xmath1 is not discrete , @xmath52 will generally be different from @xmath64 .",
    "thus , this example is genuinely different from .    now in most of these examples , each category @xmath0 has a monoidal structure , which is respected by the transition functors .",
    "namely :    * if @xmath16  is a monoidal category ( such as @xmath65  or @xmath66 with tensor product ) , then so is @xmath45 for any set or groupoid @xmath1 ; * when @xmath2  has finite limits , each slice category @xmath46 is cartesian monoidal ; * each category @xmath50 has a parametrized smash product ; and * all of these monoidal structures descend to homotopy categories .",
    "this `` fiberwise '' monoidal structure is simply described by the following definition .    for a category @xmath2 ,",
    "an * @xmath2-indexed symmetric monoidal category * is a pseudofunctor from @xmath36 to the 2-category @xmath67  of symmetric monoidal categories , strong symmetric monoidal functors , and monoidal natural transformations .    in elementary terms",
    ", this means an indexed category such that each @xmath0 is a symmetric monoidal category , each reindexing functor is strong symmetric monoidal , and each constraint isomorphism is a monoidal transformation .",
    "we write @xmath68 and @xmath5 for the tensor product and unit object of the monoidal category @xmath0 , and refer to them as the _ fiberwise _ monoidal structure .    however , for many purposes it is more effective to express the monoidal structure differently .",
    "if @xmath2  has finite products , including a terminal object @xmath69 , then in any @xmath2-indexed monoidal category @xmath35we can define an _ external product _",
    "functor @xmath70 ( here @xmath71 and @xmath72 are the projections from the cartesian product . ) this external product is coherently associative and unital , in a suitable sense ( see  @xcite ) , with unit object @xmath73 .",
    "moreover , we can recover the fiberwise monoidal structures ( or _ internal products _ ) from the external products , via the isomorphisms @xmath74 ( here @xmath75 is the diagonal of the cartesian product . )",
    "these hold for any @xmath38 and @xmath76 , by monoidality of the functors @xmath41 . in the same way we can construct natural isomorphisms @xmath77 for any @xmath78 for which this makes sense .",
    "if @xmath16  is a symmetric monoidal category , then in the @xmath44-indexed symmetric monoidal category @xmath79 of , the fiberwise product of @xmath80 and @xmath81 in @xmath45 is defined by @xmath82 whereas the external product of @xmath83 and @xmath84 is defined by @xmath85 the case of is similar . note that if @xmath1 is one - object groupoid , hence a group @xmath56 , and we identify @xmath57 with the category of @xmath58$]-modules , then its fiberwise monoidal structure is the tensor product over @xmath86 , made into a @xmath58$]-module using the fact that @xmath58 $ ] is a bialgebra .",
    "it is _ not _ a tensor product over @xmath58 $ ] , which would nt make sense anyway since @xmath58 $ ] is not commutative .",
    "if @xmath2  has finite limits , then in the @xmath2-indexed symmetric monoidal category @xmath87 of , the fiberwise product of @xmath88 is their fiber product ( pullback ) : @xmath89 whereas the external product of @xmath90 and @xmath91 is just their cartesian product , with the induced projection to @xmath92 : @xmath93 the case of is similar , with cartesian products replaced by smash products .",
    "both the fiberwise and external products of parametrized spectra are used in  @xcite .",
    "when the base category @xmath2  is monoidal but not cartesian monoidal , we can still define `` an external product '' for @xmath35  to consist of functors @xmath94 which are coherently associative and unital .",
    "for instance , has an external product , but not an internal one .",
    "however , our interest here is solely in the case when @xmath2  is cartesian monoidal .",
    "in order to construct a bicategory from an indexed symmetric monoidal category , and thereby prove our refinements of the symmetric monoidal trace , we will need one further piece of structure .",
    "[ def : indcoprod ] let @xmath2  be a cartesian monoidal category , and @xmath35  an @xmath2-indexed category .",
    "we say that @xmath35  has * @xmath2-indexed coproducts * if    1 .",
    "each reindexing functor @xmath41 has a left adjoint @xmath95 , and 2 .   for any pullback square @xmath96^f\\ar[d]_h & b \\ar[d]^g\\\\        c\\ar[r]_k & d}\\ ] ] in @xmath2 , the composite",
    "@xmath97 is an isomorphism ( the _ beck - chevalley condition _ ) .",
    "if @xmath35  is symmetric monoidal , we say that * @xmath98 preserves indexed coproducts * ( in each variable separately ) , or that the * projection formula holds * , if    1 .   for any @xmath39 in @xmath2  and any @xmath99 , @xmath100 , the canonical map @xmath101 is an isomorphism . is not symmetric",
    ", we must assert also the analogous condition on the other side.][item : prescoprod ]    we will only use the beck - chevalley condition for a few types of pullback squares .",
    "the basic such squares are shown in figure  [ fig : pullbacks ] .",
    "( these are all actually pullback squares in any cartesian monoidal category , whether or not it has pullbacks in general .",
    "see also  @xcite . )",
    "we will also consider the transposes of figures  [ fig : frobpb ] and  [ fig : slidpb ] , as well as squares obtained from one of these by taking a cartesian product with a fixed object .    for ease of reference",
    ", we have assigned a name to each of these beck - chevalley conditions .",
    "we call figure  [ fig : reindpb ] `` commutativity with reindexing '' because the condition @xmath102 says that the indexed - coproduct functor @xmath103 commutes with the reindexing functor @xmath41 .",
    "we call figure  [ fig : frobpb ] the `` frobenius axiom '' because the condition @xmath104 has the same form as one of the axioms of a frobenius algebra",
    ". the name of figure  [ fig : slidpb ] will make more sense once we introduce string diagrams ; see  [ sec : string - diagrams ] . finally , we call figure  [ fig : mdpb ] `` monic diagonals '' because the fact that that square is a pullback says precisely that @xmath105 is a monomorphism .",
    "[ cols=\"^,^ \" , ]     thus , it remains only to verify that @xmath106 and @xmath107 satisfy the appropriate triangle identities if and only if @xmath108 and @xmath109 satisfy _ their _ triangle identities .",
    "we will verify this for one triangle identity ; the other is similar and left to the reader .",
    "refer to figures  [ fig : fib - duals ] and  [ fig : fib - duals-2 ] .    in figure",
    "[ fig : fib - duals - step1 ] we show the composite which the bicategorical triangle identity asserts to be equal to an identity .",
    "the morphisms occuring at the top prior to the coevaluation @xmath106 comprise the isomorphism from figure  [ fig : bicatunit ] ( spelled out in more detail ) , using the definition of the beck - chevalley morphism from figure  [ fig : mdbc ] . in figure",
    "[ fig : fib - duals - step2 ] we have replaced @xmath106 and @xmath107 with their equivalents in terms of the symmetric monoidal @xmath108 and @xmath109 .",
    "then in figure  [ fig : fib - duals - step3 ] , we slide a number of morphisms past each other , in the way which string diagram notation makes easy to see .",
    "to get to figure  [ fig : fib - duals - step4 ] , we apply a triangle identity for the adjunction @xmath110 , as in figure  [ fig : surface - adj - diag ] . in figure",
    "[ fig : fib - duals - step5 ] we do some more sliding , and then finally in figure  [ fig : fib - duals - step6 ] we apply ( the dual of ) the curlycue identity from figure  [ fig : curlycue ] . but figure  [ fig : fib - duals - step6 ] is exactly the composite which the symmetric monoidal triangle identity asserts equal to an identity . thus , one triangle identity holds if and only if the other does .",
    "the definition of @xmath111 is shown in figure  [ fig : fibtrace1-gbar ] .",
    "we must show that the bicategorical trace @xmath112{$\\langle$ }       \\makebox[0mm]{$\\langle$}\\hspace{1mm}{q}\\makebox[1mm]{$\\rangle$ }       \\makebox[0mm]{$\\rangle$}}}}{\\ensuremath{\\overset{}{\\longrightarrow}}}{{\\ensuremath{\\hspace{1mm}\\makebox[-1mm]{$\\langle$ }       \\makebox[0mm]{$\\langle$}\\hspace{1mm}{p}\\makebox[1mm]{$\\rangle$ }       \\makebox[0mm]{$\\rangle$ } } } } = p\\ ] ] is equal to the composite @xmath113 in figure  [ fig : fibtrace1-bicat ] we show @xmath114 , while in figure  [ fig : fibtrace1-symmon ] we show   with the definition of @xmath111 substituted .",
    "we can first of all consider the parts of these diagrams occurring above @xmath115 separately from those occurring below @xmath115 ; it will clearly suffice to show that each of these pairs are equal .    in figure",
    "[ fig : fibtrace1-lower ] we treat the lower parts .",
    "figure  [ fig :",
    "fibtrace1-lower - a ] is the lower part of figure  [ fig : fibtrace1-symmon ] . to obtain figure  [ fig : fibtrace1-lower - b ] , we change the isomorphism @xmath116 from one which contracts @xmath29 with the second @xmath117 to one which contracts it with the first .",
    "the two are equal by pseudofunctor coherence , since both are induced by the equality @xmath118 .",
    "then in figure  [ fig : fibtrace1-lower - c ] we slide @xmath109 and the symmetry down to the bottom .",
    "this yields the lower part of figure  [ fig : fibtrace1-bicat ] ( recalling the relationship of the symmetric monoidal and bicategorical evaluations ) together with a composite of pseudofunctoriality isomorphisms on top .",
    "but by pseudofunctor coherence , this composite is equal to the identity .",
    "next , in figure  [ fig : fibtrace1-upperi ] we begin considering the upper parts . in figure",
    "[ fig : fibtrace1-upper - a ] we show the upper part of figure  [ fig : fibtrace1-symmon ] , with the symmetric monoidal coevaluation written in terms of the bicategorical one .",
    "then in figure  [ fig : fibtrace1-upper - b ] we slide the bicategorical @xmath108 all the way to the bottom ( directly above @xmath115 , which divides the upper from the lower parts ) .",
    "since @xmath108 also occurs directly above @xmath115 in figure  [ fig : fibtrace1-bicat ] , it suffices to compare the parts of figures  [ fig : fibtrace1-bicat ] and  [ fig : fibtrace1-upper - b ] occurring above @xmath108 .",
    "moreover , we may also ignore the @xmath119 node and the @xmath120 node on the far left , since neither plays any role in either of these diagrams .",
    "now , in figure  [ fig : fibtrace1-usub-1 ] we have copied the part of figure  [ fig : fibtrace1-bicat ] above @xmath108 , with @xmath119 and @xmath120 omitted and the definition of the frobenius morphism substituted . in figure",
    "[ fig : fibtrace1-usub-2 ] we simply slide , and then to get to figure  [ fig : fibtrace1-usub-3 ] we apply the broken zigzag identity ( figure  [ fig : curlycue - mate ] ) .    in figure  [ fig : fibtrace1-usub-4 ] we replace the isomorphism at the very top by a composite of two other isomorphisms , which is equal to it by pseudofunctor coherence .",
    "figure  [ fig : fibtrace1-usub-5 ] is a simple slide , and then in figure  [ fig : fibtrace1-usub-6 ] we replace the composite of two associativity isomorphisms by the composite of three ( the `` pentagon identity , '' which also holds by pseudofunctor coherence ) .    in figure  [",
    "fig : fibtrace1-usub-7 ] we slide the lower of these associativities past a unit , and finally in figure  [ fig : fibtrace1-usub-8 ] we compose two isomorphisms at the bottom to obtain a different one ( again by pseudofunctor coherence ) .",
    "the result is exactly the part of figure  [ fig : fibtrace1-upper - b ] above @xmath108 , with @xmath119 and @xmath120 omitted .",
    "we define @xmath121 to be the composite @xmath122 this is pictured in figure  [ fig : ftilde ] .",
    "we now claim that the following square commutes .",
    "@xmath123 \\ar[d]_f &        ( \\delta_a)^ * ( \\delta_a ) _ !",
    "q \\otimes m\\ar[d]^{\\overline{\\widetilde{f}}}\\\\        m\\otimes p \\ar[r ] & m\\otimes ( \\pi_a)^ * ( \\pi_a ) _ ! p}\\label{eq : ftilde - square}\\ ] ] to show this , we substitute @xmath121 from figure  [ fig : ftilde ] as @xmath115 in figure  [ fig : fibtrace1-gbar ] ( replacing @xmath119 by @xmath124 and @xmath125 by @xmath126 ) . canceling the isomorphism @xmath127 with its inverse",
    ", we see that what is left at the bottom of the resulting diagram is exactly the left - bottom composite of  .",
    "therefore , it suffices to show that what remains above this becomes the identity when composed with the top arrow in  . by inverting the first two transitions in figure  [ fig : ftilde ] , this is equivalent to the equality shown in figure  [ fig : ftilde2 ] .",
    "however , this follows by a simple sliding and the broken zigzag identity from figure  [ fig : curlycue - mate ] .",
    "\\(m ) at ( -.5,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d3 ) at ( 4,,2 ) ; ( d4 ) at ( 5,,1 ) ; ( d5 ) at ( 6 , , 1 ) ; ( m )  ( d4 )  ( d5 ) ; ( q)(d3 )  ( d4 ) ; ( d3)(7 , , 3 ) ;    \\(m ) at ( -.5,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d3 ) at ( 4,,1.5 ) ; ( d4 ) at ( 5,,1.5 ) ; ( d5 ) at ( 6 , , 1 ) ; ( m )  ( d3 ) ; ( d4 )  ( d5 ) ; ( q)(d3 )  ( d4 ) (7 , , 3 ) ;    \\(m ) at ( -.5,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d4 ) at ( 4,,1 ) ; ( m ) ",
    "( d4 ) (7 , , 1 ) ; ( q ) ",
    "( d4 ) ;    \\(p ) at ( -.5,,0 ) @xmath125 ; ( m ) at ( 0,,2 ) @xmath3 ; ( d4 ) at ( 4,,1 ) ; ( m )  ( d4 )",
    "(7 , , 1 ) ; ( p )  ( d4 ) ;    \\(f ) at ( -.25,2.1,1 ) @xmath10 ; ( m1 ) ",
    "( f ) ; ( q1 ) ",
    "( f ) ; ( f )  ( p3 ) ; ( f )  ( m3 ) ;    \\(p ) at ( -.5,,0 ) @xmath125 ; ( m ) at ( 0,,2 ) @xmath3 ; ( d2 ) at ( 2,,0 ) ; ( d3 ) at ( 3,,0 ) ; ( d4 ) at ( 4,,1 ) ; ( m )  ( d4 )",
    "(7 , , 1 ) ; ( p )  ( d2 ) ; ( d3)(d4 ) ;    ( q-1 )  ( q0 )  ( q1 ) ;    \\(p ) at ( -.5,,0 ) @xmath125 ; ( m ) at ( 0,,2 ) @xmath3 ; ( d2 ) at ( 2,,0 ) ;    \\(m )  ( 7 , , 2 ) ; ( p )  ( d2 ) ;    ( d30 )  ( d41) ( f )  ( d43)(d44 ) to[out=-90,in=-90,looseness=2 ] node[inneriso ] ( d34 ) ; ( d5 - 1 )  ( d50 ) to[out=-90,in=-90,looseness=2 ] node[inneriso ] ( d40 ) ; ( d40 )  ( d3 - 1 ) ; ( d4 - 1 )  ( d30 ) ; at ( intersection of d3 - 1d40 and d4 - 1d30 ) ; ( d24)(d25 ) ; ( m-1 )  ( m0 )  ( m1 ) ; ( m3 )  ( m4)(m5 ) ; ( p3)(p4)(p5 ) ;    ( d34 ) to[out=90,in=90,looseness=1.5 ] node[innerunit ] ( d24 ) ;    \\(m ) at ( -.5,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d3 ) at ( 3,,1 ) ; ( m )  ( d3 )  ( 6,,1 ) ; ( q )  ( d3 ) ;    \\(m ) at ( -.5,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d3 ) at ( 3,,1 ) ; ( d4 ) at ( 4,,1 ) ; ( d5 ) at ( 5,,0 ) ; ( m )  ( d3 )  ( d4 )  ( 6,,1 ) ; ( q )  ( d3 ) ; ( d4 )  ( d5 ) ;    \\(m ) at ( -.5,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d1 ) at ( 1,,2 ) ; ( d2 ) at ( 2,,2 ) ; ( d3 ) at ( 3,,1 ) ; ( d4 ) at ( 4,,1 ) ; ( d5 ) at ( 5,,0 ) ; ( m )  ( d3 )  ( d4 )  ( 6,,1 ) ; ( q )  ( d1 ) ; ( d2 )  ( d3 ) ; ( d1 ) to[bend right ] ( d2 ) ; ( d1 ) to[bend left ] ( d2 ) ; ( d4 )  ( d5 ) ;    \\(m ) at ( -.5,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d1 ) at ( 1,,2 ) ; ( d2 ) at ( 2,,0 ) ; ( d3 ) at ( 3,,1 ) ; ( d4 ) at ( 4,,1 ) ; ( d5 ) at ( 5,,0 ) ; ( m )  ( d2 ) ; ( q )  ( d1 ) ; ( d2 )  ( d3 )  ( d4 ) ",
    "( 6,,1 ) ; ( d1 )  ( d2 ) ; ( d1 )  ( d3 ) ; ( d4 ) ",
    "( d5 ) ;    \\(m ) at ( -.5,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d1 ) at ( 1,,2 ) ; ( d2 ) at ( 2,,0 ) ; ( d5 ) at ( 5,,0 ) ; ( m )  ( d2 )  ( d5 ) ; ( q )  ( d1 )  ( 6,,2 ) ;    ( d30 )  ( d31 )  ( d32 )  ( d23 )  ( d24 ) ; ( d33 )  ( d22 ) ; ( d22 ) to[out=90,in=90,looseness=3 ] node[innerunit ] ( d12 ) ; ( d12 )  ( d13 )  ( d14 ) ; ( d33 ) to[out=-90,in=-90,looseness=2 ] node[innercounit ] ( d43 ) ; ( d43 )  ( d42 )  ( d41 ) ; ( d41 ) to[out=90,in=90,looseness=3 ] node[inneriso ] ( d51 ) ; ( d51 )  ( d52 )  ( d53 )  ( d54 ) ; at ( intersection of d22d33 and d32d23 ) ;    ( m0 )  ( m1 )  ( m2 )  ( m3 )  ( m4 ) ; ( q0 )  ( q1 )  ( q2 )  ( q3 )  ( q4 ) ;    \\(m ) at ( -.5,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d5 ) at ( 5,,1 ) ; ( m )  ( d5 )  ( 6,,1 ) ; ( q )  ( d5 ) ;    \\(m ) at ( -.5,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d1 ) at ( 1,,2 ) ; ( d2 ) at ( 2,,2 ) ; ( d5 ) at ( 5,,1 ) ; ( m )  ( d5 )  ( 6,,1 ) ; ( d1 ) to[bend right ] ( d2 ) ; ( d1 ) to[bend left ] ( d2 ) ; ( q )  ( d1 ) ; ( d2 )  ( d5 ) ;    \\(m ) at ( -.5,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d1 ) at ( 1,,2 ) ; ( d2 ) at ( 2,,0 ) ; ( d5 ) at ( 5,,1 ) ; ( m )  ( d2 )  ( d5 )  ( 6,,1 ) ; ( d1 )  ( d2 ) ; ( q )  ( d1 ) ; ( d1 )  ( d5 ) ;    \\(m ) at ( -.5,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d1 ) at ( 1,,2 ) ; ( d2 ) at ( 2,,0 ) ; ( d3 ) at ( 3,,0 ) ; ( d4 ) at ( 4,,0 ) ; ( d5 ) at ( 5,,1 ) ; ( m ) ",
    "( d2 )  ( d3 ) ; ( d4 )  ( d5 ) ; ( d1 )  ( d2 ) ; ( q )  ( d1 ) ; ( d1 )  ( d5 )  ( 6,,1 ) ;    \\(m ) at ( -.5,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d1 ) at ( 1,,2 ) ; ( d2 ) at ( 2,,0 ) ; ( d3 ) at ( 3,,0 ) ; ( m )  ( d2 )  ( d3 ) ; ( d1 )  ( d2 ) ; ( q )  ( d1 ) ; ( d1 )  ( 6,,1 ) ;    ( d50 )  ( d51 )  ( d22 ) ; ( d21 )  ( d52 )  ( d53 ) ; at ( intersection of d22d51 and d21d52 ) ; ( d53 ) to[out=-90,in=-90,looseness=2 ] node[inneriso ] ( d43 ) ; ( d43 ) to[out=90,in=90,looseness=2 ] node[innerunit ] ( d33 ) ; ( d33 )  ( d43 ) ; ( d21 ) to[out=90,in=90,looseness=3 ] node[innerunit ] ( d11 ) ; ( d11 )  ( d12 )  ( d13 )  ( d14 ) ; ( d22 )  ( d23 )  ( d24 ) ; ( d33 )  ( d34 ) ;    ( m0 )  ( m1 )  ( m2 )  ( m3 )  ( m4 ) ; ( q0 )  ( q1 )  ( q2 )  ( q3 )  ( q4 ) ;    now , from the conclusion of  [ item : fibtrace1 ] and the naturality of symmetric monoidal traces , we can conclude that the following diagram commutes .",
    "@xmath128 \\ar[d]_{(\\pi_a ) _ ! { \\ensuremath{\\operatorname{tr}}}(f ) } &      ( \\pi_a)_!(\\delta_a)^ * ( \\delta_a ) _ ! q \\ar[d]_{(\\pi_a)_!{\\ensuremath{\\operatorname{tr}}}(\\overline{\\widetilde{f } } ) }      \\ar[dr]^{{\\ensuremath{\\operatorname{tr}}}(\\widetilde{f } ) }      \\\\      ( \\pi_a ) _ ! p \\ar[r ] & ( \\pi_a ) _ ! ( \\pi_a)^ * ( \\pi_a ) _ ! p \\ar[r ] & ( \\pi_a ) _ ! p } \\ ] ] but the composite along the bottom of this diagram is the identity , by a triangle law for the adjunction @xmath129",
    ". this yields the desired result .",
    "the bijection between the two types of morphism is immediate , since the respective domains and codomains are isomorphic . for a morphism @xmath130",
    ", the corresponding @xmath131 is shown on the left side of figure  [ fig : fhat ] .",
    "moreover , given @xmath130 , we can also construct @xmath121 as in part  [ item : fibtrace2 ] ( replacing @xmath125 by @xmath132 ) , and we claim that @xmath133 is the composite @xmath134 ^ -{\\widetilde{f } } &        \\widehat{m } \\odot ( \\pi_a)_!(\\pi_a)^ * p \\ar[r]^-{{\\ensuremath{\\operatorname{id}}}\\odot { \\ensuremath{\\varepsilon } } } &        \\widehat{m } \\odot p.}\\label{eq : fhat - ftilde}\\ ] ] this composite is shown on the right side of figure  [ fig : fhat ] ; a slide and a triangle identity suffice to prove the equality .",
    "now the desired result follows from the conclusion of part  [ item : fibtrace2 ] together with the naturality of bicategorical traces  ( * ? ? ?",
    "\\(m ) at ( -1,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d1 ) at ( 1,,2 ) ; ( d2 ) at ( 2,,1 ) ; ( d3 ) at ( 3,,1 ) ; ( m )  ( d2 )  ( d3 ) ; ( q )  ( d1 )  ( d2 ) ; ( d1 )  ( 4,,2 ) ;    \\(m ) at ( -1,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d1 ) at ( 1,,1 ) ; ( d2 ) at ( 2,,1 ) ; ( d3 ) at ( 3,,0 ) ; ( m ) ",
    "( d1 )  ( d2 )  ( d3 ) ; ( q )  ( d1 ) ; ( d2 )  ( 4,,1 ) ;    \\(m ) at ( -1,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d1 ) at ( 1,,1 ) ; ( m )  ( d1 )  ( 4,,1 ) ; ( q )  ( d1 ) ;    \\(p ) at ( -1,,0 ) @xmath125 ; ( m ) at ( 0,,2 ) @xmath3 ; ( d1 ) at ( 1,,0 ) ; ( d2 ) at ( 2,,1 ) ; ( d1 )  ( d2 )  ( 4,,1 ) ; ( m )  ( d2 ) ;    \\(p ) at ( -1,,0 ) @xmath125 ; ( m ) at ( 0,,2 ) @xmath3 ; ( m )  ( 4,,2 ) ;    \\(f ) at ( -.3,3,1 ) @xmath10 ; ( m0 )  ( m1 ) ",
    "( m2 )  ( f )  ( m4 )  ( m5 ) ; ( q0 )  ( q1 )  ( q2 )  ( f )  ( p4 )  ( p5 ) ;    ( d20 )  ( d11 )  ( d12 ) ",
    "( f ) ; ( d10 )  ( d21 ) ; at ( intersection of d10d21 and d20d11 ) ; ( d21 ) to[out=-90,in=-90,looseness=3 ] node[inneriso ] ( d31 ) ; ( d30 )  ( d31 ) ; ( f )  ( d14 ) ; ( f )  ( d24 ) ; ( d14 ) to[out=-90,in=-90,looseness=3 ] node[inneriso ] ( d24 ) ;    at ( 0,7,0 ) @xmath3 ;    \\(m ) at ( -.5,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d3 ) at ( 4,,2 ) ; ( d4 ) at ( 5,,1 ) ; ( d5 ) at ( 6 , , 1 ) ; ( m )  ( d4 )  ( d5 ) ; ( q)(d3 )  ( d4 ) ; ( d3)(7 , , 3 ) ;    \\(m ) at ( -.5,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d3 ) at ( 4,,1.5 ) ; ( d4 ) at ( 5,,1.5 ) ; ( d5 ) at ( 6 , , 1 ) ; ( m )  ( d3 ) ; ( d4 )  ( d5 ) ; ( q)(d3 )  ( d4 ) (7 , , 3 ) ;    \\(m ) at ( -.5,,0 ) @xmath3 ; ( q ) at ( 0,,2 ) @xmath119 ; ( d4 ) at ( 4,,1 ) ; ( m )  ( d4 ) (7 , , 1 ) ; ( q )  ( d4 ) ;    \\(p ) at ( -.5,,0 ) @xmath125 ; ( d1 ) at ( 1,,0 ) ; ( m ) at ( 0,,2 ) @xmath3 ; ( d4 ) at ( 4,,1 ) ; ( m )  ( d4 ) (7 , , 1 ) ; ( d1 )  ( d4 ) ;    \\(f ) at ( -.25,2.1,1 ) @xmath10 ; ( m1 ) ",
    "( f ) ; ( q1 ) ",
    "( f ) ; ( f )  ( d13 ) ; ( f )  ( m3 ) ;    \\(p ) at ( -.5,,0 ) @xmath125 ; ( d1 ) at ( 1,,0 ) ; ( m ) at ( 0,,1.5 ) @xmath3 ; ( d2 ) at ( 2,,0 ) ; ( d3 ) at ( 3,,0 ) ; ( d4 ) at ( 4,,1 ) ; ( m )  ( d4 ) (7 , , 1 ) ; ( d1 )  ( d2 ) ; ( d3)(d4 ) ;    ( q-1 )  ( q0 )  ( q1 ) ;    \\(p ) at ( -.5,,0.5 ) @xmath125 ; ( d1 ) at ( 1,,0.5 ) ; ( m ) at ( 0,,2 ) @xmath3 ; ( d2 ) at ( 2,,0.5 ) ;    \\(m )  ( 7 , , 2 ) ; ( d1 )  ( d2 ) ;    \\(p ) at ( -.5,,0.5 ) @xmath125 ; ( m ) at ( 0,,2 ) @xmath3 ; ( m ) ",
    "( 7 , , 2 ) ;    ( d30 )  ( d41) ( f )  ( d43)(d44 ) to[out=-90,in=-90,looseness=2 ] node[inneriso ] ( d34 ) ; ( d5 - 1 )  ( d50 ) to[out=-90,in=-90,looseness=2 ] node[inneriso ] ( d40 ) ; ( d40 )  ( d3 - 1 ) ; ( d4 - 1 )  ( d30 ) ; at ( intersection of d3 - 1d40 and d4 - 1d30 ) ; ( d24)(d25 ) ; ( m-1 )  ( m0 )  ( m1 ) ; ( m3 )  ( m4)(m5 )  ( m6 ) ; ( d13)(d14)(d15 ) ; ( f )  ( p3)(p4)(p5 )  ( p6 ) ; ( d15 ) to[out=-90,in=-90,looseness=4 ] node[innercounit ] ( d25 ) ;    ( d34 ) to[out=90,in=90,looseness=1.5 ] node[innerunit ] ( d24 ) ;",
    "in contrast to the fiberwise case , our general comparison theorems for total duality traces were completely formal , not requiring any string diagram calculations . however , the two most interesting applications , namely corollaries [ cor : totaltr3 ] and [ thm : totaltr - transfer ] , required identifying the composites @xmath135 and @xmath136 as @xmath18 and @xmath137 , respectively , and for this we do need some calculation .",
    "recall that we have an endomorphism @xmath138 of @xmath139 and that we defined @xmath10 to be the isomorphism @xmath140 regarded as a morphism @xmath141 .",
    "we defined @xmath142 be the morphism @xmath143 by definition , then , the composite @xmath135 becomes @xmath144    to give a simpler description of this composite we start by considering the composite of only the third and fourth morphisms ( the two on the second line of  ) .",
    "these are instances of .",
    "tracing through their definitions yields a fairly long composite of isomorphisms , but fortunately it is equal to something simpler , as an instance of the following lemma .                        using , and unfolding the definition of the `` sliding and splitting '' beck - chevalley morphism , becomes the morphism shown in figure  [ fig : xif1 ] . in figure",
    "[ fig : xif2 ] we simply rearrange the order of all the morphisms , sliding the counit @xmath151 on the far left down to the bottom , the isomorphism @xmath152 on the far right up to the top , and rearranging things in the middle so that the other unit and counit meet .    in figure",
    "[ fig : xif3 ] we cancel the internal unit and counit using a triangle identity .",
    "now we have the isomorphisms @xmath153 and @xmath154 at the top , a counit @xmath155 at the bottom , and in the middle a composite of pseudofunctoriality isomorphisms for reindexing functors , which starts and ends at @xmath156 .",
    "this middle composite is extracted in figure  [ fig : xifm ] , after peeling off the @xmath157 and @xmath158 ( which are unchanged throughout ) . by coherence for pseudofunctors ,",
    "this composite is equal to the identity , so that figure  [ fig : xif3 ] is equal to figure  [ fig : xif4 ] .",
    "but this is exactly @xmath150 ( see  ) .        since @xmath159 factors through @xmath142 , @xmath136 factors through @xmath135 . applying",
    ", we see that @xmath136 is equal to the composite @xmath162 thus , it will suffice to show that the composite @xmath163 is equal to @xmath164 .",
    "now , by definition , @xmath164 is equal to the composite in figure  [ fig : zeta1 ] .",
    "we can rewrite the initial pseudofunctoriality isomorphisms to obtain figure  [ fig : zeta2 ] , and then apply the broken zigzag identity ( figure  [ fig : curlycue - mate ] ) to obtain figure  [ fig : zeta3 ] . in figure",
    "[ fig : zeta4 ] we isotope sideways , and then in figure  [ fig : zeta5 ] we slide the adjunction unit to the top .",
    "finally , we can cancel the isomorphisms in the middle by pseudofunctor coherence , obtaining figure  [ fig : zeta6 ] , which is exactly  .",
    "g.  m. kelly and ross street .",
    "review of the elements of @xmath165-categories . in _",
    "category seminar ( proc .",
    "sydney , 1972/1973 ) _ , volume 420 of _ lecture notes in mathematics _ , pages 75103 .",
    "springer , berlin , 1974 .",
    "f.  william lawvere .",
    "equality in hyperdoctrines and comprehension schema as an adjoint functor . in _ applications of categorical algebra ( proc .",
    "pure math .",
    "xvii , new york , 1968 ) _ , pages 114 .",
    "soc . , providence , r.i . , 1970 .",
    "robert par and dietmar schumacher .",
    "abstract families and the adjoint functor theorems . in _ indexed categories and their applications _ , volume 661 of _ lecture notes in math .",
    "_ , pages 1125 .",
    "springer , berlin , 1978 .",
    "peter selinger .",
    "a survey of graphical languages for monoidal categories . in bob",
    "coeke , editor , _ new structures for physics _ , chapter  4 .",
    "springer , 2011 .",
    "available at http://www.mscs.dal.ca/~selinger/papers.html#graphical and arxiv:0908.3347 .",
    "r.f.c . walters .",
    "categorical algebras of relations .",
    "http://rfcwalters.blogspot.com/2009/10/categorical - algebras - of - relation% s.html[http://rfcwalters.blogspot.com/2009/10/categorical - algebras - of - relation% s.html ] , october 2009 ."
  ],
  "abstract_text": [
    "<S> by the lefschetz fixed point theorem , if an endomorphism of a topological space is fixed - point - free , then its lefschetz number vanishes . </S>",
    "<S> this necessary condition is not usually sufficient , however ; for that we need a refinement of the lefschetz number called the reidemeister trace . </S>",
    "<S> abstractly , the lefschetz number is a trace in a symmetric monoidal category , while the reidemeister trace is a trace in a bicategory ; in this paper we relate these contexts using indexed symmetric monoidal categories .    </S>",
    "<S> in particular , we will show that for any symmetric monoidal category with an associated indexed symmetric monoidal category , there is an associated bicategory which produces refinements of trace analogous to the reidemeister trace . </S>",
    "<S> this bicategory also produces a new notion of trace for parametrized spaces with dualizable fibers , which refines the obvious `` fiberwise '' traces by incorporating the action of the fundamental group of the base space . </S>",
    "<S> we also advance the basic theory of indexed monoidal categories , including introducing a string diagram calculus which makes calculations much more tractable . this abstract framework lays the foundation for generalizations of these ideas to other contexts . </S>"
  ]
}
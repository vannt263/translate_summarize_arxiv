{
  "article_text": [
    "a _ graph _ @xmath0 consists of a _ _ vertex set  _ _ @xmath1 and an _ _ edge set  _ _ @xmath2 , where each edge corresponds to a pair @xmath3 of vertices .",
    "if the edges are ordered pairs of vertices ( i.e. , the pair @xmath3 is different from the pair @xmath4 ) , then we call the graph _ directed _ or _ _  digraph _ _ ; otherwise , we call it _ undirected_.",
    "if @xmath3 is an edge in a digraph , we say that @xmath3 _ leaves _ vertex @xmath5 and _ enters _ vertex @xmath6 .",
    "a vertex in a digraph is a _ source _ if no edges enter it , and a _ sink _ if no edges leave it .",
    "a _ path _ from vertex @xmath7 to vertex @xmath8 in a graph @xmath0 is a sequence of its vertices @xmath9 $ ] such that @xmath10 for @xmath11 .",
    "@xmath12 is an _ acyclic graph _",
    "if there is no closed path @xmath13 $ ] in @xmath12 .",
    "a two - terminal directed acyclic graph ( _ st - dag _ ) has only one source @xmath14 and only one sink @xmath15 . in an st - dag ,",
    "every vertex lies on some path from @xmath14 to @xmath15 .",
    "a graph @xmath16 is a _ subgraph _ of @xmath17 if @xmath18 and @xmath19 .",
    "a graph @xmath20 is _ homeomorphic _ to a graph @xmath21 ( a _ homeomorph _ of @xmath21 ) if @xmath12 can be obtained by subdividing edges of @xmath22 with new vertices .",
    "we consider a _ labeled graph _ which has labels attached to its edges .",
    "each path between the source and the sink ( a _ sequential path _ ) in an st - dag can be presented by a product of all edge labels of the path .",
    "we define the sum of edge label products corresponding to all possible sequential paths of an st - dag @xmath12 as the _ canonical expression _ of @xmath12 .",
    "an algebraic expression is called an _ st - dag expression _ ( a _ factoring of an st - dag _ in @xcite ) if it is algebraically equivalent to the canonical expression of an st - dag .",
    "an st - dag expression consists of terms ( edge labels ) , the operators @xmath23 ( disjoint union ) and @xmath24 ( concatenation , also denoted by juxtaposition when no ambiguity arises ) , and parentheses .",
    "we define the _ complexity of an algebraic expression _ in two ways .",
    "the complexity of an algebraic expression is ( i ) the total number of terms in the expression including all their appearances ( _ the first complexity characteristic _ ) or ( ii ) the number of plus operators in the expression ( _ the second complexity characteristic _ ) .",
    "we will denote the first and the second complexity characteristic of an st - dag expression by @xmath25 and @xmath26 , respectively , where @xmath27 is the number of vertices in the graph .    an equivalent expression with the minimum complexity",
    "is called an _ optimal representation of the algebraic expression_.    a _ series - parallel _ _ graph _ is defined recursively so that a single edge is a series - parallel graph and a graph obtained by a parallel or a series composition of series - parallel graphs is series - parallel .    as shown in @xcite and @xcite , a series - parallel graph expression has a representation in which each term appears only once .",
    "we proved in kol that this representation is an optimal representation of the series - parallel graph expression from the perspective of the first complexity characteristic .",
    "for example , the canonical expression of the series - parallel graph presented in figure [ fig1 ] is @xmath28 .",
    "since it is a series - parallel graph , the expression can be reduced to @xmath29 , where each term appears once .",
    "( 5,4)(-3.5,0 )    ( 1,3)(3,0)4    ( 1,3)(1,0)3 ( 2.5,3.3)(0,0)@xmath30    ( 4,3)(5.5,5)(7,3 ) ( 7.085,3)(3,-2)0 ( 5.5,4.3)(0,0)@xmath31    ( 4,3)(5.5,1)(7,3 ) ( 7.085,3)(3,2)0 ( 5.5,2.3)(0,0)@xmath32    ( 7,3)(8.5,5)(10,3 ) ( 10.085,3)(3,-2)0 ( 8.5,4.3)(0,0)@xmath33    ( 7,3)(8.5,1)(10,3 ) ( 10.085,3)(3,2)0 ( 8.5,2.3)(0,0)@xmath34    ( 1,3)(4,-2)(7,3 ) ( 7.085,3)(4,3)0 ( 4,0.8)(0,0)@xmath35    a _ fibonacci graph _ _ _ ( _ _ @xmath36 _ ) _ @xcite has vertices @xmath37 and edges @xmath38 .    as shown in @xcite , an st - dag is series - parallel if and only if it does not contain a subgraph which is a homeomorph of the _ forbidden subgraph _ positioned between vertices @xmath39 and @xmath40 of the fibonacci graph illustrated in figure [ fig2 ] .",
    "thus , fibonacci graphs are of interest as through  non - series - parallel st - dags .",
    "( 5,2)(-0.9,-0.5 )    ( 0,0)(1.5,0)9    ( 0,-0.3)(0,0)1 ( 1.5,-0.3)(0,0)2 ( 3,-0.3)(0,0)3 ( 4.5,-0.3)(0,0)4 ( 7.5,-0.3)(0,0)n-3 ( 9,-0.3)(0,0)n-2 ( 10.5,-0.3)(0,0)n-1 ( 12,-0.3)(0,0)n    ( 0,0)(1.5,0)8(1,0)1.5    ( 0.75,0.2)(0,0)@xmath41 ( 2.25,0.2)(0,0)@xmath42 ( 3.75,0.2)(0,0)@xmath43 ( 8.25,0.2)(0,0)@xmath44 ( 9.75,0.2)(0,0)@xmath45 ( 11.25,0.2)(0,0)@xmath46    ( 0,0)(1.5,2)(3,0 ) ( 1.5,0)(3,2)(4.5,0 ) ( 3,0)(4.5,2)(6,0 ) ( 4.5,0)(6,2)(7.5,0 ) ( 6,0)(7.5,2)(9,0 ) ( 7.5,0)(9,2)(10.5,0 ) ( 9,0)(10.5,2)(12,0 )    ( 3.085,0)(1.5,0)7(3,-2)0    ( 1.5,1.3)(0,0)@xmath47 ( 3,1.3)(0,0)@xmath48 ( 9,1.3)(0,0)@xmath49 ( 10.5,1.3)(0,0)@xmath50    ( 5.55,-0.2)(0.2,0)6    mutual relations between graphs and algebraic expressions are discussed in @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , and other works .",
    "specifically , @xcite , @xcite , and @xcite consider the correspondence between series - parallel graphs and read - once functions .",
    "a boolean function is defined as _ read - once _ if it may be computed by some formula in which no variable occurs more than once ( _ read - once formula _ ) . on the other hand , a series - parallel graph expression can be reduced to the representation in which each term appears only once .",
    "hence , such a representation of a series - parallel graph expression can be considered as a read - once formula ( boolean operations are replaced by arithmetic ones ) .",
    "an expression of a homeomorph of the forbidden subgraph belonging to any non - series - parallel st - dag has no representation in which each term appears once .",
    "for example , consider the subgraph positioned between vertices @xmath39 and @xmath40 of the fibonacci graph shown in figure [ fig2 ] .",
    "possible optimal representations of its expression are @xmath51 or @xmath52 . for this reason , an expression of a non - series - parallel st - dag can not be represented as a read - once formula .",
    "however , for arbitrary functions , which are not read - once , generating the optimum factored form is np - complete @xcite .",
    "our intention is to simplify the expressions of fibonacci graphs ( we denote them by @xmath53 ) and eventually find their optimal representations .",
    "the last goal is an open problem . in this paper",
    "we survey a method which is conjectured to provide an optimal representation for @xmath53 .",
    "the number of methods for generating fibonacci graph expressions is described in @xcite .",
    "most of them derive representations with complexities which increase exponentially as the number of the graph s vertices increases .",
    "specifically , the _ sequential - paths method _ is based directly on the definition of an st - dag expression as the canonical expression of the st - dag .",
    "for example , for a @xmath54-vertex fibonacci graph , the corresponding algebraic expression is @xmath55it contains @xmath56 terms and @xmath57 plus operators .",
    "in @xcite we consider the _ decomposition method _ which provides an algorithm for constructing @xmath53 with polynomial complexity .",
    "this method is based on revealing subgraphs in the initial graph .",
    "the resulting expression is produced by a special composition of subexpressions describing these subgraphs .",
    "( 5,2)(-0.5,-0.4 )    ( 0,0)(1.5,0)10    ( 0,-0.3)(0,0)p ( 1.5,-0.3)(0,0)p+1 ( 6,-0.3)(0,0)i-1 ( 7.4,-0.3)(0,0)i ( 9,-0.3)(0,0)i+1 ( 12,-0.3)(0,0)q-1 ( 13.5,-0.3)(0,0)q    ( 0,0)(1.5,0)9(1,0)1.5    ( 0.75,0.2)(0,0)@xmath58 ( 6.75,0.2)(0,0)@xmath59 ( 8.25,0.2)(0,0)@xmath60 ( 12.75,0.2)(0,0)@xmath61    ( 0,0)(1.5,2)(3,0 ) ( 1.5,0)(3,2)(4.5,0 ) ( 3,0)(4.5,2)(6,0 ) ( 4.5,0)(6,2)(7.5,0 ) ( 6,0)(7.5,2)(9,0 ) ( 7.5,0)(9,2)(10.5,0 ) ( 9,0)(10.5,2)(12,0 ) ( 10.5,0)(12,2)(13.5,0 )    ( 1.5,1.3)(0,0)@xmath62 ( 7.2,1.3)(0,0)@xmath63 ( 12,1.3)(0,0)@xmath64    ( 3.085,0)(1.5,0)8(3,-2)0    ( 3.2,-0.2)(0.2,0)6 ( 10.05,-0.2)(0.2,0)6    ( 7.5,-0.7)(0,0.2)12(0,1)0.1    consider the @xmath27-vertex @xmath36 presented in figure [ fig2 ] .",
    "denote by @xmath65 a subexpression related to its subgraph ( which is an @xmath36 as well ) having a source @xmath66 ( @xmath67 ) and a sink @xmath68 ( @xmath69 , @xmath70 ) .",
    "if @xmath71 , then we choose any _ decomposition vertex _",
    "@xmath72 ( @xmath73 ) in a subgraph , and , in effect , split it at this vertex ( figure [ fg_fig7 ] ) .",
    "otherwise , we assign final values to @xmath74 .",
    "as follows from the structure of a fibonacci graph , any path from vertex @xmath75 to vertex @xmath68 passes through vertex @xmath76 or avoids it via edge @xmath77 .",
    "therefore , @xmath74 can be generated by the following recursive procedure ( _ decomposition procedure _ ) :    1 .",
    "[ 1]@xmath78 @xmath79 2 .",
    "[ 2]@xmath78 @xmath80 3 .",
    "[ 3]@xmath78 @xmath81 4 .",
    "[ 4]@xmath82    lines [ 1 ] and [ 2 ] contain conditions of exit from the recursion .",
    "the special case when a subgraph consists of a single vertex is considered in line [ 1 ] .",
    "it is clear that such a subgraph can be connected to other subgraphs only serially .",
    "for this reason , it is accepted that its subexpression is @xmath39 , so that when it is multiplied by another subexpression , the final result is not influenced .",
    "line [ 2 ] describes a subgraph consisting of a single edge .",
    "the corresponding subexpression consists of a single term equal to the edge label .",
    "the general case is processed in lines [ 3 ] and [ 4 ] .",
    "the procedure , @xmath83 , in line [ 3 ] chooses an arbitrary decomposition vertex @xmath76 on the interval @xmath84 so that @xmath85 .",
    "a current subgraph is decomposed into four new subgraphs in line [ 4 ] .",
    "subgraphs described by subexpressions @xmath86 and @xmath87 include all paths from vertex @xmath66 to vertex @xmath68 passing through vertex @xmath76 .",
    "subgraphs described by subexpressions @xmath88 and @xmath89 include all paths from vertex @xmath66 to vertex @xmath68 passing through edge @xmath77 .",
    "@xmath90 is the expression of the initial @xmath27-vertex @xmath36 ( @xmath91 ) .",
    "hence , the decomposition procedure is initially invoked by substituting parameters @xmath39 and @xmath27 instead of @xmath66 and @xmath68 , respectively .",
    "in @xcite we proved the following theorem that determines an optimal location of the decomposition vertex @xmath76 in an arbitrary interval @xmath84 of a fibonacci graph from the perspective of the first complexity characteristic .",
    "[ th_fg - n/2]the representation with a minimum total number of terms among all possible representations of @xmath53 derived by the decomposition method is achieved if and only if in each recursive step @xmath76 is equal to @xmath92 for odd @xmath93 and to @xmath94 or @xmath95 for even @xmath93 , i.e. , when @xmath76 is a middle vertex of the interval @xmath84 .",
    "such a decomposition method is called _",
    "optimal_.    the following theorem for the second complexity characteristic",
    "is proven in @xcite .",
    "[ th_fg - n/2_p]the representation with a minimum number of plus operators among all possible representations of @xmath53 derived by the decomposition method can be achieved by the optimal decomposition method .    it can be easily shown that for an @xmath27-vertex @xmath36 :    \\1 .",
    "the total number of terms @xmath25 in the expression @xmath53 derived by the optimal decomposition method is defined recursively as follows : @xmath96    \\2 .",
    "the number of plus operators @xmath26 in the expression @xmath53 derived by the optimal decomposition method is defined recursively as follows : @xmath97for large @xmath27@xmath98and , by the _ master theorem _",
    "@xcite , @xmath25 and @xmath26 are @xmath99 .    for @xmath100 ,",
    "the possible algebraic expression derived by the optimal decomposition method is @xmath101it contains @xmath102 terms and @xmath103 plus operators .",
    "as shown in @xcite , the optimal decomposition method is not always the only one that provides an expression for a fibonacci graph with a minimum number of plus operators .",
    "there exist _ special values of _",
    "@xmath27 when an @xmath27-vertex fibonacci graph has several expressions with the same minimum number of plus operators ( among expressions derived by the decomposition method ) .",
    "these special values are grouped as follows : @xmath104 in the general view , they can be presented in the following way : @xmath105here @xmath106 is a number of a group of special numbers ; @xmath107 is a special number of the @xmath106-th group ; @xmath108 and @xmath109 are the first value and the last value , respectively , in the @xmath106-th group .",
    "for all these values of @xmath27 , not only the values of @xmath76 which are mentioned in theorem [ th_fg - n/2 ] , provide a minimum number of plus operators in @xmath53 .",
    "for example , for @xmath110 , the possible algebraic expression derived by the optimal decomposition method ( @xmath76 is equal to @xmath40 in the first recursive step ) is @xmath111it contains @xmath112 terms and @xmath113 plus operators .",
    "for @xmath76 chosen equal to @xmath114 in the first recursive step , the possible expression is @xmath115this expression contains @xmath116 terms but the number of its plus operators is also equal to @xmath113 .      as follows from the previous section ,",
    "the decomposition method is based on splitting a fibonacci graph in each recursive step into two parts via decomposition vertex @xmath76 and edge @xmath77 .",
    "the gd method entails splitting a fibonacci graph in each recursive step into an arbitrary number of parts ( we will denote this number by @xmath117 ) via _ decomposition vertices _",
    "@xmath118 and edges @xmath119 , respectively .",
    "an example for @xmath120 is illustrated in figure [ fg_fig8 ] .",
    "( 5,2)(-0.5,-0.4 )    ( 0,0)(1.5,0)10    ( 0,-0.3)(0,0)p ( 4.35,-0.3)(0,0)i@xmath121 ( 8.85,-0.3)(0,0)i@xmath122 ( 13.5,-0.3)(0,0)q    ( 0,0)(1.5,0)9(1,0)1.5    ( 0,0)(1.5,2)(3,0 ) ( 1.5,0)(3,2)(4.5,0 ) ( 3,0)(4.5,2)(6,0 ) ( 4.5,0)(6,2)(7.5,0 ) ( 6,0)(7.5,2)(9,0 ) ( 7.5,0)(9,2)(10.5,0 ) ( 9,0)(10.5,2)(12,0 ) ( 10.5,0)(12,2)(13.5,0 )    ( 4.1,1.3)(0,0)@xmath123 ( 8.6,1.3)(0,0)@xmath124    ( 3.085,0)(1.5,0)8(3,-2)0    ( 1.7,-0.2)(0.2,0)6 ( 6.2,-0.2)(0.2,0)6 ( 10.7,-0.2)(0.2,0)6    ( 4.5,-0.7)(0,0.2)12(0,1)0.1 ( 9,-0.7)(0,0.2)12(0,1)0.1    in all cases when @xmath125 , the decomposition procedure used in the previous section is transformed to the more complex form .",
    "specifically , for @xmath120 , the general line of the new decomposition procedure , corresponding to line [ 4 ] of the decomposition procedure with @xmath126 is presented as : @xmath127the sum above consists of four parts , with each part including three subexpressions corresponding to the three parts of a split subgraph .",
    "hence , a current subgraph is decomposed into twelve new subgraphs .",
    "suppose that a fibonacci graph is split into approximately equal parts in each recursive step ( distances between decomposition vertices are equal or approximately equal )",
    ". it will be the _ uniform gd method_.    the following theorem is proven in @xcite .    [ th_gd]for an @xmath27-vertex @xmath36 , both the total number of terms @xmath25 and the number of plus operators @xmath26 in the expression @xmath53 derived by the uniform gd method ( the @xmath36 is split into @xmath117 parts ) are @xmath128 .    as follows from theorem [ th_gd ] , @xmath25 and",
    "@xmath26 reach the minimum complexity among @xmath129 when @xmath126 . substituting @xmath130 for @xmath117",
    "gives @xmath131 ( we have the optimal decomposition method in this case ) .",
    "further , the complexity increases with the increase in @xmath117 .",
    "for example , we have @xmath132 for @xmath120 , @xmath133 for @xmath134 , etc . in the extreme case , when @xmath135 , all inner vertices ( from @xmath130 to @xmath136 ) of an @xmath27-vertex @xmath36 are decomposition vertices .",
    "the single recursive step is executed in this case , and all revealed subgraphs are individual edges ( labeled @xmath30 with an index ) connected by additional edges ( labeled @xmath31 with an index ) .",
    "that is , in this instance , the uniform gd method is reduced to the sequential - paths method . substituting @xmath136 for @xmath117",
    "we conjecture that the optimal decomposition method provides an optimal representation ( for both our complexity characteristics ) of an algebraic expression related to a fibonacci graph .",
    "the results obtained in section sec_gd do not contradict this conjecture .",
    "at least , the optimal decomposition method is the best one among uniform gd methods ( asymptotically ) .",
    "however , we did not prove that splitting a fibonacci graph into approximately equal @xmath117 parts gives the optimal result for arbitrary @xmath117 ( as in theorems [ th_fg - n/2 ] and [ th_fg - n/2_p ] for @xmath126 ) .",
    "besides , the gd method entails splitting a fibonacci graph into the same number of parts in each recursive step",
    ". one further generalization of the method assigns to any subgraph its own number of decomposition vertices .",
    "finally , there exist representations that are obtained through algorithms which are not appropriate to any generalized decomposition method .",
    "prove ( or disprove ) that the optimal decomposition method is the only one that provides an optimal representation of an algebraic expression related to a fibonacci graph from the perspective of the first complexity characteristic .",
    "prove ( or disprove ) that the optimal decomposition method provides an optimal representation of an algebraic expression related to a fibonacci graph from the perspective of the second complexity characteristic .",
    "m. korenblit and v. e. levit , on algebraic expressions of series - parallel and fibonacci graphs .",
    "_ discrete mathematics and theoretical computer science _ , _ proc .",
    "conf_. , _ dmtcs 2003 _ , _ lncs _ * 2731 * , springer ( 2003 ) 215224 .",
    "m. korenblit and v. e. levit , `` the uniform generalized decomposition method for generating algebraic expressions of fibonacci graphs '' , _ wseas transactions on mathematics _ , vol .",
    "* 2 * , no 1 , ( 2003 ) , pp.9297          v. naumann , measuring the distance to series - parallelity by path expressions .",
    "_ graph - theoretic concepts in computer science _ , _ proc .",
    "20th int . workshop _ , _",
    "wg 94 _ , _ lncs _ * 903 * , springer ( 1994 ) 269281 ."
  ],
  "abstract_text": [
    "<S> the paper investigates relationship between algebraic expressions and graphs . </S>",
    "<S> we consider a digraph called a fibonacci graph which gives a generic example of non - series - parallel graphs . </S>",
    "<S> our intention in this paper is to simplify the expressions of fibonacci graphs and eventually find their shortest representations . with that end in view </S>",
    "<S> , we describe the optimal decomposition method for generating fibonacci graph expressions that is conjectured to provide these representations . </S>",
    "<S> proof ( or disproof ) of this conjecture is presented as an open problem .    </S>",
    "<S> keywords : fibonacci graph , series - parallel graph , two - terminal directed acyclic graph , decomposition , expression . </S>"
  ]
}
{
  "article_text": [
    "for finite - state systems , model checking a temporal property can be cast in terms of model checking in the modal @xmath0-calculus , the so - called `` assembly language '' of temporal logics .",
    "a number of temporal logics have been proposed and used for specifying properties of finite - state _",
    "probabilistic _ systems .",
    "two of the notable logics for probabilistic systems based on the @xmath0-calculus are gpl  @xcite and pl@xmath0  @xcite .",
    "gpl is defined over reactive probabilistic labeled transition systems ( rpltss ) . in an rplts , each state has a set of outgoing transitions with distinct labels ; each transition , in turn , specifies a ( probabilistic ) distribution of target states .",
    "the branching - time probabilistic logic gpl is expressive enough to serve as an `` assembly language '' of a large number of probabilistic temporal logics .",
    "for instance , model checking pctl * properties over markov chains , as well as termination and reachability of _ recursive _ markov chains can be cast in terms of gpl model checking  @xcite .    in this paper",
    ", we propose an extension to gpl , which we call _ extended probabilistic logic _ ( xpl ) , to express properties of probabilistic systems with _ internal nondeterministic choice_. where gpl has probabilistic quantifiers @xmath1 over fuzzy formulae @xmath2 , xpl introduces quantifiers over infimum and supremum probabilities , of the form @xmath3 .",
    "this allows xpl formulae to be quantified over _",
    "schedulers _ that resolve internal non - deterministic choices .",
    "the semantics of xpl is defined over probabilistic labeled transition systems ( pltss ) . in a plts ,",
    "each state has a set of outgoing transitions , _ possibly with common labels _ ; and each transition specifies a distribution of target states .",
    "pltss thus exhibit both probabilistic choice and internal nondeterministic choice .",
    "* * contributions and significance:**xpl is expressive enough that a wide variety of independently - studied verification problems can be cast as model checking pltss with xpl .",
    "in fact , undecidable problems such as termination of multi - exit _ recursive _ markov decision processes ( recursive mdps or rmdps ) can be reduced in linear time to model checking pltss with xpl .",
    "we introduce a syntactically - defined subclass , called _ separable xpl _ , for which model checking is decidable .",
    "we describe a procedure for model checking xpl which always terminates successfully with the model checking result , or with failure such that it always terminates successfully for separable xpl ( see sect .",
    "[ sec : modchk ] ) .    a number of distinct model checking algorithms have been developed independently for decidable verification problems involving systems that have probabilistic and internal non - deterministic choice .",
    "examples of such problems include pctl * model checking of mdps  @xcite and termination of 1-exit rmdps  @xcite .",
    "these problems can all be reduced , in linear time , to model checking _",
    "separable _ xpl formulae over pltss ( see sect .",
    "[ sec : encex ] ) .",
    "to the best of our knowledge , the similarities between these decidable problems and the commonalities between the underlying decision algorithms have not been recognized in the literature .",
    "termination of multi - exit rmdps , cast as a model checking problem over xpl along the same lines as our treatment of 1-exit rmdps , yields an xpl formula that is not separable .",
    "thus separability can be seen as a characteristic of the verification problems that are known to be decidable , when cast in terms of model checking in xpl .",
    "consequently , xpl in general , and separable xpl in particular , form a useful formalism to study the relationships between verification problems over systems involving probabilistic and internal non - deterministic choice .",
    "we discuss these issues in greater detail in sect .",
    "[ sec : concl ] .",
    "in this section , we formally define pltss , which are used to define the semantics of xpl . we also summarize the syntax and semantics of gpl , using the notations from  @xcite .",
    "we define a probabilistic labeled transition system ( plts ) as an extension of @xcite s  rplts .",
    "[ def : nlts ] with respect to fixed sets @xmath4 and @xmath5 of _ actions _ and _ propositions _ , respectively , a plts @xmath6 is a quadruple @xmath7 , where    * @xmath8 is a countable set of states ; * @xmath9 is the transition relation ; * @xmath10 $ ] is the transition probability distribution satisfying : * * @xmath11 , * * @xmath12 + @xmath13 , and * * @xmath14 ; * @xmath15 is the _ interpretation _ , recording the set of propositions true at a state .",
    "a reactive plts does not have internal nondeterminism , i.e. , its transition probability distribution @xmath16 is a function of @xmath17 .",
    "this definition is in line with the most general for a plts  @xcite , in which , given an action , a probabilistic distribution is chosen nondeterministically ( we assume that there are finitely many nondeterministic choices ) .",
    "other equally expressive models include alternating automata , in which labeled nondeterministic ones are followed by silent probabilistic choices .",
    "the difference between such models has been analyzed with respect to bisimulation  @xcite .",
    "given @xmath18 , a _ partial computation _ is a sequence @xmath19 , where for all @xmath20 , @xmath21 .",
    "also , @xmath22 and @xmath23 denote , respectively , the first and last states in @xmath24 . each transition of a partial computation is labeled with an action @xmath25 .",
    "the set of all partial computations of @xmath6 is denoted by @xmath26 , and @xmath27 . _",
    "composition _ of partial computations , @xmath28 , represents @xmath29 if @xmath30 .",
    "a partial computation @xmath31 is a _ prefix _ of @xmath24 if @xmath32 for some @xmath33 .    from a set of partial computations",
    ", we can build deterministic trees _",
    "( d - trees)_.",
    "we often denote a d - tree by the set of paths in the tree .",
    "every d - tree is prefix - closed and deterministic .",
    "@xmath34 is _ prefix - closed _ if , for every @xmath35 and @xmath31 a prefix of @xmath24 , @xmath36 .",
    "@xmath37 is _ deterministic _ if for every @xmath38 with @xmath39 and @xmath40 , either @xmath41 or @xmath42 , i.e. , if a pair of computations share a prefix , the first difference can not involve transitions labeled by the same action .",
    "a d - tree @xmath37 has a starting state , denoted @xmath43 ; if @xmath44 then @xmath45 . we also let @xmath46 .",
    "@xmath47 refers to all the d - trees of @xmath6 , and @xmath48 .",
    "@xmath49 is a _ prefix _ of @xmath37 if @xmath50 .",
    "@xmath51 means @xmath52 .",
    "@xmath37 is _ finite _ if @xmath53 , and _ maximal _ if there exists no d - tree @xmath49 with @xmath54 .",
    "@xmath55 and @xmath56 are analogous to @xmath47 and @xmath57 , but for maximal d - trees .",
    "outcome _ is a maximal d - tree .",
    "+    scale=0.9    ( s_1 ) @xmath58 ; ( s_2 ) [ below=1.25 cm of s_1 ] @xmath59 ; ( s_3 ) [ left=1.25 cm of s_2 ] @xmath60 ; ( s_4 ) [ right=1.25 cm of s_2 ] @xmath61 ; ( s_5 ) [ below = of s_3 ] @xmath62 ; ( s_6 ) [ below = of s_4 ] @xmath63 ;    ( s_1 ) edge [ near start ] node @xmath64 ( s_2 ) ( s_2 ) edge [ swap ] node @xmath65 ( s_3 ) ( s_2 ) edge node @xmath66 ( s_4 ) ( s_3 ) edge [ swap ] node @xmath67 ( s_5 ) ( s_4 ) edge node @xmath68 ( s_6 ) ;     +    an example ptls and two of its outcomes are shown in fig .  [",
    "fig : example ] . in the figure ,",
    "transitions are usually annotated with their action label and probability ; the probability is omitted when it is @xmath69 .",
    "note that there are two transitions labeled @xmath65 from state @xmath59 reflecting internal nondeterminism .",
    "if we label transition from @xmath59 to @xmath60 only with @xmath65 ( omitting @xmath66 ) and that from @xmath59 to @xmath61 only with @xmath66 ( omitting @xmath65 ) , we get an _ rplts _ with only probabilistic and external choices .    note that , with d - trees , we have the distinction between linear- and branching - time semantics for the nondeterministic choices which are internal and external , respectively . since a d - tree is defined to be _",
    "deterministic _ , all of the internal choices",
    "( both probabilistic and nondeterministic ) are resolved , but the external choices remain .",
    "meanwhile , a property of a plts will hold for some subset of its maximal d - trees . in order to give the property a probability ,",
    "we need a measure of this set .",
    "this is straightforward for an rplts , as all internal choices are probabilistic ; but we will need to do more for pltss with internal nondeterministic choice .    thus , the subsequent concepts apply _ only to rpltss _ , and we will extend them to pltss in sect .  [",
    "sec : xpl ] . a finite rplts d - tree has finite measure , which can be computed from the values of the probabilistic choices in the trees , i.e. , its edges .",
    "an infinite d - tree will typically have zero measure , but an infinite set of these may have positive measure . instead ,",
    "intuitively , we consider the probability of some finite prefix , which again is the product of the probabilities of all the edges .",
    "formally , a _ basic cylindrical subset _ of @xmath56 contains all trees sharing a given prefix . letting @xmath70 , and @xmath71 to be finite , @xmath72 .",
    "the measure of @xmath73 is : @xmath74 from here , a probability measure @xmath75 $ ] on the smallest field of sets @xmath76 is generated from subsets @xmath73 with @xmath77  ( * ? ? ?",
    "* definition  8) .",
    "gpl has two different kinds of formulae .",
    "state formulae depend directly only on the given state .",
    "_ fuzzy formulae _",
    "depend on _",
    "outcomes_. we give the syntax of gpl , with @xmath78 , @xmath79 , @xmath80 , and @xmath81 , for state formulae , @xmath82 , and fuzzy formulae , @xmath2 , as : @xmath83 \\psi } \\mid { \\mu x.\\psi }      \\mid { \\nu x.\\psi }    \\end{array}\\ ] ] note that only atomic propositions may be negated , but every operator has its dual given in the syntax . the propositional connectives , @xmath84 and @xmath85 , can be used on both state and fuzzy formulae .",
    "operators @xmath86 and @xmath87 are least and greatest fixed point operators for the `` equation '' @xmath88",
    ". additionally , fuzzy formulae must be alternation - free , which prohibits a kind of mixing of least and greatest fixed points , and a formula @xmath2 used to construct state formulae @xmath89 and @xmath90 may not have any free variables .",
    "these operators check the probability for a fuzzy formula @xmath2 ( @xmath91 and @xmath92 are duals ) .",
    "the semantics of gpl is given in terms of rplts d - trees .",
    "in that interpretation , _ diamond _ implies _ box _ : @xmath93 means that there is an @xmath64-transition and it satisfies @xmath2 ; @xmath94 \\psi$ ] means that if there is an @xmath64-transition , it satisfies @xmath2 .",
    "we also use a set @xmath95 for the modalities , reading @xmath96 as @xmath97 and @xmath98 \\psi$ ] as @xmath99 \\psi$ ] .",
    "when we write `` @xmath100 '' for @xmath101 , that represents @xmath4 .    .gpl",
    "/ xpl semantics : fuzzy formulae [ cols= \" > , < \" , ]     the semantics of xpl changes from gpl only due to the measure of the plts outcomes . in particular , we retain the same semantics on _ diamond _ and _ box_. the semantics is defined with respect to a fixed plts @xmath18 .",
    "the function @xmath102 remains the same , while @xmath103 differs for the probabilistic operators .",
    "the semantics for the state formulae is given in table  [ tab : esf ] .",
    "for the fuzzy formulae , the semantics are as in table  [ tab : gff ] .    note the use of @xmath104 and @xmath105 in table  [ tab : esf ] .",
    "we refer to the value @xmath106 as a _",
    "probabilistic value _ and write it as @xmath107 ( @xcite calls this a _ capacity _ ) . unlike in gpl , we may not always be able to compute it with a model checking algorithm .      with internal nondeterminism",
    ", we lose the general relation between conjunctions and disjunctions , as in ( [ eqn : gl21 ] ) .",
    "however , since we are maximizing ( or minimizing ) over schedulers , we would want the relation in ( [ eqn : ndf ] ) .",
    "@xmath108    this requires that the optimal strategy be the same for @xmath109 , @xmath110 , @xmath111 , and @xmath112 ; in general , these may all be distinct . instead",
    ", we will seek to delay the application of all conjunctions and disjunctions until the two sides are _ independent _ , primarily through repeated application of lemma  [ lem : distr ] , which holds for xpl as well because it deals with sets of d - trees , but not their measure .",
    "for example , we can rewrite @xmath113 as @xmath114 .",
    "we generalize this to a syntactic notion of _ separability _ , defined below .",
    "it will be useful to view a fuzzy formula as a kind of an _ and - or tree_.    [ def : and - or ] the and - or tree of a fuzzy formula @xmath2 , @xmath115 is a node labeled by @xmath116 , where @xmath117 , with children @xmath118 and @xmath119 when @xmath120 , and a leaf @xmath2 otherwise .",
    "we can flatten this tree with the straightforward flattening operator , where , e.g. , the tree @xmath121 may be flattened to @xmath122 .",
    "note that flattened trees have alternating @xmath84 and @xmath85 nodes .",
    "a ( conjunctive ) set of formulae @xmath123 corresponds to a flattened and - or tree with the root node labeled by @xmath84 and having the elements of @xmath123 as leaves .",
    "we will assume @xmath115 refers to the flattened tree .",
    "a subformula of @xmath2 of the form @xmath124 or @xmath94\\psi'$ ] is called a _ modal subformula _ of @xmath2 .",
    "we say that @xmath125 is an _ unguarded subformula _ of @xmath2 if it is a leaf in @xmath115 .",
    "the gpl model checking algorithm requires bound variables to be guarded by actions ( i.e. , @xmath126 x \\land \\dots)$ ] is fine , but @xmath127 is not )  @xcite , and we adopt this requirement as well .",
    "[ def : formtrans ]     * the _ fixed - point expansion _ of @xmath2 , denoted by @xmath128 , is a formula @xmath125 obtained by expanding any unguarded subformula of the form @xmath129 to @xmath130 $ ] where @xmath131 .",
    "* we say that a formula is non - probabilistic if it is a state formula , or of the form @xmath132 and @xmath94 \\phi$ ] for @xmath133 and @xmath134 .",
    "purely probabilistic abstraction _ of a fuzzy formula @xmath2 , denoted by @xmath135 , is a formula obtained by removing unguarded non - probabilistic subformulae ( i.e. , @xmath136 , where @xmath82 is non - probabilistic , becomes @xmath125 , etc . ) .",
    "* a _ grouping _ of a formula @xmath2 , denoted by @xmath137 , groups modalities in a formula using distributivity .",
    "formally , @xmath138 maps @xmath2 to a @xmath125 that is equivalent to @xmath2 based on the equivalences in lemma  [ lem : distr ] , applied left - to - right as much as possible on the top level .    at a high level ,",
    "a necessary condition of separability is that the actions guarding distinct conjuncts and disjuncts of a formula are distinct as well .",
    "[ def : act ] the _ action set _ of a formula @xmath2 , denoted by @xmath139 is the set of actions appearing at unguarded modal subformulae of @xmath2 :    * @xmath140 ; * @xmath141 \\psi ) =      \\{a\\}$ ] ; * @xmath142 ; * @xmath143 .",
    "we can now define separability based on action sets of formulae as follows .",
    "[ def : isep ] the set of all separable formulae is the largest set @xmath144 such that @xmath145 , if @xmath146 , then    1 .   every subformula of @xmath125 is in @xmath144 , and 2 .",
    "if @xmath147 where @xmath148 , then @xmath149 .    a formula @xmath2 is _ separable _ if @xmath150 .",
    "below we illustrate separability of formulae .",
    "let @xmath109-@xmath151 be all separable and distinct , and also let @xmath112 and @xmath152 be separable .",
    "note that @xmath138 uses only distributivity of the modal operators over `` @xmath84 '' and `` @xmath85 '' , and not the distributivity of the boolean operators themselves .",
    "consequently , a separable formula may be equivalent to a non - separable formula .",
    "[ ex : sepr ] the formula @xmath153 is separable .",
    "@xmath154(\\psi_1 \\lor \\psi_2 ) \\land [ b](\\psi_3 \\lor      \\psi_4)\\ ] ] the dnf version of @xmath153 , @xmath155 , is not separable since action sets of disjuncts overlap .",
    "\\land [ b]\\psi_3 ) \\lor ( [ a]\\psi_1 \\land           [ b]\\psi_4 ) \\lor ( [ a]\\psi_2 \\land [ b]\\psi_3 ) \\lor ( [ a]\\psi_2           \\land [ b]\\psi_4)\\ ] ]    this is important because we need the subformulae of a separable formula to also be separable .",
    "[ ex : entg ] the formula @xmath157 is a subformula of @xmath155 ( [ eqn : dist ] ) , is not separable , and has no equivalent separable formula : @xmath158\\psi_1 \\land [ b]\\psi_4 ) \\lor ( [ a]\\psi_2 \\land          [ b]\\psi_3)\\ ] ] with @xmath157 , we need to satisfy @xmath109 or @xmath110 following an @xmath64 action , and likewise for @xmath159 or @xmath151 following a @xmath65 action .",
    "an equivalent separable formula would thus have to include @xmath94(\\psi_1 \\lor \\psi_2)$ ] and @xmath160(\\psi_3 \\lor \\psi_4)$ ] , but this would also be satisfied by , e.g. , outcomes satisfying only @xmath94\\psi_1 \\land [ b]\\psi_3 $ ] .",
    "we say that a formula is _ entangled _ at a state if it is not ( equivalent to ) a separable formula even after considering that state s specific characteristics .",
    "for instance , @xmath157 is entangled only at states with both @xmath64 and @xmath65 actions present .",
    "even when considering only states where the actions relevant to entanglement are present , a formula may be entangled at some states and not at others .",
    "[ ex : ents ] the formula @xmath161 reduces to @xmath162 ( [ eqn : sepr ] ) at states that have a @xmath66-transition , and to @xmath157 ( [ eqn : entg ] ) otherwise .",
    "@xmath163\\psi_1 \\land [ b]\\psi_3 \\land { \\langle c \\rangle}{\\mbox{\\sf tt } } ) \\lor      ( [ a]\\psi_1 \\land [ b]\\psi_4 ) \\lor ~ \\\\ \\lor ( [ a]\\psi_2 \\land          [ b]\\psi_3 ) \\lor ( [ a]\\psi_2",
    "\\land [ b]\\psi_4 \\land          { \\langle c \\rangle}{\\mbox{\\sf tt } } ) .",
    "\\end{gathered}\\ ] ]    there are also non - separable formulae that nonetheless would not be entangled at any state of an arbitrary plts .",
    "[ ex : nens ] for the formula @xmath164 , @xmath165 , but at any state it is equivalent either to @xmath94\\psi_1 \\land [ b]\\psi_4 $ ] or to @xmath94\\psi_2 \\land [ b]\\psi_3 $ ] .",
    "@xmath166\\psi_1 \\land [ b]\\psi_4 \\land [ c]{\\mbox{\\sf ff } } ) \\lor      ( [ a]\\psi_2 \\land [ b]\\psi_3 \\land { \\langle c \\rangle}{\\mbox{\\sf tt}}).\\ ] ]    since @xmath138 combines modal subformulae with a common action , we have the following important consequence .",
    "all conjunctive formulae and disjunctive formulae are separable .",
    "we outline a model checking procedure for xpl formulae for a fixed plts @xmath18 , along similar lines to the gpl model checking algorithm in  ( * ? ? ?",
    "@xmath167 ) .",
    "the model checking procedure succeeds whenever the given formula is separable .",
    "given a formula @xmath2 , its _ fisher - ladner closure _",
    ", @xmath168 , is the smallest set such that the following hold :    * @xmath169 . *",
    "if @xmath170 , then : * * if @xmath171 or @xmath112 , then @xmath172 ; * * if @xmath173 or @xmath94 \\psi''$ ] for some @xmath174 , then @xmath175 ; * * if @xmath176 , then @xmath177 \\in cl(\\psi)$ ] , with @xmath24 either @xmath0 or @xmath178 .    also , we let @xmath179 represent the set of and - or trees with elements of a set @xmath8 as leaves . the core of the model checking algorithm is the construction of a _ dependency graph _ @xmath180 , to compute @xmath107 , such that all the formulae appearing in the graph will be in the set @xmath181 . when constructing a dependency graph , in order to divide a formula by actions , we transform it into a _ factored _ form , in a similar manner to checking separability .",
    "if we are unable to transform a formula into a factored form , as can happen when a formula is non - separable , the graph construction terminates with failure .    a factored formula @xmath2 can be trivial , when @xmath182 .",
    "otherwise , every leaf of @xmath115 is in the _ action _ form , @xmath183 , and no action may guard more than one leaf .    given a state @xmath184 ,",
    "a formula @xmath125 can be transformed into a semantically equivalent one @xmath185 that is in factored form to check for equivalence with existing nodes , but not for finding the factored form . ] as : @xmath186 .",
    "@xmath187 _ partially evaluates _",
    "@xmath125 , by evaluating unguarded non - probabilistic subformulae of @xmath125 as well as all unguarded modal subformulae with actions absent at state @xmath184 , yielding @xmath188 or @xmath189 for each , and simplifying the result .",
    ", we may have a leaf in action form @xmath190 .",
    "then , we may view an action @xmath64 as a prefix label on the subtree @xmath191 .",
    "] then @xmath192 .",
    "the dependency graph for model checking a formula @xmath2 with respect to a state @xmath184 in plts @xmath6 , denoted by @xmath193 , is a directed graph @xmath194 , where _ node set _ @xmath195 , and _ edge set _ @xmath196",
    "; i.e. , the edges are labeled from @xmath197 .",
    "the sets @xmath198 and @xmath199 are the smallest such that :    * @xmath200 . *",
    "if @xmath201 , @xmath125 is not in factored form : if equivalent @xmath185 in factored form exists , then @xmath202 and @xmath203 . *",
    "if @xmath204 , then @xmath205 for @xmath206 .",
    "moreover , @xmath207 for @xmath208 , and @xmath209 . *",
    "if @xmath210 , then @xmath211 for each @xmath212 such that @xmath213 .",
    "moreover , @xmath214 .",
    "if @xmath215 and @xmath125 has no factored form , then the dependency graph construction fails .",
    "when we transform @xmath125 to the factored form @xmath185 , the semantics does not change , i.e. , @xmath216 . for the factored formulae ,",
    "standard xpl semantics apply ( table  [ tab : gff ] ) .",
    "note that we can assume _ action _ nodes to be of the form @xmath217 , as the action @xmath64 must then be present at state @xmath218 . from these semantics",
    ", we also get the relationships for the probabilistic values . here , @xmath219 is the standard product operator , while @xmath220 .",
    "[ lem : prv ] fix @xmath221 .",
    "the probabilistic value @xmath222 for a node @xmath223 is as follows :    * @xmath224 and @xmath225 . *",
    "if @xmath223 is an _",
    "and_-node , then : + @xmath226 . * if @xmath223 is an _",
    "or_-node , then : + @xmath227 . * if @xmath223 is an action node , i.e. , @xmath228 , then : @xmath229 * the remaining nodes @xmath223 have a unique successor @xmath230 with @xmath231 .",
    "most of the cases are straightforward and similar to the gpl model checking algorithm  ( * ? ? ?",
    "* lemma  8) and a result for two - player stochastic parity games  ( * ? ? ? * theorem  4.22 ) .",
    "the _ and_-node and _ or_-node cases have the product and coproduct , respectively , due to independence .",
    "we explain the _ action node _ case in more detail .",
    "the sum over the probabilistic distribution is as in gpl and ( [ eqn : gl22 ] ) ; we explain the nondeterministic choice .",
    "a plts scheduler makes a choice for an action given the partial computation @xmath24 . here",
    ", this choice is made based on a formula , @xmath232 , to be satisfied .",
    "when the initial formula @xmath2 is separable , this is well - defined : given @xmath6 , @xmath184 , and @xmath2 , the scheduler can deduce @xmath232 from @xmath24 , a la traversal of the dependency graph .",
    "we note that , although a particular choice may maximize @xmath222 , a scheduler that makes this choice _ every time _ is not necessarily optimal .",
    "indeed , no optimal scheduler may exist , in which case we would only have @xmath233-optimal schedulers for any @xmath234  @xcite .",
    "the probabilistic value may be predicated on making a different choice _",
    "eventually_. the formulation in lemma  [ lem : prv ] is consistent with this possibility , and the existence of ( @xmath233-)optimal schedulers may be justified through a common method , called _ strategy improvement _ or _ strategy stealing _  @xcite .",
    "the intuition is that , in case of a loop , we can add a choice to succeed immediately with the maximum probability for the state .",
    "this can not increase the probability , and the maximizing scheduler can otherwise be the same , if this choice does not arise .",
    "the graph construction of @xmath193 terminates for any xpl formula @xmath2 and plts @xmath6 .",
    "moreover , if @xmath2 is separable , the xpl model checking algorithm will complete the construction of the dependency graph .",
    "@xmath168 is finite , so @xmath181 ( for dnf versions used for equivalence checking ) is finite .",
    "the number of actions in @xmath6 and @xmath2 is finite , so the number of factored formulae is finite .",
    "this is sufficient to guarantee termination , as we fail when we can not construct a factored formula .",
    "meanwhile , separability of @xmath2 implies that we can construct a factored formula from any @xmath235 .",
    "our primary contribution is the completed dependency graph for a separable formula @xmath2 . for model checking separable xpl formulae ,",
    "we show how , given the graph , to compare the probabilistic value of @xmath2 at a state @xmath184 against a threshold @xmath236 .",
    "we do this by first constructing a _ system of polynomial min / max fixed point equations _ from the graph .",
    "each node @xmath237 in the dependency graph is associated with a real - valued variable @xmath238 .",
    "given a set of variables @xmath239 , each equation in the system is of the form @xmath240 where @xmath241 is    * a polynomial over @xmath239 such that the sum of coefficients is @xmath242 ; or * of the form @xmath243 or @xmath244 where @xmath245 .",
    "furthermore , the equations form a stratified system , where each variable @xmath238 can be assigned a stratum @xmath246 such that @xmath238 is defined in terms of only variables of the form @xmath247 such that @xmath248 ( cf .",
    "* def .  9 ) ) ; and variables in the same stratum @xmath249 fall under the same fixed point .    given a real value @xmath236 , a system of polynomial min / max fixed point equations and a distinguished variable @xmath250 defined in the system ,",
    "whether or not @xmath251 ( or @xmath252 ) in its solution is decidable .",
    "we write the min / max polynomial system , @xmath253 , as a sentence in the first - order theory of real closed fields , similar to  @xcite .",
    "the additional comparison will be @xmath254 or @xmath255 .",
    "along with the equation system , we need to encode fixed points and @xmath256/@xmath257 .",
    "we can encode @xmath258 as ( [ eqn : fomax ] )  ( cf .",
    "* section  5 ) ) : @xmath259 meanwhile , letting @xmath239 be the set of all variables and @xmath260 a subset belonging to some stratum with least fixed point , we can encode the fixed point itself as ( [ eqn : folfp ] ) : @xmath261 the stratification of fixed points in the equation system precludes a cyclical dependency between a least and a greatest fixed point ; a greatest fixed point can be encoded similarly .    the original fixed point equation system , along with the query @xmath251 ( or @xmath262 ) , ( [ eqn : fomax])-([eqn : folfp ] ) , and their counterparts encoding @xmath256 and greatest fixed point , are sentences in a first order theory of real closed fields , which is decidable  @xcite .",
    "hence the decidability of @xmath251 ( and @xmath252 ) in the solution to the fixed point equations follows .",
    "we use the above result to determine whether or not @xmath263 ( similarly , @xmath264 ) for a separable xpl formula @xmath2 .",
    "the polynomial fixed point system is derived similarly to  ( * ? ? ?",
    "* section  4.1.2 ) , with a variable @xmath265 for each node @xmath266 in the dependency graph @xmath193 , and equations based on lemma  [ lem : prv ] .    *",
    "if @xmath2 is not in factored form , then @xmath266 has a unique edge labeled by @xmath267 to a node @xmath268 , and @xmath269 .",
    "* @xmath270 and @xmath271 . *",
    "if @xmath266 is an _",
    "and_-node , then @xmath272 . * if @xmath266 is an _",
    "or_-node , then @xmath273 .",
    "* if @xmath266 is an action node and @xmath274 , then + @xmath275 .",
    "the construction of the dependency graph @xmath193 , when @xmath2 is separable , yields a polynomial min / max fixed point equation system , such that the value of @xmath265 in its solution is @xmath107 .",
    "the correctness result follows from lemma  [ lem : prv ] and the semantics of fixed points given by equation  [ eqn : folfp ] ( and its counterpart ) .    along the same lines as for @xmath276",
    ", we can construct a polynomial min / max fixed point equation system whose solution is @xmath277 .",
    "consequently , we have :    given a state formula @xmath278 with separable subformulae , a plts @xmath6 and a state @xmath184 in @xmath6 , whether or not @xmath279 is decidable .",
    "scale=1    ( s1p ) @xmath280 ; ( s1apbc ) [ below = of s1p ] @xmath281\\psi_{bc})$ ] ; ( s2bcp ) [ below = of s1apbc ] @xmath282\\psi\\land [ c]\\psi)$ ] ; ( s2bp ) [ left= 3 cm of s2bcp ] @xmath282\\psi)$ ] ; ( s2cp ) [ right=3 cm of s2bcp ] @xmath283\\psi)$ ] ; ( s3p ) [ below = of s2bp ] @xmath284 ; ( s4p ) [ below = of s2cp ] @xmath285 ; ( s3apbc ) [ below = of s3p ] @xmath286\\psi_{bc})$ ] ; ( s4apbc ) [ below = of s4p ] @xmath287\\psi_{bc})$ ] ; ( s5bcp ) [ below = of s3apbc ] @xmath288\\psi\\land [ c]\\psi)$ ] ; ( s6bcp ) [ below = of s4apbc ] @xmath289\\psi\\land [ c]\\psi)$ ] ; ( s5tt ) [ below = of s5bcp ] @xmath290 ; ( s6tt ) [ below = of s6bcp ] @xmath291 ;    ( s1p ) edge node @xmath267 ( s1apbc ) ( s1apbc ) edge node @xmath64 ( s2bcp ) ( s2bcp ) edge [ swap ] node @xmath292 ( s2bp ) ( s2bcp ) edge node @xmath292 ( s2cp ) ( s2bp ) edge [ swap ] node @xmath65 ( s3p ) ( s2bp ) edge [ bend right , swap , very near start ] node @xmath65 ( s4p ) ( s4p ) edge [ swap ] node @xmath267 ( s4apbc ) ( s3apbc ) edge [ bend right , swap , near start ] node @xmath64 ( s2bcp ) ( s3apbc ) edge [ swap ] node @xmath64 ( s5bcp ) ( s5bcp ) edge [ swap ] node @xmath267 ( s5tt ) ( s2cp ) edge [ swap ] node @xmath66 ( s4p ) ( s2cp ) edge [ bend left , very near start ] node @xmath66 ( s3p ) ( s3p ) edge [ swap ] node @xmath267 ( s3apbc ) ( s4apbc ) edge [ bend left , near start ] node @xmath64 ( s2bcp ) ( s4apbc ) edge [ swap ] node @xmath64 ( s6bcp ) ( s6bcp ) edge [ swap ] node @xmath267 ( s6tt ) ;    [ ex : modchk ] for the plts @xmath6 in fig .",
    "[ fig : plts ] and fuzzy formula @xmath293[b]x \\land [ a][c]x$ ] , we have symmetric nondeterministic choices on @xmath65 and @xmath66 from state @xmath59 , and the formula is satisfied by all finite d - trees ( since both @xmath60 and @xmath61 have a probability greater than @xmath294 of returning to @xmath59 , the infinite d - trees have positive measure on any scheduler ) . letting @xmath295\\psi \\land [ c]\\psi$ ] , we get the dependency graph shown in fig .  [",
    "fig : xplp ] .",
    "we find @xmath296 as the value of @xmath297 in the least fixed point from the following equations : @xmath298 solving the equations , we get @xmath299 .",
    "note that the model checking algorithm can be broken into the following two parts : writing down a polynomial system , and then finding the ( approximate ) solution .",
    "the first part is bounded double - exponentially in the size of the fuzzy formula , as we deal with ( for complexity purposes on equivalence checking ) dnf formulae from the fisher - ladner closure . for the second part",
    ", value iteration is guaranteed to converge , when computing a single least or greatest fixed point  @xcite , but may be exponentially slow in the number of digits of precision  @xcite . for polynomial systems arising from conjunctive formulae ,",
    "alternative approximation methods have been proven to be efficient  @xcite .",
    "pctl * is a widely used and well - known logic for specifying properties over markov chains and mdps .",
    "the syntax of pctl * may be given as follows , where @xmath80 and @xmath82 and @xmath2 represent state formulae and path formulae , respectively : @xmath300 this is similar to the syntax given by  ( * ? ? ?",
    "* chapter  @xmath301 ) , except omitting the bounded _ until _ operator .",
    "@xmath302    in ( * ? ? ?",
    "3.2 ) , pctl * model checking over markov chains was encoded in terms of gpl model checking over rpltss .",
    "first of all , markov chains are represented as rpltss with one action label ( @xmath303 ) . due to this , all d - trees are paths representing runs in the markov chain .",
    "thus the linear - time semantics of pctl * carries over , since all the `` trees '' degenerate to paths .",
    "the gpl encoding of pctl * then relies on the following three basic steps :    1 .",
    "next state operator @xmath304 is encoded in terms of the diamond modality @xmath305 in gpl .",
    "2 .   until formulae @xmath306 are encoded by unrolling them as @xmath307 and using a least fixed point gpl formula to represent the unrolling .",
    "formulae with negation of the form @xmath308 are encoded by finding negating the encoding of @xmath2 .",
    "other operators including pctl * path quantifiers have corresponding operators in gpl , and are translated directly .",
    "the above encoding has a significant limitation : although rpltss in general can exhibit both nondeterministic and probabilistic choices , the gpl - based encoding was only for model checking pctl * only over markov chains , and not over mdps .",
    "this is because the nondeterminism in mdps has linear - time semantics , while all nondeterminism in gpl is under the branching - time semantics .",
    "indeed , this nondeterminism is entirely unused in the above encoding by limiting rpltss to one action label ( @xmath309 ) , which , in turn made every d - tree into a path .    as xpl semantics for fuzzy formulae is also defined over d - trees , the pctl * encoding of (",
    "3.2 ) carries over to xpl essentially unchanged ( we use xpl s @xmath276 for gpl s @xmath310 , since we assume a maximizing scheduler ) . for model checking mdps , we represent them as pltss , treating the internal nondeterminism among the actions in an mdp as internal nondeterminism in a plts as well .",
    "note that d - trees of a plts obtained from an mdp are still paths , since branching in the d - trees only represents external nondeterminism .",
    "consequently , the addition of internal nondeterminism in pltss , interpreted under the linear - time semantics , is orthogonal to the problem of encoding pctl * , because the internal nondeterminism is resolved by the time we reach d - trees .",
    "model checking of a pctl * formula @xmath311 over an mdp is cast as xpl model checking of the corresponding plts , where the xpl formula is generated by @xmath312 defined in table  [ tab : pctl ] . in the definition , `` @xmath313 '' represents the negation of an xpl formula , also expressed in xpl .",
    "note that , as stated earlier , the translation of pctl * formulae to xpl formulae is virtually identical to the translation to gpl  ( * ? ? ?",
    "* sect  3.2 ) .",
    "the novelty is that we have identified the xpl formulae resulting from our translation as separable , and hence pctl * properties can be successfully model checked over mdps with our xpl model checking algorithm .",
    "we consider recursive mdps ( rmdps )  @xcite as a nondeterministic extension of recursive markov chains ( rmcs )  @xcite .",
    "we discuss a more general model , called _ recursive simple stochastic games _",
    "( rssgs ) ; formally , an rssg @xmath314 is a tuple @xmath315 , where each _ component graph _",
    "@xmath316 is a septuple @xmath317 :    * @xmath318 is a set of nodes , containing subsets @xmath319 and @xmath320 of entry and exit nodes , respectively .",
    "* @xmath321 is a set of boxes , with a mapping @xmath322 assigning each box to a component .",
    "each box has a set of call and return ports , corresponding to the entry and exit nodes , respectively , in the corresponding components : @xmath323 , @xmath324 .",
    "additionally , we have : @xmath325 * @xmath326 is a mapping that specifies whether , at each state , the choice is probabilistic ( i.e. , _ player _",
    "@xmath327 ) , or nondeterministic ( player @xmath69 : maximizing , player @xmath328 : minimizing ) .",
    "as any @xmath329 has no outgoing transitions , let @xmath330 for these states .",
    "* @xmath331 is the transition relation , with transitions of the form @xmath332 , when @xmath330 and @xmath333 is not an exit node or a call port , and @xmath334 may not be an entry node or a return port .",
    "additionally , @xmath335 $ ] and , for each @xmath333 , @xmath336 .",
    "meanwhile , the nondeterministic extension yields transitions of the form @xmath337 when @xmath338 .",
    "recursive mdps ( rmdps ) only have a player @xmath69 or player @xmath328 , depending on whether they are maximizing or minimizing , respectively .",
    "termination probabilities can be computed for @xmath69-rssgs , and are always achieved , for both players , with a strategy limited to a class called _ stackless _ and memoryless ( sm )  @xcite .",
    "the essence of sm strategies is that in each nondeterministic choice , the selection is fixed to a single state from its distribution , which makes the resolution of the nondeterministic choices substantially simpler than in the general case . for multi - exit rssgs ,",
    "the termination probability is _ determined _",
    "@xcite , although an optimal strategy may not exist , and the problem of computing the probability is undecidable , in general .",
    "sm strategies are inadequate even for @xmath328-exit rmdps  @xcite .",
    "figure  [ fig : rmdp ] shows a recursive mdp with two components , @xmath314 and @xmath339 .",
    "any call to @xmath314 nondeterministically results in either a call to @xmath339 ( via box @xmath340 ) or a transition to @xmath333 .",
    "given an rmdp @xmath314 , we can define a plts @xmath6 that simulates @xmath314 , with @xmath341 and states of the plts corresponding to nodes of the rmdp .",
    "we retain the rmdps transitions , labeling them as @xmath342 for actions from a nondeterministic choice and @xmath236 for probabilistic choice . to this basic structure",
    "we add three new kinds of edges :    * @xmath343 for the @xmath237th exit node of a component , * @xmath66 edges from a call port to the called component s entry node , and * @xmath344 edges from a call port to each return port in the box .    while @xmath66 edges denote control transfer due to a call , @xmath345 edges summarize returns from the called procedure .",
    "figure  [ fig : rmdp ] shows the result of the translation for one component of the rmdp .",
    "formally , we define the plts @xmath6 as follows :    [ def : trmc ] the translated rmdp @xmath314 is a plts @xmath18 :    * the set of states @xmath8 is the set of all the nodes , as well as the call and return ports of the boxes , i.e. , @xmath346 . additionally , we associate a consistent index with each state corresponding to an exit node or a return port . *",
    "the transition relation @xmath17 has all the transitions of the components , labeled by action @xmath236 for the probabilistic transitions and @xmath342 for the nondeterministic ones .",
    "thus , when @xmath347 for any @xmath237 , then @xmath348 , and when @xmath349 , @xmath350 . additionally , we have @xmath351 and @xmath352 for every box @xmath65 , and @xmath353 for every exit node . note the indices used . *",
    "the transition probability distribution @xmath16 is defined as @xmath354 as given for the rmdp @xmath314 , @xmath355 , where @xmath356 is a one - to - one function ( when @xmath357 for any @xmath334 with @xmath358 , @xmath359 for an arbitrary @xmath334 with @xmath358 ) , and @xmath360 if the action is not @xmath236 or @xmath342 .",
    "* we do not use the interpretation in the translation , i.e. , @xmath361 for any state @xmath184 , unless additional relevant information about the rmdp @xmath314 is available .    for rmcs ,",
    "the translation yields a simulating rplts @xmath6 ( no @xmath342 actions ) .",
    "intuitively , @xmath6 preserves all the non - recursive transition structure of @xmath314 via the actions labeled by @xmath236 and @xmath342 .",
    "there are additional @xmath66 actions to model call transitions .",
    "note that each call port will have a single outgoing @xmath66 transition , while the entry nodes may have multiple incoming @xmath66 transitions .",
    "meanwhile , we need a different design to associate exit nodes with return ports , as an exit node may be associated with multiple return ports .",
    "thus , we have indexed @xmath241 and @xmath345 actions and require a standard formula to model termination .",
    "we note that the resulting structure is similar to the nested state machines ( nsm )  @xcite , with the @xmath362 , @xmath66 , @xmath344 , and @xmath343 edges corresponding to the ( local ) , , _ jump _ , and edges , respectively , in the nsm model .    ]",
    "termination of @xmath69-rmdps can be encoded as the following separable formula : @xmath363    termination of multi - exit rmdps is undecidable , in general  @xcite .",
    "we can still encode it in xpl , but the resulting formula is not separable : the termination formula for a @xmath328-exit rmdp  ( [ eqn : mermc ] ) is entangled on the @xmath66 action .",
    "@xmath364    we note that the conjunction @xmath365 in  ( [ eqn : sermc ] ) is independent .",
    "additionally , the disjunction between the two conjuncts in  ( [ eqn : mermc ] ) is mutually exclusive , since @xmath366 and @xmath367 correspond to eventually reaching distinct exits ; however , it is correct to sum them only for rmcs , as the nondeterministic choices in rmdps preclude the simple summation of mutually exclusive outcomes .",
    "pctl *  @xcite may be considered a linear - time logic , in the sense that its fuzzy formulae are essentially full ltl .",
    "similarly , pctl  @xcite is not the only plausible extension of ctl : instead of replacing the @xmath368 and @xmath369 operators with the @xmath310 operators , we could have full ctl as fuzzy formulae , as there is a natural interpretation of ctl over d - trees , and this logic , over rplts , would be subsumed by gpl .",
    "a similar logic , probabilistic tree temporal logic ( pttl ) , has been independently introduced  @xcite .",
    "branching processes ( bps ) are a branching - time extension of markov chains , and pttl is a logic over bps .",
    "the problem of bp extinction corresponds to termination of @xmath69-exit rmcs  @xcite .",
    "bps have also been extended with nondeterminism , yielding branching mdps ( bmdps ) , for which the extinction and reachability problems have been analyzed  @xcite .",
    "we write the syntax of pttl  ( * ? ? ?",
    "* definition  @xmath370 ) , where @xmath371 , and we refer to @xmath82 and @xmath2 as state and fuzzy formulae , as for xpl : @xmath372 \\mid \\mathsf{e } [ \\phi \\mathsf{u } \\phi ]           \\mid \\mathsf{a } [ \\phi \\mathsf{r } \\phi ] \\mid \\mathsf{e } [ \\phi             \\mathsf{r } \\phi ]    \\end{array}\\ ] ]    we can translate bps to rpltss and bmdps to pltss , but unlike with rmdps , we may view pltss simply as more general than bmdps .",
    "so , we give the semantics for pttl over pltss ( without terminal states ) , assuming maximizing schedulers , by encoding it in xpl , as @xmath373 , in table  [ tab : pttl ] .",
    "@xmath374 e_{pttl}(\\phi ) , & \\gamma = \\mathsf{ax } \\phi , \\\\          { \\langle - \\rangle } e_{pttl}(\\phi ) , & \\gamma = \\mathsf{ex } \\phi , \\\\",
    "\\mu x.e_{pttl}(\\phi_2 ) \\lor ( e_{pttl}(\\phi_1 ) \\land [ - ] x ) , &        \\gamma = \\mathsf{a}[\\phi_1 \\mathsf{u } \\phi_2 ] , \\\\",
    "\\mu x.e_{pttl}(\\phi_2 ) \\lor ( e_{pttl}(\\phi_1 ) \\land { \\langle - \\rangle } x ) , &        \\gamma = \\mathsf{e}[\\phi_1 \\mathsf{u } \\phi_2 ] , \\\\",
    "\\nu x.e_{pttl}(\\phi_2 ) \\land ( e_{pttl}(\\phi_1 ) \\lor [ - ] x ) , &        \\gamma = \\mathsf{a}[\\phi_1 { \\mbox{\\sf r } } \\phi_2 ] .",
    "\\\\          \\nu x.e_{pttl}(\\phi_2 ) \\land ( e_{pttl}(\\phi_1 ) \\lor { \\langle - \\rangle } x ) , &        \\gamma = \\mathsf{e}[\\phi_1 { \\mbox{\\sf r } } \\phi_2 ] .",
    "\\\\          \\hline      \\end{array }      \\right.\\ ] ]    note that pttl s fuzzy formulae are substantially more limited than full ctl , which does , however , place them as a subset of separable xpl .",
    "thus , we have also extended pttl as a logic over bmdps , whose properties we can verify with the xpl model checking algorithm .",
    "previous attempts to extend gpl included allowing systems with internal nondeterminism while still resolving the probabilistic choices first  @xcite , and egpl , which had similar syntax and semantics to xpl , but limited the model checking to non - recursive formulae  @xcite .",
    "following gpl , xpl treats conjunction in a traditional manner , retaining the properties that @xmath375 , and @xmath376 for any formula @xmath2 .",
    "however , the probability value of @xmath377 can not be computed based on the probability values of the conjuncts @xmath109 and @xmath110 .",
    "this makes model checking in xpl more complex , but also contributes to its expressiveness .",
    "another probabilistic extension of @xmath0-calculus is pl@xmath0 .",
    "in contrast to xpl , the most expressive version of pl@xmath0 , denoted pl@xmath378  @xcite , defines _",
    "three _ conjunction operators and their duals such that their probability values can be computed from the probabilities of the conjuncts .",
    "the logic pl@xmath379 is able to support branching time and an intuitive game semantics  @xcite . along the same lines as our xpl encoding",
    ", we can encode termination of @xmath69-exit rmdps as model checking in pl@xmath379 , and rmc termination in pl@xmath378 .",
    "however , attempting to encode multi - exit rmdp termination in pl@xmath378 similarly to multi - exit rmc termination would lead to an incorrect , rather than undecidable , encoding . determining the relationship between xpl and pl@xmath380 in branching time is an important problem .",
    "other recent probabilistic extensions of @xmath0-calculus include the lukasiewicz @xmath0-calculus  @xcite and @xmath381-calculus  @xcite , which can encode pctl * over mdps , and p@xmath0tl  @xcite , but all these limit nondeterminism to the linear - time semantics .",
    "although closely related , algorithms to check properties of rmcs ( and ppdss  @xcite ) were developed independently  @xcite .",
    "these were related to algorithms for computing properties of systems such as branching process ( bp ) extinction and the language probability of stochastic context free grammars .",
    "the relationship between gpl and these systems was mentioned briefly in  @xcite , but has remained largely unexplored .",
    "there has been significant interest in the study of expressive systems with nondeterministic choices , such as rmdps and branching mdp ( bmdps )  @xcite . at the same time , the understanding of the polynomial systems has expanded . in  @xcite ,",
    "the class of probabilistic polynomial systems ( pps ) is introduced , which characterizes when efficient solutions to polynomial equation systems are possible even in the worst case  @xcite .",
    "while  @xcite did not distinguish the systems arising from @xmath69-exit rmcs from those from multi - exit rmcs , the pps class is limited to @xmath69-exit rmcs .",
    "it was also extended for rmdp termination and , later , bmdp reachability , both having polynomial - time complexity for min / maxppss  @xcite .",
    "systems producing equations in pps form show an interesting characteristic : that the properties are expressible as purely conjunctive or purely disjunctive formulae .",
    "recall that such formulae are trivially separable .",
    "polynomial systems equivalent to those arising from separable gpl have recently been considered in a more general setting in the context of _ game automata _",
    "@xcite , followed by an undecidability result for more general properties on the automata  @xcite . characterizing equation systems that arise from separable formulae and",
    "investigating their efficient solution is an interesting open problem .",
    "k.  etessami , a.  stewart , and m.  yannakakis , `` greatest fixed points of probabilistic min / max polynomial equations , and reachability for branching markov decision processes , '' in _ icalp , part ii_.1em plus 0.5em minus 0.4emberlin , heidelberg : springer , 2015 , pp . 184196 .",
    "r.  segala and a.  turrini , `` comparative analysis of bisimulation relations on alternating and non - alternating probabilistic models , '' in _",
    "1em plus 0.5em minus 0.4emieee computer society , 2005 , pp .",
    "j.  desharnais , v.  gupta , r.  jagadeesan , and p.  panangaden , `` weak bisimulation is sound and complete for pctl * , '' in _ concur _ , ser .",
    "1em plus 0.5em minus 0.4emspringer berlin heidelberg , 2002 , vol . 2421 , pp .",
    "355370 .",
    "h.  michalewski and m.  mio , `` on the problem of computing the probability of regular sets of trees , '' in _ fsttcs _ , ser .",
    "lipics , vol .",
    "45.1em plus 0.5em minus 0.4emschloss dagstuhl - leibniz - zentrum fuer informatik , 2015 , pp",
    ". 489502 .",
    "k.  etessami , a.  stewart , and m.  yannakakis , `` polynomial time algorithms for multi - type branching processes and stochastic context - free grammars , '' in _",
    "stoc_.1em plus 0.5em minus 0.4emacm , 2012 , pp .",
    "579588 .",
    "p.  castro , c.  kilmurray , and n.  piterman , `` tractable probabilistic mu - calculus that expresses probabilistic temporal logics , '' in _ stacs _ , ser .",
    "lipics , vol .",
    "30.1em plus 0.5em minus 0.4emschloss dagstuhl  leibniz - zentrum fuer informatik , 2015 , pp . 211223 .",
    "k.  etessami , a.  stewart , and m.  yannakakis , `` polynomial time algorithms for branching markov decision processes and probabilistic min(max ) polynomial bellman equations , '' in _ icalp , part i_.1em plus 0.5em minus 0.4emberlin , heidelberg : springer , 2012 , pp . 314326",
    ".    m.  przybylko and m.  skrzypczak , `` on the complexity of branching games with regular conditions , '' in _ lipics _ , vol .",
    "58.1em plus 0.5em minus 0.4emschloss dagstuhl - leibniz - zentrum fuer informatik , 2016 ."
  ],
  "abstract_text": [
    "<S> generalized probabilistic logic ( gpl ) is a temporal logic , based on the modal mu - calculus , for specifying properties of reactive probabilistic systems . </S>",
    "<S> we explore xpl , an extension to gpl allowing the semantics of nondeterminism present in markov decision processes ( mdps ) . </S>",
    "<S> xpl is expressive enough that a number of independently studied problems such as termination of recursive mdps ( rmdps ) , pctl * model checking of mdps , and reachability for branching mdps can all be cast as model checking over xpl . </S>",
    "<S> termination of multi - exit rmdps is undecidable ; thus , model checking in xpl is undecidable in general . </S>",
    "<S> we define a subclass , called separable xpl , for which model checking is decidable . </S>",
    "<S> decidable problems such as termination of 1-exit rmdps , pctl * model checking of mdps , and reachability for branching mdps can be reduced to model checking separable xpl . </S>",
    "<S> thus , xpl forms a uniform framework for studying problems involving systems with non - deterministic and probabilistic behaviors , while separable xpl provides a way to solve decidable fragments of these problems . </S>"
  ]
}
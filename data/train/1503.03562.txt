{
  "article_text": [
    "in recent years , deep neural networks ( dnns ) have attracts tremendous attentions from a wide range of research areas related to signal and information processing .",
    "state - of - the - art performances have been achieved with dnn techniques on various challenging tasks and applications , such as speech recognition  @xcite , object recognition  @xcite , multimedia event detection  @xcite , etc .",
    "almost all the current dnns are real - valued - weight mutlilayer neural networks ( rmnns ) .",
    "however , an effective rmnns are often massive and require large computational and energetic resources .",
    "for example , googlenet has 22 layers with tens of thousands of hidden units  @xcite .",
    "mnns with binary weights ( bmnns ) have the advantage that they can be implemented efficiently on dedicated hardware .",
    "for example , @xcite have presented a chip which enable @xmath0 multiply accumulates per second per mw power efficiency with binary weights .",
    "thus , it is attractive to develop effective algorithms for bmnns to achieve comparable performances with rmnns .",
    "traditional mnns are trained with backpropagation ( bp ) or similar gradient descent methods .",
    "however , bp or gradient descent methods can not be directly used for training binary neural networks . a straightforward method for this problem",
    "is to binarize the real - valued weights , while this approach will decrease the performance significantly .",
    "recently ,  @xcite presented an expectation backpropagation ( ebp ) algorithm , which can support online training of mnns with either continuous or discrete weight values .",
    "experiments on several large text datasets show promising performances on binary classification tasks with binary - weighted mnns  @xcite . as an extension of the previous work by  @xcite , in this work , we study the performance of ebp algorithm on image classification tasks with binary and real weights mnns . besides , we investigate the effects of different factors , such as network depth , layer size and dropout strategies , on the performance of ebp algorithm in image classification .",
    "this study explores the possibility of using bmnns for the multimedia supervised classification tasks .",
    "in this section , we review the expectation backpropagation ( ebp ) and introduce how to implement the ebp algorithm for binary weights in detail . before introducing the ebp algorithm",
    ", we first describe the general notations .",
    "a blodfaced capital letter @xmath1 denotes a matrix with components @xmath2 .",
    "a blodfaced non - capital letter @xmath3 denotes a column vector with components @xmath4 .",
    "besides , @xmath5 denotes @xmath6 and @xmath7 denotes @xmath8 . the indicator function @xmath9 denotes that @xmath10 if condition @xmath11 holds , and 0 otherwise .",
    "we consider a general feedforward multilayer neural networks ( mnn ) with connections only between adjacent layers .",
    "suppose the mnn has @xmath12 layers , @xmath13 is the number of hidden units in the @xmath14-th layer , and @xmath15 is weight matrices @xmath16 between the @xmath17-th layer and @xmath14-th layer . for simplicity ,",
    "the activation function is @xmath18 function in this study .",
    "the output of the network is therefore @xmath19 similar to supervised learning with mnns , the task is to learn @xmath20 for a mnn with known architecture given a set of labeled data pairs @xmath21 ( note @xmath22 ) , where each @xmath23 is a data point , and each @xmath24 is a label .    the ebp algorithm is derived within bayesian framework . given the labeled dataset , the aim is to find the weights @xmath20 to maximize the posterior probability @xmath25 . with the posterior ,",
    "one can obtain the most probable weight configuration to minimize the expected zero - one loss over the outputs using the maximum a posteriori ( map ) estimation . @xmath26",
    "the posterior @xmath25 is updated in an online setting , where samples arrive sequentially . according to the bayes rule , when the @xmath27-th sample is arrived ,",
    "the posterior is updated as follows . for @xmath28 , @xmath29 however , this update is generally intractable for large networks , as there is an exponential number of values for @xmath30 to be stored and updated . to solve this problem , the mean - field approximation is used to approximate @xmath30",
    "specifically , @xmath30 is approximated by @xmath31 , for which @xmath32 where each factor is normalized .",
    "based on the equation , performing a marginal of the posterior ( see appendix a in  @xcite for details ) of the bayes update and re - arrange terms , we can obtain a bayes - like update to the marginal @xmath33 where @xmath34 is the marginal likelihood .",
    "accordingly , the @xmath31 can be directly updated in a single step .",
    "the problem is that eq .",
    "[ eq : sigleupdate ] contains a generally intractable summation over an exponential number of values .    to simplify the summation ,",
    "another approximation is performed by assuming that the neuronal fan - in is `` large '' , namely , a large number of units in the previous layer is connected to each unit in the next layer . since all the other weights",
    "besides @xmath35 are independent ( based on the mean field approximation ) , together with the large fan - in assumption , we can assume that the normalized input to each neural layer is a gaussian distribution based on the central limit theorem ( clt ) , thus @xmath36 this is a quite common and effective one  @xcite approximation .",
    "using this approximation ( eq .  [ eq : gaussian ] ) and the activation function @xmath37 , the distribution of @xmath38 and @xmath39 can be calculated sequentially for all the layers @xmath40 (  * forward pass * \" ) , for any given value of @xmath41 ( i.e. , the input ) and @xmath35 . at the end of the forward pass , we can obtain @xmath42 , @xmath43 . with the obtained @xmath44 , we can use eq .",
    "[ eq : posup ] to update @xmath35 , @xmath43 .    because it is very computational to directly calculate @xmath45 for every @xmath46 , taylor expansion of @xmath35 ( around its mean , @xmath47 to first order ) is used to approximate @xmath45 .",
    "the first order terms in this expansion can be calculated using * backward propagation * of derivative terms @xmath48 thus , after a forward pass for @xmath38 and @xmath39 , @xmath40 , and a backward pass for @xmath45 , @xmath49 for all @xmath35 , we can update @xmath50 in each training epoch . in the next",
    ", we will summarize the general expectation backpropagation algorithm and introduce the implementation of ebp algorithm using binary weights and real bias .",
    "more detailed information about the implementation for real weights is described in @xcite .      given input @xmath3 and desire output @xmath51 , a forward pass",
    "is first performed to calculate the mean output @xmath52 for each layer ; then a backward pass is conducted to update @xmath53 for all the weights .",
    "* forward pass * first , we initialize the mnn input @xmath54 for all @xmath55 , and then calculate recursively the following values for @xmath56 and all @xmath55 @xmath57    @xmath58    where @xmath59 is the mean of the posterior distribution @xmath53 . @xmath60 and @xmath61 are the mean and variance of @xmath62 of the input of layer @xmath63 , and @xmath64 is the resulting mean of the output of layer @xmath63    * backward pass * the backward pass performs the bayes update of the posterior ( eq .  [ eq : posup ] ) using a taylor expansion . based on eq .",
    "[ eq : deriv ] , we first initialize @xmath65 for all @xmath66 ( refer to the eq .",
    "c.9 in  @xcite ) as : @xmath67 then , for @xmath68 and @xmath69 , we calculate @xmath70 @xmath71 where c is an unimportant constant , which is not dependent on @xmath35 .",
    "* output * based on the learnt weight configuration @xmath72 , the output can be obtained by @xmath73 by eq .",
    "[ eq : ebp - d ] , which is defined as the deterministic ebp output ( * ebp - d * )  @xcite .",
    "alternatively , the map output ( eq .  [ eq : ebp - p ] ) can be calculated directly @xmath74\\ ] ] using @xmath75 from eq .",
    "[ eq : forward1 ] .",
    "the output of eq .",
    "[ eq : ebpp ] is defined to be the probabilistic ebp output ( * ebp - p * ) .      in the implementation of binary weights ,",
    "the weight @xmath76 can only take value @xmath77 . in @xcite ,",
    "the distribution of @xmath35 is parameterized in the way so that @xmath78    according to the forward process ( eq .  [ eq : forward1 ] and eq .",
    "[ eq : forward2 ] ) , the parametrization can be used to compute @xmath79 , @xmath80 and @xmath81 . in the backward processing , substituting eq .",
    "[ eq : bin ] into eq .",
    "[ eq : backward2 ] , the parameter @xmath82 is updated in each iteration as @xmath83    * algorithm 1 * shows the update steps of the ebp algorithm for bmnn .",
    "the weight configuration for the bmnn is obtained by simply clipping @xmath84    .",
    "[ algorithm1 ]    % @xmath85 , @xmath86 , and @xmath87 is the set of all @xmath88 . *",
    "function * @xmath89 , @xmath90 = $ ] updatestepbinarymnn(@xmath3 , @xmath51 , @xmath91 ) * initialize : *    @xmath92    @xmath93    @xmath94 $ ]    @xmath95 $ ]    @xmath96    * initialize : *    @xmath97    @xmath98    @xmath99",
    "the performance of ebp algorithm has been evaluated in  @xcite . however ,",
    "those experiments are limited to high dimensional text datasets ( the dimensions of the input feature vectors are from 11,463 to 238,739 ) , and all the tasks are binary classification tasks . in this study , we will examine the performance of the ebp algorithm on image datasets for multiclass classification . to check the performance of ebp algorithm on deeper and small  fan - in \" architectures on image classification , we use architectures with multiple layers and different hidden unites in experiments .",
    "besides , we also explore the effectiveness of dropout techniques  @xcite in ebp algorithms .",
    "two methods are used to input the image into the mnns .",
    "the first method is to directly convert the 2d image into 1d vector by concatenating the pixels in the image in certain order , such as concatenating each row from top to bottom .",
    "for example , for the standard mnist handwritten digits database , the input of each image is @xmath100 vector . in the second method ( spatial filtering method )",
    ", we consider the spatial configuration of the images . the spatial configuration is considered in a similar way as convolutional neural networks ( cnn )  @xcite .",
    "each unit in a layer receives inputs from a set of units located in a small neighborhood in the previous layer . as shown in fig .",
    "[ fig:2d ] , a unit in the feature map has 100 inputs connected to a @xmath101 area in the input .",
    "each unit has 100 inputs and therefore 100 trainable coefficients plus a trainable bias .",
    "different from cnn , we only use one feature map in each hidden layer in this study . since there is only one feature map",
    ", the network does not have the constraint that the connection weights for each unit in the feature map are the same .",
    "in the example shown in fig .",
    "[ fig:2d ] , there are @xmath102 units in the second layer and each unit have ( 100 + 1 ) trainable weights . in implementation , the weight matrix between the first and second layer is set to @xmath103 .",
    "the weight matrix is initialized in the way that only the weights for connected units are nonzero , namely , @xmath104 nonzero elements in the weight matrix . and",
    "the zero elements are kept zero during the whole training process .",
    "because the ebp algorithm have the assumption of large fan - in , each unit in the hidden layers ( feature maps ) should be connected to a relative large neighborhood ( such as  @xmath101 \" or larger ) in the input layer .",
    "in this section , we report the experiments of the ebp algorithm with mnns with different architecture configurations in the standard mnist handwritten digits database  @xcite .",
    "the mnist database contains 60,000 images ( @xmath100 pixels ) and the test set has other 10,000 images . during the training process , all the images in the training set were presented sequentially in each epoch with a randomized order .",
    "the task was to identify the label @xmath105 , using a bmnn classifier trained by ebp algorithm .",
    "the label is set to be @xmath106 .",
    "we pre - process the training data by centralizing ( @xmath107 ) and normalizing ( @xmath108 ) the pixels as recommended for backpropagation  @xcite . as standard for classification with real values of mnns .",
    "the output neuron with highest value indicates predicted label of the input pattern .",
    "when treating the image as 1d vector , a constant 1 is added to each input vector to allow some bias to the neurons in the hidden layer ( so @xmath109 ) . for the spatial filtering method",
    ", a bias is added to each convolving block .",
    "two neural network architectures are used : one hidden layer and two hidden layers . for each type of architecture",
    ", we vary the number of neurons in the hidden layers .",
    "the detailed configurations for the network architectures for both methods are shown in table  [ tab : config ] . in the spatial filtering method ,",
    "different filtering block sizes are used in the one hidden layer architecture : @xmath110 , @xmath111 , @xmath112 , @xmath113 , @xmath114 and @xmath115 .",
    "thus , the corresponding hidden units are 289 , 256 , 255 , 196 , 169 and 144 , which are the feature map size in the hidden layer . taking block size @xmath110 as an example",
    ", the feature map size becomes @xmath116 hidden units .",
    "accordingly , there are @xmath117 inputs to each unit in the hidden layer , and 289 inputs to each unit in the output layer .",
    "we selected such configurations because of the large  fan - in \" assumption of the ebp algorithm .",
    "these configurations can also be used to learn whether it is better to set larger fan - in in the first layer or second layer . in the case of two - hidden - layer network ,",
    "we only select one configuration because other configuration will lead to smaller fan - in ( the hidden units [ 361 , 100 ] correspond to 100 inputs to each unit in the first layer ( @xmath101 block size in the input layer ) and also 100 inputs ( @xmath101 block size in the second layer ) to each unit in the second hidden layer ) .",
    ".network architectures in experiments [ cols=\"<,^,<\",options=\"header \" , ]     [ tab:2d_without_dropout ]    * summary * the analysis of experimental results gives us a few interesting findings .",
    "they include : ( 1 ) bmnns with the ebp algorithm work well for image classification task , although the performance is not as good as real mnns ; ( 2 ) even if the fan - in size is only few hundreds ( e.g. , [ 784 , 200 , 10 ] ) , the ebp algorithm still works well on bmnns ; ( 3 ) bmnns with ebp - d algorithms on networks with two - hidden - layer ( more layers ) outperform the networks with one - hidden - layer ; ( 4 ) dropout can significantly improve the performance of bmnns with the ebp algorithm ; and ( 5 ) bmnns with the consideration of spatial filtering does not improve the classification performance , based on the results on mnist .",
    "in this paper , we report the performance of binary multilayer neural networks ( bmnns ) on image classification tasks .",
    "expectation backpropagation ( ebp ) algorithm is used to train bmnns with different network architectures and the performance is evaluated on the standard mnist digits dataset .",
    "experimental results demonstrate that bmnns with the ebp algorithm can achieve good performance on the mnist classification tasks .",
    "the results also show that the dropout techniques can significant improve bmnns with the ebp algorithm .",
    "image spatial configuration improves the performance of networks with real weights but not that of bmnns . in this study",
    ", we only conduct experiments on the mnist dataset .",
    "the performance of bmnns with ebp algorithm on image classification tasks needs to be further validated on other image datasets ( e.g. , cifar10 ) . in the future",
    ", we would like to study the performance of standard convolutional neural networks with the use of ebp algorithm and to explore different weight initialization methods .",
    "hinton , geoffrey , deng , li , yu , dong , dahl , george  e , mohamed , abdel - rahman , jaitly , navdeep , senior , andrew , vanhoucke , vincent , nguyen , patrick , sainath , tara  n , et  al .",
    "deep neural networks for acoustic modeling in speech recognition : the shared views of four research groups . _ signal processing magazine , ieee _ , 290 ( 6):0 8297 , 2012 .",
    "krizhevsky , alex , sutskever , ilya , and hinton , geoffrey  e. imagenet classification with deep convolutional neural networks . in pereira , f. , burges ,",
    "bottou , l. , and weinberger , k.q .",
    "( eds . ) , _ advances in neural information processing systems 25 _ , pp . 10971105 .",
    "curran associates , inc . , 2012 .",
    "lan , zhen - zhong , jiang , lu , yu , shoou - i , rawat , shourabh , cai , yang , gao , chenqiang , xu , shicheng , shen , haoquan , li , xuanchong , wang , yipei , et  al .",
    "cmu - informedia at trecvid 2013 multimedia event detection . in _",
    "trecvid 2013 workshop _ ,",
    "volume  1 , pp .  5 , 2013 .",
    "ribeiro , fabiano and opper , manfred .",
    "expectation propagation with factorizing distributions : a gaussian approximation and performance results for simple models .",
    "_ neural computation _ , 230 ( 4):0 10471069 , 2011 .",
    "srivastava , nitish , hinton , geoffrey , krizhevsky , alex , sutskever , ilya , and salakhutdinov , ruslan .",
    "dropout : a simple way to prevent neural networks from overfitting . _ the journal of machine learning research _ , 150 ( 1):0 19291958 , 2014 .",
    "szegedy , christian , liu , wei , jia , yangqing , sermanet , pierre , reed , scott , anguelov , dragomir , erhan , dumitru , vanhoucke , vincent , and rabinovich , andrew .",
    "going deeper with convolutions .",
    "_ arxiv preprint arxiv:1409.4842 _ , 2014 ."
  ],
  "abstract_text": [
    "<S> compared to multilayer neural networks with real weights , binary multilayer neural networks ( bmnns ) can be implemented more efficiently on dedicated hardware . </S>",
    "<S> bmnns have been demonstrated to be effective on binary classification tasks with expectation backpropagation ( ebp ) algorithm on high dimensional text datasets . in this paper , we investigate the capability of bmnns using the ebp algorithm on multiclass image classification tasks . </S>",
    "<S> the performances of binary neural networks with multiple hidden layers and different numbers of hidden units are examined on mnist . </S>",
    "<S> we also explore the effectiveness of image spatial filters and the dropout technique in bmnns . </S>",
    "<S> experimental results on mnist dataset show that ebp can obtain 2.12% test error with binary weights and 1.66% test error with real weights , which is comparable to the results of standard backpropagation algorithm on fully connected mnns . </S>"
  ]
}
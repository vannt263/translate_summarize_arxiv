{
  "article_text": [
    "in the last twenty years a huge effort has been made to design expressive models for representing computerised systems . as part of this effort the model of timed automata  @xcite has been proposed in the early 90 s as a suitable model for representing systems with real - time constraints .",
    "numerous works have focused on that model , and it has received an important tool support , with for instance the development of tools like uppaal  @xcite or kronos  @xcite .    given the success of the timed - automata - based technology for verifying real - time systems , several extensions have been proposed , with the aim of representing more faithfully real systems .",
    "they include timed games  @xcite for modeling control problems and priced timed automata  @xcite for modeling various quantities in timed systems , like energy consumption .",
    "many applications like communication protocols require models integrating both real - time constraints and randomised aspects ( see e.g.  @xcite ) .",
    "the development of such models and corresponding verification algorithms is a challenging task , since it requires combining techniques from both fields of real - time verification and probabilistic verification . in the literature",
    "we distinguish two main different approaches .    a first approach consists in modeling the system as a purely stochastic process , and to express soft real - time constraints in the property that is checked .",
    "a model of choice for the system is that of continuous - time markov chains ( ctmc for short ) , while a rather wide spectrum of property formalisms has been considered , going from the logic ( continuous stochastic logic ) and extensions thereof  @xcite to ( deterministic ) timed automata  @xcite . in this context",
    "several exact and approximate model - checking algorithms have been developed .",
    "another approach consists in integrating both features into a complex model ( e.g. an extension of timed automata or petri nets with stochastic evolution rules ) , and to analyse this model .",
    "this allows one to represent hard timing contraints such as deadlines . in this article",
    "we focus on automata - based models , and therefore only review related work on models based on timed automata .",
    "such models include probabilistic timed automata  @xcite where discrete distributions are assigned to actions and for which the tool prism  @xcite has been developed . delays or durations of events can also be made randomised .",
    "this is done for instance in  @xcite and later in  @xcite , yielding either independent events and exact model - checking algorithms ( for a probabilistic and timed extension of computation tree logic ) , or approximate model - checking algorithms .",
    "the current work follows this last approach , and surveys and extends results based on the model of _ stochastic timed automata_. this model has been proposed and studied in a series of papers  @xcite .",
    "the semantics of a stochastic timed automaton is a purely stochastic process based on a timed automaton , in which both delays and discrete choices are made randomly .",
    "this model has later been extended with non - determinism and interaction  @xcite , but in this article we focus on the original purely stochastic model .      in this article",
    "we are interested in the almost - sure model - checking of stochastic timed automata .",
    "this problem asks , given a stochastic timed automaton @xmath0 and a property @xmath1 , whether @xmath0 almost - surely satisfies @xmath1 ( that is , with probability @xmath2 ) .",
    "our approach to solve this problem relies on the construction of a finite markov chain @xmath3 is the so - called thick graph @xmath4 , that we interpret as a finite markov chain , putting the uniform distributions over edges . ]",
    "on which we will check whether @xmath1 almost - surely holds or not .",
    "we will then say that the abstraction @xmath3 is correct w.r.t .",
    "@xmath1 whenever @xmath1 almost - surely holds equivalently in @xmath0 and in @xmath3 .",
    "unfortunately , this will not be the case in general , and beyond the introduction of stochastic timed automata , the main goal of this article is to identify subclasses of stochastic timed automata and subclasses of properties for which the abstraction @xmath3 is correct .",
    "more precisely , we show that @xmath3 is a correct abstraction w.r.t .",
    "property @xmath1 in the following cases : ( i ) if @xmath1 is a safety property , ( ii ) if @xmath1 is an @xmath5-regular ( or ) property and @xmath0 is a single - clock stochastic timed automaton , and ( iii ) if @xmath1 is an @xmath5-regular ( or ) property and @xmath0 belongs to a subclass of stochastic timed automata called _",
    "weak reactive_. in fact , cases ( ii ) and ( iii ) are consequences of a more general result stating that if the runs in a stochastic timed automaton @xmath0 are almost - surely fair , then @xmath3 is a correct abstraction .",
    "the results then follow from the ( highly non trivial ) proof that both weak reactive and single - clock stochastic timed automata are almost - surely fair .",
    "we also establish the exact complexity of the almost - sure model - checking problem in the three above cases .",
    "more precisely , we prove that the almost - sure model - checking problem is ( i ) pspace - complete on stochastic timed automata against safety properties , ( ii ) pspace - complete ( resp .",
    "nlogspace - complete ) on single - clock stochastic timed automata against properties given as formulas ( resp .",
    "@xmath5-regular properties ) , and ( iii ) pspace - complete on weak reactive stochastic timed automata against @xmath5-regular properties .",
    "we finally extend this last result to specifications given as deterministic timed automata .",
    "let us point out that the decidability status of the almost - sure model checking problem for properties on the general class of stochastic timed automata is still an open problem .",
    "let us mention that one initial motivation for defining stochastic timed automata was the robustness of timed systems .",
    "indeed , the model of timed automata is an idealised mathematical model , which makes strong assumptions on the behaviour of the represented real system : it assumes for instance infinite precision of the clocks , instantaneous events and communications , whereas a real system will have slightly different behaviours ( like measure time with digital clocks ) .",
    "this topic of research is very rich , and many models and results have already been described .",
    "we review some of the frameworks which have been studied in this context , but will not give a long list of references .",
    "we better point to a survey made in 2011  @xcite , and to a recent phd thesis  @xcite , which review in details the literature on the subject .",
    "let us first mention two models of implementable controllers proposed in  @xcite and in  @xcite , where constraints and precision of clocks are somewhat relaxed .",
    "in this framework , if the model satisfies a property , then , on a simple model of processor , its implementation will also satisfy this property .",
    "this implementation model induces a very strong notion of robustness , suitable for really critical systems ( like rockets or x - by - wire systems in cars ) , but maybe too strong for less critical systems ( like mobile phones or network applications ) .",
    "another robustness model has been proposed at the end of the 90 s in  @xcite with the notion of tube acceptance : a metric is put on the set of traces of the timed automaton , and a trace is robustly accepted if and only if a tube around that trace is classically accepted . this language - focused notion of acceptance is however not completely satisfactory for implementability issues , because it does not take into account the structure of the automaton .    in this context , the model of stochastic timed automata alleviates some disadvantages to the strong mathematical assumptions made in timed automata .",
    "first , randomising delays and the choice of transitions removes unlikely behaviours ( like those requiring satisfaction of very precise clock constraints ) , and only important and meaningful sets of behaviours are then taken into account in the verification process .",
    "then , the assumptions made in timed automata mentioned above lead to the existence of unreal(istic ) behaviours of the model , such as zeno behaviours that one would like to ignore .",
    "we will then realise that , unless the underlying timed automaton is inherently zeno , the probability of zeno behaviours will be @xmath6 ( at least in the classes of models we have identified ) .",
    "this allows us to convincingly claim that stochastic timed automata can be used as a possible solution for relaxing side - effects of mathematical assumptions made in timed automata .    as a motivating example",
    ", we describe a model of the ipv4 zeroconf protocol using stochastic timed automata , see figure  [ fig : ipv4 ] .",
    "this protocol aims at configuring ip addresses in a local network of appliances .",
    "when a new appliance is plugged , it selects an ip address at random , and broadcasts several probe messages to the network to know whether this address is already used or not .",
    "if it receives in a bounded delay an answer from the network informing that the ip is already used , then a new ip address is chosen .",
    "it may be the case that messages get lost , in which case there is an error . in  @xcite , a simple model for the ipv4 zeroconf protocol",
    "is given as a discrete - time markov chain , which abstracts away timing constraints .",
    "using stochastic timed automata , expressing the delay bound is feasible .",
    "( 0,0 ) node [ draw , inner sep=2.5pt , rounded corners=3pt , minimum width=1.5cm , minimum height=.7 cm ] ( s0 ) @xmath7 ; ( -.15,0 ) node [ minimum width=1.5cm , minimum height=.7 cm ] ( s0bis ) ; ( 3,0 ) node [ draw , inner sep=2.5pt , rounded corners=3pt , minimum width=1.5cm , minimum height=.7 cm ] ( s1 ) @xmath8 ; ( 6.5,0 ) node [ inner sep=2.5pt , rounded corners=3pt , minimum width=1.5cm , minimum height=.7 cm ] ( s20 ) ; ( 7,0 ) node [ inner sep=2.5pt , rounded corners=3pt , minimum width=1.5cm , minimum height=.7 cm ] ( s21 ) ; ( 10.5,0 ) node [ draw , inner sep=2.5pt , rounded corners=3pt , minimum width=1.5cm , minimum height=.7 cm ] ( s3 ) @xmath9 ; ( 13.5,0 ) node [ draw , inner sep=2.5pt , rounded corners=3pt , minimum width=1.5cm , minimum height=.7 cm ] ( s4 ) @xmath10 ; ( 6.75,0 ) node @xmath11 ;    ( s0 ) ",
    "( s1 ) node[pos=0.5,above ] @xmath12 node [ pos=.5,below]@xmath13 ; ( s1 )  ( s20 ) node[pos=0.5,above ] @xmath14 node [ pos=.5,below]@xmath13 ; ( s21 )  ( s3 ) node[pos=0.5,above ] @xmath14node [ pos=.5,below]@xmath13 ; ( s3 )  ( s4 ) node[pos=0.5,above ] ;    ( s1 ) |- + ( -1,-1 ) node[pos=1,below=2pt ] @xmath15 -| ( s0 ) node[pos=.5,above right ] ;    ( s3 ) |- + ( -2,-2 ) node[pos=1.2,above left ] @xmath15 -| ( s0bis ) node[pos=.5,above right ] ;    the example of figure  [ fig : ipv4 ] illustrates an important feature of stochastic timed automata .",
    "compared to ctmc - like models , stochastic timed automata allow one to express hard timing contraints such as deadlines ( constraint @xmath16 in this example ) .",
    "another important feature of stochastic timed automata , as we will show in this article , is that the almost - sure satisfaction of properties is independent of the precise probability distributions over delays .",
    "this is a major advantage since it avoids the problem of finding realistic probability distributions which is known to be a difficult task , see _",
    "e.g. _  @xcite .      in a former paper  @xcite ,",
    "varacca and vlzer show a strong correspondence between a standard markov - chain - based probabilistic semantics of a finite automaton , and the cantor topology over the set of infinite executions of this automaton .",
    "they show in particular that almost - sure sets of executions ( that is , sets of executions which have probability @xmath2 ) coincide with topologically large sets of executions .",
    "following this idea we also define a topological semantics _",
    " la _ cantor for a timed automaton . in our framework , the above equivalence does not always hold , but in many cases however we will be able to prove it .",
    "this characterisation is incredibly useful in order to prove our results .",
    "the key tool in our techniques is a topological game called banach - mazur game  @xcite .",
    "the literature on stochastic processes is huge .",
    "we already mentioned several related works , but we would like to discuss a bit more the works  @xcite , which we think are the closest to the current article . in both papers",
    "the model is that of ctmcs .",
    "timing constraints are expressed in the properties , either given as deterministic timed automata  @xcite or as an extension of called  @xcite , which extends with properties given as single - clock deterministic timed automata .",
    "paper  @xcite is interested in quantitative model - checking , that is , given a ctmc @xmath17 and a property given as a deterministic ( muller ) timed automaton @xmath0 , the aim is to compute the probability that runs of @xmath17 are accepted by @xmath0 .",
    "this probability is characterised using volterra integral equations , which can be transformed into linear equations when @xmath0 has a unique clock .",
    "therefore quantitative verification can be done for single - clock specifications but can only be approximated in the general case .",
    "our results are somehow incomparable since we allow for a more general model ( stochastic timed automata instead of ctmcs ) but prove decidability only for the qualitative model - checking problem .",
    "paper  @xcite is interested in model - checking of ctmcs against properties expressed as formulas of .",
    "this logic involves probability formulas , and uses single - clock deterministic timed automata as predicates .",
    "model - checking of the general logic can be approximated , but if formulas only have qualitative subformulas , the exact model - checking can be decided .",
    "we do not consider logics , but we allow general deterministic timed automata in our specifications .",
    "section  [ sec : prelim ] summarises our notations for timed automata , and specifications languages ( such as and @xmath5-regular properties ) .",
    "section  [ sec : proba - def ] presents stochastic timed automata , the notion of almost - sure satisfaction and the almost - sure model - checking problem , while section  [ sec : toposem ] presents the topological semantics and the notion of large satisfaction . in section  [ sec : thickgraph ] , we define a finite abstraction of a stochastic timed automaton , named _ thick graph _",
    ", which will be essential in order to solve the almost - sure model - checking problem .",
    "in section  [ sec : match ] , we show that the topological and the probabilistic semantics coincide first if we restrict to safety properties and then for @xmath5-regular properties but under the restriction that the system is almost - surely fair . in section  [ sec : appli ] , we identify two subclasses of stochastic timed automata which are almost - surely fair , namely weak reactive and single - clock . finally , the algorithmic issues and the complexity results are given in section  [ sec : algo ] .",
    "to improve readability of the article , technical proofs are postponed to the appendix .",
    "this article presents results from  @xcite in a uniform way , provides the complete proofs , and generalises the results from  @xcite to a larger class of stochastic timed automata .",
    "we denote by @xmath18 a finite set of  _ clocks_. a _ clock valuation _ over @xmath19 is a mapping @xmath20 , where @xmath21 denotes the set of nonnegative reals .",
    "we write @xmath22 for the set of clock valuations over @xmath19 , and @xmath23 ( or simply @xmath24 if @xmath19 is clear in the context ) for the valuation assigning @xmath6 to every clock of @xmath19 . given a clock valuation @xmath25 and @xmath26",
    ", @xmath27 is the clock valuation defined by @xmath28 for every @xmath29 . if @xmath30 , the valuation @xmath31 \\nu$ ] is the valuation @xmath32 such that @xmath33 if @xmath34 , and @xmath35 otherwise .",
    "a _ guard _ over @xmath19 is a finite conjunction of expressions of the form @xmath36 where @xmath37 is a clock , @xmath38 is an integer , and @xmath39 is one of the symbols @xmath40 .",
    "we denote by @xmath41 the set of guards over @xmath19 .",
    "the satisfaction relation for guards over clock valuations is defined in a natural way , and we write @xmath42 if the clock valuation @xmath25 satisfies the guard @xmath43 .",
    "we denote by @xmath44 a finite set of atomic propositions .",
    "we now define the timed automaton model , which has been introduced in the early nineties  @xcite .",
    "[ def : timed_aut ] a _ timed automaton _ over is a tuple @xmath45 such that : ( i ) @xmath46 is a finite set of locations , ( ii ) @xmath19 is a finite set of clocks , ( iii ) @xmath47 is a finite set of edges , ( iv ) @xmath48 assigns an invariant to each location , and @xmath49 @xmath50 is a labelling function .",
    "we may omit the labelling function ( in case we are only interested in an internal accepting condition , _",
    "i.e. _ that only depends on the locations ) . note that we could also specify an initial location , but that will not be really useful later , that is why we removed that component from standard timed - automata definition .    if @xmath51 is an edge of @xmath0 , we write @xmath52 ( resp .",
    "@xmath53 ) the source ( resp .",
    "target ) of @xmath51 defined by @xmath54 ( resp .",
    "@xmath55 ) if @xmath56 .",
    "the semantics of a timed automaton @xmath0 is a timed transition system @xmath57 whose states are pairs @xmath58 with @xmath59 , and whose transitions are of the form @xmath60 if there exists an edge @xmath61 such that for every @xmath62 , @xmath63 , @xmath64 , @xmath65v$ ] , and @xmath66 .",
    "we extend the labelling function @xmath67 to states : @xmath68 for every state @xmath69 . a finite ( resp .",
    "infinite ) _ run _ @xmath70 of @xmath0 is a finite ( resp .",
    "infinite ) sequence of transitions , _",
    "i.e. _ , @xmath71 we write @xmath72 ( resp .",
    "@xmath73 ) for the set of finite runs ( resp .",
    "infinite runs ) of @xmath0 from state  @xmath74 .",
    "if @xmath70 is a finite run in @xmath0 , we write @xmath75 for the last state of @xmath70 . for @xmath76 a state of @xmath0 , @xmath77 a finite sequence of edges of @xmath0 , and",
    "@xmath17 a constraint over @xmath78 variables @xmath79 , the _ ( symbolic ) path _ starting from @xmath76 , determined by @xmath77 , and constrained by @xmath17 , is the following set of runs : @xmath80 where @xmath81 stands for `` @xmath82 s satisfy the constraint @xmath17 '' with the intuitive meaning .    if @xmath17 is equivalent to ` true ' , we simply write @xmath83",
    ". let @xmath84 be a finite symbolic path , we define the _ cylinder _ generated by @xmath85 as : @xmath86 in the following , we will also use infinite symbolic paths defined , given @xmath76 a state of @xmath0 and @xmath87 an infinite sequence of edges , as : @xmath88 if @xmath89 , we write @xmath90 for the unique symbolic path containing @xmath91 .",
    "given @xmath76 a state of @xmath0 and @xmath51 an edge , we define @xmath92 and @xmath93 .",
    "note that @xmath94 is an interval , whereas @xmath95 is a finite union of intervals .",
    "the timed automaton @xmath0 is _ non - blocking _ if , for every state @xmath76 , @xmath96 .",
    "the timed automaton @xmath0 is _ reactive _ if , for every state @xmath76 , @xmath97 ; in this case we may omit the invariant function and simply write @xmath98 .",
    "the well - known region automaton construction is a finite abstraction of timed automata which can be used for verifying many properties like @xmath5-regular untimed properties  @xcite . roughly , the region automaton of @xmath0 is the quotient of @xmath57 by a finite - index equivalence relation over clock valuations . here",
    "we will use a timed version of this construction , that we define now .",
    "let @xmath99 be a timed automaton , and write @xmath100 for the maximal constant used in guards and invariants in @xmath0 .",
    "we define its region equivalence @xmath101 over the set of valuations @xmath22 as follows : given @xmath102 , @xmath103 if and only if the following conditions are satisfied :    * for every @xmath37 , either @xmath104 , or @xmath105 , and in the last case , @xmath106 iff @xmath107 ; ( resp .",
    "@xmath108 ) denotes the integral ( resp .",
    "fractional ) part . ] * for every @xmath109 such that @xmath110 , @xmath111 iff @xmath112 .",
    "this equivalence relation has finite index , the equivalence classes are called _ regions _ , and we write @xmath113 for the set of regions . if @xmath114 is a valuation , we write @xmath115_{{{\\mathcal{a}}}}$ ] or simply @xmath115 $ ] for the ( unique ) region to which @xmath114 belongs . also , for @xmath116 a region , @xmath117 denotes the minimal guard characterising @xmath116 .",
    "the above region equivalence is the most standard one , but several rougher equivalences could also be used , as soon as they yield a time - abstract bisimilar quotient .",
    "for instance , for single - clock timed automata , we will later use a rougher notion of region equivalence  @xcite that will improve the complexity of our algorithms .",
    "the _ timed region automaton _ of @xmath0 is the timed automaton @xmath118 such that @xmath119 , and :    * @xmath120 , and @xmath121 for all @xmath122 ; * @xmath123 , and @xmath124 is in @xmath125 iff there exists @xmath126 in @xmath127 s.t .",
    "there exist @xmath128 , @xmath129 with @xmath130 , @xmath131 and @xmath132 .",
    "( -1,0 ) node[draw , circle , inner sep=2pt ] ( q0 ) @xmath133 ; ( 2,1 ) node[draw , circle , inner sep=2pt ] ( q1 ) @xmath134 ; ( 2,-1 ) node[draw , circle , inner sep=2pt ] ( q2 ) @xmath135 ; ( q0 )  ( q1 ) node[pos=.5 , above , sloped ] @xmath136 ; ( q0 )  ( q2 ) node[pos=.5 , below , sloped ] @xmath137 ;    ( 4,0 ) node[draw , rectangle , rounded corners=2mm , inner sep=5pt ] ( q00 ) @xmath138 ; ( 8,2 ) node[draw , rectangle , rounded corners=2mm , inner sep=5pt ] ( q11 ) @xmath139 ; ( 8,0 ) node[draw , rectangle , rounded corners=2mm , inner sep=5pt ] ( q12 ) @xmath140 ; ( 8,-2 ) node[draw , rectangle , rounded corners=2mm , inner sep=5pt ] ( q21 ) @xmath141 ; ( q00 )  ( q11 ) node[pos=.5 , above , sloped ] @xmath142 ; ( q00 )  ( q12 ) node[pos=.5 , above , sloped ] @xmath143 ; ( q00 )  ( q21 ) node[pos=.5 , below , sloped ] @xmath144 ;    as an example , a timed automaton and its associated timed region automaton are depicted in figure  [ fig : cex - homeo ] .",
    "we recover the usual region automaton of  @xcite by labelling the transitions with ` @xmath51 ' instead of ` @xmath145 ' , and by interpreting @xmath146 as a finite automaton .",
    "the above timed interpretation satisfies strong timed bisimulation properties that we do not detail here . to every finite symbolic path @xmath147 in @xmath0",
    "corresponds a finite set of paths @xmath148),v),f_1 \\ldots    f_n)}$ ] in @xmath146 , each one corresponding to a choice in the regions that are crossed .",
    "if @xmath91 is a run in @xmath0 , we denote @xmath149 its unique image in @xmath146 .",
    "[ def : iota ] note that if @xmath0 is non - blocking ( resp .",
    "reactive ) , then so is  @xmath146 .    in the rest of the paper",
    "we assume that timed automata are non - blocking , even though general timed automata could also be handled ( but at a technical extra cost ) .",
    "we fix a finite set of atomic propositions , and a timed automaton @xmath150 over",
    ".      a _ property over _ is a subset @xmath151 of @xmath152 .",
    "an infinite run @xmath153 satisfies the property whenever @xmath154 .",
    "more generally a _ timed property over _ is a subset @xmath151 of @xmath155 . an infinite run",
    "@xmath156 satisfies the property @xmath151 whenever @xmath157 .    in both cases , we write @xmath158 if @xmath91 satisfies the property @xmath151 , and we write : @xmath159    obviously , timed properties generalise ( untimed ) ones .",
    "@xmath5-regularity is a standard notion in computer science to characterise simple sets of infinite behaviours .",
    "we will only define here @xmath5-regularity for untimed properties , though the concept exists for timed properties as well .",
    "typical @xmath5-regular properties are bchi and muller properties .",
    "bchi property _ over is a(n untimed ) property @xmath151 such that there exists @xmath160 with @xmath161 .",
    "muller property _ over is a property @xmath151 such that there exists @xmath162 with @xmath163 .",
    "an @xmath5-regular property will be said _",
    "internal _ for @xmath0 whenever there is a bijection @xmath164 between @xmath46 and @xmath44 , and for each @xmath165 , @xmath166 is the singleton @xmath167 .",
    "that is , this allows to specify which states are visited infinitely often . in that case , we will interpret such properties on timed automata even though no labelling function has been given ( it is then implicit ) .",
    "it is well known that ( untimed ) automata equipped with internal bchi or muller acceptance conditions capture untimed @xmath5-regular properties .",
    "this is also the case for deterministic muller automata .",
    "we now define simple @xmath5-regular properties .    according to  @xcite ,",
    "a property @xmath151 over is a _",
    "safety property _",
    "whenever for every @xmath168 , @xmath169 iff there exists @xmath170 such that for every @xmath171 , @xmath172 .",
    "that is , a safety property is violated by a finite prefix .",
    "a _ simple safety property _",
    "@xmath151 is characterised by @xmath160 , and is defined by @xmath173 .",
    "the negation of a safety property is a _",
    "reachability property _",
    ": @xmath151 is a reachability property whenever for every @xmath174 , @xmath175 iff there exists @xmath170 such that for every @xmath171 , @xmath176 .",
    "that is , a reachability property is validated by a finite prefix . a _",
    "simple reachability property _",
    "@xmath151 is characterised by @xmath160 , and is defined by @xmath177 .",
    "another interesting notion is the one of _ prefix - independent property _",
    "@xmath151 , which is such that for every @xmath168 , @xmath175 iff for every @xmath170 , @xmath178 . that is , the property is satisfied or not independently of its prefix .",
    "in particular , bchi and muller properties are prefix - independent .",
    "note that a property @xmath151 is prefix - independent if and if its validity only depends on the set of elements of @xmath179 which is encountered infinitely often .",
    "we consider the linear temporal logic  @xcite over , defined inductively as : @xmath180 where @xmath181 is an atomic proposition .",
    "we use classical shorthands like @xmath182 , @xmath183 , @xmath184 , and @xmath185 .",
    "we assume the reader is familiar with the semantics of , that we interpret here on infinite runs of a timed automaton .",
    "each formula @xmath1 of gives rise to a property @xmath186 , in the sense given above .",
    "let @xmath168 , then : @xmath187 where @xmath188 for every index @xmath189 .",
    "the semantics of a formula @xmath1 over infinite runs of @xmath0 is derived from that of property @xmath186 .",
    "one can easily be convinced that we recover the standard semantics of .",
    "if @xmath1 is an formula and @xmath190 , we write @xmath191 whenever @xmath192 .",
    "we also write @xmath193 for @xmath194 .",
    "a _ specification @xmath5-regular timed automaton _ is a tuple @xmath195 such that :    * @xmath196 is a finite set of locations , and @xmath197 is an input function ; * @xmath198 is a finite set of clocks ; * @xmath44 is a finite set of atomic propositions ; * @xmath199 is a finite set of edges ; * @xmath200 is an internal @xmath5-regular prefix - independent condition ; * it is deterministic : for all edges @xmath201 and @xmath202 in @xmath203 , @xmath204 is not satisfiable ; * it is complete : for every every @xmath205 , for every @xmath206 , for every @xmath207 , for every @xmath208 , there exists @xmath209 such that @xmath210",
    ".    runs in @xmath211 will be defined in a very similar way as runs in standard timed automata .",
    "only labels of transitions will be slightly different .",
    "the runs of @xmath211 are therefore of the form : @xmath212 where conditions on valuations are those expected , and labels @xmath213 s are those given by the edges that are taken .",
    "such a run is accepted by @xmath211 whenever the sequence @xmath214 satisfies the @xmath5-regular condition @xmath200 .",
    "such a specification automaton @xmath211 naturally gives rise to a timed property @xmath215 defined as follows .",
    "let @xmath216 .",
    "there is a unique run @xmath217 in automaton @xmath211 where @xmath218 .",
    "the existence of @xmath219 follows from the completeness of @xmath211 and its uniqueness from the determinism .",
    "then , @xmath220 iff @xmath219 is an accepting run in @xmath211 .",
    "the semantics of a specification timed automaton @xmath211 over infinite runs of @xmath0 is derived from that of property @xmath221 .",
    "if @xmath211 is a specification timed automaton and @xmath190 , we write @xmath222 whenever @xmath223 .",
    "we also write @xmath224 for @xmath225 .",
    "if the accepting condition @xmath200 is a bchi ( or muller ) condition , then @xmath211 will be called a specification bchi ( or muller ) timed automaton .",
    "if @xmath226 , we will speak of a specification @xmath5-regular ( untimed ) automaton .",
    "it is well known  @xcite and ( * ? ? ?",
    "* chapter  3 ) that for any formula @xmath1 , there is a ( deterministic ) specification muller untimed automaton @xmath227 that characterises @xmath1 , that is : for every run @xmath91 , @xmath228 iff @xmath229 . in that case , obviously , @xmath230 for every @xmath0 and @xmath76 .",
    "in this section we define a probabilistic semantics for timed automata .",
    "probabilities will rule time elapsing as well as choices between enabled events .",
    "this will define a purely stochastic process : intuitively , from a state , we will first randomly choose a delay among all possible delays , then we will randomly choose an edge among all those which are enabled .",
    "the sequel assumes some basics of measure theory and probabilities , that can be found in classical text books .",
    "let @xmath99 be a timed automaton .",
    "we will assign probability distributions from every state of @xmath0 both over delays and over enabled moves .",
    "let @xmath76 be a state of @xmath0 .",
    "the probability distribution from @xmath76 over delays is a probability measure @xmath231 over @xmath21 ( equipped with the standard borel @xmath232-algebra ) which satisfies the following requirements , denoted @xmath233 in the sequel :    ( h1 ) : :    @xmath234 , is    non - blocking , hence @xmath235 for every state @xmath76 of    @xmath0 . ]",
    "( h2 ) : :    writing @xmath236 for the standard lebesgue measure on    @xmath21 , if @xmath237 , then    @xmath231 is equivalent and @xmath32 are _ equivalent _ whenever for    each measurable set @xmath238 ,    @xmath239 . ] to    @xmath236 on @xmath95 ; otherwise ,    @xmath231 is equivalent to the uniform distribution over    points of @xmath95 .",
    "this last condition denotes some kind of fairness w.r.t .",
    "enabled transitions when only punctual delays are possible , in that we can not disallow one transition by putting a probability @xmath6 to delays enabling that transition .",
    "we also assume a probability distribution @xmath240 over edges , such that for every edge @xmath51 , @xmath241 iff @xmath51 is enabled in @xmath76 ( _ i.e. _ , @xmath242 for some @xmath243 ) . moreover , to simplify , we assume that @xmath240 is given by weights on transitions , as it is classically done for resolving non - determinism : we associate with each edge @xmath51 a weight @xmath244 , and for every state @xmath76 , for every edge @xmath51 , @xmath245 if @xmath51 is not enabled in @xmath76 , and @xmath246 otherwise . as a consequence , if @xmath76 and @xmath243 are region equivalent , then for every edge @xmath51 , @xmath247 .",
    "[ def : sta ] a _ stochastic timed automaton _ is a tuple @xmath248 consisting of a timed automaton @xmath0 equipped with probability measures @xmath249 satisfying @xmath233 , and positive weights @xmath250 .    note that when measures are clear or implicit in the context , we will simply write @xmath0 for @xmath251 .",
    "we now show how we define a probability measure @xmath252 on infinite runs of @xmath253 .",
    "we fix a stochastic timed automaton @xmath251 , which satisfies @xmath233 .",
    "we define a measure , that we also note @xmath252 , over finite symbolic paths from state @xmath76 as follows : @xmath254 where @xmath255 , and we initialise with @xmath256 .",
    "the formula for @xmath252 relies on the fact that the probability of taking transition @xmath257 at time @xmath258 coincides with the probability of waiting @xmath258 time units and then choosing @xmath257 among the enabled transitions , _",
    "i.e. _ , @xmath259 . note that , time passage and actions are independent events .",
    "the value @xmath260 is the result of @xmath78 successive one - dimensional integrals , but it can also be viewed as the result of an @xmath78-dimensional integral .",
    "hence , we can easily extend the above definition to finite constrained paths @xmath261 when @xmath17 is borel - measurable .",
    "this extension to constrained paths is needed to measure rather complex properties , like zeno behaviours or those expressed as specification timed automata .",
    "the measure @xmath262 can then be defined on cylinders , letting @xmath263 if @xmath264 is a finite ( constrained ) symbolic path .",
    "finally we extend @xmath262 in a standard and unique way to the @xmath232-algebra generated by these cylinders ( using caratheodory s theorem ) , that we note @xmath265 .",
    "we first check that @xmath262 defined as such is a probability measure .",
    "proppropprobameasure [ prop : proba_measure ] for every state @xmath76 of @xmath0 , @xmath252 is a probability measure over @xmath266 .",
    "the proof of this proposition justifies _ a posteriori _ the above construction for the probability measure @xmath262 .",
    "it goes as follows : first prove that @xmath252 is a probability measure on the set of constrained symbolic paths of length @xmath78 ( for all @xmath78 ) , then extend this result to the ring generated by all constrained symbolic paths and finally use caratheodory s extension theorem to establish that @xmath252 is a probability measure on the set of all runs .",
    "the complete proof is rather technical , and therefore postponed to appendix  [ annex : proba - measure ] , page  .",
    "[ ex : ltlfirst ] consider the running stochastic timed automaton @xmath267 on figure  [ fig : running ] .",
    "assume for all states @xmath268 both uniform distributions over delays and discrete moves : @xmath269 is the uniform distribution over @xmath270 $ ] and @xmath271 is the uniform distribution over @xmath272 $ ] ; the weight of each edge is @xmath2 . then @xmath273 and @xmath274",
    "indeed : @xmath275 in a similar way one can show that @xmath276 , for @xmath277 ; and thus conclude that @xmath278 .",
    "to 0pt@xmath279      in timed automata , and more generally in continuous - time models , some behaviours are _",
    "zeno_. recall that a run @xmath280 of a timed automaton is _ zeno _ if @xmath281 ( _ i.e. _ , infinitely many actions happen in a finite amount of time ) .",
    "zeno behaviours are problematic since they most of the time have no physical interpretation . as argued in  @xcite , some fairness constraints are often put on executions , enforcing non - zeno behaviours , but in probabilistic systems , probabilities are supposed to replace fairness assumptions , and it is actually the case in continuous - time markov chains in which zeno runs are negligible ( that is , have probability  @xmath6 )  @xcite .",
    "we observe that , for any stochastic timed automaton @xmath0 , the set of zeno behaviours from a state @xmath76 is measurable .",
    "it can indeed be expressed as @xmath282 it therefore makes sense to compute the probability of zeno behaviours , and to check whether zeno behaviours are negligible or not",
    ". being negligible would be a desirable property , as argued before .",
    "however , in general this is hopeless since some timed automata are _ inherently _ zeno .",
    "for instance , all runs are zeno in the automaton consisting of a single location with a non - resetting loop guarded by @xmath283 . in the following",
    ", we will discuss zenoness for several classes of stochastic timed automata .",
    "in the rest of the paper , if @xmath0 is a stochastic timed automaton and @xmath70 is a run of @xmath0 , we write @xmath284 whenever @xmath70 is zeno .",
    "if @xmath76 is a state of @xmath0 , we then also write @xmath285 for the probability of the set of zeno runs in @xmath0 from @xmath76 .",
    "we associate the following decision problem , that we call _ almost - sure non - zenoness _ problem : given @xmath0 a stochastic timed automaton , and @xmath76 a state of @xmath0 , does @xmath286 ?      in this part we establish a strong relation between a stochastic timed automaton and its stochastic timed region automaton .",
    "we let @xmath287 be a stochastic timed automaton .",
    "the structure of the corresponding stochastic timed region automaton is obviously @xmath146 .",
    "we need now to choose properly probability measures @xmath288 and weights @xmath289 for @xmath146 so that measures of runs are preserved _ via _ the mapping @xmath290 mentioned in section  [ regionautomaton ] .",
    "we assume that the probability measures in @xmath146 satisfy the following conditions : for every state @xmath76 in @xmath0 , @xmath291 , and for every edge @xmath292 , @xmath293 whenever @xmath294 corresponds to @xmath51 . under those conditions we show the following transfer properties between @xmath0 and @xmath146 .",
    "lemlemmaproba [ lemma : proba ] let @xmath295 be a stochastic timed automaton , and let @xmath296 be the corresponding stochastic timed region automaton as defined above .",
    "then , for every set @xmath297 of runs in @xmath0 we have : @xmath298 iff @xmath299 , and in this case @xmath300 .    to establish lemma  [ lemma : proba ] it is sufficient to prove that the measures coincide on finite constrained paths , since it implies that they agree on cylinders and by uniqueness of the extension on any measurable set of infinite runs .",
    "the complete proof is given in appendix  [ annex : region ] , page  .    thanks to lemma  [ lemma : proba ] , we will be able to lift results proven on @xmath146 to @xmath0 .",
    "let @xmath251 be a stochastic timed automaton over and @xmath76 be a state of @xmath0 .",
    "we refine the notion of timed properties that were defined in section  [ subsec : spec ] .",
    "let @xmath301 be a timed property over .",
    "we say that @xmath151 is _",
    "@xmath302-measurable _ whenever @xmath303 .",
    "we say @xmath151 is _",
    "@xmath0-measurable _ ( resp .",
    "_ measurable _ ) whenever it is @xmath302-measurable for every state @xmath76 ( resp .",
    "it is @xmath0-measurable for every @xmath0 ) .",
    "the following lemma establishes the measurability of several classes of properties , and is proven in appendix  [ app : mesurabilite ] , page  .",
    "lemmesurabilite @xmath5-regular properties and properties given as formulas are measurable . timed properties given as specification bchi or muller timed automata are measurable .    in the sequel , if @xmath151 is a measurable property over , we write @xmath304 for @xmath305 .",
    "let @xmath76 be a state of @xmath0 .",
    "assume @xmath151 is an @xmath302-measurable property over .",
    "we say that @xmath0 _ almost - surely satisfies _",
    "@xmath151 , from @xmath76 , and we then write @xmath306 , whenever @xmath307 . the _ almost - sure model - checking problem _ asks , given @xmath0 , @xmath76 and @xmath151 , whether @xmath308 .",
    "the following corollary is an immediate consequence of lemma  [ lemma : proba ] .",
    "[ prop : proba - a - ra ] let @xmath0 be a stochastic timed automaton , @xmath76 a state of @xmath0 , and @xmath1 a measurable property over .",
    "then , @xmath309    [ ex : ltl ] consider @xmath267 again from figure  [ fig : running ] , and reproduced below , with initial state @xmath310 and assuming uniform distributions over delays and uniform distribution over discrete moves in all states .",
    "then , @xmath311 .",
    "indeed , in state @xmath312 with @xmath313 , the probability of firing @xmath314 ( after some delay ) is always @xmath315 ( guards of @xmath257 and @xmath314 are the same , there is thus a uniform distribution over the two edges ) , the location @xmath134 is eventually reached with probability  @xmath2 . in @xmath134 , the transition @xmath316 will unlikely happen , because its guard @xmath317 is too much `` small '' compared to the guard @xmath318 of the transition @xmath319 .",
    "the same phenomenon arises in location @xmath135 between the transitions @xmath320 and @xmath321 . in conclusion",
    ", the runs of the timed automaton @xmath267 ( from @xmath74 ) almost surely follow sequences of transitions of the form @xmath322 . hence , with probability @xmath2 , the formula @xmath323 is satisfied .",
    "note that the latter formula is not satisfied in @xmath267 from @xmath74 ( under the classical semantics ) , since some runs violate it : ` _ _ staying in @xmath133 forever _ _ ' , ` _ _ reaching @xmath324 _ _ ' , etc ... all these counter - examples are unlikely and vanish thanks to our probabilistic semantics . to 0pt@xmath279",
    "our aim is to _ decide _ the almost - sure model - checking problem .",
    "it is clear that given a measurable property @xmath151 , the value @xmath325 depends on the measures @xmath326 and @xmath327 .",
    "however , we show later that whether @xmath306 is independent of the precise values of @xmath326 and @xmath327 . to prove this",
    ", we design a finite abstraction , independent of @xmath326 and @xmath327 , which is correct for deciding the almost - sure model - checking problem in a number of classes of stochastic timed automata .",
    "in  @xcite almost - sure model - checking of concurrent reactive systems is characterised by a topological notion : largeness is qualitative and captures the notion of `` many runs '' .",
    "inspired by that work , we propose a topological semantics for timed automata , based on the notion of large sets , which will help us characterise almost - sure sets . in our context also , the topological semantics is purely qualitative but nevertheless gives information on `` how big '' a set of paths satisfying a given property is .    in this section , relying on a notion of thickness for symbolic paths , we first define a natural topology over infinite runs of a given timed automaton .",
    "this topology induces a _",
    "large _ semantics : an @xmath5-regular property is satisfied if `` most of the runs '' satisfy it . as pointed out already in  @xcite , _ largeness _ , and its complement _ meagerness _ , are better appropriate than density to express a notion such as `` most of the runs '' .",
    "indeed , `` small '' sets can be dense , and the complement of a dense set can also be dense ( _ e.g. _ @xmath328 in @xmath329 ) , whereas it is not the case for large sets .",
    "let us start this section by recalling the notion of large sets and their characterisation using banach - mazur games .",
    "we refer to  @xcite for basic notions of topology ( topological space , interior , closure , _ etc _ ) .",
    "however we recall here the more specific notion of _ largeness _ and also provide its elegant characterisation in terms of _ banach - mazur games _  @xcite .",
    "let @xmath330 be a topological space .",
    "if @xmath331 , we denote by @xmath332 ( resp .",
    "@xmath333 ) the _ interior _ ( resp . _",
    "closure _ ) of @xmath334 .",
    "let us recall that a set @xmath335 is called a _",
    "basis _ for the topology @xmath336 if every open set ( _ i.e. _ , elements of @xmath336 ) can be obtained as the union of elements of @xmath337 . in this case ,",
    "the elements of @xmath337 are called _",
    "basic opens_. a set @xmath338 is _ nowhere dense _ if the interior of the closure of @xmath334 is empty , _",
    "i.e. _ , @xmath339 .",
    "a set is _ meagre _ if it is a countable union of nowhere dense sets .",
    "finally , a set is _ large _ if its complement is meagre .",
    "let @xmath329 be the set of real numbers equipped with its natural topology ( that is , basic open sets are the open intervals ) .",
    "the set of integers @xmath340 is nowhere dense in @xmath329 .",
    "the set of rational numbers @xmath328 is dense ( in @xmath329 ) however @xmath328 is meagre since is a countable union of singletons ( which are clearly nowhere dense sets ) ; this implies that @xmath341 is large . to 0pt@xmath279",
    "although the notion of largeness is quite abstract , it admits a very nice characterisation in terms of a two - player game , known as _ banach - mazur game_.    [ bm : defi ] let @xmath330 be a topological space and @xmath342 be a family of subsets of @xmath238 satisfying the two following properties :    * for all @xmath343 , @xmath344 , and * for all @xmath345 a non - empty open set of @xmath238 , there exists @xmath346 such that @xmath347 .",
    "fix @xmath348 a subset of @xmath238 .",
    "two players alternate their moves : player  @xmath2 starts and chooses an element @xmath349 of @xmath342 ; player  @xmath350 then responds by choosing an element @xmath351 of @xmath342 such that @xmath352 ; then player  1 chooses @xmath353 in @xmath354 such that @xmath355 , and so on . this way , they define a non increasing sequence of sets @xmath356 : @xmath357 where the @xmath358 s ( resp .",
    "s ) are chosen by player  @xmath2 ( resp .",
    "player  @xmath350 ) , for @xmath360 .",
    "player  @xmath2 wins the game if the intersection of all @xmath356 s intersects @xmath348 , _ i.e. _ , @xmath361 otherwise , player  @xmath350 wins the game .",
    "notice that typical examples of family @xmath342 are provided by topology bases .",
    "banach - mazur games are not always determined , even for simple topological spaces ( see ( * ? ? ?",
    "* remark  1 ) ) .",
    "still a natural question is to know when the players have winning strategies .",
    "the following result gives a partial answer :    [ bm : thm ] player  @xmath350 has a winning strategy in the banach - mazur game with target set @xmath348 if and only if @xmath348 is meagre .",
    "to illustrate theorem  [ bm : thm ] we give the following simple example .",
    "[ ex : bmgs ] let @xmath362 be the set of real numbers equipped with the natural topology , @xmath342 be the family of open intervals with rational bounds , and @xmath348 be the open set @xmath363 .",
    "intuitively , @xmath363 is not meagre , and to prove it using theorem  [ bm : thm ] , it is sufficient to show that player  @xmath350 does not have a winning strategy in the banach - mazur game on @xmath342 with target set @xmath348",
    ".    assume player  @xmath2 s first move is to pick the set @xmath348 for @xmath349 .",
    "from then on , the game takes place within @xmath348 , and the only way for player  @xmath350 to win is to build a sequence of @xmath356 s converging to the empty set . let us now explain how player  @xmath2 can prevent this from happening .",
    "let @xmath364 be the @xmath170th set chosen by player  @xmath350 .",
    "player  @xmath2 s response to @xmath365 is the interval @xmath366 , where @xmath367 .",
    "notice that @xmath358 is a regular move for player  @xmath2 since @xmath368 and @xmath369 .",
    "notice also that the closed set @xmath370 $ ] satisfies the following inclusions : @xmath371 .",
    "given any strategy of player  @xmath350 , using the above strategy player  @xmath2 ensures : @xmath372 this intersection is guaranteed to be non - empty by heine - borel theorem , since the sequence is included in @xmath270 $ ] which is a compact set . as a consequence , player  @xmath350",
    "does not have a winning strategy , and thus @xmath348 is non meagre .",
    "to 0pt@xmath279    [ rem : baire ] surprisingly , in general , there is no relation between meagre and open sets .",
    "indeed non meagre open sets obviously exist , but one can identify topological spaces where open sets are meagre .",
    "let us consider the set of rational numbers @xmath328 with its natural topology ( whose basic open sets are the open intervals ) . in this topology all sets , and in particular all open sets ,",
    "are countable and thus meagre",
    ".    a topological space in which all non - empty open sets are not meagre is called a _",
    "baire space_. as we have just noticed , not all topological spaces are baire spaces .",
    "indeed , under their natural topologies , @xmath328 is not a baire space whereas @xmath329 is ( a proof follows the same ideas than in example  [ ex : bmgs ] ) .",
    "this remark suggests that largeness and meagerness are even more relevant in baire spaces .",
    "we fix a timed automaton @xmath373 for the rest of the section . in order to attach a topology to sets of infinite runs in @xmath0 , we first define thick symbolic paths . in @xmath374 ,",
    "open sets are among those sets of maximal dimension .",
    "symbolic paths do not exactly lie in @xmath374 , but we will see that each symbolic constrained path of length @xmath78 can be embedded in some ambient space @xmath375 , with @xmath376 .",
    "_ thick _ symbolic paths will then naturally arise as symbolic paths of maximal dimension in their ambient space . before going to the definition ,",
    "let us explain through an example the intuition behind this notion .",
    "( 0,-.8 )  ( 4,.4 ) ; ( 0,0 ) node [ draw , circle , inner sep=2pt ] ( l0 ) @xmath133 ; ( 2,0 ) node [ draw , circle , inner sep=2pt ] ( l1 ) @xmath134 ; ( 4,0 ) node [ draw , circle , inner sep=2pt ] ( l2 ) @xmath135 ; ( 4,-.7 ) node [ draw , circle , inner sep=2pt ] ( l4 ) @xmath324 ; ( l0 )  ( l1 ) node [ above , midway ] @xmath377 ; ( l1 )  ( l2 )",
    "node [ above , midway ] @xmath378 ; ( l1 ) ",
    "+ ( 0,-.7 ) ",
    "( l4 ) node [ above , midway ] @xmath379 ;    [ ex : dim ] consider the single - clock timed automaton depicted in figure  [ fig : dim - ex ] , @xmath380 and @xmath264 be the ( unconstrained ) symbolic path @xmath381 .",
    "one can naturally associate a polyhedron of @xmath382 with @xmath264 : @xmath383 @xmath384 has dimension 2 in @xmath385 . since it is of maximal dimension , we say that the symbolic path @xmath264 is _ thick_. consider now the symbolic path @xmath386 .",
    "the polyhedron @xmath387 associated with @xmath388 has dimension @xmath2 , and is somehow embedded in a two - dimensional space ( due to the existence of the edge @xmath314 ) . in that case , we say that it is _",
    "thin_. to 0pt@xmath279    the above example is simplistic and could give the wrong impression that symbolic paths with singular transitions ( _ i.e._. transitions that do not increase the dimension of the polyhedron ) are necessarily thin ; or equivalently that in order to be thick , a symbolic path of length @xmath78 should have an associated polyhedron of dimension @xmath78 .",
    "this is not always the case , and singular transitions can play an important role . consider a slight modification of the automaton of figure  [ fig : dim - ex ] where edge @xmath257 is guarded by @xmath389 . in this modified automaton",
    ", @xmath381 is still thick , @xmath390 is thick too and the dimension of the ambient space of any symbolic path of length @xmath350 is @xmath2 .    to formally define thick and thin paths ,",
    "we introduce the notion of associated polyhedron , and some notations . given @xmath84 a constrained path of a timed automaton @xmath0 , its _ associated polyhedron _",
    "is defined as follows : @xmath391 moreover , for each @xmath392 , we write @xmath393 for the constraint induced by the projection of @xmath394 over the variables corresponding to the @xmath170 first coordinates ( with the convention that @xmath395 is true ) .    the constrained path @xmath396 is _ thin _ whenever there exists some index @xmath397 such that @xmath398 otherwise @xmath399 is _",
    "thick_.    clearly enough all extensions of thin symbolic paths are thin as well .",
    "let us examine an example illustrating some subtlety of this notion .",
    "[ ex : dimsubtil ] consider the timed automaton depicted in figure  [ fig : ex - thick ] where @xmath400 denotes the transition ending in @xmath401 , for @xmath402 .",
    "( -3.5,0 ) node[draw , circle , inner sep=2pt ] ( q0 ) @xmath133 ; ( -3.5,-0.6 ) node [ ] ( q0bis ) @xmath403 ;    ( -0.5,0 ) node[draw , circle , inner sep=2pt ] ( q1 ) @xmath134 ; ( 0.3,0 ) node [ ] ( q1bis ) @xmath403 ;    ( 2.5,.8 ) node[draw , circle , inner sep=2pt ] ( q2 ) @xmath135 ;    ( 2.5,-.8 ) node[draw , circle , inner sep=2pt ] ( q4 ) @xmath324 ;    ( q0 )  ( q1 ) node[pos=.5 , above , sloped ] @xmath404 ;    ( q1 ) .. controls + ( 80:0.8 cm ) .. ( q2 ) node[pos=.8 , above , sloped ] @xmath405 ;    ( q1 ) .. controls + ( 100:-0.8 cm ) .. ( q4 ) node[pos=.8 , below , sloped ] @xmath406 ;    consider the ( unconstrained ) symbolic paths @xmath407 and @xmath408 , where @xmath310 , and let us argue that @xmath407 is thin , whereas @xmath408 is thick .",
    "intuitively , this difference comes from the fact that `` reaching @xmath135 '' is only possible when transition @xmath257 has been taken exactly when the value of the clock @xmath409 is @xmath6 , although `` reaching @xmath324 '' is always possible after transition @xmath257 has been taken .",
    "formally : @xmath410 whereas @xmath411 ^ 2 \\mid \\tau_1+\\tau_2=1\\}$ ] . hence , @xmath412 proving the desired result . to 0pt@xmath279",
    "the latter example shows that thickness can not be tested locally : edges @xmath314 and @xmath316 are both guarded by equality constraints , but do not behave the same with respect to thickness .",
    "this phenomenon can not happen in timed region automata , in which , as we shall establish later ( see proposition  [ prop : thickness - local ] , page  ) , thickness coincides with local thickness .",
    "the notion of thickness naturally extends to infinite symbolic paths .",
    "[ def : diminf ] an infinite symbolic path @xmath413 is _ thick _ if for all @xmath414 , @xmath415 is thick .",
    "otherwise , it is _",
    "thin_.    we illustrate these notions on our running example .    on @xmath267 of figure  [ fig : running ] , also reproduced below , with @xmath310 , let us explain why @xmath416 is thick and @xmath417 is thin .",
    "first observe that all finite prefixes @xmath418 of @xmath419 are thick .",
    "indeed , @xmath420 thus , clearly enough @xmath421 , which is maximal for an @xmath78-dimension polyhedron .",
    "this proves that @xmath422 is thick , for all @xmath277 , and thus @xmath419 is thick too .",
    "consider now the infinite path @xmath423 and show that it is thin by exhibiting a thin finite prefix .",
    "observe that : @xmath424 thus @xmath425 which implies that @xmath426 is thin .",
    "hence we conclude that @xmath427 is thin . to 0pt@xmath279",
    "the goal of this subsection is to define a topology on the set of infinite runs of a given timed automaton . keeping our analogy with @xmath374 , where the open sets are among the sets of maximal dimension , we use the notion of thickness introduced in the latter subsection in order to define a topology on runs .",
    "more precisely , the basic open sets will be cylinders over thick constrained symbolic paths whose associated polyhedra are open in their ambient spaces .",
    "[ def : topo ] let @xmath76 be a state of @xmath0 .",
    "let @xmath428 be the topology over the set of runs of @xmath0 starting in @xmath76 defined with the following basic open sets : are then built from those basic open sets using union . ]",
    "either the set @xmath429 , or the empty set @xmath430 , or the cylinders @xmath431 where @xmath432 is a finite constrained symbolic path of @xmath0 such that : ( i ) @xmath85 is thick , ( ii ) @xmath17 is borel - measurable , and ( iii ) @xmath394 is open in @xmath384 for the classical topology on @xmath374 , where @xmath433 .    before illustrating our definition ,",
    "let us draw the reader s attention on the two following points .",
    "first notice that definition  [ def : topo ] only makes sense if the intersection of two basic open sets is still a basic open set ; this is proven in the appendix as lemma  [ lemma : intersection ] ( page  ) .",
    "second , regarding our initial objective of expressing a notion of `` most of the runs '' using _ largeness _ , we need , for consistency , the space to be baire ( see remark  [ rem : baire ] ) ; this is stated below and proven in appendix  [ app : baire ] , page  .",
    "proppropbaire [ prop : baire ] for every state @xmath76 of @xmath0 , the topological space @xmath434 is a baire space .",
    "now that the validity of our topology is clear , we illustrate it on our running example .",
    "[ ex : largetabms ] on the running automaton @xmath267 of figure  [ fig : running ] with initial state @xmath310 , the set @xmath435 is large . to prove it ( or equivalently to prove that the complement of @xmath348 is meagre ) we use a banach - mazur game , and show that player  2 has a strategy to avoid the complement of @xmath348 , that is to reach @xmath348 .",
    "the game is played with the basic open sets of @xmath436 .",
    "a winning strategy for player  2 goes as follows :    * assume player  1 has chosen a cylinder @xmath437 , for some @xmath438 ( if player  1 leaves @xmath133 at her first move , we skip the first move of player  2 ) * player  2 chooses @xmath439 , * notice that player  1 is not allowed to extend the symbolic path @xmath440 with sequences of transitions including @xmath316 or @xmath321 , since both symbolic paths @xmath441 and @xmath442 are thin",
    ". therefore player  1 can only play moves of the form @xmath443 or @xmath444 .",
    "* player  2 then responds @xmath445 , with @xmath446 .",
    "one can easily be convinced that repeating infinitely often the last two moves , the play forms a run of @xmath348 , proving that player  2 wins the game and thus that @xmath348 is large .",
    "notice that both players could also play with constrained paths .",
    "this would not be interesting for player  1 , since it may cause the intersection to be empty ( in which case player  2 wins as well ) .",
    "to 0pt@xmath279    we now give a simple characterisation of the basic open sets considered in definition  [ def : topo ] , whose proof is given in appendix  [ app : basicopensets ] , page  .",
    "lembasicopensets [ lemma : basicopensets ] in the topological space @xmath447 , a finite symbolic path @xmath264 defines a basic open set if and only if there exist an open constraint @xmath17 of @xmath448 and thick edges @xmath449 such that @xmath450 .",
    "we are now in a position where we can define a notion of large satisfaction .",
    "let @xmath76 be a state of @xmath0 , and @xmath151 be a timed property over .",
    "we say that @xmath0 _ largely satisfies _",
    "@xmath151 from @xmath76 , and write @xmath451 , if the set @xmath452 is topologically large ( in @xmath453 ) .",
    "let us illustrate this notion of large satisfaction on our running example .",
    "[ ex : ltlthird ] on the running example @xmath267 depicted below , with @xmath310 , @xmath454    indeed , in example  [ ex : largetabms ] , we proved that the set @xmath455 is large . moreover",
    "each run of @xmath348 satisfies @xmath456 , and thus @xmath457 , since largeness is closed under subsumption .",
    "note that the previous formula is not satisfied with the classical semantics . `",
    "_ _ staying in @xmath133 forever _ _ ' , ` _ _ reaching @xmath324 _ _ ' , etc are examples of behaviours in @xmath267 that violate the formula @xmath1 .",
    "to 0pt@xmath279      as in the context of probabilities , we can relate the topologies in @xmath0 and in @xmath146 .",
    "although the topological spaces given by @xmath0 and @xmath146 are not homeomorphic , the topologies in @xmath0 and in @xmath146 are somehow equivalent , as stated by the next lemma .",
    "this will allow us to lift result from @xmath146 to @xmath0 .",
    "lemhomeo [ lemma : homeo ] let @xmath458 be the projection of runs in @xmath0 onto the region automaton @xmath146 .",
    "then @xmath290 is continuous , and for every non - empty open set @xmath459 , @xmath460 .",
    "the proof of this lemma is given in appendix  [ app : homeo ] , page  .",
    "note that @xmath461 is not an homeomorphism since @xmath462 is not continuous .",
    "indeed , let us consider the automaton @xmath0 of figure  [ fig : cex - homeo ] , page , with @xmath463 .",
    "the set of runs @xmath464 is open in @xmath465 since @xmath466 is a thick symbolic path .",
    "however , @xmath467 is not open in @xmath468 as @xmath469 is thin and hence @xmath470 is not a basic open . thus @xmath471 is not open and @xmath472 is not continuous .",
    "lemma  [ lemma : homeo ] allows one to simulate a banach - mazur game from @xmath0 to @xmath146 and _ vice - versa_. therefore , the large satisfaction relations in @xmath0 and @xmath146 coincide , see appendix  [ app : toporegions ] , page  .",
    "proptoporegions [ prop - topo - a - ra ] let @xmath76 be a state of @xmath0 , and @xmath151 be a timed property over . then , @xmath473",
    "in this section , we construct the so - called thick graph . the idea is to remove _ locally thin _",
    "edges from the region automaton , and it will be used to characterise ( globally ) thin paths .",
    "we fix a timed automaton @xmath99 , and we start by defining a local notion of thinness .",
    "let @xmath51 be an edge of @xmath146 , and @xmath474 its source .",
    "we say @xmath51 is _ thin _",
    "whenever @xmath475 for some ( or equivalently , for every ) @xmath476 . otherwise the edge is said _",
    "thick_.    an equivalent definition is that an edge @xmath51 with source @xmath474 is thin whenever for every @xmath476 , the length-@xmath2 constrained path @xmath477 is thin .",
    "that is why this notion of thinness is local .",
    "next we will write @xmath478 ( resp .",
    "@xmath479 ) instead of @xmath480 ( resp .",
    "@xmath481 ) for every @xmath476 since this is independent on @xmath476 .",
    "the _ thick graph _ of @xmath0 , denoted @xmath4 , is obtained from @xmath146 by deleting all the thin edges .",
    "in particular , @xmath4 has only thick edges .",
    "we first state a lemma , which explains how the dimension of symbolic paths grows in the ( timed ) region automaton .",
    "its proof can be found in appendix  [ app : thickgraph ] , page     lemthinlocal [ lem : thin - local ] let @xmath482 be a symbolic path of @xmath146 .",
    "assuming @xmath483 and letting @xmath474 be the target region of @xmath484 , @xmath485    that is , we are able to compute the global dimension of a symbolic path , given the dimension of each of its edges . notice that this is only true in the region automaton .",
    "as an example , in the timed automaton of example  [ ex : dimsubtil ] , @xmath486 , whereas @xmath487 $ ]",
    ".    the following proposition states the correctness of the thick graph , in the sense that a symbolic path is ( globally ) thin if and only if it traverses a ( locally ) thin edge .",
    "its proof is given in appendix  [ app : thicknesslocal ] , page  .",
    "propthicknesslocal [ prop : thickness - local ] let @xmath488 be a symbolic path in @xmath146 .",
    "then , @xmath264 is thin in @xmath146 iff there exists @xmath489 such that @xmath400 is thin .",
    "the thick graph will be used in the next section for characterising large and almost - sure satisfaction .",
    "it will later be used for algorithmic issues .",
    "we illustrate the construction of the thick graph on the running example .",
    "figure  [ fig : bluegraph - running ] represents the classical region graph where thick ( resp .",
    "thin ) edges are depicted bold ( resp .",
    "dashed ) . from that region graph , by removing thin edges and keeping only the states reachable from the initial one , we obtain the thick graph , represented on figure  [ fig : bluegraph - running - end ] . to 0pt@xmath279    ( -4.5,0 )",
    "node[draw , inner sep=2pt ] ( q00 ) @xmath490 ; ( -4.5,-1.5 ) node[draw , inner sep=2pt ] ( q01 ) @xmath491 ; ( -4.5,-3 ) node[draw , inner sep=2pt ] ( q02 ) @xmath492 ;    ( -3,0 ) node[draw , inner sep=2pt ] ( q10 ) @xmath493 ; ( -3,-1.5 ) node[draw , inner sep=2pt ] ( q11 ) @xmath494 ; ( -3,-3 ) node[draw , inner sep=2pt ] ( q12 ) @xmath495 ;    ( -1.5,0 ) node[draw , inner sep=2pt ] ( q2 ) @xmath496 ;    ( 0,0 ) node[draw , inner sep=2pt ] ( q30 ) @xmath497 ; ( 0,-1.5 ) node[draw , inner sep=2pt ] ( q31 ) @xmath498 ; ( 0,-3 ) node[draw , inner sep=2pt ] ( q32 ) @xmath499 ;    ( q00 ) .. controls + ( 180:25pt ) and + ( 120:25pt ) .. ( q00 ) node [ above , pos=0.5 ] @xmath257 ; ( q01 ) .. controls + ( 180:25pt ) and + ( 120:25pt ) .. ( q01 ) node [ above , pos=0.5 ] @xmath257 ; ( q02 ) .. controls + ( 180:25pt ) and + ( 120:25pt ) .. ( q02 ) node [ above , pos=0.5 ] @xmath257 ; ( q00 )  ( q01 )",
    "node [ left , pos=.3 ] @xmath257 ; ( q01 )  ( q02 ) node [ left , pos=.3 ] @xmath257 ; ( q00 ) .. controls + ( 190:50pt ) and + ( 180:50pt ) .. ( q02 ) node[pos=.5,left ] @xmath257 ;    ( q00 )  ( q10 ) node [ midway , above ] @xmath314 ; ( q00 ) ",
    "( q11 ) node [ midway , above ] @xmath314 ; ( q00 )  ( q12 ) node [ midway , above ] @xmath314 ; ( q01 )  ( q11 ) node [ midway , above ] @xmath314 ; ( q01 )  ( q12 ) node [ midway , above ] @xmath314 ; ( q02 )  ( q12 ) node [ midway , above ] @xmath314 ;    ( q12 ) .. controls + ( 200:25pt ) and + ( -20:25pt ) .. ( q02 ) node[pos=.5 , below , sloped ] @xmath316 ;    ( q10 ) .. controls + ( 20:25pt ) and + ( -200:25pt ) .. ( q2 ) node[pos=.5 , above , sloped ] @xmath319 ; ( q11 )  ( q2 ) node[pos=.5 , above , sloped ] @xmath319 ; ( q12 ) .. controls + ( 60:40pt ) and + ( -110:40pt ) .. ( q2 ) node[pos=.3 , above , sloped ] @xmath319 ;    ( q2 ) .. controls + ( 200:25pt ) and + ( -20:25pt ) .. ( q10 ) node[pos=.5 , below , sloped ] @xmath320 ; ( q2 ) .. controls + ( -120:25pt ) .. ( q11 ) node[pos=.8 , below , sloped ] @xmath320 ; ( q2 ) .. controls + ( -100:80pt ) .. ( q12 ) node[pos=.5 , below , sloped ] @xmath320 ;    ( q2 )  ( q30 ) node[pos=.5,above , sloped ] @xmath321 ;    ( q30 ) .. controls + ( 0:25pt ) and + ( 60:25pt ) .. ( q30 ) node [ above , pos=0.5 ] @xmath500 ; ( q31 ) .. controls + ( 0:25pt ) and + ( 60:25pt ) .. ( q31 ) node [ above , pos=0.5 ] @xmath500 ; ( q32 ) .. controls + ( 0:25pt ) and + ( 60:25pt ) .. ( q32 ) node [ above , pos=0.5 ] @xmath500 ; ( q30 )  ( q31 ) node [ midway , right ] @xmath500 ; ( q31 )  ( q32 ) node [ midway , right ] @xmath500 ; ( q30 ) .. controls + ( -10:50pt ) and + ( 0:50pt ) .. ( q32 ) node[pos=.5,left ] @xmath257 ;    ( -4.5,0 ) node[draw , inner sep=2pt ] ( q00 ) @xmath490 ; ( -4.5,-1.5 ) node[draw , inner sep=2pt ] ( q01 ) @xmath491 ;    ( -3,-1.5 ) node[draw , inner sep=2pt ] ( q11 ) @xmath494 ;    ( -1.5,0 ) node[draw , inner sep=2pt ] ( q2 ) @xmath496 ;    ( q01 ) .. controls + ( 180:25pt ) and + ( 120:25pt ) .. ( q01 ) node [ above , pos=0.5 ] @xmath257 ;    ( q00 )  ( q01 )",
    "node [ left , pos=.3 ] @xmath257 ;    ( q00 ) ",
    "( q11 ) node [ midway , above ] @xmath314 ;    ( q01 )  ( q11 ) node [ midway , above ] @xmath314 ;    ( q11 )  ( q2 ) node[pos=.5 , above , sloped ] @xmath319 ;    ( q2 ) .. controls + ( -120:25pt ) .. ( q11 ) node[pos=.8 , below , sloped ] @xmath320 ;    in the following , we will denote by @xmath3 the finite markov chain obtained by taking @xmath4 as the support of the markov chain , and assuming uniform distributions over edges . in the next sections , we write",
    "@xmath501 whenever the finite markov chain @xmath3 almost - surely satisfies property @xmath151 from state @xmath76 .",
    "we know that large satisfaction and almost - sure satisfaction coincide for finite automata for several classes of properties  @xcite .",
    "we want here to discuss situations where almost - sure and large satisfactions also match in our context .",
    "this will help giving algorithmic solutions to the almost - sure model - checking problem using the thick graph .",
    "we fix for this section a stochastic timed automaton @xmath248 .",
    "we first compare the two semantics in the restricted case of safety properties .",
    "let us first state this simple result that , in a region automaton , a finite symbolic path has probability @xmath6 iff it is thin .",
    "this is the first easy link we can make between the probabilities and the topology .",
    "note that this correspondence does not depend on the choice of the probability distributions .",
    "propprobthick [ prop : prob - thick ] consider a finite symbolic path @xmath488 in @xmath146 .",
    "then , @xmath502 iff @xmath264 is thick .",
    "equivalently , @xmath503 iff @xmath264 is thin .",
    "this proposition relies on condition @xmath233 on the probability distributions @xmath326 ( _ cf _ page  ): if an edge is thick , it is either because it has dimension @xmath2 , or because it has dimension @xmath6 , but all other outgoing edges also have dimension @xmath6 . in the first case ,",
    "the measure @xmath326 must be equivalent to the lebesgue measure , and in the second case , it will give a positive mass to the edge .",
    "the full details of the proof are given in appendix  [ app : safety ] , page  .",
    "using this result , we show that the large and the almost - sure satisfaction always coincide when we restrict to safety properties .",
    "thmtheosafety [ th : safety ] let @xmath76 be a state of @xmath0 , and @xmath151 be a(n untimed ) safety property over .",
    "then the four following properties are equivalent :    1 .",
    "@xmath306 ; 2 .",
    "@xmath451 ; 3 .",
    "every infinite thick symbolic path @xmath264 from @xmath504 in @xmath146 satisfies @xmath151 ; 4 .",
    "every infinite path @xmath264 from @xmath504 in @xmath4 satisfies @xmath151 ; 5 .",
    "@xmath505 .",
    "this result relies on the fact that safety properties are violated by finite prefixes .",
    "proposition  [ prop : prob - thick ] then tells us that such finite prefixes yield positive probability whenever they are thick .",
    "we can then play a banach - mazur game in the topological space of the automaton , where only thick paths can be used by the players as moves .",
    "this allows to show that property @xmath506 is meagre iff @xmath151 is not violated by thick prefixes , that is when @xmath506 has probability @xmath6 .",
    "the details of the proof are given in appendix  [ app : safety ] , on page  .",
    "as said , the proof of theorem  [ th : safety ] heavily relies on the fact that witnesses of violation ( resp .",
    "validation ) for safety ( resp .",
    "reachability ) properties are finite prefixes . not surprisingly , theorem  [ th : safety ] does not hold for general or @xmath5-regular properties , for which the violation can not always be witnessed by finite prefixes . as an example , consider the timed automaton of figure  [ fig : cex - safety ] , and the property @xmath507 .",
    "the probability of @xmath507 is indeed @xmath2 in this automaton , although the infinite symbolic path @xmath508 violates @xmath507 and is thick .",
    "( 0,0 ) node[draw , circle , inner sep=2pt ] ( l0 ) @xmath133 ; ( 3,0 ) node[draw , circle , inner sep=2pt ] ( l1 ) @xmath134 ;    ( 3,.6 ) node ( l1 ) @xmath509 ;    ( l0 ) .. controls + ( 210:40pt ) and + ( 150:40pt ) .. ( l0 ) node [ midway , left ] @xmath510 ;    ( l0 )  ( l1 ) node[pos=.5,above , sloped ] @xmath511 ;    this kind of behaviours motivates the restriction to fair paths , which is rather natural since probabilities and strong fairness are closely related  @xcite .",
    "motivated by the counterexample of figure  [ fig : cex - safety ] , we define a natural notion of fairness for infinite symbolic paths in timed automata .",
    "an infinite region path @xmath512 of @xmath146 is _ fair _",
    "iff for every thick edge @xmath51 , if @xmath51 is enabled in infinitely many @xmath513 ( @xmath514 ) , then @xmath515 for infinitely many @xmath360 .",
    "fairness extends to runs and symbolic paths in an obvious way as detailed below .",
    "region paths and symbolic paths in @xmath146 are closely related : to any non - empty symbolic path @xmath516 , we associate a unique region path @xmath517 with @xmath518 and @xmath513 is the target region of edge @xmath400 .",
    "we then say that a symbolic path @xmath516 in @xmath146 is fair whenever its corresponding region path is fair .",
    "finally we say that an infinite run @xmath91 in @xmath146 is fair whenever @xmath90 ( its underlying symbolic path ) is fair .",
    "obviously , the set of fair infinite runs from @xmath76 is measurable ( that is , in @xmath519 ) , as fairness is an @xmath5-regular property over infinite paths .",
    "we now turn the definition from @xmath146 to @xmath0 : an infinite run @xmath91 in @xmath0 is fair whenever @xmath149 is fair .",
    "we write @xmath520 for this property , that is if an infinite run @xmath91 ( in @xmath0 or in @xmath146 ) is fair , then we write @xmath521 . we then write @xmath522 ( resp",
    ". @xmath523 ) for the probability of fair runs in @xmath0 from @xmath76 ( resp . in @xmath146 from @xmath504 ) .",
    "we say that @xmath0 ( resp .",
    "@xmath146 ) is _ almost - surely fair _ from @xmath76 ( resp .",
    "@xmath504 ) whenever @xmath524 ( resp .",
    "@xmath525 ) .    let us state the following straightforward lemma , which gives a useful characterisation of thick and fair symbolic paths in the region automaton .",
    "let @xmath76 be a state of @xmath0 , and @xmath151 be a prefix - independent property over .",
    "then , the two following properties are equivalent :    1 .",
    "all bsccs reachable from @xmath526 $ ] in @xmath4 satisfy @xmath151 ; is satisfied by a bscc @xmath348 whenever every run visiting infinitely often all states of @xmath348 satisfies @xmath151 . as @xmath151 is prefix - independent , this reduces to the existence of a run satisfying @xmath151 , which visits infinitely often all states of @xmath348 . ]",
    "every infinite thick * and fair * symbolic path @xmath264 from @xmath504 in @xmath146 satisfies @xmath151 ; 3 .",
    "@xmath505 .",
    "we write @xmath527 for this property .      even though fairness is introduced because of the probabilities , we first realise that adding fairness to paths allows to characterise the large satisfaction .",
    "more precisely , we prove the following result , which is rather similar to theorem  [ th : safety ] , when restricted to topology .",
    "[ theo : large ] let @xmath76 be a state of @xmath0 , and @xmath151 be a prefix - independent property over .",
    "then : @xmath528    first assume that @xmath529 .",
    "this equivalently means that @xmath530 ( lemma  [ prop - topo - a - ra ] ) , that is , @xmath531 is meagre .",
    "we now apply the characterisation of meagre sets _ via _ banach - mazur games ( theorem  [ bm : thm ] ) , where the players play with basic open sets of @xmath532 .",
    "note that for every basic open set @xmath533 in the above topology , all edges @xmath534 are thick , the open set can therefore `` be read '' in @xmath4 .    in this game ,",
    "player 2 has a strategy to ensure that @xmath535 , where the @xmath356 s are the moves in the game .",
    "let us denote @xmath536 this winning strategy .",
    "fix any bscc @xmath348 of @xmath4 reachable from @xmath526 $ ] , and let @xmath537 be an enumeration of the locations in @xmath348 . in order to prove that @xmath348 satisfies @xmath151",
    ", we will build a symbolic path @xmath264 , played according to @xmath536 ( and thus satisfying @xmath151 ) , witnessing that @xmath348 satisfies @xmath151 .",
    "let player  1 play as follows ( against @xmath536 ) : at her first move , player  1 chooses @xmath349 leading to @xmath134 ; then , no matter which @xmath351 player  2 chooses , player  1 chooses @xmath353 ( longer than @xmath351 ) leading to @xmath135 ; _ etc_. furthermore applying a technique similar to the proof of proposition  [ prop : baire ] ( compactification ) , player 1 can ensure that @xmath538 .",
    "we then get that @xmath539 , since @xmath536 is winning for player  2 .",
    "let @xmath264 be the infinite symbolic path underlying @xmath540 . as @xmath151 is a property over , @xmath541 .",
    "furthermore , @xmath264 visits all locations of @xmath348 ( since player 1 has ensured visiting all the locations of @xmath348 infinitely often ) , which means that the bscc @xmath348 satisfies @xmath151 .",
    "we conclude that all bsccs satisfy property @xmath151 .",
    "conversely , assume that every bscc of @xmath4 satisfies @xmath151 .",
    "it is then easy to provide a winning strategy for player 2 in the same banach - mazur game as described above .",
    "once a bscc @xmath348 has been reached ( after player  1 s first move or player  2 s first move ) , player  2 will ensure to visit all the locations of @xmath348 ( as player  1 did in the above proof ) .",
    "the resulting infinite path will satisfy @xmath151 ( by hypothesis ) , which implies the winning condition for player  2 .",
    "the natural question is : can we fully extend theorem  [ th : safety ] and therefore prove that almost - sure satisfaction is equivalent to @xmath542 ?",
    "we concentrate on the following equivalence : @xmath543 we show now that this equivalence is unfortunately not true in general .",
    "the counter - example to that equivalence is much more surprising than that of figure  [ fig : cex - safety ] .",
    "the reasons why it fails is rather subtle and is due to complex _ time converging _ behaviours .",
    "as pointed out in  @xcite , timed automata admit various time converging behaviours , and , in our context , some of these behaviours can lead to `` big '' sets of _ unfair _ executions .",
    "inspired by an example presented in  @xcite , we design a two - clock timed automaton @xmath544 ( see figure  [ fig : pacman ] ) for which the equivalence   does not hold . in this automaton ,",
    "every ( infinite ) fair and thick symbolic path satisfies @xmath545 , and in particular @xmath546 . thus , letting @xmath547 , the right - hand side of equivalence   is true .",
    "however , when @xmath544 is equipped with uniform distributions , starting in @xmath548 , one can show that the probability of the symbolic path @xmath549 is positive and therefore @xmath550 .",
    "we notice that this implies @xmath551 .",
    "all this is proven formally in appendix  [ app : pacman ] , page  .",
    "( -6,-1.4 )  ( 6,.7 ) ; ( 0,0 ) node[draw , circle , inner sep=2pt ] ( q0 ) @xmath133 ; ( 0,-1 ) node [ ] ( q0b ) ;    ( 3,0 ) node[draw , circle , inner sep=2pt ] ( q1 ) @xmath134 ;    ( 6,0 ) node[draw , circle , inner sep=2pt ] ( q3 ) @xmath135 ; ( 6,-.6 ) node [ ] ( q3b ) @xmath552 ; ( 6,.7 ) node [ ] ( q3a ) @xmath553 ;    ( -3,0 ) node[draw , circle , inner sep=2pt ] ( q4 ) @xmath324 ;    ( -6,0 ) node[draw , circle , inner sep=2pt ] ( q6 ) @xmath554 ; ( -6,0.7 ) node [ ] ( q6a ) @xmath555 ; ( -6,-.6 ) node [ ] ( q6b ) @xmath552 ;    ( q0b )  ( q0 ) ;    ( q0 )  ( q1 ) node[pos=.5 , above , sloped ] @xmath556 ;    ( q1 )  ( q3 ) node[pos=.5 , above , sloped ]",
    "@xmath557 node[pos=.5 , below , sloped ] @xmath558 ;    ( q3 ) .. controls + ( 210:3.5 cm ) .. ( q0 ) node[pos=.5 , above , sloped ] @xmath559 node[pos=.5 , below , sloped ] @xmath13 ;    ( q0 ) ",
    "( q4 ) node[pos=.5 , above , sloped ] @xmath560 ;    ( q4 )",
    " ( q6 ) node[pos=.5 , above , sloped ] @xmath561 node[pos=.5 , below , sloped ] @xmath558 ;    ( q6 ) .. controls + ( 330:3.5 cm ) .. ( q0 ) node[pos=.5 , above , sloped ] @xmath562 node[pos=.5 , below , sloped ] @xmath13 ;      we will show that a sufficient condition to have is to have @xmath563 .",
    "we can now state the following crucial theorem :    [ th : fairhelps ] let @xmath76 be a state of @xmath0 , and @xmath151 be a prefix - independent ( untimed ) property over .",
    "assuming @xmath564 , the following holds : @xmath565    first define the property @xmath566 as follows : letting @xmath91 be a run in @xmath146 , @xmath567 iff @xmath90 is thick . applying theorem  [ th : safety ] ,",
    "we get that @xmath568 .",
    "we now prove that @xmath569 iff there exists an infinite symbolic path @xmath264 from @xmath76 , which is thick and fair , and such that @xmath570 .",
    "this will imply the expected result .",
    "we prove the two implications separately .",
    "* _ proof of the left - to - right implication .",
    "_ let us assume that @xmath569 .",
    "we have seen that @xmath571 .",
    "therefore , thanks to the fact that @xmath572 , @xmath573 .",
    "hence , @xmath574 in particular , there exists a fair thick infinite path from @xmath76 which satisfies @xmath151 . * _ proof of the right - to - left implication .",
    "_ let @xmath575 be a fair thick symbolic path in @xmath146 satisfying @xmath151 .",
    "we consider the thick graph @xmath4 of @xmath0 .",
    "since @xmath264 is thick , @xmath264 is also a path in @xmath4 .",
    "let us consider the strongly connected components of @xmath4 .",
    "as @xmath264 is a fair path , it eventually reaches a bscc in @xmath4 and from then on takes each edge of the bscc infinitely often .",
    "otherwise , this would mean that @xmath264 ignores a thick edge forever , which would contradict the fairness assumption .",
    "let @xmath576 be the bscc that @xmath264 eventually reaches and @xmath577 the shortest prefix of @xmath264 leading from @xmath76 to @xmath576 ( note that it is thick ) .",
    "consider the following set of paths in  @xmath146 : @xmath578 since @xmath571 and @xmath572 , we deduce that @xmath579 .",
    "moreover since @xmath577 is thick , we obtain @xmath580 .",
    "it now suffices to observe that all paths in @xmath297 satisfy @xmath151 .",
    "indeed , the satisfiability of prefix - independent ( untimed ) properties over only depends on the set of states that are visited infinitely often , and all paths in @xmath297 visit infinitely often exactly the states in @xmath576 , and @xmath570 .",
    "we can conclude this subsection by stating the main result concerning prefix - independent properties .",
    "it is a direct consequence of theorems  [ theo : large ] and  [ th : fairhelps ] .",
    "[ coro:1 ] let @xmath76 be a state of @xmath0 , and @xmath151 be a prefix - independent ( untimed ) property over .",
    "assuming @xmath581 , the following equivalences hold : @xmath582    note that characterisation  @xmath542 will help with algorithmic issues .",
    "complexity issues will be discussed in section  [ sec : algo ] .      in this section",
    "we extend the previous study to properties which are richer than prefix - independent properties , in particular to properties and properties expressed as specification timed automata .",
    "let @xmath251 be a stochastic timed automaton with @xmath99 , and let @xmath583 be a specification bchi or muller timed automaton .",
    "we build the product stochastic timed automaton @xmath584 as follows .",
    "the timed automaton @xmath585 ( with no labelling function ) is such that : [ def : produit - ta - spec ]    * @xmath586 ; * @xmath587 is composed of the following edges : if @xmath588 then for all @xmath589 , there is an edge @xmath590 in @xmath591 , which we write @xmath592 ; * @xmath593 for every @xmath594 .    the measures @xmath595 and the weights @xmath596 are such that :    * @xmath597 for every @xmath594 , and * @xmath598 for every edge @xmath599 which comes from edge @xmath51 .    given a state @xmath600 of @xmath0",
    ", we define the initial state in @xmath601 as @xmath602 ; that is , we start in @xmath211 from the location specified by the label of state @xmath76 ( this is @xmath603 ) , with all clocks of @xmath211 set to @xmath6 .",
    "note that any run @xmath91 in @xmath0 from state @xmath76 has a unique image in @xmath601 from @xmath604 , denoted @xmath605 ( since @xmath211 is complete and deterministic ) .",
    "note that the converse also holds : for any run @xmath606 in @xmath601 from some @xmath604 , there is a unique preimage @xmath91 in @xmath0 from @xmath76 , such that @xmath607 .",
    "we define the @xmath5-regular property @xmath608 in @xmath601 as the lifting of @xmath200 in @xmath601 ( an infinite run in @xmath601 satisfies @xmath609 whenever its projection on @xmath211 satisfies the accepting condition @xmath200 ) . as @xmath200 is an internal prefix - independent condition in @xmath211",
    ", @xmath609 is an internal prefix - independent condition in @xmath601 .",
    "it should be clear enough that @xmath601 is non - blocking assuming @xmath0 is .",
    "moreover , for all states @xmath610 of @xmath0 , for all states @xmath611 of @xmath211 , and for every edge @xmath612 , @xmath613 this allows to properly define the probability measure @xmath614 .",
    "we can now state the main theorem for specification timed automata , which uses this product construction .",
    "its proof is given in appendix  [ app : specauto ] , page  .",
    "thmspecauto [ theo : specauto ] let @xmath76 be a state of @xmath0 , and @xmath211 be a specification bchi or muller timed automaton . assuming @xmath615 , the following holds : @xmath616    the above also applies to specification untimed automata . in particular , it also applies to specification automata corresponding to formulas .",
    "it is now easy to be convinced that if @xmath211 is a specification untimed automaton , then @xmath617 since @xmath211 does not restrict guards of edges , and in particular @xmath618 this allows to get the following important corollary , which characterises the almost - sure model - checking for .    [ coro : match - fair ] let @xmath76 be a state of @xmath0 , and @xmath1 be an formula over . assuming @xmath581 , the following holds : @xmath619",
    "in the previous section , we showed that , provided fairness is almost - sure , one could characterise almost - sure satisfaction and large satisfaction using thick paths .",
    "we will describe here two classes of stochastic timed automata for which this holds .",
    "in this section , we focus on single - clock timed automata , and we show that , under some minor additional technical hypotheses , single - clock timed automata are almost - surely fair . in particular , corollary  [ coro : match - fair ] will apply , yielding the decidability of the almost - sure model - checking problem for @xmath5-regular properties on this class of stochastic timed automata .",
    "let @xmath99 be a single - clock stochastic timed automaton .",
    "we assume the following conditions on @xmath0 , denoted @xmath620 : [ dagger ]    ( h3 ) : :    for all @xmath165 , for all    @xmath621 \\subseteq { { \\mathbb r}}_+$ ] , the function    @xmath622)$ ] is continuous ; ( h4 ) : :    if @xmath623 for some @xmath624 , and    @xmath625 for every    @xmath626 , then @xmath627 ; ( h5 ) : :    there is @xmath628 s.t .",
    "for every state    @xmath76 with @xmath95 unbounded ,    @xmath629 ) \\leq \\lambda_0 $ ] .",
    "the three last requirements are technical and needed to properly define a probability measure over infinite runs , but they are natural and easily satisfiable .",
    "for instance , a timed automaton equipped with uniform ( resp .",
    "exponential ) distributions on bounded ( resp .",
    "unbounded ) intervals satisfy these conditions .",
    "if we assume exponential distributions on unbounded intervals , the very last requirement corresponds to the bounded transition rate condition in  @xcite , required to have reasonable and realistic behaviours .",
    "thmoneclock [ theorem : fair - oneclock ] assuming @xmath0 satisfies @xmath620 , if @xmath76 is a state of @xmath0 , @xmath630 .",
    "the proof of this theorem is very technical .",
    "we will describe the main ingredients of the proof in the core of the paper , and postpone all details to appendix  [ app : single ] .",
    "let @xmath631 be the set of constants appearing in guards of @xmath0 , assuming w.l.o.g .",
    "@xmath632 . we know",
    "@xcite that the following intervals are regions for @xmath0 : @xmath633 we assume @xmath146 is built with these regions .",
    "it is polynomial - size ( contrary to standard region automaton which is exponential - size ) .",
    "the proof of the above theorem then relies on lemma  [ lemma : technic ] below .",
    "a _ subregion _ of a region @xmath474 is a pair @xmath634 such that @xmath635 is an interval . if @xmath636 , we may write @xmath637 as well .",
    "if @xmath634 and @xmath638 are subregions , we write @xmath639 to express that @xmath640 for some @xmath641 , @xmath642 and @xmath26 . in the sequel to ease the reading , we will use -like notations , like @xmath643 to denote the conditional probability of the set of runs @xmath644 such that @xmath645 and @xmath646 is infinite , assuming that the set @xmath647 is infinite .",
    "we will use other similar notations , that we expect are sufficiently explicit to be understandable .",
    "lemtechnica [ lemma : technic ]    1 .   for every subregion @xmath634 of @xmath474 such that ( i ) @xmath648 is non - empty and open in @xmath474 ( for the induced topology ) , and ( ii )",
    "@xmath649 is compact , 2 .   for every thick edge @xmath51 enabled in @xmath474 , 3 .   for every subregion @xmath638 of @xmath650 such that for every @xmath651",
    ", @xmath652 is non - empty and open in @xmath650 ( for the induced topology ) , where @xmath653 , 4 .   for every state @xmath76 of @xmath146 such that @xmath654 ,    @xmath655    the idea of this lemma is to provide a lower - bound on the probability of firing the transition @xmath639 each time we visit @xmath634 .",
    "by thickness of @xmath51 , we know that the probability at each visit is positive , but as @xmath656 is compact , we infer a positive uniform lower - bound @xmath236 .",
    "this is the main ingredient to prove the result .",
    "this lemma holds for all timed automata , not only one - clock timed automata .",
    "we have shown the proof for a single edge , but this lemma can be extended straightforwardly to finite sequences of edges as follows :    [ lemma : technic2 ]    1 .   for all regions @xmath657 , 2 .   for all edges @xmath658 such that @xmath400 is thick and enabled in @xmath659 , 3 .",
    "for all subregions @xmath660 such that for every @xmath661 : 1 .",
    "@xmath662 is non - empty and open in @xmath513 ( for the induced topology ) , 2 .",
    "@xmath663 is compact , and 3 .   for every @xmath664",
    ", @xmath665 is non - empty and open , where @xmath666 , 4 .   for every state @xmath76 of @xmath0 such that @xmath667    it holds that : @xmath668 where @xmath669 .",
    "now , we can turn back to theorem  [ theorem : fair - oneclock ] .",
    "let @xmath76 be a state in @xmath0 .",
    "we want to prove that @xmath670 .",
    "we will equivalently prove @xmath671 . to that purpose , we decompose the set of infinite runs in @xmath146 from @xmath504 into :    1 .   the set of runs with infinitely many resets , 2 .",
    "the set of runs with finitely many resets , and which are ultimately in the unbounded region @xmath672 , 3 .",
    "the set of runs with finitely many resets , and which ultimately stay forever in a bounded region , either @xmath673 with @xmath674 , or @xmath675 with @xmath676 .",
    "we write @xmath677 ( resp .",
    "@xmath678 ) for condition @xmath679 restricted to @xmath675 ( resp .",
    "@xmath673 ) .",
    "we write @xmath680 for the probability of the runs starting in @xmath76 and satisfying condition  @xmath681 .",
    "the three sets of runs above are measurable and partition the set of all runs .",
    "hence @xmath682 , and applying bayes formula : @xmath683 we now distinguish between the three cases to prove that @xmath684 ( in case @xmath685 we remove the corresponding term from  ) .",
    "case @xmath686 .",
    ": :    in that case , for all states @xmath687 which are visited    infinitely often we apply lemma  [ lemma : technic2 ] to any sequence of    thick edges , and get the expected result for @xmath686 .",
    "case @xmath688 .",
    ": :    once the unbounded region is reached , precise values of clocks are    irrelevant , and the timed automaton roughly behaves like a finite    markov chain , which yields the expected result for @xmath688 . case @xmath679 .",
    ": :    we consider runs which end up in a bounded region @xmath116 .",
    "this case is only possible ( with positive probability ) if no thick    edge is enabled infinitely often with a guard above @xmath116    ( otherwise it would be taken infinitely often    due to the hypothesis    * @xmath689 * ) .",
    "therefore in this case as well the automaton    ultimately behaves like a finite markov chain , which allows to    conclude with the expected property .",
    "note that the one - clock hypothesis is crucial for cases @xmath686 and @xmath679 .",
    "note that we can not obtain the result on zeno behaviours from corollary  [ coro : match - fair ] since zenoness is a timed property .",
    "we can neither use the product construction of section  [ sec : richer ] and theorem  [ theo : specauto ] since this will increase the number of clocks to  @xmath350 .",
    "therefore we need a specific proof , that we present now .",
    "we first show the following crucial lemma .",
    "lemlemmazeno [ lemma : zeno1 ] assuming @xmath0 satisfies @xmath620 , if @xmath76 is a state of @xmath0 , then : @xmath690 where a bscc of @xmath4 is said zeno whenever it is bounded and the clock is never reset .    to prove the lemma , we need to realise that runs ending up in the unbounded region or runs with infinitely many resets have probability @xmath6 to be zeno",
    ". indeed , in the first case , there will be non constraint on the clock for taking transition , and in particular , with probability @xmath2 a delay of @xmath2 will elapse infinitely often ; in the second case , infinitely often a guard of the form @xmath691 will be enabled , and therefore with probability @xmath2 , a delay of at least @xmath315 will be done , yielding with probability @xmath2 a non - zeno run .",
    "it remains those runs ending up in a bounded region , which will correspond to the right - hand side of the equality in the statement ( due to fairness , the runs end up with probability @xmath2 in a bscc ) .",
    "the details are given in the appendix on page  .",
    "thmzeno [ thm : zeno ] assuming @xmath0 satisfies @xmath620 ,",
    "if @xmath76 is a state of @xmath0 , then the three following properties are equivalent :    1 .   @xmath692 ; 2 .",
    "@xmath693 ; 3 .",
    "no zeno bscc is reachable in @xmath4 from @xmath504 .",
    "this theorem is a consequence of lemma  [ lemma : zeno1 ] , and uses once more banach - mazur games for what concerns the large satisfaction .",
    "the details are also given in the appendix on page  .",
    "[ coro : zeno ] the almost - sure non - zenoness problem is nlogspacefor single - clock stochastic timed automata which satisfy condition @xmath620",
    ".    condition @xmath694 in theorem  [ thm : zeno ] can be checked in nlogspace(recall that in that case @xmath4 is polynomial in the size of @xmath0 ) .",
    "although fairness is not almost - sure in general for @xmath78-clock stochastic timed automata with @xmath695 ( see figure  [ fig : pacman ] ) , it is the case for the subclass of _ reactive _ ( and weak - reactive ) stochastic timed automata .",
    "let us first recall that a ( non - stochastic ) timed automaton @xmath0 is reactive if @xmath97 for all states @xmath76 of @xmath0 .",
    "we first focus on the class of reactive stochastic timed automata , and later extend the results to the class of weak - reactive stochastic timed automata .",
    "a stochastic timed automaton @xmath251 is _ reactive _ whenever the timed automaton @xmath696 is reactive , and for every @xmath165 , there exists a probability distribution @xmath697 over @xmath21 , equivalent to the lebesgue measure , such that for every @xmath698 , @xmath699 .",
    "note that for any constant @xmath348 , for any @xmath165 , @xmath700)<1 $ ] , this is due to the equivalence of @xmath701 with the lebesgue measure .",
    "note also that if @xmath702 and @xmath703 are such that @xmath704 , then @xmath705 for every edge  @xmath51 .",
    "examples of distributions over delays that respect the above conditions are exponential distributions , but we can think of many other kinds of distributions .",
    "later , all our examples will use exponential distributions .",
    "each such distribution is characterised by a positive parameter @xmath706 , and its density is @xmath707 . to 0pt@xmath279    note that reactive stochastic timed automata generalise continuous - time markov chains ( ctmc for short )",
    "a ctmc is nothing else than a single - clock reactive stochastic timed automaton in which ( i ) on all transitions , the guard is trivial , and the clock is reset , and ( ii ) each location is assigned an exponential distribution over delays .",
    "let @xmath251 be a reactive stochastic timed automaton .",
    "the goal of this section is to prove the following result , which will allow to apply results of section  [ sec : match ] , and in particular theorem  [ theo : specauto ] .",
    "[ prop : fair - reactive ] let @xmath76 be a state of @xmath0",
    ". then @xmath708 .",
    "we first recall some basic probability results .",
    "[ petitlemmes ]",
    "let @xmath709 be a probability measure on some probabilistic space @xmath710 .",
    "let @xmath238 , @xmath334 and @xmath348 be measurable sets such that @xmath711 and @xmath712 , then    1 .   if @xmath713 , then @xmath714 .",
    "2 .   if @xmath715 , @xmath716 , then @xmath717 .",
    "3 .   if @xmath715 , @xmath717 , then @xmath718 .",
    "we write @xmath719 for the stochastic timed region automaton based on @xmath0 ( we abusively also write @xmath326 and @xmath327 since we will not use that notation for @xmath0 ) , and we write @xmath720 for the set of locations of @xmath146 , and @xmath125 for its set of edges .",
    "thanks to corollary  [ prop : proba - a - ra ] , in order to prove proposition  [ prop : fair - reactive ] , it is sufficient to prove that @xmath146 is almost - surely fair . in",
    "the following we denote by @xmath100 the maximal constant appearing in @xmath0 ( or @xmath146 ) , and we write @xmath709 instead of @xmath721 .",
    "to prove almost - sure fairness in @xmath146 , we have to show that for every thick edge @xmath51 , the probability to visit @xmath51 infinitely often , knowing we visit @xmath722 infinitely often , is equal to @xmath2 .",
    "the key point of this proof lies in the fact that , since the automaton @xmath146 is reactive , there exists a subset of regions , called _ memoryless _ , that will be visited infinitely often with probability @xmath2 .",
    "a region @xmath116 is said _",
    "memoryless _ whenever the following holds for every clock @xmath37 : either @xmath723 for every @xmath724 , or @xmath725 for every @xmath128 .",
    "the interest of memoryless regions is that once you reach such a region the future ( and its probability ) is independent of both the finite prefix and the clock valuations . in particular , visiting infinitely often memoryless regions prevents converging phenomena as the one observed in figure  [ fig : pacman ] .",
    "for each memoryless region @xmath116 , we distinguish a canonical valuation @xmath726 defined by @xmath727 or @xmath728 for every @xmath37 ( note that this valuation is uniquely defined ) .",
    "if @xmath729 is such that @xmath116 is memoryless , we distinguish the canonical configuration @xmath730 ( or @xmath731 in @xmath146 ) .",
    "the fact that memoryless regions are visited infinitely often almost - surely is formalised in lemma  [ lemma : eq1 ] .",
    "then it remains to show that knowing we visit infinitely often such a memoryless region , we visit a reachable thick edge @xmath51 infinitely often with probability @xmath2 . to this end , we investigate the set of runs that visit infinitely often memoryless regions and @xmath51 , and we conclude thanks to a judicious decomposition of this set and borel - cantelli lemma , this is formalised in lemma  [ lemma : eq2 ] .",
    "a sketch of proof is given for lemma  [ lemma : eq1 ] and the complete proofs of both lemmas are provided in appendix  [ app : reactive ] , page  .    in order to formalise these ideas ,",
    "we need to introduce further notations .",
    "let @xmath76 be a state of @xmath146 , that we will take as initial .",
    "if @xmath51 is a thick edge in @xmath125 , and @xmath732 , we write @xmath733 for the set of runs in @xmath146 that start in @xmath76 and take @xmath51 infinitely often , and @xmath734 for the set of runs of @xmath146 that start in @xmath76 and visit @xmath474 infinitely often . in particular , we write @xmath735 for the set of runs that start in @xmath76 and visit @xmath722 infinitely often ( hence along which @xmath51 is enabled infinitely often ) .",
    "we fix a thick edge @xmath51 in @xmath125 , and we let @xmath736 be the set of pairs @xmath737 where @xmath116 is memoryless and @xmath738 the set of elements @xmath739 such that @xmath740 where @xmath741 is the set of runs that start from @xmath742 and take @xmath51 before any other visit to @xmath474 .",
    "lemequaun [ lemma : eq1 ] assuming the above notations , @xmath743    we notice that the set of runs that delay infinitely many times more than @xmath100 time units before taking a transition is a subset of @xmath744 . indeed ,",
    "if a run @xmath70 delays more than @xmath100 time units before taking the @xmath78-th transition then each clock is either reset on the @xmath78-th transition ( hence its value is @xmath6 ) , or its value exceeds @xmath100 . now , as for every @xmath745",
    ", we have assumed @xmath697 is equivalent to the lebesgue measure on @xmath21 , it holds that @xmath746)<1 $ ] .",
    "we can then prove that the probability of the set of runs that delay only finitely many times more than @xmath100 time units is zero , since @xmath46 is finite , which concludes the proof .",
    "lemequadeux [ lemma : eq2 ] assuming the above notations , for all @xmath747 @xmath748    now assuming lemma  [ lemma : eq1 ] and lemma  [ lemma : eq2 ] , we will prove proposition  [ prop : fair - reactive ] .",
    "_ proof of proposition  [ prop : fair - reactive ] .",
    "_ we want to prove that the probability of being fair is @xmath2 , hence we want to prove that for every thick edge @xmath51 with @xmath749 , @xmath750 let @xmath51 be a thick edge with @xmath751 . by lemma  [ lemma : eq1 ] , we have that @xmath752 and by lemma  [ lemma : eq2 ] , we have that @xmath753 for any @xmath754 . applying lemma  [ petitlemmes ] ( point 3 . ) , we deduce from equation  @xmath755 that @xmath756 and applying lemma  [ petitlemmes ] ( point 1 . )",
    ", we deduce from equation  @xmath757 that : @xmath758 moreover , we can easily show that @xmath759 indeed , we just have to prove that @xmath760 and it is thus sufficient to prove that @xmath761 however , if @xmath762 , we have @xmath763 or @xmath764 .",
    "now , if @xmath763 , we have @xmath765 and if @xmath764 , we also have @xmath766 we therefore deduce from equations  @xmath767 and @xmath768 that @xmath769 applying lemma  [ petitlemmes ] ( point 2 . ) , we get the expected result from equations  @xmath770 and @xmath771 : @xmath772      we now extend the almost - sure fairness from the subclass of reactive stochastic timed automata to the larger class of _ weak reactive _",
    "stochastic timed automata , defined as follows .",
    "a stochastic timed automaton @xmath251 with @xmath99 is said to be _ weak reactive _ whenever @xmath46 is the disjoint union of sets @xmath773 and @xmath774 such that @xmath775 if and only if @xmath776 is unbounded for all @xmath114 such that @xmath777 , and :    * for every pair @xmath610 , @xmath778 satisfying for every @xmath779 , @xmath780 or @xmath781 , @xmath782 * there exists @xmath783 such that for every @xmath784 , for every @xmath777 , we have that @xmath785 * there exist @xmath786 and @xmath787 such that for any @xmath788 , for every @xmath777 , we have that @xmath789 where @xmath790 .",
    "it is obvious that the class of reactive stochastic timed automata is a subclass of weak reactive stochastic timed automata .",
    "in fact , the main difference between these classes of automata lies on the existence of some states @xmath76 such that @xmath95 is bounded .",
    "the proof of almost - sure fairness of reactive stochastic timed automata is based on two lemmas : lemma  [ lemma : eq1 ] and lemma  [ lemma : eq2 ] .",
    "the proof of lemma  [ lemma : eq2 ] works in the same way for weak reactive stochastic timed automata , using the fact that for every pair @xmath610 , @xmath778 satisfying for every @xmath779 , @xmath780 or @xmath781 , we have @xmath791 . the proof of lemma  [ lemma : eq1 ] can also be adapted in view of properties of weak reactive stochastic timed automata in order to obtain the following lemma :    lemweakreactive [ lemma : weakreactive ] let @xmath0 be a weak reactive stochastic timed automaton and @xmath76 be a state of @xmath0 .",
    "then @xmath792    thanks to these two lemmas , we deduce the almost - sure fairness for weak reactive automata as in the case of reactive stochastic timed automata :    [ prop : fair - weakreactive ] let @xmath0 be a weak reactive stochastic timed automaton and @xmath74 be a state of @xmath0 . then @xmath630 .",
    "we end up this subsection by exhibiting some examples of weak reactive stochastic timed automata :    ( -6,-1.4 ) ",
    "( 6,.7 ) ; ( 0,0 ) node[draw , circle , inner sep=2pt ] ( q0 ) @xmath133 ; ( 0,-1 ) node [ ] ( q0b ) ;    ( 3,0 ) node[draw , circle , inner sep=2pt ] ( q1 ) @xmath134 ;    ( 6,0 ) node[draw , circle , inner sep=2pt ] ( q3 ) @xmath135 ; ( 6,-.6 ) node [ ] ( q3b ) @xmath552 ; ( 6,.7 ) node [ ] ( q3a ) @xmath553 ;    ( -3,0 ) node[draw , circle , inner sep=2pt ] ( q4 ) @xmath324 ;    ( -6,0 ) node[draw , circle , inner sep=2pt ] ( q6 ) @xmath554 ; ( -6,0.7 ) node [ ] ( q6a ) @xmath555 ;    ( q0b )  ( q0 ) ;    ( q0 )  ( q1 ) node[pos=.5 , above , sloped ] @xmath556 ;    ( q1 ) ",
    "( q3 ) node[pos=.5 , above , sloped ] @xmath557 node[pos=.5 , below , sloped ] @xmath558 ;    ( q3 ) .. controls + ( 210:3.5 cm ) .. ( q0 ) node[pos=.5 , above , sloped ] @xmath559 node[pos=.5 , below , sloped ] @xmath13 ;    ( q0 )  ( q4 ) node[pos=.5 , above , sloped ] @xmath560 ;    ( q4 ) ",
    "( q6 ) node[pos=.5 , above , sloped ] @xmath561 node[pos=.5 , below , sloped ] @xmath558 ;    ( q6 ) .. controls + ( 330:3.5 cm ) .. ( q0 ) node[pos=.5 , above , sloped ] @xmath562 node[pos=.5 , below , sloped ] @xmath793 ;    1 .",
    "let @xmath0 be a stochastic timed automaton such that for any @xmath794 , there exists a probability distribution @xmath697 over @xmath21 , equivalent to the lebesgue measure , such that for every @xmath698 , @xmath795 .",
    "if @xmath774 does not contain any cycle then @xmath0 is weak reactive .",
    "2 .   let @xmath796 . the modification of @xmath544 given on figure  [ fig : unfair1 ] , where @xmath797 is the exponential distribution of parameter @xmath236 , is weak reactive .",
    "+ the other modification of @xmath544 given on figure  [ fig : unfair2 ] , where @xmath798 is the exponential distribution of parameter @xmath236 , is not weak reactive . to 0pt@xmath279    ( -6,-1.4 )  ( 6,.7 ) ; ( 0,0 ) node[draw , circle , inner sep=2pt ] ( q0 ) @xmath133 ; ( 0,-1 ) node [ ] ( q0b ) ;    ( 3,0 ) node[draw , circle , inner sep=2pt ] ( q1 ) @xmath134 ;    ( 6,0 ) node[draw , circle , inner sep=2pt ] ( q3 ) @xmath135 ; ( 6,.7 ) node [ ] ( q3a ) @xmath553 ;    ( -3,0 ) node[draw , circle , inner sep=2pt ] ( q4 ) @xmath324 ;    ( -6,0 ) node[draw , circle , inner sep=2pt ] ( q6 ) @xmath554 ; ( -6,0.7 ) node [ ] ( q6a ) @xmath555 ; ( -6,-.6 ) node [ ] ( q6b ) @xmath552 ;    ( q0b )  ( q0 ) ;    ( q0 )  ( q1 ) node[pos=.5 , above , sloped ] @xmath556 ;    ( q1 ) ",
    "( q3 ) node[pos=.5 , above , sloped ] @xmath557 node[pos=.5 , below , sloped ] @xmath558 ;    ( q3 ) .. controls + ( 210:3.5 cm ) .. ( q0 ) node[pos=.5 , above , sloped ] @xmath559 node[pos=.5 , below , sloped ] @xmath793 ;    ( q0 )  ( q4 ) node[pos=.5 , above , sloped ] @xmath560 ;    ( q4 )  ( q6 ) node[pos=.5 , above , sloped ] @xmath561 node[pos=.5 , below , sloped ] @xmath558 ;    ( q6 ) .. controls + ( 330:3.5 cm ) .. ( q0 ) node[pos=.5 , above , sloped ] @xmath562 node[pos=.5 , below , sloped ] @xmath13 ;      a side - result of the proofs of lemmas [ lemma : eq1 ] and [ lemma : weakreactive ] is that the set of zeno runs in a ( weak ) reactive stochastic timed automaton is negligible , which implies in particular that the almost - sure non - zenoness problem is trivial .",
    "propreactivenonzeno let @xmath0 be a ( weak ) reactive stochastic timed automaton , and @xmath76 be a state of @xmath0",
    ". then @xmath799 .    intuitively , this is because almost - surely , time will increase by a lower - bounded amount .",
    "the proof requires details of those of lemmas [ lemma : eq1 ] and [ lemma : weakreactive ] , and is therefore postponed to the appendix , on page  .",
    "we will use the thick graph construction for deciding almost - sure model - checking problem . for safety properties",
    ", we will use the characterisation given in theorem  [ th : safety ] , whereas we will use condition @xmath542 for more general properties , under the assumption that fairness is almost - sure .",
    "[ lemma : complex ] let @xmath0 be a timed automaton over , @xmath76 a state of @xmath0 , and @xmath151 be a bchi or muller property over .",
    "assume that @xmath4 has size @xmath800 , then we can decide in non - deterministic @xmath801-space whether condition @xmath802 holds .",
    "the algorithm for checking condition @xmath802 is the following :    * guess a state @xmath474 of @xmath4 ; * check that there is a ( thick ) path from @xmath526 $ ] to @xmath474 in @xmath4 ; * check that @xmath474 belongs to a bscc of @xmath4 which satisfies property @xmath151 .",
    "note that as @xmath151 is prefix - independent , we can assume the thick path from @xmath526 $ ] to @xmath474 is simple .",
    "all this can be done on - the - fly and in non - deterministic @xmath801-space .",
    "note that checking @xmath151 in a bscc can be done in @xmath801-space as well .",
    "[ lemma : complex2 ] let @xmath0 be a timed automaton over , @xmath76 a state of @xmath0 , and @xmath151 be a simple safety property over .",
    "assume that @xmath4 has size @xmath800 , then we can decide in non - deterministic @xmath801-space whether there is an infinite path @xmath264 from @xmath504 in @xmath4 which does not satisfy  @xmath151 .",
    "here is a possible algorithm with the expected complexity :    * guess a state @xmath474 of @xmath4 ; * check that there is a ( thick ) path from @xmath526 $ ] to @xmath474 in @xmath4 ; * check that this finite path violates property @xmath151 .",
    "note that as @xmath151 is a simple safety property , we can assume that the path between @xmath526 $ ] and @xmath474 is simple .",
    "we now state the following lemma , whose proof follows from the definition of @xmath601 and from the definition of ( weak ) reactiveness .",
    "this will imply that , under the mentioned conditions , @xmath601 is almost - surely fair , which will allow to apply theorem  [ theo : specauto ] to ( weak ) reactive stochastic timed automata .",
    "let @xmath0 be a ( weak ) reactive stochastic timed automaton , and @xmath211 be a specification timed automaton .",
    "then @xmath601 is a ( weak ) reactive stochastic timed automaton .",
    "we apply the results from section  [ sec : match ] , and obtain the following principal theorem , which states decidability and complexity results for the almost - sure model - checking .",
    "notice that in all those cases , almost - sure model - checking coincides with large model - checking .",
    "thmmain [ theo : main ]    1 .",
    "the almost - sure model - checking of stochastic timed automata for simple safety properties is pspace - complete .",
    "2 .   the almost - sure model - checking of single - clock stochastic timed automata for bchi or muller properties , or for properties given as specification ( untimed ) automata , is nlogspace - complete .",
    "3 .   the almost - sure model - checking of single - clock stochastic timed automata for properties given as formulas is pspace - complete .",
    "4 .   the almost - sure model - checking of ( weak ) reactive stochastic timed automata for bchi or muller properties or properties given as specification timed automata is pspace - complete .",
    "all upper bounds are then obtained _ via _ lemmas  [ lemma : complex ] and  [ lemma : complex2 ] , since the size of the region automaton ( and therefore the thick graph ) is exponential  @xcite , except for single - clock timed automata , where it is only polynomial - size  @xcite .",
    "note that if @xmath0 is a timed automaton and @xmath211 a specification automaton , then the size of @xmath803 is exponential in the two following cases : @xmath211 is a specification timed automaton , and @xmath211 is a specification untimed automaton of size at most exponential .",
    "the lower bounds are proven in appendix  [ app : lower - bounds ] .",
    "note that to establish the lower - bound in ( i ) , the classical pspace - hardness proof of reachability in timed automata has to be adapted , since it is based on punctual guards that would yield negligible behaviours in the context of stochastic timed automata .",
    "in this article we introduced and studied the model of stochastic timed automata that combines real - time constraints and probabilities .",
    "we considered the almost - sure model - checking problem and designed an abstraction that can be used to prove decidability of the above , provided fairness is almost - sure in the model .",
    "we identified two main classes of automata for which this is the case , the class of single - clock timed automata and that of weak reactive timed automata . in the two cases , the proof of almost - sure fairness is non - trivial and requires intricate arguments .",
    "a remaining open problem is the decidability status of the almost - sure model - checking problem for the general class of stochastic timed automata , already for reachability properties .    as future work , we want to extend our study to quantitative model - checking , that is , compute the probability of a given property in an automaton .",
    "this has partly been solved for single - clock automata in  @xcite , but more importantly , we would like to do it for the class of ( weak ) reactive stochastic timed automata , which allows for more complex timed constraints .",
    "compositionality is often a key for the description of real systems .",
    "defining a composition of stochastic timed automata seems non - trivial in general , but the model of reactive stochastic timed automata seems to be well - suited for compositional design , since time can never be blocked by a component .",
    "nathalie bertrand and patricia bouyer were partly supported by anr project impro ( number anr-10-blan-0317 ) .",
    "patricia bouyer was furthermore supported by the erc starting grant equalis ( number 308087 ) .",
    "thomas brihaye was partly supported by the arc project ( number auwb-2010 - 10/15-umons-3 ) , a grant `` mission scientifique '' from the f.r.s .- fnrs , the frfc project ( number 2.4545.11 ) , and the eu - fp7 project cassting ( number 601148 ) .",
    "quentin menet was supported by a grant of fria .",
    "christel baier was partly supported by the german research council ( dfg ) through the collaborative research centre 912 highly- adaptive energy - efficient computing ( haec ) and the cluster of excellence centre for advancing electronics dresden ( cfaed ) , the eu - fp7 project meals ( 295261 ) and by the eu and the state saxony through the esf young researcher groups imdata ( 100098198 ) and srex ( 100111037 ) .",
    "bvdshv03    rajeev alur , costas courcoubetis , and david  l. dill .",
    "model - checking for probabilistic real - time systems . in _ proc .",
    "18th international colloquium on automata , languages and programming ( icalp91 ) _ , volume 510 of _ lecture notes in computer science _ , pages 115126 .",
    "springer , 1991 .",
    "rajeev alur , costas courcoubetis , and david  l. dill .",
    "verifying automata specifications of probabilistic real - time systems . in _ proc .",
    "rex workshop on real - time : theory in practice _ ,",
    "volume 600 of _ lecture notes in computer science _ , pages 2844 .",
    "springer , 1992 .",
    "rajeev alur and david  l. dill . automata for modeling real - time systems . in _ proc .",
    "17th international colloquium on automata , languages and programming ( icalp90 ) _ , volume 443 of _ lecture notes in computer science _ , pages 322335 .",
    "springer , 1990 .",
    "rajeev alur and david  l. dill . a theory of timed automata .",
    ", 126(2):183235 , 1994 .",
    "luca aceto and franois laroussinie .",
    "is your model - checker on time ? on the complexity of model - checking for timed modal logics .",
    ", 5253:751 , 2002 .",
    "rajeev alur , salvatore la torre , and george  j. pappas .",
    "optimal paths in weighted timed automata . in _ proc .",
    "4th international workshop on hybrid systems : computation and control ( hscc01 ) _ , volume 2034 of _ lecture notes in computer science _ , pages 4962 .",
    "springer , 2001 .",
    "eugene asarin , oded maler , amir pnueli , and joseph sifakis . controller synthesis for timed automata . in _ proc .",
    "ifac symposium on system structure and control _ , pages 469474 .",
    "elsevier science , 1998 .",
    "adnan aziz , kumud sanwal , vigyan singhal , and robert  k. brayton .",
    "model - checking continuous - time markov chains . , 1(1):162170 , 2000 .",
    "christel baier , nathalie bertrand , patricia bouyer , thomas brihaye , and marcus grer .",
    "probabilistic and topological semantics for timed automata . in _ proc .",
    "27th conference on foundations of software technology and theoretical computer science ( fsttcs07 ) _ , volume 4855 of _ lecture notes in computer science _ , pages 179191 .",
    "springer , 2007 .",
    "christel baier , nathalie bertrand , patricia bouyer , thomas brihaye , and marcus grer .",
    "almost - sure model checking of infinite paths in one - clock timed automata . in _ proc .",
    "23rd annual symposium on logic in computer science ( lics08 ) _ , pages 217226 .",
    "ieee computer society press , 2008 .",
    "nathalie bertrand , patricia bouyer , thomas brihaye , and nicolas markey .",
    "quantitative model - checking of one - clock timed automata under probabilistic semantics . in _ proc .",
    "5th international conference on quantitative evaluation of systems ( qest08)_. ieee computer society press , 2008 .",
    "patricia bouyer , thomas brihaye , marcin jurdzinski , and quentin menet .",
    "almost - sure model - checking of reactive timed automata . in _ proc .",
    "9th international conference on quantitative evaluation of systems ( qest12 ) _ , pages 138147 .",
    "ieee computer society press , 2012 .",
    "christel baier , marcus daum , benjamin engel , hermann hrtig , joachim klein , sascha klppelholz , steffen mrcker , hendrik tews , and vlp marcus .",
    "locks : picking key methods for a scalable quantitative analysis . , 81(1):258287 , 2015 .",
    "gerd behrmann , alexandre david , kim  g. larsen , john hkansson , paul pettersson , wang yi , and martijn hendriks .",
    "uppaal 4.0 . in _ proc .",
    "3rd international conference on quantitative evaluation of systems ( qest06 ) _ , pages 125126 .",
    "ieee computer society press , 2006 .",
    "marius bozga , conrado daws , oded maler , alfredo olivero , stavros tripakis , and sergio yovine .",
    "kronos : a model - checking tool for real - time systems . in _ proc .",
    "10th international conference on computer aided verification ( cav98 ) _ , volume 1427 of _ lecture notes in computer science _ , pages 546550 .",
    "springer , 1998 .",
    "patricia bouyer and vojteh forejt .",
    "reachability in stochastic timed games . in _ proc .",
    "36th international colloquium on automata , languages and programming ( icalp09 ) _ , volume 5556 of _ lecture notes in computer science _ , pages 103114 .",
    "springer , 2009 .",
    "gerd behrmann , ansgar fehnker , thomas hune , kim  g. larsen , paul pettersson , judi romijn , and frits vaandrager .",
    "minimum - cost reachability for priced timed automata . in _ proc .",
    "4th international workshop on hybrid systems : computation and control ( hscc01 ) _ , volume 2034 of _ lecture notes in computer science _ , pages 147161 .",
    "springer , 2001 .",
    "patricia bouyer , uli fahrenberg , kim  g. larsen , and nicolas markey . quantitative analysis of real - time systems using priced timed automata .",
    ", 54(9):7887 , 2011 .    christel baier , boudewijn haverkort , holger hermanns , and joost - pieter katoen .",
    "model - checking algorithms for continuous - time markov chains . , 29(7):524541 , 2003 .",
    "patrick billingsley . .",
    "wiley series in probability and mathematical statistics .",
    "john wiley & sons , 3rd edition , 1995 .",
    "christel baier and marta  z. kwiatkowska . on the verification of qualitative properties of probabilistic processes under fairness constraints .",
    ", 66(2):7179 , 1998 .",
    "nathalie bertrand and sven schewe .",
    "playing optimally on timed automata with random delays .",
    "in _ proc .",
    "10th international conference on formal modeling and analysis of timed systems ( formats12 ) _ , volume 7595 of _ lecture notes in computer science _ , pages 4358 .",
    "springer , 2012 .",
    "henrik  c. bohnenkamp , peter van  der stok , holger hermanns , and frits  w. vaandrager .",
    "cost - optimization of the ipv4 zeroconf protocol . in _ proc .",
    "international conference on dependable systems and networks ( dsn03 ) _ , pages 531540 .",
    "ieee computer society press , 2003 .",
    "taolue chen , tingting han , joost - pieter katoen , and alexandru mereacre .",
    "model - checking of continuous - time markov chains against timed automata specifications .",
    ", 7(1:12):134 , 2011 .",
    "franck cassez , thomas  a. henzinger , and jean - franois raskin . a comparison of control problems for timed and hybrid systems . in _ proc .",
    "5th international workshop on hybrid systems : computation and control ( hscc02 ) _ , volume 2289 of _ lecture notes in computer science _",
    ", pages 134148 .",
    "springer , 2002 .",
    "thomas  h. cormen , charles  e. leiserson , ronald  l. rivest , and clifford stein .",
    ". mit press , cambridge , ma , third edition , 2009 .",
    "e.  chang , z.  manna , and a.  pnueli .",
    "characterization of temporal property classes . in _ proc .",
    "19th int .  coll .",
    "automata , languages , and programming ( icalp92 ) , vienna , austria , july 1992 _ , volume 623 of _ lecture notes in computer science _ , pages 474486 .",
    "springer , 1992 .",
    "martin de wulf , laurent doyen , and jean - franois raskin .",
    "almost asap semantics : from timed models to timed implementations . in _ proc .",
    "7th international workshop on hybrid systems : computation and control ( hscc04 ) _ , volume 2993 of _ lecture notes in computer science _",
    ", pages 296310 .",
    "springer , 2004 .",
    "susanna donatelli , serge haddad , and jeremy sproston .",
    "model checking timed and stochastic properties with csl^ta^. , 35(2):224240 , 2009 .",
    "jose desharnais and prakash panangaden .",
    "continuous stochastic logic characterizes bisimulation of continuous - time markov processes .",
    ", 56:99115 , 2003 .",
    "vineet gupta , thomas  a. henzinger , and radha jagadeesan .",
    "robust timed automata . in _ proc .",
    "international workshop on hybrid and real - time systems ( hart97 ) _ , volume 1201 of _ lecture notes in computer science _ , pages 331345 .",
    "springer , 1997 .",
    "erich grdel , wolfgang thomas , and thomas wilke , editors . ,",
    "volume 2500 of _ lecture notes in computer science_. springer , 2002 .",
    "marta kwiatkowska , gethin norman , and david parker .",
    "verification of probabilistic real - time systems . in _ proc .",
    "23rd international conference on computer aided verification ( cav11 ) _ , volume 6806 of _ lecture notes in computer science _ , pages 585591 .",
    "springer , 2011 .",
    "marta  z. kwiatkowska , gethin norman , roberto segala , and jeremy sproston .",
    "verifying quantitative properties of continuous probabilistic timed automata . in _ proc .",
    "11th international conference on concurrency theory ( concur00 ) _ , volume 1877 of _ lecture notes in computer science _ , pages 123137 .",
    "springer , 2000 .",
    "marta  z. kwiatkowska , gethin norman , roberto segala , and jeremy sproston . automatic verification of real - time systems with discrete probability distributions .",
    ", 282(1):101150 , 2002 .",
    "john  g. kemeny , j.  laurie snell , and anthony  w. knapp . .",
    "graduate texts in mathematics .",
    "springer , 1976 .",
    "franois laroussinie , nicolas markey , and philippe schnoebelen .",
    "model checking timed automata with one or two clocks . in _ proc .",
    "15th international conference on concurrency theory ( concur04 ) _ , volume 3170 of _ lecture notes in computer science _ , pages 387401 .",
    "springer , 2004 .",
    "nicolas markey .",
    "robustness in real - time systems . in _ proc .",
    "6th ieee international symposium on industrial systems ( sies11 ) _ , pages 2834 .",
    "ieee computer society press , 2011 .",
    "james  r. munkres . .",
    "prentice hall , 2nd edition , 2000 .",
    "john  c. oxtoby .",
    "the banach - mazur game and banach category theorem . , 39:159163 , 1957 .",
    "contributions to the theory of games , volume 3 .",
    "amir pnueli .",
    "the temporal logic of programs . in _ proc .",
    "18th annual symposium on foundations of computer science ( focs77 ) _ , pages 4657 .",
    "ieee computer society press , 1977 .",
    "amir pnueli . on the extremely fair treatment of probabilistic algorithms . in _ proc .",
    "15th ann .",
    "theory of computing ( stoc83 ) _ , pages 278290 .",
    "acm press , 1983 .",
    "amir pnueli and lenore  d. zuck .",
    "probabilistic verification .",
    ", 103(1):129 , 1993 .",
    "ocan sankur . .",
    "phd thesis , cole normale suprieure de cachan , cachan , france , 2013 .",
    "ocan sankur , patricia bouyer , and nicolas markey . shrinking timed automata . in _ proc .",
    "31st conference on foundations of software technology and theoretical computer science ( fsttcs11 ) _ , volume  13 of _ leibniz international proceedings in informatics _ , pages 90102 .",
    "leibniz - zentrum fr informatik , 2011 .",
    "marille stoelinga .",
    "fun with firewire : a comparative study of formal verification methods applied to the ieee 1394 root contention protocol .",
    ", 14(3):328337 , 2003 .",
    "moshe  y. vardi",
    ". automatic verification of probabilistic concurrent finite - state programs . in _ proc .",
    "26th annual symposium on foundations of computer science ( focs85 ) _ , pages 327338 .",
    "ieee computer society press , 1985 .",
    "daniele varacca and hagen vlzer .",
    "temporal logics and model checking for fairly correct systems . in _ proc .",
    "21st annual symposium on logic in computer science ( lics06 ) _ , pages 389398 .",
    "ieee computer society press , 2006 .",
    "moshe  y. vardi and pierre wolper .",
    "reasoning about infinite computations .",
    ", 115(1):137 , 1994 .",
    "lijun zhang , david  n. jansen , flemming nielson , and holger hermanns .",
    "automata - based csl model checking . in _ proc .",
    "38th international colloquium on automata , languages and programming ( icalp11 ) _ , volume 6756 of _ lecture notes in computer science _ , pages 271282 .",
    "springer , 2011 .",
    "@thm [ section ] [ thm]corollary [ thm]lemma [ thm]proposition    in this technical appendix , statements in boxes refer to statements given in the core of the paper , and whose proofs were postponed to the appendix .",
    "all other statements are local to the appendix .",
    "we first recall a basic property in measure theory  @xcite .    [",
    "prop : ksk76 ] let @xmath25 be a non - negative additive set function defined on some set space @xmath804 such that for every @xmath805 , @xmath806 .",
    "the three following properties are equivalent :    1 .",
    "@xmath25 is @xmath232-additive , 2 .   for every sequence @xmath807 of elements of @xmath804 such that @xmath808 and @xmath809 , @xmath810 , 3 .",
    "for every sequence @xmath811 of elements of @xmath804 such that @xmath812 and @xmath813 , @xmath814 .",
    "for every @xmath277 , we write @xmath815 for the ring is such that @xmath816 , @xmath817 is closed by finite union and by complement . ]",
    "generated by the set of ( basic ) cylinders from @xmath76 of length @xmath78 , _",
    "i.e. _ , all @xmath818 . the elements of @xmath815 are thus finite unions of basic cylinders of length @xmath78 .",
    "we then define @xmath819    [ proba fn ] for every @xmath78 , @xmath262 is a probability measure on @xmath820 .",
    "first , by induction on @xmath78 , it is not difficult to prove that for every @xmath277 , @xmath821    we fix @xmath277 .",
    "@xmath252 is obviously additive , non - negative and finite over @xmath815 .",
    "take a sequence @xmath822 of elements of @xmath815 such that @xmath823 and @xmath824 .",
    "there are finitely many distinct sequences of edges of length @xmath78 .",
    "hence , intersecting each of the @xmath825 s with each of the symbolic paths @xmath83 of length @xmath78 , we can assume w.l.o.g . that each @xmath825 is a single constrained finite symbolic path .",
    "let @xmath826 be the sequence of edges underlying all constrained symbolic paths @xmath825 , and write @xmath827 for the tightest constraint defining @xmath825 ( _ i.e. _ , @xmath828 ) .",
    "we have that @xmath829 , and @xmath830 converges to @xmath17 , which corresponds to the constraint associated with @xmath238 .",
    "we can write , if @xmath831 is the characteristic function of set @xmath832 , that : @xmath833 @xmath834 @xmath835 @xmath836 this shows that @xmath262 is a measure on @xmath815 , for all @xmath837 .",
    "it is moreover a probability measure since @xmath838 .",
    "@xmath252 is a probability measure on @xmath839 .",
    "obviously @xmath262 is non - negative on @xmath840 , additive ( because @xmath841 for every @xmath842 ) and finite over @xmath840 .",
    "it remains to prove that it is @xmath232-additive .",
    "for this , we use proposition  [ prop : ksk76 ] , and consider a sequence @xmath811 of sets in @xmath840 such that @xmath843 and @xmath844 .",
    "we assume that for every @xmath78 , @xmath845 .",
    "we want to prove that @xmath846 . applying a reasoning similar to that of  (",
    "* lemmas  2.1 , 2.2 , 2.3 ) , it is sufficient , thanks to lemma  [ proba fn ] , to do the proof when @xmath847 is some @xmath848 where @xmath849 is a finite ( constrained ) symbolic path of length @xmath78 .",
    "we write @xmath850 for the tightest constraint over variables @xmath851 corresponding to @xmath849 .",
    "we define @xmath852 the constraint from @xmath853 onto the @xmath170 first components ( thus in @xmath854 ) .",
    "note that this projection is continuous ( for the product topologies ) . in @xmath849 ,",
    "if @xmath855 , the @xmath170 first variables are constrained by @xmath856 .",
    "moreover , for every @xmath857 , we have that @xmath858    fix some @xmath170 , the sequence @xmath859 is nested , hence converges to @xmath860 , and @xmath861 . by continuity of the projection over the @xmath170 first components",
    ", we have that @xmath862 .",
    "if none of the @xmath860 is empty , we can thus construct an element in @xmath863 as follows : we take some @xmath864 satisfying the constraint @xmath865 ; we have that @xmath866 ( and @xmath867 is a constraint over @xmath864 and @xmath868 ) , hence there exists @xmath868 such that @xmath869 satisfies @xmath867 ( while @xmath864 still satisfies @xmath865 ) ; we do the same step - by - step for all @xmath82 and construct a sequence @xmath870 which satisfies all constraints @xmath860 .",
    "this sequence corresponds to a run in @xmath871 .",
    "as we assumed at the beginning of the paragraph that @xmath872 , it thus means that there exists some @xmath873 such that @xmath874 .",
    "we will use the fact that @xmath875 is empty to prove that @xmath876 .",
    "we write , still with the notation that @xmath831 is the characteristic function of set @xmath832 : @xmath877 @xmath878 applying the dominated convergence theorem , we get that : @xmath879 this concludes the proof that @xmath262 is @xmath232-additive on @xmath839 , and thus the proof that @xmath262 is a probability measure on @xmath840 .",
    "we conclude the proof using the following classical measure extension theorem :    [ theo : caratheodory ] let @xmath297 be a set , and @xmath25 a @xmath232-finite measure defined on a ring @xmath880 .",
    "then , @xmath25 can be extended in a unique manner to the @xmath232-algebra generated by @xmath817 .",
    "we apply theorem  [ theo : caratheodory ] to the set @xmath881 , @xmath882 , and @xmath883 which is a @xmath232-finite measure on @xmath839 .",
    "hence , there is a unique extension of @xmath262 on @xmath265 , the @xmath232-algebra generated by the cylinders , which is a probability measure .",
    "width 8 cm height 0.3 mm    [ annex : region ]    it is sufficient to prove that the measures coincide on finite constrained paths , since it implies that they agree on cylinders and by uniqueness of the extension on any measurable set of infinite runs .    in this proof",
    "we will denote transitions of @xmath0 by @xmath400 and transition in @xmath146 by @xmath884 .",
    "we prove that @xmath252 and @xmath721 coincide on finite paths by induction on the length @xmath78 of constrained symbolic paths . when @xmath885 , this is obvious as , for every @xmath886 , there is a single state @xmath887 in @xmath146 such that @xmath888 , and in that case , @xmath889 .",
    "we assume the induction hypothesis holds for all constrained paths of length strictly smaller than @xmath78 .",
    "we will use the following notations ( this will be technical , but rather simple ) : given @xmath76 a state , we recall that @xmath890 is the state reached from @xmath76 after a delay @xmath258 , @xmath526 $ ] is the region to which @xmath76 belongs . if @xmath474 is a state of the region automaton , we write @xmath891 for the number of edges enabled without delay in @xmath474 in @xmath146 ( or equivalently in @xmath0 ) . if transition @xmath257 can be taken from @xmath474 without delay , @xmath892 denotes the single image region reached after firing @xmath257 from @xmath474 , and we write @xmath893 if @xmath894 is the unique transition with guard checking that we are in @xmath474 and corresponding to @xmath257 in @xmath146 .",
    "let @xmath895 be a constrained symbolic path in @xmath0 .",
    "constraint @xmath17 is on @xmath78 variables @xmath896 .",
    "we will denote @xmath897 the constraint obtained from @xmath17 by replacing @xmath864 by @xmath258 .",
    "@xmath898{\\scriptscriptstyle   q \\models f_1 } \\\\[-.1 cm ] { \\scriptscriptstyle [ s ] \\xrightarrow{f_1 } e_1(q ) } \\end{array } } p^{{\\ensuremath{\\mathsf{r}({{\\mathcal{a}}})}}}_{\\iota(s)+t}(f_1)\\hspace*{-1cm}\\sum_{\\begin{array}{c } { \\scriptscriptstyle ( f_2,\\ldots , f_n ) \\in \\iota(e_1(q),e_2,\\ldots , e_n ) } \\end{array } } \\hspace*{-1 cm }   { \\ensuremath{\\mathbb{p}}\\xspace}_{{\\ensuremath{\\mathsf{r}({{\\mathcal{a}}})}}}({\\pi_{\\mathcal{c}_t}(\\iota(s)_t , f_2,\\ldots , f_n ) } ) \\ , { \\mathrm{d}}\\mu^{{\\ensuremath{\\mathsf{r}({{\\mathcal{a}}})}}}_{\\iota(s)}(t )   \\llap{\\lower 33 pt\\hbox{by hypothesis on the measures and weights } } \\cr & = \\sum_{\\begin{array}{c } { \\scriptscriptstyle q \\models f_1}\\cr    { \\scriptscriptstyle [ s ] \\xrightarrow{f_1 } e_1(q ) } \\\\[-.2 cm ]    { \\scriptscriptstyle ( f_2,\\ldots , f_n ) \\in      \\iota(e_1(q),e_2,\\ldots , e_n ) } \\end{array } } \\hspace*{-1 cm } \\int_{t     \\in i(\\iota(s),f_1 ) } p^{{\\ensuremath{\\mathsf{r}({{\\mathcal{a}}})}}}_{\\iota(s)+t}(f_1 ) \\",
    ",   { \\ensuremath{\\mathbb{p}}\\xspace}_{{\\ensuremath{\\mathsf{r}({{\\mathcal{a}}})}}}({\\pi_{\\mathcal{c}_t}(\\iota(s)_t , f_2,\\ldots , f_n ) } ) \\,{\\mathrm{d}}\\mu^{{\\ensuremath{\\mathsf{r}({{\\mathcal{a}}})}}}_{\\iota(s)}(t ) \\cr & = \\sum_{\\begin{array}{c } { \\scriptscriptstyle q \\models f_1 } \\\\[-.1 cm ]       { \\scriptscriptstyle [ s ] \\xrightarrow{f_1 } e_1(q ) } \\\\[-.2 cm ]       { \\scriptscriptstyle ( f_2,\\ldots , f_n ) \\in         \\iota(e_1(q),e_2,\\ldots , e_n ) }   \\end{array } } \\hspace*{-.8cm}{\\ensuremath{\\mathbb{p}}\\xspace}_{{\\ensuremath{\\mathsf{r}({{\\mathcal{a}}})}}}({\\pi_{\\mathcal{c}}(\\iota(s),f_1,\\ldots , f_n ) } )   \\cr & = { \\ensuremath{\\mathbb{p}}\\xspace}_{{\\ensuremath{\\mathsf{r}({{\\mathcal{a}}})}}}(\\iota(\\pi ) )    } \\ ] ] where @xmath899 iff @xmath900 is a finite sequence of transitions corresponding to @xmath901 and which starts in @xmath902 ( this is a state of @xmath146 ) .",
    "width 8 cm height 0.3 mm    [ app : mesurabilite ]    it is sufficient to do the proof in the case of specifications given as deterministic timed automata . indeed , it covers also the case of @xmath5-regular and -properties , since they can be turned into a deterministic untimed muller automaton .",
    "let @xmath251 be a stochastic timed automaton , and @xmath211 a specification automaton ( that is , a deterministic complete timed automaton ) .",
    "we prove that the set of runs in @xmath0 that are accepted by @xmath211 is measurable ( for the probability measure defined by @xmath251 ) .",
    "to do so , we consider the product timed automaton @xmath601 ( see definition on page  ) .",
    "let @xmath903 be its ( untimed ) region automaton , and @xmath904 the accepting condition naturally derived from the one of @xmath211 .",
    "the set of paths in @xmath903 satisfying @xmath904 is a boolean combination of cylinders @xmath905 . indeed , since @xmath904 is an @xmath5-regular condition and seeing @xmath903 as a finite markov chain ( with arbitrary probabilities ) , this is a consequence of the proof of measurability of @xmath5-regular properties  @xcite . for a fixed finite path @xmath906 in @xmath903",
    ", we write @xmath907 roughly speaking , @xmath908 is the set of all runs in @xmath0 whose natural projection in @xmath903 belongs to @xmath909 .",
    "one can be convinced that @xmath908 consists of a finite union of cylinders generated by constrained symbolic paths in @xmath0 .",
    "hence the set of runs in @xmath0 satisfying the specification @xmath211 can be written as a boolean combination of cylinders generated by constrained symbolic paths , and is therefore measurable .",
    "for definition  [ def : topo ] to properly define a topological space , we prove that the intersection of two basic open sets is still a basic open set .",
    "this is the object of the following result , whose proof requires several technical intermediary lemmas .",
    "[ lemma : intersection ] let @xmath910 and @xmath911 be two basic open sets of same length .",
    "then @xmath912 is an open set .    for the next lemmas ,",
    "let us fix @xmath913 and @xmath914 be two constrained symbolic paths of same length , where @xmath17 and @xmath915 are borel - measurable . for all @xmath916 , write @xmath827 ( resp .",
    "@xmath917 ) for the projection of @xmath17 ( resp .",
    "@xmath915 ) on the @xmath170 first coordinates .",
    "write also @xmath918 , @xmath919 , and @xmath920 .",
    "[ lemma : croissance ] assume @xmath921 and @xmath922 .",
    "then for all @xmath857 , @xmath923    assume there exists an index @xmath857 such that @xmath924 .",
    "as @xmath925 there must be an index @xmath926 , such that @xmath394 gains some dimension in the @xmath926-th direction , whereas @xmath927 does not .",
    "but this is not possible since @xmath921 and therefore @xmath928 .    from this basic result",
    ", we get the following corollaries .",
    "[ cor : full_dimension ] if @xmath394 is open in @xmath384 , then for all @xmath929 , @xmath930 .",
    "as @xmath931 is open in @xmath384 , there exists an open set @xmath345 of @xmath448 such that @xmath932 .",
    "this implies that @xmath933 .",
    "is a convex set and @xmath345 an open set in @xmath448 such that @xmath934 , then @xmath935 . ]",
    "applying lemma  [ lemma : croissance ] to @xmath85 and @xmath264 yields the expected result .",
    "[ coro2-essai3 ] assume @xmath936 is a non - empty open set of @xmath447 and @xmath937 and @xmath394 is open in @xmath384 , then @xmath85 is thick ( that is , @xmath85 is a non - empty basic open set of @xmath938 ) .    by corollary  [ cor : full_dimension ] applied to both @xmath85 and @xmath264 , and @xmath936 and @xmath264 , we get for every @xmath489 : @xmath939 as @xmath936 is a basic open set it also holds that for every @xmath940 : @xmath941 by containment of @xmath942 into @xmath943 , we get that @xmath944 this shows that @xmath85 is thick : @xmath945    we can now come to the proof of lemma  [ lemma : intersection ] .",
    "let us denote in this proof @xmath946 , and @xmath264 the unconstrained symbolic path @xmath947 .",
    "write @xmath948 for @xmath949 .",
    "if @xmath948 is empty , we are done since the empty set is an open set .",
    "we therefore assume that @xmath948 is non - empty .",
    "we first show that @xmath950 is open in @xmath384 , which is the second condition for @xmath951 to be an open set .",
    "we have that @xmath952 . by assumption",
    "both @xmath394 and @xmath953 are open in @xmath384 , hence their intersection too .    the fact that @xmath948 is thick is a consequence of corollary  [ coro2-essai3 ] .",
    "we conclude that @xmath954 is an open set for our topology .",
    "width 8 cm height 0.3 mm    [ app : baire ]    to prove that @xmath434 is a baire space , we prove that every non - empty basic open set in @xmath955 is not meagre .",
    "let @xmath956 be a basic open set .",
    "using banach - mazur games ( see page   or  @xcite ) , we prove that @xmath957 is not meagre by proving that player  2 does not have a winning strategy for the banach - mazur game played with basic open sets and where the goal set is @xmath958 .",
    "player  1 starts by choosing a set @xmath959 . then player  2 picks some basic open set @xmath960 such that @xmath961 .",
    "let us now explain how player  1 can build her move in order to avoid to reach the empty set .",
    "since @xmath351 is an open set , we have that ( i ) @xmath962 is thick and ( ii ) @xmath963 is open in @xmath964 .",
    "the topology on @xmath965 is induced from a distance , hence there exists a closed , bounded and convex set denoted @xmath966 such that @xmath967 and @xmath968 .",
    "let @xmath969 be the constraint associated with @xmath966 ; clearly cylinder @xmath970 is included in @xmath351 .",
    "let @xmath345 be an open set included in @xmath966 and @xmath971 be the constraint associated with @xmath345 .",
    "it is borel - measurable since it is open .",
    "applying corollary  [ coro2-essai3 ] , we know that @xmath972 is thick . hence clearly enough , @xmath973 is an open set .",
    "player  1 s move will be to take @xmath974 . by iterating this process",
    ", we define a strategy for player  1 which satisfies : @xmath975 where for each @xmath170 , @xmath976 is a closed and bounded subset of @xmath977 ( where the @xmath978 s form a non - decreasing sequence of @xmath979 ) .",
    "we then have that : @xmath980    we would like to guarantee that the above intersection is non - empty .",
    "this is not completely straightforward since the polyhedra @xmath976 belong to different powers of @xmath21 .",
    "we distinguish between two cases :    * either the sequence @xmath981 diverges to @xmath982 . in that case",
    ", we will embed @xmath983 into a compact set of @xmath984 .",
    "we first define @xmath985 where @xmath986 for @xmath987 is the natural projection from @xmath988 to the coordinates specified by @xmath989 .",
    "note that @xmath990 is a compact set , since it is the projection of a compact set .",
    "each @xmath991 can naturally be embedded in @xmath992 by considering the sets @xmath993 defined by @xmath994 the decomposition is illustrated on figure  [ fig : decomposition ] .",
    "the @xmath993 s form a nested chain of closed sets of @xmath992 . by tychonoff",
    "s theorem , @xmath992 is compact .",
    "hence we can ensure that @xmath995 is non - empty ( heine - borel theorem ) .",
    "take a sequence @xmath996 in @xmath997 .",
    "each subsequence @xmath998 straightforwardly belongs to @xmath991 .",
    "hence , the run @xmath999 is in @xmath1000 , which completes the proof in this case .",
    "+ ( 0,0 )  ( 7,0 ) ; ( 0,0 )  ( 0,4 ) ; + ( 1,-.1 )  ( 1,.1 ) ; ( 5,-.1 )  ( 5,.1 ) ; + ( -.1,.5 )  ( .1,.5 ) ; ( -.1,3 )  ( .1,3 ) ; + ( 1,.5 )  ( 1,3 )  ( 5,3 ) ",
    "( 1,.5 ) ; + ( 2,.5 )  ( 4.5,2 ) ",
    "( 2,.5 ) ; + ( 2,.5 )  ( 0,.5 ) ; ( 3,3 ) ",
    "( 0,3 ) ; + ( 7.2,.3 ) node [ ] @xmath1001 ; ( 6.5,3.7 ) node [ ] @xmath1002 ; ( -.3,4.2 ) node [ ] @xmath1003 ; + ( 3,-.5 ) node [ ] @xmath966 ; ( 3.25,1.8 ) node [ ] @xmath1004 ; ( -.4,2 ) node [ ] @xmath1005 ; * either the sequence @xmath981 is upper bounded .",
    "in that case , we embed @xmath983 into a compact set of @xmath1006 where @xmath1007 .",
    "we let the details to the reader , as they are very similar to ( and easier than ) the previous case .",
    "width 8 cm height 0.3 mm    [ app : basicopensets ]    first notice that if @xmath17 is an open constraint of @xmath448 , then @xmath17 is borel - measurable , and @xmath1008 is open in @xmath1009 . furthermore , applying corollary  [ coro2-essai3 ] , @xmath533 is thick if @xmath1010 is thick as well .",
    "now , assume that @xmath1011 is a basic open set .",
    "this means in particular that @xmath384 is open in @xmath1012 : there exists an open set @xmath1013 of @xmath448 such that @xmath1014 . as it is open , @xmath1013 is borel - measurable , and we get that @xmath1015 , and therefore @xmath1016 , which is the expected result .    width 8 cm height 0.3 mm    [ app : homeo ]    _ we first prove that @xmath290 is continuous .",
    "_ let @xmath1017 be a symbolic path in @xmath146 such that @xmath431 is a basic open set of @xmath1018 .",
    "we need to prove that @xmath1019 is an open set of @xmath428 .",
    "one can easily be convinced that @xmath1020 . thus proving the continuity of @xmath290 consists in proving that @xmath1021 is a thick finite symbolic path whose polyhedron is open in its ambient space .",
    "first notice that there are unique edges @xmath534 such that @xmath1022 , we can then set @xmath1023 .",
    "then obviously , @xmath1024 .",
    "let @xmath1025 be the tightest constraint which defines @xmath1026 .",
    "we have for every @xmath916 : @xmath1027 where @xmath827 and @xmath1028 are the projection of @xmath17 and @xmath1025 on the @xmath170 first coordinates ( in particular , @xmath1028 is the tightest constraint defining @xmath1029 since this is in @xmath146 ) . as @xmath85 is thick , the two dimensions on the left are equal , and therefore so are the two dimensions on the right .",
    "we deduce that @xmath388 is thick .    now ,",
    "as @xmath1030 is thick ( since @xmath85 is thick ) , we can prove by induction on its length that there is some open constraint @xmath1013 such that @xmath1031 indeed :    * if @xmath1032 is an open constraint such that @xmath1033 , we have that @xmath1034 ( by thickness of @xmath1030 ) ; * furthermore this value is either equal to @xmath1035 or to @xmath1036 ; * in the first case , we set @xmath1037 , whereas in the second case @xmath1038 is obtained by adding to @xmath1032 the open constraint derived from the last transition @xmath1039 ( which is then open ) ; * we can easily check that this concludes the induction .",
    "as @xmath85 is thick , @xmath394 is open in @xmath1026 : there exists an open set @xmath345 of @xmath448 such that @xmath1040 .",
    "we infer that @xmath1041 , and @xmath1042 is open in @xmath448 : @xmath387 is open in @xmath1043 .",
    "this concludes the proof : @xmath1044 is a basic open set in @xmath447 .",
    "_ we now prove that for every non - empty open set @xmath1045 , @xmath1046 .",
    "_ again it is sufficient to prove that for each basic open set @xmath1047 of @xmath1048 , @xmath1049 contains a basic open set @xmath1044 of @xmath1050 , that is , there is a thick symbolic path @xmath388 whose polyhedron is open in its ambient space and such that @xmath1051 .",
    "let @xmath1052 be a constrained symbolic path such that @xmath431 is a basic open set of @xmath1053 .",
    "we have that @xmath1054 where the ( finite ) union is taken over all sequences of edges @xmath1055 corresponding to @xmath534",
    ". there exist thus edges @xmath1055 such that @xmath1056 and we write @xmath1057 .",
    "we will prove that @xmath1058 is an open set .",
    "note that as @xmath394 is open in @xmath1043 , we can assume w.l.o.g .",
    "that @xmath17 defines an open set of @xmath374 .",
    "hence @xmath1058 is open in @xmath1059 .",
    "assume that it is thin .",
    "then , there exists some @xmath170 such that @xmath1060 where @xmath917 corresponds to the projection on the @xmath170 first coordinates of the tightest constraint defining @xmath1058 .",
    "moreover , as @xmath1061 and @xmath1062 , applying lemma  [ lemma : croissance ] , we get that for all @xmath170 s , @xmath1063 .",
    "furthermore , @xmath1064 ( this is a property of the region automaton ) . finally , we get that @xmath1065 which contradicts the hypothesis that @xmath264 is thick .",
    "we deduce that @xmath1044 is a basic open set of @xmath1066 , hence the result .",
    "width 8 cm height 0.3 mm    [ app : toporegions ]    we prove both implications using characterisation of meagre sets by banach - mazur games and lemma  [ lemma : homeo ] . to play this game , we choose as basis all open sets .",
    "assume player  @xmath350 has a winning strategy in @xmath0 to avoid @xmath1067 .",
    "we will show that player  @xmath350 also has a winning strategy in @xmath146 to avoid @xmath1068 . before starting the simulation",
    ", we recall that @xmath1069 .",
    "the first move of player  @xmath2 in @xmath146 is some open set @xmath349 ( in @xmath1070 ) .",
    "that move can be transported in @xmath0 : thanks to lemma  [ lemma : homeo ] , @xmath1071 is a legal move of the game in @xmath0 .",
    "then , player  @xmath350 plays according to her strategy in @xmath0 with move @xmath1072 .",
    "this move can not directly be transported to @xmath146 ( since @xmath1073 may not be an open set ) , but thanks to lemma  [ lemma : homeo ] , there is a non - empty open set @xmath351 such that @xmath1074 .",
    "we continue the simulation that way .",
    "finally we get that @xmath1075 . as player",
    "@xmath350 plays with a winning strategy in @xmath0 , we get that @xmath1076 , which implies that @xmath1077 .    on the contrary , assume that player  @xmath350 has a winning strategy in @xmath146 to avoid @xmath1068 .",
    "we will show that player  @xmath350 also has a winning strategy in @xmath0 to avoid @xmath1067 .",
    "assume that player  @xmath2 plays @xmath1078 , then applying lemma  [ lemma : homeo ] , player  @xmath350 can play as if it was @xmath1079 in @xmath146 for some @xmath1055 .",
    "the game then plays as in @xmath146 , and all moves are legal thanks to lemma  [ lemma : homeo ] .",
    "we conclude that this strategy avoids @xmath1067 as well , which concludes the proof .",
    "let @xmath474 be the target region of @xmath484 .",
    "there are two possible cases :    * @xmath1080 : for every @xmath1081 , there is a unique delay @xmath1082 such that @xmath1083 .",
    "also , for all delays @xmath1084 such that @xmath1085 there is a unique @xmath1086 such that @xmath1087 .",
    "we can therefore define the function @xmath43 with @xmath1088 .",
    "we then write : @xmath1089 the second equality holds because @xmath482 is a symbolic path in the region automaton @xmath146 .",
    "we deduce that @xmath1090 , which is the expected value .",
    "* @xmath1091 for every @xmath1081 : there is non - punctual open interval @xmath1092 such that @xmath1093 iff @xmath1094 .",
    "we can then rewrite @xmath1095 as follows : @xmath1096 where @xmath1097 defines an open interval .",
    "we then get @xmath1098    [ app : thicknesslocal ]    the proof is done by induction on the length @xmath78 of @xmath264 .",
    "the case @xmath885 is obvious since @xmath1099 is thick and @xmath1099 surely contains no thin edge .",
    "assume @xmath1100 and the result holds for any @xmath1101 , and let @xmath488 be a symbolic path of length @xmath78 .",
    "for every @xmath1102 , write @xmath1103 for @xmath1104 .",
    "* let us first assume that @xmath264 is thin in @xmath146 . in case",
    "there exists @xmath1105 such that @xmath1103 is thin , then we are done by applying the induction hypothesis to @xmath1103 .",
    "we therefore assume that @xmath1103 is thick for every @xmath1105 .",
    "let @xmath1106 . applying lemma  [ lem : thin - local ] , @xmath1107 , and if @xmath1108 , then @xmath264 would be thick ( @xmath1109 is the maximal dimension of any possible @xmath1110 ) .",
    "we thus get that @xmath1111 , and there exists @xmath51 such that @xmath1112 ( this witnesses the fact that @xmath264 is thin ) . by lemma  [ lem : thin - local ]",
    ", we therefore infer that @xmath1113 whereas @xmath1114 where @xmath474 is the target region of @xmath484 : edge @xmath1115 is thin , which concludes the left - to - right implication .",
    "* assume now that @xmath264 is thick .",
    "by definition of thickness , for every @xmath1116 , @xmath1103 is thick . by induction hypothesis ,",
    "all edges @xmath1117 are then thick .",
    "assume towards a contradiction that @xmath1115 is thin .",
    "let @xmath474 be the source - region of @xmath1115 , there exists an edge @xmath51 such that for every @xmath1081 , @xmath1118 .",
    "now we know that for every @xmath243 with @xmath1087 for some @xmath1084 , @xmath1081 ( this is a property of region automata ) . applying lemma  [ lem : thin - local ]",
    ", we get that @xmath1119 whereas @xmath1120 we deduce that @xmath264 is thin , contradicting the assumption .",
    "this concludes the proof of the right - to - left implication .",
    "+    we assume that the probability distributions in @xmath146 are those used in lemma  [ lemma : proba ] , and we write @xmath326 for the distributions over delays .",
    "we first prove that @xmath502 implies that @xmath264 is thick . towards a contradiction ,",
    "assume that @xmath264 is thin .",
    "following proposition  [ prop : thickness - local ] , there exists @xmath489 such that @xmath400 is thin .",
    "let @xmath474 be the target set of @xmath1121 : @xmath1122 . by hypothesis on the measures @xmath326 ( condition @xmath233 , _ cf _ page  ) , for every @xmath1081 , @xmath1123 .",
    "hence , for every @xmath1081 , @xmath1124 .",
    "this implies that @xmath1125 .",
    "assume now that @xmath264 is thick .",
    "for every @xmath489 , we write @xmath513 for the target region of @xmath1126 . following proposition  [ prop : thickness - local ] , for every @xmath1127",
    ", @xmath400 is thick , which means that @xmath1128 . as in the first implication , by assumption @xmath233 on the measure @xmath326 , for every @xmath1129 , @xmath1130 .",
    "we then use the definition of the probability inductively on suffixes of @xmath264 starting in some @xmath1131 to obtain a sequence of integral computation over non negligible set of a positive function , hence @xmath502 .",
    "width 8 cm height 0.3 mm    [ app : safety2 ]    equivalence between @xmath694 and @xmath1132 is by construction of @xmath4 .",
    "thanks to lemmas  [ lemma : proba ] and [ prop - topo - a - ra ] , to prove the equivalence between @xmath1133 and @xmath1134 , it is equivalent ( and hence sufficient ) to prove that @xmath1135 iff @xmath1136 . since @xmath151 is a property over , for every infinite symbolic path @xmath1137 , either all realisations @xmath1138 satisfy @xmath151 , or none of them satisfies @xmath151 .",
    "now , using the fact that @xmath151 is a safety property , we can write @xmath531 as a denumerable union of cylinders : @xmath1139 where @xmath1140 is a finite ( unconstrained ) symbolic path from @xmath504 , and @xmath989 is a denumerable set .",
    "thus , @xmath1141 is equivalent to @xmath1142 .",
    "since @xmath989 is denumerable , we obtain @xmath1141 iff for all @xmath1143 , @xmath1144 . by proposition  [ prop : prob - thick ]",
    ", we have that @xmath1145 iff for all @xmath1146 , @xmath1140 is thin ( this by - the - way proves equivalence between @xmath1133 and @xmath694 ) . thus proving the theorem amounts to proving that @xmath531 is meagre iff for all @xmath1143",
    ", @xmath1140 is thin .",
    "let us assume first that for all @xmath1143 , @xmath1140 is thin . to prove that , @xmath531 is meagre we use a banach - mazur game and theorem  [ bm : thm ] , playing with the set @xmath1147 of basic open sets of @xmath1070 .",
    "the objective of the game is set to be @xmath531 . by hypothesis , @xmath1148 and",
    "all @xmath1140 are thin .",
    "as every basic open set is of the form @xmath1149 with @xmath264 thick , it holds that for every @xmath1150 such that @xmath1151 , we have @xmath1152 . thus , if the first move of player  1 is @xmath1153 , player  2 picks some cylinder of a finite thick path .",
    "if the first move of player  1 is a cylinder @xmath1149 , then player  2 just chooses the same set .",
    "then , player  2 wins the game by mimicking at each round the choices of player  1 , _",
    "i.e. _ , whatever set @xmath1154 player  1 chooses in the @xmath926-th round , player  2 answers with the same choice @xmath1155 .",
    "for such a play we clearly have @xmath1156 .",
    "thus player  2 has a winning strategy and theorem  [ bm : thm ] implies that @xmath531 is meagre .",
    "let us now prove the other implication .",
    "for a contradiction we assume that @xmath1140 is thick for some @xmath1143 .",
    "in particular @xmath531 would contain the open set @xmath1157 , which is not meagre because our topological space is baire ( see proposition  [ prop : baire ] ) . since the notion of being meagre",
    "is closed under subset , the set @xmath531 would not be meagre , which is a contradiction .",
    "@xmath1158 , where @xmath1159 .    in this proof ,",
    "we write @xmath709 for @xmath1160 , and we first show that given @xmath1161 , @xmath1162 where @xmath1163 . obviously , we have that @xmath1164 where we write @xmath1165 for @xmath1166 .",
    "we now would like to express @xmath1167 as a multiple integral . in order to take the leftmost loop ,",
    "we need to choose a first delay ensuring that the valuation of the clock @xmath1168 satisfies the guard @xmath1169 .",
    "the location @xmath554 is then reached with the clock valuation @xmath1170 . from there",
    "a second positive time delay has to be chosen in order to reach location @xmath133 .",
    "we thus have that : @xmath1171 where @xmath1172 . by iterating this process",
    ", we obtain that : @xmath1173 we write @xmath1174 and we can prove by a descending induction on @xmath170 ( see lemma  [ lm : rec - annexe ] below ) that @xmath1175 thus , we deduce that @xmath1176 it remains to show that @xmath1177 , _",
    "i.e. _ that the above result extends to the case @xmath1178 . roughly speaking , after one loop",
    ", we will have @xmath1179 , hence we can use the above inequality from the second loop on by writing : @xmath1180_{t_1=0}^1 \\\\      & \\geq & \\log(2 ) - \\frac{1}{2}>0 .",
    "\\end{aligned}\\ ] ] this concludes the proof .",
    "[ lm : rec - annexe ] if @xmath1181 with @xmath1182 , then : @xmath1175    the base case is when @xmath1183 . in that case , @xmath1184 which proves the desired property .",
    "we assume we have proved the property for @xmath1185 , and want to prove it for @xmath170 .",
    "@xmath1186_{t_i = t_{i-1}}^1 \\\\      & \\geq & \\frac{1}{1-t_{i-1 } } \\left ( -1+t_{i-1}+2\\log(2-t_{i-1})\\right )    \\end{aligned}\\ ] ] now , when @xmath1187 , we know that @xmath1188 ( see lemma  [ lemma : log ] ) . applying this inequality to @xmath1189 , we get the following inequality : @xmath1190 this concludes the inductive case .",
    "[ lemma : log ] let @xmath1191",
    ". then @xmath1188 .",
    "let @xmath1192 and @xmath1193 .",
    "since @xmath1194 and @xmath1195 , we remark that for any @xmath1196 , we have @xmath1197 . indeed , for any @xmath1198 , @xmath1199 if and only if @xmath1200 .",
    "since @xmath1201 , the result follows .      in this part , we aim at proving theorem  [ theo : specauto ] below .",
    "the proof of this theorem will require several lemmas that we present below . before that , we define @xmath1202 the application ( bijection ) which assigns to every run @xmath70 in @xmath0 its unique image @xmath1203 in @xmath601 .",
    "[ lemma : ltl2muller - proba ] let @xmath76 be a state of @xmath0 , and @xmath211 be a specification bchi or muller timed automaton . assume measures and weights in @xmath1204 are properly set .",
    "then : @xmath1205    this lemma is a consequence of the two following properties :    1 .   for every measurable set @xmath127 of @xmath429 , @xmath1206 2 .   for every run @xmath91 in @xmath0 , @xmath1207 iff @xmath1208 .",
    "the second item is a direct consequence of the definition of @xmath609 .",
    "the proof for the first item is similar to that for region automata , that is , to the proof of lemma  [ lemma : proba ] .",
    "we therefore skip it .",
    "a similar result holds for the topological semantics :    [ lemma : ltl2muller - topo ] let @xmath0 be a timed automaton , let @xmath76 be a state of @xmath0 , and let @xmath211 be a specification bchi or muller timed automaton .",
    "then , for every set @xmath1209 : @xmath1210    the proof of this lemma is similar to that of proposition  [ prop - topo - a - ra ] , even though projection @xmath1211 might not be continuous . the next lemma ( lemma  [ lemma : iotab ] ) is sufficient to make the simulation between the two banach - mazur games ( as in the proof of proposition  [ prop - topo - a - ra ] ) , and to prove the expected result .    [",
    "lemma : iotab ]    1 .",
    "if @xmath345 is a non - empty open set of @xmath1212 , then @xmath1213 has a non - empty interior .",
    "if @xmath345 is a non - empty open set of @xmath429 , then @xmath1214 has a non - empty interior .",
    "we show the first property .",
    "let @xmath264 be a basic open set of @xmath1215 . following the notations of section  [ sec : richer ] and applying lemma  [ lemma : basicopensets ]",
    ", we can write the basic open set @xmath264 as @xmath1216 , where @xmath17 is an open constraint of @xmath448 . note that as @xmath211 is complete , none of the transitions @xmath1217 have equality constraints ( otherwise @xmath264 would not be an open set ) .",
    "also notice that all @xmath1218 s are also thick ( for the same reason ) .",
    "let @xmath1025 be the constraint of @xmath448 generated by the transitions @xmath1219 .",
    "due to the previous remark , the interior of @xmath1025 is non - empty .",
    "also , as @xmath1220 is non - empty , this implies that @xmath1221 has a non - empty interior .",
    "now , we should just notice that @xmath1222 , which contains an open set , since @xmath1220 has a non - empty interior , and all the @xmath1218 s are thick .",
    "fix now a non - empty open set @xmath345 in @xmath429 , and pick @xmath1223 a basic open set included in @xmath345 .",
    "the image of @xmath264 by @xmath1211 can be decomposed as the following finite union over all sequences of edges in @xmath211 of length @xmath78 : @xmath1224 also note that we do nt lose any behaviour , in the sense that @xmath1225 in particular , there is some @xmath1226 such that @xmath1227 for every @xmath170 , where we consider here the projections over the @xmath170 first components . in particular",
    ", we can easily prove now that @xmath1216 is a basic open set in @xmath1215 .",
    "_ proof of theorem  [ theo : specauto ] .",
    "_ we can now prove theorem  [ theo : specauto ] .",
    "the property @xmath609 is prefix - independent",
    ". we can therefore apply corollary  [ coro:1 ] to @xmath601 .",
    "we can now combine with the previous technical lemmas , and we get the expected equivalence .",
    "we write @xmath1228 for the probability of the set of runs starting from @xmath76 with a move @xmath1229 with @xmath1230 and for some @xmath1231.-measurable because it can be seen as @xmath1232 for some constraint @xmath1233 enforcing the first move to lead to @xmath1234 . ]",
    "let @xmath1235 . since @xmath649 is compact and @xmath1236 ( because @xmath51 is thick and @xmath652 is non - empty and open ) , @xmath1237 .",
    "indeed we have supposed that for all @xmath165 , for all @xmath621    \\subseteq { { \\mathbb r}}_+$ ] , the function @xmath622)$ ] is continuous , see hypothesis @xmath1238 in  @xmath620 ( page  ) , hence @xmath1239 is continuous .    denote @xmath1240 the set of paths in @xmath0 that visit @xmath634 infinitely often , but from the @xmath189-th passage in @xmath634 on never fire @xmath1241 anymore .",
    "note that the set @xmath1240 is @xmath262-measurable , and that @xmath1242",
    ". then note that the set @xmath1243 can be equivalently defined by @xmath1244 where @xmath334 is ` @xmath1245 ' and @xmath238 is ` @xmath1246 ' .",
    "hence , we get that @xmath1247 , and thus @xmath1248      & = & \\frac{{\\ensuremath{\\mathbb{p}}\\xspace}_{{{\\mathcal{a}}}}(s , a \\wedge b)}{{\\ensuremath{\\mathbb{p}}\\xspace}_{{{\\mathcal{a}}}}(s , a \\wedge b ) +        { \\ensuremath{\\mathbb{p}}\\xspace}_{{{\\mathcal{a}}}}(s , \\neg a \\wedge b ) } \\\\      & & \\hspace*{1 cm } \\text{(by bayes formulas ) } \\\\[.1 cm ]      & = & 1 \\quad \\text{(because}\\ { \\ensuremath{\\mathbb{p}}\\xspace}_{{{\\mathcal{a}}}}(s , b \\wedge \\neg a ) = 0\\text { ) }    \\end{array}\\ ] ] which is exactly @xmath1249 .",
    "width 8 cm height 0.3 mm    let @xmath76 be a state in @xmath0 . we want to prove that @xmath670 .",
    "we will equivalently prove @xmath671 . to that purpose",
    ", we decompose the set of infinite runs in @xmath146 from @xmath504 into :    1 .",
    "the set of runs with infinitely many resets , 2 .",
    "the set of runs with finitely many resets , and which are ultimately in the unbounded region @xmath672 , 3 .",
    "the set of runs with finitely many resets , and which ultimately stay forever in a bounded region , either @xmath673 with @xmath674 , or @xmath675 with @xmath676 .",
    "we write @xmath677 ( resp .",
    "@xmath678 ) for condition @xmath679 restricted to @xmath675 ( resp .",
    "@xmath673 ) .",
    "we write @xmath680 for the probability of the runs starting in @xmath76 and satisfying condition  @xmath681 .",
    "the three sets of runs above are measurable and partition the set of all runs .",
    "hence @xmath682 , and applying bayes formula : @xmath1250 we now distinguish between the three cases to prove that @xmath684 ( in case @xmath685 we remove the corresponding term from  ) .",
    "case @xmath686 : :    we consider the set of runs with infinitely many resets .",
    "let    @xmath1251 be such a run .",
    "there exists @xmath474 such that for    infinitely many @xmath170 with    @xmath360 , @xmath1252 ( since    @xmath0 is single - clock ) .",
    "now , fix a state    @xmath687 and assume that    @xmath1253    ( otherwise the set of runs visiting infinitely often    @xmath687 will be negligible ) . for every sequence    @xmath232 of edges and compact sets ( as in the statement of    lemma  [ lemma : technic2 ] )",
    ", we get that    @xmath1254    hence , for sequences of edges @xmath658    such that such a @xmath232 exists , we get that    @xmath1255 now notice that such a    @xmath232 always exists whenever these edges are thick ,    hence   holds for every sequence of consecutive thick edges .",
    "+    now , fix a thick edge @xmath51 , and assume that the set of    paths passing through @xmath687 infinitely often and    enabling @xmath51 infinitely often , has a positive probability .",
    "we will then prove that    @xmath1256    which will imply that    @xmath1257 .",
    "+    * assume that @xmath51 is reachable from @xmath687    following thick edges , say @xmath658 with    @xmath1258 .",
    "then , applying  , we get that    @xmath1259 ,    hence that    @xmath1260 .",
    "* assume on the contrary that @xmath51 is not reachable from    @xmath687 following thick edges .",
    "if @xmath51 is not    reachable from @xmath687 , then    @xmath1261 .",
    "let @xmath1262 be the set of finite sequences of edges    @xmath658 leading from @xmath687    to a state where @xmath51 is enabled . then :    @xmath1263            \\hspace*{1 cm } = { \\ensuremath{\\mathbb{p}}\\xspace}_{{\\ensuremath{\\mathsf{r}({{\\mathcal{a}}})}}}({{\\def\\@rgone { { } }   \\ifx\\@rgone\\@empty      \\ensuremath{\\text{\\rmfamily\\upshape\\bfseries { g } } }   \\else      \\ensuremath{\\text{\\rmfamily\\upshape\\bfseries { g } } _ { { } } }   \\fi}\\ifmmode\\,\\else\\expandafter\\xspace\\fi}{{\\def\\@rgone { { } }   \\ifx\\@rgone\\@empty      \\ensuremath{\\text{\\rmfamily\\upshape\\bfseries { f } } }   \\else      \\ensuremath{\\text{\\rmfamily\\upshape\\bfseries { f } } _ { { } } }   \\fi}\\ifmmode\\,\\else\\expandafter\\xspace\\fi}\\bigcup_{w \\in w } w \\mid { { \\def\\@rgone { { } }   \\ifx\\@rgone\\@empty      \\ensuremath{\\text{\\rmfamily\\upshape\\bfseries { g } } }   \\else      \\ensuremath{\\text{\\rmfamily\\upshape\\bfseries { g } } _ { { } } }   \\fi}\\ifmmode\\,\\else\\expandafter\\xspace\\fi}{{\\def\\@rgone { { } }   \\ifx\\@rgone\\@empty      \\ensuremath{\\text{\\rmfamily\\upshape\\bfseries { f } } }   \\else      \\ensuremath{\\text{\\rmfamily\\upshape\\bfseries { f } } _ { { } } }   \\fi}\\ifmmode\\,\\else\\expandafter\\xspace\\fi}(q,0 ) ) \\\\[.1 cm ]            \\hspace*{1 cm } \\leq { \\ensuremath{\\mathbb{p}}\\xspace}_{{\\ensuremath{\\mathsf{r}({{\\mathcal{a}}})}}}({{\\def\\@rgone { { } }   \\ifx\\@rgone\\@empty      \\ensuremath{\\text{\\rmfamily\\upshape\\bfseries { f } } }   \\else      \\ensuremath{\\text{\\rmfamily\\upshape\\bfseries { f } } _ { { } } }   \\fi}\\ifmmode\\,\\else\\expandafter\\xspace\\fi}\\bigcup_{w \\in w } w \\mid { { \\def\\@rgone { { } }   \\ifx\\@rgone\\@empty      \\ensuremath{\\text{\\rmfamily\\upshape\\bfseries { g } } }   \\else      \\ensuremath{\\text{\\rmfamily\\upshape\\bfseries { g } } _ { { } } }   \\fi}\\ifmmode\\,\\else\\expandafter\\xspace\\fi}{{\\def\\@rgone { { } }   \\ifx\\@rgone\\@empty      \\ensuremath{\\text{\\rmfamily\\upshape\\bfseries { f } } }   \\else      \\ensuremath{\\text{\\rmfamily\\upshape\\bfseries { f } } _ { { } } }   \\fi}\\ifmmode\\,\\else\\expandafter\\xspace\\fi}(q,0 ) ) \\\\[.1 cm ]            \\hspace*{1 cm } = 0 \\qquad \\text{because one of the edges in}\\ w\\              \\text{is thin}.          \\end{array}\\ ] ]    +    in both cases , we get the expected property .",
    "case @xmath688 : :    we consider the set of runs with finitely many resets and which end up    in the unbounded region @xmath672 .",
    "let    @xmath1264 be    such a run , and assume that from @xmath1265 on , all states are    in the unbounded region .",
    "from that state on , all edges which are    enabled are thick and have guard @xmath1266 .",
    "let    @xmath51 be such an edge , and @xmath474 be the    region - state source of @xmath51 : the probability    @xmath1267    for every @xmath476 is independent of the choice of    @xmath76 ( as there is no restriction on delays , it is equal to    @xmath1268 ) .",
    "hence ,    ultimately , after having reached the unbounded region ( and never leave    it anymore ) , it will behave like a finite markov chain .",
    "+    assume now that a resetting edge @xmath51 is enabled infinitely    often along @xmath70 .",
    "then , by a similar argument to    the one in the proof of lemma  [ lemma : technic ] with the    @xmath1240 , as the probability distribution of taking an edge    is lower - bounded ( because we are now in a finite markov chain ) , then    any edge will be almost surely taken infinitely often .",
    "hence ,    @xmath1269 and thus    @xmath1270 once more , due to the distribution over edges    ( which is a finite markov chain ) , when there is no more resetting    edges , we get    @xmath1271 case @xmath679 : :    we consider the set of runs with finitely many resets and which end up    in a bounded region .",
    "we assume the region    @xmath1272 .",
    "let @xmath1273 be a witness run , and we assume that    from @xmath1265 on , we are in region @xmath116 . if    @xmath1274 and @xmath1275 with    @xmath1276 correspond to the same location , then    the clock value of @xmath1274 is less than ( or equal to )    that of @xmath1275 .",
    "hence , if a thick edge @xmath51    and whose guard is included in @xmath1277 is    enabled in @xmath1274 ( and thus also in    @xmath1275 ) , the probability of taking @xmath51 from    @xmath1275 is greater than ( or equal to ) the probability of    taking @xmath51 from @xmath1274 ( due to    @xmath689 in  @xmath620 ( page  ) on    @xmath326 s and to the fact that the discrete probability over    edges is constant by regions ) .",
    "hence , there is a positive lower bound    for the probability of taking @xmath51 , and if @xmath51    is enabled infinitely often , it will be taken infinitely often .",
    "such    an enabled edge is thus only possible with probability @xmath6    under the assumption made in this case .",
    "hence , with probability    @xmath2 , only edges with guard @xmath1278 are    enabled .",
    "for these edges , as previously , the system behaves like a    finite markov chain .",
    "we thus get that    @xmath1279    +    if we now assume the region @xmath1280 , the reasoning    is very similar to the previous one . given a location    @xmath54 along the suffix of the path where    @xmath1281 always holds ,",
    "the edges enabled in    @xmath1282 are equipped with a distribution defining a    finite markov chain .",
    "hence any edge enabled infinitely often will be    taken infinitely often almost surely , which implies that    @xmath1283    gathering all cases , we get the desired property , _",
    "i.e. _ , @xmath1284 .",
    "+    [ app : zeno - lemma ]    from lemma  [ lemma : proba ] ( resp .",
    "lemma  [ prop - topo - a - ra ] ) , we know that @xmath1133 ( resp .",
    "@xmath1134 ) is equivalent to @xmath1285 ( resp .",
    "@xmath1286 ) .",
    "we first remove syntactically all resets from edges of @xmath146 labelled by @xmath1287 since they are useless .",
    "we borrow the notations used in the proof of theorem  [ theorem : fair - oneclock ] , and following that proof , we decompose the set of infinite runs from @xmath76 into :    1 .   the set of runs with infinitely many resets , 2 .",
    "the set of runs with finitely many resets , and which are ultimately in the unbounded region @xmath672 , 3 .",
    "the set of runs with finitely many resets , and which ultimately stay forever in a bounded region , either @xmath673 with @xmath674 , or @xmath675 with @xmath676 .",
    "we then also have : @xmath1288 when these conditional probabilities are well - defined ( otherwise it is correct to remove the term from the sum ) .",
    "the proof of lemma  [ lemma : zeno1 ] is then decomposed into two parts , first we prove that the two first terms of the above sum are always equal to @xmath6 , and then that we can decide whether the last term is equal to @xmath6 .",
    "@xmath1289 and @xmath1290 .",
    "we distinguish two cases .",
    "case @xmath686 : :    we consider the set of runs with infinitely many resets .",
    "this set can    be decomposed according to the states @xmath687 ( where    @xmath732 is a region ) that are visited infinitely often .",
    "we show that    @xmath1291 .    in order to prove this , we distinguish the four following subcases    depending on the set @xmath1292 : either ( i )    @xmath1293 , or ( ii )    @xmath1294 , or ( iii ) @xmath1295 , or    ( iv ) @xmath1296 .",
    "+    let us first treat the easy case ( i ) . if @xmath1297 , since the timed automaton is non - blocking ,    this means that each time the automaton arrives in state    @xmath687 at least @xmath2 time unit elapses before    the next transition .",
    "hence a run visiting infinitely often such state    @xmath687 is necessarily non - zeno .",
    "+    let us now consider case ( ii ) , _ i.e. _ , we assume that    @xmath1298 .",
    "since the probability    distribution over the delays is then equivalent to the lebesgue    measure ( see hypothesis @xmath233 ) , the probability of    waiting a time delay @xmath1299 in    @xmath687 is positive and strictly smaller than    @xmath2 ( we write @xmath1300 for this    value : @xmath1301 ) . let @xmath1240 be the set of    runs starting from @xmath504 , visiting    @xmath687 infinitely often , and such that from the    @xmath189-th passage on , the time elapsed from state    @xmath687 ( before taking an action ) is less than    @xmath1302 .",
    "we have    @xmath1303 ,    and as a consequence    @xmath1304    +    in case ( iii ) , we assume that @xmath1295 .",
    "if @xmath1298 , we are done by case ( ii ) .",
    "we can thus suppose that if @xmath1305 , we    have that @xmath1306 . if @xmath1292 reduces    to a finite union of points , the probability @xmath1307    of waiting a delay greater than or equal to @xmath2 is    positive and strictly smaller than @xmath2 ( because the    measure is then equivalent to the uniform measure over those points ,    see hypothesis  @xmath233 ) .",
    "when going infinitely often    through @xmath687 , we will thus wait infinitely often a time    greater than or equal to @xmath2 .",
    "if @xmath1292    contains an open interval , the probability of waiting a delay greater    or equal than @xmath2 from @xmath687 is    @xmath2 ( by hypothesis @xmath233 ) . from this we    can easily derive that :    @xmath1308    +    let us conclude with case ( iv ) where @xmath1309 .    since no positive delay can elapse from @xmath687 , the    probability of taking any edge enabled in @xmath687 is    positive ( the distribution over edges indeed becomes uniform ) .",
    "hence ,    any state @xmath1310 reachable from @xmath687    taking edge @xmath51 , is almost surely infinitely often visited    ( as soon as @xmath687 is ) . from @xmath1310 ,",
    "again    two situations are possible : either @xmath1311    or not . in the first case ,",
    "note that it is necessarily the case that    such a chain @xmath1312 is finite ,    otherwise the run would contain only finitely many    resets are    not labelled with a reset . ] .",
    "thus we surely reach infinitely often a    state @xmath1313 such that @xmath1314    allowing us to rely on the previous cases to obtain the desired    results .    +    gathering the four cases ,",
    "we conclude that    @xmath1315 .",
    "hence    @xmath1316 case @xmath688 : :    we consider the set of runs with finitely many resets and which end up    in the unbounded region . from any state in the unbounded region ,",
    "the    set of potential delays is necessarily of the form    @xmath1317 . from    hypothesis  @xmath1318 in @xmath620 on the    distributions over delays ,",
    "the probability of waiting a time delay    @xmath1319 from @xmath76 , denoted    @xmath1320 , can be bounded by a constant :    @xmath1321 .",
    "let @xmath1240    denote the set of executions which , at the @xmath189-th step ,    are in the unbounded region without leaving it afterwards , and such    that all delays afterwards are less than @xmath1302 .",
    "the probability of being zeno when in @xmath1240 satisfies :    @xmath1322 , from which we derive :    @xmath1323    this concludes the proof of the lemma  [ lemma : zeno1 ] .",
    "the case of condition @xmath679 is not similar to the two previous cases .",
    "indeed , it is worth noticing that every execution satisfying the condition @xmath679 is zeno .",
    "hence , if @xmath1324 ( otherwise the term @xmath1325 does not appear in the sum  [ sum ] ) , then @xmath1326 . it remains to compute or characterise the value @xmath1327 .",
    "a bscc @xmath334 in @xmath1328 is called a _",
    "zeno bscc _ if it is bounded and contains no resetting edges .",
    "note that in a zeno bscc the value of the clock lies in a unique interval @xmath1329 ( with @xmath1330 ) or @xmath1331 ( with @xmath1332 ) .",
    ".    runs in @xmath146 are almost surely fair ( thanks to theorem  [ theorem : fair - oneclock ] ) , hence @xmath1334 .",
    "now , a fair run in @xmath146 actually ends up in a bscc of @xmath4 .",
    "it is now sufficient to remark that fair runs in @xmath679 end up in a bscc that is bounded and does not reset the clock . indeed",
    ", if one of these condition does not hold , the run would not be in @xmath679 ( either it would end up in an unbounded region , or have infinitely many resets ) .",
    "conversely , any run ending up in a zeno bscc is in  @xmath679 .",
    "hence , the mentioned equality holds .",
    "this concludes the proof of the lemma .",
    "width 8 cm height 0.3 mm    [ app : zeno2 ]    the equivalence of @xmath1133 and @xmath694 is a consequence of lemma  [ lemma : zeno1 ] and of theorem  [ th : safety ] : @xmath1335 .",
    "therefore , @xmath692 iff @xmath1336 , which is then equivalent to `` for every zeno bscc @xmath334 of @xmath4 , @xmath1337 '' , which is itself equivalent to `` for every zeno bscc @xmath334 of @xmath4 , @xmath1338 '' ; it remains to realise that @xmath1339 is a simple safety property , and to apply theorem  [ th : safety ] .",
    "we now show the equivalence with @xmath1134 .",
    "we remove syntactically all resets from edges of @xmath146 labelled by @xmath1287 since they are useless .",
    "we also borrow the notations used in the proof of theorem  [ theorem : fair - oneclock ] .",
    "assume first that @xmath1340 .",
    "then no bscc of @xmath4 is zeno .",
    "we once more play a banach - mazur game using the basic open sets .",
    "player  @xmath2 plays some move @xmath349 , and player 2 then plays a move @xmath351 leading to a bscc @xmath334 of @xmath4 . by hypothesis ,",
    "@xmath334 is not a zeno bscc , hence either it is not bounded , or it contains resetting edges .    * we first consider the case where @xmath334 contains no resetting edges . in that case , it means that the clock value when in @xmath334 is always above the maximal constant .",
    "hence , the game can keep going on , and each time player  @xmath350 chooses a move , she first chooses a move which constrains the cylinder saying that the delay has to be larger than @xmath2 .",
    "this is always possible , due to the form of the constraints , which all include @xmath672 . in that case , it is not difficult to check that the resulting runs are all non - zeno .",
    "* we now consider the case where @xmath334 has resetting edges .",
    "note that the clock can then become larger than @xmath6 . in that case ,",
    "player  @xmath350 can always choose a move so that it terminates with a resetting edge , but has visited a positive region , and has enforced that the value of the clock in that precise region was larger than @xmath315 .",
    "in that case also , all runs resulting from that play are non - zeno .",
    "hence , we get that player  @xmath350 has a strategy to avoid the set of zeno runs , hence this set is meagre .",
    "conversely assume that the set of zeno runs is meagre , but assume also that @xmath1341 .",
    "once more , let s play the banach - mazur game .",
    "player 2 has a strategy to avoid zeno behaviours .",
    "however , as @xmath1341 , player 1 can play a first move leading to a zeno bscc @xmath334 of @xmath4 .",
    "then @xmath334 has no resetting edges and lies within an interval @xmath1342 or @xmath673 .",
    "then whatever move player 2 chooses , the resulting runs will all be zeno , hence contradicting the assumption that the set of zeno runs is meagre .",
    "the claim follows .",
    "let @xmath76 be a state of @xmath146 , that we will take as initial .",
    "if @xmath51 is a thick edge in @xmath125 , and @xmath732 , we write @xmath733 for the set of runs in @xmath146 that start in @xmath76 and take @xmath51 infinitely often , and @xmath734 for the set of runs of @xmath146 that start in @xmath76 and visit @xmath474 infinitely often . in particular , we write @xmath735 for the set of runs that start in @xmath76 and visit @xmath722 infinitely often ( hence along which @xmath51 is enabled infinitely often ) .",
    "we fix a thick edge @xmath51 in @xmath125 , and we let @xmath736 be the set of pairs @xmath737 where @xmath116 is memoryless and @xmath738 the set of elements @xmath739 such that @xmath740 where @xmath741 is the set of runs that start from @xmath742 and take @xmath51 before any other visit to @xmath474 .",
    "we let @xmath1343 be the set of runs from @xmath76 that delay more than @xmath100 time units before taking the @xmath78-th transition ( i.e. @xmath1344 ) , and @xmath1345 ( resp .",
    "@xmath1346 if @xmath1347 ) the set of runs from @xmath76 such that the @xmath78-th configuration is of the form @xmath69 ( resp .",
    "@xmath69 with @xmath128 ) .",
    "if we denote @xmath1348 ( where @xmath1349 is the complement of any set @xmath1350 ) and @xmath1351 the set of locations @xmath1352 such that @xmath1353 then for any @xmath1354 , we have @xmath1355 )    \\end{aligned}\\ ] ] and thus @xmath1356\\\\      & = \\sum_{\\ell\\in s_{n-1 } } \\mu_{\\ell}([0,m ] )      { \\ensuremath{\\mathbb{p}}\\xspace}\\left(\\mathfrak{d}^{\\le m}_{n , n-1}(s)\\cap \\mathfrak{k}_{n-1}^\\ell(s)\\right)\\displaybreak[0]\\\\      & \\le \\max_{\\ell\\in l } \\mu_{\\ell}([0,m])\\cdot      \\sum_{\\ell\\in s_{n-1 } }   { \\ensuremath{\\mathbb{p}}\\xspace}\\left(\\mathfrak{d}^{\\le m}_{n , n-1}(s)\\cap",
    "\\mathfrak{k}_{n-1}^\\ell(s)\\right)\\\\      & = \\max_{\\ell\\in l } \\mu_{\\ell}([0,m])\\cdot      { \\ensuremath{\\mathbb{p}}\\xspace}\\left(\\mathfrak{d}^{\\le m}_{n , n-1}(s)\\right)\\ , .",
    "\\end{aligned}\\ ] ] as for any @xmath745 , we have assumed @xmath746)<1 $ ] , we conclude that @xmath1357))^{n+1-n}\\underset{n\\rightarrow      \\infty}{\\longrightarrow } 0\\ ] ] and thus that @xmath1358    we get that @xmath1359 now it is just a matter of noticing that if @xmath1360 is in @xmath1343 , then @xmath1265 is of the form @xmath1361 with @xmath1362_{{{\\mathcal{a } } } } ) \\in \\mathcal{q}$ ] ( a clock is either reset on the @xmath78-transition ( hence its value is @xmath6 ) , or it is above @xmath100 ) and thus @xmath1363_{{{\\mathcal{a}}}})}(s)$ ] .",
    "hence , we have @xmath1364 and @xmath1365 as @xmath736 is a finite set , we deduce @xmath1366 and as @xmath1367 , we get @xmath1368    width 8 cm height 0.3 mm    now we give the proof of lemma  [ lemma : eq2 ] .",
    "it will require quite long developments that we give in details .    let @xmath747 .",
    "we want prove that @xmath1369 or equivalently that @xmath1370    we notice that the event @xmath1371 coincides with @xmath1372 where @xmath1373 is the set of runs starting in @xmath76 along which an occurrence of edge @xmath51 is preceded by precisely @xmath189 visits to @xmath474 , i.e. @xmath1374 , where @xmath1375 is the location of state @xmath1131 .",
    "we recall the following lemma , which is well - known in probability theory ( see for example  @xcite ) :    assume @xmath1376 is a probabilistic space , and that the measurable events @xmath1377 are independent . if @xmath1378 , then @xmath1379    with the aim to apply this lemma , we will prove that the events @xmath1373 are independent in the @xmath734-conditional @xmath232-algebra , and that @xmath1380 , which will imply lemma  [ lemma : eq2 ] .",
    "this is non - trivial and will require several technical lemmas that we present now .",
    "the following arguments rely on result that will be given as corollary  [ cor : decomposition ] ( which is technical , and therefore postponed ) .",
    "[ [ independence - of - events . ] ] independence of events .",
    "+ + + + + + + + + + + + + + + + + + + + + + +    [ indpt ] the events @xmath1373 are conditionally independent given @xmath734 .    defining @xmath1381 as the set of runs starting in @xmath76 and visiting @xmath474 at least @xmath78 times , we compute : @xmath1382\\\\      & = \\frac{\\displaystyle { \\ensuremath{\\mathbb{p}}\\xspace}\\left(\\mathfrak{r}_k^{q , e}(s ) \\cap",
    "\\bigcap_{n > k } \\mathfrak{r}_{\\geq            n}^{q}(s)\\right)}{\\displaystyle        { \\ensuremath{\\mathbb{p}}\\xspace}\\left(\\bigcap_{n > k } \\mathfrak{r}_{\\geq n}^{q}(s)\\right ) } \\\\      & = \\frac{\\displaystyle { \\ensuremath{\\mathbb{p}}\\xspace}\\left(\\bigcap_{n > k }          \\left(\\mathfrak{r}_k^{q , e}(s ) \\cap \\mathfrak{r}_{\\geq              n}^{q}(s)\\right)\\right)}{\\displaystyle        { \\ensuremath{\\mathbb{p}}\\xspace}\\left(\\bigcap_{n > k } \\mathfrak{r}_{\\geq n}^{q}(s)\\right)}\\ , .    \\end{aligned}\\ ] ] the two sequences @xmath1383 and @xmath1384 are non - increasing , hence : @xmath1385 thus , by corollary  [ cor : decomposition ] , @xmath1386 where @xmath1387 is the set of runs starting in @xmath76 and visiting @xmath474 at least once , and @xmath742 is the canonical configuration @xmath1388 for @xmath1389 .    similarly we prove , using corollary  [ cor : decomposition ] , that for @xmath1390 : @xmath1391 we conclude that the two events @xmath1373 and @xmath1392 are conditionally independent given @xmath734 .    [ [ divergence - of - the - series . ] ] divergence of the series . + + + + + + + + + + + + + + + + + + + + + + + + +    @xmath1393 .    as in the previous lemma , we can deduce from equalities of corollary  [ cor : decomposition ] that @xmath1394 however , as @xmath1395 , we know by definition that we have @xmath1396 the result follows .",
    "[ [ decomposition - using - basic - sets . ] ] decomposition using basic sets .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    this section aims to prove corollary  [ cor : decomposition ] and so to complete the previous proofs .",
    "[ lemma : vm ] let @xmath116 be a memoryless region , @xmath724 , and @xmath1397 a configuration of @xmath0 . writing @xmath474 for region - state @xmath1398 , we have for every sequence @xmath1399 , @xmath1400    we will prove a stronger result .",
    "we show that for every pair @xmath1397 , @xmath1401 satisfying for every @xmath779 , @xmath780 or @xmath781 , we have for every sequence @xmath1402 @xmath1403 we prove this result by induction on the length @xmath78 of the sequence of edges .",
    "the result trivially holds for @xmath885 .",
    "assume that @xmath1100 , and that the lemma holds for sequences of edges of length @xmath1404 .",
    "the constraint labelling the edge @xmath257 is equivalent to some @xmath1405 where @xmath1406 is an interval of the form @xmath1407 $ ] for some integer @xmath1408 , or @xmath1409 for some integer @xmath1330 , or @xmath1410 .",
    "we have that : @xmath1411 where @xmath1412 .",
    "now , it is not difficult to check that @xmath1413 and @xmath1414 by hypothesis on @xmath243 and @xmath1415 .",
    "also , writing @xmath1416 , we easily get that if @xmath1417 and @xmath1418 are the valuations of @xmath1419 and @xmath1420 then for every @xmath779 , we have @xmath1421 or @xmath1422 . we deduce by induction hypothesis : @xmath1423 hence , we have @xmath1424 this concludes the proof .",
    "we define @xmath1387 the set of runs starting in @xmath76 and visiting @xmath474 at least once .",
    "[ prop : decomposition ] let @xmath754 .",
    "the following equalities hold true :    1 .   for every @xmath414 , @xmath1425 2 .   for every @xmath1426 , @xmath1427 3 .   for every @xmath1428 , @xmath1429    we will only prove the first equality .",
    "the other equalities can be handled , using decompositions , similarly to the first equality .",
    "we define the set @xmath1430 as : @xmath1431_{{{\\mathcal{a}}}},\\right.\\\\      \\left.\\mathsf{target}(e_h)= q,\\ \\text{and}\\ \\mathsf{target}(e_i )        \\ne q\\ \\text{for any}\\ i < h\\right\\}\\ , .    \\end{gathered}\\ ] ] note that a run @xmath91 is in @xmath1387 iff there is some @xmath1432 with @xmath1433 .",
    "the set @xmath1430 is a _",
    "basic set _ for @xmath1434 . for every state @xmath243",
    ", we define the set @xmath1435 as : @xmath1436_{{{\\mathcal{a}}}},\\\\      \\mathsf{target}(e_h ) = q,\\ \\text{and}\\ \\#\\{1 \\leq i \\leq h \\mid",
    "\\mathsf{target}(e_i ) = q\\ } = n \\big\\}\\ , .",
    "\\end{gathered}\\ ] ] note that a run @xmath91 is in @xmath1437 iff there is some @xmath1438 such that @xmath1439 .",
    "the set @xmath1435 is a _",
    "basic set _ for @xmath1440 .",
    "note also that if @xmath243 and @xmath1415 are region - equivalent , then the two sets @xmath1435 and @xmath1441 coincide .",
    "we will thus write @xmath1442 , where @xmath474 is the region - state of @xmath243 and @xmath1415 .    we will decompose runs in @xmath1381 using the basic sets @xmath1430 and @xmath1443 .",
    "indeed , if @xmath1444 , then we can decompose @xmath91 into @xmath1445 such that there exist @xmath1432 with @xmath1446 , and @xmath1447 with @xmath1448 . by definition of @xmath1430 , @xmath1449 , and by applying lemma  [ lemma : vm ] , we get @xmath1450 if we denote @xmath1451 instead of @xmath1452 and @xmath1453 instead of @xmath1454 , we have the following simplification : @xmath1455\\\\      & \\left.\\vphantom{\\prod^h}\\qquad\\qquad\\cdot{\\ensuremath{\\mathbb{p}}\\xspace}\\left({\\pi_{}(s',f_1 \\dots f_k)}\\right)\\ , { \\mathrm{d}}\\mu_{s_{h-1}}(t_h)\\ , \\dots { \\mathrm{d}}\\mu_{s}(t_1)\\right)\\\\      & \\quad \\text{(where $ s'={\\ensuremath{\\mathsf{last}}}(s \\xrightarrow{t_1,e_1}s_1 \\dots s_{h-1}\\xrightarrow{t_h , e_h } ) \\in q$)}\\displaybreak[0]\\\\      & = \\sum_{\\varepsilon^q(s ) } \\",
    "\\sum_{\\gamma_{n-1}^q(q ) } \\left ( \\int_{t_1 } \\int_{t_2 } \\dots \\int_{t_h } \\big(\\prod_{i=0}^{h-1 } p_{s_{i}+t_{i+1}}(e_{i+1})\\big)\\right.\\\\      & \\left.\\vphantom{\\prod^h}\\qquad\\qquad\\cdot{\\ensuremath{\\mathbb{p}}\\xspace}\\left({\\pi_{}(s_q , f_1\\dots f_k)}\\right)\\ , { \\mathrm{d}}\\mu_{s_{h-1}}(t_h)\\ , \\dots { \\mathrm{d}}\\mu_{s}(t_1)\\right)\\displaybreak[0]\\\\      & = \\left(\\sum_{\\gamma_{n-1}^q(q ) } { \\ensuremath{\\mathbb{p}}\\xspace}\\left({\\pi_{}(s_q , f_1\\dots f_k)}\\right ) \\right)\\\\      & \\quad\\quad\\cdot \\left(\\sum_{\\varepsilon^q(s ) } \\int_{t_1 } \\int_{t_2 } \\dots \\int_{t_h } \\big(\\prod_{i=0}^{h-1 } p_{s_{i}+t_{i+1}}(e_{i+1})\\big){\\mathrm{d}}\\mu_{s_{h-1}}(t_h)\\ , \\dots { \\mathrm{d}}\\mu_{s_0}(t_1 ) \\right)\\\\",
    "\\displaybreak[0]\\\\      & \\quad= { \\ensuremath{\\mathbb{p}}\\xspace}\\left(\\mathfrak{r}_{\\geq n-1}^{q}(s_q)\\right ) \\cdot      { \\ensuremath{\\mathbb{p}}\\xspace}\\left(\\mathfrak{e}_{q}(s)\\right ) .",
    "\\end{aligned}\\ ] ]    by induction on @xmath78 , using a similar decomposition , we can prove that : @xmath1456 which concludes the proof for the first equality .",
    "we can simplify equalities of the previous proposition thanks to following lemma :    [ limitok ] let @xmath1457 .",
    "we have @xmath1458 .    for a contradiction",
    ", we assume that @xmath1459 . by proposition  [ prop : decomposition ]",
    ", we thus have that : @xmath1460 which contradicts the fact that @xmath1457 .    as an immediate corollary we get the following result .",
    "[ cor : decomposition ] let @xmath1457 .",
    "the following equalities hold true :    1 .   for every @xmath414 , @xmath1461 2 .   for every @xmath1426 ,",
    "@xmath1462 3 .   for every @xmath1428 ,",
    "@xmath1463    this concludes the proof of lemma  [ lemma : eq2 ] .",
    "width 8 cm height 0.3 mm    we now extend the previous study to weak reactive stochastic timed automata .",
    "we seek to show that , with probability @xmath2 , we delay infinitely many times more than @xmath100 time units before taking a transition .",
    "let @xmath1343 be the set of runs from state @xmath76 that delays more than @xmath100 time units before taking the @xmath78-th transition ( i.e. @xmath1344 ) .",
    "we denote @xmath1464 .",
    "assume @xmath610 with @xmath775 . since @xmath0 is a weak reactive stochastic timed automaton , there exists @xmath783 such that for every @xmath775 , for every @xmath777 , we have @xmath1465 and there exist @xmath786 and @xmath787 such that for any @xmath788 , any @xmath777 , we have @xmath1466 where @xmath1467 .",
    "let @xmath610 be a state of @xmath0 .",
    "if @xmath794 , we have @xmath1468 if @xmath1469 , we first remark that for every @xmath1470 , we have @xmath1471 where @xmath1472    therefore , if @xmath1469 , we have @xmath1473m,+\\infty[}p_{s_k+t_{k+1}}(e){\\mathrm{d}}\\mu_{s_{k}}(t_{k+1})\\dots{\\mathrm{d}}\\mu_{s}(t_1)\\\\      & \\quad\\ge \\sum_{(e_1,\\dots , e_k)\\in f_u}\\int_{t_1\\in i(s , e_1 ) } p_{s+t_1}(e_1)\\cdots\\\\      & \\phantom{\\sum_{(e_1,\\dots , e_k)\\in f_u}\\sum_{e\\in e}\\int_{t_1\\in          i(s , e_1 ) } } \\cdots      \\int_{t_{k+1}\\in ] m,+\\infty[}\\sum_{e\\in e } p_{s_k+t_{k+1}}(e){\\mathrm{d}}\\mu_{s_{k}}(t_{k+1})\\dots{\\mathrm{d}}\\mu_{s}(t_1)\\\\      & \\quad\\ge \\sum_{(e_1,\\dots , e_k)\\in f_u}\\int_{t_1\\in i(s , e_1 ) } p_{s+t_1}(e_1)\\cdots      \\int_{t_{k+1}\\in ] m,+\\infty[}{\\mathrm{d}}\\mu_{s_{k}}(t_{k+1})\\dots{\\mathrm{d}}\\mu_{s}(t_1)\\\\      & \\quad\\ge \\sum_{(e_1,\\dots , e_k)\\in f_u}\\int_{t_1\\in i(s , e_1 ) } p_{s+t_1}(e_1)\\cdots\\\\      & \\phantom{\\sum_{(e_1,\\dots , e_k)\\in f_u}\\sum_{e\\in e } } \\cdots      \\int_{t_{k}\\in i(s_{k-1},e_k)}p_{s_{k-1}+t_{k}}(e_k ) \\mu_{s_k}(]m,+\\infty[){\\mathrm{d}}\\mu_{s_{k-1}}(t_{k})\\dots{\\mathrm{d}}\\mu_{s}(t_1)\\\\      & \\quad\\ge \\lambda_0 \\sum_{(e_1,\\dots , e_k)\\in f_u } { \\ensuremath{\\mathbb{p}}\\xspace}_{{{\\mathcal{a}}}}({\\pi_{}(s , e_1,\\dots , e_k)})\\\\      & \\quad \\ge \\lambda_0\\lambda_1\\ , .    \\end{aligned}\\ ] ] we deduce that for every state @xmath76 , @xmath1474 .",
    "therefore for any state @xmath76 , for any @xmath1475 , we get @xmath1476 } p_{s+t_1}(e_1 ) \\cdots      \\int_{t_{(k-1)n}\\in i(s_{(k-1)n-1},e_{(k-1)n})\\cap [ 0,m]}\\\\      & \\quad\\quad      \\big(p_{s_{(k-1)n-1}+t_{(k-1)n}}(e_{(k-1)n}){\\ensuremath{\\mathbb{p}}\\xspace}(\\mathfrak{d}^{\\le        m}_{1,n}(s_{(k-1)n}))\\big )      { \\mathrm{d}}\\mu_{s_{(k-1)n-1}}(t_{(k-1)n})\\dots{\\mathrm{d}}\\mu_{(\\ell , v)}(t_1)\\\\      & \\quad\\le ( 1-\\lambda_0\\lambda_1 ) { \\ensuremath{\\mathbb{p}}\\xspace}(\\mathfrak{d}^{\\le m}_{1,(k-1)n}(s))\\\\ & \\quad\\le ( 1-\\lambda_0\\lambda_1)^k.\\end{aligned}\\ ] ]    in the same way , we deduce that for any @xmath1477 , @xmath1478 we conclude that for any @xmath1479 , @xmath1480 converges to @xmath6 when @xmath78 tends to infinity and we finish the proof with the same arguments as in the proof of lemma  [ lemma : eq1 ] .",
    "[ app : reactivenonzeno ]    this is a consequence of the proofs of lemma  [ lemma : eq1 ] ( for reactive automata ) and of lemma  [ lemma : weakreactive ] ( for weak reactive automata ) .",
    "we should just notice that , writing @xmath1481 for the set of zeno runs from @xmath76 , @xmath1482 and in the two proofs that are mentioned , it is proven that @xmath1483 tends to @xmath6 when @xmath78 tends to @xmath1484 , which implies that @xmath1485 .",
    "the upper bounds have already been explained in the core of the paper ( they are obvious consequences of the previous developments ) .",
    "we will now explain several lower bounds .",
    "we prove that the almost - sure model - checking problem in reactive timed automata against simple safety and simple reachability properties is pspace - hard . to that aim",
    "we simulate a linearly - bounded turing machine @xmath1486 on an input word @xmath1487 .",
    "the general reduction is rather standard  @xcite but it is required to work out the details so that there is no equality constraints in the constructed timed automaton , so that @xmath146 and @xmath4 coincide .",
    "let @xmath1488 be the bound on the tape of @xmath1486 when simulating on input word @xmath1487 .",
    "we assume the alphabet is @xmath1489 and we encode the content of @xmath926-th cell @xmath1490 using a clock @xmath1491 with the following convention : when we enter a module , cell @xmath1490 contains an @xmath1492 whenever @xmath1493 and it contains a @xmath1494 whenever @xmath1495 . to simulate a transition @xmath1496 where @xmath1497",
    ", we construct a module as in fig .",
    "[ fig : simul ] for every index @xmath170 such that @xmath1498 and @xmath1499 , where @xmath1500 is either @xmath1185 ( if the head goes to the left ) , or @xmath1501 ( if the head goes to the right ) .    ( 0,0 ) node [ draw , rounded corners=1.5 mm ] ( a ) @xmath1502 ; ( 3,0 ) node [ draw , circle ] ( b ) ; ( 6,0 ) node [ draw , circle ] ( c ) ; ( 9,0 ) node [ draw , circle ] ( d ) ; ( 10,0 ) node @xmath11 ; ( 11,0 ) node [ draw , circle ] ( e ) ; ( 13.5,0 ) node [ draw , circle ] ( f ) ; ( 14.5,0 ) node @xmath11 ; ( 15.5,0 ) node [ draw , circle ] ( g ) ; ( 18.5,0 ) node [ draw , rounded corners=1.5 mm ] ( h ) @xmath1503 ;              we complete the construction with an initialisation module ( with input @xmath1487 on the tape ) , and we complete the automaton so that it is reactive ( by adding transitions to @xmath1516 location ) .",
    "we note @xmath0 for this timed automaton and write @xmath1517 for the halting location ( which can be made a sink ) .",
    "let @xmath1518 be the safety property that @xmath1517 is not visited , and @xmath1519 be the property of reaching @xmath1516 .",
    "we attach the exponential distribution with parameter , say @xmath2 , to every state , and assume weight @xmath2 for every edge .",
    "let @xmath74 be the initial state of @xmath0 where all clocks are set to @xmath6 .",
    "assume @xmath1486 halts on input @xmath1487 .",
    "then there is a finite run @xmath70 in @xmath0 leading to @xmath1517 . due to the special form of @xmath0 ,",
    "the probability of the cylinder generated by @xmath1521 is positive ( @xmath0 has only strict guards ) .",
    "this implies that @xmath1522 ( since state @xmath1516 is not reached by that cylinder ) , and @xmath1523 .",
    "if @xmath1486 does not halt on input @xmath1487 , then location @xmath1517 is never visited , and therefore @xmath1516 is visited with probability @xmath2 .",
    "this implies that @xmath1524 , and that @xmath1525 ."
  ],
  "abstract_text": [
    "<S> a stochastic timed automaton is a purely stochastic process defined on a timed automaton , in which both delays and discrete choices are made randomly . </S>",
    "<S> we study the almost - sure model - checking problem for this model , that is , given a stochastic timed automaton @xmath0 and a property @xmath1 , we want to decide whether @xmath0 satisfies @xmath1 with probability @xmath2 . in this paper </S>",
    "<S> , we identify several classes of automata and of properties for which this can be decided . </S>",
    "<S> the proof relies on the construction of a finite abstraction , called the thick graph , that we interpret as a finite markov chain , and for which we can decide the almost - sure model - checking problem . </S>",
    "<S> correctness of the abstraction holds when automata are almost - surely fair , which we show , is the case for two large classes of systems , single - clock automata and so - called weak - reactive automata . </S>",
    "<S> techniques employed in this article gather tools from real - time verification and probabilistic verification , as well as topological games played on timed automata . </S>"
  ]
}
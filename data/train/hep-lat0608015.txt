{
  "article_text": [
    "in this letter we have presented a simple improvement to the  algorithm to reduce the computation required for lattice qcd calculations .",
    "this method leads to a large gain in performance relative to the conventional algorithm . at the physical parameters",
    "analyzed , our method is competitive with the mass preconditioning method presented in  @xcite ; moreover , the use of the rhmc algorithm permits the easy introduction of single quark flavors . in practice",
    "it is often advantageous to combine mass preconditioning with the present @xmath1  root method .",
    "the benefit that is gained from the improved hmc algorithms increases as the quark mass is reduced , and in this regime it would be interesting to further compare these algorithms . as the lattice volume is increased ,",
    "we expect our method to prove more advantageous because of the improved volume dependence of higher order integrators ( with a second order integrator , the cost of hmc is expected to scale @xmath73 , whereas with a fourth order integrator the cost is expected to scale @xmath74  @xcite ) .",
    "the importance of these results is that the cost to generate gauge field configurations with light fermions , which is the most costly part of lattice field theory computations , has been drastically reduced .",
    "this corresponds to more than a four fold decrease in computer time .",
    "these techniques also promise to lead to similar improvements in other fields where pseudofermion techniques are used for fermionic monte carlo computations .",
    "we wish to thank carsten urbach for providing thermalized lattices for this work .",
    "the development and computer equipment used in this calculation were funded by the u.s .",
    "doe grant de - fg02 - 92er40699 , pparc jif grant ppa / j / s/1998/00756 and by riken .",
    "this work was supported by pparc grants ppa / g / o/2002/00465 , ppa / g / s/- 2002/00467 and pp / d000211/1 ."
  ],
  "abstract_text": [
    "<S> there has been much recent progress in the understanding and reduction of the computational cost of the hybrid monte carlo algorithm for lattice qcd as the quark mass parameter is reduced . in this letter </S>",
    "<S> we present a new solution to this problem , where we represent the fermionic determinant using @xmath0 pseudofermion fields , each with an @xmath1 root kernel . </S>",
    "<S> we implement this within the framework of the rational hybrid monte carlo ( rhmc ) algorithm . </S>",
    "<S> we compare this algorithm with other recent methods in this area and find it is competitive with them .    </S>",
    "<S> the motivation for this work is the need for faster algorithms to perform lattice qcd calculations near the chiral limit . to include the effects of fermions in our calculations we are required to invert the dirac operator , which is a very large sparse matrix : as the fermion mass </S>",
    "<S> is decreased the computational cost increases with the condition number of the matrix @xmath2 . </S>",
    "<S> lattice qcd calculations involve the integration of hamilton s equations of motion , and the fermionic force acting on the gauge fields also increases with decreasing fermion mass . to maintain the stability of the integrator the integration step size </S>",
    "<S> must be reduced , thus increasing the cost . in this paper </S>",
    "<S> we shall not address the first of these problems , but shall introduce a method to bring the latter under control . </S>",
    "<S> this work is related to similar work by hasenbusch  @xcite , but our method requires less parameter tuning .    </S>",
    "<S> when performing a lattice qcd simulation , we desire gauge field configurations @xmath3 distributed according to the probability density @xmath4 where @xmath5 is the pure gauge action and @xmath6 is the determinant of the dirac operator @xmath7 , which appears after integrating out the grassmann - valued quark fields . </S>",
    "<S> the operator @xmath8 is the discretized covariant derivative , and @xmath9 is the fermion mass . </S>",
    "<S> we represent the determinant as a pseudofermion gaussian functional integral ( @xmath10 ) , giving the probability density @xmath11    almost all techniques for generating gauge configurations consist of variants of hybrid algorithms , these being algorithms which combine momentum and pseudofermion refreshment heatbaths with molecular dynamics ( ) integration of the gauge field . </S>",
    "<S> the latter is done through the introduction of a `` fictitious '' momentum field @xmath12 , with which we define the hamiltonian @xmath13 . </S>",
    "<S> the gauge fields can then be allowed to evolve for a time @xmath14 by integrating hamilton s equations . </S>",
    "<S> hybrid algorithms are ergodic and their fixed point is close to but not precisely the desired one . </S>",
    "<S> this discrepancy is due to the inexact integration of hamilton s equations : the hamiltonian is conserved to @xmath15 , where @xmath16 is determined by the order of the integration scheme used . </S>",
    "<S> hybrid algorithms which use area preserving and reversible ( symplectic and symmetric ) integrators can be made exact through the addition of a metropolis acceptance test at the end of the  trajectory , which stochastically corrects for these errors . the hybrid monte carlo algorithm ( ) algorithm  </S>",
    "<S> @xcite is the _ de facto _ </S>",
    "<S> method for generating the required probability distribution , of which a single update consists of the following markov steps    * momentum refreshment heatbath using gaussian noise ( @xmath17 ) . * pseudofermion refreshment ( @xmath18 , where @xmath19 ) . </S>",
    "<S> * mdmc , which consists of * *  trajectory consisting of @xmath20 steps . </S>",
    "<S> * * metropolis accept / reject with probability @xmath21 .    when updating the momentum there are contributions to the force from both the pure gauge part of the action @xmath22 , and the fermionic part @xmath23 . as the fermion mass </S>",
    "<S> is decreased the latter becomes the dominant contribution . to avoid an instability in the integrator and to maintain a non - negligible acceptance rate we must reduce the step size @xmath24 </S>",
    "<S> : this makes the computation very expensive since at every step we must solve a large system of linear equations .    </S>",
    "<S> since the fermion determinant is represented using a single pseudofermion configuration selected from a gaussian heatbath , the variance of this stochastic estimate will lead to statistical fluctuations in the fermionic force : the pseudofermionic force may be larger than the exact fermionic force , which is the derivative @xmath25 with respect to the gauge field @xmath3 . </S>",
    "<S> this means that the pseudofermionic force may trigger the instability in the integrator even though the exact force would not .    </S>",
    "<S> an obvious way of ameliorating this effect is to use @xmath26 pseudofermion fields to sample the functional integral : this is achieved simply by writing @xmath27^n \\\\    & \\propto & \\prod_{j=1}^n d\\phi_j\\ , d\\phi^\\dagger_j\\ ,      \\exp{\\left(-\\phi^\\dagger_j\\m^{-1/n}\\phi_j \\right)},\\end{aligned}\\ ] ] that is introducing @xmath0 pseudofermion fields @xmath28 each with kernel @xmath29 .    </S>",
    "<S> it is well known that the instability in the integrator is triggered by isolated small modes of the fermion kernel  @xcite . </S>",
    "<S> these modes are of magnitude @xmath30 with the standard kernel ; with our multiple pseudofermion approach these modes are now @xmath31 , and so are vastly reduced in magnitude . </S>",
    "<S> we would thus expect that the instability is shifted to occur at a far greater integrating step size .    </S>",
    "<S> if we make the simple - minded estimate that the magnitude of the fermion force is proportional to the condition number of the fermion matrix multiplied by the step size , then we can find the optimum value of @xmath0 . </S>",
    "<S> we must keep the maximum force fixed so as to avoid the instability in the integrator , so we may increase the integration step size to @xmath32 such that @xmath33 , where we have used the fact that @xmath34^{1/n}$ ] . at constant trajectory length and acceptance rate , and hence </S>",
    "<S> constant autocorrelation times , the cost of an  trajectory is proportional to the ratio @xmath35 , and thus is minimized by choosing @xmath0 so as to minimize @xmath36 , which leads to the condition @xmath37 , corresponding to cost reduction by a factor of @xmath38 ^ 2/\\left[4\\k(\\m)\\right]$ ] .    our method is to apply the rational hybrid monte carlo ( ) algorithm  @xcite to generate gauge field and pseudofermion configurations distributed according to the probability density @xmath39}\\ ] ] where @xmath40 . </S>",
    "<S> optimal chebyshev rational approximations are used to evaluate the matrix functions , and we proceed as we would for conventional  @xcite . if written in partial fraction form @xmath41 , the rational function can be evaluated using a multi - shift solver  @xcite . </S>",
    "<S> the resulting computational cost per pseudofermion field very similar to  ) once per trajectory . ] since the shifts @xmath42 are all positive , the most costly shift being that which is closest to zero . </S>",
    "<S> remarkably , all the coefficients @xmath43 are also positive , so the procedure is numerically stable .    at this point </S>",
    "<S> it is worth comparing our method to the multiple pseudofermions through mass preconditioning method , or the so called hasenbusch trick  @xcite . in the latter , </S>",
    "<S> the fermion determinant is written @xmath44 $ ] , where the mass parameter used in @xmath45 is larger than that in @xmath46 . </S>",
    "<S> the original idea behind this method was to tune the mass of the dummy operator @xmath45 such that the operators had a similar condition number  @xcite . </S>",
    "<S> an increase in step size would then be possible for the same reasons given above . </S>",
    "<S> the advantage with this method compared to  is that the extra operators introduced are heavier , and hence cheaper to evaluate compared to the original kernel . </S>",
    "<S> recently , larger speedups have been found through tuning the dummy mass(es ) such that the action constituents with the greatest forces are those which are cheapest to evaluate , i.e. , the heaviest  @xcite . </S>",
    "<S> a multi - level integration scheme  @xcite is then used which evaluates the cheaper and dominant forces more frequently than the more expensive and smaller forces . </S>",
    "<S> tuning the mass parameters with both of these methods requires some effort , and even more so as further dummy operators are introduced . </S>",
    "<S> this compares to our  method which requires no tuning of the extra operators since all operators are identical .    has the added virtue in that it allows the inclusion of less fermions than are described by the kernel @xmath46 ( typically this represents two fermions ) . for example to simulate full qcd , we are required to include the contribution from the light quark pair ( at present we always assume @xmath47 ) and the strange quark </S>",
    "<S> traditionally the inclusion of the strange quark has proved problematic , and the use of an inexact algorithm  @xcite has been required . </S>",
    "<S> an alternative has been to use polynomial approximations , but such an approach requires either a very large degree polynomial ( @xmath48 for light quarks ) , or a correction step which is applied with the acceptance test or when making measurements  @xcite .  </S>",
    "<S> allows the strange quark to be included simply through the use of the rational approximation @xmath49 , and because of the high accuracy of rational approximations , no correction step is required .    </S>",
    "<S> [ 0.3 ] the variation of the force magnitude ( @xmath50 norm ) , conjugate gradient ( cg ) cost and @xmath43 parameter for each partial fraction with @xmath51 pseudofermions ( @xmath52 lattice , @xmath53 , @xmath54 , cg residual @xmath55 for all shifts).,title=\"fig : \" ]    an important observation that has been made with prior use of  is that the derivatives of the partial fractions have vastly different magnitudes  @xcite . in figure </S>",
    "<S> [ fig : force ] we show the variation of magnitude of the force with each partial fraction , in order of increasing shift . </S>",
    "<S> the surprise is that the smallest shifts contribute least to the total fermion force . </S>",
    "<S> also included on the plot is the number of conjugate iterations required in the multi - shift solver to reduce the residual for each shifted system by six orders of magnitude relative to the source . </S>",
    "<S> the most expensive constituents of the fermion force actually have the smallest magnitude . </S>",
    "<S> this effect may in part due to the fact that the density of states of the dirac operator is greatest in the bulk , but principally because of the nature of the rational coefficients . </S>",
    "<S> this latter effect is enhanced as @xmath0 is increased because the coefficients @xmath43 become smaller for light shifts , and larger for heavier shifts ( see figure [ fig : force ] ) .    </S>",
    "<S> we can make use of this observation by two methods . in the spirit of  </S>",
    "<S> @xcite we can construct a multi - timescale numerical integrator that assigns a larger step size to the small shifts , the ratio of the two step sizes being chosen such that the product @xmath56 is the same . in practice we have found the simpler approach where the smaller shifts are given a looser stopping condition than the heavier shifts while keeping the step size the same for all shifts , to be a more effective approach . </S>",
    "<S> it is important to mention that loosening the stopping condition of the poles has no effect on the reversibility of the molecular dynamics  @xcite . </S>",
    "<S> here we are loosening the stopping condition of the smaller shifts which are less important for evaluating the total fermion force .    to test our hypothesis that the use of multiple pseudofermions removes the integrator instability , we produced the data shown in figure [ fig : dh ] using a relatively modest lattice volume . on a logarithmic scale we plot the value of @xmath57 versus the step size for @xmath58 and  @xmath59 pseudofermions . </S>",
    "<S> we used a multi - timescale integrator to isolate the effect of the fermions from that of the gauge action . </S>",
    "<S> for @xmath60 when the step size reaches @xmath61 , @xmath62 explodes by four orders of magnitude , this corresponds to the value for which the instability is triggered . for @xmath63 and  </S>",
    "<S> @xmath59 not only is energy conservation better , but also the instability has been removed .    </S>",
    "<S> [ 0.25 ] the variation of @xmath62 with step size for @xmath64 , the integrating step size has been fixed at approximately @xmath65 ( wilson gauge action , staggered fermions , @xmath66 lattice , @xmath67 , @xmath68).,title=\"fig : \" ]    in conventional  the second order leapfrog integrator is usually found to be optimal , and the use of higher order integrators are found to decrease performance . </S>",
    "<S> higher order integrators are more susceptible to the instability discussed before because they are constructed from longer sub - steps than the original leapfrog step . if multiple pseudofermions bring the instability under control , higher order integrators should now prove advantageous ; this is indeed found to be the case . </S>",
    "<S> we have tried a variety of fourth order integrators : the fourth order campostrini  @xcite integrator and fourth order minimum norm integrators  @xcite . while these all help </S>",
    "<S> we have generally found the fourth order minimum norm integrator ( 4mn5fv ) to be optimal . </S>",
    "<S> initial investigation has not found any gain from using a sixth order integrator , though this ( or an even higher order integrator ) should not be ruled out from future investigation .    </S>",
    "<S> by2pt    .[table : parameters]table of parameters used for this study . </S>",
    "<S> the 2mn integrator is the second order minimum norm integrator  @xcite . for the  the smallest two shifts had a cg residual of @xmath69 , @xmath70 for the next two , and @xmath71 for the remaining shifts . </S>",
    "<S> for all shifts the cg residuals were set to @xmath72 for the heatbath and action evaluations . </S>",
    "<S> [ cols=\"<,>,>,>,^ , < , < \" , ]     to test the efficiency of our final algorithm we choose the same parameters that have been used in recent publications  @xcite : namely a @xmath52 lattice , using a wilson gauge action ( @xmath53 ) together with unimproved wilson fermions with three different mass parameters .    </S>",
    "<S> a summary of our results compared to multi - timescale mass preconditioning  @xcite and conventional  @xcite can be seen in table [ tabl : results ] . </S>",
    "<S> our algorithm is very similar in performance to that presented in  @xcite , and both of these algorithms are clearly superior to conventional  as expected . </S>",
    "<S> the results are also comparable with those of lscher  @xcite , but are far easier and more efficient to implement especially on fine grained parallel computers . </S>"
  ]
}
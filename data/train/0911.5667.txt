{
  "article_text": [
    "current versions of tcp @xcite like tcp ",
    "cubic @xcite and compound ",
    "tcp @xcite use elaborate techniques to avoid and to cope with network congestion , which is the main reason for packet losses in wired networks .",
    "however , the increasing deployment of wireless networks like ieee-802.11 ( wlan ) or ieee-802.16 ( wimax ) imposes new challenges on tcp as a reliable transport protocol . in wireless networks",
    ", packet losses can occur due to effects like shadowing , interference , and multipath propagation to mention only a few .",
    "the problem is , that tcp in all it s current implementations reacts on packet losses with some congestion avoidance strategy , thus reducing throughput and transmission round  trip time .    during the last few years",
    ", network coding became a prominent field of interest in the communications- and coding community .",
    "the main idea is to view packets as elements of an algebraic structure , e.g. a finite field or a vector space .",
    "then , packet losses correspond to erasures and there exist well  known algebraic techniques to correct them .",
    "the most important example of this approach is probably random network coding @xcite based on the rank metric @xcite , the corresponding codes are frequently called rank or gabidulin codes @xcite . in this paper we follow a different approach for network coding , first proposed by kabatiansky and krouk @xcite and further developed and extended by sidorenko et al .",
    "it utilizes mds codes and the traditional hamming metric . with mds codes , it is possible to correct errors and erasures , the tradeoff parameter between the two can be selected by the system designer .",
    "the idea of combining tcp with network coding was first presented by sundararajan et al .",
    "@xcite , following the rank metric approach .",
    "we complement their work by following the hamming metric approach and by introducing a new _ mds network coding layer ( nc layer ) _ between the ip and tcp layer .",
    "the nc layer is transparent to the established layers which enables an easy deployment .",
    "the paper is organized as follows . in section  [ sec : mds ] we explain mds codes and show their most important property for network coding . in section  [ sec : layer ] we explain the nc layer together with algorithmic descriptions of the transmitter and receiver sides .",
    "the properties and capabilities of tcp with the nc layer are investigated in section  [ sec : sim ] by simulation .",
    "we also analyze how network coding ",
    "capable nodes affect a mixed network environment .",
    "let @xmath0 and @xmath1 be two vectors over an extended galois field @xmath2 with @xmath3 where @xmath4 is a non - negative integer . the _",
    "hamming distance _",
    "@xmath5 is defined as the number of differing coordinates of @xmath6 and @xmath7 , i.e. @xmath8    let @xmath9 be a subspace of @xmath10 with dimension @xmath11 .",
    "define the _",
    "minimum distance @xmath12 _ as @xmath13 then , @xmath14 is called a @xmath15-nary linear block code of length @xmath16 , dimension @xmath11 and minimum distance @xmath12 .",
    "one basic result of coding theory is the _ singleton bound _ , which bounds the minimum distance for given code length and dimension .",
    "the following results were established in @xcite , see also @xcite .",
    "the minimum distance of a block code @xmath17 is bounded by @xmath18    by definition of @xmath12 there are no two codewords in @xmath19 with @xmath12 coinciding coordinates , but there might be codewords with @xmath20 coinciding coordinates .",
    "their quantity is at most @xmath21 .",
    "the total number of codewords must be smaller or equal than this quantity , hence @xmath22 .",
    "an interesting subset of the block codes are those , that have maximum possible minimum distance .    a block code @xmath17 is called _ maximum distance separable ( mds ) _ if it fulfills the singleton bound with equality , i.e. @xmath23    it can be shown that there are no mds codes over @xmath24 besides the repetition codes , the single parity check codes and the codes without any redundancy . probably , the most important mds codes are the _ reed  solomon ( rs )",
    "_ codes @xcite over @xmath2 with @xmath25 . in our considerations",
    ", we will always assume that @xmath15 is a power of two , i.e. @xmath3 .",
    "in this case , elements of @xmath2 can be represented by binary vectors of length @xmath4 .",
    "we do not use any of the code s properties in this paper except that they are mds .",
    "the core of our proposed scheme is the following well  known property of mds codes .",
    "[ theorem : k - is - enough ] if @xmath17 is an mds code , then any @xmath11 coordinates of @xmath26 unambiguously determine @xmath27 .",
    "we have @xmath28 , hence in any codeword at most @xmath29 positions can coincide .",
    "thus any @xmath11 positions uniquely determine the codeword .",
    "this allows the following procedure .",
    "assume that a binary message of length @xmath30 bit should be transmitted .",
    "let us denote a symbol from @xmath2 as a _",
    "segment_. the binary message can be considered as an information vector containing @xmath11 segments .",
    "theses segments can be encoded into @xmath31 segments using an mds code @xmath17 .",
    "the resulting @xmath16 segments are transmitted over a network .",
    "then , by theorem  [ theorem : k - is - enough ] , the receiver is able to reconstruct the @xmath16 segments if it receives * arbitrary * @xmath11 segments .",
    "we are now ready to explain our proposed scheme for end  to  end algebraic network coding based on mds codes .",
    "it works as a transparent new layer between the internet and the transport layer of the internet protocol stack @xcite , see figure  [ fig : stack ] .",
    "transparent means that the functionality of the nc layer is hidden to the existing layers , which simplifies deployment in existing networks .        in our considerations , we identify the transport layer with the tcp layer and the internet layer with the ip layer . for simplicity ,",
    "we assume a half duplex communication , i.e that payload data is only transmitted in one direction .",
    "further we assume that the connection setup and termination is always initiated by the transmitter side tcp instance .",
    "the generalization to full duplex is straightforward and does not yield any additional insights .",
    "connection management segments like syn or fin usually pass the nc layer in a transparent manner . however , such segments invoke some special connection management segment handling routines , see section  [ subsec : conman ] for details about connection management .    at the transmitter ,",
    "data segments arriving from the tcp are buffered until @xmath11 segments are in the buffer .",
    "as soon as the buffer contains @xmath11 segments ( the information vector ) , they are encoded for details about which parts of the tcp segments are encoded . ] into @xmath16 segments ( the codeword ) using an mds code @xmath17 . the parameters @xmath15 and @xmath11 of the code must be chosen such that their product @xmath30 matches the data segment sizes arriving from the tcp .    to cope with this restriction",
    "the nc instance has to change the _ maximum segment size ( mss ) _",
    "parameter @xcite offered by the receiving tcp instance during the connection negotiation if the transmitting tcp instance uses segment sizes less than the ( modified ) mss , the nc layer has to pad the data .",
    "another approach would be to implement a strategy for segmenting in the nc layer . for convenience",
    "we assume in the following that the tcp instance always uses segments with size equal to the mss .",
    "after encoding , the @xmath16 segments are passed to the ip layer . at the receiver ,",
    "the nc layer acknowledges every received segment from the ip layer .",
    "it collects up to @xmath11 segments in a buffer .",
    "this quantity is sufficient for decoding since @xmath19 bears the mds property . after decoding , the nc layer hands the decoded @xmath11 segments ( the segments which arrived from the tcp at the transmitter ) to the receiver side tcp .",
    "back at the transmitter , the nc layer counts the acknowledgments of coded segments . if their number is greater than some system parameter which we call the _ speculative ack threshold _",
    ", then the nc layer acknowledges all @xmath11 data segments to the tcp .",
    "this is a _ speculative acknowledgment _ since at this time the receiver side tcp did not necessarily receive all the @xmath11 data segments  some might still be stuck within the nc layer .",
    "however , the receiver side nc layer will be able to reconstruct the missing data segments from one of the following received codewords .",
    "our simulations show that this happens very fast if the system parameters are chosen appropriately .    the nc layer behavior at the transmitter and receiver is shown in algorithms  [ alg : transmitter ] and [ alg : receiver ] , respectively .",
    "note that the procedures handle_tcp_handshake ( ) and handle_tcp_teardown ( ) are both capable of handling incoming syn segments from tcp and ip .",
    "after the coarse description of the nc layer , we now focus on some details .",
    "the nc layer copies most of the tcp layer s functionalities , e.g. sequence numbers and the header structure .",
    "the following subsections deal with the relations , similarities and differences between the nc and the tcp layer .      the nc layer protocol reuses parts of the tcp header without any modification .",
    "to reduce protocol overhead , these common header parts can be stripped off the tcp header before encoding of the tcp segments .",
    "they can be easily reconstructed at the receiver side by simple extraction from the nc header .",
    "the common and stripped  off header parts are source port , destination port , all control flags except ack , and sequence number .",
    "see notes about the latter one in section  [ subsec : seqnum ] . the reused and stripped  off header fields are blue shaded in figure  [ fig : headers ] .    the remaining tcp header fields are not required by the nc layer .",
    "thus , they are not part of the nc layer header and become part of the encoded tcp segment , i.e. the nc layer payload data .",
    "the tcp header fields which are encoded include acknowledgment number , offset , reserved , window , checksum , urgent pointer and options .",
    "they are non - shaded on the left - hand side of figure  [ fig : headers ] .    besides the reused tcp header fields , the nc layer adds two additional header fields , i.e. symbol indicator ( symb . ) and nc options .",
    "the new fields are yellow shaded on the right - hand side of figure  [ fig : headers ] .",
    "the symbol indicator is responsible to determine the position of a segment within an mds codeword , for details see the following section .",
    "the nc options are not used in the current basic version of our protocol .",
    "they might be used to signal adaptions of code rate or speculative ack threshold in later versions .",
    "we have already mentioned the symbol indicator field in the previous section . in the tcp layer ,",
    "the sequence number is responsible to order segments at the receiver side .",
    "the sequence number is incremented by one for each transmitted segment .",
    "consider an information vector consisting of @xmath11 tcp segments .",
    "the position of each tcp segment is uniquely determined by it s sequence number .",
    "but now the information vector is encoded into a codeword consisting of @xmath16 segments .",
    "the nc layer should be able to uniquely determine the position of each segment , this is achieved by the symbol indicator field .",
    "the procedure is as follows : the first @xmath11 segments of an mds codeword simply copy the sequence numbers from tcp to their nc sequence number field . their symbol indicator field is set to all zeros .",
    "the remaining @xmath32 segments share the sequence number of the @xmath11-th segment but their symbol indicator field is incremented by one for each segment .",
    "simple concatenation of sequence number and symbol indicator provides unique identification of each segment s position within an mds codeword .",
    "more precisely , let @xmath33 denote the tcp sequence number and @xmath34 the symbol indicator .",
    "then the value @xmath35 uniquely determines the position of each segment .",
    "the length of the symbol indicator field is @xmath36 bit , hence an mds codeword can contain at most @xmath37 redundancy segments .",
    "this bounds the minimal code rate by @xmath38 which seems to be sufficient for all practical applications .",
    "no tcp acknowledgments are transmitted over an nc enabled network . on the receiver side ,",
    "any tcp acknowledgments are discarded immediately . on the transmitter side ,",
    "the tcp acknowledgments are  transmitted  only between the nc and the tcp layers .",
    "hence , the ack flag is the only flag which is not reused and stripped off before encoding .",
    "it is overwritten by the nc layer and used for nc acknowledgment segments , i.e. nc layer segments with empty payload transmitted from the receiver to the transmitter .      besides the change of the mss",
    ", the nc layer does not introduce any new routines for connection setup and teardown .",
    "this functions are inherited from the tcp layer . if any connection management segment is detected by the nc layer it starts the corresponding routine . in case of a tcp teardown or a connection reset ,",
    "the nc layer schedules a self  reset immediately .",
    "the result of this is that the tcp and the nc layer share a common state for the full duration of a connection .",
    "in this section we give simulation results to obtain some insights in the general behavior , advantages and disadvantages of the proposed end  to  end algebraic network coding based on mds codes scheme .",
    "all simulations were done using the network simulator ns2 @xcite and a basic network topology with one bottleneck link , see figure  [ fig : topology ] .",
    "traffic is generated by two ftp sources a1 and a2 which transmit to sinks s1 and s2 , respectively .",
    "the bottleneck in this setup is link n3@xmath39n4 , with a reduced data rate of only 1 mbit / s .",
    "nc layer segments are erased within the network with probability _ per ( packet erasure rate)_.        for all simulations we have used an algebraic code with rate @xmath40 and mds property .",
    "we refrain from giving the detailed code parameters here since this section is devoted to the general behavior of the nc scheme .",
    "figure  [ fig : comparison ] compares the achievable network throughput in tcp segments per second for a range of per values .",
    "as expected , the nc  enabled tcp is outperformed by traditional tcp in channels with low per .",
    "however , when the channel state deteriorates the traditional tcp throughput quickly falls below the nc  enabled version s throughput , which remains more or less constant over the full per range .",
    "this gives rise to a natural extension of the nc scheme , which adapts the coding rate according to the current state of the channel .",
    "the nc options field in the nc layer header can be utilized for this purpose , see section  [ subsec : header ] .",
    "the throughput gain of nc  enabled tcp can be interpreted as follows . in a traditional tcp environment ,",
    "the protocol copes with increased per by retransmission of non - acknowledged segments by _ adaptive repeat request ( arq)_. this causes a significant amount of delay , especially when the per is very high .",
    "the nc  enabled tcp s strategy to cope with increased per is to send redundant segments in advance , such that the receiver is not required to wait for requested retransmissions even if segments were erased in the network .",
    "depending on the round trip time and the selected code parameters , this enables the nc  enabled tcp to achieve a higher throughput than traditional tcp as shown by our simulations .    besides throughput , the most important performance measure of the nc  enabled",
    "tcp is fairness , i.e. how fair available network capacities are distributed among the transmitting nodes of a network .",
    "we should distinguish between fairness    * of the nc  enabled tcp against traditional tcp and * of a pure nc  enabled environment .    the fairness simulation results for both cases are shown in figure  [ fig : nc_vs_tcp ] and figure  [ fig : nc_vs_nc ] , respectively . in both figures , two connections are active over the bottleneck link . in terms of figure",
    "[ fig : topology ] this means that node a1 is transmitting to node s1 and node a2 is transmitting to node s2 .    in the nc / tcp case of figure  [ fig : nc_vs_tcp ]",
    ", it can be seen that nc  enabled tcp does not behave fair against traditional tcp .",
    "it dominates the bottleneck link and at any time instance achieves a higher throughput compared to traditional tcp . however , traditional tcp",
    "still can use a constant and non - zero share of the bottleneck s capacity , and hence gradual deployment of nc  enabled tcp is still feasible .        in the nc / nc case of figure  [ fig : nc_vs_nc ]",
    ", we observe that after a short balancing period , both nc  enabled tcp links receive approximately the same share of the bottleneck s capacity .",
    "thus , our scheme can be considered as fair in a homogeneous environment .        for reference",
    ", we also give fairness simulation results for a pure traditional tcp environment in figure  [ fig : tcp_vs_tcp ] .",
    "in this paper we proposed a network coding scheme based on mds codes for application in tcp / ip networks over wireless links .",
    "a new layer between the ip and tcp layers was introduced , which hides segment losses caused by the data link layer to the tcp .",
    "this is achieved by encoding a set of @xmath11 tcp segments into a larger set @xmath16 of encoded nc layer segments and transmitting the larger set .",
    "the receiver is then able to reconstruct all @xmath16 segments by receiving an arbitrary subset of cardinality @xmath11 by using the mds property of the used code .",
    "furthermore , the fairness between two tcp streams was studied .",
    "it turns out that an nc  enabled tcp stream dominates a traditional tcp stream .",
    "however , the fairness property is retained if both streams use nc  enabled tcp .    the proposed network coding scheme rises up an abundance of new research questions . first , optimal code parameters should be derived for realistic settings , i.e. the product of symbol length and dimension should match the average segment size of tcp to avoid padding .",
    "second , the scheme should be modified such that it can adapt to the channel conditions .",
    "it is counter - productive to apply encoding of segments when the packet erasure rate is small and in this case the coding rate bounds the achievable throughput . in an adaptive version of the scheme ,",
    "the code rate might be adapted such that high rates ( in the extremal case even code rate @xmath41 which means no encoding at all ) are used at low packet erasure rates and smaller code rates are used in the opposite case .",
    "third , one might think about exploiting the error correction capabilities of the utilized mds codes , i.e. to cope with maliciously introduced packet errors .",
    "d.  silva , f.  r. kschischang , and r.  koetter , `` a rank - metric approach to error control in random network coding , '' in _ information theory for wireless networks , 2007 ieee information theory workshop on _ , july 2007 , pp .",
    "15 .",
    "v.  r. sidorenko , f.  shen , e.  krouk , and m.  bossert , `` punctured reed ",
    "solomon codes at the transport layer of digital networks , '' in _ proc .",
    "coding theory days in st .",
    "petersburg _ , st . petersburg , russia , october 2008 ."
  ],
  "abstract_text": [
    "<S> the _ transmission control protocol ( tcp ) _ was designed to provide reliable transport services in wired networks . in such networks </S>",
    "<S> , packet losses mainly occur due to congestion . </S>",
    "<S> hence , tcp was designed to apply congestion avoidance techniques to cope with packet losses . </S>",
    "<S> nowadays , tcp is also utilized in wireless networks where , besides congestion , numerous other reasons for packet losses exist . </S>",
    "<S> this results in reduced throughput and increased transmission round  trip time when the state of the wireless channel is bad . </S>",
    "<S> we propose a new network layer , that transparently sits below the transport layer and hides non congestion  imposed packet losses from tcp . </S>",
    "<S> the network coding in this new layer is based on the well  known class of _ maximum distance separable ( mds ) _ codes . </S>"
  ]
}
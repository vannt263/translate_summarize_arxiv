{
  "article_text": [
    "to solve the problem of detecting modules in the presence of trees , we introduce the idea of a reluctant backtracking random walker that admits a small probability of returning to a node immediately .",
    "the reluctance , but not impossibility , of immediately returning to a node mitigates network hub effects on the spectrum of the operators , while allowing the walker to explore and return from hanging trees unlike the non - backtracking operator or flow matrix .",
    "based on this idea of reluctance , we define two new reluctant backtracking operators @xmath16 whose matrix elements are @xmath17\\frac{1}{d_i -1 + \\frac{1}{d_j}}\\end{aligned}\\ ] ]    where @xmath18 and @xmath19 represents the probability that the random walker shall move from node @xmath8 to node @xmath9 with nodes @xmath10 and @xmath20 as intermediate nodes .",
    "the probability of returning to a node for both operators @xmath16 is inversely proportional to the degree of the node , thus discouraging strongly a return to a high degree node .",
    "the operator @xmath21 is a reluctant version of the non - backtracking operator @xmath4 as it allows the additional probability @xmath22 of returning immediately to the node @xmath8 .",
    "the operator @xmath23 is a normalised version of the operator @xmath21 just like the flow operator @xmath11 is a normalised version of the non - backtracking operator @xmath4 .",
    "the probability of reaching a node is equal to the probability of leaving a node akin to the conservation of current at each node in an electrical network for the normalised operators @xmath23 and @xmath11 .",
    "the procedure for detecting the communities is identical for both operators . given the adjacency matrix of a network , we first generate one of the matrices @xmath24 .",
    "following krzakala et al .",
    "@xcite , we calculate its second largest absolute real eigenvalue and the associated eigenvector .",
    "the eigenvector has @xmath2 elements corresponding to each directed edge in the network .",
    "we group the elements of the eigenvector by the group index of the source node of each edge and sum them up to create a new vector that has @xmath0 elements corresponding to each node in the network .",
    "we divide the network into two communities by grouping all nodes that have the same sign ; the sign of each element represents the estimate of the reluctant backtracking operators of the node s community .",
    "the indifference of non - backtracking operators towards trees can impair their abilities to detect communities in networks .",
    "as an extreme case , consider the network suggested by newman  @xcite : a network composed of two binary trees connected at a single node .",
    "the non - backtracking operator @xmath4 and the flow matrix @xmath11 can not detect communities in such a network , but the reluctant backtracking operators @xmath21 and @xmath23 do .",
    "we show this using a network composed of two communities @xmath25 and @xmath26 where each community is a tree and the two communities are connected by a _",
    "single _ node .",
    "the ratio of number of nodes in community @xmath25 and @xmath26 is denoted by @xmath27 .",
    "figure  [ fig : example ] shows the performance of the reluctant backtracking operators in detecting the two communities in these simulated networks .",
    "the number of nodes in community @xmath25 is fixed at 400 and 500 in figure  [ fig : example ] panel ( a ) and panel ( b ) respectively , and the number of nodes in community @xmath26 varies . when the size of the two communities is comparable , the reluctant operators detect communities perfectly since the two communities are almost disconnected except one connection between the two communities and random walkers remain within the same community for substantial periods of time .",
    "there is a sharp transition in the ability of the reluctant backtracking operators around @xmath28 in the network where community @xmath25 consists of 400 nodes .",
    "when one community becomes much smaller than the other , random walkers keep moving to the larger community from the small community in a short period of time and leads to the loss of performance .",
    "there is nothing universal about the transition point fraction @xmath29 as the transition point is a function of the number of nodes in the network and changes to @xmath30 when community @xmath25 has 500 nodes .",
    "the exact nature of transition in performance around the transition point @xmath27 is dependent on many factors such as the structure of the network , total number of nodes in the network and the relative sizes of different communities .     as a fraction of nodes in community @xmath25 .",
    "the triangles and squares show the performance of the two operators in detecting communities as measured by the normalised mutual information ( nmi ) : @xmath31 , where @xmath32 means perfect community detection and @xmath33 means random allocation of nodes to communities ( see methods for more details ) .",
    "( a ) 400 nodes in community @xmath25 .",
    "number of nodes in community @xmath26 varies from from 40 to 400 .",
    "( b ) 500 nodes in community @xmath25 .",
    "number of nodes in community b varies from 50 to 500.,title=\"fig : \" ] +      networks composed solely of trees are of course very artificial , but we also show that reluctant backtracking operators can detect communities in a more plausible network where the non - backtracking operators fail . consider a more typical network , created by the classic stochastic block model .",
    "the addition or deletion of hanging trees to this network or any other will not affect the eigenspectrum of the non - backtracking operator @xmath4 . however , the presence / absence of hanging trees can significantly alter the structure of communities in such a network .",
    "stochastic block models provide an easy recipe for constructing networks with specified inter - community and intra - community edge probability .",
    "consider a network of @xmath0 nodes with two communities .",
    "the probability of an edge between nodes @xmath10 and @xmath8 is given by    @xmath34    let @xmath35 be the average degree of the network and @xmath36 denote the degree of mixing between communities in the network .",
    "no mixing between the communities implies @xmath37 and complete mixing between the 2 communities implies @xmath38 .",
    "we demonstrate the effect of hanging trees by selectively adding leaves to a network based on the stochastic block model .",
    "we create a stochastic block model network with 2 communities , each with 500 nodes , @xmath39 .",
    "we add one leaf to each node whose number of connections within the community exceeds its connections outside its community by at least 3 .",
    "this selects the nodes whose degree is greater than the median and whose membership is slightly ambiguous .",
    "figure  [ fig : leaves ] shows the eigenspectrum and performance of the non - backtracking operator @xmath4 and reluctant backtracking operator @xmath21 for such a network .",
    "the non - backtracking operator @xmath4 does not detect two communities as there is only one real eigenvalue outside the bulk .",
    "the additional information provided by the leaves is not available to the non - backtracking operator . on the other hand ,",
    "the reluctant backtracking operator accounts for the leaves in the network and its second eigenvector successfully detects two communities .",
    "@xmath0 denotes the number of nodes in the network .",
    "@xmath1 denotes the number of undirected edges in the network .",
    "all the random walk operators are square matrices of order @xmath2 . a ) eigenvalues of a representative non - backtracking matrix .",
    "note that there is only 1 real eigenvalue outside the bulk .",
    "b ) eigenvalues of a representative reluctant backtracking matrix.,title=\"fig : \" ] +      the quality of community detection is inversely proportional to the degree of mixing between different communities in a network .",
    "theoretical considerations predict that performance of any spectral method falls to zero below a predictable mixing threshold for simulated networks based on the stochastic block model  @xcite .",
    "the networks become spectrally indistinguishable from erds - rnyi random graphs below the predicted mixing threshold , and therefore no communities can no longer be detected by spectral methods .",
    "the minimum network mixing variable , @xmath40 where any spectral method can detect communities in networks based on the stochastic block model is labeled the threshold limit .",
    "consequently , simulated networks based on the stochastic block model serve as a useful benchmark for testing the performance of different community detection methods .",
    "krzakala et al .",
    "@xcite showed that the non - backtracking operator @xmath4 can detect communities in sparse networks right down to the theoretical limit where other spectral methods fail .",
    "figure  [ fig : blockmodel ] shows the performance of the four operators @xmath41 and @xmath23 on a set of networks based on the stochastic block model with @xmath42 nodes with constant average node degree and varying degrees of mixing between communities(@xmath43 ) .",
    "the reluctant backtracking operator @xmath21 s performance is comparable to the non - backtracking matrix @xmath4 , but the operator @xmath23 performance falls to chance above the threshold limit .",
    "thus the reluctant backtracker @xmath21 accounts for hanging trees in a network , yet there is no penalty for detecting communities down to the theoretical limit .",
    "each data point shows the mean and standard deviation of nmi for the different operators as applied to @xmath44 networks with the given mixing parameters .",
    ", title=\"fig : \" ] +      table  [ table : real_data ] and figure  [ fig : real_data ] compares the effectiveness of the reluctant and non- backtracking matrices on three real world data sets : zachary karate club  @xcite , dolphins  @xcite and word adjacencies  @xcite . in figure",
    "[ fig : real_data ] we plot the distribution of eigenvalues of each operator , showing that both the non - backtracking ( @xmath4 , @xmath11 ) and reluctant - backtracking ( @xmath21 , @xmath23 ) operators have more than one outlying eigenvalue and can thus detect community structure in these networks .",
    "the reluctant backtrackers detect communities comparably to their respective non - backtracking counterparts , and there is no loss of performance when using the reluctant matrices rather than the non - backtracking matrices .",
    "rather , we found that the main difference in performance depended on whether or not the operators are normalised .",
    "this is particularly striking for the dolphin social network , for which the normalised operators perform similarly and both markedly better than the unnormalised versions .",
    "@xcite and @xmath45 @xcite , where @xmath46 is degree , and @xmath47 is an average .",
    "these bounds were derived for the stochastic block model , so are used here as an heuristic guide for the distribution of eigenvalues resulting from the real - world networks , and computed using their degree distribution .",
    "@xmath0 denotes the number of nodes in the network .",
    "@xmath1 denotes the number of undirected edges in the network .",
    "all the random walk operators are square matrices of order @xmath2 . ]",
    "newman  @xcite showed that the second leading eigenvector of the flow matrix @xmath11 maximises the widely - used modularity function @xmath48 @xcite , connecting the non - backtracking method to the idea of community detection as an optimisation problem .",
    "we show that the reluctant backtracking operator @xmath23 also approximately optimises the modularity function @xmath48 .",
    "assume an unweighted undirected network of size @xmath0 with @xmath1 edges specified by the adjacency matrix a. the modularity function @xmath48 is defined as    @xmath49      \\delta_{g_ig_j}\\\\      a_{ij } & : \\textrm{presence / absence of edge between nodes $ i$ and $ j$ } \\nonumber   \\\\",
    "d_i & : \\textrm{degree of node } i \\nonumber \\\\      g_i & : \\textrm{group membership of node }",
    "i \\nonumber\\\\          m & : \\textrm{number of edges in the network } \\nonumber \\label{eq : modularity1}\\end{aligned}\\ ] ]    following newman s setting and notation  @xcite , assume that the network is divided into two communities and define the @xmath0 dimensional group membership vector @xmath50 with elements @xmath51 denoting the membership of each node in the network .",
    "we define the quadratic form    @xmath52    if we make the particular choice @xmath53 , meaning that the elements of both vectors @xmath54 and @xmath55 are equal to the group index of the node from which the corresponding edge _ emerges _",
    ", then @xmath56 \\frac{1}{d_i -1 + \\frac{1}{d_j } } s_j s_i    \\nonumber\\\\   & = \\sum_js_j \\sum_{ik } \\bigg[\\frac{1}{d_i -1 + \\frac{1}{d_j } } \\frac{1}{d_j } a_{ik } a_{ij } \\delta_{jk}+ \\frac{1}{d_i -1 + \\frac{1}{d_j } } ( 1-\\delta_{jk})a_{ik } a_{ij } \\bigg ] s_i \\nonumber\\\\    & = \\sum_js_j \\sum_{i } a_{ij}s_i\\bigg[\\frac{1}{d_i -1 + \\frac{1}{d_j } } ( \\frac{1}{d_j }   +   d_i -1 ) \\bigg]\\nonumber\\\\   & = \\sum_js_j \\sum_{i } a_{ij}s_i \\nonumber \\\\   & = { \\mathbf}{s}^t{\\mathbf}{a}{\\mathbf}{s } \\label{eq : deriv1}\\end{aligned}\\ ] ]    also it follows that @xmath57    therefore @xmath58    since the normalised reluctant backtracker @xmath23 also optimises the modularity function , our spectral solution coincides with newman s .",
    "we summarise newman s solution here , refer to  @xcite for further details . solving equation",
    "[ eq : modularity_eq ] exactly is hard but an approximate solution can be found by standard relaxation techniques .",
    "allow @xmath55 and @xmath54 to independently take any real value rather than only @xmath59 and apply the constraint that @xmath60 .",
    "this modified problem can be solved by the method of lagrange multipliers .",
    "we get the following equation by introducing the multiplier @xmath61 and differentiating with respect to elements of @xmath55 @xmath62 the leading eigenvector of @xmath63 or the second leading real eigenvector of @xmath23 exactly optimises the relaxed problem .",
    "we arrive at the approximate solution of the original unrelaxed problem by setting @xmath64 , i.e. we sum up all the elements of the eigenvector that emerge from node @xmath10 and assign @xmath65 if the sum is positive or @xmath66 if it is negative .",
    "this is very similar to the algorithm used by krzakala et al .",
    "@xcite with the difference that we sum up edges emerging from a node rather the ones incident upon it .",
    "we propose a new reluctant backtracking operator to detect communities in sparse networks that accounts for hanging trees .",
    "unlike other recent operators such as the non - backtracking matrix and the flow matrix , the reluctant backtracking operator accounts for the presence of hanging trees in a network and its eigenspectrum is shaped by their presence .",
    "we demonstrate the utility of the reluctant backtracking operator by detecting communities in simulated networks where the non - backtracking matrix is unable to do so and also show a comparable ability to detect communities in benchmark simulated and real networks .",
    "newman  @xcite showed that the second leading eigenvector of the flow matrix approximately maximises the modularity function by ensuring conservation of probability at each node similar to the conservation of electric current at each node in an electrical network . following a similar argument",
    "we also show that the eigenvector of the normalised reluctant backtracking matrix @xmath23 approximately maximises the modularity function .",
    "an interesting future problem is to extend this method to reliably detect more than two communities .",
    "determining the number of communities in a network is a problem by itself and knowing the number of communities in a network can improve the performance of community detection methods  @xcite .",
    "krzakala et al .",
    "@xcite suggested a heuristic to determine the number of communities in a given network when using the non - backtracking matrix @xmath4 .",
    "they derived an approximate analytical bound for the uninformative eigenvalues lying inside the bulk for sparse stochastic block model networks and found that the number of real - valued eigenvalues lying outside the bulk s radius served as a good heuristic to estimate of the number of modules in model networks .",
    "newman derived a similar bound for the flow matrix @xmath11 @xcite . when applied to real - world networks ,",
    "a further heuristic is to compute these bounds using the mean degree of the real - world network and use them as a guide to the number of modules in that network .",
    "we plot these approximated bounds for our sample of real - world networks in figure [ fig : real_data ] ; we note that , like the flow matrix @xmath11 , the eigenvalue distribution for our normalised reluctant backtracker @xmath23 is particularly well - behaved with respect to the approximated bounds compared to the unnormalised matrices .",
    "we leave the determination of the bound for the reluctant operators for future work , as they do not follow simply from those derived for the non - backtracking matrices .    however , because of the approximations involved , the heuristic can fail for real  @xcite and simulated networks  @xcite , by predicting too many real - valued eigenvalues outside the bulk and thus predicting too many modules . the optimisation of modularity @xmath48 by the second eigenvector of both the flow @xmath11 and normalised reluctant - backtracker @xmath23 matrices suggests two further solutions for finding more than two communities .",
    "the first solution is a more cautious approach that treats the total number @xmath67 of real eigenvalues outside the approximated bulk radius as an upper limit for the number of communities in the network @xcite .",
    "we can identify these communities by first taking each of the @xmath68 eigenvectors corresponding to the @xmath68 eigenvalues ( remembering that we start from the second eigenvector ) and converting them into a length @xmath0 vector as before ",
    "we sum over the eigenvector entries corresponding the same source node .",
    "we can then cluster in the @xmath69 space defined by these node vectors , using a standard clustering algorithm such as @xmath9-means : we cluster for each @xmath70 $ ] , and compute @xmath48 for each @xmath9 , retaining the clustering that maximises @xmath48 .",
    "the second solution is to apply the iterative bisection algorithm from @xcite .",
    "we initially divide the network into two communities using the second leading eigenvector of @xmath11 or @xmath23 , then iteratively divide each sub - division using the same algorithm .",
    "we compute @xmath48 for each sub - division ( adjusted to account for the remainder of the network @xcite ) , stopping when @xmath71 .",
    "the difference in performance between the normalised and non - normalised versions of the operators on the real - world networks hints that normalisation is incorporating more information about the network s structure than is available to the unnormalised operator .",
    "normalisation adds information about the degree of the transition node @xmath10 in the path @xmath72 to each non - zero element of the matrix of the normalised operators @xmath11 and @xmath23 .",
    "by contrast , each path from node @xmath73 in the non - backtracking matrix @xmath4 has an equal weight of 1 irrespective of the degree of the intermediate node @xmath10 .",
    "this new information affects the eigenspectrum of the normalised operators , and thus likely leads to the observed differences in community detection performance .",
    "precisely how and when this additional information is beneficial for detecting communities is presently unclear , and is the subject of future work .",
    "given a network with two partitions that label the community membership of each node , normalised mutual information ( nmi ) quantifies the overlap between these two partitions .",
    "nmi serves as a metric to quantify the absolute performance of a community detection method and compare the relative performance of different methods .",
    "assume a network with @xmath74 nodes and partitions @xmath75 and @xmath76 .",
    "@xmath77 is the subset of nodes in the network that belong to group @xmath10 in partition @xmath75 and @xmath78 is the subset of nodes in the network that belong to group @xmath8 in partition @xmath76 .",
    "let @xmath79 and @xmath80 be the number of groups in the partitions @xmath75 and @xmath76 respectively .",
    "the confusion matrix @xmath81 captures the overlap between the two partitions , its element @xmath82 counts the number of nodes common to the groups @xmath77 and @xmath78 . normalised mutual information  @xcite",
    "is defined as @xmath83 where @xmath84 nmi always lies between @xmath85 and @xmath86 ; @xmath87 only if the partitions @xmath75 and @xmath76 are identical and @xmath88 only if the partitions @xmath75 and @xmath76 are completely independent of each other .",
    "+      given the adjacency matrix of a network , we first generate one of the matrices @xmath24 .",
    "following krzakala et al .",
    "@xcite , we calculate its second largest absolute real eigenvalue and the associated eigenvector .",
    "the eigenvector has @xmath2 elements corresponding to each directed edge in the network .",
    "we group the elements of the eigenvector by the group index of the source node of each edge and sum them up to create a new vector that has @xmath0 elements corresponding to each node in the network .",
    "we divide the network into two communities by grouping all nodes that have the same sign ; the sign of each element represents the estimate of the reluctant backtracking operators of the node s community .    if the network has less than 500 nodes , we calculated all the eigenvalues and eigenvectors using the eig function in matlab",
    ". if the network was larger than 500 nodes , we first calculated the largest 50 eigenvalues by magnitude and the associated eigenvectors using the eigs function in matlab that is suited for sparse matrices and is based on the implicitly restarted arnoldi iteration method  @xcite .",
    "we then selected the eigenvalues whose complex part was less than @xmath89 and finally chose the eigenvalue with the second highest magnitude and its associated eigenvector .    * author contributions * : as and mh designed the study . as analysed the data and prepared figures . as and",
    "mh wrote the manuscript . +",
    "* competing financial interests * : the authors declare no competing financial interests ."
  ],
  "abstract_text": [
    "<S> spectral algorithms based on matrix representations of networks are often used to detect communities but classic spectral methods based on the adjacency matrix and its variants fail to detect communities in sparse networks . </S>",
    "<S> new spectral methods based on non - backtracking random walks have recently been introduced that successfully detect communities in many sparse networks . </S>",
    "<S> however , the spectrum of non - backtracking random walks ignores hanging trees in networks that can contain information about the community structure of networks . </S>",
    "<S> we introduce the reluctant backtracking operators that explicitly account for hanging trees as they admit a small probability of returning to the immediately previous node unlike the non - backtracking operators that forbid an immediate return . </S>",
    "<S> we show that the reluctant backtracking operators can detect communities in certain sparse networks where the non - backtracking operators can not while performing comparably on benchmark stochastic block model networks and real world networks . </S>",
    "<S> we also show that the spectrum of the reluctant backtracking operator approximately optimises the standard modularity function similar to the flow matrix . </S>",
    "<S> interestingly , for this family of non- and reluctant - backtracking operators the main determinant of performance on real - world networks is whether or not they are normalised to conserve probability at each node .    </S>",
    "<S> many networks have a modular structure . </S>",
    "<S> social networks contain communities of friends @xcite , collaborators @xcite , and dolphins @xcite ; brain networks contain groups of correlated neurons @xcite , circuits of connected groups @xcite , and regions of connected circuits @xcite . </S>",
    "<S> similarly modular networks occur across biological domains from protein interaction networks to food webs @xcite . </S>",
    "<S> this range of applications has driven the dramatic development of  community detection \" methods for solving the core problem of finding modules within an arbitrary network @xcite . especially popular are spectral methods based on the eigenvalues and eigenvectors of some matrix representation of the network . </S>",
    "<S> these combine speed of execution with considerable information about the network beyond the modular structure @xcite , including the relative roles of each node @xcite and characterisation of the network s dynamical properties @xcite .    </S>",
    "<S> spectral methods can fail for a range of real networks . </S>",
    "<S> these methods rely on the eigenvalues falling into two classes , the vast majority  the  bulk \"  following a well - defined distribution , and the outliers from that distribution giving information about the modular structure . </S>",
    "<S> topological features of a network unrelated to its modules , such as network hub nodes with high degree , can distort this distinction by introducing eigenvalues outside the bulk that mix with those containing information about modules@xcite . </S>",
    "<S> sparse networks often contain such network hubs and the outlying uninformative eigenvalues cause the breakdown of spectral methods @xcite . </S>",
    "<S> unfortunately many real - world networks are sparse ( see table ii in @xcite and table 1 in @xcite ) .    </S>",
    "<S> krzakala et al . </S>",
    "<S> @xcite proposed a new  non - backtracking \" matrix representation of a network that solves this problem : their matrix represents a random walker on the network who can not immediately return to a node it has just left . </S>",
    "<S> the eigenspectrum of the adjacency and related matrices is closely related to properties of a random walker traversing a network . </S>",
    "<S> in particular , the eigenspectrum depends on the frequency with which the walker passes through any given node . </S>",
    "<S> as the non - backtracking matrix forbids the random walker to return to its immediately previous node , network hubs are not visited disproportionately by this random walker and the spectrum of this random walker is not distorted by the presence of hubs in the network . following this </S>",
    "<S> , newman introduced the closely - related  flow \" matrix @xcite that conserved the probability for the random walk . </S>",
    "<S> spectral methods applied to these matrices successfully recover modules in sparse networks , down to the theoretical limit for their detection in classes of model networks @xcite .    </S>",
    "<S> however , as noted by newman @xcite , these represent an incomplete solution as networks containing trees can not be handled elegantly . </S>",
    "<S> because the random walker could not escape from such a tree once entered , trees are ignored despite being candidates for separate modules . in this paper </S>",
    "<S> we introduce the  reluctant backtracker \" approach , which combines the advantages of these new matrix representations by retaining the power of spectral methods for sparse networks with the ability to detect and correctly handle networks with trees . </S>",
    "<S> we show that this comes with no penalty for detection performance compared to non - backtracking and flow matrices . </S>",
    "<S> rather , we show that the main difference in performance depends on whether or not such matrix representations are normalised to conserve probability . </S>",
    "<S> this finding hints at some deeper difference in network structure than modularity alone .      </S>",
    "<S> we first outline the non - backtracking @xcite and flow matrix @xcite approaches . </S>",
    "<S> both these approaches and ours start from the same representation of the network . </S>",
    "<S> assume an unweighted undirected connected network with @xmath0 vertices and @xmath1 edges without self loops . </S>",
    "<S> we convert the undirected network into a directed network with @xmath2 edges by replacing the undirected edge with directed edges in both directions ; @xmath3 showing the direction of the edge . </S>",
    "<S> the binary non - backtracking matrix @xmath4 has @xmath5 elements , each element corresponding to a pair of directed edges in the network . </S>",
    "<S> its elements are given by    @xmath6    the non - backtracking matrix is a sparse binary matrix . </S>",
    "<S> elements are non - zero only if @xmath7 corresponds to a directed path from @xmath8 to @xmath9 that passes through node @xmath10 with the restriction that nodes @xmath8 and @xmath9 must not be identical , i.e. no backtracking . </S>",
    "<S> this matrix encapsulates the biased random walker that is prohibited from returning to its immediately previous node .    </S>",
    "<S> newman modified the non - backtracking matrix by changing the values of its non - zero elements and called it the flow matrix @xmath11 . </S>",
    "<S> the matrix @xmath11 is called the flow matrix based on an analogy with current flow in an electrical network . </S>",
    "<S> its elements are given by @xmath12    where @xmath13 is the degree of the node @xmath10 . </S>",
    "<S> consider the random walker that starts from node @xmath8 and is passing through node @xmath10 . according to the flow matrix </S>",
    "<S> , the random walker is can reach any of the @xmath14 nodes except node @xmath8 with equal probability . </S>",
    "<S> the probability of reaching node @xmath9 from node @xmath8 passing through node @xmath10 is @xmath15 . </S>",
    "<S> therefore , probability is conserved at node @xmath10 just like current is conserved at each node in an electrical network ; the amount of current entering a node must be equal to the current leaving a node . </S>",
    "<S> krzakala et al .  </S>",
    "<S> @xcite and newman  @xcite respectively showed that the 2nd leading eigenvector of the non - backtracking and flow matrices is very successful in correctly dividing sparse networks into modules . </S>"
  ]
}
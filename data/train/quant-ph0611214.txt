{
  "article_text": [
    "quantum entanglement , a phenomenon that has no counterpart in the classical realm , is widely recognized as an important resource in quantum computing and quantum information theory@xcite . _ stabilizer states _ form a particularly interesting class of multipartite entangled states , which play important roles in areas as diverse as quantum error correction@xcite , measurement - based quantum computing , and cryptographic protocols@xcite .",
    "a stabilizer state on @xmath9 qubits is defined as the common eigenstate of its _ stabilizer _ : a maximally abelian subgroup of the @xmath9-qubit pauli group @xmath10 generated by the tensor products of the pauli matrices and the identity@xcite .",
    "recently , a special subset of stabilizer states ( known as _ graph states _ due to their association with mathematical graphs ) has become the subject of intensive study , and has proven to be useful in several fields of quantum information theory@xcite .    despite their importance in quantum information science ,",
    "multipartite entangled states are still far from being well understood@xcite .",
    "the study of multipartite entanglement has usually focused on determining the equivalence classes of entangled states under local operations , but there are too many such equivalence classes under local unitary ( lu ) operations for a direct classification to be practical .",
    "the most commonly studied set of local operations are the invertible stochastic local operations assisted with classical communication ( slocc ) , which yield a much smaller number of equivalence classes .",
    "for example , for three qubits , there are only two classes of fully entangled states under slocc , while @xmath11 real parameters are needed to specify the equivalence classes under lu operations@xcite . however , the number of parameters needed to specify the equivalence classes under slocc grows exponentially with @xmath9 , where @xmath9 is the number of qubits , so that specifying the equivalence classes for all states rapidly becomes impractical for @xmath12@xcite .    for stabilizer states ,",
    "a more tractable set of operations to study is the local clifford ( lc ) group , which consists of the local unitary operations that map the pauli group to itself under conjugation .",
    "in addition to forming a smaller class of operations , the local clifford group has the additional advantage that the transformation of stabilizer states under lc operations can be reduced to linear algebra in a binary framework , which greatly simplifies all the necessary computations@xcite .",
    "it has been conjectured that any two stabilizer states which are lu equivalent are also lc equivalent ( i.e. @xmath13 holds for every stabilizer state ) .",
    "if this were true , all of the advantages of working with the local clifford group would be preserved when studying equivalences under an arbitrary local unitary operation . due to its far - reaching consequences , proving that the @xmath13 equivalence holds for all stabilizer states is possibly one of the most important open problems in quantum information theory .",
    "graph states may prove to play a pivotal role in the proof of this conjecture , as it has been shown that every stabilizer state is lc equivalent to some graph state@xcite .",
    "therefore , if it could be shown that @xmath13 holds for all graph states , it would follow that @xmath13 holds for all stabilizer states as well .",
    "furthermore , it has been shown that an lc operation acting on a graph state can be realized as a simple local transformation of the corresponding graph , and that the orbits of graphs under such local transformations can be calculated efficiently@xcite .",
    "these results indicate that if the @xmath13 equivalence holds for all graph states , any questions concerning stabilizer states could be restated in purely graph theoretic terms .",
    "this would make it possible to use tools from graph theory and combinatorics to study the entanglement properties of stabilizer states , and to tackle problems which may have been too difficult to solve using more traditional approaches .    an important step towards a proof has been taken by van den nest et al.@xcite , who have shown that two lu equivalent stabilizer states are also equivalent under lc operations if they satisfy a certain condition , known as the minimal support condition ( msc ) , which ensures that their stabilizers possess some sufficiently rich structure .",
    "they also conjecture that states which do not satisfy the msc will be rare , and therefore difficult to find .    in this paper , we seek to make some progress towards a proof of the @xmath13 conjecture , by proving that the @xmath14 equivalence holds for all stabilizer states whose corresponding graphs contain neither cycles of length @xmath1 nor @xmath2 .",
    "we also give some results complementary to those of van den nest et al .",
    ", by proving that the msc does not hold for stabilizer states of distance @xmath3 , and by explicitly constructing states of distance @xmath15 which also fail to satisfy the msc .",
    "our classification of stabilizer states is summarized in fig .",
    "[ paperdiag ] , which illustrates the relationship between the subsets covered by our results and those of van den nest et al . , as well as those states for which the @xmath13 equivalence remains open .",
    "our paper is organized as follows : we first present some background information on graph states and stabilizers in sec .",
    "[ sec : prelim ] . in sec .",
    "[ sec : maintheorem ] we prove our * main theorem * , which states that @xmath13 holds for any graph state ( and hence , any stabilizer state ) whose corresponding graph contains neither cycles of length @xmath1 nor @xmath2 .",
    "we go on to prove that all stabilizer states with distance @xmath3 fail to satisfy the msc , whereas all stabilizer states with @xmath15 which satisfy the hypotheses of our * main theorem * do satisfy the msc .",
    "we conclude sec .",
    "[ sec : maintheorem ] by using the proof of our * main theorem * to show that @xmath14 still holds for a particular subset of stabilizer states with @xmath3 . in sec .",
    "[ sec : dg2 ] , we provide explicit examples of stabilizer states with distance @xmath15 which fail to satisfy the msc : we identify all @xmath5 graphs of up to @xmath6 vertices which do not meet this condition , and construct two other series of graphs beyond the msc for @xmath16 @xmath17 from quantum error correcting codes with non - clifford transversal gates .",
    "we conclude in sec .",
    "[ sec : concl ] .     and the right area of the line are @xmath4 graphs ) ;",
    "b : @xmath0 graphs given by main theorem ; c : @xmath0 graphs given by van den nest et al.s criterion ; d : @xmath0 graphs of @xmath3 given by theorem 2 ; e : examples of @xmath4 graphs beyond the msc , given in sec .",
    "iv , whose @xmath0 equivalence remains open.,width=288 ]",
    "before presenting our * main theorem * , we state some preliminaries in this section .",
    "we discuss the stabilizer formalism and graph states in sec .",
    "iia . then in sec .",
    "iib we introduce the concept of minimal supports and van den nest et al.s criterion .",
    "the @xmath9-qubit pauli group @xmath18 consists of all @xmath19 local operators of the form @xmath20 , where @xmath21 is an overall phase factor and @xmath22 is either the @xmath23 identity matrix @xmath24 or one of the pauli matrices @xmath25 , @xmath26 , or @xmath27 .",
    "we can write @xmath28 as @xmath29 or @xmath30 when it is clear what the qubit labels are .",
    "the @xmath9-qubit clifford group @xmath31 is the group of @xmath32 unitary matrices that map @xmath18 to itself under conjugation .",
    "a stabilizer @xmath33 in the pauli group @xmath18 is defined as an abelian subgroup of @xmath18 which does not contain @xmath34 .",
    "a stabilizer consists of @xmath35 hermitian pauli operators for some @xmath36 . as the operators in a stabilizer commute with each other",
    ", they can be diagonalized simultaneously and moreover , if @xmath37 , then there exists a unique state @xmath38 on @xmath9 qubits such that @xmath39 for every @xmath40 .",
    "such a state @xmath38 is called the stabilizer state and the group @xmath41 is called the stabilizer of @xmath38 .",
    "a stabilizer state can also be viewed as a self - dual code over @xmath42 under the trace inner product@xcite .",
    "the distance @xmath43 of the state is the weight of the minimum weight element in @xmath44@xcite .",
    "two @xmath9-qubit states @xmath38 and @xmath45 are said to be local unitary ( lu ) equivalent if there exists an lu operation @xmath46 which maps @xmath45 to @xmath38 .",
    "two @xmath9-qubit states @xmath38 and @xmath45 are said to be local clifford ( lc ) equivalent if there exists an lu operation in the clifford group    @xmath47    which maps @xmath45 to @xmath38 , where @xmath48 for @xmath49 .    throughout the paper",
    "we will use @xmath50 and @xmath51 to denote operations of the form eq .",
    "( [ luo ] ) and ( [ lco ] ) , respectively .",
    "graph states are a special kind of stabilizer state associated with graphs@xcite .",
    "a graph @xmath52 consists of two types of elements , namely vertices ( @xmath53 ) and edges ( @xmath54 ) .",
    "every edge has two endpoints in the set of vertices , and is said to connect or join the two endpoints .",
    "the degree of a vertex is the number of edges ending at that vertex .",
    "a path in a graph is a sequence of vertices such that from each vertex in the sequence there is an edge to the next vertex in the sequence .",
    "a cycle is a path such that the start vertex and end vertex are the same .",
    "the length of a cycle is the number of edges that the cycle has .    for every graph @xmath52 with @xmath9 vertices ,",
    "there are @xmath9 operators @xmath55 for @xmath56 defined by @xmath57    it is straightforward to show that any two @xmath58s commute , hence the group generated by @xmath59 is a stabilizer group @xmath60 and stabilizes a unique state @xmath61 .",
    "we call each @xmath58 the standard generator associated with vertex @xmath62 of graph @xmath52 . throughout the paper we use @xmath61 to denote the unique state corresponding to a given graph @xmath52",
    ".    any stabilizer state is local clifford ( lc ) equivalent to some graph states@xcite .",
    "thus , it suffices to prove @xmath63 for all graph states in order to show that @xmath63 for all stabilizer states .",
    "the support @xmath64 of an element @xmath65 is the set of all @xmath66 such that @xmath22 differs from the identity .",
    "let @xmath67 be a subset of @xmath68 .",
    "tracing out all qubits of @xmath38 outside @xmath69 gives the mixed state @xmath70    using the notation @xmath71 , it follows from @xmath72 that @xmath73    a minimal support of @xmath74 is a set @xmath75 such that there exists an element in @xmath74 with support @xmath69 , but there exist no elements with support strictly contained in @xmath69 .",
    "an element in @xmath74 with minimal support is called a minimal element .",
    "we denote by @xmath76 the number of elements @xmath77 with @xmath78 .",
    "note that @xmath76 is invariant under lu operations@xcite .",
    "we use @xmath79 to denote the subgroup of @xmath74 generated by all the minimal elements .",
    "the following * lemma 1 * is given in @xcite .",
    "[ * lemma 1 * ] : let @xmath38 be a stabilizer state and let @xmath69 be a minimal support of @xmath74 .",
    "then @xmath76 is equal to 1 or 3 and the latter case can only occur if @xmath80 is even .",
    "if @xmath69 is a minimal support of @xmath74 , it follows from the proof of * lemma 1 * in @xcite that the minimal elements with support @xmath69 , up to an lc operation , must have one of the following two forms : @xmath81    eqs.([eq : msfour ] ) , ( [ eq : msfive ] ) and ( [ me ] ) directly lead to the following * fact 1 * , which was originally proved by rains in @xcite :    [ * fact 1 * ] : if @xmath45 and @xmath38 are lu equivalent stabilizer states , i.e. @xmath72 , then for each minimal support @xmath69 , the equivalence @xmath50 must take the group generated by all the minimal elements of support @xmath69 in @xmath82 to the corresponding group generated by all the minimal elements of support @xmath69 in @xmath44 .    based on the above * fact 1 * , the following * theorem 1 * was proven in @xcite as their main result :    [ * theorem 1 * ] : let @xmath38 be a fully entangled stabilizer state for which all three pauli matrices @xmath83 occur on every qubit in @xmath79 . then every stabilizer state @xmath45 which is lu equivalent to @xmath38",
    "must also be lc equivalent to @xmath38 .",
    "the condition given in * theorem 1 * , that all three pauli matrices @xmath83 occur on every qubit in @xmath79 , is called the minimal support condition ( msc ) .    for any lu operation @xmath84 which maps another stabilizer state @xmath45 to the stabilizer state @xmath38 ,",
    "the proof of * theorem 1 * further specifies the following    [ * fact 2 * ] : if all three pauli matrices @xmath83 occur on the @xmath85th qubit in @xmath79 , then @xmath86 must be a clifford operation .",
    "therefore , if the msc condition is satisfied for @xmath38 , then @xmath50 must be an lc operation .    in @xcite it is also shown that although @xmath9-ghz states@xcite do not possess this structure , @xmath63 still holds .",
    "we now present the new criterion we have found for the @xmath0 equivalence of graph states .",
    "iiia , iiib , iiic , and iiid are devoted to proving the main result of the paper .",
    "an algorithm for constructing the lc operation @xmath87 , where @xmath48 for any @xmath88 , is given in sec .",
    "iiie and * theorem 2 * , which covers additional @xmath0 equivalences for @xmath3 graphs beyond the main theorem , is given in sec .",
    "the main result of the paper is the following :    [ * main theorem * ] : @xmath0 equivalence holds for any graph @xmath52 with neither cycles of length 3 nor 4 .",
    "[ * proof * ] : in order to prove that @xmath0 holds for @xmath61 , we will show that for any stabilizer state @xmath89 satisfying @xmath90 , there exists an lc operation @xmath51 such that @xmath91 . the proof is presented in several sections below , ending in sec .",
    "iiid on page 9 .",
    "we prove this theorem constructively , i.e. we construct @xmath51 explicitly from the given @xmath50 , @xmath61 , and @xmath92 . before giving the details of our proof",
    ", we give a brief outline of our strategy .",
    "we will assume that throughout our proof that all graphs have neither cycles of length @xmath1 nor @xmath2 .",
    "first , we show that any graph of distance @xmath4 satisfies the msc , hence @xmath0 holds for them .",
    "however , we will also show that any graph of distance @xmath3 is beyond the msc .",
    "therefore , we only need to prove the * main theorem * for @xmath3 graphs .",
    "we then partition the vertex set @xmath93 of graph @xmath52 into subsets @xmath94 as defined later .",
    "we show that for all vertices @xmath95 , the operator @xmath96 in @xmath50 must be a clifford operation , i.e. @xmath97 . for vertices @xmath98 , we will give a procedure , called the standard procedure , for constructing @xmath99 . in effect",
    ", this corresponds to an  encoding \" of any vertex @xmath100 and all the degree one vertices @xmath101 to which @xmath102 is connected into a repetition code ( i.e.  deleting \" the degree one vertices from @xmath52 ) , and then a  decoding \" of the code .",
    "we illustrate the proof idea in fig .",
    "[ proofdiag ] . due to some technical reasons ,",
    "we first show @xmath97 for all @xmath103 in sec .",
    "then we give the standard procedure in sec .",
    "we use an example to show explicitly how the procedure works , with explanations of why this procedure actually works in general . finally , in sec .",
    "iiic we show that @xmath97 for all @xmath95 , and construct @xmath99 for all @xmath104 from the standard procedure .",
    ": we will simply choose @xmath105 for all @xmath106 , and use the standard procedure(sp ) to construct @xmath107 for all @xmath108.,width=192 ]    the four types of vertices we use for a graph @xmath52 are defined as follows .",
    "@xmath109 is the degree one vertices of @xmath52 .",
    "@xmath110 is the set of vertices @xmath111 connects to some @xmath112 .",
    "the set @xmath113 is given by @xmath114 not in @xmath109 , and @xmath102 only connects to @xmath115 .",
    "finally , the set @xmath116 is defined by @xmath117 . for convenience",
    ", we also apply this partitioning of vertices to @xmath4 graphs , hence @xmath118 .",
    "[ thepartition ] gives an example of such partitions .",
    ", @xmath119 , @xmath120 and @xmath121 ; @xmath122 , @xmath123 , @xmath124 and @xmath125 ; @xmath126 is a graph of @xmath127 hence @xmath128 , and @xmath129.,width=288 ]      we first provide some lemmas which lead to a proof of the * main theorem * for @xmath4 graphs .",
    "then we show that all @xmath3 graphs are beyond the msc .",
    "[ * lemma 2 * ] : for a vertex @xmath131 which is unconnected to any degree one vertex , if it is neither in cycles of length @xmath1 nor @xmath2 , and then @xmath132 is the only minimal element of support @xmath133 .",
    "[ * proof * ] : suppose the vertex @xmath102 connects to vertices @xmath134 , then @xmath135 .",
    "if there exists an element @xmath136 such that @xmath137 , then @xmath138 must be expressed as a product of elements in @xmath139 . however since @xmath102 is neither in any cycle of length @xmath1 nor @xmath2 , then any product of elements in @xmath140 ( except @xmath132 itself ) must contain at least one pauli operator @xmath141 acting on the @xmath85th qubit where @xmath85 is not in @xmath133 .",
    "@xmath142    this directly leads to the following * lemma 3 * for @xmath4 graphs :    [ * lemma 3 * ] : for any graph @xmath52 with @xmath4 , if there are neither cycles of length @xmath1 nor @xmath2 , then @xmath52 satisfies the msc , and hence @xmath0 holds for @xmath52 .",
    "[ * proof * ] : since @xmath4 , then all vertices @xmath131 are unconnected to any degree one vertices . then by * lemma 2 * , @xmath143 , and therefore the msc is satisfied . @xmath142",
    "* lemma 2 * tells us that for any vertex @xmath144 , we must have @xmath97 , according to * fact 2*. * lemma 3 * shows that we only need to prove the * main theorem * for graphs of @xmath3 .",
    "[ * proposition 1 * ] : stabilizer states with distance @xmath3 are beyond the msc .",
    "[ * proof * ] : a stabilizer state @xmath38 with @xmath145 has at least one weight two element in its stabilizer @xmath44 .",
    "we denote one such weight two element by @xmath146 , where @xmath141 and @xmath147 are one of the three pauli operators @xmath83 on the @xmath85th and @xmath148th qubits respectively , up to an overall phase factor of @xmath149 or @xmath150 .",
    "now consider any element @xmath28 in @xmath151 with a support @xmath69 such that @xmath152 .",
    "we can write @xmath28 in the form @xmath153 where each @xmath22 is either the identity matrix @xmath24 or one of the pauli matrices @xmath83 , up to an overall phase factor of @xmath149 or @xmath150 .",
    "then there are three possibilities : ( i ) if @xmath154 is @xmath155 or @xmath156 , then since @xmath28 commutes with @xmath157 , the operator @xmath158 ( @xmath159 ) can only be @xmath141 ( @xmath147 ) , up to an overall phase factor of @xmath149 or @xmath150 .",
    "( ii ) if @xmath160 , then since @xmath28 commutes with @xmath157 , we either have @xmath161 , where @xmath162 anticommutes with @xmath141 and @xmath163 anticommutes with @xmath147 , or @xmath164 .",
    "the former is impossible , as the whole graph is connected , so the latter must hold .",
    "( iii ) if @xmath69 strictly contains @xmath165 , then @xmath28 is not a minimal element .",
    "it follows that in @xmath79 , only @xmath141 appears on the @xmath85th qubit and only @xmath147 appears on the @xmath148th qubit , showing that @xmath44 is beyond the msc.@xmath142    furthermore , the local unitary operation @xmath50 which maps another @xmath3 stabilizer state @xmath45 to @xmath38 is not necessarily in the clifford group , particularly on the @xmath85th and @xmath148th qubits .",
    "note that it is always true for any angle @xmath166 that @xmath167    to interpret * proposition 1 * in view of graphs , it is noted that any fully connected graph @xmath52 with degree one vertices represents a graph state @xmath61 of @xmath3 .",
    "therefore , a graph with degree one vertices is beyond the msc . in particular , for a graph @xmath52 with neither cycles of length @xmath1 nor @xmath2 , each weight two element in @xmath168 corresponds to the standard generator of a degree one vertex in @xmath52 .",
    "the main idea behind the standard procedure is to convert the @xmath170-equivalent stabilizer states @xmath61 and @xmath92 into the corresponding ( lc equivalent ) canonical forms for which we can prove @xmath0 by applying ",
    "encoding \" and  decoding \" methods .",
    "we can then work backwards from those canonical forms to prove that @xmath0 for @xmath61 .",
    "we use a simple example , as shown in graph b4 of fig .",
    "[ simpleghz ] , to demonstrate how the standard procedure works .",
    "the standard procedure decomposes into five steps . in each step , we also explain how the step works for the general case .     is a subgraph of both @xmath171 and @xmath172.,width=240 ]    note that @xmath173 is a ghz state ; hence @xmath0 holds .",
    "the standard generator of the stabilizer for graph @xmath174 is @xmath175 .",
    "however , as we will see later in step 4 , @xmath0 for @xmath174 does not guarantee that @xmath0 for @xmath171 .",
    "we now prove @xmath0 for @xmath176 .",
    "it is straightforward to show @xmath177 where @xmath178 , which is determined by the the edge set @xmath179 .",
    "performing hadamard transform on the fourth and fifth qubits , we get @xmath180 where @xmath181 in eq.([newform ] ) is not hard to understand . by performing @xmath182 , the standard generator of @xmath176",
    "will be transformed to @xmath183 , hence only the terms of @xmath184 and @xmath185 appear on the qubits @xmath186 .",
    "furthermore , for the supports @xmath187 , we have @xmath188 .    for any other stabilizer state which is lu equivalent to @xmath176",
    ", there exist an lu operation @xmath189 such that @xmath190 . according to * fact 1 * , for the supports @xmath187",
    ", there must also be @xmath191 .",
    "suppose the corresponding minimal elements of @xmath192 are @xmath193 respectively , then there exist @xmath194 , such that @xmath195 , @xmath196 .",
    "therefore , we have @xmath197 where @xmath198 and @xmath199 are two states of qubits @xmath200 and @xmath201 .    the states @xmath202 and @xmath203 given in eqs.([newform],[newform2 ] )",
    "are then called canonical forms of @xmath204 and @xmath205 , respectively .",
    "then we have @xmath206 where @xmath207 i.e. @xmath208 , @xmath209 , @xmath210 , @xmath211 , @xmath212 .",
    "eq.([tildeu ] ) is then our new starting point , since @xmath213 and @xmath176 are lc equivalent if and only if @xmath214 and @xmath202 are lc equivalent , then we can always get the former when we prove the latter by reversing eq .",
    "( [ tildeuo ] ) , as we will do from eqs .",
    "( [ tildek ] ) to ( [ finalk ] ) .",
    "note the procedure of getting eq.([tildeu ] ) is general , i.e. we can always do the same thing for any @xmath3 graph state and its lu equivalent graph states . to be more precise , for",
    "a general graph @xmath52 of @xmath9 vertices , consider a vertex @xmath215 , and let @xmath216 be the set of all degree one vertices in @xmath93 which connect to @xmath62 . if the size of this set is @xmath217 , then without loss of generality we can rename the qubits so that the vertices @xmath62 and @xmath218 are represented by the last @xmath219 qubits of @xmath61 .    applying the hadamard",
    "transform @xmath220 to @xmath61 gives a new stabilizer state @xmath221 as shown below . @xmath222 and @xmath223 are two states of the other @xmath224 qubits .    similarly , for any stabilizer state @xmath92 which is lu equivalent to @xmath61 , i.e. @xmath225 , there must exist @xmath226 ( for all @xmath227 ) such that @xmath228 for @xmath229 .",
    "define @xmath230 , we have latexmath:[\\[\\begin{aligned } \\tilde{f}_a|\\psi'_g\\rangle&=&|\\tilde{\\psi'}_g^{(a)}\\rangle\\nonumber\\\\ & = & \\frac{1}{\\sqrt{2}}(|\\chi_0\\rangle|0\\rangle^{\\bigotimes ( k+1 ) } +    where @xmath198 and @xmath199 are two states of the other @xmath224 qubits .",
    "we apply the above procedure for all @xmath232 .",
    "define @xmath233 and @xmath234 , we get @xmath235    now define @xmath236 where @xmath237 for all @xmath238 , @xmath239 for all @xmath232 , and @xmath240 for all @xmath218 .",
    "we then have @xmath241 and @xmath61 are lc equivalent if and only if @xmath242 and @xmath243 are lc equivalent .",
    "therefore , we can use the states @xmath242 and @xmath243 as our new starting point .",
    "now we can encode the qubits @xmath186 into a single logical qubit , i.e. @xmath245 , @xmath246 .",
    "define @xmath247 , and @xmath248 , then both @xmath249 and @xmath250 are @xmath1-qubit stabilizer states .",
    "especially , @xmath249 is exactly the graph state @xmath173 represented by graph @xmath174 .",
    "now eq.([tildeu ] ) becomes @xmath251 where @xmath252 , and @xmath253 is a logical operation acting on the logical qubit , which must be of some special forms as we discuss below .",
    "the upper index @xmath254 indicates that we may understand this logical qubit @xmath255 as being the @xmath1rd qubit in graph @xmath174 .",
    "due to * fact 1 * , we must have @xmath256 which means either @xmath257 which gives @xmath258 for some @xmath259 , or @xmath260 which gives @xmath261 , @xmath262 , @xmath263 for some @xmath259 .",
    "therefore , we must have @xmath264 if eq.([plus ] ) holds , or @xmath265 if eq.([minus ] ) holds .",
    "note the procedure of getting eq.([tildeul ] ) and the result of the possible forms that @xmath266 possesses is also general .",
    "recall that we have two states of the form given in eq .",
    "( [ eq : equation8 ] ) and eq .",
    "( [ eq : equation9 ] ) , we can encode the qubits @xmath62 and @xmath267 into a single logical qubit , by writing @xmath268 and @xmath269 , given by @xmath270 both are stabilizer states of @xmath271 qubits , where @xmath272 .",
    "in particular , @xmath273 is represented by a graph which is obtained by deleting all the vertices @xmath227 from @xmath52 .",
    "we can see that @xmath269 and @xmath273 are related by @xmath274 , and @xmath275 is a logical operation acting on the logical qubit @xmath62 .",
    "similarly , we can place some restrictions on the form taken by @xmath275 . by * fact 1",
    "* , we have @xmath276 for all @xmath218 .",
    "this means that either @xmath277 for all @xmath218 and some @xmath278 , which gives @xmath279 where @xmath280 , or @xmath281 for all @xmath218 and some @xmath278 , which gives @xmath282 where @xmath280 .    now again",
    "we apply the above encoding procedure for all @xmath283 .",
    "this leads to two @xmath271-qubit stabilizer states @xmath284 and @xmath285 , where @xmath286 .",
    "in particular , @xmath273 is represented by a graph which is obtained by deleting all the degree one vertices from @xmath52 .",
    "define @xmath287 we then have @xmath288      we then further show that @xmath290 , which means @xmath291 .",
    "consider the minimal element @xmath292 , it is the standard generator of graph @xmath174 associated with the ( logical ) qubit @xmath1",
    ". then we have @xmath293 holds for both @xmath249 and @xmath250 .",
    "furthermore , @xmath292 is the only minimal element of @xmath294 according to * proposition 1*. if @xmath295 is not in @xmath296 , then @xmath297 for any @xmath298 , which contradicts * fact 1*. it is not hard to see that the fact of @xmath289 is also general .",
    "we now show @xmath290 can also be induced by local clifford operations on the qubits @xmath186 .",
    "this can be simply given by @xmath299 if eq.([plus ] ) holds , or @xmath300 if eq.([minus ] ) holds .    in the general case",
    ", it is shown in * lemma 2 * that for a graph with neither cycles of length @xmath1 nor @xmath2 , the standard generator @xmath132 of any vertex @xmath102 which is unconnected to degree one vertices will be the only minimal element of @xmath133 .",
    "then due to the form of @xmath275 in eq.([eq : equation22 ] ) , we conclude that for a general graph with neither cycles of length @xmath1 nor @xmath2 , any induced @xmath301 must be in @xmath296 .",
    "similarly , each @xmath302 can also be induced by local clifford operations on the qubits @xmath303 .",
    "this can be simply given by @xmath304 if eq.([eq : equation20 ] ) holds , or @xmath305 if eq.([eq : equation22 ] ) holds .",
    "in this step , we start from the general case first and then go back to our example of the graph @xmath174 .    for a general graph @xmath52 ,",
    "of which @xmath113 and @xmath116 are not both empty sets , we show that for @xmath284 , @xmath307 must be in @xmath296 for any @xmath88 which is not a logical operation . to see this , note we have already shown in sec .",
    "iii a , @xmath97 for all @xmath144 .",
    "and we are going to show in sec .",
    "iii c that @xmath97 for all @xmath308 .",
    "we also have applied step 1 and 2 to each @xmath232 to obtain @xmath275 . as shown in step 3 , @xmath309 ,",
    "hence we have @xmath310 is an lc operation such that @xmath311 .",
    "now we go back to our example .",
    "note for graph @xmath174 , we have already shown that @xmath253 is a clifford operation .",
    "if we could further show that @xmath312 and @xmath313 are also clifford operations , then @xmath314 is an lc operation which maps @xmath250 to @xmath249 .",
    "however , for graph @xmath171 , @xmath315 , i.e. the vertices @xmath200 and @xmath201 are neither in @xmath316 nor @xmath317 .",
    "then we have to show that although @xmath312 and @xmath313 themselves do not necessarily be clifford operations , there do exist @xmath318 , such that @xmath319    this can be checked straightforwardly due to the simply form of @xmath320 , where @xmath321 .",
    "and we know @xmath250 is also a @xmath1-qubit ghz state , hence @xmath312 and @xmath313 can only be of very restricted forms . to be more concrete , for instance , for @xmath322 , where @xmath323 , there could be @xmath324 , @xmath325 and @xmath326 , i.e. @xmath327",
    "but we know @xmath328    note other possibilities of @xmath250 ( and the possible corresponding @xmath312 , @xmath313 and @xmath253 ) can also be checked similarly .",
    "one may ask why we do not also delete the vertex @xmath200 in graph @xmath171 as we do in the general case , then it is likely that we are also going to get a logical clifford operation @xmath329 on the vertex @xmath201 .",
    "then for the graph with only two vertices @xmath201 and @xmath1 , we have an lc operation @xmath330 . however , this is not true due to the fact that the connected graph of only two qubits is beyond our * proposition 1*. then in this case the argument in step 3 no longer holds .      finally , the following steps are natural and also general",
    ". we can then choose @xmath331 , and choose @xmath332 if @xmath333 or @xmath334 if @xmath335 , which gives @xmath336 where @xmath337 .",
    "define @xmath338 , where @xmath339 , @xmath340 , @xmath341 , @xmath342 , @xmath343 , then @xmath344 which is desired .    in general",
    ", for each @xmath232 and all @xmath227 , choose @xmath345 and choose @xmath346 if @xmath347 , or @xmath348 and @xmath349 if @xmath350 .",
    "define @xmath351 we have @xmath352    define @xmath87 , where @xmath353 for all @xmath354 ; for each @xmath232 , @xmath355 and @xmath356 for all @xmath357,then @xmath358 which is desired .",
    "steps 3,4 and 5 are then summarized as the following diagram .",
    "@xmath359      unlike the case that for @xmath144 , where @xmath97 is guaranteed by * lemma 2 * and * fact 2 * , case @xmath360 is more subtle .",
    "note * lemma 2 * does apply for any @xmath308 , i.e. the standard generator @xmath132 is the only minimal element of @xmath133 , however for any @xmath361 , @xmath362 is not in @xmath79 due to * proposition 1*.    we now use the standard procedure to prove that @xmath97 for all @xmath363 , thereby proving that @xmath0 for @xmath61 .",
    "we use @xmath364 to denote the graph obtained by deleting all the degree one vertices from @xmath52 .",
    "note for any @xmath308 , there must be @xmath365 .",
    "then there are three possible types of vertices in @xmath360 : type 1 , @xmath366 ; type 2 : @xmath367 ; and type 3 : @xmath368 .",
    "we discuss all the three types in sec . 1 , 2 and 3 , respectively .",
    "the subtlety of proving @xmath363 for a type 1 vertex @xmath102 is that we need to apply the standard procedure twice to make sure @xmath97 .",
    "we will demonstrate this with the following example , to prove @xmath0 for graph @xmath369 in fig .",
    "[ trees ] .    , @xmath370 , @xmath371 which is type 1 , and @xmath372.,width=326 ]    for @xmath373 , the standard construction procedure will result in @xmath374 , where @xmath375 for @xmath376 and @xmath377 .",
    "now we again use the construction procedure on qubit @xmath11 of @xmath378 and encode the qubits @xmath379 into a single qubit @xmath11 , as shown in fig .",
    "5c ) ( @xmath380 ) .",
    "this gives @xmath381 , where @xmath382 for @xmath383 .",
    "here @xmath384 is induced by @xmath385 via a similar process as eqs .",
    "( 12,13,14 ) . since @xmath386",
    ", we must have @xmath387 , as desired .",
    "in general we can prove @xmath97 for any type 1 vertex @xmath363 as we did for vertex @xmath11 in the above example of graph @xmath369 .",
    "to be more precise , let @xmath308 be a vertex of type 1 . for each @xmath102 , carrying out the standard procedure at all @xmath361 gives us a graph @xmath388 .",
    "we know that each @xmath389 must be in @xmath296 .",
    "since @xmath390 , we then have a non - empty @xmath391 .",
    "again for @xmath388 we carry out the standard procedure at @xmath102 , giving us a graph @xmath392 , and each @xmath393 must be in @xmath296 .",
    "this gives @xmath97 due to the form of @xmath393 in eqs.([eq : equation20],[eq : equation22 ] ) .",
    "now we consider the type 2 vertices .",
    "we give an example first , to prove that @xmath0 for graph @xmath394 in fig .",
    "[ thepartition ] .",
    "@xmath394 is a graph without cycles of length 3 and 4 , and represents a general graph with four types of vertices .",
    "@xmath394 is very similar to @xmath369 , and has the same set of @xmath395 as @xmath369 .",
    "the only difference between the two graphs is that in @xmath394 , vertices @xmath200 and @xmath396 are connected to each other .",
    "therefore , following the example for the graph @xmath369 shows that for any @xmath397 , the standard construction procedure will result in @xmath398 , where @xmath375 for @xmath376 and @xmath377 .",
    "however , from the structure of @xmath399 , it is easy to conclude that @xmath400 .    in general",
    ", we can prove @xmath97 for any type 2 vertex @xmath363 as we did for vertex @xmath11 in the above example of graph @xmath394 . to be more precise ,",
    "let @xmath308 be a vertex of type 2 . for each @xmath102",
    ", carrying out the standard procedure at all @xmath361 gives us a graph @xmath388 .",
    "@xmath52 contains neither cycles of length @xmath1 nor @xmath2 , so the same holds for @xmath388 . since @xmath401",
    ", we have @xmath402 . due to * lemma 2 * , we conclude that @xmath97 .",
    "now we consider the type 3 vertices .",
    "let us first examine an example .",
    "consider the graph @xmath403 which is obtained by deleting vertices @xmath201 and @xmath404 from graph @xmath394 .",
    "for this new graph with @xmath405 , we have @xmath406 , @xmath407 , @xmath408 and @xmath409 .",
    "it is easy to see that the vertex @xmath11 is of type 3 . carrying out the standard procedure at vertices @xmath2 and @xmath396 gives a graph @xmath410 , which is a subgraph of @xmath394 with @xmath411 .",
    "now we see that @xmath412 , and hence @xmath413 for any @xmath414 which takes the graph state @xmath415 to another @xmath6-qubit stabilizer state .    in general",
    ", note that @xmath308 is of type 3 only when every vertex @xmath361 not only connects to some degree one vertices , but also connects to some vertices in @xmath110 .",
    "so the trick is to perform the standard procedure only at all @xmath361 .",
    "this gives a graph @xmath392 . since @xmath416 , we have @xmath417 .",
    "due to our result in sec .",
    "iii a1 , we conclude that @xmath97 .",
    "to summarize , in general we first classify the vertices of @xmath52 into four types ( @xmath418 ) . to construct @xmath51",
    ", we choose @xmath353 for all @xmath419 , and then apply the standard procedure to construct @xmath420 for all @xmath421 .",
    "note that for some graphs for which @xmath360 and @xmath130 are both empty sets , for instance the graph @xmath171 in fig.[simpleghz ] , the general procedure discussed in the above paragraph does not apply directly .",
    "this special situation has already been discussed in detail in sec iii b4 .",
    "this completes our proof of the * main theorem*.@xmath142      the proof of our * main theorem * implies a constructive procedure for obtaining the local clifford operation @xmath51 corresponding to a given local unitary operation @xmath50 .",
    "this procedure is described below . for clarity ,",
    "the operation ",
    "@xmath422 is used to denote standard matrix multiplication in @xmath423 .",
    "[ * algorithm : construction of * @xmath51 ] :    : + input : a connected graph @xmath52 with no cycles of length 3 or 4 ; a stabilizer state @xmath425 and an lu operation @xmath426 such that @xmath427 .",
    "+ output : an lc operation @xmath428 such that @xmath429 .",
    "partition @xmath93 into subsets @xmath430 .",
    "let @xmath431 for all @xmath432 .",
    "* for * each @xmath433 : + 3.1 calculate @xmath434 .",
    "+ 3.2 find any @xmath435 such that @xmath436 .",
    "+ 3.3calculate @xmath437 .",
    "+ 3.4 find @xmath438 such that @xmath439 + for all @xmath440 .",
    "+ 3.5 @xmath441 * to * @xmath148 + 3.5.1 find any @xmath442 such that @xmath443 .",
    "+ 3.5.2 calculate @xmath444 .",
    "+ 3.5.3 + 3.6 @xmath445 is diagonal + 3.6.1 calculate @xmath446 .",
    "+ 3.6.2 let @xmath447 for all @xmath85 .",
    "+ 3.6.3 let @xmath448 .",
    "+ 3.7 + 3.7.1 calculate @xmath449 .",
    "+ 3.7.2 let @xmath450 for all @xmath85 .",
    "+ 3.7.3 let @xmath451 .",
    "+ 3.7.4 + 3.8 * end for * + 4 . *",
    "return * @xmath452 .      in this section ,",
    "we present a theorem regarding @xmath63 for @xmath3 graphs .",
    "we again use @xmath364 to denote the graph obtained by deleting all the degree one vertices from @xmath52 .",
    "[ * theorem 2 * ] : @xmath0 holds for any @xmath3 graph @xmath52 if @xmath364 satisfies the msc .",
    "[ * proof * ] : the proof is the same as the proof of the * main theorem * in the special case where @xmath113 is an empty set . @xmath142    although the proof of * theorem 2 * is a special case of the proof of the * main theorem * , * theorem 2 * is not a corollary of the * main theorem*. it can be applied to many @xmath3 graphs with cycles of length @xmath1 or @xmath2 , since we know that many @xmath4 graphs satisfy the msc .",
    "from * lemma 3 * , we know that for graphs of @xmath4 , our * main theorem * is actually a corollary of * theorem 1*. now an interesting question is : do there exist other graph states with distance @xmath4 which are beyond the msc ?",
    "the answer is affirmative .",
    "below , in sec .",
    "iva , we present some examples for the case @xmath453 qubits . in sec .",
    "ivb we construct two series of @xmath4 graphs beyond the msc for @xmath454 ( @xmath8 ) out from error correcting codes with non - clifford transversal gates . in sec .",
    "ivc , we briefly discuss the @xmath0 property for @xmath4 graphs .",
    "generally the distance of a graph state can be upper bounded by @xmath455 for a graph whose elements in @xmath60 have even weight , which only happens when @xmath9 is even . for the other graphs ,",
    "the distance is upper bounded by @xmath456 , if @xmath457 mod 6 , @xmath458 , if @xmath459 mod 6 , and @xmath460 , otherwise@xcite .",
    "our numerical calculations show that there are no @xmath4 graphs beyond the msc for @xmath461 . among all the @xmath462 lc non - equivalent connected graphs of @xmath463",
    ", there are only three @xmath4 graphs beyond the msc .",
    "all of them are of distance three , which are shown as graphs a6 , b6 , and c6 in fig .",
    "[ distancegeq3 ] . among",
    "all the @xmath464 lc non - equivalent connected graphs of @xmath465 , there are only nine @xmath4 graphs beyond the msc . eight of them are of distance three , only one is of distance four .",
    "the distance four graph of @xmath465 beyond the msc is shown as graph d6 in fig .",
    "[ distancegeq3 ] . among all the @xmath466 lc non - equivalent connected graphs of @xmath467 ,",
    "there are only @xmath468 @xmath4 graphs beyond the msc .",
    "@xmath469 of them are of distance three and @xmath470 are of distance four .",
    "graphs beyond the msc for @xmath463 ; d6 : the only one @xmath471 graph beyond the msc for @xmath465 . in each graph",
    "all the black vertices are minimal elements which are just generators of the corresponding @xmath472 , and all the white vertices are not in @xmath472.,width=220 ]      in this section we construct other two series of @xmath4 graphs beyond the msc for @xmath454 ( @xmath8 ) from error correcting codes with non - clifford transversal gates .",
    "it is well - known that transversal gates on quantum codes , i.e. logical unitary operations which could be realized via a bitwise manner , is crucial for fault - tolerant quantum computing@xcite .",
    "general single qubit transversal gates on an @xmath9-qubit code @xmath473 is of the form @xmath50 .",
    "however , only clifford transversal gates @xmath51 are relatively easy to find from symmetries of the stabilizer@xcite , while it is hard to find non - clifford transversal gates for a given stabilizer code .    to construct the css code with transversal gates @xmath474 consider the first order punctured reed - muller code @xmath475 with parameters @xmath476 $ ] and its even subcode @xmath477 with parameters @xmath478$]@xcite .",
    "it is well - known that the dual code of @xmath479 is the binary hamming code with parameters @xmath480 $ ] .",
    "then this gives a series of quantum codes with parameters @xmath481 $ ] .",
    "for a given @xmath271 , the code is spanned by @xmath482 and @xmath483 .",
    "the computational basis vectors on which @xmath484 has support have weight @xmath485 or @xmath486 and those of @xmath487 have weight @xmath488 or @xmath7@xcite .",
    "therefore , @xmath489 is a valid transversal gate .",
    "similar to the classical reed - muller codes , from the point of view of code parameters , these quantum codes become weaker as their length increases . however , non - clifford operations are not all equal ; some are more complex than others , even for fixed qubit number .",
    "note that @xmath490 with @xmath491 , where @xmath492 is defined by @xmath493 where @xmath494 is the pauli group , and generally gates in @xmath492 with larger @xmath148 are stronger@xcite .",
    "hence it worths constructing codes with transversal @xmath492 gates for any @xmath148 .",
    "note that the graphs corresponding to @xmath495s of the code always have distance @xmath1 for any @xmath271 , and the graphs corresponding to @xmath496s of the code always have distance @xmath2 for any @xmath271 .",
    "it is straightforward to show that for any @xmath271 , only @xmath27 appears on all the qubits in @xmath472 for both @xmath495 and @xmath496 .",
    "this then gives two series of @xmath4 graphs beyond the msc .",
    "the graphs for @xmath497 are shown in fig .",
    "[ 15qubit ] and [ 31qubit ] .",
    "graphs beyond the msc .",
    "the left graph corresponds to the @xmath495 state of the 15 qubit code with transversal @xmath498 gate . and",
    "the right one is a graph corresponds to @xmath496 , getting from @xcite . in each graph",
    "all the black vertices are minimal elements which are just generators of the corresponding @xmath472 , and all the white vertices are not in @xmath472.,width=288 ]     graphs beyond the msc .",
    "the left graph corresponds to the @xmath495 state of the 31 qubit code with transversal @xmath499 gate .",
    "and the right one is a graph corresponds to @xmath496 . in each graph",
    "all the black vertices are minimal elements which are just generators of the corresponding @xmath472 , and all the white vertices are not in @xmath472.,width=307 ]      it is natural to ask whether we could use the same strategy to prove @xmath0 for those @xmath4 graph states beyond the msc as we did for @xmath3 graphs .",
    "first of all , it is noted that a similar deletion of a degree @xmath500 vertex is possible .",
    "take the above @xmath127 graph in fig .",
    "[ distancegeq3 ] a6 for instance .",
    "denote the two white vertices by @xmath501 , and the degree two vertex which connects to @xmath501 by @xmath200 .",
    "then the stabilizer of @xmath502 , up to lc , can be written as @xmath503 where @xmath504 denotes the operators on the other qubits apart from @xmath502 .",
    "now recall the @xmath9-qubit quantum code @xmath505 with stabilizer @xmath506 is a quantum version of the @xmath507 $ ] classical binary zero - sum code ( or even weight code ) .",
    "the basis of @xmath505 can be simply chosen as all the codewords with even weight , and any of the @xmath9 qubits can be regarded as a parity qubit of the other @xmath508 qubits . in this sense , @xmath509 encoding @xmath9 qubits into @xmath508 qubit , we will always choose the basis for @xmath508 logical qubits to be that of omitting the first qubit .",
    "for instance , if @xmath510 ( as mentioned in graph a6 of fig .",
    "[ distancegeq3 ] , the stabilized subspace of @xmath511 is spanned by @xmath512 which could be viewed as two logical qubits : @xmath513 where each @xmath514 is diagonal preserves @xmath515 and will induce an diagonal logical operation @xmath516 on the @xmath508 logical qubits .",
    "[ * proposition 2 * ] : for an @xmath9-qubit even weight code @xmath515 , if @xmath517 , then @xmath518 for all @xmath519 .",
    "[ * proof * ] : since @xmath516 is diagonal , it preserves @xmath520 for all @xmath521 .",
    "let @xmath522 , direct calculation shows @xmath523 if and only if both @xmath524 and @xmath525 , i.e. @xmath526 . similar procedure works for @xmath527.@xmath142    however , generally @xmath516 is a non - local operation on the @xmath508 logical qubits , contrary to the @xmath3 case , where the local operation can only induce a local operation on the single logical qubit",
    ". therefore , it is non - trivial to delete a degree @xmath500 vertex .",
    "a possible way to fix this problem may be to further investigate the effect of some non - local gates ( in this example , two - qubit gates ) which relate the two graph states .",
    "then we could use * proposition 2 * to prove @xmath0 for the original graph before deletion of the vertex .",
    "this idea does work in the case of the particular structure of the graph a6 in fig .",
    "[ distancegeq3 ] , after a subtle analysis on the structure of @xmath60 .    our * proposition 2 * takes the first step to investigate the @xmath0 property for @xmath4 graphs beyond the msc , which is also based on the subgraph structure . however , it is not our hope that the idea of induction will final lead to a solution to the most general case .",
    "for instance , it is noted that @xmath528 satisfying the msc does not necessarily mean @xmath529 , although exceptions are likely rare .",
    "we have found only two lu inequivalent examples for @xmath530 , which are shown below in fig .",
    "[ sneqm ] .",
    "graphs satisfying the msc , but @xmath531.,width=220 ]    note both of the two graphs in fig .",
    "[ sneqm ] are of @xmath532 .",
    "there exist two graphs satisfying the msc but @xmath533 for @xmath532 , however there does not exist any graph of this property for @xmath463 .",
    "this interesting phenomenon implies that the structure of @xmath472 is a global rather than a local property of graph states , which can not be simply characterized by the idea of induction .",
    "in this paper , we broaden the understanding of what graph and stabilizer states are equivalent under local clifford operations .",
    "we prove that @xmath0 equivalence holds for all graph states for which the corresponding graph contains neither cycles of length @xmath1 nor @xmath2 .",
    "we also show that @xmath0 equivalence holds for distance @xmath3 graph states if their corresponding graph satisfies the msc after deleting all the degree one vertices .",
    "the relation between our results and those of van den nest et al.s is summarized in fig .",
    "[ paperdiag ] . it is clearly seen from the figure that graphs in area @xmath534 have no intersection with those in @xmath535 , i.e. graph states of distance @xmath3 are beyond van den nest et al.s msc .",
    "the intersection of graphs in area @xmath536 and @xmath535 are graphs without degree one vertices as well as cycles of length @xmath1 and @xmath2 .",
    "we find a total of @xmath5 @xmath4 graphs beyond the msc up to @xmath467 , via numerical search ; among these , only @xmath537 are of @xmath471 while the other @xmath538 have distance @xmath127 .",
    "this implies that @xmath4 graphs beyond the msc are rare among all the graph states , and are not easy to find and characterize .",
    "however , we also explicitly construct two series of @xmath4 graphs using quantum error correcting codes which have non - clifford transversal gates .",
    "we expect that the existence of other such quantum codes will provide insight in seeking additional @xmath4 graphs beyond the msc .",
    "all graph states discussed in this paragraph belong in area @xmath54 in fig .",
    "[ paperdiag ] . for most of the graphs in area @xmath54",
    ", the @xmath0 equivalence question remains open .",
    "we discussed some possibilities for resolving this equivalence question in sec .",
    "iv , using even weight codes rather than the simple repetition codes .",
    "our main new technical tool for understanding @xmath0 equivalence is the idea , introduced in sec .",
    "[ sec : maintheorem ] , of encoding and decoding of repetition codes .",
    "we hope that this tool , and our other results , will help shed light on the unusual equivalences of multipartite entangled states represented by stabilizers and graphs , and the intricate relationship between entanglement and quantum error correction codes which allow non - clifford transversal gates .",
    "l. e. danilesen and m. g. parker , e - print math.co/0504522 ; l. e. danilesen , _ on self - dual quantumcodes , graphs , and boolean functions _ , master thesis , university of bergen , norway ( 2005 ) , e - print quant - ph/0503236 ."
  ],
  "abstract_text": [
    "<S> the equivalence of stabilizer states under local transformations is of fundamental interest in understanding properties and uses of entanglement . </S>",
    "<S> two stabilizer states are equivalent under the usual stochastic local operations and classical communication criterion if and only if they are equivalent under local unitary ( lu ) operations . </S>",
    "<S> more surprisingly , under certain conditions , two lu equivalent stabilizer states are also equivalent under local clifford ( lc ) operations , as was shown by van den nest et al . </S>",
    "<S> [ phys . rev . </S>",
    "<S> * a71 * , 062323 ] . here , we broaden the class of stabilizer states for which lu equivalence implies lc equivalence ( @xmath0 ) to include all stabilizer states represented by graphs with neither cycles of length @xmath1 nor @xmath2 . to compare our result with van den nest et al.s </S>",
    "<S> , we show that any stabilizer state of distance @xmath3 is beyond their criterion . </S>",
    "<S> we then further prove that @xmath0 holds for a more general class of stabilizer states of @xmath3 . </S>",
    "<S> we also explicitly construct graphs representing @xmath4 stabilizer states which are beyond their criterion : we identify all @xmath5 graphs with up to @xmath6 vertices and construct graphs with @xmath7 ( @xmath8 ) vertices using quantum error correcting codes which have non - clifford transversal gates . </S>"
  ]
}
{
  "article_text": [
    "the input to the * weighted set cover problem * is a collection of sets , where each set @xmath7 is given a cost @xmath8 .",
    "the goal is to choose a cover ( a collection of sets containing all elements ) of minimum total cost .",
    "the ( uncapacitated ) * facility - location problem * is a generalization of weighted set cover in which each set @xmath9 ( called a `` facility '' ) and element @xmath10 ( called a `` customer '' ) are given a distance @xmath11 . the goal is to choose a set of facilities @xmath12 minimizing @xmath13 , where @xmath14 , the _ facility cost of @xmath12 _",
    ", is @xmath15 and @xmath16 , the _ assignment cost of @xmath12 _ , is @xmath17 .",
    "minimize@xmath18d+k @font ( x ) & & k + @font ( x ) & & d + _ f x(f , c ) & = & 1 & ( c ) + x(f , c ) & & x(f ) & ( f , c ) + x(f , c ) & & 0 & ( f , c ) + x(f ) & & \\{0,1 } & ( f ) [ ip ]    fig .",
    "[ flip ] shows the standard integer programming formulation of the problem  the _ facility - location ip _ @xcite .",
    "the facility - location _ linear _ program ( lp ) is the same except without the constraint `` @xmath19 '' .",
    "solution is a feasible solution to the lp . _ fractional",
    "_ facility location is the problem of solving the lp .",
    "the * weighted @xmath0-medians problem * is the same as the facility location problem except for the following : a positive real number @xmath0 is given as input , and the goal is to choose a subset @xmath12 of facilities minimizing @xmath16 subject to the constraint @xmath20 .",
    "the standard integer programming formulation is the _",
    "@xmath0-medians ip _ , which differs from the ip in fig .",
    "[ flip ] only in that @xmath0 is given , not a variable , and the objective function is @xmath21 instead of @xmath22 .",
    "the _ ( unweighted ) _ @xmath0-medians problem is the special case when each @xmath23 .",
    "for the _ fractional _",
    "@xmath0-medians problem , the input is the same ; the goal is to solve the linear program obtained by removing the constraint `` @xmath24 '' from the @xmath0-medians ip .",
    "we take the `` size '' of each of the above problems to be the number of pairs @xmath25 such that @xmath26 .",
    "we assume the size is at least the number of customers and facilities .    by an @xmath27$]-*approximation algorithm * for @xmath0-medians , we mean an algorithm that , given a problem instance for which there exists a fractional solution of assignment cost @xmath21 and facility cost @xmath0 , produces a solution of assignment cost at most @xmath28 and facility cost at most @xmath29 .",
    "we use similar non - standard notations for facility location , set cover , and @xmath0-set cover .",
    "for instance , by a @xmath30$]-approximation algorithm for facility location , we mean an algorithm that , given an instance for which there exists a fractional solution of assignment cost @xmath21 and facility cost @xmath0 , produces a solution for which the assignment cost plus the facility cost is at most @xmath31 .",
    "in the mid 1970 s johnson and lovasz gave a greedy @xmath32$]-approximation algorithm for unweighted set cover @xcite . in 1979",
    "chvatal generalized it to a @xmath32$]-approximation algorithm for weighted set cover @xcite .    in 1982",
    "hochbaum gave a greedy @xmath33$]-approximation algorithm for the uncapacitated facility - location problem by an implicit reduction to the weighted set - cover problem @xcite .- medians to a variant of set cover that we call @xmath0-set cover .",
    "the reduction also extends naturally to the fractional problems .",
    "( see appendix for details . )",
    "this shows a loose equivalence between facility location and weighted set cover , and between @xmath0-medians and @xmath0-set cover .",
    "however , hochbaum s reduction does not preserve the distinction between facility costs and assignment costs .",
    "for this reason , we work with the facility location and @xmath0-medians representations .",
    "the algorithms and analyses we give for facility location easily imply corresponding results for weighted set cover , and the results for @xmath0-medians are straightforward to adapt to @xmath0-set cover . ] above @xmath34 is at most the maximum , over all facilities @xmath9 , of the number of customers @xmath10 such that @xmath35 .",
    "in 1992 lin and vitter gave a polynomial - time @xmath36$]-approximation algorithm for the @xmath0-medians problem @xcite .",
    "( here @xmath37 is an input parameter that tunes the tradeoff between the two criteria and @xmath38 is the number of customers . )",
    "their algorithm combines a greedy algorithm with a technique they call _",
    "filtering_.    in 1994 plotkin , shmoys , and tardos ( pst ) gave lagrangian - relaxation algorithms for general packing and covering problems @xcite .",
    "as a special case , their algorithms imply a @xmath5$]-approximation algorithm for fractional set cover that runs in @xmath39 linear - time iterations . here",
    "@xmath38 is the number of elements .    in 1998",
    "garg generalized and simplified the pst set cover algorithm to obtain a @xmath5$]-approximation algorithm for fractional _ weighted _ set cover @xcite .",
    "garg s algorithm runs in @xmath40 linear - time iterations . by hochbaum",
    "s reduction , one can use garg s algorithm as a @xmath5$]-approximation algorithm for fractional _",
    "facility location_. the running time is the same , where @xmath38 is the number of customers .",
    "recent work has focused on _ metric _ @xmath0-medians and facility location problems . in the metric versions ,",
    "the distance function is assumed to satisfy the triangle inequality .",
    "for example , @xmath41$]-approximation algorithms have recently been shown for the metric facility - location problem @xcite .",
    "charikar , guha , tardos and shmoys @xcite recently gave an @xmath42$]-approximation algorithm for metric @xmath0-medians .",
    "many of these algorithm first solve the fractional problems and then round the fractional solutions .",
    "fig .  [ flrs ] shows the simple randomized rounding scheme at the center of all our results . with minor variations ( e.g.  fig .",
    "[ fkmrs ] ) , this rounding scheme can be used as the basis for approximation algorithms for set cover , weighted set cover , facility location , and @xmath0-medians , and as the basis for lagrangian - relaxation algorithms for the fractional variants of these problems .",
    "although essentially the same rounding scheme suffices for each of these problems , the respective probabilistic _",
    "analyses _ require different ( albeit standard ) techniques in each case . for set",
    "cover , a simple direct analysis suffices @xcite . for",
    "_ weighted _ set cover , facility location , and @xmath0-medians , a basic probabilistic lemma called _",
    "wald s inequality _ is necessary . for _ fractional _",
    "set cover and @xmath0-medians , the analysis rests on the _ chernoff _ bound . for fractional _ weighted _ set cover and facility location , the analysis is a simple application of what we call the _ chernoff - wald _ bound .    for each problem , we apply the method of conditional probabilities to the rounding scheme in order to derive a corresponding approximation algorithm .",
    "the structure of each resulting algorithm , being closely tied to the underlying probabilistic analysis , ends up differing substantially from problem to problem .    for facility location ,",
    "the resulting algorithm ( fig .  [ flrs ] ) is a randomized rounding , polynomial - time @xmath43$]-approximation algorithm .",
    "the performance guarantee improves over hochbaum s algorithm with respect to the assignment costs .    for weighted @xmath0-medians , the resulting algorithm ( fig .",
    "[ gkma ] ) is a greedy @xmath2$]-approximation algorithm . in comparison to lin and vitter s algorithm ,",
    "the performance ratio with respect to the facility costs is better by a factor of roughly @xmath44 .    for _ fractional _",
    "@xmath0-medians , the algorithm ( fig .  [ fa ] ) is a @xmath3$]-approximation algorithm .",
    "it is a lagrangian - relaxation algorithm and runs in @xmath4 linear - time iterations .",
    "this is a factor of @xmath38 faster than the best bound we can show by applying the general algorithm of plotkin , shmoys and tardos .",
    "finally , for fractional facility location , the algorithm ( see fig .  [ ffla ] ) is a @xmath45$]-approximation , lagrangian - relaxation algorithm .",
    "it runs in at most @xmath46 iterations , where each iteration requires time linear in the input size times @xmath47 .",
    "this algorithm is the same as the unpublished fractional weighted set - cover algorithm due to garg @xcite .",
    "the main interest of this last result is not that we improve garg s algorithm ( we do nt ! ) , but that we recast and abstract garg s analysis to obtain an apparently new ( ? ) probabilistic bound  we call it the chernoff - wald bound  that may be of general interest for _ probabilistic _ applications .",
    "a basic contribution of this work is to identify and abstract out ( using the probabilistic method ) common techniques underlying the design and analysis of lagrangian - relaxation and greedy approximation algorithms .",
    "before we state and prove wald s inequality and the chernoff - wald bound , we give some simple examples .",
    "suppose we perform repeated trials of a random experiment in which we roll a 6-sided die and flip a fair coin .",
    "we stop as soon as the total of the numbers rolled exceeds @xmath48 .",
    "let @xmath49 be the number of trials .",
    "let @xmath50 be the total of the numbers rolled .",
    "let @xmath51 be the number of flips that come up heads .",
    "since the expectation of the number in each roll is @xmath52 , wald s implies @xmath53 = 3.5 e[t]$ ] , which implies @xmath54 \\le 1000 $ ] .",
    "since the probability of a head in each coin flip is @xmath55 , wald s implies @xmath56 = 0.5 e[t]$ ] .",
    "thus we can conclude @xmath56\\le500 $ ] .",
    "now modify the experiment so that in each trial , each person _ in a group of 50 _ flips their own fair coin .",
    "let @xmath57 be the maximum number of heads any person gets . then",
    "chernoff - wald states that @xmath58 \\le ( 1+\\epsilon)500 $ ] for @xmath59 ( so @xmath60 ) .",
    "if we were to modify the experiment so that the number of trials @xmath49 was set at @xmath61 , the chernoff - wald bound would give the same conclusion , but in that case the _ chernoff _ bound would also imply ( for the same @xmath62 ) that @xmath63 < 1 $ ]    [ walds ] let @xmath64 be a random variable with @xmath54 < \\infty$ ] and let @xmath65 be a sequence of random variables .",
    "let @xmath66 . if @xmath67 \\,\\le\\ , \\mu ~~(\\mbox{for } t \\ge 1)\\ ] ] and @xmath68 ( for @xmath69 ) , then @xmath70 the claim also holds if each `` @xmath71 '' is replaced by `` @xmath72 '' .",
    "the condition `` @xmath68 '' is necessary .",
    "consider choosing each @xmath73 randomly to be @xmath74 and letting @xmath75 .",
    "then @xmath76 = 0 $ ] , so taking @xmath77 , all conditions for the theorem except `` @xmath78 '' are met .",
    "but the conclusion @xmath79\\le 0 $ ] does not hold , because @xmath80 .",
    "the proof is just an adaptation of the proof of wald s _ equation _ @xcite .",
    "the reader can skip it on first reading .",
    "w.l.o.g .",
    "assume @xmath77 , otherwise apply the change of variables @xmath81 before proceeding .",
    "define @xmath82 . if @xmath83 then the claim clearly holds .",
    "otherwise , @xmath84 the sum of the positive terms above is at most @xmath85 < \\infty$ ] .",
    "thus , the double sum is absolutely convergent so @xmath86 this establishes the claim because @xmath87 .",
    "the claim with `` @xmath71 ''",
    "s replaced by `` @xmath72 '' s follows via the change of variables @xmath88 , @xmath89 , and @xmath90 .",
    "in many applications of wald s , the random variables @xmath65 will be independent , and @xmath49 will be a _ stopping time _ for @xmath91  a random variable in @xmath92 such that the event `` @xmath93 '' is independent of @xmath94 . in this case",
    "the following companion lemma facilitates the application of wald s inequality :    [ stoptime1 ] let @xmath65 be a sequence of independent random variables and let @xmath49 be a stopping time for the sequence . then @xmath95 = e[x_t]$ ] .",
    "because @xmath73 is independent of @xmath96 , and the event `` @xmath97 '' ( i.e.  @xmath98 ) is determined by the values of @xmath96 , it follows that @xmath73 is independent of the event `` @xmath97 '' .",
    "here is a statement of a standard chernoff bound . for a proof see e.g.  @xcite .",
    "let @xmath99 .",
    "+ for @xmath100 , @xmath101 and @xmath102 .",
    "[ chernofflower ]   + let @xmath103 be a sequence of independent random variables in @xmath104 $ ] with @xmath105 .",
    "let @xmath37 .",
    "+ then @xmath106 <",
    "\\exp(-{{{{\\operator@font \\mathrm{\\tt ch}}}}}(\\epsilon ) \\mu)$ ] .",
    "+ for @xmath107 , @xmath108 < \\exp(-{{{{\\operator@font \\mathrm{\\tt ch}}}}}(-\\epsilon ) \\mu).$ ]    [ chernoff - wald ]   +    for each @xmath109 , let @xmath110 be a sequence of random variables such that @xmath111 .",
    "+ let @xmath64 be a random variable with @xmath54 < \\infty$ ]",
    ". + let @xmath112 .",
    "suppose @xmath113 \\,\\le\\ ,   \\mu\\ ] ] for all @xmath114 for some @xmath115 .",
    "let @xmath116 satisfy @xmath117,e[m]/(1+\\epsilon)\\ } } \\le 1/m.\\ ] ] then @xmath118 \\ , \\le \\ , ( 1+\\epsilon ) \\mu e[t].\\ ] ]    the claim also holds with the following replacements : `` @xmath119 '' for `` @xmath120 '' ; `` @xmath121 '' for `` @xmath122 '' ; `` @xmath58   \\ge $ ] '' for `` @xmath58 \\le $ ] '' ; and , for each `` @xmath62 '' , `` @xmath123 '' ( except in `` @xmath116 '' ) .",
    "in the case when @xmath49 is constant , the chernoff bound implies @xmath124 < 1 $ ] for @xmath62 as above .    the first - time reader can skip the following proof .    for @xmath125 ,",
    "let @xmath126 ( @xmath127 ) and @xmath128 note that for each @xmath129 , @xmath130 .",
    "thus @xmath131 .",
    "we use wald s inequality to bound @xmath132 $ ] . fix any @xmath133 .",
    "let @xmath134 . then @xmath135      \\\\ & < &       \\frac{\\epsilon}{\\ln(1+\\epsilon ) } \\frac { \\sum_i y_{it}x_{it}}{\\sum_i y_{it}}.    \\end{aligned}\\ ] ] the first inequality follows from @xmath136 for @xmath137 .",
    "the last inequality follows from @xmath138 for @xmath139 .",
    "thus , conditioned on the event @xmath97 and the values of @xmath140 , @xmath141 \\,<\\ ,    \\frac{\\epsilon}{\\ln(1+\\epsilon ) } \\frac { \\sum_i y_{it}\\ , \\mu } { \\sum_i y_{it}}.\\ ] ] this implies that @xmath142 < { \\mu \\epsilon}/{\\ln(1+\\epsilon)}$ ] . using @xmath143 and wald s inequality , @xmath118 \\le e[z_t ] < \\log_{1+\\epsilon } m \\,+\\ , e[t]\\mu \\epsilon/\\ln(1+\\epsilon).\\ ] ] by algebra , the above together with the assumption on @xmath62",
    "imply that @xmath58 \\le ( 1+\\epsilon ) \\mu e[t]$ ] .",
    "the proof of the claim for the minimum is essentially the same , with each `` @xmath62 '' replaced by `` @xmath123 '' and reversals of appropriate inequalities . in verifying this ,",
    "note that @xmath144 is a decreasing function .    in many applications of chernoff - wald",
    ", each @xmath145 will be independent of @xmath146 , and @xmath49 will be a stopping time for @xmath147  a random variable in @xmath92 such for any @xmath148 the event `` @xmath149 '' is independent of @xmath150 .",
    "then by an argument similar to the proof of lemma  [ stoptime1 ] , we have :    [ stoptime2 ] for @xmath151 , let @xmath110 be a sequence of random variables such that each @xmath145 is independent of @xmath152 .",
    "let @xmath49 be a stopping time for @xmath147",
    ". then + @xmath153 = e[x_{it}]$ ] .",
    "we use wald s inequality to analyze a natural randomized rounding scheme for facility location .",
    "[ flrsg ] let @xmath12 be the output of the facility - location rounding scheme in fig .",
    "[ flrs ] given input @xmath154 .",
    "let @xmath155 be the number of customers @xmath10 such that @xmath156 . then @xmath157 $ ] is at most @xmath158 .",
    "observe the following basic facts about each iteration of the outer loop :    1 .",
    "the probability that a given customer @xmath10 is assigned to a particular facility @xmath9 in this iteration is @xmath159 2 .",
    "the probability that @xmath10 is assigned to _ some _ facility is @xmath160 3 .",
    "_ given _ that @xmath10 is assigned , the probability of it being assigned to a particular @xmath9 is @xmath161 .    to bound @xmath162 $ ] , it suffices to bound the expected cost of the assignment chosen by the algorithm . for a given pair @xmath25 ,",
    "what is the probability that @xmath9 is assigned to @xmath10 ? by the third fact above , this is @xmath163 .",
    "thus , @xmath162 \\le \\sum_{f , c } \\pr(c \\mbox { assigned to } f ) { { { { \\operator@font \\mathrm{\\tt dist}}}}}(f , c ) = { { { { \\operator@font \\mathrm{\\tt dist}}}}}(x)$ ] .",
    "to finish , we show @xmath164 .",
    "this suffices because it implies that @xmath165 $ ] equals @xmath166 .",
    "fix a facility @xmath9 .",
    "call the customers @xmath10 such that @xmath167 the `` fractional customers of @xmath9 '' .",
    "let random variable @xmath49 be the number of iterations before all these customers are assigned .",
    "+ * claim 1 : * _ @xmath168 x(f)/|x|$]_. + * proof : * define @xmath73 to be the indicator variable for the event `` @xmath9 is first chosen in iteration @xmath148 '' .",
    "as @xmath169 \\le x(f)/|x|$ ] , by wald s inequality @xmath170 \\le e[t]x(f)/|x|$ ] .",
    "this proves the claim .",
    "recall that @xmath155 is the number of fractional customers of @xmath9 .",
    "to finish the proof , it suffices to show : + * claim 2 : * _ @xmath54 \\le |x| h_{\\delta_{fx}}$ ] _ + * proof : * define @xmath171 to be the number of fractional customers of @xmath9 not yet assigned after iteration @xmath148 ( @xmath172 ) .",
    "( recall @xmath173 and @xmath174 . ) then provided @xmath175 , @xmath176 is @xmath177 the expectation of the right - hand side is at least @xmath178 because each customer is assigned in each iteration with probability at least @xmath178 . since @xmath179 is @xmath180 when @xmath181 and decreases by at least @xmath178 in expectation each iteration , by wald s inequality , it follows that @xmath182 \\ge e[t]/|x|$ ] .",
    "since @xmath183 , the claim follows",
    ".    the randomized scheme can easily be derandomized .",
    "there is a polynomial - time @xmath184$]-approximation algorithm for uncap .",
    "facility location .",
    "+    [ wia ]",
    "the _ @xmath0-medians rounding scheme _ takes a fractional @xmath0-medians solution @xmath185 and an @xmath37 and outputs a random solution @xmath12 .",
    "the scheme is the same as the facility - location rounding scheme in fig .",
    "[ flrs ] except for the termination condition .",
    "the modified algorithm terminates after the first iteration in which the facility cost exceeds @xmath186 $ ] * or * all customers are assigned with assignment cost less than @xmath187 .",
    "we analyze this rounding scheme using wald s inequality and then derandomize it to obtain a greedy algorithm ( fig .",
    "[ wia ] ) .",
    "[ irsg ] let @xmath12 be the output of the weighted @xmath0-medians rounding scheme given input @xmath154 .",
    "then @xmath188 and with positive probability @xmath189 .",
    "the bound on @xmath14 always holds due to the termination condition of the algorithm .",
    "let random variable @xmath49 be the number of iterations of the rounding scheme .",
    "let random variable @xmath190 be the number of not - yet - assigned customers at the end of round @xmath148 ( @xmath191 ) .",
    "by fact 2 in the proof of guarantee  [ flrsg ] , @xmath192 = ( 1 - 1/|x| ) u_{t-1}$ ] .",
    "define random variable @xmath193 to be the total cost of the current ( partial ) assignment of customers to facilities at the end of round @xmath148 . because each customer is reassigned with probability @xmath178 in each round",
    ", it is not to hard to show that @xmath194=(1 - 1/|x|)d_{t-1}+d/|x|.$ ]    define random variable @xmath195 to be the total cost of the facilities chosen so far at the end of round @xmath148 . in each iteration ,",
    "@xmath196 = k/|x|$ ] , so that @xmath197 = c_{t-1 } + k/|x|.$ ]    define @xmath198.$ ] then using @xmath199 and the two facts established in the preceding three paragraphs , a calculation shows @xmath200 \\le 0.$ ] by wald s inequality , this implies @xmath201 \\le \\phi_0",
    "< \\ln n.$ ] thus , with positive probability , @xmath202 assuming this event occurs , we will show that at the end all elements are covered and the assignment cost is not too high .",
    "if the rounding scheme terminates because all elements are covered and the assignment cost is less than @xmath203 , then clearly the performance guarantee holds . otherwise the algorithm terminates because the facility cost @xmath204 exceeds @xmath205 .",
    "this lower bound on the size and the occurrence of the event `` @xmath206 '' imply that @xmath207 and @xmath208 .",
    "+    next we apply the method of conditional probabilities .",
    "let @xmath49 , @xmath193 , @xmath190 , @xmath195 , and @xmath209 ( @xmath191 ) be defined as in the proof of guarantee  [ irsg ] for the @xmath0-medians rounding scheme .",
    "that proof showed that @xmath201 < \\ln n$ ] , and that if @xmath210 then @xmath12 meets the performance guarantee .    to obtain the greedy algorithm , in each iteration we replace the random choices by deterministic choices .",
    "let @xmath211 , @xmath212 , and @xmath213 denote , respectively , the assignment cost , number of unassigned elements , and facility cost at the end of the @xmath148th iteration of the greedy algorithm ( analogous to @xmath193 , @xmath190 , and @xmath195 for the randomized algorithm ) .",
    "the greedy algorithm will make its choices in a way that maintains the invariant @xmath214 < \\ln n.\\ ] ] note that the expectation above is with respect to the random experiment .",
    "that is , the invariant says that _ if _ , starting from the current configuration , the _ remaining _ choices were to be made randomly , then ( in expectation ) @xmath215 would end up less than @xmath47 .",
    "define @xmath216 $ ] ( analogous to @xmath209 for the randomized algorithm ) .",
    "the proof of guarantee  [ irsg ] easily generalizes to show @xmath217 \\le { \\tilde{\\phi}}_t.$ ] thus , it suffices to maintain the invariant @xmath218 . since @xmath219 , the invariant holds initially .    during each iteration @xmath148 ,",
    "the algorithm chooses a facility @xmath9 and assigns it a set of customers @xmath220 so that @xmath221 .",
    "a calculation shows @xmath222 is less than + @xmath223 it suffices to choose @xmath9 and @xmath220 so that the above is non - positive .",
    "whatever @xmath224 , @xmath225 , and @xmath226 are , if @xmath9 and @xmath220 are chosen randomly , then the expectation of the above is zero .",
    "thus , there is _ some _ choice of @xmath9 and @xmath220 which makes it non - positive .",
    "thus it suffices to choose @xmath9 and @xmath12 to maximize @xmath227 the algorithm considers each facility @xmath9 ; for each @xmath9 , it determines the best set @xmath220 of customers to assign .",
    "the algorithm is shown in fig .",
    "[ wia ] .",
    "the termination condition in the algorithm differs from the one in the rounding scheme , but the modified termination condition suffices because it follows from the analysis that whatever @xmath0 is , the algorithm will terminate no later than the first iteration such that the facility cost exceeds @xmath228 . by the derivation ,    [ wiag ] given @xmath62 , and @xmath21 such that a fractional solution of cost @xmath0 and assignment cost at most @xmath21 exists , the greedy weighted @xmath0-medians algorithm ( fig .  [ wia ] ) returns a solution @xmath12 such that @xmath229 and @xmath230 .    without loss of generality ( since we are approximately solving the ip )",
    "for the unweighted problem , the number of iterations is @xmath232 .",
    "no facility is chosen twice , so the number of iterations is always at most @xmath233 , the number of facilities .",
    "let @xmath234 .",
    "the weighted @xmath0-medians problem has a @xmath235$]-approximation algorithm that runs in @xmath236 linear - time iterations , or @xmath232 iterations for the unweighted problem .",
    "in this section we derive and analyze a lagrangian - relaxation , @xmath237$]-approximation algorithm for the fractional unweighted @xmath0-medians problem . the rounding scheme is shown in fig .  [ fkmrs ] .",
    "we use the chernoff and markov bounds to bound the probability of failure .",
    "[ frsg ] let @xmath238 be the output of the fractional @xmath0-medians rounding scheme . then with positive probability @xmath238 has @xmath239 and @xmath240 .",
    "recall @xmath241 and @xmath242 .",
    "the bound on the cost always holds , because each of the @xmath243 iterations adds 1 to @xmath244 .",
    "it remains to show that with positive probability , after the final iteration , @xmath245 and each @xmath246 .",
    "since each iteration increases @xmath247 by @xmath248 in expectation , finally @xmath249 \\le ( nk)d / k = dn$ ] . by the markov bound , @xmath250 \\le 1-\\epsilon$ ] .    for any customer @xmath10 , @xmath251 is the sum of @xmath243 independent 0 - 1 random variables each with expectation at least @xmath252 , so by the chernoff bound , @xmath253",
    "< \\exp(-{{{{\\operator@font \\mathrm{\\tt ch}}}}}(-\\epsilon ) n)$ ] , which is at most @xmath254 by the choice of @xmath255 .    by the naive union bound , @xmath256    < ( 1-\\epsilon ) + n(\\epsilon / n ) = 1 $ ] .",
    "next we sketch how the method of conditional expectations yields the algorithm shown in fig .",
    "the proof of guarantee  [ frsg ] implicitly bounds the probability of failure by the expectation of @xmath257 and it shows that the expectation is less than 1 .",
    "an upper bound ( called a `` pessimistic estimator '' @xcite ) of the conditional expectation of the final value of the above , given the current value of @xmath154 and the number @xmath148 of remaining iterations , is @xmath258 the algorithm chooses @xmath9 and @xmath220 in each iteration in order to minimize the increase in the above quantity , which consequently stays less than 1 .",
    "+    [ fag ] the fractional @xmath0-medians algorithm in fig .",
    "[ fa ] returns a fractional solution @xmath259 having @xmath260 and @xmath261 .",
    "( sketch . )",
    "let @xmath262 be as defined above .",
    "the algorithm maintains the invariant that with @xmath148 iterations remaining , @xmath263 .",
    "it is straightforward to verify that the invariant is initially true , and that if is true at the end , then the performance guarantee is met .",
    "we verify that the invariant is maintained at each step .",
    "the increase in @xmath262 in a single iteration is proportional to @xmath264 ) \\,-\\",
    ", \\sum_c y(c)\\ ] ] where @xmath265 before the iteration for suitably chosen scalar @xmath266 .",
    "if @xmath9 and @xmath220 were chosen randomly as in the rounding scheme , the expectation of the above would be at most 0 .",
    "the choice made by the algorithm minimizes the above quantity , therefore the algorithm maintains the invariant .",
    "[ fkm ] let @xmath234 .",
    "the fractional @xmath0-medians problem has a @xmath3$]-approximation algorithm that runs in @xmath4 linear - time iterations .",
    "the rounding scheme for fractional facility location is the same as the rounding scheme for fractional @xmath0-medians in fig .",
    "[ fkmrs ] , except for the termination condition .",
    "the modified algorithm terminates after the first iteration where each @xmath246 , where @xmath255 is chosen to be at least @xmath267 s.t .",
    "@xmath268 is an integer .",
    "we use the chernoff - wald bound to analyze the scheme .",
    "[ fflg ] let @xmath238 be the output of the fractional facility - location rounding scheme as described above .",
    "then @xmath238 is a fractional solution to the facility location lp and @xmath269 \\le ( 1-\\epsilon)^{-1}(d+k)$ ] .",
    "the termination condition ensures that all customers are adequately covered .",
    "it remains to bound @xmath269 $ ] .",
    "let r.v .",
    "@xmath49 denote the number of iterations of the rounding scheme . in each iteration ,",
    "the expected increase in @xmath270 is @xmath271 . by wald s inequality , at termination ,",
    "@xmath272 \\le e[t](k+d)/|{{x}^{*}}|$ ] .",
    "it remains to show @xmath54 \\le n|{{x}^{*}}|$ ] .",
    "( recall that @xmath273 . )    for any customer @xmath10 , the probability that @xmath251 is incremented in a given iteration is at least @xmath274 , independently of the previous iterations .",
    "let r.v .",
    "@xmath275 at the end .",
    "note that , by the choice of @xmath255 , in fact @xmath276 .    by the chernoff - wald bound , @xmath277 \\ge ( 1-\\epsilon)e[t]/|{{x}^{*}}|$ ] ( provided @xmath278 $ ] , which indeed holds by the choice of @xmath255 ) .",
    "rewriting gives @xmath54 \\le n|{{x}^{*}}|$ ] .",
    "next we sketch how applying the method of conditional expectations gives the lagrangian - relaxation algorithm shown in fig .",
    "below we let @xmath279 denote the value of @xmath154 after the final iteration of the algorithm and @xmath154 denote the value at the `` current '' iteration .",
    "the analysis of the rounding scheme shows that @xmath280 \\le n\\,(k+d)$ ] .",
    "the conditional expectation of @xmath281 at the end , given the current @xmath154 , is @xmath282(k+d)/|x^*|$ ] , where random variable @xmath148 is the number of iterations left .",
    "the proof of chernoff - wald , in this context , argues that the quantity @xmath283 is @xmath284 initially , at most @xmath268 finally , and decreases in expectation at least @xmath285 in each iteration",
    ". an easy generalization of the argument shows @xmath286 $ ] is at most @xmath287 .",
    "this gives us our pessimistic estimator : @xmath288 \\le { \\widehat{{\\phi}}}(x)$ ] where @xmath289 the algorithm chooses @xmath9 and @xmath220 to keep @xmath262 from increasing ( although not necessarily to _ minimize _",
    "@xmath262 ) at each round .",
    "+    [ fflag ] let @xmath259 be the output of the algorithm shown in fig .  [ ffla ] .",
    "then @xmath259 is a fractional solution to the facility location lp and @xmath290 , where @xmath154 ranges over all fractional solutions .",
    "( sketch ) define @xmath262 as above .",
    "the algorithm maintains the invariant @xmath291 .",
    "a calculation shows that the invariant is initially true by the choice of @xmath255 . clearly if the invariant is true at the end the performance guarantee holds . in a given iteration ,",
    "the increase in @xmath262 is at most    @xmath292 times @xmath293 where @xmath294 .",
    "if @xmath9 and @xmath220 were chosen randomly as in the rounding scheme , the expectation of the above quantity would be non - positive .",
    "thus , to keep it non - positive , it suffices to choose @xmath9 and @xmath10 to maximize @xmath295 which is what the algorithm does .    in each iteration",
    ", at least one customer @xmath10 with @xmath296 has @xmath251 incremented .",
    "thus the number of iterations is @xmath46 .",
    "each iteration can be implemented in linear times @xmath297 time .",
    "thus ,    let @xmath298 .",
    "fractional facility location has a @xmath45$]-approximation algorithm that runs in @xmath46 iterations , each requiring time linear in the input size times @xmath47 .",
    "is there a _ greedy _ @xmath184$]-approximation algorithm for facility location ?",
    "a @xmath299$]-approximation algorithm for _ weighted _ @xmath0-medians ? a @xmath300$]- or @xmath301$]-approximation algorithm for fractional @xmath0-medians ?",
    "a lagrangian - relaxation algorithm for fractional _ weighted _ @xmath0-medians ?    the running times of all of the algorithms here can probably be improved using techniques similar to the one that fleischer applied to improve garg and konemann s multicommodity flow algorithm @xcite , or ( depending on the application ) using standard data structures .    in practice ,",
    "changing the objective function of the lp relaxation of the ip to better reflect the performance guarantee might be worthwhile .",
    "for example , if one is going to randomly round a fractional solution @xmath154 to the facility - location lp , it might be better to minimize @xmath302 rather than @xmath303 .",
    "this gives a performance guarantee that is provably as good , and may allow the lp to compensate for the fact that the difficulty of approximating the various components of the cost varies .",
    "thanks to sanjeev arora , lisa fleischer , naveen garg , and david shmoys for helpful comments .    10    allan borodin and ran el - yaniv . .",
    "cambridge university press , 1998 .",
    "m.  charikar , s.  guha , e.  tardos , and d.b .",
    "shmoys . a constant - factor approximation algorithm for the @xmath0-median problem . in _ proceedings of the thirty first annual acm symposium on theory of computing _ , 1999 .",
    "v.  chvatal . a greedy heuristic for the set - covering problem .",
    ", 4(3):233235 , 1979 .    lisa fleischer .",
    "unpublished manuscript .",
    "garg and konemann .",
    "faster and simpler algorithms for multicommodity flow and other fractional packing problems . in _ 39th annual symposium on foundations of computer science _ , 1998 .",
    ". unpublished manuscript . distributed at dagsthl , 1998 .",
    "sudipto guha and samir khuller .",
    "greedy strikes back : improved facility location algorithms . in _ proceedings of the ninth annual acm - siam symposium on discrete algorithms _ , pages 649657 , 1998",
    ".    dorit  s. hochbaum .",
    "heuristics for the fixed cost median problem . , 22(2):148162 , 1982 .",
    "david  s. johnson .",
    "approximation algorithms for combinatorial problems .",
    ", 9:256278 , 1974 .",
    "lin and jeffrey  scott vitter .",
    "-approximations with minimum packing constraint violation ( extended abstract ) . in _ proceedings of the twenty fourth annual acm symposium on theory of computing _ , pages 771782 , 1992 .",
    "lszl lovsz . on the ratio of optimal integral and fractional covers . , 13:383390 , 1975 .",
    "george  l. nemhauser and laurence  a. wolsey . .",
    "john wiley and sons , new york , 1988 .",
    "serge  a. plotkin , david  b. shmoys , and va tardos .",
    "fast approximation algorithms for fractional packing and covering problems .",
    ", 20(2):257301 , 1995 .",
    "prabhakar raghavan .",
    "probabilistic construction of deterministic algorithms approximating packing integer programs .",
    ", 37(2):130143 , october 1988 .",
    "david  b. shmoys , va tardos , and karen aardal .",
    "approximation algorithms for facility location problems ( extended abstract ) . in",
    "_ proceedings of the twenty - ninth annual acm symposium on theory of computing _ , pages 265274 , 1997 .",
    "neal  e. young .",
    "randomized rounding without solving the linear program . in _ proceedings of the sixth annual acm - siam symposium on discrete algorithms _ , pages 170178 , 1995 .",
    "for completeness , we discuss a relation between fractional @xmath0-medians and the mixed / packing covering framework of plotkin , shmoys , and tardos ( pst ) @xcite .",
    "first we consider the @xmath0-set cover problem  a variant of weighted set cover in which each set @xmath7 is given a `` distance '' @xmath305 , and the goal is to choose a cover ( a collection of sets containing all elements ) of size at most @xmath0 , minimizing the total distance .",
    "we formulate the _ decision _ problem ( given @xmath21 , is there a set cover of size at most @xmath0 and distance at most @xmath21 ? ) as a mixed packing / covering problem .",
    "let @xmath306 . for @xmath307 define @xmath308 and @xmath309 .",
    "then the fractional @xmath304-set cover problem is the packing / covering problem @xmath310    we can solve this using the pst algorithm as follows .",
    "the input to that algorithm is @xmath311 .",
    "we can use it to compute an approximate solution @xmath154 such that @xmath312 and @xmath313 ( provided the original problem is feasible ) .",
    "we scale @xmath154 , multiplying it by @xmath314 , to get the final output .    with care , we can show that to implement the pst algorithm , it suffices to have a subroutine that , given a vector @xmath315 , returns @xmath307 minimizing @xmath316 .",
    "an optimal @xmath154 can be found by enumerating the sets and choosing the set @xmath7 that minimizes @xmath317    the running time of the pst algorithm is dominated by the time spent in this subroutine .",
    "the subroutine is called @xmath318 times , where @xmath233 is the number of elements and @xmath319 is the _ width _ of the problem instance , which in this case is @xmath320 thus ,    the fractional @xmath0-set cover decision problem reduces to a mixed packing / covering problem of width @xmath321 . if a problem instance is feasible , the algorithm of @xcite yields a fractional solution @xmath154 with @xmath322 and @xmath313 in time linear in the input size times @xmath318 .    in many cases",
    ", we can assume without loss of generality that @xmath323 , in which case the width is @xmath0 .",
    "except for the fact that this is a decision procedure , this is comparable to corollary  [ fkm ] .",
    "( although that bound requires no assumption about @xmath21 . )",
    "next we sketch how weighted @xmath0-medians reduces to @xmath0-set cover .",
    "we adapt hochbaum s facility - location - to - set - cover reduction .",
    "fix a weighted @xmath0-medians instance with @xmath38 facilities and @xmath233 customers @xmath324 .",
    "construct an ( exponentially large ) family of sets as follows .",
    "for each facility @xmath9 and subset @xmath220 of customers , define a set @xmath325 , with @xmath326 and @xmath327 .",
    "then each @xmath0-medians solution corresponds to a @xmath0-set cover , and vice versa .",
    "the bijection preserves @xmath328 , and extends naturally to the fractional problems as well .",
    "even though the resulting fractional @xmath0-set is exponentially large , we can still solve it efficiently using pst provided we have a subroutine that , given a vector @xmath315 , efficiently finds a facility @xmath9 and set of customers @xmath220 minimizing @xmath329 .",
    "this @xmath220 and @xmath9 can in fact be found by choosing the facility @xmath9 minimizing @xmath330 , where @xmath331 .",
    "thus , we have    the fractional weighted @xmath0-medians decision problem reduces to a mixed packing / covering problem of width @xmath332 . if a problem instance is feasible , the algorithm of @xcite yields a fractional solution @xmath154 with @xmath322 and @xmath313 in time linear in the input size times @xmath318 .    if each @xmath333 , then @xmath334 , where @xmath233 is the number of customers .",
    "this bound on the running time is a factor of @xmath233 worse than the bound in corollary  [ fkm ] ( though a reduction yielding smaller width may be possible ) ."
  ],
  "abstract_text": [
    "<S> we study the general ( non - metric ) facility - location and weighted @xmath0-medians problems , as well as the fractional facility - location and @xmath0-medians problems . </S>",
    "<S> we describe a natural randomized rounding scheme and use it to derive approximation algorithms for all of these problems .    for facility location and weighted @xmath0-medians , </S>",
    "<S> the respective algorithms are polynomial - time @xmath1$]- and @xmath2$]-approximation algorithms . </S>",
    "<S> these performance guarantees improve on the best previous performance guarantees , due respectively to hochbaum ( 1982 ) and lin and vitter ( 1992 ) . for fractional @xmath0-medians , </S>",
    "<S> the algorithm is a new , lagrangian - relaxation , @xmath3$]-approximation algorithm . </S>",
    "<S> it runs in @xmath4 linear - time iterations .    for fractional facilities - location ( a generalization of fractional weighted set cover ) , the algorithm is a lagrangian - relaxation , @xmath5$]-approximation algorithm . </S>",
    "<S> it runs in @xmath6 linear - time iterations and is essentially the same as an unpublished lagrangian - relaxation algorithm due to garg ( 1998 ) . by recasting his analysis probabilistically and abstracting it </S>",
    "<S> , we obtain an interesting ( and as far as we know new ) probabilistic bound that may be of independent interest . </S>",
    "<S> we call it the _ chernoff - wald _ bound . </S>"
  ]
}
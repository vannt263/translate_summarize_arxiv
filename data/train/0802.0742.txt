{
  "article_text": [
    "let @xmath0 be a smooth cubic surface over a field @xmath1 in @xmath6 if @xmath7 are three points ( with multiplicities ) lying on a line in @xmath8 not belonging to @xmath9 we write @xmath10 .",
    "thus @xmath11 is a partial and multivalued composition law on @xmath3 .",
    "note that @xmath12 is defined as the set of points in the intersection of @xmath3 with the tangent plane at @xmath13 . if @xmath13 does not lie on a line , this is a cubic curve @xmath14 with double point @xmath15 .",
    "this whole set must be considered as the domain of the multivalued expression @xmath12 , because geometrically all its points can be obtained by drawing tangents with @xmath1-rational direction to @xmath13 .",
    "this means that an important source for generating new rational points on the cubic surface will be doubling the points that were already generated .",
    "the analogue of the mordell - weil theorem for cubic surfaces states that @xmath16 is finitely generated , i.e. , there is a finite subset @xmath2 such that the whole @xmath3 can be obtained from @xmath4 by drawing secants and tangent planes through pairs of ( not necessarily distinct ) previously constructed points , and consecutively adding their new intersection points with @xmath5 by drawing secants we can add only one rational point to @xmath17 while tangent sections give us an infinite number of points that can be generated , by the note above . for a more thorough discussion of various versions of finite generation cf . .",
    "note that , by theorem 11.7 of @xcite , finite generation of @xmath16 implies that the universal quasi - group of @xmath16 , as defined in @xcite , chapter ii , is finite and has @xmath18 elements for some @xmath19 .    in the following ,",
    "we present the procedure we used to test whether @xmath20 is finitely generated , and the results we obtained for thirteen diagonal cubic surfaces , six of them having the rank of their picard group equal to 1 , and seven of them mentioned in , illustrating the cases of surfaces with ranks @xmath21 and @xmath22 of the picard group . we also bring numerical evidence supporting manin s conjecture for the asymptotics of rational points of bounded height on a fano variety .",
    "note that john slater and sir peter swinnerton - dyer have proved in a one - sided estimate for the conjecture in the case when @xmath0 contains two rational skew lines .",
    "all the computations were done using the magma computer algebra system ( cf .",
    "let @xmath23 , where @xmath24 are nonzero integers , be a diagonal cubic surface . using a program due to dan bernstein ( see @xcite ) , we find all rational points on this surface up to height @xmath25 or @xmath26 , where the height of a rational point @xmath27 , with @xmath28 and @xmath29 is defined as @xmath30 we consider also another height function @xmath31 defined by @xmath32 note that a rational point @xmath4 can be uniquely written in the above form up to a sign change of the coordinates .",
    "so , if we assume , in addition , that the first nonzero coordinate of @xmath4 is positive , then there is a unique such canonical form corresponding to each point @xmath33 we order the rational points by increasing @xmath34 .",
    "if there are two or more points having the same height @xmath34 , then we order them lexicographically according to their coordinates in the canonical form .",
    "this defines a total order on the set of rational points .",
    "we will write @xmath35 if @xmath4 precedes @xmath36 in the sorted list , and use the number of a point in this list as its name . we will also refer to this number as the _ index _ of a rational point .",
    "we will use the @xmath37 height function only to study the asymptotics of the number of rational points on a cubic surface , while for the ordering of the points and in the implementation of the main function we will use @xmath34 .",
    "for testing whether a given set of rational points is generating , we use the procedure _ test generating set ( tgs ) _ , which is described below .",
    "the procedure implements essentially a descent method . given an index bound @xmath38 and a set of points @xmath39 that is presumably generating , we perform the following iterative process . in one iteration of loop",
    ", we consider all points in the range @xmath40 that are not in @xmath39 and test whether they can be decomposed as @xmath41 , with @xmath42 .",
    "every point that can be decomposed in such a way is added to the @xmath39 and at the end of the loop , the procedure is reiterated .",
    "as now @xmath39 is bigger , there may be additional points in the range @xmath40 that can be generated because we can choose the points @xmath43 for a possible decomposition from a bigger set .",
    "the procedure is repeated until @xmath39 stabilizes , i.e. , until some iteration of the loop does not add any new points to the @xmath39 .    in order to avoid repeating some operations of composing points",
    ", we use the additional variables @xmath44 , @xmath45 and @xmath46 . @xmath44 stores the value of @xmath39 at the beginning of the iteration of the loop . at the end of the preceding loop",
    ", a number of points will have been added to @xmath39 .",
    "these points are stored in the set variable @xmath45 . during an iteration of the loop , we store in @xmath46 decompositions of the type @xmath47 , with @xmath48 and @xmath49 .",
    "these are the only decompositions that we could further use . indeed ,",
    "if , at some point , @xmath1 was added to @xmath39 , then by searching in @xmath46 , we would find the decomposition @xmath50 of @xmath51 and we would add @xmath51 to @xmath39 without performing any composition of points ( which requires multiplications , so is computationally expensive ) because we know , by the way we constructed @xmath46 , that @xmath49 already .",
    "receiving as input the parameters @xmath39 ( a set of points in @xmath52 that is assumed to be generating ) , and @xmath38 ( the index bound for the points used in the decompositions ) , the @xmath53 procedure does the following :    1 .",
    "set @xmath54 , @xmath55 .",
    "set @xmath56 , + @xmath57 .",
    "[ loop ] 3 .",
    "if @xmath58 , return @xmath39 .",
    "4 .   for every point @xmath59",
    "do : + search in @xmath46 for decompositions of @xmath51 as @xmath41 with @xmath60 + if such a decomposition exists , add @xmath51 to @xmath39 + else for every point @xmath61 in @xmath45 do : + @xmath62 + if @xmath63 + add @xmath51 to @xmath39 + break + else if @xmath64 add the decomposition @xmath65 of @xmath51 to @xmath46 + end for + end for .",
    "go to step [ loop ] .",
    "let us explain in more detail the way the algorithm works .",
    "suppose that an iteration of the outer loop has just finished , and we are in step [ loop ] .",
    "we set @xmath56 and test whether this is the empty set .",
    "if this is so , then during the last iteration we could not generate any new points , so the maximum set of points that can be generated is the current @xmath39 .",
    "if @xmath45 is not empty , then during the last iteration we found a number of new points that could be generated and added them to @xmath39 ( these are the elements of @xmath45 ) , so there is hope of generating other points .",
    "we consider a point @xmath66 .",
    "since we have already tested during the previous iteration whether we could decompose @xmath51 as @xmath41 , with @xmath67 , all we have to check now is whether we can write @xmath68 for @xmath69 and either @xmath70 or @xmath60 . at the previous iterations of the loop",
    "all compositions of @xmath51 with points in @xmath44 that could further be used ( i.e. , compositions whose result is not bigger than @xmath38 ) were stored in @xmath46 , so we can check for the first possibility by searching in the vector @xmath46 . since by construction we only store in @xmath46 decompositions of the type @xmath41 , with @xmath71 , all we have to check in the beginning of step @xmath72 is whether @xmath60 - we are sure that @xmath71 . in order to check for the second possibility , we have to compose @xmath51 with every point @xmath73 .",
    "if the result @xmath1 of the composition is in @xmath45 , then we can write @xmath13 as a composition of two points in @xmath45 , so we add @xmath51 to @xmath39 .",
    "if the result @xmath74 , but could be further used ( i.e. , @xmath64 ) , then we store the corresponding decomposition @xmath50 of @xmath51 in @xmath46 .",
    "the out of bounds compositions , i.e. , such that @xmath75 , are implicitly remembered in the process ( in the sense that they are done only once . )    using the vector @xmath46 of course implies a tradeoff between space and speed , but we considered the latter to be more important .",
    "even with @xmath46 , the computations for @xmath53 for bounds @xmath38 in the range of @xmath76 last for several days and sometimes even weeks on an intel pentium iv processor with 2.26 ghz .",
    "before we proceed with the presentation of the results , let us as provide an estimate of the height of the composition of two rational points . here by @xmath77",
    "we mean either @xmath37 or @xmath34 since the estimation of the asymptotics does not depend on the choice of the height function .",
    "let @xmath78 be a diagonal cubic surface , where @xmath79 are nonzero integers , and let @xmath80 .",
    "if @xmath81 and @xmath82 are two distinct points in @xmath52 that do not lie on a line in @xmath0 , then @xmath83    @xmath84 let @xmath85 , @xmath86 be in canonical form . then one can check that @xmath87 where @xmath88 @xmath89 since the above coordinates of @xmath90 are integers , the conclusion follows .",
    "this upper bound can not be improved because , in most cases , the formula given represents @xmath90 in canonical form ( up to a sign change of the coordinates ) .",
    "concerning the doubling of points , if @xmath91 is a rational point not lying on a line in @xmath0 , then there is no upper bound for the height of the points in @xmath92 ( since there are infinitely many such points ) . on the other hand",
    ", there can be many points of small height in @xmath92 , especially if @xmath93 has small height .",
    "listed below are the thirteen diagonal cubic surfaces that were tested for finite generation , ordered according to the ranks of their picard groups : + rank 1 of the picard group :    1 .   @xmath94 .",
    "[ rs ] 2 .   @xmath95 .",
    "[ second_rs ] 3 .   @xmath96 .",
    "[ big_rs ] 4 .   @xmath97 .",
    "[ new_rs ] 5 .   @xmath98 .",
    "[ new_big_rs ] 6 .",
    "+ [ random_rs ] + rank 2 of the picard group : 7",
    ".   @xmath100 .",
    "[ s1 ] 8 .   @xmath101 . [ s2 ] 9",
    ".   @xmath102 .",
    "[ s3 ] + rank 3 of the picard group : 10 . @xmath103 .",
    "[ s4 ] 11 . @xmath104 .",
    "[ s5 ] 12 . @xmath105 .",
    "[ s6 ] 13 .",
    "[ s7 ]    the first six cubic surfaces illustrate the case of picard group rank @xmath107 .",
    "the third surface was considered as an example of a diagonal cubic surface with bigger coefficients .",
    "the lack of success in finding a generating set for this surface ( as opposed to all the other surfaces examined by that point ) motivated the study of the surfaces 45 , which have coefficients of intermediate value between the coefficients of the first , successful surface , and the third , problematic one .",
    "surface [ random_rs ] is aimed to illustrate the case of surfaces with random coefficients .",
    "the remaining seven surfaces were taken from as examples of cubic surfaces with the rank of the picard group @xmath21 and @xmath22 .    in order to find a suitable",
    "generating set @xmath108 to begin with , we tested several small sets for finite generation up to a small index @xmath38 ( @xmath109 , or @xmath110 ) .",
    "we observed that , if the set @xmath108 generates more than @xmath111 of the first @xmath38 points for a small @xmath38 , then this is a good indicator that the set @xmath108 will generate roughly the same percentage of all points up to a much bigger index bound @xmath112 ( which we took to be either @xmath113 or @xmath76 ) .",
    "we chose the initial small sets to be the set of points of indexes @xmath114 . if this did not yield a large enough percentage of points generated",
    ", we would enlarge the initial set to @xmath115 , and continue this way .",
    "generally , we were lucky , in the sense that a few tries would provide us with a good generating set @xmath108 ( a set @xmath108 that generates most of the first @xmath38 points . ) then we would eliminate from @xmath108 the superfluous points , i.e. , the points that could be obtained by composing other points in @xmath108 .",
    "this is the reason for which , for example , the first surface has @xmath116 instead of @xmath117 : the points of indices 1 , 2 and 4 lie in the tangent plane at the point of index @xmath22 .    at first , the only exception was the surface [ big_rs ] , which represents , at least computationally , a problem .",
    "having added the surfaces 45 , we noticed that it is hard to find a generating set using this naive method for these surfaces as well .",
    "we found the following generating sets , listed both as sets of indices and as sets of rational points . here , and",
    "in all subsequent tables , the label _s_ stands for surface. @xmath118    before we go on and list the results we obtained using the _ testgeneratingset _ procedure , let us provide an indication of the asymptotics of the number of points on each cubic surface up to some height @xmath119 note that , as we used dan bernstein s program to find rational points on the diagonal cubic surfaces , here height refers to @xmath120 the asymptotics of the number of points seems to be related with the percentage of points that can be generated up to some height .",
    "for the last seven surfaces , we did not take into consideration the points on the trivial rational lines , i.e. , points of the type @xmath121 , except for the point @xmath122 on the surfaces 79 and the points @xmath122 , @xmath123 , @xmath124 and @xmath125 on the surfaces 1013 , which we need for finite generation .",
    "we include intermediate results of the number of points up to different height limits .",
    "these results seem to confirm manin s conjecture relating the asymptotics of rational points of bounded height on a fano variety with the rank of the picard group of the surface ( see @xcite : ) @xmath126 for @xmath127 , where @xmath77 is an anticanonical height on @xmath0 .",
    "@xmath128    for the surfaces with rank of the picard group equal to @xmath107 we computed , additionally , the number of rational points up to slightly greater height limits , as summarized in the table below ( - means not computed. )    @xmath129    relevant to our claim that these results seem to confirm manin s conjecture are the following graphs based on the tables above . in all graphs , we plotted the number of points up to height @xmath130 divided by @xmath131 for various values of @xmath119 the conjecture would be verified if the plotted points would become arbitrarily close , in the limit , to a line parallel to the @xmath132 axis , of equation @xmath133 where @xmath134 is the constant predicted by manin s conjecture . for a conjecture about the value of this constant , see .",
    ", scaledwidth=121.0% ]    , scaledwidth=132.0% ]    , scaledwidth=127.0% ]    in the remaining , by height we mean @xmath34",
    ".    note that for the surfaces with rank of the picard group equal to two , most of the points are doubled , i.e. , if @xmath135 is a point on the cubic surface , then so is @xmath136 , while for the surfaces with rank of the picard group equal to three , most of the points are quadrupled , i.e. , if @xmath135 is a point on the cubic surface , then so are @xmath136 , @xmath137 and @xmath138 . in the following we list the results which were obtained using the _ testgeneratingset _ procedure .",
    "the generating sets used are the ones enumerated above , while the index bounds and the corresponding height bounds are given in the third and second columns of the table .",
    "iter is the number of iterations of the outer loop of the procedure , and the first bad point refers to the point of smallest index that could not be generated by the procedure .",
    "for example , the first line in the table reads  the procedure _ testgeneratingset _ called for surface 1 , with index bound @xmath140 corresponding to the height bound @xmath141 , and initial generating set @xmath116 ( or @xmath142 ) , generates @xmath143 rational points , which represents @xmath144 of the first @xmath140 points , in @xmath72 iterations of the outer loop .",
    "the smallest point that could not be generated has index @xmath145 and height @xmath146 .     @xmath147    @xmath148    @xmath149    note that , in general , when using a greater index bound we found that the first bad point changed ( i.e. , another point of greater height and index became the first bad point ) , meaning that using stepping stones of bigger height typically fills up the gaps obtained when using a lower index bound",
    "this is a good indicator that if we continue increasing the index ( and thus the height ) bounds , we will gradually generate _ all _ the points up to bigger and bigger heights .",
    "let us see now what happens with the problematic surfaces 35 .",
    "unfortunately , any try of finding a generating set to begin with , that finds first bad points of increasing height , and that generates a percentage of points similar to the ones obtained for the good surfaces was not successful",
    ". not even a brute force approach like considering the initial _ generatedset _ to be , say , the first @xmath140 or @xmath150 points does not yield satisfactory results .",
    "the results are better for the surfaces 45 than for the surface 3 , with the biggest coefficients , but still very bad. here is an illustration of the behavior of these surfaces when starting with the _ generatedset _ @xmath151 :    @xmath152    these results seem to support either that @xmath153 is not a generating set for any of the three surfaces , or that the stepping stones needed to fill up the gaps ( i.e. , the rational points needed to decompose the first bad points ) have very big heights .",
    "although the percentages of generated points obtained for the surfaces 45 are slightly better than the percentages for the surface 3 , they still become smaller and smaller as the index bound limit ( and so also the height ) grow .",
    "but the most important negative indicator is that the first bad point never changes .    in order to make progress , we introduced another approach to finding a generating set for the surfaces 35 , based on the idea of throwing in ( adding to the _ generated set _ )",
    "the first bad points if they can not be generated by decomposition .",
    "our aim is to obtain , after adding sufficiently many",
    "first bad points , a set of points that generates a stable ( or even better , increasing ) percentage of points for increasing index bounds , and a changing first bad point behavior , i.e. , applying the _ tgs _ procedure to increasing index bounds would result in finding first bad points of increasing heights .",
    "we implement this new approach in the following way .",
    "we apply the _ tgs _ procedure to a ( small ) generating set and an index bound of @xmath150 .",
    "we obtain a first bad point that unfortunately stays the same when increasing the index bound ( as observed when using our first approach ) .",
    "we apply again the _ tgs _ procedure to the initial generating set _ and _ this first bad point , with an index bound of @xmath150 .",
    "we obtain another first bad point , of bigger index and height than the initial one .",
    "we add this point to our generating set ( which now contains also the initial first bad point ) and continue this way .",
    "we stop when we have added sufficiently many first bad points to our initial set so that this new , bigger generating set fulfills the two objectives mentioned above .",
    "once we have obtained such a set , we stop adding points to our generating set and just increase the index bounds to make sure the percentage of generated points is indeed stable or increasing , and that the height of the first bad point grows as the index bound is increased .",
    "for example , for surface 4 , we start with _ generated set _",
    "we obtain the first bad point @xmath155 , which is stable - stays the same even if we increase the index bound .",
    "we add it to the _ generated set _ and call again the _ tgs _ procedure .",
    "we obtain more points , and another first bad point .",
    "we add this new bad point to the _ generated set _ and continue this way , gradually filling the holes . at",
    "first we kept the index bound constant , until we obtained a reasonable percentage of generated points .",
    "then we tested whether the first bad point changes when increasing the index bound and keeping the initial _ generated set _ constant ( i.e. , we stopped filling the holes , and just increased the index bound . ) for surfaces 4 and 5 this approach seems successful , as reflected in the tables below .",
    "@xmath156    @xmath157    unfortunately , for surface 3 this approach does not seem to work . after adding many more first bad points to the initial generating set than for the surfaces 45 , we still did not obtain a good generating set , as illustrated below .",
    "@xmath158    since this is going way too slow , we will throw in our _ generated set _ not only the first bad point , but the first 10 bad points .",
    "@xmath159    this is again too slow , so we start inserting the first 20 bad points to our _ generated set_.    @xmath160    next we present other statistical data .",
    "it seems that the percentage of points on a surface that can be strongly decomposed ( a point @xmath13 is _ strongly decomposable _ if it has a decomposition @xmath161 with @xmath162 ) up to some index @xmath112 is approximately constant for various values of @xmath112 .",
    "this suggests that this percentage may be an invariant for the surface .",
    "it seems likely that if this percentage is bigger , than _ testgeneratingset _ will generate more points ( up to some index ) , using a suitable @xmath39 .",
    "this is confirmed if we study the first two surfaces .",
    "surface [ rs ] has roughly @xmath163 points that are not strongly decomposable up to the index @xmath112 ( for @xmath164 ) , while the surface [ second_rs ] has only @xmath165 such points ; and indeed , if we compare the results of @xmath53 for the two surfaces , we notice that @xmath53 for the surface [ second_rs ] generates more points ( up to the same index ) than @xmath53 for the surface [ rs ] .",
    "also , note that the percentage of points that are strongly decomposable for the surface [ big_rs ] is very small ( approximately @xmath166 . )",
    "this may be one of the explanations for our lack of success with this surface .",
    "the theory surrounding the mordell - weil problem for cubic surfaces seems not very well developed , mainly because of the difficulties caused by the lack of a group structure on the operation of composing points . in this paper we presented numerical data for thirteen diagonal cubic surfaces , in the hope of developing some intuition on a possible finiteness conjecture ( first mentioned by manin , cf .",
    "@xcite and @xcite ) . for each of the surfaces",
    ", we tried to find a generating set .",
    "a naive method gave positive results for ten of the surfaces , while a more rigorous method was needed to obtain similar ( but not as positive ) results for two of the other surfaces .",
    "for these surfaces , the numerical data suggest that they might be indeed finitely generated .",
    "the remaining surface resisted to both methods .",
    "we can not say , however , whether this means that the surface is not finitely generated , or that this is just a sign of the limits of the methods used .",
    "* acknowledgement * the results of this paper arose as part of the author s research project at the max planck institute for mathematics in bonn , under the guidance of y.  i.  manin .",
    "the author would like to thank y.  i.  manin for providing this very enjoyable opportunity to him .",
    "d.  kanevsky , yu .  i.  manin .",
    "_ composition of points and mordell  weil problem for cubic surfaces . _ in : rational points on algebraic varieties ( ed . by e.",
    "peyre , yu .",
    "tschinkel ) , progress in mathematics , vol . 199 , birkhuser , basel , 2001 , 199219 .",
    "preprint math.ag/0011198    is described in w. bosma , j. cannon and c. playoust : _ the magma algebra system i : the user language _ , j. symb .",
    "* 24 * , 235265 ( 1997 ) .",
    "( also see the magma home page at http://www.maths.usyd.edu.au:8000/u / magma/. )      yu .",
    "i.  manin .",
    "_ mordell - weil problem for cubic surfaces .",
    "_ in : advances in the mathematical sciences ",
    "crm s 25 years ( l. vinet , ed . )",
    "crm proc . and",
    "lecture notes , vol .",
    "11 , amer .",
    "soc . , providence , ri , 1997 , pp .",
    "313318 . preprint math.ag/9407009    e.  peyre and y.  tschinkel , _ tamagawa numbers of diagonal cubic surfaces of higher rank .",
    "rational points on algebraic varieties _ , progr .",
    ", 199 , birkhuser , basel , 2001 , pp . 275305 ."
  ],
  "abstract_text": [
    "<S> let @xmath0 be a plane smooth cubic curve over a finitely generated field @xmath1 . </S>",
    "<S> the mordell - weil theorem for @xmath0 states that there is a finite subset @xmath2 such that the whole @xmath3 can be obtained from @xmath4 by drawing secants and tangents through pairs of previously constructed points and consecutively adding their new intersection points with @xmath5 in this paper we present numerical data regarding the analogous statement for cubic surfaces . for the surfaces examined , we also test manin s conjecture relating the asymptotics of rational points of bounded height on a fano variety with the rank of the picard group of the surface . </S>"
  ]
}
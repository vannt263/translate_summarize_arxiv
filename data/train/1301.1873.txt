{
  "article_text": [
    "a pattern @xmath2 is a non - empty word over an alphabet @xmath10 of capital letters called _",
    "variables_. a word @xmath11 over @xmath1 is an instance of @xmath2 if there exists a non - erasing morphism @xmath6 such that @xmath12 .",
    "the avoidability index @xmath13 of a pattern @xmath2 is the size of the smallest alphabet @xmath1 such that there exists an infinite word @xmath0 over @xmath1 containing no instance of @xmath2 as a factor .",
    "bean , ehrenfeucht , and mcnulty  @xcite and zimin  @xcite characterized unavoidable patterns , i.e. , such that @xmath14 .",
    "we say that a pattern @xmath2 is @xmath15-avoidable if @xmath16 . for more informations on pattern avoidability",
    ", we refer to chapter 3 of lothaire s book  @xcite .    in this paper , we consider upper bounds on the avoidability index of long enough patterns with @xmath7 variables .",
    "bell and goh  @xcite and rampersad  @xcite used a method based on power series and obtained the following bounds :    [ bgr ] let @xmath2 be a pattern with exactly @xmath7 variables .    * if @xmath2 has length at least @xmath8 then @xmath17 .",
    "@xcite * if @xmath2 has length at least @xmath18 then @xmath19 .",
    "@xcite * if @xmath2 has length at least @xmath20 then @xmath21 .",
    "@xcite    our main result improves these bounds :    [ 2tok ] let @xmath2 be a pattern with exactly @xmath7 variables .    *",
    "if @xmath2 has length at least @xmath8 then @xmath19 . * if @xmath2 has length at least @xmath9 then @xmath21 .    theorem  [ 2tok ] gives a positive answer to problem 3.3.2 of lothaire s book  @xcite .",
    "the bound @xmath8 in theorem  [ 2tok].(a ) is tight in the sense that for every @xmath22 , the pattern @xmath23 with @xmath7 variables in the family @xmath24 @xmath25 @xmath26 @xmath27 has length @xmath28 and is unavoidable .",
    "similarly , the bound @xmath9 in theorem  [ 2tok].(b ) is tight in the sense that for every @xmath22 , the pattern with @xmath7 variables in the family @xmath29 aabaa,@xmath30 @xmath31 has length @xmath32 and is not 2-avoidable .",
    "hence , this shows that the upper bound 3 of theorem  [ 2tok].(a ) is best possible .",
    "+ the avoidability index of every pattern with at most 3 variables is known , thanks to various results in the literature .",
    "in particular , theorem  [ 2tok ] is proved for @xmath33 :    * for @xmath34 , the famous results of thue  @xcite give @xmath35 and @xmath36 .",
    "* for @xmath37 , every binary pattern of length at least 4 contains a square , and is thus 3-avoidable .",
    "moreover , roth  @xcite proved that every binary pattern of length at least 6 is 2-avoidable . * for @xmath38 ,",
    "cassaigne  @xcite began and the first author  @xcite finished the determination of the avoidability index of every pattern with at most 3 variables .",
    "every ternary pattern of length at least 8 is 3-avoidable and every binary pattern of length at least 12 is 2-avoidable .",
    "so , there remains to prove the cases @xmath39 .",
    "section  [ sec : preliminary ] is devoted to some preliminary results .",
    "we prove theorem  [ 2tok].(a ) in section  [ 3-a ] as a corollary of a result of bell and goh  @xcite . in section  [ 2-a ] ,",
    "we prove theorem  [ 2tok].(b ) using the so - called _ entropy compression method_.",
    "let @xmath2 be a pattern over @xmath40 .",
    "an _ occurrence _ @xmath41 of @xmath2 is an assignation of a non - empty words over @xmath1 to every variable of @xmath2 that form a factor .",
    "note that two distinct occurrences of @xmath2 may form the same factor .",
    "for example , if @xmath42 then the occurrence @xmath43 of @xmath2 forms the factor @xmath44 ; on the other hand , @xmath45 is a distinct occurrence of @xmath2 which forms the same factor @xmath44 .    a pattern @xmath2 is _ doubled _ if every variable of @xmath2 appears at least twice in @xmath2 .",
    "a pattern @xmath2 is _ balanced _ if it is doubled and every variable of @xmath2 appears both in the prefix and the suffix of length @xmath46 of @xmath2 .",
    "note that if the pattern has odd length , then the variable @xmath47 that appears in the middle of @xmath2 ( i.e. in position @xmath48 ) must appear also in the prefix and in the suffix in order to make @xmath2 balanced .",
    "[ cl : balanced ] for every integer @xmath49 , every pattern with at most @xmath7 variables and length at least @xmath50 contains a balanced pattern @xmath51 with at most @xmath52 variables and length at least @xmath53 as a factor .",
    "we prove this claim by induction on @xmath7 . if @xmath34 , then @xmath2 has size at least @xmath49 and is clearly balanced .",
    "suppose this is true for some @xmath54 , i.e. @xmath2 with @xmath55 variables and length at least @xmath56 contains a balanced pattern @xmath51 as a factor with at most @xmath57 variables and length at least @xmath58 .",
    "let @xmath59 and let @xmath60 ( resp .",
    "@xmath61 ) be the prefix ( resp .",
    "the suffix ) of @xmath2 of size @xmath46 . if @xmath2 is not balanced , then there exists a variable @xmath47 in @xmath2 that does not occur in @xmath62 for some @xmath63 .",
    "thus , @xmath62 has at most @xmath64 variables and length at least @xmath56 .",
    "therefore , by induction hypothesis , @xmath2 contains a balanced pattern with at most @xmath57 variables and length at least @xmath53 as a factor .    in the following",
    ", we will only use the fact that the pattern @xmath51 in claim  [ cl : balanced ] is doubled instead of balanced .",
    "we prove theorem  [ 2tok].(a ) as a corollary of the following result of bell and goh  @xcite :    [ k6doubled ] every doubled pattern with at least 6 variables is 3-avoidable .",
    "theorem  [ 2tok].(a ) we want to prove that every pattern with exactly @xmath7 variables and length at least @xmath8 is 3-avoidable , or equivalently , that every pattern with at most @xmath7 variables and length at least @xmath8 is 3-avoidable . by claim  [ cl : balanced ] , every such pattern contains a doubled pattern @xmath51 as a factor with at most @xmath52 variables and length at least @xmath65 .",
    "so there remains to show that every doubled pattern with at most @xmath7 variables and length at least @xmath8 is @xmath66-avoidable . as discussed in the introduction , the case of patterns with at most @xmath66 variables has been settled .",
    "now , it is sufficient to prove that doubled patterns of length at least @xmath67 are 3-avoidable .",
    "suppose that @xmath60 is a doubled pattern containing a variable @xmath47 that appears at least 4 times .",
    "replace @xmath68 occurrences of @xmath47 with a new variable to obtain a pattern @xmath61 .",
    "example : we replace the first and third occurrence of @xmath69 in @xmath70 by a new variable @xmath71 to obtain @xmath72",
    ". then @xmath61 is a doubled pattern such that @xmath73 and @xmath74 , since every occurrence of @xmath60 is also an occurrence of @xmath61 .    given a doubled pattern @xmath2 of length at least @xmath75 , we make such replacements as long as we can .",
    "we thus obtain a doubled pattern @xmath51 of length at least @xmath75 such that @xmath76 . moreover ,",
    "every variable in @xmath51 appears either @xmath68 or @xmath66 times and therefore @xmath51 contains at least @xmath77 variables .",
    "so @xmath51 is @xmath66-avoidable by lemma  [ k6doubled ] .",
    "thus @xmath2 is @xmath66-avoidable , which finishes the proof .",
    "we want to prove that every pattern with exactly @xmath7 variables and length at least @xmath78 is 2-avoidable , or equivalently , that every pattern with at most @xmath7 variables and length at least @xmath78 is 2-avoidable . by claim  [ cl : balanced ] , every such pattern contains a doubled pattern @xmath51 as a factor with at most @xmath52 variables and length at least @xmath79 .",
    "so there remains to show that every doubled pattern with at most @xmath7 variables and length at least @xmath78 is @xmath68-avoidable .",
    "as discussed in the introduction , the case of patterns with at most @xmath66 variables has been settled .",
    "now , it is sufficient to prove theorem  [ 2tok].(b ) for doubled patterns and @xmath39 .",
    "let @xmath80 be the alphabet .",
    "for the remaining of this section , let @xmath39 and @xmath81 .",
    "suppose by contradiction that there exists a doubled pattern @xmath2 on @xmath7 variables and length at least @xmath82 that is not @xmath68-avoidable .",
    "then there exists an integer @xmath55 such that any word @xmath83 contains @xmath2 .",
    "we put an arbitrary order on the @xmath7 variables of @xmath2 and call @xmath84 the @xmath85-th variable of @xmath2 .",
    "let @xmath86 be a vector of length @xmath15 .",
    "the following algorithm takes the vector @xmath87 as input and returns a word @xmath0 avoiding @xmath2 and a data structure @xmath88 that is called a _ record _ in the remaining of the paper .",
    "@xmath89    @xmath90    @xmath88 , @xmath0    the way we encode information in @xmath88 at lines  5 and  7 will be explained in subsection  [ subsec : record ] .    in the algorithm avoidpattern ,",
    "let @xmath91 be the word @xmath0 after @xmath92 steps .",
    "clearly , @xmath91 avoids @xmath2 at each step . by contradiction hypothesis , the resulting word @xmath0 of the algorithm ( that is @xmath93 ) has length less than @xmath55 .",
    "we will prove that each output of the algorithm allows to determine the input .",
    "then we obtain a contradiction by showing that the number of possible outputs is strictly smaller than the number of possible inputs when @xmath15 is chosen large enough compared to @xmath55 .",
    "this implies that every pattern @xmath2 with at most @xmath7 variables and length at least @xmath82 is @xmath68-avoidable .    to analyze the algorithm",
    ", we borrow ideas from graph coloring problems  @xcite .",
    "these results are based on the moser - tardos  @xcite entropy - compression method which is an algorithmic proof of the lovsz local lemma .",
    "an important part of the algorithm is to keep the record @xmath88 of each step of the algorithm .",
    "let @xmath94 be the record after @xmath92 steps of the algorithm avoidpattern . on one hand , given @xmath87 as input of the algorithm , this produces a pair @xmath95 . on the other hand ,",
    "given a pair @xmath95 , we will show in lemma  [ lem : inj ] that we can recover the entire input vector @xmath87 .",
    "so , each input vector @xmath87 produces a distinct pair @xmath95 .",
    "let @xmath96 be the set of input vectors @xmath87 of size @xmath15 , let @xmath97 be the set of records @xmath88 produced by the algorithm avoidpatternand let @xmath98 be the set of different outputs @xmath95 .",
    "after the execution of the algorithm ( @xmath15 steps ) , @xmath93 avoids @xmath2 by definition and therefore @xmath99 by contradiction hypothesis .",
    "hence , the number of possible final words @xmath93 is independent from @xmath15 ( it is at most @xmath100 ) .",
    "we then clearly have @xmath101 .",
    "we will prove that @xmath102 .",
    "the record @xmath88 is a triplet @xmath103 where @xmath104 is a binary word ( each element is @xmath105 or @xmath106 ) , @xmath107 is a vector of @xmath108-sets of non - zero integers and @xmath47 is a vector of binary words . at the beginning ,",
    "@xmath104 , @xmath107 and @xmath47 are empty . at step @xmath92 of the algorithm",
    ", we append @xmath109 $ ] to @xmath110 to get @xmath111 .",
    "if @xmath111 contains no occurrence of @xmath2 , then we append @xmath105 to @xmath104 to get @xmath94 and we set @xmath112 .",
    "otherwise , suppose that @xmath111 contains an occurrence @xmath41 of @xmath2 that forms a factor @xmath4 of length @xmath113 ( @xmath4 is the @xmath113 last letters of @xmath111 ) .",
    "recall that @xmath84 is the @xmath85-th variable of @xmath2 .",
    "let @xmath114 in the factor @xmath4 , let @xmath115 , @xmath116 for @xmath117 . let @xmath118 be a @xmath108-set of non - zero integers .",
    "let @xmath119 be the binary word obtained from @xmath120 ( where `` @xmath121 '' is the concatenation operator ) followed by as many @xmath105 s as necessary to get length @xmath122 .",
    "note that we necessarily have @xmath123 since the pattern is doubled .",
    "eventually , to get @xmath94 , we append the factor @xmath124 to @xmath104 ; we add @xmath125 as the last element of @xmath107 ; finally we add @xmath119 as the last element of @xmath47 .",
    "* example : * let us give an example with @xmath38 , @xmath126 and @xmath127 $ ] .",
    "the variables of @xmath2 were initially ordered as @xmath128 . for the first @xmath129 steps , no occurrence of @xmath2 appeared ,",
    "so at each step @xmath130 , we append @xmath109 $ ] to @xmath110 and we append one @xmath105 to @xmath104 . hence , at step @xmath129 , we have :    * @xmath131 * @xmath132\\\\             x&=&[\\ ]          \\end{array } \\right.$ ]    now , at step @xmath133 , we first append @xmath134 = 1 $ ] to @xmath135 to get @xmath136 .",
    "the word @xmath136 contains an occurrence @xmath137 of @xmath2 which forms a factor of length @xmath138 ( the @xmath138 last letters of @xmath136 ) .",
    "then we set @xmath139 and @xmath140 ( this is @xmath141 followed by four @xmath105 s in order to get a binary word of length @xmath142 ) .",
    "eventually , to get @xmath143 and @xmath144 , we erase the suffix of length @xmath138 of @xmath136 to get @xmath143 , we append the factor @xmath145 to @xmath104 , @xmath125 to @xmath107 , and @xmath119 to @xmath47 .",
    "this gives :    * @xmath146 * @xmath147 \\\\",
    "x&=&[0111000000 ]          \\end{array } \\right.$ ]    this is where our example ends .",
    "let @xmath148 be the vector @xmath87 restricted to its @xmath92 first elements .",
    "we will show that the pair @xmath149 at some step @xmath92 allows to recover @xmath148 .    [ lem : inj ] after @xmath92 steps of the algorithm avoidpattern , the pair @xmath149 permits to recover @xmath148 .    before step 1 , we have @xmath150 , @xmath151,[\\     ] ) $ ] , and @xmath152 .",
    "let @xmath153 be the record after step @xmath92 , with @xmath154 .",
    "* suppose that @xmath105 is a suffix of @xmath104 .",
    "this means that at step @xmath92 , no occurrence of @xmath2 was found : the algorithm appended @xmath109 $ ] to @xmath110 to get @xmath91 .",
    "therefore @xmath109 $ ] is the last letter of @xmath91 , say @xmath11",
    ". then the word @xmath110 is obtained from @xmath91 by erasing the last letter and the record @xmath155 is obtained from @xmath94 by removing the suffix @xmath105 of @xmath104 .",
    "we recover @xmath156 from @xmath157 by induction hypothesis and we obtain @xmath158 .",
    "* suppose now that @xmath124 is a suffix of @xmath104 .",
    "this means that an occurrence @xmath41 of @xmath2 which forms a factor @xmath4 of length @xmath113 has been created during step @xmath92 .",
    "the last element @xmath125 of @xmath107 is a @xmath108-set @xmath118 and the last element @xmath119 of @xmath47 is a binary word of length @xmath122 .",
    "let @xmath159 and for @xmath160 , let @xmath161 .",
    "so , for @xmath162 , @xmath163 is clearly the length of the variable @xmath164 of @xmath2 in the occurrence @xmath41 by construction of @xmath125 .",
    "we know the pattern @xmath2 , the total length of the factor @xmath4 ( that is @xmath113 ) and the lengths of the @xmath165 first variables of @xmath2 in @xmath4 , so we are able to compute the length @xmath166 of the last variable @xmath167 .",
    "so we are now able to recover the occurrence @xmath41 of @xmath2 : the first @xmath168 letters of @xmath119 correspond to @xmath169 , the next @xmath170 letters correspond to @xmath171 and so on ( @xmath119 may contain some @xmath105 s at the end which are not relevant ) .",
    "it follows that the factor @xmath4 is completely determined .",
    "so @xmath110 is obtained from @xmath172 by removing the last letter @xmath11 of @xmath4 , this letter @xmath11 being @xmath109 $ ] ( the appended letter to @xmath110 at step @xmath92 to get @xmath111 ) .",
    "the record @xmath155 is obtained from @xmath94 as follows : remove the suffix @xmath124 from @xmath104 ; remove the last element of @xmath107 and the last element of @xmath47 .",
    "we recover @xmath156 from @xmath157 by induction hypothesis and we obtain @xmath158 .",
    "now we compute @xmath174 .",
    "let @xmath175 be a given record produced by an execution of avoidpattern .",
    "let @xmath176 , @xmath177 and @xmath178 be the set of such binary words @xmath104 , of such @xmath108-sets of non - zero integers @xmath107 , and of such vectors of binary words",
    "@xmath47 , respectively . we thus have @xmath179 , @xmath180 , and @xmath181 .",
    "the algorithm runs in @xmath15 steps . at each step ,",
    "one letter is appended to @xmath0 , so @xmath15 letters have been appended and therefore the number of erased letters during the execution of the algorithm is @xmath182 . at some steps , an occurrence of @xmath2 appears and forms a factor which is immediately erased .",
    "let @xmath183 be the number of erased factors during the execution of the algorithm .",
    "let @xmath184 , @xmath185 , be the @xmath183 erased factors .",
    "we have @xmath186 since each variable of @xmath2 is a non - empty word and @xmath2 has length at least @xmath82 . moreover , we have @xmath187 .",
    "each time a factor @xmath184 is erased , we add an element to @xmath107 and @xmath47 , so @xmath188 .      in the binary word @xmath104 , each @xmath105 corresponds to an appended letter during the execution of the algorithm and each @xmath106 corresponds to an erased letter .",
    "therefore , @xmath104 has length @xmath189 .",
    "observe that every prefix in @xmath104 contains at least as many @xmath105 s as @xmath106 s . indeed , since a @xmath106 corresponds to an erased letter @xmath11 , this letter @xmath11 had to be added first and thus there is a @xmath105 before that corresponds to this @xmath106 .",
    "the word @xmath104 is therefore a partial dyck word . since any erased factor @xmath184 has length at least @xmath82 , any maximal sequence of @xmath106 s ( which is called a _",
    "descent _ in the sequel ) in @xmath104 has length at least @xmath82 .",
    "so @xmath104 is a partial dyck words with @xmath15 @xmath105 s such that each descent has length at least @xmath82 .",
    "the following two lemmas due to esperet and parreau  @xcite give an upper bound on @xmath190 .",
    "let @xmath191 ( resp .",
    "@xmath192 ) be the number of partial dyck words with @xmath15 @xmath105 s and @xmath193 @xmath106 s ( resp .",
    "dyck words of length @xmath194 ) such that all descents have length at least @xmath195 .",
    "hence , we have @xmath196 .",
    "@xcite[louis1 ] @xmath197 .    hence , we have @xmath198 .",
    "let @xmath199 .",
    "@xcite[louis2 ] let @xmath195 be an integer such that the equation @xmath200 has a solution @xmath201 with @xmath202 , where @xmath203 is the radius of convergence of @xmath204 .",
    "then @xmath201 is the unique solution of the equation in the open interval @xmath205 .",
    "moreover , there exists a constant @xmath206 such that @xmath207 where @xmath208 .",
    "the solution of the equation @xmath209 is equivalent to @xmath210 .",
    "the radius of convergence @xmath203 of @xmath211 is @xmath106 and since @xmath212 and @xmath213 , @xmath214 has a solution @xmath201 in the open interval @xmath205 . by lemma  [ louis2 ] , this solution is unique and , for some constant @xmath215 , we have @xmath216 with @xmath217 .",
    "we clearly have @xmath218 .",
    "so , we can compute @xmath219 for @xmath195 fixed .",
    "we will use the following bounds : @xmath220 , @xmath221 , and @xmath222 . note that when @xmath195 increases , @xmath219 decreases .",
    "so , by lemmas  [ louis1 ] and  [ louis2 ] , when @xmath15 is large enough , we have @xmath223 ( resp .",
    "@xmath224 , @xmath225 ) if the length of any descent is at least @xmath129 ( resp .",
    "@xmath226 , @xmath227 ) .",
    "each element @xmath119 of @xmath47 corresponds to an erased factor @xmath184 and by construction @xmath228 .",
    "so the sum of the lengths of the elements of @xmath47 is @xmath229 .",
    "thus , the vector @xmath47 corresponds to a binary word of length at most @xmath230 .",
    "therefore @xmath231 .",
    "each element @xmath118 of @xmath107 corresponds to an erased factor @xmath184 and by construction each @xmath232 corresponds to the sum of the lengths of the @xmath85 first variables of @xmath2 in @xmath184 .",
    "let @xmath233 be the number of such @xmath108-sets @xmath125 that correspond to factors of length @xmath113 . recall that @xmath186 , so @xmath233 is defined for @xmath39 and @xmath234 .",
    "each of the @xmath183 elements of @xmath107 corresponds to an erased factor , so @xmath235 .",
    "let @xmath236 defined for @xmath39 and @xmath234 .",
    "then @xmath237 .",
    "so , if we are able to upper - bound @xmath238 by some constant @xmath239 for all @xmath234 , then we get @xmath240 .",
    "now we bound @xmath238 using two different methods depending on the value of @xmath7 and the length @xmath82 of @xmath2 .    [",
    "[ par : l1 ] ] bound on @xmath238 for @xmath241 , @xmath242  or  @xmath243 , @xmath244 + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    for any factor @xmath184 , we have @xmath245 since @xmath2 is doubled ( each variable appears at least twice ) . for a given @xmath118 that corresponds to some factor @xmath184",
    ", we have @xmath246 .",
    "therefore , @xmath125 is a @xmath108-set of distinct non - zero integers at most @xmath247 , i.e. @xmath165 integers chosen among integers between @xmath106 and @xmath247 ; thus @xmath248 and so @xmath249",
    ". we can upper - bound @xmath250 by @xmath251 for @xmath234 .",
    "the function @xmath252 is decreasing for @xmath234 ; so @xmath253 for all @xmath234 .",
    "moreover , we can see that @xmath254 for all @xmath243 .",
    "computing this upper bound , we get @xmath255 for all @xmath243 and @xmath256 and @xmath257 for all @xmath242 .",
    "[ [ par : l2 ] ] bound on @xmath258 for @xmath259 + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the second method to bound the size of @xmath258 is based on ordinary generating functions ( ogf ) . here , @xmath241 , so let @xmath260 be the four variables of @xmath2 and let @xmath261 be the number of apparitions of @xmath262 in @xmath2 .",
    "therefore , @xmath263 . recall that each variable appears at least twice in @xmath2 since @xmath2 is doubled , so @xmath264 .",
    "moreover , a factor of length @xmath113 , with @xmath265 , is necessarily an occurrence of a pattern of length between @xmath129 and @xmath266 .",
    "so we just have to consider patterns @xmath2 with @xmath267 .",
    "given @xmath268 an element of @xmath107 that corresponds to some factor @xmath184 , we can compute the lengths @xmath269 of each variable @xmath262 in @xmath184 ( @xmath270 , @xmath271 for @xmath272 and @xmath273 ) . recall that @xmath274 since each variable of @xmath2 is a non - empty word .",
    "let @xmath275 be the ogf of such sets @xmath125 , i.e. @xmath276 is the number of @xmath66-sets @xmath277 that corresponds to a factor of length @xmath92 formed by an occurrence of a pattern of length @xmath278 ( that is @xmath276 is the number of @xmath279-tuples @xmath280 with @xmath274 such that @xmath281 ) .",
    "so by definition of @xmath282 , we have @xmath283 .",
    "this kind of ogf has been studied and is similar to the well - known problem of counting the number of ways you can change a dollar  @xcite : you have only five types of coins ( pennies , nickels , dimes , quarters , and half dollars ) and you want to count the number of ways you can change any amount of cents .",
    "so , let @xmath284 be the ogf of the problem and thus any @xmath285 is the number of ways you can change @xmath92 cents .",
    "then , for example , @xmath286 corresponds to the number of ways you can change a dollar . here , @xmath287 .",
    "in our case , we have four coins , each of them has value @xmath261 ( so we can have different types of coins with the same value ) and each type of coins appears at least once ( since @xmath274 ) . thus we get @xmath288 .",
    "we use maple for our computation . for each @xmath289 , for each @xmath279-tuple @xmath290 such that @xmath291 , we consider the associated ogf @xmath292 and we compute , using maple , the truncated series expansion up to the order @xmath227 , that gives @xmath293 with explicit values for the coefficients @xmath276 .",
    "so , for any @xmath259 , @xmath258 is upper - bounded by the maximum of @xmath294 taken oven all @xmath292 .",
    "maple gives that @xmath294 is maximal for @xmath295 , @xmath296 , and @xmath297 : in this case , @xmath298 ( i.e. there exist @xmath299 distinct @xmath66-sets @xmath125 that correspond to some factor of length @xmath300 formed by an occurrence of a pattern of length @xmath129 ) .",
    "so , @xmath301 for all @xmath259 , @xmath241 and @xmath289 .    [ [ bound - gell - for - all - kge-4 ] ] bound @xmath302 for all @xmath39 + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we can deduce from paragraphs  [ par : l1 ] and  [ par : l2 ] the following .    if @xmath241 , then @xmath303 for @xmath265 and @xmath304 for @xmath242 .",
    "so for @xmath241 , we have @xmath305 .    if @xmath243 , then @xmath306 for @xmath234 .",
    "so for @xmath243 , we have @xmath307 .      aggregating the above analysis , we get the following . for @xmath243 , we have @xmath308 : then @xmath309 . for @xmath241",
    ", we have @xmath310 : then @xmath311 .",
    "thus for all @xmath39 , @xmath312 and so we obtained the desired contradiction : @xmath313",
    "in our results , we heavily use the fact that the patterns are doubled .",
    "the fact that the patterns are long is convenient for our proofs but does not seem so important .",
    "so we ask whether every doubled pattern is 3-avoidable . by the remarks in section  [ sec : intro ] and by lemma  [ k6doubled ] , the only remaining cases are doubled patterns with @xmath279 and @xmath314 variables .",
    "also , does there exist a finite @xmath7 such that every doubled pattern with at least @xmath7 variables is 2-avoidable ?",
    "we know that such a @xmath7 is at least 5 since abccbadd is not 2-avoidable .",
    "j.  berstel .",
    "axel thue s work on repetitions in words . invited lecture at the 4th conference on formal power series and algebraic combinatorics , montreal , 1992 , june 1992 .",
    "available at http://www-igm.univ-mlv.fr/  berstel / index.html ."
  ],
  "abstract_text": [
    "<S> in combinatorics on words , a word @xmath0 over an alphabet @xmath1 is said to avoid a pattern @xmath2 over an alphabet @xmath3 if there is no factor @xmath4 of @xmath0 such that @xmath5 where @xmath6 is a non - erasing morphism . </S>",
    "<S> a pattern @xmath2 is said to be @xmath7-avoidable if there exists an infinite word over a @xmath7-letter alphabet that avoids @xmath2 . </S>",
    "<S> we give a positive answer to problem 3.3.2 in lothaire s book `` algebraic combinatorics on words '' , that is , every pattern with @xmath7 variables of length at least @xmath8 ( resp . </S>",
    "<S> @xmath9 ) is 3-avoidable ( resp . </S>",
    "<S> 2-avoidable ) . </S>",
    "<S> this improves previous bounds due to bell and goh , and rampersad .    </S>",
    "<S> ,    word ; pattern avoidance . </S>"
  ]
}
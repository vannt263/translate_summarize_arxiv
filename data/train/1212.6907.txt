{
  "article_text": [
    "in the era of record breaking memory to memory throughput , dynamical behavior of internet protocols has become key to achieving predictability , optimal utilization of resources and dynamic stability in throughput allocation among participating agents / devices / entities .",
    "with the recent proposals of dctcp , d2tcp , ctcp , d3 etc , a new research area of super - optimal and dynamically oscillating behavior of transport protocols has been forging itself .",
    "we based our analysis and discrete time models in contrast to the early claims of periodic only behavior in dctcp and its different relatives and derivatives .",
    "we show again that discrete time models are the right framework to think about next generation successors of tcp and chaos remains a dominant phenomenon in the case of wildly fluctuating parameter ranges .",
    "in particular , we compare its dynamical behavior with switched power electronic circuits and impact oscillators .",
    "the objectives of our study are as follows : +    1 .",
    "build a discrete time mathematical model of dctcp - aqm interaction .",
    "2 .   use techniques from discrete time maps to analyze their behavior .",
    "3 .   simulate and demonstrate chaotic behavior .",
    "in this section we describe qualitatively the dctcp algorithm@xcite with its major algorithmic details so as to lay a foundation for our discrete modeling .",
    "we also describe the fact that d2tcp @xcite can be built upon dctcp through certain specific changes and we also argue that d2tcp is more general and that dctcp forms a special case of d2tcp .",
    "the marking scheme involves the use of only a single parameter @xmath0 .",
    "an arriving packet is marked with its ce ( congestion experienced ) bit set to 1 iff upon its arrival the instantaneous queue size is greater than @xmath1 .",
    "a difference between conventional tcp receivers and dctcp receiver is in the way the status of the incoming ce bits are conveyed back to the sender . for the dctcp receiver acks ( ack- acknowledgment packet )",
    "every single incoming packet and its ecn(external congestion notification)- echo flag bit set to 1 when a marked packet ( ce=1 ) is received .",
    "dctcp tries to convey the exact sequence of the received code points .",
    "this is accomplished by sending a delayed ack ( 1 cumulative ack for a set of m received packets ) which contains the sequence of ecn- echo flag based on last m incoming packets .",
    "thus the controller at the sender can make out the congestion status in the queue upon reception of the delayed ack .",
    "the sender maintains a running estimate of the fraction of packets that are marked .",
    "called @xmath2 , which is updated in every@xmath3 ( round trip time ) as follows : @xmath4 @xmath5 here is the weight associated to the marked fraction .",
    "@xmath6 is the fraction of packets marked and is given by the drop probability in the current window .",
    "given the fact that the sender receives marks for every packet sent when the queue length is higher than the threshold and does not receive any marks when the queue length is below threshold @xmath1 thus implies that @xmath7 estimates the probability that the queue size is greater than @xmath1 .",
    "essentially , @xmath7 close to 0 implies low levels of congestion and when close to 1 implies high levels of congestion .",
    "the only difference between a dctcp sender and a tcp sender is how each react on receiving the ack with ecn flag on . in the slow start",
    "phase the window size increases slowly in both the cases to estimate the available bandwidth .",
    "on receiving congestion notification the tcp always controls congestion by halving the window size and then slowly increasing additively in the congestion avoidance phase .",
    "where as in the dctcp scheme when it senses congestion the window size is modified as:@xmath8 thus the congestion extent determines the change in the window size .",
    "it is only slightly reduced at low levels of congestion and when congestion levels are high , say 1 then the congestion window is reduced by half as in tcp .",
    "_ this is the chief contribution of dctcp in maintaining a low queue length without compromising throughput_.    in deadline aware data center tcp ( d2tcp ) all the essential components of dctcp is kept same but the @xmath7 ( congestion history parameter ) is modified as : + @xmath9 where @xmath10 is the deadline factor .",
    "a high @xmath10 implies a closer deadline and a low value of @xmath10 implies far deadline .",
    "so dctcp is a special case of d2tcp with @xmath11 which implies long lived flows with no deadline .",
    "the red @xcite mechanism is available as an external congestion notification ( ecn ) mechanism in modern switches .",
    "this section gives a brief discussion on the red ( random early detection ) at the switch and the modification that needs to be made in order to support the dctcp queue management scheme without the need of extra external hardware .",
    "we present here a discrete model of the red system and the sampling interval is one rtt .",
    "the red module calculates exponentially weighted moving average of the queue size at the switch end .",
    "let @xmath12 be the exponential averaging weight and @xmath13 be the instantaneous queue size . on each packet arrival",
    "the red algorithm updates its average queue length @xmath14 to : @xmath15    if the average queue length is below a certain advertised threshold @xmath16 then the packet is admitted into the queue for subsequent transmission through the link and when it exceeds @xmath17 it is either dropped or marked as per requirement .",
    "if it lies in the range of @xmath18 and @xmath19 then it is dropped / marked with a probability @xmath20 given by : @xmath21      to implement dctcp packet marking strategy through red we need to :    1",
    ".   set @xmath22 2 .",
    "the decision making should be with respect to the instantaneous queue size @xmath23 instead of the average queue size .",
    "thus implementing the above becomes @xmath24 thus , gives us the hard control required in the case of dctcp algorithm .",
    "we model the d2tcp system along with its implicit congestion control mechanism at the switch implemented through available red module , as a discrete time map obtained by periodically sampling the system state .",
    "since window size and queue size behave as step functions of an rtt , one rtt is the sampling interval that captures their changes .",
    "based on the dctcp algorithm we propose our discrete model that takes window size and congestion history as state variables .",
    "we develop the expressions for a single active connection so as to present the dynamics of the queue size and study the effect of the changes of parameter on the it .",
    "the model can be extended without the loss of generality to @xmath25 synchronized connections .",
    "a complex network employing dctcp is essentially a feedback loop in which the senders adjust their rate by observing the rate of packet loss i. e by a feedback from the router .",
    "each flow at a router sends packets that are queued in the shallow buffer for subsequent transmission through the link .",
    "the packets are marked following a control strategy employed at the router end .",
    "dctcp employs a _",
    "bursty _ marking strategy at the router following .",
    "when the sender notices the packets are being marked it adjusts its sending rate accordingly , in the case of dctcp the window size is reduced following a congestion history parameter @xmath7 . the logical structure of dctcp congestion controller is given in figure 1 .",
    "this forms the basis of formulation of the discrete mathematics in subsequent sections and its physical implications .",
    "a similar analysis has been done in@xcite to model the behavior of tcp - red interaction .",
    "we make the following assumptions in our model .",
    "* there is one active connection and the connection is long lived that is , there is always sufficient data to send . *",
    "the ack packets are never lost .",
    "* round trip propagation delay in the link and the packet size is constant . *",
    "the state variables of the system are sampled at the end of every rtt interval . *",
    "the process starts with an empty buffer .",
    "we first model the dynamics of the window size @xmath26 using a discrete approximation of for more general d2tcp case .",
    "let @xmath27 , @xmath28 , @xmath29 and @xmath10 be the window size , instantaneous queue size , the weighted fraction of the marked packets and the deadline of the flow at the end of the @xmath30 sampling interval .",
    "the window size for the next interval is determined by the queue size in that interval , interval determines how many packets to schedule for transfer in the next interval so the window size in the @xmath31 interval participates in the queue generation in the @xmath32 interval ] it is given by : @xmath33    the queue size at the sampling period @xmath34 can be determined from the window size at @xmath35 and the queue size during @xmath31 interval as : @xmath36    in , @xmath37 gives the link capacity in packets / s .",
    "+ @xmath38 ; gives the round trip time at the @xmath32 interval + @xmath39- round trip propagation delay in the link + @xmath40-capacity and @xmath41 -packet size .    as the buffer is limited by its size @xmath42 . and",
    "a negative queue size has no meaning , we can set realistic bounds on @xmath43 as , @xmath44 the probabilistic _ bursty _ marking scheme at the switch remains .",
    "+ the congestion history parameter is updated every @xmath45 as , @xmath46 or alternatively , using , @xmath47      in this model as the instantaneous queue size is taken into consideration for the marking of packets so , the queue build up has no memory and depends only on the window size of the previous instant .",
    "thus , the queue size @xmath48 is not an independent parameter .",
    "the independent parameters are the congestion history ( @xmath29 ) and the window size ( @xmath27 ) .",
    "+ substituting in we have , @xmath49 and substituting in we have , @xmath50 thus , , give the map form that can be used to model the dynamics of the system .",
    "the map of @xmath26 has two distinct regions of operation separated by a border @xmath51 .",
    "this border on the instantaneous queue size reflects on the sender side as a new border : @xmath52 where @xmath53 . in the additive increase phase where if the @xmath27 is less than a threshold value @xmath54 implying , @xmath55 the definition of the map in says that the window size slowly increases and this additive increase is independant of @xmath7 . as a result of the additive increase",
    ", the window size after a certain time hits the threshold ( @xmath54 ) and the map becomes discontinuous as the control mechanism kicks in , making the evolution of the window dependent on both the state variables ( @xmath56 ) .",
    "the use of congestion history to determine the next window size when congestion is detected is the key feature of dctcp , thus a high @xmath29 implies a higher cut in the window size in the next stage and vice versa .",
    "these features of the evolution of the window size are demonstrated graphically in fig .",
    "the evolution of @xmath7 also follows a similar algorithm with borders playing the role for the discontinuity induced . the congestion history for the next step",
    "is determined using the knowledge of the queue size in the current step .",
    "as long as the system senses congestion i. e @xmath57 the congestion history successively increases , simultaneously window size multiplicatively decreases until it hits the border @xmath54 from the right side . when the @xmath27 becomes less than @xmath54 i. e",
    "no congestion feedback_,@xmath7 successively decreases and correspondingly window size goes into the additive increase phase until congestion arises again , i .",
    "e this time the congestion window hits the border @xmath54 from the left .",
    "thus , the congestion control system operates by successively switching between two subsystems as a result of the system states colliding with border values .",
    "this in turn leads to chaotic dynamics through _ border collision bifurcation _ as we will demonstrate later .",
    "the first and the second return maps for @xmath7 are given in fig .",
    "4 for the evolution of @xmath58 through successive iterations . for generating the maps we use , @xmath59,@xmath60,@xmath61,@xmath62,@xmath63 , @xmath64     and @xmath65 return map of @xmath7 when @xmath66 when k=15,width=226,height=151 ]     and @xmath65 return map of @xmath7 when @xmath66 when k=15,width=226,height=151 ]     and @xmath65 return map of @xmath7 when @xmath66 when k=15,width=226,height=151 ]",
    "the behavior of the map can be explored in parameter space numerically , in order to find interesting dynamical phenomena .",
    "a whole range of dynamical scenarios are presented in this section .",
    "the effect of the changes on the system described by _",
    "piecewise smooth discontinuous maps _ are reflected through _",
    "bifurcation diagrams_.      when the future state of a dynamical variable is dependent on a particular parameter(s ) then variation in the parameter(s ) would result in change in the dynamical behavior of the system on a whole .",
    "a bifurcation diagram shows the qualitative changes in the nature or the number of steady state solutions of the dynamical system as a parameter varies . on the horizontal axis we plot the parameter value .",
    "the vertical axis displays a measure of the corresponding fixed points or periodic orbits , which coincides with the queue build up in the present context .",
    "the way to read a bifurcation diagram is to fix a point in the horizontal axis and draw a vertical line through it . the number of points where the bifurcation curve intersects the vertical line gives us the number of equilibrium points in that given configuration .",
    "a single point implies there is a stable fixed point and multiple points imply a periodic long - term behavior of the system .",
    "we investigate the dynamical behavior of the instantaneous queue size in a dctcp ( d2tcp ) system with a single connection when the parameters like marked fraction weight ( @xmath5),the round trip propagation delay ( @xmath67),deadline(@xmath10 ) and the marking threshold ( @xmath1 ) are varied .",
    "we draw the bifurcation diagram by plotting the successive maxima and minima of the instantaneous queue size(in packets ) against a parameter setup .",
    "other system parameters are kept fixed at :    @xmath68 .",
    "we present the bifurcation diagram with @xmath5 as the bifurcation parameter which varies from 0 .",
    "001 to 0 . 1 through a step size of 0 .",
    "0001 , and other parameters are given as .",
    "+ case 1 : + when @xmath59 ; @xmath69 ; k=20 in fig .",
    "5 + case 2 : + when @xmath59 ; @xmath70 ; k=20 in fig . 6     as the bifurcation parameter and @xmath71,width=264,height=170 ]     as the bifurcation parameter and @xmath71,width=264,height=170 ]    in the bifurcation diagram for parameter setup in case 1 . as the round trip delay is very small so the packet marks are fed - back faster so we should expect stable dynamical behaviour .",
    "the bifurcation diagram of the system has a wide range of @xmath5 for which stable periodic solutions exist which is shown by the region of the diagram which has a finite number of fixed points . like",
    "the region having 6 fixed points correspond to a stable period-3 orbit in the time series plot of the queue size .",
    "but for a range of @xmath5 we have bounded but locally unstable range of fixed points , that generates a band like structure in the diagram for the corresponding ranges .    in case 2 .",
    "the delay is made larger so the feedback system is slow .",
    "this gives rises to more complicated dynamics .",
    "the periodic windows disappear , the amplitude of oscillations increase and ranges of @xmath5 for chaotic oscillation increases .",
    "this complication in behaviour as the delay is increased is consistent with the results in @xcite@xcite .",
    "the round trip delay(d ) is the parameter which varies quite a lot in practical networking scenarios .",
    "we draw the bifurcation diagram ( fig .",
    "7 ) for delay varying from the range of @xmath72 to @xmath73 .",
    "other parameters set up as : + @xmath74 +     with @xmath5 as the bifurcation parameter and @xmath75,width=302,height=170 ]     with @xmath5 as the bifurcation parameter and @xmath75 ]     with @xmath5 as the bifurcation parameter and @xmath75,width=302,height=170 ]    here in this case we see stable operation of the system when the delay is small and it generates complicated dynamical behavior when the delay increases .",
    "when the delay is large , the queue dynamics locks on several periodic attractors interleaved with ranges where cascades of bifurcations leading to higher periodic solutions may be detected .",
    "we present the bifurcation diagram with @xmath1 as the bifurcation parameter(fig . 8) which varies from 5 to 25 through a step size of 0.01 , and other parameters",
    "are given as .",
    "+ @xmath77 + in this case we see similar behavior in the bifurcation diagram i. e the system alternating between stable periodic orbits and then locking on to high periodic orbits through period adding cascades as @xmath1 is varied .",
    "we draw the bifurcation diagram of @xmath29 with respect to the marked fraction weight ( @xmath5 ) other parameters set as @xmath59 and @xmath79 ( fig .",
    "@xmath5 varies from 0.001 to 0.2 through a step size of 0.0001 .",
    "we see a novel type of bifurcation diagram which has a chaotic regime at low values of @xmath5 and shows high periodic orbits of @xmath7 and larger amplitude of oscillation at higher values of @xmath5 .",
    "this result is consistent with the relation defined in .",
    "the bifurcation diagram changes form as other parameters like delay(@xmath67 ) , @xmath80 etc .",
    "are varied .      here",
    "we show the actual time series evolution of the state variables for two different cases .",
    "one for a stable periodic regime and other for a chaotic regime .",
    "we also demonstrate the congestion control mechanism through _ cobweb diagrams _ of the evolution of the window size .",
    "+ case 1 : we take @xmath81 .",
    "the state space plots are given in fig .",
    "as per the bifurcation diagrams the time series plots show a period 3 oscillatory behavior for all the variables .",
    "+ case 2 : we take @xmath82 .",
    "the state space plots are given in fig .",
    "12 .     when @xmath83 showing chaotic dynamics ]     when @xmath83 showing chaotic dynamics ]     when @xmath83 showing chaotic dynamics ]     when @xmath83 showing chaotic dynamics ]    the cobweb diagram is widely employed to study the qualitative behavior of a map and it is possible to infer the long term status of an initial condition under repeated application of a map using it .",
    "a cobweb diagram demonstrates graphically the successive mappings of the chosen state variable , in our case @xmath84 . to plot the cobweb diagram",
    "we evolve the dynamical system starting from arbitrary initial condition and a given parameter setup long enough for it ( if at all ) to reach steady state behavior .",
    "taking , the last n points of the steady state response of the chosen variable@xmath85 , the successive mappings can be graphically shown by iteratively joining the points(@xmath86),(@xmath87),(@xmath88 ) , where @xmath89 .",
    "the number of lobes in the cobweb diagram communicates the period of steady state oscillation . the cobweb diagram for _",
    "case:1 _ is given in fig .",
    "it shows 3 lobes thus implying a steady state period 3 behavior under the given circumstances .",
    "the cobweb diagram for__case:2 _ _ is given in fig .",
    "it shows multiple lobes thus implying a very high periodicity and even possibly chaotic dynamics of the evolution of the window size .",
    "nonlinear phenomena has been observed before in computer and telecommunication networks and our current work shows that even the most advanced next generation network protocols continue to display fully developed chaos which is in stark contrast with claims of global stable multi - frequency limit cycle behavior of the dctcp system @xcite . to make it mathematically precise ,",
    "almost all network protocols like tcp and their dynamics can be understood in terms of the iterations of the two - dimensional , piecewise nonlinear , discontinuous map which is formulated , analyzed and simulated in this work .",
    "the nature of the bifurcations reported here has a resemblance to the _ corner bifurcations _ reported in @xcite which is observed in impact oscillators and it also shows similarity with chaotic behavior observed earlier in current controlled boost converters@xcite .",
    "future work involves demonstrating the dtcp chaos in dynamics@xcite / ns-3@xcite , in hardware and development of a new class of protocols for rock - stable and super - efficient operation over wildly fluctuating parameter regions .",
    "99 m. alizadeh , a. greenberg , d. a. maltz , j. padhye , p. patel , b. prabhakar , s. sengupta , and m. sridharan .",
    "data center tcp ( dctcp ) . in _ proceedings of sigcomm 10",
    "_ , , new york , ny , usa , 2010 .",
    "vamanan , balajee , jahangir hasan , and t. n. vijaykumar .",
    "`` deadline - aware datacenter tcp ( d2tcp ) . '' _ acm sigcomm computer communication review 42 . 4 ( 2012 )",
    ": _ 115 - 126 . s. floyd and v. jacobson .",
    "random early detection gateways for congestion avoidance .",
    "_ ieee / acm ton , 1993 .",
    "_ liu , m. , marciello , a. , di bernardo , m. , & trajkovi , l. ( 2006 , may ) .",
    "discontinuity - induced bifurcations in tcp / red communication algorithms . in circuits and systems , 2006 .",
    "iscas 2006 . _ proceedings .",
    "2006 ieee international symposium on ( pp .",
    "ieee_. p. ranjan , e. h. abed , and r. j. la , `` nonlinear instabilities in tcp - red , '' _ ieee / acm trans .",
    "networking , vol .",
    "6 , _ pp . 1079 - 1092 , dec .",
    "2004 p. ranjan , r. j. la and e. h. abed , `` global stability conditions for rate control with an arbitrary communication delay,'' _ ieee/ acm transactions on networking , vol .",
    "14 , no . 1 , _ pp .",
    "94 - 107 , feb . 2006 .",
    "alizadeh , mohammad , adel javanmard , and balaji prabhakar .",
    "`` analysis of dctcp : stability , convergence , and fairness . ''",
    "_ proceedings of the acm sigmetrics joint international conference on measurement and modeling of computer systems .",
    "acm , 2011 .",
    "_ budd , chris j. , and petri t. piiroinen .",
    "`` corner bifurcations in non - smoothly forced impact oscillators . ''",
    "_ physica d : nonlinear phenomena 220 . 2 ( 2006 ) _",
    ": 127 - 145 .",
    "banerjee , s. , ranjan , p. , & grebogi , c. ( 2000 ) .",
    "bifurcations in two - dimensional piecewise smooth maps - theory and applications in switching circuits .",
    "_ circuits and systems i : fundamental theory and applications , ieee transactions on , 47(5 ) _ , 633 - 643 ."
  ],
  "abstract_text": [
    "<S> in the era of heavy - duty transmission control protocols ( tcp ) , adapted for extremely hi - bandwidth data - centers ; the fundamental question of stable interaction with either proposed / customized active queue management(aqm ) or popularly discussed random early detection ( red ) remains a hotly debated issue . while there are claims of `` oscillation '' only dynamical behavior , there are equally large number of claims which demonstrate the chaotic nature of different flavors of tcp and their aqm interaction . in this work , </S>",
    "<S> we provide a sound and analytical mathematical model of dtcp / d2tcp and study their interaction with threshold based packet marking policy . </S>",
    "<S> our work shows that for a simple scenario this interaction is chaotic in nature and has large variability in dynamical behavior over orders of magnitude changes in parameter range as demonstrated by bifurcation diagrams . </S>",
    "<S> we conclude with numerical simulation evidence that chaotic behavior of protocols is inherent in their design which they inherit from their early vanilla tcp days , and it has serious implications for data - center throughput , load batching and collapse in incast kind of scenario . </S>"
  ]
}